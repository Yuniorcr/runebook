<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="php">
    <body>
      <group id="php">
        <trans-unit id="193293450c1df8b662c13455f01982af0f921eac" translate="yes" xml:space="preserve">
          <source>Arrays &amp;rarr;</source>
          <target state="translated">数组&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="f00420780a347a050214138188b8ca7ead6eea3b" translate="yes" xml:space="preserve">
          <source>Arrays and objects &lt;em&gt;can not&lt;/em&gt; be used as keys. Doing so will result in a warning: &lt;code&gt;Illegal offset type&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad00633798cdf2e2cbfa0dfdb987ebc78b3e41a" translate="yes" xml:space="preserve">
          <source>Arrays and objects are considered equal to zero when calculating the sum.</source>
          <target state="translated">计算总和时,数组和对象被认为等于零。</target>
        </trans-unit>
        <trans-unit id="b41538388a5699198e53fbe61e636209c9310357" translate="yes" xml:space="preserve">
          <source>Arrays are always converted to the string&lt;code&gt;&quot;Array&quot;&lt;/code&gt;; because of this, &lt;a href=&quot;function.echo&quot;&gt;echo&lt;/a&gt; and &lt;a href=&quot;function.print&quot;&gt;print&lt;/a&gt; can not by themselves show the contents of an array. To view a single element, use a construction such as &lt;code&gt;echo $arr['foo']&lt;/code&gt;. See below for tips on viewing the entire contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e2026f318ea92a46e4716d9d829d51fb90894b" translate="yes" xml:space="preserve">
          <source>Arrays are ordered. The order can be changed using various sorting functions. See the &lt;a href=&quot;https://www.php.net/manual/en/ref.array.php&quot;&gt;array functions&lt;/a&gt; section for more information. The &lt;a href=&quot;function.count&quot;&gt;count()&lt;/a&gt; function can be used to count the number of items in an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89cd641ffc804098360d49d8509075b45e50fc0f" translate="yes" xml:space="preserve">
          <source>Arrays from which elements will be extracted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5057d717f0d84d04c53c3d4cdae5816a06db5536" translate="yes" xml:space="preserve">
          <source>Arrays from which elements will be extracted. Values from later arrays overwrite the previous values.</source>
          <target state="translated">从数组中提取元素。从后面的数组中提取的值会覆盖前面的值。</target>
        </trans-unit>
        <trans-unit id="55bc132b702eaa2256102ddc24a55abead907b7d" translate="yes" xml:space="preserve">
          <source>Arrays to compare against</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6faa24200bc188d42f6a5d0f647bb10d85a214c" translate="yes" xml:space="preserve">
          <source>Arrays to compare against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579bc3541992b64849299430d9d86330a9e26b96" translate="yes" xml:space="preserve">
          <source>Arrays to compare keys against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b8aa1cf8a7ffa9053bf6d496efe60777e28db2" translate="yes" xml:space="preserve">
          <source>Arrays to compare values against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a14c0392b304f27cfa491b41ab00cc269ad8f3" translate="yes" xml:space="preserve">
          <source>Arrays, which are valid callables, are allowed as variable functions.</source>
          <target state="translated">数组,是有效的可调用函数,允许作为变量函数。</target>
        </trans-unit>
        <trans-unit id="2eff12655bfd37e8aba34fc4ce9e8a7b43bbf939" translate="yes" xml:space="preserve">
          <source>Arrow Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423ac3d3e3325638dce913070553cd91225885d8" translate="yes" xml:space="preserve">
          <source>Arrow functions became available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c1c727f07d4b5800dfaa05a20f49f7e5e868bd" translate="yes" xml:space="preserve">
          <source>Arrow functions have the basic form &lt;code&gt;fn (argument_list) =&amp;gt; expr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd68cac3427fa43d636faae6f7b1b6832521d41" translate="yes" xml:space="preserve">
          <source>Arrow functions support the same features as &lt;a href=&quot;functions.anonymous&quot;&gt;anonymous functions&lt;/a&gt;, except that using variables from the parent scope is always automatic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0f0bbc27f2016ee36a8deeb81909e53f788c7d" translate="yes" xml:space="preserve">
          <source>Arrow functions use by-value variable binding. This is roughly equivalent to performing a &lt;code&gt;use($x)&lt;/code&gt; for every variable &lt;var&gt;$x&lt;/var&gt; used inside the arrow function. A by-value binding means that it is not possible to modify any values from the outer scope. &lt;a href=&quot;functions.anonymous&quot;&gt;Anonymous functions&lt;/a&gt; can be used instead for by-ref bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e1c39a720b711debf39fd65a92466cb8edb6b7" translate="yes" xml:space="preserve">
          <source>Arrow functions were introduced in PHP 7.4 as a more concise syntax for &lt;a href=&quot;functions.anonymous&quot;&gt;anonymous functions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a76a0bc63a506f3f30aeabd35d81974d23b4d0" translate="yes" xml:space="preserve">
          <source>As &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt; variables hold special handles to opened files, database connections, image canvas areas and the like, converting to a &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt; makes no sense.</source>
          <target state="translated">由于&lt;a href=&quot;language.types.resource&quot;&gt;资源&lt;/a&gt;变量对打开的文件，数据库连接，图像画布区域等具有特殊的句柄，因此转换为&lt;a href=&quot;language.types.resource&quot;&gt;资源&lt;/a&gt;没有任何意义。</target>
        </trans-unit>
        <trans-unit id="3e2e5c40b7f5a78b78e478764cc2bf05ef960df0" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;switch&lt;/code&gt; statements, &lt;code&gt;match&lt;/code&gt; expressions are executed match arm by match arm. In the beginning, no code is executed. The conditional expressions are only evaluated if all previous conditional expressions failed to match the subject expression. Only the return expression corresponding to the matching conditional expression will be evaluated. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c1729d182d1c489eb4b282de8851b224b74e14" translate="yes" xml:space="preserve">
          <source>As &lt;em&gt;foreach&lt;/em&gt; relies on the internal array pointer in PHP 5, changing it within the loop may lead to unexpected behavior.</source>
          <target state="translated">由于&lt;em&gt;foreach&lt;/em&gt;依赖于PHP 5中的内部数组指针，因此在循环中对其进行更改可能会导致意外行为。</target>
        </trans-unit>
        <trans-unit id="dac40081b6f6d0c37864e800eb6c8af39788cacf" translate="yes" xml:space="preserve">
          <source>As &lt;strong&gt;idate()&lt;/strong&gt; always returns an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; and as they can't start with a &quot;0&quot;, &lt;strong&gt;idate()&lt;/strong&gt; may return fewer digits than you would expect. See the example below.</source>
          <target state="translated">由于&lt;strong&gt;idate（）&lt;/strong&gt;始终返回&lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt;，并且它们不能以&amp;ldquo; 0&amp;rdquo;开头，因此&lt;strong&gt;idate（）&lt;/strong&gt;返回的位数可能少于您的预期。请参见下面的示例。</target>
        </trans-unit>
        <trans-unit id="7f1a1056f29309de1520eece2e20724347726c67" translate="yes" xml:space="preserve">
          <source>As &lt;strong&gt;idate()&lt;/strong&gt; always returns an int and as they can't start with a &quot;0&quot;, &lt;strong&gt;idate()&lt;/strong&gt; may return fewer digits than you would expect. See the example below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba22553d46d69c51ddeb2fc19c181ce8e3ac1bf" translate="yes" xml:space="preserve">
          <source>As &lt;strong&gt;mysqli_fetch_all()&lt;/strong&gt; returns all the rows as an array in a single step, it may consume more memory than some similar functions such as &lt;a href=&quot;mysqli-result.fetch-array&quot;&gt;mysqli_fetch_array()&lt;/a&gt;, which only returns one row at a time from the result set. Further, if you need to iterate over the result set, you will need a looping construct that will further impact performance. For these reasons &lt;strong&gt;mysqli_fetch_all()&lt;/strong&gt; should only be used in those situations where the fetched result set will be sent to another layer for processing.</source>
          <target state="translated">由于&lt;strong&gt;mysqli_fetch_all（）&lt;/strong&gt;在单个步骤&lt;strong&gt;中将&lt;/strong&gt;所有行作为数组返回，因此它可能比某些类似函数（如&lt;a href=&quot;mysqli-result.fetch-array&quot;&gt;mysqli_fetch_array（））&lt;/a&gt;消耗更多的内存，后者仅一次从结果集中返回一行。此外，如果需要遍历结果集，则将需要一个循环结构，这将进一步影响性能。由于这些原因，&lt;strong&gt;mysqli_fetch_all（）&lt;/strong&gt;仅应在将获取的结果集发送到另一层进行处理的情况下使用。</target>
        </trans-unit>
        <trans-unit id="a329194c41a784ee23cce6ffe84a20f82ccf70cb" translate="yes" xml:space="preserve">
          <source>As PHP's &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; type is signed, but &lt;strong&gt;dechex()&lt;/strong&gt; deals with unsigned integers, negative integers will be treated as though they were unsigned.</source>
          <target state="translated">由于PHP的&lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt;类型是带符号的，但是&lt;strong&gt;dechex（）&lt;/strong&gt;处理无符号的整数，因此负整数将被视为无符号整数。</target>
        </trans-unit>
        <trans-unit id="64ff3af4159387d35fb708c65aede0db3ce40b9e" translate="yes" xml:space="preserve">
          <source>As PHP's int type is signed, but &lt;strong&gt;dechex()&lt;/strong&gt; deals with unsigned integers, negative integers will be treated as though they were unsigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cfdc220eeee6308b5488a46fa0a15985f80dc66" translate="yes" xml:space="preserve">
          <source>As a convenient shorthand, if any option settings are required at the start of a non-capturing subpattern, the option letters may appear between the &quot;?&quot; and the &quot;:&quot;. Thus the two patterns</source>
          <target state="translated">作为一种方便的速记,如果在一个非捕获子模式的开头需要任何选项设置,选项字母可以出现在&quot;? &quot;和&quot;:&quot;之间。因此,这两种模式</target>
        </trans-unit>
        <trans-unit id="b89a3a1cb6343c744409528bb467fc498774f2d6" translate="yes" xml:space="preserve">
          <source>As a side effect, setting a zero mousemask in &lt;code&gt;newmask&lt;/code&gt; turns off the mouse pointer. Setting a non zero value turns mouse pointer on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd34297c16fff75e89c24c4ecee1f8b7f43579b" translate="yes" xml:space="preserve">
          <source>As a side effect, the rows property of the query-result object is incremented for each successful call to &lt;strong&gt;dbx_fetch_row()&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d14c00ec2dac16a1d11f5861a0625269766c42" translate="yes" xml:space="preserve">
          <source>As a workaround, you can use the &lt;a href=&quot;function.easter-days&quot;&gt;easter_days()&lt;/a&gt; with &lt;a href=&quot;class.datetime&quot;&gt;DateTime&lt;/a&gt; and &lt;a href=&quot;class.dateinterval&quot;&gt;DateInterval&lt;/a&gt; to calculate the start of Easter in your PHP time zone as follows:</source>
          <target state="translated">解决方法是，可以将&lt;a href=&quot;function.easter-days&quot;&gt;Easter_days（）&lt;/a&gt;与&lt;a href=&quot;class.datetime&quot;&gt;DateTime&lt;/a&gt;和&lt;a href=&quot;class.dateinterval&quot;&gt;DateInterval&lt;/a&gt;一起使用，以计算PHP时区中Easter的开始，如下所示：</target>
        </trans-unit>
        <trans-unit id="cbcf5f57b082c563c8169d696d8f5848ffc9e4db" translate="yes" xml:space="preserve">
          <source>As all the keys in the above example are cast to &lt;code&gt;1&lt;/code&gt;, the value will be overwritten on every new element and the last assigned value &lt;code&gt;&quot;d&quot;&lt;/code&gt; is the only one left over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd217b6172eabc149f1fbb6a011cb601bbb9bf5" translate="yes" xml:space="preserve">
          <source>As all the keys in the above example are cast to &lt;em&gt;1&lt;/em&gt;, the value will be overwritten on every new element and the last assigned value &lt;em&gt;&quot;d&quot;&lt;/em&gt; is the only one left over.</source>
          <target state="translated">由于上述示例中的所有键都强制转换为&lt;em&gt;1&lt;/em&gt;，因此该值将在每个新元素上被覆盖，最后分配的值&lt;em&gt;&amp;ldquo; d&amp;rdquo;&lt;/em&gt;是剩下的唯一一个值。</target>
        </trans-unit>
        <trans-unit id="595fa836d8df5490ae5ad8e10e25b77f55ab8c03" translate="yes" xml:space="preserve">
          <source>As an alternative, we can implement an &lt;code&gt;xrange()&lt;/code&gt; generator, which will only ever need enough memory to create an &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; object and track the current state of the generator internally, which turns out to be less than 1 kilobyte.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c57603349e8c574b28d490ac3f381f26a3c4e1ed" translate="yes" xml:space="preserve">
          <source>As an alternative, we can implement an &lt;em&gt;xrange()&lt;/em&gt; generator, which will only ever need enough memory to create an &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; object and track the current state of the generator internally, which turns out to be less than 1 kilobyte.</source>
          <target state="translated">作为替代方案，我们可以实现&lt;em&gt;xrange（）&lt;/em&gt;生成器，该生成器仅需要足够的内存来创建&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt;对象并在内部跟踪生成器的当前状态，结果该状态小于1 KB。</target>
        </trans-unit>
        <trans-unit id="bbb553a6aa677aae90c4626ea4608c977481f3f9" translate="yes" xml:space="preserve">
          <source>As an exception, if the value is a string and both int and float are part of the union, the preferred type is determined by the existing &amp;ldquo;numeric string&amp;rdquo; semantics. For example, for &lt;code&gt;&quot;42&quot;&lt;/code&gt;int is chosen, while for &lt;code&gt;&quot;42.0&quot;&lt;/code&gt;float is chosen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc93b8a1f064a5aa50fd940f766f071daf8a690a" translate="yes" xml:space="preserve">
          <source>As an interesting note, &lt;strong&gt;Phar::buildFromIterator()&lt;/strong&gt; can also be used to copy the contents of an existing phar archive, as the Phar object descends from &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt;:</source>
          <target state="translated">有趣的是，由于Phar对象从&lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator &lt;/a&gt;&lt;strong&gt;继承而来&lt;/strong&gt;，&lt;strong&gt;Phar :: buildFromIterator（）&lt;/strong&gt;也可用于复制现有phar存档的内容：</target>
        </trans-unit>
        <trans-unit id="e0eba7c1d87450eb2809e9bbf1f767e34c2f8ca7" translate="yes" xml:space="preserve">
          <source>As an interesting note, &lt;strong&gt;PharData::buildFromIterator()&lt;/strong&gt; can also be used to copy the contents of an existing phar, tar or zip archive, as the PharData object descends from &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt;:</source>
          <target state="translated">有趣的是，&lt;strong&gt;PharData :: buildFromIterator（）&lt;/strong&gt;也可以用于复制现有phar，tar或zip归档文件的内容，因为PharData对象是从&lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt;继承的：</target>
        </trans-unit>
        <trans-unit id="6cce3fb996ac5a9b6f760245a81d8df33b4c0f95" translate="yes" xml:space="preserve">
          <source>As certain types have undefined behavior when converting to int, this is also the case when converting to float.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbbb919a712027a68824ee47b6981465ddff276e" translate="yes" xml:space="preserve">
          <source>As described in &lt;a href=&quot;language.expressions&quot;&gt;the section about expressions&lt;/a&gt;, expression is evaluated to its Boolean value. If expression evaluates to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, PHP will execute statement, and if it evaluates to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; - it'll ignore it. More information about what values evaluate to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; can be found in the &lt;a href=&quot;language.types.boolean#language.types.boolean.casting&quot;&gt;'Converting to boolean'&lt;/a&gt; section.</source>
          <target state="translated">如&lt;a href=&quot;language.expressions&quot;&gt;有关表达式的部分&lt;/a&gt;所述，表达式将被评估为其布尔值。如果expression的计算结果为&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;，PHP将执行语句，如果它的计算结果为&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;，它将忽略它。有关哪些值评估为&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 的&lt;/strong&gt;更多信息，请参见&lt;a href=&quot;language.types.boolean#language.types.boolean.casting&quot;&gt;&amp;ldquo;转换为布尔值&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="b81bf47dd2ed92b61ca9dbcb727ac6a9defbf4f0" translate="yes" xml:space="preserve">
          <source>As described in &lt;a href=&quot;language.expressions&quot;&gt;the section about expressions&lt;/a&gt;, expression is evaluated to its Boolean value. If expression evaluates to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, PHP will execute statement, and if it evaluates to &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; - it'll ignore it. More information about what values evaluate to &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; can be found in the &lt;a href=&quot;language.types.boolean#language.types.boolean.casting&quot;&gt;'Converting to boolean'&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475811bb89d882eb446b58ba5bd203f575023148" translate="yes" xml:space="preserve">
          <source>As directives are handled as the file is being compiled, only literals may be given as directive values. Variables and constants cannot be used. To illustrate:</source>
          <target state="translated">由于指令是在编译文件时处理的,所以只能将字面值作为指令值。不能使用变量和常量。举例说明一下。</target>
        </trans-unit>
        <trans-unit id="1eb89e8e040b5bb331c4e0461ce8490e82979a5d" translate="yes" xml:space="preserve">
          <source>As in &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt; (&lt;code&gt;rb&lt;/code&gt; or &lt;code&gt;wb&lt;/code&gt;) but can also include a compression level (&lt;code&gt;wb9&lt;/code&gt;) or a strategy: &lt;code&gt;f&lt;/code&gt; for filtered data as in &lt;code&gt;wb6f&lt;/code&gt;, &lt;code&gt;h&lt;/code&gt; for &lt;code&gt;Huffman only compression&lt;/code&gt; as in &lt;code&gt;wb1h&lt;/code&gt;. (See the description of &lt;code&gt;deflateInit2&lt;/code&gt; in &lt;var&gt;zlib.h&lt;/var&gt; for more information about the strategy parameter.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7918dc9dd63c2441abdf44b439adfde1a71f1249" translate="yes" xml:space="preserve">
          <source>As in &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt; (&lt;em&gt;rb&lt;/em&gt; or &lt;em&gt;wb&lt;/em&gt;) but can also include a compression level (&lt;em&gt;wb9&lt;/em&gt;) or a strategy: &lt;em&gt;f&lt;/em&gt; for filtered data as in &lt;em&gt;wb6f&lt;/em&gt;, &lt;em&gt;h&lt;/em&gt; for &lt;em&gt;Huffman only compression&lt;/em&gt; as in &lt;em&gt;wb1h&lt;/em&gt;. (See the description of &lt;em&gt;deflateInit2&lt;/em&gt; in &lt;var&gt;zlib.h&lt;/var&gt; for more information about the strategy parameter.)</source>
          <target state="translated">与&lt;a href=&quot;function.fopen&quot;&gt;fopen（）&lt;/a&gt;（&lt;em&gt;rb&lt;/em&gt;或&lt;em&gt;wb&lt;/em&gt;）中一样，但也可以包括压缩级别（&lt;em&gt;wb9&lt;/em&gt;）或策略：&lt;em&gt;f&lt;/em&gt;对于&lt;em&gt;wb6f中的&lt;/em&gt;过滤数据，&lt;em&gt;h&lt;/em&gt;对于&lt;em&gt;Huffman仅压缩，&lt;/em&gt;如&lt;em&gt;wb1h中&lt;/em&gt;。（见的描述&lt;em&gt;deflateInit2&lt;/em&gt;在 &lt;var&gt;zlib.h&lt;/var&gt; 有关策略参数的更多信息）。</target>
        </trans-unit>
        <trans-unit id="abccff45e8d574adf61eef7c1a55c7f58112ba36" translate="yes" xml:space="preserve">
          <source>As in C or Perl, PHP requires instructions to be terminated with a semicolon at the end of each statement. The closing tag of a block of PHP code automatically implies a semicolon; you do not need to have a semicolon terminating the last line of a PHP block. The closing tag for the block will include the immediately trailing newline if one is present.</source>
          <target state="translated">就像在C或Perl中一样,PHP要求在每条语句的最后用分号结束。PHP代码块的结束标签自动地暗示了分号;你不需要在PHP代码块的最后一行用分号结束。代码块的结束标签将包括紧随其后的换行符,如果有的话。</target>
        </trans-unit>
        <trans-unit id="8210401696a99cbb69717b67cd62e21f6f720e4d" translate="yes" xml:space="preserve">
          <source>As in Perl, you can access a value from the array inside double quotes. However, with PHP you'll need to enclose your array between curly braces.</source>
          <target state="translated">就像在Perl中一样,你可以在双引号中访问数组中的一个值。然而,在 PHP 中,你需要用大括号将数组括起来。</target>
        </trans-unit>
        <trans-unit id="184bcfca2614d971cd5434f53ddb2344c626b04d" translate="yes" xml:space="preserve">
          <source>As in single quoted &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;s, escaping any other character will result in the backslash being printed too. Before PHP 5.1.1, the backslash in &lt;em&gt;\{$var}&lt;/em&gt; had not been printed.</source>
          <target state="translated">与单引号&lt;a href=&quot;language.types.string&quot;&gt;字符串&lt;/a&gt; s一样，转义任何其他字符也将导致反斜杠也被打印。在PHP 5.1.1之前，尚未打印&lt;em&gt;\ {$ var}中&lt;/em&gt;的反斜杠。</target>
        </trans-unit>
        <trans-unit id="5a14b560de7a6409320c3ce58dda6da96958b707" translate="yes" xml:space="preserve">
          <source>As in single quoted strings, escaping any other character will result in the backslash being printed too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a164916607c474c07cbc1fbf5ba221c5d02b37c" translate="yes" xml:space="preserve">
          <source>As mentioned above, if no key is specified, the maximum of the existing &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; indices is taken, and the new key will be that maximum value plus 1 (but at least 0). If no &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; indices exist yet, the key will be &lt;em&gt;0&lt;/em&gt; (zero).</source>
          <target state="translated">如上所述，如果未指定键，则采用现有&lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt;索引的最大值，并且新键将是该最大值加1（但至少为0）。如果尚无&lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt;索引，则键将为&lt;em&gt;0&lt;/em&gt;（零）。</target>
        </trans-unit>
        <trans-unit id="a4a0bcb960c8cbd4784c5001494b738b9ef8bd0f" translate="yes" xml:space="preserve">
          <source>As mentioned above, if no key is specified, the maximum of the existing int indices is taken, and the new key will be that maximum value plus 1 (but at least 0). If no int indices exist yet, the key will be &lt;code&gt;0&lt;/code&gt; (zero).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6561019725782dd28ce950a75f522adf7edc7281" translate="yes" xml:space="preserve">
          <source>As noted above, providing the &lt;code&gt;salt&lt;/code&gt; option in PHP 7.0 will generate a deprecation warning. Support for providing a salt manually may be removed in a future PHP release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bef17ca160a3a89abf839641cafed8bb7fc8f65" translate="yes" xml:space="preserve">
          <source>As noted above, providing the &lt;em&gt;salt&lt;/em&gt; option in PHP 7.0 will generate a deprecation warning. Support for providing a salt manually may be removed in a future PHP release.</source>
          <target state="translated">如上所述，在PHP 7.0中提供&lt;em&gt;salt&lt;/em&gt;选项将生成弃用警告。在以后的PHP版本中可能会删除对手动提供盐的支持。</target>
        </trans-unit>
        <trans-unit id="8c93fb6d874371f16c4727c9906678321cf65a70" translate="yes" xml:space="preserve">
          <source>As noted in the return value section, &lt;strong&gt;imagecropauto()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; when there is either nothing to crop or the whole image would be cropped. In this example we have an image resource &lt;em&gt;$im&lt;/em&gt; which should be automatically cropped only if there is something to crop; otherwise we want to proceed with the original image.</source>
          <target state="translated">如返回值部分所述，当没有裁剪或整个图像被裁剪时，&lt;strong&gt;imagecropauto（）&lt;/strong&gt;将返回&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;。在这个例子中，我们有一个图像资源&lt;em&gt;$ im&lt;/em&gt;，它只有在要裁剪的东西时才自动裁剪；否则，我们要继续原始图像。</target>
        </trans-unit>
        <trans-unit id="983dd0d5a076ad882c298b7c4c1fb40be7a1d67a" translate="yes" xml:space="preserve">
          <source>As noted in the return value section, &lt;strong&gt;imagecropauto()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if the whole image was cropped. In this example we have an image resource &lt;code&gt;$im&lt;/code&gt; which should be automatically cropped only if there is something to crop; otherwise we want to proceed with the original image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6275fc264a1e0a8ee4cbc66eae91bf2657c19d1" translate="yes" xml:space="preserve">
          <source>As noted in the warning above, testing floating point values for equality is problematic, due to the way that they are represented internally. However, there are ways to make comparisons of floating point values that work around these limitations.</source>
          <target state="translated">正如上面的警告所指出的,由于浮点值的内部表示方式,测试浮点值的平等性是有问题的。然而,有一些方法可以绕过这些限制对浮点值进行比较。</target>
        </trans-unit>
        <trans-unit id="e29d39183e604b4bf069f513ed246605448b887e" translate="yes" xml:space="preserve">
          <source>As of 2.1.18, Yaf supports Controllers autoloading for user script side, (which means the autoloading triggered by user php script, eg: access a controller static property in Bootstrap or Plugins), but autoloader only try to locate controller class script under the default module folder, which is &quot;APPLICATION_PATH/controllers/&quot;.</source>
          <target state="translated">从2.1.18开始,Yaf支持Controllers在用户脚本端自动加载,(这意味着由用户的php脚本触发的自动加载,例如:访问Bootstrap或Plugins中的controller静态属性),但自动加载器只尝试在默认的模块文件夹下定位controller类脚本,即 &quot;APPLICATION_PATH/controllers/&quot;。</target>
        </trans-unit>
        <trans-unit id="24552d8823ec63b9bab018d470ca04d73dff53f9" translate="yes" xml:space="preserve">
          <source>As of 5.3.6, this parameter is a bitmask for the following options:</source>
          <target state="translated">从5.3.6开始,这个参数是以下选项的位掩码。</target>
        </trans-unit>
        <trans-unit id="21b818dc4bea94795009785fa6bcbcde0cd78c98" translate="yes" xml:space="preserve">
          <source>As of 5.4.0, this parameter can be used to limit the number of stack frames printed. By default (&lt;code&gt;limit&lt;/code&gt;=&lt;code&gt;0&lt;/code&gt;) it prints all stack frames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="081e8953c3a26c0e080b4a432d563ad51dbbded2" translate="yes" xml:space="preserve">
          <source>As of 5.4.0, this parameter can be used to limit the number of stack frames printed. By default (&lt;code&gt;limit&lt;/code&gt;=&lt;em&gt;0&lt;/em&gt;) it prints all stack frames.</source>
          <target state="translated">从5.4.0版本开始，此参数可用于限制打印的堆栈帧数。默认情况下（ &lt;code&gt;limit&lt;/code&gt; = &lt;em&gt;0&lt;/em&gt;）它将打印所有堆栈帧。</target>
        </trans-unit>
        <trans-unit id="a01da91269daf039fd62ebf445f687e98dea5a22" translate="yes" xml:space="preserve">
          <source>As of 5.4.0, this parameter can be used to limit the number of stack frames returned. By default (&lt;code&gt;limit&lt;/code&gt;=&lt;code&gt;0&lt;/code&gt;) it returns all stack frames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad7737fe568225d87cc0b9ef3dd31538063f58f" translate="yes" xml:space="preserve">
          <source>As of 5.4.0, this parameter can be used to limit the number of stack frames returned. By default (&lt;code&gt;limit&lt;/code&gt;=&lt;em&gt;0&lt;/em&gt;) it returns all stack frames.</source>
          <target state="translated">从5.4.0版本开始，此参数可用于限制返回的堆栈帧数。默认情况下（ &lt;code&gt;limit&lt;/code&gt; = &lt;em&gt;0&lt;/em&gt;）则返回所有的栈帧。</target>
        </trans-unit>
        <trans-unit id="f05ae8a0bdf3a2ef79f7209205108f44894fdd16" translate="yes" xml:space="preserve">
          <source>As of PHP 4.2.0, the default value for the PHP directive &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.register-globals&quot;&gt;register_globals&lt;/a&gt; is &lt;em&gt; off&lt;/em&gt;. The PHP community discourages developers from relying on this directive, and encourages the use of other means, such as the &lt;a href=&quot;language.variables.predefined&quot;&gt;superglobals&lt;/a&gt;.</source>
          <target state="translated">自PHP 4.2.0起，PHP指令的默认值&lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.register-globals&quot;&gt;register_globals的&lt;/a&gt;是&lt;em&gt;关闭&lt;/em&gt;。PHP社区鼓励开发人员不要依赖此指令，并鼓励使用其他方式，例如&lt;a href=&quot;language.variables.predefined&quot;&gt;superglobals&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7d889d7689db60c5b3868c075388938d2c8f4da8" translate="yes" xml:space="preserve">
          <source>As of PHP 4.2.0, the default value for the PHP directive &lt;a href=&quot;https://www.php.net/manual/en/ini.core.php#ini.register-globals&quot;&gt;register_globals&lt;/a&gt; is &lt;em&gt; off&lt;/em&gt;. The PHP community discourages developers from relying on this directive, and encourages the use of other means, such as the &lt;a href=&quot;language.variables.predefined&quot;&gt;superglobals&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e465e4ed0d2059b0e1307ef564f62032ee3bbd" translate="yes" xml:space="preserve">
          <source>As of PHP 4.3, the function more properly reflects the functionality as dictated by the &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2087&quot;&gt;&amp;raquo; RFC2087&lt;/a&gt;. The array return value has changed to support an unlimited number of returned resources (i.e. messages, or sub-folders) with each named resource receiving an individual array key. Each key value then contains an another array with the usage and limit values within it.</source>
          <target state="translated">从PHP 4.3开始，该功能可以更正确地反映&lt;a href=&quot;http://www.faqs.org/rfcs/rfc2087&quot;&gt;&amp;raquo;RFC2087&lt;/a&gt;所指示的功能。数组返回值已更改为支持无限数量的返回资源（即消息或子文件夹），每个命名资源都接收一个单独的数组键。然后，每个键值都包含另一个数组，其中包含用法和限制值。</target>
        </trans-unit>
        <trans-unit id="1d822efe8922c89f4edf85a1a1e66078924ce401" translate="yes" xml:space="preserve">
          <source>As of PHP 4.3, this function can (potentially) work on any kind of stream. In PHP 4.3, socket based streams are still the only kind supported in the PHP core, although streams from other extensions may support this function.</source>
          <target state="translated">在 PHP 4.3 中,这个函数可以(潜在地)在任何类型的流上工作。在 PHP 4.3 中,基于套接字的流仍然是 PHP 核心支持的唯一类型,尽管其他扩展的流也可能支持这个函数。</target>
        </trans-unit>
        <trans-unit id="840671db15da31d7df79e5308804e01d19196172" translate="yes" xml:space="preserve">
          <source>As of PHP 4.3.0 PCNTL uses ticks as the signal handle callback mechanism, which is much faster than the previous mechanism. This change follows the same semantics as using &quot;&lt;a href=&quot;control-structures.declare#control-structures.declare.ticks&quot;&gt;user ticks&lt;/a&gt;&quot;. You must use the &lt;a href=&quot;control-structures.declare&quot;&gt;declare()&lt;/a&gt; statement to specify the locations in your program where callbacks are allowed to occur for the signal handler to function properly (as used in the example below).</source>
          <target state="translated">从PHP 4.3.0开始，PCNTL使用ticks作为信号句柄回调机制，比以前的机制要快得多。此更改遵循与使用&amp;ldquo; &lt;a href=&quot;control-structures.declare#control-structures.declare.ticks&quot;&gt;用户滴答&lt;/a&gt; &amp;rdquo; 相同的语义。您必须使用&lt;a href=&quot;control-structures.declare&quot;&gt;clarify（）&lt;/a&gt;语句来指定程序中允许发生回调以使信号处理程序正常运行的位置（如以下示例中所使用）。</target>
        </trans-unit>
        <trans-unit id="0a50c086dbffc34aece747c1558ff6fbc7db8dc8" translate="yes" xml:space="preserve">
          <source>As of PHP 4.3.2, the default mode is set to binary for all platforms that distinguish between binary and text mode. If you are having problems with your scripts after upgrading, try using the &lt;em&gt;'t'&lt;/em&gt; flag as a workaround until you have made your script more portable as mentioned before</source>
          <target state="translated">从PHP 4.3.2开始，所有区分二进制和文本模式的平台的默认模式都设置为二进制。如果升级后脚本遇到问题，请尝试使用&lt;em&gt;&amp;ldquo; t&amp;rdquo;&lt;/em&gt;标志作为解决方法，直到如前所述使脚本更具可移植性</target>
        </trans-unit>
        <trans-unit id="40ade42d774614d4eb0a2435572f706ad4db14f3" translate="yes" xml:space="preserve">
          <source>As of PHP 4.3.3, calling &lt;strong&gt;session_start()&lt;/strong&gt; after the session was previously started will result in an error of level &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt;. Also, the second session start will simply be ignored.</source>
          <target state="translated">从PHP 4.3.3开始，在先前启动会话之后调用&lt;strong&gt;session_start（）&lt;/strong&gt;将导致级别&lt;strong&gt; &lt;code&gt;E_NOTICE&lt;/code&gt; &lt;/strong&gt;的错误。同样，第二个会话开始将被忽略。</target>
        </trans-unit>
        <trans-unit id="d7901957c594c3124119f4d316068132e0274aba" translate="yes" xml:space="preserve">
          <source>As of PHP 5 the &lt;strong&gt;&lt;code&gt;FILE_USE_INCLUDE_PATH&lt;/code&gt;&lt;/strong&gt; constant can be used to trigger &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.include-path&quot;&gt;include path&lt;/a&gt; search. This is not possible if &lt;a href=&quot;functions.arguments#functions.arguments.type-declaration.strict&quot;&gt;strict typing&lt;/a&gt; is enabled, since &lt;strong&gt;&lt;code&gt;FILE_USE_INCLUDE_PATH&lt;/code&gt;&lt;/strong&gt; is an &lt;a href=&quot;language.types.integer&quot;&gt;int&lt;/a&gt;. Use &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; instead.</source>
          <target state="translated">从PHP 5开始，&lt;strong&gt; &lt;code&gt;FILE_USE_INCLUDE_PATH&lt;/code&gt; &lt;/strong&gt;常量可用于触发&lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.include-path&quot;&gt;包含路径&lt;/a&gt;搜索。如果启用了&lt;a href=&quot;functions.arguments#functions.arguments.type-declaration.strict&quot;&gt;严格类型输入，&lt;/a&gt;则这是不可能的，因为&lt;strong&gt; &lt;code&gt;FILE_USE_INCLUDE_PATH&lt;/code&gt; &lt;/strong&gt;是一个&lt;a href=&quot;language.types.integer&quot;&gt;int&lt;/a&gt;。请改用&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="aefce2090a72e792838f6a8f085d00d52440ad89" translate="yes" xml:space="preserve">
          <source>As of PHP 5.0.0 &lt;strong&gt;rmdir()&lt;/strong&gt; can also be used with &lt;em&gt;some&lt;/em&gt; URL wrappers. Refer to &lt;a href=&quot;https://secure.php.net/manual/en/wrappers.php&quot;&gt;Supported Protocols and Wrappers&lt;/a&gt; for a listing of which wrappers support &lt;strong&gt;rmdir()&lt;/strong&gt;.</source>
          <target state="translated">从PHP 5.0.0起，&lt;strong&gt;rmdir（）&lt;/strong&gt;也可以与&lt;em&gt;某些&lt;/em&gt; URL包装器一起使用。请参阅&lt;a href=&quot;https://secure.php.net/manual/en/wrappers.php&quot;&gt;支持的协议和包装&lt;/a&gt;器，以获取包装器支持&lt;strong&gt;rmdir（）的列表&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="f02eb1a45fcab1663e398e7ed79b8cb7b72ba50a" translate="yes" xml:space="preserve">
          <source>As of PHP 5.0.0 &lt;strong&gt;unlink()&lt;/strong&gt; can also be used with &lt;em&gt;some&lt;/em&gt; URL wrappers. Refer to &lt;a href=&quot;https://secure.php.net/manual/en/wrappers.php&quot;&gt;Supported Protocols and Wrappers&lt;/a&gt; for a listing of which wrappers support &lt;strong&gt;unlink()&lt;/strong&gt;.</source>
          <target state="translated">从PHP 5.0.0开始，&lt;strong&gt;unlink（）&lt;/strong&gt;也可以与&lt;em&gt;某些&lt;/em&gt; URL包装器一起使用。请参阅&lt;a href=&quot;https://secure.php.net/manual/en/wrappers.php&quot;&gt;支持的协议和包装&lt;/a&gt;器，以获取包装器支持&lt;strong&gt;unlink（）的列表&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="124b4486c22976bf2bc15240279b5ba4fa7c64b1" translate="yes" xml:space="preserve">
          <source>As of PHP 5.0.0, this function can also be used with &lt;em&gt;some&lt;/em&gt; URL wrappers. Refer to &lt;a href=&quot;https://secure.php.net/manual/en/wrappers.php&quot;&gt;Supported Protocols and Wrappers&lt;/a&gt; to determine which wrappers support &lt;a href=&quot;function.stat&quot;&gt;stat()&lt;/a&gt; family of functionality.</source>
          <target state="translated">从PHP 5.0.0开始，此功能还可以与&lt;em&gt;某些&lt;/em&gt; URL包装器一起使用。请参阅&lt;a href=&quot;https://secure.php.net/manual/en/wrappers.php&quot;&gt;支持的协议和包装器，&lt;/a&gt;以确定哪些包装器支持&lt;a href=&quot;function.stat&quot;&gt;stat（）&lt;/a&gt;系列功能。</target>
        </trans-unit>
        <trans-unit id="61beeea658ecd8a92b1d2c092b3fedf43d4363a9" translate="yes" xml:space="preserve">
          <source>As of PHP 5.0.0, this function can also be used with &lt;em&gt;some&lt;/em&gt; URL wrappers. Refer to &lt;a href=&quot;https://secure.php.net/manual/en/wrappers.php&quot;&gt;Supported Protocols and Wrappers&lt;/a&gt; to determine which wrappers support &lt;strong&gt;stat()&lt;/strong&gt; family of functionality.</source>
          <target state="translated">从PHP 5.0.0开始，此功能还可以与&lt;em&gt;某些&lt;/em&gt; URL包装器一起使用。请参阅&lt;a href=&quot;https://secure.php.net/manual/en/wrappers.php&quot;&gt;支持的协议和包装器，&lt;/a&gt;以确定哪些包装器支持&lt;strong&gt;stat（）&lt;/strong&gt;系列功能。</target>
        </trans-unit>
        <trans-unit id="301b2c3d3a2d700300750bbacfdb650493f1a9ad" translate="yes" xml:space="preserve">
          <source>As of PHP 5.0.0, this function can also be used with &lt;em&gt;some&lt;/em&gt; URL wrappers. Refer to &lt;a href=&quot;https://www.php.net/manual/en/wrappers.php&quot;&gt;Supported Protocols and Wrappers&lt;/a&gt; to determine which wrappers support &lt;a href=&quot;function.stat&quot;&gt;stat()&lt;/a&gt; family of functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0528dba942888fcd2d3890541584802f549e544" translate="yes" xml:space="preserve">
          <source>As of PHP 5.0.0, this function can also be used with &lt;em&gt;some&lt;/em&gt; URL wrappers. Refer to &lt;a href=&quot;https://www.php.net/manual/en/wrappers.php&quot;&gt;Supported Protocols and Wrappers&lt;/a&gt; to determine which wrappers support &lt;strong&gt;stat()&lt;/strong&gt; family of functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b7ee0d8527a62a137d689ebd6fcc7cdbec9d4f9" translate="yes" xml:space="preserve">
          <source>As of PHP 5.0.5 the &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt; handlers are called after object destruction and therefore cannot use objects or throw exceptions. Exceptions are not able to be caught since will not be caught nor will any exception trace be displayed and the execution will just cease unexpectedly. The object destructors can however use sessions.</source>
          <target state="translated">从PHP 5.0.5开始， &lt;code&gt;write&lt;/code&gt; 和 &lt;code&gt;close&lt;/code&gt; 处理程序在对象销毁后被调用，因此不能使用对象或引发异常。无法捕获异常，因为将不会捕获异常，也不会显示任何异常跟踪，并且执行只会意外停止。但是，对象析构函数可以使用会话。</target>
        </trans-unit>
        <trans-unit id="b0091037d7f24bc8775f63a798e4dee95a018bcb" translate="yes" xml:space="preserve">
          <source>As of PHP 5.1, when called with no arguments, &lt;strong&gt;mktime()&lt;/strong&gt; throws an &lt;strong&gt;&lt;code&gt;E_STRICT&lt;/code&gt;&lt;/strong&gt; notice: use the &lt;a href=&quot;function.time&quot;&gt;time()&lt;/a&gt; function instead.</source>
          <target state="translated">从PHP 5.1开始，当不带任何参数调用时，&lt;strong&gt;mktime（）&lt;/strong&gt;会引发&lt;strong&gt; &lt;code&gt;E_STRICT&lt;/code&gt; &lt;/strong&gt;通知：请改用&lt;a href=&quot;function.time&quot;&gt;time（）&lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="f8da4e76ca5591a6da32a57bdf917de2b0577c0a" translate="yes" xml:space="preserve">
          <source>As of PHP 5.1.0, the &lt;code&gt;is_dst&lt;/code&gt; parameter became deprecated. As a result, the new timezone handling features should be used instead.</source>
          <target state="translated">从PHP 5.1.0开始， &lt;code&gt;is_dst&lt;/code&gt; 参数已弃用。因此，应改用新的时区处理功能。</target>
        </trans-unit>
        <trans-unit id="9f474f9baf2d28a7a995310426eed34463203c18" translate="yes" xml:space="preserve">
          <source>As of PHP 5.1.0, this parameter became deprecated. As a result, the new timezone handling features should be used instead.</source>
          <target state="translated">从PHP 5.1.0开始,这个参数就被废弃了。因此,应该使用新的时区处理功能。</target>
        </trans-unit>
        <trans-unit id="e332fbae2769114b5a71aca3507377b20d3953ca" translate="yes" xml:space="preserve">
          <source>As of PHP 5.2.2, DateTime objects can be compared using &lt;a href=&quot;language.operators.comparison&quot;&gt;comparison operators&lt;/a&gt;.</source>
          <target state="translated">从PHP 5.2.2开始，可以使用&lt;a href=&quot;language.operators.comparison&quot;&gt;比较运算符比较&lt;/a&gt; DateTime对象。</target>
        </trans-unit>
        <trans-unit id="94a0417d3b915dc270372ef41eca2004318420c1" translate="yes" xml:space="preserve">
          <source>As of PHP 5.2.2, the &lt;code&gt;\g&lt;/code&gt; escape sequence can be used for absolute and relative referencing of subpatterns. This escape sequence must be followed by an unsigned number or a negative number, optionally enclosed in braces. The sequences &lt;code&gt;\1&lt;/code&gt;, &lt;code&gt;\g1&lt;/code&gt; and &lt;code&gt;\g{1}&lt;/code&gt; are synonymous with one another. The use of this pattern with an unsigned number can help remove the ambiguity inherent when using digits following a backslash. The sequence helps to distinguish back references from octal characters and also makes it easier to have a back reference followed by a literal number, e.g. &lt;code&gt;\g{2}1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6927b22cebdab49f32ab774fdc574e68bd66f8" translate="yes" xml:space="preserve">
          <source>As of PHP 5.2.2, the &lt;em&gt;\g&lt;/em&gt; escape sequence can be used for absolute and relative referencing of subpatterns. This escape sequence must be followed by an unsigned number or a negative number, optionally enclosed in braces. The sequences &lt;em&gt;\1&lt;/em&gt;, &lt;em&gt;\g1&lt;/em&gt; and &lt;em&gt;\g{1}&lt;/em&gt; are synonymous with one another. The use of this pattern with an unsigned number can help remove the ambiguity inherent when using digits following a backslash. The sequence helps to distinguish back references from octal characters and also makes it easier to have a back reference followed by a literal number, e.g. &lt;em&gt;\g{2}1&lt;/em&gt;.</source>
          <target state="translated">从PHP 5.2.2开始，&lt;em&gt;\ g&lt;/em&gt;转义序列可用于子模式的绝对和相对引用。此转义序列后必须跟一个无符号数或一个负数，可以选择用大括号括起来。序列&lt;em&gt;\ 1&lt;/em&gt;，&lt;em&gt;\ g1&lt;/em&gt;和&lt;em&gt;\ g {1}&lt;/em&gt;彼此同义。将此模式与无符号数字一起使用可以帮助消除在反斜杠后使用数字时固有的歧义。该序列有助于将反向引用与八进制字符区分开，并且使反向引用后跟文字数字（例如&lt;em&gt;\ g {2} 1）&lt;/em&gt;更加容易。</target>
        </trans-unit>
        <trans-unit id="d55765abfb1a56a617946bda420a51743ef16173" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3, you can use namespace:</source>
          <target state="translated">在PHP 5.3中,你可以使用命名空间。</target>
        </trans-unit>
        <trans-unit id="19b6208aaa156db8f487e462a8a9e304ea9bfc3c" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.0 &lt;a href=&quot;language.types.string#language.types.string.syntax.heredoc&quot;&gt;heredocs&lt;/a&gt; and &lt;a href=&quot;language.types.string#language.types.string.syntax.nowdoc&quot;&gt;nowdocs&lt;/a&gt; can be used in any static data context, including property declarations.</source>
          <target state="translated">自PHP 5.3.0 &lt;a href=&quot;language.types.string#language.types.string.syntax.heredoc&quot;&gt;here文档&lt;/a&gt;和&lt;a href=&quot;language.types.string#language.types.string.syntax.nowdoc&quot;&gt;nowdocs&lt;/a&gt;可以在任何静态数据上下文中使用，包括属性声明。</target>
        </trans-unit>
        <trans-unit id="d6c47ba60c2cce3305a12fffae2989112bf45fd7" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.0 &lt;strong&gt;is_callable()&lt;/strong&gt; reports constructors as not being callable. This affects PHP 5 style constructors (&lt;code&gt;__construct&lt;/code&gt;) as well as PHP 4 style constructors (i.e. methods with the same name as the class). Formerly, both cases have been considered callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef63a30124d6e567cf6d960e37a521d6e352701e" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.0 &lt;strong&gt;is_callable()&lt;/strong&gt; reports constructors as not being callable. This affects PHP 5 style constructors (&lt;em&gt;__construct&lt;/em&gt;) as well as PHP 4 style constructors (i.e. methods with the same name as the class). Formerly, both cases have been considered callable.</source>
          <target state="translated">从PHP 5.3.0开始，&lt;strong&gt;is_callable（）&lt;/strong&gt;将构造函数报告为不可调用。这会影响PHP 5样式构造函数（&lt;em&gt;__construct&lt;/em&gt;）以及PHP 4样式构造函数（即与类同名的方法）。以前，这两种情况都被认为是可以召回的。</target>
        </trans-unit>
        <trans-unit id="b67c51c103ce02935aa5aab6138f1b34b75476a1" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.0, PHP contains its own implementation and will use that if the system lacks of support for one or more of the algorithms.</source>
          <target state="translated">在PHP 5.3.0中,PHP包含了自己的实现,如果系统缺乏对一个或多个算法的支持,就会使用它。</target>
        </trans-unit>
        <trans-unit id="8b1fb5baa2232f148102351b5f93cb0460c26a38" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.0, PHP implements a feature called late static bindings which can be used to reference the called class in a context of static inheritance.</source>
          <target state="translated">在PHP 5.3.0中,PHP实现了一个叫做后期静态绑定的功能,它可以用来在静态继承的上下文中引用被调用的类。</target>
        </trans-unit>
        <trans-unit id="a57506e5710eb87ab54ed8b2012fc8e6a64dd9d1" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.0, it's possible to initialize static variables and class properties/constants using the Heredoc syntax:</source>
          <target state="translated">在PHP 5.3.0中,可以使用Heredoc语法初始化静态变量和类属性/常量。</target>
        </trans-unit>
        <trans-unit id="d94df57127dbd4616107228bb7cec19a5637ca69" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.0, it's possible to reference the class using a variable. The variable's value can not be a keyword (e.g. &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;parent&lt;/code&gt; and &lt;code&gt;static&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c57eb6d1d307a255b452aeb3ea1faf3cf2d1d25" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.0, it's possible to reference the class using a variable. The variable's value can not be a keyword (e.g. &lt;em&gt;self&lt;/em&gt;, &lt;em&gt;parent&lt;/em&gt; and &lt;em&gt;static&lt;/em&gt;).</source>
          <target state="translated">从PHP 5.3.0开始，可以使用变量来引用类。变量的值不能是关键字（例如&lt;em&gt;self&lt;/em&gt;，&lt;em&gt;parent&lt;/em&gt;和&lt;em&gt;static&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="ab7d540e92498cc87c90bf7e75a4a77bff64b590" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.0, it's possible to reference the class using a variable. The variable's value cannot be a keyword (e.g. &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;parent&lt;/code&gt; and &lt;code&gt;static&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb0a56728129d02496487110c7834d79222df94" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.0, it's possible to reference the class using a variable. The variable's value cannot be a keyword (e.g. &lt;em&gt;self&lt;/em&gt;, &lt;em&gt;parent&lt;/em&gt; and &lt;em&gt;static&lt;/em&gt;).</source>
          <target state="translated">从PHP 5.3.0开始，可以使用变量来引用类。变量的值不能是关键字（例如&lt;em&gt;self&lt;/em&gt;，&lt;em&gt;parent&lt;/em&gt;和&lt;em&gt;static&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="b8eba9058ff366c755ec40becbd8d32a9eff1d42" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.0, the &lt;a href=&quot;function.stream-context-set-default&quot;&gt;stream_context_set_default()&lt;/a&gt; function can be used to set the default context.</source>
          <target state="translated">从PHP 5.3.0开始，&lt;a href=&quot;function.stream-context-set-default&quot;&gt;stream_context_set_default（）&lt;/a&gt;函数可用于设置默认上下文。</target>
        </trans-unit>
        <trans-unit id="0ca921d3c6e166c0e5e8485a01445601316977ed" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.3, methods with the same name as the last element of a namespaced class name will no longer be treated as constructor. This change doesn't affect non-namespaced classes.</source>
          <target state="translated">从 PHP 5.3.3 开始,与名字间隔类的最后一个元素名称相同的方法将不再被视为构造函数。这个变化不会影响非命名空间类。</target>
        </trans-unit>
        <trans-unit id="16353e1741de0d770526b2f6e2156698676bfb7b" translate="yes" xml:space="preserve">
          <source>As of PHP 5.4 it is possible to array dereference the result of a function or method call directly. Before it was only possible using a temporary variable.</source>
          <target state="translated">从 PHP 5.4 开始,可以直接对函数或方法调用的结果进行数组析出。之前只能使用临时变量来实现。</target>
        </trans-unit>
        <trans-unit id="16e5ce48354a4cb7f9a7ba4a4712757a23ed39b3" translate="yes" xml:space="preserve">
          <source>As of PHP 5.4 string offsets have to either be integers or integer-like strings, otherwise a warning will be thrown. Previously an offset like &lt;em&gt;&quot;foo&quot;&lt;/em&gt; was silently cast to &lt;em&gt;0&lt;/em&gt;.</source>
          <target state="translated">从PHP 5.4开始，字符串偏移量必须是整数或类似整数的字符串，否则将引发警告。以前，像&lt;em&gt;&amp;ldquo; foo&amp;rdquo;&lt;/em&gt;这样的偏移量被无声地强制转换为&lt;em&gt;0&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="541634dacd00c4e938bd254a89cafceb54f8428c" translate="yes" xml:space="preserve">
          <source>As of PHP 5.4 you can also use the short array syntax, which replaces &lt;em&gt;array()&lt;/em&gt; with &lt;em&gt;[]&lt;/em&gt;.</source>
          <target state="translated">从PHP 5.4开始，您还可以使用短数组语法，该语法用&lt;em&gt;[]&lt;/em&gt;替换&lt;em&gt;array（）&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c994f86e2ae672aaa744f7f067a273171c7e2384" translate="yes" xml:space="preserve">
          <source>As of PHP 5.4, anonymous functions may be declared statically. This prevents them from having the current class automatically bound to them. Objects may also not be bound to them at runtime.</source>
          <target state="translated">从PHP 5.4开始,匿名函数可以静态声明。这可以防止当前类自动绑定到它们。对象也不能在运行时被绑定到它们上。</target>
        </trans-unit>
        <trans-unit id="5c783f25c7b0195db057bae4831097f7ad7307de" translate="yes" xml:space="preserve">
          <source>As of PHP 5.4.0 you can use &lt;a href=&quot;function.session-register-shutdown&quot;&gt;session_register_shutdown()&lt;/a&gt; or simply use the 'register shutdown' flag when invoking &lt;strong&gt;session_set_save_handler()&lt;/strong&gt; using the OOP method and passing an instance that implements &lt;a href=&quot;class.sessionhandlerinterface&quot;&gt;SessionHandlerInterface&lt;/a&gt;.</source>
          <target state="translated">从PHP 5.4.0开始，可以在使用OOP方法调用&lt;strong&gt;session_set_save_handler（）&lt;/strong&gt;并传递实现&lt;a href=&quot;class.sessionhandlerinterface&quot;&gt;SessionHandlerInterface&lt;/a&gt;的实例时，使用&lt;a href=&quot;function.session-register-shutdown&quot;&gt;session_register_shutdown（）&lt;/a&gt;或仅使用&amp;ldquo; register shutdown&amp;rdquo;标志。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bfda654d2932bdba653025ba75ff5ddb932e86f7" translate="yes" xml:space="preserve">
          <source>As of PHP 5.4.0, PHP implements a method of code reuse called Traits.</source>
          <target state="translated">在 PHP 5.4.0 中,PHP 实现了一种叫做 Traits 的代码重用方法。</target>
        </trans-unit>
        <trans-unit id="ab1323d6a52cf1ac851cdb4cfa299f07ef8d0d9b" translate="yes" xml:space="preserve">
          <source>As of PHP 5.4.0, the above example will raise an &lt;strong&gt;&lt;code&gt;E_COMPILE_ERROR&lt;/code&gt;&lt;/strong&gt; error.</source>
          <target state="translated">从PHP 5.4.0开始，以上示例将引发&lt;strong&gt; &lt;code&gt;E_COMPILE_ERROR&lt;/code&gt; &lt;/strong&gt;错误。</target>
        </trans-unit>
        <trans-unit id="dd49df14903497da36a3e1e7acda76285b479f84" translate="yes" xml:space="preserve">
          <source>As of PHP 5.4.0, there are only two ways to access data from your HTML forms. Currently available methods are listed below:</source>
          <target state="translated">在PHP 5.4.0中,只有两种方法可以从HTML表单中访问数据。目前可用的方法如下。</target>
        </trans-unit>
        <trans-unit id="06f2378b28ab30a7ac14047fdb81381db0645ebd" translate="yes" xml:space="preserve">
          <source>As of PHP 5.4.0, when declared in the context of a class, the current class is automatically bound to it, making &lt;em&gt;$this&lt;/em&gt; available inside of the function's scope. If this automatic binding of the current class is not wanted, then &lt;a href=&quot;functions.anonymous#functions.anonymous-functions.static&quot;&gt;static anonymous functions&lt;/a&gt; may be used instead.</source>
          <target state="translated">从PHP 5.4.0开始，在类的上下文中声明时，当前类会自动绑定到它，从而使&lt;em&gt;$ this&lt;/em&gt;在函数的作用域内可用。如果不需要这种自动绑定当前类，则可以使用&lt;a href=&quot;functions.anonymous#functions.anonymous-functions.static&quot;&gt;静态匿名函数&lt;/a&gt;代替。</target>
        </trans-unit>
        <trans-unit id="a5b6e990cf80bf5656664b86b0b310249d507a4f" translate="yes" xml:space="preserve">
          <source>As of PHP 5.4.0, you can call any &lt;a href=&quot;language.types.callable&quot;&gt;callable&lt;/a&gt; stored in a variable.</source>
          <target state="translated">从PHP 5.4.0开始，您可以&lt;a href=&quot;language.types.callable&quot;&gt;调用&lt;/a&gt;存储在变量中的任何可调用对象。</target>
        </trans-unit>
        <trans-unit id="2c65f0171fbe37680a819ab7081d4b37f401c5c2" translate="yes" xml:space="preserve">
          <source>As of PHP 5.5 it is possible to array dereference an array literal.</source>
          <target state="translated">从PHP 5.5开始,可以对一个数组的文字进行数组解除引用。</target>
        </trans-unit>
        <trans-unit id="a0b0239c547411a3290b77e54506393cb82592d8" translate="yes" xml:space="preserve">
          <source>As of PHP 5.5.0 &lt;strong&gt;&lt;code&gt;E_DEPRECATED&lt;/code&gt;&lt;/strong&gt; level error is emitted when passing in the &quot;\e&quot; modifier. As of PHP 7.0.0 &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; is emitted in this case and &quot;\e&quot; modifier has no effect.</source>
          <target state="translated">从PHP 5.5.0 &lt;strong&gt; &lt;code&gt;E_DEPRECATED&lt;/code&gt; &lt;/strong&gt;，传入&amp;ldquo; \ e&amp;rdquo;修饰符时会发出&lt;strong&gt;E_DEPRECATED&lt;/strong&gt;级别错误。从PHP 7.0.0起，在这种情况下会发出&lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt;，并且&amp;ldquo; \ e&amp;rdquo;修饰符无效。</target>
        </trans-unit>
        <trans-unit id="f748740e88e63cb05442b68aa68028018ecfa480" translate="yes" xml:space="preserve">
          <source>As of PHP 5.5.0 &lt;strong&gt;&lt;code&gt;E_DEPRECATED&lt;/code&gt;&lt;/strong&gt; level error is emitted when passing in the &quot;\e&quot; modifier. As of PHP 7.0.0 using the &quot;\e&quot; modifier is an error; an &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; is emitted in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798a855a87611c84dc34ec79c862db17b09b2850" translate="yes" xml:space="preserve">
          <source>As of PHP 5.6 aliasing or importing function and constant names is allowed.</source>
          <target state="translated">在PHP 5.6中,允许使用别名或导入函数和常量名。</target>
        </trans-unit>
        <trans-unit id="69fd6d5f913007b7394f76ac60bde2910f383fb2" translate="yes" xml:space="preserve">
          <source>As of PHP 5.6.0, &lt;strong&gt;hash_algos()&lt;/strong&gt; will return the following list of algorithm names.</source>
          <target state="translated">从PHP 5.6.0开始，&lt;strong&gt;hash_algos（）&lt;/strong&gt;将返回以下算法名称列表。</target>
        </trans-unit>
        <trans-unit id="bbc505d0e5c1c7fe1dec59bad3f45a96c278040f" translate="yes" xml:space="preserve">
          <source>As of PHP 5.6.1 can also be specified as &lt;strong&gt;&lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt;&lt;/strong&gt;. In this mode boolean, null and integer types are preserved when possible. String values &lt;code&gt;&quot;true&quot;&lt;/code&gt;, &lt;code&gt;&quot;on&quot;&lt;/code&gt; and &lt;code&gt;&quot;yes&quot;&lt;/code&gt; are converted to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;. &lt;code&gt;&quot;false&quot;&lt;/code&gt;, &lt;code&gt;&quot;off&quot;&lt;/code&gt;, &lt;code&gt;&quot;no&quot;&lt;/code&gt; and &lt;code&gt;&quot;none&quot;&lt;/code&gt; are considered &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;. &lt;code&gt;&quot;null&quot;&lt;/code&gt; is converted to &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; in typed mode. Also, all numeric strings are converted to integer type if it is possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f6b91536dc03c2993c2c03f45ea8e99f6272ba" translate="yes" xml:space="preserve">
          <source>As of PHP 5.6.1 can also be specified as &lt;strong&gt;&lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt;&lt;/strong&gt;. In this mode boolean, null and integer types are preserved when possible. String values &lt;em&gt;&quot;true&quot;&lt;/em&gt;, &lt;em&gt;&quot;on&quot;&lt;/em&gt; and &lt;em&gt;&quot;yes&quot;&lt;/em&gt; are converted to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;. &lt;em&gt;&quot;false&quot;&lt;/em&gt;, &lt;em&gt;&quot;off&quot;&lt;/em&gt;, &lt;em&gt;&quot;no&quot;&lt;/em&gt; and &lt;em&gt;&quot;none&quot;&lt;/em&gt; are considered &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;. &lt;em&gt;&quot;null&quot;&lt;/em&gt; is converted to &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; in typed mode. Also, all numeric strings are converted to integer type if it is possible.</source>
          <target state="translated">从PHP 5.6.1开始，也可以指定为&lt;strong&gt; &lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt; &lt;/strong&gt;。在此模式下，尽可能保留布尔，空和整数类型。字符串值&lt;em&gt;&amp;ldquo; true&amp;rdquo;&lt;/em&gt;，&lt;em&gt;&amp;ldquo; on&amp;rdquo;&lt;/em&gt;和&lt;em&gt;&amp;ldquo; yes&amp;rdquo;&lt;/em&gt;转换为&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;。&lt;em&gt;&amp;ldquo; false&amp;rdquo;&lt;/em&gt;，&lt;em&gt;&amp;ldquo; off&amp;rdquo;&lt;/em&gt;，&lt;em&gt;&amp;ldquo; no&amp;rdquo;&lt;/em&gt;和&lt;em&gt;&amp;ldquo; none&amp;rdquo;&lt;/em&gt;被视为&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;。在键入模式下，&lt;em&gt;&amp;ldquo; null&amp;rdquo;&lt;/em&gt;将转换为&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;。另外，如果可能，所有数字字符串都将转换为整数类型。</target>
        </trans-unit>
        <trans-unit id="887baab7c5975bcc279d6f2f848a537be5821efc" translate="yes" xml:space="preserve">
          <source>As of PHP 7.0.0, instead of being undefined and platform-dependent, NaN and Infinity will always be zero when cast to &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;.</source>
          <target state="translated">从PHP 7.0.0开始，NaN和Infinity不会被不确定和依赖于平台，而是在强制转换为&lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;时始终为零。</target>
        </trans-unit>
        <trans-unit id="aaafb0aff3999730a16606dba61f4197c101e945" translate="yes" xml:space="preserve">
          <source>As of PHP 7.0.7, if &lt;code&gt;type&lt;/code&gt; is omitted, it is automatically detected from the type of the &lt;code&gt;param&lt;/code&gt;: &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt; and &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; are treated as &lt;strong&gt;&lt;code&gt;SQLITE3_INTEGER&lt;/code&gt;&lt;/strong&gt;, &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt; as &lt;strong&gt;&lt;code&gt;SQLITE3_FLOAT&lt;/code&gt;&lt;/strong&gt;, &lt;a href=&quot;language.types.null&quot;&gt;null&lt;/a&gt; as &lt;strong&gt;&lt;code&gt;SQLITE3_NULL&lt;/code&gt;&lt;/strong&gt; and all others as &lt;strong&gt;&lt;code&gt;SQLITE3_TEXT&lt;/code&gt;&lt;/strong&gt;. Formerly, if &lt;code&gt;type&lt;/code&gt; has been omitted, it has defaulted to &lt;strong&gt;&lt;code&gt;SQLITE3_TEXT&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">从PHP 7.0.7开始，如果省略 &lt;code&gt;type&lt;/code&gt; ，则会从 &lt;code&gt;param&lt;/code&gt; 的类型中自动检测出：&lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;和&lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;被视为&lt;strong&gt; &lt;code&gt;SQLITE3_INTEGER&lt;/code&gt; &lt;/strong&gt;，&lt;a href=&quot;language.types.float&quot;&gt;float被&lt;/a&gt;视为&lt;strong&gt; &lt;code&gt;SQLITE3_FLOAT&lt;/code&gt; &lt;/strong&gt;，&lt;a href=&quot;language.types.null&quot;&gt;null被&lt;/a&gt;视为&lt;strong&gt; &lt;code&gt;SQLITE3_NULL&lt;/code&gt; &lt;/strong&gt;，所有其他&lt;strong&gt; &lt;code&gt;SQLITE3_TEXT&lt;/code&gt; &lt;/strong&gt;视为&lt;strong&gt;SQLITE3_TEXT&lt;/strong&gt;。以前，如果 &lt;code&gt;type&lt;/code&gt; 被省略，则默认为&lt;strong&gt; &lt;code&gt;SQLITE3_TEXT&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="0715950994d9f4d6235b9d38b3060df94ad07917" translate="yes" xml:space="preserve">
          <source>As of PHP 7.0.7, if &lt;code&gt;type&lt;/code&gt; is omitted, it is automatically detected from the type of the &lt;code&gt;param&lt;/code&gt;: bool and int are treated as &lt;strong&gt;&lt;code&gt;SQLITE3_INTEGER&lt;/code&gt;&lt;/strong&gt;, float as &lt;strong&gt;&lt;code&gt;SQLITE3_FLOAT&lt;/code&gt;&lt;/strong&gt;, null as &lt;strong&gt;&lt;code&gt;SQLITE3_NULL&lt;/code&gt;&lt;/strong&gt; and all others as &lt;strong&gt;&lt;code&gt;SQLITE3_TEXT&lt;/code&gt;&lt;/strong&gt;. Formerly, if &lt;code&gt;type&lt;/code&gt; has been omitted, it has defaulted to &lt;strong&gt;&lt;code&gt;SQLITE3_TEXT&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeeeb4400e0062f0b2ab5553131420418f165180" translate="yes" xml:space="preserve">
          <source>As of PHP 7.0.7, if &lt;code&gt;type&lt;/code&gt; is omitted, it is automatically detected from the type of the &lt;code&gt;value&lt;/code&gt;: &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt; and &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; are treated as &lt;strong&gt;&lt;code&gt;SQLITE3_INTEGER&lt;/code&gt;&lt;/strong&gt;, &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt; as &lt;strong&gt;&lt;code&gt;SQLITE3_FLOAT&lt;/code&gt;&lt;/strong&gt;, &lt;a href=&quot;language.types.null&quot;&gt;null&lt;/a&gt; as &lt;strong&gt;&lt;code&gt;SQLITE3_NULL&lt;/code&gt;&lt;/strong&gt; and all others as &lt;strong&gt;&lt;code&gt;SQLITE3_TEXT&lt;/code&gt;&lt;/strong&gt;. Formerly, if &lt;code&gt;type&lt;/code&gt; has been omitted, it has defaulted to &lt;strong&gt;&lt;code&gt;SQLITE3_TEXT&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">从PHP 7.0.7开始，如果忽略 &lt;code&gt;type&lt;/code&gt; ，则将从 &lt;code&gt;value&lt;/code&gt; 的类型中自动检测出：&lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;和&lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;被视为&lt;strong&gt; &lt;code&gt;SQLITE3_INTEGER&lt;/code&gt; &lt;/strong&gt;，&lt;a href=&quot;language.types.float&quot;&gt;float被&lt;/a&gt;视为&lt;strong&gt; &lt;code&gt;SQLITE3_FLOAT&lt;/code&gt; &lt;/strong&gt;，&lt;a href=&quot;language.types.null&quot;&gt;null被&lt;/a&gt;视为&lt;strong&gt; &lt;code&gt;SQLITE3_NULL&lt;/code&gt; &lt;/strong&gt;，所有其他&lt;strong&gt; &lt;code&gt;SQLITE3_TEXT&lt;/code&gt; &lt;/strong&gt;视为&lt;strong&gt;SQLITE3_TEXT&lt;/strong&gt;。以前，如果 &lt;code&gt;type&lt;/code&gt; 被省略，则默认为&lt;strong&gt; &lt;code&gt;SQLITE3_TEXT&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="8cfa486c5b1f7ae18a9e02c564dd1a19b68d6328" translate="yes" xml:space="preserve">
          <source>As of PHP 7.0.7, if &lt;code&gt;type&lt;/code&gt; is omitted, it is automatically detected from the type of the &lt;code&gt;value&lt;/code&gt;: bool and int are treated as &lt;strong&gt;&lt;code&gt;SQLITE3_INTEGER&lt;/code&gt;&lt;/strong&gt;, float as &lt;strong&gt;&lt;code&gt;SQLITE3_FLOAT&lt;/code&gt;&lt;/strong&gt;, null as &lt;strong&gt;&lt;code&gt;SQLITE3_NULL&lt;/code&gt;&lt;/strong&gt; and all others as &lt;strong&gt;&lt;code&gt;SQLITE3_TEXT&lt;/code&gt;&lt;/strong&gt;. Formerly, if &lt;code&gt;type&lt;/code&gt; has been omitted, it has defaulted to &lt;strong&gt;&lt;code&gt;SQLITE3_TEXT&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f1b6f15e17d13dd9e4e747c5f9559c59c974c4" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0 &lt;strong&gt;list()&lt;/strong&gt; can now also contain explicit keys, which can be given as arbitrary expressions. Mixing of integer and string keys is allowed; however, elements with and without keys cannot be mixed.</source>
          <target state="translated">从PHP 7.1.0开始，&lt;strong&gt;list（）&lt;/strong&gt;现在还可以包含显式键，可以将其指定为任意表达式。允许混合使用整数和字符串键；但是，带和不带键的元素不能混合使用。</target>
        </trans-unit>
        <trans-unit id="a747609abff8033992cef605ae86fd06e5662ea3" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0 also &lt;em&gt;negative&lt;/em&gt; numeric indices are supported.</source>
          <target state="translated">从PHP 7.1.0开始，还支持&lt;em&gt;负&lt;/em&gt;数值索引。</target>
        </trans-unit>
        <trans-unit id="b19a69d8b2c9058fe6b94d0647396e35770e667e" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0 the handler callback is given a second argument containing the siginfo of the specific signal. This data is only supplied if the operating system has the siginfo_t structure. If the OS does not implement siginfo_t NULL is supplied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2363c454819bb59e0eca7cead1e20e1b3a8160e7" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0 the handler callback is given a second argument containing the signinfo of the specific signal. This data is only supplied if the operating system has the signinfo_t structure. If the OS does not implement siginfo_t NULL is supplied.</source>
          <target state="translated">从PHP 7.1.0开始,处理程序的回调得到了第二个参数,其中包含特定信号的signinfo。只有当操作系统有signinfo_t结构时才会提供这些数据。如果操作系统没有实现sigininfo_t结构,则提供NULL。</target>
        </trans-unit>
        <trans-unit id="9170972ab631c37aceacf99fef313baf4d779c71" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0 visibility modifiers are allowed for class constants.</source>
          <target state="translated">在PHP 7.1.0中,类常量允许使用可见性修饰符。</target>
        </trans-unit>
        <trans-unit id="c8b6dddbeb6482a2ae0681aa17c8f342fc2d41a1" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0, &lt;a href=&quot;reflectiontype.tostring&quot;&gt;ReflectionType::__toString()&lt;/a&gt; is deprecated, and &lt;strong&gt;ReflectionParameter::getType()&lt;/strong&gt;&lt;em&gt;may&lt;/em&gt; return an instance of &lt;a href=&quot;class.reflectionnamedtype&quot;&gt;ReflectionNamedType&lt;/a&gt;. To get the name of the parameter type, &lt;strong&gt;ReflectionNamedType()&lt;/strong&gt; is available in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64cd3d7158fee301d490dbd1b458f7b08bdff5f8" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0, a &lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt;&lt;code&gt;catch&lt;/code&gt;&lt;/a&gt; block may specify multiple exceptions using the pipe (&lt;code&gt;|&lt;/code&gt;) character. This is useful for when different exceptions from different class hierarchies are handled the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e7c4c0539910ef6f5e86ea549de7108ba838c6" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0, an &lt;a href=&quot;class.argumentcounterror&quot;&gt;ArgumentCountError&lt;/a&gt; will be thrown if the &lt;code&gt;callback&lt;/code&gt; function requires more than 2 parameters (the value and key of the array member). Previously, if the &lt;code&gt;callback&lt;/code&gt; function required more than 2 parameters, an error of level &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.constants.php&quot;&gt;E_WARNING&lt;/a&gt; would be generated each time &lt;strong&gt;array_walk()&lt;/strong&gt; calls &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">从PHP 7.1.0开始，如果 &lt;code&gt;callback&lt;/code&gt; 函数需要两个以上的参数（数组成员的值和键），则将引发&lt;a href=&quot;class.argumentcounterror&quot;&gt;ArgumentCountError&lt;/a&gt;。以前，如果 &lt;code&gt;callback&lt;/code&gt; 函数需要两个以上的参数，则每次&lt;strong&gt;array_walk（）&lt;/strong&gt;调用 &lt;code&gt;callback&lt;/code&gt; 时，都会生成&lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.constants.php&quot;&gt;E_WARNING&lt;/a&gt;级别的错误。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="01a856c0bfa72ded594359d4ad0cc1ee616fd1b4" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0, an &lt;a href=&quot;class.argumentcounterror&quot;&gt;ArgumentCountError&lt;/a&gt; will be thrown if the &lt;code&gt;callback&lt;/code&gt; function requires more than 2 parameters (the value and key of the array member). Previously, if the &lt;code&gt;callback&lt;/code&gt; function required more than 2 parameters, an error of level &lt;a href=&quot;https://www.php.net/manual/en/errorfunc.constants.php&quot;&gt;E_WARNING&lt;/a&gt; would be generated each time &lt;strong&gt;array_walk()&lt;/strong&gt; calls &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15bc802ed2f33fc795190ec8dd007c60efb12bc7" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0, class constants may be defined as public, private, or protected. Constants declared without any explicit visibility keyword are defined as public.</source>
          <target state="translated">从 PHP 7.1.0 开始,类常量可以被定义为 public、private 或 protected。没有任何明确的可见性关键字的常量被定义为public。</target>
        </trans-unit>
        <trans-unit id="617df5634222c9efd5c90d2ea721e19cc1180d0d" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0, return statements without an argument trigger &lt;strong&gt;&lt;code&gt;E_COMPILE_ERROR&lt;/code&gt;&lt;/strong&gt;, unless the return type is void, in which case return statements with an argument trigger that error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66f5e1d601123df526d76b10a570f7018e13716" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0, type declarations can be marked nullable by prefixing the type name with a question mark (&lt;code&gt;?&lt;/code&gt;). This signifies that the value can be of the specified type or &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc74e830ec2e361e9cdccd2992e00e0bc691b8d" translate="yes" xml:space="preserve">
          <source>As of PHP 7.2.0 and libzip 1.2.0 the password is used to decompress the archive, and is also the default password for &lt;a href=&quot;ziparchive.setencryptionname&quot;&gt;ZipArchive::setEncryptionName()&lt;/a&gt; and &lt;a href=&quot;ziparchive.setencryptionindex&quot;&gt;ZipArchive::setEncryptionIndex()&lt;/a&gt;. Formerly, this function only set the password to be used to decompress the archive; it did not turn a non-password-protected &lt;a href=&quot;class.ziparchive&quot;&gt;ZipArchive&lt;/a&gt; into a password-protected &lt;a href=&quot;class.ziparchive&quot;&gt;ZipArchive&lt;/a&gt;.</source>
          <target state="translated">从PHP 7.2.0和libzip 1.2.0开始，该密码用于解压缩存档，也是&lt;a href=&quot;ziparchive.setencryptionname&quot;&gt;ZipArchive :: setEncryptionName（）&lt;/a&gt;和&lt;a href=&quot;ziparchive.setencryptionindex&quot;&gt;ZipArchive :: setEncryptionIndex（）&lt;/a&gt;的默认密码。以前，此功能仅设置用于解压缩归档文件的密码。它没有将未受密码保护的&lt;a href=&quot;class.ziparchive&quot;&gt;ZipArchive&lt;/a&gt;转换为受密码保护的&lt;a href=&quot;class.ziparchive&quot;&gt;ZipArchive&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="546b3dfb997ec5c5c53d06ead8983e6ddb1b28bc" translate="yes" xml:space="preserve">
          <source>As of PHP 7.2.0, instead of the missspelled &lt;strong&gt;RefectionClass::isIterateable()&lt;/strong&gt;, &lt;a href=&quot;reflectionclass.isiterable&quot;&gt;ReflectionClass::isIterable()&lt;/a&gt; should be preferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e7dcb77a9ba18e20479c954aa10c2ded5e1022" translate="yes" xml:space="preserve">
          <source>As of PHP 7.3.0, constants are allowed on the left-hand-side of the &lt;code&gt;instanceof&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6148c000851dbe4ced1ace61c79418f4dfcc0558" translate="yes" xml:space="preserve">
          <source>As of PHP 7.4.0, &lt;code&gt;cmd&lt;/code&gt; may be passed as array of command parameters. In this case the process will be opened directly (without going through a shell) and PHP will take care of any necessary argument escaping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7554d98d1ff4a7148b6a7c44fb3f2b4fd609fe9" translate="yes" xml:space="preserve">
          <source>As of PHP 7.4.0, &lt;strong&gt;hash_algos()&lt;/strong&gt; will return the following list of algorithm names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ffbbe08d5c82eafa123387083474549b923574" translate="yes" xml:space="preserve">
          <source>As of PHP 7.4.0, &lt;strong&gt;uopz_extends()&lt;/strong&gt; throws a &lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt;, if &lt;a href=&quot;https://www.php.net/manual/en/book.opcache.php&quot;&gt;OPcache&lt;/a&gt; is enabled, and the class entry of either &lt;code&gt;class&lt;/code&gt; or &lt;code&gt;parent&lt;/code&gt; (if it is a trait) is immutable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c718c0bf64583a952d4d451ca9eea5f23a8aae" translate="yes" xml:space="preserve">
          <source>As of PHP 7.4.0, &lt;strong&gt;uopz_implements()&lt;/strong&gt; throws a &lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt;, if &lt;a href=&quot;https://www.php.net/manual/en/book.opcache.php&quot;&gt;OPcache&lt;/a&gt; is enabled, and the class entry of &lt;code&gt;class&lt;/code&gt; is immutable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7edaa2cb684482882f4c88eda1b44b8cb1cb13bf" translate="yes" xml:space="preserve">
          <source>As of PHP 7.4.0, if the parameter &lt;code&gt;flags&lt;/code&gt; is passed, &lt;strong&gt;uopz_flags()&lt;/strong&gt; throws a &lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt;, if &lt;a href=&quot;https://www.php.net/manual/en/book.opcache.php&quot;&gt;OPcache&lt;/a&gt; is enabled, and the class entry of &lt;code&gt;class&lt;/code&gt; or the function entry of &lt;code&gt;function&lt;/code&gt; is immutable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b68c931a44245ef08dc943901821e20d7d7cf4" translate="yes" xml:space="preserve">
          <source>As of PHP 7.4.0, integer literals may contain underscores (&lt;code&gt;_&lt;/code&gt;) between digits, for better readability of literals. These underscores are removed by PHP's scanner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d3e7a5fa7bbea104920de8ba162652498effd7" translate="yes" xml:space="preserve">
          <source>As of PHP 7.4.0, property definitions can include a type declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ed61fae6c2e9e608312e2539f198e5604727fa" translate="yes" xml:space="preserve">
          <source>As of PHP 8.0.0, constructor parameters may also be promoted to correspond to an object property. It is very common for constructor parameters to be assigned to a property in the constructor but otherwise not operated upon. Constructor promotion provides a short-hand for that use case. The example above could be rewritten as the following.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ad75d8123e9cf25c94b08fedeb0d79879b8ccc" translate="yes" xml:space="preserve">
          <source>As of PHP 8.0.0, passing mandatory arguments after optional arguments is deprecated. This can generally be resolved by dropping the default value. One exception to this rule are arguments of the form &lt;code&gt;Type $param = null&lt;/code&gt;, where the &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; default makes the type implicitly nullable. This usage remains allowed, though it is recommended to use an explicit nullable type instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fafa4c802547b70f8c6838875cb2492ff304fcff" translate="yes" xml:space="preserve">
          <source>As of PHP 8.0.0, properties and methods may also be accessed with the &quot;nullsafe&quot; operator instead: &lt;code&gt;?-&amp;gt;&lt;/code&gt;. The nullsafe operator works the same as property or method access as above, except that if the object being dereferenced is &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; then &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; will be returned rather than an exception thrown. If the dereference is part of a chain, the rest of the chain is skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2bee18fc4ca963c04d5fef712f1c005d09311b2" translate="yes" xml:space="preserve">
          <source>As of PHP 8.0.0, the &lt;a href=&quot;language.exceptions&quot;&gt;&lt;code&gt;throw&lt;/code&gt;&lt;/a&gt; keyword is an expression and may be used in any expression context. In prior versions it was a statement and was required to be on its own line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c30dfc58b6904aecd90060912ac83c42d40c01c" translate="yes" xml:space="preserve">
          <source>As of PHP 8.0.0, the &lt;code&gt;::class&lt;/code&gt; constant may also be used on objects. This resolution happens at runtime, not compile time. Its effect is the same as calling &lt;a href=&quot;function.get-class&quot;&gt;get_class()&lt;/a&gt; on the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5520b9930bb3aecf9d86672e00b61c1730be14" translate="yes" xml:space="preserve">
          <source>As of PHP 8.0.0, the decimal point character is always &lt;code&gt;.&lt;/code&gt;. Prior to PHP 8.0.0, the decimal point character is defined in the script's locale (category LC_NUMERIC). See the &lt;a href=&quot;function.setlocale&quot;&gt;setlocale()&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8b123409d1ac3780860367621285ba2fb0537e" translate="yes" xml:space="preserve">
          <source>As of PHP 8.0.0, the list of function arguments may include a trailing comma, which will be ignored. That is particularly useful in cases where the list of arguments is long or contains long variable names, making it convenient to list arguments vertically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0704705387fe1cea610b771799ac34657e291cc6" translate="yes" xml:space="preserve">
          <source>As of PHP 8.0.0, the list of scope-inherited variables may include a trailing comma, which will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e7e5f4f614668d947390ecde8a9a68306f863e" translate="yes" xml:space="preserve">
          <source>As of PHP 8.0.0, the variable name for a caught exception is optional. If not specified, the &lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt;&lt;code&gt;catch&lt;/code&gt;&lt;/a&gt; block will still execute but will not have access to the thrown object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3948194ef111259d26b75e671bf4d92931e78074" translate="yes" xml:space="preserve">
          <source>As of runkit version 0.5, certain Sandbox settings may be modified on the fly using ArrayAccess syntax. Some settings, such as &lt;code&gt;active&lt;/code&gt; are read-only and meant to provide status information. Other settings, such as &lt;code&gt;output_handler&lt;/code&gt; may be set and read much like a normal array offset. Future settings may be write-only, however no such settings currently exist.</source>
          <target state="translated">从Runkit版本0.5开始，可以使用ArrayAccess语法即时修改某些沙箱设置。某些设置（例如 &lt;code&gt;active&lt;/code&gt; 是只读的，旨在提供状态信息。可以设置和读取其他设置，例如 &lt;code&gt;output_handler&lt;/code&gt; ，就像正常数组偏移一样。将来的设置可能是只写的，但是当前不存在此类设置。</target>
        </trans-unit>
        <trans-unit id="4dac5c6f1b3f2ed33d3286d94dbd3028aaced85f" translate="yes" xml:space="preserve">
          <source>As of runkit version 0.5, this function is deprecated and is scheduled to be removed from the package prior to a 1.0 release. The output handler for a given Runkit_Sandbox instance may be read/set using the array offset syntax shown on the &lt;a href=&quot;runkit.sandbox&quot;&gt;Runkit_Sandbox&lt;/a&gt; class definition page.</source>
          <target state="translated">从Runkit版本0.5开始，不推荐使用此功能，并计划在1.0发行版之前从软件包中删除该功能。可以使用&lt;a href=&quot;runkit.sandbox&quot;&gt;Runkit_Sandbox&lt;/a&gt;类定义页面上显示的数组偏移量语法读取/设置给定Runkit_Sandbox实例的输出处理程序。</target>
        </trans-unit>
        <trans-unit id="6273caad8bda209240ab6a6688d05ad17c916bce" translate="yes" xml:space="preserve">
          <source>As of uopz 6.0.0 mocking static members is no longer supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="905848ff7b7b529895e5932161e2c6f0ee979d86" translate="yes" xml:space="preserve">
          <source>As of version 2.0.0, the returned string is encoded in Unicode/UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ba0c2f4a1cb79aa6bb4cfe8bff81e4bdfd3ef8" translate="yes" xml:space="preserve">
          <source>As opposed to defining constants using &lt;a href=&quot;function.define&quot;&gt;define()&lt;/a&gt;, constants defined using the &lt;code&gt;const&lt;/code&gt; keyword must be declared at the top-level scope because they are defined at compile-time. This means that they cannot be declared inside functions, loops, &lt;code&gt;if&lt;/code&gt; statements or &lt;code&gt;try&lt;/code&gt;/ &lt;code&gt;catch&lt;/code&gt; blocks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab4c3b32edc0f937f690e5786fc76e8c0769cf4" translate="yes" xml:space="preserve">
          <source>As opposed to defining constants using &lt;a href=&quot;function.define&quot;&gt;define()&lt;/a&gt;, constants defined using the &lt;em&gt;const&lt;/em&gt; keyword must be declared at the top-level scope because they are defined at compile-time. This means that they cannot be declared inside functions, loops, &lt;em&gt;if&lt;/em&gt; statements or &lt;em&gt;try&lt;/em&gt;/ &lt;em&gt;catch&lt;/em&gt; blocks.</source>
          <target state="translated">与使用&lt;a href=&quot;function.define&quot;&gt;define（）&lt;/a&gt;定义常量相反，使用&lt;em&gt;const&lt;/em&gt;关键字定义的&lt;em&gt;常量&lt;/em&gt;必须在顶级范围内声明，因为它们是在编译时定义的。这意味着它们不能在函数，循环，&lt;em&gt;if&lt;/em&gt;语句或&lt;em&gt;try&lt;/em&gt; / &lt;em&gt;catch&lt;/em&gt;块内声明。</target>
        </trans-unit>
        <trans-unit id="2cf624740dcc1c4e7125ef6b46cfa17cfaaeecce" translate="yes" xml:space="preserve">
          <source>As opposed with &lt;a href=&quot;function.isset&quot;&gt;isset()&lt;/a&gt;, &lt;strong&gt;property_exists()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; even if the property has the value &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">与&lt;a href=&quot;function.isset&quot;&gt;isset（）&lt;/a&gt;相反，即使属性的值为&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt;property_exists（）&lt;/strong&gt;也会返回&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="da0366ef9b52ddf9bb7702b216238e42b73f4a3f" translate="yes" xml:space="preserve">
          <source>As opposed with &lt;a href=&quot;function.isset&quot;&gt;isset()&lt;/a&gt;, &lt;strong&gt;property_exists()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; even if the property has the value &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e6a5f8b13f60e57ca3fbc99449b399d6c67a7c" translate="yes" xml:space="preserve">
          <source>As passed : 'bar'</source>
          <target state="translated">通过:'bar'</target>
        </trans-unit>
        <trans-unit id="88b401fa34e68d9588f800a42732b1321b69de15" translate="yes" xml:space="preserve">
          <source>As passed : array (</source>
          <target state="translated">作为传递:数组(</target>
        </trans-unit>
        <trans-unit id="fdffef060ffc75cb1fc4c96e368245c52f0f8cb9" translate="yes" xml:space="preserve">
          <source>As resource variables hold special handles to opened files, database connections, image canvas areas and the like, converting to a resource makes no sense.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36bc794ced7d836b26bfe57dce4bc07ff7014b0" translate="yes" xml:space="preserve">
          <source>As said before, references are not pointers. That means, the following construct won't do what you expect:</source>
          <target state="translated">如前所述,引用不是指针。这意味着,下面的构造不会像你期望的那样。</target>
        </trans-unit>
        <trans-unit id="9e99c084b8fc557ffd276652c6d810938b44f6c4" translate="yes" xml:space="preserve">
          <source>As short tags can be disabled it is recommened to only use the normal tags (&lt;code&gt;&amp;lt;?php ?&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;?= ?&amp;gt;&lt;/code&gt;) to maximise compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866ec8e345a04576ee58fe7aee87c2e9340d6cb0" translate="yes" xml:space="preserve">
          <source>As stated above, directly converting an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;, &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt;, or &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt; to a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; does not provide any useful information about the value beyond its type. See the functions &lt;a href=&quot;function.print-r&quot;&gt;print_r()&lt;/a&gt; and &lt;a href=&quot;function.var-dump&quot;&gt;var_dump()&lt;/a&gt; for more effective means of inspecting the contents of these types.</source>
          <target state="translated">如上所述，直接将&lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;，&lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt;或&lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt;转换为&lt;a href=&quot;language.types.string&quot;&gt;字符串&lt;/a&gt;不会提供有关该类型以外的值的任何有用信息。有关检查这些类型的内容的更有效方法，请参见函数&lt;a href=&quot;function.print-r&quot;&gt;print_r（）&lt;/a&gt;和&lt;a href=&quot;function.var-dump&quot;&gt;var_dump（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="66ae88aa45772ef88167669ba9ca9597cf9643ed" translate="yes" xml:space="preserve">
          <source>As stated above, directly converting an array, object, or resource to a string does not provide any useful information about the value beyond its type. See the functions &lt;a href=&quot;function.print-r&quot;&gt;print_r()&lt;/a&gt; and &lt;a href=&quot;function.var-dump&quot;&gt;var_dump()&lt;/a&gt; for more effective means of inspecting the contents of these types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fa54061d765a8d50b1f625e6e4feb283591be6" translate="yes" xml:space="preserve">
          <source>As stated in the &lt;a href=&quot;language.types.array#language.types.array.syntax&quot;&gt;syntax&lt;/a&gt; section, what's inside the square brackets ('&lt;code&gt;[&lt;/code&gt;' and '&lt;code&gt;]&lt;/code&gt;') must be an expression. This means that code like this works:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c890e85bbe55fce7631655cdd007cd2d8fe7d4" translate="yes" xml:space="preserve">
          <source>As stated in the &lt;a href=&quot;language.types.array#language.types.array.syntax&quot;&gt;syntax&lt;/a&gt; section, what's inside the square brackets ('&lt;em&gt;[&lt;/em&gt;' and '&lt;em&gt;]&lt;/em&gt;') must be an expression. This means that code like this works:</source>
          <target state="translated">如&lt;a href=&quot;language.types.array#language.types.array.syntax&quot;&gt;语法&lt;/a&gt;部分所述，方括号（&amp;ldquo; &lt;em&gt;[&lt;/em&gt; &amp;rdquo;和&amp;ldquo; &lt;em&gt;]&lt;/em&gt; &amp;rdquo;）中的内容必须是表达式。这意味着这样的代码可以工作：</target>
        </trans-unit>
        <trans-unit id="ee9be0916a120e589a6dce4a923276454bdd1fc3" translate="yes" xml:space="preserve">
          <source>As string with additional headers to be set on the mail</source>
          <target state="translated">作为字符串,包含要在邮件上设置的附加标题。</target>
        </trans-unit>
        <trans-unit id="3598917b5524bc543d4d45f16a46747202edb6f3" translate="yes" xml:space="preserve">
          <source>As such, the &lt;code&gt;to&lt;/code&gt; parameter should not be an address in the form of &quot;Something &amp;lt;someone@example.com&amp;gt;&quot;. The mail command may not parse this properly while talking with the MTA.</source>
          <target state="translated">因此， &lt;code&gt;to&lt;/code&gt; 参数不应是&amp;ldquo; Something &amp;lt;someone@example.com&amp;gt;&amp;rdquo;形式的地址。与MTA交谈时，mail命令可能无法正确解析此命令。</target>
        </trans-unit>
        <trans-unit id="d4490deed3b27f1c0f76738d1bc2f521678b19d6" translate="yes" xml:space="preserve">
          <source>As the &lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt; hierarchy does not inherit from &lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt;, code that uses &lt;code&gt;catch (Exception $e) { ... }&lt;/code&gt; blocks to handle uncaught exceptions in PHP 5 will find that these &lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt;s are not caught by these blocks. Either a &lt;code&gt;catch (Error $e) { ... }&lt;/code&gt; block or a &lt;a href=&quot;function.set-exception-handler&quot;&gt;set_exception_handler()&lt;/a&gt; handler is required.</source>
          <target state="translated">由于&lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt;层次结构不是从&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt;继承的，因此使用 &lt;code&gt;catch (Exception $e) { ... }&lt;/code&gt; 块来处理PHP 5中未捕获的异常的代码将发现这些&lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt;未被这些块捕获。需要 &lt;code&gt;catch (Error $e) { ... }&lt;/code&gt; 块或&lt;a href=&quot;function.set-exception-handler&quot;&gt;set_exception_handler（）&lt;/a&gt;处理函数。</target>
        </trans-unit>
        <trans-unit id="6f19b71f6bba421efc0e6fed5450118b9a9b332b" translate="yes" xml:space="preserve">
          <source>As the output is dependent upon the underlying C library, some conversion specifiers are not supported. On Windows, supplying unknown conversion specifiers will result in 5 &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; messages and return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;. On other operating systems you may not get any &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; messages and the output may contain the conversion specifiers unconverted.</source>
          <target state="translated">由于输出取决于基础C库，因此不支持某些转换说明符。在Windows上，提供未知的转换说明符将导致5 &lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt;消息并返回&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;。在其他操作系统上，您可能不会收到任何&lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt;消息，并且输出可能包含未转换的转换说明符。</target>
        </trans-unit>
        <trans-unit id="0b7728ac392e27a6ec16407cad65f59393037c11" translate="yes" xml:space="preserve">
          <source>As the output is dependent upon the underlying C library, some conversion specifiers are not supported. On Windows, supplying unknown conversion specifiers will result in 5 &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; messages and return &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;. On other operating systems you may not get any &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; messages and the output may contain the conversion specifiers unconverted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5211e7ddc4fb7afc70f404daab7ad413a61bd18a" translate="yes" xml:space="preserve">
          <source>As the output shows, the &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt; iterated through all of the &lt;a href=&quot;language.oop5.visibility&quot;&gt;visible&lt;/a&gt; properties that could be accessed.</source>
          <target state="translated">如输出所示，&lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt;遍历了所有可以访问的&lt;a href=&quot;language.oop5.visibility&quot;&gt;可见&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="f412b7a75502678a68735a08873cbf389a6fa82b" translate="yes" xml:space="preserve">
          <source>As the value is interpreted as boolean by the Net-SNMP library, it can only be &quot;0&quot; or &quot;1&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f496c49fc48ac58a6465818165fdbe954dad476" translate="yes" xml:space="preserve">
          <source>As this function sorts the returned values on the client side it is possible that you might not get the expected results in case you reach the &lt;code&gt;sizelimit&lt;/code&gt; either of the server or defined within &lt;a href=&quot;function.ldap-search&quot;&gt;ldap_search()&lt;/a&gt;.</source>
          <target state="translated">当此函数在客户端对返回值进行排序时，如果达到服务器的大小 &lt;code&gt;sizelimit&lt;/code&gt; 或在&lt;a href=&quot;function.ldap-search&quot;&gt;ldap_search（）中&lt;/a&gt;定义的大小限制，则可能无法获得预期的结果。</target>
        </trans-unit>
        <trans-unit id="79e56cfe26f27e39615c5352d949b56d66f872da" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;function.curl-setopt&quot;&gt;curl_setopt()&lt;/a&gt;, passing an array to &lt;strong&gt;&lt;code&gt;CURLOPT_POST&lt;/code&gt;&lt;/strong&gt; will encode the data as &lt;em&gt;multipart/form-data&lt;/em&gt;, while passing a URL-encoded string will encode the data as &lt;em&gt;application/x-www-form-urlencoded&lt;/em&gt;.</source>
          <target state="translated">与&lt;a href=&quot;function.curl-setopt&quot;&gt;curl_setopt（）一样&lt;/a&gt;，将数组传递给&lt;strong&gt; &lt;code&gt;CURLOPT_POST&lt;/code&gt; &lt;/strong&gt;会将数据编码为&lt;em&gt;multipart / form-data&lt;/em&gt;，而传递URL编码的字符串会将数据编码为&lt;em&gt;application / x-www-form-urlencoded&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="cc55f6e97269627133dcc739258204017fbf58d5" translate="yes" xml:space="preserve">
          <source>As with all classes that implement the &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; interface, &lt;strong&gt;Phar::offsetGet()&lt;/strong&gt; is automatically called when using the &lt;code&gt;[]&lt;/code&gt; angle bracket operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d13997fcfe7c0f1efd14eb10e7943dcc0d2d7873" translate="yes" xml:space="preserve">
          <source>As with all classes that implement the &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; interface, &lt;strong&gt;Phar::offsetGet()&lt;/strong&gt; is automatically called when using the &lt;em&gt;[]&lt;/em&gt; angle bracket operator.</source>
          <target state="translated">与所有实现&lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;接口的类一样，在使用&lt;em&gt;[]&lt;/em&gt;尖括号运算符时会自动调用&lt;strong&gt;Phar :: offsetGet（）&lt;/strong&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="09bcbb027939832d5da0536111efbc1d21929fb2" translate="yes" xml:space="preserve">
          <source>As with all internal PHP functions as of 5.3.0, &lt;strong&gt;array_search()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if invalid parameters are passed to it.</source>
          <target state="translated">与5.3.0版本中的所有内部PHP函数一样，如果将无效的参数传递给它，&lt;strong&gt;array_search（）&lt;/strong&gt;将返回&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="2754f5cb2efc68df43ef21e96df9aed0e29a677f" translate="yes" xml:space="preserve">
          <source>As with anything that outputs its result directly to the browser, the &lt;a href=&quot;https://secure.php.net/manual/en/book.outcontrol.php&quot;&gt;output-control functions&lt;/a&gt; can be used to capture the output of this function, and save it in a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; (for example).</source>
          <target state="translated">与将结果直接输出到浏览器的任何东西一样，输出&lt;a href=&quot;https://secure.php.net/manual/en/book.outcontrol.php&quot;&gt;控制功能&lt;/a&gt;可用于捕获此功能的输出，并将其保存在&lt;a href=&quot;language.types.string&quot;&gt;字符串中&lt;/a&gt;（例如）。</target>
        </trans-unit>
        <trans-unit id="316bfd4c5d87580680695c011a13623e000b28e1" translate="yes" xml:space="preserve">
          <source>As with anything that outputs its result directly to the browser, the &lt;a href=&quot;https://www.php.net/manual/en/book.outcontrol.php&quot;&gt;output-control functions&lt;/a&gt; can be used to capture the output of this function, and save it in a string (for example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c65dbe723797529b74d1acb4318b090416a5cc" translate="yes" xml:space="preserve">
          <source>As with normal exceptions, these &lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt; exceptions will bubble up until they reach the first matching &lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt;&lt;code&gt;catch&lt;/code&gt;&lt;/a&gt; block. If there are no matching blocks, then any default exception handler installed with &lt;a href=&quot;function.set-exception-handler&quot;&gt;set_exception_handler()&lt;/a&gt; will be called, and if there is no default exception handler, then the exception will be converted to a fatal error and will be handled like a traditional error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afdc770b27552bdbfc1d5e96ff256244e5c1c631" translate="yes" xml:space="preserve">
          <source>As with normal exceptions, these &lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt; exceptions will bubble up until they reach the first matching &lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt;&lt;em&gt;catch&lt;/em&gt;&lt;/a&gt; block. If there are no matching blocks, then any default exception handler installed with &lt;a href=&quot;function.set-exception-handler&quot;&gt;set_exception_handler()&lt;/a&gt; will be called, and if there is no default exception handler, then the exception will be converted to a fatal error and will be handled like a traditional error.</source>
          <target state="translated">与普通异常一样，这些&lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt;异常会冒泡直到到达第一个匹配的&lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt;&lt;em&gt;catch&lt;/em&gt;&lt;/a&gt;块。如果没有匹配的块，则将调用安装有&lt;a href=&quot;function.set-exception-handler&quot;&gt;set_exception_handler（）的&lt;/a&gt;任何默认异常处理程序，如果没有默认的异常处理程序，则该异常将转换为致命错误，并将像传统错误一样进行处理。</target>
        </trans-unit>
        <trans-unit id="b550c3ac1e42f23a262b44df4347d67db42bae49" translate="yes" xml:space="preserve">
          <source>As with the simple value yields shown earlier, yielding a key/value pair in an expression context requires the yield statement to be parenthesised:</source>
          <target state="translated">与前面所示的简单值产率一样,在表达式上下文中产率键/值对需要将产率语句用括号括起来。</target>
        </trans-unit>
        <trans-unit id="49f22e6a92ee439bc6f3bee91d46cfb6a8a092ca" translate="yes" xml:space="preserve">
          <source>As with timers, the callback is guaranteed to be invoked only when the point in time where it is supposed to trigger has passed. If multiple timers become ready during the same loop iteration then the ones with earlier time-out values are invoked before ones with later time-out values (but this is no longer true when a callback calls &lt;a href=&quot;evloop.run&quot;&gt;EvLoop::run()&lt;/a&gt; recursively).</source>
          <target state="translated">与计时器一样，保证仅在应该触发回调的时间点过去时才调用该回调。如果在同一循环迭代中准备好多个计时器，则将在具有&lt;a href=&quot;evloop.run&quot;&gt;较高&lt;/a&gt;超时值的计时器之前调用具有较高超时值的计时器（但是，当回调递归调用EvLoop :: run（）时，将不再是正确的）。</target>
        </trans-unit>
        <trans-unit id="c6cd4b7b452f95dbbe652ec34b19efcbb0ba0441" translate="yes" xml:space="preserve">
          <source>As you can see the last value &lt;code&gt;&quot;d&quot;&lt;/code&gt; was assigned the key &lt;code&gt;7&lt;/code&gt;. This is because the largest integer key before that was &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a55e180254feddc7051291fa44fffe5250c7f193" translate="yes" xml:space="preserve">
          <source>As you can see the last value &lt;em&gt;&quot;d&quot;&lt;/em&gt; was assigned the key &lt;em&gt;7&lt;/em&gt;. This is because the largest integer key before that was &lt;em&gt;6&lt;/em&gt;.</source>
          <target state="translated">如您所见，为最后一个值&lt;em&gt;&amp;ldquo; d&amp;rdquo;&lt;/em&gt;分配了键&lt;em&gt;7&lt;/em&gt;。这是因为之前最大的整数键是&lt;em&gt;6&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a173e725607d0f98c78ebac0b31138d8d136aa84" translate="yes" xml:space="preserve">
          <source>Asia</source>
          <target state="translated">Asia</target>
        </trans-unit>
        <trans-unit id="8a2e1326cdf7280fae9246438545acb80c113182" translate="yes" xml:space="preserve">
          <source>Asia time zones.</source>
          <target state="translated">亚洲时区。</target>
        </trans-unit>
        <trans-unit id="4b486b14ba35128f7d93a1ababac7427a61b35c0" translate="yes" xml:space="preserve">
          <source>Ask the multi handle if there are any messages or information from the individual transfers. Messages may include information such as an error code from the transfer or just the fact that a transfer is completed.</source>
          <target state="translated">询问多处理机是否有任何信息或来自单个传输的信息。信息可能包括转账的错误代码等信息,或者仅仅是转账已完成的事实。</target>
        </trans-unit>
        <trans-unit id="ae40253ef527434fa7ad991157d295b5459561ae" translate="yes" xml:space="preserve">
          <source>Assemble a url.</source>
          <target state="translated">组建一个网址。</target>
        </trans-unit>
        <trans-unit id="8beae02d3fb5c0677ad1bcbaf1643e335192928b" translate="yes" xml:space="preserve">
          <source>Assertion subpatterns are not capturing subpatterns, and may not be repeated, because it makes no sense to assert the same thing several times. If any kind of assertion contains capturing subpatterns within it, these are counted for the purposes of numbering the capturing subpatterns in the whole pattern. However, substring capturing is carried out only for positive assertions, because it does not make sense for negative assertions.</source>
          <target state="translated">断言子模式不是捕获子模式,也不能重复,因为多次断言同一件事是没有意义的。如果任何一种断言中包含了捕获子模式,这些子模式会被计算在内,以便对整个模式中的捕获子模式进行编号。然而,子串捕获只对正断言进行,因为它对负断言没有意义。</target>
        </trans-unit>
        <trans-unit id="e3292c12a856a02722a46d87471ff4e6faefa104" translate="yes" xml:space="preserve">
          <source>AssertionError</source>
          <target state="translated">AssertionError</target>
        </trans-unit>
        <trans-unit id="5061cebcb33e24b0b2cbfc16366a8edfa6d92c7e" translate="yes" xml:space="preserve">
          <source>AssertionError &amp;rarr;</source>
          <target state="translated">AssertionError&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="49bf55dc112eb3597726ba8ecf785a4fae4cbce0" translate="yes" xml:space="preserve">
          <source>Assertions</source>
          <target state="translated">Assertions</target>
        </trans-unit>
        <trans-unit id="d20104ab8cafeb2e9adc34db570adec53186f0a5" translate="yes" xml:space="preserve">
          <source>Assertions &amp;rarr;</source>
          <target state="translated">断言&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="2665d21edb771214fc5df1f479e5a109d9f2d6d8" translate="yes" xml:space="preserve">
          <source>Assertions can be nested in any combination. For example, &lt;code&gt;(?&amp;lt;=(?&amp;lt;!foo)bar)baz&lt;/code&gt; matches an occurrence of &quot;baz&quot; that is preceded by &quot;bar&quot; which in turn is not preceded by &quot;foo&quot;, while &lt;code&gt;(?&amp;lt;=\d{3}...(?&amp;lt;!999))foo&lt;/code&gt; is another pattern which matches &quot;foo&quot; preceded by three digits and any three characters that are not &quot;999&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cca3af175147a1e2ced06a09dcdbcfa5589c1e7" translate="yes" xml:space="preserve">
          <source>Assertions can be nested in any combination. For example, &lt;em&gt;(?&amp;lt;=(?&amp;lt;!foo)bar)baz&lt;/em&gt; matches an occurrence of &quot;baz&quot; that is preceded by &quot;bar&quot; which in turn is not preceded by &quot;foo&quot;, while &lt;em&gt;(?&amp;lt;=\d{3}...(?&amp;lt;!999))foo&lt;/em&gt; is another pattern which matches &quot;foo&quot; preceded by three digits and any three characters that are not &quot;999&quot;.</source>
          <target state="translated">断言可以嵌套为任何组合。例如，&lt;em&gt;（？&amp;lt;=（？&amp;lt;！foo）bar）baz&lt;/em&gt;匹配出现在&amp;ldquo; baz&amp;rdquo;前面的&amp;ldquo; bar&amp;rdquo;，而&amp;ldquo; bar&amp;rdquo;前面没有&amp;ldquo; foo&amp;rdquo;，而&lt;em&gt;（？&amp;lt;= \ d {3 } ...（？&amp;lt;！999））foo&lt;/em&gt;是另一个与&amp;ldquo; foo&amp;rdquo;相匹配的模式，该前缀以三位数字和任意三个非&amp;ldquo; 999&amp;rdquo;字符组成。</target>
        </trans-unit>
        <trans-unit id="b804f4a6ab5e2c167fd317138b99dc6366096e68" translate="yes" xml:space="preserve">
          <source>Assertions count towards the maximum of 200 parenthesized subpatterns.</source>
          <target state="translated">断言计入最多200个小括号子模式。</target>
        </trans-unit>
        <trans-unit id="2b9a809e908781ed11ffadd5bebf5f3a87ba4cad" translate="yes" xml:space="preserve">
          <source>Assertions should be used as a debugging feature only. You may use them for sanity-checks that test for conditions that should always be &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; and that indicate some programming errors if not or to check for the presence of certain features like extension functions or certain system limits and features.</source>
          <target state="translated">断言应仅用作调试功能。您可以将它们用于完整性检查，以测试应该始终为&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; 的&lt;/strong&gt;条件，如果条件不&lt;strong&gt;正确则&lt;/strong&gt;指示某些编程错误，或者检查是否存在某些功能，例如扩展功能或某些系统限制和功能。</target>
        </trans-unit>
        <trans-unit id="cedf40ce0766e7e4c36ab6e4ddbfc8bb8b249505" translate="yes" xml:space="preserve">
          <source>Assertions should be used as a debugging feature only. You may use them for sanity-checks that test for conditions that should always be &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; and that indicate some programming errors if not or to check for the presence of certain features like extension functions or certain system limits and features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6248b428b39b066def39b2e5939bf5a11c38888b" translate="yes" xml:space="preserve">
          <source>Assertions should not be used for normal runtime operations like input parameter checks. As a rule of thumb your code should always be able to work correctly if assertion checking is not activated.</source>
          <target state="translated">断言不应该被用于正常的运行时操作,比如输入参数检查。作为一个经验法则,如果没有激活断言检查,你的代码应该总是能够正常工作。</target>
        </trans-unit>
        <trans-unit id="d67a13ffa859bea51d61bead619ff75b205f57e3" translate="yes" xml:space="preserve">
          <source>Assigan values to View engine, then the value can access directly by name in template.</source>
          <target state="translated">将值分配给View引擎,然后在模板中直接通过名称访问该值。</target>
        </trans-unit>
        <trans-unit id="43a5914cb54169a132f368602d585b3591a64c2e" translate="yes" xml:space="preserve">
          <source>Assign By Reference</source>
          <target state="translated">参考分配</target>
        </trans-unit>
        <trans-unit id="2e1338237507c7388e7d9e6ec98854728b4ccadc" translate="yes" xml:space="preserve">
          <source>Assign a priority to a bufferevent</source>
          <target state="translated">给缓冲区事件指定一个优先级。</target>
        </trans-unit>
        <trans-unit id="2933b45c5b7d8813f7e25ba4ee811087ef92cdfc" translate="yes" xml:space="preserve">
          <source>Assign a priority to the &lt;code&gt;bevent&lt;/code&gt;.</source>
          <target state="translated">为 &lt;code&gt;bevent&lt;/code&gt; 分配优先级。</target>
        </trans-unit>
        <trans-unit id="fba89c9ce1d594bf39c58422b4377b05d2075aea" translate="yes" xml:space="preserve">
          <source>Assign a priority to the &lt;code&gt;event&lt;/code&gt;.</source>
          <target state="translated">为 &lt;code&gt;event&lt;/code&gt; 分配优先级。</target>
        </trans-unit>
        <trans-unit id="9f295ce28f9cbc17aea0f0a8a47be7aea940db86" translate="yes" xml:space="preserve">
          <source>Assign the specified &lt;code&gt;bevent&lt;/code&gt; to the &lt;code&gt;event_base&lt;/code&gt;.</source>
          <target state="translated">将指定的 &lt;code&gt;bevent&lt;/code&gt; 分配给 &lt;code&gt;event_base&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa1903eca18ae92e9ccec9552cb537e97ef0bb80" translate="yes" xml:space="preserve">
          <source>Assigning another value to &lt;code&gt;handle&lt;/code&gt; argument in subsequent code will release the lock.</source>
          <target state="translated">在后续代码中分配另一个值来 &lt;code&gt;handle&lt;/code&gt; 参数将释放该锁。</target>
        </trans-unit>
        <trans-unit id="7bec00ae67953bf63f8b1b3f8ddf8f9255f79d82" translate="yes" xml:space="preserve">
          <source>Assignment Operators</source>
          <target state="translated">分配操作者</target>
        </trans-unit>
        <trans-unit id="cb6d2508064b7f34a684c58cc5638ae8ef631ba2" translate="yes" xml:space="preserve">
          <source>Assignment Operators &amp;rarr;</source>
          <target state="translated">赋值运算符&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="c6606fee6331c4bf43802ca0b5860b36d427bd3a" translate="yes" xml:space="preserve">
          <source>Assignment by Reference</source>
          <target state="translated">参考作业</target>
        </trans-unit>
        <trans-unit id="18074dc5203632c6d67fd9f3e446f952068f75b1" translate="yes" xml:space="preserve">
          <source>Assignment by reference is also supported, using the &quot;$var = &amp;amp;$othervar;&quot; syntax. Assignment by reference means that both variables end up pointing at the same data, and nothing is copied anywhere.</source>
          <target state="translated">还支持使用&amp;ldquo; $ var =＆$ othervar;&amp;rdquo;进行引用分配。句法。通过引用赋值意味着两个变量最终都指向相同的数据，并且没有任何内容被复制到任何地方。</target>
        </trans-unit>
        <trans-unit id="1a4d1e9b1f92e8358f67ebe0d07dd9be86ee5dd8" translate="yes" xml:space="preserve">
          <source>Assigns a value to the specified offset.</source>
          <target state="translated">为指定的偏移量赋值。</target>
        </trans-unit>
        <trans-unit id="3bd14e94cfa66f2a989979afbdcb1b1617634303" translate="yes" xml:space="preserve">
          <source>Assigns read, write and event(status) callbacks.</source>
          <target state="translated">指定读、写和事件(状态)回调。</target>
        </trans-unit>
        <trans-unit id="339cd85eb93aa3433fd2f5c1ca2ce016c9c0e06a" translate="yes" xml:space="preserve">
          <source>Assigns the worker an identifier.</source>
          <target state="translated">给工人分配一个标识符。</target>
        </trans-unit>
        <trans-unit id="4a3c6a876faf9eebf78adc58f7f63329fdbe70f6" translate="yes" xml:space="preserve">
          <source>Assocates the previous image in an image list with the Imagick object.</source>
          <target state="translated">将图像列表中的前一张图像与Imagick对象进行关联。</target>
        </trans-unit>
        <trans-unit id="eaedce342dbac2ea574b1f9507f683f16a32aa67" translate="yes" xml:space="preserve">
          <source>Associate data to an &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; in the storage.</source>
          <target state="translated">将数据与存储中的&lt;a href=&quot;language.types.object&quot;&gt;对象相关&lt;/a&gt;联。</target>
        </trans-unit>
        <trans-unit id="5982fa849bf2cafc44322092b0078cb397953ec9" translate="yes" xml:space="preserve">
          <source>Associate data to an object in the storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30eddbbad08eee6756fcfd86ff9fbd66fe153bac" translate="yes" xml:space="preserve">
          <source>Associated event base</source>
          <target state="translated">相关事件基数</target>
        </trans-unit>
        <trans-unit id="fa576c78e63e88239909b14c7528b5a4310d6406" translate="yes" xml:space="preserve">
          <source>Associated event base.</source>
          <target state="translated">相关的活动基地。</target>
        </trans-unit>
        <trans-unit id="374444a94f64db04ab46e6f36b35b3af9d56122b" translate="yes" xml:space="preserve">
          <source>Associates a &lt;code&gt;key&lt;/code&gt; with a &lt;code&gt;value&lt;/code&gt;, overwriting a previous association if one exists.</source>
          <target state="translated">将一个 &lt;code&gt;key&lt;/code&gt; 与一个 &lt;code&gt;value&lt;/code&gt; 相关联，如果存在则覆盖先前的关联。</target>
        </trans-unit>
        <trans-unit id="e0d9f64c47ea42d90f316abd2a595de0ef60e1b2" translate="yes" xml:space="preserve">
          <source>Associates a named clipping path with the image. Only the areas drawn on by the clipping path will be modified as long as it remains in effect.</source>
          <target state="translated">将一个命名的剪切路径与图像关联。只有被剪裁路径绘制的区域才会被修改,只要它仍然有效。</target>
        </trans-unit>
        <trans-unit id="344ee9b67fa905db38fe4ff6485782100f3dda78" translate="yes" xml:space="preserve">
          <source>Associates all key-value &lt;code&gt;pairs&lt;/code&gt; of a &lt;a href=&quot;class.traversable&quot;&gt;traversable&lt;/a&gt; object or &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;.</source>
          <target state="translated">关联可&lt;a href=&quot;class.traversable&quot;&gt;遍历&lt;/a&gt;对象或&lt;a href=&quot;language.types.array&quot;&gt;数组的&lt;/a&gt;所有键值 &lt;code&gt;pairs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c27968137562231414a29a11ba2a58c1c537d4b8" translate="yes" xml:space="preserve">
          <source>Associates all key-value &lt;code&gt;pairs&lt;/code&gt; of a &lt;a href=&quot;class.traversable&quot;&gt;traversable&lt;/a&gt; object or array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99ca8450f7a962b387d42777891f64550857030" translate="yes" xml:space="preserve">
          <source>Associates an artifact with the image. The difference between image properties and image artifacts is that properties are public and artifacts are private. This method is available if Imagick has been compiled against ImageMagick version 6.5.7 or newer.</source>
          <target state="translated">将一个工件与图像关联起来。图像属性和图像工件之间的区别在于,属性是公开的,而工件是私有的。如果 Imagick 是根据 ImageMagick 6.5.7 或更新的版本编译的,则此方法可用。</target>
        </trans-unit>
        <trans-unit id="4c9828549a33b72870b3c7b81b5502607e0f1dca" translate="yes" xml:space="preserve">
          <source>Associates data, or info, with the object currently pointed to by the iterator.</source>
          <target state="translated">将数据或信息与迭代器当前指向的对象关联起来。</target>
        </trans-unit>
        <trans-unit id="166b16292091fbc46d27cd1c99cbf6c9d27e47c3" translate="yes" xml:space="preserve">
          <source>Associates one or more options with the wand.</source>
          <target state="translated">将一个或多个选项与魔杖联系起来。</target>
        </trans-unit>
        <trans-unit id="45c5cfcba913a3dd1dff2e72bee92bc76fc85d35" translate="yes" xml:space="preserve">
          <source>Associates the &lt;code&gt;event_base&lt;/code&gt; with the &lt;code&gt;event&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;event_base&lt;/code&gt; 与 &lt;code&gt;event&lt;/code&gt; 关联。</target>
        </trans-unit>
        <trans-unit id="495b52a9efbff1015cd0c7a51d193f78a706cb1c" translate="yes" xml:space="preserve">
          <source>Associates the next image in the image list with an Gmagick object.</source>
          <target state="translated">将图像列表中的下一张图像与Gmagick对象关联。</target>
        </trans-unit>
        <trans-unit id="cd78f087801c46f3ef7808c1f0a3ca56b6b6cab2" translate="yes" xml:space="preserve">
          <source>Associates the next image in the image list with an Imagick object.</source>
          <target state="translated">将图像列表中的下一张图像与Imagick对象关联。</target>
        </trans-unit>
        <trans-unit id="887488be6bb33503047c83872f6ebef7678fc9ff" translate="yes" xml:space="preserve">
          <source>Associates the previous image in an image list with the Gmagick object.</source>
          <target state="translated">将图像列表中的前一张图像与Gmagick对象关联起来。</target>
        </trans-unit>
        <trans-unit id="ec6fc08eb4fabb771ce1793202ffe50363709890" translate="yes" xml:space="preserve">
          <source>Associating</source>
          <target state="translated">Associating</target>
        </trans-unit>
        <trans-unit id="b7d696bef2889daa816d6df6678040a467b6cfa9" translate="yes" xml:space="preserve">
          <source>Associative</source>
          <target state="translated">Associative</target>
        </trans-unit>
        <trans-unit id="e3e16c3f4f1b987fe2bc37e17653560d1b7cbb2f" translate="yes" xml:space="preserve">
          <source>Associative (&lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;) keys will be maintained, but numeric keys will be re-indexed.</source>
          <target state="translated">关联（&lt;a href=&quot;language.types.string&quot;&gt;字符串&lt;/a&gt;）键将保留，但数字键将重新索引。</target>
        </trans-unit>
        <trans-unit id="e500df54eff494ed54306d4c433ff5ddbd8e9fe7" translate="yes" xml:space="preserve">
          <source>Associative (string) keys will be maintained, but numeric keys will be re-indexed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20cdb4a455dea5441e25389d055f579e80c22873" translate="yes" xml:space="preserve">
          <source>Associative &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; containing the keyword-value pairs for this locale</source>
          <target state="translated">包含此语言环境的关键字/值对的关联&lt;a href=&quot;language.types.array&quot;&gt;数组&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e755f1688a5fe496e11b0913d50e3a697ffb2674" translate="yes" xml:space="preserve">
          <source>Associative array containing crypt, compression, and message authentication code (MAC) method preferences for messages sent from client to server.</source>
          <target state="translated">关联数组,包含从客户端发送到服务器的消息的加密、压缩和消息验证码(MAC)方法偏好。</target>
        </trans-unit>
        <trans-unit id="b265115ee2ba17f5807f52bbca9567f7118017c9" translate="yes" xml:space="preserve">
          <source>Associative array containing crypt, compression, and message authentication code (MAC) method preferences for messages sent from server to client.</source>
          <target state="translated">关联数组,包含服务器向客户端发送消息的加密、压缩和消息验证码(MAC)方法偏好。</target>
        </trans-unit>
        <trans-unit id="2ddce46b2b7d7aed75776330ed00fe1af7197903" translate="yes" xml:space="preserve">
          <source>Associative array containing document IDs as keys and array of attribute values as values.</source>
          <target state="translated">包含作为键的文档ID和作为值的属性值数组的关联数组。</target>
        </trans-unit>
        <trans-unit id="148c8e290f2052c1b2381009a719ae7c8309d7cf" translate="yes" xml:space="preserve">
          <source>Associative array containing the additional headers (example: receipt).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53c4ed2676fd3d3853b8583d1b231383b0e3424" translate="yes" xml:space="preserve">
          <source>Associative array containing the keyword-value pairs for this locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc95132016e760428f3a1f558f79777edc1bff03" translate="yes" xml:space="preserve">
          <source>Associative array of SSL context options One of &lt;a href=&quot;class.eventsslcontext#eventsslcontext.constants&quot;&gt; &lt;code&gt;EventSslContext::OPT_*&lt;/code&gt; constants&lt;/a&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650a04b079dc614141cde117feb62b02307a8641" translate="yes" xml:space="preserve">
          <source>Associative array of SSL context options One of &lt;a href=&quot;class.eventsslcontext#eventsslcontext.constants&quot;&gt; &lt;em&gt;EventSslContext::OPT_*&lt;/em&gt; constants&lt;/a&gt; .</source>
          <target state="translated">SSL上下文选项的关联数组&lt;a href=&quot;class.eventsslcontext#eventsslcontext.constants&quot;&gt;&lt;em&gt;EventSslContext :: OPT_ *&lt;/em&gt;&lt;/a&gt;常量之一。 &lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f3f253a48cf86eda7f4ab77f2ba7e62ec82c0a82" translate="yes" xml:space="preserve">
          <source>Associative array of additional highlighting options (see below).</source>
          <target state="translated">附加高亮选项的关联数组(见下文)。</target>
        </trans-unit>
        <trans-unit id="8a2ffbb0c59b84e0d345c3705bc9e017d0e6c2cd" translate="yes" xml:space="preserve">
          <source>Associative array of attributes to assign to this public key. Refer to ietf-secsh-publickey-subsystem for a list of supported attributes. To mark an attribute as mandatory, precede its name with an asterisk. If the server is unable to support an attribute marked mandatory, it will abort the add process.</source>
          <target state="translated">要分配给这个公钥的关联属性数组。关于支持的属性列表,请参考 ietf-secsh-publickey-subsystem。要将一个属性标记为强制性的,请在它的名称前加上星号。如果服务器无法支持一个标记为强制性的属性,它将中止添加过程。</target>
        </trans-unit>
        <trans-unit id="2e3ff038cf5ca18f5bf45f764c86d882bd1de42e" translate="yes" xml:space="preserve">
          <source>Associative array of field names and field weights.</source>
          <target state="translated">字段名和字段权重的关联数组。</target>
        </trans-unit>
        <trans-unit id="c58a1a78fb5e3f222d43b50c329c56ab186c11b4" translate="yes" xml:space="preserve">
          <source>Associative array of keys and values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b06b05ea2c77e138a5cff31e48bbf6a2347485" translate="yes" xml:space="preserve">
          <source>Associative array of options or bitwise disjunction of flags. If filter accepts options, flags can be provided in &quot;flags&quot; field of array.</source>
          <target state="translated">关联的选项数组或标志的位式分解。如果过滤器接受选项,可以在数组的 &quot;flags &quot;字段中提供标志。</target>
        </trans-unit>
        <trans-unit id="16e1732c8b48fc6127882d97d3439bf7f0caff1b" translate="yes" xml:space="preserve">
          <source>Associative array of options or bitwise disjunction of flags. If filter accepts options, flags can be provided in &quot;flags&quot; field of array. For the &quot;callback&quot; filter, &lt;a href=&quot;language.types.callable&quot;&gt;callable&lt;/a&gt; type should be passed. The callback must accept one argument, the value to be filtered, and return the value after filtering/sanitizing it.</source>
          <target state="translated">选项的关联数组或标志的按位析取。如果过滤器接受选项，则可以在数组的&amp;ldquo;标志&amp;rdquo;字段中提供标志。对于&amp;ldquo;回调&amp;rdquo;过滤器，应传递&lt;a href=&quot;language.types.callable&quot;&gt;可调用&lt;/a&gt;类型。回调函数必须接受一个参数，即要过滤的值，并在过滤/清除之后返回该值。</target>
        </trans-unit>
        <trans-unit id="d20b5a26a1cdf631954b50a5206246dff93d9c8a" translate="yes" xml:space="preserve">
          <source>Associativity</source>
          <target state="translated">Associativity</target>
        </trans-unit>
        <trans-unit id="b920a434538bc9c1f45fd5e9671af66304e4a95e" translate="yes" xml:space="preserve">
          <source>Assuming &quot;bjori&quot; executes this script</source>
          <target state="translated">假设 &quot;bjori &quot;执行这个脚本。</target>
        </trans-unit>
        <trans-unit id="b3811c12641c636db22fe6b8471784ec31a29a74" translate="yes" xml:space="preserve">
          <source>Assuming that this phar is at &lt;code&gt;/path/to/myphar.phar&lt;/code&gt; and it contains &lt;code&gt;file.php&lt;/code&gt; and &lt;code&gt;file2.txt&lt;/code&gt;, if &lt;code&gt;file.php&lt;/code&gt; contains this code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c00588eae0cc6fb3d1d0b4cd8ff91f43b81ce043" translate="yes" xml:space="preserve">
          <source>Assuming that this phar is at &lt;em&gt;/path/to/myphar.phar&lt;/em&gt; and it contains &lt;em&gt;file.php&lt;/em&gt; and &lt;em&gt;file2.txt&lt;/em&gt;, if &lt;em&gt;file.php&lt;/em&gt; contains this code:</source>
          <target state="translated">假设此phar位于&lt;em&gt;/path/to/myphar.phar&lt;/em&gt;，并且包含&lt;em&gt;file.php&lt;/em&gt;和&lt;em&gt;file2.txt&lt;/em&gt;，如果&lt;em&gt;file.php&lt;/em&gt;包含以下代码：</target>
        </trans-unit>
        <trans-unit id="18888678f2309c4c00a32f371aaf24204fe393d2" translate="yes" xml:space="preserve">
          <source>Assuming the &quot;name&quot; cookie has been set earlier</source>
          <target state="translated">假设 &quot;名称 &quot;cookie已经在前面设置好了</target>
        </trans-unit>
        <trans-unit id="2e5e916c1d8fb07d81eac28d296e94c6f730b013" translate="yes" xml:space="preserve">
          <source>Assuming the following local name space is registered:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c8f1e97f337dba0abeee2b93c0488862d4f95b9" translate="yes" xml:space="preserve">
          <source>Assuming the following local name space registerd:</source>
          <target state="translated">假设注册了以下本地名称空间。</target>
        </trans-unit>
        <trans-unit id="34bb5f9941efaed9812f24864dd87283b044a047" translate="yes" xml:space="preserve">
          <source>Assuming the user POSTed name=Hannes</source>
          <target state="translated">假设用户POSTed name=Hannes。</target>
        </trans-unit>
        <trans-unit id="c40c7a8bf1954b166116c004c46267ad4140054c" translate="yes" xml:space="preserve">
          <source>Assuming the user entered http://example.com/?name=Hannes</source>
          <target state="translated">假设用户输入http://example.com/?name=Hannes</target>
        </trans-unit>
        <trans-unit id="143edc5274f5627d36f1b6a13b28edd1b19bb717" translate="yes" xml:space="preserve">
          <source>Assuming there are no argument errors, returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; iif the calendars are equivalent except possibly for their set time.</source>
          <target state="translated">假设没有参数错误，如果日历与设置日历时间相等，则返回&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="fa6ae2bf9ed71d5ad8762d8a0cc336cd2cd0238d" translate="yes" xml:space="preserve">
          <source>Assuming there are no argument errors, returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; iif the field is set.</source>
          <target state="translated">假设没有参数错误，如果设置了该字段，则返回&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="8fc608916dff45bca83d94f839194c7173cfbbbb" translate="yes" xml:space="preserve">
          <source>Assuming there are no argument errors, returns &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the calendars are equivalent except possibly for their set time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd5ae38e5bfad5d123fc9ea590472854511287c" translate="yes" xml:space="preserve">
          <source>Assuming there are no argument errors, returns &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the field is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d2c550c3e756043f358b2da04f22716bbd32b9" translate="yes" xml:space="preserve">
          <source>Assuming you're familiar with the concept of functions (if you're not, take a look at the chapter about &lt;a href=&quot;https://secure.php.net/manual/en/language.functions.php&quot;&gt;functions&lt;/a&gt;), you'd assume that typing &lt;em&gt;$c = foo()&lt;/em&gt; is essentially just like writing &lt;em&gt;$c = 5&lt;/em&gt;, and you're right. Functions are expressions with the value of their return value. Since &lt;em&gt;foo()&lt;/em&gt; returns 5, the value of the expression '&lt;em&gt;foo()&lt;/em&gt;' is 5. Usually functions don't just return a static value but compute something.</source>
          <target state="translated">假设您熟悉函数的概念（如果不熟悉，请参阅关于&lt;a href=&quot;https://secure.php.net/manual/en/language.functions.php&quot;&gt;函数&lt;/a&gt;的章节），您将假定键入&lt;em&gt;$ c = foo（）&lt;/em&gt;本质上就像编写&lt;em&gt;$ c = 5一样&lt;/em&gt;，并且你是对的。函数是具有返回值的表达式。由于&lt;em&gt;foo（）&lt;/em&gt;返回5，表达式' &lt;em&gt;foo（）&lt;/em&gt; '的值为5。通常，函数不仅返回静态值，还计算一些东西。</target>
        </trans-unit>
        <trans-unit id="48022988893d88e86d38b0cc4327eed58f2ab939" translate="yes" xml:space="preserve">
          <source>Assuming you're familiar with the concept of functions (if you're not, take a look at the chapter about &lt;a href=&quot;https://www.php.net/manual/en/language.functions.php&quot;&gt;functions&lt;/a&gt;), you'd assume that typing &lt;code&gt;$c = foo()&lt;/code&gt; is essentially just like writing &lt;code&gt;$c = 5&lt;/code&gt;, and you're right. Functions are expressions with the value of their return value. Since &lt;code&gt;foo()&lt;/code&gt; returns 5, the value of the expression '&lt;code&gt;foo()&lt;/code&gt;' is 5. Usually functions don't just return a static value but compute something.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eafacaa14b2ffe9b23cc2937d25f083e9b900145" translate="yes" xml:space="preserve">
          <source>Astronomical twilight: the point at which the sun ends being the source of any illumination.</source>
          <target state="translated">天文黄昏:太阳结束成为任何照明光源的时间点。</target>
        </trans-unit>
        <trans-unit id="d70c0a8e973643d84fd0d9f54cf17f31c06ff136" translate="yes" xml:space="preserve">
          <source>Astronomical twilight: the point at which the sun starts being the source of any illumination.</source>
          <target state="translated">天文黄昏:太阳开始成为任何照明光源的时间点。</target>
        </trans-unit>
        <trans-unit id="2b77dd5a9f3c934defb277cc8f53da1e9c229158" translate="yes" xml:space="preserve">
          <source>At most 15 events allowed.</source>
          <target state="translated">最多允许15次活动。</target>
        </trans-unit>
        <trans-unit id="a1cdb6629b8e3aa90f9cb20e8b187744ef8e2ee8" translate="yes" xml:space="preserve">
          <source>At some point in the future, the PHP team might want to add another constant or keyword, or a constant in other code may interfere. For example, it is already wrong to use the words &lt;code&gt;empty&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; this way, since they are &lt;a href=&quot;https://www.php.net/manual/en/reserved.php&quot;&gt;reserved keywords&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436f3de5697e06e31d116f566ae7c286e1137b7f" translate="yes" xml:space="preserve">
          <source>At some point in the future, the PHP team might want to add another constant or keyword, or a constant in other code may interfere. For example, it is already wrong to use the words &lt;em&gt;empty&lt;/em&gt; and &lt;em&gt;default&lt;/em&gt; this way, since they are &lt;a href=&quot;https://secure.php.net/manual/en/reserved.php&quot;&gt;reserved keywords&lt;/a&gt;.</source>
          <target state="translated">在将来的某个时候，PHP团队可能想要添加另一个常量或关键字，否则其他代码中的常量可能会造成干扰。例如，使用&lt;em&gt;空&lt;/em&gt;和&lt;em&gt;缺省&lt;/em&gt;这样的词已经是错误的，因为它们是&lt;a href=&quot;https://secure.php.net/manual/en/reserved.php&quot;&gt;保留关键字&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="de0f6e04ec514294fb5b12d0191c48a49e66efd8" translate="yes" xml:space="preserve">
          <source>At startup, PHP tries to enable the VT100 feature of the &lt;strong&gt;&lt;code&gt;STDOUT&lt;/code&gt;&lt;/strong&gt;/&lt;strong&gt;&lt;code&gt;STDERR&lt;/code&gt;&lt;/strong&gt; streams. By the way, if those streams are redirected to a file, the VT100 features may not be enabled.</source>
          <target state="translated">在启动时，PHP尝试启用&lt;strong&gt; &lt;code&gt;STDOUT&lt;/code&gt; &lt;/strong&gt; / &lt;strong&gt; &lt;code&gt;STDERR&lt;/code&gt; &lt;/strong&gt;流的VT100功能。顺便说一句，如果将这些流重定向到文件，则可能无法启用VT100功能。</target>
        </trans-unit>
        <trans-unit id="e107debea9e38ad0a9777b105f6b753e662e2604" translate="yes" xml:space="preserve">
          <source>At the end of each iteration, &lt;var&gt;&lt;var&gt;expr3&lt;/var&gt;&lt;/var&gt; is evaluated (executed).</source>
          <target state="translated">在每次迭代结束时，都会评估（执行） &lt;var&gt;&lt;var&gt;expr3&lt;/var&gt;&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="4189ab6e5a64019d9e910e38457caef233807003" translate="yes" xml:space="preserve">
          <source>At the end of each iteration, &lt;var&gt;expr3&lt;/var&gt; is evaluated (executed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3968ce1f85f1f8f4f75ea65a472ebf23b1a48b9b" translate="yes" xml:space="preserve">
          <source>At this point two variables have been defined and stored in the PHP symbol tree: &lt;var&gt;$a&lt;/var&gt; with contents &quot;hello&quot; and &lt;var&gt;$hello&lt;/var&gt; with contents &quot;world&quot;. Therefore, this statement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf4ce4d9e00a712abc2d80ed1d23c53a1934f5d" translate="yes" xml:space="preserve">
          <source>At this point two variables have been defined and stored in the PHP symbol tree: &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; with contents &quot;hello&quot; and &lt;var&gt;&lt;var&gt;$hello&lt;/var&gt;&lt;/var&gt; with contents &quot;world&quot;. Therefore, this statement:</source>
          <target state="translated">至此，已经定义了两个变量并将其存储在PHP符号树中： &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; 的内容为&amp;ldquo; hello&amp;rdquo;， &lt;var&gt;&lt;var&gt;$hello&lt;/var&gt;&lt;/var&gt; 的内容为&amp;ldquo; world&amp;rdquo;。因此，此语句：</target>
        </trans-unit>
        <trans-unit id="eb648377546894695caa0334a15bff88450b083d" translate="yes" xml:space="preserve">
          <source>At this point, you can go about using &lt;code&gt;$xml-&amp;gt;body&lt;/code&gt; and such.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0a98e41a7026b17541d839d02b80c39fa7fce4" translate="yes" xml:space="preserve">
          <source>At this point, you can go about using &lt;code&gt;$xml-&amp;gt;title&lt;/code&gt; and any other elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f288826e428603628ebffc048a34b71b5b766ea" translate="yes" xml:space="preserve">
          <source>At this point, you can go about using &lt;em&gt;$xml-&amp;gt;body&lt;/em&gt; and such.</source>
          <target state="translated">此时，您可以继续使用&lt;em&gt;$ xml-&amp;gt; body&lt;/em&gt;等。</target>
        </trans-unit>
        <trans-unit id="72458d0c7cd7205f3f43497e70e935e1b28b1964" translate="yes" xml:space="preserve">
          <source>At this point, you can go about using &lt;em&gt;$xml-&amp;gt;title&lt;/em&gt; and any other elements.</source>
          <target state="translated">此时，您可以使用&lt;em&gt;$ xml-&amp;gt; title&lt;/em&gt;和任何其他元素。</target>
        </trans-unit>
        <trans-unit id="70b23ebbacd174b20469189cfd436dab3063e959" translate="yes" xml:space="preserve">
          <source>Atlantic time zones.</source>
          <target state="translated">大西洋时区:</target>
        </trans-unit>
        <trans-unit id="813d6410e499ccb0aa4a815f4f1783c27fa97cf5" translate="yes" xml:space="preserve">
          <source>Atom (example: 2005-08-15T15:52:01+00:00)</source>
          <target state="translated">Atom (例如:2005-08-15T15:52:01+00:00)</target>
        </trans-unit>
        <trans-unit id="b490cfdfc99a22abc8d8266e7b1c52f163d48d75" translate="yes" xml:space="preserve">
          <source>Atomically attempts to find &lt;code&gt;key&lt;/code&gt; in the cache, if it cannot be found &lt;code&gt;generator&lt;/code&gt; is called, passing &lt;code&gt;key&lt;/code&gt; as the only argument. The return value of the call is then cached with the optionally specified &lt;code&gt;ttl&lt;/code&gt;, and returned.</source>
          <target state="translated">如果找不到缓存，则以原子方式尝试在缓存中查找 &lt;code&gt;key&lt;/code&gt; ，调用 &lt;code&gt;generator&lt;/code&gt; ，并将 &lt;code&gt;key&lt;/code&gt; 作为唯一参数传递。然后，使用可选指定的 &lt;code&gt;ttl&lt;/code&gt; 缓存调用的返回值并返回。</target>
        </trans-unit>
        <trans-unit id="0935213897cecd3d9fe9e54f3f000267c60c6aec" translate="yes" xml:space="preserve">
          <source>Attach another kernel to this kernel to allow them to both be applied in a single morphology or filter function. Returns the new combined kernel.</source>
          <target state="translated">将另一个内核附加到这个内核上,让它们同时应用在一个形态或滤波函数中。返回新的组合内核。</target>
        </trans-unit>
        <trans-unit id="7f6a5d76a4882bf743bb7be9cf0bd2457f1c0c3a" translate="yes" xml:space="preserve">
          <source>Attaches a binary attribute to the current RADIUS request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790bad3fcb60c117fcf70dbeadaea4bcc7420057" translate="yes" xml:space="preserve">
          <source>Attaches a string attribute to the current RADIUS request. In general, &lt;a href=&quot;function.radius-put-attr&quot;&gt;radius_put_attr()&lt;/a&gt; is a more useful function for attaching string attributes, as it is binary safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a40c7ba2625e3f2a19d31a71bc46aceb05dbc04" translate="yes" xml:space="preserve">
          <source>Attaches a vendor specific binary attribute to the current RADIUS request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea22759eeebd87b5d055f6c390b85db917344a5" translate="yes" xml:space="preserve">
          <source>Attaches a vendor specific integer attribute to the current RADIUS request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2ee8386bbc0f3be6dddb7409ca68096f188d1e" translate="yes" xml:space="preserve">
          <source>Attaches a vendor specific string attribute to the current RADIUS request. In general, &lt;a href=&quot;function.radius-put-vendor-attr&quot;&gt;radius_put_vendor_attr()&lt;/a&gt; is a more useful function for attaching string attributes, as it is binary safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fbfe2b6c124f064fd233e4e07a0de4eb050dbff" translate="yes" xml:space="preserve">
          <source>Attaches an &lt;a href=&quot;class.splobserver&quot;&gt;SplObserver&lt;/a&gt; so that it can be notified of updates.</source>
          <target state="translated">附加一个&lt;a href=&quot;class.splobserver&quot;&gt;SplObserver，&lt;/a&gt;以便可以将其通知更新。</target>
        </trans-unit>
        <trans-unit id="3b624559a37fd920b2c0822e1b386016f86442e6" translate="yes" xml:space="preserve">
          <source>Attaches an IP address attribute to the current RADIUS request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875d907c370167469d13f4859ce04152c2d8e478" translate="yes" xml:space="preserve">
          <source>Attaches an IP address vendor specific attribute to the current RADIUS request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9c092f98b256916bc9c0cfb09274a2385b9147" translate="yes" xml:space="preserve">
          <source>Attaches an integer attribute to the current RADIUS request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ccfd832dc7bf5ee4b07d422f485b82b5de484b3" translate="yes" xml:space="preserve">
          <source>Attaches iterator information.</source>
          <target state="translated">附加迭代器信息。</target>
        </trans-unit>
        <trans-unit id="2e8e3c76bf0d46aba99b78dd650c0961aa92530d" translate="yes" xml:space="preserve">
          <source>Attempt &quot;none&quot; authentication which usually will (and should) fail. As part of the failure, this function will return an array of accepted authentication methods.</source>
          <target state="translated">尝试 &quot;无 &quot;认证,通常会(也应该)失败。作为失败的一部分,该函数将返回一个接受的认证方法数组。</target>
        </trans-unit>
        <trans-unit id="2b3366f904fdf161fe00c948c307896183f4d4ed" translate="yes" xml:space="preserve">
          <source>Attempt to create ephemeral node on a local session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af67642cea8ae5b622274c593f3624d8e7ebcc53" translate="yes" xml:space="preserve">
          <source>Attempt to lock the Mutex for the caller without blocking if the Mutex is owned (locked) by another Thread.</source>
          <target state="translated">如果Mutex被其他线程拥有(锁定),则尝试为呼叫者锁定Mutex而不被阻塞。</target>
        </trans-unit>
        <trans-unit id="84dc0d21b125883b387d6feb938ff6d32c2d4bbe" translate="yes" xml:space="preserve">
          <source>Attempt to lock the Mutex for the caller.</source>
          <target state="translated">试图为呼叫者锁定Mutex。</target>
        </trans-unit>
        <trans-unit id="d15c2b37a1ebb3d4bae95ccc4fcd3a0e642ae597" translate="yes" xml:space="preserve">
          <source>Attempt to resize destination to fit distorted source</source>
          <target state="translated">试图调整目的地大小以适应扭曲的源。</target>
        </trans-unit>
        <trans-unit id="edb304d70a6f6e80283372f12a4a77f66d8ba7c1" translate="yes" xml:space="preserve">
          <source>Attempting to access an array key which has not been defined is the same as accessing any other undefined variable: an &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt;-level error message will be issued, and the result will be &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">尝试访问未定义的数组键与访问任何其他未定义的变量相同：将发出&lt;strong&gt; &lt;code&gt;E_NOTICE&lt;/code&gt; &lt;/strong&gt;级错误消息，并且结果为&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="5a05246f27fd63b2454f7b76b2124b25edda1ff5" translate="yes" xml:space="preserve">
          <source>Attempting to access an array key which has not been defined is the same as accessing any other undefined variable: an &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt;-level error message will be issued, and the result will be &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ebe2946da0893474c14cd019b774d198d5bddda" translate="yes" xml:space="preserve">
          <source>Attempting to throw an exception from a destructor (called in the time of script termination) causes a fatal error.</source>
          <target state="translated">试图从destructor(在脚本终止时调用)中抛出异常会导致一个致命的错误。</target>
        </trans-unit>
        <trans-unit id="c6d980e12bfc515a10f012b05210198a13995f27" translate="yes" xml:space="preserve">
          <source>Attempting to use a combination of the string and width specifiers with character sets that require more than one byte per character may result in unexpected results</source>
          <target state="translated">试图对每个字符需要超过一个字节的字符集使用字符串和宽度指定器的组合,可能会导致意外的结果。</target>
        </trans-unit>
        <trans-unit id="52bb7be9f9dc86d586b31f436b3a20b38b5e0bf0" translate="yes" xml:space="preserve">
          <source>Attempting to use a position specifier greater than &lt;strong&gt;&lt;code&gt;PHP_INT_MAX&lt;/code&gt;&lt;/strong&gt; will result in &lt;strong&gt;sprintf()&lt;/strong&gt; generating warnings.</source>
          <target state="translated">尝试使用大于&lt;strong&gt; &lt;code&gt;PHP_INT_MAX&lt;/code&gt; &lt;/strong&gt;的位置说明符将导致&lt;strong&gt;sprintf（）&lt;/strong&gt;生成警告。</target>
        </trans-unit>
        <trans-unit id="ad60f0b93ad2394c3b513c383829e8586f796d11" translate="yes" xml:space="preserve">
          <source>Attempts to change the group of the file &lt;code&gt;filename&lt;/code&gt; to &lt;code&gt;group&lt;/code&gt;.</source>
          <target state="translated">尝试将文件文件 &lt;code&gt;filename&lt;/code&gt; 的组更改为 &lt;code&gt;group&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="152a9d5ff1225e2dba36d59e297dd1664693dbd4" translate="yes" xml:space="preserve">
          <source>Attempts to change the group of the symlink &lt;code&gt;filename&lt;/code&gt; to &lt;code&gt;group&lt;/code&gt;.</source>
          <target state="translated">尝试将符号链接 &lt;code&gt;filename&lt;/code&gt; 的组更改为 &lt;code&gt;group&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb41c3804834b890b9b26d2c67b0a0c73fabb207" translate="yes" xml:space="preserve">
          <source>Attempts to change the mode of the specified file to that given in &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">尝试将指定文件的模式更改为mode中给定的 &lt;code&gt;mode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e93accf04479ace620d6feeb3749fa71221d36b0" translate="yes" xml:space="preserve">
          <source>Attempts to change the owner of the file &lt;code&gt;filename&lt;/code&gt; to user &lt;code&gt;user&lt;/code&gt;. Only the superuser may change the owner of a file.</source>
          <target state="translated">尝试将文件 &lt;code&gt;filename&lt;/code&gt; 的所有者更改为user &lt;code&gt;user&lt;/code&gt; 。只有超级用户可以更改文件的所有者。</target>
        </trans-unit>
        <trans-unit id="24a1ab7fbdbd5fba4a02eb24d26892808dd9f64e" translate="yes" xml:space="preserve">
          <source>Attempts to change the owner of the symlink &lt;code&gt;filename&lt;/code&gt; to user &lt;code&gt;user&lt;/code&gt;.</source>
          <target state="translated">尝试将符号链接 &lt;code&gt;filename&lt;/code&gt; 的所有者更改为用户 &lt;code&gt;user&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f819255c5f838392963857bbacf32523411f6d6d" translate="yes" xml:space="preserve">
          <source>Attempts to create the directory specified by pathname.</source>
          <target state="translated">试图创建由路径名指定的目录。</target>
        </trans-unit>
        <trans-unit id="f39f01c25e72aa10e4728220d12a186e6acebff7" translate="yes" xml:space="preserve">
          <source>Attempts to determine the capabilities of the user's browser, by looking up the browser's information in the &lt;var&gt;browscap.ini&lt;/var&gt; file.</source>
          <target state="translated">尝试通过在 &lt;var&gt;browscap.ini&lt;/var&gt; 文件中查找浏览器的信息来确定用户浏览器的功能。</target>
        </trans-unit>
        <trans-unit id="6611434b90ad0e910db83dbe66f2a24d7ab1b0f9" translate="yes" xml:space="preserve">
          <source>Attempts to load an SQLite extension library.</source>
          <target state="translated">试图加载一个SQLite扩展库。</target>
        </trans-unit>
        <trans-unit id="26d72c53acfcb2208a85f21e6b0f83f8559c3690" translate="yes" xml:space="preserve">
          <source>Attempts to perform a reconfiguration operation when reconfiguration feature is disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf6cb2ca0c64aad243585b3bc95d1f57dc93a95" translate="yes" xml:space="preserve">
          <source>Attempts to remove the directory named by &lt;code&gt;dirname&lt;/code&gt;. The directory must be empty, and the relevant permissions must permit this. A &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; level error will be generated on failure.</source>
          <target state="translated">尝试删除 &lt;code&gt;dirname&lt;/code&gt; 命名的目录。该目录必须为空，并且相关权限必须允许这样做。一个&lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt;会失败产生的水平误差。</target>
        </trans-unit>
        <trans-unit id="32b65ab8b687cf4f256c4f2313be53b7062442e6" translate="yes" xml:space="preserve">
          <source>Attempts to rename &lt;code&gt;oldname&lt;/code&gt; to &lt;code&gt;newname&lt;/code&gt;, moving it between directories if necessary. If renaming a file and &lt;code&gt;newname&lt;/code&gt; exists, it will be overwritten. If renaming a directory and &lt;code&gt;newname&lt;/code&gt; exists, this function will emit a warning.</source>
          <target state="translated">尝试将 &lt;code&gt;oldname&lt;/code&gt; 重命名为 &lt;code&gt;newname&lt;/code&gt; ，如有必要，可在目录之间移动它。如果重命名文件和 &lt;code&gt;newname&lt;/code&gt; 存在，将被覆盖。如果重命名目录和 &lt;code&gt;newname&lt;/code&gt; 存在，此功能会发出警告。</target>
        </trans-unit>
        <trans-unit id="a370a9db8bfd27e7498aa38b20e2c61176befed6" translate="yes" xml:space="preserve">
          <source>Attempts to set the access and modification times of the file named in the &lt;code&gt;filename&lt;/code&gt; parameter to the value given in &lt;code&gt;time&lt;/code&gt;. Note that the access time is always modified, regardless of the number of parameters.</source>
          <target state="translated">尝试将 &lt;code&gt;filename&lt;/code&gt; 参数中命名的文件的访问和修改时间设置为 &lt;code&gt;time&lt;/code&gt; 给定的值。请注意，无论参数数量如何，访问时间始终会被修改。</target>
        </trans-unit>
        <trans-unit id="ab5d56cbc1918ca9cc127007073f195ba495aae3" translate="yes" xml:space="preserve">
          <source>Attempts to unlock the Mutex for the caller, optionally destroying the Mutex handle. The calling thread should own the Mutex at the time of the call.</source>
          <target state="translated">试图为调用者解锁Mutex,可选择销毁Mutex句柄。调用时,调用线程应拥有Mutex。</target>
        </trans-unit>
        <trans-unit id="cf3c5f7af63e40195cf9f1d07d9fcef3b59c3156" translate="yes" xml:space="preserve">
          <source>Attempts to use &lt;strong&gt;&lt;code&gt;IMG_CROP_TRANSPARENT&lt;/code&gt;&lt;/strong&gt; and if it fails it falls back to &lt;strong&gt;&lt;code&gt;IMG_CROP_SIDES&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">尝试使用&lt;strong&gt; &lt;code&gt;IMG_CROP_TRANSPARENT&lt;/code&gt; &lt;/strong&gt;，如果失败，则退回到&lt;strong&gt; &lt;code&gt;IMG_CROP_SIDES&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="a086d942884a301b827479029ba19c2746237425" translate="yes" xml:space="preserve">
          <source>Attribute</source>
          <target state="translated">Attribute</target>
        </trans-unit>
        <trans-unit id="b45f10d5d87c1919696ccf26d9d82988ae154f1e" translate="yes" xml:space="preserve">
          <source>Attribute names and their arguments are resolved to a class and the arguments are passed to its constructor, when an instance of the attribute is requested through the Reflection API. As such a class should be introduced for each attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57a0d8e805c7057a2b772a838f522edba13e4d2" translate="yes" xml:space="preserve">
          <source>Attribute node</source>
          <target state="translated">属性节点</target>
        </trans-unit>
        <trans-unit id="9e6ee50064162c5da001c6a27a80e9b23826dd3e" translate="yes" xml:space="preserve">
          <source>Attribute specifier - one of the &lt;a href=&quot;class.numberformatter#intl.numberformatter-constants.unumberformatattribute&quot;&gt; numeric attribute&lt;/a&gt; constants.</source>
          <target state="translated">属性说明符- &lt;a href=&quot;class.numberformatter#intl.numberformatter-constants.unumberformatattribute&quot;&gt;数字属性&lt;/a&gt;常量之一。</target>
        </trans-unit>
        <trans-unit id="2abd977715e56fda330ce05c89f96bca23422008" translate="yes" xml:space="preserve">
          <source>Attribute specifier - one of the &lt;a href=&quot;class.numberformatter#intl.numberformatter-constants.unumberformattextattribute&quot;&gt; text attribute&lt;/a&gt; constants.</source>
          <target state="translated">属性说明符- &lt;a href=&quot;class.numberformatter#intl.numberformatter-constants.unumberformattextattribute&quot;&gt;文本属性&lt;/a&gt;常量之一。</target>
        </trans-unit>
        <trans-unit id="d90294694005f04e4c81b25f5482566ead146965" translate="yes" xml:space="preserve">
          <source>Attribute specifier - one of the &lt;a href=&quot;class.numberformatter#intl.numberformatter-constants.unumberformattextattribute&quot;&gt;text attribute&lt;/a&gt; constants.</source>
          <target state="translated">属性说明符- &lt;a href=&quot;class.numberformatter#intl.numberformatter-constants.unumberformattextattribute&quot;&gt;文本属性&lt;/a&gt;常量之一。</target>
        </trans-unit>
        <trans-unit id="d792e04beb0e19d1717948e7d9e3863fd9ab1e8f" translate="yes" xml:space="preserve">
          <source>Attribute syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9037d6c7ae81e4ddae316b5e746b6a6e5e1ef8" translate="yes" xml:space="preserve">
          <source>Attribute to get value for.</source>
          <target state="translated">要获取值的属性。</target>
        </trans-unit>
        <trans-unit id="fd2ca195d49a4957fe0ce6f33a5dfb912fb16cba" translate="yes" xml:space="preserve">
          <source>Attribute value, or &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;&lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">属性值，或错误时为&lt;a href=&quot;language.types.boolean&quot;&gt;布尔值&lt;/a&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="6875187034bdeba3d469a3e7d77c31f3544d9bc9" translate="yes" xml:space="preserve">
          <source>Attribute value, or bool&lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ab686a26a9c623c53a098d31d25c06b4808f79" translate="yes" xml:space="preserve">
          <source>Attribute value.</source>
          <target state="translated">属性值:</target>
        </trans-unit>
        <trans-unit id="1dfca9318870e4107f87a42b70e4f03066cf7d03" translate="yes" xml:space="preserve">
          <source>Attribute.</source>
          <target state="translated">Attribute.</target>
        </trans-unit>
        <trans-unit id="96d93a73f3388de95dffd84d555443d16a9ef60a" translate="yes" xml:space="preserve">
          <source>Attributes allow to add structured, machine-readable metadata information on declarations in code: Classes, methods, functions, parameters, properties and class constants can be the target of an attribute. The metadata defined by attributes can then be inspected at runtime using the &lt;a href=&quot;https://www.php.net/manual/en/book.reflection.php&quot;&gt;Reflection APIs&lt;/a&gt;. Attributes could therefore be thought of as a configuration language embedded directly into code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a9383711930923ce3358cc4301ac1ab8dfd614" translate="yes" xml:space="preserve">
          <source>Attributes assigned to this publickey. The most common attribute, and the only one supported by publickey version 1 servers, is &lt;code&gt;comment&lt;/code&gt;, which may be any freeform string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53408828b63036e05d2307f9c2a4b15d7a641d1c" translate="yes" xml:space="preserve">
          <source>Attributes assigned to this publickey. The most common attribute, and the only one supported by publickey version 1 servers, is &lt;em&gt;comment&lt;/em&gt;, which may be any freeform string.</source>
          <target state="translated">分配给此公钥的属性。最常见的属性，也是publickey版本1服务器支持的唯一属性，是&lt;em&gt;comment&lt;/em&gt;，它可以是任何自由格式的字符串。</target>
        </trans-unit>
        <trans-unit id="a1468695eb36590aef2bbbb09f47f28b3fc94778" translate="yes" xml:space="preserve">
          <source>Attributes overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661291f26ceb7cd9be8cf50ab842fcb76ab53846" translate="yes" xml:space="preserve">
          <source>Attributes placed on a promoted constructor argument will be replicated to both the property and argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6496e2aaf3f769a2151a819d4be2eceb0f832796" translate="yes" xml:space="preserve">
          <source>Australia time zones.</source>
          <target state="translated">澳大利亚时区。</target>
        </trans-unit>
        <trans-unit id="4819dcf5400ce23c8f897e9ae80d954608b53e2e" translate="yes" xml:space="preserve">
          <source>Authenticate over SSH using a plain password. Since version 0.12 this function also supports keyboard_interactive method.</source>
          <target state="translated">通过SSH使用普通密码进行认证。从0.12版本开始,这个函数也支持键盘交互式方法。</target>
        </trans-unit>
        <trans-unit id="0f9da85b2d1f3eba9fdbb17f23bcb35509f2d685" translate="yes" xml:space="preserve">
          <source>Authenticate over SSH using the ssh agent</source>
          <target state="translated">通过SSH使用ssh代理进行认证。</target>
        </trans-unit>
        <trans-unit id="c5e6ee8978ac7f68446a6614351e61f073f3631d" translate="yes" xml:space="preserve">
          <source>Authenticate using a public hostkey read from a file.</source>
          <target state="translated">使用从文件中读取的公共主密钥进行认证。</target>
        </trans-unit>
        <trans-unit id="58888fc66b5a7001c65d2845e13f71c17d1cce57" translate="yes" xml:space="preserve">
          <source>Authenticate using a public key read from a file.</source>
          <target state="translated">使用从文件中读取的公钥进行认证。</target>
        </trans-unit>
        <trans-unit id="88e24d80458830c08e93af4a54884da689b16f7c" translate="yes" xml:space="preserve">
          <source>Authentication constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="126d5ccc325ecfbd8ea9a48b0aa87eaf06482c36" translate="yes" xml:space="preserve">
          <source>Authorization session handle, this parameter does not have any citation in the core OAuth 1.0 specification but may be implemented by large providers. &lt;a href=&quot;http://oauth.pbwiki.com/ScalableOAuth/&quot;&gt;&amp;raquo; See ScalableOAuth&lt;/a&gt; for more information.</source>
          <target state="translated">授权会话句柄，此参数在OAuth 1.0核心规范中没有任何引用，但可以由大型提供商实施。&lt;a href=&quot;http://oauth.pbwiki.com/ScalableOAuth/&quot;&gt;&amp;raquo;有关&lt;/a&gt;更多信息，请参见scalableOAuth。</target>
        </trans-unit>
        <trans-unit id="3ac9ec42893f6088008e71f9db80456485d08762" translate="yes" xml:space="preserve">
          <source>Autoloading Classes</source>
          <target state="translated">自动加载类</target>
        </trans-unit>
        <trans-unit id="f0b983767078f35119d8414efb46ac46e52d2dd8" translate="yes" xml:space="preserve">
          <source>Autoloading Classes &amp;rarr;</source>
          <target state="translated">自动加载类&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="00e9a0dd7333291b5d6984d075fcc312de17f038" translate="yes" xml:space="preserve">
          <source>Autoloading is not available if using PHP in CLI &lt;a href=&quot;https://secure.php.net/manual/en/features.commandline.php&quot;&gt;interactive mode&lt;/a&gt;.</source>
          <target state="translated">如果在CLI &lt;a href=&quot;https://secure.php.net/manual/en/features.commandline.php&quot;&gt;交互模式下&lt;/a&gt;使用PHP，则自动加载不可用。</target>
        </trans-unit>
        <trans-unit id="b9a9b4cfc8f3a4ca9c06be14098bf920181b987a" translate="yes" xml:space="preserve">
          <source>Autoloading is not available if using PHP in CLI &lt;a href=&quot;https://www.php.net/manual/en/features.commandline.php&quot;&gt;interactive mode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c4d362dde3aacd21a07e3030b9507f68c20847" translate="yes" xml:space="preserve">
          <source>Automatically allocate locks for the bufferevent, so that it&amp;rsquo;s safe to use from multiple threads.</source>
          <target state="translated">自动为bufferevent分配锁，因此可以安全地从多个线程使用。</target>
        </trans-unit>
        <trans-unit id="1e0aed2aaa54bde76bd1465afdd3f3836fc4eae9" translate="yes" xml:space="preserve">
          <source>Automatically crops an image according to the given &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">根据给定的 &lt;code&gt;mode&lt;/code&gt; 自动裁剪图像。</target>
        </trans-unit>
        <trans-unit id="eea250442b01a58d1ed57279d935f1e0745e2f85" translate="yes" xml:space="preserve">
          <source>Automatically frees allocated memory when its size drops low enough.</source>
          <target state="translated">当分配的内存大小降到足够低时,自动释放分配的内存。</target>
        </trans-unit>
        <trans-unit id="681b5b5ae10b994e61d9fc53cf8a95498ff0df39" translate="yes" xml:space="preserve">
          <source>Availability</source>
          <target state="translated">Availability</target>
        </trans-unit>
        <trans-unit id="ebb6b9b304614f27d62bc464d00a2c0d30dda8f5" translate="yes" xml:space="preserve">
          <source>Available as of 7.3.0 and curl &amp;gt;= 7.55.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c8858f9115f373d5785ff4ceb6d48140552f29" translate="yes" xml:space="preserve">
          <source>Available as of PHP 5.5.0 if built against libcurl &amp;gt;= 7.16.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c597d5d58978e8e50c86fc26467774713df048e5" translate="yes" xml:space="preserve">
          <source>Available as of PHP 7.3.0 if built against libcurl &amp;gt;= 7.51.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3dcff928876718a4afb1b4eee78e7e28bcebe0e" translate="yes" xml:space="preserve">
          <source>Available as of ZooKeeper 3.5.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c5a78ba49f84f67dc7f17e9b623eb20d315c70" translate="yes" xml:space="preserve">
          <source>Available only with &lt;a href=&quot;https://secure.php.net/manual/en/book.mysqlnd.php&quot;&gt;mysqlnd&lt;/a&gt;.</source>
          <target state="translated">仅在&lt;a href=&quot;https://secure.php.net/manual/en/book.mysqlnd.php&quot;&gt;mysqlnd中&lt;/a&gt;可用。</target>
        </trans-unit>
        <trans-unit id="201056075170d0c54b80b1f66cbad2c8144aca9c" translate="yes" xml:space="preserve">
          <source>Available only with &lt;a href=&quot;https://www.php.net/manual/en/book.mysqlnd.php&quot;&gt;mysqlnd&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ae51c3678ef18644df124a6fe333a95f37deb1" translate="yes" xml:space="preserve">
          <source>Available since</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edabfc74fecd629a6896ad9b5980c82614ebe5e5" translate="yes" xml:space="preserve">
          <source>Available since &lt;code&gt;libevent 2.1.0-alpha&lt;/code&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b42ed6c2fef212d2d6b2a775a1b777e155c4f3d" translate="yes" xml:space="preserve">
          <source>Available since &lt;em&gt;libevent 2.1.0-alpha&lt;/em&gt; .</source>
          <target state="translated">自&lt;em&gt;libevent 2.1.0-alpha&lt;/em&gt;起可用。</target>
        </trans-unit>
        <trans-unit id="07fd7abc482f90de334d7d03349b7f67dae289eb" translate="yes" xml:space="preserve">
          <source>Available since PHP 5.1.3. The &lt;strong&gt;&lt;code&gt;CURLINFO_&lt;/code&gt;&lt;/strong&gt; prefix is intentional.</source>
          <target state="translated">自PHP 5.1.3起可用。该&lt;strong&gt; &lt;code&gt;CURLINFO_&lt;/code&gt; &lt;/strong&gt;前缀是故意的。</target>
        </trans-unit>
        <trans-unit id="0cf030a1cebb13fd4cc4af484a74a155ec6d32ae" translate="yes" xml:space="preserve">
          <source>Available since PHP 5.2.1 for versions compiled with libcurl 7.11.2 or greater.</source>
          <target state="translated">从PHP 5.2.1开始适用于libcurl 7.11.2或更高版本的编译。</target>
        </trans-unit>
        <trans-unit id="134288d01a523305aa86fd8747fcdf76f0f2b3d2" translate="yes" xml:space="preserve">
          <source>Available since PHP 5.5.0 and cURL 7.14.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea5e1fe9b1b9d9de773fae69c65998c670d939d" translate="yes" xml:space="preserve">
          <source>Available since PHP 7.3.0 and cURL 7.53.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f9db900e6c4598b7412d31cb8321ce16c1d18a" translate="yes" xml:space="preserve">
          <source>Available since PHP 7.3.0 and libcurl &amp;gt;= cURL 7.52.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a312547940e8d824e901adb3efed404b29e62e45" translate="yes" xml:space="preserve">
          <source>Available since PHP 7.3.0 and libcurl &amp;gt;= cURL 7.52.0. Available if built TLS enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29074bf711db2cbcd64a3f16f764b61d48939390" translate="yes" xml:space="preserve">
          <source>Available since PHP 7.3.0 and libcurl &amp;gt;= cURL 7.61.0. Available when built with OpenSSL &amp;gt;= 1.1.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d18aa650413626ce7805738008c36b9189b6bc8" translate="yes" xml:space="preserve">
          <source>Available since PHP 7.3.15 and 7.4.3, respectively, if built against libcurl &amp;gt;= 7.64.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d63a3694d32f240f8cd11874f949cfc782eb976f" translate="yes" xml:space="preserve">
          <source>Available with ImageMagick library version 6.2.9 and higher.</source>
          <target state="translated">适用于ImageMagick库6.2.9及以上版本。</target>
        </trans-unit>
        <trans-unit id="fbba7c2c42739d6c380fb1fcf68913813c87ac63" translate="yes" xml:space="preserve">
          <source>Average a set of images.</source>
          <target state="translated">平均一组图像。</target>
        </trans-unit>
        <trans-unit id="cd0a1d206e4f93831dda20f5c96ef7e58caab5d5" translate="yes" xml:space="preserve">
          <source>Avoid relative paths</source>
          <target state="translated">避免相对路径</target>
        </trans-unit>
        <trans-unit id="60b23abf98e1576ad82a3cbc5fe67c83dbbac137" translate="yes" xml:space="preserve">
          <source>Avoid using this function in multithreaded webservers. It is better to change the file permissions with &lt;a href=&quot;function.chmod&quot;&gt;chmod()&lt;/a&gt; after creating the file. Using &lt;strong&gt;umask()&lt;/strong&gt; can lead to unexpected behavior of concurrently running scripts and the webserver itself because they all use the same umask.</source>
          <target state="translated">避免在多线程Web服务器中使用此功能。创建文件后，最好使用&lt;a href=&quot;function.chmod&quot;&gt;chmod（）&lt;/a&gt;更改文件权限。使用&lt;strong&gt;umask（）&lt;/strong&gt;会导致并发运行的脚本和Web服务器本身出现意外行为，因为它们都使用相同的umask。</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="d081bd0b11d67f678410509c1195f92ded687366" translate="yes" xml:space="preserve">
          <source>BASE64</source>
          <target state="translated">BASE64</target>
        </trans-unit>
        <trans-unit id="e1e106769129d490628d379adc9944dc1a97899f" translate="yes" xml:space="preserve">
          <source>BCC &quot;string&quot; - match messages with &quot;string&quot; in the Bcc: field</source>
          <target state="translated">BCC &quot;string&quot;-匹配在Bcc:字段中带有 &quot;string &quot;的邮件。</target>
        </trans-unit>
        <trans-unit id="296c881b22081ac7fc1bd5ac34a0f2b351238547" translate="yes" xml:space="preserve">
          <source>BCMath Arbitrary Precision Mathematics Functions</source>
          <target state="translated">BCMath任意精度数学函数</target>
        </trans-unit>
        <trans-unit id="a2596acf467ed24508271b8a69c5449a174f62e8" translate="yes" xml:space="preserve">
          <source>BEFORE &quot;date&quot; - match messages with Date: before &quot;date&quot;</source>
          <target state="translated">BEFORE &quot;date&quot;-在 &quot;date &quot;之前匹配带有Date的信息。</target>
        </trans-unit>
        <trans-unit id="5c3a9f9732226b9483ecf34b0abef0b5a0ab3fe1" translate="yes" xml:space="preserve">
          <source>BIG-5</source>
          <target state="translated">BIG-5</target>
        </trans-unit>
        <trans-unit id="f2aaac94f4a3acf6f39c58f2090ab106f3d4930f" translate="yes" xml:space="preserve">
          <source>BIG5</source>
          <target state="translated">BIG5</target>
        </trans-unit>
        <trans-unit id="7c5be79e324f6dc6bfc3c27f72ec6b392480af62" translate="yes" xml:space="preserve">
          <source>BIG5-HKSCS</source>
          <target state="translated">BIG5-HKSCS</target>
        </trans-unit>
        <trans-unit id="d77e6195246d944913a35b6749e14763ebd6e709" translate="yes" xml:space="preserve">
          <source>BITS</source>
          <target state="translated">BITS</target>
        </trans-unit>
        <trans-unit id="16f0507cbdeb26d5c7e89f17638599a9a849bfc9" translate="yes" xml:space="preserve">
          <source>BLENC will return the redistributable key that must be saved into key_file: the path of key_file is specified at runtime with the option blenc.key_file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8306a543f91f1fd548cb382031a57ef6cd3bdffb" translate="yes" xml:space="preserve">
          <source>BMP</source>
          <target state="translated">BMP</target>
        </trans-unit>
        <trans-unit id="4dd60f86ebc6b695624d88ab45938de2c53f3378" translate="yes" xml:space="preserve">
          <source>BODY &quot;string&quot; - match messages with &quot;string&quot; in the body of the message</source>
          <target state="translated">BODY &quot;string&quot;-匹配消息中带有 &quot;string &quot;的消息。</target>
        </trans-unit>
        <trans-unit id="2ba208c7a57215fe25a2dc8edeb1eed6d80c323c" translate="yes" xml:space="preserve">
          <source>Back references</source>
          <target state="translated">后面的参考资料</target>
        </trans-unit>
        <trans-unit id="bdaf8c85240d0c5e1f06e716f861619cd56fe644" translate="yes" xml:space="preserve">
          <source>Back references &amp;rarr;</source>
          <target state="translated">反向引用&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="1afb1f946a30607dc2b8851d97ee44e5bb3cc164" translate="yes" xml:space="preserve">
          <source>Back references to the named subpatterns can be achieved by &lt;code&gt;(?P=name)&lt;/code&gt; or, since PHP 5.2.2, also by &lt;code&gt;\k&amp;lt;name&amp;gt;&lt;/code&gt; or &lt;code&gt;\k'name'&lt;/code&gt;. Additionally PHP 5.2.4 added support for &lt;code&gt;\k{name}&lt;/code&gt; and &lt;code&gt;\g{name}&lt;/code&gt;, and PHP 5.2.7 for &lt;code&gt;\g&amp;lt;name&amp;gt;&lt;/code&gt; and &lt;code&gt;\g'name'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="551beddb795532e5a92ad3cdcefa22095436b45e" translate="yes" xml:space="preserve">
          <source>Back references to the named subpatterns can be achieved by &lt;em&gt;(?P=name)&lt;/em&gt; or, since PHP 5.2.2, also by &lt;em&gt;\k&amp;lt;name&amp;gt;&lt;/em&gt; or &lt;em&gt;\k'name'&lt;/em&gt;. Additionally PHP 5.2.4 added support for &lt;em&gt;\k{name}&lt;/em&gt; and &lt;em&gt;\g{name}&lt;/em&gt;, and PHP 5.2.7 for &lt;em&gt;\g&amp;lt;name&amp;gt;&lt;/em&gt; and &lt;em&gt;\g'name'&lt;/em&gt;.</source>
          <target state="translated">通过&lt;em&gt;（？P = name）&lt;/em&gt;或自PHP 5.2.2起，也可以通过&lt;em&gt;\ k &amp;lt;name&amp;gt;&lt;/em&gt;或&lt;em&gt;\ k'name'&lt;/em&gt;实现对已命名子模式的反向引用。另外，PHP 5.2.4增加了对&lt;em&gt;\ k {name}&lt;/em&gt;和&lt;em&gt;\ g {name}的支持&lt;/em&gt;，以及PHP 5.2.7对&lt;em&gt;\ g &amp;lt;name&amp;gt;&lt;/em&gt;和&lt;em&gt;\ g'name'的支持&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a9347d8d598c4cb2d8566155d72f7c4d2046ce40" translate="yes" xml:space="preserve">
          <source>Back up one byte</source>
          <target state="translated">备份一个字节</target>
        </trans-unit>
        <trans-unit id="875175e5d5500187d86d4f1da049a869af2b2fd2" translate="yes" xml:space="preserve">
          <source>Backend flags</source>
          <target state="translated">后台标志</target>
        </trans-unit>
        <trans-unit id="a2827dbf3ea8db45fd7cdaef9b5df9187fed640b" translate="yes" xml:space="preserve">
          <source>Backend flags:</source>
          <target state="translated">后台标志。</target>
        </trans-unit>
        <trans-unit id="cc69ac47064617c722487bee67731f7f28e953fd" translate="yes" xml:space="preserve">
          <source>Backup a function at runtime, to be restored on shutdown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74510e6bfcd1b9aa9d70798e995080c6b829007" translate="yes" xml:space="preserve">
          <source>BadFunctionCallException (class)</source>
          <target state="translated">坏函数调用异常</target>
        </trans-unit>
        <trans-unit id="e90c44bcb213a22384f05256f109c3d680db2f1d" translate="yes" xml:space="preserve">
          <source>BadMethodCallException &amp;rarr;</source>
          <target state="translated">BadMethodCallException&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="28eda76447b813f1cd57954f1da801c624b08267" translate="yes" xml:space="preserve">
          <source>BadMethodCallException (class)</source>
          <target state="translated">坏方法调用异常</target>
        </trans-unit>
        <trans-unit id="273a15e99059abbcd1bcf640600a53e8689827b3" translate="yes" xml:space="preserve">
          <source>Base (class)</source>
          <target state="translated">基地(类)</target>
        </trans-unit>
        <trans-unit id="5e1dd37fe1120c581c8dff3394eb62eaadf9e9f2" translate="yes" xml:space="preserve">
          <source>Base URL of repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcce35c1ed2a50cfdb267c3ecf8c4fbc81890d0f" translate="yes" xml:space="preserve">
          <source>Base name of item in repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="895c330ff6166a7f13701f8d9b78f313787269c8" translate="yes" xml:space="preserve">
          <source>Base64</source>
          <target state="translated">Base64</target>
        </trans-unit>
        <trans-unit id="5a0d8a28fa755a5d7beb92cd2e604e489367d043" translate="yes" xml:space="preserve">
          <source>Base64-encoded data takes about 33% more space than the original data.</source>
          <target state="translated">Base64编码的数据比原始数据多占33%的空间。</target>
        </trans-unit>
        <trans-unit id="6dff0ab3670b8ed7dc2fbe6895ebbf63d5a51884" translate="yes" xml:space="preserve">
          <source>Base::__construct</source>
          <target state="translated">Base::__construct</target>
        </trans-unit>
        <trans-unit id="f667add283072c6592f2fe16315e52024273d1fe" translate="yes" xml:space="preserve">
          <source>Base::dispatch</source>
          <target state="translated">Base::dispatch</target>
        </trans-unit>
        <trans-unit id="0a0a3ca2a31205fe51e1ef7b7e643f47ef70a348" translate="yes" xml:space="preserve">
          <source>Base::exit</source>
          <target state="translated">Base::exit</target>
        </trans-unit>
        <trans-unit id="cbd023cb71312498ad371d7e90825f85428a1de7" translate="yes" xml:space="preserve">
          <source>Base::free</source>
          <target state="translated">Base::free</target>
        </trans-unit>
        <trans-unit id="08134d401d298e86bc5d916bdc4ac9616f91eaa9" translate="yes" xml:space="preserve">
          <source>Base::getFeatures</source>
          <target state="translated">Base::getFeatures</target>
        </trans-unit>
        <trans-unit id="21319f80c4fb160851e587d7914fc820fc0d3cae" translate="yes" xml:space="preserve">
          <source>Base::getMethod</source>
          <target state="translated">Base::getMethod</target>
        </trans-unit>
        <trans-unit id="85750375ece2b77256aa0f550276f2c814127db7" translate="yes" xml:space="preserve">
          <source>Base::getTimeOfDayCached</source>
          <target state="translated">Base::getTimeOfDayCached</target>
        </trans-unit>
        <trans-unit id="7ac1e9e9cc6e8232367ef3f6862b52f16603b2a2" translate="yes" xml:space="preserve">
          <source>Base::gotExit</source>
          <target state="translated">Base::gotExit</target>
        </trans-unit>
        <trans-unit id="93b66af7cda409543432fb82db28433754607b05" translate="yes" xml:space="preserve">
          <source>Base::gotStop</source>
          <target state="translated">Base::gotStop</target>
        </trans-unit>
        <trans-unit id="05647dabf8966585ca9a82d1f1cba924e2a5e9cd" translate="yes" xml:space="preserve">
          <source>Base::loop</source>
          <target state="translated">Base::loop</target>
        </trans-unit>
        <trans-unit id="3cae474b96182ad2ab60986840ecd230fd694c98" translate="yes" xml:space="preserve">
          <source>Base::priorityInit</source>
          <target state="translated">Base::priorityInit</target>
        </trans-unit>
        <trans-unit id="0f8589b274d0435f596866753e68f956fc81ed4c" translate="yes" xml:space="preserve">
          <source>Base::reInit</source>
          <target state="translated">Base::reInit</target>
        </trans-unit>
        <trans-unit id="d10b9ea28f1f6ae4b91587cedc5fb075301821d6" translate="yes" xml:space="preserve">
          <source>Base::stop</source>
          <target state="translated">Base::stop</target>
        </trans-unit>
        <trans-unit id="bcf768d4c33d8fd693efe7af7489ca6e9887ccfc" translate="yes" xml:space="preserve">
          <source>Basic SimpleXML usage</source>
          <target state="translated">SimpleXML的基本用法</target>
        </trans-unit>
        <trans-unit id="b0a399fd07c417a99624193e2a0c0dc3f2a11d31" translate="yes" xml:space="preserve">
          <source>Basic class definitions begin with the keyword &lt;code&gt;class&lt;/code&gt;, followed by a class name, followed by a pair of curly braces which enclose the definitions of the properties and methods belonging to the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6fe4bdc5ad8be76b6a3ed3beb2156dddec7661c" translate="yes" xml:space="preserve">
          <source>Basic class definitions begin with the keyword &lt;em&gt;class&lt;/em&gt;, followed by a class name, followed by a pair of curly braces which enclose the definitions of the properties and methods belonging to the class.</source>
          <target state="translated">基本的类定义以关键字&lt;em&gt;class&lt;/em&gt;开头，后跟一个类名，然后是一对大括号，其中花括号包围着属于该类的属性和方法的定义。</target>
        </trans-unit>
        <trans-unit id="0e026311ce3258038a04fbbcfba23d9314d86cc3" translate="yes" xml:space="preserve">
          <source>Basic usage example</source>
          <target state="translated">基本使用例</target>
        </trans-unit>
        <trans-unit id="2b21b330c6c75359b011dfb4f587aaa281e8b660" translate="yes" xml:space="preserve">
          <source>Basic usage example.</source>
          <target state="translated">基本用法示例。</target>
        </trans-unit>
        <trans-unit id="5fcebeefad3cdbbf8733aa928160dec7dc90c1a1" translate="yes" xml:space="preserve">
          <source>Basics</source>
          <target state="translated">Basics</target>
        </trans-unit>
        <trans-unit id="3b1d0932e690050294720df747abd11ac3bab048" translate="yes" xml:space="preserve">
          <source>Basics &amp;rarr;</source>
          <target state="translated">基础&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e2fc66c4a563efb1afeaad5db6089bc8a639c940" translate="yes" xml:space="preserve">
          <source>Be aware that some socket implementations need to be handled very carefully. A few basic rules:</source>
          <target state="translated">要知道,有些套接字的实现需要非常小心地处理。几个基本规则。</target>
        </trans-unit>
        <trans-unit id="0e653b4f1962c8efed3ff3a9eca5e7e481020823" translate="yes" xml:space="preserve">
          <source>Be careful about variables that may match HTML entities. Things like &amp;amp;amp, &amp;amp;copy and &amp;amp;pound are parsed by the browser and the actual entity is used instead of the desired variable name. This is an obvious hassle that the W3C has been telling people about for years. The reference is here: &lt;a href=&quot;http://www.w3.org/TR/html4/appendix/notes.html#h-B.2.2&quot;&gt;&amp;raquo; http://www.w3.org/TR/html4/appendix/notes.html#h-B.2.2&lt;/a&gt;.</source>
          <target state="translated">请注意可能与HTML实体匹配的变量。浏览器会解析＆amp，＆copy和＆pound之类的内容，并使用实际实体代替所需的变量名。W3C多年来一直在告诉人们这是一个明显的麻烦。参考在这里：&lt;a href=&quot;http://www.w3.org/TR/html4/appendix/notes.html#h-B.2.2&quot;&gt;&amp;raquo;http://www.w3.org/TR/html4/appendix/notes.html#hB.2.2&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9290897f65ff6898d28c654d5fc076368ef9ade7" translate="yes" xml:space="preserve">
          <source>Be careful if you choose to escape characters 0, a, b, f, n, r, t and v. They will be converted to \0, \a, \b, \f, \n, \r, \t and \v, all of which are predefined escape sequences in C. Many of these sequences are also defined in other C-derived languages, including PHP, meaning that you may not get the desired result if you use the output of &lt;strong&gt;addcslashes()&lt;/strong&gt; to generate code in those languages with these characters defined in &lt;code&gt;characters&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7528b981e33be5c015d406b1a692b7da734594" translate="yes" xml:space="preserve">
          <source>Be careful if you choose to escape characters 0, a, b, f, n, r, t and v. They will be converted to \0, \a, \b, \f, \n, \r, \t and \v, all of which are predefined escape sequences in C. Many of these sequences are also defined in other C-derived languages, including PHP, meaning that you may not get the desired result if you use the output of &lt;strong&gt;addcslashes()&lt;/strong&gt; to generate code in those languages with these characters defined in &lt;code&gt;charlist&lt;/code&gt;.</source>
          <target state="translated">如果选择转义字符0，a，b，f，n，r，t和v，请小心。它们将被转换为\ 0，\ a，\ b，\ f，\ n，\ r，\ t和\ v，所有这些都是C中预定义的转义序列。许多这些序列也用其他C派生的语言（包括PHP）定义，这意味着如果您使用&lt;strong&gt;addcslashes（）&lt;/strong&gt;的输出来生成，可能无法获得预期的结果用 &lt;code&gt;charlist&lt;/code&gt; 中定义的这些字符用这些语言编写代码。</target>
        </trans-unit>
        <trans-unit id="3053108a510ba1b77afd958defe49cd56024489f" translate="yes" xml:space="preserve">
          <source>Be careful when passing arguments with mixed types values because &lt;strong&gt;max()&lt;/strong&gt; can produce unpredictable results.</source>
          <target state="translated">传递带有混合类型值的参数时要小心，因为&lt;strong&gt;max（）&lt;/strong&gt;会产生不可预测的结果。</target>
        </trans-unit>
        <trans-unit id="3976d394fd8fd11aa1cc2a0da243feed43adac69" translate="yes" xml:space="preserve">
          <source>Be careful when passing arguments with mixed types values because &lt;strong&gt;min()&lt;/strong&gt; can produce unpredictable results.</source>
          <target state="translated">传递带有混合类型值的参数时要小心，因为&lt;strong&gt;min（）&lt;/strong&gt;可能会产生不可预测的结果。</target>
        </trans-unit>
        <trans-unit id="20d2fe14eb608e72a7d9b541b2e2beea951bfe9b" translate="yes" xml:space="preserve">
          <source>Be careful when sorting arrays with mixed types values because &lt;strong&gt;sort()&lt;/strong&gt; can produce unexpected results, if &lt;code&gt;flags&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;SORT_REGULAR&lt;/code&gt;&lt;/strong&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f215b8c73243b357ec431c2af438b63393fc49" translate="yes" xml:space="preserve">
          <source>Be careful when sorting arrays with mixed types values because &lt;strong&gt;sort()&lt;/strong&gt; can produce unpredictable results.</source>
          <target state="translated">使用混合类型值对数组进行排序时要小心，因为&lt;strong&gt;sort（）&lt;/strong&gt;可能会产生不可预测的结果。</target>
        </trans-unit>
        <trans-unit id="c50239c15e50e1fe1f80c40107413ed269d4e593" translate="yes" xml:space="preserve">
          <source>Be careful when using array syntax. Scalar keys will be coerced to integers by the engine. For example, &lt;code&gt;$map[&quot;1&quot;]&lt;/code&gt; will attempt to access &lt;code&gt;int(1)&lt;/code&gt;, while &lt;code&gt;$map-&amp;gt;get(&quot;1&quot;)&lt;/code&gt; will correctly look up the string key.</source>
          <target state="translated">使用数组语法时要小心。标量键将被引擎强制为整数。例如， &lt;code&gt;$map[&quot;1&quot;]&lt;/code&gt; 将尝试访问 &lt;code&gt;int(1)&lt;/code&gt; ，而 &lt;code&gt;$map-&amp;gt;get(&quot;1&quot;)&lt;/code&gt; 将正确查找字符串键。</target>
        </trans-unit>
        <trans-unit id="02f8db2a41ecfb2ce014807a46b6be164c87a1d7" translate="yes" xml:space="preserve">
          <source>Be sure to read the &lt;a href=&quot;language.namespaces.faq#language.namespaces.faq.quote&quot;&gt;note about escaping namespace names in strings&lt;/a&gt;.</source>
          <target state="translated">确保阅读&lt;a href=&quot;language.namespaces.faq#language.namespaces.faq.quote&quot;&gt;有关在字符串中转义名称空间名称&lt;/a&gt;的注释。</target>
        </trans-unit>
        <trans-unit id="0f73e65a8bd14c4ae82401114cd01f6b4d588082" translate="yes" xml:space="preserve">
          <source>Be sure to use the &lt;code&gt;===&lt;/code&gt; operator when checking for an error. Since the &lt;strong&gt;socket_select()&lt;/strong&gt; may return 0 the comparison with &lt;code&gt;==&lt;/code&gt; would evaluate to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10e007cfe3240b101be871225d66ac38016335d" translate="yes" xml:space="preserve">
          <source>Be sure to use the &lt;code&gt;===&lt;/code&gt; operator when checking for an error. Since the &lt;strong&gt;stream_select()&lt;/strong&gt; may return 0 the comparison with &lt;code&gt;==&lt;/code&gt; would evaluate to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4078f231d0fd900e9af9c2e6b297b6fe68fed58b" translate="yes" xml:space="preserve">
          <source>Be sure to use the &lt;em&gt;===&lt;/em&gt; operator when checking for an error. Since the &lt;strong&gt;socket_select()&lt;/strong&gt; may return 0 the comparison with &lt;em&gt;==&lt;/em&gt; would evaluate to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">检查错误时，请务必使用&lt;em&gt;===&lt;/em&gt;运算符。由于&lt;strong&gt;socket_select（）&lt;/strong&gt;可能返回0，因此与&lt;em&gt;==&lt;/em&gt;的比较将得出&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="c6d6284dc32d581c16d5f36f187c53b33c102ccb" translate="yes" xml:space="preserve">
          <source>Be sure to use the &lt;em&gt;===&lt;/em&gt; operator when checking for an error. Since the &lt;strong&gt;stream_select()&lt;/strong&gt; may return 0 the comparison with &lt;em&gt;==&lt;/em&gt; would evaluate to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">检查错误时，请务必使用&lt;em&gt;===&lt;/em&gt;运算符。由于&lt;strong&gt;stream_select（）&lt;/strong&gt;可能返回0，因此与&lt;em&gt;==&lt;/em&gt;的比较将得出&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="ce6cdaf0cfdb1d5593b2fa773636195b753ad3ae" translate="yes" xml:space="preserve">
          <source>Became available when using Apache 1, or the PHP Apache 2 &lt;em&gt;filter&lt;/em&gt; API. Before this time, it was only available when using the Apache 2 &lt;em&gt;handler&lt;/em&gt; API.</source>
          <target state="translated">在使用Apache 1或PHP Apache 2 &lt;em&gt;过滤器&lt;/em&gt; API 时可用。在此之前，它仅在使用Apache 2 &lt;em&gt;处理程序&lt;/em&gt; API 时可用。</target>
        </trans-unit>
        <trans-unit id="027cb4ebb31964647b892890a464e9f71c4d523f" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;function.pg-query&quot;&gt;pg_query()&lt;/a&gt; and &lt;a href=&quot;function.pg-query-params&quot;&gt;pg_query_params()&lt;/a&gt; return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if the query fails, you must use &lt;a href=&quot;function.pg-send-query&quot;&gt;pg_send_query()&lt;/a&gt; and &lt;a href=&quot;function.pg-get-result&quot;&gt;pg_get_result()&lt;/a&gt; to get the result handle.</source>
          <target state="translated">因为如果查询失败，&lt;a href=&quot;function.pg-query&quot;&gt;pg_query（）&lt;/a&gt;和&lt;a href=&quot;function.pg-query-params&quot;&gt;pg_query_params（）&lt;/a&gt;返回&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;，所以必须使用&lt;a href=&quot;function.pg-send-query&quot;&gt;pg_send_query（）&lt;/a&gt;和&lt;a href=&quot;function.pg-get-result&quot;&gt;pg_get_result（）&lt;/a&gt;来获取结果句柄。</target>
        </trans-unit>
        <trans-unit id="03859900018a100854ac0e9cb0fff0f2fce28b16" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;function.pg-query&quot;&gt;pg_query()&lt;/a&gt; and &lt;a href=&quot;function.pg-query-params&quot;&gt;pg_query_params()&lt;/a&gt; return &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if the query fails, you must use &lt;a href=&quot;function.pg-send-query&quot;&gt;pg_send_query()&lt;/a&gt; and &lt;a href=&quot;function.pg-get-result&quot;&gt;pg_get_result()&lt;/a&gt; to get the result handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8e9f9d5727aacc38922ff70b788e4d436605a3" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;function.pg-query&quot;&gt;pg_query()&lt;/a&gt; returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if the query fails, you must use &lt;a href=&quot;function.pg-send-query&quot;&gt;pg_send_query()&lt;/a&gt; and &lt;a href=&quot;function.pg-get-result&quot;&gt;pg_get_result()&lt;/a&gt; to get the result handle.</source>
          <target state="translated">因为如果查询失败，&lt;a href=&quot;function.pg-query&quot;&gt;pg_query（）&lt;/a&gt;返回&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;，所以必须使用&lt;a href=&quot;function.pg-send-query&quot;&gt;pg_send_query（）&lt;/a&gt;和&lt;a href=&quot;function.pg-get-result&quot;&gt;pg_get_result（）&lt;/a&gt;来获取结果句柄。</target>
        </trans-unit>
        <trans-unit id="28f44ed3453d6e0d80377f266fb12a72bf2bba76" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;function.pg-query&quot;&gt;pg_query()&lt;/a&gt; returns &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if the query fails, you must use &lt;a href=&quot;function.pg-send-query&quot;&gt;pg_send_query()&lt;/a&gt; and &lt;a href=&quot;function.pg-get-result&quot;&gt;pg_get_result()&lt;/a&gt; to get the result handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5120dccb79efabf5d3147b0b200e55fbd248b15" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;language.variables.variable&quot;&gt;variable variables&lt;/a&gt; may not be used with PHP's &lt;a href=&quot;language.variables.superglobals&quot;&gt;Superglobal arrays&lt;/a&gt; within functions, the Superglobal arrays may not be passed into &lt;strong&gt;compact()&lt;/strong&gt;.</source>
          <target state="translated">因为&lt;a href=&quot;language.variables.variable&quot;&gt;可变变量&lt;/a&gt;可能无法与PHP的函数内的&lt;a href=&quot;language.variables.superglobals&quot;&gt;Superglobal数组&lt;/a&gt;一起使用，所以Superglobal数组可能不会传递给&lt;strong&gt;compact（）&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="707b3d9b37306e44b47f730a6b5cc39586c0ad1f" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;include&lt;/code&gt; is a special language construct, parentheses are not needed around its argument. Take care when comparing return value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c0679fcf1d6bf845895686d83b7db80dc57e53" translate="yes" xml:space="preserve">
          <source>Because &lt;em&gt;include&lt;/em&gt; is a special language construct, parentheses are not needed around its argument. Take care when comparing return value.</source>
          <target state="translated">因为&lt;em&gt;include&lt;/em&gt;是一种特殊的语言构造，所以在其参数周围不需要括号。比较返回值时要小心。</target>
        </trans-unit>
        <trans-unit id="6e9a18aac7f0175716b5c6f7f505c54e2978d687" translate="yes" xml:space="preserve">
          <source>Because &lt;strong&gt;&lt;code&gt;NAN&lt;/code&gt;&lt;/strong&gt; represents any number of different values, &lt;strong&gt;&lt;code&gt;NAN&lt;/code&gt;&lt;/strong&gt; should not be compared to other values, including itself, and instead should be checked for using &lt;a href=&quot;function.is-nan&quot;&gt;is_nan()&lt;/a&gt;.</source>
          <target state="translated">由于&lt;strong&gt; &lt;code&gt;NAN&lt;/code&gt; &lt;/strong&gt;代表任意数量的不同值，因此不应将&lt;strong&gt; &lt;code&gt;NAN&lt;/code&gt; &lt;/strong&gt;与其他值（包括其自身）进行比较，而应使用&lt;a href=&quot;function.is-nan&quot;&gt;is_nan（）&lt;/a&gt;进行检查。</target>
        </trans-unit>
        <trans-unit id="742f63224d1d9d85f5fabbd407cd1910cf9bf7d1" translate="yes" xml:space="preserve">
          <source>Because &lt;strong&gt;flock()&lt;/strong&gt; requires a file pointer, you may have to use a special lock file to protect access to a file that you intend to truncate by opening it in write mode (with a &quot;w&quot; or &quot;w+&quot; argument to &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt;).</source>
          <target state="translated">因为&lt;strong&gt;flock（）&lt;/strong&gt;需要文件指针，所以您可能必须使用特殊的锁定文件来保护要截断的文件的访问，方法是在写模式下&lt;a href=&quot;function.fopen&quot;&gt;打开文件（&lt;/a&gt;对fopen（）使用&amp;ldquo; w&amp;rdquo;或&amp;ldquo; w +&amp;rdquo;参数））。</target>
        </trans-unit>
        <trans-unit id="ffe83cce56f87d2269de20db1e518c1cbde72dee" translate="yes" xml:space="preserve">
          <source>Because &lt;strong&gt;str_ireplace()&lt;/strong&gt; replaces left to right, it might replace a previously inserted value when doing multiple replacements. Example #2 in the &lt;a href=&quot;function.str-replace&quot;&gt;str_replace()&lt;/a&gt; documentation demonstrates how this may affect you in practice.</source>
          <target state="translated">由于&lt;strong&gt;str_ireplace（）&lt;/strong&gt;从左到右替换，因此在进行多次替换时它可能替换以前插入的值。&lt;a href=&quot;function.str-replace&quot;&gt;str_replace（）&lt;/a&gt;文档中的示例＃2 演示了如何在实践中影响您。</target>
        </trans-unit>
        <trans-unit id="601d4991fce2daf08791e8b557ade7c881872cf9" translate="yes" xml:space="preserve">
          <source>Because &lt;strong&gt;str_replace()&lt;/strong&gt; replaces left to right, it might replace a previously inserted value when doing multiple replacements. See also the examples in this document.</source>
          <target state="translated">由于&lt;strong&gt;str_replace（）&lt;/strong&gt;从左到右替换，因此在进行多次替换时可能会替换以前插入的值。另请参阅本文档中的示例。</target>
        </trans-unit>
        <trans-unit id="a52be145bfc844459a274ff8346f997d63677d3b" translate="yes" xml:space="preserve">
          <source>Because &lt;strong&gt;strip_tags()&lt;/strong&gt; does not actually validate the HTML, partial or broken tags can result in the removal of more text/data than expected.</source>
          <target state="translated">由于&lt;strong&gt;strip_tags（）&lt;/strong&gt;实际上并未验证HTML，因此部分或损坏的标签可能导致删除的文本/数据超出预期。</target>
        </trans-unit>
        <trans-unit id="89ea17c60834c6ec5f4416ee8e82c2a0cafe4caf" translate="yes" xml:space="preserve">
          <source>Because &lt;strong&gt;trim()&lt;/strong&gt; trims characters from the beginning and end of a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, it may be confusing when characters are (or are not) removed from the middle. &lt;em&gt;trim('abc', 'bad')&lt;/em&gt; removes both 'a' and 'b' because it trims 'a' thus moving 'b' to the beginning to also be trimmed. So, this is why it &quot;works&quot; whereas &lt;em&gt;trim('abc', 'b')&lt;/em&gt; seemingly does not.</source>
          <target state="translated">因为&lt;strong&gt;trim（）&lt;/strong&gt;从&lt;a href=&quot;language.types.string&quot;&gt;字符串&lt;/a&gt;的开头和结尾修剪字符，所以从中间去除（或不去除）字符时可能会造成混淆。&lt;em&gt;trim（'abc'，'bad'）&lt;/em&gt;会同时删除'a'和'b'，因为它会修剪'a'，因此也会将'b'移到开始处。因此，这就是为什么它&amp;ldquo;起作用&amp;rdquo;而&lt;em&gt;trim（'abc'，'b'）&lt;/em&gt;似乎不起作用的原因。</target>
        </trans-unit>
        <trans-unit id="f7b5d6c96b08553c3eba3ad98a596321ec78d1e5" translate="yes" xml:space="preserve">
          <source>Because &lt;strong&gt;trim()&lt;/strong&gt; trims characters from the beginning and end of a string, it may be confusing when characters are (or are not) removed from the middle. &lt;code&gt;trim('abc', 'bad')&lt;/code&gt; removes both 'a' and 'b' because it trims 'a' thus moving 'b' to the beginning to also be trimmed. So, this is why it &quot;works&quot; whereas &lt;code&gt;trim('abc', 'b')&lt;/code&gt; seemingly does not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff6c8dcd728af9b42a4513d2b2ed01403471f4d" translate="yes" xml:space="preserve">
          <source>Because PHP determines the types of variables and converts them (generally) as needed, it is not always obvious what type a given variable is at any one time. PHP includes several functions which find out what type a variable is, such as: &lt;a href=&quot;function.gettype&quot;&gt;gettype()&lt;/a&gt;, &lt;a href=&quot;function.is-array&quot;&gt;is_array()&lt;/a&gt;, &lt;a href=&quot;function.is-float&quot;&gt;is_float()&lt;/a&gt;, &lt;a href=&quot;function.is-int&quot;&gt;is_int()&lt;/a&gt;, &lt;a href=&quot;function.is-object&quot;&gt;is_object()&lt;/a&gt;, and &lt;a href=&quot;function.is-string&quot;&gt;is_string()&lt;/a&gt;. See also the chapter on &lt;a href=&quot;https://secure.php.net/manual/en/language.types.php&quot;&gt;Types&lt;/a&gt;.</source>
          <target state="translated">由于PHP确定变量的类型并根据需要（通常）进行转换，因此在任何时候，给定变量的类型并不总是很明显。PHP包含几个函数，这些函数找出变量的类型，例如：&lt;a href=&quot;function.gettype&quot;&gt;gettype（）&lt;/a&gt;，&lt;a href=&quot;function.is-array&quot;&gt;is_array（）&lt;/a&gt;，&lt;a href=&quot;function.is-float&quot;&gt;is_float（）&lt;/a&gt;，&lt;a href=&quot;function.is-int&quot;&gt;is_int（）&lt;/a&gt;，&lt;a href=&quot;function.is-object&quot;&gt;is_object（）&lt;/a&gt;和&lt;a href=&quot;function.is-string&quot;&gt;is_string（）&lt;/a&gt;。另请参阅&amp;ldquo; &lt;a href=&quot;https://secure.php.net/manual/en/language.types.php&quot;&gt;类型&lt;/a&gt; &amp;rdquo;一章。</target>
        </trans-unit>
        <trans-unit id="c5987147ace0cafd701c270c70f42960bda92561" translate="yes" xml:space="preserve">
          <source>Because PHP determines the types of variables and converts them (generally) as needed, it is not always obvious what type a given variable is at any one time. PHP includes several functions which find out what type a variable is, such as: &lt;a href=&quot;function.gettype&quot;&gt;gettype()&lt;/a&gt;, &lt;a href=&quot;function.is-array&quot;&gt;is_array()&lt;/a&gt;, &lt;a href=&quot;function.is-float&quot;&gt;is_float()&lt;/a&gt;, &lt;a href=&quot;function.is-int&quot;&gt;is_int()&lt;/a&gt;, &lt;a href=&quot;function.is-object&quot;&gt;is_object()&lt;/a&gt;, and &lt;a href=&quot;function.is-string&quot;&gt;is_string()&lt;/a&gt;. See also the chapter on &lt;a href=&quot;https://www.php.net/manual/en/language.types.php&quot;&gt;Types&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b92cda521a70c5a78c5cea8c208937866a5d133" translate="yes" xml:space="preserve">
          <source>Because PHP's &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; type is signed, and many IP addresses will result in negative integers on 32-bit architectures, you need to use the &quot;%u&quot; formatter of &lt;a href=&quot;function.sprintf&quot;&gt;sprintf()&lt;/a&gt; or &lt;a href=&quot;function.printf&quot;&gt;printf()&lt;/a&gt; to get the string representation of the unsigned IP address.</source>
          <target state="translated">因为PHP的&lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt;类型是带符号的，并且许多IP地址在32位体系结构上都将导致负整数，所以您需要使用&lt;a href=&quot;function.sprintf&quot;&gt;sprintf（）&lt;/a&gt;或&lt;a href=&quot;function.printf&quot;&gt;printf（）&lt;/a&gt;的&amp;ldquo;％u&amp;rdquo;格式化程序来获取无符号IP地址的字符串表示形式。</target>
        </trans-unit>
        <trans-unit id="d34c12a4956aee19b30d8eb0b61cf6742eab1f3c" translate="yes" xml:space="preserve">
          <source>Because PHP's int type is signed, and many IP addresses will result in negative integers on 32-bit architectures, you need to use the &quot;%u&quot; formatter of &lt;a href=&quot;function.sprintf&quot;&gt;sprintf()&lt;/a&gt; or &lt;a href=&quot;function.printf&quot;&gt;printf()&lt;/a&gt; to get the string representation of the unsigned IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b14713cb8d30151df19327a73df314083c44f3" translate="yes" xml:space="preserve">
          <source>Because PHP's integer type is signed many crc32 checksums will result in negative integers on 32bit platforms. On 64bit installations all &lt;strong&gt;crc32()&lt;/strong&gt; results will be positive integers though.</source>
          <target state="translated">由于PHP的整数类型是带符号的，因此许多crc32校验和将在32位平台上导致负整数。在64位安装上，所有&lt;strong&gt;crc32（）&lt;/strong&gt;结果均为正整数。</target>
        </trans-unit>
        <trans-unit id="c894ceefd472b3bba662f5376d811990b775c61d" translate="yes" xml:space="preserve">
          <source>Because assigning an array to another variable resets the original array's pointer, our example above would cause an endless loop had we assigned &lt;var&gt;$fruit&lt;/var&gt; to another variable inside the loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b35f550177e1513f2591c2057c0eaa8c209ae060" translate="yes" xml:space="preserve">
          <source>Because assigning an array to another variable resets the original array's pointer, our example above would cause an endless loop had we assigned &lt;var&gt;&lt;var&gt;$fruit&lt;/var&gt;&lt;/var&gt; to another variable inside the loop.</source>
          <target state="translated">因为将数组分配给另一个变量会重置原始数组的指针，所以如果我们在循环内将 &lt;var&gt;&lt;var&gt;$fruit&lt;/var&gt;&lt;/var&gt; 分配给另一个变量，则上面的示例将导致无限循环。</target>
        </trans-unit>
        <trans-unit id="42fbfd636633285fa330d6691aa389758b00d9e3" translate="yes" xml:space="preserve">
          <source>Because every system is setup differently, &lt;strong&gt;phpinfo()&lt;/strong&gt; is commonly used to check &lt;a href=&quot;https://secure.php.net/manual/en/configuration.php&quot;&gt;configuration settings&lt;/a&gt; and for available &lt;a href=&quot;language.variables.predefined&quot;&gt;predefined variables&lt;/a&gt; on a given system.</source>
          <target state="translated">因为每个系统的设置都不同，所以&lt;strong&gt;phpinfo（）&lt;/strong&gt;通常用于检查&lt;a href=&quot;https://secure.php.net/manual/en/configuration.php&quot;&gt;配置设置&lt;/a&gt;和给定系统上可用的&lt;a href=&quot;language.variables.predefined&quot;&gt;预定义变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0b96f85154747acf3dfbaab879c6fe4e498b16ad" translate="yes" xml:space="preserve">
          <source>Because every system is setup differently, &lt;strong&gt;phpinfo()&lt;/strong&gt; is commonly used to check &lt;a href=&quot;https://www.php.net/manual/en/configuration.php&quot;&gt;configuration settings&lt;/a&gt; and for available &lt;a href=&quot;language.variables.predefined&quot;&gt;predefined variables&lt;/a&gt; on a given system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217f649fbba901b97556d64564224606c0cc7d37" translate="yes" xml:space="preserve">
          <source>Because of eccentricities in the performance of libresolv between platforms, &lt;strong&gt;&lt;code&gt;DNS_ANY&lt;/code&gt;&lt;/strong&gt; will not always return every record, the slower &lt;strong&gt;&lt;code&gt;DNS_ALL&lt;/code&gt;&lt;/strong&gt; will collect all records more reliably.</source>
          <target state="translated">由于平台之间&lt;strong&gt; &lt;code&gt;DNS_ANY&lt;/code&gt; &lt;/strong&gt;性能的怪异性，&lt;strong&gt;DNS_ANY&lt;/strong&gt;不会总是返回每个记录，较慢的&lt;strong&gt; &lt;code&gt;DNS_ALL&lt;/code&gt; &lt;/strong&gt;将更可靠地收集所有记录。</target>
        </trans-unit>
        <trans-unit id="911305148cc73c28fbb531f6591a7ddb6eed0b55" translate="yes" xml:space="preserve">
          <source>Because of the way &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;s are represented internally, you should not test two &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;s for equality.</source>
          <target state="translated">由于&lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;的内部表示方式，您不应测试两个&lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;的相等性。</target>
        </trans-unit>
        <trans-unit id="5e48c1f44233ae24e06e0af7996ba647ac6d3350" translate="yes" xml:space="preserve">
          <source>Because of the way floats are represented internally, you should not test two floats for equality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2140f28ef482edb6906f2ffa9ab21aba29bce8" translate="yes" xml:space="preserve">
          <source>Because setting a cookie with a value of &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; will try to delete the cookie, you should not use boolean values. Instead, use &lt;em&gt;0&lt;/em&gt; for &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; and &lt;em&gt;1&lt;/em&gt; for &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">因为将cookie设置为&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;值将尝试删除该cookie，所以不应使用布尔值。相反，使用&lt;em&gt;0&lt;/em&gt;为&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;和&lt;em&gt;1&lt;/em&gt;为&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="a1a8311163adfab33d0c4f1d4491af809fca3e1c" translate="yes" xml:space="preserve">
          <source>Because setting a cookie with a value of &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; will try to delete the cookie, you should not use boolean values. Instead, use &lt;em&gt;0&lt;/em&gt; for &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; and &lt;em&gt;1&lt;/em&gt; for &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b678259551b67f88992e9b46c5014cab0d739b" translate="yes" xml:space="preserve">
          <source>Because static methods are callable without an instance of the object created, the pseudo-variable &lt;var&gt;$this&lt;/var&gt; is not available inside the method declared as static.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a8e48a3bfc93a9a70219fcffda2fc4f64c90a93" translate="yes" xml:space="preserve">
          <source>Because static methods are callable without an instance of the object created, the pseudo-variable &lt;var&gt;&lt;var&gt;$this&lt;/var&gt;&lt;/var&gt; is not available inside the method declared as static.</source>
          <target state="translated">由于无需创建对象实例即可调用静态方法，因此伪变量 &lt;var&gt;&lt;var&gt;$this&lt;/var&gt;&lt;/var&gt; 在声明为static的方法内部不可用。</target>
        </trans-unit>
        <trans-unit id="e82ceeddeebe2487481ffc2480c9013ef5873411" translate="yes" xml:space="preserve">
          <source>Because the &lt;strong&gt;SessionHandler&lt;/strong&gt; wraps the current internal save handler methods, the above example of encryption can be applied to any internal save handler without having to know the internals of the handlers.</source>
          <target state="translated">由于&lt;strong&gt;SessionHandler&lt;/strong&gt;包装了当前的内部保存处理程序方法，因此上述加密示例可以应用于任何内部保存处理程序，而无需了解处理程序的内部。</target>
        </trans-unit>
        <trans-unit id="e213c6bd57cae2bea79f07fe13195bbebd479202" translate="yes" xml:space="preserve">
          <source>Because the effects may vary depending on the ODBC driver, use of this function in scripts to be made publicly available is strongly discouraged. Also, some ODBC options are not available to this function because they must be set before the connection is established or the query is prepared. However, if on a particular job it can make PHP work so your boss doesn't tell you to use a commercial product, that's all that really matters.</source>
          <target state="translated">由于效果可能因ODBC驱动程序的不同而不同,所以强烈不建议在要公开的脚本中使用这个函数。另外,有些ODBC选项不能用于这个函数,因为它们必须在建立连接或准备查询之前设置。然而,如果在某项工作中,它可以使PHP工作,所以你的老板不会叫你使用商业产品,这才是真正重要的。</target>
        </trans-unit>
        <trans-unit id="37904d2e4f8679067efe067a14482bc70d2b1533" translate="yes" xml:space="preserve">
          <source>Because the value of an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; can be anything, it can also be another &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;. This enables the creation of recursive and multi-dimensional &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;s.</source>
          <target state="translated">因为一个&lt;a href=&quot;language.types.array&quot;&gt;数组&lt;/a&gt;的值可以是任何值，所以它也可以是另一个&lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;。这使得能够创建递归和多维&lt;a href=&quot;language.types.array&quot;&gt;数组&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c9f630d1c2c9ce7b045e5d9758d1f87744817e23" translate="yes" xml:space="preserve">
          <source>Because the value of an array can be anything, it can also be another array. This enables the creation of recursive and multi-dimensional arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7600e311083b907d09d32fc5aa79f89e788419fc" translate="yes" xml:space="preserve">
          <source>Because there are so many methods, here is a handy list of methods, somewhat reduced to their general purpose:</source>
          <target state="translated">由于方法太多,这里列出了一个方便的方法清单,有点缩减到它们的一般用途。</target>
        </trans-unit>
        <trans-unit id="44f1dbda51e44db8cdd5ab6b41daf995d5fdd0ae" translate="yes" xml:space="preserve">
          <source>Because this function depends on the current scope to determine parameter details, it cannot be used as a function parameter in versions prior to 5.3.0. If this value must be passed, the results should be assigned to a variable, and that variable should be passed.</source>
          <target state="translated">因为这个函数依赖于当前的作用域来确定参数细节,所以在5.3.0之前的版本中,它不能作为函数参数使用。如果必须传递这个值,则应将结果分配给一个变量,并传递该变量。</target>
        </trans-unit>
        <trans-unit id="61b1f70c4aee7fe9b93217818cc16d2125d2548a" translate="yes" xml:space="preserve">
          <source>Because this method uses the modulus operation, numbers which are not positive integers may give unexpected results.</source>
          <target state="translated">因为这种方法使用了模数运算,所以不是正整数的数字可能会得到意想不到的结果。</target>
        </trans-unit>
        <trans-unit id="4fc01d72c49409313e152894c7abb5f87c011025" translate="yes" xml:space="preserve">
          <source>Because variables in PHP can't have dots and spaces in their names, those are converted to underscores. Same applies to naming of respective key names in case of using this function with &lt;code&gt;result&lt;/code&gt; parameter.</source>
          <target state="translated">由于PHP中的变量名称中不能包含点和空格，因此这些变量将转换为下划线。如果将此功能与 &lt;code&gt;result&lt;/code&gt; 参数一起使用，则对各个键名称的命名也相同。</target>
        </trans-unit>
        <trans-unit id="ca01b1c09bf5d855a028d6e0ee64dc156b0d9e7a" translate="yes" xml:space="preserve">
          <source>Before 5.3.6, the only values recognized are &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;, which are the same as setting or not setting the &lt;strong&gt;&lt;code&gt;DEBUG_BACKTRACE_PROVIDE_OBJECT&lt;/code&gt;&lt;/strong&gt; option respectively.</source>
          <target state="translated">在5.3.6之前，只能识别的值为&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;或&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;，分别与设置或未设置&lt;strong&gt; &lt;code&gt;DEBUG_BACKTRACE_PROVIDE_OBJECT&lt;/code&gt; &lt;/strong&gt;选项相同。</target>
        </trans-unit>
        <trans-unit id="ddcbfe56823d07f45b8421377b8cd0994e95989f" translate="yes" xml:space="preserve">
          <source>Before 5.3.6, the only values recognized are &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;, which are the same as setting or not setting the &lt;strong&gt;&lt;code&gt;DEBUG_BACKTRACE_PROVIDE_OBJECT&lt;/code&gt;&lt;/strong&gt; option respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5d80f3812d2931324bb9f0c6f55b47963a5319" translate="yes" xml:space="preserve">
          <source>Before PHP 5.1.0, negative timestamps were not supported under any known version of Windows and some other systems as well. Therefore the range of valid years was limited to 1970 through 2038.</source>
          <target state="translated">在 PHP 5.1.0 之前,任何已知的 Windows 版本和其他一些系统都不支持负时间戳。因此,有效年份的范围被限制在1970年到2038年。</target>
        </trans-unit>
        <trans-unit id="f17ced3ef8abb6d18ca80a5e343e53522756984c" translate="yes" xml:space="preserve">
          <source>Before PHP 5.1.0, this function returned &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; when &lt;code&gt;text&lt;/code&gt; was an empty string.</source>
          <target state="translated">在PHP 5.1.0之前，当 &lt;code&gt;text&lt;/code&gt; 为空字符串时，此函数返回&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="ffe6e051f6ef47bce95796f19518997c457552b4" translate="yes" xml:space="preserve">
          <source>Before PHP 5.3.4, on Windows, &lt;strong&gt;sleep()&lt;/strong&gt; always returns &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; when sleep has occurred, regardless of whether the sleep was interrupted or not.</source>
          <target state="translated">在PHP 5.3.4之前，在Windows上，无论睡眠是否中断，&lt;strong&gt;sleep（）&lt;/strong&gt;在发生睡眠时总是返回&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="b1bfed4a6b9231dcc874a27d99a85c9060365b4c" translate="yes" xml:space="preserve">
          <source>Before PHP 5.4, referenced variables in &lt;code&gt;param_arr&lt;/code&gt; are passed to the function by reference, regardless of whether the function expects the respective parameter to be passed by reference. This form of call-time pass by reference does not emit a deprecation notice, but it is nonetheless deprecated, and has been removed in PHP 5.4. Furthermore, this does not apply to internal functions, for which the function signature is honored. Passing by value when the function expects a parameter by reference results in a warning and having &lt;a href=&quot;function.call-user-func&quot;&gt;call_user_func()&lt;/a&gt; return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; (there is, however, an exception for passed values with reference count = 1, such as in literals, as these can be turned into references without ill effects &amp;mdash; but also without writes to that value having any effect &amp;mdash;; do not rely in this behavior, though, as the reference count is an implementation detail and the soundness of this behavior is questionable).</source>
          <target state="translated">在PHP 5.4之前， &lt;code&gt;param_arr&lt;/code&gt; 中的引用变量通过引用传递给函数，无论该函数是否希望各个参数都通过引用传递。这种形式的调用时按引用传递不会发出弃用通知，但是仍然不推荐使用，并且已在PHP 5.4中删除。此外，这不适用于内部功能，因此必须遵守功能签名。函数通过引用期望参数时按值传递会导致警告，并使&lt;a href=&quot;function.call-user-func&quot;&gt;call_user_func（）&lt;/a&gt;返回&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; （但是，引用计数= 1的传递值有一个例外，例如在文字中，因为这些值可以被转换为引用，而不会产生不良影响-但也不会写入对该值有任何影响-；请不要依赖于此但是，由于引用计数是一个实现细节，因此这种行为的合理性值得怀疑）。</target>
        </trans-unit>
        <trans-unit id="c7ca3590d747837c0bf014c5da509a83d0228191" translate="yes" xml:space="preserve">
          <source>Before PHP 5.4, referenced variables in &lt;code&gt;param_arr&lt;/code&gt; are passed to the function by reference, regardless of whether the function expects the respective parameter to be passed by reference. This form of call-time pass by reference does not emit a deprecation notice, but it is nonetheless deprecated, and has been removed in PHP 5.4. Furthermore, this does not apply to internal functions, for which the function signature is honored. Passing by value when the function expects a parameter by reference results in a warning and having &lt;a href=&quot;function.call-user-func&quot;&gt;call_user_func()&lt;/a&gt; return &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; (there is, however, an exception for passed values with reference count = 1, such as in literals, as these can be turned into references without ill effects &amp;mdash; but also without writes to that value having any effect &amp;mdash;; do not rely in this behavior, though, as the reference count is an implementation detail and the soundness of this behavior is questionable).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="510fd6e833a9aac4303574941451c687288f37c7" translate="yes" xml:space="preserve">
          <source>Before PHP 5.4.20/5.5.4 instead of &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; you will receive -99999 upon accessing the property.</source>
          <target state="translated">在PHP 5.4.20 / 5.5.4之前（而不是&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; ),&lt;/strong&gt;您将在访问该属性时收到-99999。</target>
        </trans-unit>
        <trans-unit id="bdd369a7a408a9db765b644cddba5043413d0c93" translate="yes" xml:space="preserve">
          <source>Before PHP 5.4.20/5.5.4 instead of &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; you will receive -99999 upon accessing the property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be43398b62b0b32337b176ab32227c952f58c12f" translate="yes" xml:space="preserve">
          <source>Before PHP 5.4.42 and 5.5.27, repectively, &lt;code&gt;additional_headers&lt;/code&gt; did not have mail header injection protection. Therefore, users must make sure specified headers are safe and contains headers only. i.e. Never start mail body by putting multiple newlines.</source>
          <target state="translated">分别在PHP 5.4.42和5.5.27之前， &lt;code&gt;additional_headers&lt;/code&gt; 没有邮件头注入保护。因此，用户必须确保指定的标头是安全的，并且仅包含标头。即永远不要通过放置多个换行符来开始邮件正文。</target>
        </trans-unit>
        <trans-unit id="e59c4ecdbb1feedbbc002bb207c9d11b29754678" translate="yes" xml:space="preserve">
          <source>Before PHP 5.5.0, referencing &lt;em&gt;$value&lt;/em&gt; is only possible if the iterated array can be referenced (i.e. if it is a variable). The following code works only as of PHP 5.5.0:</source>
          <target state="translated">在PHP 5.5.0之前，仅当可以引用迭代数组（即，如果它是变量）时，才可以引用&lt;em&gt;$ value&lt;/em&gt;。以下代码仅适用于PHP 5.5.0：</target>
        </trans-unit>
        <trans-unit id="92600367e7e9130bdb17942278729aa77c98aed0" translate="yes" xml:space="preserve">
          <source>Before PHP 5.5.0, this function is only available if PHP is compiled with the bundled version of the GD library.</source>
          <target state="translated">在PHP 5.5.0之前,这个函数只有在PHP编译时捆绑了GD库的版本时才可用。</target>
        </trans-unit>
        <trans-unit id="815c0b744ffd33bbff0ec709407ba2c3b802fa94" translate="yes" xml:space="preserve">
          <source>Before PHP 5.6 neither functions nor constants can be imported via the &lt;em&gt;use&lt;/em&gt; statement.</source>
          <target state="translated">在PHP 5.6之前，不能通过&lt;em&gt;use&lt;/em&gt;语句导入函数或常量。</target>
        </trans-unit>
        <trans-unit id="66a06e73e512895f01253fc9f996f1a9949eb62c" translate="yes" xml:space="preserve">
          <source>Before PHP 5.6 the only elements that are affected by &lt;em&gt;use&lt;/em&gt; statements are namespaces and class names. In order to shorten a long constant or function, import its containing namespace.</source>
          <target state="translated">在PHP 5.6之前，受&lt;em&gt;use&lt;/em&gt;语句影响的唯一元素是名称空间和类名称。为了缩短长常量或函数，请导入其包含的名称空间。</target>
        </trans-unit>
        <trans-unit id="e6126181ebef6a388513462befc67a17421cb707" translate="yes" xml:space="preserve">
          <source>Before PHP 7, &lt;strong&gt;Exception&lt;/strong&gt; did not implement the &lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt; interface.</source>
          <target state="translated">在PHP 7之前，&lt;strong&gt;Exception&lt;/strong&gt;未实现&lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="0866e3f7b1f82f98ecefa82f900e0d52a4660c42" translate="yes" xml:space="preserve">
          <source>Before PHP 7.0.0, &lt;strong&gt;ftp_ssl_connect()&lt;/strong&gt; was only available if both the ftp module and the &lt;a href=&quot;https://www.php.net/manual/en/ref.openssl.php&quot;&gt;OpenSSL&lt;/a&gt; support have been built statically into php; this means that on Windows this function had been undefined in the official PHP builds. To have this function available on Windows, it had been necessary to compile own PHP binaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4921bd6888421cc59367b27d1350f2e32009145e" translate="yes" xml:space="preserve">
          <source>Before PHP 7.1.0, &lt;strong&gt;list()&lt;/strong&gt; only worked on numerical arrays and assumes the numerical indices start at 0.</source>
          <target state="translated">在PHP 7.1.0之前，&lt;strong&gt;list（）&lt;/strong&gt;仅适用于数字数组，并假定数字索引从0开始。</target>
        </trans-unit>
        <trans-unit id="6c386aa444d2af85b7f3ddf09660ebdb15e7ce89" translate="yes" xml:space="preserve">
          <source>Before PHP 7.1.0, rewrite vars set by &lt;a href=&quot;function.output-add-rewrite-var&quot;&gt;output_add_rewrite_var()&lt;/a&gt; use the same Session module trans sid output buffer. Since PHP 7.1.0, dedicated output buffer is used and &lt;strong&gt;output_reset_rewrite_vars()&lt;/strong&gt; only removes rewrite vars defined by &lt;a href=&quot;function.output-add-rewrite-var&quot;&gt;output_add_rewrite_var()&lt;/a&gt;.</source>
          <target state="translated">在PHP 7.1.0之前，由&lt;a href=&quot;function.output-add-rewrite-var&quot;&gt;output_add_rewrite_var（）&lt;/a&gt;设置的重写var 使用相同的Session模块trans sid输出缓冲区。从PHP 7.1.0开始，将使用专用的输出缓冲区，并且&lt;strong&gt;output_reset_rewrite_vars（）&lt;/strong&gt;仅删除由&lt;a href=&quot;function.output-add-rewrite-var&quot;&gt;output_add_rewrite_var（）&lt;/a&gt;定义的重写var 。</target>
        </trans-unit>
        <trans-unit id="630bdb3ba2cc6dc0b0bd50ec241d00529ccb0fb8" translate="yes" xml:space="preserve">
          <source>Before PHP 7.1.0, rewrite vars set by &lt;strong&gt;output_add_rewrite_var()&lt;/strong&gt; use the same Session module trans sid output buffer. Since PHP 7.1.0, dedicated output buffer is used, &lt;a href=&quot;https://secure.php.net/manual/en/outcontrol.configuration.php#ini.url-rewriter.tags&quot;&gt; url_rewriter.tags&lt;/a&gt; is used solely for output functions, &lt;a href=&quot;https://secure.php.net/manual/en/outcontrol.configuration.php#ini.url-rewriter.tags&quot;&gt;url_rewriter.hosts&lt;/a&gt; is added.</source>
          <target state="translated">在PHP 7.1.0之前，由&lt;strong&gt;output_add_rewrite_var（）&lt;/strong&gt;设置的重写var 使用相同的Session模块trans sid输出缓冲区。从PHP 7.1.0开始，使用了专用的输出缓冲区，&lt;a href=&quot;https://secure.php.net/manual/en/outcontrol.configuration.php#ini.url-rewriter.tags&quot;&gt;url_rewriter.tags&lt;/a&gt;仅用于输出函数，添加了&lt;a href=&quot;https://secure.php.net/manual/en/outcontrol.configuration.php#ini.url-rewriter.tags&quot;&gt;url_rewriter.hosts&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cf4465e3e9543bb1838d86a142da5d1cbf2fbefd" translate="yes" xml:space="preserve">
          <source>Before PHP 7.1.0, rewrite vars set by &lt;strong&gt;output_add_rewrite_var()&lt;/strong&gt; use the same Session module trans sid output buffer. Since PHP 7.1.0, dedicated output buffer is used, &lt;a href=&quot;https://www.php.net/manual/en/outcontrol.configuration.php#ini.url-rewriter.tags&quot;&gt; url_rewriter.tags&lt;/a&gt; is used solely for output functions, &lt;a href=&quot;https://www.php.net/manual/en/outcontrol.configuration.php#ini.url-rewriter.tags&quot;&gt;url_rewriter.hosts&lt;/a&gt; is added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01d465c5c2fbfadc4ae15aaf091cc68adaa4450" translate="yes" xml:space="preserve">
          <source>Before PHP 7.2.0 the only means to get a list of supported hash algorithms has been to call &lt;a href=&quot;function.hash-algos&quot;&gt;hash_algos()&lt;/a&gt; which also returns hash algorithms that are not suitable for &lt;a href=&quot;function.hash-hmac&quot;&gt;hash_hmac()&lt;/a&gt;.</source>
          <target state="translated">在PHP 7.2.0之前，获取受支持的哈希算法列表的唯一方法是调用&lt;a href=&quot;function.hash-algos&quot;&gt;hash_algos（）&lt;/a&gt;，该方法还返回不适合&lt;a href=&quot;function.hash-hmac&quot;&gt;hash_hmac（）的&lt;/a&gt;哈希算法。</target>
        </trans-unit>
        <trans-unit id="6c6817a10818266d972624c04b1851d48cb6b012" translate="yes" xml:space="preserve">
          <source>Before PHP 7.2.14 and 7.3.0, respectively, &lt;a href=&quot;sqlite3stmt.reset&quot;&gt;SQLite3Stmt::reset()&lt;/a&gt; must be called after the first call to &lt;a href=&quot;sqlite3stmt.execute&quot;&gt;SQLite3Stmt::execute()&lt;/a&gt; if the bound value should be properly updated on following calls to &lt;a href=&quot;sqlite3stmt.execute&quot;&gt;SQLite3Stmt::execute()&lt;/a&gt;. If &lt;a href=&quot;sqlite3stmt.reset&quot;&gt;SQLite3Stmt::reset()&lt;/a&gt; is not called, the bound value will not change, even if the value assigned to the variable passed to &lt;strong&gt;SQLite3Stmt::bindParam()&lt;/strong&gt; has changed, or &lt;strong&gt;SQLite3Stmt::bindParam()&lt;/strong&gt; has been called again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459d4ca7882f60dd0df48f13f53904fc22594c6e" translate="yes" xml:space="preserve">
          <source>Before PHP 7.2.14 and 7.3.0, respectively, once the statement has been executed, &lt;a href=&quot;sqlite3stmt.reset&quot;&gt;SQLite3Stmt::reset()&lt;/a&gt; needs to be called to be able to change the value of bound parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9caf436270651a87ebf4561be6925341a4bc2c" translate="yes" xml:space="preserve">
          <source>Before PHP 7.3, any strings that are not set will silently be skipped.</source>
          <target state="translated">在 PHP 7.3 之前,任何没有设置的字符串都会被默默跳过。</target>
        </trans-unit>
        <trans-unit id="29eb1713f56cee95f0551e5b9c435a58142b4fd8" translate="yes" xml:space="preserve">
          <source>Before PHP 7.3.0 &lt;strong&gt;bcmul()&lt;/strong&gt; may return a result with fewer digits after the decimal point than the &lt;code&gt;scale&lt;/code&gt; parameter would indicate. This only occurs when the result doesn't require all of the precision allowed by the &lt;code&gt;scale&lt;/code&gt;. For example:</source>
          <target state="translated">在PHP 7.3.0之前，&lt;strong&gt;bcmul（）&lt;/strong&gt;返回的小数点后的位数可能少于 &lt;code&gt;scale&lt;/code&gt; 参数指示的位数。仅当结果不需要 &lt;code&gt;scale&lt;/code&gt; 允许的所有精度时，才会发生这种情况。例如：</target>
        </trans-unit>
        <trans-unit id="a2ab771fbab9ca5a9adda658971433f699554dab" translate="yes" xml:space="preserve">
          <source>Before PHP 7.3.0 &lt;strong&gt;bcpow()&lt;/strong&gt; may return a result with fewer digits after the decimal point than the &lt;code&gt;scale&lt;/code&gt; parameter would indicate. This only occurs when the result doesn't require all of the precision allowed by the &lt;code&gt;scale&lt;/code&gt;. For example:</source>
          <target state="translated">在PHP 7.3.0之前，&lt;strong&gt;bcpow（）&lt;/strong&gt;返回的小数点后的位数可能少于 &lt;code&gt;scale&lt;/code&gt; 参数指示的位数。仅当结果不需要 &lt;code&gt;scale&lt;/code&gt; 允许的所有精度时，才会发生这种情况。例如：</target>
        </trans-unit>
        <trans-unit id="c32ee470457a0e760bfbeaf8f3481d8b3464da7f" translate="yes" xml:space="preserve">
          <source>Before discussing the use of namespaces, it is important to understand how PHP knows which namespaced element your code is requesting. A simple analogy can be made between PHP namespaces and a filesystem. There are three ways to access a file in a file system:</source>
          <target state="translated">在讨论命名空间的使用之前,重要的是要了解 PHP 是如何知道你的代码正在请求哪个命名空间的元素。可以将 PHP 命名空间和文件系统做一个简单的类比。在文件系统中,有三种方法可以访问一个文件。</target>
        </trans-unit>
        <trans-unit id="a92ef98c6ec8a3256c62567e91107d8bffb5ea2d" translate="yes" xml:space="preserve">
          <source>Before issuing any Radius requests, the library must be made aware of the servers it can contact. The easiest way to configure the library is to call &lt;strong&gt;radius_config()&lt;/strong&gt;. &lt;strong&gt;radius_config()&lt;/strong&gt; causes the library to read a configuration file whose format is described in &lt;a href=&quot;http://www.freebsd.org/cgi/man.cgi?query=radius.conf&quot;&gt;&amp;raquo; radius.conf&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000db2515e4fd764dd52a845e6cc8dba17f269cf" translate="yes" xml:space="preserve">
          <source>Before this version values of some magic constants were always lowercased. All of them are case-sensitive now (contain names as they were declared).</source>
          <target state="translated">在这个版本之前,一些魔法常量的值总是小写的。现在所有的常量都是区分大小写的(包含它们声明的名称)。</target>
        </trans-unit>
        <trans-unit id="73641e4b29ba69dadae706aa698b22be9a3639e1" translate="yes" xml:space="preserve">
          <source>Before v3.0 a second argument &lt;code&gt;&amp;amp;cas_tokens&lt;/code&gt; was in use. It was filled with the CAS token values for the found items. The &lt;code&gt;&amp;amp;cas_tokens&lt;/code&gt; parameter was removed in v3.0 of the extension. It was replaced with a new flag &lt;strong&gt;&lt;code&gt;Memcached::GET_EXTENDED&lt;/code&gt;&lt;/strong&gt; that needs is to be used as the value for &lt;code&gt;flags&lt;/code&gt;.</source>
          <target state="translated">在v3.0之前的 &lt;code&gt;&amp;amp;cas_tokens&lt;/code&gt; 中，使用了第二个参数＆cas_tokens。它用找到的项目的CAS令牌值填充。在 &lt;code&gt;&amp;amp;cas_tokens&lt;/code&gt; 在延长的V3.0除去参数。它被新的标志&lt;strong&gt; &lt;code&gt;Memcached::GET_EXTENDED&lt;/code&gt; &lt;/strong&gt;代替，该标志需要用作 &lt;code&gt;flags&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="f5758180c140fa745756a5d79fd33e34fc099239" translate="yes" xml:space="preserve">
          <source>Begin checking for events and calling callbacks &lt;em&gt;for the default loop&lt;/em&gt; . Returns when a callback calls &lt;a href=&quot;ev.stop&quot;&gt;Ev::stop()&lt;/a&gt; method, or the flags are nonzero(in which case the return value is true) or when there are no active watchers which reference the loop( &lt;a href=&quot;evwatcher.keepalive&quot;&gt;EvWatcher::keepalive()&lt;/a&gt; is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;), in which case the return value will be &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;. The return value can generally be interpreted as &lt;em&gt;if &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, there is more work left to do&lt;/em&gt; .</source>
          <target state="translated">开始检查事件并&lt;em&gt;为默认循环&lt;/em&gt;调用回调。当回调调用&lt;a href=&quot;ev.stop&quot;&gt;Ev :: stop（）&lt;/a&gt;方法或标志为非零（在这种情况下，返回值为true）或没有引用循环的活动观察程序（&lt;a href=&quot;evwatcher.keepalive&quot;&gt;EvWatcher :: keepalive（）&lt;/a&gt;为&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;）时返回；在这种情况下，返回值为&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;。返回值一般可以理解为&lt;em&gt;，如果&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;，有剩下要做更多的工作&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c480ab119635ac22ae465611ccdd8175ab52dcab" translate="yes" xml:space="preserve">
          <source>Begin checking for events and calling callbacks &lt;em&gt;for the default loop&lt;/em&gt; . Returns when a callback calls &lt;a href=&quot;ev.stop&quot;&gt;Ev::stop()&lt;/a&gt; method, or the flags are nonzero(in which case the return value is true) or when there are no active watchers which reference the loop( &lt;a href=&quot;evwatcher.keepalive&quot;&gt;EvWatcher::keepalive()&lt;/a&gt; is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;), in which case the return value will be &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;. The return value can generally be interpreted as &lt;em&gt;if &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, there is more work left to do&lt;/em&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5355699cf9574c92e98c8827deb60f45030e5e" translate="yes" xml:space="preserve">
          <source>Begin checking for events and calling callbacks for the current event loop. Returns when a callback calls &lt;a href=&quot;ev.stop&quot;&gt;Ev::stop()&lt;/a&gt; method, or the flags are nonzero(in which case the return value is true) or when there are no active watchers which reference the loop( &lt;a href=&quot;evwatcher.keepalive&quot;&gt;EvWatcher::keepalive()&lt;/a&gt; is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;), in which case the return value will be &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;. The return value can generally be interpreted as &lt;em&gt;if &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, there is more work left to do&lt;/em&gt; .</source>
          <target state="translated">开始检查事件并为当前事件循环调用回调。当回调调用&lt;a href=&quot;ev.stop&quot;&gt;Ev :: stop（）&lt;/a&gt;方法或标志为非零（在这种情况下，返回值为true）或没有引用循环的活动观察程序（&lt;a href=&quot;evwatcher.keepalive&quot;&gt;EvWatcher :: keepalive（）&lt;/a&gt;为&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;）时返回；在这种情况下，返回值为&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;。返回值一般可以理解为&lt;em&gt;，如果&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;，有剩下要做更多的工作&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="70a0c916907f9dda30b0a921c3448e7d30fa9f09" translate="yes" xml:space="preserve">
          <source>Begin checking for events and calling callbacks for the current event loop. Returns when a callback calls &lt;a href=&quot;ev.stop&quot;&gt;Ev::stop()&lt;/a&gt; method, or the flags are nonzero(in which case the return value is true) or when there are no active watchers which reference the loop( &lt;a href=&quot;evwatcher.keepalive&quot;&gt;EvWatcher::keepalive()&lt;/a&gt; is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;), in which case the return value will be &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;. The return value can generally be interpreted as &lt;em&gt;if &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, there is more work left to do&lt;/em&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef37487401623216b3faa1a1ad35e466240b2f6c" translate="yes" xml:space="preserve">
          <source>Begin logging changes made to the SDO_DataObject.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36506190c2135ae8c2b4ea546bfa2116942eadf4" translate="yes" xml:space="preserve">
          <source>Begin timestamp.</source>
          <target state="translated">开始时间戳。</target>
        </trans-unit>
        <trans-unit id="a337686d6aadc69dfa901830e6cad592f469fbdf" translate="yes" xml:space="preserve">
          <source>Begining from PHP 5.4.0 four additional constants available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf0b865ce0821948992d3642584fcb7e901151e" translate="yes" xml:space="preserve">
          <source>Begins a transaction.</source>
          <target state="translated">开始交易。</target>
        </trans-unit>
        <trans-unit id="b49640a6a748f0c175fc20884ad162b23dcd53b7" translate="yes" xml:space="preserve">
          <source>Begins a transaction. Requires the InnoDB engine (it is enabled by default). For additional details about how MySQL transactions work, see &lt;a href=&quot;http://dev.mysql.com/doc/mysql/en/commit.html&quot;&gt;&amp;raquo; http://dev.mysql.com/doc/mysql/en/commit.html&lt;/a&gt;.</source>
          <target state="translated">开始交易。需要InnoDB引擎（默认情况下启用）。有关MySQL事务如何工作的更多详细信息，请参见&lt;a href=&quot;http://dev.mysql.com/doc/mysql/en/commit.html&quot;&gt;&amp;raquo;http://dev.mysql.com/doc/mysql/en/commit.html&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02a9520cb229a3e806630a863ce3214ff40756e3" translate="yes" xml:space="preserve">
          <source>Behaves as &lt;a href=&quot;eventbuffer.addbuffer&quot;&gt;EventBuffer::addBuffer()&lt;/a&gt; , except that it moves data to the front of the buffer.</source>
          <target state="translated">表现为&lt;a href=&quot;eventbuffer.addbuffer&quot;&gt;EventBuffer :: addBuffer（）&lt;/a&gt;，除了它将数据移到缓冲区的开头。</target>
        </trans-unit>
        <trans-unit id="c4f566c4d7e2c407ddb3e3f84d6b251c7a0b35ab" translate="yes" xml:space="preserve">
          <source>Behaves as &lt;a href=&quot;eventbuffer.read&quot;&gt;EventBuffer::read()&lt;/a&gt; , except that it does not copy the data: it just removes it from the front of the buffer.</source>
          <target state="translated">表现为&lt;a href=&quot;eventbuffer.read&quot;&gt;EventBuffer :: read（）&lt;/a&gt;，只是它不复制数据：只是将其从缓冲区的前面删除。</target>
        </trans-unit>
        <trans-unit id="7159080e86b86a14d2c3911c77707da6fa4fddb4" translate="yes" xml:space="preserve">
          <source>Behaves just like &lt;a href=&quot;eventbuffer.read&quot;&gt;EventBuffer::read()&lt;/a&gt; , but does not drain any data from the buffer. I.e. it copies the first &lt;code&gt;max_bytes&lt;/code&gt; bytes from the front of the buffer into &lt;code&gt;data&lt;/code&gt; . If there are fewer than &lt;code&gt;max_bytes&lt;/code&gt; bytes available, the function copies all the bytes there are.</source>
          <target state="translated">行为类似于&lt;a href=&quot;eventbuffer.read&quot;&gt;EventBuffer :: read（）&lt;/a&gt;，但不会从缓冲区中耗尽任何数据。即，它将缓冲区 &lt;code&gt;max_bytes&lt;/code&gt; 的前max_bytes个字节复制到 &lt;code&gt;data&lt;/code&gt; 中。如果可用字节数少于 &lt;code&gt;max_bytes&lt;/code&gt; ，该函数将复制所有字节。</target>
        </trans-unit>
        <trans-unit id="26f2456afbfcb0cca11ac1bb8f13fb701750b72c" translate="yes" xml:space="preserve">
          <source>Behaves the same as &lt;a href=&quot;function.strftime&quot;&gt;strftime()&lt;/a&gt; except that the time returned is Greenwich Mean Time (GMT). For example, when run in Eastern Standard Time (GMT -0500), the first line below prints &quot;Dec 31 1998 20:00:00&quot;, while the second prints &quot;Jan 01 1999 01:00:00&quot;.</source>
          <target state="translated">行为与&lt;a href=&quot;function.strftime&quot;&gt;strftime（）&lt;/a&gt;相同，除了返回的时间是格林威治标准时间（GMT）。例如，以东部标准时间（GMT -0500）运行时，下面的第一行打印为&amp;ldquo; Dec 31 1998 20:00:00&amp;rdquo;，而第二行打印为&amp;ldquo; Jan 01 1999 01:00:00&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="2f769df838bb1a22223045a6651a1f02027dfa65" translate="yes" xml:space="preserve">
          <source>Behavior prior to PHP 8.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39770a2cae289dc3b9c8ac2a96c2f99cd086511a" translate="yes" xml:space="preserve">
          <source>Below is an example that illustrates the internal structure of the arrays being generated by the function. We use a simple &lt;code&gt;note&lt;/code&gt; tag embedded inside a &lt;code&gt;para&lt;/code&gt; tag, and then we parse this and print out the structures generated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d7e94e88ff40615fc8af92c1f6c7dfe2cbed2a" translate="yes" xml:space="preserve">
          <source>Below is an example that illustrates the internal structure of the arrays being generated by the function. We use a simple &lt;em&gt;note&lt;/em&gt; tag embedded inside a &lt;em&gt;para&lt;/em&gt; tag, and then we parse this and print out the structures generated:</source>
          <target state="translated">下面的示例说明了由函数生成的数组的内部结构。我们使用一个嵌入在&lt;em&gt;para&lt;/em&gt;标记内的简单&lt;em&gt;note&lt;/em&gt;标记，然后解析它并打印出生成的结构：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e4627504e2611879fb6411719ba154382da2522b" translate="yes" xml:space="preserve">
          <source>Below normal priority</source>
          <target state="translated">低于正常优先级</target>
        </trans-unit>
        <trans-unit id="df2316b26bcbffdbb3fa5e4602bb678d04f7a96d" translate="yes" xml:space="preserve">
          <source>Besides the methods listed here, this class also has an &lt;code&gt;__invoke&lt;/code&gt; method. This is for consistency with other classes that implement &lt;a href=&quot;language.oop5.magic#language.oop5.magic.invoke&quot;&gt;calling magic&lt;/a&gt;, as this method is not used for calling the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414dc71e6c63f0887b0ec9b16099170828799d75" translate="yes" xml:space="preserve">
          <source>Besides the methods listed here, this class also has an &lt;em&gt;__invoke&lt;/em&gt; method. This is for consistency with other classes that implement &lt;a href=&quot;language.oop5.magic#language.oop5.magic.invoke&quot;&gt;calling magic&lt;/a&gt;, as this method is not used for calling the function.</source>
          <target state="translated">除了此处列出的方法之外，此类还具有&lt;em&gt;__invoke&lt;/em&gt;方法。这是为了与实现&lt;a href=&quot;language.oop5.magic#language.oop5.magic.invoke&quot;&gt;调用magic的&lt;/a&gt;其他类保持一致，因为此方法未用于调用函数。</target>
        </trans-unit>
        <trans-unit id="266602dbca3cc5570aa4616fb8035912be0f8cc9" translate="yes" xml:space="preserve">
          <source>Beware of patterns that contain nested indefinite repeats. These can take a long time to run when applied to a string that does not match. Consider the pattern fragment &lt;code&gt;(a+)*&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41821313c26ad3752532088e0a30b10127e31cba" translate="yes" xml:space="preserve">
          <source>Beware of patterns that contain nested indefinite repeats. These can take a long time to run when applied to a string that does not match. Consider the pattern fragment &lt;em&gt;(a+)*&lt;/em&gt;</source>
          <target state="translated">当心包含嵌套的不确定重复的模式。当将它们应用于不匹配的字符串时，它们可能需要很长时间才能运行。考虑模式片段&lt;em&gt;（a +）*&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6a7d116573e9636192a34f0e5848882a5a8729a1" translate="yes" xml:space="preserve">
          <source>Beyond the above advice, note that you can also hook into the serialization and unserialization events on an object using the &lt;a href=&quot;language.oop5.magic#object.sleep&quot;&gt;__sleep()&lt;/a&gt; and &lt;a href=&quot;language.oop5.magic#object.wakeup&quot;&gt;__wakeup()&lt;/a&gt; methods. Using &lt;a href=&quot;language.oop5.magic#object.sleep&quot;&gt;__sleep()&lt;/a&gt; also allows you to only serialize a subset of the object's properties.</source>
          <target state="translated">除了上述建议外，请注意，您还可以使用&lt;a href=&quot;language.oop5.magic#object.sleep&quot;&gt;__sleep（）&lt;/a&gt;和&lt;a href=&quot;language.oop5.magic#object.wakeup&quot;&gt;__wakeup（）&lt;/a&gt;方法来挂接对象的序列化和反序列化事件。使用&lt;a href=&quot;language.oop5.magic#object.sleep&quot;&gt;__sleep（）&lt;/a&gt;还允许您仅序列化对象属性的子集。</target>
        </trans-unit>
        <trans-unit id="2514d12d8068c8b402b7adac2bc9b12b1d380d7d" translate="yes" xml:space="preserve">
          <source>Big5 with Hong Kong extensions, Traditional Chinese.</source>
          <target state="translated">Big5与香港扩展,繁体中文。</target>
        </trans-unit>
        <trans-unit id="66639f7d455dd71faa9147f5d69e5ce885d8bebd" translate="yes" xml:space="preserve">
          <source>Binary</source>
          <target state="translated">Binary</target>
        </trans-unit>
        <trans-unit id="7205f20354da7736920d9b84a6e30124b9e24a96" translate="yes" xml:space="preserve">
          <source>Binary &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; literals are available since PHP 5.4.0.</source>
          <target state="translated">自PHP 5.4.0起可以使用二进制&lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt;文字。</target>
        </trans-unit>
        <trans-unit id="a1954bfbe4523cd5011686c373b6e17de91f0855" translate="yes" xml:space="preserve">
          <source>Binary safe case-insensitive string comparison.</source>
          <target state="translated">二进制安全的大小写敏感的字符串比较。</target>
        </trans-unit>
        <trans-unit id="29829bc8db48714274cb2e445a2c46ff09faeb1f" translate="yes" xml:space="preserve">
          <source>Binary string representation of &lt;code&gt;number&lt;/code&gt;</source>
          <target state="translated">二进制字符串表示 &lt;code&gt;number&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b175735ed3073daec491aedf910138426164a01" translate="yes" xml:space="preserve">
          <source>Bind variables for the parameter markers in the SQL statement that was passed to &lt;a href=&quot;mysqli.prepare&quot;&gt;mysqli_prepare()&lt;/a&gt;.</source>
          <target state="translated">在传递给&lt;a href=&quot;mysqli.prepare&quot;&gt;mysqli_prepare（）&lt;/a&gt;的SQL语句中为参数标记绑定变量。</target>
        </trans-unit>
        <trans-unit id="c7c97cd0d229f7ba63e5e98a2c456af2b6d4539e" translate="yes" xml:space="preserve">
          <source>Binding columns in the result set to PHP variables is an effective way to make the data contained in each row immediately available to your application. The following example demonstrates how PDO allows you to bind and retrieve columns with a variety of options and with intelligent defaults.</source>
          <target state="translated">将结果集中的列绑定到PHP变量中是一种有效的方法,它可以使每行中包含的数据立即在你的应用程序中使用。下面的例子演示了PDO是如何允许你用各种选项和智能默认值来绑定和检索列的。</target>
        </trans-unit>
        <trans-unit id="45fc3f5d66badbb2ea7467997f8da6369c2d2e23" translate="yes" xml:space="preserve">
          <source>Binding more values than specified is not possible; if more keys exist in &lt;code&gt;input_parameters&lt;/code&gt; than in the SQL specified in the &lt;a href=&quot;pdo.prepare&quot;&gt;PDO::prepare()&lt;/a&gt;, then the statement will fail and an error is emitted.</source>
          <target state="translated">绑定的值不能超过指定的值；如果 &lt;code&gt;input_parameters&lt;/code&gt; 中存在的键多于&lt;a href=&quot;pdo.prepare&quot;&gt;PDO :: prepare（）&lt;/a&gt;指定的SQL中的键，则该语句将失败并发出错误。</target>
        </trans-unit>
        <trans-unit id="9a5ae95af964abb301b00f502dd17c440aff2801" translate="yes" xml:space="preserve">
          <source>Binds a PHP variable to a corresponding named or question mark placeholder in the SQL statement that was used to prepare the statement. Unlike &lt;a href=&quot;pdostatement.bindvalue&quot;&gt;PDOStatement::bindValue()&lt;/a&gt;, the variable is bound as a reference and will only be evaluated at the time that &lt;a href=&quot;pdostatement.execute&quot;&gt;PDOStatement::execute()&lt;/a&gt; is called.</source>
          <target state="translated">将PHP变量绑定到用于准备语句的SQL语句中相应的命名或问号占位符。与&lt;a href=&quot;pdostatement.bindvalue&quot;&gt;PDOStatement :: bindValue（）不同&lt;/a&gt;，该变量绑定为引用，并且只会在调用&lt;a href=&quot;pdostatement.execute&quot;&gt;PDOStatement :: execute（）&lt;/a&gt;时进行评估。</target>
        </trans-unit>
        <trans-unit id="0fd90a10de3a02c1d4a7651f87c90316aa4b42e3" translate="yes" xml:space="preserve">
          <source>Binds a parameter to a statement variable.</source>
          <target state="translated">将一个参数绑定到一个语句变量上。</target>
        </trans-unit>
        <trans-unit id="b8b38586af1ee4b44e9fe60bfd74805629a2a4ee" translate="yes" xml:space="preserve">
          <source>Binds a value to a corresponding named or question mark placeholder in the SQL statement that was used to prepare the statement.</source>
          <target state="translated">将一个值绑定到用于编写语句的SQL语句中对应的命名或问号占位符上。</target>
        </trans-unit>
        <trans-unit id="dd6741172297eaebe838098922865a7902259c0d" translate="yes" xml:space="preserve">
          <source>Binds an HTTP server on the specified address and port.</source>
          <target state="translated">在指定的地址和端口上绑定一个HTTP服务器。</target>
        </trans-unit>
        <trans-unit id="342502ffa532fb522624f8b96afa245a3ac904fb" translate="yes" xml:space="preserve">
          <source>Binds columns in the result set to variables.</source>
          <target state="translated">将结果集中的列绑定到变量上。</target>
        </trans-unit>
        <trans-unit id="83a7a3ad889ad4da86f116b68b23fbdf206ef95f" translate="yes" xml:space="preserve">
          <source>Binds per-field weights by name.</source>
          <target state="translated">按名称绑定每场权重。</target>
        </trans-unit>
        <trans-unit id="b024d4c8d01cc81c2e9665796e520eb890bc6f55" translate="yes" xml:space="preserve">
          <source>Binds the name given in &lt;code&gt;address&lt;/code&gt; to the socket described by &lt;code&gt;socket&lt;/code&gt;. This has to be done before a connection is be established using &lt;a href=&quot;function.socket-connect&quot;&gt;socket_connect()&lt;/a&gt; or &lt;a href=&quot;function.socket-listen&quot;&gt;socket_listen()&lt;/a&gt;.</source>
          <target state="translated">将 &lt;code&gt;address&lt;/code&gt; 给定的名称绑定到socket描述的 &lt;code&gt;socket&lt;/code&gt; 。必须在使用&lt;a href=&quot;function.socket-connect&quot;&gt;socket_connect（）&lt;/a&gt;或&lt;a href=&quot;function.socket-listen&quot;&gt;socket_listen（）&lt;/a&gt;建立连接之前完成此操作。</target>
        </trans-unit>
        <trans-unit id="5b7f20bf936b6e7d18605e3f30eb6d0e139a907c" translate="yes" xml:space="preserve">
          <source>Binds the value of a parameter to a statement variable.</source>
          <target state="translated">将一个参数的值绑定到一个语句变量上。</target>
        </trans-unit>
        <trans-unit id="9780b9e1c12559abd6016ff564b7223f035300cd" translate="yes" xml:space="preserve">
          <source>Binds to the LDAP directory with specified RDN and password.</source>
          <target state="translated">用指定的 RDN 和密码绑定到 LDAP 目录。</target>
        </trans-unit>
        <trans-unit id="0c29311da50b8a4caffc8ba9800f66ca2e373b7b" translate="yes" xml:space="preserve">
          <source>Bit mask of &lt;code&gt;EventListener::OPT_*&lt;/code&gt; constants. See &lt;a href=&quot;class.eventlistener#eventlistener.constants&quot;&gt;EventListener constants&lt;/a&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="376f4955d4928d0c1c325d76a4122ffa20cc994d" translate="yes" xml:space="preserve">
          <source>Bit mask of &lt;em&gt;EventListener::OPT_*&lt;/em&gt; constants. See &lt;a href=&quot;class.eventlistener#eventlistener.constants&quot;&gt;EventListener constants&lt;/a&gt; .</source>
          <target state="translated">&lt;em&gt;EventListener :: OPT_ *&lt;/em&gt;常量的位掩码。请参阅&lt;a href=&quot;class.eventlistener#eventlistener.constants&quot;&gt;EventListener常量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a2b84e580259b4bb3421a5aa5860694ab700746f" translate="yes" xml:space="preserve">
          <source>Bit mask of the flags to set. See &lt;a href=&quot;class.splfileobject#splfileobject.constants&quot;&gt;SplFileObject constants&lt;/a&gt; for the available flags.</source>
          <target state="translated">要设置的标志的位掩码。有关可用的标志，请参见&lt;a href=&quot;class.splfileobject#splfileobject.constants&quot;&gt;SplFileObject常量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2bf86ff4d0c973ecae90926c21de45322c20ac6a" translate="yes" xml:space="preserve">
          <source>Bit mask of watcher &lt;a href=&quot;class.ev#ev.constants.watcher-revents&quot;&gt;received events&lt;/a&gt; .</source>
          <target state="translated">观察者的位掩码&lt;a href=&quot;class.ev#ev.constants.watcher-revents&quot;&gt;收到事件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="465ce1a345e8a92de5920141ab5cfb869f2d1bbb" translate="yes" xml:space="preserve">
          <source>Bit masks of (received) events:</source>
          <target state="translated">(接收)事件的位掩码。</target>
        </trans-unit>
        <trans-unit id="d04a675c5c6294079f55e51c9996bd70e53ada14" translate="yes" xml:space="preserve">
          <source>Bit shifting in PHP is arithmetic. Bits shifted off either end are discarded. Left shifts have zeros shifted in on the right while the sign bit is shifted out on the left, meaning the sign of an operand is not preserved. Right shifts have copies of the sign bit shifted in on the left, meaning the sign of an operand is preserved.</source>
          <target state="translated">PHP中的位移位是一种算术。两端移位的位都被丢弃。左移的零在右边移入,而符号位在左边移出,这意味着操作数的符号不被保留。右移的符号位在左边移入,意味着操作数的符号被保留。</target>
        </trans-unit>
        <trans-unit id="f9d42c1a721445d35b81eb7fb1bd7864c79a202b" translate="yes" xml:space="preserve">
          <source>Bit that represents a UNIX entry that is group executable. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d27b10b4264b8b03a303979411593d2fa5d57f" translate="yes" xml:space="preserve">
          <source>Bit that represents a UNIX entry that is group readable. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b66830bc799f07f31eb97f4505270cb622b9062e" translate="yes" xml:space="preserve">
          <source>Bit that represents a UNIX entry that is group writable. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10cf25a411aef052e61b0771392e2519a04235f0" translate="yes" xml:space="preserve">
          <source>Bit that represents a UNIX entry that is owner executable. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6259f69aaad7a7e75eefc08d784c270d4ea1d208" translate="yes" xml:space="preserve">
          <source>Bit that represents a UNIX entry that is owner readable. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40574488f972933e966fcdebf3f72c2f0f95893d" translate="yes" xml:space="preserve">
          <source>Bit that represents a UNIX entry that is owner writable. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac00e643a77863b0855a3f9bafa72019227714fa" translate="yes" xml:space="preserve">
          <source>Bit that represents a UNIX entry that is world executable. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ed27516a3b5128e53685b024b934390b3e763f" translate="yes" xml:space="preserve">
          <source>Bit that represents a UNIX entry that is world readable. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b0ea885b4bbd7afe3beb9dd8856e8809e0b2f1" translate="yes" xml:space="preserve">
          <source>Bit that represents a UNIX entry that is world writable. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a8a1897332a620cb84dce58cc8bce607390020" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a compressed attribute (NTFS only). To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="454567895edbe8b9f1a8fbc4f97fae8ea9090c22" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a device attribute. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63def2253d8f4e98c87266d317817028401f71a6" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a directory attribute (entry is a directory). To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows. See also &lt;a href=&quot;rarentry.isdirectory&quot;&gt;RarEntry::isDirectory()&lt;/a&gt;, which also works with entries that were not added in WinRAR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec38d099b1be0da18310f5c2c6526bc005b668b9" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a hidden attribute. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53ec1b9e7bb7d9e556b0c76556b91d4df9a6519" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a normal file attribute (entry is NOT a directory). To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows. See also &lt;a href=&quot;rarentry.isdirectory&quot;&gt;RarEntry::isDirectory()&lt;/a&gt;, which also works with entries that were not added in WinRAR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb494fa3dddb97e0b0615ad04a7ac9f6d2fa4b81" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a not content indexed attribute (entry is to be indexed). To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83105e7c523a21f6922d9c8853ae10089bccea1b" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a read-only attribute. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80702f5884e7f918a1c72cd962477537d8a73e79" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a reparse point attribute (entry is an NTFS reparse point, e.g. a directory junction or a mount file system). To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9855ada1b6e58dfa4f5a5d07557bd28df020ccd" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a sparse file attribute (file is an NTFS sparse file). To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b87594d2aba1f83209d8e657b8be4a50b43d4cc" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a system attribute. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="802e5cfe52131b57545735eafc89c8e41dba9962" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a temporary attribute. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278c51db32230d64618dc2102e3fbb9c0a1a2c35" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a virtual attribute. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06ed82e4309e7f4132077f34534eeb2f13e2d04" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with an archive attribute. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5c4db83a16afce8050ed78403e841f5df87f89" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with an encrypted attribute (NTFS only). To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01170e70407ce0867e87184f49fb99c486c3ff21" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with an offline attribute (entry is offline and not accessible). To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81a03a63d27793be9f205909a16911708020d7c" translate="yes" xml:space="preserve">
          <source>Bit that represents the UNIX setgid attribute. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0df842b30ae6b69d1c8ee406e84d4dc3e1f5e4" translate="yes" xml:space="preserve">
          <source>Bit that represents the UNIX setuid attribute. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb5e6dca7a225910854ae80cee0fcfaa930ed91" translate="yes" xml:space="preserve">
          <source>Bit that represents the UNIX sticky bit. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a5d7a0ecaf6e070861a98456610f923f5f72e1" translate="yes" xml:space="preserve">
          <source>Bitfield of the modifiers to get.</source>
          <target state="translated">位场的修饰符获得。</target>
        </trans-unit>
        <trans-unit id="54e80b111826390ced088b34a3b01e27f1e9ae9a" translate="yes" xml:space="preserve">
          <source>Bitmask consisting of &lt;strong&gt;&lt;code&gt;JSON_FORCE_OBJECT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_HEX_QUOT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_HEX_TAG&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_HEX_AMP&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_HEX_APOS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_INVALID_UTF8_IGNORE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_INVALID_UTF8_SUBSTITUTE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_NUMERIC_CHECK&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_PARTIAL_OUTPUT_ON_ERROR&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_PRESERVE_ZERO_FRACTION&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_PRETTY_PRINT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_UNESCAPED_LINE_TERMINATORS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_UNESCAPED_SLASHES&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_UNESCAPED_UNICODE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_THROW_ON_ERROR&lt;/code&gt;&lt;/strong&gt;. The behaviour of these constants is described on the &lt;a href=&quot;https://www.php.net/manual/en/json.constants.php&quot;&gt;JSON constants&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5bbd3678c09548204d1d8fa27df4d3a635aea0" translate="yes" xml:space="preserve">
          <source>Bitmask consisting of &lt;strong&gt;&lt;code&gt;JSON_HEX_QUOT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_HEX_TAG&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_HEX_AMP&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_HEX_APOS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_NUMERIC_CHECK&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_PRETTY_PRINT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_UNESCAPED_SLASHES&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_FORCE_OBJECT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_PRESERVE_ZERO_FRACTION&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_UNESCAPED_UNICODE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_PARTIAL_OUTPUT_ON_ERROR&lt;/code&gt;&lt;/strong&gt;. The behaviour of these constants is described on the &lt;a href=&quot;https://secure.php.net/manual/en/json.constants.php&quot;&gt;JSON constants&lt;/a&gt; page.</source>
          <target state="translated">位掩码包括&lt;strong&gt; &lt;code&gt;JSON_HEX_QUOT&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;JSON_HEX_TAG&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;JSON_HEX_AMP&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;JSON_HEX_APOS&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;JSON_NUMERIC_CHECK&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;JSON_PRETTY_PRINT&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;JSON_UNESCAPED_SLASHES&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;JSON_FORCE_OBJECT&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;JSON_PRESERVE_ZERO_FRACTION&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;JSON_UNESCAPED_UNICODE&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;JSON_PARTIAL_OUTPUT_ON_ERROR&lt;/code&gt; &lt;/strong&gt;。这些常量的行为在&lt;a href=&quot;https://secure.php.net/manual/en/json.constants.php&quot;&gt;JSON常量&lt;/a&gt;页面上进行了描述。</target>
        </trans-unit>
        <trans-unit id="d65751b8d3b34f9ddea06c2c52a371976692e320" translate="yes" xml:space="preserve">
          <source>Bitmask consisting of &lt;strong&gt;&lt;code&gt;ZipArchive::FL_ENC_GUESS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ZipArchive::FL_ENC_UTF_8&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ZipArchive::FL_ENC_CP437&lt;/code&gt;&lt;/strong&gt;. The behaviour of these constants is described on the &lt;a href=&quot;https://www.php.net/manual/en/zip.constants.php&quot;&gt;ZIP constants&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97610679f6d15a90d39ac21b00281e473872723c" translate="yes" xml:space="preserve">
          <source>Bitmask consisting of &lt;strong&gt;&lt;code&gt;ZipArchive::FL_OVERWRITE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ZipArchive::FL_ENC_GUESS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ZipArchive::FL_ENC_UTF_8&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ZipArchive::FL_ENC_CP437&lt;/code&gt;&lt;/strong&gt;. The behaviour of these constants is described on the &lt;a href=&quot;https://www.php.net/manual/en/zip.constants.php&quot;&gt;ZIP constants&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f6fa82d9aa08f28480f20ed3a0b94768c86762" translate="yes" xml:space="preserve">
          <source>Bitmask field which may be set to any combination of connection flags. Currently the select of connection flags is limited to &lt;strong&gt;&lt;code&gt;STREAM_CLIENT_CONNECT&lt;/code&gt;&lt;/strong&gt; (default), &lt;strong&gt;&lt;code&gt;STREAM_CLIENT_ASYNC_CONNECT&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;STREAM_CLIENT_PERSISTENT&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">位掩码字段，可以将其设置为连接标志的任何组合。当前，连接标志的选择仅限于&lt;strong&gt; &lt;code&gt;STREAM_CLIENT_CONNECT&lt;/code&gt; &lt;/strong&gt;（默认），&lt;strong&gt; &lt;code&gt;STREAM_CLIENT_ASYNC_CONNECT&lt;/code&gt; &lt;/strong&gt;和&lt;strong&gt; &lt;code&gt;STREAM_CLIENT_PERSISTENT&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="e9108091c6a4997c04b64d8f9229515c2c8b4a44" translate="yes" xml:space="preserve">
          <source>Bitmask of &lt;a href=&quot;https://www.php.net/manual/en/outcontrol.constants.php&quot;&gt;&lt;strong&gt;&lt;code&gt;PHP_OUTPUT_HANDLER_*&lt;/code&gt;&lt;/strong&gt; constants&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f5e68cb9e77eab0d45d44c1122fa9cc7541dee9" translate="yes" xml:space="preserve">
          <source>Bitmask of &lt;strong&gt;&lt;code&gt;CURLPROTO_*&lt;/code&gt;&lt;/strong&gt; values. If used, this bitmask limits what protocols libcurl may use in a transfer that it follows to in a redirect when &lt;strong&gt;&lt;code&gt;CURLOPT_FOLLOWLOCATION&lt;/code&gt;&lt;/strong&gt; is enabled. This allows you to limit specific transfers to only be allowed to use a subset of protocols in redirections. By default libcurl will allow all protocols except for FILE and SCP. This is a difference compared to pre-7.19.4 versions which unconditionally would follow to all protocols supported. See also &lt;strong&gt;&lt;code&gt;CURLOPT_PROTOCOLS&lt;/code&gt;&lt;/strong&gt; for protocol constant values.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;CURLPROTO_*&lt;/code&gt; &lt;/strong&gt;值的位掩码。如果启用了此位掩码，则它会限制libcurl在&lt;strong&gt; &lt;code&gt;CURLOPT_FOLLOWLOCATION&lt;/code&gt; &lt;/strong&gt;时在重定向中遵循的传输中可以使用的协议。这允许您将特定的传输限制为仅允许在重定向中使用协议的子集。默认情况下，libcurl将允许除FILE和SCP之外的所有协议。与7.19.4之前的版本相比，这是有区别的，后者无条件遵循所有支持的协议。另请参见&lt;strong&gt; &lt;code&gt;CURLOPT_PROTOCOLS&lt;/code&gt; &lt;/strong&gt;以获取协议常量值。</target>
        </trans-unit>
        <trans-unit id="e3e85a97faf368f1ec6dd750d4dafdcd5161da54" translate="yes" xml:space="preserve">
          <source>Bitmask of &lt;strong&gt;&lt;code&gt;CURLPROTO_*&lt;/code&gt;&lt;/strong&gt; values. If used, this bitmask limits what protocols libcurl may use in the transfer. This allows you to have a libcurl built to support a wide range of protocols but still limit specific transfers to only be allowed to use a subset of them. By default libcurl will accept all protocols it supports. See also &lt;strong&gt;&lt;code&gt;CURLOPT_REDIR_PROTOCOLS&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;CURLPROTO_*&lt;/code&gt; &lt;/strong&gt;值的位掩码。如果使用此位掩码，则它将限制libcurl可以在传输中使用的协议。这使您可以构建一个libcurl以支持多种协议，但仍将特定的传输限制为仅允许使用它们的子集。默认情况下，libcurl将接受它支持的所有协议。另请参见&lt;strong&gt; &lt;code&gt;CURLOPT_REDIR_PROTOCOLS&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="cb0f55235110490c705393491bc2143c003a3bf8" translate="yes" xml:space="preserve">
          <source>Bitmask of &lt;strong&gt;&lt;code&gt;Event::READ&lt;/code&gt;&lt;/strong&gt; , &lt;strong&gt;&lt;code&gt;Event::WRITE&lt;/code&gt;&lt;/strong&gt; , or both.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;Event::READ&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;Event::WRITE&lt;/code&gt; &lt;/strong&gt;或两者的位掩码。</target>
        </trans-unit>
        <trans-unit id="b449b94f868e3ea2bc5740fe230b6d510187457d" translate="yes" xml:space="preserve">
          <source>Bitmask of &lt;strong&gt;&lt;code&gt;JSON_BIGINT_AS_STRING&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_INVALID_UTF8_IGNORE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_INVALID_UTF8_SUBSTITUTE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_OBJECT_AS_ARRAY&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_THROW_ON_ERROR&lt;/code&gt;&lt;/strong&gt;. The behaviour of these constants is described on the &lt;a href=&quot;https://www.php.net/manual/en/json.constants.php&quot;&gt;JSON constants&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfed8cddc7f30e823296e3aa0d5ba8b34778b2fa" translate="yes" xml:space="preserve">
          <source>Bitmask of &lt;strong&gt;&lt;code&gt;PHP_OUTPUT_HANDLER_*&lt;/code&gt;&lt;/strong&gt; constants.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;PHP_OUTPUT_HANDLER_*&lt;/code&gt; &lt;/strong&gt;常量的位掩码。</target>
        </trans-unit>
        <trans-unit id="d41be63640dd140c5997c3f35ebafa787271f37f" translate="yes" xml:space="preserve">
          <source>Bitmask of JSON decode options. Currently there are two supported options. The first is &lt;strong&gt;&lt;code&gt;JSON_BIGINT_AS_STRING&lt;/code&gt;&lt;/strong&gt; that allows casting big integers to string instead of floats which is the default. The second option is &lt;strong&gt;&lt;code&gt;JSON_OBJECT_AS_ARRAY&lt;/code&gt;&lt;/strong&gt; that has the same effect as setting &lt;code&gt;assoc&lt;/code&gt; to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">JSON解码选项的位掩码。当前有两个受支持的选项。第一个是&lt;strong&gt; &lt;code&gt;JSON_BIGINT_AS_STRING&lt;/code&gt; &lt;/strong&gt;，它允许将大整数强制转换为字符串，而不是默认的浮点数。第二个选项是&lt;strong&gt; &lt;code&gt;JSON_OBJECT_AS_ARRAY&lt;/code&gt; &lt;/strong&gt;，它和设置同样的效果 &lt;code&gt;assoc&lt;/code&gt; 命令到&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="bcde88a827a312a8146d4870b13dba0f0fe03980" translate="yes" xml:space="preserve">
          <source>Bitmask of flags.</source>
          <target state="translated">旗帜的位掩码。</target>
        </trans-unit>
        <trans-unit id="f60afe861741a59dda520e80a55b24fc65d49a4b" translate="yes" xml:space="preserve">
          <source>Bitmask of required features. See &lt;a href=&quot;class.eventconfig#eventconfig.constants&quot;&gt; &lt;code&gt;EventConfig::FEATURE_*&lt;/code&gt; constants&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e72a5ec76976e9ec665f70875a442b9317f423b4" translate="yes" xml:space="preserve">
          <source>Bitmask of required features. See &lt;a href=&quot;class.eventconfig#eventconfig.constants&quot;&gt; &lt;em&gt;EventConfig::FEATURE_*&lt;/em&gt; constants&lt;/a&gt;</source>
          <target state="translated">所需功能的位掩码。参见&lt;a href=&quot;class.eventconfig#eventconfig.constants&quot;&gt;&lt;em&gt;EventConfig :: FEATURE_ *&lt;/em&gt;&lt;/a&gt;常量 &lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8bfd9f1474b921bceb8ee4a42fc8b5850a4a2f43" translate="yes" xml:space="preserve">
          <source>Bitmask of the flags to set.</source>
          <target state="translated">要设置的标志的位掩码。</target>
        </trans-unit>
        <trans-unit id="2061d9d51452c0e4a7afdee747a574e988225c9f" translate="yes" xml:space="preserve">
          <source>Bits that are set in &lt;var&gt;$a&lt;/var&gt; are not set, and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d956dc0f2d8b00018a4206c456ad781ece35703" translate="yes" xml:space="preserve">
          <source>Bits that are set in &lt;var&gt;$a&lt;/var&gt; or &lt;var&gt;$b&lt;/var&gt; but not both are set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1d989a1902c2b90386c0ff0bffb941fc5df9c9" translate="yes" xml:space="preserve">
          <source>Bits that are set in &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; are not set, and vice versa.</source>
          <target state="translated">&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; 中设置的位未设置，反之亦然。</target>
        </trans-unit>
        <trans-unit id="2ca4636e90f871d56d49278846817d4b25798edf" translate="yes" xml:space="preserve">
          <source>Bits that are set in &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; or &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; but not both are set.</source>
          <target state="translated">&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; 或 &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; 中设置的位，但未同时设置。</target>
        </trans-unit>
        <trans-unit id="7b6db3342274daf14ccbaf8efac1bf8bad1a0781" translate="yes" xml:space="preserve">
          <source>Bits that are set in both &lt;var&gt;$a&lt;/var&gt; and &lt;var&gt;$b&lt;/var&gt; are set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d94b3afb117f66a82b2f4134e85ccd6584028b" translate="yes" xml:space="preserve">
          <source>Bits that are set in both &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; and &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; are set.</source>
          <target state="translated">&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; 和 &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; 都设置的位被置位。</target>
        </trans-unit>
        <trans-unit id="e9d6845ae0f540efe8643293925269b45c45c9e6" translate="yes" xml:space="preserve">
          <source>Bits that are set in either &lt;var&gt;$a&lt;/var&gt; or &lt;var&gt;$b&lt;/var&gt; are set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0ea6e7bed56101b1bf22d52f268c2159eb010a" translate="yes" xml:space="preserve">
          <source>Bits that are set in either &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; or &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; are set.</source>
          <target state="translated">&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; 或 &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; 中设置的位被置位。</target>
        </trans-unit>
        <trans-unit id="55bcce66fdecceeb947a789cd32be9b93c7eca65" translate="yes" xml:space="preserve">
          <source>Bitwise And</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7383ea9e5126e57fa3493be6ac21bff8595a9216" translate="yes" xml:space="preserve">
          <source>Bitwise Assignment Operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2405ca81fd65c0322042b11819b72aaf432508" translate="yes" xml:space="preserve">
          <source>Bitwise OR of the &lt;a href=&quot;https://secure.php.net/manual/en/runkit.constants.php&quot;&gt;&lt;em&gt;RUNKIT_IMPORT_*&lt;/em&gt; family of constants&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://secure.php.net/manual/en/runkit.constants.php&quot;&gt;常量&lt;/a&gt;&lt;em&gt;RUNKIT_IMPORT_ *&lt;/em&gt;系列的按位或。</target>
        </trans-unit>
        <trans-unit id="7154f3fdbd86469a2392e501023db20eed80da0d" translate="yes" xml:space="preserve">
          <source>Bitwise OR of the &lt;a href=&quot;https://www.php.net/manual/en/runkit7.constants.php&quot;&gt;&lt;code&gt;RUNKIT7_IMPORT_*&lt;/code&gt; family of constants&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06f824cef5caab026aebdaccc85d665d4b620db" translate="yes" xml:space="preserve">
          <source>Bitwise Operators</source>
          <target state="translated">位元运算符</target>
        </trans-unit>
        <trans-unit id="2e1e72417f6d1d5bb871a3d9c377c1ced9cb59b2" translate="yes" xml:space="preserve">
          <source>Bitwise Operators &amp;rarr;</source>
          <target state="translated">按位运算符&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="5b0861023775ab83f9aeb2c2b3492420398fae85" translate="yes" xml:space="preserve">
          <source>Bitwise Or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21005996604dd00a0b014e060d1228d4a285646b" translate="yes" xml:space="preserve">
          <source>Bitwise Xor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a6974fecf3c787a78bec79ec9eb88cfe0205c2" translate="yes" xml:space="preserve">
          <source>Bitwise operators allow evaluation and manipulation of specific bits within an integer.</source>
          <target state="translated">位智运算符允许对整数中的特定位进行评估和操作。</target>
        </trans-unit>
        <trans-unit id="f5e2ee6051b4bf4131d3f97441f880feec7b4508" translate="yes" xml:space="preserve">
          <source>Blends the fill color with each pixel in the image.</source>
          <target state="translated">将填充颜色与图像中的每个像素混合。</target>
        </trans-unit>
        <trans-unit id="46e1d39d7877c858ec188aa048154587a129261f" translate="yes" xml:space="preserve">
          <source>Block at most one(wait, but don't loop)</source>
          <target state="translated">最多阻止一个(等待,但不要循环)。</target>
        </trans-unit>
        <trans-unit id="85974dcd29326f335ee93a23f79e37a99a005713" translate="yes" xml:space="preserve">
          <source>Block of binary audio data in the &lt;code&gt;format&lt;/code&gt; and &lt;code&gt;freq&lt;/code&gt; specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5500713d4da12f5a4da15115ea222c32cfb07c62" translate="yes" xml:space="preserve">
          <source>Block the process for the given number of seconds.</source>
          <target state="translated">在给定的秒数内阻止该进程。</target>
        </trans-unit>
        <trans-unit id="4a637713db8ef9042d5487dc4abb649d9a9da695" translate="yes" xml:space="preserve">
          <source>Block until a new searcher is opened and registered as the main query searcher, making the changes visible.</source>
          <target state="translated">阻止直到打开一个新的搜索器,并注册为主查询搜索器,使更改可见。</target>
        </trans-unit>
        <trans-unit id="03e4760f8e9a9baa4718c848933cf1784961831b" translate="yes" xml:space="preserve">
          <source>Block until at least &lt;code&gt;len&lt;/code&gt; are received. However, if a signal is caught or the remote host disconnects, the function may return less data.</source>
          <target state="translated">阻止直到至少收到 &lt;code&gt;len&lt;/code&gt; 。但是，如果捕获到信号或远程主机断开连接，则该功能可能返回较少的数据。</target>
        </trans-unit>
        <trans-unit id="2ecb643710e2492ef5bb16f408ad6e1bed65b5ac" translate="yes" xml:space="preserve">
          <source>Blocks packets arriving from a specific source to a specific multicast group, which must have been previously joined. (added in PHP 5.4)</source>
          <target state="translated">阻止从特定源头到达特定组播组的数据包,该组播组必须已经加入。(在 PHP 5.4 中添加)</target>
        </trans-unit>
        <trans-unit id="7f8382ec47eb8c09ed09a4bb72874a406c393c0f" translate="yes" xml:space="preserve">
          <source>Blocks until there is activity on any of the curl_multi connections.</source>
          <target state="translated">阻止任何一个 curl_multi 连接上的活动。</target>
        </trans-unit>
        <trans-unit id="3aa08fdaf2db1541666fbf7ffbc49f8713d92894" translate="yes" xml:space="preserve">
          <source>Blur an image, then display to the browser.</source>
          <target state="translated">模糊图像,然后显示在浏览器上。</target>
        </trans-unit>
        <trans-unit id="79688542adfa2ae35ecdb7fac4e0b9776a6bf449" translate="yes" xml:space="preserve">
          <source>Blur radius</source>
          <target state="translated">模糊半径</target>
        </trans-unit>
        <trans-unit id="d7807285d454c5eef5d53a68b62068df2fce7f59" translate="yes" xml:space="preserve">
          <source>Blurs an image. We convolve the image with a Gaussian operator of the given radius and standard deviation (sigma). For reasonable results, the radius should be larger than sigma. Use a radius of 0 and selects a suitable radius for you.</source>
          <target state="translated">模糊图像。我们用给定半径和标准差(sigma)的高斯算子对图像进行卷积。为了得到合理的结果,半径应该大于sigma。使用半径为0,选择一个适合你的半径。</target>
        </trans-unit>
        <trans-unit id="89a17bc86bdbf48525c60a44aba28803628ee7e4" translate="yes" xml:space="preserve">
          <source>Body transfer encoding</source>
          <target state="translated">身体转移编码</target>
        </trans-unit>
        <trans-unit id="5c6ec93fb49ff02d92cff3563fb57223953172fe" translate="yes" xml:space="preserve">
          <source>Bool flag</source>
          <target state="translated">Bool标志</target>
        </trans-unit>
        <trans-unit id="b76ff4906f33c2dd97ddd929b9662ba8cac6174c" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="translated">Boolean</target>
        </trans-unit>
        <trans-unit id="e6f8781dbbf397762ef84d1e6d1e4300fdba1702" translate="yes" xml:space="preserve">
          <source>Boolean flag to disable recursive committing of directories in the &lt;code&gt;targets&lt;/code&gt; array. Default is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c77143d08e2f6b40337a45e9eb20a6acfd5a2c" translate="yes" xml:space="preserve">
          <source>Boolean is returned as &quot;t&quot; or &quot;f&quot;. All other types, including arrays are returned as strings formatted in the same default PostgreSQL manner that you would see in the &lt;strong&gt;psql&lt;/strong&gt; program. Database &lt;code&gt;NULL&lt;/code&gt; values are returned as &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba5b1e2218c2218573b77c1bccefe60fabea2bc" translate="yes" xml:space="preserve">
          <source>Boolean is returned as &quot;t&quot; or &quot;f&quot;. All other types, including arrays are returned as strings formatted in the same default PostgreSQL manner that you would see in the &lt;strong&gt;psql&lt;/strong&gt; program. Database &lt;em&gt;NULL&lt;/em&gt; values are returned as &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">布尔值返回为&amp;ldquo; t&amp;rdquo;或&amp;ldquo; f&amp;rdquo;。所有其他类型（包括数组）均以字符串形式返回，该字符串的格式与您在&lt;strong&gt;psql&lt;/strong&gt;程序中看到的默认PostgreSQL方式相同。数据库&lt;em&gt;NULL&lt;/em&gt;值作为&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;返回。</target>
        </trans-unit>
        <trans-unit id="2df7e7998734b5f2011629e9bdacd772d76c47ef" translate="yes" xml:space="preserve">
          <source>Boolean value to set the XML declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0786cdff946e6084c50bb7df6cacd8ed965599fa" translate="yes" xml:space="preserve">
          <source>Booleans</source>
          <target state="translated">Booleans</target>
        </trans-unit>
        <trans-unit id="5168c0e8edad4a7175363d16e1be9abd28a846cb" translate="yes" xml:space="preserve">
          <source>Booleans &amp;rarr;</source>
          <target state="translated">布尔值&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="ea3cdd8a41310d163cc1e6c36d42fb14776a29f7" translate="yes" xml:space="preserve">
          <source>Bools are cast to ints, too, i.e. the key &lt;code&gt;true&lt;/code&gt; will actually be stored under &lt;code&gt;1&lt;/code&gt; and the key &lt;code&gt;false&lt;/code&gt; under &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4acaedf5d7eec7fd32e95d56c72311b17a769d5" translate="yes" xml:space="preserve">
          <source>Boost value. Boosts documents with matching terms.</source>
          <target state="translated">提升价值。提升具有匹配术语的文档。</target>
        </trans-unit>
        <trans-unit id="4495e57609a130e143b82486b3480915a1f64062" translate="yes" xml:space="preserve">
          <source>Bootstrap is a mechanism used to do some initial config before a Application run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7893c77d507bcbbf77975ce0f6b30a2f2cf373c0" translate="yes" xml:space="preserve">
          <source>Bootstrap is a mechanism used to do some intial config before a Application run.</source>
          <target state="translated">Bootstrap是一种机制,用于在Application运行前做一些初始配置。</target>
        </trans-unit>
        <trans-unit id="f208ff04980c91ad5d5b79edf01f26e5a704e573" translate="yes" xml:space="preserve">
          <source>Border height</source>
          <target state="translated">边框高度</target>
        </trans-unit>
        <trans-unit id="eccc4059e13fc7e1fce985c7deaab3ca407191f9" translate="yes" xml:space="preserve">
          <source>Border width</source>
          <target state="translated">边框宽度</target>
        </trans-unit>
        <trans-unit id="14f10d51bc18c29e2c307fe416bb95c845e0dd11" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;functions.arguments#functions.variable-arg-list&quot;&gt;variable number of arguments&lt;/a&gt; and &lt;a href=&quot;functions.arguments#functions.arguments.default&quot;&gt;default arguments&lt;/a&gt; are supported in functions. See also the function references for &lt;a href=&quot;function.func-num-args&quot;&gt;func_num_args()&lt;/a&gt;, &lt;a href=&quot;function.func-get-arg&quot;&gt;func_get_arg()&lt;/a&gt;, and &lt;a href=&quot;function.func-get-args&quot;&gt;func_get_args()&lt;/a&gt; for more information.</source>
          <target state="translated">这两种&lt;a href=&quot;functions.arguments#functions.variable-arg-list&quot;&gt;不同的参数个数&lt;/a&gt;和&lt;a href=&quot;functions.arguments#functions.arguments.default&quot;&gt;缺省参数&lt;/a&gt;的功能都支持。有关更多信息，另请参见&lt;a href=&quot;function.func-num-args&quot;&gt;func_num_args（）&lt;/a&gt;，&lt;a href=&quot;function.func-get-arg&quot;&gt;func_get_arg（）&lt;/a&gt;和&lt;a href=&quot;function.func-get-args&quot;&gt;func_get_args（）&lt;/a&gt;的函数参考。</target>
        </trans-unit>
        <trans-unit id="52086faa34380c792cff47e63c67d87596c31b76" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;source&lt;/code&gt; and &lt;code&gt;dest&lt;/code&gt; may now be URLs if the &quot;fopen wrappers&quot; have been enabled. See &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt; for more details.</source>
          <target state="translated">这两个 &lt;code&gt;source&lt;/code&gt; 和 &lt;code&gt;dest&lt;/code&gt; 如果&amp;ldquo;fopen封装&amp;rdquo;已经被激活，现在可能网址。有关更多详细信息，请参见&lt;a href=&quot;function.fopen&quot;&gt;fopen（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="047dda88cece1a79c34d2017973e651282fc5a1d" translate="yes" xml:space="preserve">
          <source>Both &lt;strong&gt;&lt;code&gt;SORT_STRING&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;SORT_REGULAR&lt;/code&gt;&lt;/strong&gt; are case sensitive, strings starting with a capital letter will come before strings starting with a lowercase letter.</source>
          <target state="translated">无论&lt;strong&gt; &lt;code&gt;SORT_STRING&lt;/code&gt; &lt;/strong&gt;和&lt;strong&gt; &lt;code&gt;SORT_REGULAR&lt;/code&gt; &lt;/strong&gt;是大小写敏感的，以大写字母开头会开始以小写字母串前串。</target>
        </trans-unit>
        <trans-unit id="d3f3a2e38de7790ec52c36cda52c18b7f37571c9" translate="yes" xml:space="preserve">
          <source>Both anonymous functions and arrow functions are implemented using the &lt;a href=&quot;class.closure&quot;&gt;Closure&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b793a11772af76deea9e8818870f1ad6635eda" translate="yes" xml:space="preserve">
          <source>Both arguments must be of the same length to be compared successfully. When arguments of differing length are supplied, &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; is returned immediately and the length of the known string may be leaked in case of a timing attack.</source>
          <target state="translated">两个参数必须具有相同的长度才能成功进行比较。当提供不同长度的参数时，&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;将立即返回，并且在出现定时攻击的情况下，已知字符串的长度可能会泄漏。</target>
        </trans-unit>
        <trans-unit id="9ee4be43cd002f744e5a1f386b10b1f667508ecf" translate="yes" xml:space="preserve">
          <source>Both arguments must be of the same length to be compared successfully. When arguments of differing length are supplied, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; is returned immediately and the length of the known string may be leaked in case of a timing attack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eddc7b1c83f812352aad9d5db43cf15c249b776" translate="yes" xml:space="preserve">
          <source>Both files (&lt;code&gt;file&lt;/code&gt; and &lt;code&gt;patch&lt;/code&gt;) will be loaded into memory so ensure that your memory_limit is set high enough.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6881d618af44a1a08c12647b0827f958ac15a08" translate="yes" xml:space="preserve">
          <source>Both files will be loaded into memory so ensure that your memory_limit is set high enough.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148b9c2ac363448df45861325bd9c87ddd9905ed" translate="yes" xml:space="preserve">
          <source>Both operands and the result for the &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; operators are always treated as integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465a2fb93ebf06813e906fb6b9f0a200e7691d08" translate="yes" xml:space="preserve">
          <source>Both operands and the result for the &lt;em&gt;&amp;lt;&amp;lt;&lt;/em&gt; and &lt;em&gt;&amp;gt;&amp;gt;&lt;/em&gt; operators are always treated as integers.</source>
          <target state="translated">操作数和&lt;em&gt;&amp;lt;&amp;lt;&lt;/em&gt;和&lt;em&gt;&amp;gt;&amp;gt;&lt;/em&gt;运算符的结果始终被视为整数。</target>
        </trans-unit>
        <trans-unit id="d3c42a84d70c069c05916c29fb515d7e9d5a8f71" translate="yes" xml:space="preserve">
          <source>Both square brackets and curly braces can be used interchangeably for accessing array elements (e.g. &lt;code&gt;$array[42]&lt;/code&gt; and &lt;code&gt;$array{42}&lt;/code&gt; will both do the same thing in the example above).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d172067189f7539a928ee45cf7ac67f8bf26054" translate="yes" xml:space="preserve">
          <source>Both square brackets and curly braces can be used interchangeably for accessing array elements (e.g. &lt;em&gt;$array[42]&lt;/em&gt; and &lt;em&gt;$array{42}&lt;/em&gt; will both do the same thing in the example above).</source>
          <target state="translated">方括号和花括号都可以互换地用于访问数组元素（例如，在上面的示例中，&lt;em&gt;$ array [42]&lt;/em&gt;和&lt;em&gt;$ array {42}&lt;/em&gt;都将执行相同的操作）。</target>
        </trans-unit>
        <trans-unit id="9ce58430f155187346fbef38f31e900533074c41" translate="yes" xml:space="preserve">
          <source>Bottom left corner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7ed5d75aa0cc857e2d6f17cd59eb136c61f13f" translate="yes" xml:space="preserve">
          <source>Bottom right corner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cde617e452bcf70453ceb228fbdfd8ae820962a" translate="yes" xml:space="preserve">
          <source>Bottom right x coordinate.</source>
          <target state="translated">右下角X坐标。</target>
        </trans-unit>
        <trans-unit id="f57d57586cefac38eb286dc1f19e78c5cc329053" translate="yes" xml:space="preserve">
          <source>Bottom right y coordinate.</source>
          <target state="translated">右下角y坐标。</target>
        </trans-unit>
        <trans-unit id="327cb3f57887d974b9e84e7ad6cd3f1cb560b545" translate="yes" xml:space="preserve">
          <source>Bracket style delimiters do not need to be escaped when they are used as meta characters within the pattern, but as with other delimiters they must be escaped when they are used as literal characters.</source>
          <target state="translated">当在模式中作为元字符使用时,括号样式的定界符不需要转义,但与其他定界符一样,当它们作为文字字符使用时,必须转义。</target>
        </trans-unit>
        <trans-unit id="18b4dce48094c7dd485e28f03e6b95be5421ef4e" translate="yes" xml:space="preserve">
          <source>Breaks this node into two nodes at the specified &lt;code&gt;offset&lt;/code&gt;, keeping both in the tree as siblings.</source>
          <target state="translated">以指定的 &lt;code&gt;offset&lt;/code&gt; 将此节点分为两个节点，并将两个节点都保留在同级树中。</target>
        </trans-unit>
        <trans-unit id="e8b19c1c9e8e112a2863254cb6122a231d27444d" translate="yes" xml:space="preserve">
          <source>Broadcast to all Threads blocking on a call to &lt;a href=&quot;cond.wait&quot;&gt;Cond::wait()&lt;/a&gt;.</source>
          <target state="translated">广播到所有对&lt;a href=&quot;cond.wait&quot;&gt;Cond :: wait（）&lt;/a&gt;的调用阻塞的线程。</target>
        </trans-unit>
        <trans-unit id="4fe2b2d795f3f2f777c42a2cf0b7926852276d30" translate="yes" xml:space="preserve">
          <source>Buffer (class)</source>
          <target state="translated">缓冲区</target>
        </trans-unit>
        <trans-unit id="4e629f4bce0e11cebfc66d3ee51c9da3272876a9" translate="yes" xml:space="preserve">
          <source>Buffer::__construct</source>
          <target state="translated">Buffer::__construct</target>
        </trans-unit>
        <trans-unit id="b8a432d4b3074b504525ed57c1bbb7c3adf831ac" translate="yes" xml:space="preserve">
          <source>Buffer::add</source>
          <target state="translated">Buffer::add</target>
        </trans-unit>
        <trans-unit id="fb88467614c3b6c171e82d4529eadd21f9bfb672" translate="yes" xml:space="preserve">
          <source>Buffer::addBuffer</source>
          <target state="translated">Buffer::addBuffer</target>
        </trans-unit>
        <trans-unit id="b9874c412003c7050572e7c9374da6a7edf5e000" translate="yes" xml:space="preserve">
          <source>Buffer::appendFrom</source>
          <target state="translated">Buffer::appendFrom</target>
        </trans-unit>
        <trans-unit id="39f401378e1124847461455ed3e3ff2945ab235b" translate="yes" xml:space="preserve">
          <source>Buffer::copyout</source>
          <target state="translated">Buffer::copyout</target>
        </trans-unit>
        <trans-unit id="ce74dbc09caffe5e978f225c7eec69a3e278ebd0" translate="yes" xml:space="preserve">
          <source>Buffer::drain</source>
          <target state="translated">Buffer::drain</target>
        </trans-unit>
        <trans-unit id="84a1ae103ad93980bda63cc8beb01d6476d653d5" translate="yes" xml:space="preserve">
          <source>Buffer::enableLocking</source>
          <target state="translated">Buffer::enableLocking</target>
        </trans-unit>
        <trans-unit id="902d3649bd383026d3f4934940e00981dd0e2a1f" translate="yes" xml:space="preserve">
          <source>Buffer::expand</source>
          <target state="translated">Buffer::expand</target>
        </trans-unit>
        <trans-unit id="fef38a0fe25cda33f51bfc01aa9b27ed06078fc9" translate="yes" xml:space="preserve">
          <source>Buffer::freeze</source>
          <target state="translated">Buffer::freeze</target>
        </trans-unit>
        <trans-unit id="01d12ac127c1b9e5838d07d8af3d1cc1fc49a344" translate="yes" xml:space="preserve">
          <source>Buffer::lock</source>
          <target state="translated">Buffer::lock</target>
        </trans-unit>
        <trans-unit id="1201a7fc7af48631c51b8ef869a7386a1d20ad4f" translate="yes" xml:space="preserve">
          <source>Buffer::prepend</source>
          <target state="translated">Buffer::prepend</target>
        </trans-unit>
        <trans-unit id="f1b6411719b2406d8706c150f1dcceed1b54ac63" translate="yes" xml:space="preserve">
          <source>Buffer::prependBuffer</source>
          <target state="translated">Buffer::prependBuffer</target>
        </trans-unit>
        <trans-unit id="10f43cf704916736a171ed955fc1c78928aba766" translate="yes" xml:space="preserve">
          <source>Buffer::pullup</source>
          <target state="translated">Buffer::pullup</target>
        </trans-unit>
        <trans-unit id="d2aea6a1264bce311f27bf8d72948db3608b28e7" translate="yes" xml:space="preserve">
          <source>Buffer::read</source>
          <target state="translated">Buffer::read</target>
        </trans-unit>
        <trans-unit id="12d7997ec44348192f9e1838f175acb5c50db847" translate="yes" xml:space="preserve">
          <source>Buffer::readFrom</source>
          <target state="translated">Buffer::readFrom</target>
        </trans-unit>
        <trans-unit id="2b982aaa6731d373b7cdc7c5466218121d29cd26" translate="yes" xml:space="preserve">
          <source>Buffer::readLine</source>
          <target state="translated">Buffer::readLine</target>
        </trans-unit>
        <trans-unit id="60508826b1f7ab07646bf8452d2d6790ef1bc267" translate="yes" xml:space="preserve">
          <source>Buffer::search</source>
          <target state="translated">Buffer::search</target>
        </trans-unit>
        <trans-unit id="8885d0a558826a03adebf74e988faf7275e0bdf4" translate="yes" xml:space="preserve">
          <source>Buffer::searchEol</source>
          <target state="translated">Buffer::searchEol</target>
        </trans-unit>
        <trans-unit id="b49c61ae608de70ab0a5f80c0b79f1683600c83f" translate="yes" xml:space="preserve">
          <source>Buffer::substr</source>
          <target state="translated">Buffer::substr</target>
        </trans-unit>
        <trans-unit id="8a4f7fd079314a696c3312d2ba167ab5c14cb2dc" translate="yes" xml:space="preserve">
          <source>Buffer::unfreeze</source>
          <target state="translated">Buffer::unfreeze</target>
        </trans-unit>
        <trans-unit id="3dbfa27b637ca0150a1c8f0d3b1a504c3ac1d07e" translate="yes" xml:space="preserve">
          <source>Buffer::unlock</source>
          <target state="translated">Buffer::unlock</target>
        </trans-unit>
        <trans-unit id="7e03b1a932d08a910e8a90352c02e22f9b6010c2" translate="yes" xml:space="preserve">
          <source>Buffer::write</source>
          <target state="translated">Buffer::write</target>
        </trans-unit>
        <trans-unit id="dfaab1edd9241718ee8f86ec3b9f76096a2b7ebc" translate="yes" xml:space="preserve">
          <source>BufferEvent (class)</source>
          <target state="translated">缓冲区事件</target>
        </trans-unit>
        <trans-unit id="53e076b45488eb25900080acdb1757f38b1ff7cd" translate="yes" xml:space="preserve">
          <source>BufferEvent::__construct</source>
          <target state="translated">BufferEvent::__construct</target>
        </trans-unit>
        <trans-unit id="54af84cc4011fbf2d46babe64e21c93a437fbe2a" translate="yes" xml:space="preserve">
          <source>BufferEvent::close</source>
          <target state="translated">BufferEvent::close</target>
        </trans-unit>
        <trans-unit id="7d407a064f7a4665aae1684c15ba79c51867216b" translate="yes" xml:space="preserve">
          <source>BufferEvent::connect</source>
          <target state="translated">BufferEvent::connect</target>
        </trans-unit>
        <trans-unit id="5cb6a96aac6f89c6bf33348ff81588e68887f40f" translate="yes" xml:space="preserve">
          <source>BufferEvent::connectHost</source>
          <target state="translated">BufferEvent::connectHost</target>
        </trans-unit>
        <trans-unit id="16227608923cc8dfe380bf1ddf147512f6d811ec" translate="yes" xml:space="preserve">
          <source>BufferEvent::createPair</source>
          <target state="translated">BufferEvent::createPair</target>
        </trans-unit>
        <trans-unit id="5ca9d530aefbf817a4ae6563eb3fa8cef3e73323" translate="yes" xml:space="preserve">
          <source>BufferEvent::disable</source>
          <target state="translated">BufferEvent::disable</target>
        </trans-unit>
        <trans-unit id="f98e763f5d195315ef66aee008e7cd650adfced1" translate="yes" xml:space="preserve">
          <source>BufferEvent::enable</source>
          <target state="translated">BufferEvent::enable</target>
        </trans-unit>
        <trans-unit id="100df7856667d55b0c6abd565420ccb44f8c125b" translate="yes" xml:space="preserve">
          <source>BufferEvent::free</source>
          <target state="translated">BufferEvent::free</target>
        </trans-unit>
        <trans-unit id="33965ad0318c5983cf5c38e6552eb42b7244162e" translate="yes" xml:space="preserve">
          <source>BufferEvent::getDnsErrorString</source>
          <target state="translated">BufferEvent::getDnsErrorString</target>
        </trans-unit>
        <trans-unit id="6d5eeb33c2048b25979a8a9e478194e98614cbff" translate="yes" xml:space="preserve">
          <source>BufferEvent::getEnabled</source>
          <target state="translated">BufferEvent::getEnabled</target>
        </trans-unit>
        <trans-unit id="9292e7e6cc9b811fc12d327d8a796ed2b99d67bf" translate="yes" xml:space="preserve">
          <source>BufferEvent::getInput</source>
          <target state="translated">BufferEvent::getInput</target>
        </trans-unit>
        <trans-unit id="0da43abff752b597420e7359e635d8f29e48e15b" translate="yes" xml:space="preserve">
          <source>BufferEvent::getOutput</source>
          <target state="translated">BufferEvent::getOutput</target>
        </trans-unit>
        <trans-unit id="e58d005c61dc1219c4acbea1ea7ced0b68d29366" translate="yes" xml:space="preserve">
          <source>BufferEvent::read</source>
          <target state="translated">BufferEvent::read</target>
        </trans-unit>
        <trans-unit id="11e2f4a028be69e15e59e643aee343012d7e1e2f" translate="yes" xml:space="preserve">
          <source>BufferEvent::readBuffer</source>
          <target state="translated">BufferEvent::readBuffer</target>
        </trans-unit>
        <trans-unit id="e6fcd7e4c71c388d071f6f2dfab40263f4d97349" translate="yes" xml:space="preserve">
          <source>BufferEvent::setCallbacks</source>
          <target state="translated">BufferEvent::setCallbacks</target>
        </trans-unit>
        <trans-unit id="0484a0ca930acf73425206bac1cedbf4c6da95dc" translate="yes" xml:space="preserve">
          <source>BufferEvent::setPriority</source>
          <target state="translated">BufferEvent::setPriority</target>
        </trans-unit>
        <trans-unit id="15d0e69bf341960381fdeab4c9d3dfda6a8aa9da" translate="yes" xml:space="preserve">
          <source>BufferEvent::setTimeouts</source>
          <target state="translated">BufferEvent::setTimeouts</target>
        </trans-unit>
        <trans-unit id="ba99e4555eb960cc1bde3ca3c3caca96c375decd" translate="yes" xml:space="preserve">
          <source>BufferEvent::setWatermark</source>
          <target state="translated">BufferEvent::setWatermark</target>
        </trans-unit>
        <trans-unit id="8becd9ef0f5ab43ef96b71eedbb8d91112636002" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslError</source>
          <target state="translated">BufferEvent::sslError</target>
        </trans-unit>
        <trans-unit id="568597fdc5d51f1f98c4c26fd10a991fbfce4366" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslFilter</source>
          <target state="translated">BufferEvent::sslFilter</target>
        </trans-unit>
        <trans-unit id="6aac5a90db7214dbcdefa4cfeae50c4e2fbf3e5c" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslGetCipherInfo</source>
          <target state="translated">BufferEvent::sslGetCipherInfo</target>
        </trans-unit>
        <trans-unit id="12e8d84fe2113b2678169b95791eeb37bcc22242" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslGetCipherName</source>
          <target state="translated">BufferEvent::sslGetCipherName</target>
        </trans-unit>
        <trans-unit id="6538cbfa54bc5652c3e4557b1923a4238c54d073" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslGetCipherVersion</source>
          <target state="translated">BufferEvent::sslGetCipherVersion</target>
        </trans-unit>
        <trans-unit id="88df75a1bad0d915db02197ec4b85d6d45c79da5" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslGetProtocol</source>
          <target state="translated">BufferEvent::sslGetProtocol</target>
        </trans-unit>
        <trans-unit id="52b9926185b61608086bbccb4057d10122f62e05" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslRenegotiate</source>
          <target state="translated">BufferEvent::sslRenegotiate</target>
        </trans-unit>
        <trans-unit id="9331183dec857b364e8fa33fa923f049cb00f5e6" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslSocket</source>
          <target state="translated">BufferEvent::sslSocket</target>
        </trans-unit>
        <trans-unit id="56703e0253a6626f3db31e049d09ca0e080e7457" translate="yes" xml:space="preserve">
          <source>BufferEvent::write</source>
          <target state="translated">BufferEvent::write</target>
        </trans-unit>
        <trans-unit id="ad838193ac6d141aebfb4886ff07fa04650ab632" translate="yes" xml:space="preserve">
          <source>BufferEvent::writeBuffer</source>
          <target state="translated">BufferEvent::writeBuffer</target>
        </trans-unit>
        <trans-unit id="5766313f4616285d7424c4a400bed4ad3bedfc86" translate="yes" xml:space="preserve">
          <source>Build a new SVMModel. Models will usually be created from the SVM::train function, but then saved models may be restored directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d49f3175dcd17eeccbee03f32b7c9a134f811104" translate="yes" xml:space="preserve">
          <source>Built-in classes can define its own comparison, different classes are uncomparable, same class see &lt;a href=&quot;language.oop5.object-comparison&quot;&gt;Object Comparison&lt;/a&gt;</source>
          <target state="translated">内置类可以定义自己的比较，不同的类无法比拟，同一类请参见&lt;a href=&quot;language.oop5.object-comparison&quot;&gt;对象比较&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4204fec258be60d235a79a85844bedd99808c0f1" translate="yes" xml:space="preserve">
          <source>But perhaps the most common use for of lambda-style (anonymous) functions is to create callback functions, for example when using &lt;a href=&quot;function.array-walk&quot;&gt;array_walk()&lt;/a&gt; or &lt;a href=&quot;function.usort&quot;&gt;usort()&lt;/a&gt;</source>
          <target state="translated">但是，lambda样式（匿名）函数的最常见用法是创建回调函数，例如在使用&lt;a href=&quot;function.array-walk&quot;&gt;array_walk（）&lt;/a&gt;或&lt;a href=&quot;function.usort&quot;&gt;usort（）时&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42d82d64135c7c7eed0f8b3f9d575221a5a1108b" translate="yes" xml:space="preserve">
          <source>But there do is some usage need such feature, like unit testing. thus Yaf can be built with --enable-yaf-debug, which will allow Yaf read the value user set via script.</source>
          <target state="translated">因此Yaf可以用--enable-yaf-debug来构建,这将允许Yaf通过脚本读取用户设置的值。</target>
        </trans-unit>
        <trans-unit id="9c10a84ef665e2b028403dac66b7cda84d80803b" translate="yes" xml:space="preserve">
          <source>But this is not, and will result in a parse error in PHP 5:</source>
          <target state="translated">但这不是,在 PHP 5 中会导致一个解析错误。</target>
        </trans-unit>
        <trans-unit id="4b52e24a2aba6fbc262ff4522c88ea5f7aec6bb9" translate="yes" xml:space="preserve">
          <source>But what happens if &lt;var&gt;$kitty&lt;/var&gt; tries to &lt;var&gt;eat&lt;/var&gt; the &lt;var&gt;$banana&lt;/var&gt;?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c62f81e4da8b5c73825197e5c2450619314c8618" translate="yes" xml:space="preserve">
          <source>By contrast to &lt;a href=&quot;function.strtolower&quot;&gt;strtolower()&lt;/a&gt;, 'alphabetic' is determined by the Unicode character properties. Thus the behaviour of this function is not affected by locale settings and it can convert any characters that have 'alphabetic' property, such as A-umlaut (&amp;Auml;).</source>
          <target state="translated">与&lt;a href=&quot;function.strtolower&quot;&gt;strtolower（）相比&lt;/a&gt;，&amp;ldquo;字母&amp;rdquo;由Unicode字符属性确定。因此，此功能的行为不受语言环境设置的影响，它可以转换任何具有&amp;ldquo;字母&amp;rdquo;属性的字符，例如A-umlaut（&amp;Auml;）。</target>
        </trans-unit>
        <trans-unit id="d675aa298427a255b86c1c1b913eeb917f6d4be4" translate="yes" xml:space="preserve">
          <source>By contrast to &lt;a href=&quot;function.strtoupper&quot;&gt;strtoupper()&lt;/a&gt;, 'alphabetic' is determined by the Unicode character properties. Thus the behaviour of this function is not affected by locale settings and it can convert any characters that have 'alphabetic' property, such as a-umlaut (&amp;auml;).</source>
          <target state="translated">与&lt;a href=&quot;function.strtoupper&quot;&gt;strtoupper（）相比&lt;/a&gt;，&amp;ldquo;字母&amp;rdquo;由Unicode字符属性确定。因此，此功能的行为不受语言环境设置的影响，它可以转换任何具有&amp;ldquo;字母&amp;rdquo;属性的字符，例如a-umlaut（&amp;auml;）。</target>
        </trans-unit>
        <trans-unit id="d28fdae93cfe8c9acab3238f946a85b87a64740b" translate="yes" xml:space="preserve">
          <source>By contrast to the standard case folding functions such as &lt;a href=&quot;function.strtolower&quot;&gt;strtolower()&lt;/a&gt; and &lt;a href=&quot;function.strtoupper&quot;&gt;strtoupper()&lt;/a&gt;, case folding is performed on the basis of the Unicode character properties. Thus the behaviour of this function is not affected by locale settings and it can convert any characters that have 'alphabetic' property, such as A-umlaut (&amp;Auml;).</source>
          <target state="translated">与标准的大小写折叠功能（例如&lt;a href=&quot;function.strtolower&quot;&gt;strtolower（）&lt;/a&gt;和&lt;a href=&quot;function.strtoupper&quot;&gt;strtoupper（））相比&lt;/a&gt;，大小写折叠是基于Unicode字符属性执行的。因此，此功能的行为不受语言环境设置的影响，它可以转换任何具有&amp;ldquo;字母&amp;rdquo;属性的字符，例如A-umlaut（&amp;Auml;）。</target>
        </trans-unit>
        <trans-unit id="f5fdbd907ae04f30134c3818d09eab1507d27c6d" translate="yes" xml:space="preserve">
          <source>By default &lt;strong&gt;pg_delete()&lt;/strong&gt; passes raw values. Values must be escaped or PGSQL_DML_ESCAPE option must be specified. PGSQL_DML_ESCAPE quotes and escapes parameters/identifiers. Therefore, table/column names became case sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec1ecc4d28526e4112181ea59f145e7feb24bdb" translate="yes" xml:space="preserve">
          <source>By default &lt;strong&gt;pg_insert()&lt;/strong&gt; passes raw values. Values must be escaped or PGSQL_DML_ESCAPE option must be specified. PGSQL_DML_ESCAPE quotes and escapes parameters/identifiers. Therefore, table/column names became case sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce7008598835333ee193547fc5a29bc8db13749" translate="yes" xml:space="preserve">
          <source>By default &lt;strong&gt;pg_select()&lt;/strong&gt; passes raw values. Values must be escaped or PGSQL_DML_ESCAPE option must be specified. PGSQL_DML_ESCAPE quotes and escapes parameters/identifiers. Therefore, table/column names became case sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc03cf4e3849210dea678c6c42031eed5c32d27" translate="yes" xml:space="preserve">
          <source>By default &lt;strong&gt;pg_update()&lt;/strong&gt; passes raw values. Values must be escaped or PGSQL_DML_ESCAPE option must be specified. PGSQL_DML_ESCAPE quotes and escapes parameters/identifiers. Therefore, table/column names became case sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f04b5f931d27087eb2765c54b98dae10ca9ea3bd" translate="yes" xml:space="preserve">
          <source>By default Libevent turns underlying file descriptors, or sockets, to non-blocking mode. This flag tells Libevent to leave them in blocking mode.</source>
          <target state="translated">默认情况下,Libevent 将底层文件描述符或套接字转为非阻塞模式。这个标志告诉 Libevent 让它们处于阻塞模式。</target>
        </trans-unit>
        <trans-unit id="b2e72178624c9ca39858e1c67daba59e002cec13" translate="yes" xml:space="preserve">
          <source>By default all events are scheduled with the same priority (&lt;code&gt;npriorities&lt;/code&gt;/2). Using &lt;strong&gt;event_base_priority_init()&lt;/strong&gt; you can change the number of event priority levels and then set a desired priority for each event.</source>
          <target state="translated">默认情况下，所有事件都以相同的优先级（ &lt;code&gt;npriorities&lt;/code&gt; / 2）进行调度。使用&lt;strong&gt;event_base_priority_init（）&lt;/strong&gt;可以更改事件优先级的数量，然后为每个事件设置所需的优先级。</target>
        </trans-unit>
        <trans-unit id="26de7b5324d20794622ce77df60d00ae0df480de" translate="yes" xml:space="preserve">
          <source>By default an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; is returned. If &lt;code&gt;return_float&lt;/code&gt; is set, then a &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt; is returned.</source>
          <target state="translated">默认情况下，返回一个&lt;a href=&quot;language.types.array&quot;&gt;数组&lt;/a&gt;。如果设置了 &lt;code&gt;return_float&lt;/code&gt; ，则返回&lt;a href=&quot;language.types.float&quot;&gt;浮点数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6f284289077d3d0e9df7007aa50926edec53abed" translate="yes" xml:space="preserve">
          <source>By default an array is returned. If &lt;code&gt;returnFloat&lt;/code&gt; is set, then a float is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c08ddf3479640dbed77fcd9d3a9c49149d80a2" translate="yes" xml:space="preserve">
          <source>By default an attribute can only be used once per declaration. If the attribute should be repeatable on declarations it must be specified as part of the bitmask to the &lt;code&gt;#[Attribute]&lt;/code&gt; declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94399ce384a712cdc79f9622329246ba486b05d4" translate="yes" xml:space="preserve">
          <source>By default full OID notation is used for keys in output array. If set to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; subtree prefix will be removed from keys leaving only suffix of object_id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1daefe7a11c77b758344272257b9986471de07d4" translate="yes" xml:space="preserve">
          <source>By default it checks all include paths to contain filenames built up by the lowercase class name appended by the filename extensions .inc and .php.</source>
          <target state="translated">默认情况下,它检查所有包含路径的文件名,这些文件名是由文件名扩展名.inc和.php附加的小写类名建立的。</target>
        </trans-unit>
        <trans-unit id="4cad97d4772a513a14119703844006573ad0fce8" translate="yes" xml:space="preserve">
          <source>By default on some platforms, once a listener socket is closed, no other socket can bind to the same port until a while has passed. Setting this option makes Libevent mark the socket as reusable, so that once it is closed, another socket can be opened to listen on the same port.</source>
          <target state="translated">在某些平台上,默认情况下,一旦一个监听器套接字被关闭,其他套接字就不能绑定到同一个端口,直到过了一段时间。设置这个选项会让Libevent将该套接字标记为可重用,这样一旦它被关闭,就可以打开另一个套接字来监听同一个端口。</target>
        </trans-unit>
        <trans-unit id="550dc8ff894807a5e0db5a9bf093b0144810af9f" translate="yes" xml:space="preserve">
          <source>By default target must match a particular pixel color exactly. However, in many cases two colors may differ by a small amount. The fuzz member of image defines how much tolerance is acceptable to consider two colors as the same. This parameter represents the variation on the quantum range.</source>
          <target state="translated">默认情况下,目标必须与特定的像素颜色完全匹配。然而,在许多情况下,两种颜色可能相差很小。image的fuzz成员定义了可以接受多少公差来认为两种颜色是一样的。这个参数代表了量子范围上的变化。</target>
        </trans-unit>
        <trans-unit id="9b19d1383ea2ae74b773ac098a07b778efa0af21" translate="yes" xml:space="preserve">
          <source>By default the Memcached instances are destroyed at the end of the request. To create an instance that persists between requests, use &lt;code&gt;persistent_id&lt;/code&gt; to specify a unique ID for the instance. All instances created with the same &lt;code&gt;persistent_id&lt;/code&gt; will share the same connection.</source>
          <target state="translated">默认情况下，Memcached实例在请求结束时被销毁。要创建在请求之间 &lt;code&gt;persistent_id&lt;/code&gt; 存在的实例，请使用persistent_id为该实例指定唯一的ID。使用相同的 &lt;code&gt;persistent_id&lt;/code&gt; 创建的所有实例将共享相同的连接。</target>
        </trans-unit>
        <trans-unit id="c4e78f1c74468051f2c950ff7b49efb3de5c8cf9" translate="yes" xml:space="preserve">
          <source>By default the UCD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1222d4e4aafb65f5393a6ee1633532ea3bac5f86" translate="yes" xml:space="preserve">
          <source>By default the tables name that field belongs to is returned but if &lt;code&gt;oid_only&lt;/code&gt; is set to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, then the oid will instead be returned.</source>
          <target state="translated">默认情况下，返回字段所属的表名，但是如果 &lt;code&gt;oid_only&lt;/code&gt; 设置为&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;，则将返回oid。</target>
        </trans-unit>
        <trans-unit id="e36ee2505451c912e8f5aabbab8cf2d7422de348" translate="yes" xml:space="preserve">
          <source>By default the tables name that field belongs to is returned but if &lt;code&gt;oid_only&lt;/code&gt; is set to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, then the oid will instead be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf96e667bb289f2d21af357c9716906979dcd35" translate="yes" xml:space="preserve">
          <source>By default this includes the following methods: &lt;code&gt;GET&lt;/code&gt; , &lt;code&gt;POST&lt;/code&gt; , &lt;code&gt;HEAD&lt;/code&gt; , &lt;code&gt;PUT&lt;/code&gt; , &lt;code&gt;DELETE&lt;/code&gt; . See &lt;code&gt;EventHttpRequest::CMD_*&lt;/code&gt; constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2f59a620e268d62cce13da491cf0ddd8a126a2" translate="yes" xml:space="preserve">
          <source>By default this includes the following methods: &lt;em&gt;GET&lt;/em&gt; , &lt;em&gt;POST&lt;/em&gt; , &lt;em&gt;HEAD&lt;/em&gt; , &lt;em&gt;PUT&lt;/em&gt; , &lt;em&gt;DELETE&lt;/em&gt; . See &lt;em&gt;EventHttpRequest::CMD_*&lt;/em&gt; constants.</source>
          <target state="translated">默认情况下，这包括以下方法：&lt;em&gt;GET&lt;/em&gt;，&lt;em&gt;POST&lt;/em&gt;，&lt;em&gt;HEAD&lt;/em&gt;，&lt;em&gt;PUT&lt;/em&gt;，&lt;em&gt;DELETE&lt;/em&gt;。请参见&lt;em&gt;EventHttpRequest :: CMD_ *&lt;/em&gt;常量。</target>
        </trans-unit>
        <trans-unit id="9ef9d726147a43c53d2c594ed6ae4f7f61730985" translate="yes" xml:space="preserve">
          <source>By default uopz disables the exit opcode, so &lt;a href=&quot;function.exit&quot;&gt;exit()&lt;/a&gt; calls are practically ignored. &lt;strong&gt;uopz_allow_exit()&lt;/strong&gt; allows to control this behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="169b6cce2bc13e3f8648d9d4b2f1c45882e22cc1" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;data_is_url&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;. Use &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; to specify that &lt;code&gt;data&lt;/code&gt; is a path or URL to an XML document instead of &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; data.</source>
          <target state="translated">默认情况下， &lt;code&gt;data_is_url&lt;/code&gt; 为&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;。使用&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;可以指定 &lt;code&gt;data&lt;/code&gt; 是XML文档的路径或URL，而不是&lt;a href=&quot;language.types.string&quot;&gt;字符串&lt;/a&gt;数据。</target>
        </trans-unit>
        <trans-unit id="be69659dc286765b08069654a0e97ea65c60bc70" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;data_is_url&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;. Use &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to specify that &lt;code&gt;data&lt;/code&gt; is a path or URL to an XML document instead of string data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d4ddcbaf6d2438f5a65fe421703c2af85ab111" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;&lt;code&gt;PHP_QUERY_RFC1738&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">默认情况下，&lt;strong&gt; &lt;code&gt;PHP_QUERY_RFC1738&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="37c4ab97d3e4e3626921a7113fd72058b457da88" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;&lt;code&gt;STDOUT&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;STDERR&lt;/code&gt;&lt;/strong&gt; have the VT100 feature enabled.</source>
          <target state="translated">默认情况下，&lt;strong&gt; &lt;code&gt;STDOUT&lt;/code&gt; &lt;/strong&gt;和&lt;strong&gt; &lt;code&gt;STDERR&lt;/code&gt; &lt;/strong&gt;启用了VT100功能。</target>
        </trans-unit>
        <trans-unit id="b95d6bc6291745ead5afe09978038d77f2800daf" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;Yaf_Loader&lt;/strong&gt; assume all library (class defined script) store in the &lt;a href=&quot;https://secure.php.net/manual/en/yaf.configuration.php#ini.yaf.library&quot;&gt;global library directory&lt;/a&gt;, which is defined in the php.ini(yaf.library).</source>
          <target state="translated">默认情况下，&lt;strong&gt;Yaf_Loader&lt;/strong&gt;假定所有库（类定义的脚本）存储在&lt;a href=&quot;https://secure.php.net/manual/en/yaf.configuration.php#ini.yaf.library&quot;&gt;全局库目录中&lt;/a&gt;，该目录在php.ini（yaf.library）中定义。</target>
        </trans-unit>
        <trans-unit id="724711b1eaa6cca674096ef53901e7ac767527ba" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;Yaf_Loader&lt;/strong&gt; assume all library (class defined script) store in the &lt;a href=&quot;https://www.php.net/manual/en/yaf.configuration.php#ini.yaf.library&quot;&gt;global library directory&lt;/a&gt;, which is defined in the php.ini(yaf.library).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c0cc42a4af9bc911ba463c4d6f7b135fd07906" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;dns_get_record()&lt;/strong&gt; will search for any resource records associated with &lt;code&gt;hostname&lt;/code&gt;. To limit the query, specify the optional &lt;code&gt;type&lt;/code&gt; parameter. May be any one of the following: &lt;strong&gt;&lt;code&gt;DNS_A&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_CNAME&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_HINFO&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_CAA&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_MX&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_NS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_PTR&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_SOA&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_TXT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_AAAA&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_SRV&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_NAPTR&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_A6&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_ALL&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;DNS_ANY&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">默认情况下，&lt;strong&gt;dns_get_record（）&lt;/strong&gt;将搜索与 &lt;code&gt;hostname&lt;/code&gt; 关联的任何资源记录。要限制查询，请指定可选的 &lt;code&gt;type&lt;/code&gt; 参数。可以是以下任意一项：&lt;strong&gt; &lt;code&gt;DNS_A&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;DNS_CNAME&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;DNS_HINFO&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;DNS_CAA&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;DNS_MX&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;DNS_NS&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;DNS_PTR&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;DNS_SOA&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;DNS_TXT&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;DNS_AAAA&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;DNS_SRV&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;DNS_NAPTR&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;DNS_A6&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;DNS_ALL&lt;/code&gt; &lt;/strong&gt;或&lt;strong&gt; &lt;code&gt;DNS_ANY&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="d45026123fdb97b1d69e56ca3ec14c4406135a00" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;microtime()&lt;/strong&gt; returns a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; in the form &quot;msec sec&quot;, where &lt;em&gt;sec&lt;/em&gt; is the number of seconds since the Unix epoch (0:00:00 January 1,1970 GMT), and &lt;em&gt;msec&lt;/em&gt; measures microseconds that have elapsed since &lt;em&gt;sec&lt;/em&gt; and is also expressed in seconds.</source>
          <target state="translated">默认情况下，&lt;strong&gt;microtime（）&lt;/strong&gt;返回一个&lt;a href=&quot;language.types.string&quot;&gt;字符串&lt;/a&gt;，形式为&amp;ldquo;毫秒&amp;rdquo;，其中&lt;em&gt;sec&lt;/em&gt;是自Unix时代（格林尼治标准时间1970年1月1日0:00:00）以来的秒数，&lt;em&gt;毫秒&lt;/em&gt;是自&lt;em&gt;sec&lt;/em&gt;以来经过的&lt;em&gt;毫秒&lt;/em&gt;&lt;em&gt;数。&lt;/em&gt;并且也以秒表示。</target>
        </trans-unit>
        <trans-unit id="cdaa80beb93c76e12c6b8c1fce3589106e43d9b2" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;microtime()&lt;/strong&gt; returns a string in the form &quot;msec sec&quot;, where &lt;code&gt;sec&lt;/code&gt; is the number of seconds since the Unix epoch (0:00:00 January 1,1970 GMT), and &lt;code&gt;msec&lt;/code&gt; measures microseconds that have elapsed since &lt;code&gt;sec&lt;/code&gt; and is also expressed in seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d62244b8ee003c572b59e276aac94da7d3d70d4" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;querySingle()&lt;/strong&gt; returns the value of the first column returned by the query. If &lt;code&gt;entire_row&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, then it returns an array of the entire first row.</source>
          <target state="translated">默认情况下，&lt;strong&gt;querySingle（）&lt;/strong&gt;返回查询返回的第一列的值。如果 &lt;code&gt;entire_row&lt;/code&gt; 为&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;，则它将返回整个第一行的数组。</target>
        </trans-unit>
        <trans-unit id="686b1efa05460f9030df0905f73a6d443d3e57d5" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;querySingle()&lt;/strong&gt; returns the value of the first column returned by the query. If &lt;code&gt;entire_row&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, then it returns an array of the entire first row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b1a6d92d22396734fa5884ce36c955b2a1f68e" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;stream_filter_append()&lt;/strong&gt; will attach the filter to the &lt;code&gt;read filter chain&lt;/code&gt; if the file was opened for reading (i.e. File Mode: &lt;code&gt;r&lt;/code&gt;, and/or &lt;code&gt;+&lt;/code&gt;). The filter will also be attached to the &lt;code&gt;write filter chain&lt;/code&gt; if the file was opened for writing (i.e. File Mode: &lt;code&gt;w&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, and/or &lt;code&gt;+&lt;/code&gt;). &lt;strong&gt;&lt;code&gt;STREAM_FILTER_READ&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt;&lt;/strong&gt;, and/or &lt;strong&gt;&lt;code&gt;STREAM_FILTER_ALL&lt;/code&gt;&lt;/strong&gt; can also be passed to the &lt;code&gt;read_write&lt;/code&gt; parameter to override this behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f012ccf27bcf6ac35d4b701eda654a6ee0d247" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;stream_filter_append()&lt;/strong&gt; will attach the filter to the &lt;em&gt;read filter chain&lt;/em&gt; if the file was opened for reading (i.e. File Mode: &lt;em&gt;r&lt;/em&gt;, and/or &lt;em&gt;+&lt;/em&gt;). The filter will also be attached to the &lt;em&gt;write filter chain&lt;/em&gt; if the file was opened for writing (i.e. File Mode: &lt;em&gt;w&lt;/em&gt;, &lt;em&gt;a&lt;/em&gt;, and/or &lt;em&gt;+&lt;/em&gt;). &lt;strong&gt;&lt;code&gt;STREAM_FILTER_READ&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt;&lt;/strong&gt;, and/or &lt;strong&gt;&lt;code&gt;STREAM_FILTER_ALL&lt;/code&gt;&lt;/strong&gt; can also be passed to the &lt;code&gt;read_write&lt;/code&gt; parameter to override this behavior.</source>
          <target state="translated">默认情况下，如果打开文件进行读取（例如，文件模式：&lt;em&gt;r&lt;/em&gt;和/或&lt;em&gt;+&lt;/em&gt;），&lt;strong&gt;stream_filter_append（）&lt;/strong&gt;会将过滤器附加到&lt;em&gt;读取的过滤器链上&lt;/em&gt;。如果打开了用于写入的文件（即文件模式：&lt;em&gt;w&lt;/em&gt;，&lt;em&gt;a&lt;/em&gt;和/或&lt;em&gt;+&lt;/em&gt;），则该过滤器还将附加到&lt;em&gt;写过滤器链上&lt;/em&gt;。&lt;strong&gt; &lt;code&gt;STREAM_FILTER_READ&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt; &lt;/strong&gt;，和/或&lt;strong&gt; &lt;code&gt;STREAM_FILTER_ALL&lt;/code&gt; &lt;/strong&gt;也可以传递给 &lt;code&gt;read_write&lt;/code&gt; 参数来覆盖此行为。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45ccb6b0f84978b7fede84b099edfec2121f7f07" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;stream_filter_prepend()&lt;/strong&gt; will attach the filter to the &lt;code&gt;read filter chain&lt;/code&gt; if the file was opened for reading (i.e. File Mode: &lt;code&gt;r&lt;/code&gt;, and/or &lt;code&gt;+&lt;/code&gt;). The filter will also be attached to the &lt;code&gt;write filter chain&lt;/code&gt; if the file was opened for writing (i.e. File Mode: &lt;code&gt;w&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, and/or &lt;code&gt;+&lt;/code&gt;). &lt;strong&gt;&lt;code&gt;STREAM_FILTER_READ&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt;&lt;/strong&gt;, and/or &lt;strong&gt;&lt;code&gt;STREAM_FILTER_ALL&lt;/code&gt;&lt;/strong&gt; can also be passed to the &lt;code&gt;read_write&lt;/code&gt; parameter to override this behavior. See &lt;a href=&quot;function.stream-filter-append&quot;&gt;stream_filter_append()&lt;/a&gt; for an example of using this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c54c916e8dc9476ea8374319aae895028e037969" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;stream_filter_prepend()&lt;/strong&gt; will attach the filter to the &lt;em&gt;read filter chain&lt;/em&gt; if the file was opened for reading (i.e. File Mode: &lt;em&gt;r&lt;/em&gt;, and/or &lt;em&gt;+&lt;/em&gt;). The filter will also be attached to the &lt;em&gt;write filter chain&lt;/em&gt; if the file was opened for writing (i.e. File Mode: &lt;em&gt;w&lt;/em&gt;, &lt;em&gt;a&lt;/em&gt;, and/or &lt;em&gt;+&lt;/em&gt;). &lt;strong&gt;&lt;code&gt;STREAM_FILTER_READ&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt;&lt;/strong&gt;, and/or &lt;strong&gt;&lt;code&gt;STREAM_FILTER_ALL&lt;/code&gt;&lt;/strong&gt; can also be passed to the &lt;code&gt;read_write&lt;/code&gt; parameter to override this behavior. See &lt;a href=&quot;function.stream-filter-append&quot;&gt;stream_filter_append()&lt;/a&gt; for an example of using this parameter.</source>
          <target state="translated">默认情况下，如果打开文件进行读取（例如，文件模式：&lt;em&gt;r&lt;/em&gt;和/或&lt;em&gt;+&lt;/em&gt;），&lt;strong&gt;stream_filter_prepend（）&lt;/strong&gt;会将过滤器附加到&lt;em&gt;读取过滤器链&lt;/em&gt;。如果打开了用于写入的文件（即文件模式：&lt;em&gt;w&lt;/em&gt;，&lt;em&gt;a&lt;/em&gt;和/或&lt;em&gt;+&lt;/em&gt;），则该过滤器还将附加到&lt;em&gt;写过滤器链上&lt;/em&gt;。&lt;strong&gt; &lt;code&gt;STREAM_FILTER_READ&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt; &lt;/strong&gt;，和/或&lt;strong&gt; &lt;code&gt;STREAM_FILTER_ALL&lt;/code&gt; &lt;/strong&gt;也可以传递给 &lt;code&gt;read_write&lt;/code&gt; 参数来覆盖此行为。有关使用此参数的示例，请参见&lt;a href=&quot;function.stream-filter-append&quot;&gt;stream_filter_append（）&lt;/a&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c01028885d1d09d492aa19806ee37a7f661109e" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;version_compare()&lt;/strong&gt; returns &lt;code&gt;-1&lt;/code&gt; if the first version is lower than the second, &lt;code&gt;0&lt;/code&gt; if they are equal, and &lt;code&gt;1&lt;/code&gt; if the second is lower.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d2a45dc61ddf638922ba03b999977682dc2971" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;version_compare()&lt;/strong&gt; returns &lt;em&gt;-1&lt;/em&gt; if the first version is lower than the second, &lt;em&gt;0&lt;/em&gt; if they are equal, and &lt;em&gt;1&lt;/em&gt; if the second is lower.</source>
          <target state="translated">默认情况下，&lt;strong&gt;version_compare（）&lt;/strong&gt;返回&lt;em&gt;-1&lt;/em&gt;如果第一版本比第二下，&lt;em&gt;0&lt;/em&gt;如果它们相等，和&lt;em&gt;1&lt;/em&gt;如果第二较低。</target>
        </trans-unit>
        <trans-unit id="27460a8095a98ca40ced156b1791796b14c59245" translate="yes" xml:space="preserve">
          <source>By default, PCRE treats the subject string as consisting of a single &quot;line&quot; of characters (even if it actually contains several newlines). The &quot;start of line&quot; metacharacter (^) matches only at the start of the string, while the &quot;end of line&quot; metacharacter ($) matches only at the end of the string, or before a terminating newline (unless &lt;em&gt;D&lt;/em&gt; modifier is set). This is the same as Perl.  When this modifier is set, the &quot;start of line&quot; and &quot;end of line&quot; constructs match immediately following or immediately before any newline in the subject string, respectively, as well as at the very start and end. This is equivalent to Perl's /m modifier. If there are no &quot;\n&quot; characters in a subject string, or no occurrences of ^ or $ in a pattern, setting this modifier has no effect.</source>
          <target state="translated">默认情况下，PCRE将主题字符串视为由单个&amp;ldquo;行&amp;rdquo;字符组成（即使实际上包含多个换行符）。 &amp;ldquo;行首&amp;rdquo;元字符（^）仅在字符串的开头匹配，而&amp;ldquo;行尾&amp;rdquo;元字符（$）仅在字符串的末尾或终止换行符之前匹配（除非设置了&lt;em&gt;D&lt;/em&gt;修饰符） ）。这与Perl相同。设置此修饰符后，&amp;ldquo;行首&amp;rdquo;和&amp;ldquo;行尾&amp;rdquo;结构分别与主题字符串中的任何换行符紧接或紧随其后，以及最开始和结尾处都匹配。这等效于Perl的/ m修饰符。如果主题字符串中没有&amp;ldquo; \ n&amp;rdquo;字符，或者在模式中没有出现^或$，设置此修饰符无效。</target>
        </trans-unit>
        <trans-unit id="876bdd67ceb4caa39c53bb02652742dc6db10c7f" translate="yes" xml:space="preserve">
          <source>By default, PHP will coerce values of the wrong type into the expected scalar type declaration if possible. For example, a function that is given an int for a parameter that expects a string will get a variable of type string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0196c5a2bb6cf278769248a1a2d040c7e89ffe" translate="yes" xml:space="preserve">
          <source>By default, PHP will coerce values of the wrong type into the expected scalar type if possible. For example, a function that is given an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; for a parameter that expects a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; will get a variable of type &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;.</source>
          <target state="translated">默认情况下，PHP将在可能的情况下将错误类型的值强制转换为预期的标量类型。例如，一个为期望&lt;a href=&quot;language.types.string&quot;&gt;字符串&lt;/a&gt;的参数提供&lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt;的函数将获得&lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;类型的变量。</target>
        </trans-unit>
        <trans-unit id="b17d452802e1da8437b76a937ab04a4b3cd415f6" translate="yes" xml:space="preserve">
          <source>By default, a whitespace character is any character that the C library function isspace() recognizes, though it is possible to compile PCRE with alternative character type tables. Normally isspace() matches space, formfeed, newline, carriage return, horizontal tab, and vertical tab. Perl 5 no longer includes vertical tab in its set of whitespace characters. The \v escape that was in the Perl documentation for a long time was never in fact recognized. However, the character itself was treated as whitespace at least up to 5.002. In 5.004 and 5.005 it does not match \s.</source>
          <target state="translated">默认情况下,空白字符是C库函数isspace()识别的任何字符,尽管可以用其他字符类型表编译PCRE。通常isspace()会匹配空格、formfeed、换行、回车、水平制表符和垂直制表符。Perl 5 不再将垂直制表符包含在它的空白字符集中。在 Perl 文档中出现了很长时间的 v/v 转义符实际上从未被识别。然而,至少在 5.002 之前,这个字符本身是被视为空白字符的。在 5.004 和 5.005 中,它与 \s 不匹配。</target>
        </trans-unit>
        <trans-unit id="60428d9473190a6b74698ee79dd88db0cbef4e7c" translate="yes" xml:space="preserve">
          <source>By default, all of the superglobals are available but there are directives that affect this availability. For further information, refer to the documentation for &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.variables-order&quot;&gt;variables_order&lt;/a&gt;.</source>
          <target state="translated">默认情况下，所有超全局变量都可用，但是有些指令会影响此可用性。有关更多信息，请参阅&lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.variables-order&quot;&gt;variables_order&lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="bcdf0010dff9cb7e1a63daad8eb451745742e6b6" translate="yes" xml:space="preserve">
          <source>By default, all of the superglobals are available but there are directives that affect this availability. For further information, refer to the documentation for &lt;a href=&quot;https://www.php.net/manual/en/ini.core.php#ini.variables-order&quot;&gt;variables_order&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc9b50aa43ff8d8fd03f2219bf2b47983e6e3b1" translate="yes" xml:space="preserve">
          <source>By default, auto-commit is on for a connection. Disabling auto-commit is equivalent with starting a transaction.</source>
          <target state="translated">默认情况下,连接的自动提交是开启的。禁用自动提交相当于启动一个事务。</target>
        </trans-unit>
        <trans-unit id="5706e160755895eb76a2ad3360399b5df2f770c1" translate="yes" xml:space="preserve">
          <source>By default, function arguments are passed by value (so that if the value of the argument within the function is changed, it does not get changed outside of the function). To allow a function to modify its arguments, they must be passed by reference.</source>
          <target state="translated">默认情况下,函数的参数是通过值传递的(所以如果函数中的参数值被改变,它不会在函数之外被改变)。要允许函数修改其参数,必须通过引用传递。</target>
        </trans-unit>
        <trans-unit id="f95bbeb6560da109d08aafe4961c4f7959810269" translate="yes" xml:space="preserve">
          <source>By default, the &lt;strong&gt;sqlsrv_connect()&lt;/strong&gt; uses connection pooling to improve connection performance. To turn off connection pooling (i.e. force a new connection on each call), set the &quot;ConnectionPooling&quot; option in the $connectionOptions array to 0 (or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;). For more information, see &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/cc644930.aspx&quot;&gt;&amp;raquo; SQLSRV Connection Pooling&lt;/a&gt;.</source>
          <target state="translated">默认情况下，&lt;strong&gt;sqlsrv_connect（）&lt;/strong&gt;使用连接池来提高连接性能。要关闭连接池（即在每次调用时强制建立新连接），请将$ connectionOptions数组中的&amp;ldquo; ConnectionPooling&amp;rdquo;选项设置为0（或&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;）。有关更多信息，请参见&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/cc644930.aspx&quot;&gt;&amp;raquo;SQLSRV连接池&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cf19e72c8805a6435532cd6c5a1e0f4b3b57861e" translate="yes" xml:space="preserve">
          <source>By default, the &lt;strong&gt;sqlsrv_connect()&lt;/strong&gt; uses connection pooling to improve connection performance. To turn off connection pooling (i.e. force a new connection on each call), set the &quot;ConnectionPooling&quot; option in the $connectionOptions array to 0 (or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;). For more information, see &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/cc644930.aspx&quot;&gt;&amp;raquo; SQLSRV Connection Pooling&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2bc8dcb50483cc519aa7c644f72ab40d9514b77" translate="yes" xml:space="preserve">
          <source>By default, the extension is &lt;code&gt;.phar.gz&lt;/code&gt; or &lt;code&gt;.phar.bz2&lt;/code&gt; for compressing phar archives, and &lt;code&gt;.phar.tar.gz&lt;/code&gt; or &lt;code&gt;.phar.tar.bz2&lt;/code&gt; for compressing tar archives. For decompressing, the default file extensions are &lt;code&gt;.phar&lt;/code&gt; and &lt;code&gt;.phar.tar&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3120c937d15492d5b638f1e9c37b0ca284c92060" translate="yes" xml:space="preserve">
          <source>By default, the extension is &lt;code&gt;.tar.gz&lt;/code&gt; or &lt;code&gt;.tar.bz2&lt;/code&gt; for compressing a tar, and &lt;code&gt;.tar&lt;/code&gt; for decompressing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c436d820c4d07e4e4452f070f12bfae1a0cf0c8" translate="yes" xml:space="preserve">
          <source>By default, the extension is &lt;em&gt;.phar.gz&lt;/em&gt; or &lt;em&gt;.phar.bz2&lt;/em&gt; for compressing phar archives, and &lt;em&gt;.phar.tar.gz&lt;/em&gt; or &lt;em&gt;.phar.tar.bz2&lt;/em&gt; for compressing tar archives. For decompressing, the default file extensions are &lt;em&gt;.phar&lt;/em&gt; and &lt;em&gt;.phar.tar&lt;/em&gt;.</source>
          <target state="translated">默认情况下，扩展名是&lt;em&gt;.phar.gz&lt;/em&gt;或&lt;em&gt;.phar.bz2&lt;/em&gt;压缩Phar归档，并&lt;em&gt;.phar.tar.gz&lt;/em&gt;或&lt;em&gt;.phar.tar.bz2&lt;/em&gt;压缩tar归档。对于解压缩，默认文件扩展名为&lt;em&gt;.phar&lt;/em&gt;和&lt;em&gt;.phar.tar&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="881e27504748548a3b143275ba26c9d9daa94112" translate="yes" xml:space="preserve">
          <source>By default, the extension is &lt;em&gt;.tar.gz&lt;/em&gt; or &lt;em&gt;.tar.bz2&lt;/em&gt; for compressing a tar, and &lt;em&gt;.tar&lt;/em&gt; for decompressing.</source>
          <target state="translated">默认情况下，扩展名是&lt;em&gt;.tar.gz&lt;/em&gt;或&lt;em&gt;.tar.bz2（&lt;/em&gt;用于压缩tar），扩展名为&lt;em&gt;.tar（&lt;/em&gt;用于解压缩）。</target>
        </trans-unit>
        <trans-unit id="6b71aefaed5480e51b7dfdceea36664939e9a0f7" translate="yes" xml:space="preserve">
          <source>By default, the information in your system &lt;code&gt;openssl.conf&lt;/code&gt; is used to initialize the request; you can specify a configuration file section by setting the &lt;code&gt;config_section_section&lt;/code&gt; key of &lt;code&gt;configargs&lt;/code&gt;. You can also specify an alternative openssl configuration file by setting the value of the &lt;code&gt;config&lt;/code&gt; key to the path of the file you want to use. The following keys, if present in &lt;code&gt;configargs&lt;/code&gt; behave as their equivalents in the &lt;code&gt;openssl.conf&lt;/code&gt;, as listed in the table below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354acb239ec7de9885c76eadccf52a476dd4c0a7" translate="yes" xml:space="preserve">
          <source>By default, the information in your system &lt;em&gt;openssl.conf&lt;/em&gt; is used to initialize the request; you can specify a configuration file section by setting the &lt;em&gt;config_section_section&lt;/em&gt; key of &lt;code&gt;configargs&lt;/code&gt;. You can also specify an alternative openssl configuration file by setting the value of the &lt;em&gt;config&lt;/em&gt; key to the path of the file you want to use. The following keys, if present in &lt;code&gt;configargs&lt;/code&gt; behave as their equivalents in the &lt;em&gt;openssl.conf&lt;/em&gt;, as listed in the table below.</source>
          <target state="translated">默认情况下，系统&lt;em&gt;openssl.conf中&lt;/em&gt;的信息用于初始化请求。您可以通过设置 &lt;code&gt;configargs&lt;/code&gt; 的&lt;em&gt;config_section_section&lt;/em&gt;键来指定配置文件段。您还可以通过将&lt;em&gt;config&lt;/em&gt;键的值设置为要使用的文件的路径来指定其他openssl配置文件。以下键，如果存在于 &lt;code&gt;configargs&lt;/code&gt; 表现为它们在等效&lt;em&gt;openssl.conf&lt;/em&gt;，如表中列出如下。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="817b2e65046e6bc7f1333c35a5ff28549b7dfde7" translate="yes" xml:space="preserve">
          <source>By default, the quantifiers are &quot;greedy&quot;, that is, they match as much as possible (up to the maximum number of permitted times), without causing the rest of the pattern to fail. The classic example of where this gives problems is in trying to match comments in C programs. These appear between the sequences /* and */ and within the sequence, individual * and / characters may appear. An attempt to match C comments by applying the pattern &lt;code&gt;/\*.*\*/&lt;/code&gt; to the string &lt;code&gt;/* first comment */  not comment  /* second comment */&lt;/code&gt; fails, because it matches the entire string due to the greediness of the .* item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fed13d9e89961b09ef3a861c5c5a9dd4ef9847f" translate="yes" xml:space="preserve">
          <source>By default, the quantifiers are &quot;greedy&quot;, that is, they match as much as possible (up to the maximum number of permitted times), without causing the rest of the pattern to fail. The classic example of where this gives problems is in trying to match comments in C programs. These appear between the sequences /* and */ and within the sequence, individual * and / characters may appear. An attempt to match C comments by applying the pattern &lt;em&gt;/\*.*\*/&lt;/em&gt; to the string &lt;em&gt;/* first comment */ not comment /* second comment */&lt;/em&gt; fails, because it matches the entire string due to the greediness of the .* item.</source>
          <target state="translated">默认情况下，量词是&amp;ldquo;贪婪的&amp;rdquo;，也就是说，它们尽可能地匹配（最多允许的次数），而不会导致模式的其余部分失败。产生问题的经典示例是尝试匹配C程序中的注释。这些出现在序列/ *和* /之间，并且在序列内，可能会出现单个*和/字符。通过将模式&lt;em&gt;/\*.*\*/&lt;/em&gt;应用于字符串&lt;em&gt;/ *第一个注释* /不注释/ *第二个注释* /&lt;/em&gt;来匹配C个注释的尝试失败，因为由于的贪婪，它与整个字符串匹配。 *项。</target>
        </trans-unit>
        <trans-unit id="7c1c89eb87f69044ed0749a01a118ed08d6e2ec8" translate="yes" xml:space="preserve">
          <source>By default, the serialization method used is internal to PHP, and is not the same as &lt;a href=&quot;function.serialize&quot;&gt;serialize()&lt;/a&gt;. The serialization method can be set using &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.serialize-handler&quot;&gt;session.serialize_handler&lt;/a&gt;.</source>
          <target state="translated">默认情况下，所使用的序列化方法在PHP内部，并且与&lt;a href=&quot;function.serialize&quot;&gt;serialize（）不同&lt;/a&gt;。可以使用&lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.serialize-handler&quot;&gt;session.serialize_handler&lt;/a&gt;设置序列化方法。</target>
        </trans-unit>
        <trans-unit id="6de6de86d566147825dcbfdbcdd7e0a39b9ad1d9" translate="yes" xml:space="preserve">
          <source>By default, the serialization method used is internal to PHP, and is not the same as &lt;a href=&quot;function.serialize&quot;&gt;serialize()&lt;/a&gt;. The serialization method can be set using &lt;a href=&quot;https://www.php.net/manual/en/session.configuration.php#ini.session.serialize-handler&quot;&gt;session.serialize_handler&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dfd35a1f6edd6c08fafb99b66a7d899094c50fd" translate="yes" xml:space="preserve">
          <source>By default, the sorted order is alphabetical in ascending order. If the optional &lt;code&gt;sorting_order&lt;/code&gt; is set to &lt;strong&gt;&lt;code&gt;SCANDIR_SORT_DESCENDING&lt;/code&gt;&lt;/strong&gt;, then the sort order is alphabetical in descending order. If it is set to &lt;strong&gt;&lt;code&gt;SCANDIR_SORT_NONE&lt;/code&gt;&lt;/strong&gt; then the result is unsorted.</source>
          <target state="translated">默认情况下，排序顺序按字母升序排列。如果可选的 &lt;code&gt;sorting_order&lt;/code&gt; 设置为&lt;strong&gt; &lt;code&gt;SCANDIR_SORT_DESCENDING&lt;/code&gt; &lt;/strong&gt;，则排序顺序按字母顺序降序排列。如果将其设置为&lt;strong&gt; &lt;code&gt;SCANDIR_SORT_NONE&lt;/code&gt; ,&lt;/strong&gt;则结果将不排序。</target>
        </trans-unit>
        <trans-unit id="123d816dfad7d78e08a342e2a0afd439f947f987" translate="yes" xml:space="preserve">
          <source>By default, the unserialization method used is internal to PHP, and is not the same as &lt;a href=&quot;function.unserialize&quot;&gt;unserialize()&lt;/a&gt;. The serialization method can be set using &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.serialize-handler&quot;&gt;session.serialize_handler&lt;/a&gt;.</source>
          <target state="translated">默认情况下，所使用的反序列化方法是PHP的内部方法，与&lt;a href=&quot;function.unserialize&quot;&gt;unserialize（）不同&lt;/a&gt;。可以使用&lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.serialize-handler&quot;&gt;session.serialize_handler&lt;/a&gt;设置序列化方法。</target>
        </trans-unit>
        <trans-unit id="2fbc4f5b331621b98bc07776a1ef7c5b36927edb" translate="yes" xml:space="preserve">
          <source>By default, the unserialization method used is internal to PHP, and is not the same as &lt;a href=&quot;function.unserialize&quot;&gt;unserialize()&lt;/a&gt;. The serialization method can be set using &lt;a href=&quot;https://www.php.net/manual/en/session.configuration.php#ini.session.serialize-handler&quot;&gt;session.serialize_handler&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbeb0b0e5ff899dd882bb10c5dbd61f5cf78d14c" translate="yes" xml:space="preserve">
          <source>By default, this value is &lt;a href=&quot;https://secure.php.net/manual/en/yaf.appconfig.php#configuration.yaf.directory&quot;&gt;application.directory&lt;/a&gt; . &quot;/library&quot;, you can change this either in the application.ini(application.library) or call to &lt;a href=&quot;yaf-loader.setlibrarypath&quot;&gt;Yaf_Loader::setLibraryPath()&lt;/a&gt;</source>
          <target state="translated">默认情况下，此值为&lt;a href=&quot;https://secure.php.net/manual/en/yaf.appconfig.php#configuration.yaf.directory&quot;&gt;application.directory&lt;/a&gt;。&amp;ldquo; / library&amp;rdquo;，您可以在application.ini（application.library）或调用&lt;a href=&quot;yaf-loader.setlibrarypath&quot;&gt;Yaf_Loader :: setLibraryPath（）中&lt;/a&gt;进行更改</target>
        </trans-unit>
        <trans-unit id="d75f1f84cdc335d588f0e286c90391dc991e8af4" translate="yes" xml:space="preserve">
          <source>By default, this value is &lt;a href=&quot;https://www.php.net/manual/en/yaf.appconfig.php#configuration.yaf.directory&quot;&gt;application.directory&lt;/a&gt; . &quot;/library&quot;, you can change this either in the application.ini(application.library) or call to &lt;a href=&quot;yaf-loader.setlibrarypath&quot;&gt;Yaf_Loader::setLibraryPath()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9d09812a7b4d1a752b6afb6cd5db416898af22" translate="yes" xml:space="preserve">
          <source>By default, variables are always assigned by value. That is to say, when you assign an expression to a variable, the entire value of the original expression is copied into the destination variable. This means, for instance, that after assigning one variable's value to another, changing one of those variables will have no effect on the other. For more information on this kind of assignment, see the chapter on &lt;a href=&quot;language.expressions&quot;&gt;Expressions&lt;/a&gt;.</source>
          <target state="translated">默认情况下，变量始终按值分配。也就是说，在将表达式分配给变量时，原始表达式的整个值都将复制到目标变量中。例如，这意味着将一个变量的值分配给另一个变量后，更改其中一个变量不会对另一个变量产生影响。有关此类分配的更多信息，请参见&amp;ldquo; &lt;a href=&quot;language.expressions&quot;&gt;表达式&lt;/a&gt; &amp;rdquo;一章。</target>
        </trans-unit>
        <trans-unit id="97159a7367ef9a7bbe42f04079cc94f3f0b86322" translate="yes" xml:space="preserve">
          <source>By default, warnings generated on a call to any SQLSRV function are treated as errors. This means that if a warning occurs on a call to a SQLSRV function, the function returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;. However, warnings that correspond to SQLSTATE values 01000, 01001, 01003, and 01S02 are never treated as errors. For information about changing this behavior, see &lt;a href=&quot;function.sqlsrv-configure&quot;&gt;sqlsrv_configure()&lt;/a&gt; and the WarningsReturnAsErrors setting.</source>
          <target state="translated">默认情况下，对任何SQLSRV函数的调用生成的警告均被视为错误。这意味着，如果在调用SQLSRV函数时发生警告，则该函数返回&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;。但是，与SQLSTATE值01000、01001、01003和01S02对应的警告永远不会被视为错误。有关更改此行为的信息，请参见&lt;a href=&quot;function.sqlsrv-configure&quot;&gt;sqlsrv_configure（）&lt;/a&gt;和WarningsReturnAsErrors设置。</target>
        </trans-unit>
        <trans-unit id="676d6276bc3cebea151341688575c29def8fcc0c" translate="yes" xml:space="preserve">
          <source>By default, warnings generated on a call to any SQLSRV function are treated as errors. This means that if a warning occurs on a call to a SQLSRV function, the function returns &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;. However, warnings that correspond to SQLSTATE values 01000, 01001, 01003, and 01S02 are never treated as errors. For information about changing this behavior, see &lt;a href=&quot;function.sqlsrv-configure&quot;&gt;sqlsrv_configure()&lt;/a&gt; and the WarningsReturnAsErrors setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca2fe8efb6e186bd40a2b4885864223bcaa295a" translate="yes" xml:space="preserve">
          <source>By default, when the bufferevent is set up to be threadsafe, the buffer event&amp;rsquo;s locks are held whenever the any user-provided callback is invoked. Setting this option makes Libevent release the buffer event&amp;rsquo;s lock when it&amp;rsquo;s invoking the callbacks.</source>
          <target state="translated">默认情况下，将bufferevent设置为线程安全时，只要调用任何用户提供的回调，缓冲区事件的锁就会被保存。设置此选项可使Libevent在调用回调时释放缓冲区事件的锁。</target>
        </trans-unit>
        <trans-unit id="f2e0a8f8ce40d8f751ee7d7daa87096df9c88c36" translate="yes" xml:space="preserve">
          <source>By invoking the methods provided by the NumberFormatter class, you can format numbers, currencies, and percentages according to the specified or default locale. NumberFormatter is locale-sensitive so you need to create a new NumberFormatter for each locale. NumberFormatter methods format primitive-type numbers, such as double and output the number as a locale-specific string.</source>
          <target state="translated">通过调用NumberFormatter类提供的方法,您可以根据指定的或默认的本地环境对数字、货币和百分比进行格式化。NumberFormatter是本地敏感的,因此您需要为每个本地语言创建一个新的NumberFormatter。NumberFormatter方法可以格式化基元类型的数字,如双数,并将数字输出为特定于本地的字符串。</target>
        </trans-unit>
        <trans-unit id="cdd0c7a7cfcd59853bd9e5de00c7b05ca28ae352" translate="yes" xml:space="preserve">
          <source>By ksorting patterns and replacements, we should get what we wanted.</source>
          <target state="translated">通过对模式的排序和替换,我们应该可以得到自己想要的东西。</target>
        </trans-unit>
        <trans-unit id="95250d23e3b3aec7999ef0ae89717ec66f784ed1" translate="yes" xml:space="preserve">
          <source>By passing a reference as third argument, &lt;strong&gt;similar_text()&lt;/strong&gt; will calculate the similarity in percent, by dividing the result of &lt;strong&gt;similar_text()&lt;/strong&gt; by the average of the lengths of the given strings times &lt;code&gt;100&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b1c2413fa3e0180121d5801a0397dc4f8b86c4" translate="yes" xml:space="preserve">
          <source>By passing a reference as third argument, &lt;strong&gt;similar_text()&lt;/strong&gt; will calculate the similarity in percent, by dividing the result of &lt;strong&gt;similar_text()&lt;/strong&gt; by the average of the lengths of the given strings times &lt;em&gt;100&lt;/em&gt;.</source>
          <target state="translated">通过将引用作为第三个参数传递，相&lt;strong&gt;类似的文本（）&lt;/strong&gt;将相似性的百分比计算出来，方法是将相类似的&lt;strong&gt;文本（）&lt;/strong&gt;的结果除以给定字符串长度的平均值乘以&lt;em&gt;100&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="f4c5bd9ef8fb63dc461a8baa1333de65e2c5d6a3" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;process_sections&lt;/code&gt; parameter to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, you get a multidimensional array, with the section names and settings included. The default for &lt;code&gt;process_sections&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">通过将 &lt;code&gt;process_sections&lt;/code&gt; 参数设置为&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;，您将获得一个多维数组，其中包含节名称和设置。 &lt;code&gt;process_sections&lt;/code&gt; 的默认值为&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c0f5f846857ad9a10670c98b17f377993a1c2d1a" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;process_sections&lt;/code&gt; parameter to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, you get a multidimensional array, with the section names and settings included. The default for &lt;code&gt;process_sections&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4588ef4c228d3c47deef3a8abad7c36006ed05e" translate="yes" xml:space="preserve">
          <source>By the way, if a stream is redirected, the VT100 feature will not be enabled:</source>
          <target state="translated">顺便说一下,如果一个流被重定向,VT100功能将不会被启用。</target>
        </trans-unit>
        <trans-unit id="c6dffbde0c88d676502311483d714de59be39193" translate="yes" xml:space="preserve">
          <source>By using the &lt;strong&gt;&lt;code&gt;MYSQLI_ASSOC&lt;/code&gt;&lt;/strong&gt; constant this function will behave identically to the &lt;a href=&quot;mysqli-result.fetch-assoc&quot;&gt;mysqli_fetch_assoc()&lt;/a&gt;, while &lt;strong&gt;&lt;code&gt;MYSQLI_NUM&lt;/code&gt;&lt;/strong&gt; will behave identically to the &lt;a href=&quot;mysqli-result.fetch-row&quot;&gt;mysqli_fetch_row()&lt;/a&gt; function. The final option &lt;strong&gt;&lt;code&gt;MYSQLI_BOTH&lt;/code&gt;&lt;/strong&gt; will create a single array with the attributes of both.</source>
          <target state="translated">通过使用&lt;strong&gt; &lt;code&gt;MYSQLI_ASSOC&lt;/code&gt; &lt;/strong&gt;常量，此函数的行为将与&lt;a href=&quot;mysqli-result.fetch-assoc&quot;&gt;mysqli_fetch_assoc（）&lt;/a&gt;相同，而&lt;strong&gt; &lt;code&gt;MYSQLI_NUM&lt;/code&gt; 的&lt;/strong&gt;行为将与&lt;a href=&quot;mysqli-result.fetch-row&quot;&gt;mysqli_fetch_row（）&lt;/a&gt;函数相同。最后一个选项&lt;strong&gt; &lt;code&gt;MYSQLI_BOTH&lt;/code&gt; &lt;/strong&gt;将创建具有两个属性的单个数组。</target>
        </trans-unit>
        <trans-unit id="7a55430aa0b32e8cc27151634b18595c30329ca1" translate="yes" xml:space="preserve">
          <source>Bypass routing, use direct interface.</source>
          <target state="translated">绕过路由,使用直接接口。</target>
        </trans-unit>
        <trans-unit id="bd54fbc5c8f77eb130d2eae8194a1dc534e440db" translate="yes" xml:space="preserve">
          <source>Byte 0 of $str has value 240</source>
          <target state="translated">$str的字节0值为240</target>
        </trans-unit>
        <trans-unit id="da11d3d90bf91771d1b63049b2c58c7ca00b1733" translate="yes" xml:space="preserve">
          <source>Byte 1 of $str has value 159</source>
          <target state="translated">$str的第1字节价值159</target>
        </trans-unit>
        <trans-unit id="bda09c9d53f983fb7cd80a5a69a71b7aec623e22" translate="yes" xml:space="preserve">
          <source>Byte 2 of $str has value 144</source>
          <target state="translated">$str的字节2价值144</target>
        </trans-unit>
        <trans-unit id="a3214bca431fab1d4994adf74b8714baf1b73957" translate="yes" xml:space="preserve">
          <source>Byte 3 of $str has value 152</source>
          <target state="translated">$str的第3个字节价值152</target>
        </trans-unit>
        <trans-unit id="f7b73a0fcfac4f07b981313e9814cffe00d453af" translate="yes" xml:space="preserve">
          <source>Byte position of the data start can be determined by the &lt;strong&gt;&lt;code&gt;__COMPILER_HALT_OFFSET__&lt;/code&gt;&lt;/strong&gt; constant which is defined only if there is a &lt;strong&gt;__halt_compiler()&lt;/strong&gt; presented in the file.</source>
          <target state="translated">数据开始的字节位置可由&lt;strong&gt; &lt;code&gt;__COMPILER_HALT_OFFSET__&lt;/code&gt; &lt;/strong&gt;常量确定，该常量仅在文件中存在&lt;strong&gt;__halt_compiler（）时&lt;/strong&gt;定义。</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="e26bbff46c39164d1523db69d78abdd87d6a20d8" translate="yes" xml:space="preserve">
          <source>C data type</source>
          <target state="translated">C数据类型</target>
        </trans-unit>
        <trans-unit id="15ae5b0651101bb95bb711349c1d9aa89053ef3d" translate="yes" xml:space="preserve">
          <source>C=U &quot;China&quot; &amp;lt; &quot;china&quot; &amp;lt; &quot;Denmark&quot; &amp;lt; &quot;denmark&quot;</source>
          <target state="translated">C = U&amp;ldquo;中国&amp;rdquo; &amp;lt;&amp;ldquo;中国&amp;rdquo; &amp;lt;&amp;ldquo;丹麦&amp;rdquo; &amp;lt;&amp;ldquo;丹麦&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="5ec0b0fa6c797bae61453a7c41a6ceea1ef8d192" translate="yes" xml:space="preserve">
          <source>C=X or C=L &quot;china&quot; &amp;lt; &quot;China&quot; &amp;lt; &quot;denmark&quot; &amp;lt; &quot;Denmark&quot;</source>
          <target state="translated">C = X或C = L&amp;ldquo; china&amp;rdquo; &amp;lt;&amp;ldquo; China&amp;rdquo; &amp;lt;&amp;ldquo; denmark&amp;rdquo; &amp;lt;&amp;ldquo;丹麦&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="09acbb7d1da8aa3daff4c1ec8076713606974c64" translate="yes" xml:space="preserve">
          <source>CA</source>
          <target state="translated">CA</target>
        </trans-unit>
        <trans-unit id="3deed788c8f1989da9a741179035e844c08a5380" translate="yes" xml:space="preserve">
          <source>CARDINALITY</source>
          <target state="translated">CARDINALITY</target>
        </trans-unit>
        <trans-unit id="4f018a87205caa741d195a0b69d3d55cd5c878a3" translate="yes" xml:space="preserve">
          <source>CASE_SENSITIVE</source>
          <target state="translated">CASE_SENSITIVE</target>
        </trans-unit>
        <trans-unit id="6f241490635bc4573269cad619298161d0dc3417" translate="yes" xml:space="preserve">
          <source>CC &quot;string&quot; - match messages with &quot;string&quot; in the Cc: field</source>
          <target state="translated">CC &quot;string&quot;-匹配Cc:字段中带有 &quot;string &quot;的邮件。</target>
        </trans-unit>
        <trans-unit id="473de9c20200b441d8e9ff3291cbe3ac40cf848d" translate="yes" xml:space="preserve">
          <source>CDATA node</source>
          <target state="translated">CDATA节点</target>
        </trans-unit>
        <trans-unit id="ef51a56a228c22c4d9eedb0635e47a3b4105a503" translate="yes" xml:space="preserve">
          <source>CDF</source>
          <target state="translated">CDF</target>
        </trans-unit>
        <trans-unit id="422f720e7d72716b7017e69268406be073cfc7c1" translate="yes" xml:space="preserve">
          <source>CGI</source>
          <target state="translated">CGI</target>
        </trans-unit>
        <trans-unit id="ae864c87730cd7628c03fc5248bfe290589af6c7" translate="yes" xml:space="preserve">
          <source>COLLATION</source>
          <target state="translated">COLLATION</target>
        </trans-unit>
        <trans-unit id="62f94c337a62422091eec8af220557bc9d2a0f7d" translate="yes" xml:space="preserve">
          <source>COLUMN_NAME</source>
          <target state="translated">COLUMN_NAME</target>
        </trans-unit>
        <trans-unit id="85bf293fa7977bf9a2fceb81d5ff23d16a3d8535" translate="yes" xml:space="preserve">
          <source>COLUMN_TYPE</source>
          <target state="translated">COLUMN_TYPE</target>
        </trans-unit>
        <trans-unit id="b1a13fadf51ef7eece7dea40c4b6e6e8042822d2" translate="yes" xml:space="preserve">
          <source>COMMENT</source>
          <target state="translated">COMMENT</target>
        </trans-unit>
        <trans-unit id="c52b56dab38211c04eda3b5b35db68636802626a" translate="yes" xml:space="preserve">
          <source>COMPUTED</source>
          <target state="translated">COMPUTED</target>
        </trans-unit>
        <trans-unit id="e2a19a8833b7f0a8aff34f17de8769715bcd1497" translate="yes" xml:space="preserve">
          <source>CONNECT method(command)</source>
          <target state="translated">CONNECT方法(命令)</target>
        </trans-unit>
        <trans-unit id="59809cd2f8cfc6eb5b75df42ac5f352194035f76" translate="yes" xml:space="preserve">
          <source>CREATE_PARAMS</source>
          <target state="translated">CREATE_PARAMS</target>
        </trans-unit>
        <trans-unit id="e9930779c5261c7ed2145635a1a6903e209530cc" translate="yes" xml:space="preserve">
          <source>CREDITS_ALL</source>
          <target state="translated">CREDITS_ALL</target>
        </trans-unit>
        <trans-unit id="3a4e2a592e757a94e0cd16ee926be58e79597d40" translate="yes" xml:space="preserve">
          <source>CREDITS_DOCS</source>
          <target state="translated">CREDITS_DOCS</target>
        </trans-unit>
        <trans-unit id="1386334ecc1c3a3bc278c4f28789336cc6b5c918" translate="yes" xml:space="preserve">
          <source>CREDITS_FULLPAGE</source>
          <target state="translated">CREDITS_FULLPAGE</target>
        </trans-unit>
        <trans-unit id="81f4c06c5c7a9bd5e1c29570c4f90a58b2ecf8bb" translate="yes" xml:space="preserve">
          <source>CREDITS_GENERAL</source>
          <target state="translated">CREDITS_GENERAL</target>
        </trans-unit>
        <trans-unit id="621324d2a5d85f404e4783a442a8dcb5a84935cc" translate="yes" xml:space="preserve">
          <source>CREDITS_GROUP</source>
          <target state="translated">CREDITS_GROUP</target>
        </trans-unit>
        <trans-unit id="d9dccca18efe5e92dbe43a6adb9cfb9bac53ab0a" translate="yes" xml:space="preserve">
          <source>CREDITS_MODULES</source>
          <target state="translated">CREDITS_MODULES</target>
        </trans-unit>
        <trans-unit id="74fc6685733696fb8d40efa2246d72f22d6c23b5" translate="yes" xml:space="preserve">
          <source>CREDITS_SAPI</source>
          <target state="translated">CREDITS_SAPI</target>
        </trans-unit>
        <trans-unit id="735ffe35e5c4accf5861ee1426147bc32137a32a" translate="yes" xml:space="preserve">
          <source>CSPRNG</source>
          <target state="translated">CSPRNG</target>
        </trans-unit>
        <trans-unit id="3281188351b89c8e2db28d6da7af4992d415de90" translate="yes" xml:space="preserve">
          <source>CSV</source>
          <target state="translated">CSV</target>
        </trans-unit>
        <trans-unit id="f059787bf5f61c5d938038dd4915a554f79a962e" translate="yes" xml:space="preserve">
          <source>CURLFile &amp;rarr;</source>
          <target state="translated">CURLFile&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="ba333b17e24817f8dc282c25fd53e4c848498108" translate="yes" xml:space="preserve">
          <source>CURLFile (class)</source>
          <target state="translated">CURLFile(类)</target>
        </trans-unit>
        <trans-unit id="98a27a13bcde4e03d98cc9c221637f3b27c2ead1" translate="yes" xml:space="preserve">
          <source>CURLFile is not serializable.</source>
          <target state="translated">CURLFile是不可序列化的。</target>
        </trans-unit>
        <trans-unit id="45f8b70b47294599f142975f164f5d77fee0e235" translate="yes" xml:space="preserve">
          <source>CURLFile::__construct</source>
          <target state="translated">CURLFile::__construct</target>
        </trans-unit>
        <trans-unit id="7648519a3583c3aaeb8d53e8c4600831cad30760" translate="yes" xml:space="preserve">
          <source>CURLFile::__construct &amp;rarr;</source>
          <target state="translated">CURLFile :: __ construct&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="a2dfa7ccfde471c4b670e833f4ef676008cf24e1" translate="yes" xml:space="preserve">
          <source>CURLFile::__construct -- curl_file_create &amp;mdash; Create a CURLFile object</source>
          <target state="translated">CURLFile :: __ construct-curl_file_create &amp;mdash;创建一个CURLFile对象</target>
        </trans-unit>
        <trans-unit id="bc673b31f02d1c11e6ba8e60b0c24ff90f743084" translate="yes" xml:space="preserve">
          <source>CURLFile::__wakeup</source>
          <target state="translated">CURLFile::__wakeup</target>
        </trans-unit>
        <trans-unit id="24f5902f9be51285ca851d02216786d6af7e9c66" translate="yes" xml:space="preserve">
          <source>CURLFile::__wakeup &amp;mdash; Unserialization handler</source>
          <target state="translated">CURLFile :: __ wakeup &amp;mdash;反序列化​​处理程序</target>
        </trans-unit>
        <trans-unit id="ca6363cbeb575d1b5d1a9601e5a4ab67de496ca2" translate="yes" xml:space="preserve">
          <source>CURLFile::__wakeup &amp;rarr;</source>
          <target state="translated">CURLFile :: __唤醒&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="5834c4975c8b77a6734fba0d91363173b616deeb" translate="yes" xml:space="preserve">
          <source>CURLFile::getFilename</source>
          <target state="translated">CURLFile::getFilename</target>
        </trans-unit>
        <trans-unit id="1c012bec63cb31257fe51fb1341c6be1ac888e5a" translate="yes" xml:space="preserve">
          <source>CURLFile::getFilename &amp;mdash; Get file name</source>
          <target state="translated">CURLFile :: getFilename &amp;mdash;获取文件名</target>
        </trans-unit>
        <trans-unit id="1c4e385a2a0f9531c81c192c522aa8bf83d98e6e" translate="yes" xml:space="preserve">
          <source>CURLFile::getFilename &amp;rarr;</source>
          <target state="translated">CURLFile :: getFilename&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="2919558990f9c00c38c7f47a298ea632e3a649ff" translate="yes" xml:space="preserve">
          <source>CURLFile::getMimeType</source>
          <target state="translated">CURLFile::getMimeType</target>
        </trans-unit>
        <trans-unit id="28b88c2147a1e6369077102aac847d8753bc51b4" translate="yes" xml:space="preserve">
          <source>CURLFile::getMimeType &amp;mdash; Get MIME type</source>
          <target state="translated">CURLFile :: getMimeType &amp;mdash;获取MIME类型</target>
        </trans-unit>
        <trans-unit id="d0dbaf5ceda39320684079b630dcbde4f9bf2ec9" translate="yes" xml:space="preserve">
          <source>CURLFile::getMimeType &amp;rarr;</source>
          <target state="translated">CURLFile :: getMimeType&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="350a81f16168aa37a7d855462e10b9995b5ec9bf" translate="yes" xml:space="preserve">
          <source>CURLFile::getPostFilename</source>
          <target state="translated">CURLFile::getPostFilename</target>
        </trans-unit>
        <trans-unit id="ba14cf21da1e09d01461decd08fb10a1ac885f33" translate="yes" xml:space="preserve">
          <source>CURLFile::getPostFilename &amp;mdash; Get file name for POST</source>
          <target state="translated">CURLFile :: getPostFilename &amp;mdash;获取POST的文件名</target>
        </trans-unit>
        <trans-unit id="2d7570efb5ad07af510e08082adfd00cbe5d3d36" translate="yes" xml:space="preserve">
          <source>CURLFile::getPostFilename &amp;rarr;</source>
          <target state="translated">CURLFile :: getPostFilename&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="5518317e24c89dca581026ede6d146c2acc26e0a" translate="yes" xml:space="preserve">
          <source>CURLFile::setMimeType</source>
          <target state="translated">CURLFile::setMimeType</target>
        </trans-unit>
        <trans-unit id="fdccd06d60447c7cad016475ed639f9984f667ff" translate="yes" xml:space="preserve">
          <source>CURLFile::setMimeType &amp;mdash; Set MIME type</source>
          <target state="translated">CURLFile :: setMimeType &amp;mdash;设置MIME类型</target>
        </trans-unit>
        <trans-unit id="a1db1938986d6d7d26bda0e618de75eee4787de4" translate="yes" xml:space="preserve">
          <source>CURLFile::setMimeType &amp;rarr;</source>
          <target state="translated">CURLFile :: setMimeType&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="be27b5ccf337148d32ff14ae81560e54868a7bc5" translate="yes" xml:space="preserve">
          <source>CURLFile::setPostFilename</source>
          <target state="translated">CURLFile::setPostFilename</target>
        </trans-unit>
        <trans-unit id="1ef9fa380ccb2db402986abba5705ea8dc78d460" translate="yes" xml:space="preserve">
          <source>CURLFile::setPostFilename &amp;mdash; Set file name for POST</source>
          <target state="translated">CURLFile :: setPostFilename &amp;mdash;设置POST的文件名</target>
        </trans-unit>
        <trans-unit id="c9eb35b9da1fdde489c80e719d095dd753024487" translate="yes" xml:space="preserve">
          <source>CURLFile::setPostFilename &amp;rarr;</source>
          <target state="translated">CURLFile :: setPostFilename&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="024c3a9dd02f230fb337ab36b557c3ab0df9b816" translate="yes" xml:space="preserve">
          <source>Cable/DSL</source>
          <target state="translated">Cable/DSL</target>
        </trans-unit>
        <trans-unit id="094fade00937a6db88ef6a3d1262541c78a4a7a7" translate="yes" xml:space="preserve">
          <source>Cache a variable in the data store.</source>
          <target state="translated">在数据存储中缓存一个变量。</target>
        </trans-unit>
        <trans-unit id="6e81ac9735274dc624a6be14ccdb734d19d5896f" translate="yes" xml:space="preserve">
          <source>Cache all read data.</source>
          <target state="translated">缓存所有读取数据。</target>
        </trans-unit>
        <trans-unit id="756a4331e0795831ea8db0b1acbb3501fed8f24b" translate="yes" xml:space="preserve">
          <source>Caches a variable in the data store, only if it's not already stored.</source>
          <target state="translated">缓存数据存储中的一个变量,只有当它还没有被存储时才会被缓存。</target>
        </trans-unit>
        <trans-unit id="ade4cff91053886046f1e38f076854af746d6d12" translate="yes" xml:space="preserve">
          <source>CachingIterator &amp;rarr;</source>
          <target state="translated">CachingIterator&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="0c450dcc84dc1899daebe92289b4b8ecea25e863" translate="yes" xml:space="preserve">
          <source>CachingIterator (class)</source>
          <target state="translated">缓存迭代器</target>
        </trans-unit>
        <trans-unit id="4c03a28afa389d23f894a55c96c1eac67951fda4" translate="yes" xml:space="preserve">
          <source>CachingIterator::__construct</source>
          <target state="translated">CachingIterator::__construct</target>
        </trans-unit>
        <trans-unit id="54b895c6da33cbd0eab4e6e581949877ae5ecfe5" translate="yes" xml:space="preserve">
          <source>CachingIterator::__construct &amp;mdash; Construct a new CachingIterator object for the iterator</source>
          <target state="translated">CachingIterator :: __ construct &amp;mdash;为迭代器构造一个新的CachingIterator对象</target>
        </trans-unit>
        <trans-unit id="46606028e14313549f1919dfa48806232a1e56a4" translate="yes" xml:space="preserve">
          <source>CachingIterator::__construct &amp;rarr;</source>
          <target state="translated">CachingIterator :: __ construct&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="7482c273358c3f0b74a24ed11af28fe264b8cbd2" translate="yes" xml:space="preserve">
          <source>CachingIterator::__toString</source>
          <target state="translated">CachingIterator::__toString</target>
        </trans-unit>
        <trans-unit id="0ed25c23c89913b8f228d6c34d2c8a3882dc7aa9" translate="yes" xml:space="preserve">
          <source>CachingIterator::__toString &amp;mdash; Return the string representation of the current element</source>
          <target state="translated">CachingIterator :: __toString &amp;mdash;返回当前元素的字符串表示形式</target>
        </trans-unit>
        <trans-unit id="83b7c57c14a396f8237dc8f018872026778ef348" translate="yes" xml:space="preserve">
          <source>CachingIterator::__toString &amp;rarr;</source>
          <target state="translated">CachingIterator :: __ toString&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="a72bcfa6550e2d5f3e60710c74500b2447f8d734" translate="yes" xml:space="preserve">
          <source>CachingIterator::count</source>
          <target state="translated">CachingIterator::count</target>
        </trans-unit>
        <trans-unit id="a25625120ca421cc5e64fbbb0e422b5298449771" translate="yes" xml:space="preserve">
          <source>CachingIterator::count &amp;mdash; The number of elements in the iterator</source>
          <target state="translated">CachingIterator :: count &amp;mdash;迭代器中的元素数</target>
        </trans-unit>
        <trans-unit id="424cca5987f69a31b0753c203cbb35bc47bc6ce3" translate="yes" xml:space="preserve">
          <source>CachingIterator::count &amp;rarr;</source>
          <target state="translated">CachingIterator :: count&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="c04f8b8b53de277cee638a8ed4f034c584a124b9" translate="yes" xml:space="preserve">
          <source>CachingIterator::current</source>
          <target state="translated">CachingIterator::current</target>
        </trans-unit>
        <trans-unit id="8593b286f7c43376f34a8869b3febd3beee5ed82" translate="yes" xml:space="preserve">
          <source>CachingIterator::current &amp;mdash; Return the current element</source>
          <target state="translated">CachingIterator :: current &amp;mdash;返回当前元素</target>
        </trans-unit>
        <trans-unit id="6d0af1c7e01de2eb9afe887ed3e36f6fb166ee54" translate="yes" xml:space="preserve">
          <source>CachingIterator::current &amp;rarr;</source>
          <target state="translated">CachingIterator :: current&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="9de255da15aa10118599464659996f2304ce899b" translate="yes" xml:space="preserve">
          <source>CachingIterator::getCache</source>
          <target state="translated">CachingIterator::getCache</target>
        </trans-unit>
        <trans-unit id="ca6b3b35a52fa1c88d4942a426a05f1dbf77479b" translate="yes" xml:space="preserve">
          <source>CachingIterator::getCache &amp;mdash; Retrieve the contents of the cache</source>
          <target state="translated">CachingIterator :: getCache &amp;mdash;检索缓存的内容</target>
        </trans-unit>
        <trans-unit id="a80e5c61897ca7885315591591591b8946cb0eb8" translate="yes" xml:space="preserve">
          <source>CachingIterator::getCache &amp;rarr;</source>
          <target state="translated">CachingIterator :: getCache&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="3f099c987a5ae944dc561b873e5afdcfd8da3235" translate="yes" xml:space="preserve">
          <source>CachingIterator::getFlags</source>
          <target state="translated">CachingIterator::getFlags</target>
        </trans-unit>
        <trans-unit id="cdc40414f58ed6cab7c9e24539fccb92f48a0b5c" translate="yes" xml:space="preserve">
          <source>CachingIterator::getFlags &amp;mdash; Get flags used</source>
          <target state="translated">CachingIterator :: getFlags &amp;mdash;获取使用的标志</target>
        </trans-unit>
        <trans-unit id="bc0fe41f8107a26a6e4713d6e42228bdc7714be0" translate="yes" xml:space="preserve">
          <source>CachingIterator::getFlags &amp;rarr;</source>
          <target state="translated">CachingIterator :: getFlags&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="0ca46144947eb32387d7b8ab9bd6839b5ce1a2ae" translate="yes" xml:space="preserve">
          <source>CachingIterator::getInnerIterator</source>
          <target state="translated">CachingIterator::getInnerIterator</target>
        </trans-unit>
        <trans-unit id="db7ee3f9e8cd244f8e7adbe4b4ae8957a05873ec" translate="yes" xml:space="preserve">
          <source>CachingIterator::getInnerIterator &amp;mdash; Returns the inner iterator</source>
          <target state="translated">CachingIterator :: getInnerIterator &amp;mdash;返回内部迭代器</target>
        </trans-unit>
        <trans-unit id="b63a3c716527ad1f625d19921d79d4f981c30931" translate="yes" xml:space="preserve">
          <source>CachingIterator::getInnerIterator &amp;rarr;</source>
          <target state="translated">CachingIterator :: getInnerIterator&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e4b3c0711367162e599449cecc002c653d69d9ee" translate="yes" xml:space="preserve">
          <source>CachingIterator::hasNext</source>
          <target state="translated">CachingIterator::hasNext</target>
        </trans-unit>
        <trans-unit id="9146f4c72051e8e3834d9bd667317844888b6670" translate="yes" xml:space="preserve">
          <source>CachingIterator::hasNext &amp;mdash; Check whether the inner iterator has a valid next element</source>
          <target state="translated">CachingIterator :: hasNext &amp;mdash;检查内部迭代器是否具有有效的next元素</target>
        </trans-unit>
        <trans-unit id="348097748ff3cb7df74b30bc4b8e0ed22e959493" translate="yes" xml:space="preserve">
          <source>CachingIterator::hasNext &amp;rarr;</source>
          <target state="translated">CachingIterator :: hasNext&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="beae405e63804d62ddc6a59cf41bbc71bdbf3ab8" translate="yes" xml:space="preserve">
          <source>CachingIterator::key</source>
          <target state="translated">CachingIterator::key</target>
        </trans-unit>
        <trans-unit id="18e04c9e028770a1bf156a1ad8fe2df7d55c079c" translate="yes" xml:space="preserve">
          <source>CachingIterator::key &amp;mdash; Return the key for the current element</source>
          <target state="translated">CachingIterator :: key &amp;mdash;返回当前元素的密钥</target>
        </trans-unit>
        <trans-unit id="11a88afac7c27656013b0790e676cb3c5fd58b88" translate="yes" xml:space="preserve">
          <source>CachingIterator::key &amp;rarr;</source>
          <target state="translated">CachingIterator :: key&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="8aa20aeab4cf0c7c36fb6e2e1ee4c1288022fb03" translate="yes" xml:space="preserve">
          <source>CachingIterator::next</source>
          <target state="translated">CachingIterator::next</target>
        </trans-unit>
        <trans-unit id="3ec6c78b6877d5c6d6069f4fcff8dece1bfee4d6" translate="yes" xml:space="preserve">
          <source>CachingIterator::next &amp;mdash; Move the iterator forward</source>
          <target state="translated">CachingIterator :: next &amp;mdash;向前移动迭代器</target>
        </trans-unit>
        <trans-unit id="dd4a7d2fa0688e7639e58dddb7094e7f693b1bd1" translate="yes" xml:space="preserve">
          <source>CachingIterator::next &amp;rarr;</source>
          <target state="translated">CachingIterator :: next&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="ac72926db1ab75eee508beea0574f51cc4049787" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetExists</source>
          <target state="translated">CachingIterator::offsetExists</target>
        </trans-unit>
        <trans-unit id="28ae4bc65bb94f03100c0eb19aaeaceaca6d534f" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetExists &amp;mdash; The offsetExists purpose</source>
          <target state="translated">CachingIterator :: offsetExists &amp;mdash; offsetExists目的</target>
        </trans-unit>
        <trans-unit id="202673d2b18c6b3d160c85622b1d9b652d82f12c" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetExists &amp;rarr;</source>
          <target state="translated">CachingIterator :: offsetExists&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="8a9166ceadfc350ef1d9910bc204decd92ca59ba" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetGet</source>
          <target state="translated">CachingIterator::offsetGet</target>
        </trans-unit>
        <trans-unit id="bbbc1bac237df6ad02acf6d768bce7a59d0cd0b0" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetGet &amp;mdash; The offsetGet purpose</source>
          <target state="translated">CachingIterator :: offsetGet &amp;mdash; offsetGet目的</target>
        </trans-unit>
        <trans-unit id="9aeb1ce3fdc5bf8c3beef468c4727b22cfbecfb9" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetGet &amp;rarr;</source>
          <target state="translated">CachingIterator :: offsetGet&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="a1a8ff282adf4520ee604a4cef79cbeeb63cadea" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetSet</source>
          <target state="translated">CachingIterator::offsetSet</target>
        </trans-unit>
        <trans-unit id="cb418b4c230c251a2c41a393a7856c0311a792d1" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetSet &amp;mdash; The offsetSet purpose</source>
          <target state="translated">CachingIterator :: offsetSet &amp;mdash; offsetSet的目的</target>
        </trans-unit>
        <trans-unit id="1d7d37075e389ffbf810a339874e63165ee7dc21" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetSet &amp;rarr;</source>
          <target state="translated">CachingIterator :: offsetSet&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="6a18219fb5ab967834c2c936d17d24c0ea26e2c6" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetUnset</source>
          <target state="translated">CachingIterator::offsetUnset</target>
        </trans-unit>
        <trans-unit id="ecee3a60c9fddcdcd46b191e82a947cce8840f7d" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetUnset &amp;mdash; The offsetUnset purpose</source>
          <target state="translated">CachingIterator :: offsetUnset &amp;mdash; offsetUnset用途</target>
        </trans-unit>
        <trans-unit id="4da9d939630f8cda503738ecc71c5cca8d5f0eba" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetUnset &amp;rarr;</source>
          <target state="translated">CachingIterator :: offsetUnset&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="c2bf6117007a07cf1f8196af8d5fc2ea6bd3b6d7" translate="yes" xml:space="preserve">
          <source>CachingIterator::rewind</source>
          <target state="translated">CachingIterator::rewind</target>
        </trans-unit>
        <trans-unit id="b13a1549c8371550d73dd43a53c47936d1faf576" translate="yes" xml:space="preserve">
          <source>CachingIterator::rewind &amp;mdash; Rewind the iterator</source>
          <target state="translated">CachingIterator :: rewind &amp;mdash;倒退迭代器</target>
        </trans-unit>
        <trans-unit id="041603b7968c012dd6729b6521fcef164984efa8" translate="yes" xml:space="preserve">
          <source>CachingIterator::rewind &amp;rarr;</source>
          <target state="translated">CachingIterator ::倒带&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="2741074e370ee687d88cc2f84543ff82198104d4" translate="yes" xml:space="preserve">
          <source>CachingIterator::setFlags</source>
          <target state="translated">CachingIterator::setFlags</target>
        </trans-unit>
        <trans-unit id="a5bd8823b43992ff719e677caad57c07382ca6ae" translate="yes" xml:space="preserve">
          <source>CachingIterator::setFlags &amp;mdash; The setFlags purpose</source>
          <target state="translated">CachingIterator :: setFlags &amp;mdash; setFlags的目的</target>
        </trans-unit>
        <trans-unit id="d96e6f59acf937afad2a364a98b6102eacf81a37" translate="yes" xml:space="preserve">
          <source>CachingIterator::setFlags &amp;rarr;</source>
          <target state="translated">CachingIterator :: setFlags&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="5eb3606d4f1d77a7228181bddab51ca07bb5dcbc" translate="yes" xml:space="preserve">
          <source>CachingIterator::valid</source>
          <target state="translated">CachingIterator::valid</target>
        </trans-unit>
        <trans-unit id="b49a1af3d785721d1ae98bd022812f9a1676e6a0" translate="yes" xml:space="preserve">
          <source>CachingIterator::valid &amp;mdash; Check whether the current element is valid</source>
          <target state="translated">CachingIterator :: valid &amp;mdash;检查当前元素是否有效</target>
        </trans-unit>
        <trans-unit id="63b8be066133330e7b39d4f4b78be68cc722f1c0" translate="yes" xml:space="preserve">
          <source>CachingIterator::valid &amp;rarr;</source>
          <target state="translated">CachingIterator :: valid&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="2a96aae34ffee9c858e43e9820bbbdb9242a459b" translate="yes" xml:space="preserve">
          <source>Calculate (&lt;code&gt;base&lt;/code&gt; raised into power &lt;code&gt;exp&lt;/code&gt;) modulo &lt;code&gt;mod&lt;/code&gt;. If &lt;code&gt;exp&lt;/code&gt; is negative, result is undefined.</source>
          <target state="translated">计算（ &lt;code&gt;base&lt;/code&gt; 升高到功率 &lt;code&gt;exp&lt;/code&gt; ）模 &lt;code&gt;mod&lt;/code&gt; 。如果 &lt;code&gt;exp&lt;/code&gt; 为负，则结果不确定。</target>
        </trans-unit>
        <trans-unit id="3823662bb467ab4756d3fef7cc54123ea7a8eb67" translate="yes" xml:space="preserve">
          <source>Calculate (&lt;code&gt;num&lt;/code&gt; raised into power &lt;code&gt;exponent&lt;/code&gt;) modulo &lt;code&gt;modulus&lt;/code&gt;. If &lt;code&gt;exponent&lt;/code&gt; is negative, result is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0121f09ee5aa3588fdce09c70caac46d18a71d52" translate="yes" xml:space="preserve">
          <source>Calculate greatest common divisor of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. The result is always positive even if either of, or both, input operands are negative.</source>
          <target state="translated">计算 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 的最大公约数。即使输入操作数之一或全部为负，结果始终为正。</target>
        </trans-unit>
        <trans-unit id="70e0a43da71418036b0296438d378d60a0dc2015" translate="yes" xml:space="preserve">
          <source>Calculate greatest common divisor of &lt;code&gt;num1&lt;/code&gt; and &lt;code&gt;num2&lt;/code&gt;. The result is always positive even if either of, or both, input operands are negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65eeff0d7d17d82607ded2ffb4137f5a209f766" translate="yes" xml:space="preserve">
          <source>Calculate the square root of a number, with remainder.</source>
          <target state="translated">计算一个数的平方根,有余数。</target>
        </trans-unit>
        <trans-unit id="f38c48d5b30cf18c75bd6fc53a9541b99b7ba6a1" translate="yes" xml:space="preserve">
          <source>Calculated length of the hypotenuse</source>
          <target state="translated">计算的斜边长度</target>
        </trans-unit>
        <trans-unit id="c2ee997a35893717f636eb096178d5408603704b" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;n&lt;/code&gt; modulo &lt;code&gt;d&lt;/code&gt;. The result is always non-negative, the sign of &lt;code&gt;d&lt;/code&gt; is ignored.</source>
          <target state="translated">计算 &lt;code&gt;n&lt;/code&gt; 模 &lt;code&gt;d&lt;/code&gt; 。结果总是非负的， &lt;code&gt;d&lt;/code&gt; 的符号被忽略。</target>
        </trans-unit>
        <trans-unit id="f9b8800aea998f87cd81361f23b86a98039a0d57" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;num1&lt;/code&gt; modulo &lt;code&gt;num2&lt;/code&gt;. The result is always non-negative, the sign of &lt;code&gt;num2&lt;/code&gt; is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c88d1bdecaef4e258f2d327403282db2616adc0" translate="yes" xml:space="preserve">
          <source>Calculates bitwise AND of two GMP numbers.</source>
          <target state="translated">计算两个GMP数字的位与位。</target>
        </trans-unit>
        <trans-unit id="90b63546ff87a6bc6e2dd01a4ca8a89658e7d1d3" translate="yes" xml:space="preserve">
          <source>Calculates bitwise exclusive OR (XOR) of two GMP numbers.</source>
          <target state="translated">计算两个GMP数字的位独占OR(XOR)。</target>
        </trans-unit>
        <trans-unit id="19c679c69deef614118add607774bf8b333da5f4" translate="yes" xml:space="preserve">
          <source>Calculates bitwise inclusive OR of two GMP numbers.</source>
          <target state="translated">计算两个GMP数的位上包容OR。</target>
        </trans-unit>
        <trans-unit id="f8208a1e1beda3e9a9e1e53f49d281592ba484ad" translate="yes" xml:space="preserve">
          <source>Calculates factorial (&lt;code&gt;num!&lt;/code&gt;) of &lt;code&gt;num&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c507230dd9728f567273a9bcdb7c28aa68120b" translate="yes" xml:space="preserve">
          <source>Calculates factorial (&lt;em&gt;a!&lt;/em&gt;) of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">计算阶乘（&lt;em&gt;一！&lt;/em&gt;）的 &lt;code&gt;a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21632c64e96e33f44d8078463f1df561257b9cfa" translate="yes" xml:space="preserve">
          <source>Calculates g, s, and t, such that &lt;code&gt;a*s + b*t = g =
   gcd(a,b)&lt;/code&gt;, where gcd is the greatest common divisor. Returns an array with respective elements g, s and t.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224bd35cbfa7883264c4dbd1f570d8d36b0a5205" translate="yes" xml:space="preserve">
          <source>Calculates g, s, and t, such that &lt;em&gt;a*s + b*t = g = gcd(a,b)&lt;/em&gt;, where gcd is the greatest common divisor. Returns an array with respective elements g, s and t.</source>
          <target state="translated">计算g，s和t，使&lt;em&gt;a * s + b * t = g = gcd（a，b）&lt;/em&gt;，其中gcd是最大公约数。返回包含元素g，s和t的数组。</target>
        </trans-unit>
        <trans-unit id="65aee4c203d130d849e3a92c9444e4cb21feb0bd" translate="yes" xml:space="preserve">
          <source>Calculates remainder of the integer division of &lt;code&gt;n&lt;/code&gt; by &lt;code&gt;d&lt;/code&gt;. The remainder has the sign of the &lt;code&gt;n&lt;/code&gt; argument, if not zero.</source>
          <target state="translated">计算 &lt;code&gt;n&lt;/code&gt; 除以 &lt;code&gt;d&lt;/code&gt; 的整数除法的余数。其余部分带有 &lt;code&gt;n&lt;/code&gt; 参数的符号（如果不为零）。</target>
        </trans-unit>
        <trans-unit id="e3d1982a191f5bd18d94ed3a0c70c0641447b501" translate="yes" xml:space="preserve">
          <source>Calculates remainder of the integer division of &lt;code&gt;num1&lt;/code&gt; by &lt;code&gt;num2&lt;/code&gt;. The remainder has the sign of the &lt;code&gt;num1&lt;/code&gt; argument, if not zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2070431392608e59984c516f311538d1000f345f" translate="yes" xml:space="preserve">
          <source>Calculates square root of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">计算平方根 &lt;code&gt;a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7f445f261b999a07f804440819b2e294dede51d" translate="yes" xml:space="preserve">
          <source>Calculates square root of &lt;code&gt;num&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb7fa366cb845fb81c79935f0bb754f606944bb" translate="yes" xml:space="preserve">
          <source>Calculates the MD5 hash of &lt;code&gt;str&lt;/code&gt; using the &lt;a href=&quot;http://www.faqs.org/rfcs/rfc1321&quot;&gt;&amp;raquo; RSA Data Security, Inc. MD5 Message-Digest Algorithm&lt;/a&gt;, and returns that hash.</source>
          <target state="translated">使用&lt;a href=&quot;http://www.faqs.org/rfcs/rfc1321&quot;&gt;&amp;raquo;RSA Data Security，Inc. MD5消息摘要算法&lt;/a&gt;计算 &lt;code&gt;str&lt;/code&gt; 的MD5哈希，并返回该哈希。</target>
        </trans-unit>
        <trans-unit id="36bf99a8155c35ed8fa071e4a5e631763e385f87" translate="yes" xml:space="preserve">
          <source>Calculates the MD5 hash of &lt;code&gt;string&lt;/code&gt; using the &lt;a href=&quot;http://www.faqs.org/rfcs/rfc1321&quot;&gt;&amp;raquo; RSA Data Security, Inc. MD5 Message-Digest Algorithm&lt;/a&gt;, and returns that hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcaad6c8b6f422457f2f13f26e0bc3796bd81d9f" translate="yes" xml:space="preserve">
          <source>Calculates the MD5 hash of the file specified by the &lt;code&gt;filename&lt;/code&gt; parameter using the &lt;a href=&quot;http://www.faqs.org/rfcs/rfc1321&quot;&gt;&amp;raquo; RSA Data Security, Inc. MD5 Message-Digest Algorithm&lt;/a&gt;, and returns that hash. The hash is a 32-character hexadecimal number.</source>
          <target state="translated">使用&lt;a href=&quot;http://www.faqs.org/rfcs/rfc1321&quot;&gt;&amp;raquo;RSA Data Security，Inc. MD5消息摘要算法&lt;/a&gt;，计算 &lt;code&gt;filename&lt;/code&gt; 参数指定的文件的MD5哈希，并返回该哈希。哈希是32个字符的十六进制数字。</target>
        </trans-unit>
        <trans-unit id="b8d93b01939f9c5b9ac29b45c8a0e2fa4d79f829" translate="yes" xml:space="preserve">
          <source>Calculates the binomial coefficient C(n, k).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fad9e60170ec155ad8b1aad267bd014ed118742" translate="yes" xml:space="preserve">
          <source>Calculates the group access list for the user specified in name.</source>
          <target state="translated">计算名称中指定的用户的组访问列表。</target>
        </trans-unit>
        <trans-unit id="248c1b7749d59f6849eb239a04b207e5c9aade74" translate="yes" xml:space="preserve">
          <source>Calculates the match score between &lt;code&gt;signature1&lt;/code&gt; and &lt;code&gt;signature2&lt;/code&gt; using &lt;a href=&quot;http://dfrws.org/2006/proceedings/12-Kornblum.pdf&quot;&gt;&amp;raquo; context-triggered piecewise hashing&lt;/a&gt;, and returns the match score.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4e6e830f430c608eae7cb8ac2f1ccc0fd8df8a" translate="yes" xml:space="preserve">
          <source>Calculates the metaphone key of &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">计算 &lt;code&gt;str&lt;/code&gt; 的变音键。</target>
        </trans-unit>
        <trans-unit id="f4d9ad18cbfb490c2992055e35e669e5a426be64" translate="yes" xml:space="preserve">
          <source>Calculates the metaphone key of &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbe4722499e48135a44a6bb73c5e213c129dae88" translate="yes" xml:space="preserve">
          <source>Calculates the sha1 hash of &lt;code&gt;str&lt;/code&gt; using the &lt;a href=&quot;http://www.faqs.org/rfcs/rfc3174&quot;&gt;&amp;raquo; US Secure Hash Algorithm 1&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;http://www.faqs.org/rfcs/rfc3174&quot;&gt;&amp;raquo;美国安全哈希算法1&lt;/a&gt;计算 &lt;code&gt;str&lt;/code&gt; 的sha1哈希。</target>
        </trans-unit>
        <trans-unit id="c81a8c72e839dbe875b444efef6df4537006d744" translate="yes" xml:space="preserve">
          <source>Calculates the sha1 hash of &lt;code&gt;string&lt;/code&gt; using the &lt;a href=&quot;http://www.faqs.org/rfcs/rfc3174&quot;&gt;&amp;raquo; US Secure Hash Algorithm 1&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f511b31b012d361a57546110bb8d3df1c1bb67" translate="yes" xml:space="preserve">
          <source>Calculates the sha1 hash of the file specified by &lt;code&gt;filename&lt;/code&gt; using the &lt;a href=&quot;http://www.faqs.org/rfcs/rfc3174&quot;&gt;&amp;raquo; US Secure Hash Algorithm 1&lt;/a&gt;, and returns that hash. The hash is a 40-character hexadecimal number.</source>
          <target state="translated">使用&lt;a href=&quot;http://www.faqs.org/rfcs/rfc3174&quot;&gt;&amp;raquo;US Secure Hash Algorithm 1&lt;/a&gt;计算文件 &lt;code&gt;filename&lt;/code&gt; 指定的文件的sha1哈希，并返回该哈希。哈希是一个40个字符的十六进制数字。</target>
        </trans-unit>
        <trans-unit id="8f9aa200ef1d155967ff69bff6235ddcbe24268e" translate="yes" xml:space="preserve">
          <source>Calculates the size of the buffer that should be allocated for receiving the ancillary data.</source>
          <target state="translated">计算应分配给接收辅助数据的缓冲区大小。</target>
        </trans-unit>
        <trans-unit id="10ca3884756801a74e779f35cfe95e75fa1bbc93" translate="yes" xml:space="preserve">
          <source>Calculates the soundex key of &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">计算 &lt;code&gt;str&lt;/code&gt; 的soundex键。</target>
        </trans-unit>
        <trans-unit id="52cd6d6e657c2cd20074388fcebe970e84cbd5a5" translate="yes" xml:space="preserve">
          <source>Calculates the soundex key of &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cab2f47fd48281b927e788eb426c57cf95c43ac" translate="yes" xml:space="preserve">
          <source>Calendar field encompassing the information in &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_HOUR_OF_DAY&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_MINUTE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_SECOND&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_MILLISECOND&lt;/code&gt;&lt;/strong&gt;. Range is from the &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;24 * 3600 * 1000 - 1&lt;/code&gt;. It is not the amount of milliseconds elapsed in the day since on DST transitions it will have discontinuities analog to those of the wall time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570eba77e2e18176ceeb006b2466cc9ed17fbb38" translate="yes" xml:space="preserve">
          <source>Calendar field encompassing the information in &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_HOUR_OF_DAY&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_MINUTE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_SECOND&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_MILLISECOND&lt;/code&gt;&lt;/strong&gt;. Range is from the &lt;em&gt;0&lt;/em&gt; to &lt;em&gt;24 * 3600 * 1000 - 1&lt;/em&gt;. It is not the amount of milliseconds ellapsed in the day since on DST transitions it will have discontinuities analog to those of the wall time.</source>
          <target state="translated">日历字段包含&lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_HOUR_OF_DAY&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_MINUTE&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_SECOND&lt;/code&gt; &lt;/strong&gt;和&lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_MILLISECOND&lt;/code&gt; &lt;/strong&gt;。范围是&lt;em&gt;0&lt;/em&gt;到&lt;em&gt;24 * 3600 * 1000-1&lt;/em&gt;。这不是一天中经过的毫秒数，因为在DST转换中，其不连续性类似于墙上时间的不连续性。</target>
        </trans-unit>
        <trans-unit id="0d5ff4f9281120abd5ddb3a728f48d047e1f7453" translate="yes" xml:space="preserve">
          <source>Calendar field for a modified Julian day number. It is different from a conventional Julian day number in that its transitions occur at local zone midnight rather than at noon UTC. It uniquely identifies a date.</source>
          <target state="translated">修改后的朱利安日数的日历字段。它不同于传统的朱利安日数,它的转换发生在当地区域的午夜,而不是在UTC的中午。它是唯一的日期标识。</target>
        </trans-unit>
        <trans-unit id="31b7766d54700007b4b4687ffd43bf589a6d1b44" translate="yes" xml:space="preserve">
          <source>Calendar field for a year number representation that is continuous across eras. For the Gregorian calendar, the value of this field matches that of &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_YEAR&lt;/code&gt;&lt;/strong&gt; for AD years; a BC year &lt;code&gt;y&lt;/code&gt; is represented by &lt;code&gt;-y +
       1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06000850680e9205c5a4671bddf395a32950ed56" translate="yes" xml:space="preserve">
          <source>Calendar field for a year number representation that is continuous across eras. For the Gregorian calendar, the value of this field matches that of &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_YEAR&lt;/code&gt;&lt;/strong&gt; for AD years; a BC year &lt;em&gt;y&lt;/em&gt; is represented by &lt;em&gt;-y + 1&lt;/em&gt;.</source>
          <target state="translated">跨多个年份的年份数字表示形式的日历字段。对于公历，此字段的值与AD年的&lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_YEAR&lt;/code&gt; &lt;/strong&gt;值匹配；BC年&lt;em&gt;y&lt;/em&gt;由&lt;em&gt;-y + 1&lt;/em&gt;表示。</target>
        </trans-unit>
        <trans-unit id="44732e1997214a3741d6b6d7fff47d4b0212cde4" translate="yes" xml:space="preserve">
          <source>Calendar field for the day of the month. The same as &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_DAY_OF_MONTH&lt;/code&gt;&lt;/strong&gt;, which has a clearer name.</source>
          <target state="translated">月中某天的日历字段。与&lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_DAY_OF_MONTH&lt;/code&gt; &lt;/strong&gt;相同，但名称更清晰。</target>
        </trans-unit>
        <trans-unit id="da4d107d3614c6728bc600665e5185c709f80937" translate="yes" xml:space="preserve">
          <source>Calendar field for the day of the week. Its values start with &lt;code&gt;1&lt;/code&gt; (Sunday, see &lt;a href=&quot;class.intlcalendar#intlcalendar.constants.dow-sunday&quot;&gt;&lt;strong&gt;&lt;code&gt;IntlCalendar::DOW_SUNDAY&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; and subsequent constants) and the last valid value is 7 (Saturday).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d6b28417024538d8958cce7e3a875ade822a19" translate="yes" xml:space="preserve">
          <source>Calendar field for the day of the week. Its values start with &lt;em&gt;1&lt;/em&gt; (Sunday, see &lt;a href=&quot;class.intlcalendar#intlcalendar.constants.dow-sunday&quot;&gt;&lt;strong&gt;&lt;code&gt;IntlCalendar::DOW_SUNDAY&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; and subsequent constants) and the last valid value is 7 (Saturday).</source>
          <target state="translated">星期几的日历字段。它的值以&lt;em&gt;1&lt;/em&gt;（星期日，请参阅&lt;a href=&quot;class.intlcalendar#intlcalendar.constants.dow-sunday&quot;&gt;&lt;strong&gt; &lt;code&gt;IntlCalendar::DOW_SUNDAY&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt;及其后续常量）&lt;strong&gt;开头&lt;/strong&gt;，最后一个有效值为7（星期六）。</target>
        </trans-unit>
        <trans-unit id="d7504097f3ae2ffad453e10b354a32fc3da790b5" translate="yes" xml:space="preserve">
          <source>Calendar field for the day of the year. For the Gregorian calendar, starts with &lt;strong&gt;&lt;code&gt;1&lt;/code&gt;&lt;/strong&gt; and ends with &lt;strong&gt;&lt;code&gt;365&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;366&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">一年中某天的日历字段。对于公历，以&lt;strong&gt; &lt;code&gt;1&lt;/code&gt; &lt;/strong&gt;开头，以&lt;strong&gt; &lt;code&gt;365&lt;/code&gt; &lt;/strong&gt;或&lt;strong&gt; &lt;code&gt;366&lt;/code&gt; &lt;/strong&gt;结尾。</target>
        </trans-unit>
        <trans-unit id="44295e750e18c99c2dc9a2dc198acdfb114d4a0f" translate="yes" xml:space="preserve">
          <source>Calendar field for the daylight saving time offset of the calendarʼs timezone, in milliseconds, if active for calendarʼs time.</source>
          <target state="translated">如果日历时间有效,日历时区的夏令时偏移量的日历字段,单位为毫秒。</target>
        </trans-unit>
        <trans-unit id="2b403a7d5d4417b2a32e410f893e264826227506" translate="yes" xml:space="preserve">
          <source>Calendar field for the full (24h) hour of the day. Valid values are &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;23&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a184ce5d6e36c07bf278481f0b46b49d3089db5f" translate="yes" xml:space="preserve">
          <source>Calendar field for the full (24h) hour of the day. Valid values are &lt;em&gt;0&lt;/em&gt; to &lt;em&gt;23&lt;/em&gt;.</source>
          <target state="translated">全天（24h）小时的日历字段。有效值为&lt;em&gt;0&lt;/em&gt;到&lt;em&gt;23&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c8139dfe2e2c712ab642d3cb24d09a696c26344c" translate="yes" xml:space="preserve">
          <source>Calendar field for the hour, without specifying whether itʼs in the morning or in the afternoon. Valid values are &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;11&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee745e06b093410965bce3e79f049a223d2c49d" translate="yes" xml:space="preserve">
          <source>Calendar field for the hour, without specifying whether itʼs in the morning or in the afternoon. Valid values are &lt;em&gt;0&lt;/em&gt; to &lt;em&gt;11&lt;/em&gt;.</source>
          <target state="translated">小时的日历字段，不指定是上午还是下午。有效值为&lt;em&gt;0&lt;/em&gt;到&lt;em&gt;11&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="db8e1ae8f154aaf286f9e2a713501f98dd5e09f2" translate="yes" xml:space="preserve">
          <source>Calendar field for the localized day of the week. This is a value between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;7&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt; being used for the day of the week that matches the value returned by &lt;a href=&quot;intlcalendar.getfirstdayofweek&quot;&gt;IntlCalendar::getFirstDayOfWeek()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5bc689756f035161dd7fdd75a72978a00a68a2" translate="yes" xml:space="preserve">
          <source>Calendar field for the localized day of the week. This is a value betwen &lt;em&gt;1&lt;/em&gt; and &lt;em&gt;7&lt;/em&gt;, &lt;em&gt;1&lt;/em&gt; being used for the day of the week that matches the value returned by &lt;a href=&quot;intlcalendar.getfirstdayofweek&quot;&gt;IntlCalendar::getFirstDayOfWeek()&lt;/a&gt;.</source>
          <target state="translated">本地化星期几的日历字段。这是介于&lt;em&gt;1&lt;/em&gt;和&lt;em&gt;7之间&lt;/em&gt;的值，该&lt;em&gt;1&lt;/em&gt;用于一周中的一天，该值与&lt;a href=&quot;intlcalendar.getfirstdayofweek&quot;&gt;IntlCalendar :: getFirstDayOfWeek（）&lt;/a&gt;返回的值匹配。</target>
        </trans-unit>
        <trans-unit id="0d87ed1cc3ca4d66bd317fdc9e8ae2a56c533de0" translate="yes" xml:space="preserve">
          <source>Calendar field for the minutes component of the time.</source>
          <target state="translated">时间的分钟部分的日历字段。</target>
        </trans-unit>
        <trans-unit id="1646b0757bf6b58bf3804382c2238b86f4ba7700" translate="yes" xml:space="preserve">
          <source>Calendar field for the month. The month sequence is zero-based, so January (here used to signify the first month of the calendar; this may be called another name, such as Muharram in the Islamic calendar) is represented by &lt;code&gt;0&lt;/code&gt;, February by &lt;code&gt;1&lt;/code&gt;, &amp;hellip;, December by &lt;code&gt;11&lt;/code&gt; and, for calendars that have it, the 13th or leap month by &lt;code&gt;12&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3a43a7df1bb0ad9eca3c40657b4435e79d743e" translate="yes" xml:space="preserve">
          <source>Calendar field for the month. The month sequence is zero-based, so Janurary (here used to signify the first month of the calendar; this may be called another name, such as Muharram in the Islamic calendar) is represented by &lt;em&gt;0&lt;/em&gt;, February by &lt;em&gt;1&lt;/em&gt;, &amp;hellip;, December by &lt;em&gt;11&lt;/em&gt; and, for calendars that have it, the 13th or leap month by &lt;em&gt;12&lt;/em&gt;.</source>
          <target state="translated">该月的日历字段。月序列是从零开始的，因此Janurary（此处用来表示日历的第一个月；可以称为另一个名称，例如伊斯兰日历中的Muharram）用&lt;em&gt;0&lt;/em&gt;表示，2月用&lt;em&gt;1表示&lt;/em&gt;，&amp;hellip;，12月用&lt;em&gt;11&lt;/em&gt;，对于有日历的日历，则是13或leap月&lt;em&gt;12&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="9c85f2eedb5532c16006977d07db2ebb58dcaedf" translate="yes" xml:space="preserve">
          <source>Calendar field for the number of the week of the month. This depends on which day of the week is &lt;a href=&quot;intlcalendar.getfirstdayofweek&quot;&gt;deemed to start the week&lt;/a&gt; and the &lt;a href=&quot;intlcalendar.getminimaldaysinfirstweek&quot;&gt;minimal number of days in a week&lt;/a&gt;.</source>
          <target state="translated">月中第几周的日历字段。这取决于一周中&lt;a href=&quot;intlcalendar.getfirstdayofweek&quot;&gt;的哪一天&lt;/a&gt;和一周中的&lt;a href=&quot;intlcalendar.getminimaldaysinfirstweek&quot;&gt;最少天数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a4b3a869d12956d59cff6d417db1d5f7d8ddeb0e" translate="yes" xml:space="preserve">
          <source>Calendar field for the number of the week of the year. This depends on which day of the week is &lt;a href=&quot;intlcalendar.getfirstdayofweek&quot;&gt;deemed to start the week&lt;/a&gt; and the &lt;a href=&quot;intlcalendar.getminimaldaysinfirstweek&quot;&gt;minimal number of days in a week&lt;/a&gt;.</source>
          <target state="translated">一年中星期几的日历字段。这取决于一周中&lt;a href=&quot;intlcalendar.getfirstdayofweek&quot;&gt;的哪一天&lt;/a&gt;和一周中的&lt;a href=&quot;intlcalendar.getminimaldaysinfirstweek&quot;&gt;最少天数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0008b38dd850bae0f4039cbf13614b9d3838624e" translate="yes" xml:space="preserve">
          <source>Calendar field for the seconds component of the time.</source>
          <target state="translated">时间的秒数部分的日历字段。</target>
        </trans-unit>
        <trans-unit id="3608679394ab46a8f8566704359e65f98d095aa5" translate="yes" xml:space="preserve">
          <source>Calendar field for the year. This is not unique across eras. If the calendar type has more than one era, generally the minimum value for this field will be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a4670e4ced3130c11585e9e3be7653cc918186" translate="yes" xml:space="preserve">
          <source>Calendar field for the year. This is not unique across eras. If the calendar type has more than one era, generally the minimum value for this field will be &lt;em&gt;1&lt;/em&gt;.</source>
          <target state="translated">年的日历字段。这在各个时代都不是唯一的。如果日历类型具有多个时代，则此字段的最小值通常为&lt;em&gt;1&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="40eae8d3829eac2aa73d8c5ae136b3b4bd6857f7" translate="yes" xml:space="preserve">
          <source>Calendar field indicating the raw offset of the timezone, in milliseconds. The raw offset is the timezone offset, excluding any offset due to daylight saving time.</source>
          <target state="translated">日历字段表示时区的原始偏移,单位为毫秒。原始偏移量是时区的偏移量,不包括因夏令时而产生的任何偏移量。</target>
        </trans-unit>
        <trans-unit id="e160b3acb0e4aec23e333bf965de69508c3a35f1" translate="yes" xml:space="preserve">
          <source>Calendar field indicating whether a time is before noon (value &lt;code&gt;0&lt;/code&gt;, AM) or after (&lt;code&gt;1&lt;/code&gt;). Midnight is AM, noon is PM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6ed0c7c4e48b9fd32fb5769aec92dd9a4ceb7e" translate="yes" xml:space="preserve">
          <source>Calendar field indicating whether a time is before noon (value &lt;em&gt;0&lt;/em&gt;, AM) or after (&lt;em&gt;1&lt;/em&gt;). Midnight is AM, noon is PM.</source>
          <target state="translated">日历字段，指示时间是中午之前（值&lt;em&gt;0&lt;/em&gt;，AM）还是之后（&lt;em&gt;1&lt;/em&gt;）。午夜是上午，中午是下午。</target>
        </trans-unit>
        <trans-unit id="4aa449ba9392a795fae02c249fa5248c42db5bd9" translate="yes" xml:space="preserve">
          <source>Calendar field numerically representing an era, for instance &lt;code&gt;1&lt;/code&gt; for AD and &lt;code&gt;0&lt;/code&gt; for BC in the Gregorian/Julian calendars and &lt;code&gt;235&lt;/code&gt; for the Heisei (平成) era in the Japanese calendar. Not all calendars have more than one era.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c979229348e55fb3d2c54ab4fb921f9a80cbbc70" translate="yes" xml:space="preserve">
          <source>Calendar field numerically representing an era, for instance &lt;em&gt;1&lt;/em&gt; for AD and &lt;em&gt;0&lt;/em&gt; for BC in the Gregorian/Julian calendars and &lt;em&gt;235&lt;/em&gt; for the Heisei (平成) era in the Japanese calendar. Not all calendars have more than one era.</source>
          <target state="translated">数字表示时代的日历字段，例如在公历和朱利安日历中，AD 表示&lt;em&gt;1&lt;/em&gt;，BC表示&lt;em&gt;0&lt;/em&gt;，在日本日历中，平成（Heisei）时代表示&lt;em&gt;235&lt;/em&gt;。并非所有日历都具有多个时代。</target>
        </trans-unit>
        <trans-unit id="e5455ca8de2e38aae8df557e72e90f3d68727b6c" translate="yes" xml:space="preserve">
          <source>Calendar field representing the year for &lt;a href=&quot;class.intlcalendar#intlcalendar.constants.field-week-of-year&quot;&gt;week of year&lt;/a&gt; purposes.</source>
          <target state="translated">表示年份的日历字段，用于一年中的第&lt;a href=&quot;class.intlcalendar#intlcalendar.constants.field-week-of-year&quot;&gt;几周&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cf27dadeb22d8efee1fc0c42b4327599635f7770" translate="yes" xml:space="preserve">
          <source>Calendar field the milliseconds component of the time.</source>
          <target state="translated">日历字段中时间的毫秒部分。</target>
        </trans-unit>
        <trans-unit id="a223c286278d7af11156eb8eb21036ed5462d7e8" translate="yes" xml:space="preserve">
          <source>Calendar field whose value is &lt;code&gt;1&lt;/code&gt; for indicating a leap month and &lt;code&gt;0&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c455bb32880debeed90b87c6a2f9792eaab6fdd" translate="yes" xml:space="preserve">
          <source>Calendar field whose value is &lt;em&gt;1&lt;/em&gt; for indicating a leap month and &lt;em&gt;0&lt;/em&gt; otherwise.</source>
          <target state="translated">日历字段，其值为&lt;em&gt;1&lt;/em&gt;表示indicating日，否则为&lt;em&gt;0&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3d16cd5b15caf37ef62a191a5f2b32b2d8bf6830" translate="yes" xml:space="preserve">
          <source>Calendar information is returned as an array containing the elements &lt;code&gt;calname&lt;/code&gt;, &lt;code&gt;calsymbol&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, &lt;code&gt;abbrevmonth&lt;/code&gt; and &lt;code&gt;maxdaysinmonth&lt;/code&gt;. The names of the different calendars which can be used as &lt;code&gt;calendar&lt;/code&gt; are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6519d7ad99915185629eae1aa267f8a1d25f0a56" translate="yes" xml:space="preserve">
          <source>Calendar information is returned as an array containing the elements &lt;em&gt;calname&lt;/em&gt;, &lt;em&gt;calsymbol&lt;/em&gt;, &lt;em&gt;month&lt;/em&gt;, &lt;em&gt;abbrevmonth&lt;/em&gt; and &lt;em&gt;maxdaysinmonth&lt;/em&gt;. The names of the different calendars which can be used as &lt;code&gt;calendar&lt;/code&gt; are as follows:</source>
          <target state="translated">日历信息以包含元素&lt;em&gt;calname&lt;/em&gt;，&lt;em&gt;calsymbol&lt;/em&gt;，&lt;em&gt;month&lt;/em&gt;，&lt;em&gt;abbrevmonth&lt;/em&gt;和&lt;em&gt;maxdaysinmonth&lt;/em&gt;的数组的形式返回。可以用作 &lt;code&gt;calendar&lt;/code&gt; 的不同日历的名称如下：</target>
        </trans-unit>
        <trans-unit id="fc86c9ccbc724dc67d7c40490c95dab7ff68758f" translate="yes" xml:space="preserve">
          <source>Calendar to convert from, one of &lt;strong&gt;&lt;code&gt;CAL_GREGORIAN&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CAL_JULIAN&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CAL_JEWISH&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;CAL_FRENCH&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">要从&lt;strong&gt; &lt;code&gt;CAL_GREGORIAN&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;CAL_JULIAN&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;CAL_JEWISH&lt;/code&gt; &lt;/strong&gt;或&lt;strong&gt; &lt;code&gt;CAL_FRENCH&lt;/code&gt; &lt;/strong&gt;之一转换的日历。</target>
        </trans-unit>
        <trans-unit id="94fbfe8c5ddada193f1846967fbb469cf3ba77f8" translate="yes" xml:space="preserve">
          <source>Calendar to convert to</source>
          <target state="translated">转换成日历</target>
        </trans-unit>
        <trans-unit id="b15e1ed07dc2888cca159f2320334bb546383513" translate="yes" xml:space="preserve">
          <source>Calendar to return information for. If no calendar is specified information about all calendars is returned.</source>
          <target state="translated">返回要返回的日历信息。如果没有指定日历,则返回所有日历的信息。</target>
        </trans-unit>
        <trans-unit id="e7ac200fcd124fbfbc6b6efe4ac5596fc60fb6e2" translate="yes" xml:space="preserve">
          <source>Calendar to use for calculation</source>
          <target state="translated">用于计算的日历</target>
        </trans-unit>
        <trans-unit id="9c32b5e8f76e88392937c2058ae77dfc2e81a119" translate="yes" xml:space="preserve">
          <source>Calendar to use for formatting or parsing. The default value is &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;, which corresponds to &lt;strong&gt;&lt;code&gt;IntlDateFormatter::GREGORIAN&lt;/code&gt;&lt;/strong&gt;. This can either be one of the &lt;a href=&quot;class.intldateformatter#intl.intldateformatter-constants.calendartypes&quot;&gt;IntlDateFormatter calendar constants&lt;/a&gt; or an &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt;. Any &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; object passed will be clone; it will not be changed by the &lt;a href=&quot;class.intldateformatter&quot;&gt;IntlDateFormatter&lt;/a&gt;. This will determine the calendar type used (gregorian, islamic, persian, etc.) and, if &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; is given for the &lt;code&gt;timezone&lt;/code&gt; parameter, also the timezone used.</source>
          <target state="translated">用于格式化或解析的日历。默认值为&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;，它对应于&lt;strong&gt; &lt;code&gt;IntlDateFormatter::GREGORIAN&lt;/code&gt; &lt;/strong&gt;。这可以是一个&lt;a href=&quot;class.intldateformatter#intl.intldateformatter-constants.calendartypes&quot;&gt;IntlDateFormatter日历常量&lt;/a&gt;或&lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt;。传递的任何&lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt;对象都将被克隆；它不会被&lt;a href=&quot;class.intldateformatter&quot;&gt;IntlDateFormatter&lt;/a&gt;更改。这将确定所使用的日历类型（公历，伊斯兰，波斯等），如果 &lt;code&gt;timezone&lt;/code&gt; 参数为&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;，则还将确定所使用的时区。</target>
        </trans-unit>
        <trans-unit id="c6d6f573e9315e0c78da0763552596720256a94c" translate="yes" xml:space="preserve">
          <source>Calendar to use for formatting or parsing. The default value is &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt;, which corresponds to &lt;strong&gt;&lt;code&gt;IntlDateFormatter::GREGORIAN&lt;/code&gt;&lt;/strong&gt;. This can either be one of the &lt;a href=&quot;class.intldateformatter#intl.intldateformatter-constants.calendartypes&quot;&gt;IntlDateFormatter calendar constants&lt;/a&gt; or an &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt;. Any &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; object passed will be clone; it will not be changed by the &lt;a href=&quot;class.intldateformatter&quot;&gt;IntlDateFormatter&lt;/a&gt;. This will determine the calendar type used (gregorian, islamic, persian, etc.) and, if &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; is given for the &lt;code&gt;timezone&lt;/code&gt; parameter, also the timezone used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2301af79daf9f3781f11285d3174ad37e300db4" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;intlcalendar.createinstance&quot;&gt;IntlCalendar::createInstance()&lt;/a&gt; instead.</source>
          <target state="translated">改为调用&lt;a href=&quot;intlcalendar.createinstance&quot;&gt;IntlCalendar :: createInstance（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b37dde5019d3cfbc7597a108ea7babc95e554bb0" translate="yes" xml:space="preserve">
          <source>Call the callback when a status change for process ID &lt;code&gt;pid&lt;/code&gt; (or any &lt;em&gt;PID&lt;/em&gt; if &lt;code&gt;pid&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;0&lt;/code&gt;&lt;/strong&gt; ) has been received(a status change happens when the process terminates or is killed, or, when &lt;code&gt;trace&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, additionally when it is stopped or continued). In other words, when the process receives a &lt;strong&gt;&lt;code&gt;SIGCHLD&lt;/code&gt;&lt;/strong&gt; , &lt;em&gt;Ev&lt;/em&gt; will fetch the outstanding exit/wait status for all changed/zombie children and call the callback.</source>
          <target state="translated">当收到进程ID &lt;code&gt;pid&lt;/code&gt; （或任何&lt;em&gt;PID，&lt;/em&gt;如果 &lt;code&gt;pid&lt;/code&gt; 为&lt;strong&gt; &lt;code&gt;0&lt;/code&gt; &lt;/strong&gt;）的状态更改时（状态发生在进程终止或被终止时，或者在 &lt;code&gt;trace&lt;/code&gt; 为&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; 时&lt;/strong&gt;，另外在停止或继续时发生，则调用回调））。换句话说，当进程收到&lt;strong&gt; &lt;code&gt;SIGCHLD&lt;/code&gt; 时&lt;/strong&gt;，&lt;em&gt;Ev&lt;/em&gt;将获取所有已更改/僵尸子级的未完成退出/等待状态，并调用回调。</target>
        </trans-unit>
        <trans-unit id="8e68a6bea9bf1e1bdd2c2dedd6f49b2800417c5a" translate="yes" xml:space="preserve">
          <source>Call the callback when a status change for process ID &lt;code&gt;pid&lt;/code&gt; (or any &lt;em&gt;PID&lt;/em&gt; if &lt;code&gt;pid&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;0&lt;/code&gt;&lt;/strong&gt; ) has been received(a status change happens when the process terminates or is killed, or, when &lt;code&gt;trace&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, additionally when it is stopped or continued). In other words, when the process receives a &lt;strong&gt;&lt;code&gt;SIGCHLD&lt;/code&gt;&lt;/strong&gt; , &lt;em&gt;Ev&lt;/em&gt; will fetch the outstanding exit/wait status for all changed/zombie children and call the callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb2315c9ee18707da1c14381c39436e1fa9c790b" translate="yes" xml:space="preserve">
          <source>Call to return a result set from a prepared statement query.</source>
          <target state="translated">调用来返回准备好的语句查询的结果集。</target>
        </trans-unit>
        <trans-unit id="3b804aa45afb3ed4ebdd50d9fa370f22fd50f207" translate="yes" xml:space="preserve">
          <source>Callable to be invoked. The callable doesn't receive any arguments and its return value is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42fb639b7313463881ed7d9bae34cc709237f03b" translate="yes" xml:space="preserve">
          <source>Callback</source>
          <target state="translated">Callback</target>
        </trans-unit>
        <trans-unit id="b824af8eb6988ef29ab1a71cca4be1aeadaa8874" translate="yes" xml:space="preserve">
          <source>Callback function called for each row of the result set. Your PHP function should accumulate the result and store it in the aggregation context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5213073cc2b18043297c4d9333404b525da6bcf9" translate="yes" xml:space="preserve">
          <source>Callback function for &lt;a href=&quot;function.ob-start&quot;&gt;ob_start()&lt;/a&gt; to repair the buffer.</source>
          <target state="translated">&lt;a href=&quot;function.ob-start&quot;&gt;ob_start（）的&lt;/a&gt;回调函数可修复缓冲区。</target>
        </trans-unit>
        <trans-unit id="d096662a2456d54c9b2752b8810cbfd91c724c56" translate="yes" xml:space="preserve">
          <source>Callback function to aggregate the &quot;stepped&quot; data from each row. Once all the rows have been processed, this function will be called and it should then take the data from the aggregation context and return the result. This callback function should return a type understood by SQLite (i.e. &lt;a href=&quot;language.types.intro&quot;&gt;scalar type&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983334d400d4482f2d75d45f2d631665e88f9ba0" translate="yes" xml:space="preserve">
          <source>Callback function to be called when the matching event occurs.</source>
          <target state="translated">当匹配事件发生时要调用的回调函数。</target>
        </trans-unit>
        <trans-unit id="f17e030ca3f3cdf0960c0aa313109b2d7926e63b" translate="yes" xml:space="preserve">
          <source>Callback function to run for each element in each array.</source>
          <target state="translated">对每个数组中的每个元素执行回调函数。</target>
        </trans-unit>
        <trans-unit id="e398d4b72208aaafdc3b8dcec40d1a2daac6467e" translate="yes" xml:space="preserve">
          <source>Callback to call on failed assertions</source>
          <target state="translated">回调失败的断言</target>
        </trans-unit>
        <trans-unit id="0fb58e60206430b52eda835054d7481c5b3c1212" translate="yes" xml:space="preserve">
          <source>Callback to invoke where the descriptor is ready for writing, or &lt;a href=&quot;language.types.null&quot;&gt;NULL&lt;/a&gt; if no callback is desired.</source>
          <target state="translated">回调以调用准备好写入描述符的位置；如果不需要回调，则为&lt;a href=&quot;language.types.null&quot;&gt;NULL&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a5265a2844fad70a205f6b3c18dabc2ae947c45e" translate="yes" xml:space="preserve">
          <source>Callback to invoke where there is an error on the descriptor, cannot be &lt;a href=&quot;language.types.null&quot;&gt;NULL&lt;/a&gt;.</source>
          <target state="translated">在描述符上有错误的地方调用的回调不能为&lt;a href=&quot;language.types.null&quot;&gt;NULL&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8485a461f9109d6e52d6a5ffae59a72a75054945" translate="yes" xml:space="preserve">
          <source>Callback to invoke where there is data to read, or &lt;a href=&quot;language.types.null&quot;&gt;NULL&lt;/a&gt; if no callback is desired.</source>
          <target state="translated">回调以调用要读取数据的位置；如果不需要回调，则为&lt;a href=&quot;language.types.null&quot;&gt;NULL&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b46c7345be1e8cbff4b0b8fb788d597af9bf9f8" translate="yes" xml:space="preserve">
          <source>Callback which is called when connection is closed. Should match the following prototype:</source>
          <target state="translated">当连接关闭时调用的回调。应该符合以下原型。</target>
        </trans-unit>
        <trans-unit id="f76df01ea2ecca152b3684e0fb295fd59be8d4d3" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator &amp;rarr;</source>
          <target state="translated">CallbackFilterIterator&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="58ac6ec5eaa24c99a3bdcb46725a867792041e8b" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator (class)</source>
          <target state="translated">回调过滤器(类)</target>
        </trans-unit>
        <trans-unit id="e2249cecc3e54caca5103f70c55445aa4b285423" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator Examples</source>
          <target state="translated">回调过滤器示例</target>
        </trans-unit>
        <trans-unit id="98aa958a877b81f7dc2867c005fb11d771d86713" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator::__construct</source>
          <target state="translated">CallbackFilterIterator::__construct</target>
        </trans-unit>
        <trans-unit id="0deeb83c751d0fa0e888f212c23bce0702f51296" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator::__construct &amp;mdash; Create a filtered iterator from another iterator</source>
          <target state="translated">CallbackFilterIterator :: __ construct &amp;mdash;从另一个迭代器创建一个过滤的迭代器</target>
        </trans-unit>
        <trans-unit id="959a759f1cbada714f1c4611f0a8e76e9053feab" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator::__construct &amp;rarr;</source>
          <target state="translated">CallbackFilterIterator :: __ construct&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e428fbf7fd2f38b9779f1162de4a382e41775553" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator::accept</source>
          <target state="translated">CallbackFilterIterator::accept</target>
        </trans-unit>
        <trans-unit id="83cb194fd1202a762b0a54bc490a28389031adf4" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator::accept &amp;mdash; Calls the callback with the current value, the current key and the inner iterator as arguments</source>
          <target state="translated">CallbackFilterIterator :: accept &amp;mdash;以当前值，当前键和内部迭代器作为参数调用回调</target>
        </trans-unit>
        <trans-unit id="5cdbc7f8e0fb48caca8039adc84f7776e87c22a6" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator::accept &amp;rarr;</source>
          <target state="translated">CallbackFilterIterator :: accept&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="82b65bf38b7df906188061acd9e0db1c91639fdc" translate="yes" xml:space="preserve">
          <source>Callbacks / Callables</source>
          <target state="translated">回调/可回调</target>
        </trans-unit>
        <trans-unit id="680afe89b82421dcb038b4c6844f93c9a9003485" translate="yes" xml:space="preserve">
          <source>Callbacks / Callables &amp;rarr;</source>
          <target state="translated">回调/通话对象&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="b707d5e60c2dc41b46cee4a8a06ef03bd2614f62" translate="yes" xml:space="preserve">
          <source>Callbacks can be denoted by &lt;a href=&quot;language.types.callable&quot;&gt;callable&lt;/a&gt; type hint as of PHP 5.4. This documentation used &lt;a href=&quot;language.pseudo-types#language.types.callback&quot;&gt;callback&lt;/a&gt; type information for the same purpose.</source>
          <target state="translated">从PHP 5.4开始，回调可以通过&lt;a href=&quot;language.types.callable&quot;&gt;可调用&lt;/a&gt;类型提示来表示。本文档出于相同目的使用了&lt;a href=&quot;language.pseudo-types#language.types.callback&quot;&gt;回调&lt;/a&gt;类型信息。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
