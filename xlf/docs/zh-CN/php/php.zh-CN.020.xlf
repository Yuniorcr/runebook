<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="php">
    <body>
      <group id="php">
        <trans-unit id="8f4b2e28e407e14ad39b74e74caea41a2407251b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if both &lt;var&gt;$a&lt;/var&gt; and &lt;var&gt;$b&lt;/var&gt; are &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果两个 &lt;var&gt;$a&lt;/var&gt; 和 &lt;var&gt;$b&lt;/var&gt; 是&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="9b7b556f6cb58909d7b625f3096c7039996bcfd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if compression/decompression is available, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if not.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果可以使用压缩/解压缩，则为&lt;strong&gt;true；&lt;/strong&gt;否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="e09d900f05549a7a3bb90f4a76d1425e002967bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if currency_symbol precedes a negative value, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if it succeeds one</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果currency_symbol前面为负值，则为&lt;strong&gt;true；&lt;/strong&gt;如果后面一个为负，则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8ce6c930927f8d504e613e810df6fca7783d3eb8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if currency_symbol precedes a positive value, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if it succeeds one</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果currency_symbol在一个正值之前，则为&lt;strong&gt;true；&lt;/strong&gt;如果在其后一个正值，则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7f930946690326c4f67b402c2e6b6c0bf260d2bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if either &lt;var&gt;$a&lt;/var&gt; or &lt;var&gt;$b&lt;/var&gt; is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, but not both.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果任一 &lt;var&gt;$a&lt;/var&gt; 或 &lt;var&gt;$b&lt;/var&gt; 是&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;，但不能同时使用。</target>
        </trans-unit>
        <trans-unit id="74538a3acb1353278fa408bd201a8b6dff267ea6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if either &lt;var&gt;$a&lt;/var&gt; or &lt;var&gt;$b&lt;/var&gt; is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果任一 &lt;var&gt;$a&lt;/var&gt; 或 &lt;var&gt;$b&lt;/var&gt; 是&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="2e6661b5d20170fa1f4ba88ca6ba45504415a720" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if equal, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果相等则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="5d0506a0efa763e2380cf9586cde1f306c12dbd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if it has the method, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果具有方法，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4b9d144d17d48d13b9758bb63db6565caddb3fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if it has the property, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果具有属性，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="22f03f06a19ff70834d13c716baff309e4904745" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if it returns a reference, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果返回引用，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="19ea2c95a6ea5425f2127398b67e4242549b1852" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if it the code indicates some failure, and &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; in case of success or a warning.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果代码指示失败，则为&lt;strong&gt;true；&lt;/strong&gt;如果成功或出现警告，则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="51ea61d3f3d2990fa6a8d4581520375d6530e4da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if it's a built-in type, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果是内置类型，则为&lt;strong&gt;true&lt;/strong&gt;；否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e66b64b1208330b155a5c2479c148d1ac5da02b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if it's deprecated, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果已弃用则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9baae95a20abb72152776fc1d2b77c15232ebb56" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if it's disable, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果禁用则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="148589e94989c93f038052ecafe42fce32d0c887" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if it's in a namespace, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果在名称空间中，则为&lt;strong&gt;true&lt;/strong&gt;；否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ca56a202f62c095abb88901bc1efb01ce2950adb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if it's internal, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果是内部则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="017d7e54ab874460be1fd693a511145cd99cf73a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if it's user-defined, otherwise false;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;，如果它的用户自定义的，否则为false;</target>
        </trans-unit>
        <trans-unit id="77b39bc5ebd21b0c1b052c3e3523cce9ed9a08c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if no error occurred, or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if there was an error. Note that &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; does not necessarily indicate that input was waiting to be read.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果未发生错误，则为&lt;strong&gt;true；&lt;/strong&gt;如果有错误，则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。注意，&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;不一定表示输入正在等待读取。</target>
        </trans-unit>
        <trans-unit id="a99f5ec91e1253921565644407aa7bd155e368b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if normalized, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; otherwise or if there an error</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;要是归，&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;否则或出现错误</target>
        </trans-unit>
        <trans-unit id="b84f6b932ca715af3d38afef5d6fb67d0626d429" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if parser is lenient, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if parser is strict. By default the parser is lenient.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果解析器是宽松的，&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;，如果解析器严格。默认情况下，解析器是宽松的。</target>
        </trans-unit>
        <trans-unit id="bb29d2e80056182f67e15571b7400d120057f468" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if replacement pairs should be saved, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果应该保存替换对，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="2dd4182fe9b849aa8e0db175f4e9cfbb6f5aa58e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if run-together words should be treated as legal compounds, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果将一起使用的单词视为合法化合物，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="a63854a9eda68046fcafb4b8a8e13d9184458449" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the &lt;var&gt;dparameters&lt;/var&gt; array exists</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果 &lt;var&gt;dparameters&lt;/var&gt; 数组存在，则为&lt;strong&gt;true&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="535b5b394bb5aec7ccbef78796412b5bf3eedee0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the child process has been stopped by a signal. Always set to &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on Windows.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果子进程已被信号停止，则为&lt;strong&gt;true&lt;/strong&gt;。在Windows上始终设置为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="e2e09a0c08bde136394cbc473966f781e4c32082" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the child process has been terminated by an uncaught signal. Always set to &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on Windows.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果子进程已被未捕获的信号终止，则返回&lt;strong&gt;true&lt;/strong&gt;。在Windows上始终设置为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="4ffa94b94213ad1772302fb8dfeac4536cdea73c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the class constant is private, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果类常量为私有，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f714981ca94587714b965d131b6ec7f218ba4c00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the class constant is protected, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果类常量受保护，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6ac6b13802335d9a4aea89357e3fde23bd50f20c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the class constant is public, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果类常量是公共的，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0766c83d9d2068af737a8a4da864f0b8de264cff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the client library is thread-safe, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果客户端库是线程安全的，则为&lt;strong&gt;true&lt;/strong&gt;；否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="31ba8952d71cfeb8e97c7aeda67170a8221407bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the constant is defined, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果定义了常量，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="b6c4b2ac5b8af217dbcedbe2a083d64d709a8708" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the current element has sub-elements, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果当前元素具有子元素，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c81e1c6d1c106b38c17d332771189a41d6388d36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the current element is acceptable, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果当前元素可接受，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="364ecae2fffb15920c4f413e00eeeab51b516c00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the current element is valid, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果当前元素有效，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="644e4d33b7971df062d5957720c01ab8846bcfa4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the current position is valid, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果当前位置有效，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74b2ad86b8f5471e1561a245d9a878029d93ce4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the element has children, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果元素有子元素，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d603f586a64d7bdd5b57169f879b2ca286a236ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the entry is &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;..&lt;/code&gt;, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果条目为，则返回&lt;strong&gt;true&lt;/strong&gt; &lt;code&gt;.&lt;/code&gt; 或 &lt;code&gt;..&lt;/code&gt; ，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ed2521010e01179bb78d242f31f8081b28be924" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the file has had its CRC verified, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if not.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果文件已通过CRC验证，则为&lt;strong&gt;true；&lt;/strong&gt;否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="d098a79d19d01910b81d750d5ad43d90c308a3a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the file is compressed within the Phar archive, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if not.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果文件在Phar归档文件中压缩，则为&lt;strong&gt;true，&lt;/strong&gt;否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="b9740b9e8d7147932fea5a3d322f5527ed428bba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the inner iterator has children, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果内部迭代器有子级，则为&lt;strong&gt;true&lt;/strong&gt;；否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7fa7f56b49ea453e078b79fdbe21a716652592a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the method is a constructor, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果该方法是构造函数，则为&lt;strong&gt;true&lt;/strong&gt;；否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7373bb4c833726e4fb69f783df4558840c0b28b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the method is a destructor, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果方法是析构函数，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="41da14751d5f19782b505bdbb38c52275a5aa9ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the method is abstract, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果方法是抽象的，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba155f072dd5f94b28e8cf2e91c49e4871866053" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the method is final, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果该方法是最终方法，则为&lt;strong&gt;true&lt;/strong&gt;；否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="73eee39b091664f537da0f9cec2acb0fb8acf3ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the method is private, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果该方法是私有的，则为&lt;strong&gt;true&lt;/strong&gt;；否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4d6d94e2e16da4a25cc6c88a9f8bc24914a85e57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the method is protected, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果该方法受保护，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d0711223529d1382a56db25d87e41ee2fa9be3c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the method is public, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果该方法是公共的，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3eef585456771579173652763e6e036c4d95a41e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the method is static, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果该方法是静态的，则为&lt;strong&gt;true&lt;/strong&gt;；否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="48bd6686fcaaf5b8106b6c4d31dd2a4eb330cb4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the offset exists, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果存在偏移量，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="045bcdfc19bce379264001e9a45a695a0b23700f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the parameter is optional, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果参数是可选的，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7de2c17fda04f40797718546a54ea2d0bc426894" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the parameter is passed in by reference, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果参数通过引用传递，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8dbbc7c89bc90c5f9f44fb98800289438acc2eb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the parameters array exists</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果参数数组存在，则为&lt;strong&gt;true&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39aa1e734161950c962ce91a37f334e7d96d185b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the phar has been modified since opened, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if not.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果phar自打开以来已被修改，则为&lt;strong&gt;true，&lt;/strong&gt;否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="5d5013ad31c14a334b87998fb172ed48f8061545" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the process is still running, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if it has terminated.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果进程仍在运行，则为&lt;strong&gt;true；&lt;/strong&gt;如果进程已终止，则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="8689417cdd7b84278212d597245a47d411e0d7da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the property is private, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果属性是私有的，&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;，否则。</target>
        </trans-unit>
        <trans-unit id="eb57447a97d3ae8a578f4d512a92220e43e58290" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the property is protected, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果财产受到保护，&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;否则。</target>
        </trans-unit>
        <trans-unit id="663d8fa62c74f02116be9cc5c9199cef442a2f71" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the property is public, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果属性是公共的，&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;，否则。</target>
        </trans-unit>
        <trans-unit id="1b68fa067c90990aa88372641643f0e30b3fe34b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the property is static, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果属性是静态的，&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;，否则。</target>
        </trans-unit>
        <trans-unit id="760c57f5ab4e93da1761035d4314ecce1d9be1c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the property was declared at compile-time, or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if it was created at run-time.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;，如果财产被宣布在编译时，还是&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;，如果它在运行时创建的。</target>
        </trans-unit>
        <trans-unit id="9053d8da73005fdbbaa1762c5454a06a8f70b0b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the recipient is a newsgroup, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;，如果收款人是一个新闻组，&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;否则。</target>
        </trans-unit>
        <trans-unit id="9e6e2c8fe046b9a14b1798bad2e9d509da945566" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the refresh was a success, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果刷新成功，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4dc838b0eaa3f92cc1ee8aa3901e448a6c3f6353" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the requested &lt;code&gt;index&lt;/code&gt; exists, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果请求的 &lt;code&gt;index&lt;/code&gt; 存在，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8277629c07aa60e7aa5e42c4fd11b7c22ddadade" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the requested index exists, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果请求的索引存在，则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8c254dc7489de47785a1d3dfab0886a77051974c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the task is known, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果任务是已知的，&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;，否则。</target>
        </trans-unit>
        <trans-unit id="ca5eb6a65e7e9e0da0cd7029865c17476638c15e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the task is running, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果正在运行的任务，&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;否则。</target>
        </trans-unit>
        <trans-unit id="531887a7d848c44ec74300f6cceee62a859a12a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if there are children, otherwise &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果有孩子则为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cc9f269436fab64fdc8cf5945ba55203f2357b06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if there is a description string</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果有描述字符串，则为&lt;strong&gt;true&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="44cf4870f0e4413d00e0310482dbca5ba307d545" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if there is a disposition string</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果有处置字符串，则为&lt;strong&gt;true&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8bd879dd55a8d8a46725d9f5a9a71023ef5ab9c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if there is a subtype string</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果有子类型字符串，则为&lt;strong&gt;true&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb555580944178fc3b42631b3cc11c807af0b285" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if there is an identification string</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果有标识字符串，则为&lt;strong&gt;true&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c295dcf407a7293067caa69c414056e8468cda42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if write access is enabled, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if it is disabled.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果启用了写入权限，&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;，如果它被禁用。</target>
        </trans-unit>
        <trans-unit id="95bee2fccc765b398cc881b34df933eefae677ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; on success, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;成功，&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;失败。</target>
        </trans-unit>
        <trans-unit id="b1b55064f24061f7bec55ac913e275abb233814e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;还是&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a393e2c2c640e556a4911fd8b08be216781cfd8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; (the default is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;)</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;或&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;（默认为&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;）</target>
        </trans-unit>
        <trans-unit id="469b436b0e5345b6c9e788a94ef51618565c8762" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; tells the library to perform all the required proxy authentication and connection setup, but no data transfer. This option is implemented for HTTP, SMTP and POP3.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;指示库执行所有必需的代理身份验证和连接设置，但不进行数据传输。此选项是针对HTTP，SMTP和POP3实现的。</target>
        </trans-unit>
        <trans-unit id="52ec84d55feb89944e375e27548678a5035b0c05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to HTTP PUT a file. The file to PUT must be set with &lt;strong&gt;&lt;code&gt;CURLOPT_INFILE&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;CURLOPT_INFILESIZE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;到HTTP PUT文件。必须使用&lt;strong&gt; &lt;code&gt;CURLOPT_INFILE&lt;/code&gt; &lt;/strong&gt;和&lt;strong&gt; &lt;code&gt;CURLOPT_INFILESIZE&lt;/code&gt; &lt;/strong&gt;设置要PUT的文件。</target>
        </trans-unit>
        <trans-unit id="fe352198bc026b35fb2e2ae51e521460a21bfa7c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to allow accessibility, or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;允许访问的结果为&lt;strong&gt;true&lt;/strong&gt;，否则为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="f7de8ee4a213482d5a0682b3cb66e330a7053cdc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to append to the remote file instead of overwriting it.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;将&lt;strong&gt;true&lt;/strong&gt;附加到远程文件而不是覆盖它，则为&lt;strong&gt;true&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="888a29966cae84b2aada3ae3efbf25cffa9c72de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to attempt to retrieve the modification date of the remote document. This value can be retrieved using the &lt;strong&gt;&lt;code&gt;CURLINFO_FILETIME&lt;/code&gt;&lt;/strong&gt; option with &lt;a href=&quot;function.curl-getinfo&quot;&gt;curl_getinfo()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;尝试检索远程文档的修改日期为&lt;strong&gt;true&lt;/strong&gt;。可以使用带有&lt;a href=&quot;function.curl-getinfo&quot;&gt;curl_getinfo（）&lt;/a&gt;的&lt;strong&gt; &lt;code&gt;CURLINFO_FILETIME&lt;/code&gt; &lt;/strong&gt;选项来检索此值。</target>
        </trans-unit>
        <trans-unit id="4fb25c6bd406b9c8655e5f471737de4b34eadbad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to automatically set the &lt;code&gt;Referer:&lt;/code&gt; field in requests where it follows a &lt;code&gt;Location:&lt;/code&gt; redirect.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;设置为&lt;strong&gt;true&lt;/strong&gt;，则将自动在请求中设置&amp;ldquo; &lt;code&gt;Location:&lt;/code&gt; 重定向后的&amp;ldquo; &lt;code&gt;Referer:&lt;/code&gt; &amp;rdquo;字段中。</target>
        </trans-unit>
        <trans-unit id="d9bd12a0fee8ecee75b65397127cfd60f1ce6555" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to be completely silent with regards to the cURL functions.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;对cURL函数完全保持沉默，则为&lt;strong&gt;true&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="af5af30c887bc341316b627814eeac33172a2250" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to convert Unix newlines to CRLF newlines on transfers.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;将Unix换行符转换为CRLF换行符，则为&lt;strong&gt;true&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="a1115451f4436713cb0b271cd7e499c46f58238b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to create missing directories when an FTP operation encounters a path that currently doesn't exist.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果FTP操作遇到当前不存在的路径，则创建缺少目录的&lt;strong&gt;值为true&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="5047006def9edf1e0c16d952eadb35e1dccb588a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to disable TCP's Nagle algorithm, which tries to minimize the number of small packets on the network.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;为&lt;strong&gt;true&lt;/strong&gt;，则禁用TCP的Nagle算法，该算法尝试将网络上的小数据包数量减至最少。</target>
        </trans-unit>
        <trans-unit id="c4b42cc8998517e32a6f92ba9e286b785ffae0c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to disable the progress meter for cURL transfers.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;为&lt;strong&gt;true&lt;/strong&gt;，则禁用进度表的cURL传输。</target>
        </trans-unit>
        <trans-unit id="8991cdf8410be2efd5229fccd2592fc5a4a5af77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to do a regular HTTP POST. This POST is the normal &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; kind, most commonly used by HTML forms.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;进行常规HTTP POST为&lt;strong&gt;true&lt;/strong&gt;。该POST是正常的 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 类型，最常用于HTML表单。</target>
        </trans-unit>
        <trans-unit id="ba07833b4a3b54bae13f4219b7e1bf9619a98297" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to enable TCP Fast Open.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;启用&amp;ldquo; TCP快速打开&amp;rdquo;时为&lt;strong&gt;true&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="741f3fa7be6bd62145eff39a9cd86923353f00f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to enable TLS false start.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;启用，则启用TLS错误启动。</target>
        </trans-unit>
        <trans-unit id="7499a82e0eac520a0275fc3303e97e56c24468b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to enable built-in SSH compression. This is a request, not an order; the server may or may not do it.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;启用，则启用内置SSH压缩。这是一个请求，而不是命令；服务器可能会也可能不会这样做。</target>
        </trans-unit>
        <trans-unit id="d0509039303efd5df00d5bd6cd2c4553b472060d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to enable sending the initial response in the first packet.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;为&lt;strong&gt;true&lt;/strong&gt;，则可以在第一个数据包中发送初始响应。</target>
        </trans-unit>
        <trans-unit id="c28db5fc50fa8e71e3f33d3d931e9ca0f40ec495" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to exclude the body from the output. Request method is then set to HEAD. Changing this to &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; does not change it to GET.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;从输出中排除主体，则为&lt;strong&gt;true&lt;/strong&gt;。然后将请求方法设置为HEAD。将其更改为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;不会将其更改为GET。</target>
        </trans-unit>
        <trans-unit id="f0866b475257113379c6145936e198ac534436a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to fail verbosely if the HTTP code returned is greater than or equal to 400. The default behavior is to return the page normally, ignoring the code.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果返回的HTTP代码大于或等于400，则返回&lt;strong&gt;true&lt;/strong&gt;将导致详细失败。默认行为是正常返回页面，而忽略该代码。</target>
        </trans-unit>
        <trans-unit id="cb44f39830050d0434fb0efa929bd3c028b05652" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to first try an EPSV command for FTP transfers before reverting back to PASV. Set to &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; to disable EPSV.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;在返回到PASV之前先尝试用于FTP传输的EPSV命令，则为&lt;strong&gt;true&lt;/strong&gt;。设置为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;可禁用EPSV。</target>
        </trans-unit>
        <trans-unit id="e0e2146fc4f5ebd602f81b51560f592b5b0cf8b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to follow any &lt;code&gt;&quot;Location: &quot;&lt;/code&gt; header that the server sends as part of the HTTP header (note this is recursive, PHP will follow as many &lt;code&gt;&quot;Location: &quot;&lt;/code&gt; headers that it is sent, unless &lt;strong&gt;&lt;code&gt;CURLOPT_MAXREDIRS&lt;/code&gt;&lt;/strong&gt; is set).</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;服务器在HTTP标头中发送的任何 &lt;code&gt;&quot;Location: &quot;&lt;/code&gt; 标头之后为&lt;strong&gt;true&lt;/strong&gt;（请注意，这是递归的，除非&lt;strong&gt; &lt;code&gt;CURLOPT_MAXREDIRS&lt;/code&gt; &lt;/strong&gt;，否则PHP将遵循发送的许多 &lt;code&gt;&quot;Location: &quot;&lt;/code&gt; 标头）。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a4be58eca13b4a47626e144acb65e75c7992d9c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to force the connection to explicitly close when it has finished processing, and not be pooled for reuse.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;为&lt;strong&gt;true&lt;/strong&gt;，则强制在完成处理后显式关闭该连接，并且不将其合并以重用。</target>
        </trans-unit>
        <trans-unit id="f2cee5d9a500e79e50d1c3ba5a332d66666b5e96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to force the use of a new connection instead of a cached one.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;为&lt;strong&gt;true&lt;/strong&gt;，则将强制使用新连接而不是缓存的连接。</target>
        </trans-unit>
        <trans-unit id="b2cd3fe50737412fc64c479dc1d472de703a2577" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to ignore any cURL function that causes a signal to be sent to the PHP process. This is turned on by default in multi-threaded SAPIs so timeout options can still be used.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;忽略任何导致信号发送到PHP进程的cURL函数，则为&lt;strong&gt;true&lt;/strong&gt;。默认情况下，在多线程SAPI中将其打开，因此仍可以使用超时选项。</target>
        </trans-unit>
        <trans-unit id="620bf4b01a51b7bf411040479b35c4cd20fc4cc3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to include the header in the output.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;为&lt;strong&gt;true&lt;/strong&gt;，则将标头包含在输出中。</target>
        </trans-unit>
        <trans-unit id="d90e5d8c8eba1a48361555fb020ac54c29570823" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to indicate return of array instead of string.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;为&lt;strong&gt;true&lt;/strong&gt;，则表示返回数组而不是字符串。</target>
        </trans-unit>
        <trans-unit id="359dca76de892a1b152f5317857b4cd749a33ea8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to keep sending the request body if the HTTP code returned is equal to or larger than 300. The default action would be to stop sending and close the stream or connection. Suitable for manual NTLM authentication. Most applications do not need this option.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;如果返回的HTTP代码等于或大于300，则继续发送请求正文，则为&lt;strong&gt;true&lt;/strong&gt;。默认操作是停止发送并关闭流或连接。适用于手动NTLM身份验证。大多数应用程序不需要此选项。</target>
        </trans-unit>
        <trans-unit id="bc26f32bcf7dca0cff9adc90dc692ca6e0634423" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to keep sending the username and password when following locations (using &lt;strong&gt;&lt;code&gt;CURLOPT_FOLLOWLOCATION&lt;/code&gt;&lt;/strong&gt;), even when the hostname has changed.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;在以下位置（使用&lt;strong&gt; &lt;code&gt;CURLOPT_FOLLOWLOCATION&lt;/code&gt; &lt;/strong&gt;）（即使主机名已更改）则继续发送用户名和密码，&lt;strong&gt;则为true&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="8101b16c251b5e34ea12b133681513140203fe54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to mark this as a new cookie &quot;session&quot;. It will force libcurl to ignore all cookies it is about to load that are &quot;session cookies&quot; from the previous session. By default, libcurl always stores and loads all cookies, independent if they are session cookies or not. Session cookies are cookies without expiry date and they are meant to be alive and existing for this &quot;session&quot; only.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;将其标记为新的cookie&amp;ldquo;会话&amp;rdquo;，则为&lt;strong&gt;true&lt;/strong&gt;。它将强制libcurl忽略上一个会话中将要加载的所有作为&amp;ldquo;会话cookie&amp;rdquo;的cookie。默认情况下，libcurl始终存储和加载所有cookie，无论是否为会话cookie，它们都是独立的。会话cookie是没有有效期的cookie，并且仅在此&amp;ldquo;会话&amp;rdquo;中存在并且存在。</target>
        </trans-unit>
        <trans-unit id="4313d538cd7f983df92e3647fa7dbb90ad482d11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to normalize the color values.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;为&lt;strong&gt;true&lt;/strong&gt;，则归一化颜色值。</target>
        </trans-unit>
        <trans-unit id="058fbd41d2d403c07700aaddce9e062109fc37ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to not allow URLs that include a username. Usernames are allowed by default (0).</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;为&lt;strong&gt;true&lt;/strong&gt;，则不允许包含用户名的URL。默认情况下允许使用用户名（0）。</target>
        </trans-unit>
        <trans-unit id="df66e9289bcfd48f7ed8876cc19ad08c6a6b31b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to not handle dot dot sequences.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;不处理点点序列，则为&lt;strong&gt;true&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="3c0c6d94b518ccf6a3282185fb39ed2d88590b30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to not send TFTP options requests.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;不发送TFTP选项请求，则为&lt;strong&gt;true&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="30a5bf2cd8000eea2aa3960713fde1890915e324" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to only list the names of an FTP directory.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;仅列出FTP目录的名称，则为&lt;strong&gt;true&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="36da73745acd3a813120b678914f3270b5fb973e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to output SSL certification information to &lt;code&gt;STDERR&lt;/code&gt; on secure transfers.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;安全传输将SSL认证信息输出到 &lt;code&gt;STDERR&lt;/code&gt; ，则为&lt;strong&gt;true&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="c7ab8d522fcef04c235bb714c721b5e17c764dd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to output verbose information. Writes output to &lt;code&gt;STDERR&lt;/code&gt;, or the file specified using &lt;strong&gt;&lt;code&gt;CURLOPT_STDERR&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;输出详细信息时为&lt;strong&gt;true&lt;/strong&gt;。将输出写入 &lt;code&gt;STDERR&lt;/code&gt; 或使用&lt;strong&gt; &lt;code&gt;CURLOPT_STDERR&lt;/code&gt; &lt;/strong&gt;指定的文件。</target>
        </trans-unit>
        <trans-unit id="ad0106287c5a3a10a44f11d07e8bd8d690dac419" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to prepare for an upload.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;为上载做准备时为&lt;strong&gt;true&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="38985ede378c3c651b065fddc4907515d61c0afd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to reset the HTTP request method to GET. Since GET is the default, this is only necessary if the request method has been changed.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;将&lt;strong&gt;true&lt;/strong&gt;设置为&lt;strong&gt;true&lt;/strong&gt;，则将HTTP请求方法重置为GET。由于GET是默认设置，因此只有在更改了请求方法的情况下才需要这样做。</target>
        </trans-unit>
        <trans-unit id="53e7f4239b29c60ee2f15f4571846a80f36bd7b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to return all active output buffer levels. If &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; or not set, only the top level output buffer is returned.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;为&lt;strong&gt;true&lt;/strong&gt;，则返回所有活动的输出缓冲区级别。如果为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;或未设置，则仅返回顶级输出缓冲区。</target>
        </trans-unit>
        <trans-unit id="e1fe1fea5a9df00b1e7d60d4cbf10408e15f260a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to return the raw output when &lt;strong&gt;&lt;code&gt;CURLOPT_RETURNTRANSFER&lt;/code&gt;&lt;/strong&gt; is used.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;使用&lt;strong&gt; &lt;code&gt;CURLOPT_RETURNTRANSFER&lt;/code&gt; ,&lt;/strong&gt;则返回原始输出为&lt;strong&gt;true&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="cd9262c1158c5dfcda140309739b809d159fafe5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to return the transfer as a string of the return value of &lt;a href=&quot;function.curl-exec&quot;&gt;curl_exec()&lt;/a&gt; instead of outputting it directly.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;为&lt;strong&gt;true&lt;/strong&gt;，则将传输作为&lt;a href=&quot;function.curl-exec&quot;&gt;curl_exec（）&lt;/a&gt;返回值的字符串返回，而不是直接输出。</target>
        </trans-unit>
        <trans-unit id="d4d3a98ed9e1ee941829587e05d5af3697ede6cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to scan the &lt;var&gt;~/.netrc&lt;/var&gt; file to find a username and password for the remote site that a connection is being established with.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;为&lt;strong&gt;true&lt;/strong&gt;，则扫描 &lt;var&gt;~/.netrc&lt;/var&gt; 文件以查找与之建立连接的远程站点的用户名和密码。</target>
        </trans-unit>
        <trans-unit id="afb89d2dca0df1079b44b24da22f78b8d85dcf17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to send an HAProxy PROXY protocol v1 header at the start of the connection. The default action is not to send this header.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;在连接开始时发送HAProxy PROXY协议v1标头为&lt;strong&gt;true&lt;/strong&gt;。默认操作是不发送此标头。</target>
        </trans-unit>
        <trans-unit id="bfb4417af733f0c1c79475a524c89c7b3ad941a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to shuffle the order of all returned addresses so that they will be used in a random order, when a name is resolved and more than one IP address is returned. This may cause IPv4 to be used before IPv6 or vice versa.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;为&lt;strong&gt;true&lt;/strong&gt;，则将随机化所有返回地址的顺序，以便在解析名称并返回多个IP地址时以随机顺序使用它们。这可能会导致在使用IPv6之前先使用IPv4，反之亦然。</target>
        </trans-unit>
        <trans-unit id="8202d738c6879b1d29cb3bae24aee4b291053f57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to suppress proxy CONNECT response headers from the user callback functions &lt;strong&gt;&lt;code&gt;CURLOPT_HEADERFUNCTION&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;CURLOPT_WRITEFUNCTION&lt;/code&gt;&lt;/strong&gt;, when &lt;strong&gt;&lt;code&gt;CURLOPT_HTTPPROXYTUNNEL&lt;/code&gt;&lt;/strong&gt; is used and a CONNECT request is made.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;使用&lt;strong&gt; &lt;code&gt;CURLOPT_HTTPPROXYTUNNEL&lt;/code&gt; &lt;/strong&gt;并发出CONNECT请求，则从用户回调函数&lt;strong&gt; &lt;code&gt;CURLOPT_HEADERFUNCTION&lt;/code&gt; &lt;/strong&gt;和&lt;strong&gt; &lt;code&gt;CURLOPT_WRITEFUNCTION&lt;/code&gt; &lt;/strong&gt;禁止代理CONNECT响应标头，则为&lt;strong&gt;true&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="bed4529ae2791724b3f7118c7d37e591bc2ee030" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to track the handle's request string.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;为&lt;strong&gt;true&lt;/strong&gt;，则跟踪句柄的请求字符串。</target>
        </trans-unit>
        <trans-unit id="4dc3f3f8e7cbe38655e435ed155fe724315f751d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to tunnel through a given HTTP proxy.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;通过给定的HTTP代理进行隧道传输，则为&lt;strong&gt;true&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="4733e820edd2a79f231f5fb6ee50114464334f86" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to use ASCII mode for FTP transfers. For LDAP, it retrieves data in plain text instead of HTML. On Windows systems, it will not set &lt;code&gt;STDOUT&lt;/code&gt; to binary mode.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;将ASCII模式用于FTP传输，则为&lt;strong&gt;true&lt;/strong&gt;。对于LDAP，它以纯文本而不是HTML检索数据。在Windows系统上，它不会将 &lt;code&gt;STDOUT&lt;/code&gt; 设置为二进制模式。</target>
        </trans-unit>
        <trans-unit id="616c1a437534b1ea54080e3a140c5afc32644c63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to use EPRT (and LPRT) when doing active FTP downloads. Use &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; to disable EPRT and LPRT and use PORT only.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;在进行活动的FTP下载时使用EPRT（和LPRT）为&lt;strong&gt;true&lt;/strong&gt;。使用&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;禁用EPRT和LPRT并仅使用PORT。</target>
        </trans-unit>
        <trans-unit id="e01e2e0cb3df092206ebcc9e74b0dcdac40034ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to use a global DNS cache. This option is not thread-safe. It is conditionally enabled by default if PHP is built for non-threaded use (CLI, FCGI, Apache2-Prefork, etc.).</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;使用全局DNS缓存时为&lt;strong&gt;true&lt;/strong&gt;。此选项不是线程安全的。如果PHP是为非线程使用（CLI，FCGI，Apache2-Prefork等）而构建的，则默认情况下会有条件地启用它。</target>
        </trans-unit>
        <trans-unit id="e110a703cfd1f2350b818e66e4439897ec2f7a9c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to use the file name only and add to the root of the archive.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;仅使用文件名并将其添加到存档的根目录，则为&lt;strong&gt;true&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="744c2114aa49e4cbe97ae97465a790adc4712db9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to verify the certificate's status.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;验证证书状态为&lt;strong&gt;true&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="d3a5bcced2e77a782068b47204a3548275708507" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to wait for pipelining/multiplexing.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;等待流水线/多路复用为&lt;strong&gt;true&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="0d3cea31183b074ae4efe8607a82dde004a0770a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; turns on the stats component and &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; disables it.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;打开统计信息组件，&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;禁用它。</target>
        </trans-unit>
        <trans-unit id="d0e9ff74a5974d337af7b6c40703ee92084b3562" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; turns this feature on. &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; disables it.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;启用此功能。&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;禁用它。</target>
        </trans-unit>
        <trans-unit id="aa8e99e4a9b80b47c908b22f0d484211e8ec549d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; when the entry was added, and &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if the entry was not added.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;当添加的条目，&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;如果未添加条目。</target>
        </trans-unit>
        <trans-unit id="0a6c74def4abe18940e4b0354045def0044a4b69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; when the entry was deleted, and &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if the entry was not deleted.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;当条目被删除，&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;如果该项未删除。</target>
        </trans-unit>
        <trans-unit id="2ba6b13be30a4202909bffaf7bb7573376acf1d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; when the entry was found and updated, and &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if the entry was not part of the hash already.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;当上述项目被发现和更新，&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;如果条目不是哈希的一部分了。</target>
        </trans-unit>
        <trans-unit id="a4cdf52d4d0e3f734f57e786c5bcd237f2b0f67d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;uri:file:///path/to/dsnfile&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;uri:file:///path/to/dsnfile&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6ab71e5470687f691e70540dd3e07d49ea520364" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;~ $a&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;~ $a&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b9cf353ddf36ce7a24cd278800d86068b24a759d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;strong&gt;debug_backtrace()&lt;/strong&gt; options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;strong&gt;debug_backtrace（）&lt;/strong&gt;选项&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9ab4c4d56a05886799f57c16ba656981fa4f000" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;strong&gt;debug_print_backtrace()&lt;/strong&gt; options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;strong&gt;debug_print_backtrace（）&lt;/strong&gt;选项&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="51f9ad74ad8694764765bd8eba1e4ffee5698b29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;strong&gt;error_log()&lt;/strong&gt; log types&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;strong&gt;error_log（）&lt;/strong&gt;日志类型&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74a7bc784d9ea2e1125e44f5e7b6ba257195a15a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;strong&gt;openlog()&lt;/strong&gt; Facilities&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;strong&gt;openlog（）&lt;/strong&gt;设施&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="478c4fd328a1cbdff60bead3185fe8c531dcab92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;strong&gt;openlog()&lt;/strong&gt; Options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;strong&gt;openlog（）&lt;/strong&gt;选项&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6601b53af5aeb9ef8f5c628748b1068d357b07fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;strong&gt;openssl_x509_checkpurpose()&lt;/strong&gt; purposes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;strong&gt;openssl_x509_checkpurpose（）的&lt;/strong&gt;用途&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08f1ee3e28d7e3ec4de5170ea1f9e6b9e8119452" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;strong&gt;pack()&lt;/strong&gt; format characters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;strong&gt;pack（）&lt;/strong&gt;格式字符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46046bb4729cafda8ba39656cb4a919d002b1adb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;strong&gt;phpinfo()&lt;/strong&gt; options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;strong&gt;phpinfo（）&lt;/strong&gt;选项&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c3979633a7ad3185aceee172f6f4e4f74e10090" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;strong&gt;stat()&lt;/strong&gt; and &lt;a href=&quot;function.fstat&quot;&gt;fstat()&lt;/a&gt; result format&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;strong&gt;stat（）&lt;/strong&gt;和&lt;a href=&quot;function.fstat&quot;&gt;fstat（）&lt;/a&gt;结果格式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8af041edbc27c439e469f89d6de3b2e4c82a84a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;strong&gt;syslog()&lt;/strong&gt; Priorities (in descending order)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;strong&gt;syslog（）&lt;/strong&gt;优先级（降序排列）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="081b979f5106a62b4c462d95eafc59610b82aff5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A few &quot;magical&quot; PHP constants&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;一些&amp;ldquo;神奇的&amp;rdquo; PHP常量&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="adbd61cf0d39b18b7572dd1a39652a8a963528cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;APCIterator&lt;/strong&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;APCIterator&lt;/strong&gt;实现&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="f55f00e971ea6cb0cb27b8c27c147a85322ddf44" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;APCUIterator&lt;/strong&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;APCUIterator&lt;/strong&gt;实现了&lt;a href=&quot;class.iterator&quot;&gt;迭代器&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="1da8e22fc9c738da2f9e48212ed18a6dba30b50c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Actions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Actions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4ec0e0d3466dca1c32e590266307a257b80a1aa7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;AppendIterator&lt;/strong&gt;extends&lt;a href=&quot;class.iteratoriterator&quot;&gt;IteratorIterator&lt;/a&gt;implements &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;AppendIterator&lt;/strong&gt;扩展了&lt;a href=&quot;class.iteratoriterator&quot;&gt;IteratorIterator，&lt;/a&gt;实现了&lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="423bd7827bbcdd7ec4ae327a08f8c5a70269e830" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Applicable Conversion Options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;适用的转换选项&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d5df0c7d621ffd1bae40599c84116f022df96f17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Approximate Equivalancies of AES, RSA, DSA and ECC Keysizes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;AES，RSA，DSA和ECC密钥大小的近似等效项&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="64e87d2d7c2d0d671690cca05e45753e56af1b42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ArgumentCountError&lt;/strong&gt; is thrown when too few arguments are passed to a user-defined function or method.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;当传递给用户定义的函数或方法的参数太少时，抛出&lt;strong&gt;ArgumentCountError&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="49d4d734486e943454736cbd9b54a6c324da3fe3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ArgumentCountError&lt;/strong&gt;extends&lt;a href=&quot;class.typeerror&quot;&gt;TypeError&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ArgumentCountError&lt;/strong&gt;扩展了&lt;a href=&quot;class.typeerror&quot;&gt;TypeError&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="f3a86ac35e1e83bd77e45a0de178955fad28b385" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Arithmetic Operators&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;算术运算符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="18bd5291cf870a4cf2ec4f6d621d482a013e5466" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ArithmeticError&lt;/strong&gt; is thrown when an error occurs while performing mathematical operations. In PHP 7.0, these errors include attempting to perform a bitshift by a negative amount, and any call to &lt;a href=&quot;function.intdiv&quot;&gt;intdiv()&lt;/a&gt; that would result in a value outside the possible bounds of an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;在执行数学运算时发生错误时，将引发&lt;strong&gt;ArithmeticError&lt;/strong&gt;。在PHP 7.0中，这些错误包括尝试执行负数的&lt;a href=&quot;function.intdiv&quot;&gt;位移位&lt;/a&gt;以及对intdiv（）的任何调用，这将导致值超出&lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt;的可能范围。</target>
        </trans-unit>
        <trans-unit id="ecb35f437ca9aeb3d009f9b9d145bddc5b62f4ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ArithmeticError&lt;/strong&gt; is thrown when an error occurs while performing mathematical operations. These errors include attempting to perform a bitshift by a negative amount, and any call to &lt;a href=&quot;function.intdiv&quot;&gt;intdiv()&lt;/a&gt; that would result in a value outside the possible bounds of an int.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;在执行数学运算时发生错误时，将引发&lt;strong&gt;ArithmeticError&lt;/strong&gt;。这些错误包括尝试执行负数的&lt;a href=&quot;function.intdiv&quot;&gt;位移位&lt;/a&gt;以及对intdiv（）的任何调用，这将导致值超出int的可能范围。</target>
        </trans-unit>
        <trans-unit id="e8f08e40cb3d509b1f32f70cd8ff0f569a19bcf8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ArithmeticError&lt;/strong&gt;extends&lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ArithmeticError&lt;/strong&gt;扩展了&lt;a href=&quot;class.error&quot;&gt;错误&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="e7abc1202b8aa6dd55cf71f11fe3e4370333f050" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array Operators&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;数组运算符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4bf066ab249ca3a78047fc811c4f7a071c9c99e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array returned by sqlsrv_client_info&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;sqlsrv_client_info返回的数组&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0459167b0f940ce327fdf9724a1f0b323c9738d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array returned by sqlsrv_errors&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;sqlsrv_errors返回的数组&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1d5180ab005613f294a86565ef5a8707542d3553" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array returned by sqlsrv_field_metadata&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;sqlsrv_field_metadata返回的数组&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="06fe8a68561930d823ffdc282004ef7441927a95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array structure for msg_stat_queue&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;msg_stat_queue的数组结构&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49003c806980de545023fa25752c92979be5bd0a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array structure&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;数组结构&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0edf59b7e89e160853b4be740bd53962a8bcc331" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ArrayAccess&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ArrayAccess&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="47dbbf8c20cb0336289147d33a6bdca836233e47" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ArrayIterator behavior flags&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ArrayIterator行为标志&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5663451a295355dc394caa64e9912fc0c8f34fa2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ArrayIterator::__construct()&lt;/strong&gt; throws an &lt;a href=&quot;class.invalidargumentexception&quot;&gt;InvalidArgumentException&lt;/a&gt; if anything besides an array or an object is given.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果给出除数组或对象之外的任何内容，则&lt;strong&gt;ArrayIterator :: __ construct（）&lt;/strong&gt;抛出&lt;a href=&quot;class.invalidargumentexception&quot;&gt;InvalidArgumentException&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="59434ec17eb73e80e47c8e7b0ca5e6a928c39446" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ArrayIterator&lt;/strong&gt;implements &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;, &lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt;, &lt;a href=&quot;class.serializable&quot;&gt;Serializable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ArrayIterator&lt;/strong&gt;实现&lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;，&lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator&lt;/a&gt;，&lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt;，&lt;a href=&quot;class.serializable&quot;&gt;Serializable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="eede6d7773afd1a0a2d22336f57b6593d49958de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ArrayObject behavior flags&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ArrayObject行为标志&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="870c0292e1613739351b6e2e0191d331b5001124" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ArrayObject&lt;/strong&gt;implements &lt;a href=&quot;class.iteratoraggregate&quot;&gt;IteratorAggregate&lt;/a&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;, &lt;a href=&quot;class.serializable&quot;&gt;Serializable&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ArrayObject&lt;/strong&gt;实现&lt;a href=&quot;class.iteratoraggregate&quot;&gt;IteratorAggregate&lt;/a&gt;，&lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;，&lt;a href=&quot;class.serializable&quot;&gt;Serializable&lt;/a&gt;和&lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="b713802dfa7da09b73eaf0e7b94f587e878f5864" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Assert Options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;断言选项&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="432bced1a9da683ba682018eb22475e12f2310f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;AssertionError&lt;/strong&gt; is thrown when an assertion made via &lt;a href=&quot;function.assert&quot;&gt;assert()&lt;/a&gt; fails.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;当通过&lt;a href=&quot;function.assert&quot;&gt;assert（）&lt;/a&gt;作出的断言失败时，抛出&lt;strong&gt;AssertionError&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="ef907a3df19ec30bf8b2eeeb38b4f20b0ced93a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;AssertionError&lt;/strong&gt;extends&lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;AssertionError&lt;/strong&gt;扩展了&lt;a href=&quot;class.error&quot;&gt;错误&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="df633372e73dc95724873f8690955711a9768d8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Attribute values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;属性值&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="589756507f922212aba0969fd7028699cac5f86f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available &lt;code&gt;flags&lt;/code&gt; constants&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;可用 &lt;code&gt;flags&lt;/code&gt; 常量&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a0bb8c9040520623697c0dfbc7a254c745747136" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available Socket Options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;可用的插槽选项&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d76db4b03b2ff09ca59410e59c8ad2125ea29893" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available address/protocol families&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;可用的地址/协议族&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e934546f3774d16188601e6a49e83abe1062ed45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available flags&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;可用标志&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b809eb79f726f6096e69d2add01f3a2e51b861f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;可用选项&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eda5af219b24e53723453fd967bf149ec8a7db19" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available socket types&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;可用的插座类型&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bba5edac093bc839147a0b3ae3eb337eeb36964c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BadFunctionCallException&lt;/strong&gt;extends&lt;a href=&quot;class.logicexception&quot;&gt;LogicException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;BadFunctionCallException&lt;/strong&gt;扩展了&lt;a href=&quot;class.logicexception&quot;&gt;LogicException&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="46a412967fe32dbc4cb7798336a342ec8424e346" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BadMethodCallException&lt;/strong&gt;extends&lt;a href=&quot;class.badfunctioncallexception&quot;&gt;BadFunctionCallException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;BadMethodCallException&lt;/strong&gt;扩展了&lt;a href=&quot;class.badfunctioncallexception&quot;&gt;BadFunctionCallException&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="a042eece241096d442c2b49a5a3a4d58817db947" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Basic DNS attributes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;基本DNS属性&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7054bd80f1b96e85558ecbeec4288592f60b40a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bitmasks acceptable to &lt;strong&gt;iconv_mime_decode()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;strong&gt;iconv_mime_decode（）&lt;/strong&gt;可接受的位&lt;strong&gt;掩码&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40b0a1c1600ab4bee067e238737ef46b160bb687" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bitmasks acceptable to &lt;strong&gt;iconv_mime_decode_headers()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;strong&gt;iconv_mime_decode_headers（）&lt;/strong&gt;可接受的位&lt;strong&gt;掩码&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="64c7afe9cd916afe7cf4397afcd38ad9998d7c04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bitwise Operators&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;按位运算符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="429664353989dfec5adaaaf4e5f80da7ddc9349a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Body Array Structure&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;主体阵列结构&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5e7907390e2f127c21de573c9bdfb64a580f80b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CURLFile&lt;/strong&gt; should be used to upload a file with &lt;strong&gt;&lt;code&gt;CURLOPT_POSTFIELDS&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;应该使用&lt;strong&gt;CURLFile&lt;/strong&gt;上传带有&lt;strong&gt; &lt;code&gt;CURLOPT_POSTFIELDS&lt;/code&gt; &lt;/strong&gt;的文件。</target>
        </trans-unit>
        <trans-unit id="31e591613ccbe0933eac248ac270a2de687bccf3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CURLFile&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;CURLFile&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="90ca7f1667a04f13dc72e686eb8f5db510516bfc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CachingIterator&lt;/strong&gt;extends&lt;a href=&quot;class.iteratoriterator&quot;&gt;IteratorIterator&lt;/a&gt;implements &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;CachingIterator&lt;/strong&gt;扩展了&lt;a href=&quot;class.iteratoriterator&quot;&gt;IteratorIterator，&lt;/a&gt;实现了&lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt;，&lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;，&lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="b6bf76ddc7fa33cee0a907a147cecd7e9d02c65c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Calendar modes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;日历模式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7af5ac33d368739f45d4997133c756c2a92297a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Calendar week modes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;日历周模式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3d941a310b60a33593aefec71246bcb868dd428c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CallbackFilterIterator&lt;/strong&gt;extends&lt;a href=&quot;class.filteriterator&quot;&gt;FilterIterator&lt;/a&gt;implements &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;CallbackFilterIterator&lt;/strong&gt;扩展了&lt;a href=&quot;class.filteriterator&quot;&gt;FilterIterator&lt;/a&gt;实现的&lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="059b75a078889e31e60fa568279a9be07643cc66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caution&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Caution&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e80d8651b714955acdd0431440959a417b305e52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Changelog for &lt;code&gt;continue&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;更改日志以 &lt;code&gt;continue&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12c9fa50eadd871b749e906e38b1f0e205aa62e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Changelog for &lt;em&gt;break&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;休息的&lt;/em&gt;变更日志&lt;em&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ef9ec70e5cbac181cbbbdfd62e269a41119aba0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Changelog for &lt;em&gt;continue&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;更新日志以&lt;em&gt;继续&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2545e8a2daf2cfa28b88fabd14e6bdd32ed0422c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Changelog&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Changelog&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="de88c48cdd0fbe30e56f91e6b71ec9bc7f26eebc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Character classes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;角色类&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6b1193bb58984714ea006dc8b45637b41bfb868c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Class methods by purpose&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;按目的分类方法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="16bda7e8c57220c0719cbaca26afe22fd9072988" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Classname::Method()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Classname::Method()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cabb08dee432cc049809b4265f8ed348e98eb1e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Closure&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;关闭&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="415dde942afdaa7528c660380558b63104ef5d78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Collator&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;整理器&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="d7c9d8f7af119e42d5a9484b51f588a462361dd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Collectable&lt;/strong&gt; was previously a class (in pthreads v2 and below). Now, it is an interface in pthreads v3 that is implemented by the &lt;a href=&quot;class.threaded&quot;&gt;Threaded&lt;/a&gt; class.</source>
          <target state="translated">&lt;strong&gt;Collectable&lt;/strong&gt;以前是一个类（在pthreads v2及更低版本中）。现在，它是&lt;a href=&quot;class.threaded&quot;&gt;Threaded&lt;/a&gt;类实现的pthreads v3中的接口。</target>
        </trans-unit>
        <trans-unit id="1f6edbe63a352f570ed80f3b1a0a1ba5ac2bfcb6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Collectable&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;收藏品&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="dacc1707095e73bb8a0657bff7558122ca33b44c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Collection&lt;/strong&gt; is the base interface which covers functionality common to all the data structures in this library. It guarantees that all structures are traversable, countable, and can be converted to json using &lt;a href=&quot;function.json-encode&quot;&gt;json_encode()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;集合&lt;/strong&gt;是基本接口，涵盖了该库中所有数据结构所共有的功能。它保证所有结构都是可遍历的，可数的，并且可以使用&lt;a href=&quot;function.json-encode&quot;&gt;json_encode（）&lt;/a&gt;转换为json 。</target>
        </trans-unit>
        <trans-unit id="1eb319df1842273b03e591dd9fd9fb87d95bcc93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Column metadata&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;列元数据&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60c8f810daa80a7b02351cf71db83663fd4626f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Common &lt;code&gt;zenith&lt;/code&gt; angles&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;共同的 &lt;code&gt;zenith&lt;/code&gt; 顶角&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="030d0c9c786d912266a44a7c9e186e91b98cfff1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Common protocols&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;通用协议&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b3c24226dcd632ee6784a93d5d46ba9df7629b7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Comparison Operators&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;比较运算符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ddfa4c0b80ea1c304acacd9cef7c366f41e03967" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Comparison with Various Types&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;与各种类型的比较&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="22cc28aca13af37938a5987d45e3ade6e4e8fbbf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CompileError&lt;/strong&gt; is thrown for some compilation errors, which formerly issued a fatal error.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;某些编译错误引发了&lt;strong&gt;CompileError&lt;/strong&gt;，这些编译错误先前发出了致命错误。</target>
        </trans-unit>
        <trans-unit id="c88e30c0fbdeeb349dd0d5f9f683eea22fa30506" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CompileError&lt;/strong&gt;extends&lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;CompileError&lt;/strong&gt;扩展了&lt;a href=&quot;class.error&quot;&gt;错误&lt;/a&gt;{</target>
        </trans-unit>
        <trans-unit id="63a211191de28b7282e034985c007be08f5a9600" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Cond&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Cond&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="49c0cb1a61f9f56058214b136221afd56e9be355" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Configuration items supported by &lt;strong&gt;iconv_mime_encode()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;strong&gt;iconv_mime_encode（）&lt;/strong&gt;支持的配置项&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5e87f1f1bfdae1c4e51142a81c0d98b5b04079fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Configuration overrides&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;配置覆盖&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9269308c3e33dda8b52c2681984830d1e530491" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Contents of the returned array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;返回数组的内容&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5e682619bc1d412c7efd435669e8743f125d8e99" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Continent codes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;大陆码&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a44eb7b4f6a4c5c879ee7bdd00212c7692ae4727" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Countable&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;可数&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="19543fd7e6fc1ee204a835945bbdecf8f1cbad92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DBA locking&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;DBA锁定&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab2d2dc7dd9ca131cb5b91c88263453234cdcb4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DOMAttr&lt;/strong&gt; represents an attribute in the &lt;a href=&quot;class.domelement&quot;&gt;DOMElement&lt;/a&gt; object.</source>
          <target state="translated">&lt;strong&gt;DOMAttr&lt;/strong&gt;表示&lt;a href=&quot;class.domelement&quot;&gt;DOMElement&lt;/a&gt;对象中的属性。</target>
        </trans-unit>
        <trans-unit id="f39348805ee35f4fdb101af1f8a960d6c61560fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DOMAttr&lt;/strong&gt;extends&lt;a href=&quot;class.domnode&quot;&gt;DOMNode&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;DOMAttr&lt;/strong&gt;扩展了&lt;a href=&quot;class.domnode&quot;&gt;DOMNode&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="8595decedac35cf4165ba38430cb943db0e6f6be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DOMCdataSection&lt;/strong&gt;extends&lt;a href=&quot;class.domtext&quot;&gt;DOMText&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;DOMCdataSection&lt;/strong&gt;扩展了&lt;a href=&quot;class.domtext&quot;&gt;DOMText&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="c5dbeecb20e3d94a4bf3d8d4cd169609ce367519" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DOMCharacterData&lt;/strong&gt;extends&lt;a href=&quot;class.domnode&quot;&gt;DOMNode&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;DOMCharacterData&lt;/strong&gt;扩展&lt;a href=&quot;class.domnode&quot;&gt;DOMNode&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="7922b5755a8ea95c37a84a75843f92a11c4dc757" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DOMComment&lt;/strong&gt;extends&lt;a href=&quot;class.domcharacterdata&quot;&gt;DOMCharacterData&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;DOMComment&lt;/strong&gt;扩展了&lt;a href=&quot;class.domcharacterdata&quot;&gt;DOMCharacterData&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="d6fe193b80881f2a9c4e48cd666fa7e49f903acb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DOMDocument&lt;/strong&gt;extends&lt;a href=&quot;class.domnode&quot;&gt;DOMNode&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;DOMDocument&lt;/strong&gt;扩展了&lt;a href=&quot;class.domnode&quot;&gt;DOMNode&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="c071dfed2a7bdbb772019704a9278712316d0eff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DOMDocumentFragment&lt;/strong&gt;extends&lt;a href=&quot;class.domnode&quot;&gt;DOMNode&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;DOMDocumentFragment&lt;/strong&gt;扩展&lt;a href=&quot;class.domnode&quot;&gt;DOMNode&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="25d47d233d65316618a602f3c0d8247d106f6ead" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DOMDocumentType&lt;/strong&gt;extends&lt;a href=&quot;class.domnode&quot;&gt;DOMNode&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;DOMDocumentType&lt;/strong&gt;扩展&lt;a href=&quot;class.domnode&quot;&gt;DOMNode&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="b8457bde132a555fe97a9caea184616728f4e247" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DOMElement&lt;/strong&gt;extends&lt;a href=&quot;class.domnode&quot;&gt;DOMNode&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;DOMElement&lt;/strong&gt;扩展了&lt;a href=&quot;class.domnode&quot;&gt;DOMNode&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="c5459e6671d48be56c0d42086f23a3bb0e957f1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DOMEntity&lt;/strong&gt;extends&lt;a href=&quot;class.domnode&quot;&gt;DOMNode&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;DOMEntity&lt;/strong&gt;扩展了&lt;a href=&quot;class.domnode&quot;&gt;DOMNode&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="74784eb249c69db0ab5c7da75b444811ae81e67d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DOMEntityReference&lt;/strong&gt;extends&lt;a href=&quot;class.domnode&quot;&gt;DOMNode&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;DOMEntityReference&lt;/strong&gt;扩展了&lt;a href=&quot;class.domnode&quot;&gt;DOMNode&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="66b324d41c0f6f691d8f16a71cdb1679efad6aaa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DOMException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;DOMException&lt;/strong&gt;扩展了&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="f5c73cd5d5c406aec844b4d5e16907455c033967" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DOMImplementation&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;DOMImplementation&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="298b0899d664cd7652bc3756da4e45706b1eb430" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DOMNamedNodeMap&lt;/strong&gt;implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;DOMNamedNodeMap&lt;/strong&gt;实现&lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt;，&lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="5c70f5028f2b83ab984675b415be4740573cdf7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DOMNode&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;DOMNode&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="5fa2e9209236340029ae131fd96a124e63432abe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DOMNodeList&lt;/strong&gt;implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;DOMNodeList&lt;/strong&gt;实现&lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt;，&lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="ada33fb043811601383a70021da4506ff5fbc1cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DOMNotation&lt;/strong&gt;extends&lt;a href=&quot;class.domnode&quot;&gt;DOMNode&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;DOMNotation&lt;/strong&gt;扩展了&lt;a href=&quot;class.domnode&quot;&gt;DOMNode&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="2cb99101c3fabfd0fe9a71bb37a6aa939bd65cb1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DOMProcessingInstruction&lt;/strong&gt;extends&lt;a href=&quot;class.domnode&quot;&gt;DOMNode&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;DOMProcessingInstruction&lt;/strong&gt;扩展了&lt;a href=&quot;class.domnode&quot;&gt;DOMNode&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="2c44bc9a0a8ef684d15cbf5dffac95af8050731f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DOMText&lt;/strong&gt;extends&lt;a href=&quot;class.domcharacterdata&quot;&gt;DOMCharacterData&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;DOMText&lt;/strong&gt;扩展了&lt;a href=&quot;class.domcharacterdata&quot;&gt;DOMCharacterData&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="d3401bfd29e1e5e4b78e4f2efc1e05b08757b15a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DOMXPath&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;DOMXPath&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="4c4bd7c42bb2f627b1352d941a4aa4c0ae6d798d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DateInterval&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;DateInterval&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="549d967f6130e9716a11d28fc3dec2b6bc417985" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DatePeriod&lt;/strong&gt;implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;DatePeriod&lt;/strong&gt;实现&lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="70c3cc82c081f8f20f6610fa87a8292758dbce5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DateTime:__construct()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;DateTime:__construct()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4bc35b43f69b2cf5210375fe853734da7c53c87c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DateTime&lt;/strong&gt;implements &lt;a href=&quot;class.datetimeinterface&quot;&gt;DateTimeInterface&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;DateTime&lt;/strong&gt;实现&lt;a href=&quot;class.datetimeinterface&quot;&gt;DateTimeInterface&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="b5563b43e6648b1f6b833971ed84a5079a068941" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DateTimeImmutable&lt;/strong&gt;implements &lt;a href=&quot;class.datetimeinterface&quot;&gt;DateTimeInterface&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;DateTimeImmutable&lt;/strong&gt;实现&lt;a href=&quot;class.datetimeinterface&quot;&gt;DateTimeInterface&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="8de37223201b489c224ce59961ccdccfdcbb181f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DateTimeInterface&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;DateTimeInterface&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="a6b1c3fa9f620064e376d5bfe1ca4bb8f51ba07f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DateTimeZone&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;DateTimeZone&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="b47e683125819e785b56f9c04f64c2d3641e7c18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Directory&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;目录&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="c3565395f8a12b544b120702a0e9acf382bac1ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DirectoryIterator&lt;/strong&gt; extends &lt;a href=&quot;class.splfileinfo&quot;&gt;SplFileInfo&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;DirectoryIterator&lt;/strong&gt;扩展了&lt;a href=&quot;class.splfileinfo&quot;&gt;SplFileInfo&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2933807cc68f9cd77adae26ffb7d0b3dfb7a956b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DirectoryIterator&lt;/strong&gt;extends&lt;a href=&quot;class.splfileinfo&quot;&gt;SplFileInfo&lt;/a&gt;implements &lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;DirectoryIterator&lt;/strong&gt;扩展了&lt;a href=&quot;class.splfileinfo&quot;&gt;SplFileInfo&lt;/a&gt;实现&lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="7f592231bb8a8f0b960b1fbe7c867094f4c43643" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DivisionByZeroError&lt;/strong&gt; is thrown when an attempt is made to divide a number by zero.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;尝试将数字除以零时，将引发&lt;strong&gt;DivisionByZeroError&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="c9f2247be5b9ee3037899cc293f73ee2799ef21d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DivisionByZeroError&lt;/strong&gt;extends&lt;a href=&quot;class.arithmeticerror&quot;&gt;ArithmeticError&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;DivisionByZeroError&lt;/strong&gt;扩展了&lt;a href=&quot;class.arithmeticerror&quot;&gt;ArithmeticError&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="b2902f86441d001bb5bd141afef29a96b1acd466" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DomainException&lt;/strong&gt;extends&lt;a href=&quot;class.logicexception&quot;&gt;LogicException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;DomainException&lt;/strong&gt;扩展了&lt;a href=&quot;class.logicexception&quot;&gt;LogicException&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="1948ed5a98e8b9da5a0b88f8316205d62ac43cd8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ds\Collection&lt;/strong&gt;implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt;, &lt;a href=&quot;class.jsonserializable&quot;&gt;JsonSerializable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Ds \ Collection&lt;/strong&gt;实现&lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt;，&lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt;，&lt;a href=&quot;class.jsonserializable&quot;&gt;JsonSerializable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="dc7762bf15e2c7b3b882b7b93874e8e9b85bd179" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ds\Deque&lt;/strong&gt;implements &lt;strong&gt;Ds\Sequence&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Ds \ Deque&lt;/strong&gt;实现&lt;strong&gt;Ds \ Sequence&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="4a5bca8b7e423380142edec16bc72267608a21d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ds\Deque&lt;/strong&gt;implements &lt;strong&gt;Ds\Sequence&lt;/strong&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Ds \ Deque&lt;/strong&gt;实现&lt;strong&gt;Ds \ Sequence&lt;/strong&gt;，&lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="efd18fc90aba5795ea948ec63145ffda60424f8e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ds\Hashable&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Ds \ Hashable&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="e56ba96cd11a479fa1bb4fd0328ca59ebaa1aa2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ds\Map&lt;/strong&gt;implements &lt;strong&gt;Ds\Collection&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Ds \ Map&lt;/strong&gt;实现&lt;strong&gt;Ds \ Collection&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="4ef5d49a684ca2d6fbed6c4bccf1a3b9476e1e10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ds\Map&lt;/strong&gt;implements &lt;strong&gt;Ds\Collection&lt;/strong&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Ds \ Map&lt;/strong&gt;实现&lt;strong&gt;Ds \ Collection&lt;/strong&gt;，&lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="b1983df6a8fcb4eaca3d2009f8aa3cf739072138" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ds\Pair&lt;/strong&gt;implements &lt;a href=&quot;class.jsonserializable&quot;&gt;JsonSerializable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Ds \ Pair&lt;/strong&gt;实现&lt;a href=&quot;class.jsonserializable&quot;&gt;JsonSerializable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="e37772f4f4348a3579aa8bbcc35de15315c4275f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ds\PriorityQueue&lt;/strong&gt;implements &lt;strong&gt;Ds\Collection&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Ds \ PriorityQueue&lt;/strong&gt;实现&lt;strong&gt;Ds \ Collection&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="764b600cea8d6db8f6f67d81aaa342309a61f4eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ds\Queue&lt;/strong&gt;implements &lt;strong&gt;Ds\Collection&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Ds \ Queue&lt;/strong&gt;实现&lt;strong&gt;Ds \ Collection&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="142d0a6f263d24aac3a70a0c461e160381de82c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ds\Queue&lt;/strong&gt;implements &lt;strong&gt;Ds\Collection&lt;/strong&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Ds \ Queue&lt;/strong&gt;实现了&lt;strong&gt;Ds \ Collection&lt;/strong&gt;，&lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="f43cf97b72e6a6037a3fe39c1abc8a6d221ca817" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ds\Sequence&lt;/strong&gt; containing all the pairs of the map.</source>
          <target state="translated">&lt;strong&gt;Ds \ Sequence&lt;/strong&gt;包含地图的所有对。</target>
        </trans-unit>
        <trans-unit id="1028a03155f3a7f8fff6c4e231205c7d96f4eb24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ds\Sequence&lt;/strong&gt;implements &lt;strong&gt;Ds\Collection&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Ds \ Sequence&lt;/strong&gt;实现&lt;strong&gt;Ds \ Collection&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="66d02c70116482090976a2c4f6aed3b3adcc5860" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ds\Sequence&lt;/strong&gt;implements &lt;strong&gt;Ds\Collection&lt;/strong&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Ds \ Sequence&lt;/strong&gt;实现&lt;strong&gt;Ds \ Collection&lt;/strong&gt;，&lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="7e2992e7eea900fa9acc15593b8638a7f27fe9b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ds\Set&lt;/strong&gt;implements &lt;strong&gt;Ds\Collection&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Ds \ Set&lt;/strong&gt;实现&lt;strong&gt;Ds \ Collection&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="93123a8e56f3dd55a0b8196129aa8339c67dd2fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ds\Set&lt;/strong&gt;implements &lt;strong&gt;Ds\Collection&lt;/strong&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Ds \ Set&lt;/strong&gt;实现&lt;strong&gt;Ds \ Collection&lt;/strong&gt;，&lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="d54a34d77ca042c757986a73ffbfcef04c02b84e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ds\Stack&lt;/strong&gt;implements &lt;strong&gt;Ds\Collection&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Ds \ Stack&lt;/strong&gt;实现&lt;strong&gt;Ds \ Collection&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="2693479488ede1f57696b6259caae61774bc662e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ds\Stack&lt;/strong&gt;implements &lt;strong&gt;Ds\Collection&lt;/strong&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Ds \ Stack&lt;/strong&gt;实现&lt;strong&gt;Ds \ Collection&lt;/strong&gt;，&lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="e68e692a039375f1fb6b849b7947eeb0ea3a151e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ds\Vector&lt;/strong&gt;implements &lt;strong&gt;Ds\Sequence&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Ds \ Vector&lt;/strong&gt;实现&lt;strong&gt;Ds \ Sequence&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="b202400d7412ea2315231167b5fa0df4fe96c89b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ds\Vector&lt;/strong&gt;implements &lt;strong&gt;Ds\Sequence&lt;/strong&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Ds \ Vector&lt;/strong&gt;实现&lt;strong&gt;Ds \ Sequence&lt;/strong&gt;，&lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="d60cfa97db41a410d4f8b28f91a96c7e08ac04af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Elements of array returned by &lt;strong&gt;gd_info()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;strong&gt;gd_info（）&lt;/strong&gt;返回的数组元素&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6ec1b668da12eaebd488f255cdfd6418b3a47186" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EmptyIterator&lt;/strong&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;EmptyIterator&lt;/strong&gt;实现&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="beda7178f11d39022b26f5eb78cdb907e0ebc7f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Error and Logging Setting Options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;错误和记录设置选项&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="68067b5153d63f1fe4c4d59b1ea260445f6bb0a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Error&lt;/strong&gt; is the base class for all internal PHP errors.</source>
          <target state="translated">&lt;strong&gt;错误&lt;/strong&gt;是所有内部PHP错误的基类。</target>
        </trans-unit>
        <trans-unit id="17fd104b4dbd8bac7a6e1cf9120db13842a49f89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Error&lt;/strong&gt;implements&lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;错误&lt;/strong&gt;实现了&lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="3b8bb55fc799f0708d27272dd10977495b91e239" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ErrorException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ErrorException&lt;/strong&gt;扩展了&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="417822f41767251eab57b434c86acde3a97514ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Escaped characters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;转义字符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="688de5065bfb30c379154fec331570825e9354bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ev::suspend()&lt;/strong&gt; and &lt;a href=&quot;ev.resume&quot;&gt;Ev::resume()&lt;/a&gt; methods suspend and resume the default loop correspondingly.</source>
          <target state="translated">&lt;strong&gt;Ev :: suspend（）&lt;/strong&gt;和&lt;a href=&quot;ev.resume&quot;&gt;Ev :: resume（）&lt;/a&gt;方法分别挂起并恢复默认循环。</target>
        </trans-unit>
        <trans-unit id="5d5cf1f9c4c87475257b38f09413ca9316a52b25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EvCheck&lt;/strong&gt;extends&lt;a href=&quot;class.evwatcher&quot;&gt;EvWatcher&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;EvCheck&lt;/strong&gt;扩展了&lt;a href=&quot;class.evwatcher&quot;&gt;EvWatcher&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="6e999374c7fec33b3354eda08fa1e7881722834a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EvChild&lt;/strong&gt; watchers trigger when the process receives a &lt;strong&gt;&lt;code&gt;SIGCHLD&lt;/code&gt;&lt;/strong&gt; in response to some child status changes (most typically when a child dies or exits). It is permissible to install an &lt;strong&gt;&lt;code&gt;EvChild&lt;/code&gt;&lt;/strong&gt; watcher after the child has been forked(which implies it might have already exited), as long as the event loop isn't entered(or is continued from a watcher), i.e. forking and then immediately registering a watcher for the child is fine, but forking and registering a watcher a few event loop iterations later or in the next callback invocation is not.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;当进程收到&lt;strong&gt; &lt;code&gt;SIGCHLD&lt;/code&gt; &lt;/strong&gt;以响应某些子状态更改时（最通常是在子死亡或退出时），&lt;strong&gt;EvChild&lt;/strong&gt;观察者将触发。只要未进入事件循环（或从观察者继续执行），就可以在分支孩子之后（这意味着它可能已经退出）安装&lt;strong&gt; &lt;code&gt;EvChild&lt;/code&gt; &lt;/strong&gt;观察者，即进行派生然后立即注册孩子的watcher很好，但是在稍后或在下一个回调调用中进行一些事件循环迭代时，派生并注册一个watcher则不是。</target>
        </trans-unit>
        <trans-unit id="0bf2df7e7d10475d6be754dcd66ab12e0676dce0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EvChild&lt;/strong&gt;extends&lt;a href=&quot;class.evwatcher&quot;&gt;EvWatcher&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;EvChild&lt;/strong&gt;扩展了&lt;a href=&quot;class.evwatcher&quot;&gt;EvWatcher&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="99614c9fc978ba64fadd0d1e3b8bf6c2b4e0a2cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EvEmbed&lt;/strong&gt;extends&lt;a href=&quot;class.evwatcher&quot;&gt;EvWatcher&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;EvEmbed&lt;/strong&gt;扩展了&lt;a href=&quot;class.evwatcher&quot;&gt;EvWatcher&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="953d14549d7cd87fc329058fcc42f952f70d1c6e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EvFork&lt;/strong&gt;extends&lt;a href=&quot;class.evwatcher&quot;&gt;EvWatcher&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;EvFork&lt;/strong&gt;扩展了&lt;a href=&quot;class.evwatcher&quot;&gt;EvWatcher&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="436524a23bc4d6f23d36abc214c6f3122ef5e2d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EvIdle&lt;/strong&gt; watchers trigger events when no other events of the same or higher priority are pending ( &lt;a href=&quot;class.evprepare&quot;&gt;EvPrepare&lt;/a&gt; , &lt;a href=&quot;class.evcheck&quot;&gt;EvCheck&lt;/a&gt; and other &lt;strong&gt;EvIdle&lt;/strong&gt; watchers do not count as receiving &lt;em&gt;events&lt;/em&gt; ).</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;当没有其他相同或更高优先级的事件挂起时，&lt;strong&gt;EvIdle&lt;/strong&gt;监视程序将触发事件（&lt;a href=&quot;class.evprepare&quot;&gt;EvPrepare&lt;/a&gt;，&lt;a href=&quot;class.evcheck&quot;&gt;EvCheck&lt;/a&gt;和其他&lt;strong&gt;EvIdle&lt;/strong&gt;监视程序不计为接收&lt;em&gt;事件&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="ce7ff9075489a3c65da55d746fa8d2683bdc8e89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EvIdle&lt;/strong&gt;extends&lt;a href=&quot;class.evwatcher&quot;&gt;EvWatcher&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;EvIdle&lt;/strong&gt;扩展了&lt;a href=&quot;class.evwatcher&quot;&gt;EvWatcher&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="feb300c3d48a63387c3164b2fd741a297a592d44" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EvIo&lt;/strong&gt; watchers check whether a file descriptor(or socket, or a stream castable to numeric file descriptor) is readable or writable in each iteration of the event loop, or, more precisely, when reading would not block the process and writing would at least be able to write some data. This behaviour is called &lt;em&gt;level-triggering&lt;/em&gt; because events are kept receiving as long as the condition persists. To stop receiving events just stop the watcher.</source>
          <target state="translated">&lt;strong&gt;EvIo&lt;/strong&gt;观察者检查文件描述符（或插座，或流可流延到数字文件描述符）是否在事件循环的每次迭代可读或可写的，或者更精确地，当读出不遮挡过程和写入将至少是能够写一些数据。此行为称为&lt;em&gt;级别触发，&lt;/em&gt;因为只要条件持续存在，事件就会一直接收。要停止接收事件，只需停止观察者即可。</target>
        </trans-unit>
        <trans-unit id="3e3d1240ef328712da7247f33f0feed00903ab45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EvIo&lt;/strong&gt;extends&lt;a href=&quot;class.evwatcher&quot;&gt;EvWatcher&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;EvIo&lt;/strong&gt;扩展了&lt;a href=&quot;class.evwatcher&quot;&gt;EvWatcher&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="e94dc9a1d954c783c4157c648d4f99f8f1e649ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EvLoop::suspend()&lt;/strong&gt; and &lt;a href=&quot;evloop.resume&quot;&gt;EvLoop::resume()&lt;/a&gt; methods suspend and resume a loop correspondingly.</source>
          <target state="translated">&lt;strong&gt;EvLoop :: suspend（）&lt;/strong&gt;和&lt;a href=&quot;evloop.resume&quot;&gt;EvLoop :: resume（）&lt;/a&gt;方法分别挂起并恢复循环。</target>
        </trans-unit>
        <trans-unit id="b0cb08115beb352e30c8392ccfd1b2cf7f2f3fe9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EvPeriodic&lt;/strong&gt; watcher can be configured to trigger after some specific point in time. For example, if an &lt;strong&gt;EvPeriodic&lt;/strong&gt; watcher is configured to trigger &lt;em&gt;&quot;in 10 seconds&quot;&lt;/em&gt; (e.g. &lt;a href=&quot;evloop.now&quot;&gt;EvLoop::now()&lt;/a&gt; + &lt;strong&gt;&lt;code&gt;10.0&lt;/code&gt;&lt;/strong&gt; , i.e. an absolute time, not a delay), and the system clock is reset to &lt;em&gt;January of the previous year&lt;/em&gt; , then it will take a year or more to trigger the event (unlike an &lt;a href=&quot;class.evtimer&quot;&gt;EvTimer&lt;/a&gt; , which would still trigger roughly &lt;strong&gt;&lt;code&gt;10&lt;/code&gt;&lt;/strong&gt; seconds after starting it as it uses a relative timeout).</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;可以将&lt;strong&gt;EvPeriodic&lt;/strong&gt; watcher配置为在某个特定时间点之后触发。例如，如果将&lt;strong&gt;EvPeriodic&lt;/strong&gt;监视程序配置为触发&lt;em&gt;&amp;ldquo;在10秒内&amp;rdquo;&lt;/em&gt;（例如&lt;a href=&quot;evloop.now&quot;&gt;EvLoop :: now（）&lt;/a&gt; + &lt;strong&gt; &lt;code&gt;10.0&lt;/code&gt; &lt;/strong&gt;，即绝对时间，而不是延迟），并且系统时钟重置为&lt;em&gt;上一年的1月&lt;/em&gt;，那么触发该事件将需要一年或更长时间（与&lt;a href=&quot;class.evtimer&quot;&gt;EvTimer&lt;/a&gt;不同，因为EvTimer使用相对超时会在启动事件后大约触发&lt;strong&gt; &lt;code&gt;10&lt;/code&gt; &lt;/strong&gt;秒）。</target>
        </trans-unit>
        <trans-unit id="0e649c83de0f57c34b30b7f8071d1a9895df20fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EvPeriodic&lt;/strong&gt;extends&lt;a href=&quot;class.evwatcher&quot;&gt;EvWatcher&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;EvPeriodic&lt;/strong&gt;扩展了&lt;a href=&quot;class.evwatcher&quot;&gt;EvWatcher&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="1f4e3c44b449a959bf28cdd70977f78226ba5f65" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EvPrepare&lt;/strong&gt; and &lt;a href=&quot;class.evcheck&quot;&gt;EvCheck&lt;/a&gt; watchers are usually used in pairs. &lt;strong&gt;EvPrepare&lt;/strong&gt; watchers get invoked before the process blocks, &lt;a href=&quot;class.evcheck&quot;&gt;EvCheck&lt;/a&gt; afterwards.</source>
          <target state="translated">&lt;strong&gt;EvPrepare&lt;/strong&gt;和&lt;a href=&quot;class.evcheck&quot;&gt;EvCheck&lt;/a&gt;监视程序通常成对使用。&lt;strong&gt;EvPrepare&lt;/strong&gt;观察者在进程阻止之前被调用，在&lt;a href=&quot;class.evcheck&quot;&gt;EvCheck&lt;/a&gt;之后被调用。</target>
        </trans-unit>
        <trans-unit id="25748842e4d23ff808d875e13810c9fc09cffde1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EvPrepare&lt;/strong&gt;extends&lt;a href=&quot;class.evwatcher&quot;&gt;EvWatcher&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;EvPrepare&lt;/strong&gt;扩展了&lt;a href=&quot;class.evwatcher&quot;&gt;EvWatcher&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="bcd2507dd6a19b7fda5497b68d64f5c450ad3cb5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EvSignal&lt;/strong&gt; watchers will trigger an event when the process receives a specific signal one or more times. Even though signals are very asynchronous, &lt;em&gt;libev&lt;/em&gt; will try its best to deliver signals synchronously, i.e. as part of the normal event processing, like any other event.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;当进程一次或多次收到特定信号时，&lt;strong&gt;EvSignal&lt;/strong&gt;监视程序将触发事件。即使信号是非常异步的，&lt;em&gt;libev&lt;/em&gt;也会尽最大努力同步传递信号，即，像其他任何事件一样，作为正常事件处理的一部分。</target>
        </trans-unit>
        <trans-unit id="399182a6c959a4e81e422c2622352a1bcb55d59d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EvSignal&lt;/strong&gt;extends&lt;a href=&quot;class.evwatcher&quot;&gt;EvWatcher&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;EvSignal&lt;/strong&gt;扩展了&lt;a href=&quot;class.evwatcher&quot;&gt;EvWatcher&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="4805bc9772ca49a3c138f1b10b78283a8974f9dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EvStat&lt;/strong&gt; monitors a file system path for attribute changes. It calls &lt;em&gt;stat()&lt;/em&gt; on that path in regular intervals(or when the OS signals it changed) and sees if it changed compared to the last time, invoking the callback if it did.</source>
          <target state="translated">&lt;strong&gt;EvStat&lt;/strong&gt;监视文件系统路径以进行属性更改。它会定期（或在操作系统发出信号更改时&lt;em&gt;）&lt;/em&gt;在该路径上调用&lt;em&gt;stat（）&lt;/em&gt;，并查看与上次相比是否更改，并调用回调。</target>
        </trans-unit>
        <trans-unit id="3d6a53df6c5884556725ca1ab92d1a52aebfa153" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EvStat&lt;/strong&gt;extends&lt;a href=&quot;class.evwatcher&quot;&gt;EvWatcher&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;EvStat&lt;/strong&gt;扩展了&lt;a href=&quot;class.evwatcher&quot;&gt;EvWatcher&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="d8adebac9bb267a9d51f02a1c2576ea5aa280a6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EvTimer&lt;/strong&gt; watchers are simple relative timers that generate an event after a given time, and optionally repeating in regular intervals after that.</source>
          <target state="translated">&lt;strong&gt;EvTimer&lt;/strong&gt;监视程序是简单的相对计时器，可以在给定时间后生成事件，并可以选择在此后定期进行重复。</target>
        </trans-unit>
        <trans-unit id="61c18674dbab09e45c2f1b9c3784d128bb92289b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EvTimer&lt;/strong&gt;extends&lt;a href=&quot;class.evwatcher&quot;&gt;EvWatcher&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;EvTimer&lt;/strong&gt;扩展了&lt;a href=&quot;class.evwatcher&quot;&gt;EvWatcher&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="34c4b801a696eb88781f0dcfbdb6dadfd0e99d67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EvWatcher::__construct()&lt;/strong&gt; is an abstract constructor of a watcher object implemented in the derived classes.</source>
          <target state="translated">&lt;strong&gt;EvWatcher :: __ construct（）&lt;/strong&gt;是在派生类中实现的watcher对象的抽象构造函数。</target>
        </trans-unit>
        <trans-unit id="b9b9a504e3385b3054512f11ac895d3fe0f12324" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EvWatcher&lt;/strong&gt; is a base class for all watchers( &lt;a href=&quot;class.evcheck&quot;&gt;EvCheck&lt;/a&gt; , &lt;a href=&quot;class.evchild&quot;&gt;EvChild&lt;/a&gt; etc.). Since &lt;strong&gt;EvWatcher&lt;/strong&gt; 's constructor is abstract , one can't(and don't need to) create EvWatcher objects directly.</source>
          <target state="translated">&lt;strong&gt;EvWatcher&lt;/strong&gt;是所有观察者（&lt;a href=&quot;class.evcheck&quot;&gt;EvCheck&lt;/a&gt;，&lt;a href=&quot;class.evchild&quot;&gt;EvChild&lt;/a&gt;等）的基类。由于&lt;strong&gt;EvWatcher&lt;/strong&gt;的构造函数是抽象的，因此不能（也不需要）直接创建EvWatcher对象。</target>
        </trans-unit>
        <trans-unit id="ddffe0a0698aca4faeda94a15898c5344222f6a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Event::addSignal()&lt;/strong&gt; is an alias of &lt;a href=&quot;event.add&quot;&gt;Event::add()&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Event :: addSignal（）&lt;/strong&gt;是&lt;a href=&quot;event.add&quot;&gt;Event :: add（）&lt;/a&gt;的别名</target>
        </trans-unit>
        <trans-unit id="f41fcfb3d82fc9d95b632ef6d210d84f31697a3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Event::addTimer()&lt;/strong&gt; is an alias of &lt;a href=&quot;event.add&quot;&gt;Event::add()&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Event :: addTimer（）&lt;/strong&gt;是&lt;a href=&quot;event.add&quot;&gt;Event :: add（）&lt;/a&gt;的别名</target>
        </trans-unit>
        <trans-unit id="5d7ec29794a3cb7e773b3b71bdfa89a968c4f7e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Event::delSignal()&lt;/strong&gt; is an alias of &lt;a href=&quot;event.del&quot;&gt;Event::del()&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Event :: delSignal（）&lt;/strong&gt;是&lt;a href=&quot;event.del&quot;&gt;Event :: del（）&lt;/a&gt;的别名</target>
        </trans-unit>
        <trans-unit id="b0fa6f30ecd83b727c090c8a46eca472742d2c92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Event::delTimer()&lt;/strong&gt; is an alias of &lt;a href=&quot;event.del&quot;&gt;Event::del()&lt;/a&gt; .</source>
          <target state="translated">&lt;strong&gt;Event :: delTimer（）&lt;/strong&gt;是&lt;a href=&quot;event.del&quot;&gt;Event :: del（）&lt;/a&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="3a07aab91005211851e957415c56f39f7166ad1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Event&lt;/strong&gt; class represents and event firing on a file descriptor being ready to read from or write to; a file descriptor becoming ready to read from or write to(edge-triggered I/O only); a timeout expiring; a signal occuring; a user-triggered event.</source>
          <target state="translated">&lt;strong&gt;事件&lt;/strong&gt;类代表文件描述符上的事件触发，并且事件描述符已准备好从中读取或写入；准备好要读取或写入的文件描述符（仅适用于沿边沿触发的I / O）；超时到期；发生信号；用户触发的事件。</target>
        </trans-unit>
        <trans-unit id="2e4b2151a23abdedb46555c85a8a1101f0fd2229" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EventBase&lt;/strong&gt; class represents libevent's event base structure. It holds a set of events and can poll to determine which events are active.</source>
          <target state="translated">&lt;strong&gt;EventBase&lt;/strong&gt;类表示libevent的事件库结构。它包含一组事件，并可进行轮询以确定哪些事件处于活动状态。</target>
        </trans-unit>
        <trans-unit id="e3a67728e751de354746ee4561319ed63f6c0a77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EventBuffer&lt;/strong&gt; represents Libevent's &quot;evbuffer&quot;, an utility functionality for buffered I/O.</source>
          <target state="translated">&lt;strong&gt;EventBuffer&lt;/strong&gt;代表&lt;strong&gt;Libevent&lt;/strong&gt;的&amp;ldquo; evbuffer&amp;rdquo;，这是用于缓冲I / O的实用程序功能。</target>
        </trans-unit>
        <trans-unit id="af1fd9f042b4aad07deec1b144a653f9f25b6993" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EventBuffer&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;EventBuffer&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="d138dffa4df03c36353e54634017f929356e594a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EventBufferEvent::connectHost()&lt;/strong&gt; requires &lt;code&gt;libevent-2.0.3-alpha&lt;/code&gt; or greater.</source>
          <target state="translated">&lt;strong&gt;EventBufferEvent :: connectHost（）&lt;/strong&gt;需要 &lt;code&gt;libevent-2.0.3-alpha&lt;/code&gt; 或更高版本。</target>
        </trans-unit>
        <trans-unit id="96126f9ce63086ac5ab8e65fe94a3a7938071e57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EventBufferEvent::connectHost()&lt;/strong&gt; requires &lt;em&gt;libevent-2.0.3-alpha&lt;/em&gt; or greater.</source>
          <target state="translated">&lt;strong&gt;EventBufferEvent :: connectHost（）&lt;/strong&gt;需要&lt;em&gt;libevent-2.0.3-alpha&lt;/em&gt;或更高版本。</target>
        </trans-unit>
        <trans-unit id="3adae0102ec0e0bf25e4cc0ac7750add47a38d56" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EventHttp::setMaxHeadersSize()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;EventHttp::setMaxHeadersSize()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="68013a6d850d2480c8ef336eae481876a5aab235" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EventHttpConnection&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;EventHttpConnection&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="559e0a880ef4c7f6c984e47898617a3e70f0f593" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EventHttpRequest::getConnection()&lt;/strong&gt; method is usually useful when we need to set up a callback on connection close. See &lt;a href=&quot;eventhttpconnection.setclosecallback&quot;&gt;EventHttpConnection::setCloseCallback()&lt;/a&gt; .</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;当我们需要在连接关闭时设置回调时，通常使用&lt;strong&gt;EventHttpRequest :: getConnection（）&lt;/strong&gt;方法。参见&lt;a href=&quot;eventhttpconnection.setclosecallback&quot;&gt;EventHttpConnection :: setCloseCallback（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e87943e1225c174f1654827eaa677b0ede835cdb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EventHttpRequest&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;EventHttpRequest&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="6ef09d74c439db87a5edb7c3fa99b17bd8023fef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EventUtil&lt;/strong&gt; is a singleton with supplimentary methods and constants.</source>
          <target state="translated">&lt;strong&gt;EventUtil&lt;/strong&gt;是具有补充方法和常量的单例。</target>
        </trans-unit>
        <trans-unit id="eabb670d57c18b9aa13d2097d0048b8ad383c4c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 :: from outside the class definition&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 ::从类定义之外&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f9faa970f29cbf442bd0e054dd9c1fe2afb237c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;class.dateinterval&quot;&gt;DateInterval&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;a href=&quot;class.dateinterval&quot;&gt;DateInterval&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="52d55778a6deba95f531658bcfd80e5d25b47dc4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;class.globiterator&quot;&gt;GlobIterator&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;a href=&quot;class.globiterator&quot;&gt;GlobIterator&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0772a8b0ca22e89dd4d43e906983e5b2d4cb780f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;class.recursivedirectoryiterator&quot;&gt;RecursiveDirectoryIterator&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;a href=&quot;class.recursivedirectoryiterator&quot;&gt;RecursiveDirectoryIterator&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="914b078b15789d6a6c8c11f391e866bd770a5f62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;class.reflectionextension&quot;&gt;ReflectionExtension&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;a href=&quot;class.reflectionextension&quot;&gt;ReflectionExtension&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e77b782ea1eea9ebdd31a198f53e75ed7e3d906" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;ds-map.sort&quot;&gt;Ds\Map::sort()&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;a href=&quot;ds-map.sort&quot;&gt;Ds \ Map :: sort（）&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6b049755990bdb353b10b160811880bbedffcf4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;filesystemiterator.key&quot;&gt;FilesystemIterator::key()&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;a href=&quot;filesystemiterator.key&quot;&gt;FilesystemIterator :: key（）&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="18525397145f35b79f901d512092b425db6d075c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;function.curl-errno&quot;&gt;curl_errno()&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;a href=&quot;function.curl-errno&quot;&gt;curl_errno（）&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49bf9e1a5a6ad71250ef57fb03b6d98201195f71" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;function.curl-escape&quot;&gt;curl_escape()&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;a href=&quot;function.curl-escape&quot;&gt;curl_escape（）&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8aef3357b57f6bbefe6abce1bebeae454162e04c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;function.curl-share-setopt&quot;&gt;curl_share_setopt()&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;a href=&quot;function.curl-share-setopt&quot;&gt;curl_share_setopt（）&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="642aaf0aadfae8a36b7fc2a91a6ea602846de278" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;function.eio-lstat&quot;&gt;eio_lstat()&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;a href=&quot;function.eio-lstat&quot;&gt;eio_lstat（）&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="57b03f5e4fcdd6daedbd56137da04972fba1e233" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;function.ibase-service-attach&quot;&gt;ibase_service_attach()&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;a href=&quot;function.ibase-service-attach&quot;&gt;ibase_service_attach（）&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c388bf4e7676a11f84e3e1315ea557b43a466f43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;function.odbc-execute&quot;&gt;odbc_execute()&lt;/a&gt; and &lt;strong&gt;odbc_prepare()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;a href=&quot;function.odbc-execute&quot;&gt;odbc_execute（）&lt;/a&gt;和&lt;strong&gt;odbc_prepare（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="25396367beb78c6b66cd2e518f205175db67894d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;function.password-hash&quot;&gt;password_hash()&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;a href=&quot;function.password-hash&quot;&gt;password_hash（）&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5c9ffc917374f1a313b6ad78e45d9a8446ba6da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;function.pspell-add-to-personal&quot;&gt;pspell_add_to_personal()&lt;/a&gt; Example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;a href=&quot;function.pspell-add-to-personal&quot;&gt;pspell_add_to_personal（）&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7ba61aa78c01d54c877a01f5f1b71b26d2f8763" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;function.pspell-add-to-personal&quot;&gt;pspell_add_to_personal()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example #1 &lt;a href=&quot;function.pspell-add-to-personal&quot;&gt;pspell_add_to_personal()&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e5944696da02d734f2a47981f568a57194726f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;memcached.getdelayed&quot;&gt;Memcached::getDelayed()&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;a href=&quot;memcached.getdelayed&quot;&gt;Memcached :: getDelayed（）&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb5e5ce819f27b3b5bbe5e179bf7eb9ee6567d34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;solrquery.addfacetfield&quot;&gt;SolrQuery::addFacetField()&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;a href=&quot;solrquery.addfacetfield&quot;&gt;SolrQuery :: addFacetField（）&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="073c05144f9c1943e100b3ccfde3eee3cd209f31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;splfileinfo.setfileclass&quot;&gt;SplFileInfo::setFileClass()&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;a href=&quot;splfileinfo.setfileclass&quot;&gt;SplFileInfo :: setFileClass（）&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bddec5e6c3c0b978c1a2c4512134600b81a697c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;syncsharedmemory.construct&quot;&gt;SyncSharedMemory::__construct()&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;a href=&quot;syncsharedmemory.construct&quot;&gt;SyncSharedMemory :: __ construct（）&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bd810421788649d14e9cac20b71ef6842e8526de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;tidynode.haschildren&quot;&gt;tidyNode::hasChildren()&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;a href=&quot;tidynode.haschildren&quot;&gt;tidyNode :: hasChildren（）&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="05d345dfcd51d85f45c5f7f9810f783819f5633a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;yaf-dispatcher.autorender&quot;&gt;Yaf_Dispatcher::autoRender()&lt;/a&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;a href=&quot;yaf-dispatcher.autorender&quot;&gt;Yaf_Dispatcher :: autoRender（）&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f8fc92e1b499d7cee03898600651496a108127fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;yaf-loader.registernamespace&quot;&gt;Yaf_Loader::registerNamespace()&lt;/a&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;a href=&quot;yaf-loader.registernamespace&quot;&gt;Yaf_Loader :: registerNamespace（）&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d3b0d18f83cb4d9e1d20f3c1a2aaf7e83bc8d4da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;a href=&quot;yaf-route-simple.route&quot;&gt;Yaf_Route_Simple::route()&lt;/a&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;a href=&quot;yaf-route-simple.route&quot;&gt;Yaf_Route_Simple :: route（）&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9bdbf3ac1b695d0de5c0398034da2b3caf876b56" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;code&gt;convmap&lt;/code&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;code&gt;convmap&lt;/code&gt; 示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb995fe017be51384628b25016a5578382f66575" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;code&gt;echo&lt;/code&gt; examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;code&gt;echo&lt;/code&gt; 例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="69b4f1fa53c5013681707f38d8afbe8464e09f01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;code&gt;exit&lt;/code&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;code&gt;exit&lt;/code&gt; 示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e0f4baa98f16f2f34e2a7c8083d58240b0705230" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;code&gt;goto&lt;/code&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;code&gt;goto&lt;/code&gt; 示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3b28f81e3b39e9759d46f43ceb66a0bf30b42532" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;code&gt;map&lt;/code&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;code&gt;map&lt;/code&gt; 示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="280d723753972c7e97f1ace9783229fa6f42ec97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;code&gt;print&lt;/code&gt; examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;code&gt;print&lt;/code&gt; 示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ee737395da094432e5fad85e1632b7063eb496d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;code&gt;self::&lt;/code&gt; usage&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;＃1示例 &lt;code&gt;self::&lt;/code&gt; 用法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bdeee5c4557de5feec883d872d8836507d1e8288" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;code&gt;switch&lt;/code&gt; structure&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;code&gt;switch&lt;/code&gt; 结构&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7bfc80e57029fdcf3720bb0fbced549aa283b3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;em&gt;echo&lt;/em&gt; examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;em&gt;回显示&lt;/em&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="05db5c88c135f1ff73ced677d7fdd90163319b43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;em&gt;exit&lt;/em&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;em&gt;退出&lt;/em&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ac3556c0a95c183eb5e0105dca4717368a09e210" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;em&gt;goto&lt;/em&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;em&gt;转到&lt;/em&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2c194b5589e3585b560564d228e50c2d11ce631e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;em&gt;include_once&lt;/em&gt; with a case insensitive OS in PHP 4&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;em&gt;include_once&lt;/em&gt;在PHP 4中具有不区分大小写的OS&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1b98a20a564379e98917029eb2f079c3d616900c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;em&gt;print&lt;/em&gt; examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;em&gt;打印&lt;/em&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c9725356dc28c46e879972387b4a556c42072b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;em&gt;self::&lt;/em&gt; usage&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;em&gt;self ::&lt;/em&gt;用法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bd3c00a3521033c221a58118934501b4baf07e88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;em&gt;switch&lt;/em&gt; structure&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;em&gt;开关&lt;/em&gt;结构&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6509dd003d45199d1bbaa06c68c476f7e465e9a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;$mysqli-&amp;gt;begin_transaction()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;$ mysqli-&amp;gt; begin_transaction（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5ef91a92496502aa1bc8fd375824f019fe74f272" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;A Bootstrap()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;一个Bootstrap（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b8f2d855e8127a14391fea481d7a4cce55e21932" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;A custom View engine()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;一个自定义的View engine（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="66f31b846ae8b19553e703d1868cd5e18707e5e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;AppendIterator.getIteratorIndex()&lt;/strong&gt; basic example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;AppendIterator.getIteratorIndex（）&lt;/strong&gt;基本示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8f74c998ee78f0f293fc997f0c928a23f7724b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;AppendIterator::append()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;AppendIterator :: append（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c087b04ea2b0c315366ded4dd2ed80342fe0fca5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;AppendIterator::getInnerIterator()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;AppendIterator :: getInnerIterator（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3b924f8f17497ed18591d96078d42a0936e4aa8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;AppendIterator::key()&lt;/strong&gt; basic example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;AppendIterator :: key（）&lt;/strong&gt;基本示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1bf99166cbff434e92232c419baea3f29cc0731b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayAccess::offsetExists()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayAccess :: offsetExists（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4561733ba3aaea126826bd543de8679d1b659f3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayIterator::current()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayIterator :: current（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb426101f7f04d6db9b29f54af1b0c3b091784ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayIterator::key()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayIterator :: key（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="af5f43672860ce91c1f32dba006cd338119a97c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayIterator::next()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayIterator :: next（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2fcb43b3dac5a13f04f3eb867c09d53cbcbc86a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayIterator::rewind()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayIterator :: rewind（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8eeef1952f314b14ee606a3ecccaa7637152ccdc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayIterator::valid()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayIterator :: valid（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15ab0f0668e899ae7ab5e012b9179dfb2cd70f36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayObject::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayObject :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d9c0984bb1227c4ae2c5aa7db351d31693fcfda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayObject::append()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayObject :: append（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6415b12330a2d009b1f76d433d616cebbe9b08fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayObject::asort()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayObject :: asort（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab80a3822a980090e8d50730040d16597faaa683" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayObject::count()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayObject :: count（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad924a769b51be580ec7cfd631696c48e0d2ee70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayObject::exchangeArray()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayObject :: exchangeArray（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="058732e23bd2fcf738776ac5855e12a7011cf018" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayObject::getArrayCopy()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayObject :: getArrayCopy（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="966359660b5b7fba2a09d718e8065828d83cb3ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayObject::getFlags()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayObject :: getFlags（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="058a5b1579f6c75b7a8a5dc13b8c5fe37a3c78bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayObject::getIterator()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayObject :: getIterator（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="de6b0d7414917bc45777be53e60463e36485b0da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayObject::getIteratorClass()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayObject :: getIteratorClass（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e2473dc39316386bdb6fc004179f85f2036005ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayObject::ksort()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayObject :: ksort（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5137f0baa9579fe57325d0151cf5baec1339bf79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayObject::natcasesort()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayObject :: natcasesort（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1d06e1c40f4c5b725428937b9c802e236b21a5c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayObject::natsort()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayObject :: natsort（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39f0e0c15669a5ac9c9536254fd925b2403a8299" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayObject::offsetExists()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayObject :: offsetExists（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d76e85fc706d3ba75d7f03981c03e20154e716f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayObject::offsetGet()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayObject :: offsetGet（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="76d350f79b363c2d9a80c6b7aa5b8799508c7b2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayObject::offsetSet()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayObject :: offsetSet（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="65bc2e8228be4edf510dc3041bd0919411c0b2fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayObject::offsetUnset()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayObject :: offsetUnset（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cbd7659e1865386efe37ef06bce7f14c2c41c5b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayObject::serialize()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayObject :: serialize（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="285c04d1900366a335959531514b1b61d5b34d35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayObject::setFlags()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayObject :: setFlags（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7b7c57864a7e92ea877260e5388a9380b6932b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayObject::setIteratorClass()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayObject :: setIteratorClass（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ae9cbbe7d67f657b61d2058244274921cc315aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayObject::uasort()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayObject :: uasort（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d2714edc9d494422369e145fbc032549cbcaad11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ArrayObject::uksort()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ArrayObject :: uksort（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e25bf9ca5a40880db6f814169c6b2bdacd71d18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;CURLFile::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;CURLFile :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2e2a91a166a1a991095ed6ad2a6f1471465dbc3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;CachingIterator::getCache()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;CachingIterator :: getCache（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a7e6bb528dc9d4ada5b6811c27598a8d2e8853b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Closure::bind()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Closure :: bind（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="653a9cf00efb0c374a6c798ac3326d9af0b6d47a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Closure::bindTo()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Closure :: bindTo（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12c20b6c793814c05e4983abef499ad998f9656d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Closure::call()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Closure :: call（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="782a5e152b0be22dbe398f1713c4f418cc57cf51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Collator::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Collat​​or :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a777a56b4b9d510bf3bc2855bbc7395f4dd98a95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Countable::count()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Countable :: count（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="91c417ceb42c6d01c7718b4ea1e794eb829b02ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DOMDocument::importNode()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DOMDocument :: importNode（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="756d17ec7055ff79bc2558f7bf97c3612eff049b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DOMNode::getLineNo()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DOMNode :: getLineNo（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3d02a26f3a882f09c74bacab66fd71c8437af4ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DOMNode::getNodePath()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DOMNode :: getNodePath（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bd4ed307285a9d9d5c9837a295efdc7ef59507a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DatePeriod::getDateInterval()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DatePeriod :: getDateInterval（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7632aca585b65c9b461491d5155dfe3a775cdee0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DatePeriod::getEndDate()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DatePeriod :: getEndDate（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1bd36dd31e03a9f39ee328504a7cf0d706b6e4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DatePeriod::getStartDate()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DatePeriod :: getStartDate（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d74ed61cf8c9e61c56f7e46be43e146974c09f87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DateTime::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DateTime :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="82142ac7bd6284f36f73857e0c65a1ab7b0d1ca9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DateTime::add()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DateTime :: add（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f9e1e19d911a20960d23edf012ef15e96f566208" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DateTime::createFromFormat()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DateTime :: createFromFormat（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a95c06ec10e0cab2295b6abfc8b38f6806fd7839" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DateTime::diff()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DateTime :: diff（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df2402f02e191a0ec156ac55a0fbd3042d77fcc1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DateTime::format()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DateTime :: format（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="514c680bdf4bf03e92065e4c1c8bfd3b2b69298d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DateTime::getLastErrors()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DateTime :: getLastErrors（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fc7990fe59d10282e7232e65bd53563cbc5c3630" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DateTime::getOffset()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DateTime :: getOffset（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dcae8c36f6c53d884ad370839892f12bf3626b51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DateTime::getTimestamp()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DateTime :: getTimestamp（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="358286da783260ae0327698a78c941b8aa81d75e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DateTime::getTimezone()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DateTime :: getTimezone（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="01b8b53381b211b46339901cde160572f2cef2f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DateTime::modify()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DateTime :: modify（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb36c08c0a7ca76dcf4ccedea77dd24a19ef7d29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DateTime::setDate()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DateTime :: setDate（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12076ed8d7150596aa797b0897ef5e41b4d4d3df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DateTime::setISODate()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DateTime :: setISODate（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aa0070cb6bce8f1d8b0c35eaff48e56d4524edb6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DateTime::setTime()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DateTime :: setTime（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d80c2ae31c2f0de3a786a2170caf19035f325905" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DateTime::setTimeZone()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DateTime :: setTimeZone（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c06f3d44579bfab3e4c35dd7edc9f8f614922b85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DateTime::setTimestamp()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DateTime :: setTimestamp（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8c2d9c49f9c143af988f38638cf1bdd98f204f36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DateTime::sub()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DateTime :: sub（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="402921c752b3d9a9a80fc6a23a4a985eee177af9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DateTimeZone::getLocation()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DateTimeZone :: getLocation（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29edc4beb20453e89a4806af59545d3df173ca0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DateTimeZone::getOffset()&lt;/strong&gt; examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DateTimeZone :: getOffset（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="95da98b66a34a804ea67406291f1edb27827c849" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DirectoryIterator::getCTime()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DirectoryIterator :: getCTime（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="47877ff4b59141de90ed23760103ed14f463025a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DirectoryIterator::getExtension()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DirectoryIterator :: getExtension（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="96d24a63877f8b531448b4329ad91587232c90de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DirectoryIterator::getGroup()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DirectoryIterator :: getGroup（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d5ad384efae372a04dd88c74049baac9f1377d98" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DirectoryIterator::getInode()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DirectoryIterator :: getInode（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e507a18b58df0aa9bebb581bde29f514d2042896" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DirectoryIterator::getOwner()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DirectoryIterator :: getOwner（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cbb64f3a490106db65070df0f28fabcc53e9f714" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DirectoryIterator::getPath()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DirectoryIterator :: getPath（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fc0912623836616eea5c9954eb9de87748b119ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DirectoryIterator::getPathname()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DirectoryIterator :: getPathname（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b4b746948a705b9e3e59279f3cc8dc90c938bdf2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DirectoryIterator::getPerms()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DirectoryIterator :: getPerms（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="97d526ea0812ed60ed9aea5d7bbe539b69804871" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DirectoryIterator::getSize()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DirectoryIterator :: getSize（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7b83fe752adf068c0eee877d0aa3c41cec89e330" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DirectoryIterator::getType()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DirectoryIterator :: getType（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="100b77ffaeffca74eee03eb889790c2ec72e6890" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DirectoryIterator::isDir()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DirectoryIterator :: isDir（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6ec9d3c6b67083aaae838b762c2e3146781b06de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DirectoryIterator::isExecutable()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DirectoryIterator :: isExecutable（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b061783fbca65b5ce07c18159c842807062ef90f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DirectoryIterator::isFile()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DirectoryIterator :: isFile（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7165049b3f02d60d70b63da3b86905124b8bad80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DirectoryIterator::isReadable()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DirectoryIterator :: isReadable（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc2e0a3ede74f38033c01b150808a8a2f53ed36c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DirectoryIterator::isWritable()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DirectoryIterator :: isWritable（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="64ee60e3299ed3220d10a7ba68df5c10a1dd8b60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DirectoryIterator::next()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DirectoryIterator :: next（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cfc566b8f785ee1f0655ebb94af06e2cf5f4315a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DirectoryIterator::rewind()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DirectoryIterator :: rewind（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a9a4f4d08bf27b06eb25d9e898a61f5e02d400eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;DirectoryIterator::seek()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;DirectoryIterator :: seek（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="73d1ac0f4458c611f48dd3ac46de67f094c6cdf9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Collection::clear()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Collection :: clear（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a2e17c518a70091c57b966b53164c9c855cab5cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Collection::copy()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Collection :: copy（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5a106ab8f01c95709d7ef6c473dc9d561e0b26b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Collection::isEmpty()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Collection :: isEmpty（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="19eabb498e6e31995bfb07f50e2cf55d5a5ab50b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Collection::toArray()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Collection :: toArray（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e1663065a8e908717b9b6d9c717be3c218ad3d28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d37e70ea78c62a95abe3c0c4036f293a55e90a30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::allocate()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: allocate（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8abb1dae442abde82762d0dd1891dd59f660abdb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::apply()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: apply（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa2eebff7b9d945427723e3990dc32d0a8684f46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::capacity()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: capacity（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="37f99bf706b925e01ecd88ac4012b4105fd1677a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::clear()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: clear（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="58c98b91e49f1700f3b9504cfa8254ff776a05dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::contains()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: contains（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a68e3e9d730bb28f281a88c21af78d7c25a6ac8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::copy()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: copy（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="37f1bd32b3f78ccd3c3433305c56995d339fcd21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::filter()&lt;/strong&gt; example using callback function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 使用回调函数的&lt;strong&gt;Ds \ Deque :: filter（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c019ff531c03d62232809cabb0256aec93741630" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::find()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: find（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a4a21e710a0eeec33aabfd48dbf5ab0bf2d616d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::first()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: first（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59b286f22d18dd5e92ed9988f2b8894681d727dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::get()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: get（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d0c8e5c03508eb808a37850853c3bfa81ea18357" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::insert()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: insert（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c8dedff46ac515cd7af030e6d212c2250a25b1b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::isEmpty()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: isEmpty（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="81b8155799c837f939f7e6024d90e642275436cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::join()&lt;/strong&gt; example using a separator string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 使用分隔符字符串的&lt;strong&gt;Ds \ Deque :: join（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f555743a1da89c76cb0cedcf809f2cb173ef789f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::last()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: last（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d46ed3f14bd25c45eb7672d48680a78bca76137a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::map()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: map（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b38c4d1ad37adc3cd8408d372addf2fe942f1823" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::merge()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: merge（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec9242e91d79a81c35969ee4e7c6373167b18be7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::pop()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: pop（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="87cf4d00ff5858f265ed1ba0ef00fb88b6888f37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::push()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: push（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b818d0d05c43a90bf0df3f391109a5f0ee057c73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::reduce()&lt;/strong&gt; with initial value example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: reduce（）&lt;/strong&gt;及其初始值示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="65ad25038238e7f74dbeb1379262a57368b03b4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::remove()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: remove（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="daad1f35b57d27fba73036fe2df0bd8849b5abd0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::reverse()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: reverse（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b9d144b1058cd85fcca590dcd3c05b920114f76d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::reversed()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: reversed（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b754d362d77dfea94a2ce03f474b952be614fa3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::rotate()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: rotate（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14f13824c3fdd200f2433702bcc2cfee201d759e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::set()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: set（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc13e8734d4ce66390be92d568d229ad096b1416" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::shift()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: shift（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="75433f93f7626e0c1cbee597816e003ca578d4b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::slice()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: slice（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a5d8e3e6b0120bde20f0b9f3eed589d88c8a7dfa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::sort()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: sort（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c1d044a8751ea8d723db34675a862b5e62b3fd7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::sorted()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: sorted（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e86b8fa7541b0aa49b9988ad99f1cf133e19f112" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::sum()&lt;/strong&gt; integer example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: sum（）&lt;/strong&gt;整数示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="877ba5bfce21b0fd69fa0deecd337d532685a181" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::toArray()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: toArray（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b8d43dcf035f8f1afe6f08eb1fc87c2fdb2089a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Deque::unshift()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Deque :: unshift（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="644a61ac0595ca6d63596be336ba73c8c476e66a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Hashable::hash()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Hashable :: hash（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e338b5f319ebdce33e5465c6b0cc38f76ba7fb7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="791e1fa0f07461ea53fa70c04bd156ae2a4e7c6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::allocate()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: allocate（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="705dea3a6d5d5058eede33ecf9e00de371747ca1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::apply()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: apply（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f1f736e63fa64a327fca08da21876f9804963b25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::capacity()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: capacity（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f4550b09800b5092a43384d8d89443b6b665789" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::clear()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: clear（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4e0db5ddf9637cbb51b83db8294cc97c4e6e35a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::copy()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: copy（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dfd92744778d03e2e43eaac94f18372f478ae14e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::diff()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: diff（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b9a1f0a4305184b58f4b9cee7c5be0cf5fc5a731" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::filter()&lt;/strong&gt; example using callback function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 使用回调函数的&lt;strong&gt;Ds \ Map :: filter（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c0aef67ce74162f7f63e841431be65a6e92dfe7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::first()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: first（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6fba888b1f8c3ddc0886aac2c091801299e83f75" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::get()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: get（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f3f1d648f1bbc5368e9a98f012c2f8a0eeab4a4d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::hasKey()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: hasKey（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="41e59ec264ed110c604ddd73552a90d5f088c714" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::hasValue()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: hasValue（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0619da11a172ba8ca4d80bacf7b770f4bc569efb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::intersect()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: intersect（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="20b1ae2ef6b2682614698cd20c8526229b2b73f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::isEmpty()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: isEmpty（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eacd9f419a289e8eb6c260a4600702f5b181231b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::keys()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: keys（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7bdf48650dccd1572695e98d22c98cb3cca9824" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::ksort()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: ksort（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3186aa5eaf62c400ee0f50e77bb77351810b3b33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::ksorted()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: ksorted（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0f6ef36f05060be559fd4e1fe9a129cadc14693c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::last()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: last（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2ad698ef1587e921cdb73a1d3a9158b3db0d28fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::map()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: map（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="937a71aefc899824ccaa04641446da183e924fa2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::merge()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: merge（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="91845792eeb3d2366e1d474e96b5689023a7ab92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::pairs()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: pairs（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="16433cabadbe1157d4e182a56bb8c4cdb5c3cee3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::put()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: put（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="be39fff342ab2171f7dd8f36308784da63c706aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::putAll()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: putAll（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e2412822eb94d5b697740a9efd61f177baa3d5d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::reduce()&lt;/strong&gt; with initial value example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: reduce（）&lt;/strong&gt;及其初始值示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f4707c70642b5c204c0818436b9bd37667536599" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::remove()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: remove（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="63f972926df8086b5363fcb868174e115e9b14be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::reverse()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: reverse（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f4dc4d2e85273026bbc2ca7b48ef0bb6465eabfa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::reversed()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: reversed（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="347d5a4dd4dd3ce22a8dea6c412b21b674ebabf9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::skip()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: skip（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f94172b5ce09cea919d607c1185e53aea442d829" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::slice()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: slice（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b31cd7acd22ad58095be2de00abfadea0abc252c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::sort()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: sort（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fdce935b10c0789a46ee69778a61a390aafe635a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::sum()&lt;/strong&gt; integer example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: sum（）&lt;/strong&gt;整数示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="90fcf031cd874546fa8dc4c25552970c171559d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::toArray()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: toArray（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="488b964ba92988afdf5bee167594fff905edfa92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::union()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: union（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4280bea142b77b670635c551ec706f3cd74ba6ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::values()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: values（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="82e2febe0a790d7370a1e2375dbb0d85b29c9809" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Map::xor()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Map :: xor（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a6eb2e561913a847e7e0a253e87817e0fab51d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Pair::clear()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Pair :: clear（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14d082015b310f047523f98091b4e65ed2e95b95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Pair::copy()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Pair :: copy（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cbbc47928670ba472b5ffb9e8ed745210bae254e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Pair::isEmpty()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Pair :: isEmpty（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7f56aca9d560c654ac2aff3baa462a5c8f134d96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Pair::toArray()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Pair :: toArray（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a9fffcab1554ba2a1202f0e8b8be5521c08e826a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\PriorityQueue::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ PriorityQueue :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4d9f68e84c89f87bc9f8b29de78f14e0e76a3010" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\PriorityQueue::allocate()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ PriorityQueue :: allocate（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f2c608035e16297160ae740c2e30b53879f21fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\PriorityQueue::capacity()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ PriorityQueue :: capacity（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="48c9f4305ce6be30fac095bc87ee365447aaab2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\PriorityQueue::clear()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ PriorityQueue :: clear（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bb27cf05bdc351d65038d010bf41c6180c41facd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\PriorityQueue::copy()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ PriorityQueue :: copy（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f0481f74a120c70191ac4860af002141ea4c3210" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\PriorityQueue::isEmpty()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ PriorityQueue :: isEmpty（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3ec6331c872a5dbe016d04066ba903989273ae86" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\PriorityQueue::peek()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ PriorityQueue :: peek（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="266d491fa3d8b2f7ae6a6778062cb0d5f8bdec27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\PriorityQueue::pop()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ PriorityQueue :: pop（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="086be44739bc7354d3d44def14d105fa076936d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\PriorityQueue::push()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ PriorityQueue :: push（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c17876c9ce7597e0a82e3c5f57a8ebef85c1851" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\PriorityQueue::toArray()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ PriorityQueue :: toArray（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d2119376daf907f77b9c7a6b27242b62cb711b28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Queue::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Queue :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f0986d0945a921f81f349d32de186ae0d782cb4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Queue::allocate()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Queue :: allocate（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2f56050c45053fa491385dd8f1d84ef3d4b867eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Queue::capacity()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Queue :: capacity（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c7a82556ed6b68d06301d1ae4c94b4972007d2b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Queue::clear()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Queue :: clear（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0612133099b26bb53557edf3fa4cf53b24c6949a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Queue::copy()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Queue :: copy（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="496676a208d3c3edcfd73509baf4a44d417d3893" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Queue::isEmpty()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Queue :: isEmpty（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f78e1fdd7acd3ee2bd40faf3af0bfc0756547ba4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Queue::peek()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Queue :: peek（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="90c4b16ac8decf426ba8e64b614f524b9126f37a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Queue::pop()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Queue :: pop（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c871b83ee5cf4e4c8b4054f83d5e94a3bb67efe4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Queue::push()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Queue :: push（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8fadf7a3ca8fbc26b4f08c9aed1cd92229844eef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Queue::toArray()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Queue :: toArray（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b7a28f0b246ea99353ef886f64cfec41b94beea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::allocate()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: allocate（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="919055a61bf2713c341fc670d8e796fbe749c9e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::apply()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: apply（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a3c1480c96e05e122ff8efb8f68c5893bf78b2d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::capacity()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: capacity（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c76b3d5beecff7d21b51455b8f73883a63a19130" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::contains()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: contains（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a79cc4b143f39b76d7a4b9f199b169493c75c7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::filter()&lt;/strong&gt; example using callback function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 使用回调函数的&lt;strong&gt;Ds \ Sequence :: filter（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cbc4a701f23d97b092f451bd893b944b85313744" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::find()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: find（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1eded7a04cc37dd642becf1c0debd4eace3ab4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::first()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: first（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e3c087cf057c0c22b357c436f93233e2a1077823" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::get()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: get（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bfc31eaecb823d44675a6f5dcb68297bcef2675c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::insert()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: insert（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49fdd01f1641f130c4678f4537686e9f1a7504b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::join()&lt;/strong&gt; example using a separator string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 使用分隔符字符串的&lt;strong&gt;Ds \ Sequence :: join（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="251c1c3e8b55fb53cffc884042848cde6235e864" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::last()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: last（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f75e8e0e2825c48abcaa02caff6c43b09d5ab9c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::map()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: map（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="23d859d6549cb0a7c6a451a1232add0415fe7fb9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::merge()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: merge（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bf989d26299203d42244542913d770a8673d9f08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::pop()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: pop（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="99467daa74d828b83f27b2847791de60af337d59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::push()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: push（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b05114e08796a09733a1703a83e4d5d5877fa71d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::reduce()&lt;/strong&gt; with initial value example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: reduce（）&lt;/strong&gt;及其初始值示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="282f0ce0e4a4a2fe9ba14ddb6c582575251b21e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::remove()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: remove（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="88502e949cf517605e4aee7a9deae387db66e363" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::reverse()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: reverse（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="06aedeed89a2ca31fdba68906ecdfa5c220ab467" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::reversed()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: reversed（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c4d1b7b0e835ac9dd88aa73d7be75e4c2545914e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::rotate()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: rotate（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bb9a78755111f63149dd4ceb97ffc0ba4d588a17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::set()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: set（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="55cf2939e4b9419350eb9b7ffd605780d71c6f7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::shift()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: shift（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="700b2e4bf00b460cb81504fe984396f4d30efd14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::slice()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: slice（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cc48d40f880cc57c133fcbd72171f49f61d14bc4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::sort()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: sort（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="85ab6e21e3be2f649cc0ef1ccaed3946ca3606ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::sorted()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: sorted（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="beb2b3a84e1c157c6b0b8b297cf53784343e1977" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::sum()&lt;/strong&gt; integer example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: sum（）&lt;/strong&gt;整数示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="479f2ea2ff69147c85d500113e212be489ab43b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Sequence::unshift()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Sequence :: unshift（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="452d3e25e1c078d0c2666aeb793f7d522f214d51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8666878775b33c3b2710a3169c7f6f0bbed54556" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::add()&lt;/strong&gt; example using integers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 使用整数的&lt;strong&gt;Ds \ Set :: add（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1c7699a5b74547cedb665011de8632ec108f9465" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::allocate()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: allocate（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8af833854a8893a97035e0d43a781d0af2f28230" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::capacity()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: capacity（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0fab8c6d715ef7cf9f3dd61b417ccea14a603d15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::clear()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: clear（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a20719484bb44576fb27b71703716a44f03493c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::contains()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: contains（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4ddb6bac6a5badd13995a4c4715f84fc16d83134" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::copy()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: copy（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3cbb3a19de47b094e2c124620fe0a34e242b5f0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::diff()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: diff（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5483b09daf12e1a99b1abcfdec90cfed5bbb942e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::filter()&lt;/strong&gt; example using callback function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 使用回调函数的&lt;strong&gt;Ds \ Set :: filter（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="93e97ee838dc43a6c580f58841ba4bd8ed22ec12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::first()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: first（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1dfed416fa07c1aa3fbef18b40634001584175e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::get()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: get（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="02d2d4910bf6a792f5f1dac5ee87713cc858f85b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::intersect()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: intersect（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="420f010924688ce45452110aadf1fc482fe4252e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::isEmpty()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: isEmpty（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="22ac12293b587a73a19cc127b28c431fa0e6e7d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::join()&lt;/strong&gt; example using a separator string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 使用分隔符字符串的&lt;strong&gt;Ds \ Set :: join（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d88a45550d9f9dfcc7beca60d6af2e68acb10d17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::last()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: last（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59921934a147d7b4b38f561013b861063cfda4d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::merge()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: merge（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2939d38b80010d5d1309dc18e5bf8932101bf319" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::reduce()&lt;/strong&gt; with initial value example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: reduce（）&lt;/strong&gt;及其初始值示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45de1b865a49cb1841eaba27b5935c0ddc927001" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::remove()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: remove（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c76443e72ddcf9be2b818163948bdbb9f24d2dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::reverse()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: reverse（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d76aadbe482bf2b586051ff9cc3f0185cb22ff9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::reversed()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: reversed（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="850617b96b2ec9aba83cacc6e0e4136dabb227c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::slice()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: slice（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2a1f7d9c7e4cfdc518eb4fbeb5d2f5d8aaaed505" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::sort()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: sort（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e1b834f0f5afd4f1e021aa2da3e85884b7649a3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::sorted()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: sorted（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b7e2b9b8494afaf9530a7c301ce85567c8d620ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::sum()&lt;/strong&gt; integer example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: sum（）&lt;/strong&gt;整数示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eee770e0a124cb5465556bf5093ee0a5014daea4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::toArray()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: toArray（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="42a7cdc07ddfe5ecd16cca33f1773778c1b24a30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::union()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: union（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1d4077b4b7e9dd06f3d9a083da288dd3e1dd71d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Set::xor()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Set :: xor（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="817af08c6ef9a07dfb5deded67198e583026a1d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Stack::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Stack :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f337abe427f3d3197a2ee17ac41930da17e55f6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Stack::clear()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Stack :: clear（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b97aca43b9a2558651fbbbf37eb45f2f41ebccfd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Stack::copy()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Stack :: copy（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7cc00fedb773b7b88cfa1a19790c935df70b3261" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Stack::isEmpty()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Stack :: isEmpty（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4ee3e71077c225c3178b25ec60604c804e6c04fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Stack::peek()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Stack :: peek（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1c1ab2420e7cb40c77a8733a205aaa23c4f4c8ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Stack::pop()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Stack :: pop（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f235c81e0bc99d46dd552454ca9ecc2ce46ead1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Stack::push()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Stack :: push（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="832acd66f44496b101e3017fc2e71d2ee6af95ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Stack::toArray()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Stack :: toArray（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="30ad49098c2cd78a2c0f096f056da3f90a3a2bc0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e227f8edc878748a0ac41421af86e664f7f316a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::allocate()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: allocate（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bec7452c9601b2e0b4f3b05be8e1bc8ee991927c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::apply()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: apply（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="33ed7256b6c00cc949494bca1745dab1a4d3f9c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::capacity()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: capacity（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2894c9ce85240d0efa5753749d5a0fef4e8bacb7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::clear()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: clear（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c5cc560831ea25bcfe22b31b80496861afb313c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::contains()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: contains（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7f3ae457678fc84e5e76c29461175868cd25032b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::copy()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: copy（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cba4e88523d4b57c3581eba6193d4eb31d516310" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::filter()&lt;/strong&gt; example using callback function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 使用回调函数的&lt;strong&gt;Ds \ Vector :: filter（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d753e3b1c25ec2b34d7fa01dc3fc149afc5edc2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::find()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: find（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2a3f0b6f08d8b4d64b58c098bbd735dada71df12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::first()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: first（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d904958d5b0fcc27c94720a42f027c4e76fcfa7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::get()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: get（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6263dbf6d5617063605217503bc26d3fbb41d6c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::insert()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: insert（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="54f323d127d31552ac032b06a256335ea9e79d26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::isEmpty()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: isEmpty（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="98a5b64c000bef707b6a8b3fb7fa50ebaed4f823" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::join()&lt;/strong&gt; example using a separator string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 使用分隔符字符串的&lt;strong&gt;Ds \ Vector :: join（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17996c8500da6381fecc040847c4890ffdbed9da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::last()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: last（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3c175dfec5a4331b6402e5c63e44fa4c68dc4b70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::map()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: map（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="556166b8b2f823665482b5fe55beef22f46ed16f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::merge()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: merge（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="04e3ba6b83ea618d4c1117787ea7148aa136dee0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::pop()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: pop（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ac5a323997825ee367ef6b1b2ca44dd92b066a32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::push()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: push（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2d384a5bd5070eebc7a60d389116737a435b4f01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::reduce()&lt;/strong&gt; with initial value example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: reduce（）&lt;/strong&gt;及其初始值示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17af380d7934093fa3425e4584519924a8e0d7c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::remove()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: remove（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cf6a82db9ce62b1ba9dd41cc742eca4f96f648f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::reverse()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: reverse（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="86e80e67e89446358573c0d82d4c31479325a452" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::reversed()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: reversed（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ea7939a9e0848b8ab368d80e9f8fd2fdc88306ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::rotate()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: rotate（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c8305f8bbaf10e2c38b7999c48707a60e3345798" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::set()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: set（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a34438e634176907c26da02a2e32913b563e3386" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::shift()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: shift（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ca9c496aeefefb26ab34fa27ee8397a5f315e5cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::slice()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: slice（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="314a83f39b97c1bfdb2db2423960fba8c3619acc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::sort()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: sort（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5bbe9b9febba0ad7a0d8e6c869de4d526ee2812c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::sorted()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: sorted（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="670007985ae580af89669837d28f29896c3adb74" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::sum()&lt;/strong&gt; integer example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: sum（）&lt;/strong&gt;整数示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d7b09801579712d35c7b2e27ef197453b985207" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::toArray()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: toArray（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a3c7f1ecf76b321d0ff92129de0ce46c2d04540" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Ds\Vector::unshift()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Ds \ Vector :: unshift（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1110cc9a711f92c3b30e7359ba66bac342e93d66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Error::__toString()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;错误:: __ toString（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="73c17795abd337421dad998448ed2b249c3c4186" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Error::getCode()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;错误:: getCode（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4082618bbf377102b618ec9cd5e06d5dbc721f76" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Error::getFile()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;错误:: getFile（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b9f31fcbed3975368ae55aac570e0c1495880df2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Error::getLine()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;错误:: getLine（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f5e999670b355fbbd9ec250c809f32cbc1da6ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Error::getMessage()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;错误:: getMessage（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="44d002f429674f0d8a5774e113fded744132927c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Error::getPrevious()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;错误:: getPrevious（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b28c7eb1e645fc32c70a59940b05b746eef1c1ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Error::getTrace()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;错误:: getTrace（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="de3cfabfa2b44479d287d2c684c6c2cc43908f12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Error::getTraceAsString()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;错误:: getTraceAsString（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7537a64685238edc6f221ccb7088176db6c0aa0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ErrorException::getSeverity()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ErrorException :: getSeverity（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b7c827482b6c4182808ab0ad07bb533ddb219bb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Event::addSignal()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Event :: addSignal（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3776d016b4310d7fb34de1b34ce77cc86fddab0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Event::addTimer()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Event :: addTimer（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f152a2489fa8e02712eefa7f872fd2fecc4c7c48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;EventBase::getFeatures()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;EventBase :: getFeatures（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a212cece789c29f25aab09367bff21b52092fe24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;EventBase::getMethod()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;EventBase :: getMethod（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="648673e66457bfd51a33a78e87b3a813c1db4f9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;EventBuffer::search()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;EventBuffer :: search（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="42a45ee2973da0773b94412368bd69a13c6fbab2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;EventBufferEvent::connect()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;EventBufferEvent :: connect（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="acef177411884aecae07e00a4605b75a52d33f32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;EventBufferEvent::connectHost()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;EventBufferEvent :: connectHost（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0eecdc01ce3ea64961486bacc1b0b70a96a74631" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;EventBufferEvent::getOutput()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;EventBufferEvent :: getOutput（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a1e254286fb63ee7ac319587510d2dc68ab2695" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;EventBufferEvent::sslError()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;EventBufferEvent :: sslError（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f99817cba0de24f2240c3e5e52863c291e84ac5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;EventConfig::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;EventConfig :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c7aa6f9758d081c3e0b85ecc62d0f74ab4f41060" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;EventConfig::avoidMethod()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;EventConfig :: avoidMethod（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="42b8411ba6610ebcb79968c1eeae0621d45e6f3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;EventConfig::requireFeatures()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;EventConfig :: requireFeatures（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e42aebdf49e6cfd7b83ca953251206ab889eb5f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;EventHttp::accept()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;EventHttp :: accept（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39576e16f0010dec2f9be535b3a7bfe4aeab9ae1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;EventHttp::addServerAlias()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;EventHttp :: addServerAlias（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cf4dbb10405944ad0da9154c372f6b0d8c2c5f20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;EventHttp::bind()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;EventHttp :: bind（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6ac13e11d66907cfb46afb77e3bcf7b99ee57d95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;EventHttp::setCallback()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;EventHttp :: setCallback（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="888e4043d898e10a687d591a5588d53c13be8e27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;EventHttp::setDefaultCallback()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;EventHttp :: setDefaultCallback（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fc93f7578f7f8c06261482abf624c2d8b7775cb2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;EventHttpConnection::makeRequest()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;EventHttpConnection :: makeRequest（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7e7e8ad38bbdddb2fc0fabfd34eeaa1e03a6e1ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;EventHttpConnection::setCloseCallback()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;EventHttpConnection :: setCloseCallback（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="697bd63033bf1b27082bc823023936f0df1f1e4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;EventHttpRequest::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;EventHttpRequest :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="72ef76bb50f3396f874fafed197f9cd5a797bd4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;EventHttpRequest::sendError()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;EventHttpRequest :: sendError（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="18483f47c8d4c2ab364ca61850edf5ca3b423eef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;EventListener::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;EventListener :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="274fcebeb2da69d6da7166dfbba342a30989887e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;EventSslContext::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;EventSslContext :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="adfcde5a5b76872b609e7fa7073887cd813e0a3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Exception::__toString()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Exception :: __ toString（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb07c8080d90d422a1f88d5c93c2a98abe35bff2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Exception::getCode()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Exception :: getCode（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1321bcea1ff130f67bb3da5737d406cc7ebdffeb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Exception::getFile()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Exception :: getFile（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc061df9d5dfbb14a205ca0cfd8fdef0e3e180bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Exception::getLine()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Exception :: getLine（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e22874cde99a682a979dfe8ea795a23540de76b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Exception::getMessage()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Exception :: getMessage（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e03048c695ab546422f4738cc84f7df981e074ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Exception::getPrevious()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Exception :: getPrevious（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8365a3c6f84823d7f5e074040798a9500b69dff2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Exception::getTrace()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Exception :: getTrace（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="69fa62fcf4025ebcd7f9e2dbfa3933efbaab76fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Exception::getTraceAsString()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Exception :: getTraceAsString（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="07ea1539e9fecce179e181fff44a7799b577964e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;FilesystemIterator::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;FilesystemIterator :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e4f971b4fdf33272a3e515ffe88e882f5b124710" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;FilesystemIterator::current()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;FilesystemIterator :: current（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="97cf93972952900bd0fb1b48e9fe897270e87120" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;FilesystemIterator::key()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;FilesystemIterator :: key（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9023eeb70ccd1638677930ec4e6958c57394f5c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;FilesystemIterator::next()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;FilesystemIterator :: next（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="437480b052abc732f97f169a471d1858d001e89a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;FilesystemIterator::rewind()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;FilesystemIterator :: rewind（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="912aa3a7efc0bbf1db37f5918acd0f3407caabc6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;FilterIterator::accept()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;FilterIterator :: accept（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a83c88b0795fefc1890ab9203eb1753f07dad3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;GearmanWorker::setId()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;GearmanWorker :: setId（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b0e0a0c52e969d93f7ddf2d1146f12be981c507" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;GearmanWorker::work()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;GearmanWorker :: work（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b678f79dc33d1fe0f47d49fa6df0625ab666a19a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Generator::getReturn()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Generator :: getReturn（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="31da543acb46919124da5bbaac45619dd801d0b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Generator::key()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Generator :: key（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d94b1dd87da372b03bf5aff38630cf6ee8958b6f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;GlobIterator::count()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;GlobIterator :: count（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7542474b79dd102e59efce3eec38f989bfa4643a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Gmagick::despeckleimage()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Gmagick :: despeckleimage（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7fe42c49634a58204615e2f211c6d3759cc5420" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Gmagick::setCompressionQuality()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Gmagick :: setCompressionQuality（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="338f43d249a17b1e2a376a2523eb9df9e0a2d3c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::adaptiveThresholdImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: adaptiveThresholdImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b7072b6cbda7eef11d483d28385754699caa8ff2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::addNoiseImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: addNoiseImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="97e5a366dc9d8cf08aae7d65e79a178028ece56f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::affineTransformImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: affineTransformImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b9b285c01b347e75dbdfd2caa5f404dc6881446e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::appendImages()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: appendImages（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e6b133501a5cd9b7c3a37607b0aa15da1dc6d78a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::autoLevelImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: autoLevelImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c2115ffb6b199b7b77f71a0d03dfdd1325d607a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::blackThresholdImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: blackThresholdImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bdcacca8a33e73bdc33b586e89a5a24f3dc4ded1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::blueShiftImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: blueShiftImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f724b26c7290dc4998c537dc5c962622728e559" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::borderImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: borderImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d06198f029c13ccbedf0eafc60fd38348548964a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::brightnessContrastImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: brightnessContrastImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12e558653a08b5076c61e849b6a3de58efebc0cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::charcoalImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: charcoalImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="72a3f3076db15c740c5951915b3554707062ed2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::colorMatrixImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: colorMatrixImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5fdbb10044017dd2b2a8bf8c22b2d8ce18fe1d84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::colorizeImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: colorizeImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15502d82411e7af071e71bd439603689d296ef95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::contrastImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: contrastImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="20ee41fda6d056739a5c3f17e2b8ded28d011314" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::convolveImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: convolveImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="98243abb6482b70745f138151bff13aa0bd05caa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::cropImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: cropImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0036070898ba4221a5667186e2242cfeadcce46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::deskewImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: deskewImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="565a8ef76572fbbc0c45aa908c13fb2f23226846" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::despeckleImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: despeckleImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="53318116c9e72b818e9661e297cb8337ebcd0e72" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::edgeImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: edgeImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="161db918304659f71dbf2fd261e0db5517d1cd55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::embossImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: embossImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0529881111eb6494765bf9b7cf93a76f6977233f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::enhanceImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: enhanceImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="738b12e5bb886f7ef93a6fb5808406437ed3e1ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::equalizeImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: equalizeImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7224059cdf5b50019d5d59ce6c86c0eef7ad0fb8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::filter()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: filter（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb74d69636a4a06ec0e4af6e23b2f1d9d2c03bb1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::flipImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: flipImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1c4d688ae0e35b719b97230e2180298ec809f4ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::floodfillPaintImage()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: floodfillPaintImage（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="deecd626a1aec9eec4f7021de70e98b7b45b93b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::flopImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: flopImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="554b112c76b885f2dc17201460276f6c64d593bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::forwardFourierTransformImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: forwardFourierTransformImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8ede98f0b3a01c70451135972a60c6436f2586d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::frameImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: frameImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ffa24d1dc1b3453baec2b83d09da420b658e8d69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::fxImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: fxImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d02eef8169453c79998f1ad3a51d009a77c6b4fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::gammaImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: gammaImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0bfd39b264a674081f01976a10f495e42b650f50" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::gaussianBlurImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: gaussianBlurImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e46166c0126c4fb29652683ee1c6bcaa2c18699c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::getImageGeometry()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: getImageGeometry（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0c964085af4e06e805d356bcdf2fa362d5767561" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::getPixelIterator()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: getPixelIterator（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a0403d775f6060837cafab340d7f726f7563ef4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::getPixelRegionIterator()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: getPixelRegionIterator（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c92243163e99946357fe2c72c0d980d4d09b4676" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::haldClutImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: haldClutImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8cb85c94fd4f165d140642b4565aefd3a4be0f84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::identifyFormat()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: identifyFormat（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d7c02248ee8667d18f97394fc187c502c541db07" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::implodeImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: implodeImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="73f96131aa32afa772789c22c35d6d12f29206af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::importImagePixels()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: importImagePixels（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="693e542de8358d4d6bcd0e1e647f7e0c47b29700" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::levelImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: levelImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e5cc026a0a21bb944224987e74ef4862a409bc1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::linearStretchImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: linearStretchImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d7b2c889ed182a7e8f4336d7617ff88825953b78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::magnifyImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: magnifyImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="abfb978f8e1c2a961d1fb76067354ca28b5162bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::medianFilterImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: medianFilterImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff0c563e635471f3313bf9922a0a16cb74a2dfc8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::mergeImageLayers()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: mergeImageLayers（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef5f2ffe053292361ce9ab8ac75b85773be7d029" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::modulateImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: modulateImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9fa3b4fa76b661de34944a1b5951f06503a3f453" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::motionBlurImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: motionBlurImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4cdbc3c56b0c97783b9fb5c665ba5e861c3c1745" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::negateImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: negateImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="873d9e19add16305584d3790f952ee278e1d0281" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::newPseudoImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: newPseudoImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f8024222adbc6c54379029ee3a4a5799087ec5c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::normalizeImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: normalizeImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d1d4b6446af757c0956f455c685f06c3277b314" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::oilPaintImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: oilPaintImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9fee4cda7d13ec328dc830f65890f7b43e19b351" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::orderedPosterizeImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: orderedPosterizeImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="55d757183e2424006c1c96d05ee6afc3561c3576" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::posterizeImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: posterizeImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e996d7957133b6ece7ff507b5e1a0c23c680345" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::quantizeImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: quantizeImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="48a14d0f925e6a3baf5ff94a1c64a8746b7ad676" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::queryFonts()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: queryFonts（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e6cad5a846cdcd03bd5dc0d3ac4520201685a873" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::queryFormats()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: queryFormats（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="343ce37492bcc674bcfd3b5760343abf04edf2d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::radialBlurImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: radialBlurImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9395f6dce2794862f3fb4ce30e4037dfe99353d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::raiseImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: raiseImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="20c8a6871e7e82cab048c2e902bc8640d77e3905" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::randomThresholdImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: randomThresholdImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc5e342a887982c93aa733072b9d550b0eb42bcc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::readImageBlob()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: readImageBlob（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="90469f75d9d6b34e1380842de16e0f9ea6eee042" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::recolorImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: recolorImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="71accc054a6d5cb108b1304c3012591765a00615" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::reduceNoiseImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: reduceNoiseImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="297f95f06b48525cbb5e6f4836a4d51df6dda148" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::resampleImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: resampleImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="02e269ddab9131b013cc5dc9bc3723d92b048829" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::resizeImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: resizeImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="89cd2e1bb3b56ce04796ff0d5ac3863ece7fb0da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::rollImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: rollImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="48cb4c6fe339cca6ca40b3c65044042c66f8655a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::rotateImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: rotateImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e813d322ffdcb70875985105de498c691cf25e25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::rotationalBlurImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: rotationalBlurImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a7b8401be3323d2b7ad9c2b2896ca8f45cb1ebba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::scaleImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: scaleImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a6f085dbaf2ce36729d953871df67605e01aec12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::segmentImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: segmentImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fcbb72956b1fc084e384e7091bf24b09eecd583f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::selectiveBlurImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: selectiveBlurImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5c85cf1fd7c08c7dee219bfbf20f4e98f9cb5efb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::separateImageChannel()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: separateImageChannel（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="55b2954f7b001f0ba1412147346ab82769ec46c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::sepiaToneImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: sepiaToneImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fd1dffba9d9234158042fe5cb43442d795642362" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::setCompressionQuality()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: setCompressionQuality（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b5490a4b531abc1d5bc9a5c1adb2669872ea5e91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::setImageArtifact()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: setImageArtifact（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed8dfe229eb12bde47af2f0c30b75cac6725a624" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::setImageBias()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: setImageBias（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e41da865221a7e9754a0780ab851eb01945f66c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::setImageClipMask()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: setImageClipMask（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e96b381067f7ca1c6023d1aa9ddecb3eaa601f47" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::setImageCompressionQuality()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: setImageCompressionQuality（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="37fbf6a18f92069ff901dd49599e2ac475e82685" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::setImageOrientation()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: setImageOrientation（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f46333696ea126e96c42bee044e2814e31fe73f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::setImageResolution()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: setImageResolution（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="95d3611df1a6470fe4d01feeef8f5e3380f375e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::setProgressMonitor()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: setProgressMonitor（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="806dde9483aac19e9bde06adbc7102f99be536e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::setSamplingFactors()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: setSamplingFactors（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e33356922f924acc1a13ee75935e814b16ff5e6f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::shadeImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: shadeImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b62085fbc18bce800b0094e3d9f4c872b1ed062" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::shadowImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: shadowImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ba12d20e08eb669be646784099afccffb723651" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::sharpenImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: sharpenImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e54872271daa6c54f2e83322ab2758c01df293a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::shaveImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: shaveImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3aa476da7e4cd93a0a34e2f60f63ea846a7aba1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::shearImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: shearImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7c9f16d04f4f7d1d0fe85f22207807850ee7a93e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::sketchImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: sketchImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3030c3ab46e5e95807960af3656bc4b12e6c3039" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::smushImages()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: smushImages（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14e7f9de0d5cdbff8953b5cd4e6735fd039aea6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::solarizeImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: solarizeImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="069b71ba3791620ebe1ff61a04420c8f5c1e8338" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::spliceImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: spliceImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d607af98b8ab383dba05b7f4501789d608a71143" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::spreadImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: spreadImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e75a7916a48116e5bcee1a10d4513996b105182" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::statisticImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: statisticImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="018d5bb0412e96bcd438fac88f6ff11438d2285e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::subImageMatch()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: subImageMatch（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c13af9844916f32b2394dfcbe83e59e63be00a3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::swirlImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: swirlImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="70effd5878aeba6bbb37ab1258ac18eb0f4386c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::textureImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: textureImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cfec7feb8bb700333f7592c617390da8193eb832" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::thresholdImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: thresholdImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5cee44e9663c8f0ad0be9f41bf60dc8598908da3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::thumbnailImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: thumbnailImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1c0c29a1526484cc8b182e83cda77f6c77697c9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::tintImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: tintImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39efa68458f2f4ee270547f79713e6068bbe4b2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::transformImageColorspace()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: transformImageColorspace（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="780bcf5d6e77ca83c0c3c05905a585cbe5be1d28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::transparentPaintImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: transparentPaintImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8acc3c5db166c9deebafba0917103c5e77be22f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::transposeImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: transposeImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e86b80f39fc181c63aabfb37d2949318828cde1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::transverseImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: transverseImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="84627fdf6cb7eb813597746ffce317e3ff167dc0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::uniqueImageColors()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: uniqueImageColors（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec4d04f54d9c454fbaa2039966e49c1596b8ff43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::unsharpMaskImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: unsharpMaskImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="68dec0b062ff5240dcf1ae4228c870a4f4dffacc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::vignetteImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: vignetteImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e663f42aaee5a58fd229a97e9d2a4d8a89f5f6ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Imagick::whiteThresholdImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Imagick :: whiteThresholdImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="16d2f798dfcd628f6bcb40125a986238bc8d5d83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::affine()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: affine（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="685b8effc4421cc55b7834bbac43ee4084de8015" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::arc()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: arc（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6836976a13a5a87e6e9d93669afec6df2f2f31c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::bezier()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: bezier（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8e1bc7aa2daec90199db2008eaeb13936b9b72fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::circle()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: circle（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3621d8d40c1c3e0d663612db485c932f1e31b13b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::composite()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: composite（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8c5daf0f8834f50aa3dd25330ad45acea9e8c65b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::ellipse()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: ellipse（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b524807ad9d74d4b2bdee8b0d48b2c2b9068a4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::line()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: line（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e52c0931b5637e64fec96155115b730ad56b22b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::matte()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: matte（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f452d48deaf8d562b33817439fbd9b585ac4fcad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::pathCurveToQuadraticBezierAbsolute()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: pathCurveToQuadraticBezierAbsolute（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f4ec28289fe627ac1a4a2cdac49659c99ac2157f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::pathCurveToQuadraticBezierSmoothAbsolute()&lt;/strong&gt; &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: pathCurveToQuadraticBezierSmoothAbsolute（）&lt;/strong&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d2f31322b7f6ea8a1f57f72910e00eef438f746" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::pathCurveToQuadraticBezierSmoothRelative()&lt;/strong&gt; &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: pathCurveToQuadraticBezierSmoothRelative（）&lt;/strong&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="274140919faa06bb88022969587ced7724df7212" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::pathStart()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: pathStart（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c5c2bb22629603988f674da6a5b063994d55dd1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::point()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: point（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a2946c4e389caf354786a6bc6bab508249904d94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::polygon()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: polygon（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c00bea239e62108a8463d8cd39ce343de0039a47" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::polyline()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: polyline（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="419f68f042dcd6f5be6dbe142365726e6aad0fec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::popDefs()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: popDefs（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2fdb12582c6d3e6ad309272816226280dc864aa7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::push()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: push（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e00aedfa421ef4aad488628a6db1e1c899b3a16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::pushPattern()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: pushPattern（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bb8c42b4cb9bdad0dffd03cee1ddf667c7ded2a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::rectangle()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: rectangle（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e0b778c1d50f38a3adf0c1efc24759f37d67df91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::rotate()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: rotate（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1ad3761811695c9d1cc3fdc90ec7c012b3dc2387" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::roundRectangle()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: roundRectangle（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5bccb7694ca90f641c9262d7cb4f7581081734ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::scale()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: scale（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a9742fda5d393c0c818d724b3770c8d0a90a045" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setClipPath()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setClipPath（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6781be358f3f50743f03ff0f48f1edcf44c3f6e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setClipRule()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setClipRule（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12ae276bce874de54f4d24592e51a05354a5af9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setClipUnits()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setClipUnits（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="54bfcc0978093bdffb110431942a3db038edb4b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setFillAlpha()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setFillAlpha（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c4e8cea234c860368e4a9bb248db80c37005876f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setFillColor()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setFillColor（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17e62fef74a07d9ba6f0d3ba8066fe1a0cc4865d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setFillOpacity()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setFillOpacity（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a9481dfedd69a57a5cbfc87d5e415ca897f216d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setFillRule()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setFillRule（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2ee661df1e632b1310f29b7072044aa60090b49e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setFont()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setFont（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1c36f63b68c409112c7bdac4c3332013d45e0b5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setFontFamily()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setFontFamily（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d6b4628ff2200ff339cc8fcd37e2580ed3f7f34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setFontSize()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setFontSize（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f6a8a0a4869e26614cc1870a1afa692bc3d783c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setFontStretch()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setFontStretch（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4d6282e8babb46d97e03f5488ec11000cc0f6aad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setFontStyle()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setFontStyle（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b6a11f8b3a75813e2536f3e09d1eaa745314d1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setFontWeight()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setFontWeight（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8ef0ca497d95d40b027906bcb3dbb56be548434" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setGravity()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setGravity（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d1fe12cb794264642e5dcecdceb62e34c220606" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setStrokeAlpha()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setStrokeAlpha（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d8c627ca1a7158e1c92b735aee1fb9f16fcbc65" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setStrokeAntialias()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setStrokeAntialias（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="51581c657277cbefac579ea0fb5e2a017d270367" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setStrokeColor()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setStrokeColor（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80cd313a71ebe3478426275bda50195031640575" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setStrokeDashArray()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setStrokeDashArray（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1500d4e481da9d754883926e53849ec79f38e414" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setStrokeDashOffset()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setStrokeDashOffset（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5250c4135a9585d5eaccd8672d4eaf418362c883" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setStrokeLineCap()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setStrokeLineCap（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="06c8d636a488db3a6b2f2df169fc412b6220e78e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setStrokeLineJoin()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setStrokeLineJoin（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d5afcdfd7a03191f51f267c05bc31afc794e26b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setStrokeMiterLimit()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setStrokeMiterLimit（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8afbec1d52c480d7e78419a88c9151953f1397cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setStrokeOpacity()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setStrokeOpacity（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="330773936dde287627fa947253030b2ee1a2cd67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setStrokeWidth()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setStrokeWidth（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c69a1eb0a5e67b39635b4e40bbe9d453732f097c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setTextAlignment()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setTextAlignment（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="da3e08ba0a4322f26cf5eeb95f1d0c74bd721b01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setTextAntialias()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setTextAntialias（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="19e9d6faba3a36e48ee2153f849f27b632cb982c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setTextDecoration()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setTextDecoration（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b35ca0e5a068d89135ee95c750b136a19761f8ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setTextUnderColor()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setTextUnderColor（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d5ab8873fa55b0880ee2d769642e1652ae74fe7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setVectorGraphics()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setVectorGraphics（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4a022718ffa985a590720a4a5cf9547060551c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::setViewBox()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: setViewBox（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="913ecd9adf3864238e3d0a1aebb5ed8883b24a2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::skewX()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: skewX（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="992045543473eaa115f4954df0431071a4a9dd28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::skewY()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: skewY（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="760fc92105784803ba23ae407d1f020db8ffe9bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickDraw::translate()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickDraw :: translate（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="23fd4a12bd13f7769373a6d6ac5fec2d8721c4ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickKernel::addKernel()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickKernel :: addKernel（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="655304db9d70f831947cabbc51bf8d744d086571" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickKernel::addUnityKernel()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickKernel :: addUnityKernel（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b286ae9855ca4a28b3665175b4f31a9e5111ddd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickKernel::fromBuiltin()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickKernel :: fromBuiltin（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a75de2bd36b40f299ce654f1b4b387270d8f910f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickKernel::fromMatrix()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickKernel :: fromMatrix（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="811eb9df5a2692d160a373788489e57aa0f6151e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickKernel::getMatrix()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickKernel :: getMatrix（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d9f98e9a037a170929f50b4955e1b6404eff80b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickKernel::scale()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickKernel :: scale（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e0f693a0add2cc99343e0a01e669bf03aaf8e5f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickKernel::separate()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickKernel :: separate（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2e63131485ec205aedaefc811233a00b051586f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickPixel::construct()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickPixel :: construct（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4f9ff2167c2eb3867d1bf2445519859925d035fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickPixel::getColorValueQuantum()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickPixel :: getColorValueQuantum（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49218fab3f1abef02bc50ebbe26cd3fdb6e162bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickPixel::isSimilar()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickPixel :: isSimilar（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="82363e5605155c6cd106e7570aab908c84436be0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickPixel::setColor()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickPixel :: setColor（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="acc9cdef6fc449e189a3c57cd3af22c8c65cfbcc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickPixel::setColorValueQuantum()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickPixel :: setColorValueQuantum（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6f85f633181c8a97513b4136a52f4caf0f6758f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickPixelIterator::clear()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickPixelIterator :: clear（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="79a1ce17659dda8ff2c1828ae414001bb31e5ff7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickPixelIterator::construct()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickPixelIterator :: construct（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f67082fb25ee98f21d0f3d16ad5db0b8f0c6a46a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickPixelIterator::getNextIteratorRow()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickPixelIterator :: getNextIteratorRow（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cf653320d006f521d858b145d65988a4eae0b811" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickPixelIterator::resetIterator()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickPixelIterator :: resetIterator（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eed095a46b277cf3a4df94132855980e837aa634" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;ImagickPixelIterator::setIteratorRow()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;ImagickPixelIterator :: setIteratorRow（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8355ec3ce08b9adc6aa39961ea665c3c619b78e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;InfiniteIterator::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;InfiniteIterator :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d9de5da2ee238892707b46c44d3136a97d5ea59e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::add()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: add（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b59719597d0d7d2c8033f7d56f82f6f890e51cb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::after()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: after（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7ec14663acbfe4788b0adab9a1402a2a01c758b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::clear()&lt;/strong&gt; examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: clear（）的&lt;/strong&gt;例子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c3880ca5c1e394f08616017063e4ed46c5bb6a0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::createInstance()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: createInstance（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f87ede5fb0470f9b23ec40e12e8bb4cc79e5e3f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::equals()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: equals（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="67e2d0f92cddd2e2a68446e211fb883ff1502e5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::fieldDifference()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: fieldDifference（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="554ada4ae778a44b79de141dcce90d620f7c344b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::fromDateTime()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: fromDateTime（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="30dd5025b9080d10d561bc98f2eb6e2d55854be5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::get()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: get（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="340f63fb338c0707e35efee92ee2470f173f8941" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::getActualMaximum()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: getActualMaximum（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="afe61e56ca27192ee8efbb45dde1db1ce555f784" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::getAvailableLocales()()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: getAvailableLocales（）（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f71d8632b8704e2677d9aea934782058bddb4d9c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::getAvailableLocales()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::getAvailableLocales()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d7a2f94b288e89848e2a3274b5141894bc53ea85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::getDayOfWeekType()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: getDayOfWeekType（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff343fd4a65e7adca7e2cd383b3650871fb006f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::getErrorCode()&lt;/strong&gt; and &lt;a href=&quot;intlcalendar.geterrormessage&quot;&gt;IntlCalendar::getErrorMessage()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: getErrorCode（）&lt;/strong&gt;和&lt;a href=&quot;intlcalendar.geterrormessage&quot;&gt;IntlCalendar :: getErrorMessage（）&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c284562a975d3b4fe2f4b17adfd56accf1faa1a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::getErrorMessage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: getErrorMessage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="96c839eed9a16e44f944aa0b03585778f0d5cf01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::getFirstDayOfWeek()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: getFirstDayOfWeek（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0741acd9423d6e269556003655f9769c62f2cf10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::getKeyworkValuesForLocale()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: getKeyworkValuesForLocale（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0655a4a14ec94f9a3bf90b4acabe7406fd1bfc3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::getLocale()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: getLocale（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d8f0d2f0ecbac7602652c32259dde764ee69e28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::getMinimalDaysInFirstWeek()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: getMinimalDaysInFirstWeek（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="43e76d736f48401a3627db96c33fadd603dd9ef1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::getNow()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: getNow（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d1a945ab24414cb958439feff74f18a185b40ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::getRepeatedWallTimeOption()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: getRepeatedWallTimeOption（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15b11e54148c9eeb599013d44f9649a5275ef7bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::getSkippedWallTimeOption()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: getSkippedWallTimeOption（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5f930131f6c0b56a9c94b036c5b36f63897e80de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::getTime()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: getTime（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e3543d5479f37cfdf4e2c3527bff29b2c2387dfa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::getTimeZone()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: getTimeZone（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="288526b062366682da6f64b6bb59bdf2e274a26c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::getType()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: getType（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae03a4d1d184297a8a581fb473c2065483ce7e1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::inDaylightTime()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: inDaylightTime（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="65b7f44eb5274c09718d04ff9fa3e7bcb00db2e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::isEquivalentTo()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: isEquivalentTo（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b4ec9a1fc07e67aa985ed5a45ed6a167c798eda3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::isLenient()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: isLenient（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="63be2f40e7b723e6500c2f3a6f8d4074606b869c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::isWeekend()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: isWeekend（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a5df0576b21bcbe563227202a25245cfecc1ceb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::roll()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: roll（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="36fe4621ed390643aa21ebba100e9ecaabc36189" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::set()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: set（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b9924d715cfe16009d1b2099ad085a6e0755e4e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::setFirstDayOfWeek()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: setFirstDayOfWeek（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7033bcc7ac3121a34669990a2ebd08e0a920e582" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::setTime()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: setTime（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8ff18398734d4f5100b2796708b5ac273996ee09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::setTimeZone()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: setTimeZone（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="536f830884c20411446b8a91c3cdad4bd9d7d7bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlCalendar::toDateTime()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlCalendar :: toDateTime（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0cb3f043cba404d164fa2c0a33cb397a84007126" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlDateFormatter::formatObject()&lt;/strong&gt; examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlDateFormatter :: formatObject（）的&lt;/strong&gt;例子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="61d621426c47d811e0e6eebb915481fb4f1a8f69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlDateFormatter::getCalendarObject()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlDateFormatter :: getCalendarObject（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dd2ced18854933457282cf37742763c5d9e754ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlDateFormatter::getTimeZone()&lt;/strong&gt; examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlDateFormatter :: getTimeZone（）的&lt;/strong&gt;例子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bbe64fa9e6b79dadfd6f8321448eea4addae2d13" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;IntlDateFormatter::setTimeZone()&lt;/strong&gt; examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;IntlDateFormatter :: setTimeZone（）的&lt;/strong&gt;例子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="53479f25cdd38fdb3f8b4d364ec7571951524480" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;JsonSerializable::jsonSerialize()&lt;/strong&gt; example returning an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;JsonSerializable :: jsonSerialize（）&lt;/strong&gt;示例返回&lt;a href=&quot;language.types.array&quot;&gt;数组&lt;/a&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9d10005ae58728cffb500cbc2797602098f3a973" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;JsonSerializable::jsonSerialize()&lt;/strong&gt; example returning an array &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;JsonSerializable :: jsonSerialize（）&lt;/strong&gt;返回数组的示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="baced9dd6e9bd3a084184062ce3fb713ecb21934" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;LimitIterator::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;LimitIterator :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4d51820f7484805041db2f447efc2806e35d5845" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;LimitIterator::getPosition()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;LimitIterator :: getPosition（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="07e212466625e63c04873920f4848ce1f1718e81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;LimitIterator&lt;/strong&gt; usage example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;LimitIterator&lt;/strong&gt;用法示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e3b44854a440db2973bc47bde45716417b0e2db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Lua::assign()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Lua :: assign（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2d8b9fd1f94a2fbcd8fa3dd82803772a47b1a625" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Lua::call()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Lua :: call（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9691d3f4f60a473ecc6da985b51127283e0af14e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Lua::eval()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Lua :: eval（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="206fc36d28507f3639f8e905695cc6f4c7495fc0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Lua::registerCallback()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Lua :: registerCallback（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d25b13590b3ee3c037e4392c089b01530ddd2ffb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;LuaClosure::__invoke()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;LuaClosure :: __ invoke（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="54c49a5ff39aa4c5c099cff833e3548d81464e55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Memcached::addServer()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Memcached :: addServer（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c5226d9d0fe3f03d487215ae5199d2f8b5b120d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Memcached::addServers()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Memcached :: addServers（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="febd813878640b738cc219c71e93ab77e8836ea9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Memcached::append()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Memcached :: append（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a7d23f1ceb6d7dab31239fb67979442786851779" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Memcached::cas()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Memcached :: cas（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f57f91337d76f2aa9c2e2f8707ec2018e13762d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Memcached::decrement()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Memcached :: decrement（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0bab4f403966829801642deac8361ab368ce69a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Memcached::delete()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Memcached :: delete（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="85942485deff02e7e5e69c4f9af085f968ecdc5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Memcached::fetch()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Memcached :: fetch（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a1e4820380af1d9aa560311ab783496ed322e389" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Memcached::flush()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Memcached :: flush（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b24d810d9a9ce0940564d62436331ef8c3ec7d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Memcached::get()&lt;/strong&gt; example #1&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;范例＃1 &lt;strong&gt;Memcached :: get（）&lt;/strong&gt;范例＃1&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2519f01f5311674b00bd4d2ccc9ac2c02635049c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Memcached::getDelayed()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Memcached :: getDelayed（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9319738461d0d02c767a264aff9577d274065c72" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Memcached::getMulti()&lt;/strong&gt; example for Memcached v3&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 Memcached v3的&lt;strong&gt;Memcached :: getMulti（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3228b4c074755036d3e803368a420e98c3c33c9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Memcached::getResultCode()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Memcached :: getResultCode（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec47168afac34ddd8e8e591e9e74f9b333d232ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Memcached::getResultMessage()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Memcached :: getResultMessage（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e597b9c05436595c5cbdab6f7bc6b2834abcab0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Memcached::getServerByKey()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Memcached :: getServerByKey（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="61ceeb2eed9653a39c9c37accf2ea52ab84359c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Memcached::getServerList()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Memcached :: getServerList（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45985fe85ae3ed0f388252293076bc396bc1a206" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Memcached::getStats()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Memcached :: getStats（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8aefea1f4aad9876f08ec87b6ec542e5b1c283e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Memcached::getVersion()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Memcached :: getVersion（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0b24b711797f5178fb1a24f6dc505d0960acd88b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Memcached::increment()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Memcached :: increment（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="10baf959463568a3319b09d260f328d70c646c97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Memcached::prepend()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Memcached :: prepend（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e57dd7e86c5ea9144fac95739ab8dd734aa85212" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Memcached::set()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Memcached :: set（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aa1a6a67c507387a10a812c300799021da87dcae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Memcached::setByKey()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Memcached :: setByKey（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="66f64ca91a068c801d947990745d2fc9f583800f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Memcached::setMulti()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Memcached :: setMulti（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4e088f442567ea7685088d979034b8d3ac6a6ac2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;NoRewindIterator::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;NoRewindIterator :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="68bf20031f28cfca26176267bd89ec3796679723" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;NoRewindIterator::rewind()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;NoRewindIterator :: rewind（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3418c96452ca03d08667cfd26a8228c23d43350c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Normalizer::getRawDecomposition()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Normalizer :: getRawDecomposition（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a4ddaef8df18266cc2345d469cbc4f460e269ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;OAuth::fetch()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;OAuth :: fetch（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c37ad6509d4977dc6e5900d9a356e6e9a5fcfa7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;OAuth::getAccessToken()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;OAuth :: getAccessToken（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46bf7a1706b57f196d0b6db1f29c7c9a2ec8e735" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;OAuth::getRequestToken()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;OAuth :: getRequestToken（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="70ae6e21f4d8768587d21ea548ac702feafe66f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;OAuth::setRequestEngine()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;OAuth :: setRequestEngine（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="780aae54a8ec4701e91258be549ef225e5663c7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;OAuth::setToken()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;OAuth :: setToken（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f3cc7ff1b6a0f5275cafcf1c62a86d159ef4860" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;OAuthProvider::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;OAuthProvider :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a112172f4633d716b5463642036e808e5725ca3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;OAuthProvider::generateToken()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;OAuthProvider :: generateToken（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e950a02b1019cac1ecad682b8e3258c2535d1153" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;OAuthProvider::is2LeggedEndpoint()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;OAuthProvider :: is2LeggedEndpoint（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e0e4d5dfa04a9f56c04372d8db6b60bd320dfc3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;PDOStatement::debugDumpParams()&lt;/strong&gt; example with named parameters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 具有命名参数的&lt;strong&gt;PDOStatement :: debugDumpParams（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ffd1562e477faf44c1b7a939e0f328fac24bb7de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;Phar::offsetGet()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;Phar :: offsetGet（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="434a5a69a13c316e131415962761e480bd77c199" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;PhpToken::__toString()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;PhpToken :: __ toString（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ea98386f1cb801ddf0356a58b9c6f9a7f71fd190" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;PhpToken::getTokenName()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;PhpToken :: getTokenName（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9588e25dd9670b4e1d7e24998ed56e28848bcbeb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;PhpToken::is()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;PhpToken :: is（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dee8245d1ae1e36e8447888fa7cc8884ed9074c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;PhpToken::isIgnorable()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;PhpToken :: isIgnorable（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fe0dc9d983ec667285cde0ea6c4bc5bc66a28e3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;PhpToken::tokenize()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;PhpToken :: tokenize（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7db6f9f3448bd94a927fb10f5697ce07aef7b1f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntHash::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntHash :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="baa92472113df949e51f2a3e37c06dda74652928" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntHash::add()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntHash :: add（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aa401302f62d7754f99508aa5789644bffe1a7bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntHash::delete()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntHash :: delete（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9831eec6696044a28b1f5dccaedd17796331830c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntHash::exists()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntHash :: exists（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a3da7b192908836cbfe48d5fae270c9c5e7497fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntHash::get()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntHash :: get（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b07299c9c290443c388ad3c21f44a1c27d571fee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntHash::getSize()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntHash :: getSize（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0025d75127631f470acda18bf1d823d9e2409094" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntHash::loadFromString()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntHash :: loadFromString（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee134eac27fedea7077393cdf566170fe5fd9690" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntHash::saveToFile()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntHash :: saveToFile（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bfa197e993bd4dac0ff3e0e14c19133667132683" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntHash::saveToString()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntHash :: saveToString（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f9b6d9240d9222efa575e133df26d849c393f787" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntHash::set()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntHash :: set（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="297d9c6233a4b32a9812a0cc1b0cacc7d794e8b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntHash::update()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntHash :: update（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eeb1ed82f8fa240da0050a8df3d326f00fee1690" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntSet::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntSet :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ca7a592f0f51bba6996d41b56214f0f899da2bc5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntSet::add()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntSet :: add（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="73506e50ea39d39ebf1c6216806e64a792c7dc9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntSet::delete()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntSet :: delete（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7334b12aab7b7ca422caadebd44a945ea4e9dd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntSet::exists()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntSet :: exists（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8b5ee377c594212c156ea2ee6ebccef470996fb1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntSet::getSize()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntSet :: getSize（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="da86426f4106dc6b9363d209b6d3c7b1fd8c84a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntSet::loadFromFile()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntSet :: loadFromFile（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3813c3dc432ee9c00596553828c7e7597148981d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntSet::loadFromString()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntSet :: loadFromString（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dbec5affc0536e801f8d3e8bd319ccb3015f9f3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntSet::saveToFile()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntSet :: saveToFile（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="755add1b76f508be17326b122493e406e399f76e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntSet::saveToString()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntSet :: saveToString（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d2d6da77e38ebb6253348dc36924bf048a0f4bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntStringHash::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntStringHash :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7928ca08049f57eb002d2034da6a68c9b6281b38" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntStringHash::add()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntStringHash :: add（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bfedb7c4e8d31a87d63c4fce7eeeed919319b07d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntStringHash::delete()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntStringHash :: delete（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="11b8c3381259fdceb41c8d6df72bec342a7ffd7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntStringHash::get()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntStringHash :: get（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ccc030c5f7cab30bcf477517afb590b27513602e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntStringHash::getSize()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntStringHash :: getSize（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d3a97e28661ed8b2309cd4ac063d8ef4242f0212" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntStringHash::loadFromString()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntStringHash :: loadFromString（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dd84ddce35ff479feb5402cf370e5f1155d064bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntStringHash::saveToFile()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntStringHash :: saveToFile（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3a60b8066da5e6e7e07818b4d7024cf058b0d26a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntStringHash::saveToString()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntStringHash :: saveToString（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="de146b697ce4e3d0a7283ccad69bb44a529c05ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntStringHash::set()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntStringHash :: set（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c147b43db25b8d3e0c3330f6aa0c232e29f83afa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashIntStringHash::update()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashIntStringHash :: update（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b7884d5d1baa024b2df453023bd8ab1c5423cd3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashStringIntHash::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashStringIntHash :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="498a9062634da4661f0716f542c1ca5092f4be88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashStringIntHash::add()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashStringIntHash :: add（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="811c523e53528b3a8a0f142151ea205502df9680" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashStringIntHash::delete()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashStringIntHash :: delete（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9385b464cea97e889db9f15f3fa7fcb84ce889ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashStringIntHash::get()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashStringIntHash :: get（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="445b64ef30db3304367b5e8f0516f980e5eba11b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashStringIntHash::getSize()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashStringIntHash :: getSize（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="57929abac87da20698f80207fa887af73e919efc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashStringIntHash::loadFromString()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashStringIntHash :: loadFromString（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5dd59a0c967a776af3cc87ed4e4e097e9cc715aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashStringIntHash::saveToFile()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashStringIntHash :: saveToFile（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="886d5bb87dd8b4d635f537caa086788459cc74d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashStringIntHash::saveToString()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashStringIntHash :: saveToString（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3a8d2541dc7fffbb6ba647e3e463504c9bf1fcff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashStringIntHash::set()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashStringIntHash :: set（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f298e1e4d8c9435ffab359ebc0fa7195e087434a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;QuickHashStringIntHash::update()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;QuickHashStringIntHash :: update（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f13a2375224dcc599eb6aaee886def03c750cf76" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;RarArchive::__toString()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;RarArchive :: __ toString（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f5c03e352e7fad562babdc67b5af7915b8a927fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;RarEntry::extract()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;RarEntry :: extract（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0f295620c2e59121ac894ee176e56b632a59b668" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;RarEntry::getAttr()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;RarEntry :: getAttr（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="074b5b919db25f28bf5206b183cea430fa477b96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;RarEntry::getHostOs()&lt;/strong&gt; example (version &amp;gt;= 2.0.0)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;RarEntry :: getHostOs（）&lt;/strong&gt;示例（版本&amp;gt; = 2.0.0）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="66bfa318d971586ac1c240d1b3498497aa16686a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;RarEntry::getMethod()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;RarEntry :: getMethod（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4939f9b5b3230745f53ef936c08ee3aebc8d4dcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;RarEntry::getName()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;RarEntry :: getName（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="96ab0e75a47ece3cd32496f5df0f60bf97da64c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;RarEntry::getPackedSize()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;RarEntry :: getPackedSize（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cab9ca560e4bc6483090e310c14afe5bbd61e0c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;RarEntry::getStream()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;RarEntry :: getStream（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6141a6f07b97f12bb40e166f5e7123dcf25c3697" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;RarEntry::getUnpackedSize()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;RarEntry :: getUnpackedSize（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39411b7eb7efa9fb1cd31680c57ec69dba207e95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;RarEntry::getVersion()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;RarEntry :: getVersion（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="525448ece06543f8c059c5928d413b5417d0bd3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;RarException::isUsingExceptions()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;RarException :: isUsingExceptions（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9470979091eed43b007d855e57f1bfa190db436" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;RarException::setUsingExceptions()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;RarException :: setUsingExceptions（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="734c891842647653ad073fe5ddb5f1f1741a2cbe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;RecursiveArrayIterator::getChildren()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;RecursiveArrayIterator :: getChildren（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="21d0a98f86a8aad5e5b3e4ca1061de25d7bd4c21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;RecursiveArrayIterator::hasChildren()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;RecursiveArrayIterator :: hasChildren（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cd66578bf5e9a08c825e15e2e836565181609760" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;RecursiveCallbackFilterIterator::hasChildren()&lt;/strong&gt; basic usage&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;RecursiveCallbackFilterIterator :: hasChildren（）的&lt;/strong&gt;基本用法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="99ddc5ebd3e671baa5f4d9f8bc47f30879d84fc5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;RecursiveRegexIterator::__construct()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;RecursiveRegexIterator :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="35e59e86d18112ecbe19d3bdb1a1eda3fe5593ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #1 &lt;strong&gt;RecursiveRegexIterator::getChildren()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃1 &lt;strong&gt;RecursiveRegexIterator :: getChildren（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
