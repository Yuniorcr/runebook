<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="php">
    <body>
      <group id="php">
        <trans-unit id="baeb7877730c4878d38aa88302dff03a00ee4390" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Some examples of the &lt;var&gt;&lt;var&gt;$this&lt;/var&gt;&lt;/var&gt; pseudo-variable&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2 &lt;var&gt;&lt;var&gt;$this&lt;/var&gt;&lt;/var&gt; 伪变量的一些例子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="84309eed169013d0df530af168624e5292923df5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Some examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2一些例子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a729ec52a258660f8ba5938686c3aae20c2f7649" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Sorting multi-dimensional array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2排序多维数组&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0b1254305bafca5d440c8b860e43594315ded62e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Specifying padding character&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2指定填充字符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="451c9138528f23072109459d89a8eba54960b7fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Splitting a string into component characters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2将字符串拆分为组成字符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb9d719d51dc1fc915643b48b580f9938af6022b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Static &lt;strong&gt;method_exists()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2静态&lt;strong&gt;method_exists（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cd4c0cabeafe8d0f542e5336ebd2ce73322256d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Static data example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2静态数据示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6ee39e22aa7c243201fd0bc48e644e0154e56749" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Static invocation of &lt;code&gt;loadXML&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2静态调用 &lt;code&gt;loadXML&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c2de53b07387726cf06ddd6901376baf56da9797" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Static invocation of &lt;em&gt;loadXML&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2静态调用&lt;em&gt;loadXML&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a47aac00b88908b4e0d7cdf84ae477e3000c2ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Static property example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2静态属性示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6256b041ce301a6cf5c94d97493c56622684cd9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Submitting a job and retrieving incremental status&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2提交作业并获取增量状态&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d02d771149bb0c7ce91d22303bd4a88bbc5f579" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Testing if a string is found or not&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2测试是否找到字符串&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8d51042459b70a161c5bbf7899039c2711d3c89f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Ticks usage example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2壁虱用法示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c3644e158170d5b1b60a157187b4fe8b6f9326fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Timing script execution in PHP 5&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2在PHP 5中执行定时脚本&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e77d7baf822875e44b0424e1beddc78a7a83dd3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Transcription of standard array comparison&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2标准数组比较的转录&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9327794c5b1fed243036cfe5881095258fd6d25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Traversing an array with &lt;strong&gt;each()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2用&lt;strong&gt;each（）&lt;/strong&gt;遍历数组&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f1c0dc3575bea967b5e4b4b8a8f21a66cd4c4ee4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Trimming array values with &lt;strong&gt;trim()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2使用&lt;strong&gt;trim（）&lt;/strong&gt;修剪数组值&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="902b282ab339d912c4679965457c7a56b0c79a20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Type Casting and Overwriting example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2类型转换和覆盖示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aaa11459fb6a397335dac4940eb8bf054e35d63a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Undefined order of evaluation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2未定义的评估顺序&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d69d65a46938249ccfc81754e71da6c2652879e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Understanding &lt;strong&gt;socket_select()&lt;/strong&gt;'s result&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2了解&lt;strong&gt;socket_select（）&lt;/strong&gt;的结果&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="93148079f4123610f5c39893c4249d558a6e2f49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Unsetting all previously set headers.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2取消设置所有先前设置的标题。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74e454402f71ffdac4cb82c7bc1e1218e5bd8b23" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Uploading file (deprecated as of PHP 5.5.0)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2上传文件（自PHP 5.5.0起不推荐使用）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8d8e1fe8c2008947fc5df217a9c4e8926aa45d40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Usage of &lt;strong&gt;&lt;code&gt;ENT_IGNORE&lt;/code&gt;&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2 &lt;strong&gt; &lt;code&gt;ENT_IGNORE&lt;/code&gt; 的&lt;/strong&gt;用法&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="84176739e1d29d1eb458972842719d59dcbe2dad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Usage on built-in functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2内置函数的用法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9ca69430c2a52229aa72e22d24e02f47d72d31e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Usage with array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2数组的用法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8cc29d8ef7c1d622df445d38ea58d839e7305101" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using !==&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2使用！==&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="31b8197f799740396fc6f946a8df53c734160031" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;code&gt;(unset)&lt;/code&gt; casting&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2使用 &lt;code&gt;(unset)&lt;/code&gt; 强制转换&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="11013db9d20dcd0e9f4c4fbcb4730a7584530145" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;code&gt;instanceof&lt;/code&gt; with inherited classes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2将 &lt;code&gt;instanceof&lt;/code&gt; 与继承的类一起使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff4b5bfe70afbc7789bc16729020c30da0ed9929" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;em&gt;(unset)&lt;/em&gt; casting&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2使用&lt;em&gt;（未设置）&lt;/em&gt;强制转换&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1fcfc635f5badb80430c84c6a6fb9c14c92a026f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;em&gt;instanceof&lt;/em&gt; with inherited classes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2将&lt;em&gt;instanceof&lt;/em&gt;与继承的类一起使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="69007b4432bd8b7293cdc3b795f73d9900b68a60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;crypt()&lt;/strong&gt; with htpasswd&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2 在htpasswd中使用&lt;strong&gt;crypt（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8fa279e0032527795b812cffecd0a90bd93963e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;dns_get_record()&lt;/strong&gt; and DNS_ANY&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2使用&lt;strong&gt;dns_get_record（）&lt;/strong&gt;和DNS_ANY&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad79ac4c88c50fbb7cda288b4bcae3a5295d8e90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;get_class()&lt;/strong&gt; in superclass&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2 在超类中使用&lt;strong&gt;get_class（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="345f94e3657875f397267298bb90b19b7d2729b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;http_response_code()&lt;/strong&gt; in a CLI environment&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2 在CLI环境中使用&lt;strong&gt;http_response_code（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ac4f67261ac346675ca629d6539b6853c7e128c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;imagefontheight()&lt;/strong&gt; together with &lt;a href=&quot;function.imageloadfont&quot;&gt;imageloadfont()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2结合使用&lt;strong&gt;imagefontheight（）&lt;/strong&gt;和&lt;a href=&quot;function.imageloadfont&quot;&gt;imageloadfont（）&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b78a6a14987755f64814bb399f5b74e24a2074fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;imagefontwidth()&lt;/strong&gt; together with &lt;a href=&quot;function.imageloadfont&quot;&gt;imageloadfont()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2结合使用&lt;strong&gt;imagefontwidth（）&lt;/strong&gt;和&lt;a href=&quot;function.imageloadfont&quot;&gt;imageloadfont（）&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e686be8a574b0fb0801de551e6eec9ae67a2a7e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;mcrypt_module_open()&lt;/strong&gt; in encryption&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2 在加密中使用&lt;strong&gt;mcrypt_module_open（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bda1cde595c07e5b0450ad7bbc4ded5756e46b1c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;pg_query()&lt;/strong&gt; with multiple statements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2将&lt;strong&gt;pg_query（）&lt;/strong&gt;与多个语句一起使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1b544a2e5f50450b71e6859b1501810bf367ee13" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;snmp2_set()&lt;/strong&gt; for setting BITS &lt;acronym&gt;SNMP&lt;/acronym&gt; object id&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2使用&lt;strong&gt;snmp2_set（）&lt;/strong&gt;设置BITS &lt;acronym&gt;SNMP&lt;/acronym&gt;对象ID&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a534d049faca7ed0d4438b074cde8fdc5382e60d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;snmp3_set()&lt;/strong&gt; for setting BITS &lt;acronym&gt;SNMP&lt;/acronym&gt; object id&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2使用&lt;strong&gt;snmp3_set（）&lt;/strong&gt;设置BITS &lt;acronym&gt;SNMP&lt;/acronym&gt;对象ID&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e590487322657491c0a243989ae3b781b378ea42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;snmpset()&lt;/strong&gt; for setting BITS &lt;acronym&gt;SNMP&lt;/acronym&gt; object id&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2使用&lt;strong&gt;snmpset（）&lt;/strong&gt;设置BITS &lt;acronym&gt;SNMP&lt;/acronym&gt;对象ID&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4f2dc28973c810415313bda79b64aaa4e375a437" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;stat()&lt;/strong&gt; information together with &lt;a href=&quot;function.touch&quot;&gt;touch()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2将&lt;strong&gt;stat（）&lt;/strong&gt;信息与&lt;a href=&quot;function.touch&quot;&gt;touch（）&lt;/a&gt;一起使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3fc02c107e43ddf920916f97c8dd5630c46dad7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;stripslashes()&lt;/strong&gt; on an array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2 在数组上使用&lt;strong&gt;stripslashes（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9d9cff7abd4cdae0c4dfcc5f870e28297ad07e9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;substr_replace()&lt;/strong&gt; to replace multiple strings at once &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2使用&lt;strong&gt;substr_replace（）&lt;/strong&gt;一次替换多个字符串&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="637d88267667cd5e5f1b00740176b1c180a9de00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;var&gt;&lt;a href=&quot;reserved.variables.globals&quot;&gt;$GLOBALS&lt;/a&gt;&lt;/var&gt; instead of global&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2使用 &lt;var&gt;&lt;a href=&quot;reserved.variables.globals&quot;&gt;$GLOBALS&lt;/a&gt;&lt;/var&gt; 代替global&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cd190544c33e6af9bb9a50b7c3cf5c95382de643" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.globals&quot;&gt;$GLOBALS&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; instead of global&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2使用 &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.globals&quot;&gt;$GLOBALS&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; 代替global&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4a75edda3ef0a49ade6ac8ba70b838576971796b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using LDAP Bind Anonymously&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2匿名使用LDAP绑定&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="24b4b23b1056a3d94e6eb380dc3e129ad2d61391" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using UDP connection&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2使用UDP连接&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d0a905d70d389093fe78dbe1a69b3917452ba43e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using UDP server sockets&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2使用UDP服务器套接字&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80d654478ecee76c1bf841ecaf1952c346ae39f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using a custom handler to print a description&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2使用自定义处理程序打印描述&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15b16481e840bc9e2148203db95a7242a8be13e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using a negative &lt;code&gt;length&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2使用负 &lt;code&gt;length&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a33775bd22f66de9c992090b8eb224fb59115df0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using asXML() on &lt;a href=&quot;simplexmlelement.xpath&quot;&gt;SimpleXMLElement::xpath()&lt;/a&gt; results&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2在&lt;a href=&quot;simplexmlelement.xpath&quot;&gt;SimpleXMLElement :: xpath（）&lt;/a&gt;结果上使用asXML（）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b96ac7f77933bea2a6cffbc0782576862e84ee6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using constructor arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2使用构造函数参数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="500813cfe07a6c2cc7bc2f23ba649ed7e9ae5466" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using flags&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2使用标志&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="551038818a0608137b25a67e8429e1cf68d859d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using indexed arrays with &lt;strong&gt;preg_replace()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2在&lt;strong&gt;preg_replace（）中&lt;/strong&gt;使用索引数组&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="341ceec5d8ae3f198d92011520c0a22957a59454" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using namespaces&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2使用名称空间&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="75908bc60537105c24067463d5077430287d814a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using the &lt;code&gt;max_phonemes&lt;/code&gt; parameter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2使用 &lt;code&gt;max_phonemes&lt;/code&gt; 参数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b8de23263a03eed16ac00efcae2f36b693e4ecd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using the &lt;code&gt;phonemes&lt;/code&gt; parameter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2使用 &lt;code&gt;phonemes&lt;/code&gt; 参数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e3c3b4cf3ab97b6fcde3c3409b90d876246ee1ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using the &lt;em&gt;instanceof&lt;/em&gt; operator in PHP 5&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2 在PHP 5中使用&lt;em&gt;instanceof&lt;/em&gt;运算符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b425fa87b9789f516abadc9d35c54c706b3ad02c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using&lt;strong&gt;wincache_ucache_delete()&lt;/strong&gt; with &lt;code&gt;key&lt;/code&gt; as an array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2将&lt;strong&gt;wincache_ucache_delete（）&lt;/strong&gt;与 &lt;code&gt;key&lt;/code&gt; 作为数组一起使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aefec6e82618fbbeb28bee9a50531a9783801ab0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Valid example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2有效的例子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad362691e3ed13f55eb297074b63784f26b9f979" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Values exceeding ranges are added to their parent values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2超出范围的值将添加到其父值&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5f6b806bdee1c5da34277b67bb05a25d417023e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Variable method example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2可变方法示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2af625a37fb0e7678f17c56a9d401f5748e86c46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Volatile use-case&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2易失性用例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="82a8e7d6d85e47586319945f40f678630644e3d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 What &lt;strong&gt;get_meta_tags()&lt;/strong&gt; returns&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2 &lt;strong&gt;get_meta_tags（）&lt;/strong&gt;返回什么&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="da5d0ce99d26d7f19d68ab8fd687f46468caf015" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Working with multiple namespaces&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2使用多个名称空间&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a7b2a5feda4b9aa72b486e5f64b49e99b1145629" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Working with variables in a sandbox&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2在沙盒中使用变量&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="234ebf738c2ed609c97d1a67618f4ff7bb09e00f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Yielding a key/value pair&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2产生一个键/值对&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="57467c036fe4f21f530641b52ecab72fc93e13f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 __NAMESPACE__ example, global code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2 __NAMESPACE__示例，全局代码&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8d4be666eb3cf4da0d216ddfc76ca0165efcbdcc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 global functions/constants fallback inside a namespace&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2全局函数/常量回退到名称空间中&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="847b3bb3baa4edaae59df109bde37af99c629417" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 importing/aliasing with the use operator, multiple use statements combined&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2使用use运算符导入/别名，合并多个use语句&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6db0046f8a6636a36e17c5981e573bda0113ff4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 moldb.xml - small database of molecular information&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2 Moldb.xml-分子信息的小型数据库&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ccf2076ce4ea7ddddea7ed3864eb87a5626764ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 outputs the content of data property into HTML table&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2将data属性的内容输出到HTML表中&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad31b102f673c91fe89be534ca3e51cb95bd2072" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 plugin Dummy.php (under &lt;a href=&quot;https://secure.php.net/manual/en/yaf.appconfig.php#configuration.yaf.directory&quot;&gt;application.directory&lt;/a&gt;/plugins)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2插件Dummy.php（在&lt;a href=&quot;https://secure.php.net/manual/en/yaf.appconfig.php#configuration.yaf.directory&quot;&gt;application.directory&lt;/a&gt; / plugins下）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="79d16a3eacd9f94fdbef6bb5dff5583c44556714" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 plugin Dummy.php (under &lt;a href=&quot;https://www.php.net/manual/en/yaf.appconfig.php#configuration.yaf.directory&quot;&gt;application.directory&lt;/a&gt;/plugins)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2插件Dummy.php（在&lt;a href=&quot;https://www.php.net/manual/en/yaf.appconfig.php#configuration.yaf.directory&quot;&gt;application.directory&lt;/a&gt; / plugins下）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e14009a8a3cbf792c3dd9acfc9246a140ba53f46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 private method example: private methods may only be executed by the Threaded object during execution&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2私有方法示例：私有方法只能在执行期间由Threaded对象执行&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bacbf719a854b7507c2f6da50a65e3c1c6b00b64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 unserialize_callback_func example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃2 unserialize_callback_func示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="97c18495e319757f9846766717c9ba9f906d32d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #20 The 'BottomHat' method, also known as 'Black TopHat' is the pixels that a Closing of the shape adds to the image. That is the pixels that were used to fill in the 'holes', 'gaps', and 'bridges'. &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃20&amp;ldquo; BottomHat&amp;rdquo;方法，也称为&amp;ldquo; Black TopHat&amp;rdquo;，是闭合形状添加到图像的像素。那就是用来填充&amp;ldquo;孔&amp;rdquo;，&amp;ldquo;间隙&amp;rdquo;和&amp;ldquo;桥&amp;rdquo;的像素。&lt;strong&gt;imagick的:: morphology（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2cb07e20d9553f11119cefda4e90b2179dfaa8ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #20 The 'BottomHat' method, also known as 'Black TopHat' is the pixels that a Closing of the shape adds to the image. That is the the pixels that were used to fill in the 'holes', 'gaps', and 'bridges'. &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃20&amp;ldquo; BottomHat&amp;rdquo;方法，也称为&amp;ldquo; Black TopHat&amp;rdquo;，是闭合形状添加到图像的像素。那就是用来填充&amp;ldquo;孔&amp;rdquo;，&amp;ldquo;间隙&amp;rdquo;和&amp;ldquo;桥&amp;rdquo;的像素。&lt;strong&gt;imagick的:: morphology（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e95eb940ffd117c73daa47b94c9d4cfa7817b196" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #21 Hit and Miss &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃21 Hit and Miss &lt;strong&gt;Imagick :: morphology（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2ac7ae1c62520c1d04daf19f18edd02e81282512" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #22 Thinning &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃22细化&lt;strong&gt;Imagick :: morphology（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a22cbfe9ebf2ad95b476894cc43c21dd136cd73d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #23 Thicken &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃23加厚&lt;strong&gt;Imagick :: morphology（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="155ecfcad7f24023902b7bbc8c8c54a81b9dcbce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #24 Thick to generate a convex hull &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃24厚生成一个凸包&lt;strong&gt;Imagick :: morphology（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7c9cb7a91203135a72b8f1f8893cedf3311f12ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #25 Iterative morphology &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃25迭代形态&lt;strong&gt;Imagick :: morphology（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e157ec63266858610500dacedbed914aef5cdffb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #26 Helper functon to get an image silhouette &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃26帮助器函数获取图像轮廓&lt;strong&gt;Imagick :: morphology（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e07e825b4848b9b3ef86bfc721f394708a4ab9c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 1-based index with &lt;strong&gt;array()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用&lt;strong&gt;array（）从&lt;/strong&gt; 1开始的索引&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49abf949ac4a08c9d590e8dbe6379289d232567c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;a href=&quot;class.dateinterval&quot;&gt;DateInterval&lt;/a&gt; and &lt;a href=&quot;datetime.diff&quot;&gt;DateTime::diff()&lt;/a&gt; with the %a and %d modifiers &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 具有％a和％d修饰符的&lt;a href=&quot;class.dateinterval&quot;&gt;DateInterval&lt;/a&gt;和&lt;a href=&quot;datetime.diff&quot;&gt;DateTime :: diff（）&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="944db176969474e66f180350c6f48105430452a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt; and &lt;code&gt;.&lt;/code&gt; have the same precedence&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;示例＃3 &lt;code&gt;+&lt;/code&gt; ， &lt;code&gt;-&lt;/code&gt; 和 &lt;code&gt;.&lt;/code&gt; 具有相同的优先级&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="91e58ae1c73a0de38db312220c77976db95b447a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;code&gt;include&lt;/code&gt; through HTTP&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3通过HTTP &lt;code&gt;include&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f758f22c661cff43fa3e3a98813ce0ba82f843f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;code&gt;limit&lt;/code&gt; parameter examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;code&gt;limit&lt;/code&gt; 参数示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1924a185ed76be0c63a4564ab50a37a9b2670ca6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;code&gt;mode&lt;/code&gt; examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;code&gt;mode&lt;/code&gt; 示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e21674e07d70fdede407b96e2369f786012e1307" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;code&gt;mode&lt;/code&gt; with &lt;code&gt;precision&lt;/code&gt; examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;code&gt;mode&lt;/code&gt; 与 &lt;code&gt;precision&lt;/code&gt; 示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff49926a33a03eec78855f7a0c1ea34fa5fe5a00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;code&gt;static::&lt;/code&gt; usage in a non-static context&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;code&gt;static::&lt;/code&gt; 在非静态上下文中的用法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="43888bab51715ec4ef49d2b28b488e3ac1119570" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;em&gt;+&lt;/em&gt;, &lt;em&gt;-&lt;/em&gt; and &lt;em&gt;.&lt;/em&gt; have the same precedence&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;em&gt;+&lt;/em&gt;，&lt;em&gt;-&lt;/em&gt;和&lt;em&gt;。&lt;/em&gt;具有相同的优先级&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="85479f9eace90744c9fd85bba74c99634fad0438" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;em&gt;include&lt;/em&gt; through HTTP&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 通过HTTP &lt;em&gt;包含&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="87df528bcc718bbcec2ce3fdd1079b89d4b49b44" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;em&gt;static::&lt;/em&gt; usage in a non-static context&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;em&gt;static ::&lt;/em&gt;在非静态上下文中的用法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f905f1e28b250aae0ffdd5f234b4d6a67c0b17e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;&lt;code&gt;Memcached::GET_PRESERVE_ORDER&lt;/code&gt;&lt;/strong&gt; example for Memcached v3&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 Memcached v3的&lt;strong&gt; &lt;code&gt;Memcached::GET_PRESERVE_ORDER&lt;/code&gt; &lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e23a856976e3e9d11b9a79104a8e0cfacee16709" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;DOMXPath::registerPHPFunctions()&lt;/strong&gt; with &lt;code&gt;php:function&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;DOMXPath :: registerPHPFunctions（）&lt;/strong&gt;与 &lt;code&gt;php:function&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="34d07086ddadba230eaa90c0f91edb164106d799" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;DOMXPath::registerPHPFunctions()&lt;/strong&gt; with &lt;em&gt;php:function&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;DOMXPath :: registerPHPFunctions（）&lt;/strong&gt;与&lt;em&gt;php：function&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2166b224bb4535d52f98ea4f132f0efa56c64714" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;Imagick::setOption()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;Imagick :: setOption（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6086496fa1983a7c5e3d5b75c52a4ce62edec04d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;JsonSerializable::jsonSerialize()&lt;/strong&gt; example returning an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;JsonSerializable :: jsonSerialize（）&lt;/strong&gt;示例返回一个&lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bb8e5b2b31367c2076aaec18a1cf8d9bcc2a333e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;JsonSerializable::jsonSerialize()&lt;/strong&gt; example returning an int &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3返回一个int的&lt;strong&gt;JsonSerializable :: jsonSerialize（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="75756c97d56a3a8304c96bd2291c521e006a2f43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;QuickHashIntHash::loadFromFile()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;QuickHashIntHash :: loadFromFile（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12ea292f7e003c45b3541b95d02e68a87c28f645" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;QuickHashIntStringHash::loadFromFile()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;QuickHashIntStringHash :: loadFromFile（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="580ae9a081e542da89d9a13f4fa03e145514602b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;QuickHashStringIntHash::loadFromFile()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;QuickHashStringIntHash :: loadFromFile（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0c9cb347eef4b52200204ba608d7d4c83c39f958" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;Yaf_Application::__construct()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;Yaf_Application :: __ construct（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1216d9bfa061b36897b05af33b9ba44985b4200b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;Yaf_Route_Map()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;Yaf_Route_Map（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ce2abb482551ddda99aa93ca4b0d6be33ec4027e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;Yaf_Route_Regex and named capture ground(as of 2.3.0)()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;Yaf_Route_Regex和命名的捕获地面（自2.3.0起）（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="32a78472c697ae03be57b2e2a7da9cdc1deb9ab9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;Yaf_Route_Rewrite(as of 2.3.0)()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;Yaf_Route_Rewrite（从2.3.0开始）（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0f5e96dcb8cf8b7ab57c06e883a7719a76aaf098" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;array_filter()&lt;/strong&gt; with &lt;code&gt;flag&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 带有 &lt;code&gt;flag&lt;/code&gt; &lt;strong&gt;array_filter（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef694c82f0b0fcb5aa1f96fb32ef3952c6bfdd39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;array_filter()&lt;/strong&gt; with &lt;code&gt;mode&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3具有 &lt;code&gt;mode&lt;/code&gt; &lt;strong&gt;array_filter（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f08b272b9c9d03fb809a532668e611e0b85d3c7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;array_map()&lt;/strong&gt; - using more arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;array_map（）&lt;/strong&gt; -使用更多的数组&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eff7b3ff851c636d3e5de96abf009b92e9831944" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;array_merge()&lt;/strong&gt; with non-array types&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 具有非数组类型的&lt;strong&gt;array_merge（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ffb9dfc4c7141ad201d9b09fc892e8a0075a88d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;array_slice()&lt;/strong&gt; and array with mixed keys&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;array_slice（）&lt;/strong&gt;和具有混合键的数组&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3c4df6702cb9c10bc70f86fa3da76a25d4c67ca1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;call_user_func()&lt;/strong&gt; using namespace name&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 使用名称空间名称的&lt;strong&gt;call_user_func（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d758b837a2edb96c71d5a794fa02f35696df179b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;date()&lt;/strong&gt; and &lt;a href=&quot;function.mktime&quot;&gt;mktime()&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;date（）&lt;/strong&gt;和&lt;a href=&quot;function.mktime&quot;&gt;mktime（）&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="03cf9ebbf75dc5b1b8b6d4298a11263277de23eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;func_get_arg()&lt;/strong&gt; example of byref and byval arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;func_get_arg（）&lt;/strong&gt; BYREF和BYVAL参数的例子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="04806c900e3cc446a7df47d8b0db8e9e1c7aae1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;func_get_args()&lt;/strong&gt; example of byref and byval arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;func_get_args（）&lt;/strong&gt;的byref和byval参数示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="65a3f14282f5726cc9a35c64432eaab4370b1f67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;getopt()&lt;/strong&gt; example: Passing multiple options as one&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;getopt（）&lt;/strong&gt;示例：将多个选项作为一个传递&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b4d41f03fb5be79b9cb49e40475f590ef78c642e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;gmp_setbit()&lt;/strong&gt; example - clearing a bit&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;gmp_setbit（）&lt;/strong&gt;示例-清除一点&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba5260e29a94071ad8a22c41cfdb26136c9f2bdb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;http_build_query()&lt;/strong&gt; with complex arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 具有复杂数组的&lt;strong&gt;http_build_query（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5bb0ea6e9dae057bb9ca2b195ed907e41eb99953" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;imagefilter()&lt;/strong&gt; colorize example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;imagefilter（）&lt;/strong&gt;着色示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e16f5aba029ca0dff1f7763d59ac60262c27468" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;in_array()&lt;/strong&gt; with an array as needle&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 使用数组作为指针的&lt;strong&gt;in_array（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d5f069b29a07c8e1f9b57b5f47be1b120e2bbbec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;iterator_count()&lt;/strong&gt; in &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt; loops&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;实施例＃3 &lt;strong&gt;iterator_count（）&lt;/strong&gt;中&lt;a href=&quot;control-structures.foreach&quot;&gt;的foreach&lt;/a&gt;循环&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="64dacb02cd986a68412091875059b12bac361ab9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;json_last_error()&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;JSON_THROW_ON_ERROR&lt;/code&gt;&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;json_last_error（）&lt;/strong&gt;和&lt;strong&gt; &lt;code&gt;JSON_THROW_ON_ERROR&lt;/code&gt; &lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="032e26f80f4e8b1342e14a10359a0e13460c273c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;microtime()&lt;/strong&gt; and &lt;code&gt;REQUEST_TIME_FLOAT&lt;/code&gt; (as of PHP 5.4.0)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;microtime（）&lt;/strong&gt;和 &lt;code&gt;REQUEST_TIME_FLOAT&lt;/code&gt; （从PHP 5.4.0开始）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba9d024f009647a4c6ce411ea9322721018d157b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;microtime()&lt;/strong&gt; and &lt;em&gt;REQUEST_TIME_FLOAT&lt;/em&gt; (as of PHP 5.4.0)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;microtime（）&lt;/strong&gt;和&lt;em&gt;REQUEST_TIME_FLOAT&lt;/em&gt;（从PHP 5.4.0开始）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="02a29a697db9355db219c5d197449929dd160dd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;parse_ini_file()&lt;/strong&gt; parsing a php.ini file&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;parse_ini_file（）&lt;/strong&gt;解析一个php.ini文件&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a0aaddc654ca9aafc40163acd101e5d88b71293" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;password_hash()&lt;/strong&gt; example finding a good cost&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;password_hash（）&lt;/strong&gt;示例找到一个不错的代价&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="167f49be933e355b371f5a67f936d5e402afd7b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;password_hash()&lt;/strong&gt; example setting salt manually&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;password_hash（）&lt;/strong&gt;手动设置盐的示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="56da65809632cb933e8c7ec70b01d560054e1219" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;pathinfo()&lt;/strong&gt; example for a dot-file&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 点文件的&lt;strong&gt;pathinfo（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="201aa4299cc8f631a26114f6f6a485aaa17f7c09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;preg_replace_callback()&lt;/strong&gt; using recursive structure to handle encapsulated BB code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 使用递归结构来处理封装的BB代码的&lt;strong&gt;preg_replace_callback（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="938586c75c08de6bb9da79c7826536ff30122f2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;setcookie()&lt;/strong&gt; and arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;setcookie（）&lt;/strong&gt;和数组&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b80e08942a23a6632ed9f3378b530f0ed713441a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;socket_select()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;socket_select（）&lt;/strong&gt;例子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="71d06c9f52e4deba78c5f0b5e88eaa38e56f8634" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;strtr()&lt;/strong&gt; behavior comparison&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;strtr（）&lt;/strong&gt;行为比较&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7b28a1901396b31f6d5083e62beae4670b93f81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;token_get_all()&lt;/strong&gt; on a class using a reserved word example &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 使用保留字的类上的&lt;strong&gt;token_get_all（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0996e25e45930066ef7f54db1bbe6b673cf468c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;ucwords()&lt;/strong&gt; example with additional delimiters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3带有附加定界符的&lt;strong&gt;ucwords（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee07bf591ffbd09b41c61d47043c7438764072a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;unpack()&lt;/strong&gt; example with unnamed keys&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 带有未命名键的&lt;strong&gt;unpack（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c4701290ea3b67edc5d32d699e7f94dc6e7e5b15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;uopz_set_mock()&lt;/strong&gt; and static members&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;uopz_set_mock（）&lt;/strong&gt;和静态成员&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5999130d811048278d382fcba5a5bce20717a22d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;uopz_set_return()&lt;/strong&gt; class example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;uopz_set_return（）&lt;/strong&gt;类的例子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7c844aae6d4b5a8a3a0f2a587a3e12fabc68a619" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;usort()&lt;/strong&gt; example using a member function of an object &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 使用对象的成员函数的&lt;strong&gt;usort（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6bbe4ed2067654a53ae841429923672d663b7890" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;wordwrap()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 &lt;strong&gt;wordwrap（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4bbcec31eba25603f15294088095b780aa3e2699" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 A &lt;a href=&quot;class.mysqli-result&quot;&gt;mysqli_result&lt;/a&gt; example comparing &lt;a href=&quot;class.iterator&quot;&gt;iterator&lt;/a&gt; usage&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3一个比较&lt;a href=&quot;class.iterator&quot;&gt;迭代器&lt;/a&gt;使用率的&lt;a href=&quot;class.mysqli-result&quot;&gt;mysqli_result&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dd4ee329ded5b74740fdfdb83eeec9a4383909a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Accessing internal classes in namespaces&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3在命名空间中访问内部类&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb97860bfa3e1a5f534bd61d972ca878751a8e6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Add two e-mail addresses to a user&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3向用户添加两个电子邮件地址&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e41419b2faaa798bbc1470def8db15e364ffa039" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Alternate Precedence Order Example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3替代优先顺序示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="16f479eb045e0755514e9c90d510cc6ba1d442f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Argument swapping&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3参数交换&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e297c0391f420b6a39435d12ca99840080d70bed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Assigning a default value&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3分配默认值&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef7068f2d8d6e12fa0a548acf5ca11d246006164" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Autoloading with exception handling for 5.3.0+&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 5.3.0+带有异常处理的自动加载&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6f6d0ef7d67494ecc6c808995127a55b48c265fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Basic &lt;strong&gt;substr()&lt;/strong&gt; usage&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3基本的&lt;strong&gt;substr（）&lt;/strong&gt;用法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="062e64559b8e80658d32233a6206f1e7e42573d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Basic return type declaration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3基本的返回类型声明&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="00d83db1b8e4a783433b23b56d9d34560d774fa5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Beware when adding months&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3当增加月份时要当心&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d605c2189b61186ea270b3230cefdcd04a59d2a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Beware when subtracting months&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3减去月份时要当心&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45ccc7e4cc01b737fe2dfc5adeae992ed5ea80e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Bit shifting on integers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3整数移位&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bf7a11c529d9afd9ab8dacdd6fc383bb6a204b10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Building a UTF-8 string from individual bytes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3从单个字节构建UTF-8字符串&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7eba5ff2fa2f65aec3bc663a518c88ec97235390" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 CASE_FIRST rules&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 CASE_FIRST规则&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4404cd93669a08c876362fc0df0f4c23df08eaff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Call a stored procedure with an INOUT parameter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用INOUT参数调用存储过程&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="829a65e1c47cf49c6cb04b614aecbd9c68fc3a84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Calling a parent's method&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3调用父母的方法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="288b629feb280b513353df7396191bf21f05418c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Calling sandbox functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3调用沙箱函数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c7b4e6f6b24404f37a89ec5cae375e8acba8e027" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Connect on a specifed port.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3在指定的端口上连接。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7b077dff6feb413ccc449f0e839fefe2c0c39d5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Connect on a specified port.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3在指定的端口上连接&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8af398acf8e707bef81dd5941f3576fe56296fca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Constant Declaration as of PHP 7.1.0&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3自PHP 7.1.0起的常量声明&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="804ae5fb683555736cd125b97bc95274d58ea7e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Construction order&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3施工顺序&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9916fe26ff9fe20eec8ac9a176f35e173c8f592" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Converting error reporting to exceptions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3将错误报告转换为异常&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17ac020251cf4538fc7a1a14394123b723a15217" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Create a PDO instance using an alias&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用别名创建PDO实例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5dbfad8563dc381d9b706dc38820a5c4cf73ca4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Create a complex gradient from the polynomial (4x^2 - 4x^2 + 1) modulated by a sinusoidal gradient &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3从正弦梯度调制的多项式（4x ^ 2-4x ^ 2 +1）创建一个复杂梯度 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8b3a71d937cccaf1623f20f66b097206810b947c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Create an temporary archive&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3创建一个临时档案&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e3b55ffcbd5975fd78236b0ffcbaf7ce52bb7a8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Creating an instance&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3创建一个实例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="34bb7c3670f07b6d622db3d86eb3935560630f29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Cross platform compatible example using the &lt;code&gt;%e&lt;/code&gt; modifier&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用 &lt;code&gt;%e&lt;/code&gt; 修饰符的跨平台兼容示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="30997402c1ed14cd0a5c9257412f4408f7dea2f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Cross platform compatible example using the &lt;em&gt;%e&lt;/em&gt; modifier&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用&lt;em&gt;％e&lt;/em&gt;修饰符的跨平台兼容示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6b582b8a1dec8c2f9b37525594f994bb71aff598" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Declaring an encoding for the script.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3声明脚本的编码&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f918b1a7c1ad3a7fcc082df152f2d54043e198cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Declaring multiple namespaces and unnamespaced code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3声明多个命名空间和未命名空间的代码&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="601eb69e63e04a9235c4dc7a53d3f6346e6a309d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Destructor Example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3析构函数示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3a3afa206af5246388b14e2f8aba086fd5f1c6df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Erode &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3侵蚀&lt;strong&gt;Imagick :: morphology（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45c54df1726ee27db42a84da4a865bc953769209" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Example demonstrating superglobals and scope&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3演示超全局变量和范围的示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="107f3876189683cc4a049efe84df5d47e3d1e9ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Example of typed properties&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3键入属性的例子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4a8aa33619f9f2b68aead5f696e65a2f4725d216" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Example usage of VT100 support enabled&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3启用VT100支持的示例用法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e2ca5048ba4a58fbdbc841251188e73ab4d0c064" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Example with &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; argument&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用&lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt;参数的示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14e24358ad082aceec2b34b822cf7b905a86a05c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Examples of arrow functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3箭头函数的例子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="011819bcdeda73b6b67928c38ad83507349ab40b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Execute a prepared statement with an array of insert values (placeholders)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用插入值数组（占位符）执行准备好的语句&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="54383a095d8bc473fafcbf882c6e78e185095cfa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Expectations without a custom exception&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3没有自定义例外的期望&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8082d811ddf5b7f537a48f19ff8805b40768e5ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Exporting classes (since PHP 5.1.0)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3导出类（自PHP 5.1.0起）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0311cdb873809f3733ae6d92166ef44a8efacc15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Finding the month a week is in&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3查找一周中的月份&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4db24ceff742acf2ecb4982263ee32011ae4e79d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Format string with literal characters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用文字字符格式化字符串&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed81a63c023fd3b6c15dcc61c880476f4f42df1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Functions within functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3函数内的函数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="23f822db0145da57b25017eeb9df088367f1c6f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Get the column of usernames from the public &quot;username&quot; property of an object &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3从对象的公共&amp;ldquo;用户名&amp;rdquo;属性中获取用户名列 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="118f50c75324615bfeb203fb9b3cbe0eb4f88379" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Getting the domain name out of a URL&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3从URL中获取域名&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b81888c0630cb4fa31beb5c9176648bed2fb0df3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Grouping all values by a single column&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3将所有值按单个列分组&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b72e3a73c6f4e875e88d7c5bf36242bca4d3275" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Heredoc string quoting example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 Heredoc字符串引用的例子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="91184091b1a2a1ab0184ffb7f2367a75d397c191" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Hourly watcher&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3每小时的观察者&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="558773a88cc8f57e9e7e6f10f8ef62ef69fbe26d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 How to handle UNBUFFERED queries&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3如何处理UNBUFFERED查询&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b035e927dd40373a39b9da2ba2bd9ecb6c93cf8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Importing and dynamic names&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3导入和动态名称&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ea4db4c95fadf882bc74a320ce2764d83b2466f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Inheriting variables from the parent scope&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3从父作用域继承变量&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a83ddb50bc01cbdce4eadd5affaa7a486496cd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Integer overflow on a 64-bit system&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 64位系统上的整数溢出&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b81880694fe3bcdbf26abd0857aeb03341f69ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Iterable return type example &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3迭代返回类型的例子 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="612db78ed02d3ca1e02bfe32175032d7c9440fd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 JSON_NUMERIC_CHECK option example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 JSON_NUMERIC_CHECK选项示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff929528457db9fc71afb0cd44c901c450b3fa43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Last day of a month&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例子＃3一个月的最后一天&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb8bc1c062a8351c7c6c36529d880f680be8680a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Load class example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3加载类示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0da699e8d87dfee84ffcbe992108f726daf3a29b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Midnight sun&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3午夜的阳光&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ccf5733ef8dec54152e08897d7858ec438f71ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Mixed &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; and &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; keys&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3混合&lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt;和&lt;a href=&quot;language.types.string&quot;&gt;字符串&lt;/a&gt;键&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d2f02b7de425496fed9b0575b16874634548ba71" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Mixed int and string keys&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3混合的int和字符串键&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ff42330b41b4609ec2218846aacc96b10341375" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 More complex form variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3更复杂的表单变量&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a7f264eff463aaff92745669d376a3ae08929d79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Multiple interface inheritance&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3多接口继承&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="553c92929898fb77736f52b6047604507e602891" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Namespaced ::class example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3命名空间:: class示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f23c6d14bd8be6de8a132c4aae3beb5680a4953c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Object Iteration implementing IteratorAggregate&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3实现IteratorAggregate的对象迭代&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="68737ef7441753381be375536407e02d76b021b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Old methods of accessing user input&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3访问用户输入的旧方法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7920612ad10165b40aa9e65b9e4896329111545d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Outputting the image at 75% quality to the browser&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3将质量为75％的图像输出到浏览器&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="04506f73fd70d4425ff983aaf3088b46dafe54ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Outputting the image with a different foreground&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3输出具有不同前景的图像&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="22fd54d8fd7282f2906d0bd523b7ae27f44dd05b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Overriding the cookie lifetime&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3覆盖cookie寿命&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="afbe391e6f5da0483c89200c087dca4ac5ae3cc8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Passing optional arguments after mandatory arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3在必选参数之后传递可选参数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef5e7c0a2427c381499ec04f0a6b13cf859e8db5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Portably diffing two local files&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3可移植地区别两个本地文件&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fcb77c621107c36737ab1374cc074e5feb9b87cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Position specifier with other specifiers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3位置说明符和其他说明符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="deac3e59729a63bf5906ef03fe2942eea5c41f03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Printing all the credits&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3打印所有信用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9fd8596cea450b06eefc1d8cbc5fc5daf22edfc9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Quoting a complex string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3引用一个复杂的字符串&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7f45b20a5f15bc01f3144e13d041e7a4fa3b8944" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Reading a section of a file&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3读取文件的一部分&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e5574650f084b48c9640c0555afa1fddc7d07c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 References and foreach statement&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3参考和foreach语句&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e3aabd27efc21fa45612c1666831980448e38023" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Remote &lt;strong&gt;fread()&lt;/strong&gt; examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3远程&lt;strong&gt;fread（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb8053e094d2af75bbcc00380fd1256d5dff8db2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Replace URLs with links&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3用链接替换URL&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="70069ddc16a971c7fd4d0aa795dacce40ab142cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Replacing several values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3替换几个值&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7909c60e1312e82af22eff749d7862e0a3e7d531" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Resuming a download at position 100 to a new file with &lt;strong&gt;ftp_nb_get()&lt;/strong&gt; &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用&lt;strong&gt;ftp_nb_get（）&lt;/strong&gt;在位置100处恢复到新文件的下载&lt;strong&gt;&lt;/strong&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2e8f11399b6329edb979a31fd543e3284d8f7d80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Retrieving owner document&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3检索所有者文档&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d69ca07f317605b2ca0212c0790dd15471005708" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Returning a reference from a function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3从函数返回引用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="051852cabb2d9b723b2e7a4f1d0e9bc57ab9885e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Rewrite rule for Lighttpd&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 Lighttpd的重写规则&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e5ccbd2a9c90a32f372f5383299a6233761ef16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 SPARSECOLORMETHOD_SPEPARDS &lt;strong&gt;Imagick::sparseColorImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 SPARSECOLORMETHOD_SPEPARDS &lt;strong&gt;Imagick :: sparseColorImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4fc10e07823b3a540f0a85d7cd838db93f716e29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Sending mail with extra headers as &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3发送带有额外标题的邮件作为&lt;a href=&quot;language.types.array&quot;&gt;数组&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="91aea6f6526561cb88eaa49e27b4b93a784b3aae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Sending mail with extra headers as array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3发送带有额外标题的邮件作为数组&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="563c7e61df80dc207e2b3c10dab9ac3066fe1d6f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Shutdown functions and destructors run regardless&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3不管关闭函数和析构函数都运行&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f14ae566856025af7d0d14b92267be609f4a2ed8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Simple example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3简单的例子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fd808ce65e7c507e56ce5d040d610db666bb764f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Sorting database results&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3排序数据库结果&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="11a0f51d908feb7a62f4f078e9e6d9af7345afb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Splitting a string into matches and their offsets&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3将字符串拆分为匹配项和它们的偏移量&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="86d605b1d8c763fb917261512023d565c723cc6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Stream wrapper and image, can be used with the xml function as well&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3流包装器和图像，也可以与xml函数一起使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1629d9a96eeef27394c4bece7537068283bdd9b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 This will not work&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3这是行不通的&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a0be896c1775eae2a6b139fc99d465ce833ad471" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Throwing an Exception&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3引发异常&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="09da7de0bce77106a3e83846d08f5e4322818d68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Use of default parameters in functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3在函数中使用默认参数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec8818d82f96c6709ad78a2d5be231a9835317a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using &lt;a href=&quot;language.oop5.magic#object.invoke&quot;&gt;__invoke()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用&lt;a href=&quot;language.oop5.magic#object.invoke&quot;&gt;__invoke（）&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="20ec0536f3ac3ed5c4f2fbd899377ab82703c340" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using &lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state()&lt;/a&gt; (since PHP 5.1.0)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用&lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state（）&lt;/a&gt;（自PHP 5.1.0起）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="db2f715d9d4b3c2cf1dd8b3b23bd22e7e9956bde" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using &lt;code&gt;instanceof&lt;/code&gt; to check if object is &lt;em&gt;not&lt;/em&gt; an instanceof a class&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用 &lt;code&gt;instanceof&lt;/code&gt; 检查object是否&lt;em&gt;不是&lt;/em&gt;类的instance&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12296fcc7de70167e6e86a3aeab20c850fa67240" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using &lt;em&gt;instanceof&lt;/em&gt; to check if object is &lt;em&gt;not&lt;/em&gt; an instanceof a class&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用&lt;em&gt;instanceof&lt;/em&gt;检查object是否&lt;em&gt;不是&lt;/em&gt;类的instance&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c945d57c328231a426552a0b3dfb8a15eeca186a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using &lt;strong&gt;SNMP::set()&lt;/strong&gt; for setting BITS &lt;acronym&gt;SNMP&lt;/acronym&gt; object id&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用&lt;strong&gt;SNMP :: set（）&lt;/strong&gt;设置BITS &lt;acronym&gt;SNMP&lt;/acronym&gt;对象ID&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6babc6ff6c62e0edcb768d093b86d90ec50eef5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using &lt;strong&gt;crypt()&lt;/strong&gt; with different hash types&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3将&lt;strong&gt;crypt（）&lt;/strong&gt;与不同的哈希类型一起使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="26784abf134b4037d1631574a60157686f7be4a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using &lt;strong&gt;get_class()&lt;/strong&gt; with namespaced classes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3将&lt;strong&gt;get_class（）&lt;/strong&gt;与命名空间类一起使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2f4dd0479a0425c339522d0ba29e5f5d5564c1d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using &lt;strong&gt;wincache_ucache_delete()&lt;/strong&gt; with &lt;code&gt;key&lt;/code&gt; as an array where some elements cannot be deleted&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3将&lt;strong&gt;wincache_ucache_delete（）&lt;/strong&gt;与 &lt;code&gt;key&lt;/code&gt; 用作不能删除某些元素的数组&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9463e4b4b0e2e7286a60290daac1093c7aca7973" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using IS_REPEATABLE to allow attribute on a declaration multiple times&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用IS_REPEATABLE多次允许声明的属性&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0dceac9fc6a5fc144f345121850fad71474b0f62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using a generalized match expressions to branch on integer ranges&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用广义匹配表达式在整数范围上分支&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a61b81f8f3b3696ec4690f9441b4c07cce68f4ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using a non &quot;string&quot; needle&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用非&amp;ldquo;弦&amp;rdquo;针&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b6696cc557473b2ed3fec270b861578c1cfaade6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using an offset&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用偏移量&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8b3af34e7c4646acae0ffa4b84056438316beffb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using anonymous functions as callback functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用匿名函数作为回调函数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df8a30194789a78b51d598a7e2c2a3635b74067c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using constructor property promotion&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用构造函数属性提升&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49c98dcaf6ac2d7ffc1a4132480975642f4f9c26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using lambda function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用lambda函数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a67cd57cbb13d61de67eca0ab0e5d547ff4849d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using named subpattern&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用命名子模式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c999e6d62a7c5b655dd5fdb61f95c3d41c1cfd0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using nested &lt;strong&gt;list()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用嵌套的&lt;strong&gt;list（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4e8ce1f81b0e2cc61e903795395273c14e3ceb74" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using the &lt;code&gt;max_phonemes&lt;/code&gt; parameter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用 &lt;code&gt;max_phonemes&lt;/code&gt; 参数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d43afd42e1e6ef8cc4e5a3c4126412058f1fbc24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Variable method example with static properties&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3具有静态属性的可变方法示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d1b944209b7cad95521aaf648632a2e79b562c6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Various newline separators&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3各种换行符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="411312981a96b336763e01b58827d6aa88312b98" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Volume Callback&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3批量回调&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15f4f540d65eb3a6a73c534f021bc463a26af3bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 With &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用&lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt;对象&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="237b0596f2a79ef84e19663488bff721597bb837" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Yielding &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;s&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;实施例＃3屈服&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;小号&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9384c4a526ef0a67d1929cba697356d592870770" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Yielding &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt;s&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;实施例＃3屈服&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; &lt;/strong&gt;小号&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="faf2ddd9fbfce66427a2a8fc0181e4af4f2a7830" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 common mistakes using &lt;strong&gt;json_decode()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用&lt;strong&gt;json_decode（）的&lt;/strong&gt;常见错误&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="56eaa8e5d3d1bce13dfefe73febecfce1fda6906" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 getimagesize (URL)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 getimagesize（URL）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b853698d3d80da91c71397f756d6b165e54ea13b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 parsemoldb.php - parses moldb.xml into an array of molecular objects &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3 parsemoldb.php-将mouldb.xml解析为分子对象数组 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa01169aecf99dc2f16d8ff354de7a2516df7d5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 using __NAMESPACE__ for dynamic name construction&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃3使用__NAMESPACE__进行动态名称构造&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fca5d63d5b143b5f0a91b0e513eedc42b984c718" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;code&gt;depth&lt;/code&gt; errors&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4 &lt;code&gt;depth&lt;/code&gt; 错误&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6f13db70c0b27115e8be831ae8960a2378cd9914" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;code&gt;mode&lt;/code&gt; with &lt;code&gt;precision&lt;/code&gt; examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4 &lt;code&gt;mode&lt;/code&gt; 与 &lt;code&gt;precision&lt;/code&gt; 示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f6b38ebdd8114c776e200cd834255c5b2ed665bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;&lt;code&gt;Memcached::GET_PRESERVE_ORDER&lt;/code&gt;&lt;/strong&gt; example for Memcached v1 and v2&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4 Memcached v1和v2的&lt;strong&gt; &lt;code&gt;Memcached::GET_PRESERVE_ORDER&lt;/code&gt; &lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c04c4569a4ba78100ae39add99c4b80bf338d629" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;JsonSerializable::jsonSerialize()&lt;/strong&gt; example returning a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4 &lt;strong&gt;JsonSerializable :: jsonSerialize（）&lt;/strong&gt;示例返回一个&lt;a href=&quot;language.types.string&quot;&gt;字符串&lt;/a&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed9e93293a6bdba88891d12757d35f870082986d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;JsonSerializable::jsonSerialize()&lt;/strong&gt; example returning a string &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4 &lt;strong&gt;JsonSerializable :: jsonSerialize（）&lt;/strong&gt;示例返回一个字符串&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2c77f43db153e76bdd5db8a6a493ceb3f5fbe301" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;Yaf_Route_Regex()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4 &lt;strong&gt;Yaf_Route_Regex（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0dfd711134c3be0c017d46c54d7e19a197b088b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;date()&lt;/strong&gt; Formatting&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4 &lt;strong&gt;date（）&lt;/strong&gt;格式化&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e55e7feae87019883368a869799bd3e6dbc022be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;getopt()&lt;/strong&gt; example: Using &lt;code&gt;optind&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4 &lt;strong&gt;getopt（）&lt;/strong&gt;示例：使用 &lt;code&gt;optind&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ac2b4057b0f47e8da7e7686ace7eb949556afcd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;imagefilter()&lt;/strong&gt; negate example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4 &lt;strong&gt;imagefilter（）&lt;/strong&gt;取反的例子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="883961d61d54fdbc0ab1a2582c9c7c90ca29dcc9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;password_hash()&lt;/strong&gt; example finding a good cost&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4 &lt;strong&gt;password_hash（）&lt;/strong&gt;示例找到一个不错的代价&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3c6be54bf966113203285eb26c99b8ce372cd66e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;password_hash()&lt;/strong&gt; example using Argon2i&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4使用Argon2i的&lt;strong&gt;password_hash（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="23ba32ee54000c5cc8fa1653b0a6d42470c0d241" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;sprintf()&lt;/strong&gt;: zero-padded integers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4 &lt;strong&gt;sprintf（）&lt;/strong&gt;：零填充的整数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9d126c5c8b1d41f46b78535595688640fb59b864" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;substr()&lt;/strong&gt; casting behaviour&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4 &lt;strong&gt;substr（）&lt;/strong&gt;转换行为&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="213ca1375e11917cb695e203c99e3a32e6ad9478" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;usort()&lt;/strong&gt; example using a &lt;a href=&quot;functions.anonymous&quot;&gt;closure&lt;/a&gt; to sort a multi-dimensional array &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4 &lt;strong&gt;usort（）&lt;/strong&gt;示例使用&lt;a href=&quot;functions.anonymous&quot;&gt;闭包&lt;/a&gt;对多维数组进行排序&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0b9ba0a2dd45432aa889f8c6cabe27bf8fa92e9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 A &lt;a href=&quot;function.setcookie&quot;&gt;setcookie()&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4一个&lt;a href=&quot;function.setcookie&quot;&gt;setcookie（）&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8c645eb24b12b038b153e369ae293b8ef1c23ce8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Accessing an array inside double quotes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4在双引号内访问数组&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="694d17515a14931d5db0b953e54da4198229283d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Accessing internal classes, functions or constants in namespaces&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4在名称空间中访问内部类，函数或常量&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df7e1ec90553a3f270355a0d7fda9e5280e41fe1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Accessing private members of the same object type&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4访问相同对象类型的私有成员&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="20eede5b080c7da23f3b573535394409ef62418e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Accessing properties&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4访问属性&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f62e8a5deb5ed7f43feb6eda7a1a75e38872a3bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Argument swapping&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4参数交换&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="84f058c3095baefef0f974eda22e1818b9e6c7d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Autoloading with exception handling for 5.3.0+ - Missing custom exception&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4 5.3.0+具有异常处理功能的自动加载-缺少自定义异常&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="264a949538d40b3f8a29e6dff98d0a55fcf7c515" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Basic return type declaration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4基本的返回类型声明&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5a0e8993260c2e66a78f49c6add127c85a8733f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 CASE_LEVEL rules&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4 CASE_LEVEL规则&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="86446c4476f75e71d7b409db85fa6e4fc491bd9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Case insensitive sorting&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4不区分大小写的排序&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60678a5c21f6b0396584d870b646b61b9f005059" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Change a user's password&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4更改用户密码&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c2a9c3e00cc695634ef07fdc21a39c5a791f086" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Closures and scoping&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4闭包和作用域&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa781d50dc30aca38c13a9efa917e69832c0e103" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Comparing return value of include&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4比较include的返回值&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49e6cfeebd42c026c838a36ba8537e093bf1f17e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Complex callables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4复杂的可调用对象&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7cffa40d8a9343e13b3e4b30a0d362042855d012" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Constant expression example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4常数表达式示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0587ba2dcb18a21a6c903913181eab3561f92eb8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Creating an array of arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4创建一个数组数组&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="68df4b99febc8d81b5c7578e986c259c235dd763" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Custom objects are transient&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4自定义对象是瞬态的&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="743189b554d53f72082d8120fbcb98af64f8b82b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Declaring multiple namespaces and unnamespaced code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4声明多个名称空间和未命名空间的代码&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="767842190432fd576c3bcc8f2854e38323191ae4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Display all known and unknown formats.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4显示所有已知和未知格式。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="88cb509e54a76512d5c387f3382140f2d8cd08b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Erode Intensity &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4 &lt;strong&gt;腐蚀&lt;/strong&gt;强度&lt;strong&gt;Imagick :: morphology（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="38e7c1ea2093623f509a1ffbe892e3142367e920" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Example demonstrating need for static variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4演示需要静态变量的示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="37b67ed23400c2ad043e1c074c6d54144782e24f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Exception handling with a &lt;em&gt;finally&lt;/em&gt; block&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4带有&lt;em&gt;finally&lt;/em&gt;块的异常处理&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5fc7837a5071001d184d93e1ba31ce349c680fc7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Execute a prepared statement with question mark placeholders&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4使用问号占位符执行准备好的语句&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="57735942fb252f0515f58cb940ccf26dca7c47eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Expectations with a custom exception&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4带有自定义例外的期望&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="84c9c8b11e7d4ab1fe64c38051a2b74eba1d24af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Forwarding and non-forwarding calls&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4转接和非转接呼叫&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7347ee04ce7dcc0505fbff16eca574e4a3b18db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Get the column of names from the private &quot;name&quot; property of an object using the magic &lt;strong&gt;__get()&lt;/strong&gt; method. &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4使用魔术&lt;strong&gt;__get（）&lt;/strong&gt;方法从对象的私有&amp;ldquo;名称&amp;rdquo;属性中获取名称列。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5057839f9690873aa7405b4925ceca43d8652fa8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Heredoc in arguments example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4 Heredoc中的参数示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5c92c73880a28a9466e9264d1c5e3bc327bfd520" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 How to handle the returned value&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4如何处理返回的值&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2aa279029fca0809730abb705151c071783560f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Importing and fully qualified names&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4导入和完全限定的名称&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3a8fbbce2e7460bb113c1a78469b7ae2eca7e86f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Indexed arrays without key&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4没有键的索引数组&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1b32ab5fba2e67951fd90a2628b563ccc65b822e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Instantiating a class for each result&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4为每个结果实例化一个类&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6042b662c9cb328667860e31b5ab5fd65ce51538" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Interfaces with constants&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4具有常量的接口&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dd6d4034a67830f27ae6e7bba646b082520d2773" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Iterable generator return type example &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4可迭代的生成器返回类型示例 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4293bd08eb57cf8c1545da8b2ad21e5e30c2e4d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Load namespace class example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4加载名称空间类的示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0f51e147b76505c15193de490563db8f209b9cdd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 More complex form variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4更复杂的表单变量&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="986d8af14696a64da46cee6fd66877a7076e3077" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Multiple Traits Usage&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4多种性状的用法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d44ff4b44d53dd3eaba88d5a827d3e34a08ec0b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Non-obvious Ternary Behaviour&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4非显而易见的三元行为&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb744c41dfd4a35f8cc19b7b4b4dfb70457efde7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Object Assignment&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4对象分配&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e772949384e937349096068474c82b55059ebbf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Passing arguments to sandbox functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4将参数传递给沙盒函数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a71dbc5b4c0df317909327364ef13e254dfaa3c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Passing function parameters by reference&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4通过引用传递函数参数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6b22babc9acd44aa461b3cc3b24c1159a694225b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Passing values by reference&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4通过引用传递值&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12e4d4e2edaf8c4444e0935f0ee2c3199d7799e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Performing a zip operation of arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4对数组执行zip操作&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb883d9916d2896f54720cfb1dc11021e8a4c912" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Reading the session and closing it&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4读取会话并关闭它&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a6476fab04f3477995d1fac11cd33435f5b71fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Recursive functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4递归函数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a35ef91429ea16bcc3529ecbd9f54473a06df7c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Returning an object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4返回一个对象&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb500b82ef31846a41cd39190f110a2d64922ee7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Rewrite rule for Nginx&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4 Nginx的重写规则&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2addc5131e251d8bbaea590aa9154d3aa750deed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 SPARSECOLORMETHOD_VORONOI &lt;strong&gt;Imagick::sparseColorImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4 SPARSECOLORMETHOD_VORONOI &lt;strong&gt;Imagick :: sparseColorImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8320fa2159c6ffe9a7ebd3ea1dcb217e76ab38a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Sending mail with an additional command line parameter.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4使用附加的命令行参数发送邮件。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae257df7c88291531ba1031da2718ea44ab18259" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Sequential versus non-sequential array example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4顺序与非顺序数组示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5bd50189ef67a5fbb4a41d2565c498622dc55e1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Strip whitespace&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4删除空格&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5c00ad842349c2efc8b849d148e124827eeef04a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Throwing an Exception&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4引发异常&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7b33bb213efc938abaa0be6b60d0dd381f0e3beb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using &lt;a href=&quot;language.oop5.magic#object.invoke&quot;&gt;__invoke()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4使用&lt;a href=&quot;language.oop5.magic#object.invoke&quot;&gt;__invoke（）&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb43741bcd127f23a78943691d0a90bb2b38b56b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using &lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state()&lt;/a&gt; (since PHP 5.1.0)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4使用&lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state（）&lt;/a&gt;（自PHP 5.1.0起）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eaddf72799acfb7c880e247c2bca6a56b2d2f115" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using &lt;code&gt;instanceof&lt;/code&gt; with interfaces&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4在接口上使用 &lt;code&gt;instanceof&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d7db6c371d02e04612029b36466c193cf6ff1e2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using &lt;em&gt;instanceof&lt;/em&gt; with interfaces&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4 在接口上使用&lt;em&gt;instanceof&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="53180981dd8a4f9ef57f9784e8b8a92af945421f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using &lt;strong&gt;http_build_query()&lt;/strong&gt; with an object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4将&lt;strong&gt;http_build_query（）&lt;/strong&gt;与对象一起使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2596a72873c658f3c650ed7ba8a4d309c782c8e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using &lt;strong&gt;list()&lt;/strong&gt; with array indices&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4将&lt;strong&gt;list（）&lt;/strong&gt;与数组索引一起使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="97069ed7cb0793a5d4e9778b7692da0932f61b36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using a class method with &lt;strong&gt;call_user_func()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4在&lt;strong&gt;call_user_func（）中&lt;/strong&gt;使用类方法&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a2ff6761272f37d4c1409707fb82718838602c71" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using a generalized match expressions to branch on string content&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4使用广义匹配表达式分支到字符串内容&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8d2c61db89e16c43f6461d88e654457e7ab8b8d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using named subpattern&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4使用命名子模式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5853605d575c94e2c9e719a507e106b8a0e03a02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using non-scalar types as default values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4使用非标量类型作为默认值&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="230dc81023c2bea879a9d228b3969209954b7a2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using static creation methods&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4使用静态创建方法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f70d8d1638d547149e61f3a91841243ee5bcc2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using stream contexts&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4使用流上下文&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="23956f336ef62a4ce78aa8855b062373264a1782" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Values from the outer scope cannot be modified by arrow functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4外部范围的值不能用箭头函数修改&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="56580b505ad2e70a6f313b0bf14d218eac10fd2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Yielding values by reference&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4通过引用屈服值&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e23c4c24d9ea8de0631211941e957492905260b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 getimagesize() returning IPTC&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4 getimagesize（）返回IPTC&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d34be0de0d742688d70d2368e54763273439746f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 the namespace operator, inside a namespace&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4命名空间内的命名空间运算符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="72b69c6fcfa94ed1d2ec64bb5aeaf8e1092e5781" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 value interpolation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃4值插值&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3acc67e46d71015019b0577f6df284d1b278f738" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;a href=&quot;class.yaf-route-static&quot;&gt;Yaf_Route_Static&lt;/a&gt;(default route)example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5 &lt;a href=&quot;class.yaf-route-static&quot;&gt;Yaf_Route_Static&lt;/a&gt;（默认路由）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5ab9da87664a3f67d6fb7b489bff802b423770f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;code&gt;include&lt;/code&gt; and the &lt;a href=&quot;function.return&quot;&gt;return&lt;/a&gt; statement&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5 &lt;code&gt;include&lt;/code&gt; 和&lt;a href=&quot;function.return&quot;&gt;return&lt;/a&gt;语句&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6831aec55adf69e6c8bc89b7069cc8da2e83eba0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;em&gt;include&lt;/em&gt; and the &lt;a href=&quot;function.return&quot;&gt;return&lt;/a&gt; statement&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5 &lt;em&gt;include&lt;/em&gt;和&lt;a href=&quot;function.return&quot;&gt;return&lt;/a&gt;语句&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="76be70222be580ecc5bed343f16dfb79f8af756c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;&lt;code&gt;JSON_PRESERVE_ZERO_FRACTION&lt;/code&gt;&lt;/strong&gt; option example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5 &lt;strong&gt; &lt;code&gt;JSON_PRESERVE_ZERO_FRACTION&lt;/code&gt; &lt;/strong&gt;选项示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b07f459a39b17f045d2aa9aa552934d9a4d955af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; &lt;code&gt;callback&lt;/code&gt; with only &lt;code&gt;array&lt;/code&gt; &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5仅 &lt;code&gt;array&lt;/code&gt; &lt;strong&gt; &lt;code&gt;null&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;callback&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="521a27d607b3ce5f61886f8685897b57e56e7e03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;array_map()&lt;/strong&gt; - with string keys&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5 &lt;strong&gt;array_map（）&lt;/strong&gt; -带有字符串键&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="226010a76bc30b2c4e04cd5ba3c5326f7cb4ae81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;imagefilter()&lt;/strong&gt; pixelate example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5 &lt;strong&gt;imagefilter（）&lt;/strong&gt;像素化示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="257295346ed4ee26ca3cc048d437fa74990ebd4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;json_decode()&lt;/strong&gt; of large integers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5 大整数的&lt;strong&gt;json_decode（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="610e572ef6a884cfdb0a54e8730ad7d30400c391" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;list()&lt;/strong&gt; and order of index definitions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5 &lt;strong&gt;list（）&lt;/strong&gt;和索引定义的顺序&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17925b7c0697b51b876814c9ba3ee2f0dd14ea7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;password_hash()&lt;/strong&gt; example using Argon2&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5 使用Argon2的&lt;strong&gt;password_hash（）&lt;/strong&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="076d145c72d00cca847dc7ca7c3c56c85018eee7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;sprintf()&lt;/strong&gt;: formatting currency&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5 &lt;strong&gt;sprintf（）&lt;/strong&gt;：格式化货币&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="03d8eb38d26a9787089cbc5139f4aea646332015" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;yield from&lt;/strong&gt; with &lt;a href=&quot;function.iterator-to-array&quot;&gt;iterator_to_array()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5 使用&lt;a href=&quot;function.iterator-to-array&quot;&gt;iterator_to_array（）&lt;/a&gt;&lt;strong&gt;产生的收益&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="995e266994f5f115f7c1b5bfd21d36aa0bb14a8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 A &lt;a href=&quot;function.setcookie&quot;&gt;setcookie()&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5一个&lt;a href=&quot;function.setcookie&quot;&gt;setcookie（）&lt;/a&gt;示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="81b40e435082e45924d728383d3b0f198cc1a290" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Assigning a default value&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5分配默认值&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80b0260135bdaa878485d07a0a586c6bca3ad3a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Automatic binding of &lt;code&gt;$this&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5自动绑定 &lt;code&gt;$this&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f3bc8f694eb0881f293be8b77f6c7bd949a69b1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Automatic binding of &lt;em&gt;$this&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5自动绑定&lt;em&gt;$ this&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8409eb28492c1ca25f8610c475b4050c164e84ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Calling a function for each result&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5为每个结果调用一个函数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="86d6daad04c588d3fae011cbb58852ae0757aa69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Change a user's password (Active Directory)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5更改用户密码（Active Directory）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab0629a99968d83fe753fb21a0f7e15353d0e912" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Class constant visibility modifiers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example #5 Class constant visibility modifiers&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bd0994cd322141256e1c1918e6be42ef0eacdc78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Conflict Resolution&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5冲突解决&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f2a98740c8c9c46857330e8217811ce26eb32a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Creating new objects&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5创建新对象&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8059ec77d39bf31a010c69dd550209cb1cf72ccd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Destructor Example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5析构函数示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d71c831d950d4d6a7f929627c634e80def4a788e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Dilate &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5扩张&lt;strong&gt;Imagick :: morphology（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="24b447119355d5d5b1c9355954bab71edf7b7214" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Example use of static variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5使用静态变量的示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b80afce89bb36c1b7c4eb7691d994dacb64189ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Exception handling with a &lt;a href=&quot;language.exceptions#language.exceptions.finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; block&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5使用&lt;a href=&quot;language.exceptions#language.exceptions.finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;块的异常处理&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad3c61394e2032c9e62c89d65b25d56da365f7ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Execute a prepared statement using array for IN clause&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5使用IN子句的数组执行准备好的语句&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="10446a7daf7b6ab1a5be489d16ea5192184a5f8e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Fully Qualified names&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5完全限定的名称&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="949847cae36debeb583547f36317c04616575dff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Illegal importing rule&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5非法导入规则&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ebafaa223f72f8c64c56660f447b5faea223cb36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Incorrect usage of default function arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5错误使用默认函数参数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7f570a9c2d016ceaaa80035881940889abf0935" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Iterable type variance example &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5迭代类型差异示例 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4e7a068c90f9fc977333d80f98e2e641b4802391" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Keys not on all elements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5并非所有元素上的键&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="01ef1df8168b73858e5425e442e5d6b0c6326027" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 MVC class loading example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5 MVC类加载示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="85931308f3bc8a6a7b638e1e5ba883c920d6640c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Nested Exception&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5嵌套异常&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8ba85fbae2ee4749a08f87f027fe7aa299fe4ee6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Nullable argument type declaration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5可空参数类型声明&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="984634c5501a9b717db8b2f1c1641d7ff3d51c3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 SPARSECOLORMETHOD_BARYCENTRIC &lt;strong&gt;Imagick::sparseColorImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5 SPARSECOLORMETHOD_BARYCENTRIC &lt;strong&gt;Imagick :: sparseColorImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f770cd6b38ffd6dcb5af5ce17a3538fca645e142" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Sending HTML email&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5发送HTML电子邮件&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="27812c82a3ad767161062594c9393ffd44eab971" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Specifying padding character&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5指定填充字符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="85b0d003e846595425c648e22a6f9f28351b316d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Strict mode in action&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5严格模式在起作用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="48e32a06bcff987964d46692ece7002b259ffeea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Use of default parameters in functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5在函数中使用默认参数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b71ce744eec24a6effd63b6b40ff42629f6fa396" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Using &lt;a href=&quot;language.oop5.magic#object.debuginfo&quot;&gt;__debugInfo()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5使用&lt;a href=&quot;language.oop5.magic#object.debuginfo&quot;&gt;__debugInfo（）&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d3515798fec095822001acfc771545f99345d638" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Using &lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state()&lt;/a&gt; (since PHP 5.1.0)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5使用&lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state（）&lt;/a&gt;（自PHP 5.1.0起）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2f4963e741ef8bc7322db5c6b8abebaad1a70ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Using &lt;code&gt;instanceof&lt;/code&gt; with other variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5将 &lt;code&gt;instanceof&lt;/code&gt; 与其他变量一起使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="844b26d06cc5920d8a580992e0a7155195fb55a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Using &lt;em&gt;instanceof&lt;/em&gt; with other variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5将&lt;em&gt;instanceof&lt;/em&gt;与其他变量一起使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d015425c842ee54dd5cf1f0d29df710229e5ff6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Using Heredoc to initialize static values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5使用Heredoc初始化静态值&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e71ee85bedf4647b6c7f3c0660f8c25d9f633e63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Using lambda function with &lt;strong&gt;call_user_func()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5在&lt;strong&gt;call_user_func（）中&lt;/strong&gt;使用lambda函数&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f4e23d36a78ca578fdf95e2b777067b79c1ed6e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Using the &lt;code&gt;count&lt;/code&gt; parameter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5使用 &lt;code&gt;count&lt;/code&gt; 参数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a56b435ddd7e97a4d5cd63c03752dd6c71a74fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 the namespace operator, in global code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃5全局代码中的名称空间运算符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b24eca1d02d7116bfe18931bcd7e2d459a1860c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 &lt;strong&gt;array_map()&lt;/strong&gt; - with string keys&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6 &lt;strong&gt;array_map（）&lt;/strong&gt; -带有字符串键&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="545ffcc738a92e7cb2f7b67740c9d7027bf3f226" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 &lt;strong&gt;imagefilter()&lt;/strong&gt; scatter example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6 &lt;strong&gt;imagefilter（）&lt;/strong&gt;分散示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0e565b16d760c1a1be40ec22bb2d62fe01033af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 &lt;strong&gt;list()&lt;/strong&gt; with keys&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6 带键的&lt;strong&gt;list（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d0b51b26a0758cf3a30e1bd11dca9566e1bbea3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 &lt;strong&gt;sprintf()&lt;/strong&gt;: scientific notation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6 &lt;strong&gt;sprintf（）&lt;/strong&gt;：科学计数法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0e4994906ba0465b1f1c4bed47b4ef422d5ac7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Access member of newly created object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6新建对象的访问成员&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f5265b3e6ed2b223318bc2084cb772e391fccdde" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Accessing array elements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6访问数组元素&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ca66e8eecdbad8ed732885c0d869dc8cd682d019" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Attempting to use &lt;code&gt;$this&lt;/code&gt; inside a static anonymous function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6尝试在静态匿名函数中使用 &lt;code&gt;$this&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb2d15aa94c36863c9636fe97c7ee06036e4de2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Attempting to use &lt;em&gt;$this&lt;/em&gt; inside a static anonymous function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6尝试在静态匿名函数中使用&lt;em&gt;$ this&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e42cc25b3641832cfbb65df4cf4271f7f4a206f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Basic use of &lt;strong&gt;yield from&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;实施例＃6基本使用的&lt;strong&gt;从产率&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ccddc32cdb80b7be849ad2c49f3d388eb23bf599" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Changing Method Visibility&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6更改方法可见性&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f4e93ae301856c5634b41832b349059419561d31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Correct usage of default function arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6正确使用默认函数参数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e28ef338073d175f81ae333969b6b48da0fce611" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Dilate intensity &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6膨胀强度&lt;strong&gt;Imagick :: morphology（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="efafc37717f897d9e97e08d2162d0b9c02fcf637" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Interaction between the &lt;a href=&quot;language.exceptions#language.exceptions.finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; block and &lt;a href=&quot;function.return&quot;&gt;&lt;code&gt;return&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6 &lt;a href=&quot;language.exceptions#language.exceptions.finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;块和&lt;a href=&quot;function.return&quot;&gt; &lt;code&gt;return&lt;/code&gt; &lt;/a&gt;之间的交互&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f98a5c805ce0b33a10965ca936e1256b3cc3e600" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 MVC class distinctions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6 MVC类的区别&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb2c57094b2bba6f09a02699472bb42abdf89bd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Multi catch exception handling&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6多重捕获异常处理&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46e29f7cc8dd7ee682928053a0220a8e99bf8784" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Nesting null coalescing operator&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6嵌套null合并运算符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="243cc841ac3215a532ab0464c70b8580b7a48cee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Nullable return type declaration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6可空的返回类型声明&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c52b520b5a5d21b2a874c9bc653a7b7d22d919d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Position specifier with other specifiers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6位置说明符和其他说明符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec5a6188482d2efc49c5299551a8ef57f20d2ab9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Qualified names&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6合格的名称&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9615c92ec4c7255a094632bd693395c010e7ca3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Returning an object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6返回一个对象&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2db1400a6033cfc52d55fcdd69a7f7e1a092c69b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Static variables with recursive functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6具有递归函数的静态变量&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="71feefed415e3c9fad1098ca295ac91a02952181" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Using &lt;a href=&quot;language.oop5.magic#object.debuginfo&quot;&gt;__debugInfo()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6使用&lt;a href=&quot;language.oop5.magic#object.debuginfo&quot;&gt;__debugInfo（）&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0828f6a370b8c979ecd3d1913a881f22598f0584" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Using &lt;code&gt;instanceof&lt;/code&gt; to test other variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6使用 &lt;code&gt;instanceof&lt;/code&gt; 测试其他变量&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="79927a81ee16dcc05e98ee2925f5eebf3bb669bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Using &lt;em&gt;instanceof&lt;/em&gt; to test other variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6使用&lt;em&gt;instanceof&lt;/em&gt;测试其他变量&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc515c5815e245a05ce31de6cba359671ec8d80e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Using double quotes in Heredoc&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6在Heredoc中使用双引号&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0aff2abd07c9b64b8cbd9493d4897e353f1a4244" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Using non-scalar types as default values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6使用非标量类型作为默认值&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab06e8dc3bb60fbbe074366ecb31bfa817da38c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Using output buffering to include a PHP file into a string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6使用输出缓冲将PHP文件包含在字符串中&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c21a36872ca8d40a449daa1766d2b444c61579e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 createGradientImage is used by other examples. &lt;strong&gt;Imagick::sparseColorImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃6其他示例使用createGradientImage。&lt;strong&gt;imagick的:: sparseColorImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9ad6aea31ed180961c5cb2cd38b1a9825846666" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 &lt;a href=&quot;function.printf&quot;&gt;printf()&lt;/a&gt;: various examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃7 &lt;a href=&quot;function.printf&quot;&gt;printf（）&lt;/a&gt;：各种例子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dd1491a44507e731530d7d6059692eb92fb6c08c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 &lt;strong&gt;yield from&lt;/strong&gt; and return values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃7 &lt;strong&gt;从&lt;/strong&gt;和返回值产生&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="99394c085583adca22543b9054947dfa8bd2156a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Array dereferencing&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃7数组解引用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="90445a97aa1955beb151d99438016809636a5064" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Attempting to bind an object to a static anonymous function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃7尝试将对象绑定到静态匿名函数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="090159e08cbfb9988687a3a6673713eeb567c92d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Avoiding classname lookups and fatal errors with &lt;em&gt;instanceof&lt;/em&gt; in PHP 5.0&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃7 在PHP 5.0中使用&lt;em&gt;instanceof&lt;/em&gt;避免类名查找和致命错误&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="403c542e6ada7ec22a714b24f03a73d7b68cd7b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Basic class type declaration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃7基本类类型声明&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aebda1f57216ef4eec626f284b5bb29214fb7c6e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Declaring static variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃7声明静态变量&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f2d1df63a6268db7f0bad3631f6204275fed46a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Distance with Chebyshev kernel &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃7与Chebyshev内核&lt;strong&gt;Imagick :: morphology（）的&lt;/strong&gt;距离&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a1832fa241b8ae05185f08c91c2e84b64192269" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Incorrect usage of default function arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃7错误使用默认函数参数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="53f8fae0b9dbe0c9c4aaba7040ab9f5c8a852327" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 MVC loading example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃7 MVC加载示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="97b8978c7b2e0000529acb6206127cca5a74aed5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Nested Exception&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃7嵌套异常&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="00b6a779069ca46956997dd9b5386500cb8e4081" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Nowdoc string quoting example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃7 Nowdoc字符串引用示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0422d681d6f8f3949fa544294756addc255e76ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Old way to make arguments nullable&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃7使参数可为空的旧方法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b8468235df9dcc1eff2414026090532e5b23f412" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Property access vs. method call&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃7属性访问与方法调用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d95757040a1e1150f36bae445c2f60462728b0be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Traits Composed from Traits&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃7由特征构成的特征&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5e7b29e21f0e1ea7fc1b11bf269892f90e4ae5b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Unqualified class names&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃7不合格的类名&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f0c5b706fd8a2644178e1e1102930ebc18e9321d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Using &lt;code&gt;instanceof&lt;/code&gt; to test constants&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃7使用 &lt;code&gt;instanceof&lt;/code&gt; 测试常量&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5515b84edc59fecfb4212c95b00dd19d0b2f6258" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 &lt;a href=&quot;function.printf&quot;&gt;printf()&lt;/a&gt;: string specifiers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃8 &lt;a href=&quot;function.printf&quot;&gt;printf（）&lt;/a&gt;：字符串说明符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="34bd705f5a5f5d8b8c8e549afbb5dda55f3df715" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Basic interface type declaration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃8基本接口类型声明&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8c7a37bf108c8f9af20c9f9d187eec5ab0acbe35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Calling an anonymous function stored in a property&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃8调用存储在属性中的匿名函数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="92278a3d5584951d1247c70c8fd44b3701d8b7d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Correct usage of default function arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃8正确使用默认函数参数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="79182a32c0bce69a0ce59569625c283089cd847f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Distance with Manhattan kernel &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃8与曼哈顿内核&lt;strong&gt;Imagick :: morphology（）的&lt;/strong&gt;距离&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5855ce424e9422b1f2819acd2f23e44bd335d6cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Express Requirements by Abstract Methods&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃8通过抽象方法表达要求&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8c7956bf5a62a8fe7ff70faf8f0b98539648f215" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Multi catch exception handling&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃8多重捕获异常处理&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8340a215cc2e3770fd95cbf7babb222cf71db594" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Nowdoc string quoting example with variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃8带有变量的Nowdoc字符串引用示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9cfb8a07bd2306236c1857a1019fbce8c95edd95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Static data example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃8静态数据示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a1550995f3b17c96ecf70897ca045d3d7bf97e36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Strict typing for arguments values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃8严格键入参数值&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a24fba9290c7f14ebb68e0b13b934cf33c37f5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Unqualified function or constant names&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃8不合格的函数或常量名&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a50cc80720e13918d640a63e104bd60906eabac6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Using array()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃8使用array（）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="afcc6b4ad2ba1da1226628b2c9d27c56e8597556" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 &lt;strong&gt;sprintf()&lt;/strong&gt;: zero-padded integers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃9 &lt;strong&gt;sprintf（）&lt;/strong&gt;：零填充的整数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c6a6c7a3fc7d833f21bbe74358adeec686afe2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Coercive typing for argument values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃9强制输入参数值&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f0b1f85a420944d026810d6c7a61ed5031d0081" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Collection&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃9集合&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4211ccf8af0e61ba89b69bd408d3e42d4d6a08ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Dangers of using namespaced names inside a double-quoted string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃9在双引号字符串中使用命名空间名称的危险&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c6a51501f1c78aa43469389c6f9ac8ee3724e0e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Distance with ocatagonal kernel &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃9八角形内核&lt;strong&gt;Imagick :: morphology（）的&lt;/strong&gt;距离&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed7213ecea93113c76cab84258ac62fd14e3c4de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Nullable type declaration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃9可空类型声明&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="35557975b415bc222449c41ac2f68cfe139c2e34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Omitting the caught variable&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃9省略捕获的变量&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5ec84fcf7958245ea932f8e33b3a245a804142c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Simple Class Inheritance&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃9简单的类继承&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7e557fdcd81c4b47fff7a1da928cad0dab4e97b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Simple syntax example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃9简单的语法示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="edc3e5200eaf9dd5c6b166574e8f7fd03555fbef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Static Variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃9静态变量&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="02511a5c40365335b9bcb9ff9dd230daa78d5863" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Static data example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃9静态数据示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="31bb4c529547f0cb62c6a618c17e44a98e50b4e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Using &lt;code&gt;...&lt;/code&gt; to access variable arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example＃9使用 &lt;code&gt;...&lt;/code&gt; 访问变量参数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ea0b19bcbb6f9ede718d873e272f8daf1ba19a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Exception&lt;/strong&gt; is the base class for all Exceptions in PHP 5, and the base class for all user exceptions in PHP 7.</source>
          <target state="translated">&lt;strong&gt;Exception&lt;/strong&gt;是PHP 5中所有Exception的基类，也是PHP 7中所有用户异常的基类。</target>
        </trans-unit>
        <trans-unit id="92fa2c62376abfcd1e855927f00517f22cad4b8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Exception&lt;/strong&gt; is the base class for all user exceptions.</source>
          <target state="translated">&lt;strong&gt;异常&lt;/strong&gt;是所有用户异常的基类。</target>
        </trans-unit>
        <trans-unit id="074052f1b11c47ef8e47dd6b3d480afa2c8e3a8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Exception&lt;/strong&gt;implements&lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;异常&lt;/strong&gt;实现&lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="155669af023af4d3cc9cb683b6f5f12d97482b41" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;FilesystemIterator&lt;/strong&gt;extends&lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt;implements &lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;FilesystemIterator&lt;/strong&gt;扩展&lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt;实现&lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="cdb06c463f0b3b379522777b911659b70d1ae7b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;FilterIterator::next()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;FilterIterator::next()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ffc37d7c4c67a04b62d8eddd8dc145e3e7e9f1e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Flag values for msg_receive&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;msg_receive的标志值&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c5a469b069576719263d1623bae51f40134828bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Flags&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Flags&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb6b27376c897c93ca34ef6983c56f013ef7da89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Font file format&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;字体文件格式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9209ce4d4c2ff032fcad9856308fac5dee95ca35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Full &lt;strong&gt;ob_get_status()&lt;/strong&gt; results&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;完整的&lt;strong&gt;ob_get_status（）&lt;/strong&gt;结果&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f205a702d05a13d9db682eb9ee34aeae7a1b8e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GMP&lt;/strong&gt;implements &lt;a href=&quot;class.serializable&quot;&gt;Serializable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;GMP&lt;/strong&gt;实现了&lt;a href=&quot;class.serializable&quot;&gt;Serializable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="2dfdda9f2f26bb785e1cf5acdbfbb667e449ea73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GearmanClient&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;GearmanClient&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="cdb33891580a267ced868c6c2ee34f852fcc4cda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GearmanException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;GearmanException&lt;/strong&gt;扩展了&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="517f2617ef9de7d145991ab7b7c845e4771168b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GearmanJob&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;GearmanJob&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="6bb1178f49fc6343e9890b859ee3ace41577837f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GearmanTask&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;GearmanTask&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="54f6ec39d5a22b3853f36f85c77ed88e58f1eb8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GearmanWorker&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;GearmanWorker&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="15df518f2dfb6ba6c76960853c08a385ce5f3624" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Generator&lt;/strong&gt; objects are returned from &lt;a href=&quot;https://secure.php.net/manual/en/language.generators.php&quot;&gt;generators&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;生成器&lt;/strong&gt;对象从&lt;a href=&quot;https://secure.php.net/manual/en/language.generators.php&quot;&gt;generators&lt;/a&gt;返回。</target>
        </trans-unit>
        <trans-unit id="43d4faa1d8571c4591d8b785ceb08a95f1e929c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Generator&lt;/strong&gt; objects are returned from &lt;a href=&quot;https://www.php.net/manual/en/language.generators.php&quot;&gt;generators&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;生成器&lt;/strong&gt;对象是从&lt;a href=&quot;https://www.php.net/manual/en/language.generators.php&quot;&gt;generators&lt;/a&gt;返回的。</target>
        </trans-unit>
        <trans-unit id="4c861016f30528079ecde02c3de71e2253f4323a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Generator&lt;/strong&gt; objects cannot be instantiated via &lt;a href=&quot;language.oop5.basic#language.oop5.basic.new&quot;&gt;new&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;生成器&lt;/strong&gt;对象不能通过&lt;a href=&quot;language.oop5.basic#language.oop5.basic.new&quot;&gt;new&lt;/a&gt;实例化。</target>
        </trans-unit>
        <trans-unit id="de2e67f561886b0f7669c582ae6a57e7e178b228" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Generator&lt;/strong&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;生成器&lt;/strong&gt;实现&lt;a href=&quot;class.iterator&quot;&gt;迭代器&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="045a2f72332d73007ff5e2dfed83199aa6e9792d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GlobIterator&lt;/strong&gt;extends&lt;a href=&quot;class.filesystemiterator&quot;&gt;FilesystemIterator&lt;/a&gt;implements &lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;GlobIterator&lt;/strong&gt;扩展了&lt;a href=&quot;class.filesystemiterator&quot;&gt;FilesystemIterator&lt;/a&gt;实现&lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator&lt;/a&gt;，&lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="84e2d5ec32dc4c4cc6c6f47164d7fe485aec50b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Gmagick&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;麦吉克&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="b4b2c79b313138c65e50a096b297cc3a154328b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GmagickDraw&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;GmagickDraw&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="14e5f24aef87434a62d06278ba85633f49a77bfb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GmagickPixel&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;GmagickPixel&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="943111d3f54d409d1300f0283cdf5065f1b37275" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HashContext&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;HashContext&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="e7e8224490730b998781aa7179599d6bb5424985" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Highlighting options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;突出显示选项&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="636da423c5d7f0a4c4b5e54218f45b657006e172" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Imagetype Constants&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;图像类型常量&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="288b92ac47cf2adbeb07368f1c8ca8668eb9f62f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Imagick::setResolution()&lt;/strong&gt; must be called before loading or creating an image.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;必须在加载或创建图像之前调用&lt;strong&gt;imagick :: setResolution（）&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="873cb38b04a4738ea3c6f610d83bbf931d64bfdf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Imagick&lt;/strong&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Imagick&lt;/strong&gt;实现了&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="d276d5787e737cef49bee07348d73da54ce878b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ImagickDraw&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ImagickDraw&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="928db3cc3d702a3f6c6169f5c53b3de190b0bf66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ImagickKernel&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ImagickKernel&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="df5b2cc17ddf5780bdb88d3e2e4e2922bebbc00c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ImagickPixel&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ImagickPixel&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="d76584fcd098276242c8ea96ef9f79a64d001adf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ImagickPixelIterator&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ImagickPixelIterator&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="4ee5512c4fa24de1458aebddbfc0b168699f266a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Increment/decrement Operators&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;增/减运算符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28225585302f759fa89e3f9ff3ea2390d61167d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;InfiniteIterator&lt;/strong&gt;extends&lt;a href=&quot;class.iteratoriterator&quot;&gt;IteratorIterator&lt;/a&gt;implements &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;InfiniteIterator&lt;/strong&gt;扩展了&lt;a href=&quot;class.iteratoriterator&quot;&gt;IteratorIterator，&lt;/a&gt;实现了&lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="0410699deeb126b300516366c901258df1960596" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Internal option letters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;内部期权函&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c7bb76b68d3abcd73f6356076cda916675c0af57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlBreakIterator&lt;/strong&gt;implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlBreakIterator&lt;/strong&gt;实现了&lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="86d80dff3e9d7ccdcf801bacef261dace0f7318b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlCalendar&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;国际日历&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="f0ecd5d4d54dfc992bf2e7f1c7ca43d0a0e0f74a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlCodePointBreakIterator&lt;/strong&gt;extends&lt;a href=&quot;class.intlbreakiterator&quot;&gt;IntlBreakIterator&lt;/a&gt;implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlCodePointBreakIterator&lt;/strong&gt;扩展了&lt;a href=&quot;class.intlbreakiterator&quot;&gt;IntlBreakIterator&lt;/a&gt;实现&lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="264ab4f2aab50dbd2ff9828d415202f7549e1ae7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlDateFormatter&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlDateFormatter&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="82d1ac3b1654ea499dece3565ce3b9259d80ce37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlException&lt;/strong&gt;扩展了&lt;a href=&quot;class.exception&quot;&gt;异常&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="04ead559cbc117a4132280e1d25284667d6007d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlGregorianCalendar&lt;/strong&gt;extends&lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlGregorianCalendar&lt;/strong&gt;扩展了&lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="4543aedf00f06eccb9baff5f51ae83d1df9c452e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlIterator&lt;/strong&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlIterator&lt;/strong&gt;实现了&lt;a href=&quot;class.iterator&quot;&gt;迭代器&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="d9182241f8e98f2c648dd214af2c4c997050a124" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlPartsIterator&lt;/strong&gt;extends&lt;a href=&quot;class.intliterator&quot;&gt;IntlIterator&lt;/a&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlPartsIterator&lt;/strong&gt;扩展了&lt;a href=&quot;class.intliterator&quot;&gt;IntlIterator&lt;/a&gt;实现&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="5d2cb2ee647e65ecdf85da022023c56f724538aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlRuleBasedBreakIterator&lt;/strong&gt;extends&lt;a href=&quot;class.intlbreakiterator&quot;&gt;IntlBreakIterator&lt;/a&gt;implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlRuleBasedBreakIterator&lt;/strong&gt;扩展了&lt;a href=&quot;class.intlbreakiterator&quot;&gt;IntlBreakIterator&lt;/a&gt;实现的&lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="1bc9f9cd084e7a50d26d319b3c1bda899d6ccc8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlTimeZone&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlTimeZone&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="e07ad0983a5305528572d092f59764daa20d5116" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;InvalidArgumentException&lt;/strong&gt;extends&lt;a href=&quot;class.logicexception&quot;&gt;LogicException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;InvalidArgumentException&lt;/strong&gt;扩展了&lt;a href=&quot;class.logicexception&quot;&gt;LogicException&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="4bde7189e2003f31609f50a4266210576d89f9be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Iterator&lt;/strong&gt;extends&lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;迭代器&lt;/strong&gt;扩展了&lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="ed47866cc44690b1d2626d173d29915ffaee3980" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IteratorAggregate&lt;/strong&gt;extends&lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IteratorAggregate&lt;/strong&gt;扩展了&lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="2a135087bbf4e9225031d3af7aff017a436ae575" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IteratorIterator&lt;/strong&gt;implements &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IteratorIterator&lt;/strong&gt;实现&lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="cdad00ebe62d3dfa08521a41b2230a0628710a87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSON error codes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;JSON错误代码&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="369dd485888a1550b64385b8b5a2f8ee727c5b9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JsonException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;JsonException&lt;/strong&gt;扩展了&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="e240ee797ed7ca4f096fc2c0c76d372b7194f874" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JsonSerializable&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;JsonSerializable&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="7c66397042069afb75e7e36521641ffc2f671b75" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Judy&lt;/strong&gt;implements &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;, &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Judy&lt;/strong&gt;实现&lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;，&lt;a href=&quot;class.iterator&quot;&gt;迭代器&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="b0476eeefd1ed88636b06aadae8ce7df5e307641" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Key elements of the returned associative array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;返回的关联数组的关键元素&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b84385fcb02705ee02202cabc8d8ff66e870ebd4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Known errors that point to &lt;strong&gt;main()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;指向&lt;strong&gt;main（）的&lt;/strong&gt;已知错误&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="43dfe536a5714631d59e59169b3495db46ee1658" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LONGVARBINARY handling&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;LONGVARBINARY处理&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a1b8eac3e23e1dc5502ce7b32e7a4113ba750399" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LengthException&lt;/strong&gt;extends&lt;a href=&quot;class.logicexception&quot;&gt;LogicException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;LengthException&lt;/strong&gt;扩展了&lt;a href=&quot;class.logicexception&quot;&gt;LogicException&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="45536f9531348b0322ccd5ccc2e37486c21cfe5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LimitIterator&lt;/strong&gt;extends&lt;a href=&quot;class.iteratoriterator&quot;&gt;IteratorIterator&lt;/a&gt;implements &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;LimitIterator&lt;/strong&gt;扩展了&lt;a href=&quot;class.iteratoriterator&quot;&gt;IteratorIterator&lt;/a&gt;实现的&lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="8e0fb7baab55e44af1dc535be1fa3ed15c55b1e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;List of action codes and parameters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;动作代码和参数清单&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c0d3f3e572c8d3c2a8781caa5671f4849d06863a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;List of possible limits returned&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;返回的可能限制列表&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7206c8725d19cd1f3979008fc0672939aede3e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Locale&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;语言环境&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="4b99ff2fc25071ff2ede90da3a9146a51920a253" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LogicException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;LogicException&lt;/strong&gt;扩展了&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="240824b16d094a97c00269c3f31353b4da023b8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Logical Operators&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;逻辑运算符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="763f7df9acb231b880b15b0f769fea9bf70b5561" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Lua&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;卢阿&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="b7a858251b1fe131e7c6d586c422eff439744651" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LuaClosure&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;LuaClosure&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="2e59d6a27db549a4ea2b8085164731acf543c4ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mailbox properties&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;邮箱属性&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="86e6108738973b6ccb7d1abb97adcf3a566db3df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Match modes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;比赛模式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d184751a113de21c637db849e8da265feb8bf351" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::add()&lt;/strong&gt; is similar to &lt;a href=&quot;memcached.set&quot;&gt;Memcached::set()&lt;/a&gt;, but the operation fails if the &lt;code&gt;key&lt;/code&gt; already exists on the server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: add（）&lt;/strong&gt;与&lt;a href=&quot;memcached.set&quot;&gt;Memcached :: set（）&lt;/a&gt;类似，但是如果 &lt;code&gt;key&lt;/code&gt; 已在服务器上存在，则操作将失败。</target>
        </trans-unit>
        <trans-unit id="42d6af1f3bab5f4e54b3b1247eabd9a80fbdff2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::addByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.add&quot;&gt;Memcached::add()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server. This is useful if you need to keep a bunch of related keys on a certain server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: addByKey（）&lt;/strong&gt;在功能上等同于&lt;a href=&quot;memcached.add&quot;&gt;Memcached :: add（）&lt;/a&gt;，只是自由格式的 &lt;code&gt;server_key&lt;/code&gt; 可用于将 &lt;code&gt;key&lt;/code&gt; 映射到特定服务器。如果您需要在特定服务器上保留一堆相关密钥，这将很有用。</target>
        </trans-unit>
        <trans-unit id="7e6994cb7e36be4d5840744fe569d1b834705673" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::addServer()&lt;/strong&gt; adds the specified server to the server pool. No connection is established to the server at this time, but if you are using consistent key distribution option (via &lt;strong&gt;&lt;code&gt;Memcached::DISTRIBUTION_CONSISTENT&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;Memcached::OPT_LIBKETAMA_COMPATIBLE&lt;/code&gt;&lt;/strong&gt;), some of the internal data structures will have to be updated. Thus, if you need to add multiple servers, it is better to use &lt;a href=&quot;memcached.addservers&quot;&gt;Memcached::addServers()&lt;/a&gt; as the update then happens only once.</source>
          <target state="translated">&lt;strong&gt;Memcached :: addServer（）&lt;/strong&gt;将指定的服务器添加到服务器池中。目前没有建立与服务器的连接，但是如果您使用一致的密钥分发选项（通过&lt;strong&gt; &lt;code&gt;Memcached::DISTRIBUTION_CONSISTENT&lt;/code&gt; &lt;/strong&gt;或&lt;strong&gt; &lt;code&gt;Memcached::OPT_LIBKETAMA_COMPATIBLE&lt;/code&gt; &lt;/strong&gt;），则必须更新一些内部数据结构。因此，如果需要添加多个服务器，最好使用&lt;a href=&quot;memcached.addservers&quot;&gt;Memcached :: addServers（），&lt;/a&gt;因为更新仅发生一次。</target>
        </trans-unit>
        <trans-unit id="0396d56c46871de589937b68228131be7078d0b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::addServers()&lt;/strong&gt; adds &lt;code&gt;servers&lt;/code&gt; to the server pool. Each entry in &lt;code&gt;servers&lt;/code&gt; is supposed to be an array containing hostname, port, and, optionally, weight of the server. No connection is established to the servers at this time.</source>
          <target state="translated">&lt;strong&gt;Memcached :: addServers（）&lt;/strong&gt;将 &lt;code&gt;servers&lt;/code&gt; 添加到服务器池中。 &lt;code&gt;servers&lt;/code&gt; 每个条目都应该是一个包含主机名，端口和服务器重量的数组。目前未建立与服务器的连接。</target>
        </trans-unit>
        <trans-unit id="44004bda011a5148264cff66531d872e84dba2fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::append()&lt;/strong&gt; appends the given &lt;code&gt;value&lt;/code&gt; string to the value of an existing item. The reason that &lt;code&gt;value&lt;/code&gt; is forced to be a string is that appending mixed types is not well-defined.</source>
          <target state="translated">&lt;strong&gt;Memcached :: append（）&lt;/strong&gt;将给定的 &lt;code&gt;value&lt;/code&gt; 字符串附加到现有项目的值。将 &lt;code&gt;value&lt;/code&gt; 强制为字符串的原因是附加混合类型的定义不明确。</target>
        </trans-unit>
        <trans-unit id="807f6adedf615d7dd83e761a3064419ed391ae44" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::appendByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.append&quot;&gt;Memcached::append()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: appendByKey（）&lt;/strong&gt;在功能上等同于&lt;a href=&quot;memcached.append&quot;&gt;Memcached :: append（）&lt;/a&gt;，但自由格式的 &lt;code&gt;server_key&lt;/code&gt; 可用于将 &lt;code&gt;key&lt;/code&gt; 映射到特定服务器。</target>
        </trans-unit>
        <trans-unit id="cb91a045c1f600e9365cb7d66db74011c780ad0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::cas()&lt;/strong&gt; performs a &quot;check and set&quot; operation, so that the item will be stored only if no other client has updated it since it was last fetched by this client. The check is done via the &lt;code&gt;cas_token&lt;/code&gt; parameter which is a unique 64-bit value assigned to the existing item by memcache. See the documentation for &lt;strong&gt;Memcached::get*()&lt;/strong&gt; methods for how to obtain this token. Note that the token is represented as a double due to the limitations of PHP's integer space.</source>
          <target state="translated">&lt;strong&gt;Memcached :: cas（）&lt;/strong&gt;执行&amp;ldquo;检查并设置&amp;rdquo;操作，以便仅在自该客户端上次获取该项目以来没有其他客户端对其进行更新的情况下，才存储该项目。通过 &lt;code&gt;cas_token&lt;/code&gt; 参数完成检查，该参数是memcache分配给现有项的唯一64位值。有关如何获取此令牌的信息，请参见&lt;strong&gt;Memcached :: get *（）&lt;/strong&gt;方法的文档。请注意，由于PHP整数空间的限制，令牌被表示为双精度。</target>
        </trans-unit>
        <trans-unit id="9512c4c172c3f9e57a5f8170994dba6265ab1d4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::casByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.cas&quot;&gt;Memcached::cas()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server. This is useful if you need to keep a bunch of related keys on a certain server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: casByKey（）&lt;/strong&gt;在功能上等同于&lt;a href=&quot;memcached.cas&quot;&gt;Memcached :: cas（）&lt;/a&gt;，但自由格式的 &lt;code&gt;server_key&lt;/code&gt; 可用于将 &lt;code&gt;key&lt;/code&gt; 映射到特定服务器。如果您需要在特定服务器上保留一堆相关密钥，这将很有用。</target>
        </trans-unit>
        <trans-unit id="5980debd160c4d456f91c3d5138710f2af668179" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::decrement()&lt;/strong&gt; decrements a numeric item's value by the specified &lt;code&gt;offset&lt;/code&gt;. If the item's value is not numeric, an error will result. If the operation would decrease the value below 0, the new value will be 0. &lt;strong&gt;Memcached::decrement()&lt;/strong&gt; will set the item to the &lt;code&gt;initial_value&lt;/code&gt; parameter if the key doesn't exist.</source>
          <target state="translated">&lt;strong&gt;Memcached :: decrement（）&lt;/strong&gt;将数字项目的值减少指定的 &lt;code&gt;offset&lt;/code&gt; 。如果项目的值不是数字，则将导致错误。如果该操作会将值减小到0以下，则新值将为0。如果键不存在，则&lt;strong&gt;Memcached :: decrement（）&lt;/strong&gt;会将该项设置为 &lt;code&gt;initial_value&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="07adef0227b3f3fa98510c982447e5968f8ab4b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::decrementByKey()&lt;/strong&gt; decrements a numeric item's value by the specified &lt;code&gt;offset&lt;/code&gt;. If the item's value is not numeric, an error will result. If the operation would decrease the value below 0, the new value will be 0. &lt;strong&gt;Memcached::decrementByKey()&lt;/strong&gt; will set the item to the &lt;code&gt;initial_value&lt;/code&gt; parameter if the key doesn't exist.</source>
          <target state="translated">&lt;strong&gt;Memcached :: decrementByKey（）&lt;/strong&gt;将数字项目的值减少指定的 &lt;code&gt;offset&lt;/code&gt; 。如果项目的值不是数字，则将导致错误。如果该操作会将值减小到0以下，则新值将为0。如果键不存在，则&lt;strong&gt;Memcached :: decrementByKey（）&lt;/strong&gt;会将该项设置为 &lt;code&gt;initial_value&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="b2d42315b57ae492cf2b3d71831eb9ed17ae6ff8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::delete()&lt;/strong&gt; deletes the &lt;code&gt;key&lt;/code&gt; from the server. The &lt;code&gt;time&lt;/code&gt; parameter is the amount of time in seconds (or Unix time until which) the client wishes the server to refuse &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;replace&lt;/code&gt; commands for this key. For this amount of time, the item is put into a delete queue, which means that it won't possible to retrieve it by the &lt;code&gt;get&lt;/code&gt; command, but &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;replace&lt;/code&gt; command with this key will also fail (the &lt;code&gt;set&lt;/code&gt; command will succeed, however). After the time passes, the item is finally deleted from server memory. The parameter &lt;code&gt;time&lt;/code&gt; defaults to 0 (which means that the item will be deleted immediately and further storage commands with this key will succeed).</source>
          <target state="translated">&lt;strong&gt;Memcached :: delete（）&lt;/strong&gt;从服务器删除 &lt;code&gt;key&lt;/code&gt; 。该 &lt;code&gt;time&lt;/code&gt; 参数为时间，以秒（或Unix时间直到它）客户端希望服务器垃圾的量 &lt;code&gt;add&lt;/code&gt; 和 &lt;code&gt;replace&lt;/code&gt; 该键的命令。在这段时间内，该项目将放入删除队列中，这意味着将无法通过 &lt;code&gt;get&lt;/code&gt; 命令来检索它，但是使用此键 &lt;code&gt;add&lt;/code&gt; 和 &lt;code&gt;replace&lt;/code&gt; 命令也将失败（但是 &lt;code&gt;set&lt;/code&gt; 命令将成功，但是）。时间过后，该项目最终从服务器内存中删除。参数 &lt;code&gt;time&lt;/code&gt; 默认为0（这意味着该项目将被立即删除，并且使用该键的其他存储命令将成功执行）。</target>
        </trans-unit>
        <trans-unit id="66c41426fbd8918858dbe60647ec9f9959e408f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::delete()&lt;/strong&gt; deletes the &lt;code&gt;key&lt;/code&gt; from the server. The &lt;code&gt;time&lt;/code&gt; parameter is the amount of time in seconds (or Unix time until which) the client wishes the server to refuse &lt;em&gt;add&lt;/em&gt; and &lt;em&gt;replace&lt;/em&gt; commands for this key. For this amount of time, the item is put into a delete queue, which means that it won't possible to retrieve it by the &lt;em&gt;get&lt;/em&gt; command, but &lt;em&gt;add&lt;/em&gt; and &lt;em&gt;replace&lt;/em&gt; command with this key will also fail (the &lt;em&gt;set&lt;/em&gt; command will succeed, however). After the time passes, the item is finally deleted from server memory. The parameter &lt;code&gt;time&lt;/code&gt; defaults to 0 (which means that the item will be deleted immediately and further storage commands with this key will succeed).</source>
          <target state="translated">&lt;strong&gt;Memcached :: delete（）&lt;/strong&gt;从服务器删除 &lt;code&gt;key&lt;/code&gt; 。该 &lt;code&gt;time&lt;/code&gt; 参数为时间，以秒（或Unix时间直到它）客户端希望服务器垃圾的量&lt;em&gt;添加&lt;/em&gt;和&lt;em&gt;替换&lt;/em&gt;该键的命令。在这段时间内，该项目将放入删除队列中，这意味着将无法通过&lt;em&gt;get&lt;/em&gt;命令来检索它，但是使用此键&lt;em&gt;添加&lt;/em&gt;和&lt;em&gt;替换&lt;/em&gt;命令也将失败（但是&lt;em&gt;set&lt;/em&gt;命令将成功，但是）。时间过后，该项目最终从服务器内存中删除。参数 &lt;code&gt;time&lt;/code&gt; 默认为0（这意味着将立即删除该项目，并且使用该键的其他存储命令将成功执行）。</target>
        </trans-unit>
        <trans-unit id="08a41a3b238ec5c02be1d88977d2515d8dc2602e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::deleteByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.delete&quot;&gt;Memcached::delete()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: deleteByKey（）&lt;/strong&gt;在功能上等同于&lt;a href=&quot;memcached.delete&quot;&gt;Memcached :: delete（）&lt;/a&gt;，但自由格式的 &lt;code&gt;server_key&lt;/code&gt; 可用于将 &lt;code&gt;key&lt;/code&gt; 映射到特定服务器。</target>
        </trans-unit>
        <trans-unit id="36fb0faed46c95a05298f5db2f95660aac1812e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::deleteMulti()&lt;/strong&gt; deletes the array of &lt;code&gt;keys&lt;/code&gt; from the server. The &lt;code&gt;time&lt;/code&gt; parameter is the amount of time in seconds (or Unix time until which) the client wishes the server to refuse &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;replace&lt;/code&gt; commands for these keys. For this amount of time, the item is put into a delete queue, which means that it won't be possible to retrieve it by the &lt;code&gt;get&lt;/code&gt; command, but &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;replace&lt;/code&gt; command with these keys will also fail (the &lt;code&gt;set&lt;/code&gt; command will succeed, however). After the time passes, the item is finally deleted from server memory. The parameter &lt;code&gt;time&lt;/code&gt; defaults to 0 (which means that the item will be deleted immediately and further storage commands with these keys will succeed).</source>
          <target state="translated">&lt;strong&gt;Memcached :: deleteMulti（）&lt;/strong&gt;从服务器删除 &lt;code&gt;keys&lt;/code&gt; 数组。该 &lt;code&gt;time&lt;/code&gt; 参数为时间，以秒（或Unix时间直到它）客户端希望服务器垃圾的量 &lt;code&gt;add&lt;/code&gt; 和 &lt;code&gt;replace&lt;/code&gt; 对这些键的命令。在这段时间内，该项目将被放入删除队列，这意味着将无法通过 &lt;code&gt;get&lt;/code&gt; 命令来检索它，但是使用这些键 &lt;code&gt;add&lt;/code&gt; 和 &lt;code&gt;replace&lt;/code&gt; 命令也将失败（ &lt;code&gt;set&lt;/code&gt; 命令将成功，然而）。时间过后，该项目最终从服务器内存中删除。参数 &lt;code&gt;time&lt;/code&gt; 默认为0（这意味着将立即删除该项目，并且使用这些键的其他存储命令将成功执行）。</target>
        </trans-unit>
        <trans-unit id="1e65c5453200d81c7447d14919b0481ffd918494" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::deleteMulti()&lt;/strong&gt; deletes the array of &lt;code&gt;keys&lt;/code&gt; from the server. The &lt;code&gt;time&lt;/code&gt; parameter is the amount of time in seconds (or Unix time until which) the client wishes the server to refuse &lt;em&gt;add&lt;/em&gt; and &lt;em&gt;replace&lt;/em&gt; commands for these keys. For this amount of time, the item is put into a delete queue, which means that it won't be possible to retrieve it by the &lt;em&gt;get&lt;/em&gt; command, but &lt;em&gt;add&lt;/em&gt; and &lt;em&gt;replace&lt;/em&gt; command with these keys will also fail (the &lt;em&gt;set&lt;/em&gt; command will succeed, however). After the time passes, the item is finally deleted from server memory. The parameter &lt;code&gt;time&lt;/code&gt; defaults to 0 (which means that the item will be deleted immediately and further storage commands with these keys will succeed).</source>
          <target state="translated">&lt;strong&gt;Memcached :: deleteMulti（）&lt;/strong&gt;从服务器删除 &lt;code&gt;keys&lt;/code&gt; 数组。该 &lt;code&gt;time&lt;/code&gt; 参数为时间，以秒（或Unix时间直到它）客户端希望服务器垃圾的量&lt;em&gt;添加&lt;/em&gt;和&lt;em&gt;替换&lt;/em&gt;对这些键的命令。在这段时间内，该项目将被放入删除队列，这意味着将无法通过&lt;em&gt;get&lt;/em&gt;命令来检索它，但是使用这些键&lt;em&gt;添加&lt;/em&gt;和&lt;em&gt;替换&lt;/em&gt;命令也会失败（&lt;em&gt;set&lt;/em&gt;命令将成功，然而）。时间过后，该项目最终从服务器内存中删除。参数 &lt;code&gt;time&lt;/code&gt; 默认为0（这意味着将立即删除该项目，并且使用这些键的其他存储命令将成功执行）。</target>
        </trans-unit>
        <trans-unit id="be46b99cb8671d669f4b231c7ce72548544f6382" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::deleteMultiByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.deletemulti&quot;&gt;Memcached::deleteMulti()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;keys&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: deleteMultiByKey（）&lt;/strong&gt;在功能上等同于&lt;a href=&quot;memcached.deletemulti&quot;&gt;Memcached :: deleteMulti（）&lt;/a&gt;，但自由格式的 &lt;code&gt;server_key&lt;/code&gt; 可用于将 &lt;code&gt;keys&lt;/code&gt; 映射到特定服务器。</target>
        </trans-unit>
        <trans-unit id="fddbbec7cfddae4d996f4e4cf9c4c864234e204c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::fetch()&lt;/strong&gt; retrieves the next result from the last request.</source>
          <target state="translated">&lt;strong&gt;Memcached :: fetch（）&lt;/strong&gt;从上一个请求中检索下一个结果。</target>
        </trans-unit>
        <trans-unit id="27a7ff1f95c302e06bf48018735fa36c286abb97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::fetchAll()&lt;/strong&gt; retrieves all the remaining results from the last request.</source>
          <target state="translated">&lt;strong&gt;Memcached :: fetchAll（）&lt;/strong&gt;从上一个请求中检索所有剩余的结果。</target>
        </trans-unit>
        <trans-unit id="6879f9e4d7dd9e0358e6b5e0618e645a4260cf9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::flush()&lt;/strong&gt; invalidates all existing cache items immediately (by default) or after the &lt;code&gt;delay&lt;/code&gt; specified. After invalidation none of the items will be returned in response to a retrieval command (unless it's stored again under the same key after &lt;strong&gt;Memcached::flush()&lt;/strong&gt; has invalidated the items). The flush does not actually free all the memory taken up by the existing items; that will happen gradually as new items are stored.</source>
          <target state="translated">&lt;strong&gt;Memcached :: flush（）&lt;/strong&gt;立即（默认）或在指定的 &lt;code&gt;delay&lt;/code&gt; 后使所有现有缓存项无效。无效后，不会响应检索命令返回任何项目（除非在&lt;strong&gt;Memcached :: flush（）&lt;/strong&gt;使项目无效之后，将其再次存储在同一键下）。刷新实际上不会释放现有项目占用的所有内存；随着新项目的存储，这种情况将逐渐发生。</target>
        </trans-unit>
        <trans-unit id="c89f7156c52ee5d3ef7c5b59e23a78beba830b85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::get()&lt;/strong&gt; returns the item that was previously stored under the &lt;code&gt;key&lt;/code&gt;. If the item is found and the &lt;code&gt;flags&lt;/code&gt; is given &lt;strong&gt;&lt;code&gt;Memcached::GET_EXTENDED&lt;/code&gt;&lt;/strong&gt;, it will also return the CAS token value for the item. See &lt;a href=&quot;memcached.cas&quot;&gt;Memcached::cas()&lt;/a&gt; for how to use CAS tokens. &lt;a href=&quot;https://secure.php.net/manual/en/memcached.callbacks.php&quot;&gt;Read-through caching callback&lt;/a&gt; may be specified via &lt;code&gt;cache_cb&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;strong&gt;Memcached :: get（）&lt;/strong&gt;返回先前存储在 &lt;code&gt;key&lt;/code&gt; 下的项目。如果找到了该项目，并且给了 &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt; &lt;code&gt;Memcached::GET_EXTENDED&lt;/code&gt; &lt;/strong&gt;，它还将返回该项目的CAS令牌值。有关如何使用CAS令牌的信息，请参见&lt;a href=&quot;memcached.cas&quot;&gt;Memcached :: cas（）&lt;/a&gt;。可以通过 &lt;code&gt;cache_cb&lt;/code&gt; 参数指定通读&lt;a href=&quot;https://secure.php.net/manual/en/memcached.callbacks.php&quot;&gt;缓存回调&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3ddfbefd8cfba05485a6abd7c5648c34dd804ab1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::get()&lt;/strong&gt; returns the item that was previously stored under the &lt;code&gt;key&lt;/code&gt;. If the item is found and the &lt;code&gt;flags&lt;/code&gt; is given &lt;strong&gt;&lt;code&gt;Memcached::GET_EXTENDED&lt;/code&gt;&lt;/strong&gt;, it will also return the CAS token value for the item. See &lt;a href=&quot;memcached.cas&quot;&gt;Memcached::cas()&lt;/a&gt; for how to use CAS tokens. &lt;a href=&quot;https://www.php.net/manual/en/memcached.callbacks.php&quot;&gt;Read-through caching callback&lt;/a&gt; may be specified via &lt;code&gt;cache_cb&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;strong&gt;Memcached :: get（）&lt;/strong&gt;返回先前存储在 &lt;code&gt;key&lt;/code&gt; 下的项目。如果找到该项目，并且为 &lt;code&gt;flags&lt;/code&gt; 赋予&lt;strong&gt; &lt;code&gt;Memcached::GET_EXTENDED&lt;/code&gt; &lt;/strong&gt;，则它还将返回该项目的CAS令牌值。有关如何使用CAS令牌的信息，请参见&lt;a href=&quot;memcached.cas&quot;&gt;Memcached :: cas（）&lt;/a&gt;。可以通过 &lt;code&gt;cache_cb&lt;/code&gt; 参数指定通读&lt;a href=&quot;https://www.php.net/manual/en/memcached.callbacks.php&quot;&gt;缓存回调&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9213d480760b5377462f1ff500a10200cb02d7e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getAllKeys()&lt;/strong&gt; queries each memcache server and retrieves an array of all keys stored on them at that point in time. This is not an atomic operation, so it isn't a truly consistent snapshot of the keys at point in time. As memcache doesn't guarantee to return all keys you also cannot assume that all keys have been returned.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getAllKeys（）&lt;/strong&gt;查询每个内存缓存服务器，并检索该时间点存储在其上的所有键的数组。这不是原子操作，因此不是时间点上键的真正一致快照。由于内存缓存不能保证返回所有键，因此您也不能假设所有键都已返回。</target>
        </trans-unit>
        <trans-unit id="58a1e0c4b5ac2a60e0946bd3a97dbcdc5fba12e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.get&quot;&gt;Memcached::get()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getByKey（）&lt;/strong&gt;在功能上等同于&lt;a href=&quot;memcached.get&quot;&gt;Memcached :: get（）&lt;/a&gt;，但自由格式的 &lt;code&gt;server_key&lt;/code&gt; 可用于将 &lt;code&gt;key&lt;/code&gt; 映射到特定服务器。</target>
        </trans-unit>
        <trans-unit id="1212ad36dc3e6bebe95c7480fe6d848258a363ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getDelayed()&lt;/strong&gt; issues a request to memcache for multiple items the keys of which are specified in the &lt;code&gt;keys&lt;/code&gt; array. The method does not wait for response and returns right away. When you are ready to collect the items, call either &lt;a href=&quot;memcached.fetch&quot;&gt;Memcached::fetch()&lt;/a&gt; or &lt;a href=&quot;memcached.fetchall&quot;&gt;Memcached::fetchAll()&lt;/a&gt;. If &lt;code&gt;with_cas&lt;/code&gt; is true, the CAS token values will also be requested.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getDelayed（）&lt;/strong&gt;向memcache请求多个项，这些项的键在 &lt;code&gt;keys&lt;/code&gt; 数组中指定。该方法不等待响应，而是立即返回。准备好收集项目时，请调用&lt;a href=&quot;memcached.fetch&quot;&gt;Memcached :: fetch（）&lt;/a&gt;或&lt;a href=&quot;memcached.fetchall&quot;&gt;Memcached :: fetchAll（）&lt;/a&gt;。如果 &lt;code&gt;with_cas&lt;/code&gt; 为true，则还将请求CAS令牌值。</target>
        </trans-unit>
        <trans-unit id="c505ccc443f88f3b6c591c99b28d961e2e3ff751" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getDelayedByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.getdelayed&quot;&gt;Memcached::getDelayed()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;keys&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getDelayedByKey（）&lt;/strong&gt;在功能上等同于&lt;a href=&quot;memcached.getdelayed&quot;&gt;Memcached :: getDelayed（）&lt;/a&gt;，但自由格式的 &lt;code&gt;server_key&lt;/code&gt; 可用于将 &lt;code&gt;keys&lt;/code&gt; 映射到特定服务器。</target>
        </trans-unit>
        <trans-unit id="01e7d15f8826cd9fdeae49598315962659df727d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getMulti()&lt;/strong&gt; is similar to &lt;a href=&quot;memcached.get&quot;&gt;Memcached::get()&lt;/a&gt;, but instead of a single key item, it retrieves multiple items the keys of which are specified in the &lt;code&gt;keys&lt;/code&gt; array.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getMulti（）&lt;/strong&gt;与&lt;a href=&quot;memcached.get&quot;&gt;Memcached :: get（）&lt;/a&gt;类似，但它代替单个键项，而是检索在 &lt;code&gt;keys&lt;/code&gt; 数组中指定了键的多个项。</target>
        </trans-unit>
        <trans-unit id="df3adf0d3ea5de9786eb06bb3427044f0e4bded8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getMultiByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.getmulti&quot;&gt;Memcached::getMulti()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;keys&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getMultiByKey（）&lt;/strong&gt;在功能上等同于&lt;a href=&quot;memcached.getmulti&quot;&gt;Memcached :: getMulti（）&lt;/a&gt;，但自由格式的 &lt;code&gt;server_key&lt;/code&gt; 可用于将 &lt;code&gt;keys&lt;/code&gt; 映射到特定服务器。</target>
        </trans-unit>
        <trans-unit id="40b24476d57c18e234198c85b4497dca0f35b1d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getOption()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Memcached::getOption()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dab7f9eaad5612ba67fd2daab249dde562a79f8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getResultCode()&lt;/strong&gt; returns one of the &lt;strong&gt;&lt;code&gt;Memcached::RES_*&lt;/code&gt;&lt;/strong&gt; constants that is the result of the last executed Memcached method.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getResultCode（）&lt;/strong&gt;返回&lt;strong&gt; &lt;code&gt;Memcached::RES_*&lt;/code&gt; &lt;/strong&gt;常量之一，该常量是最后执行的Memcached方法的结果。</target>
        </trans-unit>
        <trans-unit id="7c5dc8362db8aa55f80601eb9b3e908626c29037" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getResultMessage()&lt;/strong&gt; returns a string that describes the result code of the last executed Memcached method.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getResultMessage（）&lt;/strong&gt;返回一个字符串，该字符串描述最后执行的Memcached方法的结果代码。</target>
        </trans-unit>
        <trans-unit id="576294e5171249c81dab1ddc161381473c704c0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getServerByKey()&lt;/strong&gt; returns the server that would be selected by a particular &lt;code&gt;server_key&lt;/code&gt; in all the &lt;strong&gt;Memcached::*ByKey()&lt;/strong&gt; operations.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getServerByKey（）&lt;/strong&gt;返回 &lt;code&gt;server_key&lt;/code&gt; 所有&lt;strong&gt;Memcached :: * ByKey（）&lt;/strong&gt;操作中的特定server_key选择的服务器。</target>
        </trans-unit>
        <trans-unit id="cc34f0f60a78f7d3824ac28de9641704ce69dda0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getServerList()&lt;/strong&gt; returns the list of all servers that are in its server pool.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getServerList（）&lt;/strong&gt;返回其服务器池中所有服务器的列表。</target>
        </trans-unit>
        <trans-unit id="6ead3517e0a9dfc90353fe45b9b466ad93a0aac9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getStats()&lt;/strong&gt; returns an array containing the state of all available memcache servers. See &lt;a href=&quot;http://code.sixapart.com/svn/memcached/trunk/server/doc/protocol.txt&quot;&gt;&amp;raquo; memcache protocol&lt;/a&gt; specification for details on these statistics.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getStats（）&lt;/strong&gt;返回一个数组，其中包含所有可用的Memcache服务器的状态。有关这些统计信息的详细信息，请参见&lt;a href=&quot;http://code.sixapart.com/svn/memcached/trunk/server/doc/protocol.txt&quot;&gt;&amp;raquo;memcache协议&lt;/a&gt;规范。</target>
        </trans-unit>
        <trans-unit id="a36fc787ab1b3a77ee7340ee043c300b43d89508" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getVersion()&lt;/strong&gt; returns an array containing the version info for all available memcache servers.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getVersion（）&lt;/strong&gt;返回一个数组，其中包含所有可用的Memcache服务器的版本信息。</target>
        </trans-unit>
        <trans-unit id="a1c96a3778779c829d08152af6fcde8a5f30284f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::increment()&lt;/strong&gt; increments a numeric item's value by the specified &lt;code&gt;offset&lt;/code&gt;. If the item's value is not numeric, an error will result. &lt;strong&gt;Memcached::increment()&lt;/strong&gt; will set the item to the &lt;code&gt;initial_value&lt;/code&gt; parameter if the key doesn't exist.</source>
          <target state="translated">&lt;strong&gt;Memcached :: increment（）&lt;/strong&gt;将数字项目的值增加指定的 &lt;code&gt;offset&lt;/code&gt; 。如果项目的值不是数字，则将导致错误。如果密钥不存在，则&lt;strong&gt;Memcached :: increment（）&lt;/strong&gt;会将该项设置为 &lt;code&gt;initial_value&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="1366853d0e56b36d3ac6de3099d6aece46140740" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::incrementByKey()&lt;/strong&gt; increments a numeric item's value by the specified &lt;code&gt;offset&lt;/code&gt;. If the item's value is not numeric, an error will result. &lt;strong&gt;Memcached::incrementByKey()&lt;/strong&gt; will set the item to the &lt;code&gt;initial_value&lt;/code&gt; parameter if the key doesn't exist.</source>
          <target state="translated">&lt;strong&gt;Memcached :: incrementByKey（）&lt;/strong&gt;将数字项目的值增加指定的 &lt;code&gt;offset&lt;/code&gt; 。如果项目的值不是数字，则将导致错误。如果密钥不存在，则&lt;strong&gt;Memcached :: incrementByKey（）&lt;/strong&gt;会将该项设置为 &lt;code&gt;initial_value&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="3058f991f9cc35c4da2795b79573c534b225fae5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::isPersistent()&lt;/strong&gt; checks if the connections to the memcache servers are persistent connections.</source>
          <target state="translated">&lt;strong&gt;Memcached :: isPersistent（）&lt;/strong&gt;检查与Memcache服务器的连接是否为持久连接。</target>
        </trans-unit>
        <trans-unit id="b0fe0d569dc55675de29aa793c37eddb70bde75f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::isPristine()&lt;/strong&gt; checks if the Memcache instance was recently created.</source>
          <target state="translated">&lt;strong&gt;Memcached :: isPristine（）&lt;/strong&gt;检查是否最近创建了Memcache实例。</target>
        </trans-unit>
        <trans-unit id="d16018aa873bef41fe11ec66fdc90ca29a7431d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::prepend()&lt;/strong&gt; prepends the given &lt;code&gt;value&lt;/code&gt; string to the value of an existing item. The reason that &lt;code&gt;value&lt;/code&gt; is forced to be a string is that prepending mixed types is not well-defined.</source>
          <target state="translated">&lt;strong&gt;Memcached :: prepend（）&lt;/strong&gt;将给定 &lt;code&gt;value&lt;/code&gt; 字符串添加到现有项目的值之前。 &lt;code&gt;value&lt;/code&gt; 被强制为字符串的原因是未明确定义混合类型。</target>
        </trans-unit>
        <trans-unit id="9530cd4a78b06c289349dc876789e5d0d9426bb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::prependByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.prepend&quot;&gt;Memcached::prepend()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: prependByKey（）&lt;/strong&gt;在功能上等同于&lt;a href=&quot;memcached.prepend&quot;&gt;Memcached :: prepend（）&lt;/a&gt;，但自由格式的 &lt;code&gt;server_key&lt;/code&gt; 可用于将 &lt;code&gt;key&lt;/code&gt; 映射到特定服务器。</target>
        </trans-unit>
        <trans-unit id="72d02060bbca223f2913c37a087c7d8b8ee4f9fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::quit()&lt;/strong&gt; closes any open connections to the memcache servers.</source>
          <target state="translated">&lt;strong&gt;Memcached :: quit（）&lt;/strong&gt;关闭与Memcache服务器的所有打开的连接。</target>
        </trans-unit>
        <trans-unit id="5a55b7410bda0516d00be95943919b6c961f870f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::replace()&lt;/strong&gt; is similar to &lt;a href=&quot;memcached.set&quot;&gt;Memcached::set()&lt;/a&gt;, but the operation fails if the &lt;code&gt;key&lt;/code&gt; does not exist on the server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: replace（）&lt;/strong&gt;与&lt;a href=&quot;memcached.set&quot;&gt;Memcached :: set（）&lt;/a&gt;类似，但是如果 &lt;code&gt;key&lt;/code&gt; 在服务器上不存在，则操作将失败。</target>
        </trans-unit>
        <trans-unit id="6b4f950969017b79e68feaf502336a56b4279410" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::replaceByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.replace&quot;&gt;Memcached::replace()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server. This is useful if you need to keep a bunch of related keys on a certain server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: replaceByKey（）&lt;/strong&gt;在功能上等同于&lt;a href=&quot;memcached.replace&quot;&gt;Memcached :: replace（）&lt;/a&gt;，只是自由格式的 &lt;code&gt;server_key&lt;/code&gt; 可用于将 &lt;code&gt;key&lt;/code&gt; 映射到特定服务器。如果您需要在特定服务器上保留一堆相关密钥，这将很有用。</target>
        </trans-unit>
        <trans-unit id="ad6bc0f97a1e8242e1e37310eec6f4eb57c7b810" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::resetserverlist()&lt;/strong&gt; removes all memcache servers from the known server list, reseting it back to empty.</source>
          <target state="translated">&lt;strong&gt;Memcached :: resetserverlist（）&lt;/strong&gt;从已知服务器列表中删除所有Memcache服务器，并将其&lt;strong&gt;重置&lt;/strong&gt;为空。</target>
        </trans-unit>
        <trans-unit id="e08d5c73e96d601fd77feb07a39f28f413e62534" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::resetserverlist()&lt;/strong&gt; removes all memcache servers from the known server list, resetting it back to empty.</source>
          <target state="translated">&lt;strong&gt;Memcached :: resetserverlist（）&lt;/strong&gt;从已知服务器列表中删除所有Memcache服务器，并将其重置为空。</target>
        </trans-unit>
        <trans-unit id="a687e427e867677f04a34e5cf298d38701c9e52e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::set()&lt;/strong&gt; stores the &lt;code&gt;value&lt;/code&gt; on a memcache server under the specified &lt;code&gt;key&lt;/code&gt;. The &lt;code&gt;expiration&lt;/code&gt; parameter can be used to control when the value is considered expired.</source>
          <target state="translated">&lt;strong&gt;Memcached :: set（）&lt;/strong&gt;将 &lt;code&gt;value&lt;/code&gt; 存储在Memcache服务器上指定 &lt;code&gt;key&lt;/code&gt; 。所述 &lt;code&gt;expiration&lt;/code&gt; 参数可用于当该值被认为是过期的控制。</target>
        </trans-unit>
        <trans-unit id="49928c1f6673fd1db21d0bf2d1ef3658d6dfd87d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::setByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.set&quot;&gt;Memcached::set()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server. This is useful if you need to keep a bunch of related keys on a certain server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: setByKey（）&lt;/strong&gt;在功能上等同于&lt;a href=&quot;memcached.set&quot;&gt;Memcached :: set（）&lt;/a&gt;，但自由格式的 &lt;code&gt;server_key&lt;/code&gt; 可用于将 &lt;code&gt;key&lt;/code&gt; 映射到特定服务器。如果您需要在特定服务器上保留一堆相关密钥，这将很有用。</target>
        </trans-unit>
        <trans-unit id="c5820ffcc6bc0f83a140f27382436e5868eeb070" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::setMulti()&lt;/strong&gt; is similar to &lt;a href=&quot;memcached.set&quot;&gt;Memcached::set()&lt;/a&gt;, but instead of a single key/value item, it works on multiple items specified in &lt;code&gt;items&lt;/code&gt;. The &lt;code&gt;expiration&lt;/code&gt; time applies to all the items at once.</source>
          <target state="translated">&lt;strong&gt;Memcached的:: setMulti（）&lt;/strong&gt;是类似&lt;a href=&quot;memcached.set&quot;&gt;的Memcached ::集（） &lt;/a&gt;，但不是一个键/值项，它适用于在指定的多个项目 &lt;code&gt;items&lt;/code&gt; 。在 &lt;code&gt;expiration&lt;/code&gt; 时间适用于所有项目一次。</target>
        </trans-unit>
        <trans-unit id="78644c077456ed3c1998ed8a5dd906a4c8adcbe3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::setMultiByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.setmulti&quot;&gt;Memcached::setMulti()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the keys from &lt;code&gt;items&lt;/code&gt; to a specific server. This is useful if you need to keep a bunch of related keys on a certain server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: setMultiByKey（）&lt;/strong&gt;在功能上等同于&lt;a href=&quot;memcached.setmulti&quot;&gt;Memcached :: setMulti（）&lt;/a&gt;，但自由格式的 &lt;code&gt;server_key&lt;/code&gt; 可用于将 &lt;code&gt;items&lt;/code&gt; 的键映射到特定服务器。如果您需要在特定服务器上保留一堆相关密钥，这将很有用。</target>
        </trans-unit>
        <trans-unit id="bfda47237e51eef128c9354336d3ea9482c671e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::setOptions()&lt;/strong&gt; is a variation of the &lt;a href=&quot;memcached.setoption&quot;&gt;Memcached::setOption()&lt;/a&gt; that takes an array of options to be set.</source>
          <target state="translated">&lt;strong&gt;memcached的:: setOptions（）&lt;/strong&gt;是所述的变化&lt;a href=&quot;memcached.setoption&quot;&gt;的memcached ::的SetOption（） &lt;/a&gt;，它利用一组选项进行设置。</target>
        </trans-unit>
        <trans-unit id="5982f15a0cb62c35f849b7926d2cd61eea8e7018" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::setSaslAuthData()&lt;/strong&gt; sets the username and password that should be used for SASL authentication with the memcache servers.</source>
          <target state="translated">&lt;strong&gt;Memcached :: setSaslAuthData（）&lt;/strong&gt;设置用于与Memcache服务器进行SASL身份验证的用户名和密码。</target>
        </trans-unit>
        <trans-unit id="5c446948992f0108e7b4ce9674e9293c793a33bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::touch()&lt;/strong&gt; sets a new expiration value on the given key.</source>
          <target state="translated">&lt;strong&gt;Memcached :: touch（）&lt;/strong&gt;在给定键上设置新的过期值。</target>
        </trans-unit>
        <trans-unit id="3e3da15f65f312ad297628b4bd3f3f9f7044469e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::touchByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.touch&quot;&gt;Memcached::touch()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: touchByKey（）&lt;/strong&gt;在功能上等同于&lt;a href=&quot;memcached.touch&quot;&gt;Memcached :: touch（）&lt;/a&gt;，只是自由格式的 &lt;code&gt;server_key&lt;/code&gt; 可用于将 &lt;code&gt;key&lt;/code&gt; 映射到特定服务器。</target>
        </trans-unit>
        <trans-unit id="f29a7dc657ced59fb7bf5bdc2e1f38e90220c387" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Memcached&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="842d89a94976a7b80fcaefd4eb22f4e2efc86004" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;MemcachedException&lt;/strong&gt;extends&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;MemcachedException&lt;/strong&gt;扩展了&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="1b1a8897182c533606118847682ccda4f3641b6e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;MessageFormatter&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;MessageFormatter&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="4b9a61bc499f0f898f0e851ea1c5c72cdbc7e891" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Meta-characters inside square brackets (&lt;em&gt;character classes&lt;/em&gt;)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;方括号内的元字符（&lt;em&gt;字符类&lt;/em&gt;）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5687e72bd7da329d1cf791d7c376686946713238" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Meta-characters outside square brackets&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;方括号外的元字符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4705a4d1291e9e38a5d56c9aaa41a245324572fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;MultipleIterator&lt;/strong&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;MultipleIterator&lt;/strong&gt;实现&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="11b6eb754fb062e5be7f74c4cb7b233a35f89db5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mutex&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;互斥体&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="8334ebd91fc42c35d0d65c29bcb6fb9259899bd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Namespace name definitions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;命名空间名称定义&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="13bdb00acf2d9089281f1436e1ef0caba4fd0c02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NoRewindIterator&lt;/strong&gt;extends&lt;a href=&quot;class.iteratoriterator&quot;&gt;IteratorIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;NoRewindIterator&lt;/strong&gt;扩展了&lt;a href=&quot;class.iteratoriterator&quot;&gt;IteratorIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="50f93d03d7cdfd1450d9a43e321737f010334fc1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Normalizer&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;规范化器&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="abd92687b99044b4eddf773d671c4667439b4622" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Note&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="8a99a99bbf8a401ebe0371c05923988f7d8c8dcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  %G and %V, which are based on ISO 8601:1988 week numbers can give unexpected (albeit correct) results if the numbering system is not thoroughly understood. See %V examples in this manual page.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果未完全理解编号系统，则基于ISO 8601：1988周数的％G和％V可能会产生意外（尽管正确）的结果。请参见本手册页中的％V示例。</target>
        </trans-unit>
        <trans-unit id="7578674bb9d3c39020b10b22eddeb2f3b577f899" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  A &lt;code&gt;match&lt;/code&gt; expression &lt;em&gt;must&lt;/em&gt; be terminated by a semicolon &lt;code&gt;;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;： &lt;code&gt;match&lt;/code&gt; 表达式&lt;em&gt;必须&lt;/em&gt;以分号结尾 &lt;code&gt;;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f332481f00b329a0fc93d5fe9df96ec26cac4819" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  All magic methods &lt;em&gt;MUST&lt;/em&gt; be declared as &lt;code&gt;public&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;em&gt;必须&lt;/em&gt;将所有魔术方法声明为 &lt;code&gt;public&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9df533484a3c49877011aa8248968f349ccdbc8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  All signals will be delivered after the script wakes up.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：脚本唤醒后，将发送所有信号。</target>
        </trans-unit>
        <trans-unit id="cdbdaee639ed243bf081704dd79909d13aa17818" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Although &lt;code&gt;connection&lt;/code&gt; can be omitted, it is not recommended, since it can be the cause of hard to find bugs in scripts.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：尽管可以省略 &lt;code&gt;connection&lt;/code&gt; ，但不建议这样做，因为它可能导致难以在脚本中发现错误。</target>
        </trans-unit>
        <trans-unit id="f9425c627f6a59329bd29f0760f52fe6aede88be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Although this function was added to PHP in PHP 7.0, a &lt;a href=&quot;https://github.com/paragonie/random_compat&quot;&gt;&amp;raquo; userland implementation&lt;/a&gt; is available for PHP 5.2 to 5.6, inclusive.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：尽管此功能是在PHP 7.0中添加到PHP的，但是&lt;a href=&quot;https://github.com/paragonie/random_compat&quot;&gt;&amp;raquo;userland实现&lt;/a&gt;可用于PHP 5.2至5.6（含）。</target>
        </trans-unit>
        <trans-unit id="aaf8e987b0f47e3ebc0fcd702aa7eef090b84ba9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Any other character sets are not recognized. The default encoding will be used instead and a warning will be emitted.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：无法识别任何其他字符集。将会使用默认编码，并且会发出警告。</target>
        </trans-unit>
        <trans-unit id="be107d03775bedf522dd044053948e43c3b08ea3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Apache 2 users may use &lt;code&gt;AcceptPathInfo = On&lt;/code&gt; inside &lt;var&gt;httpd.conf&lt;/var&gt; to define &lt;var&gt;PATH_INFO&lt;/var&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：Apache 2用户可以在 &lt;var&gt;httpd.conf&lt;/var&gt; 内部使用 &lt;code&gt;AcceptPathInfo = On&lt;/code&gt; 来定义 &lt;var&gt;PATH_INFO&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="b846e3268c5ade92a36b85b788b14eae642c4038" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Arguments that are passed by reference may have a default value.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：通过引用传递的参数可能具有默认值。</target>
        </trans-unit>
        <trans-unit id="8b854e6fd0899e415be091f22b5124716f53392e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As of PHP 4.3.2, PATH_TRANSLATED is no longer set implicitly under the Apache 2</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：从PHP 4.3.2开始，在Apache 2下不再隐式设置PATH_TRANSLATED</target>
        </trans-unit>
        <trans-unit id="8d6dcbf7599abb2a6b88cd94c629a9dc2b4dd3a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As of PHP 5, arguments that are passed by reference may have a default value.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：从PHP 5开始，通过引用传递的参数可能具有默认值。</target>
        </trans-unit>
        <trans-unit id="8814adca973bc3adac22cab5001c00759aa0e3d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As of PHP 5.3.0, the parser used for emulated prepared statements and for rewriting named or question mark style parameters supports the non standard backslash escapes for single- and double quotes. That means that terminating quotes immediately preceeded by a backslash are not recognized as such, which may result in wrong detection of parameters causing the prepared statement to fail when it is executed. A work-around is to not use emulated prepares for such SQL queries, and to avoid rewriting of parameters by using a parameter style which is natively supported by the driver.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：从PHP 5.3.0开始，用于模拟准备语句以及用于重写命名或问号样式参数的解析器支持单引号和双引号的非标准反斜杠转义。这意味着反斜杠之前紧跟的终止引号不会被这样识别，这可能导致错误检测参数，从而导致执行后的准备语句失败。解决方法是不要对此类SQL查询使用模拟的准备，并避免通过使用驱动程序本机支持的参数样式来重写参数。</target>
        </trans-unit>
        <trans-unit id="4989a4a0c3431c405fdc89cc88cbaa90c56f04bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As of PHP 7.0.0, the use of &lt;strong&gt;assert_options()&lt;/strong&gt; is discouraged in favor of setting and getting the &lt;var&gt;php.ini&lt;/var&gt; directives &lt;a href=&quot;https://www.php.net/manual/en/ini.core.php#ini.zend.assertions&quot;&gt;zend.assertions&lt;/a&gt; and &lt;a href=&quot;https://www.php.net/manual/en/info.configuration.php#ini.assert.exception&quot;&gt;assert.exception&lt;/a&gt; with &lt;a href=&quot;function.ini-set&quot;&gt;ini_set()&lt;/a&gt; and &lt;a href=&quot;function.ini-get&quot;&gt;ini_get()&lt;/a&gt;, respectively.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：从PHP 7.0.0开始，不建议使用&lt;strong&gt;assert_options（）&lt;/strong&gt;来支持&lt;a href=&quot;https://www.php.net/manual/en/info.configuration.php#ini.assert.exception&quot;&gt;分别&lt;/a&gt;使用&lt;a href=&quot;function.ini-set&quot;&gt;ini_set（）&lt;/a&gt;和&lt;a href=&quot;function.ini-get&quot;&gt;ini_get（）&lt;/a&gt;设置和获取 &lt;var&gt;php.ini&lt;/var&gt; 指令&lt;a href=&quot;https://www.php.net/manual/en/ini.core.php#ini.zend.assertions&quot;&gt;zend.assertions&lt;/a&gt;和assert.exception。</target>
        </trans-unit>
        <trans-unit id="84c950e93e388b90697f0a23f47a1ffc8b350a79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As of PHP 7.0.0, there are no particular restrictions regarding the length of a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; on 64-bit builds. On 32-bit builds and in earlier versions, a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; can be as large as up to 2GB (2147483647 bytes maximum)</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：从PHP 7.0.0开始，对于64位版本的&lt;a href=&quot;language.types.string&quot;&gt;字符串&lt;/a&gt;的长度没有特别的限制。在32位版本和较早版本中，&lt;a href=&quot;language.types.string&quot;&gt;字符串最大&lt;/a&gt;可以为2GB（最大2147483647字节）</target>
        </trans-unit>
        <trans-unit id="b4161f788e91717ceee93dbcc8cf6a8e14194bae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As of PHP 7.1.0, applying the empty index operator on a string throws a fatal error. Formerly, the string was silently converted to an array.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：从PHP 7.1.0开始，在字符串上应用空索引运算符会引发致命错误。以前，该字符串被静默转换为数组。</target>
        </trans-unit>
        <trans-unit id="e174b1a5cf2a3a2eec1ee6fbc1f1055801933c14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As of PHP 7.1.0, applying the empty index operator on an empty string throws a fatal error. Formerly, the empty string was silently converted to an array.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：从PHP 7.1.0开始，对空字符串应用空索引运算符会引发致命错误。以前，空字符串被静默转换为数组。</target>
        </trans-unit>
        <trans-unit id="8b6664acf25f6c5ae9af2d91ef7061d9212430a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As of PHP 7.1.0, class constant may declare a visibility of protected or private, making them only available in the hierarchical scope of the class in which it is is defined.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：从PHP 7.1.0开始，类常量可以声明可见的protected或private，使其只能在定义它的类的层次结构范围内使用。</target>
        </trans-unit>
        <trans-unit id="ef3cec1e236d6d1c72e492b98ce212726d2438a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As of PHP 7.1.0, negative string offsets are also supported. These specify the offset from the end of the string. Formerly, negative offsets emitted &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt; for reading (yielding an empty string) and &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; for writing (leaving the string untouched).</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：从PHP 7.1.0开始，还支持负字符串偏移量。这些指定从字符串末尾开始的偏移量。以前，负偏移量发出&lt;strong&gt; &lt;code&gt;E_NOTICE&lt;/code&gt; &lt;/strong&gt;进行读取（产生一个空字符串），并发出&lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt;进行写入（使字符串保持不变）。</target>
        </trans-unit>
        <trans-unit id="1b9371542716254d8c8f18c48cf178bf8870bf14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As of PHP 7.2.34, 7.3.23 and 7.4.11, respectively, the &lt;em&gt;names&lt;/em&gt; of incoming cookies are no longer url-decoded for security reasons.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：分别从PHP 7.2.34、7.3.23和7.4.11开始，出于安全原因，传入cookie的&lt;em&gt;名称&lt;/em&gt;不再进行url解码。</target>
        </trans-unit>
        <trans-unit id="76e3d07996193b55c6942c9fd3d57dcaadd62382" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As specified in RFC 2045, lines may not be longer than 76 characters in the &lt;code&gt;filename&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如RFC 2045中所指定， &lt;code&gt;filename&lt;/code&gt; 参数中的行不得超过76个字符。</target>
        </trans-unit>
        <trans-unit id="eb231b614e07c4720abb27e9bbac3166de4f6c89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Attempting to use a position specifier greater than &lt;strong&gt;&lt;code&gt;PHP_INT_MAX&lt;/code&gt;&lt;/strong&gt; will generate warnings.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：尝试使用大于&lt;strong&gt; &lt;code&gt;PHP_INT_MAX&lt;/code&gt; &lt;/strong&gt;的位置说明符将生成警告。</target>
        </trans-unit>
        <trans-unit id="4aa7fe1e002d1200d48d64bd6d650d3f712fc3a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Attention: You must call this function, before you can put any attribute!</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：注意：必须先调用此函数，然后才能放置任何属性！</target>
        </trans-unit>
        <trans-unit id="8cd534163f01b942b38eb38f874f397be1a4163d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Because PHP's integer type is signed and many platforms use 32bit integers, some filesystem functions may return unexpected results for files which are larger than 2GB.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：因为PHP的整数类型是带符号的，并且许多平台使用32位整数，所以某些文件系统函数对于大于2GB的文件可能返回意外结果。</target>
        </trans-unit>
        <trans-unit id="a3b17ddae2e654b454a0f819e33a1b7b3734ce4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Before PHP 7.4.0, the bundled libgd used a somewhat different algorithm, so the same &lt;code&gt;threshold&lt;/code&gt; yielded different results for system and bundled libgd.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在PHP 7.4.0之前，捆绑的libgd使用的算法有所不同，因此相同的 &lt;code&gt;threshold&lt;/code&gt; 对系统和捆绑的libgd产生不同的结果。</target>
        </trans-unit>
        <trans-unit id="519b4af55587609ec05410a3f68942a33668fe0c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Calling the constructor of class Exception from a subclass ignores the default arguments, if the properties $code and $message are already set.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果已经设置了属性$ code和$ message，则从子类中调用Exception类的构造函数将忽略默认参数。</target>
        </trans-unit>
        <trans-unit id="26f867664cca3f992729ade47f721b3fb16bc4f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Calling this function will implicitly start output buffering if it is not active already.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：调用此函数将隐式启动输出缓冲（如果尚未激活）。</target>
        </trans-unit>
        <trans-unit id="28a1c9a29275da7f34a9ba62d138877574cc857e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Constants and (global) variables are in a different namespace. This implies that for example &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; and &lt;var&gt;&lt;var&gt;$TRUE&lt;/var&gt;&lt;/var&gt; are generally different.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：常量和（全局）变量位于不同的名称空间中。这意味着例如&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;和 &lt;var&gt;&lt;var&gt;$TRUE&lt;/var&gt;&lt;/var&gt; 通常是不同的。</target>
        </trans-unit>
        <trans-unit id="a63521ddaa664ea87fbdd0dd6c6c852d9da960d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Constants and (global) variables are in a different namespace. This implies that for example &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; and &lt;var&gt;$TRUE&lt;/var&gt; are generally different.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：常量和（全局）变量位于不同的名称空间中。这意味着，例如&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;和 &lt;var&gt;$TRUE&lt;/var&gt; 通常是不同的。</target>
        </trans-unit>
        <trans-unit id="96534583ca1843c1c564fede96c4756edc3861d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Default for &lt;em&gt;longreadlen&lt;/em&gt; is &lt;em&gt;4096&lt;/em&gt; and &lt;code&gt;mode&lt;/code&gt; defaults to &lt;em&gt;ODBC_BINMODE_RETURN&lt;/em&gt;. Handling of binary long columns is also affected by &lt;a href=&quot;function.odbc-longreadlen&quot;&gt;odbc_longreadlen()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;em&gt;longreadlen的&lt;/em&gt;默认值为&lt;em&gt;4096&lt;/em&gt;， &lt;code&gt;mode&lt;/code&gt; 默认值为&lt;em&gt;ODBC_BINMODE_RETURN&lt;/em&gt;。二进制长列的处理也受&lt;a href=&quot;function.odbc-longreadlen&quot;&gt;odbc_longreadlen（）&lt;/a&gt;影响。</target>
        </trans-unit>
        <trans-unit id="7bde091da2aa97931158eaa5e39dcecf7c5809f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Ensure you pass arguments in the correct order when comparing similar arrays with more keys. The new array should be the first in the list.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：比较具有更多键的相似数组时，&lt;strong&gt;请&lt;/strong&gt;确保以正确的顺序传递参数。新数组应该是列表中的第一个。</target>
        </trans-unit>
        <trans-unit id="627063aa15f9a893658af192a7da7719c07dc97e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Explicitly passing &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; as the &lt;code&gt;object&lt;/code&gt; is no longer allowed as of PHP 7.2.0.  The parameter is still optional and calling &lt;strong&gt;get_class()&lt;/strong&gt; without a parameter from inside a class will work, but passing &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; now emits an &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; notice.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：从PHP 7.2.0开始，不再允许显式传递&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;作为 &lt;code&gt;object&lt;/code&gt; 。该参数仍然是可选的，从类内部调用不带参数的&lt;strong&gt;get_class（）&lt;/strong&gt;即可，但是现在传递&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;会发出&lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt;通知。</target>
        </trans-unit>
        <trans-unit id="0105f5a696b8948f62b06bc58909e2afcf5ce3e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Explicitly passing &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; as the &lt;code&gt;object&lt;/code&gt; is no longer allowed as of PHP 7.2.0.  The parameter is still optional and calling &lt;strong&gt;get_class()&lt;/strong&gt; without a parameter from inside a class will work, but passing &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; now emits an &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; notice.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：从PHP 7.2.0开始，不再允许将&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; &lt;/strong&gt;显式传递为 &lt;code&gt;object&lt;/code&gt; 。该参数仍然是可选的，可以从类内部调用不带参数的&lt;strong&gt;get_class（）&lt;/strong&gt;，但是现在传递&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; &lt;/strong&gt;会发出&lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt;通知。</target>
        </trans-unit>
        <trans-unit id="a914afb2a98a28aa9970f23e8eeba78e5333b47c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  For Windows only: This function requires PHP to run in an elevated mode or with the UAC disabled.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：仅适用于Windows：此功能要求PHP以提升模式运行或禁用UAC。</target>
        </trans-unit>
        <trans-unit id="eae4507513fb6abea1cd63d5b560256b0dd1e161" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  For our purposes here, a letter is a-z, A-Z, and the ASCII characters from 127 through 255 (0x7f-0xff).</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在这里，我们的字母是az，AZ和127至255（0x7f-0xff）的ASCII字符。</target>
        </trans-unit>
        <trans-unit id="377af0d4f7646a18d92c09121d14054b29b5102a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  For our purposes here, a letter is a-z, A-Z, and the ASCII characters from 128 through 255 (0x80-0xff).</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在这里，我们的字母是az，AZ和ASCII字符，范围从128到255（0x80-0xff）。</target>
        </trans-unit>
        <trans-unit id="0b0cfa419db2640017089a8dacedeab505831c97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  For our purposes here, a letter is a-z, A-Z, and the bytes from 127 through 255 (&lt;em&gt;0x7f-0xff&lt;/em&gt;).</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在这里，我们的字母是az，AZ，字节从127到255（&lt;em&gt;0x7f-0xff&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="fc8362cb894a8b8d6f38c95f05601a48d78ecb27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  For our purposes here, a letter is a-z, A-Z, and the bytes from 128 through 255 (&lt;code&gt;0x80-0xff&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在这里，我们的字母是az，AZ和128到255（ &lt;code&gt;0x80-0xff&lt;/code&gt; ）之间的字节。</target>
        </trans-unit>
        <trans-unit id="e45d0dc0ca6f577dda8bf6f3260ef25a7d8d0c97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Fully qualified names (i.e. names starting with a backslash) are not allowed in namespace declarations, because such constructs are interpreted as relative namespace expressions.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：名称空间声明中不允许使用全限定名称（即以反斜杠开头的名称），因为此类构造被解释为相对名称空间表达式。</target>
        </trans-unit>
        <trans-unit id="6d53d2d20868bb4f6b26e8b177a94ac0c77556ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Function names are case-insensitive for the ASCII characters &lt;code&gt;A&lt;/code&gt; to &lt;code&gt;Z&lt;/code&gt;, though it is usually good form to call functions as they appear in their declaration.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：函数名称对于ASCII字符 &lt;code&gt;A&lt;/code&gt; 到 &lt;code&gt;Z&lt;/code&gt; 不区分大小写，尽管通常是调用函数的好形式，因为它们出现在它们的声明中。</target>
        </trans-unit>
        <trans-unit id="938ef482da492e5967e823313df11f38326d338b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Function names are case-insensitive, though it is usually good form to call functions as they appear in their declaration.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：函数名称不区分大小写，尽管通常是调用函数的好形式，因为它们出现在声明中。</target>
        </trans-unit>
        <trans-unit id="424851aefac924176cc665837d7c89ff53b169a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  GIF images consist of one or more frames, where each frame may only occupy part of the image. The size of the image which is reported by &lt;strong&gt;getimagesize()&lt;/strong&gt; is the overall size (read from the logical screen descriptor).</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：GIF图像由一帧或多帧组成，其中每一帧只能占据图像的一部分。由&lt;strong&gt;getimagesize（）&lt;/strong&gt;报告的图像大小是整体大小（从逻辑屏幕描述符读取）。</target>
        </trans-unit>
        <trans-unit id="f43978af526a248008796989c68d31d7280d1640" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Handling of binary long columns is also affected by &lt;a href=&quot;function.odbc-longreadlen&quot;&gt;odbc_longreadlen()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：二进制长列的处理也受&lt;a href=&quot;function.odbc-longreadlen&quot;&gt;odbc_longreadlen（）的&lt;/a&gt;影响。</target>
        </trans-unit>
        <trans-unit id="9cf9f15545dad08dfa48ffd62ded92ebc872a89d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If &lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode&quot;&gt;safe mode&lt;/a&gt; is enabled the uid of the script is added to the &lt;em&gt;realm&lt;/em&gt; part of the &lt;em&gt;WWW-Authenticate&lt;/em&gt; header if you set this header (used for HTTP Authentication).</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果启用了&lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode&quot;&gt;安全模式，&lt;/a&gt;则如果设置了此头（用于HTTP身份验证），则脚本的uid将添加到&lt;em&gt;WWW-Authenticate&lt;/em&gt;头的&lt;em&gt;领域&lt;/em&gt;部分。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9d30812500cc5e074bc66065cfa5562c83fee0b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If &lt;code&gt;replacement&lt;/code&gt; is not an array, it will be &lt;a href=&quot;language.types.array#language.types.array.casting&quot;&gt;typecast&lt;/a&gt; to one (i.e. &lt;code&gt;(array) $replacement&lt;/code&gt;). This may result in unexpected behavior when using an object or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;replacement&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果 &lt;code&gt;replacement&lt;/code&gt; 不是数组，它将被&lt;a href=&quot;language.types.array#language.types.array.casting&quot;&gt;类型转换&lt;/a&gt;为一个（即 &lt;code&gt;(array) $replacement&lt;/code&gt; ）。使用对象或&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;replacement&lt;/code&gt; 时，这可能会导致意外的行为。</target>
        </trans-unit>
        <trans-unit id="448eb85b528c0ca4f734463fa2153d3258b42929" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If &lt;code&gt;replacement&lt;/code&gt; is not an array, it will be &lt;a href=&quot;language.types.array#language.types.array.casting&quot;&gt;typecast&lt;/a&gt; to one (i.e. &lt;code&gt;(array) $replacement&lt;/code&gt;). This may result in unexpected behavior when using an object or &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;replacement&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果 &lt;code&gt;replacement&lt;/code&gt; 不是数组，它将被&lt;a href=&quot;language.types.array#language.types.array.casting&quot;&gt;类型转换&lt;/a&gt;为一个（即 &lt;code&gt;(array) $replacement&lt;/code&gt; ）。使用对象或&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;replacement&lt;/code&gt; 时，这可能会导致意外的行为。</target>
        </trans-unit>
        <trans-unit id="e8a2263f75d02bc2a4742606ab53c0e681f07745" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If PHP cannot create a file in the specified &lt;code&gt;dir&lt;/code&gt; parameter, it falls back on the system default. On NTFS this also happens if the specified &lt;code&gt;dir&lt;/code&gt; contains more than 65534 files.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果PHP无法在指定的 &lt;code&gt;dir&lt;/code&gt; 参数中创建文件，则将使用系统默认值。在NTFS上，如果指定的 &lt;code&gt;dir&lt;/code&gt; 包含超过65534个文件，也会发生这种情况。</target>
        </trans-unit>
        <trans-unit id="28be3b30592f7053d8552b3e541aad9e7ef94de8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If an external variable name begins with a valid array syntax, trailing characters are silently ignored. For example, &lt;code&gt;&amp;lt;input name=&quot;foo[bar]baz&quot;&amp;gt;&lt;/code&gt; becomes &lt;code&gt;$_REQUEST['foo']['bar']&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果外部变量名称以有效的数组语法开头，则尾部字符将被静默忽略。例如， &lt;code&gt;&amp;lt;input name=&quot;foo[bar]baz&quot;&amp;gt;&lt;/code&gt; 变为 &lt;code&gt;$_REQUEST['foo']['bar']&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12d634e5fd5a6de5d97b8425eb9302832cb06d16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If no parameter is supplied, then the parentheses must be omitted and &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; will be returned. Calling &lt;em&gt;return&lt;/em&gt; with parentheses but with no arguments will result in a parse error.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果未提供任何参数，则必须省略括号并返回&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;。调用带括号但不带参数的&lt;em&gt;return&lt;/em&gt;将导致解析错误。</target>
        </trans-unit>
        <trans-unit id="88fd452485ae3f061ac4f6d950d3dffe5869f3c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If no parameter is supplied, then the parentheses must be omitted and &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; will be returned. Calling &lt;code&gt;return&lt;/code&gt; with parentheses but with no arguments will result in a parse error.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果未提供任何参数，则必须省略括号并返回&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; &lt;/strong&gt;。调用带括号但不带参数的 &lt;code&gt;return&lt;/code&gt; 将导致解析错误。</target>
        </trans-unit>
        <trans-unit id="c9d8ca213a92557601780543427f31f7948f8732" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If the parameters given to a function are not what it expects, such as passing an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; where a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; is expected, the return value of the function is undefined. In this case it will likely return &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; but this is just a convention, and cannot be relied upon.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果给函数指定的参数不是期望的参数，例如在期望&lt;a href=&quot;language.types.string&quot;&gt;字符串的&lt;/a&gt;地方传递&lt;a href=&quot;language.types.array&quot;&gt;数组&lt;/a&gt;，则该函数的返回值不确定。在这种情况下，它可能会返回&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; ,&lt;/strong&gt;但这只是一个约定，因此不能依赖。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d79ec8cd7cec34e08e064226280ad92f783c0923" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If the parameters given to a function are not what it expects, such as passing an array where a string is expected, the return value of the function is undefined. In this case it will likely return &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; but this is just a convention, and cannot be relied upon.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果给函数提供的参数不是期望的参数（例如，在期望字符串的地方传递数组），则该函数的返回值是不确定的。在这种情况下，它可能会返回&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; ,&lt;/strong&gt;但这只是一个约定，因此不能依赖。</target>
        </trans-unit>
        <trans-unit id="16c9c8dd35b5b414720a0dca3e1f8a4b0821a63e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If the period is specified without an explicit value for precision, 0 is assumed.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果指定的周期没有明确的精度值，则假定为0。</target>
        </trans-unit>
        <trans-unit id="0689a67aa50331f079dd134b4b902df7b59d6a62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If you try to return a reference from a function with the syntax: &lt;code&gt;return ($this-&amp;gt;value);&lt;/code&gt; this will &lt;em&gt;not&lt;/em&gt; work as you are attempting to return the result of an &lt;em&gt;expression&lt;/em&gt;, and not a variable, by reference. You can only return variables by reference from a function - nothing else.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果尝试使用以下语法从函数返回引用： &lt;code&gt;return ($this-&amp;gt;value);&lt;/code&gt; 这会&lt;em&gt;不会&lt;/em&gt;是你在试图返回结果的一起工作&lt;em&gt;表现&lt;/em&gt;作为参考，而不是一个变量。您只能通过函数的引用返回变量-别无其他。</target>
        </trans-unit>
        <trans-unit id="4f199fa72e43cb8f479d043b05adf62182a84a55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If you try to return a reference from a function with the syntax: &lt;em&gt;return ($this-&amp;gt;value);&lt;/em&gt; this will &lt;em&gt;not&lt;/em&gt; work as you are attempting to return the result of an &lt;em&gt;expression&lt;/em&gt;, and not a variable, by reference. You can only return variables by reference from a function - nothing else. Since PHP 5.1.0, an &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt; error is issued if the code tries to return a dynamic expression or a result of the &lt;em&gt;new&lt;/em&gt; operator.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果尝试使用以下语法从函数返回引用：&lt;em&gt;return（$ this-&amp;gt; value）; &lt;/em&gt;这会&lt;em&gt;不会&lt;/em&gt;是你在试图返回结果的一起工作&lt;em&gt;表现&lt;/em&gt;作为参考，而不是一个变量。您只能通过函数的引用返回变量-别无其他。从PHP 5.1.0开始，如果代码尝试返回动态表达式或&lt;em&gt;new&lt;/em&gt;运算符的结果，则会发出&lt;strong&gt; &lt;code&gt;E_NOTICE&lt;/code&gt; &lt;/strong&gt;错误。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bb853477c169fe2f515680ca64096f86c8cc592b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If you use &lt;strong&gt;array_push()&lt;/strong&gt; to add one element to the array, it's better to use &lt;code&gt;$array[] = &lt;/code&gt; because in that way there is no overhead of calling a function.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果使用&lt;strong&gt;array_push（）&lt;/strong&gt;将一个元素添加到数组中，则最好使用 &lt;code&gt;$array[] = &lt;/code&gt; 因为这样可以避免调用函数的开销。</target>
        </trans-unit>
        <trans-unit id="b570a02716f11bbb8b5334c0f36931854e7b6cc9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If you use &lt;strong&gt;array_push()&lt;/strong&gt; to add one element to the array, it's better to use &lt;em&gt;$array[] = &lt;/em&gt; because in that way there is no overhead of calling a function.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果使用&lt;strong&gt;array_push（）&lt;/strong&gt;将一个元素添加到数组中，则最好使用&lt;em&gt;$ array [] =，&lt;/em&gt;因为这样可以避免调用函数的开销。</target>
        </trans-unit>
        <trans-unit id="0cac5af1023049b3301116f02d3145195da0d0ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  In PHP the &lt;a href=&quot;control-structures.switch&quot;&gt;switch&lt;/a&gt; statement is considered a looping structure for the purposes of &lt;code&gt;continue&lt;/code&gt;. &lt;code&gt;continue&lt;/code&gt; behaves like &lt;code&gt;break&lt;/code&gt; (when no arguments are passed) but will raise a warning as this is likely to be a mistake. If a &lt;code&gt;switch&lt;/code&gt; is inside a loop, &lt;code&gt;continue 2&lt;/code&gt; will continue with the next iteration of the outer loop.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在PHP中，出于 &lt;code&gt;continue&lt;/code&gt; 的目的，将&lt;a href=&quot;control-structures.switch&quot;&gt;switch&lt;/a&gt;语句视为循环结构。 &lt;code&gt;continue&lt;/code&gt; 像的行为 &lt;code&gt;break&lt;/code&gt; （当没有传递参数），但将抛出一个警告，因为这很可能是一个错误。如果 &lt;code&gt;switch&lt;/code&gt; 在循环内，则 &lt;code&gt;continue 2&lt;/code&gt; 将继续外循环的下一次迭代。</target>
        </trans-unit>
        <trans-unit id="be3827f80e1372d8e13c6404d0a5a73aeda2250e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  In PHP the &lt;a href=&quot;control-structures.switch&quot;&gt;switch&lt;/a&gt; statement is considered a looping structure for the purposes of &lt;em&gt;continue&lt;/em&gt;. &lt;em&gt;continue&lt;/em&gt; behaves like &lt;em&gt;break&lt;/em&gt; (when no arguments are passed). If a &lt;em&gt;switch&lt;/em&gt; is inside a loop, &lt;em&gt;continue 2&lt;/em&gt; will continue with the next iteration of the outer loop.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在PHP 中，出于&lt;em&gt;continue&lt;/em&gt;的目的，将&lt;a href=&quot;control-structures.switch&quot;&gt;switch&lt;/a&gt;语句视为循环结构。当没有传递任何参数时，&lt;em&gt;continue的&lt;/em&gt;行为就像&lt;em&gt;break&lt;/em&gt;（&lt;em&gt;中断&lt;/em&gt;）。如果&lt;em&gt;开关&lt;/em&gt;在循环内，则&lt;em&gt;继续2&lt;/em&gt;将继续外循环的下一次迭代。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ad0ecdcd5a5a27543f60777887643f2c24a19e0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  It is also possible to achieve variable-length arguments by using &lt;a href=&quot;function.func-num-args&quot;&gt;func_num_args()&lt;/a&gt;, &lt;a href=&quot;function.func-get-arg&quot;&gt;func_get_arg()&lt;/a&gt;, and &lt;a href=&quot;function.func-get-args&quot;&gt;func_get_args()&lt;/a&gt; functions. This technique is not recommended as it was used prior to the introduction of the &lt;code&gt;...&lt;/code&gt; token.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：也可以通过使用&lt;a href=&quot;function.func-num-args&quot;&gt;func_num_args（）&lt;/a&gt;，&lt;a href=&quot;function.func-get-arg&quot;&gt;func_get_arg（）&lt;/a&gt;和&lt;a href=&quot;function.func-get-args&quot;&gt;func_get_args（）&lt;/a&gt;函数来实现变长参数。不建议使用此技术，因为在引入 &lt;code&gt;...&lt;/code&gt; 令牌之前已使用了此技术。</target>
        </trans-unit>
        <trans-unit id="f93375ad91efa29329330f2de9b92312eaba1cd4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  It is not possible to change the size of a BLOB by writing to the stream. Instead, an UPDATE statement has to be executed, possibly using SQLite's zeroblob() function to set the desired BLOB size.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：无法通过写入流来更改BLOB的大小。相反，必须执行UPDATE语句，可能使用SQLite的zeroblob（）函数来设置所需的BLOB大小。</target>
        </trans-unit>
        <trans-unit id="0da47e37eb9fa596b2cee38a6d45a7865a9622e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  It is possible to use &lt;a href=&quot;function.func-num-args&quot;&gt;func_num_args()&lt;/a&gt;, &lt;a href=&quot;function.func-get-arg&quot;&gt;func_get_arg()&lt;/a&gt;, and &lt;a href=&quot;function.func-get-args&quot;&gt;func_get_args()&lt;/a&gt; from within a closure.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：可以在闭包内使用&lt;a href=&quot;function.func-num-args&quot;&gt;func_num_args（）&lt;/a&gt;，&lt;a href=&quot;function.func-get-arg&quot;&gt;func_get_arg（）&lt;/a&gt;和&lt;a href=&quot;function.func-get-args&quot;&gt;func_get_args（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6df4a5caa85e54dd785f281ab1b2e6f79c158f61" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  It is possible to use &lt;a href=&quot;function.func-num-args&quot;&gt;func_num_args()&lt;/a&gt;, &lt;a href=&quot;function.func-get-arg&quot;&gt;func_get_arg()&lt;/a&gt;, and &lt;a href=&quot;function.func-get-args&quot;&gt;func_get_args()&lt;/a&gt; from within an arrow function.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：可以从箭头函数中使用&lt;a href=&quot;function.func-num-args&quot;&gt;func_num_args（）&lt;/a&gt;，&lt;a href=&quot;function.func-get-arg&quot;&gt;func_get_arg（）&lt;/a&gt;和&lt;a href=&quot;function.func-get-args&quot;&gt;func_get_args（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="385c48432a2c641733a7972a38311f68405436b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Like most PHP sorting functions, &lt;strong&gt;sort()&lt;/strong&gt; uses an implementation of &lt;a href=&quot;http://en.wikipedia.org/wiki/Quicksort&quot;&gt;&amp;raquo; Quicksort&lt;/a&gt;. The pivot is chosen in the middle of the partition resulting in an optimal time for already sorted arrays. This is however an implementation detail you shouldn't rely on.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：与大多数PHP排序功能一样，&lt;strong&gt;sort（）&lt;/strong&gt;使用&lt;a href=&quot;http://en.wikipedia.org/wiki/Quicksort&quot;&gt;&amp;raquo;Quicksort&lt;/a&gt;的实现。在分区的中间选择枢轴，从而为已排序的数组提供最佳时间。但是，这是您不应该依赖的实现细节。</target>
        </trans-unit>
        <trans-unit id="6cf2a219ebf6c303125c130bb56eb06f72a140ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Like most PHP sorting functions, &lt;strong&gt;sort()&lt;/strong&gt; uses an implementation of &lt;a href=&quot;https://en.wikipedia.org/wiki/Quicksort&quot;&gt;&amp;raquo; Quicksort&lt;/a&gt;. The pivot is chosen in the middle of the partition resulting in an optimal time for already sorted arrays. This is however an implementation detail you shouldn't rely on.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：与大多数PHP排序功能一样，&lt;strong&gt;sort（）&lt;/strong&gt;使用&lt;a href=&quot;https://en.wikipedia.org/wiki/Quicksort&quot;&gt;&amp;raquo;Quicksort&lt;/a&gt;的实现。在分区的中间选择枢轴，从而为已排序的数组提供最佳时间。但是，这是您不应该依赖的实现细节。</target>
        </trans-unit>
        <trans-unit id="7d7333b7e93a4b0512ab740634f6e9c9c4ede8b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Most systems require root access to create a server socket on a port below 1024.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：大多数系统需要root访问权限才能在1024以下的端口上创建服务器套接字。</target>
        </trans-unit>
        <trans-unit id="9c15138c11ecb564f2c6dfae2e19c0a054d6ea2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Multiple default cases will raise a &lt;strong&gt;&lt;code&gt;E_COMPILE_ERROR&lt;/code&gt;&lt;/strong&gt; error.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：多个默认情况将引发&lt;strong&gt; &lt;code&gt;E_COMPILE_ERROR&lt;/code&gt; &lt;/strong&gt;错误。</target>
        </trans-unit>
        <trans-unit id="2e24ca26747067da68d94f1feb3389336a9fd5e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Multiple default patterns will raise a &lt;strong&gt;&lt;code&gt;E_FATAL_ERROR&lt;/code&gt;&lt;/strong&gt; error.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：多个默认模式将引发&lt;strong&gt; &lt;code&gt;E_FATAL_ERROR&lt;/code&gt; &lt;/strong&gt;错误。</target>
        </trans-unit>
        <trans-unit id="e4823ba0a0acd478115a85d8a398451f14ef7e2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Namespace names are case-insensitive.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：命名空间名称不区分大小写。</target>
        </trans-unit>
        <trans-unit id="2c53be9a639af90b44281e4dc2a9df0b0631e0cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Not all databases will allow transactions to operate on DDL statements: some will generate errors, whereas others (including MySQL) will automatically commit the transaction after the first DDL statement has been encountered.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：并非所有数据库都允许事务对DDL语句进行操作：某些数据库会产生错误，而其他数据库（包括MySQL）将在遇到第一个DDL语句后自动提交事务。</target>
        </trans-unit>
        <trans-unit id="03c701652df38ef80fa4ca9dd593d686bbd1950e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that &lt;code&gt;array_push(&amp;amp;collector(), 'foo');&lt;/code&gt; will &lt;em&gt;not&lt;/em&gt; work, it results in a fatal error.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意 &lt;code&gt;array_push(&amp;amp;collector(), 'foo');&lt;/code&gt; 将&lt;em&gt;无法&lt;/em&gt;正常工作，这将导致致命错误。</target>
        </trans-unit>
        <trans-unit id="f9826acf65796a7b3ffedeb838240b33629c3002" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that &lt;code&gt;elseif&lt;/code&gt; and &lt;code&gt;else if&lt;/code&gt; will only be considered exactly the same when using curly brackets as in the above example. When using a colon to define your &lt;code&gt;if&lt;/code&gt;/&lt;code&gt;elseif&lt;/code&gt; conditions, you must not separate &lt;code&gt;else if&lt;/code&gt; into two words, or PHP will fail with a parse error.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，如上例中使用大括号时， &lt;code&gt;elseif&lt;/code&gt; 和 &lt;code&gt;else if&lt;/code&gt; 仅被视为完全相同。使用冒号定义 &lt;code&gt;if&lt;/code&gt; / &lt;code&gt;elseif&lt;/code&gt; 条件时，不得将 &lt;code&gt;else if&lt;/code&gt; 分成两个词，否则PHP会因解析错误而失败。</target>
        </trans-unit>
        <trans-unit id="b13b4e90376a82c5a033d4ad0a1c0f027cdf0fde" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that &lt;em&gt;array_push(&amp;amp;collector(), 'foo');&lt;/em&gt; will &lt;em&gt;not&lt;/em&gt; work, it results in a fatal error.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意&lt;em&gt;array_push（＆collector（），'foo'）; &lt;/em&gt;将&lt;em&gt;无法&lt;/em&gt;正常工作，这将导致致命错误。</target>
        </trans-unit>
        <trans-unit id="870a5197ed9b6e66d1395b987f843d32a944f766" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that &lt;em&gt;elseif&lt;/em&gt; and &lt;em&gt;else if&lt;/em&gt; will only be considered exactly the same when using curly brackets as in the above example. When using a colon to define your &lt;em&gt;if&lt;/em&gt;/&lt;em&gt;elseif&lt;/em&gt; conditions, you must not separate &lt;em&gt;else if&lt;/em&gt; into two words, or PHP will fail with a parse error.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，如上例中使用大括号时，&lt;em&gt;elseif&lt;/em&gt;和&lt;em&gt;else if&lt;/em&gt;仅被视为完全相同。使用冒号定义&lt;em&gt;if&lt;/em&gt; / &lt;em&gt;elseif&lt;/em&gt;条件时，不得将&lt;em&gt;else if&lt;/em&gt;分成两个词，否则PHP会因解析错误而失败。</target>
        </trans-unit>
        <trans-unit id="36df32eedbbf3a8df37decfb5923a272fdec0c63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that &lt;strong&gt;&lt;code&gt;MCRYPT_DEV_RANDOM&lt;/code&gt;&lt;/strong&gt; may block until more entropy is available.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，&lt;strong&gt; &lt;code&gt;MCRYPT_DEV_RANDOM&lt;/code&gt; &lt;/strong&gt;可能会阻塞，直到有更多的熵可用为止。</target>
        </trans-unit>
        <trans-unit id="5c9f16f4675a44061cc3bb7f962546399b30b005" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that &lt;strong&gt;array_unique()&lt;/strong&gt; is not intended to work on multi dimensional arrays.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，&lt;strong&gt;array_unique（）&lt;/strong&gt;不适用于多维数组。</target>
        </trans-unit>
        <trans-unit id="3e65415c0d26046013c72fd8849f417dcb7e2f03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that JPC and JP2 are capable of having components with different bit depths. In this case, the value for &quot;bits&quot; is the highest bit depth encountered. Also, JP2 files may contain &lt;code&gt;multiple JPEG 2000 codestreams&lt;/code&gt;. In this case, &lt;strong&gt;getimagesize()&lt;/strong&gt; returns the values for the first codestream it encounters in the root of the file.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，JPC和JP2能够使组件具有不同的位深度。在这种情况下，&amp;ldquo;位&amp;rdquo;的值是遇到的最高位深度。此外，JP2文件可能包含 &lt;code&gt;multiple JPEG 2000 codestreams&lt;/code&gt; 。在这种情况下，&lt;strong&gt;getimagesize（）&lt;/strong&gt;返回它在文件根目录中遇到的第一个代码流的值。</target>
        </trans-unit>
        <trans-unit id="9cef18ec2cc21d2fccf51af6ae70764e4799088c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that JPC and JP2 are capable of having components with different bit depths. In this case, the value for &quot;bits&quot; is the highest bit depth encountered. Also, JP2 files may contain &lt;em&gt;multiple JPEG 2000 codestreams&lt;/em&gt;. In this case, &lt;strong&gt;getimagesize()&lt;/strong&gt; returns the values for the first codestream it encounters in the root of the file.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，JPC和JP2能够使组件具有不同的位深度。在这种情况下，&amp;ldquo;位&amp;rdquo;的值是遇到的最高位深度。此外，JP2文件可能包含&lt;em&gt;多个JPEG 2000码流&lt;/em&gt;。在这种情况下，&lt;strong&gt;getimagesize（）&lt;/strong&gt;返回它在文件根目录中遇到的第一个代码流的值。</target>
        </trans-unit>
        <trans-unit id="53efdd43ff7083d06961a630f816163a6c34ee38" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that all &lt;a href=&quot;class.sqlite3result&quot;&gt;SQLite3Result&lt;/a&gt;s that have been retrieved by executing this statement will be invalidated when the statement is closed.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，&lt;a href=&quot;class.sqlite3result&quot;&gt;关闭&lt;/a&gt;该语句后，通过执行该语句检索到的所有SQLite3Result都将无效。</target>
        </trans-unit>
        <trans-unit id="e89d1bf59c2975cc4d37c4d75cb71dbe341f4ab6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that other bitwise operations, for instance &lt;code&gt;~&lt;/code&gt; will not work as expected. In other words, it is not possible to retrieve all non-static methods, for example.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，其他按位运算（例如 &lt;code&gt;~&lt;/code&gt; 将无法按预期工作。换句话说，例如，不可能检索所有非静态方法。</target>
        </trans-unit>
        <trans-unit id="83b9eb4ea7d6d5e7b699cbbb3445f00a67371607" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that other bitwise operations, for instance &lt;em&gt;~&lt;/em&gt; will not work as expected. In other words, it is not possible to retrieve all non-static methods, for example.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，其他按位运算（例如&lt;em&gt;〜）&lt;/em&gt;将无法正常工作。换句话说，例如，不可能检索所有非静态方法。</target>
        </trans-unit>
        <trans-unit id="baa1a63b3cb32c16c5852abd11e65c3876a8611f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that since &lt;code&gt;return&lt;/code&gt; is a language construct and not a function, the parentheses surrounding its argument are not required and their use is discouraged.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，由于 &lt;code&gt;return&lt;/code&gt; 是一种语言构造而不是函数，因此不需要围绕其参数的括号，并且不建议使用它们。</target>
        </trans-unit>
        <trans-unit id="2b63c65562f43d2c25d5577b5fefd6f1631c3108" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that since &lt;em&gt;return&lt;/em&gt; is a language construct and not a function, the parentheses surrounding its argument are not required and their use is discouraged.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，由于&lt;em&gt;return&lt;/em&gt;是语言构造而不是函数，因此不需要围绕其参数的括号，并且不建议使用它们。</target>
        </trans-unit>
        <trans-unit id="5831faf0585976f4c947afdceebba3aa9be2e623" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that unlike some other languages, the &lt;a href=&quot;control-structures.continue&quot;&gt;continue&lt;/a&gt; statement applies to &lt;code&gt;switch&lt;/code&gt; and acts similar to &lt;code&gt;break&lt;/code&gt;. If you have a &lt;code&gt;switch&lt;/code&gt; inside a loop and wish to continue to the next iteration of the outer loop, use &lt;code&gt;continue 2&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，与某些其他语言不同，&lt;a href=&quot;control-structures.continue&quot;&gt;continue&lt;/a&gt;语句适用于 &lt;code&gt;switch&lt;/code&gt; ，其行为类似于 &lt;code&gt;break&lt;/code&gt; 。如果您在循环内有一个 &lt;code&gt;switch&lt;/code&gt; 并希望继续进行外循环的下一次迭代，请使用 &lt;code&gt;continue 2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4851f38a58339568e1f7e6fc3a12f739e6495b5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that unlike some other languages, the &lt;a href=&quot;control-structures.continue&quot;&gt;continue&lt;/a&gt; statement applies to &lt;em&gt;switch&lt;/em&gt; and acts similar to &lt;em&gt;break&lt;/em&gt;. If you have a &lt;em&gt;switch&lt;/em&gt; inside a loop and wish to continue to the next iteration of the outer loop, use &lt;em&gt;continue 2&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，与某些其他语言不同，&lt;a href=&quot;control-structures.continue&quot;&gt;continue&lt;/a&gt;语句适用于&lt;em&gt;switch&lt;/em&gt;，其行为类似于&lt;em&gt;break&lt;/em&gt;。如果您在循环内有一个&lt;em&gt;开关，&lt;/em&gt;并希望继续进行外循环的下一次迭代，请使用&lt;em&gt;Continue 2&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="62351a19a88e26b35b6cf4e26a9151c7a1a960ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that when using ISAPI with IIS, the value will be &lt;em&gt;off&lt;/em&gt; if the request was not made through the HTTPS protocol.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，将ISAPI与IIS一起使用时，如果未通过HTTPS协议发出请求，则该值将为&lt;em&gt;off&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a3a911f294ade8a24db9015bbf67866ed43fec9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  On 32-bit builds, a string can be as large as up to 2GB (2147483647 bytes maximum)</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在32位版本中，字符串最大可以为2GB（最大2147483647字节）</target>
        </trans-unit>
        <trans-unit id="5230c01cd87dd5e89d2de605eeecdb07e41722b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  On &lt;em&gt;Windows&lt;/em&gt;, unless &lt;code&gt;bypass_shell&lt;/code&gt; is set to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; in &lt;code&gt;other_options&lt;/code&gt;, the &lt;code&gt;cmd&lt;/code&gt; is passed to &lt;strong&gt;cmd.exe&lt;/strong&gt; (actually, &lt;code&gt;%ComSpec%&lt;/code&gt;) with the &lt;code&gt;/c&lt;/code&gt; flag as &lt;em&gt;unquoted&lt;/em&gt; string (i.e. exactly as has been given to &lt;strong&gt;proc_open()&lt;/strong&gt;). This can cause &lt;strong&gt;cmd.exe&lt;/strong&gt; to remove enclosing quotes from &lt;code&gt;cmd&lt;/code&gt; (for details see the &lt;strong&gt;cmd.exe&lt;/strong&gt; documentation), resulting in unexpected, and potentially even dangerous behavior, because &lt;strong&gt;cmd.exe&lt;/strong&gt; error messages may contain (parts of) the passed &lt;code&gt;cmd&lt;/code&gt; (see example below).</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：在&lt;em&gt;的Windows&lt;/em&gt;，除非 &lt;code&gt;bypass_shell&lt;/code&gt; 设置为&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;在 &lt;code&gt;other_options&lt;/code&gt; ，在 &lt;code&gt;cmd&lt;/code&gt; 传递给&lt;strong&gt;cmd.exe的&lt;/strong&gt;（实际上， &lt;code&gt;%ComSpec%&lt;/code&gt; ）与 &lt;code&gt;/c&lt;/code&gt; 标志为&lt;em&gt;未加引号的&lt;/em&gt;字符串（即完全按照已经给&lt;strong&gt;proc_open（） &lt;/strong&gt;）。这可能导致&lt;strong&gt;cmd.exe&lt;/strong&gt;删除 &lt;code&gt;cmd&lt;/code&gt; 中的引号（有关详细信息，请参阅&lt;strong&gt;cmd.exe&lt;/strong&gt;文档），从而导致意外甚至潜在的危险行为，因为&lt;strong&gt;cmd.exe&lt;/strong&gt;错误消息可能包含传递的 &lt;code&gt;cmd&lt;/code&gt; （的一部分） （请参见下面的示例）。</target>
        </trans-unit>
        <trans-unit id="ffeee857419e47c373efed22a2ab49ea51d2cca2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  On Windows, if &lt;code&gt;newname&lt;/code&gt; already exists, it must be writable. Otherwise &lt;strong&gt;rename()&lt;/strong&gt; fails and issues &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在Windows上，如果 &lt;code&gt;newname&lt;/code&gt; 已经存在，则它必须是可写的。否则，&lt;strong&gt;rename（）&lt;/strong&gt;失败并发出&lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="0ddf545f27b3f0e33f3b2d683c85c007c5ce6774" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  On Windows, the system may sleep longer that the given number of microseconds, depending on the hardware.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在Windows上，系统可能会休眠超过给定微秒数的时间，具体取决于硬件。</target>
        </trans-unit>
        <trans-unit id="05b639382fb339ebce5cb35fe804d848867aa4c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  On Windows, the system may sleep longer that the given number of nanoseconds, depending on the hardware.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在Windows上，取决于硬件，系统可能比给定的纳秒数更长的睡眠时间。</target>
        </trans-unit>
        <trans-unit id="44a7b227047f7574f42f125c05fa528e4204ee3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  On Windows, this function fails silently when applied on a regular file.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在Windows上，此功能在应用于常规文件时会静默失败。</target>
        </trans-unit>
        <trans-unit id="68686c64e3775af0ca5ecaeb2cd42c2e058bbcb3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  On some platforms (such as Windows), &lt;a href=&quot;function.getrandmax&quot;&gt;getrandmax()&lt;/a&gt; is only 32767. If you require a range larger than 32767, specifying &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; will allow you to create a range larger than this, or consider using &lt;a href=&quot;function.mt-rand&quot;&gt;mt_rand()&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在某些平台（例如Windows）上，&lt;a href=&quot;function.getrandmax&quot;&gt;getrandmax（）&lt;/a&gt;仅为32767。如果您需要一个大于32767的范围，则指定 &lt;code&gt;min&lt;/code&gt; 和 &lt;code&gt;max&lt;/code&gt; 将允许您创建一个大于此范围的范围，或者考虑改用&lt;a href=&quot;function.mt-rand&quot;&gt;mt_rand（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c67ddc93c1480539b2d1aadebae23ba8ab4f34d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Only the first 63 characters of the prefix are used. Windows even uses only the first three characters of the prefix.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：仅使用前缀的前63个字符。Windows甚至仅使用前缀的前三个字符。</target>
        </trans-unit>
        <trans-unit id="5d985b7cd4bf355b545b22507ec4607e8d83746a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Optional values do not accept &lt;code&gt;&quot; &quot;&lt;/code&gt; (space) as a separator.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：可选值不接受 &lt;code&gt;&quot; &quot;&lt;/code&gt; （空格）作为分隔符。</target>
        </trans-unit>
        <trans-unit id="bda3d3fca5cdf8a8010a9e8d8767ef14e4b006f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Optional values do not accept &lt;em&gt;&quot; &quot;&lt;/em&gt; (space) as a separator.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：可选值不接受&lt;em&gt;&amp;ldquo;&amp;rdquo;&lt;/em&gt;（空格）作为分隔符。</target>
        </trans-unit>
        <trans-unit id="bc5eb9e23401fe018ec0d4bf097231fe666490ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  PHP doesn't handle strings like &lt;em&gt;&quot;12,300.2&quot;&lt;/em&gt; correctly by default. See &lt;a href=&quot;language.types.string#language.types.string.conversion&quot;&gt;converting from strings&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：默认情况下，PHP无法正确处理&lt;em&gt;&amp;ldquo; 12,300.2&amp;rdquo;之&lt;/em&gt;类的字符串。请参见&lt;a href=&quot;language.types.string#language.types.string.conversion&quot;&gt;从字符串转换&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="705dd944bc90edee50813b34a51a590e8077589a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Parent constructors are not called implicitly if the child class defines a constructor. In order to run a parent constructor, a call to &lt;strong&gt;parent::__construct()&lt;/strong&gt; within the child constructor is required. If the child does not define a constructor then it may be inherited from the parent class just like a normal class method (if it was not declared as private).</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果子类定义了构造函数，则不会隐式调用父构造函数。为了运行父构造函数，需要在子构造函数内调用&lt;strong&gt;parent :: __ construct（）&lt;/strong&gt;。如果子级没有定义构造函数，则可以像常规类方法一样从父类继承它（如果未声明为私有）。</target>
        </trans-unit>
        <trans-unit id="be5cc5f0a792daae0653fca58d97f8a60dd8e061" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Persistent connections have no effect if PHP is used as a CGI program.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果将PHP用作CGI程序，则持久连接无效。</target>
        </trans-unit>
        <trans-unit id="77eb663821d7bd4d7753f5653da06be447878e5d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Persistent database links are an exception to this rule. They are &lt;em&gt;not&lt;/em&gt; destroyed by the garbage collector. See the &lt;a href=&quot;https://secure.php.net/manual/en/features.persistent-connections.php&quot;&gt;persistent connections&lt;/a&gt; section for more information.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：持久数据库链接是该规则的例外。它们&lt;em&gt;不会&lt;/em&gt;被垃圾收集器破坏。有关更多信息，请参见&lt;a href=&quot;https://secure.php.net/manual/en/features.persistent-connections.php&quot;&gt;持久连接&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="03aba40e425698cfaa499c78b4551a0d782c0fee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Persistent database links are an exception to this rule. They are &lt;em&gt;not&lt;/em&gt; destroyed by the garbage collector. See the &lt;a href=&quot;https://www.php.net/manual/en/features.persistent-connections.php&quot;&gt;persistent connections&lt;/a&gt; section for more information.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：持久数据库链接是该规则的例外。它们&lt;em&gt;不会&lt;/em&gt;被垃圾收集器破坏。有关更多信息，请参见&lt;a href=&quot;https://www.php.net/manual/en/features.persistent-connections.php&quot;&gt;持久连接&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="6bcd3ea0f07da65c21065051e68c64fb2fc8ff57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please consult the &lt;a href=&quot;https://secure.php.net/manual/en/stream.constants.php&quot;&gt;Streams constant list&lt;/a&gt; for further details on each constant.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：有关每个常量的更多详细信息，请查阅&lt;a href=&quot;https://secure.php.net/manual/en/stream.constants.php&quot;&gt;Streams常量列表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1826b006da0616fe5a670481388daff032476298" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please consult the &lt;a href=&quot;https://www.php.net/manual/en/stream.constants.php&quot;&gt;Streams constant list&lt;/a&gt; for further details on each constant.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：有关每个常量的更多详细信息，请查阅&lt;a href=&quot;https://www.php.net/manual/en/stream.constants.php&quot;&gt;Streams常量列表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="90f78e54cdf4f313fd68483440c9ae6eb677f153" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please note that the null coalescing operator is an expression, and that it doesn't evaluate to a variable, but to the result of an expression. This is important to know if you want to return a variable by reference. The statement &lt;code&gt;return $foo ?? $bar;&lt;/code&gt; in a return-by-reference function will therefore not work and a warning is issued.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，空合并运算符是一个表达式，它的值不是表达式，而是表达式的结果。要知道是否要通过引用返回变量，这一点很重要。语句 &lt;code&gt;return $foo ?? $bar;&lt;/code&gt; 因此，按引用返回功能中的&amp;ldquo;无效&amp;rdquo;将不起作用，并且会发出警告。</target>
        </trans-unit>
        <trans-unit id="69c0936fae2f7cf27ca29ae45188b69bbdd2d884" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please note that the null coalescing operator is an expression, and that it doesn't evaluate to a variable, but to the result of an expression. This is important to know if you want to return a variable by reference. The statement &lt;em&gt;return $foo ?? $bar;&lt;/em&gt; in a return-by-reference function will therefore not work and a warning is issued.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，空合并运算符是一个表达式，它的结果不是表达式，而是变量。了解是否要通过引用返回变量很重要。语句&lt;em&gt;返回$ foo？$ bar; &lt;/em&gt;因此，按引用返回功能中的&amp;ldquo;无效&amp;rdquo;将不起作用，并发出警告。</target>
        </trans-unit>
        <trans-unit id="1e126d631c502f7a0b526bd0729093470e1ec5b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please note that the ternary operator is an expression, and that it doesn't evaluate to a variable, but to the result of an expression. This is important to know if you want to return a variable by reference. The statement &lt;code&gt;return $var == 42 ? $a : $b;&lt;/code&gt; in a return-by-reference function will therefore not work and a warning is issued.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，三元运算符是一个表达式，它的值不是表达式，而是表达式的结果。要知道是否要通过引用返回变量，这一点很重要。语句 &lt;code&gt;return $var == 42 ? $a : $b;&lt;/code&gt; 因此，按引用返回功能中的&amp;ldquo;无效&amp;rdquo;将不起作用，并且会发出警告。</target>
        </trans-unit>
        <trans-unit id="3db6fbd49c9f7f282a515c82ce5ca7771329f40b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please note that the ternary operator is an expression, and that it doesn't evaluate to a variable, but to the result of an expression. This is important to know if you want to return a variable by reference. The statement &lt;em&gt;return $var == 42 ? $a : $b;&lt;/em&gt; in a return-by-reference function will therefore not work and a warning is issued.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，三元运算符是一个表达式，它的值不是表达式，而是表达式的结果。了解是否要通过引用返回变量很重要。语句&lt;em&gt;返回$ var == 42？$ a：$ b; &lt;/em&gt;因此，按引用返回功能中的&amp;ldquo;无效&amp;rdquo;将不起作用，并发出警告。</target>
        </trans-unit>
        <trans-unit id="4b2c45fe80dfc6377d532960829fd33ec20c8922" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please note that this function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using &lt;code&gt;array_udiff($array1[0], $array2[0], &quot;data_compare_func&quot;);&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，此函数仅检查n维数组的一维。当然，您可以使用 &lt;code&gt;array_udiff($array1[0], $array2[0], &quot;data_compare_func&quot;);&lt;/code&gt; 检查更深的维度。。</target>
        </trans-unit>
        <trans-unit id="13e29677bdd24a6d6adfeb9b4603a45bc995a1f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please note that this function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using &lt;em&gt;array_udiff($array1[0], $array2[0], &quot;data_compare_func&quot;);&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，此函数仅检查n维数组的一维。当然，您可以使用&lt;em&gt;array_udiff（$ array1 [0]，$ array2 [0]，&amp;ldquo; data_compare_func&amp;rdquo;）&lt;/em&gt;检查更深的维度&lt;em&gt;。&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2cd9389a2f5298c583bd8c8e25e2481b35c21529" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please note that this function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using, for example, &lt;code&gt;array_udiff_assoc($array1[0], $array2[0], &quot;some_comparison_func&quot;);&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，此函数仅检查n维数组的一维。当然，您可以使用例如 &lt;code&gt;array_udiff_assoc($array1[0], $array2[0], &quot;some_comparison_func&quot;);&lt;/code&gt; 检查更深的维度。。</target>
        </trans-unit>
        <trans-unit id="0c392360a212901bd818befb21317e33f3806fcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please note that this function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using, for example, &lt;code&gt;array_udiff_uassoc($array1[0], $array2[0], &quot;data_compare_func&quot;,
    &quot;key_compare_func&quot;);&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，此函数仅检查n维数组的一维。当然，您可以使用例如 &lt;code&gt;array_udiff_uassoc($array1[0], $array2[0], &quot;data_compare_func&quot;, &quot;key_compare_func&quot;);&lt;/code&gt; 检查更深的维度。。</target>
        </trans-unit>
        <trans-unit id="b94c42aefa0dc187a1cd220b1b25b6edf1b2976a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please note that this function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using, for example, &lt;em&gt;array_udiff_assoc($array1[0], $array2[0], &quot;some_comparison_func&quot;);&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，此函数仅检查n维数组的一维。当然，您可以使用例如&lt;em&gt;array_udiff_assoc（$ array1 [0]，$ array2 [0]，&amp;ldquo; some_comparison_func&amp;rdquo;）&lt;/em&gt;检查更深的维度&lt;em&gt;。&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="11045c1b895ac4a54c844bd69e1ceccb27d71602" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please note that this function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using, for example, &lt;em&gt;array_udiff_uassoc($array1[0], $array2[0], &quot;data_compare_func&quot;, &quot;key_compare_func&quot;);&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，此函数仅检查n维数组的一维。当然，您可以使用例如&lt;em&gt;array_udiff_uassoc（$ array1 [0]，$ array2 [0]，&amp;ldquo; data_compare_func&amp;rdquo;，&amp;ldquo; key_compare_func&amp;rdquo;）&lt;/em&gt;检查更深的维度&lt;em&gt;。&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1d7da17275215c2db7985dc27afa620e4a323b07" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Prior to PHP 5.4.0, &lt;var&gt;&lt;var&gt;$HTTP_SERVER_VARS&lt;/var&gt;&lt;/var&gt; contained the same initial information, but was not a &lt;a href=&quot;language.variables.superglobals&quot;&gt;superglobal&lt;/a&gt;. (Note that &lt;var&gt;&lt;var&gt;$HTTP_SERVER_VARS&lt;/var&gt;&lt;/var&gt; and &lt;var&gt;&lt;var&gt;$_SERVER&lt;/var&gt;&lt;/var&gt; were different variables and that PHP handled them as such.)</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在PHP 5.4.0之前， &lt;var&gt;&lt;var&gt;$HTTP_SERVER_VARS&lt;/var&gt;&lt;/var&gt; 包含相同的初始信息，但不是&lt;a href=&quot;language.variables.superglobals&quot;&gt;superglobal&lt;/a&gt;。（请注意， &lt;var&gt;&lt;var&gt;$HTTP_SERVER_VARS&lt;/var&gt;&lt;/var&gt; 和 &lt;var&gt;&lt;var&gt;$_SERVER&lt;/var&gt;&lt;/var&gt; 是不同的变量，PHP照这样处理它们。）</target>
        </trans-unit>
        <trans-unit id="26d6496f0abe249eb6031e04f690bcc82205e6b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Prior to PHP 7.1, the arguments are not evaluated if there is no constructor function defined.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在PHP 7.1之前，如果未定义构造函数，则不评估参数。</target>
        </trans-unit>
        <trans-unit id="cdb41db87d1426c8091b6f46412c593fa05195d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Properties and constants cannot be declared final, only classes and methods may be declared as final.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：属性和常量不能声明为final，只能将类和方法声明为final。</target>
        </trans-unit>
        <trans-unit id="0ed779e8909975161121e44ec5a3f79b015f8e90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Properties cannot be declared final, only classes and methods may be declared as final.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：不能将属性声明为final，只能将类和方法声明为final。</target>
        </trans-unit>
        <trans-unit id="0ebe75f6bb25bcb471ab22cf3ce8d75f68de5a2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Recursive function/method calls with over 100-200 recursion levels can smash the stack and cause a termination of the current script. Especially, infinite recursion is considered a programming error.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：具有超过100-200个递归级别的递归函数/方法调用可能会破坏堆栈并导致当前脚本终止。特别是，无限递归被认为是编程错误。</target>
        </trans-unit>
        <trans-unit id="bb4371ac322cbf4b59db66161527f3fbb65bddc6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  SQLite3 may need to create &lt;a href=&quot;https://sqlite.org/tempfiles.html&quot;&gt;&amp;raquo; temporary files&lt;/a&gt; during the execution of queries, so the respective directories may have to be writable.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在执行查询期间，SQLite3可能需要创建&lt;a href=&quot;https://sqlite.org/tempfiles.html&quot;&gt;&amp;raquo;临时文件&lt;/a&gt;，因此各个目录可能必须是可写的。</target>
        </trans-unit>
        <trans-unit id="694ab7d50c7e6ccbb3a09fd6823b6a2150a80408" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Setting &lt;code&gt;new_cache_expire&lt;/code&gt; is of value only, if &lt;em&gt;session.cache_limiter&lt;/em&gt; is set to a value &lt;em&gt;different&lt;/em&gt; from &lt;em&gt;nocache&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：仅将&lt;em&gt;session.cache_limiter&lt;/em&gt;设置为与&lt;em&gt;nocache &lt;/em&gt;&lt;em&gt;不同&lt;/em&gt;的值时，才设置 &lt;code&gt;new_cache_expire&lt;/code&gt; 为值。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="24824000fb74f96a62c100c52ea436490724b66b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Setting &lt;code&gt;value&lt;/code&gt; is of value only, if &lt;code&gt;session.cache_limiter&lt;/code&gt; is set to a value &lt;em&gt;different&lt;/em&gt; from &lt;code&gt;nocache&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：设定 &lt;code&gt;value&lt;/code&gt; 是值而已，如果 &lt;code&gt;session.cache_limiter&lt;/code&gt; 设置的值&lt;em&gt;不同&lt;/em&gt;的 &lt;code&gt;nocache&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53761471548a74868f00e6d53ef46953c4dc67b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Stream data is read from resources (both local and remote) in chunks, with any unconsumed data kept in internal buffers. When a new filter is appended to a stream, data in the internal buffers is processed through the new filter at that time. This differs from the behavior of &lt;a href=&quot;function.stream-filter-prepend&quot;&gt;stream_filter_prepend()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：流数据是从资源（本地和远程）中分块读取的，所有未使用的数据都保存在内部缓冲区中。将新的筛选器附加到流后，此时将通过新的筛选器处理内部缓冲区中的数据。这与&lt;a href=&quot;function.stream-filter-prepend&quot;&gt;stream_filter_prepend（）&lt;/a&gt;的行为不同。</target>
        </trans-unit>
        <trans-unit id="7adb115ef5028ea31f24803997913d9a712c050f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Stream data is read from resources (both local and remote) in chunks, with any unconsumed data kept in internal buffers. When a new filter is prepended to a stream, data in the internal buffers, which has already been processed through other filters will &lt;em&gt;not&lt;/em&gt; be reprocessed through the new filter at that time. This differs from the behavior of &lt;a href=&quot;function.stream-filter-append&quot;&gt;stream_filter_append()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：流数据是从资源（本地和远程）中分块读取的，所有未使用的数据都保存在内部缓冲区中。当新过滤器添加到流之前时，内部缓冲区中已经通过其他过滤器处理过的数据将&lt;em&gt;不会&lt;/em&gt;在那时通过新过滤器重新处理。这与&lt;a href=&quot;function.stream-filter-append&quot;&gt;stream_filter_append（）&lt;/a&gt;的行为不同。</target>
        </trans-unit>
        <trans-unit id="3cdb3640a5107c74a68f86d09b5a9397806a544c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  String positions start at 0, and not 1.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：字符串位置从0开始，而不是1。</target>
        </trans-unit>
        <trans-unit id="6c19aef782d35fb01a5645fc8ffbd12f7bf57d3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The &lt;code&gt;encoding&lt;/code&gt; parameter was moved from the third position to the fourth in PHP 5.2.0. For backward compatibility, &lt;code&gt;encoding&lt;/code&gt; can be specified as the third parameter, but doing so is deprecated and will be removed in the future.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在PHP 5.2.0中， &lt;code&gt;encoding&lt;/code&gt; 参数从第三位置移到了第四位置。为了向后兼容，可以将 &lt;code&gt;encoding&lt;/code&gt; 指定为第三个参数，但是不建议这样做，以后会删除它。</target>
        </trans-unit>
        <trans-unit id="db0510aa23a37d03f0c1cbbf3b91c576c4438335" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The &lt;strong&gt;&lt;code&gt;GLOB_BRACE&lt;/code&gt;&lt;/strong&gt; flag is not available on some non GNU systems, like Solaris.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt; &lt;code&gt;GLOB_BRACE&lt;/code&gt; &lt;/strong&gt;标志在某些非GNU系统（例如Solaris）上不可用。</target>
        </trans-unit>
        <trans-unit id="cba581f28bd754ab7f12363a75851ed96d225119" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The &lt;strong&gt;ssh2_auth_agent()&lt;/strong&gt; function will only be available when the ssh2 extension is compiled with libssh &amp;gt;= 1.2.3.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：仅当使用libssh&amp;gt; = 1.2.3编译ssh2扩展名时，&lt;strong&gt;ssh2_auth_agent（）&lt;/strong&gt;函数才可用。</target>
        </trans-unit>
        <trans-unit id="a61d4f1f4d106376c5c2d2c8552b36b63c5ea6c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The &lt;var&gt;php.ini&lt;/var&gt; setting mysqli.reconnect is ignored by the mysqlnd driver, so automatic reconnection is never attempted.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：mysqlnd驱动程序将忽略 &lt;var&gt;php.ini&lt;/var&gt; 设置mysqli.reconnect，因此永远不会尝试自动重新连接。</target>
        </trans-unit>
        <trans-unit id="4b29cbf441938c5e53054a96dfbab056074c710f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The @-operator works only on &lt;a href=&quot;language.expressions&quot;&gt;expressions&lt;/a&gt;. A simple rule of thumb is: if you can take the value of something, you can prepend the @ operator to it. For instance, you can prepend it to variables, function and &lt;a href=&quot;function.include&quot;&gt;include&lt;/a&gt; calls, constants, and so forth. You cannot prepend it to function or class definitions, or conditional structures such as &lt;code&gt;if&lt;/code&gt; and &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt;, and so forth.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：@ -operator仅适用于&lt;a href=&quot;language.expressions&quot;&gt;表达式&lt;/a&gt;。一个简单的经验法则是：如果可以获取某物的值，则可以在其前面加上@运算符。例如，您可以在变量，函数之前&lt;a href=&quot;function.include&quot;&gt;添加&lt;/a&gt;它，并包括调用，常量等。您不能在函数或类定义或条件结构（例如 &lt;code&gt;if&lt;/code&gt; 和&lt;a href=&quot;control-structures.foreach&quot;&gt;foreach）之前添加它&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ba3c74489a6f3e3ad088fecdbe3a4e82d8dc3b1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The @-operator works only on &lt;a href=&quot;language.expressions&quot;&gt;expressions&lt;/a&gt;. A simple rule of thumb is: if you can take the value of something, you can prepend the @ operator to it. For instance, you can prepend it to variables, function and &lt;a href=&quot;function.include&quot;&gt;include&lt;/a&gt; calls, constants, and so forth. You cannot prepend it to function or class definitions, or conditional structures such as &lt;em&gt;if&lt;/em&gt; and &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt;, and so forth.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：@ -operator仅适用于&lt;a href=&quot;language.expressions&quot;&gt;表达式&lt;/a&gt;。一个简单的经验法则是：如果可以获取某物的值，则可以在其前面加上@运算符。例如，您可以在变量，函数之前&lt;a href=&quot;function.include&quot;&gt;添加&lt;/a&gt;它，并包括调用，常量等。您不能在函数或类定义或条件结构（例如&lt;em&gt;if&lt;/em&gt;和&lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt;等）之前添加它。</target>
        </trans-unit>
        <trans-unit id="05adb63c273cb33db47425c7a9422e413c728301" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The PHP 4 method of declaring a variable with the &lt;em&gt;var&lt;/em&gt; keyword is still supported for compatibility reasons (as a synonym for the public keyword). In PHP 5 before 5.1.3, its usage would generate an &lt;strong&gt;&lt;code&gt;E_STRICT&lt;/code&gt;&lt;/strong&gt; warning.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：出于兼容性原因，仍支持使用&lt;em&gt;var&lt;/em&gt;关键字声明变量的PHP 4方法（作为public关键字的同义词）。在PHP 5 5.1.3之前的版本中，其用法将生成&lt;strong&gt; &lt;code&gt;E_STRICT&lt;/code&gt; &lt;/strong&gt;警告。</target>
        </trans-unit>
        <trans-unit id="797b736ee96a69067001662797f841a9673eb0ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The beginning of an array is indistinguishable from a &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;&lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; element. To make the distinction, check that the &lt;a href=&quot;function.key&quot;&gt;key()&lt;/a&gt; of the &lt;strong&gt;prev()&lt;/strong&gt; element is not &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：数组的开头与&lt;a href=&quot;language.types.boolean&quot;&gt;布尔&lt;/a&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;元素没有区别。为进行区分，检查&lt;a href=&quot;function.key&quot;&gt;键（）&lt;/a&gt;的中&lt;strong&gt;上一个（）&lt;/strong&gt;的元素不是&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="c18d07719aaa1f1b4d1fc68274e2ec190cfc8493" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The beginning of an array is indistinguishable from a bool&lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; element. To make the distinction, check that the &lt;a href=&quot;function.key&quot;&gt;key()&lt;/a&gt; of the &lt;strong&gt;prev()&lt;/strong&gt; element is not &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：数组的开头与布尔&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;元素是无法区分的。为进行区分，检查&lt;a href=&quot;function.key&quot;&gt;键（）&lt;/a&gt;的中&lt;strong&gt;上一个（）&lt;/strong&gt;的元素不是&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="72c11aedb6682845dffefbe596a49bda695eeed2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The behavior of the parameter &lt;code&gt;bestfit&lt;/code&gt; changed in Imagick 3.0.0. Before this version given dimensions 400x400 an image of dimensions 200x150 would be left untouched. In Imagick 3.0.0 and later the image would be scaled up to size 400x300 as this is the &quot;best fit&quot; for the given dimensions. If &lt;code&gt;bestfit&lt;/code&gt; parameter is used both width and height must be given.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在Imagick 3.0.0 中，参数 &lt;code&gt;bestfit&lt;/code&gt; 的行为已更改。在给定尺寸为400x400的此版本之前，尺寸为200x150的图像将保持不变。在Imagick 3.0.0及更高版本中，图像将被放大至400x300，因为这是给定尺寸的&amp;ldquo;最佳匹配&amp;rdquo;。如果使用 &lt;code&gt;bestfit&lt;/code&gt; 参数，则必须同时指定宽度和高度。</target>
        </trans-unit>
        <trans-unit id="1755e66ab2becb6280308a448020d9ba3680a98b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The current implementation never sets &lt;code&gt;whence&lt;/code&gt; to &lt;strong&gt;&lt;code&gt;SEEK_CUR&lt;/code&gt;&lt;/strong&gt;; instead such seeks are internally converted to &lt;strong&gt;&lt;code&gt;SEEK_SET&lt;/code&gt;&lt;/strong&gt; seeks.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：当前实现不落 &lt;code&gt;whence&lt;/code&gt; 来&lt;strong&gt; &lt;code&gt;SEEK_CUR&lt;/code&gt; &lt;/strong&gt; ; 而是将此类搜索在内部转换为&lt;strong&gt; &lt;code&gt;SEEK_SET&lt;/code&gt; 搜索&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="c7a0a181f8b9b9163024948509db90e001cf3889" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The end of an array and the result of calling &lt;strong&gt;current()&lt;/strong&gt; on an empty array are indistinguishable from a &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;&lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; element. To properly traverse an array which may contain &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; elements, see the &lt;strong&gt;foreach()&lt;/strong&gt; function.  To still use &lt;strong&gt;current()&lt;/strong&gt; and properly check if the value is really an element of the array, the &lt;a href=&quot;function.key&quot;&gt;key()&lt;/a&gt; of the &lt;strong&gt;current()&lt;/strong&gt; element should be checked to be strictly different from &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：数组的结尾和在空数组上调用&lt;strong&gt;current（）&lt;/strong&gt;的结果与&lt;a href=&quot;language.types.boolean&quot;&gt;布尔&lt;/a&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;元素没有区别。要正确遍历可能包含&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;元素的数组，请参见&lt;strong&gt;foreach（）&lt;/strong&gt;函数。仍然使用&lt;strong&gt;电流（）&lt;/strong&gt;并正确检查值实际上是数组的元素，该&lt;a href=&quot;function.key&quot;&gt;键（）&lt;/a&gt;中的&lt;strong&gt;电流（）&lt;/strong&gt;元素应该进行检查，以从严格的区别&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="a7452d0225e19d430990169f01cd94f5a95f95c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The end of an array is indistinguishable from a &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;&lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; element. To properly traverse an array which may contain &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; elements, see the &lt;strong&gt;foreach()&lt;/strong&gt; function.  To still use &lt;strong&gt;next()&lt;/strong&gt; and properly check if the end of the array has been reached, verify that the &lt;a href=&quot;function.key&quot;&gt;key()&lt;/a&gt; is &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：数组的结尾与&lt;a href=&quot;language.types.boolean&quot;&gt;布尔&lt;/a&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;元素没有区别。要正确遍历可能包含&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;元素的数组，请参见&lt;strong&gt;foreach（）&lt;/strong&gt;函数。要仍然使用&lt;strong&gt;next（）&lt;/strong&gt;并正确检查是否已到达数组的末尾，请验证&lt;a href=&quot;function.key&quot;&gt;key（）&lt;/a&gt;是否为&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="dfd4118e847789b27a0966bba14e96f0bada8c5a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The end of an array is indistinguishable from a bool&lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; element. To properly traverse an array which may contain &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; elements, see the &lt;strong&gt;foreach()&lt;/strong&gt; function.  To still use &lt;strong&gt;next()&lt;/strong&gt; and properly check if the end of the array has been reached, verify that the &lt;a href=&quot;function.key&quot;&gt;key()&lt;/a&gt; is &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：数组的结尾与布尔&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;元素没有区别。要正确遍历可能包含&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;元素的数组，请参见&lt;strong&gt;foreach（）&lt;/strong&gt;函数。要仍然使用&lt;strong&gt;next（）&lt;/strong&gt;并正确检查是否已到达数组末尾，请验证&lt;a href=&quot;function.key&quot;&gt;key（）&lt;/a&gt;是否为&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="da381c394989540aedcf45039de3323158209f9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The first argument &lt;var&gt;$argv[0]&lt;/var&gt; is always the name that was used to run the script.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：第一个参数 &lt;var&gt;$argv[0]&lt;/var&gt; 始终是用于运行脚本的名称。</target>
        </trans-unit>
        <trans-unit id="15db7245bfd6b0f65aee8d5976e9e2e8196b3d36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The first argument &lt;var&gt;&lt;var&gt;$argv[0]&lt;/var&gt;&lt;/var&gt; is always the name that was used to run the script.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：第一个参数 &lt;var&gt;&lt;var&gt;$argv[0]&lt;/var&gt;&lt;/var&gt; 始终是用于运行脚本的名称。</target>
        </trans-unit>
        <trans-unit id="ed45d5be51e20b04428d670908e05203dbff7251" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The function fails if &lt;code&gt;path&lt;/code&gt; is not a symlink, except on Windows, where the normalized path will be returned.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果 &lt;code&gt;path&lt;/code&gt; 不是符号链接，则该函数将失败，Windows除外，在Windows上将返回规范化的路径。</target>
        </trans-unit>
        <trans-unit id="c2303f023282b25ab083c3482bf47e0e2af21b3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The function must return &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; in order to continue iterating over the &lt;code&gt;iterator&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：该函数必须返回&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;才能继续在 &lt;code&gt;iterator&lt;/code&gt; 上进行迭代。</target>
        </trans-unit>
        <trans-unit id="735c82bb9fe4c06544ab925a4d01d659d90b4393" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The function must return &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; in order to continue iterating over the &lt;code&gt;iterator&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：该函数必须返回&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;才能继续在 &lt;code&gt;iterator&lt;/code&gt; 上进行迭代。</target>
        </trans-unit>
        <trans-unit id="322744b30302faddb91c571cc5849a82c0856652" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The increment/decrement operators only affect numbers and strings. Arrays, objects and resources are not affected. Decrementing &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; values has no effect too, but incrementing them results in &lt;em&gt;1&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：增/减运算符仅影响数字和字符串。数组，对象和资源不受影响。减小&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;值也没有任何作用，但增大它们的结果为&lt;em&gt;1&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e9c1a82bda33989f2fca8c9be77ef726cfa83274" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The increment/decrement operators only affect numbers and strings. Arrays, objects, booleans and resources are not affected. Decrementing &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; values has no effect too, but incrementing them results in &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：递增/递减运算符仅影响数字和字符串。数组，对象，布尔值和资源均不受影响。减小&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; &lt;/strong&gt;值也没有任何效果，但增大它们的结果为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f259d59021d56bcc068b13a1d6561cbb5aa43b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The information about icons are retrieved from the icon with the highest bitrate.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：有关图标的信息是从比特率最高的图标中检索的。</target>
        </trans-unit>
        <trans-unit id="f2cc2aeda8619daf8f16a52ab8f3fcbd28a9cacd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The order of elements with identical priority is &lt;em&gt;undefined&lt;/em&gt;. It may differ from the order in which they have been inserted.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：具有相同优先级的元素的顺序是&lt;em&gt;不确定的&lt;/em&gt;。它的插入顺序可能有所不同。</target>
        </trans-unit>
        <trans-unit id="94bd3873bfac6444d2ec533f5f9f858b9c481eca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The result of &lt;strong&gt;&lt;code&gt;IMG_FILTER_SCATTER&lt;/code&gt;&lt;/strong&gt; is always random.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt; &lt;code&gt;IMG_FILTER_SCATTER&lt;/code&gt; &lt;/strong&gt;的结果&lt;strong&gt;始终&lt;/strong&gt;是随机的。</target>
        </trans-unit>
        <trans-unit id="4188f8734d5e15f896403416f3a85fd16cb440a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The result of a &lt;code&gt;match&lt;/code&gt; expression does not need to be used.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：不需要使用 &lt;code&gt;match&lt;/code&gt; 表达式的结果。</target>
        </trans-unit>
        <trans-unit id="87e5a2aed459c0d10f1aed0f20325d092b20541a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The results of calling &lt;strong&gt;current()&lt;/strong&gt; on an empty array and on an array, whose internal pointer points beyond the end of the elements, are indistinguishable from a bool&lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; element. To properly traverse an array which may contain &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; elements, see the &lt;strong&gt;foreach()&lt;/strong&gt; function.  To still use &lt;strong&gt;current()&lt;/strong&gt; and properly check if the value is really an element of the array, the &lt;a href=&quot;function.key&quot;&gt;key()&lt;/a&gt; of the &lt;strong&gt;current()&lt;/strong&gt; element should be checked to be strictly different from &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在空数组和内部指针指向元素末尾的数组上调用&lt;strong&gt;current（）&lt;/strong&gt;的结果与布尔&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;元素是无法区分的。要正确遍历可能包含&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;元素的数组，请参见&lt;strong&gt;foreach（）&lt;/strong&gt;函数。仍然使用&lt;strong&gt;电流（）&lt;/strong&gt;并正确检查值实际上是数组的元素，该&lt;a href=&quot;function.key&quot;&gt;键（）&lt;/a&gt;中的&lt;strong&gt;电流（）&lt;/strong&gt;元素应该进行检查，以从严格的区别&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="ebdbe6afb65aaa13f7e20882af52c2b9177ae76d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The return value for an empty array is indistinguishable from the return value in case of an array which has a &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;&lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; first element. To properly check the value of the first element of an array which may contain &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; elements, first check the &lt;a href=&quot;function.count&quot;&gt;count()&lt;/a&gt; of the array, or check that &lt;a href=&quot;function.key&quot;&gt;key()&lt;/a&gt; is not &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;, after calling &lt;strong&gt;reset()&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果数组具有&lt;a href=&quot;language.types.boolean&quot;&gt;布尔值&lt;/a&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 的&lt;/strong&gt;第一个元素，则空数组的返回值与返回值是无法区分的。要正确检查可能包含&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;元素的数组的第一个元素的&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;，请在调用&lt;strong&gt;reset（）&lt;/strong&gt;之后，首先检查数组的&lt;a href=&quot;function.count&quot;&gt;count（）&lt;/a&gt;或检查&lt;a href=&quot;function.key&quot;&gt;key（）&lt;/a&gt;是否为&lt;strong&gt;NULL&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bd340525b5fdc67e77aa821e291a618ac8834d96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The return value for an empty array is indistinguishable from the return value in case of an array which has a bool&lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; first element. To properly check the value of the first element of an array which may contain &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; elements, first check the &lt;a href=&quot;function.count&quot;&gt;count()&lt;/a&gt; of the array, or check that &lt;a href=&quot;function.key&quot;&gt;key()&lt;/a&gt; is not &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt;, after calling &lt;strong&gt;reset()&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果数组的第一个元素为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;，则空数组的返回值与返回值是无法区分的。要正确检查可能包含&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;元素的数组的第一个元素的&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; &lt;/strong&gt;，请在调用&lt;strong&gt;reset（）&lt;/strong&gt;之后，首先检查数组的&lt;a href=&quot;function.count&quot;&gt;count（）&lt;/a&gt;或检查&lt;a href=&quot;function.key&quot;&gt;key（）&lt;/a&gt;不为&lt;strong&gt;null&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1dea2055c0c426d76706fda7a6c453281ce4bb9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The script's filename is always passed as an argument to the script, therefore the minimum value of &lt;var&gt;$argc&lt;/var&gt; is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：脚本的文件名总是作为参数传递给脚本，因此 &lt;var&gt;$argc&lt;/var&gt; 的最小值为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5511fc29bad4ece699359df6aa515af2719e6146" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The script's filename is always passed as an argument to the script, therefore the minimum value of &lt;var&gt;&lt;var&gt;$argc&lt;/var&gt;&lt;/var&gt; is &lt;em&gt;1&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：脚本的文件名始终作为参数传递给脚本，因此 &lt;var&gt;&lt;var&gt;$argc&lt;/var&gt;&lt;/var&gt; 的最小值为&lt;em&gt;1&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="fe2cfb580c5e528bcfee5350c86ee9470c01f6c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  There are reserved words which must not be used as keys for ini files. These include: &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;yes&lt;/code&gt;, &lt;code&gt;no&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;on&lt;/code&gt;, &lt;code&gt;off&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt;. Values &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;off&lt;/code&gt;, &lt;code&gt;no&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; result in &lt;code&gt;&quot;&quot;&lt;/code&gt;, and values &lt;code&gt;on&lt;/code&gt;, &lt;code&gt;yes&lt;/code&gt; and &lt;code&gt;true&lt;/code&gt; result in &lt;code&gt;&quot;1&quot;&lt;/code&gt;, unless &lt;strong&gt;&lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt;&lt;/strong&gt; mode is used (as of PHP 5.6.1). Characters &lt;code&gt;?{}|&amp;amp;~!()^&quot;&lt;/code&gt; must not be used anywhere in the key and have a special meaning in the value.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：有些保留字不能用作ini文件的键。其中包括： &lt;code&gt;null&lt;/code&gt; ， &lt;code&gt;yes&lt;/code&gt; ， &lt;code&gt;no&lt;/code&gt; ， &lt;code&gt;true&lt;/code&gt; ， &lt;code&gt;false&lt;/code&gt; ， &lt;code&gt;on&lt;/code&gt; ， &lt;code&gt;off&lt;/code&gt; ， &lt;code&gt;none&lt;/code&gt; 。除非使用&lt;strong&gt; &lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt; &lt;/strong&gt;模式（自PHP 5.6.1起），否则，值 &lt;code&gt;null&lt;/code&gt; ， &lt;code&gt;off&lt;/code&gt; ， &lt;code&gt;no&lt;/code&gt; 和 &lt;code&gt;false&lt;/code&gt; 的结果为 &lt;code&gt;&quot;&quot;&lt;/code&gt; ，而值 &lt;code&gt;on&lt;/code&gt; ， &lt;code&gt;yes&lt;/code&gt; 和 &lt;code&gt;true&lt;/code&gt; 的结果为 &lt;code&gt;&quot;1&quot;&lt;/code&gt; 。字符 &lt;code&gt;?{}|&amp;amp;~!()^&quot;&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;不得在键的任何位置使用，并且在值中具有特殊含义。</target>
        </trans-unit>
        <trans-unit id="305810a9adbb9aef8de49f1a7a0201b200028f1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  There are reserved words which must not be used as keys for ini files. These include: &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;yes&lt;/code&gt;, &lt;code&gt;no&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;on&lt;/code&gt;, &lt;code&gt;off&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt;. Values &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;off&lt;/code&gt;, &lt;code&gt;no&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; result in &lt;code&gt;&quot;&quot;&lt;/code&gt;, and values &lt;code&gt;on&lt;/code&gt;, &lt;code&gt;yes&lt;/code&gt; and &lt;code&gt;true&lt;/code&gt; result in &lt;code&gt;&quot;1&quot;&lt;/code&gt;, unless &lt;strong&gt;&lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt;&lt;/strong&gt; mode is used. Characters &lt;code&gt;?{}|&amp;amp;~![()^&quot;&lt;/code&gt; must not be used anywhere in the key and have a special meaning in the value.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：有些保留字不能用作ini文件的键。其中包括： &lt;code&gt;null&lt;/code&gt; ， &lt;code&gt;yes&lt;/code&gt; ， &lt;code&gt;no&lt;/code&gt; ， &lt;code&gt;true&lt;/code&gt; ， &lt;code&gt;false&lt;/code&gt; ， &lt;code&gt;on&lt;/code&gt; ， &lt;code&gt;off&lt;/code&gt; ， &lt;code&gt;none&lt;/code&gt; 。除非使用&lt;strong&gt; &lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt; &lt;/strong&gt;模式，否则值 &lt;code&gt;null&lt;/code&gt; ， &lt;code&gt;off&lt;/code&gt; ， &lt;code&gt;no&lt;/code&gt; 和 &lt;code&gt;false&lt;/code&gt; 的结果为 &lt;code&gt;&quot;&quot;&lt;/code&gt; ，而值 &lt;code&gt;on&lt;/code&gt; ， &lt;code&gt;yes&lt;/code&gt; 和 &lt;code&gt;true&lt;/code&gt; 的结果为 &lt;code&gt;&quot;1&quot;&lt;/code&gt; 。字符 &lt;code&gt;?{}|&amp;amp;~![()^&quot;&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt; 不得在键的任何位置使用，并且在值中具有特殊含义。</target>
        </trans-unit>
        <trans-unit id="f9235f1073dec62446b1b549e4a75de43fe4d4a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  There are reserved words which must not be used as keys for ini files. These include: &lt;em&gt;null&lt;/em&gt;, &lt;em&gt;yes&lt;/em&gt;, &lt;em&gt;no&lt;/em&gt;, &lt;em&gt;true&lt;/em&gt;, &lt;em&gt;false&lt;/em&gt;, &lt;em&gt;on&lt;/em&gt;, &lt;em&gt;off&lt;/em&gt;, &lt;em&gt;none&lt;/em&gt;. Values &lt;em&gt;null&lt;/em&gt;, &lt;em&gt;off&lt;/em&gt;, &lt;em&gt;no&lt;/em&gt; and &lt;em&gt;false&lt;/em&gt; result in &lt;em&gt;&quot;&quot;&lt;/em&gt;, and values &lt;em&gt;on&lt;/em&gt;, &lt;em&gt;yes&lt;/em&gt; and &lt;em&gt;true&lt;/em&gt; result in &lt;em&gt;&quot;1&quot;&lt;/em&gt;, unless &lt;strong&gt;&lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt;&lt;/strong&gt; mode is used (as of PHP 5.6.1). Characters &lt;em&gt;?{}|&amp;amp;~!()^&quot;&lt;/em&gt; must not be used anywhere in the key and have a special meaning in the value.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：有些保留字不能用作ini文件的键。其中包括：&lt;em&gt;null&lt;/em&gt;，&lt;em&gt;yes&lt;/em&gt;，&lt;em&gt;no&lt;/em&gt;，&lt;em&gt;true&lt;/em&gt;，&lt;em&gt;false&lt;/em&gt;，&lt;em&gt;on&lt;/em&gt;，&lt;em&gt;off&lt;/em&gt;，&lt;em&gt;none&lt;/em&gt;。除非使用&lt;strong&gt; &lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt; &lt;/strong&gt;模式（自PHP 5.6.1起），否则，值&lt;em&gt;null&lt;/em&gt;，&lt;em&gt;off&lt;/em&gt;，&lt;em&gt;no&lt;/em&gt;和&lt;em&gt;false的&lt;/em&gt;结果为&lt;em&gt;&amp;ldquo;&amp;rdquo;&lt;/em&gt;，而值&lt;em&gt;on&lt;/em&gt;，&lt;em&gt;yes&lt;/em&gt;和&lt;em&gt;true的&lt;/em&gt;结果为&lt;em&gt;&amp;ldquo; 1&amp;rdquo;&lt;/em&gt;。字符&lt;em&gt;？{} |＆〜！（）^&amp;ldquo;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt; 不得在键的任何位置使用，并且在值中具有特殊含义。</target>
        </trans-unit>
        <trans-unit id="68ce4c01eeacb9d0a7b15639a5fc5874855c67bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  There are reserved words which must not be used as keys for ini files. These include: &lt;em&gt;null&lt;/em&gt;, &lt;em&gt;yes&lt;/em&gt;, &lt;em&gt;no&lt;/em&gt;, &lt;em&gt;true&lt;/em&gt;, &lt;em&gt;false&lt;/em&gt;, &lt;em&gt;on&lt;/em&gt;, &lt;em&gt;off&lt;/em&gt;, &lt;em&gt;none&lt;/em&gt;. Values &lt;em&gt;null&lt;/em&gt;, &lt;em&gt;off&lt;/em&gt;, &lt;em&gt;no&lt;/em&gt; and &lt;em&gt;false&lt;/em&gt; result in &lt;em&gt;&quot;&quot;&lt;/em&gt;, and values &lt;em&gt;on&lt;/em&gt;, &lt;em&gt;yes&lt;/em&gt; and &lt;em&gt;true&lt;/em&gt; result in &lt;em&gt;&quot;1&quot;&lt;/em&gt;, unless &lt;strong&gt;&lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt;&lt;/strong&gt; mode is used. Characters &lt;em&gt;?{}|&amp;amp;~![()^&quot;&lt;/em&gt; must not be used anywhere in the key and have a special meaning in the value.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：有些保留字不能用作ini文件的键。其中包括：&lt;em&gt;null&lt;/em&gt;，&lt;em&gt;yes&lt;/em&gt;，&lt;em&gt;no&lt;/em&gt;，&lt;em&gt;true&lt;/em&gt;，&lt;em&gt;false&lt;/em&gt;，&lt;em&gt;on&lt;/em&gt;，&lt;em&gt;off&lt;/em&gt;，&lt;em&gt;none&lt;/em&gt;。除非使用&lt;strong&gt; &lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt; &lt;/strong&gt;模式，否则值&lt;em&gt;null&lt;/em&gt;，&lt;em&gt;off&lt;/em&gt;，&lt;em&gt;no&lt;/em&gt;和&lt;em&gt;false的&lt;/em&gt;结果为&lt;em&gt;&amp;ldquo;&amp;rdquo;&lt;/em&gt;，而值&lt;em&gt;on&lt;/em&gt;，&lt;em&gt;yes&lt;/em&gt;和&lt;em&gt;true的&lt;/em&gt;结果为&lt;em&gt;&amp;ldquo; 1&amp;rdquo;&lt;/em&gt;。字符&lt;em&gt;？{} |＆〜！[（）^&amp;ldquo;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt; 不得在键的任何位置使用，并且在值中具有特殊含义。</target>
        </trans-unit>
        <trans-unit id="09f158abad43ad2f1180aac88554afc262d603b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  There is no decrypt function, since &lt;strong&gt;crypt()&lt;/strong&gt; uses a one-way algorithm.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：由于&lt;strong&gt;crypt（）&lt;/strong&gt;使用单向算法，因此没有解密功能。</target>
        </trans-unit>
        <trans-unit id="f135c29340f9d5b367e00c5fa5a8c7b7740e75f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  There is no reference sign on a function call - only on function definitions. Function definitions alone are enough to correctly pass the argument by reference.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：函数调用上没有参考符号-仅在函数定义上。仅函数定义就足以正确地通过引用传递参数。</target>
        </trans-unit>
        <trans-unit id="b14586a935cc6f95f977cf49ccb2eff457062906" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  There is no reference sign on a function call - only on function definitions. Function definitions alone are enough to correctly pass the argument by reference. As of PHP 5.3.0, you will get a warning saying that &quot;call-time pass-by-reference&quot; is deprecated when you use &amp;amp; in &lt;em&gt;foo(&amp;amp;$a);&lt;/em&gt;. And as of PHP 5.4.0, call-time pass-by-reference was removed, so using it will raise a fatal error.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：函数调用上没有参考符号-仅在函数定义上。仅函数定义就足以正确地通过引用传递参数。从PHP 5.3.0开始，您将得到一条警告，指出在&lt;em&gt;foo（＆$ a）;中&lt;/em&gt;使用＆时，&amp;ldquo;调用时传递引用&amp;rdquo;已被弃用&lt;em&gt;。&lt;/em&gt;。从PHP 5.4.0开始，调用时传递引用被删除，因此使用它会引发致命错误。</target>
        </trans-unit>
        <trans-unit id="846aa58546215fcf2af87c1ef70a75ce1e851279" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  There should not be a space between the defined file extensions.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：定义的文件扩展名之间不应有空格。</target>
        </trans-unit>
        <trans-unit id="162b17373ec79e11adcc7f9f8189c49119424bb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This checks the current node, not the entire document.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：这将检查当前节点，而不是整个文档。</target>
        </trans-unit>
        <trans-unit id="9892df88482103c844cb2df9bedf90b073de04a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This does not guarantee that the type is &amp;ldquo;minimal&amp;rdquo;, because doing so would require loading all used class types.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：这不能保证类型为&amp;ldquo;最小&amp;rdquo;，因为这样做将需要加载所有使用的类类型。</target>
        </trans-unit>
        <trans-unit id="d24de6799f8d49feef323c75f4cd70637edb3b4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This does not mean to &lt;em&gt;always&lt;/em&gt; quote the key. Do not quote keys which are &lt;a href=&quot;language.constants&quot;&gt;constants&lt;/a&gt; or &lt;a href=&quot;https://secure.php.net/manual/en/language.variables.php&quot;&gt;variables&lt;/a&gt;, as this will prevent PHP from interpreting them.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：这并不意味着&lt;em&gt;总是&lt;/em&gt;引用密钥。不要用引号作为&lt;a href=&quot;language.constants&quot;&gt;常量&lt;/a&gt;或&lt;a href=&quot;https://secure.php.net/manual/en/language.variables.php&quot;&gt;变量的&lt;/a&gt;键，因为这将阻止PHP解释它们。</target>
        </trans-unit>
        <trans-unit id="4f56eaccd8cc1767274e37d7547c6a8293ba256b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This does not mean to &lt;em&gt;always&lt;/em&gt; quote the key. Do not quote keys which are &lt;a href=&quot;language.constants&quot;&gt;constants&lt;/a&gt; or &lt;a href=&quot;https://www.php.net/manual/en/language.variables.php&quot;&gt;variables&lt;/a&gt;, as this will prevent PHP from interpreting them.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：这并不意味着&lt;em&gt;总是&lt;/em&gt;引用密钥。不要用引号作为&lt;a href=&quot;language.constants&quot;&gt;常量&lt;/a&gt;或&lt;a href=&quot;https://www.php.net/manual/en/language.variables.php&quot;&gt;变量的&lt;/a&gt;键，因为这将阻止PHP解释它们。</target>
        </trans-unit>
        <trans-unit id="d7538a5249f4cb09e5a0782ceb1f4693aa5c3e6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This format is not compatible with ISO-8601, but is left this way for backward compatibility reasons. Use &lt;strong&gt;&lt;code&gt;DateTime::ATOM&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;DATE_ATOM&lt;/code&gt;&lt;/strong&gt; for compatibility with ISO-8601 instead.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此格式与ISO-8601不兼容，但出于向后兼容的原因而以这种方式保留。请使用&lt;strong&gt; &lt;code&gt;DateTime::ATOM&lt;/code&gt; &lt;/strong&gt;或&lt;strong&gt; &lt;code&gt;DATE_ATOM&lt;/code&gt; &lt;/strong&gt;来与ISO-8601兼容。</target>
        </trans-unit>
        <trans-unit id="3123a11a4f68ecfb64e3ecc819f2f08878026bd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function does &lt;em&gt;not&lt;/em&gt; open a connection. It checks whether the given parameters are plausible and can be used to open a connection as soon as one is needed.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此功能&lt;em&gt;无法&lt;/em&gt;打开连接。它检查给定的参数是否合理，并在需要时可用于打开连接。</target>
        </trans-unit>
        <trans-unit id="f0a859db2e40dbb3ed6ff0255f23af3e88d41027" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function does not have any parameters for specifying authentication, so a username and password must be set using &lt;a href=&quot;function.svn-auth-set-parameter&quot;&gt;svn_auth_set_parameter()&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此函数没有用于指定身份验证的任何参数，因此必须使用&lt;a href=&quot;function.svn-auth-set-parameter&quot;&gt;svn_auth_set_parameter（）&lt;/a&gt;设置用户名和密码</target>
        </trans-unit>
        <trans-unit id="85d91568fc1bcd1472d151acd63555d4f778b97a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function exists when compiled with DBMaker, IBM DB2 or UnixODBC support.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：使用DBMaker，IBM DB2或UnixODBC支持进行编译时，此函数存在。</target>
        </trans-unit>
        <trans-unit id="086488323dedb95eeaafd4b5d8e5b5dd95fcaa35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function is available only on Windows.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此功能仅在Windows上可用。</target>
        </trans-unit>
        <trans-unit id="644eb1afabe7efc3061063ab30e6e8d2bc59ec52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function is only available with Zend Engine 2 (PHP &amp;gt;= 5.0.0).</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此功能仅在Zend Engine 2（PHP&amp;gt; = 5.0.0）中可用。</target>
        </trans-unit>
        <trans-unit id="beccaa590a96a59db1a663b37d10711704b52838" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function is similar to &lt;a href=&quot;function.ob-end-flush&quot;&gt;ob_end_flush()&lt;/a&gt;, except that this function also returns the buffer as a string.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此函数类似于&lt;a href=&quot;function.ob-end-flush&quot;&gt;ob_end_flush（）&lt;/a&gt;，除了此函数还以字符串形式返回缓冲区。</target>
        </trans-unit>
        <trans-unit id="c2e68509685046a6d20b541b442887cf98b838f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function is similar to &lt;a href=&quot;function.ob-get-flush&quot;&gt;ob_get_flush()&lt;/a&gt;, except that &lt;a href=&quot;function.ob-get-flush&quot;&gt;ob_get_flush()&lt;/a&gt; returns the buffer as a string.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此函数类似于&lt;a href=&quot;function.ob-get-flush&quot;&gt;ob_get_flush（）&lt;/a&gt;，不同之处在于&lt;a href=&quot;function.ob-get-flush&quot;&gt;ob_get_flush（）&lt;/a&gt;以字符串形式返回缓冲区。</target>
        </trans-unit>
        <trans-unit id="b7d2f676b8b5b4d7a5612a0d41d2cbfd2243c4b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function isn't available on some systems (e.g. old Sun OS).</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此功能在某些系统（例如旧的Sun OS）上不可用。</target>
        </trans-unit>
        <trans-unit id="f6ef7485a1c3bdef1ade48d6c3a1d55b3ac077ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using, for example, &lt;code&gt;array_diff_assoc($array1[0], $array2[0]);&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此函数仅检查n维数组的一维。当然，您可以使用例如 &lt;code&gt;array_diff_assoc($array1[0], $array2[0]);&lt;/code&gt; 来检查更深的维度。。</target>
        </trans-unit>
        <trans-unit id="3653abc4878c639f8325e01b39301d0a68f7c3a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using, for example, &lt;em&gt;array_diff_assoc($array1[0], $array2[0]);&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此函数仅检查n维数组的一维。当然，您可以使用例如&lt;em&gt;array_diff_assoc（$ array1 [0]，$ array2 [0]）;&lt;/em&gt;来检查更深的维度&lt;em&gt;。&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="6e1a1f98f0f2ff03551021585d437e30329aa16f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function requires ICU version &amp;ge; 52.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此功能要求ICU版本&amp;ge;52。</target>
        </trans-unit>
        <trans-unit id="121694e1e21eace6dcadd5cc54238c7ed869c233" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function returns a copy of the passed arguments only, and does not account for default (non-passed) arguments.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此函数仅返回传递的参数的副本，而不考虑默认（未传递）的参数。</target>
        </trans-unit>
        <trans-unit id="a322b4636aabdacff576595d9702ecba142a1c9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This option is only used when &lt;code&gt;timezoneGroup&lt;/code&gt; is set to &lt;strong&gt;&lt;code&gt;DateTimeZone::PER_COUNTRY&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：仅当 &lt;code&gt;timezoneGroup&lt;/code&gt; 设置为&lt;strong&gt; &lt;code&gt;DateTimeZone::PER_COUNTRY&lt;/code&gt; &lt;/strong&gt;时，才使用此选项。</target>
        </trans-unit>
        <trans-unit id="da9ceb2ecac7005ea12d39a71d6ea3e1ad30e960" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This option is only used when &lt;code&gt;what&lt;/code&gt; is set to &lt;strong&gt;&lt;code&gt;DateTimeZone::PER_COUNTRY&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：仅当设置为&lt;strong&gt; &lt;code&gt;DateTimeZone::PER_COUNTRY&lt;/code&gt; &lt;/strong&gt;时 &lt;code&gt;what&lt;/code&gt; 才使用此选项。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="157e9157d41b3f424295cecc0d6b5bb17ba35e9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This parameter is case-insensitive.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此参数不区分大小写。</target>
        </trans-unit>
        <trans-unit id="27fd8e39a2b20c5953200afead4bcbe3fd858c84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This parameter only applies when not making asynchronous connection attempts.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：仅当不进行异步连接尝试时，此参数才适用。</target>
        </trans-unit>
        <trans-unit id="51c5dc82036ce59170b3b7ec874a7f7801584627" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This variable is not available when &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.register-argc-argv&quot;&gt;register_argc_argv&lt;/a&gt; is disabled.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：禁用&lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.register-argc-argv&quot;&gt;register_argc_argv&lt;/a&gt;时，此变量不可用。</target>
        </trans-unit>
        <trans-unit id="8b03f5913c353d6954d243df8b0628212a6650c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This variable is not available when &lt;a href=&quot;https://www.php.net/manual/en/ini.core.php#ini.register-argc-argv&quot;&gt;register_argc_argv&lt;/a&gt; is disabled.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：禁用&lt;a href=&quot;https://www.php.net/manual/en/ini.core.php#ini.register-argc-argv&quot;&gt;register_argc_argv&lt;/a&gt;时，此变量不可用。</target>
        </trans-unit>
        <trans-unit id="d9695c975a308015f8dd54b51ddec8923a426a88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  To check if a constant is set, use the &lt;a href=&quot;function.defined&quot;&gt;defined()&lt;/a&gt; function.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：要检查是否设置了常量，请使用&lt;a href=&quot;function.defined&quot;&gt;define（）&lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="3ab79ce262efeb9f7078f4ddfff9f82f14037f29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  To check the type and value of an &lt;a href=&quot;language.expressions&quot;&gt;expression&lt;/a&gt;, use the &lt;a href=&quot;function.var-dump&quot;&gt;var_dump()&lt;/a&gt; function.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：要检查&lt;a href=&quot;language.expressions&quot;&gt;表达式&lt;/a&gt;的类型和值，请使用&lt;a href=&quot;function.var-dump&quot;&gt;var_dump（）&lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="349f12f0a9978d89cf6c3c08574810acbd90995d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  To reiterate, inside a double-quoted &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, it's valid to not surround array indexes with quotes so &lt;em&gt;&quot;$foo[bar]&quot;&lt;/em&gt; is valid. See the above examples for details on why as well as the section on &lt;a href=&quot;language.types.string#language.types.string.parsing&quot;&gt;variable parsing in strings&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：重申一下，在双引号&lt;a href=&quot;language.types.string&quot;&gt;字符串内&lt;/a&gt;，不要用引号将数组索引引起来，因此&lt;em&gt;&amp;ldquo; $ foo [bar]&amp;rdquo;&lt;/em&gt;有效。有关原因的详细信息，请参见以上示例，以及有关&lt;a href=&quot;language.types.string#language.types.string.parsing&quot;&gt;字符串中的变量解析&lt;/a&gt;的部分。</target>
        </trans-unit>
        <trans-unit id="96771b1de12e1e4b3413991d33cee2b3974791c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  To reiterate, inside a double-quoted string, it's valid to not surround array indexes with quotes so &lt;code&gt;&quot;$foo[bar]&quot;&lt;/code&gt; is valid. See the above examples for details on why as well as the section on &lt;a href=&quot;language.types.string#language.types.string.parsing&quot;&gt;variable parsing in strings&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：重申一下，在双引号字符串内，不要用引号将数组索引引起来，因此 &lt;code&gt;&quot;$foo[bar]&quot;&lt;/code&gt; 有效。有关原因的详细信息，请参见上面的示例，以及有关&lt;a href=&quot;language.types.string#language.types.string.parsing&quot;&gt;字符串中的变量解析&lt;/a&gt;的部分。</target>
        </trans-unit>
        <trans-unit id="8e4f8270fe3df65acb6c25f69a2a4055a8bcf022" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  To remove a set of stored constants (without clearing the entire cache), an empty array may be passed as the &lt;code&gt;constants&lt;/code&gt; parameter, effectively clearing the stored value(s).</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：要删除一组存储的常量（不清除整个缓存），可以将一个空数组作为 &lt;code&gt;constants&lt;/code&gt; 参数传递，从而有效地清除存储的值。</target>
        </trans-unit>
        <trans-unit id="765cc3ecd63b80a377ea6ff19faa470e92620a26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Two elements are considered equal if and only if &lt;code&gt;(string) $elem1 === (string) $elem2&lt;/code&gt; i.e. when the string representation is the same, the first element will be used.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：当且仅当 &lt;code&gt;(string) $elem1 === (string) $elem2&lt;/code&gt; 时，两个元素才被视为相等，即，当字符串表示形式相同时，将使用第一个元素。</target>
        </trans-unit>
        <trans-unit id="c077c45691f2d4efe83dc2837541b3b27c7c0e85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Two elements are considered equal if and only if &lt;code&gt;(string) $elem1 === (string) $elem2&lt;/code&gt;. In words: when the string representation is the same.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：当且仅当 &lt;code&gt;(string) $elem1 === (string) $elem2&lt;/code&gt; 两个元素才被视为相等。换句话说：当字符串表示相同时。</target>
        </trans-unit>
        <trans-unit id="f5d7b9040667d3bf1f2f6c3456fbb4c445a399cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Two elements are considered equal if and only if &lt;em&gt;(string) $elem1 === (string) $elem2&lt;/em&gt; i.e. when the string representation is the same, the first element will be used.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：当且仅当&lt;em&gt;（string）$ elem1 ===（string）$ elem2&lt;/em&gt;时，两个元素才被视为相等，即，当字符串表示形式相同时，将使用第一个元素。</target>
        </trans-unit>
        <trans-unit id="84577bf1f5b13952e52ff60e46d20a8b198cba5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Two elements are considered equal if and only if &lt;em&gt;(string) $elem1 === (string) $elem2&lt;/em&gt;. In words: when the string representation is the same.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：当且仅当&lt;em&gt;（string）$ elem1 ===（string）$ elem2时，&lt;/em&gt;两个元素才视为相等。换句话说：当字符串表示相同时。</target>
        </trans-unit>
        <trans-unit id="57def86314351f40e0b33ddfbe12beeaacfcb44b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Under Apache 2, you must set &lt;code&gt;UseCanonicalName = On&lt;/code&gt; and &lt;code&gt;ServerName&lt;/code&gt;. Otherwise, this value reflects the hostname supplied by the client, which can be spoofed. It is not safe to rely on this value in security-dependent contexts.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在Apache 2下，必须设置 &lt;code&gt;UseCanonicalName = On&lt;/code&gt; 和 &lt;code&gt;ServerName&lt;/code&gt; 。否则，此值反映客户端提供的主机名，该主机名可能是欺骗的。在与安全性相关的上下文中依赖此值并不安全。</target>
        </trans-unit>
        <trans-unit id="e2f63a6045dd4914f29ab6abfb1100badd24599a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Under Apache 2, you must set &lt;em&gt;UseCanonicalName = On&lt;/em&gt; and &lt;em&gt;ServerName&lt;/em&gt;. Otherwise, this value reflects the hostname supplied by the client, which can be spoofed. It is not safe to rely on this value in security-dependent contexts.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在Apache 2下，必须设置&lt;em&gt;UseCanonicalName = On&lt;/em&gt;和&lt;em&gt;ServerName&lt;/em&gt;。否则，此值反映客户端提供的主机名，该主机名可能是欺骗的。在与安全性相关的上下文中依赖此值并不安全。</target>
        </trans-unit>
        <trans-unit id="d0bc56842964fd270ad8b592290e56ab3069b5ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Under the Apache 2, you must set &lt;code&gt;UseCanonicalName = On&lt;/code&gt;, as well as &lt;code&gt;UseCanonicalPhysicalPort = On&lt;/code&gt; in order to get the physical (real) port, otherwise, this value can be spoofed and it may or may not return the physical port value. It is not safe to rely on this value in security-dependent contexts.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在Apache 2下，必须设置 &lt;code&gt;UseCanonicalName = On&lt;/code&gt; 以及 &lt;code&gt;UseCanonicalPhysicalPort = On&lt;/code&gt; 才能获取物理（真实）端口，否则，该值可能会被欺骗，并且可能会或可能不会返回物理端口值。在与安全性相关的上下文中依赖此值并不安全。</target>
        </trans-unit>
        <trans-unit id="51cce9de520418f96a7faa7962c018914bd9493d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Under the Apache 2, you must set &lt;em&gt;UseCanonicalName = On&lt;/em&gt;, as well as &lt;em&gt;UseCanonicalPhysicalPort = On&lt;/em&gt; in order to get the physical (real) port, otherwise, this value can be spoofed and it may or may not return the physical port value. It is not safe to rely on this value in security-dependent contexts.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在Apache 2下，必须设置&lt;em&gt;UseCanonicalName = On&lt;/em&gt;以及&lt;em&gt;UseCanonicalPhysicalPort = On&lt;/em&gt;才能获取物理（真实）端口，否则，该值可能会被欺骗，并且可能会或可能不会返回物理端口值。在与安全性相关的上下文中依赖此值并不安全。</target>
        </trans-unit>
        <trans-unit id="60c103e7586d1d3eb647abe1be1df359966e3353" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Unlike many other mechanisms in PHP, variables stored using &lt;strong&gt;apc_add()&lt;/strong&gt; will persist between requests (until the value is removed from the cache).</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：与PHP中的许多其他机制不同，使用&lt;strong&gt;apc_add（）&lt;/strong&gt;存储的变量将在请求之间保留（直到从缓存中删除该值）。</target>
        </trans-unit>
        <trans-unit id="9ec604f2b540cec9ecc78ebc50c74a1efa7b688a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Unlike many other mechanisms in PHP, variables stored using &lt;strong&gt;apc_store()&lt;/strong&gt; will persist between requests (until the value is removed from the cache).</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：与PHP中的许多其他机制不同，使用&lt;strong&gt;apc_store（）&lt;/strong&gt;存储的变量将在请求之间保留（直到从缓存中删除该值）。</target>
        </trans-unit>
        <trans-unit id="a6d45e75ec5e51a22e184fed3d4c357cea8982c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Unlike many other mechanisms in PHP, variables stored using &lt;strong&gt;apcu_add()&lt;/strong&gt; will persist between requests (until the value is removed from the cache).</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：与PHP中的许多其他机制不同，使用&lt;strong&gt;apcu_add（）&lt;/strong&gt;存储的变量将在请求之间保留（直到从缓存中删除该值）。</target>
        </trans-unit>
        <trans-unit id="210b896114853955160a24b5014d1d4b60f84cf0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Unlike many other mechanisms in PHP, variables stored using &lt;strong&gt;apcu_store()&lt;/strong&gt; will persist between requests (until the value is removed from the cache).</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：与PHP中的许多其他机制不同，使用&lt;strong&gt;apcu_store（）&lt;/strong&gt;存储的变量将在请求之间保留（直到从缓存中删除该值）。</target>
        </trans-unit>
        <trans-unit id="6fc1423f1e29a0c292323a915cfe6cf3179c4e7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Unlike parameter passing, here you have to use &lt;code&gt;&amp;amp;&lt;/code&gt; in both places - to indicate that you want to return by reference, not a copy, and to indicate that reference binding, rather than usual assignment, should be done for &lt;var&gt;$myValue&lt;/var&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：与参数传递不同，在这里您必须在两个地方都使用 &lt;code&gt;&amp;amp;&lt;/code&gt; －表示要通过引用返回，而不是副本，并表示应该对 &lt;var&gt;$myValue&lt;/var&gt; 进行引用绑定，而不是通常的赋值。</target>
        </trans-unit>
        <trans-unit id="e137587f723afcb027d350b9a8e7aa5a37be09ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Unlike parameter passing, here you have to use &lt;em&gt;&amp;amp;&lt;/em&gt; in both places - to indicate that you want to return by reference, not a copy, and to indicate that reference binding, rather than usual assignment, should be done for &lt;var&gt;&lt;var&gt;$myValue&lt;/var&gt;&lt;/var&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：与参数传递不同，在这里您必须在两个地方都使用&lt;em&gt;＆&lt;/em&gt;－表示要通过引用而不是副本返回，并指出应该对 &lt;var&gt;&lt;var&gt;$myValue&lt;/var&gt;&lt;/var&gt; 进行引用绑定而不是常规分配。</target>
        </trans-unit>
        <trans-unit id="7c9eaef74298666c3c1fc2930a7a1e2b7ecf558f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Unlike the &lt;a href=&quot;language.types.string#language.types.string.syntax.double&quot;&gt;double-quoted&lt;/a&gt; and &lt;a href=&quot;language.types.string#language.types.string.syntax.heredoc&quot;&gt;heredoc&lt;/a&gt; syntaxes, &lt;a href=&quot;https://secure.php.net/manual/en/language.variables.php&quot;&gt;variables&lt;/a&gt; and escape sequences for special characters will &lt;em&gt;not&lt;/em&gt; be expanded when they occur in single quoted &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;s.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：与&lt;a href=&quot;language.types.string#language.types.string.syntax.double&quot;&gt;双引号&lt;/a&gt;和&lt;a href=&quot;language.types.string#language.types.string.syntax.heredoc&quot;&gt;heredoc&lt;/a&gt;语法不同，特殊字符的&lt;a href=&quot;https://secure.php.net/manual/en/language.variables.php&quot;&gt;变量&lt;/a&gt;和转义序列在单引号&lt;a href=&quot;language.types.string&quot;&gt;字符串&lt;/a&gt; s中出现时&lt;em&gt;不会&lt;/em&gt;扩展。</target>
        </trans-unit>
        <trans-unit id="99d8a74e85b39afb2d39ef7b98a8e57eb9ec8120" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Unlike the &lt;a href=&quot;language.types.string#language.types.string.syntax.double&quot;&gt;double-quoted&lt;/a&gt; and &lt;a href=&quot;language.types.string#language.types.string.syntax.heredoc&quot;&gt;heredoc&lt;/a&gt; syntaxes, &lt;a href=&quot;https://www.php.net/manual/en/language.variables.php&quot;&gt;variables&lt;/a&gt; and escape sequences for special characters will &lt;em&gt;not&lt;/em&gt; be expanded when they occur in single quoted strings.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：与&lt;a href=&quot;language.types.string#language.types.string.syntax.double&quot;&gt;双引号&lt;/a&gt;和&lt;a href=&quot;language.types.string#language.types.string.syntax.heredoc&quot;&gt;heredoc&lt;/a&gt;语法&lt;a href=&quot;https://www.php.net/manual/en/language.variables.php&quot;&gt;不同&lt;/a&gt;，特殊字符的变量和转义序列在单引号引起来的字符串中&lt;em&gt;不会&lt;/em&gt;扩展。</target>
        </trans-unit>
        <trans-unit id="85cd43120120e975cead46cf8780d0bc2dc72938" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Updates to supported algorithms by this function (or changes to the default one) must follow the following rules:</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此功能对支持的算法的更新（或更改为默认算法）必须遵循以下规则：</target>
        </trans-unit>
        <trans-unit id="4d882c4e8d0b8ca310c0f96e44c34b232ae24926" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Using separator characters such as &lt;code&gt;[&lt;/code&gt; and &lt;code&gt;]&lt;/code&gt; as part of the cookie name is not compliant to RFC 6265, section 4, but supposed to be supported by user agents according to RFC 6265, section 5.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在cookie名称中使用诸如 &lt;code&gt;[&lt;/code&gt; 和 &lt;code&gt;]&lt;/code&gt; 之类的分隔符不符合RFC 6265第4节的规定，但应由RFC 6265第5节的用户代理支持。</target>
        </trans-unit>
        <trans-unit id="ae24a60ad0faae2f20cf812016c4ef4353a6e6d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Usually an &lt;code&gt;enclosure&lt;/code&gt; character is escaped inside a field by doubling it; however, the &lt;code&gt;escape&lt;/code&gt; character can be used as an alternative. So for the default parameter values &lt;code&gt;&quot;&quot;&lt;/code&gt; and &lt;code&gt;\&quot;&lt;/code&gt; have the same meaning. Other than allowing to escape the &lt;code&gt;enclosure&lt;/code&gt; character the &lt;code&gt;escape&lt;/code&gt; character has no special meaning; it isn't even meant to escape itself.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：一般的 &lt;code&gt;enclosure&lt;/code&gt; 字符由加倍它逃脱的字段内;但是，可以使用 &lt;code&gt;escape&lt;/code&gt; 字符作为替代。因此，对于默认参数值， &lt;code&gt;&quot;&quot;&lt;/code&gt; 和&amp;ldquo; &lt;code&gt;\&quot;&lt;/code&gt; 具有相同的含义。除了允许转义 &lt;code&gt;enclosure&lt;/code&gt; 字符外， &lt;code&gt;escape&lt;/code&gt; 字符没有特殊含义；甚至不打算转义自身。</target>
        </trans-unit>
        <trans-unit id="46338c5286b032f31dd116d6d9b54c14b3cd74bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Usually an &lt;code&gt;enclosure&lt;/code&gt; character is escaped inside a field by doubling it; however, the &lt;code&gt;escape&lt;/code&gt; character can be used as an alternative. So for the default parameter values &lt;em&gt;&quot;&quot;&lt;/em&gt; and &lt;em&gt;\&quot;&lt;/em&gt; have the same meaning. Other than allowing to escape the &lt;code&gt;enclosure&lt;/code&gt; character the &lt;code&gt;escape&lt;/code&gt; character has no special meaning; it isn't even meant to escape itself.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：一般的 &lt;code&gt;enclosure&lt;/code&gt; 字符由加倍它逃脱的字段内;但是，可以使用 &lt;code&gt;escape&lt;/code&gt; 字符作为替代。因此，对于默认参数值，&lt;em&gt;&amp;ldquo;&amp;rdquo;&lt;/em&gt;和&amp;ldquo; &lt;em&gt;\&amp;rdquo;&lt;/em&gt;具有相同的含义。除了允许转义 &lt;code&gt;enclosure&lt;/code&gt; 字符外， &lt;code&gt;escape&lt;/code&gt; 字符没有特殊含义；甚至不打算转义自身。</target>
        </trans-unit>
        <trans-unit id="383c6e2c34b92c97f92ea87e8732e0fe335cac58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Usually an &lt;code&gt;enclosure&lt;/code&gt; character is escpaped inside a field by doubling it; however, the &lt;code&gt;escape&lt;/code&gt; character can be used as an alternative. So for the default parameter values &lt;code&gt;&quot;&quot;&lt;/code&gt; and &lt;code&gt;\&quot;&lt;/code&gt; have the same meaning. Other than allowing to escape the &lt;code&gt;enclosure&lt;/code&gt; character the &lt;code&gt;escape&lt;/code&gt; character has no special meaning; it isn't even meant to escape itself.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：一般的 &lt;code&gt;enclosure&lt;/code&gt; 字符由加倍它escpaped一个字段内; 但是，可以使用 &lt;code&gt;escape&lt;/code&gt; 字符作为替代。因此，对于默认参数值， &lt;code&gt;&quot;&quot;&lt;/code&gt; 和&amp;ldquo; &lt;code&gt;\&quot;&lt;/code&gt; 具有相同的含义。除了允许转义 &lt;code&gt;enclosure&lt;/code&gt; 字符外， &lt;code&gt;escape&lt;/code&gt; 字符没有特殊含义；甚至不打算转义自身。</target>
        </trans-unit>
        <trans-unit id="aeb150e6967633217011e3e87dc20fc4222c836e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Usually an &lt;code&gt;enclosure&lt;/code&gt; character is escpaped inside a field by doubling it; however, the &lt;code&gt;escape&lt;/code&gt; character can be used as an alternative. So for the default parameter values &lt;em&gt;&quot;&quot;&lt;/em&gt; and &lt;em&gt;\&quot;&lt;/em&gt; have the same meaning. Other than allowing to escape the &lt;code&gt;enclosure&lt;/code&gt; character the &lt;code&gt;escape&lt;/code&gt; character has no special meaning; it isn't even meant to escape itself.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：一般的 &lt;code&gt;enclosure&lt;/code&gt; 字符由加倍它escpaped一个字段内; 但是，可以使用 &lt;code&gt;escape&lt;/code&gt; 字符作为替代。因此，对于默认参数值，&lt;em&gt;&amp;ldquo;&amp;rdquo;&lt;/em&gt;和&amp;ldquo; &lt;em&gt;\&amp;rdquo;&lt;/em&gt;具有相同的含义。除了允许转义 &lt;code&gt;enclosure&lt;/code&gt; 字符外， &lt;code&gt;escape&lt;/code&gt; 字符没有特殊含义；甚至不打算转义自身。</target>
        </trans-unit>
        <trans-unit id="a18322738f12775682aedacb86767a80d1a68215" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  WBMP images are Wireless Bitmaps, not Windows Bitmaps. The latter can be loaded with &lt;a href=&quot;function.imagecreatefrombmp&quot;&gt;imagecreatefrombmp()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：WBMP图像是无线位图，而不是Windows位图。后者可以加载&lt;a href=&quot;function.imagecreatefrombmp&quot;&gt;imagecreatefrombmp（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="006c1f8aff28f84c934be3eee74b6a002d23d2fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  When a filter is added for read and write, two instances of the filter are created. &lt;strong&gt;stream_filter_append()&lt;/strong&gt; must be called twice with &lt;strong&gt;&lt;code&gt;STREAM_FILTER_READ&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt;&lt;/strong&gt; to get both filter resources.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：添加过滤器以进行读写时，将创建过滤器的两个实例。必须使用&lt;strong&gt; &lt;code&gt;STREAM_FILTER_READ&lt;/code&gt; &lt;/strong&gt;和&lt;strong&gt; &lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt; &lt;/strong&gt;两次调用&lt;strong&gt;stream_filter_append（）&lt;/strong&gt;才能获得两个过滤器资源。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="354cb586e7b09df5e0042f844fedcd8b9685a0fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  When a filter is added for read and write, two instances of the filter are created. &lt;strong&gt;stream_filter_prepend()&lt;/strong&gt; must be called twice with &lt;strong&gt;&lt;code&gt;STREAM_FILTER_READ&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt;&lt;/strong&gt; to get both filter resources.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：添加过滤器以进行读写时，将创建过滤器的两个实例。必须使用&lt;strong&gt; &lt;code&gt;STREAM_FILTER_READ&lt;/code&gt; &lt;/strong&gt;和&lt;strong&gt; &lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt; &lt;/strong&gt;两次调用&lt;strong&gt;stream_filter_prepend（）&lt;/strong&gt;才能获得两个过滤器资源。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0b24d8ca444de639d1b16f60839b6f1cb024557c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  When control enters &lt;strong&gt;apcu_entry()&lt;/strong&gt; the lock for the cache is acquired exclusively, it is released when control leaves &lt;strong&gt;apcu_entry()&lt;/strong&gt;: In effect, this turns the body of &lt;code&gt;generator&lt;/code&gt; into a critical section, disallowing two processes from executing the same code paths concurrently. In addition, it prohibits the concurrent execution of any other APCu functions, since they will acquire the same lock.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：当控件进入&lt;strong&gt;apcu_entry（）&lt;/strong&gt;时，将&lt;strong&gt;仅以&lt;/strong&gt;缓存方式获取高速缓存的锁定，而在控件离开&lt;strong&gt;apcu_entry（）&lt;/strong&gt;时将其释放：实际上，这将 &lt;code&gt;generator&lt;/code&gt; 的主体变成了关键部分，不允许两个进程执行相同的代码路径同时。另外，它禁止并发执行任何其他APCu功能，因为它们将获取相同的锁。</target>
        </trans-unit>
        <trans-unit id="88d2445f0289e71e37aa26452ecb6265aef73f0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  When exporting an object, &lt;a href=&quot;function.var-export&quot;&gt;var_export()&lt;/a&gt; does not check whether &lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state()&lt;/a&gt; is implemented by the object's class, so re-importing such objects will fail, if __set_state() is not implemented. Particularly, this affects some internal classes.  It is the responsibility of the programmer to verify that only objects will be re-imported, whose class implements __set_state().</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：导出对象时，&lt;a href=&quot;function.var-export&quot;&gt;var_export（）&lt;/a&gt;不会检查&lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state（）&lt;/a&gt;是否由对象的类实现，因此，如果未实现__set_state（），则重新导入此类对象将失败。特别是，这会影响某些内部类。程序员有责任验证将仅重新导入对象，该对象的类实现__set_state（）。</target>
        </trans-unit>
        <trans-unit id="aea16fd4f246cfa35f0ce6c4a79db4612284d4db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  When using session cookies, specifying an &lt;code&gt;id&lt;/code&gt; for &lt;strong&gt;session_id()&lt;/strong&gt; will always send a new cookie when &lt;a href=&quot;function.session-start&quot;&gt;session_start()&lt;/a&gt; is called, regardless if the current session id is identical to the one being set.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：使用会话cookie时，为&lt;strong&gt;session_id（）&lt;/strong&gt;指定一个 &lt;code&gt;id&lt;/code&gt; 总是会在调用&lt;a href=&quot;function.session-start&quot;&gt;session_start（）&lt;/a&gt;时发送一个新的cookie ，无论当前会话ID是否与所设置的ID相同。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3814f7d0c42f398dd5ad62a4de4d3087d9b2206d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Windows users should note that this function will only work if the system you run PHP from is Windows Vista/Windows Server 2008 or newer. Windows versions prior to that do not support symbolic links.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：Windows用户应注意，只有当您从中运行PHP的系统是Windows Vista / Windows Server 2008或更高版本时，此功能才起作用。之前的Windows版本不支持符号链接。</target>
        </trans-unit>
        <trans-unit id="42d3c4b8d8eafb3adb26a4b41a5c42d0f867a50e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Windows uses only the first three characters of prefix.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：Windows仅使用前缀的前三个字符。</target>
        </trans-unit>
        <trans-unit id="70cb72fa9e98c518aa57a2fc762e7256eaafb94c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  You do not have to call &lt;strong&gt;session_destroy()&lt;/strong&gt; from usual code. Cleanup $_SESSION array rather than destroying session data.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：您不必从常规代码中调用&lt;strong&gt;session_destroy（）&lt;/strong&gt;。清理$ _SESSION数组而不是破坏会话数据。</target>
        </trans-unit>
        <trans-unit id="cc8eb1868c8f1e22d38a8bf2672532a06831439d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  You need to have a valid &lt;var&gt;openssl.cnf&lt;/var&gt; installed for this function to operate correctly. See the notes under &lt;a href=&quot;https://secure.php.net/manual/en/openssl.installation.php&quot;&gt;the installation section&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：您需要安装有效的 &lt;var&gt;openssl.cnf&lt;/var&gt; ，此功能才能正常运行。有关更多信息，请参见&lt;a href=&quot;https://secure.php.net/manual/en/openssl.installation.php&quot;&gt;安装部分&lt;/a&gt;下的注释。</target>
        </trans-unit>
        <trans-unit id="b074fed736a99d7584b9188706f86c7835a92fc8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  You need to have a valid &lt;var&gt;openssl.cnf&lt;/var&gt; installed for this function to operate correctly. See the notes under &lt;a href=&quot;https://www.php.net/manual/en/openssl.installation.php&quot;&gt;the installation section&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：您需要安装有效的 &lt;var&gt;openssl.cnf&lt;/var&gt; ，此功能才能正常运行。有关更多信息，请参见&lt;a href=&quot;https://www.php.net/manual/en/openssl.installation.php&quot;&gt;安装部分&lt;/a&gt;下的注释。</target>
        </trans-unit>
        <trans-unit id="e6be85082d7e6e7510bfa0eac83e5607bf7e68e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  You shouldn't use this value in a script.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：您不应在脚本中使用此值。</target>
        </trans-unit>
        <trans-unit id="6f86313d16b85d8d5205f63d3a5c67e60b2696da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Your web server must be configured to create this variable. For example in Apache you'll need &lt;code&gt;HostnameLookups On&lt;/code&gt; inside &lt;var&gt;httpd.conf&lt;/var&gt; for it to exist. See also &lt;a href=&quot;function.gethostbyaddr&quot;&gt;gethostbyaddr()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：必须将Web服务器配置为创建此变量。例如，在Apache中，需要 &lt;var&gt;httpd.conf&lt;/var&gt; 内的 &lt;code&gt;HostnameLookups On&lt;/code&gt; 才能存在。另请参见&lt;a href=&quot;function.gethostbyaddr&quot;&gt;gethostbyaddr（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2f6c59defed72fea10bb71a34a97445ba21f63b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Your web server must be configured to create this variable. For example in Apache you'll need &lt;em&gt;HostnameLookups On&lt;/em&gt; inside &lt;var&gt;httpd.conf&lt;/var&gt; for it to exist. See also &lt;a href=&quot;function.gethostbyaddr&quot;&gt;gethostbyaddr()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：必须将Web服务器配置为创建此变量。例如，在Apache中，需要 &lt;var&gt;httpd.conf&lt;/var&gt; 内的&lt;em&gt;HostnameLookups On&lt;/em&gt;才能存在。另请参见&lt;a href=&quot;function.gethostbyaddr&quot;&gt;gethostbyaddr（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9fa6c8c48eb03f1deba42a351f5d20efb1da917d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;a href=&quot;language.types.string&quot;&gt;String&lt;/a&gt;s may also be accessed using braces, as in &lt;var&gt;&lt;var&gt;$str{42}&lt;/var&gt;&lt;/var&gt;, for the same purpose.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：出于相同的目的，也可以使用大括号（如 &lt;var&gt;&lt;var&gt;$str{42}&lt;/var&gt;&lt;/var&gt; &lt;a href=&quot;language.types.string&quot;&gt;字符串）&lt;/a&gt;来访问String。</target>
        </trans-unit>
        <trans-unit id="a936a4a0e0ca5e2245a38c4bc0a95be0f96e0c3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;$this&lt;/code&gt; is a special variable that can't be assigned. Prior to PHP 7.1.0, indirect assignment (e.g. by using &lt;a href=&quot;language.variables.variable&quot;&gt;variable variables&lt;/a&gt;) was possible.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;： &lt;code&gt;$this&lt;/code&gt; 是无法分配的特殊变量。在PHP 7.1.0之前，可以进行间接赋值（例如，使用&lt;a href=&quot;language.variables.variable&quot;&gt;变量variable&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7628e4476bd3a18300d2f99059170835957f09b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;em&gt;$this&lt;/em&gt; is a special variable that can't be assigned.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;em&gt;$ this&lt;/em&gt;是一个无法分配的特殊变量。</target>
        </trans-unit>
        <trans-unit id="05faad22d804718cb5d8635f6afd75b0afadfc4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;&lt;code&gt;IMG_WEIGHTED4&lt;/code&gt;&lt;/strong&gt; is not yet supported.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：尚不支持&lt;strong&gt; &lt;code&gt;IMG_WEIGHTED4&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="418063ef8abc097796c896bbab3832b92ab50883" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Alpha not returned&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;Alpha不返回&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="be9a029addfd651d86353c7136778ff3189545af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;An alternative approach&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;另一种方法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="64b11f6aa96cb9177af0b317979c7b9116f365c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Availability&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;可用性&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e78469725a47fe0270b71ef48dd16e74574f393" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Beware the &lt;code&gt;refcount&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;当心 &lt;code&gt;refcount&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bfaf83f81f4b7da784c62949af0b2feba7f6bb05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Beware the &lt;em&gt;refcount&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;当心&lt;em&gt;引用计数&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fc64639dc7b70087344501307e4d4b9ed7a55d13" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Crypt and MAC method &quot;&lt;code&gt;none&lt;/code&gt;&quot;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;加密和MAC方法&amp;ldquo; &lt;code&gt;none&lt;/code&gt; &amp;rdquo;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a9513fec8a88ca35417e3ce1ba75a293830a136" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Crypt and MAC method &quot;&lt;em&gt;none&lt;/em&gt;&quot;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;加密和MAC方法&amp;ldquo; &lt;em&gt;无&lt;/em&gt; &amp;rdquo;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f6093230ed97d778649dcebd948d7732d75b60ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Dealing with register_globals&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;处理register_globals&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d327797e5a7860c274ce2618c9dad9075cfa522" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Deprecated&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;不推荐使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="61605163321953ad2a814cdf12c6b9c0bf240c32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;File should be opened for writing&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;应打开文件进行写入&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a453a593498b25decc218d3b49846acbb99abf0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Gotcha&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;陷阱&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6fe4560176e063a17ca268d0f9e0e326dedc81d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;ParseError&lt;/strong&gt; extends &lt;a href=&quot;class.compileerror&quot;&gt;CompileError&lt;/a&gt; as of PHP 7.3.0. Formerly, it extended &lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;ParseError&lt;/strong&gt;自PHP 7.3.0起扩展了&lt;a href=&quot;class.compileerror&quot;&gt;CompileError&lt;/a&gt;。以前，它扩展了&lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="071acc5bba3c575b7232d119f7baf051423621c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Possible gotcha: removing middle characters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;可能的陷阱：删除中间字符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d967176c556c574cbff6cf0f10bb58fca6a4bbd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Requirement&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;要求&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="589c50552401508244c0ab4a0cae5b71278c6230" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Unix Only:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;仅限于Unix：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c636f127af4f1b8d36075331566c72c6272d4b43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Variable availability&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;可变可用性&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c90be4958683e3742e908cf5427ca457d38d0322" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Variable variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;变量变量&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="98b50541d57a3429f047fcae45034062c5cb0773" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;When querying boolean values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;查询布尔值时&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ca9d6973b04dbf58e536788eeaf42108e87299c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;When querying memory size values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;查询内存大小值时&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa986b3cd7e4480e0de394228923ed1f4892613b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;When using custom (user) filters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;使用自定义（用户）过滤器时&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14f48930d40a3873d1cdadb8ec5883abf7dadca3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Why this function may not exist&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;为什么此功能可能不存在&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="03ded594f78ce4e8d9e2bcb555e07fef4b8e8da2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Windows compatibility&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;Windows兼容性&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad09537d40c1470f6064c5ee22eb8ac9d0b0bb52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Windows only&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;仅Windows&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c937b170c6820e8edcac109a0ebda1de78dec32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;apc_cache_info()&lt;/strong&gt; will raise a warning if it is unable to retrieve APC cache data. This typically occurs when APC is not enabled.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果&lt;strong&gt;apc_cache_info（）&lt;/strong&gt;无法检索APC缓存数据，则会发出警告。当未启用APC时，通常会发生这种情况。</target>
        </trans-unit>
        <trans-unit id="934ec6b7fb8f4011a731a64de1e8aa353525c338" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;apcu_cache_info()&lt;/strong&gt; will raise a warning if it is unable to retrieve APC cache data. This typically occurs when APC is not enabled.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果&lt;strong&gt;apcu_cache_info（）&lt;/strong&gt;无法检索APC缓存数据，则会发出警告。当未启用APC时，通常会发生这种情况。</target>
        </trans-unit>
        <trans-unit id="27e824c643c61de39662dd9a4e4467d8674ca141" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;array_push()&lt;/strong&gt; will raise a warning if the first argument is not an array. This differs from the &lt;code&gt;$var[]&lt;/code&gt; behaviour where a new array is created.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果第一个参数不是数组，&lt;strong&gt;array_push（）&lt;/strong&gt;将发出警告。这与创建新数组的 &lt;code&gt;$var[]&lt;/code&gt; 行为不同。</target>
        </trans-unit>
        <trans-unit id="50352f4be22dac68abd361636698bad8f3d28d61" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;array_push()&lt;/strong&gt; will raise a warning if the first argument is not an array. This differs from the &lt;em&gt;$var[]&lt;/em&gt; behaviour where a new array is created.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果第一个参数不是数组，&lt;strong&gt;array_push（）&lt;/strong&gt;将发出警告。这与创建新数组的&lt;em&gt;$ var []&lt;/em&gt;行为不同。</target>
        </trans-unit>
        <trans-unit id="3e9defe6a55c0df7076d76931a81c72238b0a7db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;convert_uudecode()&lt;/strong&gt; neither accepts the &lt;code&gt;begin&lt;/code&gt; nor the &lt;code&gt;end&lt;/code&gt; line, which are part of uuencoded &lt;em&gt;files&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;convert_uudecode（）&lt;/strong&gt;既不接受uuencoded&lt;em&gt;文件的&lt;/em&gt;一部分，也不接受 &lt;code&gt;begin&lt;/code&gt; 和 &lt;code&gt;end&lt;/code&gt; 行。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="574880b873b6e1c81b0f6e63071a33fbd438125e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;convert_uudecode()&lt;/strong&gt; neither accepts the &lt;em&gt;begin&lt;/em&gt; nor the &lt;em&gt;end&lt;/em&gt; line, which are part of uuencoded &lt;em&gt;files&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;convert_uudecode（）&lt;/strong&gt;既不接受uuencoded &lt;em&gt;文件的&lt;/em&gt;一部分，也不接受&lt;em&gt;开始行&lt;/em&gt;或&lt;em&gt;结束&lt;/em&gt;行。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="516eca3f8ec932d0bf99920cd966fda546061c96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;convert_uuencode()&lt;/strong&gt; neither produces the &lt;code&gt;begin&lt;/code&gt; nor the &lt;code&gt;end&lt;/code&gt; line, which are part of uuencoded &lt;em&gt;files&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;convert_uuencode（）&lt;/strong&gt;既不会产生uuencoded&lt;em&gt;文件的&lt;/em&gt;一部分，也不会产生 &lt;code&gt;begin&lt;/code&gt; 或 &lt;code&gt;end&lt;/code&gt; 行。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7d03842dc75aeda24f40c6ecd9e5013bda34a5b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;convert_uuencode()&lt;/strong&gt; neither produces the &lt;em&gt;begin&lt;/em&gt; nor the &lt;em&gt;end&lt;/em&gt; line, which are part of uuencoded &lt;em&gt;files&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;convert_uuencode（）&lt;/strong&gt;既不产生uuencoded &lt;em&gt;文件的&lt;/em&gt;一部分，也不产生&lt;em&gt;开始行&lt;/em&gt;或&lt;em&gt;结束&lt;/em&gt;行。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f45072db5404f1296b71cc2224b80d0a87b69d37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;imagexbm()&lt;/strong&gt; doesn't apply any padding, so the image width has to be a multiple of 8. This restriction does no longer apply as of PHP 5.6.24 and 7.0.9, respectively.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;imagexbm（）&lt;/strong&gt;不应用任何填充，因此图像宽度必须是8的倍数。从PHP 5.6.24和7.0.9开始，此限制不再适用。</target>
        </trans-unit>
        <trans-unit id="b2a5504666663d638dd21ae78d31b955f0e6248e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;imagexbm()&lt;/strong&gt; doesn't apply any padding, so the image width has to be a multiple of 8. This restriction does no longer apply as of PHP 7.0.9.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;imagexbm（）&lt;/strong&gt;不应用任何填充，因此图像宽度必须是8的倍数。从PHP 7.0.9开始，此限制不再适用。</target>
        </trans-unit>
        <trans-unit id="20b94dc758ab8fb0ec786ab2f0ca8e74c0b8ef60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;register_globals: important note&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;register_globals：重要说明&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="42fb3aa3b82aaf1863a0e88cfcce5237f5b36c21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;socket_getsockname()&lt;/strong&gt; should not be used with &lt;strong&gt;&lt;code&gt;AF_UNIX&lt;/code&gt;&lt;/strong&gt; sockets created with &lt;a href=&quot;function.socket-connect&quot;&gt;socket_connect()&lt;/a&gt;. Only sockets created with &lt;a href=&quot;function.socket-accept&quot;&gt;socket_accept()&lt;/a&gt; or a primary server socket following a call to &lt;a href=&quot;function.socket-bind&quot;&gt;socket_bind()&lt;/a&gt; will return meaningful values.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;socket_getsockname（）&lt;/strong&gt;不应与用&lt;a href=&quot;function.socket-connect&quot;&gt;socket_connect（）&lt;/a&gt;创建的&lt;strong&gt; &lt;code&gt;AF_UNIX&lt;/code&gt; &lt;/strong&gt;套接字一起使用。只有使用&lt;a href=&quot;function.socket-accept&quot;&gt;socket_accept（）&lt;/a&gt;创建的套接字或调用&lt;a href=&quot;function.socket-bind&quot;&gt;socket_bind（）&lt;/a&gt;之后的主服务器套接字才能返回有意义的值。</target>
        </trans-unit>
        <trans-unit id="5f4260bd163e602f065c7f4027f264aa488cf254" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;unserialize_callback_func directive&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;unserialize_callback_func指令&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7eb853d7607e9c08b5d0921af9b66199bd98b521" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: An exception is raised even when the &lt;strong&gt;&lt;code&gt;PDO::ATTR_ERRMODE&lt;/code&gt;&lt;/strong&gt; attribute is not &lt;strong&gt;&lt;code&gt;PDO::ERRMODE_EXCEPTION&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：即使&lt;strong&gt; &lt;code&gt;PDO::ATTR_ERRMODE&lt;/code&gt; &lt;/strong&gt;属性不是&lt;strong&gt; &lt;code&gt;PDO::ERRMODE_EXCEPTION&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="cbc4048f611a3132ca9d347a26ccba8fb0cb97d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: As of PHP 7.1.0, &lt;strong&gt;rand()&lt;/strong&gt; uses the same random number generator as &lt;a href=&quot;function.mt-rand&quot;&gt;mt_rand()&lt;/a&gt;. To preserve backwards compatibility &lt;strong&gt;rand()&lt;/strong&gt; allows &lt;code&gt;max&lt;/code&gt; to be smaller than &lt;code&gt;min&lt;/code&gt; as opposed to returning &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; as &lt;a href=&quot;function.mt-rand&quot;&gt;mt_rand()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：从PHP 7.1.0开始，&lt;strong&gt;rand（）&lt;/strong&gt;使用与&lt;a href=&quot;function.mt-rand&quot;&gt;mt_rand（）&lt;/a&gt;相同的随机数生成器。为了保持向后兼容性，&lt;strong&gt;rand（）&lt;/strong&gt;允许 &lt;code&gt;max&lt;/code&gt; 小于 &lt;code&gt;min&lt;/code&gt; ，而不是将&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;作为&lt;a href=&quot;function.mt-rand&quot;&gt;mt_rand（）&lt;/a&gt;返回。</target>
        </trans-unit>
        <trans-unit id="158dcf9a4c504ddc9c3850c77d07664bfa7fdb6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: As of PHP 7.1.0, &lt;strong&gt;rand()&lt;/strong&gt; uses the same random number generator as &lt;a href=&quot;function.mt-rand&quot;&gt;mt_rand()&lt;/a&gt;. To preserve backwards compatibility &lt;strong&gt;rand()&lt;/strong&gt; allows &lt;code&gt;max&lt;/code&gt; to be smaller than &lt;code&gt;min&lt;/code&gt; as opposed to returning &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; as &lt;a href=&quot;function.mt-rand&quot;&gt;mt_rand()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：从PHP 7.1.0开始，&lt;strong&gt;rand（）&lt;/strong&gt;使用与&lt;a href=&quot;function.mt-rand&quot;&gt;mt_rand（）&lt;/a&gt;相同的随机数生成器。为了保持向后兼容性&lt;strong&gt;兰特（）&lt;/strong&gt;允许 &lt;code&gt;max&lt;/code&gt; 为小于 &lt;code&gt;min&lt;/code&gt; ，而不是返回&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;如&lt;a href=&quot;function.mt-rand&quot;&gt;mt_rand（） &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ad19dd84d8b3b98f3c1d71fea2a050d6bf1e64cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: As of PHP 7.1.0, &lt;strong&gt;srand()&lt;/strong&gt; has been made an alias of &lt;a href=&quot;function.mt-srand&quot;&gt;mt_srand()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：自PHP 7.1.0起，&lt;strong&gt;srand（）&lt;/strong&gt;已成为&lt;a href=&quot;function.mt-srand&quot;&gt;mt_srand（）&lt;/a&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="75059576602ab1168c47374d6b9fe9b656cee4d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Because this is a language construct and not a function, it cannot be called using &lt;a href=&quot;functions.variable-functions&quot;&gt;variable functions&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：因为这是语言构造而不是函数，所以不能使用&lt;a href=&quot;functions.variable-functions&quot;&gt;可变函数&lt;/a&gt;调用它。</target>
        </trans-unit>
        <trans-unit id="adc1cac41b4808c74006352d71025bd9cd04b139" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: By default, only userspace functions may be removed, renamed, or modified. In order to override internal functions, you must enable the &lt;code&gt;runkit.internal_override&lt;/code&gt; setting in &lt;var&gt;php.ini&lt;/var&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：默认情况下，只能删除，重命名或修改用户空间功能。为了覆盖内部函数，必须在 &lt;var&gt;php.ini&lt;/var&gt; 中启用 &lt;code&gt;runkit.internal_override&lt;/code&gt; 设置。</target>
        </trans-unit>
        <trans-unit id="2fd0de65f8fd451e5c0d00a4fb49d69d34fe98ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: By default, only userspace functions may be removed, renamed, or modified. In order to override internal functions, you must enable the &lt;em&gt;runkit.internal_override&lt;/em&gt; setting in &lt;var&gt;php.ini&lt;/var&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：默认情况下，只能删除，重命名或修改用户空间功能。为了覆盖内部功能，必须在 &lt;var&gt;php.ini&lt;/var&gt; 中启用&lt;em&gt;runkit.internal_override&lt;/em&gt;设置。</target>
        </trans-unit>
        <trans-unit id="216b24192ba8208e507a3b50d329988c2bb6ac0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Context support was added with PHP 5.0.0. For a description of &lt;code&gt;contexts&lt;/code&gt;, refer to &lt;a href=&quot;https://www.php.net/manual/en/book.stream.php&quot;&gt;Streams&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：上下文支持已随PHP 5.0.0添加。有关 &lt;code&gt;contexts&lt;/code&gt; 的描述，请参阅&lt;a href=&quot;https://www.php.net/manual/en/book.stream.php&quot;&gt;Streams&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="badb8b27e25d44573dd0a5f1cb9420c91795df35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Context support was added with PHP 5.0.0. For a description of &lt;em&gt;contexts&lt;/em&gt;, refer to &lt;a href=&quot;https://secure.php.net/manual/en/book.stream.php&quot;&gt;Streams&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：上下文支持是在PHP 5.0.0中添加的。有关&lt;em&gt;上下文&lt;/em&gt;的描述，请参阅&lt;a href=&quot;https://secure.php.net/manual/en/book.stream.php&quot;&gt;Streams&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="272fc45e23be4259517f454c376185b0442bfb55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Field names returned by this function are &lt;em&gt;case-sensitive&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此函数返回的字段名称&lt;em&gt;区分大小写&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="4f9b76a3b942290fb0165b538bdd18ec0fc393a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: For maximum portability, it is recommended to always use forward slashes (&lt;code&gt;/&lt;/code&gt;) as directory separator in ZIP filenames.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：为了获得最大的可移植性，建议始终在ZIP文件名中始终使用正斜杠（ &lt;code&gt;/&lt;/code&gt; ）作为目录分隔符。</target>
        </trans-unit>
        <trans-unit id="46dcefa5ab921ba26bf2d7b75863d1ad5213d4c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: For maximum portability, it is recommended to always use forward slashes (&lt;em&gt;/&lt;/em&gt;) as directory separator in ZIP filenames.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：为了获得最大的可移植性，建议始终在ZIP文件名中始终使用正斜杠（&lt;em&gt;/&lt;/em&gt;）作为目录分隔符。</target>
        </trans-unit>
        <trans-unit id="7e26d28b7649640cf1deee152450b5042c4c5f20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: If PHP is not properly recognizing the line endings when reading files either on or created by a Macintosh computer, enabling the &lt;a href=&quot;https://secure.php.net/manual/en/filesystem.configuration.php#ini.auto-detect-line-endings&quot;&gt;auto_detect_line_endings&lt;/a&gt; run-time configuration option may help resolve the problem.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果在Macintosh计算机上或由Macintosh计算机读取文件时，PHP无法正确识别行尾，则启用&lt;a href=&quot;https://secure.php.net/manual/en/filesystem.configuration.php#ini.auto-detect-line-endings&quot;&gt;auto_detect_line_endings&lt;/a&gt;运行时配置选项可能有助于解决问题。</target>
        </trans-unit>
        <trans-unit id="a2de11c18142817c9322f8e66cf703e46dd160a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: If PHP is not properly recognizing the line endings when reading files either on or created by a Macintosh computer, enabling the &lt;a href=&quot;https://www.php.net/manual/en/filesystem.configuration.php#ini.auto-detect-line-endings&quot;&gt;auto_detect_line_endings&lt;/a&gt; run-time configuration option may help resolve the problem.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果在Macintosh计算机上或由Macintosh计算机读取文件时，PHP无法正确识别行尾，则启用&lt;a href=&quot;https://www.php.net/manual/en/filesystem.configuration.php#ini.auto-detect-line-endings&quot;&gt;auto_detect_line_endings&lt;/a&gt;运行时配置选项可能有助于解决问题。</target>
        </trans-unit>
        <trans-unit id="e40d5ae990c4dfd1943c6e73eb36fd3f3872566f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Instead of a function name, an array containing an object reference and a method name can also be supplied.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：除了函数名，还可以提供包含对象引用和方法名的数组。</target>
        </trans-unit>
        <trans-unit id="38f5cda9b71697da9a083f40ded464129af23f05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Relative paths will be resolved as if the current working directory was the one that contains the PHP binary. To use the calling script's working directory, use &lt;a href=&quot;function.realpath&quot;&gt;realpath()&lt;/a&gt; or dirname(__FILE__).</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：相对路径将被解析，就好像当前的工作目录是包含PHP二进制文件的目录一样。要使用调用脚本的工作目录，请使用&lt;a href=&quot;function.realpath&quot;&gt;realpath（）&lt;/a&gt;或dirname（__ FILE__）。</target>
        </trans-unit>
        <trans-unit id="2c1489fb70a636f364207ad07b8262ad5d867b9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Sandbox support (required for &lt;a href=&quot;function.runkit-lint&quot;&gt;runkit_lint()&lt;/a&gt;, &lt;a href=&quot;function.runkit-lint-file&quot;&gt;runkit_lint_file()&lt;/a&gt;, and the &lt;strong&gt;Runkit_Sandbox&lt;/strong&gt; class) is only available as of PHP 5.1.0 or specially patched versions of PHP 5.0, and requires that thread safety be enabled. See the &lt;var&gt;README&lt;/var&gt; file included in the runkit package for more information.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：沙盒支持（&lt;a href=&quot;function.runkit-lint&quot;&gt;runkit_lint（）&lt;/a&gt;，&lt;a href=&quot;function.runkit-lint-file&quot;&gt;runkit_lint_file（）&lt;/a&gt;和&lt;strong&gt;Runkit_Sandbox&lt;/strong&gt;类&lt;strong&gt;必需&lt;/strong&gt;）仅在PHP 5.1.0或PHP 5.0的特殊修补版本中可用，并且需要启用线程安全性。有关更多信息，请参见runkit软件包中包含的 &lt;var&gt;README&lt;/var&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="2ad7763aed41b08823438f7da93b7e60e75038c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Sandbox support (required for &lt;a href=&quot;function.runkit-lint&quot;&gt;runkit_lint()&lt;/a&gt;, &lt;strong&gt;runkit_lint_file()&lt;/strong&gt;, and the &lt;strong&gt;Runkit_Sandbox&lt;/strong&gt; class) is only available as of PHP 5.1.0 or specially patched versions of PHP 5.0, and requires that thread safety be enabled. See the &lt;var&gt;README&lt;/var&gt; file included in the runkit package for more information.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：沙盒支持（&lt;a href=&quot;function.runkit-lint&quot;&gt;runkit_lint（）&lt;/a&gt;，&lt;strong&gt;runkit_lint_file（）&lt;/strong&gt;和&lt;strong&gt;Runkit_Sandbox&lt;/strong&gt;类&lt;strong&gt;必需&lt;/strong&gt;）仅在PHP 5.1.0或PHP 5.0的特殊修补版本中可用，并且需要启用线程安全性。有关更多信息，请参见runkit软件包中包含的 &lt;var&gt;README&lt;/var&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="94e356406f33c2ab758209e8d6f2b5df9c04d6e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Sandbox support (required for &lt;strong&gt;runkit_lint()&lt;/strong&gt;, &lt;a href=&quot;function.runkit-lint-file&quot;&gt;runkit_lint_file()&lt;/a&gt;, and the &lt;strong&gt;Runkit_Sandbox&lt;/strong&gt; class) is only available as of PHP 5.1.0 or specially patched versions of PHP 5.0, and requires that thread safety be enabled. See the &lt;var&gt;README&lt;/var&gt; file included in the runkit package for more information.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：沙盒支持（&lt;strong&gt;runkit_lint（）&lt;/strong&gt;，&lt;a href=&quot;function.runkit-lint-file&quot;&gt;runkit_lint_file（）&lt;/a&gt;和&lt;strong&gt;Runkit_Sandbox&lt;/strong&gt;类&lt;strong&gt;必需&lt;/strong&gt;）仅在PHP 5.1.0或PHP 5.0的特殊修补版本中可用，并且需要启用线程安全性。有关更多信息，请参见runkit软件包中包含的 &lt;var&gt;README&lt;/var&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="b698051f55033ed973cd69795f29dc1f24dd7203" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: SimpleXML has made a rule of adding iterative properties to most methods. They cannot be viewed using &lt;a href=&quot;function.var-dump&quot;&gt;var_dump()&lt;/a&gt; or anything else which can examine objects.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：SimpleXML制定了向大多数方法添加迭代属性的规则。无法使用&lt;a href=&quot;function.var-dump&quot;&gt;var_dump（）&lt;/a&gt;或可以检查对象的其他任何方式查看它们。</target>
        </trans-unit>
        <trans-unit id="8694aab80d6cdec24a03277aa453d6e384e0465b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Strings may also be accessed using braces, as in &lt;var&gt;$str{42}&lt;/var&gt;, for the same purpose.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：出于相同的目的，也可以使用大括号来访问字符串，如 &lt;var&gt;$str{42}&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="164dc5f19d59b9eef9c306475386cba9b2be9ce0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The optional parameters &lt;code&gt;config&lt;/code&gt; and &lt;code&gt;encoding&lt;/code&gt; were added in Tidy 2.0.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：可选参数 &lt;code&gt;config&lt;/code&gt; 和 &lt;code&gt;encoding&lt;/code&gt; 在Tidy 2.0中添加。</target>
        </trans-unit>
        <trans-unit id="860a1e857b8fa76d110933a8a9c0d4481125c6ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The public key subsystem is used for managing public keys on a server to which the client is &lt;em&gt;already&lt;/em&gt; authenticated. To authenticate to a remote system using public key authentication, use the &lt;a href=&quot;function.ssh2-auth-pubkey-file&quot;&gt;ssh2_auth_pubkey_file()&lt;/a&gt; function instead.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：公钥子系统用于管理&lt;em&gt;已通过&lt;/em&gt;身份验证的服务器上的公钥。要使用公共密钥身份验证向远程系统进行身份验证，请改用&lt;a href=&quot;function.ssh2-auth-pubkey-file&quot;&gt;ssh2_auth_pubkey_file（）&lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="69d62c83bf9b5244445cd5f7f09cec892b3edd5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The results of this function are cached. See &lt;a href=&quot;function.clearstatcache&quot;&gt;clearstatcache()&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此功能的结果将被缓存。有关更多详细信息，请参见&lt;a href=&quot;function.clearstatcache&quot;&gt;clearstatcache（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="389c050290733e15ad81fd88ed65abd902071568" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: There is no need to seed the random number generator with &lt;a href=&quot;function.srand&quot;&gt;srand()&lt;/a&gt; or &lt;strong&gt;mt_srand()&lt;/strong&gt; as this is done automatically.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：无需使用&lt;a href=&quot;function.srand&quot;&gt;srand（）&lt;/a&gt;或&lt;strong&gt;mt_srand（）&lt;/strong&gt;为随机数生成器设置种子，因为这是自动完成的。</target>
        </trans-unit>
        <trans-unit id="529b6a53a248d797ed53145da8ae5a0239b9175e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: There is no need to seed the random number generator with &lt;strong&gt;srand()&lt;/strong&gt; or &lt;a href=&quot;function.mt-srand&quot;&gt;mt_srand()&lt;/a&gt; as this is done automatically.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：无需使用&lt;strong&gt;srand（）&lt;/strong&gt;或&lt;a href=&quot;function.mt-srand&quot;&gt;mt_srand（）&lt;/a&gt;为随机数生成器设置种子，因为这是自动完成的。</target>
        </trans-unit>
        <trans-unit id="a6fa999edd8b8e28353b4f1278b8f60258d58b94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function assigns new keys to the elements in &lt;code&gt;array&lt;/code&gt;. It will remove any existing keys that may have been assigned, rather than just reordering the keys.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此函数将新键分配给 &lt;code&gt;array&lt;/code&gt; 中的元素。它将删除可能已经分配的所有现有密钥，而不仅仅是重新排序密钥。</target>
        </trans-unit>
        <trans-unit id="d9f7c958550345d430d968287a1a3c61ffcd5c29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function cannot be used to manipulate the currently running (or chained) method.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此功能不能用于操纵当前正在运行（或链接）的方法。</target>
        </trans-unit>
        <trans-unit id="655366598929afc2948ef36672228068ff12c909" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is binary-safe.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此函数是二进制安全的。</target>
        </trans-unit>
        <trans-unit id="fdb7976c2598c8945a4bba37c6b00acc62301ed3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is disabled when PHP is running in &lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;safe mode&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：当PHP在&lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;安全模式下&lt;/a&gt;运行时，此功能被禁用。</target>
        </trans-unit>
        <trans-unit id="b5570358471da7eaa0b481e9add5096497cafd59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is locale-aware and will handle input according to the currently set locale. However, it only works on single-byte character sets. If you need to use multibyte characters (most non-western-European languages) look at the &lt;a href=&quot;https://www.php.net/manual/en/book.mbstring.php&quot;&gt;multibyte&lt;/a&gt; or &lt;a href=&quot;https://www.php.net/manual/en/book.intl.php&quot;&gt;intl&lt;/a&gt; extensions instead.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此功能支持区域设置，并将根据当前设置的区域设置处理输入。但是，它仅适用于单字节字符集。如果您需要使用多字节字符（大多数非西欧语言），请查看&lt;a href=&quot;https://www.php.net/manual/en/book.mbstring.php&quot;&gt;多字节&lt;/a&gt;或&lt;a href=&quot;https://www.php.net/manual/en/book.intl.php&quot;&gt;intl&lt;/a&gt;扩展名。</target>
        </trans-unit>
        <trans-unit id="ea4308e54f4ffc5bc07142de934d24522674756f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is not available in PHP interpreters built with ZTS (Zend Thread Safety) enabled. To check whether your copy of PHP was built with ZTS enabled, use &lt;strong&gt;php -i&lt;/strong&gt; or test the built-in constant &lt;strong&gt;&lt;code&gt;PHP_ZTS&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此功能在启用ZTS（Zend线程安全）的PHP解释器中不可用。要检查您的PHP副本是否在启用ZTS的情况下构建，请使用&lt;strong&gt;php -i&lt;/strong&gt;或测试内置常量&lt;strong&gt; &lt;code&gt;PHP_ZTS&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="5bd10b388b196fba7a0b4777270974ff360515c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is not implemented on Windows platforms.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：Windows平台上未实现此功能。</target>
        </trans-unit>
        <trans-unit id="285bf29d68ff107c608e4223134bd346ed31f2da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is only available if PHP is compiled using &lt;strong&gt;--with-t1lib[=DIR]&lt;/strong&gt; .</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：仅当使用&lt;strong&gt;--with-t1lib [= DIR]&lt;/strong&gt;编译PHP时，此功能才可用。</target>
        </trans-unit>
        <trans-unit id="7eb4d481f1dd1a1155e2ec42f1071bc3fd3be504" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is only available if PHP is compiled with freetype support (&lt;strong&gt;--with-freetype-dir=DIR&lt;/strong&gt; )</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：仅当PHP带有freetype支持（&lt;strong&gt;--with-freetype-dir = DIR&lt;/strong&gt;）编译时，此功能才可用</target>
        </trans-unit>
        <trans-unit id="ccae1df4e90fda913327d682cb1534727dbd407c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is only available if PHP is compiled with freetype support (&lt;strong&gt;--with-freetype-dir=DIR&lt;/strong&gt;)</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：仅当PHP在带有freetype支持（&lt;strong&gt;--with-freetype-dir = DIR&lt;/strong&gt;）的情况下编译时，此功能才可用。</target>
        </trans-unit>
        <trans-unit id="dab6f6c38f2823352aa5c63fb2f3edad83423d2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is only available in Tidy 1.0. It became obsolete in Tidy 2.0, and thus has been removed.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此功能仅在Tidy 1.0中可用。它在Tidy 2.0中已过时，因此已被删除。</target>
        </trans-unit>
        <trans-unit id="846002a2578055d8e385c041759017663836d501" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function sets NULL fields to the PHP &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; value.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此函数将NULL字段设置为PHP &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;值。</target>
        </trans-unit>
        <trans-unit id="cc093815bbefecab6056189fbacb4ad5c58e3b54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function sets NULL fields to the PHP &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; value.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此函数将NULL字段设置为PHP&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; &lt;/strong&gt;值。</target>
        </trans-unit>
        <trans-unit id="9b96eff5a824e80a89d24222e22b2106dd1d9320" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function will &lt;a href=&quot;function.reset&quot;&gt;reset()&lt;/a&gt; the &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; pointer of the input array after use.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此函数使用后将&lt;a href=&quot;function.reset&quot;&gt;reset（）&lt;/a&gt;输入数组的&lt;a href=&quot;language.types.array&quot;&gt;数组&lt;/a&gt;指针。</target>
        </trans-unit>
        <trans-unit id="8aca77c1b72357405d1f5350b0a990f5028af7b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function will &lt;a href=&quot;function.reset&quot;&gt;reset()&lt;/a&gt; the array pointer of the input array after use.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此函数使用后将&lt;a href=&quot;function.reset&quot;&gt;reset（）&lt;/a&gt;输入数组的数组指针。</target>
        </trans-unit>
        <trans-unit id="084f1e23b80a3fcc84bb85d080eb80d22bd902cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function will not work on &lt;a href=&quot;https://secure.php.net/manual/en/features.remote-files.php&quot;&gt;remote files&lt;/a&gt; as the file to be examined must be accessible via the server's filesystem.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此功能不适用于&lt;a href=&quot;https://secure.php.net/manual/en/features.remote-files.php&quot;&gt;远程文件，&lt;/a&gt;因为必须通过服务器的文件系统访问要检查的文件。</target>
        </trans-unit>
        <trans-unit id="4b06f1eec67b61abd2483b0a475be173c054ab53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function will not work on &lt;a href=&quot;https://www.php.net/manual/en/features.remote-files.php&quot;&gt;remote files&lt;/a&gt; as the file to be examined must be accessible via the server's filesystem.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：此功能不适用于&lt;a href=&quot;https://www.php.net/manual/en/features.remote-files.php&quot;&gt;远程文件，&lt;/a&gt;因为必须通过服务器的文件系统访问要检查的文件。</target>
        </trans-unit>
        <trans-unit id="8fde253738fe67e2536deee34ab7d55eb3c7463e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When &lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;safe mode&lt;/a&gt; is enabled, PHP checks whether the directory in which the script is operating has the same UID (owner) as the script that is being executed.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：启用&lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;安全模式后&lt;/a&gt;，PHP会检查脚本运行所在的目录是否与正在执行的脚本具有相同的UID（所有者）。</target>
        </trans-unit>
        <trans-unit id="8a8cb34d708811824ccf908817adfc21f7bec711" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When &lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;safe mode&lt;/a&gt; is enabled, PHP checks whether the files or directories being operated upon have the same UID (owner) as the script that is being executed.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：启用&lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;安全模式后&lt;/a&gt;，PHP会检查正在操作的文件或目录是否与正在执行的脚本具有相同的UID（所有者）。</target>
        </trans-unit>
        <trans-unit id="a040558fbd9d743712177ba8be4a06234d9980f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When &lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;safe mode&lt;/a&gt; is enabled, you can only execute files within the &lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode-exec-dir&quot;&gt;safe_mode_exec_dir&lt;/a&gt;. For practical reasons, it is currently not allowed to have &lt;em&gt;..&lt;/em&gt; components in the path to the executable.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：启用&lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;安全模式后&lt;/a&gt;，您只能在&lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode-exec-dir&quot;&gt;safe_mode_exec_dir中&lt;/a&gt;执行文件。出于实际原因，当前不允许在可执行文件的路径中包含&lt;em&gt;..&lt;/em&gt;组件。</target>
        </trans-unit>
        <trans-unit id="44f52c10411ae28dbfed368632b185142fa92903" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When specifying a numerical IPv6 address (e.g. &lt;code&gt;fe80::1&lt;/code&gt;), you must enclose the IP in square brackets&amp;mdash;for example, &lt;code&gt;tcp://[fe80::1]:80&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：指定数字IPv6地址（例如 &lt;code&gt;fe80::1&lt;/code&gt; ）时，必须将IP括在方括号中，例如 &lt;code&gt;tcp://[fe80::1]:80&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a35cd07326e6008972bda70e99e1f3bc6c7b82ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When specifying a numerical IPv6 address (e.g. &lt;em&gt;fe80::1&lt;/em&gt;), you must enclose the IP in square brackets&amp;mdash;for example, &lt;em&gt;tcp://[fe80::1]:80&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：指定数字IPv6地址（例如&lt;em&gt;fe80 :: 1&lt;/em&gt;）时，必须将IP括在方括号中，例如&lt;em&gt;tcp：// [fe80 :: 1]：80&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="6f089aff5e0a56b0251f0e5ac5234a9579c55347" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NumberFormatter&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;NumberFormatter&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="cc1542c7ab271518b6f75a138c28bdd02cc6d813" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OAuth&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;OAuth&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="b8511204d7facba5dec085632ab328d2dac8a9d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OAuthException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;OAuthException&lt;/strong&gt;扩展了&lt;a href=&quot;class.exception&quot;&gt;异常&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="81f5f3e400e2488761810bd4e8c4d0a171f49001" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OAuthProvider&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;OAuthProvider&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="2b2098fa93bc07068b4fd71f1ec941fd8bedc4d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OID .1.3.6.1.2.1.1.3.0 representation for various &lt;code&gt;oid_format&lt;/code&gt; values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;各种 &lt;code&gt;oid_format&lt;/code&gt; 值的OID .1.3.6.1.2.1.1.3.0表示形式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4b5a53c8c1930b3973e741a5f3eed797ba5bb63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OID .1.3.6.1.2.1.1.3.0 representation for various &lt;var&gt;oid_output_format&lt;/var&gt; values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;各种 &lt;var&gt;oid_output_format&lt;/var&gt; 值的OID .1.3.6.1.2.1.1.3.0表示形式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ea1d9f29198708d26930ed1601683104888bc03d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Object attributes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;对象属性&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6275428f7841419ad55d5fa80dabb3d65d2abd33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Object properties&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;对象属性&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9259315dd82f4a4c4495648dc1aea296a4820c50" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Operator Precedence&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;运算符优先级&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8b69902bd56f178414816545f495ef706c7ce91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Optional flags for names&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;名称的可选标志&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f1efb156693ad5f21691f5e2f320fbacaba3844e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Other keys in associative arrays dependant on 'type'&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;关联数组中的其他键取决于'type'&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0de6f5087043455b8dd92589de5ba265672b014e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OutOfBoundsException&lt;/strong&gt;extends&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;OutOfBoundsException&lt;/strong&gt;扩展了&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="b3b589b9e47a0049588fa3b30cff02f747bbe915" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OutOfRangeException&lt;/strong&gt;extends&lt;a href=&quot;class.logicexception&quot;&gt;LogicException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;OutOfRangeException&lt;/strong&gt;扩展了&lt;a href=&quot;class.logicexception&quot;&gt;LogicException&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="0c0f0cc64ea9e44c0afdc39c9676484f01dc1551" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OuterIterator&lt;/strong&gt;extends&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;OuterIterator&lt;/strong&gt;扩展了&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="12a45d4a8fab415da4871ae564536ff6fd080c3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OverflowException&lt;/strong&gt;extends&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;OverflowException&lt;/strong&gt;扩展了&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="7f58b6181570e2973bf5a4a9ad01381f8094f0e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::__construct()&lt;/strong&gt; throws a &lt;a href=&quot;class.pdoexception&quot;&gt;PDOException&lt;/a&gt; if the attempt to connect to the requested database fails.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果尝试连接到请求的数据库失败，则&lt;strong&gt;PDO :: __ construct（）&lt;/strong&gt;会引发&lt;a href=&quot;class.pdoexception&quot;&gt;PDOException&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="73d552c0ef17f312251a8a1407807fe5d1c44808" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::errorCode()&lt;/strong&gt; only retrieves error codes for operations performed directly on the database handle. If you create a PDOStatement object through &lt;a href=&quot;pdo.prepare&quot;&gt;PDO::prepare()&lt;/a&gt; or &lt;a href=&quot;pdo.query&quot;&gt;PDO::query()&lt;/a&gt; and invoke an error on the statement handle, &lt;strong&gt;PDO::errorCode()&lt;/strong&gt; will not reflect that error. You must call &lt;a href=&quot;pdostatement.errorcode&quot;&gt;PDOStatement::errorCode()&lt;/a&gt; to return the error code for an operation performed on a particular statement handle.</source>
          <target state="translated">&lt;strong&gt;PDO :: errorCode（）&lt;/strong&gt;仅检索直接在数据库句柄上执行的操作的错误代码。如果通过&lt;a href=&quot;pdo.prepare&quot;&gt;PDO :: prepare（）&lt;/a&gt;或&lt;a href=&quot;pdo.query&quot;&gt;PDO :: query（）&lt;/a&gt;创建PDOStatement对象并在语句句柄上调用错误，则&lt;strong&gt;PDO :: errorCode（）&lt;/strong&gt;不会反映该错误。您必须调用&lt;a href=&quot;pdostatement.errorcode&quot;&gt;PDOStatement :: errorCode（）&lt;/a&gt;返回在特定语句句柄上执行的操作的错误代码。</target>
        </trans-unit>
        <trans-unit id="865f9329d1518a1eeebf1c948bac6e9eefb22bbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::errorInfo()&lt;/strong&gt; only retrieves error information for operations performed directly on the database handle. If you create a PDOStatement object through &lt;a href=&quot;pdo.prepare&quot;&gt;PDO::prepare()&lt;/a&gt; or &lt;a href=&quot;pdo.query&quot;&gt;PDO::query()&lt;/a&gt; and invoke an error on the statement handle, &lt;strong&gt;PDO::errorInfo()&lt;/strong&gt; will not reflect the error from the statement handle. You must call &lt;a href=&quot;pdostatement.errorinfo&quot;&gt;PDOStatement::errorInfo()&lt;/a&gt; to return the error information for an operation performed on a particular statement handle.</source>
          <target state="translated">&lt;strong&gt;PDO :: errorInfo（）&lt;/strong&gt;仅检索直接在数据库句柄上执行的操作的错误信息。如果通过&lt;a href=&quot;pdo.prepare&quot;&gt;PDO :: prepare（）&lt;/a&gt;或&lt;a href=&quot;pdo.query&quot;&gt;PDO :: query（）&lt;/a&gt;创建PDOStatement对象并在语句句柄上调用错误，则&lt;strong&gt;PDO :: errorInfo（）&lt;/strong&gt;不会从语句句柄反映错误。您必须调用&lt;a href=&quot;pdostatement.errorinfo&quot;&gt;PDOStatement :: errorInfo（）&lt;/a&gt;来返回针对特定语句句柄执行的操作的错误信息。</target>
        </trans-unit>
        <trans-unit id="d91173279a22be33cc72e48d55002b535bcf597a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::errorInfo()&lt;/strong&gt; returns an array of error information about the last operation performed by this database handle. The array consists of at least the following fields:</source>
          <target state="translated">&lt;strong&gt;PDO :: errorInfo（）&lt;/strong&gt;返回有关此数据库句柄执行的最后操作的错误信息数组。该数组至少包含以下字段：</target>
        </trans-unit>
        <trans-unit id="2a6a19228946dd61f54222e08a2c4532016584a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::errorInfo()&lt;/strong&gt; returns an array of error information about the last operation performed by this database handle. The array consists of the following fields:</source>
          <target state="translated">&lt;strong&gt;PDO :: errorInfo（）&lt;/strong&gt;返回有关此数据库句柄执行的最后操作的错误信息数组。该数组包含以下字段：</target>
        </trans-unit>
        <trans-unit id="b91bb380b4f6044675bb0868c70a1dd0177e3c8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::exec()&lt;/strong&gt; does not return results from a SELECT statement. For a SELECT statement that you only need to issue once during your program, consider issuing &lt;a href=&quot;pdo.query&quot;&gt;PDO::query()&lt;/a&gt;. For a statement that you need to issue multiple times, prepare a PDOStatement object with &lt;a href=&quot;pdo.prepare&quot;&gt;PDO::prepare()&lt;/a&gt; and issue the statement with &lt;a href=&quot;pdostatement.execute&quot;&gt;PDOStatement::execute()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;PDO :: exec（）&lt;/strong&gt;不会从SELECT语句返回结果。对于只需要在程序执行期间发出一次的SELECT语句，请考虑发出&lt;a href=&quot;pdo.query&quot;&gt;PDO :: query（）&lt;/a&gt;。对于需要多次发布的语句，请使用&lt;a href=&quot;pdo.prepare&quot;&gt;PDO :: prepare（）&lt;/a&gt;准备一个PDOStatement对象，然后使用&lt;a href=&quot;pdostatement.execute&quot;&gt;PDOStatement :: execute（）&lt;/a&gt;发出该语句。</target>
        </trans-unit>
        <trans-unit id="d0bbb69274b5335238a46ebea6c5043d74339225" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::exec()&lt;/strong&gt; executes an SQL statement in a single function call, returning the number of rows affected by the statement.</source>
          <target state="translated">&lt;strong&gt;PDO :: exec（）&lt;/strong&gt;在单个函数调用中执行一条SQL语句，返回该语句影响的行数。</target>
        </trans-unit>
        <trans-unit id="17d06b637acfff7388dc5a212c3c11ae54ccc4f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::exec()&lt;/strong&gt; returns the number of rows that were modified or deleted by the SQL statement you issued. If no rows were affected, &lt;strong&gt;PDO::exec()&lt;/strong&gt; returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;PDO :: exec（）&lt;/strong&gt;返回由您发出的SQL语句修改或删除的行数。如果没有受影响的行，则&lt;strong&gt;PDO :: exec（）&lt;/strong&gt;返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="416bc9754a848bc23e74d8382b6dea2ddd2e4e4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::exec()&lt;/strong&gt; returns the number of rows that were modified or deleted by the SQL statement you issued. If no rows were affected, &lt;strong&gt;PDO::exec()&lt;/strong&gt; returns &lt;em&gt;0&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;PDO :: exec（）&lt;/strong&gt;返回您发出的SQL语句修改或删除的行数。如果没有受影响的行，则&lt;strong&gt;PDO :: exec（）&lt;/strong&gt;返回&lt;em&gt;0&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0c27c9096715053371552c3ea024ab0513697ab0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::getAvailableDrivers()&lt;/strong&gt; returns an array of PDO driver names. If no drivers are available, it returns an empty array.</source>
          <target state="translated">&lt;strong&gt;PDO :: getAvailableDrivers（）&lt;/strong&gt;返回PDO驱动程序名称的数组。如果没有可用的驱动程序，它将返回一个空数组。</target>
        </trans-unit>
        <trans-unit id="d0c4ec98a28b05222600e3460da0ec587f4fcd2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::query()&lt;/strong&gt; executes an SQL statement in a single function call, returning the result set (if any) returned by the statement as a PDOStatement object.</source>
          <target state="translated">&lt;strong&gt;PDO :: query（）&lt;/strong&gt;在单个函数调用中执行一条SQL语句，以PDOStatement对象的形式返回该语句返回的结果集（如果有）。</target>
        </trans-unit>
        <trans-unit id="7b76845a750a55118904066be9bb0937d157be4d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::query()&lt;/strong&gt; returns a PDOStatement object, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="translated">&lt;strong&gt;PDO :: query（）&lt;/strong&gt;返回PDOStatement对象，&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;失败则返回&lt;strong&gt;FALSE&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="e5f12756ab1a14c5c47e93a75caa0031db9d79ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::query()&lt;/strong&gt; returns a PDOStatement object, or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="translated">&lt;strong&gt;PDO :: query（）&lt;/strong&gt;返回PDOStatement对象，否则返回&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="71f531c07594bb4080008ddd0638e45db89105db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::quote()&lt;/strong&gt; places quotes around the input string (if required) and escapes special characters within the input string, using a quoting style appropriate to the underlying driver.</source>
          <target state="translated">&lt;strong&gt;PDO :: quote（）&lt;/strong&gt;使用适合底层驱动程序的引号样式将引号放在输入字符串周围（如果需要），并在输入字符串内转义特殊字符。</target>
        </trans-unit>
        <trans-unit id="b31f40e7c6e1fe8b3ccb6c4e05cf9936ef0b938c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;PDO&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="96a116e9a19e2cdc9a11e75c7f066e8abcbfc81b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOException&lt;/strong&gt;extends&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;PDOException&lt;/strong&gt;扩展了&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="21bf0360283db6fab6a93edf5963815c75212749" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::bindColumn()&lt;/strong&gt; arranges to have a particular variable bound to a given column in the result-set from a query. Each call to &lt;a href=&quot;pdostatement.fetch&quot;&gt;PDOStatement::fetch()&lt;/a&gt; or &lt;a href=&quot;pdostatement.fetchall&quot;&gt;PDOStatement::fetchAll()&lt;/a&gt; will update all the variables that are bound to columns.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: bindColumn（）&lt;/strong&gt;安排将特定变量绑定到查询结果集中的给定列。每次调用&lt;a href=&quot;pdostatement.fetch&quot;&gt;PDOStatement :: fetch（）&lt;/a&gt;或&lt;a href=&quot;pdostatement.fetchall&quot;&gt;PDOStatement :: fetchAll（）&lt;/a&gt;都会更新绑定到列的所有变量。</target>
        </trans-unit>
        <trans-unit id="6777e0cf26e4118de2241636d825635ef06531dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::closeCursor()&lt;/strong&gt; frees up the connection to the server so that other SQL statements may be issued, but leaves the statement in a state that enables it to be executed again.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: closeCursor（）&lt;/strong&gt;释放与服务器的连接，以便可以发出其他SQL语句，但将语句保持在使其可以再次执行的状态。</target>
        </trans-unit>
        <trans-unit id="f0ef53563eac5c5c568d6bb02b67ed0ac083315c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::closeCursor()&lt;/strong&gt; is implemented either as an optional driver specific method (allowing for maximum efficiency), or as the generic PDO fallback if no driver specific function is installed. The PDO generic fallback is semantically the same as writing the following code in your PHP script:</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: closeCursor（）&lt;/strong&gt;被实现为可选的特定于驱动程序的方法（以实现最大效率），或者被实现为通用PDO后备（如果未安装特定于驱动程序的功能）。PDO通用回退在语义上与在PHP脚本中编写以下代码相同：</target>
        </trans-unit>
        <trans-unit id="6f7a62139292ba248797ba6c9827154b37a0db64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::debugDumpParams()&lt;/strong&gt; now returns the SQL sent to the database, including the full, raw query (including the replaced placeholders with their bounded values). Note, that this will only be available if emulated prepared statements are turned on.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: debugDumpParams（）&lt;/strong&gt;现在返回发送到数据库的SQL，包括完整的原始查询（包括替换后的占位符及其边界值）。请注意，只有在打开模拟预备语句的情况下，此选项才可用。</target>
        </trans-unit>
        <trans-unit id="5f1c46d1d7cf07a57d2137cd61f5ace7be9fe1c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::errorInfo()&lt;/strong&gt; returns an array of error information about the last operation performed by this statement handle. The array consists of at least the following fields:</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: errorInfo（）&lt;/strong&gt;返回有关此语句句柄执行的最后操作的错误信息数组。该数组至少包含以下字段：</target>
        </trans-unit>
        <trans-unit id="28a3b39647c0eaadea87c0f01bd03feb36f04f84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::errorInfo()&lt;/strong&gt; returns an array of error information about the last operation performed by this statement handle. The array consists of the following fields:</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: errorInfo（）&lt;/strong&gt;返回有关此语句句柄执行的最后操作的错误信息数组。该数组包含以下字段：</target>
        </trans-unit>
        <trans-unit id="5a4f3267abd5be0902bdf7c9db83031081bfcb62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::fetchAll()&lt;/strong&gt; returns an array containing all of the remaining rows in the result set. The array represents each row as either an array of column values or an object with properties corresponding to each column name. An empty array is returned if there are zero results to fetch, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: fetchAll（）&lt;/strong&gt;返回包含结果集中所有剩余行的数组。该数组将每一行表示为列值的数组或具有与每个列名相对应的属性的对象。如果要获取的结果为零，则返回空数组；如果失败，则返回&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="49a0f28831b11c50094067349c57d8f1fb66b3ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::fetchAll()&lt;/strong&gt; returns an array containing all of the remaining rows in the result set. The array represents each row as either an array of column values or an object with properties corresponding to each column name. An empty array is returned if there are zero results to fetch, or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: fetchAll（）&lt;/strong&gt;返回包含结果集中所有剩余行的数组。该数组将每一行表示为列值的数组或具有与每个列名相对应的属性的对象。如果要获取的结果为零，则返回空数组；如果失败，则返回&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="2e5c5903b169caac8a309e9349514a7f49d52396" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::fetchColumn()&lt;/strong&gt; returns a single column from the next row of a result set or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if there are no more rows.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: fetchColumn（）&lt;/strong&gt;从结果集的下一行返回单个列，如果没有更多行，则返回&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="ec93d0a7687b2ae2058acad9c14354fc0f8f4d89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::fetchColumn()&lt;/strong&gt; returns a single column from the next row of a result set or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if there are no more rows.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: fetchColumn（）&lt;/strong&gt;从结果集的下一行返回单个列；如果没有更多行，则返回&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="09df340f69976cd524986f140f3e4eea0e772449" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::fetchColumn()&lt;/strong&gt; should not be used to retrieve boolean columns, as it is impossible to distinguish a value of &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; from there being no more rows to retrieve. Use &lt;a href=&quot;pdostatement.fetch&quot;&gt;PDOStatement::fetch()&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: fetchColumn（）&lt;/strong&gt;不应用于检索布尔列，因为不可能从没有更多的行来区分&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;的值。使用&lt;a href=&quot;pdostatement.fetch&quot;&gt;PDOStatement :: fetch（）&lt;/a&gt;代替。</target>
        </trans-unit>
        <trans-unit id="7ca5decf71111d4fe6ff459e79072b63aade4b30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::fetchColumn()&lt;/strong&gt; should not be used to retrieve boolean columns, as it is impossible to distinguish a value of &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; from there being no more rows to retrieve. Use &lt;a href=&quot;pdostatement.fetch&quot;&gt;PDOStatement::fetch()&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: fetchColumn（）&lt;/strong&gt;不应用于检索布尔列，因为不可能从没有更多要检索的行中区分出&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;值。使用&lt;a href=&quot;pdostatement.fetch&quot;&gt;PDOStatement :: fetch（）&lt;/a&gt;代替。</target>
        </trans-unit>
        <trans-unit id="faab7fc3dae186014a8bacdfc654dd45e83ac614" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::rowCount()&lt;/strong&gt; returns the number of rows affected by a DELETE, INSERT, or UPDATE statement.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: rowCount（）&lt;/strong&gt;返回受DELETE，INSERT或UPDATE语句影响的行数。</target>
        </trans-unit>
        <trans-unit id="be6f332a96313740e15164c5fb9481f9daa12ad0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::rowCount()&lt;/strong&gt; returns the number of rows affected by the last DELETE, INSERT, or UPDATE statement executed by the corresponding &lt;code&gt;PDOStatement&lt;/code&gt; object.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: rowCount（）&lt;/strong&gt;返回受相应 &lt;code&gt;PDOStatement&lt;/code&gt; 对象执行的最后一个DELETE，INSERT或UPDATE语句影响的行数。</target>
        </trans-unit>
        <trans-unit id="1c5c5547261ae80005c7805c2b042368a9338d26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::rowCount()&lt;/strong&gt; returns the number of rows affected by the last DELETE, INSERT, or UPDATE statement executed by the corresponding &lt;em&gt;PDOStatement&lt;/em&gt; object.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: rowCount（）&lt;/strong&gt;返回受相应&lt;em&gt;PDOStatement&lt;/em&gt;对象执行的最后一个DELETE，INSERT或UPDATE语句影响的行数。</target>
        </trans-unit>
        <trans-unit id="9bb433b047c8837c03b06c4a17f6f5da29fbd9bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement&lt;/strong&gt;implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;PDOStatement&lt;/strong&gt;实现了&lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="b2cd37c08a1122b12de2cef6c54837aa6aa3584b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PHP's magic constants&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PHP的魔术常数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2c63ad96fa2ae6d1da10478633a27a6c9f826c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParentIterator&lt;/strong&gt;extends&lt;a href=&quot;class.recursivefilteriterator&quot;&gt;RecursiveFilterIterator&lt;/a&gt;implements &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt;, &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ParentIterator&lt;/strong&gt;扩展了&lt;a href=&quot;class.recursivefilteriterator&quot;&gt;RecursiveFilterIterator&lt;/a&gt;实现&lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt;，&lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="34e610a9b67248cdb6d19d7c2fa353d1397639f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Parle\ErrorInfo&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Parle\ErrorInfo&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="057e770f47cb2055c86abac1d106e1b29779df0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Parle\Lexer&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Parle\Lexer&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="6e34985e303783b47cd9fde3fe54813565558d40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Parle\LexerException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt;implements &lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Parle \ LexerException&lt;/strong&gt;扩展了&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt;实现&lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="73d5660b8f9fa7fa91fa9d5ca922f0fb19b76cdd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Parle\Parser&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Parle\Parser&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="ba517b91e53c5b49306936a50947849f2559d25c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Parle\ParserException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt;implements &lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Parle \ ParserException&lt;/strong&gt;扩展了&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt;实现&lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="4c8352b5f9b47dc99cd467be45709bfd78ed9c18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Parle\RLexer&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Parle\RLexer&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="35bedd59f38a803a74af6f4cb59f0c5731e7079c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Parle\RParser&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Parle \ Rarser&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="5471aff75a954d702d831dae136a5cbfdbaaffdc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Parle\Stack&lt;/strong&gt; is a LIFO stack. The elements are inserted and removed only from one end.</source>
          <target state="translated">&lt;strong&gt;Parle \ Stack&lt;/strong&gt;是一个LIFO堆栈。元素只能从一端插入和删除。</target>
        </trans-unit>
        <trans-unit id="855df98a1317c0864c01402115b779a254028074" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Parle\Stack&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Parle\Stack&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="530b2b74affaa30dfc48bb6c15388e3faad7b5fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Parle\Token&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Parle\Token&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="6c2f84b98f8ab6aef9903a4ec0218cc5c6395f78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParseError&lt;/strong&gt; is thrown when an error occurs while parsing PHP code, such as when &lt;a href=&quot;function.eval&quot;&gt;eval()&lt;/a&gt; is called.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;解析PHP代码时发生错误时（例如，调用&lt;a href=&quot;function.eval&quot;&gt;eval（）&lt;/a&gt;时），将引发&lt;strong&gt;ParseError&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="e8e0ad3b74405d7181fcde3c7940b8beaa82e304" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParseError&lt;/strong&gt;extends&lt;a href=&quot;class.compileerror&quot;&gt;CompileError&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ParseError&lt;/strong&gt;扩展了&lt;a href=&quot;class.compileerror&quot;&gt;CompileError&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="984811e13e3ff77ec707b34154fd5be1a7c39c39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParseError&lt;/strong&gt;extends&lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ParseError&lt;/strong&gt;扩展了&lt;a href=&quot;class.error&quot;&gt;错误&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="b83c09b300cb6abc24593f639ae7710046b6c9a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Performed translations&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;执行翻译&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="88fd9aa291f3d71b18417e9448806b565d53a043" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Phar::buildFromDirectory()&lt;/strong&gt; returns an associative array mapping internal path of file to the full path of the file on the filesystem.</source>
          <target state="translated">&lt;strong&gt;Phar :: buildFromDirectory（）&lt;/strong&gt;返回一个关联数组，将文件的内部路径映射到文件系统上文件的完整路径。</target>
        </trans-unit>
        <trans-unit id="4ed38a11c580ff6e9cad7676b91e0bab6099e19c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Phar::buildFromIterator()&lt;/strong&gt; returns an associative array mapping internal path of file to the full path of the file on the filesystem.</source>
          <target state="translated">&lt;strong&gt;Phar :: buildFromIterator（）&lt;/strong&gt;返回一个关联数组，将文件的内部路径映射到文件系统上文件的完整路径。</target>
        </trans-unit>
        <trans-unit id="11886c94a842cff52e1f2871b0db08a070d7e64d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Phar::mungServer()&lt;/strong&gt; should only be called within the stub of a phar archive.</source>
          <target state="translated">&lt;strong&gt;Phar :: mungServer（）&lt;/strong&gt;仅应在phar存档的存根中调用。</target>
        </trans-unit>
        <trans-unit id="1f39c24e4743b9775774eead2dffc8b48c169cb8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Phar::setMetadata()&lt;/strong&gt; should be used to store customized data that describes something about the phar archive as a complete entity. &lt;a href=&quot;pharfileinfo.setmetadata&quot;&gt;PharFileInfo::setMetadata()&lt;/a&gt; should be used for file-specific meta-data. Meta-data can slow down the performance of loading a phar archive if the data is large.</source>
          <target state="translated">&lt;strong&gt;Phar :: setMetadata（）&lt;/strong&gt;应该用于存储自定义数据，该数据将有关phar存档的某些内容描述为一个完整的实体。&lt;a href=&quot;pharfileinfo.setmetadata&quot;&gt;PharFileInfo :: setMetadata（）&lt;/a&gt;应该用于文件特定的元数据。如果数据很大，元数据会减慢加载phar存档的性能。</target>
        </trans-unit>
        <trans-unit id="5f50bf0fdbf16ceb6f4f565704f557d1f6e2ad03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Phar::stopBuffering()&lt;/strong&gt; is used in conjunction with the &lt;a href=&quot;phar.startbuffering&quot;&gt;Phar::startBuffering()&lt;/a&gt; method. &lt;a href=&quot;phar.startbuffering&quot;&gt;Phar::startBuffering()&lt;/a&gt; can provide a significant performance boost when creating or modifying a Phar archive with a large number of files. Ordinarily, every time a file within a Phar archive is created or modified in any way, the entire Phar archive will be recreated with the changes. In this way, the archive will be up-to-date with the activity performed on it.</source>
          <target state="translated">&lt;strong&gt;Phar :: stopBuffering（）&lt;/strong&gt;与&lt;a href=&quot;phar.startbuffering&quot;&gt;Phar :: startBuffering（）&lt;/a&gt;方法结合使用。当创建或修改包含大量文件的Phar存档时，&lt;a href=&quot;phar.startbuffering&quot;&gt;Phar :: startBuffering（）&lt;/a&gt;可以显着提高性能。通常，每次以任何方式创建或修改Phar归档文件中的文件时，都会使用更改重新创建整个Phar归档文件。这样，归档文件将是最新的，并且已对其执行活动。</target>
        </trans-unit>
        <trans-unit id="8626347328b102d756f7272e62c6858c85815ac4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Phar::webPhar()&lt;/strong&gt; should only be called from the stub of a phar archive (see &lt;a href=&quot;https://secure.php.net/manual/en/phar.fileformat.stub.php&quot;&gt;here&lt;/a&gt; for more information on what a stub is).</source>
          <target state="translated">&lt;strong&gt;Phar :: webPhar（）&lt;/strong&gt;仅应从phar档案的存根中调用（有关存根的更多信息，请参见&lt;a href=&quot;https://secure.php.net/manual/en/phar.fileformat.stub.php&quot;&gt;此处&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="3d9e8d3e9acc5b7f0de3cb89b32460dddb58629c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Phar::webPhar()&lt;/strong&gt; should only be called from the stub of a phar archive (see &lt;a href=&quot;https://www.php.net/manual/en/phar.fileformat.stub.php&quot;&gt;here&lt;/a&gt; for more information on what a stub is).</source>
          <target state="translated">&lt;strong&gt;Phar :: webPhar（）&lt;/strong&gt;仅应从phar存档的存根中调用（有关存根的更多信息，请参见&lt;a href=&quot;https://www.php.net/manual/en/phar.fileformat.stub.php&quot;&gt;此处&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="99aa271e60ceeafbd8b39f29f36bc3f707fdb4e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Phar&lt;/strong&gt;extends&lt;a href=&quot;class.recursivedirectoryiterator&quot;&gt;RecursiveDirectoryIterator&lt;/a&gt;implements &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Phar&lt;/strong&gt;扩展了&lt;a href=&quot;class.recursivedirectoryiterator&quot;&gt;RecursiveDirectoryIterator&lt;/a&gt;实现&lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt;，&lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="b2eca0b90f888088aacc6f500f70b2f0dcafc61e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PharData::buildFromIterator()&lt;/strong&gt; returns an associative array mapping internal path of file to the full path of the file on the filesystem.</source>
          <target state="translated">&lt;strong&gt;PharData :: buildFromIterator（）&lt;/strong&gt;返回一个关联数组，将文件的内部路径映射到文件系统上文件的完整路径。</target>
        </trans-unit>
        <trans-unit id="34ce7ec56d6863dbefb276883a2861cfed11ab8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PharData&lt;/strong&gt;extends&lt;a href=&quot;class.recursivedirectoryiterator&quot;&gt;RecursiveDirectoryIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;PharData&lt;/strong&gt;扩展了&lt;a href=&quot;class.recursivedirectoryiterator&quot;&gt;RecursiveDirectoryIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="3a3af4f225667f576f628e8b85ebed3cb4d0165f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PharData&lt;/strong&gt;extends&lt;a href=&quot;class.recursivedirectoryiterator&quot;&gt;RecursiveDirectoryIterator&lt;/a&gt;implements &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;PharData&lt;/strong&gt;扩展了&lt;a href=&quot;class.recursivedirectoryiterator&quot;&gt;RecursiveDirectoryIterator&lt;/a&gt;实现&lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt;，&lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="e4db26b8795b82bd79098c722b178030b90ccbff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PharException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;PharException&lt;/strong&gt;扩展了&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="16351115d719178cb19c4944c35b565a3ec5f9d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PharFileInfo::chmod()&lt;/strong&gt; allows setting of the executable file permissions bit, as well as read-only bits. Writeable bits are ignored, and set at runtime based on the &lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI variable. As with all functionality that modifies the contents of a phar, the &lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI variable must be off in order to succeed if the file is within a &lt;a href=&quot;class.phar&quot;&gt;Phar&lt;/a&gt; archive. Files within &lt;a href=&quot;class.phardata&quot;&gt;PharData&lt;/a&gt; archives do not have this restriction.</source>
          <target state="translated">&lt;strong&gt;PharFileInfo :: chmod（）&lt;/strong&gt;允许设置可执行文件权限位以及只读位。可写位将被忽略，并在运行时根据&lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI变量进行设置。与所有修改phar内容的功能一样，如果文件位于&lt;a href=&quot;class.phar&quot;&gt;Phar&lt;/a&gt;存档中，则必须关闭&lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI变量才能成功。&lt;a href=&quot;class.phardata&quot;&gt;PharData&lt;/a&gt;存档中的文件没有此限制。</target>
        </trans-unit>
        <trans-unit id="d5325085a3f43e95cfe73c82fcd2b73a1f9585d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PharFileInfo::chmod()&lt;/strong&gt; allows setting of the executable file permissions bit, as well as read-only bits. Writeable bits are ignored, and set at runtime based on the &lt;a href=&quot;https://www.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI variable. As with all functionality that modifies the contents of a phar, the &lt;a href=&quot;https://www.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI variable must be off in order to succeed if the file is within a &lt;a href=&quot;class.phar&quot;&gt;Phar&lt;/a&gt; archive. Files within &lt;a href=&quot;class.phardata&quot;&gt;PharData&lt;/a&gt; archives do not have this restriction.</source>
          <target state="translated">&lt;strong&gt;PharFileInfo :: chmod（）&lt;/strong&gt;允许设置可执行文件权限位以及只读位。可写位将被忽略，并在运行时根据&lt;a href=&quot;https://www.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI变量进行设置。与修改phar内容的所有功能一样，如果文件位于&lt;a href=&quot;class.phar&quot;&gt;Phar&lt;/a&gt;归档文件中，则必须关闭&lt;a href=&quot;https://www.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI变量才能成功。&lt;a href=&quot;class.phardata&quot;&gt;PharData&lt;/a&gt;存档中的文件没有此限制。</target>
        </trans-unit>
        <trans-unit id="0587446888e9d7ba08a6596f6fd251fe26533063" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PharFileInfo::setMetadata()&lt;/strong&gt; should only be used to store customized data in a file that cannot be represented with existing information stored with a file. Meta-data can significantly slow down the performance of loading a phar archive if the data is large, or if there are many files containing meta-data. It is important to note that file permissions are natively supported inside a phar; it is possible to set them with the &lt;a href=&quot;pharfileinfo.chmod&quot;&gt;PharFileInfo::chmod()&lt;/a&gt; method. As with all functionality that modifies the contents of a phar, the &lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI variable must be off in order to succeed if the file is within a &lt;a href=&quot;class.phar&quot;&gt;Phar&lt;/a&gt; archive. Files within &lt;a href=&quot;class.phardata&quot;&gt;PharData&lt;/a&gt; archives do not have this restriction.</source>
          <target state="translated">&lt;strong&gt;PharFileInfo :: setMetadata（）&lt;/strong&gt;仅应用于将自定义数据存储在文件中，而该文件无法用文件存储的现有信息来表示。如果数据很大，或者如果有很多包含元数据的文件，则元数据会大大降低加载phar存档的性能。重要的是要注意，phar内部支持文件权限。可以使用&lt;a href=&quot;pharfileinfo.chmod&quot;&gt;PharFileInfo :: chmod（）&lt;/a&gt;方法进行设置。与所有修改phar内容的功能一样，如果文件位于&lt;a href=&quot;class.phar&quot;&gt;Phar&lt;/a&gt;存档中，则必须关闭&lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI变量才能成功。&lt;a href=&quot;class.phardata&quot;&gt;PharData&lt;/a&gt;存档中的文件没有此限制。</target>
        </trans-unit>
        <trans-unit id="acfbb295282bce4c98dde600001af46843a65bd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PharFileInfo::setMetadata()&lt;/strong&gt; should only be used to store customized data in a file that cannot be represented with existing information stored with a file. Meta-data can significantly slow down the performance of loading a phar archive if the data is large, or if there are many files containing meta-data. It is important to note that file permissions are natively supported inside a phar; it is possible to set them with the &lt;a href=&quot;pharfileinfo.chmod&quot;&gt;PharFileInfo::chmod()&lt;/a&gt; method. As with all functionality that modifies the contents of a phar, the &lt;a href=&quot;https://www.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI variable must be off in order to succeed if the file is within a &lt;a href=&quot;class.phar&quot;&gt;Phar&lt;/a&gt; archive. Files within &lt;a href=&quot;class.phardata&quot;&gt;PharData&lt;/a&gt; archives do not have this restriction.</source>
          <target state="translated">&lt;strong&gt;PharFileInfo :: setMetadata（）&lt;/strong&gt;仅应用于将自定义数据存储在文件中，而该文件不能用与文件一起存储的现有信息来表示。如果数据很大，或者如果有很多包含元数据的文件，则元数据会大大降低加载phar存档的性能。重要的是要注意，文件权限本身在phar内部受支持。可以使用&lt;a href=&quot;pharfileinfo.chmod&quot;&gt;PharFileInfo :: chmod（）&lt;/a&gt;方法进行设置。与修改phar内容的所有功能一样，如果文件位于&lt;a href=&quot;class.phar&quot;&gt;Phar&lt;/a&gt;存档中，则必须关闭&lt;a href=&quot;https://www.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI变量才能成功。&lt;a href=&quot;class.phardata&quot;&gt;PharData&lt;/a&gt;存档中的文件没有此限制。</target>
        </trans-unit>
        <trans-unit id="82dff2a5c3c912120dc914fbd1fad38f29a36cba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PharFileInfo&lt;/strong&gt;extends&lt;a href=&quot;class.splfileinfo&quot;&gt;SplFileInfo&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;PharFileInfo&lt;/strong&gt;扩展了&lt;a href=&quot;class.splfileinfo&quot;&gt;SplFileInfo&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="1e26ab11c507f8f1911c4dff39bf7ad9730ac217" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PhpToken&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;PhpToken&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="95cb8b657a52ee881ecab1a912cd5ad0bf65f6aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pool&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;池&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="1f9bfc410a628b5915c09911418538a35e491db1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible array indexes for &lt;code&gt;extrainfo&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;对于可能出现的数组索引 &lt;code&gt;extrainfo&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a9e01da745f97efe5f2685acd60533e84fa4d943" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible mysqli_info return values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;可能的mysqli_info返回值&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1aa3c7307277e0ef8da52f85bab0b497d8e9d279" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible returned elements from &lt;strong&gt;debug_backtrace()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;strong&gt;debug_backtrace（）&lt;/strong&gt;可能返回的元素&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fef39b7082d68e897e306faf261a473c57997f12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible values for &lt;code&gt;flags&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;flags&lt;/code&gt; 可能值&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80c96e8c4a8ab2f9d1bca0ccccbf1ce44bc5472e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible values for &lt;code&gt;options&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;options&lt;/code&gt; 可能值&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="25f1af6ef958a99a18bcf54d3a7686a80b219df7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;可能的值&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c849376db2301b1a4608918320e745b665e02e31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pre-defined &lt;strong&gt;phpcredits()&lt;/strong&gt; flags&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;预定义的&lt;strong&gt;phpcredits（）&lt;/strong&gt;标志&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d46d762e62c0b1f70f9b34f6d3cda73e7c9d4239" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Primary body type (value may vary with used library, use of constants is recommended)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;主体类型（值可能会因所使用的库而异，建议使用常量）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ceddad784fb454fcd5fb8bf7193ebc7ef941707e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Publickey elements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;公钥元素&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b7721b9e02795e6a6c420ff3fd1534849aa81b93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Query Options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;查询选项&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="afddf49b6bca7f7eed3fa3f27337e7eba9cc10dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;QuickHashIntHash&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;QuickHashIntHash&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="4f08cb326e5fd0b03c7049f527e9e3403fc544dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;QuickHashIntSet&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;QuickHashIntSet&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="7d0fd502c46675a2b91237e4bdb8db960cb8ae3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;QuickHashIntStringHash&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;QuickHashIntStringHash&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="a76c70be36e5483e00d06927a09de0f7ac814400" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;QuickHashStringIntHash&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;QuickHashStringIntHash&lt;/strong&gt; {</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
