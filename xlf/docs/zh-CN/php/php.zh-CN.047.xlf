<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="php">
    <body>
      <group id="php">
        <trans-unit id="f1b068fca6e684d2b63aa4062f6979d377950ee9" translate="yes" xml:space="preserve">
          <source>ReflectionClass::setStaticPropertyValue &amp;rarr;</source>
          <target state="translated">ReflectionClass :: setStaticPropertyValue&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="4bf867fecada9c49b0b73b224e2d387e73dc3896" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant</source>
          <target state="translated">ReflectionClassConstant</target>
        </trans-unit>
        <trans-unit id="3901edfecc69ca78bda22fb2908305bbf64e0dc5" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant &amp;rarr;</source>
          <target state="translated">ReflectionClassConstant&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="b07adefb806e732718792d3151610befd3553863" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::__construct</source>
          <target state="translated">ReflectionClassConstant::__construct</target>
        </trans-unit>
        <trans-unit id="e1c5c1c453371383c3548250ec6c0a3307f88204" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::__construct &amp;mdash; Constructs a ReflectionClassConstant</source>
          <target state="translated">ReflectionClassConstant :: __ construct &amp;mdash;构造一个ReflectionClassConstant</target>
        </trans-unit>
        <trans-unit id="8097129bec389db9f5b76313484e073f76d0d596" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::__construct &amp;rarr;</source>
          <target state="translated">ReflectionClassConstant :: __ construct&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="14ad82a2f5f9909ef482ab73cda8e3191f19f380" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::__toString</source>
          <target state="translated">ReflectionClassConstant::__toString</target>
        </trans-unit>
        <trans-unit id="40bc3c6d43282e20668e92a20476e985b8daa8ea" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::__toString &amp;mdash; Returns the string representation of the ReflectionClassConstant object</source>
          <target state="translated">ReflectionClassConstant :: __ toString &amp;mdash;返回ReflectionClassConstant对象的字符串表示形式</target>
        </trans-unit>
        <trans-unit id="aa651058d487a1dc08c1e4490cd83264675cf7ee" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::__toString &amp;rarr;</source>
          <target state="translated">ReflectionClassConstant::__toString &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="fe6afd86f333585c2177a653baeee3a67e58c8f6" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::export</source>
          <target state="translated">ReflectionClassConstant::export</target>
        </trans-unit>
        <trans-unit id="dbccd90c597e46d7af0aed941a50f46941f68d4b" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::export &amp;mdash; Export</source>
          <target state="translated">ReflectionClassConstant :: export &amp;mdash;导出</target>
        </trans-unit>
        <trans-unit id="c94a8c7de3cf399e5af83ba71c0f35e2ec5b5d09" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::export &amp;rarr;</source>
          <target state="translated">ReflectionClassConstant :: export&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="5edcad8f57e86005798f5066fa33e97876665a96" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::getDeclaringClass</source>
          <target state="translated">ReflectionClassConstant::getDeclaringClass</target>
        </trans-unit>
        <trans-unit id="32e07c766357cf6bf05dc8452e046679f4215ab9" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::getDeclaringClass &amp;mdash; Gets declaring class</source>
          <target state="translated">ReflectionClassConstant :: getDeclaringClass-获取声明类</target>
        </trans-unit>
        <trans-unit id="f2db65d80c30abf8d04443b444b08931a8c79366" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::getDeclaringClass &amp;rarr;</source>
          <target state="translated">ReflectionClassConstant :: getDeclaringClass&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="6b5dab85395b10de86ed7ba8e6e016a03f31551c" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::getDocComment</source>
          <target state="translated">ReflectionClassConstant::getDocComment</target>
        </trans-unit>
        <trans-unit id="ada043aef08f8f78b66bc946e04fc5b921b2a9b9" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::getDocComment &amp;mdash; Gets doc comments</source>
          <target state="translated">ReflectionClassConstant :: getDocComment &amp;mdash;获取文档注释</target>
        </trans-unit>
        <trans-unit id="59c95b35a55961ee580f9c5a46bd2ee309c78eff" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::getDocComment &amp;rarr;</source>
          <target state="translated">ReflectionClassConstant :: getDocComment&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="1dfcf9512ce553ac43e5a295d5c080ccee5e3dea" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::getModifiers</source>
          <target state="translated">ReflectionClassConstant::getModifiers</target>
        </trans-unit>
        <trans-unit id="51460ecd861ca5496ae61c3aee04bffcd239c0e0" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::getModifiers &amp;mdash; Gets the class constant modifiers</source>
          <target state="translated">ReflectionClassConstant :: getModifiers &amp;mdash;获取类常量修饰符</target>
        </trans-unit>
        <trans-unit id="65197dcf03eda02b0dda8a2540a5ae722090c008" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::getModifiers &amp;rarr;</source>
          <target state="translated">ReflectionClassConstant :: getModifiers&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="1edccafdb40f635dd86911ab2865f7bfa42d9ef4" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::getName</source>
          <target state="translated">ReflectionClassConstant::getName</target>
        </trans-unit>
        <trans-unit id="6ed43104adeb018e69e463cd5e978b8bca95fc03" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::getName &amp;mdash; Get name of the constant</source>
          <target state="translated">ReflectionClassConstant :: getName &amp;mdash;获取常量的名称</target>
        </trans-unit>
        <trans-unit id="d85d06ea5ab178e4aa7943f99f2f759601b9c46d" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::getName &amp;rarr;</source>
          <target state="translated">ReflectionClassConstant :: getName&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="4d0ffd0072b697a77270f78944fb7be4fb0f4ea7" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::getValue</source>
          <target state="translated">ReflectionClassConstant::getValue</target>
        </trans-unit>
        <trans-unit id="8c17dafdd6aae377f7723a32c2b29cd234be0f24" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::getValue &amp;mdash; Gets value</source>
          <target state="translated">ReflectionClassConstant :: getValue &amp;mdash;获取值</target>
        </trans-unit>
        <trans-unit id="7f3127746c66114a19d518ec361f7728b2522fc6" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::getValue &amp;rarr;</source>
          <target state="translated">ReflectionClassConstant :: getValue&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="4203cd42291a02c11af37348e2a05a450a8d017b" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::isPrivate</source>
          <target state="translated">ReflectionClassConstant::isPrivate</target>
        </trans-unit>
        <trans-unit id="c3534ecc7a79c7a0e5d8d78b3b7e95d9cf757e2f" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::isPrivate &amp;mdash; Checks if class constant is private</source>
          <target state="translated">ReflectionClassConstant :: isPrivate &amp;mdash;检查类常量是否为私有</target>
        </trans-unit>
        <trans-unit id="65dfc92671520b144b7fc9cf90cbb535abc2f875" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::isPrivate &amp;rarr;</source>
          <target state="translated">ReflectionClassConstant :: isPrivate&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="056f16c380719ba77393448c644bbb6695172522" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::isProtected</source>
          <target state="translated">ReflectionClassConstant::isProtected</target>
        </trans-unit>
        <trans-unit id="f9508d6ad4aa7ae7a8924105a96dc7f30cbca3c1" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::isProtected &amp;mdash; Checks if class constant is protected</source>
          <target state="translated">ReflectionClassConstant :: isProtected &amp;mdash;检查类常量是否受保护</target>
        </trans-unit>
        <trans-unit id="8b0f243ceecf386f0efec9144efd9e7538e5ff7a" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::isProtected &amp;rarr;</source>
          <target state="translated">ReflectionClassConstant :: isProtected&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="18e11c031bd9a11f607c6987c8fed0049b375b99" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::isPublic</source>
          <target state="translated">ReflectionClassConstant::isPublic</target>
        </trans-unit>
        <trans-unit id="632beb0808a04ec25a0e398f1e11d20c30da7dc3" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::isPublic &amp;mdash; Checks if class constant is public</source>
          <target state="translated">ReflectionClassConstant :: isPublic &amp;mdash;检查类常量是否为公共</target>
        </trans-unit>
        <trans-unit id="b4358c60c2d9002d9ad95e588bc803f7054defb7" translate="yes" xml:space="preserve">
          <source>ReflectionClassConstant::isPublic &amp;rarr;</source>
          <target state="translated">ReflectionClassConstant :: isPublic&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="d2e6a79ac5af42369c9b8bfef75ffbaae1072d33" translate="yes" xml:space="preserve">
          <source>ReflectionException &amp;rarr;</source>
          <target state="translated">ReflectionException&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="5d05f6d39a78d85dff9f3df786d156113e93df46" translate="yes" xml:space="preserve">
          <source>ReflectionExtension &amp;rarr;</source>
          <target state="translated">ReflectionExtension&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="22aebcbf3f211a1d4f33f63570ba3d38b160279a" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::__clone</source>
          <target state="translated">ReflectionExtension::__clone</target>
        </trans-unit>
        <trans-unit id="c911b6b24526b37227bf29ce08e75de658d5e77e" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::__clone &amp;mdash; Clones</source>
          <target state="translated">ReflectionExtension :: __ clone &amp;mdash;克隆</target>
        </trans-unit>
        <trans-unit id="476d8de1b4adbf498f1c48c6a77860a8874cc5c4" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::__clone &amp;rarr;</source>
          <target state="translated">ReflectionExtension :: __克隆&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="76bd85910048d5c6b471e648f8d00a1b2f30c7d3" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::__construct</source>
          <target state="translated">ReflectionExtension::__construct</target>
        </trans-unit>
        <trans-unit id="d0305404613c560fc8229f4c0f18c6db75ec1900" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::__construct &amp;mdash; Constructs a ReflectionExtension</source>
          <target state="translated">ReflectionExtension :: __ construct &amp;mdash;构造一个ReflectionExtension</target>
        </trans-unit>
        <trans-unit id="c5ce8227bb91c6ac114d3792264586985fd73c54" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::__construct &amp;rarr;</source>
          <target state="translated">ReflectionExtension :: __ construct&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="615dce7e01f95c94ded7bd053fd66782cbe1c155" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::__toString</source>
          <target state="translated">ReflectionExtension::__toString</target>
        </trans-unit>
        <trans-unit id="b656402b20f6269a72a178d7e674dbc146e89857" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::__toString &amp;mdash; To string</source>
          <target state="translated">ReflectionExtension :: __ toString &amp;mdash;字符串</target>
        </trans-unit>
        <trans-unit id="ca67ea9ed8cd5b8d721d8cff91a5b4a6f7acdcf4" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::__toString &amp;rarr;</source>
          <target state="translated">ReflectionExtension :: __ toString&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e57925bec88607ddda172de3fc010f031d57d770" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::export</source>
          <target state="translated">ReflectionExtension::export</target>
        </trans-unit>
        <trans-unit id="a4e0bc46f6ece69e02f5bb330991568a0b7351ef" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::export &amp;mdash; Export</source>
          <target state="translated">ReflectionExtension :: export &amp;mdash;导出</target>
        </trans-unit>
        <trans-unit id="db1adf1ca3f19bf599648f932c895ca59e9c214c" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::export &amp;rarr;</source>
          <target state="translated">ReflectionExtension :: export&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e976ab27b6f6dbb2b0480c0ae84b62fec59e06f7" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getClassNames</source>
          <target state="translated">ReflectionExtension::getClassNames</target>
        </trans-unit>
        <trans-unit id="e6e5618034862def998a2648cb61205ea27972fd" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getClassNames &amp;mdash; Gets class names</source>
          <target state="translated">ReflectionExtension :: getClassNames &amp;mdash;获取类名称</target>
        </trans-unit>
        <trans-unit id="aafe72915622087e94e966ccc52129791a960427" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getClassNames &amp;rarr;</source>
          <target state="translated">ReflectionExtension :: getClassNames&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="dced1f4f264045d2d5436afe13b1c3b69d280113" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getClasses</source>
          <target state="translated">ReflectionExtension::getClasses</target>
        </trans-unit>
        <trans-unit id="fc42f0531eb3c53866e17a21ade877de0406f2c9" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getClasses &amp;mdash; Gets classes</source>
          <target state="translated">ReflectionExtension :: getClasses &amp;mdash;获取类</target>
        </trans-unit>
        <trans-unit id="c5d89ff9adfeac32547e8cf05e2f08ab743e9471" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getClasses &amp;rarr;</source>
          <target state="translated">ReflectionExtension :: getClasses&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="6bec6b46d961da86a1521b2ab0f3495c8e590611" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getConstants</source>
          <target state="translated">ReflectionExtension::getConstants</target>
        </trans-unit>
        <trans-unit id="0a5d5c446a78c79b083ded950f82e23b8a6d4d62" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getConstants &amp;mdash; Gets constants</source>
          <target state="translated">ReflectionExtension :: getConstants &amp;mdash;获取常量</target>
        </trans-unit>
        <trans-unit id="72dff66143745e5d84a58aaff0fdba37541d67e6" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getConstants &amp;rarr;</source>
          <target state="translated">ReflectionExtension :: getConstants&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="95aa2d037e9d6f35d87797c3ccf70dfa839f99a8" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getDependencies</source>
          <target state="translated">ReflectionExtension::getDependencies</target>
        </trans-unit>
        <trans-unit id="8340670bd8e9e36542bd2325ccbe9708a269a647" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getDependencies &amp;mdash; Gets dependencies</source>
          <target state="translated">ReflectionExtension :: getDependencies &amp;mdash;获取依赖项</target>
        </trans-unit>
        <trans-unit id="1103c2838a4cc372d0b8dc1f23d67e4853c0e395" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getDependencies &amp;rarr;</source>
          <target state="translated">ReflectionExtension :: getDependencies&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="b770949acf8c42239e4f1637611e1195b1caa221" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getFunctions</source>
          <target state="translated">ReflectionExtension::getFunctions</target>
        </trans-unit>
        <trans-unit id="fdd168f7af2d891c680160cd50264f370a41cb49" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getFunctions &amp;mdash; Gets extension functions</source>
          <target state="translated">ReflectionExtension :: getFunctions &amp;mdash;获取扩展功能</target>
        </trans-unit>
        <trans-unit id="3f3f97e934773df3d12c04b7fa6eb32ca135649d" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getFunctions &amp;rarr;</source>
          <target state="translated">ReflectionExtension :: getFunctions&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="5c2222e0609e22a03f1dd4c895302157bc8cd163" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getINIEntries</source>
          <target state="translated">ReflectionExtension::getINIEntries</target>
        </trans-unit>
        <trans-unit id="ef6e581172f5b68dd21da9cad53e4a458742d7c1" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getINIEntries &amp;mdash; Gets extension ini entries</source>
          <target state="translated">ReflectionExtension :: getINIEntries &amp;mdash;获取扩展ini条目</target>
        </trans-unit>
        <trans-unit id="3cc828fbf833ec1437b07659949e2be6f3f824cb" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getINIEntries &amp;rarr;</source>
          <target state="translated">ReflectionExtension :: getINIEntries&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="1b1dde7aed7ad3b23141f2778dbc84013bd7379d" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getName</source>
          <target state="translated">ReflectionExtension::getName</target>
        </trans-unit>
        <trans-unit id="c699c74e07bcc3ad3662435aa3eb7ea7fd616898" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getName &amp;mdash; Gets extension name</source>
          <target state="translated">ReflectionExtension :: getName &amp;mdash;获取扩展名</target>
        </trans-unit>
        <trans-unit id="4756ef8c34bee295497cec9220c8b02468e80c0d" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getName &amp;rarr;</source>
          <target state="translated">ReflectionExtension :: getName&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="fed4c6a25fb93b49a48164f43d6c9b3f462f887d" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getVersion</source>
          <target state="translated">ReflectionExtension::getVersion</target>
        </trans-unit>
        <trans-unit id="0b1a5a9efde4cb1dc545c8459c1c2045e07a6d22" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getVersion &amp;mdash; Gets extension version</source>
          <target state="translated">ReflectionExtension :: getVersion &amp;mdash;获取扩展版本</target>
        </trans-unit>
        <trans-unit id="622be276cb494dbcf5e0ec1355d3632d33ac3585" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::getVersion &amp;rarr;</source>
          <target state="translated">ReflectionExtension :: getVersion&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="588a49dc92af4cb804b8db7ecc05b200253f12dd" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::info</source>
          <target state="translated">ReflectionExtension::info</target>
        </trans-unit>
        <trans-unit id="5fe13660bd45bb7ad387b5d6856b5a52c8baddff" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::info &amp;mdash; Print extension info</source>
          <target state="translated">ReflectionExtension :: info &amp;mdash;打印扩展信息</target>
        </trans-unit>
        <trans-unit id="d060f6b3e8dbce6e8ab42aaa379136ae4308f40b" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::info &amp;rarr;</source>
          <target state="translated">ReflectionExtension :: info&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="103b27da1bc908588855fdf4d54ab38d0049d96e" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::isPersistent</source>
          <target state="translated">ReflectionExtension::isPersistent</target>
        </trans-unit>
        <trans-unit id="a60658da77de5e17ebc63df874e055c38816640f" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::isPersistent &amp;mdash; Returns whether this extension is persistent</source>
          <target state="translated">ReflectionExtension :: isPersistent &amp;mdash;返回此扩展是否持久</target>
        </trans-unit>
        <trans-unit id="279c28bfb9fbf6c851f37b3b18ef5b1b59c3445c" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::isPersistent &amp;rarr;</source>
          <target state="translated">ReflectionExtension :: isPersistent&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="5a4d535e446d6bedf6a540adda86ffe081921064" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::isTemporary</source>
          <target state="translated">ReflectionExtension::isTemporary</target>
        </trans-unit>
        <trans-unit id="9adaf36f8d2f9d03f57183bea613c84d9a8f0c6e" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::isTemporary &amp;mdash; Returns whether this extension is temporary</source>
          <target state="translated">ReflectionExtension :: isTemporary &amp;mdash;返回此扩展名是否是临时的</target>
        </trans-unit>
        <trans-unit id="1d206c7daf1743500317d00b5da8e475b9de9601" translate="yes" xml:space="preserve">
          <source>ReflectionExtension::isTemporary &amp;rarr;</source>
          <target state="translated">ReflectionExtension :: isTemporary&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e44b69f14fc082e75f5c0f6ed53362567260014e" translate="yes" xml:space="preserve">
          <source>ReflectionFunction &amp;rarr;</source>
          <target state="translated">反射功能&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="1d284a1522d26e505eade0e0e45df6574ed7b2a4" translate="yes" xml:space="preserve">
          <source>ReflectionFunction Modifiers</source>
          <target state="translated">反射函数修改器</target>
        </trans-unit>
        <trans-unit id="d6040eb30def2fd30ea9ac64e27ab5725f30f32c" translate="yes" xml:space="preserve">
          <source>ReflectionFunction::__construct</source>
          <target state="translated">ReflectionFunction::__construct</target>
        </trans-unit>
        <trans-unit id="a80aa35dd6999e5548ce44006e9b62032f1fe405" translate="yes" xml:space="preserve">
          <source>ReflectionFunction::__construct &amp;mdash; Constructs a ReflectionFunction object</source>
          <target state="translated">ReflectionFunction :: __ construct &amp;mdash;构造一个ReflectionFunction对象</target>
        </trans-unit>
        <trans-unit id="4cc279578cd4e8ac675afa43bf53e64dd57fa919" translate="yes" xml:space="preserve">
          <source>ReflectionFunction::__construct &amp;rarr;</source>
          <target state="translated">ReflectionFunction :: __ construct&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="b2b1a1d3d1feda5011d4f14a0c2edffdc4f37290" translate="yes" xml:space="preserve">
          <source>ReflectionFunction::__toString</source>
          <target state="translated">ReflectionFunction::__toString</target>
        </trans-unit>
        <trans-unit id="b1aa7f732f90eb673fba04a4ad3f8e498580f5aa" translate="yes" xml:space="preserve">
          <source>ReflectionFunction::__toString &amp;mdash; To string</source>
          <target state="translated">ReflectionFunction :: __ toString &amp;mdash;转换为字符串</target>
        </trans-unit>
        <trans-unit id="e6132d3ca708e768a0d148c8244d8d0e83ab3b28" translate="yes" xml:space="preserve">
          <source>ReflectionFunction::__toString &amp;rarr;</source>
          <target state="translated">ReflectionFunction :: __ toString&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="166915f1e1f75bcb90e19d97666e2a560e849fbe" translate="yes" xml:space="preserve">
          <source>ReflectionFunction::export</source>
          <target state="translated">ReflectionFunction::export</target>
        </trans-unit>
        <trans-unit id="ee955d8e869bcc1c092c538086c6f6a3797f1660" translate="yes" xml:space="preserve">
          <source>ReflectionFunction::export &amp;mdash; Exports function</source>
          <target state="translated">ReflectionFunction :: export &amp;mdash;导出功能</target>
        </trans-unit>
        <trans-unit id="2fb63406e5e7a0298bc2082672049adfb9aa1cb2" translate="yes" xml:space="preserve">
          <source>ReflectionFunction::export &amp;rarr;</source>
          <target state="translated">ReflectionFunction :: export&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="6d47ed72142327919bbb8d7b1871d939fe9aac67" translate="yes" xml:space="preserve">
          <source>ReflectionFunction::getClosure</source>
          <target state="translated">ReflectionFunction::getClosure</target>
        </trans-unit>
        <trans-unit id="e9d3d152b319e0e48aa7cbe4ba500c9ae03231c2" translate="yes" xml:space="preserve">
          <source>ReflectionFunction::getClosure &amp;mdash; Returns a dynamically created closure for the function</source>
          <target state="translated">ReflectionFunction :: getClosure &amp;mdash;返回为函数动态创建的闭包</target>
        </trans-unit>
        <trans-unit id="1746ac77063d37813df44b9bab6be87766ce31cf" translate="yes" xml:space="preserve">
          <source>ReflectionFunction::getClosure &amp;rarr;</source>
          <target state="translated">ReflectionFunction :: getClosure&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="010618363f4271b75a417fb9cc1841db08133a1f" translate="yes" xml:space="preserve">
          <source>ReflectionFunction::invoke</source>
          <target state="translated">ReflectionFunction::invoke</target>
        </trans-unit>
        <trans-unit id="ef5a495b47bc804257b82920c95a296c923b005e" translate="yes" xml:space="preserve">
          <source>ReflectionFunction::invoke &amp;mdash; Invokes function</source>
          <target state="translated">ReflectionFunction :: invoke &amp;mdash;调用功能</target>
        </trans-unit>
        <trans-unit id="4b96153944d354a7d2fdd591deb72aa23065acab" translate="yes" xml:space="preserve">
          <source>ReflectionFunction::invoke &amp;rarr;</source>
          <target state="translated">ReflectionFunction :: invoke&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e9d7721174dce10803ea36540cbc20bfda611ab7" translate="yes" xml:space="preserve">
          <source>ReflectionFunction::invokeArgs</source>
          <target state="translated">ReflectionFunction::invokeArgs</target>
        </trans-unit>
        <trans-unit id="131a9612fb5b10c340bb99660bcaaa164abd48b3" translate="yes" xml:space="preserve">
          <source>ReflectionFunction::invokeArgs &amp;mdash; Invokes function args</source>
          <target state="translated">ReflectionFunction :: invokeArgs &amp;mdash;调用函数args</target>
        </trans-unit>
        <trans-unit id="6bda0ce378242ca38e61a697b03d7ecc8d4e9859" translate="yes" xml:space="preserve">
          <source>ReflectionFunction::invokeArgs &amp;rarr;</source>
          <target state="translated">ReflectionFunction :: invokeArgs&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="56d70c67c7d0fe7e37992d5dfa1e23d00644969a" translate="yes" xml:space="preserve">
          <source>ReflectionFunction::isDisabled</source>
          <target state="translated">ReflectionFunction::isDisabled</target>
        </trans-unit>
        <trans-unit id="10f18f572242d8c2abe2c3cde377afb12a11cd0b" translate="yes" xml:space="preserve">
          <source>ReflectionFunction::isDisabled &amp;mdash; Checks if function is disabled</source>
          <target state="translated">ReflectionFunction :: isDisabled &amp;mdash;检查功能是否被禁用</target>
        </trans-unit>
        <trans-unit id="abdec7b2a963da4db085501548df8cb656a20985" translate="yes" xml:space="preserve">
          <source>ReflectionFunction::isDisabled &amp;rarr;</source>
          <target state="translated">ReflectionFunction :: isDisabled&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="05203b50b577c7bcc1b6d9792b146d94b9cb0667" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="051c81866a29a93e10cf1c90d4b56190a98558c6" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::__clone</source>
          <target state="translated">ReflectionFunctionAbstract::__clone</target>
        </trans-unit>
        <trans-unit id="92b32e39658d80a1ae3ef90c3c7423882b9b9e57" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::__clone &amp;mdash; Clones function</source>
          <target state="translated">ReflectionFunctionAbstract :: __ clone &amp;mdash;克隆函数</target>
        </trans-unit>
        <trans-unit id="bb7bee7e1fff09a03fa02c6dd7f7bd3f942b8ec0" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::__clone &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: __ clone&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="eb956bd44e86d8c21058398653c2d683ae7370fe" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::__toString</source>
          <target state="translated">ReflectionFunctionAbstract::__toString</target>
        </trans-unit>
        <trans-unit id="a677d302bb55a3706401b32fd7c3a8a8f35446a5" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::__toString &amp;mdash; To string</source>
          <target state="translated">ReflectionFunctionAbstract :: __ toString &amp;mdash;转换为字符串</target>
        </trans-unit>
        <trans-unit id="e496569f2e6e8d02ae97636d091010ece5c9aa47" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::__toString &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: __ toString&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="275f7285348f41bcb418a13f51ec64c90ce2eace" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getClosureScopeClass</source>
          <target state="translated">ReflectionFunctionAbstract::getClosureScopeClass</target>
        </trans-unit>
        <trans-unit id="56dab9343e72f21d5de9f0f0609d6025d0908a5e" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getClosureScopeClass &amp;mdash; Returns the scope associated to the closure</source>
          <target state="translated">ReflectionFunctionAbstract :: getClosureScopeClass-返回与闭包关联的范围</target>
        </trans-unit>
        <trans-unit id="114f756daaae697952249c8c7ce96362a83d2781" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getClosureScopeClass &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: getClosureScopeClass&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="5d9a007d71c8706894fa244a04eaf3d3f6906473" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getClosureThis</source>
          <target state="translated">ReflectionFunctionAbstract::getClosureThis</target>
        </trans-unit>
        <trans-unit id="e1eef21de8cdcbd97923e88f54d9472a8612ae16" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getClosureThis &amp;mdash; Returns this pointer bound to closure</source>
          <target state="translated">ReflectionFunctionAbstract :: getClosureThis &amp;mdash;返回绑定到闭包的指针</target>
        </trans-unit>
        <trans-unit id="325720f048486dc83965f64f6622e1317dbe1873" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getClosureThis &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: getClosureThis&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e395de9a79d711fba61e4f4553b91ad05f9fce92" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getDocComment</source>
          <target state="translated">ReflectionFunctionAbstract::getDocComment</target>
        </trans-unit>
        <trans-unit id="ce98095e428c85c1b56760f7315d23d25ff69a5f" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getDocComment &amp;mdash; Gets doc comment</source>
          <target state="translated">ReflectionFunctionAbstract :: getDocComment &amp;mdash;获取文档注释</target>
        </trans-unit>
        <trans-unit id="98b7d0560b2846c764f6488727ef7012fdfed876" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getDocComment &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: getDocComment&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="cd2e52c53aec008deb65957c8ce0b4fe10d5dbe1" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getEndLine</source>
          <target state="translated">ReflectionFunctionAbstract::getEndLine</target>
        </trans-unit>
        <trans-unit id="7d0ce9e8ccb855abcf5e3c0a66e2f7fdae69961d" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getEndLine &amp;mdash; Gets end line number</source>
          <target state="translated">ReflectionFunctionAbstract :: getEndLine &amp;mdash;获取结束行号</target>
        </trans-unit>
        <trans-unit id="851cb253ed1138d148652bdd0dd2187a18c1774e" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getEndLine &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: getEndLine&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="eaec9e56a6a975701bdb99f9b9ca46991b8abb53" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getExtension</source>
          <target state="translated">ReflectionFunctionAbstract::getExtension</target>
        </trans-unit>
        <trans-unit id="fd3c734f8db30886d7119a41972711098ae00a13" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getExtension &amp;mdash; Gets extension info</source>
          <target state="translated">ReflectionFunctionAbstract :: getExtension &amp;mdash;获取扩展信息</target>
        </trans-unit>
        <trans-unit id="dce0d35e82a887e4e6a376ab2463b115f403c868" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getExtension &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: getExtension&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="526d4f7b698de82f2a9ec43a3528d758171204f5" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getExtensionName</source>
          <target state="translated">ReflectionFunctionAbstract::getExtensionName</target>
        </trans-unit>
        <trans-unit id="7c3fd5259df464f9e683ea76ae086fa935225089" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getExtensionName &amp;mdash; Gets extension name</source>
          <target state="translated">ReflectionFunctionAbstract :: getExtensionName-获取扩展名</target>
        </trans-unit>
        <trans-unit id="c25677654fa7d85324b12356bb63e817651837bf" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getExtensionName &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: getExtensionName&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="8bdaab1f3cee0b2199a6c2db6125947c7ad7652e" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getFileName</source>
          <target state="translated">ReflectionFunctionAbstract::getFileName</target>
        </trans-unit>
        <trans-unit id="fb0f34c626f2a2eb9e15524b5ffa4da2b93a1fe8" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getFileName &amp;mdash; Gets file name</source>
          <target state="translated">ReflectionFunctionAbstract :: getFileName-获取文件名</target>
        </trans-unit>
        <trans-unit id="88647869e30d17f1627ad50316232c9c6c4c46ba" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getFileName &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: getFileName&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="1c5191ed8a27e4d1398116315bc7c6ecaa404287" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getName</source>
          <target state="translated">ReflectionFunctionAbstract::getName</target>
        </trans-unit>
        <trans-unit id="fc92409936059cefebd54bce624e11d318ae6d35" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getName &amp;mdash; Gets function name</source>
          <target state="translated">ReflectionFunctionAbstract :: getName &amp;mdash;获取函数名称</target>
        </trans-unit>
        <trans-unit id="9bdebf3349e2ed6ffa20aadebfa7deb845765eec" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getName &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: getName&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="42b3d2bd96ee7a9f27658dd03fa2935d6494ed16" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getNamespaceName</source>
          <target state="translated">ReflectionFunctionAbstract::getNamespaceName</target>
        </trans-unit>
        <trans-unit id="a9ce90af5d6f450efe9bdba3b8d902c142a7c50a" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getNamespaceName &amp;mdash; Gets namespace name</source>
          <target state="translated">ReflectionFunctionAbstract :: getNamespaceName-获取名称空间名称</target>
        </trans-unit>
        <trans-unit id="857cf0631abee360bccd080c4ad4157fed422b14" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getNamespaceName &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: getNamespaceName&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="6b74f2429498cac0d7845f0c912e866bc614e71f" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getNumberOfParameters</source>
          <target state="translated">ReflectionFunctionAbstract::getNumberOfParameters</target>
        </trans-unit>
        <trans-unit id="555d4588dea616189f3c6b2de109c7faf754b746" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getNumberOfParameters &amp;mdash; Gets number of parameters</source>
          <target state="translated">ReflectionFunctionAbstract :: getNumberOfParameters &amp;mdash;获取参数数</target>
        </trans-unit>
        <trans-unit id="affb3afb7361f60db8ea09cab75ab21aefde2d97" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getNumberOfParameters &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: getNumberOfParameters&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="bbc09fb0a504aff5f6f11bbfa544bbf78584523e" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getNumberOfParameters()</source>
          <target state="translated">ReflectionFunctionAbstract::getNumberOfParameters()</target>
        </trans-unit>
        <trans-unit id="bb08647da7c4a537fc67e098252e205b29601634" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getNumberOfRequiredParameters</source>
          <target state="translated">ReflectionFunctionAbstract::getNumberOfRequiredParameters</target>
        </trans-unit>
        <trans-unit id="9d873b92722093c5ae0a71707fb4907c76a5348b" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getNumberOfRequiredParameters &amp;mdash; Gets number of required parameters</source>
          <target state="translated">ReflectionFunctionAbstract :: getNumberOfRequiredParameters &amp;mdash;获取所需参数的数量</target>
        </trans-unit>
        <trans-unit id="faa96a5f51bde83820ae1368683c49f10319f855" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getNumberOfRequiredParameters &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: getNumberOfRequiredParameters&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="f07124d4410b07d07580b1e69dff209e2a2867a6" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getParameters</source>
          <target state="translated">ReflectionFunctionAbstract::getParameters</target>
        </trans-unit>
        <trans-unit id="29b8ce24da4aeb0f4e4a24cc16352b18d72bed94" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getParameters &amp;mdash; Gets parameters</source>
          <target state="translated">ReflectionFunctionAbstract :: getParameters &amp;mdash;获取参数</target>
        </trans-unit>
        <trans-unit id="764123063d27bc0280524a780a0da25c75a28275" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getParameters &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: getParameters&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="982f0e685242f75309b3b16f616403a7bf232bfd" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getParameters()</source>
          <target state="translated">ReflectionFunctionAbstract::getParameters()</target>
        </trans-unit>
        <trans-unit id="00351a50344c6f1b7337be17987ce64b462ba68d" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getReturnType</source>
          <target state="translated">ReflectionFunctionAbstract::getReturnType</target>
        </trans-unit>
        <trans-unit id="993f4b5918d8718eb35fef7af84b8e3fb30d0b40" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getReturnType &amp;mdash; Gets the specified return type of a function</source>
          <target state="translated">ReflectionFunctionAbstract :: getReturnType &amp;mdash;获取函数的指定返回类型</target>
        </trans-unit>
        <trans-unit id="d48b90dec5bf451bb3501943072191f3801bd715" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getReturnType &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: getReturnType&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="937005af38e40eae01488707bf08c07d3b84c783" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getShortName</source>
          <target state="translated">ReflectionFunctionAbstract::getShortName</target>
        </trans-unit>
        <trans-unit id="6156714c1bc07dcabdc2fadec1b685bcf82f26c0" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getShortName &amp;mdash; Gets function short name</source>
          <target state="translated">ReflectionFunctionAbstract :: getShortName &amp;mdash;获取函数的短名称</target>
        </trans-unit>
        <trans-unit id="9f9e47276dc722970229d6fdde7c78f5f5334836" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getShortName &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: getShortName&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="4b40b96f3d244d7ac817133617c803994bc8a232" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getStartLine</source>
          <target state="translated">ReflectionFunctionAbstract::getStartLine</target>
        </trans-unit>
        <trans-unit id="91e69ef7a60114151cc34d9b766037f6db57d123" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getStartLine &amp;mdash; Gets starting line number</source>
          <target state="translated">ReflectionFunctionAbstract :: getStartLine &amp;mdash;获取起始行号</target>
        </trans-unit>
        <trans-unit id="b90b8bf9f64ce658e64756d45128b6b470688ec6" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getStartLine &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: getStartLine&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="95b72913913cadf719ca2827dd2a57cdc4652f10" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getStaticVariables</source>
          <target state="translated">ReflectionFunctionAbstract::getStaticVariables</target>
        </trans-unit>
        <trans-unit id="5aeff55ea30c37bfe920779de5dc5cf1f7b1d6df" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getStaticVariables &amp;mdash; Gets static variables</source>
          <target state="translated">ReflectionFunctionAbstract :: getStaticVariables &amp;mdash;获取静态变量</target>
        </trans-unit>
        <trans-unit id="ba32f5fd46d2b77e78778084739f07ad5e796ea7" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::getStaticVariables &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: getStaticVariables&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="a01792d1b6c5cf29b792e57d4702cc3c6eba4f4f" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::hasReturnType</source>
          <target state="translated">ReflectionFunctionAbstract::hasReturnType</target>
        </trans-unit>
        <trans-unit id="351b98b403c44e83e84b170a1a561fa8aab265c8" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::hasReturnType &amp;mdash; Checks if the function has a specified return type</source>
          <target state="translated">ReflectionFunctionAbstract :: hasReturnType &amp;mdash;检查函数是否具有指定的返回类型</target>
        </trans-unit>
        <trans-unit id="c46ef430b56c0b4f7e5b222d726ec4bbe1194c40" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::hasReturnType &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: hasReturnType&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="438feda80d650ce14a48fda98c8db0f730ecd8c1" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::inNamespace</source>
          <target state="translated">ReflectionFunctionAbstract::inNamespace</target>
        </trans-unit>
        <trans-unit id="79b8b9640abb235e2bd48d452a17bcab8c40e2f5" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::inNamespace &amp;mdash; Checks if function in namespace</source>
          <target state="translated">ReflectionFunctionAbstract :: inNamespace &amp;mdash;检查名称空间中的函数</target>
        </trans-unit>
        <trans-unit id="1d947afca9b4e5f47cbadbdc73864e5582b93a06" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::inNamespace &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: inNamespace&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="c8c6c505ad5afc787c3df5f60475120e46c66d03" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::isClosure</source>
          <target state="translated">ReflectionFunctionAbstract::isClosure</target>
        </trans-unit>
        <trans-unit id="e2862e30cbc0dcdb9e176e577f66b30e54b84ef0" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::isClosure &amp;mdash; Checks if closure</source>
          <target state="translated">ReflectionFunctionAbstract :: isClosure &amp;mdash;检查是否关闭</target>
        </trans-unit>
        <trans-unit id="412cd71d448a337f47266f7adb9c3250db1816b1" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::isClosure &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: isClosure&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="f04f6eb70c634617f252220c12097448e58a9de4" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::isDeprecated</source>
          <target state="translated">ReflectionFunctionAbstract::isDeprecated</target>
        </trans-unit>
        <trans-unit id="13b8124c66348ecc24b37eba975d3a0084570119" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::isDeprecated &amp;mdash; Checks if deprecated</source>
          <target state="translated">ReflectionFunctionAbstract :: isDeprecated &amp;mdash;检查是否不推荐使用</target>
        </trans-unit>
        <trans-unit id="8d3cddbbb51d1d9f597a4bb181504c9ef0222f7f" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::isDeprecated &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: isDeprecated&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="8bad737655b1e22a3dcc85e7d8ef0d34aba0804d" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::isGenerator</source>
          <target state="translated">ReflectionFunctionAbstract::isGenerator</target>
        </trans-unit>
        <trans-unit id="e98df7642c905b15e4278cebe31e724c84ef63a7" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::isGenerator &amp;mdash; Returns whether this function is a generator</source>
          <target state="translated">ReflectionFunctionAbstract :: isGenerator &amp;mdash;返回此函数是否为生成器</target>
        </trans-unit>
        <trans-unit id="58f51d413806a89894a03f7a4ff7789a4adee084" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::isGenerator &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: isGenerator&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="4dd616e727618e1b31de70b29872d6aaf2e78729" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::isInternal</source>
          <target state="translated">ReflectionFunctionAbstract::isInternal</target>
        </trans-unit>
        <trans-unit id="22c6cfe1161adeb9b7c63e69ead8f9707e7069d0" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::isInternal &amp;mdash; Checks if is internal</source>
          <target state="translated">ReflectionFunctionAbstract :: isInternal &amp;mdash;检查是否为内部</target>
        </trans-unit>
        <trans-unit id="e170515baa4dace949215b5231b12de8fce1adb2" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::isInternal &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: isInternal&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="00aa92583ff7b024463f79697d08f62bfd5ffe52" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::isUserDefined</source>
          <target state="translated">ReflectionFunctionAbstract::isUserDefined</target>
        </trans-unit>
        <trans-unit id="b9acc4677bc1b8fcafa92c181beb2cdd6f34b1dd" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::isUserDefined &amp;mdash; Checks if user defined</source>
          <target state="translated">ReflectionFunctionAbstract :: isUserDefined-检查用户是否定义</target>
        </trans-unit>
        <trans-unit id="cebace8b0c10fc68f2f9cbcfc9a437637db31912" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::isUserDefined &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: isUserDefined&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="bcdf047d7826405a456185231a93823cdb3a2fc7" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::isVariadic</source>
          <target state="translated">ReflectionFunctionAbstract::isVariadic</target>
        </trans-unit>
        <trans-unit id="8eafc303d21468b88879d05beb4e6ea4c6de01db" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::isVariadic &amp;mdash; Checks if the function is variadic</source>
          <target state="translated">ReflectionFunctionAbstract :: isVariadic &amp;mdash;检查函数是否可变</target>
        </trans-unit>
        <trans-unit id="734d3fb4807dddca05561365a6eaff64db60be19" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::isVariadic &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: isVariadic&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="b94befc026e1f7ced0de616993040e680640b166" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::returnsReference</source>
          <target state="translated">ReflectionFunctionAbstract::returnsReference</target>
        </trans-unit>
        <trans-unit id="fdc5d710b1339edf17d9817cdcb20884c7046c9f" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::returnsReference &amp;mdash; Checks if returns reference</source>
          <target state="translated">ReflectionFunctionAbstract :: returnsReference &amp;mdash;检查是否返回引用</target>
        </trans-unit>
        <trans-unit id="7b3912d0239e6accc2129a1c180e35b68c7a58ad" translate="yes" xml:space="preserve">
          <source>ReflectionFunctionAbstract::returnsReference &amp;rarr;</source>
          <target state="translated">ReflectionFunctionAbstract :: returnsReference&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="a1be57fda9f2887a1061080ff07ce0bc0afa4898" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator &amp;rarr;</source>
          <target state="translated">ReflectionGenerator&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="c1321df3dbd013339dc85ef93e5292ce6aa1ebc8" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator::__construct</source>
          <target state="translated">ReflectionGenerator::__construct</target>
        </trans-unit>
        <trans-unit id="4f37c1c891bf6c1d9c11c84ce8b7bfbe9db7a0b5" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator::__construct &amp;mdash; Constructs a ReflectionGenerator object</source>
          <target state="translated">ReflectionGenerator :: __ construct &amp;mdash;构造一个ReflectionGenerator对象</target>
        </trans-unit>
        <trans-unit id="fb5a8120037c3eb043408a13e6b1d7d0972876e7" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator::__construct &amp;rarr;</source>
          <target state="translated">ReflectionGenerator :: __ construct&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="363518267352110252e88285daf140abfa8d21fb" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator::getExecutingFile</source>
          <target state="translated">ReflectionGenerator::getExecutingFile</target>
        </trans-unit>
        <trans-unit id="7fd6a50837d0699a67ccc198d7010907a430f7f9" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator::getExecutingFile &amp;mdash; Gets the file name of the currently executing generator</source>
          <target state="translated">ReflectionGenerator :: getExecutingFile &amp;mdash;获取当前正在执行的生成器的文件名</target>
        </trans-unit>
        <trans-unit id="c3154ca0026213065702948478b1cac143d08b70" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator::getExecutingFile &amp;rarr;</source>
          <target state="translated">ReflectionGenerator :: getExecutingFile&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="25f8e98b10801a6c7b444e01ba19142c2ee81147" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator::getExecutingGenerator</source>
          <target state="translated">ReflectionGenerator::getExecutingGenerator</target>
        </trans-unit>
        <trans-unit id="58ba146c6ea8c4a513f501cd59d0ae5214160c7d" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator::getExecutingGenerator &amp;mdash; Gets the executing &lt;a href=&quot;class.generator&quot;&gt;Generator&lt;/a&gt; object</source>
          <target state="translated">ReflectionGenerator :: getExecutingGenerator &amp;mdash;获取正在执行的&lt;a href=&quot;class.generator&quot;&gt;Generator&lt;/a&gt;对象</target>
        </trans-unit>
        <trans-unit id="d3ab0bfe6e06e13ace5d38e3accb714716ee9609" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator::getExecutingGenerator &amp;rarr;</source>
          <target state="translated">ReflectionGenerator :: getExecutingGenerator&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="b94e5aa4f8a46cdf4d4be9c4924853ce3f5f7c3b" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator::getExecutingLine</source>
          <target state="translated">ReflectionGenerator::getExecutingLine</target>
        </trans-unit>
        <trans-unit id="7f65d7155f6f8ba6fb0b992d5f426510587cccb6" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator::getExecutingLine &amp;mdash; Gets the currently executing line of the generator</source>
          <target state="translated">ReflectionGenerator :: getExecutingLine &amp;mdash;获取生成器当前正在执行的行</target>
        </trans-unit>
        <trans-unit id="04961a6f2a2fe2d70be63ac1701a1585b9c3c836" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator::getExecutingLine &amp;rarr;</source>
          <target state="translated">ReflectionGenerator :: getExecutingLine&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="7cf859f452074468ba37d192cd5b3ef7cc3c49e1" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator::getFunction</source>
          <target state="translated">ReflectionGenerator::getFunction</target>
        </trans-unit>
        <trans-unit id="23d9f26288e321a8f318e070e37626f8304ce203" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator::getFunction &amp;mdash; Gets the function name of the generator</source>
          <target state="translated">ReflectionGenerator :: getFunction &amp;mdash;获取生成器的函数名称</target>
        </trans-unit>
        <trans-unit id="37ebee7243241abfef2dffd01ce772e9267797b6" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator::getFunction &amp;rarr;</source>
          <target state="translated">ReflectionGenerator :: getFunction&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="ef3849781e2ca9c9cd93b51f14aa36d9537886dd" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator::getThis</source>
          <target state="translated">ReflectionGenerator::getThis</target>
        </trans-unit>
        <trans-unit id="e2c1a3b41e90271eaa8c56b06261f16327f346ae" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator::getThis &amp;mdash; Gets the &lt;code&gt;$this&lt;/code&gt; value of the generator</source>
          <target state="translated">ReflectionGenerator :: getThis &amp;mdash;获取生成器的 &lt;code&gt;$this&lt;/code&gt; 值</target>
        </trans-unit>
        <trans-unit id="1d33c4707f61adb0ce956ae0e23a529738a52423" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator::getThis &amp;mdash; Gets the &lt;em&gt;$this&lt;/em&gt; value of the generator</source>
          <target state="translated">ReflectionGenerator :: getThis &amp;mdash;获取生成器的&lt;em&gt;$ this&lt;/em&gt;值</target>
        </trans-unit>
        <trans-unit id="7c5b14dee52c7a6e6c20b29ef6189c88b265b5d4" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator::getThis &amp;rarr;</source>
          <target state="translated">ReflectionGenerator :: getThis&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="bcd769ebe67dc0d0323d9c913dcbda748936d6fa" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator::getTrace</source>
          <target state="translated">ReflectionGenerator::getTrace</target>
        </trans-unit>
        <trans-unit id="3e89169aed5ffc5ab9d4db4738a4487c212d245f" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator::getTrace &amp;mdash; Gets the trace of the executing generator</source>
          <target state="translated">ReflectionGenerator :: getTrace &amp;mdash;获取正在执行的生成器的跟踪</target>
        </trans-unit>
        <trans-unit id="462699851ea988afd5336a0dedb6fb63f654a1ba" translate="yes" xml:space="preserve">
          <source>ReflectionGenerator::getTrace &amp;rarr;</source>
          <target state="translated">ReflectionGenerator :: getTrace&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="2c2823570787facd42f0cb3e5cd442a34dd85dce" translate="yes" xml:space="preserve">
          <source>ReflectionMethod &amp;rarr;</source>
          <target state="translated">反射方法&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="a2f9b43e3c9b3a67e51b9f7a90a0373f185fa4ae" translate="yes" xml:space="preserve">
          <source>ReflectionMethod Modifiers</source>
          <target state="translated">反射法修改器</target>
        </trans-unit>
        <trans-unit id="0f0bfda6f0860c5ae6c3e7c014811c4fec3d33d6" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::__construct</source>
          <target state="translated">ReflectionMethod::__construct</target>
        </trans-unit>
        <trans-unit id="d21bbc2548a9a272508d5d7a30f28522a2b2cb49" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::__construct &amp;mdash; Constructs a ReflectionMethod</source>
          <target state="translated">ReflectionMethod :: __ construct &amp;mdash;构造一个ReflectionMethod</target>
        </trans-unit>
        <trans-unit id="e321e950a8448778f69a4721b8562d3f65417b10" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::__construct &amp;rarr;</source>
          <target state="translated">ReflectionMethod :: __ construct&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="16d3f86663ee64c41a745e1f1448a4c3d10261a5" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::__toString</source>
          <target state="translated">ReflectionMethod::__toString</target>
        </trans-unit>
        <trans-unit id="99298e4c0822c9f0bac2116a0a29339e0267e221" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::__toString &amp;mdash; Returns the string representation of the Reflection method object</source>
          <target state="translated">ReflectionMethod :: __ toString &amp;mdash;返回Reflection方法对象的字符串表示形式</target>
        </trans-unit>
        <trans-unit id="623975debdb89178f2bdd84b9b2a2dbf70edc2aa" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::__toString &amp;rarr;</source>
          <target state="translated">ReflectionMethod :: __ toString&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="658e92e4293d3feb4e58d5c67e5e7f3ced76e2c3" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::export</source>
          <target state="translated">ReflectionMethod::export</target>
        </trans-unit>
        <trans-unit id="736da3ba25e20b024453d24a36af140195bcabae" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::export &amp;mdash; Export a reflection method</source>
          <target state="translated">ReflectionMethod :: export &amp;mdash;导出反射方法</target>
        </trans-unit>
        <trans-unit id="57b59e22ce3bdd07d40c4e855bdf596cefd02138" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::export &amp;rarr;</source>
          <target state="translated">ReflectionMethod :: export&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="6300cc338aaa3fdb757f1a24cd6ddc03157f2c3c" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::getClosure</source>
          <target state="translated">ReflectionMethod::getClosure</target>
        </trans-unit>
        <trans-unit id="87ed9d37ce88f551624ada0400563e6d6186c36b" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::getClosure &amp;mdash; Returns a dynamically created closure for the method</source>
          <target state="translated">ReflectionMethod :: getClosure &amp;mdash;返回为该方法动态创建的闭包</target>
        </trans-unit>
        <trans-unit id="21df121d91d62451dc78efbd726bbca97bc8f023" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::getClosure &amp;rarr;</source>
          <target state="translated">ReflectionMethod :: getClosure&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="7ef339cac43c5736951bc6415e69d85d92993d91" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::getDeclaringClass</source>
          <target state="translated">ReflectionMethod::getDeclaringClass</target>
        </trans-unit>
        <trans-unit id="5265ecc94f160be40da9fc898f0a5fe7918317a4" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::getDeclaringClass &amp;mdash; Gets declaring class for the reflected method</source>
          <target state="translated">ReflectionMethod :: getDeclaringClass-获取反射方法的声明类</target>
        </trans-unit>
        <trans-unit id="f21f1c756d516759fd213b6d679323f6fac0e571" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::getDeclaringClass &amp;rarr;</source>
          <target state="translated">ReflectionMethod :: getDeclaringClass&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="200194e68db9575f5fe00da94d3875a03e2625b7" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::getModifiers</source>
          <target state="translated">ReflectionMethod::getModifiers</target>
        </trans-unit>
        <trans-unit id="6524c5b48927ccba7bd59564fbcd1b8ea233c45e" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::getModifiers &amp;mdash; Gets the method modifiers</source>
          <target state="translated">ReflectionMethod :: getModifiers &amp;mdash;获取方法修饰符</target>
        </trans-unit>
        <trans-unit id="928dfd60e92a9199e718aee2ee57a66a1cd19978" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::getModifiers &amp;rarr;</source>
          <target state="translated">ReflectionMethod :: getModifiers&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="1a16fc8ae8f60ff67a1bc092c0eca04383172587" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::getPrototype</source>
          <target state="translated">ReflectionMethod::getPrototype</target>
        </trans-unit>
        <trans-unit id="ff0e0287cafa7c2e9accc3dd84949ac704bc4e58" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::getPrototype &amp;mdash; Gets the method prototype (if there is one)</source>
          <target state="translated">ReflectionMethod :: getPrototype &amp;mdash;获取方法原型（如果有的话）</target>
        </trans-unit>
        <trans-unit id="452a7124d5b5d23e17fcdceb40d459faed2d7255" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::getPrototype &amp;rarr;</source>
          <target state="translated">ReflectionMethod :: getPrototype&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="633938221b8e6e3242f577119d4560afb3abff49" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::invoke</source>
          <target state="translated">ReflectionMethod::invoke</target>
        </trans-unit>
        <trans-unit id="3afa3b416feef1b08e1e758f36fe7141a6896bcd" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::invoke &amp;mdash; Invoke</source>
          <target state="translated">ReflectionMethod :: invoke &amp;mdash;调用</target>
        </trans-unit>
        <trans-unit id="e281e00901c3f53323fcc389aa40bbc6b97bc818" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::invoke &amp;rarr;</source>
          <target state="translated">ReflectionMethod :: invoke&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e62eb8881b0a837424e23de1e3f89db955f3333f" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::invokeArgs</source>
          <target state="translated">ReflectionMethod::invokeArgs</target>
        </trans-unit>
        <trans-unit id="5c2294d1c44f70fbd270f90055028c21e7732225" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::invokeArgs &amp;mdash; Invoke args</source>
          <target state="translated">ReflectionMethod :: invokeArgs &amp;mdash;调用args</target>
        </trans-unit>
        <trans-unit id="925994328f43deb181ee422301d8c74b02a48203" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::invokeArgs &amp;rarr;</source>
          <target state="translated">ReflectionMethod :: invokeArgs&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="c68580f9d495d2122ee9c2e8aef02ae55c512710" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isAbstract</source>
          <target state="translated">ReflectionMethod::isAbstract</target>
        </trans-unit>
        <trans-unit id="ecbc1a3bfa8cdb400a3a633bdc54ecea65896bf7" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isAbstract &amp;mdash; Checks if method is abstract</source>
          <target state="translated">ReflectionMethod :: isAbstract &amp;mdash;检查方法是否抽象</target>
        </trans-unit>
        <trans-unit id="3918e584da89c63006376ad76f7864b484887d03" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isAbstract &amp;rarr;</source>
          <target state="translated">ReflectionMethod :: isAbstract&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="3602e0bacefee41731ebe1d4ce96c7c5cf47f807" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isConstructor</source>
          <target state="translated">ReflectionMethod::isConstructor</target>
        </trans-unit>
        <trans-unit id="216c28e8f9ceadc32b3751bfd5e553df2820a354" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isConstructor &amp;mdash; Checks if method is a constructor</source>
          <target state="translated">ReflectionMethod :: isConstructor &amp;mdash;检查方法是否为构造函数</target>
        </trans-unit>
        <trans-unit id="5ea7aef94b32ce64463431f79ea1c0aca1f1872b" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isConstructor &amp;rarr;</source>
          <target state="translated">ReflectionMethod :: isConstructor&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="01baaed3340394c289761d00d7446a7dc90c2540" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isDestructor</source>
          <target state="translated">ReflectionMethod::isDestructor</target>
        </trans-unit>
        <trans-unit id="4fbe7f1749821391557038e68ee186050b2e14ac" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isDestructor &amp;mdash; Checks if method is a destructor</source>
          <target state="translated">ReflectionMethod :: isDestructor &amp;mdash;检查方法是否为析构函数</target>
        </trans-unit>
        <trans-unit id="b5d73b32e68bf26b81de66fe2548249f782cf8eb" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isDestructor &amp;rarr;</source>
          <target state="translated">ReflectionMethod :: isDestructor&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="6567118be3eb202bc50dd07bf3a8636fbc1d818f" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isFinal</source>
          <target state="translated">ReflectionMethod::isFinal</target>
        </trans-unit>
        <trans-unit id="d8e9b82d5fe78addb532429a496e64ae375ccbe6" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isFinal &amp;mdash; Checks if method is final</source>
          <target state="translated">ReflectionMethod :: isFinal &amp;mdash;检查方法是否为最终方法</target>
        </trans-unit>
        <trans-unit id="940cc9b6396c77908873281cae7221579a93b0a9" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isFinal &amp;rarr;</source>
          <target state="translated">ReflectionMethod :: isFinal&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="96fa482fa23057ac09779928b284f4d09b85a922" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isPrivate</source>
          <target state="translated">ReflectionMethod::isPrivate</target>
        </trans-unit>
        <trans-unit id="12599ac679cf6dd429af9aa9765b41f2844dc416" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isPrivate &amp;mdash; Checks if method is private</source>
          <target state="translated">ReflectionMethod :: isPrivate &amp;mdash;检查方法是否私有</target>
        </trans-unit>
        <trans-unit id="05aedab8ad37364cfa835317a492ab76ad481cad" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isPrivate &amp;rarr;</source>
          <target state="translated">ReflectionMethod :: isPrivate&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="803ce74b6c455dfe4b619452027738a03e170c95" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isProtected</source>
          <target state="translated">ReflectionMethod::isProtected</target>
        </trans-unit>
        <trans-unit id="b46b84d588eb2f4d9d923336a0a6e9a7c6fd9bcf" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isProtected &amp;mdash; Checks if method is protected</source>
          <target state="translated">ReflectionMethod :: isProtected &amp;mdash;检查方法是否受保护</target>
        </trans-unit>
        <trans-unit id="e9fb11e69ebb077db70aef4e5f40829af13875b6" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isProtected &amp;rarr;</source>
          <target state="translated">ReflectionMethod :: isProtected&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="b47830f3fca7d97936a2edc3e7352f7ae2c25172" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isPublic</source>
          <target state="translated">ReflectionMethod::isPublic</target>
        </trans-unit>
        <trans-unit id="e0e9c6857f221df381f1729fb1466edf2ee1e7a1" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isPublic &amp;mdash; Checks if method is public</source>
          <target state="translated">ReflectionMethod :: isPublic &amp;mdash;检查方法是否是公共的</target>
        </trans-unit>
        <trans-unit id="027eb5bb1433b79cf8ed0b9bb2f44498c49d3e8b" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isPublic &amp;rarr;</source>
          <target state="translated">ReflectionMethod :: isPublic&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="8ba31413a3b90a971ba9d5198085b8a31f45cc5b" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isStatic</source>
          <target state="translated">ReflectionMethod::isStatic</target>
        </trans-unit>
        <trans-unit id="4651ea8d0bc9bcbb6bac49fb786f2892c406970a" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isStatic &amp;mdash; Checks if method is static</source>
          <target state="translated">ReflectionMethod :: isStatic &amp;mdash;检查方法是否静态</target>
        </trans-unit>
        <trans-unit id="c68135f545b9a38dd888eccf79d2376cfafd8e97" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::isStatic &amp;rarr;</source>
          <target state="translated">ReflectionMethod :: isStatic&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e9f10ee62dd43fa64b4f9bce8aa67a65e16368c2" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::setAccessible</source>
          <target state="translated">ReflectionMethod::setAccessible</target>
        </trans-unit>
        <trans-unit id="cd9c83a509552528f360a928dcd15a134ff80fe1" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::setAccessible &amp;mdash; Set method accessibility</source>
          <target state="translated">ReflectionMethod :: setAccessible &amp;mdash;设置方法的可访问性</target>
        </trans-unit>
        <trans-unit id="23ba4e69e30158a01078824e5ac84b15ce563859" translate="yes" xml:space="preserve">
          <source>ReflectionMethod::setAccessible &amp;rarr;</source>
          <target state="translated">ReflectionMethod :: setAccessible&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="168d3f236b7fed36a69deac887359015c6b29573" translate="yes" xml:space="preserve">
          <source>ReflectionNamedType &amp;rarr;</source>
          <target state="translated">ReflectionNamedType&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="126b10ffc0e06d97b6ddd2b1efcde8fc22f3b72f" translate="yes" xml:space="preserve">
          <source>ReflectionNamedType::getName</source>
          <target state="translated">ReflectionNamedType::getName</target>
        </trans-unit>
        <trans-unit id="defe8871805b7318ac29622722630654dde9c89d" translate="yes" xml:space="preserve">
          <source>ReflectionNamedType::getName &amp;mdash; Get the text of the type hint</source>
          <target state="translated">ReflectionNamedType :: getName &amp;mdash;获取类型提示的文本</target>
        </trans-unit>
        <trans-unit id="dce74fcc48c72a305adefe9ca7d4b4582bf521e1" translate="yes" xml:space="preserve">
          <source>ReflectionNamedType::getName &amp;rarr;</source>
          <target state="translated">ReflectionNamedType :: getName&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="4378d45606a1095cd4a90f38d7b39a938a22983c" translate="yes" xml:space="preserve">
          <source>ReflectionObject &amp;rarr;</source>
          <target state="translated">ReflectionObject&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="eda341b9b5b29278e8a18dbdfe32d3aa992fc673" translate="yes" xml:space="preserve">
          <source>ReflectionObject::__construct</source>
          <target state="translated">ReflectionObject::__construct</target>
        </trans-unit>
        <trans-unit id="2840cb7da49f8f7a113a7571a63f586927b328a4" translate="yes" xml:space="preserve">
          <source>ReflectionObject::__construct &amp;mdash; Constructs a ReflectionObject</source>
          <target state="translated">ReflectionObject :: __ construct &amp;mdash;构造一个ReflectionObject</target>
        </trans-unit>
        <trans-unit id="8a8c7cd794142936175b2f4a30cdfd18679b654d" translate="yes" xml:space="preserve">
          <source>ReflectionObject::__construct &amp;rarr;</source>
          <target state="translated">ReflectionObject :: __ construct&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="99d8cd8935dec02039a05a03d7ea79c79c273f24" translate="yes" xml:space="preserve">
          <source>ReflectionObject::export</source>
          <target state="translated">ReflectionObject::export</target>
        </trans-unit>
        <trans-unit id="fc74cceef633f57e9eda89f0862b00ce1487a54b" translate="yes" xml:space="preserve">
          <source>ReflectionObject::export &amp;mdash; Export</source>
          <target state="translated">ReflectionObject :: export &amp;mdash;导出</target>
        </trans-unit>
        <trans-unit id="26425f0146d6dbdd2ae55bc97b1d5b8ae51f885a" translate="yes" xml:space="preserve">
          <source>ReflectionObject::export &amp;rarr;</source>
          <target state="translated">ReflectionObject :: export&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="717e1112fdcc6b1595b75dc6c8bb22f6f3b16314" translate="yes" xml:space="preserve">
          <source>ReflectionParameter &amp;rarr;</source>
          <target state="translated">反射参数&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="c45cb9786bcbf09a2a528cbd52d242f8a9039ebe" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::__clone</source>
          <target state="translated">ReflectionParameter::__clone</target>
        </trans-unit>
        <trans-unit id="994828f0b8614f392bf0ccbfbde1fd5db2fda393" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::__clone &amp;mdash; Clone</source>
          <target state="translated">ReflectionParameter :: __ clone &amp;mdash;克隆</target>
        </trans-unit>
        <trans-unit id="9e45909ff3453c3265e18746fbfe2398c635a0a9" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::__clone &amp;rarr;</source>
          <target state="translated">ReflectionParameter :: __克隆&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="20c3405eabd46c704dd03dc9fd0e726dc27358d3" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::__construct</source>
          <target state="translated">ReflectionParameter::__construct</target>
        </trans-unit>
        <trans-unit id="2f8da9edf2c5e091804dcb6cf4f6367c7dc55fc6" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::__construct &amp;mdash; Construct</source>
          <target state="translated">ReflectionParameter :: __ construct &amp;mdash;构造</target>
        </trans-unit>
        <trans-unit id="0b26ce36f6850ccadf30ba51a59b439df416655c" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::__construct &amp;rarr;</source>
          <target state="translated">ReflectionParameter :: __ construct&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="550740544da2b072f3db1cfd616a4b355ff41a9a" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::__toString</source>
          <target state="translated">ReflectionParameter::__toString</target>
        </trans-unit>
        <trans-unit id="19b9c4163e4a5002e1fe17e1ee98207e2fb211c0" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::__toString &amp;mdash; To string</source>
          <target state="translated">ReflectionParameter :: __ toString &amp;mdash;字符串</target>
        </trans-unit>
        <trans-unit id="9b9d67e2b03c65f259fdea36e314402cf9d27129" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::__toString &amp;rarr;</source>
          <target state="translated">ReflectionParameter :: __ toString&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="16647f972b6a72dc6cb6a529c45f96e0ce371b76" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::allowsNull</source>
          <target state="translated">ReflectionParameter::allowsNull</target>
        </trans-unit>
        <trans-unit id="60c778ff6be0f4cab134219cfe5719911082a9d8" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::allowsNull &amp;mdash; Checks if null is allowed</source>
          <target state="translated">ReflectionParameter :: allowsNull &amp;mdash;检查是否允许null</target>
        </trans-unit>
        <trans-unit id="0e492bf0ba49310d98532026159b561374ba492a" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::allowsNull &amp;rarr;</source>
          <target state="translated">ReflectionParameter :: allowsNull&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="935e2138e2144ea5139ef1d2e15e596c2edad4e3" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::canBePassedByValue</source>
          <target state="translated">ReflectionParameter::canBePassedByValue</target>
        </trans-unit>
        <trans-unit id="e1b60462f61695d6f4f7bad4db84540e7ef64498" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::canBePassedByValue &amp;mdash; Returns whether this parameter can be passed by value</source>
          <target state="translated">ReflectionParameter :: canBePassedByValue &amp;mdash;返回此参数是否可以按值传递</target>
        </trans-unit>
        <trans-unit id="2f9fcc8b99e697adbe0421d4ccb6bdd09deb83c3" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::canBePassedByValue &amp;rarr;</source>
          <target state="translated">ReflectionParameter :: canBePassedByValue&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="da421ff589aef3fc8e155c6269dc7bf3a3784a83" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::export</source>
          <target state="translated">ReflectionParameter::export</target>
        </trans-unit>
        <trans-unit id="e153472e33482bd21adda570699d1c928eda3419" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::export &amp;mdash; Exports</source>
          <target state="translated">ReflectionParameter :: export &amp;mdash;导出</target>
        </trans-unit>
        <trans-unit id="992f4a11524172d54f9ee241ccb1ae4698cd657b" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::export &amp;rarr;</source>
          <target state="translated">ReflectionParameter :: export&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="13817e96e29453e4c59faebe9ded717d23c1dfbd" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getClass</source>
          <target state="translated">ReflectionParameter::getClass</target>
        </trans-unit>
        <trans-unit id="13c61dfb556adfb496fc47e3e650f95e5f13697a" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getClass &amp;mdash; Get the type hinted class</source>
          <target state="translated">ReflectionParameter :: getClass &amp;mdash;获取类型提示类</target>
        </trans-unit>
        <trans-unit id="38bd6a534819919076fde2be77773e6e84a0d8d9" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getClass &amp;rarr;</source>
          <target state="translated">ReflectionParameter :: getClass&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="6543b29432c0540e4e0745197ae105cafc2b78f1" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getDeclaringClass</source>
          <target state="translated">ReflectionParameter::getDeclaringClass</target>
        </trans-unit>
        <trans-unit id="1e220f5aae7ea7f47bba1e3e654f00dfdc1b7986" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getDeclaringClass &amp;mdash; Gets declaring class</source>
          <target state="translated">ReflectionParameter :: getDeclaringClass-获取声明类</target>
        </trans-unit>
        <trans-unit id="c538a43dc12ca80c50fc165591cfc9f3ab8ac4de" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getDeclaringClass &amp;rarr;</source>
          <target state="translated">ReflectionParameter :: getDeclaringClass&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="bed8a0cdd2f0384b2bdcf731ccf26aa56a257df7" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getDeclaringFunction</source>
          <target state="translated">ReflectionParameter::getDeclaringFunction</target>
        </trans-unit>
        <trans-unit id="6da892272bc52f84f77ea23eef754c5a653ff00c" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getDeclaringFunction &amp;mdash; Gets declaring function</source>
          <target state="translated">ReflectionParameter :: getDeclaringFunction &amp;mdash;获取声明函数</target>
        </trans-unit>
        <trans-unit id="adc5ac80e4a0f0796318e1ee939bdcbf9508dc4d" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getDeclaringFunction &amp;rarr;</source>
          <target state="translated">ReflectionParameter :: getDeclaringFunction&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="0fa088337eb4259caa0b223eaeb4b97a2f40ad62" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getDefaultValue</source>
          <target state="translated">ReflectionParameter::getDefaultValue</target>
        </trans-unit>
        <trans-unit id="1df3a06721b30390217f3f06bde37348fe2cdf18" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getDefaultValue &amp;mdash; Gets default parameter value</source>
          <target state="translated">ReflectionParameter :: getDefaultValue-获取默认参数值</target>
        </trans-unit>
        <trans-unit id="e1e29d7e4df5e66eb7a55889718751d07b0b96bc" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getDefaultValue &amp;rarr;</source>
          <target state="translated">ReflectionParameter :: getDefaultValue&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="fc1ea80e7571dab5db24737d4c2a5f09ec1d9764" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getDefaultValueConstantName</source>
          <target state="translated">ReflectionParameter::getDefaultValueConstantName</target>
        </trans-unit>
        <trans-unit id="bd0f5b5a2ce7e2caef94929900177df76887a307" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getDefaultValueConstantName &amp;mdash; Returns the default value's constant name if default value is constant or null</source>
          <target state="translated">ReflectionParameter :: getDefaultValueConstantName &amp;mdash;如果默认值为常量或null，则返回默认值的常量名称。</target>
        </trans-unit>
        <trans-unit id="2bbfb17eea70d35113e5ad367b26bf2ded1f8215" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getDefaultValueConstantName &amp;rarr;</source>
          <target state="translated">ReflectionParameter :: getDefaultValueConstantName&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="d63ae67135b70b2f6bf003b26344799c395c4709" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getName</source>
          <target state="translated">ReflectionParameter::getName</target>
        </trans-unit>
        <trans-unit id="f7683d66650cbf0b389c1b59ccb34f55344e6ba9" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getName &amp;mdash; Gets parameter name</source>
          <target state="translated">ReflectionParameter :: getName &amp;mdash;获取参数名称</target>
        </trans-unit>
        <trans-unit id="547c9c41bb5cc0deff14932b4007d67243aa4614" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getName &amp;rarr;</source>
          <target state="translated">ReflectionParameter :: getName&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e3ee2d85f1e7e4645bca5b6fed703943fd3b1317" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getPosition</source>
          <target state="translated">ReflectionParameter::getPosition</target>
        </trans-unit>
        <trans-unit id="17fa26bf737d8da64959f5fc77556fd81831d648" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getPosition &amp;mdash; Gets parameter position</source>
          <target state="translated">ReflectionParameter :: getPosition &amp;mdash;获取参数位置</target>
        </trans-unit>
        <trans-unit id="f8274ea5ef90631497807ee8e945a0ce30750c06" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getPosition &amp;rarr;</source>
          <target state="translated">ReflectionParameter :: getPosition&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="469dbd94046bfb11b707f58d92f4ba6597457eac" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getType</source>
          <target state="translated">ReflectionParameter::getType</target>
        </trans-unit>
        <trans-unit id="b77c97c914b631516257dc3981f941a98f4818e7" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getType &amp;mdash; Gets a parameter's type</source>
          <target state="translated">ReflectionParameter :: getType &amp;mdash;获取参数的类型</target>
        </trans-unit>
        <trans-unit id="88bcc7f607eb3ce36e06b26eeb03756a02825324" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::getType &amp;rarr;</source>
          <target state="translated">ReflectionParameter :: getType&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="d82a99f080be9ea9ad3091df94f8d956c0067f0a" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::hasType</source>
          <target state="translated">ReflectionParameter::hasType</target>
        </trans-unit>
        <trans-unit id="8c450f7aa958c50a51eed07d0259568d7865f53c" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::hasType &amp;mdash; Checks if parameter has a type</source>
          <target state="translated">ReflectionParameter :: hasType &amp;mdash;检查参数是否具有类型</target>
        </trans-unit>
        <trans-unit id="f82e6ba8038498c12f7b1a0b7c065f2d4350833f" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::hasType &amp;rarr;</source>
          <target state="translated">ReflectionParameter :: hasType&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="a58439307fa57d4c4406b3679972c6d6963d85bc" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::isArray</source>
          <target state="translated">ReflectionParameter::isArray</target>
        </trans-unit>
        <trans-unit id="b092a86b0dde3b22ce481c28fcee134ce2924c01" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::isArray &amp;mdash; Checks if parameter expects an array</source>
          <target state="translated">ReflectionParameter :: isArray &amp;mdash;检查参数是否期望数组</target>
        </trans-unit>
        <trans-unit id="39658619a765b38dfcfdf5bcb50dae3e76f2de31" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::isArray &amp;rarr;</source>
          <target state="translated">ReflectionParameter :: isArray&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="df18dde3871ca22f917dc55ac52950e8323b52bb" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::isCallable</source>
          <target state="translated">ReflectionParameter::isCallable</target>
        </trans-unit>
        <trans-unit id="56013223d499342109f4655753a5dcc3649b781c" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::isCallable &amp;mdash; Returns whether parameter MUST be callable</source>
          <target state="translated">ReflectionParameter :: isCallable &amp;mdash;返回参数是否必须可调用</target>
        </trans-unit>
        <trans-unit id="bac643a80dab9cc5477a6dcf86368fe0f3abef8c" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::isCallable &amp;rarr;</source>
          <target state="translated">ReflectionParameter :: isCallable&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="29db5949f117b325c3f81da9246e081df672fbf5" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::isDefaultValueAvailable</source>
          <target state="translated">ReflectionParameter::isDefaultValueAvailable</target>
        </trans-unit>
        <trans-unit id="69a5916061c68278d52d6937fcdfce056f29e5ff" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::isDefaultValueAvailable &amp;mdash; Checks if a default value is available</source>
          <target state="translated">ReflectionParameter :: isDefaultValueAvailable-检查默认值是否可用</target>
        </trans-unit>
        <trans-unit id="9acf31589822b39eee9b441e253b9632af1dd343" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::isDefaultValueAvailable &amp;rarr;</source>
          <target state="translated">ReflectionParameter :: isDefaultValueAvailable&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="a9e95bbd80c175858516e7251fb058a5fe835c7b" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::isDefaultValueConstant</source>
          <target state="translated">ReflectionParameter::isDefaultValueConstant</target>
        </trans-unit>
        <trans-unit id="d443235ee5b58163ab62b0996ba7c03f87b6ce42" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::isDefaultValueConstant &amp;mdash; Returns whether the default value of this parameter is a constant</source>
          <target state="translated">ReflectionParameter :: isDefaultValueConstant &amp;mdash;返回此参数的默认值是否为常数</target>
        </trans-unit>
        <trans-unit id="b3fdb41afe74e6030b95fed0c93e442d215a9376" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::isDefaultValueConstant &amp;rarr;</source>
          <target state="translated">ReflectionParameter :: isDefaultValueConstant&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="fc1119ad32ebe0cdd8982488f682409edbb1dacd" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::isOptional</source>
          <target state="translated">ReflectionParameter::isOptional</target>
        </trans-unit>
        <trans-unit id="3f73335890536f90ae0a633cd139ba814e9e1871" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::isOptional &amp;mdash; Checks if optional</source>
          <target state="translated">ReflectionParameter :: isOptional-检查是否可选</target>
        </trans-unit>
        <trans-unit id="7a9404472ccee97904a3485423d510219470c79d" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::isOptional &amp;rarr;</source>
          <target state="translated">ReflectionParameter :: isOptional&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="ba232458432d1c256610a6caa5405dbe9f2957e1" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::isPassedByReference</source>
          <target state="translated">ReflectionParameter::isPassedByReference</target>
        </trans-unit>
        <trans-unit id="e3f35317900e78b31b769edff11606037cbc5f6c" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::isPassedByReference &amp;mdash; Checks if passed by reference</source>
          <target state="translated">ReflectionParameter :: isPassedByReference &amp;mdash;检查是否通过引用传递</target>
        </trans-unit>
        <trans-unit id="4690e81621efb8b499d07141cc69dd1691d0121b" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::isPassedByReference &amp;rarr;</source>
          <target state="translated">ReflectionParameter :: isPassedByReference&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="9ecb94c61e36343d0bafca173ab1400c8f00f26b" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::isVariadic</source>
          <target state="translated">ReflectionParameter::isVariadic</target>
        </trans-unit>
        <trans-unit id="9e6ad250e52e7202c5a573cd02f4e81c36253911" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::isVariadic &amp;mdash; Checks if the parameter is variadic</source>
          <target state="translated">ReflectionParameter :: isVariadic &amp;mdash;检查参数是否可变</target>
        </trans-unit>
        <trans-unit id="7839d7109ea8b8b7ccf577617772bdd79866b226" translate="yes" xml:space="preserve">
          <source>ReflectionParameter::isVariadic &amp;rarr;</source>
          <target state="translated">反射参数:: isVariadic&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="b11d976ff812b3b2dc65b4395f86edf2747a7ba8" translate="yes" xml:space="preserve">
          <source>ReflectionProperty</source>
          <target state="translated">ReflectionProperty</target>
        </trans-unit>
        <trans-unit id="8d1d0aeb439c089e2fb09303e5dbc85fffbb6dcd" translate="yes" xml:space="preserve">
          <source>ReflectionProperty &amp;rarr;</source>
          <target state="translated">反射属性&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="86b3f48ec84ec821b22ea63c52c43fb912e1cc9d" translate="yes" xml:space="preserve">
          <source>ReflectionProperty Modifiers</source>
          <target state="translated">反射属性修改器</target>
        </trans-unit>
        <trans-unit id="8921657310faf9de64e50b2fa04b15c38241c568" translate="yes" xml:space="preserve">
          <source>ReflectionProperty modifier constants</source>
          <target state="translated">反射属性修改常数</target>
        </trans-unit>
        <trans-unit id="3b5523fb7f9eb305835d610c3c1456b9b252e23e" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::__clone</source>
          <target state="translated">ReflectionProperty::__clone</target>
        </trans-unit>
        <trans-unit id="91ed2f8365f82913ea01da9f4141f1ca92a71eed" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::__clone &amp;mdash; Clone</source>
          <target state="translated">ReflectionProperty :: __ clone &amp;mdash;克隆</target>
        </trans-unit>
        <trans-unit id="e55eaae09f8cb4f5ef3f7587b3d3b0927bfec9e0" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::__clone &amp;rarr;</source>
          <target state="translated">ReflectionProperty :: __ clone&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="4b59f0a754fc87bb83cbb885295a167e5d7c030a" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::__construct</source>
          <target state="translated">ReflectionProperty::__construct</target>
        </trans-unit>
        <trans-unit id="d0d00c2818071402bfa39cccc855f3b50d594a06" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::__construct &amp;mdash; Construct a ReflectionProperty object</source>
          <target state="translated">ReflectionProperty :: __ construct &amp;mdash;构造一个ReflectionProperty对象</target>
        </trans-unit>
        <trans-unit id="ae8017164da4ed106a7ce1957f44b2ca89dfec70" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::__construct &amp;rarr;</source>
          <target state="translated">ReflectionProperty :: __ construct&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="fd5730e34fa61d0ca603ec26a59577e541a7c828" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::__toString</source>
          <target state="translated">ReflectionProperty::__toString</target>
        </trans-unit>
        <trans-unit id="c1cb9f7e28a65f7f67d541d1f5576d9be17e7ff3" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::__toString &amp;mdash; To string</source>
          <target state="translated">ReflectionProperty :: __ toString &amp;mdash;字符串</target>
        </trans-unit>
        <trans-unit id="a58b26729152746402b4d0365b40c077acaf05c3" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::__toString &amp;rarr;</source>
          <target state="translated">ReflectionProperty :: __ toString&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="c7a31475bb5e78bdff6a1f978223c249cda7d752" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::export</source>
          <target state="translated">ReflectionProperty::export</target>
        </trans-unit>
        <trans-unit id="5685f471e1f09558eb0654e38495eba9a1fe91ad" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::export &amp;mdash; Export</source>
          <target state="translated">ReflectionProperty :: export &amp;mdash;导出</target>
        </trans-unit>
        <trans-unit id="2203a5149200d7447825bbcf522f00223d9382e6" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::export &amp;rarr;</source>
          <target state="translated">ReflectionProperty :: export&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="dde9d56ed5b74f37bcb25c9a3ef2592c6e90289d" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::getDeclaringClass</source>
          <target state="translated">ReflectionProperty::getDeclaringClass</target>
        </trans-unit>
        <trans-unit id="189d2a7a9ffe0ab94d78099eafd659dfcc234667" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::getDeclaringClass &amp;mdash; Gets declaring class</source>
          <target state="translated">ReflectionProperty :: getDeclaringClass-获取声明类</target>
        </trans-unit>
        <trans-unit id="952af3d10cc8cb1d1575f28231c0bfaf4fc8aa80" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::getDeclaringClass &amp;rarr;</source>
          <target state="translated">ReflectionProperty :: getDeclaringClass&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="a138c9ac681811193165e46d496936859aa9a95b" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::getDefaultValue</source>
          <target state="translated">ReflectionProperty::getDefaultValue</target>
        </trans-unit>
        <trans-unit id="c3610eb0512d004108329feef099ee9e8bba5d60" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::getDefaultValue &amp;mdash; Returns the default value declared for a property</source>
          <target state="translated">ReflectionProperty :: getDefaultValue &amp;mdash;返回为属性声明的默认值</target>
        </trans-unit>
        <trans-unit id="6865e03b1546fa7dfe784e90354b161a66e45315" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::getDocComment</source>
          <target state="translated">ReflectionProperty::getDocComment</target>
        </trans-unit>
        <trans-unit id="428fdedc817bbf717deb075d050c20a87a3d1668" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::getDocComment &amp;mdash; Gets the property doc comment</source>
          <target state="translated">ReflectionProperty :: getDocComment &amp;mdash;获取属性文档注释</target>
        </trans-unit>
        <trans-unit id="1c094de37caedf45c53bc68faec7a8a2ea1fb4e5" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::getDocComment &amp;rarr;</source>
          <target state="translated">ReflectionProperty :: getDocComment&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="aab86f9f02927d3f57c5300f7649c32a7fe153be" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::getModifiers</source>
          <target state="translated">ReflectionProperty::getModifiers</target>
        </trans-unit>
        <trans-unit id="9caace4dc3500700b4dd1c0e028fd0061d306afc" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::getModifiers &amp;mdash; Gets the property modifiers</source>
          <target state="translated">ReflectionProperty :: getModifiers &amp;mdash;获取属性修饰符</target>
        </trans-unit>
        <trans-unit id="76348de7e8edffd5307808b19849193b3b46147c" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::getModifiers &amp;rarr;</source>
          <target state="translated">ReflectionProperty :: getModifiers&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="1188c72e81545df9d4ea98f6947344b3860ae912" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::getName</source>
          <target state="translated">ReflectionProperty::getName</target>
        </trans-unit>
        <trans-unit id="7c9c91676cbaaa8772f25eea5a425eb76da07bda" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::getName &amp;mdash; Gets property name</source>
          <target state="translated">ReflectionProperty :: getName &amp;mdash;获取属性名称</target>
        </trans-unit>
        <trans-unit id="7b15f4d7d7da0f7c5cfc88a9b819aabaf70e0d2a" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::getName &amp;rarr;</source>
          <target state="translated">ReflectionProperty :: getName&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="df008035f11a72fcff5285304ba95946ee55386e" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::getType</source>
          <target state="translated">ReflectionProperty::getType</target>
        </trans-unit>
        <trans-unit id="274a708ab653cd33e7d1a6cbc39736f5c86e9c97" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::getType &amp;mdash; Gets a property's type</source>
          <target state="translated">ReflectionProperty :: getType &amp;mdash;获取属性的类型</target>
        </trans-unit>
        <trans-unit id="3d5f7d4f3f9cd8f62646963fa4740fe61e2bfb23" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::getValue</source>
          <target state="translated">ReflectionProperty::getValue</target>
        </trans-unit>
        <trans-unit id="fc85a08ca92b8cf77b2ac1ff6142cd4fc3bdb5fe" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::getValue &amp;mdash; Gets value</source>
          <target state="translated">ReflectionProperty :: getValue &amp;mdash;获取价值</target>
        </trans-unit>
        <trans-unit id="c22bdbc1ad558a8580df4e9732c98e1e161511b3" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::getValue &amp;rarr;</source>
          <target state="translated">ReflectionProperty :: getValue&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="4bee44e9e965cc2348cac0815fccfe077d5ff5b7" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::hasDefaultValue</source>
          <target state="translated">ReflectionProperty::hasDefaultValue</target>
        </trans-unit>
        <trans-unit id="b8129acb2db91dc133e7441db0f3138adeed2ac6" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::hasDefaultValue &amp;mdash; Checks if property has a default value declared</source>
          <target state="translated">ReflectionProperty :: hasDefaultValue-检查属性是否声明了默认值</target>
        </trans-unit>
        <trans-unit id="6afc934401b676ab3f87f50352b6bfb961f598e4" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::hasType</source>
          <target state="translated">ReflectionProperty::hasType</target>
        </trans-unit>
        <trans-unit id="5b7a33ee6e048b3254c404b84934d2291a6bb75a" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::hasType &amp;mdash; Checks if property has a type</source>
          <target state="translated">ReflectionProperty :: hasType &amp;mdash;检查属性是否具有类型</target>
        </trans-unit>
        <trans-unit id="741f9d5f631a452cca4dc02298f4387660ad201f" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::isDefault</source>
          <target state="translated">ReflectionProperty::isDefault</target>
        </trans-unit>
        <trans-unit id="b8e48f0e2994be471ac59365752b103aa25169f6" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::isDefault &amp;mdash; Checks if property is a default property</source>
          <target state="translated">ReflectionProperty :: isDefault-检查属性是否为默认属性</target>
        </trans-unit>
        <trans-unit id="342c108f964e5f57e40e49fa2d5f4e0fdb38924a" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::isDefault &amp;rarr;</source>
          <target state="translated">ReflectionProperty :: isDefault&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="7a65d29714560eb1f951d5bb910e29aad486ef88" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::isInitialized</source>
          <target state="translated">ReflectionProperty::isInitialized</target>
        </trans-unit>
        <trans-unit id="22ec8d17e479be66e8abb84f3f84201f013facd9" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::isInitialized &amp;mdash; Checks whether a property is initialized</source>
          <target state="translated">ReflectionProperty :: isInitialized &amp;mdash;检查属性是否已初始化</target>
        </trans-unit>
        <trans-unit id="d84242757f7015e6706847e897203c7206ac16a1" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::isPrivate</source>
          <target state="translated">ReflectionProperty::isPrivate</target>
        </trans-unit>
        <trans-unit id="6d773433f44b4c8fb7d0159b07286e58b30d3108" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::isPrivate &amp;mdash; Checks if property is private</source>
          <target state="translated">ReflectionProperty :: isPrivate &amp;mdash;检查属性是否为私有</target>
        </trans-unit>
        <trans-unit id="d7cf4a5ea866be2dc0fa0f67adbbdb05ed794524" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::isPrivate &amp;rarr;</source>
          <target state="translated">ReflectionProperty :: isPrivate&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="c1992f4c68112bf477aa6307bf25079e104c650e" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::isProtected</source>
          <target state="translated">ReflectionProperty::isProtected</target>
        </trans-unit>
        <trans-unit id="28583a24393d822d077f2ea82e3c3c116082bc36" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::isProtected &amp;mdash; Checks if property is protected</source>
          <target state="translated">ReflectionProperty :: isProtected &amp;mdash;检查属性是否受到保护</target>
        </trans-unit>
        <trans-unit id="17773911b1a7dd455f2dd2a46190aeeae97663e7" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::isProtected &amp;rarr;</source>
          <target state="translated">ReflectionProperty :: isProtected&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="a1591b6b157c1048b60e7064587b4d295628d66f" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::isPublic</source>
          <target state="translated">ReflectionProperty::isPublic</target>
        </trans-unit>
        <trans-unit id="2e81bc1219e683b6e545fed682e0d69466a8592d" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::isPublic &amp;mdash; Checks if property is public</source>
          <target state="translated">ReflectionProperty :: isPublic &amp;mdash;检查属性是否为公共</target>
        </trans-unit>
        <trans-unit id="b13958eb3195f3953a42096e3e30afc5aeb1c1e1" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::isPublic &amp;rarr;</source>
          <target state="translated">ReflectionProperty :: isPublic&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="f87d6a03a1bf89e3572ac11e4ad2cbf0e2801d2e" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::isStatic</source>
          <target state="translated">ReflectionProperty::isStatic</target>
        </trans-unit>
        <trans-unit id="7fe0af02a61f1726d66139fdff92b820a9bd5c3f" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::isStatic &amp;mdash; Checks if property is static</source>
          <target state="translated">ReflectionProperty :: isStatic &amp;mdash;检查属性是否为静态</target>
        </trans-unit>
        <trans-unit id="1d9aac0c3c3a765016e4b33dd369a6a6457c8221" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::isStatic &amp;rarr;</source>
          <target state="translated">ReflectionProperty :: isStatic&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="546c91d300038d41216d225c4f832d60a68a199d" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::setAccessible</source>
          <target state="translated">ReflectionProperty::setAccessible</target>
        </trans-unit>
        <trans-unit id="edbe7e0f6823ebce1d54522c6137ca41081e8636" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::setAccessible &amp;mdash; Set property accessibility</source>
          <target state="translated">ReflectionProperty :: setAccessible-设置属性可访问性</target>
        </trans-unit>
        <trans-unit id="6830b4a8f5d95f10fd412422a83269a6309b2be8" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::setAccessible &amp;rarr;</source>
          <target state="translated">ReflectionProperty :: setAccessible&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="107cd2b13483f1f3dc76fc1544e36e85852c04c5" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::setValue</source>
          <target state="translated">ReflectionProperty::setValue</target>
        </trans-unit>
        <trans-unit id="71930e9af1d7dda9458f64274e5e1d0cff2c3591" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::setValue &amp;mdash; Set property value</source>
          <target state="translated">ReflectionProperty :: setValue &amp;mdash;设置属性值</target>
        </trans-unit>
        <trans-unit id="d775d4d1a5efee1021144c6172f43fbc8df01a19" translate="yes" xml:space="preserve">
          <source>ReflectionProperty::setValue &amp;rarr;</source>
          <target state="translated">ReflectionProperty :: setValue&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="b6dd9fe0fd32cc1d9229731056f5f8cadf35edf0" translate="yes" xml:space="preserve">
          <source>ReflectionReference::fromArrayElement</source>
          <target state="translated">ReflectionReference::fromArrayElement</target>
        </trans-unit>
        <trans-unit id="5ac61469a6ca742a012199a579a83e3fceed7f0d" translate="yes" xml:space="preserve">
          <source>ReflectionReference::fromArrayElement &amp;mdash; Create a ReflectionReference from an array element</source>
          <target state="translated">ReflectionReference :: fromArrayElement &amp;mdash;从数组元素创建一个ReflectionReference</target>
        </trans-unit>
        <trans-unit id="90eb1e0f64975148feea0b2b936d0f741cb6941f" translate="yes" xml:space="preserve">
          <source>ReflectionReference::getId</source>
          <target state="translated">ReflectionReference::getId</target>
        </trans-unit>
        <trans-unit id="ff8122687e7ccdbc6c61676999a5d2ff7dee728f" translate="yes" xml:space="preserve">
          <source>ReflectionReference::getId &amp;mdash; Get unique ID of a reference</source>
          <target state="translated">ReflectionReference :: getId &amp;mdash;获取引用的唯一ID</target>
        </trans-unit>
        <trans-unit id="abbb75f6332684b576c373bf818afc944a0079df" translate="yes" xml:space="preserve">
          <source>ReflectionType &amp;rarr;</source>
          <target state="translated">ReflectionType&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="76c92e1acb4d6b6ecca12787a4c4405d7327b240" translate="yes" xml:space="preserve">
          <source>ReflectionType::__toString</source>
          <target state="translated">ReflectionType::__toString</target>
        </trans-unit>
        <trans-unit id="d7a693ddb0b78a2bceb0e67555a094744517836f" translate="yes" xml:space="preserve">
          <source>ReflectionType::__toString &amp;mdash; To string</source>
          <target state="translated">ReflectionType :: __ toString &amp;mdash;字符串</target>
        </trans-unit>
        <trans-unit id="ac5d97a5f3d9ce30f13f3d24538ea66a68086865" translate="yes" xml:space="preserve">
          <source>ReflectionType::__toString &amp;rarr;</source>
          <target state="translated">ReflectionType :: __ toString&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="7345a59a8177e97b5f9d2d75ef5ae9fd5d9ae815" translate="yes" xml:space="preserve">
          <source>ReflectionType::allowsNull</source>
          <target state="translated">ReflectionType::allowsNull</target>
        </trans-unit>
        <trans-unit id="f0ad52b6a59240fdef23dfe83240c4ddf8e9a88e" translate="yes" xml:space="preserve">
          <source>ReflectionType::allowsNull &amp;mdash; Checks if null is allowed</source>
          <target state="translated">ReflectionType :: allowsNull &amp;mdash;检查是否允许null</target>
        </trans-unit>
        <trans-unit id="3ab661f2815ac13bcfbeca88ed66e0d688985f0e" translate="yes" xml:space="preserve">
          <source>ReflectionType::allowsNull &amp;rarr;</source>
          <target state="translated">ReflectionType :: allowsNull&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="f8a657e1b6d0eac9c5e2df51ad730b6ae417534d" translate="yes" xml:space="preserve">
          <source>ReflectionType::isBuiltin</source>
          <target state="translated">ReflectionType::isBuiltin</target>
        </trans-unit>
        <trans-unit id="1b41fa9a61a10b89263e66d7ab725e7c9bd81213" translate="yes" xml:space="preserve">
          <source>ReflectionType::isBuiltin &amp;mdash; Checks if it is a built-in type</source>
          <target state="translated">ReflectionType :: isBuiltin &amp;mdash;检查它是否是内置类型</target>
        </trans-unit>
        <trans-unit id="a4eaa7baa53d64b6ec6e9f7c48cd99fcaf709426" translate="yes" xml:space="preserve">
          <source>ReflectionType::isBuiltin &amp;rarr;</source>
          <target state="translated">ReflectionType :: isBuiltin&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="888cac9d8fc480e0da4a292431f509fd87eb8cc6" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension &amp;rarr;</source>
          <target state="translated">ReflectionZendExtension&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="accbe928e60c1fea78593387611e2eac5396a000" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::__clone</source>
          <target state="translated">ReflectionZendExtension::__clone</target>
        </trans-unit>
        <trans-unit id="49e0f8707d92ee3202172c1ca2b02cf4aec4e9ed" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::__clone &amp;mdash; Clone handler</source>
          <target state="translated">ReflectionZendExtension :: __ clone &amp;mdash;克隆处理程序</target>
        </trans-unit>
        <trans-unit id="3e657941bd9bf03f174bceced3e88bfcf6348dfc" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::__clone &amp;rarr;</source>
          <target state="translated">ReflectionZendExtension :: __ clone&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="ab60b5d591c8bae35e350bb222dfe61c346fa072" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::__construct</source>
          <target state="translated">ReflectionZendExtension::__construct</target>
        </trans-unit>
        <trans-unit id="16056ccef940968e62eed6078048249badb272ef" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::__construct &amp;mdash; Constructor</source>
          <target state="translated">ReflectionZendExtension :: __ construct &amp;mdash;构造函数</target>
        </trans-unit>
        <trans-unit id="061d0093552543ae4032aee69b454825194e696f" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::__construct &amp;rarr;</source>
          <target state="translated">ReflectionZendExtension :: __ construct&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e384930b7e5c44f9549b469b50d27423efdc34d5" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::__toString</source>
          <target state="translated">ReflectionZendExtension::__toString</target>
        </trans-unit>
        <trans-unit id="02dca5ce5010e0b60c65837e483c0573e3847e49" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::__toString &amp;mdash; To string handler</source>
          <target state="translated">ReflectionZendExtension :: __ toString &amp;mdash;到字符串处理程序</target>
        </trans-unit>
        <trans-unit id="ac5f473362080a2f10249e7ad29fe4b4075cda09" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::__toString &amp;rarr;</source>
          <target state="translated">ReflectionZendExtension :: __ toString&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="32f94ec0bac3daf1820623e3d436f415095bde32" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::export</source>
          <target state="translated">ReflectionZendExtension::export</target>
        </trans-unit>
        <trans-unit id="fbed429b1e9b88c368aecc2e22f060418c4159cf" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::export &amp;mdash; Export</source>
          <target state="translated">ReflectionZendExtension :: export &amp;mdash;导出</target>
        </trans-unit>
        <trans-unit id="1b1bcb64fda2e14eb50343e73df9de70cb7a93b9" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::export &amp;rarr;</source>
          <target state="translated">ReflectionZendExtension :: export&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="c8ae0240d06f509b9a8f78c9c9092b693f8c63e9" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::getAuthor</source>
          <target state="translated">ReflectionZendExtension::getAuthor</target>
        </trans-unit>
        <trans-unit id="c4eb05c58c7a0a0b638ac3ed81a0afd146f707d4" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::getAuthor &amp;mdash; Gets author</source>
          <target state="translated">ReflectionZendExtension :: getAuthor &amp;mdash;获取作者</target>
        </trans-unit>
        <trans-unit id="65a829f535a2129bbe7de0a9322863405e684b9d" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::getAuthor &amp;rarr;</source>
          <target state="translated">ReflectionZendExtension :: getAuthor&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="8e8a42a0f1cc903e14d426c725bc8249e270edac" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::getCopyright</source>
          <target state="translated">ReflectionZendExtension::getCopyright</target>
        </trans-unit>
        <trans-unit id="f6ea5eb744291f0884409e888e8d2a8feb2cd141" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::getCopyright &amp;mdash; Gets copyright</source>
          <target state="translated">ReflectionZendExtension :: getCopyright &amp;mdash;获取版权</target>
        </trans-unit>
        <trans-unit id="7ac318466420987fd37fb939a044593e442904e5" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::getCopyright &amp;rarr;</source>
          <target state="translated">ReflectionZendExtension :: getCopyright&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="3a66115d92bb4527acf5a4e5b862055e2a027a1c" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::getName</source>
          <target state="translated">ReflectionZendExtension::getName</target>
        </trans-unit>
        <trans-unit id="29c3ae0babcf8ec5c0d77a65efc7855484e4880d" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::getName &amp;mdash; Gets name</source>
          <target state="translated">ReflectionZendExtension :: getName &amp;mdash;获取名称</target>
        </trans-unit>
        <trans-unit id="0e43acd0d0ed46ab9d367ac052a4b9bb19cc8275" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::getName &amp;rarr;</source>
          <target state="translated">ReflectionZendExtension :: getName&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="251c540a0baefcbf3c5e7156cf89f3b3e98f5e07" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::getURL</source>
          <target state="translated">ReflectionZendExtension::getURL</target>
        </trans-unit>
        <trans-unit id="2e091c591139ab20bbbbfc2b5b07ec1d2e8be8d8" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::getURL &amp;mdash; Gets URL</source>
          <target state="translated">ReflectionZendExtension :: getURL &amp;mdash;获取URL</target>
        </trans-unit>
        <trans-unit id="37d39d115b3f6350773561f38585e1c6f4018356" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::getURL &amp;rarr;</source>
          <target state="translated">ReflectionZendExtension :: getURL&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="a119a6f76b367bd60653e9e9fac7ff7706629503" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::getVersion</source>
          <target state="translated">ReflectionZendExtension::getVersion</target>
        </trans-unit>
        <trans-unit id="2f588a85cb2777ba2f326cf07305842b113536ad" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::getVersion &amp;mdash; Gets version</source>
          <target state="translated">ReflectionZendExtension :: getVersion &amp;mdash;获取版本</target>
        </trans-unit>
        <trans-unit id="823bbef7ef8286f6793793217dfe3277d12ed76e" translate="yes" xml:space="preserve">
          <source>ReflectionZendExtension::getVersion &amp;rarr;</source>
          <target state="translated">ReflectionZendExtension :: getVersion&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="4391723bfbd8488de76bc1159f89bdcef3ff8c1f" translate="yes" xml:space="preserve">
          <source>Reflector &amp;rarr;</source>
          <target state="translated">反光板&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="ce702f704cae25743fe212dc42a3b4e719cafd3c" translate="yes" xml:space="preserve">
          <source>Reflector (interface)</source>
          <target state="translated">反射器(接口)</target>
        </trans-unit>
        <trans-unit id="07e6ddb67e7470db297d62a9811fcae77567a639" translate="yes" xml:space="preserve">
          <source>Reflector::__toString</source>
          <target state="translated">Reflector::__toString</target>
        </trans-unit>
        <trans-unit id="b9409015c176009ee276f7120086c60f9fa5f9d9" translate="yes" xml:space="preserve">
          <source>Reflector::__toString &amp;mdash; To string</source>
          <target state="translated">Reflector :: __ toString &amp;mdash;字符串</target>
        </trans-unit>
        <trans-unit id="8b8c2f18ff09bb1481c7e6fd56d09060b5e834c0" translate="yes" xml:space="preserve">
          <source>Reflector::__toString &amp;rarr;</source>
          <target state="translated">Reflector :: __ toString&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="d6b464960642eb4f61795b9c3d8837312964188e" translate="yes" xml:space="preserve">
          <source>Reflector::export</source>
          <target state="translated">Reflector::export</target>
        </trans-unit>
        <trans-unit id="7547d99ae5a3e9ce3ada2296466387584b4feb1e" translate="yes" xml:space="preserve">
          <source>Reflector::export &amp;mdash; Exports</source>
          <target state="translated">Reflector :: export &amp;mdash;出口</target>
        </trans-unit>
        <trans-unit id="10847992dbf4567a231c16dc1684ccee5d8669d6" translate="yes" xml:space="preserve">
          <source>Reflector::export &amp;rarr;</source>
          <target state="translated">Reflector :: export&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="dd2b7db4e540c80a7bdecd6f06c0ce092a14d7d7" translate="yes" xml:space="preserve">
          <source>Refreshes the cache entries for the files, whose names were passed in the input argument. If no argument is specified then refreshes all the entries in the cache.</source>
          <target state="translated">刷新缓存中的文件条目,这些文件的名字是在输入参数中传递的。如果没有指定参数,则刷新缓存中的所有条目。</target>
        </trans-unit>
        <trans-unit id="f308f250c863c7caa54e6c07d9b921fa023e9b2b" translate="yes" xml:space="preserve">
          <source>Regardless of the &lt;code&gt;work_factor&lt;/code&gt;, the generated output is the same.</source>
          <target state="translated">无论 &lt;code&gt;work_factor&lt;/code&gt; 为何，生成的输出都是相同的。</target>
        </trans-unit>
        <trans-unit id="184834364bbc791e39d357b4ee2b109e094ea73c" translate="yes" xml:space="preserve">
          <source>Regardless of the &lt;code&gt;workfactor&lt;/code&gt;, the generated output is the same.</source>
          <target state="translated">无论工作 &lt;code&gt;workfactor&lt;/code&gt; 如何，生成的输出都是相同的。</target>
        </trans-unit>
        <trans-unit id="4ff63ba612338f97ff1c470b7cf9900224e413f4" translate="yes" xml:space="preserve">
          <source>Regardless of whether the $className parameter is supplied, if a field with no name is returned, the field value will be ignored and a warning will be added to the error collection.</source>
          <target state="translated">无论是否提供了$className参数,如果返回一个没有名字的字段,字段值将被忽略,并在错误集合中添加一个警告。</target>
        </trans-unit>
        <trans-unit id="e7ce134aa696d0dc87aadf3d98788257d43dc4d1" translate="yes" xml:space="preserve">
          <source>Regex string for matching &lt;code&gt;&quot;no&quot;&lt;/code&gt; input.</source>
          <target state="translated">用于匹配 &lt;code&gt;&quot;no&quot;&lt;/code&gt; 输入的正则表达式字符串。</target>
        </trans-unit>
        <trans-unit id="1d13e30c507241e864d1a3d09e006e41975ea73f" translate="yes" xml:space="preserve">
          <source>Regex string for matching &lt;code&gt;&quot;yes&quot;&lt;/code&gt; input.</source>
          <target state="translated">用于匹配 &lt;code&gt;&quot;yes&quot;&lt;/code&gt; 输入的正则表达式字符串。</target>
        </trans-unit>
        <trans-unit id="ceb75a581472b1cbc29d79ba2b73ee7e75ea08c6" translate="yes" xml:space="preserve">
          <source>Regex string for matching &lt;em&gt;&quot;no&quot;&lt;/em&gt; input.</source>
          <target state="translated">正则表达式字符串，用于匹配&lt;em&gt;&amp;ldquo;否&amp;rdquo;&lt;/em&gt;输入。</target>
        </trans-unit>
        <trans-unit id="20e491c517c4903dbe88f03db405ddce7b7962e4" translate="yes" xml:space="preserve">
          <source>Regex string for matching &lt;em&gt;&quot;yes&quot;&lt;/em&gt; input.</source>
          <target state="translated">正则表达式字符串，用于匹配&lt;em&gt;&amp;ldquo;是&amp;rdquo;&lt;/em&gt;输入。</target>
        </trans-unit>
        <trans-unit id="1c6a8ce82f99549c968b8ca2c1b96495c1063d3d" translate="yes" xml:space="preserve">
          <source>RegexIterator &amp;rarr;</source>
          <target state="translated">RegexIterator&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="7a0fb3666d75a2b45bb5ce00ecf549b69e9340e3" translate="yes" xml:space="preserve">
          <source>RegexIterator (class)</source>
          <target state="translated">过滤器迭代器</target>
        </trans-unit>
        <trans-unit id="6c90b699bcacedc6fb01dc7328407b0ac88faea1" translate="yes" xml:space="preserve">
          <source>RegexIterator Flags</source>
          <target state="translated">RegexIterator标志</target>
        </trans-unit>
        <trans-unit id="a1136bec440fe7c27ce3078a07c737f4cb5e74ee" translate="yes" xml:space="preserve">
          <source>RegexIterator constants</source>
          <target state="translated">RegexIterator常量</target>
        </trans-unit>
        <trans-unit id="8993a3b60e36c684b6b47b1aab009cfc1e8d060c" translate="yes" xml:space="preserve">
          <source>RegexIterator operation modes</source>
          <target state="translated">RegexIterator操作模式</target>
        </trans-unit>
        <trans-unit id="7317fa499088e12e18163ccdf6220a2df44d93c0" translate="yes" xml:space="preserve">
          <source>RegexIterator::ALL_MATCHES</source>
          <target state="translated">RegexIterator::ALL_MATCHES</target>
        </trans-unit>
        <trans-unit id="e409595d1a2196cfb6f4d9bcd24662f4d4818791" translate="yes" xml:space="preserve">
          <source>RegexIterator::GET_MATCH</source>
          <target state="translated">RegexIterator::GET_MATCH</target>
        </trans-unit>
        <trans-unit id="5e2673e27aa5c905a136621ea5d08d8b817771aa" translate="yes" xml:space="preserve">
          <source>RegexIterator::MATCH</source>
          <target state="translated">RegexIterator::MATCH</target>
        </trans-unit>
        <trans-unit id="82e837022fda70e2ac11c62f9b054f235cf1109e" translate="yes" xml:space="preserve">
          <source>RegexIterator::REPLACE</source>
          <target state="translated">RegexIterator::REPLACE</target>
        </trans-unit>
        <trans-unit id="119eafaa1b67793cd0d538e2dfd0cb2828ec31e5" translate="yes" xml:space="preserve">
          <source>RegexIterator::SPLIT</source>
          <target state="translated">RegexIterator::SPLIT</target>
        </trans-unit>
        <trans-unit id="50ca191845b184efd43cfe0447d113359b8ac474" translate="yes" xml:space="preserve">
          <source>RegexIterator::USE_KEY</source>
          <target state="translated">RegexIterator::USE_KEY</target>
        </trans-unit>
        <trans-unit id="926dc6ad8d9dea2c5da68b3ee4282d9d3198aa5c" translate="yes" xml:space="preserve">
          <source>RegexIterator::__construct</source>
          <target state="translated">RegexIterator::__construct</target>
        </trans-unit>
        <trans-unit id="6e6aa20ee8bee25a3046f9ccba49309c6412de5d" translate="yes" xml:space="preserve">
          <source>RegexIterator::__construct &amp;mdash; Create a new RegexIterator</source>
          <target state="translated">RegexIterator :: __ construct &amp;mdash;创建一个新的RegexIterator</target>
        </trans-unit>
        <trans-unit id="e3a730afe882211e63f80e0c76881c47c9284e15" translate="yes" xml:space="preserve">
          <source>RegexIterator::__construct &amp;rarr;</source>
          <target state="translated">RegexIterator :: __ construct&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="d003a36fa39a67db5519d97f379238a1ba92b0d0" translate="yes" xml:space="preserve">
          <source>RegexIterator::accept</source>
          <target state="translated">RegexIterator::accept</target>
        </trans-unit>
        <trans-unit id="fee8225cc456d640d6803d76994a20deb7cd74d7" translate="yes" xml:space="preserve">
          <source>RegexIterator::accept &amp;mdash; Get accept status</source>
          <target state="translated">RegexIterator :: accept &amp;mdash;获取接受状态</target>
        </trans-unit>
        <trans-unit id="84174d29e8955a35139a9cf3d64eddfd655d6d22" translate="yes" xml:space="preserve">
          <source>RegexIterator::accept &amp;rarr;</source>
          <target state="translated">RegexIterator :: accept&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="753f870eb4fb4c20e47ee40238cfa5feef2df53e" translate="yes" xml:space="preserve">
          <source>RegexIterator::getFlags</source>
          <target state="translated">RegexIterator::getFlags</target>
        </trans-unit>
        <trans-unit id="121b0d195fbb86a06b60a4d32cade82d40c58ba5" translate="yes" xml:space="preserve">
          <source>RegexIterator::getFlags &amp;mdash; Get flags</source>
          <target state="translated">RegexIterator :: getFlags &amp;mdash;获取标志</target>
        </trans-unit>
        <trans-unit id="f2a74be94a33aaff2f29e78a20ce5511707bbac3" translate="yes" xml:space="preserve">
          <source>RegexIterator::getFlags &amp;rarr;</source>
          <target state="translated">RegexIterator :: getFlags&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="c12594e08ceca8721a011af5b0ca6ba6e3f7509e" translate="yes" xml:space="preserve">
          <source>RegexIterator::getMode</source>
          <target state="translated">RegexIterator::getMode</target>
        </trans-unit>
        <trans-unit id="b4b23a5f9400190acfbcfcbdea7800afa169cfa3" translate="yes" xml:space="preserve">
          <source>RegexIterator::getMode &amp;mdash; Returns operation mode</source>
          <target state="translated">RegexIterator :: getMode &amp;mdash;返回操作模式</target>
        </trans-unit>
        <trans-unit id="b46e938dfd822a7924ce5b8a4586b9f224dac1ea" translate="yes" xml:space="preserve">
          <source>RegexIterator::getMode &amp;rarr;</source>
          <target state="translated">RegexIterator :: getMode&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="7b5357f225ed38c6e542166865d709caa5871aa0" translate="yes" xml:space="preserve">
          <source>RegexIterator::getPregFlags</source>
          <target state="translated">RegexIterator::getPregFlags</target>
        </trans-unit>
        <trans-unit id="fdc21c94916486909df4a75be815f6c41df22a73" translate="yes" xml:space="preserve">
          <source>RegexIterator::getPregFlags &amp;mdash; Returns the regular expression flags</source>
          <target state="translated">RegexIterator :: getPregFlags &amp;mdash;返回正则表达式标志</target>
        </trans-unit>
        <trans-unit id="7ed7a0d716f07fa44d8dee1cd795e2064aba50d4" translate="yes" xml:space="preserve">
          <source>RegexIterator::getPregFlags &amp;rarr;</source>
          <target state="translated">RegexIterator :: getPregFlags&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="39f5648ce6820bafc908306d83a3e369a9b1c3b1" translate="yes" xml:space="preserve">
          <source>RegexIterator::getRegex</source>
          <target state="translated">RegexIterator::getRegex</target>
        </trans-unit>
        <trans-unit id="5e3acab37b2fb7d966b405590f8f88e0616e3f40" translate="yes" xml:space="preserve">
          <source>RegexIterator::getRegex &amp;mdash; Returns current regular expression</source>
          <target state="translated">RegexIterator :: getRegex &amp;mdash;返回当前的正则表达式</target>
        </trans-unit>
        <trans-unit id="84c449a6f2bedf2c121588316cd996db0b3bdde5" translate="yes" xml:space="preserve">
          <source>RegexIterator::getRegex &amp;rarr;</source>
          <target state="translated">RegexIterator :: getRegex&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="dc9d64da05e4d5c98e395cbd12497552461b970a" translate="yes" xml:space="preserve">
          <source>RegexIterator::setFlags</source>
          <target state="translated">RegexIterator::setFlags</target>
        </trans-unit>
        <trans-unit id="081c091a6c786d8f12d2331f77d81bc41674d111" translate="yes" xml:space="preserve">
          <source>RegexIterator::setFlags &amp;mdash; Sets the flags</source>
          <target state="translated">RegexIterator :: setFlags &amp;mdash;设置标志</target>
        </trans-unit>
        <trans-unit id="f2b06bf0a74538b964248da3e695aed3500503ff" translate="yes" xml:space="preserve">
          <source>RegexIterator::setFlags &amp;rarr;</source>
          <target state="translated">RegexIterator :: setFlags&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="ee4d9404d15b3e72156468af6527ec0461db095c" translate="yes" xml:space="preserve">
          <source>RegexIterator::setMode</source>
          <target state="translated">RegexIterator::setMode</target>
        </trans-unit>
        <trans-unit id="455d000bd88e29b8daec19aee92aaa5d9e2e1ed0" translate="yes" xml:space="preserve">
          <source>RegexIterator::setMode &amp;mdash; Sets the operation mode</source>
          <target state="translated">RegexIterator :: setMode-设置操作模式</target>
        </trans-unit>
        <trans-unit id="526180da88ac8aa959ef2568248151dd12d50397" translate="yes" xml:space="preserve">
          <source>RegexIterator::setMode &amp;rarr;</source>
          <target state="translated">RegexIterator :: setMode&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="3da8ca888699e1427ddef066de2350f0e2e67139" translate="yes" xml:space="preserve">
          <source>RegexIterator::setPregFlags</source>
          <target state="translated">RegexIterator::setPregFlags</target>
        </trans-unit>
        <trans-unit id="a005da762fabd65fd08d8edfc2c1b975515b9243" translate="yes" xml:space="preserve">
          <source>RegexIterator::setPregFlags &amp;mdash; Sets the regular expression flags</source>
          <target state="translated">RegexIterator :: setPregFlags &amp;mdash;设置正则表达式标志</target>
        </trans-unit>
        <trans-unit id="6a055069389d3092356dcfaca565842eecba31ad" translate="yes" xml:space="preserve">
          <source>RegexIterator::setPregFlags &amp;rarr;</source>
          <target state="translated">RegexIterator :: setPregFlags&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="3759f17efcaffeb4853107a340e10b0bf7aa56b5" translate="yes" xml:space="preserve">
          <source>Region subtag</source>
          <target state="translated">区域子标签</target>
        </trans-unit>
        <trans-unit id="91ae0f3718955cb5cc3cfe982d94bde813a74568" translate="yes" xml:space="preserve">
          <source>Register &lt;a href=&quot;function.session-write-close&quot;&gt;session_write_close()&lt;/a&gt; as a &lt;a href=&quot;function.register-shutdown-function&quot;&gt;register_shutdown_function()&lt;/a&gt; function.</source>
          <target state="translated">将&lt;a href=&quot;function.session-write-close&quot;&gt;session_write_close（）&lt;/a&gt;&lt;a href=&quot;function.register-shutdown-function&quot;&gt;注册&lt;/a&gt;为register_shutdown_function（）函数。</target>
        </trans-unit>
        <trans-unit id="67d77a9d74c83c84a7603bec77ca7c8081c396ec" translate="yes" xml:space="preserve">
          <source>Register a &lt;code&gt;callback&lt;/code&gt; function to allow cancellation during archive close.</source>
          <target state="translated">注册一个 &lt;code&gt;callback&lt;/code&gt; 函数以允许在归档关闭期间取消。</target>
        </trans-unit>
        <trans-unit id="0bd6c983f1ca12f5c0a6ef96de9ccc6f4890fae9" translate="yes" xml:space="preserve">
          <source>Register a &lt;code&gt;callback&lt;/code&gt; function to provide updates during archive close.</source>
          <target state="translated">注册一个 &lt;code&gt;callback&lt;/code&gt; 函数以在归档关闭期间提供更新。</target>
        </trans-unit>
        <trans-unit id="f148af88084d92112dd5983ae0d85560f2bcbc88" translate="yes" xml:space="preserve">
          <source>Register a PHP function to Lua as a function named &quot;$name&quot;</source>
          <target state="translated">将一个PHP函数注册到Lua中,作为一个名为&quot;$name &quot;的函数。</target>
        </trans-unit>
        <trans-unit id="083673fddb852177c936de6a6b7569d9077284c2" translate="yes" xml:space="preserve">
          <source>Register a RPC call, but won't sent it immediately, it will be send while further call to &lt;a href=&quot;yar-concurrent-client.loop&quot;&gt;Yar_Concurrent_Client::loop()&lt;/a&gt;</source>
          <target state="translated">注册RPC调用，但不会立即发送，它将在进一步调用&lt;a href=&quot;yar-concurrent-client.loop&quot;&gt;Yar_Concurrent_Client :: loop（）时发送&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="749ab375f93496fbb6a824f0081cd1619fa82683" translate="yes" xml:space="preserve">
          <source>Register a function with the spl provided __autoload queue. If the queue is not yet activated it will be activated.</source>
          <target state="translated">用spl提供的__autoload队列注册一个函数。如果队列还没有被激活,它将被激活。</target>
        </trans-unit>
        <trans-unit id="7d57b179d8a7bf6004f511dc7b8ab9f4e03993ad" translate="yes" xml:space="preserve">
          <source>Register a namespace with searching path, &lt;a href=&quot;class.yaf-loader&quot;&gt;Yaf_Loader&lt;/a&gt; searchs classes under this namespace in path, the one is also could be configureded via &lt;a href=&quot;https://www.php.net/manual/en/yaf.appconfig.php#configuration.yaf.library.namespace&quot;&gt; application.library.directory.namespace&lt;/a&gt;(in application.ini);</source>
          <target state="translated">用搜索路径注册一个名称空间，&lt;a href=&quot;class.yaf-loader&quot;&gt;Yaf_Loader&lt;/a&gt;在路径中搜索该名称空间下的类，也可以通过&lt;a href=&quot;https://www.php.net/manual/en/yaf.appconfig.php#configuration.yaf.library.namespace&quot;&gt;application.library.directory.namespace&lt;/a&gt;（在application.ini中）进行配置；</target>
        </trans-unit>
        <trans-unit id="4d2f0fce70fd2cd3907f3b94b1c16648d344afde" translate="yes" xml:space="preserve">
          <source>Register a plugin(see &lt;a href=&quot;class.yaf-plugin-abstract&quot;&gt;Yaf_Plugin_Abstract&lt;/a&gt;). Generally, we register plugins in Bootstrap(see &lt;a href=&quot;class.yaf-bootstrap-abstract&quot;&gt;Yaf_Bootstrap_Abstract&lt;/a&gt;).</source>
          <target state="translated">注册一个插件（请参阅&lt;a href=&quot;class.yaf-plugin-abstract&quot;&gt;Yaf_Plugin_Abstract&lt;/a&gt;）。通常，我们在Bootstrap中注册插件（请参见&lt;a href=&quot;class.yaf-bootstrap-abstract&quot;&gt;Yaf_Bootstrap_Abstract&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="45a8e27d358bf864279a96574f1a5a2d2cfc7b3c" translate="yes" xml:space="preserve">
          <source>Register local class prefix name, &lt;a href=&quot;class.yaf-loader&quot;&gt;Yaf_Loader&lt;/a&gt; search classes in two library directories, the one is configured via &lt;a href=&quot;https://secure.php.net/manual/en/yaf.appconfig.php#configuration.yaf.library&quot;&gt;application.library.directory&lt;/a&gt;(in application.ini) which is called local libraray directory; the other is configured via &lt;a href=&quot;https://secure.php.net/manual/en/yaf.configuration.php#ini.yaf.library&quot;&gt;yaf.library&lt;/a&gt; (in php.ini) which is callled global library directory, since it can be shared by many applications in the same server.</source>
          <target state="translated">在两个库目录中注册本地类前缀名称&lt;a href=&quot;class.yaf-loader&quot;&gt;Yaf_Loader&lt;/a&gt;搜索类，其中一个是通过&lt;a href=&quot;https://secure.php.net/manual/en/yaf.appconfig.php#configuration.yaf.library&quot;&gt;application.library.directory&lt;/a&gt;（在application.ini中）配置的，该目录称为本地libraray目录；另一个是通过&lt;a href=&quot;https://secure.php.net/manual/en/yaf.configuration.php#ini.yaf.library&quot;&gt;yaf.library&lt;/a&gt;（在php.ini中）配置的，该文件称为全局库目录，因为它可以被同一服务器中的许多应用程序共享。</target>
        </trans-unit>
        <trans-unit id="711665e50422a7c3497616e2aa87773534d06617" translate="yes" xml:space="preserve">
          <source>Register local class prefix name, &lt;a href=&quot;class.yaf-loader&quot;&gt;Yaf_Loader&lt;/a&gt; search classes in two library directories, the one is configured via &lt;a href=&quot;https://www.php.net/manual/en/yaf.appconfig.php#configuration.yaf.library&quot;&gt;application.library.directory&lt;/a&gt;(in application.ini) which is called local libraray directory; the other is configured via &lt;a href=&quot;https://www.php.net/manual/en/yaf.configuration.php#ini.yaf.library&quot;&gt;yaf.library&lt;/a&gt; (in php.ini) which is callled global library directory, since it can be shared by many applications in the same server.</source>
          <target state="translated">在两个库目录中注册本地类前缀名称&lt;a href=&quot;class.yaf-loader&quot;&gt;Yaf_Loader&lt;/a&gt;搜索类，其中一个是通过&lt;a href=&quot;https://www.php.net/manual/en/yaf.appconfig.php#configuration.yaf.library&quot;&gt;application.library.directory&lt;/a&gt;（在application.ini中）配置的，该目录称为本地libraray目录；另一个是通过&lt;a href=&quot;https://www.php.net/manual/en/yaf.configuration.php#ini.yaf.library&quot;&gt;yaf.library&lt;/a&gt;（在php.ini中）配置的，该文件称为全局库目录，因为它可以被同一服务器中的许多应用程序共享。</target>
        </trans-unit>
        <trans-unit id="d68adfa1274225c3ae452ddf430b2ac392728ee4" translate="yes" xml:space="preserve">
          <source>Register the PHP function &lt;a href=&quot;function.strnatcmp&quot;&gt;strnatcmp()&lt;/a&gt; as a collating sequence in the SQLite3 database.</source>
          <target state="translated">将PHP函数&lt;a href=&quot;function.strnatcmp&quot;&gt;strnatcmp（）&lt;/a&gt;注册为SQLite3数据库中的整理序列。</target>
        </trans-unit>
        <trans-unit id="4420371bc2696d96c3f8276cf2df7d698d3fec0e" translate="yes" xml:space="preserve">
          <source>Registers &lt;a href=&quot;function.session-write-close&quot;&gt;session_write_close()&lt;/a&gt; as a shutdown function.</source>
          <target state="translated">将&lt;a href=&quot;function.session-write-close&quot;&gt;session_write_close（）&lt;/a&gt;注册为关闭函数。</target>
        </trans-unit>
        <trans-unit id="eb68fd84aff717da6cb0525942df669ffa6d877d" translate="yes" xml:space="preserve">
          <source>Registers a &lt;code&gt;callback&lt;/code&gt; to be executed after script execution finishes or &lt;a href=&quot;function.exit&quot;&gt;exit()&lt;/a&gt; is called.</source>
          <target state="translated">在脚本执行完成或调用&lt;a href=&quot;function.exit&quot;&gt;exit（）&lt;/a&gt;之后注册要执行的 &lt;code&gt;callback&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3bb66414f5a0d57a668940f1a15151925506de45" translate="yes" xml:space="preserve">
          <source>Registers a PHP function or user-defined function for use as a collating function within SQL statements.</source>
          <target state="translated">注册一个PHP函数或用户定义的函数作为SQL语句的整理函数。</target>
        </trans-unit>
        <trans-unit id="2c0ef3c15efb9715424754065c29e072e0215d56" translate="yes" xml:space="preserve">
          <source>Registers a PHP function or user-defined function for use as an SQL aggregate function for use within SQL statements.</source>
          <target state="translated">注册一个PHP函数或用户定义的函数,作为SQL语句中的SQL聚合函数使用。</target>
        </trans-unit>
        <trans-unit id="94888f0c0d57889f452d40546d78789ea8d94927" translate="yes" xml:space="preserve">
          <source>Registers a PHP function or user-defined function for use as an SQL scalar function for use within SQL statements.</source>
          <target state="translated">注册一个PHP函数或用户定义的函数,作为SQL语句中的SQL标量函数使用。</target>
        </trans-unit>
        <trans-unit id="04b01a02e26573ab94d627219721c871678c756f" translate="yes" xml:space="preserve">
          <source>Registers a function name with the job server and specifies a callback corresponding to that function. Optionally specify extra application context data to be used when the callback is called and a timeout.</source>
          <target state="translated">向作业服务器注册一个函数名称,并指定与该函数对应的回调。可选择指定调用回调时要使用的额外应用程序上下文数据和超时。</target>
        </trans-unit>
        <trans-unit id="da7da976fc16198032777bcad01814c2f7b315c3" translate="yes" xml:space="preserve">
          <source>Registers a function name with the job server with an optional timeout. The timeout specifies how many seconds the server will wait before marking a job as failed. If the timeout is set to zero, there is no timeout.</source>
          <target state="translated">向作业服务器注册一个函数名,并提供一个可选的超时时间。超时指定服务器在将作业标记为失败之前将等待多少秒。如果超时设置为零,则没有超时。</target>
        </trans-unit>
        <trans-unit id="273ce419e84ebbc5f5c0ef4046bfb2213b6a21c0" translate="yes" xml:space="preserve">
          <source>Registers a function that will be called when PHP starts sending output.</source>
          <target state="translated">注册一个将在PHP开始发送输出时被调用的函数。</target>
        </trans-unit>
        <trans-unit id="cf1c9b58a5d8c8b1448ee4cd62ac64fbadd90889" translate="yes" xml:space="preserve">
          <source>Registers passed Javascript &lt;code&gt;script&lt;/code&gt; as extension to be used in &lt;a href=&quot;class.v8js&quot;&gt;V8Js&lt;/a&gt; contexts.</source>
          <target state="translated">将传递的Javascript &lt;code&gt;script&lt;/code&gt; 注册为扩展名，以在&lt;a href=&quot;class.v8js&quot;&gt;V8J&lt;/a&gt;上下文中使用。</target>
        </trans-unit>
        <trans-unit id="8e1dce2f2e4deacab6e1eb69e8f1a8f1903bd8d7" translate="yes" xml:space="preserve">
          <source>Registers the &lt;code&gt;namespaceURI&lt;/code&gt; and &lt;code&gt;prefix&lt;/code&gt; with the DOMXPath object.</source>
          <target state="translated">使用DOMXPath对象注册 &lt;code&gt;namespaceURI&lt;/code&gt; 和 &lt;code&gt;prefix&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0a1275f08d6ed1b764b2e782d4294af7df7bd6a2" translate="yes" xml:space="preserve">
          <source>Registers the given &lt;code&gt;function&lt;/code&gt; to be executed when a &lt;a href=&quot;control-structures.declare#control-structures.declare.ticks&quot;&gt;tick&lt;/a&gt; is called.</source>
          <target state="translated">注册调用&lt;a href=&quot;control-structures.declare#control-structures.declare.ticks&quot;&gt;滴答&lt;/a&gt;时要执行的给定 &lt;code&gt;function&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58b20d86830c383035e8a4807d4e6aa2732b8ca4" translate="yes" xml:space="preserve">
          <source>Registers to listen to a given destination.</source>
          <target state="translated">注册监听指定的目的地。</target>
        </trans-unit>
        <trans-unit id="a5398a94cf821e98c324f67b5e127500708fd8db" translate="yes" xml:space="preserve">
          <source>Regular expression used for token matching.</source>
          <target state="translated">用于标记匹配的正则表达式。</target>
        </trans-unit>
        <trans-unit id="92e81b4e9b09adaba6dd72de83d191e8a3cac720" translate="yes" xml:space="preserve">
          <source>Regular expression.</source>
          <target state="translated">正则表达式。</target>
        </trans-unit>
        <trans-unit id="4b2636339b518d7705edb897d5b78fb5e25b34b4" translate="yes" xml:space="preserve">
          <source>Reinitialises the array after being unserialised.</source>
          <target state="translated">在未序列化后重新初始化数组。</target>
        </trans-unit>
        <trans-unit id="81d80fcacf67b146f430e0c1b1bc5b5587ee710f" translate="yes" xml:space="preserve">
          <source>Rejected RFC 7159 incompatible number formats - top level (07, 0xff, .1, -.1) and all levels ([1.], [1.e1])</source>
          <target state="translated">拒绝接受RFC 7159不兼容的数字格式--最高级别(07,0xff,.1,-.1)和所有级别([1.],[1.e1])</target>
        </trans-unit>
        <trans-unit id="a71e64df2f3e9450e3efe6c00abecf16323445a1" translate="yes" xml:space="preserve">
          <source>Related channel</source>
          <target state="translated">相关频道</target>
        </trans-unit>
        <trans-unit id="ee688298deab70c0d34087b7891fc252c554e743" translate="yes" xml:space="preserve">
          <source>Relative file name like &lt;code&gt;foo.txt&lt;/code&gt;. This resolves to &lt;code&gt;currentdirectory/foo.txt&lt;/code&gt; where currentdirectory is the directory currently occupied. So if the current directory is &lt;code&gt;/home/foo&lt;/code&gt;, the name resolves to &lt;code&gt;/home/foo/foo.txt&lt;/code&gt;.</source>
          <target state="translated">相对文件名，如 &lt;code&gt;foo.txt&lt;/code&gt; 。这将解析为 &lt;code&gt;currentdirectory/foo.txt&lt;/code&gt; ，其中currentdirectory是当前占用的目录。因此，如果当前目录为 &lt;code&gt;/home/foo&lt;/code&gt; ，则名称解析为 &lt;code&gt;/home/foo/foo.txt&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7614bc75039e89db30825b7670c1e816cac803fa" translate="yes" xml:space="preserve">
          <source>Relative file name like &lt;em&gt;foo.txt&lt;/em&gt;. This resolves to &lt;em&gt;currentdirectory/foo.txt&lt;/em&gt; where currentdirectory is the directory currently occupied. So if the current directory is &lt;em&gt;/home/foo&lt;/em&gt;, the name resolves to &lt;em&gt;/home/foo/foo.txt&lt;/em&gt;.</source>
          <target state="translated">相对文件名，如&lt;em&gt;foo.txt&lt;/em&gt;。这将解析为&lt;em&gt;currentdirectory / foo.txt&lt;/em&gt;，其中currentdirectory是当前占用的目录。因此，如果当前目录为&lt;em&gt;/ home / foo&lt;/em&gt;，则名称解析为&lt;em&gt;/home/foo/foo.txt&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="afd503e17290cc1708bebd612031b4a1e12a2c60" translate="yes" xml:space="preserve">
          <source>Relative name</source>
          <target state="translated">相对名称</target>
        </trans-unit>
        <trans-unit id="fb9182ba42dc6ce02832d3948bb83a8b30aeb99e" translate="yes" xml:space="preserve">
          <source>Relative names always resolve to the name with &lt;code&gt;namespace&lt;/code&gt; replaced by the current namespace. If the name occurs in the global namespace, the &lt;code&gt;namespace\&lt;/code&gt; prefix is stripped. For example &lt;code&gt;namespace\A&lt;/code&gt; inside namespace &lt;code&gt;X\Y&lt;/code&gt; resolves to &lt;code&gt;X\Y\A&lt;/code&gt;. The same name inside the global namespace resolves to &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">相对名称始终解析为名称 &lt;code&gt;namespace&lt;/code&gt; 被当前名称空间替换的名称。如果名称出现在全局名称空间中，则将删除 &lt;code&gt;namespace\&lt;/code&gt; 前缀。例如 &lt;code&gt;namespace\A&lt;/code&gt; 的命名空间内 &lt;code&gt;X\Y&lt;/code&gt; 解析为 &lt;code&gt;X\Y\A&lt;/code&gt; 。全局命名空间内的相同名称解析为 &lt;code&gt;A&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75e18f65421cff7463f2d93b7c5212cfe974da5b" translate="yes" xml:space="preserve">
          <source>Relative names always resolve to the name with &lt;em&gt;namespace&lt;/em&gt; replaced by the current namespace. If the name occurs in the global namespace, the &lt;em&gt;namespace\&lt;/em&gt; prefix is stripped. For example &lt;em&gt;namespace\A&lt;/em&gt; inside namespace &lt;em&gt;X\Y&lt;/em&gt; resolves to &lt;em&gt;X\Y\A&lt;/em&gt;. The same name inside the global namespace resolves to &lt;em&gt;A&lt;/em&gt;.</source>
          <target state="translated">相对名称始终解析为名称&lt;em&gt;空间&lt;/em&gt;被当前名称&lt;em&gt;空间&lt;/em&gt;替换的名称。如果名称出现在全局名称空间中，则将删除&lt;em&gt;名称空间\&lt;/em&gt;前缀。例如&lt;em&gt;命名空间\ A&lt;/em&gt;的命名空间内&lt;em&gt;X \&amp;yacute;&lt;/em&gt;解析为&lt;em&gt;X \ Y \甲&lt;/em&gt;。全局命名空间内的相同名称解析为&lt;em&gt;一个&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="4bab1592217e20e5f06f9f9c52f743780bc68d75" translate="yes" xml:space="preserve">
          <source>Relative path name like &lt;code&gt;subdirectory/foo.txt&lt;/code&gt;. This resolves to &lt;code&gt;currentdirectory/subdirectory/foo.txt&lt;/code&gt;.</source>
          <target state="translated">相对路径名，例如 &lt;code&gt;subdirectory/foo.txt&lt;/code&gt; 。这解析为 &lt;code&gt;currentdirectory/subdirectory/foo.txt&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a42f27b68674484f9e9495f3eb2d8881ebb004d" translate="yes" xml:space="preserve">
          <source>Relative path name like &lt;em&gt;subdirectory/foo.txt&lt;/em&gt;. This resolves to &lt;em&gt;currentdirectory/subdirectory/foo.txt&lt;/em&gt;.</source>
          <target state="translated">相对路径名，例如&lt;em&gt;subdirectory / foo.txt&lt;/em&gt;。解析为&lt;em&gt;currentdirectory / subdirectory / foo.txt&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2733d9fbcf565e89c4428ca5449377a7f97bcb2a" translate="yes" xml:space="preserve">
          <source>Relative path within the phar archive to run if accessed on the command-line</source>
          <target state="translated">在命令行访问时,运行phar存档的相对路径。</target>
        </trans-unit>
        <trans-unit id="5e4168f18cc3811f3ce2458d2c77ee0ef58e5834" translate="yes" xml:space="preserve">
          <source>Relative path within the phar archive to run if accessed through a web browser</source>
          <target state="translated">通过网络浏览器访问时,在phar存档中运行的相对路径。</target>
        </trans-unit>
        <trans-unit id="cd3151dc620b176d76fb079d74f318c26f244d6a" translate="yes" xml:space="preserve">
          <source>Releases a previously acquired reference, potentially turning a strong reference back into a weak reference.</source>
          <target state="translated">释放之前获得的参照物,有可能将强参照物变回弱参照物。</target>
        </trans-unit>
        <trans-unit id="938689c4b05860c98315a34ea2aba851a94f2835" translate="yes" xml:space="preserve">
          <source>Releases a read lock on a SyncReaderWriter object.</source>
          <target state="translated">释放SyncReaderWriter对象的读锁。</target>
        </trans-unit>
        <trans-unit id="d90fc9fe0c609ff81b506f03d4324eeb6d6f45bb" translate="yes" xml:space="preserve">
          <source>Releases a write lock on a SyncReaderWriter object.</source>
          <target state="translated">释放SyncReaderWriter对象的写锁。</target>
        </trans-unit>
        <trans-unit id="e7ae1030acd6d708e22ea3c8005345a883fb3b0f" translate="yes" xml:space="preserve">
          <source>Releases an exclusive lock that was obtained on a given key by using &lt;a href=&quot;function.wincache-lock&quot;&gt;wincache_lock()&lt;/a&gt;. If any other process was blocked waiting for the lock on this key, that process will be able to obtain the lock.</source>
          <target state="translated">释放通过使用&lt;a href=&quot;function.wincache-lock&quot;&gt;wincache_lock（）&lt;/a&gt;在给定键上获得的排他锁。如果阻止了任何其他进程等待对此密钥的锁定，则该进程将能够获取该锁定。</target>
        </trans-unit>
        <trans-unit id="a352e3001fffa0307b1814dadca5b0d6e7e90c4c" translate="yes" xml:space="preserve">
          <source>Releases lock acquired by &lt;a href=&quot;eventbuffer.lock&quot;&gt;EventBuffer::lock()&lt;/a&gt; .</source>
          <target state="translated">释放由&lt;a href=&quot;eventbuffer.lock&quot;&gt;EventBuffer :: lock（）&lt;/a&gt;获取的锁。</target>
        </trans-unit>
        <trans-unit id="72fe8b93ef9e93ebfddb1914bb94b0c26ef3f9e4" translate="yes" xml:space="preserve">
          <source>Releases the shared memory corresponding to the given &lt;code&gt;info_id&lt;/code&gt;.</source>
          <target state="translated">释放与给定 &lt;code&gt;info_id&lt;/code&gt; 对应的共享内存。</target>
        </trans-unit>
        <trans-unit id="1871d77bb35324cf65ab3a4248e126aec0ef25ec" translate="yes" xml:space="preserve">
          <source>Relying on the default value of an uninitialized variable is problematic in the case of including one file into another which uses the same variable name. It is also a major &lt;a href=&quot;https://secure.php.net/manual/en/security.globals.php&quot;&gt;security risk&lt;/a&gt; with &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.register-globals&quot;&gt;register_globals&lt;/a&gt; turned on. &lt;a href=&quot;language.variables.basics&quot;&gt;E_NOTICE&lt;/a&gt; level error is issued in case of working with uninitialized variables, however not in the case of appending elements to the uninitialized array. &lt;a href=&quot;function.isset&quot;&gt;isset()&lt;/a&gt; language construct can be used to detect if a variable has been already initialized.</source>
          <target state="translated">在将一个文件包含在另一个使用相同变量名的文件中的情况下，依靠未初始化变量的默认值是有问题的。这也是一个重大的&lt;a href=&quot;https://secure.php.net/manual/en/security.globals.php&quot;&gt;安全风险&lt;/a&gt;与&lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.register-globals&quot;&gt;register_globals的&lt;/a&gt;开启。如果使用未初始化的变量，则会发出&lt;a href=&quot;language.variables.basics&quot;&gt;E_NOTICE&lt;/a&gt;级错误，但是如果将元素附加到未初始化的数组，则不会发生。&lt;a href=&quot;function.isset&quot;&gt;isset（）&lt;/a&gt;语言构造可用于检测变量是否已初始化。</target>
        </trans-unit>
        <trans-unit id="4cb808da901878a4a38e353102b2538575eead6a" translate="yes" xml:space="preserve">
          <source>Relying on the default value of an uninitialized variable is problematic in the case of including one file into another which uses the same variable name. It is also a major &lt;a href=&quot;https://www.php.net/manual/en/security.globals.php&quot;&gt;security risk&lt;/a&gt; with &lt;a href=&quot;https://www.php.net/manual/en/ini.core.php#ini.register-globals&quot;&gt;register_globals&lt;/a&gt; turned on. &lt;a href=&quot;language.variables.basics&quot;&gt;E_NOTICE&lt;/a&gt; level error is issued in case of working with uninitialized variables, however not in the case of appending elements to the uninitialized array. &lt;a href=&quot;function.isset&quot;&gt;isset()&lt;/a&gt; language construct can be used to detect if a variable has been already initialized.</source>
          <target state="translated">在将一个文件包含在另一个使用相同变量名的文件中的情况下，依靠未初始化变量的默认值是有问题的。这也是一个重大的&lt;a href=&quot;https://www.php.net/manual/en/security.globals.php&quot;&gt;安全风险&lt;/a&gt;与&lt;a href=&quot;https://www.php.net/manual/en/ini.core.php#ini.register-globals&quot;&gt;register_globals的&lt;/a&gt;开启。如果使用未初始化的变量，则会发出&lt;a href=&quot;language.variables.basics&quot;&gt;E_NOTICE&lt;/a&gt;级错误，但是如果将元素附加到未初始化的数组，则不会发出E_NOTICE级错误。&lt;a href=&quot;function.isset&quot;&gt;isset（）&lt;/a&gt;语言构造可用于检测变量是否已初始化。</target>
        </trans-unit>
        <trans-unit id="73f44b3ee3ef87aca40c154a87accb118fd574ce" translate="yes" xml:space="preserve">
          <source>Relying on the engine to determine when a Thread should join may cause undesirable behaviour; the programmer should be explicit, where possible.</source>
          <target state="translated">依靠引擎来决定一个Thread何时应该加入,可能会导致不理想的行为;在可能的情况下,程序员应该明确。</target>
        </trans-unit>
        <trans-unit id="57ea1711438576b53b796bc49c61536293467158" translate="yes" xml:space="preserve">
          <source>Remainder of &lt;var&gt;$a&lt;/var&gt; divided by &lt;var&gt;$b&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;$a&lt;/var&gt; 余数除以 &lt;var&gt;$b&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd497b521dc460b9cba0799231aa9aa2367fd70c" translate="yes" xml:space="preserve">
          <source>Remainder of &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; divided by &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; 余数除以 &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c2d880f635637ad35f7cdbc49f92470a05c8295" translate="yes" xml:space="preserve">
          <source>Remember basic arithmetic from school? These work just like those.</source>
          <target state="translated">还记得学校里的基本算术吗?这些工作就像那些。</target>
        </trans-unit>
        <trans-unit id="ecc0148deadbc95aacbb8f3fe63b14f929f346c8" translate="yes" xml:space="preserve">
          <source>Remember how much we wrote, and if we still have more data to write, wait for the connection to become writable again.</source>
          <target state="translated">记住我们写了多少,如果我们还有更多的数据要写,就等着连接再次变得可写。</target>
        </trans-unit>
        <trans-unit id="3be9e6ee38c48471cfd8c13243a4ba12472bb694" translate="yes" xml:space="preserve">
          <source>Remember that &lt;strong&gt;header()&lt;/strong&gt; must be called before any actual output is sent, either by normal HTML tags, blank lines in a file, or from PHP. It is a very common error to read code with &lt;a href=&quot;function.include&quot;&gt;include&lt;/a&gt;, or &lt;a href=&quot;function.require&quot;&gt;require&lt;/a&gt;, functions, or another file access function, and have spaces or empty lines that are output before &lt;strong&gt;header()&lt;/strong&gt; is called. The same problem exists when using a single PHP/HTML file.</source>
          <target state="translated">请记住，在发送任何实际输出之前，必须通过常规HTML标记，文件中的空白行或从PHP调用&lt;strong&gt;header（）&lt;/strong&gt;。读取&lt;a href=&quot;function.include&quot;&gt;包含include&lt;/a&gt;或&lt;a href=&quot;function.require&quot;&gt;require&lt;/a&gt;函数或另一个文件访问函数的代码，并在调用&lt;strong&gt;header（）&lt;/strong&gt;之前输出空格或空行是一个非常常见的错误。使用单个PHP / HTML文件时，存在相同的问题。</target>
        </trans-unit>
        <trans-unit id="ad5f27877b3c7a3c749a04f2aac893ccf8f27ba6" translate="yes" xml:space="preserve">
          <source>Remember that the timeout value is the maximum time that will elapse; &lt;strong&gt;stream_select()&lt;/strong&gt; will return as soon as the requested streams are ready for use.</source>
          <target state="translated">请记住，超时值是将要经过的最长时间。一旦请求的流准备就绪，&lt;strong&gt;stream_select（）&lt;/strong&gt;将返回。</target>
        </trans-unit>
        <trans-unit id="634f092b79c5e16677f3b2984cc9431a35ec3a10" translate="yes" xml:space="preserve">
          <source>Remember to check if the &lt;code&gt;mode&lt;/code&gt; is valid for the &lt;code&gt;path&lt;/code&gt; requested.</source>
          <target state="translated">切记要检查该 &lt;code&gt;mode&lt;/code&gt; 对于请求的 &lt;code&gt;path&lt;/code&gt; 是否有效。</target>
        </trans-unit>
        <trans-unit id="be91e15d0f9ff1df9b069f7f7efd48a8ab96aed7" translate="yes" xml:space="preserve">
          <source>Remember to update the current position of the stream by number of bytes that were successfully written.</source>
          <target state="translated">记得按成功写入的字节数更新流的当前位置。</target>
        </trans-unit>
        <trans-unit id="adb6131460aed7f69b9933ea20730c2628efa62d" translate="yes" xml:space="preserve">
          <source>Remember to update the read/write position of the stream (by the number of bytes that were successfully read).</source>
          <target state="translated">记得更新流的读/写位置(按成功读取的字节数)。</target>
        </trans-unit>
        <trans-unit id="a40499acaff68b8ec0089829af7a25df9d055fcf" translate="yes" xml:space="preserve">
          <source>Remember, the current calendar system being used worldwide is the Gregorian calendar. &lt;a href=&quot;function.gregoriantojd&quot;&gt;gregoriantojd()&lt;/a&gt; can be used to convert such dates to their Julian Day count.</source>
          <target state="translated">请记住，当前世界范围内使用的日历系统是公历。&lt;a href=&quot;function.gregoriantojd&quot;&gt;gregoriantojd（）&lt;/a&gt;可用于将此类日期转换为其儒略日计数。</target>
        </trans-unit>
        <trans-unit id="608455116ab8b9c5cdf6cf95a898707d42f9a25e" translate="yes" xml:space="preserve">
          <source>Remote RPC method name.</source>
          <target state="translated">远程RPC方法名称。</target>
        </trans-unit>
        <trans-unit id="5a147a10967b33161628ec3ba48e1695529b1174" translate="yes" xml:space="preserve">
          <source>Remote file may be processed at the remote server (depending on the file extension and the fact if the remote server runs PHP or not) but it still has to produce a valid PHP script because it will be processed at the local server. If the file from the remote server should be processed there and outputted only, &lt;a href=&quot;function.readfile&quot;&gt;readfile()&lt;/a&gt; is much better function to use. Otherwise, special care should be taken to secure the remote script to produce a valid and desired code.</source>
          <target state="translated">可以在远程服务器上处理远程文件（取决于文件扩展名和远程服务器是否运行PHP的事实），但是它仍必须生成有效的PHP脚本，因为它将在本地服务器上处理。如果来自远程服务器的文件应在此处进行处理并仅输出，则&lt;a href=&quot;function.readfile&quot;&gt;readfile（）&lt;/a&gt;是更好使用的函数。否则，应特别注意确保远程脚本的安全，以生成有效且所需的代码。</target>
        </trans-unit>
        <trans-unit id="3d5d98faeecf37e533a36569ad28892efafe68a9" translate="yes" xml:space="preserve">
          <source>Remote user name.</source>
          <target state="translated">远程用户名。</target>
        </trans-unit>
        <trans-unit id="90254536a57279814d9e5a07899d2767c1946b78" translate="yes" xml:space="preserve">
          <source>Remove all cached values</source>
          <target state="translated">删除所有缓存值</target>
        </trans-unit>
        <trans-unit id="012d68a23a831a27226c0f2bb29c1761d17f05b0" translate="yes" xml:space="preserve">
          <source>Remove all params set by router, or &lt;a href=&quot;yaf-request-abstract.setparam&quot;&gt;Yaf_Request_Abstract::setParam()&lt;/a&gt;</source>
          <target state="translated">删除路由器或&lt;a href=&quot;yaf-request-abstract.setparam&quot;&gt;Yaf_Request_Abstract :: setParam（）&lt;/a&gt;设置的所有参数</target>
        </trans-unit>
        <trans-unit id="f489078f0b88c5a96f96579666233f217a5d6022" translate="yes" xml:space="preserve">
          <source>Remove an item from registry</source>
          <target state="translated">从注册表中删除一个项目</target>
        </trans-unit>
        <trans-unit id="0b550acad9b9359360f24a19247ec195bb656d98" translate="yes" xml:space="preserve">
          <source>Remove edges that are the background color from the image.</source>
          <target state="translated">从图像中去除属于背景色的边缘。</target>
        </trans-unit>
        <trans-unit id="73edbf24830999dc89080c4eeb3606f82aac53df" translate="yes" xml:space="preserve">
          <source>Remove edges that are the background color from the image. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.</source>
          <target state="translated">从图像中删除背景色的边缘。如果Imagick是根据ImageMagick 6.2.9或更新的版本编译的,则此方法可用。</target>
        </trans-unit>
        <trans-unit id="7b201effaceae508fbc64b9a4026667688574501" translate="yes" xml:space="preserve">
          <source>Remove empty text nodes and merge adjacent text nodes in this node and all its children.</source>
          <target state="translated">删除空文本节点,并合并本节点及其所有子节点中相邻的文本节点。</target>
        </trans-unit>
        <trans-unit id="21e4860b30a6108d6825d7d11f0d018bd676eef3" translate="yes" xml:space="preserve">
          <source>Remove members.</source>
          <target state="translated">删除成员。</target>
        </trans-unit>
        <trans-unit id="eef707d4040834bae31961db66436cbd3bb2c6f4" translate="yes" xml:space="preserve">
          <source>Removed &lt;strong&gt;&lt;code&gt;CURLOPT_CLOSEPOLICY&lt;/code&gt;&lt;/strong&gt; and associated values.</source>
          <target state="translated">删除了&lt;strong&gt; &lt;code&gt;CURLOPT_CLOSEPOLICY&lt;/code&gt; &lt;/strong&gt;和关联的值。</target>
        </trans-unit>
        <trans-unit id="d20d82b1a90043d3e68f77b097059b251045abde" translate="yes" xml:space="preserve">
          <source>Removed in PHP 5.6.0.</source>
          <target state="translated">在PHP 5.6.0中删除。</target>
        </trans-unit>
        <trans-unit id="61694025c711368e5aa180b7b4833e1caab49bb7" translate="yes" xml:space="preserve">
          <source>Removed in cURL 7.15.5 (You can use CURLOPT_RETURNTRANSFER instead)</source>
          <target state="translated">在cURL 7.15.5中被移除(你可以使用CURLOPT_RETURNTRANSFER代替)。</target>
        </trans-unit>
        <trans-unit id="87b2650204e4e2eece28dd7662c8f8b1d1afd4d4" translate="yes" xml:space="preserve">
          <source>Removed the &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; that was emitted when URL parsing failed.</source>
          <target state="translated">删除了URL解析失败时发出的&lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="be7524b9c446bfc0cc79a9e360c3a67f317665d7" translate="yes" xml:space="preserve">
          <source>Removed the ability to pass in variables (e.g., &lt;em&gt;$num = 2; break $num;&lt;/em&gt;) as the numerical argument.</source>
          <target state="translated">删除了将变量（例如&lt;em&gt;$ num = 2; break $ num;&lt;/em&gt;）作为数值参数传递的功能。</target>
        </trans-unit>
        <trans-unit id="77010e8beb17d17df266a80eb535ea703688a7d9" translate="yes" xml:space="preserve">
          <source>Removed the ability to pass in variables (e.g., &lt;em&gt;$num = 2; continue $num;&lt;/em&gt;) as the numerical argument.</source>
          <target state="translated">删除了将变量（例如，&lt;em&gt;$ num = 2；继续$ num;&lt;/em&gt;）作为数值参数传递的功能。</target>
        </trans-unit>
        <trans-unit id="9b8cf7746b6455558e9f908d8ca58a9dc1c609cf" translate="yes" xml:space="preserve">
          <source>Removes (unsets) one or more options.</source>
          <target state="translated">删除(取消设置)一个或多个选项。</target>
        </trans-unit>
        <trans-unit id="d5cf0d4f44f0972ee2c20b2cb5f2c491e66ed2ce" translate="yes" xml:space="preserve">
          <source>Removes (unsets) one or more worker options.</source>
          <target state="translated">删除(取消设置)一个或多个工人选项。</target>
        </trans-unit>
        <trans-unit id="d995fda3187ef76757299c5d930c04a215ab89e0" translate="yes" xml:space="preserve">
          <source>Removes a Bigram Phrase Field (pf2 parameter) that was previously added using &lt;a href=&quot;solrdismaxquery.addbigramphrasefield&quot;&gt;SolrDisMaxQuery::addBigramPhraseField()&lt;/a&gt;</source>
          <target state="translated">删除以前使用&lt;a href=&quot;solrdismaxquery.addbigramphrasefield&quot;&gt;SolrDisMaxQuery :: addBigramPhraseField（）&lt;/a&gt;添加的Bigram短语字段（pf2参数）</target>
        </trans-unit>
        <trans-unit id="491b1aba30264b9ae7628119f31539a190e6f394" translate="yes" xml:space="preserve">
          <source>Removes a Phrase Field (pf parameter) that was previously added using SolrDisMaxQuery::addPhraseField</source>
          <target state="translated">删除之前使用SolrDisMaxQuery::addPhraseField添加的短语字段(pf参数)。</target>
        </trans-unit>
        <trans-unit id="0e1b11f191298d9fbf205a6e45218ffbfb0d3d2c" translate="yes" xml:space="preserve">
          <source>Removes a Query Field (qf parameter) from the field list added by &lt;a href=&quot;solrdismaxquery.addqueryfield&quot;&gt;SolrDisMaxQuery::addQueryField()&lt;/a&gt;</source>
          <target state="translated">从&lt;a href=&quot;solrdismaxquery.addqueryfield&quot;&gt;SolrDisMaxQuery :: addQueryField（）&lt;/a&gt;添加的字段列表中删除查询字段（qf参数）。</target>
        </trans-unit>
        <trans-unit id="06c3823de8a216327c5a7ebf30ff1b6517c6633e" translate="yes" xml:space="preserve">
          <source>Removes a Trigram Phrase Field (pf3 parameter)</source>
          <target state="translated">移除一个卦辞字段(pf3参数)。</target>
        </trans-unit>
        <trans-unit id="3a5e887a92dfcde3221fc9bca90c6775fadabcc0" translate="yes" xml:space="preserve">
          <source>Removes a boost query partial from the existing query, only if &lt;a href=&quot;solrdismaxquery.addboostquery&quot;&gt;SolrDisMaxQuery::addBoostQuery()&lt;/a&gt; was used.</source>
          <target state="translated">仅当使用&lt;a href=&quot;solrdismaxquery.addboostquery&quot;&gt;SolrDisMaxQuery :: addBoostQuery（）&lt;/a&gt;时，才从现有查询中删除部分提升查询。</target>
        </trans-unit>
        <trans-unit id="637c1f289ed05beb694f7ef1bf494dc8b3bee1c9" translate="yes" xml:space="preserve">
          <source>Removes a directory from the remote file server.</source>
          <target state="translated">从远程文件服务器上删除一个目录。</target>
        </trans-unit>
        <trans-unit id="e1d75b27fdbcdf6842b0ad67391e66bdcd252c92" translate="yes" xml:space="preserve">
          <source>Removes a field from The User Fields Parameter (uf)</source>
          <target state="translated">从用户字段参数(uf)中删除一个字段。</target>
        </trans-unit>
        <trans-unit id="8f4e49039893f5d0d9d7a6788fcc9fd8f1ffaa8b" translate="yes" xml:space="preserve">
          <source>Removes a field from the document when the field is access as an object property.</source>
          <target state="translated">当字段作为对象属性访问时,从文档中删除该字段。</target>
        </trans-unit>
        <trans-unit id="e5bbfb902c81969bd27d686411302ec37b47b9e3" translate="yes" xml:space="preserve">
          <source>Removes a field from the document.</source>
          <target state="translated">从文档中删除一个字段。</target>
        </trans-unit>
        <trans-unit id="37e6e92ae3d6a56a91a701af4dafe8885aef3641" translate="yes" xml:space="preserve">
          <source>Removes a field from the list of fields</source>
          <target state="translated">从字段列表中删除一个字段</target>
        </trans-unit>
        <trans-unit id="601df52baacca931785ddf22d7b59776c348f115" translate="yes" xml:space="preserve">
          <source>Removes a filter query.</source>
          <target state="translated">删除一个过滤器查询。</target>
        </trans-unit>
        <trans-unit id="4f7bec02242c0be29e1ab147df856c0682bb60b9" translate="yes" xml:space="preserve">
          <source>Removes a function from the autoload queue. If the queue is activated and empty after removing the given function then it will be deactivated.</source>
          <target state="translated">从自动加载队列中删除一个函数。如果删除指定函数后队列被激活且为空,那么它将被停用。</target>
        </trans-unit>
        <trans-unit id="0e446bb98fbb1a52af4f97b2ae0c8dae04ef5c26" translate="yes" xml:space="preserve">
          <source>Removes a given &lt;code&gt;ch&lt;/code&gt; handle from the given &lt;code&gt;mh&lt;/code&gt; handle. When the &lt;code&gt;ch&lt;/code&gt; handle has been removed, it is again perfectly legal to run &lt;a href=&quot;function.curl-exec&quot;&gt;curl_exec()&lt;/a&gt; on this handle. Removing the &lt;code&gt;ch&lt;/code&gt; handle while being used, will effectively halt the transfer in progress involving that handle.</source>
          <target state="translated">从给定的 &lt;code&gt;mh&lt;/code&gt; 手柄中删除给定的 &lt;code&gt;ch&lt;/code&gt; 手柄。当 &lt;code&gt;ch&lt;/code&gt; 手柄已被删除，这是一次完全合法的运行&lt;a href=&quot;function.curl-exec&quot;&gt;curl_exec（）&lt;/a&gt;这个句柄。在使用时删除 &lt;code&gt;ch&lt;/code&gt; 手柄将有效地停止涉及该手柄的正在进行的传输。</target>
        </trans-unit>
        <trans-unit id="039683c07ee12cb2cad3877dfca6e5d5f030b64d" translate="yes" xml:space="preserve">
          <source>Removes a given &lt;code&gt;handle&lt;/code&gt; handle from the given &lt;code&gt;multi_handle&lt;/code&gt; handle. When the &lt;code&gt;handle&lt;/code&gt; handle has been removed, it is again perfectly legal to run &lt;a href=&quot;function.curl-exec&quot;&gt;curl_exec()&lt;/a&gt; on this handle. Removing the &lt;code&gt;handle&lt;/code&gt; handle while being used, will effectively halt the transfer in progress involving that handle.</source>
          <target state="translated">删除一个给定的 &lt;code&gt;handle&lt;/code&gt; 从给定的手柄 &lt;code&gt;multi_handle&lt;/code&gt; 手柄。当 &lt;code&gt;handle&lt;/code&gt; 手柄已被删除，这是一次完全合法的运行&lt;a href=&quot;function.curl-exec&quot;&gt;curl_exec（）&lt;/a&gt;这个句柄。在 &lt;code&gt;handle&lt;/code&gt; 时取下手柄，将有效地停止涉及该手柄的正在进行的传送。</target>
        </trans-unit>
        <trans-unit id="9e62efb9cbc2706c074c83bddbbd2b721a3cab01" translate="yes" xml:space="preserve">
          <source>Removes a parameter, if set. This will make the processor use the default value for the parameter as specified in the stylesheet.</source>
          <target state="translated">如果设置了参数,则删除该参数。这将使处理器使用在样式表中指定的参数的默认值。</target>
        </trans-unit>
        <trans-unit id="0d54958badffb8c793fc7bfee588bd317281bc5f" translate="yes" xml:space="preserve">
          <source>Removes a phar archive from disk and memory.</source>
          <target state="translated">从磁盘和内存中删除一个phar存档。</target>
        </trans-unit>
        <trans-unit id="f740ed79eda7446e27561a80e34ce9ae57cb4ad6" translate="yes" xml:space="preserve">
          <source>Removes a previously installed callback handler and restores terminal settings.</source>
          <target state="translated">移除先前安装的回调处理程序并恢复终端设置。</target>
        </trans-unit>
        <trans-unit id="5fb3a2cd3c0879cb81f4093cd3506ee53b3188d4" translate="yes" xml:space="preserve">
          <source>Removes a region of an image and collapses the image to occupy the removed portion.</source>
          <target state="translated">移除图像的一个区域,并折叠图像以占据移除的部分。</target>
        </trans-unit>
        <trans-unit id="5894af0e7b0e2c0b1314e575e5089f2fff536e1b" translate="yes" xml:space="preserve">
          <source>Removes a required parameter.</source>
          <target state="translated">删除所需参数。</target>
        </trans-unit>
        <trans-unit id="91d014060f24a5feec65fe8798581d82ffdcbd51" translate="yes" xml:space="preserve">
          <source>Removes a stored variable from the cache.</source>
          <target state="translated">从缓存中删除一个存储的变量。</target>
        </trans-unit>
        <trans-unit id="2189060002721417abb5bbbdb9c1639205bfb7ce" translate="yes" xml:space="preserve">
          <source>Removes a stream filter previously added to a stream with &lt;a href=&quot;function.stream-filter-prepend&quot;&gt;stream_filter_prepend()&lt;/a&gt; or &lt;a href=&quot;function.stream-filter-append&quot;&gt;stream_filter_append()&lt;/a&gt;. Any data remaining in the filter's internal buffer will be flushed through to the next filter before removing it.</source>
          <target state="translated">删除以前使用&lt;a href=&quot;function.stream-filter-prepend&quot;&gt;stream_filter_prepend（）&lt;/a&gt;或&lt;a href=&quot;function.stream-filter-append&quot;&gt;stream_filter_append（）&lt;/a&gt;添加到流中的流过滤器。过滤器内部缓冲区中剩余的所有数据都将在清除之前清除到下一个过滤器。</target>
        </trans-unit>
        <trans-unit id="3d3b90494764ab5f46386a4abdacdf0aaea426df" translate="yes" xml:space="preserve">
          <source>Removes a variable with a given &lt;code&gt;key&lt;/code&gt; and frees the occupied memory.</source>
          <target state="translated">删除具有给定 &lt;code&gt;key&lt;/code&gt; 的变量并释放占用的内存。</target>
        </trans-unit>
        <trans-unit id="b9e626b91e75c11db492206b68a8c307a54912a5" translate="yes" xml:space="preserve">
          <source>Removes a variable with a given &lt;code&gt;variable_key&lt;/code&gt; and frees the occupied memory.</source>
          <target state="translated">使用给定的 &lt;code&gt;variable_key&lt;/code&gt; 删除变量，并释放占用的内存。</target>
        </trans-unit>
        <trans-unit id="e166124cd165221c7c671c158c371c7dc83c4934" translate="yes" xml:space="preserve">
          <source>Removes all current search suffixes from the DNS base; the &lt;a href=&quot;eventdnsbase.addsearch&quot;&gt;EventDnsBase::addSearch()&lt;/a&gt; function adds a suffix.</source>
          <target state="translated">从DNS库中删除所有当前的搜索后缀；在&lt;a href=&quot;eventdnsbase.addsearch&quot;&gt;EventDnsBase :: addSearch（）&lt;/a&gt;函数添加一个后缀。</target>
        </trans-unit>
        <trans-unit id="1a4ab39cf7ae631cffa8225452f14f4956bb1308" translate="yes" xml:space="preserve">
          <source>Removes all documents matching any of the queries</source>
          <target state="translated">删除所有与任何查询匹配的文件</target>
        </trans-unit>
        <trans-unit id="c8f06ff8eae3edee0e3e8a457f2fc0d1cfe100ca" translate="yes" xml:space="preserve">
          <source>Removes all given &lt;code&gt;values&lt;/code&gt; from the set, ignoring any that are not in the set.</source>
          <target state="translated">从集合中删除所有给定的 &lt;code&gt;values&lt;/code&gt; ，而忽略集合中未包含的所有值。</target>
        </trans-unit>
        <trans-unit id="04819e2e3260f7c650305201fdbb0e92d8c8530f" translate="yes" xml:space="preserve">
          <source>Removes all objects except for those contained in another storage from the current storage.</source>
          <target state="translated">从当前存储中删除除另一个存储中的对象以外的所有对象。</target>
        </trans-unit>
        <trans-unit id="60301002d3690eb35260d450cb34e846c75faf39" translate="yes" xml:space="preserve">
          <source>Removes all output headers from the header list of the request.</source>
          <target state="translated">从请求的头列表中删除所有输出头。</target>
        </trans-unit>
        <trans-unit id="8acc361e0b01b0f8961450fb271b723a3a7a5a30" translate="yes" xml:space="preserve">
          <source>Removes all values from the collection.</source>
          <target state="translated">从集合中删除所有值。</target>
        </trans-unit>
        <trans-unit id="219ffa1d78a70052d4b3d13c3480954488ada71e" translate="yes" xml:space="preserve">
          <source>Removes all values from the deque.</source>
          <target state="translated">删除deque中的所有值。</target>
        </trans-unit>
        <trans-unit id="128a43fed116fdc47676a5c3cf9c4bba8d1bc327" translate="yes" xml:space="preserve">
          <source>Removes all values from the map.</source>
          <target state="translated">删除地图上的所有数值。</target>
        </trans-unit>
        <trans-unit id="17369a2d38d62eda0f4bb85cadbb50bd44bc1b89" translate="yes" xml:space="preserve">
          <source>Removes all values from the pair.</source>
          <target state="translated">删除该对的所有值。</target>
        </trans-unit>
        <trans-unit id="ed107ef4cff633a007bcd4c73b7041e76d23d2d4" translate="yes" xml:space="preserve">
          <source>Removes all values from the queue.</source>
          <target state="translated">从队列中删除所有值。</target>
        </trans-unit>
        <trans-unit id="492a6a27586fe8bd02e3ae00554e62998a92c517" translate="yes" xml:space="preserve">
          <source>Removes all values from the set.</source>
          <target state="translated">删除集合中的所有值。</target>
        </trans-unit>
        <trans-unit id="d8969cec5cda7429e629b73b72fd97858e9058b4" translate="yes" xml:space="preserve">
          <source>Removes all values from the stack.</source>
          <target state="translated">移除堆栈中的所有值。</target>
        </trans-unit>
        <trans-unit id="4938a08f3ca5e395f6d5fb2d3fc9520ef97ccf36" translate="yes" xml:space="preserve">
          <source>Removes all values from the vector.</source>
          <target state="translated">删除向量中的所有值。</target>
        </trans-unit>
        <trans-unit id="2f92ffebfab73829d2955d13e4b328edf3d868b2" translate="yes" xml:space="preserve">
          <source>Removes an &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; from the storage.</source>
          <target state="translated">从存储中删除&lt;a href=&quot;language.types.object&quot;&gt;对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9cc67dca197e286500d1ea25ef3331e254b8dc63" translate="yes" xml:space="preserve">
          <source>Removes an HTTP header from the headers of the request.</source>
          <target state="translated">从请求的头中删除HTTP头。</target>
        </trans-unit>
        <trans-unit id="2ee302c6bcb802431696c9faa7fff72c28be7246" translate="yes" xml:space="preserve">
          <source>Removes an HTTP header previously set using &lt;a href=&quot;function.header&quot;&gt;header()&lt;/a&gt;.</source>
          <target state="translated">删除先前使用&lt;a href=&quot;function.header&quot;&gt;header（）&lt;/a&gt;设置的HTTP标头。</target>
        </trans-unit>
        <trans-unit id="c59f9d6c0ec01eef1794514a6a390efa810f9d2f" translate="yes" xml:space="preserve">
          <source>Removes an authorized publickey.</source>
          <target state="translated">删除一个授权的公钥。</target>
        </trans-unit>
        <trans-unit id="c6ad15f3912fa98762a2d35d09245ef6c8dc30ef" translate="yes" xml:space="preserve">
          <source>Removes an entry from the map.</source>
          <target state="translated">从地图中删除一个条目。</target>
        </trans-unit>
        <trans-unit id="17db5dece7b72e330986951c7193b998cd5c19f6" translate="yes" xml:space="preserve">
          <source>Removes an event from the set of monitored events, i.e. makes it non-pending.</source>
          <target state="translated">将一个事件从监控的事件集中删除,即使其成为非待处理事件。</target>
        </trans-unit>
        <trans-unit id="a41301e7c6ec06780c77184f07fbd45f6ed59ce3" translate="yes" xml:space="preserve">
          <source>Removes an existing subscription.</source>
          <target state="translated">删除现有的订阅。</target>
        </trans-unit>
        <trans-unit id="de82df7378a3deab4487da6a9edee5d529a5eedc" translate="yes" xml:space="preserve">
          <source>Removes an expand filter query.</source>
          <target state="translated">删除扩展过滤器查询。</target>
        </trans-unit>
        <trans-unit id="464f6b334636f9c3a596a3cb238f392ba69a78e6" translate="yes" xml:space="preserve">
          <source>Removes an expand sort field from the expand.sort parameter.</source>
          <target state="translated">从expand.sort参数中删除一个展开排序字段。</target>
        </trans-unit>
        <trans-unit id="a3a6dfd768b0475e704d1b2af25a559a171dbbd4" translate="yes" xml:space="preserve">
          <source>Removes an image from the image list.</source>
          <target state="translated">从图像列表中删除图像。</target>
        </trans-unit>
        <trans-unit id="c58bf0d9d6e0e452a9ee4b0c6abc35c20a6cd972" translate="yes" xml:space="preserve">
          <source>Removes an object from the storage.</source>
          <target state="translated">从存储中删除一个对象。</target>
        </trans-unit>
        <trans-unit id="b554f0c8fdbf8d1182b5892f258b7c265e20863b" translate="yes" xml:space="preserve">
          <source>Removes and returns a value by index.</source>
          <target state="translated">删除并按索引返回一个值。</target>
        </trans-unit>
        <trans-unit id="a98876e992d129c1135eda12b7dd3a7e0be109d9" translate="yes" xml:space="preserve">
          <source>Removes and returns a value by key, or return an optional default value if the key could not be found.</source>
          <target state="translated">按键删除并返回一个值,如果找不到键,则返回一个可选的默认值。</target>
        </trans-unit>
        <trans-unit id="519ada66baf72bf53c831e5f4bd39af80478e518" translate="yes" xml:space="preserve">
          <source>Removes and returns the first value.</source>
          <target state="translated">删除并返回第一个值。</target>
        </trans-unit>
        <trans-unit id="d961dce6cfb98a8b661d5280c748a35e035fa801" translate="yes" xml:space="preserve">
          <source>Removes and returns the last value.</source>
          <target state="translated">删除并返回最后一个值。</target>
        </trans-unit>
        <trans-unit id="cf01d2662be50aa7ca742b26514690506b845486" translate="yes" xml:space="preserve">
          <source>Removes and returns the value at the front of the queue, ie. the value with the highest priority.</source>
          <target state="translated">移除并返回队列前面的值,即具有最高优先级的值。</target>
        </trans-unit>
        <trans-unit id="2ca9d573a8d70480daee6d332802c5ccf98b127d" translate="yes" xml:space="preserve">
          <source>Removes and returns the value at the front of the queue.</source>
          <target state="translated">移除并返回队列前面的值。</target>
        </trans-unit>
        <trans-unit id="2b247217465f4a2edfb1d3009b40f906084372ce" translate="yes" xml:space="preserve">
          <source>Removes and returns the value at the top of the stack.</source>
          <target state="translated">移除并返回堆栈顶部的值。</target>
        </trans-unit>
        <trans-unit id="4fed437b97d5d8cc100d8299e3ca08eac08b6a47" translate="yes" xml:space="preserve">
          <source>Removes attribute &lt;code&gt;localName&lt;/code&gt; in namespace &lt;code&gt;namespaceURI&lt;/code&gt; from the element.</source>
          <target state="translated">从元素中删除名称 &lt;code&gt;namespaceURI&lt;/code&gt; 属性 &lt;code&gt;localName&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4146db0519f7ed941bd586a640bc57c529c7ca4" translate="yes" xml:space="preserve">
          <source>Removes attribute &lt;code&gt;oldnode&lt;/code&gt; from the element.</source>
          <target state="translated">从元素中删除属性 &lt;code&gt;oldnode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7c808b11115a97a2b583cb159a7fba4b2af463b7" translate="yes" xml:space="preserve">
          <source>Removes attribute named &lt;code&gt;name&lt;/code&gt; from the element.</source>
          <target state="translated">从元素中删除名为 &lt;code&gt;name&lt;/code&gt; 的属性。</target>
        </trans-unit>
        <trans-unit id="2c7738ec27932c14fb1b268e0dcfa17f2f8406a6" translate="yes" xml:space="preserve">
          <source>Removes event from the list of events monitored by libevent, and free resources allocated for the event.</source>
          <target state="translated">从libevent监控的事件列表中删除事件,并为该事件分配空闲资源。</target>
        </trans-unit>
        <trans-unit id="ad70272b6d3b88e76d2a2ec1f0ae4d58a10df87f" translate="yes" xml:space="preserve">
          <source>Removes objects contained in another storage from the current storage.</source>
          <target state="translated">从当前存储中删除另一个存储中的对象。</target>
        </trans-unit>
        <trans-unit id="fd1ca28ce233eb7e2a73c8affcfa7a2d3a5d22c8" translate="yes" xml:space="preserve">
          <source>Removes one of the facet.date parameters</source>
          <target state="translated">删除其中一个facet.date参数。</target>
        </trans-unit>
        <trans-unit id="bae1a48b3232c2168a89311d71f43e67f2b07146" translate="yes" xml:space="preserve">
          <source>Removes one of the facet.date.other parameters</source>
          <target state="translated">删除其中一个facet.date.other参数。</target>
        </trans-unit>
        <trans-unit id="6379d54444532209ce1b3a742daade5dcebd43c2" translate="yes" xml:space="preserve">
          <source>Removes one of the facet.query parameters.</source>
          <target state="translated">删除其中一个facet.query参数。</target>
        </trans-unit>
        <trans-unit id="56a5e21d347f6dd9186c4c8b36ca974d2d3ca722" translate="yes" xml:space="preserve">
          <source>Removes one of the fields used for highlighting.</source>
          <target state="translated">删除其中一个用于高亮的字段。</target>
        </trans-unit>
        <trans-unit id="f5b65ce5d450a2427e3cf06c427b4c1bd788031d" translate="yes" xml:space="preserve">
          <source>Removes one of the moreLikeThis fields.</source>
          <target state="translated">删除其中一个 &quot;更喜欢这个 &quot;字段。</target>
        </trans-unit>
        <trans-unit id="629707e7faf3de8c888db3c0cb23c72e38a22c95" translate="yes" xml:space="preserve">
          <source>Removes one of the moreLikeThis query fields.</source>
          <target state="translated">删除其中一个moreLikeThis查询字段。</target>
        </trans-unit>
        <trans-unit id="1bdf145b3cb2a16d25aa238cbe44e59cc4c76515" translate="yes" xml:space="preserve">
          <source>Removes one of the sort fields</source>
          <target state="translated">删除其中一个排序字段</target>
        </trans-unit>
        <trans-unit id="d221fcdea55ec93883ff2f80e1a2e1289ca89e83" translate="yes" xml:space="preserve">
          <source>Removes one of the stats.facet parameters</source>
          <target state="translated">删除其中一个stats.facet参数。</target>
        </trans-unit>
        <trans-unit id="34d2c89ea76675d7e494d3beff1b17279f58d6e8" translate="yes" xml:space="preserve">
          <source>Removes one of the stats.field parameters</source>
          <target state="translated">删除其中一个stats.field参数。</target>
        </trans-unit>
        <trans-unit id="3e8259cf88126745e8f5114527742e19cfa62a2c" translate="yes" xml:space="preserve">
          <source>Removes one or more attribute values from the specified &lt;code&gt;dn&lt;/code&gt;. Object deletions are done by the &lt;a href=&quot;function.ldap-delete&quot;&gt;ldap_delete()&lt;/a&gt; function.</source>
          <target state="translated">从指定的 &lt;code&gt;dn&lt;/code&gt; 中删除一个或多个属性值。对象删除是通过&lt;a href=&quot;function.ldap-delete&quot;&gt;ldap_delete（）&lt;/a&gt;函数完成的。</target>
        </trans-unit>
        <trans-unit id="c7ec065f031cfa7d5ea947a36bdd8656db054435" translate="yes" xml:space="preserve">
          <source>Removes server alias added with &lt;a href=&quot;eventhttp.addserveralias&quot;&gt;EventHttp::addServerAlias()&lt;/a&gt;</source>
          <target state="translated">删除通过&lt;a href=&quot;eventhttp.addserveralias&quot;&gt;EventHttp :: addServerAlias（）&lt;/a&gt;添加的服务器别名</target>
        </trans-unit>
        <trans-unit id="8dd58bc028655bdaca820629cc6fcac9c9c9d182" translate="yes" xml:space="preserve">
          <source>Removes the &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; from the storage.</source>
          <target state="translated">从存储中删除&lt;a href=&quot;language.types.object&quot;&gt;对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b8ca9a4305f4852f771aa990b258b10f2f2208f5" translate="yes" xml:space="preserve">
          <source>Removes the constant at runtime</source>
          <target state="translated">在运行时删除常量</target>
        </trans-unit>
        <trans-unit id="9d45b108fc890cdee59e877a0e3d0ad93998d821" translate="yes" xml:space="preserve">
          <source>Removes the deletion flag for a specified message, which is set by &lt;a href=&quot;function.imap-delete&quot;&gt;imap_delete()&lt;/a&gt; or &lt;a href=&quot;function.imap-mail-move&quot;&gt;imap_mail_move()&lt;/a&gt;.</source>
          <target state="translated">删除指定消息的删除标志，该标志由&lt;a href=&quot;function.imap-delete&quot;&gt;imap_delete（）&lt;/a&gt;或&lt;a href=&quot;function.imap-mail-move&quot;&gt;imap_mail_move（）设置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0ab2c44de278dc5931f23ddecff3e1bbe9b8254c" translate="yes" xml:space="preserve">
          <source>Removes the elements designated by &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; from the &lt;code&gt;array&lt;/code&gt; array, and replaces them with the elements of the &lt;code&gt;replacement&lt;/code&gt; array, if supplied.</source>
          <target state="translated">从 &lt;code&gt;array&lt;/code&gt; 数组中删除由 &lt;code&gt;offset&lt;/code&gt; 和 &lt;code&gt;length&lt;/code&gt; 指定的元素，并用 &lt;code&gt;replacement&lt;/code&gt; 数组的元素（如果提供）替换它们。</target>
        </trans-unit>
        <trans-unit id="e11e772850794f62ced23c509940a3404edf42ff" translate="yes" xml:space="preserve">
          <source>Removes the elements designated by &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; from the &lt;code&gt;input&lt;/code&gt; array, and replaces them with the elements of the &lt;code&gt;replacement&lt;/code&gt; array, if supplied.</source>
          <target state="translated">从 &lt;code&gt;input&lt;/code&gt; 数组中删除由 &lt;code&gt;offset&lt;/code&gt; 和 &lt;code&gt;length&lt;/code&gt; 指定的元素，并用 &lt;code&gt;replacement&lt;/code&gt; 数组的元素（如果提供）替换它们。</target>
        </trans-unit>
        <trans-unit id="d6c1d382441bb81f860b3c0c9631a6fc0788eb2e" translate="yes" xml:space="preserve">
          <source>Removes the first task (the oldest one) in the stack.</source>
          <target state="translated">删除堆栈中的第一个任务(最老的一个)。</target>
        </trans-unit>
        <trans-unit id="6c9b3510d9c84e6d9fabe042df0205b01b359c6e" translate="yes" xml:space="preserve">
          <source>Removes the named image profile and returns it.</source>
          <target state="translated">删除已命名的图像配置文件并将其返回。</target>
        </trans-unit>
        <trans-unit id="50d0ee9a59560cb07b6f2e382f044385f9f4ef23" translate="yes" xml:space="preserve">
          <source>Removes the object from the storage.</source>
          <target state="translated">从存储中删除对象。</target>
        </trans-unit>
        <trans-unit id="89302786342c337d5e186ff1dd3f3496c4279325" translate="yes" xml:space="preserve">
          <source>Removes the previously set hook on a function or method.</source>
          <target state="translated">移除之前在函数或方法上设置的钩子。</target>
        </trans-unit>
        <trans-unit id="431fbddfa39754fe946dcb8f7d1f126d91eccd68" translate="yes" xml:space="preserve">
          <source>Removes the specified &lt;code&gt;directory&lt;/code&gt; on the FTP server.</source>
          <target state="translated">删除FTP服务器上的指定 &lt;code&gt;directory&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="95f8bdb757d6f05a96e2e59c7d14e139f4b2a1fa" translate="yes" xml:space="preserve">
          <source>Removes up to &lt;code&gt;size&lt;/code&gt; bytes from the input buffer. Returns a string of data read from the input buffer.</source>
          <target state="translated">从输入缓冲区中删除最大 &lt;code&gt;size&lt;/code&gt; 字节的字节。返回从输入缓冲区读取的数据字符串。</target>
        </trans-unit>
        <trans-unit id="1d0e52e78babaa7edc73c112202a105ae63a9283" translate="yes" xml:space="preserve">
          <source>Renamed &lt;strong&gt;EventBuffer::appendFrom()&lt;/strong&gt;(the old method name) to &lt;strong&gt;EventBuffer::appendFrom()&lt;/strong&gt;.</source>
          <target state="translated">将&lt;strong&gt;EventBuffer :: appendFrom（）&lt;/strong&gt;（旧方法名称）重命名为&lt;strong&gt;EventBuffer :: appendFrom（）&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="692d397fc987b469cc405a8ea323e741b9acf744" translate="yes" xml:space="preserve">
          <source>Renamed &lt;strong&gt;EventBuffer::read()&lt;/strong&gt;(the old method name) to &lt;strong&gt;EventBuffer::read()&lt;/strong&gt;. &lt;strong&gt;EventBuffer::read()&lt;/strong&gt; now takes only &lt;code&gt;max_bytes&lt;/code&gt; argument; returns string instead of integer.</source>
          <target state="translated">将&lt;strong&gt;EventBuffer :: read（）&lt;/strong&gt;（旧方法名称）重命名为&lt;strong&gt;EventBuffer :: read（）&lt;/strong&gt;。&lt;strong&gt;EventBuffer :: read（）&lt;/strong&gt;现在仅接受 &lt;code&gt;max_bytes&lt;/code&gt; 参数；返回字符串而不是整数。</target>
        </trans-unit>
        <trans-unit id="ee260182f48847117ebbb7ff35f5ad21d1332d99" translate="yes" xml:space="preserve">
          <source>Renames &lt;code&gt;function&lt;/code&gt; to &lt;code&gt;rename&lt;/code&gt;</source>
          <target state="translated">重命名 &lt;code&gt;function&lt;/code&gt; 以 &lt;code&gt;rename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ad1639d2625d7e170608297ce19c36c7c201fff" translate="yes" xml:space="preserve">
          <source>Renames a file on the remote filesystem.</source>
          <target state="translated">重命名远程文件系统中的文件。</target>
        </trans-unit>
        <trans-unit id="d3149b571ccd9c35ab80f637579cb5678b486728" translate="yes" xml:space="preserve">
          <source>Renames an entry defined by its index.</source>
          <target state="translated">重命名一个由其索引定义的条目。</target>
        </trans-unit>
        <trans-unit id="1d8d1dc98dca7455da1a9963b515a14fbb0295e1" translate="yes" xml:space="preserve">
          <source>Renames an entry defined by its name.</source>
          <target state="translated">重新命名一个由其名称定义的条目。</target>
        </trans-unit>
        <trans-unit id="2741438c4bdc84279ef6908c5ad510b7d9520c10" translate="yes" xml:space="preserve">
          <source>Render a string tempalte and return the result.</source>
          <target state="translated">渲染一个字符串tempalte并返回结果。</target>
        </trans-unit>
        <trans-unit id="11e4a6f5c29854c1d2e90505c3260e5dfb030bac" translate="yes" xml:space="preserve">
          <source>Render a template and display the result instantly.</source>
          <target state="translated">渲染一个模板并即时显示结果。</target>
        </trans-unit>
        <trans-unit id="fc2484287e754d0c9e7bad61d489934689b6d01c" translate="yes" xml:space="preserve">
          <source>Render a template and output the result immediatly.</source>
          <target state="translated">渲染一个模板并立即输出结果。</target>
        </trans-unit>
        <trans-unit id="befcd2026be604ed6ea1f6d90f8202d17022e762" translate="yes" xml:space="preserve">
          <source>Render a template and return the result.</source>
          <target state="translated">渲染一个模板并返回结果。</target>
        </trans-unit>
        <trans-unit id="a6bebf2c79e105f2d7e325ad0ecff35b916cdcce" translate="yes" xml:space="preserve">
          <source>Renders all preceding drawing commands onto the image.</source>
          <target state="translated">将前面所有的绘图命令渲染到图像上。</target>
        </trans-unit>
        <trans-unit id="f81904a7c7f49fb17ae832e63b483d06a07c8275" translate="yes" xml:space="preserve">
          <source>Renders all preceding drawing commands.</source>
          <target state="translated">渲染所有前面的绘图命令。</target>
        </trans-unit>
        <trans-unit id="47e001d41ae3c85e7dd1834d159646982880a575" translate="yes" xml:space="preserve">
          <source>Renders the GmagickDraw object on the current image</source>
          <target state="translated">渲染当前图像上的GmagickDraw对象。</target>
        </trans-unit>
        <trans-unit id="98b22f9c3ec5d9013234c38e9e5100ab6a5a9926" translate="yes" xml:space="preserve">
          <source>Renders the ImagickDraw object on the current image.</source>
          <target state="translated">在当前图像上渲染ImagickDraw对象。</target>
        </trans-unit>
        <trans-unit id="203b99b7855b2d8b2c23bb3d6a0db4734d3759a8" translate="yes" xml:space="preserve">
          <source>Reopens the specified stream to a new &lt;code&gt;mailbox&lt;/code&gt; on an</source>
          <target state="translated">将指定的流重新打开到服务器上的新 &lt;code&gt;mailbox&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="199cdeab9ac5342f02846a95471e1ede6f5f9828" translate="yes" xml:space="preserve">
          <source>Repairs the given file and returns it as a string.</source>
          <target state="translated">修复给定文件并以字符串形式返回。</target>
        </trans-unit>
        <trans-unit id="6493ebe4d89ae27c8fa12b87b648b7cf9d9ae8d4" translate="yes" xml:space="preserve">
          <source>Repairs the given string.</source>
          <target state="translated">修复给定的字符串。</target>
        </trans-unit>
        <trans-unit id="621a591a1e73807e8ddd21662765f2d7dded323d" translate="yes" xml:space="preserve">
          <source>Repeated calls to this function will return a new result each time, until a &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; is returned as a signal that there is no more to get at this point. The integer pointed to with &lt;code&gt;msgs_in_queue&lt;/code&gt; will contain the number of remaining messages after this function was called.</source>
          <target state="translated">每次重复调用此函数都会返回一个新结果，直到返回&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;作为信号，表明此时不再有可用的值。 &lt;code&gt;msgs_in_queue&lt;/code&gt; 指向的整数将包含调用此函数后剩余的消息数。</target>
        </trans-unit>
        <trans-unit id="52dbb4bb17da53a879773a5a67e59b97b275c1a4" translate="yes" xml:space="preserve">
          <source>Repeated calls to this function will return a new result each time, until a &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; is returned as a signal that there is no more to get at this point. The integer pointed to with &lt;code&gt;queued_messages&lt;/code&gt; will contain the number of remaining messages after this function was called.</source>
          <target state="translated">每次重复调用此函数都会返回一个新结果，直到返回&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;为止，表示此时没有更多结果。用 &lt;code&gt;queued_messages&lt;/code&gt; 指向的整数将包含调用此函数后剩余的消息数。</target>
        </trans-unit>
        <trans-unit id="50a55e781fc38744a10b24a6ec6894ca6eb67d8f" translate="yes" xml:space="preserve">
          <source>Repeatedly tiles the texture image across and down the image canvas.</source>
          <target state="translated">在图像画布上反复地将纹理图像在图像画布上上下移动。</target>
        </trans-unit>
        <trans-unit id="711ba373a79d31376784182b72065d953222072d" translate="yes" xml:space="preserve">
          <source>Repetition</source>
          <target state="translated">Repetition</target>
        </trans-unit>
        <trans-unit id="9b15a358411c7013f05784069c956f6d49f3a517" translate="yes" xml:space="preserve">
          <source>Repetition &amp;rarr;</source>
          <target state="translated">重复&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="a172a0f5c387a5e46c31a43f2cefffb22c95831f" translate="yes" xml:space="preserve">
          <source>Repetition is specified by quantifiers, which can follow any of the following items:</source>
          <target state="translated">重复是由量化符指定的,量化符可以跟在以下任何一项后面:</target>
        </trans-unit>
        <trans-unit id="076eb786f25c0b6741ab7bd6c07dda0c8bb91d6f" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;count&lt;/code&gt; characters starting from position &lt;code&gt;offset&lt;/code&gt; with &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="translated">从位置 &lt;code&gt;offset&lt;/code&gt; 开始的 &lt;code&gt;count&lt;/code&gt; 字符替换为 &lt;code&gt;data&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3409b0b65af6815c6a574452f277970b36946acc" translate="yes" xml:space="preserve">
          <source>Replace colors in the image from a color lookup table.</source>
          <target state="translated">从颜色查找表中替换图像中的颜色。</target>
        </trans-unit>
        <trans-unit id="1a59486c3834fa45c8f7d90d697aa9c58c392c6a" translate="yes" xml:space="preserve">
          <source>Replace each pixel with corresponding statistic from the neighborhood of the specified width and height.</source>
          <target state="translated">从指定的宽度和高度的邻域中用相应的统计量替换每个像素。</target>
        </trans-unit>
        <trans-unit id="d67ec6433998e1d659f02d2003aa9abf80840008" translate="yes" xml:space="preserve">
          <source>Replace file in ZIP archive with a given path.</source>
          <target state="translated">用给定的路径替换ZIP存档中的文件。</target>
        </trans-unit>
        <trans-unit id="9a5ace4eeea9868fea585e57dc267837e31e2a74" translate="yes" xml:space="preserve">
          <source>Replace invalid code points for the given document type with a Unicode Replacement Character U+FFFD (UTF-8) or &amp;amp;#FFFD; (otherwise) instead of leaving them as is. This may be useful, for instance, to ensure the well-formedness of XML documents with embedded external content.</source>
          <target state="translated">用Unicode替换字符U + FFFD（UTF-8）或＆＃FFFD;替换给定文档类型的无效代码点。（否则），而不是照原样保留它们。例如，这对于确保带有嵌入式外部内容的XML文档的格式正确性可能很有用。</target>
        </trans-unit>
        <trans-unit id="ca57bb9d18eac223b1a42f66083acc9bd6da57c1" translate="yes" xml:space="preserve">
          <source>Replace invalid code points for the given document type with a Unicode Replacement Character U+FFFD (UTF-8) or &amp;amp;#xFFFD; (otherwise) instead of leaving them as is. This may be useful, for instance, to ensure the well-formedness of XML documents with embedded external content.</source>
          <target state="translated">用Unicode替换字符U + FFFD（UTF-8）或＆＃xFFFD;替换给定文档类型的无效代码点。（否则），而不是照原样保留它们。例如，这对于确保带有嵌入式外部内容的XML文档的格式正确性可能很有用。</target>
        </trans-unit>
        <trans-unit id="1e9411131356385d1dd3f55fd811bbb1170d15c1" translate="yes" xml:space="preserve">
          <source>Replace invalid code unit sequences with a Unicode Replacement Character U+FFFD (UTF-8) or &amp;amp;#FFFD; (otherwise) instead of returning an empty string.</source>
          <target state="translated">用Unicode替换字符U + FFFD（UTF-8）或＆＃FFFD;替换无效的代码单元序列。（否则）而不是返回空字符串。</target>
        </trans-unit>
        <trans-unit id="f0ccaba2d9cbe8fe9cbd6c8f0dfcbbfc0282af7f" translate="yes" xml:space="preserve">
          <source>Replace invalid code unit sequences with a Unicode Replacement Character U+FFFD (UTF-8) or &amp;amp;#xFFFD; (otherwise) instead of returning an empty string.</source>
          <target state="translated">用Unicode替换字符U + FFFD（UTF-8）或＆＃xFFFD;替换无效的代码单元序列。（否则）而不是返回空字符串。</target>
        </trans-unit>
        <trans-unit id="f7624e3260e0ff00d39057c1e8f02dce9b3dff21" translate="yes" xml:space="preserve">
          <source>Replace the current entry (see &lt;a href=&quot;function.preg-replace&quot;&gt;preg_replace()&lt;/a&gt;; Not fully implemented yet)</source>
          <target state="translated">替换当前条目（请参见&lt;a href=&quot;function.preg-replace&quot;&gt;preg_replace（）&lt;/a&gt;；尚未完全实现）</target>
        </trans-unit>
        <trans-unit id="c385e347b2af0a4d67c9b1c9902c4b0b140d1abd" translate="yes" xml:space="preserve">
          <source>Replacement</source>
          <target state="translated">Replacement</target>
        </trans-unit>
        <trans-unit id="ce1f042cfb7bae6e3d75e1473482145d0c5fd3d5" translate="yes" xml:space="preserve">
          <source>Replacement order gotcha</source>
          <target state="translated">替换订单的问题</target>
        </trans-unit>
        <trans-unit id="10ca02a280510406b89416a2976f2997bb065205" translate="yes" xml:space="preserve">
          <source>Replaces any embedded formatting characters with the appropriate image property and returns the interpreted text. See http://www.imagemagick.org/script/escape.php for escape sequences.</source>
          <target state="translated">用适当的图像属性替换任何嵌入的格式化字符,并返回解释的文本。关于转义序列,请参见http://www.imagemagick.org/script/escape.php。</target>
        </trans-unit>
        <trans-unit id="d242d64535c0742ff5c9f9e89fe98d5812ca2ca2" translate="yes" xml:space="preserve">
          <source>Replaces colors an image with those defined by &lt;code&gt;replacement&lt;/code&gt;. The colors are replaced with the closest possible color. This method is available if Imagick has been compiled against ImageMagick version 6.4.5 or newer.</source>
          <target state="translated">替代对象的颜色与由定义的图像 &lt;code&gt;replacement&lt;/code&gt; 。颜色将替换为最接近的可能颜色。如果Imagick已针对ImageMagick 6.4.5或更高版本进行编译，则此方法可用。</target>
        </trans-unit>
        <trans-unit id="9bdfc0eef50b6e019b432f86184e523033d2181d" translate="yes" xml:space="preserve">
          <source>Replaces colors in the image from a color lookup table. Optional second parameter to replace colors in a specific channel. This method is available if Imagick has been compiled against ImageMagick version 6.3.6 or newer.</source>
          <target state="translated">从颜色查找表替换图像中的颜色。可选的第二个参数用于替换特定通道中的颜色。如果Imagick是根据ImageMagick 6.3.6或更新的版本编译的,则此方法可用。</target>
        </trans-unit>
        <trans-unit id="e704271d8553ff01756ed42c44ae2d7852a2b0ea" translate="yes" xml:space="preserve">
          <source>Replaces colors in the image using a Hald lookup table. Hald images can be created using HALD color coder.</source>
          <target state="translated">使用Hald查找表替换图像中的颜色。可以使用HALD颜色编码器创建Hald图像。</target>
        </trans-unit>
        <trans-unit id="43697a92c1b61c1af2a94a869027c3051cb82804" translate="yes" xml:space="preserve">
          <source>Replaces one or more attributes from the specified &lt;code&gt;dn&lt;/code&gt;. It may also add or remove attributes.</source>
          <target state="translated">从指定的 &lt;code&gt;dn&lt;/code&gt; 替换一个或多个属性。它还可以添加或删除属性。</target>
        </trans-unit>
        <trans-unit id="99a75b1fb06f370b512fb5e009668b6ceff5e530" translate="yes" xml:space="preserve">
          <source>Replaces the colors of an image with the closest color from a reference image.</source>
          <target state="translated">用最接近参考图像的颜色替换图像的颜色。</target>
        </trans-unit>
        <trans-unit id="9696f8ae2077c40897404f9c9009a2c112fea184" translate="yes" xml:space="preserve">
          <source>Replaces the current image sequence with the image from replace object.</source>
          <target state="translated">用替换对象的图像替换当前图像序列。</target>
        </trans-unit>
        <trans-unit id="e74354084c02fab558f37cf52b9266949db012b5" translate="yes" xml:space="preserve">
          <source>Report errors from mysqli function calls</source>
          <target state="translated">从mysqli函数调用中报告错误</target>
        </trans-unit>
        <trans-unit id="94120cea38c66d9bd062c8dcb4c6473bbb3e9eba" translate="yes" xml:space="preserve">
          <source>Report if no index or bad index was used in a query</source>
          <target state="translated">如果在查询中没有使用索引或使用了坏的索引,则报告。</target>
        </trans-unit>
        <trans-unit id="618ed2e61831fbec2a6577bd006faf456c1cb28f" translate="yes" xml:space="preserve">
          <source>Reports information about error status and clears it.</source>
          <target state="translated">报告错误状态的信息并清除。</target>
        </trans-unit>
        <trans-unit id="8bef6d811e53cdf91427598f166885d65d6885fe" translate="yes" xml:space="preserve">
          <source>Reports the &lt;code&gt;socket&lt;/code&gt; type (e.g. &lt;strong&gt;&lt;code&gt;SOCK_STREAM&lt;/code&gt;&lt;/strong&gt;).</source>
          <target state="translated">报告 &lt;code&gt;socket&lt;/code&gt; 类型（例如&lt;strong&gt; &lt;code&gt;SOCK_STREAM&lt;/code&gt; &lt;/strong&gt;）。</target>
        </trans-unit>
        <trans-unit id="f1cc94f6ccbc9535364fa5285b405f9d858105f2" translate="yes" xml:space="preserve">
          <source>Reports the minimum number of bytes to process for &lt;code&gt;socket&lt;/code&gt; input operations.</source>
          <target state="translated">报告 &lt;code&gt;socket&lt;/code&gt; 输入操作要处理的最小字节数。</target>
        </trans-unit>
        <trans-unit id="1fa16ee62f05a36c0c348f6825ab541a8d4bd7f5" translate="yes" xml:space="preserve">
          <source>Reports the minimum number of bytes to process for &lt;code&gt;socket&lt;/code&gt; output operations.</source>
          <target state="translated">报告 &lt;code&gt;socket&lt;/code&gt; 输出操作要处理的最小字节数。</target>
        </trans-unit>
        <trans-unit id="861bba05ea293b16e8f18157d203a74e27ad50be" translate="yes" xml:space="preserve">
          <source>Reports the size of the receive buffer.</source>
          <target state="translated">报告接收缓冲区的大小。</target>
        </trans-unit>
        <trans-unit id="4c1af7ccbaf73876dac21e6215ee541b5b552d8a" translate="yes" xml:space="preserve">
          <source>Reports the size of the send buffer.</source>
          <target state="translated">报告发送缓冲区的大小。</target>
        </trans-unit>
        <trans-unit id="d0d4dcd2d51ad86b90cdb5744562c68a9ca9a5ab" translate="yes" xml:space="preserve">
          <source>Reports the timeout value for input operations.</source>
          <target state="translated">报告输入操作的超时值。</target>
        </trans-unit>
        <trans-unit id="2fc87b7bc528f6ed8b06177d6199f01c1f762d9c" translate="yes" xml:space="preserve">
          <source>Reports the timeout value specifying the amount of time that an output function blocks because flow control prevents data from being sent.</source>
          <target state="translated">报告超时值,指定输出函数因流量控制阻止数据发送而阻塞的时间。</target>
        </trans-unit>
        <trans-unit id="836b4bc51ac209e1be965bb340a1df194e4d6671" translate="yes" xml:space="preserve">
          <source>Reports whether connections are kept active with periodic transmission of messages. If the connected socket fails to respond to these messages, the connection is broken and processes writing to that socket are notified with a SIGPIPE signal.</source>
          <target state="translated">报告连接是否通过定期传输消息保持活跃。如果所连接的套接字没有响应这些消息,则连接中断,并以SIGPIPE信号通知写入该套接字的进程。</target>
        </trans-unit>
        <trans-unit id="135f7aed7ddffb004334bdcd90b4d852a7b0002b" translate="yes" xml:space="preserve">
          <source>Reports whether debugging information is being recorded.</source>
          <target state="translated">报告是否正在记录调试信息。</target>
        </trans-unit>
        <trans-unit id="85d5c60f048a63c7a348c69e8436b0de70cb5748" translate="yes" xml:space="preserve">
          <source>Reports whether local addresses can be reused.</source>
          <target state="translated">报告本地地址是否可以重复使用。</target>
        </trans-unit>
        <trans-unit id="87b8f9fc6b51239f51c409e70fa3c5d006e83b42" translate="yes" xml:space="preserve">
          <source>Reports whether local ports can be reused.</source>
          <target state="translated">报告本地端口是否可以重复使用。</target>
        </trans-unit>
        <trans-unit id="27a3ba6ab898726bae93a22f7d81c46ea42da013" translate="yes" xml:space="preserve">
          <source>Reports whether outgoing messages bypass the standard routing facilities.</source>
          <target state="translated">报告外发邮件是否绕过标准路由设施。</target>
        </trans-unit>
        <trans-unit id="b20f9b42d7bfe6d3f8b883b99497632c2514697f" translate="yes" xml:space="preserve">
          <source>Reports whether the &lt;code&gt;socket&lt;/code&gt; leaves out-of-band data inline.</source>
          <target state="translated">报告 &lt;code&gt;socket&lt;/code&gt; 是否保留带内数据串联。</target>
        </trans-unit>
        <trans-unit id="3d84653e39f2393bfdb888c5a4a3a57d249d29ef" translate="yes" xml:space="preserve">
          <source>Reports whether the &lt;code&gt;socket&lt;/code&gt; lingers on &lt;a href=&quot;function.socket-close&quot;&gt;socket_close()&lt;/a&gt; if data is present. By default, when the socket is closed, it attempts to send all unsent data. In the case of a connection-oriented socket, &lt;a href=&quot;function.socket-close&quot;&gt;socket_close()&lt;/a&gt; will wait for its peer to acknowledge the data.</source>
          <target state="translated">如果存在数据，则报告 &lt;code&gt;socket&lt;/code&gt; 是否在&lt;a href=&quot;function.socket-close&quot;&gt;socket_close（）&lt;/a&gt;上徘徊。默认情况下，当套接字关闭时，它将尝试发送所有未发送的数据。对于面向连接的套接字，&lt;a href=&quot;function.socket-close&quot;&gt;socket_close（）&lt;/a&gt;将等待其对等方确认数据。</target>
        </trans-unit>
        <trans-unit id="ce8e33bcbc86d3ab4c61ce2cf40978ff0a26a04e" translate="yes" xml:space="preserve">
          <source>Reports whether the Nagle TCP algorithm is disabled.</source>
          <target state="translated">报告Nagle TCP算法是否被禁用。</target>
        </trans-unit>
        <trans-unit id="1624d1a7f3d0ba44de24162bbb2d310a3c39b19f" translate="yes" xml:space="preserve">
          <source>Reports whether transmission of broadcast messages is supported.</source>
          <target state="translated">报告是否支持广播信息的传输。</target>
        </trans-unit>
        <trans-unit id="b4d9f4a9d45b5e85f722fa9a7c8cb3af444f28cf" translate="yes" xml:space="preserve">
          <source>Repository URL of the item to retrieve log history from.</source>
          <target state="translated">检索日志历史的项目的存储库 URL。</target>
        </trans-unit>
        <trans-unit id="f20fa42ba560e4f2656df738de0246f73c0abc0e" translate="yes" xml:space="preserve">
          <source>Repository URL to import into.</source>
          <target state="translated">要导入的版本库URL。</target>
        </trans-unit>
        <trans-unit id="6d729b64c9ea63a00499e7efd12e6f2f4a08f8ed" translate="yes" xml:space="preserve">
          <source>Representation of date and time.</source>
          <target state="translated">表示日期和时间。</target>
        </trans-unit>
        <trans-unit id="c0aaa2d8ed142e942ec37035d6e0350434af2e4b" translate="yes" xml:space="preserve">
          <source>Representation of time zone.</source>
          <target state="translated">时区的表示。</target>
        </trans-unit>
        <trans-unit id="0cef36dafdcabba4dbf5fee579fee0bc28a1b898" translate="yes" xml:space="preserve">
          <source>Represents</source>
          <target state="translated">Represents</target>
        </trans-unit>
        <trans-unit id="73092f1f4335da2160928f99bbd4e84e9c85f785" translate="yes" xml:space="preserve">
          <source>Represents &lt;code&gt;SSL_CTX&lt;/code&gt; structure. Provides methods and properties to configure the SSL context.</source>
          <target state="translated">表示 &lt;code&gt;SSL_CTX&lt;/code&gt; 结构。提供配置SSL上下文的方法和属性。</target>
        </trans-unit>
        <trans-unit id="a0091d8e1dace01692ac2dba0dbb554bb569cdd6" translate="yes" xml:space="preserve">
          <source>Represents &lt;em&gt;SSL_CTX&lt;/em&gt; structure. Provides methods and properties to configure the SSL context.</source>
          <target state="translated">表示&lt;em&gt;SSL_CTX&lt;/em&gt;结构。提供配置SSL上下文的方法和属性。</target>
        </trans-unit>
        <trans-unit id="1e02f16cbc18c3653974fc3afc9197afba667e4c" translate="yes" xml:space="preserve">
          <source>Represents HTTP server.</source>
          <target state="translated">代表HTTP服务器。</target>
        </trans-unit>
        <trans-unit id="84af91c19b726774cb1daeb8d6db0650b4d56532" translate="yes" xml:space="preserve">
          <source>Represents Libevent's DNS base structure. Used to resolve DNS asyncronously, parse configuration files like resolv.conf etc.</source>
          <target state="translated">代表 Libevent 的 DNS 基础结构。用于异步解析 DNS,解析配置文件,如 resolv.conf 等。</target>
        </trans-unit>
        <trans-unit id="a57a2bd3004fcbdf532d6bca27b59a16f9b4c50c" translate="yes" xml:space="preserve">
          <source>Represents Libevent's buffer event.</source>
          <target state="translated">代表 Libevent 的缓冲区事件。</target>
        </trans-unit>
        <trans-unit id="c68880f431a17de190f4e840b30f05155a8d7ebc" translate="yes" xml:space="preserve">
          <source>Represents ZooKeeper session.</source>
          <target state="translated">代表ZooKeeper会话。</target>
        </trans-unit>
        <trans-unit id="053b7499b4987f513bf185bceaf0b5c266774bfb" translate="yes" xml:space="preserve">
          <source>Represents a MySQL warning.</source>
          <target state="translated">代表一个MySQL警告。</target>
        </trans-unit>
        <trans-unit id="c2a672cacae8907eb5cbf26f1e713699f51056c0" translate="yes" xml:space="preserve">
          <source>Represents a SOAP fault.</source>
          <target state="translated">表示一个SOAP故障。</target>
        </trans-unit>
        <trans-unit id="500cd87e637e7d5c90930fb979e83acca68ae218" translate="yes" xml:space="preserve">
          <source>Represents a SOAP header.</source>
          <target state="translated">代表一个SOAP头。</target>
        </trans-unit>
        <trans-unit id="6fac646176981903afa95f494a0645af364d8ef8" translate="yes" xml:space="preserve">
          <source>Represents a Solr document retrieved from a query response.</source>
          <target state="translated">代表从查询响应中检索的Solr文档。</target>
        </trans-unit>
        <trans-unit id="f96056b015a7b5bd5638d33306711c8a6bc4c474" translate="yes" xml:space="preserve">
          <source>Represents a class for connecting to a Gearman job server and making requests to perform some function on provided data. The function performed must be one registered by a Gearman worker and the data passed is opaque to the job server.</source>
          <target state="translated">代表一个连接到Gearman作业服务器的类,用于请求对提供的数据执行一些功能。执行的功能必须是Gearman worker注册的功能,并且传递的数据对作业服务器来说是不透明的。</target>
        </trans-unit>
        <trans-unit id="34fe8c96d12b99a348129f7eb4693e7e58461bbb" translate="yes" xml:space="preserve">
          <source>Represents a collection of name-value pairs sent to the Solr server during a request.</source>
          <target state="translated">代表在请求过程中发送到Solr服务器的名-值对的集合。</target>
        </trans-unit>
        <trans-unit id="7c4fd43552a9906dc290d03f4363251bcb50ce37" translate="yes" xml:space="preserve">
          <source>Represents a connection between PHP and a MySQL database.</source>
          <target state="translated">代表PHP和MySQL数据库之间的连接。</target>
        </trans-unit>
        <trans-unit id="465b5c8952245f4770c6edc97c7b09a9817eb588" translate="yes" xml:space="preserve">
          <source>Represents a connection between PHP and a Stomp compliant Message Broker.</source>
          <target state="translated">代表PHP和一个符合Stomp标准的Message Broker之间的连接。</target>
        </trans-unit>
        <trans-unit id="c6a13f9bb4184a4593cd0f9cc6952744ba960253" translate="yes" xml:space="preserve">
          <source>Represents a connection between PHP and a database server.</source>
          <target state="translated">代表PHP和数据库服务器之间的连接。</target>
        </trans-unit>
        <trans-unit id="86d94f1b92bde4feac63c0537b0e1628e8575f13" translate="yes" xml:space="preserve">
          <source>Represents a connection listener.</source>
          <target state="translated">代表一个连接监听器。</target>
        </trans-unit>
        <trans-unit id="c6036ec50d92e49551d666015d1f9efaa796bfc1" translate="yes" xml:space="preserve">
          <source>Represents a connection to a set of memcached servers.</source>
          <target state="translated">表示与一组memcached服务器的连接。</target>
        </trans-unit>
        <trans-unit id="dfdd69b678d309cd454128bf3aa485774d9a7c08" translate="yes" xml:space="preserve">
          <source>Represents a date interval.</source>
          <target state="translated">代表一个日期间隔。</target>
        </trans-unit>
        <trans-unit id="00e5696354e208fa86d74bae88a402d02dc819da" translate="yes" xml:space="preserve">
          <source>Represents a date period.</source>
          <target state="translated">代表一个日期周期。</target>
        </trans-unit>
        <trans-unit id="8c920cbad05336ae82c74c938257464f8dd4cb62" translate="yes" xml:space="preserve">
          <source>Represents a garbage-collectable object.</source>
          <target state="translated">代表一个可收集垃圾的对象。</target>
        </trans-unit>
        <trans-unit id="86fabd5d0f2cd3b1b3a7de796d1cb2d5d6ab8fdf" translate="yes" xml:space="preserve">
          <source>Represents a maximum amount of computations to perform. Raising this number will make the function require more CPU cycles to compute a key. There are constants available to set the operations limit to appropriate values depending on intended use, in order of strength: &lt;strong&gt;&lt;code&gt;SODIUM_CRYPTO_PWHASH_OPSLIMIT_INTERACTIVE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;SODIUM_CRYPTO_PWHASH_OPSLIMIT_MODERATE&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;SODIUM_CRYPTO_PWHASH_OPSLIMIT_SENSITIVE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">表示要执行的最大计算量。增大此数字将使函数需要更多的CPU周期来计算密钥。有一些常量可以根据强度的使用顺序，根据预期用途将操作限制设置为适当的值：&lt;strong&gt; &lt;code&gt;SODIUM_CRYPTO_PWHASH_OPSLIMIT_INTERACTIVE&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;SODIUM_CRYPTO_PWHASH_OPSLIMIT_MODERATE&lt;/code&gt; &lt;/strong&gt;和&lt;strong&gt; &lt;code&gt;SODIUM_CRYPTO_PWHASH_OPSLIMIT_SENSITIVE&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="f020445e76cfe990723c564ac4a74e82d0449596" translate="yes" xml:space="preserve">
          <source>Represents a maximum amount of computations to perform. Raising this number will make the function require more CPU cycles to compute a key. There are some constants available to set the operations limit to appropriate values depending on intended use, in order of strength: &lt;strong&gt;&lt;code&gt;SODIUM_CRYPTO_PWHASH_OPSLIMIT_INTERACTIVE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;SODIUM_CRYPTO_PWHASH_OPSLIMIT_MODERATE&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;SODIUM_CRYPTO_PWHASH_OPSLIMIT_SENSITIVE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">表示要执行的最大计算量。增大此数字将使函数需要更多的CPU周期来计算密钥。有一些常量可用于根据强度的使用目的将操作限制设置为适当的值（强度顺序）：&lt;strong&gt; &lt;code&gt;SODIUM_CRYPTO_PWHASH_OPSLIMIT_INTERACTIVE&lt;/code&gt; &lt;/strong&gt;，&lt;strong&gt; &lt;code&gt;SODIUM_CRYPTO_PWHASH_OPSLIMIT_MODERATE&lt;/code&gt; &lt;/strong&gt;和&lt;strong&gt; &lt;code&gt;SODIUM_CRYPTO_PWHASH_OPSLIMIT_SENSITIVE&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="b3ebe715ee75cf01b7006ba777e0d348ffa85dcc" translate="yes" xml:space="preserve">
          <source>Represents a message which was sent or received from a Stomp compliant Message Broker.</source>
          <target state="translated">表示从符合Stomp标准的Message Broker发送或接收的消息。</target>
        </trans-unit>
        <trans-unit id="d21a1cea812b5a04ec68f41645b7d0672cebd0b8" translate="yes" xml:space="preserve">
          <source>Represents a prepared statement and, after the statement is executed, an associated result set.</source>
          <target state="translated">代表一个已准备好的语句,在语句执行后,代表一个相关的结果集。</target>
        </trans-unit>
        <trans-unit id="f7232b9f5469f0ddd627fa688916c0d879415e81" translate="yes" xml:space="preserve">
          <source>Represents a prepared statement.</source>
          <target state="translated">系编制的报表。</target>
        </trans-unit>
        <trans-unit id="2d3831aaa48ed60fbf880d6cddfd927d6a19892c" translate="yes" xml:space="preserve">
          <source>Represents a response from the Solr server.</source>
          <target state="translated">代表来自Solr服务器的响应。</target>
        </trans-unit>
        <trans-unit id="5450fd3b7f356711f3970a22e5ee88e2f79a4afa" translate="yes" xml:space="preserve">
          <source>Represents a response from the solr server.</source>
          <target state="translated">代表来自solr服务器的响应。</target>
        </trans-unit>
        <trans-unit id="e24d98e441b69376884d113b9f6aa91b7e5a8b15" translate="yes" xml:space="preserve">
          <source>Represents a response to a ping request to the server</source>
          <target state="translated">表示对服务器ping请求的响应。</target>
        </trans-unit>
        <trans-unit id="9d8353896e82fb7a265f34aa1990487635adf37d" translate="yes" xml:space="preserve">
          <source>Represents a response to a query request.</source>
          <target state="translated">表示对查询请求的响应。</target>
        </trans-unit>
        <trans-unit id="3fbe3db98a1b65c2466aa5ae56ce532d858f3a8d" translate="yes" xml:space="preserve">
          <source>Represents a response to an update request.</source>
          <target state="translated">代表对更新请求的响应。</target>
        </trans-unit>
        <trans-unit id="d33177890ae6311ae05653ae75ca580e4037767b" translate="yes" xml:space="preserve">
          <source>Represents an HTTP connection.</source>
          <target state="translated">代表一个HTTP连接。</target>
        </trans-unit>
        <trans-unit id="a98af6dd3ac47e013ddd12bcd584bc617ac08525" translate="yes" xml:space="preserve">
          <source>Represents an HTTP request.</source>
          <target state="translated">代表一个HTTP请求。</target>
        </trans-unit>
        <trans-unit id="56fa681d7bb90ec857282515079906893947e33e" translate="yes" xml:space="preserve">
          <source>Represents an element in an XML document.</source>
          <target state="translated">代表XML文档中的一个元素。</target>
        </trans-unit>
        <trans-unit id="3b485f17570615330869d57ae61b65ec3a0b96a4" translate="yes" xml:space="preserve">
          <source>Represents an entire HTML or XML document; serves as the root of the document tree.</source>
          <target state="translated">代表整个HTML或XML文档;作为文档树的根。</target>
        </trans-unit>
        <trans-unit id="ed8d5c31a3cd858e5f11d4b508c484a1e34ccfaf" translate="yes" xml:space="preserve">
          <source>Represents an error raised by PDO. You should not throw a &lt;strong&gt;PDOException&lt;/strong&gt; from your own code. See &lt;a href=&quot;language.exceptions&quot;&gt;Exceptions&lt;/a&gt; for more information about Exceptions in PHP.</source>
          <target state="translated">表示PDO引发的错误。您不应从自己的代码中引发&lt;strong&gt;PDOException&lt;/strong&gt;。有关PHP中的&lt;a href=&quot;language.exceptions&quot;&gt;异常&lt;/a&gt;的更多信息，请参见异常。</target>
        </trans-unit>
        <trans-unit id="e5f5ef4ba9cabd61a170c1bcb303ca0760a4090f" translate="yes" xml:space="preserve">
          <source>Represents an error raised by SNMP. You should not throw a &lt;strong&gt;SNMPException&lt;/strong&gt; from your own code. See &lt;a href=&quot;language.exceptions&quot;&gt;Exceptions&lt;/a&gt; for more information about Exceptions in PHP.</source>
          <target state="translated">表示SNMP引发的错误。您不应该从自己的代码中抛出&lt;strong&gt;SNMPException&lt;/strong&gt;。有关PHP中的&lt;a href=&quot;language.exceptions&quot;&gt;异常&lt;/a&gt;的更多信息，请参见异常。</target>
        </trans-unit>
        <trans-unit id="72d91eda29306b02c807d46c0ac3b7c67eba59dc" translate="yes" xml:space="preserve">
          <source>Represents an error raised by the stomp extension. See &lt;a href=&quot;language.exceptions&quot;&gt;Exceptions&lt;/a&gt; for more information about Exceptions in PHP.</source>
          <target state="translated">表示由stomp扩展名引发的错误。有关PHP中的&lt;a href=&quot;language.exceptions&quot;&gt;异常&lt;/a&gt;的更多信息，请参见异常。</target>
        </trans-unit>
        <trans-unit id="3c2a84898e3dc63488eec244749586647f57253b" translate="yes" xml:space="preserve">
          <source>Represents an event loop that is always distinct from the &lt;em&gt;default loop&lt;/em&gt; . Unlike the &lt;em&gt;default loop&lt;/em&gt; , it cannot handle &lt;a href=&quot;class.evchild&quot;&gt;EvChild&lt;/a&gt; watchers.</source>
          <target state="translated">表示始终与&lt;em&gt;默认循环&lt;/em&gt;不同的事件&lt;em&gt;循环&lt;/em&gt;。与&lt;em&gt;默认循环&lt;/em&gt;不同，它无法处理&lt;a href=&quot;class.evchild&quot;&gt;EvChild&lt;/a&gt;观察者。</target>
        </trans-unit>
        <trans-unit id="6b1807d9aaacf20f1880233d3f3c11b3360d441e" translate="yes" xml:space="preserve">
          <source>Represents comment nodes, characters delimited by &lt;code&gt;&amp;lt;!--&lt;/code&gt; and &lt;code&gt;--&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">表示注释节点，用 &lt;code&gt;&amp;lt;!--&lt;/code&gt; 和 &lt;code&gt;--&amp;gt;&lt;/code&gt; 分隔的字符。</target>
        </trans-unit>
        <trans-unit id="5d3e561d8bb1edd56d7e778cecc21c1381ab6c4a" translate="yes" xml:space="preserve">
          <source>Represents configuration structure which could be used in construction of the &lt;a href=&quot;class.eventbase&quot;&gt;EventBase&lt;/a&gt; .</source>
          <target state="translated">表示可用于构造&lt;a href=&quot;class.eventbase&quot;&gt;EventBase的&lt;/a&gt;配置结构。</target>
        </trans-unit>
        <trans-unit id="00c88b2f4a70a580775bfaa7c23223d5610a03a0" translate="yes" xml:space="preserve">
          <source>Represents nodes with character data. No nodes directly correspond to this class, but other nodes do inherit from it.</source>
          <target state="translated">代表具有字符数据的节点。没有节点直接对应于这个类,但其他节点确实继承于这个类。</target>
        </trans-unit>
        <trans-unit id="5ff3766a82239b51decac0e9b3179cfbc754c4d3" translate="yes" xml:space="preserve">
          <source>Represents parameter to a SOAP call.</source>
          <target state="translated">代表SOAP调用的参数。</target>
        </trans-unit>
        <trans-unit id="5f9b086fae7673561e3bb1fd45a46df816084af5" translate="yes" xml:space="preserve">
          <source>Represents the result set obtained from a query against the database.</source>
          <target state="translated">表示通过对数据库的查询得到的结果集。</target>
        </trans-unit>
        <trans-unit id="782a4a0e7a5eb5f45223de9330294f34609d659b" translate="yes" xml:space="preserve">
          <source>Request input header type.</source>
          <target state="translated">请求输入头类型。</target>
        </trans-unit>
        <trans-unit id="7a7a1a73900b7442ff10b916f6b41ec9060164c5" translate="yes" xml:space="preserve">
          <source>Request output header type.</source>
          <target state="translated">请求输出头类型。</target>
        </trans-unit>
        <trans-unit id="ed15a89e1a1cf7958b04da79eaec6dda5207c6e5" translate="yes" xml:space="preserve">
          <source>Request the Publickey subsystem from an already connected SSH2 server.</source>
          <target state="translated">从已经连接的SSH2服务器上请求Publickey子系统。</target>
        </trans-unit>
        <trans-unit id="3f33aad6828da3bfd8574ff3559a3a8b2f5f5cfc" translate="yes" xml:space="preserve">
          <source>Request the SFTP subsystem from an already connected SSH2 server.</source>
          <target state="translated">从已经连接的SSH2服务器上请求SFTP子系统。</target>
        </trans-unit>
        <trans-unit id="0f9243eda340bbf4bd4e60effa0599da6cea3f1e" translate="yes" xml:space="preserve">
          <source>Request to</source>
          <target state="translated">请求</target>
        </trans-unit>
        <trans-unit id="4dfc3107d905908a945873cfc5db6f82b232f538" translate="yes" xml:space="preserve">
          <source>Requests a return of sub results for values within the given facet. Maps to the stats.facet field</source>
          <target state="translated">请求返回给定facet中的子结果。映射到stats.facet字段。</target>
        </trans-unit>
        <trans-unit id="9f04afc25f065f01b2de3432c448de6f5bbda447" translate="yes" xml:space="preserve">
          <source>Requests remote</source>
          <target state="translated">请求远程</target>
        </trans-unit>
        <trans-unit id="682f497c11c093b791b12f8b586e8986f33f549e" translate="yes" xml:space="preserve">
          <source>Require all sub iterators to be valid in iteration.</source>
          <target state="translated">要求所有子迭代器在迭代中有效。</target>
        </trans-unit>
        <trans-unit id="2d39acbf9580fe6f635c1c651fcbab0d8be0c7e3" translate="yes" xml:space="preserve">
          <source>Requires a backend method that can support arbitrary file descriptor types, and not just sockets.</source>
          <target state="translated">要求后端方法能够支持任意文件描述符类型,而不仅仅是套接字。</target>
        </trans-unit>
        <trans-unit id="31063ab7300daac505f2dbea6a5bfaa7cebb35dd" translate="yes" xml:space="preserve">
          <source>Requires a backend method that supports edge-triggered I/O.</source>
          <target state="translated">需要一个支持边缘触发I/O的后端方法。</target>
        </trans-unit>
        <trans-unit id="4b629b47e9d22101ba45d285d791aded49204adc" translate="yes" xml:space="preserve">
          <source>Requires a backend method where adding or deleting a single event, or having a single event become active, is an O(1) operation.</source>
          <target state="translated">需要一个后端方法,在该方法中,添加或删除单个事件,或让单个事件成为活动状态,是一个O(1)操作。</target>
        </trans-unit>
        <trans-unit id="6b23be4ff0fe15f12dfe7e0740dc90746732ad76" translate="yes" xml:space="preserve">
          <source>Resample image to desired resolution.</source>
          <target state="translated">将图像重新采样到所需的分辨率。</target>
        </trans-unit>
        <trans-unit id="a56eecd34f6a880200374ab38fcd86ba538f201b" translate="yes" xml:space="preserve">
          <source>Reschedule callback. You can pass &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;. See &lt;a href=&quot;https://secure.php.net/manual/en/ev.periodic-modes.php&quot;&gt;Periodic watcher operation modes&lt;/a&gt;</source>
          <target state="translated">重新安排回调。您可以传递&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;。请参阅&lt;a href=&quot;https://secure.php.net/manual/en/ev.periodic-modes.php&quot;&gt;定期观察者操作模式&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="03ba35da88ddd0cc73ff7cb1eb263da8d6766efd" translate="yes" xml:space="preserve">
          <source>Reschedule callback. You can pass &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt;. See &lt;a href=&quot;https://www.php.net/manual/en/ev.periodic-modes.php&quot;&gt;Periodic watcher operation modes&lt;/a&gt;</source>
          <target state="translated">重新安排回调。您可以传递&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; &lt;/strong&gt;。请参阅&lt;a href=&quot;https://www.php.net/manual/en/ev.periodic-modes.php&quot;&gt;定期观察者操作模式&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="785235b34856a5d2338d34993138d2be0cc3ce3f" translate="yes" xml:space="preserve">
          <source>Reserved for default value, currently always &quot;&quot;</source>
          <target state="translated">保留为默认值,目前总是&quot;&quot;</target>
        </trans-unit>
        <trans-unit id="707ab33d9d6fdad60a6a146e7eff3767ce122c68" translate="yes" xml:space="preserve">
          <source>Reset lexing optionally supplying the desired offset.</source>
          <target state="translated">提供所需的偏移量来重置词库。</target>
        </trans-unit>
        <trans-unit id="952074cabda8e029d779815705ed7d2bfd98d67d" translate="yes" xml:space="preserve">
          <source>Reset parser state using the given token id.</source>
          <target state="translated">使用给定的token id重置解析器状态。</target>
        </trans-unit>
        <trans-unit id="5e66b96d987e7a781b386da8445692402029ae16" translate="yes" xml:space="preserve">
          <source>Reset position.</source>
          <target state="translated">重置位置。</target>
        </trans-unit>
        <trans-unit id="0bdd09acfbbd4203a596a483926b267a6e7ca2fd" translate="yes" xml:space="preserve">
          <source>Reset the connection to the session database servers.</source>
          <target state="translated">重置与会话数据库服务器的连接。</target>
        </trans-unit>
        <trans-unit id="fa18aa076dd03a82c0c34f275a95335d1476f932" translate="yes" xml:space="preserve">
          <source>Resets a SyncEvent object that has been fired/set. Only valid for manual event objects.</source>
          <target state="translated">重置已启动/设置的同步事件对象。仅对手动事件对象有效。</target>
        </trans-unit>
        <trans-unit id="a8876829f6de8bf469153857076d113a19a6ba98" translate="yes" xml:space="preserve">
          <source>Resets a prepared statement on client and server to state after prepare.</source>
          <target state="translated">将客户端和服务器上的准备好的语句重置为准备后的状态。</target>
        </trans-unit>
        <trans-unit id="f724779eae5830ac166bafdd91df780ee63cfc37" translate="yes" xml:space="preserve">
          <source>Resets all fields (year, month, day, hour, minute, second, fraction and timezone information) to the Unix Epoch</source>
          <target state="translated">将所有字段(年、月、日、时、分、秒、分数和时区信息)重置为Unix Epoch。</target>
        </trans-unit>
        <trans-unit id="ee6225f99c1cfb039b6994cf5342c17d5fad403b" translate="yes" xml:space="preserve">
          <source>Resets all fields (year, month, day, hour, minute, second, fraction and timezone information) to the Unix Epoch if they have not been parsed yet</source>
          <target state="translated">如果尚未解析所有字段(年、月、日、时、分、秒、分数和时区信息),则将其重置为Unix Epoch。</target>
        </trans-unit>
        <trans-unit id="00774edf010c9a090b36c2a0cc68b1ec78e749ba" translate="yes" xml:space="preserve">
          <source>Resets the current date of the DateTime object to a different date.</source>
          <target state="translated">将DateTime对象的当前日期重置为不同的日期。</target>
        </trans-unit>
        <trans-unit id="41532a4042689b2ab0673d176bd711655069dfc5" translate="yes" xml:space="preserve">
          <source>Resets the current object. Discards all the fields and resets the document boost to zero.</source>
          <target state="translated">重置当前对象。丢弃所有字段,并将文档提升值重置为零。</target>
        </trans-unit>
        <trans-unit id="a7f855e556239bd9e7a73773b9804ed8de44cb53" translate="yes" xml:space="preserve">
          <source>Resets the current time of the DateTime object to a different time.</source>
          <target state="translated">将DateTime对象的当前时间重置为不同的时间。</target>
        </trans-unit>
        <trans-unit id="f5db2cbf2b79adad264553dd64a59df8229452f1" translate="yes" xml:space="preserve">
          <source>Resets the directory stream indicated by &lt;code&gt;dir_handle&lt;/code&gt; to the beginning of the directory.</source>
          <target state="translated">将 &lt;code&gt;dir_handle&lt;/code&gt; 指示的目录流重置为目录的开头。</target>
        </trans-unit>
        <trans-unit id="ba8a3ddaef079b357d13a3eb8c94b0b90cfeaff3" translate="yes" xml:space="preserve">
          <source>Resets the document by dropping all the fields and resets the document boost to zero.</source>
          <target state="translated">通过放弃所有字段来重置文档,并将文档的提升值重置为零。</target>
        </trans-unit>
        <trans-unit id="a62ef538b0bc085d1b7af0ddcff1115c1d2820ed" translate="yes" xml:space="preserve">
          <source>Resets the internal pointer to the beginning.</source>
          <target state="translated">重置内部指针到起点。</target>
        </trans-unit>
        <trans-unit id="ba82269be0cadf16ba11a10c6b6e1b2eab20c318" translate="yes" xml:space="preserve">
          <source>Resets the pixel iterator. Use it in conjunction with ImagickPixelIterator::getNextIteratorRow() to iterate over all the pixels in a pixel container.</source>
          <target state="translated">重置像素迭代器。与ImagickPixelIterator::getNextIteratorRow()一起使用,可以遍历一个像素容器中的所有像素。</target>
        </trans-unit>
        <trans-unit id="9bb000f2089f53ed32a12ae9ebec354c8ee44c2c" translate="yes" xml:space="preserve">
          <source>Resets the prepared statement to its state prior to execution. All bindings remain intact after reset.</source>
          <target state="translated">将准备好的语句重置到执行前的状态。重置后,所有的绑定都保持不变。</target>
        </trans-unit>
        <trans-unit id="eda17cfafd6013ae899487a3d4a0b3bd519ad39d" translate="yes" xml:space="preserve">
          <source>Resets the result set back to the first row.</source>
          <target state="translated">将结果集重设为第一行。</target>
        </trans-unit>
        <trans-unit id="3d936a78072488bfb58812dd2c0ab2160fee2391" translate="yes" xml:space="preserve">
          <source>Resets the vector graphics.</source>
          <target state="translated">重置矢量图形。</target>
        </trans-unit>
        <trans-unit id="3288b8c61669b15f53ea75a6ee9013ead2e7d62c" translate="yes" xml:space="preserve">
          <source>Resize an image to a standard size for the web. This method works best when resizing to a size only slightly smaller than the previous image size.</source>
          <target state="translated">将图像调整为网络的标准尺寸。此方法在调整大小至只比之前的图像尺寸略小的尺寸时效果最好。</target>
        </trans-unit>
        <trans-unit id="0ab36c22cb673fd19dfd53ce885c3ad5b21b4c14" translate="yes" xml:space="preserve">
          <source>Resize the Pool</source>
          <target state="translated">调整池的大小</target>
        </trans-unit>
        <trans-unit id="d12bd51b5357ddc724bf3b7e3fa8932de27ebba5" translate="yes" xml:space="preserve">
          <source>Resolve &lt;code&gt;filename&lt;/code&gt; against the include path according to the same rules as &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt;/&lt;a href=&quot;function.include&quot;&gt;include&lt;/a&gt;.</source>
          <target state="translated">根据与&lt;a href=&quot;function.fopen&quot;&gt;fopen（）&lt;/a&gt; / &lt;a href=&quot;function.include&quot;&gt;include&lt;/a&gt;相同的规则，针对包含路径解析 &lt;code&gt;filename&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3666b1697a6b566bc93d45077bf94a231f776502" translate="yes" xml:space="preserve">
          <source>Resolves the DNS name hostname, looking for addresses of type &lt;code&gt;family&lt;/code&gt; ( &lt;code&gt;EventUtil::AF_*&lt;/code&gt; constants). If the name resolution fails, it invokes the event callback with an error event. If it succeeds, it launches a connection attempt just as &lt;a href=&quot;eventbufferevent.connect&quot;&gt;EventBufferEvent::connect()&lt;/a&gt; would.</source>
          <target state="translated">解析DNS名称主机名，查找类型为 &lt;code&gt;family&lt;/code&gt; （ &lt;code&gt;EventUtil::AF_*&lt;/code&gt; 常量）的地址。如果名称解析失败，它将使用错误事件调用事件回调。如果成功，它将启动连接尝试，就像&lt;a href=&quot;eventbufferevent.connect&quot;&gt;EventBufferEvent :: connect（）&lt;/a&gt;一样。</target>
        </trans-unit>
        <trans-unit id="26f6b33317bebe22c0c8e4745e4cf5005291869a" translate="yes" xml:space="preserve">
          <source>Resolves the DNS name hostname, looking for addresses of type &lt;code&gt;family&lt;/code&gt; ( &lt;em&gt;EventUtil::AF_*&lt;/em&gt; constants). If the name resolution fails, it invokes the event callback with an error event. If it succeeds, it launches a connection attempt just as &lt;a href=&quot;eventbufferevent.connect&quot;&gt;EventBufferEvent::connect()&lt;/a&gt; would.</source>
          <target state="translated">解析DNS名称主机名，查找类型为 &lt;code&gt;family&lt;/code&gt; （&lt;em&gt;EventUtil :: AF_ *&lt;/em&gt;常量）的地址。如果名称解析失败，它将使用错误事件调用事件回调。如果成功，它将启动连接尝试，就像&lt;a href=&quot;eventbufferevent.connect&quot;&gt;EventBufferEvent :: connect（）&lt;/a&gt;一样。</target>
        </trans-unit>
        <trans-unit id="4ab01768316855cbe3cc818afa7451b398975fe3" translate="yes" xml:space="preserve">
          <source>Resource created from &lt;a href=&quot;function.socket-addrinfo-lookup&quot;&gt;socket_addrinfo_lookup()&lt;/a&gt;</source>
          <target state="translated">从&lt;a href=&quot;function.socket-addrinfo-lookup&quot;&gt;socket_addrinfo_lookup（）&lt;/a&gt;创建的资源</target>
        </trans-unit>
        <trans-unit id="35175ca16f252d77c32ac43470a15ec29d9a08fd" translate="yes" xml:space="preserve">
          <source>Resource created from &lt;a href=&quot;function.socket-addrinfo-lookup&quot;&gt;socket_addrinfo_lookup()&lt;/a&gt;.</source>
          <target state="translated">从&lt;a href=&quot;function.socket-addrinfo-lookup&quot;&gt;socket_addrinfo_lookup（）&lt;/a&gt;创建的资源。</target>
        </trans-unit>
        <trans-unit id="f311aac0a8f006df99e730beb497f6f199db5326" translate="yes" xml:space="preserve">
          <source>Resource created from &lt;strong&gt;socket_addrinfo_lookup()()&lt;/strong&gt;</source>
          <target state="translated">从&lt;strong&gt;socket_addrinfo_lookup（）（）&lt;/strong&gt;创建的资源&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c6e49f111a00513ee9f800f2c35ca760b9ce1189" translate="yes" xml:space="preserve">
          <source>Resource created from &lt;strong&gt;socket_addrinfo_lookup()()&lt;/strong&gt;.</source>
          <target state="translated">从&lt;strong&gt;socket_addrinfo_lookup（）（）&lt;/strong&gt;创建的资源。</target>
        </trans-unit>
        <trans-unit id="c70b622574e3002fb5bcd3efb2921d8ab30ccc93" translate="yes" xml:space="preserve">
          <source>Resource holding the key.</source>
          <target state="translated">持有钥匙的资源。</target>
        </trans-unit>
        <trans-unit id="a4d16eda11df5a0e69fee15c412a9f61f99fb0d4" translate="yes" xml:space="preserve">
          <source>Resource of type curl indicates the handle which it concerns.</source>
          <target state="translated">curl类型的资源表示它所涉及的句柄。</target>
        </trans-unit>
        <trans-unit id="bd6c9b54912d1277ffd332624264147c1c08dfcc" translate="yes" xml:space="preserve">
          <source>Resource returned by &lt;a href=&quot;function.inotify-init&quot;&gt;inotify_init()&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;function.inotify-init&quot;&gt;inotify_init（）&lt;/a&gt;返回的资源</target>
        </trans-unit>
        <trans-unit id="e9a56213dc3b0750e7bc13a67b8e06cea704a097" translate="yes" xml:space="preserve">
          <source>ResourceBundle &amp;rarr;</source>
          <target state="translated">资源束&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="124fbd3bcdf780d4465086205752c2b8646d0070" translate="yes" xml:space="preserve">
          <source>ResourceBundle (class)</source>
          <target state="translated">资源包(类)</target>
        </trans-unit>
        <trans-unit id="7906a160e335280745bb04ef6e4d2cfa162026ac" translate="yes" xml:space="preserve">
          <source>ResourceBundle::__construct</source>
          <target state="translated">ResourceBundle::__construct</target>
        </trans-unit>
        <trans-unit id="b109a2251216c2bdfe3d197679d696fc991a847e" translate="yes" xml:space="preserve">
          <source>ResourceBundle::count</source>
          <target state="translated">ResourceBundle::count</target>
        </trans-unit>
        <trans-unit id="63d9c4e87b8f8115b98d2eb1b99b0332fa7d9544" translate="yes" xml:space="preserve">
          <source>ResourceBundle::count &amp;rarr;</source>
          <target state="translated">ResourceBundle :: count&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="86a9d4f13cefde899f93973c147d7a3d002217bf" translate="yes" xml:space="preserve">
          <source>ResourceBundle::count -- resourcebundle_count &amp;mdash; Get number of elements in the bundle</source>
          <target state="translated">ResourceBundle :: count-resourcebundle_count &amp;mdash;获取捆绑中的元素数</target>
        </trans-unit>
        <trans-unit id="e46f58d5c8d1022711d3826a8f09606a82a668da" translate="yes" xml:space="preserve">
          <source>ResourceBundle::create</source>
          <target state="translated">ResourceBundle::create</target>
        </trans-unit>
        <trans-unit id="00548639baa69f603f874875ded033d16f248524" translate="yes" xml:space="preserve">
          <source>ResourceBundle::create &amp;rarr;</source>
          <target state="translated">ResourceBundle :: create&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="7a4d8bc466071aa9770803260f2cd623ad8db732" translate="yes" xml:space="preserve">
          <source>ResourceBundle::create -- resourcebundle_create -- ResourceBundle::__construct &amp;mdash; Create a resource bundle</source>
          <target state="translated">ResourceBundle :: create-resourcebundle_create-ResourceBundle :: __ construct &amp;mdash;创建资源束</target>
        </trans-unit>
        <trans-unit id="77c8df376d1cb6749fe785c85f5f9021c80c7543" translate="yes" xml:space="preserve">
          <source>ResourceBundle::get</source>
          <target state="translated">ResourceBundle::get</target>
        </trans-unit>
        <trans-unit id="6fd50acb194682e4317493bb3ee257f75108b686" translate="yes" xml:space="preserve">
          <source>ResourceBundle::get &amp;rarr;</source>
          <target state="translated">ResourceBundle :: get&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="3d3f5cef3ad370b8e0df55e46a007462dfdbc20a" translate="yes" xml:space="preserve">
          <source>ResourceBundle::get -- resourcebundle_get &amp;mdash; Get data from the bundle</source>
          <target state="translated">ResourceBundle :: get-resourcebundle_get &amp;mdash;从包中获取数据</target>
        </trans-unit>
        <trans-unit id="143df9b195c34435d8f532e170aceafe0fca715d" translate="yes" xml:space="preserve">
          <source>ResourceBundle::getErrorCode</source>
          <target state="translated">ResourceBundle::getErrorCode</target>
        </trans-unit>
        <trans-unit id="94f99ff17ebb319c22654e9e24f04e995fe222af" translate="yes" xml:space="preserve">
          <source>ResourceBundle::getErrorCode &amp;rarr;</source>
          <target state="translated">ResourceBundle :: getErrorCode&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="b3f0f434d0868bb0809c5712b1112b90be5eee6e" translate="yes" xml:space="preserve">
          <source>ResourceBundle::getErrorCode -- resourcebundle_get_error_code &amp;mdash; Get bundle's last error code</source>
          <target state="translated">ResourceBundle :: getErrorCode-resourcebundle_get_error_code &amp;mdash;获取包的最后一个错误代码</target>
        </trans-unit>
        <trans-unit id="c9170441171986999a6a0262c727276a1da3377f" translate="yes" xml:space="preserve">
          <source>ResourceBundle::getErrorMessage</source>
          <target state="translated">ResourceBundle::getErrorMessage</target>
        </trans-unit>
        <trans-unit id="f2ba1a14f9a5887bdb57c36fcb9e151463f75782" translate="yes" xml:space="preserve">
          <source>ResourceBundle::getErrorMessage &amp;rarr;</source>
          <target state="translated">ResourceBundle :: getErrorMessage&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="b1e96c2215fe03f6a8f74130d5e7cd8da33b6f09" translate="yes" xml:space="preserve">
          <source>ResourceBundle::getErrorMessage -- resourcebundle_get_error_message &amp;mdash; Get bundle's last error message</source>
          <target state="translated">ResourceBundle :: getErrorMessage-resourcebundle_get_error_message &amp;mdash;获取包的最后一条错误消息</target>
        </trans-unit>
        <trans-unit id="1a5f6b71c64b9d40fba7d57150c181bec3ab6a78" translate="yes" xml:space="preserve">
          <source>ResourceBundle::getLocales</source>
          <target state="translated">ResourceBundle::getLocales</target>
        </trans-unit>
        <trans-unit id="bb6c68a4f77f37b446bacaa5b5166c3f6141a482" translate="yes" xml:space="preserve">
          <source>ResourceBundle::getLocales &amp;rarr;</source>
          <target state="translated">ResourceBundle :: getLocales&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="53175bd77ab564adda7fa052f9eb20c1166cd728" translate="yes" xml:space="preserve">
          <source>ResourceBundle::getLocales -- resourcebundle_locales &amp;mdash; Get supported locales</source>
          <target state="translated">ResourceBundle :: getLocales-resourcebundle_locales &amp;mdash;获取支持的语言环境</target>
        </trans-unit>
        <trans-unit id="87df60de337fb58864343e396696d74611e0d403" translate="yes" xml:space="preserve">
          <source>Resources</source>
          <target state="translated">Resources</target>
        </trans-unit>
        <trans-unit id="dc39c2600e94e1a2f020ebc7044b04000d8363c3" translate="yes" xml:space="preserve">
          <source>Resources &amp;rarr;</source>
          <target state="translated">资源&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="88c9e45d72e985409130f928d997149ed00b0917" translate="yes" xml:space="preserve">
          <source>Resources are always converted to strings with the structure &lt;code&gt;&quot;Resource id #1&quot;&lt;/code&gt;, where &lt;code&gt;1&lt;/code&gt; is the resource number assigned to the resource by PHP at runtime. While the exact structure of this string should not be relied on and is subject to change, it will always be unique for a given resource within the lifetime of a script being executed (ie a Web request or CLI process) and won't be reused. To get a resource's type, use the &lt;a href=&quot;function.get-resource-type&quot;&gt;get_resource_type()&lt;/a&gt; function.</source>
          <target state="translated">资源始终会转换为结构为 &lt;code&gt;&quot;Resource id #1&quot;&lt;/code&gt; 字符串，其中 &lt;code&gt;1&lt;/code&gt; 是PHP在运行时分配给资源的资源编号。尽管不应依赖于此字符串的确切结构并可能对其进行更改，但在执行脚本（即Web请求或CLI进程）的生命周期内，该资源对于给定资源而言始终是唯一的，并且不会被重用。要获取资源的类型，请使用&lt;a href=&quot;function.get-resource-type&quot;&gt;get_resource_type（）&lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="6e617e4fc9da3de9693eac5990613543b86c63f9" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="translated">Response</target>
        </trans-unit>
        <trans-unit id="21a89a837bfff6b664ce8ad78d66bf178c2ea7e6" translate="yes" xml:space="preserve">
          <source>Response (class)</source>
          <target state="translated">响应(类)</target>
        </trans-unit>
        <trans-unit id="78e68e45ad18070309ce4670675d118be94f9e59" translate="yes" xml:space="preserve">
          <source>Response headers from the Solr server</source>
          <target state="translated">来自Solr服务器的响应头文件</target>
        </trans-unit>
        <trans-unit id="3679f5975cc48e467858a66c23c8a4f9c55e9e61" translate="yes" xml:space="preserve">
          <source>Response headers from the Solr server.</source>
          <target state="translated">来自Solr服务器的响应头。</target>
        </trans-unit>
        <trans-unit id="0862767a4ca1b26a5d2ad81a21beecd2b88ce83e" translate="yes" xml:space="preserve">
          <source>Response::getDigestedResponse</source>
          <target state="translated">Response::getDigestedResponse</target>
        </trans-unit>
        <trans-unit id="f9d83f345eca22b1c069eb9112b4563dcd4c18dd" translate="yes" xml:space="preserve">
          <source>Response::getHttpStatus</source>
          <target state="translated">Response::getHttpStatus</target>
        </trans-unit>
        <trans-unit id="2ee8d69096894104bc0d441038504569488753d5" translate="yes" xml:space="preserve">
          <source>Response::getHttpStatusMessage</source>
          <target state="translated">Response::getHttpStatusMessage</target>
        </trans-unit>
        <trans-unit id="20c8647ba9b93c02d58bec904e5b1de7e7cdc6e4" translate="yes" xml:space="preserve">
          <source>Response::getRawRequest</source>
          <target state="translated">Response::getRawRequest</target>
        </trans-unit>
        <trans-unit id="d240b1fc199f17162b14151a2797c73883510549" translate="yes" xml:space="preserve">
          <source>Response::getRawRequestHeaders</source>
          <target state="translated">Response::getRawRequestHeaders</target>
        </trans-unit>
        <trans-unit id="1982b5a7c7230ffb243f8e871cf8a56aeac1e409" translate="yes" xml:space="preserve">
          <source>Response::getRawResponse</source>
          <target state="translated">Response::getRawResponse</target>
        </trans-unit>
        <trans-unit id="6d0dff576a3fd2145b4fcdca057bb1661977ee69" translate="yes" xml:space="preserve">
          <source>Response::getRawResponseHeaders</source>
          <target state="translated">Response::getRawResponseHeaders</target>
        </trans-unit>
        <trans-unit id="074a7a0b142b0aa7bc25e720e33ce0c073498f2e" translate="yes" xml:space="preserve">
          <source>Response::getRequestUrl</source>
          <target state="translated">Response::getRequestUrl</target>
        </trans-unit>
        <trans-unit id="0befe0559bf08a764358aa5ae95cc5b892763a24" translate="yes" xml:space="preserve">
          <source>Response::getResponse</source>
          <target state="translated">Response::getResponse</target>
        </trans-unit>
        <trans-unit id="93d52bd7f1ab3fcbb96e36a38a53ce4c89116093" translate="yes" xml:space="preserve">
          <source>Response::setParseMode</source>
          <target state="translated">Response::setParseMode</target>
        </trans-unit>
        <trans-unit id="2a196efef2371454f97e06ec37407c20f9196fc8" translate="yes" xml:space="preserve">
          <source>Response::success</source>
          <target state="translated">Response::success</target>
        </trans-unit>
        <trans-unit id="7a7f32be88679ff0c9691dce2233e28200dea213" translate="yes" xml:space="preserve">
          <source>Restore a previously backed up function</source>
          <target state="translated">还原之前备份的功能</target>
        </trans-unit>
        <trans-unit id="52a0fda78601c52de7832ef467faa7969a1329bb" translate="yes" xml:space="preserve">
          <source>Restores a built-in wrapper previously unregistered with &lt;a href=&quot;function.stream-wrapper-unregister&quot;&gt;stream_wrapper_unregister()&lt;/a&gt;.</source>
          <target state="translated">恢复以前未使用&lt;a href=&quot;function.stream-wrapper-unregister&quot;&gt;stream_wrapper_unregister（）&lt;/a&gt;注册的内置包装器。</target>
        </trans-unit>
        <trans-unit id="8fad3868ce4a6470396c5e27e01224405b02d1ee" translate="yes" xml:space="preserve">
          <source>Restores a given configuration option to its original value.</source>
          <target state="translated">将给定的配置选项恢复到其原始值。</target>
        </trans-unit>
        <trans-unit id="518ae392bd449cf6763c0ea1f770cfba1b3c6354" translate="yes" xml:space="preserve">
          <source>Restores the &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.include-path&quot;&gt;include_path&lt;/a&gt; configuration option back to its original master value as set in &lt;var&gt;php.ini&lt;/var&gt;</source>
          <target state="translated">将&lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.include-path&quot;&gt;include_path&lt;/a&gt;配置选项恢复为 &lt;var&gt;php.ini&lt;/var&gt; 中设置的原始主值</target>
        </trans-unit>
        <trans-unit id="18419c93d6118667a2122444d713adfe23973e0a" translate="yes" xml:space="preserve">
          <source>Restores the &lt;a href=&quot;https://www.php.net/manual/en/ini.core.php#ini.include-path&quot;&gt;include_path&lt;/a&gt; configuration option back to its original master value as set in &lt;var&gt;php.ini&lt;/var&gt;</source>
          <target state="translated">将&lt;a href=&quot;https://www.php.net/manual/en/ini.core.php#ini.include-path&quot;&gt;include_path&lt;/a&gt;配置选项恢复为 &lt;var&gt;php.ini&lt;/var&gt; 中设置的原始主值</target>
        </trans-unit>
        <trans-unit id="c8a42ec70ba949059cb5c56bc401bfd776d410b8" translate="yes" xml:space="preserve">
          <source>Restores the soft label keys after &lt;a href=&quot;function.ncurses-slk-clear&quot;&gt;ncurses_slk_clear()&lt;/a&gt; has been performed.</source>
          <target state="translated">在执行&lt;a href=&quot;function.ncurses-slk-clear&quot;&gt;ncurses_slk_clear（）&lt;/a&gt;之后恢复软标签键。</target>
        </trans-unit>
        <trans-unit id="48d1fd49ee8a1ff53b8530f5f1fb0364a6cb0da8" translate="yes" xml:space="preserve">
          <source>Restores the terminal state, which was previously saved by calling &lt;a href=&quot;function.ncurses-savetty&quot;&gt;ncurses_savetty()&lt;/a&gt;.</source>
          <target state="translated">恢复终端状态，该状态先前是通过调用&lt;a href=&quot;function.ncurses-savetty&quot;&gt;ncurses_savetty（）&lt;/a&gt;保存的。</target>
        </trans-unit>
        <trans-unit id="8822e61beaad3eeaf662e1d5d43ee112f71ea35c" translate="yes" xml:space="preserve">
          <source>Restrict matches to terms that start with the prefix</source>
          <target state="translated">限制匹配的术语以前缀开头。</target>
        </trans-unit>
        <trans-unit id="18b565ffb6f095850586e82797f6ebea20d01f20" translate="yes" xml:space="preserve">
          <source>Restricts the color range from 0 to the quantum depth.</source>
          <target state="translated">将颜色范围从0限制到量子深度。</target>
        </trans-unit>
        <trans-unit id="5faa59d4bc3756040b8ce9e673c09f929e6ee9ba" translate="yes" xml:space="preserve">
          <source>Result</source>
          <target state="translated">Result</target>
        </trans-unit>
        <trans-unit id="afb009e598948c258a3ee377b4104f44b28d55d7" translate="yes" xml:space="preserve">
          <source>Result code of the last Memcached operation.</source>
          <target state="translated">最后一次Memcached操作的结果代码。</target>
        </trans-unit>
        <trans-unit id="dc7927f5d63dcb68a67634bc665e6ed77c7620ab" translate="yes" xml:space="preserve">
          <source>Result of raising &lt;var&gt;$a&lt;/var&gt; to the &lt;var&gt;$b&lt;/var&gt;'th power.</source>
          <target state="translated">将 &lt;var&gt;$a&lt;/var&gt; 提升至 &lt;var&gt;$b&lt;/var&gt; '次幂的结果。</target>
        </trans-unit>
        <trans-unit id="7b8fbf594abee2d349a4731a138766d73028f563" translate="yes" xml:space="preserve">
          <source>Result of raising &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; to the &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt;'th power. Introduced in PHP 5.6.</source>
          <target state="translated">将 &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; 提升至 &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; '次幂的结果。在PHP 5.6中引入。</target>
        </trans-unit>
        <trans-unit id="ab4cda0133e44e3799f5a21840e6773f04c0c328" translate="yes" xml:space="preserve">
          <source>Result of the comparison, positive integer if &lt;code&gt;priority1&lt;/code&gt; is greater than &lt;code&gt;priority2&lt;/code&gt;, 0 if they are equal, negative integer otherwise.</source>
          <target state="translated">比较结果，如果 &lt;code&gt;priority1&lt;/code&gt; 大于 &lt;code&gt;priority2&lt;/code&gt; ，则为正整数；如果相等，则为0；否则为负整数。</target>
        </trans-unit>
        <trans-unit id="4311d48fbbadcb1015befca3c70e84b2a08c8153" translate="yes" xml:space="preserve">
          <source>Result of the comparison, positive integer if &lt;code&gt;value1&lt;/code&gt; is greater than &lt;code&gt;value2&lt;/code&gt;, 0 if they are equal, negative integer otherwise.</source>
          <target state="translated">比较的结果，如果 &lt;code&gt;value1&lt;/code&gt; 大于 &lt;code&gt;value2&lt;/code&gt; 则为正整数，如果相等则为0，否则为负整数。</target>
        </trans-unit>
        <trans-unit id="2bf5edb8e42947305bba730bc4804aa226dc6ad3" translate="yes" xml:space="preserve">
          <source>Result of the comparison, positive integer if &lt;code&gt;value1&lt;/code&gt; is lower than &lt;code&gt;value2&lt;/code&gt;, 0 if they are equal, negative integer otherwise.</source>
          <target state="translated">比较的结果，如果 &lt;code&gt;value1&lt;/code&gt; 小于 &lt;code&gt;value2&lt;/code&gt; 则为正整数，如果相等则为0，否则为负整数。</target>
        </trans-unit>
        <trans-unit id="fa0c56ba99d84d3c7c8cd8e2191d3287a4c07d85" translate="yes" xml:space="preserve">
          <source>Result set objects retrieved by calling this method on the same statement object are not independent, but rather share the same underlying structure. Therefore it is recommended to call &lt;a href=&quot;sqlite3result.finalize&quot;&gt;SQLite3Result::finalize()&lt;/a&gt;, before calling &lt;strong&gt;SQLite3Stmt::execute()&lt;/strong&gt; on the same statement object again.</source>
          <target state="translated">通过在同一语句对象上调用此方法而检索到的结果集对象不是独立的，而是共享相同的基础结构。因此，建议在同一语句对象上再次调用&lt;strong&gt;SQLite3Stmt :: execute（）&lt;/strong&gt;之前，先调用&lt;a href=&quot;sqlite3result.finalize&quot;&gt;SQLite3Result :: finalize（）&lt;/a&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e0061e229c417f979a08f83004e0ca1a36dd2c06" translate="yes" xml:space="preserve">
          <source>Result set offset.</source>
          <target state="translated">结果集偏移。</target>
        </trans-unit>
        <trans-unit id="3f6d47e055007ba7fd3743b5d2a1082baf67f94f" translate="yes" xml:space="preserve">
          <source>Results similar to the following when executing &lt;var&gt;/tmp/b.php&lt;/var&gt;:</source>
          <target state="translated">执行 &lt;var&gt;/tmp/b.php&lt;/var&gt; 时，结果类似于以下内容：</target>
        </trans-unit>
        <trans-unit id="7a61aaf7f3cd187564abc0981ebba0b5536791de" translate="yes" xml:space="preserve">
          <source>Retain comments in output.</source>
          <target state="translated">在输出中保留注释。</target>
        </trans-unit>
        <trans-unit id="cfde1a18f5fe30b69d0feade5371656c057a897b" translate="yes" xml:space="preserve">
          <source>Retreives the current address to which the &lt;code&gt;socket&lt;/code&gt; is bound.</source>
          <target state="translated">获取 &lt;code&gt;socket&lt;/code&gt; 绑定到的当前地址。</target>
        </trans-unit>
        <trans-unit id="59bc1ff894f45507f4288f9388851ceedf1a70c3" translate="yes" xml:space="preserve">
          <source>Retreives the current address to which the listener's socket is bound.</source>
          <target state="translated">检索监听器的socket绑定的当前地址。</target>
        </trans-unit>
        <trans-unit id="476176ac253c6c1a38a9591cf2750a62aa882904" translate="yes" xml:space="preserve">
          <source>Retrieve Cookie variable</source>
          <target state="translated">检索Cookie变量</target>
        </trans-unit>
        <trans-unit id="19d4b858cce2ca731d09e121f3643967d3318bc1" translate="yes" xml:space="preserve">
          <source>Retrieve ENV variable</source>
          <target state="translated">检索ENV变量</target>
        </trans-unit>
        <trans-unit id="76676fc17d53a5564117ecb53eb4c07c1991b11b" translate="yes" xml:space="preserve">
          <source>Retrieve GET variable</source>
          <target state="translated">检索GET变量</target>
        </trans-unit>
        <trans-unit id="f93fc59df69abc6e7b65ec1362fc367f2b746079" translate="yes" xml:space="preserve">
          <source>Retrieve POST variable</source>
          <target state="translated">检索POST变量</target>
        </trans-unit>
        <trans-unit id="dd75ab34df1ed8f546aa20545c31760b7b161a91" translate="yes" xml:space="preserve">
          <source>Retrieve Raw request body</source>
          <target state="translated">检索原始请求体</target>
        </trans-unit>
        <trans-unit id="e33bd89ae56194d930d3180ec7db7f57e8f4a411" translate="yes" xml:space="preserve">
          <source>Retrieve SERVER variable</source>
          <target state="translated">检索SERVER变量</target>
        </trans-unit>
        <trans-unit id="b8c713c89d1f617f7b7cd7ead9dc5f0f47ebce97" translate="yes" xml:space="preserve">
          <source>Retrieve Solr Server information</source>
          <target state="translated">检索Solr服务器信息</target>
        </trans-unit>
        <trans-unit id="cb5e596e6377b8cbae7daf25758b4fdd20864d56" translate="yes" xml:space="preserve">
          <source>Retrieve a exists content</source>
          <target state="translated">检索一个存在的内容</target>
        </trans-unit>
        <trans-unit id="ac32b8c41d2bed1fa021232259c12e3a4468bf44" translate="yes" xml:space="preserve">
          <source>Retrieve a part of the match by a rule. This method is equivalent to the pseudo variable functionality in Bison.</source>
          <target state="translated">通过规则检索匹配的一部分。这个方法相当于Bison中的伪变量功能。</target>
        </trans-unit>
        <trans-unit id="88df49a87b7511864eacdc27eccce296700f9d60" translate="yes" xml:space="preserve">
          <source>Retrieve a route by name, see also &lt;a href=&quot;yaf-router.getcurrentroute&quot;&gt;Yaf_Router::getCurrentRoute()&lt;/a&gt;</source>
          <target state="translated">通过名称检索路由，另请参见&lt;a href=&quot;yaf-router.getcurrentroute&quot;&gt;Yaf_Router :: getCurrentRoute（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="556b7e01996c481bf61172df4775733c4388f7d5" translate="yes" xml:space="preserve">
          <source>Retrieve an Apache environment variable specified by &lt;code&gt;variable&lt;/code&gt;.</source>
          <target state="translated">检索由 &lt;code&gt;variable&lt;/code&gt; 指定的Apache环境变量。</target>
        </trans-unit>
        <trans-unit id="921af3c49985214aada563bcb065abb57f5435b5" translate="yes" xml:space="preserve">
          <source>Retrieve an array containing the training parameters. The parameters will be keyed on the predefined SVM constants.</source>
          <target state="translated">检索一个包含训练参数的数组。这些参数将被键入预定义的SVM常量。</target>
        </trans-unit>
        <trans-unit id="f207f8427b49c80203323c5d7b561663cd4a0783" translate="yes" xml:space="preserve">
          <source>Retrieve an item from registry</source>
          <target state="translated">从注册表中检索一个项目</target>
        </trans-unit>
        <trans-unit id="904cc63aa85159cd3732e571c240c65d55bda87e" translate="yes" xml:space="preserve">
          <source>Retrieve archive meta-data. Meta-data can be any PHP variable that can be serialized.</source>
          <target state="translated">检索归档元数据,元数据可以是任何PHP变量,可以序列化。元数据可以是任何可以序列化的PHP变量。</target>
        </trans-unit>
        <trans-unit id="c26defb6b4f1fa481e25ee0985015f0bf12217bf" translate="yes" xml:space="preserve">
          <source>Retrieve array of errors.</source>
          <target state="translated">检索错误数组。</target>
        </trans-unit>
        <trans-unit id="a8cc6899926092d47617d807017495fb40eb4064" translate="yes" xml:space="preserve">
          <source>Retrieve assigned varaiable</source>
          <target state="translated">检索分配的可变因素</target>
        </trans-unit>
        <trans-unit id="684a0ae21ba857f38c27ae8628f09b6948022e8c" translate="yes" xml:space="preserve">
          <source>Retrieve data from the socket, but do not consume the buffer. Subsequent calls to &lt;a href=&quot;function.fread&quot;&gt;fread()&lt;/a&gt; or &lt;strong&gt;stream_socket_recvfrom()&lt;/strong&gt; will see the same data.</source>
          <target state="translated">从套接字检索数据，但不占用缓冲区。后续对&lt;a href=&quot;function.fread&quot;&gt;fread（）&lt;/a&gt;或&lt;strong&gt;stream_socket_recvfrom（）的&lt;/strong&gt;调用将看到相同的数据。</target>
        </trans-unit>
        <trans-unit id="caeba4194abe4b0b6f755352b49afd33179d41a8" translate="yes" xml:space="preserve">
          <source>Retrieve details settings or only the current value for each setting. Default is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; (retrieve details).</source>
          <target state="translated">检索详细信息设置或仅检索每个设置的当前值。默认值为&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;（检索详细信息）。</target>
        </trans-unit>
        <trans-unit id="39c43232672da886085d837d5be85d95dfdc6f5e" translate="yes" xml:space="preserve">
          <source>Retrieve details settings or only the current value for each setting. Default is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; (retrieve details).</source>
          <target state="translated">检索详细信息设置或仅检索每个设置的当前值。默认值为&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;（检索详细信息）。</target>
        </trans-unit>
        <trans-unit id="8e00e5f1c6801142ee1adf1df233c9bf81a55454" translate="yes" xml:space="preserve">
          <source>Retrieve information about parameters to procedures.</source>
          <target state="translated">检索程序的参数信息。</target>
        </trans-unit>
        <trans-unit id="3fa1a9e9fb3b26320be48dd183b7a4fce92afde7" translate="yes" xml:space="preserve">
          <source>Retrieve internal configuration variables of iconv extension.</source>
          <target state="translated">读取iconv扩展的内部配置变量。</target>
        </trans-unit>
        <trans-unit id="1098e72d0aa8e079eadb8b46d3fad7c7ea1ca555" translate="yes" xml:space="preserve">
          <source>Retrieve last error from libxml.</source>
          <target state="translated">从libxml中检索最后一个错误。</target>
        </trans-unit>
        <trans-unit id="712c1c78068236e6eabdb25869f2412a56149345" translate="yes" xml:space="preserve">
          <source>Retrieve list of registered streams available on the running system.</source>
          <target state="translated">检索运行系统中可用的注册流列表。</target>
        </trans-unit>
        <trans-unit id="4fa502181fc309be5c20bc8b62bf99c2b51a5682" translate="yes" xml:space="preserve">
          <source>Retrieve number of entries in the result.</source>
          <target state="translated">检索结果中的条目数。</target>
        </trans-unit>
        <trans-unit id="0cce74209cfa1d030c9cde2820e66fd5b93b0590" translate="yes" xml:space="preserve">
          <source>Retrieve registered routes</source>
          <target state="translated">检索已登记的途径</target>
        </trans-unit>
        <trans-unit id="5cec6d4a46b83d5dc0ab5c48a683b60dbf1cc8a9" translate="yes" xml:space="preserve">
          <source>Retrieve the &lt;a href=&quot;class.yaf-application&quot;&gt;Yaf_Application&lt;/a&gt; instance. Alternatively, we also could use &lt;a href=&quot;yaf-dispatcher.getapplication&quot;&gt;Yaf_Dispatcher::getApplication()&lt;/a&gt;.</source>
          <target state="translated">检索&lt;a href=&quot;class.yaf-application&quot;&gt;Yaf_Application&lt;/a&gt;实例。另外，我们也可以使用&lt;a href=&quot;yaf-dispatcher.getapplication&quot;&gt;Yaf_Dispatcher :: getApplication（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1ea379463fc25bb988c2e3c31e2368d154fcef95" translate="yes" xml:space="preserve">
          <source>Retrieve the contents of the cache.</source>
          <target state="translated">检索缓存的内容。</target>
        </trans-unit>
        <trans-unit id="4486f45d74bf07527423dc46871e4c47c666e029" translate="yes" xml:space="preserve">
          <source>Retrieve the current parser operation description. This can be especially useful for studying the parser and to optimize the grammar.</source>
          <target state="translated">检索当前解析器的操作描述。这对于研究解析器和优化语法特别有用。</target>
        </trans-unit>
        <trans-unit id="2fd1b40ee1bcd0fb2a9d5792feaed26ad204c887" translate="yes" xml:space="preserve">
          <source>Retrieve the current parser operation description. This can be especially useful to study the parser and to optimize the grammar.</source>
          <target state="translated">检索当前解析器的操作描述。这对研究解析器和优化语法特别有用。</target>
        </trans-unit>
        <trans-unit id="bc6e04d83a4a03b9bebefeb0f4563d7fb66fde47" translate="yes" xml:space="preserve">
          <source>Retrieve the current token.</source>
          <target state="translated">检索当前令牌。</target>
        </trans-unit>
        <trans-unit id="746f00b108e5011b9b11ced025566a675c5a6633" translate="yes" xml:space="preserve">
          <source>Retrieve the entries stored in the result. Successive calls to the &lt;strong&gt;ldap_next_entry()&lt;/strong&gt; return entries one by one till there are no more entries. The first call to &lt;strong&gt;ldap_next_entry()&lt;/strong&gt; is made after the call to &lt;a href=&quot;function.ldap-first-entry&quot;&gt;ldap_first_entry()&lt;/a&gt; with the &lt;code&gt;result&lt;/code&gt; as returned from the &lt;a href=&quot;function.ldap-first-entry&quot;&gt;ldap_first_entry()&lt;/a&gt;.</source>
          <target state="translated">检索存储在结果中的条目。连续调用&lt;strong&gt;ldap_next_entry（）会&lt;/strong&gt;逐个返回条目，直到没有更多条目为止。对&lt;strong&gt;ldap_next_entry（）&lt;/strong&gt;的首次调用是在对&lt;a href=&quot;function.ldap-first-entry&quot;&gt;ldap_first_entry（）&lt;/a&gt;的调用之后进行的，其 &lt;code&gt;result&lt;/code&gt; 是从&lt;a href=&quot;function.ldap-first-entry&quot;&gt;ldap_first_entry（）&lt;/a&gt;返回的。</target>
        </trans-unit>
        <trans-unit id="4204bc5867f7c1e5fdc92c5b8b67a4bcf30baef0" translate="yes" xml:space="preserve">
          <source>Retrieve the entries stored in the result. Successive calls to the &lt;strong&gt;ldap_next_entry()&lt;/strong&gt; return entries one by one till there are no more entries. The first call to &lt;strong&gt;ldap_next_entry()&lt;/strong&gt; is made after the call to &lt;a href=&quot;function.ldap-first-entry&quot;&gt;ldap_first_entry()&lt;/a&gt; with the &lt;code&gt;result_entry_identifier&lt;/code&gt; as returned from the &lt;a href=&quot;function.ldap-first-entry&quot;&gt;ldap_first_entry()&lt;/a&gt;.</source>
          <target state="translated">检索存储在结果中的条目。连续调用&lt;strong&gt;ldap_next_entry（）会&lt;/strong&gt;逐个返回条目，直到没有更多条目为止。第一个电话&lt;strong&gt;ldap_next_entry（）&lt;/strong&gt;被调用后作出&lt;a href=&quot;function.ldap-first-entry&quot;&gt;ldap_first_entry（）&lt;/a&gt;与 &lt;code&gt;result_entry_identifier&lt;/code&gt; 从返回&lt;a href=&quot;function.ldap-first-entry&quot;&gt;ldap_first_entry（） &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="76d4a62fc60e0ed12ddf00a840bfee21ff6934f6" translate="yes" xml:space="preserve">
          <source>Retrieve the error information in case &lt;strong&gt;Parle\Parser::action()&lt;/strong&gt; returned the error action.</source>
          <target state="translated">如果&lt;strong&gt;Parle \ Parser :: action（）&lt;/strong&gt;返回错误操作，则检索错误信息。</target>
        </trans-unit>
        <trans-unit id="558d8025670bf7bb76a3e4add7ee02c4cbe71ed5" translate="yes" xml:space="preserve">
          <source>Retrieve the error information in case &lt;strong&gt;Parle\RParser::action()&lt;/strong&gt; returned the error action.</source>
          <target state="translated">如果&lt;strong&gt;Parle \ RParser :: action（）&lt;/strong&gt;返回错误操作，则检索错误信息。</target>
        </trans-unit>
        <trans-unit id="5e3ac1f11538f249e5eac5a91f3d81cecac4d1b3" translate="yes" xml:space="preserve">
          <source>Retrieve the error number set by the last posix function that failed. The system error message associated with the errno may be checked with &lt;a href=&quot;function.posix-strerror&quot;&gt;posix_strerror()&lt;/a&gt;.</source>
          <target state="translated">检索由最后一个posix函数设置的错误号。可以使用&lt;a href=&quot;function.posix-strerror&quot;&gt;posix_strerror（）&lt;/a&gt;检查与errno相关的系统错误消息。</target>
        </trans-unit>
        <trans-unit id="019c1e20446b613374b4cc7ccb2a1fcadce2f3c7" translate="yes" xml:space="preserve">
          <source>Retrieve the external attributes of an entry defined by its index.</source>
          <target state="translated">检索由其索引定义的条目的外部属性。</target>
        </trans-unit>
        <trans-unit id="170cfb0efb18d2b51e253aa0d363fb5a09a49420" translate="yes" xml:space="preserve">
          <source>Retrieve the external attributes of an entry defined by its name.</source>
          <target state="translated">检索名称定义的条目的外部属性。</target>
        </trans-unit>
        <trans-unit id="3753930083eed43ab8cd680b2542b2493410b5f2" translate="yes" xml:space="preserve">
          <source>Retrieve the id of the named token.</source>
          <target state="translated">检索命名标记的id。</target>
        </trans-unit>
        <trans-unit id="b1c18aff243d71a32c49b739a938198f5fd111c9" translate="yes" xml:space="preserve">
          <source>Retrieve the list of registered filters on the running system.</source>
          <target state="translated">检索运行系统中注册的过滤器列表。</target>
        </trans-unit>
        <trans-unit id="3462297a3beca142ccc0fdb80282a554380856bd" translate="yes" xml:space="preserve">
          <source>Retrieve the pagination information send by the server.</source>
          <target state="translated">检索服务器发送的分页信息。</target>
        </trans-unit>
        <trans-unit id="e4664121e5a8985dcf7330af630a5ca7ff6e40e3" translate="yes" xml:space="preserve">
          <source>Retrieve the quota level settings, and usage statics per mailbox.</source>
          <target state="translated">检索配额级别设置,以及每个邮箱的使用统计。</target>
        </trans-unit>
        <trans-unit id="3633ec089d6de735b439e3a54b74743ce027a7a3" translate="yes" xml:space="preserve">
          <source>Retrieve the quota settings per user. The limit value represents the total amount of space allowed for this user's total mailbox usage. The usage value represents the user's current total mailbox capacity.</source>
          <target state="translated">检索每个用户的配额设置。限额值代表该用户的邮箱总使用量所允许的总空间。使用量值代表该用户当前的邮箱总容量。</target>
        </trans-unit>
        <trans-unit id="eae7887efbbfeff5299bb1ca1fbc4d35e5672cd4" translate="yes" xml:space="preserve">
          <source>Retrieve the result from the last multibyte regular expression match</source>
          <target state="translated">检索最后一个多字节正则表达式匹配的结果。</target>
        </trans-unit>
        <trans-unit id="c2bc13101d65375f19170f821f56116f6123a64e" translate="yes" xml:space="preserve">
          <source>Retrieve values from cache</source>
          <target state="translated">从缓存中检索值</target>
        </trans-unit>
        <trans-unit id="fa2b3605e59864408eac2d7e5a22c45856b29bcc" translate="yes" xml:space="preserve">
          <source>Retrieve variable from client, this method will search the &lt;code&gt;name&lt;/code&gt; in request pramas, if the name is not found, then will search in POST, GET, Cookie, Server</source>
          <target state="translated">从客户端检索变量，此方法将在请求pramas中搜索 &lt;code&gt;name&lt;/code&gt; ，如果未找到名称，则将在POST，GET，Cookie，Server中搜索</target>
        </trans-unit>
        <trans-unit id="7da2f700e65e8f44fe2f0486fd661a09e3f57e0e" translate="yes" xml:space="preserve">
          <source>Retrieves APC's Shared Memory Allocation information.</source>
          <target state="translated">检索APC的共享内存分配信息。</target>
        </trans-unit>
        <trans-unit id="5a6765aa44cd2c48053afbaed21376cb4c82c09a" translate="yes" xml:space="preserve">
          <source>Retrieves APCu Shared Memory Allocation information.</source>
          <target state="translated">检索APCu共享内存分配信息。</target>
        </trans-unit>
        <trans-unit id="e67925fa4ab6eb67af317a83100ba9c02114a6fc" translate="yes" xml:space="preserve">
          <source>Retrieves a field by name.</source>
          <target state="translated">按名称检索字段。</target>
        </trans-unit>
        <trans-unit id="db50aa5f0f8bb70ba55ca7e0c50627c91fb9c279" translate="yes" xml:space="preserve">
          <source>Retrieves a field in the document.</source>
          <target state="translated">检索文档中的字段。</target>
        </trans-unit>
        <trans-unit id="e0dd27ca819464699b4fb857c3449c168053318f" translate="yes" xml:space="preserve">
          <source>Retrieves a list of foreign keys in the specified table or a list of foreign keys in other tables that refer to the primary key in the specified table</source>
          <target state="translated">检索指定表格中的外键列表或其他表格中引用指定表格中主键的外键列表。</target>
        </trans-unit>
        <trans-unit id="2a00a1413a5a466471b9647e3cf28902521b4e75" translate="yes" xml:space="preserve">
          <source>Retrieves a node specified by &lt;code&gt;index&lt;/code&gt; within the &lt;a href=&quot;class.domnamednodemap&quot;&gt;DOMNamedNodeMap&lt;/a&gt; object.</source>
          <target state="translated">检索由指定的节点 &lt;code&gt;index&lt;/code&gt; 的内&lt;a href=&quot;class.domnamednodemap&quot;&gt;DOMNamedNodeMap&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="1abf63799989c1f4704a2f29a46f095316850bff" translate="yes" xml:space="preserve">
          <source>Retrieves a node specified by &lt;code&gt;index&lt;/code&gt; within the &lt;a href=&quot;class.domnodelist&quot;&gt;DOMNodeList&lt;/a&gt; object.</source>
          <target state="translated">检索由&lt;a href=&quot;class.domnodelist&quot;&gt;DOMNodeList&lt;/a&gt;对象内的 &lt;code&gt;index&lt;/code&gt; 指定的节点。</target>
        </trans-unit>
        <trans-unit id="bd20766f1304194874c852d1430f2ea47ba36102" translate="yes" xml:space="preserve">
          <source>Retrieves a node specified by &lt;code&gt;localName&lt;/code&gt; and &lt;code&gt;namespaceURI&lt;/code&gt;.</source>
          <target state="translated">检索由 &lt;code&gt;localName&lt;/code&gt; 和 &lt;code&gt;namespaceURI&lt;/code&gt; 指定的节点。</target>
        </trans-unit>
        <trans-unit id="5e4cda928248055c3af5eb4316bf4ec873cbb4b2" translate="yes" xml:space="preserve">
          <source>Retrieves a node specified by its &lt;code&gt;nodeName&lt;/code&gt;.</source>
          <target state="translated">检索由其 &lt;code&gt;nodeName&lt;/code&gt; 指定的节点。</target>
        </trans-unit>
        <trans-unit id="f7969847a98b8a6cf94968165e3625d8947b12e1" translate="yes" xml:space="preserve">
          <source>Retrieves a node specified by its &lt;em&gt;nodeName&lt;/em&gt;.</source>
          <target state="translated">检索由其&lt;em&gt;nodeName&lt;/em&gt;指定的节点。</target>
        </trans-unit>
        <trans-unit id="85bff8cc664103c4c8442d0116fd08ea886a60ba" translate="yes" xml:space="preserve">
          <source>Retrieves authentication parameter at &lt;code&gt;key&lt;/code&gt;. For a list of valid keys and their meanings, consult the &lt;a href=&quot;https://www.php.net/manual/en/svn.constants.php#svn.constants.auth&quot;&gt;authentication constants list&lt;/a&gt;.</source>
          <target state="translated">检索 &lt;code&gt;key&lt;/code&gt; 处的身份验证参数。有关有效密钥及其含义的&lt;a href=&quot;https://www.php.net/manual/en/svn.constants.php#svn.constants.auth&quot;&gt;列表&lt;/a&gt;，请参阅认证常数列表。</target>
        </trans-unit>
        <trans-unit id="3f86bbd5d6b8df7510f83791d58dff6d75c1d4d3" translate="yes" xml:space="preserve">
          <source>Retrieves cached information and meta-data from APC's data store.</source>
          <target state="translated">从APC的数据存储中检索缓存信息和元数据。</target>
        </trans-unit>
        <trans-unit id="208623a8777bbdee79e94f7bfb6dfe111abf7fad" translate="yes" xml:space="preserve">
          <source>Retrieves description of the current cipher by means of the &lt;code&gt;SSL_CIPHER_description&lt;/code&gt; SSL API function (see &lt;em&gt;SSL_CIPHER_get_name(3)&lt;/em&gt; man page).</source>
          <target state="translated">通过 &lt;code&gt;SSL_CIPHER_description&lt;/code&gt; SSL API函数检索当前密码的描述（请参见&lt;em&gt;SSL_CIPHER_get_name（3）&lt;/em&gt;手册页）。</target>
        </trans-unit>
        <trans-unit id="d23e202631f3ed128d970962936508a6793e8964" translate="yes" xml:space="preserve">
          <source>Retrieves description of the current cipher by means of the &lt;em&gt;SSL_CIPHER_description&lt;/em&gt; SSL API function (see &lt;em&gt;SSL_CIPHER_get_name(3)&lt;/em&gt; man page).</source>
          <target state="translated">通过&lt;em&gt;SSL_CIPHER_description&lt;/em&gt; SSL API函数检索当前密码的描述（请参见&lt;em&gt;SSL_CIPHER_get_name（3）&lt;/em&gt;手册页）。</target>
        </trans-unit>
        <trans-unit id="29f0e9c359565cf3af896481ccd7a9714bcc3144" translate="yes" xml:space="preserve">
          <source>Retrieves either the optimal set of columns that uniquely identifies a row in the table, or columns that are automatically updated when any value in the row is updated by a transaction.</source>
          <target state="translated">检索表中唯一标识行的最优列集,或者当行中任何值被事务更新时自动更新的列。</target>
        </trans-unit>
        <trans-unit id="2813f62a57ddff4bcd13fc294ead429571b9706d" translate="yes" xml:space="preserve">
          <source>Retrieves information about cached mappings between relative file paths and corresponding absolute file paths.</source>
          <target state="translated">检索相对文件路径和对应绝对文件路径之间的缓存映射信息。</target>
        </trans-unit>
        <trans-unit id="0fd963541dc562d9945b875e8ad9fc0736790c6d" translate="yes" xml:space="preserve">
          <source>Retrieves information about data stored in the user cache.</source>
          <target state="translated">检索存储在用户缓存中的数据信息。</target>
        </trans-unit>
        <trans-unit id="13e565fe5afd5ff744ecd88158a701defca8baf4" translate="yes" xml:space="preserve">
          <source>Retrieves information about data types supported by the data source.</source>
          <target state="translated">检索数据源支持的数据类型信息。</target>
        </trans-unit>
        <trans-unit id="ee8dc3e96ddc09bfd21f3196e24ef38d71adb41f" translate="yes" xml:space="preserve">
          <source>Retrieves information about file cache content and its usage.</source>
          <target state="translated">检索文件缓存内容及其使用情况的信息。</target>
        </trans-unit>
        <trans-unit id="ee3f02232ef49080d02bc3e5ccd5ef1fbfce4fb6" translate="yes" xml:space="preserve">
          <source>Retrieves information about memory usage by file cache.</source>
          <target state="translated">检索文件缓存的内存使用信息。</target>
        </trans-unit>
        <trans-unit id="6af82b3228c512e6205146fca7a40813bb5fd418" translate="yes" xml:space="preserve">
          <source>Retrieves information about memory usage by opcode cache.</source>
          <target state="translated">检索操作码缓存的内存使用信息。</target>
        </trans-unit>
        <trans-unit id="a881fbbc5a90e1138a0974e8f1f48466460540dc" translate="yes" xml:space="preserve">
          <source>Retrieves information about memory usage by resolve file path cache.</source>
          <target state="translated">通过解析文件路径缓存来获取内存使用信息。</target>
        </trans-unit>
        <trans-unit id="f513929d7566beba2915302437cf04f78a7c1cbc" translate="yes" xml:space="preserve">
          <source>Retrieves information about memory usage by session cache.</source>
          <target state="translated">检索会话缓存的内存使用信息。</target>
        </trans-unit>
        <trans-unit id="1d5de803643dfedc20c96576e2c663b9c8565458" translate="yes" xml:space="preserve">
          <source>Retrieves information about memory usage by user cache.</source>
          <target state="translated">检索用户缓存的内存使用信息。</target>
        </trans-unit>
        <trans-unit id="e756cb550ccc75d98010cdc4b2ffe0e8296602e2" translate="yes" xml:space="preserve">
          <source>Retrieves information about opcode cache content and its usage.</source>
          <target state="translated">检索操作码缓存内容及其使用信息。</target>
        </trans-unit>
        <trans-unit id="456912277ef27889fe1f60172d85b71143a1b7ca" translate="yes" xml:space="preserve">
          <source>Retrieves information about session cache content and its usage.</source>
          <target state="translated">检索会话缓存内容及其使用情况的信息。</target>
        </trans-unit>
        <trans-unit id="c9ae9f0c2d634c7796bb3decce4c9492de37818b" translate="yes" xml:space="preserve">
          <source>Retrieves metadata for the fields of a statement prepared by &lt;a href=&quot;function.sqlsrv-prepare&quot;&gt;sqlsrv_prepare()&lt;/a&gt; or &lt;a href=&quot;function.sqlsrv-query&quot;&gt;sqlsrv_query()&lt;/a&gt;. &lt;strong&gt;sqlsrv_field_metadata()&lt;/strong&gt; can be called on a statement before or after statement execution.</source>
          <target state="translated">检索由&lt;a href=&quot;function.sqlsrv-prepare&quot;&gt;sqlsrv_prepare（）&lt;/a&gt;或&lt;a href=&quot;function.sqlsrv-query&quot;&gt;sqlsrv_query（）&lt;/a&gt;准备的语句字段的元数据。可以在语句执行之前或之后在语句上调用&lt;strong&gt;sqlsrv_field_metadata（）&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="5a067de925bcc120b2ec6e0d28f711027bd70e09" translate="yes" xml:space="preserve">
          <source>Retrieves name of cipher used by current SSL connection.</source>
          <target state="translated">检索当前SSL连接使用的密码名称。</target>
        </trans-unit>
        <trans-unit id="66119ca92befc9965777e3727ab9bf42d11809e7" translate="yes" xml:space="preserve">
          <source>Retrieves parameter and options information from the stream or context.</source>
          <target state="translated">从流或上下文中检索参数和选项信息。</target>
        </trans-unit>
        <trans-unit id="f235502d2ced20662cd5e5035f4bd632c93ddb3a" translate="yes" xml:space="preserve">
          <source>Retrieves reflected constants.</source>
          <target state="translated">检索反射常数。</target>
        </trans-unit>
        <trans-unit id="a946cbefbeee3a6e80b7a2de56b1c496980692a9" translate="yes" xml:space="preserve">
          <source>Retrieves reflected properties.</source>
          <target state="translated">检索反射属性。</target>
        </trans-unit>
        <trans-unit id="86e198b89c3ee6e17a5b35d135df7c0d2db33516" translate="yes" xml:space="preserve">
          <source>Retrieves terminal error information from the referenced object</source>
          <target state="translated">检索被引用对象的终端错误信息。</target>
        </trans-unit>
        <trans-unit id="9d2850368848f7066317657fe2f5c9d1ea4921aa" translate="yes" xml:space="preserve">
          <source>Retrieves the SQL of the prepared statement. If &lt;code&gt;expanded&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;, the unmodified SQL is retrieved. If &lt;code&gt;expanded&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, all query parameters are replaced with their bound values, or with an SQL &lt;code&gt;NULL&lt;/code&gt;, if not already bound.</source>
          <target state="translated">检索准备好的语句的SQL。如果 &lt;code&gt;expanded&lt;/code&gt; 为&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;，则检索未修改的SQL。如果 &lt;code&gt;expanded&lt;/code&gt; 为&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;，则所有查询参数都将替换为其绑定值，如果尚未绑定，则替换为SQL &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d238bcf3016e21a2dc9afb800b7e57fc7ea105d9" translate="yes" xml:space="preserve">
          <source>Retrieves the attributes in an entry. The first call to &lt;strong&gt;ldap_next_attribute()&lt;/strong&gt; is made with the &lt;code&gt;entry&lt;/code&gt; returned from &lt;a href=&quot;function.ldap-first-attribute&quot;&gt;ldap_first_attribute()&lt;/a&gt;.</source>
          <target state="translated">检索条目中的属性。&lt;strong&gt;ldap_next_attribute（）&lt;/strong&gt;的第一次调用是使用&lt;a href=&quot;function.ldap-first-attribute&quot;&gt;ldap_first_attribute（）&lt;/a&gt;返回的 &lt;code&gt;entry&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e0b29e748a97dd0452bc61a394266ae95f97102" translate="yes" xml:space="preserve">
          <source>Retrieves the attributes in an entry. The first call to &lt;strong&gt;ldap_next_attribute()&lt;/strong&gt; is made with the &lt;code&gt;result_entry_identifier&lt;/code&gt; returned from &lt;a href=&quot;function.ldap-first-attribute&quot;&gt;ldap_first_attribute()&lt;/a&gt;.</source>
          <target state="translated">检索条目中的属性。&lt;strong&gt;ldap_next_attribute（）&lt;/strong&gt;的第一次调用是使用从&lt;a href=&quot;function.ldap-first-attribute&quot;&gt;ldap_first_attribute（）&lt;/a&gt;返回的 &lt;code&gt;result_entry_identifier&lt;/code&gt; 进行的。</target>
        </trans-unit>
        <trans-unit id="928e4841ff425d5307faa14026648835c4eb037f" translate="yes" xml:space="preserve">
          <source>Retrieves the boost value for a particular field.</source>
          <target state="translated">检索特定字段的提升值。</target>
        </trans-unit>
        <trans-unit id="ec4355eaa3a15c2f1602db75841752dfb5f4bd51" translate="yes" xml:space="preserve">
          <source>Retrieves the current boost value for the document.</source>
          <target state="translated">检索文档的当前提升值。</target>
        </trans-unit>
        <trans-unit id="71f3fa7fc06f4137f6bb392ae3b358cd01554ada" translate="yes" xml:space="preserve">
          <source>Retrieves the current field</source>
          <target state="translated">检索当前字段</target>
        </trans-unit>
        <trans-unit id="3e2812fc9fada03e0ecf63cd433ef3e14f417d39" translate="yes" xml:space="preserve">
          <source>Retrieves the current key.</source>
          <target state="translated">检索当前密钥。</target>
        </trans-unit>
        <trans-unit id="4db48520effc797ea0a39317655374f75c715890" translate="yes" xml:space="preserve">
          <source>Retrieves the current line of the file.</source>
          <target state="translated">检索文件的当前行。</target>
        </trans-unit>
        <trans-unit id="1e0c35bf52d7a088edf1db44aa2b00b0ca567f8d" translate="yes" xml:space="preserve">
          <source>Retrieves the current line of the file. If the &lt;strong&gt;&lt;code&gt;SplFileObject::READ_CSV&lt;/code&gt;&lt;/strong&gt; flag is set, this method returns an array containing the current line parsed as CSV data.</source>
          <target state="translated">检索文件的当前行。如果设置了&lt;strong&gt; &lt;code&gt;SplFileObject::READ_CSV&lt;/code&gt; &lt;/strong&gt;标志，则此方法返回一个数组，其中包含已解析为CSV数据的当前行。</target>
        </trans-unit>
        <trans-unit id="b1e068457608a0218c2a1eae603b951472a683c2" translate="yes" xml:space="preserve">
          <source>Retrieves the file extension.</source>
          <target state="translated">检索文件扩展名。</target>
        </trans-unit>
        <trans-unit id="66c8628d4706601bfb4cac3e1293ed6a03297227" translate="yes" xml:space="preserve">
          <source>Retrieves the foreground and background colors that constitute the given color pair. Terminal color capabilities must be initialized with &lt;a href=&quot;function.ncurses-start-color&quot;&gt;ncurses_start_color()&lt;/a&gt; prior to calling this function.</source>
          <target state="translated">检索构成给定颜色对的前景色和背景色。在调用此函数之前，必须使用&lt;a href=&quot;function.ncurses-start-color&quot;&gt;ncurses_start_color（）&lt;/a&gt;初始化终端颜色功能。</target>
        </trans-unit>
        <trans-unit id="82ffa3580fae76501be1434316b89189906ed0f4" translate="yes" xml:space="preserve">
          <source>Retrieves the last set exit status, i.e. the value passed to &lt;a href=&quot;function.exit&quot;&gt;exit()&lt;/a&gt;.</source>
          <target state="translated">检索最后设置的退出状态，即传递给&lt;a href=&quot;function.exit&quot;&gt;exit（）&lt;/a&gt;的值。</target>
        </trans-unit>
        <trans-unit id="1d12aee0f6e09c2a510c9bb2dbaf7fa5f067be1f" translate="yes" xml:space="preserve">
          <source>Retrieves the message for the last error.</source>
          <target state="translated">检索最后一个错误的信息。</target>
        </trans-unit>
        <trans-unit id="28cd5f51d72366f92ad756764f4a2e3dcf4afb2a" translate="yes" xml:space="preserve">
          <source>Retrieves the metadata for a 0-indexed column in a result set as an associative array.</source>
          <target state="translated">以关联数组的形式检索结果集中0索引列的元数据。</target>
        </trans-unit>
        <trans-unit id="f1316bfffa2dabea38f0e2d5c9807ae8cb258f5e" translate="yes" xml:space="preserve">
          <source>Retrieves the name of a Unicode character.</source>
          <target state="translated">检索Unicode字符的名称。</target>
        </trans-unit>
        <trans-unit id="05527d794da0b50027ef59c6bfa93d6ae5782792" translate="yes" xml:space="preserve">
          <source>Retrieves the next row of data in a result set as an instance of the specified class with properties that match the row field names and values that correspond to the row field values.</source>
          <target state="translated">检索结果集中的下一行数据,作为指定类的实例,其属性与行字段名和值相匹配。</target>
        </trans-unit>
        <trans-unit id="ef77e1dbf936072c4eb41867db9c4edf8c3274e1" translate="yes" xml:space="preserve">
          <source>Retrieves the number of fields (columns) on a statement.</source>
          <target state="translated">检索报表的字段数(列数)。</target>
        </trans-unit>
        <trans-unit id="c600fdd33788508cda2bac2e4019cf97d1fbd42e" translate="yes" xml:space="preserve">
          <source>Retrieves the number of rows in a result set. This function requires that the statement resource be created with a static or keyset cursor. For more information, see &lt;a href=&quot;function.sqlsrv-query&quot;&gt;sqlsrv_query()&lt;/a&gt;, &lt;a href=&quot;function.sqlsrv-prepare&quot;&gt;sqlsrv_prepare()&lt;/a&gt;, or &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ee376927.aspx&quot;&gt;&amp;raquo; Specifying a Cursor Type and Selecting Rows&lt;/a&gt; in the Microsoft SQLSRV documentation.</source>
          <target state="translated">检索结果集中的行数。此函数要求使用静态或键集游标创建语句资源。有关更多信息，请参见&lt;a href=&quot;function.sqlsrv-query&quot;&gt;sqlsrv_query（）&lt;/a&gt;，&lt;a href=&quot;function.sqlsrv-prepare&quot;&gt;sqlsrv_prepare（）&lt;/a&gt;或&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ee376927.aspx&quot;&gt;&amp;raquo;&lt;/a&gt; Microsoft SQLSRV文档中的&amp;ldquo;指定游标类型并选择行&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="166e593718cb3a6f752eed712fd545fc59f8cfa4" translate="yes" xml:space="preserve">
          <source>Retrieves the number of rows in a result set. This function requires that the statement resource be created with a static or keyset cursor. For more information, see &lt;a href=&quot;function.sqlsrv-query&quot;&gt;sqlsrv_query()&lt;/a&gt;, &lt;a href=&quot;function.sqlsrv-prepare&quot;&gt;sqlsrv_prepare()&lt;/a&gt;, or &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ee376927.aspx&quot;&gt;&amp;raquo; Specifying a Cursor Type and Selecting Rows&lt;/a&gt; in the Microsoft SQLSRV documentation.</source>
          <target state="translated">检索结果集中的行数。此函数要求使用静态或键集游标创建语句资源。有关更多信息，请参见&lt;a href=&quot;function.sqlsrv-query&quot;&gt;sqlsrv_query（）&lt;/a&gt;，&lt;a href=&quot;function.sqlsrv-prepare&quot;&gt;sqlsrv_prepare（）&lt;/a&gt;或&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ee376927.aspx&quot;&gt;&amp;raquo;&lt;/a&gt; Microsoft SQLSRV文档中的&amp;ldquo;指定游标类型并选择行&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="7db680497498aaa23343ccc46c59097aba651446" translate="yes" xml:space="preserve">
          <source>Retrieves the number of rows in a result set. This function requires that the statment resource be created with a static or keyset cursor. For more information, see &lt;a href=&quot;function.sqlsrv-query&quot;&gt;sqlsrv_query()&lt;/a&gt;, &lt;a href=&quot;function.sqlsrv-prepare&quot;&gt;sqlsrv_prepare()&lt;/a&gt;, or &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ee376927.aspx&quot;&gt;&amp;raquo; Specifying a Cursor Type and Selecting Rows&lt;/a&gt; in the Microsoft SQLSRV documentation.</source>
          <target state="translated">检索结果集中的行数。此功能要求使用静态或键集游标创建陈述资源。有关更多信息，请参见&lt;a href=&quot;function.sqlsrv-query&quot;&gt;sqlsrv_query（）&lt;/a&gt;，&lt;a href=&quot;function.sqlsrv-prepare&quot;&gt;sqlsrv_prepare（）&lt;/a&gt;或&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ee376927.aspx&quot;&gt;&amp;raquo;&lt;/a&gt; Microsoft SQLSRV文档中的&amp;ldquo; 指定游标类型并选择行 &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="7574bb0277dfcacdafc612ce9513f4bc02f24a99" translate="yes" xml:space="preserve">
          <source>Retrieves the parent class name for object or class.</source>
          <target state="translated">检索对象或类的父类名。</target>
        </trans-unit>
        <trans-unit id="26fc9c1047c1cca7460d565d76e5f864eb4457ce" translate="yes" xml:space="preserve">
          <source>Retrieves the red, green, and blue components for the given color definition. Terminal color capabilities must be initialized with &lt;a href=&quot;function.ncurses-start-color&quot;&gt;ncurses_start_color()&lt;/a&gt; prior to calling this function.</source>
          <target state="translated">检索给定颜色定义的红色，绿色和蓝色成分。在调用此函数之前，必须使用&lt;a href=&quot;function.ncurses-start-color&quot;&gt;ncurses_start_color（）&lt;/a&gt;初始化终端颜色功能。</target>
        </trans-unit>
        <trans-unit id="80d2a640a1608e75b0396c291cb4ce0bcce1a255" translate="yes" xml:space="preserve">
          <source>Retrieves the shared memory size of a SyncSharedMemory object.</source>
          <target state="translated">检索SyncSharedMemory对象的共享内存大小。</target>
        </trans-unit>
        <trans-unit id="327cc346b5b3f0ca031cc3d5e3acc644acfde459" translate="yes" xml:space="preserve">
          <source>Retrieves the system-wide first instance status of a SyncSharedMemory object.</source>
          <target state="translated">检索SyncSharedMemory对象的全系统首例状态。</target>
        </trans-unit>
        <trans-unit id="c46ab5fb676a9365e1810ef987d6a8100a294828" translate="yes" xml:space="preserve">
          <source>Retrieves the value of the color channel specified, as a floating-point number between 0 and 1.</source>
          <target state="translated">读取指定颜色通道的值,为0和1之间的浮点数。</target>
        </trans-unit>
        <trans-unit id="56f3d6511e26f646331a1b3d211c3a3ffb39a949" translate="yes" xml:space="preserve">
          <source>Retrieves version of cipher used by current SSL connection.</source>
          <target state="translated">检索当前SSL连接使用的密码版本。</target>
        </trans-unit>
        <trans-unit id="8a300d8b8552d0f01f5ba4d3b766cda0ed1ac39f" translate="yes" xml:space="preserve">
          <source>Retrieving the day and time from the UDP service &quot;daytime&quot; (port 13) on localhost.</source>
          <target state="translated">从本地主机上的UDP服务 &quot;daytime&quot;(端口13)中检索日期和时间。</target>
        </trans-unit>
        <trans-unit id="b80ef222c0fd30bfbb2973956ef68ea64bc2b86a" translate="yes" xml:space="preserve">
          <source>Retrive environ which was defined in yaf.environ which has a default value &quot;product&quot;.</source>
          <target state="translated">在yaf.environ中定义的默认值为 &quot;product &quot;的retrive environ。</target>
        </trans-unit>
        <trans-unit id="f2977c5f3036482aa317a271fb8e4db603f602c6" translate="yes" xml:space="preserve">
          <source>Retrive the &lt;a href=&quot;class.yaf-application&quot;&gt;Yaf_Application&lt;/a&gt; instance. same as &lt;a href=&quot;yaf-application.app&quot;&gt;Yaf_Application::app()&lt;/a&gt;.</source>
          <target state="translated">Retrive的&lt;a href=&quot;class.yaf-application&quot;&gt;Yaf_Application&lt;/a&gt;实例。与&lt;a href=&quot;yaf-application.app&quot;&gt;Yaf_Application :: app（）相同&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d7932c2e885a7a9a216c850283e26dcd4d6544a0" translate="yes" xml:space="preserve">
          <source>Retrive the current token.</source>
          <target state="translated">重取当前的代币。</target>
        </trans-unit>
        <trans-unit id="a92aada6ab193496fd82394fa28bbddf11bed1f6" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;class.hashcontext&quot;&gt;HashContext&lt;/a&gt; instead of resource.</source>
          <target state="translated">返回&lt;a href=&quot;class.hashcontext&quot;&gt;HashContext&lt;/a&gt;而不是资源。</target>
        </trans-unit>
        <trans-unit id="068afe5cf9b896318be28ef348d86fab6bf823b6" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if it does not understand the search &lt;code&gt;criteria&lt;/code&gt; or no messages have been found.</source>
          <target state="translated">如果它不了解搜索 &lt;code&gt;criteria&lt;/code&gt; 或未找到消息，则返回&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="4089fd2b2913259de46072357e68f272832cd5f0" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if no attribute found. Previously, returned an empty string.</source>
          <target state="translated">如果找不到属性，则返回&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;。以前，返回空字符串。</target>
        </trans-unit>
        <trans-unit id="04028769615fe10f1f887c3bdae7c2b9bc50cc1d" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; if &lt;code&gt;namespaceURI&lt;/code&gt; is the default namespace, &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="translated">如果 &lt;code&gt;namespaceURI&lt;/code&gt; 是默认名称空间，则返回&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;，否则返回&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a80244eae60e4b8dd0a5013dd08752747162aa3" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; if the position was updated, &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="translated">如果位置已更新，则返回&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;，否则返回&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="73a0952a6289c9db5d5cb583593ca3358ff5d4b5" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if it does not understand the search &lt;code&gt;criteria&lt;/code&gt; or no messages have been found.</source>
          <target state="translated">如果不了解搜索 &lt;code&gt;criteria&lt;/code&gt; 或未找到任何消息，则返回&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="139ec91a5ca0f8da9a665ad32ba3d4aa4f538660" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if &lt;code&gt;namespaceURI&lt;/code&gt; is the default namespace, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="translated">如果 &lt;code&gt;namespaceURI&lt;/code&gt; 是默认名称空间，则返回&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;，否则返回&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bfcb2a81f5fdbd79e1c22e5087094e10026aaf38" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the position was updated, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="translated">如果位置已更新，则返回&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;，否则返回&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="e548341181d03c1ef9ac324daeca780d8cf894b9" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the programmer can change color definitions, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="translated">如果程序员可以更改颜色定义，则返回&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;，否则返回&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="4882fe4385d847c8b04a1290c25937d209c5ea93" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the terminal has color capabilities, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="translated">如果终端具有颜色功能，则返回&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;，否则返回&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="1acb673a660e12f2dd5a65c845280cf7bbc88455" translate="yes" xml:space="preserve">
          <source>Return By Reference</source>
          <target state="translated">通过参考返回</target>
        </trans-unit>
        <trans-unit id="57f086d6916fabd1491140f8731c74f747ae0890" translate="yes" xml:space="preserve">
          <source>Return EvPrepare object on success.</source>
          <target state="translated">成功后返回EvPrepare对象。</target>
        </trans-unit>
        <trans-unit id="3372706e032a8457c05005dc91603b616abcd9d6" translate="yes" xml:space="preserve">
          <source>Return ICU error code name.</source>
          <target state="translated">返回ICU错误代码名称。</target>
        </trans-unit>
        <trans-unit id="4756fa79308466fcafd008ff3a99053bc962adc0" translate="yes" xml:space="preserve">
          <source>Return TRUE if the string is tainted, FALSE otherwise.</source>
          <target state="translated">如果字符串被污染,返回TRUE,否则返回FALSE。</target>
        </trans-unit>
        <trans-unit id="ef9c38275b5838d8c3a5f1eae06e6f5e66b2d736" translate="yes" xml:space="preserve">
          <source>Return TRUE if the transformation is done. Always return TRUE if the taint extension is not enabled.</source>
          <target state="translated">如果转换完成,返回TRUE。如果没有启用污点扩展,总是返回TRUE。</target>
        </trans-unit>
        <trans-unit id="4ed1a51e3c7c6cf43a3633b3e58f69e74b9dd263" translate="yes" xml:space="preserve">
          <source>Return Value</source>
          <target state="translated">返回值</target>
        </trans-unit>
        <trans-unit id="4c85d59c181a8bdfec393789d72d1942cf54846f" translate="yes" xml:space="preserve">
          <source>Return Values</source>
          <target state="translated">返回值</target>
        </trans-unit>
        <trans-unit id="4be5718394b3e81df528a2dbe5fac54bed7fb59f" translate="yes" xml:space="preserve">
          <source>Return a boolean value</source>
          <target state="translated">返回一个布尔值</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
