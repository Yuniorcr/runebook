<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="d">
    <body>
      <group id="d">
        <trans-unit id="b0fa593fc6719274022ebaa7f2cbe343124a2468" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;emplace&quot;&gt;emplace&lt;/strong&gt;(T, Args...)(T chunk, auto ref Args args)</source>
          <target state="translated">T &lt;strong id=&quot;emplace&quot;&gt;emplace&lt;/strong&gt;（T，Args ...）（T块，自动引用Args args）</target>
        </trans-unit>
        <trans-unit id="9c8b46882c8348d7824a8bd6910cdd4a5c4fec9a" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;emplace&quot;&gt;emplace&lt;/strong&gt;(T, Args...)(void[] chunk, auto ref Args args)</source>
          <target state="translated">T &lt;strong id=&quot;emplace&quot;&gt;emplace&lt;/strong&gt;（T，Args ...）（void []块，自动引用Args args）</target>
        </trans-unit>
        <trans-unit id="b740d91fc72165a9cb3536d7aa64e6ab1c4bb313" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;enforce&quot;&gt;enforce&lt;/strong&gt;(T)(T value, lazy Throwable ex);</source>
          <target state="translated">T &lt;strong id=&quot;enforce&quot;&gt;强制&lt;/strong&gt;（T）（T值，惰性Throwable ex）;</target>
        </trans-unit>
        <trans-unit id="fbdd2c4062981837d7726866a941f2f115ba32d2" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;enforce&quot;&gt;enforce&lt;/strong&gt;(T)(T value, lazy const(char)[] msg = null, string file = __FILE__, size_t line = __LINE__)</source>
          <target state="translated">T &lt;strong id=&quot;enforce&quot;&gt;强制&lt;/strong&gt;（T）（T值，惰性const（char）[] msg =空，字符串文件= __FILE __，size_t行= __LINE__）</target>
        </trans-unit>
        <trans-unit id="f8ecfa820dbcb85701bb8f100c712fc72173f821" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;enforce&quot;&gt;enforce&lt;/strong&gt;(T, Dg, string file = __FILE__, size_t line = __LINE__)(T value, scope Dg dg)</source>
          <target state="translated">T &lt;strong id=&quot;enforce&quot;&gt;强制&lt;/strong&gt;（T，Dg，字符串文件= __FILE__，size_t行= __LINE __）（T值，作用域Dg dg）</target>
        </trans-unit>
        <trans-unit id="060ef2bb9ce8ac5eed673dd3c0a50f3ce740bb82" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;enforceEx&quot;&gt;enforceEx&lt;/strong&gt;(T)(T value, lazy string msg = &quot;&quot;, string file = __FILE__, size_t line = __LINE__);</source>
          <target state="translated">Ť &lt;strong id=&quot;enforceEx&quot;&gt;enforceEx&lt;/strong&gt;（T）（T值，懒惰string信息= &amp;ldquo;&amp;rdquo;，字符串文件= __FILE__，为size_t线= __LINE__）;</target>
        </trans-unit>
        <trans-unit id="beb7cd7d343dc972eb43b39e1e960fd8fdb40d95" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;findRoot&quot;&gt;findRoot&lt;/strong&gt;(T, DF)(scope DF f, in T a, in T b);</source>
          <target state="translated">T &lt;strong id=&quot;findRoot&quot;&gt;findRoot&lt;/strong&gt;（T，DF）（范围DF f，在T a，在T b中）;</target>
        </trans-unit>
        <trans-unit id="e86327ee5110d3521411c00ef8b7d9a49b0a9988" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;findRoot&quot;&gt;findRoot&lt;/strong&gt;(T, DF, DT)(scope DF f, in T a, in T b, scope DT tolerance)</source>
          <target state="translated">T &lt;strong id=&quot;findRoot&quot;&gt;findRoot&lt;/strong&gt;（T，DF，DT）（范围DF f，在T a，在T b中，范围DT公差）</target>
        </trans-unit>
        <trans-unit id="bedb827f66e2b4807f5499cea53661000993d6e1" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;findRoot&quot;&gt;findRoot&lt;/strong&gt;(T, R)(scope R delegate(T) f, in T a, in T b, scope bool delegate(T lo, T hi) tolerance = (T a, T b) =&amp;gt; false);</source>
          <target state="translated">T &lt;strong id=&quot;findRoot&quot;&gt;findRoot&lt;/strong&gt;（T，R）（范围R委托（T）f，在T a中，在T b中，范围布尔委托（T lo，T hi）公差=（T a，T b）=&amp;gt;假）;</target>
        </trans-unit>
        <trans-unit id="44c7175aba68c1013b437a78e0027a7ae8caf201" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;gcd&quot;&gt;gcd&lt;/strong&gt;(T)(T a, T b)</source>
          <target state="translated">T &lt;strong id=&quot;gcd&quot;&gt;gcd&lt;/strong&gt;（T）（T a，T b）</target>
        </trans-unit>
        <trans-unit id="979921cb227d5ccf4c5ed98fedcd1901e07ed4e0" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;im&quot;&gt;im&lt;/strong&gt;;</source>
          <target state="translated">Ť &lt;strong id=&quot;im&quot;&gt;IM&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="9cad5c83f25c4882e3a677d659d2604d59606327" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;mean&quot;&gt;mean&lt;/strong&gt;(T = double, R)(R r)</source>
          <target state="translated">T &lt;strong id=&quot;mean&quot;&gt;均值&lt;/strong&gt;（T =两倍，R）（R r）</target>
        </trans-unit>
        <trans-unit id="2299764690bdac724b123e781d35887b2fcb51d3" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;move&quot;&gt;move&lt;/strong&gt;(T)(return ref scope T source);</source>
          <target state="translated">T &lt;strong id=&quot;move&quot;&gt;move&lt;/strong&gt;（T）（返回参考范围T源）;</target>
        </trans-unit>
        <trans-unit id="741dfb5a8f583ede0e9b9c19c304b70e11195c9b" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;moveAt&quot;&gt;moveAt&lt;/strong&gt;(size_t i);</source>
          <target state="translated">T &lt;strong id=&quot;moveAt&quot;&gt;moveAt&lt;/strong&gt;（size_t i）;</target>
        </trans-unit>
        <trans-unit id="138561cda610d6330387ce3abbea86f8d565ec2a" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;moveBack&quot;&gt;moveBack&lt;/strong&gt;();</source>
          <target state="translated">T &lt;strong id=&quot;moveBack&quot;&gt;moveBack&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="0d9cd7fb8bcb915127fe7213b93a4a5ed072d96f" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;moveFront&quot;&gt;moveFront&lt;/strong&gt;();</source>
          <target state="translated">T &lt;strong id=&quot;moveFront&quot;&gt;moveFront&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="6b2c2339ed22213258d8d20213b2687470c91c6d" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;nextPow2&quot;&gt;nextPow2&lt;/strong&gt;(T)(const T val)</source>
          <target state="translated">T &lt;strong id=&quot;nextPow2&quot;&gt;nextPow2&lt;/strong&gt;（T）（常量T值）</target>
        </trans-unit>
        <trans-unit id="65a21b166486c5ec0e7f62449c3b0420a5e256d8" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;onLowerBound&quot;&gt;onLowerBound&lt;/strong&gt;(Rhs, T)(Rhs rhs, T bound);</source>
          <target state="translated">T &lt;strong id=&quot;onLowerBound&quot;&gt;onLowerBound&lt;/strong&gt;（Rhs，T）（Rhs rhs，T bound）;</target>
        </trans-unit>
        <trans-unit id="aad72a3f1def7e51423c4e74b3c42395595a9355" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;onUpperBound&quot;&gt;onUpperBound&lt;/strong&gt;(Rhs, T)(Rhs rhs, T bound);</source>
          <target state="translated">T &lt;strong id=&quot;onUpperBound&quot;&gt;onUpperBound&lt;/strong&gt;（Rhs，T）（Rhs rhs，T bound）;</target>
        </trans-unit>
        <trans-unit id="c8236d7e82d0415dbd4816e6babfc84449835c2f" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;opCast&quot;&gt;opCast&lt;/strong&gt;(T : bool)();</source>
          <target state="translated">T &lt;strong id=&quot;opCast&quot;&gt;opCast&lt;/strong&gt;（T：bool）（）;</target>
        </trans-unit>
        <trans-unit id="8c95ddda92bb68022ced41c4341f8084f809a8eb" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt;(size_t i);</source>
          <target state="translated">T &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt;（size_t i）;</target>
        </trans-unit>
        <trans-unit id="449ae6e0fc7dc910b744a5fba7d534a6f2a1be6d" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;peek&quot;&gt;peek&lt;/strong&gt;(T, Endian endianness = Endian.bigEndian, R)(R range)</source>
          <target state="translated">T &lt;strong id=&quot;peek&quot;&gt;偷看&lt;/strong&gt;（T，Endian endianness = Endian.bigEndian，R）（R范围）</target>
        </trans-unit>
        <trans-unit id="ab50fbfdecddf6fb1e6af5e75fd193110b7be394" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;peek&quot;&gt;peek&lt;/strong&gt;(T, Endian endianness = Endian.bigEndian, R)(R range, size_t index)</source>
          <target state="translated">T &lt;strong id=&quot;peek&quot;&gt;偷看&lt;/strong&gt;（T，Endian endianness = Endian.bigEndian，R）（R范围，size_t索引）</target>
        </trans-unit>
        <trans-unit id="cfd78a630212f9345951f093d04e67134480f460" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;peek&quot;&gt;peek&lt;/strong&gt;(T, Endian endianness = Endian.bigEndian, R)(R range, size_t* index)</source>
          <target state="translated">T &lt;strong id=&quot;peek&quot;&gt;偷看&lt;/strong&gt;（T，Endian endianness = Endian.bigEndian，R）（R范围，size_t *索引）</target>
        </trans-unit>
        <trans-unit id="06175f3f50cb3491bafe12cd51e9de0b7bb71b7b" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;re&quot;&gt;re&lt;/strong&gt;;</source>
          <target state="translated">Ť &lt;strong id=&quot;re&quot;&gt;重&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="a67757ebb04f606116494725c45c2d65ad59e1da" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;read&quot;&gt;read&lt;/strong&gt;(T, Endian endianness = Endian.bigEndian, R)(ref R range)</source>
          <target state="translated">T &lt;strong id=&quot;read&quot;&gt;读取&lt;/strong&gt;（T，Endian endianness = Endian.bigEndian，R）（参考R范围）</target>
        </trans-unit>
        <trans-unit id="f34a45966231e81104b0676067b194e2270aad73" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;rehash&quot;&gt;rehash&lt;/strong&gt;(T : Value[Key], Value, Key)(T aa);</source>
          <target state="translated">T &lt;strong id=&quot;rehash&quot;&gt;rehash&lt;/strong&gt;（T：Value [Key]，Value，Key）（T aa）;</target>
        </trans-unit>
        <trans-unit id="7bead4f5a3df0c8d884579f81e691b6c8415e6de" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;removeAny&quot;&gt;removeAny&lt;/strong&gt;();</source>
          <target state="translated">T &lt;strong id=&quot;removeAny&quot;&gt;removeAny&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="381f551f8c2e25dd0a064562875896cf35171e6e" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;toPrec&quot;&gt;toPrec&lt;/strong&gt;(T : double)(double f);</source>
          <target state="translated">T &lt;strong id=&quot;toPrec&quot;&gt;toPrec&lt;/strong&gt;(T : double)(double f);</target>
        </trans-unit>
        <trans-unit id="c9418f1f3252cbfb5a44ab6bc3a2cfe7f1e081cd" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;toPrec&quot;&gt;toPrec&lt;/strong&gt;(T : double)(float f);</source>
          <target state="translated">T &lt;strong id=&quot;toPrec&quot;&gt;toPrec&lt;/strong&gt;（T：double）（浮点f）;</target>
        </trans-unit>
        <trans-unit id="489f7cb17f1757e1f63ff69310463c6c3ecd98ce" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;toPrec&quot;&gt;toPrec&lt;/strong&gt;(T : double)(real f);</source>
          <target state="translated">T &lt;strong id=&quot;toPrec&quot;&gt;toPrec&lt;/strong&gt;（T：double）（实数f）;</target>
        </trans-unit>
        <trans-unit id="93317a199c6b6814c2aca079d37c946c89d8b9b4" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;toPrec&quot;&gt;toPrec&lt;/strong&gt;(T : float)(double f);</source>
          <target state="translated">T &lt;strong id=&quot;toPrec&quot;&gt;toPrec&lt;/strong&gt;（T：浮点数）（双精度f）;</target>
        </trans-unit>
        <trans-unit id="8e622e61a218a09734f79f4737a11ecfa4eaa64c" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;toPrec&quot;&gt;toPrec&lt;/strong&gt;(T : float)(float f);</source>
          <target state="translated">T &lt;strong id=&quot;toPrec&quot;&gt;toPrec&lt;/strong&gt;（T：浮点数）（float f）;</target>
        </trans-unit>
        <trans-unit id="b375c89db1e5f4a4b8ee39390bba3a8586f1b9c4" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;toPrec&quot;&gt;toPrec&lt;/strong&gt;(T : float)(real f);</source>
          <target state="translated">T &lt;strong id=&quot;toPrec&quot;&gt;toPrec&lt;/strong&gt;（T：浮点数）（实数f）;</target>
        </trans-unit>
        <trans-unit id="9463492ed96af74f6ae02df857ba33cf74bbd019" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;toPrec&quot;&gt;toPrec&lt;/strong&gt;(T : real)(double f);</source>
          <target state="translated">T &lt;strong id=&quot;toPrec&quot;&gt;toPrec&lt;/strong&gt;（T：实数）（双&lt;strong id=&quot;toPrec&quot;&gt;精度&lt;/strong&gt;f）;</target>
        </trans-unit>
        <trans-unit id="9408c78d39273985eb996cdd1c3dad78f88b396a" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;toPrec&quot;&gt;toPrec&lt;/strong&gt;(T : real)(float f);</source>
          <target state="translated">T &lt;strong id=&quot;toPrec&quot;&gt;toPrec&lt;/strong&gt;（T：实数）（f浮点数）;</target>
        </trans-unit>
        <trans-unit id="edf909e0071cbf2a7c95511adbc4ee4cf9f6c478" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;toPrec&quot;&gt;toPrec&lt;/strong&gt;(T : real)(real f);</source>
          <target state="translated">T &lt;strong id=&quot;toPrec&quot;&gt;toPrec&lt;/strong&gt;（T：实数）（实数f）;</target>
        </trans-unit>
        <trans-unit id="2d60be838022f278b9224bd51072476a01487050" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;truncPow2&quot;&gt;truncPow2&lt;/strong&gt;(T)(const T val)</source>
          <target state="translated">T &lt;strong id=&quot;truncPow2&quot;&gt;truncPow2&lt;/strong&gt;（T）（常量T值）</target>
        </trans-unit>
        <trans-unit id="eb95f063eb8c8c2812cf42219458ee2aa577031f" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;unformatValue&quot;&gt;unformatValue&lt;/strong&gt;(T, Range, Char)(ref Range input, ref scope const FormatSpec!Char spec);</source>
          <target state="translated">T &lt;strong id=&quot;unformatValue&quot;&gt;unformatValue&lt;/strong&gt;（T，Range，Char）（参考范围输入，参考范围const FormatSpec！Char spec）;</target>
        </trans-unit>
        <trans-unit id="f023d191de1d03753b07ba7065eb9151699c807d" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;uniform01&quot;&gt;uniform01&lt;/strong&gt;(T = double)()</source>
          <target state="translated">T &lt;strong id=&quot;uniform01&quot;&gt;制服01&lt;/strong&gt;（T =两倍）（）</target>
        </trans-unit>
        <trans-unit id="7d7e54d7d49ee87843e2d80949da00354e40a628" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;uniform01&quot;&gt;uniform01&lt;/strong&gt;(T = double, UniformRNG)(ref UniformRNG rng)</source>
          <target state="translated">T &lt;strong id=&quot;uniform01&quot;&gt;制服01&lt;/strong&gt;（T = double，UniformRNG）（ref UniformRNG rng）</target>
        </trans-unit>
        <trans-unit id="b68f137daa7796395115fea6ee3aeac37a675dd2" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;va_arg&quot;&gt;va_arg&lt;/strong&gt;(T)(ref va_list ap);</source>
          <target state="translated">T &lt;strong id=&quot;va_arg&quot;&gt;va_arg&lt;/strong&gt;(T)(ref va_list ap);</target>
        </trans-unit>
        <trans-unit id="76e77f93676b41373d8241851cfa9772a1b976b9" translate="yes" xml:space="preserve">
          <source>T &lt;strong id=&quot;va_arg&quot;&gt;va_arg&lt;/strong&gt;(T)(va_list ap);</source>
          <target state="translated">T &lt;strong id=&quot;va_arg&quot;&gt;va_arg&lt;/strong&gt;（T）（va_list ap）;</target>
        </trans-unit>
        <trans-unit id="3e6bae5b77c8ba7c9d54770f73bf7499abc63cd3" translate="yes" xml:space="preserve">
          <source>T = one of double[2], float[4], void[16], byte[16], ubyte[16], short[8], ushort[8], int[4], uint[4], long[2], ulong[2]. For 256 bit vectors, one of double[4], float[8], void[32], byte[32], ubyte[32], short[16], ushort[16], int[8], uint[8], long[4], ulong[4]</source>
          <target state="translated">T=double[2],float[4],void[16],byte[16],ubyte[16],short[8],ushort[8],int[4],uint[4],long[2],ulong[2]中的一个。对于256位向量,double[4],float[8],void[32],byte[32],ubyte[32],short[16],ushort[16],int[8],uint[8],long[4],ulong[4]中的一个。</target>
        </trans-unit>
        <trans-unit id="28785f4922eaddfa7af25f9b49c63d8cf063e95a" translate="yes" xml:space="preserve">
          <source>T a, b; Can we bitwise assign: a = b; ?</source>
          <target state="translated">T a,b;我们能否位分配:a=b;?</target>
        </trans-unit>
        <trans-unit id="ef60954b8a0fad62ec6fcb4559177ba5037bb25d" translate="yes" xml:space="preserve">
          <source>T t</source>
          <target state="translated">T t</target>
        </trans-unit>
        <trans-unit id="b00d43df0747b95ab79c800cbcd1cf12290eecd1" translate="yes" xml:space="preserve">
          <source>T value</source>
          <target state="translated">T值</target>
        </trans-unit>
        <trans-unit id="4dab5f38124bc3c128b0a3ac5e78293cb0689c8b" translate="yes" xml:space="preserve">
          <source>T* &lt;code&gt;here&lt;/code&gt;</source>
          <target state="translated">T* &lt;code&gt;here&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1952152ad742f4df5017d4c86cebb6d33b5b8cad" translate="yes" xml:space="preserve">
          <source>T* &lt;code&gt;ifThis&lt;/code&gt;</source>
          <target state="translated">T* &lt;code&gt;ifThis&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84e07d1335aa0056f3363258602e219e5380b25a" translate="yes" xml:space="preserve">
          <source>T* &lt;code&gt;value&lt;/code&gt;</source>
          <target state="translated">T * &lt;code&gt;value&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d52df2ddb0c9d003019726d5bcffd43cd6037c3" translate="yes" xml:space="preserve">
          <source>T* &lt;strong id=&quot;cpp_new&quot;&gt;cpp_new&lt;/strong&gt;(T, Args...)(auto ref Args args)</source>
          <target state="translated">T * &lt;strong id=&quot;cpp_new&quot;&gt;cpp_new&lt;/strong&gt;（T，Args ...）（自动引用Args args）</target>
        </trans-unit>
        <trans-unit id="81b5804598ccd8faaa4f770ccee3dae0d05ec291" translate="yes" xml:space="preserve">
          <source>T* &lt;strong id=&quot;emplace&quot;&gt;emplace&lt;/strong&gt;(T, Args...)(T* chunk, auto ref Args args)</source>
          <target state="translated">T * &lt;strong id=&quot;emplace&quot;&gt;emplace&lt;/strong&gt;（T，Args ...）（T *块，自动引用Args args）</target>
        </trans-unit>
        <trans-unit id="7fb02d039771dad441620b1e19b5e4095b502fb5" translate="yes" xml:space="preserve">
          <source>T* &lt;strong id=&quot;emplace&quot;&gt;emplace&lt;/strong&gt;(T, Args...)(void[] chunk, auto ref Args args)</source>
          <target state="translated">T * &lt;strong id=&quot;emplace&quot;&gt;emplace&lt;/strong&gt;（T，Args ...）（void []块，自动引用Args args）</target>
        </trans-unit>
        <trans-unit id="5bcff875c001699be03431a6effca033195496bb" translate="yes" xml:space="preserve">
          <source>T* here</source>
          <target state="translated">这里</target>
        </trans-unit>
        <trans-unit id="e2398779d5a199b7adb4917fab0cbe5660e3c52f" translate="yes" xml:space="preserve">
          <source>T1</source>
          <target state="translated">T1</target>
        </trans-unit>
        <trans-unit id="17be188212710bce4274756f00b864fb15194e00" translate="yes" xml:space="preserve">
          <source>T1 &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">T1 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ddb5372b6f6fcd29c1ef3b030b66f86fe23c4e19" translate="yes" xml:space="preserve">
          <source>T1 &lt;code&gt;expression&lt;/code&gt;</source>
          <target state="translated">T1 &lt;code&gt;expression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db5698102e93cebdc2311f3cc380947b12ba4b70" translate="yes" xml:space="preserve">
          <source>T1 &lt;code&gt;val&lt;/code&gt;</source>
          <target state="translated">T1 &lt;code&gt;val&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="efc0d1f1bd8f13729e48772ae5288019ca8a7b5d" translate="yes" xml:space="preserve">
          <source>T1 &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">T1 &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8cf5510c304dce728fc496fb7e48b5e2deed00d" translate="yes" xml:space="preserve">
          <source>T2</source>
          <target state="translated">T2</target>
        </trans-unit>
        <trans-unit id="b49fbd4c10e416f189247e016ae225e063ba25f5" translate="yes" xml:space="preserve">
          <source>T2 &lt;code&gt;b&lt;/code&gt;</source>
          <target state="translated">T2 &lt;code&gt;b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c28b4585582cd5f94bb5b5bc384bcac2a92c58d7" translate="yes" xml:space="preserve">
          <source>T2 &lt;code&gt;errorHandler&lt;/code&gt;</source>
          <target state="translated">T2 &lt;code&gt;errorHandler&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac82bb62e560126eff7132d176c5ba7fb50cdefe" translate="yes" xml:space="preserve">
          <source>T2 &lt;code&gt;lower&lt;/code&gt;</source>
          <target state="translated">T2 &lt;code&gt;lower&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd5806e6a9ab9bf781aefdb9eb738844d8677ad1" translate="yes" xml:space="preserve">
          <source>T2[] &lt;code&gt;A&lt;/code&gt;</source>
          <target state="translated">T2 [] &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2bd537bcdafb5b633e098c54aed99b622220a54" translate="yes" xml:space="preserve">
          <source>T3 &lt;code&gt;upper&lt;/code&gt;</source>
          <target state="translated">T3 &lt;code&gt;upper&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68fe7aac5d573e9585adda75c50df34f808d3a49" translate="yes" xml:space="preserve">
          <source>TFrom[] &lt;code&gt;from&lt;/code&gt;</source>
          <target state="translated">TFrom [] &lt;code&gt;from&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf654c3810ca0b523f0f93cae09ad8edf4349ba7" translate="yes" xml:space="preserve">
          <source>TITLE</source>
          <target state="translated">TITLE</target>
        </trans-unit>
        <trans-unit id="538db3a21f8d8c35e28587c194108040aa54e96d" translate="yes" xml:space="preserve">
          <source>TLS data is being scanned.</source>
          <target state="translated">正在扫描TLS数据。</target>
        </trans-unit>
        <trans-unit id="0f8cd9cabe4061b8d944e108a45880e837ca829c" translate="yes" xml:space="preserve">
          <source>TLS-SRP auth is supported</source>
          <target state="translated">支持TLS-SRP认证</target>
        </trans-unit>
        <trans-unit id="b698c11e84460ed5999bfeb5cbf25b865c238f3c" translate="yes" xml:space="preserve">
          <source>TODO</source>
          <target state="translated">TODO</target>
        </trans-unit>
        <trans-unit id="a5a149798d7357cf426dbe5a0ae5edff38cd86d5" translate="yes" xml:space="preserve">
          <source>TOK* &lt;code&gt;pop&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pop&lt;/code&gt; *</target>
        </trans-unit>
        <trans-unit id="1b03b9d87b845c22c1a14aac3364656836c0ceb2" translate="yes" xml:space="preserve">
          <source>TOK.concatenateAssign - appending T[] to T[] TOK.concatenateElemAssign - appending T to T[] TOK.concatenateDcharAssign - appending dchar to T[]</source>
          <target state="translated">TOK.concatenateAssign-将T[]追加到T[]TOK.concatenateElemAAssign-将T追加到T[]TOK.concatenateDcharAssign-将dchar追加到T[]。</target>
        </trans-unit>
        <trans-unit id="2fb3ab741dd2b13f731b96e6373ede3d6363328b" translate="yes" xml:space="preserve">
          <source>TOK.equal and TOK.notEqual</source>
          <target state="translated">TOK.等于和TOK.不等于。</target>
        </trans-unit>
        <trans-unit id="418e909c0f89afb5070d5fa971f4c294eade012b" translate="yes" xml:space="preserve">
          <source>TOK.identity and TOK.notIdentity</source>
          <target state="translated">TOK.identity和TOK.notIdentity。</target>
        </trans-unit>
        <trans-unit id="7aeab465f73c2aa74e5693c47f082f035e66a529" translate="yes" xml:space="preserve">
          <source>TP &lt;code&gt;begin&lt;/code&gt;</source>
          <target state="translated">TP &lt;code&gt;begin&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="299f9b451adf8acbcc193f52847a7ef370b521a4" translate="yes" xml:space="preserve">
          <source>TP &lt;code&gt;end&lt;/code&gt;</source>
          <target state="translated">TP &lt;code&gt;end&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="baca7d4b4dc925dc311b0a5bed3090cd9ce00549" translate="yes" xml:space="preserve">
          <source>TP &lt;code&gt;timePoint&lt;/code&gt;</source>
          <target state="translated">TP &lt;code&gt;timePoint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af84cbdd031518c415f85cb7d5839785ce28675b" translate="yes" xml:space="preserve">
          <source>TP delegate(scope const TP) &lt;code&gt;func&lt;/code&gt;</source>
          <target state="translated">TP委托（scope const TP） &lt;code&gt;func&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b48f29281e3bf6f5ea68841ca180598159d28e6e" translate="yes" xml:space="preserve">
          <source>TP delegate(scope const TP) &lt;strong id=&quot;everyMonth&quot;&gt;everyMonth&lt;/strong&gt;(TP, Direction dir = Direction.fwd)(int month)</source>
          <target state="translated">TP委托（scope const TP）&lt;strong id=&quot;everyMonth&quot;&gt;每个月&lt;/strong&gt;（TP，Direction dir = Direction.fwd）（int month）</target>
        </trans-unit>
        <trans-unit id="170f57e4abff5e251a00678ce76950e80c70b366" translate="yes" xml:space="preserve">
          <source>TRange &lt;code&gt;target&lt;/code&gt;</source>
          <target state="translated">TRANGE &lt;code&gt;target&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="212e92f29c990679b0bef813a13d9e7b041c7f8d" translate="yes" xml:space="preserve">
          <source>TRange &lt;strong id=&quot;topNCopy&quot;&gt;topNCopy&lt;/strong&gt;(alias less = &quot;a &amp;lt; b&quot;, SRange, TRange)(SRange source, TRange target, SortOutput sorted = No.sortOutput)</source>
          <target state="translated">TRange &lt;strong id=&quot;topNCopy&quot;&gt;topNCopy&lt;/strong&gt;（alias less =&amp;ldquo; a &amp;lt;b&amp;rdquo;，SRange，TRange）（SRange源，TRange目标，sortOutput已排序= No.sortOutput）</target>
        </trans-unit>
        <trans-unit id="69e120c063bfe3e46feba63d960b83cccaade336" translate="yes" xml:space="preserve">
          <source>TYPE* &lt;strong id=&quot;getParentClosureType&quot;&gt;getParentClosureType&lt;/strong&gt;(Symbol* sthis, FuncDeclaration fd);</source>
          <target state="translated">TYPE * &lt;strong id=&quot;getParentClosureType&quot;&gt;getParentClosureType&lt;/strong&gt;（Symbol * sthis，FuncDeclaration fd）;</target>
        </trans-unit>
        <trans-unit id="fd129cb8840933a8ef2b54d2afbf2de578d2074b" translate="yes" xml:space="preserve">
          <source>T[] &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">T [] &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c099518b9c3f286f78a1e450a210be6c49d770e4" translate="yes" xml:space="preserve">
          <source>T[] &lt;code&gt;arr&lt;/code&gt;</source>
          <target state="translated">T [] &lt;code&gt;arr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6bfe6a19007538ec5fb08ccab743a444622cb793" translate="yes" xml:space="preserve">
          <source>T[] &lt;code&gt;array&lt;/code&gt;</source>
          <target state="translated">T [] &lt;code&gt;array&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="58134bf5b6f19712d50178d7749ea496b0d8daa3" translate="yes" xml:space="preserve">
          <source>T[] &lt;code&gt;lhs&lt;/code&gt;</source>
          <target state="translated">T [] &lt;code&gt;lhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5628d2ab43a70ae870937d06e7d3037b58e0cf33" translate="yes" xml:space="preserve">
          <source>T[] &lt;code&gt;replacement&lt;/code&gt;</source>
          <target state="translated">T [] &lt;code&gt;replacement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="57c829d6e8cd9f927bd53d42c0d143e633794f49" translate="yes" xml:space="preserve">
          <source>T[] &lt;code&gt;rhs&lt;/code&gt;</source>
          <target state="translated">T [] &lt;code&gt;rhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="501f823afa00c9166d3e9cb28fa2878a5b00a78e" translate="yes" xml:space="preserve">
          <source>T[] &lt;code&gt;s&lt;/code&gt;</source>
          <target state="translated">T [] &lt;code&gt;s&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef449c44efbe8fddbae967e91aa6274a74626ff8" translate="yes" xml:space="preserve">
          <source>T[] &lt;code&gt;slice&lt;/code&gt;</source>
          <target state="translated">T [] &lt;code&gt;slice&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d1804b6d6b2c349e294fb0fda2e8153de174d6ad" translate="yes" xml:space="preserve">
          <source>T[] &lt;code&gt;subject&lt;/code&gt;</source>
          <target state="translated">T [] &lt;code&gt;subject&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="39d36ff03b89ba5bfa7e455dc369a059c1e6093f" translate="yes" xml:space="preserve">
          <source>T[] &lt;strong id=&quot;connect&quot;&gt;connect&lt;/strong&gt;(T = char)(const(char)[] url, HTTP conn = HTTP())</source>
          <target state="translated">T [] &lt;strong id=&quot;connect&quot;&gt;connect&lt;/strong&gt;（T = char）（const（char）[] url，HTTP conn = HTTP（））</target>
        </trans-unit>
        <trans-unit id="9e84e03dda650697e32dd99a729937cca5635e79" translate="yes" xml:space="preserve">
          <source>T[] &lt;strong id=&quot;get&quot;&gt;get&lt;/strong&gt;(Conn = AutoProtocol, T = char)(const(char)[] url, Conn conn = Conn())</source>
          <target state="translated">T [] &lt;strong id=&quot;get&quot;&gt;get&lt;/strong&gt;（Conn = AutoProtocol，T = char）（const（char）[] url，Conn conn = Conn（））</target>
        </trans-unit>
        <trans-unit id="23707f9ff44ba5ae268af6dda7ba0b79e6271047" translate="yes" xml:space="preserve">
          <source>T[] &lt;strong id=&quot;makeArray&quot;&gt;makeArray&lt;/strong&gt;(T)(size_t length);</source>
          <target state="translated">T [] &lt;strong id=&quot;makeArray&quot;&gt;makeArray&lt;/strong&gt;（T）（size_t length）;</target>
        </trans-unit>
        <trans-unit id="2286dc1437b885cda24f9e84258dbd32d8500a9e" translate="yes" xml:space="preserve">
          <source>T[] &lt;strong id=&quot;makeArray&quot;&gt;makeArray&lt;/strong&gt;(T)(size_t length, auto ref T init);</source>
          <target state="translated">T [] &lt;strong id=&quot;makeArray&quot;&gt;makeArray&lt;/strong&gt;（T）（size_t length，auto ref T init）;</target>
        </trans-unit>
        <trans-unit id="4cc2d288f77e69c585187c3762094065271e4238" translate="yes" xml:space="preserve">
          <source>T[] &lt;strong id=&quot;makeArray&quot;&gt;makeArray&lt;/strong&gt;(T, Allocator)(auto ref Allocator alloc, size_t length);</source>
          <target state="translated">T [] &lt;strong id=&quot;makeArray&quot;&gt;makeArray&lt;/strong&gt;（T，Allocator）（auto ref Allocator alloc，size_t length）;</target>
        </trans-unit>
        <trans-unit id="441d57515cdfb2c4d594443d1f59adafce8fb900" translate="yes" xml:space="preserve">
          <source>T[] &lt;strong id=&quot;makeArray&quot;&gt;makeArray&lt;/strong&gt;(T, Allocator)(auto ref Allocator alloc, size_t length, T init);</source>
          <target state="translated">T [] &lt;strong id=&quot;makeArray&quot;&gt;makeArray&lt;/strong&gt;（T，Allocator）（自动引用分配器分配，size_t长度，T init）;</target>
        </trans-unit>
        <trans-unit id="7de9c6c9311491f56903128d2dd9fb5d765bb18c" translate="yes" xml:space="preserve">
          <source>T[] &lt;strong id=&quot;makeArray&quot;&gt;makeArray&lt;/strong&gt;(T, Allocator, R)(auto ref Allocator alloc, R range)</source>
          <target state="translated">T [] &lt;strong id=&quot;makeArray&quot;&gt;makeArray&lt;/strong&gt;（T，分配器，R）（自动引用分配器分配，R范围）</target>
        </trans-unit>
        <trans-unit id="8ccab52df8f98925f09cc3d4aae30ea4efdf5ce9" translate="yes" xml:space="preserve">
          <source>T[] &lt;strong id=&quot;makeArray&quot;&gt;makeArray&lt;/strong&gt;(T, R)(R range)</source>
          <target state="translated">T [] &lt;strong id=&quot;makeArray&quot;&gt;makeArray&lt;/strong&gt;（T，R）（R范围）</target>
        </trans-unit>
        <trans-unit id="5d5fd762ffac4fb324635761b8ee3701aab68e05" translate="yes" xml:space="preserve">
          <source>T[] &lt;strong id=&quot;options&quot;&gt;options&lt;/strong&gt;(T = char)(const(char)[] url, HTTP conn = HTTP())</source>
          <target state="translated">T [] &lt;strong id=&quot;options&quot;&gt;选项&lt;/strong&gt;（T = char）（const（char）[] url，HTTP conn = HTTP（））</target>
        </trans-unit>
        <trans-unit id="f9910bacb7b28cb9aa88edb856c9847168e57f32" translate="yes" xml:space="preserve">
          <source>T[] &lt;strong id=&quot;patch&quot;&gt;patch&lt;/strong&gt;(T = char, PatchUnit)(const(char)[] url, const(PatchUnit)[] patchData, HTTP conn = HTTP())</source>
          <target state="translated">T [] &lt;strong id=&quot;patch&quot;&gt;补丁&lt;/strong&gt;（T = char，PatchUnit）（const（char）[] url，const（PatchUnit）[] patchData，HTTP conn = HTTP（））</target>
        </trans-unit>
        <trans-unit id="7a3b67182bc94df15db5010b2f5ad18882dfdd00" translate="yes" xml:space="preserve">
          <source>T[] &lt;strong id=&quot;post&quot;&gt;post&lt;/strong&gt;(T = char)(const(char)[] url, string[string] postDict, HTTP conn = HTTP())</source>
          <target state="translated">T [] &lt;strong id=&quot;post&quot;&gt;post&lt;/strong&gt;（T = char）（const（char）[] url，string [string] postDict，HTTP conn = HTTP（））</target>
        </trans-unit>
        <trans-unit id="f3438696601d859117c27da9faa14db225b6ffce" translate="yes" xml:space="preserve">
          <source>T[] &lt;strong id=&quot;post&quot;&gt;post&lt;/strong&gt;(T = char, PostUnit)(const(char)[] url, const(PostUnit)[] postData, HTTP conn = HTTP())</source>
          <target state="translated">T [] &lt;strong id=&quot;post&quot;&gt;post&lt;/strong&gt;（T = char，PostUnit）（const（char）[] url，const（PostUnit）[] postData，HTTP conn = HTTP（））</target>
        </trans-unit>
        <trans-unit id="c81de9d49f0559469a46607c70ad280808942df2" translate="yes" xml:space="preserve">
          <source>T[] &lt;strong id=&quot;put&quot;&gt;put&lt;/strong&gt;(Conn = AutoProtocol, T = char, PutUnit)(const(char)[] url, const(PutUnit)[] putData, Conn conn = Conn())</source>
          <target state="translated">T [] &lt;strong id=&quot;put&quot;&gt;put&lt;/strong&gt;（Conn = AutoProtocol，T = char，PutUnit）（const（char）[] url，const（PutUnit）[] putData，Conn conn = Conn（））</target>
        </trans-unit>
        <trans-unit id="2c18b59a8dad7a9dcf2731ea48247cd6b5e44982" translate="yes" xml:space="preserve">
          <source>T[] &lt;strong id=&quot;rawRead&quot;&gt;rawRead&lt;/strong&gt;(T)(T[] buffer);</source>
          <target state="translated">T [] &lt;strong id=&quot;rawRead&quot;&gt;rawRead&lt;/strong&gt;（T）（T []缓冲区）;</target>
        </trans-unit>
        <trans-unit id="5a4cdbd372aee8131ac98774adf20f2ab3c8f5e2" translate="yes" xml:space="preserve">
          <source>T[] &lt;strong id=&quot;replace&quot;&gt;replace&lt;/strong&gt;(T, Range)(T[] subject, size_t from, size_t to, Range stuff)</source>
          <target state="translated">T [] &lt;strong id=&quot;replace&quot;&gt;替换&lt;/strong&gt;（T，范围）（T []主题，size_t从，size_t到，范围的东西）</target>
        </trans-unit>
        <trans-unit id="29721e59572223e4ecc843236b113543787687cc" translate="yes" xml:space="preserve">
          <source>T[] &lt;strong id=&quot;trace&quot;&gt;trace&lt;/strong&gt;(T = char)(const(char)[] url, HTTP conn = HTTP())</source>
          <target state="translated">T [] &lt;strong id=&quot;trace&quot;&gt;跟踪&lt;/strong&gt;（T = char）（const（char）[] url，HTTP conn = HTTP（））</target>
        </trans-unit>
        <trans-unit id="da59e680a9e89d5cf733c59b79b9e33fc313ddfa" translate="yes" xml:space="preserve">
          <source>T[n] &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">T [n] &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6413140250927d3c3028e4b389cd331873b013b" translate="yes" xml:space="preserve">
          <source>T[n] &lt;strong id=&quot;staticArray&quot;&gt;staticArray&lt;/strong&gt;(T, size_t n)(auto ref T[n] a);</source>
          <target state="translated">T [n] &lt;strong id=&quot;staticArray&quot;&gt;staticArray&lt;/strong&gt;（T，size_t n）（auto ref T [n] a）;</target>
        </trans-unit>
        <trans-unit id="1e17bd5e027f9395f0fbc66fc2872113ef975af6" translate="yes" xml:space="preserve">
          <source>Tab characters are expanded into enough spaces to bring the column number to the next multiple of tabsize. If there are multiple lines in the string, the column number of the last line is returned.</source>
          <target state="translated">Tab字符被扩展到足够的空格中,以使列号达到tabsize的下一个倍数,如果字符串中有多行,则返回最后一行的列号。如果字符串中有多行,则返回最后一行的列号。</target>
        </trans-unit>
        <trans-unit id="3fd7f55fffe71e8c3dc62e1b7fa8700d0ebfd5fd" translate="yes" xml:space="preserve">
          <source>Tab columns are &lt;code&gt;tabSize&lt;/code&gt; spaces apart.</source>
          <target state="translated">选项卡列之间的间隔为 &lt;code&gt;tabSize&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c796b0a55684b05bf0ed9597882213077eccf5e" translate="yes" xml:space="preserve">
          <source>Table Name Column Name</source>
          <target state="translated">表名 列名</target>
        </trans-unit>
        <trans-unit id="4e7e670649780289d0438a29a3d0ea861c4276d1" translate="yes" xml:space="preserve">
          <source>Table Name Module Name</source>
          <target state="translated">表名 模块名称</target>
        </trans-unit>
        <trans-unit id="5d11fac764197db4540d89ad29b394fafd9762a3" translate="yes" xml:space="preserve">
          <source>Table Name NULL</source>
          <target state="translated">表名 NULL</target>
        </trans-unit>
        <trans-unit id="a161936c303706124f7c19a878abfd8ff2c93a27" translate="yes" xml:space="preserve">
          <source>Table of Dsymbol's</source>
          <target state="translated">符号表</target>
        </trans-unit>
        <trans-unit id="3eeff86d55fcc208134d68ad71a8213654fc3e35" translate="yes" xml:space="preserve">
          <source>Table of WHERE clause constraints</source>
          <target state="translated">WHERE子句约束表</target>
        </trans-unit>
        <trans-unit id="193daf137ed8b89de36d47c3df5fd8f66c0e1d14" translate="yes" xml:space="preserve">
          <source>Tables</source>
          <target state="translated">Tables</target>
        </trans-unit>
        <trans-unit id="612331b5145e99bb4f26a3c75fd45f5ee2f15d43" translate="yes" xml:space="preserve">
          <source>Tag &lt;strong id=&quot;tag&quot;&gt;tag&lt;/strong&gt;;</source>
          <target state="translated">标签&lt;strong id=&quot;tag&quot;&gt;标签&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="fcf2d565ce96b099f77ff84306963c104e330946" translate="yes" xml:space="preserve">
          <source>Tag name</source>
          <target state="translated">标签名称</target>
        </trans-unit>
        <trans-unit id="45433dd83b3add2fc055c8b55b54bcb84c5efce1" translate="yes" xml:space="preserve">
          <source>Tag types.</source>
          <target state="translated">标签类型:</target>
        </trans-unit>
        <trans-unit id="ec44347be28a87e8e74c0a208c3212420fd927c4" translate="yes" xml:space="preserve">
          <source>TagType &lt;code&gt;type&lt;/code&gt;</source>
          <target state="translated">TagType &lt;code&gt;type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07de510038162b6e6f2223208fce3b66b4ed2a21" translate="yes" xml:space="preserve">
          <source>TagType &lt;strong id=&quot;type&quot;&gt;type&lt;/strong&gt;;</source>
          <target state="translated">TagType &lt;strong id=&quot;type&quot;&gt;类型&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="68ddd91d0b9671a791224a07e7c4440e749e446a" translate="yes" xml:space="preserve">
          <source>Tagalog</source>
          <target state="translated">Tagalog</target>
        </trans-unit>
        <trans-unit id="d97ec9a0d0dd8012061bd1e25a018f7d246bc720" translate="yes" xml:space="preserve">
          <source>Tagbanwa</source>
          <target state="translated">Tagbanwa</target>
        </trans-unit>
        <trans-unit id="19a746b6a9f44b25060cdd716c403e005d486882" translate="yes" xml:space="preserve">
          <source>Tagging</source>
          <target state="translated">Tagging</target>
        </trans-unit>
        <trans-unit id="848eed0fbd5429f556b2982dec3ea87136e33e44" translate="yes" xml:space="preserve">
          <source>Tags</source>
          <target state="translated">Tags</target>
        </trans-unit>
        <trans-unit id="4b135b3e53c5cc145239c3187b94ca62dbd6cb7b" translate="yes" xml:space="preserve">
          <source>Tai Le</source>
          <target state="translated">大乐</target>
        </trans-unit>
        <trans-unit id="1db9539327d3176ae71a5b761731fb4af48a8fe9" translate="yes" xml:space="preserve">
          <source>Tai Tham</source>
          <target state="translated">大潭</target>
        </trans-unit>
        <trans-unit id="d7e1ab091f083eeaf83b355b06db2c427c04167e" translate="yes" xml:space="preserve">
          <source>Tai Viet</source>
          <target state="translated">大越</target>
        </trans-unit>
        <trans-unit id="e4265e63ead3083812dc6301eaeef90cd14be23b" translate="yes" xml:space="preserve">
          <source>Tai Xuan Jing Symbols</source>
          <target state="translated">太玄经符号</target>
        </trans-unit>
        <trans-unit id="7ce68ff3f210c997cf191cc3047dad75cfbe97db" translate="yes" xml:space="preserve">
          <source>Tai_Le</source>
          <target state="translated">Tai_Le</target>
        </trans-unit>
        <trans-unit id="30754c9b404b9f791325a342fd0c615c1607ad6a" translate="yes" xml:space="preserve">
          <source>Tai_Tham</source>
          <target state="translated">Tai_Tham</target>
        </trans-unit>
        <trans-unit id="d56a5ea60a6f1aee9d29df15fa3ff172f1ecef8f" translate="yes" xml:space="preserve">
          <source>Tai_Viet</source>
          <target state="translated">Tai_Viet</target>
        </trans-unit>
        <trans-unit id="3a6e9628faafbb48e8084c900458a1167e9901de" translate="yes" xml:space="preserve">
          <source>Take address of an elem.</source>
          <target state="translated">拿地址的elem。</target>
        </trans-unit>
        <trans-unit id="7ed2423541f92187f81ba89c0e47dc2169fa6d1b" translate="yes" xml:space="preserve">
          <source>Take address of expression.</source>
          <target state="translated">取表达的地址。</target>
        </trans-unit>
        <trans-unit id="f3023d6f80703c78f22d59777d1a8edb85e49ba7" translate="yes" xml:space="preserve">
          <source>Take the specified storage class for p, and use the function signature to infer whether STC.scope_ and STC.return_ should be OR'd in. (This will not affect the name mangling.)</source>
          <target state="translated">取p的指定存储类,用函数签名来推断STC.scope_和STC.return_是否应该被OR进去。(这不会影响名称的杂乱性。)</target>
        </trans-unit>
        <trans-unit id="2ae7d68c9a8ce32022cbc269f8e6256fee39b3dd" translate="yes" xml:space="preserve">
          <source>Take!(Repeat!T) &lt;strong id=&quot;repeat&quot;&gt;repeat&lt;/strong&gt;(T)(T value, size_t n);</source>
          <target state="translated">取！（重复！T）&lt;strong id=&quot;repeat&quot;&gt;重复&lt;/strong&gt;（T）（T值，size_t n）;</target>
        </trans-unit>
        <trans-unit id="6e6b86dc5f1d2d2d57fc97574f2a4df039b4926f" translate="yes" xml:space="preserve">
          <source>Take!R &lt;strong id=&quot;take&quot;&gt;take&lt;/strong&gt;(R)(R input, size_t n)</source>
          <target state="translated">取！R &lt;strong id=&quot;take&quot;&gt;取&lt;/strong&gt;（R）（R输入，size_t n）</target>
        </trans-unit>
        <trans-unit id="ed426f3fc7832efa21a6b239d16998d7c8fcfe33" translate="yes" xml:space="preserve">
          <source>Takes a function of (potentially) many arguments, and returns a function taking one argument and returns a callable taking the rest. f(x, y) == curry(f)(x)(y)</source>
          <target state="translated">f(x,y)==curry(f)(x)(y)</target>
        </trans-unit>
        <trans-unit id="c666be996a9eb590eb7e759fbeb5c019d402f50e" translate="yes" xml:space="preserve">
          <source>Takes a path, and escapes '(', ')' and backslashes</source>
          <target state="translated">使用一个路径,并转义'(',')'和反斜杠。</target>
        </trans-unit>
        <trans-unit id="a768ec454ff2fc5699748e2729d50567f9d815a8" translate="yes" xml:space="preserve">
          <source>Takes a range of &lt;code&gt;ubyte&lt;/code&gt;s and converts the first &lt;code&gt;T.sizeof&lt;/code&gt; bytes to &lt;code&gt;T&lt;/code&gt;. The value returned is converted from the given endianness to the native endianness. The &lt;code&gt;T.sizeof&lt;/code&gt; bytes which are read are consumed from the range.</source>
          <target state="translated">取的范围内 &lt;code&gt;ubyte&lt;/code&gt; S和将第一 &lt;code&gt;T.sizeof&lt;/code&gt; 字节来 &lt;code&gt;T&lt;/code&gt; 。返回的值从给定的字节序转换为本地字节序。从该范围消耗读取的 &lt;code&gt;T.sizeof&lt;/code&gt; 字节。</target>
        </trans-unit>
        <trans-unit id="c3eec28def54a57b1683c0b7d90328ed87f45f4b" translate="yes" xml:space="preserve">
          <source>Takes a range of &lt;code&gt;ubyte&lt;/code&gt;s and converts the first &lt;code&gt;T.sizeof&lt;/code&gt; bytes to &lt;code&gt;T&lt;/code&gt;. The value returned is converted from the given endianness to the native endianness. The range is not consumed.</source>
          <target state="translated">取的范围内 &lt;code&gt;ubyte&lt;/code&gt; S和将第一 &lt;code&gt;T.sizeof&lt;/code&gt; 字节来 &lt;code&gt;T&lt;/code&gt; 。返回的值从给定的字节序转换为本地字节序。该范围未消耗。</target>
        </trans-unit>
        <trans-unit id="c0931566b54e0e12b0cc2d830152964f82a5e6a1" translate="yes" xml:space="preserve">
          <source>Takes a single argument which must evaluate to a function. The result is a &lt;code&gt;ptrdiff_t&lt;/code&gt; containing the index of that function within the vtable of the parent type. If the function passed in is final and does not override a virtual function, &lt;code&gt;-1&lt;/code&gt; is returned instead.</source>
          <target state="translated">采用必须计算为函数的单个参数。结果是 &lt;code&gt;ptrdiff_t&lt;/code&gt; ,其中包含该函数在父类型的vtable中的索引。如果传入的函数是最终函数且未覆盖虚拟函数，则返回 &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73485bb17b87f8ff91e94fd45a73f9b37ff413f9" translate="yes" xml:space="preserve">
          <source>Takes a single argument which must evaluate to a symbol. The result is the symbol that is the parent of it.</source>
          <target state="translated">取一个单一的参数,必须评估为一个符号。结果是作为其父级的符号。</target>
        </trans-unit>
        <trans-unit id="68b555869649e369e2a9c66bc322b4d069cde15d" translate="yes" xml:space="preserve">
          <source>Takes a single argument, which must evaluate to either a class type or an expression of class type. The result is of type &lt;code&gt;size_t&lt;/code&gt;, and the value is the number of bytes in the runtime instance of the class type. It is based on the static type of a class, not the polymorphic type.</source>
          <target state="translated">采用单个参数，该参数必须求值为类类型或类类型的表达式。结果为 &lt;code&gt;size_t&lt;/code&gt; 类型，该值是类类型的运行时实例中的字节数。它基于类的静态类型，而不是多态类型。</target>
        </trans-unit>
        <trans-unit id="2d8031cf5851eb003db968a3a2a2df09d81b77be" translate="yes" xml:space="preserve">
          <source>Takes a single argument, which must evaluate to either a type or an expression of type. A tuple of string literals is returned, each of which is the name of a member of that type combined with all of the members of the base classes (if the type is a class). No name is repeated. Builtin properties are not included.</source>
          <target state="translated">取一个参数,它必须评估为一个类型或类型的表达式。返回一个字符串字元组,每个字元组都是该类型成员的名称,加上基类的所有成员(如果该类型是一个类)。没有重复的名字。不包括内置属性。</target>
        </trans-unit>
        <trans-unit id="dd40783a2279d0463b2d5c0633686ce7b34449f6" translate="yes" xml:space="preserve">
          <source>Takes a single argument, which must evaluate to either a type or an expression of type. A tuple of string literals is returned, each of which is the name of a member of that type. No name is repeated. Base class member names are not included. Builtin properties are not included.</source>
          <target state="translated">取一个参数,它必须评估为一个类型或类型的表达式。返回一个字符串字元组,每个字元组是该类型成员的名称。没有重复的名字。不包含基类成员名。不包括内置属性。</target>
        </trans-unit>
        <trans-unit id="d5f20921df9fc539092cb622f3740141e759deec" translate="yes" xml:space="preserve">
          <source>Takes a slice by-reference of this &lt;code&gt;Tuple&lt;/code&gt;.</source>
          <target state="translated">通过此 &lt;code&gt;Tuple&lt;/code&gt; 进行切片引用。</target>
        </trans-unit>
        <trans-unit id="e25d6abbab89b8445585cd2745b5291b0bc5276e" translate="yes" xml:space="preserve">
          <source>Takes a string &lt;code&gt;s&lt;/code&gt; and determines if it represents a number. This function also takes an optional parameter, &lt;code&gt;bAllowSep&lt;/code&gt;, which will accept the separator characters &lt;code&gt;','&lt;/code&gt; and &lt;code&gt;'__'&lt;/code&gt; within the string. But these characters should be stripped from the string before using any of the conversion functions like &lt;code&gt;to!int()&lt;/code&gt;, &lt;code&gt;to!float()&lt;/code&gt;, and etc else an error will occur.</source>
          <target state="translated">接受字符串 &lt;code&gt;s&lt;/code&gt; 并确定它是否代表数字。此函数还带有一个可选参数 &lt;code&gt;bAllowSep&lt;/code&gt; ，它将在字符串中接受分隔符 &lt;code&gt;','&lt;/code&gt; 和 &lt;code&gt;'__'&lt;/code&gt; 。但是在使用任何转换函数（如 &lt;code&gt;to!int()&lt;/code&gt; ， &lt;code&gt;to!float()&lt;/code&gt; 等）之前，应从字符串中去除这些字符。否则将发生错误。</target>
        </trans-unit>
        <trans-unit id="ac51856e75b266498c386996a6664e4b6791447a" translate="yes" xml:space="preserve">
          <source>Takes a string made of hexadecimal digits and returns the matching string by converting each pair of digits to a character. The input string can also include white characters, which can be used to keep the literal string readable in the source code.</source>
          <target state="translated">获取一个由十六进制数字组成的字符串,并通过将每对数字转换为一个字符来返回匹配的字符串。输入的字符串也可以包括白色字符,这可以用来保持字面字符串在源代码中的可读性。</target>
        </trans-unit>
        <trans-unit id="b16a8ab6116807bf9a5b760fe03433d82fb6f8c4" translate="yes" xml:space="preserve">
          <source>Takes a string representing an &lt;code&gt;enum&lt;/code&gt; type and returns that type.</source>
          <target state="translated">取得代表 &lt;code&gt;enum&lt;/code&gt; 类型的字符串，然后返回该类型。</target>
        </trans-unit>
        <trans-unit id="80fe0d5034b8dfd00b1ac310a8dc1895ce2c160f" translate="yes" xml:space="preserve">
          <source>Takes a tree of JSON values and returns the serialized string.</source>
          <target state="translated">取JSON值的树并返回序列化的字符串。</target>
        </trans-unit>
        <trans-unit id="b07c2a231c3b1270c1dff6d10774e91b99c52a4f" translate="yes" xml:space="preserve">
          <source>Takes an integral value, converts it to the given endianness, and appends it to the given range of &lt;code&gt;ubyte&lt;/code&gt;s (using &lt;code&gt;put&lt;/code&gt;) as a sequence of &lt;code&gt;T.sizeof&lt;/code&gt;&lt;code&gt;ubyte&lt;/code&gt;s starting at index. &lt;code&gt;hasSlicing!R&lt;/code&gt; must be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">取一个整数值，将其转换为给定的字节序，并将其附加到给定的 &lt;code&gt;ubyte&lt;/code&gt; 范围（使用 &lt;code&gt;put&lt;/code&gt; ），作为从index开始的 &lt;code&gt;T.sizeof&lt;/code&gt; &lt;code&gt;ubyte&lt;/code&gt; s 序列。 &lt;code&gt;hasSlicing!R&lt;/code&gt; 必须为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9785884790cecbf82ffb0a5c883b32c0d173b2c3" translate="yes" xml:space="preserve">
          <source>Takes an integral value, converts it to the given endianness, and writes it to the given range of &lt;code&gt;ubyte&lt;/code&gt;s as a sequence of &lt;code&gt;T.sizeof&lt;/code&gt;&lt;code&gt;ubyte&lt;/code&gt;s starting at index. &lt;code&gt;hasSlicing!R&lt;/code&gt; must be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">取一个整数值，将其转换为给定的字节序，并将其写入到给定的 &lt;code&gt;ubyte&lt;/code&gt; 范围内，作为从index开始的 &lt;code&gt;T.sizeof&lt;/code&gt; &lt;code&gt;ubyte&lt;/code&gt; s 序列。 &lt;code&gt;hasSlicing!R&lt;/code&gt; 必须为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a33070f25e55dd5ef7e3c244a5b7a594a908421f" translate="yes" xml:space="preserve">
          <source>Takes multiple functions and adjoins them together.</source>
          <target state="translated">取多个功能,并将它们连接在一起。</target>
        </trans-unit>
        <trans-unit id="ddab590de70993e13bcdedefd109e98917efe98a" translate="yes" xml:space="preserve">
          <source>Takes one argument and returns &lt;code&gt;true&lt;/code&gt; if it's a function declaration marked with &lt;code&gt;@disable&lt;/code&gt;.</source>
          <target state="translated">接受一个参数，如果它是标有 &lt;code&gt;@disable&lt;/code&gt; 的函数声明，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67386c885ba4735db9bc829789113fd7d2afe5a4" translate="yes" xml:space="preserve">
          <source>Takes one argument which is a symbol. To disambiguate between overloads, pass the result of &lt;a href=&quot;#getOverloads&quot;&gt;&lt;i&gt;getOverloads&lt;/i&gt;&lt;/a&gt; with the desired index, to &lt;code&gt;getLocation&lt;/code&gt;. Returns a &lt;code&gt;tuple(string, int, int)&lt;/code&gt; whose entries correspond to the filename, line number and column number where the argument was declared.</source>
          <target state="translated">接受一个作为符号的参数。为了消除重载之间的歧义，&lt;a href=&quot;#getOverloads&quot;&gt;&lt;i&gt;请将&lt;/i&gt;&lt;/a&gt;具有所需索引的&lt;i&gt;getOverloads&lt;/i&gt;结果传递给 &lt;code&gt;getLocation&lt;/code&gt; 。返回一个 &lt;code&gt;tuple(string, int, int)&lt;/code&gt; 其条目与声明该参数的文件名，行号和列号相对应。</target>
        </trans-unit>
        <trans-unit id="7c1d6e615645b724c794c3938303d3973c03a63c" translate="yes" xml:space="preserve">
          <source>Takes one argument which must be a type. If the type's &lt;a href=&quot;property#init&quot;&gt;default initializer&lt;/a&gt; is all zero bits then &lt;code&gt;true&lt;/code&gt; is returned, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">接受一个必须为类型的参数。如果类型的&lt;a href=&quot;property#init&quot;&gt;默认初始化&lt;/a&gt;器全为零，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="87bc2cf5ee35cc01493547ac01dad3a717d14b91" translate="yes" xml:space="preserve">
          <source>Takes one argument which must either be a function symbol, function literal, a delegate, or a function pointer. It returns a &lt;code&gt;bool&lt;/code&gt; which is &lt;code&gt;true&lt;/code&gt; if the return value of the function is returned on the stack via a pointer to it passed as a hidden extra parameter to the function.</source>
          <target state="translated">接受一个参数，该参数必须是函数符号，函数文字，委托或函数指针。如果通过隐式额外参数传递给函数的指针将函数的返回值返回堆栈，则返回 &lt;code&gt;bool&lt;/code&gt; 值 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97621cd19225b41beff6e5155d8b9ca36fc90d28" translate="yes" xml:space="preserve">
          <source>Takes one argument which must either be a function symbol, function literal, or a function pointer. It returns a string tuple of all the attributes of that function &lt;b&gt;excluding&lt;/b&gt; any user-defined attributes (UDAs can be retrieved with the &lt;a href=&quot;#get-attributes&quot;&gt;getAttributes&lt;/a&gt; trait). If no attributes exist it will return an empty tuple.</source>
          <target state="translated">接受一个参数，该参数必须是函数符号，函数文字或函数指针。它返回该函数所有属性的字符串元组，&lt;b&gt;不包括&lt;/b&gt;任何用户定义的属性（可以使用&lt;a href=&quot;#get-attributes&quot;&gt;getAttributes&lt;/a&gt;特性检索UDA ）。如果没有属性，它将返回一个空的元组。</target>
        </trans-unit>
        <trans-unit id="39c92455342775a9094aa1d1cdeba48c5cda2b3b" translate="yes" xml:space="preserve">
          <source>Takes one argument which must either be a function symbol, or a type that is a function, delegate or a function pointer. It returns a string identifying the kind of &lt;a href=&quot;function#variadic&quot;&gt;variadic arguments&lt;/a&gt; that are supported.</source>
          <target state="translated">接受一个参数，该参数必须是函数符号，或者是函数，委托或函数指针的类型。它返回一个字符串，该字符串标识所支持的&lt;a href=&quot;function#variadic&quot;&gt;可变参数&lt;/a&gt;的类型。</target>
        </trans-unit>
        <trans-unit id="0e8e3f521873e107568842419f21bb4537549307" translate="yes" xml:space="preserve">
          <source>Takes one argument, a symbol of an aggregate (e.g. struct/class/module). The result is a tuple of all the unit test functions of that aggregate. The functions returned are like normal nested static functions, &lt;a href=&quot;https://dlang.org/glossary.html#ctfe&quot;&gt;CTFE&lt;/a&gt; will work and &lt;a href=&quot;attribute#uda&quot;&gt;UDAs&lt;/a&gt; will be accessible.</source>
          <target state="translated">接受一个参数，即集合的符号（例如struct / class / module）。结果是该聚合的所有单元测试功能的元组。返回的函数就像普通的嵌套静态函数一样，&lt;a href=&quot;https://dlang.org/glossary.html#ctfe&quot;&gt;CTFE&lt;/a&gt;将起作用，并且&lt;a href=&quot;attribute#uda&quot;&gt;UDA&lt;/a&gt;将可访问。</target>
        </trans-unit>
        <trans-unit id="e645c3eaf27b6e127c4e64f1c5e718743c0c0f0e" translate="yes" xml:space="preserve">
          <source>Takes one argument, a symbol. Returns a tuple of all attached user-defined attributes. If no UDAs exist it will return an empty tuple.</source>
          <target state="translated">接收一个参数,一个符号。返回一个包含所有附加的用户自定义属性的元组。如果没有UDAs存在,它将返回一个空元组。</target>
        </trans-unit>
        <trans-unit id="2156779dbfc3bbcd9c3c0f15b3c1104b1d55fa5e" translate="yes" xml:space="preserve">
          <source>Takes one argument, a symbol. Returns the identifier for that symbol as a string literal.</source>
          <target state="translated">接收一个参数,一个符号。返回该符号的标识符,作为一个字符串文字。</target>
        </trans-unit>
        <trans-unit id="341c32de0417883510f5908fdfb5d1408b6c6386" translate="yes" xml:space="preserve">
          <source>Takes one argument, a type. If the type has &lt;code&gt;alias this&lt;/code&gt; declarations, returns a sequence of the names (as &lt;code&gt;string&lt;/code&gt;s) of the members used in those declarations. Otherwise returns an empty sequence.</source>
          <target state="translated">接受一个参数，一种类型。如果类型具有 &lt;code&gt;alias this&lt;/code&gt; 声明的别名，则返回在这些声明中使用的成员的名称顺序（作为 &lt;code&gt;string&lt;/code&gt; s）。否则返回一个空序列。</target>
        </trans-unit>
        <trans-unit id="438ba37cf3e2477c1f85c28f97e1be1e2147103a" translate="yes" xml:space="preserve">
          <source>Takes one argument, which is a declaration symbol, or the type of a function, delegate, pointer to function, struct, class, or interface. Returns a string representing the &lt;a href=&quot;attribute#LinkageAttribute&quot;&gt;LinkageAttribute&lt;/a&gt; of the declaration. The string is one of:</source>
          <target state="translated">接受一个参数，它是一个声明符号，或者是函数，委托，指向函数，结构，类或接口的指针的类型。返回表示声明的&lt;a href=&quot;attribute#LinkageAttribute&quot;&gt;LinkageAttribute&lt;/a&gt;的字符串。字符串是以下之一：</target>
        </trans-unit>
        <trans-unit id="ba131648e1c6eb1f568b6cae116365dae307ac96" translate="yes" xml:space="preserve">
          <source>Takes one argument, which must be a type. It returns &lt;code&gt;true&lt;/code&gt; if the type is a &lt;a href=&quot;https://dlang.org/glossary.html#pod&quot;&gt;POD&lt;/a&gt; type, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">接受一个参数，该参数必须是类型。如果类型是&lt;a href=&quot;https://dlang.org/glossary.html#pod&quot;&gt;POD&lt;/a&gt;类型，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0441a02e332399ff202e6021026cd897a933b46b" translate="yes" xml:space="preserve">
          <source>Takes one argument. If that argument is a declaration, &lt;code&gt;true&lt;/code&gt; is returned if it is ref, out, or lazy, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">有一个论点。如果该参数是声明，则在ref，out或lazy时返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e2989333da89d1f14258e33489aab152f4d814e" translate="yes" xml:space="preserve">
          <source>Takes one argument. If that argument is a final function, &lt;code&gt;true&lt;/code&gt; is returned, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">有一个论点。如果该参数是最终函数，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ddec073d306dd4ca03018c32b117f3e1e7f2351a" translate="yes" xml:space="preserve">
          <source>Takes one argument. If that argument is a function marked with override, &lt;code&gt;true&lt;/code&gt; is returned, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">有一个论点。如果该参数是一个标有override的函数，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e068a9eb9df6980a9e0034c3f00e31a3c1deea42" translate="yes" xml:space="preserve">
          <source>Takes one argument. If that argument is a static function, meaning it has no context pointer, &lt;code&gt;true&lt;/code&gt; is returned, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">有一个论点。如果该参数是静态函数，则意味着它没有上下文指针，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d262441198edcdb862064f2f1b47b17c36638664" translate="yes" xml:space="preserve">
          <source>Takes one argument. If that argument is a symbol that refers to a &lt;a href=&quot;module&quot;&gt;spec/module, module&lt;/a&gt; then &lt;code&gt;true&lt;/code&gt; is returned, otherwise &lt;code&gt;false&lt;/code&gt;. &lt;a href=&quot;module#package-module&quot;&gt;Package modules&lt;/a&gt; are considered to be modules even if they have not been directly imported as modules.</source>
          <target state="translated">有一个论点。如果这样的说法是指一个符号&lt;a href=&quot;module&quot;&gt;规格/模块，模块&lt;/a&gt;则 &lt;code&gt;true&lt;/code&gt; 返回，否则 &lt;code&gt;false&lt;/code&gt; 。&lt;a href=&quot;module#package-module&quot;&gt;软件包模块&lt;/a&gt;即使未被直接导入为模块也被视为模块。</target>
        </trans-unit>
        <trans-unit id="e8489b031e8d252fd5210cb21ca32120b6e151d6" translate="yes" xml:space="preserve">
          <source>Takes one argument. If that argument is a symbol that refers to a &lt;a href=&quot;module&quot;&gt;spec/module, package&lt;/a&gt; then &lt;code&gt;true&lt;/code&gt; is returned, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">有一个论点。如果该参数是引用&lt;a href=&quot;module&quot;&gt;规范/模块&lt;/a&gt;的符号，则返回package，然后返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae0191e839c839921bd4e31032678c9d66e77c33" translate="yes" xml:space="preserve">
          <source>Takes one argument. If that argument is a template then &lt;code&gt;true&lt;/code&gt; is returned, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">有一个论点。如果该参数是模板，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ebe41dcd3dd8de1d463ea4bcbb0107229ca8ba7" translate="yes" xml:space="preserve">
          <source>Takes one argument. If that argument is a virtual function, &lt;code&gt;true&lt;/code&gt; is returned, otherwise &lt;code&gt;false&lt;/code&gt;. Final functions that don't override anything return false.</source>
          <target state="translated">有一个论点。如果该参数是一个虚函数，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。不覆盖任何内容的最终函数将返回false。</target>
        </trans-unit>
        <trans-unit id="863c570d92b83c67f55f3e7188a134a725cf3bf6" translate="yes" xml:space="preserve">
          <source>Takes one argument. If that argument is an abstract function, &lt;code&gt;true&lt;/code&gt; is returned, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">有一个论点。如果该参数是抽象函数，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61eb2f0952d80546e2227df1b6d3e1f066986474" translate="yes" xml:space="preserve">
          <source>Takes one argument. It returns &lt;code&gt;true&lt;/code&gt; if the argument is a nested type which internally stores a context pointer, otherwise it returns &lt;code&gt;false&lt;/code&gt;. Nested types can be &lt;a href=&quot;class#nested&quot;&gt;classes&lt;/a&gt;, &lt;a href=&quot;struct#nested&quot;&gt;structs&lt;/a&gt;, and &lt;a href=&quot;function#variadicnested&quot;&gt;functions&lt;/a&gt;.</source>
          <target state="translated">有一个论点。它返回 &lt;code&gt;true&lt;/code&gt; ，如果参数是一个嵌套类型的内部存储的上下文指针，否则返回 &lt;code&gt;false&lt;/code&gt; 。嵌套类型可以是&lt;a href=&quot;class#nested&quot;&gt;类&lt;/a&gt;，&lt;a href=&quot;struct#nested&quot;&gt;结构&lt;/a&gt;和&lt;a href=&quot;function#variadicnested&quot;&gt;函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3e2a814d0c6c5c43dbdb1aa3794de3e4f7e8cebe" translate="yes" xml:space="preserve">
          <source>Takes one argument. It returns &lt;code&gt;true&lt;/code&gt; if the argument is a symbol marked with the &lt;code&gt;@future&lt;/code&gt; keyword, otherwise &lt;code&gt;false&lt;/code&gt;. Currently, only functions and variable declarations have support for the &lt;code&gt;@future&lt;/code&gt; keyword.</source>
          <target state="translated">有一个论点。如果参数是带有 &lt;code&gt;@future&lt;/code&gt; 关键字标记的符号，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。当前，仅函数和变量声明支持 &lt;code&gt;@future&lt;/code&gt; 关键字。</target>
        </trans-unit>
        <trans-unit id="b92fd55104f993e0c852b4df6c0429c26903b7ef" translate="yes" xml:space="preserve">
          <source>Takes one argument. It returns &lt;code&gt;true&lt;/code&gt; if the argument is a symbol marked with the &lt;code&gt;deprecated&lt;/code&gt; keyword, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">有一个论点。如果参数是标有 &lt;code&gt;deprecated&lt;/code&gt; 关键字的符号，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f348e74b9607daf851a06d094877b94982d44164" translate="yes" xml:space="preserve">
          <source>Takes ownership of a store assuming it already was organized as a heap.</source>
          <target state="translated">假设一个商店已经被组织成一个堆,就会获得它的所有权。</target>
        </trans-unit>
        <trans-unit id="abf275e8fde1a93863fd7e002f7fe18e1771a7d8" translate="yes" xml:space="preserve">
          <source>Takes ownership of a store. After this, manipulating &lt;code&gt;s&lt;/code&gt; may make the heap work incorrectly.</source>
          <target state="translated">拥有商店的所有权。此后，操作 &lt;code&gt;s&lt;/code&gt; 可能会使堆工作不正确。</target>
        </trans-unit>
        <trans-unit id="ba241c43b9e67f71ff3c0ddfe5c1f8f084092339" translate="yes" xml:space="preserve">
          <source>Takes the number of hnsecs (100 ns) since midnight, January 1st, 1 A.D. in UTC time (i.e. std time) and converts it to this time zone's time.</source>
          <target state="translated">从UTC时间(即标准时间)1月1日午夜起的小时数(100nsecs),并将其转换为这个时区的时间。</target>
        </trans-unit>
        <trans-unit id="4065d089b4e20bd1ee13267e586cbcfef7117537" translate="yes" xml:space="preserve">
          <source>Takes the number of hnsecs (100 ns) since midnight, January 1st, 1 A.D. in UTC time (i.e. std time) and returns whether DST is effect in this time zone at the given point in time.</source>
          <target state="translated">取UTC时间(即标准时间)1月1日午夜以来的小时数(100nsecs),并返回给定时间点该时区的DST是否有效。</target>
        </trans-unit>
        <trans-unit id="848786fb1221dc1ebb6ce572a55838f0543e640b" translate="yes" xml:space="preserve">
          <source>Takes the number of hnsecs (100 ns) since midnight, January 1st, 1 A.D. in UTC time (i.e. std time) and returns whether DST is in effect in this time zone at the given point in time.</source>
          <target state="translated">取UTC时间(即标准时间)1月1日午夜以来的小时数(100nsecs),并返回给定时间点该时区的DST是否有效。</target>
        </trans-unit>
        <trans-unit id="a17f6231d4d687b48dc77dac8c8037b006a58d20" translate="yes" xml:space="preserve">
          <source>Takes the number of hnsecs (100 ns) since midnight, January 1st, 1 A.D. in this time zone's time and converts it to UTC (i.e. std time).</source>
          <target state="translated">从公元1月1日午夜开始,在这个时区的时间里,用100nsecs来表示,并将其转换为UTC(即标准时间)。</target>
        </trans-unit>
        <trans-unit id="b91b3f492592d4dd757b6ee3c4c2c67f1195b458" translate="yes" xml:space="preserve">
          <source>Takes two arguments and returns bool &lt;code&gt;true&lt;/code&gt; if they are the same symbol, &lt;code&gt;false&lt;/code&gt; if not.</source>
          <target state="translated">接受两个参数，如果它们是相同的符号，则返回布尔值 &lt;code&gt;true&lt;/code&gt; ,否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1fd6b734070147ebd7e778bead2ddc672a61abd2" translate="yes" xml:space="preserve">
          <source>Takes two arguments, the second must be a string. The result is an expression formed from the first argument, followed by a &amp;lsquo;.&amp;rsquo;, followed by the second argument as an identifier.</source>
          <target state="translated">带有两个参数，第二个必须是字符串。结果是一个表达式，该表达式由第一个参数组成，后跟一个&amp;ldquo;。&amp;rdquo;，后跟第二个参数作为标识符。</target>
        </trans-unit>
        <trans-unit id="6091a04c8d0ceed563c5ac0a0c00d4d331dce18d" translate="yes" xml:space="preserve">
          <source>Takes two arguments. The first must be a symbol or expression. The second is a symbol, such as an alias to a member of the first argument. The result is the second argument interpreted with its &lt;code&gt;this&lt;/code&gt; context set to the value of the first argument.</source>
          <target state="translated">有两个参数。第一个必须是符号或表达式。第二个是符号，例如第一个参数成员的别名。结果是第二个参数，其 &lt;code&gt;this&lt;/code&gt; 上下文设置为第一个参数的值。</target>
        </trans-unit>
        <trans-unit id="d2d8ce9f86ea0164b3d45e729c421e562a767a2b" translate="yes" xml:space="preserve">
          <source>Takes two arguments. The first must either be a function symbol, or a type that is a function, delegate or a function pointer. The second is an integer identifying which parameter, where the first parameter is 0. It returns a tuple of strings representing the storage classes of that parameter.</source>
          <target state="translated">需要两个参数。第一个参数必须是一个函数符号,或者是一个函数、委托或函数指针的类型。第二个参数是一个整数,标识哪个参数,其中第一个参数是0,它返回一个字符串元组,代表该参数的存储类。</target>
        </trans-unit>
        <trans-unit id="088b6ccbc4dc304c0a15b65acceb41e52684a26d" translate="yes" xml:space="preserve">
          <source>Taking a 2-level Trie as an example the principle of operation is as follows. Split the number of bits in a key (code point, 21 bits) into 2 components (e.g. 15 and 8). The first is the number of bits in the index of the trie and the other is number of bits in each page of the trie. The layout of the trie is then an array of size 2^^bits-of-index followed an array of memory chunks of size 2^^bits-of-page/bits-per-element.</source>
          <target state="translated">以2级Trie为例,其操作原理如下。将一个密钥的位数(码点,21位)分成2个部分(如15和8),第一个部分是Trie的索引中的位数,另一个部分是Trie每页的位数。第一部分是Trie的索引中的位数,另一部分是Trie每页中的位数。Trie的布局是一个大小为2^^bits-of-index的数组,然后是一个大小为2^^bits-of-page/bits-per-element的内存块数组。</target>
        </trans-unit>
        <trans-unit id="cdebdf3e1f27466bf5788aea765d124954770adc" translate="yes" xml:space="preserve">
          <source>Taking a &lt;code&gt;ubyte[n]&lt;/code&gt; helps prevent accidentally using a swapped value as a regular one (and in the case of floating point values, it's necessary, because the FPU will mess up any swapped floating point values. So, you can't actually have swapped floating point values as floating point values).</source>
          <target state="translated">取一个 &lt;code&gt;ubyte[n]&lt;/code&gt; 有助于防止意外地将交换值用作常规值（对于浮点值，则有必要，因为FPU会弄乱任何交换的浮点值。因此，实际上您不能拥有交换浮点值作为浮点值）。</target>
        </trans-unit>
        <trans-unit id="12c7df23cc8d75b166a89e7a81c239e1eaa5fc9d" translate="yes" xml:space="preserve">
          <source>Taking the address of (i.e. making a delegate to) a nested function that accesses variables in an outer scope</source>
          <target state="translated">取一个访问外部作用域中变量的嵌套函数的地址(即做一个委托)。</target>
        </trans-unit>
        <trans-unit id="4f571f8c15567583b37693f78ef5f80a807f7cd4" translate="yes" xml:space="preserve">
          <source>Taking the address of a local variable or function parameter.</source>
          <target state="translated">取一个局部变量或函数参数的地址。</target>
        </trans-unit>
        <trans-unit id="3d44d06fda277fec8865be5e542736e38ae54f97" translate="yes" xml:space="preserve">
          <source>Takri</source>
          <target state="translated">Takri</target>
        </trans-unit>
        <trans-unit id="86c2b6275f076b31c4be9812e835dab2a6f07ccf" translate="yes" xml:space="preserve">
          <source>Tamil</source>
          <target state="translated">Tamil</target>
        </trans-unit>
        <trans-unit id="61ad50a9b9189cc3cf1874568e35e7901ff4c982" translate="yes" xml:space="preserve">
          <source>Target</source>
          <target state="translated">Target</target>
        </trans-unit>
        <trans-unit id="e2ae5bcbc5b7ffd68695f52a7585c89c8969aab3" translate="yes" xml:space="preserve">
          <source>Target &lt;strong id=&quot;parse&quot;&gt;parse&lt;/strong&gt;(Target, Source)(ref Source s)</source>
          <target state="translated">目标&lt;strong id=&quot;parse&quot;&gt;解析&lt;/strong&gt;（Target，Source）（ref Source s）</target>
        </trans-unit>
        <trans-unit id="b514ae24a3aa7e92170dd30b3670d799fc2ddaa0" translate="yes" xml:space="preserve">
          <source>Target &lt;strong id=&quot;parse&quot;&gt;parse&lt;/strong&gt;(Target, Source)(ref Source s, dchar lbracket = '[', dchar rbracket = ']', dchar comma = ',')</source>
          <target state="translated">目标&lt;strong id=&quot;parse&quot;&gt;解析&lt;/strong&gt;（Target，Source）（ref Source s，dchar lbracket ='['，dchar rbracket =']'，dchar逗号='，'）</target>
        </trans-unit>
        <trans-unit id="88b8c449e785e82ac31d743cbd6ec6d0cecb908c" translate="yes" xml:space="preserve">
          <source>Target &lt;strong id=&quot;parse&quot;&gt;parse&lt;/strong&gt;(Target, Source)(ref Source s, dchar lbracket = '[', dchar rbracket = ']', dchar keyval = ':', dchar comma = ',')</source>
          <target state="translated">目标&lt;strong id=&quot;parse&quot;&gt;解析&lt;/strong&gt;（Target，Source）（ref Source s，dchar lbracket ='['，dchar rbracket =']'，dchar keyval ='：'，dchar逗号='，'）</target>
        </trans-unit>
        <trans-unit id="ababb58bd98453af215c7078c2bf13ec699efd22" translate="yes" xml:space="preserve">
          <source>Target &lt;strong id=&quot;parse&quot;&gt;parse&lt;/strong&gt;(Target, Source)(ref Source source)</source>
          <target state="translated">目标&lt;strong id=&quot;parse&quot;&gt;解析&lt;/strong&gt;（目标，源）（参考源源）</target>
        </trans-unit>
        <trans-unit id="6e89e3cf2e5369ad578243ee86873fbe19e0d25b" translate="yes" xml:space="preserve">
          <source>Target &lt;strong id=&quot;parse&quot;&gt;parse&lt;/strong&gt;(Target, Source)(ref Source source, uint radix)</source>
          <target state="translated">目标&lt;strong id=&quot;parse&quot;&gt;解析&lt;/strong&gt;（目标，源）（参考源，uint基数）</target>
        </trans-unit>
        <trans-unit id="d5afbc0e9237897788f0f2a802fb65dde3d350c3" translate="yes" xml:space="preserve">
          <source>Target &lt;strong id=&quot;target&quot;&gt;target&lt;/strong&gt;;</source>
          <target state="translated">目标&lt;strong id=&quot;target&quot;&gt;目标&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ad45e9e6809eb415ba34b6b16cb00ee54f97882b" translate="yes" xml:space="preserve">
          <source>TargetOS &lt;code&gt;os&lt;/code&gt;</source>
          <target state="translated">TargetOS &lt;code&gt;os&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d43f3dda84c1737bbb2ff924a8ba890d1d06511" translate="yes" xml:space="preserve">
          <source>TargetOS &lt;strong id=&quot;os&quot;&gt;os&lt;/strong&gt;;</source>
          <target state="translated">TargetOS &lt;strong id=&quot;os&quot;&gt;操作系统&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6c4ef0b4f99b87e3c1020b8cae3d6c26c8e6f085" translate="yes" xml:space="preserve">
          <source>TargetRange &lt;code&gt;target&lt;/code&gt;</source>
          <target state="translated">TargetRange &lt;code&gt;target&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb6a59f9131000cf28fe97282bcb28c63b9e4757" translate="yes" xml:space="preserve">
          <source>TargetRange &lt;strong id=&quot;copy&quot;&gt;copy&lt;/strong&gt;(SourceRange, TargetRange)(SourceRange source, TargetRange target)</source>
          <target state="translated">TargetRange &lt;strong id=&quot;copy&quot;&gt;复制&lt;/strong&gt;（SourceRange，TargetRange）（SourceRange源，TargetRange目标）</target>
        </trans-unit>
        <trans-unit id="0ac7d0e93a32f99695c525a23b3d79466599bc63" translate="yes" xml:space="preserve">
          <source>Tarr &lt;code&gt;arr&lt;/code&gt;</source>
          <target state="translated">塔尔 &lt;code&gt;arr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cbc5a0ebe859225371131257cf9afaa28a3ac017" translate="yes" xml:space="preserve">
          <source>Tarr &lt;code&gt;arrs&lt;/code&gt;</source>
          <target state="translated">塔尔&amp;middot; &lt;code&gt;arrs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a3f39998ffdb8d442c80697d22b06e7ac5f3819d" translate="yes" xml:space="preserve">
          <source>Tarr &lt;code&gt;from&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;from&lt;/code&gt; 塔尔</target>
        </trans-unit>
        <trans-unit id="cf87ba10bfa3c6aec9ccdfb8418fb56c922287f3" translate="yes" xml:space="preserve">
          <source>Tarr &lt;code&gt;p&lt;/code&gt;</source>
          <target state="translated">塔尔 &lt;code&gt;p&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44ca406f8c2b438a9883f43dbecea26d13faa9c5" translate="yes" xml:space="preserve">
          <source>Tarr &lt;code&gt;px&lt;/code&gt;</source>
          <target state="translated">塔尔 &lt;code&gt;px&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c66f7fbc59602165b2e59871d84a099eca281157" translate="yes" xml:space="preserve">
          <source>Tarr &lt;code&gt;to&lt;/code&gt;</source>
          <target state="translated">塔尔 &lt;code&gt;to&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="15764660dbf51678e961f9da7c77d238282a048f" translate="yes" xml:space="preserve">
          <source>Tarr &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">塔尔 &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="953418f76b8ef3144338e8d854335c95fd12fbea" translate="yes" xml:space="preserve">
          <source>Tarr &lt;code&gt;y&lt;/code&gt;</source>
          <target state="translated">塔尔 &lt;code&gt;y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2de521eff8a440c1a72d2890be1048326ca20663" translate="yes" xml:space="preserve">
          <source>Technically the memoized function should be pure because &lt;code&gt;memoize&lt;/code&gt; assumes it will always return the same result for a given tuple of arguments. However, &lt;code&gt;memoize&lt;/code&gt; does not enforce that because sometimes it is useful to memoize an impure function, too.</source>
          <target state="translated">从技术上讲，备注函数应该是纯函数，因为 &lt;code&gt;memoize&lt;/code&gt; 假定对于给定的元组参数，它将始终返回相同的结果。但是， &lt;code&gt;memoize&lt;/code&gt; 并不强制执行此操作，因为有时记忆不纯函数也很有用。</target>
        </trans-unit>
        <trans-unit id="1e1d246b5e426f01e5402235b114a3eca1d4204f" translate="yes" xml:space="preserve">
          <source>Tells whether a type &lt;code&gt;T&lt;/code&gt; is statically allowed for storage inside a &lt;code&gt;VariantN&lt;/code&gt; object by looking &lt;code&gt;T&lt;/code&gt; up in &lt;code&gt;AllowedTypes&lt;/code&gt;.</source>
          <target state="translated">通过在 &lt;code&gt;AllowedTypes&lt;/code&gt; 中查找 &lt;code&gt;T&lt;/code&gt; ，确定是否静态允许将 &lt;code&gt;T&lt;/code&gt; 类型存储在 &lt;code&gt;VariantN&lt;/code&gt; 对象中。</target>
        </trans-unit>
        <trans-unit id="ea6c03461dc3a543514f149ca6bb793d0a9e158a" translate="yes" xml:space="preserve">
          <source>Telugu</source>
          <target state="translated">Telugu</target>
        </trans-unit>
        <trans-unit id="3ec1ae061c27325c7ecb543adf91235e22cbc9ed" translate="yes" xml:space="preserve">
          <source>Template</source>
          <target state="translated">Template</target>
        </trans-unit>
        <trans-unit id="e6f1ec42ae0af9f2599a77525cba82e65dfc5e18" translate="yes" xml:space="preserve">
          <source>Template API</source>
          <target state="translated">模板API</target>
        </trans-unit>
        <trans-unit id="e522f15415ec8661bc2e6e1609fc4f30a391c0b7" translate="yes" xml:space="preserve">
          <source>Template API CRC32 implementation. See &lt;code&gt;std.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="translated">模板API CRC32实现。有关模板和OOP API之间的差异，请参见 &lt;code&gt;std.digest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8437ae9d6af39ff3da2624003e6f14a20f425560" translate="yes" xml:space="preserve">
          <source>Template API CRC64-ECMA implementation. See &lt;code&gt;std.digest.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="translated">模板API CRC64-ECMA实现。有关模板和OOP API之间的差异，请参见 &lt;code&gt;std.digest.digest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e42beabacb6072d0abaf212b35f9041a76331e7" translate="yes" xml:space="preserve">
          <source>Template API CRC64-ECMA implementation. See &lt;code&gt;std.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="translated">模板API CRC64-ECMA实现。有关模板和OOP API之间的差异，请参见 &lt;code&gt;std.digest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c9cf433918e6809484068ba2a4633144d8783e12" translate="yes" xml:space="preserve">
          <source>Template API CRC64-ISO implementation. See &lt;code&gt;std.digest.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="translated">模板API CRC64-ISO实现。有关模板和OOP API之间的差异，请参见 &lt;code&gt;std.digest.digest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90d0a62e41df3264404eee56347b930553948824" translate="yes" xml:space="preserve">
          <source>Template API CRC64-ISO implementation. See &lt;code&gt;std.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="translated">模板API CRC64-ISO实现。有关模板和OOP API之间的差异，请参见 &lt;code&gt;std.digest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="377ef92c355bfb9804e95e132cfdf2caf2a2cf42" translate="yes" xml:space="preserve">
          <source>Template API HMAC implementation.  This implements an HMAC over the digest H. If H doesn't provide information about the block size, it can be supplied explicitly using the second overload.  This type conforms to &lt;a href=&quot;std_digest#isDigest&quot;&gt;&lt;code&gt;std.digest.isDigest&lt;/code&gt;&lt;/a&gt;.  Compute HMAC over an input string</source>
          <target state="translated">模板API HMAC实现。这将在摘要H上实现HMAC。如果H不提供有关块大小的信息，则可以使用第二个过载显式提供它。此类型符合&lt;a href=&quot;std_digest#isDigest&quot;&gt; &lt;code&gt;std.digest.isDigest&lt;/code&gt; &lt;/a&gt;。通过输入字符串计算HMAC</target>
        </trans-unit>
        <trans-unit id="80c37626c0104765b3f472dfcf7c74d67406698a" translate="yes" xml:space="preserve">
          <source>Template API MD5 implementation. See &lt;code&gt;std.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="translated">模板API MD5实现。有关模板和OOP API之间的差异，请参见 &lt;code&gt;std.digest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9baa26a4e441be15d1a0026335d4968924c76983" translate="yes" xml:space="preserve">
          <source>Template API RIPEMD160 implementation. See &lt;code&gt;std.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="translated">模板API RIPEMD160的实现。有关模板和OOP API之间的差异，请参见 &lt;code&gt;std.digest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3b1b330b49ad8ca244de89c95f975aa04b55c181" translate="yes" xml:space="preserve">
          <source>Template API SHA1/SHA2 implementation. Supports: SHA-1, SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224 and SHA-512/256.</source>
          <target state="translated">模板API SHA1/SHA2实现。支持:SHA-1、SHA-224、SHA-256、SHA-384、SHA-512、SHA-512/224和SHA-512/256。</target>
        </trans-unit>
        <trans-unit id="f62ed7169159e611b14c3e7949b6b6e1a7e655cd" translate="yes" xml:space="preserve">
          <source>Template Alias Parameters</source>
          <target state="translated">模板别名参数</target>
        </trans-unit>
        <trans-unit id="d18303084ca65e4a94354ae1840dc40df28605aa" translate="yes" xml:space="preserve">
          <source>Template Constraints</source>
          <target state="translated">模板约束</target>
        </trans-unit>
        <trans-unit id="fb7a9c95d4ed67c8b1553e4381f99167b917a11f" translate="yes" xml:space="preserve">
          <source>Template Constructors</source>
          <target state="translated">模板构造器</target>
        </trans-unit>
        <trans-unit id="38e266fe765270ed7c964e156080fde6579d7894" translate="yes" xml:space="preserve">
          <source>Template Instance Names have the types and values of its parameters encoded into it:</source>
          <target state="translated">模板实例名有其参数的类型和值编码进去。</target>
        </trans-unit>
        <trans-unit id="30f85684a878aa9af8afa40283325beae87c4aa0" translate="yes" xml:space="preserve">
          <source>Template Mixins</source>
          <target state="translated">模板插件</target>
        </trans-unit>
        <trans-unit id="bc3b3525b364d27d5b3900862241bda1d3596e67" translate="yes" xml:space="preserve">
          <source>Template Parameter Default Values</source>
          <target state="translated">模板参数默认值</target>
        </trans-unit>
        <trans-unit id="eb06de1f01f060cf9430e79280ee0699d4203e25" translate="yes" xml:space="preserve">
          <source>Template Sequence Parameters</source>
          <target state="translated">模板序列参数</target>
        </trans-unit>
        <trans-unit id="e7ca209f8d14b1abb05f80fa798822ceaa811571" translate="yes" xml:space="preserve">
          <source>Template This Parameters</source>
          <target state="translated">模板 此参数</target>
        </trans-unit>
        <trans-unit id="82084cfe35a73bcd4625e0721e2f57a23701a271" translate="yes" xml:space="preserve">
          <source>Template Type Parameters</source>
          <target state="translated">模板类型参数</target>
        </trans-unit>
        <trans-unit id="779713d88fde73c5e64b672f1774ec90dca0ab03" translate="yes" xml:space="preserve">
          <source>Template Value Parameters</source>
          <target state="translated">模板值参数</target>
        </trans-unit>
        <trans-unit id="26171c395cd3bc136eb63e6249860cab45283f92" translate="yes" xml:space="preserve">
          <source>Template arguments not implicitly deduced can have default values:</source>
          <target state="translated">未隐式推导的模板参数可以有默认值。</target>
        </trans-unit>
        <trans-unit id="8d14578ab93cdc97bb3a362ef20b3ffe126a7918" translate="yes" xml:space="preserve">
          <source>Template arguments.</source>
          <target state="translated">模板参数。</target>
        </trans-unit>
        <trans-unit id="19c8f3dce2a89300350e2d7666fb3e86f4a6b7f2" translate="yes" xml:space="preserve">
          <source>Template constraints can be used with aggregate types (structs, classes, unions). Constraints are effectively used with library module &quot;std.traits&quot;:</source>
          <target state="translated">模板约束可以与集合类型(结构、类、联合)一起使用。约束可以有效地与库模块 &quot;std.traits &quot;一起使用。</target>
        </trans-unit>
        <trans-unit id="bf64bd05317e164be7848210935f1949fa7269a4" translate="yes" xml:space="preserve">
          <source>Template constraints can be used with aggregate types (structs, classes, unions). Constraints are effectively used with library module &lt;a href=&quot;https://dlang.org/phobos/std_traits.html&quot;&gt;&lt;code&gt;std.traits&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">模板约束可以与聚合类型（结构，类，联合）一起使用。约束可有效地与库模块&lt;a href=&quot;https://dlang.org/phobos/std_traits.html&quot;&gt; &lt;code&gt;std.traits&lt;/code&gt; 一起使用&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="1691afafe951d535cce0c8181934e0f030a369a1" translate="yes" xml:space="preserve">
          <source>Template features can be combined to produce some interesting effects, such as compile time evaluation of non-trivial functions. For example, a factorial template can be written:</source>
          <target state="translated">模板特性可以结合起来产生一些有趣的效果,比如非平凡函数的编译时评估。例如,可以写一个因子模板。</target>
        </trans-unit>
        <trans-unit id="2ba9b580c30519089e0945b54f1c0ea578e0a06a" translate="yes" xml:space="preserve">
          <source>Template for implementing Base64 encoding and decoding.</source>
          <target state="translated">用于实现Base64编码和解码的模板。</target>
        </trans-unit>
        <trans-unit id="f6c583c1ff7413acce9779ce3bde7a23b883e82e" translate="yes" xml:space="preserve">
          <source>Template functions are useful for avoiding code duplication - instead of writing several copies of a function, each with a different parameter type, a single function template can be sufficient. For example:</source>
          <target state="translated">模板函数对于避免代码重复是很有用的--与其编写一个函数的多个副本,每个副本都有不同的参数类型,不如编写一个函数模板就可以了。例如</target>
        </trans-unit>
        <trans-unit id="ce9ed1b4180abeab3ceea25b15bb1a299cbee42c" translate="yes" xml:space="preserve">
          <source>Template functions, auto functions, nested functions and lambdas can deduce the &lt;code&gt;return scope&lt;/code&gt; attribute.</source>
          <target state="translated">模板函数，自动函数，嵌套函数和lambda可以推断出 &lt;code&gt;return scope&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="a5e7b8c0a5e4e1f334cd544200e05d17c0c0f0ab" translate="yes" xml:space="preserve">
          <source>Template functions, auto functions, nested functions and lambdas can deduce the &lt;code&gt;return&lt;/code&gt; attribute.</source>
          <target state="translated">模板函数，自动函数，嵌套函数和lambda可以推断出 &lt;code&gt;return&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="25478b27ac38cf28dffdb029b491087b8937cf14" translate="yes" xml:space="preserve">
          <source>Template implementation.</source>
          <target state="translated">模板实施。</target>
        </trans-unit>
        <trans-unit id="dae7857caeb9fd343ac0c8dc8bd3c01ab768ee59" translate="yes" xml:space="preserve">
          <source>Template instance names</source>
          <target state="translated">模板实例名称</target>
        </trans-unit>
        <trans-unit id="4498c6e2d0d9903363598d28a52a34b1e0d3c903" translate="yes" xml:space="preserve">
          <source>Template instantiation</source>
          <target state="translated">模板实例化</target>
        </trans-unit>
        <trans-unit id="e148426eaf0fc75b319929a7514c305716d2cf43" translate="yes" xml:space="preserve">
          <source>Template names</source>
          <target state="translated">模板名称</target>
        </trans-unit>
        <trans-unit id="93a56d0fe88789d1d0c70b3ee943a36512557c8d" translate="yes" xml:space="preserve">
          <source>Template parameter defaults are the value or type to use for the</source>
          <target state="translated">模板参数的默认值或类型是用于</target>
        </trans-unit>
        <trans-unit id="c042a73bca6c8bc4a4a5a2fd8b459e9ee19ba60f" translate="yes" xml:space="preserve">
          <source>Template parameter specializations constrain the values or types the</source>
          <target state="translated">模板参数特殊化限制了参数的值或类型。</target>
        </trans-unit>
        <trans-unit id="f1b7c3f55de7f3a6405e167ee5a977c3f7b9a92e" translate="yes" xml:space="preserve">
          <source>Template parameter; the type of the allocated buffer, and the type returned. Defaults to &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">模板参数；分配的缓冲区的类型，以及返回的类型。默认为 &lt;code&gt;string&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5585272334e1084961cfa161efdc30cdbc9f449" translate="yes" xml:space="preserve">
          <source>Template parameters can be types, values, symbols, or sequences. Types can be any type. Value parameters must be of an integral type, floating point type, or string type and specializations for them must resolve to an integral constant, floating point constant, null, or a string literal. Symbols can be any non-local symbol. Sequences can contain zero or more types, values or symbols.</source>
          <target state="translated">模板参数可以是类型、值、符号或序列。类型可以是任何类型。值参数必须是积分类型、浮点类型或字符串类型,它们的特殊化必须解析为积分常数、浮点常数、空值或字符串文字。符号可以是任何非局部符号。序列可以包含零或多个类型、值或符号。</target>
        </trans-unit>
        <trans-unit id="3053d10b710a4345e1d2a806a5a0d892919d438c" translate="yes" xml:space="preserve">
          <source>Template parameters.</source>
          <target state="translated">模板参数:</target>
        </trans-unit>
        <trans-unit id="f2eaecce2004457caafb0a566e6258478e0c81e3" translate="yes" xml:space="preserve">
          <source>Template predicates</source>
          <target state="translated">模板谓词</target>
        </trans-unit>
        <trans-unit id="3c6f35922df22ba3979c846bfb66fd5f925df11c" translate="yes" xml:space="preserve">
          <source>Template value parameter types can be any type which can be statically initialized at compile time. Template value arguments can be integer values, floating point values, nulls, string values, array literals of template value arguments, associative array literals of template value arguments, or struct literals of template value arguments.</source>
          <target state="translated">模板值参数类型可以是任何可以在编译时静态初始化的类型。模板值参数可以是整数值、浮点值、空值、字符串值、模板值参数的数组字元、模板值参数的关联数组字元或模板值参数的结构字元。</target>
        </trans-unit>
        <trans-unit id="a4f76ae41610f265b87249bfa826fc772c21ffbd" translate="yes" xml:space="preserve">
          <source>Template with arity smaller than or equal to Template</source>
          <target state="translated">模板的arity小于或等于Template。</target>
        </trans-unit>
        <trans-unit id="3db96bd3c4b157efb5c6bcf06af65bf6679fe917" translate="yes" xml:space="preserve">
          <source>TemplateArgumentList</source>
          <target state="translated">TemplateArgumentList</target>
        </trans-unit>
        <trans-unit id="a6a7d2669effca80a1c7fac717de9a8b2a82ba1a" translate="yes" xml:space="preserve">
          <source>TemplateDeclaration</source>
          <target state="translated">TemplateDeclaration</target>
        </trans-unit>
        <trans-unit id="9029a1aca4f28b513baec9b6439e6636b063cf0c" translate="yes" xml:space="preserve">
          <source>TemplateDeclaration &lt;strong id=&quot;getFuncTemplateDecl&quot;&gt;getFuncTemplateDecl&lt;/strong&gt;(Dsymbol s);</source>
          <target state="translated">TemplateDeclaration &lt;strong id=&quot;getFuncTemplateDecl&quot;&gt;getFuncTemplateDecl&lt;/strong&gt;（Dsymbol s）;</target>
        </trans-unit>
        <trans-unit id="6517815fe52a5a1aa2089d12b1bbf085f56454ad" translate="yes" xml:space="preserve">
          <source>TemplateInstance</source>
          <target state="translated">TemplateInstance</target>
        </trans-unit>
        <trans-unit id="3d1fc910d66b4cf59b41a83bd1f011148439a47f" translate="yes" xml:space="preserve">
          <source>TemplateInstance &lt;code&gt;ti&lt;/code&gt;</source>
          <target state="translated">TemplateInstance &lt;code&gt;ti&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="32f6a07ecefd7064d208c91c6d529d1eabf6fae0" translate="yes" xml:space="preserve">
          <source>TemplateInstance &lt;strong id=&quot;addInstance&quot;&gt;addInstance&lt;/strong&gt;(TemplateInstance ti);</source>
          <target state="translated">TemplateInstance &lt;strong id=&quot;addInstance&quot;&gt;addInstance&lt;/strong&gt;（TemplateInstance ti）;</target>
        </trans-unit>
        <trans-unit id="5626cce6b123c95bbf147668ea277a06194dbd7b" translate="yes" xml:space="preserve">
          <source>TemplateInstance &lt;strong id=&quot;findExistingInstance&quot;&gt;findExistingInstance&lt;/strong&gt;(TemplateInstance tithis, Expressions* fargs);</source>
          <target state="translated">TemplateInstance &lt;strong id=&quot;findExistingInstance&quot;&gt;findExistingInstance&lt;/strong&gt;（TemplateInstance tithis，Expressions * fargs）;</target>
        </trans-unit>
        <trans-unit id="fdcd96c0f2459103878b2413ec2c601fc1498f4a" translate="yes" xml:space="preserve">
          <source>TemplateMixin</source>
          <target state="translated">TemplateMixin</target>
        </trans-unit>
        <trans-unit id="b981d77c6daa310cf9f7bc1dffb15d121423d2f9" translate="yes" xml:space="preserve">
          <source>TemplateMixinDeclaration</source>
          <target state="translated">TemplateMixinDeclaration</target>
        </trans-unit>
        <trans-unit id="1098903e5f4fc2ff49f206b24ec3f9c1c949a0da" translate="yes" xml:space="preserve">
          <source>TemplateParameter</source>
          <target state="translated">TemplateParameter</target>
        </trans-unit>
        <trans-unit id="6b0a43baab11f444c6db7f8fbb993842fcd75ba0" translate="yes" xml:space="preserve">
          <source>TemplateParameter &lt;code&gt;tp&lt;/code&gt;</source>
          <target state="translated">TemplateParameter &lt;code&gt;tp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a724f289f948ed94a3864202a97f7192ac4bdd96" translate="yes" xml:space="preserve">
          <source>TemplateParameterList</source>
          <target state="translated">TemplateParameterList</target>
        </trans-unit>
        <trans-unit id="583de77cc39af83d745b866a4f4097143e9876ee" translate="yes" xml:space="preserve">
          <source>TemplateParameters* &lt;code&gt;parameters&lt;/code&gt;</source>
          <target state="translated">TemplateParameters * &lt;code&gt;parameters&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f1918bba11e5a6f5b4fc7ad6ef48b8652a0887d7" translate="yes" xml:space="preserve">
          <source>TemplateParameters* &lt;code&gt;tparams&lt;/code&gt;</source>
          <target state="translated">TemplateParameters * &lt;code&gt;tparams&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8d9b2f66638d335347804a4c0613b67636525619" translate="yes" xml:space="preserve">
          <source>TemplateSequenceParameter</source>
          <target state="translated">TemplateSequenceParameter</target>
        </trans-unit>
        <trans-unit id="991a882d2c6a34560908a425e97dee08f5240a1c" translate="yes" xml:space="preserve">
          <source>TemplateThisParameter</source>
          <target state="translated">TemplateThisParameter</target>
        </trans-unit>
        <trans-unit id="fa08af40a67e00ef14408a29a123247531c65448" translate="yes" xml:space="preserve">
          <source>TemplateTupleParameter &lt;strong id=&quot;isVariadic&quot;&gt;isVariadic&lt;/strong&gt;();</source>
          <target state="translated">TemplateTupleParameter &lt;strong id=&quot;isVariadic&quot;&gt;isVariadic&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="f25b700ed9f092123a43acb205a6869342cf9dd6" translate="yes" xml:space="preserve">
          <source>Templates</source>
          <target state="translated">Templates</target>
        </trans-unit>
        <trans-unit id="d492087ea67943dc74c840e6365eee707931cb08" translate="yes" xml:space="preserve">
          <source>Templates are D's approach to generic programming. Templates are defined with a</source>
          <target state="translated">模板是D的通用编程方法。模板的定义有一个</target>
        </trans-unit>
        <trans-unit id="0831437711dff1dd4780cf1794113d3fdb3f80b9" translate="yes" xml:space="preserve">
          <source>Templates are explicitly instantiated with:</source>
          <target state="translated">模板是显式实例化的,用。</target>
        </trans-unit>
        <trans-unit id="feb605d755d6a50ca7339b029a5943f74ea943f9" translate="yes" xml:space="preserve">
          <source>Templates can be used to form constructors for classes and structs.</source>
          <target state="translated">模板可以用来形成类和结构的构造函数。</target>
        </trans-unit>
        <trans-unit id="70f39a950e78ed5adbca12f692738cfb53d2d504" translate="yes" xml:space="preserve">
          <source>Templates cannot be used to add non-static fields or virtual functions to classes or interfaces. For example:</source>
          <target state="translated">模板不能用于向类或接口添加非静态字段或虚拟函数。例如:</target>
        </trans-unit>
        <trans-unit id="1f6b57f6b00b0efba650f385fe51544b694a5cc2" translate="yes" xml:space="preserve">
          <source>Templates may be specialized for particular types of arguments by following the template parameter identifier with a : and the specialized type. For example:</source>
          <target state="translated">通过在模板参数标识符后面加上:和专门的类型,可以对特定类型的参数进行专门化。例如:</target>
        </trans-unit>
        <trans-unit id="245b3c3a28c4f221260e8b2fc590aa377be27a3f" translate="yes" xml:space="preserve">
          <source>Templates to manipulate &lt;a href=&quot;https://dlang.org/spec/template.html#variadic-templates&quot;&gt;template parameter sequences&lt;/a&gt; (also known as</source>
          <target state="translated">用于处理&lt;a href=&quot;https://dlang.org/spec/template.html#variadic-templates&quot;&gt;模板参数序列的模板&lt;/a&gt;（也称为</target>
        </trans-unit>
        <trans-unit id="78e0050e55634b09275bdf582f1537bb23a50bfb" translate="yes" xml:space="preserve">
          <source>Templates which extract information about types and symbols at compile time.</source>
          <target state="translated">在编译时提取类型和符号信息的模板。</target>
        </trans-unit>
        <trans-unit id="76d1df55eaac0e27ead23332cd68424965e0b265" translate="yes" xml:space="preserve">
          <source>Temporary closure variable.</source>
          <target state="translated">临时关闭变量。</target>
        </trans-unit>
        <trans-unit id="a030983d955bce3f66592d4d8fed011c5c3f0b4f" translate="yes" xml:space="preserve">
          <source>Temporary hack to initialize a dt_t* for C.</source>
          <target state="translated">临时破解C语言的dt_t*初始化。</target>
        </trans-unit>
        <trans-unit id="c4ebc55b69363bbb720e6062538fba3f91d7cabe" translate="yes" xml:space="preserve">
          <source>Temporary variable to enable / disable deprecation of comma expression depending on the context. Since most constructor calls are rewritting, the only place where false will be passed will be from the parser.</source>
          <target state="translated">临时变量,用于根据上下文启用/禁用逗号表达式的废弃。由于大多数构造函数的调用都是重写,所以只有在解析器中才会传递false。</target>
        </trans-unit>
        <trans-unit id="c88ab2b908a10ea30dbe26e3cf3a97fa4e5eb4bd" translate="yes" xml:space="preserve">
          <source>Terminal_Punctuation</source>
          <target state="translated">Terminal_Punctuation</target>
        </trans-unit>
        <trans-unit id="aa9f431bdd778a9da48093314c8721383c9ae18d" translate="yes" xml:space="preserve">
          <source>Terminate list package.</source>
          <target state="translated">终止列表包。</target>
        </trans-unit>
        <trans-unit id="265d2f5524a2ac16dca5c32fabd93e669260517c" translate="yes" xml:space="preserve">
          <source>Terminate use of druntime.</source>
          <target state="translated">终止使用druntime。</target>
        </trans-unit>
        <trans-unit id="41856428796ae48815fa332eab1db153dc019979" translate="yes" xml:space="preserve">
          <source>Terminates the runtime. This call is to be used in instances where the standard program termination process will not be not executed. This is most often in shared libraries or in libraries linked to a C program. If the runtime was not successfully initialized the function returns false.</source>
          <target state="translated">终止运行时。这个调用要用在标准程序终止过程不会不执行的情况下。这在共享库或链接到C程序的库中最为常见。如果运行时没有被成功初始化,函数返回false。</target>
        </trans-unit>
        <trans-unit id="56cb46ccab827174a1e1b86effcb3d5d6cefbd35" translate="yes" xml:space="preserve">
          <source>Terminates the thread module. No other thread routine may be called afterwards.</source>
          <target state="translated">终止线程模块。之后不得调用其他线程例程。</target>
        </trans-unit>
        <trans-unit id="b932645dfbe2f4cc7e54421fac789485495785ed" translate="yes" xml:space="preserve">
          <source>Termination of lifetime of temporaries does not obey the customary scoping rules and is defined as follows:</source>
          <target state="translated">终止临时人员的寿命不遵守习惯的范围规则,定义如下:</target>
        </trans-unit>
        <trans-unit id="54b9edf1c19c21867b1c6f5a0d516af236d00cc3" translate="yes" xml:space="preserve">
          <source>Terminator &lt;code&gt;terminator&lt;/code&gt;</source>
          <target state="translated">终结者 &lt;code&gt;terminator&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="21d278837034557e7a9b46210d42d6e7b8075142" translate="yes" xml:space="preserve">
          <source>Terminology</source>
          <target state="translated">Terminology</target>
        </trans-unit>
        <trans-unit id="e7d472b76d10887c103dda92fc35b9bb978b5299" translate="yes" xml:space="preserve">
          <source>Ternary &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt;();</source>
          <target state="translated">三元为&lt;strong id=&quot;empty&quot;&gt;空&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="5408a6547343b9801c7549a99e5188840858fa05" translate="yes" xml:space="preserve">
          <source>Ternary &lt;strong id=&quot;opBinary&quot;&gt;opBinary&lt;/strong&gt;(string s)(Ternary rhs)</source>
          <target state="translated">三元&lt;strong id=&quot;opBinary&quot;&gt;opBinary&lt;/strong&gt;（string s）（三元rhs）</target>
        </trans-unit>
        <trans-unit id="61a734dfd14bc5bb5ac25f18ac9cb8682858064c" translate="yes" xml:space="preserve">
          <source>Ternary &lt;strong id=&quot;opBinary&quot;&gt;opBinary&lt;/strong&gt;(string s)(bool rhs)</source>
          <target state="translated">三元&lt;strong id=&quot;opBinary&quot;&gt;opBinary&lt;/strong&gt;（string s）（bool rhs）</target>
        </trans-unit>
        <trans-unit id="abd25e300e86acc270bc7f7f32a0f16e698447aa" translate="yes" xml:space="preserve">
          <source>Ternary &lt;strong id=&quot;opUnary&quot;&gt;opUnary&lt;/strong&gt;(string s)()</source>
          <target state="translated">三元&lt;strong id=&quot;opUnary&quot;&gt;opUnary&lt;/strong&gt;（string s）（）</target>
        </trans-unit>
        <trans-unit id="380135dec6752a5219efd128ceee397c71493e97" translate="yes" xml:space="preserve">
          <source>Ternary &lt;strong id=&quot;owns&quot;&gt;owns&lt;/strong&gt;(void[] b);</source>
          <target state="translated">三元&lt;strong id=&quot;owns&quot;&gt;拥有&lt;/strong&gt;（void [] b）;</target>
        </trans-unit>
        <trans-unit id="5fe840824f09b55cc8873c5c40f4982d7db99dfc" translate="yes" xml:space="preserve">
          <source>Ternary &lt;strong id=&quot;owns&quot;&gt;owns&lt;/strong&gt;(void[]);</source>
          <target state="translated">三元&lt;strong id=&quot;owns&quot;&gt;拥有&lt;/strong&gt;（void []）;</target>
        </trans-unit>
        <trans-unit id="c9e4ebe582a67a767403a28daa93cef99c8de556" translate="yes" xml:space="preserve">
          <source>Ternary &lt;strong id=&quot;resolveInternalPointer&quot;&gt;resolveInternalPointer&lt;/strong&gt;(const void* p, ref void[] result);</source>
          <target state="translated">三元&lt;strong id=&quot;resolveInternalPointer&quot;&gt;resolveInternalPointer&lt;/strong&gt;（const void * p，ref void [] result）;</target>
        </trans-unit>
        <trans-unit id="807671195e85d5bec2aa478b814e406eda646d28" translate="yes" xml:space="preserve">
          <source>Ternary type with three truth values:</source>
          <target state="translated">具有三个真值的三元类型。</target>
        </trans-unit>
        <trans-unit id="640ab2bae07bedc4c163f679a746f7ab7fb5d1fa" translate="yes" xml:space="preserve">
          <source>Test</source>
          <target state="translated">Test</target>
        </trans-unit>
        <trans-unit id="a76dd0a3dd495aa45fe2a39614c44782afcb01ca" translate="yes" xml:space="preserve">
          <source>Test For Auto-Commit Mode</source>
          <target state="translated">测试自动提交模式</target>
        </trans-unit>
        <trans-unit id="c05597ed0dba53dda21d6b294858039879f34b2b" translate="yes" xml:space="preserve">
          <source>Test To See If The Library Is Threadsafe</source>
          <target state="translated">测试库是否是线程安全的</target>
        </trans-unit>
        <trans-unit id="f4260e1148419ceb90540c404dc73c9d27bb1bb8" translate="yes" xml:space="preserve">
          <source>Test an enum with default (consecutive) values</source>
          <target state="translated">测试一个具有默认(连续)值的枚举。</target>
        </trans-unit>
        <trans-unit id="7c6eb409a640870d68be20ffb89dc0f97c36f86b" translate="yes" xml:space="preserve">
          <source>Test an enum with non-integral values</source>
          <target state="translated">测试一个具有非积分值的枚举。</target>
        </trans-unit>
        <trans-unit id="f4b150c2686c8f7e7ab220003a574d693a5d95e2" translate="yes" xml:space="preserve">
          <source>Test if &lt;code&gt;M&lt;/code&gt; is an UTF Matcher for ranges of &lt;code&gt;Char&lt;/code&gt;.</source>
          <target state="translated">测试 &lt;code&gt;M&lt;/code&gt; 是否是 &lt;code&gt;Char&lt;/code&gt; 范围的UTF Matcher 。</target>
        </trans-unit>
        <trans-unit id="b5df7066b55b0c74120435614aa37ac6677d2d60" translate="yes" xml:space="preserve">
          <source>Test if Rng is a random-number generator. The overload taking a ElementType also makes sure that the Rng generates values of that type.</source>
          <target state="translated">测试Rng是否是一个随机数生成器。取元素类型的重载也确保Rng生成该类型的值。</target>
        </trans-unit>
        <trans-unit id="c36e2d0840f1f824df374ea5595d9aff6c4e947f" translate="yes" xml:space="preserve">
          <source>Test if Rng is seedable. The overload taking a SeedType also makes sure that the Rng can be seeded with SeedType.</source>
          <target state="translated">测试Rng是否可以播种。取一个SeedType的过载也确保Rng可以用SeedType进行播种。</target>
        </trans-unit>
        <trans-unit id="771271d8873c3b21a601bf2c675f90a9ccc0ffc3" translate="yes" xml:space="preserve">
          <source>Test if expression is a binary array op.</source>
          <target state="translated">测试表达式是否为二进制数组运算。</target>
        </trans-unit>
        <trans-unit id="172aaae7f6f97929a4cfc47c9d74eb4946f350af" translate="yes" xml:space="preserve">
          <source>Test if expression is a binary assignment array op.</source>
          <target state="translated">测试表达式是否为二进制赋值数组 op.</target>
        </trans-unit>
        <trans-unit id="9300c8ec9a186273606279dfa9449d5d455cf04a" translate="yes" xml:space="preserve">
          <source>Test if expression is a unary array op.</source>
          <target state="translated">测试表达式是否为单数组运算。</target>
        </trans-unit>
        <trans-unit id="0d5244f0d0c7df2a1da58431bfc78e379751a7b9" translate="yes" xml:space="preserve">
          <source>Test if operand is a valid array op operand.</source>
          <target state="translated">测试操作数是否是一个有效的数组操作数。</target>
        </trans-unit>
        <trans-unit id="875918357eabc46eb0a1c92bac320980adb8c720" translate="yes" xml:space="preserve">
          <source>Test if this match object is empty.</source>
          <target state="translated">测试该匹配对象是否为空。</target>
        </trans-unit>
        <trans-unit id="df4149695689c92ee359aa248e67d88ff5ec18df" translate="yes" xml:space="preserve">
          <source>Test if this object doesn't contain any compiled pattern.</source>
          <target state="translated">测试此对象是否不包含任何编译模式。</target>
        </trans-unit>
        <trans-unit id="3a1ea05315421beb7c90d273402899ae913a7b04" translate="yes" xml:space="preserve">
          <source>Test to see if two reals are the same. Regard NaN's as equivalent. Regard +0 and -0 as different.</source>
          <target state="translated">检验两个实数是否相同。将NaN的看作是等价的。将+0和-0视为不同。</target>
        </trans-unit>
        <trans-unit id="c6494d0db23bcdb573d84113943853295de919f8" translate="yes" xml:space="preserve">
          <source>Test whether &lt;code&gt;this&lt;/code&gt; is equal to &lt;code&gt;o&lt;/code&gt;. The default implementation only compares by identity (using the &lt;code&gt;is&lt;/code&gt; operator). Generally, overrides for &lt;code&gt;opEquals&lt;/code&gt; should attempt to compare objects by their contents.</source>
          <target state="translated">测试 &lt;code&gt;this&lt;/code&gt; 是否等于 &lt;code&gt;o&lt;/code&gt; 。默认实现仅按标识进行比较（使用 &lt;code&gt;is&lt;/code&gt; 运算符）。通常， &lt;code&gt;opEquals&lt;/code&gt; 的替代应尝试按对象的内容比较对象。</target>
        </trans-unit>
        <trans-unit id="5e332eb1e9dbd61d5d3e51a56d3c413e1056f0ba" translate="yes" xml:space="preserve">
          <source>Test whether the type is &lt;code&gt;JSONType.null_&lt;/code&gt;</source>
          <target state="translated">测试类型是否为 &lt;code&gt;JSONType.null_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="32dc0f341af79e76ca913dc9eb0ce7bac1d243c2" translate="yes" xml:space="preserve">
          <source>Test. The range is left unaffected regardless of the result of test.</source>
          <target state="translated">测试。无论测试结果如何,范围都不会受到影响。</target>
        </trans-unit>
        <trans-unit id="f97153344fc6b5fd92539a5489c67be660fa5094" translate="yes" xml:space="preserve">
          <source>Tested type, if null, returns false.</source>
          <target state="translated">被测试的类型,如果为空,则返回false。</target>
        </trans-unit>
        <trans-unit id="c5d38ba7cbc400f9b209719e16e540214a64776c" translate="yes" xml:space="preserve">
          <source>Testing Interface</source>
          <target state="translated">测试界面</target>
        </trans-unit>
        <trans-unit id="525b0e690ec5250557a58b08a062c12274d2c8b7" translate="yes" xml:space="preserve">
          <source>Testing Membership</source>
          <target state="translated">测试会员</target>
        </trans-unit>
        <trans-unit id="25a68a83b7176082f5e2ba19053a23bf236d5547" translate="yes" xml:space="preserve">
          <source>Testing that the compiler does this correctly is normally hackish and awkward, this enables efficient, direct, and simple testing.</source>
          <target state="translated">测试编译器是否正确地做到了这一点,通常是黑客和尴尬的,这可以实现高效、直接、简单的测试。</target>
        </trans-unit>
        <trans-unit id="1c56215ea968cf5b1786a762d8686e735aad09cd" translate="yes" xml:space="preserve">
          <source>Tests and complements the bit.</source>
          <target state="translated">测试和补充位。</target>
        </trans-unit>
        <trans-unit id="e5215a5973bd1ea3d7098ee9d049ca3355401493" translate="yes" xml:space="preserve">
          <source>Tests and resets (sets to 0) the bit.</source>
          <target state="translated">测试并重置(设置为0)该位。</target>
        </trans-unit>
        <trans-unit id="2075b541b1f6f9a0cf3777e52df712b18587a41c" translate="yes" xml:space="preserve">
          <source>Tests and sets the bit.</source>
          <target state="translated">测试和设置位。</target>
        </trans-unit>
        <trans-unit id="20b58f47c6fc10d3a84014b226d9ef1a294ea115" translate="yes" xml:space="preserve">
          <source>Tests for this functionality can be found in test/profile/src/profilegc.d</source>
          <target state="translated">这个功能的测试可以在test/profile/src/profilegc.d中找到。</target>
        </trans-unit>
        <trans-unit id="9449703c24169141bbb52227e05dcb6756b6aff1" translate="yes" xml:space="preserve">
          <source>Tests have proven that 20K is a very bad buffer size for uploads on Windows, while 16K for some odd reason performed a lot better. We do the ifndef check to allow this value to easier be changed at build time for those who feel adventurous. The practical minimum is about 400 bytes since libcurl uses a buffer of this size as a scratch area (unrelated to network send operations).</source>
          <target state="translated">测试证明,在Windows上,20K是一个非常糟糕的上传缓冲区大小,而16K由于一些奇怪的原因表现得更好。我们做了ifndef检查,允许在构建时更改这个值,以便于那些喜欢冒险的人。实际的最小值是400字节左右,因为libcurl使用这个大小的缓冲区作为划区(与网络发送操作无关)。</target>
        </trans-unit>
        <trans-unit id="7b9ef0e0de0e0d2ca2aef3f77f084bb252817141" translate="yes" xml:space="preserve">
          <source>Tests if &lt;code&gt;T&lt;/code&gt; is a pair of integers that implicitly convert to &lt;code&gt;V&lt;/code&gt;. The following code must compile for any pair &lt;code&gt;T&lt;/code&gt;:</source>
          <target state="translated">测试 &lt;code&gt;T&lt;/code&gt; 是否为一对隐式转换为 &lt;code&gt;V&lt;/code&gt; 的整数。以下代码必须针对任何对 &lt;code&gt;T&lt;/code&gt; 进行编译：</target>
        </trans-unit>
        <trans-unit id="8c8c256b6a901137e3b17d0d394473f1bf0010ea" translate="yes" xml:space="preserve">
          <source>Tests if T is some kind a set of code points. Intended for template constraints.</source>
          <target state="translated">测试T是否是某种代码点的集合。适用于模板约束。</target>
        </trans-unit>
        <trans-unit id="411bf491c2bca7ef9ade77af4f87a2c548c0bdbb" translate="yes" xml:space="preserve">
          <source>Tests if a given range has the &lt;code&gt;length&lt;/code&gt; attribute.</source>
          <target state="translated">测试给定范围是否具有 &lt;code&gt;length&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="c1e815d9ade99ef4137d6edf65d9041c8257f49b" translate="yes" xml:space="preserve">
          <source>Tests if a given range is an</source>
          <target state="translated">测试一个给定的范围是否是一个</target>
        </trans-unit>
        <trans-unit id="bde4f156e05ca670bc0e67e4a240e0963bde7076" translate="yes" xml:space="preserve">
          <source>Tests if a given range supports the array slicing operation &lt;code&gt; R[x .. y]&lt;/code&gt;.</source>
          <target state="translated">测试给定范围是否支持数组切片操作 &lt;code&gt; R[x .. y]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad84d76bbe9e61a1d8ded8b282719c6188de299e" translate="yes" xml:space="preserve">
          <source>Tests if a given range's elements can be moved around using the primitives &lt;code&gt;moveFront&lt;/code&gt;, &lt;code&gt;moveBack&lt;/code&gt;, or &lt;code&gt;moveAt&lt;/code&gt;.</source>
          <target state="translated">测试是否可以使用原语 &lt;code&gt;moveFront&lt;/code&gt; ， &lt;code&gt;moveBack&lt;/code&gt; 或 &lt;code&gt;moveAt&lt;/code&gt; 来移动给定范围的元素。</target>
        </trans-unit>
        <trans-unit id="8d793f3a6e7c2e95eb378beac167385719ab59f4" translate="yes" xml:space="preserve">
          <source>Tests if a range is a forward range with elements that can be passed by reference and have their address taken.</source>
          <target state="translated">测试一个范围是否是正向范围,其中的元素可以通过引用传递,并获取其地址。</target>
        </trans-unit>
        <trans-unit id="e6eb69ba4d2881e64e415a05071a9f103fe521a9" translate="yes" xml:space="preserve">
          <source>Tests if a range is a forward range with mutable elements.</source>
          <target state="translated">测试一个范围是否是具有可变元素的正向范围。</target>
        </trans-unit>
        <trans-unit id="3514cf116bc5ed9d238a3b0f2c416cbf1406ecde" translate="yes" xml:space="preserve">
          <source>Tests if a range is a forward range with swappable elements.</source>
          <target state="translated">测试一个范围是否是带有可交换元素的正向范围。</target>
        </trans-unit>
        <trans-unit id="7f3207abc4ab79cdb9c483585f3e941b9bfaa437" translate="yes" xml:space="preserve">
          <source>Tests if dchar &lt;code&gt;ch&lt;/code&gt; is always allowed (Quick_Check=YES) in normalization form &lt;code&gt;norm&lt;/code&gt;.</source>
          <target state="translated">测试规范化 &lt;code&gt;norm&lt;/code&gt; 是否始终允许dchar &lt;code&gt;ch&lt;/code&gt; （Quick_Check = YES）。</target>
        </trans-unit>
        <trans-unit id="befffce91c09f40925fffacf854b40c946df8776" translate="yes" xml:space="preserve">
          <source>Tests if something is a</source>
          <target state="translated">测试某物是否为</target>
        </trans-unit>
        <trans-unit id="8d6f89518da90279816a90c9471e395bd384796c" translate="yes" xml:space="preserve">
          <source>Tests if something is an</source>
          <target state="translated">测试某物是否是一个</target>
        </trans-unit>
        <trans-unit id="0e1c0aed1d62ba9121fe6b94c90661bd5940a3af" translate="yes" xml:space="preserve">
          <source>Tests the bit. (No longer an intrisic - the compiler recognizes the patterns in the body.)</source>
          <target state="translated">测试位。(不再是固有的--编译器识别正文中的模式。)</target>
        </trans-unit>
        <trans-unit id="f4f4ed66a37a54d3a46278ee76a6c98108f32780" translate="yes" xml:space="preserve">
          <source>Tests the presence of code point &lt;code&gt;val&lt;/code&gt; in this set.</source>
          <target state="translated">测试此集合中是否存在代码点 &lt;code&gt;val&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="de8256fe3c8079a8a7b38b1ce5150ffcc1923b62" translate="yes" xml:space="preserve">
          <source>Tests the presence of codepoint &lt;code&gt;ch&lt;/code&gt; in this set, the same as &lt;a href=&quot;#opIndex&quot;&gt;&lt;code&gt;opIndex&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">测试此集合中是否存在代码点 &lt;code&gt;ch&lt;/code&gt; ，与&lt;a href=&quot;#opIndex&quot;&gt; &lt;code&gt;opIndex&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="3f2f444fc7b5cd93b5daa924863d3256099d8d1c" translate="yes" xml:space="preserve">
          <source>Tests wether a key can be found in an object.</source>
          <target state="translated">测试是否能在一个对象中找到钥匙。</target>
        </trans-unit>
        <trans-unit id="5596cf2178863d7426683848832032923843383b" translate="yes" xml:space="preserve">
          <source>Tests whether all given items satisfy a template predicate, i.e. evaluates to &lt;code&gt;F!(T[0]) &amp;amp;&amp;amp; F!(T[1]) &amp;amp;&amp;amp; ... &amp;amp;&amp;amp; F!(T[$ - 1])&lt;/code&gt;.</source>
          <target state="translated">测试所有给定项是否满足模板谓词，即求值为 &lt;code&gt;F!(T[0]) &amp;amp;&amp;amp; F!(T[1]) &amp;amp;&amp;amp; ... &amp;amp;&amp;amp; F!(T[$ - 1])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0596e9e3cf69628efa950fe1bab0382b0dcf95bf" translate="yes" xml:space="preserve">
          <source>Tests whether any given items satisfy a template predicate, i.e. evaluates to &lt;code&gt;F!(T[0]) || F!(T[1]) || ... || F!(T[$ - 1])&lt;/code&gt;.</source>
          <target state="translated">测试任何给定项是否满足模板谓词，即求值为 &lt;code&gt;F!(T[0]) || F!(T[1]) || ... || F!(T[$ - 1])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="686a7f263d59c9bc77e08d103e41e6b6097dc4c3" translate="yes" xml:space="preserve">
          <source>Tests whether the range &lt;code&gt;R&lt;/code&gt; has lvalue elements. These are defined as elements that can be passed by reference and have their address taken. The following code should compile for any range with lvalue elements.</source>
          <target state="translated">测试范围 &lt;code&gt;R&lt;/code&gt; 是否具有左值元素。这些被定义为可以通过引用传递并具有其地址的元素。以下代码应针对具有左值元素的任何范围进行编译。</target>
        </trans-unit>
        <trans-unit id="8bb780b7b4639e513de207eee9ca6ebb52198df1" translate="yes" xml:space="preserve">
          <source>Tests whether this thread is running.</source>
          <target state="translated">测试该线程是否正在运行。</target>
        </trans-unit>
        <trans-unit id="6949ea6aea1405f5da836774097338b86c14cca4" translate="yes" xml:space="preserve">
          <source>Tests whether this thread is the main thread, i.e. the thread that initialized the runtime</source>
          <target state="translated">测试这个线程是否是主线程,也就是初始化运行时的线程。</target>
        </trans-unit>
        <trans-unit id="d1687cd16c0f03bc3b975bceb7e1a93532d5c303" translate="yes" xml:space="preserve">
          <source>Text &lt;code&gt;item&lt;/code&gt;</source>
          <target state="translated">文字 &lt;code&gt;item&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cfc7e26dd5428580328070e7a06fd7ebcbd47226" translate="yes" xml:space="preserve">
          <source>Text Emphasis</source>
          <target state="translated">文本强调</target>
        </trans-unit>
        <trans-unit id="9740ffa930b7e0e5dc6d8da6cefed313549c2227" translate="yes" xml:space="preserve">
          <source>Text files: Either zero, or a value returned by &lt;a href=&quot;#tell&quot;&gt;&lt;code&gt;tell&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文本文件：要么为零，要么为&lt;a href=&quot;#tell&quot;&gt; &lt;code&gt;tell&lt;/code&gt; 所&lt;/a&gt;返回的值。</target>
        </trans-unit>
        <trans-unit id="4e0ff0523679bae8dae7ddd108d53202236baa1a" translate="yes" xml:space="preserve">
          <source>Text files: Shall necessarily be &lt;a href=&quot;core_stdc_stdio#SEEK_SET&quot;&gt;SEEK_SET&lt;/a&gt;.</source>
          <target state="translated">文本文件：必须为&lt;a href=&quot;core_stdc_stdio#SEEK_SET&quot;&gt;SEEK_SET&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="110569c98af1b7ca83bf2a55e559b2c9de2f1d74" translate="yes" xml:space="preserve">
          <source>Text inside these sections will be escaped according to the rules described above, then wrapped in a &lt;code&gt;&amp;amp;dollar;(DDOC_BACKQUOTED)&lt;/code&gt; macro. By default, this macro expands to be displayed as an inline text span, formatted as code.</source>
          <target state="translated">这些部分中的文本将根据上述规则进行转义，然后包装在 &lt;code&gt;&amp;amp;dollar;(DDOC_BACKQUOTED)&lt;/code&gt; 宏中。默认情况下，此宏扩展为显示为内联文本范围，格式为代码。</target>
        </trans-unit>
        <trans-unit id="550f1724580a5ba0d175052f9a3cc57e962a9a42" translate="yes" xml:space="preserve">
          <source>Text[] &lt;strong id=&quot;texts&quot;&gt;texts&lt;/strong&gt;;</source>
          <target state="translated">Text []个&lt;strong id=&quot;texts&quot;&gt;文本&lt;/strong&gt;；</target>
        </trans-unit>
        <trans-unit id="02878ee8de0350d99773d9bfa9119f737b2c432e" translate="yes" xml:space="preserve">
          <source>Tgt</source>
          <target state="translated">Tgt</target>
        </trans-unit>
        <trans-unit id="2f72bba0ea07edaf4c51d66fc5bb6bab86a6ccd2" translate="yes" xml:space="preserve">
          <source>Thaana</source>
          <target state="translated">Thaana</target>
        </trans-unit>
        <trans-unit id="c32767e0541fe7038ff8d87e7b8aed17f49474f8" translate="yes" xml:space="preserve">
          <source>Thai</source>
          <target state="translated">Thai</target>
        </trans-unit>
        <trans-unit id="2b049d162a2da7d605f5f60c67f0b2c875a54367" translate="yes" xml:space="preserve">
          <source>That means a particular care should be taken when passing an array of a type different than &lt;code&gt;size_t&lt;/code&gt;, firstly because its length should be a multiple of &lt;code&gt;size_t.sizeof&lt;/code&gt;, and secondly because how the bits are mapped:</source>
          <target state="translated">这意味着在传递类型不同于 &lt;code&gt;size_t&lt;/code&gt; 的数组时应格外小心，首先是因为其长度应是 &lt;code&gt;size_t.sizeof&lt;/code&gt; 的倍数，其次是因为位的映射方式：</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="841034a66867088852b691ee577602f956ee6d30" translate="yes" xml:space="preserve">
          <source>The &quot;default&quot;, &quot;favorite&quot;, &quot;suggested&quot; random number generator type on the current platform. It is an alias for one of the previously-defined generators. You may want to use it if (1) you need to generate some nice random numbers, and (2) you don't care for the minutiae of the method being used.</source>
          <target state="translated">当前平台上 &quot;默认&quot;、&quot;最喜欢&quot;、&quot;建议 &quot;的随机数生成器类型。它是之前定义的生成器的别名。如果(1)你需要生成一些漂亮的随机数,(2)你不关心正在使用的方法的细节,你可能会想使用它。</target>
        </trans-unit>
        <trans-unit id="b0187c6c3cc333e3b63fdd6f3f40abbfebecf5ce" translate="yes" xml:space="preserve">
          <source>The 'CURLVERSION_NOW' is the symbolic name meant to be used by basically all programs ever that want to get version information. It is meant to be a built-in version number for what kind of struct the caller expects. If the struct ever changes, we redefine the NOW to another enum from above.</source>
          <target state="translated">CURLVERSION_NOW'是一个符号名称,基本上所有想要获取版本信息的程序都会使用这个名称。它是一个内置的版本号,用来表示调用者期望什么样的结构。如果这个结构发生了变化,我们将NOW重新定义为上面的另一个枚举。</target>
        </trans-unit>
        <trans-unit id="d1f8d29986e592eb2309b74e7ba9f1ad07481d10" translate="yes" xml:space="preserve">
          <source>The 'op=' versions of the above overloaded operators.</source>
          <target state="translated">上述重载运算符的'op='版本。</target>
        </trans-unit>
        <trans-unit id="3a976ead2fa957aa078bdc5c148ef317d271794a" translate="yes" xml:space="preserve">
          <source>The 'path' in -conf=path, which is the path to the config file to use</source>
          <target state="translated">-conf=path中的'path',是要使用的配置文件的路径。</target>
        </trans-unit>
        <trans-unit id="31c7a95d829cacee9ae6a883506beeedd2134baa" translate="yes" xml:space="preserve">
          <source>The -unittest flag needs to be passed to the compiler. If the flag is not passed &lt;code&gt;__traits(getUnitTests)&lt;/code&gt; will always return an empty tuple.</source>
          <target state="translated">-unittest标志需要传递给编译器。如果未传递该标志，则 &lt;code&gt;__traits(getUnitTests)&lt;/code&gt; 将始终返回一个空的元组。</target>
        </trans-unit>
        <trans-unit id="723454678858263ffe8d6a6ec7de6d5f571a19fc" translate="yes" xml:space="preserve">
          <source>The .netrc will never be read. This is the default.</source>
          <target state="translated">.netrc将永远不会被读取。这是默认的。</target>
        </trans-unit>
        <trans-unit id="5fc56dfb80dd68bb355d005695826ac631cdc022" translate="yes" xml:space="preserve">
          <source>The 16-bit Windows system directory.</source>
          <target state="translated">16位的Windows系统目录。</target>
        </trans-unit>
        <trans-unit id="5aed8640844a3d20118fd4844ea5d066ae035774" translate="yes" xml:space="preserve">
          <source>The 32-bit Windows system directory.</source>
          <target state="translated">32位的Windows系统目录。</target>
        </trans-unit>
        <trans-unit id="3822c06d82d04b0602bcb4a74379105b3119d9a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#Address&quot;&gt;&lt;code&gt;Address&lt;/code&gt;&lt;/a&gt; to associate this socket with.</source>
          <target state="translated">与此套接字关联的&lt;a href=&quot;#Address&quot;&gt; &lt;code&gt;Address&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="34d87623f07a3df5b3f286e1571b6960ff3c3a80" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; to subtract from this one.</source>
          <target state="translated">要从此&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;中减去的日期。</target>
        </trans-unit>
        <trans-unit id="5ea785f46b5e279a5fe31d9bcbc3fe5daaf562c2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; to subtract from this one.</source>
          <target state="translated">要从此&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;中减去的DateTime。</target>
        </trans-unit>
        <trans-unit id="d0e37d9857c458a95dd085ddb2d77157413d4e72" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#DirEntry&quot;&gt;&lt;code&gt;DirEntry&lt;/code&gt;&lt;/a&gt; to remove</source>
          <target state="translated">要删除的&lt;a href=&quot;#DirEntry&quot;&gt; &lt;code&gt;DirEntry&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34c1a1f06a34f8fc1a3c2e67067eaacabd34869e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#EmailStatusCode&quot;&gt;&lt;code&gt;EmailStatusCode&lt;/code&gt;&lt;/a&gt; to read</source>
          <target state="translated">要读取的&lt;a href=&quot;#EmailStatusCode&quot;&gt; &lt;code&gt;EmailStatusCode&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78ee8056a7cc493671dbfe1dc57a34b10deb9e1b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#EnumBaseType&quot;&gt;&lt;i&gt;EnumBaseType&lt;/i&gt;&lt;/a&gt; of named enums must support comparison in order to compute the &lt;code&gt;.max&lt;/code&gt; and &lt;code&gt;.min&lt;/code&gt; properties.</source>
          <target state="translated">命名枚举的&lt;a href=&quot;#EnumBaseType&quot;&gt;&lt;i&gt;EnumBaseType&lt;/i&gt;&lt;/a&gt;必须支持比较才能计算 &lt;code&gt;.max&lt;/code&gt; 和 &lt;code&gt;.min&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="b5f3720a1adb0f3176194f3917579d377aa449f9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#Initializer&quot;&gt;&lt;i&gt;Initializer&lt;/i&gt;&lt;/a&gt; for a global or static variable must be evaluatable at compile time. Runtime initialization is done with static constructors.</source>
          <target state="translated">全局或静态变量的&lt;a href=&quot;#Initializer&quot;&gt;&lt;i&gt;初始化&lt;/i&gt;&lt;/a&gt;程序必须在编译时可求值。运行时初始化是使用静态构造函数完成的。</target>
        </trans-unit>
        <trans-unit id="80545d65ce3ac684ca91f02582517a26ef753e16" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#Interval&quot;&gt;&lt;code&gt;Interval&lt;/code&gt;&lt;/a&gt; to assign to this one.</source>
          <target state="translated">分配给该&lt;a href=&quot;#Interval&quot;&gt; &lt;code&gt;Interval&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f7647e4b267ecf7e3a76571ada3fdacd698012ed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#Pid&quot;&gt;&lt;code&gt;Pid&lt;/code&gt;&lt;/a&gt; of the child process.</source>
          <target state="translated">子进程的&lt;a href=&quot;#Pid&quot;&gt; &lt;code&gt;Pid&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a7d45e276c1157a48db1764d13a939e845c33bc9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ScopeStatementList&quot;&gt;&lt;i&gt;ScopeStatementList&lt;/i&gt;&lt;/a&gt; introduces a new scope.</source>
          <target state="translated">该&lt;a href=&quot;#ScopeStatementList&quot;&gt;&lt;i&gt;ScopeStatementList&lt;/i&gt;&lt;/a&gt;引入了一个新的领域。</target>
        </trans-unit>
        <trans-unit id="66ec6d2fcb103334da9a8b894f800e0431548606" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#StaticAssert&quot;&gt;&lt;i&gt;StaticAssert&lt;/i&gt;&lt;/a&gt; can be used to issue errors at compilation time for branches of the conditional compilation that are errors.</source>
          <target state="translated">该&lt;a href=&quot;#StaticAssert&quot;&gt;&lt;i&gt;StaticAssert&lt;/i&gt;&lt;/a&gt;可用于问题的错误在编译时的条件编译是错误的分支。</target>
        </trans-unit>
        <trans-unit id="06e17380102c60dcb03f8837a22d0093ff7cde88" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; to assign to this one.</source>
          <target state="translated">该&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;分配给这一个。</target>
        </trans-unit>
        <trans-unit id="207dd1b8a4f95c054bf6246935ea41770d996fac" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; to convert.</source>
          <target state="translated">要转换的&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8a4c34034a2cb8149059ccb52e1b31889b6ee383" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; to subtract from this one.</source>
          <target state="translated">从该&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;中减去的SysTime。</target>
        </trans-unit>
        <trans-unit id="cff9eb5299e33a3aaa4866e20fa3a6deb4e87d8b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; which is returned is in UTC.</source>
          <target state="translated">返回的&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;以UTC表示。</target>
        </trans-unit>
        <trans-unit id="2c089e8236fdabd8d9be544307b70b1cf9caaa13" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#Tid&quot;&gt;&lt;code&gt;Tid&lt;/code&gt;&lt;/a&gt; of the caller's thread.</source>
          <target state="translated">调用者线程的&lt;a href=&quot;#Tid&quot;&gt; &lt;code&gt;Tid&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="13239abac4fc6f880e927488a37426d1988f0906" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#TimeOfDay&quot;&gt;&lt;code&gt;TimeOfDay&lt;/code&gt;&lt;/a&gt; to subtract from this one.</source>
          <target state="translated">要从中减去的&lt;a href=&quot;#TimeOfDay&quot;&gt; &lt;code&gt;TimeOfDay&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5568c800d11447839caafcd858afac1c90ab999a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#Type&quot;&gt;&lt;i&gt;Type&lt;/i&gt;&lt;/a&gt; above is the type of a variable or the return type of a function. This is never a &lt;a href=&quot;#TypeFunction&quot;&gt;&lt;i&gt;TypeFunction&lt;/i&gt;&lt;/a&gt;, as the latter can only be bound to a value via a pointer to a function or a delegate.</source>
          <target state="translated">该&lt;a href=&quot;#Type&quot;&gt;&lt;i&gt;类型&lt;/i&gt;&lt;/a&gt;上面是一个变量或函数的返回类型的类型。这绝不是&lt;a href=&quot;#TypeFunction&quot;&gt;&lt;i&gt;TypeFunction&lt;/i&gt;&lt;/a&gt;，因为后者只能通过指向函数或委托的指针绑定到值。</target>
        </trans-unit>
        <trans-unit id="582962af3aa815ce568eaa34305272d8bb55ca09" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#selector-attribute&quot;&gt;&lt;code&gt;@selector&lt;/code&gt;&lt;/a&gt; attribute indicates which Objective-C selector should be used when calling this method. This attribute needs to be attached to all methods with the &lt;code&gt;Objective-C&lt;/code&gt; linkage.</source>
          <target state="translated">所述&lt;a href=&quot;#selector-attribute&quot;&gt; &lt;code&gt;@selector&lt;/code&gt; &lt;/a&gt;属性指示该目标C选择应该调用此方法时使用。此属性需要通过 &lt;code&gt;Objective-C&lt;/code&gt; 链接附加到所有方法。</target>
        </trans-unit>
        <trans-unit id="1e4dae8c55a4019bd019df8cbf97d7672b905097" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#static_struct_init&quot;&gt;static initializer syntax&lt;/a&gt; can also be used to initialize non-static variables. The initializer need not be evaluable at compile time.</source>
          <target state="translated">在&lt;a href=&quot;#static_struct_init&quot;&gt;静态初始化语法&lt;/a&gt;也可以用来初始化非静态变量。初始化时不需要在编译时求值。</target>
        </trans-unit>
        <trans-unit id="8169d1266bc065db8156bf51397ae1c6ddebcd45" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;core_time#ClockType&quot;&gt;&lt;code&gt;core.time.ClockType&lt;/code&gt;&lt;/a&gt; indicates which system clock to use to get the current time. Very few programs need to use anything other than the default.</source>
          <target state="translated">该&lt;a href=&quot;core_time#ClockType&quot;&gt; &lt;code&gt;core.time.ClockType&lt;/code&gt; &lt;/a&gt;指示要使用的系统时钟来获取当前时间。很少有程序需要使用默认值以外的任何东西。</target>
        </trans-unit>
        <trans-unit id="bd3bdabdeefd481383f96f2a3801bfd145044b4a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;core_time#Duration&quot;&gt;&lt;code&gt;core.time.Duration&lt;/code&gt;&lt;/a&gt; to add to or subtract from this &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要添加到此&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;或从此Date减去的&lt;a href=&quot;core_time#Duration&quot;&gt; &lt;code&gt;core.time.Duration&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="75b962fb808beadc99e9b25a573d63d541dd58e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;core_time#Duration&quot;&gt;&lt;code&gt;core.time.Duration&lt;/code&gt;&lt;/a&gt; to add to or subtract from this &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要添加到此&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;或从此DateTime减去的&lt;a href=&quot;core_time#Duration&quot;&gt; &lt;code&gt;core.time.Duration&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1d75eebdd136326278ed1ff54a462d66c8152ff9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;core_time#Duration&quot;&gt;&lt;code&gt;core.time.Duration&lt;/code&gt;&lt;/a&gt; to add to or subtract from this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;core_time#Duration&quot;&gt; &lt;code&gt;core.time.Duration&lt;/code&gt; &lt;/a&gt;添加或从该减去&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="802357de02f2910abfaab4969e438b3d74aa6db1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;core_time#Duration&quot;&gt;&lt;code&gt;core.time.Duration&lt;/code&gt;&lt;/a&gt; to add to or subtract from this &lt;a href=&quot;#TimeOfDay&quot;&gt;&lt;code&gt;TimeOfDay&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要添加到此&lt;a href=&quot;#TimeOfDay&quot;&gt; &lt;code&gt;TimeOfDay&lt;/code&gt; &lt;/a&gt;或从中减去的&lt;a href=&quot;core_time#Duration&quot;&gt; &lt;code&gt;core.time.Duration&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a6a5b45b3146e53f75b07950ca620f3168d2deba" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;declaration#VectorBaseType&quot;&gt;&lt;i&gt;VectorBaseType&lt;/i&gt;&lt;/a&gt; must be a &lt;a href=&quot;https://dlang.org/arrays.html#static-arrays&quot;&gt;Static Array&lt;/a&gt;. The &lt;a id=&quot;VectorElementType&quot;&gt;VectorElementType&lt;/a&gt; is the unqualified element type of the static array. The dimension of the static array is the number of elements in the vector.</source>
          <target state="translated">该&lt;a href=&quot;declaration#VectorBaseType&quot;&gt;&lt;i&gt;VectorBaseType&lt;/i&gt;&lt;/a&gt;必须是一个&lt;a href=&quot;https://dlang.org/arrays.html#static-arrays&quot;&gt;静态数组&lt;/a&gt;。该&lt;a id=&quot;VectorElementType&quot;&gt;VectorElementType&lt;/a&gt;是静态数组的不合格元件的类型。静态数组的维数是向量中元素的数量。</target>
        </trans-unit>
        <trans-unit id="effa6c75295cbc49f2bd14a0813e7c7b20ad36aa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;expression#InExpression&quot;&gt;&lt;i&gt;InExpression&lt;/i&gt;&lt;/a&gt; yields a pointer to the value if the key is in the associative array, or &lt;code&gt;null&lt;/code&gt; if not:</source>
          <target state="translated">所述&lt;a href=&quot;expression#InExpression&quot;&gt;&lt;i&gt;InExpression&lt;/i&gt;&lt;/a&gt;产生的指针值，如果键是关联数组中，或 &lt;code&gt;null&lt;/code&gt; 如果不是：</target>
        </trans-unit>
        <trans-unit id="d10d2c3a02c91a9eaadda4648e8839a3ba8463c1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://ddili.org/ders/d.en/files.html&quot;&gt;official tutorial&lt;/a&gt; for an introduction to working with files in D, module &lt;a href=&quot;std_stdio&quot;&gt;&lt;code&gt;std.stdio&lt;/code&gt;&lt;/a&gt; for opening files and manipulating them via handles, and module &lt;a href=&quot;std_path&quot;&gt;&lt;code&gt;std.path&lt;/code&gt;&lt;/a&gt; for manipulating path strings.</source>
          <target state="translated">该&lt;a href=&quot;http://ddili.org/ders/d.en/files.html&quot;&gt;官方教程&lt;/a&gt;的介绍，在d文件，模块工作&lt;a href=&quot;std_stdio&quot;&gt; &lt;code&gt;std.stdio&lt;/code&gt; &lt;/a&gt;打开文件，并通过手柄操纵他们，模块&lt;a href=&quot;std_path&quot;&gt; &lt;code&gt;std.path&lt;/code&gt; &lt;/a&gt;操纵路径字符串。</target>
        </trans-unit>
        <trans-unit id="7f10e36fd0934caf1d07c4486428d20fe9704f09" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://digitalmars.com/d/1.0/operatoroverloading.html&quot;&gt;D1 operator overload mechanisms&lt;/a&gt; are deprecated.</source>
          <target state="translated">不建议使用&lt;a href=&quot;http://digitalmars.com/d/1.0/operatoroverloading.html&quot;&gt;D1操作符重载机制&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8aed6127995bd75e76ecf6bfc0fe20f221a52ef0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://en.wikipedia.org/wiki/Julian_day&quot;&gt;Julian day&lt;/a&gt; for this &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; at noon (since the Julian day changes at noon).</source>
          <target state="translated">此&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;http://en.wikipedia.org/wiki/Julian_day&quot;&gt;儒略日&lt;/a&gt;在中午（因为儒略日在中午更改）。</target>
        </trans-unit>
        <trans-unit id="6f9693a97556000512811c0be3654e4711f8c9f3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://en.wikipedia.org/wiki/Julian_day&quot;&gt;Julian day&lt;/a&gt; for this &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; at the given time. For example, prior to noon, 1996-03-31 would be the Julian day number 2_450_173, so this function returns 2_450_173, while from noon onward, the julian day number would be 2_450_174, so this function returns 2_450_174.</source>
          <target state="translated">给定时间的此&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;http://en.wikipedia.org/wiki/Julian_day&quot;&gt;儒略日&lt;/a&gt;。例如，中午之前，1996-03-31将是儒略日数2_450_173，因此此函数返回2_450_173，而从中午开始，儒略日数将是2_450_174，因此此函数将返回2_450_174。</target>
        </trans-unit>
        <trans-unit id="9ebaf21b57e868005b0da3f2c282e36d7b90e06c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://en.wikipedia.org/wiki/Julian_day&quot;&gt;Julian day&lt;/a&gt; for this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; at the given time. For example, prior to noon, 1996-03-31 would be the Julian day number 2_450_173, so this function returns 2_450_173, while from noon onward, the Julian day number would be 2_450_174, so this function returns 2_450_174.</source>
          <target state="translated">在给定时间此&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;http://en.wikipedia.org/wiki/Julian_day&quot;&gt;儒略日&lt;/a&gt;。例如，中午之前，1996-03-31将是儒略日数2_450_173，因此此函数返回2_450_173，而从正午开始，儒略日数将是2_450_174，因此此函数将返回2_450_174。</target>
        </trans-unit>
        <trans-unit id="f1315c501ab7c8abc5b3669ec5fc148fef194077" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://en.wikipedia.org/wiki/Endianness&quot;&gt;endianness&lt;/a&gt; (byte order) of the layout of the data will conform to the endianness of the target machine. The Intel x86 CPUs are</source>
          <target state="translated">的&lt;a href=&quot;https://en.wikipedia.org/wiki/Endianness&quot;&gt;端序&lt;/a&gt;的数据的布局的（字节顺序）将符合目标机器的字节序。英特尔x86 CPU是</target>
        </trans-unit>
        <trans-unit id="6a73d189b3abb4382b6807f2586136519fc591d4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://en.wikipedia.org/wiki/Julian_day&quot;&gt;Julian day&lt;/a&gt; for this &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; at noon (since the Julian day changes at noon).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ddbf9eb9632cc4d5cb9a47bbe354212c7dadf6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://en.wikipedia.org/wiki/Julian_day&quot;&gt;Julian day&lt;/a&gt; for this &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; at the given time. For example, prior to noon, 1996-03-31 would be the Julian day number 2_450_173, so this function returns 2_450_173, while from noon onward, the julian day number would be 2_450_174, so this function returns 2_450_174.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efef95f6d1522e76a66734a5a359cd8ae2b18bc3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://en.wikipedia.org/wiki/Julian_day&quot;&gt;Julian day&lt;/a&gt; for this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; at the given time. For example, prior to noon, 1996-03-31 would be the Julian day number 2_450_173, so this function returns 2_450_173, while from noon onward, the Julian day number would be 2_450_174, so this function returns 2_450_174.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e38f26969116e49ca5ad61cb9c0c6b7110d3e8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://en.wikipedia.org/wiki/Mersenne_Twister&quot;&gt;Mersenne Twister&lt;/a&gt; generator.</source>
          <target state="translated">在&lt;a href=&quot;https://en.wikipedia.org/wiki/Mersenne_Twister&quot;&gt;赛特旋转&lt;/a&gt;发电机。</target>
        </trans-unit>
        <trans-unit id="c9f82d023b95ffa80b2f699e9e809a3c89a026b0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std%20format_#formattedWrite&quot;&gt;format string&lt;/a&gt;. When passed as a compile-time argument, the string will be statically checked against the argument types passed.</source>
          <target state="translated">该&lt;a href=&quot;std%20format_#formattedWrite&quot;&gt;格式字符串&lt;/a&gt;。当作为编译时参数传递时，将根据传递的参数类型对字符串进行静态检查。</target>
        </trans-unit>
        <trans-unit id="481e9a24c24efd34a009264a7e75b75ffae8d4de" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_container_array&quot;&gt;&lt;code&gt;std.container.array&lt;/code&gt;&lt;/a&gt; module provides an array type with deterministic control of memory, not reliant on the GC unlike built-in arrays.</source>
          <target state="translated">所述&lt;a href=&quot;std_container_array&quot;&gt; &lt;code&gt;std.container.array&lt;/code&gt; &lt;/a&gt;模块提供的存储器确定性控制，在GC不依赖不像内置阵列的阵列类型。</target>
        </trans-unit>
        <trans-unit id="dfa5a280cf90a28fa7e0eef541fa14d62e72889f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_container_binaryheap&quot;&gt;&lt;code&gt;std.container.binaryheap&lt;/code&gt;&lt;/a&gt; module provides a binary heap implementation that can be applied to any user-provided random-access range.</source>
          <target state="translated">所述&lt;a href=&quot;std_container_binaryheap&quot;&gt; &lt;code&gt;std.container.binaryheap&lt;/code&gt; &lt;/a&gt;模块提供了可以应用到任何用户提供的随机存取范围的二进制堆实现。</target>
        </trans-unit>
        <trans-unit id="2119b8da972da345ec79612705fb31e169986f77" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_container_dlist&quot;&gt;&lt;code&gt;std.container.dlist&lt;/code&gt;&lt;/a&gt; module provides a doubly-linked list implementation.</source>
          <target state="translated">该&lt;a href=&quot;std_container_dlist&quot;&gt; &lt;code&gt;std.container.dlist&lt;/code&gt; &lt;/a&gt;模块提供了一个双向链表实现。</target>
        </trans-unit>
        <trans-unit id="f5fb0146d19f80ce350def73e46817f3153f1ed2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_container_rbtree&quot;&gt;&lt;code&gt;std.container.rbtree&lt;/code&gt;&lt;/a&gt; module implements red-black trees.</source>
          <target state="translated">该&lt;a href=&quot;std_container_rbtree&quot;&gt; &lt;code&gt;std.container.rbtree&lt;/code&gt; &lt;/a&gt;模块实现红黑树。</target>
        </trans-unit>
        <trans-unit id="e298b015d33d43064046aea1f114005ecd3146c0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_container_slist&quot;&gt;&lt;code&gt;std.container.slist&lt;/code&gt;&lt;/a&gt; module implements singly-linked lists.</source>
          <target state="translated">该&lt;a href=&quot;std_container_slist&quot;&gt; &lt;code&gt;std.container.slist&lt;/code&gt; &lt;/a&gt;模块实现单链表。</target>
        </trans-unit>
        <trans-unit id="93d548eb67721f59514b3a9fcf6295da94bb0b20" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_container_util&quot;&gt;&lt;code&gt;std.container.util&lt;/code&gt;&lt;/a&gt; module contains some generic tools commonly used by container implementations.</source>
          <target state="translated">该&lt;a href=&quot;std_container_util&quot;&gt; &lt;code&gt;std.container.util&lt;/code&gt; &lt;/a&gt;模块包含容器的实现通常使用一些通用的工具。</target>
        </trans-unit>
        <trans-unit id="25369d56bc9c24a5642f926b4c95112802f3c450" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_datetime_date#Date&quot;&gt;&lt;code&gt;std.datetime.date.Date&lt;/code&gt;&lt;/a&gt; to use to set this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;'s internal std time. As &lt;a href=&quot;std_datetime_date#Date&quot;&gt;&lt;code&gt;std.datetime.date.Date&lt;/code&gt;&lt;/a&gt; has no concept of time zone, tz is used as its time zone.</source>
          <target state="translated">该&lt;a href=&quot;std_datetime_date#Date&quot;&gt; &lt;code&gt;std.datetime.date.Date&lt;/code&gt; &lt;/a&gt;用来设置该&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;的内部STD时间。由于&lt;a href=&quot;std_datetime_date#Date&quot;&gt; &lt;code&gt;std.datetime.date.Date&lt;/code&gt; &lt;/a&gt;没有时区的概念，因此将tz用作其时区。</target>
        </trans-unit>
        <trans-unit id="40b6cce9339f7a4c6635b21b800c941d34791b3b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_datetime_date#DateTime&quot;&gt;&lt;code&gt;std.datetime.date.DateTime&lt;/code&gt;&lt;/a&gt; to use to set this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;'s internal std time. As &lt;a href=&quot;std_datetime_date#DateTime&quot;&gt;&lt;code&gt;std.datetime.date.DateTime&lt;/code&gt;&lt;/a&gt; has no concept of time zone, tz is used as its time zone.</source>
          <target state="translated">该&lt;a href=&quot;std_datetime_date#DateTime&quot;&gt; &lt;code&gt;std.datetime.date.DateTime&lt;/code&gt; &lt;/a&gt;用来设置该&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;的内部STD时间。由于&lt;a href=&quot;std_datetime_date#DateTime&quot;&gt; &lt;code&gt;std.datetime.date.DateTime&lt;/code&gt; &lt;/a&gt;没有时区的概念，因此将tz用作其时区。</target>
        </trans-unit>
        <trans-unit id="6e43d0d7ff46bcb20c2dae1597b0a93ebe575980" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_datetime_date#TimeOfDay&quot;&gt;&lt;code&gt;std.datetime.date.TimeOfDay&lt;/code&gt;&lt;/a&gt; to set this &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt;'s time portion to.</source>
          <target state="translated">将此&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;的时间部分设置为的&lt;a href=&quot;std_datetime_date#TimeOfDay&quot;&gt; &lt;code&gt;std.datetime.date.TimeOfDay&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1ca7e1a66704d1b5289d51285f4b82f1cff387b1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_datetime_timezone#TimeZone&quot;&gt;&lt;code&gt;std.datetime.timezone.TimeZone&lt;/code&gt;&lt;/a&gt; to set this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;'s time zone to.</source>
          <target state="translated">该&lt;a href=&quot;std_datetime_timezone#TimeZone&quot;&gt; &lt;code&gt;std.datetime.timezone.TimeZone&lt;/code&gt; &lt;/a&gt;设置此&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;的时区。</target>
        </trans-unit>
        <trans-unit id="81c02825b5b14c0f10a52b089c01fa05ef0129bb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_datetime_timezone#TimeZone&quot;&gt;&lt;code&gt;std.datetime.timezone.TimeZone&lt;/code&gt;&lt;/a&gt; to use for this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;. If null, &lt;a href=&quot;std_datetime_timezone#LocalTime&quot;&gt;&lt;code&gt;std.datetime.timezone.LocalTime&lt;/code&gt;&lt;/a&gt; will be used.</source>
          <target state="translated">该&lt;a href=&quot;std_datetime_timezone#TimeZone&quot;&gt; &lt;code&gt;std.datetime.timezone.TimeZone&lt;/code&gt; &lt;/a&gt;用于此&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;。如果为null，则将使用&lt;a href=&quot;std_datetime_timezone#LocalTime&quot;&gt; &lt;code&gt;std.datetime.timezone.LocalTime&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ddd6c581df9a07885fdff9c9d57f3a0dd8af7cc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_datetime_timezone#TimeZone&quot;&gt;&lt;code&gt;std.datetime.timezone.TimeZone&lt;/code&gt;&lt;/a&gt; to use for this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;. If null, &lt;a href=&quot;std_datetime_timezone#LocalTime&quot;&gt;&lt;code&gt;std.datetime.timezone.LocalTime&lt;/code&gt;&lt;/a&gt; will be used. The given &lt;a href=&quot;std_datetime_date#Date&quot;&gt;&lt;code&gt;std.datetime.date.Date&lt;/code&gt;&lt;/a&gt; is assumed to be in the given time zone.</source>
          <target state="translated">该&lt;a href=&quot;std_datetime_timezone#TimeZone&quot;&gt; &lt;code&gt;std.datetime.timezone.TimeZone&lt;/code&gt; &lt;/a&gt;用于此&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;。如果为null，则将使用&lt;a href=&quot;std_datetime_timezone#LocalTime&quot;&gt; &lt;code&gt;std.datetime.timezone.LocalTime&lt;/code&gt; &lt;/a&gt;。给定的&lt;a href=&quot;std_datetime_date#Date&quot;&gt; &lt;code&gt;std.datetime.date.Date&lt;/code&gt; &lt;/a&gt;假定在给定的时区中。</target>
        </trans-unit>
        <trans-unit id="1fcfa02211ca223ce042227e6e460db112358e19" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_datetime_timezone#TimeZone&quot;&gt;&lt;code&gt;std.datetime.timezone.TimeZone&lt;/code&gt;&lt;/a&gt; to use for this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;. If null, &lt;a href=&quot;std_datetime_timezone#LocalTime&quot;&gt;&lt;code&gt;std.datetime.timezone.LocalTime&lt;/code&gt;&lt;/a&gt; will be used. The given &lt;a href=&quot;std_datetime_date#DateTime&quot;&gt;&lt;code&gt;std.datetime.date.DateTime&lt;/code&gt;&lt;/a&gt; is assumed to be in the given time zone.</source>
          <target state="translated">该&lt;a href=&quot;std_datetime_timezone#TimeZone&quot;&gt; &lt;code&gt;std.datetime.timezone.TimeZone&lt;/code&gt; &lt;/a&gt;用于此&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;。如果为null，则将使用&lt;a href=&quot;std_datetime_timezone#LocalTime&quot;&gt; &lt;code&gt;std.datetime.timezone.LocalTime&lt;/code&gt; &lt;/a&gt;。假定给定的&lt;a href=&quot;std_datetime_date#DateTime&quot;&gt; &lt;code&gt;std.datetime.date.DateTime&lt;/code&gt; &lt;/a&gt;在给定的时区中。</target>
        </trans-unit>
        <trans-unit id="08defa52d0f78153c4cad926f82b67c861f1be23" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_format#FormatSpec&quot;&gt;&lt;code&gt;std.format.FormatSpec&lt;/code&gt;&lt;/a&gt; defining how to write the value.</source>
          <target state="translated">该&lt;a href=&quot;std_format#FormatSpec&quot;&gt; &lt;code&gt;std.format.FormatSpec&lt;/code&gt; &lt;/a&gt;定义如何写入值。</target>
        </trans-unit>
        <trans-unit id="da7dc5894bf45c46b28c38bfbe1e06829d7ea9b4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_format#formattedWrite&quot;&gt;format string&lt;/a&gt;. When passed as a compile-time argument, the string will be statically checked against the argument types passed.</source>
          <target state="translated">该&lt;a href=&quot;std_format#formattedWrite&quot;&gt;格式字符串&lt;/a&gt;。当作为编译时参数传递时，将根据传递的参数类型对字符串进行静态检查。</target>
        </trans-unit>
        <trans-unit id="996e3f7bfd240f0b6638a423c48f3771a90ccfd7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_parallelism#task&quot;&gt;&lt;code&gt;std.parallelism.task&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;std_parallelism#scopedTask&quot;&gt;&lt;code&gt;std.parallelism.scopedTask&lt;/code&gt;&lt;/a&gt; functions can be used to create an instance of this struct. See &lt;code&gt;task&lt;/code&gt; for usage examples.</source>
          <target state="translated">该&lt;a href=&quot;std_parallelism#task&quot;&gt; &lt;code&gt;std.parallelism.task&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;std_parallelism#scopedTask&quot;&gt; &lt;code&gt;std.parallelism.scopedTask&lt;/code&gt; &lt;/a&gt;功能，可用于创建此结构的实例。请参阅 &lt;code&gt;task&lt;/code&gt; 以获取用法示例。</target>
        </trans-unit>
        <trans-unit id="17a7dba8fb267a6bf56ea097ca9bbf1d8c9db713" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_range_primitives&quot;&gt;&lt;code&gt;std.range.primitives&lt;/code&gt;&lt;/a&gt; submodule provides basic range functionality. It defines several templates for testing whether a given object is a range, what kind of range it is, and provides some common range operations.  The &lt;a href=&quot;std_range_interfaces&quot;&gt;&lt;code&gt;std.range.interfaces&lt;/code&gt;&lt;/a&gt; submodule provides object-based interfaces for working with ranges via runtime polymorphism.  The remainder of this module provides a rich set of range creation and composition templates that let you construct new ranges out of existing ranges:</source>
          <target state="translated">所述&lt;a href=&quot;std_range_primitives&quot;&gt; &lt;code&gt;std.range.primitives&lt;/code&gt; &lt;/a&gt;子模块提供基本的范围的功能。它定义了几个模板来测试给定对象是否为范围，范围是什么，并提供一些常见的范围操作。所述&lt;a href=&quot;std_range_interfaces&quot;&gt; &lt;code&gt;std.range.interfaces&lt;/code&gt; &lt;/a&gt;子模块提供基于对象的接口，用于经由运行时多态性与范围工作。本模块的其余部分提供了一组丰富的范围创建和组成模板，使您可以在现有范围之外构造新范围：</target>
        </trans-unit>
        <trans-unit id="8bc9200c08dfc6228f7d505663f83af0f17d9fbb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_range_primitives#isBidirectionalRange&quot;&gt;bidirectional range&lt;/a&gt; to check.</source>
          <target state="translated">要检查的&lt;a href=&quot;std_range_primitives#isBidirectionalRange&quot;&gt;双向范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b431ca8d283d375b7c8a22210b546a6efef61b11" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;forward range&lt;/a&gt; to move forward.</source>
          <target state="translated">在&lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;前进档&lt;/a&gt;前进。</target>
        </trans-unit>
        <trans-unit id="369ec9042a7546e2cad9bbf6e6a080f3772b0c25" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;forward range&lt;/a&gt; to search for.</source>
          <target state="translated">在&lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;前进档&lt;/a&gt;寻找。</target>
        </trans-unit>
        <trans-unit id="8ec17c85557100072993cd5c068790742349c464" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;forward range&lt;/a&gt; to search in.</source>
          <target state="translated">该&lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;前进挡位&lt;/a&gt;搜索英寸</target>
        </trans-unit>
        <trans-unit id="b8760be6cdf077df34f28a96eae1b9c765d650e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;forward range&lt;/a&gt; to search.</source>
          <target state="translated">搜索的&lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;前进范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="15ac7337e01f1d9ab183d6ae25d5a20a312c2083" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; searched in.</source>
          <target state="translated">的&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;搜索英寸</target>
        </trans-unit>
        <trans-unit id="7eb60916c92bf64de177162de8e5c1050d35606a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; to be counted.</source>
          <target state="translated">要计算的&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="54ec01abf5c0ea4698d52f36cd4ccc451206d4dd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; to be mapped. If &lt;code&gt;source&lt;/code&gt; is not random access it will be lazily buffered to an array of size &lt;code&gt;bufSize&lt;/code&gt; before the map function is evaluated. (For an exception to this rule, see Notes.)</source>
          <target state="translated">要映射的&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;。如果 &lt;code&gt;source&lt;/code&gt; 不是随机访问，则在评估map函数之前，它将被延迟缓冲到 &lt;code&gt;bufSize&lt;/code&gt; 大小的数组。（有关此规则的例外，请参阅&amp;ldquo;注释&amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="7fcb4bb2ee90251c35487c12566eec5095d57613" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; to be split. Must support slicing and &lt;code&gt;.length&lt;/code&gt; or be a narrow string type.</source>
          <target state="translated">要分割的&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;。必须支持切片和 &lt;code&gt;.length&lt;/code&gt; 或为窄字符串类型。</target>
        </trans-unit>
        <trans-unit id="952eb645f806f4e8722eb0d2cd942129dfd0ddf5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; to count.</source>
          <target state="translated">要计数的&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2c3f0a3ca624d2dffa57f0bed2a0b2870eb60a2e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; to decode.</source>
          <target state="translated">要解码的&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e73a5f21eb9f220fe4a413efefe2e08d57d2486" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; to encode.</source>
          <target state="translated">要编码的&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8d96bd41d136cd6247adb3fa26dee3b86c4089e3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; to iterate over.</source>
          <target state="translated">要遍历的&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dbb5a95b7ba0669a172e47e1723f9cfc7c2ea498" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; to search.</source>
          <target state="translated">要搜索的&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c359e89eaa705ac18cac67cf8b6402278719d14" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input ranges&lt;/a&gt; representing the prefix of &lt;code&gt;r1&lt;/code&gt; to skip over.</source>
          <target state="translated">表示要跳过的 &lt;code&gt;r1&lt;/code&gt; 前缀的&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c37be58cc17319441d46aeb5f1996c8581894cf3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_range_primitives#isOutputRange&quot;&gt;output range&lt;/a&gt; to store the decoded result.</source>
          <target state="translated">存储解码结果的&lt;a href=&quot;std_range_primitives#isOutputRange&quot;&gt;输出范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c13c7cb92037b15fc161b95f9af9172d148b4a5e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_range_primitives#isOutputRange&quot;&gt;output range&lt;/a&gt; to store the encoded result.</source>
          <target state="translated">存储编码结果的&lt;a href=&quot;std_range_primitives#isOutputRange&quot;&gt;输出范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="77c0f3bce9137a040efd3771cfb0616a86cd7cd5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;std_range_primitives#isOutputRange&quot;&gt;output range&lt;/a&gt; to write to.</source>
          <target state="translated">要写入的&lt;a href=&quot;std_range_primitives#isOutputRange&quot;&gt;输出范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="49142d8fd68c9b3c53741f925ebe20a7b56a8f58" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;%d&lt;/b&gt; format is used.</source>
          <target state="translated">使用&lt;b&gt;％d&lt;/b&gt;格式。</target>
        </trans-unit>
        <trans-unit id="51044429589e6e99a3db526e744ad9e76e4f0d6d" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;%g&lt;/b&gt; format is used.</source>
          <target state="translated">使用&lt;b&gt;％g&lt;/b&gt;格式。</target>
        </trans-unit>
        <trans-unit id="6011bed86258fb25beea867d98c6c8f61613da53" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;M&lt;/b&gt; means that the symbol is a function that requires a &lt;code&gt;this&lt;/code&gt; pointer. Class or struct fields are mangled without &lt;b&gt;M&lt;/b&gt;. To disambiguate &lt;b&gt;M&lt;/b&gt; from being a &lt;a href=&quot;#Parameter&quot;&gt;&lt;i&gt;Parameter&lt;/i&gt;&lt;/a&gt; with modifier &lt;code&gt;scope&lt;/code&gt;, the following type needs to be checked for being a &lt;a href=&quot;#TypeFunction&quot;&gt;&lt;i&gt;TypeFunction&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">的&lt;b&gt;中号&lt;/b&gt;意味着符号是一个需要的功能 &lt;code&gt;this&lt;/code&gt; 指针。class或struct字段不使用&lt;b&gt;M&lt;/b&gt;进行整形。为了使&lt;b&gt;M&lt;/b&gt;不再是带有修饰符 &lt;code&gt;scope&lt;/code&gt; 的&lt;a href=&quot;#Parameter&quot;&gt;&lt;i&gt;Parameter&lt;/i&gt;&lt;/a&gt;，需要检查以下类型是否是&lt;a href=&quot;#TypeFunction&quot;&gt;&lt;i&gt;TypeFunction&lt;/i&gt;&lt;/a&gt;。&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="8b62ad940fbeb2c5789e6f8cc722fdbfa7da5ba7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;!in&lt;/code&gt; expression is the logical negation of the &lt;code&gt;in&lt;/code&gt; operation.</source>
          <target state="translated">将 &lt;code&gt;!in&lt;/code&gt; 表达的逻辑否定 &lt;code&gt;in&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="949f738dd41deb163c516ad01a068ab33816218e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.funcptr&lt;/code&gt; property of a delegate will return the</source>
          <target state="translated">委托的 &lt;code&gt;.funcptr&lt;/code&gt; 属性将返回</target>
        </trans-unit>
        <trans-unit id="a927ff60b0c832aca1d0deb1c1d68c1daa79dc5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.idup&lt;/code&gt; property is a convenient way to create an immutable copy of an array:</source>
          <target state="translated">该 &lt;code&gt;.idup&lt;/code&gt; 属性是创建一个数组的不可变副本的便捷方式：</target>
        </trans-unit>
        <trans-unit id="cd8b8d3fc90c04cca56a82b84eb7386d0bdfe47f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.init&lt;/code&gt; property of an enum type is the value of the first member of that enum. This is also the default initializer for the enum type.</source>
          <target state="translated">枚举类型的 &lt;code&gt;.init&lt;/code&gt; 属性是该枚举的第一个成员的值。这也是枚举类型的默认初始化程序。</target>
        </trans-unit>
        <trans-unit id="3859b962f71ebd6e5c9c1b0719a79ab297661c17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.length&lt;/code&gt; property of a dynamic array can be set as the left-hand side of an = operator:</source>
          <target state="translated">可以将动态数组的 &lt;code&gt;.length&lt;/code&gt; 属性设置为=运算符的左侧：</target>
        </trans-unit>
        <trans-unit id="6aa34068a5d22ab8aa9bd9b191c719d0f01d956d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.length&lt;/code&gt;, &lt;code&gt;.size&lt;/code&gt;, &lt;code&gt;.sizeof&lt;/code&gt;, &lt;code&gt;.offsetof&lt;/code&gt; and &lt;code&gt;.alignof&lt;/code&gt; properties will be of type &lt;code&gt;size_t&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;.length&lt;/code&gt; ， &lt;code&gt;.size&lt;/code&gt; ， &lt;code&gt;.sizeof&lt;/code&gt; ， &lt;code&gt;.offsetof&lt;/code&gt; 和 &lt;code&gt;.alignof&lt;/code&gt; 属性将类型 &lt;code&gt;size_t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4fdbd1b27908707173a1edaf4525112b28d20cd0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.offsetof&lt;/code&gt; property gives the offset in bytes of the field from the beginning of the class instantiation. &lt;code&gt;.offsetof&lt;/code&gt; is not available for fields of &lt;code&gt;extern(Objective-C)&lt;/code&gt; classes due to their fields having a dynamic offset. &lt;code&gt;.offsetof&lt;/code&gt; can only be applied to expressions which produce the type of the field itself, not the class type:</source>
          <target state="translated">该 &lt;code&gt;.offsetof&lt;/code&gt; 属性给出了在该领域的字节从类实例化的开始偏移。 &lt;code&gt;.offsetof&lt;/code&gt; 对于 &lt;code&gt;extern(Objective-C)&lt;/code&gt; 类的字段不可用，因为它们的字段具有动态偏移量。 &lt;code&gt;.offsetof&lt;/code&gt; 仅适用于产生字段本身类型的表达式，而不适用于产生类类型的表达式：</target>
        </trans-unit>
        <trans-unit id="95c8eacd4f051efc8e34b0ec28e0fb9f11aa27b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.ptr&lt;/code&gt; property of a delegate will return the</source>
          <target state="translated">委托的 &lt;code&gt;.ptr&lt;/code&gt; 属性将返回</target>
        </trans-unit>
        <trans-unit id="1724903b9c0188aab384fe5f52257faa0acb7527" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.tupleof&lt;/code&gt; property is an &lt;a href=&quot;template#variadic-templates&quot;&gt;expression sequence&lt;/a&gt; of all the fields in the class, excluding the hidden fields and the fields in the base class. &lt;code&gt;.tupleof&lt;/code&gt; is not available for &lt;code&gt;extern(Objective-C)&lt;/code&gt; classes due to their fields having a dynamic offset.</source>
          <target state="translated">所述 &lt;code&gt;.tupleof&lt;/code&gt; 属性是一个&lt;a href=&quot;template#variadic-templates&quot;&gt;表达序列&lt;/a&gt;中的类的所有字段，不包括隐藏字段和在基类的字段。 &lt;code&gt;.tupleof&lt;/code&gt; 对于 &lt;code&gt;extern(Objective-C)&lt;/code&gt; 类不可用，因为它们的字段具有动态偏移量。</target>
        </trans-unit>
        <trans-unit id="c137d6dcdc8a762b857eac8c07b0096c836f30d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@nogc&lt;/code&gt; and &lt;code&gt;nothrow&lt;/code&gt; attributes cannot be inferred for the &lt;code&gt;Zip&lt;/code&gt; struct because &lt;a href=&quot;#StoppingPolicy&quot;&gt;&lt;code&gt;StoppingPolicy&lt;/code&gt;&lt;/a&gt; can vary at runtime. This limitation is not shared by the anonymous range returned by the &lt;code&gt;zip&lt;/code&gt; function when not given an explicit &lt;code&gt;StoppingPolicy&lt;/code&gt; as an argument.</source>
          <target state="translated">该 &lt;code&gt;@nogc&lt;/code&gt; 和 &lt;code&gt;nothrow&lt;/code&gt; 属性不能被推断为 &lt;code&gt;Zip&lt;/code&gt; 结构，因为&lt;a href=&quot;#StoppingPolicy&quot;&gt; &lt;code&gt;StoppingPolicy&lt;/code&gt; &lt;/a&gt;可以在运行时会有所不同。如果未给定明确的 &lt;code&gt;StoppingPolicy&lt;/code&gt; 作为参数，则 &lt;code&gt;zip&lt;/code&gt; 函数返回的匿名范围不会共享此限制。</target>
        </trans-unit>
        <trans-unit id="6e96abc33603d8bc05abf167e42cc4e98db8045c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@selector&lt;/code&gt; Attribute</source>
          <target state="translated">在 &lt;code&gt;@selector&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="f6c9ba4e329884202e2c96c75ddebb8190fe3bde" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@selector&lt;/code&gt; attribute is a compiler recognized &lt;a href=&quot;attribute#uda&quot;&gt;UDA&lt;/a&gt;. It is used to tell the compiler which selector to use when calling an Objective-C method.</source>
          <target state="translated">该 &lt;code&gt;@selector&lt;/code&gt; 属性是公认的一个编译器&lt;a href=&quot;attribute#uda&quot;&gt;UDA&lt;/a&gt;。它用于告诉编译器在调用Objective-C方法时使用哪个选择器。</target>
        </trans-unit>
        <trans-unit id="752216458653e1cbb6c9e963c946448d7d235321" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AliasThis&lt;/code&gt; object to check</source>
          <target state="translated">该 &lt;code&gt;AliasThis&lt;/code&gt; 对象来检查</target>
        </trans-unit>
        <trans-unit id="fa92561e469bdb1ad4026066da03e96fe41ac12f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigInt&lt;/code&gt; to convert to a decimal &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;BigInt&lt;/code&gt; 转换为十进制 &lt;code&gt;string&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="762bae96b280038efb5744e1f69ff2a9b9fe8924" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigInt&lt;/code&gt; to convert to a hexadecimal &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;BigInt&lt;/code&gt; 转换为十六进制 &lt;code&gt;string&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="09048bfa6c458cec6891287f0bfdf5fb775fc807" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Contents&lt;/code&gt; of the input can be provided if all the records are the same type such as all integer data:</source>
          <target state="translated">如果所有记录都是相同的类型（例如所有整数数据），则可以提供输入的 &lt;code&gt;Contents&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c5b29392956ba29c0adb988c34e23412ed24102e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;D_ObjectiveC&lt;/code&gt; Version Identifier</source>
          <target state="translated">该 &lt;code&gt;D_ObjectiveC&lt;/code&gt; 版本标识符</target>
        </trans-unit>
        <trans-unit id="3bdc294730714ec15d2e01301a3e08098956d705" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;D_ObjectiveC&lt;/code&gt; version identifier is a predefined version identifier. It is enabled if Objective-C support is available for the target.</source>
          <target state="translated">所述 &lt;code&gt;D_ObjectiveC&lt;/code&gt; 版本标识符是一个预先定义的版本标识符。如果目标可使用Objective-C支持，则启用该功能。</target>
        </trans-unit>
        <trans-unit id="9652b1793eda4a74a34bea7d01c1ae4dc455d00a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Direction&lt;/code&gt; that this range iterates in.</source>
          <target state="translated">的 &lt;code&gt;Direction&lt;/code&gt; ，这个范围内进行迭代。</target>
        </trans-unit>
        <trans-unit id="f23dc3e300f8de1a7b5dc2f858ee4c1f0c10fa66" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FILETIME&lt;/code&gt; struct to convert.</source>
          <target state="translated">要转换的 &lt;code&gt;FILETIME&lt;/code&gt; 结构。</target>
        </trans-unit>
        <trans-unit id="f223850e7d1f3a227dbc68e1f6ccb4db9d2a70e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;File&lt;/code&gt; log messages are written to.</source>
          <target state="translated">将写入 &lt;code&gt;File&lt;/code&gt; 日志消息。</target>
        </trans-unit>
        <trans-unit id="9505f486ff94c8cc96955cd21faa5ea522c0488b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;File&lt;/code&gt; passed must be open for all the log call to the &lt;code&gt;FileLogger&lt;/code&gt;. If the &lt;code&gt;File&lt;/code&gt; gets closed, using the &lt;code&gt;FileLogger&lt;/code&gt; for logging will result in undefined behaviour.</source>
          <target state="translated">对于对 &lt;code&gt;FileLogger&lt;/code&gt; 的所有日志调用，必须打开传递的 &lt;code&gt;File&lt;/code&gt; 。如果关闭 &lt;code&gt;File&lt;/code&gt; ，则使用 &lt;code&gt;FileLogger&lt;/code&gt; 进行记录将导致不确定的行为。</target>
        </trans-unit>
        <trans-unit id="1adc74023b21a71faedb9fb2198865c8c868c0b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FreeTree&lt;/code&gt; is word aligned.</source>
          <target state="translated">该 &lt;code&gt;FreeTree&lt;/code&gt; 是字对齐。</target>
        </trans-unit>
        <trans-unit id="5a599fec73312b1e2c7a29eeb97f84d65ba31e02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IntervalRange&lt;/code&gt; to assign to this one.</source>
          <target state="translated">要分配给此对象的 &lt;code&gt;IntervalRange&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bae87f67fc76bb340f7ddbd109d8144f57f7a78f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LogLevel&lt;/code&gt; determines if the log call are processed or dropped by the &lt;code&gt;Logger&lt;/code&gt;. In order for the log call to be processed the &lt;code&gt;LogLevel&lt;/code&gt; of the log call must be greater or equal to the &lt;code&gt;LogLevel&lt;/code&gt; of the &lt;code&gt;logger&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;LogLevel&lt;/code&gt; 的确定日志呼叫处理或丢弃的 &lt;code&gt;Logger&lt;/code&gt; 。为了使呼叫日志将被处理的 &lt;code&gt;LogLevel&lt;/code&gt; 的日志呼叫必须大于或等于所述 &lt;code&gt;LogLevel&lt;/code&gt; 所述的 &lt;code&gt;logger&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="189baec1a3c41b98e162f7ebced93220628a714a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LogLevel&lt;/code&gt; for the &lt;code&gt;FileLogger&lt;/code&gt;. By default the</source>
          <target state="translated">该 &lt;code&gt;LogLevel&lt;/code&gt; 的为 &lt;code&gt;FileLogger&lt;/code&gt; 。默认情况下</target>
        </trans-unit>
        <trans-unit id="d018b0b265c186bb486a9c743eef113b007d5db9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LogLevel&lt;/code&gt; for the &lt;code&gt;FileLogger&lt;/code&gt;. By default the &lt;code&gt;LogLevel&lt;/code&gt; for &lt;code&gt;FileLogger&lt;/code&gt; is &lt;code&gt;LogLevel.all&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;LogLevel&lt;/code&gt; 的为 &lt;code&gt;FileLogger&lt;/code&gt; 。默认情况下， &lt;code&gt;LogLevel&lt;/code&gt; 的用于 &lt;code&gt;FileLogger&lt;/code&gt; 是 &lt;code&gt;LogLevel.all&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae9ecb75d6ace04d1eacabcc1bcd9b6183ff7cad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LogLevel&lt;/code&gt; for the &lt;code&gt;MultiLogger&lt;/code&gt;. By default the &lt;code&gt; LogLevel&lt;/code&gt; is &lt;code&gt;all&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;LogLevel&lt;/code&gt; 的为 &lt;code&gt;MultiLogger&lt;/code&gt; 。默认情况下， &lt;code&gt; LogLevel&lt;/code&gt; 为 &lt;code&gt;all&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="641b844c924242bfa7b7f12639ba8204d0cf1b18" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LogLevel&lt;/code&gt; for the &lt;code&gt;MultiLogger&lt;/code&gt;. By default the &lt;code&gt;LogLevel&lt;/code&gt; for &lt;code&gt;MultiLogger&lt;/code&gt; is &lt;code&gt;LogLevel.all&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;LogLevel&lt;/code&gt; 的为 &lt;code&gt;MultiLogger&lt;/code&gt; 。默认情况下， &lt;code&gt;LogLevel&lt;/code&gt; 的用于 &lt;code&gt;MultiLogger&lt;/code&gt; 是 &lt;code&gt;LogLevel.all&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3603b7e77aae4ad9627a9afeed3ce61445cb60ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LogLevel&lt;/code&gt; for the &lt;code&gt;NullLogger&lt;/code&gt;. By default the &lt;code&gt;LogLevel&lt;/code&gt; for &lt;code&gt;NullLogger&lt;/code&gt; is &lt;code&gt;LogLevel.all&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;LogLevel&lt;/code&gt; 的为 &lt;code&gt;NullLogger&lt;/code&gt; 。默认情况下， &lt;code&gt;LogLevel&lt;/code&gt; 的用于 &lt;code&gt;NullLogger&lt;/code&gt; 是 &lt;code&gt;LogLevel.all&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d2af39a6062628b2e279264f9a73f14181c2c5ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LogLevel&lt;/code&gt; of a log call can be defined in two ways. The first is by calling &lt;code&gt;log&lt;/code&gt; and passing the &lt;code&gt;LogLevel&lt;/code&gt; explicitly as the first argument. The second way of setting the &lt;code&gt;LogLevel&lt;/code&gt; of a log call, is by calling either &lt;code&gt;trace&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;warning&lt;/code&gt;, &lt;code&gt;critical&lt;/code&gt;, or &lt;code&gt;fatal&lt;/code&gt;. The log call will then have the respective &lt;code&gt;LogLevel&lt;/code&gt;. If no &lt;code&gt;LogLevel&lt;/code&gt; is defined the log call will use the current &lt;code&gt;LogLevel&lt;/code&gt; of the used &lt;code&gt;Logger&lt;/code&gt;. If data is logged with &lt;code&gt;LogLevel&lt;/code&gt;&lt;code&gt;fatal&lt;/code&gt; by default an &lt;code&gt;Error&lt;/code&gt; will be thrown. This behaviour can be modified by using the member &lt;code&gt;fatalHandler&lt;/code&gt; to assign a custom delegate to handle log call with &lt;code&gt;LogLevel&lt;/code&gt;&lt;code&gt;fatal&lt;/code&gt;.</source>
          <target state="translated">日志调用的 &lt;code&gt;LogLevel&lt;/code&gt; 可以通过两种方式定义。第一种是通过调用 &lt;code&gt;log&lt;/code&gt; 并将 &lt;code&gt;LogLevel&lt;/code&gt; 作为第一个参数显式传递。设置日志调用的 &lt;code&gt;LogLevel&lt;/code&gt; 的第二种方法是调用 &lt;code&gt;trace&lt;/code&gt; ， &lt;code&gt;info&lt;/code&gt; ， &lt;code&gt;warning&lt;/code&gt; ， &lt;code&gt;critical&lt;/code&gt; 或 &lt;code&gt;fatal&lt;/code&gt; 。然后，日志调用将具有相应的 &lt;code&gt;LogLevel&lt;/code&gt; 。如果未定义 &lt;code&gt;LogLevel&lt;/code&gt; ,则日志调用将使用所用 &lt;code&gt;Logger&lt;/code&gt; 的当前 &lt;code&gt;LogLevel&lt;/code&gt; 。如果默认情况下使用 &lt;code&gt;LogLevel&lt;/code&gt; &lt;code&gt;fatal&lt;/code&gt; 记录数据，则显示 &lt;code&gt;Error&lt;/code&gt; 将被抛出。可以通过使用 &lt;code&gt;fatalHandler&lt;/code&gt; 成员分配一个自定义委托来处理 &lt;code&gt;LogLevel&lt;/code&gt; &lt;code&gt;fatal&lt;/code&gt; 的日志调用来修改此行为。</target>
        </trans-unit>
        <trans-unit id="0a0d434e25b47fdaafcef338f132ea275bc847f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LogLevel&lt;/code&gt; used by this log call.</source>
          <target state="translated">此日志调用使用的 &lt;code&gt;LogLevel&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8892f147c371745dae355ae476344696ac6a8bd9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Logger&lt;/code&gt; to insert.</source>
          <target state="translated">要插入的 &lt;code&gt;Logger&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="80178593879baa963d3ea8ccb8419d3049b3fd6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NegInfInterval&lt;/code&gt; to assign to this one.</source>
          <target state="translated">该 &lt;code&gt;NegInfInterval&lt;/code&gt; 分配给这一个。</target>
        </trans-unit>
        <trans-unit id="45d1956c384b5b3fb5b0e73f346cf797ea06f1fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NegInfIntervalRange&lt;/code&gt; to assign to this one.</source>
          <target state="translated">该 &lt;code&gt;NegInfIntervalRange&lt;/code&gt; 分配给这一个。</target>
        </trans-unit>
        <trans-unit id="80594f56560776213c82536e7c5835856110de27" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NullLogger&lt;/code&gt; will not process any log messages.</source>
          <target state="translated">该 &lt;code&gt;NullLogger&lt;/code&gt; 不会处理任何日志消息。</target>
        </trans-unit>
        <trans-unit id="a481e02ed96f28efe58cf2e89023a7611a07a100" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Option&lt;/code&gt; extracted from the &lt;code&gt;getopt&lt;/code&gt; parameter.</source>
          <target state="translated">从 &lt;code&gt;getopt&lt;/code&gt; 参数中提取的 &lt;code&gt;Option&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af853ab18e8359e92cea25ba5f1faea6ad6630ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ParentAllocator&lt;/code&gt; type parameter is the type of the allocator used to allocate the memory chunk underlying the &lt;code&gt;KRRegion&lt;/code&gt; object. Choosing the default (&lt;code&gt;NullAllocator&lt;/code&gt;) means the user is responsible for passing a buffer at construction (and for deallocating it if necessary). Otherwise, &lt;code&gt;KRRegion&lt;/code&gt; automatically deallocates the buffer during destruction. For that reason, if &lt;code&gt;ParentAllocator&lt;/code&gt; is not &lt;code&gt;NullAllocator&lt;/code&gt;, then &lt;code&gt;KRRegion&lt;/code&gt; is not copyable.</source>
          <target state="translated">所述 &lt;code&gt;ParentAllocator&lt;/code&gt; 类型参数是用来分配存储器大块的底层分配器的类型 &lt;code&gt;KRRegion&lt;/code&gt; 对象。选择默认值（ &lt;code&gt;NullAllocator&lt;/code&gt; ）意味着用户有责任在构造时传递缓冲区（并在必要时负责分配缓冲区）。否则， &lt;code&gt;KRRegion&lt;/code&gt; 会在销毁期间自动重新分配缓冲区。因此，如果 &lt;code&gt;ParentAllocator&lt;/code&gt; 不是 &lt;code&gt;NullAllocator&lt;/code&gt; ，则 &lt;code&gt;KRRegion&lt;/code&gt; 是不可复制的。</target>
        </trans-unit>
        <trans-unit id="9458766e7479b6cf51af26d50b9dd02e20ae49ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PosInfInterval&lt;/code&gt; to assign to this one.</source>
          <target state="translated">该 &lt;code&gt;PosInfInterval&lt;/code&gt; 分配给这一个。</target>
        </trans-unit>
        <trans-unit id="34136f36fcc4fdb9d0545b5f2dc626ce604274eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PosInfIntervalRange&lt;/code&gt; to assign to this one.</source>
          <target state="translated">该 &lt;code&gt;PosInfIntervalRange&lt;/code&gt; 分配给这一个。</target>
        </trans-unit>
        <trans-unit id="8f8c2b1b9fe06bcd45111f1a16dae6ec3e0c641b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SYSTEMTIME&lt;/code&gt; struct to convert.</source>
          <target state="translated">要转换的 &lt;code&gt;SYSTEMTIME&lt;/code&gt; 结构。</target>
        </trans-unit>
        <trans-unit id="55a36b01203d0bdffacc2ecd4ebaccb88912f8ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SYSTEMTIME&lt;/code&gt; which is returned will be set using the given &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;'s time zone, so to get the &lt;code&gt;SYSTEMTIME&lt;/code&gt; in UTC, set the &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;'s time zone to UTC.</source>
          <target state="translated">返回的 &lt;code&gt;SYSTEMTIME&lt;/code&gt; 将使用给定的&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;的时区进行设置，因此要获取以UTC表示的 &lt;code&gt;SYSTEMTIME&lt;/code&gt; ，请将&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;的时区设置为UTC。</target>
        </trans-unit>
        <trans-unit id="17d66eac131ebc5a304d01033bb87ca88a11dafd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SharedBitmappedBlock&lt;/code&gt; cannot allocate more than the given block size. Allocations are satisfied by searching the first unset bit in the bitmap, and atomically setting it. In rare memory pressure scenarios, the allocation could fail.</source>
          <target state="translated">该 &lt;code&gt;SharedBitmappedBlock&lt;/code&gt; 不能分配超过给定的块大小。通过在位图中搜索第一个未设置的位并自动进行设置，可以满足分配要求。在极少的内存压力情况下，分配可能会失败。</target>
        </trans-unit>
        <trans-unit id="7f50e878b8609c1691f2dd746d7c582ae1ecc004" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Source&lt;/code&gt; range must be at least a &lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;ForwardRange&lt;/a&gt; and the &lt;code&gt;windowSize&lt;/code&gt; must be greater than zero.</source>
          <target state="translated">的 &lt;code&gt;Source&lt;/code&gt; 范围必须至少为一个&lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;ForwardRange&lt;/a&gt;和 &lt;code&gt;windowSize&lt;/code&gt; 必须大于零。</target>
        </trans-unit>
        <trans-unit id="c577f5db0ed86295cccdd2e366fd7fb31e9735fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;StdForwardLogger&lt;/code&gt; will always forward anything to the sharedLog.</source>
          <target state="translated">该 &lt;code&gt;StdForwardLogger&lt;/code&gt; 将永远向前什么的sharedLog。</target>
        </trans-unit>
        <trans-unit id="38094d128287502d265daa3f32ff92398be4f485" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;StdForwardLogger&lt;/code&gt; will not throw if data is logged with &lt;code&gt;LogLevel.fatal&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;StdForwardLogger&lt;/code&gt; 如果数据记录与不会抛出 &lt;code&gt;LogLevel.fatal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="28d0dc72c49b2f56027f834e227217c1c2c52a44" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Throwable&lt;/code&gt; to test for.</source>
          <target state="translated">该 &lt;code&gt;Throwable&lt;/code&gt; 的测试的。</target>
        </trans-unit>
        <trans-unit id="aa29abc0b02ca4a75f09d69735038e1ca2f9e6e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TickDuration&lt;/code&gt; to add to or subtract from this &lt;code&gt;TickDuration&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;TickDuration&lt;/code&gt; 添加或从该减去 &lt;code&gt;TickDuration&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="591dfa55a54985010905ae5e062c1737f6d7dd60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TickDuration&lt;/code&gt; to add to this &lt;code&gt;Duration&lt;/code&gt; or to subtract this &lt;code&gt;Duration&lt;/code&gt; from.</source>
          <target state="translated">该 &lt;code&gt;TickDuration&lt;/code&gt; 添加到这个 &lt;code&gt;Duration&lt;/code&gt; 或减去这个 &lt;code&gt;Duration&lt;/code&gt; 从。</target>
        </trans-unit>
        <trans-unit id="b9bc2f1c8ad28754bf0913173be3fcf66000ab29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Tuple&lt;/code&gt; to compare against. It must meet the criteria for comparison between &lt;code&gt;Tuple&lt;/code&gt;s.</source>
          <target state="translated">比较的 &lt;code&gt;Tuple&lt;/code&gt; 。它必须满足 &lt;code&gt;Tuple&lt;/code&gt; 之间进行比较的标准。</target>
        </trans-unit>
        <trans-unit id="ae3d87816f53e10c3340c3a534bb4bebe8efe634" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Tuple&lt;/code&gt; to compare against. It must meeting the criteria for comparison between &lt;code&gt;Tuple&lt;/code&gt;s.</source>
          <target state="translated">比较的 &lt;code&gt;Tuple&lt;/code&gt; 。它必须满足 &lt;code&gt;Tuple&lt;/code&gt; 之间进行比较的标准。</target>
        </trans-unit>
        <trans-unit id="71d8abf8af5ee26843c72e0eca8e058ef93a5a47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Tuple&lt;/code&gt; to concatenate with</source>
          <target state="translated">要连接的 &lt;code&gt;Tuple&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db6b88026ed5f84aaeb159851306acbc0805b6fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Tuple&lt;/code&gt; to copy.</source>
          <target state="translated">要复制的 &lt;code&gt;Tuple&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cdd1176cdf3efa8b361fda3a58ad58a8bc166a3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;\0&lt;/code&gt; terminated string which is the combination of &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; and a valid path.</source>
          <target state="translated">所述 &lt;code&gt;\0&lt;/code&gt; 结尾的字符串，其是组合 &lt;code&gt;path&lt;/code&gt; 和 &lt;code&gt;name&lt;/code&gt; 和一个有效路径。</target>
        </trans-unit>
        <trans-unit id="6a8b6a5ff2de1aee07ec0a045bd35434cd690030" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__ctfe&lt;/code&gt; boolean pseudo-variable, which evaluates to true in CTFE, but false otherwise, can be used to provide an alternative execution path to avoid operations which are forbidden in CTFE. Every usage of &lt;code&gt;__ctfe&lt;/code&gt; is evaluated before code generation and therefore has no run-time cost, even if no optimizer is used.</source>
          <target state="translated">所述 &lt;code&gt;__ctfe&lt;/code&gt; 布尔伪变量，其评估在CTFE真实的，但否则为假，可以被用于提供到其在CTFE禁止避免操作的替代执行路径。 &lt;code&gt;__ctfe&lt;/code&gt; 的每次使用都会在代码生成之前进行评估，因此即使没有使用优化器也没有运行时成本。</target>
        </trans-unit>
        <trans-unit id="56395a2d3e5a7a87d6c397c8da676b69152f6f63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;args&lt;/code&gt;/&lt;code&gt;program&lt;/code&gt;/&lt;code&gt;command&lt;/code&gt;, &lt;code&gt;env&lt;/code&gt; and &lt;code&gt;config&lt;/code&gt; parameters are forwarded straight to the underlying spawn functions, and we refer to their documentation for details.</source>
          <target state="translated">该 &lt;code&gt;args&lt;/code&gt; / &lt;code&gt;program&lt;/code&gt; / &lt;code&gt;command&lt;/code&gt; ， &lt;code&gt;env&lt;/code&gt; 和 &lt;code&gt;config&lt;/code&gt; 参数被直转发到底层产卵的功能，而且我们参考其详细信息的文档。</target>
        </trans-unit>
        <trans-unit id="7314f1cfec56db10eb004f9f77fe84c2b7324dc7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;auto&lt;/code&gt; attribute is used when there are no other attributes and type inference is desired.</source>
          <target state="translated">的 &lt;code&gt;auto&lt;/code&gt; 时，有没有其他属性属性用于和类型推断是期望的。</target>
        </trans-unit>
        <trans-unit id="ea97c5895efda9e921b7a4dc07c8ee96fea88239" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;autoInit&lt;/code&gt; option makes the object ensure the store is automatically initialized. Leaving &lt;code&gt;autoInit == RefCountedAutoInitialize.yes&lt;/code&gt; (the default option) is convenient but has the cost of a test whenever the payload is accessed. If &lt;code&gt;autoInit == RefCountedAutoInitialize.no&lt;/code&gt;, user code must call either &lt;code&gt;refCountedStore.isInitialized&lt;/code&gt; or &lt;code&gt;refCountedStore.ensureInitialized&lt;/code&gt; before attempting to access the payload. Not doing so results in null pointer dereference.</source>
          <target state="translated">该 &lt;code&gt;autoInit&lt;/code&gt; 选项使物体确保存储库将自动初始化。保留 &lt;code&gt;autoInit == RefCountedAutoInitialize.yes&lt;/code&gt; （默认选项）很方便，但是每当访问有效负载时都要进行测试。如果 &lt;code&gt;autoInit == RefCountedAutoInitialize.no&lt;/code&gt; ，则用户代码必须在尝试访问有效内容之前调用 &lt;code&gt;refCountedStore.isInitialized&lt;/code&gt; 或 &lt;code&gt;refCountedStore.ensureInitialized&lt;/code&gt; 。不这样做会导致空指针取消引用。</target>
        </trans-unit>
        <trans-unit id="69bb3e95d96c480cf1bef8a9a3edaddbb9f73b6b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bringToFront&lt;/code&gt; function can rotate elements in one buffer left or right, swap buffers of equal length, and even move elements across disjoint buffers of different types and different lengths.</source>
          <target state="translated">该 &lt;code&gt;bringToFront&lt;/code&gt; 功能可以旋转在一个缓冲元件向左或向右，长度相等的交换缓冲液，甚至移动跨越不同类型和不同长度的不相交的缓冲器元件。</target>
        </trans-unit>
        <trans-unit id="cd8ac112f697888bd40d877ce34ac401e4af6717" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bringToFront&lt;/code&gt; function treats strings at the code unit level and it is not concerned with Unicode character integrity. &lt;code&gt;bringToFront&lt;/code&gt; is designed as a function for moving elements in ranges, not as a string function.</source>
          <target state="translated">该 &lt;code&gt;bringToFront&lt;/code&gt; 的代码单元级功能对待字符串，它不关心Unicode字符的完整性。 &lt;code&gt;bringToFront&lt;/code&gt; 设计为在范围内移动元素的函数，而不是字符串函数。</target>
        </trans-unit>
        <trans-unit id="b8d8753eda77a47c9e419e9821af6545c1329322" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;char[]&lt;/code&gt; buffer to store the encoded result.</source>
          <target state="translated">所述 &lt;code&gt;char[]&lt;/code&gt; 缓冲器来存储编码的结果。</target>
        </trans-unit>
        <trans-unit id="33f594b9c5df8cb09804ec69586a77bc07cf37cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;choices&lt;/code&gt; needs to be composed of function or delegate handlers that accept one argument. There can also be a choice that accepts zero arguments. That choice will be invoked if the &lt;code&gt; switchObject&lt;/code&gt; is null.</source>
          <target state="translated">该 &lt;code&gt;choices&lt;/code&gt; 必须由接受一个参数的函数或委托处理。也可以选择接受零个参数。如果 &lt;code&gt; switchObject&lt;/code&gt; 为null，则将调用该选择。</target>
        </trans-unit>
        <trans-unit id="a7c187f05ee2ebdce065cbd4f9fb2247ea951270" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;class&lt;/code&gt; or &lt;code&gt;interface&lt;/code&gt; to search.</source>
          <target state="translated">要搜索的 &lt;code&gt;class&lt;/code&gt; 或 &lt;code&gt;interface&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="861b0eb3583fe72750b180c107e9a74e26b3d067" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;const&lt;/code&gt; attribute changes the type of the declared symbol from &lt;code&gt;T&lt;/code&gt; to &lt;code&gt;const(T)&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; is the type specified (or inferred) for the introduced symbol in the absence of &lt;code&gt;const&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;const&lt;/code&gt; 属性改变从声明符号的类型 &lt;code&gt;T&lt;/code&gt; 到 &lt;code&gt;const(T)&lt;/code&gt; ，其中 &lt;code&gt;T&lt;/code&gt; 是用于在不存在所引入的符号指定的（或推断）类型 &lt;code&gt;const&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d7fc3d859d8514b14477602cc68bff5574b689c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;deallocate&lt;/code&gt; method only works (and returns &lt;code&gt;true&lt;/code&gt;) on systems that support reducing the break address (i.e. accept calls to &lt;code&gt;sbrk&lt;/code&gt; with negative offsets). OSX does not accept such. In addition the argument must be the last block allocated.</source>
          <target state="translated">该 &lt;code&gt;deallocate&lt;/code&gt; 方法只适用（返回 &lt;code&gt;true&lt;/code&gt; ）在系统的支持减少破地址（即接听电话，以 &lt;code&gt;sbrk&lt;/code&gt; 负偏移）。OSX不接受。另外，参数必须是分配的最后一个块。</target>
        </trans-unit>
        <trans-unit id="3a71092d77b054a66bd8e1792beb78410bdbbbd6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;deallocateAll&lt;/code&gt; method only works (and returns &lt;code&gt;true&lt;/code&gt;) on systems that support reducing the break address (i.e. accept calls to &lt;code&gt;sbrk&lt;/code&gt; with negative offsets). OSX does not accept such.</source>
          <target state="translated">该 &lt;code&gt;deallocateAll&lt;/code&gt; 方法只适用（返回 &lt;code&gt;true&lt;/code&gt; 的系统的支持减少了断点地址）（即接受调用 &lt;code&gt;sbrk&lt;/code&gt; 负偏移）。OSX不接受。</target>
        </trans-unit>
        <trans-unit id="48410e02dc31153d6c2f0d60374f83b8eb37aa64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;debug (&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;debug (&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="315ad37794f53bbab85663b01e324e6f7bf74c8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;debug&lt;/code&gt; condition is satisfied when the &lt;code&gt;-debug&lt;/code&gt; switch is passed to the compiler or when the debug level is &amp;gt;= 1.</source>
          <target state="translated">在 &lt;code&gt;debug&lt;/code&gt; 时满足该条件时 &lt;code&gt;-debug&lt;/code&gt; 开关被传递到编译器或当调试级别是&amp;gt; = 1。</target>
        </trans-unit>
        <trans-unit id="6bda4710254bb8ebb3470f77de80d7eaa7a4b247" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;delete&lt;/code&gt; keyword allowed to free GC-allocated memory. As this is inherently not &lt;code&gt;@safe&lt;/code&gt;, it has been deprecated. This function has been added to provide an easy transition from &lt;code&gt;delete&lt;/code&gt;. It performs the same functionality as the former &lt;code&gt;delete&lt;/code&gt; keyword.</source>
          <target state="translated">该 &lt;code&gt;delete&lt;/code&gt; 关键字允许自由GC-分配的内存。由于这本质上不是 &lt;code&gt;@safe&lt;/code&gt; ，因此已弃用。添加此功能是为了方便从 &lt;code&gt;delete&lt;/code&gt; 过渡。它执行与以前的 &lt;code&gt;delete&lt;/code&gt; 关键字相同的功能。</target>
        </trans-unit>
        <trans-unit id="c34a0df7e835662fcb397ba5e97c59daf56aaba4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;expand&lt;/code&gt; method may only succeed if the argument is the last block allocated. In that case, &lt;code&gt;expand&lt;/code&gt; attempts to push the break pointer to the right.</source>
          <target state="translated">仅当参数是分配的最后一个块时， &lt;code&gt;expand&lt;/code&gt; 方法才可能成功。在这种情况下，请 &lt;code&gt;expand&lt;/code&gt; 尝试将中断指针推到右侧。</target>
        </trans-unit>
        <trans-unit id="cd7ee8c32dffef3320d0fa27b6f6cd2136b61369" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extern (C)&lt;/code&gt; and &lt;code&gt;extern (D)&lt;/code&gt; calling convention matches the C calling convention used by the supported C compiler on the host system. Except that the extern (D) calling convention for Windows x86 is described here.</source>
          <target state="translated">所述 &lt;code&gt;extern (C)&lt;/code&gt; 和 &lt;code&gt;extern (D)&lt;/code&gt; 调用约定由主机系统上支持的C编译器使用C调用约定相匹配。除了此处描述了Windows x86的extern（D）调用约定。</target>
        </trans-unit>
        <trans-unit id="4519ff29f42d0f82fe2fe7d0d145b74eddd798f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;front&lt;/code&gt; range may actually &quot;step over&quot; the &lt;code&gt;back&lt;/code&gt; range. This is very useful with forward ranges that cannot compute comfortably right-bounded subranges like &lt;code&gt;arr[0 .. 4]&lt;/code&gt; above. In the example below, &lt;code&gt;r2&lt;/code&gt; is a right subrange of &lt;code&gt;r1&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;front&lt;/code&gt; 范围可以实际上是&amp;ldquo;步骤依次经过&amp;rdquo; &lt;code&gt;back&lt;/code&gt; 范围。这对于无法计算舒适的右边界子范围（如上面的 &lt;code&gt;arr[0 .. 4]&lt;/code&gt; 正向范围非常有用。在下面的示例中， &lt;code&gt;r2&lt;/code&gt; 是 &lt;code&gt;r1&lt;/code&gt; 的右子范围。</target>
        </trans-unit>
        <trans-unit id="a422bf2058400dcd9c56ae2c4fe51eb12fcec1c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getopt&lt;/code&gt; function takes a reference to the command line (as received by &lt;code&gt;main&lt;/code&gt;) as its first argument, and an unbounded number of pairs of strings and pointers. Each string is an option meant to &quot;fill&quot; the value referenced by the pointer to its right (the &quot;bound&quot; pointer). The option string in the call to &lt;code&gt;getopt&lt;/code&gt; should not start with a dash.  In all cases, the command-line options that were parsed and used by &lt;code&gt;getopt&lt;/code&gt; are removed from &lt;code&gt;args&lt;/code&gt;. Whatever in the arguments did not look like an option is left in &lt;code&gt;args&lt;/code&gt; for further processing by the program. Values that were unaffected by the options are not touched, so a common idiom is to initialize options to their defaults and then invoke &lt;code&gt;getopt&lt;/code&gt;. If a command-line argument is recognized as an option with a parameter and the parameter cannot be parsed properly (e.g., a number is expected but not present), a &lt;code&gt;ConvException&lt;/code&gt; exception is thrown. If &lt;code&gt;std.getopt.config.passThrough&lt;/code&gt; was not passed to &lt;code&gt;getopt&lt;/code&gt; and an unrecognized command-line argument is found, a &lt;code&gt;GetOptException&lt;/code&gt; is thrown.  Depending on the type of the pointer being bound, &lt;code&gt;getopt&lt;/code&gt; recognizes the following kinds of options:</source>
          <target state="translated">的 &lt;code&gt;getopt&lt;/code&gt; 的函数采用命令行的引用（如由接收到的 &lt;code&gt;main&lt;/code&gt; ）作为第一个参数，和对字符串和指针的无限多个。每个字符串都是一个选项，用于&amp;ldquo;填充&amp;rdquo;由其右边的指针（&amp;ldquo;绑定&amp;rdquo;指针）引用的值。调用 &lt;code&gt;getopt&lt;/code&gt; 中的选项字符串不应以破折号开头。在所有情况下，从 &lt;code&gt;args&lt;/code&gt; 中删除由 &lt;code&gt;getopt&lt;/code&gt; 解析和使用的命令行选项。参数中看起来不像选项的任何内容都保留在 &lt;code&gt;args&lt;/code&gt; 中，以供程序进行进一步处理。不会影响未受选项影响的值，因此常见的习惯用法是将选项初始化为默认值，然后调用 &lt;code&gt;getopt&lt;/code&gt; 。如果将命令行参数识别为带有参数的选项，并且无法正确解析该参数（例如，期望有一个数字但不存在），则会引发 &lt;code&gt;ConvException&lt;/code&gt; 异常。如果未将 &lt;code&gt;std.getopt.config.passThrough&lt;/code&gt; 传递给 &lt;code&gt;getopt&lt;/code&gt; ,并且找到了无法识别的命令行参数， &lt;code&gt;GetOptException&lt;/code&gt; 引发GetOptException。根据绑定的指针的类型， &lt;code&gt;getopt&lt;/code&gt; 可以识别以下类型的选项：</target>
        </trans-unit>
        <trans-unit id="7b73bb7244dae978ce076efe98de379e4d338f0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;immutable&lt;/code&gt; attribute modifies the type from &lt;code&gt;T&lt;/code&gt; to &lt;code&gt;immutable(T)&lt;/code&gt;, the same way as &lt;code&gt;const&lt;/code&gt; does.</source>
          <target state="translated">所述 &lt;code&gt;immutable&lt;/code&gt; 属性修改从类型 &lt;code&gt;T&lt;/code&gt; 到 &lt;code&gt;immutable(T)&lt;/code&gt; ，作为同样的方式 &lt;code&gt;const&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="0664217c953262d37218988e224b35fd637e53a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;in&lt;/code&gt; and &lt;code&gt;out&lt;/code&gt; blocks or expressions of a function declaration specify the pre- and post-conditions of the function. They are used in &lt;a href=&quot;contracts&quot;&gt;Contract Programming&lt;/a&gt;. The code inside these blocks should not have any side-effects, including modifying function parameters and/or return values.</source>
          <target state="translated">函数声明的 &lt;code&gt;in&lt;/code&gt; 和 &lt;code&gt;out&lt;/code&gt; 块或表达式指定函数的前置条件和后置条件。它们用于&lt;a href=&quot;contracts&quot;&gt;合同编程中&lt;/a&gt;。这些块中的代码不应有任何副作用，包括修改函数参数和/或返回值。</target>
        </trans-unit>
        <trans-unit id="6872874b153fc0effbd03e646763ee703dd8bc2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;in&lt;/code&gt; expression has the same precedence as the relational expressions &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;=&lt;/code&gt;, etc. The return value of the</source>
          <target state="translated">的 &lt;code&gt;in&lt;/code&gt; 表达具有相同的优先级的关系式 &lt;code&gt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;code&gt;=&lt;/code&gt; ，等的返回值</target>
        </trans-unit>
        <trans-unit id="b4eb3584bffc0aa6958eaab390a905eaa7fcc692" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inout&lt;/code&gt; attribute modifies the type from &lt;code&gt;T&lt;/code&gt; to &lt;code&gt;inout(T)&lt;/code&gt;, the same way as &lt;code&gt;const&lt;/code&gt; does.</source>
          <target state="translated">的 &lt;code&gt;inout&lt;/code&gt; 属性修改从类型 &lt;code&gt;T&lt;/code&gt; 到 &lt;code&gt;inout(T)&lt;/code&gt; ，作为同样的方式 &lt;code&gt;const&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="968551598c2a43f06e8bf24ad9377e47b780c3d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inout&lt;/code&gt; qualifier may be applied to the copy constructor parameter in order to specify that mutable, &lt;code&gt;const&lt;/code&gt;, or &lt;code&gt;immutable&lt;/code&gt; types are treated the same:</source>
          <target state="translated">可以将 &lt;code&gt;inout&lt;/code&gt; 限定符应用于copy构造函数参数，以指定将可变， &lt;code&gt;const&lt;/code&gt; 或 &lt;code&gt;immutable&lt;/code&gt; 类型视为相同：</target>
        </trans-unit>
        <trans-unit id="22a687fc90a97249a3ef72c2d4b1df43d3df5e8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;instance&lt;/code&gt; singleton is defined if and only if the parent allocator has no state and defines its own &lt;code&gt;it&lt;/code&gt; object.</source>
          <target state="translated">该 &lt;code&gt;instance&lt;/code&gt; 单是指当且仅当父分配器没有状态，定义了自己的 &lt;code&gt;it&lt;/code&gt; 的对象。</target>
        </trans-unit>
        <trans-unit id="ec8dde286332c5aa08ae3177ee5fc7a106f040a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;is&lt;/code&gt; compares for identity. To compare for nonidentity, use &lt;code&gt;e1 !is e2&lt;/code&gt;. The type of the result is &lt;code&gt;bool&lt;/code&gt;. The operands undergo the &lt;a href=&quot;type#usual-arithmetic-conversions&quot;&gt;Usual Arithmetic Conversions&lt;/a&gt; to bring them to a common type before comparison.</source>
          <target state="translated">该 &lt;code&gt;is&lt;/code&gt; 比较了身份。要比较非同一性，请使用 &lt;code&gt;e1 !is e2&lt;/code&gt; 。结果的类型为 &lt;code&gt;bool&lt;/code&gt; 。操作数经过&lt;a href=&quot;type#usual-arithmetic-conversions&quot;&gt;通常的算术转换&lt;/a&gt;，以便在比较之前将它们转换为通用类型。</target>
        </trans-unit>
        <trans-unit id="9ae177266bdeb39f87e4a184c6c378055487c7b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;main()&lt;/code&gt; function to be written in D, to ensure that the required runtime library support is properly initialized.</source>
          <target state="translated">要用D编写的 &lt;code&gt;main()&lt;/code&gt; 函数，以确保正确初始化所需的运行时库支持。</target>
        </trans-unit>
        <trans-unit id="891cbd158fc64142d63f3931abe9b04d4c81c222" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;minAlign&lt;/code&gt; parameter establishes alignment. If &lt;code&gt;minAlign &amp;gt; 1&lt;/code&gt;, the sizes of all allocation requests are rounded up to a multiple of &lt;code&gt;minAlign&lt;/code&gt;. Applications aiming at maximum speed may want to choose &lt;code&gt;minAlign = 1&lt;/code&gt; and control alignment externally.</source>
          <target state="translated">该 &lt;code&gt;minAlign&lt;/code&gt; 参数设定对齐。如果 &lt;code&gt;minAlign &amp;gt; 1&lt;/code&gt; ，则所有分配请求的大小都将四舍五入为 &lt;code&gt;minAlign&lt;/code&gt; 的倍数。 &lt;code&gt;minAlign = 1&lt;/code&gt; 最大速度的应用程序可能希望选择minAlign = 1并从外部控制对齐。</target>
        </trans-unit>
        <trans-unit id="ed92125a36b5eb56c36761322b3938f1b464f6a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;node&lt;/code&gt; parameter passed to &lt;code&gt;getAddressInfo&lt;/code&gt; must be a numeric string. This will suppress any potentially lengthy network host address lookups.</source>
          <target state="translated">传递给 &lt;code&gt;getAddressInfo&lt;/code&gt; 的 &lt;code&gt;node&lt;/code&gt; 参数必须是数字字符串。这将抑制任何可能冗长的网络主机地址查找。</target>
        </trans-unit>
        <trans-unit id="23d6155dbf6f6df9508b72a12de4d979d7730735" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;octal&lt;/code&gt; facility provides a means to declare a number in base 8. Using &lt;code&gt;octal!177&lt;/code&gt; or &lt;code&gt;octal!&quot;177&quot;&lt;/code&gt; for 127 represented in octal (same as 0177 in C).</source>
          <target state="translated">的 &lt;code&gt;octal&lt;/code&gt; 设施提供了一种手段，以在基座8声明一个数使用 &lt;code&gt;octal!177&lt;/code&gt; 或 &lt;code&gt;octal!&quot;177&quot;&lt;/code&gt; 为八进制（C相同0177）表示127。</target>
        </trans-unit>
        <trans-unit id="129480b440f262e2ead128e12ea6c5cdcf95c4b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;override&lt;/code&gt; attribute applies to virtual functions. It means that the function must override a function with the same name and parameters in a base class. The override attribute is useful for catching errors when a base class's member function gets its parameters changed, and all derived classes need to have their overriding functions updated.</source>
          <target state="translated">该 &lt;code&gt;override&lt;/code&gt; 属性适用于虚函数。这意味着该函数必须覆盖基类中具有相同名称和参数的函数。当基类的成员函数更改其参数并且所有派生类都需要更新其覆盖函数时，override属性对于捕获错误很有用。</target>
        </trans-unit>
        <trans-unit id="4c39c9bb95cd597c07eafdff4f38811d99e1f3d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parent&lt;/code&gt; keyword is actually a delegate to the super class' corresponding member function. [&lt;a href=&quot;https://issues.dlang.org/show_bug.cgi?id=2540&quot;&gt;Bugzilla 2540&lt;/a&gt;]</source>
          <target state="translated">的 &lt;code&gt;parent&lt;/code&gt; 关键字实际上是一个代表对应的成员函数的超类。[ &lt;a href=&quot;https://issues.dlang.org/show_bug.cgi?id=2540&quot;&gt;Bugzilla 2540&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="5345bebedd7933fe7e2ab3bb75fb53c48ea8dd27" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parse&lt;/code&gt; family of functions works quite like the &lt;code&gt;to&lt;/code&gt; family, except that:</source>
          <target state="translated">该 &lt;code&gt;parse&lt;/code&gt; 函数族的工作很喜欢 &lt;code&gt;to&lt;/code&gt; 家庭，不同之处在于：</target>
        </trans-unit>
        <trans-unit id="53d890775a2e90ce1cd5bfe92ca5bcf1994e918a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;printf&lt;/code&gt; format string literal in the example doesn't end with &lt;code&gt;'\0'&lt;/code&gt;. This is because string literals, when they are not part of an initializer to a larger data structure, have a &lt;code&gt;'\0'&lt;/code&gt; character helpfully stored after the end of them.</source>
          <target state="translated">示例中的 &lt;code&gt;printf&lt;/code&gt; 格式字符串文字不以 &lt;code&gt;'\0'&lt;/code&gt; 结尾。这是因为，当字符串文字不属于较大数据结构的初始化程序的一部分时，它们的末尾会有用地存储一个 &lt;code&gt;'\0'&lt;/code&gt; 字符。</target>
        </trans-unit>
        <trans-unit id="c2194ef1e4ad8716f788317053d9495fb71b6327" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;printf&lt;/code&gt;-style string.</source>
          <target state="translated">该 &lt;code&gt;printf&lt;/code&gt; 的风格的字符串。</target>
        </trans-unit>
        <trans-unit id="645634d091eae4e17c9ec0b97603c409a84aae33" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pure&lt;/code&gt;, &lt;code&gt;@safe&lt;/code&gt;, &lt;code&gt;@nogc&lt;/code&gt;, or &lt;code&gt;nothrow&lt;/code&gt; attributes cannot be inferred for &lt;code&gt;lockstep&lt;/code&gt; iteration. &lt;a href=&quot;#zip&quot;&gt;&lt;code&gt;zip&lt;/code&gt;&lt;/a&gt; can infer the first two due to a different implementation.</source>
          <target state="translated">所述 &lt;code&gt;pure&lt;/code&gt; ， &lt;code&gt;@safe&lt;/code&gt; ， &lt;code&gt;@nogc&lt;/code&gt; ，或 &lt;code&gt;nothrow&lt;/code&gt; 属性不能推断 &lt;code&gt;lockstep&lt;/code&gt; 迭代。由于实现不同，&lt;a href=&quot;#zip&quot;&gt; &lt;code&gt;zip&lt;/code&gt; &lt;/a&gt;可以推断出前两个。</target>
        </trans-unit>
        <trans-unit id="2882b6054016e631f0c09f82c6edaf8c162ba826" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;range&lt;/code&gt; must be a &lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;forward range&lt;/a&gt;. The separator can be a value of the same type as the elements in &lt;code&gt;range&lt;/code&gt; or it can be another forward &lt;code&gt;range&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;range&lt;/code&gt; 必须是&lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;正向范围&lt;/a&gt;。分隔符可以是与 &lt;code&gt;range&lt;/code&gt; 中的元素相同类型的值，也可以是另一个正向 &lt;code&gt;range&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="796a30adc82abcfecaf4ae7e5c2930fc3ed789ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;schwartzSort&lt;/code&gt; function might require less temporary data and be faster than the Perl idiom or the decorate-sort-undecorate idiom present in Python and Lisp. This is because sorting is done in-place and only minimal extra data (one array of transformed elements) is created.  To check whether an array was sorted and benefit of the speedup of Schwartz sorting, a function &lt;code&gt;schwartzIsSorted&lt;/code&gt; is not provided because the effect can be achieved by calling &lt;code&gt;isSorted!less(map!transform(r))&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;schwartzSort&lt;/code&gt; 功能可能需要更少的临时数据和比Perl的成语或装饰排序，去除装饰目前在Python和Lisp成语更快。这是因为排序是在原位完成的，并且仅创建了最少的额外数据（一个转换元素数组）。为了检查数组是否已排序以及是否受益于Schwartz排序，不提供 &lt;code&gt;schwartzIsSorted&lt;/code&gt; 函数，因为可以通过调用 &lt;code&gt;isSorted!less(map!transform(r))&lt;/code&gt; 来实现效果。</target>
        </trans-unit>
        <trans-unit id="2fddaad8a8ed56f77847f6655dad35e2662c33eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scope&lt;/code&gt; attribute is used for local variables and for class declarations. For class declarations, the &lt;code&gt;scope&lt;/code&gt; attribute creates a</source>
          <target state="translated">该 &lt;code&gt;scope&lt;/code&gt; 属性用于局部变量和类声明。对于类声明， &lt;code&gt;scope&lt;/code&gt; 属性创建一个</target>
        </trans-unit>
        <trans-unit id="3fa8f7d1b74d1a9ee8b770bcbe3131eb50e5e608" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scope&lt;/code&gt; storage class on the</source>
          <target state="translated">该 &lt;code&gt;scope&lt;/code&gt; 的存储类</target>
        </trans-unit>
        <trans-unit id="7e245aa06638dcfada88df8c50a10a266377829d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;seg&lt;/code&gt; means load the segment number that the symbol is in. This is not relevant for flat model code. Instead, do a move from the relevant segment register.</source>
          <target state="translated">在 &lt;code&gt;seg&lt;/code&gt; 装置加载的段号，该符号是，这是不相关的平面模型的代码。而是从相关段寄存器中移出。</target>
        </trans-unit>
        <trans-unit id="f1165047c539bab5d19432fe9cd8e8d0c00bd8b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shared&lt;/code&gt; attribute modifies the type from &lt;code&gt;T&lt;/code&gt; to &lt;code&gt;shared(T)&lt;/code&gt;, the same way as &lt;code&gt;const&lt;/code&gt; does.</source>
          <target state="translated">所述 &lt;code&gt;shared&lt;/code&gt; 属性修改从类型 &lt;code&gt;T&lt;/code&gt; 到 &lt;code&gt;shared(T)&lt;/code&gt; ，作为同样的方式 &lt;code&gt;const&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="1e208afb75193f3bc51ca510ccfe04a767a6a006" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stat&lt;/code&gt; struct gotten from calling &lt;code&gt;stat&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;stat&lt;/code&gt; 结构与调用得到 &lt;code&gt;stat&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8ee90ec4fd6fa01114c3ec0cf16e2c2fffb84458" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;static&lt;/code&gt; attribute applies to functions and data. It means that the declaration does not apply to a particular instance of an object, but to the type of the object. In other words, it means there is no &lt;code&gt;this&lt;/code&gt; reference. &lt;code&gt;static&lt;/code&gt; is ignored when applied to other declarations.</source>
          <target state="translated">在 &lt;code&gt;static&lt;/code&gt; 属性适用于功能和数据。这意味着声明不适用于对象的特定实例，而是适用于对象的类型。换句话说，这意味着没有 &lt;code&gt;this&lt;/code&gt; 引用。当将 &lt;code&gt;static&lt;/code&gt; 应用于其他声明时，将被忽略。</target>
        </trans-unit>
        <trans-unit id="a7bd38d68869d8f5055deb4d9c87d32c72ed47d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;static&lt;/code&gt; in the static constructor declaration is not an attribute, it must appear immediately before the &lt;code&gt;this&lt;/code&gt;:</source>
          <target state="translated">在 &lt;code&gt;static&lt;/code&gt; 在静态构造函数声明不是一个属性，它必须之前立即出现 &lt;code&gt;this&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="78a76bba5ffa9cb0f5429288aefeb29752e20041" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;static&lt;/code&gt; in the static destructor declaration is not an attribute, it must appear immediately before the &lt;code&gt;~this&lt;/code&gt;:</source>
          <target state="translated">在 &lt;code&gt;static&lt;/code&gt; 静态析构函数不是一个属性，它必须前立刻出现 &lt;code&gt;~this&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="6bca96c9851b526872a5466004ed8fbfdad08557" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;std.uni&lt;/code&gt; module provides an implementation of fundamental Unicode algorithms and data structures. This doesn't include UTF encoding and decoding primitives, see &lt;a href=&quot;std_utf#decode&quot;&gt;&lt;code&gt;std.utf.decode&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;std_utf#encode&quot;&gt;&lt;code&gt;std.utf.encode&lt;/code&gt;&lt;/a&gt; in &lt;a href=&quot;std_utf&quot;&gt;&lt;code&gt;std.utf&lt;/code&gt;&lt;/a&gt; for this functionality.</source>
          <target state="translated">所述 &lt;code&gt;std.uni&lt;/code&gt; 模块提供的基本的Unicode算法和数据结构的实现。这不包括UTF编码和解码元，见&lt;a href=&quot;std_utf#decode&quot;&gt; &lt;code&gt;std.utf.decode&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;std_utf#encode&quot;&gt; &lt;code&gt;std.utf.encode&lt;/code&gt; &lt;/a&gt;在&lt;a href=&quot;std_utf&quot;&gt; &lt;code&gt;std.utf&lt;/code&gt; &lt;/a&gt;此功能。</target>
        </trans-unit>
        <trans-unit id="e752dcef30e45214ff3e8ec23bf1ea7507c8d89b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stdName&lt;/code&gt; for this time zone.</source>
          <target state="translated">此时区的 &lt;code&gt;stdName&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="050f0ed338278e2be6b6c047057d2f449c86d2d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stripLeft&lt;/code&gt; function will strip the &lt;code&gt;front&lt;/code&gt; of the range, the &lt;code&gt;stripRight&lt;/code&gt; function will strip the &lt;code&gt;back&lt;/code&gt; of the range, while the &lt;code&gt;strip&lt;/code&gt; function will strip both the &lt;code&gt;front&lt;/code&gt; and &lt;code&gt;back&lt;/code&gt; of the range.</source>
          <target state="translated">该 &lt;code&gt;stripLeft&lt;/code&gt; 函数将去掉 &lt;code&gt;front&lt;/code&gt; 的范围内的，所述 &lt;code&gt;stripRight&lt;/code&gt; 函数将剥离 &lt;code&gt;back&lt;/code&gt; 的范围内的，而 &lt;code&gt;strip&lt;/code&gt; 的功能将去除两个 &lt;code&gt;front&lt;/code&gt; 和 &lt;code&gt;back&lt;/code&gt; 的范围内的。</target>
        </trans-unit>
        <trans-unit id="839ed0bb56b103a8eece57297954fc01f25ea05d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;synchronized&lt;/code&gt; attribute can only be applied to classes, structs cannot be marked to be synchronized.</source>
          <target state="translated">已 &lt;code&gt;synchronized&lt;/code&gt; 属性只能应用于类，不能将结构标记为已同步。</target>
        </trans-unit>
        <trans-unit id="9011fa2589704334e3e103c4c208b6c05b6bc3a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;this&lt;/code&gt; of this &lt;code&gt;SysTime&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;this&lt;/code&gt; 此的 &lt;code&gt;SysTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="771910a8002a7122d3a609081a9732bd40452d54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;this&lt;/code&gt; parameter for methods or nested functions.</source>
          <target state="translated">在 &lt;code&gt;this&lt;/code&gt; 参数的方法或嵌套函数。</target>
        </trans-unit>
        <trans-unit id="86abf02caae05395778f7a7acd623fbca99d9de9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;to&lt;/code&gt; template converts a value from one type to another. The source type is deduced and the target type must be specified, for example the expression &lt;code&gt;to!int(42.0)&lt;/code&gt; converts the number 42 from &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;int&lt;/code&gt;. The conversion is &quot;safe&quot;, i.e., it checks for overflow; &lt;code&gt;to!int(4.2e10)&lt;/code&gt; would throw the &lt;code&gt;ConvOverflowException&lt;/code&gt; exception. Overflow checks are only inserted when necessary, e.g., &lt;code&gt;to!double(42)&lt;/code&gt; does not do any checking because any &lt;code&gt;int&lt;/code&gt; fits in a &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;to&lt;/code&gt; 模板值转换从一种类型到另一个。推导源类型并必须指定目标类型，例如，表达式 &lt;code&gt;to!int(42.0)&lt;/code&gt; 将数字42从 &lt;code&gt;double&lt;/code&gt; 转换为 &lt;code&gt;int&lt;/code&gt; 。转换是&amp;ldquo;安全的&amp;rdquo;，即检查溢出。 &lt;code&gt;to!int(4.2e10)&lt;/code&gt; 将引发 &lt;code&gt;ConvOverflowException&lt;/code&gt; 异常。仅在必要时才插入溢出检查，例如 &lt;code&gt;to!double(42)&lt;/code&gt; 不会进行任何检查，因为任何 &lt;code&gt;int&lt;/code&gt; 都可以容纳在 &lt;code&gt;double&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="c72681bce14ab24a3265bfe0c7fc387d069da68a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;upTo&lt;/code&gt; parameter is useful to &quot;cut the losses&quot; in case the interest is in seeing whether the range has at least some number of elements. If the parameter &lt;code&gt;upTo&lt;/code&gt; is specified, stops if &lt;code&gt;upTo&lt;/code&gt; steps have been taken and returns &lt;code&gt;upTo&lt;/code&gt;.</source>
          <target state="translated">如果感兴趣的是查看范围是否具有至少一些元素，则 &lt;code&gt;upTo&lt;/code&gt; 参数对于&amp;ldquo;减少损失&amp;rdquo;很有用。如果指定了参数 &lt;code&gt;upTo&lt;/code&gt; ，则在已执行 &lt;code&gt;upTo&lt;/code&gt; 步骤时停止并返回 &lt;code&gt;upTo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ec39fe5b28d95636f3cf30df0999156fd8536f9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;version(unittest)&lt;/code&gt; is satisfied if and only if the code is compiled with unit tests enabled (the &lt;a href=&quot;https://dlang.org/dmd.html#switch-unittest&quot;&gt;&lt;em&gt;-unittest&lt;/em&gt;&lt;/a&gt; option on &lt;em&gt;dmd&lt;/em&gt;).</source>
          <target state="translated">仅当在启用了单元测试的情况下编译代码（&lt;em&gt;dmd&lt;/em&gt;的&lt;a href=&quot;https://dlang.org/dmd.html#switch-unittest&quot;&gt;&lt;em&gt;-unittest&lt;/em&gt;&lt;/a&gt;选项 &lt;code&gt;version(unittest)&lt;/code&gt; ，版本（unittest）才能满足。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a777caaefbb263c6a96ad677845f9139788a6836" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;with&lt;/code&gt; statement is a way to simplify repeated references to the same object.</source>
          <target state="translated">该 &lt;code&gt;with&lt;/code&gt; 的语句是简化对同一个对象反复引用的方式。</target>
        </trans-unit>
        <trans-unit id="b5c453abc4924350428091525f5adaaf66e0085f" translate="yes" xml:space="preserve">
          <source>The AA indicating which characters to replace and what to replace them with.</source>
          <target state="translated">AA表示要替换哪些字符,用什么来替换。</target>
        </trans-unit>
        <trans-unit id="3cd598fe8a3a2f9cbd7fd135237f3d6a48d2526a" translate="yes" xml:space="preserve">
          <source>The ARM &lt;code&gt;hardfp&lt;/code&gt; floating point ABI</source>
          <target state="translated">ARM &lt;code&gt;hardfp&lt;/code&gt; 浮点ABI</target>
        </trans-unit>
        <trans-unit id="080cd6006fb8edfc56cbc88495f7c0f1e4064bf0" translate="yes" xml:space="preserve">
          <source>The ARM &lt;code&gt;soft&lt;/code&gt; floating point ABI</source>
          <target state="translated">ARM &lt;code&gt;soft&lt;/code&gt; 浮点ABI</target>
        </trans-unit>
        <trans-unit id="4315576cc7f55930516266d81e5293d6035553b5" translate="yes" xml:space="preserve">
          <source>The ARM &lt;code&gt;softfp&lt;/code&gt; floating point ABI</source>
          <target state="translated">ARM &lt;code&gt;softfp&lt;/code&gt; 浮点ABI</target>
        </trans-unit>
        <trans-unit id="1aee526a398ffb0d8989324764e692631fcec3dc" translate="yes" xml:space="preserve">
          <source>The ARM architecture (32-bit) (AArch32 et al)</source>
          <target state="translated">ARM架构(32位)(AArch32等)</target>
        </trans-unit>
        <trans-unit id="140d76b4f076d2fb8060abf8ae55a752d2839ebb" translate="yes" xml:space="preserve">
          <source>The ASTBase family defines a family of AST nodes appropriate for parsing with no semantic information. It defines all the AST nodes that the parser needs and also all the conveniance methods and variables. The resulting AST can be visited with the strict, permissive and transitive visitors. The ASTBase family is used to instantiate the parser in the parser library.</source>
          <target state="translated">ASTBase系列定义了一个适合于没有语义信息的解析的AST节点系列。它定义了解析器需要的所有AST节点,也定义了所有的便利方法和变量。由此产生的AST可以用严格的、允许的和转义的访问者来访问。ASTBase系列用于在解析器库中实例化解析器。</target>
        </trans-unit>
        <trans-unit id="c3be1c951cff3d8aa070819c54cb8919e689dc11" translate="yes" xml:space="preserve">
          <source>The Advanced RISC Machine architecture (64-bit)</source>
          <target state="translated">高级RISC机器架构(64位)</target>
        </trans-unit>
        <trans-unit id="7ad070d4c966b73f1a0e81ee952f683fc75493b1" translate="yes" xml:space="preserve">
          <source>The Alpha architecture</source>
          <target state="translated">阿尔法架构</target>
        </trans-unit>
        <trans-unit id="75879c280e92f1cb9eedc61a237d7ab029b22e63" translate="yes" xml:space="preserve">
          <source>The Alpha hard float ABI</source>
          <target state="translated">阿尔法硬浮球ABI</target>
        </trans-unit>
        <trans-unit id="62c77bede3b6cdc2acf3c10062577e4523986150" translate="yes" xml:space="preserve">
          <source>The Alpha soft float ABI</source>
          <target state="translated">阿尔法软浮球ABI</target>
        </trans-unit>
        <trans-unit id="c01dada0c094f9d64c05e42515804aed98403159" translate="yes" xml:space="preserve">
          <source>The Android platform</source>
          <target state="translated">安卓平台</target>
        </trans-unit>
        <trans-unit id="6f8a189af46fa6b0fd80d35f5b80e9c56ef0f48e" translate="yes" xml:space="preserve">
          <source>The C ABI referred to in this specification means the C Application Binary Interface of the target system. C and D code should be freely linkable together, in particular, D code shall have access to the entire C ABI runtime library.</source>
          <target state="translated">本规范中提到的C ABI是指目标系统的C应用二进制接口。C代码和D代码应可自由链接在一起,特别是D代码应能访问整个C ABI运行库。</target>
        </trans-unit>
        <trans-unit id="b31779cdd7255c8710f71ffcb42a8c3c176e037b" translate="yes" xml:space="preserve">
          <source>The C function must be declared and given a calling convention, most likely the &quot;C&quot; calling convention, for example:</source>
          <target state="translated">必须声明C函数,并给出一个调用约定,最可能的是 &quot;C &quot;的调用约定,例如。</target>
        </trans-unit>
        <trans-unit id="b73111d71bd053626a250414ea9482ee128f3a9d" translate="yes" xml:space="preserve">
          <source>The C heap allocator, a.k.a. &lt;code&gt;malloc&lt;/code&gt;/&lt;code&gt;realloc&lt;/code&gt;/&lt;code&gt;free&lt;/code&gt;. Use sparingly and only for code that is unlikely to leak.</source>
          <target state="translated">C堆分配器，又名 &lt;code&gt;malloc&lt;/code&gt; / &lt;code&gt;realloc&lt;/code&gt; / &lt;code&gt;free&lt;/code&gt; 。谨慎使用，仅用于不太可能泄漏的代码。</target>
        </trans-unit>
        <trans-unit id="9bcae0904b97d122e7ac2cf8f770976e290fa9d4" translate="yes" xml:space="preserve">
          <source>The C heap allocator.</source>
          <target state="translated">C堆分配器。</target>
        </trans-unit>
        <trans-unit id="d3d9a3eb3d745c74b8f9c5ffaed6de680eef5f7e" translate="yes" xml:space="preserve">
          <source>The C standard does not specify the representation of time_t, so it is implementation defined. On POSIX systems, unix time is equivalent to time_t, but that's not necessarily true on other systems (e.g. it is not true for the Digital Mars C runtime). So, be careful when using unix time with C functions on non-POSIX systems.</source>
          <target state="translated">C标准并没有规定time_t的表示方法,所以它是由实现定义的,在POSIX系统上,unix时间等同于time_t,但在其他系统上不一定如此(例如数字火星C运行时就不一定如此)。在POSIX系统上,unix时间等同于time_t,但在其他系统上就不一定了(比如对于Digital Mars C运行时就不一定了)。所以,在非POSIX系统上使用unix时间与C函数时要小心。</target>
        </trans-unit>
        <trans-unit id="268d31350a547e3c72b722824c24bd316ded8af7" translate="yes" xml:space="preserve">
          <source>The C style syntax for declaring pointers to functions is deprecated:</source>
          <target state="translated">宣告指向函数的指针的C风格语法已被废弃。</target>
        </trans-unit>
        <trans-unit id="fe2a0b7eccecf9a4981d7246d1ba9612d79f4687" translate="yes" xml:space="preserve">
          <source>The C++ calling convention is the default convention for its member functions, rather than the D calling convention.</source>
          <target state="translated">C++的调用约定是其成员函数的默认约定,而不是D的调用约定。</target>
        </trans-unit>
        <trans-unit id="8e79898d7d2dc499b7d995326a3a49d8e19d01cf" translate="yes" xml:space="preserve">
          <source>The C++ code to access it looks like:</source>
          <target state="translated">访问它的C++代码是这样的。</target>
        </trans-unit>
        <trans-unit id="744ee5429ee5de2789ebe3998584f1507a9905e0" translate="yes" xml:space="preserve">
          <source>The C++ end looks like:</source>
          <target state="translated">C++端的样子。</target>
        </trans-unit>
        <trans-unit id="fd9a5a8084540da9e33cf1c4a0dafe5ab694bd12" translate="yes" xml:space="preserve">
          <source>The C++ version of D's ExceptionHeader wrapper</source>
          <target state="translated">D的ExceptionHeader包装器的C++版本。</target>
        </trans-unit>
        <trans-unit id="8095ddeea5e0e04c215a664a1828938a9f629b34" translate="yes" xml:space="preserve">
          <source>The CApath directory used to validate the peer certificate this option is used only if SSL_VERIFYPEER is true</source>
          <target state="translated">用于验证对等体证书的CA路径目录,这个选项只有在SSL_VERIFYPEER为真时才使用。</target>
        </trans-unit>
        <trans-unit id="0f5b63bc94368c961989a6c61e45ef163a38eec9" translate="yes" xml:space="preserve">
          <source>The CApath or CAfile used to validate the peer certificate this option is used only if SSL_VERIFYPEER is true</source>
          <target state="translated">用于验证对等体证书的CA路径或CA文件,该选项仅在SSL_VERIFYPEER为真时使用。</target>
        </trans-unit>
        <trans-unit id="2735c767df771513d95177efb3609e6484a0ab5e" translate="yes" xml:space="preserve">
          <source>The CLI flag without leading &lt;code&gt;-&lt;/code&gt;, e.g. &lt;code&gt;color&lt;/code&gt;</source>
          <target state="translated">不带 &lt;code&gt;-&lt;/code&gt; 的CLI标志，例如 &lt;code&gt;color&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="204d490b010260c1f0d9da99a97fcbf057fe1425" translate="yes" xml:space="preserve">
          <source>The ClassKind enum is used in AggregateDeclaration AST nodes to specify the linkage type of the struct/class/interface or if it is an anonymous class. If the class is anonymous it is also considered to be a D class.</source>
          <target state="translated">ClassKind枚举在AggregateDeclaration AST节点中用于指定结构/类/接口的链接类型,或者如果它是匿名类。如果类是匿名的,它也被认为是一个D类。</target>
        </trans-unit>
        <trans-unit id="19b53b7f22b6ad230e9b7d3050f57e3d9ed3e6a2" translate="yes" xml:space="preserve">
          <source>The Cygwin environment</source>
          <target state="translated">Cygwin环境</target>
        </trans-unit>
        <trans-unit id="4cedce22f0215a765398ea9fe9f300cfe9ad0637" translate="yes" xml:space="preserve">
          <source>The D &lt;b&gt;dchar&lt;/b&gt; type is represented by the special primitive type 0x78.</source>
          <target state="translated">D &lt;b&gt;dchar&lt;/b&gt;类型由特殊的原始类型0x78表示。</target>
        </trans-unit>
        <trans-unit id="c3537395621b252f9ec47bd7365cace4c8165f58" translate="yes" xml:space="preserve">
          <source>The D Error Handling Solution</source>
          <target state="translated">D错误处理方案</target>
        </trans-unit>
        <trans-unit id="981d02056effa5ba62bb1118da0c8017aedaaf90" translate="yes" xml:space="preserve">
          <source>The D compiler is free to rearrange the order of fields in a class to optimally pack them in an implementation-defined manner. Consider the fields much like the local variables in a function - the compiler assigns some to registers and shuffles others around all to get the optimal stack frame layout. This frees the code designer to organize the fields in a manner that makes the code more readable rather than being forced to organize it according to machine optimization rules. Explicit control of field layout is provided by struct/union types, not classes.</source>
          <target state="translated">D编译器可以自由地重新安排类中字段的顺序,以实现定义的方式对它们进行最佳包装。考虑字段很像函数中的局部变量--编译器将一些字段分配给寄存器,并将其他字段全部洗牌,以获得最佳的堆栈框架布局。这就解放了代码设计者,让他们以一种使代码更易读的方式组织字段,而不是被迫按照机器优化规则来组织。字段布局的显式控制是由结构/union类型提供的,而不是类。</target>
        </trans-unit>
        <trans-unit id="66c7fe3af0cd825203fe720c8fa067ea0a5678d5" translate="yes" xml:space="preserve">
          <source>The D implementation is a direct translation of the ANSI C implementation by Antoon Bosselaers.</source>
          <target state="translated">D的实现是Antoon Bosselaers对ANSI C实现的直接翻译。</target>
        </trans-unit>
        <trans-unit id="0eb8727502196b9e0eeb264d99cb49da0fe24a5d" translate="yes" xml:space="preserve">
          <source>The D programming language enables embedding both contracts and test code along side the actual code, which helps to keep them all consistent with each other. One thing lacking is the documentation, as ordinary comments are usually unsuitable for automated extraction and formatting into manual pages. Embedding the user documentation into the source code has important advantages, such as not having to write the documentation twice, and the likelihood of the documentation staying consistent with the code.</source>
          <target state="translated">D编程语言可以在实际代码的同时嵌入合同和测试代码,这有助于保持它们之间的一致性。有一点欠缺的是文档,因为普通的注释通常不适合自动提取并格式化成手工页面。将用户文档嵌入到源代码中具有重要的优势,比如不用写两次文档,以及文档与代码保持一致的可能性。</target>
        </trans-unit>
        <trans-unit id="802c45703e5b78c2f572e30e6188af81443e60af" translate="yes" xml:space="preserve">
          <source>The D runtime library to be linked in, because many features of the core language require runtime library support.</source>
          <target state="translated">D运行库要链接进去,因为核心语言的很多功能都需要运行库支持。</target>
        </trans-unit>
        <trans-unit id="5618198d08f630b6e32a4e2871006e5750e7b402" translate="yes" xml:space="preserve">
          <source>The DDoc description &lt;code&gt;ddoxText&lt;/code&gt; is only available when compiled with &lt;code&gt;-version=DdocOptions&lt;/code&gt;.</source>
          <target state="translated">DDoc描述 &lt;code&gt;ddoxText&lt;/code&gt; 仅在使用 &lt;code&gt;-version=DdocOptions&lt;/code&gt; 编译时可用。</target>
        </trans-unit>
        <trans-unit id="7fb61f59ea8c90dd27a6926b8a592e6ead829fcc" translate="yes" xml:space="preserve">
          <source>The DLang Tour's &lt;a href=&quot;http://tour.dlang.org/tour/en/basics/ranges&quot;&gt;chapter on ranges&lt;/a&gt; for an interactive introduction.</source>
          <target state="translated">DLang Tour &lt;a href=&quot;http://tour.dlang.org/tour/en/basics/ranges&quot;&gt;关于范围&lt;/a&gt;的章节提供了交互式介绍。</target>
        </trans-unit>
        <trans-unit id="cf140ab3f9e536cec445868430509f0cac2d46fc" translate="yes" xml:space="preserve">
          <source>The DNS check is currently not implemented.</source>
          <target state="translated">DNS检查目前还没有实施。</target>
        </trans-unit>
        <trans-unit id="56d9ffa8426e25e0a3a48c7232e3304c44908db1" translate="yes" xml:space="preserve">
          <source>The DOS file time to convert.</source>
          <target state="translated">DOS文件转换的时间。</target>
        </trans-unit>
        <trans-unit id="15ae789bb8d9a2910a1013b01a8410a64b26b8d3" translate="yes" xml:space="preserve">
          <source>The Darwin operating system; use &lt;code&gt;OSX&lt;/code&gt; instead</source>
          <target state="translated">达尔文操作系统；使用 &lt;code&gt;OSX&lt;/code&gt; ，而不是</target>
        </trans-unit>
        <trans-unit id="0c5d193fbc258ff579f3a37e19e9cc2430e7b7ab" translate="yes" xml:space="preserve">
          <source>The Date to set this &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt;'s date portion to.</source>
          <target state="translated">将此&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;的日期部分设置为的Date 。</target>
        </trans-unit>
        <trans-unit id="00fdc9fbd5322b30129c9d99ab189c9c104eb677" translate="yes" xml:space="preserve">
          <source>The Digest interface is the base interface which is implemented by all digests.</source>
          <target state="translated">Digest接口是基础接口,所有的摘要都是由它实现的。</target>
        </trans-unit>
        <trans-unit id="2ce0bb02d358ab6addf0222f9fba8a86b6896e28" translate="yes" xml:space="preserve">
          <source>The EH table entries are placed into the following special segments, which are concatenated by the linker.</source>
          <target state="translated">EH表的条目被放置在以下特殊段中,由链接器连接。</target>
        </trans-unit>
        <trans-unit id="89d37e362d131df02b90f0756029490076b33ab7" translate="yes" xml:space="preserve">
          <source>The EXEC state will be set for any fiber that is currently executing.</source>
          <target state="translated">当前正在执行的任何光纤都将设置EXEC状态。</target>
        </trans-unit>
        <trans-unit id="1ccc5057903fdcfbcc510be952b9d5d37edada1d" translate="yes" xml:space="preserve">
          <source>The Emscripten platform</source>
          <target state="translated">Emscripten平台</target>
        </trans-unit>
        <trans-unit id="b55fb20708d967172c74318116b38ef62263da2d" translate="yes" xml:space="preserve">
          <source>The Epiphany architecture</source>
          <target state="translated">Epiphany架构</target>
        </trans-unit>
        <trans-unit id="40b8a913038e25b6c9bffa97642d1772e1aab6db" translate="yes" xml:space="preserve">
          <source>The Error Handling Problem</source>
          <target state="translated">错误处理问题</target>
        </trans-unit>
        <trans-unit id="eaf7066f86536efb6667615a8c705264f2359588" translate="yes" xml:space="preserve">
          <source>The Executable and Linkable Format v1</source>
          <target state="translated">可执行和可链接格式v1</target>
        </trans-unit>
        <trans-unit id="a8995e2abee214cdd0937cb4114af84984101e63" translate="yes" xml:space="preserve">
          <source>The Executable and Linkable Format v2</source>
          <target state="translated">可执行和可链接格式v2</target>
        </trans-unit>
        <trans-unit id="b797d89bcc3a1d38587d03c438f6923075c38d2a" translate="yes" xml:space="preserve">
          <source>The FE_INEXACT and FE_OVERFLOW exceptions will be raised if x is finite and the function result is infinite. The FE_INEXACT and FE_UNDERFLOW exceptions will be raised if the function value is subnormal, and x is not equal to y.</source>
          <target state="translated">如果x是有限的,并且函数结果是无限的,那么FE_INEXACT和FE_OVERFLOW异常将被引发。如果函数值是次正态的,并且x不等于y,则会引发FE_INEXACT和FE_UNDERFLOW异常。</target>
        </trans-unit>
        <trans-unit id="2cc30ae8daa2c51e73b2400207e079f98f496883" translate="yes" xml:space="preserve">
          <source>The FPU control word must be preserved across function calls.</source>
          <target state="translated">FPU控制字必须在函数调用中保留。</target>
        </trans-unit>
        <trans-unit id="fa883c84fbc6dfcd4baaa0ba51f4b62fb823c921" translate="yes" xml:space="preserve">
          <source>The FPU stack must be empty when calling a function.</source>
          <target state="translated">调用函数时,FPU栈必须为空。</target>
        </trans-unit>
        <trans-unit id="66be60482d61ed5145b549ed903a83bb0c71ea95" translate="yes" xml:space="preserve">
          <source>The FQDN corresponding to this &lt;code&gt;Address&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if the host name did not resolve.</source>
          <target state="translated">与此 &lt;code&gt;Address&lt;/code&gt; 对应的FQDN；如果主机名未解析，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d41f60329bdc4eca1fcd11caa66e4edfbd09ff0" translate="yes" xml:space="preserve">
          <source>The FQDN corresponding to this &lt;code&gt;InternetAddress&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if the host name did not resolve.</source>
          <target state="translated">与此 &lt;code&gt;InternetAddress&lt;/code&gt; 对应的FQDN ，如果主机名未解析，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d604d40fa57017daad3764bad77115c1ca0fdd67" translate="yes" xml:space="preserve">
          <source>The Free Tree allocator, stackable on top of any other allocator, bears similarity with the free list allocator. Instead of a singly-linked list of previously freed blocks, it maintains a binary search tree. This allows the Free Tree allocator to manage blocks of arbitrary lengths and search them efficiently.</source>
          <target state="translated">自由树分配器,可以堆叠在任何其他分配器之上,与自由列表分配器有相似之处。它不是一个单一链接的先前释放的块的列表,而是维护一个二进制搜索树。这使得自由树分配器可以管理任意长度的块,并有效地搜索它们。</target>
        </trans-unit>
        <trans-unit id="66f9b21030c9cfea4f858014e8954ebf1f3aae2a" translate="yes" xml:space="preserve">
          <source>The GC does not know about threads that were created by directly calling the OS/C runtime thread creation APIs and D threads that were detached from the D runtime after creation. Such threads will not be paused for a GC collection, and the GC might not detect references to GC allocated data held by them. This can cause memory corruption. There are several ways to resolve this issue:</source>
          <target state="translated">GC不知道通过直接调用OS/C运行时线程创建API创建的线程和创建后脱离D运行时的D线程。这样的线程不会因为GC集合而暂停,GC可能不会检测到它们所持有的GC分配数据的引用。这可能导致内存损坏。有几种方法可以解决这个问题。</target>
        </trans-unit>
        <trans-unit id="09265af251af541f24fa02df354e6c627eeab43b" translate="yes" xml:space="preserve">
          <source>The GC is a conservative mark-and-sweep collector. It only runs a collection cycle when an allocation is requested of it, never otherwise. Hence, if the program is not doing allocations, there will be no GC collection pauses. The pauses occur because all threads the GC knows about are halted so the threads' stacks and registers can be scanned for references to GC allocated data.</source>
          <target state="translated">GC是一个保守的标记和扫描收集器。它只在有分配请求时才运行一个收集周期,其他时候绝不运行。因此,如果程序不进行分配,就不会出现GC收集暂停。暂停的发生是因为GC知道的所有线程都被停止了,这样线程的堆栈和寄存器就可以扫描对GC分配数据的引用。</target>
        </trans-unit>
        <trans-unit id="3621ad3c024741748106435d6839670def09513e" translate="yes" xml:space="preserve">
          <source>The GC works by:</source>
          <target state="translated">理事会的工作方式是:</target>
        </trans-unit>
        <trans-unit id="01be7ac14383dc55322950a93747b509b1d25d34" translate="yes" xml:space="preserve">
          <source>The Gamma function, &amp;Gamma;(x)</source>
          <target state="translated">伽玛函数&amp;Gamma;（x）</target>
        </trans-unit>
        <trans-unit id="7f9dd1ba3610a4fa3692ac332748a174db7a2c97" translate="yes" xml:space="preserve">
          <source>The General Idea</source>
          <target state="translated">总体思路</target>
        </trans-unit>
        <trans-unit id="09c260551ce83481dd94ee562ae20c29d2cbfbcd" translate="yes" xml:space="preserve">
          <source>The HOLD state applies to any fiber that is suspended and ready to be called.</source>
          <target state="translated">HOLD状态适用于任何暂停并准备调用的光纤。</target>
        </trans-unit>
        <trans-unit id="f79c18f74d62562ad1f7c03592165873d3b1261e" translate="yes" xml:space="preserve">
          <source>The HP PA-RISC architecture, 32-bit</source>
          <target state="translated">HP PA-RISC架构,32位</target>
        </trans-unit>
        <trans-unit id="7286f6510b88f99f7add4a6c2608a7eee35a2efd" translate="yes" xml:space="preserve">
          <source>The HP PA-RISC architecture, 64-bit</source>
          <target state="translated">HP PA-RISC架构,64位</target>
        </trans-unit>
        <trans-unit id="5270e504f2e810bcb80b698fc095abb55c5262a9" translate="yes" xml:space="preserve">
          <source>The HTTP status code</source>
          <target state="translated">HTTP状态码</target>
        </trans-unit>
        <trans-unit id="00d3a26093b532d414271679dbec9e6e2a73f34f" translate="yes" xml:space="preserve">
          <source>The HTTP status code.</source>
          <target state="translated">HTTP状态码。</target>
        </trans-unit>
        <trans-unit id="7122ee727a4a9c43a0c4b374f8af52b6a3d4cb29" translate="yes" xml:space="preserve">
          <source>The Haiku operating system</source>
          <target state="translated">Haiku操作系统</target>
        </trans-unit>
        <trans-unit id="754ea5395a39abae7ed60f21d5519e88e6165ab7" translate="yes" xml:space="preserve">
          <source>The IPv4 address to resolve, in host byte order.</source>
          <target state="translated">要解析的 IPv4 地址,按主机字节顺序排列。</target>
        </trans-unit>
        <trans-unit id="0b97447540254f088f748027ca72f36ef505114e" translate="yes" xml:space="preserve">
          <source>The IPv6 address contains an illegal group of characters</source>
          <target state="translated">IPv6地址包含一组非法字符</target>
        </trans-unit>
        <trans-unit id="939c03178f2358d0df8918d3f727b4b5275338a9" translate="yes" xml:space="preserve">
          <source>The IPv6 address has too many groups</source>
          <target state="translated">IPv6地址有太多的组</target>
        </trans-unit>
        <trans-unit id="b524ba697022923dfd3280c242c2f5c008ed3014" translate="yes" xml:space="preserve">
          <source>The IPv6 literal address contains the wrong number of groups</source>
          <target state="translated">IPv6字面地址包含错误的组数。</target>
        </trans-unit>
        <trans-unit id="e504cc6edc640db7967795f40b8ee6b3c54fc358" translate="yes" xml:space="preserve">
          <source>The IPv6 literal address contains too many :: sequences</source>
          <target state="translated">IPv6字面地址包含太多的 ::序列。</target>
        </trans-unit>
        <trans-unit id="4484ea847d299a869e106746e76b93aab4ed4c63" translate="yes" xml:space="preserve">
          <source>The ISO 8601 week and year of the year that this &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; is in.</source>
          <target state="translated">此&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;所在的ISO 8601的星期和年份。</target>
        </trans-unit>
        <trans-unit id="32301a3821496f197f80c8f798e0ea4f8cc4adc2" translate="yes" xml:space="preserve">
          <source>The ISO 8601 week of the year that this &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; is in.</source>
          <target state="translated">此&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;所在的一年中的ISO 8601星期。</target>
        </trans-unit>
        <trans-unit id="f553bfd947d975047033c96897725e1b54f28cb8" translate="yes" xml:space="preserve">
          <source>The ISO 8601 week of the year that this &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; is in.</source>
          <target state="translated">此&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;所在的一年中的ISO 8601 。</target>
        </trans-unit>
        <trans-unit id="609c718075ac3c5f30e12392b88a12278c90c113" translate="yes" xml:space="preserve">
          <source>The ISO 8601 week of the year that this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; is in.</source>
          <target state="translated">&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;所在的一年中的ISO 8601 。</target>
        </trans-unit>
        <trans-unit id="5d4b2d1662b082964162c97fb5d0dcbe255cddc9" translate="yes" xml:space="preserve">
          <source>The Intel mappings are:</source>
          <target state="translated">英特尔的映射是。</target>
        </trans-unit>
        <trans-unit id="4e12f496455b58ad8f60123b3271f9b244d4d784" translate="yes" xml:space="preserve">
          <source>The Itanium architecture (64-bit)</source>
          <target state="translated">Itanium架构(64位</target>
        </trans-unit>
        <trans-unit id="eafe9f7a037c5e67f3da70a6b91c37b61b30b815" translate="yes" xml:space="preserve">
          <source>The LARGE version of the standard POSTFIELDSIZE option</source>
          <target state="translated">标准POSTFIELDSIZE选项的LARGE版本。</target>
        </trans-unit>
        <trans-unit id="9134d1977034f57d1f687c818551bb851d95680b" translate="yes" xml:space="preserve">
          <source>The MIPS &lt;code&gt;hard-float&lt;/code&gt; ABI</source>
          <target state="translated">MIPS &lt;code&gt;hard-float&lt;/code&gt; ABI</target>
        </trans-unit>
        <trans-unit id="0886aaa5bcac19d0d348397019786e1f00a24cbe" translate="yes" xml:space="preserve">
          <source>The MIPS &lt;code&gt;soft-float&lt;/code&gt; ABI</source>
          <target state="translated">MIPS &lt;code&gt;soft-float&lt;/code&gt; ABI</target>
        </trans-unit>
        <trans-unit id="3c9add972d2d135b53fbf340e836225309a3b85b" translate="yes" xml:space="preserve">
          <source>The MIPS EABI</source>
          <target state="translated">MIPS EABI</target>
        </trans-unit>
        <trans-unit id="61483ec276697778dec9b8f31845f4c0b43841b3" translate="yes" xml:space="preserve">
          <source>The MIPS N32 ABI</source>
          <target state="translated">MIPS N32 ABI</target>
        </trans-unit>
        <trans-unit id="e879e3a8741fac0b79bfe9a6fa792af183d21455" translate="yes" xml:space="preserve">
          <source>The MIPS N64 ABI</source>
          <target state="translated">MIPS N64 ABI</target>
        </trans-unit>
        <trans-unit id="d4e8f04e3b51f7a111a0b6bd1b36a079abe2873b" translate="yes" xml:space="preserve">
          <source>The MIPS O32 ABI</source>
          <target state="translated">MIPS O32 ABI</target>
        </trans-unit>
        <trans-unit id="bef14bbb878c09e8ee5dc32d3da00729ccb93501" translate="yes" xml:space="preserve">
          <source>The MIPS O64 ABI</source>
          <target state="translated">MIPS O64 ABI</target>
        </trans-unit>
        <trans-unit id="0fc57735dcd8256e5e59ac6395a31b083346ff43" translate="yes" xml:space="preserve">
          <source>The MIPS architecture, 32-bit</source>
          <target state="translated">MIPS架构,32位</target>
        </trans-unit>
        <trans-unit id="17e1b519534bdd70840a0f61f4f110bf2c163b10" translate="yes" xml:space="preserve">
          <source>The MIPS architecture, 64-bit</source>
          <target state="translated">MIPS架构,64位</target>
        </trans-unit>
        <trans-unit id="c3e4c70686693b89b9dd6f86ff1c297d3c0e0be4" translate="yes" xml:space="preserve">
          <source>The MSP430 architecture</source>
          <target state="translated">MSP430架构</target>
        </trans-unit>
        <trans-unit id="356126ab1aa2384bb41e6bc4ebe8dbef50cceecb" translate="yes" xml:space="preserve">
          <source>The MinGW environment</source>
          <target state="translated">MinGW环境</target>
        </trans-unit>
        <trans-unit id="0f46aebab81731ecc7971e216c920d74155e16b2" translate="yes" xml:space="preserve">
          <source>The Mutex that will be associated with this condition. It will be locked prior to any operation on the condition, and so in some cases a Scheduler may need to hold this reference and unlock the mutex before yielding execution to another logical thread.</source>
          <target state="translated">将与这个条件相关联的Mutex。在对条件进行任何操作之前,它将被锁定,所以在某些情况下,调度器可能需要持有这个引用,并在将执行交给另一个逻辑线程之前解锁Mutex。</target>
        </trans-unit>
        <trans-unit id="a87cbf0b095ac8eab76a631ffec330584de63e97" translate="yes" xml:space="preserve">
          <source>The N parameter indicate the size of the hash in bits. The parameter P specify the polynomial to be used for reduction.</source>
          <target state="translated">参数N表示哈希值的大小,单位为比特。参数P指定了用于还原的多项式。</target>
        </trans-unit>
        <trans-unit id="e2508e2f024c9fbc95d61d6996efa639c0414a7f" translate="yes" xml:space="preserve">
          <source>The Nvidia Parallel Thread Execution (PTX) architecture, 32-bit</source>
          <target state="translated">Nvidia并行线程执行(PTX)架构,32位。</target>
        </trans-unit>
        <trans-unit id="43afd253995cf155cd46e72aca1c4d14f27edda9" translate="yes" xml:space="preserve">
          <source>The Nvidia Parallel Thread Execution (PTX) architecture, 64-bit</source>
          <target state="translated">Nvidia Parallel Thread Execution (PTX)架构,64位。</target>
        </trans-unit>
        <trans-unit id="6b89001c9eee7cbf1eb78ebd06f2cdba52573b8f" translate="yes" xml:space="preserve">
          <source>The ODBC library itself not a part of the &lt;code&gt;dmd&lt;/code&gt; distribution (and typically not a part of the distribution packages of other compilers such as &lt;code&gt;gdc&lt;/code&gt; and &lt;code&gt;ldc&lt;/code&gt;). To use ODBC, install it per the vendor- and platform-specific instructions and then use the appropriate command-line flags (e.g. for dmd, &lt;code&gt;-L-lodbc&lt;/code&gt; on Posix and &lt;code&gt;-Lodbc32.lib&lt;/code&gt; on Windows) to link with the ODBC library. On Windows, using &lt;code&gt;pragma(lib, &quot;odbc32&quot;)&lt;/code&gt; in D code at top level is also appropriate.</source>
          <target state="translated">ODBC库本身不是 &lt;code&gt;dmd&lt;/code&gt; 分发的一部分（通常也不是其他编译器（例如 &lt;code&gt;gdc&lt;/code&gt; 和 &lt;code&gt;ldc&lt;/code&gt; ）的分发软件包的一部分）。要使用ODBC，请按照供应商和特定于平台的说明进行安装，然后使用适当的命令行标志（例如dmd，Posix 上的 &lt;code&gt;-L-lodbc&lt;/code&gt; 和Windows 上的 &lt;code&gt;-Lodbc32.lib&lt;/code&gt; ）与ODBC库链接。在Windows上，最好在D代码中使用 &lt;code&gt;pragma(lib, &quot;odbc32&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3cfee8a3cdd0f5ece05fc4719284d9ca35cb1ece" translate="yes" xml:space="preserve">
          <source>The ORDER BY clause</source>
          <target state="translated">ORDER BY条款</target>
        </trans-unit>
        <trans-unit id="e14ee41921816523befa01909d94c5e1726b3657" translate="yes" xml:space="preserve">
          <source>The OS that the program was compiled for.</source>
          <target state="translated">程序所编译的操作系统。</target>
        </trans-unit>
        <trans-unit id="acb9d25ece84bce22fb8212a22f84954077a7a34" translate="yes" xml:space="preserve">
          <source>The ObjectiveC interface recognizes &lt;code&gt;@property&lt;/code&gt; setter functions as special and modifies them accordingly.</source>
          <target state="translated">ObjectiveC接口将 &lt;code&gt;@property&lt;/code&gt; setter函数识别为特殊函数，并对其进行相应的修改。</target>
        </trans-unit>
        <trans-unit id="9d3e4b21e5a04eb6fbe9f2397109b2139a475f5c" translate="yes" xml:space="preserve">
          <source>The POSIX &lt;code&gt;tempDir&lt;/code&gt; algorithm is inspired by Python's &lt;a href=&quot;http://docs.python.org/library/tempfile.html#tempfile.tempdir&quot;&gt;&lt;code&gt;tempfile.tempdir&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">POSIX &lt;code&gt;tempDir&lt;/code&gt; 算法受Python的&lt;a href=&quot;http://docs.python.org/library/tempfile.html#tempfile.tempdir&quot;&gt; &lt;code&gt;tempfile.tempdir&lt;/code&gt; &lt;/a&gt;启发。</target>
        </trans-unit>
        <trans-unit id="1c563a1ca0669b82c82cd26bf7fb6686fa6636d8" translate="yes" xml:space="preserve">
          <source>The POSIX &lt;code&gt;tempDir&lt;/code&gt; algorithm is inspired by Python's &lt;a href=&quot;https://docs.python.org/library/tempfile.html#tempfile.tempdir&quot;&gt;&lt;code&gt;tempfile.tempdir&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d8872f92578235b233b51b76c476d7fea1f8da" translate="yes" xml:space="preserve">
          <source>The PermissiveVisitor overrides the root AST nodes with empty visiting methods.</source>
          <target state="translated">PermissiveVisitor覆盖了根AST节点的空访问方法。</target>
        </trans-unit>
        <trans-unit id="b4f6f3e26f3ff3126b16496a184e46c78d9cba02" translate="yes" xml:space="preserve">
          <source>The PlayStation 4 platform</source>
          <target state="translated">PlayStation 4平台</target>
        </trans-unit>
        <trans-unit id="70399824984e6ff6449a6e9c505ed7dd24f48905" translate="yes" xml:space="preserve">
          <source>The PlayStation platform</source>
          <target state="translated">PlayStation平台</target>
        </trans-unit>
        <trans-unit id="cc67c3f1b66652b129c77acf7df61ddd9416b905" translate="yes" xml:space="preserve">
          <source>The PowerPC architecture, 32-bit</source>
          <target state="translated">PowerPC架构,32位</target>
        </trans-unit>
        <trans-unit id="11d7c845ab07a5d6a42e06f125f4373f5e764a25" translate="yes" xml:space="preserve">
          <source>The PowerPC architecture, 64-bit</source>
          <target state="translated">PowerPC架构,64位</target>
        </trans-unit>
        <trans-unit id="75f5b736eefcd29872adaf37d46e108c07f8ec67" translate="yes" xml:space="preserve">
          <source>The PowerPC hard float ABI</source>
          <target state="translated">PowerPC硬浮球ABI</target>
        </trans-unit>
        <trans-unit id="2c60a35ae353caf4915f17f56e813cbc9a9912c4" translate="yes" xml:space="preserve">
          <source>The PowerPC soft float ABI</source>
          <target state="translated">PowerPC软浮球ABI</target>
        </trans-unit>
        <trans-unit id="5435e45bdc0c51d8e23529dc87ba62fac99d8b9a" translate="yes" xml:space="preserve">
          <source>The RISC-V architecture, 32-bit</source>
          <target state="translated">RISC-V架构,32位</target>
        </trans-unit>
        <trans-unit id="b9fe578ae2efbaf9e508542e117f5ee508458c96" translate="yes" xml:space="preserve">
          <source>The RISC-V architecture, 64-bit</source>
          <target state="translated">RISC-V架构,64位</target>
        </trans-unit>
        <trans-unit id="90ccc79b25ba88c383a0b919bf25a08cc0fc464c" translate="yes" xml:space="preserve">
          <source>The RTSP session identifier</source>
          <target state="translated">RTSP会话标识符</target>
        </trans-unit>
        <trans-unit id="23b016dcf33e16db8ffaf83deb1005e7587906e4" translate="yes" xml:space="preserve">
          <source>The RTSP stream URI</source>
          <target state="translated">RTSP流URI</target>
        </trans-unit>
        <trans-unit id="cd04b56dd323b56cf68cf7a1c2c623b5bbf96a33" translate="yes" xml:space="preserve">
          <source>The Range to permute. The original ordering will be lost.</source>
          <target state="translated">峦到养生。原先的订单会丢失。</target>
        </trans-unit>
        <trans-unit id="781a90481fca7ce8311f6dc9aaa241c6dbb23d12" translate="yes" xml:space="preserve">
          <source>The SPARC architecture, 32-bit</source>
          <target state="translated">SPARC架构,32位</target>
        </trans-unit>
        <trans-unit id="1034834d5e21d8f03f302305ed4219d634887791" translate="yes" xml:space="preserve">
          <source>The SPARC architecture, 64-bit</source>
          <target state="translated">SPARC架构,64位</target>
        </trans-unit>
        <trans-unit id="5f5c3aba9207be74c2868dc1673d5d4051edce52" translate="yes" xml:space="preserve">
          <source>The SPARC hard float ABI</source>
          <target state="translated">SPARC硬浮球ABI</target>
        </trans-unit>
        <trans-unit id="c02e4fc0e65c5858009152aee0c28acf93d5875b" translate="yes" xml:space="preserve">
          <source>The SPARC soft float ABI</source>
          <target state="translated">SPARC软漂ABI</target>
        </trans-unit>
        <trans-unit id="f49a391f9f9d3680aaef70c1a255c3dd843e400b" translate="yes" xml:space="preserve">
          <source>The SPARC v8+ ABI</source>
          <target state="translated">SPARC v8+ABI</target>
        </trans-unit>
        <trans-unit id="51f88ae48e3d052b49fccac8f3b93fc0fdc92beb" translate="yes" xml:space="preserve">
          <source>The SkyOS operating system</source>
          <target state="translated">SkyOS操作系统</target>
        </trans-unit>
        <trans-unit id="2332cfeec9b82b4c089b42655778df17ede056d5" translate="yes" xml:space="preserve">
          <source>The Soundex algorithm converts a word into 4 characters based on how the word sounds phonetically. The idea is that two spellings that sound alike will have the same Soundex value, which means that Soundex can be used for fuzzy matching of names.</source>
          <target state="translated">Soundex算法会根据单词的发音方式将单词转换为4个字符。这个想法是,两个听起来相似的拼写将具有相同的Soundex值,这意味着Soundex可以用于名称的模糊匹配。</target>
        </trans-unit>
        <trans-unit id="268f1657c076d3627d3dea23877501be858e04fe" translate="yes" xml:space="preserve">
          <source>The StopWatch can be reset while it's running, and resetting it while it's running will not cause it to stop.</source>
          <target state="translated">StopWatch可以在运行中重置,在运行中重置不会导致其停止。</target>
        </trans-unit>
        <trans-unit id="ef49511070e620b95e825c1c86d96261c9c95a00" translate="yes" xml:space="preserve">
          <source>The StopWatch does not have to be stopped for setTimeElapsed to be called, nor will calling it cause the StopWatch to stop.</source>
          <target state="translated">调用setTimeElapsed不需要停止StopWatch,调用它也不会导致StopWatch停止。</target>
        </trans-unit>
        <trans-unit id="b0a9b6a2bbd967f7e916f635e74331784867ef32" translate="yes" xml:space="preserve">
          <source>The StrictVisitor asserts 0 an all visiting functions in order to make sure that all the nodes are visited.</source>
          <target state="translated">StrictVisitor为了确保所有的节点都被访问,对所有的访问函数断言为0。</target>
        </trans-unit>
        <trans-unit id="38a628b9d86064e9b5321ad3bcd830e114572d5b" translate="yes" xml:space="preserve">
          <source>The SuperH architecture, 32-bit</source>
          <target state="translated">SuperH架构,32位</target>
        </trans-unit>
        <trans-unit id="766bcffdaef3f631903919b1d19fc7f6bbe507ed" translate="yes" xml:space="preserve">
          <source>The System Z architecture, 64-bit</source>
          <target state="translated">系统Z架构,64位</target>
        </trans-unit>
        <trans-unit id="60329427da56af2758e2ca1d40d12d8553a7de59" translate="yes" xml:space="preserve">
          <source>The System/390 architecture, 32-bit</source>
          <target state="translated">System/390架构,32位</target>
        </trans-unit>
        <trans-unit id="4b2f7d9d9f4c13907ce79769575d22c87fc28c16" translate="yes" xml:space="preserve">
          <source>The System/390X architecture</source>
          <target state="translated">系统/390X架构</target>
        </trans-unit>
        <trans-unit id="f3602277188b5a4b62cb2b9c0bc9fd8221ea73de" translate="yes" xml:space="preserve">
          <source>The TERM state is set when a fiber terminates. Once a fiber terminates, it must be reset before it may be called again.</source>
          <target state="translated">TERM状态是在光纤终止时设置的。一旦光纤终止,就必须在再次调用之前将其重置。</target>
        </trans-unit>
        <trans-unit id="cf15cedd50ebb05ffc304f6b6e9727e5f84f91f4" translate="yes" xml:space="preserve">
          <source>The TZ Database files and Windows' time zone information frequently do not match. Windows has many errors with regards to when DST switches occur (especially for historical dates). Also, the TZ Database files include far more time zones than Windows does. So, for accurate time zone information, use the TZ Database files with &lt;a href=&quot;#PosixTimeZone&quot;&gt;&lt;code&gt;PosixTimeZone&lt;/code&gt;&lt;/a&gt; rather than &lt;code&gt;WindowsTimeZone&lt;/code&gt;. However, because &lt;code&gt;WindowsTimeZone&lt;/code&gt; uses Windows system calls to deal with the time, it's far more likely to match the behavior of other Windows programs. Be aware of the differences when selecting a method.</source>
          <target state="translated">TZ数据库文件和Windows的时区信息经常不匹配。关于DST切换的发生时间，Windows有很多错误（尤其是历史日期）。此外，TZ数据库文件包含的时区比Windows多得多。因此，要获得准确的时区信息，请使用&lt;a href=&quot;#PosixTimeZone&quot;&gt; &lt;code&gt;PosixTimeZone&lt;/code&gt; &lt;/a&gt;而不是 &lt;code&gt;WindowsTimeZone&lt;/code&gt; 的TZ数据库文件。但是，由于 &lt;code&gt;WindowsTimeZone&lt;/code&gt; 使用Windows系统调用来处理时间，因此很可能与其他Windows程序的行为相匹配。选择方法时请注意其中的差异。</target>
        </trans-unit>
        <trans-unit id="748abfca6b1790f0685eea195232448ad41a5fc1" translate="yes" xml:space="preserve">
          <source>The TZ Database name of the desired time zone</source>
          <target state="translated">所需时区的TZ数据库名称。</target>
        </trans-unit>
        <trans-unit id="132cc31d74b99e25b094510d883e3a16e5485de5" translate="yes" xml:space="preserve">
          <source>The TZ Database name of the desired time zone.</source>
          <target state="translated">所需时区的TZ数据库名称。</target>
        </trans-unit>
        <trans-unit id="00d89e73108126666266d03f62559f8c79154621" translate="yes" xml:space="preserve">
          <source>The Tag at the start of the element being parsed. You can read this to determine the tag's name and attributes.</source>
          <target state="translated">被解析的元素开头的标记。您可以读取它来确定标签的名称和属性。</target>
        </trans-unit>
        <trans-unit id="3bca6c83fc63fdf211790976e397694f0843b940" translate="yes" xml:space="preserve">
          <source>The Throwable hierarchy uses a toString overload that takes a sink delegate to avoid GC allocations, which cannot be performed in certain error situations. Override this &lt;code&gt; toString&lt;/code&gt; method to customize the error message.</source>
          <target state="translated">Throwable层次结构使用toString重载，该重载采用接收器委托来避免GC分配，这在某些错误情况下无法执行。覆盖此 &lt;code&gt; toString&lt;/code&gt; 方法以自定义错误消息。</target>
        </trans-unit>
        <trans-unit id="3c9d356da0ae96a0d8c3d76a7a7ffe030a9facc8" translate="yes" xml:space="preserve">
          <source>The TickDuration to convert</source>
          <target state="translated">要转换的TickDuration</target>
        </trans-unit>
        <trans-unit id="9077c94c094dacf17fb2adfb8e0611d26cac59ad" translate="yes" xml:space="preserve">
          <source>The Tid of the thread for which this limit should be set.</source>
          <target state="translated">设置该限制的线程的Tid。</target>
        </trans-unit>
        <trans-unit id="273ec04a5b49ef584d98bd13fd62b3b6a4d686b4" translate="yes" xml:space="preserve">
          <source>The TransitiveVisitor implements the AST traversal logic for all AST nodes.</source>
          <target state="translated">TransitiveVisitor实现了所有AST节点的AST遍历逻辑。</target>
        </trans-unit>
        <trans-unit id="375aa2306db2f0ad24248c06c7fd81f749f9b2fc" translate="yes" xml:space="preserve">
          <source>The Transport: header to use in RTSP requests</source>
          <target state="translated">RTSP请求中使用的传输:头。</target>
        </trans-unit>
        <trans-unit id="1e2dcc313af4acaeeb4cf0d38aa3925c59b78d65" translate="yes" xml:space="preserve">
          <source>The TypeInfo instance for the object that failed finalization.</source>
          <target state="translated">失败的对象的TypeInfo实例。</target>
        </trans-unit>
        <trans-unit id="e267c9583ddc10478f4a6152d7e5f3bb902c9328" translate="yes" xml:space="preserve">
          <source>The URL to specify the location of the resource.</source>
          <target state="translated">指定资源位置的URL。</target>
        </trans-unit>
        <trans-unit id="6e8939f6e58f5cd6da0eecfd60bdd7601fb2d72d" translate="yes" xml:space="preserve">
          <source>The UTC time for which to get the offset from UTC for this time zone.</source>
          <target state="translated">获取该时区与UTC偏移量的UTC时间。</target>
        </trans-unit>
        <trans-unit id="baa72debfc3513a96e5ab531e18bfe7afe12a6e6" translate="yes" xml:space="preserve">
          <source>The UTC time that needs to be adjusted to this time zone's time.</source>
          <target state="translated">需要调整为本时区时间的UTC时间。</target>
        </trans-unit>
        <trans-unit id="f66b265ec18c3d9162f9d2f9c326e937acb66094" translate="yes" xml:space="preserve">
          <source>The UTC time that needs to be checked for DST in this time zone.</source>
          <target state="translated">需要检查这个时区的DST的UTC时间。</target>
        </trans-unit>
        <trans-unit id="d87edef215a8752e6ecf907380fee61fdf55f0b6" translate="yes" xml:space="preserve">
          <source>The Unicode Standard specifies four normalization forms. Informally, two of these forms are defined by maximal decomposition of equivalent sequences, and two of these forms are defined by maximal</source>
          <target state="translated">Unicode标准规定了四种归一化形式。在非正式的情况下,其中两种形式是由等价序列的最大分解定义的,而其中两种形式是由最大的</target>
        </trans-unit>
        <trans-unit id="33f138b95a9dfb5155c8e0a90293fab0aba64c92" translate="yes" xml:space="preserve">
          <source>The Unicode code space is the range of code points [0x000000,0x10FFFF] except the UTF-16 surrogate pairs in the range [0xD800,0xDFFF]</source>
          <target state="translated">Unicode代码空间是代码点[0x000000,0x10FFFF]的范围,除了UTF-16代用对的范围[0xD800,0xDFFF]。</target>
        </trans-unit>
        <trans-unit id="b8ad7131caaca8a595f3745023534a437f4e5026" translate="yes" xml:space="preserve">
          <source>The Unicode standard describes a set of algorithms that depend on having the ability to quickly look up various properties of a code point. Given the the codespace of about 1 million &lt;a href=&quot;#Code%20point&quot;&gt;code points&lt;/a&gt;, it is not a trivial task to provide a space-efficient solution for the multitude of properties.</source>
          <target state="translated">Unicode标准描述了一组算法，这些算法取决于能否快速查找代码点的各种属性。给定约100万个&lt;a href=&quot;#Code%20point&quot;&gt;代码点的代码&lt;/a&gt;空间，为众多属性提供节省空间的解决方案并不是一件容易的事。</target>
        </trans-unit>
        <trans-unit id="632f1d4d9869b7133b4ab86d451bf673c847817f" translate="yes" xml:space="preserve">
          <source>The WebAssembly System Interface</source>
          <target state="translated">WebAssembly系统接口</target>
        </trans-unit>
        <trans-unit id="ffe88cf3bb8bf5313b7bf6ff81667f38d4331b4a" translate="yes" xml:space="preserve">
          <source>The WebAssembly virtual ISA (instruction set architecture), 32-bit</source>
          <target state="translated">WebAssembly虚拟ISA(指令集架构),32位。</target>
        </trans-unit>
        <trans-unit id="7218859784e706d4ce7421f54be346d3a0c8a1e1" translate="yes" xml:space="preserve">
          <source>The Windows convention is distinct from the C convention only on Win32 platforms, where it is equivalent to the &lt;a href=&quot;https://en.wikipedia.org/wiki/X86_calling_conventions&quot;&gt;stdcall&lt;/a&gt; convention.</source>
          <target state="translated">Windows约定仅在Win32平台上与C约定不同，后者等效于&lt;a href=&quot;https://en.wikipedia.org/wiki/X86_calling_conventions&quot;&gt;stdcall&lt;/a&gt;约定。</target>
        </trans-unit>
        <trans-unit id="49f93641b1c1925cc9dd3d11b2fd5da7bb48b174" translate="yes" xml:space="preserve">
          <source>The Windows directory.</source>
          <target state="translated">Windows目录。</target>
        </trans-unit>
        <trans-unit id="c2f11ed3900be0870fe44d5da590840874b32a51" translate="yes" xml:space="preserve">
          <source>The Xth day of the Gregorian Calendar that the constructed &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; will be for.</source>
          <target state="translated">公历的第X天，即为其构造&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="078b1c7105fbdd3c92634660aca6a999419f2df5" translate="yes" xml:space="preserve">
          <source>The Xth day of the Gregorian Calendar that this &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; is on.</source>
          <target state="translated">此&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;所在的公历的第X天。</target>
        </trans-unit>
        <trans-unit id="6a538d97dc5e4f2c73e76335c5f71bdb3a58dff3" translate="yes" xml:space="preserve">
          <source>The Xth day of the Gregorian Calendar that this &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; is on.</source>
          <target state="translated">此&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;启用的公历的第X天。</target>
        </trans-unit>
        <trans-unit id="35dba2f96bb894868d65591da08ba057a166fba5" translate="yes" xml:space="preserve">
          <source>The Xth day of the Gregorian Calendar that this &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; is on. Setting this property does not affect the time portion of &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;启用的公历的第X天。设置此属性不会影响&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;的时间部分。</target>
        </trans-unit>
        <trans-unit id="fc06a78f3518f5838e5230bd6dc9922cf974ff7b" translate="yes" xml:space="preserve">
          <source>The Xth day of the Gregorian Calendar that this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; is on.</source>
          <target state="translated">此&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;打开的公历的第X天。</target>
        </trans-unit>
        <trans-unit id="4075f06941052a1ee790fc11b1f2d7e20edf61db" translate="yes" xml:space="preserve">
          <source>The Xth day of the Gregorian Calendar that this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; is on. Setting this property does not affect the time portion of &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;打开的公历的第X天。设置此属性不会影响&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;的时间部分。</target>
        </trans-unit>
        <trans-unit id="ad98437030654ff114036805bc5d6ac8a441a5fb" translate="yes" xml:space="preserve">
          <source>The [] is shorthand for a slice of the entire array. For example, the assignments to b:</source>
          <target state="translated">[]是整个数组的一个片断的简写。例如,对b的赋值。</target>
        </trans-unit>
        <trans-unit id="9b28a421f1b16c658e8f7a2c5614f59f19a2b533" translate="yes" xml:space="preserve">
          <source>The abbreviation for the time zone during DST.</source>
          <target state="translated">DST期间时区的缩写。</target>
        </trans-unit>
        <trans-unit id="0c94ff584e3706234c838771e26f1f43c96e3d6d" translate="yes" xml:space="preserve">
          <source>The abbreviation for the time zone during std time.</source>
          <target state="translated">标准时间内时区的缩写。</target>
        </trans-unit>
        <trans-unit id="0a6c7a99e42d574e059c43a16588f2b20bec46f2" translate="yes" xml:space="preserve">
          <source>The ability to cast away immutable-correctness is necessary in some cases where the static typing is incorrect and not fixable, such as when referencing code in a library one cannot change. Casting is, as always, a blunt and effective instrument, and when using it to cast away immutable-correctness, one must assume the responsibility to ensure the immutability of the data, as the compiler will no longer be able to statically do so.</source>
          <target state="translated">在某些情况下,当静态键入不正确且无法修复时,例如在一个无法改变的库中引用代码时,抛出不可改变的正确性的能力是必要的。Casting一如既往地是一种钝化而有效的工具,当使用它来抛弃不可变-正确性时,必须承担起确保数据不可变的责任,因为编译器将无法再静态地做到这一点。</target>
        </trans-unit>
        <trans-unit id="a174b7c1633f2b2750afdacf56529479a613162e" translate="yes" xml:space="preserve">
          <source>The above allocation can also be written as:</source>
          <target state="translated">上述分配也可以写成:</target>
        </trans-unit>
        <trans-unit id="680ec1f70249732d24260b5f89033a1cd3b8827b" translate="yes" xml:space="preserve">
          <source>The above outputs something along the lines of:</source>
          <target state="translated">上述输出内容大致如下:</target>
        </trans-unit>
        <trans-unit id="0d7dd549d6036f484842f3fd47adff55e907a5d5" translate="yes" xml:space="preserve">
          <source>The above will generate the following documentation:</source>
          <target state="translated">以上将生成以下文档。</target>
        </trans-unit>
        <trans-unit id="4bf0047ab0e970e724128a48338bb914be2e1061" translate="yes" xml:space="preserve">
          <source>The above would generate the following output:</source>
          <target state="translated">以上将产生以下输出。</target>
        </trans-unit>
        <trans-unit id="208ff0335cf2cb5e612c95ae6f246572f3c94853" translate="yes" xml:space="preserve">
          <source>The absence of a read method means that the property is write-only. The absence of a write method means that the property is read-only. Multiple write methods can exist; the correct one is selected using the usual function overloading rules.</source>
          <target state="translated">没有读方法意味着该属性是只写的。没有写方法意味着该属性是只读的。可以有多种写法;正确的写法是用通常的函数重载规则选择的。</target>
        </trans-unit>
        <trans-unit id="bbd1050f43721b458863affe5a5a5e861a667b8a" translate="yes" xml:space="preserve">
          <source>The absolute value (or modulus) of &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;z&lt;/code&gt; 的绝对值（或模量）。</target>
        </trans-unit>
        <trans-unit id="fe0c6e37bd2f8400a5d77c17be3e831a3fea0f03" translate="yes" xml:space="preserve">
          <source>The absolute value of the number. If floating-point or integral, the return type will be the same as the input.</source>
          <target state="translated">数字的绝对值。如果是浮点或积分,返回类型与输入相同。</target>
        </trans-unit>
        <trans-unit id="d56c6a5e3d224c87e43181c1736dec49b0ab78e1" translate="yes" xml:space="preserve">
          <source>The absolute value of the number. If floating-point or integral, the return type will be the same as the input;</source>
          <target state="translated">数字的绝对值。如果是浮点或积分,返回类型与输入相同。</target>
        </trans-unit>
        <trans-unit id="3188af20fea3638f7caeebf06aec7601348a4f70" translate="yes" xml:space="preserve">
          <source>The absolute value of x.</source>
          <target state="translated">x的绝对值。</target>
        </trans-unit>
        <trans-unit id="9f934ce1770ad6d4aa496d65f6bc75a1edc1d979" translate="yes" xml:space="preserve">
          <source>The abstract characters encoded (see Encoded character) are known as Unicode abstract characters.</source>
          <target state="translated">编码后的抽象字符(见编码字符)称为Unicode抽象字符。</target>
        </trans-unit>
        <trans-unit id="6c9de70b08239cfc0c4a2733279e0d13dac73829" translate="yes" xml:space="preserve">
          <source>The accepted formats for time zone offsets are +HH, -HH, +HH:MM, and -HH:MM.</source>
          <target state="translated">接受的时区偏移格式是+HH、-HH、+HH:MM和-HH:MM。</target>
        </trans-unit>
        <trans-unit id="dd25098e5d82952dd16830d9163303d08a3443ae" translate="yes" xml:space="preserve">
          <source>The accepted formats for time zone offsets are +HH, -HH, +HHMM, and -HHMM.</source>
          <target state="translated">接受的时区偏移格式是+HH、-HH、+HHMM和-HHMM。</target>
        </trans-unit>
        <trans-unit id="2d7573dbe1c2c2ccc6dca31634fec877c6b4f215" translate="yes" xml:space="preserve">
          <source>The accumulated result as a single value for single function and as a tuple of values for multiple functions</source>
          <target state="translated">累积的结果是单个函数的单一值和多个函数的元组值。</target>
        </trans-unit>
        <trans-unit id="4db4cabffe5c361c6e601148a12482be66dbf628" translate="yes" xml:space="preserve">
          <source>The actual format specifier, &lt;code&gt;'s'&lt;/code&gt; by default.</source>
          <target state="translated">实际的格式说明符，默认为 &lt;code&gt;'s'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5f83ea5a9cae8cf7d4f8c99a06116a8136c6d2a" translate="yes" xml:space="preserve">
          <source>The actual number of bytes reserved or zero on error.</source>
          <target state="translated">实际保留的字节数,出错时为零。</target>
        </trans-unit>
        <trans-unit id="c94429a916344c916935b70d1849630909c5126c" translate="yes" xml:space="preserve">
          <source>The actual type returned by finish depends on the digest implementation. &lt;code&gt;ubyte[16]&lt;/code&gt; is just used as an example. It is guaranteed that the type is a static array of ubytes.</source>
          <target state="translated">finish返回的实际类型取决于摘要实现。 &lt;code&gt;ubyte[16]&lt;/code&gt; 仅作为示例。确保类型是一个静态的ubyte数组。</target>
        </trans-unit>
        <trans-unit id="f965eddb5678c40e85f299ebf4bff7ff25ff635d" translate="yes" xml:space="preserve">
          <source>The additional letterCase parameter can be used to specify the case of the output data. By default the output is in upper case. To change it to the lower case pass LetterCase.lower as a parameter.</source>
          <target state="translated">附加的 letterCase 参数可以用来指定输出数据的大小写。默认情况下,输出数据是大写的。要将其改为小写,请将LetterCase.lower作为参数。</target>
        </trans-unit>
        <trans-unit id="a85f612c9ea70b654d6d0689b427262b594b828d" translate="yes" xml:space="preserve">
          <source>The additional order parameter can be used to specify the order of the input data. By default the data is processed in increasing order, starting at index 0. To process it in the opposite order, pass Order.decreasing as a parameter.</source>
          <target state="translated">附加的顺序参数可以用来指定输入数据的顺序。默认情况下,数据的处理顺序是递增的,从索引0开始。要以相反的顺序处理数据,可以传递Order.decreasing作为参数。</target>
        </trans-unit>
        <trans-unit id="5957f81d5474beefa7065939b0cc1473131ad62e" translate="yes" xml:space="preserve">
          <source>The address cannot end with a backslash</source>
          <target state="translated">地址不能以反斜杠结束。</target>
        </trans-unit>
        <trans-unit id="884473b76201e4868789c53f5ad5333ae6e63e04" translate="yes" xml:space="preserve">
          <source>The address contains a character that is not allowed in a quoted pair</source>
          <target state="translated">地址包含一个不允许在引号对中出现的字符。</target>
        </trans-unit>
        <trans-unit id="8c9a5ff6c7f32f248ada10269768a9f567d3a6d9" translate="yes" xml:space="preserve">
          <source>The address is only valid according to the broad definition of RFC 5322. It is otherwise invalid</source>
          <target state="translated">该地址只有根据RFC 5322的广义定义才有效。否则无效。</target>
        </trans-unit>
        <trans-unit id="612f02a9ea5a91c0f5d3bab0d248e35b8e08d288" translate="yes" xml:space="preserve">
          <source>The address may not contain consecutive dots</source>
          <target state="translated">地址不能包含连续的点</target>
        </trans-unit>
        <trans-unit id="f2ec315916ee72c713d94760053a490c4200261c" translate="yes" xml:space="preserve">
          <source>The address of the destination variable.</source>
          <target state="translated">目标变量的地址。</target>
        </trans-unit>
        <trans-unit id="eb5d226a327a58219779ec6f85c14805039c0902" translate="yes" xml:space="preserve">
          <source>The address of the stack bottom.</source>
          <target state="translated">栈底的地址。</target>
        </trans-unit>
        <trans-unit id="6d486d434e5db9fa409133a5d2911ad3ba926ad2" translate="yes" xml:space="preserve">
          <source>The address of the stack top.</source>
          <target state="translated">栈顶的地址。</target>
        </trans-unit>
        <trans-unit id="573e0fdfafaaaa6327f4d3ad798c62e0ac496505" translate="yes" xml:space="preserve">
          <source>The address of the value to compare, and receives the prior value of &lt;code&gt;here&lt;/code&gt; as output.</source>
          <target state="translated">要比较的值的地址，并接收 &lt;code&gt;here&lt;/code&gt; 的优先值作为输出。</target>
        </trans-unit>
        <trans-unit id="100ae837312c2864dadfce5bae741844606a1fdc" translate="yes" xml:space="preserve">
          <source>The aggregate it is a member of, or null.</source>
          <target state="translated">它是一个成员的集合,或者为空。</target>
        </trans-unit>
        <trans-unit id="99842dfccac0d88c0dc49fd2be32200c326ae7be" translate="yes" xml:space="preserve">
          <source>The aggregate itself must not be resized, reallocated, free'd, reassigned or destructed while the foreach is iterating over the elements.</source>
          <target state="translated">当foreach在元素上迭代时,集合本身不能被调整大小、重新分配、free'd、重新分配或销毁。</target>
        </trans-unit>
        <trans-unit id="6dd852d4a388be331d9744743f8822707966e7c3" translate="yes" xml:space="preserve">
          <source>The aggregate must be loop invariant, meaning that elements to the aggregate cannot be added or removed from it in the &lt;a href=&quot;#NoScopeNonEmptyStatement&quot;&gt;&lt;i&gt;NoScopeNonEmptyStatement&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">聚合必须是循环不变的，这意味着无法在&lt;a href=&quot;#NoScopeNonEmptyStatement&quot;&gt;&lt;i&gt;NoScopeNonEmptyStatement中&lt;/i&gt;&lt;/a&gt;添加或删除聚合中的&lt;i&gt;元素&lt;/i&gt;。</target>
        </trans-unit>
        <trans-unit id="72fbef103c621727ad68ac10218864ed5c7ca8cf" translate="yes" xml:space="preserve">
          <source>The aggregate type or module to search</source>
          <target state="translated">要搜索的集合类型或模块</target>
        </trans-unit>
        <trans-unit id="a40360593993a6e7d8a1dd4dee1078680e89ae6d" translate="yes" xml:space="preserve">
          <source>The aggregate type to search</source>
          <target state="translated">要搜索的集合类型</target>
        </trans-unit>
        <trans-unit id="be4d7abfbf6a487ccbcd0c016363e65c1e7e3e7f" translate="yes" xml:space="preserve">
          <source>The aggregate/range bounds are evaluated at compile time and turned into a sequence of compile-time entities by evaluating corresponding code with a &lt;a href=&quot;statement#ForeachStatement&quot;&gt;&lt;i&gt;ForeachStatement&lt;/i&gt;&lt;/a&gt;/&lt;a href=&quot;statement#ForeachRangeStatement&quot;&gt;&lt;i&gt;ForeachRangeStatement&lt;/i&gt;&lt;/a&gt; at compile time. The body of the &lt;code&gt;static foreach&lt;/code&gt; is then copied a number of times that corresponds to the number of elements of the sequence. Within the i-th copy, the name of the &lt;code&gt;static foreach&lt;/code&gt; variable is bound to the i-th entry of the sequence, either as an &lt;code&gt;enum&lt;/code&gt; variable declaration (for constants) or an &lt;code&gt;alias&lt;/code&gt; declaration (for symbols). (In particular, &lt;code&gt;static foreach&lt;/code&gt; variables are never runtime variables.)</source>
          <target state="translated">聚合/范围边界在编译时评估，并通过在编译时使用&lt;a href=&quot;statement#ForeachStatement&quot;&gt;&lt;i&gt;ForeachStatement&lt;/i&gt;&lt;/a&gt; / &lt;a href=&quot;statement#ForeachRangeStatement&quot;&gt;&lt;i&gt;ForeachRangeStatement&lt;/i&gt;&lt;/a&gt;评估相应的代码将其转换为一系列编译时实体。然后，将 &lt;code&gt;static foreach&lt;/code&gt; 的主体复制多次，该次数对应于序列中元素的数量。在第i个副本中， &lt;code&gt;static foreach&lt;/code&gt; 变量的名称绑定到序列的第i个条目，作为 &lt;code&gt;enum&lt;/code&gt; 变量声明（对于常量）或 &lt;code&gt;alias&lt;/code&gt; 声明（对于符号）。 （特别是， &lt;code&gt;static foreach&lt;/code&gt; 变量永远不会是运行时变量。）</target>
        </trans-unit>
        <trans-unit id="7524e87df0e2bd2478aea3589a41e1a028d60509" translate="yes" xml:space="preserve">
          <source>The algorithm was designed by Hans Dobbertin, Antoon Bosselaers, and Bart Preneel.</source>
          <target state="translated">该算法由Hans Dobbertin、Antoon Bosselaers和Bart Preneel设计。</target>
        </trans-unit>
        <trans-unit id="4c2bfa97d67b17e650534b7eef10e7ad4c0bcc79" translate="yes" xml:space="preserve">
          <source>The algorithm works as follows:</source>
          <target state="translated">该算法的工作原理如下:</target>
        </trans-unit>
        <trans-unit id="48a9b12ecf15252f0b5157732b6ca9173b4931d2" translate="yes" xml:space="preserve">
          <source>The aliases are:</source>
          <target state="translated">这些别名是:</target>
        </trans-unit>
        <trans-unit id="81631da16100dd8478c92e814bda7bbba00ac288" translate="yes" xml:space="preserve">
          <source>The aliases following this template create the public names of the log functions.</source>
          <target state="translated">本模板后面的别名创建了日志函数的公共名称。</target>
        </trans-unit>
        <trans-unit id="bcbe81e1130e17fc3109bc8509350a184b24f288" translate="yes" xml:space="preserve">
          <source>The aliases following this template create the public names of these log functions.</source>
          <target state="translated">该模板后面的别名创建了这些日志函数的公共名称。</target>
        </trans-unit>
        <trans-unit id="c567df7009dd19d930ebcb716790130e92399528" translate="yes" xml:space="preserve">
          <source>The alignment for the fields of an aggregate does not affect the alignment of the aggregate itself - that is affected by the alignment setting outside of the aggregate.</source>
          <target state="translated">聚合体字段的对齐方式不会影响聚合体本身的对齐方式--这是受聚合体外部的对齐方式设置影响的。</target>
        </trans-unit>
        <trans-unit id="f093103ea9ccde93c26257d52a8ebe06d2563d51" translate="yes" xml:space="preserve">
          <source>The alignment is a static constant equal to &lt;code&gt;platformAlignment&lt;/code&gt;, which ensures proper alignment for any D data type.</source>
          <target state="translated">对齐方式是等于 &lt;code&gt;platformAlignment&lt;/code&gt; 的静态常数，可以确保任何D数据类型的正确对齐方式。</target>
        </trans-unit>
        <trans-unit id="15ebd1ca8e45d31f001b9c11ace8a2913c42cd0b" translate="yes" xml:space="preserve">
          <source>The alignment offered is the minimum of the two allocators' alignment.</source>
          <target state="translated">提供的排列是两个分配器的最小排列。</target>
        </trans-unit>
        <trans-unit id="98d787b597dca14b1cd2aa32405fb6769c33f39f" translate="yes" xml:space="preserve">
          <source>The alignment offered is the same as &lt;code&gt;Allocator.alignment&lt;/code&gt;.</source>
          <target state="translated">提供的对齐方式与 &lt;code&gt;Allocator.alignment&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="2d9bcfc1fe50fa247260c84039c4e52f5cc8339c" translate="yes" xml:space="preserve">
          <source>The alignment offered is user-configurable statically through parameter &lt;code&gt;theAlignment&lt;/code&gt;, defaulted to &lt;code&gt;platformAlignment&lt;/code&gt;.</source>
          <target state="translated">用户可以通过参数 &lt;code&gt;theAlignment&lt;/code&gt; 静态配置其提供的对齐方式，默认为 &lt;code&gt;platformAlignment&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55ae38068c659d6482341d5f2a9544d2084b247f" translate="yes" xml:space="preserve">
          <source>The alignment offered.</source>
          <target state="translated">提供的对准。</target>
        </trans-unit>
        <trans-unit id="0f037bbde370840fb51ae0cd55e297a5ad94c4c1" translate="yes" xml:space="preserve">
          <source>The alignment that is guaranteed to accommodate any D object allocation on the current platform.</source>
          <target state="translated">保证适应当前平台上任何D对象分配的走线。</target>
        </trans-unit>
        <trans-unit id="ffaeeba22bc74fcd6590cff49e1181655746149d" translate="yes" xml:space="preserve">
          <source>The allocated block looks like this for blocks &amp;lt; PAGESIZE:</source>
          <target state="translated">对于&amp;lt;PAGESIZE：的块，分配的块如下所示：</target>
        </trans-unit>
        <trans-unit id="1e6e16df97f3afd43394873bd1850208370d0247" translate="yes" xml:space="preserve">
          <source>The allocated block, or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">分配的块，或者为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d585ec1807a2dc496ab963634c47b6fc38f63ce" translate="yes" xml:space="preserve">
          <source>The allocated memory is aligned to the specified alignment &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">分配的内存与指定的对齐方式 &lt;code&gt;a&lt;/code&gt; 对齐。</target>
        </trans-unit>
        <trans-unit id="26fd1cc82ed45b7bca2ff3a406ac59e252c10871" translate="yes" xml:space="preserve">
          <source>The allocator used for getting the needed memory. It may be an object implementing the static interface for allocators, or an &lt;code&gt;IAllocator&lt;/code&gt; reference.</source>
          <target state="translated">用于获取所需内存的分配器。它可以是实现分配器静态接口或 &lt;code&gt;IAllocator&lt;/code&gt; 引用的对象。</target>
        </trans-unit>
        <trans-unit id="7a162642b55adf8c70cb72e78e6a91ca645573ee" translate="yes" xml:space="preserve">
          <source>The amount of time (as a &lt;a href=&quot;core_time#Duration&quot;&gt;&lt;code&gt;core.time.Duration&lt;/code&gt;&lt;/a&gt;) that it took to call each function &lt;code&gt;n&lt;/code&gt; times. The first value is the length of time that it took to call &lt;code&gt;fun[0]&lt;/code&gt;&lt;code&gt;n&lt;/code&gt; times. The second value is the length of time it took to call &lt;code&gt;fun[1]&lt;/code&gt;&lt;code&gt;n&lt;/code&gt; times. Etc.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; 次调用每个函数所花费的时间（作为&lt;a href=&quot;core_time#Duration&quot;&gt; &lt;code&gt;core.time.Duration&lt;/code&gt; &lt;/a&gt;）。第一个值是 &lt;code&gt;n&lt;/code&gt; 次调用 &lt;code&gt;fun[0]&lt;/code&gt; 花费的时间长度。第二个值是 &lt;code&gt;n&lt;/code&gt; 次调用 &lt;code&gt;fun[1]&lt;/code&gt; 花费的时间长度。等等。</target>
        </trans-unit>
        <trans-unit id="679e02f2df98ca53eb58d9358d749fc6899efa4f" translate="yes" xml:space="preserve">
          <source>The amount of time (as a &lt;a href=&quot;core_time#TickDuration&quot;&gt;&lt;code&gt;core.time.TickDuration&lt;/code&gt;&lt;/a&gt;) that it took to call each function &lt;code&gt;n&lt;/code&gt; times. The first value is the length of time that it took to call &lt;code&gt;fun[0]&lt;/code&gt;&lt;code&gt;n&lt;/code&gt; times. The second value is the length of time it took to call &lt;code&gt;fun[1]&lt;/code&gt;&lt;code&gt;n&lt;/code&gt; times. Etc.  Note that casting the TickDurations to &lt;a href=&quot;core_time#Duration&quot;&gt;&lt;code&gt;core.time.Duration&lt;/code&gt;&lt;/a&gt;s will make the results easier to deal with (and it may change in the future that benchmark will return an array of Durations rather than TickDurations).</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; 次调用每个函数所花费的时间（作为&lt;a href=&quot;core_time#TickDuration&quot;&gt; &lt;code&gt;core.time.TickDuration&lt;/code&gt; &lt;/a&gt;）。第一个值是 &lt;code&gt;n&lt;/code&gt; 次调用 &lt;code&gt;fun[0]&lt;/code&gt; 花费的时间长度。第二个值是 &lt;code&gt;n&lt;/code&gt; 次调用 &lt;code&gt;fun[1]&lt;/code&gt; 花费的时间长度。等等，请注意，将TickDurations强制转换为&lt;a href=&quot;core_time#Duration&quot;&gt; &lt;code&gt;core.time.Duration&lt;/code&gt; &lt;/a&gt;将使结果更易于处理（将来基准可能会返回一组Durations而不是TickDurations，这可能会改变）。</target>
        </trans-unit>
        <trans-unit id="5f2ab544dd26a15cec91af6687d533c4df3410af" translate="yes" xml:space="preserve">
          <source>The amount of time the offset from UTC is (negative is west of UTC, positive is east).</source>
          <target state="translated">与UTC的偏移量(负的是UTC的西边,正的是东边)。</target>
        </trans-unit>
        <trans-unit id="0de54a6c1586b1ff3ca3aeac336a823fab853f7c" translate="yes" xml:space="preserve">
          <source>The analysis assumes no exceptions are thrown.</source>
          <target state="translated">该分析假设没有抛出异常。</target>
        </trans-unit>
        <trans-unit id="e47e36cb20f66676952eedf4d640b1eab6c9c3bb" translate="yes" xml:space="preserve">
          <source>The archive comment. Must be less than 65536 bytes in length.</source>
          <target state="translated">档案评论。长度必须小于65536字节。</target>
        </trans-unit>
        <trans-unit id="6ca92b99392b2201548ac94076929186c2729bd5" translate="yes" xml:space="preserve">
          <source>The argument</source>
          <target state="translated">争论</target>
        </trans-unit>
        <trans-unit id="95ad1044a61a4a355c884ad9c8beb68fea8cbf9e" translate="yes" xml:space="preserve">
          <source>The argument (or phase) of &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;z&lt;/code&gt; 的自变量（或相位）。</target>
        </trans-unit>
        <trans-unit id="c58aecc00ef7e3c30bc80ddf70bce576b8c7b76a" translate="yes" xml:space="preserve">
          <source>The argument count.</source>
          <target state="translated">论证数。</target>
        </trans-unit>
        <trans-unit id="d38f16231ac42e003a0a7d9c3c817f7a78c027ca" translate="yes" xml:space="preserve">
          <source>The argument is a symbol. The result is a string giving its protection level: &quot;public&quot;, &quot;private&quot;, &quot;protected&quot;, &quot;export&quot;, or &quot;package&quot;.</source>
          <target state="translated">参数是一个符号。结果是一个字符串,给出其保护级别。&quot;public&quot;,&quot;private&quot;,&quot;protected&quot;,&quot;export&quot;,或 &quot;package&quot;.</target>
        </trans-unit>
        <trans-unit id="f839ff49cca61a7255e899d71e5de5d86a208b6a" translate="yes" xml:space="preserve">
          <source>The argument is a symbol. The result is a tuple of strings, possibly empty, that correspond to the namespaces the symbol resides in.</source>
          <target state="translated">参数是一个符号。结果是一个字符串元组,可能为空,对应于符号所在的命名空间。</target>
        </trans-unit>
        <trans-unit id="ce7b440e5dab60852de91e6b031523ab897d0a94" translate="yes" xml:space="preserve">
          <source>The argument is a type. If it is a struct with a copy constructor, returns &lt;code&gt;true&lt;/code&gt;. Otherwise, return &lt;code&gt;false&lt;/code&gt;. Note that a copy constructor is distinct from a postblit.</source>
          <target state="translated">参数是一种类型。如果它是带有复制构造函数的结构，则返回 &lt;code&gt;true&lt;/code&gt; 。否则，返回 &lt;code&gt;false&lt;/code&gt; 。请注意，复制构造函数与postblit不同。</target>
        </trans-unit>
        <trans-unit id="c52932bea1c79c41627f35fa183681937db58518" translate="yes" xml:space="preserve">
          <source>The argument is a type. If it is a struct with a postblit, returns &lt;code&gt;true&lt;/code&gt;. Otherwise, return &lt;code&gt;false&lt;/code&gt;. Note a postblit is distinct from a copy constructor.</source>
          <target state="translated">参数是一种类型。如果它是带有postblit的结构，则返回 &lt;code&gt;true&lt;/code&gt; 。否则，返回 &lt;code&gt;false&lt;/code&gt; 。请注意，postblit与复制构造函数不同。</target>
        </trans-unit>
        <trans-unit id="b7bee920123d48f748fd063723855b9cdf7fc70e" translate="yes" xml:space="preserve">
          <source>The argument is a type. The result is an array of &lt;code&gt;size_t&lt;/code&gt; describing the memory used by an instance of the given type.</source>
          <target state="translated">参数是一种类型。结果是 &lt;code&gt;size_t&lt;/code&gt; 数组，描述给定类型的实例使用的内存。</target>
        </trans-unit>
        <trans-unit id="b2ad70160d7b242b67aa98a2d5cf38772a405118" translate="yes" xml:space="preserve">
          <source>The argument must be an lvalue, which will be passed by reference and initialized upon function entry with the default value (&lt;code&gt;T.init&lt;/code&gt;) of its type</source>
          <target state="translated">参数必须是左值，该值将通过引用传递并在函数输入时使用其类型的默认值（ &lt;code&gt;T.init&lt;/code&gt; ）进行初始化。</target>
        </trans-unit>
        <trans-unit id="46d2fa2d1e3a9c3efc618f0f297d3295d7b93652" translate="yes" xml:space="preserve">
          <source>The argument pointer type.</source>
          <target state="translated">参数指针类型。</target>
        </trans-unit>
        <trans-unit id="bd0d0e4c2f22549c04310e29901bafb6d89f2cbb" translate="yes" xml:space="preserve">
          <source>The argument to &lt;code&gt;dg&lt;/code&gt; is &lt;code&gt;scope&lt;/code&gt;. To keep the data around after &lt;code&gt;dg&lt;/code&gt; exits, one has to copy it.</source>
          <target state="translated">&lt;code&gt;dg&lt;/code&gt; 的参数是 &lt;code&gt;scope&lt;/code&gt; 。要在 &lt;code&gt;dg&lt;/code&gt; 退出后保留数据，必须将其复制。</target>
        </trans-unit>
        <trans-unit id="d6506a51a0d81317d36c0b3931580ed4ae34e0c1" translate="yes" xml:space="preserve">
          <source>The arguments as a C array of strings.</source>
          <target state="translated">参数为一个C语言的字符串数组。</target>
        </trans-unit>
        <trans-unit id="9a539cbbe8582d8d5d90be89210dc5f77ab9a858" translate="yes" xml:space="preserve">
          <source>The arguments supplied when this process was started.</source>
          <target state="translated">该进程启动时提供的参数。</target>
        </trans-unit>
        <trans-unit id="afc42ff1b01f9fdceb0afc9990aeafdba8561cdc" translate="yes" xml:space="preserve">
          <source>The arguments the function was called with. Changes to &lt;code&gt;out&lt;/code&gt; and &lt;code&gt;ref&lt;/code&gt; arguments will be visible here.</source>
          <target state="translated">调用函数的参数。对 &lt;code&gt;out&lt;/code&gt; 和 &lt;code&gt;ref&lt;/code&gt; 参数的更改将在此处可见。</target>
        </trans-unit>
        <trans-unit id="63025a0e656a03617731632fd0d058123f82e206" translate="yes" xml:space="preserve">
          <source>The array generated by &lt;code&gt;makeTransTable&lt;/code&gt; is &lt;code&gt;256&lt;/code&gt; elements long such that the index is equal to the ASCII character being replaced and the value is equal to the character that it's being replaced with. Note that translate does not decode any of the characters, so you can actually pass it Extended ASCII characters if you want to (ASCII only actually uses &lt;code&gt;128&lt;/code&gt; characters), but be warned that Extended ASCII characters are not valid Unicode and therefore will result in a &lt;code&gt;UTFException&lt;/code&gt; being thrown from most other Phobos functions.</source>
          <target state="translated">所产生的阵列 &lt;code&gt;makeTransTable&lt;/code&gt; 是 &lt;code&gt;256&lt;/code&gt; 个元件长，使得索引等于ASCII字符被替换并且该值等于它被替换为字符。请注意，translate不会解码任何字符，因此您可以根据需要实际传递它扩展ASCII字符（ASCII实际上仅使用 &lt;code&gt;128&lt;/code&gt; 个字符），但是要警告扩展ASCII字符不是有效的Unicode，因此会导致大多数其他Phobos函数都抛出了 &lt;code&gt;UTFException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e36bd34216b4fb890e4b17cc00a08b3fe10bf73" translate="yes" xml:space="preserve">
          <source>The array indexing and slicing operators are overloaded by implementing the &lt;code&gt;opIndex&lt;/code&gt;, &lt;code&gt;opSlice&lt;/code&gt;, and &lt;code&gt;opDollar&lt;/code&gt; methods. These may be combined to implement multidimensional arrays.</source>
          <target state="translated">数组索引和切片运算符通过实现 &lt;code&gt;opIndex&lt;/code&gt; ， &lt;code&gt;opSlice&lt;/code&gt; 和 &lt;code&gt;opDollar&lt;/code&gt; 方法而过载。这些可以组合以实现多维数组。</target>
        </trans-unit>
        <trans-unit id="1b2a7128d2d832c1302cb48d5006b21f210a2eeb" translate="yes" xml:space="preserve">
          <source>The array of &lt;code&gt;Statements&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if no flattening necessary</source>
          <target state="translated">的阵列 &lt;code&gt;Statements&lt;/code&gt; ，或 &lt;code&gt;null&lt;/code&gt; ，如果没有必要平坦化</target>
        </trans-unit>
        <trans-unit id="45a797de9ee37043ed5d9c3044ead0d769c8dfec" translate="yes" xml:space="preserve">
          <source>The array of allocators is publicly available for e.g. initialization and inspection.</source>
          <target state="translated">分配器的数组是公开的,如初始化和检查。</target>
        </trans-unit>
        <trans-unit id="78465f24447e3c88a59d9835a9423a9e3ebd4f18" translate="yes" xml:space="preserve">
          <source>The array of bits to iterate over</source>
          <target state="translated">迭代的比特数组</target>
        </trans-unit>
        <trans-unit id="4ca952de23045dd7d8a84c57a2dc3a2d3b262893" translate="yes" xml:space="preserve">
          <source>The array that &lt;code&gt;stuff&lt;/code&gt; will be inserted into.</source>
          <target state="translated">&lt;code&gt;stuff&lt;/code&gt; 将插入的数组。</target>
        </trans-unit>
        <trans-unit id="4321c353e1c32d604816547a52f50f3db51eff04" translate="yes" xml:space="preserve">
          <source>The array to cast to immutable.</source>
          <target state="translated">要投向不可变的数组。</target>
        </trans-unit>
        <trans-unit id="c1207d2a97f985ed8f1d6e838bce196b8c261949" translate="yes" xml:space="preserve">
          <source>The array to store the factorial number. The array is of size 21 as &lt;code&gt;ulong.max&lt;/code&gt; requires 21 digits in the factorial number system.</source>
          <target state="translated">存储阶乘数的数组。该数组的大小为21，因为 &lt;code&gt;ulong.max&lt;/code&gt; 在阶乘数系统中需要21位数字。</target>
        </trans-unit>
        <trans-unit id="2e58d1006cb20d5f3840c703c981f56532e89433" translate="yes" xml:space="preserve">
          <source>The array type to simulate</source>
          <target state="translated">要模拟的数组类型</target>
        </trans-unit>
        <trans-unit id="5eff91e039ba4d6d8d23f84bae72af3efca47e6c" translate="yes" xml:space="preserve">
          <source>The asm.js intermediate programming language</source>
          <target state="translated">asm.js中级编程语言。</target>
        </trans-unit>
        <trans-unit id="9e1495896a8171a6a847812d0360c297c1cf65a4" translate="yes" xml:space="preserve">
          <source>The assembled path.</source>
          <target state="translated">组装的路径。</target>
        </trans-unit>
        <trans-unit id="1e2b85b82e92a3856a1e1c2b72d37fa265091420" translate="yes" xml:space="preserve">
          <source>The assertion is independent from -release, by abort()ing. Regular assertions throw an AssertError and thus require an initialized GC, which might not be the case (yet or anymore) for the startup/shutdown code in this package (called by CRT ctors/dtors etc.).</source>
          <target state="translated">通过abort()ing,断言与-release无关。常规的断言会抛出一个AssertError,因此需要一个初始化的GC,对于这个包中的启动/关闭代码(被CRT ctors/dtors等调用)来说,可能不是这样的(现在还不是)。</target>
        </trans-unit>
        <trans-unit id="dd468c6bd7b4f24fe4681661a1f4c1bf9f53f209" translate="yes" xml:space="preserve">
          <source>The assignment character used in options with parameters (default '=').</source>
          <target state="translated">带参数的选项中使用的赋值字符(默认为'=')。</target>
        </trans-unit>
        <trans-unit id="d1cc08d2be4a1f3b1bcdb0c1a5ad7e06c61f4a9a" translate="yes" xml:space="preserve">
          <source>The assignment operator &lt;code&gt;=&lt;/code&gt; can be overloaded if the left hand side is a struct aggregate, and &lt;code&gt;opAssign&lt;/code&gt; is a member function of that aggregate.</source>
          <target state="translated">如果左侧是结构聚合，而 &lt;code&gt;opAssign&lt;/code&gt; 是该聚合的成员函数，则赋值运算符 &lt;code&gt;=&lt;/code&gt; 可以重载。</target>
        </trans-unit>
        <trans-unit id="9ca96b2dca99020e1c9332c4a525410f5467c7f8" translate="yes" xml:space="preserve">
          <source>The associated Tid or Tid.init if name is not registered.</source>
          <target state="translated">相关的Tid或Tid.init(如果名称未注册)。</target>
        </trans-unit>
        <trans-unit id="d2c138793e6130d41176963ee803d482cbf6ac55" translate="yes" xml:space="preserve">
          <source>The associative array to iterate over.</source>
          <target state="translated">迭代的关联数组。</target>
        </trans-unit>
        <trans-unit id="3f8e903e0ceb75b15c10ccad54194376c61bbba7" translate="yes" xml:space="preserve">
          <source>The associative array.</source>
          <target state="translated">关联数组。</target>
        </trans-unit>
        <trans-unit id="7878f31bd1a31b1a2cfd5e7a52ffdc7c9ecd24a9" translate="yes" xml:space="preserve">
          <source>The assumption is that &lt;code&gt;first&lt;/code&gt; comes before &lt;code&gt;second&lt;/code&gt; in the original text, usually meaning that the first is a starter.</source>
          <target state="translated">假定在原始文本中， &lt;code&gt;first&lt;/code&gt; 出现在 &lt;code&gt;second&lt;/code&gt; 之前，通常意味着第一个是启动器。</target>
        </trans-unit>
        <trans-unit id="61806db12d64abe42691b62a374e038f9ecaadda" translate="yes" xml:space="preserve">
          <source>The atomic module provides basic support for lock-free concurrent programming.</source>
          <target state="translated">原子模块为无锁并发编程提供了基本支持。</target>
        </trans-unit>
        <trans-unit id="75eef2eb2a8bfe31e731a278f35f0ceb7c55d5e5" translate="yes" xml:space="preserve">
          <source>The attack happens as follows:</source>
          <target state="translated">攻击的情况如下:</target>
        </trans-unit>
        <trans-unit id="f7c54a735163e7d571809eeacaa1471999099ee3" translate="yes" xml:space="preserve">
          <source>The attribute can only be attached once to a method</source>
          <target state="translated">属性只能对一个方法附加一次。</target>
        </trans-unit>
        <trans-unit id="be7f7827649a01848c8244186acaf8539a9b85f0" translate="yes" xml:space="preserve">
          <source>The attribute can only be attached to an &lt;code&gt;extern(C++)&lt;/code&gt; symbol (&lt;code&gt;struct&lt;/code&gt;, &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;enum&lt;/code&gt;, function, and their templated counterparts).</source>
          <target state="translated">该属性只能附加到 &lt;code&gt;extern(C++)&lt;/code&gt; 符号（ &lt;code&gt;struct&lt;/code&gt; ， &lt;code&gt;class&lt;/code&gt; ， &lt;code&gt;enum&lt;/code&gt; ，function及其对应的模板）。</target>
        </trans-unit>
        <trans-unit id="79ccd1c77d9bb55894eeaf0ddb5f8bb5f1442f97" translate="yes" xml:space="preserve">
          <source>The attribute can only be attached to methods or constructors which have Objective-C linkage. That is, a method or a constructor in a class or interface declared as</source>
          <target state="translated">这个属性只能附加到有Objective-C链接的方法或构造函数上。也就是说,一个类或接口中的方法或构造函数被声明为</target>
        </trans-unit>
        <trans-unit id="9e6a8c7917aafe6dd89c5b3da037ce8ce791dcd0" translate="yes" xml:space="preserve">
          <source>The attribute can only be attached to methods with Objective-C linkage</source>
          <target state="translated">该属性只能附加到具有Objective-C链接的方法上。</target>
        </trans-unit>
        <trans-unit id="200c85ea31972c691820bf6057378a72c8b709b9" translate="yes" xml:space="preserve">
          <source>The attribute cannot be applied to C++ namespaces. This is to prevent confusion with the C++ semantic, which allows it to be applied to namespaces.</source>
          <target state="translated">该属性不能应用于C++命名空间。这是为了防止与C++语义相混淆,因为C++语义允许它应用于命名空间。</target>
        </trans-unit>
        <trans-unit id="0cc4b73eb5ab20f789654491f3d1669a5a798998" translate="yes" xml:space="preserve">
          <source>The attribute cannot be attached to a template method</source>
          <target state="translated">该属性不能附加到模板方法上。</target>
        </trans-unit>
        <trans-unit id="c3e58f213e4368a17eae0f25fdb580af5f953648" translate="yes" xml:space="preserve">
          <source>The attribute is defined in druntime in &lt;a href=&quot;https://dlang.org/phobos/core_attribute.html&quot;&gt;&lt;code&gt;core.attribute&lt;/code&gt;&lt;/a&gt; and aliased in &lt;a href=&quot;https://dlang.org/phobos/object.html&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt;, meaning it will be implicitly imported. The attribute is only defined when the version identifier &lt;a href=&quot;#objc-version-identifier&quot;&gt;&lt;code&gt;D_ObjectiveC&lt;/code&gt;&lt;/a&gt; is enabled.</source>
          <target state="translated">该属性在core.attribute的druntime中定义，并在&lt;a href=&quot;https://dlang.org/phobos/object.html&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;中&lt;a href=&quot;https://dlang.org/phobos/core_attribute.html&quot;&gt; &lt;code&gt;core.attribute&lt;/code&gt; &lt;/a&gt;别名，这意味着它将被隐式导入。仅在启用版本标识符&lt;a href=&quot;#objc-version-identifier&quot;&gt; &lt;code&gt;D_ObjectiveC&lt;/code&gt; &lt;/a&gt;时定义该属性。</target>
        </trans-unit>
        <trans-unit id="1be7aa83910532921b956bd7ed61bdd6a250dfb0" translate="yes" xml:space="preserve">
          <source>The attribute is defined in druntime in &lt;a href=&quot;https://dlang.org/phobos/core_attribute.html&quot;&gt;&lt;code&gt;core.attribute&lt;/code&gt;&lt;/a&gt;. The attribute is only defined when the version identifier &lt;a href=&quot;#objc-version-identifier&quot;&gt;&lt;code&gt;D_ObjectiveC&lt;/code&gt;&lt;/a&gt; is enabled.</source>
          <target state="translated">该属性在druntime中的&lt;a href=&quot;https://dlang.org/phobos/core_attribute.html&quot;&gt; &lt;code&gt;core.attribute&lt;/code&gt; 中&lt;/a&gt;定义。仅在启用版本标识符&lt;a href=&quot;#objc-version-identifier&quot;&gt; &lt;code&gt;D_ObjectiveC&lt;/code&gt; &lt;/a&gt;时定义该属性。</target>
        </trans-unit>
        <trans-unit id="96eac9336921a98926c132d1b4d9806462791d58" translate="yes" xml:space="preserve">
          <source>The attribute of the type name is not the same as the attribute of the variable:</source>
          <target state="translated">类型名的属性与变量的属性不一样。</target>
        </trans-unit>
        <trans-unit id="24cd99fe8bbe482a8a5a81e7f4b51e39455ae56f" translate="yes" xml:space="preserve">
          <source>The attributes (g, i, m, s and x accepted)</source>
          <target state="translated">属性(g、i、m、s和x接受)</target>
        </trans-unit>
        <trans-unit id="4ee39b3b86f5106a3fdc7e1ea7775bb7c85ac176" translate="yes" xml:space="preserve">
          <source>The attributes of the &lt;a href=&quot;expression#AssignExpression&quot;&gt;&lt;i&gt;AssignExpression&lt;/i&gt;&lt;/a&gt; are applied where the default expression is used.</source>
          <target state="translated">在使用默认表达式的情况下，将应用&lt;a href=&quot;expression#AssignExpression&quot;&gt;&lt;i&gt;AssignExpression&lt;/i&gt;&lt;/a&gt;的属性。</target>
        </trans-unit>
        <trans-unit id="06da5fd89d1e09344f5502c88832d0079ac5062c" translate="yes" xml:space="preserve">
          <source>The attributes of the file as a &lt;code&gt;uint&lt;/code&gt;.</source>
          <target state="translated">文件的属性为 &lt;code&gt;uint&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab103bac227f27736507e49db9f68f7e1c3bdf17" translate="yes" xml:space="preserve">
          <source>The background thread will buffer up to transmitBuffers number of chunks before is stops receiving data from network. When the main thread reads the chunks from the range it frees up buffers and allows for the background thread to receive more data from the network.</source>
          <target state="translated">后台线程在停止从网络接收数据之前,会缓冲到 transmitBuffers 的分块数量。当主线程从范围内读取chunks时,它可以释放缓冲区,允许后台线程从网络上接收更多的数据。</target>
        </trans-unit>
        <trans-unit id="2f49fc1ac2fa753eb385adebbde8c5e3739e3eb5" translate="yes" xml:space="preserve">
          <source>The background thread will buffer up to transmitBuffers number of lines before it stops receiving data from network. When the main thread reads the lines from the range it frees up buffers and allows for the background thread to receive more data from the network.</source>
          <target state="translated">后台线程在停止从网络接收数据之前,会缓冲到 transmitBuffers 的行数。当主线程从范围内读取行数时,会释放缓冲区,允许后台线程从网络接收更多数据。</target>
        </trans-unit>
        <trans-unit id="df002316032ff2e092a1cc3a410d04df468eda1d" translate="yes" xml:space="preserve">
          <source>The backslash character is not treated specially inside &lt;a href=&quot;#Filespec&quot;&gt;&lt;i&gt;Filespec&lt;/i&gt;&lt;/a&gt; strings.</source>
          <target state="translated">在&lt;a href=&quot;#Filespec&quot;&gt;&lt;i&gt;Filespec&lt;/i&gt;&lt;/a&gt;字符串中未对反斜杠字符进行特殊处理。</target>
        </trans-unit>
        <trans-unit id="a707c2f980ce4edb81a7e52be4d3486a20f75970" translate="yes" xml:space="preserve">
          <source>The barrier module provides a primitive for synchronizing the progress of a group of threads.</source>
          <target state="translated">屏障模块提供了一个用于同步一组线程进度的基元。</target>
        </trans-unit>
        <trans-unit id="0f16b21bd145c48ee38391d193636c622ee32ed4" translate="yes" xml:space="preserve">
          <source>The base address of the memory block referenced by p or null on error.</source>
          <target state="translated">p引用的内存块的基本地址,错误时为空。</target>
        </trans-unit>
        <trans-unit id="202abe43b53a16dc33ac200ec72cb69c866674c7" translate="yes" xml:space="preserve">
          <source>The base class for exceptions thrown by this module</source>
          <target state="translated">本模块抛出的异常的基类。</target>
        </trans-unit>
        <trans-unit id="1a2d8f5221992ec16fa6b9228ee8706ba1b5f8a3" translate="yes" xml:space="preserve">
          <source>The base class of all AST nodes.</source>
          <target state="translated">所有AST节点的基类。</target>
        </trans-unit>
        <trans-unit id="2c62b6527d85866989d96fc04ef66293021bf4e4" translate="yes" xml:space="preserve">
          <source>The base class of all errors that are safe to catch and handle.</source>
          <target state="translated">所有可以安全捕捉和处理的错误的基类。</target>
        </trans-unit>
        <trans-unit id="3d510f9f0a1f647c90ed3c0e84e9bc68e62fbef9" translate="yes" xml:space="preserve">
          <source>The base class of all thrown objects.</source>
          <target state="translated">所有抛出对象的基类。</target>
        </trans-unit>
        <trans-unit id="f59893c50b7d9f6fccbb634dce991efa1ec27e2a" translate="yes" xml:space="preserve">
          <source>The base class of all unrecoverable runtime errors.</source>
          <target state="translated">所有不可恢复的运行时错误的基类。</target>
        </trans-unit>
        <trans-unit id="2ae564b78fab59c5ea57c135e5d25f9a2f2f9e56" translate="yes" xml:space="preserve">
          <source>The base path to construct the relative path from.</source>
          <target state="translated">构建相对路径的基本路径。</target>
        </trans-unit>
        <trans-unit id="7b8c780a7aaf44d0ec25e2d71c9d91275146dbb5" translate="yes" xml:space="preserve">
          <source>The base ptr in this struct can be cleared asynchronously by the GC, so any use of the returned BlkInfo should copy it and then check the base ptr of the copy before actually using it.</source>
          <target state="translated">这个结构中的base ptr可以被GC异步清除,所以任何对返回的BlkInfo的使用都应该复制它,然后在实际使用它之前检查复制的base ptr。</target>
        </trans-unit>
        <trans-unit id="8690f4437635a1d2bf0002da1660f73ae69c67e5" translate="yes" xml:space="preserve">
          <source>The base type.</source>
          <target state="translated">基础类型:</target>
        </trans-unit>
        <trans-unit id="dbcf092daafa8f2354629e2a622f62afa3a72b3b" translate="yes" xml:space="preserve">
          <source>The basetype must be one of: byte[16],ubyte[16],short[8],ushort[8],int[4],uint[4],long[2],ulong[2],float[4],double[2] For AVX: byte[32],ubyte[32],short[16],ushort[16],int[8],uint[8],long[4],ulong[4],float[8],double[4]</source>
          <target state="translated">基准类型必须是以下之一:byte[16],ubyte[16],short[8],ushort[8],int[4],uint[4],long[2],ulong[2],float[4],double[2]对于AVX:byte[32],ubyte[32],short[16],ushort[16],int[8],uint[8],long[4],ulong[4],float[8],double[4)</target>
        </trans-unit>
        <trans-unit id="399482d1c370eb1ac5e16d0aa1eed3cdd1c42d74" translate="yes" xml:space="preserve">
          <source>The basic architecture of this module is that there are standalone functions, classes for constructing an XML document from scratch (Tag, Element and Document), and also classes for parsing a pre-existing XML file (ElementParser and DocumentParser). The parsing classes</source>
          <target state="translated">这个模块的基本架构是,有独立的函数,有从头开始构建XML文档的类(Tag、Element和Document),也有解析已有XML文件的类(ElementParser和DocumentParser)。解析类</target>
        </trans-unit>
        <trans-unit id="bd83f1731835a7762685d9b1b4c80ae22caa482b" translate="yes" xml:space="preserve">
          <source>The basic syntax shouldn't surprise experienced users of regular expressions. For an introduction to &lt;code&gt;std.regex&lt;/code&gt; see a &lt;a href=&quot;http://dlang.org/regular-expression.html&quot;&gt;short tour&lt;/a&gt; of the module API and its abilities.</source>
          <target state="translated">基本语法不应令有经验的正则表达式用户感到惊讶。有关 &lt;code&gt;std.regex&lt;/code&gt; 的介绍，请参见模块API及其功能的&lt;a href=&quot;http://dlang.org/regular-expression.html&quot;&gt;简短&lt;/a&gt;介绍。</target>
        </trans-unit>
        <trans-unit id="b9f946834349060b2d8968db7cae4357e2830a42" translate="yes" xml:space="preserve">
          <source>The basic syntax shouldn't surprise experienced users of regular expressions. For an introduction to &lt;code&gt;std.regex&lt;/code&gt; see a &lt;a href=&quot;https://dlang.org/regular-expression.html&quot;&gt;short tour&lt;/a&gt; of the module API and its abilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234f6e28893085e219de1f945a7e3dc32736e80c" translate="yes" xml:space="preserve">
          <source>The behavior executed when a message is sent to a full mailbox.</source>
          <target state="translated">当一个邮件被发送到一个完整的邮箱时执行的行为。</target>
        </trans-unit>
        <trans-unit id="ab5c4600b299e121274047c9c50598443a05a652" translate="yes" xml:space="preserve">
          <source>The behavior when a</source>
          <target state="translated">时的行为。</target>
        </trans-unit>
        <trans-unit id="10d232650e9a8e91839d30ef0b07aa3a7812c3ee" translate="yes" xml:space="preserve">
          <source>The behavior when the invariant does not hold is typically the same as for when &lt;a href=&quot;expression#AssertExpression&quot;&gt;&lt;i&gt;AssertExpression&lt;/i&gt;&lt;/a&gt;s fail.</source>
          <target state="translated">不变式不成立时的行为通常与&lt;a href=&quot;expression#AssertExpression&quot;&gt;&lt;i&gt;AssertExpression&lt;/i&gt;&lt;/a&gt;失败时的行为相同。</target>
        </trans-unit>
        <trans-unit id="32c253b8b8075fafad7db46ce9573fe20079099e" translate="yes" xml:space="preserve">
          <source>The best way is to use std.stdio.writefln, which can handle D strings:</source>
          <target state="translated">最好的方法是使用std.stdio.writefln,它可以处理D字符串。</target>
        </trans-unit>
        <trans-unit id="074a4ed5e1cf5284566f4613af5758030a468edf" translate="yes" xml:space="preserve">
          <source>The beta function is defined as</source>
          <target state="translated">beta函数定义为</target>
        </trans-unit>
        <trans-unit id="776df6b9101ffe92329a9ec86d4f259d56f6f5cd" translate="yes" xml:space="preserve">
          <source>The binary heap induces structure over the underlying store such that accessing the largest element (by using the &lt;code&gt;front&lt;/code&gt; property) is a &amp;Omicron;(&lt;code&gt;1&lt;/code&gt;) operation and extracting it (by using the &lt;code&gt;removeFront()&lt;/code&gt; method) is done fast in &amp;Omicron;(&lt;code&gt;log n&lt;/code&gt;) time.</source>
          <target state="translated">二进制堆在底层存储上引发结构，因此访问最大元素（通过使用 &lt;code&gt;front&lt;/code&gt; 属性）是&amp;Omicron;（ &lt;code&gt;1&lt;/code&gt; ）操作，并在&amp;Omicron;（ &lt;code&gt;log n&lt;/code&gt; ）中快速完成对其的提取（通过使用 &lt;code&gt;removeFront()&lt;/code&gt; 方法）。时间。</target>
        </trans-unit>
        <trans-unit id="4c8ec4e4b9635f6e100188d75e888fd06cd8e192" translate="yes" xml:space="preserve">
          <source>The binary operator involved, e.g. &lt;code&gt;/&lt;/code&gt;</source>
          <target state="translated">涉及的二进制运算符，例如 &lt;code&gt;/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d68c85a934ba6bb56625f3815258575a45ac4309" translate="yes" xml:space="preserve">
          <source>The binary operator ~ is the</source>
          <target state="translated">二进制运算符~是</target>
        </trans-unit>
        <trans-unit id="97c48bbd4c951e34df677fdb5ba8d5cff4f6b9ee" translate="yes" xml:space="preserve">
          <source>The binary predicate to compare the elements of the two ranges.</source>
          <target state="translated">二进制谓词来比较两个范围的元素。</target>
        </trans-unit>
        <trans-unit id="c0f1385da3c1b4c526f08c5b626218775066160e" translate="yes" xml:space="preserve">
          <source>The bit number of the first bit set. The return value is undefined if v is zero.</source>
          <target state="translated">设置的第一个位的位数。如果v为0,则返回值未定义。</target>
        </trans-unit>
        <trans-unit id="f465b8408295f09e1e80dc77dc9289f124c8a06a" translate="yes" xml:space="preserve">
          <source>The bitwise OR of the equivalent &lt;a href=&quot;#ParameterStorageClass&quot;&gt;&lt;code&gt;ParameterStorageClass&lt;/code&gt;&lt;/a&gt;&lt;code&gt;enum&lt;/code&gt;s.</source>
          <target state="translated">等效的&lt;a href=&quot;#ParameterStorageClass&quot;&gt; &lt;code&gt;ParameterStorageClass&lt;/code&gt; &lt;/a&gt; &lt;code&gt;enum&lt;/code&gt; 的按位或。</target>
        </trans-unit>
        <trans-unit id="4fdcc0b7027ad4b488f80691f340dd0dc77ff487" translate="yes" xml:space="preserve">
          <source>The block statement form is:</source>
          <target state="translated">块声明的形式是:</target>
        </trans-unit>
        <trans-unit id="dd4bbefc576334b8b13692b8e44bc6ee98e6f364" translate="yes" xml:space="preserve">
          <source>The body of the</source>
          <target state="translated">该机构的</target>
        </trans-unit>
        <trans-unit id="96cd6fd8f2e0864106740818ab2710f9f6ce82f8" translate="yes" xml:space="preserve">
          <source>The body of the constructor is executed.</source>
          <target state="translated">构造函数的主体被执行。</target>
        </trans-unit>
        <trans-unit id="6863a629a6b6532a62dd2be0fcf0c83cbe0ecc4b" translate="yes" xml:space="preserve">
          <source>The bool type is a byte-size type that can only hold the value &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">布尔类型是字节大小的类型，只能保留值 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="595a315b8710f1cdf54c5c5a89b18ff6fdc7c01a" translate="yes" xml:space="preserve">
          <source>The bound being violated</source>
          <target state="translated">被违反的约束</target>
        </trans-unit>
        <trans-unit id="58bf9949e91d1f67475ea8dd8dc1479acb9a7b6c" translate="yes" xml:space="preserve">
          <source>The buffer to store decoded result.</source>
          <target state="translated">储存解码结果的缓冲区。</target>
        </trans-unit>
        <trans-unit id="cbd8e18ccd6c72e47f49142b87596eb0b37a2753" translate="yes" xml:space="preserve">
          <source>The buffer to write to</source>
          <target state="translated">要写入的缓冲区</target>
        </trans-unit>
        <trans-unit id="d4158bf50efe732ca75d7c0746df60cf6a107caa" translate="yes" xml:space="preserve">
          <source>The built in properties &lt;code&gt;.sizeof&lt;/code&gt;, &lt;code&gt;.alignof&lt;/code&gt;, and &lt;code&gt;.mangleof&lt;/code&gt; may not be declared as fields or methods in structs, unions, classes or enums.</source>
          <target state="translated">内置属性 &lt;code&gt;.sizeof&lt;/code&gt; ， &lt;code&gt;.alignof&lt;/code&gt; 和 &lt;code&gt;.mangleof&lt;/code&gt; 不得在结构，联合，类或枚举中声明为字段或方法。</target>
        </trans-unit>
        <trans-unit id="cb37eb5828bb8f76b215ba701695af10297cc319" translate="yes" xml:space="preserve">
          <source>The built-in address-of operator (unary &lt;code&gt;&amp;amp;&lt;/code&gt;) may only be applied to lvalues.</source>
          <target state="translated">内置地址运算符（一元 &lt;code&gt;&amp;amp;&lt;/code&gt; ）只能应用于左值。</target>
        </trans-unit>
        <trans-unit id="01d529a280bedf8d2329f923f87f28d6d2414970" translate="yes" xml:space="preserve">
          <source>The built-in char types are any of &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;wchar&lt;/code&gt; or &lt;code&gt;dchar&lt;/code&gt;, with or without qualifiers.</source>
          <target state="translated">内置的char类型是 &lt;code&gt;char&lt;/code&gt; ， &lt;code&gt;wchar&lt;/code&gt; 或 &lt;code&gt;dchar&lt;/code&gt; 中的任何一个，带有或不带有限定符。</target>
        </trans-unit>
        <trans-unit id="26447929ba19118cb6719911318de883e533656a" translate="yes" xml:space="preserve">
          <source>The built-in string types are &lt;code&gt;Char[]&lt;/code&gt;, where &lt;code&gt;Char&lt;/code&gt; is any of &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;wchar&lt;/code&gt; or &lt;code&gt;dchar&lt;/code&gt;, with or without qualifiers.</source>
          <target state="translated">内置的字符串类型为 &lt;code&gt;Char[]&lt;/code&gt; ，其中 &lt;code&gt;Char&lt;/code&gt; 是 &lt;code&gt;char&lt;/code&gt; ， &lt;code&gt;wchar&lt;/code&gt; 或 &lt;code&gt;dchar&lt;/code&gt; 中的任何一个，带有或不带有限定符。</target>
        </trans-unit>
        <trans-unit id="985d41f10ebe09bea42e87e43e676a34b5b701c9" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;gapWeightedSimilarity(s, t, 1)&lt;/code&gt; simply counts all of these matches and adds them up, returning 7.</source>
          <target state="translated">调用 &lt;code&gt;gapWeightedSimilarity(s, t, 1)&lt;/code&gt; 简单地计算所有这些匹配并将它们相加，返回7。</target>
        </trans-unit>
        <trans-unit id="9504202f5ac0a1e1b308309ee50027e163c8c607" translate="yes" xml:space="preserve">
          <source>The call above eliminated the gapped matches (&lt;code&gt;&quot;Hello&quot;, &quot;new&quot;&lt;/code&gt;), (&lt;code&gt;&quot;Hello&quot;, &quot;world&quot;&lt;/code&gt;), and (&lt;code&gt;&quot;Hello&quot;, &quot;new&quot;, &quot;world&quot;&lt;/code&gt;) from the tally. That leaves only 4 matches.</source>
          <target state="translated">上面的调用从计数中消除了空缺的匹配项（ &lt;code&gt;&quot;Hello&quot;, &quot;new&quot;&lt;/code&gt; ），（ &lt;code&gt;&quot;Hello&quot;, &quot;world&quot;&lt;/code&gt; ）和（ &lt;code&gt;&quot;Hello&quot;, &quot;new&quot;, &quot;world&quot;&lt;/code&gt; ）。那只剩下4场比赛。</target>
        </trans-unit>
        <trans-unit id="a0a65d3fa68c14100a930ea8ba7a95c4b2425c75" translate="yes" xml:space="preserve">
          <source>The call to &lt;code&gt;func()&lt;/code&gt; is ambiguous because Foo.func and Bar.func are in different scopes.</source>
          <target state="translated">由于Foo.func和Bar.func的作用域不同，因此对 &lt;code&gt;func()&lt;/code&gt; 的调用不明确。</target>
        </trans-unit>
        <trans-unit id="e538f3dd7f1bdd1b474917678b37be623289cdfe" translate="yes" xml:space="preserve">
          <source>The call will duplicate the array appropriately.  Note that checking for uniqueness during compilation is possible in certain cases, especially when a function is marked as a pure function. The following example does not need to call assumeUnique because the compiler can infer the uniqueness of the array in the pure function:</source>
          <target state="translated">调用会适当地复制数组。注意,在某些情况下,特别是当一个函数被标记为纯函数时,在编译过程中检查唯一性是可能的。下面的例子不需要调用 assumeUnique,因为编译器可以推断出纯函数中数组的唯一性。</target>
        </trans-unit>
        <trans-unit id="242f08d2b1a1a758366f7a48d7e4dad847e662cb" translate="yes" xml:space="preserve">
          <source>The callable that is called when a handled primitive throws a &lt;code&gt;Throwable&lt;/code&gt; of type &lt;code&gt;E&lt;/code&gt;. The handler must accept arguments of the form &lt;code&gt;E, ref IRange&lt;/code&gt; and its return value is used as the primitive's return value whenever &lt;code&gt;E&lt;/code&gt; is thrown. For &lt;code&gt;opIndex&lt;/code&gt;, the handler can optionally recieve a third argument; the index that caused the exception.</source>
          <target state="translated">当已处理原语抛出类型 &lt;code&gt;E&lt;/code&gt; 的 &lt;code&gt;Throwable&lt;/code&gt; 时调用的callable 。处理程序必须接受形式的参数 &lt;code&gt;E, ref IRange&lt;/code&gt; 每当它的返回值被用作原始的返回值 &lt;code&gt;E&lt;/code&gt; 被抛出。对于 &lt;code&gt;opIndex&lt;/code&gt; ，处理程序可以选择接收第三个参数；导致异常的索引。</target>
        </trans-unit>
        <trans-unit id="8595a4fb5e8942c865e60e579f4bc97ae9361768" translate="yes" xml:space="preserve">
          <source>The callable to apply on create.</source>
          <target state="translated">创建时要应用的可调用。</target>
        </trans-unit>
        <trans-unit id="9e7cb4c784340dbcc9223bb09fc5bd0008d15a78" translate="yes" xml:space="preserve">
          <source>The callable to apply on update.</source>
          <target state="translated">更新时应用的可调用。</target>
        </trans-unit>
        <trans-unit id="47f8d3d3341c2f3859f008d663d7d39abed383a3" translate="yes" xml:space="preserve">
          <source>The callback returns the incoming bytes read. If not the entire array is the request will abort. The special value .pauseRequest can be returned in order to pause the current request.</source>
          <target state="translated">回调返回读取到的字节。如果不是整个数组,请求将被中止。可以返回特殊值.pauseRequest来暂停当前的请求。</target>
        </trans-unit>
        <trans-unit id="7ff970a770b2ff7a8a51d3f9664a81966555d9c0" translate="yes" xml:space="preserve">
          <source>The callback returns the incoming bytes read. If not the entire array is the request will abort. The special value HTTP.pauseRequest can be returned in order to pause the current request.</source>
          <target state="translated">回调返回读取到的字节。如果不是整个数组,请求将被中止。为了暂停当前请求,可以返回特殊值HTTP.pauseRequest。</target>
        </trans-unit>
        <trans-unit id="8e149c07dded4d56d5080da41c572390f4d5c4e3" translate="yes" xml:space="preserve">
          <source>The callback returns the number of elements in the buffer that have been filled and are ready to send. The special value &lt;code&gt;.abortRequest&lt;/code&gt; can be returned in order to abort the current request. The special value &lt;code&gt;.pauseRequest&lt;/code&gt; can be returned in order to pause the current request.</source>
          <target state="translated">回调返回缓冲区中已填充并准备发送的元素数。可以返回特殊值 &lt;code&gt;.abortRequest&lt;/code&gt; 来中止当前请求。可以返回特殊值 &lt;code&gt;.pauseRequest&lt;/code&gt; ，以暂停当前请求。</target>
        </trans-unit>
        <trans-unit id="2137ada3ae84929eb868bf721851f3520aa621f8" translate="yes" xml:space="preserve">
          <source>The callback returns the number of elements in the buffer that have been filled and are ready to send. The special value &lt;code&gt;Curl.abortRequest&lt;/code&gt; can be returned in order to abort the current request. The special value &lt;code&gt;Curl.pauseRequest&lt;/code&gt; can be returned in order to pause the current request.</source>
          <target state="translated">回调返回缓冲区中已填充并准备发送的元素数。可以返回特殊值 &lt;code&gt;Curl.abortRequest&lt;/code&gt; 来中止当前请求。可以返回特殊值 &lt;code&gt;Curl.pauseRequest&lt;/code&gt; ，以暂停当前请求。</target>
        </trans-unit>
        <trans-unit id="559652851d8e835ca6e4e25200037a9b2b88d7e9" translate="yes" xml:space="preserve">
          <source>The callback returns the success state of the seeking &lt;a href=&quot;etc_c_curl#CurlSeek&quot;&gt;&lt;code&gt;etc.c.curl.CurlSeek&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">回调返回寻找&lt;a href=&quot;etc_c_curl#CurlSeek&quot;&gt; &lt;code&gt;etc.c.curl.CurlSeek&lt;/code&gt; &lt;/a&gt;的成功状态</target>
        </trans-unit>
        <trans-unit id="4f77b46c5f5f6357c24d9647b815993a85d323b8" translate="yes" xml:space="preserve">
          <source>The callback should return zero.</source>
          <target state="translated">回调应该返回零。</target>
        </trans-unit>
        <trans-unit id="bf29eeac01c5a4dd86a6df695ab4b58778a8d6c6" translate="yes" xml:space="preserve">
          <source>The callback will receive a header field key, value as parameter. The &lt;code&gt;const(char)[]&lt;/code&gt; arrays are not valid after the delegate has returned.</source>
          <target state="translated">回调将接收标头字段关键字，值作为参数。所述 &lt;code&gt;const(char)[]&lt;/code&gt; 阵列无效委托返回之后。</target>
        </trans-unit>
        <trans-unit id="0479a0d5e5b9b6df459258bae677881c90ce0ee0" translate="yes" xml:space="preserve">
          <source>The callee cleans the stack.</source>
          <target state="translated">受话人清理堆栈。</target>
        </trans-unit>
        <trans-unit id="969d6b1248484a0e1ba90ba5ae45f38dfe225ca5" translate="yes" xml:space="preserve">
          <source>The caller guarantees that there are no other live pointers to the passed memory block, still it might not be freed immediately by &lt;code&gt;realloc&lt;/code&gt;. The garbage collector can reclaim the memory block in a later collection if it is unused. If allocation fails, this function will throw an &lt;code&gt;OutOfMemoryError&lt;/code&gt;.</source>
          <target state="translated">调用方保证没有其他活动指针指向已传递的内存块，但仍可能不会被 &lt;code&gt;realloc&lt;/code&gt; 立即释放。垃圾回收器可以在以后的回收中回收未使用的内存块。如果分配失败，此函数将抛出 &lt;code&gt;OutOfMemoryError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="42c8382f8ef7fb6520cb3687eb152b34b852d9fc" translate="yes" xml:space="preserve">
          <source>The caller is expected to clean the stack. &lt;code&gt;_argptr&lt;/code&gt; is not passed, it is computed by the callee.</source>
          <target state="translated">呼叫者应清理堆栈。 &lt;code&gt;_argptr&lt;/code&gt; 未传递，它由被调用者计算。</target>
        </trans-unit>
        <trans-unit id="71f4f46b73c55f9c109f0c80b9ef8abbb104d1fb" translate="yes" xml:space="preserve">
          <source>The calling thread must be attached to the runtime.</source>
          <target state="translated">调用线程必须连接到运行时。</target>
        </trans-unit>
        <trans-unit id="958f07aa30dc8c63baec5ad6b7a6ab8de498d71d" translate="yes" xml:space="preserve">
          <source>The canonical name is returned in &lt;code&gt;canonicalName&lt;/code&gt; member in the first &lt;code&gt;AddressInfo&lt;/code&gt;.</source>
          <target state="translated">在第一个 &lt;code&gt;AddressInfo&lt;/code&gt; 中的 &lt;code&gt;canonicalName&lt;/code&gt; 成员中返回规范名称。</target>
        </trans-unit>
        <trans-unit id="5578f20f728ef7ea894f9c8485dc8375879fa1eb" translate="yes" xml:space="preserve">
          <source>The capacity of a slice may be impacted by operations on other slices.</source>
          <target state="translated">一个片子的容量可能会受到其他片子操作的影响。</target>
        </trans-unit>
        <trans-unit id="107b78d2e608ef92e8a7f001aab1e580890d2636" translate="yes" xml:space="preserve">
          <source>The capitalized string.</source>
          <target state="translated">大写的字符串。</target>
        </trans-unit>
        <trans-unit id="a02d900e092203fe7acb10d7253e6c7295d71b57" translate="yes" xml:space="preserve">
          <source>The case expressions cannot evaluate to a run time initialized value.</source>
          <target state="translated">案例表达式不能评估为运行时的初始化值。</target>
        </trans-unit>
        <trans-unit id="c660de992148409122dcd32983da08c9290b863c" translate="yes" xml:space="preserve">
          <source>The case expressions must all evaluate to a constant value or array, or a runtime initialized const or immutable variable of integral type. They must be implicitly convertible to the type of the switch &lt;a href=&quot;expression#Expression&quot;&gt;&lt;i&gt;Expression&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">案例表达式必须全部求值为常数值或数组，或运行时初始化的const或整数类型的不可变变量。它们必须隐式转换为Switch &lt;a href=&quot;expression#Expression&quot;&gt;&lt;i&gt;Expression&lt;/i&gt;&lt;/a&gt;的类型。</target>
        </trans-unit>
        <trans-unit id="5f4e6b9553e729310217386d882aa9d464ad3e08" translate="yes" xml:space="preserve">
          <source>The case expressions, &lt;a href=&quot;expression#ArgumentList&quot;&gt;&lt;i&gt;ArgumentList&lt;/i&gt;&lt;/a&gt;, are a comma separated list of expressions.</source>
          <target state="translated">案例表达式&lt;a href=&quot;expression#ArgumentList&quot;&gt;&lt;i&gt;ArgumentList&lt;/i&gt;&lt;/a&gt;是逗号分隔的表达式列表。</target>
        </trans-unit>
        <trans-unit id="ed530c7eb728f8fa72fe143a48d1125946f28cef" translate="yes" xml:space="preserve">
          <source>The cast to &lt;code&gt;int&lt;/code&gt; is required.</source>
          <target state="translated">强制转换为 &lt;code&gt;int&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c065923e841d97029a1a1a23e3c446aaf97b033" translate="yes" xml:space="preserve">
          <source>The character that terminates a line</source>
          <target state="translated">终止一行的字符</target>
        </trans-unit>
        <trans-unit id="629001ed0c4dadc576ebea811f98cc1aed6e90df" translate="yes" xml:space="preserve">
          <source>The character to represent a comma in the specification</source>
          <target state="translated">规范中表示逗号的字符</target>
        </trans-unit>
        <trans-unit id="ec12026df227efabbda621551d1564e02d496853" translate="yes" xml:space="preserve">
          <source>The character to represent a quote in the specification</source>
          <target state="translated">在规格中表示引号的字符</target>
        </trans-unit>
        <trans-unit id="ed980b4c59776662298660727d4c9f56b2f99259" translate="yes" xml:space="preserve">
          <source>The character to test.</source>
          <target state="translated">要测试的角色。</target>
        </trans-unit>
        <trans-unit id="f806bb97e00ae2a4d1965414bf699f20536e139e" translate="yes" xml:space="preserve">
          <source>The character to use for filling excess space in the field</source>
          <target state="translated">用于填充字段中多余空间的字符。</target>
        </trans-unit>
        <trans-unit id="7954bf846b49b756c8f7adbc1f7bb59d31d8fe0f" translate="yes" xml:space="preserve">
          <source>The character-based range to be split. Must be a string, or a random-access range of character types.</source>
          <target state="translated">要分割的基于字符的范围。必须是一个字符串,或随机访问的字符类型范围。</target>
        </trans-unit>
        <trans-unit id="da430ad7582915a68166d7b59e0099addfd5c754" translate="yes" xml:space="preserve">
          <source>The characters to remove from the string.</source>
          <target state="translated">要从字符串中删除的字符。</target>
        </trans-unit>
        <trans-unit id="0bc92faf6490d5bb1265aa7a3286ff3cc0386eb8" translate="yes" xml:space="preserve">
          <source>The characters to replace with.</source>
          <target state="translated">的字符来代替。</target>
        </trans-unit>
        <trans-unit id="b24b1e6a036609d0af960c16ec68d51a3e145307" translate="yes" xml:space="preserve">
          <source>The characters to replace.</source>
          <target state="translated">要替换的字符。</target>
        </trans-unit>
        <trans-unit id="da530bf40507c33ab0ce7b6f55c2e0bfe50af65c" translate="yes" xml:space="preserve">
          <source>The choice of the normalization form depends on the particular use case. NFC is the best form for general text, since it's more compatible with strings converted from legacy encodings. NFKC is the preferred form for identifiers, especially where there are security concerns. NFD and NFKD are the most useful for internal processing.</source>
          <target state="translated">正则化形式的选择取决于特定的使用情况。NFC是一般文本的最佳形式,因为它与从传统编码转换而来的字符串更加兼容。NFKC是标识符的首选形式,特别是在有安全问题的情况下。NFD和NFKD对内部处理最有用。</target>
        </trans-unit>
        <trans-unit id="f5c734e10fd22e90551eca30f40d587d99f0c42a" translate="yes" xml:space="preserve">
          <source>The class allocator is not called if the instance is created on the stack.</source>
          <target state="translated">如果实例是在堆栈上创建的,则不调用类分配器。</target>
        </trans-unit>
        <trans-unit id="888d63439c91bbcddad644e4c7db9438fc2745dc" translate="yes" xml:space="preserve">
          <source>The class declaration this belongs to.</source>
          <target state="translated">这所属的类声明。</target>
        </trans-unit>
        <trans-unit id="9821e074c45da0757bbe913fb06d396a19d66ece" translate="yes" xml:space="preserve">
          <source>The class definition:</source>
          <target state="translated">类定义。</target>
        </trans-unit>
        <trans-unit id="6cd8612310d940ff26e5edb5b4fcdb1ec41c2ab8" translate="yes" xml:space="preserve">
          <source>The class destructor will be called when the result of &lt;code&gt;scoped()&lt;/code&gt; is itself destroyed.</source>
          <target state="translated">当 &lt;code&gt;scoped()&lt;/code&gt; 的结果本身被销毁时，将调用类析构函数。</target>
        </trans-unit>
        <trans-unit id="c93c7a1d79db5f0e6fcfb2d97ac7ab27199857e4" translate="yes" xml:space="preserve">
          <source>The code above is equivalent to:</source>
          <target state="translated">上述代码相当于:</target>
        </trans-unit>
        <trans-unit id="5b07f3ff2ae08c1115f9318187e98dfad8b61d12" translate="yes" xml:space="preserve">
          <source>The code below defines a scalable allocator consisting of 1 MB (or larger) blocks fetched from the garbage-collected heap. Each block is organized as a KR-style heap. More blocks are allocated and freed on a need basis.  This is the closest example to the allocator introduced in the K&amp;amp;R book. It should perform slightly better because instead of searching through one large free list, it searches through several shorter lists in LRU order. Also, it actually returns memory to the operating system when possible.</source>
          <target state="translated">下面的代码定义了一个可伸缩的分配器，该分配器由从垃圾回收堆中提取的1 MB（或更大）的块组成。每个块都组织为KR样式的堆。根据需要分配和释放更多块。这是最接近K＆R书中介绍的分配器的示例。它的性能应稍好一些，因为它不是按一个大的空闲列表搜索，而是按LRU顺序搜索几个较短的列表。另外，它实际上尽可能地将内存返回给操作系统。</target>
        </trans-unit>
        <trans-unit id="12ac0fdde9cbd45bcf0987afae5cbf0bd1ef3d0f" translate="yes" xml:space="preserve">
          <source>The code example below shows a simple implementation of a 2-dimensional array with overloaded indexing and slicing operators. The explanations of the various constructs employed are given in the sections following.</source>
          <target state="translated">下面的代码示例显示了一个带有重载索引和分片运算符的二维数组的简单实现。在下面的章节中对所使用的各种构造进行了解释。</target>
        </trans-unit>
        <trans-unit id="0ef6a79ff5d24e866faf6946cbbd2a6330b8fc2c" translate="yes" xml:space="preserve">
          <source>The code generated by these three functions is identical. To indicate that these can be one function, the inout type constructor is employed:</source>
          <target state="translated">这三个函数生成的代码是相同的。为了表示这些函数可以是一个函数,采用了inout类型构造函数。</target>
        </trans-unit>
        <trans-unit id="a7b0bdcbeba131b0b10ad17da0e5e625fbde9d3f" translate="yes" xml:space="preserve">
          <source>The code in the invariant may not call any public non-static members of the class or struct, either directly or indirectly. Doing so will result in a stack overflow, as the invariant will wind up being called in an infinitely recursive manner.</source>
          <target state="translated">不变式中的代码不能直接或间接调用类或结构的任何公共非静态成员。这样做会导致堆栈溢出,因为不变式会以无限递归的方式被调用。</target>
        </trans-unit>
        <trans-unit id="5567d3893a01342e1a0bc105518655a6faaaab38" translate="yes" xml:space="preserve">
          <source>The code that detects an error knows more about the error than the code that must recover from the error.</source>
          <target state="translated">检测错误的代码比必须从错误中恢复的代码更了解错误。</target>
        </trans-unit>
        <trans-unit id="820bb6ee9e6aba52c669ddd54299d0ca78f94c71" translate="yes" xml:space="preserve">
          <source>The code to implement this API is not available in the public release of SQLite.</source>
          <target state="translated">实现这个API的代码在SQLite的公开版本中是不可用的。</target>
        </trans-unit>
        <trans-unit id="0b173c608e91ac1dd9ab1e2ebbf859ba8dcba5c7" translate="yes" xml:space="preserve">
          <source>The comment form must match the D language comments.</source>
          <target state="translated">评论表必须与D语言评论相匹配。</target>
        </trans-unit>
        <trans-unit id="2a6df46d142eee7bea5f31e6c40f2872f6843d42" translate="yes" xml:space="preserve">
          <source>The common use case for printing a stack trace is when &lt;code&gt;toString&lt;/code&gt; is called on a &lt;code&gt;Throwable&lt;/code&gt; (see &lt;code&gt;object.d&lt;/code&gt;). It will iterate on what is likely to be the default trace handler (see &lt;code&gt;core.runtime : defaultTraceHandler&lt;/code&gt;). The class returned by &lt;code&gt;defaultTraceHandler&lt;/code&gt; is what ends up calling into this module, through the use of &lt;code&gt;core.internal.traits : externDFunc&lt;/code&gt;.</source>
          <target state="translated">打印堆栈跟踪的常见用例是在 &lt;code&gt;Throwable&lt;/code&gt; 上调用 &lt;code&gt;toString&lt;/code&gt; 的时间（请参见 &lt;code&gt;object.d&lt;/code&gt; ）。它将迭代可能是默认跟踪处理程序的内容（请参阅 &lt;code&gt;core.runtime : defaultTraceHandler&lt;/code&gt; ）。通过返回的类 &lt;code&gt;defaultTraceHandler&lt;/code&gt; 就是最终调用此模块中，通过使用 &lt;code&gt;core.internal.traits : externDFunc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c27e68ae34b416356827d090284f419f63369dc7" translate="yes" xml:space="preserve">
          <source>The communication domain used to resolve an address.</source>
          <target state="translated">用于解析地址的通信域。</target>
        </trans-unit>
        <trans-unit id="a8ad0e630b8b0da66aee6c7edb8a63daad73619d" translate="yes" xml:space="preserve">
          <source>The comparison predicate</source>
          <target state="translated">比较谓词</target>
        </trans-unit>
        <trans-unit id="8236e0769cfa2f3f369ae0002ca893f3e532ba5d" translate="yes" xml:space="preserve">
          <source>The comparison to use.</source>
          <target state="translated">要用的比较。</target>
        </trans-unit>
        <trans-unit id="5dabbbc6b85984f7c631dd31a40e4692958581a7" translate="yes" xml:space="preserve">
          <source>The comparison value.</source>
          <target state="translated">比较值。</target>
        </trans-unit>
        <trans-unit id="1884ff0398391fb51645ddf67a895753f5f23bb8" translate="yes" xml:space="preserve">
          <source>The compile time length of &lt;code&gt;arr&lt;/code&gt; if it's known.</source>
          <target state="translated">&lt;code&gt;arr&lt;/code&gt; 的编译时间长度（如果已知）。</target>
        </trans-unit>
        <trans-unit id="20e21ca3ed0c66cb684853be4c9050ce61bc28b7" translate="yes" xml:space="preserve">
          <source>The compiler is free to assume the assert expression is true and optimize subsequent code accordingly.</source>
          <target state="translated">编译器可以自由假设断言表达式为真,并据此优化后续代码。</target>
        </trans-unit>
        <trans-unit id="7c2be101920c07dfed2a3b2ae4e783a017a150b5" translate="yes" xml:space="preserve">
          <source>The compiler lowers expressions of &lt;code&gt;cast(TTo[])TFrom[]&lt;/code&gt; to this implementation.</source>
          <target state="translated">编译器将 &lt;code&gt;cast(TTo[])TFrom[]&lt;/code&gt; 表达式降低为此实现。</target>
        </trans-unit>
        <trans-unit id="3119e558dc9b76ce9fd8e624bacd61cca8100ec6" translate="yes" xml:space="preserve">
          <source>The compiler makes the decision whether to inline a function or not. This decision may be controlled by &lt;a href=&quot;pragma#inline&quot;&gt;&lt;code&gt;pragma(inline)&lt;/code&gt;&lt;/a&gt;, assuming that the compiler implements it, which is not mandatory.</source>
          <target state="translated">编译器决定是否内联函数。假定编译器实现了该决定，则该决定可由&lt;a href=&quot;pragma#inline&quot;&gt; &lt;code&gt;pragma(inline)&lt;/code&gt; &lt;/a&gt;控制，这不是强制性的。</target>
        </trans-unit>
        <trans-unit id="291025563ce73c7bc11eafe0442e20ca4b9ab725" translate="yes" xml:space="preserve">
          <source>The compiler performs the following checks to enforce the correct usage of the &lt;code&gt;@selector&lt;/code&gt; attribute:</source>
          <target state="translated">编译器执行以下检查以强制正确使用 &lt;code&gt;@selector&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="634747431ffe30a4862ec872dad71a6eb253993f" translate="yes" xml:space="preserve">
          <source>The compiler will not give an error if the hidden function is disjoint, as far as overloading is concerned, from all the other virtual functions is the inheritance hierarchy.</source>
          <target state="translated">如果隐藏函数是不相干的,就重载而言,编译器不会给出一个错误,从所有其他虚拟函数是继承层次结构。</target>
        </trans-unit>
        <trans-unit id="7e55718066f0afe8bf9a0cce63044c7450d60879" translate="yes" xml:space="preserve">
          <source>The compiler will then know to use the symbols from std.datetime.stopwatch rather than the deprecated ones from std.datetime.package.</source>
          <target state="translated">编译器将知道使用std.datetime.stopwatch中的符号,而不是使用std.datetime.pack中的废弃符号。</target>
        </trans-unit>
        <trans-unit id="1213489b3c94adf580de8081b13190aa4c164fbb" translate="yes" xml:space="preserve">
          <source>The complex base 10 logarithm of &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 的以10为底的对数</target>
        </trans-unit>
        <trans-unit id="4bb19e5db380a52dd063f45e3673e8d6790eab39" translate="yes" xml:space="preserve">
          <source>The complex base e exponential of &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 的复数基数e指数</target>
        </trans-unit>
        <trans-unit id="473d434a9b1e1fa3c3fa95983b0cf370022ebc41" translate="yes" xml:space="preserve">
          <source>The complex conjugate of &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;z&lt;/code&gt; 的复共轭。</target>
        </trans-unit>
        <trans-unit id="6139a83329c7e8e7601513a9054b1b269eca88d9" translate="yes" xml:space="preserve">
          <source>The complex natural logarithm of &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 的复自然对数</target>
        </trans-unit>
        <trans-unit id="0c3998eac6614ebf21d49abc1e3b482249568f18" translate="yes" xml:space="preserve">
          <source>The complex number with the given modulus and argument.</source>
          <target state="translated">给定模数和参数的复数。</target>
        </trans-unit>
        <trans-unit id="ffd55f19d01437a4948ba1ff58d0011690958c82" translate="yes" xml:space="preserve">
          <source>The concepts of &lt;a href=&quot;#Canonical%20equivalent&quot;&gt;canonical equivalent&lt;/a&gt; or &lt;a href=&quot;#Compatibility%20equivalent&quot;&gt;compatibility equivalent&lt;/a&gt; characters in the Unicode Standard make it necessary to have a full, formal definition of equivalence for Unicode strings. String equivalence is determined by a process called normalization, whereby strings are converted into forms which are compared directly for identity. This is the primary goal of the normalization process, see the function &lt;a href=&quot;#normalize&quot;&gt;&lt;code&gt;normalize&lt;/code&gt;&lt;/a&gt; to convert into any of the four defined forms.</source>
          <target state="translated">Unicode标准中的&lt;a href=&quot;#Canonical%20equivalent&quot;&gt;规范等效&lt;/a&gt;或&lt;a href=&quot;#Compatibility%20equivalent&quot;&gt;兼容等效&lt;/a&gt;字符的概念使得有必要对Unicode字符串具有完整的正式等效定义。字符串的等效性由称为规范化的过程确定，在此过程中，字符串将转换为直接比较其身份的形式。这是规范化过程的主要目标，请参见将&lt;a href=&quot;#normalize&quot;&gt; &lt;code&gt;normalize&lt;/code&gt; &lt;/a&gt;转换为四种定义形式中的任何一种的功能。</target>
        </trans-unit>
        <trans-unit id="2abedb352be4b4cad8d77bc09501301df20a32a4" translate="yes" xml:space="preserve">
          <source>The condition is satisfied if</source>
          <target state="translated">如果</target>
        </trans-unit>
        <trans-unit id="2f916d19cc4604e724f8fa53e2900b77b6ea76e6" translate="yes" xml:space="preserve">
          <source>The condition is satisfied if &lt;code&gt;Type&lt;/code&gt; is semantically correct (it must be syntactically correct regardless).</source>
          <target state="translated">如果 &lt;code&gt;Type&lt;/code&gt; 在语义上正确（无论在语法上必须正确），则满足该条件。</target>
        </trans-unit>
        <trans-unit id="e653b278fd905a7f3ea022f157c287cd4a9f01c9" translate="yes" xml:space="preserve">
          <source>The condition module provides a primitive for synchronized condition checking.</source>
          <target state="translated">条件模块为同步条件检查提供了一个基元。</target>
        </trans-unit>
        <trans-unit id="6ccd24f12a395f85abd20793c28ab1014d198ff2" translate="yes" xml:space="preserve">
          <source>The condition must be &lt;code&gt;true&lt;/code&gt; for the data to be logged.</source>
          <target state="translated">对于要记录的数据，该条件必须为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7f67746204d06208bb04d7be048bff0edfd1312d" translate="yes" xml:space="preserve">
          <source>The conditions for the two-range case are as follows:</source>
          <target state="translated">两种范围情况的条件如下:</target>
        </trans-unit>
        <trans-unit id="9db8141e8da442e0a29cf9a7252671c3c3646d9b" translate="yes" xml:space="preserve">
          <source>The config module contains utility routines and configuration information specific to this package.</source>
          <target state="translated">config模块包含了本软件包特有的实用程序和配置信息。</target>
        </trans-unit>
        <trans-unit id="25247015a813aa1799daef3d9f06262e98658698" translate="yes" xml:space="preserve">
          <source>The connection to use e.g. HTTP or FTP.</source>
          <target state="translated">要使用的连接,如HTTP或FTP。</target>
        </trans-unit>
        <trans-unit id="150a6335aad7ff29ac857e269ddb2bcb66d82956" translate="yes" xml:space="preserve">
          <source>The constructed &lt;code&gt;to&lt;/code&gt;</source>
          <target state="translated">构造 &lt;code&gt;to&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="76163a15ff5da4a6811b7d818ac307640ccf574e" translate="yes" xml:space="preserve">
          <source>The constructor does not initialize the attributes. To initialize the attributes, you access the &lt;b&gt;attr&lt;/b&gt; member variable.</source>
          <target state="translated">构造函数不会初始化属性。要初始化属性，请访问&lt;b&gt;attr&lt;/b&gt;成员变量。</target>
        </trans-unit>
        <trans-unit id="bca7fb1c9668c6b5381caf14aec377df51a6a261" translate="yes" xml:space="preserve">
          <source>The constructor leaves the digest in an initialized state, so that this method only needs to be called if an unfinished digest is to be reused.</source>
          <target state="translated">构造函数使摘要处于初始化状态,因此只有当一个未完成的摘要要被重用时才需要调用这个方法。</target>
        </trans-unit>
        <trans-unit id="70a470b379ed3334099897b9dc79f34ba48d24b6" translate="yes" xml:space="preserve">
          <source>The content length in bytes of the ftp data.</source>
          <target state="translated">ftp数据的内容长度,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="d2356d15b14610202018dcbb7e4c8229b54b1b8a" translate="yes" xml:space="preserve">
          <source>The content length in bytes when using request that has content e.g. POST/PUT and not using chunked transfer. Is set as the &quot;Content-Length&quot; header. Set to ulong.max to reset to chunked transfer.</source>
          <target state="translated">当使用有内容的请求时,例如POST/PUT,不使用分块传输时的内容长度,以字节为单位。被设置为 &quot;Content-Length &quot;头。如果设置为ulong.max,则重置为分块传输。</target>
        </trans-unit>
        <trans-unit id="c5718211c764df7e99cb685b897ebad52a7de67a" translate="yes" xml:space="preserve">
          <source>The content of &lt;code&gt;buffer&lt;/code&gt; is reused across calls. In the example above, &lt;code&gt;buffer.length&lt;/code&gt; is 4096 for all iterations, except for the last one, in which case &lt;code&gt;buffer.length&lt;/code&gt; may be less than 4096 (but always greater than zero).  In case of an I/O error, an &lt;code&gt;StdioException&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; 的内容可在调用之间重用。在上面的示例中，对于所有迭代， &lt;code&gt;buffer.length&lt;/code&gt; 为4096（最后一次除外），在这种情况下， &lt;code&gt;buffer.length&lt;/code&gt; 可能小于4096（但始终大于零）。如果发生I / O错误， &lt;code&gt;StdioException&lt;/code&gt; 引发StdioException。</target>
        </trans-unit>
        <trans-unit id="2138553c63d001080b141495fda74a55a8794df5" translate="yes" xml:space="preserve">
          <source>The content of an environment variable</source>
          <target state="translated">环境变量的内容</target>
        </trans-unit>
        <trans-unit id="1b303287508120b2a69f862e57e4ac40cec3a22f" translate="yes" xml:space="preserve">
          <source>The content of the extra data field for this member. See &lt;a href=&quot;https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT&quot;&gt; original documentation&lt;/a&gt; for a description of the general format of this data. May contain undocumented 3rd-party data.</source>
          <target state="translated">此成员的额外数据字段的内容。有关此数据的一般格式的说明，请参阅&lt;a href=&quot;https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT&quot;&gt;原始文档&lt;/a&gt;。可能包含未记录的第三方数据。</target>
        </trans-unit>
        <trans-unit id="5e9be2c8175e2abe02a707a8002878697ac86dfd" translate="yes" xml:space="preserve">
          <source>The contents of strings and comments are not tokenized. Consequently, comment openings occurring within a string do not begin a comment, and string delimiters within a comment do not affect the recognition of comment closings and nested &lt;code&gt;/+&lt;/code&gt; comment openings. With the exception of &lt;code&gt;/+&lt;/code&gt; occurring within a &lt;code&gt;/+&lt;/code&gt; comment, comment openings within a comment are ignored.</source>
          <target state="translated">字符串和注释的内容未标记。因此，出现在字符串内的注释开头不会开始注释，并且注释内的字符串定界符不会影响注释结尾和嵌套的 &lt;code&gt;/+&lt;/code&gt; 注释开头的识别。随着外 &lt;code&gt;/+&lt;/code&gt; 一个内发生 &lt;code&gt;/+&lt;/code&gt; 评论，评论中的评论开口被忽略。</target>
        </trans-unit>
        <trans-unit id="acc47ba92e60a8eb6a7f0995cfd09e1266cb2c0b" translate="yes" xml:space="preserve">
          <source>The convenient digest template allows for quick hashing of any data.</source>
          <target state="translated">方便的文摘模板允许任何数据的快速哈希。</target>
        </trans-unit>
        <trans-unit id="9df1871b1d5b6cf09ccc48d6467fcecce1d269f6" translate="yes" xml:space="preserve">
          <source>The converted associative array initializer or ErrorExp if &lt;code&gt;ai&lt;/code&gt; is not an associative array initializer.</source>
          <target state="translated">转换后的关联数组初始值设定项；如果 &lt;code&gt;ai&lt;/code&gt; 不是关联数组初始值设定项，则返回ErrorExp 。</target>
        </trans-unit>
        <trans-unit id="f43effea59b8beccdd892ba167ecb555ed8c79da" translate="yes" xml:space="preserve">
          <source>The copy constructor can be overloaded with different qualifiers applied to the parameter (copying from a qualified source) or to the copy constructor itself (copying to a qualified destination):</source>
          <target state="translated">复制构造函数可以通过不同的限定符重载应用于参数(从限定的源复制)或复制构造函数本身(复制到限定的目标)。</target>
        </trans-unit>
        <trans-unit id="190d6795cdd5f40388f14ac3afa87aeffbee0f68" translate="yes" xml:space="preserve">
          <source>The copy constructor is type checked as a normal constructor.</source>
          <target state="translated">复制构造函数与普通构造函数一样进行类型检查。</target>
        </trans-unit>
        <trans-unit id="8ce4fd58f0ef3f442e38a96e86e12b71ac036747" translate="yes" xml:space="preserve">
          <source>The corresponding argument is formatted in a manner consistent with its type:</source>
          <target state="translated">相应参数的格式与其类型一致。</target>
        </trans-unit>
        <trans-unit id="48e51bdf1a95a79ac6426f7eff677cbb11ecae43" translate="yes" xml:space="preserve">
          <source>The corresponding argument must be a character type.</source>
          <target state="translated">相应的参数必须是一个字符类型。</target>
        </trans-unit>
        <trans-unit id="0274ce33cba3929bfbdf7475c2fd6fc9d51d564e" translate="yes" xml:space="preserve">
          <source>The corresponding argument must be an integral type and is formatted as an integer. If the argument is a signed type and the</source>
          <target state="translated">相应的参数必须是一个积分类型,并且格式为整数。如果参数是有符号类型,并且</target>
        </trans-unit>
        <trans-unit id="0178a031a9f0514977acc39575ef4aaa0e2662a0" translate="yes" xml:space="preserve">
          <source>The corresponding lowercase letter, if &lt;code&gt;c&lt;/code&gt; is an uppercase ASCII character, otherwise &lt;code&gt;c&lt;/code&gt; itself.</source>
          <target state="translated">如果 &lt;code&gt;c&lt;/code&gt; 是大写ASCII字符，则对应的小写字母，否则 &lt;code&gt;c&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="69cee4c45eeccc903fcf47055f5f19036cae6663" translate="yes" xml:space="preserve">
          <source>The corresponding unsigned numeric type for &lt;code&gt;T&lt;/code&gt; with the same type qualifiers.  If &lt;code&gt;T&lt;/code&gt; is not a integral or vector, a compile-time error is given.</source>
          <target state="translated">具有相同类型限定符的 &lt;code&gt;T&lt;/code&gt; 的对应的无符号数字类型。如果 &lt;code&gt;T&lt;/code&gt; 不是整数或向量，则给出编译时错误。</target>
        </trans-unit>
        <trans-unit id="65ac2725a8076a2b686ff66848f84c573dbad022" translate="yes" xml:space="preserve">
          <source>The corresponding uppercase letter, if &lt;code&gt;c&lt;/code&gt; is a lowercase ASCII character, otherwise &lt;code&gt;c&lt;/code&gt; itself.</source>
          <target state="translated">如果 &lt;code&gt;c&lt;/code&gt; 是小写ASCII字符，则对应的大写字母，否则 &lt;code&gt;c&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="c9ce88bd48ff277e4bfb8bb20fde5641ab64da29" translate="yes" xml:space="preserve">
          <source>The coverage callback.</source>
          <target state="translated">覆盖率回调。</target>
        </trans-unit>
        <trans-unit id="fe4e5d3b2725d57149f74ea4401dddd72e356025" translate="yes" xml:space="preserve">
          <source>The created GC instance or &lt;code&gt;null&lt;/code&gt; if no factory for that name was registered</source>
          <target state="translated">创建的GC实例；如果未注册该名称的工厂，则为 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="25c75bcefa05f1c507f7f1fc6ff9cd42539bbd75" translate="yes" xml:space="preserve">
          <source>The curl_easy_pause function pauses or unpauses transfers. Select the new state by setting the bitmask, use the convenience defines below.</source>
          <target state="translated">curl_easy_pause函数可以暂停或取消暂停传输。通过设置位掩码来选择新的状态,使用下面的方便定义。</target>
        </trans-unit>
        <trans-unit id="153bfd2d6b2d30ac140c40feedadba5366f389ef" translate="yes" xml:space="preserve">
          <source>The curl_easy_strerror function may be used to turn a CURLcode value into the equivalent human readable error string. This is useful for printing meaningful error messages.</source>
          <target state="translated">curl_easy_strerror函数可以用来将一个CURLcode值转化为等价的人类可读的错误字符串。这对于打印有意义的错误信息非常有用。</target>
        </trans-unit>
        <trans-unit id="e7d8cb9ade20ed61c82c1a60ebe359477845f192" translate="yes" xml:space="preserve">
          <source>The curl_multi_strerror function may be used to turn a CURLMcode value into the equivalent human readable error string. This is useful for printing meaningful error messages.</source>
          <target state="translated">curl_multi_strerror函数可以用来将一个CURLMcode值转化为等价的人类可读的错误字符串。这对于打印有意义的错误信息非常有用。</target>
        </trans-unit>
        <trans-unit id="8ac8c7edec906e82e20cff95e57160d4c2ae8742" translate="yes" xml:space="preserve">
          <source>The curl_share_strerror function may be used to turn a CURLSHcode value into the equivalent human readable error string. This is useful for printing meaningful error messages.</source>
          <target state="translated">curl_share_strerror函数可以用来将CURLSHcode值转化为等价的人类可读错误字符串。这对于打印有意义的错误信息非常有用。</target>
        </trans-unit>
        <trans-unit id="12b95a210f2fd732ae6323a477ee3db950ce1e48" translate="yes" xml:space="preserve">
          <source>The current capacity of this &lt;code&gt;SocketSet&lt;/code&gt;. The exact meaning of the return value varies from platform to platform.</source>
          <target state="translated">此 &lt;code&gt;SocketSet&lt;/code&gt; 的当前容量。返回值的确切含义因平台而异。</target>
        </trans-unit>
        <trans-unit id="b7e8d20bcf3e91b443f49906cb7f9c26202d7b33" translate="yes" xml:space="preserve">
          <source>The current chunk of encoded data.</source>
          <target state="translated">当前的编码数据块。</target>
        </trans-unit>
        <trans-unit id="5f09ff18e0bf3e3a50451c990acfd44da2f4d0cf" translate="yes" xml:space="preserve">
          <source>The current collect handler or null if none has been set.</source>
          <target state="translated">当前的收集处理程序,如果没有设置,则为空。</target>
        </trans-unit>
        <trans-unit id="ff00e2ec15ad157fa0acd49db009126af4219c9c" translate="yes" xml:space="preserve">
          <source>The current day of the week.</source>
          <target state="translated">当前一周的日子。</target>
        </trans-unit>
        <trans-unit id="5445bb4bc1730b9d0cce5b36844644b773e9edcb" translate="yes" xml:space="preserve">
          <source>The current decoded byte.</source>
          <target state="translated">当前解码的字节。</target>
        </trans-unit>
        <trans-unit id="d4f2882db12d78c2fc4e970047ad93065891fe53" translate="yes" xml:space="preserve">
          <source>The current directory for the parent process.</source>
          <target state="translated">父进程的当前目录。</target>
        </trans-unit>
        <trans-unit id="62615ccff9de65abffb1ae1e70b58ec0562e8494" translate="yes" xml:space="preserve">
          <source>The current encoded character.</source>
          <target state="translated">当前编码的字符。</target>
        </trans-unit>
        <trans-unit id="2bcc037a390d8689344ebfd625c83c159bbdaa3a" translate="yes" xml:space="preserve">
          <source>The current implementation is contained in and defined by &lt;a href=&quot;https://github.com/dlang/druntime/blob/master/src/rt/aaA.d&quot;&gt;rt/aaA.d&lt;/a&gt;.</source>
          <target state="translated">当前的实现包含在&lt;a href=&quot;https://github.com/dlang/druntime/blob/master/src/rt/aaA.d&quot;&gt;rt / aaA.d中并由&lt;/a&gt;其定义。</target>
        </trans-unit>
        <trans-unit id="135564ffafda532e35fa0b7d48812ffee033cd42" translate="yes" xml:space="preserve">
          <source>The current implementation is optimized for little endian architectures. It will exhibit different results on big endian architectures and a slightly less uniform distribution.</source>
          <target state="translated">目前的实现是针对小恩迪安架构优化的。它将在大恩迪安架构上表现出不同的结果,并且分布略显不均匀。</target>
        </trans-unit>
        <trans-unit id="5d6f2623d60fb655268313ce604e66563648e710" translate="yes" xml:space="preserve">
          <source>The current implementation makes use of the zlib compression library.</source>
          <target state="translated">目前的实现利用了zlib压缩库。</target>
        </trans-unit>
        <trans-unit id="225274ac2b2419e7addd684159bba23d3f813f5d" translate="yes" xml:space="preserve">
          <source>The current implementation mostly conforms to &lt;a href=&quot;https://www.iso.org/standard/60101.html&quot;&gt;ISO/IEC 21320-1:2015&lt;/a&gt;, which means,</source>
          <target state="translated">当前的实现方式大部分符合&lt;a href=&quot;https://www.iso.org/standard/60101.html&quot;&gt;ISO / IEC 21320-1：2015&lt;/a&gt;，这意味着，</target>
        </trans-unit>
        <trans-unit id="8b386bdee0746666a56a36200a693020a21530e4" translate="yes" xml:space="preserve">
          <source>The current legacy module unit tester handler or null if none has been set.</source>
          <target state="translated">当前遗留模块单元测试器处理程序,如果没有设置,则为空。</target>
        </trans-unit>
        <trans-unit id="8ef65e94b9168b0ff7203f6b263d0e8b2bd6eeac" translate="yes" xml:space="preserve">
          <source>The current module unit tester handler or null if none has been set.</source>
          <target state="translated">当前模块单元测试程序,如果没有设置,则为空。</target>
        </trans-unit>
        <trans-unit id="6f8938955ef3df10335744a73b91094b9fffec70" translate="yes" xml:space="preserve">
          <source>The current month of the year.</source>
          <target state="translated">年的当月。</target>
        </trans-unit>
        <trans-unit id="67943f85151903b71f2ef45fecfce18f374500bf" translate="yes" xml:space="preserve">
          <source>The current system tick. The number of ticks per second varies from system to system. &lt;code&gt;currSystemTick&lt;/code&gt; uses a monotonic clock, so it's intended for precision timing by comparing relative time values, not for getting the current system time.</source>
          <target state="translated">当前系统的滴答声。每秒的滴答声数量因系统而异。 &lt;code&gt;currSystemTick&lt;/code&gt; 使用单调时钟，因此旨在通过比较相对时间值进行精确计时，而不是获取当前系统时间。</target>
        </trans-unit>
        <trans-unit id="222a86bbae85929301dc215f9e9c008965d24955" translate="yes" xml:space="preserve">
          <source>The current time of the system's monotonic clock. This has no relation to the wall clock time, as the wall clock time can be adjusted (e.g. by NTP), whereas the monotonic clock always moves forward. The source of the monotonic time is system-specific.</source>
          <target state="translated">系统单调时钟的当前时间。这与挂钟时间没有关系,因为挂钟时间可以调整(例如通过NTP),而单调钟总是向前移动。单调时间的来源与系统有关。</target>
        </trans-unit>
        <trans-unit id="6d131b2d67d2e2d0708dd4d35e46ff7bb470d695" translate="yes" xml:space="preserve">
          <source>The current time zone of this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;. It's internal time is always kept in UTC, so there are no conversion issues between time zones due to DST. Functions which return all or part of the time - such as hours - adjust the time to this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;'s time zone before returning.</source>
          <target state="translated">此&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;的当前时区。它的内部时间始终保存在UTC中，因此，由于DST，在各个时区之间没有转换问题。返回全部或部分时间（例如小时）的&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;在返回之前将时间调整为此SysTime的时区。</target>
        </trans-unit>
        <trans-unit id="92e4138ca0558ee1a8d76b41157b476bc178803c" translate="yes" xml:space="preserve">
          <source>The current time zone of this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;. Its internal time is always kept in UTC, so there are no conversion issues between time zones due to DST. Functions which return all or part of the time - such as hours - adjust the time to this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;'s time zone before returning.</source>
          <target state="translated">此&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;的当前时区。它的内部时间始终以UTC进行保存，因此，由于DST，在各个时区之间没有转换问题。返回全部或部分时间（例如小时）的&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;在返回之前将时间调整为此SysTime的时区。</target>
        </trans-unit>
        <trans-unit id="73b94772e416a8ec2451e84a4f045bcf0b0bd2f8" translate="yes" xml:space="preserve">
          <source>The current trace handler or null if none has been set.</source>
          <target state="translated">当前的跟踪处理程序,如果没有设置,则为空。</target>
        </trans-unit>
        <trans-unit id="1168fa07ec5310179d0a7d8dd293fdee5d851995" translate="yes" xml:space="preserve">
          <source>The current version is MurmurHash3, which yields a 32-bit or 128-bit hash value. The older MurmurHash 1 and 2 are currently not supported.</source>
          <target state="translated">目前的版本是MurmurHash3,它可以产生一个32位或128位的哈希值。目前不支持旧版的MurmurHash1和2。</target>
        </trans-unit>
        <trans-unit id="f46d4edbe0670620eb95290f8f2a6487face97bc" translate="yes" xml:space="preserve">
          <source>The data caches. If there are fewer than 5 physical caches levels, the remaining levels are set to size_t.max (== entire memory space)</source>
          <target state="translated">的数据缓存。如果物理缓存级别少于5个,其余级别设置为size_t.max(==整个内存空间)。</target>
        </trans-unit>
        <trans-unit id="a6ef57ac8d9ec9aa6eaa6d13ed88211ab558ef56" translate="yes" xml:space="preserve">
          <source>The data is NOT copied by the library. Content-Type will default to application/octet-stream. Data is not converted or encoded by this method.</source>
          <target state="translated">数据不会被库复制。Content-Type将默认为application/octet-stream。此方法不对数据进行转换或编码。</target>
        </trans-unit>
        <trans-unit id="6bcbd37c2c2ac85eb1356e64319455a6bd36b26b" translate="yes" xml:space="preserve">
          <source>The data is NOT copied by the library. Content-Type will default to text/plain. Data is not converted or encoded by this method.</source>
          <target state="translated">数据不会被库复制。Content-Type将默认为text/plain。此方法不对数据进行转换或编码。</target>
        </trans-unit>
        <trans-unit id="cce9ef674e018900e5c73c744a07e56499cc18a7" translate="yes" xml:space="preserve">
          <source>The data is always shareable across threads. Even if the data is &lt;code&gt;const&lt;/code&gt;, the affix is modifiable by the same reasoning as for &lt;code&gt;immutable&lt;/code&gt;.</source>
          <target state="translated">数据始终在线程之间共享。即使数据为 &lt;code&gt;const&lt;/code&gt; ，后缀也可以通过与 &lt;code&gt;immutable&lt;/code&gt; 相同的理由进行修改。</target>
        </trans-unit>
        <trans-unit id="493973138a3d3f979064d5411c98ae5301a703dd" translate="yes" xml:space="preserve">
          <source>The data that is to be logged.</source>
          <target state="translated">要记录的数据。</target>
        </trans-unit>
        <trans-unit id="ca2344350b8df2bdd7d03df57b987d64c46b085c" translate="yes" xml:space="preserve">
          <source>The data that should be logged.</source>
          <target state="translated">应记录的数据。</target>
        </trans-unit>
        <trans-unit id="78b3f17895b8c6a1ec55d26a5815c6b3e2f691ad" translate="yes" xml:space="preserve">
          <source>The database disk image is malformed</source>
          <target state="translated">数据库磁盘映像已损坏</target>
        </trans-unit>
        <trans-unit id="99b3c2c49461425bf6cff4391127f75d483d0614" translate="yes" xml:space="preserve">
          <source>The database file is locked</source>
          <target state="translated">数据库文件被锁定</target>
        </trans-unit>
        <trans-unit id="5e44b1ae3d4ce260d0b6e54dfe79b9e83c8a047e" translate="yes" xml:space="preserve">
          <source>The database schema changed</source>
          <target state="translated">数据库模式改变</target>
        </trans-unit>
        <trans-unit id="8c85f90f34182d4804f085ae127ba5dcaa363aac" translate="yes" xml:space="preserve">
          <source>The date portion of &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;的日期部分。</target>
        </trans-unit>
        <trans-unit id="afe331c3b8358f5c9f6aa03d6d996e549edd7dd9" translate="yes" xml:space="preserve">
          <source>The day of the Gregorian Calendar to set this &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; to.</source>
          <target state="translated">公历将此&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;设置为的日期。</target>
        </trans-unit>
        <trans-unit id="4ae0c452a064fb3ca47b7a7c9701724ac4dce1ca" translate="yes" xml:space="preserve">
          <source>The day of the Gregorian Calendar to set this &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; to.</source>
          <target state="translated">公历将此&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;时间设置为的日期。</target>
        </trans-unit>
        <trans-unit id="bd19a7c8e8386d921c721461757d18c3618278c9" translate="yes" xml:space="preserve">
          <source>The day of the Gregorian Calendar to set this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; to.</source>
          <target state="translated">公历设置该&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;时间的日期。</target>
        </trans-unit>
        <trans-unit id="0b0bd119a12bf4f397ebf472b36184d281c6821c" translate="yes" xml:space="preserve">
          <source>The day of the month to set this &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt;'s day to.</source>
          <target state="translated">将此&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; 日期&lt;/a&gt;设置为的月份。</target>
        </trans-unit>
        <trans-unit id="5240ff1dc8c3d7350efab2ccc0dcbc8c48902add" translate="yes" xml:space="preserve">
          <source>The day of the month to set this &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt;'s day to.</source>
          <target state="translated">将此&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;设置为星期几。</target>
        </trans-unit>
        <trans-unit id="54dc94925cf86835f631cdafa18de7d7060f146b" translate="yes" xml:space="preserve">
          <source>The day of the month to set this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;'s day to.</source>
          <target state="translated">将此&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;设置为星期几。</target>
        </trans-unit>
        <trans-unit id="f06065ad9961deec3076217123d1f3724a43ad9e" translate="yes" xml:space="preserve">
          <source>The day of the week is ignored beyond verifying that it's a valid day of the week, as the day of the week can be inferred from the date. It is not checked whether the given day of the week matches the actual day of the week of the given date (though it is technically invalid per the spec if the day of the week doesn't match the actual day of the week of the given date).</source>
          <target state="translated">除了验证它是有效的星期几之外,星期几被忽略了,因为星期几可以从日期中推断出来。它不会检查给定的星期日是否与给定日期的实际星期日相吻合(尽管根据规范,如果星期日与给定日期的实际星期日不吻合,技术上是无效的)。</target>
        </trans-unit>
        <trans-unit id="5e854e19e24462bd8df16bbd3e656946dc758006" translate="yes" xml:space="preserve">
          <source>The day of the week to get the number of days to.</source>
          <target state="translated">的日子来获取天数,以。</target>
        </trans-unit>
        <trans-unit id="9b2b14b5c754fd8843dde38b4959242869b20add" translate="yes" xml:space="preserve">
          <source>The day of the year to set which day of the year this &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; is on.</source>
          <target state="translated">今年来设置的一天，一年的一天，这个&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;是。</target>
        </trans-unit>
        <trans-unit id="ccf6b0017db205f1a9b8b83cdf38246cf64f3b0f" translate="yes" xml:space="preserve">
          <source>The day of the year to set which day of the year this &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; is on.</source>
          <target state="translated">设置该&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;的一年中的哪一天。</target>
        </trans-unit>
        <trans-unit id="8dcb327ec830e9013bbcabf4579c3b122dd13db5" translate="yes" xml:space="preserve">
          <source>The day of the year to set which day of the year this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; is on.</source>
          <target state="translated">设置系统时间是在一年中的&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1ca7f565ccafa6d910e84ff93887a8b0d0bb5eea" translate="yes" xml:space="preserve">
          <source>The day portion of the date.</source>
          <target state="translated">日的部分。</target>
        </trans-unit>
        <trans-unit id="5ad71e8507c7301863c1c60659bd8b3c6b7f0dc6" translate="yes" xml:space="preserve">
          <source>The day to validate.</source>
          <target state="translated">当天要验证。</target>
        </trans-unit>
        <trans-unit id="99ff0048fa491b367eccc6b67cb9b69f2ad2defa" translate="yes" xml:space="preserve">
          <source>The decimal value to convert into the factorial number system.</source>
          <target state="translated">要转换为阶乘数系统的小数值。</target>
        </trans-unit>
        <trans-unit id="112d499aea5e8fc601570782799d1151e557b4de" translate="yes" xml:space="preserve">
          <source>The declarations in a mixin are placed in a nested scope and then &amp;lsquo;imported&amp;rsquo; into the surrounding scope. If the name of a declaration in a mixin is the same as a declaration in the surrounding scope, the surrounding declaration overrides the mixin one:</source>
          <target state="translated">mixin中的声明放置在嵌套作用域中，然后&amp;ldquo;导入&amp;rdquo;到周围的作用域中。如果混合中的声明名称与周围范围中的声明相同，则周围的声明将覆盖混合中的声明：</target>
        </trans-unit>
        <trans-unit id="1c2cdcf3cf79afdc906fde394e5c2b865521f41b" translate="yes" xml:space="preserve">
          <source>The decoded string</source>
          <target state="translated">解码后的字符串</target>
        </trans-unit>
        <trans-unit id="945488b25e8ef473c0f2b20f9c6b8b8c99511eb5" translate="yes" xml:space="preserve">
          <source>The decoding of the current element in the input.</source>
          <target state="translated">输入中当前元素的解码。</target>
        </trans-unit>
        <trans-unit id="4f67de430c432c552831b7793db0a2c0326b2d16" translate="yes" xml:space="preserve">
          <source>The deduced type parameter for dynamic array and pointer arguments has an unqualified head:</source>
          <target state="translated">动态数组和指针参数的推导类型参数有一个非限定头。</target>
        </trans-unit>
        <trans-unit id="dc7258b7cd7137907e6fca7bf0fc234fc2e2ce18" translate="yes" xml:space="preserve">
          <source>The default &quot;User-Agent&quot; value send with a request. It has the form &quot;Phobos-std.net.curl/</source>
          <target state="translated">默认的 &quot;User-Agent &quot;值随请求一起发送,其形式为 &quot;Phobos-std.net.curl/&quot;。它的形式是 &quot;Phobos-std.net.curl/&quot;。</target>
        </trans-unit>
        <trans-unit id="c3a368bff4f38586882207610a2dc73a031ba862" translate="yes" xml:space="preserve">
          <source>The default (or most common) setting for the current platform. That is, &lt;code&gt;no&lt;/code&gt; on Windows and Mac OS X, and &lt;code&gt;yes&lt;/code&gt; on all POSIX systems except Darwin (Linux, *BSD, etc.).</source>
          <target state="translated">当前平台的默认（或最常用）设置。也就是说， &lt;code&gt;no&lt;/code&gt; 在Windows和Mac OS X，以及 &lt;code&gt;yes&lt;/code&gt; 除了达尔文（Linux操作系统，* BSD等）上的所有POSIX系统。</target>
        </trans-unit>
        <trans-unit id="7a46984a3f96d58aec5d4d9868c2110f34d995ba" translate="yes" xml:space="preserve">
          <source>The default (or most common) setting for the current platform. That is, &lt;code&gt;no&lt;/code&gt; on Windows and Mac OS X, and &lt;code&gt;yes&lt;/code&gt; on all POSIX systems except OS X (Linux, *BSD, etc.).</source>
          <target state="translated">当前平台的默认（或最常见）设置。也就是说， &lt;code&gt;no&lt;/code&gt; 在Windows和Mac OS X，以及 &lt;code&gt;yes&lt;/code&gt; 在除OS X（Linux操作系统，* BSD等），所有POSIX系统。</target>
        </trans-unit>
        <trans-unit id="87b0a2695d56ceaeb7eb9433e1d06841db861c10" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;Logger&lt;/code&gt; will by default log to &lt;code&gt;stderr&lt;/code&gt; and has a default &lt;code&gt;LogLevel&lt;/code&gt; of &lt;code&gt;LogLevel.all&lt;/code&gt;. The default Logger can be accessed by using the property called &lt;code&gt;sharedLog&lt;/code&gt;. This property is a reference to the current default &lt;code&gt;Logger&lt;/code&gt;. This reference can be used to assign a new default &lt;code&gt;Logger&lt;/code&gt;.</source>
          <target state="translated">默认情况下，默认 &lt;code&gt;Logger&lt;/code&gt; 将记录到 &lt;code&gt;stderr&lt;/code&gt; ，并且默认 &lt;code&gt;LogLevel&lt;/code&gt; 为 &lt;code&gt;LogLevel.all&lt;/code&gt; 。可以使用称为 &lt;code&gt;sharedLog&lt;/code&gt; 的属性访问默认Logger 。此属性是对当前默认 &lt;code&gt;Logger&lt;/code&gt; 的引用。该参考可用于分配新的默认 &lt;code&gt;Logger&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b72f9c3623b76d776ddcc9d314e5ca75b551f9a9" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;alignedReallocate&lt;/code&gt; function first attempts to use &lt;code&gt;expand&lt;/code&gt;. If &lt;code&gt;Allocator.expand&lt;/code&gt; is not defined or returns &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;alignedReallocate&lt;/code&gt; allocates a new block of memory of appropriate size and copies data from the old block to the new block. Finally, if &lt;code&gt;Allocator&lt;/code&gt; defines &lt;code&gt;deallocate&lt;/code&gt;, &lt;code&gt;alignedReallocate&lt;/code&gt; uses it to free the old memory block.</source>
          <target state="translated">默认的 &lt;code&gt;alignedReallocate&lt;/code&gt; 函数首先尝试使用 &lt;code&gt;expand&lt;/code&gt; 。如果未定义 &lt;code&gt;Allocator.expand&lt;/code&gt; 或返回 &lt;code&gt;false&lt;/code&gt; ，则 &lt;code&gt;alignedReallocate&lt;/code&gt; 会分配一个适当大小的新内存块，并将数据从旧块复制到新块。最后，如果 &lt;code&gt;Allocator&lt;/code&gt; 定义了 &lt;code&gt;deallocate&lt;/code&gt; ，则 &lt;code&gt;alignedReallocate&lt;/code&gt; 将使用它释放旧的内存块。</target>
        </trans-unit>
        <trans-unit id="11d5f052dd46a2986ac861f2bb2c8694b1113749" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;reallocate&lt;/code&gt; function first attempts to use &lt;code&gt;expand&lt;/code&gt;. If &lt;code&gt;Allocator.expand&lt;/code&gt; is not defined or returns &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;reallocate&lt;/code&gt; allocates a new block of memory of appropriate size and copies data from the old block to the new block. Finally, if &lt;code&gt;Allocator&lt;/code&gt; defines &lt;code&gt;deallocate&lt;/code&gt;, &lt;code&gt;reallocate&lt;/code&gt; uses it to free the old memory block.</source>
          <target state="translated">默认的 &lt;code&gt;reallocate&lt;/code&gt; 函数首先尝试使用 &lt;code&gt;expand&lt;/code&gt; 。如果未定义 &lt;code&gt;Allocator.expand&lt;/code&gt; 或返回 &lt;code&gt;false&lt;/code&gt; ，则 &lt;code&gt;reallocate&lt;/code&gt; 会分配一个适当大小的新内存块，并将数据从旧块复制到新块。最后，如果 &lt;code&gt;Allocator&lt;/code&gt; 定义了 &lt;code&gt;deallocate&lt;/code&gt; ，则 &lt;code&gt;reallocate&lt;/code&gt; 使用它释放旧的内存块。</target>
        </trans-unit>
        <trans-unit id="b4b278f4d2972020f4ba9b115cb1013b58d050b9" translate="yes" xml:space="preserve">
          <source>The default alignment is &lt;code&gt;platformAlignment&lt;/code&gt;.</source>
          <target state="translated">默认对齐方式是 &lt;code&gt;platformAlignment&lt;/code&gt; 。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
