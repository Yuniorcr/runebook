<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="d">
    <body>
      <group id="d">
        <trans-unit id="05fb43438f8add5bc5e520c7162cafcff5568073" translate="yes" xml:space="preserve">
          <source>Other_Number</source>
          <target state="translated">Other_Number</target>
        </trans-unit>
        <trans-unit id="6a6c035052d2fcea5bd0994c7e06947db784b476" translate="yes" xml:space="preserve">
          <source>Other_Punctuation</source>
          <target state="translated">Other_Punctuation</target>
        </trans-unit>
        <trans-unit id="ecc700e8bf50c329823e4432669e2e0f13941414" translate="yes" xml:space="preserve">
          <source>Other_Symbol</source>
          <target state="translated">Other_Symbol</target>
        </trans-unit>
        <trans-unit id="8f9fafd248962959d08eb0fc0b6409cc5836d1a0" translate="yes" xml:space="preserve">
          <source>Other_Uppercase</source>
          <target state="translated">Other_Uppercase</target>
        </trans-unit>
        <trans-unit id="45d9c732939826aeca03102c6b35f994d91fb0c2" translate="yes" xml:space="preserve">
          <source>Others will be added as they make sense and new implementations appear.</source>
          <target state="translated">其他的将在有意义的情况下和新的实施方案出现时增加。</target>
        </trans-unit>
        <trans-unit id="1b108b5414366434a06640c1cfb85f59ec1fb998" translate="yes" xml:space="preserve">
          <source>Otherwise if set to &lt;code&gt;CheckDns.yes&lt;/code&gt;, isEmail performs DNS checking.</source>
          <target state="translated">否则，如果设置为 &lt;code&gt;CheckDns.yes&lt;/code&gt; ，则isEmail将执行DNS检查。</target>
        </trans-unit>
        <trans-unit id="4feb189ac05b2fa8c8a6112ed39f3df4fa83a432" translate="yes" xml:space="preserve">
          <source>Otherwise if set to &lt;code&gt;OpenRight.no&lt;/code&gt;, then the interval is closed to the right (last element included).</source>
          <target state="translated">否则，如果将其设置为 &lt;code&gt;OpenRight.no&lt;/code&gt; ，则间隔将向右关闭（包括最后一个元素）。</target>
        </trans-unit>
        <trans-unit id="631af2017187f4c3448d0a2a40a3b795c4cc9643" translate="yes" xml:space="preserve">
          <source>Otherwise if set to &lt;code&gt;SortOutput.yes&lt;/code&gt;, the output should be sorted.</source>
          <target state="translated">否则，如果设置为 &lt;code&gt;SortOutput.yes&lt;/code&gt; ，则应该对输出进行排序。</target>
        </trans-unit>
        <trans-unit id="49e81a26951cdd4a294c1a637fe5c96588287a18" translate="yes" xml:space="preserve">
          <source>Otherwise the expressions &lt;code&gt;a.opEquals(b)&lt;/code&gt; and &lt;code&gt;b.opEquals(a)&lt;/code&gt; are tried. If both resolve to the same &lt;code&gt;opEquals&lt;/code&gt; function, then the expression is rewritten to be &lt;code&gt;a.opEquals(b)&lt;/code&gt;.</source>
          <target state="translated">否则，将 &lt;code&gt;a.opEquals(b)&lt;/code&gt; 使用表达式a.opEquals（b）和 &lt;code&gt;b.opEquals(a)&lt;/code&gt; 。如果两者都解析为相同的 &lt;code&gt;opEquals&lt;/code&gt; 函数，则将表达式重写为 &lt;code&gt;a.opEquals(b)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fad059114d46d5cf546ef929c09cba6cc729966b" translate="yes" xml:space="preserve">
          <source>Otherwise, a &lt;a href=&quot;expression#CastExpression&quot;&gt;&lt;i&gt;CastExpression&lt;/i&gt;&lt;/a&gt; can be used to force a conversion when an implicit version is disallowed, but this cannot be done in &lt;code&gt;@safe&lt;/code&gt; code, and the correctness of it must be verified by the user.</source>
          <target state="translated">否则，当不允许使用隐式版本时，可以使用&lt;a href=&quot;expression#CastExpression&quot;&gt;&lt;i&gt;CastExpression&lt;/i&gt;&lt;/a&gt;强制转换，但这不能在 &lt;code&gt;@safe&lt;/code&gt; 代码中完成，并且它的正确性必须由用户验证。</target>
        </trans-unit>
        <trans-unit id="e27183018d554dc439f94eb91f969f3c9943015f" translate="yes" xml:space="preserve">
          <source>Otherwise, a new memory block of size &lt;code&gt;sz&lt;/code&gt; will be allocated as if by a call to &lt;code&gt;malloc&lt;/code&gt;, or the implementation may instead resize or shrink the memory block in place. The contents of the new memory block will be the same as the contents of the old memory block, up to the lesser of the new and old sizes.</source>
          <target state="translated">否则，将分配大小为 &lt;code&gt;sz&lt;/code&gt; 的新内存块，就像通过调用 &lt;code&gt;malloc&lt;/code&gt; 一样，或者实现可以改为在适当位置调整大小或缩小内存块。新存储块的内容将与旧存储块的内容相同，直到新大小和旧大小中的较小者为止。</target>
        </trans-unit>
        <trans-unit id="20322615ab9d65b2f51081694c4503aec51c6ded" translate="yes" xml:space="preserve">
          <source>Otherwise, an error results.</source>
          <target state="translated">否则,就会产生错误。</target>
        </trans-unit>
        <trans-unit id="e0dc160c40a7011aff692c332c1e49596e1e4b69" translate="yes" xml:space="preserve">
          <source>Otherwise, append &lt;code&gt;path&lt;/code&gt; to &lt;code&gt;base&lt;/code&gt; and return the result. If &lt;code&gt;base&lt;/code&gt; is not specified, the current working directory is used.</source>
          <target state="translated">否则，将 &lt;code&gt;path&lt;/code&gt; 附加到 &lt;code&gt;base&lt;/code&gt; 并返回结果。如果未指定 &lt;code&gt;base&lt;/code&gt; ，则使用当前工作目录。</target>
        </trans-unit>
        <trans-unit id="4cd7b69fd1f55506fef8b49f409733c40cf8d99e" translate="yes" xml:space="preserve">
          <source>Otherwise, append &lt;code&gt;path&lt;/code&gt; to the current working directory, which allocates memory.</source>
          <target state="translated">否则，将 &lt;code&gt;path&lt;/code&gt; 追加到当前工作目录中，该工作目录将分配内存。</target>
        </trans-unit>
        <trans-unit id="93d2d0917f1e44edec12baf0dd8089b83f8b9dfd" translate="yes" xml:space="preserve">
          <source>Otherwise, are formatted just as their type name.</source>
          <target state="translated">否则,都是和它们的类型名一样的格式。</target>
        </trans-unit>
        <trans-unit id="d3b40053dd280e0bf88f12f740348b76f024645a" translate="yes" xml:space="preserve">
          <source>Otherwise, both constructors are defined. The &lt;code&gt;data&lt;/code&gt;-based constructor assumes memory has been allocated with the parent allocator. The &lt;code&gt;capacity&lt;/code&gt;-based constructor uses &lt;code&gt;ParentAllocator&lt;/code&gt; to allocate an appropriate contiguous hunk of memory. Regardless of the constructor used, the destructor releases the memory by using &lt;code&gt;ParentAllocator.deallocate&lt;/code&gt;.</source>
          <target state="translated">否则，将定义两个构造函数。基于 &lt;code&gt;data&lt;/code&gt; 的构造函数假定已使用父分配器分配了内存。基于 &lt;code&gt;capacity&lt;/code&gt; 的构造函数使用 &lt;code&gt;ParentAllocator&lt;/code&gt; 分配适当的连续内存块。无论使用哪种构造函数，析构函数都可以通过使用 &lt;code&gt;ParentAllocator.deallocate&lt;/code&gt; 释放内存。</target>
        </trans-unit>
        <trans-unit id="98265553c41f7942d874dfa06e7085c989a0b6c9" translate="yes" xml:space="preserve">
          <source>Otherwise, elements are moved incrementally towards the front of &lt;code&gt;range&lt;/code&gt;; a given element is never moved several times, but more elements are moved than in the previous cases.</source>
          <target state="translated">否则，元素将逐渐移至 &lt;code&gt;range&lt;/code&gt; 的前面；给定元素从未移动过几次，但移动的元素比以前的情况更多。</target>
        </trans-unit>
        <trans-unit id="d7b4269e42ae4fd84359bf3507bfdbea02d65c5e" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;S&lt;/code&gt; defines a postblit, the generated code for &lt;code&gt;opAssign&lt;/code&gt; is:</source>
          <target state="translated">否则，如果 &lt;code&gt;S&lt;/code&gt; 定义了postblit，则为 &lt;code&gt;opAssign&lt;/code&gt; 生成的代码为：</target>
        </trans-unit>
        <trans-unit id="34d83f38a3798f99d8cf552fcbf4e3fb59e56355" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;s == SwapStrategy.unstable &amp;amp;&amp;amp; isBidirectionalRange!Range &amp;amp;&amp;amp; hasLength!Range &amp;amp;&amp;amp; hasLvalueElements!Range&lt;/code&gt;, then elements are still moved from the end of the range, but time is spent on advancing between slots by repeated calls to &lt;code&gt;range.popFront&lt;/code&gt;.</source>
          <target state="translated">否则，如果 &lt;code&gt;s == SwapStrategy.unstable &amp;amp;&amp;amp; isBidirectionalRange!Range &amp;amp;&amp;amp; hasLength!Range &amp;amp;&amp;amp; hasLvalueElements!Range&lt;/code&gt; ，则元素仍会从范围的末尾移动，但是通过重复调用 &lt;code&gt;range.popFront&lt;/code&gt; 会花费时间在插槽之间前进。</target>
        </trans-unit>
        <trans-unit id="ba7fb1afa41d072823200e973c8318d1043c883c" translate="yes" xml:space="preserve">
          <source>Otherwise, if set to &lt;code&gt;AllowDayOverflow.yes&lt;/code&gt;, then day overflow is allowed.</source>
          <target state="translated">否则，如果设置为 &lt;code&gt;AllowDayOverflow.yes&lt;/code&gt; ，则允许日溢出。</target>
        </trans-unit>
        <trans-unit id="be83c3911232bf57584017e6a89fc54168a20468" translate="yes" xml:space="preserve">
          <source>Otherwise, if set to &lt;code&gt;AutoStart.yes&lt;/code&gt;, then the StopWatch is started when it is constructed.</source>
          <target state="translated">否则，如果设置为 &lt;code&gt;AutoStart.yes&lt;/code&gt; ，则在构造StopWatch时将启动它。</target>
        </trans-unit>
        <trans-unit id="d43b8e9c68a2b3e8bf2cef3f5678116c8f717c33" translate="yes" xml:space="preserve">
          <source>Otherwise, if set to &lt;code&gt;AutoStart.yes&lt;/code&gt;, then the stopwatch is started when it is constructed.</source>
          <target state="translated">否则，如果将其设置为 &lt;code&gt;AutoStart.yes&lt;/code&gt; ，则秒表将在构造时启动。</target>
        </trans-unit>
        <trans-unit id="10c743c1cc7b3a7cf0661dbb3eeb470fb9ca7f88" translate="yes" xml:space="preserve">
          <source>Otherwise, if set to &lt;code&gt;PopFirst.yes&lt;/code&gt;, then popFront is called before returning the range.</source>
          <target state="translated">否则，如果设置为 &lt;code&gt;PopFirst.yes&lt;/code&gt; ，则在返回范围之前将调用popFront。</target>
        </trans-unit>
        <trans-unit id="1dea9b190a18c52440448cc36e1cc9a993d73f06" translate="yes" xml:space="preserve">
          <source>Otherwise, set &lt;code&gt;overflow&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; and return an unspecified value</source>
          <target state="translated">否则，将 &lt;code&gt;overflow&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; ,并返回未指定的值</target>
        </trans-unit>
        <trans-unit id="d7ea80b1a0955b07a0a71599fa3c435b5c6f752e" translate="yes" xml:space="preserve">
          <source>Otherwise, set summarize to true, and runMain to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df4b2321350bd78d5e59c9f4b65b664ab9f798a6" translate="yes" xml:space="preserve">
          <source>Otherwise, the garbage collector is called to immediately free the memory allocated for the class instance or struct instance.</source>
          <target state="translated">否则,垃圾收集器会被调用,以立即释放为类实例或结构体实例分配的内存。</target>
        </trans-unit>
        <trans-unit id="51f2bf5052af0a341395b6e5f55714745316c9a3" translate="yes" xml:space="preserve">
          <source>Otherwise, the matching delimiter is the same as the delimiter character:</source>
          <target state="translated">否则,匹配的定界符与定界符相同。</target>
        </trans-unit>
        <trans-unit id="5e12d941f654871ede52074458d874bcdb81f831" translate="yes" xml:space="preserve">
          <source>Otherwise, the objects are formatted as input range.</source>
          <target state="translated">否则,对象的格式为输入范围。</target>
        </trans-unit>
        <trans-unit id="96b3aee374e1357ece2d5f44dff187e4382dceae" translate="yes" xml:space="preserve">
          <source>Otherwise, the operator first evaluates &lt;code&gt;auto result = opBinary!op(payload, rhs).payload&lt;/code&gt;, which is subject to the hooks in &lt;code&gt;opBinary&lt;/code&gt;. Then, if &lt;code&gt;result&lt;/code&gt; is less than &lt;code&gt;Checked!(T, Hook).min&lt;/code&gt; and if &lt;code&gt;Hook&lt;/code&gt; defines &lt;code&gt;onLowerBound&lt;/code&gt;, the payload is assigned from &lt;code&gt; hook.onLowerBound(result, min)&lt;/code&gt;. If &lt;code&gt;result&lt;/code&gt; is greater than &lt;code&gt;Checked!(T, Hook).max&lt;/code&gt; and if &lt;code&gt;Hook&lt;/code&gt; defines &lt;code&gt;onUpperBound&lt;/code&gt;, the payload is assigned from &lt;code&gt;hook.onUpperBound(result, min)&lt;/code&gt;.</source>
          <target state="translated">否则，操作员首先评估 &lt;code&gt;auto result = opBinary!op(payload, rhs).payload&lt;/code&gt; ，这取决于 &lt;code&gt;opBinary&lt;/code&gt; 中的钩子。然后，如果 &lt;code&gt;result&lt;/code&gt; 小于 &lt;code&gt;Checked!(T, Hook).min&lt;/code&gt; 并且如果 &lt;code&gt;Hook&lt;/code&gt; 定义了 &lt;code&gt;onLowerBound&lt;/code&gt; ，则从 &lt;code&gt; hook.onLowerBound(result, min)&lt;/code&gt; 分配有效负载。如果 &lt;code&gt;result&lt;/code&gt; 大于 &lt;code&gt;Checked!(T, Hook).max&lt;/code&gt; 并且如果 &lt;code&gt;Hook&lt;/code&gt; 定义了 &lt;code&gt;onUpperBound&lt;/code&gt; ，则从 &lt;code&gt;hook.onUpperBound(result, min)&lt;/code&gt; 分配有效负载。</target>
        </trans-unit>
        <trans-unit id="48528efcc3f9a77bb45e05946e171bb9ab922461" translate="yes" xml:space="preserve">
          <source>Otherwise, they are formatted like &lt;code&gt;Type(field1, filed2, ...)&lt;/code&gt;.</source>
          <target state="translated">否则，它们的格式类似于 &lt;code&gt;Type(field1, filed2, ...)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6ad8c0de5c848abc87bb5a19ad55877fbb13f5f" translate="yes" xml:space="preserve">
          <source>Otherwise, walks the range through its length and returns the number of elements seen. Performes &amp;Omicron;(&lt;code&gt;n&lt;/code&gt;) evaluations of &lt;code&gt;range.empty&lt;/code&gt; and &lt;code&gt;range.popFront()&lt;/code&gt;, where &lt;code&gt;n&lt;/code&gt; is the effective length of &lt;code&gt;range&lt;/code&gt;.</source>
          <target state="translated">否则，遍历范围的长度并返回看到的元素数。执行 &lt;code&gt;range.empty&lt;/code&gt; 和 &lt;code&gt;range.popFront()&lt;/code&gt; 的 &amp;Omicron;（ &lt;code&gt;n&lt;/code&gt; ）个评估，其中 &lt;code&gt;n&lt;/code&gt; 是 &lt;code&gt;range&lt;/code&gt; 的有效长度。</target>
        </trans-unit>
        <trans-unit id="ff8db6ada06f83227eed246c83cc3693d4063c57" translate="yes" xml:space="preserve">
          <source>Our label symbol, with vector to keep track of forward references.</source>
          <target state="translated">我们的标签符号,用矢量来跟踪前向参考。</target>
        </trans-unit>
        <trans-unit id="84996582614366aed96d409996a95b59874ed607" translate="yes" xml:space="preserve">
          <source>Out of disk space.</source>
          <target state="translated">没有磁盘空间了。</target>
        </trans-unit>
        <trans-unit id="8287615f2ac89aad252242dec878907206c5210b" translate="yes" xml:space="preserve">
          <source>Out of memory.</source>
          <target state="translated">失忆了。</target>
        </trans-unit>
        <trans-unit id="4ec60c716ead5ac12059fc839ab1f661a44d5058" translate="yes" xml:space="preserve">
          <source>OutBuffer &lt;code&gt;buf&lt;/code&gt;</source>
          <target state="translated">OutBuffer &lt;code&gt;buf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0ab7a95451a4e0b671e325269d07a5d314844a6" translate="yes" xml:space="preserve">
          <source>OutBuffer provides a way to build up an array of bytes out of raw data. It is useful for things like preparing an array of bytes to write out to a file. OutBuffer's byte order is the format native to the computer. To control the byte order (endianness), use a class derived from OutBuffer. OutBuffer's internal buffer is allocated with the GC. Pointers stored into the buffer are scanned by the GC, but you have to ensure proper alignment, e.g. by using alignSize((void*).sizeof).</source>
          <target state="translated">OutBuffer提供了一种从原始数据中建立一个字节数组的方法。它对于准备将字节数组写入文件这样的事情很有用。OutBuffer的字节顺序是计算机的本地格式。要控制字节顺序(endianness),请使用从OutBuffer派生的类。OutBuffer的内部缓冲区是用GC分配的。存储到缓冲区中的指针会被GC扫描,但你必须确保正确的对齐,例如使用alignSize((void*).sizeof)。</target>
        </trans-unit>
        <trans-unit id="d15970d277dc3b3ea6e3907fe5ae14f4e7d68498" translate="yes" xml:space="preserve">
          <source>OutBuffer* &lt;code&gt;buf&lt;/code&gt;</source>
          <target state="translated">OutBuffer * &lt;code&gt;buf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52d9787a72c9469cdbcb944e5fe679a9d46f4b4d" translate="yes" xml:space="preserve">
          <source>OutOfMemoryError on allocation failure.</source>
          <target state="translated">分配失败时OutOfMemoryError。</target>
        </trans-unit>
        <trans-unit id="7e451bc39b00e365a897773c4075f46ce2440988" translate="yes" xml:space="preserve">
          <source>Outbuffer &lt;strong id=&quot;objbuf&quot;&gt;objbuf&lt;/strong&gt;;</source>
          <target state="translated">Outbuffer &lt;strong id=&quot;objbuf&quot;&gt;objbuf&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="2c747a01339ff37505e527737a9546e3714554ca" translate="yes" xml:space="preserve">
          <source>Output &lt;code&gt;ans&lt;/code&gt;</source>
          <target state="translated">输出 &lt;code&gt;ans&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d14ab80d73c6910ed8c82cf0b5de89687b958ffe" translate="yes" xml:space="preserve">
          <source>Output &lt;code&gt;output&lt;/code&gt;</source>
          <target state="translated">输出 &lt;code&gt;output&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e311d4b15d04097b72fdbeebaf0cb4db252e1942" translate="yes" xml:space="preserve">
          <source>Output is sent to this writer. Typical output writers include &lt;a href=&quot;std_array#Appender!string&quot;&gt;&lt;code&gt;std.array.Appender!string&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;std_stdio#LockingTextWriter&quot;&gt;&lt;code&gt;std.stdio.LockingTextWriter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">输出发送到该编写器。典型的输出编写器包括&lt;a href=&quot;std_array#Appender!string&quot;&gt; &lt;code&gt;std.array.Appender!string&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;std_stdio#LockingTextWriter&quot;&gt; &lt;code&gt;std.stdio.LockingTextWriter&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9a955eff9acd789cc5203dc93f25956ae2aba50f" translate="yes" xml:space="preserve">
          <source>Output range which locks the file when created, and unlocks the file when it goes out of scope.</source>
          <target state="translated">当创建文件时锁定文件,当文件超出范围时解锁文件的输出范围。</target>
        </trans-unit>
        <trans-unit id="feaa8d97ca89d32a72e3374b3d9efe87224820f5" translate="yes" xml:space="preserve">
          <source>Output range.</source>
          <target state="translated">输出范围:</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="bd2c85794fdb242bd898f477b91a4d9ddc3f1715" translate="yes" xml:space="preserve">
          <source>OutputRange &lt;code&gt;writer&lt;/code&gt;</source>
          <target state="translated">OutputRange &lt;code&gt;writer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f87baece393f11d2ebd7d34364434c48c4a02484" translate="yes" xml:space="preserve">
          <source>OutputRange or writeable array at least 36 entries long</source>
          <target state="translated">输出范围或至少36个条目长的可写数组。</target>
        </trans-unit>
        <trans-unit id="13e210f0c6fb1ed7f5c6dbe5107c577b2e60ca5f" translate="yes" xml:space="preserve">
          <source>OutputRangeObject!(R, E) &lt;strong id=&quot;outputRangeObject&quot;&gt;outputRangeObject&lt;/strong&gt;(R)(R range);</source>
          <target state="translated">（R，E）&lt;strong id=&quot;outputRangeObject&quot;&gt;outputRangeObject&lt;/strong&gt;（R）（R范围）;</target>
        </trans-unit>
        <trans-unit id="e85d6164bf319f351741910ab97e716a962afc3a" translate="yes" xml:space="preserve">
          <source>Outputs &lt;code&gt;e&lt;/code&gt; to &lt;code&gt;r&lt;/code&gt;. The exact effect is dependent upon the two types. Several cases are accepted, as described below. The code snippets are attempted in order, and the first to compile &quot;wins&quot; and gets evaluated.</source>
          <target state="translated">输出 &lt;code&gt;e&lt;/code&gt; 到 &lt;code&gt;r&lt;/code&gt; 。确切的效果取决于这两种类型。可以接受几种情况，如下所述。尝试按顺序编写代码片段，并且第一个代码片段&amp;ldquo;胜出&amp;rdquo;并得到评估。</target>
        </trans-unit>
        <trans-unit id="a1bb1dbd2d84148a196dd74f5ae5a0467c419f1c" translate="yes" xml:space="preserve">
          <source>Outputs element &lt;code&gt;e&lt;/code&gt; to a range.</source>
          <target state="translated">将元素 &lt;code&gt;e&lt;/code&gt; 输出到一个范围。</target>
        </trans-unit>
        <trans-unit id="4da7bc9200c71949eae8135d4a25bb5b299cf7cc" translate="yes" xml:space="preserve">
          <source>Overflow</source>
          <target state="translated">Overflow</target>
        </trans-unit>
        <trans-unit id="cf31b736962d25ed4317259b0c7493d64da74b0f" translate="yes" xml:space="preserve">
          <source>Overlapping Copying</source>
          <target state="translated">重叠复制</target>
        </trans-unit>
        <trans-unit id="1df91417e6e2a1e93fd773916d0eacc3cee16a1e" translate="yes" xml:space="preserve">
          <source>Overlapping copies are an error:</source>
          <target state="translated">重叠的副本是一个错误。</target>
        </trans-unit>
        <trans-unit id="26c78f2170e31758038f3bb0a52b3d4d222f938f" translate="yes" xml:space="preserve">
          <source>Overload A Function For A Virtual Table</source>
          <target state="translated">虚拟表的功能过载</target>
        </trans-unit>
        <trans-unit id="158045726a48723e8e24b0a391a82a31e3194519" translate="yes" xml:space="preserve">
          <source>Overload Set</source>
          <target state="translated">过载设置</target>
        </trans-unit>
        <trans-unit id="8886e8c38f58ad0262aa71aa1b3e45c6e90e8134" translate="yes" xml:space="preserve">
          <source>Overload Sets</source>
          <target state="translated">过载装置</target>
        </trans-unit>
        <trans-unit id="67ecd6530cb09f0a6a1016e4b467ebf1b14e8282" translate="yes" xml:space="preserve">
          <source>Overload existing TemplateDeclaration 'this' with the new one 's'. Return true if successful; i.e. no conflict.</source>
          <target state="translated">用新的's'重载现有的TemplateDeclaration'this'。如果成功返回true,即没有冲突。</target>
        </trans-unit>
        <trans-unit id="eae487bc2f0194066ba0b4a013c5fcf7636c06a2" translate="yes" xml:space="preserve">
          <source>Overload of &lt;a href=&quot;#rename&quot;&gt;&lt;code&gt;rename&lt;/code&gt;&lt;/a&gt; that takes an associative array &lt;code&gt;translate&lt;/code&gt; as a template parameter, where the keys are either the names or indices of the members to be changed and the new names are the corresponding values. Every key in &lt;code&gt;translate&lt;/code&gt; must be the name of a member of the &lt;a href=&quot;#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt;. The same rules for empty strings apply as for the variadic template overload of &lt;a href=&quot;#rename&quot;&gt;&lt;code&gt;rename&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#rename&quot;&gt; &lt;code&gt;rename&lt;/code&gt; &lt;/a&gt;重载以关联数组 &lt;code&gt;translate&lt;/code&gt; 为模板参数，其中键是要更改的成员的名称或索引，新名称是相应的值。 &lt;code&gt;translate&lt;/code&gt; 每个键都必须是&lt;a href=&quot;#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt;成员的名称。空字符串的规则与&lt;a href=&quot;#rename&quot;&gt; &lt;code&gt;rename&lt;/code&gt; &lt;/a&gt;的可变参数模板重载相同。</target>
        </trans-unit>
        <trans-unit id="bb1730cb64cea0f7fd90a729f4e52146c5ec87e6" translate="yes" xml:space="preserve">
          <source>Overload of HMAC to be used if H doesn't provide information about its block size.</source>
          <target state="translated">如果H不提供其块大小的信息,则要使用HMAC的超载。</target>
        </trans-unit>
        <trans-unit id="d69b02266b4564b8b1a2868be5966a7c16753f43" translate="yes" xml:space="preserve">
          <source>Overload sets can be merged with an alias declaration:</source>
          <target state="translated">过载集可以与别名声明合并。</target>
        </trans-unit>
        <trans-unit id="0dfd02f023aa40beb746d9cc077ec573c5ad785e" translate="yes" xml:space="preserve">
          <source>Overload taking &lt;code&gt;CodepointSet&lt;/code&gt;s will naturally convert only to bool mapping &lt;code&gt;Trie&lt;/code&gt;s.</source>
          <target state="translated">接受 &lt;code&gt;CodepointSet&lt;/code&gt; 的重载自然会仅转换为bool映射 &lt;code&gt;Trie&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c42a6c022fe7418d8db213b725de386aa93c918b" translate="yes" xml:space="preserve">
          <source>Overload this FuncDeclaration with the new one f. Return true if successful; i.e. no conflict.</source>
          <target state="translated">用新的f重载这个FuncDeclaration。如果成功返回true,即没有冲突。</target>
        </trans-unit>
        <trans-unit id="c5ecac5efe300a95c2fed1c87f55f61b868e7be6" translate="yes" xml:space="preserve">
          <source>Overloadable Binary Operators</source>
          <target state="translated">可过载二进制操作符</target>
        </trans-unit>
        <trans-unit id="0c91984df423d8adc0ea28e04634eb6436d66740" translate="yes" xml:space="preserve">
          <source>Overloadable Index Unary Operators</source>
          <target state="translated">可过载指数单调操作符</target>
        </trans-unit>
        <trans-unit id="40c29eefdaaea03e00d053015d5c30e435d99ba5" translate="yes" xml:space="preserve">
          <source>Overloadable Op Assignment Operators</source>
          <target state="translated">可过载操作分配器</target>
        </trans-unit>
        <trans-unit id="868004b3cb4783ac2e0f7bbd6f12e4efe1b9741d" translate="yes" xml:space="preserve">
          <source>Overloadable Slice Unary Operators</source>
          <target state="translated">可过载的片状单利运算器</target>
        </trans-unit>
        <trans-unit id="187c02a81ab8dd7735cd108b2d2d5d80603a58c8" translate="yes" xml:space="preserve">
          <source>Overloadable Unary Operators</source>
          <target state="translated">可过载单列运算符</target>
        </trans-unit>
        <trans-unit id="0c7d142daaca9406f218da735b2626a59df3fc79" translate="yes" xml:space="preserve">
          <source>Overloading &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;=&lt;/code&gt;</source>
          <target state="translated">重载 &lt;code&gt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;code&gt;=&lt;/code&gt; ， &lt;code&gt;&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="82107b43f4305c149a257571647eee584e5a427e" translate="yes" xml:space="preserve">
          <source>Overloading &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;gt;=&lt;/code&gt;</source>
          <target state="translated">重载 &lt;code&gt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;=&lt;/code&gt; ， &lt;code&gt;&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;gt;=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ba3190914d282ad78492c1e46480b8bf4e1649b2" translate="yes" xml:space="preserve">
          <source>Overloading &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;</source>
          <target state="translated">重载 &lt;code&gt;==&lt;/code&gt; 和 &lt;code&gt;!=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9bb19726f9a0a8594fcdb690b64ba87e32bcce1" translate="yes" xml:space="preserve">
          <source>Overloading Index Unary Operators</source>
          <target state="translated">超载索引单调操作符</target>
        </trans-unit>
        <trans-unit id="452176c507c63d99fdcd25f67549f4401bd31c52" translate="yes" xml:space="preserve">
          <source>Overloading Slice Unary Operators</source>
          <target state="translated">超载分片单利运算符</target>
        </trans-unit>
        <trans-unit id="04d7d655cce557095f8ad6c19c35e3d39b26d4ac" translate="yes" xml:space="preserve">
          <source>Overloading the Comparison Operators</source>
          <target state="translated">比较运算符超载</target>
        </trans-unit>
        <trans-unit id="343733174446e2662ee66d02bbdff2d89203838e" translate="yes" xml:space="preserve">
          <source>Overloading the slicing operator means overloading expressions like &lt;code&gt;a[]&lt;/code&gt; or &lt;code&gt;a[&lt;/code&gt;</source>
          <target state="translated">重载切片运算符意味着重载 &lt;code&gt;a[]&lt;/code&gt; 或 &lt;code&gt;a[&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="28e9f60b000902c4ad6c539ce60cae3d5517be74" translate="yes" xml:space="preserve">
          <source>Override so it can work even if semantic() hasn't yet been run.</source>
          <target state="translated">重写,所以即使semantic()还没有被运行,它也可以工作。</target>
        </trans-unit>
        <trans-unit id="1225901c0967c3137622abc4eda5e2ca4282d06d" translate="yes" xml:space="preserve">
          <source>Override to use a derived class. The returned socket's handle must not be set.</source>
          <target state="translated">重写使用派生类。返回的套接字的句柄不能被设置。</target>
        </trans-unit>
        <trans-unit id="7b278a3abe635e243893eb9ee9520d47934c806e" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Object.toString&lt;/code&gt; and returns the error message. Internally this forwards to the &lt;code&gt;toString&lt;/code&gt; overload that takes a sink delegate.</source>
          <target state="translated">重写 &lt;code&gt;Object.toString&lt;/code&gt; 并返回错误消息。在内部，这转发到使用接收器委托的 &lt;code&gt;toString&lt;/code&gt; 重载。</target>
        </trans-unit>
        <trans-unit id="434b5085b3ba9a70b1f949c6e9087acb372b2be9" translate="yes" xml:space="preserve">
          <source>Overrides the default collect hander with a user-supplied version. This routine will be called for each resource object that is finalized in a non-deterministic manner--typically during a garbage collection cycle. If the supplied routine returns true then the object's dtor will called as normal, but if the routine returns false than the dtor will not be called. The default behavior is for all object dtors to be called.</source>
          <target state="translated">用用户提供的版本覆盖默认的收集手。这个例程将被调用给每个以非确定方式最终确定的资源对象--通常是在一个垃圾收集周期中。如果提供的例程返回true,那么对象的dtor将被正常调用,但是如果例程返回false,那么dtor将不会被调用。默认的行为是所有对象的dtor都被调用。</target>
        </trans-unit>
        <trans-unit id="c2a6071ecd521a52b7d732960a323e428b0a4624" translate="yes" xml:space="preserve">
          <source>Overrides the default mangling for a symbol.</source>
          <target state="translated">覆盖一个符号的默认混排。</target>
        </trans-unit>
        <trans-unit id="bf25c93e3d705c28b6d8ec638ddf35dc53074d1e" translate="yes" xml:space="preserve">
          <source>Overrides the default module unit tester with a user-supplied version. This routine will be called once on program initialization. The return value of this routine indicates to the runtime whether the tests ran without error.</source>
          <target state="translated">用用户提供的版本覆盖默认的模块单元测试器。这个例程将在程序初始化时被调用一次。这个例程的返回值向运行时表明测试是否无误。</target>
        </trans-unit>
        <trans-unit id="e40ec95fc8ad1ad3aefaa28bd8731b6a04320d70" translate="yes" xml:space="preserve">
          <source>Overrides the default trace hander with a user-supplied version.</source>
          <target state="translated">用用户提供的版本覆盖默认的跟踪手。</target>
        </trans-unit>
        <trans-unit id="cf266c19b70edb5e7f009d3790d662d578ec4941" translate="yes" xml:space="preserve">
          <source>Overrides the default trace mechanism with a user-supplied version. A trace represents the context from which an exception was thrown, and the trace handler will be called when this occurs. The pointer supplied to this routine indicates the base address from which tracing should occur. If the supplied pointer is null then the trace routine should determine an appropriate calling context from which to begin the trace.</source>
          <target state="translated">用用户提供的版本覆盖默认的跟踪机制。跟踪代表了异常发生的上下文,当异常发生时,跟踪处理程序将被调用。提供给这个例程的指针表示跟踪发生的基地址。如果提供的指针为空,那么跟踪例程应该确定一个适当的调用上下文,从这个上下文开始跟踪。</target>
        </trans-unit>
        <trans-unit id="89ff31225c5f042fff61e92ec8cf80e417a7140c" translate="yes" xml:space="preserve">
          <source>Owner</source>
          <target state="translated">Owner</target>
        </trans-unit>
        <trans-unit id="f4d48b875c14540f7cebd9c7470e1acc8e3b934a" translate="yes" xml:space="preserve">
          <source>Ownership/Borrowing</source>
          <target state="translated">Ownership/Borrowing</target>
        </trans-unit>
        <trans-unit id="74feeb6178fa5b23446dfd16c8978129d74b1bd2" translate="yes" xml:space="preserve">
          <source>Owns a (rmem-managed) file buffer.</source>
          <target state="translated">拥有一个(rmem管理的)文件缓冲区。</target>
        </trans-unit>
        <trans-unit id="511993d3c99719e38a6779073019dacd7178ddb9" translate="yes" xml:space="preserve">
          <source>P</source>
          <target state="translated">P</target>
        </trans-unit>
        <trans-unit id="16309e2b3bedf0b1c2ca1cd681b84c8d2ee0bc98" translate="yes" xml:space="preserve">
          <source>PARC Universal Packet Protocol</source>
          <target state="translated">PARC 通用分组协议</target>
        </trans-unit>
        <trans-unit id="11850638f643ba7850d11f7ddcec0964d655b890" translate="yes" xml:space="preserve">
          <source>PARC Universal Packet Protocol level</source>
          <target state="translated">PARC 通用分组协议级</target>
        </trans-unit>
        <trans-unit id="328336a5067c796e3099da705902a551e91ac694" translate="yes" xml:space="preserve">
          <source>PHOBOS_VERSION</source>
          <target state="translated">PHOBOS_VERSION</target>
        </trans-unit>
        <trans-unit id="bd6d55722c91f9838a18dc678fa82fff08090ff7" translate="yes" xml:space="preserve">
          <source>PIException if the segment body is illegal (contains &quot;?&amp;gt;&quot;)</source>
          <target state="translated">如果段主体非法（包含&amp;ldquo;？&amp;gt;&amp;rdquo;），则为PIException</target>
        </trans-unit>
        <trans-unit id="b79d0f29fffcde427896ae2e08789531e1def379" translate="yes" xml:space="preserve">
          <source>POD is defined as:</source>
          <target state="translated">POD的定义是:</target>
        </trans-unit>
        <trans-unit id="fec3b8a0dd6b51f5966e330783d67a4a5db1cc08" translate="yes" xml:space="preserve">
          <source>POSIX specific</source>
          <target state="translated">POSIX特定</target>
        </trans-unit>
        <trans-unit id="5920724eeffca91f7f6adab2e15742b13168e721" translate="yes" xml:space="preserve">
          <source>POST static input fields.</source>
          <target state="translated">POST静态输入字段。</target>
        </trans-unit>
        <trans-unit id="9111ca243bfe057abc22f66b97b7e326a80a3a08" translate="yes" xml:space="preserve">
          <source>POST volatile input fields.</source>
          <target state="translated">POST易变输入字段。</target>
        </trans-unit>
        <trans-unit id="536eb8d5f513c1dccc601b700a5bc1cf4cff7823" translate="yes" xml:space="preserve">
          <source>PREC[TOK.max_] &lt;strong id=&quot;precedence&quot;&gt;precedence&lt;/strong&gt;;</source>
          <target state="translated">PREC [TOK.max_] &lt;strong id=&quot;precedence&quot;&gt;优先级&lt;/strong&gt;；</target>
        </trans-unit>
        <trans-unit id="9b655813c0be05ad826fd70e726125de35fc2f50" translate="yes" xml:space="preserve">
          <source>PUBLIC FUNCTIONS</source>
          <target state="translated">公共职能</target>
        </trans-unit>
        <trans-unit id="6edd3b1108776883868715a89627fccc1922179c" translate="yes" xml:space="preserve">
          <source>Package &lt;code&gt;p&lt;/code&gt;</source>
          <target state="translated">包装 &lt;code&gt;p&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe45845b0cf0e4b5ad1d088d74ee6c6714a4e668" translate="yes" xml:space="preserve">
          <source>Package &lt;code&gt;pkg&lt;/code&gt;</source>
          <target state="translated">包装 &lt;code&gt;pkg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c1c83923c5bf4fb42b6715d534ec4a4410b11428" translate="yes" xml:space="preserve">
          <source>Package &lt;strong id=&quot;resolveIsPackage&quot;&gt;resolveIsPackage&lt;/strong&gt;(Dsymbol sym);</source>
          <target state="translated">包&lt;strong id=&quot;resolveIsPackage&quot;&gt;resolveIsPackage&lt;/strong&gt;（Dsymbol sym）;</target>
        </trans-unit>
        <trans-unit id="2f81d5fc2134a962ec93de8ce6eebd789d867168" translate="yes" xml:space="preserve">
          <source>Package Module</source>
          <target state="translated">包装模块</target>
        </trans-unit>
        <trans-unit id="0a999012ffb87b3edac99adbdfc498b12831a1e2" translate="yes" xml:space="preserve">
          <source>Packages</source>
          <target state="translated">Packages</target>
        </trans-unit>
        <trans-unit id="5bf83a475305a8a5e5f13b2d29274d98303c1d0f" translate="yes" xml:space="preserve">
          <source>Packing and Alignment</source>
          <target state="translated">包装和校准</target>
        </trans-unit>
        <trans-unit id="527b6c0dc92a4c896664b2f08b6671179844b2cb" translate="yes" xml:space="preserve">
          <source>Pads a range to a specified length by adding a given element to the front of the range. Is lazy if the range has a known length.</source>
          <target state="translated">通过在范围的前面添加一个给定的元素,将一个范围垫到一个指定的长度。如果范围有一个已知的长度,则是懒惰的。</target>
        </trans-unit>
        <trans-unit id="1a3fe2a8ab75f618f4a19bf2dac2c84e666392b1" translate="yes" xml:space="preserve">
          <source>Pairs of test expressions and return expressions. The test expressions will be the second argument for the predicate, and the return expression will be returned if the predicate yields true with &lt;code&gt;switchExpression&lt;/code&gt; and the test expression as arguments. May also have a default return expression, that needs to be the last expression without a test expression before it. A return expression may be of void type only if it always throws.</source>
          <target state="translated">成对的测试表达式和返回表达式。测试表达式将是谓词的第二个参数，如果谓词以 &lt;code&gt;switchExpression&lt;/code&gt; 和测试表达式作为参数得出true，则将返回return表达式。可能还具有默认的返回表达式，该表达式必须是最后一个表达式，且前面没有测试表达式。只有始终抛出一个return表达式时，它才可以是void类型。</target>
        </trans-unit>
        <trans-unit id="5a59f0eb1f60143691b85b6c69dd1f1a53159158" translate="yes" xml:space="preserve">
          <source>Paragraph_Separator</source>
          <target state="translated">Paragraph_Separator</target>
        </trans-unit>
        <trans-unit id="e32c4eb3da79aeddb942c05de64aaff19b75096a" translate="yes" xml:space="preserve">
          <source>Parallel marking</source>
          <target state="translated">平行标记</target>
        </trans-unit>
        <trans-unit id="acc6f793dede04624d00eb05042ec34065c433d0" translate="yes" xml:space="preserve">
          <source>Parallel reduce on a random access range. Except as otherwise noted, usage is similar to &lt;a href=&quot;std_algorithm_iteration#reduce&quot;&gt;&lt;code&gt;std.algorithm.iteration.reduce&lt;/code&gt;&lt;/a&gt;. There is also &lt;a href=&quot;#fold&quot;&gt;&lt;code&gt;fold&lt;/code&gt;&lt;/a&gt; which does the same thing with a different parameter order.</source>
          <target state="translated">并行减小随机访问范围。除非另有说明，否则用法与&lt;a href=&quot;std_algorithm_iteration#reduce&quot;&gt; &lt;code&gt;std.algorithm.iteration.reduce&lt;/code&gt; &lt;/a&gt;相似。也有&lt;a href=&quot;#fold&quot;&gt; &lt;code&gt;fold&lt;/code&gt; &lt;/a&gt;，它以不同的参数顺序执行相同的操作。</target>
        </trans-unit>
        <trans-unit id="64c0a305b25b3c5cd3ace12be0a7a18b3ad03f48" translate="yes" xml:space="preserve">
          <source>Parallel reduce supports multiple functions, like &lt;code&gt;std.algorithm.reduce&lt;/code&gt;.</source>
          <target state="translated">并行减少支持多种功能，例如 &lt;code&gt;std.algorithm.reduce&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7564a5560d76d7619eabad0cf5b241d011ae8e5e" translate="yes" xml:space="preserve">
          <source>ParallelForeach!R &lt;strong id=&quot;parallel&quot;&gt;parallel&lt;/strong&gt;(R)(R range);</source>
          <target state="translated">ParallelForeach！R &lt;strong id=&quot;parallel&quot;&gt;平行&lt;/strong&gt;（R）（R范围）;</target>
        </trans-unit>
        <trans-unit id="706e0f72ea7909cb27d89524808db6808cb50661" translate="yes" xml:space="preserve">
          <source>ParallelForeach!R &lt;strong id=&quot;parallel&quot;&gt;parallel&lt;/strong&gt;(R)(R range, size_t workUnitSize);</source>
          <target state="translated">ParallelForeach！R &lt;strong id=&quot;parallel&quot;&gt;parallel&lt;/strong&gt;（R）（R range，size_t workUnitSize）;</target>
        </trans-unit>
        <trans-unit id="c65074d6db6bccb661f4773c38d3324964921272" translate="yes" xml:space="preserve">
          <source>Param &lt;code&gt;params&lt;/code&gt;</source>
          <target state="translated">参数 &lt;code&gt;params&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19f29f198f4dec4eb5c8f9b8be59082811067ae8" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;p&lt;/code&gt;</source>
          <target state="translated">参数 &lt;code&gt;p&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b71e169e1a186fb6f6f76028af43dfbd5d2d9bc" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;par&lt;/code&gt;</source>
          <target state="translated">参数 &lt;code&gt;par&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84083975aaa4d13fa2983979d72578766d2ff82b" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;parameter&lt;/code&gt;</source>
          <target state="translated">参数 &lt;code&gt;parameter&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="23c85a1fcaf0a5cf78d51f0fe59e5d98d3c0a372" translate="yes" xml:space="preserve">
          <source>Parameter Storage Classes</source>
          <target state="translated">参数存储类</target>
        </trans-unit>
        <trans-unit id="db82d68363ec6e38305dc78db53ba4671015a864" translate="yes" xml:space="preserve">
          <source>Parameter may be returned or copied to the first parameter, but otherwise does not escape from the function. Such copies are required not to outlive the argument(s) they were derived from. Ignored for parameters with no references. See &lt;a href=&quot;memory-safe-d#scope-return-params&quot;&gt;Scope Parameters&lt;/a&gt;.</source>
          <target state="translated">可以将参数返回或复制到第一个参数，但否则不会从函数中逸出。要求此类副本不超过其源自的论点。忽略没有参考的参数。请参阅&lt;a href=&quot;memory-safe-d#scope-return-params&quot;&gt;范围参数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1a8ada0f324dda2754e9706db00c66db9f30cac7" translate="yes" xml:space="preserve">
          <source>Parameter storage classes are &lt;code&gt;in&lt;/code&gt;, &lt;code&gt;out&lt;/code&gt;, &lt;code&gt;ref&lt;/code&gt;, &lt;code&gt;lazy&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;immutable&lt;/code&gt;, &lt;code&gt;shared&lt;/code&gt;, &lt;code&gt;inout&lt;/code&gt; or &lt;code&gt;scope&lt;/code&gt;. For example:</source>
          <target state="translated">参数存储类为 &lt;code&gt;in&lt;/code&gt; ， &lt;code&gt;out&lt;/code&gt; ， &lt;code&gt;ref&lt;/code&gt; ， &lt;code&gt;lazy&lt;/code&gt; ， &lt;code&gt;const&lt;/code&gt; ， &lt;code&gt;immutable&lt;/code&gt; ， &lt;code&gt;shared&lt;/code&gt; ， &lt;code&gt;inout&lt;/code&gt; 或 &lt;code&gt;scope&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="004e5a295e2f487773343c35732d9eecbd50322f" translate="yes" xml:space="preserve">
          <source>Parameter storage classes are &lt;code&gt;in&lt;/code&gt;, &lt;code&gt;out&lt;/code&gt;, &lt;code&gt;ref&lt;/code&gt;, &lt;code&gt;lazy&lt;/code&gt;, &lt;code&gt;scope&lt;/code&gt; and &lt;code&gt;inout&lt;/code&gt;. Parameters can also take the type constructors &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;immutable&lt;/code&gt; and &lt;code&gt;shared&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71c366db210cd4901a72bb5ff201e1d4ea42b76" translate="yes" xml:space="preserve">
          <source>Parameter to compare with</source>
          <target state="translated">比较的参数</target>
        </trans-unit>
        <trans-unit id="4bef6f8918d2b6dbb2184051845a0c285876469b" translate="yes" xml:space="preserve">
          <source>Parameter* nth Parameter NULL not found, *pn gets incremented by the number of Parameters</source>
          <target state="translated">参数*第n个参数 NULL未找到,*pn按参数数递增。</target>
        </trans-unit>
        <trans-unit id="acdf35da4c553e1dfc2210109486c37c589cbf86" translate="yes" xml:space="preserve">
          <source>ParameterList</source>
          <target state="translated">ParameterList</target>
        </trans-unit>
        <trans-unit id="dc69505d72ec1dc997f6344835bf90cc49a5fc7d" translate="yes" xml:space="preserve">
          <source>ParameterList &lt;code&gt;pl&lt;/code&gt;</source>
          <target state="translated">ParameterList &lt;code&gt;pl&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="e23226b56e57669c7eee387e75bb0eeb4eacb099" translate="yes" xml:space="preserve">
          <source>Parameters are always pushed as multiples of 4 bytes, rounding upwards, so the stack is always aligned on 4 byte boundaries. They are pushed most significant first. &lt;b&gt;out&lt;/b&gt; and &lt;b&gt;ref&lt;/b&gt; are passed as pointers. Static arrays are passed as pointers to their first element. On Windows, a real is pushed as a 10 byte quantity, a creal is pushed as a 20 byte quantity. On Linux, a real is pushed as a 12 byte quantity, a creal is pushed as two 12 byte quantities. The extra two bytes of pad occupy the &amp;lsquo;most significant&amp;rsquo; position.</source>
          <target state="translated">参数总是按4字节的倍数向上推入，因此堆栈始终按4字节边界对齐。他们被推到最重要的第一位。&lt;b&gt;out&lt;/b&gt;和&lt;b&gt;ref&lt;/b&gt;作为指针传递。静态数组作为指向其第一个元素的指针传递。在Windows上，实数按10字节数量推送，实数按20字节数量推送。在Linux上，实数被推入12字节数量，实数被推入两个12字节数量。填充的额外两个字节占据&amp;ldquo;最高有效&amp;rdquo;位置。</target>
        </trans-unit>
        <trans-unit id="2788d7232604fa7de143f891d6677fee828b587d" translate="yes" xml:space="preserve">
          <source>Parameters for the generator.</source>
          <target state="translated">发电机的参数。</target>
        </trans-unit>
        <trans-unit id="d306b7545fffdce649df065d88dd5bff37d729ec" translate="yes" xml:space="preserve">
          <source>Parameters marked as &lt;code&gt;ref return scope&lt;/code&gt; come in two forms:</source>
          <target state="translated">标记为 &lt;code&gt;ref return scope&lt;/code&gt; 参数有两种形式：</target>
        </trans-unit>
        <trans-unit id="9cbfd0370d2df7813205bb7b748f4a1db07a858e" translate="yes" xml:space="preserve">
          <source>Parameters marked as &lt;code&gt;return scope&lt;/code&gt; that contain indirections can only escape those indirections via the function's return value.</source>
          <target state="translated">标记为包含间接作用的 &lt;code&gt;return scope&lt;/code&gt; 参数只能通过函数的返回值来转义那些间接作用。</target>
        </trans-unit>
        <trans-unit id="502a49319f9747d485d0e90ac781bf4a89a3c3b9" translate="yes" xml:space="preserve">
          <source>Parameters passed to SQL geom function</source>
          <target state="translated">传递给SQL geom函数的参数</target>
        </trans-unit>
        <trans-unit id="25ba1dff4c429f0d3704cf2f68f66eb3b3ee6f38" translate="yes" xml:space="preserve">
          <source>Parameters that will be used to call &lt;code&gt;Hook&lt;/code&gt;</source>
          <target state="translated">用于调用 &lt;code&gt;Hook&lt;/code&gt; 的参数</target>
        </trans-unit>
        <trans-unit id="069dcf15e5fa7ccfab22c19c69c59b0dc2aac4bf" translate="yes" xml:space="preserve">
          <source>Parameters!Hook &lt;code&gt;parameters&lt;/code&gt;</source>
          <target state="translated">参数！挂钩 &lt;code&gt;parameters&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="dc124689c7040d627a2c6490eec999443990ba30" translate="yes" xml:space="preserve">
          <source>Params</source>
          <target state="translated">Params</target>
        </trans-unit>
        <trans-unit id="4ed743af9079012d0a99ea8273ea7148ae91ca44" translate="yes" xml:space="preserve">
          <source>Parent allocator. For construction from stateless allocators, use their &lt;code&gt;instance&lt;/code&gt; static member.</source>
          <target state="translated">父分配器。对于从无状态分配器进行的构造，请使用其 &lt;code&gt;instance&lt;/code&gt; 静态成员。</target>
        </trans-unit>
        <trans-unit id="d4de297e82ffd6596306e4e19bbc9ab418447bf3" translate="yes" xml:space="preserve">
          <source>Parent in hierarchy</source>
          <target state="translated">父级</target>
        </trans-unit>
        <trans-unit id="a02d47ba7fa60fd2ab7f1a415fe78a36422c1536" translate="yes" xml:space="preserve">
          <source>ParentAllocator</source>
          <target state="translated">ParentAllocator</target>
        </trans-unit>
        <trans-unit id="5208ea3f897cc37caf351c89b3fed673268fa9dc" translate="yes" xml:space="preserve">
          <source>ParentAllocator &lt;code&gt;parent&lt;/code&gt;</source>
          <target state="translated">ParentAllocator &lt;code&gt;parent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0ef7ffe567a6538a14ef66b4087f755c7083c14" translate="yes" xml:space="preserve">
          <source>ParentAllocator &lt;strong id=&quot;parent&quot;&gt;parent&lt;/strong&gt;;</source>
          <target state="translated">ParentAllocator &lt;strong id=&quot;parent&quot;&gt;父母&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="20cf2e4a28aece4982d86333c6a7c89937b5f638" translate="yes" xml:space="preserve">
          <source>Parse a Type or an Expression</source>
          <target state="translated">解析一个类型或一个表达式</target>
        </trans-unit>
        <trans-unit id="0e5ba08ab31df24d5fcda076622754be8a9e95a4" translate="yes" xml:space="preserve">
          <source>Parse a UUID from its canonical string form. An UUID in its canonical form looks like this: 8ab3060e-2cba-4f23-b74c-b52db3bdfb46</source>
          <target state="translated">从UUID的规范字符串形式解析UUID。一个UUID的规范形式是这样的。8ab3060e-2cba-4f23-b74c-b52db3bdfb46。</target>
        </trans-unit>
        <trans-unit id="b51f894038d0008dfbaa74d81a6b8df2bd125491" translate="yes" xml:space="preserve">
          <source>Parse a module from a string.</source>
          <target state="translated">从字符串中解析一个模块。</target>
        </trans-unit>
        <trans-unit id="b116297c1a492c7acb3eb37d11ee586ead05b0ff" translate="yes" xml:space="preserve">
          <source>Parse an IPv4 address string in the dotted-decimal form</source>
          <target state="translated">解析IPv4地址字符串的点阵形式。</target>
        </trans-unit>
        <trans-unit id="67d488bcba9b3f579efe720c5d6e269019c76b78" translate="yes" xml:space="preserve">
          <source>Parse an IPv6 host address string as described in RFC 2373, and return the address.</source>
          <target state="translated">按照RFC 2373中的描述,解析一个IPv6主机地址字符串,并返回地址。</target>
        </trans-unit>
        <trans-unit id="0c6ef6ffd6736f6311741aad939e47729e152363" translate="yes" xml:space="preserve">
          <source>Parse an XML element.</source>
          <target state="translated">解析一个XML元素。</target>
        </trans-unit>
        <trans-unit id="89da31932d3708e3b7f3503b77f46c37056d3caf" translate="yes" xml:space="preserve">
          <source>Parse and remove command line options from a string array.</source>
          <target state="translated">从字符串数组中解析和删除命令行选项。</target>
        </trans-unit>
        <trans-unit id="e78dfe1951ae384f0bb186772bb44b9d1b41fc31" translate="yes" xml:space="preserve">
          <source>Parse and run semantic analysis on a GccAsmStatement.</source>
          <target state="translated">对GccAsmStatement进行解析并运行语义分析。</target>
        </trans-unit>
        <trans-unit id="d6a83ca7d0d7d4947b1a0c1ec0d979ee479df908" translate="yes" xml:space="preserve">
          <source>Parse command line arguments for the last instance of -conf=path.</source>
          <target state="translated">解析最后一个实例-conf=path的命令行参数。</target>
        </trans-unit>
        <trans-unit id="3da392b34053839507509c2ba69da833f60b469e" translate="yes" xml:space="preserve">
          <source>Parse command line arguments for the last instance of -m32, -m64 or -m32mscoff to detect the desired architecture.</source>
          <target state="translated">解析-m32、-m64或-m32mscoff最后一个实例的命令行参数,以检测所需的架构。</target>
        </trans-unit>
        <trans-unit id="16dac6c4d17dadf18f0e007b7333e3ad86945a6a" translate="yes" xml:space="preserve">
          <source>Parse command line arguments.</source>
          <target state="translated">解析命令行参数。</target>
        </trans-unit>
        <trans-unit id="76560b479dcbd840417cf615a5d133fe4aeeebec" translate="yes" xml:space="preserve">
          <source>Parse escapes of the form: /c/string/ where c is a single character. Multiple escapes can be separated by whitespace and/or commas.</source>
          <target state="translated">解析格式为:/c/string/其中c是一个字符。多个转义符可以用空格和/或逗号分隔。</target>
        </trans-unit>
        <trans-unit id="94b991a478ac4b7e91a93538b4ab0b1f64db972e" translate="yes" xml:space="preserve">
          <source>Parse macros out of Macros: section. Macros are of the form: name1 = value1</source>
          <target state="translated">将宏解析出Macros:部分。宏的形式为:name1=value1</target>
        </trans-unit>
        <trans-unit id="ae17436f43a711859e6e5f23964c5153a1bfdd8e" translate="yes" xml:space="preserve">
          <source>Parse next paragraph out of *pcomment. Update *pcomment to point past paragraph. Returns NULL if no more paragraphs. If paragraph ends in 'identifier:', then (*pcomment)[0 .. idlen] is the identifier.</source>
          <target state="translated">从*pcomment中解析出下一段。更新*pcomment以指向过去的段落。如果没有段落了,返回NULL。如果段落以'identifier:'结尾,那么(*pcomment)[0 ...idlen]是标识符。</target>
        </trans-unit>
        <trans-unit id="450dba0c77946e5c69e86c55b859d9b21735d00b" translate="yes" xml:space="preserve">
          <source>Parse the given &lt;code&gt;fieldName&lt;/code&gt; and return its corresponding JsonFieldFlags value.</source>
          <target state="translated">解析给定的 &lt;code&gt;fieldName&lt;/code&gt; 并返回其对应的JsonFieldFlags值。</target>
        </trans-unit>
        <trans-unit id="7f72edc0b8c3b6f31c38aaff9b2735f81dc8dd93" translate="yes" xml:space="preserve">
          <source>Parse unicode codepoint set from given &lt;code&gt;range&lt;/code&gt; using standard regex syntax '[...]'. The range is advanced skiping over regex set definition. &lt;code&gt;casefold&lt;/code&gt; parameter determines if the set should be casefolded - that is include both lower and upper case versions for any letters in the set.</source>
          <target state="translated">使用标准正则表达式语法'[...]' 解析给定 &lt;code&gt;range&lt;/code&gt; unicode代码点集。该范围是高级的，跳过了正则表达式集定义。 &lt;code&gt;casefold&lt;/code&gt; 参数确定是否应该对集合进行大小写折叠-包括集合中任何字母的小写和大写版本。</target>
        </trans-unit>
        <trans-unit id="a01a2b8150c64549e9cd4c96ee16b8a26bcdaaf2" translate="yes" xml:space="preserve">
          <source>ParserHandler[string] &lt;strong id=&quot;onStartTag&quot;&gt;onStartTag&lt;/strong&gt;;</source>
          <target state="translated">ParserHandler [string] &lt;strong id=&quot;onStartTag&quot;&gt;onStartTag&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="8b0d0e766dced46908a81c9cd127077bfd46fd30" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;dmd.conf&lt;/code&gt; or &lt;code&gt;ldc2.conf&lt;/code&gt; config file and returns defined import paths.</source>
          <target state="translated">解析 &lt;code&gt;dmd.conf&lt;/code&gt; 或 &lt;code&gt;ldc2.conf&lt;/code&gt; 配置文件并返回定义的导入路径。</target>
        </trans-unit>
        <trans-unit id="f512da601d22b0ee2b2cf1c48af79181f827811e" translate="yes" xml:space="preserve">
          <source>Parses a character &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; to an integral value.</source>
          <target state="translated">将字符&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;解析为整数值。</target>
        </trans-unit>
        <trans-unit id="2fd2971a74ccde0fbdc27f87fc034b74ba2c4cde" translate="yes" xml:space="preserve">
          <source>Parses a character range to a floating point number.</source>
          <target state="translated">将一个字符范围解析为浮点数。</target>
        </trans-unit>
        <trans-unit id="9e8db731dd580734da1b87439d32c23c6c0b87c3" translate="yes" xml:space="preserve">
          <source>Parses a serialized string and returns a tree of JSON values.</source>
          <target state="translated">解析一个序列化的字符串并返回JSON值的树。</target>
        </trans-unit>
        <trans-unit id="010c8d1e4fe323ec58d09feb50b1819dc73f74ee" translate="yes" xml:space="preserve">
          <source>Parses an array from a string given the left bracket (default &lt;code&gt; '['&lt;/code&gt;), right bracket (default &lt;code&gt;']'&lt;/code&gt;), and element separator (by default &lt;code&gt;','&lt;/code&gt;). A trailing separator is allowed.</source>
          <target state="translated">从给定左括号（默认为 &lt;code&gt; '['&lt;/code&gt; ），右括号（默认为 &lt;code&gt;']'&lt;/code&gt; ）和元素分隔符（默认为 &lt;code&gt;','&lt;/code&gt; ）的字符串中解析数组。允许使用尾随分隔符。</target>
        </trans-unit>
        <trans-unit id="fea81b03a9b6108256fd6dbd49ffa4e506987c1b" translate="yes" xml:space="preserve">
          <source>Parses an associative array from a string given the left bracket (default &lt;code&gt; '['&lt;/code&gt;), right bracket (default &lt;code&gt;']'&lt;/code&gt;), key-value separator (default &lt;code&gt; ':'&lt;/code&gt;), and element seprator (by default &lt;code&gt;','&lt;/code&gt;).</source>
          <target state="translated">分析从一个字符串关联数组给出的左括号（默认 &lt;code&gt; '['&lt;/code&gt; ），右支架（默认 &lt;code&gt;']'&lt;/code&gt; ），键值分离器（默认 &lt;code&gt; ':'&lt;/code&gt; ），和元素seprator（默认 &lt;code&gt;','&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="29a5987ba0d6709de3c0fabafe685ca0830538a2" translate="yes" xml:space="preserve">
          <source>Parses an environment variable containing command-line flags and append them to &lt;code&gt;args&lt;/code&gt;.</source>
          <target state="translated">解析包含命令行标志的环境变量，并将其附加到 &lt;code&gt;args&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7294d33710169103141018bfcb0ee5ad3daa81e2" translate="yes" xml:space="preserve">
          <source>Parsing</source>
          <target state="translated">Parsing</target>
        </trans-unit>
        <trans-unit id="01fb58e60a8182fb22f2e27607c68467bfc3bdb1" translate="yes" xml:space="preserve">
          <source>Parsing - documentation comments are associated with specific declarations and combined.</source>
          <target state="translated">解析--文档注释与具体的声明相关联,并结合。</target>
        </trans-unit>
        <trans-unit id="671420d39349223d076271ea629f4c237238047b" translate="yes" xml:space="preserve">
          <source>Parsing UUIDs</source>
          <target state="translated">解析UUIDs</target>
        </trans-unit>
        <trans-unit id="c3a20404291f5cb0bb0fa13bb84a38c285e4f8ae" translate="yes" xml:space="preserve">
          <source>Parsing a character range to &lt;code&gt;typeof(null)&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt; if the range spells &lt;code&gt;&quot;null&quot;&lt;/code&gt;. This function is case insensitive.</source>
          <target state="translated">如果范围拼写为 &lt;code&gt;&quot;null&quot;&lt;/code&gt; 则将字符范围解析为 &lt;code&gt;typeof(null)&lt;/code&gt; 会返回 &lt;code&gt;null&lt;/code&gt; 。此功能不区分大小写。</target>
        </trans-unit>
        <trans-unit id="acb8728b53850d44b474cf8209395699a79a166a" translate="yes" xml:space="preserve">
          <source>Parsing of command-line arguments.</source>
          <target state="translated">命令行参数的解析。</target>
        </trans-unit>
        <trans-unit id="2e18e65dcec5e7545a8602e57cc211ae0081392b" translate="yes" xml:space="preserve">
          <source>Parsing one character off a range returns the first element and calls &lt;code&gt;popFront&lt;/code&gt;.</source>
          <target state="translated">解析范围之外的一个字符将返回第一个元素，并调用 &lt;code&gt;popFront&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2dad0714188f44cd45907047ae561e99a63a08c9" translate="yes" xml:space="preserve">
          <source>Parsing will continue until the end of the current element. Any items encountered for which a handler has been registered will invoke that handler.</source>
          <target state="translated">解析将继续进行,直到当前元素结束。遇到任何已经注册了处理程序的项目将调用该处理程序。</target>
        </trans-unit>
        <trans-unit id="a46e9f47f04b2771004f9c356a6d8ef5ab1cf5ec" translate="yes" xml:space="preserve">
          <source>Part of the compiler implementation of the &lt;a href=&quot;http://www.dlang.org&quot;&gt;D programming language&lt;/a&gt;.</source>
          <target state="translated">部分编译器实现了&lt;a href=&quot;http://www.dlang.org&quot;&gt;D编程语言&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2c7d58db405da47a0ea70ef1084b0193adb3b219" translate="yes" xml:space="preserve">
          <source>Partial initialization is done for types with indirections, for preservation of memory safety. Note that elements will only be initialized to 0, but not necessarily the element type's &lt;code&gt;.init&lt;/code&gt;.</source>
          <target state="translated">为了保留内存的安全性，对带有间接类型的类型进行了部分初始化。请注意，元素只会被初始化为0，而不必初始化为元素类型的 &lt;code&gt;.init&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5c165ff2135d9bd04e4f69754b1ce23000c2a39" translate="yes" xml:space="preserve">
          <source>Partial instantiation</source>
          <target state="translated">部分实例</target>
        </trans-unit>
        <trans-unit id="552793e4d3491d3b039b2e499862419408241568" translate="yes" xml:space="preserve">
          <source>Partially shuffles the elements of &lt;code&gt;r&lt;/code&gt; such that upon returning &lt;code&gt;r[0 .. n]&lt;/code&gt; is a random subset of &lt;code&gt;r&lt;/code&gt; and is randomly ordered. &lt;code&gt;r[n .. r.length]&lt;/code&gt; will contain the elements not in &lt;code&gt;r[0 .. n]&lt;/code&gt;. These will be in an undefined order, but will not be random in the sense that their order after &lt;code&gt;partialShuffle&lt;/code&gt; returns will not be independent of their order before &lt;code&gt;partialShuffle&lt;/code&gt; was called.</source>
          <target state="translated">部分重组 &lt;code&gt;r&lt;/code&gt; 的元素，以便在返回 &lt;code&gt;r[0 .. n]&lt;/code&gt; 是 &lt;code&gt;r&lt;/code&gt; 的随机子集，并且被随机排序。 &lt;code&gt;r[n .. r.length]&lt;/code&gt; 将包含不在 &lt;code&gt;r[0 .. n]&lt;/code&gt; 的元素。这些将处于未定义的顺序，但是从 &lt;code&gt;partialShuffle&lt;/code&gt; 返回之后它们的顺序将不会独立于它们在调用 &lt;code&gt;partialShuffle&lt;/code&gt; 之前的顺序的意义上来说，它们将不是随机的。</target>
        </trans-unit>
        <trans-unit id="6deb7e3f7b32019949732214ec87ba853c993108" translate="yes" xml:space="preserve">
          <source>Particular keys in an associative array can be removed with the &lt;code&gt;remove&lt;/code&gt; function:</source>
          <target state="translated">可以使用 &lt;code&gt;remove&lt;/code&gt; 函数删除关联数组中的特定键：</target>
        </trans-unit>
        <trans-unit id="4d8d29c37cfa9d2ee47bae5429be39d9f989f27b" translate="yes" xml:space="preserve">
          <source>Partitioning</source>
          <target state="translated">Partitioning</target>
        </trans-unit>
        <trans-unit id="b04b13ef82480fe65f509b932faa4e4d3aa51b27" translate="yes" xml:space="preserve">
          <source>Partitions &lt;code&gt;r&lt;/code&gt; around &lt;code&gt;pivot&lt;/code&gt; using comparison function &lt;code&gt;less&lt;/code&gt;, algorithm akin to &lt;a href=&quot;https://en.wikipedia.org/wiki/Quicksort#Hoare_partition_scheme&quot;&gt;Hoare partition&lt;/a&gt;. Specifically, permutes elements of &lt;code&gt;r&lt;/code&gt; and returns an index &lt;code&gt;k &amp;lt; r.length&lt;/code&gt; such that:</source>
          <target state="translated">围绕 &lt;code&gt;pivot&lt;/code&gt; 分区 &lt;code&gt;r&lt;/code&gt; 使用 &lt;code&gt;less&lt;/code&gt; 比较函数，类似于&lt;a href=&quot;https://en.wikipedia.org/wiki/Quicksort#Hoare_partition_scheme&quot;&gt;Hoare分区的&lt;/a&gt;算法。具体来说，置换 &lt;code&gt;r&lt;/code&gt; 的元素并返回索引 &lt;code&gt;k &amp;lt; r.length&lt;/code&gt; ，使得：</target>
        </trans-unit>
        <trans-unit id="f79755d9888b3272c0008f26ee250ed68d156755" translate="yes" xml:space="preserve">
          <source>Partitions a range according to a binary predicate in three parts (less than, equal, greater than the given pivot). Pivot is not given as an index, but instead as an element independent from the range's content.</source>
          <target state="translated">根据二进制谓词将一个范围分成三部分(小于、等于、大于给定的枢轴)。枢轴不是作为索引给出的,而是作为独立于范围内容的元素给出的。</target>
        </trans-unit>
        <trans-unit id="93b7b53fcf2afd03f0b9c28b1730d679f111ebc2" translate="yes" xml:space="preserve">
          <source>Partitions a range according to a binary predicate in two parts: less than or equal, and greater than or equal to the given pivot, passed as an index in the range.</source>
          <target state="translated">根据二进制谓词将一个范围分成两部分:小于或等于,以及大于或等于给定的枢轴,作为索引传递给范围。</target>
        </trans-unit>
        <trans-unit id="ac2a297ca539adc310f95ab7029aa05a0e235c5d" translate="yes" xml:space="preserve">
          <source>Partitions a range according to a unary predicate.</source>
          <target state="translated">根据单数谓词对一个范围进行分割。</target>
        </trans-unit>
        <trans-unit id="f25bf3d69c2aa505fafd2a2553231a4df6e4f1b8" translate="yes" xml:space="preserve">
          <source>Partitions a range in two using the given &lt;code&gt;predicate&lt;/code&gt;. Specifically, reorders the range &lt;code&gt;r = [left, right)&lt;/code&gt; using &lt;code&gt;swap&lt;/code&gt; such that all elements &lt;code&gt;i&lt;/code&gt; for which &lt;code&gt;predicate(i)&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; come before all elements &lt;code&gt;j&lt;/code&gt; for which &lt;code&gt;predicate(j)&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">使用给定的 &lt;code&gt;predicate&lt;/code&gt; 将范围分为两部分。具体而言，重新排列范围 &lt;code&gt;r = [left, right)&lt;/code&gt; 使用 &lt;code&gt;swap&lt;/code&gt; ，使得所有元素 &lt;code&gt;i&lt;/code&gt; 为哪些 &lt;code&gt;predicate(i)&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; 的所有元素之前来 &lt;code&gt;j&lt;/code&gt; 为其 &lt;code&gt;predicate(j)&lt;/code&gt; 返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0f75fc950076ea23262b37e57dc6555e4d8852e7" translate="yes" xml:space="preserve">
          <source>Pass a long set to 1 to get the date of the requested document (if possible)! Pass a zero to shut it off.</source>
          <target state="translated">传长设为1,获得所需文件的日期(如果可能的话)! 传递一个0来关闭它。</target>
        </trans-unit>
        <trans-unit id="3f5674a1b58ad7659cf778d1abbfee0c9e1ed868" translate="yes" xml:space="preserve">
          <source>Pass a pointer to string of the output using full variable-replacement as described elsewhere.</source>
          <target state="translated">传递一个指针到使用全变量替换的输出字符串,如其他地方所述。</target>
        </trans-unit>
        <trans-unit id="52eba02333e380244052de14b336d30251cdb44e" translate="yes" xml:space="preserve">
          <source>Pass a range by reference. Both the original range and the RefRange will always have the exact same elements. Any operation done on one will affect the other.</source>
          <target state="translated">通过引用传递一个范围。原始范围和RefRange的元素总是完全相同的。对其中一个进行的任何操作都会影响另一个。</target>
        </trans-unit>
        <trans-unit id="ac35e3c93500b335f934dc933300ae8ca4d024c6" translate="yes" xml:space="preserve">
          <source>Pass unrecognized arguments through</source>
          <target state="translated">将未识别的参数通过</target>
        </trans-unit>
        <trans-unit id="44bd5cb378ee1ee4f1228ce102d89ccec6984f72" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;NullAllocator&lt;/code&gt; as &lt;code&gt;ParentAllocator&lt;/code&gt; (the default) means user code manages allocation of the memory block from the outside; in that case &lt;code&gt;BitmappedBlock&lt;/code&gt; must be constructed with a &lt;code&gt;ubyte[]&lt;/code&gt; preallocated block and has no responsibility regarding the lifetime of its support underlying storage. If another allocator type is passed, &lt;code&gt;BitmappedBlock&lt;/code&gt; defines a destructor that uses the parent allocator to release the memory block. That makes the combination of &lt;code&gt;AllocatorList&lt;/code&gt;, &lt;code&gt;BitmappedBlock&lt;/code&gt;, and a back-end allocator such as &lt;code&gt;MmapAllocator&lt;/code&gt; a simple and scalable solution for memory allocation.</source>
          <target state="translated">传递 &lt;code&gt;NullAllocator&lt;/code&gt; 作为 &lt;code&gt;ParentAllocator&lt;/code&gt; （默认）指用户代码管理从外部存储器块的分配; 在那种情况下， &lt;code&gt;BitmappedBlock&lt;/code&gt; 必须使用 &lt;code&gt;ubyte[]&lt;/code&gt; 预分配的块构造，并且对其支持底层存储的生存期不承担任何责任。如果传递了其他分配器类型，则 &lt;code&gt;BitmappedBlock&lt;/code&gt; 定义一个析构函数，该析构函数使用父分配器释放内存块。这使得 &lt;code&gt;AllocatorList&lt;/code&gt; ， &lt;code&gt;BitmappedBlock&lt;/code&gt; 和后端分配器（例如 &lt;code&gt;MmapAllocator&lt;/code&gt; )的组合成为内存分配的简单且可扩展的解决方案。</target>
        </trans-unit>
        <trans-unit id="5d0b17b99c1c31f95b843582b717ee3647838d67" translate="yes" xml:space="preserve">
          <source>Passing D Array Arguments to C Functions</source>
          <target state="translated">将D数组参数传递给C函数</target>
        </trans-unit>
        <trans-unit id="eab9975f41d5c74a2370c8f84743e69843a5e474" translate="yes" xml:space="preserve">
          <source>Passing unrecognized options through</source>
          <target state="translated">将未识别的选项通过</target>
        </trans-unit>
        <trans-unit id="245e083e1de3b281962953ef4c8bba890cc16972" translate="yes" xml:space="preserve">
          <source>Path separator string. A colon under POSIX, a semicolon under Windows.</source>
          <target state="translated">路径分隔符字符串,POSIX下为冒号,Windows下为分号。POSIX下为冒号,Windows下为分号。</target>
        </trans-unit>
        <trans-unit id="8a0630dfd701136ea97bb93baa3f48f2f71f6dea" translate="yes" xml:space="preserve">
          <source>Path to append the extension to</source>
          <target state="translated">添加扩展名的路径</target>
        </trans-unit>
        <trans-unit id="7879e48604fb8a9352e65e81497109347fdf13ce" translate="yes" xml:space="preserve">
          <source>Path to append to</source>
          <target state="translated">要附加到的路径</target>
        </trans-unit>
        <trans-unit id="871b729292ecc14b245e2db0bdadacebeffad0e9" translate="yes" xml:space="preserve">
          <source>Path to escape</source>
          <target state="translated">逃生之路</target>
        </trans-unit>
        <trans-unit id="ee9a42a975678be8d750fa1e306adc2573e3c20e" translate="yes" xml:space="preserve">
          <source>Path to file</source>
          <target state="translated">文件路径</target>
        </trans-unit>
        <trans-unit id="d5c2c7b442d98245aa2f83265a1b4bf791a5b2fe" translate="yes" xml:space="preserve">
          <source>Path to the output file. Empty means stdout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead499111ecd4dc6ec4cbcffe1b1a34907e01dae" translate="yes" xml:space="preserve">
          <source>Pattern element</source>
          <target state="translated">图案要素</target>
        </trans-unit>
        <trans-unit id="bc76225c74f5799424ec5c0bcc1a8bb1758d6b49" translate="yes" xml:space="preserve">
          <source>Pattern syntax</source>
          <target state="translated">模式语法</target>
        </trans-unit>
        <trans-unit id="ae34ebfd21aa731bd17545dfb65562d51ef9cefc" translate="yes" xml:space="preserve">
          <source>Pattern_Syntax</source>
          <target state="translated">Pattern_Syntax</target>
        </trans-unit>
        <trans-unit id="fa2b00d38cc48111285d15ff11e6749be9586681" translate="yes" xml:space="preserve">
          <source>Pattern_White_Space</source>
          <target state="translated">Pattern_White_Space</target>
        </trans-unit>
        <trans-unit id="2773f73c1260fdec728435d456edb08be91eaf8e" translate="yes" xml:space="preserve">
          <source>Pausing and continuing transfers.</source>
          <target state="translated">暂停和继续转移。</target>
        </trans-unit>
        <trans-unit id="a9825d613366c20e6809b1ce3e60e5a34a14dd1a" translate="yes" xml:space="preserve">
          <source>Pavel &quot;EvilOne&quot; Minayev, Alex R&amp;oslash;nne Petersen, Johannes Pfau</source>
          <target state="translated">Pavel&amp;ldquo; EvilOne&amp;rdquo; Minayev，AlexR&amp;oslash;nnePetersen，Johannes Pfau</target>
        </trans-unit>
        <trans-unit id="fa22cd0363497002cc358c8b4b6ff84f5941b5c4" translate="yes" xml:space="preserve">
          <source>Pc</source>
          <target state="translated">Pc</target>
        </trans-unit>
        <trans-unit id="76a62826607c85765e35f282cd82db5a3e6bbe06" translate="yes" xml:space="preserve">
          <source>Pd</source>
          <target state="translated">Pd</target>
        </trans-unit>
        <trans-unit id="b5034c4cb6e7781f4f1616341f8f6731b9bca6e2" translate="yes" xml:space="preserve">
          <source>Pe</source>
          <target state="translated">Pe</target>
        </trans-unit>
        <trans-unit id="737b6ba72b87c53c37d0b001c2aa00d7d1551419" translate="yes" xml:space="preserve">
          <source>Peek at the amount of time that the the StopWatch has been running.</source>
          <target state="translated">窥视StopWatch的运行时间。</target>
        </trans-unit>
        <trans-unit id="ba8e29927006e6152b4f643044adfec962f7e76c" translate="yes" xml:space="preserve">
          <source>Peek at the amount of time which has passed since the stop watch was started.</source>
          <target state="translated">窥视停表开始后已经过去的时间。</target>
        </trans-unit>
        <trans-unit id="c291bbfff282d82d34ba5468ffd4ea28a98b87c3" translate="yes" xml:space="preserve">
          <source>Pentium 4 (Prescott) Opcodes Supported</source>
          <target state="translated">支持Pentium 4 (Prescott)操作码</target>
        </trans-unit>
        <trans-unit id="0a5cbdbd4ebf4f323d8c911e71d85e0d86957bd0" translate="yes" xml:space="preserve">
          <source>Pentium 4 Opcodes</source>
          <target state="translated">Pentium 4操作码</target>
        </trans-unit>
        <trans-unit id="9704c847ebabc174a51703f8d46bb87c126e50e9" translate="yes" xml:space="preserve">
          <source>Per the C99 Standard, extra arguments are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95531d61182885c855fd4e357f3a17ac6875cfe" translate="yes" xml:space="preserve">
          <source>Per thread record to store thread associated data for garbage collection.</source>
          <target state="translated">每条线程记录存储线程相关数据,用于垃圾收集。</target>
        </trans-unit>
        <trans-unit id="03a06ad8bd49d2e4b75d4adff803a56ee9bba6c2" translate="yes" xml:space="preserve">
          <source>Perform &lt;code&gt;static foreach&lt;/code&gt; lowerings that are necessary in order to finally expand the &lt;code&gt;static foreach&lt;/code&gt; using &lt;code&gt;dmd.statementsem.makeTupleForeach&lt;/code&gt;.</source>
          <target state="translated">执行必要的 &lt;code&gt;static foreach&lt;/code&gt; 降低操作，以最终使用 &lt;code&gt;dmd.statementsem.makeTupleForeach&lt;/code&gt; 扩展 &lt;code&gt;static foreach&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6881379825244d35d3e8d9a76db4341cbfb7cf3b" translate="yes" xml:space="preserve">
          <source>Perform a http request.</source>
          <target state="translated">执行http请求。</target>
        </trans-unit>
        <trans-unit id="9e8bf93c00f6d0187fa920c5e2e73b433a1a8816" translate="yes" xml:space="preserve">
          <source>Perform a semantic equivalent 2 operations: decoding a &lt;a href=&quot;#Code%20point&quot;&gt;code point&lt;/a&gt; at front of &lt;code&gt;inp&lt;/code&gt; and testing if it belongs to the set of &lt;a href=&quot;#Code%20point&quot;&gt;code points&lt;/a&gt; of this matcher.</source>
          <target state="translated">执行语义等效的2个操作：解码 &lt;code&gt;inp&lt;/code&gt; 前面的&lt;a href=&quot;#Code%20point&quot;&gt;代码点&lt;/a&gt;，并测试它是否属于此匹配器的&lt;a href=&quot;#Code%20point&quot;&gt;代码点&lt;/a&gt;集。</target>
        </trans-unit>
        <trans-unit id="270a7cd4b73a5b4c8e1329fbcbf3a7a8d8f1d4a2" translate="yes" xml:space="preserve">
          <source>Perform buffered I/O.</source>
          <target state="translated">执行缓冲的I/O。</target>
        </trans-unit>
        <trans-unit id="3dce937804704adcedb8a3097f48c2d0bc2d294f" translate="yes" xml:space="preserve">
          <source>Perform semantic analysis and CTFE on expressions to produce a string.</source>
          <target state="translated">对表达式进行语义分析和CTFE,生成一个字符串。</target>
        </trans-unit>
        <trans-unit id="a3329e2a22d0cffbeb60b029314ab72b31e6cebc" translate="yes" xml:space="preserve">
          <source>Perform semantic analysis on InlineAsmStatement.</source>
          <target state="translated">对InlineAsmStatement进行语义分析。</target>
        </trans-unit>
        <trans-unit id="9770620faed7403bb8c0ecc06d0e36a7f5251164" translate="yes" xml:space="preserve">
          <source>Perform semantic analysis on a type.</source>
          <target state="translated">对一个类型进行语义分析。</target>
        </trans-unit>
        <trans-unit id="a7f660ada612d7566103025f0017720a6ab15950" translate="yes" xml:space="preserve">
          <source>Perform semantic analysis on init.</source>
          <target state="translated">对init.com进行语义分析。</target>
        </trans-unit>
        <trans-unit id="f3bec592477a6e10ca8657fca997d67349936f34" translate="yes" xml:space="preserve">
          <source>Perform semantic() on an array of Expressions.</source>
          <target state="translated">对Expressions数组执行semantic()。</target>
        </trans-unit>
        <trans-unit id="d80d3e557db27f6dafd2b8a5e1f5d0b5a1124a0a" translate="yes" xml:space="preserve">
          <source>Perform the &quot;inline copying&quot; of a default argument for a function parameter.</source>
          <target state="translated">对函数参数的默认参数进行 &quot;内联复制&quot;。</target>
        </trans-unit>
        <trans-unit id="69cc04c0fc19d1f6ca88e58a0f4c875dd2042d44" translate="yes" xml:space="preserve">
          <source>Perform the operation in infinite precision</source>
          <target state="translated">进行无限精度的操作</target>
        </trans-unit>
        <trans-unit id="dbb33629b27f400be6080e4a52ca1b7eeddba75f" translate="yes" xml:space="preserve">
          <source>Performance is optimized for numbers below ~1000 decimal digits. For X86 machines, highly optimised assembly routines are used.</source>
          <target state="translated">对于小于1000个十进制数的数字,性能得到了优化。对于X86机器,使用高度优化的汇编程序。</target>
        </trans-unit>
        <trans-unit id="0fcaad6a9538475080af9cc6d30bbac007d9ec46" translate="yes" xml:space="preserve">
          <source>Performing parallel reductions with an imperative, as opposed to functional, programming style. In this case, it's useful to treat &lt;code&gt;WorkerLocalStorageStorage&lt;/code&gt; as local to each thread for only the parallel portion of an algorithm.</source>
          <target state="translated">与命令式编程风格相反，使用命令式执行并行约简。在这种情况下，仅对于算法的并行部分，将 &lt;code&gt;WorkerLocalStorageStorage&lt;/code&gt; 视为每个线程的本地变量很有用。</target>
        </trans-unit>
        <trans-unit id="a79e877a4a8d751b334bc1205fab1f501d2da5e7" translate="yes" xml:space="preserve">
          <source>Performs &amp;Omicron;(&lt;code&gt;max(front.length, back.length)&lt;/code&gt;) evaluations of &lt;code&gt;swap&lt;/code&gt;.</source>
          <target state="translated">执行 &lt;code&gt;swap&lt;/code&gt; 的 &amp;Omicron;（ &lt;code&gt;max(front.length, back.length)&lt;/code&gt; ）个评估。</target>
        </trans-unit>
        <trans-unit id="27b39dff0e45fd8fe7d05db83b932261b700cb97" translate="yes" xml:space="preserve">
          <source>Performs &amp;Omicron;(&lt;code&gt;r.length&lt;/code&gt;) (if unstable or semistable) or &amp;Omicron;(&lt;code&gt;r.length * log(r.length)&lt;/code&gt;) (if stable) evaluations of &lt;code&gt;less&lt;/code&gt; and &lt;code&gt;swap&lt;/code&gt;. The unstable version computes the minimum possible evaluations of &lt;code&gt;swap&lt;/code&gt; (roughly half of those performed by the semistable version).</source>
          <target state="translated">执行 &lt;code&gt;less&lt;/code&gt; 和 &lt;code&gt;swap&lt;/code&gt; 的 &amp;Omicron;（ &lt;code&gt;r.length&lt;/code&gt; ）（如果不稳定或半稳定）或&amp;Omicron;（ &lt;code&gt;r.length * log(r.length)&lt;/code&gt; ）（如果稳定）评估。不稳定版本计算 &lt;code&gt;swap&lt;/code&gt; 的最小可能评估（大约是半稳定版本执行的一半）。</target>
        </trans-unit>
        <trans-unit id="7049fba4f4d6daf9ed4727bd1cf2d991410e1334" translate="yes" xml:space="preserve">
          <source>Performs a &lt;a href=&quot;https://en.wikipedia.org/wiki/Exponential_search&quot;&gt; galloping search algorithm&lt;/a&gt;, i.e. searches with a step that doubles every time, (1, 2, 4, 8, ...) leading to an exponential search schedule (indexes tried are 0, 1, 3, 7, 15, 31, 63,...) Once the search overshoots its target, the remaining interval is searched using binary search. A value is found in &amp;Omicron;(&lt;code&gt;log(n)&lt;/code&gt;) time.</source>
          <target state="translated">执行&lt;a href=&quot;https://en.wikipedia.org/wiki/Exponential_search&quot;&gt;疾驰的搜索算法&lt;/a&gt;，即每次以两倍的步长搜索（1、2、4、8，...），从而导致指数搜索计划（尝试的索引为0、1、3、7、15、31） ，63，...）一旦搜索超出其目标，就会使用二进制搜索来搜索剩余间隔。在&amp;Omicron;（ &lt;code&gt;log(n)&lt;/code&gt; ）时间中找到一个值。</target>
        </trans-unit>
        <trans-unit id="a4b95a2b7c7b269fa91631feadfef7e99a6021a5" translate="yes" xml:space="preserve">
          <source>Performs a lexicographical comparison on two &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input ranges&lt;/a&gt;. Iterating &lt;code&gt;r1&lt;/code&gt; and &lt;code&gt;r2&lt;/code&gt; in lockstep, &lt;code&gt;cmp&lt;/code&gt; compares each element &lt;code&gt;e1&lt;/code&gt; of &lt;code&gt;r1&lt;/code&gt; with the corresponding element &lt;code&gt;e2&lt;/code&gt; in &lt;code&gt;r2&lt;/code&gt;. If one of the ranges has been finished, &lt;code&gt;cmp&lt;/code&gt; returns a negative value if &lt;code&gt;r1&lt;/code&gt; has fewer elements than &lt;code&gt;r2&lt;/code&gt;, a positive value if &lt;code&gt;r1&lt;/code&gt; has more elements than &lt;code&gt;r2&lt;/code&gt;, and &lt;code&gt;0&lt;/code&gt; if the ranges have the same number of elements.</source>
          <target state="translated">在两个&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;上执行字典比较。迭代 &lt;code&gt;r1&lt;/code&gt; 和 &lt;code&gt;r2&lt;/code&gt; 步调一致， &lt;code&gt;cmp&lt;/code&gt; 每个元素进行比较 &lt;code&gt;e1&lt;/code&gt; 的 &lt;code&gt;r1&lt;/code&gt; 与对应的元件 &lt;code&gt;e2&lt;/code&gt; 中 &lt;code&gt;r2&lt;/code&gt; 。如果范围中的一个已经完成时， &lt;code&gt;cmp&lt;/code&gt; 返回一个负值，如果 &lt;code&gt;r1&lt;/code&gt; 比更少的元件 &lt;code&gt;r2&lt;/code&gt; ，如果正的值 &lt;code&gt;r1&lt;/code&gt; 具有比多个元件 &lt;code&gt;r2&lt;/code&gt; ，和 &lt;code&gt;0&lt;/code&gt; 如果所述范围有相同数目的元素。</target>
        </trans-unit>
        <trans-unit id="932aa4f60fe6023c69792e4a248e389ddc01276a" translate="yes" xml:space="preserve">
          <source>Performs either compare-and-set or compare-and-swap (or exchange).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125bedfc6490366279c7f8e529677bc639cfff43" translate="yes" xml:space="preserve">
          <source>Performs read-modify-write operation at specified index into the container.</source>
          <target state="translated">在容器的指定索引处执行读-改-写操作。</target>
        </trans-unit>
        <trans-unit id="a3373eec995027ee6a7bacd42ba54d403267caec" translate="yes" xml:space="preserve">
          <source>Performs semantic on TemplateParameter AST nodes.</source>
          <target state="translated">对TemplateParameter AST节点执行语义。</target>
        </trans-unit>
        <trans-unit id="2c7b10877a602224a5ce8fabad8229c99d42b2b7" translate="yes" xml:space="preserve">
          <source>Performs the binary operation 'op' on val using 'mod' as the modifier.</source>
          <target state="translated">使用'mod'作为修饰符,对val执行二进制操作'op'。</target>
        </trans-unit>
        <trans-unit id="8fb9c991fb0173deed6c7ec1a030027befb93171" translate="yes" xml:space="preserve">
          <source>Performs the ftp request as it has been configured.</source>
          <target state="translated">执行已配置的ftp请求。</target>
        </trans-unit>
        <trans-unit id="49a882c0eaebe773b4d43b5c1340a25d26b54f1a" translate="yes" xml:space="preserve">
          <source>Performs the lookup of set of &lt;a href=&quot;#Code%20point&quot;&gt;code points&lt;/a&gt; with compile-time correctness checking. This short-cut version combines 3 searches: across blocks, scripts, and common binary properties.</source>
          <target state="translated">使用编译时正确性检查执行&lt;a href=&quot;#Code%20point&quot;&gt;代码点&lt;/a&gt;集的查找。该快捷版本结合了3种搜索：跨块，脚本和通用二进制属性。</target>
        </trans-unit>
        <trans-unit id="adceff9860a6c21999e0bdf69ad270c04b8f427c" translate="yes" xml:space="preserve">
          <source>Performs the request as configured.</source>
          <target state="translated">按照配置执行请求。</target>
        </trans-unit>
        <trans-unit id="45a792110f052e24be5dc1e7a32ab8481f32dde5" translate="yes" xml:space="preserve">
          <source>Performs the same task as &lt;a href=&quot;#buildPath&quot;&gt;&lt;code&gt;buildPath&lt;/code&gt;&lt;/a&gt;, while at the same time resolving current/parent directory symbols (&lt;code&gt;&quot;.&quot;&lt;/code&gt; and &lt;code&gt;&quot;..&quot;&lt;/code&gt;) and removing superfluous directory separators. It will return &quot;.&quot; if the path leads to the starting directory. On Windows, slashes are replaced with backslashes.</source>
          <target state="translated">执行与&lt;a href=&quot;#buildPath&quot;&gt; &lt;code&gt;buildPath&lt;/code&gt; &lt;/a&gt;相同的任务，同时解析当前/父目录符号（ &lt;code&gt;&quot;.&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;..&quot;&lt;/code&gt; ）并删除多余的目录分隔符。它将返回&amp;ldquo;。&amp;rdquo; 如果路径指向起始目录。在Windows上，将斜杠替换为反斜杠。</target>
        </trans-unit>
        <trans-unit id="2d95c20aebc021d83537913ab5e8c2caaa3c4c7f" translate="yes" xml:space="preserve">
          <source>Performs tilde expansion in paths on POSIX systems. On Windows, this function does nothing.</source>
          <target state="translated">在POSIX系统上,在路径中执行tilde扩展。在Windows系统中,这个函数不做任何事情。</target>
        </trans-unit>
        <trans-unit id="1a08bc377528194036561375e26f9d9fa5984f3c" translate="yes" xml:space="preserve">
          <source>Period is &lt;code&gt;2 ^^ nbits - 1&lt;/code&gt; except for a legacy 192-bit uint version (see note below).</source>
          <target state="translated">周期为 &lt;code&gt;2 ^^ nbits - 1&lt;/code&gt; 除了旧版192位uint版本（请参阅下面的注释）。</target>
        </trans-unit>
        <trans-unit id="171c5560fc34e8a8a4af348c5e5f4ecdb2765fc4" translate="yes" xml:space="preserve">
          <source>Permission used when creating new files and directories on the remote server for protocols that support it, SFTP/SCP/FILE</source>
          <target state="translated">在远程服务器上为支持SFTP/SCP/FILE的协议创建新文件和目录时使用的权限。</target>
        </trans-unit>
        <trans-unit id="20240c4f510895ba885486432888b65c0241d82d" translate="yes" xml:space="preserve">
          <source>PermissiveVisitor overrides all the visit methods in the parent class that assert(0) in order to facilitate the traversal of subsets of the AST. It does not implement any visiting logic.</source>
          <target state="translated">PermissiveVisitor 覆盖了父类中所有 assert(0)的访问方法,以便于遍历 AST 的子集。它不实现任何访问逻辑。</target>
        </trans-unit>
        <trans-unit id="f4f192f4cb2e3ed05cc4e9839c0ce15a34e4dec6" translate="yes" xml:space="preserve">
          <source>Permutations!Range &lt;strong id=&quot;permutations&quot;&gt;permutations&lt;/strong&gt;(Range)(Range r)</source>
          <target state="translated">范围&lt;strong id=&quot;permutations&quot;&gt;排列&lt;/strong&gt;范围（Range）（Range r）</target>
        </trans-unit>
        <trans-unit id="9814ff21659d24b67c90ccf4b1670f3530e3e4ea" translate="yes" xml:space="preserve">
          <source>Permutes &lt;code&gt;range&lt;/code&gt; in-place to the next lexicographically greater</source>
          <target state="translated">排列 &lt;code&gt;range&lt;/code&gt; 就地到下一个大字典</target>
        </trans-unit>
        <trans-unit id="47d68c1d1d8f096dc79c29a375f3002be6a50e66" translate="yes" xml:space="preserve">
          <source>Permutes &lt;code&gt;range&lt;/code&gt; in-place to the next lexicographically greater permutation.</source>
          <target state="translated">的置换 &lt;code&gt;range&lt;/code&gt; 就地下一个更大的字典序排列。</target>
        </trans-unit>
        <trans-unit id="bc4059a2c730084630f46b548fe60ee6f2f7260d" translate="yes" xml:space="preserve">
          <source>Permutes &lt;code&gt;range&lt;/code&gt; into the &lt;code&gt;perm&lt;/code&gt; permutation. The algorithm has a constant runtime complexity with respect to the number of permutations created. Due to the number of unique values of &lt;code&gt;ulong&lt;/code&gt; only the first 21 elements of &lt;code&gt;range&lt;/code&gt; can be permuted. The rest of the range will therefore not be permuted. This algorithm uses the &lt;a href=&quot;http://en.wikipedia.org/wiki/Lehmer_code&quot;&gt;Lehmer Code&lt;/a&gt;.</source>
          <target state="translated">的置换 &lt;code&gt;range&lt;/code&gt; 到 &lt;code&gt;perm&lt;/code&gt; 排列。该算法相对于创建的排列数具有恒定的运行时复杂性。由于 &lt;code&gt;ulong&lt;/code&gt; 的唯一值的数量，只能对 &lt;code&gt;range&lt;/code&gt; 的前21个元素进行置换。因此，其余范围不会被置换。该算法使用&lt;a href=&quot;http://en.wikipedia.org/wiki/Lehmer_code&quot;&gt;Lehmer码&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="40d6660e437b349bdcacf2f3e77734577c86a86d" translate="yes" xml:space="preserve">
          <source>Pf</source>
          <target state="translated">Pf</target>
        </trans-unit>
        <trans-unit id="0b8800ca3abc78cb24f838a046a98f359b8f828e" translate="yes" xml:space="preserve">
          <source>Phags-pa</source>
          <target state="translated">Phags-pa</target>
        </trans-unit>
        <trans-unit id="a1fbe41a1fd16bc593d390402b8a1d609687aad4" translate="yes" xml:space="preserve">
          <source>Phags_Pa</source>
          <target state="translated">Phags_Pa</target>
        </trans-unit>
        <trans-unit id="690f59d7fc7811f820e457a94560e3193f08fc84" translate="yes" xml:space="preserve">
          <source>Phaistos Disc</source>
          <target state="translated">Phaistos光盘</target>
        </trans-unit>
        <trans-unit id="2f8d593b2f2f827f8bfaa4cd70608d331d03efeb" translate="yes" xml:space="preserve">
          <source>Phases of Compilation</source>
          <target state="translated">编制阶段</target>
        </trans-unit>
        <trans-unit id="2de5476a4ccc050377fe5448cfcedc724b906da9" translate="yes" xml:space="preserve">
          <source>Phases of Processing</source>
          <target state="translated">加工阶段</target>
        </trans-unit>
        <trans-unit id="75f01355c8572c29448739b8c1da01c02b9b2517" translate="yes" xml:space="preserve">
          <source>Phobos Runtime Library</source>
          <target state="translated">Phobos运行库</target>
        </trans-unit>
        <trans-unit id="4bf0ae86028cd4735fa6d30d00b782060cf1c131" translate="yes" xml:space="preserve">
          <source>Phobos is the standard runtime library that comes with the D language compiler.</source>
          <target state="translated">Phobos是D语言编译器自带的标准运行时库。</target>
        </trans-unit>
        <trans-unit id="2f182fe170adaf16b14bcef0b9bb20b231bf94f0" translate="yes" xml:space="preserve">
          <source>Phobos provides the following functionality for time:    This functionality is separated into the following modules</source>
          <target state="translated">Phobos 为时间提供以下功能。该功能分为以下模块</target>
        </trans-unit>
        <trans-unit id="6908ab9bda0e225ecfd064a3d987f42cfc69e74c" translate="yes" xml:space="preserve">
          <source>Phoenician</source>
          <target state="translated">Phoenician</target>
        </trans-unit>
        <trans-unit id="39ead51340b227e68cc17352e9842e3846b38635" translate="yes" xml:space="preserve">
          <source>Phonetic Extensions</source>
          <target state="translated">语音扩展</target>
        </trans-unit>
        <trans-unit id="652915d71b26e32e7a6a196e8ba77ddfdb77afcf" translate="yes" xml:space="preserve">
          <source>Phonetic Extensions Supplement</source>
          <target state="translated">语音扩展补编</target>
        </trans-unit>
        <trans-unit id="a13438854aceabf5a965c5bd61f9c40684610db5" translate="yes" xml:space="preserve">
          <source>Pi</source>
          <target state="translated">Pi</target>
        </trans-unit>
        <trans-unit id="f398c7e78f56808cbcbff7a50fe6e2ac8277c2b8" translate="yes" xml:space="preserve">
          <source>Pick off one of the storage classes from stc, and return a string representation of it. stc is reduced by the one picked.</source>
          <target state="translated">从stc中选取一个存储类,并返回它的字符串表示。stc被选取的那个类减少。</target>
        </trans-unit>
        <trans-unit id="8244da7920c1ba38d0c027418ea1aae6493f1225" translate="yes" xml:space="preserve">
          <source>Picking a good initial guess is an art, but you usually can pick a value covering 99% of the cases. For example, when gathering user input from the console - it's unlikely to be longer than 80.</source>
          <target state="translated">挑选一个好的初始猜测是一门艺术,但你通常可以挑选一个覆盖99%情况的值。例如,从控制台收集用户输入时--不太可能超过80。</target>
        </trans-unit>
        <trans-unit id="e53f69a39919b0a915ebc9873dad685de7a8a9ff" translate="yes" xml:space="preserve">
          <source>Picks one value in an unspecified position in the container, removes it from the container, and returns it. The stable version behaves the same, but guarantees that ranges iterating over the container are never invalidated.</source>
          <target state="translated">在容器中未指定的位置选取一个值,将其从容器中移除,然后返回。稳定版的行为是一样的,但保证在容器上迭代的范围永远不会无效。</target>
        </trans-unit>
        <trans-unit id="ff2655a1a6e1bb2c64ceacb981dca367486334be" translate="yes" xml:space="preserve">
          <source>Piotr Szturmaj, Kai Nacke, Johannes Pfau</source>
          <target state="translated">Piotr Szturmaj,Kai Nacke,Johannes Pfau.</target>
        </trans-unit>
        <trans-unit id="56cdfa6aa8a28243be7e1b4e2cea18c6dba33f79" translate="yes" xml:space="preserve">
          <source>Pipes can, for example, be used for interprocess communication by spawning a new process and passing one end of the pipe to the child, while the parent uses the other end. (See also &lt;a href=&quot;#pipeProcess&quot;&gt;&lt;code&gt;pipeProcess&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#pipeShell&quot;&gt;&lt;code&gt;pipeShell&lt;/code&gt;&lt;/a&gt; for an easier way of doing this.)</source>
          <target state="translated">例如，通过生成新进程并将管道的一端传递给子进程，而父进程使用另一端，则可以将管道用于进程间通信。（有关更简单的方法，请参见&lt;a href=&quot;#pipeProcess&quot;&gt; &lt;code&gt;pipeProcess&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#pipeShell&quot;&gt; &lt;code&gt;pipeShell&lt;/code&gt; &lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="f1162801a99a1678f4365b1437f7ee26e2b17365" translate="yes" xml:space="preserve">
          <source>Pipes functions in sequence. Offers the same functionality as &lt;code&gt; compose&lt;/code&gt;, but with functions specified in reverse order. This may lead to more readable code in some situation because the order of execution is the same as lexical order.</source>
          <target state="translated">管道按顺序运行。提供与 &lt;code&gt; compose&lt;/code&gt; 相同的功能，但功能相反。在某些情况下，这可能导致代码更具可读性，因为执行顺序与词汇顺序相同。</target>
        </trans-unit>
        <trans-unit id="dc1a73c3606a15a51213cdf1942786e4857d3599" translate="yes" xml:space="preserve">
          <source>Place a member (mem) into an aggregate (agg), which can be a struct, union or class</source>
          <target state="translated">将一个成员(mem)放入一个集合(aggreg)中,这个集合可以是一个结构、联盟或类。</target>
        </trans-unit>
        <trans-unit id="695bd0b5f8fdfe3e3a5361a7c79d6090a91b51df" translate="yes" xml:space="preserve">
          <source>Places &lt;code&gt;b&lt;/code&gt; into the free tree.</source>
          <target state="translated">将 &lt;code&gt;b&lt;/code&gt; 放入自由树。</target>
        </trans-unit>
        <trans-unit id="e0d23f9eee6541877d2307c6f58578451428b4f6" translate="yes" xml:space="preserve">
          <source>Places the values as a message at the back of tid's message queue.</source>
          <target state="translated">将数值作为消息放在tid的消息队列的后面。</target>
        </trans-unit>
        <trans-unit id="a5b257314e0f4709f60ae804ac7e7f2b742ae21e" translate="yes" xml:space="preserve">
          <source>Places the values as a message on the front of tid's message queue.</source>
          <target state="translated">将值作为消息放在tid的消息队列的前面。</target>
        </trans-unit>
        <trans-unit id="94226d2878e7c617f3b3f1f3719eb4bde4fad02b" translate="yes" xml:space="preserve">
          <source>Plain Old Data</source>
          <target state="translated">普通旧数据</target>
        </trans-unit>
        <trans-unit id="a1493d685490e2464f09fa1850399f813e512165" translate="yes" xml:space="preserve">
          <source>Plain string(s), in which case it's compiled to bytecode before matching.</source>
          <target state="translated">纯字符串,在这种情况下,它在匹配前被编译成字节码。</target>
        </trans-unit>
        <trans-unit id="cb23ee720e4a8686c2c10bf8539ba0643cdd0071" translate="yes" xml:space="preserve">
          <source>Platform-specific error code.</source>
          <target state="translated">平台特有的错误代码。</target>
        </trans-unit>
        <trans-unit id="027a81920a729c2258e1d82d39649acdc7dffe11" translate="yes" xml:space="preserve">
          <source>Playing Cards</source>
          <target state="translated">扑克牌</target>
        </trans-unit>
        <trans-unit id="03706f3dc028771782bc46899efa2883e38b6817" translate="yes" xml:space="preserve">
          <source>Please note that this mutex is not recursive and is intended to guard access to data only. Also, no deadlock checking is in place because doing so would require dynamic memory allocation, which would reduce performance by an unacceptable amount. As a result, any attempt to recursively acquire this mutex may well deadlock the caller, particularly if a write lock is acquired while holding a read lock, or vice-versa. In practice, this should not be an issue however, because it is uncommon to call deeply into unknown code while holding a lock that simply protects data.</source>
          <target state="translated">请注意,这个mutex不是递归的,只是为了保护对数据的访问。此外,没有死锁检查,因为这样做需要动态内存分配,这将降低性能,令人无法接受。因此,任何递归获取这个mutex的尝试都可能会使调用者陷入死锁,尤其是在持有读锁时获取写锁,或者反之。然而在实践中,这不应该是一个问题,因为在持有一个仅仅保护数据的锁时,很少会深入调用未知代码。</target>
        </trans-unit>
        <trans-unit id="5d56891bc4466df536e092c37941f4065e37d9b8" translate="yes" xml:space="preserve">
          <source>Please see the documentation of function &lt;a href=&quot;#formattedWrite&quot;&gt;&lt;code&gt;formattedWrite&lt;/code&gt;&lt;/a&gt; for a description of the format string.</source>
          <target state="translated">请参阅&lt;a href=&quot;#formattedWrite&quot;&gt; &lt;code&gt;formattedWrite&lt;/code&gt; &lt;/a&gt;函数的文档以获取格式字符串的说明。</target>
        </trans-unit>
        <trans-unit id="1cddd8e6f160f9c012ad14047eb479084fe64ddb" translate="yes" xml:space="preserve">
          <source>Po</source>
          <target state="translated">Po</target>
        </trans-unit>
        <trans-unit id="98c8146cc9957cbbd6191153319b7d3f7d45b96d" translate="yes" xml:space="preserve">
          <source>Pointer Arithmetic</source>
          <target state="translated">指针算术</target>
        </trans-unit>
        <trans-unit id="e6a2fdb11c42c1ae52e79abd0552ecd4e047a046" translate="yes" xml:space="preserve">
          <source>Pointer Conversions</source>
          <target state="translated">指针转换</target>
        </trans-unit>
        <trans-unit id="856c91ff14adec92ce2bc660c71d5eac79f08ca9" translate="yes" xml:space="preserve">
          <source>Pointer State Transitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149c3d09326d64bbad62958afe8efc64374edd93" translate="yes" xml:space="preserve">
          <source>Pointer States</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969e7d33b963ce1f275892b62721d3ce0b9f1543" translate="yes" xml:space="preserve">
          <source>Pointer comparisons between independent memory blocks will generate a compile-time error, unless two such comparisons are combined using &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; or &lt;code&gt;|&lt;/code&gt;&lt;code&gt;|&lt;/code&gt; to yield a result which is independent of the ordering of memory blocks. Each comparison must consist of two pointer expressions compared with &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, or &lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;=&lt;/code&gt;, and may optionally be negated with &lt;code&gt;!&lt;/code&gt;.</source>
          <target state="translated">除非使用 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 或 &lt;code&gt;|&lt;/code&gt; 将两个这样的比较组合在一起，否则独立存储块之间的指针比较将产生编译时错误。 &lt;code&gt;|&lt;/code&gt; 产生的结果与存储块的顺序无关。每个比较必须包含两个与 &lt;code&gt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;code&gt;=&lt;/code&gt; ， &lt;code&gt;&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;=&lt;/code&gt; 进行比较的指针表达式，并且可以选择用 &lt;code&gt;!&lt;/code&gt; 取反！。</target>
        </trans-unit>
        <trans-unit id="8d8ba274f62726cd16cfdb74920784e055bc3fed" translate="yes" xml:space="preserve">
          <source>Pointer operations</source>
          <target state="translated">指针操作</target>
        </trans-unit>
        <trans-unit id="f73f4002533a013222fe5260f3358d17ac5e821c" translate="yes" xml:space="preserve">
          <source>Pointer to an array. Must not be null.</source>
          <target state="translated">指向数组的指针。不得为空。</target>
        </trans-unit>
        <trans-unit id="5076bca24670e24c6621a2cb89582af335d5f43f" translate="yes" xml:space="preserve">
          <source>Pointer to command string to send if USER/PASS fails.</source>
          <target state="translated">指向USER/PASS失败时要发送的命令字符串的指针。</target>
        </trans-unit>
        <trans-unit id="06f9d51c1c7abebe17ab3977ba3899554ca3ab4c" translate="yes" xml:space="preserve">
          <source>Pointer to freeing function for the data pointer (use FPNULL if none)</source>
          <target state="translated">数据指针的释放函数指针(如果没有,请使用FPNULL)。</target>
        </trans-unit>
        <trans-unit id="dc0cefd5a5a7541421f720b0bffc14b9f52d1fb1" translate="yes" xml:space="preserve">
          <source>Pointer to list to free</source>
          <target state="translated">指向免费清单的指针</target>
        </trans-unit>
        <trans-unit id="9190dc9c093562a49c468d28217d7e00753efdb2" translate="yes" xml:space="preserve">
          <source>Pointer to string conversions convert the pointer to a &lt;code&gt;size_t&lt;/code&gt; value. If pointer is &lt;code&gt;char*&lt;/code&gt;, treat it as C-style strings. In that case, this function is &lt;code&gt;@system&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f4cf9a19016a952bc2822c32f67d451b70e07f" translate="yes" xml:space="preserve">
          <source>Pointer to string conversions prints the pointer as a &lt;code&gt;size_t&lt;/code&gt; value. If pointer is &lt;code&gt;char*&lt;/code&gt;, treat it as C-style strings. In that case, this function is &lt;code&gt;@system&lt;/code&gt;.</source>
          <target state="translated">指向字符串转换的指针将指针打印为 &lt;code&gt;size_t&lt;/code&gt; 值。如果指针是 &lt;code&gt;char*&lt;/code&gt; ，则将其视为C样式的字符串。在这种情况下，此函数为 &lt;code&gt;@system&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c5b722fc5ad9faac57dfe90f51b7e6e51ad5a968" translate="yes" xml:space="preserve">
          <source>Pointers</source>
          <target state="translated">Pointers</target>
        </trans-unit>
        <trans-unit id="ff4be6e4f9b5590ddf9dfe02916964c4f8ab7d67" translate="yes" xml:space="preserve">
          <source>Pointers and object references will increase in size from 4 bytes to 8 bytes going from 32 to 64 bit code.</source>
          <target state="translated">指针和对象引用的大小将从4字节增加到8字节,从32位到64位的代码。</target>
        </trans-unit>
        <trans-unit id="7f833d9959f6dc21eb0139b1e1d09ff93afcd672" translate="yes" xml:space="preserve">
          <source>Pointers and the Garbage Collector</source>
          <target state="translated">指针和垃圾收集器</target>
        </trans-unit>
        <trans-unit id="b62503261da1d0e85d8812c54a796b3826868e30" translate="yes" xml:space="preserve">
          <source>Pointers are 32 bits, but words are still 64 bits (x32 ABI) (This can be defined in parallel to &lt;code&gt;X86_64&lt;/code&gt;)</source>
          <target state="translated">指针是32位，但是字仍然是64位（x32 ABI）（可以与 &lt;code&gt;X86_64&lt;/code&gt; 并行定义）</target>
        </trans-unit>
        <trans-unit id="ee00272ddc3bae06ffd868c358f7dc324ab87c5e" translate="yes" xml:space="preserve">
          <source>Pointers are 64 bits (command line switch &lt;a href=&quot;https://dlang.org/dmd.html#switch-m64&quot;&gt;&lt;em&gt;-m64&lt;/em&gt;&lt;/a&gt;). (Do not confuse this with C's LP64 model)</source>
          <target state="translated">指针是64位（命令行开关&lt;a href=&quot;https://dlang.org/dmd.html#switch-m64&quot;&gt;&lt;em&gt;-m64&lt;/em&gt;&lt;/a&gt;）。（请勿将其与C的LP64模型混淆）</target>
        </trans-unit>
        <trans-unit id="8299cb78e9d5361ffb94a50c6be3064ecd777f86" translate="yes" xml:space="preserve">
          <source>Pointers are formatted as hex integers.</source>
          <target state="translated">指针的格式为十六进制整数。</target>
        </trans-unit>
        <trans-unit id="81beea5be49de828523c7b83cb83e263a8c723ad" translate="yes" xml:space="preserve">
          <source>Pointers are initialized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">指针被初始化为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b564720393e1a126ee7c19e9b2ab29ecee13c4aa" translate="yes" xml:space="preserve">
          <source>Pointers are permitted in CTFE, provided they are used safely:</source>
          <target state="translated">指针在CTFE中是允许的,但前提是要安全使用。</target>
        </trans-unit>
        <trans-unit id="33b50f6cb0549c10f645097a33ea92d4e40b3b8e" translate="yes" xml:space="preserve">
          <source>Pointers in D can be broadly divided into two categories: Those that point to garbage collected memory, and those that do not. Examples of the latter are pointers created by calls to C's malloc(), pointers received from C library routines, pointers to static data, pointers to objects on the stack, etc. For those pointers, anything that is legal in C can be done with them.</source>
          <target state="translated">D中的指针大致可以分为两类。指向垃圾回收内存的指针和不指向垃圾回收内存的指针。后者的例子有调用C的malloc()创建的指针、从C库例程中接收的指针、指向静态数据的指针、指向堆栈上的对象的指针等。对于这些指针,在C语言中任何合法的事情都可以用它们来做。</target>
        </trans-unit>
        <trans-unit id="07f1578da80dda793e1b2a12af8d61bddaecaaca" translate="yes" xml:space="preserve">
          <source>Pointers to data</source>
          <target state="translated">数据指针</target>
        </trans-unit>
        <trans-unit id="3e95a08c7f10554dbb4f1d987f31459800a05579" translate="yes" xml:space="preserve">
          <source>Pointers to functions are declared using the &lt;code&gt;function&lt;/code&gt; keyword:</source>
          <target state="translated">使用 &lt;code&gt;function&lt;/code&gt; 关键字声明函数的指针：</target>
        </trans-unit>
        <trans-unit id="ba2ae989bf15107b84383ac16b45e244a6749266" translate="yes" xml:space="preserve">
          <source>Points in Time</source>
          <target state="translated">时间点</target>
        </trans-unit>
        <trans-unit id="8d61184962dda249c7c096096c40ff46b825f4a7" translate="yes" xml:space="preserve">
          <source>Policies</source>
          <target state="translated">Policies</target>
        </trans-unit>
        <trans-unit id="af58401ee9469729541dac0b751cce965eea718d" translate="yes" xml:space="preserve">
          <source>Policy &lt;code&gt;policy&lt;/code&gt;</source>
          <target state="translated">政策 &lt;code&gt;policy&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc91f995ebb93a2f7e56c21f73e82fc61f5b2a4c" translate="yes" xml:space="preserve">
          <source>Policy used with the searching primitives &lt;code&gt;lowerBound&lt;/code&gt;, &lt;code&gt; upperBound&lt;/code&gt;, and &lt;code&gt;equalRange&lt;/code&gt; of &lt;a href=&quot;#SortedRange&quot;&gt;&lt;code&gt;SortedRange&lt;/code&gt;&lt;/a&gt; below.</source>
          <target state="translated">与下面的&lt;a href=&quot;#SortedRange&quot;&gt; &lt;code&gt;SortedRange&lt;/code&gt; &lt;/a&gt;的搜索图元 &lt;code&gt;lowerBound&lt;/code&gt; ， &lt;code&gt; upperBound&lt;/code&gt; 和 &lt;code&gt;equalRange&lt;/code&gt; 一起使用的策略。</target>
        </trans-unit>
        <trans-unit id="3a08168a4a6e709754913e5ffddfbc3155fa15c7" translate="yes" xml:space="preserve">
          <source>Pop and return top of chained exception stack.</source>
          <target state="translated">弹出并返回链式异常堆栈的顶部。</target>
        </trans-unit>
        <trans-unit id="e3b2083d9073caa149a44c741a28f14a49836e82" translate="yes" xml:space="preserve">
          <source>PopFirst &lt;code&gt;popFirst&lt;/code&gt;</source>
          <target state="translated">PopFirst &lt;code&gt;popFirst&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="39b1331a2764ebac317450573122cb14748e0954" translate="yes" xml:space="preserve">
          <source>Pops &lt;code&gt;front&lt;/code&gt; from the range, using &lt;code&gt;func&lt;/code&gt; to generate the next time point in the range.</source>
          <target state="translated">入时 &lt;code&gt;front&lt;/code&gt; 从范围内，使用 &lt;code&gt;func&lt;/code&gt; 以产生该范围内的下一个时间点。</target>
        </trans-unit>
        <trans-unit id="dcdc71ebe929973a390e8aff45bb2f4747f7dcd1" translate="yes" xml:space="preserve">
          <source>Pops &lt;code&gt;front&lt;/code&gt; from the range, using &lt;code&gt;func&lt;/code&gt; to generate the next time point in the range. If the generated time point is beyond the edge of the range, then &lt;code&gt;front&lt;/code&gt; is set to that edge, and the range is then empty. So, if iterating forwards, and the generated time point is greater than the interval's &lt;code&gt;end&lt;/code&gt;, then &lt;code&gt;front&lt;/code&gt; is set to &lt;code&gt;end&lt;/code&gt;. If iterating backwards, and the generated time point is less than the interval's &lt;code&gt;begin&lt;/code&gt;, then &lt;code&gt;front&lt;/code&gt; is set to &lt;code&gt;begin&lt;/code&gt;.</source>
          <target state="translated">入时 &lt;code&gt;front&lt;/code&gt; 从范围内，使用 &lt;code&gt;func&lt;/code&gt; 以产生该范围内的下一个时间点。如果生成的时间点超出范围的边缘，则将 &lt;code&gt;front&lt;/code&gt; 设置为该边缘，然后范围为空。因此，如果向前迭代，并且生成的时间点大于间隔的 &lt;code&gt;end&lt;/code&gt; ，则将 &lt;code&gt;front&lt;/code&gt; 设置为 &lt;code&gt;end&lt;/code&gt; 。如果向后迭代，并且生成的时间点小于时间间隔的 &lt;code&gt;begin&lt;/code&gt; ，则将 &lt;code&gt;front&lt;/code&gt; 设置为 &lt;code&gt;begin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9bd2debd0b1b27ed7de52611ae792c23ffd10295" translate="yes" xml:space="preserve">
          <source>Populates the identifier pool with all predefined symbols.</source>
          <target state="translated">用所有预定义的符号填充标识符池。</target>
        </trans-unit>
        <trans-unit id="f5507f8b7f675f44d3633ef363280afbef63c166" translate="yes" xml:space="preserve">
          <source>Port number to connect to, if other than default.</source>
          <target state="translated">如果不是默认值,则连接的端口号。</target>
        </trans-unit>
        <trans-unit id="5c5ce787a818b8d8650eac948c2f4482fe2163c4" translate="yes" xml:space="preserve">
          <source>Port of the proxy, can be set in the proxy string as well with: &lt;code&gt;[host]:[port]&lt;/code&gt;</source>
          <target state="translated">代理的端口，也可以在代理字符串中设置： &lt;code&gt;[host]:[port]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b307b88c84327b1804aee227595be53342245965" translate="yes" xml:space="preserve">
          <source>Portability</source>
          <target state="translated">Portability</target>
        </trans-unit>
        <trans-unit id="5fc28461e5419ac5858beeeb37e698425c2fea75" translate="yes" xml:space="preserve">
          <source>PosInfInterval &lt;code&gt;interval&lt;/code&gt;</source>
          <target state="translated">PosInfInterval &lt;code&gt;interval&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d5085fcde3a9c261b3b04bd4f501bcfa1288c06" translate="yes" xml:space="preserve">
          <source>PosInfInterval &lt;code&gt;rhs&lt;/code&gt;</source>
          <target state="translated">PosInfInterval &lt;code&gt;rhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="129a356d8768561b072b73ccccbf992888bea8b7" translate="yes" xml:space="preserve">
          <source>PosInfInterval!TP &lt;code&gt;interval&lt;/code&gt;</source>
          <target state="translated">PosInfInterval！TP &lt;code&gt;interval&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd0df76a280f9a11a50dd203f053db771fafee40" translate="yes" xml:space="preserve">
          <source>PosInfIntervalRange &lt;code&gt;rhs&lt;/code&gt;</source>
          <target state="translated">PosInfIntervalRange &lt;code&gt;rhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f9877fc3f2623b3f50c8f3184bd7c3fe011d61d3" translate="yes" xml:space="preserve">
          <source>Position Independent Code (command line switch &lt;a href=&quot;https://dlang.org/dmd-linux.html#switch-fPIC&quot;&gt;&lt;em&gt;-fPIC&lt;/em&gt;&lt;/a&gt;) is being generated</source>
          <target state="translated">正在生成位置无关代码（命令行开关&lt;a href=&quot;https://dlang.org/dmd-linux.html#switch-fPIC&quot;&gt;&lt;em&gt;-fPIC&lt;/em&gt;&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="94ff21187708025ec06734808a8ffcba3f1255a0" translate="yes" xml:space="preserve">
          <source>Position in source file</source>
          <target state="translated">在源文件中的位置</target>
        </trans-unit>
        <trans-unit id="1c7d2a41182aaf6cac883c7a26f3e0458f6613a7" translate="yes" xml:space="preserve">
          <source>Positive and negative zeroes are distinct.</source>
          <target state="translated">正零和负零是不同的。</target>
        </trans-unit>
        <trans-unit id="0d9f8a6fbaa2f747fe41cdbb5779f42c76054a43" translate="yes" xml:space="preserve">
          <source>Possible to cast to one type while painting to another type</source>
          <target state="translated">可以在涂刷到另一种类型的同时,投射到一种类型。</target>
        </trans-unit>
        <trans-unit id="a595496b70e4ac0dcaad132b95d982296d4ece9c" translate="yes" xml:space="preserve">
          <source>Postblits</source>
          <target state="translated">Postblits</target>
        </trans-unit>
        <trans-unit id="b67cda929c621b7238e8e7b18624e89e3d600ab4" translate="yes" xml:space="preserve">
          <source>Postblits cannot be overloaded. If two or more postblits are defined, even if the signatures differ, the compiler assigns the &lt;code&gt;__postblit&lt;/code&gt; name to both and later issues a conflicting function name error:</source>
          <target state="translated">Postblits不能超载。如果定义了两个或多个postblit，即使签名不同，编译器 &lt;code&gt;__postblit&lt;/code&gt; 将__postblit名称分配给这两个名称，随后会出现冲突的函数名称错误：</target>
        </trans-unit>
        <trans-unit id="03b0a5668a78a6c73799b480ad3c40d5053795e5" translate="yes" xml:space="preserve">
          <source>Postcondition</source>
          <target state="translated">Postcondition</target>
        </trans-unit>
        <trans-unit id="fd99975cb3b791e05b83de3f8d3df7dec73b171c" translate="yes" xml:space="preserve">
          <source>Postcondition checks (out contract).</source>
          <target state="translated">后期检查(出合同)。</target>
        </trans-unit>
        <trans-unit id="82ecf35c1a8706936b0e8617bb976a01dca6b88c" translate="yes" xml:space="preserve">
          <source>Postconditions</source>
          <target state="translated">Postconditions</target>
        </trans-unit>
        <trans-unit id="040b4a736abe1da53bd8406f166c0e2e85d95807" translate="yes" xml:space="preserve">
          <source>Postfix Expressions</source>
          <target state="translated">Postfix表达式</target>
        </trans-unit>
        <trans-unit id="da4d207f33d1c8c4edafd10628aaf54446134448" translate="yes" xml:space="preserve">
          <source>Postfix Operator Rewrites</source>
          <target state="translated">Postfix操作员重写</target>
        </trans-unit>
        <trans-unit id="b4dbcceb0733332ed7b3413421a4224fc70b00ed" translate="yes" xml:space="preserve">
          <source>PostfixExpression</source>
          <target state="translated">PostfixExpression</target>
        </trans-unit>
        <trans-unit id="18a58057ccb77e5dd8b91625ed5dc6fc94061fa7" translate="yes" xml:space="preserve">
          <source>Postincrement</source>
          <target state="translated">Postincrement</target>
        </trans-unit>
        <trans-unit id="bf82bfcd8a75fe25a9a0c5cbb6104e08332d21e4" translate="yes" xml:space="preserve">
          <source>Postincrement &lt;i&gt;e&lt;/i&gt;&lt;code&gt;++&lt;/code&gt; and Postdecrement &lt;i&gt;e&lt;/i&gt;&lt;code&gt;--&lt;/code&gt; Operators</source>
          <target state="translated">后置&lt;i&gt;&amp;Euml; &lt;/i&gt; &lt;code&gt;++&lt;/code&gt; 增和后减&lt;i&gt;&amp;euml; &lt;/i&gt; &lt;code&gt;--&lt;/code&gt; 运营商</target>
        </trans-unit>
        <trans-unit id="0df8c37cc9a164b7729795ce2b2b74064c3959ba" translate="yes" xml:space="preserve">
          <source>Pow Expressions</source>
          <target state="translated">Pow表达式</target>
        </trans-unit>
        <trans-unit id="b53ac0458a706a39c9484ec5fec9c84db97eddcc" translate="yes" xml:space="preserve">
          <source>PowExpression</source>
          <target state="translated">PowExpression</target>
        </trans-unit>
        <trans-unit id="aa445acda25547a9330f5709468bd87dd13af4d6" translate="yes" xml:space="preserve">
          <source>Practical Example</source>
          <target state="translated">实例</target>
        </trans-unit>
        <trans-unit id="3e092163716f376bb86566aa4ec6fc840c95baff" translate="yes" xml:space="preserve">
          <source>Practically &lt;code&gt;Nullable!T&lt;/code&gt; stores a &lt;code&gt;T&lt;/code&gt; and a &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">实际上， &lt;code&gt;Nullable!T&lt;/code&gt; 存储一个 &lt;code&gt;T&lt;/code&gt; 和一个 &lt;code&gt;bool&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="38f93d32853eca4603a582eb7a404079e10b855d" translate="yes" xml:space="preserve">
          <source>Pragma</source>
          <target state="translated">Pragma</target>
        </trans-unit>
        <trans-unit id="4228470908b356987cf1925969b1a8dc591738f4" translate="yes" xml:space="preserve">
          <source>Pragma Name 1st arg or NULL</source>
          <target state="translated">Pragma 名称 第1个参数或NULL</target>
        </trans-unit>
        <trans-unit id="fa87f38bf7181908ef6bd8c17c24a2033e6d6d85" translate="yes" xml:space="preserve">
          <source>Pragma Statement</source>
          <target state="translated">Pragma声明</target>
        </trans-unit>
        <trans-unit id="d857c4a3cba6bb11f909b140e46311890f7f21c4" translate="yes" xml:space="preserve">
          <source>Pragmas</source>
          <target state="translated">Pragmas</target>
        </trans-unit>
        <trans-unit id="6100c56545314ca2ea6d26d66d469384e927114e" translate="yes" xml:space="preserve">
          <source>Pragmas are a way to pass special information to the compiler and to add vendor specific extensions to D. Pragmas can be used by themselves terminated with a &amp;lsquo;;&amp;rsquo;, they can influence a statement, a block of statements, a declaration, or a block of declarations.</source>
          <target state="translated">编译指示是一种将特殊信息传递给编译器并向D添加供应商特定扩展的方法。编译指示自身可以以';'结尾，它们可以影响语句，语句块，声明或块声明。</target>
        </trans-unit>
        <trans-unit id="f20744406e393916e9a8767156242954d148dbd7" translate="yes" xml:space="preserve">
          <source>Pragmas can appear as either declarations,</source>
          <target state="translated">实例可以作为任一声明出现。</target>
        </trans-unit>
        <trans-unit id="8561ddc56be7aa47f035e75aa500fe4607b514ed" translate="yes" xml:space="preserve">
          <source>Pre and Post Contracts</source>
          <target state="translated">合同前和合同后</target>
        </trans-unit>
        <trans-unit id="2e4d2b399ceb179d2394b94e69e13a5a0cfc7116" translate="yes" xml:space="preserve">
          <source>Pre and post contracts can be written either in expression form (feature introduced in DMD 2.081.0), with a syntax similar to &lt;b&gt;assert&lt;/b&gt;, or as block statements containing arbitrary code.</source>
          <target state="translated">可以使用具有类似于&lt;b&gt;assert&lt;/b&gt;的语法的表达式形式（DMD 2.081.0中引入的功能）来编写前和后合同，也可以将其写成包含任意代码的语句。</target>
        </trans-unit>
        <trans-unit id="baaef1b79330fb3733e1029bb05c865b513dfa63" translate="yes" xml:space="preserve">
          <source>Preallocate more memory than requested such that later on, when reallocation is needed (e.g. to grow an array), expansion can be done quickly in place. Reallocation to smaller sizes is also fast (in-place) when the new size requested is within the same quantum as the existing size. Code that's reallocation-heavy can therefore benefit from fronting a generic allocator with a &lt;code&gt;Quantizer&lt;/code&gt;. These advantages are present even if &lt;code&gt;ParentAllocator&lt;/code&gt; does not support reallocation at all.</source>
          <target state="translated">预分配比请求更多的内存，以便以后需要重新分配（例如，增加数组）时，可以快速完成扩展。当请求的新大小与现有大小在同一范围内时，重新分配为较小的大小也很快（就地）。因此，大量分配的代码可以受益于在通用分配器前面加上 &lt;code&gt;Quantizer&lt;/code&gt; 。即使 &lt;code&gt;ParentAllocator&lt;/code&gt; 根本不支持重新分配，这些优点仍然存在。</target>
        </trans-unit>
        <trans-unit id="5b802de09c547c0729edb51e5e2e3cebfb6707e5" translate="yes" xml:space="preserve">
          <source>Preallocate nbytes more to the size of the internal buffer.</source>
          <target state="translated">预分配nbytes以上的内部缓冲区大小。</target>
        </trans-unit>
        <trans-unit id="67791177460b7a42d60af39e539c1ca510749619" translate="yes" xml:space="preserve">
          <source>Precise Heap Scanning</source>
          <target state="translated">精确的堆扫描</target>
        </trans-unit>
        <trans-unit id="1ddcbf2bc07417bcf100ff586767615466b08676" translate="yes" xml:space="preserve">
          <source>Precise Scanning of the DATA and TLS segment</source>
          <target state="translated">精确扫描数据和TLS段</target>
        </trans-unit>
        <trans-unit id="825cff2fca8c64366258f1a1ce51f8e555e73a45" translate="yes" xml:space="preserve">
          <source>Precise scanning can be enabled with the D runtime option &quot;scanDataSeg&quot;. Possible option values are &quot;conservative&quot; (default) and &quot;precise&quot;. As with the GC options, it can be specified on the command line, in the environment or embedded into the executable, e.g.</source>
          <target state="translated">精确扫描可以通过D运行时选项 &quot;scanDataSeg &quot;启用。可能的选项值是 &quot;保守&quot;(默认)和 &quot;精确&quot;。与GC选项一样,它可以在命令行、环境中或嵌入可执行文件中指定,如</target>
        </trans-unit>
        <trans-unit id="3dd4db5ce7ea626f59e720f0c27096a22aa1ecd0" translate="yes" xml:space="preserve">
          <source>Precision</source>
          <target state="translated">Precision</target>
        </trans-unit>
        <trans-unit id="ddb5cb78dc037fe6c2aeded0e6b974e03a4651fe" translate="yes" xml:space="preserve">
          <source>Precision. Its semantics depends on the argument type. For floating point numbers, precision dictates the number of decimals printed.</source>
          <target state="translated">精度。其语义取决于参数类型。对于浮点数,精度决定了打印的小数。</target>
        </trans-unit>
        <trans-unit id="646ad9740d80073615a87f1e15d4c39112839036" translate="yes" xml:space="preserve">
          <source>Precondition</source>
          <target state="translated">Precondition</target>
        </trans-unit>
        <trans-unit id="030e7d448ce8d11254c73a2fd0da828600bdd8f4" translate="yes" xml:space="preserve">
          <source>Precondition checks (in contract).</source>
          <target state="translated">条件检查(在合同中);</target>
        </trans-unit>
        <trans-unit id="eec67145e07c78272a2a8e16aa54643dd652ed96" translate="yes" xml:space="preserve">
          <source>Preconditions</source>
          <target state="translated">Preconditions</target>
        </trans-unit>
        <trans-unit id="69c23fde13319243d13a72e36ae957a78f698a9e" translate="yes" xml:space="preserve">
          <source>Predefined Formatting Macros</source>
          <target state="translated">预定义的格式化宏</target>
        </trans-unit>
        <trans-unit id="f574f2822e5c3af2cfb42d326ba7b141732bc4e6" translate="yes" xml:space="preserve">
          <source>Predefined Macros</source>
          <target state="translated">预定义宏</target>
        </trans-unit>
        <trans-unit id="ba0569b596744d1ce75b051b455ee817f31fc211" translate="yes" xml:space="preserve">
          <source>Predefined Pragmas</source>
          <target state="translated">预定义的实用名词</target>
        </trans-unit>
        <trans-unit id="f694c553eb504db7a181a57928a8f49aff6fc3c5" translate="yes" xml:space="preserve">
          <source>Predefined Version Identifiers</source>
          <target state="translated">预定义版本标识符</target>
        </trans-unit>
        <trans-unit id="650eab2526d17b9e8d42a3dbc822ea4d5cc1cab0" translate="yes" xml:space="preserve">
          <source>Predefined Version Identifiers (deprecated)</source>
          <target state="translated">预定义的版本标识符(已废弃)</target>
        </trans-unit>
        <trans-unit id="db1fc02b034fcc8cf516995fb58bfacb21d666ee" translate="yes" xml:space="preserve">
          <source>Predefined Versions</source>
          <target state="translated">预定义版本</target>
        </trans-unit>
        <trans-unit id="6d6fa6ffb57b4fc430272a48656dc44e4d33384e" translate="yes" xml:space="preserve">
          <source>Predefined how-policies for &lt;code&gt;AutoImplement&lt;/code&gt;. These templates are also used by &lt;code&gt;BlackHole&lt;/code&gt; and &lt;code&gt;WhiteHole&lt;/code&gt;, respectively.</source>
          <target state="translated">预定义了 &lt;code&gt;AutoImplement&lt;/code&gt; 的 how-policies 。这些模板也被 &lt;code&gt;BlackHole&lt;/code&gt; 和 &lt;code&gt;WhiteHole&lt;/code&gt; ，分别。</target>
        </trans-unit>
        <trans-unit id="18360332b07be143cc4f1da02b06ba76ff2987a0" translate="yes" xml:space="preserve">
          <source>Predefined macros.</source>
          <target state="translated">预定义的宏。</target>
        </trans-unit>
        <trans-unit id="d210d4faef2ed863019beead1daefcae8123fa30" translate="yes" xml:space="preserve">
          <source>Predicate for determining equivalence between range elements.</source>
          <target state="translated">用于确定范围元素之间的等价关系的前提条件。</target>
        </trans-unit>
        <trans-unit id="f19fd9d32d5055cf82846584da77887fff117d42" translate="yes" xml:space="preserve">
          <source>Predicate for determining equivalence.</source>
          <target state="translated">确定等价物的前提条件。</target>
        </trans-unit>
        <trans-unit id="a93b98110ad3e2b516ed91d743153796a0e28ab9" translate="yes" xml:space="preserve">
          <source>Predicate that returns a &amp;gt; b. Correctly compares signed and unsigned integers, ie. 2U &amp;gt; -1.</source>
          <target state="translated">谓词返回a&amp;gt; b。正确比较有符号和无符号整数，即。2U&amp;gt; -1。</target>
        </trans-unit>
        <trans-unit id="2247c29ba644eef54ffa265596621906f85bd2d2" translate="yes" xml:space="preserve">
          <source>Predicate that returns a &amp;lt; b. Correctly compares signed and unsigned integers, ie. -1 &amp;lt; 2U.</source>
          <target state="translated">谓词返回a &amp;lt;b。正确比较有符号和无符号整数，即。-1 &amp;lt;2U。</target>
        </trans-unit>
        <trans-unit id="26756cd5052d3a034d5614a5454264ad1e804a2e" translate="yes" xml:space="preserve">
          <source>Predicate that returns a == b. Correctly compares signed and unsigned integers, ie. !(-1 == ~0U).</source>
          <target state="translated">正确比较有符号和无符号整数,即 !(-1 ==~0U)。</target>
        </trans-unit>
        <trans-unit id="aec40ac3dd710bdedb7c27ab3c63cbe9f18eca0e" translate="yes" xml:space="preserve">
          <source>Predicate that reverses the order of its arguments.</source>
          <target state="translated">颠倒其参数顺序的谓词。</target>
        </trans-unit>
        <trans-unit id="16636ca0b74fb2ab0a70fb6627626ffc2cf1d0e7" translate="yes" xml:space="preserve">
          <source>Predicate the given ranges are sorted by.</source>
          <target state="translated">预设给定范围的排序方式。</target>
        </trans-unit>
        <trans-unit id="1a38d124cb8a3b1e47307840e450ae91589d602f" translate="yes" xml:space="preserve">
          <source>Predicate the range should be sorted by.</source>
          <target state="translated">预设范围的排序方式。</target>
        </trans-unit>
        <trans-unit id="b2a7231686de07e79eb8b0d9844880c7ef14cedf" translate="yes" xml:space="preserve">
          <source>Predicate to determine when to stop.</source>
          <target state="translated">决定何时停止的谓词。</target>
        </trans-unit>
        <trans-unit id="546312872400f2b7fe55f05c3ab6277445097f85" translate="yes" xml:space="preserve">
          <source>Predicate to use for comparing needle against haystack.</source>
          <target state="translated">用来比较针和干草堆的谓词。</target>
        </trans-unit>
        <trans-unit id="70a5a11e1d7c6f98b55a8869acfad5cf195cf8e4" translate="yes" xml:space="preserve">
          <source>Predicate to use in comparing the elements of the haystack and the needle(s). Mandatory if no needles are given.</source>
          <target state="translated">用于比较干草堆和针的要素的谓词。如果没有给出针,则必须使用。</target>
        </trans-unit>
        <trans-unit id="3412ea0e9183eafcad5437bc1beda80c905fce06" translate="yes" xml:space="preserve">
          <source>Predicate used for comparison. Without a predicate specified the ordering implied by &lt;code&gt;opCmp&lt;/code&gt; is used.</source>
          <target state="translated">谓词用于比较。如果未指定谓词，则使用 &lt;code&gt;opCmp&lt;/code&gt; 隐含的顺序。</target>
        </trans-unit>
        <trans-unit id="bb58a86d3182e26b59f94be7cbbda2124f6c452f" translate="yes" xml:space="preserve">
          <source>Predicate used to compare elements.</source>
          <target state="translated">用于比较元素的谓词。</target>
        </trans-unit>
        <trans-unit id="b0cca7e5cdbdfdcfacaf2626d35398cb9ce852dc" translate="yes" xml:space="preserve">
          <source>Prefix Sum</source>
          <target state="translated">前缀和</target>
        </trans-unit>
        <trans-unit id="4440f6ead8de15bb428fb83460c2f9fb1d3d6664" translate="yes" xml:space="preserve">
          <source>Prefix positive numbers in a signed conversion with a +. It overrides any</source>
          <target state="translated">在有符号的转换中,在正数前加上+。它覆盖任何</target>
        </trans-unit>
        <trans-unit id="9d20134bf9ae9a5a55d77e7c52ee03334b676050" translate="yes" xml:space="preserve">
          <source>Prefix positive numbers in a signed conversion with a space.</source>
          <target state="translated">在符号转换中的正数前加一个空格。</target>
        </trans-unit>
        <trans-unit id="4b62ff682f634c873eaf7673a8c2dfbc17ca9e6e" translate="yes" xml:space="preserve">
          <source>Prepare a string with as many &lt;code&gt;../&lt;/code&gt; or &lt;code&gt;..\&lt;/code&gt; as necessary to reach the common root from base path.</source>
          <target state="translated">准备一个必要数量的 &lt;code&gt;../&lt;/code&gt; 或 &lt;code&gt;..\&lt;/code&gt; 字符串，以从基本路径到达公用根。</target>
        </trans-unit>
        <trans-unit id="415f781b04702ed4c2fb18fdbfc0c62c0bfdfc34" translate="yes" xml:space="preserve">
          <source>Prepare for generating obj file.</source>
          <target state="translated">准备生成obj文件。</target>
        </trans-unit>
        <trans-unit id="2f5da103100b3440f26c60eb3e05807f62717d70" translate="yes" xml:space="preserve">
          <source>Prepared Statement Status</source>
          <target state="translated">编制报表情况</target>
        </trans-unit>
        <trans-unit id="8a00f68e210aed91d87587585896acbb4f68a3e9" translate="yes" xml:space="preserve">
          <source>Prepend integer item to list.</source>
          <target state="translated">将整数项加入到列表中。</target>
        </trans-unit>
        <trans-unit id="2bc658c404b7b5169d7e796d80f53ca674f8dbcd" translate="yes" xml:space="preserve">
          <source>Prepend ptr to *plist.</source>
          <target state="translated">在*plist中加入ptr。</target>
        </trans-unit>
        <trans-unit id="a7e0dfaf80613ad95f56924d0ddc7d620003b7ee" translate="yes" xml:space="preserve">
          <source>Preserve the relative ordering of elements to the largest extent allowed by the algorithm's requirements.</source>
          <target state="translated">在算法要求允许的最大范围内,保留元素的相对排序。</target>
        </trans-unit>
        <trans-unit id="7d7712a544e0581dd899ab39e86edb57d9684fe7" translate="yes" xml:space="preserve">
          <source>PreserveAttributes &lt;code&gt;preserve&lt;/code&gt;</source>
          <target state="translated">PreserveAttributes &lt;code&gt;preserve&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f9b1f72e64b514a1faab078b4c60a83aa1be354" translate="yes" xml:space="preserve">
          <source>PreserveAttributes &lt;strong id=&quot;preserveAttributesDefault&quot;&gt;preserveAttributesDefault&lt;/strong&gt;;</source>
          <target state="translated">PreserveAttributes &lt;strong id=&quot;preserveAttributesDefault&quot;&gt;reserveAttributesDefault&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="3625fc12c04fb48d484d9798778432e4646c44a6" translate="yes" xml:space="preserve">
          <source>Pretty advanced function for building multi-part formposts. Each invoke adds one part that together construct a full post. Then use CURLOPT_HTTPPOST to send it off to libcurl.</source>
          <target state="translated">相当高级的功能,用于构建多部分formposts。每调用一次就增加一个部分,共同构建一个完整的帖子,然后使用CURLOPT_HTTPPOST将其发送到libcurl。然后使用CURLOPT_HTTPPOST将其发送到libcurl。</target>
        </trans-unit>
        <trans-unit id="7c6267ddd51b4b8a86f5124efee427639efeca08" translate="yes" xml:space="preserve">
          <source>Pretty print a module.</source>
          <target state="translated">漂亮的打印一个模块。</target>
        </trans-unit>
        <trans-unit id="000bfc178c61f018242fa09e44055036aac73316" translate="yes" xml:space="preserve">
          <source>Pretty print function parameter.</source>
          <target state="translated">漂亮的打印功能参数。</target>
        </trans-unit>
        <trans-unit id="446abdf27012e485e2e624c0190dfffb42d444b3" translate="yes" xml:space="preserve">
          <source>Pretty print function parameters.</source>
          <target state="translated">漂亮的打印功能参数。</target>
        </trans-unit>
        <trans-unit id="adf658a27711e59b6f616cbc30d0286f5d85f134" translate="yes" xml:space="preserve">
          <source>Pretty printed module as string.</source>
          <target state="translated">漂亮的打印模块作为字符串。</target>
        </trans-unit>
        <trans-unit id="bbe02dc8d90c522cd731d7f77d7a60e956659ce7" translate="yes" xml:space="preserve">
          <source>Previous versions of &lt;code&gt;XorshiftEngine&lt;/code&gt; did not provide any mechanism to specify the directions of the shifts, taking each shift as an unsigned magnitude. For backwards compatibility, because three shifts in the same direction cannot result in a full-period XorshiftEngine, when all three of &lt;code&gt;sa&lt;/code&gt;, &lt;code&gt;sb&lt;/code&gt;, &lt;code&gt;sc, are positive &lt;/code&gt;XorshiftEngine` treats them as unsigned magnitudes and uses shift directions to match the old behavior of &lt;code&gt;XorshiftEngine&lt;/code&gt;.  Not every set of shifts results in a full-period xorshift generator. The template does not currently at compile-time perform a full check for maximum period but in a future version might reject parameters resulting in shorter periods.</source>
          <target state="translated">以前的 &lt;code&gt;XorshiftEngine&lt;/code&gt; 版本没有提供任何机制来指定移位的方向，而是将每个移位视为无符号幅度。为了向后兼容，因为在相同方向上的三个偏移不会导致整个周期的XorshiftEngine，所以当 &lt;code&gt;sa&lt;/code&gt; ， &lt;code&gt;sb&lt;/code&gt; 和 &lt;code&gt;sc, are positive &lt;/code&gt; 三个全部为正时， XorshiftEngine`会将它们视为无符号幅度，并使用偏移方向来匹配 &lt;code&gt;XorshiftEngine&lt;/code&gt; 的旧行为。。并非每组移位都会导致全周期异或移位生成器。该模板当前未在编译时执行最大期限的完整检查，但是在将来的版本中，该模板可能会拒绝参数，从而缩短期限。</target>
        </trans-unit>
        <trans-unit id="3499b7593c8190fb7c47376aee73c9e820543602" translate="yes" xml:space="preserve">
          <source>Primary &lt;strong id=&quot;primary&quot;&gt;primary&lt;/strong&gt;;</source>
          <target state="translated">小学&lt;strong id=&quot;primary&quot;&gt;小学&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b3a2f356577f35c5a2c27fdf8b798609c666a3cb" translate="yes" xml:space="preserve">
          <source>Primary Expressions</source>
          <target state="translated">主要表现形式</target>
        </trans-unit>
        <trans-unit id="4e8f8df8afc826ac060bfb0d62e551d0ff99da1a" translate="yes" xml:space="preserve">
          <source>PrimaryAllocator</source>
          <target state="translated">PrimaryAllocator</target>
        </trans-unit>
        <trans-unit id="d857a8da372b74a1cc781b95e1edf9b095a2c086" translate="yes" xml:space="preserve">
          <source>Primitive flow analysis for constructors</source>
          <target state="translated">构造者的基本流程分析</target>
        </trans-unit>
        <trans-unit id="e444e1937adba3a1cfd5d90963ca115ff04f5ee0" translate="yes" xml:space="preserve">
          <source>Print AST data structure in a nice format.</source>
          <target state="translated">以漂亮的格式打印AST数据结构。</target>
        </trans-unit>
        <trans-unit id="52d58b69adddcbb01a0d9fb00892b30fc79f820b" translate="yes" xml:space="preserve">
          <source>Print DMD's logo with more debug information and error-reporting pointers.</source>
          <target state="translated">打印DMD的标识,并提供更多的调试信息和报错指针。</target>
        </trans-unit>
        <trans-unit id="741a8cf16a2a94a93e81f8799e908f88729eaa78" translate="yes" xml:space="preserve">
          <source>Print a deprecation message, may increase the global warning or error count depending on whether deprecations are ignored.</source>
          <target state="translated">打印弃用信息,可能会增加全局警告或错误计数,这取决于弃用信息是否被忽略。</target>
        </trans-unit>
        <trans-unit id="781d287d963aa57ac1be0813cd2b7893ed3e2f42" translate="yes" xml:space="preserve">
          <source>Print a tip message with the prefix and highlighting.</source>
          <target state="translated">打印带有前缀和高亮的提示信息。</target>
        </trans-unit>
        <trans-unit id="5c7e6858b23f26e525078100ff725440333b762c" translate="yes" xml:space="preserve">
          <source>Print a verbose message. Doesn't prefix or highlight messages.</source>
          <target state="translated">打印啰嗦的信息。不加前缀或突出显示信息。</target>
        </trans-unit>
        <trans-unit id="939daf2f0bcc7e74350bd013cf922548480474bd" translate="yes" xml:space="preserve">
          <source>Print a warning message, increasing the global warning count.</source>
          <target state="translated">打印一条警告信息,增加全局警告次数。</target>
        </trans-unit>
        <trans-unit id="a5099c933532cca0e3d4637739e21ce65a47b1f3" translate="yes" xml:space="preserve">
          <source>Print additional details about a deprecation message. Doesn't increase the error count, or print an additional deprecation prefix.</source>
          <target state="translated">打印关于弃用信息的附加细节。不会增加错误计数,也不会打印额外的弃用前缀。</target>
        </trans-unit>
        <trans-unit id="0133338c129646ea634be83fd6cd4d3657feeeb0" translate="yes" xml:space="preserve">
          <source>Print additional details about a warning message. Doesn't increase the warning count or print an additional warning prefix.</source>
          <target state="translated">打印关于警告信息的附加细节。不增加警告次数,也不打印额外的警告前缀。</target>
        </trans-unit>
        <trans-unit id="33c24f38922d7036946f23bec89d0ce87ce561bc" translate="yes" xml:space="preserve">
          <source>Print additional details about an error message. Doesn't increase the error count or print an additional error prefix.</source>
          <target state="translated">打印有关错误信息的附加细节。不增加错误计数或打印额外的错误前缀。</target>
        </trans-unit>
        <trans-unit id="058c115cad6e2e81008fb7ad2950801f7eec7c85" translate="yes" xml:space="preserve">
          <source>Print an error message, increasing the global error count.</source>
          <target state="translated">打印错误信息,增加全局错误数。</target>
        </trans-unit>
        <trans-unit id="32c85c57b0adc1c6b315e954d6c08dd2ae33e959" translate="yes" xml:space="preserve">
          <source>Print error message about invalid array operation.</source>
          <target state="translated">打印无效数组操作的错误信息。</target>
        </trans-unit>
        <trans-unit id="2134fe32d9505f6bba77dbd00ce388244749ad04" translate="yes" xml:space="preserve">
          <source>Print out debugging information.</source>
          <target state="translated">打印出调试信息。</target>
        </trans-unit>
        <trans-unit id="8057a71a3d3cdf62ae7ce1600345941a68ef4657" translate="yes" xml:space="preserve">
          <source>Printf Style Logging</source>
          <target state="translated">打印风格记录</target>
        </trans-unit>
        <trans-unit id="301a2e2f71f4f27f14ddfdaf8e1d9264bd94293c" translate="yes" xml:space="preserve">
          <source>Printing values works as it does in C:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ad095c527676644a2ddd8b5dfe7833cc2fa256" translate="yes" xml:space="preserve">
          <source>Prints message(s) if there are errors.</source>
          <target state="translated">如果有错误,则打印信息。</target>
        </trans-unit>
        <trans-unit id="53bea7b855c92761fc53db7e7e657329722ff553" translate="yes" xml:space="preserve">
          <source>Prints:</source>
          <target state="translated">Prints:</target>
        </trans-unit>
        <trans-unit id="200585a082f7fe89384cf8d9108f15dc9692123d" translate="yes" xml:space="preserve">
          <source>Private Use Area</source>
          <target state="translated">私人使用区</target>
        </trans-unit>
        <trans-unit id="e67d49b8486a78488c9fa13a7655377f61af5ded" translate="yes" xml:space="preserve">
          <source>Private_Use</source>
          <target state="translated">Private_Use</target>
        </trans-unit>
        <trans-unit id="0588b71974aef4ab5b2e1fdf75767f0460174967" translate="yes" xml:space="preserve">
          <source>Process handling</source>
          <target state="translated">流程处理</target>
        </trans-unit>
        <trans-unit id="81e395fd50ec55eed1a5348cc557a1f4263ca816" translate="yes" xml:space="preserve">
          <source>Processing of command line options.</source>
          <target state="translated">处理命令行选项。</target>
        </trans-unit>
        <trans-unit id="79ead62511e5ad3925246bd4a8ac726a0bf71b22" translate="yes" xml:space="preserve">
          <source>ProcessingInstruction &lt;code&gt;item&lt;/code&gt;</source>
          <target state="translated">加工说明 &lt;code&gt;item&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e2f47028d237ad837b8d24f2b1944ca76172bb96" translate="yes" xml:space="preserve">
          <source>ProcessingInstruction[] &lt;strong id=&quot;pis&quot;&gt;pis&lt;/strong&gt;;</source>
          <target state="translated">ProcessingInstruction [] &lt;strong id=&quot;pis&quot;&gt;pis&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="c489df222ae40007dc782a56c157e5129ac37a34" translate="yes" xml:space="preserve">
          <source>Processor type (vendor-dependent). This should be visible ONLY for display purposes.</source>
          <target state="translated">处理器类型(取决于供应商)。这应该是可见的,仅用于显示目的。</target>
        </trans-unit>
        <trans-unit id="1eed910bf79a6d98b77187f35780c01e434b332a" translate="yes" xml:space="preserve">
          <source>Produce a grayscale image of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Mandelbrot_set&quot;&gt;Mandelbrot set&lt;/a&gt; in binary &lt;a href=&quot;https://en.wikipedia.org/wiki/Netpbm_format&quot;&gt;Netpbm format&lt;/a&gt; to standard output.</source>
          <target state="translated">以二进制&lt;a href=&quot;https://en.wikipedia.org/wiki/Netpbm_format&quot;&gt;Netpbm格式&lt;/a&gt;将&lt;a href=&quot;https://en.wikipedia.org/wiki/Mandelbrot_set&quot;&gt;Mandelbrot集&lt;/a&gt;的灰度图像生成为标准输出。</target>
        </trans-unit>
        <trans-unit id="3862ac3aed81b0f225a849a90d5cc5f40be9aa3c" translate="yes" xml:space="preserve">
          <source>Produce elem which increments the usage count for a particular line. Sets corresponding bit in bitmap &lt;code&gt;m.covb[linnum]&lt;/code&gt;. Used to implement -cov switch (coverage analysis).</source>
          <target state="translated">产生elem会增加特定行的使用计数。在位图 &lt;code&gt;m.covb[linnum]&lt;/code&gt; 设置相应的位。用于实现-cov开关（覆盖率分析）。</target>
        </trans-unit>
        <trans-unit id="2ee701351b350f0300426cd783822031fe44f5fb" translate="yes" xml:space="preserve">
          <source>Programmers accustomed to explicitly managing memory allocation and deallocation will likely be skeptical of the benefits and efficacy of garbage collection. Experience both with new projects written with garbage collection in mind, and converting existing projects to garbage collection shows that:</source>
          <target state="translated">习惯于显式管理内存分配和去分配的程序员可能会对垃圾回收的好处和功效持怀疑态度。以垃圾回收为基础编写的新项目以及将现有项目转换为垃圾回收的经验都表明了这一点。</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="dd387eddd2291f436a15934f732eb070c13f983c" translate="yes" xml:space="preserve">
          <source>Properties are functions that can be syntactically treated as if they were fields or variables. Properties can be read from or written to. A property is read by calling a method or function with no arguments; a property is written by calling a method or function with its argument being the value it is set to.</source>
          <target state="translated">属性是可以被当作字段或变量来综合处理的函数。属性可以被读取或写入。属性可以通过调用一个没有参数的方法或函数来读取;属性可以通过调用一个参数为其设置值的方法或函数来写入。</target>
        </trans-unit>
        <trans-unit id="6d46d3190705bb371f9868ed9bf90c5d4d753b97" translate="yes" xml:space="preserve">
          <source>Properties for All Types</source>
          <target state="translated">所有类型的属性</target>
        </trans-unit>
        <trans-unit id="272b8921ce7d353cb8f3cf4775d9f488ee2f569c" translate="yes" xml:space="preserve">
          <source>Properties for Class Types</source>
          <target state="translated">类类型的属性</target>
        </trans-unit>
        <trans-unit id="895079fe34a3fbf080ac0e62bf915acb42b2bc99" translate="yes" xml:space="preserve">
          <source>Properties for Floating Point Types</source>
          <target state="translated">浮点类型的属性</target>
        </trans-unit>
        <trans-unit id="fc0bfcb689361cebbe86638a9e8cd2b0d58550ef" translate="yes" xml:space="preserve">
          <source>Properties for Integral Types</source>
          <target state="translated">积分类型的属性</target>
        </trans-unit>
        <trans-unit id="7c12bf8aa65674a95589ff691b3585505400d756" translate="yes" xml:space="preserve">
          <source>Properties for associative arrays are:</source>
          <target state="translated">关联数组的属性是:</target>
        </trans-unit>
        <trans-unit id="ebb627686689409a93bdc19fa3a749dd5b3039f5" translate="yes" xml:space="preserve">
          <source>Properties for getting (and possibly setting) the approximate maximum length of a shared freelist.</source>
          <target state="translated">属性,用于获取(也可能设置)共享自由列表的近似最大长度。</target>
        </trans-unit>
        <trans-unit id="d8ca5bf11ef59c3e8e3df9efe7fd4dd627f9d892" translate="yes" xml:space="preserve">
          <source>Properties for getting (and possibly setting) the bounds. Setting bounds is allowed only once , and before any allocation takes place. Otherwise, the primitives have the same semantics as those of &lt;code&gt;FreeList&lt;/code&gt;.</source>
          <target state="translated">用于获取（可能设置）边界的属性。设置边界仅允许一次，并且在进行任何分配之前。否则，原语与 &lt;code&gt;FreeList&lt;/code&gt; 具有相同的语义。</target>
        </trans-unit>
        <trans-unit id="2b393346b666625fd355fd7149a1980f7d9e6881" translate="yes" xml:space="preserve">
          <source>Property Examples</source>
          <target state="translated">属性示例</target>
        </trans-unit>
        <trans-unit id="14fa0a936b7797ccd49640d8abe1784758e3862e" translate="yes" xml:space="preserve">
          <source>Property Functions</source>
          <target state="translated">属性功能</target>
        </trans-unit>
        <trans-unit id="5dbcb2d0cc6ae723ca2eccf347d83251ccd8b303" translate="yes" xml:space="preserve">
          <source>Property returning &lt;code&gt;true&lt;/code&gt; if and only if the array has no elements.</source>
          <target state="translated">当且仅当数组没有元素时，属性返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="065210cf38be02dc39be511bd0b3551ba9de6228" translate="yes" xml:space="preserve">
          <source>Property returning &lt;code&gt;true&lt;/code&gt; if and only if the container has no elements.</source>
          <target state="translated">当且仅当容器没有元素时，属性才返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40a7205dce63e4d8a540ba5fc2d7d36f2cc7edd8" translate="yes" xml:space="preserve">
          <source>Property that indicates if this is a valid, alive socket.</source>
          <target state="translated">属性,表示这是否是一个有效的、活着的套接字。</target>
        </trans-unit>
        <trans-unit id="aafe895a0026094ff428b9d225a89af65181ecb4" translate="yes" xml:space="preserve">
          <source>Prot &lt;code&gt;protection&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;protection&lt;/code&gt; 等级</target>
        </trans-unit>
        <trans-unit id="1ed77c3f7ffc41a33eadccef5727dc7c97079235" translate="yes" xml:space="preserve">
          <source>Protocol</source>
          <target state="translated">Protocol</target>
        </trans-unit>
        <trans-unit id="07c6a3380801fe033fe48fab273c8c480f2ce675" translate="yes" xml:space="preserve">
          <source>ProtocolType &lt;strong id=&quot;protocol&quot;&gt;protocol&lt;/strong&gt;;</source>
          <target state="translated">ProtocolType &lt;strong id=&quot;protocol&quot;&gt;协议&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1acbf21228a87baaefe83afa17793b9744907136" translate="yes" xml:space="preserve">
          <source>ProtocolType &lt;strong id=&quot;type&quot;&gt;type&lt;/strong&gt;;</source>
          <target state="translated">ProtocolType &lt;strong id=&quot;type&quot;&gt;类型&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="7c56749d7bcd9cdca2934b133e033e63522d618f" translate="yes" xml:space="preserve">
          <source>Provide a CURLShare for mutexing non-ts data</source>
          <target state="translated">提供一个CURLShare,用于mutexing非ts数据。</target>
        </trans-unit>
        <trans-unit id="1929edddaabf41eee663a24b280cada674c28d3e" translate="yes" xml:space="preserve">
          <source>Provide a human readable representation</source>
          <target state="translated">提供人类可读的表述</target>
        </trans-unit>
        <trans-unit id="e164562de1900a7450845d929e5ec99bafad7e86" translate="yes" xml:space="preserve">
          <source>Provide out-of-band access to the original C argc/argv passed to this program via main(argc,argv).</source>
          <target state="translated">提供对通过main(argc,argv)传递给这个程序的原始C语言argc/argv的带外访问。</target>
        </trans-unit>
        <trans-unit id="b0d43391e49e267e8e9c3011757825bb2e5aba5c" translate="yes" xml:space="preserve">
          <source>Provide the .dup array property.</source>
          <target state="translated">提供.dup数组属性。</target>
        </trans-unit>
        <trans-unit id="884cd93143fb3cc6d0b5ce44736f5e3b20a102a8" translate="yes" xml:space="preserve">
          <source>Provide the .idup array property.</source>
          <target state="translated">提供.idup数组属性。</target>
        </trans-unit>
        <trans-unit id="f41856ba90560f011a0a6b5a85e291fe656f3fca" translate="yes" xml:space="preserve">
          <source>Provided Logger</source>
          <target state="translated">提供的记录仪</target>
        </trans-unit>
        <trans-unit id="e1a88ee373473fd057a8492c11452ee411c1a4f5" translate="yes" xml:space="preserve">
          <source>Provided for de-allocation in the same translation unit that did the allocation. Added in libcurl 7.10</source>
          <target state="translated">提供了在进行分配的同一个翻译单元中进行去分配的功能。在libcurl 7.10中添加</target>
        </trans-unit>
        <trans-unit id="1f2030ef991f6e1b4bbd9b294ac641d24cefdf25" translate="yes" xml:space="preserve">
          <source>Provides a list of all threads currently being tracked by the system. Note that threads in the returned array might no longer run (see &lt;code&gt;Thread.&lt;/code&gt;&lt;a href=&quot;#isRunning&quot;&gt;&lt;code&gt;isRunning&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">提供系统当前正在跟踪的所有线程的列表。需要注意的是返回数组中的线程可能不再运行（参见 &lt;code&gt;Thread.&lt;/code&gt; &lt;a href=&quot;#isRunning&quot;&gt; &lt;code&gt;isRunning&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4c7af553837fa20372e82bd10fd1fbdacc0fefe6" translate="yes" xml:space="preserve">
          <source>Provides a new scope with &lt;code&gt;STC.deprecated_&lt;/code&gt; and &lt;code&gt;Scope.depdecl&lt;/code&gt; set</source>
          <target state="translated">提供带有 &lt;code&gt;STC.deprecated_&lt;/code&gt; 和 &lt;code&gt;Scope.depdecl&lt;/code&gt; 设置的新范围</target>
        </trans-unit>
        <trans-unit id="8bf9f03cd2cf31405fbc05f388ba616c27769697" translate="yes" xml:space="preserve">
          <source>Provides a reference to the calling fiber or null if no fiber is currently active.</source>
          <target state="translated">提供调用光纤的引用,如果当前没有活动光纤,则提供空值。</target>
        </trans-unit>
        <trans-unit id="23bb9371df7b9c17559203a212a9ba678642eb9a" translate="yes" xml:space="preserve">
          <source>Provides a reference to the calling thread.</source>
          <target state="translated">提供对调用线程的引用。</target>
        </trans-unit>
        <trans-unit id="ee41bee9bb183a410298e4abe02e56b8aa459d71" translate="yes" xml:space="preserve">
          <source>Provides an explanation for and corrective action to take if the associated declaration is marked as deprecated.</source>
          <target state="translated">如果相关声明被标记为废弃,则提供解释和纠正措施。</target>
        </trans-unit>
        <trans-unit id="7acadd30bb0f6451e04d1ebd324866714956a1be" translate="yes" xml:space="preserve">
          <source>Provides convenient access to date and time representations.</source>
          <target state="translated">提供方便的日期和时间表示方式。</target>
        </trans-unit>
        <trans-unit id="2e43a7b7c99235aea804390e292b91087037668d" translate="yes" xml:space="preserve">
          <source>Provides indexed access into the container. The index type is container-defined. A container may define several index types (and consequently overloaded indexing).</source>
          <target state="translated">提供对容器的索引访问。索引类型是由容器定义的。一个容器可以定义几种索引类型(因此也可以定义超载索引)。</target>
        </trans-unit>
        <trans-unit id="6421abde57ae539842411bf094700ed30d80091f" translate="yes" xml:space="preserve">
          <source>Provides protocol-independent parsing of network addresses. Does not attempt name resolution. Uses &lt;code&gt;getAddressInfo&lt;/code&gt; with &lt;code&gt;AddressInfoFlags.NUMERICHOST&lt;/code&gt; if the current system supports it, and &lt;code&gt;InternetAddress&lt;/code&gt; otherwise.</source>
          <target state="translated">提供与协议无关的网络地址解析。不尝试名称解析。如果当前系统支持，则将 &lt;code&gt;getAddressInfo&lt;/code&gt; 与 &lt;code&gt;AddressInfoFlags.NUMERICHOST&lt;/code&gt; 一起使用，否则，将其与 &lt;code&gt;InternetAddress&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="31663ee024ce588c5fc30aa3c89a97bcb8794f25" translate="yes" xml:space="preserve">
          <source>Provides protocol-independent translation from host names to socket addresses. If advanced functionality is not required, consider using &lt;code&gt;getAddress&lt;/code&gt; for compatibility with older systems.</source>
          <target state="translated">提供从主机名到套接字地址的与协议无关的转换。如果不需要高级功能，请考虑使用 &lt;code&gt;getAddress&lt;/code&gt; 与旧系统兼容。</target>
        </trans-unit>
        <trans-unit id="35232085e7ae211b046c3d788222344964d18067" translate="yes" xml:space="preserve">
          <source>Provides protocol-independent translation from host names to socket addresses. Uses &lt;code&gt;getAddressInfo&lt;/code&gt; if the current system supports it, and &lt;code&gt;InternetHost&lt;/code&gt; otherwise.</source>
          <target state="translated">提供从主机名到套接字地址的与协议无关的转换。如果当前系统支持，则使用 &lt;code&gt;getAddressInfo&lt;/code&gt; ，否则使用 &lt;code&gt;InternetHost&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a49a0184f0557159ebb6d84a10307308b1e09f15" translate="yes" xml:space="preserve">
          <source>Provides the conversions between the IANA time zone database time zone names (which POSIX systems use) and the time zone names that Windows uses.</source>
          <target state="translated">提供IANA时区数据库时区名(POSIX系统使用)和Windows使用的时区名之间的转换。</target>
        </trans-unit>
        <trans-unit id="c0979b8d4efc2e480740645f6f1ca0dee4fd8c8b" translate="yes" xml:space="preserve">
          <source>Providing a sub-name narrows down the list of time zones (which can number in the thousands). For example, passing in &quot;America&quot; as the sub-name returns only the time zones which begin with &quot;America&quot;.</source>
          <target state="translated">提供一个子名称可以缩小时区列表的范围(可达数千)。例如,输入 &quot;America &quot;作为子名称,只返回以 &quot;America &quot;开头的时区。</target>
        </trans-unit>
        <trans-unit id="9db0b745b6fa2951c35528cc5a431b74d851a2e8" translate="yes" xml:space="preserve">
          <source>Proxies</source>
          <target state="translated">Proxies</target>
        </trans-unit>
        <trans-unit id="d1cea344353e26ba6f1565ed661d94f610ce9e4f" translate="yes" xml:space="preserve">
          <source>Proxy</source>
          <target state="translated">Proxy</target>
        </trans-unit>
        <trans-unit id="b9644c1f78e0b772779a500097a7b6c2cd225a38" translate="yes" xml:space="preserve">
          <source>Proxy port</source>
          <target state="translated">代理端口</target>
        </trans-unit>
        <trans-unit id="8ee0476a1b3f68f2a8b1652de253e3231c5a30a9" translate="yes" xml:space="preserve">
          <source>Proxy type</source>
          <target state="translated">代理类型</target>
        </trans-unit>
        <trans-unit id="b269c29253f44a590c2375615bb821fb27b24ed8" translate="yes" xml:space="preserve">
          <source>Pruning and Filling</source>
          <target state="translated">修剪和填充</target>
        </trans-unit>
        <trans-unit id="7e4b062c9df92c18899e0d640bf2c977c25ac1c4" translate="yes" xml:space="preserve">
          <source>Ps</source>
          <target state="translated">Ps</target>
        </trans-unit>
        <trans-unit id="bfec143c19b8a7da8ef2986bfdff976c6539b3dc" translate="yes" xml:space="preserve">
          <source>Pseudo-Random Number Generator</source>
          <target state="translated">伪随机数发生器</target>
        </trans-unit>
        <trans-unit id="2275514eead6bd6a3b3aecc0fd0641f0d282d668" translate="yes" xml:space="preserve">
          <source>Pseudo-random number generators.</source>
          <target state="translated">伪随机数发生器。</target>
        </trans-unit>
        <trans-unit id="1d68a19c2870443aa0522030150bb71ec07a7c22" translate="yes" xml:space="preserve">
          <source>Public API enums for RTSP requests</source>
          <target state="translated">RTSP请求的公共API枚举</target>
        </trans-unit>
        <trans-unit id="c0ddaff13e39f258c8525deac888ae91ddab69de" translate="yes" xml:space="preserve">
          <source>Public Imports</source>
          <target state="translated">公共进口</target>
        </trans-unit>
        <trans-unit id="3bc0e9d0786bebb377ec905ced131e92536f610b" translate="yes" xml:space="preserve">
          <source>Public or exported non-static member functions cannot be called from within an invariant.</source>
          <target state="translated">公共的或导出的非静态成员函数不能在一个不变式中被调用。</target>
        </trans-unit>
        <trans-unit id="68fc7bd4bc44e3818645b5f17ee1089ffb95b680" translate="yes" xml:space="preserve">
          <source>Punctuation</source>
          <target state="translated">Punctuation</target>
        </trans-unit>
        <trans-unit id="531399b1b6f34aa45ee64387cb3aca5b2ccb7f93" translate="yes" xml:space="preserve">
          <source>Punctuation Escapes</source>
          <target state="translated">标点符号逃逸</target>
        </trans-unit>
        <trans-unit id="84cc29a9cb3f424e51bf299820cc87ee23488159" translate="yes" xml:space="preserve">
          <source>Pure Constructors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea63ccb580688f825b1a702a02a1126819fcc769" translate="yes" xml:space="preserve">
          <source>Pure Functions</source>
          <target state="translated">纯功能</target>
        </trans-unit>
        <trans-unit id="315b76c64c484cf690522b3a45fd3980c19e88bf" translate="yes" xml:space="preserve">
          <source>Pure destructors do not benefit of special elision.</source>
          <target state="translated">纯粹的破坏者并不得益于特殊的洗练。</target>
        </trans-unit>
        <trans-unit id="6dfc0292d2db1992a61938a7d5118720b35feada" translate="yes" xml:space="preserve">
          <source>Pure functions are functions that cannot directly access global or static mutable state. &lt;code&gt;pure&lt;/code&gt; guarantees that a pure function call won't access or modify any implicit state in the program.</source>
          <target state="translated">纯函数是不能直接访问全局或静态可变状态的函数。 &lt;code&gt;pure&lt;/code&gt; 保证纯函数调用不会访问或修改程序中的任何隐式状态。</target>
        </trans-unit>
        <trans-unit id="117c6cb152c7552d6af480d72545b235ac1e0db2" translate="yes" xml:space="preserve">
          <source>Pure real FFTs are automatically detected and the relevant optimizations are performed.</source>
          <target state="translated">自动检测纯实型FFT,并进行相关优化。</target>
        </trans-unit>
        <trans-unit id="dc905a4c2483255a5cc6406f4bafbb5f6c6e5b25" translate="yes" xml:space="preserve">
          <source>Pure variants of C's memory allocation functions &lt;code&gt;malloc&lt;/code&gt;, &lt;code&gt;calloc&lt;/code&gt;, and &lt;code&gt;realloc&lt;/code&gt; and deallocation function &lt;code&gt;free&lt;/code&gt;.</source>
          <target state="translated">C的内存分配函数 &lt;code&gt;malloc&lt;/code&gt; ， &lt;code&gt;calloc&lt;/code&gt; ， &lt;code&gt;realloc&lt;/code&gt; 和释放函数 &lt;code&gt;free&lt;/code&gt; 的纯变体。</target>
        </trans-unit>
        <trans-unit id="5338b2491e024cedccb4669dda5e88c429cbc759" translate="yes" xml:space="preserve">
          <source>Push this onto stack of chained exceptions.</source>
          <target state="translated">将其推送到链式异常的堆栈中。</target>
        </trans-unit>
        <trans-unit id="6c8ff93bbe2e1f6cd06cf16810831791e43f1aba" translate="yes" xml:space="preserve">
          <source>Pushes an array of elements at once. It is more efficient to push as much data as possible in a single call. On platforms that do not support unaligned reads (MIPS or old ARM chips), the compiler may produce slower code to ensure correctness.</source>
          <target state="translated">一次推送一个数组的元素。在一次调用中推送尽可能多的数据会更有效率。在不支持不对齐读取的平台上(MIPS或旧的ARM芯片),编译器可能会产生较慢的代码以确保正确性。</target>
        </trans-unit>
        <trans-unit id="f02cd2c1d42500d205a7a9f6e31677df9e57402e" translate="yes" xml:space="preserve">
          <source>Put a &lt;code&gt;Task&lt;/code&gt; object on the back of the task queue. The &lt;code&gt;Task&lt;/code&gt; object may be passed by pointer or reference.</source>
          <target state="translated">将 &lt;code&gt;Task&lt;/code&gt; 对象放在任务队列的后面。该 &lt;code&gt;Task&lt;/code&gt; 对象可以通过指针或引用传递。</target>
        </trans-unit>
        <trans-unit id="8aff8881ff753eff33815e662bf18604194c6243" translate="yes" xml:space="preserve">
          <source>Put remainder bytes. This must be called only once after &lt;code&gt;putElement&lt;/code&gt; and before &lt;code&gt;finalize&lt;/code&gt;.</source>
          <target state="translated">放入剩余字节。在 &lt;code&gt;putElement&lt;/code&gt; 之后和 &lt;code&gt;finalize&lt;/code&gt; 之前只能调用一次。</target>
        </trans-unit>
        <trans-unit id="13df9524e7a06f1a5560da8f072fec09f3ee42e5" translate="yes" xml:space="preserve">
          <source>Put with data senders:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c24540773c24c1085b8ed53542711eb6b9d88cc" translate="yes" xml:space="preserve">
          <source>Puts the formatting result into a preallocated array.</source>
          <target state="translated">将格式化结果放入一个预分配的数组中。</target>
        </trans-unit>
        <trans-unit id="c3156e00d3c2588c639e0d3cf6821258b05761c7" translate="yes" xml:space="preserve">
          <source>Q</source>
          <target state="translated">Q</target>
        </trans-unit>
        <trans-unit id="fbeba94c4e9b16a43991c5615fab8c4406d33231" translate="yes" xml:space="preserve">
          <source>Qt</source>
          <target state="translated">Qt</target>
        </trans-unit>
        <trans-unit id="0648eeac65ea5d646b0dae2aea4416b279c9f6d0" translate="yes" xml:space="preserve">
          <source>QualifiedIdentifier</source>
          <target state="translated">QualifiedIdentifier</target>
        </trans-unit>
        <trans-unit id="e1acf66aec4ab7e4378cf35aa85b3c0a8f0caa32" translate="yes" xml:space="preserve">
          <source>Qualifier Groups</source>
          <target state="translated">资格组</target>
        </trans-unit>
        <trans-unit id="e3dc7b91ec0fe4c470a2d5bf2412ad40efa0845e" translate="yes" xml:space="preserve">
          <source>Qualifying an entire struct as &lt;code&gt;shared&lt;/code&gt; correctly propagates the attribute to the generated postblits:</source>
          <target state="translated">将整个结构限定为正确 &lt;code&gt;shared&lt;/code&gt; 将属性传播到生成的postblits：</target>
        </trans-unit>
        <trans-unit id="6078532ab203b30b0c8e32bb799fd87d65f55236" translate="yes" xml:space="preserve">
          <source>Quantifiers</source>
          <target state="translated">Quantifiers</target>
        </trans-unit>
        <trans-unit id="325b570b7ef26f5fe5603d9f1c6c1cfed0baf35b" translate="yes" xml:space="preserve">
          <source>Queries the GC whether the current thread is running object finalization as part of a GC collection, or an explicit call to runFinalizers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa41452b81cfc8871bafa9d988f53a1bb4ce356d" translate="yes" xml:space="preserve">
          <source>Queries whether &lt;code&gt;b&lt;/code&gt; has been allocated with this region.</source>
          <target state="translated">查询 &lt;code&gt;b&lt;/code&gt; 是否已分配给该区域。</target>
        </trans-unit>
        <trans-unit id="57517f03e9aaf59c82ec84806650edb8f5d7492d" translate="yes" xml:space="preserve">
          <source>Queries whether a &lt;code&gt;Checked!(T, WithNaN)&lt;/code&gt; object is not a number (NaN).</source>
          <target state="translated">查询 &lt;code&gt;Checked!(T, WithNaN)&lt;/code&gt; 对象是否不是数字（NaN）。</target>
        </trans-unit>
        <trans-unit id="625af40606e435d60c7571eb3eaed21802aa70ee" translate="yes" xml:space="preserve">
          <source>Query Progress Callbacks</source>
          <target state="translated">查询进度回调</target>
        </trans-unit>
        <trans-unit id="e1fe6e5e1618fc5d36b948e04dffddb60ff1e31e" translate="yes" xml:space="preserve">
          <source>Query the text for a Windows error code, as returned by &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/ms679360.aspx&quot;&gt; &lt;code&gt;GetLastError&lt;/code&gt;&lt;/a&gt;, as a D string.</source>
          <target state="translated">查询文本以获取Windows错误代码（由&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/ms679360.aspx&quot;&gt; &lt;code&gt;GetLastError&lt;/code&gt; &lt;/a&gt;返回）作为D字符串。</target>
        </trans-unit>
        <trans-unit id="be0224eb0002c0644b5fe076b5840980c58dd4dc" translate="yes" xml:space="preserve">
          <source>Queueing all unreachable memory that needs destructors to run.</source>
          <target state="translated">将所有无法到达的内存排队,需要destructors来运行。</target>
        </trans-unit>
        <trans-unit id="a56dc6a151cbc05cb8609d8f932b0767b30f6d0e" translate="yes" xml:space="preserve">
          <source>Quick and dirty code need not write any error handling code at all, and don't need to check for errors. The errors will be caught, an appropriate message displayed, and the program gracefully shut down all by default.</source>
          <target state="translated">速成代码根本不需要写任何错误处理代码,也不需要检查错误。错误会被捕捉到,显示相应的信息,程序默认会优雅地全部关闭。</target>
        </trans-unit>
        <trans-unit id="f833b1b092080445c51762180493fddf5376651b" translate="yes" xml:space="preserve">
          <source>Quick and dirty programs are not worth writing tedious error handling code for, and so such utilities tend to be like using a table saw with no blade guards.</source>
          <target state="translated">快速而肮脏的程序不值得为其编写冗长的错误处理代码,因此这类实用程序往往就像使用没有护板的台锯一样。</target>
        </trans-unit>
        <trans-unit id="3c8b0af5874919bbda28b1f5afc70b825a7fdc39" translate="yes" xml:space="preserve">
          <source>Quotation_Mark</source>
          <target state="translated">Quotation_Mark</target>
        </trans-unit>
        <trans-unit id="7b0257ce75add65485cb879a8ababbebc2270b68" translate="yes" xml:space="preserve">
          <source>Quotes</source>
          <target state="translated">Quotes</target>
        </trans-unit>
        <trans-unit id="8cf3dc59ab6c635606edde6eb01c2303741881c7" translate="yes" xml:space="preserve">
          <source>Quotes a command-line argument in a manner conforming to the behavior of &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/bb776391(v=vs.85).aspx&quot;&gt;CommandLineToArgvW&lt;/a&gt;.</source>
          <target state="translated">以符合&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/bb776391(v=vs.85).aspx&quot;&gt;CommandLineToArgvW&lt;/a&gt;行为的方式引用命令行参数。</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="46b2a3379a4b9c621f2cae3cf633f16ef00c9de0" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;choices&lt;/code&gt;</source>
          <target state="translated">R &lt;code&gt;choices&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7266e22ca42368c5ac28f6cdad79f6a1c7516362" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;fax&lt;/code&gt;</source>
          <target state="translated">R &lt;code&gt;fax&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e25e4996cd19545180422dc753d9814e4b846890" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;fbx&lt;/code&gt;</source>
          <target state="translated">[R &lt;code&gt;fbx&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e55fb466207612f43c06a1f232ada1085268cc4e" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;haystack&lt;/code&gt;</source>
          <target state="translated">[R &lt;code&gt;haystack&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="424b7c75c63229e3fcc721a2f15ae19e6dbfa620" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;input&lt;/code&gt;</source>
          <target state="translated">R &lt;code&gt;input&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71188bd33ad186c201291e74f2ea18f5a3641f40" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">R &lt;code&gt;name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13640b2ef57c08e53edacc90554f201319c4bd93" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;path&lt;/code&gt;</source>
          <target state="translated">R &lt;code&gt;path&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cfca0b9b62f6dec32b0f106ee7bd90408f6db66d" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;pathname&lt;/code&gt;</source>
          <target state="translated">R &lt;code&gt;pathname&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ebe092c47cea2696cd458501faa3c0952875efca" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;r&lt;/code&gt;</source>
          <target state="translated">[R &lt;code&gt;r&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab468fbdc306faaa419a93d0688406232175b4c8" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;range&lt;/code&gt;</source>
          <target state="translated">R &lt;code&gt;range&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e695ad661c9be1e85180c63d44f9ddf593365841" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;re&lt;/code&gt;</source>
          <target state="translated">[R &lt;code&gt;re&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="97fe6c090c86e02140df1df65d1dc3a2d3f9a4bd" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;rhs&lt;/code&gt;</source>
          <target state="translated">[R &lt;code&gt;rhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4452828287fae2c2221b85f0d6fd57783e9416bf" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;sep&lt;/code&gt;</source>
          <target state="translated">R &lt;code&gt;sep&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d10d6d4b9dfbf3470b6476d9b518976a16168f99" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;to&lt;/code&gt;</source>
          <target state="translated">R &lt;code&gt;to&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="50863302124895c67709c985bbc8750a0dc5ed66" translate="yes" xml:space="preserve">
          <source>R &lt;strong id=&quot;drop&quot;&gt;drop&lt;/strong&gt;(R)(R range, size_t n)</source>
          <target state="translated">R &lt;strong id=&quot;drop&quot;&gt;降&lt;/strong&gt;（R）（R范围，size_t n）</target>
        </trans-unit>
        <trans-unit id="fb325cd844a163a42462ecda91c85f8764d32e50" translate="yes" xml:space="preserve">
          <source>R &lt;strong id=&quot;dropBack&quot;&gt;dropBack&lt;/strong&gt;(R)(R range, size_t n)</source>
          <target state="translated">R &lt;strong id=&quot;dropBack&quot;&gt;dropBack&lt;/strong&gt;（R）（R范围，size_t n）</target>
        </trans-unit>
        <trans-unit id="1a4956e36adf7f6c345474abdad19d0416fb6771" translate="yes" xml:space="preserve">
          <source>R &lt;strong id=&quot;dropBackExactly&quot;&gt;dropBackExactly&lt;/strong&gt;(R)(R range, size_t n)</source>
          <target state="translated">R &lt;strong id=&quot;dropBackExactly&quot;&gt;dropBackExactly&lt;/strong&gt;（R）（R范围，size_t n）</target>
        </trans-unit>
        <trans-unit id="5636cd7e75f55155f0813afda029b296c014e5f0" translate="yes" xml:space="preserve">
          <source>R &lt;strong id=&quot;dropBackOne&quot;&gt;dropBackOne&lt;/strong&gt;(R)(R range)</source>
          <target state="translated">R &lt;strong id=&quot;dropBackOne&quot;&gt;dropBackOne&lt;/strong&gt;（R）（R范围）</target>
        </trans-unit>
        <trans-unit id="85883c8c957d5efc82ef442a74c58c532150dd43" translate="yes" xml:space="preserve">
          <source>R &lt;strong id=&quot;dropExactly&quot;&gt;dropExactly&lt;/strong&gt;(R)(R range, size_t n)</source>
          <target state="translated">R &lt;strong id=&quot;dropExactly&quot;&gt;降精确&lt;/strong&gt;（R）（R范围，size_t n）</target>
        </trans-unit>
        <trans-unit id="f9cad92fc189a821863e6343ed3112c5c45f7ef5" translate="yes" xml:space="preserve">
          <source>R &lt;strong id=&quot;dropOne&quot;&gt;dropOne&lt;/strong&gt;(R)(R range)</source>
          <target state="translated">R &lt;strong id=&quot;dropOne&quot;&gt;dropOne&lt;/strong&gt;（R）（R范围）</target>
        </trans-unit>
        <trans-unit id="11e2a417124b25e85e961d2746bff4dcf2ee0fa8" translate="yes" xml:space="preserve">
          <source>R &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt;(String)(String i)</source>
          <target state="translated">R &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt;（字符串）（字符串i）</target>
        </trans-unit>
        <trans-unit id="e8c816cd865443df3fb58bfeee9cf533972311c0" translate="yes" xml:space="preserve">
          <source>R &lt;strong id=&quot;replace&quot;&gt;replace&lt;/strong&gt;(alias fun, R, RegEx)(R input, RegEx re)</source>
          <target state="translated">R &lt;strong id=&quot;replace&quot;&gt;替换&lt;/strong&gt;（别名乐趣，R，RegEx）（R输入，RegEx重新）</target>
        </trans-unit>
        <trans-unit id="366f82d7690e508f3f12c24c9b5263e1348fd152" translate="yes" xml:space="preserve">
          <source>R &lt;strong id=&quot;replace&quot;&gt;replace&lt;/strong&gt;(alias scheme = match, R, C, RegEx)(R input, RegEx re, const(C)[] format)</source>
          <target state="translated">R &lt;strong id=&quot;replace&quot;&gt;替换&lt;/strong&gt;（别名方案= match，R，C，RegEx）（R输入，RegEx re，const（C）[]格式）</target>
        </trans-unit>
        <trans-unit id="7d01ce94655a4a56f469c103c1d6a5369ff08a56" translate="yes" xml:space="preserve">
          <source>R &lt;strong id=&quot;replaceFirst&quot;&gt;replaceFirst&lt;/strong&gt;(R, C, RegEx)(R input, RegEx re, const(C)[] format)</source>
          <target state="translated">R &lt;strong id=&quot;replaceFirst&quot;&gt;replaceFirst&lt;/strong&gt;（R，C，RegEx）（R输入，RegEx re，const（C）[]格式）</target>
        </trans-unit>
        <trans-unit id="20a08fddc23874fdd02d8fa4d8a4a5267450724d" translate="yes" xml:space="preserve">
          <source>R &lt;strong id=&quot;replaceFirst&quot;&gt;replaceFirst&lt;/strong&gt;(alias fun, R, RegEx)(R input, RegEx re)</source>
          <target state="translated">R &lt;strong id=&quot;replaceFirst&quot;&gt;replaceFirst&lt;/strong&gt;（别名乐趣，R，RegEx）（R输入，RegEx重新）</target>
        </trans-unit>
        <trans-unit id="067f32da0babc4ff738d19aab110dc4b8e9152a3" translate="yes" xml:space="preserve">
          <source>R r</source>
          <target state="translated">R r</target>
        </trans-unit>
        <trans-unit id="8a02cd9a7652426a1cc33b70edf17e072b64bb13" translate="yes" xml:space="preserve">
          <source>R* &lt;code&gt;range&lt;/code&gt;</source>
          <target state="translated">R * &lt;code&gt;range&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d3c006177515d161711463dc36ea326d00dd6c50" translate="yes" xml:space="preserve">
          <source>R-03371-37637</source>
          <target state="translated">R-03371-37637</target>
        </trans-unit>
        <trans-unit id="ed224262865068e4e98f69898960d0c04f8bcdf2" translate="yes" xml:space="preserve">
          <source>R-37514-35566</source>
          <target state="translated">R-37514-35566</target>
        </trans-unit>
        <trans-unit id="aa18ab4548b06f1904b620f598aa53d4dd7a5133" translate="yes" xml:space="preserve">
          <source>R-51971-34154</source>
          <target state="translated">R-51971-34154</target>
        </trans-unit>
        <trans-unit id="791a7d0746cccccb32d298c2a7ae029256ba4f41" translate="yes" xml:space="preserve">
          <source>R1 &lt;code&gt;from&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;from&lt;/code&gt; R1</target>
        </trans-unit>
        <trans-unit id="a50f0d4d22cfd7772851244d5316a7272acc327a" translate="yes" xml:space="preserve">
          <source>R1 &lt;code&gt;haystack&lt;/code&gt;</source>
          <target state="translated">R1 &lt;code&gt;haystack&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d30d08fbaf4f299a6ce6f18a5caaa4b5e3a4bc8" translate="yes" xml:space="preserve">
          <source>R1 &lt;code&gt;inputRange&lt;/code&gt;</source>
          <target state="translated">R1 &lt;code&gt;inputRange&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56e3536a8b44d4a1bd8b6852808418db9282c982" translate="yes" xml:space="preserve">
          <source>R1 &lt;code&gt;path&lt;/code&gt;</source>
          <target state="translated">R1 &lt;code&gt;path&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8ce974c87042be5646c37a9d903e4dc28ffe45da" translate="yes" xml:space="preserve">
          <source>R1 &lt;code&gt;r1&lt;/code&gt;</source>
          <target state="translated">R1 &lt;code&gt;r1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f79e33e37a7032419b3c7f02e2aeab2ab3a99cb8" translate="yes" xml:space="preserve">
          <source>R1 &lt;code&gt;range1&lt;/code&gt;</source>
          <target state="translated">R1 &lt;code&gt;range1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b7bb559e01e420d7f99325c9034331e25d0feda" translate="yes" xml:space="preserve">
          <source>R1 &lt;code&gt;source&lt;/code&gt;</source>
          <target state="translated">R1 &lt;code&gt;source&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cec38db6f44458a89fca4706fe9db3eeb0925121" translate="yes" xml:space="preserve">
          <source>R1 &lt;strong id=&quot;find&quot;&gt;find&lt;/strong&gt;(alias pred = &quot;a == b&quot;, R1, R2)(R1 haystack, scope R2 needle)</source>
          <target state="translated">R1 &lt;strong id=&quot;find&quot;&gt;查找&lt;/strong&gt;（别名pred =&amp;ldquo; a == b&amp;rdquo;，R1，R2）（R1干草堆，范围R2针）</target>
        </trans-unit>
        <trans-unit id="416e9ded6d684411bfae7ab98068a6cf65ed7a00" translate="yes" xml:space="preserve">
          <source>R2 &lt;code&gt;base&lt;/code&gt;</source>
          <target state="translated">R2 &lt;code&gt;base&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d762f078c8aae67290247417557af653d4c9d42" translate="yes" xml:space="preserve">
          <source>R2 &lt;code&gt;buffer&lt;/code&gt;</source>
          <target state="translated">R2 &lt;code&gt;buffer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e17c192b2f05c757416a29ee552d3ef90c36764" translate="yes" xml:space="preserve">
          <source>R2 &lt;code&gt;needle&lt;/code&gt;</source>
          <target state="translated">R2 &lt;code&gt;needle&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d8a873ced34d741501067e5dbac4f4230c5409e3" translate="yes" xml:space="preserve">
          <source>R2 &lt;code&gt;outputRange&lt;/code&gt;</source>
          <target state="translated">R2 &lt;code&gt;outputRange&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd423d90d919393604a7c9af9f9e726e3ee924bf" translate="yes" xml:space="preserve">
          <source>R2 &lt;code&gt;r2&lt;/code&gt;</source>
          <target state="translated">R2 &lt;code&gt;r2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="712752c9f8be3668be2612d41bc3fc1045f791e0" translate="yes" xml:space="preserve">
          <source>R2 &lt;code&gt;range2&lt;/code&gt;</source>
          <target state="translated">R2 &lt;code&gt;range2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="10ae534e9e912c0a565bb612503cd04d4b6c3d8e" translate="yes" xml:space="preserve">
          <source>R2 &lt;code&gt;range&lt;/code&gt;</source>
          <target state="translated">R2 &lt;code&gt;range&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="33874d4fed4fab1462ae102319663b9a069aac22" translate="yes" xml:space="preserve">
          <source>R2 &lt;code&gt;to&lt;/code&gt;</source>
          <target state="translated">R2 &lt;code&gt;to&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c90742e8cb6203dd2bfb9d9c4ee46c6e76e62bea" translate="yes" xml:space="preserve">
          <source>R2 &lt;code&gt;withThis&lt;/code&gt;</source>
          <target state="translated">R2与 &lt;code&gt;withThis&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="78316945c53052fc58821336460ed4634e4ff00a" translate="yes" xml:space="preserve">
          <source>RAII (yes, it can work without exceptions)</source>
          <target state="translated">RAII(是的,它可以毫无例外地工作)</target>
        </trans-unit>
        <trans-unit id="09dca383176e1e45e99b3ee60b7d74333cc1901f" translate="yes" xml:space="preserve">
          <source>RCIAllocator &lt;strong id=&quot;allocatorObject&quot;&gt;allocatorObject&lt;/strong&gt;(A)(A* pa);</source>
          <target state="translated">RCIAllocator &lt;strong id=&quot;allocatorObject&quot;&gt;allocatorObject&lt;/strong&gt;（A）（A * pa）;</target>
        </trans-unit>
        <trans-unit id="91d7fa94c935a86a5398825578e63ee422be5ec3" translate="yes" xml:space="preserve">
          <source>RCIAllocator &lt;strong id=&quot;allocatorObject&quot;&gt;allocatorObject&lt;/strong&gt;(A)(auto ref A a)</source>
          <target state="translated">RCIAllocator &lt;strong id=&quot;allocatorObject&quot;&gt;allocatorObject&lt;/strong&gt;（A）（自动引用A a）</target>
        </trans-unit>
        <trans-unit id="7fcf7b01d91c0309ab3dab25512ada436e2044db" translate="yes" xml:space="preserve">
          <source>RCISharedAllocator &lt;strong id=&quot;sharedAllocatorObject&quot;&gt;sharedAllocatorObject&lt;/strong&gt;(A)(A* pa);</source>
          <target state="translated">RCISharedAllocator &lt;strong id=&quot;sharedAllocatorObject&quot;&gt;sharedAllocatorObject&lt;/strong&gt;（A）（A * pa）;</target>
        </trans-unit>
        <trans-unit id="9a0b08a17aafe0f3eeef32e8158e597e5049b0db" translate="yes" xml:space="preserve">
          <source>REM is the value of x - y * n, where n is the integer nearest the exact value of x / y. If |n - x / y| == 0.5, n is even. If the result is zero, it has the same sign as x. Otherwise, the sign of the result is the sign of x / y. Precision mode has no effect on the remainder functions.</source>
          <target state="translated">REM 是 x-y*n 的值,其中 n 是最接近 x/y 的精确值的整数,如果 |n-x/y| ==0.5,n 是偶数。如果结果为零,它的符号与x相同,否则,结果的符号就是x/y的符号。精确模式对余数函数没有影响。</target>
        </trans-unit>
        <trans-unit id="8c1185861af34828e57540e154679254cc1de862" translate="yes" xml:space="preserve">
          <source>RET &lt;strong id=&quot;retStyle&quot;&gt;retStyle&lt;/strong&gt;(TypeFunction tf, bool needsThis);</source>
          <target state="translated">RET &lt;strong id=&quot;retStyle&quot;&gt;retStyle&lt;/strong&gt;（TypeFunction tf，bool needsThis）;</target>
        </trans-unit>
        <trans-unit id="d19cf5985fafdd0a13c43f47452c23390522b7bc" translate="yes" xml:space="preserve">
          <source>RET.stack if return value from function is on the stack, RET.regs otherwise</source>
          <target state="translated">RET.stack,如果函数的返回值在堆栈上,RET.regs,否则。</target>
        </trans-unit>
        <trans-unit id="f3ae8b4785072e6df524d9714369c48076e4136a" translate="yes" xml:space="preserve">
          <source>RF &lt;code&gt;from&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;from&lt;/code&gt; 射频</target>
        </trans-unit>
        <trans-unit id="cf48f3d5bf7ea08ce5e6f45d9f362f9581e8b3b2" translate="yes" xml:space="preserve">
          <source>RFC 3986</source>
          <target state="translated">RFC 3986</target>
        </trans-unit>
        <trans-unit id="49e1bc88b1068da52ec405c6f119b166edb798fc" translate="yes" xml:space="preserve">
          <source>RFC 4122</source>
          <target state="translated">RFC 4122</target>
        </trans-unit>
        <trans-unit id="bc2b02e103b8e9f27fd35f47002cfdd117ae54d6" translate="yes" xml:space="preserve">
          <source>RFC 4122 defines different UUID versions. The version shows how a UUID was generated, e.g. a version 4 UUID was generated from a random number, a version 3 UUID from an MD5 hash of a name.</source>
          <target state="translated">RFC 4122定义了不同的UUID版本。版本显示了UUID是如何产生的,例如,版本4的UUID是由一个随机数产生的,版本3的UUID是由一个名字的MD5哈希产生的。</target>
        </trans-unit>
        <trans-unit id="5bd1d852604ecbde96eb1630eca7b030029c114a" translate="yes" xml:space="preserve">
          <source>RFC 4122 defines different UUID versions. The version shows how a UUID was generated, e.g. a version 4 UUID was generated from a random number, a version 3 UUID from an MD5 hash of a name. Returns the version used by this UUID.</source>
          <target state="translated">RFC 4122定义了不同的UUID版本。版本显示了UUID是如何产生的,例如,版本4的UUID是由一个随机数产生的,版本3的UUID是由一个名字的MD5哈希产生的。返回该UUID使用的版本。</target>
        </trans-unit>
        <trans-unit id="573781f662bff5ee3bf9c4d12104558f4082fb6a" translate="yes" xml:space="preserve">
          <source>RFC 4122 defines different internal data layouts for UUIDs. Returns the format used by this UUID.</source>
          <target state="translated">RFC 4122定义了UUID的不同内部数据布局。返回该UUID使用的格式。</target>
        </trans-unit>
        <trans-unit id="2a95bd082af00e19a4610e5ef939415c5ce11021" translate="yes" xml:space="preserve">
          <source>RFC 4122 defines different internal data layouts for UUIDs. These are the UUID formats supported by this module. It's possible to read, compare and use all these Variants, but UUIDs generated by this module will always be in rfc4122 format.</source>
          <target state="translated">RFC 4122定义了UUID的不同内部数据布局。这些是本模块支持的UUID格式。可以读取、比较和使用所有这些Variants,但本模块生成的UUID将始终是rfc4122格式。</target>
        </trans-unit>
        <trans-unit id="0cc5b6f4e8fb3030bdcc57b4e95bb25566697f85" translate="yes" xml:space="preserve">
          <source>RFC 4122 isn't very clear on how UUIDs should be generated from names. It is possible that different implementations return different UUIDs for the same input, so be warned. The implementation for UTF-8 strings and byte arrays used by &lt;code&gt;std.uuid&lt;/code&gt; is compatible with Boost's implementation. &lt;code&gt;std.uuid&lt;/code&gt; guarantees that the same input to this function will generate the same output at any time, on any system (this especially means endianness doesn't matter).</source>
          <target state="translated">RFC 4122不清楚应如何从名称生成UUID。可能会有不同的实现为同一输入返回不同的UUID的情况，因此请注意。 &lt;code&gt;std.uuid&lt;/code&gt; 使用的UTF-8字符串和字节数组的实现与Boost的实现兼容。 &lt;code&gt;std.uuid&lt;/code&gt; 保证此函数的相同输入将在任何系统上随时生成相同的输出（这尤其意味着字节顺序无关紧要）。</target>
        </trans-unit>
        <trans-unit id="2c7a893b503cfc38ba16ceb5692dcd724ac88416" translate="yes" xml:space="preserve">
          <source>RFC 4122 recommends to use Version 5 UUIDs (SHA-1) instead of Version 3 UUIDs (MD5) for new applications.</source>
          <target state="translated">RFC 4122建议在新的应用中使用第5版UUID(SHA-1)代替第3版UUID(MD5)。</target>
        </trans-unit>
        <trans-unit id="1a2e2c899753e0a3c51ae9565a6de46bc63deb6f" translate="yes" xml:space="preserve">
          <source>RFC 4648 - The Base16, Base32, and Base64 Data Encodings</source>
          <target state="translated">RFC 4648-Base16、Base32和Base64数据编码。</target>
        </trans-unit>
        <trans-unit id="aa203fcac8070f03e3861b552ee96fa7f237bae2" translate="yes" xml:space="preserve">
          <source>RFC 5321</source>
          <target state="translated">RFC 5321</target>
        </trans-unit>
        <trans-unit id="17c58504badf8c1787c4ac4f95c466fc696f2e50" translate="yes" xml:space="preserve">
          <source>RFC 5322</source>
          <target state="translated">RFC 5322</target>
        </trans-unit>
        <trans-unit id="735daace003912b5fecc445075fdfb455d272749" translate="yes" xml:space="preserve">
          <source>RFC 822 was the original spec (hence the function's name), whereas RFC 5322 is the current spec.</source>
          <target state="translated">RFC 822是最初的规范(因此该函数的名称),而RFC 5322是当前的规范。</target>
        </trans-unit>
        <trans-unit id="34df16ec4e939a336be88d7c573d53bfe4242745" translate="yes" xml:space="preserve">
          <source>RFC2616</source>
          <target state="translated">RFC2616</target>
        </trans-unit>
        <trans-unit id="3b6ff39841eb9f66194b85cd2a429c407a8477ca" translate="yes" xml:space="preserve">
          <source>RFC2616 Section 14.25</source>
          <target state="translated">RFC2616 第14.25节</target>
        </trans-unit>
        <trans-unit id="bb23083cf84c9e20bfaaa1a7cafd26ba2c9a83c9" translate="yes" xml:space="preserve">
          <source>RFC2821</source>
          <target state="translated">RFC2821</target>
        </trans-unit>
        <trans-unit id="42ae0d93633168fee4fb705fef08465852bd57ff" translate="yes" xml:space="preserve">
          <source>RFC2822</source>
          <target state="translated">RFC2822</target>
        </trans-unit>
        <trans-unit id="3a9c7d888d2bed3deb431ff0cc9d29e832520d5d" translate="yes" xml:space="preserve">
          <source>RFC959</source>
          <target state="translated">RFC959</target>
        </trans-unit>
        <trans-unit id="2266413cb2b4c8845ed65b52f018ce1dc3aa89f6" translate="yes" xml:space="preserve">
          <source>RL &lt;code&gt;link&lt;/code&gt;</source>
          <target state="translated">RL &lt;code&gt;link&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a27ea486b7c697c55d2af33caf990409623e9366" translate="yes" xml:space="preserve">
          <source>RNG &lt;code&gt;randomGen&lt;/code&gt;</source>
          <target state="translated">RNG &lt;code&gt;randomGen&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="938b07b987d5d15811806534d8bfeeabeb06c72a" translate="yes" xml:space="preserve">
          <source>RO &lt;code&gt;original&lt;/code&gt;</source>
          <target state="translated">RO &lt;code&gt;original&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="39d1aa776b7a255f3d807b5b8897d1bed0511d44" translate="yes" xml:space="preserve">
          <source>RR &lt;code&gt;otherRanges&lt;/code&gt;</source>
          <target state="translated">RR &lt;code&gt;otherRanges&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a850436297b1d82629832bb29adfcf30f1fc1cd8" translate="yes" xml:space="preserve">
          <source>RR &lt;code&gt;ranges&lt;/code&gt;</source>
          <target state="translated">反射率 &lt;code&gt;ranges&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="16de3e81671885dc0f6c6bce4baf66346a366ed5" translate="yes" xml:space="preserve">
          <source>RSA Data Security, Inc. MD5 Message-Digest Algorithm</source>
          <target state="translated">RSA数据安全公司MD5信息摘要算法。</target>
        </trans-unit>
        <trans-unit id="b8f6115b2e975b7d1e3bf5fac034e18302031d6e" translate="yes" xml:space="preserve">
          <source>RT &lt;code&gt;to&lt;/code&gt;</source>
          <target state="translated">RT &lt;code&gt;to&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd5f8a5117f61c39a5204172f35f9cae1983e553" translate="yes" xml:space="preserve">
          <source>RTSP request method (OPTIONS, SETUP, PLAY, etc...)</source>
          <target state="translated">RTSP请求方式(OPTIONS、SETUP、PLAY等)。</target>
        </trans-unit>
        <trans-unit id="371bf1c52e812b6b49ae51cbb46d07593674f96f" translate="yes" xml:space="preserve">
          <source>Radical</source>
          <target state="translated">Radical</target>
        </trans-unit>
        <trans-unit id="204a8eb40a4bd8af4678da109de683c6a1f65eb0" translate="yes" xml:space="preserve">
          <source>Rainer Schuetze</source>
          <target state="translated">Rainer Schuetze</target>
        </trans-unit>
        <trans-unit id="d019a6997366fd64d4e2e18529510a7f45eb8edb" translate="yes" xml:space="preserve">
          <source>Raises an error if a version identifier is reserved.</source>
          <target state="translated">如果版本标识符被保留,则会引发错误。</target>
        </trans-unit>
        <trans-unit id="4dc5d6b0d4a5b8f3e3b4cbc848f0214ae661809b" translate="yes" xml:space="preserve">
          <source>Random access range with slicing and everything</source>
          <target state="translated">随机访问范围与切片和一切</target>
        </trans-unit>
        <trans-unit id="daf87088c3240e4a9a9584a1049d3548474219fc" translate="yes" xml:space="preserve">
          <source>Random number generators for internal usage.</source>
          <target state="translated">内部使用的随机数生成器。</target>
        </trans-unit>
        <trans-unit id="a894f9ef66fee642a62aec7c8de8b1d7ab1bb2ee" translate="yes" xml:space="preserve">
          <source>Random variate drawn from the index values [0, ... &lt;code&gt;proportions.length&lt;/code&gt; - 1], with the probability of getting an individual index value &lt;code&gt;i&lt;/code&gt; being proportional to &lt;code&gt;proportions[i]&lt;/code&gt;.</source>
          <target state="translated">从索引值[0，... &lt;code&gt;proportions.length&lt;/code&gt; -1]中抽取随机变量，获得单个索引值 &lt;code&gt;i&lt;/code&gt; 的比例与 &lt;code&gt;proportions[i]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fe974058f76f0bd197fe8cd84da0586782e2e9ca" translate="yes" xml:space="preserve">
          <source>Random variate drawn from the uniform distribution across all possible values of the integral, character or enum type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">从整数，字符或枚举类型 &lt;code&gt;T&lt;/code&gt; 的所有可能值的均匀分布得出的随机变量。</target>
        </trans-unit>
        <trans-unit id="9c0ab3c4414e6a52d0de45047951538395311a24" translate="yes" xml:space="preserve">
          <source>Random-access primitive. It is offered if &lt;code&gt; isRandomAccessRange!RangeOfRanges &amp;amp;&amp;amp; (opt == TransverseOptions.assumeNotJagged || opt == TransverseOptions.enforceNotJagged)&lt;/code&gt;.</source>
          <target state="translated">随机访问原语。如果 &lt;code&gt; isRandomAccessRange!RangeOfRanges &amp;amp;&amp;amp; (opt == TransverseOptions.assumeNotJagged || opt == TransverseOptions.enforceNotJagged)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5f170f45a67325667fa9e118360d9450236d377" translate="yes" xml:space="preserve">
          <source>Random-access range over Grapheme's &lt;a href=&quot;#Character&quot;&gt;characters&lt;/a&gt;.</source>
          <target state="translated">Grapheme &lt;a href=&quot;#Character&quot;&gt;字符的&lt;/a&gt;随机访问范围。</target>
        </trans-unit>
        <trans-unit id="05605c8f58501d21613f455df459e82081c3cdc7" translate="yes" xml:space="preserve">
          <source>RandomAccessFinite!E &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;(size_t, size_t);</source>
          <target state="translated">RandomAccessFinite！E &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;（size_t，size_t）;</target>
        </trans-unit>
        <trans-unit id="2558f9c390a433acd2a5f9d5a6cda985cdc6b00a" translate="yes" xml:space="preserve">
          <source>RandomAccessRange &lt;code&gt;haystack&lt;/code&gt;</source>
          <target state="translated">RandomAccessRange &lt;code&gt;haystack&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="36786d6240b8deeb5c7ce659046f8b88c692e5ce" translate="yes" xml:space="preserve">
          <source>RandomAccessRange &lt;strong id=&quot;find&quot;&gt;find&lt;/strong&gt;(RandomAccessRange, alias pred, InputRange)(RandomAccessRange haystack, scope BoyerMooreFinder!(pred, InputRange) needle);</source>
          <target state="translated">RandomAccessRange &lt;strong id=&quot;find&quot;&gt;查找&lt;/strong&gt;（RandomAccessRange，别名pred，InputRange）（RandomAccessRange干草堆，作用域BoyerMooreFinder！（pred，InputRange）针）;</target>
        </trans-unit>
        <trans-unit id="222ef9f907f129a56ec254183f3ff4dc6d45278d" translate="yes" xml:space="preserve">
          <source>RandomGen &lt;code&gt;gen&lt;/code&gt;</source>
          <target state="translated">随机 &lt;code&gt;gen&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b77d02793d6a139d9a2b3d2d97494bc2270ca425" translate="yes" xml:space="preserve">
          <source>RandomGen &lt;code&gt;urng&lt;/code&gt;</source>
          <target state="translated">随机 &lt;code&gt;urng&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a16c5bbe4bf996740f257aa1e81bd57e4c52c8dd" translate="yes" xml:space="preserve">
          <source>Range</source>
          <target state="translated">Range</target>
        </trans-unit>
        <trans-unit id="bdc00a10e731625034468db23e692559a5ae1f69" translate="yes" xml:space="preserve">
          <source>Range &lt;code&gt;doesThisEnd&lt;/code&gt;</source>
          <target state="translated">范围 &lt;code&gt;doesThisEnd&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6459a8a608d380da143d17584f95660d532fc6d" translate="yes" xml:space="preserve">
          <source>Range &lt;code&gt;doesThisStart&lt;/code&gt;</source>
          <target state="translated">范围 &lt;code&gt;doesThisStart&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1ae8a55dd9bb3b7d6c3722fe1726f400b996eba3" translate="yes" xml:space="preserve">
          <source>Range &lt;code&gt;filename&lt;/code&gt;</source>
          <target state="translated">范围 &lt;code&gt;filename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b893bf3e72d1de5c2698b1bf1165ebf7ba8ea021" translate="yes" xml:space="preserve">
          <source>Range &lt;code&gt;haystack&lt;/code&gt;</source>
          <target state="translated">范围 &lt;code&gt;haystack&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fab70957ac55da835b218bcbb7da119da5da0694" translate="yes" xml:space="preserve">
          <source>Range &lt;code&gt;input&lt;/code&gt;</source>
          <target state="translated">范围 &lt;code&gt;input&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b449f4abbe52b829a268a0611f72dbd66bf08520" translate="yes" xml:space="preserve">
          <source>Range &lt;code&gt;items&lt;/code&gt;</source>
          <target state="translated">范围 &lt;code&gt;items&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3a7401fad972256451b5418dea7bd2245fc501ba" translate="yes" xml:space="preserve">
          <source>Range &lt;code&gt;magnitude&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc112cfba33c9e26d641dc22c4809b4b608180e3" translate="yes" xml:space="preserve">
          <source>Range &lt;code&gt;needle&lt;/code&gt;</source>
          <target state="translated">范围 &lt;code&gt;needle&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a1e47737bbac3975754a3eca700ddd881c3a70e7" translate="yes" xml:space="preserve">
          <source>Range &lt;code&gt;path&lt;/code&gt;</source>
          <target state="translated">范围 &lt;code&gt;path&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="765b7acfeb236a5d946cff8513b18b77080f38e3" translate="yes" xml:space="preserve">
          <source>Range &lt;code&gt;r&lt;/code&gt;</source>
          <target state="translated">范围 &lt;code&gt;r&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b8cb3e3f4922e3ac872f84f7fbe039683f1fc007" translate="yes" xml:space="preserve">
          <source>Range &lt;code&gt;range&lt;/code&gt;</source>
          <target state="translated">范围 &lt;code&gt;range&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7730cf02532e3c48c2cc95f48183a04b086e350b" translate="yes" xml:space="preserve">
          <source>Range &lt;code&gt;s&lt;/code&gt;</source>
          <target state="translated">范围 &lt;code&gt;s&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c59c250a7f0c3582bafe2d7cc9507cd1bfb2b4c" translate="yes" xml:space="preserve">
          <source>Range &lt;code&gt;segments&lt;/code&gt;</source>
          <target state="translated">范围 &lt;code&gt;segments&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98caacb48def81b9a800ce6e242ac737eae9b7e6" translate="yes" xml:space="preserve">
          <source>Range &lt;code&gt;source&lt;/code&gt;</source>
          <target state="translated">范围 &lt;code&gt;source&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7b223975eedc441a181b2d83e0a620e372555573" translate="yes" xml:space="preserve">
          <source>Range &lt;code&gt;str&lt;/code&gt;</source>
          <target state="translated">范围 &lt;code&gt;str&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="942c1c1d42b71f9968f58bccd5c762229b58a106" translate="yes" xml:space="preserve">
          <source>Range &lt;code&gt;stuff&lt;/code&gt;</source>
          <target state="translated">范围的 &lt;code&gt;stuff&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="958dc324f88870b31b40c243dd1ecf447384d41c" translate="yes" xml:space="preserve">
          <source>Range &lt;code&gt;tgt&lt;/code&gt;</source>
          <target state="translated">范围 &lt;code&gt;tgt&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd6d020deb1cc093e6b3d4f3f4c6acba70a62219" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;chomp&quot;&gt;chomp&lt;/strong&gt;(Range)(Range str)</source>
          <target state="translated">范围&lt;strong id=&quot;chomp&quot;&gt;格格&lt;/strong&gt;（范围）（范围STR）</target>
        </trans-unit>
        <trans-unit id="958a969c8d619dd2e21dd942e24dc74bfc9137eb" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;chomp&quot;&gt;chomp&lt;/strong&gt;(Range, C2)(Range str, const(C2)[] delimiter)</source>
          <target state="translated">范围&lt;strong id=&quot;chomp&quot;&gt;标记&lt;/strong&gt;（范围C2）（范围str，const（C2）[]分隔符）</target>
        </trans-unit>
        <trans-unit id="387b549e3439c27c5968eadec0e4210d080a7d80" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;chompPrefix&quot;&gt;chompPrefix&lt;/strong&gt;(Range, C2)(Range str, const(C2)[] delimiter)</source>
          <target state="translated">范围&lt;strong id=&quot;chompPrefix&quot;&gt;chompPrefix&lt;/strong&gt;（范围C2）（范围str，const（C2）[]分隔符）</target>
        </trans-unit>
        <trans-unit id="7d750d9399cda1002cbc697092da98fe61feb3fa" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;chop&quot;&gt;chop&lt;/strong&gt;(Range)(Range str)</source>
          <target state="translated">范围&lt;strong id=&quot;chop&quot;&gt;剁&lt;/strong&gt;（Range）（Range str）</target>
        </trans-unit>
        <trans-unit id="5374aa394be302873be7b9e5f298b412424fd0c2" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;findAdjacent&quot;&gt;findAdjacent&lt;/strong&gt;(alias pred = &quot;a == b&quot;, Range)(Range r)</source>
          <target state="translated">范围&lt;strong id=&quot;findAdjacent&quot;&gt;查找相邻&lt;/strong&gt;（别名pred =&amp;ldquo; a == b&amp;rdquo;，范围）（范围r）</target>
        </trans-unit>
        <trans-unit id="c61e9a986955ab73c7c51b7c6290309881a726d0" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;linearRemove&quot;&gt;linearRemove&lt;/strong&gt;(Range r);</source>
          <target state="translated">范围&lt;strong id=&quot;linearRemove&quot;&gt;linearRemove&lt;/strong&gt;（范围r）;</target>
        </trans-unit>
        <trans-unit id="8a4737705e7cd61fe5be23dbe69e47363f785ea9" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;linearRemove&quot;&gt;linearRemove&lt;/strong&gt;(Take!Range r);</source>
          <target state="translated">范围&lt;strong id=&quot;linearRemove&quot;&gt;linearRemove&lt;/strong&gt;（Take！Range r）;</target>
        </trans-unit>
        <trans-unit id="483463cf9312055d259a327156d9725d80165b39" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;lowerBound&quot;&gt;lowerBound&lt;/strong&gt;(Elem e);</source>
          <target state="translated">范围&lt;strong id=&quot;lowerBound&quot;&gt;LowerBound&lt;/strong&gt;（Elem e）;</target>
        </trans-unit>
        <trans-unit id="daf2b8c4e51410249a2cddb780dde47dfd56c9f2" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;maxPos&quot;&gt;maxPos&lt;/strong&gt;(alias pred = &quot;a &amp;lt; b&quot;, Range)(Range range)</source>
          <target state="translated">范围&lt;strong id=&quot;maxPos&quot;&gt;maxPos&lt;/strong&gt;（别名pred =&amp;ldquo; a &amp;lt;b&amp;rdquo;，范围）（范围）</target>
        </trans-unit>
        <trans-unit id="8d001c4e9b0a367012727ac2d8a9eff83c387f7b" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;minPos&quot;&gt;minPos&lt;/strong&gt;(alias pred = &quot;a &amp;lt; b&quot;, Range)(Range range)</source>
          <target state="translated">范围&lt;strong id=&quot;minPos&quot;&gt;minPos&lt;/strong&gt;（别名pred =&amp;ldquo; a &amp;lt;b&amp;rdquo;，范围）（范围）</target>
        </trans-unit>
        <trans-unit id="d284bc77e731a0b9a6d12df2a5238c3a06464947" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;();</source>
          <target state="translated">范围&lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="bc2a5d0466c36ffd67337b24e664ae0f79c874ca" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;(size_t a, size_t b);</source>
          <target state="translated">范围&lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;（size_t a，size_t b）;</target>
        </trans-unit>
        <trans-unit id="c11b4e7b6b47c28df5004fd6ddf7a545a426ca49" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;(size_t i, size_t j);</source>
          <target state="translated">范围&lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;（size_t i，size_t j）;</target>
        </trans-unit>
        <trans-unit id="39f32596eb8aca6da2ab14245d948d6847ce050e" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;(size_t low, size_t high);</source>
          <target state="translated">范围&lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;（size_t低，size_t高）；</target>
        </trans-unit>
        <trans-unit id="d42de6f1841b39c620b9c8a2ea05d1f76c726764" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;partialShuffle&quot;&gt;partialShuffle&lt;/strong&gt;(Range)(Range r, in size_t n)</source>
          <target state="translated">范围&lt;strong id=&quot;partialShuffle&quot;&gt;partialShuffle&lt;/strong&gt;（范围）（范围r，在size_t n中）</target>
        </trans-unit>
        <trans-unit id="6903f88dabb579ebb843ddd5140458c35c9704e5" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;partialShuffle&quot;&gt;partialShuffle&lt;/strong&gt;(Range, RandomGen)(Range r, in size_t n, ref RandomGen gen)</source>
          <target state="translated">范围&lt;strong id=&quot;partialShuffle&quot;&gt;partialShuffle&lt;/strong&gt;（Range，RandomGen）（范围r，in size_t n，ref RandomGen gen）</target>
        </trans-unit>
        <trans-unit id="9142d2d0e717f4080c77ae59566752d24bd34d36" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;partition&quot;&gt;partition&lt;/strong&gt;(alias predicate, SwapStrategy ss = SwapStrategy.unstable, Range)(Range r)</source>
          <target state="translated">范围&lt;strong id=&quot;partition&quot;&gt;分区&lt;/strong&gt;（别名谓词，SwapStrategy ss = SwapStrategy.unstable，范围）（范围r）</target>
        </trans-unit>
        <trans-unit id="3bcc5c63d8cc77c95d8df1c024b2432266bd79b7" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;partition&quot;&gt;partition&lt;/strong&gt;(alias predicate, SwapStrategy ss, Range)(Range r)</source>
          <target state="translated">范围&lt;strong id=&quot;partition&quot;&gt;分区&lt;/strong&gt;（别名谓词，SwapStrategy SS，范围）（范围r）</target>
        </trans-unit>
        <trans-unit id="341436ba0e810d212a6a1812137bb20b5c206fc6" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;randomShuffle&quot;&gt;randomShuffle&lt;/strong&gt;(Range)(Range r)</source>
          <target state="translated">&lt;strong id=&quot;randomShuffle&quot;&gt;随机&lt;/strong&gt;范围&lt;strong id=&quot;randomShuffle&quot;&gt;随机&lt;/strong&gt;（范围）（范围r）</target>
        </trans-unit>
        <trans-unit id="9bfa4950aa7b637010c51a6ca464ea0c1b28b280" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;randomShuffle&quot;&gt;randomShuffle&lt;/strong&gt;(Range, RandomGen)(Range r, ref RandomGen gen)</source>
          <target state="translated">范围&lt;strong id=&quot;randomShuffle&quot;&gt;randomShuffle&lt;/strong&gt;（Range，RandomGen）（Range，ref RandomGen gen）</target>
        </trans-unit>
        <trans-unit id="be8785c63fd8f14c56f2f13abbae759e756c0a19" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;remove&quot;&gt;remove&lt;/strong&gt;(Range r);</source>
          <target state="translated">范围&lt;strong id=&quot;remove&quot;&gt;删除&lt;/strong&gt;（范围r）；</target>
        </trans-unit>
        <trans-unit id="e2981773ba184620c192e5177874cbcd5df9d535" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;remove&quot;&gt;remove&lt;/strong&gt;(SwapStrategy s = SwapStrategy.stable, Range, Offset...)(Range range, Offset offset)</source>
          <target state="translated">范围&lt;strong id=&quot;remove&quot;&gt;删除&lt;/strong&gt;（SwapStrategy s = SwapStrategy.stable，Range，Offset ...）（范围范围，Offset偏移量）</target>
        </trans-unit>
        <trans-unit id="f70143fb0f43c9d5f880ec91b1b8e94d2535149a" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;remove&quot;&gt;remove&lt;/strong&gt;(Take!Range r);</source>
          <target state="translated">范围&lt;strong id=&quot;remove&quot;&gt;删除&lt;/strong&gt;（Take！Range r）;</target>
        </trans-unit>
        <trans-unit id="dc8629ec9f5b7067218b999012871cedb67cee47" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;remove&quot;&gt;remove&lt;/strong&gt;(alias pred, SwapStrategy s = SwapStrategy.stable, Range)(Range range);</source>
          <target state="translated">范围&lt;strong id=&quot;remove&quot;&gt;删除&lt;/strong&gt;（别名pred，SwapStrategy s = SwapStrategy.stable，Range）（范围）;</target>
        </trans-unit>
        <trans-unit id="59fdc553edeb4d0d3d3ac64cb93ae52f0640a2d9" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;reverse&quot;&gt;reverse&lt;/strong&gt;(Range)(Range r)</source>
          <target state="translated">&lt;strong id=&quot;reverse&quot;&gt;反向&lt;/strong&gt;范围（Range）（Range r）</target>
        </trans-unit>
        <trans-unit id="1f67ade8615231c9e6f1eceec74eb881945beec1" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;strip&quot;&gt;strip&lt;/strong&gt;(Range, E)(Range range, E element)</source>
          <target state="translated">范围&lt;strong id=&quot;strip&quot;&gt;条&lt;/strong&gt;（范围，E）（范围，E元素）</target>
        </trans-unit>
        <trans-unit id="1fb46d0c90f5b292ffca7c031b1dc38906b51867" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;strip&quot;&gt;strip&lt;/strong&gt;(alias pred, Range)(Range range)</source>
          <target state="translated">范围&lt;strong id=&quot;strip&quot;&gt;条&lt;/strong&gt;（别名，范围）（范围）</target>
        </trans-unit>
        <trans-unit id="3614af376bd06ba88949586c27df5bf9080807f7" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;stripLeft&quot;&gt;stripLeft&lt;/strong&gt;(Range, E)(Range range, E element)</source>
          <target state="translated">范围条&lt;strong id=&quot;stripLeft&quot;&gt;左&lt;/strong&gt;（Range，E）（Range range，E element）</target>
        </trans-unit>
        <trans-unit id="6885e77726b545d7302e685cf148f4d98fbe84a1" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;stripLeft&quot;&gt;stripLeft&lt;/strong&gt;(alias pred, Range)(Range range)</source>
          <target state="translated">范围条&lt;strong id=&quot;stripLeft&quot;&gt;左&lt;/strong&gt;（别名pred，范围）（范围）</target>
        </trans-unit>
        <trans-unit id="ce33d5d4abc1be9b6b923d9319b04bb93b60e3b9" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;stripRight&quot;&gt;stripRight&lt;/strong&gt;(Range, E)(Range range, E element)</source>
          <target state="translated">范围条&lt;strong id=&quot;stripRight&quot;&gt;右&lt;/strong&gt;（范围E）（范围E）</target>
        </trans-unit>
        <trans-unit id="22cc986d97351e10d1dbeeba473b9aeec680758f" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;stripRight&quot;&gt;stripRight&lt;/strong&gt;(alias pred, Range)(Range range)</source>
          <target state="translated">范围条&lt;strong id=&quot;stripRight&quot;&gt;右&lt;/strong&gt;（别名pred，范围）（范围）</target>
        </trans-unit>
        <trans-unit id="8922aa2733c368de22e8bfd1b73084f8c48c862f" translate="yes" xml:space="preserve">
          <source>Range &lt;strong id=&quot;upperBound&quot;&gt;upperBound&lt;/strong&gt;(Elem e);</source>
          <target state="translated">范围&lt;strong id=&quot;upperBound&quot;&gt;upperBound&lt;/strong&gt;（Elem e）;</target>
        </trans-unit>
        <trans-unit id="4e07b5b6833aaedcc15663d77743676b9312f065" translate="yes" xml:space="preserve">
          <source>Range Y</source>
          <target state="translated">范围 Y</target>
        </trans-unit>
        <trans-unit id="f48019e5bf7ec363745690f4e315480b20a5136a" translate="yes" xml:space="preserve">
          <source>Range error?</source>
          <target state="translated">范围误差?</target>
        </trans-unit>
        <trans-unit id="7fe97179ce97a6e49548e8ed3307493377b319d0" translate="yes" xml:space="preserve">
          <source>Range for Lists.</source>
          <target state="translated">列表的范围。</target>
        </trans-unit>
        <trans-unit id="eba68d314890b6f6a70e36a43c74d5ce32405e46" translate="yes" xml:space="preserve">
          <source>Range for blocks.</source>
          <target state="translated">块的范围。</target>
        </trans-unit>
        <trans-unit id="c89a73bed4c8cbf35f6dcfd9a40f20e25db682af" translate="yes" xml:space="preserve">
          <source>Range from which the chunks will be selected</source>
          <target state="translated">选取分块的范围。</target>
        </trans-unit>
        <trans-unit id="817d0998dd4c5bb46a7e6021d86c9c99c245a844" translate="yes" xml:space="preserve">
          <source>Range from which the slide will be selected</source>
          <target state="translated">选择幻灯片的范围</target>
        </trans-unit>
        <trans-unit id="a0f235889bbcb32d2a6ce4f5c086ecc8aaff6b64" translate="yes" xml:space="preserve">
          <source>Range functions</source>
          <target state="translated">范围功能</target>
        </trans-unit>
        <trans-unit id="985230fe57670eee6d480371e5539885e9d2193e" translate="yes" xml:space="preserve">
          <source>Range interface.</source>
          <target state="translated">范围接口。</target>
        </trans-unit>
        <trans-unit id="581a55513996060c488e2dcd565e8b46f3a2b154" translate="yes" xml:space="preserve">
          <source>Range of all sliding windows with propagated bi-directionality, forwarding, random access, and slicing.</source>
          <target state="translated">传播双向性、转发、随机访问和分片的所有滑动窗口的范围。</target>
        </trans-unit>
        <trans-unit id="137cc21ae1fc638dcb51e74df73a2d56e1f9c67b" translate="yes" xml:space="preserve">
          <source>Range of chunks.</source>
          <target state="translated">块的范围。</target>
        </trans-unit>
        <trans-unit id="a7a76727b30bcd8da9b8a6edd30afc51c870bcb3" translate="yes" xml:space="preserve">
          <source>Range of ranges</source>
          <target state="translated">幅度范围</target>
        </trans-unit>
        <trans-unit id="5555dfd39b2edc98ced9f7334c9a6392f14cf52b" translate="yes" xml:space="preserve">
          <source>Range or string specifying the directory name</source>
          <target state="translated">指定目录名称的范围或字符串</target>
        </trans-unit>
        <trans-unit id="a1ddf1e045360a472de28705a5205e74f1573574" translate="yes" xml:space="preserve">
          <source>Range over bit set. Each element is the bit number that is set.</source>
          <target state="translated">比位设置的范围。每个元素是被设置的位数。</target>
        </trans-unit>
        <trans-unit id="77e67487e9cb8bf2a5778f171bf816c7161b5db1" translate="yes" xml:space="preserve">
          <source>Range primitives</source>
          <target state="translated">范围基元</target>
        </trans-unit>
        <trans-unit id="3c31ca8b15dc9b218b4e66fc66e0b896406fabf3" translate="yes" xml:space="preserve">
          <source>Range primitives are carried over to the returned range if all of the ranges provide them</source>
          <target state="translated">如果所有的范围都提供了范围基元,那么范围基元就会被带到返回的范围中。</target>
        </trans-unit>
        <trans-unit id="b16f736ad7fe0991fb122f8c903cf0a4cbbbe6fb" translate="yes" xml:space="preserve">
          <source>Range primitives for worker-local storage. The purpose of this is to access results produced by each worker thread from a single thread once you are no longer using the worker-local storage from multiple threads. Do not use this struct in the parallel portion of your algorithm.</source>
          <target state="translated">工人本地存储的范围基元。这样做的目的是,一旦你不再使用多个线程的worker-local存储,就可以从单个线程访问每个worker线程产生的结果。不要在算法的并行部分使用这个结构。</target>
        </trans-unit>
        <trans-unit id="31dcddbb1c2c353cd8249a666fee5a2f0432234f" translate="yes" xml:space="preserve">
          <source>Range primitives may throw &lt;code&gt;StdioException&lt;/code&gt; on I/O error.</source>
          <target state="translated">范围原语可能在I / O错误时引发 &lt;code&gt;StdioException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5386fccbcb76f4112f36ee49b1376281ebad0cc7" translate="yes" xml:space="preserve">
          <source>Range primitives.</source>
          <target state="translated">范围基元。</target>
        </trans-unit>
        <trans-unit id="a23d722689f8ff7700f014fabb7100a7edace801" translate="yes" xml:space="preserve">
          <source>Range r</source>
          <target state="translated">范围r</target>
        </trans-unit>
        <trans-unit id="a188ed7de729e7ba08e4510d12d5fbc93676c14c" translate="yes" xml:space="preserve">
          <source>Range sampling</source>
          <target state="translated">范围取样</target>
        </trans-unit>
        <trans-unit id="bdb3b810511da6b4ebbfc639e29a1653d7944da1" translate="yes" xml:space="preserve">
          <source>Range that iterates the indices of the set bits in &lt;code&gt;value&lt;/code&gt;. Index 0 corresponds to the least significant bit. For signed integers, the highest index corresponds to the sign bit.</source>
          <target state="translated">迭代 &lt;code&gt;value&lt;/code&gt; 中设置位的索引的范围。索引0对应于最低有效位。对于有符号整数，最高索引对应于符号位。</target>
        </trans-unit>
        <trans-unit id="2cd92460ddb1556aa3ff68a514d0c6002ee43410" translate="yes" xml:space="preserve">
          <source>Range to get, specified as an ASCII string.</source>
          <target state="translated">要获取的范围,指定为ASCII字符串。</target>
        </trans-unit>
        <trans-unit id="707606956aa2aad968b9a1b08feec62ccba19236" translate="yes" xml:space="preserve">
          <source>Range whose elements consist of a randomly selected subset of the elements of &lt;code&gt;r&lt;/code&gt;, in the same order as these elements appear in &lt;code&gt;r&lt;/code&gt; itself. Will be a forward range if both &lt;code&gt;r&lt;/code&gt; and &lt;code&gt;rng&lt;/code&gt; are forward ranges, an input range otherwise.  &lt;code&gt;RandomSample&lt;/code&gt; implements Jeffrey Scott Vitter's Algorithm D (see Vitter &lt;a href=&quot;http://dx.doi.org/10.1145/358105.893&quot;&gt;1984&lt;/a&gt;, &lt;a href=&quot;http://dx.doi.org/10.1145/23002.23003&quot;&gt;1987&lt;/a&gt;), which selects a sample of size &lt;code&gt;n&lt;/code&gt; in O(n) steps and requiring O(n) random variates, regardless of the size of the data being sampled. The exception to this is if traversing k elements on the input range is itself an O(k) operation (e.g. when sampling lines from an input file), in which case the sampling calculation will inevitably be of O(total).  RandomSample will throw an exception if &lt;code&gt;total&lt;/code&gt; is verifiably less than the total number of elements available in the input, or if &lt;code&gt;n &amp;gt; total&lt;/code&gt;.  If no random number generator is passed to &lt;code&gt;randomSample&lt;/code&gt;, the thread-global RNG rndGen will be used internally.</source>
          <target state="translated">范围，其元素由 &lt;code&gt;r&lt;/code&gt; 元素的随机选择子集组成，其顺序与这些元素出现在 &lt;code&gt;r&lt;/code&gt; 本身中的顺序相同。如果 &lt;code&gt;r&lt;/code&gt; 和 &lt;code&gt;rng&lt;/code&gt; 均为正向范围，则将为正向范围，否则为输入范围。 &lt;code&gt;RandomSample&lt;/code&gt; 器具杰弗里斯科特维特的算法d（参见维特&lt;a href=&quot;http://dx.doi.org/10.1145/358105.893&quot;&gt;1984&lt;/a&gt;，&lt;a href=&quot;http://dx.doi.org/10.1145/23002.23003&quot;&gt;1987&lt;/a&gt;），它选择大小的样品 &lt;code&gt;n&lt;/code&gt; 以O（n）个步长为单位，并且需要O（n）个随机变量，而不考虑采样数据的大小。例外情况是，如果在输入范围内遍历k个元素本身是O（k）操作（例如，当从输入文件中采样行时），在这种情况下，采样计算将不可避免地为O（total）。如果 &lt;code&gt;total&lt;/code&gt; 确实小于输入中可用元素的总数，或者 &lt;code&gt;n &amp;gt; total&lt;/code&gt; ，则RandomSample将引发异常。如果没有随机数生成器传递给 &lt;code&gt;randomSample&lt;/code&gt; ，则将在内部使用线程全局RNG rndGen。</target>
        </trans-unit>
        <trans-unit id="da898b85342ec8bed1bcedc57734a9570d8506e9" translate="yes" xml:space="preserve">
          <source>Range whose elements consist of the elements of &lt;code&gt;r&lt;/code&gt;, in random order. Will be a forward range if both &lt;code&gt;r&lt;/code&gt; and &lt;code&gt;rng&lt;/code&gt; are forward ranges, an &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; otherwise.</source>
          <target state="translated">范围，其元素由 &lt;code&gt;r&lt;/code&gt; 的元素组成，以随机顺序。如果 &lt;code&gt;r&lt;/code&gt; 和 &lt;code&gt;rng&lt;/code&gt; 均为正向范围，则将为正向范围，否则为&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e28d7706622cb0ade852ece3b071a320897761a" translate="yes" xml:space="preserve">
          <source>Range with &lt;code&gt;path&lt;/code&gt;'s extension (if any) replaced with &lt;code&gt;ext&lt;/code&gt;. The element encoding type of the returned range will be the same as &lt;code&gt;path&lt;/code&gt;'s.</source>
          <target state="translated">具有 &lt;code&gt;path&lt;/code&gt; 扩展名的范围（如果有）被 &lt;code&gt;ext&lt;/code&gt; 取代。返回范围的元素编码类型将与 &lt;code&gt;path&lt;/code&gt; 的相同。</target>
        </trans-unit>
        <trans-unit id="116ac105826a244bad9f22ac660f735b392e1f85" translate="yes" xml:space="preserve">
          <source>Range-checking integral arithmetic primitives.</source>
          <target state="translated">范围检查积分算术基元。</target>
        </trans-unit>
        <trans-unit id="63b0dce7a81bbf27d07ec74cffd13b62bccbd329" translate="yes" xml:space="preserve">
          <source>Range-generating function.</source>
          <target state="translated">范围生成功能。</target>
        </trans-unit>
        <trans-unit id="776b24fc4d7da279e8b47ad2f5463b819a8f755a" translate="yes" xml:space="preserve">
          <source>Range1 &lt;code&gt;filename1&lt;/code&gt;</source>
          <target state="translated">范围1 &lt;code&gt;filename1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="47df8501644cae0437fd342841ac8295a7fd91e1" translate="yes" xml:space="preserve">
          <source>Range1 &lt;code&gt;r1&lt;/code&gt;</source>
          <target state="translated">范围 &lt;code&gt;r1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0980e211f154684c7c46a51fe24ce8151e9f12d8" translate="yes" xml:space="preserve">
          <source>Range1 &lt;code&gt;s&lt;/code&gt;</source>
          <target state="translated">范围1 &lt;code&gt;s&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="530d96382074b2a96b8d2dbeb5513c5515282c2c" translate="yes" xml:space="preserve">
          <source>Range2 &lt;code&gt;filename2&lt;/code&gt;</source>
          <target state="translated">范围2 &lt;code&gt;filename2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="146251698eace2c34854524a27ab059a70e0d910" translate="yes" xml:space="preserve">
          <source>Range2 &lt;code&gt;r2&lt;/code&gt;</source>
          <target state="translated">范围 &lt;code&gt;r2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71efb0fda574fd881c8571530c85ca491f3c5777" translate="yes" xml:space="preserve">
          <source>Range2 &lt;code&gt;t&lt;/code&gt;</source>
          <target state="translated">范围2 &lt;code&gt;t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b36f6cc426c7e4986d8d9dc005e3e53da9e0cf17" translate="yes" xml:space="preserve">
          <source>RangeElementType &lt;code&gt;seed&lt;/code&gt;</source>
          <target state="translated">RangeElementType &lt;code&gt;seed&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ee35853bdc357f54f009f3a254a4c03179806f1" translate="yes" xml:space="preserve">
          <source>RangeIndex &lt;code&gt;index&lt;/code&gt;</source>
          <target state="translated">RangeIndex &lt;code&gt;index&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9cf9b28262ece92730f8184b32499cd27d72d4c2" translate="yes" xml:space="preserve">
          <source>RangeOfRanges &lt;code&gt;ror&lt;/code&gt;</source>
          <target state="translated">RangeOfRanges &lt;code&gt;ror&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b442bcb1aa8cfdb401a404b0f481728a04ecf1b4" translate="yes" xml:space="preserve">
          <source>RangeOfRanges &lt;code&gt;rr&lt;/code&gt;</source>
          <target state="translated">RangeOfRanges &lt;code&gt;rr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b53699547b38575c831f9690dd54cd38036de3a0" translate="yes" xml:space="preserve">
          <source>Ranges &lt;code&gt;needles&lt;/code&gt;</source>
          <target state="translated">范围 &lt;code&gt;needles&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d1121f255b3ef8af7acd07bdf41b901a70672ba" translate="yes" xml:space="preserve">
          <source>Ranges &lt;code&gt;ranges&lt;/code&gt;</source>
          <target state="translated">范围 &lt;code&gt;ranges&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2480f843b2cebe904b4544aa5e115caedcfbd07f" translate="yes" xml:space="preserve">
          <source>Ranges &lt;code&gt;rs&lt;/code&gt;</source>
          <target state="translated">范围 &lt;code&gt;rs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af1fe47aab0c9297bebfe22698519fd0f658a583" translate="yes" xml:space="preserve">
          <source>Ranges whose elements are sorted afford better efficiency with certain operations. For this, the &lt;a href=&quot;#assumeSorted&quot;&gt;&lt;code&gt;assumeSorted&lt;/code&gt;&lt;/a&gt; function can be used to construct a &lt;a href=&quot;#SortedRange&quot;&gt;&lt;code&gt;SortedRange&lt;/code&gt;&lt;/a&gt; from a pre-sorted range. The &lt;a href=&quot;std_algorithm_sorting#sort&quot;&gt;&lt;code&gt;std.algorithm.sorting.sort&lt;/code&gt;&lt;/a&gt; function also conveniently returns a &lt;a href=&quot;#SortedRange&quot;&gt;&lt;code&gt;SortedRange&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#SortedRange&quot;&gt;&lt;code&gt;SortedRange&lt;/code&gt;&lt;/a&gt; objects provide some additional range operations that take advantage of the fact that the range is sorted.</source>
          <target state="translated">元素排序的范围在某些操作中提供了更高的效率。为此，可以使用&lt;a href=&quot;#assumeSorted&quot;&gt; &lt;code&gt;assumeSorted&lt;/code&gt; &lt;/a&gt;函数从预先排序的范围构造&lt;a href=&quot;#SortedRange&quot;&gt; &lt;code&gt;SortedRange&lt;/code&gt; &lt;/a&gt;。该&lt;a href=&quot;std_algorithm_sorting#sort&quot;&gt; &lt;code&gt;std.algorithm.sorting.sort&lt;/code&gt; &lt;/a&gt;功能也方便返回&lt;a href=&quot;#SortedRange&quot;&gt; &lt;code&gt;SortedRange&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;#SortedRange&quot;&gt; &lt;code&gt;SortedRange&lt;/code&gt; &lt;/a&gt;对象提供了一些附加的范围操作，这些操作利用了范围已排序的事实。</target>
        </trans-unit>
        <trans-unit id="4740ea44823bfbe9405519b4bac22e0e17b64f14" translate="yes" xml:space="preserve">
          <source>Raw IP packet level</source>
          <target state="translated">原始IP数据包级别</target>
        </trans-unit>
        <trans-unit id="dbbd161ce31773e9cd7b945bc7c7210cbae7218a" translate="yes" xml:space="preserve">
          <source>Raw IP packets</source>
          <target state="translated">原始IP数据包</target>
        </trans-unit>
        <trans-unit id="e4b566448bd7650313465965b6cfafb1bb7cafcb" translate="yes" xml:space="preserve">
          <source>Raw protocol access</source>
          <target state="translated">原始协议访问</target>
        </trans-unit>
        <trans-unit id="dd5b5b23b8ce8fa52896e2ac4a4a4e0047ad5df9" translate="yes" xml:space="preserve">
          <source>Re-initializes a CURL handle to the default values. This puts back the handle to the same state as it was in when it was just created.</source>
          <target state="translated">将CURL句柄重新初始化为默认值。这将使句柄恢复到刚创建时的状态。</target>
        </trans-unit>
        <trans-unit id="0204268fc36b05e74ba6d24bf32f0f7225031176" translate="yes" xml:space="preserve">
          <source>Read Comma Separated Values and its variants from an input range of &lt;code&gt;dchar&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;dchar&lt;/code&gt; 的输入范围读取逗号分隔值及其变体。</target>
        </trans-unit>
        <trans-unit id="7bf4a534bd19935da933046f9a9ff7be5b6a7965" translate="yes" xml:space="preserve">
          <source>Read Data From A BLOB Incrementally</source>
          <target state="translated">从BLOB中递增地读取数据。</target>
        </trans-unit>
        <trans-unit id="2a6216eecafd2c0e1689cf072f1f9d4d4eff5c9c" translate="yes" xml:space="preserve">
          <source>Read Only</source>
          <target state="translated">只读</target>
        </trans-unit>
        <trans-unit id="f13b46f1bcaa3336f76a4bb1c927333935e045b8" translate="yes" xml:space="preserve">
          <source>Read Only: 0 since multi-disk zip archives are not supported</source>
          <target state="translated">只读。0,因为不支持多盘压缩文件。</target>
        </trans-unit>
        <trans-unit id="daeb93574c14c16e847fb4873cf6dd9d978f1654" translate="yes" xml:space="preserve">
          <source>Read Only: 0 since multi-disk zip archives are not supported.</source>
          <target state="translated">只读。0,因为不支持多盘压缩文件。</target>
        </trans-unit>
        <trans-unit id="aeb6efe451bea0c8d7d3781b81b4f628fe0b1d54" translate="yes" xml:space="preserve">
          <source>Read Only: array indexed by the name of each member of the archive. All the members of the archive can be accessed with a foreach loop:</source>
          <target state="translated">只读:以档案中每个成员的名称为索引的数组。可以通过foreach循环访问存档的所有成员。</target>
        </trans-unit>
        <trans-unit id="941b068be2efd168f5138f0b0c523d28d89195f0" translate="yes" xml:space="preserve">
          <source>Read Only: array representing the entire contents of the archive.</source>
          <target state="translated">只读:代表整个档案内容的数组。</target>
        </trans-unit>
        <trans-unit id="c707160f130f3d61727e553912479baa11023fa3" translate="yes" xml:space="preserve">
          <source>Read Only: cyclic redundancy check (CRC) value</source>
          <target state="translated">只读:循环冗余检查(CRC)值。</target>
        </trans-unit>
        <trans-unit id="37523ba068074fb34f80a786c59f0949a0bd4bfe" translate="yes" xml:space="preserve">
          <source>Read Only: data of member in compressed form.</source>
          <target state="translated">只读:成员的压缩数据。</target>
        </trans-unit>
        <trans-unit id="f7d00fd7a00060d6f384892e8759fd7504161cf5" translate="yes" xml:space="preserve">
          <source>Read Only: number of ArchiveMembers in the directory.</source>
          <target state="translated">只读:目录中ArchiveMembers的数量。</target>
        </trans-unit>
        <trans-unit id="500f35484e9abbf530f32db5d83ac4f5091547c0" translate="yes" xml:space="preserve">
          <source>Read Only: should be 0.</source>
          <target state="translated">只读:应该是0。</target>
        </trans-unit>
        <trans-unit id="76fa98f53d73cc0c406390c18045e7868350c349" translate="yes" xml:space="preserve">
          <source>Read Only: size of data of member in compressed form.</source>
          <target state="translated">只读:压缩后的成员数据大小。</target>
        </trans-unit>
        <trans-unit id="65f6768887290d477790036287a9bbef818da0b4" translate="yes" xml:space="preserve">
          <source>Read Only: size of data of member in expanded form.</source>
          <target state="translated">只读:成员数据的扩展形式的大小。</target>
        </trans-unit>
        <trans-unit id="bcb56aa9801ff39c7c5c53b9416551690e5ddef9" translate="yes" xml:space="preserve">
          <source>Read and analyze .ini file. Write the entries into environment as well as any entries in one of the specified section(s).</source>
          <target state="translated">读取并分析.ini文件。将条目写入环境中,以及指定部分的任何条目。</target>
        </trans-unit>
        <trans-unit id="6482d751184571d336715e5ce98ca71e679af2fb" translate="yes" xml:space="preserve">
          <source>Read and extract information from the LSDA (aka gcc_except_table section). The dmd Call Site Table is structurally different from other implementations. It is organized as nested ranges, and one ip can map to multiple ranges. The most nested candidate is selected when searched. Other implementations have one candidate per ip.</source>
          <target state="translated">读取并提取LSDA(又名gcc_except_table部分)的信息。dmd Call Site Table在结构上与其他实现不同,它是以嵌套的方式组织的,一个ip可以映射到多个范围。它被组织成嵌套的范围,一个ip可以映射到多个范围。当搜索时,会选择最嵌套的候选者。其他实现的每个ip只有一个候选者。</target>
        </trans-unit>
        <trans-unit id="21fc65d288482d1e8b6dd9c97e5b05c7bbbb91fa" translate="yes" xml:space="preserve">
          <source>Read and write data in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Zip_%28file_format%29&quot;&gt;zip archive&lt;/a&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca36a6d1a8024ba4e6382a71d1b05bf29a17256" translate="yes" xml:space="preserve">
          <source>Read and write memory mapped files.</source>
          <target state="translated">读写内存映射文件。</target>
        </trans-unit>
        <trans-unit id="b5129a39480a3d2b242d64db6d87355e637b5720" translate="yes" xml:space="preserve">
          <source>Read compression method used for this member</source>
          <target state="translated">读取该成员使用的压缩方法</target>
        </trans-unit>
        <trans-unit id="a11dbc73850fcef58bf265b2adb7abd5a96fb618" translate="yes" xml:space="preserve">
          <source>Read data of member in uncompressed form.</source>
          <target state="translated">读取成员的非压缩数据。</target>
        </trans-unit>
        <trans-unit id="15e729183b6bbb3c96de02707732c85d58fc57e3" translate="yes" xml:space="preserve">
          <source>Read entire contents of file &lt;code&gt;name&lt;/code&gt; and returns it as an untyped array. If the file size is larger than &lt;code&gt;upTo&lt;/code&gt;, only &lt;code&gt;upTo&lt;/code&gt; bytes are read.</source>
          <target state="translated">读取文件 &lt;code&gt;name&lt;/code&gt; 全部内容，并将其作为无类型数组返回。如果文件大小大于 &lt;code&gt;upTo&lt;/code&gt; ，则仅读取 &lt;code&gt;upTo&lt;/code&gt; 字节。</target>
        </trans-unit>
        <trans-unit id="e50a3835e7ed3805683e79e2f0b67243a73a025e" translate="yes" xml:space="preserve">
          <source>Read existing file</source>
          <target state="translated">读取现有文件</target>
        </trans-unit>
        <trans-unit id="d2bd0cb4091355445f011133c7426913211afbad" translate="yes" xml:space="preserve">
          <source>Read file with UTF-8 text.</source>
          <target state="translated">读取UTF-8文本的文件。</target>
        </trans-unit>
        <trans-unit id="7255add54c8b431c5ee373b24cdada7d3a659620" translate="yes" xml:space="preserve">
          <source>Read from environment, looking for cached value first.</source>
          <target state="translated">从环境中读取,先寻找缓存值。</target>
        </trans-unit>
        <trans-unit id="a47b81ebcf1543263ad72fe2f768ac67a71b73dc" translate="yes" xml:space="preserve">
          <source>Read line from &lt;code&gt;stdin&lt;/code&gt; and write it to buf[], including terminating character.</source>
          <target state="translated">从 &lt;code&gt;stdin&lt;/code&gt; 读取行并将其写入buf []，包括终止符。</target>
        </trans-unit>
        <trans-unit id="d8f811ca8b7536e2bd18e121930035ea9d87e604" translate="yes" xml:space="preserve">
          <source>Read line from &lt;code&gt;stdin&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;stdin&lt;/code&gt; 读取行。</target>
        </trans-unit>
        <trans-unit id="7167a92897a624e8504adb4cd2a5a34e4de7474b" translate="yes" xml:space="preserve">
          <source>Read line from the file handle and return it as a specified type.</source>
          <target state="translated">从文件句柄中读取行并以指定类型返回。</target>
        </trans-unit>
        <trans-unit id="3626936104de340f9dc657d57e3e205a91742a48" translate="yes" xml:space="preserve">
          <source>Read line from the file handle and write it to &lt;code&gt;buf[]&lt;/code&gt;, including terminating character.</source>
          <target state="translated">从文件句柄读取行并将其写入 &lt;code&gt;buf[]&lt;/code&gt; ，包括终止符。</target>
        </trans-unit>
        <trans-unit id="f126d6e5ba18f6b69cd4a89774a06f3c5bbdb803" translate="yes" xml:space="preserve">
          <source>Read only column &quot;b&quot;</source>
          <target state="translated">只读 &quot;b &quot;栏</target>
        </trans-unit>
        <trans-unit id="3bdb33401fe4b455f64f2355674da6381ea3dcf1" translate="yes" xml:space="preserve">
          <source>Read the full content of a file.</source>
          <target state="translated">阅读文件的全部内容。</target>
        </trans-unit>
        <trans-unit id="fe36e093f9131fcd50814e2c651fcef59428379e" translate="yes" xml:space="preserve">
          <source>Read while rearranging the columns by specifying a header with a different order&quot;</source>
          <target state="translated">读取时,通过指定不同顺序的标题来重新排列列&quot;</target>
        </trans-unit>
        <trans-unit id="be7bf71bf64bf5ca7c3921558df8d8639ad9a2a3" translate="yes" xml:space="preserve">
          <source>Read-only property returning the file mode.</source>
          <target state="translated">返回文件模式的只读属性。</target>
        </trans-unit>
        <trans-unit id="54fbc1f4a81c75722e5054ba2699b77b89eb33d4" translate="yes" xml:space="preserve">
          <source>Read/Write</source>
          <target state="translated">Read/Write</target>
        </trans-unit>
        <trans-unit id="793ac345cad21d2b3a829536767f3b084b7fcb7b" translate="yes" xml:space="preserve">
          <source>Read/Write existing file, copy on write</source>
          <target state="translated">读/写现有文件,写时复制</target>
        </trans-unit>
        <trans-unit id="571a60bf0099eb1f30ed179832005e81ec663545" translate="yes" xml:space="preserve">
          <source>Read/Write existing file, create if not existing</source>
          <target state="translated">读/写现有的文件,如果不存在,则创建。</target>
        </trans-unit>
        <trans-unit id="7fe06b399c58642e4de81a3f82d07fbe4afe74a1" translate="yes" xml:space="preserve">
          <source>Read/Write: Usually the file name of the archive member; it is used to index the archive directory for the member. Each member must have a unique name[]. Do not change without removing member from the directory first.</source>
          <target state="translated">读/写。通常是档案成员的文件名,用于索引该成员的档案目录。每个成员必须有一个唯一的名字[]。在没有从目录中删除成员之前,不要更改。</target>
        </trans-unit>
        <trans-unit id="3a008a6fccbdd299dfd851251b1534db30fd0f3e" translate="yes" xml:space="preserve">
          <source>Read/Write: comment associated with this member.</source>
          <target state="translated">读/写:与该成员相关的评论。</target>
        </trans-unit>
        <trans-unit id="d383128b0f051fe35d791444c1d6fe4cd41e3c05" translate="yes" xml:space="preserve">
          <source>Read/Write: extra data for this member.</source>
          <target state="translated">读/写:该成员的额外数据。</target>
        </trans-unit>
        <trans-unit id="98a17bcae0cd7700026db1303aefc632686b92aa" translate="yes" xml:space="preserve">
          <source>Read/Write: normally set to 0</source>
          <target state="translated">读/写:通常设置为0</target>
        </trans-unit>
        <trans-unit id="3a672fd0925e6494dab48c64aa0ff9efb8bb8842" translate="yes" xml:space="preserve">
          <source>Read/Write: the archive comment. Must be less than 65536 bytes in length.</source>
          <target state="translated">读/写:归档注释,长度必须小于65536字节。长度必须小于65536字节。</target>
        </trans-unit>
        <trans-unit id="a34abcab13dc3b37844a4a869596072b4312f7c5" translate="yes" xml:space="preserve">
          <source>Read/write data in JSON format.</source>
          <target state="translated">读/写JSON格式的数据。</target>
        </trans-unit>
        <trans-unit id="2d37d83a47a9d418dccdd946b1e2fcc90f05a71a" translate="yes" xml:space="preserve">
          <source>Read/write data in XML format.</source>
          <target state="translated">读/写XML格式的数据。</target>
        </trans-unit>
        <trans-unit id="8c46f78031b7950f9e7d9673ba0df2dfe13afc98" translate="yes" xml:space="preserve">
          <source>Read/write data in the &lt;a href=&quot;http://www.info-zip.org&quot;&gt;zip archive&lt;/a&gt; format. Makes use of the etc.c.zlib compression library.</source>
          <target state="translated">以&lt;a href=&quot;http://www.info-zip.org&quot;&gt;zip存档&lt;/a&gt;格式读取/写入数据。利用etc.c.zlib压缩库。</target>
        </trans-unit>
        <trans-unit id="bcb7a7d852fe72a0b67997abe377c1452bcf06c2" translate="yes" xml:space="preserve">
          <source>Read/write data in the ZIP archive format.</source>
          <target state="translated">读/写ZIP档案格式的数据。</target>
        </trans-unit>
        <trans-unit id="896a8af6369e03daade58ae0948e0a69e86551d9" translate="yes" xml:space="preserve">
          <source>Read/write value from/to the memory location indicated by ptr.</source>
          <target state="translated">从/向ptr.Ptr.所示的内存位置读/写数值。</target>
        </trans-unit>
        <trans-unit id="29320f79883d1853fbce071c212f5c5744be2f6e" translate="yes" xml:space="preserve">
          <source>Readers get preference. This may starve writers.</source>
          <target state="translated">读者得到了优待。这可能会饿坏作家。</target>
        </trans-unit>
        <trans-unit id="cffa2af0a3a67cf2123e3411d020161abc01fc05" translate="yes" xml:space="preserve">
          <source>Reading</source>
          <target state="translated">Reading</target>
        </trans-unit>
        <trans-unit id="1d920fff58ef0d0f937aa8908a1de256cc4799ab" translate="yes" xml:space="preserve">
          <source>Readonly</source>
          <target state="translated">Readonly</target>
        </trans-unit>
        <trans-unit id="18d8a220aa279e4eb04bfb2f9eda0af845a3d548" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;stdin&lt;/code&gt; and writes it to &lt;code&gt;stdout&lt;/code&gt; with a argument counter.</source>
          <target state="translated">读取 &lt;code&gt;stdin&lt;/code&gt; 并将其通过参数计数器写入 &lt;code&gt;stdout&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="26b3984875d670d5e743016573bc157db0855be6" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;stdin&lt;/code&gt; and writes it to &lt;code&gt;stdout&lt;/code&gt; with an argument counter.</source>
          <target state="translated">读取 &lt;code&gt;stdin&lt;/code&gt; 并将其通过参数计数器写入 &lt;code&gt;stdout&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c03ee569a80e822a17cdfa9040b93b3d08ce8229" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;stdin&lt;/code&gt; and writes it to &lt;code&gt;stdout&lt;/code&gt;.</source>
          <target state="translated">读取 &lt;code&gt;stdin&lt;/code&gt; 并将其写入 &lt;code&gt;stdout&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d108f6e16abea10d9fb4947ccc236e24041d31dd" translate="yes" xml:space="preserve">
          <source>Reads I/O port at port_address.</source>
          <target state="translated">读取 port_address 的 I/O 端口。</target>
        </trans-unit>
        <trans-unit id="49cb4212fc28223325da7d9c58c5aaefd148c02c" translate="yes" xml:space="preserve">
          <source>Reads a file line by line and parses the line into a single value or a &lt;a href=&quot;std_typecons#Tuple&quot;&gt;&lt;code&gt;std.typecons.Tuple&lt;/code&gt;&lt;/a&gt; of values depending on the length of &lt;code&gt;Types&lt;/code&gt;. The lines are parsed using the specified format string. The format string is passed to &lt;a href=&quot;std_format#formattedRead&quot;&gt;&lt;code&gt;std.format.formattedRead&lt;/code&gt;&lt;/a&gt;, and therefore must conform to the format string specification outlined in &lt;a href=&quot;std_format&quot;&gt;&lt;code&gt;std.format&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">根据 &lt;code&gt;Types&lt;/code&gt; 的长度，&lt;a href=&quot;std_typecons#Tuple&quot;&gt; &lt;code&gt;std.typecons.Tuple&lt;/code&gt; &lt;/a&gt;读取文件并将其解析为单个值或std.typecons.Tuple值。使用指定的格式字符串来解析行。格式字符串被传递到&lt;a href=&quot;std_format#formattedRead&quot;&gt; &lt;code&gt;std.format.formattedRead&lt;/code&gt; &lt;/a&gt;，因此必须符合&lt;a href=&quot;std_format&quot;&gt; &lt;code&gt;std.format&lt;/code&gt; 中&lt;/a&gt;概述的格式字符串规范。</target>
        </trans-unit>
        <trans-unit id="f40a973dcb25e5ede27e5aac103cea1b0db87b35" translate="yes" xml:space="preserve">
          <source>Reads a file, terminate the program on error</source>
          <target state="translated">读取文件,错误时终止程序。</target>
        </trans-unit>
        <trans-unit id="d8bb597f2dda425a5e5ea130e0bc100fab704034" translate="yes" xml:space="preserve">
          <source>Reads a value from the given input range according to spec and returns it as type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">根据spec从给定的输入范围中读取一个值，并将其返回为 &lt;code&gt;T&lt;/code&gt; 类型。</target>
        </trans-unit>
        <trans-unit id="fe9af776ce0213a2d633f3fe45cfb534ec9ac7fb" translate="yes" xml:space="preserve">
          <source>Reads an object module from base[] and passes the names of any exported symbols to (*pAddSymbol)().</source>
          <target state="translated">从base[]中读取一个对象模块,并将任何导出的符号名称传递给(*pAddSymbol)()。</target>
        </trans-unit>
        <trans-unit id="a9a36b275679d0e70daad4cad40c7a7d537f1582" translate="yes" xml:space="preserve">
          <source>Reads and validates (using &lt;a href=&quot;std_utf#validate&quot;&gt;&lt;code&gt;std.utf.validate&lt;/code&gt;&lt;/a&gt;) a text file. S can be an array of any character type. However, no width or endian conversions are performed. So, if the width or endianness of the characters in the given file differ from the width or endianness of the element type of S, then validation will fail.</source>
          <target state="translated">读取并验证（使用&lt;a href=&quot;std_utf#validate&quot;&gt; &lt;code&gt;std.utf.validate&lt;/code&gt; &lt;/a&gt;）文本文件。S可以是任何字符类型的数组。但是，不执行宽度或字节序转换。因此，如果给定文件中字符的宽度或字节序与S元素类型的宽度或字节序不同，则验证将失败。</target>
        </trans-unit>
        <trans-unit id="9873cf676e4ad0a9b2f4951a3e2128cef4ddc619" translate="yes" xml:space="preserve">
          <source>Reads characters from &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt;&lt;code&gt;r&lt;/code&gt;, converts them according to &lt;code&gt;fmt&lt;/code&gt;, and writes them to &lt;code&gt;args&lt;/code&gt;.</source>
          <target state="translated">从&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt; &lt;code&gt;r&lt;/code&gt; 读取字符，根据 &lt;code&gt;fmt&lt;/code&gt; 对其进行转换，并将其写入 &lt;code&gt;args&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72a110505374f57a1f54b6f7fdd1bd89dff1480a" translate="yes" xml:space="preserve">
          <source>Reads formatted data from &lt;code&gt;stdin&lt;/code&gt; using &lt;a href=&quot;std_format#formattedRead&quot;&gt;&lt;code&gt;std.format.formattedRead&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;std_format#formattedRead&quot;&gt; &lt;code&gt;std.format.formattedRead&lt;/code&gt; &lt;/a&gt;从 &lt;code&gt;stdin&lt;/code&gt; 读取格式化的数据。</target>
        </trans-unit>
        <trans-unit id="f0b3e3d070da32ebbebc915ce449f0f887bdc340" translate="yes" xml:space="preserve">
          <source>Reads formatted data from the file using &lt;a href=&quot;std_format#formattedRead&quot;&gt;&lt;code&gt;std.format.formattedRead&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;std_format#formattedRead&quot;&gt; &lt;code&gt;std.format.formattedRead&lt;/code&gt; &lt;/a&gt;从文件中读取格式化的数据。</target>
        </trans-unit>
        <trans-unit id="b8de846f2f646cdf61597148ce44078d0aec9ef3" translate="yes" xml:space="preserve">
          <source>Reads one full grapheme cluster from an &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; of dchar &lt;code&gt;inp&lt;/code&gt;.</source>
          <target state="translated">从dchar &lt;code&gt;inp&lt;/code&gt; 的&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;读取一个完整的字素簇。</target>
        </trans-unit>
        <trans-unit id="63176e821ee6fb97ffd79dbfd971c2e359909db2" translate="yes" xml:space="preserve">
          <source>Reads the file from &lt;code&gt;srcfile&lt;/code&gt; and loads the source buffer.</source>
          <target state="translated">从 &lt;code&gt;srcfile&lt;/code&gt; 读取文件并加载源缓冲区。</target>
        </trans-unit>
        <trans-unit id="d66adb30a59f74a0595960a81c8fa1185e3cac95" translate="yes" xml:space="preserve">
          <source>Reads values according to the format string from an InputRange.</source>
          <target state="translated">根据InputRange的格式字符串读取数值。</target>
        </trans-unit>
        <trans-unit id="fab1e24f991774bddf40367f9e156ce01d7843b7" translate="yes" xml:space="preserve">
          <source>Ready-made predicate functions to compare two values.</source>
          <target state="translated">现成的谓词函数,用于比较两个值。</target>
        </trans-unit>
        <trans-unit id="cab51a15bffa042cbc4510d8ab0c3275285bc68c" translate="yes" xml:space="preserve">
          <source>Reallocates &lt;code&gt;b&lt;/code&gt; to new size &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;b&lt;/code&gt; 重新分配为新的大小 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="23686a2e44a73b949efd61ec6a53e06f541eaa5e" translate="yes" xml:space="preserve">
          <source>Reallocates &lt;code&gt;b&lt;/code&gt; to size &lt;code&gt;s&lt;/code&gt;, possibly moving memory around. &lt;code&gt;b&lt;/code&gt; must be &lt;code&gt;null&lt;/code&gt; or a buffer allocated with the same allocator. If reallocation was successful, &lt;code&gt;reallocate&lt;/code&gt; changes &lt;code&gt;b&lt;/code&gt; appropriately and returns &lt;code&gt;true&lt;/code&gt;. Upon failure, the call effects no change upon the allocator object, leaves &lt;code&gt;b&lt;/code&gt; unchanged, and returns &lt;code&gt;false&lt;/code&gt;. An allocator should implement &lt;code&gt;reallocate&lt;/code&gt; if it can derive some advantage from doing so; otherwise, this module defines a &lt;code&gt;reallocate&lt;/code&gt; free function implemented in terms of &lt;code&gt;expand&lt;/code&gt;, &lt;code&gt;allocate&lt;/code&gt;, and &lt;code&gt;deallocate&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;b&lt;/code&gt; 重新分配为大小 &lt;code&gt;s&lt;/code&gt; ，可能会移动内存。 &lt;code&gt;b&lt;/code&gt; 必须为 &lt;code&gt;null&lt;/code&gt; 或使用相同分配器分配的缓冲区。如果重新分配成功，则适当地 &lt;code&gt;reallocate&lt;/code&gt; 更改 &lt;code&gt;b&lt;/code&gt; 并返回 &lt;code&gt;true&lt;/code&gt; 。失败时，该调用不会对分配器对象产生任何影响，使 &lt;code&gt;b&lt;/code&gt; 保持不变，并返回 &lt;code&gt;false&lt;/code&gt; 。如果分配程序可以从 &lt;code&gt;reallocate&lt;/code&gt; 程序中获得一些好处，则应该实现它。否则，该模块定义了一个 &lt;code&gt;reallocate&lt;/code&gt; 来讲实现自由功能 &lt;code&gt;expand&lt;/code&gt; ， &lt;code&gt;allocate&lt;/code&gt; ，和 &lt;code&gt;deallocate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d23aabd138f3b9a3380f8a3c9397aa4757a27130" translate="yes" xml:space="preserve">
          <source>Reallocates a block previously allocated with &lt;code&gt;alignedAllocate&lt;/code&gt;. Contractions do not occur in place.</source>
          <target state="translated">重新分配先前使用 &lt;code&gt;alignedAllocate&lt;/code&gt; 分配的块。宫缩没有发生。</target>
        </trans-unit>
        <trans-unit id="e0477ffd1001aa8fef0b44f8b7b7bfdbdd0f52b7" translate="yes" xml:space="preserve">
          <source>Reallocates a memory block with specified alignment.</source>
          <target state="translated">以指定的对齐方式重新分配一个内存块。</target>
        </trans-unit>
        <trans-unit id="bb582920b89e35f47891a53d95ae14c32e375aab" translate="yes" xml:space="preserve">
          <source>Reallocates a memory block.</source>
          <target state="translated">重新分配一个内存块。</target>
        </trans-unit>
        <trans-unit id="255724aaef111ccd96dea7a8cd7a8bf558ede2b3" translate="yes" xml:space="preserve">
          <source>Reallocates a previously-allocated block. Contractions occur in place.</source>
          <target state="translated">重新分配先前分配的块。收缩发生在原地。</target>
        </trans-unit>
        <trans-unit id="8f515dad658f77a733680500f8d84e939a8562c8" translate="yes" xml:space="preserve">
          <source>Rearranges elements in &lt;code&gt;r&lt;/code&gt; in three adjacent ranges and returns them. The first and leftmost range only contains elements in &lt;code&gt;r&lt;/code&gt; less than &lt;code&gt;pivot&lt;/code&gt;. The second and middle range only contains elements in &lt;code&gt;r&lt;/code&gt; that are equal to &lt;code&gt;pivot&lt;/code&gt;. Finally, the third and rightmost range only contains elements in &lt;code&gt;r&lt;/code&gt; that are greater than &lt;code&gt;pivot&lt;/code&gt;. The less-than test is defined by the binary function &lt;code&gt;less&lt;/code&gt;.</source>
          <target state="translated">在三个相邻范围内重新排列 &lt;code&gt;r&lt;/code&gt; 中的元素并返回它们。第一个和最左边的范围仅包含 &lt;code&gt;r&lt;/code&gt; 中的元素，小于 &lt;code&gt;pivot&lt;/code&gt; 。第二和中间范围仅包含 &lt;code&gt;r&lt;/code&gt; 中等于 &lt;code&gt;pivot&lt;/code&gt; 元素。最后，第三个也是最右边的范围仅包含 &lt;code&gt;r&lt;/code&gt; 中大于 &lt;code&gt;pivot&lt;/code&gt; 元素。小于测试由二进制函数 &lt;code&gt;less&lt;/code&gt; 定义。</target>
        </trans-unit>
        <trans-unit id="028e13bd0298376bf31316a3db976d1f8d73160a" translate="yes" xml:space="preserve">
          <source>Reason &lt;strong id=&quot;reason&quot;&gt;reason&lt;/strong&gt;;</source>
          <target state="translated">原因&lt;strong id=&quot;reason&quot;&gt;原因&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="38a2132f7d06a3de3c8f482a30348e738425b184" translate="yes" xml:space="preserve">
          <source>Rebindable!T &lt;code&gt;obj&lt;/code&gt;</source>
          <target state="translated">Rebindable T！ &lt;code&gt;obj&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7dfd63b70a6c7e705a4445213f0cca37c1792b78" translate="yes" xml:space="preserve">
          <source>Rebindable!T &lt;strong id=&quot;rebindable&quot;&gt;rebindable&lt;/strong&gt;(T)(Rebindable!T obj);</source>
          <target state="translated">可重绑定！T可重&lt;strong id=&quot;rebindable&quot;&gt;绑定&lt;/strong&gt;（T）（Rebindable！T obj）;</target>
        </trans-unit>
        <trans-unit id="1bc1917f2d07d2c9a111dd45e98efe3841e1c509" translate="yes" xml:space="preserve">
          <source>Rebindable!T &lt;strong id=&quot;rebindable&quot;&gt;rebindable&lt;/strong&gt;(T)(T obj)</source>
          <target state="translated">可重绑定！T可重&lt;strong id=&quot;rebindable&quot;&gt;绑定&lt;/strong&gt;（T）（T obj）</target>
        </trans-unit>
        <trans-unit id="d331e630b2896b20a876047a4c30e580c4e0b158" translate="yes" xml:space="preserve">
          <source>Receive a message from another thread, or block if no messages of the specified types are available. This function works by pattern matching a message against a set of delegates and executing the first match found.</source>
          <target state="translated">从另一个线程接收消息,如果没有指定类型的消息,则进行阻塞。该函数的工作原理是将消息与一组委托进行模式匹配,并执行找到的第一个匹配。</target>
        </trans-unit>
        <trans-unit id="6905aea09db96a1168eed83db3ff77aad0c4651b" translate="yes" xml:space="preserve">
          <source>Receive a message from another thread, or block until &lt;code&gt;duration&lt;/code&gt; exceeds, if no messages of the specified types are available. This function works by pattern matching a message against a set of delegates and executing the first match found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9965bf28e85415bb8f63bacd2e9f47d2c22ec76b" translate="yes" xml:space="preserve">
          <source>Receive buffer size</source>
          <target state="translated">接收缓冲区大小</target>
        </trans-unit>
        <trans-unit id="8b1387a64dcd22aaaab5eec91298777b523da5ea" translate="yes" xml:space="preserve">
          <source>Receive data and get the remote endpoint &lt;code&gt;Address&lt;/code&gt;. If the socket is blocking, &lt;code&gt;receiveFrom&lt;/code&gt; waits until there is data to be received.</source>
          <target state="translated">接收数据并获取远程端点 &lt;code&gt;Address&lt;/code&gt; 。如果套接字正在阻塞， &lt;code&gt;receiveFrom&lt;/code&gt; 将等待直到有数据要接收为止。</target>
        </trans-unit>
        <trans-unit id="1d55cf19e7769478d5e838fbbb6306259dd64f58" translate="yes" xml:space="preserve">
          <source>Receive data on the connection. If the socket is blocking, &lt;code&gt;receive&lt;/code&gt; waits until there is data to be received.</source>
          <target state="translated">在连接上接收数据。如果套接字阻塞， &lt;code&gt;receive&lt;/code&gt; 等待直到有数据要接收。</target>
        </trans-unit>
        <trans-unit id="84f50b3ba0f36e6f16be3df90ac3abf9c5a37ad4" translate="yes" xml:space="preserve">
          <source>Receive out-of-band data in band</source>
          <target state="translated">接收带内带外数据</target>
        </trans-unit>
        <trans-unit id="e48814461f501b48cd0f2672a164a1c8547c1c5a" translate="yes" xml:space="preserve">
          <source>Receive timeout</source>
          <target state="translated">接收超时</target>
        </trans-unit>
        <trans-unit id="1de54dc910afb04eede004cd1e30c3c21ae9c402" translate="yes" xml:space="preserve">
          <source>Receives a message from another thread and gives up if no match arrives within a specified duration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c96dab7a595e26ee5bfe55d132ef127b4461ed" translate="yes" xml:space="preserve">
          <source>Receives a message from another thread.</source>
          <target state="translated">收到来自另一个线程的消息。</target>
        </trans-unit>
        <trans-unit id="1ef50d47b70da48b55093a57f6ce6bbce8de63f5" translate="yes" xml:space="preserve">
          <source>Receives a string key as argument. The result is an expression describing the requested target information.</source>
          <target state="translated">接收一个字符串键作为参数。结果是描述所请求的目标信息的表达式。</target>
        </trans-unit>
        <trans-unit id="7e73f9083a3fcdc41737d365f5ca155b818a6aec" translate="yes" xml:space="preserve">
          <source>Receives data from the connected socket. Use after successful curl_easy_perform() with CURLOPT_CONNECT_ONLY option.</source>
          <target state="translated">从连接的socket中接收数据。在CURLOPT_CONNECT_ONLY选项下的curl_easy_perform()成功后使用。</target>
        </trans-unit>
        <trans-unit id="583529bfc00d6827dec4ffe687631f874fe53d08" translate="yes" xml:space="preserve">
          <source>Receives only messages with arguments of the specified types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033c316ca5ee67eb25d34d41cddc41a48f5386f5" translate="yes" xml:space="preserve">
          <source>Receives only messages with arguments of types &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">仅接收参数类型为 &lt;code&gt;T&lt;/code&gt; 的消息。</target>
        </trans-unit>
        <trans-unit id="347a8e34dcdfe0c261bbae1b232251ad673cf4a9" translate="yes" xml:space="preserve">
          <source>Record debugging information</source>
          <target state="translated">记录调试信息</target>
        </trans-unit>
        <trans-unit id="1f96545aca9f95a449dc3f5d1c56c54871ec8af3" translate="yes" xml:space="preserve">
          <source>Record separator</source>
          <target state="translated">记录分离器</target>
        </trans-unit>
        <trans-unit id="b867c7900a8ddf139368afe948cced43cd8de4b0" translate="yes" xml:space="preserve">
          <source>Rectangular Arrays</source>
          <target state="translated">矩形阵列</target>
        </trans-unit>
        <trans-unit id="6e974f9bd66c81587b1db5a9b54ad777181a0b76" translate="yes" xml:space="preserve">
          <source>Recurrence!(fun, CommonType!State, State.length) &lt;strong id=&quot;recurrence&quot;&gt;recurrence&lt;/strong&gt;(alias fun, State...)(State initial);</source>
          <target state="translated">&lt;strong id=&quot;recurrence&quot;&gt;重复发生&lt;/strong&gt;（fun，CommonType！State，State.length）&lt;strong id=&quot;recurrence&quot;&gt;重复发生&lt;/strong&gt;（别名fun，State ...）（状态初始）;</target>
        </trans-unit>
        <trans-unit id="4a622afbcf711dd746ebf0dc2eb33902db5a905a" translate="yes" xml:space="preserve">
          <source>Recursive Templates</source>
          <target state="translated">递归模板</target>
        </trans-unit>
        <trans-unit id="fd645005541e35822634b62f9cf07c4841702213" translate="yes" xml:space="preserve">
          <source>Recursively calls the &lt;code&gt;opPostMove&lt;/code&gt; callbacks of a struct and its members if they're defined.</source>
          <target state="translated">递归调用结构及其成员（如果已定义）的 &lt;code&gt;opPostMove&lt;/code&gt; 回调。</target>
        </trans-unit>
        <trans-unit id="f7ddc39eecf352c1e235c0728bb6fd43812d50da" translate="yes" xml:space="preserve">
          <source>Recursively look at every module this module imports, return true if it imports m. Can be used to detect circular imports.</source>
          <target state="translated">递归地查看这个模块导入的每一个模块,如果导入m,则返回true,可以用来检测循环导入。</target>
        </trans-unit>
        <trans-unit id="9c08948c7f09d89104efa65883fc39648db73808" translate="yes" xml:space="preserve">
          <source>Recursively scanning all allocated memory pointed to by roots looking for more pointers into GC allocated memory.</source>
          <target state="translated">循环扫描所有根指向的分配内存,寻找更多指向GC分配内存的指针。</target>
        </trans-unit>
        <trans-unit id="c1a0c000cb1b2ae85456d0a51e79e682d551f1f8" translate="yes" xml:space="preserve">
          <source>Recycling temporary buffers across iterations of a parallel foreach loop.</source>
          <target state="translated">在并行foreach循环的迭代中回收临时缓冲区。</target>
        </trans-unit>
        <trans-unit id="8dcc8f0ea09d6b329c32ee33bce8b233e4de04a7" translate="yes" xml:space="preserve">
          <source>Redirect &lt;code&gt;redirect&lt;/code&gt;</source>
          <target state="translated">重定向 &lt;code&gt;redirect&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e46b7f03c259fa26e24f1d796394f5dca85e2df6" translate="yes" xml:space="preserve">
          <source>Redirect all three streams. This is equivalent to &lt;code&gt;Redirect.stdin | Redirect.stdout | Redirect.stderr&lt;/code&gt;.</source>
          <target state="translated">重定向所有三个流。这等效于 &lt;code&gt;Redirect.stdin | Redirect.stdout | Redirect.stderr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9845ed195b026191f64bea3adcb719aff1093dda" translate="yes" xml:space="preserve">
          <source>Redirect the standard error stream into the standard output stream. This can not be combined with &lt;code&gt;Redirect.stderr&lt;/code&gt;.</source>
          <target state="translated">将标准错误流重定向到标准输出流。不能与 &lt;code&gt;Redirect.stderr&lt;/code&gt; 结合使用。</target>
        </trans-unit>
        <trans-unit id="42baec091b8bacb781758c8fc0c08592e8ffddc3" translate="yes" xml:space="preserve">
          <source>Redirect the standard input, output or error streams, respectively.</source>
          <target state="translated">分别重定向标准输入、输出或错误流。</target>
        </trans-unit>
        <trans-unit id="80fbb398850ffc67d552f8c380bb4aa84a0ac302" translate="yes" xml:space="preserve">
          <source>Redirect the standard output stream into the standard error stream. This can not be combined with &lt;code&gt;Redirect.stdout&lt;/code&gt;.</source>
          <target state="translated">将标准输出流重定向到标准错误流。这不能与 &lt;code&gt;Redirect.stdout&lt;/code&gt; 结合使用。</target>
        </trans-unit>
        <trans-unit id="9ced0df5f00cdd338d0d1abe97f8c296ab289eda" translate="yes" xml:space="preserve">
          <source>Reduces the length of the &lt;a href=&quot;std_range_primitives#isBidirectionalRange&quot;&gt;bidirectional range&lt;/a&gt;&lt;code&gt;range&lt;/code&gt; by removing elements that satisfy &lt;code&gt;pred&lt;/code&gt;. If &lt;code&gt;s = SwapStrategy.unstable&lt;/code&gt;, elements are moved from the right end of the range over the elements to eliminate. If &lt;code&gt;s = SwapStrategy.stable&lt;/code&gt; (the default), elements are moved progressively to front such that their relative order is preserved. Returns the filtered range.</source>
          <target state="translated">通过删除满足 &lt;code&gt;pred&lt;/code&gt; 的元素来减小&lt;a href=&quot;std_range_primitives#isBidirectionalRange&quot;&gt;双向范围&lt;/a&gt; &lt;code&gt;range&lt;/code&gt; 的长度。如果 &lt;code&gt;s = SwapStrategy.unstable&lt;/code&gt; ，则将元素从范围的右端移到要消除的元素上。如果 &lt;code&gt;s = SwapStrategy.stable&lt;/code&gt; （默认值），则将元素逐渐移到最前面，从而保留其相对顺序。返回过滤范围。</target>
        </trans-unit>
        <trans-unit id="a38ed0ebd88e5865ccf3df6d0f1c1a6214e613a7" translate="yes" xml:space="preserve">
          <source>Ref Functions</source>
          <target state="translated">参考功能</target>
        </trans-unit>
        <trans-unit id="93a3795b3f7bea3488bc980a00ebb42b7f194f23" translate="yes" xml:space="preserve">
          <source>Ref Return Scope Parameters</source>
          <target state="translated">参考返回范围参数</target>
        </trans-unit>
        <trans-unit id="2adad0226b3a33fb57b1f7508d1353c72a0c3052" translate="yes" xml:space="preserve">
          <source>Ref and Out Parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb8735c2880ff82932bdca464eb4f0ca4ed037e" translate="yes" xml:space="preserve">
          <source>Ref functions allow functions to return by reference. This is analogous to ref function parameters.</source>
          <target state="translated">Ref函数允许函数通过引用返回。这类似于ref函数的参数。</target>
        </trans-unit>
        <trans-unit id="218cfb31767f23e1b298ff28247fa438c5c3eba2" translate="yes" xml:space="preserve">
          <source>RefAppender!(E[]) &lt;strong id=&quot;appender&quot;&gt;appender&lt;/strong&gt;(P : E[]*, E)(P arrayPtr);</source>
          <target state="translated">RefAppender！（E []）&lt;strong id=&quot;appender&quot;&gt;追加器&lt;/strong&gt;（P：E [] *，E）（P arrayPtr）;</target>
        </trans-unit>
        <trans-unit id="2e3d9fdbfb40928983e19824181527eeea7cd51c" translate="yes" xml:space="preserve">
          <source>RefCounted!(T, RefCountedAutoInitialize.no) &lt;strong id=&quot;refCounted&quot;&gt;refCounted&lt;/strong&gt;(T)(T val);</source>
          <target state="translated">RefCounted！（T，RefCountedAutoInitialize.no）&lt;strong id=&quot;refCounted&quot;&gt;refCounted&lt;/strong&gt;（T）（T val）;</target>
        </trans-unit>
        <trans-unit id="c7095fa996b8aea93416332641555e8ef550acca" translate="yes" xml:space="preserve">
          <source>Refer to the &lt;a href=&quot;std_uni&quot;&gt;&lt;code&gt;std.uni&lt;/code&gt;&lt;/a&gt; docs for a reference on Unicode terminology.  For a range that iterates by grapheme cluster (written character) see &lt;a href=&quot;std_uni#byGrapheme&quot;&gt;&lt;code&gt;std.uni.byGrapheme&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;std_uni&quot;&gt; &lt;code&gt;std.uni&lt;/code&gt; &lt;/a&gt;文档以获取有关Unicode术语的参考。有关按字素簇（书写字符）进行迭代的范围，请参见&lt;a href=&quot;std_uni#byGrapheme&quot;&gt; &lt;code&gt;std.uni.byGrapheme&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c95d85c5af695bcdab44f180e8c12e772a641c9" translate="yes" xml:space="preserve">
          <source>Refer to the page for &lt;a href=&quot;lex&quot;&gt;lexical syntax&lt;/a&gt;.</source>
          <target state="translated">有关&lt;a href=&quot;lex&quot;&gt;词汇语法，&lt;/a&gt;请参见页面。</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="b526c61314d0201e1fe9face79911a4659cd51ac" translate="yes" xml:space="preserve">
          <source>Reference Links</source>
          <target state="translated">参考链接</target>
        </trans-unit>
        <trans-unit id="5f8843090009dc1b1594827e9439fcc612a46af4" translate="yes" xml:space="preserve">
          <source>Reference Types</source>
          <target state="translated">参考类型</target>
        </trans-unit>
        <trans-unit id="bda0985509ec7a10650d2f5fca41cb601751ac0d" translate="yes" xml:space="preserve">
          <source>Reference counting is a common solution to solve explicit memory allocation problems. The code to implement the increment and decrement operations whenever assignments are made is one source of slowdown. Hiding it behind smart pointer classes doesn't help the speed. (Reference counting methods are not a general solution anyway, as circular references never get deleted.)</source>
          <target state="translated">引用计数是解决显式内存分配问题的常用方案。每当分配时,实现增量和减量操作的代码是减慢速度的来源之一。把它藏在智能指针类后面对速度没有帮助。(反正引用计数方法不是一般的解决方案,因为循环引用永远不会被删除)。</target>
        </trans-unit>
        <trans-unit id="3795199e8f73e2699416b487db6aaeec12a18d75" translate="yes" xml:space="preserve">
          <source>Reference definitions start with a label in square brackets, followed by a colon, a URL and an optional title wrapped in single or double quotes, or in parentheses. If a reference label would match both a D symbol and a reference definition then the reference definition is used.</source>
          <target state="translated">参考定义以方括号内的标签开始,后面是冒号、URL和用单引号、双引号或括号包裹的可选标题。如果一个参考标签同时符合D符号和参考定义,则使用参考定义。</target>
        </trans-unit>
        <trans-unit id="54b77a25f697c22c19da5ef6e50539b70edbf0ba" translate="yes" xml:space="preserve">
          <source>Reference implementation</source>
          <target state="translated">参考执行情况</target>
        </trans-unit>
        <trans-unit id="df573c8374802ff7828171ecfa830069f2e20d19" translate="yes" xml:space="preserve">
          <source>Reference semantics</source>
          <target state="translated">参考语义</target>
        </trans-unit>
        <trans-unit id="4cf6bd8acab3ec3e28f9007df34a799a3db2218a" translate="yes" xml:space="preserve">
          <source>Reference to the value to modify.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3df644b1a1f905d3fe996f46169357b5db04a5" translate="yes" xml:space="preserve">
          <source>Reference type demonstration</source>
          <target state="translated">参考类型演示</target>
        </trans-unit>
        <trans-unit id="f6a204f70b64ec3f8579cf4b86c716eaafd78572" translate="yes" xml:space="preserve">
          <source>Reference value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d8843c1f2464c8fbd8ab73886eb0b41d1123f3b" translate="yes" xml:space="preserve">
          <source>Reference-style links enclose a reference label in square brackets. They may optionally be preceded by some link text, also enclosed in square brackets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c7eb20a38241775d11ec59ff96fa6049a5057e8" translate="yes" xml:space="preserve">
          <source>Reference-style links enclose a reference label in square brackets. They may optionally be preceeded by some link text, also enclosed in square brackets.</source>
          <target state="translated">参考式链接用方括号括起一个参考标签。它们可以选择在前面加上一些链接文本,也用方括号括起来。</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="c04696f070001bb45d8888b617ed2619a4af2b35" translate="yes" xml:space="preserve">
          <source>References are returned as pointers in EAX.</source>
          <target state="translated">引用在EAX中作为指针返回。</target>
        </trans-unit>
        <trans-unit id="8d0e6a6826b7d67307b20fb43d95d4dff93aa1ec" translate="yes" xml:space="preserve">
          <source>References cannot be upcast to the enclosing class object, nor can they be downcast to a derived interface.</source>
          <target state="translated">引用不能上传到外层类对象,也不能下传到派生接口。</target>
        </trans-unit>
        <trans-unit id="6669ef424ffa4627fac553bacbabacd10635aac0" translate="yes" xml:space="preserve">
          <source>References cannot be upcast to the enclosing class object, nor can they be downcast to a derived interface. To accomplish this, an appropriate &lt;code&gt;QueryInterface()&lt;/code&gt; would have to be implemented for that interface in standard COM fashion.</source>
          <target state="translated">引用不能被上载到封闭的类对象，引用也不能被下放到派生的接口。为此，必须以标准COM方式为该接口实现适当的 &lt;code&gt;QueryInterface()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4adc5738020ba312244b8258df3427e9630d5d4e" translate="yes" xml:space="preserve">
          <source>References to qualified objects can be implicitly converted according to the following rules:</source>
          <target state="translated">对限定对象的引用可以根据以下规则进行隐式转换。</target>
        </trans-unit>
        <trans-unit id="f33780efd6728fcd99948641510ca4e234624e70" translate="yes" xml:space="preserve">
          <source>Referring to data that has been the operand of &lt;code&gt;delete&lt;/code&gt;.</source>
          <target state="translated">引用已作为 &lt;code&gt;delete&lt;/code&gt; 操作数的数据。</target>
        </trans-unit>
        <trans-unit id="aaf0bd26771aff6f50e1ae9c308ad3ffcf6e4371" translate="yes" xml:space="preserve">
          <source>RegEx &lt;code&gt;pat&lt;/code&gt;</source>
          <target state="translated">正则表达式 &lt;code&gt;pat&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="848bb51730ef072173b58615dfd1973ad43dc475" translate="yes" xml:space="preserve">
          <source>RegEx &lt;code&gt;re&lt;/code&gt;</source>
          <target state="translated">正则表达式 &lt;code&gt;re&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="69be2807346525566191c968086f61243d7e70d6" translate="yes" xml:space="preserve">
          <source>Regardless of the overload, &lt;code&gt;count&lt;/code&gt; will not accept infinite ranges for &lt;code&gt;haystack&lt;/code&gt;.</source>
          <target state="translated">不管超载， &lt;code&gt;count&lt;/code&gt; 将不接受无限范围的 &lt;code&gt;haystack&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="47288da0c24aadd7ef41246fbb262ce667ca883e" translate="yes" xml:space="preserve">
          <source>Regardless of the type of the operands, floating point constant folding is done in &lt;code&gt;real&lt;/code&gt; or greater precision. It is always done following IEEE 754 rules and round-to-nearest is used.</source>
          <target state="translated">无论操作数的类型如何，浮点常量折叠都是以 &lt;code&gt;real&lt;/code&gt; 或更高精度进行的。始终遵循IEEE 754规则进行操作，并使用舍入法。</target>
        </trans-unit>
        <trans-unit id="a6a1edfebd5a70df8537ef07e2e286ead2d3f845" translate="yes" xml:space="preserve">
          <source>Regex flags</source>
          <target state="translated">Regex标志</target>
        </trans-unit>
        <trans-unit id="6d1ba653d653ecbd9c15e355d9133be994f123db" translate="yes" xml:space="preserve">
          <source>Regex string to extract UUIDs from text.</source>
          <target state="translated">从文本中提取UUID的Regex字符串。</target>
        </trans-unit>
        <trans-unit id="12b60328a2fd45d355e7273c8c9ae9964c151e58" translate="yes" xml:space="preserve">
          <source>Regex!char (wchar/dchar) that contains a pattern in the form of compiled bytecode.</source>
          <target state="translated">Regex!char (wchar/dchar),包含一个以编译字节码形式存在的模式。</target>
        </trans-unit>
        <trans-unit id="85d320fbafaf5ef943535d080c82dd16ad56fafb" translate="yes" xml:space="preserve">
          <source>Region allocator organizes a chunk of memory as a simple bump-the-pointer allocator.</source>
          <target state="translated">区域分配器作为一个简单的bump-the-pointer分配器组织了一块内存。</target>
        </trans-unit>
        <trans-unit id="79beea57b62dcf23132f27bfe4b48bf4320df97d" translate="yes" xml:space="preserve">
          <source>Region holding its own allocation, most often on the stack. Has statically-determined size.</source>
          <target state="translated">拥有自己分配的区域,最常见的是在堆栈上。具有静态确定的大小。</target>
        </trans-unit>
        <trans-unit id="66ecfb00e68a58fbfcd954a0645b5e8762c0c475" translate="yes" xml:space="preserve">
          <source>Region using &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Sbrk&quot;&gt;sbrk&lt;/a&gt;&lt;/code&gt; for allocating memory.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Sbrk&quot;&gt;sbrk&lt;/a&gt;&lt;/code&gt; 分配内存的区域。</target>
        </trans-unit>
        <trans-unit id="16168729e57b855923c7a71a802959676ea3a2be" translate="yes" xml:space="preserve">
          <source>Register A Callback To Handle SQLITE_BUSY Errors</source>
          <target state="translated">注册一个回调来处理SQLITE_BUSY错误。</target>
        </trans-unit>
        <trans-unit id="d7ada71741a5c5efe7fce5b9acb6e7cf75421e75" translate="yes" xml:space="preserve">
          <source>Register A Virtual Table Implementation</source>
          <target state="translated">注册一个虚拟表的实现</target>
        </trans-unit>
        <trans-unit id="dec56350bae0a4e19968f3a800e057cd6e40fed8" translate="yes" xml:space="preserve">
          <source>Register Conventions</source>
          <target state="translated">注册协议</target>
        </trans-unit>
        <trans-unit id="d6a9176e21963e771db7ce035be039cfe634a245" translate="yes" xml:space="preserve">
          <source>Register a GC factory under the given &lt;code&gt;name&lt;/code&gt;. This function must be called from a C constructor before druntime is initialized.</source>
          <target state="translated">在给定 &lt;code&gt;name&lt;/code&gt; 下注册GC工厂。在初始化druntime之前，必须从C构造函数调用此函数。</target>
        </trans-unit>
        <trans-unit id="27e9d001ff844d0976d90d94aa0606ae2ed35c58" translate="yes" xml:space="preserve">
          <source>Register a geometry callback named zGeom that can be used as part of an R-Tree geometry query as follows:</source>
          <target state="translated">注册一个名为zGeom的几何体回调,它可以作为R树几何体查询的一部分,如下所示。</target>
        </trans-unit>
        <trans-unit id="f7cd9ee60c35e855fd66e1ccd4c6ccf8e5a9a9d2" translate="yes" xml:space="preserve">
          <source>Register a handler which will be called whenever a character data segment is encountered.</source>
          <target state="translated">注册一个处理程序,每当遇到一个字符数据段时就会被调用。</target>
        </trans-unit>
        <trans-unit id="3f86fc9f835fccf504415dd945037249586048b2" translate="yes" xml:space="preserve">
          <source>Register a handler which will be called whenever a comment is encountered.</source>
          <target state="translated">注册一个处理程序,它将在遇到注释时被调用。</target>
        </trans-unit>
        <trans-unit id="5f49cc41b1a6ebd2be84f56709ff95c463e05d78" translate="yes" xml:space="preserve">
          <source>Register a handler which will be called whenever a processing instruction is encountered.</source>
          <target state="translated">注册一个处理程序,每当遇到处理指令时就会被调用。</target>
        </trans-unit>
        <trans-unit id="53ed0b4171eece2331ed206c51947ec94b63e3db" translate="yes" xml:space="preserve">
          <source>Register a handler which will be called whenever a start tag is encountered which matches the specified name. You can also pass null as the name, in which case the handler will be called for any unmatched start tag.</source>
          <target state="translated">注册一个处理程序,每当遇到与指定名称相匹配的起始标记时,就会被调用。您也可以传递空值作为名称,在这种情况下,处理程序将对任何未匹配的起始标记进行调用。</target>
        </trans-unit>
        <trans-unit id="e39c563e7a313c1ade7ea45c931c9334285e8ae0" translate="yes" xml:space="preserve">
          <source>Register a handler which will be called whenever an XML instruction is encountered.</source>
          <target state="translated">注册一个处理程序,每当遇到XML指令时就会被调用。</target>
        </trans-unit>
        <trans-unit id="efed3344dfe3f1bba75833c0811baa022c7151ab" translate="yes" xml:space="preserve">
          <source>Register a handler which will be called whenever an end tag is encountered which matches the specified name. You can also pass null as the name, in which case the handler will be called for any unmatched end tag.</source>
          <target state="translated">注册一个处理程序,每当遇到与指定名称相匹配的结束标记时就会被调用。您也可以传递null作为名称,在这种情况下,处理程序将对任何未匹配的结束标记进行调用。</target>
        </trans-unit>
        <trans-unit id="3cae7781266253f344125f060ac6212ca49c80d9" translate="yes" xml:space="preserve">
          <source>Register a handler which will be called whenever text is encountered.</source>
          <target state="translated">注册一个处理程序,每当遇到文本时就会被调用。</target>
        </trans-unit>
        <trans-unit id="6955c69b515fc5975384fa61e641237d355e91b3" translate="yes" xml:space="preserve">
          <source>Register an alternative handler which will be called whenever text is encountered. This differs from onText in that onText will decode the text, whereas onTextRaw will not. This allows you to make design choices, since onText will be more accurate, but slower, while onTextRaw will be faster, but less accurate. Of course, you can still call decode() within your handler, if you want, but you'd probably want to use onTextRaw only in circumstances where you know that decoding is unnecessary.</source>
          <target state="translated">注册一个替代处理程序,每当遇到文本时就会被调用。这与onText的不同之处在于,onText会对文本进行解码,而onTextRaw不会。这允许你做出设计上的选择,因为onText会更准确,但更慢,而onTextRaw会更快,但更不准确。当然,如果你想的话,你仍然可以在你的处理程序中调用 decode(),但是你可能只想在你知道不需要解码的情况下使用 onTextRaw。</target>
        </trans-unit>
        <trans-unit id="6a0a5ccb889da412cbc873c52366af12314ec3cd" translate="yes" xml:space="preserve">
          <source>Register an event handler that gets called to inform of upload/download progress.</source>
          <target state="translated">注册一个事件处理程序,该事件处理程序被调用来通知上传/下载进度。</target>
        </trans-unit>
        <trans-unit id="ff1854677201186d9c9212f2b4e865b72f837176" translate="yes" xml:space="preserve">
          <source>Register save state.</source>
          <target state="translated">注册保存状态。</target>
        </trans-unit>
        <trans-unit id="01d6516676cc4761c62be5bf5476c1abfdd730cf" translate="yes" xml:space="preserve">
          <source>Register the thread with the GC using &lt;a href=&quot;core_thread#thread_attachThis&quot;&gt;&lt;code&gt;core.thread.thread_attachThis&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;core_thread#thread_detachThis&quot;&gt;&lt;code&gt;core.thread.thread_detachThis&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;core_thread#thread_attachThis&quot;&gt; &lt;code&gt;core.thread.thread_attachThis&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;core_thread#thread_detachThis&quot;&gt; &lt;code&gt;core.thread.thread_detachThis&lt;/code&gt; &lt;/a&gt;在GC中注册线程。</target>
        </trans-unit>
        <trans-unit id="edea0b832f387410c45fe6d1c0257549b09c8463" translate="yes" xml:space="preserve">
          <source>Register/unregister such data with calls to &lt;a href=&quot;#addRoot&quot;&gt;&lt;code&gt;addRoot&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#removeRoot&quot;&gt;&lt;code&gt;removeRoot&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#addRange&quot;&gt;&lt;code&gt;addRange&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#removeRange&quot;&gt;&lt;code&gt;removeRange&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过调用&lt;a href=&quot;#addRoot&quot;&gt; &lt;code&gt;addRoot&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;#removeRoot&quot;&gt; &lt;code&gt;removeRoot&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#addRange&quot;&gt; &lt;code&gt;addRange&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;#removeRange&quot;&gt; &lt;code&gt;removeRange&lt;/code&gt; &lt;/a&gt;来注册/注销此类数据。</target>
        </trans-unit>
        <trans-unit id="b897a95101b262c6489ef352de771c8b1571a339" translate="yes" xml:space="preserve">
          <source>Registering the pointer with the garbage collector using the &lt;code&gt;core.memory.GC.addRoot&lt;/code&gt; or &lt;code&gt;core.memory.GC.addRange&lt;/code&gt; functions.</source>
          <target state="translated">使用 &lt;code&gt;core.memory.GC.addRoot&lt;/code&gt; 或 &lt;code&gt;core.memory.GC.addRange&lt;/code&gt; 函数向垃圾收集器注册指针。</target>
        </trans-unit>
        <trans-unit id="9456a7585dbba6618e38e2cf0c1b40317705af1f" translate="yes" xml:space="preserve">
          <source>Registering the pointer with the garbage collector with the  &lt;a href=&quot;https://dlang.org/phobos/core_memory.html#addRoot&quot;&gt;std.gc.addRoot()&lt;/a&gt; or  &lt;a href=&quot;https://dlang.org/phobos/core_memory.html#addRange&quot;&gt;std.gc.addRange()&lt;/a&gt; calls.</source>
          <target state="translated">通过&lt;a href=&quot;https://dlang.org/phobos/core_memory.html#addRoot&quot;&gt;std.gc.addRoot（）&lt;/a&gt;或 &lt;a href=&quot;https://dlang.org/phobos/core_memory.html#addRange&quot;&gt;std.gc.addRange（）&lt;/a&gt;调用向垃圾收集器注册指针 。</target>
        </trans-unit>
        <trans-unit id="90bf4d614bb16f0559935e0886c7ffb4188be7a3" translate="yes" xml:space="preserve">
          <source>Registers a subclass of EncodingScheme.</source>
          <target state="translated">注册EncodingScheme的一个子类。</target>
        </trans-unit>
        <trans-unit id="b7e857971158f12b16058966ec09aca7b8486cbc" translate="yes" xml:space="preserve">
          <source>Registers the calling thread for use with the D Runtime. If this routine is called for a thread which is already registered, no action is performed.</source>
          <target state="translated">注册调用的线程,以便在D运行时使用。如果这个例程是为一个已经注册的线程调用的,则不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="0d807038b92eb05d2d4d996579e00a6bf77015a3" translate="yes" xml:space="preserve">
          <source>Registers, the stack, and any other memory locations added through the &lt;code&gt;GC.&lt;a href=&quot;#addRange&quot;&gt;addRange&lt;/a&gt;&lt;/code&gt; function are always scanned conservatively. This means that even if a variable is e.g. of type &lt;code&gt;float&lt;/code&gt;, it will still be scanned for possible GC pointers. And, if the word-interpreted representation of the variable matches a GC-managed memory block's address, that memory block is considered live.</source>
          <target state="translated">通过 &lt;code&gt;GC.&lt;a href=&quot;#addRange&quot;&gt;addRange&lt;/a&gt;&lt;/code&gt; 添加的寄存器，堆栈和任何其他内存位置。始终保守地扫描addRange函数。这意味着即使一个变量是 &lt;code&gt;float&lt;/code&gt; 类型的，它仍然会被扫描以寻找可能的GC指针。并且，如果该变量的字词解释表示与GC管理的内存块的地址匹配，则该内存块被认为是活动的。</target>
        </trans-unit>
        <trans-unit id="5b77408c10909bc0e4a1441a15652a3747f0e210" translate="yes" xml:space="preserve">
          <source>Regular &lt;code&gt;const&lt;/code&gt; object references cannot be reassigned.</source>
          <target state="translated">常规 &lt;code&gt;const&lt;/code&gt; 对象引用不能重新分配。</target>
        </trans-unit>
        <trans-unit id="cdfc76a8a310b7e8a9f6d61d4031ccd974b4fe97" translate="yes" xml:space="preserve">
          <source>Regular expression</source>
          <target state="translated">正则表达式</target>
        </trans-unit>
        <trans-unit id="088c8e28a39e0058c13e1b8ee79195564f351b32" translate="yes" xml:space="preserve">
          <source>Regular expressions.</source>
          <target state="translated">正则表达式。</target>
        </trans-unit>
        <trans-unit id="fd6d66abf1a8ee45e161caa22d14d8ff00b9253c" translate="yes" xml:space="preserve">
          <source>Rehash AA</source>
          <target state="translated">翻炒AA</target>
        </trans-unit>
        <trans-unit id="06c2ca43698227e0fcb6a7292c225e67ef6b66a5" translate="yes" xml:space="preserve">
          <source>Reimplement the C++ code in the other language.</source>
          <target state="translated">用其他语言重新实现C++代码。</target>
        </trans-unit>
        <trans-unit id="84b24ec52a5a43fadddf1e2db347899274e99845" translate="yes" xml:space="preserve">
          <source>Reinitializes the digest, making it ready for reuse.</source>
          <target state="translated">重新初始化消化液,使其可以重复使用。</target>
        </trans-unit>
        <trans-unit id="317e3bbd4de02d1f0fdb5403ae3e2fd76d3e03bc" translate="yes" xml:space="preserve">
          <source>Reinterpretation of overlapped fields in a Union is not permitted.</source>
          <target state="translated">不允许重新解释联盟中重叠的字段。</target>
        </trans-unit>
        <trans-unit id="13bed85e379f26741bf756020202c97a912d20f5" translate="yes" xml:space="preserve">
          <source>Rejang</source>
          <target state="translated">Rejang</target>
        </trans-unit>
        <trans-unit id="57b70c2469abaef03dad4e83ea9bb219f9fc54a1" translate="yes" xml:space="preserve">
          <source>Relational Expressions</source>
          <target state="translated">关系表达式</target>
        </trans-unit>
        <trans-unit id="150f549109a3258102c45788bb4ad19927962624" translate="yes" xml:space="preserve">
          <source>Relative tolerance.</source>
          <target state="translated">相对容忍度。</target>
        </trans-unit>
        <trans-unit id="319ce06e27d0813f037c481a41b87a9a39ab0a62" translate="yes" xml:space="preserve">
          <source>Release and deallocate the string.</source>
          <target state="translated">释放并重新分配字符串。</target>
        </trans-unit>
        <trans-unit id="12ce12c0a47c490c07a3f2a6fc77a3c4d085937a" translate="yes" xml:space="preserve">
          <source>Releases a read lock on the enclosing mutex.</source>
          <target state="translated">释放包围的mutex上的读锁。</target>
        </trans-unit>
        <trans-unit id="407ba71dd655b8bec16ad1bb13ead45c2966e1d4" translate="yes" xml:space="preserve">
          <source>Releases a write lock on the enclosing mutex.</source>
          <target state="translated">释放包围的mutex上的写锁。</target>
        </trans-unit>
        <trans-unit id="77b301bef933459296e302975b05bd47a1ea9666" translate="yes" xml:space="preserve">
          <source>Releases the controlled range and returns it.</source>
          <target state="translated">释放受控范围并返回。</target>
        </trans-unit>
        <trans-unit id="fe5cc4d52ac22fbad50329229957a797b645b197" translate="yes" xml:space="preserve">
          <source>Reliably-delivered message datagrams</source>
          <target state="translated">可靠传递的信息数据报。</target>
        </trans-unit>
        <trans-unit id="d7020f448aaf8aacc8b4d63537e375e865fff9d8" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">Remarks</target>
        </trans-unit>
        <trans-unit id="b685a7378dfdac22312b42db0dd99b4c40578868" translate="yes" xml:space="preserve">
          <source>Remote endpoint &lt;code&gt;Address&lt;/code&gt;.</source>
          <target state="translated">远程端点 &lt;code&gt;Address&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b863d8a2db82afa5de2c971ac69ebf4948e3391" translate="yes" xml:space="preserve">
          <source>Remove TemplateInstance from table of instances.</source>
          <target state="translated">从实例表中删除TemplateInstance。</target>
        </trans-unit>
        <trans-unit id="911efbaa270338e46274d0437cfd895711d3b921" translate="yes" xml:space="preserve">
          <source>Remove Unnecessary Virtual Table Implementations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f1335d8dabb3f2ac77dc497547d4995b437d34" translate="yes" xml:space="preserve">
          <source>Remove a slot from the list of slots to be called when emit() is called.</source>
          <target state="translated">当调用emit()时,从槽的列表中删除一个要调用的槽。</target>
        </trans-unit>
        <trans-unit id="75c75293ff88caf368db2e508c8e1161c864acea" translate="yes" xml:space="preserve">
          <source>Remove all elements from AA.</source>
          <target state="translated">删除AA中的所有元素。</target>
        </trans-unit>
        <trans-unit id="eb8a35f077465bebcc48319892d3eb238d336255" translate="yes" xml:space="preserve">
          <source>Remove an element from the container and return its value.</source>
          <target state="translated">从容器中移除一个元素并返回其值。</target>
        </trans-unit>
        <trans-unit id="2ef8e1749b1fc437ff3dd8997a6863e34ef9b467" translate="yes" xml:space="preserve">
          <source>Remove current item from the target.</source>
          <target state="translated">从目标中删除当前项目。</target>
        </trans-unit>
        <trans-unit id="ef520f86e83572f8100d972f9ff0fca73044fe5b" translate="yes" xml:space="preserve">
          <source>Remove directory &lt;code&gt;pathname&lt;/code&gt;.</source>
          <target state="translated">删除目录 &lt;code&gt;pathname&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc42c333904a152e0371e3be4d6f7919bec779ea" translate="yes" xml:space="preserve">
          <source>Remove directory and all of its content and subdirectories, recursively.</source>
          <target state="translated">递归删除目录及其所有内容和子目录。</target>
        </trans-unit>
        <trans-unit id="631a5717be79d54a0f16f3bed5d4ad090c4d25b3" translate="yes" xml:space="preserve">
          <source>Remove extension from path.</source>
          <target state="translated">从路径中删除分机。</target>
        </trans-unit>
        <trans-unit id="cd762caea3eabb789e6ab4d0e09af278ebb8a90b" translate="yes" xml:space="preserve">
          <source>Remove first element in list pointed to by *plist.</source>
          <target state="translated">删除*plist指向的列表中的第一个元素。</target>
        </trans-unit>
        <trans-unit id="a1d96d78926d702cadc6baa739e5e800797a01cf" translate="yes" xml:space="preserve">
          <source>Remove ptr from the list pointed to by *plist.</source>
          <target state="translated">从*plist指向的列表中删除ptr。</target>
        </trans-unit>
        <trans-unit id="0c6e9538ea69883d3ecf28f9d62eeee3a4133338" translate="yes" xml:space="preserve">
          <source>Remove the back element from the container.</source>
          <target state="translated">从容器中取出背面元件。</target>
        </trans-unit>
        <trans-unit id="5f6f354b54c230d18d3298b80d72e9218a763a5c" translate="yes" xml:space="preserve">
          <source>Remove the front element from the container.</source>
          <target state="translated">从容器中取出前端元件。</target>
        </trans-unit>
        <trans-unit id="6900d371c19fc14c228483aaf602f3b566bac1e3" translate="yes" xml:space="preserve">
          <source>Remove this &lt;code&gt;Socket&lt;/code&gt; from the collection. Does nothing if the socket is not in the collection already.</source>
          <target state="translated">从集合中删除此 &lt;code&gt;Socket&lt;/code&gt; 。如果套接字不在集合中，则不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="d805766d2be060b325c570e416be292b8eacdf84" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;inout&lt;/code&gt; and &lt;code&gt;immutable&lt;/code&gt; qualifiers, if any, from type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3559a0d3d649dde4006e69577d56dd5d58334be" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;howMany&lt;/code&gt; values at the front or back of the container. Unlike the unparameterized versions above, these functions do not throw if they could not remove &lt;code&gt;howMany&lt;/code&gt; elements. Instead, if &lt;code&gt;howMany &amp;gt; n&lt;/code&gt;, all elements are removed. The returned value is the effective number of elements removed. The stable version behaves the same, but guarantees that ranges iterating over the container are never invalidated.</source>
          <target state="translated">删除容器正面或背面的 &lt;code&gt;howMany&lt;/code&gt; 值。与上面的未参数化版本不同，这些函数如果无法删除 &lt;code&gt;howMany&lt;/code&gt; 元素，则不会抛出。相反，如果 &lt;code&gt;howMany &amp;gt; n&lt;/code&gt; ，则会删除所有元素。返回值是已删除元素的有效数量。稳定版本的行为相同，但是保证在容器上进行迭代的范围永远不会失效。</target>
        </trans-unit>
        <trans-unit id="fd9a9235e5cccef072272c7923dca8d8b8f07aae" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;howMany&lt;/code&gt; values from the back of the array. Unlike the unparameterized versions above, these functions do not throw if they could not remove &lt;code&gt;howMany&lt;/code&gt; elements. Instead, if &lt;code&gt;howMany &amp;gt; n&lt;/code&gt;, all elements are removed. The returned value is the effective number of elements removed. Both stable and non-stable versions behave the same and guarantee that ranges iterating over the array are never invalidated.</source>
          <target state="translated">从数组后面删除 &lt;code&gt;howMany&lt;/code&gt; 值。与上面的未参数化版本不同，这些函数如果无法删除 &lt;code&gt;howMany&lt;/code&gt; 元素，则不会抛出。相反，如果 &lt;code&gt;howMany &amp;gt; n&lt;/code&gt; ，则会删除所有元素。返回值是已删除元素的有效数量。稳定版本和非稳定版本的行为相同，并保证在数组上进行迭代的范围永远不会无效。</target>
        </trans-unit>
        <trans-unit id="addb914fa84c3dfd2a72159ee45446c0b9555156" translate="yes" xml:space="preserve">
          <source>Removes a &lt;code&gt;Take!Range&lt;/code&gt; from the list in linear time.</source>
          <target state="translated">&lt;code&gt;Take!Range&lt;/code&gt; 线性时间从列表中删除&amp;ldquo;取走&amp;rdquo;范围。</target>
        </trans-unit>
        <trans-unit id="dc8eb20e88cf67b206b1391540476e846637572f" translate="yes" xml:space="preserve">
          <source>Removes a range from the list in linear time.</source>
          <target state="translated">以线性时间从列表中删除一个范围。</target>
        </trans-unit>
        <trans-unit id="1a9007b9058ef9a3903e0d1fb414c46ab4c82ff7" translate="yes" xml:space="preserve">
          <source>Removes adjacent duplicates in the replaced characters</source>
          <target state="translated">删除被替换字符中相邻的重复字符</target>
        </trans-unit>
        <trans-unit id="82e07e864b86b15ec0cc3fba83690f2c78c43614" translate="yes" xml:space="preserve">
          <source>Removes all contents from the &lt;code&gt;DList&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;DList&lt;/code&gt; 中删除所有内容。</target>
        </trans-unit>
        <trans-unit id="8175fe2e2ec533fb2f3ea71d6a45a80e5440f359" translate="yes" xml:space="preserve">
          <source>Removes all contents from the &lt;code&gt;SList&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;SList&lt;/code&gt; 中删除所有内容。</target>
        </trans-unit>
        <trans-unit id="75a0a6b20196bebd245c2ff665536f61dadef567" translate="yes" xml:space="preserve">
          <source>Removes all elements belonging to &lt;code&gt;r&lt;/code&gt;, which must be a range obtained originally from this array.</source>
          <target state="translated">删除属于 &lt;code&gt;r&lt;/code&gt; 的所有元素，这些元素必须是最初从此数组获得的范围。</target>
        </trans-unit>
        <trans-unit id="0e97a7143be5fd7ae56f54b099fdd911c66752ab" translate="yes" xml:space="preserve">
          <source>Removes all elements belonging to &lt;code&gt;r&lt;/code&gt;, which must be a range obtained originally from this container.</source>
          <target state="translated">删除属于 &lt;code&gt;r&lt;/code&gt; 的所有元素，这些元素必须是最初从此容器获得的范围。</target>
        </trans-unit>
        <trans-unit id="074271442d6e43c7b52454c97a1ae8585ac07608" translate="yes" xml:space="preserve">
          <source>Removes all elements from the container.</source>
          <target state="translated">删除容器中的所有元素。</target>
        </trans-unit>
        <trans-unit id="cfe7abf427175ea51be638f2e8dcfba88e79ecb6" translate="yes" xml:space="preserve">
          <source>Removes all elements in &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">删除 &lt;code&gt;c&lt;/code&gt; 中的所有元素。</target>
        </trans-unit>
        <trans-unit id="1820e48ea8075f93dbc2ec4a43a2a49c33ceea08" translate="yes" xml:space="preserve">
          <source>Removes all qualifiers, if any, from type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">从类型 &lt;code&gt;T&lt;/code&gt; 中删除所有限定符（如果有）。</target>
        </trans-unit>
        <trans-unit id="fd8f4dfcc1465521c65a643873e1ea126d72af99" translate="yes" xml:space="preserve">
          <source>Removes all remaining keys and values from an associative array.</source>
          <target state="translated">删除关联数组中所有剩余的键和值。</target>
        </trans-unit>
        <trans-unit id="be15e0fe1f9b54312d80c112a03dc732d3756fc0" translate="yes" xml:space="preserve">
          <source>Removes all remaining keys and values from an associative array. The array is not rehashed after removal, to allow for the existing storage to be reused. This will affect all references to the same instance and is not equivalent to &lt;code&gt;destroy(aa)&lt;/code&gt; which only sets the current reference to &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">从关联数组中删除所有剩余的键和值。删除后不会重新整理该阵列，以允许重新使用现有存储。这将影响对同一实例的所有引用，并且不等同于 &lt;code&gt;destroy(aa)&lt;/code&gt; ，后者仅将当前引用设置为 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2539889e4a74104395775fc90c686d35222e93f9" translate="yes" xml:space="preserve">
          <source>Removes all the elements from the array and releases allocated memory.</source>
          <target state="translated">从数组中删除所有元素并释放分配的内存。</target>
        </trans-unit>
        <trans-unit id="47e7efc48f66745492317dd0c9d48a2d48b3f8e8" translate="yes" xml:space="preserve">
          <source>Removes an element from &lt;code&gt;c&lt;/code&gt; by using its key &lt;code&gt;k&lt;/code&gt;. The key's type is defined by the container.</source>
          <target state="translated">使用键 &lt;code&gt;k&lt;/code&gt; 从 &lt;code&gt;c&lt;/code&gt; 中删除元素。密钥的类型由容器定义。</target>
        </trans-unit>
        <trans-unit id="dae543f0af9eec290f3eb7fdbbc40f6e017b4fb3" translate="yes" xml:space="preserve">
          <source>Removes elements from a range in-place, and returns the shortened range.</source>
          <target state="translated">从一个范围中原地删除元素,并返回缩短后的范围。</target>
        </trans-unit>
        <trans-unit id="c493f84cfc3c4feee7c79564596fe7fdcb5c63bf" translate="yes" xml:space="preserve">
          <source>Removes elements from the container that are equal to the given values according to the less comparator. One element is removed for each value given which is in the container. If &lt;code&gt;allowDuplicates&lt;/code&gt; is true, duplicates are removed only if duplicate values are given.</source>
          <target state="translated">根据较小的比较器，从容器中删除等于给定值的元素。对于容器中给定的每个值，将删除一个元素。如果 &lt;code&gt;allowDuplicates&lt;/code&gt; 为true，则仅当给出重复值时才删除重复项。</target>
        </trans-unit>
        <trans-unit id="d3a3a979612bf67fc2aa4b68f4c12df6bbd7d178" translate="yes" xml:space="preserve">
          <source>Removes first element of &lt;code&gt;r&lt;/code&gt;, wich must be a range obtained originally from this container, from both DList instance and range &lt;code&gt;r&lt;/code&gt;.</source>
          <target state="translated">移除 &lt;code&gt;r&lt;/code&gt; 的第一个元素，该元素必须是从此容器最初从DList实例和范围 &lt;code&gt;r&lt;/code&gt; 获得的范围。</target>
        </trans-unit>
        <trans-unit id="95935f8457aff7b5a968195ed76aa4bcc48a8f64" translate="yes" xml:space="preserve">
          <source>Removes last element of &lt;code&gt;r&lt;/code&gt;, wich must be a range obtained originally from this container, from both DList instance and range &lt;code&gt;r&lt;/code&gt;.</source>
          <target state="translated">移除 &lt;code&gt;r&lt;/code&gt; 的最后一个元素，该元素必须是从此容器最初从DList实例和范围 &lt;code&gt;r&lt;/code&gt; 获得的范围。</target>
        </trans-unit>
        <trans-unit id="6684e70de240c57633f3587686dfebd4c3d3a9a9" translate="yes" xml:space="preserve">
          <source>Removes matching characters with no corresponding replacement in &lt;code&gt;to&lt;/code&gt;</source>
          <target state="translated">删除匹配的字符，但不替换 &lt;code&gt;to&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a36e8bc52f0cb7fc5c28528b40cbb5d9beca0a7" translate="yes" xml:space="preserve">
          <source>Removes one level of indentation from a multi-line string.</source>
          <target state="translated">删除多行字符串中的一级缩进。</target>
        </trans-unit>
        <trans-unit id="c9ac994ea3d66d3ae9bb1c1409c6a95c45a3430a" translate="yes" xml:space="preserve">
          <source>Removes one level of indentation from an array of single-line strings.</source>
          <target state="translated">删除单行字符串数组中的一级缩进。</target>
        </trans-unit>
        <trans-unit id="8d03d645309a888edd15ae678f3a8f2547f961ab" translate="yes" xml:space="preserve">
          <source>Removes range &lt;code&gt;r&lt;/code&gt; from &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;c&lt;/code&gt; 删除范围 &lt;code&gt;r&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c41329deed9a4efcf10b2176fe664a54a868889b" translate="yes" xml:space="preserve">
          <source>Removes some element from &lt;code&gt;c&lt;/code&gt; and returns it.</source>
          <target state="translated">从 &lt;code&gt;c&lt;/code&gt; 中删除一些元素并返回它。</target>
        </trans-unit>
        <trans-unit id="795d2a2abe70d609076ec29434081e4af8f7996d" translate="yes" xml:space="preserve">
          <source>Removes t from the list of tracked threads. No operation will be performed if t is not currently being tracked by this object.</source>
          <target state="translated">从跟踪的线程列表中删除t。如果t当前没有被此对象跟踪,则不会执行任何操作。</target>
        </trans-unit>
        <trans-unit id="70aedbf39f8f6fcd708877752a1af453718e4db0" translate="yes" xml:space="preserve">
          <source>Removes the</source>
          <target state="translated">移除</target>
        </trans-unit>
        <trans-unit id="13848bdb3a5c4c945e8d9cbbcd02b78456d6dbbc" translate="yes" xml:space="preserve">
          <source>Removes the back element of a bidirectional range.</source>
          <target state="translated">移除双向范围的背面元素。</target>
        </trans-unit>
        <trans-unit id="9b25f64637087f5bc835983e78f87843694c7284" translate="yes" xml:space="preserve">
          <source>Removes the element at the front of &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">删除 &lt;code&gt;c&lt;/code&gt; 前面的元素。</target>
        </trans-unit>
        <trans-unit id="fca4fdd739d47d6c1b34541a0791727eff309f4b" translate="yes" xml:space="preserve">
          <source>Removes the environment variable with the given &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">删除具有给定 &lt;code&gt;name&lt;/code&gt; 的环境变量。</target>
        </trans-unit>
        <trans-unit id="6324e03d9ca2678306eaf46ea102878a3613739d" translate="yes" xml:space="preserve">
          <source>Removes the first occurence of an element from the list in linear time.</source>
          <target state="translated">以线性时间从列表中删除第一个出现的元素。</target>
        </trans-unit>
        <trans-unit id="652d4bcd6c0fc440c5d0b59e40bce2ada610fab1" translate="yes" xml:space="preserve">
          <source>Removes the front element of a range.</source>
          <target state="translated">移除一个范围的前面元素。</target>
        </trans-unit>
        <trans-unit id="31c8ae15c1926b56286e17a3190d64eeb4f25b68" translate="yes" xml:space="preserve">
          <source>Removes the given &lt;code&gt;Take!Range&lt;/code&gt; from the container</source>
          <target state="translated">从容器中删除给定的 &lt;code&gt;Take!Range&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c383d74900ae2bcccad5a644d221fce85c312a43" translate="yes" xml:space="preserve">
          <source>Removes the given range from the container.</source>
          <target state="translated">从容器中删除给定的范围。</target>
        </trans-unit>
        <trans-unit id="86c9b1ac5622dfeb8165992599f02a61fa32e5d6" translate="yes" xml:space="preserve">
          <source>Removes the largest element from the heap and returns a copy of it. The element still resides in the heap's store. For performance reasons you may want to use &lt;code&gt;removeFront&lt;/code&gt; with heaps of objects that are expensive to copy.</source>
          <target state="translated">从堆中删除最大的元素并返回其副本。该元素仍然驻留在堆的存储区中。出于性能原因，您可能希望将 &lt;code&gt;removeFront&lt;/code&gt; 与复制成本很高的对象堆一起使用。</target>
        </trans-unit>
        <trans-unit id="472ee9cd76c07924e78135a137e5d8d96adefe30" translate="yes" xml:space="preserve">
          <source>Removes the largest element from the heap.</source>
          <target state="translated">从堆中移除最大的元素。</target>
        </trans-unit>
        <trans-unit id="8b4b3acb6c78ef961701e3874973b44eb7f03d0b" translate="yes" xml:space="preserve">
          <source>Removes the last element from the array and returns it. Both stable and non-stable versions behave the same and guarantee that ranges iterating over the array are never invalidated.</source>
          <target state="translated">从数组中删除最后一个元素并返回。稳定版和非稳定版的行为是一样的,并保证在数组上迭代的范围永远不会无效。</target>
        </trans-unit>
        <trans-unit id="cbfc6a524cbf983c49e24e9a353029ae2447c16d" translate="yes" xml:space="preserve">
          <source>Removes the lock over the specified file segment.</source>
          <target state="translated">取消对指定文件段的锁定。</target>
        </trans-unit>
        <trans-unit id="9f480d4e378340c1a84ecb186d38dcd03da28157" translate="yes" xml:space="preserve">
          <source>Removes the memory block referenced by p from an internal list of roots to be scanned during a collection. If p is null or is not a value previously passed to addRoot() then no operation is performed.</source>
          <target state="translated">从内部的根列表中删除p引用的内存块,以便在收集过程中进行扫描。如果p为空或者不是之前传递给addRoot()的值,则不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="39ee0e4eeade1b792b1844870c943280497316dc" translate="yes" xml:space="preserve">
          <source>Removes the memory mapping causing all physical memory to be decommited and the virtual address space to be reclaimed.</source>
          <target state="translated">移除内存映射,导致所有物理内存被解密,虚拟地址空间被回收。</target>
        </trans-unit>
        <trans-unit id="ba9c920fa73d4e35936a77ebc5bf0f649f228b82" translate="yes" xml:space="preserve">
          <source>Removes the memory range starting at p from an internal list of ranges to be scanned during a collection. If p is null or does not represent a value previously passed to addRange() then no operation is performed.</source>
          <target state="translated">从内部的范围列表中删除从p开始的内存范围,以便在收集过程中进行扫描。如果p为空或者不代表之前传递给addRange()的值,则不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="81d852ce25ceb246e735f784209b6e858afa3347" translate="yes" xml:space="preserve">
          <source>Removes the registered name associated with a tid.</source>
          <target state="translated">删除与tid关联的注册名称。</target>
        </trans-unit>
        <trans-unit id="0c60420ccfdbfc083a2df49308225876e57a8c42" translate="yes" xml:space="preserve">
          <source>Removes the value at the back of &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">删除 &lt;code&gt;c&lt;/code&gt; 后面的值。</target>
        </trans-unit>
        <trans-unit id="c9a77b02f79effe6f57835d97c27484ed5fcbae5" translate="yes" xml:space="preserve">
          <source>Removes the value at the front of the container. The stable version behaves the same, but guarantees that ranges iterating over the container are never invalidated.</source>
          <target state="translated">移除容器前面的值。稳定版的行为是一样的,但保证在容器上迭代的范围永远不会无效。</target>
        </trans-unit>
        <trans-unit id="eadd2b6a6ae0fdbbe767f971e4e3f148b99d9df6" translate="yes" xml:space="preserve">
          <source>Removes the value at the front/back of the container. The stable version behaves the same, but guarantees that ranges iterating over the container are never invalidated.</source>
          <target state="translated">移除容器前/后的值。稳定版的行为是一样的,但保证在容器上迭代的范围永远不会无效。</target>
        </trans-unit>
        <trans-unit id="d900deb1527f0011ed753db4ca48cefc07c96afd" translate="yes" xml:space="preserve">
          <source>Removes the value from the back of the array. Both stable and non-stable versions behave the same and guarantee that ranges iterating over the array are never invalidated.</source>
          <target state="translated">从数组的后面删除数值。稳定版和非稳定版的行为是一样的,并保证在数组上迭代的范围永远不会失效。</target>
        </trans-unit>
        <trans-unit id="4436837a957bd66609b37183ee307dcfa2107e76" translate="yes" xml:space="preserve">
          <source>Removing Immutable or Const with a Cast</source>
          <target state="translated">用Cast去除不可变或const的方法</target>
        </trans-unit>
        <trans-unit id="1956e1d291b4925492f6f19c22212b769e17b004" translate="yes" xml:space="preserve">
          <source>Removing Keys</source>
          <target state="translated">移除钥匙</target>
        </trans-unit>
        <trans-unit id="a8c4af8493e80b02a246117533ff5d93a66f0ed0" translate="yes" xml:space="preserve">
          <source>Removing the need to ensure that Druntime is properly initialized on calls to the library, for situations when an initialization step is not performed or would be difficult to insert before the library is used.</source>
          <target state="translated">取消了在调用库时确保Druntime被正确初始化的需求,适用于没有执行初始化步骤或在使用库前难以插入的情况。</target>
        </trans-unit>
        <trans-unit id="615a81bbcb0f0fb40dff346fcc5d1c5d76be785c" translate="yes" xml:space="preserve">
          <source>Rename file &lt;code&gt;from&lt;/code&gt; to &lt;code&gt;to&lt;/code&gt;, moving it between directories if required. If the target file exists, it is overwritten.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d2ea7d71c7337c5f32dfe9de60569c8bb4f7e7" translate="yes" xml:space="preserve">
          <source>Rename file &lt;code&gt;from&lt;/code&gt; to &lt;code&gt;to&lt;/code&gt;. If the target file exists, it is overwritten.</source>
          <target state="translated">重命名文件 &lt;code&gt;from&lt;/code&gt; 到 &lt;code&gt;to&lt;/code&gt; 。如果目标文件存在，则将其覆盖。</target>
        </trans-unit>
        <trans-unit id="a6a2b2ae27b46e065f541c1730f231403c853815" translate="yes" xml:space="preserve">
          <source>Renamed Imports</source>
          <target state="translated">重新命名为进口</target>
        </trans-unit>
        <trans-unit id="195092f497acfd79b395280ba71e508accf6a5d3" translate="yes" xml:space="preserve">
          <source>Renamed and Selective Imports</source>
          <target state="translated">重命名和选择性进口</target>
        </trans-unit>
        <trans-unit id="85da1ab2956f6cb95897f3c01f96cccb6210bd74" translate="yes" xml:space="preserve">
          <source>Renames the elements of a &lt;a href=&quot;#Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">重命名&lt;a href=&quot;#Tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt;的元素。</target>
        </trans-unit>
        <trans-unit id="6cd7560b9ee83b5295805b38930388ee9edbeb39" translate="yes" xml:space="preserve">
          <source>Reorders the random-access range &lt;code&gt;r&lt;/code&gt; such that the range &lt;code&gt;r[0 .. mid]&lt;/code&gt; is the same as if the entire &lt;code&gt;r&lt;/code&gt; were sorted, and leaves the range &lt;code&gt;r[mid .. r.length]&lt;/code&gt; in no particular order. Performs &amp;Omicron;(&lt;code&gt;r.length * log(mid)&lt;/code&gt;) evaluations of &lt;code&gt;pred&lt;/code&gt;. The implementation simply calls &lt;code&gt;topN!(less, ss)(r, n)&lt;/code&gt; and then &lt;code&gt;sort!(less, ss)(r[0 .. n])&lt;/code&gt;.</source>
          <target state="translated">重新排序随机访问范围 &lt;code&gt;r&lt;/code&gt; ，以使范围 &lt;code&gt;r[0 .. mid]&lt;/code&gt; &lt;code&gt;r[mid .. r.length]&lt;/code&gt; 与对整个 &lt;code&gt;r&lt;/code&gt; 进行排序时相同，并且不以特定顺序保留范围r [mid..r.length]。执行 &lt;code&gt;pred&lt;/code&gt; 的 &amp;Omicron;（ &lt;code&gt;r.length * log(mid)&lt;/code&gt; ）个评估。该实现只调用 &lt;code&gt;topN!(less, ss)(r, n)&lt;/code&gt; ，然后 &lt;code&gt;sort!(less, ss)(r[0 .. n])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8038fb87bf153233f30456c9053a8cdde880ad70" translate="yes" xml:space="preserve">
          <source>Reorders the range &lt;code&gt;r&lt;/code&gt; using &lt;code&gt;swap&lt;/code&gt; such that &lt;code&gt;r[nth]&lt;/code&gt; refers to the element that would fall there if the range were fully sorted. In addition, it also partitions &lt;code&gt;r&lt;/code&gt; such that all elements &lt;code&gt;e1&lt;/code&gt; from &lt;code&gt;r[0]&lt;/code&gt; to &lt;code&gt;r[nth]&lt;/code&gt; satisfy &lt;code&gt;!less(r[nth], e1)&lt;/code&gt;, and all elements &lt;code&gt;e2&lt;/code&gt; from &lt;code&gt;r[nth]&lt;/code&gt; to &lt;code&gt;r[r.length]&lt;/code&gt; satisfy &lt;code&gt;!less(e2, r[nth])&lt;/code&gt;. Effectively, it finds the nth smallest (according to &lt;code&gt;less&lt;/code&gt;) elements in &lt;code&gt;r&lt;/code&gt;. Performs an expected &amp;Omicron;(&lt;code&gt;r.length&lt;/code&gt;) (if unstable) or &amp;Omicron;(&lt;code&gt;r.length * log(r.length)&lt;/code&gt;) (if stable) evaluations of &lt;code&gt;less&lt;/code&gt; and &lt;code&gt;swap&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;swap&lt;/code&gt; 对范围 &lt;code&gt;r&lt;/code&gt; 进行重新排序，以使 &lt;code&gt;r[nth]&lt;/code&gt; 引用如果对范围进行完全排序将落在此处的元素。另外，它还对 &lt;code&gt;r&lt;/code&gt; 进行分区，以使从 &lt;code&gt;r[0]&lt;/code&gt; 到 &lt;code&gt;r[nth]&lt;/code&gt; 所有元素 &lt;code&gt;e1&lt;/code&gt; 都满足 &lt;code&gt;!less(r[nth], e1)&lt;/code&gt; 和从 &lt;code&gt;r[nth]&lt;/code&gt; 到 &lt;code&gt;r[r.length]&lt;/code&gt; 所有元素 &lt;code&gt;e2&lt;/code&gt; 。满足 &lt;code&gt;!less(e2, r[nth])&lt;/code&gt; 。有效地，它找到 &lt;code&gt;r&lt;/code&gt; 中的第n个最小元素（根据 &lt;code&gt;less&lt;/code&gt; ）。执行预期的&amp;Omicron;（ &lt;code&gt;r.length&lt;/code&gt; ）（如果不稳定）或&amp;Omicron;（ &lt;code&gt;r.length * log(r.length)&lt;/code&gt; ）（如果稳定）对 &lt;code&gt;less&lt;/code&gt; 和 &lt;code&gt;swap&lt;/code&gt; 的求值。</target>
        </trans-unit>
        <trans-unit id="de24de649aea23a9bd651f6497986efa24e8227f" translate="yes" xml:space="preserve">
          <source>Reorganizes the associative array in place so that lookups are more efficient.</source>
          <target state="translated">将关联数组重组到位,使查找效率更高。</target>
        </trans-unit>
        <trans-unit id="98df419e01e1f124bfb5c8dae37de763c48f0fe0" translate="yes" xml:space="preserve">
          <source>Reorganizes the associative array in place so that lookups are more efficient. &lt;code&gt;rehash&lt;/code&gt; is effective when, for example, the program is done loading up a symbol table and now needs fast lookups in it. Returns a reference to the reorganized array.</source>
          <target state="translated">重新组织就位的关联数组，以使查找效率更高。例如，当程序完成加载符号表并且现在需要在其中进行快速查找时，重新 &lt;code&gt;rehash&lt;/code&gt; 有效。返回对重组数组的引用。</target>
        </trans-unit>
        <trans-unit id="99a71dbb730bee0ec8b3946c012b2412dfb67ac6" translate="yes" xml:space="preserve">
          <source>Repeat a list of dt_t's count times.</source>
          <target state="translated">重复dt_t的计数次数列表。</target>
        </trans-unit>
        <trans-unit id="fa5270aa9f7862a9975dafc310721f15e957c201" translate="yes" xml:space="preserve">
          <source>Repeat the process for each character until the attacker has the whole correct token and the server accepts the harmful data. This can be done in a week with the attacker pacing the attack to 10 requests per second with only one client.</source>
          <target state="translated">对每一个字符重复这个过程,直到攻击者拥有整个正确的令牌,服务器接受有害数据。这可以在一个星期内完成,攻击者的攻击节奏为每秒10次请求,只有一个客户端。</target>
        </trans-unit>
        <trans-unit id="cdb1a2a478b2a5cb7ca163524e5848919392e356" translate="yes" xml:space="preserve">
          <source>Repeat!T &lt;strong id=&quot;repeat&quot;&gt;repeat&lt;/strong&gt;(T)(T value);</source>
          <target state="translated">重复！T &lt;strong id=&quot;repeat&quot;&gt;重复&lt;/strong&gt;（T）（T值）;</target>
        </trans-unit>
        <trans-unit id="7067badd8dd97b0c84af9ca2ddae890cba0074e1" translate="yes" xml:space="preserve">
          <source>Repeated calls to this function will return a new struct each time, until a special &quot;end of msgs&quot; struct is returned as a signal that there is no more to get at this point.  The data the returned pointer points to will not survive calling curl_multi_cleanup().  The 'CURLMsg' struct is meant to be very simple and only contain very basic informations. If more involved information is wanted, we will provide the particular &quot;transfer handle&quot; in that struct and that should/could/would be used in subsequent curl_easy_getinfo() calls (or similar). The point being that we must never expose complex structs to applications, as then we'll undoubtably get backwards compatibility problems in the future.</source>
          <target state="translated">重复调用这个函数,每次都会返回一个新的结构,直到返回一个特殊的 &quot;msgs结束 &quot;结构,作为此时没有更多数据可获取的信号。返回的指针所指向的数据在调用curl_multi_cleanup()后将无法存活。'CURLMsg'结构的目的是非常简单的,只包含非常基本的信息。如果需要更多的信息,我们会在这个结构中提供特定的 &quot;传输句柄&quot;,而这个句柄应该/应该/应该在随后的curl_easy_getinfo()调用(或者类似的调用)中使用。重点是,我们绝对不能将复杂的结构暴露给应用程序,因为那样的话,我们在未来无疑会遇到向后兼容的问题。</target>
        </trans-unit>
        <trans-unit id="d7112e0d287788ea5f4451548ee0fc207ecdc29d" translate="yes" xml:space="preserve">
          <source>Repeats the given forward range ad infinitum. If the original range is infinite (fact that would make &lt;code&gt;Cycle&lt;/code&gt; the identity application), &lt;code&gt;Cycle&lt;/code&gt; detects that and aliases itself to the range type itself. That works for non-forward ranges too. If the original range has random access, &lt;code&gt;Cycle&lt;/code&gt; offers random access and also offers a constructor taking an initial position &lt;code&gt;index&lt;/code&gt;. &lt;code&gt;Cycle&lt;/code&gt; works with static arrays in addition to ranges, mostly for performance reasons.</source>
          <target state="translated">无限地重复给定的向前范围。如果原始范围是无限的（事实使 &lt;code&gt;Cycle&lt;/code&gt; 成为身份应用程序）， &lt;code&gt;Cycle&lt;/code&gt; 会检测到该范围并将其自身别名为范围类型。这也适用于非前进范围。如果原始范围具有随机访问权限，则 &lt;code&gt;Cycle&lt;/code&gt; 提供随机访问权限，还提供采用初始位置 &lt;code&gt;index&lt;/code&gt; 的构造函数。除范围外， &lt;code&gt;Cycle&lt;/code&gt; 还可以用于静态数组，主要是出于性能方面的考虑。</target>
        </trans-unit>
        <trans-unit id="a7cf7b25a703b308887c7f1d100c4326ef20ac46" translate="yes" xml:space="preserve">
          <source>Replace</source>
          <target state="translated">Replace</target>
        </trans-unit>
        <trans-unit id="33c10388cfe9be7baae806c9effeecf88bf645c8" translate="yes" xml:space="preserve">
          <source>Replace call to GC allocator with call to tracing GC allocator.</source>
          <target state="translated">将对GC分配器的调用替换为对跟踪GC分配器的调用。</target>
        </trans-unit>
        <trans-unit id="1ff95b2b7bbcf8ce58f88097e74c325fa1730e9f" translate="yes" xml:space="preserve">
          <source>Replace each tab character in &lt;code&gt;r&lt;/code&gt; with the number of spaces necessary to align the following character at the next tab stop.</source>
          <target state="translated">将 &lt;code&gt;r&lt;/code&gt; 中的每个制表符替换为在下一个制表位处对齐下一个字符所需的空格数。</target>
        </trans-unit>
        <trans-unit id="ef40c4ff7d6a1b668fd3f06a49a8871d21fae529" translate="yes" xml:space="preserve">
          <source>Replace each tab character in &lt;code&gt;s&lt;/code&gt; with the number of spaces necessary to align the following character at the next tab stop.</source>
          <target state="translated">用 &lt;code&gt;s&lt;/code&gt; 中的每个制表符替换空格，以使下一个制表符在下一个制表符处对齐。</target>
        </trans-unit>
        <trans-unit id="f49a854f543f88eda87bf74688858dc39878b2f9" translate="yes" xml:space="preserve">
          <source>Replace existing extension on filespec with new one.</source>
          <target state="translated">用新的扩展名替换现有的filespec扩展名。</target>
        </trans-unit>
        <trans-unit id="0cdc355d0ae07533d5cb199d26f7afde21eadacb" translate="yes" xml:space="preserve">
          <source>Replace filename portion of path.</source>
          <target state="translated">替换路径中的文件名部分。</target>
        </trans-unit>
        <trans-unit id="92d1c292c2daecbb83e4e323e2b960d187e80417" translate="yes" xml:space="preserve">
          <source>Replace format string</source>
          <target state="translated">替换格式字符串</target>
        </trans-unit>
        <trans-unit id="70ea7b845eb8a19cdbf746d15b0bb9479f589172" translate="yes" xml:space="preserve">
          <source>Replace next in chain with &lt;code&gt;tail&lt;/code&gt;. Use &lt;code&gt;chainTogether&lt;/code&gt; instead if at all possible.</source>
          <target state="translated">用 &lt;code&gt;tail&lt;/code&gt; 代替下一个。尽可能使用 &lt;code&gt;chainTogether&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4d2e965595586bd1d65b369659c32a9fb3f221a" translate="yes" xml:space="preserve">
          <source>Replace occurrences of &lt;code&gt;from&lt;/code&gt; with &lt;code&gt;to&lt;/code&gt; in &lt;code&gt;subject&lt;/code&gt; and output the result into &lt;code&gt;sink&lt;/code&gt;.</source>
          <target state="translated">取代的出现 &lt;code&gt;from&lt;/code&gt; 与 &lt;code&gt;to&lt;/code&gt; 在 &lt;code&gt;subject&lt;/code&gt; 并把结果输出到 &lt;code&gt;sink&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d3607275774f4c09d1155f81daaa8e260ff7594" translate="yes" xml:space="preserve">
          <source>Replace occurrences of &lt;code&gt;from&lt;/code&gt; with &lt;code&gt;to&lt;/code&gt; in &lt;code&gt;subject&lt;/code&gt; in a new array.</source>
          <target state="translated">更换的出现 &lt;code&gt;from&lt;/code&gt; 有 &lt;code&gt;to&lt;/code&gt; 在 &lt;code&gt;subject&lt;/code&gt; 在一个新的数组。</target>
        </trans-unit>
        <trans-unit id="4db98af9e39320a953bbea6bb998fe7493c40e5e" translate="yes" xml:space="preserve">
          <source>Replaced by</source>
          <target state="translated">代之以</target>
        </trans-unit>
        <trans-unit id="e7e220393c76af6d6fb391eec888ad956f8e84d1" translate="yes" xml:space="preserve">
          <source>Replaces all occurrences of &lt;code&gt;From&lt;/code&gt; into &lt;code&gt;To&lt;/code&gt;, in one or more types &lt;code&gt;T&lt;/code&gt;. For example, &lt;code&gt;ReplaceType!(int, uint, Tuple!(int, float)[string])&lt;/code&gt; yields &lt;code&gt;Tuple!(uint, float)[string]&lt;/code&gt;. The types in which replacement is performed may be arbitrarily complex, including qualifiers, built-in type constructors (pointers, arrays, associative arrays, functions, and delegates), and template instantiations; replacement proceeds transitively through the type definition. However, member types in &lt;code&gt;struct&lt;/code&gt;s or &lt;code&gt;class&lt;/code&gt;es are not replaced because there are no ways to express the types resulting after replacement.</source>
          <target state="translated">用一个或多个类型 &lt;code&gt;T&lt;/code&gt; 将所有出现的 &lt;code&gt;From&lt;/code&gt; 替换为 &lt;code&gt;To&lt;/code&gt; 。例如， &lt;code&gt;ReplaceType!(int, uint, Tuple!(int, float)[string])&lt;/code&gt; 产生 &lt;code&gt;Tuple!(uint, float)[string]&lt;/code&gt; 。执行替换的类型可能是任意复杂的，包括限定符，内置类型构造函数（指针，数组，关联数组，函数和委托）和模板实例化；替换通过类型定义传递。但是，不会替换 &lt;code&gt;struct&lt;/code&gt; 或 &lt;code&gt;class&lt;/code&gt; es中的成员类型，因为没有任何方法可以表示替换后产生的类型。</target>
        </trans-unit>
        <trans-unit id="a4b6beb7a0a463fb9056fff096906a36b6d0941f" translate="yes" xml:space="preserve">
          <source>Replaces all occurrences of a certain subrange and puts the result into a given array.</source>
          <target state="translated">替换某个子范围的所有出现,并将结果放入一个给定的数组中。</target>
        </trans-unit>
        <trans-unit id="bf828817df8146a134e38863d3145a56771d5f8a" translate="yes" xml:space="preserve">
          <source>Replaces all occurrences of a certain subrange and puts the result into an output range.</source>
          <target state="translated">替换某个子范围的所有出现,并将结果放入一个输出范围。</target>
        </trans-unit>
        <trans-unit id="55ccf52982737ac1fda98a235d9e0724b221555b" translate="yes" xml:space="preserve">
          <source>Replaces elements from &lt;code&gt;array&lt;/code&gt; with indices ranging from &lt;code&gt;from&lt;/code&gt; (inclusive) to &lt;code&gt;to&lt;/code&gt; (exclusive) with the range &lt;code&gt;stuff&lt;/code&gt;.</source>
          <target state="translated">从替代对象元件 &lt;code&gt;array&lt;/code&gt; 具有索引范围从 &lt;code&gt;from&lt;/code&gt; （包括）到 &lt;code&gt;to&lt;/code&gt; （不包括）与该范围 &lt;code&gt;stuff&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bfd1260e1bd773dfd9e919a9dfabe839a5a20bb2" translate="yes" xml:space="preserve">
          <source>Replaces elements from &lt;code&gt;array&lt;/code&gt; with indices ranging from &lt;code&gt;from&lt;/code&gt; (inclusive) to &lt;code&gt;to&lt;/code&gt; (exclusive) with the range &lt;code&gt;stuff&lt;/code&gt;. Expands or shrinks the array as needed.</source>
          <target state="translated">从替代对象元件 &lt;code&gt;array&lt;/code&gt; 具有索引范围从 &lt;code&gt;from&lt;/code&gt; （包括）到 &lt;code&gt;to&lt;/code&gt; （不包括）与该范围 &lt;code&gt;stuff&lt;/code&gt; 。根据需要扩展或缩小数组。</target>
        </trans-unit>
        <trans-unit id="1947ec58f5d919ec2b4a4834cc9c7502d8a2dc55" translate="yes" xml:space="preserve">
          <source>Replaces spaces in &lt;code&gt;s&lt;/code&gt; with the optimal number of tabs. All spaces and tabs at the end of a line are removed.</source>
          <target state="translated">用最佳制表符数替换 &lt;code&gt;s&lt;/code&gt; 中的空格。行尾的所有空格和制表符都将被删除。</target>
        </trans-unit>
        <trans-unit id="664cf6cd043b2df4d63c3eb11246f8f03ec929f4" translate="yes" xml:space="preserve">
          <source>Replaces spaces in range &lt;code&gt;r&lt;/code&gt; with the optimal number of tabs. All spaces and tabs at the end of a line are removed.</source>
          <target state="translated">用最佳制表符数替换范围 &lt;code&gt;r&lt;/code&gt; 中的空格。行尾的所有空格和制表符都将被删除。</target>
        </trans-unit>
        <trans-unit id="184818cdd37cead38c95b37b3c881bb052eed284" translate="yes" xml:space="preserve">
          <source>Replaces the characters in &lt;code&gt;str&lt;/code&gt; which are in &lt;code&gt;from&lt;/code&gt; with the the corresponding characters in &lt;code&gt;to&lt;/code&gt; and returns the resulting string.</source>
          <target state="translated">替换字符 &lt;code&gt;str&lt;/code&gt; 其在 &lt;code&gt;from&lt;/code&gt; 与所述相应的字符 &lt;code&gt;to&lt;/code&gt; ，并返回生成的字符串。</target>
        </trans-unit>
        <trans-unit id="bbb6ea7a2e39be3f3f162a9089a3b3b6a5f6a339" translate="yes" xml:space="preserve">
          <source>Replaces the characters in &lt;code&gt;str&lt;/code&gt; which are keys in &lt;code&gt;transTable&lt;/code&gt; with their corresponding values in &lt;code&gt;transTable&lt;/code&gt;. &lt;code&gt;transTable&lt;/code&gt; is an AA where its keys are &lt;code&gt;dchar&lt;/code&gt; and its values are either &lt;code&gt;dchar&lt;/code&gt; or some type of string. Also, if &lt;code&gt;toRemove&lt;/code&gt; is given, the characters in it are removed from &lt;code&gt;str&lt;/code&gt; prior to translation. &lt;code&gt;str&lt;/code&gt; itself is unaltered. A copy with the changes is returned.</source>
          <target state="translated">替换字符 &lt;code&gt;str&lt;/code&gt; 其在键 &lt;code&gt;transTable&lt;/code&gt; 与它们相应的值 &lt;code&gt;transTable&lt;/code&gt; 。 &lt;code&gt;transTable&lt;/code&gt; 是AA，其键为 &lt;code&gt;dchar&lt;/code&gt; ，其值为 &lt;code&gt;dchar&lt;/code&gt; 或某种类型的字符串。同样，如果给出了 &lt;code&gt;toRemove&lt;/code&gt; ，则在翻译之前将其中的字符从 &lt;code&gt;str&lt;/code&gt; 中删除。 &lt;code&gt;str&lt;/code&gt; 本身保持不变。返回具有更改的副本。</target>
        </trans-unit>
        <trans-unit id="b67c7d6419c0b6d65cce4096b33223cdb74d94dc" translate="yes" xml:space="preserve">
          <source>Replaces the current process by executing a command, &lt;code&gt;pathname&lt;/code&gt;, with the arguments in &lt;code&gt;argv&lt;/code&gt;.</source>
          <target state="translated">通过使用 &lt;code&gt;argv&lt;/code&gt; 中的参数执行命令 &lt;code&gt;pathname&lt;/code&gt; 替换当前进程。</target>
        </trans-unit>
        <trans-unit id="de6da5c60de5b4049095b17ff61908901be4b1c4" translate="yes" xml:space="preserve">
          <source>Replaces the first occurrence of &lt;code&gt;from&lt;/code&gt; with &lt;code&gt;to&lt;/code&gt; in &lt;code&gt;subject&lt;/code&gt;.</source>
          <target state="translated">替换第一次出现 &lt;code&gt;from&lt;/code&gt; 同 &lt;code&gt;to&lt;/code&gt; 的 &lt;code&gt;subject&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d3a3bb457bba010b3b52570b9bb0a550ae3615e" translate="yes" xml:space="preserve">
          <source>Replaces the largest element in the store with &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">用 &lt;code&gt;value&lt;/code&gt; 替换存储中最大的元素。</target>
        </trans-unit>
        <trans-unit id="c36a9864cb0a1cd773ab41f070bdc81b08637be8" translate="yes" xml:space="preserve">
          <source>Replaces the last occurrence of &lt;code&gt;from&lt;/code&gt; with &lt;code&gt;to&lt;/code&gt; in &lt;code&gt;subject&lt;/code&gt;.</source>
          <target state="translated">替换的最后出现 &lt;code&gt;from&lt;/code&gt; 与 &lt;code&gt;to&lt;/code&gt; 在 &lt;code&gt;subject&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65c45a14662409a9d291ba06667b4b3194f648f2" translate="yes" xml:space="preserve">
          <source>Reports a deprecation message.</source>
          <target state="translated">报告一条废弃信息。</target>
        </trans-unit>
        <trans-unit id="05358ad0b424161c32a66a44e0020bb807267356" translate="yes" xml:space="preserve">
          <source>Reports a warning message.</source>
          <target state="translated">报告一条警告信息。</target>
        </trans-unit>
        <trans-unit id="7a48be9d9eb142198b9a33e6a7aaf8aa49ec8c1b" translate="yes" xml:space="preserve">
          <source>Reports additional details about a deprecation message.</source>
          <target state="translated">报告有关弃用消息的附加细节。</target>
        </trans-unit>
        <trans-unit id="2a4d2035187510232a3473688b6375c5eb79f697" translate="yes" xml:space="preserve">
          <source>Reports additional details about a warning message.</source>
          <target state="translated">报告有关警告信息的其他细节。</target>
        </trans-unit>
        <trans-unit id="a03879877c2a56ddc9a9590c7c4c5a5c5aaf9cb8" translate="yes" xml:space="preserve">
          <source>Reports additional details about an error message.</source>
          <target state="translated">报告有关错误信息的附加细节。</target>
        </trans-unit>
        <trans-unit id="ec241f1e6c9915f6c6293da092090ed4d21a4bbb" translate="yes" xml:space="preserve">
          <source>Reports an error message.</source>
          <target state="translated">报告一个错误信息。</target>
        </trans-unit>
        <trans-unit id="478f99752de9b4f7cb081cc52d1232afb58024ab" translate="yes" xml:space="preserve">
          <source>Reports per instance statistics to &lt;code&gt;output&lt;/code&gt; (e.g. &lt;code&gt;stdout&lt;/code&gt;). The format is simple: one kind and value per line, separated by a colon, e.g. &lt;code&gt;bytesAllocated:7395404&lt;/code&gt;</source>
          <target state="translated">将每个实例的统计信息报告给 &lt;code&gt;output&lt;/code&gt; （例如 &lt;code&gt;stdout&lt;/code&gt; ）。格式很简单：一种类型和每行一个值，用冒号分隔，例如 &lt;code&gt;bytesAllocated:7395404&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="360bc539904b3901915f57b0aead8cb40373f0de" translate="yes" xml:space="preserve">
          <source>Representation</source>
          <target state="translated">Representation</target>
        </trans-unit>
        <trans-unit id="d21307f7991db0e3fc8f33a263ac9d7f2b5db9b8" translate="yes" xml:space="preserve">
          <source>Representation of a CLI &lt;code&gt;Option&lt;/code&gt;</source>
          <target state="translated">CLI &lt;code&gt;Option&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f92787a18e484b1f06aa503c11813f8381ada33" translate="yes" xml:space="preserve">
          <source>Representation of a CLI feature</source>
          <target state="translated">CLI功能的表示</target>
        </trans-unit>
        <trans-unit id="a41ccd008f21cc3982d56b449404fb2d0eedc651" translate="yes" xml:space="preserve">
          <source>Represents a date in the &lt;a href=&quot;http://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar&quot;&gt;Proleptic Gregorian Calendar&lt;/a&gt; ranging from 32,768 B.C. to 32,767 A.D. Positive years are A.D. Non-positive years are B.C.</source>
          <target state="translated">表示&lt;a href=&quot;http://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar&quot;&gt;公历中&lt;/a&gt;的日期，范围是从公元前32,768到公元32,767，正年是公元，非正年是BC。</target>
        </trans-unit>
        <trans-unit id="871a404467b23544526d5d0d73e9c4edf6a9c058" translate="yes" xml:space="preserve">
          <source>Represents a duration of time in system clock ticks, using the highest precision that the system provides.</source>
          <target state="translated">表示以系统时钟滴数为单位的时间长度,使用系统提供的最高精度。</target>
        </trans-unit>
        <trans-unit id="c840abcc54eb77d8ea1c639dc35b7df6160fc73e" translate="yes" xml:space="preserve">
          <source>Represents a duration of time in system clock ticks.</source>
          <target state="translated">表示以系统时钟滴数为单位的时间长度。</target>
        </trans-unit>
        <trans-unit id="69976046e97e811393a3d9cb1d39633bdaf4173e" translate="yes" xml:space="preserve">
          <source>Represents a duration of time of weeks or less (kept internally as hnsecs). (e.g. 22 days or 700 seconds).</source>
          <target state="translated">表示持续时间为周或更短(内部保留为hnsecs)。(如22天或700秒)。</target>
        </trans-unit>
        <trans-unit id="263f8bb3c0db9af3066ba4528d3da4d266b09197" translate="yes" xml:space="preserve">
          <source>Represents a list of predefined symbols the compiler knows about.</source>
          <target state="translated">表示编译器知道的预定义符号的列表。</target>
        </trans-unit>
        <trans-unit id="af9de86424e71110be890008e402a1244b1288d6" translate="yes" xml:space="preserve">
          <source>Represents a monotonic timestamp in system clock ticks, using the highest precision that the system provides.</source>
          <target state="translated">表示以系统时钟刻度为单位的单调时间戳,使用系统提供的最高精度。</target>
        </trans-unit>
        <trans-unit id="2aaffeda235d62749f5afc55a2b2b3ade5271bd5" translate="yes" xml:space="preserve">
          <source>Represents a reference to &lt;code&gt;T&lt;/code&gt;. Resolves to &lt;code&gt;T*&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; is a value type.</source>
          <target state="translated">表示对 &lt;code&gt;T&lt;/code&gt; 的引用。如果 &lt;code&gt;T&lt;/code&gt; 为值类型，则解析为 &lt;code&gt;T*&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="947b758a0794342a8ef5583824799b05a8c3491f" translate="yes" xml:space="preserve">
          <source>Represents a sorted range. In addition to the regular range primitives, supports additional operations that take advantage of the ordering, such as merge and binary search. To obtain a &lt;code&gt; SortedRange&lt;/code&gt; from an unsorted range &lt;code&gt;r&lt;/code&gt;, use &lt;a href=&quot;std_algorithm_sorting#sort&quot;&gt;&lt;code&gt;std.algorithm.sorting.sort&lt;/code&gt;&lt;/a&gt; which sorts &lt;code&gt;r&lt;/code&gt; in place and returns the corresponding &lt;code&gt;SortedRange&lt;/code&gt;. To construct a &lt;code&gt;SortedRange&lt;/code&gt; from a range &lt;code&gt;r&lt;/code&gt; that is known to be already sorted, use &lt;a href=&quot;#assumeSorted&quot;&gt;&lt;code&gt;assumeSorted&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675c8aab11817ec1f023800d80f3d56a8cd24056" translate="yes" xml:space="preserve">
          <source>Represents a sorted range. In addition to the regular range primitives, supports additional operations that take advantage of the ordering, such as merge and binary search. To obtain a &lt;code&gt;SortedRange&lt;/code&gt; from an unsorted range &lt;code&gt;r&lt;/code&gt;, use &lt;a href=&quot;std_algorithm_sorting#sort&quot;&gt;&lt;code&gt;std.algorithm.sorting.sort&lt;/code&gt;&lt;/a&gt; which sorts &lt;code&gt;r&lt;/code&gt; in place and returns the corresponding &lt;code&gt;SortedRange&lt;/code&gt;. To construct a &lt;code&gt;SortedRange&lt;/code&gt; from a range &lt;code&gt;r&lt;/code&gt; that is known to be already sorted, use &lt;a href=&quot;#assumeSorted&quot;&gt;&lt;code&gt;assumeSorted&lt;/code&gt;&lt;/a&gt; described below.</source>
          <target state="translated">表示排序范围。除常规范围原语外，还支持利用排序的其他操作，例如合并和二进制搜索。要 &lt;code&gt;SortedRange&lt;/code&gt; 排序范围 &lt;code&gt;r&lt;/code&gt; 中获取SortedRange，请使用&lt;a href=&quot;std_algorithm_sorting#sort&quot;&gt; &lt;code&gt;std.algorithm.sorting.sort&lt;/code&gt; &lt;/a&gt;将 &lt;code&gt;r&lt;/code&gt; 进行适当排序并返回相应的 &lt;code&gt;SortedRange&lt;/code&gt; 。要从已知已被排序的范围 &lt;code&gt;r&lt;/code&gt; 构造 &lt;code&gt;SortedRange&lt;/code&gt; ，请使用&lt;a href=&quot;#assumeSorted&quot;&gt; &lt;code&gt;assumeSorted&lt;/code&gt; &lt;/a&gt;描述的hypokenSorted。</target>
        </trans-unit>
        <trans-unit id="4683c526686e490d8e710633c776f72b86b86126" translate="yes" xml:space="preserve">
          <source>Represents a time of day with hours, minutes, and seconds. It uses 24 hour time.</source>
          <target state="translated">用时、分、秒代表一天的时间。它使用24小时时间。</target>
        </trans-unit>
        <trans-unit id="810410978c698991ef4eb4c9ef7a97a314fab610" translate="yes" xml:space="preserve">
          <source>Represents a time zone from a TZ Database time zone file. Files from the TZ Database are how Posix systems hold their time zone information. Unfortunately, Windows does not use the TZ Database. To use the TZ Database, use &lt;code&gt;PosixTimeZone&lt;/code&gt; (which reads its information from the TZ Database files on disk) on Windows by providing the TZ Database files and telling &lt;code&gt;PosixTimeZone.getTimeZone&lt;/code&gt; where the directory holding them is.</source>
          <target state="translated">代表TZ数据库时区文件中的时区。 TZ数据库中的文件是Posix系统保存其时区信息的方式。不幸的是，Windows不使用TZ数据库。要使用TZ数据库，请在Windows上使用 &lt;code&gt;PosixTimeZone&lt;/code&gt; （从磁盘上的TZ数据库文件读取其信息），方法是提供TZ数据库文件，并告诉 &lt;code&gt;PosixTimeZone.getTimeZone&lt;/code&gt; 目录所在。</target>
        </trans-unit>
        <trans-unit id="b54798fff510046bc6fca58ccdbefaeeca610e06" translate="yes" xml:space="preserve">
          <source>Represents a time zone from the Windows registry. Unfortunately, Windows does not use the TZ Database. To use the TZ Database, use &lt;a href=&quot;#PosixTimeZone&quot;&gt;&lt;code&gt;PosixTimeZone&lt;/code&gt;&lt;/a&gt; (which reads its information from the TZ Database files on disk) on Windows by providing the TZ Database files and telling &lt;code&gt;PosixTimeZone.getTimeZone&lt;/code&gt; where the directory holding them is.</source>
          <target state="translated">代表Windows注册表中的时区。不幸的是，Windows不使用TZ数据库。要使用TZ数据库，请在Windows上使用&lt;a href=&quot;#PosixTimeZone&quot;&gt; &lt;code&gt;PosixTimeZone&lt;/code&gt; &lt;/a&gt;（从磁盘上的TZ数据库文件读取其信息），方法是提供TZ数据库文件，并告诉 &lt;code&gt;PosixTimeZone.getTimeZone&lt;/code&gt; 目录所在。</target>
        </trans-unit>
        <trans-unit id="e60b7030b2ce1a65110e9777db7c8df88b7b17a4" translate="yes" xml:space="preserve">
          <source>Represents a time zone with an offset (in minutes, west is negative) from UTC but no DST.</source>
          <target state="translated">代表与UTC有偏移的时区(以分钟为单位,西为负值),但没有DST。</target>
        </trans-unit>
        <trans-unit id="92f2f3f34a9bb6cd26c387edc0c38b2e94b17c7e" translate="yes" xml:space="preserve">
          <source>Represents a time zone. It is used with &lt;a href=&quot;std_datetime_systime#SysTime&quot;&gt;&lt;code&gt;std.datetime.systime.SysTime&lt;/code&gt;&lt;/a&gt; to indicate the time zone of a &lt;a href=&quot;std_datetime_systime#SysTime&quot;&gt;&lt;code&gt;std.datetime.systime.SysTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">代表时区。它是用来与&lt;a href=&quot;std_datetime_systime#SysTime&quot;&gt; &lt;code&gt;std.datetime.systime.SysTime&lt;/code&gt; &lt;/a&gt;指示的时区&lt;a href=&quot;std_datetime_systime#SysTime&quot;&gt; &lt;code&gt;std.datetime.systime.SysTime&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="abac93691afbfe26bfc279c427091400b5a61da6" translate="yes" xml:space="preserve">
          <source>Represents a timestamp of the system's monotonic clock.</source>
          <target state="translated">表示系统单调时钟的时间戳。</target>
        </trans-unit>
        <trans-unit id="7c5e078407eec9db2ab1960187d144ea3f3ab12f" translate="yes" xml:space="preserve">
          <source>Represents an interval of time which has negative infinity as its starting point.</source>
          <target state="translated">表示以负无穷大为起点的时间间隔。</target>
        </trans-unit>
        <trans-unit id="1aaad8c85cc38e4f5132fe337e5717985acbb7ee" translate="yes" xml:space="preserve">
          <source>Represents an interval of time which has positive infinity as its end point.</source>
          <target state="translated">表示以正无穷大为终点的时间间隔。</target>
        </trans-unit>
        <trans-unit id="f47e3054af7c4a67ba742112accf07afc3d56019" translate="yes" xml:space="preserve">
          <source>Represents an interval of time.</source>
          <target state="translated">代表一个时间间隔。</target>
        </trans-unit>
        <trans-unit id="2d721bcbf347e19a4d297b8d77ad757d2ffbda05" translate="yes" xml:space="preserve">
          <source>Represents fractional seconds (portions of time smaller than a second).</source>
          <target state="translated">表示小数秒(小于一秒的时间部分)。</target>
        </trans-unit>
        <trans-unit id="a99c9af937a58a8fe433fd7c418c634ff3532cc9" translate="yes" xml:space="preserve">
          <source>Represents the 12 months of the Gregorian year (January is 1).</source>
          <target state="translated">代表公历年的12个月(1月为1)。</target>
        </trans-unit>
        <trans-unit id="cafb2741e0101355880a4369d423d57cbeaca7a1" translate="yes" xml:space="preserve">
          <source>Represents the 7 days of the Gregorian week (Sunday is 0).</source>
          <target state="translated">代表格里高利周的7天(周日为0)。</target>
        </trans-unit>
        <trans-unit id="3cfcc553f5907a03417254ec92d33a339d24d302" translate="yes" xml:space="preserve">
          <source>Represents the ID of a thread, as returned by &lt;code&gt;Thread.&lt;/code&gt;&lt;a href=&quot;#id&quot;&gt;&lt;code&gt;id&lt;/code&gt;&lt;/a&gt;. The exact type varies from platform to platform.</source>
          <target state="translated">表示线程的ID，由 &lt;code&gt;Thread.&lt;/code&gt; 返回。&lt;a href=&quot;#id&quot;&gt; &lt;code&gt;id&lt;/code&gt; &lt;/a&gt;。确切的类型因平台而异。</target>
        </trans-unit>
        <trans-unit id="79592dd80802f56e45673837462680efc10a659d" translate="yes" xml:space="preserve">
          <source>Represents the program counter of the start of the next instruction. So,</source>
          <target state="translated">代表下一条指令开始的程序计数器。所以。</target>
        </trans-unit>
        <trans-unit id="9612141a5f05008d3fc5bfabff3f29e0c723430f" translate="yes" xml:space="preserve">
          <source>Represents the status of an email address</source>
          <target state="translated">表示电子邮件地址的状态</target>
        </trans-unit>
        <trans-unit id="66c903fc3505843fc3f5a55e911bfe6cb8fd51ea" translate="yes" xml:space="preserve">
          <source>Request additional semantic analysis for TypeInfo generation.</source>
          <target state="translated">要求对TypeInfo的生成进行额外的语义分析。</target>
        </trans-unit>
        <trans-unit id="5129f8c370fa885b85ac26897f294272ff8ac1e9" translate="yes" xml:space="preserve">
          <source>Request internal information from the curl session with this function. The third argument MUST be a pointer to a long, a pointer to a char * or a pointer to a double (as the documentation describes elsewhere). The data pointed to will be filled in accordingly and can be relied upon only if the function returns CURLE_OK. This function is intended to get used &lt;em&gt;AFTER&lt;/em&gt; a performed transfer, all results from this function are undefined until the transfer is completed.</source>
          <target state="translated">使用此功能从curl会话中请求内部信息。第三个参数必须是一个指向long的指针，一个指向char *的指针或一个指向double的指针（如文档中其他地方所述）。指向的数据将被相应地填充，并且仅在函数返回CURLE_OK时才可依赖。该功能旨在习惯&lt;em&gt;后&lt;/em&gt;一个进行传递，直至转让完成后从该函数的所有结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="6d4fbad80cc3367d293c2d0f03d7f36df4053772" translate="yes" xml:space="preserve">
          <source>Requested target field alignment size of the given type.</source>
          <target state="translated">要求给定类型的目标字段对齐尺寸。</target>
        </trans-unit>
        <trans-unit id="4e550276bb6c1cdbcf2e2907624ca453de5cd98a" translate="yes" xml:space="preserve">
          <source>Requested target memory alignment size of the given type.</source>
          <target state="translated">要求给定类型的目标内存对齐大小。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
