<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="d">
    <body>
      <group id="d">
        <trans-unit id="eda17044e9450b32ce8d657d8c476e2e931877a8" translate="yes" xml:space="preserve">
          <source>Check an entire XML document for well-formedness</source>
          <target state="translated">检查整个XML文档的格式良好性。</target>
        </trans-unit>
        <trans-unit id="d970e5fd0eca0560f8d7376c859148711be4729a" translate="yes" xml:space="preserve">
          <source>Check for special enum names.</source>
          <target state="translated">检查特殊的枚举名。</target>
        </trans-unit>
        <trans-unit id="2d3f64068fd53c1e2cf2c76775f8f8fabfefbbfd" translate="yes" xml:space="preserve">
          <source>Check for unsafe access in @safe code: 1. read overlapped pointers 2. write misaligned pointers 3. write overlapped storage classes Print error if unsafe.</source>
          <target state="translated">检查@安全代码中的不安全访问。1.读取重叠的指针 2.写入错误对齐的指针 3.写入重叠的存储类 如果不安全则打印错误。</target>
        </trans-unit>
        <trans-unit id="7c0bee715813745db32b38bbccf3a069246cf610" translate="yes" xml:space="preserve">
          <source>Check given aggregate actually has an identity opAssign or not.</source>
          <target state="translated">检查给定的集合是否真的有一个身份的opAssign。</target>
        </trans-unit>
        <trans-unit id="3858f175449bae14406b7154904a8462b908a3ad" translate="yes" xml:space="preserve">
          <source>Check if &lt;code&gt;this&lt;/code&gt; is in the null state.</source>
          <target state="translated">检查 &lt;code&gt;this&lt;/code&gt; 是否处于空状态。</target>
        </trans-unit>
        <trans-unit id="076573205d4206fc69ab2dc4fcc4e09a0f119e4b" translate="yes" xml:space="preserve">
          <source>Check if a symbol is visible from a given scope without taking into account the most visible overload.</source>
          <target state="translated">检查一个符号是否从给定的作用域可见,而不考虑最可见的过载。</target>
        </trans-unit>
        <trans-unit id="62479c6f09569fa4521b5d1a5251de698f6fa595" translate="yes" xml:space="preserve">
          <source>Check if an &lt;code&gt;alias this&lt;/code&gt; is deprecated</source>
          <target state="translated">检查是否不建议使用 &lt;code&gt;alias this&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2bab44045df4b9981599697a77f678e9b3ebdf8e" translate="yes" xml:space="preserve">
          <source>Check if any elements exist in the container. Returns &lt;code&gt;false&lt;/code&gt; if at least one element exists.</source>
          <target state="translated">检查容器中是否存在任何元素。如果存在至少一个元素，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0eee93ccff6c0e0b4aa6087370d984e43f3308e9" translate="yes" xml:space="preserve">
          <source>Check if the file the &lt;code&gt;path&lt;/code&gt; points to exists</source>
          <target state="translated">检查 &lt;code&gt;path&lt;/code&gt; 指向的文件是否存在</target>
        </trans-unit>
        <trans-unit id="7ac10cbe580bb712b906c15722c15b6e0026c3e6" translate="yes" xml:space="preserve">
          <source>Check if the function &lt;code&gt;F&lt;/code&gt; is calleable in a &lt;code&gt;nothrow&lt;/code&gt; scope.</source>
          <target state="translated">检查功能 &lt;code&gt;F&lt;/code&gt; 处于calleable &lt;code&gt;nothrow&lt;/code&gt; 范围。</target>
        </trans-unit>
        <trans-unit id="64f568a0788eaf3c104e4f61c0874d4d74f59f4e" translate="yes" xml:space="preserve">
          <source>Check if the last template parameter is a tuple one, and returns it if so, else returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">检查最后一个模板参数是否为元组，如果是，则返回它，否则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="188659108f60184522d74ac9e6ab3f12baec9896" translate="yes" xml:space="preserve">
          <source>Check if the type &lt;code&gt;T&lt;/code&gt;'s postblit is called in nothrow, if it exist</source>
          <target state="translated">检查类型 &lt;code&gt;T&lt;/code&gt; 的postblit是否在nothrow中调用（如果存在）</target>
        </trans-unit>
        <trans-unit id="af7a4c6a5c2ba8859b2cd5a292e2e803c480f264" translate="yes" xml:space="preserve">
          <source>Check parameters and return type of D main() function. Issue error messages.</source>
          <target state="translated">检查D main()函数的参数和返回类型。发布错误信息。</target>
        </trans-unit>
        <trans-unit id="44068e2d631fa41db726b0ad86a2506b1696fdd4" translate="yes" xml:space="preserve">
          <source>Check struct constructor of the form &lt;code&gt;s.this(args)&lt;/code&gt;, by checking each &lt;code&gt;return&lt;/code&gt; parameter to see if it gets assigned to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">通过检查每个 &lt;code&gt;return&lt;/code&gt; 参数以查看是否将其分配给 &lt;code&gt;s&lt;/code&gt; ,从而检查 &lt;code&gt;s.this(args)&lt;/code&gt; 形式的struct构造函数。</target>
        </trans-unit>
        <trans-unit id="e9ca07e85195a45175df8f93c70295e0d597f076" translate="yes" xml:space="preserve">
          <source>Check that an email address conforms to RFCs 5321, 5322 and others.</source>
          <target state="translated">检查电子邮件地址是否符合RFC5321、5322等标准。</target>
        </trans-unit>
        <trans-unit id="96a4caea4b58f9a696a9fa2d9139cbc448939376" translate="yes" xml:space="preserve">
          <source>Check that the expression has a valid type. If not, generates an error &quot;... has no type&quot;.</source>
          <target state="translated">检查表达式是否有一个有效的类型。如果没有,则产生错误&quot;...没有类型&quot;。</target>
        </trans-unit>
        <trans-unit id="72c3f1230ce767eb6fa0da10917246e5895c0d26" translate="yes" xml:space="preserve">
          <source>Check that the expression has a valid value. If not, generates an error &quot;... has no value&quot;.</source>
          <target state="translated">检查表达式是否有有效值。如果没有,则产生错误&quot;......没有值&quot;。</target>
        </trans-unit>
        <trans-unit id="dcdeb8730ffac94e46f7144e685915d89bb60d12" translate="yes" xml:space="preserve">
          <source>Check that the function contains any closure. If it's @nogc, report suitable errors. This is mostly consistent with FuncDeclaration::needsClosure().</source>
          <target state="translated">检查该函数是否包含任何闭包。如果是@nogc,报告适当的错误。这与FuncDeclaration::needsClosure()基本一致。</target>
        </trans-unit>
        <trans-unit id="a439ace69e6b39c914e8a0f30a7839c881b0b42e" translate="yes" xml:space="preserve">
          <source>Check that the postblit is callable if t is an array of structs. Returns true if error happens.</source>
          <target state="translated">如果t是一个结构数组,检查postblit是否可以调用。如果发生错误,返回true。</target>
        </trans-unit>
        <trans-unit id="a636a07f4f3d9c05ce29614c151925a9aeb57b2d" translate="yes" xml:space="preserve">
          <source>Check that there are no uses of arrays without [].</source>
          <target state="translated">检查有没有使用不带[]的数组。</target>
        </trans-unit>
        <trans-unit id="0af7c63ae853953456799e62f8dd988319b13c2e" translate="yes" xml:space="preserve">
          <source>Check that this function type is properly resolved. If not, report &quot;forward reference error&quot; and return true.</source>
          <target state="translated">检查该函数类型是否正确解析。如果没有,报告 &quot;正向引用错误 &quot;并返回true。</target>
        </trans-unit>
        <trans-unit id="dc26a5cb1e94e18dd7bae9c48ba4424f2687029b" translate="yes" xml:space="preserve">
          <source>Check to see if constraint is satisfied.</source>
          <target state="translated">检查是否满足约束条件。</target>
        </trans-unit>
        <trans-unit id="2e9e70f18c437515a642e7710d6acf41c2b8a612" translate="yes" xml:space="preserve">
          <source>Check to see if declaration can be modified in this context (sc). Issue error if not.</source>
          <target state="translated">检查是否可以在此上下文(sc)中修改声明。如果不能,则发出错误。</target>
        </trans-unit>
        <trans-unit id="51115eb7becb93e1ed9565c740be9cbe2b13d39d" translate="yes" xml:space="preserve">
          <source>Check to see if this variable is actually in an enclosing function rather than the current one. Returns true if error occurs.</source>
          <target state="translated">检查这个变量是否在一个包围函数中,而不是在当前函数中。如果发生错误,返回true。</target>
        </trans-unit>
        <trans-unit id="c9e9e80b6fb0bcd2c2078fcf4d43cd2c78a6fad0" translate="yes" xml:space="preserve">
          <source>Check to see the aggregate type is nested and its context pointer is accessible from the current scope. Returns true if error occurs.</source>
          <target state="translated">检查集合类型是否嵌套,其上下文指针是否可以从当前作用域访问。如果发生错误,返回true。</target>
        </trans-unit>
        <trans-unit id="4f9c3759a0e90a57282f3d4825c0a253d6bfa729" translate="yes" xml:space="preserve">
          <source>Check type to see if it is based on a deprecated symbol.</source>
          <target state="translated">检查类型,看它是否基于废弃的符号。</target>
        </trans-unit>
        <trans-unit id="3bebff7bd9c6f992a862c3947845278a778590d5" translate="yes" xml:space="preserve">
          <source>Check whether a number is an integer power of two.</source>
          <target state="translated">检查一个数字是否是二的整数倍。</target>
        </trans-unit>
        <trans-unit id="68ee613e321cfb260a31b167d7e8362d6611b9ba" translate="yes" xml:space="preserve">
          <source>Check whether a thread was created by &lt;code&gt;createLowLevelThread&lt;/code&gt;.</source>
          <target state="translated">检查是否由 &lt;code&gt;createLowLevelThread&lt;/code&gt; 创建了线程。</target>
        </trans-unit>
        <trans-unit id="81773160380ee69dcc483492366b6c611e0a1eed" translate="yes" xml:space="preserve">
          <source>Check whether symbols &lt;code&gt;s&lt;/code&gt; is visible in &lt;code&gt;mod&lt;/code&gt;.</source>
          <target state="translated">检查符号 &lt;code&gt;s&lt;/code&gt; 是否在 &lt;code&gt;mod&lt;/code&gt; 中可见。</target>
        </trans-unit>
        <trans-unit id="16a4ea9c15d653616cd1ab89eeb1d07e1733ed47" translate="yes" xml:space="preserve">
          <source>Check whether the expression allows RMW operations, error with rmw operator diagnostic if not. ex is the RHS expression, or NULL if ++/-- is used (for diagnostics) Returns true if error occurs.</source>
          <target state="translated">检查表达式是否允许进行RMW操作,如果不允许,则用rmw操作符诊断错误。ex是RHS表达式,如果使用++/--,则为NULL(用于诊断)如果发生错误,则返回true。</target>
        </trans-unit>
        <trans-unit id="c3f04bc3752d2690dd0208e77754d66e24067224" translate="yes" xml:space="preserve">
          <source>Check whether the given Unicode code point is valid.</source>
          <target state="translated">检查给定的Unicode码点是否有效。</target>
        </trans-unit>
        <trans-unit id="967bb865d76cb5dec46effc4ddf3db69dd7bd8b3" translate="yes" xml:space="preserve">
          <source>Check whether the tuple &lt;code&gt;T&lt;/code&gt; is a type tuple. A type tuple only contains types.</source>
          <target state="translated">检查元组 &lt;code&gt;T&lt;/code&gt; 是否为类型元组。类型元组仅包含类型。</target>
        </trans-unit>
        <trans-unit id="f2b123f344913046043c7f94d2d9417280390123" translate="yes" xml:space="preserve">
          <source>Check whether the tuple T is an expression tuple. An expression tuple only contains expressions.</source>
          <target state="translated">检查元组T是否是一个表达式元组。表达式元组只包含表达式。</target>
        </trans-unit>
        <trans-unit id="5374967cf17045f818df69f4c4da8c46fb272364" translate="yes" xml:space="preserve">
          <source>Check whether the type t representation relies on one or more the template parameters.</source>
          <target state="translated">检查t类型的表示是否依赖于一个或多个模板参数。</target>
        </trans-unit>
        <trans-unit id="a81260a4f45c118b1ea3d76244c3549c2710e64e" translate="yes" xml:space="preserve">
          <source>CheckDns &lt;code&gt;checkDNS&lt;/code&gt;</source>
          <target state="translated">CheckDns &lt;code&gt;checkDNS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5ad7d1dc4c316626ec88560f3cf3f5028c21c54" translate="yes" xml:space="preserve">
          <source>CheckException &lt;strong id=&quot;err&quot;&gt;err&lt;/strong&gt;;</source>
          <target state="translated">CheckException &lt;strong id=&quot;err&quot;&gt;err&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="102c409f892dccfa7ef03ae04285bb95f236e32f" translate="yes" xml:space="preserve">
          <source>CheckException if the document is not well formed  CheckException's toString() method will yield the complete hierarchy of parse failure (the XML equivalent of a stack trace), giving the line and column number of every failure at every level.</source>
          <target state="translated">如果文档没有很好的形成,CheckException的toString()方法将产生解析失败的完整层次结构(相当于XML的堆栈跟踪),给出每一级失败的行号和列号。</target>
        </trans-unit>
        <trans-unit id="bada63007fff0aeaf5219e5a4263f3c5062820f1" translate="yes" xml:space="preserve">
          <source>Checked integral type wraps an integral &lt;code&gt;T&lt;/code&gt; and customizes its behavior with the help of a &lt;code&gt;Hook&lt;/code&gt; type. The type wrapped must be one of the predefined integrals (unqualified), or another instance of &lt;code&gt;Checked&lt;/code&gt;.</source>
          <target state="translated">Checked整数类型包装整数 &lt;code&gt;T&lt;/code&gt; 并借助 &lt;code&gt;Hook&lt;/code&gt; 类型自定义其行为。包装的类型必须是预定义的整数之一（不合格），或者是 &lt;code&gt;Checked&lt;/code&gt; 的另一个实例。</target>
        </trans-unit>
        <trans-unit id="b9f346ef13e859da0e17906bab43906e87f9f1a9" translate="yes" xml:space="preserve">
          <source>Checked integral types.</source>
          <target state="translated">检查了整体类型。</target>
        </trans-unit>
        <trans-unit id="3d046d9a56e84f129ac9c3b934c854cf8cc1eede" translate="yes" xml:space="preserve">
          <source>Checked!(T, Hook) &lt;strong id=&quot;checked&quot;&gt;checked&lt;/strong&gt;(Hook = Abort, T)(const T value)</source>
          <target state="translated">（T，Hook）已&lt;strong id=&quot;checked&quot;&gt;检查&lt;/strong&gt;（Hook = Abort，T）（常量T值）</target>
        </trans-unit>
        <trans-unit id="3a56e907097859f145f7eb967d0d6aafc8e25d7a" translate="yes" xml:space="preserve">
          <source>Checked!(T, WithNaN) &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">已检查！（T，WithNaN） &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8b00f7fe2c53994a3c2e16e9fff90f46c54af6d" translate="yes" xml:space="preserve">
          <source>Checkpoint a database</source>
          <target state="translated">检查点数据库</target>
        </trans-unit>
        <trans-unit id="d455be643c887ed2e33c7fa95c88c9c55b8bf01c" translate="yes" xml:space="preserve">
          <source>Checks are being emitted for &lt;a href=&quot;expression#AssertExpression&quot;&gt;&lt;i&gt;AssertExpression&lt;/i&gt;&lt;/a&gt;s</source>
          <target state="translated">检查正在发射用于&lt;a href=&quot;expression#AssertExpression&quot;&gt;&lt;i&gt;AssertExpression&lt;/i&gt;&lt;/a&gt;小号</target>
        </trans-unit>
        <trans-unit id="7ae407b40a2f1ca0a962e37bda159883f242864f" translate="yes" xml:space="preserve">
          <source>Checks for UDAs on the aggregate symbol itself</source>
          <target state="translated">检查集合符号本身的UDA。</target>
        </trans-unit>
        <trans-unit id="91354966f9286424721ec9c11117e66f02deb883" translate="yes" xml:space="preserve">
          <source>Checks for equality between this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; and the given &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">检查此&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;与给定的&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;之间是否相等。</target>
        </trans-unit>
        <trans-unit id="41f80afca0aca27fb1227fb2783c707494f14534" translate="yes" xml:space="preserve">
          <source>Checks for mismatching modifiers between &lt;code&gt;lhsMod&lt;/code&gt; and &lt;code&gt;rhsMod&lt;/code&gt; and prints the mismatching modifiers to &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">检查 &lt;code&gt;lhsMod&lt;/code&gt; 和 &lt;code&gt;rhsMod&lt;/code&gt; 之间的不匹配修饰符，并将不匹配修饰符输出到 &lt;code&gt;buf&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b1c54b7f70f2d7dcba8602a7148aa409d68cfd95" translate="yes" xml:space="preserve">
          <source>Checks for the existence of a package.d to set isPkgMod appropriately if isPkgMod == PKG.unknown</source>
          <target state="translated">如果isPkgMod ==PKG.unknown,则检查是否存在一个package.d,以适当地设置isPkgMod。</target>
        </trans-unit>
        <trans-unit id="93f909b0c91d05388ffc9701f547779940f4af50" translate="yes" xml:space="preserve">
          <source>Checks if</source>
          <target state="translated">检查是否</target>
        </trans-unit>
        <trans-unit id="fc3b0d143e6cc80d04881cd701b750744c2dc00b" translate="yes" xml:space="preserve">
          <source>Checks if a value is among a set of values, e.g. &lt;code&gt;if (v.among(1, 2, 3)) // &lt;/code&gt;v&lt;code&gt; is 1, 2 or 3&lt;/code&gt;</source>
          <target state="translated">检查一个值是否在一组值中，例如 &lt;code&gt;if (v.among(1, 2, 3)) // &lt;/code&gt; v &lt;code&gt; is 1, 2 or 3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c267ca37e5703f72794d1240b1acbb9cca14995" translate="yes" xml:space="preserve">
          <source>Checks if an &lt;a href=&quot;#AliasSeq&quot;&gt;&lt;code&gt;AliasSeq&lt;/code&gt;&lt;/a&gt; is sorted according to &lt;code&gt;cmp&lt;/code&gt;.</source>
          <target state="translated">检查&lt;a href=&quot;#AliasSeq&quot;&gt; &lt;code&gt;AliasSeq&lt;/code&gt; &lt;/a&gt;是否根据 &lt;code&gt;cmp&lt;/code&gt; 排序。</target>
        </trans-unit>
        <trans-unit id="73214c70371a5d58586ec872bc8be088ccd2fe8d" translate="yes" xml:space="preserve">
          <source>Checks if both ranges are permutations of each other.</source>
          <target state="translated">检查两个范围是否是彼此的排列组合。</target>
        </trans-unit>
        <trans-unit id="f3bc0ac6ddb23e50ce7a6b35ff0d100ba52bb65c" translate="yes" xml:space="preserve">
          <source>Checks if pkg is a sub-package of this</source>
          <target state="translated">检查 pkg 是否是这个包的子包。</target>
        </trans-unit>
        <trans-unit id="de380b72169766e3bc2056b6702adc831654ea3d" translate="yes" xml:space="preserve">
          <source>Checks if the final segments of two arrays refer to the same place in memory.</source>
          <target state="translated">检查两个数组的最后一段是否指向内存中的同一位置。</target>
        </trans-unit>
        <trans-unit id="922c914c67ac4f89ae28a039917cecb568914ebf" translate="yes" xml:space="preserve">
          <source>Checks if the given range ends with (one of) the given needle(s). The reciprocal of &lt;code&gt;startsWith&lt;/code&gt;.</source>
          <target state="translated">检查给定范围是否以给定针头（之一）结尾。 &lt;code&gt;startsWith&lt;/code&gt; 的倒数。</target>
        </trans-unit>
        <trans-unit id="82ecdaae8fa51f0373d5c72994edf3db1fb3d193" translate="yes" xml:space="preserve">
          <source>Checks if the initial segments of two arrays refer to the same place in memory.</source>
          <target state="translated">检查两个数组的初始段是否指向内存中的同一位置。</target>
        </trans-unit>
        <trans-unit id="82f5a929497edacf0f834d2b14872945ce21c9e0" translate="yes" xml:space="preserve">
          <source>Checks if the two ranges have the same number of elements. This function is optimized to always take advantage of the &lt;code&gt;length&lt;/code&gt; member of either range if it exists.</source>
          <target state="translated">检查两个范围是否具有相同数量的元素。该函数经过优化，可以始终利用任一范围的 &lt;code&gt;length&lt;/code&gt; 成员（如果存在）。</target>
        </trans-unit>
        <trans-unit id="062799729dfffce6238995dbd50b05d58dc3f7e8" translate="yes" xml:space="preserve">
          <source>Checks that the given file or directory name is valid.</source>
          <target state="translated">检查给定的文件或目录名称是否有效。</target>
        </trans-unit>
        <trans-unit id="d27c0f548abb76a4596a54ad7418e7f7fc762d7c" translate="yes" xml:space="preserve">
          <source>Checks to see if &lt;code&gt;str&lt;/code&gt; is well-formed unicode or not.</source>
          <target state="translated">检查 &lt;code&gt;str&lt;/code&gt; 是否为格式正确的unicode。</target>
        </trans-unit>
        <trans-unit id="f34bde45b70b49a2f480574578c1aa032b15dc5b" translate="yes" xml:space="preserve">
          <source>Checks whether &lt;code&gt;os&lt;/code&gt; is the current &lt;a href=&quot;#TargetOS&quot;&gt;&lt;code&gt;TargetOS&lt;/code&gt;&lt;/a&gt;. For &lt;code&gt;TargetOS.all&lt;/code&gt; it will always return true.</source>
          <target state="translated">检查 &lt;code&gt;os&lt;/code&gt; 是否是当前的&lt;a href=&quot;#TargetOS&quot;&gt; &lt;code&gt;TargetOS&lt;/code&gt; &lt;/a&gt;。对于 &lt;code&gt;TargetOS.all&lt;/code&gt; ，它将始终返回true。</target>
        </trans-unit>
        <trans-unit id="c8b948df59e14c40567ac47254a4d5c81976e17a" translate="yes" xml:space="preserve">
          <source>Checks whether &lt;code&gt;path&lt;/code&gt; is a valid path.</source>
          <target state="translated">检查 &lt;code&gt;path&lt;/code&gt; 是否为有效路径。</target>
        </trans-unit>
        <trans-unit id="dfec60ca2a2292ac998b0be0f2e72d965e16f264" translate="yes" xml:space="preserve">
          <source>Checks whether &lt;code&gt;r&lt;/code&gt; has &quot;balanced parentheses&quot;, i.e. all instances of &lt;code&gt;lPar&lt;/code&gt; are closed by corresponding instances of &lt;code&gt;rPar&lt;/code&gt;. The parameter &lt;code&gt;maxNestingLevel&lt;/code&gt; controls the nesting level allowed. The most common uses are the default or &lt;code&gt;0&lt;/code&gt;. In the latter case, no nesting is allowed.</source>
          <target state="translated">检查是否 &lt;code&gt;r&lt;/code&gt; 具有&amp;ldquo;平衡括号&amp;rdquo;，即所有实例 &lt;code&gt;lPar&lt;/code&gt; 由相应的实例关闭 &lt;code&gt;rPar&lt;/code&gt; 。参数 &lt;code&gt;maxNestingLevel&lt;/code&gt; 控制所允许的嵌套级别。最常见的用法是default或 &lt;code&gt;0&lt;/code&gt; 。在后一种情况下，不允许嵌套。</target>
        </trans-unit>
        <trans-unit id="77f07080dfad28c7957c689895a88f5ad1226a0f" translate="yes" xml:space="preserve">
          <source>Checks whether a &lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;forward range&lt;/a&gt; is sorted according to the comparison operation &lt;code&gt;less&lt;/code&gt;. Performs &amp;Omicron;(&lt;code&gt;r.length&lt;/code&gt;) evaluations of &lt;code&gt;less&lt;/code&gt;.</source>
          <target state="translated">检查是否根据 &lt;code&gt;less&lt;/code&gt; 的比较操作对&lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;前进范围&lt;/a&gt;进行了排序。执行&amp;Omicron;（ &lt;code&gt;r.length&lt;/code&gt; ）的评价 &lt;code&gt;less&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17bdba71f684446d0078a53b44634a2483390259" translate="yes" xml:space="preserve">
          <source>Checks whether a function has the given attributes attached.</source>
          <target state="translated">检查函数是否有附加的属性。</target>
        </trans-unit>
        <trans-unit id="0f264f7871383b6deeb7f79fa3f8bb65dab34fc2" translate="yes" xml:space="preserve">
          <source>Checks whether a given source object contains pointers or references to a given target object.</source>
          <target state="translated">检查给定源对象是否包含指向给定目标对象的指针或引用。</target>
        </trans-unit>
        <trans-unit id="90ef69351101a70d883b1cc5e529cfe98f43fdde" translate="yes" xml:space="preserve">
          <source>Checks whether the allocator is responsible for the allocation of &lt;code&gt;b&lt;/code&gt;. It does a simple &amp;Omicron;(&lt;code&gt;1&lt;/code&gt;) range check. &lt;code&gt;b&lt;/code&gt; should be a buffer either allocated with &lt;code&gt;this&lt;/code&gt; or obtained through other means.</source>
          <target state="translated">检查分配器是否负责 &lt;code&gt;b&lt;/code&gt; 的分配。它执行简单的&amp;Omicron;（ &lt;code&gt;1&lt;/code&gt; ）范围检查。 &lt;code&gt;b&lt;/code&gt; 应该是 &lt;code&gt;this&lt;/code&gt; 分配的缓冲区或通过其他方式获得的缓冲区。</target>
        </trans-unit>
        <trans-unit id="54585d85d511f32526e9e2026456069b0e4b7e33" translate="yes" xml:space="preserve">
          <source>Checks whether the digest has a &lt;code&gt;blockSize&lt;/code&gt; member, which contains the digest's internal block size in bits. It is primarily used by &lt;a href=&quot;std_digest_hmac#HMAC&quot;&gt;&lt;code&gt;std.digest.hmac.HMAC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">检查摘要是否具有 &lt;code&gt;blockSize&lt;/code&gt; 成员，该成员包含摘要的内部块大小（以位为单位）。它主要由&lt;a href=&quot;std_digest_hmac#HMAC&quot;&gt; &lt;code&gt;std.digest.hmac.HMAC&lt;/code&gt; 使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="596a607c7dae9e909d8aa4bbcb358bbecdcb85a4" translate="yes" xml:space="preserve">
          <source>Checks whether the given &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; starts with (one of) the given needle(s) or, if no needles are given, if its front element fulfils predicate &lt;code&gt;pred&lt;/code&gt;.</source>
          <target state="translated">检查给定的&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;是否以给定的针（中的一个）开始，或者如果没有给定的针，则其前元素是否满足谓词 &lt;code&gt;pred&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="efccb1331db4295c7feab2a66a6d3d82d986e9c3" translate="yes" xml:space="preserve">
          <source>Checks whether the target supports a vector type.</source>
          <target state="translated">检查目标是否支持向量类型。</target>
        </trans-unit>
        <trans-unit id="a42d0788409e166459e51db8b3218d5314bd1d1f" translate="yes" xml:space="preserve">
          <source>Checks whether the target supports the given operation for vectors.</source>
          <target state="translated">检查目标是否支持向量的操作。</target>
        </trans-unit>
        <trans-unit id="442e16f850c6d48d620dd486822aeb8ada3b125a" translate="yes" xml:space="preserve">
          <source>Checks whether type is a vendor-specific fundamental type.</source>
          <target state="translated">确认类型是否是厂商特定的基本类型。</target>
        </trans-unit>
        <trans-unit id="6927568c692c1534ead0f5a190223a7149662ac5" translate="yes" xml:space="preserve">
          <source>Cherokee</source>
          <target state="translated">Cherokee</target>
        </trans-unit>
        <trans-unit id="5b29ec40fe722116395b446baa3ca821a172b9e2" translate="yes" xml:space="preserve">
          <source>Choose one of multiple ranges at runtime.</source>
          <target state="translated">在运行时从多个范围中选择一个。</target>
        </trans-unit>
        <trans-unit id="0bffc7533a173c7dee535e7316e44257ed38a803" translate="yes" xml:space="preserve">
          <source>Choose one of two ranges at runtime depending on a Boolean condition.</source>
          <target state="translated">在运行时根据布尔条件从两个范围中选择一个。</target>
        </trans-unit>
        <trans-unit id="5544515d81b65f896e82120e57ec6fa91d774f56" translate="yes" xml:space="preserve">
          <source>Chooses all &lt;code&gt;byteXxx&lt;/code&gt; flags.</source>
          <target state="translated">选择所有 &lt;code&gt;byteXxx&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="6438169cea15a58e629d9074302588f2e1950054" translate="yes" xml:space="preserve">
          <source>Chooses all &lt;code&gt;numXxx&lt;/code&gt; flags.</source>
          <target state="translated">选择所有 &lt;code&gt;numXxx&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="c672631dbe7d09bcec68adc7f3844fea3aee543f" translate="yes" xml:space="preserve">
          <source>Chooses one of several ranges at runtime based on an index.</source>
          <target state="translated">在运行时根据索引选择几个范围中的一个。</target>
        </trans-unit>
        <trans-unit id="4155ddaaa02a43e8c79a78caa5873e37eb151cb9" translate="yes" xml:space="preserve">
          <source>Chooses one of two ranges at runtime based on a boolean condition.</source>
          <target state="translated">在运行时根据布尔条件选择两个范围中的一个。</target>
        </trans-unit>
        <trans-unit id="664b0f4761a82a8eae267ec54d633d690bb844d2" translate="yes" xml:space="preserve">
          <source>Choosing &lt;code&gt;stackSize&lt;/code&gt; is as always a compromise. Too small a size exhausts the stack storage after a few allocations, after which there are no gains over the backup allocator. Too large a size increases the stack consumed by the thread and may end up worse off because it explores cold portions of the stack.</source>
          <target state="translated">与以往一样，选择 &lt;code&gt;stackSize&lt;/code&gt; 是一种妥协。太小的大小会在分配几次之后耗尽堆栈存储空间，在此之后，备份分配器将无法获得任何收益。太大的大小会增加线程消耗的堆栈，并且可能会变得更糟，因为它会探索堆栈的较冷部分。</target>
        </trans-unit>
        <trans-unit id="c9814b18eaeb245f343a07d23b55d5cc756f226e" translate="yes" xml:space="preserve">
          <source>Christopher E. Miller, &lt;a href=&quot;http://klickverbot.at&quot;&gt;David Nadlinger&lt;/a&gt;, &lt;a href=&quot;http://thecybershadow.net&quot;&gt;Vladimir Panteleev&lt;/a&gt;</source>
          <target state="translated">克里斯托弗&amp;middot;米勒，&lt;a href=&quot;http://klickverbot.at&quot;&gt;大卫&amp;middot;纳德林格&lt;/a&gt;，&lt;a href=&quot;http://thecybershadow.net&quot;&gt;弗拉基米尔&amp;middot;潘捷列夫&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ef1a7c430ea76a914142ae9383408af4814b11d3" translate="yes" xml:space="preserve">
          <source>Chunk size</source>
          <target state="translated">块度</target>
        </trans-unit>
        <trans-unit id="de7daf1e8f3f4e94d6cfd35d20241f9683bce14b" translate="yes" xml:space="preserve">
          <source>Chunks an input range into subranges of equivalent adjacent elements. In other languages this is often called &lt;code&gt;partitionBy&lt;/code&gt;, &lt;code&gt;groupBy&lt;/code&gt; or &lt;code&gt;sliceWhen&lt;/code&gt;.</source>
          <target state="translated">将输入范围划分为等效相邻元素的子范围。在其他语言中，这通常称为 &lt;code&gt;partitionBy&lt;/code&gt; ， &lt;code&gt;groupBy&lt;/code&gt; 或 &lt;code&gt;sliceWhen&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91ca4cec373000b1433d0ca1c64ba6f2c759ab69" translate="yes" xml:space="preserve">
          <source>Chunks!Source &lt;strong id=&quot;chunks&quot;&gt;chunks&lt;/strong&gt;(Source)(Source source, size_t chunkSize)</source>
          <target state="translated">源&lt;strong id=&quot;chunks&quot;&gt;块&lt;/strong&gt;（源）（源源，size_t chunkSize）</target>
        </trans-unit>
        <trans-unit id="f715fee1f757a55e2f3373ac010b13257f33e0d8" translate="yes" xml:space="preserve">
          <source>Clamps a value into the given bounds.</source>
          <target state="translated">在给定的范围内夹住一个值。</target>
        </trans-unit>
        <trans-unit id="8da610fd30240c8f7bfbe322ae9565c89acaafa1" translate="yes" xml:space="preserve">
          <source>Clang Cpp runtime</source>
          <target state="translated">Clang Cpp运行时</target>
        </trans-unit>
        <trans-unit id="383b1d065b22448681cc3efc5daa12ef6fd55601" translate="yes" xml:space="preserve">
          <source>Class Allocators</source>
          <target state="translated">类分配器</target>
        </trans-unit>
        <trans-unit id="980dc71fd708724fc917e76399e0f97f54ca4455" translate="yes" xml:space="preserve">
          <source>Class Deallocators</source>
          <target state="translated">类分配器</target>
        </trans-unit>
        <trans-unit id="e1c46ea1296f65e318f6d1db9386faff86a36090" translate="yes" xml:space="preserve">
          <source>Class Instantiation</source>
          <target state="translated">类实例化</target>
        </trans-unit>
        <trans-unit id="9293e27da3b0684ddaaea3289920ae977e68c4b8" translate="yes" xml:space="preserve">
          <source>Class Invariant</source>
          <target state="translated">班级不变性</target>
        </trans-unit>
        <trans-unit id="2459ca9a523f95a794bce603404c5263b4256290" translate="yes" xml:space="preserve">
          <source>Class Invariants</source>
          <target state="translated">类不变量</target>
        </trans-unit>
        <trans-unit id="1df27dbdacaa899d3c423178002cc7aabfcb82bd" translate="yes" xml:space="preserve">
          <source>Class Object Layout</source>
          <target state="translated">类对象布局</target>
        </trans-unit>
        <trans-unit id="bce80736a23f07ec5379dd12c4e62a76fe4c9654" translate="yes" xml:space="preserve">
          <source>Class Properties</source>
          <target state="translated">班级属性</target>
        </trans-unit>
        <trans-unit id="31462d21de7565b81dba4582baea30b63d17330c" translate="yes" xml:space="preserve">
          <source>Class comparisons</source>
          <target state="translated">类别比较</target>
        </trans-unit>
        <trans-unit id="004e7955e2bb1bee0b58b1c03a6c08f676e86914" translate="yes" xml:space="preserve">
          <source>Class for exceptions thrown by &lt;code&gt;Socket.accept&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Socket.accept&lt;/code&gt; 引发的异常的类。</target>
        </trans-unit>
        <trans-unit id="0dd0234ce9a3827209b58ef80d34ea3eb2ef98d9" translate="yes" xml:space="preserve">
          <source>Class for exceptions thrown from an &lt;code&gt;Address&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;Address&lt;/code&gt; 抛出的异常的类。</target>
        </trans-unit>
        <trans-unit id="f8cabad72b7cf81c1a9e42e92f24fcecebecdd13" translate="yes" xml:space="preserve">
          <source>Class for exceptions thrown from an &lt;code&gt;InternetHost&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;InternetHost&lt;/code&gt; 引发的异常的类。</target>
        </trans-unit>
        <trans-unit id="d5db95106b80e21b18e83bc22b84105ca9ec0f70" translate="yes" xml:space="preserve">
          <source>Class for parsing an XML Document.</source>
          <target state="translated">用于解析XML文档的类。</target>
        </trans-unit>
        <trans-unit id="fd21b41b841c440b515f1b7977af0ee6dfc40b2f" translate="yes" xml:space="preserve">
          <source>Class for parsing an XML element.</source>
          <target state="translated">用于解析XML元素的类。</target>
        </trans-unit>
        <trans-unit id="a44a999e4ee22e0e38e93a6feafd39bd8662867c" translate="yes" xml:space="preserve">
          <source>Class info, type info, and module info</source>
          <target state="translated">类信息、类型信息和模块信息</target>
        </trans-unit>
        <trans-unit id="00e4305e03e0dd23aa189c7dfb11b275650b4811" translate="yes" xml:space="preserve">
          <source>Class interface</source>
          <target state="translated">类接口</target>
        </trans-unit>
        <trans-unit id="d131c8c89307df58eaa35092ddaf0d9ccbded6f4" translate="yes" xml:space="preserve">
          <source>Class invariants are inherited, that is, any class invariant is implicitly in addition to the invariants of its base classes.</source>
          <target state="translated">类的不变量是继承的,也就是说,任何一个类的不变量都是隐含在其基类的不变量之外的。</target>
        </trans-unit>
        <trans-unit id="96f7dd120edececc37360a6e411b5d487475d92f" translate="yes" xml:space="preserve">
          <source>Class members are always accessed with the . operator.</source>
          <target state="translated">类成员总是用.操作符访问。</target>
        </trans-unit>
        <trans-unit id="90603f7d1f1be2fd75c9f67da4fa9258a7fecd0e" translate="yes" xml:space="preserve">
          <source>Class members are always accessed with the &lt;code&gt;.&lt;/code&gt; operator.</source>
          <target state="translated">始终使用来访问类成员 &lt;code&gt;.&lt;/code&gt; 操作员。</target>
        </trans-unit>
        <trans-unit id="c108e7bd4e33d85ee940d619ea688f67c12f0119" translate="yes" xml:space="preserve">
          <source>Class references are assumed to be allocated using either the GC or are allocated on the stack as &lt;code&gt;scope&lt;/code&gt; classes, and are not tracked.</source>
          <target state="translated">假定类引用是使用GC分配的，还是作为 &lt;code&gt;scope&lt;/code&gt; 类在堆栈上分配的，并且不会被跟踪。</target>
        </trans-unit>
        <trans-unit id="370a9bbed207ceee9d084543596997d531d9a330" translate="yes" xml:space="preserve">
          <source>Class references are considered pointers that are subject to &lt;code&gt;scope&lt;/code&gt;.</source>
          <target state="translated">类引用被认为是受 &lt;code&gt;scope&lt;/code&gt; 约束的指针。</target>
        </trans-unit>
        <trans-unit id="423af25d1c1b0ece97d135bd94f87785f1d1b081" translate="yes" xml:space="preserve">
          <source>Class representing a Character Data section</source>
          <target state="translated">代表字符数据部分的类</target>
        </trans-unit>
        <trans-unit id="af34b125b6fdaf2e164cb16e24345f12dba81970" translate="yes" xml:space="preserve">
          <source>Class representing a Processing Instruction section</source>
          <target state="translated">代表处理指令部分的类</target>
        </trans-unit>
        <trans-unit id="f768c4c1669315ae2806f02f66c55aa9730651bb" translate="yes" xml:space="preserve">
          <source>Class representing a comment</source>
          <target state="translated">代表评论的类</target>
        </trans-unit>
        <trans-unit id="be60f698a1c1d4833c13a3027790690d573ab935" translate="yes" xml:space="preserve">
          <source>Class representing a text (aka Parsed Character Data) section</source>
          <target state="translated">代表文本(也就是解析字符数据)部分的类。</target>
        </trans-unit>
        <trans-unit id="d71c9bec3d378a3193b92288d2a3d4f39af4d514" translate="yes" xml:space="preserve">
          <source>Class representing an XML Instruction section</source>
          <target state="translated">代表XML指令部分的类</target>
        </trans-unit>
        <trans-unit id="18bdedb4191bb66909c3afbec32afb00a0671f2d" translate="yes" xml:space="preserve">
          <source>Class representing an XML document.</source>
          <target state="translated">代表一个XML文档的类。</target>
        </trans-unit>
        <trans-unit id="b824acd16fc71bc2cc584e5d63675cb399574fdb" translate="yes" xml:space="preserve">
          <source>Class representing an XML element.</source>
          <target state="translated">代表一个XML元素的类。</target>
        </trans-unit>
        <trans-unit id="2e4077efbfeca1ecea84c2841a1e337531e07230" translate="yes" xml:space="preserve">
          <source>Class representing an XML tag.</source>
          <target state="translated">代表一个XML标签的类。</target>
        </trans-unit>
        <trans-unit id="3eca99d66e1692913774b276a72eb2d9c5a613f4" translate="yes" xml:space="preserve">
          <source>Class that holds an expression in a Dsymbol wraper. This is not an AST node, but a class used to pass an expression as a function parameter of type Dsymbol.</source>
          <target state="translated">在Dsymbol包装器中保存表达式的类。这不是一个AST节点,而是一个用来传递表达式作为Dsymbol类型函数参数的类。</target>
        </trans-unit>
        <trans-unit id="fd66f846be164f5572f2b91a4e8cf668edcb8a5f" translate="yes" xml:space="preserve">
          <source>Class that implements the &lt;code&gt;InputRange&lt;/code&gt; interface and wraps the input range methods in virtual functions.</source>
          <target state="translated">实现 &lt;code&gt;InputRange&lt;/code&gt; 接口并将输入范围方法包装在虚函数中的类。</target>
        </trans-unit>
        <trans-unit id="7a5fb94e691e67e69c8178bf66e0bfcda94440d4" translate="yes" xml:space="preserve">
          <source>Class that implements the &lt;code&gt;OutputRange&lt;/code&gt; interface and wraps the &lt;code&gt;put&lt;/code&gt; methods in virtual functions.</source>
          <target state="translated">实现 &lt;code&gt;OutputRange&lt;/code&gt; 接口并将 &lt;code&gt;put&lt;/code&gt; 方法包装在虚函数中的类。</target>
        </trans-unit>
        <trans-unit id="6f02b7cdf3a27dfb668a50be53f3c4a25b5410c5" translate="yes" xml:space="preserve">
          <source>ClassDeclaration</source>
          <target state="translated">ClassDeclaration</target>
        </trans-unit>
        <trans-unit id="e227e5b1defef4ae4a1612e580a4b6e31545ba58" translate="yes" xml:space="preserve">
          <source>ClassDeclaration &lt;code&gt;cd&lt;/code&gt;</source>
          <target state="translated">类声明 &lt;code&gt;cd&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88d2f59bfb7ba6b0443204d9f4aa0913667339b9" translate="yes" xml:space="preserve">
          <source>ClassDeclaration &lt;strong id=&quot;classDeclaration&quot;&gt;classDeclaration&lt;/strong&gt;;</source>
          <target state="translated">ClassDeclaration &lt;strong id=&quot;classDeclaration&quot;&gt;classDeclaration&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="922055dec836bd4265fccad1b410b15255aed28c" translate="yes" xml:space="preserve">
          <source>ClassDeclaration &lt;strong id=&quot;metaclass&quot;&gt;metaclass&lt;/strong&gt;;</source>
          <target state="translated">ClassDeclaration &lt;strong id=&quot;metaclass&quot;&gt;元类&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ed3cf94875958c0b64c8f17bbe32c5545117a531" translate="yes" xml:space="preserve">
          <source>ClassDeclaration if found, null if not</source>
          <target state="translated">如果找到ClassDeclaration,则为null</target>
        </trans-unit>
        <trans-unit id="0193a1974eb2b77a25fbe296ffc8a9c0fc9032a5" translate="yes" xml:space="preserve">
          <source>ClassInfo &lt;strong id=&quot;getClassInfo&quot;&gt;getClassInfo&lt;/strong&gt;(_Unwind_Exception* exceptionObject, const(ubyte)* currentLsd);</source>
          <target state="translated">ClassInfo &lt;strong id=&quot;getClassInfo&quot;&gt;getClassInfo&lt;/strong&gt;（_Unwind_Exception * exceptionObject，const（ubyte）* currentLsd）;</target>
        </trans-unit>
        <trans-unit id="082cd7ff80693ec8dbf6e94d67e626c8eb7acf74" translate="yes" xml:space="preserve">
          <source>ClassInvariant</source>
          <target state="translated">ClassInvariant</target>
        </trans-unit>
        <trans-unit id="931763918b2d001bdeb9a0167eeecd1b1464e45f" translate="yes" xml:space="preserve">
          <source>ClassKind &lt;strong id=&quot;classKind&quot;&gt;classKind&lt;/strong&gt;;</source>
          <target state="translated">ClassKind &lt;strong id=&quot;classKind&quot;&gt;classKind&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="91e40f8e856e33a510bdbf85b94648241eeb6d72" translate="yes" xml:space="preserve">
          <source>ClassTemplateDeclaration</source>
          <target state="translated">ClassTemplateDeclaration</target>
        </trans-unit>
        <trans-unit id="ed1846afee3be21521286932b99e2aeae9e6414a" translate="yes" xml:space="preserve">
          <source>Classes</source>
          <target state="translated">Classes</target>
        </trans-unit>
        <trans-unit id="88928400c233ae410eba0ed5ea1d5d957388cae0" translate="yes" xml:space="preserve">
          <source>Classes and functions for creating and parsing XML</source>
          <target state="translated">用于创建和解析XML的类和函数。</target>
        </trans-unit>
        <trans-unit id="e64d39090ae91d34137788357a6ca17b0e59eef2" translate="yes" xml:space="preserve">
          <source>Classes and functions for handling and transcoding between various encodings.</source>
          <target state="translated">用于处理和转码各种编码的类和函数。</target>
        </trans-unit>
        <trans-unit id="94ee5f9cdf031a9bf96906a438e53b06b5e364d3" translate="yes" xml:space="preserve">
          <source>Classes and unions never have elaborate assignments.</source>
          <target state="translated">班级和工会从来没有精心布置过作业。</target>
        </trans-unit>
        <trans-unit id="9cf9cc918357cc355736633df26f1b2a1c76d306" translate="yes" xml:space="preserve">
          <source>Classes and unions never have elaborate copy constructors.</source>
          <target state="translated">类和联合体从来没有精心设计的复制构造函数。</target>
        </trans-unit>
        <trans-unit id="531947ccb13d84d3c9d91ba0159960b4ae281773" translate="yes" xml:space="preserve">
          <source>Classes and unions never have elaborate destructors, even though classes may define &lt;code&gt;~this()&lt;/code&gt;.</source>
          <target state="translated">即使类可以定义 &lt;code&gt;~this()&lt;/code&gt; ，类和联合也从来没有复杂的析构函数。</target>
        </trans-unit>
        <trans-unit id="061681876af68eae00bc697b791a9edd12ded2c6" translate="yes" xml:space="preserve">
          <source>Classes and unions never have elaborate move semantics.</source>
          <target state="translated">类和联合体从来没有详细的移动语义。</target>
        </trans-unit>
        <trans-unit id="b757232012d9216b3c6a4071538b9dc9ae16e888" translate="yes" xml:space="preserve">
          <source>Classes are programmer defined types. Support for classes are what make D an object oriented language, giving it encapsulation, inheritance, and polymorphism. D classes support the single inheritance paradigm, extended by adding support for interfaces. Class objects are instantiated by reference only.</source>
          <target state="translated">类是程序员定义的类型。对类的支持是D语言成为面向对象语言的原因,使其具有封装、继承和多态性。D类支持单一继承范式,通过增加对接口的支持来扩展。类对象只能通过引用来实例化。</target>
        </trans-unit>
        <trans-unit id="64beae7795db165495c04ccd743e7e2188a737f0" translate="yes" xml:space="preserve">
          <source>Classes become abstract if any of its virtual member functions are declared abstract or if they are defined within an abstract attribute. Note that an abstract class may also contain non-virtual member functions.</source>
          <target state="translated">如果类的任何虚拟成员函数被声明为抽象的,或者它们被定义在一个抽象属性中,那么类就成为抽象的。注意,一个抽象类也可以包含非虚拟成员函数。</target>
        </trans-unit>
        <trans-unit id="13447880a16527416e427574ff84252582f7e516" translate="yes" xml:space="preserve">
          <source>Classes can be used as the</source>
          <target state="translated">类可以作为</target>
        </trans-unit>
        <trans-unit id="80f7ca9d259d3ef3e97f57bc1d7cca827ec1caa6" translate="yes" xml:space="preserve">
          <source>Classes consist of:</source>
          <target state="translated">班级包括:</target>
        </trans-unit>
        <trans-unit id="282ae17a602326eef034194b26fb43aa7fe0fc9d" translate="yes" xml:space="preserve">
          <source>Classes defined within an abstract attribute or with abstract member functions cannot be instantiated directly. They can only be instantiated as a base class of another, non-abstract, class.</source>
          <target state="translated">在抽象属性中定义的类或具有抽象成员函数的类不能直接被实例化,它们只能作为另一个非抽象类的基类被实例化。它们只能被实例化为另一个非抽象类的基类。</target>
        </trans-unit>
        <trans-unit id="f1d8e8c29e8bdc647b741d3f95fb6db5ee347a64" translate="yes" xml:space="preserve">
          <source>Classes derived from COM interfaces are COM classes.</source>
          <target state="translated">从COM接口派生的类是COM类。</target>
        </trans-unit>
        <trans-unit id="bd620604c65cda121c2c3178e92377099e03939c" translate="yes" xml:space="preserve">
          <source>Classes that inherit from an interface may not override final or static interface member functions.</source>
          <target state="translated">继承自接口的类不能覆盖最终或静态接口成员函数。</target>
        </trans-unit>
        <trans-unit id="5d1fce9e58eb73d5ee27c4db7d0cde0cfef20fab" translate="yes" xml:space="preserve">
          <source>Classic Visitor class which implements visit methods for all the AST nodes present in the compiler. The visit methods for AST nodes created at parse time are inherited while the visiting methods for AST nodes created at semantic time are implemented.</source>
          <target state="translated">经典的Visitor类,它为编译器中存在的所有AST节点实现了访问方法。在解析时创建的AST节点的访问方法是继承的,而在语义时创建的AST节点的访问方法是实现的。</target>
        </trans-unit>
        <trans-unit id="ec46bc29fc953e9c5d20d1293a749b2d318b26db" translate="yes" xml:space="preserve">
          <source>Classics</source>
          <target state="translated">Classics</target>
        </trans-unit>
        <trans-unit id="94c2a3189e7f7885455350c4c7a8df2d0d6ad1d1" translate="yes" xml:space="preserve">
          <source>Classification</source>
          <target state="translated">Classification</target>
        </trans-unit>
        <trans-unit id="f7e62460bb760d585edcc42972294b3355a88236" translate="yes" xml:space="preserve">
          <source>Classsym* &lt;strong id=&quot;fake_classsym&quot;&gt;fake_classsym&lt;/strong&gt;(Identifier id);</source>
          <target state="translated">Classsym * &lt;strong id=&quot;fake_classsym&quot;&gt;fake_classsym&lt;/strong&gt;（标识符ID）;</target>
        </trans-unit>
        <trans-unit id="c24c0db0ec6dd19513d073595d928b550d95b320" translate="yes" xml:space="preserve">
          <source>Cleans up and removes a whole multi stack. It does not free or touch any individual easy handles in any way. We need to define in what state those handles will be if this function is called in the middle of a transfer.</source>
          <target state="translated">清理和去除整个多叠。它不会以任何方式释放或触及任何单个的简易句柄。我们需要定义如果这个函数在传输过程中被调用,这些句柄将处于什么状态。</target>
        </trans-unit>
        <trans-unit id="74435379a09fe369f083f9d7cb1588b2c142f5b0" translate="yes" xml:space="preserve">
          <source>Cleans up this ThreadInfo.</source>
          <target state="translated">清理这个ThreadInfo。</target>
        </trans-unit>
        <trans-unit id="2978244ea1d5b187c301c21366eda9dedde71b7e" translate="yes" xml:space="preserve">
          <source>Clear a pointer option.</source>
          <target state="translated">清除一个指针选项。</target>
        </trans-unit>
        <trans-unit id="e034f5a3aa872aabba7dcb11d326d687c4332626" translate="yes" xml:space="preserve">
          <source>Clear a pointer option. Does not raise an exception if the underlying libcurl does not support the option. Use sparingly.</source>
          <target state="translated">清除一个指针选项。如果底层libcurl不支持该选项,不会引发异常。尽量少用。</target>
        </trans-unit>
        <trans-unit id="a9d817365eb86e6681481b253301a6c9352b3cc8" translate="yes" xml:space="preserve">
          <source>Clear all commands send to ftp server.</source>
          <target state="translated">清除所有发送到ftp服务器的命令。</target>
        </trans-unit>
        <trans-unit id="aabfad8a5b74b09b0c1a45cf20e29c1bc3b34566" translate="yes" xml:space="preserve">
          <source>Clear all cookies.</source>
          <target state="translated">清除所有cookies。</target>
        </trans-unit>
        <trans-unit id="959b909eeb5ade07f369e65c6d34109729b67e12" translate="yes" xml:space="preserve">
          <source>Clear all outgoing headers.</source>
          <target state="translated">清理所有出站头。</target>
        </trans-unit>
        <trans-unit id="266e66f0d3d6904b779ec3d759be8309dd9c6a30" translate="yes" xml:space="preserve">
          <source>Clear session cookies.</source>
          <target state="translated">清除会话cookies。</target>
        </trans-unit>
        <trans-unit id="8fc5d7d65b7fdfd82eecfa31a9a25b3fac8d53e4" translate="yes" xml:space="preserve">
          <source>Clear the data in the buffer</source>
          <target state="translated">清除缓冲区中的数据</target>
        </trans-unit>
        <trans-unit id="aa6bcffd4a89f4241729474f1c06cc264b136f23" translate="yes" xml:space="preserve">
          <source>Clears the TZ environment variable.</source>
          <target state="translated">清除TZ环境变量。</target>
        </trans-unit>
        <trans-unit id="bf4e8edf5ce7d61a0c02a57350749b31964ea588" translate="yes" xml:space="preserve">
          <source>Clears the heap by detaching it from the underlying store.</source>
          <target state="translated">通过从底层存储中分离出堆来清除堆。</target>
        </trans-unit>
        <trans-unit id="85a1162bfefbbee36bd8acce0b24bc3c4f0d6476" translate="yes" xml:space="preserve">
          <source>Clears the heap. Returns the portion of the store from &lt;code&gt;0&lt;/code&gt; up to &lt;code&gt;length&lt;/code&gt;, which satisfies the &lt;a href=&quot;https://en.wikipedia.org/wiki/Heap_(data_structure)&quot;&gt;heap property&lt;/a&gt;.</source>
          <target state="translated">清除堆。返回存储量从 &lt;code&gt;0&lt;/code&gt; 到 &lt;code&gt;length&lt;/code&gt; 的部分，该部分满足&lt;a href=&quot;https://en.wikipedia.org/wiki/Heap_(data_structure)&quot;&gt;heap属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="87154787f8eca1558e3d9985e8d82cb0474f80d3" translate="yes" xml:space="preserve">
          <source>Clears the managed array. This allows the elements of the array to be reused for appending.</source>
          <target state="translated">清空被管理的数组。这允许数组中的元素被重复使用以进行追加。</target>
        </trans-unit>
        <trans-unit id="7cc6960537f814063b8ae6e19a6580b4b9426a39" translate="yes" xml:space="preserve">
          <source>Clears the specified bits for the memory references by p. If p references memory not originally allocated by this garbage collector, points to the interior of a memory block, or if p is null, no action will be performed.</source>
          <target state="translated">清除p对内存引用的指定位,如果p引用的内存不是这个垃圾收集器最初分配的,指向内存块的内部,或者p为空,则不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="d692c2c202249e9e4fe0069f00e6bff039f0c2b5" translate="yes" xml:space="preserve">
          <source>Close A BLOB Handle</source>
          <target state="translated">关闭一个BLOB手柄</target>
        </trans-unit>
        <trans-unit id="c2fcec962038b6d876aef882b5671cadf0a6a473" translate="yes" xml:space="preserve">
          <source>Close similarity with StructDeclaration::buildPostBlit(), and the ordering changes (runs backward instead of forwards).</source>
          <target state="translated">与StructDeclaration::buildPostBlit()的相似度很高,但顺序发生了变化(向后而不是向前运行)。</target>
        </trans-unit>
        <trans-unit id="abc1e6908fffa951befef872f924ffd37a933a94" translate="yes" xml:space="preserve">
          <source>Close_Punctuation</source>
          <target state="translated">Close_Punctuation</target>
        </trans-unit>
        <trans-unit id="111445e87ccfca2b4a774d56d32be272bb8db6b1" translate="yes" xml:space="preserve">
          <source>Closes both ends of the pipe.</source>
          <target state="translated">关闭管道的两端。</target>
        </trans-unit>
        <trans-unit id="f1ceaea1ade786b6daac7b066c7f274b9fd722f8" translate="yes" xml:space="preserve">
          <source>Closing A Database Connection</source>
          <target state="translated">关闭数据库连接</target>
        </trans-unit>
        <trans-unit id="749585ff38f67fad5e857de1d450982c56ce1960" translate="yes" xml:space="preserve">
          <source>Closing a file will release all locks associated with the file. On POSIX, even locks acquired via a different &lt;code&gt;File&lt;/code&gt; will be released as well.</source>
          <target state="translated">关闭文件将释放与该文件关联的所有锁。在POSIX上，即使通过其他 &lt;code&gt;File&lt;/code&gt; 获取的锁也将被释放。</target>
        </trans-unit>
        <trans-unit id="63c1d27a07661bae4b5bbb559006eaa3661d7c60" translate="yes" xml:space="preserve">
          <source>Closures are implemented by taking the local variables that need to survive the scope of the function, and copying them into a gc allocated chuck of memory. That chunk, called the closure here, is inserted into the linked list of stack frames instead of the usual stack frame.</source>
          <target state="translated">闭包的实现方式是将需要在函数范围内存活的局部变量,复制到一个gc分配的内存小块中。这块内存,在这里称为闭包,被插入到链接的栈框架列表中,而不是通常的栈框架中。</target>
        </trans-unit>
        <trans-unit id="c9b2ef049e2a57bda63fd1cc78251ce6a2187e99" translate="yes" xml:space="preserve">
          <source>Cn</source>
          <target state="translated">Cn</target>
        </trans-unit>
        <trans-unit id="8d39b08893191a61de5487a71b3ae48e722dc4dc" translate="yes" xml:space="preserve">
          <source>Co</source>
          <target state="translated">Co</target>
        </trans-unit>
        <trans-unit id="3b89922ff6533757df55cb947df36b1820f7780e" translate="yes" xml:space="preserve">
          <source>Coalescing is carried during deallocation.</source>
          <target state="translated">在分配过程中进行凝聚。</target>
        </trans-unit>
        <trans-unit id="ae47022506f14b1edf01e25a19bb75021f3dfd6b" translate="yes" xml:space="preserve">
          <source>Code Generator State</source>
          <target state="translated">代码生成器状态</target>
        </trans-unit>
        <trans-unit id="61eac493399c61900e3b0a3c302c25c90df00dd5" translate="yes" xml:space="preserve">
          <source>Code Snippet</source>
          <target state="translated">代码片段</target>
        </trans-unit>
        <trans-unit id="ca4bf5763a8f4b0c77b0483fb046442fb68b4bcf" translate="yes" xml:space="preserve">
          <source>Code calling &lt;code&gt;getLine&lt;/code&gt; (usually far away from its definition) can't be understood without looking at the documentation, even by users familiar with the API:</source>
          <target state="translated">不查看文档就无法理解调用 &lt;code&gt;getLine&lt;/code&gt; 的代码（通常远离其定义），即使是熟悉API的用户也无法理解：</target>
        </trans-unit>
        <trans-unit id="81c9c017895b738c0e50ae9184f9f1e3b2468977" translate="yes" xml:space="preserve">
          <source>Code data type</source>
          <target state="translated">代码数据类型</target>
        </trans-unit>
        <trans-unit id="5aef28f388cc2b6d39bbacf158f6b9e94711ece9" translate="yes" xml:space="preserve">
          <source>Code generation</source>
          <target state="translated">代码生成</target>
        </trans-unit>
        <trans-unit id="f2a3cebabe66438483aac9c32717824f44b75d4c" translate="yes" xml:space="preserve">
          <source>Code that defines allocators shareable across threads ultimately implements the &lt;a href=&quot;#ISharedAllocator&quot;&gt;&lt;code&gt;ISharedAllocator&lt;/code&gt;&lt;/a&gt; interface, possibly by using &lt;a href=&quot;#CSharedAllocatorImpl&quot;&gt;&lt;code&gt;CSharedAllocatorImpl&lt;/code&gt;&lt;/a&gt; below, and then build a &lt;code&gt;RCISharedAllocator&lt;/code&gt; out of this.</source>
          <target state="translated">代码定义分配器跨线程共享的最终实现&lt;a href=&quot;#ISharedAllocator&quot;&gt; &lt;code&gt;ISharedAllocator&lt;/code&gt; &lt;/a&gt;接口，可能通过使用&lt;a href=&quot;#CSharedAllocatorImpl&quot;&gt; &lt;code&gt;CSharedAllocatorImpl&lt;/code&gt; &lt;/a&gt;下面，然后生成一个 &lt;code&gt;RCISharedAllocator&lt;/code&gt; 出于此。</target>
        </trans-unit>
        <trans-unit id="2ce7d7f9589694e248dfd5c203d7de9947b03c60" translate="yes" xml:space="preserve">
          <source>Code that defines allocators ultimately implements the &lt;a href=&quot;#IAllocator&quot;&gt;&lt;code&gt;IAllocator&lt;/code&gt;&lt;/a&gt; interface, possibly by using &lt;a href=&quot;#CAllocatorImpl&quot;&gt;&lt;code&gt;CAllocatorImpl&lt;/code&gt;&lt;/a&gt; below, and then build a &lt;code&gt;RCIAllocator&lt;/code&gt; out of this.</source>
          <target state="translated">代码定义分配器最终实现&lt;a href=&quot;#IAllocator&quot;&gt; &lt;code&gt;IAllocator&lt;/code&gt; &lt;/a&gt;接口，可能通过使用&lt;a href=&quot;#CAllocatorImpl&quot;&gt; &lt;code&gt;CAllocatorImpl&lt;/code&gt; &lt;/a&gt;下面，然后生成一个 &lt;code&gt;RCIAllocator&lt;/code&gt; 出于此。</target>
        </trans-unit>
        <trans-unit id="648d49ad8e99c3fb1b22ef73fd685d72f38f47f8" translate="yes" xml:space="preserve">
          <source>CodePoints!E &lt;strong id=&quot;codePoints&quot;&gt;codePoints&lt;/strong&gt;(E)(immutable(E)[] s);</source>
          <target state="translated">Codepoints！E &lt;strong id=&quot;codePoints&quot;&gt;codePoints&lt;/strong&gt;（E）（immutable（E）[] s）;</target>
        </trans-unit>
        <trans-unit id="e056cd1238b78a879d641cec9ec7096771e7f154" translate="yes" xml:space="preserve">
          <source>CodeUnits!E &lt;strong id=&quot;codeUnits&quot;&gt;codeUnits&lt;/strong&gt;(E)(dchar c);</source>
          <target state="translated">CodeUnits！E &lt;strong id=&quot;codeUnits&quot;&gt;codeUnits&lt;/strong&gt;（E）（dchar c）;</target>
        </trans-unit>
        <trans-unit id="9e5e2fb2ae8d76c3506f723e7bf1081e039cf3b0" translate="yes" xml:space="preserve">
          <source>CodepointSet &lt;strong id=&quot;parseSet&quot;&gt;parseSet&lt;/strong&gt;(Range)(ref Range range, bool casefold = false)</source>
          <target state="translated">CodepointSet &lt;strong id=&quot;parseSet&quot;&gt;parseSet&lt;/strong&gt;（范围）（参考文献范围的范围，布尔casefold =假）</target>
        </trans-unit>
        <trans-unit id="ab22b1cbc13995ba1b3b200e55dcfdd0544bb677" translate="yes" xml:space="preserve">
          <source>CodepointTrie is the type of Trie as generated by codepointTrie function.</source>
          <target state="translated">CodepointTrie是由codepointTrie函数生成的Trie类型。</target>
        </trans-unit>
        <trans-unit id="f4676db78e987928a98e39c01c3be6dce486eb6b" translate="yes" xml:space="preserve">
          <source>Codeview 4 stuff See &quot;Microsoft Symbol and Type OMF&quot; document</source>
          <target state="translated">Codeview 4的东西 请看 &quot;微软符号和类型OMF &quot;文档。</target>
        </trans-unit>
        <trans-unit id="5703d432c480d27062f281f688e79056c7ad8ff5" translate="yes" xml:space="preserve">
          <source>Codeview Debugger Extensions</source>
          <target state="translated">Codeview调试器扩展</target>
        </trans-unit>
        <trans-unit id="f2ac091ea616d198f2fcdf2fa7fca9b23cc03ae8" translate="yes" xml:space="preserve">
          <source>Codeview OEM Extensions for D</source>
          <target state="translated">Codeview D的OEM扩展</target>
        </trans-unit>
        <trans-unit id="1e254a056c86801f8b560ebd071943f8829e763e" translate="yes" xml:space="preserve">
          <source>Collation Needed Callbacks</source>
          <target state="translated">整理需要的回调</target>
        </trans-unit>
        <trans-unit id="6fe1d0f55b0a1f3b24dadd046f77aad5b501d708" translate="yes" xml:space="preserve">
          <source>Collect all instance fields, then determine instance size.</source>
          <target state="translated">收集所有实例字段,然后确定实例大小。</target>
        </trans-unit>
        <trans-unit id="12bbc9c399cd5560e95d3b021061d86be8bc2a9c" translate="yes" xml:space="preserve">
          <source>Collect certificate chain info and allow it to get retrievable with CURLINFO_CERTINFO after the transfer is complete. (Unfortunately) only working with OpenSSL-powered builds.</source>
          <target state="translated">收集证书链信息,并允许它在传输完成后通过CURLINFO_CERTINFO进行检索。(遗憾的是)只适用于OpenSSL驱动的构建。</target>
        </trans-unit>
        <trans-unit id="468b13f09989b44757225ef38e66278a68977e9f" translate="yes" xml:space="preserve">
          <source>Collect statistics about any other allocator.</source>
          <target state="translated">收集任何其他分配器的统计数据。</target>
        </trans-unit>
        <trans-unit id="051496a97d15089d5729a697772eef84032a0d1c" translate="yes" xml:space="preserve">
          <source>CollectHandler &lt;code&gt;h&lt;/code&gt;</source>
          <target state="translated">CollectHandler &lt;code&gt;h&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26184bfd23f5e4f04f870a87cbb3381399308c03" translate="yes" xml:space="preserve">
          <source>CollectHandler &lt;strong id=&quot;rt_getCollectHandler&quot;&gt;rt_getCollectHandler&lt;/strong&gt;();</source>
          <target state="translated">CollectHandler &lt;strong id=&quot;rt_getCollectHandler&quot;&gt;rt_getCollectHandler&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="9e011708a38de006c0934dcad91ea7104a3760e9" translate="yes" xml:space="preserve">
          <source>Collection of declarations that stores foreach index variables in a local symbol table. Other symbols declared within are forwarded to another scope, like:</source>
          <target state="translated">在本地符号表中存储foreach索引变量的声明集合。在里面声明的其他符号会被转发到另一个作用域,比如。</target>
        </trans-unit>
        <trans-unit id="4550137c5d8ee30c9c444e2275bc095775ae9fd8" translate="yes" xml:space="preserve">
          <source>Collection of typical and useful prebuilt allocators using the given components. User code would typically import this module and use its facilities, or import individual heap building blocks and assemble them.</source>
          <target state="translated">使用给定组件的典型和有用的预制分配器的集合。用户代码通常会导入这个模块并使用它的设施,或者导入单个的堆构件并进行组装。</target>
        </trans-unit>
        <trans-unit id="ef19b0ece05a3462504233adba544b8b5a08b828" translate="yes" xml:space="preserve">
          <source>Colloquially known as the average, &lt;code&gt;mean([1, 2, 3])&lt;/code&gt; returns &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">俗称平均值， &lt;code&gt;mean([1, 2, 3])&lt;/code&gt; 返回 &lt;code&gt;2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb3df2ba2c8c0867352fa9e3671ba7ae4fd30398" translate="yes" xml:space="preserve">
          <source>Color highlighting to classify messages</source>
          <target state="translated">彩色高亮显示,对信息进行分类</target>
        </trans-unit>
        <trans-unit id="cfbfc51b4b3062caab10bcf86299598910467bc8" translate="yes" xml:space="preserve">
          <source>Column Names In A Result Set</source>
          <target state="translated">结果集中的列名</target>
        </trans-unit>
        <trans-unit id="17e28d0308aeca3705368383ac8a754a55a1f9cb" translate="yes" xml:space="preserve">
          <source>Column number at which parse failure occurred</source>
          <target state="translated">发生解析失败的列号</target>
        </trans-unit>
        <trans-unit id="8802a6119729c5dbcd1a4a6fccd2dd26ff860c9c" translate="yes" xml:space="preserve">
          <source>Combine a &lt;code&gt;path&lt;/code&gt; and a file &lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">结合 &lt;code&gt;path&lt;/code&gt; 和文件 &lt;code&gt;name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98f6dcf6f609fca2856f9333b52c621a46631536" translate="yes" xml:space="preserve">
          <source>Combine e1 and e2 by CommaExp if both are not NULL.</source>
          <target state="translated">如果e1和e2都不是NULL,则用CommaExp合并。</target>
        </trans-unit>
        <trans-unit id="c26362babef999f12a51b76dac746d90b76964fd" translate="yes" xml:space="preserve">
          <source>Combine two document comments into one, separated by an extra newline if newParagraph is true.</source>
          <target state="translated">将两个文档注释合并为一个,如果newParagraph为真,则用一个额外的新行分隔。</target>
        </trans-unit>
        <trans-unit id="edc044e8199855a2b041cea713a198a580a2531b" translate="yes" xml:space="preserve">
          <source>Combine types.</source>
          <target state="translated">结合类型。</target>
        </trans-unit>
        <trans-unit id="25346b872edf3bfe2419bf590c58043497a9e602" translate="yes" xml:space="preserve">
          <source>Combines all flags above.</source>
          <target state="translated">综合以上所有旗帜。</target>
        </trans-unit>
        <trans-unit id="74c07f7ae306b9dd4da07ceabcc403719eb0b180" translate="yes" xml:space="preserve">
          <source>Combines one or more path segments.</source>
          <target state="translated">组合一个或多个路径段。</target>
        </trans-unit>
        <trans-unit id="f83b8c4f6b0762b14b6a3f2a338c87fcd58c0b18" translate="yes" xml:space="preserve">
          <source>Combines several template predicates using logical AND, i.e. constructs a new predicate which evaluates to true for a given input T if and only if all of the passed predicates are true for T.</source>
          <target state="translated">使用逻辑AND组合多个模板谓词,即构造一个新的谓词,如果且仅当所有传递的谓词对T为真时,该谓词对给定输入T的评价为真。</target>
        </trans-unit>
        <trans-unit id="aba602ae0d3fbfaf1b1e3b80dab8046665c5745f" translate="yes" xml:space="preserve">
          <source>Combines several template predicates using logical OR, i.e. constructs a new predicate which evaluates to true for a given input T if and only at least one of the passed predicates is true for T.</source>
          <target state="translated">使用逻辑OR组合多个模板谓词,即构造一个新的谓词,对于给定的输入T,如果且仅有一个传递的谓词为真,则该谓词评价为真。</target>
        </trans-unit>
        <trans-unit id="b31cc4ba9ad95a280e295db305a32838ab4494f4" translate="yes" xml:space="preserve">
          <source>Combines the &lt;a href=&quot;std_datetime_date#Date&quot;&gt;&lt;code&gt;std.datetime.date.Date&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;std_datetime_date#TimeOfDay&quot;&gt;&lt;code&gt;std.datetime.date.TimeOfDay&lt;/code&gt;&lt;/a&gt; structs to give an object which holds both the date and the time. It is optimized for calendar-based operations and has no concept of time zone. For an object which is optimized for time operations based on the system time, use &lt;a href=&quot;std_datetime_systime#SysTime&quot;&gt;&lt;code&gt;std.datetime.systime.SysTime&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;std_datetime_systime#SysTime&quot;&gt;&lt;code&gt;std.datetime.systime.SysTime&lt;/code&gt;&lt;/a&gt; has a concept of time zone and has much higher precision (hnsecs). &lt;code&gt;DateTime&lt;/code&gt; is intended primarily for calendar-based uses rather than precise time operations.</source>
          <target state="translated">组合&lt;a href=&quot;std_datetime_date#Date&quot;&gt; &lt;code&gt;std.datetime.date.Date&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;std_datetime_date#TimeOfDay&quot;&gt; &lt;code&gt;std.datetime.date.TimeOfDay&lt;/code&gt; &lt;/a&gt;结构以提供同时包含日期和时间的对象。它针对基于日历的操作进行了优化，并且没有时区的概念。对于基于系统时间针对时间操作进行了优化的对象，请使用&lt;a href=&quot;std_datetime_systime#SysTime&quot;&gt; &lt;code&gt;std.datetime.systime.SysTime&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;std_datetime_systime#SysTime&quot;&gt; &lt;code&gt;std.datetime.systime.SysTime&lt;/code&gt; &lt;/a&gt;具有时区的概念，并且精度更高（hnsecs）。 &lt;code&gt;DateTime&lt;/code&gt; 主要用于基于日历的用途，而不是精确的时间操作。</target>
        </trans-unit>
        <trans-unit id="b348c9883d7a65f18c195bae42b3350c1cfcc257" translate="yes" xml:space="preserve">
          <source>Combines things into output file name for .html and .di files.</source>
          <target state="translated">将东西组合成.html和.di文件的输出文件名。</target>
        </trans-unit>
        <trans-unit id="1cb6816f0f4c743f4be34cb8f1005b8dc4a5dbab" translate="yes" xml:space="preserve">
          <source>Combining Diacritical Marks</source>
          <target state="translated">组合双音符</target>
        </trans-unit>
        <trans-unit id="7bbd088f443b08f8c69b5507dfb474b887bed2d3" translate="yes" xml:space="preserve">
          <source>Combining Diacritical Marks Supplement</source>
          <target state="translated">合并双音符补编</target>
        </trans-unit>
        <trans-unit id="89777baa8157a4e8e953c3fa634c48e0c8258bcc" translate="yes" xml:space="preserve">
          <source>Combining Diacritical Marks for Symbols</source>
          <target state="translated">组合符号的重音符号。</target>
        </trans-unit>
        <trans-unit id="d0f9b6a69c0d912d5ea6af9438228b3d2f3751e4" translate="yes" xml:space="preserve">
          <source>Combining Half Marks</source>
          <target state="translated">合并半分</target>
        </trans-unit>
        <trans-unit id="33e7a69b870095426b74829cdf476d33798ed00e" translate="yes" xml:space="preserve">
          <source>Combining Qualifiers</source>
          <target state="translated">组合限定词</target>
        </trans-unit>
        <trans-unit id="6b7ee24a290e7c102397f117a90975aafc87fb59" translate="yes" xml:space="preserve">
          <source>Comma Separated Values provide a simple means to transfer and store tabular data. It has been common for programs to use their own variant of the CSV format. This parser will loosely follow the &lt;a href=&quot;http://tools.ietf.org/html/rfc4180&quot;&gt;RFC-4180&lt;/a&gt;. CSV input should adhere to the following criteria (differences from RFC-4180 in parentheses):</source>
          <target state="translated">逗号分隔值提供了一种简单的方式来传输和存储表格数据。程序通常使用自己的CSV格式变体。该解析器将宽松地遵循&lt;a href=&quot;http://tools.ietf.org/html/rfc4180&quot;&gt;RFC-4180&lt;/a&gt;。CSV输入应遵循以下标准（括号中的RFC-4180与RFC-4180的区别）：</target>
        </trans-unit>
        <trans-unit id="b4def8608142eafccba008125cdb8f25176618f8" translate="yes" xml:space="preserve">
          <source>Comma Separated Values provide a simple means to transfer and store tabular data. It has been common for programs to use their own variant of the CSV format. This parser will loosely follow the &lt;a href=&quot;https://tools.ietf.org/html/rfc4180&quot;&gt;RFC-4180&lt;/a&gt;. CSV input should adhere to the following criteria (differences from RFC-4180 in parentheses):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7bdcc128a60763ff9cb8c0be38b2ccf8b45812" translate="yes" xml:space="preserve">
          <source>Comma separated list of hostnames defining no-proxy zones. These should match both hostnames directly, and hostnames within a domain. For example, local.com will match local.com and www.local.com, but NOT notlocal.com or www.notlocal.com. For compatibility with other implementations of this, .local.com will be considered to be the same as local.com. A single * is the only valid wildcard, and effectively disables the use of proxy.</source>
          <target state="translated">逗号分隔的定义无代理区的主机名列表。这些主机名既要直接匹配主机名,也要匹配域内的主机名。例如,local.com 将匹配 local.com 和 www.local.com,但不匹配 notlocal.com 或 www.notlocal.com。为了与其他实现的兼容性,.local.com将被视为与local.com相同。单一的*是唯一有效的通配符,并且有效地禁止使用代理。</target>
        </trans-unit>
        <trans-unit id="f6fe35e209171bf42b301a97ecb399ad5a56cfaf" translate="yes" xml:space="preserve">
          <source>Command line</source>
          <target state="translated">命令行</target>
        </trans-unit>
        <trans-unit id="5663b86338bee23174b52b5ba46d8c32b58f8344" translate="yes" xml:space="preserve">
          <source>Command line arguments</source>
          <target state="translated">命令行参数</target>
        </trans-unit>
        <trans-unit id="b7387b33d51887468652e802f6afcaeeac9763ce" translate="yes" xml:space="preserve">
          <source>Command line options starting with &quot;--DRT-&quot; are filtered out before calling main, so the program will not see them. They are still available via &lt;code&gt;rt_args&lt;/code&gt;.</source>
          <target state="translated">以&amp;ldquo; --DRT-&amp;rdquo;开头的命令行选项在调用main之前已被滤除，因此程序将看不到它们。它们仍然可以通过 &lt;code&gt;rt_args&lt;/code&gt; 获得。</target>
        </trans-unit>
        <trans-unit id="66903ceee41d5ef93421296e69bd6bc51f61efb5" translate="yes" xml:space="preserve">
          <source>Comment &lt;code&gt;item&lt;/code&gt;</source>
          <target state="translated">评论 &lt;code&gt;item&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48954ad4a0817f783f701d92a1c3c569e75777df" translate="yes" xml:space="preserve">
          <source>Comment associated with this member.</source>
          <target state="translated">与该成员相关的评论。</target>
        </trans-unit>
        <trans-unit id="1e06489a89cedf711af9607db1d687967d2faf01" translate="yes" xml:space="preserve">
          <source>Comment below is from curlbuild.h:</source>
          <target state="translated">以下评论来自curlbuild.h。</target>
        </trans-unit>
        <trans-unit id="7f9ff34af4b665bfb574ac85235f0f1cf4635d35" translate="yes" xml:space="preserve">
          <source>CommentException if the comment body is illegal (contains &quot;--&quot; or exactly equals &quot;-&quot;)</source>
          <target state="translated">CommentException如果评论体是非法的(包含&quot;--&quot;或完全等于&quot;--&quot;)。</target>
        </trans-unit>
        <trans-unit id="4264255f1057eb8725699e53f5d3e7b96386a8eb" translate="yes" xml:space="preserve">
          <source>Comment[] &lt;strong id=&quot;comments&quot;&gt;comments&lt;/strong&gt;;</source>
          <target state="translated">评论[] &lt;strong id=&quot;comments&quot;&gt;评论&lt;/strong&gt;；</target>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="f8e4ca873b869b2ec1ff4daac61440fd8ce0e0ee" translate="yes" xml:space="preserve">
          <source>Comments cannot be used as token concatenators, for example, &lt;code&gt;abc/**/def&lt;/code&gt; is two tokens, &lt;code&gt;abc&lt;/code&gt; and &lt;code&gt;def&lt;/code&gt;, not one &lt;code&gt;abcdef&lt;/code&gt; token.</source>
          <target state="translated">注释不能用作令牌串联器，例如， &lt;code&gt;abc/**/def&lt;/code&gt; 是两个令牌 &lt;code&gt;abc&lt;/code&gt; 和 &lt;code&gt;def&lt;/code&gt; ，而不是一个 &lt;code&gt;abcdef&lt;/code&gt; 令牌。</target>
        </trans-unit>
        <trans-unit id="ffc61bb49c86bffaff083a2ed5fcbad20841a45a" translate="yes" xml:space="preserve">
          <source>Commit And Rollback Notification Callbacks</source>
          <target state="translated">提交和回滚通知回调</target>
        </trans-unit>
        <trans-unit id="7de90a65241a6cdbd9ade485d777715d99285a1e" translate="yes" xml:space="preserve">
          <source>Common</source>
          <target state="translated">Common</target>
        </trans-unit>
        <trans-unit id="d5f7712570de637ff2bff7b7aca4d031bb1ee21d" translate="yes" xml:space="preserve">
          <source>Common Indic Number Forms</source>
          <target state="translated">常见的印号表格</target>
        </trans-unit>
        <trans-unit id="b01bd9f5938cc4dfaf1079b1a8c35dbfb98a3ba0" translate="yes" xml:space="preserve">
          <source>Common approaches such as hash-tables or binary search over sorted code point intervals (as in &lt;a href=&quot;#InversionList&quot;&gt;&lt;code&gt;InversionList&lt;/code&gt;&lt;/a&gt;) are insufficient. Hash-tables have enormous memory footprint and binary search over intervals is not fast enough for some heavy-duty algorithms.</source>
          <target state="translated">普通方法，如哈希表或过排序代码点间隔二进制搜索（如在&lt;a href=&quot;#InversionList&quot;&gt; &lt;code&gt;InversionList&lt;/code&gt; &lt;/a&gt;）是不够的。哈希表具有巨大的内存占用空间，并且在某些时间间隔内进行二进制搜索对于某些重型算法而言还不够快。</target>
        </trans-unit>
        <trans-unit id="a32dd588a7041c6270a2514d02c733a9073d9c8d" translate="yes" xml:space="preserve">
          <source>Common case for setting integer and boolean options.</source>
          <target state="translated">设置整数和布尔选项的常见情况。</target>
        </trans-unit>
        <trans-unit id="cfa4873432fa4d4b23cf20cc5198f21c85152d5f" translate="yes" xml:space="preserve">
          <source>Common case of getting integer and boolean options.</source>
          <target state="translated">获取整数和布尔选项的常见情况。</target>
        </trans-unit>
        <trans-unit id="a72840f8f3c4385179a2e1cf4bebd6d9b76a472a" translate="yes" xml:space="preserve">
          <source>Common code for writing containers.</source>
          <target state="translated">编写容器的常用代码。</target>
        </trans-unit>
        <trans-unit id="437c2f93da603a10ceee0ebf4f1919d2974c2022" translate="yes" xml:space="preserve">
          <source>Common qualifier of the two type qualifiers</source>
          <target state="translated">两种类型限定词的共同限定词</target>
        </trans-unit>
        <trans-unit id="89b171c2ecd63cf0a35ea222440907368f9360a4" translate="yes" xml:space="preserve">
          <source>Common uses of &lt;code&gt;FreeTree&lt;/code&gt; include:</source>
          <target state="translated">&lt;code&gt;FreeTree&lt;/code&gt; 的常见用途包括：</target>
        </trans-unit>
        <trans-unit id="92e85a9032d0518091b64099c3e63f685bc8df63" translate="yes" xml:space="preserve">
          <source>CommonType!(ElementType!Range1, ElementType!Range2) &lt;strong id=&quot;cosineSimilarity&quot;&gt;cosineSimilarity&lt;/strong&gt;(Range1, Range2)(Range1 a, Range2 b)</source>
          <target state="translated">CommonType！（ElementType！Range1，ElementType！Range2）&lt;strong id=&quot;cosineSimilarity&quot;&gt;余弦相似度&lt;/strong&gt;（Range1，Range2）（Range1 a，Range2 b）</target>
        </trans-unit>
        <trans-unit id="ab52ba0cfbd974531b75cec838a9576c7724e23a" translate="yes" xml:space="preserve">
          <source>CommonType!(ElementType!Range1, ElementType!Range2) &lt;strong id=&quot;dotProduct&quot;&gt;dotProduct&lt;/strong&gt;(Range1, Range2)(Range1 a, Range2 b)</source>
          <target state="translated">CommonType！（ElementType！Range1，ElementType！Range2）&lt;strong id=&quot;dotProduct&quot;&gt;dotProduct&lt;/strong&gt;（Range1，Range2）（Range1 a，Range2 b）</target>
        </trans-unit>
        <trans-unit id="78c516be482530cc1f87a2e85f9f687667bad396" translate="yes" xml:space="preserve">
          <source>CommonType!(ElementType!Range1, ElementType!Range2) &lt;strong id=&quot;euclideanDistance&quot;&gt;euclideanDistance&lt;/strong&gt;(Range1, Range2)(Range1 a, Range2 b)</source>
          <target state="translated">CommonType！（ElementType！Range1，ElementType！Range2）&lt;strong id=&quot;euclideanDistance&quot;&gt;euclideanDistance&lt;/strong&gt;（Range1，Range2）（Range1 a，Range2 b）</target>
        </trans-unit>
        <trans-unit id="8b31f84db6c6a02bc762e2196d7797a3ccad082e" translate="yes" xml:space="preserve">
          <source>CommonType!(ElementType!Range1, ElementType!Range2) &lt;strong id=&quot;euclideanDistance&quot;&gt;euclideanDistance&lt;/strong&gt;(Range1, Range2, F)(Range1 a, Range2 b, F limit)</source>
          <target state="translated">CommonType！（ElementType！Range1，ElementType！Range2）&lt;strong id=&quot;euclideanDistance&quot;&gt;euclideanDistance&lt;/strong&gt;（Range1，Range2，F）（Range1a，Range2b，F限制）</target>
        </trans-unit>
        <trans-unit id="99490d0eb9c15796c0e0ff22de9c774a74b4f439" translate="yes" xml:space="preserve">
          <source>CommonType!(ElementType!Range1, ElementType!Range2) &lt;strong id=&quot;jensenShannonDivergence&quot;&gt;jensenShannonDivergence&lt;/strong&gt;(Range1, Range2)(Range1 a, Range2 b)</source>
          <target state="translated">CommonType！（ElementType！Range1，ElementType！Range2）&lt;strong id=&quot;jensenShannonDivergence&quot;&gt;jensenShannonDivergence&lt;/strong&gt;（Range1，Range2）（Range1 a，Range2 b）</target>
        </trans-unit>
        <trans-unit id="39e238fe92f1abc74d373ce3196f749befb03cf0" translate="yes" xml:space="preserve">
          <source>CommonType!(ElementType!Range1, ElementType!Range2) &lt;strong id=&quot;jensenShannonDivergence&quot;&gt;jensenShannonDivergence&lt;/strong&gt;(Range1, Range2, F)(Range1 a, Range2 b, F limit)</source>
          <target state="translated">CommonType！（ElementType！Range1，ElementType！Range2）&lt;strong id=&quot;jensenShannonDivergence&quot;&gt;jensenShannonDivergence&lt;/strong&gt;（Range1，Range2，F）（&lt;strong id=&quot;jensenShannonDivergence&quot;&gt;Range1a&lt;/strong&gt;，&lt;strong id=&quot;jensenShannonDivergence&quot;&gt;Range2b&lt;/strong&gt;，F限制）</target>
        </trans-unit>
        <trans-unit id="2b63f6969cbcdac3dc164e1220875639e9d0d85f" translate="yes" xml:space="preserve">
          <source>CommonType!(ElementType!Range1, ElementType!Range2) &lt;strong id=&quot;kullbackLeiblerDivergence&quot;&gt;kullbackLeiblerDivergence&lt;/strong&gt;(Range1, Range2)(Range1 a, Range2 b)</source>
          <target state="translated">CommonType！（ElementType！Range1，ElementType！Range2）&lt;strong id=&quot;kullbackLeiblerDivergence&quot;&gt;kullbackLeiblerDivergence&lt;/strong&gt;（Range1，Range2）（Range1 a，Range2 b）</target>
        </trans-unit>
        <trans-unit id="482d9be28df1e9221b752743fa47c81f861b6eb6" translate="yes" xml:space="preserve">
          <source>CommonType!(F1, F2) &lt;strong id=&quot;dotProduct&quot;&gt;dotProduct&lt;/strong&gt;(F1, F2)(in F1[] avector, in F2[] bvector);</source>
          <target state="translated">（F1，F2）点&lt;strong id=&quot;dotProduct&quot;&gt;积&lt;/strong&gt;（F1，F2）（在F1 [] avector中，在F2 [] bvector中）;</target>
        </trans-unit>
        <trans-unit id="59567896c72bea971e25cca00ca5982b60db700d" translate="yes" xml:space="preserve">
          <source>CommonType!(T, Ts) &lt;strong id=&quot;either&quot;&gt;either&lt;/strong&gt;(alias pred = (a) =&amp;gt; a, T, Ts...)(T first, lazy Ts alternatives)</source>
          <target state="translated">CommonType！（T，TS）&lt;strong id=&quot;either&quot;&gt;或者&lt;/strong&gt;（别名预计值=（A）=&amp;gt; A，T，TS ...）（T第一，懒惰TS的替代品）</target>
        </trans-unit>
        <trans-unit id="5c4c8f5d8b8482e06dd925b14fcab2c3af9acffc" translate="yes" xml:space="preserve">
          <source>CommonType!(T1, T2) &lt;strong id=&quot;ifThrown&quot;&gt;ifThrown&lt;/strong&gt;(E : Throwable = Exception, T1, T2)(lazy scope T1 expression, lazy scope T2 errorHandler);</source>
          <target state="translated">（T1，T2）&lt;strong id=&quot;ifThrown&quot;&gt;ifThrown&lt;/strong&gt;（E：Throwable = Exception，T1，T2）（惰性作用域T1表达式，惰性作用域T2 errorHandler）;</target>
        </trans-unit>
        <trans-unit id="2d94d685f738626c2b0f123b65566e240d54d753" translate="yes" xml:space="preserve">
          <source>CommonType!(T1, T2) &lt;strong id=&quot;ifThrown&quot;&gt;ifThrown&lt;/strong&gt;(E : Throwable, T1, T2)(lazy scope T1 expression, scope T2 delegate(E) errorHandler);</source>
          <target state="translated">（T1，T2）&lt;strong id=&quot;ifThrown&quot;&gt;ifThrown&lt;/strong&gt;（E：Throwable，T1，T2）（惰性作用域T1表达式，作用域T2委托（E）errorHandler）;</target>
        </trans-unit>
        <trans-unit id="106770f05acf1293b31c427d84352126dc825e9c" translate="yes" xml:space="preserve">
          <source>CommonType!(T1, T2) &lt;strong id=&quot;ifThrown&quot;&gt;ifThrown&lt;/strong&gt;(T1, T2)(lazy scope T1 expression, scope T2 delegate(Exception) errorHandler);</source>
          <target state="translated">（T1，T2）&lt;strong id=&quot;ifThrown&quot;&gt;ifThrown&lt;/strong&gt;（T1，T2）（惰性作用域T1表达式，作用域T2委托（Exception）errorHandler）;</target>
        </trans-unit>
        <trans-unit id="d21cc02f1aab33002c403671fdd746279f33b65d" translate="yes" xml:space="preserve">
          <source>Communication semantics</source>
          <target state="translated">通信语义</target>
        </trans-unit>
        <trans-unit id="f24e56471fa8b175056938019fdeefa50ef168a7" translate="yes" xml:space="preserve">
          <source>Compare Expressions</source>
          <target state="translated">比较表达式</target>
        </trans-unit>
        <trans-unit id="5817894eddc9a1f74a0238aa6f626e4444e59c11" translate="yes" xml:space="preserve">
          <source>Compare and exchange for mixed-&lt;code&gt;shared&lt;/code&gt;ness types</source>
          <target state="translated">比较和交换混合 &lt;code&gt;shared&lt;/code&gt; 类型</target>
        </trans-unit>
        <trans-unit id="caa535ca46ced3c4b33a96aab608929abbb4fdf9" translate="yes" xml:space="preserve">
          <source>Compare proposed template instantiation with existing template instantiation. Note that this is not commutative because of the auto ref check.</source>
          <target state="translated">比较建议的模板实例化和现有的模板实例化。请注意,由于自动参考检查的原因,这不是换算的。</target>
        </trans-unit>
        <trans-unit id="2c7808fae6354fb79882d9e3894f49385a385060" translate="yes" xml:space="preserve">
          <source>Compare two complex floating point numbers, x and y.</source>
          <target state="translated">比较两个复杂的浮点数,x和y。</target>
        </trans-unit>
        <trans-unit id="4b589fbc23973e0904ddeba8f483e18ded8c6fc2" translate="yes" xml:space="preserve">
          <source>Compare two lists using the comparison function fp. The comparison function is the same as used for qsort().</source>
          <target state="translated">使用比较函数fp比较两个列表。比较函数与qsort()使用的函数相同。</target>
        </trans-unit>
        <trans-unit id="53048e0cd3f3523910efe523391cf85f13b1f561" translate="yes" xml:space="preserve">
          <source>Compare two lists.</source>
          <target state="translated">比较两个名单。</target>
        </trans-unit>
        <trans-unit id="ec1ea853fba43ebac35e9589bc1b5421280f317a" translate="yes" xml:space="preserve">
          <source>Compare two name according to the platform's rules (case sensitive or not)</source>
          <target state="translated">根据平台的规则比较两个名字(区分大小写)。</target>
        </trans-unit>
        <trans-unit id="470f25e165e645b09541078696ae4bb01732c4b6" translate="yes" xml:space="preserve">
          <source>Compare two slices for equality, in a case-insensitive way</source>
          <target state="translated">比较两片是否平等,要分清大小写。</target>
        </trans-unit>
        <trans-unit id="a3b2aaa9a2feba60d75ca35ce0d9eaf6a325e5cf" translate="yes" xml:space="preserve">
          <source>Compare with another Object obj.</source>
          <target state="translated">与另一个Object obj比较。</target>
        </trans-unit>
        <trans-unit id="7d45a1b5434fdb490caf4f37107281ff4b27634f" translate="yes" xml:space="preserve">
          <source>Compare-and-exchange for &lt;code&gt;class&lt;/code&gt;</source>
          <target state="translated">比较和交换 &lt;code&gt;class&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56759e40fbf219e9426d9bc8573761f0a60a3d8b" translate="yes" xml:space="preserve">
          <source>Compare-and-exchange for non-&lt;code&gt;shared&lt;/code&gt; types</source>
          <target state="translated">非 &lt;code&gt;shared&lt;/code&gt; 类型的比较和交换</target>
        </trans-unit>
        <trans-unit id="d8464f9142c18b6c2262013f0b9d014233850d21" translate="yes" xml:space="preserve">
          <source>Compare-and-set for &lt;code&gt;shared&lt;/code&gt; reference type (&lt;code&gt;class&lt;/code&gt;)</source>
          <target state="translated">比较和设置 &lt;code&gt;shared&lt;/code&gt; 引用类型（ &lt;code&gt;class&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="33efea0257b207beff234a818ac9d15ab90a8752" translate="yes" xml:space="preserve">
          <source>Compare-and-set for non-shared values</source>
          <target state="translated">对非共享值进行比较和设置。</target>
        </trans-unit>
        <trans-unit id="389e01c09aa88cfd5fe3b34b651ba75b671e5bb3" translate="yes" xml:space="preserve">
          <source>Compare-and-set for shared value type</source>
          <target state="translated">共享值类型的比较和设置</target>
        </trans-unit>
        <trans-unit id="269cc9dfce30ec1e7d235e3871e31eeb2e9ea313" translate="yes" xml:space="preserve">
          <source>Compares 2 lambda functions described by their serialization.</source>
          <target state="translated">比较2个由其序列化描述的lambda函数。</target>
        </trans-unit>
        <trans-unit id="3514fc794b1b84ff2dcda58da47639190d167244" translate="yes" xml:space="preserve">
          <source>Compares &lt;code&gt;this&lt;/code&gt; against &lt;code&gt;rhs&lt;/code&gt; for equality. If &lt;code&gt;Hook&lt;/code&gt; defines &lt;code&gt;hookOpEquals&lt;/code&gt;, the function forwards to &lt;code&gt; hook.hookOpEquals(get, rhs)&lt;/code&gt;. Otherwise, the result of the built-in operation &lt;code&gt;get == rhs&lt;/code&gt; is returned.</source>
          <target state="translated">将 &lt;code&gt;this&lt;/code&gt; 与 &lt;code&gt;rhs&lt;/code&gt; 比较是否相等。如果 &lt;code&gt;Hook&lt;/code&gt; 定义了 &lt;code&gt;hookOpEquals&lt;/code&gt; ，则该函数将转发到 &lt;code&gt; hook.hookOpEquals(get, rhs)&lt;/code&gt; 。否则，将返回内置操作 &lt;code&gt;get == rhs&lt;/code&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="834d94035a6f955e584fb4c7ba4b567912fa0d8a" translate="yes" xml:space="preserve">
          <source>Compares &lt;code&gt;this&lt;/code&gt; against &lt;code&gt;rhs&lt;/code&gt; for ordering. If &lt;code&gt;Hook&lt;/code&gt; defines &lt;code&gt;hookOpCmp&lt;/code&gt;, the function forwards to &lt;code&gt;hook.hookOpCmp(get, rhs)&lt;/code&gt;. Otherwise, the result of the built-in comparison operation is returned.</source>
          <target state="translated">将 &lt;code&gt;this&lt;/code&gt; 与 &lt;code&gt;rhs&lt;/code&gt; 比较以进行订购。如果 &lt;code&gt;Hook&lt;/code&gt; 定义了 &lt;code&gt;hookOpCmp&lt;/code&gt; ，则该函数将转发到 &lt;code&gt;hook.hookOpCmp(get, rhs)&lt;/code&gt; 。否则，将返回内置比较操作的结果。</target>
        </trans-unit>
        <trans-unit id="8d72cb06967d76ad2315bc14800e16c84c791ad4" translate="yes" xml:space="preserve">
          <source>Compares file names and returns</source>
          <target state="translated">比较文件名并返回</target>
        </trans-unit>
        <trans-unit id="ed50f74df59a0142ddc654a4239b67d9a76c7149" translate="yes" xml:space="preserve">
          <source>Compares filename characters.</source>
          <target state="translated">比较文件名字符。</target>
        </trans-unit>
        <trans-unit id="2249aabcb1e96260d3051f1dca27aa7ab8ce5589" translate="yes" xml:space="preserve">
          <source>Compares ranges for element-by-element equality, e.g. &lt;code&gt;equal([1, 2, 3], [1.0, 2.0, 3.0])&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">比较元素相等范围，例如 &lt;code&gt;equal([1, 2, 3], [1.0, 2.0, 3.0])&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffefd591caadf7c9238108ca12da950ac2e6a35f" translate="yes" xml:space="preserve">
          <source>Compares this &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; with the given &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将此&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;与给定&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; 进行比较&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="15738864f6cafc73bd814277cd09c013ecd311e3" translate="yes" xml:space="preserve">
          <source>Compares this &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; with the given &lt;code&gt;DateTime.&lt;/code&gt;.</source>
          <target state="translated">将此&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;与给定的 &lt;code&gt;DateTime.&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="689160a534f49b2dda3e4266c47b5941a7703870" translate="yes" xml:space="preserve">
          <source>Compares this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; with the given &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将此&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;与给定的&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; 进行比较&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c8165c8a402fda4e1a1b6bfe46a9433cba2d560d" translate="yes" xml:space="preserve">
          <source>Compares this &lt;a href=&quot;#TimeOfDay&quot;&gt;&lt;code&gt;TimeOfDay&lt;/code&gt;&lt;/a&gt; with the given &lt;a href=&quot;#TimeOfDay&quot;&gt;&lt;code&gt;TimeOfDay&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将此&lt;a href=&quot;#TimeOfDay&quot;&gt; &lt;code&gt;TimeOfDay&lt;/code&gt; &lt;/a&gt;与给定的&lt;a href=&quot;#TimeOfDay&quot;&gt; &lt;code&gt;TimeOfDay&lt;/code&gt; 进行比较&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fe6b91ee80ba217913bf0d3b49282d731578146c" translate="yes" xml:space="preserve">
          <source>Compares this &lt;code&gt;Duration&lt;/code&gt; with the given &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">比较此 &lt;code&gt;Duration&lt;/code&gt; 与给定的 &lt;code&gt;Duration&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59460af8f5d8d95384b897b17a23456d8cbca065" translate="yes" xml:space="preserve">
          <source>Compares this MonoTime with the given MonoTime.</source>
          <target state="translated">将此MonoTime与给定的MonoTime进行比较。</target>
        </trans-unit>
        <trans-unit id="61073ed6151d4099d5b99ce170507850bbec3a0f" translate="yes" xml:space="preserve">
          <source>Compares two CDatas</source>
          <target state="translated">比较两个CDatas</target>
        </trans-unit>
        <trans-unit id="2feed28735d9cb020838db7c34238164751ec4e9" translate="yes" xml:space="preserve">
          <source>Compares two CDatas for equality</source>
          <target state="translated">比较两个CDatas是否平等</target>
        </trans-unit>
        <trans-unit id="cf953c71e71cad559a1b6f41099f639fc4b7a9a7" translate="yes" xml:space="preserve">
          <source>Compares two Documents</source>
          <target state="translated">比较两个文件</target>
        </trans-unit>
        <trans-unit id="155a80b4bbc808c799aa0f116b685c5ba6a2b770" translate="yes" xml:space="preserve">
          <source>Compares two Documents for equality</source>
          <target state="translated">对两份文件进行平等比较</target>
        </trans-unit>
        <trans-unit id="71867a59aab2e3bc4e1f645998ccc58f3385b507" translate="yes" xml:space="preserve">
          <source>Compares two Elements</source>
          <target state="translated">比较两个元素</target>
        </trans-unit>
        <trans-unit id="1c6b132b2fbac57463697b6c1796a4b2c009f21e" translate="yes" xml:space="preserve">
          <source>Compares two Elements for equality</source>
          <target state="translated">比较两个元素是否平等</target>
        </trans-unit>
        <trans-unit id="1de75b0a506aa6ed853b26b0a46cd0641566a633" translate="yes" xml:space="preserve">
          <source>Compares two Tags</source>
          <target state="translated">比较两个标签</target>
        </trans-unit>
        <trans-unit id="1c8a71eb2f93f8e19bd6763d1b05643346323e21" translate="yes" xml:space="preserve">
          <source>Compares two Tags for equality</source>
          <target state="translated">比较两个标签是否平等</target>
        </trans-unit>
        <trans-unit id="5b4c697a2d7145b631ee5e772ec59f8a1f518990" translate="yes" xml:space="preserve">
          <source>Compares two XML instructions</source>
          <target state="translated">比较两条XML指令</target>
        </trans-unit>
        <trans-unit id="d3f58d3dea043b6d22fc6cc7d29ac43c66b365bd" translate="yes" xml:space="preserve">
          <source>Compares two XML instructions for equality</source>
          <target state="translated">比较两个XML指令是否平等</target>
        </trans-unit>
        <trans-unit id="a047b0e437993116e7c77e0618c976828560c65e" translate="yes" xml:space="preserve">
          <source>Compares two comments</source>
          <target state="translated">比较两个评论</target>
        </trans-unit>
        <trans-unit id="5f0ccb1455dbbca2718693f6457fa9a0e4ab0a7e" translate="yes" xml:space="preserve">
          <source>Compares two comments for equality</source>
          <target state="translated">比较两份意见是否平等</target>
        </trans-unit>
        <trans-unit id="5cfb7b733711f89793eb5d1c213b36ce5b8619ff" translate="yes" xml:space="preserve">
          <source>Compares two instances for &amp;lt;, ==, or &amp;gt;.</source>
          <target state="translated">比较&amp;lt;，==或&amp;gt;的两个实例。</target>
        </trans-unit>
        <trans-unit id="8f551041ef1a130ca32a1c918d060ad148571f0b" translate="yes" xml:space="preserve">
          <source>Compares two instances for equality.</source>
          <target state="translated">比较两个实例是否平等。</target>
        </trans-unit>
        <trans-unit id="899d53ea8150068dbb59e10d9add2e1cdebde76c" translate="yes" xml:space="preserve">
          <source>Compares two processing instructions</source>
          <target state="translated">比较两个处理指令</target>
        </trans-unit>
        <trans-unit id="4f39f88ab522977bdc2f3dff102f72d43f0f9cc9" translate="yes" xml:space="preserve">
          <source>Compares two processing instructions for equality</source>
          <target state="translated">对两个处理指令进行平等比较</target>
        </trans-unit>
        <trans-unit id="8d5d39ab88f4f47308cef4f47f2b602afa70b300" translate="yes" xml:space="preserve">
          <source>Compares two ranges for equality, as defined by predicate &lt;code&gt;pred&lt;/code&gt; (which is &lt;code&gt;==&lt;/code&gt; by default).</source>
          <target state="translated">比较两个范围的相等性，如谓词 &lt;code&gt;pred&lt;/code&gt; 所定义（默认情况下 &lt;code&gt;==&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f81d47748b180086bf89fb2bd5331b855132ca4a" translate="yes" xml:space="preserve">
          <source>Compares two ranges for equality. The ranges may have different element types, as long as &lt;code&gt;pred(r1.front, r2.front)&lt;/code&gt; evaluates to &lt;code&gt;bool&lt;/code&gt;. Performs &amp;Omicron;(&lt;code&gt;min(r1.length, r2.length)&lt;/code&gt;) evaluations of &lt;code&gt;pred&lt;/code&gt;.</source>
          <target state="translated">比较两个范围是否相等。范围可以具有不同的元素类型，只要 &lt;code&gt;pred(r1.front, r2.front)&lt;/code&gt; 评估为 &lt;code&gt;bool&lt;/code&gt; 即可。执行 &lt;code&gt;pred&lt;/code&gt; 的 &amp;Omicron;（ &lt;code&gt;min(r1.length, r2.length)&lt;/code&gt; ）个评估。</target>
        </trans-unit>
        <trans-unit id="248fdeb67d5d8ff8dea5a626cacfd8c772e6ff5b" translate="yes" xml:space="preserve">
          <source>Compares two text sections</source>
          <target state="translated">比较两个文本部分</target>
        </trans-unit>
        <trans-unit id="aea8d87c28bd8f8f4e53228c798c86d39471182a" translate="yes" xml:space="preserve">
          <source>Compares two text sections for equality</source>
          <target state="translated">对两个文本部分进行平等比较</target>
        </trans-unit>
        <trans-unit id="b96961131f8b2d56c0afdc08b9dfc3f261ece799" translate="yes" xml:space="preserve">
          <source>Compares two time unit strings at compile time. &lt;code&gt;&quot;years&quot;&lt;/code&gt; are the largest units and &lt;code&gt;&quot;hnsecs&quot;&lt;/code&gt; are the smallest.</source>
          <target state="translated">在编译时比较两个时间单位字符串。 &lt;code&gt;&quot;years&quot;&lt;/code&gt; 是最大的单位， &lt;code&gt;&quot;hnsecs&quot;&lt;/code&gt; 是最小的单位。</target>
        </trans-unit>
        <trans-unit id="73cfa7cb938dfbb7800d8b2d717f330ee6a481ac" translate="yes" xml:space="preserve">
          <source>Compares two time unit strings. &lt;code&gt;&quot;years&quot;&lt;/code&gt; are the largest units and &lt;code&gt;&quot;hnsecs&quot;&lt;/code&gt; are the smallest.</source>
          <target state="translated">比较两个时间单位字符串。 &lt;code&gt;&quot;years&quot;&lt;/code&gt; 是最大的单位， &lt;code&gt;&quot;hnsecs&quot;&lt;/code&gt; 是最小的单位。</target>
        </trans-unit>
        <trans-unit id="736528f0c2f124578ad75bec18127fa0c5d8df06" translate="yes" xml:space="preserve">
          <source>Compares two trees for equality.</source>
          <target state="translated">比较两棵树是否平等。</target>
        </trans-unit>
        <trans-unit id="8ea391c8d4e8b1e4cad6bceeb3d88e880c28dcc6" translate="yes" xml:space="preserve">
          <source>Compares with another InternetAddress of same type for equality</source>
          <target state="translated">与另一个相同类型的InternetAddress进行比较,以实现平等。</target>
        </trans-unit>
        <trans-unit id="49cdf7c2ab546d5587c6ee0331c985ef36d21ae1" translate="yes" xml:space="preserve">
          <source>Compares with another Item of same type</source>
          <target state="translated">与同类型的其他项目进行比较</target>
        </trans-unit>
        <trans-unit id="feedb86ff0053ef1f5bbf048b43463a97c30f866" translate="yes" xml:space="preserve">
          <source>Compares with another Item of same type for equality</source>
          <target state="translated">与另一个相同类型的项目进行平等比较。</target>
        </trans-unit>
        <trans-unit id="aa1d4e3fc8af232a8529a23e0a4021de49404caa" translate="yes" xml:space="preserve">
          <source>Comparing D Immutable and Const with C++ Const</source>
          <target state="translated">D Immutable和Const与C++Const的比较</target>
        </trans-unit>
        <trans-unit id="1cddc2b857fb24fec592019a977ade46bd8e0d9d" translate="yes" xml:space="preserve">
          <source>ComparingBenchmarkResult &lt;strong id=&quot;comparingBenchmark&quot;&gt;comparingBenchmark&lt;/strong&gt;(alias baseFunc, alias targetFunc, int times = 4095)();</source>
          <target state="translated">ComparingBenchmarkResult &lt;strong id=&quot;comparingBenchmark&quot;&gt;comparingBenchmark&lt;/strong&gt;（别名baseFunc，别名targetFunc，INT次= 4095）（）;</target>
        </trans-unit>
        <trans-unit id="2dfcf898a3bd4e011123eee87384ecb67d0919d4" translate="yes" xml:space="preserve">
          <source>Comparison</source>
          <target state="translated">Comparison</target>
        </trans-unit>
        <trans-unit id="d674be464fc3dfa9b4b4dc25d1b812f36bad0d19" translate="yes" xml:space="preserve">
          <source>Comparison for equality used by the &quot;==&quot; and &quot;!=&quot; operators.</source>
          <target state="translated">比较&quot;==&quot;和&quot;!=&quot;运算符所使用的平等。</target>
        </trans-unit>
        <trans-unit id="9b6db5f546098b8351c2a295c7a744c7f9c5b1f3" translate="yes" xml:space="preserve">
          <source>Comparison for equality.</source>
          <target state="translated">为平等而比较。</target>
        </trans-unit>
        <trans-unit id="27f31591aeeb71d8072850ad96cfcf618bb9c4b6" translate="yes" xml:space="preserve">
          <source>Comparison for equality. Two &lt;code&gt;Tuple&lt;/code&gt;s are considered equal &lt;b&gt;iff&lt;/b&gt; they fulfill the following criteria:</source>
          <target state="translated">比较平等。&lt;b&gt;如果&lt;/b&gt;满足以下条件，则认为两个 &lt;code&gt;Tuple&lt;/code&gt; 相等：&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="acd5826889c075fa96051d4ba9ec6abdd7e93115" translate="yes" xml:space="preserve">
          <source>Comparison for ordering.</source>
          <target state="translated">比较,以便订购。</target>
        </trans-unit>
        <trans-unit id="77915f2fa8db68346e105b6be7363156bb2e830c" translate="yes" xml:space="preserve">
          <source>Comparison is based on &lt;code&gt;char&lt;/code&gt; and does not do decoding. As a result, it's only really accurate for plain ASCII strings.</source>
          <target state="translated">比较基于 &lt;code&gt;char&lt;/code&gt; ，不进行解码。结果，它仅对于纯ASCII字符串才真正准确。</target>
        </trans-unit>
        <trans-unit id="50830d36fb34a645e85fdd460f20e839e99c57c9" translate="yes" xml:space="preserve">
          <source>Comparison operations are rewritten as follows:</source>
          <target state="translated">比较操作重写如下。</target>
        </trans-unit>
        <trans-unit id="4a8724559a94ef0fe371c3295abbffe07e7c73b1" translate="yes" xml:space="preserve">
          <source>Compatibility decomposition is a &lt;b&gt;lossy&lt;/b&gt; conversion, typically suitable only for fuzzy matching and internal processing.</source>
          <target state="translated">兼容性分解是&lt;b&gt;有损&lt;/b&gt;转换，通常仅适用于模糊匹配和内部处理。</target>
        </trans-unit>
        <trans-unit id="d515317076de8e82a7df9a5583ce6d1adb904fdc" translate="yes" xml:space="preserve">
          <source>Compatibility decomposition. The result is compatibility equivalent sequence.</source>
          <target state="translated">兼容性分解。结果是兼容性等价序列。</target>
        </trans-unit>
        <trans-unit id="47f75260822181977396612d26a17c9f895fd067" translate="yes" xml:space="preserve">
          <source>Compexity</source>
          <target state="translated">Compexity</target>
        </trans-unit>
        <trans-unit id="899c4bbe236b40b7f4f386ca0e1d495afd2b9909" translate="yes" xml:space="preserve">
          <source>Compile Time Disabling of &lt;code&gt;Logger&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Logger&lt;/code&gt; 编译时禁用</target>
        </trans-unit>
        <trans-unit id="9601f2a530e239754089111cdf22a63d09d0da03" translate="yes" xml:space="preserve">
          <source>Compile Time Function Execution (CTFE)</source>
          <target state="translated">编译时函数执行(CTFE)</target>
        </trans-unit>
        <trans-unit id="111b991b8bd8902ab908d279507dbc2567386414" translate="yes" xml:space="preserve">
          <source>Compile regular expression pattern for the later execution.</source>
          <target state="translated">编译正则表达式模式,以便以后执行。</target>
        </trans-unit>
        <trans-unit id="277fb4d7b34b839316a7f89f2653d3a761832e8c" translate="yes" xml:space="preserve">
          <source>Compile regular expression using CTFE and generate optimized native machine code for matching it.</source>
          <target state="translated">使用CTFE编译正则表达式,并生成优化的本地机器代码进行匹配。</target>
        </trans-unit>
        <trans-unit id="f7f33f2933c6141df88a84f55a23e09ba130a02f" translate="yes" xml:space="preserve">
          <source>Compile the MixinType, returning the type AST.</source>
          <target state="translated">编译MixinType,返回AST类型。</target>
        </trans-unit>
        <trans-unit id="c8149cd52fe785ecf8f59126442a4f04b3761167" translate="yes" xml:space="preserve">
          <source>Compile-Time Authorization Callbacks</source>
          <target state="translated">编译时的授权回调</target>
        </trans-unit>
        <trans-unit id="5ce286997996977a2b237b29a86f8db1efc35204" translate="yes" xml:space="preserve">
          <source>Compile-Time Library Version Numbers</source>
          <target state="translated">编译时库版本号</target>
        </trans-unit>
        <trans-unit id="c1beaf7d1ab6d20b70616c28d06d81210d112960" translate="yes" xml:space="preserve">
          <source>Compile-time values</source>
          <target state="translated">编译时值</target>
        </trans-unit>
        <trans-unit id="31fa1f41f5b6804e8b506439e0a320efb83fde36" translate="yes" xml:space="preserve">
          <source>CompiledCtfeFunctionPimpl &lt;strong id=&quot;ctfeCode&quot;&gt;ctfeCode&lt;/strong&gt;;</source>
          <target state="translated">CompiledCtfeFunctionPimpl &lt;strong id=&quot;ctfeCode&quot;&gt;ctfeCode&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="7ab8d68f763422663c5a51a1109f0f26969187ef" translate="yes" xml:space="preserve">
          <source>Compiler Checks</source>
          <target state="translated">编译器检查</target>
        </trans-unit>
        <trans-unit id="dae36f6f6064ffef1e1754fc1a3db46d87b57e16" translate="yes" xml:space="preserve">
          <source>Compiler implementation of the &lt;a href=&quot;http://www.dlang.org&quot;&gt;D programming language&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://www.dlang.org&quot;&gt;D编程语言的&lt;/a&gt;编译器实现</target>
        </trans-unit>
        <trans-unit id="14f91068413d32dc45e209e13c1a52a0c98a2adc" translate="yes" xml:space="preserve">
          <source>Compiler implementation of the &lt;a href=&quot;http://www.dlang.org&quot;&gt;D programming language&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.dlang.org&quot;&gt;D编程语言的&lt;/a&gt;编译器实现。</target>
        </trans-unit>
        <trans-unit id="638d4fafd817156b7a7b919c2d357c7a4e40fecd" translate="yes" xml:space="preserve">
          <source>Compiler implementation of the &lt;a href=&quot;http://www.dlang.org&quot;&gt;D programming language&lt;/a&gt;. Entry point for DMD.</source>
          <target state="translated">&lt;a href=&quot;http://www.dlang.org&quot;&gt;D编程语言的&lt;/a&gt;编译器实现。DMD的入口点。</target>
        </trans-unit>
        <trans-unit id="cb9f3472430d511bc2a1cab99cbca60b61a1a542" translate="yes" xml:space="preserve">
          <source>Compiler implementation of the &lt;a href=&quot;http://www.dlang.org&quot;&gt;D programming language&lt;/a&gt;. Utility functions for DMD.</source>
          <target state="translated">&lt;a href=&quot;http://www.dlang.org&quot;&gt;D编程语言的&lt;/a&gt;编译器实现。DMD的实用程序功能。</target>
        </trans-unit>
        <trans-unit id="a308cc3158cc4a66d0a8f5bf6d0eff2374e034a3" translate="yes" xml:space="preserve">
          <source>Compiler implementation of the D programming language &lt;a href=&quot;http://dlang.org&quot;&gt;http://dlang.org&lt;/a&gt;</source>
          <target state="translated">D编程语言的编译器实现&lt;a href=&quot;http://dlang.org&quot;&gt;http://dlang.org&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f1d6503c070a457a61fda17f2153cd21a3084d96" translate="yes" xml:space="preserve">
          <source>Compiler implementation of the D programming language &lt;a href=&quot;http://dlang.org&quot;&gt;http://dlang.org&lt;/a&gt; This file is not shared with other compilers which use the DMD front-end.</source>
          <target state="translated">D编程语言&lt;a href=&quot;http://dlang.org&quot;&gt;http://dlang.org的&lt;/a&gt;编译器实现。此文件不与使用DMD前端的其他编译器共享。</target>
        </trans-unit>
        <trans-unit id="67b78e834ccfc3fb4d626c14e19e68b2f93a8064" translate="yes" xml:space="preserve">
          <source>Compiler vendor could not be detected</source>
          <target state="translated">无法检测到编译器供应商</target>
        </trans-unit>
        <trans-unit id="4dcbf24d21d00f4926da34a218b3790f5b4e8f04" translate="yes" xml:space="preserve">
          <source>Compiler vendor specific versions can be predefined if the trademarked vendor identifier prefixes it, as in:</source>
          <target state="translated">如果有商标的供应商标识符前缀,可以预定义编译器特定的版本,如:。</target>
        </trans-unit>
        <trans-unit id="9879770228628f9210415d896412d02eb35c7ccc" translate="yes" xml:space="preserve">
          <source>Compiler vendor string</source>
          <target state="translated">编译器供应商字符串</target>
        </trans-unit>
        <trans-unit id="89ab065950932906f0c70953836cc3d876a0f5c7" translate="yes" xml:space="preserve">
          <source>Compiler version as an integer</source>
          <target state="translated">编译版本为整数</target>
        </trans-unit>
        <trans-unit id="7bfb67af50943c68cc8db4a086f448c070c20b10" translate="yes" xml:space="preserve">
          <source>Compiling An SQL Statement</source>
          <target state="translated">编译SQL语句</target>
        </trans-unit>
        <trans-unit id="6f279773bb3b6d94a13d70e62a02f07420245fdd" translate="yes" xml:space="preserve">
          <source>Compiling the two files, the first with a C++ compiler, the second with a D compiler, linking them together, and then running it yields:</source>
          <target state="translated">编译这两个文件,第一个文件用C++编译器编译,第二个文件用D编译器编译,把它们连接在一起,然后运行就可以得到。</target>
        </trans-unit>
        <trans-unit id="e44e982f24d61ce8d41fc7d68d07e93d8ea91560" translate="yes" xml:space="preserve">
          <source>Compiling, linking, and running produces the output:</source>
          <target state="translated">编译、链接、运行后产生输出。</target>
        </trans-unit>
        <trans-unit id="364056731803da7d64b4bd1e1c06e2898671284f" translate="yes" xml:space="preserve">
          <source>Complement Expressions</source>
          <target state="translated">补充表达式</target>
        </trans-unit>
        <trans-unit id="13fa3d3fb38078f1c48463c71e72cdb5396d3061" translate="yes" xml:space="preserve">
          <source>Complement the list of characters in &lt;code&gt;from&lt;/code&gt;</source>
          <target state="translated">补字符的列表 &lt;code&gt;from&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="28e3cfba20327bd23ec2cb2a7627c4989a6658fd" translate="yes" xml:space="preserve">
          <source>ComplementExpression</source>
          <target state="translated">ComplementExpression</target>
        </trans-unit>
        <trans-unit id="f8ad3ce6091208da960c4f9ee62d22e28a03304d" translate="yes" xml:space="preserve">
          <source>Complementary error function</source>
          <target state="translated">互补误差函数</target>
        </trans-unit>
        <trans-unit id="60272d7a34e9d3443f3926aeffc1c58edec5ebed" translate="yes" xml:space="preserve">
          <source>Completes in &amp;Omicron;(&lt;code&gt;1&lt;/code&gt;) steps for ranges that support slicing and have length. Completes in &amp;Omicron;(&lt;code&gt;range.length&lt;/code&gt;) time for all other ranges.</source>
          <target state="translated">对于支持切片并具有长度的范围，以&amp;Omicron;（ &lt;code&gt;1&lt;/code&gt; ）步骤完成。对于所有其他范围，以&amp;Omicron;（ &lt;code&gt;range.length&lt;/code&gt; ）时间完成。</target>
        </trans-unit>
        <trans-unit id="c324110011c7213010b1b0d05dbf1729490872c8" translate="yes" xml:space="preserve">
          <source>Complex!F[] &lt;strong id=&quot;fft&quot;&gt;fft&lt;/strong&gt;(F = double, R)(R range);</source>
          <target state="translated">F！] &lt;strong id=&quot;fft&quot;&gt;fft&lt;/strong&gt;（F = double，R）（R范围）;</target>
        </trans-unit>
        <trans-unit id="26f92c913e85906bb3fdfd3ea8f70b3edc75f349" translate="yes" xml:space="preserve">
          <source>Complex!F[] &lt;strong id=&quot;inverseFft&quot;&gt;inverseFft&lt;/strong&gt;(F = double, R)(R range);</source>
          <target state="translated">F！] &lt;strong id=&quot;inverseFft&quot;&gt;inverseFft&lt;/strong&gt;（F = double，R）（R范围）;</target>
        </trans-unit>
        <trans-unit id="d4aa1dc82fea5042746ba87afcfe0abdd31c0457" translate="yes" xml:space="preserve">
          <source>Complex!T &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">复杂的T！ &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9bcb9bd086a1d4b769b555d5e43ad8175d34e8e1" translate="yes" xml:space="preserve">
          <source>Complex!T &lt;code&gt;z&lt;/code&gt;</source>
          <target state="translated">复杂的T！ &lt;code&gt;z&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d89a21ad941e5bb1c1e9e577be9c7a732c2b0200" translate="yes" xml:space="preserve">
          <source>Complex!T &lt;strong id=&quot;proj&quot;&gt;proj&lt;/strong&gt;(T)(Complex!T z);</source>
          <target state="translated">复杂！T &lt;strong id=&quot;proj&quot;&gt;proj&lt;/strong&gt;（T）（复杂！T z）;</target>
        </trans-unit>
        <trans-unit id="f564777ac40c723997c5eed12787c64f393c6531" translate="yes" xml:space="preserve">
          <source>Complexity</source>
          <target state="translated">Complexity</target>
        </trans-unit>
        <trans-unit id="47da6f0838f083d3a01f384d483b468a305c5a2c" translate="yes" xml:space="preserve">
          <source>Compose</source>
          <target state="translated">Compose</target>
        </trans-unit>
        <trans-unit id="95aa63ea8e2a3bfd87e37ac5a85ae9bd67fcad2c" translate="yes" xml:space="preserve">
          <source>Composes passed-in functions &lt;code&gt;fun[0], fun[1], ...&lt;/code&gt;.</source>
          <target state="translated">组成传入的功能 &lt;code&gt;fun[0], fun[1], ...&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c30048c94daf4d26e828fea1daf807749cf7065" translate="yes" xml:space="preserve">
          <source>Composite allocators involving nested instantiations of &lt;code&gt;Segregator&lt;/code&gt; make it difficult to access individual sub-allocators stored within. &lt;code&gt; allocatorForSize&lt;/code&gt; simplifies the task by supplying the allocator nested inside a &lt;code&gt;Segregator&lt;/code&gt; that is responsible for a specific size &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">涉及到 &lt;code&gt;Segregator&lt;/code&gt; 的嵌套实例化的复合分配器使访问存储在其中的各个子分配器变得困难。 &lt;code&gt; allocatorForSize&lt;/code&gt; 通过提供嵌套在负责特定大小 &lt;code&gt;s&lt;/code&gt; 的 &lt;code&gt;Segregator&lt;/code&gt; 中的分配器来简化任务。</target>
        </trans-unit>
        <trans-unit id="34ec312f3176cda38964288e354f29e0c4b397f3" translate="yes" xml:space="preserve">
          <source>Composition of allocators is not recommended at this level due to inflexibility of dynamic interfaces and inefficiencies caused by cascaded multiple calls. Instead, compose allocators using the static interface defined in &lt;a href=&quot;std_experimental_allocator_building_blocks&quot;&gt;&lt;code&gt;std.experimental.allocator.building_blocks&lt;/code&gt;&lt;/a&gt;, then adapt the composed allocator to &lt;code&gt;IAllocator&lt;/code&gt; (possibly by using &lt;a href=&quot;#CAllocatorImpl&quot;&gt;&lt;code&gt;CAllocatorImpl&lt;/code&gt;&lt;/a&gt; below).</source>
          <target state="translated">由于动态接口的灵活性以及级联的多个调用导致的效率低下，因此不建议在此级别上分配分配器。取而代之的是，使用&lt;a href=&quot;std_experimental_allocator_building_blocks&quot;&gt; &lt;code&gt;std.experimental.allocator.building_blocks&lt;/code&gt; 中&lt;/a&gt;定义的静态接口组成分配器，然后将组合的分配器修改为 &lt;code&gt;IAllocator&lt;/code&gt; （可能使用下面的&lt;a href=&quot;#CAllocatorImpl&quot;&gt; &lt;code&gt;CAllocatorImpl&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="40c8a933628c77ca08e491a5b2e22d9b1ce4fde0" translate="yes" xml:space="preserve">
          <source>Composition of allocators is not recommended at this level due to inflexibility of dynamic interfaces and inefficiencies caused by cascaded multiple calls. Instead, compose allocators using the static interface defined in &lt;a href=&quot;std_experimental_allocator_building_blocks&quot;&gt;&lt;code&gt;std.experimental.allocator.building_blocks&lt;/code&gt;&lt;/a&gt;, then adapt the composed allocator to &lt;code&gt;ISharedAllocator&lt;/code&gt; (possibly by using &lt;a href=&quot;#CSharedAllocatorImpl&quot;&gt;&lt;code&gt;CSharedAllocatorImpl&lt;/code&gt;&lt;/a&gt; below).</source>
          <target state="translated">由于动态接口的灵活性以及级联的多个调用导致的效率低下，因此不建议在此级别上分配分配器。取而代之的是，使用&lt;a href=&quot;std_experimental_allocator_building_blocks&quot;&gt; &lt;code&gt;std.experimental.allocator.building_blocks&lt;/code&gt; 中&lt;/a&gt;定义的静态接口组成分配器，然后将组成的分配器修改为 &lt;code&gt;ISharedAllocator&lt;/code&gt; （可能使用下面的&lt;a href=&quot;#CSharedAllocatorImpl&quot;&gt; &lt;code&gt;CSharedAllocatorImpl&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d7b50cb2c8713f1b5ca6e3a46afeecbf46654a4a" translate="yes" xml:space="preserve">
          <source>Composition of allocators is not recommended at this level due to inflexibility of dynamic interfaces and inefficiencies caused by cascaded multiple calls. Instead, compose allocators using the static interface defined in &lt;a href=&quot;std_experimental_allocator_building_blocks&quot;&gt;&lt;code&gt;std.experimental.allocator.building_blocks&lt;/code&gt;&lt;/a&gt;, then adapt the composed allocator to &lt;code&gt;RCIAllocator&lt;/code&gt; (possibly by using &lt;a href=&quot;#allocatorObject&quot;&gt;&lt;code&gt;allocatorObject&lt;/code&gt;&lt;/a&gt; below).</source>
          <target state="translated">由于动态接口的灵活性以及级联的多个调用导致的效率低下，因此不建议在此级别上分配分配器。取而代之的是，使用&lt;a href=&quot;std_experimental_allocator_building_blocks&quot;&gt; &lt;code&gt;std.experimental.allocator.building_blocks&lt;/code&gt; 中&lt;/a&gt;定义的静态接口来编写分配器，然后将组合的分配器改编为 &lt;code&gt;RCIAllocator&lt;/code&gt; （可能使用下面的&lt;a href=&quot;#allocatorObject&quot;&gt; &lt;code&gt;allocatorObject&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d600c469ce6615aec4b9ccc9ac99015222a2cd4a" translate="yes" xml:space="preserve">
          <source>Composition of allocators is not recommended at this level due to inflexibility of dynamic interfaces and inefficiencies caused by cascaded multiple calls. Instead, compose allocators using the static interface defined in &lt;a href=&quot;std_experimental_allocator_building_blocks&quot;&gt;&lt;code&gt;std.experimental.allocator.building_blocks&lt;/code&gt;&lt;/a&gt;, then adapt the composed allocator to &lt;code&gt;RCISharedAllocator&lt;/code&gt; (possibly by using &lt;a href=&quot;#sharedAllocatorObject&quot;&gt;&lt;code&gt;sharedAllocatorObject&lt;/code&gt;&lt;/a&gt; below).</source>
          <target state="translated">由于动态接口的灵活性以及级联的多个调用导致的效率低下，因此不建议在此级别上分配分配器。取而代之的是，使用&lt;a href=&quot;std_experimental_allocator_building_blocks&quot;&gt; &lt;code&gt;std.experimental.allocator.building_blocks&lt;/code&gt; 中&lt;/a&gt;定义的静态接口组成分配器，然后将组合的分配器修改为 &lt;code&gt;RCISharedAllocator&lt;/code&gt; （可能使用下面的&lt;a href=&quot;#sharedAllocatorObject&quot;&gt; &lt;code&gt;sharedAllocatorObject&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b431b82e9bce2d80758c9a0364b1e899b167bca3" translate="yes" xml:space="preserve">
          <source>Compress and return any remaining data. The returned data should be appended to that returned by compress().</source>
          <target state="translated">压缩并返回任何剩余的数据。返回的数据应该附加到compress()返回的数据上。</target>
        </trans-unit>
        <trans-unit id="6b91383db4a977df84d9d757e34690eb3fc7d851" translate="yes" xml:space="preserve">
          <source>Compress data</source>
          <target state="translated">压缩数据</target>
        </trans-unit>
        <trans-unit id="a8dc2c07db65d42c9c393d98f8d9729c6beed681" translate="yes" xml:space="preserve">
          <source>Compress the data in buf and return the compressed data.</source>
          <target state="translated">压缩buf中的数据并返回压缩后的数据。</target>
        </trans-unit>
        <trans-unit id="89a75f1668dd36d7548c52993ff9cd9810b43d8a" translate="yes" xml:space="preserve">
          <source>Compress/decompress data using the &lt;a href=&quot;http://www.zlib.net&quot;&gt;zlib library&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;http://www.zlib.net&quot;&gt;zlib库&lt;/a&gt;压缩/解压缩数据。</target>
        </trans-unit>
        <trans-unit id="bbe2af0a34e5107b1775ad6a8976ff6c5822f0ee" translate="yes" xml:space="preserve">
          <source>Compress/decompress data using the &lt;a href=&quot;https://www.zlib.net&quot;&gt;zlib library&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80550794074729987ba2c50d10325a6661e3698e" translate="yes" xml:space="preserve">
          <source>Compress/decompress data using the zlib library.</source>
          <target state="translated">使用zlib库压缩/解压数据。</target>
        </trans-unit>
        <trans-unit id="dc10154ed4deb931d65cd3942c615949df575b8c" translate="yes" xml:space="preserve">
          <source>Compression method used by &lt;code&gt;ArchiveMember&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ArchiveMember&lt;/code&gt; 使用的压缩方法。</target>
        </trans-unit>
        <trans-unit id="f100b192df1f9c75c6c1d947e071005a9b94874f" translate="yes" xml:space="preserve">
          <source>Compression method used by ArchiveMember</source>
          <target state="translated">ArchiveMember使用的压缩方法</target>
        </trans-unit>
        <trans-unit id="9cff7160bc1140411b9344944c01d77d95110520" translate="yes" xml:space="preserve">
          <source>Compression method.</source>
          <target state="translated">压缩方法:</target>
        </trans-unit>
        <trans-unit id="26aaa35645fb564b496958b2c50db8717acc133f" translate="yes" xml:space="preserve">
          <source>CompressionMethod</source>
          <target state="translated">CompressionMethod</target>
        </trans-unit>
        <trans-unit id="937ed94f3a66aa628561e8cb95c083b6199c5b0b" translate="yes" xml:space="preserve">
          <source>CompressionMethod &lt;code&gt;cm&lt;/code&gt;</source>
          <target state="translated">压缩方式 &lt;code&gt;cm&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cbc8d8043da3b003c6d2aff42124a5bad20359c0" translate="yes" xml:space="preserve">
          <source>Compute HMAC digests of arbitrary data.</source>
          <target state="translated">计算任意数据的HMAC摘要。</target>
        </trans-unit>
        <trans-unit id="95994e5336c058f341ee7887a377a099034ec411" translate="yes" xml:space="preserve">
          <source>Compute MD5 hash of arbitrary data.</source>
          <target state="translated">计算任意数据的MD5哈希值。</target>
        </trans-unit>
        <trans-unit id="24baedad0dbc82d64549a5102e14973f3260590c" translate="yes" xml:space="preserve">
          <source>Compute MOD bits matching &lt;code&gt;this&lt;/code&gt; argument type to wild parameter type.</source>
          <target state="translated">计算与 &lt;code&gt;this&lt;/code&gt; 参数类型匹配的MOD位，以匹配野生参数类型。</target>
        </trans-unit>
        <trans-unit id="081bc30fb0efc1dbeb72897ae1b50df74202f671" translate="yes" xml:space="preserve">
          <source>Compute MurmurHash of arbitrary data.</source>
          <target state="translated">计算任意数据的MurmurHash。</target>
        </trans-unit>
        <trans-unit id="4ada77a245b8b65254fa2bd2ec7982197684a020" translate="yes" xml:space="preserve">
          <source>Compute RIPEMD-160 hash of arbitrary data.</source>
          <target state="translated">计算任意数据的RIPEMD-160哈希值。</target>
        </trans-unit>
        <trans-unit id="0ba34f35a04123a2ebf02b152eea60a361465caa" translate="yes" xml:space="preserve">
          <source>Compute SHA1 and SHA2 hashes of arbitrary data.</source>
          <target state="translated">计算任意数据的SHA1和SHA2哈希值。</target>
        </trans-unit>
        <trans-unit id="59806efe8816bdf113fe5ffcf24b9d67587999dc" translate="yes" xml:space="preserve">
          <source>Compute column number at the end of the printed form of the string, assuming the string starts in the leftmost column, which is numbered starting from 0.</source>
          <target state="translated">计算字符串打印形式末尾的列号,假设字符串从最左边的列开始,该列从0开始编号。</target>
        </trans-unit>
        <trans-unit id="39ea6ece3f7ff3bfca84b026b3c00d5558a650d8" translate="yes" xml:space="preserve">
          <source>Compute covariance of parameters &lt;code&gt;this&lt;/code&gt; and &lt;code&gt;p&lt;/code&gt; as determined by the storage classes of both.</source>
          <target state="translated">计算由两者的存储类别确定的参数 &lt;code&gt;this&lt;/code&gt; 和 &lt;code&gt;p&lt;/code&gt; 的协方差。</target>
        </trans-unit>
        <trans-unit id="2899928c342104b102c9fb899b2a19b12b7c6b8f" translate="yes" xml:space="preserve">
          <source>Compute digests such as md5, sha1 and crc32.</source>
          <target state="translated">计算摘要,如md5、sha1和crc32。</target>
        </trans-unit>
        <trans-unit id="114ac47572e156cc9f60194024ceb062761cf170" translate="yes" xml:space="preserve">
          <source>Compute hash function for Object.</source>
          <target state="translated">计算对象的哈希函数。</target>
        </trans-unit>
        <trans-unit id="3b9f081e79f23af8321ffcc88ead6e2e02f25fb6" translate="yes" xml:space="preserve">
          <source>Compute n * 2&lt;sup&gt;exp&lt;/sup&gt;</source>
          <target state="translated">计算n * 2 &lt;sup&gt;exp&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="605710f35eafe733df0dc2a4c0e73d7c711eb032" translate="yes" xml:space="preserve">
          <source>Compute number of elements for a (possibly multidimensional) static array, or 1 for other types.</source>
          <target state="translated">计算一个(可能是多维)静态数组的元素数,其他类型的元素数为1。</target>
        </trans-unit>
        <trans-unit id="23878574338ad4ed6153fe2d2983bb38e8e88560" translate="yes" xml:space="preserve">
          <source>Compute size of a dt</source>
          <target state="translated">计算dt的大小</target>
        </trans-unit>
        <trans-unit id="47dd82c7c7297f6f9c8f6783436ccac77ec97b62" translate="yes" xml:space="preserve">
          <source>Compute square root of x.</source>
          <target state="translated">计算x的平方根。</target>
        </trans-unit>
        <trans-unit id="6810299cd458778af68742dfbad149d1819bc21e" translate="yes" xml:space="preserve">
          <source>Compute the Adler-32 checksum of a buffer's worth of data.</source>
          <target state="translated">计算一个缓冲区数据的Adler-32校验和。</target>
        </trans-unit>
        <trans-unit id="99c622a401ade4d7e2ebcffe7d148251987300a5" translate="yes" xml:space="preserve">
          <source>Compute the CRC32 checksum of a buffer's worth of data.</source>
          <target state="translated">计算一个缓冲区数据的CRC32校验和。</target>
        </trans-unit>
        <trans-unit id="9fe16e5290f537eb58bcbe27dcbb8dabf4bc6163" translate="yes" xml:space="preserve">
          <source>Compute the Fourier transform of range using the &amp;Omicron;(&lt;code&gt;N log N&lt;/code&gt;) Cooley-Tukey Algorithm. &lt;code&gt;range&lt;/code&gt; must be a random-access range with slicing and a length equal to &lt;code&gt;size&lt;/code&gt; as provided at the construction of this object. The contents of range can be either numeric types, which will be interpreted as pure real values, or complex types with properties or members &lt;code&gt;.re&lt;/code&gt; and &lt;code&gt;.im&lt;/code&gt; that can be read.</source>
          <target state="translated">使用&amp;Omicron;（ &lt;code&gt;N log N&lt;/code&gt; ）Cooley-Tukey算法计算距离的傅立叶变换。 &lt;code&gt;range&lt;/code&gt; 必须是具有切片的随机访问范围，并且长度等于此对象构造时提供的 &lt;code&gt;size&lt;/code&gt; 。range的内容可以是数字类型（将被解释为纯实值），也可以是具有属性或可以读取的成员 &lt;code&gt;.re&lt;/code&gt; 和 &lt;code&gt;.im&lt;/code&gt; 的复杂类型。</target>
        </trans-unit>
        <trans-unit id="afc35381601c0eacc7d756fcdac3f07b01848561" translate="yes" xml:space="preserve">
          <source>Compute the absolute value.</source>
          <target state="translated">计算绝对值。</target>
        </trans-unit>
        <trans-unit id="c01ddf497acd77343bfc51afa6a69282e063bf27" translate="yes" xml:space="preserve">
          <source>Compute the power of two integral numbers.</source>
          <target state="translated">计算两个整数的幂。</target>
        </trans-unit>
        <trans-unit id="b471c4955a83035411d5b45de39b1b5e1642da44" translate="yes" xml:space="preserve">
          <source>Compute the sum of binary logarithms of the input range &lt;code&gt;r&lt;/code&gt;. The error of this method is much smaller than with a naive sum of log2.</source>
          <target state="translated">计算输入范围 &lt;code&gt;r&lt;/code&gt; 的二进制对数之和。这种方法的错误比使用log2天真之和小得多。</target>
        </trans-unit>
        <trans-unit id="ff38c1a05c708138b2214f90d4dc1a12310dd41c" translate="yes" xml:space="preserve">
          <source>Compute the value of an integer x, raised to the power of a positive integer n.</source>
          <target state="translated">计算整数x的值,升到正整数n的幂。</target>
        </trans-unit>
        <trans-unit id="4f68d18423d62869cea6398c61a35fc2726681da" translate="yes" xml:space="preserve">
          <source>Compute the value of x &lt;sup&gt;n&lt;/sup&gt;, where n is an integer</source>
          <target state="translated">计算x &lt;sup&gt;n&lt;/sup&gt;的值，其中n是整数</target>
        </trans-unit>
        <trans-unit id="77fc143961f9dbeaf572c0de2cdcd8820a0f8972" translate="yes" xml:space="preserve">
          <source>Computes &lt;a href=&quot;https://en.wikipedia.org/wiki/Entropy_(information_theory)&quot;&gt;entropy&lt;/a&gt; of input range &lt;code&gt;r&lt;/code&gt; in bits. This function assumes (without checking) that the values in &lt;code&gt;r&lt;/code&gt; are all in &lt;code&gt;[0, 1]&lt;/code&gt;. For the entropy to be meaningful, often &lt;code&gt;r&lt;/code&gt; should be normalized too (i.e., its values should sum to 1). The two-parameter version stops evaluating as soon as the intermediate result is greater than or equal to &lt;code&gt;max&lt;/code&gt;.</source>
          <target state="translated">以位为单位计算输入范围 &lt;code&gt;r&lt;/code&gt; 的&lt;a href=&quot;https://en.wikipedia.org/wiki/Entropy_(information_theory)&quot;&gt;熵&lt;/a&gt;。该函数假定（不检查） &lt;code&gt;r&lt;/code&gt; 中的值全部在 &lt;code&gt;[0, 1]&lt;/code&gt; 。为了使熵有意义，通常还应将 &lt;code&gt;r&lt;/code&gt; 标准化（即，其值之和应为1）。一旦中间结果大于或等于 &lt;code&gt;max&lt;/code&gt; ，则两参数版本将停止评估。</target>
        </trans-unit>
        <trans-unit id="296843c88206c491563d4a7f5e7016600d230563" translate="yes" xml:space="preserve">
          <source>Computes &lt;a href=&quot;https://en.wikipedia.org/wiki/Euclidean_distance&quot;&gt;Euclidean distance&lt;/a&gt; between input ranges &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. The two ranges must have the same length. The three-parameter version stops computation as soon as the distance is greater than or equal to &lt;code&gt;limit&lt;/code&gt; (this is useful to save computation if a small distance is sought).</source>
          <target state="translated">计算输入范围 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 之间的&lt;a href=&quot;https://en.wikipedia.org/wiki/Euclidean_distance&quot;&gt;欧几里得距离&lt;/a&gt;。两个范围必须具有相同的长度。当距离大于或等于 &lt;code&gt;limit&lt;/code&gt; ，三参数版本将立即停止计算（如果需要较小的距离，这将有助于节省计算时间）。</target>
        </trans-unit>
        <trans-unit id="e8687c4446d77dec6b0783c73ae0c35b758b4e36" translate="yes" xml:space="preserve">
          <source>Computes &lt;a href=&quot;https://en.wikipedia.org/wiki/MurmurHash&quot;&gt;MurmurHash&lt;/a&gt; hashes of arbitrary data. MurmurHash is a non-cryptographic hash function suitable for general hash-based lookup. It is optimized for x86 but can be used on all architectures.</source>
          <target state="translated">计算任意数据的&lt;a href=&quot;https://en.wikipedia.org/wiki/MurmurHash&quot;&gt;MurmurHash&lt;/a&gt;哈希值。MurmurHash是一种非加密哈希函数，适用于基于常规哈希的常规查找。它针对x86进行了优化，但可以在所有体系结构上使用。</target>
        </trans-unit>
        <trans-unit id="3d1c57bf08f15b670eca8f41ce0168ced47af851" translate="yes" xml:space="preserve">
          <source>Computes Cartesian product of two ranges.</source>
          <target state="translated">计算两个范围的笛卡尔积。</target>
        </trans-unit>
        <trans-unit id="fb193027e232a8b400c045bedc504035cc557cce" translate="yes" xml:space="preserve">
          <source>Computes MD5 hashes of arbitrary data. MD5 hashes are 16 byte quantities that are like a checksum or CRC, but are more robust.</source>
          <target state="translated">计算任意数据的MD5哈希值。MD5哈希是16个字节的量,类似于校验和或CRC,但更加稳健。</target>
        </trans-unit>
        <trans-unit id="5579e2951cd84cd7814305254794db678509d171" translate="yes" xml:space="preserve">
          <source>Computes RIPEMD-160 hashes of arbitrary data. RIPEMD-160 hashes are 20 byte quantities that are like a checksum or CRC, but are more robust.</source>
          <target state="translated">计算任意数据的RIPEMD-160哈希值。RIPEMD-160散列是20字节的量,类似于校验和或CRC,但更加稳健。</target>
        </trans-unit>
        <trans-unit id="b03ce1bab59ab2d228bb375354ca2f56fee8c218" translate="yes" xml:space="preserve">
          <source>Computes SHA1 and SHA2 hashes of arbitrary data. SHA hashes are 20 to 64 byte quantities (depending on the SHA algorithm) that are like a checksum or CRC, but are more robust.</source>
          <target state="translated">计算任意数据的SHA1和SHA2哈希值。SHA哈希值是20到64个字节的量(取决于SHA算法),类似于校验和或CRC,但更加稳健。</target>
        </trans-unit>
        <trans-unit id="e7873407fccab092da69ee0890f41357999dc857" translate="yes" xml:space="preserve">
          <source>Computes a hash of the instance of a type.</source>
          <target state="translated">计算一个类型实例的哈希值。</target>
        </trans-unit>
        <trans-unit id="82604089c1a3a9639da1f3dad4ff14761ed55648" translate="yes" xml:space="preserve">
          <source>Computes a subrange of &lt;code&gt;range&lt;/code&gt; starting at the first occurrence of &lt;code&gt;range&lt;/code&gt;'s minimum (respectively maximum) and with the same ending as &lt;code&gt;range&lt;/code&gt;, or the empty range if &lt;code&gt;range&lt;/code&gt; itself is empty.</source>
          <target state="translated">计算范围的子 &lt;code&gt;range&lt;/code&gt; ，该范围的范围从第一次出现的 &lt;code&gt;range&lt;/code&gt; 的最小值（分别是最大值）开始，并以 &lt;code&gt;range&lt;/code&gt; 结束，如果 &lt;code&gt;range&lt;/code&gt; 本身为空，则为空范围。</target>
        </trans-unit>
        <trans-unit id="b28e3792ae1738b85ec20e79a7ef0f511b39b00f" translate="yes" xml:space="preserve">
          <source>Computes an index for &lt;code&gt;r&lt;/code&gt; based on the comparison &lt;code&gt;less&lt;/code&gt;. The index is a sorted array of pointers or indices into the original range. This technique is similar to sorting, but it is more flexible because (1) it allows &quot;sorting&quot; of immutable collections, (2) allows binary search even if the original collection does not offer random access, (3) allows multiple indexes, each on a different predicate, and (4) may be faster when dealing with large objects. However, using an index may also be slower under certain circumstances due to the extra indirection, and is always larger than a sorting-based solution because it needs space for the index in addition to the original collection. The complexity is the same as &lt;code&gt;sort&lt;/code&gt;'s.</source>
          <target state="translated">根据 &lt;code&gt;less&lt;/code&gt; 的比较来计算 &lt;code&gt;r&lt;/code&gt; 的索引。索引是原始范围内的指针或索引的排序数组。此技术类似于排序，但更为灵活，因为（1）它允许对不可变的集合进行&amp;ldquo;排序&amp;rdquo;；（2）即使原始集合不提供随机访问，也可以进行二进制搜索；（3）允许多个索引，每个索引（4）处理大对象时可能更快。但是，在某些情况下，由于存在额外的间接访问，使用索引的速度也可能较慢，并且始终比基于排序的解决方案要大，因为它除了原始集合外还需要索引空间。复杂度与 &lt;code&gt;sort&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="92f85def44d73b410c07064bdb1637d1fdade94c" translate="yes" xml:space="preserve">
          <source>Computes integer to floating point powers.</source>
          <target state="translated">计算整数到浮点幂。</target>
        </trans-unit>
        <trans-unit id="828dda1e22c2f096a88e923fc1bc2efd10471f59" translate="yes" xml:space="preserve">
          <source>Computes the &lt;a href=&quot;https://en.wikipedia.org/wiki/Cosine_similarity&quot;&gt;cosine similarity&lt;/a&gt; of input ranges &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. The two ranges must have the same length. If both ranges define length, the check is done once; otherwise, it is done at each iteration. If either range has all-zero elements, return 0.</source>
          <target state="translated">计算输入范围 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 的&lt;a href=&quot;https://en.wikipedia.org/wiki/Cosine_similarity&quot;&gt;余弦相似度&lt;/a&gt;。两个范围必须具有相同的长度。如果两个范围都定义了长度，则检查一次。否则，将在每次迭代时完成。如果任一范围的元素全为零，则返回0。</target>
        </trans-unit>
        <trans-unit id="001e06c86d6d760ab7657dfb18427574bae02730" translate="yes" xml:space="preserve">
          <source>Computes the &lt;a href=&quot;https://en.wikipedia.org/wiki/Dot_product&quot;&gt;dot product&lt;/a&gt; of input ranges &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. The two ranges must have the same length. If both ranges define length, the check is done once; otherwise, it is done at each iteration.</source>
          <target state="translated">计算输入范围 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 的&lt;a href=&quot;https://en.wikipedia.org/wiki/Dot_product&quot;&gt;点积&lt;/a&gt;。两个范围必须具有相同的长度。如果两个范围都定义了长度，则检查一次。否则，将在每次迭代时完成。</target>
        </trans-unit>
        <trans-unit id="bcf4ed97371360235833e69216aba07328958d9e" translate="yes" xml:space="preserve">
          <source>Computes the &lt;a href=&quot;https://en.wikipedia.org/wiki/Jensen%E2%80%93Shannon_divergence&quot;&gt;Jensen-Shannon divergence&lt;/a&gt; between &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, which is the sum &lt;code&gt;(ai * log(2 * ai / (ai + bi)) + bi * log(2 * bi / (ai + bi))) / 2&lt;/code&gt;. The base of logarithm is 2. The ranges are assumed to contain elements in &lt;code&gt;[0, 1]&lt;/code&gt;. Usually the ranges are normalized probability distributions, but this is not required or checked by &lt;code&gt;jensenShannonDivergence&lt;/code&gt;. If the inputs are normalized, the result is bounded within &lt;code&gt;[0, 1]&lt;/code&gt;. The three-parameter version stops evaluations as soon as the intermediate result is greater than or equal to &lt;code&gt;limit&lt;/code&gt;.</source>
          <target state="translated">计算 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 之间的&lt;a href=&quot;https://en.wikipedia.org/wiki/Jensen%E2%80%93Shannon_divergence&quot;&gt;Jensen-Shannon散度&lt;/a&gt;，即和 &lt;code&gt;(ai * log(2 * ai / (ai + bi)) + bi * log(2 * bi / (ai + bi))) / 2&lt;/code&gt; 。对数的底数为2。假定范围包含 &lt;code&gt;[0, 1]&lt;/code&gt; 元素。通常，范围是归一化的概率分布，但是 &lt;code&gt;jensenShannonDivergence&lt;/code&gt; 不需要或不能检查范围。如果将输入标准化，则结果将限制在 &lt;code&gt;[0, 1]&lt;/code&gt; 。一旦中间结果大于或等于 &lt;code&gt;limit&lt;/code&gt; ，则三参数版本将停止评估。</target>
        </trans-unit>
        <trans-unit id="bccc93152f84cfb32d87abe05334a1cc08f473ea" translate="yes" xml:space="preserve">
          <source>Computes the &lt;a href=&quot;https://en.wikipedia.org/wiki/Kullback%E2%80%93Leibler_divergence&quot;&gt;Kullback-Leibler divergence&lt;/a&gt; between input ranges &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, which is the sum &lt;code&gt;ai * log(ai / bi)&lt;/code&gt;. The base of logarithm is 2. The ranges are assumed to contain elements in &lt;code&gt;[0, 1]&lt;/code&gt;. Usually the ranges are normalized probability distributions, but this is not required or checked by &lt;code&gt;kullbackLeiblerDivergence&lt;/code&gt;. If any element &lt;code&gt;bi&lt;/code&gt; is zero and the corresponding element &lt;code&gt;ai&lt;/code&gt; nonzero, returns infinity. (Otherwise, if &lt;code&gt;ai == 0 &amp;amp;&amp;amp; bi == 0&lt;/code&gt;, the term &lt;code&gt;ai * log(ai / bi)&lt;/code&gt; is considered zero.) If the inputs are normalized, the result is positive.</source>
          <target state="translated">计算输入范围 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 之间的&lt;a href=&quot;https://en.wikipedia.org/wiki/Kullback%E2%80%93Leibler_divergence&quot;&gt;Kullback-Leibler散度&lt;/a&gt;，即和 &lt;code&gt;ai * log(ai / bi)&lt;/code&gt; 。对数的底数为2。假定范围包含 &lt;code&gt;[0, 1]&lt;/code&gt; 元素。通常，范围是归一化的概率分布，但这不是必需的，也不是由 &lt;code&gt;kullbackLeiblerDivergence&lt;/code&gt; 检查。如果任何元素 &lt;code&gt;bi&lt;/code&gt; 为零且相应元素 &lt;code&gt;ai&lt;/code&gt; 为非零，则返回无穷大。 （否则，如果 &lt;code&gt;ai == 0 &amp;amp;&amp;amp; bi == 0&lt;/code&gt; ，则将 &lt;code&gt;ai * log(ai / bi)&lt;/code&gt; 视为零。）如果对输入进行了归一化，则结果为正。</target>
        </trans-unit>
        <trans-unit id="82f8a61e8d0a5e2c407cc15d0dc98d8a7c77f454" translate="yes" xml:space="preserve">
          <source>Computes the greatest common divisor of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; by using an efficient algorithm such as &lt;a href=&quot;https://en.wikipedia.org/wiki/Euclidean_algorithm&quot;&gt;Euclid's&lt;/a&gt; or &lt;a href=&quot;https://en.wikipedia.org/wiki/Binary_GCD_algorithm&quot;&gt;Stein's&lt;/a&gt; algorithm.</source>
          <target state="translated">通过使用有效的算法（例如&lt;a href=&quot;https://en.wikipedia.org/wiki/Euclidean_algorithm&quot;&gt;Euclid&lt;/a&gt;或&lt;a href=&quot;https://en.wikipedia.org/wiki/Binary_GCD_algorithm&quot;&gt;Stein&lt;/a&gt;算法）来计算 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 的最大公约数。</target>
        </trans-unit>
        <trans-unit id="62daeb05222388ac697dc74b9f37d3d0822c2a6e" translate="yes" xml:space="preserve">
          <source>Computes the hash of the held value.</source>
          <target state="translated">计算持有值的哈希值。</target>
        </trans-unit>
        <trans-unit id="265e1e72bdf2f361616fec34db23103d27bf2241" translate="yes" xml:space="preserve">
          <source>Computes the index of the first occurrence of &lt;code&gt;range&lt;/code&gt;'s maximum element.</source>
          <target state="translated">计算 &lt;code&gt;range&lt;/code&gt; 的最大元素的第一次出现的索引。</target>
        </trans-unit>
        <trans-unit id="355f343fa9f1a69e378af49768a7655e8cf9c6b9" translate="yes" xml:space="preserve">
          <source>Computes the index of the first occurrence of &lt;code&gt;range&lt;/code&gt;'s minimum element.</source>
          <target state="translated">计算 &lt;code&gt;range&lt;/code&gt; 的最小元素的第一次出现的索引。</target>
        </trans-unit>
        <trans-unit id="23157290f28401c16bb054d1176e6a8721bc9834" translate="yes" xml:space="preserve">
          <source>Computes the inverse Fourier transform of a range. The range must be a random access range with slicing, have a length equal to the size provided at construction of this object, and contain elements that are either of type std.complex.Complex or have essentially the same compile-time interface.</source>
          <target state="translated">计算一个范围的反傅立叶变换。范围必须是一个随机访问的分片范围,长度必须等于在构造此对象时提供的大小,并且包含的元素必须是std.complex.Complex类型或具有基本相同的编译时接口。</target>
        </trans-unit>
        <trans-unit id="a4770977a60d3756b3fc642893a20b59f0fe70f5" translate="yes" xml:space="preserve">
          <source>Computes the length of any range in O(n) time.</source>
          <target state="translated">用O(n)时间计算任意范围的长度。</target>
        </trans-unit>
        <trans-unit id="a53d2cd20ccb22bc201e56bc6c6a7059b3ec842d" translate="yes" xml:space="preserve">
          <source>Computes the length of grapheme cluster starting at &lt;code&gt;index&lt;/code&gt;. Both the resulting length and the &lt;code&gt;index&lt;/code&gt; are measured in &lt;a href=&quot;#Code%20unit&quot;&gt;code units&lt;/a&gt;.</source>
          <target state="translated">计算从 &lt;code&gt;index&lt;/code&gt; 开始的字素簇的长度。结果长度和 &lt;code&gt;index&lt;/code&gt; 均以&lt;a href=&quot;#Code%20unit&quot;&gt;代码单位&lt;/a&gt;进行度量。</target>
        </trans-unit>
        <trans-unit id="1a5a9de63581b03924af8f2c2bbd32e205910376" translate="yes" xml:space="preserve">
          <source>Computes the match of the popFront length. Completes in &amp;Omicron;(&lt;code&gt;s.length * t.length&lt;/code&gt;) time.</source>
          <target state="translated">计算popFront长度的匹配项。以 &lt;code&gt;s.length * t.length&lt;/code&gt; （s.length * t.length）时间完成。</target>
        </trans-unit>
        <trans-unit id="3d970629c10f34f68e73440748e21b623f859402" translate="yes" xml:space="preserve">
          <source>Computes the minimum (respectively maximum) of &lt;code&gt;range&lt;/code&gt; along with its number of occurrences. Formally, the minimum is a value &lt;code&gt;x&lt;/code&gt; in &lt;code&gt;range&lt;/code&gt; such that &lt;code&gt;pred(a, x)&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; for all values &lt;code&gt;a&lt;/code&gt; in &lt;code&gt;range&lt;/code&gt;. Conversely, the maximum is a value &lt;code&gt;x&lt;/code&gt; in &lt;code&gt;range&lt;/code&gt; such that &lt;code&gt;pred(x, a)&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; for all values &lt;code&gt;a&lt;/code&gt; in &lt;code&gt;range&lt;/code&gt; (note the swapped arguments to &lt;code&gt;pred&lt;/code&gt;).</source>
          <target state="translated">计算的最小（最大分别） &lt;code&gt;range&lt;/code&gt; ，其出现次数的沿。形式上，最小值是一个值 &lt;code&gt;x&lt;/code&gt; 在 &lt;code&gt;range&lt;/code&gt; ，使得 &lt;code&gt;pred(a, x)&lt;/code&gt; 是 &lt;code&gt;false&lt;/code&gt; 对于所有的值 &lt;code&gt;a&lt;/code&gt; 在 &lt;code&gt;range&lt;/code&gt; 。相反，最大是一个值 &lt;code&gt;x&lt;/code&gt; 在 &lt;code&gt;range&lt;/code&gt; ，使得 &lt;code&gt;pred(x, a)&lt;/code&gt; 是 &lt;code&gt;false&lt;/code&gt; 对于所有的值 &lt;code&gt;a&lt;/code&gt; 在 &lt;code&gt;range&lt;/code&gt; （注意交换参数 &lt;code&gt;pred&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ef86bb558e70e54418dec649b83e309302fe4774" translate="yes" xml:space="preserve">
          <source>Computes the next lexicographically greater even permutation of a range in-place.</source>
          <target state="translated">计算一个范围的下一个词法上的大偶数排列。</target>
        </trans-unit>
        <trans-unit id="c939037e683052e11796212630e886a0f710fc91" translate="yes" xml:space="preserve">
          <source>Computes the next lexicographically greater permutation of a range in-place.</source>
          <target state="translated">计算一个范围在原地的下一个词法上更大的排列组合。</target>
        </trans-unit>
        <trans-unit id="0ac0eb054effc8e964f179add51ac8ce5cde0817" translate="yes" xml:space="preserve">
          <source>Computes the nth permutation of a range in-place.</source>
          <target state="translated">就地计算一个范围的第n次排列。</target>
        </trans-unit>
        <trans-unit id="7776b0304fc7917421d0069aa2e2faee1db476d1" translate="yes" xml:space="preserve">
          <source>Computes the union of a range of sorted ranges.</source>
          <target state="translated">计算排序范围的结合。</target>
        </trans-unit>
        <trans-unit id="cb77e0d53b3af1bb492d078444229137406cc49e" translate="yes" xml:space="preserve">
          <source>Computes the union of multiple ranges. The &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input ranges&lt;/a&gt; are passed as a range of ranges and each is assumed to be sorted by &lt;code&gt;less&lt;/code&gt;. Computation is done lazily, one union element at a time. &lt;code&gt;multiwayUnion(ror)&lt;/code&gt; is functionally equivalent to &lt;code&gt;multiwayMerge(ror).uniq&lt;/code&gt;.</source>
          <target state="translated">计算多个范围的并集。的&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;被作为一个范围的范围的传递，并且每个被假定为通过进行排序 &lt;code&gt;less&lt;/code&gt; 。计算是懒惰的，一次只有一个并集元素。 &lt;code&gt;multiwayUnion(ror)&lt;/code&gt; 在功能上等效于 &lt;code&gt;multiwayMerge(ror).uniq&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a126dbb5dda187ebb7d5104cb58f176f39bc7db" translate="yes" xml:space="preserve">
          <source>Computes the value of a positive integer &lt;code&gt;x&lt;/code&gt;, raised to the power &lt;code&gt;n&lt;/code&gt;, modulo &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">计算以 &lt;code&gt;n&lt;/code&gt; 为模的正整数 &lt;code&gt;x&lt;/code&gt; 的值，以 &lt;code&gt;m&lt;/code&gt; 为模。</target>
        </trans-unit>
        <trans-unit id="5b267e5f3dfcaf722a685eb900169bb377c96955" translate="yes" xml:space="preserve">
          <source>Computes whether a values is approximately equal to a reference value, admitting a maximum relative difference, and a maximum absolute difference.</source>
          <target state="translated">计算一个值是否与参考值近似相等,接纳最大相对差和最大绝对差。</target>
        </trans-unit>
        <trans-unit id="04fa1754d0f3ba8b19daaf72ab1060db4c420591" translate="yes" xml:space="preserve">
          <source>Computes whether two values are approximately equal, admitting a maximum relative difference, and a maximum absolute difference.</source>
          <target state="translated">计算两个值是否近似相等,接纳最大相对差,和最大绝对差。</target>
        </trans-unit>
        <trans-unit id="90f1bfbd09f8811922bf824de5a2cde80eff4934" translate="yes" xml:space="preserve">
          <source>Computing array lengths during compilation</source>
          <target state="translated">编译过程中计算阵列长度</target>
        </trans-unit>
        <trans-unit id="ed0c24b1a7f07e9baa4b3d7d42eace24ae7358ef" translate="yes" xml:space="preserve">
          <source>Concatenate Tuples. Tuple concatenation is only allowed if all named fields are distinct (no named field of this tuple occurs in &lt;code&gt;t&lt;/code&gt; and no named field of &lt;code&gt;t&lt;/code&gt; occurs in this tuple).</source>
          <target state="translated">连接元组。如果所有命名字段（在此发生元组没有命名的字段不同元组级联只允许 &lt;code&gt;t&lt;/code&gt; 和不指定字段 &lt;code&gt;t&lt;/code&gt; 在这个元组时）。</target>
        </trans-unit>
        <trans-unit id="c1cbdd888810a65f9ce252092149adeb11bad0f8" translate="yes" xml:space="preserve">
          <source>Concatenate multiple &lt;code&gt;escapeShellCommand&lt;/code&gt; and &lt;a href=&quot;#escapeShellFileName&quot;&gt;&lt;code&gt;escapeShellFileName&lt;/code&gt;&lt;/a&gt; results to use shell redirection or piping operators.</source>
          <target state="translated">连接多个 &lt;code&gt;escapeShellCommand&lt;/code&gt; 和&lt;a href=&quot;#escapeShellFileName&quot;&gt; &lt;code&gt;escapeShellFileName&lt;/code&gt; &lt;/a&gt;结果以使用Shell重定向或管道运算符。</target>
        </trans-unit>
        <trans-unit id="ef92b5ecddb9c03ee25b9741d86e91adf28ae5ee" translate="yes" xml:space="preserve">
          <source>Concatenate path segments together to form one path.</source>
          <target state="translated">将路径段连在一起,形成一条路径。</target>
        </trans-unit>
        <trans-unit id="fbbbf15264cd015326c8650e5c9bcfe45679594d" translate="yes" xml:space="preserve">
          <source>Concatenate tuples</source>
          <target state="translated">串联元组</target>
        </trans-unit>
        <trans-unit id="d334da4f36d3ac970a49b9c6ff3d38de0a94daec" translate="yes" xml:space="preserve">
          <source>Concatenate two lists (l2 appended to l1).</source>
          <target state="translated">将两张清单连在一起(l2附在l1之后)。</target>
        </trans-unit>
        <trans-unit id="54605f22a1f1252b76de960747267c3c0603476d" translate="yes" xml:space="preserve">
          <source>Concatenates a range of ranges into one array.</source>
          <target state="translated">将一系列的范围连接成一个数组。</target>
        </trans-unit>
        <trans-unit id="09f32ec319e44bc6f468a74c63ca6c7d780d7a7f" translate="yes" xml:space="preserve">
          <source>Concatenates several ranges into a single range.</source>
          <target state="translated">将几个范围合并成一个范围。</target>
        </trans-unit>
        <trans-unit id="aba48fb5ee4afc0282b513e1b8419e115676e665" translate="yes" xml:space="preserve">
          <source>Concatenating the arrays inside of &lt;code&gt;arrs&lt;/code&gt;. &lt;code&gt;_d_arraycatnTX([a, b, c])&lt;/code&gt; means &lt;code&gt;a ~ b ~ c&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;arrs&lt;/code&gt; 内部连接数组。 &lt;code&gt;_d_arraycatnTX([a, b, c])&lt;/code&gt; 是指 &lt;code&gt;a ~ b ~ c&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1fd32d36258eae30e3a703b388fd2d676ac083d9" translate="yes" xml:space="preserve">
          <source>Concatenation always creates a copy of its operands, even if one of the operands is a 0 length array, so:</source>
          <target state="translated">并集总是为其操作数创建一个副本,即使其中一个操作数是一个0长度的数组,所以。</target>
        </trans-unit>
        <trans-unit id="8bfdaed1fe3ba5044986f54f678261c455c4286e" translate="yes" xml:space="preserve">
          <source>Concatenation and appending</source>
          <target state="translated">连接和追加</target>
        </trans-unit>
        <trans-unit id="f307354edc327002aff0696b23e699bed6b0337f" translate="yes" xml:space="preserve">
          <source>Conceptual type that outlines the common properties of all UTF Matchers.</source>
          <target state="translated">概念类型,概述了所有UTF匹配器的共同属性。</target>
        </trans-unit>
        <trans-unit id="2f4979324e03e4571b1d7eba701226670c2ee2da" translate="yes" xml:space="preserve">
          <source>Condition</source>
          <target state="translated">Condition</target>
        </trans-unit>
        <trans-unit id="368834630d459ecc51471d8ef1eb3550a7af82cb" translate="yes" xml:space="preserve">
          <source>Conditional Compilation</source>
          <target state="translated">有条件汇编</target>
        </trans-unit>
        <trans-unit id="8a0d63179619b501ad5800876cf0df368b27a390" translate="yes" xml:space="preserve">
          <source>Conditional Expressions</source>
          <target state="translated">条件表达式</target>
        </trans-unit>
        <trans-unit id="02b96d4c9fbd3a91b071d3d53be1d37274828f1c" translate="yes" xml:space="preserve">
          <source>Conditional Logging</source>
          <target state="translated">条件性记录</target>
        </trans-unit>
        <trans-unit id="61fb1fb5259174d8968cdd64b4b930f65a905d82" translate="yes" xml:space="preserve">
          <source>Conditional compilation</source>
          <target state="translated">有条件的汇编</target>
        </trans-unit>
        <trans-unit id="41d7d233afb0dd68d28fc8f570d341d5c22d2172" translate="yes" xml:space="preserve">
          <source>Conditional logging can be achieved be passing a &lt;code&gt;bool&lt;/code&gt; as first argument to a log function. If conditional logging is used the condition must be &lt;code&gt;true&lt;/code&gt; in order to have the log message logged.  In order to combine an explicit &lt;code&gt;LogLevel&lt;/code&gt; passing with conditional logging, the &lt;code&gt;LogLevel&lt;/code&gt; has to be passed as first argument followed by the &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">通过将 &lt;code&gt;bool&lt;/code&gt; 作为第一个参数传递给log函数，可以实现条件记录。如果使用条件日志记录，则条件必须为 &lt;code&gt;true&lt;/code&gt; 才能记录日志消息。为了将显式 &lt;code&gt;LogLevel&lt;/code&gt; 与条件日志结合在一起，必须将 &lt;code&gt;LogLevel&lt;/code&gt; 作为第一个参数传递，后跟 &lt;code&gt;bool&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e9b71968760fc03c2bd272ee9bbb297247e44ef" translate="yes" xml:space="preserve">
          <source>ConditionalDeclaration</source>
          <target state="translated">ConditionalDeclaration</target>
        </trans-unit>
        <trans-unit id="c5b4a55bf44bb04ff293c5deb38688769ac299cf" translate="yes" xml:space="preserve">
          <source>ConditionalStatement</source>
          <target state="translated">ConditionalStatement</target>
        </trans-unit>
        <trans-unit id="2cda11f185fbbbe7d23cfc89fd493405e9cae9a1" translate="yes" xml:space="preserve">
          <source>Config &lt;code&gt;config&lt;/code&gt;</source>
          <target state="translated">配置 &lt;code&gt;config&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="06610b8b075f898940036a6adb700398270f1776" translate="yes" xml:space="preserve">
          <source>Configuration options for &lt;code&gt;getopt&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getopt&lt;/code&gt; 的配置选项。</target>
        </trans-unit>
        <trans-unit id="a6431b321225e094a850e4edc49d8a1243e81cc7" translate="yes" xml:space="preserve">
          <source>Configuration options for druntime.</source>
          <target state="translated">醉酒时间的配置选项。</target>
        </trans-unit>
        <trans-unit id="1b3ac33acfeded0c91e96d651db32f59b33bf43d" translate="yes" xml:space="preserve">
          <source>Configuration via the command line can be disabled by declaring a variable for the linker to pick up before using it's default from the runtime:</source>
          <target state="translated">在使用运行时的默认值之前,通过命令行的配置可以通过声明一个变量让链接器接收来禁止。</target>
        </trans-unit>
        <trans-unit id="c549a207a37db7214dfa5f6be06a12b29fcccee0" translate="yes" xml:space="preserve">
          <source>Configuration via the command line can be disabled by declaring a variable for the linker to pick up before using its default from the runtime:</source>
          <target state="translated">通过命令行进行的配置可以通过声明一个变量,让链接器在使用运行时的默认值之前,先将其禁用。</target>
        </trans-unit>
        <trans-unit id="1cfd39d93ce243f8209e2cb0fd6a72bd5199a441" translate="yes" xml:space="preserve">
          <source>Configure an auto-checkpoint</source>
          <target state="translated">配置自动检查点</target>
        </trans-unit>
        <trans-unit id="5cda84f2fffb92ec6200fae3e17f21d369027339" translate="yes" xml:space="preserve">
          <source>Configure database connections</source>
          <target state="translated">配置数据库连接</target>
        </trans-unit>
        <trans-unit id="9d3bc7d832ae044f63c47a2f9e7fae292f78d77f" translate="yes" xml:space="preserve">
          <source>Configuring The SQLite Library</source>
          <target state="translated">配置SQLite库</target>
        </trans-unit>
        <trans-unit id="6c9652511df81d8bc126592a1f7ea6652bb3ab73" translate="yes" xml:space="preserve">
          <source>Configuring the Garbage Collector</source>
          <target state="translated">配置垃圾收集器</target>
        </trans-unit>
        <trans-unit id="76ad8dda0a203dcd9a14445916230e10df73a7f3" translate="yes" xml:space="preserve">
          <source>Confirm s is a valid template, then store it.</source>
          <target state="translated">确认s是一个有效的模板,然后存储它。</target>
        </trans-unit>
        <trans-unit id="db012c464d251d67ffbcac09777d640d209be8dd" translate="yes" xml:space="preserve">
          <source>Confirm whether this stopwatch is measuring time.</source>
          <target state="translated">确认该秒表是否在测量时间。</target>
        </trans-unit>
        <trans-unit id="788ef0c8e55eab85066dfba32db7ceacb60c9712" translate="yes" xml:space="preserve">
          <source>Conflation of different memory pools:</source>
          <target state="translated">不同内存池的混用。</target>
        </trans-unit>
        <trans-unit id="841a7cce211d41301505ff131d9f016fac1e6279" translate="yes" xml:space="preserve">
          <source>Conforms to IEEE 754-2008</source>
          <target state="translated">符合IEEE 754-2008标准</target>
        </trans-unit>
        <trans-unit id="8d2931da0a4a255003ce81824b3d90572948d6f8" translate="yes" xml:space="preserve">
          <source>Conforms to the Microsoft Windows Structured Exception Handling conventions.</source>
          <target state="translated">符合微软Windows结构化异常处理惯例。</target>
        </trans-unit>
        <trans-unit id="bad8df68294c8ab2277b9345f70f577dbf3c8959" translate="yes" xml:space="preserve">
          <source>Conforms to the target's C ABI struct layout.</source>
          <target state="translated">符合目标的C ABI结构布局。</target>
        </trans-unit>
        <trans-unit id="49578a731259515bbadf31f422528ce8c4631b50" translate="yes" xml:space="preserve">
          <source>Conn &lt;code&gt;conn&lt;/code&gt;</source>
          <target state="translated">康涅狄格州 &lt;code&gt;conn&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0474ba2f1ee3e396c97ac1ac34d1d19ad3689dae" translate="yes" xml:space="preserve">
          <source>Connection encoding. Defaults to ISO-8859-1.</source>
          <target state="translated">连接编码。默认为ISO-8859-1。</target>
        </trans-unit>
        <trans-unit id="519ecd274822b5f9ddc30ae246a94167b56bf039" translate="yes" xml:space="preserve">
          <source>Connection type used when the URL should be used to auto detect the protocol. This struct is used as placeholder for the connection parameter when calling the high level API and the connection type (HTTP/FTP) should be guessed by inspecting the URL parameter. The rules for guessing the protocol are: 1, if URL starts with ftp://, ftps:// or ftp. then FTP connection is assumed. 2, HTTP connection otherwise.</source>
          <target state="translated">当URL应该被用来自动检测协议时使用的连接类型。该结构在调用高层API时作为连接参数的占位符,应通过检查URL参数来猜测连接类型(HTTP/FTP)。猜测协议的规则是 1、如果URL以ftp://、ftps://或ftp开头,则假设为FTP连接。2,否则为HTTP连接。</target>
        </trans-unit>
        <trans-unit id="078912762bea745ba2c41bae707b195db48327c8" translate="yes" xml:space="preserve">
          <source>Connectionless, unreliable datagrams with a fixed maximum length; data may be lost or arrive out of order</source>
          <target state="translated">无连接、不可靠的数据报,有固定的最大长度;数据可能会丢失或不按顺序发送</target>
        </trans-unit>
        <trans-unit id="d929792a86b18c9fb89df6aef5598294f6328000" translate="yes" xml:space="preserve">
          <source>Connector_Punctuation</source>
          <target state="translated">Connector_Punctuation</target>
        </trans-unit>
        <trans-unit id="a30b51b4925a7ede0792face17a4f0e9710a0252" translate="yes" xml:space="preserve">
          <source>Consider using &lt;code&gt;getAddress&lt;/code&gt;, &lt;code&gt;parseAddress&lt;/code&gt; and &lt;code&gt;Address&lt;/code&gt; methods instead of using this class directly.</source>
          <target state="translated">考虑使用 &lt;code&gt;getAddress&lt;/code&gt; ， &lt;code&gt;parseAddress&lt;/code&gt; 和 &lt;code&gt;Address&lt;/code&gt; 方法，而不是直接使用此类。</target>
        </trans-unit>
        <trans-unit id="9810660bbdff1aae34eac15a7facdded0db22668" translate="yes" xml:space="preserve">
          <source>Const Member Functions</source>
          <target state="translated">构成成员功能</target>
        </trans-unit>
        <trans-unit id="83dcf3de7eb019ec6629bbd79f8b667634364e18" translate="yes" xml:space="preserve">
          <source>Const Storage Class</source>
          <target state="translated">Const存储类</target>
        </trans-unit>
        <trans-unit id="3d742d8dde06f988077f8f82f51f498a3531d234" translate="yes" xml:space="preserve">
          <source>Const Type</source>
          <target state="translated">结构类型</target>
        </trans-unit>
        <trans-unit id="784fed24b477710eef1f5226f481179174928151" translate="yes" xml:space="preserve">
          <source>Const and Immutable</source>
          <target state="translated">构成和不可变</target>
        </trans-unit>
        <trans-unit id="896cf932e98b76529cba660f6f6a0543fea0acaa" translate="yes" xml:space="preserve">
          <source>Const and Immutable Interfaces</source>
          <target state="translated">Const和Immutable接口</target>
        </trans-unit>
        <trans-unit id="9069f2cf93e274994d11feade6815e9fb488f82d" translate="yes" xml:space="preserve">
          <source>Const array is converted to input range by removing its qualifier.</source>
          <target state="translated">Const数组通过去掉它的限定符转换为输入范围。</target>
        </trans-unit>
        <trans-unit id="f40015b781b2d4acdb42042e30dd8e0561ab4289" translate="yes" xml:space="preserve">
          <source>Const member functions are functions that are not allowed to change any part of the object through the member function's this reference.</source>
          <target state="translated">Const成员函数是不允许通过成员函数的这个引用改变对象的任何部分的函数。</target>
        </trans-unit>
        <trans-unit id="2250093f69faa6a58322166f59cb9d509a15db57" translate="yes" xml:space="preserve">
          <source>Const types are like immutable types, except that const forms a read-only</source>
          <target state="translated">Const类型和不可变类型一样,只是Const类型形成了一个只读的</target>
        </trans-unit>
        <trans-unit id="cc17a30efd81f4b6809eff7a896b92f5876f25e3" translate="yes" xml:space="preserve">
          <source>Const, Immutable Comparison</source>
          <target state="translated">Const,Immutable Comparison</target>
        </trans-unit>
        <trans-unit id="b27c2428c75022095914c42cb3f655e37a5625b8" translate="yes" xml:space="preserve">
          <source>Const, Immutable and Shared Classes</source>
          <target state="translated">Const、不可变和共享类</target>
        </trans-unit>
        <trans-unit id="8681eda928fe17b6615fbb79a2dc733c8ebaba94" translate="yes" xml:space="preserve">
          <source>Const, Immutable and Shared Structs</source>
          <target state="translated">构造、不可变和共享结构</target>
        </trans-unit>
        <trans-unit id="6c73b65a7e00144e4a4cd7b116f22177ab58213a" translate="yes" xml:space="preserve">
          <source>Constant &lt;a href=&quot;#Code%20point&quot;&gt;code point&lt;/a&gt; (0x0085) - next line.</source>
          <target state="translated">常数&lt;a href=&quot;#Code%20point&quot;&gt;代码点&lt;/a&gt;（0x0085）-下一行。</target>
        </trans-unit>
        <trans-unit id="ee9a92399d6335bc2aeede4d454001baa024aaf3" translate="yes" xml:space="preserve">
          <source>Constant &lt;a href=&quot;#Code%20point&quot;&gt;code point&lt;/a&gt; (0x2028) - line separator.</source>
          <target state="translated">常数&lt;a href=&quot;#Code%20point&quot;&gt;代码点&lt;/a&gt;（0x2028）-行分隔符。</target>
        </trans-unit>
        <trans-unit id="d9cdea9445ed1d8ad134d40b5e8dd40f3350c441" translate="yes" xml:space="preserve">
          <source>Constant &lt;a href=&quot;#Code%20point&quot;&gt;code point&lt;/a&gt; (0x2029) - paragraph separator.</source>
          <target state="translated">常数&lt;a href=&quot;#Code%20point&quot;&gt;代码点&lt;/a&gt;（0x2029）-段落分隔符。</target>
        </trans-unit>
        <trans-unit id="ae1de1f3ec7fd1e298252331c9256b1f73d60516" translate="yes" xml:space="preserve">
          <source>Constant defining a fully decoded BOM</source>
          <target state="translated">定义一个完全解码的BOM的常数</target>
        </trans-unit>
        <trans-unit id="513fd3be0bfd521c00e6fe601132e59539268d57" translate="yes" xml:space="preserve">
          <source>Constant fold an Expression.</source>
          <target state="translated">常折一个Expression。</target>
        </trans-unit>
        <trans-unit id="3db4fce387c01b326d3e15a975e8b04f8af06c7c" translate="yes" xml:space="preserve">
          <source>Constant folded version of &lt;code&gt;e&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; 的恒定折叠版本</target>
        </trans-unit>
        <trans-unit id="9c1d160235265d86d921f707d3ce59f58aed4954" translate="yes" xml:space="preserve">
          <source>Constant folding, with support for CTFE Return true if non-pointer expression e can be compared with &amp;gt;,is, ==, etc, using ctfeCmp, ctfeEqual, ctfeIdentity</source>
          <target state="translated">常量折叠，支持CTFE如果使用ctfeCmp，ctfeEqual，ctfeIdentity将非指针表达式e与&amp;gt;，is，==等进行比较，则返回true</target>
        </trans-unit>
        <trans-unit id="0f386d7e7881b32fa39cb7b62bdb15c0f3a4c0e1" translate="yes" xml:space="preserve">
          <source>Constants</source>
          <target state="translated">Constants</target>
        </trans-unit>
        <trans-unit id="f7d639ba9c48f5467c4d1a8f0152a2dc90222051" translate="yes" xml:space="preserve">
          <source>Constants Defining Special Destructor Behavior</source>
          <target state="translated">定义特殊破坏者行为的常量。</target>
        </trans-unit>
        <trans-unit id="cdd87b7907fb17673e884c148848c9c5e93b59ca" translate="yes" xml:space="preserve">
          <source>Constraint</source>
          <target state="translated">Constraint</target>
        </trans-unit>
        <trans-unit id="52e68a873a2be3470675b9ee933b98d781ae7fef" translate="yes" xml:space="preserve">
          <source>Constraints</source>
          <target state="translated">Constraints</target>
        </trans-unit>
        <trans-unit id="cd7dc62d6119143cd2fd7c7185b12b70cf0749f3" translate="yes" xml:space="preserve">
          <source>Construct 256 character translation table, where characters in from[] are replaced by corresponding characters in to[].</source>
          <target state="translated">构造256个字符翻译表,其中from[]中的字符被to[]中的对应字符所取代。</target>
        </trans-unit>
        <trans-unit id="5de02eef75a505103dd6a73f454b30bd0638b7c9" translate="yes" xml:space="preserve">
          <source>Construct a &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; from a ISO time string</source>
          <target state="translated">根据ISO时间字符串构造&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cef526ef10de16815aa0c9df0e5fee07dd4e2470" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;BigInt&lt;/code&gt; from a built-in integral type.</source>
          <target state="translated">从内置整数类型构造一个 &lt;code&gt;BigInt&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d5b5175be9d000ff28745ca7b47dfab50bb5237b" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;BigInt&lt;/code&gt; from a decimal or hexadecimal string. The number must be in the form of a decimal or hex literal. It may have a leading &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; sign, followed by &lt;code&gt;0x&lt;/code&gt; or &lt;code&gt;0X&lt;/code&gt; if hexadecimal. Underscores are permitted in any location after the &lt;code&gt;0x&lt;/code&gt; and/or the sign of the number.</source>
          <target state="translated">从十进制或十六进制字符串构造一个 &lt;code&gt;BigInt&lt;/code&gt; 。该数字必须为十进制或十六进制文字形式。它可能以 &lt;code&gt;+&lt;/code&gt; 或 &lt;code&gt;-&lt;/code&gt; &lt;code&gt;0x&lt;/code&gt; ，如果是十六进制，则后跟0x或 &lt;code&gt;0X&lt;/code&gt; 。在 &lt;code&gt;0x&lt;/code&gt; 和/或数字符号后的任何位置都可以使用下划线。</target>
        </trans-unit>
        <trans-unit id="0f8a2a29c0df9993c9fe72f3dbc60846c4494239" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;BigInt&lt;/code&gt; from a sign and a magnitude.</source>
          <target state="translated">根据符号和大小构造一个 &lt;code&gt;BigInt&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d7c3b4548cf75fac0de21ecc52fb10d3606eec5" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;BigInt&lt;/code&gt; from another &lt;code&gt;BigInt&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;BigInt&lt;/code&gt; 有从另一个 &lt;code&gt;BigInt&lt;/code&gt; 有。</target>
        </trans-unit>
        <trans-unit id="7efa1a6ab14f5ccd00f6c0c9a24eba2121df8bda" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;CompoundStatement&lt;/code&gt; from an array of &lt;code&gt;Statement&lt;/code&gt;s</source>
          <target state="translated">构建 &lt;code&gt;CompoundStatement&lt;/code&gt; 从阵列 &lt;code&gt;Statement&lt;/code&gt; 小号</target>
        </trans-unit>
        <trans-unit id="29b364a0138bce0f5c44e30e508e17d93f7c05ed" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;CompoundStatement&lt;/code&gt; using an already existing array of &lt;code&gt;Statement&lt;/code&gt;s</source>
          <target state="translated">构建 &lt;code&gt;CompoundStatement&lt;/code&gt; 使用已经存在的阵列 &lt;code&gt;Statement&lt;/code&gt; 小号</target>
        </trans-unit>
        <trans-unit id="c4a6c4a823793d5f65499787e95138d6100b624f" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;Decoder&lt;/code&gt; that iterates over the decoding of the given Base64 encoded data.</source>
          <target state="translated">构造一个 &lt;code&gt;Decoder&lt;/code&gt; ，对给定的Base64编码数据的解码进行迭代。</target>
        </trans-unit>
        <trans-unit id="edbcd15b10b6211f79e2728db1542060e841dc30" translate="yes" xml:space="preserve">
          <source>Construct a BitRange.</source>
          <target state="translated">构造一个BitRange。</target>
        </trans-unit>
        <trans-unit id="4e5951f021a460e25ffeab1777192f63d5dcad38" translate="yes" xml:space="preserve">
          <source>Construct a Processing Instruction section</source>
          <target state="translated">构建一个处理指令部分</target>
        </trans-unit>
        <trans-unit id="1f8c7657f3358e4444599716fc5a5104fadd594b" translate="yes" xml:space="preserve">
          <source>Construct a UUID struct from the 16 byte representation of a UUID.</source>
          <target state="translated">从UUID的16个字节表示中构建一个UUID结构。</target>
        </trans-unit>
        <trans-unit id="16a3dc0d5228e43b22556eb8ffea43940ae8f1b3" translate="yes" xml:space="preserve">
          <source>Construct a UUID struct from the 16 byte representation of a UUID. Variadic constructor to allow a simpler syntax, see examples. You need to pass exactly 16 ubytes.</source>
          <target state="translated">从UUID的16个字节表示中构建一个UUID结构。变量构造函数允许更简单的语法,参见示例。你需要准确地传递16个ubytes。</target>
        </trans-unit>
        <trans-unit id="23141c0f7e0d7ab9526562ff979c5df531f9e26b" translate="yes" xml:space="preserve">
          <source>Construct a character data section</source>
          <target state="translated">构建字符数据部分</target>
        </trans-unit>
        <trans-unit id="e7a49314abea8219c1157b1b3da7ac10cc878066" translate="yes" xml:space="preserve">
          <source>Construct a comment</source>
          <target state="translated">构建一个评论</target>
        </trans-unit>
        <trans-unit id="a2c71e5e027279ee45a7931fee354af43aa8085a" translate="yes" xml:space="preserve">
          <source>Construct a complex number with the specified real and imaginary parts. In the case where a single argument is passed that is not complex, the imaginary part of the result will be zero.</source>
          <target state="translated">用指定的实部和虚部构造一个复数。如果传递了一个非复数的参数,结果的虚数部分将为零。</target>
        </trans-unit>
        <trans-unit id="1f1465ea8ff9842efb9f4fb5533375eb53710f4b" translate="yes" xml:space="preserve">
          <source>Construct a new &lt;code&gt;FormatSpec&lt;/code&gt; using the format string &lt;code&gt;fmt&lt;/code&gt;, no processing is done until needed.</source>
          <target state="translated">使用格式字符串 &lt;code&gt;fmt&lt;/code&gt; 构造一个新的 &lt;code&gt;FormatSpec&lt;/code&gt; ，直到需要时才进行处理。</target>
        </trans-unit>
        <trans-unit id="7b338b11da2dffa6fdc8f6e1cebf5a1fc9737f7a" translate="yes" xml:space="preserve">
          <source>Construct a new &lt;code&gt;Internet6Address&lt;/code&gt;.</source>
          <target state="translated">构造一个新的 &lt;code&gt;Internet6Address&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d79b3621c7911196f6ede8afe742e5c8ec1d706" translate="yes" xml:space="preserve">
          <source>Construct a new &lt;code&gt;InternetAddress&lt;/code&gt;.</source>
          <target state="translated">构造一个新的 &lt;code&gt;InternetAddress&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a7538127e5f1404acba2c44fa3de190633fd2308" translate="yes" xml:space="preserve">
          <source>Construct a new &lt;code&gt;UnixAddress&lt;/code&gt; from the specified path.</source>
          <target state="translated">从指定路径构造一个新的 &lt;code&gt;UnixAddress&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd446bfae9180e30b1daa43c407ceb3fdf970415" translate="yes" xml:space="preserve">
          <source>Construct a new &lt;code&gt;UnixAddress&lt;/code&gt;.</source>
          <target state="translated">构造一个新的 &lt;code&gt;UnixAddress&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1bdec3f526944ac27208976a2f90415d2bb71451" translate="yes" xml:space="preserve">
          <source>Construct a new string from &lt;code&gt;input&lt;/code&gt; by replacing all of the fragments that match a pattern &lt;code&gt;re&lt;/code&gt; with a string generated from the match according to the &lt;code&gt;format&lt;/code&gt; specifier.</source>
          <target state="translated">根据 &lt;code&gt;format&lt;/code&gt; 说明符，用匹配项生成的字符串替换所有与模式 &lt;code&gt;re&lt;/code&gt; 匹配的片段，从 &lt;code&gt;input&lt;/code&gt; 构造一个新字符串。</target>
        </trans-unit>
        <trans-unit id="70db60e9276b0769769d7bc219186f785f9656d7" translate="yes" xml:space="preserve">
          <source>Construct a new string from &lt;code&gt;input&lt;/code&gt; by replacing the first match with a string generated from it according to the &lt;code&gt;format&lt;/code&gt; specifier.</source>
          <target state="translated">根据 &lt;code&gt;format&lt;/code&gt; 说明符，将 &lt;code&gt;input&lt;/code&gt; 的第一个匹配项替换为从输入项生成的字符串，从输入中构造一个新字符串。</target>
        </trans-unit>
        <trans-unit id="3cf2215c38ab2484cd95c1a3f8d7e5ea5d6e5d89" translate="yes" xml:space="preserve">
          <source>Construct a range iterating over an associative array by key/value tuples.</source>
          <target state="translated">通过键/值元组对关联数组进行迭代,构建一个范围。</target>
        </trans-unit>
        <trans-unit id="e49b6c0e84de21ca12a39e319d7d0f1c33c4e83a" translate="yes" xml:space="preserve">
          <source>Construct a set from a forward range of code point intervals.</source>
          <target state="translated">从一个正向的码点区间范围构造一个集合。</target>
        </trans-unit>
        <trans-unit id="7ce8cada6e1ecb8296e6778664e7e54197cd4560" translate="yes" xml:space="preserve">
          <source>Construct a set from plain values of code point intervals.</source>
          <target state="translated">从代码点区间的朴素值构造一个集合。</target>
        </trans-unit>
        <trans-unit id="f66ee7eaa1f920dff7ccd0302783f06c78ac43a1" translate="yes" xml:space="preserve">
          <source>Construct a specific point in time in the UTC timezone and add two days.</source>
          <target state="translated">在UTC时区构建一个特定的时间点,并增加两天。</target>
        </trans-unit>
        <trans-unit id="d5725c80a7627176eef25dd37fe82818e437ca5c" translate="yes" xml:space="preserve">
          <source>Construct a specific point in time without timezone information and get its ISO string.</source>
          <target state="translated">构建一个不含时区信息的特定时间点,并获取其ISO字符串。</target>
        </trans-unit>
        <trans-unit id="394f0b49b16c495da3d93936f500ab9712ce9376" translate="yes" xml:space="preserve">
          <source>Construct a ternary value from another ternary value</source>
          <target state="translated">从另一个三元值构造一个三元值。</target>
        </trans-unit>
        <trans-unit id="0e61b23e18fedae64c5d35d65cf20fb2f2d67df8" translate="yes" xml:space="preserve">
          <source>Construct a text (aka PCData) section</source>
          <target state="translated">构造一个文本(又称PCData)部分。</target>
        </trans-unit>
        <trans-unit id="84da9edb06d68da916babe0161ac2b1d6a5d7665" translate="yes" xml:space="preserve">
          <source>Construct a variable from &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; and put it in the environment while saving the previous value of the environment variable into a global list so it can be restored later.</source>
          <target state="translated">根据 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;value&lt;/code&gt; 构造一个变量，然后将其放入环境中，同时将环境变量的先前值保存到全局列表中，以便以后进行还原。</target>
        </trans-unit>
        <trans-unit id="49fa16f74b39989050bae31ab6353db2926f9d36" translate="yes" xml:space="preserve">
          <source>Construct an &lt;code&gt;Encoder&lt;/code&gt; that iterates over the Base64 encoding of the given &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt;.</source>
          <target state="translated">构造一个对给定&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;的Base64编码进行迭代的 &lt;code&gt;Encoder&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa8c85542dd824e935b81b57a1863e6723f75cb5" translate="yes" xml:space="preserve">
          <source>Construct an XML Instruction section</source>
          <target state="translated">构造一个XML指令部分</target>
        </trans-unit>
        <trans-unit id="a194031f6ae934ce18b0c67914deaf21cac16ec1" translate="yes" xml:space="preserve">
          <source>Construct an archive out of the current members of the archive.</source>
          <target state="translated">用档案馆的现有成员构建一个档案馆。</target>
        </trans-unit>
        <trans-unit id="d5c166b2ff50eb5ec5eec43caf2eb44127f34619" translate="yes" xml:space="preserve">
          <source>Construct an associative array consisting of all abbreviations that uniquely map to the strings in values.</source>
          <target state="translated">构造一个关联数组,该数组由所有唯一映射到值中字符串的缩写组成。</target>
        </trans-unit>
        <trans-unit id="5cf702deece5ed2b82278e20dc28296a3a195348" translate="yes" xml:space="preserve">
          <source>Construct an associative array of type ti from keys and value</source>
          <target state="translated">从键和值构造一个ti类型的关联数组。</target>
        </trans-unit>
        <trans-unit id="e75af0c6e150db4d6b4dec02927806bba690aec9" translate="yes" xml:space="preserve">
          <source>Construct an identifier from a D slice</source>
          <target state="translated">从D片构建一个标识符。</target>
        </trans-unit>
        <trans-unit id="80d4446ef4560aaedf6b918f5799b1c445900184" translate="yes" xml:space="preserve">
          <source>Construct and assign from a &lt;code&gt;bool&lt;/code&gt;, receiving &lt;code&gt;no&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;yes&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">构建并分配从 &lt;code&gt;bool&lt;/code&gt; ，接收 &lt;code&gt;no&lt;/code&gt; 进行 &lt;code&gt;false&lt;/code&gt; 和 &lt;code&gt;yes&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="647783f6e0c996a537f44ec3b423196a31d77d95" translate="yes" xml:space="preserve">
          <source>Construct and manipulate template argument lists (aka type lists).</source>
          <target state="translated">构造和操作模板参数列表(也就是类型列表)。</target>
        </trans-unit>
        <trans-unit id="b7a26e15daa59c5841cd23ead59280c64ffa4247" translate="yes" xml:space="preserve">
          <source>Construct elem to run when an array bounds check fails.</source>
          <target state="translated">当数组边界检查失败时,构造elem来运行。</target>
        </trans-unit>
        <trans-unit id="6de53d9bc658052402833a77bcc70a7c52e05729" translate="yes" xml:space="preserve">
          <source>Construct from another code point set of any type.</source>
          <target state="translated">从另一个任意类型的代码点集构建。</target>
        </trans-unit>
        <trans-unit id="195707e72a012ddb97f51ce7407e70d2a55623c4" translate="yes" xml:space="preserve">
          <source>Construct new, useful general purpose types.</source>
          <target state="translated">构建新的、有用的通用类型。</target>
        </trans-unit>
        <trans-unit id="82ce738c4d85678079ef40a05612ba2651226474" translate="yes" xml:space="preserve">
          <source>Construct the array operation expression, call object.arrayOp!(tiargs)(args). Encode operand types and operations into tiargs using reverse polish notation (RPN) to preserve precedence. Unary operations are prefixed with &quot;u&quot; (e.g. &quot;u~&quot;). Pass operand values (slices or scalars) as args.</source>
          <target state="translated">构造数组操作表达式,调用 object.arrayOp!(tiargs)(args)。使用反向抛光符号(RPN)将操作数类型和操作编码到tiargs中,以保留优先级。单元操作以 &quot;u &quot;为前缀 (例如 &quot;u~&quot;)。将操作数值(片或标量)作为 args 传递。</target>
        </trans-unit>
        <trans-unit id="d9a4b38839617151d36e6f6d557c6634ed7c22c1" translate="yes" xml:space="preserve">
          <source>Construct the entire contents of the current members of the archive.</source>
          <target state="translated">构建当前档案成员的全部内容。</target>
        </trans-unit>
        <trans-unit id="2f3ec07075420c87a074dd94b630d897ff817037" translate="yes" xml:space="preserve">
          <source>Construct. destbufsize is the same as for D.zlib.uncompress().</source>
          <target state="translated">构造。destbufsize与D.zlib.uncompress()相同。</target>
        </trans-unit>
        <trans-unit id="1cba1d6a444e0426f16ee3f9f52dcc2b14b8af47" translate="yes" xml:space="preserve">
          <source>Constructed ArrayLiteralExp</source>
          <target state="translated">构造的ArrayLiteralExp</target>
        </trans-unit>
        <trans-unit id="da33e1b7e0c4eae1911ee4a15280f0990e1a6115" translate="yes" xml:space="preserve">
          <source>Construction</source>
          <target state="translated">Construction</target>
        </trans-unit>
        <trans-unit id="a3fe9a9b809ec5725205d76e7f854c1241a03e33" translate="yes" xml:space="preserve">
          <source>Construction and Reference Semantics</source>
          <target state="translated">构造和参考语义</target>
        </trans-unit>
        <trans-unit id="976162fa882990e03c8dd184b0b58a781b3a0c3b" translate="yes" xml:space="preserve">
          <source>Construction from an input and an index.</source>
          <target state="translated">由一个输入和一个索引构建。</target>
        </trans-unit>
        <trans-unit id="2186eebe242de29328a263df29ae1111232f2644" translate="yes" xml:space="preserve">
          <source>Construction from an input.</source>
          <target state="translated">从投入中构建。</target>
        </trans-unit>
        <trans-unit id="b811fc2a657ea4e942e1143cd08736916b4217a0" translate="yes" xml:space="preserve">
          <source>Construction of lookup tables</source>
          <target state="translated">构建查询表</target>
        </trans-unit>
        <trans-unit id="6dd3a5d9a969f9c6c6072358abb68461c1de1b22" translate="yes" xml:space="preserve">
          <source>Construction or Assignment on Setting AA Entries</source>
          <target state="translated">设置AA条目的构造或任务</target>
        </trans-unit>
        <trans-unit id="d3516ef4fcc0fefa8ef460409910d17c762a3e6c" translate="yes" xml:space="preserve">
          <source>Constructor Attributes</source>
          <target state="translated">构造函数属性</target>
        </trans-unit>
        <trans-unit id="a494a02b46c9d078348d4b43daaa23777792b7f5" translate="yes" xml:space="preserve">
          <source>Constructor argument for default construction</source>
          <target state="translated">默认构造的构造函数参数</target>
        </trans-unit>
        <trans-unit id="054ab73cf0d9f14ed49f82c4cff717124d2a513c" translate="yes" xml:space="preserve">
          <source>Constructor binding &lt;code&gt;this&lt;/code&gt; to &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">构造函数 &lt;code&gt;this&lt;/code&gt; 绑定到 &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7aca37d11a5dad62fa7753ebd2d62be1dbbcf19" translate="yes" xml:space="preserve">
          <source>Constructor for &lt;code&gt;JSONValue&lt;/code&gt;. If &lt;code&gt;arg&lt;/code&gt; is a &lt;code&gt;JSONValue&lt;/code&gt; its value and type will be copied to the new &lt;code&gt;JSONValue&lt;/code&gt;. Note that this is a shallow copy: if type is &lt;code&gt;JSONType.object&lt;/code&gt; or &lt;code&gt;JSONType.array&lt;/code&gt; then only the reference to the data will be copied. Otherwise, &lt;code&gt;arg&lt;/code&gt; must be implicitly convertible to one of the following types: &lt;code&gt;typeof(null)&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;ulong&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, an associative array &lt;code&gt;V[K]&lt;/code&gt; for any &lt;code&gt;V&lt;/code&gt; and &lt;code&gt;K&lt;/code&gt; i.e. a JSON object, any array or &lt;code&gt;bool&lt;/code&gt;. The type will be set accordingly.</source>
          <target state="translated">&lt;code&gt;JSONValue&lt;/code&gt; 的构造方法。如果 &lt;code&gt;arg&lt;/code&gt; 是 &lt;code&gt;JSONValue&lt;/code&gt; ,则其值和类型将被复制到新的 &lt;code&gt;JSONValue&lt;/code&gt; 。请注意，这是一个浅表副本：如果type为 &lt;code&gt;JSONType.object&lt;/code&gt; 或 &lt;code&gt;JSONType.array&lt;/code&gt; ,则仅复制对数据的引用。否则， &lt;code&gt;arg&lt;/code&gt; 必须隐式转换为以下类型之一： &lt;code&gt;typeof(null)&lt;/code&gt; ， &lt;code&gt;string&lt;/code&gt; ， &lt;code&gt;ulong&lt;/code&gt; ， &lt;code&gt;long&lt;/code&gt; ， &lt;code&gt;double&lt;/code&gt; ，任何 &lt;code&gt;V&lt;/code&gt; 和 &lt;code&gt;K&lt;/code&gt; 的关联数组 &lt;code&gt;V[K]&lt;/code&gt; ，即JSON对象，任何数组或 &lt;code&gt;bool&lt;/code&gt; 。类型将进行相应设置。</target>
        </trans-unit>
        <trans-unit id="958db728358d20353a09b0ce14e29f648fa7b9b6" translate="yes" xml:space="preserve">
          <source>Constructor initializing &lt;code&gt;this&lt;/code&gt; with &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">构造函数初始化 &lt;code&gt;this&lt;/code&gt; 与 &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0367f2949e838dbf344d79ca0be183c08f50ddea" translate="yes" xml:space="preserve">
          <source>Constructor taking a compatible &lt;code&gt;Tuple&lt;/code&gt;. Two &lt;code&gt;Tuple&lt;/code&gt;s are compatible &lt;b&gt;iff&lt;/b&gt; they are both of the same length, and, for each type &lt;code&gt;T&lt;/code&gt; on the left-hand side, the corresponding type &lt;code&gt;U&lt;/code&gt; on the right-hand side can implicitly convert to &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">构造函数采用兼容的 &lt;code&gt;Tuple&lt;/code&gt; 。两个 &lt;code&gt;Tuple&lt;/code&gt; s为兼容&lt;b&gt;当且仅当&lt;/b&gt;它们都具有相同的长度，并且，对于每个类型 &lt;code&gt;T&lt;/code&gt; 在左手侧，相应的类型 &lt;code&gt;U&lt;/code&gt; 在右手侧可以隐式转换为 &lt;code&gt;T&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82fb824d4d5cc73ecbddf2d369c8b6d494d4005e" translate="yes" xml:space="preserve">
          <source>Constructor taking a compatible array.</source>
          <target state="translated">构造函数取一个兼容数组。</target>
        </trans-unit>
        <trans-unit id="337303cb1c4142f79bb21427c7834170cf217748" translate="yes" xml:space="preserve">
          <source>Constructor taking a number of items.</source>
          <target state="translated">构造者取若干项目。</target>
        </trans-unit>
        <trans-unit id="312dcee2fedfca8db731097219798f4fda057356" translate="yes" xml:space="preserve">
          <source>Constructor taking a number of nodes</source>
          <target state="translated">构造函数取多个节点</target>
        </trans-unit>
        <trans-unit id="39aa104961235c81ea7ce5789ee56792a20446f0" translate="yes" xml:space="preserve">
          <source>Constructor taking a value properly convertible to the underlying type. &lt;code&gt;U&lt;/code&gt; may be either an integral that can be converted to &lt;code&gt;T&lt;/code&gt; without a loss, or another &lt;code&gt;Checked&lt;/code&gt; instance whose representation may be in turn converted to &lt;code&gt;T&lt;/code&gt; without a loss.</source>
          <target state="translated">构造函数采用可以正确转换为基础类型的值。 &lt;code&gt;U&lt;/code&gt; 可以是可以无损转换为 &lt;code&gt;T&lt;/code&gt; 的整数，也可以是另一个 &lt;code&gt;Checked&lt;/code&gt; 实例，其表示形式可以依次无损转换为 &lt;code&gt;T&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7462d0e28326868b6e970d116a087457bc47647" translate="yes" xml:space="preserve">
          <source>Constructor taking an &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt;</source>
          <target state="translated">构造函数&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="028ef1ffceb1a8e2f931182078782ecd73909dff" translate="yes" xml:space="preserve">
          <source>Constructor taking one value for each field.</source>
          <target state="translated">每个字段取一个值的构造函数。</target>
        </trans-unit>
        <trans-unit id="ec87cd71d0c30421b4e1bbb4504a346899fd1803" translate="yes" xml:space="preserve">
          <source>Constructor taking the name of the file to open and the open mode.</source>
          <target state="translated">构造函数,取要打开的文件名和打开模式。</target>
        </trans-unit>
        <trans-unit id="2b736db750e5b8588933a2cab677f5fbd588db97" translate="yes" xml:space="preserve">
          <source>Constructor taking the url as parameter.</source>
          <target state="translated">以url为参数的构造函数。</target>
        </trans-unit>
        <trans-unit id="2f815f9d325af38009f8487671b992fc3b8edee2" translate="yes" xml:space="preserve">
          <source>Constructor that initializes the payload.</source>
          <target state="translated">初始化有效载荷的构造函数。</target>
        </trans-unit>
        <trans-unit id="016997051201ccc98c813dcc7c39a587d61ab8c6" translate="yes" xml:space="preserve">
          <source>Constructor that takes a &lt;code&gt;Unique&lt;/code&gt; of a type that is convertible to our type.</source>
          <target state="translated">采用 &lt;code&gt;Unique&lt;/code&gt; 类型的构造函数，该类型可以转换为我们的类型。</target>
        </trans-unit>
        <trans-unit id="0b1f1dc0db9cef3da3b4be09aee734bc80e7d08c" translate="yes" xml:space="preserve">
          <source>Constructor that takes an lvalue. It nulls its source. The nulling will ensure uniqueness as long as there are no previous aliases to the source.</source>
          <target state="translated">构造函数,接收一个l值。它将其源值归零。只要之前没有对源的别名,空值将确保唯一性。</target>
        </trans-unit>
        <trans-unit id="6d0b20d8fc18f15a14377620be1f3f6c18b63a08" translate="yes" xml:space="preserve">
          <source>Constructor that takes an rvalue. It will ensure uniqueness, as long as the rvalue isn't just a view on an lvalue (e.g., a cast). Typical usage:</source>
          <target state="translated">构造函数,它接收一个rvalue.它将确保唯一性,只要rvalue不只是一个lvalue的视图(例如,一个cast)。只要rvalue不是一个lvalue的视图(例如,一个cast),它就能确保唯一性。典型用法。</target>
        </trans-unit>
        <trans-unit id="05f636b7912d58ac3b449cb36c994c98a7238361" translate="yes" xml:space="preserve">
          <source>Constructor to use when creating a new archive.</source>
          <target state="translated">创建新档案时使用的构造函数。</target>
        </trans-unit>
        <trans-unit id="7c1ac12e45facf352f3efe44eb326d743f2088a0" translate="yes" xml:space="preserve">
          <source>Constructor to use when reading an existing archive.</source>
          <target state="translated">读取现有存档时使用的构造函数。</target>
        </trans-unit>
        <trans-unit id="48b7f1869a1fb50e06c68f08a76aa0238231d852" translate="yes" xml:space="preserve">
          <source>Constructor which takes an error message and error code.</source>
          <target state="translated">构造函数,接收错误信息和错误代码。</target>
        </trans-unit>
        <trans-unit id="28237bb656117133502ebdcbb4cc87ee22fad07c" translate="yes" xml:space="preserve">
          <source>Constructor which takes an error message.</source>
          <target state="translated">构造函数,接收错误信息。</target>
        </trans-unit>
        <trans-unit id="4c0e6f93d76eef0a5ad9b6d7bb2bad4c3b17cd12" translate="yes" xml:space="preserve">
          <source>Constructor which takes an error message. The current global &lt;a href=&quot;core_stdc_errno#errno&quot;&gt;&lt;code&gt;core.stdc.errno.errno&lt;/code&gt;&lt;/a&gt; value is used as error code.</source>
          <target state="translated">接受错误消息的构造方法。当前的全局&lt;a href=&quot;core_stdc_errno#errno&quot;&gt; &lt;code&gt;core.stdc.errno.errno&lt;/code&gt; &lt;/a&gt;值用作错误代码。</target>
        </trans-unit>
        <trans-unit id="28ff53758848e03bffa7a7a1c38781a50d47e14d" translate="yes" xml:space="preserve">
          <source>Constructor which takes the error number (&lt;a href=&quot;https://google.com/search?btnI=I%27m+Feeling+Lucky&amp;amp;ie=UTF-8&amp;amp;oe=UTF-8&amp;amp;q=GetLastError&quot;&gt;GetLastError&lt;/a&gt; in Windows, errno in POSIX).</source>
          <target state="translated">构造方法，它采用错误编号（Windows中为&lt;a href=&quot;https://google.com/search?btnI=I%27m+Feeling+Lucky&amp;amp;ie=UTF-8&amp;amp;oe=UTF-8&amp;amp;q=GetLastError&quot;&gt;GetLastError&lt;/a&gt;，POSIX中为errno）。</target>
        </trans-unit>
        <trans-unit id="4d4ae6f60e2d60a48fe329503bd32951d4cbc36d" translate="yes" xml:space="preserve">
          <source>Constructor which takes the error number (&lt;a href=&quot;https://google.com/search?btnI=I%27m+Feeling+Lucky&amp;amp;ie=UTF-8&amp;amp;oe=UTF-8&amp;amp;q=GetLastError&quot;&gt;GetLastError&lt;/a&gt; in Windows, errno in Posix).</source>
          <target state="translated">构造函数，它采用错误编号（Windows中为&lt;a href=&quot;https://google.com/search?btnI=I%27m+Feeling+Lucky&amp;amp;ie=UTF-8&amp;amp;oe=UTF-8&amp;amp;q=GetLastError&quot;&gt;GetLastError&lt;/a&gt;，Posix中为errno）。</target>
        </trans-unit>
        <trans-unit id="ba2200976ccedc895aa8714dc1e6fb4e9038e5f4" translate="yes" xml:space="preserve">
          <source>Constructor.</source>
          <target state="translated">Constructor.</target>
        </trans-unit>
        <trans-unit id="fb6b24775698549efb7aa5531d3b2988935f90f6" translate="yes" xml:space="preserve">
          <source>Constructor. Pass in a range of elements to initialize the tree with.</source>
          <target state="translated">构造函数。传入一个元素范围来初始化树。</target>
        </trans-unit>
        <trans-unit id="1a178df59f99c60619523cc28c3159353aae12d6" translate="yes" xml:space="preserve">
          <source>Constructor. Pass in an array of elements, or individual elements to initialize the tree with.</source>
          <target state="translated">构造函数。传入一个元素数组或单个元素来初始化树。</target>
        </trans-unit>
        <trans-unit id="60a5c966a71a24034f9238685790a526710ef75d" translate="yes" xml:space="preserve">
          <source>Constructors</source>
          <target state="translated">Constructors</target>
        </trans-unit>
        <trans-unit id="807d66814f4ba4f921c1396af90944a155259be3" translate="yes" xml:space="preserve">
          <source>Constructors accepting desired capacity or a preallocated buffer, similar in semantics to those of &lt;code&gt;BitmappedBlock&lt;/code&gt;.</source>
          <target state="translated">构造函数接受所需的容量或预分配的缓冲区，其语义与 &lt;code&gt;BitmappedBlock&lt;/code&gt; 相似。</target>
        </trans-unit>
        <trans-unit id="4225d3cb91899353150e813e7d2d79a3a8782065" translate="yes" xml:space="preserve">
          <source>Constructors are defined with a function name of &lt;code&gt;this&lt;/code&gt; and have no return value. The grammar is the same as for the class &lt;a href=&quot;class#Constructor&quot;&gt;&lt;i&gt;Constructor&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">构造函数使用 &lt;code&gt;this&lt;/code&gt; 函数名称定义，并且没有返回值。语法与类&lt;a href=&quot;class#Constructor&quot;&gt;&lt;i&gt;Constructor&lt;/i&gt;&lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="1d34dd8f0324fd045374d49c9c3d54d188eaf093" translate="yes" xml:space="preserve">
          <source>Constructors are defined with a function name of &lt;code&gt;this&lt;/code&gt; and have no return value:</source>
          <target state="translated">构造函数使用 &lt;code&gt;this&lt;/code&gt; 函数名称定义，并且没有返回值：</target>
        </trans-unit>
        <trans-unit id="16754c38fa1206780e385874d1438ae4c6a8b8c6" translate="yes" xml:space="preserve">
          <source>Constructors are defined with a function name of &lt;code&gt;this&lt;/code&gt; and having no return value. The grammar is the same as for the class &lt;a href=&quot;class#Constructor&quot;&gt;&lt;i&gt;Constructor&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">构造函数使用 &lt;code&gt;this&lt;/code&gt; 函数名定义且没有返回值。语法与类&lt;a href=&quot;class#Constructor&quot;&gt;&lt;i&gt;Constructor&lt;/i&gt;&lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="c2e6c63b9009979683923270fe7969b7aa741e91" translate="yes" xml:space="preserve">
          <source>Constructors are defined with a function name of &lt;code&gt;this&lt;/code&gt; and having no return value:</source>
          <target state="translated">构造函数使用 &lt;code&gt;this&lt;/code&gt; 函数名定义且没有返回值：</target>
        </trans-unit>
        <trans-unit id="fc2ab456b803f2a781f337931bdcedefaed757d1" translate="yes" xml:space="preserve">
          <source>Constructors can be overloaded with different attributes.</source>
          <target state="translated">构造函数可以重载不同的属性。</target>
        </trans-unit>
        <trans-unit id="3aa2beb6e3d0ab0cb39859e1839af45b65f842fd" translate="yes" xml:space="preserve">
          <source>Constructors can call other constructors for the same class in order to share common initializations (this is called a delegating constructor):</source>
          <target state="translated">构造函数可以调用同一类的其他构造函数,以共享共同的初始化(这称为委托构造函数)。</target>
        </trans-unit>
        <trans-unit id="3f4fc5393e597a57538cf4de6d5462b225d2d51e" translate="yes" xml:space="preserve">
          <source>Constructors can call other constructors for the same struct in order to share common initializations (this is called a &lt;a href=&quot;class#delegating-constructors&quot;&gt;delegating constructor&lt;/a&gt;):</source>
          <target state="translated">构造函数可以为同一结构调用其他构造函数，以共享常见的初始化（这称为&lt;a href=&quot;class#delegating-constructors&quot;&gt;委托构造函数&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="5417b6074f85a905aed32a156a099f6cc6ef82a9" translate="yes" xml:space="preserve">
          <source>Constructors can have one of these member function attributes: &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;immutable&lt;/code&gt;, and &lt;code&gt;shared&lt;/code&gt;. Construction of qualified objects will then be restricted to the implemented qualified constructors.</source>
          <target state="translated">构造函数可以具有以下成员函数属性之一： &lt;code&gt;const&lt;/code&gt; ， &lt;code&gt;immutable&lt;/code&gt; 和 &lt;code&gt;shared&lt;/code&gt; 。然后，合格对象的构造将仅限于已实现的合格构造函数。</target>
        </trans-unit>
        <trans-unit id="6224547e06b5379ad7844e2e3e6bdd01e198c7c9" translate="yes" xml:space="preserve">
          <source>Constructors return the this pointer in EAX.</source>
          <target state="translated">构造函数返回EAX中的this指针。</target>
        </trans-unit>
        <trans-unit id="e983ecc3235a082ac5ab3438cb35588e5913d548" translate="yes" xml:space="preserve">
          <source>Constructors setting up the memory structured as a free list.</source>
          <target state="translated">构造函数设置为自由列表结构的内存。</target>
        </trans-unit>
        <trans-unit id="917fbdc8fb87d3240ea5d269d2fec24c7e203ffc" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;a href=&quot;#Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt; object instantiated and initialized according to the given arguments.</source>
          <target state="translated">构造根据给定参数实例化和初始化的&lt;a href=&quot;#Tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="dad768a1d3c806574ce4ef1d6f17739935f5ef4b" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;DirEntry&lt;/code&gt; for the given file (or directory).</source>
          <target state="translated">为给定的文件（或目录）构造一个 &lt;code&gt;DirEntry&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a1f2cf92b74dfa870775ce13ac3caf1d9e122173" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;RefAppender&lt;/code&gt; with a given array reference. This does not copy the data. If the array has a larger capacity as determined by &lt;code&gt;arr.capacity&lt;/code&gt;, it will be used by the appender.</source>
          <target state="translated">使用给定的数组引用构造 &lt;code&gt;RefAppender&lt;/code&gt; 。这不会复制数据。如果数组具有较大的容量（由 &lt;code&gt;arr.capacity&lt;/code&gt; 确定），则将由附加程序使用。</target>
        </trans-unit>
        <trans-unit id="0a99c29487dadc182d8a3bda120934df206639c9" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;VariantN&lt;/code&gt; value given an argument of a generic type. Statically rejects disallowed types.</source>
          <target state="translated">给定泛型类型的参数，构造一个 &lt;code&gt;VariantN&lt;/code&gt; 值。静态拒绝不允许的类型。</target>
        </trans-unit>
        <trans-unit id="4bc5b4b671ae60c2f6de52fe65f7ef1b9d577caf" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;XorshiftEngine&lt;/code&gt; generator seeded with x0.</source>
          <target state="translated">构造一个以x0 &lt;code&gt;XorshiftEngine&lt;/code&gt; 种子的XorshiftEngine生成器。</target>
        </trans-unit>
        <trans-unit id="ecf8fa50fa09e85a50a7ee1d6d9cb5689198b305" translate="yes" xml:space="preserve">
          <source>Constructs a Document by parsing XML text.</source>
          <target state="translated">通过解析XML文本构建一个文档。</target>
        </trans-unit>
        <trans-unit id="142fbb3a4f3a407f93e0c16daba0bb5064ea4c6d" translate="yes" xml:space="preserve">
          <source>Constructs a Document from a Tag.</source>
          <target state="translated">从标签中构建一个文档。</target>
        </trans-unit>
        <trans-unit id="b95fdaa893c80a5c04bf4437cd4b6fdd348c04af" translate="yes" xml:space="preserve">
          <source>Constructs a DocumentParser.</source>
          <target state="translated">构造一个DocumentParser。</target>
        </trans-unit>
        <trans-unit id="f20472cfd83dc45168ff0eb4d99a68f4a6aafcdf" translate="yes" xml:space="preserve">
          <source>Constructs a LinearCongruentialEngine generator seeded with &lt;code&gt;x0&lt;/code&gt;.</source>
          <target state="translated">构造一个以 &lt;code&gt;x0&lt;/code&gt; 作为种子的LinearCongruentialEngine生成器。</target>
        </trans-unit>
        <trans-unit id="233b957299550b15a28e3548a091cca8b823bc0f" translate="yes" xml:space="preserve">
          <source>Constructs a MersenneTwisterEngine object.</source>
          <target state="translated">构造一个MersenneTwisterEngine对象。</target>
        </trans-unit>
        <trans-unit id="9f9db8efce8dd429db5938c30a8f172827296779" translate="yes" xml:space="preserve">
          <source>Constructs a StopWatch. Whether it starts immediately depends on the &lt;a href=&quot;#AutoStart&quot;&gt;&lt;code&gt;AutoStart&lt;/code&gt;&lt;/a&gt; argument.</source>
          <target state="translated">构造一个秒表。是否立即启动取决于&lt;a href=&quot;#AutoStart&quot;&gt; &lt;code&gt;AutoStart&lt;/code&gt; &lt;/a&gt;参数。</target>
        </trans-unit>
        <trans-unit id="00d1a29960b8444e123571c0597b354c35facc3d" translate="yes" xml:space="preserve">
          <source>Constructs a block allocator given a hunk of memory, or a desired capacity in bytes.</source>
          <target state="translated">构造一个块分配器,给定一个内存块或所需的字节容量。</target>
        </trans-unit>
        <trans-unit id="146e982316dbe394422d91958193b29e48ddcb91" translate="yes" xml:space="preserve">
          <source>Constructs a blocking IPv4 TCP Socket.</source>
          <target state="translated">构造一个阻塞的IPv4 TCP Socket。</target>
        </trans-unit>
        <trans-unit id="53247329cc6a51d22ab4698276b1f754d0339aaa" translate="yes" xml:space="preserve">
          <source>Constructs a blocking IPv4 UDP Socket.</source>
          <target state="translated">构造一个阻塞的IPv4 UDP Socket。</target>
        </trans-unit>
        <trans-unit id="f485ed96de3ac13b7303b9b65eca592e0443e023" translate="yes" xml:space="preserve">
          <source>Constructs a blocking TCP Socket and connects to an &lt;code&gt;Address&lt;/code&gt;.</source>
          <target state="translated">构造一个阻塞的TCP套接字并连接到 &lt;code&gt;Address&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="431478cfa4f05184c54f87ab32bb9c9692007e39" translate="yes" xml:space="preserve">
          <source>Constructs a blocking TCP Socket.</source>
          <target state="translated">构造一个阻塞的TCP Socket。</target>
        </trans-unit>
        <trans-unit id="d350c91652d7b9b0cd2159ce6cde3003102137a6" translate="yes" xml:space="preserve">
          <source>Constructs a blocking UDP Socket.</source>
          <target state="translated">构造一个阻塞的UDP Socket。</target>
        </trans-unit>
        <trans-unit id="17cdbaf765f763438b5c9e4f2e41158243f3b098" translate="yes" xml:space="preserve">
          <source>Constructs a complex number given its absolute value and argument.</source>
          <target state="translated">构造一个给定绝对值和参数的复数。</target>
        </trans-unit>
        <trans-unit id="6854fd227e337caa25e42f39155a6f82de1c1e18" translate="yes" xml:space="preserve">
          <source>Constructs a matcher object to classify &lt;a href=&quot;#Code%20point&quot;&gt;code points&lt;/a&gt; from the &lt;code&gt;set&lt;/code&gt; for encoding that has &lt;code&gt;Char&lt;/code&gt; as code unit.</source>
          <target state="translated">构造匹配器对象，以从 &lt;code&gt;Char&lt;/code&gt; &lt;code&gt;set&lt;/code&gt; 对以Char为代码单位的编码&lt;a href=&quot;#Code%20point&quot;&gt;点&lt;/a&gt;进行分类。</target>
        </trans-unit>
        <trans-unit id="ec9df545fbfee53dd90779724e7a812c8dc67a55" translate="yes" xml:space="preserve">
          <source>Constructs a message from the</source>
          <target state="translated">构建一个信息从</target>
        </trans-unit>
        <trans-unit id="ea8599b64b5ab10e1403a39d677d9d23280a9390" translate="yes" xml:space="preserve">
          <source>Constructs a new function or delegate type with the same basic signature as the given one, but different attributes (including linkage).</source>
          <target state="translated">构造一个新的函数或委托类型,其基本签名与给定的函数或委托类型相同,但属性不同(包括链接)。</target>
        </trans-unit>
        <trans-unit id="a007be1fb9fb1e9a3bb438949e90dfe8105d9f56" translate="yes" xml:space="preserve">
          <source>Constructs a region backed by a user-provided store. Assumes the memory was allocated with &lt;code&gt;ParentAllocator&lt;/code&gt; (if different from &lt;a href=&quot;std_experimental_allocator_building_blocks_null_allocator#NullAllocator&quot;&gt;&lt;code&gt;NullAllocator&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">构造一个由用户提供的商店支持的区域。假设内存与分配 &lt;code&gt;ParentAllocator&lt;/code&gt; （如果来自不同&lt;a href=&quot;std_experimental_allocator_building_blocks_null_allocator#NullAllocator&quot;&gt; &lt;code&gt;NullAllocator&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b06ce7a9e6471d4b389eadc615ef60d562d5d9b2" translate="yes" xml:space="preserve">
          <source>Constructs a static array from &lt;code&gt;a&lt;/code&gt;. The type of elements can be specified implicitly so that &lt;code&gt;[1, 2].staticArray&lt;/code&gt; results in &lt;code&gt;int[2]&lt;/code&gt;, or explicitly, e.g. &lt;code&gt;[1, 2].staticArray!float&lt;/code&gt; returns &lt;code&gt;float[2]&lt;/code&gt;. When &lt;code&gt;a&lt;/code&gt; is a range whose length is not known at compile time, the number of elements must be given as template argument (e.g. &lt;code&gt;myrange.staticArray!2&lt;/code&gt;). Size and type can be combined, if the source range elements are implicitly convertible to the requested element type (eg: &lt;code&gt;2.iota.staticArray!(long[2])&lt;/code&gt;). When the range &lt;code&gt;a&lt;/code&gt; is known at compile time, it can also be specified as a template argument to avoid having to specify the number of elements (e.g.: &lt;code&gt;staticArray!(2.iota)&lt;/code&gt; or &lt;code&gt;staticArray!(double, 2.iota)&lt;/code&gt;).</source>
          <target state="translated">构造从一个静态数组 &lt;code&gt;a&lt;/code&gt; 。可以隐式指定元素的类型，以便 &lt;code&gt;[1, 2].staticArray&lt;/code&gt; 产生 &lt;code&gt;int[2]&lt;/code&gt; ，或显式地，例如 &lt;code&gt;[1, 2].staticArray!float&lt;/code&gt; 返回 &lt;code&gt;float[2]&lt;/code&gt; 。当 &lt;code&gt;a&lt;/code&gt; 是在编译时长度未知的范围时，必须将元素的数目作为模板参数给出（例如 &lt;code&gt;myrange.staticArray!2&lt;/code&gt; ）。如果源范围元素可以隐式转换为请求的元素类型，则可以组合大小和类型（例如： &lt;code&gt;2.iota.staticArray!(long[2])&lt;/code&gt; ）。当范围 &lt;code&gt;a&lt;/code&gt; 在编译时是已知的，也可以将其指定为模板参数，以避免必须指定元素数（例如： &lt;code&gt;staticArray!(2.iota)&lt;/code&gt; 或 &lt;code&gt;staticArray!(double, 2.iota)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7781933a4887fd803519fc54f562055cd812781c" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;Address&lt;/code&gt; with a copy of the specified &lt;code&gt;sockaddr&lt;/code&gt;.</source>
          <target state="translated">构造一个具有指定 &lt;code&gt;sockaddr&lt;/code&gt; 副本的 &lt;code&gt;Address&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9aec993528ca9dc016d572af7cf82ee72630798f" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;Address&lt;/code&gt; with a reference to the specified &lt;code&gt;sockaddr&lt;/code&gt;.</source>
          <target state="translated">构造一个对指定 &lt;code&gt;sockaddr&lt;/code&gt; 的引用的 &lt;code&gt;Address&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9615b78e90ddc4141b1f50da180143f27c8af2f7" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;AllocatorList&lt;/code&gt; given a factory object. This constructor is defined only if &lt;code&gt;Factory&lt;/code&gt; has state.</source>
          <target state="translated">构造一个给定工厂对象的 &lt;code&gt;AllocatorList&lt;/code&gt; 。仅当 &lt;code&gt;Factory&lt;/code&gt; 具有状态时，才定义此构造函数。</target>
        </trans-unit>
        <trans-unit id="0bb58461416282d926d1b319755b4712d0bb7ef9" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;Appender&lt;/code&gt; with a given array. Note that this does not copy the data. If the array has a larger capacity as determined by &lt;code&gt;arr.capacity&lt;/code&gt;, it will be used by the appender. After initializing an appender on an array, appending to the original array will reallocate.</source>
          <target state="translated">使用给定的数组构造一个 &lt;code&gt;Appender&lt;/code&gt; 。请注意，这不会复制数据。如果数组具有较大的容量（由 &lt;code&gt;arr.capacity&lt;/code&gt; 确定），则将由附加程序使用。在数组上初始化附加程序后，附加到原始数组将重新分配。</target>
        </trans-unit>
        <trans-unit id="0a3c9e846d5ff280c1c43c0fc859906e5949020f" translate="yes" xml:space="preserve">
          <source>Constructs an Element from a Tag.</source>
          <target state="translated">从标签中构建一个元素。</target>
        </trans-unit>
        <trans-unit id="b04b95cb59989b1f3e6f81986bdbf5684b4e8e11" translate="yes" xml:space="preserve">
          <source>Constructs an Element given a name and a string to be used as a Text interior.</source>
          <target state="translated">构造一个给定名称和字符串的元素作为文本内部。</target>
        </trans-unit>
        <trans-unit id="7ef5c16305c0cacfff7b62667368f5395c44c8f0" translate="yes" xml:space="preserve">
          <source>Constructs an instance of Tag with a specified name and type</source>
          <target state="translated">构造一个具有指定名称和类型的Tag实例。</target>
        </trans-unit>
        <trans-unit id="0eb54bebdca75e4774fca8547e272f327c707365" translate="yes" xml:space="preserve">
          <source>Constructs an object given two ranges &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt; and a penalty &lt;code&gt;lambda&lt;/code&gt;. Constructor completes in &amp;Omicron;(&lt;code&gt;s.length * t.length&lt;/code&gt;) time and computes all matches of length 1.</source>
          <target state="translated">构造一个对象，给出两个范围 &lt;code&gt;s&lt;/code&gt; 和 &lt;code&gt;t&lt;/code&gt; 以及一个惩罚 &lt;code&gt;lambda&lt;/code&gt; 。构造函数以 &lt;code&gt;s.length * t.length&lt;/code&gt; （s.length * t.length）时间完成，并计算长度为1的所有匹配项。</target>
        </trans-unit>
        <trans-unit id="1c2e1b07aa0f19ca657a0f923e6620e04e17d896" translate="yes" xml:space="preserve">
          <source>Constructs the HMAC digest using the specified secret.</source>
          <target state="translated">使用指定的秘密构建HMAC摘要。</target>
        </trans-unit>
        <trans-unit id="3ac831e9f5e17e420e37b7e07bf6060ff89784d9" translate="yes" xml:space="preserve">
          <source>Container primitives</source>
          <target state="translated">容器基元</target>
        </trans-unit>
        <trans-unit id="cdcf8089bd1bb28d912fe327273fec402f37b4f0" translate="yes" xml:space="preserve">
          <source>Containers do not form a class hierarchy, instead they implement a common set of primitives (see table below). These primitives each guarantee a specific worst case complexity and thus allow generic code to be written independently of the container implementation.</source>
          <target state="translated">容器并不形成类的层次结构,而是实现了一组通用的基元(见下表)。这些基元每个都保证了特定的最坏情况下的复杂度,因此允许独立于容器实现来编写通用代码。</target>
        </trans-unit>
        <trans-unit id="3fc21d6c189ee8cb63a6e6aac085f59dcacbe434" translate="yes" xml:space="preserve">
          <source>Contains a memset implementation used by compiler-generated code.</source>
          <target state="translated">包含一个由编译器生成的代码使用的memset实现。</target>
        </trans-unit>
        <trans-unit id="7a6f3a1f434d86f30876a874a0b93c581c1c8b1e" translate="yes" xml:space="preserve">
          <source>Contains a registry for GC factories.</source>
          <target state="translated">包含一个GC工厂的注册表。</target>
        </trans-unit>
        <trans-unit id="e083cdb203f74feb48a6a33669824a6e66cb3369" translate="yes" xml:space="preserve">
          <source>Contains aggregate information about a block of managed memory. The purpose of this struct is to support a more efficient query style in instances where detailed information is needed.</source>
          <target state="translated">包含一个托管内存块的汇总信息。该结构的目的是在需要详细信息的情况下支持更高效的查询方式。</target>
        </trans-unit>
        <trans-unit id="29492764613b66bb03de8ad7679e7a717630eb80" translate="yes" xml:space="preserve">
          <source>Contains aggregated diagnostics information.</source>
          <target state="translated">包含汇总的诊断信息。</target>
        </trans-unit>
        <trans-unit id="273a7dc903587fcac7ec096b9861c3c1e1e83e38" translate="yes" xml:space="preserve">
          <source>Contains all available CLI &lt;a href=&quot;#Usage.Option&quot;&gt;&lt;code&gt;Usage.Option&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">包含所有可用的CLI &lt;a href=&quot;#Usage.Option&quot;&gt; &lt;code&gt;Usage.Option&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ca74771e8e4d50838a5d61dfe30a32ee401633a" translate="yes" xml:space="preserve">
          <source>Contains all data for a class declaration that is needed for the Objective-C integration.</source>
          <target state="translated">包含Objective-C集成所需的类声明的所有数据。</target>
        </trans-unit>
        <trans-unit id="5758660e7aee75739c576bec5bbbf585a0eeed56" translate="yes" xml:space="preserve">
          <source>Contains all text which occurs after the root element. Defaults to the empty string</source>
          <target state="translated">包含发生在根元素之后的所有文本。默认为空字符串</target>
        </trans-unit>
        <trans-unit id="d8783cd5f87b85b9067504dfc5f62c8eeef387c4" translate="yes" xml:space="preserve">
          <source>Contains all text which occurs before the root element. Defaults to &amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;</source>
          <target state="translated">包含出现在根元素之前的所有文本。默认为&amp;lt;？xml version =&amp;ldquo; 1.0&amp;rdquo;？&amp;gt;</target>
        </trans-unit>
        <trans-unit id="08c7edba7490157d52a2bebdf452e082ec47a85a" translate="yes" xml:space="preserve">
          <source>Contains druntime startup and shutdown routines.</source>
          <target state="translated">包含druntime启动和关闭例程。</target>
        </trans-unit>
        <trans-unit id="99a79c4c156e712bb397dee3eeb5c6eea6c0caf3" translate="yes" xml:space="preserve">
          <source>Contains implementations of functions called when the -profile=gc switch is thrown.</source>
          <target state="translated">包含当触发-profile=gc开关时调用的函数的实现。</target>
        </trans-unit>
        <trans-unit id="112d647b95fa2b2ab3d70a20ea3ae9e158bd5c22" translate="yes" xml:space="preserve">
          <source>Contains some information on how to extract this archive. See &lt;a href=&quot;https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT&quot;&gt; original documentation&lt;/a&gt; for details.</source>
          <target state="translated">包含有关如何提取此存档的一些信息。有关详细信息，请参见&lt;a href=&quot;https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT&quot;&gt;原始文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="61ba82fdcfc8dae9c85e2e28e679b79ee9524ff4" translate="yes" xml:space="preserve">
          <source>Contains support code for code profiling.</source>
          <target state="translated">包含代码剖析的支持代码。</target>
        </trans-unit>
        <trans-unit id="9d68b82f5a6be5a484ed9b7861d6e9244ca39d4e" translate="yes" xml:space="preserve">
          <source>Contains the elementary mathematical functions (powers, roots, and trigonometric functions), and low-level floating-point operations. Mathematical special functions are available in &lt;code&gt;std.mathspecial&lt;/code&gt;.</source>
          <target state="translated">包含基本数学函数（幂，根和三角函数）和低级浮点运算。数学特殊功能在 &lt;code&gt;std.mathspecial&lt;/code&gt; 中可用。</target>
        </trans-unit>
        <trans-unit id="374abc9326723db2e7c697a2e6e4a267fe502ba8" translate="yes" xml:space="preserve">
          <source>Contains the garbage collector configuration.</source>
          <target state="translated">包含垃圾收集器的配置。</target>
        </trans-unit>
        <trans-unit id="55cac8fa5f9a9f51445b40b028c04583fd1b7e94" translate="yes" xml:space="preserve">
          <source>Contains the implementation for object monitors.</source>
          <target state="translated">包含对象监视器的实现。</target>
        </trans-unit>
        <trans-unit id="c43e50c1f103bb404d1f65f3ca0cac200dba4a52" translate="yes" xml:space="preserve">
          <source>Contains the internal GC interface.</source>
          <target state="translated">包含内部GC接口。</target>
        </trans-unit>
        <trans-unit id="a032e0777594355a5de7f90137f141d62d5d95dd" translate="yes" xml:space="preserve">
          <source>Contains various utility functions used by the runtime implementation.</source>
          <target state="translated">包含运行时实现所使用的各种实用函数。</target>
        </trans-unit>
        <trans-unit id="a08a8cb56aef49a4bb99834f8677b54329650228" translate="yes" xml:space="preserve">
          <source>Content of this structure depends on information which is known and is achievable (e.g. by FTP LIST parsing). Please see the url_easy_setopt(3) man page for callbacks returning this structure -- some fields are mandatory, some others are optional. The FLAG field has special meaning.</source>
          <target state="translated">这个结构的内容取决于已知和可实现的信息(例如通过FTP LIST解析)。请参阅 url_easy_setopt(3)man page 了解返回这个结构的回调--有些字段是必须的,有些字段是可选的。FLAG字段有特殊意义。</target>
        </trans-unit>
        <trans-unit id="77d12b97ba61ffccb079e0dd2ef6809c1e957255" translate="yes" xml:space="preserve">
          <source>Content-Type</source>
          <target state="translated">Content-Type</target>
        </trans-unit>
        <trans-unit id="98251b802b3d8e0fab3d7ef7d11a13d8ba221384" translate="yes" xml:space="preserve">
          <source>Context Limitation</source>
          <target state="translated">语境限制</target>
        </trans-unit>
        <trans-unit id="a63c8852980994787d7c6baea59a86eeb09c551f" translate="yes" xml:space="preserve">
          <source>Context Pointer</source>
          <target state="translated">上下文指针</target>
        </trans-unit>
        <trans-unit id="6cc99c46b528420190afd0244c38be46fd558d8e" translate="yes" xml:space="preserve">
          <source>Continue Statement</source>
          <target state="translated">继续声明</target>
        </trans-unit>
        <trans-unit id="e00690c736538c71ad18c2491100afa18d8ad07d" translate="yes" xml:space="preserve">
          <source>Continue to send authentication (user+password) when following locations, even when hostname changed. This can potentially send off the name and password to whatever host the server decides.</source>
          <target state="translated">当跟踪地点时,即使主机名改变,也要继续发送验证(用户+密码)。这有可能将名称和密码发送到服务器决定的任何主机上。</target>
        </trans-unit>
        <trans-unit id="871aae3a25947aaa249c78c11e20e318f84bf435" translate="yes" xml:space="preserve">
          <source>Contract Programming</source>
          <target state="translated">订约承办方案编制</target>
        </trans-unit>
        <trans-unit id="ef3ae2c761b4a2473b2910338e239fa3eb7fe7d0" translate="yes" xml:space="preserve">
          <source>ContractChecking &lt;strong id=&quot;arrayBounds&quot;&gt;arrayBounds&lt;/strong&gt;;</source>
          <target state="translated">ContractChecking &lt;strong id=&quot;arrayBounds&quot;&gt;arrayBounds&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="58b151a487b5b15bd53e628c2aa67fcd794d1b65" translate="yes" xml:space="preserve">
          <source>ContractChecking &lt;strong id=&quot;assert_&quot;&gt;assert_&lt;/strong&gt;;</source>
          <target state="translated">ContractChecking &lt;strong id=&quot;assert_&quot;&gt;assert_&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5375164204a2f5e56cdbbed34a61f0552eceffaf" translate="yes" xml:space="preserve">
          <source>ContractChecking &lt;strong id=&quot;invariant_&quot;&gt;invariant_&lt;/strong&gt;;</source>
          <target state="translated">ContractChecking &lt;strong id=&quot;invariant_&quot;&gt;invariant_&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="07797d6d70881f0065abbaa5d2db584cee41ccbe" translate="yes" xml:space="preserve">
          <source>ContractChecking &lt;strong id=&quot;postcondition&quot;&gt;postcondition&lt;/strong&gt;;</source>
          <target state="translated">合同检查&lt;strong id=&quot;postcondition&quot;&gt;后置条件&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b8c4e2d35f85c409b1763c5d617c7124eb387c47" translate="yes" xml:space="preserve">
          <source>ContractChecking &lt;strong id=&quot;precondition&quot;&gt;precondition&lt;/strong&gt;;</source>
          <target state="translated">合同检查的&lt;strong id=&quot;precondition&quot;&gt;前提&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d8a121a438ee5a2fb57a169295d9586a112d6e2a" translate="yes" xml:space="preserve">
          <source>ContractChecking &lt;strong id=&quot;switchError&quot;&gt;switchError&lt;/strong&gt;;</source>
          <target state="translated">ContractChecking &lt;strong id=&quot;switchError&quot;&gt;switchError&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="32767bc87ce3ae8cd973b35c715a2ae94be49543" translate="yes" xml:space="preserve">
          <source>Contracts</source>
          <target state="translated">Contracts</target>
        </trans-unit>
        <trans-unit id="e08ca7a19394780a00d421700b2b6072e92cd151" translate="yes" xml:space="preserve">
          <source>Contracts Reading List</source>
          <target state="translated">合同阅读清单</target>
        </trans-unit>
        <trans-unit id="4a6fd7ad54f6db44bd48aaa1e54275e15709f220" translate="yes" xml:space="preserve">
          <source>Contracts are a breakthrough technique to reduce the programming effort for large projects. Contracts are the concept of preconditions, postconditions, errors, and invariants.</source>
          <target state="translated">合同是一种突破性的技术,可以减少大型项目的编程工作量。合同是前提条件、后置条件、错误和不变量的概念。</target>
        </trans-unit>
        <trans-unit id="ea1d3df298ca84104dbf8b2f6f916c02f6f77c6e" translate="yes" xml:space="preserve">
          <source>Control</source>
          <target state="translated">Control</target>
        </trans-unit>
        <trans-unit id="adf251f07168589eca3ad151f045da715921ca0e" translate="yes" xml:space="preserve">
          <source>Control Pictures</source>
          <target state="translated">控制图片</target>
        </trans-unit>
        <trans-unit id="1c2234cbd63091af60ac97c73f8399e25e57cbf0" translate="yes" xml:space="preserve">
          <source>Control and configure the D runtime.</source>
          <target state="translated">控制和配置D运行时。</target>
        </trans-unit>
        <trans-unit id="537748b8d0b3c009932ffdcb2807345633628bae" translate="yes" xml:space="preserve">
          <source>Control the Floating point hardware</source>
          <target state="translated">控制浮点硬件</target>
        </trans-unit>
        <trans-unit id="c7f5075a114488026d76dd48e5050fddf4db4821" translate="yes" xml:space="preserve">
          <source>Control the built-in garbage collector.</source>
          <target state="translated">控制内置的垃圾收集器。</target>
        </trans-unit>
        <trans-unit id="6184ead7fbc8b585f30f7328c7d83cf9c22576b4" translate="yes" xml:space="preserve">
          <source>Control the various text mode attributes, such as color, when writing text to the console.</source>
          <target state="translated">向控制台写入文本时,控制各种文本模式属性,如颜色。</target>
        </trans-unit>
        <trans-unit id="0d531b827bceefa0692483efc8f1348a688772d8" translate="yes" xml:space="preserve">
          <source>Controls the assumptions the function makes about the lengths of the ranges</source>
          <target state="translated">控制函数对范围长度的假设。</target>
        </trans-unit>
        <trans-unit id="1fc385e9b61ce294ccbd6295a709917db7660e5f" translate="yes" xml:space="preserve">
          <source>Controls the assumptions the function makes about the lengths of the ranges (i.e. jagged or not)</source>
          <target state="translated">控制函数对范围长度的假设(即是否有锯齿)。</target>
        </trans-unit>
        <trans-unit id="ea782105450bbc3723c1b76880caef4ed08032a7" translate="yes" xml:space="preserve">
          <source>Convenience Routines For Running Queries</source>
          <target state="translated">运行查询的方便例程</target>
        </trans-unit>
        <trans-unit id="bbaf8ee56cf3b9369018adb601f4bf25663e048e" translate="yes" xml:space="preserve">
          <source>Convenience aliases for &lt;a href=&quot;#dur&quot;&gt;&lt;code&gt;dur&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#dur&quot;&gt; &lt;code&gt;dur&lt;/code&gt; 的&lt;/a&gt;便捷别名。</target>
        </trans-unit>
        <trans-unit id="bd805f155418cecaf1531265afd99b52aac61ab2" translate="yes" xml:space="preserve">
          <source>Convenience function for constructing a generic container.</source>
          <target state="translated">用于构造通用容器的方便函数。</target>
        </trans-unit>
        <trans-unit id="97a89cd2033f72e4eb474981a122ebe612ce8f03" translate="yes" xml:space="preserve">
          <source>Convenience function for creating a &lt;code&gt;Rebindable&lt;/code&gt; using automatic type inference.</source>
          <target state="translated">使用自动类型推断来创建 &lt;code&gt;Rebindable&lt;/code&gt; 的便利功能。</target>
        </trans-unit>
        <trans-unit id="7fe3ba594a0730c8377a41b425b9f0bdc446eba1" translate="yes" xml:space="preserve">
          <source>Convenience function for creating a &lt;code&gt;RedBlackTree!E&lt;/code&gt; from a list of values.</source>
          <target state="translated">从值列表创建 &lt;code&gt;RedBlackTree!E&lt;/code&gt; 的便捷功能。</target>
        </trans-unit>
        <trans-unit id="5fcfa4530313650065bc0666bdfaa3f7071ece58" translate="yes" xml:space="preserve">
          <source>Convenience function for creating an &lt;code&gt;InputRangeObject&lt;/code&gt; of the proper type.</source>
          <target state="translated">用于创建适当类型的 &lt;code&gt;InputRangeObject&lt;/code&gt; 的便捷函数。</target>
        </trans-unit>
        <trans-unit id="2deeddfbf7c17e3c5ed993f8f07764fedbbc9c86" translate="yes" xml:space="preserve">
          <source>Convenience function for creating an &lt;code&gt;InputRangeObject&lt;/code&gt; of the proper type. See &lt;a href=&quot;#InputRange&quot;&gt;&lt;code&gt;InputRange&lt;/code&gt;&lt;/a&gt; for an example.</source>
          <target state="translated">用于创建适当类型的 &lt;code&gt;InputRangeObject&lt;/code&gt; 的便捷函数。有关&lt;a href=&quot;#InputRange&quot;&gt; &lt;code&gt;InputRange&lt;/code&gt; &lt;/a&gt;，请参见InputRange。</target>
        </trans-unit>
        <trans-unit id="33f3457273684d37c964b9c19f1490014d05b78c" translate="yes" xml:space="preserve">
          <source>Convenience function for creating an &lt;code&gt;OutputRangeObject&lt;/code&gt; with a base range of type &lt;code&gt;R&lt;/code&gt; that accepts types &lt;code&gt;E&lt;/code&gt;.</source>
          <target state="translated">用于创建具有 &lt;code&gt;R&lt;/code&gt; 类型的基本范围并接受 &lt;code&gt;E&lt;/code&gt; 类型的 &lt;code&gt;OutputRangeObject&lt;/code&gt; 的便捷函数。</target>
        </trans-unit>
        <trans-unit id="f13ca9b185b997f6100d99d5834656c2a0f654b1" translate="yes" xml:space="preserve">
          <source>Convenience function for creating an &lt;code&gt;OutputRangeObject&lt;/code&gt; with a base range of type R that accepts types E.</source>
          <target state="translated">用于创建具有R类型的基本范围并接受E类型的 &lt;code&gt;OutputRangeObject&lt;/code&gt; 的便捷函数。</target>
        </trans-unit>
        <trans-unit id="543a17dfa7cd9fecc2d051d691cc274f44674a5b" translate="yes" xml:space="preserve">
          <source>Convenience function that forwards to &lt;code&gt;core.sys.posix.stdio.popen&lt;/code&gt; with appropriately-constructed C-style strings.</source>
          <target state="translated">使用适当构造的C样式字符串转发到 &lt;code&gt;core.sys.posix.stdio.popen&lt;/code&gt; 的便捷功能。</target>
        </trans-unit>
        <trans-unit id="57e58ca108f45c53d8dfc085d29212201f4aa333" translate="yes" xml:space="preserve">
          <source>Convenience function that returns a &lt;a href=&quot;#RefAppender&quot;&gt;&lt;code&gt;RefAppender&lt;/code&gt;&lt;/a&gt; instance initialized with &lt;code&gt;arrayPtr&lt;/code&gt;. Don't use null for the array pointer, use the other version of &lt;code&gt;appender&lt;/code&gt; instead.</source>
          <target state="translated">便利函数，它返回一个&lt;a href=&quot;#RefAppender&quot;&gt; &lt;code&gt;RefAppender&lt;/code&gt; &lt;/a&gt;与初始化实例 &lt;code&gt;arrayPtr&lt;/code&gt; 。不要将null用作数组指针，而应使用其他版本的 &lt;code&gt;appender&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="281f96e0594e5b73a2e2e9d42b693c5d84ca8aef" translate="yes" xml:space="preserve">
          <source>Convenience function that returns a &lt;code&gt;BinaryHeap!Store&lt;/code&gt; object initialized with &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;initialSize&lt;/code&gt;.</source>
          <target state="translated">便捷函数，该函数返回使用 &lt;code&gt;s&lt;/code&gt; 和 &lt;code&gt;initialSize&lt;/code&gt; 初始化的 &lt;code&gt;BinaryHeap!Store&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="dbf606ab86105b722d7651433b775855c8f60974" translate="yes" xml:space="preserve">
          <source>Convenience function that returns an &lt;a href=&quot;#Appender&quot;&gt;&lt;code&gt;Appender&lt;/code&gt;&lt;/a&gt; instance, optionally initialized with &lt;code&gt;array&lt;/code&gt;.</source>
          <target state="translated">返回&lt;a href=&quot;#Appender&quot;&gt; &lt;code&gt;Appender&lt;/code&gt; &lt;/a&gt;实例的便捷函数，可以选择使用 &lt;code&gt;array&lt;/code&gt; 进行初始化。</target>
        </trans-unit>
        <trans-unit id="47da49afa84caecf99a65771eecc2d27ea32a75e" translate="yes" xml:space="preserve">
          <source>Convenience function that turns an integral into the corresponding &lt;code&gt;Checked&lt;/code&gt; instance by using template argument deduction. The hook type may be specified (by default &lt;code&gt;Abort&lt;/code&gt;).</source>
          <target state="translated">便利功能，通过使用模板参数推导将积分转换为相应的 &lt;code&gt;Checked&lt;/code&gt; 实例。可以指定挂钩类型（默认情况下为 &lt;code&gt;Abort&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7eb2cf7a70b87e610611dcba9cc0bdabcaa306a1" translate="yes" xml:space="preserve">
          <source>Convenience function that uses type deduction to return the appropriate &lt;code&gt;FallbackAllocator&lt;/code&gt; instance. To initialize with allocators that don't have state, use their &lt;code&gt;it&lt;/code&gt; static member.</source>
          <target state="translated">使用类型推导返回适当的 &lt;code&gt;FallbackAllocator&lt;/code&gt; 实例的便捷函数。要使用没有状态的分配器初始化，请使用其 &lt;code&gt;it&lt;/code&gt; 静态成员。</target>
        </trans-unit>
        <trans-unit id="81c10fc980c8a23004da700f26d2e49b63195765" translate="yes" xml:space="preserve">
          <source>Convenience function to construct optimal configurations for packed Trie from any &lt;code&gt;set&lt;/code&gt; of &lt;a href=&quot;#Code%20point&quot;&gt;code points&lt;/a&gt;.</source>
          <target state="translated">方便的函数从任何构建用于填充Trie的最优配置 &lt;code&gt;set&lt;/code&gt; 的&lt;a href=&quot;#Code%20point&quot;&gt;代码点&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fa203451ffb1f6e9e972677557577f159f71f56a" translate="yes" xml:space="preserve">
          <source>Convenience function which calls &lt;a href=&quot;std_range_primitives#popFrontN&quot;&gt;&lt;code&gt;std.range.primitives.popFrontN&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(range, n)&lt;/code&gt; and returns &lt;code&gt;range&lt;/code&gt;. &lt;code&gt;drop&lt;/code&gt; makes it easier to pop elements from a range and then pass it to another function within a single expression, whereas &lt;code&gt;popFrontN&lt;/code&gt; would require multiple statements.</source>
          <target state="translated">便捷函数，该函数调用&lt;a href=&quot;std_range_primitives#popFrontN&quot;&gt; &lt;code&gt;std.range.primitives.popFrontN&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(range, n)&lt;/code&gt; 并返回 &lt;code&gt;range&lt;/code&gt; 。 &lt;code&gt;drop&lt;/code&gt; 使从一个范围中弹出元素然后将其传递到单个表达式中的另一个函数变得更加容易，而 &lt;code&gt;popFrontN&lt;/code&gt; 将需要多个语句。</target>
        </trans-unit>
        <trans-unit id="6ed83ebf96e10dc1b8f43752d4d2a8c69a7ef125" translate="yes" xml:space="preserve">
          <source>Convenience function which calls &lt;code&gt;range.popFront()&lt;/code&gt; and returns &lt;code&gt;range&lt;/code&gt;. &lt;code&gt;dropOne&lt;/code&gt; makes it easier to pop an element from a range and then pass it to another function within a single expression, whereas &lt;code&gt;popFront&lt;/code&gt; would require multiple statements.</source>
          <target state="translated">便捷函数，该函数调用 &lt;code&gt;range.popFront()&lt;/code&gt; 并返回 &lt;code&gt;range&lt;/code&gt; 。 &lt;code&gt;dropOne&lt;/code&gt; 使从一个范围中弹出一个元素然后将其传递到单个表达式中的另一个函数变得更加容易，而 &lt;code&gt;popFront&lt;/code&gt; 则需要多个语句。</target>
        </trans-unit>
        <trans-unit id="d00821ec7d482d22259510bb224af117d2300d18" translate="yes" xml:space="preserve">
          <source>Convenience function. Like find, but only returns whether or not the search was successful.</source>
          <target state="translated">方便的功能。和find一样,但只返回搜索是否成功。</target>
        </trans-unit>
        <trans-unit id="d3dc32f284d99498a3ff78fa7f8707de6601d006" translate="yes" xml:space="preserve">
          <source>Convenience functions for converting one or more arguments of any type into text (the three character widths).</source>
          <target state="translated">用于将任意类型的一个或多个参数转换为文本(三个字符宽度)的便捷函数。</target>
        </trans-unit>
        <trans-unit id="63a9968094dce5e51d767213fb044fe75d3397ea" translate="yes" xml:space="preserve">
          <source>Convenience functions that create an &lt;code&gt;Fft&lt;/code&gt; object, run the FFT or inverse FFT and return the result. Useful for one-off FFTs.</source>
          <target state="translated">便利功能可创建 &lt;code&gt;Fft&lt;/code&gt; 对象，运行FFT或逆FFT并返回结果。对于一次性FFT有用。</target>
        </trans-unit>
        <trans-unit id="a5a94220c8ea5abfb148116a7e3799cbbf7ea2be" translate="yes" xml:space="preserve">
          <source>Convenience functions that forwards to &lt;code&gt;taskPool.parallel&lt;/code&gt;. The purpose of these is to make parallel foreach less verbose and more readable.</source>
          <target state="translated">便利功能可转发到 &lt;code&gt;taskPool.parallel&lt;/code&gt; 。这些的目的是使parallel foreach不再那么冗长，更易读。</target>
        </trans-unit>
        <trans-unit id="967ff579d1b9e412dbb4fb0ba6bf32a0206aa7b7" translate="yes" xml:space="preserve">
          <source>Convenience functions that throw an &lt;code&gt;StdioException&lt;/code&gt;.</source>
          <target state="translated">引发 &lt;code&gt;StdioException&lt;/code&gt; 的便捷函数。</target>
        </trans-unit>
        <trans-unit id="4f361faef9831cb8d5034d73da3a4a91d8124d09" translate="yes" xml:space="preserve">
          <source>Convenience mixin for trivially sub-classing exceptions</source>
          <target state="translated">用于对异常进行琐碎的子类化的方便混搭。</target>
        </trans-unit>
        <trans-unit id="df84ccbf276b4bf10a3abe6941075be97f75450b" translate="yes" xml:space="preserve">
          <source>Convenience names that allow using e.g. &lt;code&gt;Yes.encryption&lt;/code&gt; instead of &lt;code&gt;Flag!&quot;encryption&quot;.yes&lt;/code&gt; and &lt;code&gt;No.encryption&lt;/code&gt; instead of &lt;code&gt;Flag!&quot;encryption&quot;.no&lt;/code&gt;.</source>
          <target state="translated">方便使用的名称，例如可以使用 &lt;code&gt;Yes.encryption&lt;/code&gt; 代替 &lt;code&gt;Flag!&quot;encryption&quot;.yes&lt;/code&gt; 和 &lt;code&gt;No.encryption&lt;/code&gt; 代替 &lt;code&gt;Flag!&quot;encryption&quot;.no&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1cb541d4dad444c9b9a7542a4394d7feffdcfdf0" translate="yes" xml:space="preserve">
          <source>Convenience wrapper around &lt;a href=&quot;#convClockFreq&quot;&gt;&lt;code&gt;convClockFreq&lt;/code&gt;&lt;/a&gt; which converts ticks at a clock frequency of &lt;code&gt;MonoTime.ticksPerSecond&lt;/code&gt; to nanoseconds.</source>
          <target state="translated">&lt;a href=&quot;#convClockFreq&quot;&gt; &lt;code&gt;convClockFreq&lt;/code&gt; &lt;/a&gt;周围的便利包装器，可将MonoTime.ticksPerSecond的时钟频率的 &lt;code&gt;MonoTime.ticksPerSecond&lt;/code&gt; 为纳秒。</target>
        </trans-unit>
        <trans-unit id="2b5c35c190fd9666d416cddc663fbf2993d10e6b" translate="yes" xml:space="preserve">
          <source>Convenient operations commonly used with built-in arrays. Note that many common array operations are subsets of more generic algorithms that work with arbitrary ranges, so they are found in &lt;code&gt;std.algorithm&lt;/code&gt;.</source>
          <target state="translated">内置数组通常使用的便捷操作。请注意，许多常见的数组操作是可在任意范围内使用的更通用算法的子集，因此可以在 &lt;code&gt;std.algorithm&lt;/code&gt; 中找到它们。</target>
        </trans-unit>
        <trans-unit id="61856b8c17a4ff32006fe4b7dcc6f96f253b2120" translate="yes" xml:space="preserve">
          <source>Conventions</source>
          <target state="translated">Conventions</target>
        </trans-unit>
        <trans-unit id="e5a1bf84f0030e4788165ba4a4686a376904272f" translate="yes" xml:space="preserve">
          <source>Conversely, all of the &lt;code&gt;out&lt;/code&gt; contracts need to be satisfied, so overriding functions becomes a processes of</source>
          <target state="translated">相反，所有的 &lt;code&gt;out&lt;/code&gt; 合同都需要得到满足，因此覆盖功能成为</target>
        </trans-unit>
        <trans-unit id="c5af5b7bf221e414a8c6a208feed4235fe84af14" translate="yes" xml:space="preserve">
          <source>Conversely, allocating memory with one non-&lt;code&gt;shared&lt;/code&gt; allocator, passing it across threads (by casting the obtained buffer to &lt;code&gt;shared&lt;/code&gt;), and later deallocating it in a different thread (either with a different allocator object or with the same allocator object after casting it to &lt;code&gt;shared&lt;/code&gt;) is illegal.</source>
          <target state="translated">相反，使用一个非 &lt;code&gt;shared&lt;/code&gt; 分配器分配内存，将其在线程之间传递（通过将获得的缓冲区转换为 &lt;code&gt;shared&lt;/code&gt; ），然后在不同的线程（使用不同的分配器对象或在将其转换为相同的分配器对象）之后将其释放 &lt;code&gt;shared&lt;/code&gt; ）是非法的。</target>
        </trans-unit>
        <trans-unit id="9151f8433f795cb0f0b5b6743aeb7de77ec49f00" translate="yes" xml:space="preserve">
          <source>Conversion</source>
          <target state="translated">Conversion</target>
        </trans-unit>
        <trans-unit id="494c619bf8123d3b37b181684cb6338f68758f1b" translate="yes" xml:space="preserve">
          <source>Conversion from string types to char types enforces the input to consist of a single code point, and said code point must fit in the target type. Otherwise, &lt;a href=&quot;#ConvException&quot;&gt;&lt;code&gt;ConvException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">从字符串类型到char类型的转换将强制输入由单个代码点组成，并且所述代码点必须适合目标类型。否则，将引发&lt;a href=&quot;#ConvException&quot;&gt; &lt;code&gt;ConvException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9809150893d2b2bb036c8fb3972fbb95c93ae93b" translate="yes" xml:space="preserve">
          <source>Conversion operators. Convert from conversion operator to conversion index parallel array invconvtab[] in cgelem.c</source>
          <target state="translated">转换运算符。在cgelem.c中从转换运算符转换为转换索引并行数组invconvtab[]。</target>
        </trans-unit>
        <trans-unit id="6b9cd0af162c3095105f23d4382e114423f820eb" translate="yes" xml:space="preserve">
          <source>Conversion to bool and int</source>
          <target state="translated">转换为bool和int</target>
        </trans-unit>
        <trans-unit id="b08eaadf77cfdba7944ddcaf69eee5a983b74af3" translate="yes" xml:space="preserve">
          <source>Conversions</source>
          <target state="translated">Conversions</target>
        </trans-unit>
        <trans-unit id="197e8fd63c43eaa131c7d71bd1c845f261c1ca73" translate="yes" xml:space="preserve">
          <source>Conversions from integral types to floating-point types always succeed, but might lose accuracy. The largest integers with a predecessor representable in floating-point format are &lt;code&gt;2^24-1&lt;/code&gt; for &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;2^53-1&lt;/code&gt; for &lt;code&gt;double&lt;/code&gt;, and &lt;code&gt;2^64-1&lt;/code&gt; for &lt;code&gt;real&lt;/code&gt; (when &lt;code&gt;real&lt;/code&gt; is 80-bit, e.g. on Intel machines).</source>
          <target state="translated">从整数类型到浮点类型的转换始终会成功，但是可能会失去准确性。浮点格式可表示的前整数的最大整数是 &lt;code&gt;2^24-1&lt;/code&gt; 对于 &lt;code&gt;float&lt;/code&gt; )， &lt;code&gt;2^53-1&lt;/code&gt; 对于 &lt;code&gt;double&lt;/code&gt; ）和 &lt;code&gt;2^64-1&lt;/code&gt; 对于 &lt;code&gt;real&lt;/code&gt; （当 &lt;code&gt;real&lt;/code&gt; 为80位时，例如在Intel机器上） 。</target>
        </trans-unit>
        <trans-unit id="86f181ecd6da52a393babcdf0413f894069d62dc" translate="yes" xml:space="preserve">
          <source>Conversions from string to numeric types differ from the C equivalents &lt;code&gt;atoi()&lt;/code&gt; and &lt;code&gt;atol()&lt;/code&gt; by checking for overflow and not allowing whitespace.</source>
          <target state="translated">从字符串到数字类型的转换与C等效的 &lt;code&gt;atoi()&lt;/code&gt; 和 &lt;code&gt;atol()&lt;/code&gt; 不同,方法是检查是否存在溢出并且不允许空格。</target>
        </trans-unit>
        <trans-unit id="7d749a4f79969e83668c822ec3cb207e0dfcb26a" translate="yes" xml:space="preserve">
          <source>Conversions operate transitively, meaning that they work on arrays and associative arrays of any complexity.  This conversion works because &lt;code&gt;to!short&lt;/code&gt; applies to an &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;to!wstring&lt;/code&gt; applies to a &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;to!string&lt;/code&gt; applies to a &lt;code&gt;double&lt;/code&gt;, and &lt;code&gt;to!(double[])&lt;/code&gt; applies to an &lt;code&gt;int[]&lt;/code&gt;. The conversion might throw an exception because &lt;code&gt;to!short&lt;/code&gt; might fail the range check.</source>
          <target state="translated">转换是可传递的，这意味着它们可以处理任何复杂度的数组和关联数组。之所以这样进行转换，是因为 &lt;code&gt;to!short&lt;/code&gt; 适用于 &lt;code&gt;int&lt;/code&gt; ， &lt;code&gt;to!wstring&lt;/code&gt; 适用于 &lt;code&gt;string&lt;/code&gt; ， &lt;code&gt;to!string&lt;/code&gt; 适用于 &lt;code&gt;double&lt;/code&gt; ，并且 &lt;code&gt;to!(double[])&lt;/code&gt; 适用于 &lt;code&gt;int[]&lt;/code&gt; 。转换可能会引发异常，因为 &lt;code&gt;to!short&lt;/code&gt; 可能会使范围检查失败。</target>
        </trans-unit>
        <trans-unit id="3f15ce79532d7a88716daffe2b5fa5245abe9c20" translate="yes" xml:space="preserve">
          <source>Convert</source>
          <target state="translated">Convert</target>
        </trans-unit>
        <trans-unit id="cbfd7dd188ff7f487f68697a8d34f14f04f7dec6" translate="yes" xml:space="preserve">
          <source>Convert Expression to elem, then append destructors for any temporaries created in elem.</source>
          <target state="translated">将Expression转换为elem,然后为elem中创建的任何临时变量追加破坏函数。</target>
        </trans-unit>
        <trans-unit id="300d1d44e039ebbc34544e6257ab84ea8d05e054" translate="yes" xml:space="preserve">
          <source>Convert MODxxxx to STCxxx</source>
          <target state="translated">将MODxxxx转换为STCxxx</target>
        </trans-unit>
        <trans-unit id="cac4192e2c3b155cebc1be34d4b77eb443e533c0" translate="yes" xml:space="preserve">
          <source>Convert Object to a human readable string.</source>
          <target state="translated">将对象转换为人类可读的字符串。</target>
        </trans-unit>
        <trans-unit id="a157b506be054ad583671757f6739b58b4eae2cf" translate="yes" xml:space="preserve">
          <source>Convert Win32 error code to string.</source>
          <target state="translated">将Win32错误代码转换为字符串。</target>
        </trans-unit>
        <trans-unit id="8203e1072dab83cb9ec37a4f4016d9ab9deef361" translate="yes" xml:space="preserve">
          <source>Convert a callable to a delegate with the same parameter list and return type, avoiding heap allocations and use of auxiliary storage.</source>
          <target state="translated">将一个callable转换为具有相同参数列表和返回类型的delegate,避免堆分配和使用辅助存储。</target>
        </trans-unit>
        <trans-unit id="ddfa177b3d340952f0710190200b69c560b06948" translate="yes" xml:space="preserve">
          <source>Convert a narrow autodecoding string to an array type that fully supports random access. This is handled as a special case and always returns an array of &lt;code&gt;dchar&lt;/code&gt;</source>
          <target state="translated">将狭窄的自动解码字符串转换为完全支持随机访问的数组类型。这是一种特殊情况，始终返回 &lt;code&gt;dchar&lt;/code&gt; 数组</target>
        </trans-unit>
        <trans-unit id="7616efe01f9711b656d048ab996095537d915ed4" translate="yes" xml:space="preserve">
          <source>Convert a narrow string to an array type that fully supports random access. This is handled as a special case and always returns an array of &lt;code&gt;dchar&lt;/code&gt;</source>
          <target state="translated">将窄字符串转换为完全支持随机访问的数组类型。这是一种特殊情况，始终返回 &lt;code&gt;dchar&lt;/code&gt; 数组</target>
        </trans-unit>
        <trans-unit id="ae8c143fc472917c228a5c0ff4611ff8f4b320dd" translate="yes" xml:space="preserve">
          <source>Convert a string from one encoding to another.</source>
          <target state="translated">将一个字符串从一种编码转换为另一种编码。</target>
        </trans-unit>
        <trans-unit id="775fe4e45be29046b343c44db1012fcf4054e8bd" translate="yes" xml:space="preserve">
          <source>Convert an &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; or a string to upper or lower case.</source>
          <target state="translated">将&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;或字符串转换为大写或小写。</target>
        </trans-unit>
        <trans-unit id="c279cb7055f08eba41ad9320ed65a8b4bd24423e" translate="yes" xml:space="preserve">
          <source>Convert an IPv4 address number in host byte order to a human readable string representing the IPv4 address in dotted-decimal form.</source>
          <target state="translated">按主机字节顺序将IPv4地址号转换为人可读的字符串,以点阵十进制形式表示IPv4地址。</target>
        </trans-unit>
        <trans-unit id="7a94a08d73d55d4d138a67dc22b14b4c3e02569f" translate="yes" xml:space="preserve">
          <source>Convert array to a dynamic array.</source>
          <target state="translated">将数组转换为动态数组。</target>
        </trans-unit>
        <trans-unit id="6ca78c70b84ae82ae6555ba40c8527618a61c871" translate="yes" xml:space="preserve">
          <source>Convert array to a pointer to the data.</source>
          <target state="translated">将数组转换为数据的指针。</target>
        </trans-unit>
        <trans-unit id="6a023ef771ded91cccae26939483968bef14680b" translate="yes" xml:space="preserve">
          <source>Convert expression into a delegate.</source>
          <target state="translated">将表达式转换为代表。</target>
        </trans-unit>
        <trans-unit id="21d2c697aa6b1950d17d8a4c4f437a6c775e1abd" translate="yes" xml:space="preserve">
          <source>Convert from pointer to exception_object field to pointer to CppExceptionHeader that it is embedded inside of.</source>
          <target state="translated">从指向exception_object字段的指针转换为指向嵌入其中的CppExceptionHeader的指针。</target>
        </trans-unit>
        <trans-unit id="ca97d234020c359f0ea9445b2940ce5ecabb073f" translate="yes" xml:space="preserve">
          <source>Convert from pointer to exception_object to pointer to ExceptionHeader that it is embedded inside of.</source>
          <target state="translated">从指向exception_object的指针转换为指向它所嵌入的ExceptionHeader的指针。</target>
        </trans-unit>
        <trans-unit id="141d85c0215cf01962972ffaaf51166d383ad99a" translate="yes" xml:space="preserve">
          <source>Convert front end type &lt;code&gt;t&lt;/code&gt; to backend type &lt;code&gt;t.ctype&lt;/code&gt;. Memoize the result.</source>
          <target state="translated">将前端类型 &lt;code&gt;t&lt;/code&gt; 转换为后端类型 &lt;code&gt;t.ctype&lt;/code&gt; 。记住结果。</target>
        </trans-unit>
        <trans-unit id="cdd72d6f2bdb11b763377603b2356cca157b65d6" translate="yes" xml:space="preserve">
          <source>Convert integer to a range of characters. Intended to be lightweight and fast.</source>
          <target state="translated">将整数转换为一个字符范围。意在轻量级和快速。</target>
        </trans-unit>
        <trans-unit id="dbbceb68e9badc857157ec44ce9e4004ea0d70fb" translate="yes" xml:space="preserve">
          <source>Convert integral value to string in radix radix. radix must be a value from 2 to 36. value is treated as a signed value only if radix is 10. The characters A through Z are used to represent values 10 through 36 and their case is determined by the letterCase parameter.</source>
          <target state="translated">将积分值转换为以radix radix为单位的字符串。radix必须是2到36之间的数值,只有当radix为10时,数值才会被视为有符号的数值。字符A到Z用来表示10到36的值,它们的大小写由letterCase参数决定。</target>
        </trans-unit>
        <trans-unit id="c7b617a1afa58073368ac7644c913c0a1351ae0d" translate="yes" xml:space="preserve">
          <source>Convert internal buffer to array of chars.</source>
          <target state="translated">将内部缓冲区转换为chars数组。</target>
        </trans-unit>
        <trans-unit id="f1c0c49893f30f59cf861f572b87531ec8714ef8" translate="yes" xml:space="preserve">
          <source>Convert intrinsic function to operator.</source>
          <target state="translated">将固有函数转换为运算符。</target>
        </trans-unit>
        <trans-unit id="df7a4dda020c82114c65501c86fda6ef64fb7578" translate="yes" xml:space="preserve">
          <source>Convert string contents to a 0 terminated string, allocated by mem.xmalloc().</source>
          <target state="translated">将字符串内容转换为0结束的字符串,由mem.xmalloc()分配。</target>
        </trans-unit>
        <trans-unit id="ec4aa6a499b7d8a47d71bacac0397813ddfaa4db" translate="yes" xml:space="preserve">
          <source>Convert string to char[].</source>
          <target state="translated">将字符串转换为char[]。</target>
        </trans-unit>
        <trans-unit id="4e5b362d69a7b7939119a85847912d34f42f3d2a" translate="yes" xml:space="preserve">
          <source>Convert the &lt;code&gt;BigInt&lt;/code&gt; to &lt;code&gt;string&lt;/code&gt;, passing it to the given sink.</source>
          <target state="translated">将 &lt;code&gt;BigInt&lt;/code&gt; 转换为 &lt;code&gt;string&lt;/code&gt; ，然后将其传递到给定的接收器。</target>
        </trans-unit>
        <trans-unit id="7e697a11907653a602483019409a860f0b6b446e" translate="yes" xml:space="preserve">
          <source>Convert the result of &lt;code&gt;__traits(getParameterStorageClasses)&lt;/code&gt; to &lt;a href=&quot;#ParameterStorageClass&quot;&gt;&lt;code&gt;ParameterStorageClass&lt;/code&gt;&lt;/a&gt;&lt;code&gt;enum&lt;/code&gt;s.</source>
          <target state="translated">将 &lt;code&gt;__traits(getParameterStorageClasses)&lt;/code&gt; 的结果转换为&lt;a href=&quot;#ParameterStorageClass&quot;&gt; &lt;code&gt;ParameterStorageClass&lt;/code&gt; &lt;/a&gt; &lt;code&gt;enum&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7da59e0b399f4430a5165fc7efc2188b462909d8" translate="yes" xml:space="preserve">
          <source>Convert to 'const'.</source>
          <target state="translated">转换为'const'。</target>
        </trans-unit>
        <trans-unit id="2d339781d067223d4ff6ffa91e1a499862e4e10d" translate="yes" xml:space="preserve">
          <source>Convert to 'immutable'.</source>
          <target state="translated">转换为 &quot;不可变&quot;。</target>
        </trans-unit>
        <trans-unit id="64a97922b6ad5fabb50249f78bb7261af9bfcdc7" translate="yes" xml:space="preserve">
          <source>Convert to 'wild'.</source>
          <target state="translated">转换为 &quot;野生&quot;。</target>
        </trans-unit>
        <trans-unit id="87e0f4222e74eab68817299371f9ec11a177e211" translate="yes" xml:space="preserve">
          <source>Convert to &lt;code&gt;size_t[]&lt;/code&gt;.</source>
          <target state="translated">转换为 &lt;code&gt;size_t[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b01671f329e1e8db8dfaf9b057f7d93f19d92bc" translate="yes" xml:space="preserve">
          <source>Convert to &lt;code&gt;void[]&lt;/code&gt;.</source>
          <target state="translated">转换为 &lt;code&gt;void[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7e573911db63a61f22b50d1d7f51e71f6801020" translate="yes" xml:space="preserve">
          <source>Convert to array of bytes.</source>
          <target state="translated">转换为字节数组。</target>
        </trans-unit>
        <trans-unit id="81f5f7ef2860779e845c8d181cf922cbaa33cd4e" translate="yes" xml:space="preserve">
          <source>Convert types from one type to another.</source>
          <target state="translated">将类型从一种类型转换为另一种类型。</target>
        </trans-unit>
        <trans-unit id="f2ca50a2d69bd1118ceb42e9e63fb2cadf8cec83" translate="yes" xml:space="preserve">
          <source>Convert wrapped value to a human readable string</source>
          <target state="translated">将封装的值转换为人类可读的字符串。</target>
        </trans-unit>
        <trans-unit id="792ceeff170dffe3167fec916d1a3b1293c9dd91" translate="yes" xml:space="preserve">
          <source>Converted to D from curl headers by &lt;a href=&quot;http://www.digitalmars.com/d/2.0/htod.html&quot;&gt;htod&lt;/a&gt; and cleaned up by Jonas Drewsen (jdrewsen)</source>
          <target state="translated">&lt;a href=&quot;http://www.digitalmars.com/d/2.0/htod.html&quot;&gt;htod&lt;/a&gt;将其从卷曲头转换为D，并由Jonas Drewsen（jdrewsen）清理</target>
        </trans-unit>
        <trans-unit id="b36e0d9093c25cbc6e2a4908ce26bc8670d8275a" translate="yes" xml:space="preserve">
          <source>Converting a value to its own type (useful mostly for generic code) simply returns its argument.</source>
          <target state="translated">将一个值转换为自己的类型(主要对通用代码有用),只需返回其参数即可。</target>
        </trans-unit>
        <trans-unit id="450f535fe5b129de6888d6e0eaa750ca3a090834" translate="yes" xml:space="preserve">
          <source>Converting among numeric types is a safe way to cast them around.  Conversions from floating-point types to integral types allow loss of precision (the fractional part of a floating-point number). The conversion is truncating towards zero, the same way a cast would truncate. (To round a floating point value when casting to an integral, use &lt;code&gt;roundTo&lt;/code&gt;.)</source>
          <target state="translated">在数字类型之间进行转换是将其转换的安全方法。从浮点类型到整数类型的转换会导致精度损失（浮点数的小数部分）。转换将截断为零，与强制转换截断的方式相同。（要在转换为整数时舍入浮点值，请使用 &lt;code&gt;roundTo&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="031bf48dec6b48a765724d561163e257c0bd643c" translate="yes" xml:space="preserve">
          <source>Converting an array to another array type works by converting each element in turn. Associative arrays can be converted to associative arrays as long as keys and values can in turn be converted.</source>
          <target state="translated">将一个数组转换为另一种数组类型的工作原理是依次转换每个元素。只要键和值可以依次转换,就可以将关联数组转换为关联数组。</target>
        </trans-unit>
        <trans-unit id="d54717abb3bcd9a560b4033abb55a3f1b9abaf0c" translate="yes" xml:space="preserve">
          <source>Converting text to any of the four normalization forms via &lt;a href=&quot;#normalize&quot;&gt;&lt;code&gt;normalize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过&lt;a href=&quot;#normalize&quot;&gt; &lt;code&gt;normalize&lt;/code&gt; &lt;/a&gt;将文本转换为四种规范化形式中的任何一种。</target>
        </trans-unit>
        <trans-unit id="a774f38191f5ee26ac3460d0bd0ede6e3b255259" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;s&lt;/code&gt; to lowercase (by performing Unicode lowercase mapping) in place. For a few characters string length may increase after the transformation, in such a case the function reallocates exactly once. If &lt;code&gt;s&lt;/code&gt; does not have any uppercase characters, then &lt;code&gt;s&lt;/code&gt; is unaltered.</source>
          <target state="translated">将 &lt;code&gt;s&lt;/code&gt; 转换为小写（通过执行Unicode小写映射）。对于几个字符，转换后字符串的长度可能会增加，在这种情况下，该函数将恰好重新分配一次。如果 &lt;code&gt;s&lt;/code&gt; 没有任何大写字符，则 &lt;code&gt;s&lt;/code&gt; 保持不变。</target>
        </trans-unit>
        <trans-unit id="f50788ea46280702695186b92c1242c64d22af55" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;s&lt;/code&gt; to uppercase (by performing Unicode uppercase mapping) in place. For a few characters string length may increase after the transformation, in such a case the function reallocates exactly once. If &lt;code&gt;s&lt;/code&gt; does not have any lowercase characters, then &lt;code&gt;s&lt;/code&gt; is unaltered.</source>
          <target state="translated">将 &lt;code&gt;s&lt;/code&gt; 转换为大写（通过执行Unicode大写映射）。对于几个字符，转换后字符串的长度可能会增加，在这种情况下，该函数将恰好重新分配一次。如果 &lt;code&gt;s&lt;/code&gt; 没有任何小写字符，则 &lt;code&gt;s&lt;/code&gt; 不变。</target>
        </trans-unit>
        <trans-unit id="1ae33ebc9b2f5b3c2490b1760900c22c6b676fbc" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; to a &lt;code&gt;FILETIME&lt;/code&gt; struct.</source>
          <target state="translated">将一&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;到 &lt;code&gt;FILETIME&lt;/code&gt; 结构。</target>
        </trans-unit>
        <trans-unit id="56be3b4d1a90af46d0b4592f89cac9048787f523" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; to a &lt;code&gt;SYSTEMTIME&lt;/code&gt; struct.</source>
          <target state="translated">一个转换&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;到 &lt;code&gt;SYSTEMTIME&lt;/code&gt; 结构。</target>
        </trans-unit>
        <trans-unit id="894edb86f4a8a0cd1f69c6b5d9062818feeb4ddd" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;FILETIME&lt;/code&gt; struct to a &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将 &lt;code&gt;FILETIME&lt;/code&gt; 结构转换为&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ed832f63736b31569fc124964cd3c928884d26d6" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;FILETIME&lt;/code&gt; struct to the number of hnsecs since midnight, January 1st, 1 A.D.</source>
          <target state="translated">将 &lt;code&gt;FILETIME&lt;/code&gt; 结构转换为自公元1月1日午夜以来的hnsecs数</target>
        </trans-unit>
        <trans-unit id="cf543602844b3062641ecae07379d485cf8d1e9c" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;SYSTEMTIME&lt;/code&gt; struct to a &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将 &lt;code&gt;SYSTEMTIME&lt;/code&gt; 结构转换为&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="543b837fe53783efdefb34be70919c615cbd90b2" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;TickDuration&lt;/code&gt; to the given units as either an integral value or a floating point value.</source>
          <target state="translated">将 &lt;code&gt;TickDuration&lt;/code&gt; 转换为给定单位（整数值或浮点值）。</target>
        </trans-unit>
        <trans-unit id="da8e27299262cc14743b153feb76d11d4fc53020" translate="yes" xml:space="preserve">
          <source>Converts a callable to a delegate.</source>
          <target state="translated">将一个可调用转换为一个委托。</target>
        </trans-unit>
        <trans-unit id="b2246d69735597617ac670e1cd79c63e9b7c718e" translate="yes" xml:space="preserve">
          <source>Converts a hex literal to a string at compile time.</source>
          <target state="translated">在编译时将十六进制文字转换为字符串。</target>
        </trans-unit>
        <trans-unit id="83a9e235dafe38c896876f468796a7e891631152" translate="yes" xml:space="preserve">
          <source>Converts a multi-argument function into a series of single-argument functions. f(x, y) == curry(f)(x)(y)</source>
          <target state="translated">f(x,y)==curry(f)(x)(y)转换成一系列单参数函数。</target>
        </trans-unit>
        <trans-unit id="12fd3fc98603c4c30662a5d938bee086fc318076" translate="yes" xml:space="preserve">
          <source>Converts a number of hnsecs since midnight, January 1st, 1 A.D. to a &lt;code&gt;FILETIME&lt;/code&gt; struct.</source>
          <target state="translated">将自公元1月1日午夜以来的多个hnsecs转换为 &lt;code&gt;FILETIME&lt;/code&gt; 结构。</target>
        </trans-unit>
        <trans-unit id="e8645b8b019a6a92357fd2abaf953b052fdc1822" translate="yes" xml:space="preserve">
          <source>Converts an ASCII letter to lowercase.</source>
          <target state="translated">将一个ASCII字母转换为小写字母。</target>
        </trans-unit>
        <trans-unit id="498c6f9ce172411761c196b39cf785adcfc26947" translate="yes" xml:space="preserve">
          <source>Converts an ASCII letter to uppercase.</source>
          <target state="translated">将一个ASCII字母转换为大写字母。</target>
        </trans-unit>
        <trans-unit id="f236af9686b5551670717880afe98b4a169a9b35" translate="yes" xml:space="preserve">
          <source>Converts any foreach-iterable entity (e.g. an input range) to an alias sequence.</source>
          <target state="translated">将任何foreach-iterable实体(例如输入范围)转换为别名序列。</target>
        </trans-unit>
        <trans-unit id="9cd9c57aa4a490cac5e73dc3d34bbb7dcb896ecd" translate="yes" xml:space="preserve">
          <source>Converts array (other than strings) to string. Each element is converted by calling &lt;code&gt;to!T&lt;/code&gt;.</source>
          <target state="translated">将数组（字符串除外）转换为字符串。每个元素都通过调用 &lt;code&gt;to!T&lt;/code&gt; 转换。</target>
        </trans-unit>
        <trans-unit id="7f0da0dc296d4db8687cb43fe21c97d98f43b18d" translate="yes" xml:space="preserve">
          <source>Converts from &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; to DOS file date/time.</source>
          <target state="translated">从&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;转换为DOS文件的日期/时间。</target>
        </trans-unit>
        <trans-unit id="203d4991495ad2a5ccd5bf2eb36f27bdb41d0ab3" translate="yes" xml:space="preserve">
          <source>Converts from DOS file date/time to &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从DOS文件的日期/时间转换为&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="96775ca56ca5ed48ab90888921d90905553fc258" translate="yes" xml:space="preserve">
          <source>Converts from unix time (i.e. seconds from midnight, January 1st, 1970 in UTC) to a &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从unix时间（即，从UTC到1970年1月1日午夜开始的秒数）转换为&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="47a6cd5246b5128f541dc1f56c74256ce4a5cf6e" translate="yes" xml:space="preserve">
          <source>Converts from unix time (which uses midnight, January 1st, 1970 UTC as its epoch and seconds as its units) to &quot;std time&quot; (which uses midnight, January 1st, 1 A.D. UTC and hnsecs as its units).</source>
          <target state="translated">将unix时间(以1970年1月1日午夜UTC为纪元,以秒为单位)转换为 &quot;std时间&quot;(以公元1月1日午夜UTC和hnsecs为单位)。</target>
        </trans-unit>
        <trans-unit id="2ff42625e816f32f0e903105abab719aab3bc247" translate="yes" xml:space="preserve">
          <source>Converts std time (which uses midnight, January 1st, 1 A.D. UTC as its epoch and hnsecs as its units) to unix time (which uses midnight, January 1st, 1970 UTC as its epoch and seconds as its units).</source>
          <target state="translated">将std时间(以公元1月1日午夜的UTC为纪元,以hnsecs为单位)转换为unix时间(以1970年1月1日午夜的UTC为纪元,以秒为单位)。</target>
        </trans-unit>
        <trans-unit id="02026be234370e8ba0fa5a12a01ca8dc15195021" translate="yes" xml:space="preserve">
          <source>Converts the UTF-8 string s into a null-terminated string in a Windows 8-bit character set.</source>
          <target state="translated">将UTF-8字符串s转换为Windows 8位字符集中的空端字符串。</target>
        </trans-unit>
        <trans-unit id="68545d42d5434868c8492fc2ad3250e2f1494c37" translate="yes" xml:space="preserve">
          <source>Converts the complex number to a string representation.</source>
          <target state="translated">将复数转换为字符串表示。</target>
        </trans-unit>
        <trans-unit id="d4417d8f06d1b116703d3dde566fa560d538d75d" translate="yes" xml:space="preserve">
          <source>Converts the given time from one clock frequency/resolution to another.</source>
          <target state="translated">将给定的时间从一种时钟频率/分辨率转换为另一种。</target>
        </trans-unit>
        <trans-unit id="1a6e949bbca6ba048ef59d86f6355918bc8f8588" translate="yes" xml:space="preserve">
          <source>Converts the given value from big endian to the native endianness and returns it. The value is given as a &lt;code&gt;ubyte[n]&lt;/code&gt; where &lt;code&gt;n&lt;/code&gt; is the size of the target type. You must give the target type as a template argument, because there are multiple types with the same size and so the type of the argument is not enough to determine the return type.</source>
          <target state="translated">将给定的值从big endian转换为native endianness并返回它。该值以 &lt;code&gt;ubyte[n]&lt;/code&gt; 形式给出，其中 &lt;code&gt;n&lt;/code&gt; 是目标类型的大小。您必须将目标类型作为模板参数，因为存在多个具有相同大小的类型，因此参数的类型不足以确定返回类型。</target>
        </trans-unit>
        <trans-unit id="99754092cef6ee8c6b8a8736f7dda136a6df1796" translate="yes" xml:space="preserve">
          <source>Converts the given value from little endian to the native endianness and returns it. The value is given as a &lt;code&gt;ubyte[n]&lt;/code&gt; where &lt;code&gt;n&lt;/code&gt; is the size of the target type. You must give the target type as a template argument, because there are multiple types with the same size and so the type of the argument is not enough to determine the return type.</source>
          <target state="translated">将给定值从little endian转换为native endianness并返回它。该值以 &lt;code&gt;ubyte[n]&lt;/code&gt; 形式给出，其中 &lt;code&gt;n&lt;/code&gt; 是目标类型的大小。您必须将目标类型作为模板参数，因为存在多个具有相同大小的类型，因此参数的类型不足以确定返回类型。</target>
        </trans-unit>
        <trans-unit id="7026ec6ca618852b8dbaface42f39c87c3912a93" translate="yes" xml:space="preserve">
          <source>Converts the given value from the native endianness to big endian and returns it as a &lt;code&gt;ubyte[n]&lt;/code&gt; where &lt;code&gt;n&lt;/code&gt; is the size of the given type.</source>
          <target state="translated">将给定值从本机字节序转换为大字节序并将其返回为 &lt;code&gt;ubyte[n]&lt;/code&gt; ，其中 &lt;code&gt;n&lt;/code&gt; 是给定类型的大小。</target>
        </trans-unit>
        <trans-unit id="db7766a0ee6d7c4c104a32edc118f2a266f57364" translate="yes" xml:space="preserve">
          <source>Converts the given value from the native endianness to little endian and returns it as a &lt;code&gt;ubyte[n]&lt;/code&gt; where &lt;code&gt;n&lt;/code&gt; is the size of the given type.</source>
          <target state="translated">将给定值从本机字节序转换为小字节序并将其返回为 &lt;code&gt;ubyte[n]&lt;/code&gt; ，其中 &lt;code&gt;n&lt;/code&gt; 是给定类型的大小。</target>
        </trans-unit>
        <trans-unit id="71032212236b6edba85329a7e36a9ebec7e90c73" translate="yes" xml:space="preserve">
          <source>Converts the null-terminated string s from a Windows 8-bit character set into a UTF-8 char array.</source>
          <target state="translated">将Windows 8位字符集中的空端字符串s转换为UTF-8字符数组。</target>
        </trans-unit>
        <trans-unit id="453bede937d557afda6a1aea6ab1d8f1c5734489" translate="yes" xml:space="preserve">
          <source>Converts the store &lt;code&gt;s&lt;/code&gt; into a heap. If &lt;code&gt;initialSize&lt;/code&gt; is specified, only the first &lt;code&gt;initialSize&lt;/code&gt; elements in &lt;code&gt;s&lt;/code&gt; are transformed into a heap, after which the heap can grow up to &lt;code&gt;r.length&lt;/code&gt; (if &lt;code&gt;Store&lt;/code&gt; is a range) or indefinitely (if &lt;code&gt;Store&lt;/code&gt; is a container with &lt;code&gt;insertBack&lt;/code&gt;). Performs &amp;Omicron;(&lt;code&gt;min(r.length, initialSize)&lt;/code&gt;) evaluations of &lt;code&gt;less&lt;/code&gt;.</source>
          <target state="translated">转换店里 &lt;code&gt;s&lt;/code&gt; 成一堆。如果 &lt;code&gt;initialSize&lt;/code&gt; 被指定时，仅第一 &lt;code&gt;initialSize&lt;/code&gt; 中的元素 &lt;code&gt;s&lt;/code&gt; 被变换成一个堆，在此之后，堆可以长到 &lt;code&gt;r.length&lt;/code&gt; （如果 &lt;code&gt;Store&lt;/code&gt; 是一个范围）或无限期地（如果 &lt;code&gt;Store&lt;/code&gt; 是与容器 &lt;code&gt;insertBack&lt;/code&gt; ）。执行&amp;Omicron;（ &lt;code&gt;min(r.length, initialSize)&lt;/code&gt; ）的评价 &lt;code&gt;less&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2f93578046a37a61d755a351d7403ee07d2feb19" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; to a string with the format &lt;code&gt;YYYY-MM-DD&lt;/code&gt;. If &lt;code&gt;writer&lt;/code&gt; is set, the resulting string will be written directly to it.</source>
          <target state="translated">将此&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;转换为格式 &lt;code&gt;YYYY-MM-DD&lt;/code&gt; 的字符串。如果设置了 &lt;code&gt;writer&lt;/code&gt; ，则结果字符串将直接写入其中。</target>
        </trans-unit>
        <trans-unit id="6603b566288f85150171c62cd84c2febe4e416d1" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; to a string with the format &lt;code&gt;YYYY-Mon-DD&lt;/code&gt;. If &lt;code&gt;writer&lt;/code&gt; is set, the resulting string will be written directly to it.</source>
          <target state="translated">将此&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;转换为格式 &lt;code&gt;YYYY-Mon-DD&lt;/code&gt; 的字符串。如果设置了 &lt;code&gt;writer&lt;/code&gt; ，则结果字符串将直接写入其中。</target>
        </trans-unit>
        <trans-unit id="bbed58be0aee4969a87b68c3fa4d895942507f6c" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; to a string with the format &lt;code&gt;YYYYMMDD&lt;/code&gt;. If &lt;code&gt;writer&lt;/code&gt; is set, the resulting string will be written directly to it.</source>
          <target state="translated">将此&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;转换为格式为 &lt;code&gt;YYYYMMDD&lt;/code&gt; 的字符串。如果设置了 &lt;code&gt;writer&lt;/code&gt; ，则结果字符串将直接写入其中。</target>
        </trans-unit>
        <trans-unit id="6a1ebbb6b69924d680654dfe931f3d107306042b" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; to a string.</source>
          <target state="translated">将此&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;转换为字符串。</target>
        </trans-unit>
        <trans-unit id="2cdf3feb7790120701384059bf58b361680f227a" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; to a string with the format &lt;code&gt;YYYY-MM-DDTHH:MM:SS&lt;/code&gt;. If &lt;code&gt;writer&lt;/code&gt; is set, the resulting string will be written directly to it.</source>
          <target state="translated">将此&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;转换为格式 &lt;code&gt;YYYY-MM-DDTHH:MM:SS&lt;/code&gt; 的字符串。如果设置了 &lt;code&gt;writer&lt;/code&gt; ，则结果字符串将直接写入其中。</target>
        </trans-unit>
        <trans-unit id="b4b6f600d98add32575a23efab5b281c9146f97b" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; to a string with the format &lt;code&gt;YYYY-Mon-DD HH:MM:SS&lt;/code&gt;. If &lt;code&gt;writer&lt;/code&gt; is set, the resulting string will be written directly to it.</source>
          <target state="translated">将此&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;转换为格式 &lt;code&gt;YYYY-Mon-DD HH:MM:SS&lt;/code&gt; 的字符串。如果设置了 &lt;code&gt;writer&lt;/code&gt; ，则结果字符串将直接写入其中。</target>
        </trans-unit>
        <trans-unit id="f02a2e92abc14cc294c7e38e57188968b21a1abb" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; to a string with the format &lt;code&gt;YYYYMMDDTHHMMSS&lt;/code&gt;. If &lt;code&gt;writer&lt;/code&gt; is set, the resulting string will be written directly to it.</source>
          <target state="translated">将此&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;转换为格式为 &lt;code&gt;YYYYMMDDTHHMMSS&lt;/code&gt; 的字符串。如果设置了 &lt;code&gt;writer&lt;/code&gt; ，则结果字符串将直接写入其中。</target>
        </trans-unit>
        <trans-unit id="db51859446cb3a5e9180034baebbd2056ca398e0" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; to a string.</source>
          <target state="translated">将此&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;转换为字符串。</target>
        </trans-unit>
        <trans-unit id="2476ac04da69ffdc944a61493a1b71959fe371eb" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; to a string with the format YYYY-MM-DDTHH:MM:SS.FFFFFFFTZ (where F is fractional seconds and TZ is the time zone).</source>
          <target state="translated">将此&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;转换为格式为YYYY-MM-DDTHH：MM：SS.FFFFFFFTZ的字符串（其中F为小数秒，TZ为时区）。</target>
        </trans-unit>
        <trans-unit id="6fd506aa039e90544044bf8ca9bc422fc2f26564" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; to a string with the format YYYY-Mon-DD HH:MM:SS.FFFFFFFTZ (where F is fractional seconds and TZ is the time zone).</source>
          <target state="translated">将此&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;转换为格式为YYYY-Mon-DD HH：MM：SS.FFFFFFFTZ的字符串（其中F为小数秒，TZ为时区）。</target>
        </trans-unit>
        <trans-unit id="d39abfdab21a7e5012c4e5c22865dc3c6b9b9a8f" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; to a string with the format YYYYMMDDTHHMMSS.FFFFFFFTZ (where F is fractional seconds and TZ is time zone).</source>
          <target state="translated">将此&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;转换为格式为YYYYMMDDTHHMMSS.FFFFFFFTZ的字符串（其中F为小数秒，TZ为时区）。</target>
        </trans-unit>
        <trans-unit id="288ffc29180217ab372bbf85f774ec19f9c71bdb" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; to a string.</source>
          <target state="translated">将此&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;转换为字符串。</target>
        </trans-unit>
        <trans-unit id="b5ead06637aa29f4e0f3f6e8350a6b3d0470262f" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; to unix time (i.e. seconds from midnight, January 1st, 1970 in UTC).</source>
          <target state="translated">将此&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;转换为unix时间（即从UTC到1970年1月1日午夜的秒数）。</target>
        </trans-unit>
        <trans-unit id="11c0c6c4e0883ccde835c4d2ba2f873e1dc0fe81" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;#TimeOfDay&quot;&gt;&lt;code&gt;TimeOfDay&lt;/code&gt;&lt;/a&gt; to a string with the format &lt;code&gt;HH:MM:SS&lt;/code&gt;. If &lt;code&gt;writer&lt;/code&gt; is set, the resulting string will be written directly to it.</source>
          <target state="translated">将此&lt;a href=&quot;#TimeOfDay&quot;&gt; &lt;code&gt;TimeOfDay&lt;/code&gt; &lt;/a&gt;转换为格式为 &lt;code&gt;HH:MM:SS&lt;/code&gt; 的字符串。如果设置了 &lt;code&gt;writer&lt;/code&gt; ，则结果字符串将直接写入其中。</target>
        </trans-unit>
        <trans-unit id="289897447b39fc44b7870f5a328e8892eb4029c1" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;#TimeOfDay&quot;&gt;&lt;code&gt;TimeOfDay&lt;/code&gt;&lt;/a&gt; to a string with the format &lt;code&gt;HHMMSS&lt;/code&gt;. If &lt;code&gt;writer&lt;/code&gt; is set, the resulting string will be written directly to it.</source>
          <target state="translated">将此&lt;a href=&quot;#TimeOfDay&quot;&gt; &lt;code&gt;TimeOfDay&lt;/code&gt; &lt;/a&gt;转换为格式为 &lt;code&gt;HHMMSS&lt;/code&gt; 的字符串。如果设置了 &lt;code&gt;writer&lt;/code&gt; ，则结果字符串将直接写入其中。</target>
        </trans-unit>
        <trans-unit id="8233cbfc0d952b5bfeda989512aed9518e2812db" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;Duration&lt;/code&gt; to a &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">将此 &lt;code&gt;Duration&lt;/code&gt; 转换为 &lt;code&gt;string&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6e0e45d39cee812b4f40d98644bee8bb2dbdb9d" translate="yes" xml:space="preserve">
          <source>Converts this TimeOfDay to a string.</source>
          <target state="translated">将这个TimeOfDay转换为一个字符串。</target>
        </trans-unit>
        <trans-unit id="2d70de6e4f1b10ef5bbf7032a91df90630348700" translate="yes" xml:space="preserve">
          <source>Converts this interval to a string.</source>
          <target state="translated">将此区间转换为字符串。</target>
        </trans-unit>
        <trans-unit id="da35025d96842d394967858a7a95f5b87cb34797" translate="yes" xml:space="preserve">
          <source>Converts to string.</source>
          <target state="translated">转换为字符串。</target>
        </trans-unit>
        <trans-unit id="cf38165162fb8000f4b46022cfe90ad022d53d08" translate="yes" xml:space="preserve">
          <source>Copies a range to another. If &lt;code&gt;a = [1, 2, 3]&lt;/code&gt; and &lt;code&gt;b = new int[5]&lt;/code&gt;, then &lt;code&gt;copy(a, b)&lt;/code&gt; leaves &lt;code&gt;b = [1, 2, 3, 0, 0]&lt;/code&gt; and returns &lt;code&gt;b[3 .. $]&lt;/code&gt;.</source>
          <target state="translated">将范围复制到另一个。如果 &lt;code&gt;a = [1, 2, 3]&lt;/code&gt; 和 &lt;code&gt;b = new int[5]&lt;/code&gt; ，则 &lt;code&gt;copy(a, b)&lt;/code&gt; 离开 &lt;code&gt;b = [1, 2, 3, 0, 0]&lt;/code&gt; 并返回 &lt;code&gt;b[3 .. $]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14bbc85755baa25d4951be7218064216daa78c34" translate="yes" xml:space="preserve">
          <source>Copies all environment variables into an associative array.</source>
          <target state="translated">将所有环境变量复制到一个关联数组中。</target>
        </trans-unit>
        <trans-unit id="3484c1ab3cd6af03dbf05b6c0cb7f8dbede1bc3e" translate="yes" xml:space="preserve">
          <source>Copies out the top elements of a range.</source>
          <target state="translated">复制出一个范围的顶部元素。</target>
        </trans-unit>
        <trans-unit id="3760826c7bb74f35fbcd18d73458a48731a1bc5b" translate="yes" xml:space="preserve">
          <source>Copies out the values that occur most frequently (multiplied by per-value weights) in a range of ranges.</source>
          <target state="translated">复制出一个范围内出现频率最高的数值(乘以每个数值的权重)。</target>
        </trans-unit>
        <trans-unit id="7bdd3f12e99e3b707353754ea1c09e13976482b7" translate="yes" xml:space="preserve">
          <source>Copies out the values that occur most frequently in a range of ranges.</source>
          <target state="translated">复制出在一个范围内出现频率最高的数值。</target>
        </trans-unit>
        <trans-unit id="cc55bda0ef1918898bb2580421cef4d1e592ad70" translate="yes" xml:space="preserve">
          <source>Copies the content of &lt;code&gt;source&lt;/code&gt; into &lt;code&gt;target&lt;/code&gt; and returns the remaining (unfilled) part of &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">拷贝内容 &lt;code&gt;source&lt;/code&gt; 到 &lt;code&gt;target&lt;/code&gt; ，并返回的剩余的（未填充的）部分 &lt;code&gt;target&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78798d20653e71e4060adbb2cf9963f5c8d2dbc1" translate="yes" xml:space="preserve">
          <source>Copies the top &lt;code&gt;n&lt;/code&gt; elements of the &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt;&lt;code&gt;source&lt;/code&gt; into the random-access range &lt;code&gt;target&lt;/code&gt;, where &lt;code&gt;n = target.length&lt;/code&gt;. Elements of &lt;code&gt;source&lt;/code&gt; are not touched. If &lt;code&gt;sorted&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the target is sorted. Otherwise, the target respects the &lt;a href=&quot;http://en.wikipedia.org/wiki/Binary_heap&quot;&gt;heap property&lt;/a&gt;.</source>
          <target state="translated">将&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt; &lt;code&gt;source&lt;/code&gt; 的前 &lt;code&gt;n&lt;/code&gt; 个元素复制到随机访问范围 &lt;code&gt;target&lt;/code&gt; 中，其中 &lt;code&gt;n = target.length&lt;/code&gt; 。 &lt;code&gt;source&lt;/code&gt; 元素没有被触及。如果 &lt;code&gt;sorted&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，则对目标进行排序。否则，目标将尊重&lt;a href=&quot;http://en.wikipedia.org/wiki/Binary_heap&quot;&gt;heap属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8909a2f89d37e4a1395c4735e8c64cffa4be2dd" translate="yes" xml:space="preserve">
          <source>Copies the top &lt;code&gt;n&lt;/code&gt; elements of the &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt;&lt;code&gt;source&lt;/code&gt; into the random-access range &lt;code&gt;target&lt;/code&gt;, where &lt;code&gt;n = target.length&lt;/code&gt;. Elements of &lt;code&gt;source&lt;/code&gt; are not touched. If &lt;code&gt;sorted&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the target is sorted. Otherwise, the target respects the &lt;a href=&quot;https://en.wikipedia.org/wiki/Binary_heap&quot;&gt;heap property&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c860f91e1096880f98894442e0fd5b51861a8938" translate="yes" xml:space="preserve">
          <source>Copies type qualifiers from &lt;code&gt;FromType&lt;/code&gt; to &lt;code&gt;ToType&lt;/code&gt;.</source>
          <target state="translated">将类型限定符从 &lt;code&gt;FromType&lt;/code&gt; 复制到 &lt;code&gt;ToType&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f831e18f3d39d06a4db85c2a93c55cd8de3583f9" translate="yes" xml:space="preserve">
          <source>Coptic</source>
          <target state="translated">Coptic</target>
        </trans-unit>
        <trans-unit id="942537a642285809db23368aa138b752dec2796c" translate="yes" xml:space="preserve">
          <source>Copy Constructor Attributes</source>
          <target state="translated">复制构造函数属性</target>
        </trans-unit>
        <trans-unit id="709184dfbdae79b767c073438461d5232cfaf826" translate="yes" xml:space="preserve">
          <source>Copy a list and return it.</source>
          <target state="translated">复制一个列表并返回。</target>
        </trans-unit>
        <trans-unit id="cd1c2a586ccbd243219ac10eddf70c09e31d365c" translate="yes" xml:space="preserve">
          <source>Copy construction</source>
          <target state="translated">拷贝建设</target>
        </trans-unit>
        <trans-unit id="37418ac4b9973316ffcd94559dc007884df26d17" translate="yes" xml:space="preserve">
          <source>Copy constructors are used to initialize a &lt;code&gt;struct&lt;/code&gt; instance from another &lt;code&gt;struct&lt;/code&gt; of the same type.</source>
          <target state="translated">复制构造函数用于从另一个相同类型的 &lt;code&gt;struct&lt;/code&gt; 初始化一个 &lt;code&gt;struct&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="320779b333b853c0722a1290050d477167e8a078" translate="yes" xml:space="preserve">
          <source>Copy file &lt;code&gt;from&lt;/code&gt; to file &lt;code&gt;to&lt;/code&gt;. File timestamps are preserved. File attributes are preserved, if &lt;code&gt;preserve&lt;/code&gt; equals &lt;code&gt;Yes.preserveAttributes&lt;/code&gt;. On Windows only &lt;code&gt;Yes.preserveAttributes&lt;/code&gt; (the default on Windows) is supported. If the target file exists, it is overwritten.</source>
          <target state="translated">将文件 &lt;code&gt;from&lt;/code&gt; 复制到文件 &lt;code&gt;to&lt;/code&gt; 。文件时间戳会保留。如果 &lt;code&gt;preserve&lt;/code&gt; 等于 &lt;code&gt;Yes.preserveAttributes&lt;/code&gt; ，则保留文件属性。在Windows上仅支持 &lt;code&gt;Yes.preserveAttributes&lt;/code&gt; （Windows上的默认设置）。如果目标文件存在，则将其覆盖。</target>
        </trans-unit>
        <trans-unit id="6adfec0ea49b245d49516253d1dd309df3c674d0" translate="yes" xml:space="preserve">
          <source>Copy list of pointers into an array of pointers.</source>
          <target state="translated">将指针列表复制到一个指针数组中。</target>
        </trans-unit>
        <trans-unit id="308a306712a72a68760a831c427ff9a7b6f477e8" translate="yes" xml:space="preserve">
          <source>Copy of pContext passed to s_r_g_c()</source>
          <target state="translated">传递给s_r_g_c()的pContext的副本。</target>
        </trans-unit>
        <trans-unit id="a8fcd23e55300e52517fa8bcab8fa048a94546e8" translate="yes" xml:space="preserve">
          <source>Copy the AST for Initializer.</source>
          <target state="translated">复制初始化器的AST。</target>
        </trans-unit>
        <trans-unit id="a9b2e4441cb240ca98a4ab28279101e86791c233" translate="yes" xml:space="preserve">
          <source>Copy the content of &lt;code&gt;src&lt;/code&gt; into a C-string ('\0' terminated) then call &lt;code&gt;dg&lt;/code&gt;</source>
          <target state="translated">将 &lt;code&gt;src&lt;/code&gt; 的内容复制到C字符串（以'\ 0'终止）中，然后调用 &lt;code&gt;dg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b95b3aef1bd39e43db4216e5417954c43df1366d" translate="yes" xml:space="preserve">
          <source>Copy the syntax. Used for template instantiations. If s is NULL, allocate the new object, otherwise fill it in.</source>
          <target state="translated">复制语法。用于模板实例化。如果s为NULL,则分配新对象,否则填入。</target>
        </trans-unit>
        <trans-unit id="19a4ab4fb21f129930562e73dc3fbf182a5d9262" translate="yes" xml:space="preserve">
          <source>CopyTypeQualifiers!(ElementType!String, dchar)[] &lt;strong id=&quot;array&quot;&gt;array&lt;/strong&gt;(String)(scope String str)</source>
          <target state="translated">CopyTypeQualifiers!(ElementType!String, dchar)[] &lt;strong id=&quot;array&quot;&gt;array&lt;/strong&gt;(String)(scope String str)</target>
        </trans-unit>
        <trans-unit id="8ec1721ef2b902c8de7cb0d0aa34612ec83401fd" translate="yes" xml:space="preserve">
          <source>Copying of this struct is disabled, since it would provide no useful semantics. If you want to pass this struct around, you should do so by reference or pointer.</source>
          <target state="translated">这个结构的复制是被禁止的,因为它不会提供任何有用的语义。如果你想把这个结构传给别人,你应该通过引用或指针来实现。</target>
        </trans-unit>
        <trans-unit id="b9e302476e5802312f92d2000e1d7eb281d3f5c6" translate="yes" xml:space="preserve">
          <source>Copying one &lt;code&gt;File&lt;/code&gt; object to another results in the two &lt;code&gt;File&lt;/code&gt; objects referring to the same underlying file.</source>
          <target state="translated">将一个 &lt;code&gt;File&lt;/code&gt; 对象复制到另一个File对象将导致两个 &lt;code&gt;File&lt;/code&gt; 对象引用同一基础文件。</target>
        </trans-unit>
        <trans-unit id="e9a652bd968ffd57a4235b12a1e05a73da8e344b" translate="yes" xml:space="preserve">
          <source>Copying range &lt;code&gt;E&lt;/code&gt; into &lt;code&gt;R&lt;/code&gt;.</source>
          <target state="translated">将范围 &lt;code&gt;E&lt;/code&gt; 复制到 &lt;code&gt;R&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="9c490d0555e01fccc566b2049a123406254aec4e" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1998 - 2010, Daniel Stenberg, &amp;lt;daniel@haxx.se&amp;gt;, et al.</source>
          <target state="translated">版权（C）1998-2010，Daniel Stenberg，&amp;lt;daniel@haxx.se&amp;gt;等。</target>
        </trans-unit>
        <trans-unit id="d7fd2f0b0b062e7925bd7e80f9edff1469e8c0cd" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2018-2019 by The D Language Foundation, All Rights Reserved</source>
          <target state="translated">Copyright (C)2018-2019 by The D Language Foundation,All Rights Reserved.</target>
        </trans-unit>
        <trans-unit id="791e6eab1ad061b18a1d6efc93a77ad535bf0203" translate="yes" xml:space="preserve">
          <source>Copyright Digital Mars 2007 - 2010.</source>
          <target state="translated">Copyright Digital Mars 2007-2010.</target>
        </trans-unit>
        <trans-unit id="4671543319eb1a3e40086a095380b9f58bb42d23" translate="yes" xml:space="preserve">
          <source>Copyright:</source>
          <target state="translated">Copyright:</target>
        </trans-unit>
        <trans-unit id="c1c6068dcf095f0b88f5e50f1dfe0135b6190c47" translate="yes" xml:space="preserve">
          <source>Core allocator objects that interface with D's garbage collected heap (&lt;a href=&quot;std_experimental_allocator_gc_allocator&quot;&gt;&lt;code&gt;std.experimental.allocator.gc_allocator&lt;/code&gt;&lt;/a&gt;), the C &lt;code&gt;malloc&lt;/code&gt; family (&lt;a href=&quot;std_experimental_allocator_mallocator&quot;&gt;&lt;code&gt;std.experimental.allocator.mallocator&lt;/code&gt;&lt;/a&gt;), and the OS (&lt;a href=&quot;std_experimental_allocator_mmap_allocator&quot;&gt;&lt;code&gt;std.experimental.allocator.mmap_allocator&lt;/code&gt;&lt;/a&gt;). Most custom allocators would ultimately obtain memory from one of these core allocators.</source>
          <target state="translated">与D的垃圾收集堆（&lt;a href=&quot;std_experimental_allocator_gc_allocator&quot;&gt; &lt;code&gt;std.experimental.allocator.gc_allocator&lt;/code&gt; &lt;/a&gt;），C &lt;code&gt;malloc&lt;/code&gt; 系列（&lt;a href=&quot;std_experimental_allocator_mallocator&quot;&gt; &lt;code&gt;std.experimental.allocator.mallocator&lt;/code&gt; &lt;/a&gt;）和OS（&lt;a href=&quot;std_experimental_allocator_mmap_allocator&quot;&gt; &lt;code&gt;std.experimental.allocator.mmap_allocator&lt;/code&gt; &lt;/a&gt;）接口的核心分配器对象。大多数自定义分配器最终都会从这些核心分配器之一获取内存。</target>
        </trans-unit>
        <trans-unit id="7b820d5ee9cbef08cc0675cf59c9e9666eb11879" translate="yes" xml:space="preserve">
          <source>Core language definitions. Automatically imported.</source>
          <target state="translated">核心语言定义。自动导入。</target>
        </trans-unit>
        <trans-unit id="1d6abcd3d5aab81c8555d7d3eaeff9737c1eea01" translate="yes" xml:space="preserve">
          <source>Correctly matching the format specifier to the D type is necessary. The D compiler recognizes the printf formats and diagnoses mismatches with the supplied arguments. The specification for the formats used by D is the C99 specification 7.19.6.1.</source>
          <target state="translated">正确地将格式指定器与D类型相匹配是必要的,D编译器可以识别printf格式,并诊断出与提供的参数不匹配的情况。D编译器可以识别printf格式,并诊断出与提供的参数不匹配的情况。D使用的格式规范是C99规范7.19.6.1。</target>
        </trans-unit>
        <trans-unit id="76cb799cd1522d52368e0a75ed33732541a23b3a" translate="yes" xml:space="preserve">
          <source>Could not find an MX record for this domain but an A-record does exist</source>
          <target state="translated">找不到该域名的MX记录,但确实存在一个A记录。</target>
        </trans-unit>
        <trans-unit id="08c19a8f1d0d59ad9d116a7f6a492aba8099b5e8" translate="yes" xml:space="preserve">
          <source>Could not find an MX record or an A-record for this domain</source>
          <target state="translated">找不到该域名的MX记录或A记录。</target>
        </trans-unit>
        <trans-unit id="0939fecded0f0c9d546d71641c3908e28d8f44d4" translate="yes" xml:space="preserve">
          <source>Count The Number Of Rows Modified</source>
          <target state="translated">计算修改的行数</target>
        </trans-unit>
        <trans-unit id="8d5ade84a80435c2bfa6f6177104e09a64281c70" translate="yes" xml:space="preserve">
          <source>Count all the possible substrings of length 2</source>
          <target state="translated">计数所有可能的长度为2的子串。</target>
        </trans-unit>
        <trans-unit id="8be0facbf0a137c1553dcd917b58aac8fddcb84c" translate="yes" xml:space="preserve">
          <source>Count up and return number of items in list.</source>
          <target state="translated">计算并返回列表中的项目数。</target>
        </trans-unit>
        <trans-unit id="e564d45aaad122a5874f0bff4352287fa9c20217" translate="yes" xml:space="preserve">
          <source>Counting Rod Numerals</source>
          <target state="translated">数杆数字</target>
        </trans-unit>
        <trans-unit id="173f9b130d44a68c96e425930a40f7564c0cd832" translate="yes" xml:space="preserve">
          <source>Counts all the set bits in the &lt;code&gt;BitArray&lt;/code&gt;</source>
          <target state="translated">计算 &lt;code&gt;BitArray&lt;/code&gt; 中的所有设置位</target>
        </trans-unit>
        <trans-unit id="7ce36e691e55ca1534110cdf92701208325abb85" translate="yes" xml:space="preserve">
          <source>Counts elements in the given &lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;forward range&lt;/a&gt; until the given predicate is true for one of the given &lt;code&gt;needles&lt;/code&gt;.</source>
          <target state="translated">在给定的计数元件&lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;前进范围&lt;/a&gt;，直到给定谓词是对于给定的一个真正的 &lt;code&gt;needles&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="036b8b1123e79381082e175aa22db7cf31f3e5e1" translate="yes" xml:space="preserve">
          <source>Counts elements that are equal to a specified value or satisfy a predicate. &lt;code&gt;count([1, 2, 1], 1)&lt;/code&gt; returns &lt;code&gt;2&lt;/code&gt; and &lt;code&gt;count!&quot;a &amp;lt; 0&quot;([1, -3, 0])&lt;/code&gt; returns &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">计算等于指定值或满足谓词的元素。 &lt;code&gt;count([1, 2, 1], 1)&lt;/code&gt; 返回 &lt;code&gt;2&lt;/code&gt; ， &lt;code&gt;count!&quot;a &amp;lt; 0&quot;([1, -3, 0])&lt;/code&gt; 返回 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ccf0dfb24dfd16253b0f3c9addacb80ba1861801" translate="yes" xml:space="preserve">
          <source>Counts the number of calls to &lt;code&gt;alignedAllocate&lt;/code&gt; that succeeded, i.e. they returned a block as large as requested. (N.B. requests for zero bytes count as successful.)</source>
          <target state="translated">计算成功调用 &lt;code&gt;alignedAllocate&lt;/code&gt; 的调用数，即，它们返回了一个与请求一样大的块。（NB请求零字节视为成功。）</target>
        </trans-unit>
        <trans-unit id="89e430aecb0bc14a42573f4e6f98203eeb3b69aa" translate="yes" xml:space="preserve">
          <source>Counts the number of calls to &lt;code&gt;alignedAllocate&lt;/code&gt;. All calls are counted, including requests for zero bytes or failed requests.</source>
          <target state="translated">计算对 &lt;code&gt;alignedAllocate&lt;/code&gt; 的调用次数。计算所有呼叫，包括零字节请求或失败请求。</target>
        </trans-unit>
        <trans-unit id="33412aaca6b7b7660ddf82c644a97ea07b39f016" translate="yes" xml:space="preserve">
          <source>Counts the number of calls to &lt;code&gt;allocate&lt;/code&gt; that succeeded, i.e. they returned a block as large as requested. (N.B. requests for zero bytes count as successful.)</source>
          <target state="translated">计算成功进行 &lt;code&gt;allocate&lt;/code&gt; 的调用次数，即，它们返回了一个与请求一样大的块。（NB请求零字节视为成功。）</target>
        </trans-unit>
        <trans-unit id="b35cbf7d07dd6ee024a9bcd8d87883db36546721" translate="yes" xml:space="preserve">
          <source>Counts the number of calls to &lt;code&gt;allocate&lt;/code&gt;. All calls are counted, including requests for zero bytes or failed requests.</source>
          <target state="translated">计算要 &lt;code&gt;allocate&lt;/code&gt; 的呼叫数。计算所有呼叫，包括零字节请求或失败请求。</target>
        </trans-unit>
        <trans-unit id="3219b291728cf96157a69f99f29e801ca560a91d" translate="yes" xml:space="preserve">
          <source>Counts the number of calls to &lt;code&gt;deallocate&lt;/code&gt;.</source>
          <target state="translated">计算要 &lt;code&gt;deallocate&lt;/code&gt; 的调用次数。</target>
        </trans-unit>
        <trans-unit id="5961c3ed47a6ea7e033c8af93daa0abd5528a016" translate="yes" xml:space="preserve">
          <source>Counts the number of calls to &lt;code&gt;deallocateAll&lt;/code&gt;.</source>
          <target state="translated">计算对 &lt;code&gt;deallocateAll&lt;/code&gt; 的调用次数。</target>
        </trans-unit>
        <trans-unit id="2879654a173945a9cba0580571953a4dc0a97302" translate="yes" xml:space="preserve">
          <source>Counts the number of calls to &lt;code&gt;expand&lt;/code&gt; that resulted in a successful expansion.</source>
          <target state="translated">计数呼叫的数量来 &lt;code&gt;expand&lt;/code&gt; ，导致一个成功的扩张。</target>
        </trans-unit>
        <trans-unit id="5c5af41f873e7913601ca76a10cc79cc68d7c141" translate="yes" xml:space="preserve">
          <source>Counts the number of calls to &lt;code&gt;expand&lt;/code&gt;, regardless of arguments or result.</source>
          <target state="translated">计算 &lt;code&gt;expand&lt;/code&gt; 的调用次数，无论参数或结果如何。</target>
        </trans-unit>
        <trans-unit id="09d92465f887e970b05288ec88d3e63ccb6de9ca" translate="yes" xml:space="preserve">
          <source>Counts the number of calls to &lt;code&gt;owns&lt;/code&gt;.</source>
          <target state="translated">计算对自己 &lt;code&gt;owns&lt;/code&gt; 的呼叫的数量。</target>
        </trans-unit>
        <trans-unit id="1afc421ebe17abffb879f6aab12a15ef83d68dd4" translate="yes" xml:space="preserve">
          <source>Counts the number of calls to &lt;code&gt;reallocate&lt;/code&gt; that resulted in an in-place reallocation (no memory moved). If this number is close to the total number of reallocations, that indicates the allocator finds room at the current block's end in a large fraction of the cases, but also that internal fragmentation may be high (the size of the unit of allocation is large compared to the typical allocation size of the application).</source>
          <target state="translated">计数调用的次数 &lt;code&gt;reallocate&lt;/code&gt; ，导致就地重新分配（无记忆移动）。如果该数目接近于重新分配的总数，则表明分配器在大部分情况下在当前块的末端找到了空间，而且内部碎片可能很大（与之相比分配单元的大小很大）到应用程序的典型分配大小）。</target>
        </trans-unit>
        <trans-unit id="820537dc16117e7850cbde5ae4bfce6bca7be8ed" translate="yes" xml:space="preserve">
          <source>Counts the number of calls to &lt;code&gt;reallocate&lt;/code&gt; that succeeded. (Reallocations to zero bytes count as successful.)</source>
          <target state="translated">计算成功 &lt;code&gt;reallocate&lt;/code&gt; 的调用数。（将零字节重新分配视为成功。）</target>
        </trans-unit>
        <trans-unit id="bc15833a702b66d803c03a8019110e6825ca2625" translate="yes" xml:space="preserve">
          <source>Counts the number of calls to &lt;code&gt;reallocate&lt;/code&gt;, regardless of arguments or result.</source>
          <target state="translated">计算要 &lt;code&gt;reallocate&lt;/code&gt; 的调用数，而不考虑参数或结果。</target>
        </trans-unit>
        <trans-unit id="c12f5fb99ca2154f2dcfa85d6b67e6da2e844b9b" translate="yes" xml:space="preserve">
          <source>Covariant means that 'this' can substitute for 't', i.e. a pure function is a match for an impure type.</source>
          <target state="translated">Covariant意味着'this'可以代替't',即一个纯函数是一个不纯类型的匹配。</target>
        </trans-unit>
        <trans-unit id="d95e70de908fe667a8d90b4c2c9835cc65a2bc51" translate="yes" xml:space="preserve">
          <source>Covariant return types are supported, which means that the overriding function in a derived class can return a type that is derived from the type returned by the overridden function:</source>
          <target state="translated">支持共变返回类型,这意味着派生类中的覆盖函数可以返回一个由覆盖函数返回的类型派生的类型。</target>
        </trans-unit>
        <trans-unit id="80e13549b47a4dfc6e898a282920091b209c78be" translate="yes" xml:space="preserve">
          <source>Coverage</source>
          <target state="translated">Coverage</target>
        </trans-unit>
        <trans-unit id="134b318951a0e9fd4c15b2f4d1bdf343d3855913" translate="yes" xml:space="preserve">
          <source>Covers a given range &lt;code&gt;r&lt;/code&gt; in a random manner, i.e. goes through each element of &lt;code&gt;r&lt;/code&gt; once and only once, just in a random order. &lt;code&gt;r&lt;/code&gt; must be a random-access range with length.</source>
          <target state="translated">以随机的方式覆盖给定的范围 &lt;code&gt;r&lt;/code&gt; ，即以随机顺序一次且仅一次遍历 &lt;code&gt;r&lt;/code&gt; 的每个元素。 &lt;code&gt;r&lt;/code&gt; 必须是具有长度的随机访问范围。</target>
        </trans-unit>
        <trans-unit id="80b8fd5910e5321eafb27f61b9891d1fcfabc69f" translate="yes" xml:space="preserve">
          <source>CppTypeInfo &lt;code&gt;sti&lt;/code&gt;</source>
          <target state="translated">CppTypeInfo &lt;code&gt;sti&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49b9f541df9267a1e81a2e1318c39164b9049cf8" translate="yes" xml:space="preserve">
          <source>Create A New Dynamic String Object</source>
          <target state="translated">创建一个新的动态字符串对象</target>
        </trans-unit>
        <trans-unit id="f738b7c71ee4fcfa212cb684acc179c459d0f67c" translate="yes" xml:space="preserve">
          <source>Create Or Redefine SQL Functions</source>
          <target state="translated">创建或重新定义SQL函数</target>
        </trans-unit>
        <trans-unit id="ece1dfb335b9491989584a0b93ef182f523f9560" translate="yes" xml:space="preserve">
          <source>Create RTInfo for type T</source>
          <target state="translated">为类型T创建RTInfo</target>
        </trans-unit>
        <trans-unit id="d375db3a1f3f34950378c2942ec463da134ac351" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;KRRegion&lt;/code&gt;. If &lt;code&gt;ParentAllocator&lt;/code&gt; is not &lt;code&gt;NullAllocator&lt;/code&gt;, &lt;code&gt;KRRegion&lt;/code&gt;'s destructor will call &lt;code&gt;parent.deallocate&lt;/code&gt;.</source>
          <target state="translated">创建一个 &lt;code&gt;KRRegion&lt;/code&gt; 。如果 &lt;code&gt;ParentAllocator&lt;/code&gt; 不是 &lt;code&gt;NullAllocator&lt;/code&gt; ，则 &lt;code&gt;KRRegion&lt;/code&gt; 的析构函数将调用 &lt;code&gt;parent.deallocate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f87dab8d862d0e2f326eb6f6f98422949344a463" translate="yes" xml:space="preserve">
          <source>Create a SocketSet with a specific initial capacity (defaults to &lt;code&gt;FD_SETSIZE&lt;/code&gt;, the system's default capacity).</source>
          <target state="translated">创建具有特定初始容量（默认为 &lt;code&gt;FD_SETSIZE&lt;/code&gt; ，系统的默认容量）的SocketSet 。</target>
        </trans-unit>
        <trans-unit id="6115e98c8527cdbd982abe785b7a57087cb4c9e9" translate="yes" xml:space="preserve">
          <source>Create a bitfield pack of eight bits, which fit in one ubyte. The bitfields are allocated starting from the least significant bit, i.e. x occupies the two least significant bits of the bitfields storage.</source>
          <target state="translated">创建一个八位的位场包,可以容纳在一个ubyte中。位域从最不重要的位开始分配,即x占据位域存储的两个最不重要的位。</target>
        </trans-unit>
        <trans-unit id="839d59c094905e9232ab8c88f3cdc905e73f062f" translate="yes" xml:space="preserve">
          <source>Create a blocking socket using the parameters from the specified &lt;code&gt;AddressInfo&lt;/code&gt; structure.</source>
          <target state="translated">使用指定的 &lt;code&gt;AddressInfo&lt;/code&gt; 结构中的参数创建一个阻塞套接字。</target>
        </trans-unit>
        <trans-unit id="75ae856d1b4059fd4c939c4490a4432d4ce09656" translate="yes" xml:space="preserve">
          <source>Create a blocking socket. If a single protocol type exists to support this socket type within the address family, the &lt;code&gt;ProtocolType&lt;/code&gt; may be omitted.</source>
          <target state="translated">创建一个阻止套接字。如果在地址族中存在支持该套接字类型的单个协议类型，则可以省略 &lt;code&gt;ProtocolType&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d5c91e7ca2204837ccbc8674326fb67dea000b39" translate="yes" xml:space="preserve">
          <source>Create a deep copy of &lt;code&gt;this&lt;/code&gt;</source>
          <target state="translated">创建的深层复制 &lt;code&gt;this&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2eb536cb42ec7dabddf6284395324e96212d115e" translate="yes" xml:space="preserve">
          <source>Create a dynamic array of the same size and copy the contents of the array into it. The copy is typed as being immutable. If this conversion is invalid the call will not compile.</source>
          <target state="translated">创建一个相同大小的动态数组,并将数组的内容复制到其中。这个拷贝的类型是不可变的。如果这种转换是无效的,调用将无法编译。</target>
        </trans-unit>
        <trans-unit id="8ddf0e62c5224c606a534ff3f1eb6d8fe747981d" translate="yes" xml:space="preserve">
          <source>Create a dynamic array of the same size and copy the contents of the array into it. The copy will have any immutability or const stripped. If this conversion is invalid the call will not compile.</source>
          <target state="translated">创建一个相同大小的动态数组,并将数组的内容复制到其中。复制的内容将有任何不可变性或const剥离。如果这种转换是无效的,调用将无法编译。</target>
        </trans-unit>
        <trans-unit id="341accefd95b61afa9893db29309cc44315c3a2a" translate="yes" xml:space="preserve">
          <source>Create a horizontal rule by adding a line containing three or more asterisks, underscores or hyphens:</source>
          <target state="translated">通过添加包含三个或更多星号、下划线或连字符的行来创建一个水平规则。</target>
        </trans-unit>
        <trans-unit id="e967753a33c5c7c7aa1e8f4422915e9dfd50d92c" translate="yes" xml:space="preserve">
          <source>Create a new associative array of the same size and copy the contents of the associative array into it.</source>
          <target state="translated">创建一个相同大小的新关联数组,并将关联数组的内容复制到其中。</target>
        </trans-unit>
        <trans-unit id="4c9de552758093961aee77c1dae8b1dd3d177f54" translate="yes" xml:space="preserve">
          <source>Create a new scope from sc. semantic, semantic2 and semantic3 will use this for aggregate members.</source>
          <target state="translated">semantic、semantic2和semantic3将使用它作为集合成员。</target>
        </trans-unit>
        <trans-unit id="765b47ab87cb7a6d03987e9ff17e776ff00c1f20" translate="yes" xml:space="preserve">
          <source>Create a new scope if one or more given attributes are different from the sc's. If the returned scope != sc, the caller should pop the scope after it used.</source>
          <target state="translated">如果一个或多个给定属性与sc的属性不同,则创建一个新的作用域。如果返回的作用域 !=sc,调用者应该在它使用后弹出作用域。</target>
        </trans-unit>
        <trans-unit id="0af330de1bfdb44bc3db78edbb6764a903bd5a6f" translate="yes" xml:space="preserve">
          <source>Create a new thread for executing this &lt;code&gt;Task&lt;/code&gt;, execute it in the newly created thread, then terminate the thread. This can be used for future/promise parallelism. An explicit priority may be given to the &lt;code&gt;Task&lt;/code&gt;. If one is provided, its value is forwarded to &lt;code&gt;core.thread.Thread.priority&lt;/code&gt;. See &lt;a href=&quot;std_parallelism#task&quot;&gt;&lt;code&gt;std.parallelism.task&lt;/code&gt;&lt;/a&gt; for usage example.</source>
          <target state="translated">创建一个用于执行此 &lt;code&gt;Task&lt;/code&gt; 的新线程，在新创建的线程中执行它，然后终止该线程。这可以用于将来/承诺的并行性。可以给 &lt;code&gt;Task&lt;/code&gt; 明确的优先级。如果提供了一个，则其值将转发到 &lt;code&gt;core.thread.Thread.priority&lt;/code&gt; 。有关用法示例，请参见&lt;a href=&quot;std_parallelism#task&quot;&gt; &lt;code&gt;std.parallelism.task&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c71ba660ac8a783c6ab9eb2e83d4cb7a0caf6e05" translate="yes" xml:space="preserve">
          <source>Create a quiet NAN, storing an integer inside the payload.</source>
          <target state="translated">创建一个安静的NAN,在有效载荷内存储一个整数。</target>
        </trans-unit>
        <trans-unit id="b0230dbb481a6cc7524fc6a1776a286525afecbb" translate="yes" xml:space="preserve">
          <source>Create a range which repeats one value.</source>
          <target state="translated">创建一个重复一个值的范围。</target>
        </trans-unit>
        <trans-unit id="05cea08ac76b777160923ee7d8caa033b1e3267d" translate="yes" xml:space="preserve">
          <source>Create a reference to another dt.</source>
          <target state="translated">创建一个对另一个dt的引用。</target>
        </trans-unit>
        <trans-unit id="956893df969cb511fe8cb0a535aa0c05eb7c1e44" translate="yes" xml:space="preserve">
          <source>Create a scope for the parameters of the TemplateInstance &lt;code&gt;ti&lt;/code&gt; in the parent scope sc from the ScopeDsymbol paramsym.</source>
          <target state="translated">从ScopeDsymbol paramsym为父作用域sc 中的TemplateInstance &lt;code&gt;ti&lt;/code&gt; 的参数创建一个作用域。</target>
        </trans-unit>
        <trans-unit id="6243527d15de44e02eb522bb38a9f03d7ab0c9b3" translate="yes" xml:space="preserve">
          <source>Create a thread not under control of the runtime, i.e. TLS module constructors are not run and the GC does not suspend it during a collection.</source>
          <target state="translated">创建一个不受运行时控制的线程,即TLS模块构造函数不运行,GC也不会在收集过程中暂停它。</target>
        </trans-unit>
        <trans-unit id="348e3661ccba88f4db846a336ac30d6c05131e6d" translate="yes" xml:space="preserve">
          <source>Create a unary or binary function from a string. Most often used when defining algorithms on ranges.</source>
          <target state="translated">从一个字符串中创建一个单利或二进制函数。最常用于定义范围的算法。</target>
        </trans-unit>
        <trans-unit id="959f9dde6d0a81fc23a2588b08ba6db6bae1876b" translate="yes" xml:space="preserve">
          <source>Create a vector type.</source>
          <target state="translated">创建一个矢量类型。</target>
        </trans-unit>
        <trans-unit id="9572cfad6b3211fcd4b15b756e271a21d6de1572" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;Fft&lt;/code&gt; object for computing fast Fourier transforms of power of two sizes of &lt;code&gt;size&lt;/code&gt; or smaller. &lt;code&gt;size&lt;/code&gt; must be a power of two.</source>
          <target state="translated">创建一个 &lt;code&gt;Fft&lt;/code&gt; 对象，以计算两个 &lt;code&gt;size&lt;/code&gt; 或更小的大小的幂的快速傅里叶变换。 &lt;code&gt;size&lt;/code&gt; 必须是2的幂。</target>
        </trans-unit>
        <trans-unit id="d6650f16211e259caf5365253a1f7216d8f5171d" translate="yes" xml:space="preserve">
          <source>Create an array of &lt;code&gt;T&lt;/code&gt; with &lt;code&gt;length&lt;/code&gt; elements using &lt;code&gt;alloc&lt;/code&gt;. The array is either default-initialized, filled with copies of &lt;code&gt;init&lt;/code&gt;, or initialized with values fetched from &lt;code&gt;range&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;alloc&lt;/code&gt; 创建一个带有 &lt;code&gt;length&lt;/code&gt; 元素的 &lt;code&gt;T&lt;/code&gt; 数组。该数组是默认初始化的，填充有 &lt;code&gt;init&lt;/code&gt; 的副本，或者是使用从 &lt;code&gt;range&lt;/code&gt; 获取的值初始化的。</target>
        </trans-unit>
        <trans-unit id="526001f9a9b94b9fd00bba4fb0e338ddc47b01cf" translate="yes" xml:space="preserve">
          <source>Create an array of &lt;code&gt;T&lt;/code&gt; with &lt;code&gt;length&lt;/code&gt; elements. The array is either default-initialized, filled with copies of &lt;code&gt;init&lt;/code&gt;, or initialized with values fetched from &lt;code&gt;range&lt;/code&gt;.</source>
          <target state="translated">创建一个带有 &lt;code&gt;length&lt;/code&gt; 元素的 &lt;code&gt;T&lt;/code&gt; 数组。该数组是默认初始化的，填充有 &lt;code&gt;init&lt;/code&gt; 的副本，或者是使用从 &lt;code&gt;range&lt;/code&gt; 获取的值初始化的。</target>
        </trans-unit>
        <trans-unit id="afd41877e2d03683b62c3966d07b3578b44fa83c" translate="yes" xml:space="preserve">
          <source>Create an array of enumerated values</source>
          <target state="translated">创建一个枚举值的数组</target>
        </trans-unit>
        <trans-unit id="d624d8319aaa043a0e0bcda5eb8c6692ae1c99ad" translate="yes" xml:space="preserve">
          <source>Create an array of random numbers using range functions and UFCS</source>
          <target state="translated">使用范围函数和UFCS创建一个随机数组。</target>
        </trans-unit>
        <trans-unit id="14ef15a3d735dc58c104a58836a40a871675370e" translate="yes" xml:space="preserve">
          <source>Create an identifier in the string table.</source>
          <target state="translated">在字符串表中创建一个标识符。</target>
        </trans-unit>
        <trans-unit id="5f15bb6174bb0ae0102d8f77548b958b264eca0f" translate="yes" xml:space="preserve">
          <source>Create inclusive destructor for struct/class by aggregating all the destructors in dtors[] with the destructors for all the members.</source>
          <target state="translated">通过聚合dtors[]中的所有destructors和所有成员的destructors,为struct/class创建包容性的destructor。</target>
        </trans-unit>
        <trans-unit id="06412ef3cdbe60fb294e12eeae1a8f44ed3439af" translate="yes" xml:space="preserve">
          <source>Create inclusive invariant for struct/class by aggregating all the invariants in invs[]. void __invariant() const [pure nothrow @trusted] { invs[0](), invs[1](), ...; }</source>
          <target state="translated">void __invariant()const [pure nothrow @trusted]{invs[0](),invs[1](),...;}。</target>
        </trans-unit>
        <trans-unit id="86c9df773642e6041f2232b04da0147162423a70" translate="yes" xml:space="preserve">
          <source>Create instance of Object represented by 'this'.</source>
          <target state="translated">创建由'this'代表的Object实例。</target>
        </trans-unit>
        <trans-unit id="8f91dcf5e8a8544b29b8c109ab40e97ebba994da" translate="yes" xml:space="preserve">
          <source>Create instance of class specified by the fully qualified name classname. The class must either have no constructors or have a default constructor.</source>
          <target state="translated">创建由全称类名指定的类的实例。这个类必须没有构造函数或者有一个默认的构造函数。</target>
        </trans-unit>
        <trans-unit id="3aae95e6ec02b6e5eb22379134870bf1f1adbec6" translate="yes" xml:space="preserve">
          <source>Create link to existing list, that is, share the list with somebody else.</source>
          <target state="translated">创建现有列表的链接,也就是与别人分享列表。</target>
        </trans-unit>
        <trans-unit id="aeec46bd186170bc95905007868367a92e1a1373" translate="yes" xml:space="preserve">
          <source>Create reference to s+offset</source>
          <target state="translated">创建对s+offset的引用</target>
        </trans-unit>
        <trans-unit id="e69371dea3bc5d5b1ce101edd514aa4b5a3a2c33" translate="yes" xml:space="preserve">
          <source>Create the static initializer for the struct/class.</source>
          <target state="translated">为结构/类创建静态初始化器。</target>
        </trans-unit>
        <trans-unit id="e2c8a09dc1433291cd9bc6fd5786498693b64e21" translate="yes" xml:space="preserve">
          <source>CreateFolder &lt;code&gt;createFileNameFolder&lt;/code&gt;</source>
          <target state="translated">CreateFolder &lt;code&gt;createFileNameFolder&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e34f80c232756fb185e577f5d37547da03fc5dc5" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from a string with the format YYYY-MM-DD. Whitespace is stripped from the given string.</source>
          <target state="translated">根据格式为YYYY-MM-DD的字符串创建&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;。从给定的字符串中去除了空格。</target>
        </trans-unit>
        <trans-unit id="ddc6e946bb7d665d5d024eddf994d6bb9a983bdc" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from a string with the format YYYY-Mon-DD. Whitespace is stripped from the given string.</source>
          <target state="translated">根据格式为YYYY-Mon-DD的字符串创建&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;。从给定的字符串中去除了空格。</target>
        </trans-unit>
        <trans-unit id="b0e20c926289335859e6d97ff01950b27ec62dd2" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from a string with the format YYYYMMDD. Whitespace is stripped from the given string.</source>
          <target state="translated">根据格式为YYYYMMDD的字符串创建&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;。从给定的字符串中去除了空格。</target>
        </trans-unit>
        <trans-unit id="d3091af4b2ee859443ab3c8a53bebcda60ddb979" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; from a string with the format YYYY-MM-DDTHH:MM:SS. Whitespace is stripped from the given string.</source>
          <target state="translated">从格式为YYYY-MM-DDTHH：MM：SS的字符串创建&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;。从给定的字符串中去除了空格。</target>
        </trans-unit>
        <trans-unit id="3041e4d81e36a466d1e51fa044e13c66f2d70792" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; from a string with the format YYYY-Mon-DD HH:MM:SS. Whitespace is stripped from the given string.</source>
          <target state="translated">从格式为YYYY-Mon-DD HH：MM：SS的字符串创建&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;。从给定的字符串中去除了空格。</target>
        </trans-unit>
        <trans-unit id="9dbacf39bfced8fa82e9ebe4c805f56fa4355100" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; from a string with the format YYYYMMDDTHHMMSS. Whitespace is stripped from the given string.</source>
          <target state="translated">从格式为YYYYMMDDTHHMMSS的字符串创建&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;。从给定的字符串中去除了空格。</target>
        </trans-unit>
        <trans-unit id="89d6b000a1e0072815008260d5751f430cc1bc5b" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; from a string with the format YYYY-MM-DD HH:MM:SS.FFFFFFFTZ (where F is fractional seconds is the time zone). Whitespace is stripped from the given string.</source>
          <target state="translated">创建&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;从与格式YYYY-MM-DD HH的字符串：MM：SS.FFFFFFFTZ（其中F是小数秒是时区）。从给定的字符串中去除了空格。</target>
        </trans-unit>
        <trans-unit id="25e0e1d4a091ccac9d256e34e9f9ae4e5842e2bf" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; from a string with the format YYYY-MM-DDTHH:MM:SS.FFFFFFFTZ (where F is fractional seconds is the time zone). Whitespace is stripped from the given string.</source>
          <target state="translated">创建&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;从与格式YYYY-MM-DDTHH的字符串：MM：SS.FFFFFFFTZ（其中F是小数秒是时区）。从给定的字符串中去除了空格。</target>
        </trans-unit>
        <trans-unit id="bbfa00e601500f8abcab6f8903eca2c36e737ac4" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; from a string with the format YYYYMMDDTHHMMSS.FFFFFFFTZ (where F is fractional seconds is the time zone). Whitespace is stripped from the given string.</source>
          <target state="translated">从格式为YYYYMMDDTHHMMSS.FFFFFFFTZ的字符串创建&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;（其中F是小数秒是时区）。从给定的字符串中去除了空格。</target>
        </trans-unit>
        <trans-unit id="b213f5d28de923b7220902c1697934db1c8f60d3" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;#TimeOfDay&quot;&gt;&lt;code&gt;TimeOfDay&lt;/code&gt;&lt;/a&gt; from a string with the format HH:MM:SS. Whitespace is stripped from the given string.</source>
          <target state="translated">从格式为HH：MM：SS的字符串创建&lt;a href=&quot;#TimeOfDay&quot;&gt; &lt;code&gt;TimeOfDay&lt;/code&gt; &lt;/a&gt;。从给定的字符串中去除了空格。</target>
        </trans-unit>
        <trans-unit id="96b1a32d19336613b876dcd9a105f13defae7bd7" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;#TimeOfDay&quot;&gt;&lt;code&gt;TimeOfDay&lt;/code&gt;&lt;/a&gt; from a string with the format HHMMSS. Whitespace is stripped from the given string.</source>
          <target state="translated">从格式为HHMMSS的字符串创建&lt;a href=&quot;#TimeOfDay&quot;&gt; &lt;code&gt;TimeOfDay&lt;/code&gt; &lt;/a&gt;。从给定的字符串中去除了空格。</target>
        </trans-unit>
        <trans-unit id="661f5e4bfc4e5c0b2feb77d82f632d60d90264a2" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;BitArray&lt;/code&gt; from a &lt;code&gt;bool&lt;/code&gt; array, such that &lt;code&gt;bool&lt;/code&gt; values read from left to right correspond to subsequent bits in the &lt;code&gt;BitArray&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;bool&lt;/code&gt; 数组创建一个 &lt;code&gt;BitArray&lt;/code&gt; ，以便从左到右读取的 &lt;code&gt;bool&lt;/code&gt; 值对应于 &lt;code&gt;BitArray&lt;/code&gt; 中的后续位。</target>
        </trans-unit>
        <trans-unit id="75f1a094795d835c2e6c032e474ae4ed7954f131" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;BitArray&lt;/code&gt; from the raw contents of the source array. The source array is not copied but simply acts as the underlying array of bits, which stores data as &lt;code&gt;size_t&lt;/code&gt; units.</source>
          <target state="translated">根据源数组的原始内容创建一个 &lt;code&gt;BitArray&lt;/code&gt; 。源数组不会被复制，而只是充当基础位数组，将数据存储为 &lt;code&gt;size_t&lt;/code&gt; 单位。</target>
        </trans-unit>
        <trans-unit id="91bf27933374868d67d5fe77c4446e5f6d88a641" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;Task&lt;/code&gt; on the GC heap that calls a function pointer, delegate, or class/struct with overloaded opCall.</source>
          <target state="translated">在GC堆上创建一个 &lt;code&gt;Task&lt;/code&gt; ，该任务使用重载的opCall调用函数指针，委托或类/结构。</target>
        </trans-unit>
        <trans-unit id="f4058ec66257ae48d3c3078de7f6e641a360c7cb" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;Task&lt;/code&gt; on the GC heap that calls an alias. This may be executed via &lt;code&gt;Task.executeInNewThread&lt;/code&gt; or by submitting to a &lt;a href=&quot;std_parallelism#TaskPool&quot;&gt;&lt;code&gt;std.parallelism.TaskPool&lt;/code&gt;&lt;/a&gt;. A globally accessible instance of &lt;code&gt;TaskPool&lt;/code&gt; is provided by &lt;a href=&quot;std_parallelism#taskPool&quot;&gt;&lt;code&gt;std.parallelism.taskPool&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在GC堆上创建一个调用别名的 &lt;code&gt;Task&lt;/code&gt; 。这可以通过 &lt;code&gt;Task.executeInNewThread&lt;/code&gt; 或提交给&lt;a href=&quot;std_parallelism#TaskPool&quot;&gt; &lt;code&gt;std.parallelism.TaskPool&lt;/code&gt; &lt;/a&gt;来执行。 &lt;code&gt;TaskPool&lt;/code&gt; 提供了&lt;a href=&quot;std_parallelism#taskPool&quot;&gt; &lt;code&gt;std.parallelism.taskPool&lt;/code&gt; &lt;/a&gt;可全局访问的实例。</target>
        </trans-unit>
        <trans-unit id="34e4d8ddfca04c3316cc068b4800ba69aa18ecdf" translate="yes" xml:space="preserve">
          <source>Creates a Condition variable analog for signaling.</source>
          <target state="translated">创建一个条件变量模拟信号。</target>
        </trans-unit>
        <trans-unit id="c859ea4adbfacacaab358299326fde8ee39270d1" translate="yes" xml:space="preserve">
          <source>Creates a Lexer for the source code base[begoffset..endoffset+1]. The last character, base[endoffset], must be null (0) or EOF (0x1A).</source>
          <target state="translated">为源代码 base[begoffset...endoffset+1]创建一个 Lexer。最后一个字符base[endoffset]必须为空(0)或EOF(0x1A)。</target>
        </trans-unit>
        <trans-unit id="a4043d1c472260058ff2b44188bce91464289418" translate="yes" xml:space="preserve">
          <source>Creates a bitfield pack of eight bits, which fit in one &lt;code&gt;ubyte&lt;/code&gt;. The bitfields are allocated starting from the least significant bit, i.e. x occupies the two least significant bits of the bitfields storage.</source>
          <target state="translated">创建一个八位的位字段包，它们适合一个 &lt;code&gt;ubyte&lt;/code&gt; 。从最低有效位开始分配位域，即x占用位域存储的两个最低有效位。</target>
        </trans-unit>
        <trans-unit id="22e271cc711a759e645164a6c0eb60bcdf7daa84" translate="yes" xml:space="preserve">
          <source>Creates a container of type &lt;code&gt;C&lt;/code&gt; from either another container or a range. The created container must not be a null reference even if x is empty.</source>
          <target state="translated">从另一个容器或范围创建一个类型为 &lt;code&gt;C&lt;/code&gt; 的容器。即使x为空，创建的容器也不能为null引用。</target>
        </trans-unit>
        <trans-unit id="1c88b30b91f6883b933e7785db39c6a543b98bd1" translate="yes" xml:space="preserve">
          <source>Creates a copy of a &lt;a href=&quot;#Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt; with its fields in reverse order.</source>
          <target state="translated">创建一个具有相反字段的&lt;a href=&quot;#Tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt;副本。</target>
        </trans-unit>
        <trans-unit id="eafa6a0f5a2c3f7d41c7a2a8061125f06fba9dbe" translate="yes" xml:space="preserve">
          <source>Creates a forward range whose values are defined by a mathematical recurrence relation.</source>
          <target state="translated">创建一个正向范围,其值由一个数学递归关系定义。</target>
        </trans-unit>
        <trans-unit id="f24557243bfa5bfdcb62b5e9b12d22b154537901" translate="yes" xml:space="preserve">
          <source>Creates a function that binds the first argument of a given function to a given value.</source>
          <target state="translated">创建一个函数,将给定函数的第一个参数与给定值绑定。</target>
        </trans-unit>
        <trans-unit id="bb183c0a9d71fad3327428b4e288c762c0601c56" translate="yes" xml:space="preserve">
          <source>Creates a function that caches its result for fast re-evaluation.</source>
          <target state="translated">创建一个缓存其结果的函数,以便快速重新评估。</target>
        </trans-unit>
        <trans-unit id="ca671f44e7aaeac35a6537c07507991cbe066f68" translate="yes" xml:space="preserve">
          <source>Creates a function that negates another.</source>
          <target state="translated">创建一个否定另一个函数的函数。</target>
        </trans-unit>
        <trans-unit id="cde91551966a8c3538a557aa7e1f65e48ffab5da" translate="yes" xml:space="preserve">
          <source>Creates a hash of this &lt;code&gt;Tuple&lt;/code&gt;.</source>
          <target state="translated">创建此 &lt;code&gt;Tuple&lt;/code&gt; 的哈希。</target>
        </trans-unit>
        <trans-unit id="0adb30e0283a4af18094accba2f9b8d4adae66b8" translate="yes" xml:space="preserve">
          <source>Creates a mathematical sequence given the initial values and a recurrence function that computes the next value from the existing values. The sequence comes in the form of an infinite forward range. The type &lt;code&gt;Recurrence&lt;/code&gt; itself is seldom used directly; most often, recurrences are obtained by calling the function &lt;code&gt;recurrence&lt;/code&gt;.</source>
          <target state="translated">创建给定初始值的数学序列和递归函数，该递归函数根据现有值计算下一个值。该序列以无限向前范围的形式出现。 &lt;code&gt;Recurrence&lt;/code&gt; 类型本身很少直接使用；通常，通过调用函数 &lt;code&gt;recurrence&lt;/code&gt; 获得重现。</target>
        </trans-unit>
        <trans-unit id="96ee19dd76d73d769afaaa909687c75babff0184" translate="yes" xml:space="preserve">
          <source>Creates a new Condition variable analog which is used to check for and to signal the addition of messages to a thread's message queue. Like yield, some schedulers may need to define custom behavior so that calls to Condition.wait() yield to another thread when no new messages are available instead of blocking.</source>
          <target state="translated">创建一个新的Condition变量类比值,用于检查消息并向线程的消息队列发出添加消息的信号。和yield一样,一些调度器可能需要定义自定义行为,以便在没有新消息时,调用Condition.wait()会让位于另一个线程,而不是阻塞。</target>
        </trans-unit>
        <trans-unit id="a031f47a97f06dd1d0df403626203b69d541f12c" translate="yes" xml:space="preserve">
          <source>Creates a new Condition variable. No custom behavior is needed here.</source>
          <target state="translated">创建一个新的Condition变量。这里不需要自定义行为。</target>
        </trans-unit>
        <trans-unit id="9116bfcb531f9d54454fcfc948e4d0383d354a83" translate="yes" xml:space="preserve">
          <source>Creates a new Fiber which calls the given delegate.</source>
          <target state="translated">创建一个新的Fiber,调用给定的委托人。</target>
        </trans-unit>
        <trans-unit id="124555a8b0f648fe1d012d276d753c0d19322a5b" translate="yes" xml:space="preserve">
          <source>Creates a new array out of several copies of an input array or range.</source>
          <target state="translated">从一个输入数组或范围的多个副本中创建一个新的数组。</target>
        </trans-unit>
        <trans-unit id="c29b4591a6c00e3151f27e3a3a0216407411dd7f" translate="yes" xml:space="preserve">
          <source>Creates a new array such that the items in &lt;code&gt;slice&lt;/code&gt; are replaced with the items in &lt;code&gt;replacement&lt;/code&gt;. &lt;code&gt;slice&lt;/code&gt; and &lt;code&gt;replacement&lt;/code&gt; do not need to be the same length. The result will grow or shrink based on the items given.</source>
          <target state="translated">创建一个新数组，使 &lt;code&gt;slice&lt;/code&gt; 中的项目 &lt;code&gt;replacement&lt;/code&gt; 为replace中的项目。 &lt;code&gt;slice&lt;/code&gt; 和 &lt;code&gt;replacement&lt;/code&gt; 的长度不必相同。结果将根据给定的项目而增大或缩小。</target>
        </trans-unit>
        <trans-unit id="3890727bd831b1cb6c012e4c91606c3ef658c4a3" translate="yes" xml:space="preserve">
          <source>Creates a new array which is identical to &lt;code&gt;s&lt;/code&gt; except that all of its characters are converted to lowercase (by preforming Unicode lowercase mapping). If none of &lt;code&gt;s&lt;/code&gt; characters were affected, then &lt;code&gt;s&lt;/code&gt; itself is returned if &lt;code&gt;s&lt;/code&gt; is a &lt;code&gt;string&lt;/code&gt;-like type.</source>
          <target state="translated">创建一个与 &lt;code&gt;s&lt;/code&gt; 相同的新数组，不同之处在于其所有字符均转换为小写（通过执行Unicode小写映射）。如果 &lt;code&gt;s&lt;/code&gt; 个字符均未受影响，则如果 &lt;code&gt;s&lt;/code&gt; 是类似 &lt;code&gt;string&lt;/code&gt; 的类型，则返回 &lt;code&gt;s&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="7e9c86b82c6b1fb66dd08cc61c38a1b079756d54" translate="yes" xml:space="preserve">
          <source>Creates a new curl session handle with the same options set for the handle passed in. Duplicating a handle could only be a matter of cloning data and options, internal state info and things like persistant connections cannot be transfered. It is useful in multithreaded applications when you can run curl_easy_duphandle() for each new thread to avoid a series of identical curl_easy_setopt() invokes in every thread.</source>
          <target state="translated">创建一个新的curl会话句柄,并为传入的句柄设置相同的选项。复制一个句柄只能是克隆数据和选项的问题,内部状态信息和持久连接之类的东西不能被传输。在多线程应用中,当你可以为每个新线程运行curl_easy_duphandle()以避免在每个线程中调用一系列相同的curl_easy_setopt()时,它是很有用的。</target>
        </trans-unit>
        <trans-unit id="60a4fea607c23225fa400ed6c857bae74cd299af" translate="yes" xml:space="preserve">
          <source>Creates a new function call expression</source>
          <target state="translated">创建一个新的函数调用表达式</target>
        </trans-unit>
        <trans-unit id="2112334d42e17720c661c805ce3324b558dd51cb" translate="yes" xml:space="preserve">
          <source>Creates a new instance of Error. The nextInChain parameter is used internally and should always be &lt;code&gt;null&lt;/code&gt; when passed by user code. This constructor does not automatically throw the newly-created Error; the &lt;code&gt;throw&lt;/code&gt; statement should be used for that purpose.</source>
          <target state="translated">创建一个错误的新实例。nextInChain参数在内部使用，并在由用户代码传递时始终为 &lt;code&gt;null&lt;/code&gt; 。该构造函数不会自动引发新创建的错误；该 &lt;code&gt;throw&lt;/code&gt; 声明应被用于此目的。</target>
        </trans-unit>
        <trans-unit id="29ef1c3bd126426d443d7475b7ad71d8d8c5679c" translate="yes" xml:space="preserve">
          <source>Creates a new instance of Exception. The nextInChain parameter is used internally and should always be &lt;code&gt;null&lt;/code&gt; when passed by user code. This constructor does not automatically throw the newly-created Exception; the &lt;code&gt;throw&lt;/code&gt; statement should be used for that purpose.</source>
          <target state="translated">创建一个新的Exception实例。nextInChain参数在内部使用，并在由用户代码传递时始终为 &lt;code&gt;null&lt;/code&gt; 。该构造函数不会自动引发新创建的Exception；该 &lt;code&gt;throw&lt;/code&gt; 声明应被用于此目的。</target>
        </trans-unit>
        <trans-unit id="75f34c3d414f8f4a0b73cf72e2fb0126aa145b92" translate="yes" xml:space="preserve">
          <source>Creates a new kernel thread and assigns it to run the supplied op.</source>
          <target state="translated">创建一个新的内核线程,并将其分配给运行提供的操作。</target>
        </trans-unit>
        <trans-unit id="8d99a8a851fc71224c4095d3dc8c906d38b101b8" translate="yes" xml:space="preserve">
          <source>Creates a new static array from given data.</source>
          <target state="translated">从给定数据中创建一个新的静态数组。</target>
        </trans-unit>
        <trans-unit id="ecd36a22428e9994d09134717eafec38a89d2e58" translate="yes" xml:space="preserve">
          <source>Creates a pair of connected sockets.</source>
          <target state="translated">创建一对连接的插座。</target>
        </trans-unit>
        <trans-unit id="19f224f0cad04c0c9a5314d50caf1aa975093e9d" translate="yes" xml:space="preserve">
          <source>Creates a proxy for the value &lt;code&gt;a&lt;/code&gt; that will forward all operations while disabling implicit conversions. The aliased item &lt;code&gt;a&lt;/code&gt; must be an &lt;b&gt;lvalue&lt;/b&gt;. This is useful for creating a new type from the &quot;base&quot; type (though this is &lt;b&gt;not&lt;/b&gt; a subtype-supertype relationship; the new type is not related to the old type in any way, by design).</source>
          <target state="translated">为值 &lt;code&gt;a&lt;/code&gt; 创建一个代理，该代理将在禁用隐式转换的同时转发所有操作。别名项 &lt;code&gt;a&lt;/code&gt; 必须是&lt;b&gt;左值&lt;/b&gt;。这对于从&amp;ldquo;基本&amp;rdquo;类型创建新类型很有用（尽管这&lt;b&gt;不是&lt;/b&gt;子类型与超类型的关系；通过设计，新类型无论如何都不与旧类型相关）。</target>
        </trans-unit>
        <trans-unit id="facab5397d905340fc2ff34e036fe91a505cf570" translate="yes" xml:space="preserve">
          <source>Creates a random-access range consisting of exactly the first element of the given range.</source>
          <target state="translated">创建一个随机访问范围,正好由给定范围的第一个元素组成。</target>
        </trans-unit>
        <trans-unit id="491697895d99be2bf8ff4cd9ed471190dfadb752" translate="yes" xml:space="preserve">
          <source>Creates a random-access range consisting of zero elements of the given range.</source>
          <target state="translated">创建一个由给定范围的零元素组成的随机访问范围。</target>
        </trans-unit>
        <trans-unit id="2f69619e79d80e1df263dcf9dbcb2c394594c350" translate="yes" xml:space="preserve">
          <source>Creates a range by successive calls to a given function. This allows to create ranges as a single delegate.</source>
          <target state="translated">通过连续调用给定函数来创建一个范围。这允许以单个委托的方式创建范围。</target>
        </trans-unit>
        <trans-unit id="167e3b6167defb5f50874936631196fc03fabc4e" translate="yes" xml:space="preserve">
          <source>Creates a range consisting of numbers between a starting point and ending point, spaced apart by a given interval.</source>
          <target state="translated">创建一个由起点和终点之间的数字组成的范围,并按照给定的间隔进行间隔。</target>
        </trans-unit>
        <trans-unit id="095bb16dbe08643123728b96d2a088f28e3da974" translate="yes" xml:space="preserve">
          <source>Creates a range of values that span the given starting and stopping values.</source>
          <target state="translated">创建一个跨越给定起始值和停止值的数值范围。</target>
        </trans-unit>
        <trans-unit id="c95f11a9b28c359aba0cb5384ce5aea65f8856bc" translate="yes" xml:space="preserve">
          <source>Creates a range that consists of a single element repeated</source>
          <target state="translated">创建一个由单个元素重复组成的范围。</target>
        </trans-unit>
        <trans-unit id="6fa647cca40fc0069485c0e4600015ae305d64f8" translate="yes" xml:space="preserve">
          <source>Creates a range that iterates over the</source>
          <target state="translated">创建一个迭代于</target>
        </trans-unit>
        <trans-unit id="119d886f6f9141897a559c5bf0cae6c375d23ffa" translate="yes" xml:space="preserve">
          <source>Creates a range that iterates over the first elements of the given ranges.</source>
          <target state="translated">创建一个迭代给定范围的第一个元素的范围。</target>
        </trans-unit>
        <trans-unit id="b3797332557503d8df3a90878b6a631d088b9e66" translate="yes" xml:space="preserve">
          <source>Creates a range that iterates over the given arguments.</source>
          <target state="translated">创建一个在给定参数上迭代的范围。</target>
        </trans-unit>
        <trans-unit id="27a319945d62e58889db17071829a24459cceffe" translate="yes" xml:space="preserve">
          <source>Creates a range that offers a view of a given range as though its elements were reordered according to a given range of indices.</source>
          <target state="translated">创建一个范围,提供一个给定范围的视图,好像它的元素是根据给定的指数范围重新排序的。</target>
        </trans-unit>
        <trans-unit id="f505e45463d22852e5431617427809b2bc561947" translate="yes" xml:space="preserve">
          <source>Creates a range that returns a fixed-size sliding window over the original range. Unlike chunks, it advances a configurable number of items at a time, not one chunk at a time.</source>
          <target state="translated">创建一个范围,在原范围上返回一个固定大小的滑动窗口。与分块不同的是,它每次推进的是可配置数量的项目,而不是一次推进一个分块。</target>
        </trans-unit>
        <trans-unit id="e2da09b0362ffc9ff9f92b609fc490c7a66e9f7b" translate="yes" xml:space="preserve">
          <source>Creates a range that returns a number of chunks of approximately equal length from the original range.</source>
          <target state="translated">创建一个范围,从原始范围中返回一些长度大致相等的块。</target>
        </trans-unit>
        <trans-unit id="c3774ff477392cd2c3383bbfc03f5d68150b2336" translate="yes" xml:space="preserve">
          <source>Creates a range that returns fixed-size chunks of the original range.</source>
          <target state="translated">创建一个范围,返回原始范围的固定大小的块。</target>
        </trans-unit>
        <trans-unit id="0d113436e57d2b2729c85287cfeed4bd50c9facf" translate="yes" xml:space="preserve">
          <source>Creates a range that wraps a given range, forwarding along its elements while also calling a provided function with each element.</source>
          <target state="translated">创建一个包裹给定范围的范围,沿着它的元素转发,同时也对每个元素调用一个提供的函数。</target>
        </trans-unit>
        <trans-unit id="f7977beaa2aaf3f6cc573dcadaf85a1c0d137ad7" translate="yes" xml:space="preserve">
          <source>Creates a scalable &lt;code&gt;AllocatorList&lt;/code&gt; of &lt;code&gt;Regions&lt;/code&gt;, each having at least &lt;code&gt;bytesPerRegion&lt;/code&gt; bytes. Allocation is very fast. This allocator does not offer &lt;code&gt;deallocate&lt;/code&gt; but does free all regions in its destructor. It is recommended for short-lived batch applications that count on never running out of memory.</source>
          <target state="translated">创建一个可伸缩的 &lt;code&gt;Regions&lt;/code&gt; &lt;code&gt;AllocatorList&lt;/code&gt; ，每个区域至少具有 &lt;code&gt;bytesPerRegion&lt;/code&gt; 字节。分配非常快。该分配器不提供 &lt;code&gt;deallocate&lt;/code&gt; 但释放其析构器中的所有区域。对于那些希望永不耗尽内存的短期批处理应用程序，建议使用它。</target>
        </trans-unit>
        <trans-unit id="6f435c0e7fa6220851faf44b48ca047ab20cefcb" translate="yes" xml:space="preserve">
          <source>Creates a separate index for a range.</source>
          <target state="translated">为一个范围创建一个单独的索引。</target>
        </trans-unit>
        <trans-unit id="dd006c74f19abaa4a0761b1b7efaf29942f86da3" translate="yes" xml:space="preserve">
          <source>Creates a sequence of zero or more aliases. This is most commonly used as template parameters or arguments.</source>
          <target state="translated">创建一个零或多个别名的序列。这是最常用的模板参数或参数。</target>
        </trans-unit>
        <trans-unit id="40566702e6ad921ff558ff9ca4d1037811d09aae" translate="yes" xml:space="preserve">
          <source>Creates a sub-range consisting of only up to the first</source>
          <target state="translated">创建一个子范围,最多包含第一个子范围。</target>
        </trans-unit>
        <trans-unit id="469d599d62d1c2fd391700f6a0c78d2089510708" translate="yes" xml:space="preserve">
          <source>Creates a symbolic link (symlink).</source>
          <target state="translated">创建一个符号链接(symlink)。</target>
        </trans-unit>
        <trans-unit id="802b8df3eba4f0a49c5a4217df7e199c969ce5ad" translate="yes" xml:space="preserve">
          <source>Creates a unidirectional pipe.</source>
          <target state="translated">创建一个单向的管道。</target>
        </trans-unit>
        <trans-unit id="cf8f38539d3338ea07ae1f542a53a2838ccaf683" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; set up to parse one line at a time from the file into a tuple.</source>
          <target state="translated">创建一个&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围，&lt;/a&gt;设置为一次将一行从文件解析为元组。</target>
        </trans-unit>
        <trans-unit id="3561d870353a64c33492bae1227a4b54a7562e97" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;AliasSeq&lt;/code&gt; which repeats &lt;code&gt;TList&lt;/code&gt; exactly &lt;code&gt;n&lt;/code&gt; times.</source>
          <target state="translated">创建一个 &lt;code&gt;AliasSeq&lt;/code&gt; ，将 &lt;code&gt;TList&lt;/code&gt; 精确地重复 &lt;code&gt;n&lt;/code&gt; 次。</target>
        </trans-unit>
        <trans-unit id="8204b9ea20ad3e99dc18dafe9f5966a149ef25a0" translate="yes" xml:space="preserve">
          <source>Creates an empty range from the given range in &amp;Omicron;(&lt;code&gt;1&lt;/code&gt;). If it can, it will return the same range type. If not, it will return &lt;code&gt;takeExactly(range, 0)&lt;/code&gt;.</source>
          <target state="translated">从&amp;Omicron;（ &lt;code&gt;1&lt;/code&gt; ）中的给定范围创建一个空范围。如果可以，它将返回相同的范围类型。如果不是，它将返回 &lt;code&gt;takeExactly(range, 0)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98c208a0fd5b7f2985b53749917bb319ab1b4a0f" translate="yes" xml:space="preserve">
          <source>Creates an event object.</source>
          <target state="translated">创建一个事件对象。</target>
        </trans-unit>
        <trans-unit id="9fc3668b0b3ac61f1c2ccf2f6e391f909fb421a6" translate="yes" xml:space="preserve">
          <source>Creates an infinite range that repeats the given forward range indefinitely. Good for implementing circular buffers.</source>
          <target state="translated">创建一个无限的范围,无限地重复给定的前进范围。适用于实现循环缓冲区。</target>
        </trans-unit>
        <trans-unit id="dcde82886bef2cfc57fa138c18fa3fe6f213ba99" translate="yes" xml:space="preserve">
          <source>Creates an instance of worker-local storage, initialized with a given value. The value is &lt;code&gt;lazy&lt;/code&gt; so that you can, for example, easily create one instance of a class for each worker. For usage example, see the &lt;code&gt;WorkerLocalStorage&lt;/code&gt; struct.</source>
          <target state="translated">创建工作人员本地存储的实例，并使用给定值对其进行初始化。该值是 &lt;code&gt;lazy&lt;/code&gt; 因此您可以例如轻松地为每个工作人员创建一个类的实例。有关用法示例，请参见 &lt;code&gt;WorkerLocalStorage&lt;/code&gt; 结构。</target>
        </trans-unit>
        <trans-unit id="be1b805e9512fab0c82226f8469579575b03085d" translate="yes" xml:space="preserve">
          <source>Creates an lvalue or rvalue of type &lt;code&gt;T&lt;/code&gt; for &lt;code&gt;typeof(...)&lt;/code&gt; and &lt;code&gt;__traits(compiles, ...)&lt;/code&gt; purposes. No actual value is returned.</source>
          <target state="translated">为 &lt;code&gt;typeof(...)&lt;/code&gt; 和 &lt;code&gt;__traits(compiles, ...)&lt;/code&gt; 目的创建类型 &lt;code&gt;T&lt;/code&gt; 的左值或右值。没有实际值返回。</target>
        </trans-unit>
        <trans-unit id="eaebf9f2d50b56a9272662e3ba187103b8fd7fb6" translate="yes" xml:space="preserve">
          <source>Creates and returns the hidden parameters for this function declaration.</source>
          <target state="translated">创建并返回该函数声明的隐藏参数。</target>
        </trans-unit>
        <trans-unit id="9b553ea67f7afbb68b5ef6b9110f190f5fa0d536" translate="yes" xml:space="preserve">
          <source>Creates and starts a new Thread object that executes dg and adds it to the list of tracked threads.</source>
          <target state="translated">创建并启动一个执行 dg 的新线程对象,并将其添加到跟踪的线程列表中。</target>
        </trans-unit>
        <trans-unit id="d8465192a47f3a3964b86383849851b3f987af9e" translate="yes" xml:space="preserve">
          <source>Creates and starts a new Thread object that executes fn and adds it to the list of tracked threads.</source>
          <target state="translated">创建并启动一个执行fn的新线程对象,并将其添加到跟踪的线程列表中。</target>
        </trans-unit>
        <trans-unit id="1f14747fb861d9f57045e9760eebadb571c0f14c" translate="yes" xml:space="preserve">
          <source>Creates the file if it does not already exist.</source>
          <target state="translated">如果文件不存在,则创建该文件。</target>
        </trans-unit>
        <trans-unit id="5e72ff62874af2b080424b1f364475d8251da057" translate="yes" xml:space="preserve">
          <source>Creates the list of modules based on the files provided</source>
          <target state="translated">根据提供的文件创建模块列表。</target>
        </trans-unit>
        <trans-unit id="c36b26347d25b74467c336b27111c896866bd305" translate="yes" xml:space="preserve">
          <source>Creates the range that results from discarding exactly</source>
          <target state="translated">创建准确丢弃的范围。</target>
        </trans-unit>
        <trans-unit id="3bc721a88f6358a1f98c1960601822da71eda438" translate="yes" xml:space="preserve">
          <source>Creates the range that results from discarding the first</source>
          <target state="translated">创建从丢弃第一个</target>
        </trans-unit>
        <trans-unit id="f4fae2eaf902de2336623c5f44ed9233da515843" translate="yes" xml:space="preserve">
          <source>Creates the range that results from discarding the first element from the given range.</source>
          <target state="translated">创建从给定范围中丢弃第一个元素的结果的范围。</target>
        </trans-unit>
        <trans-unit id="e8ccf47a3faeae60cbaa6e290f3c7add8d8439e4" translate="yes" xml:space="preserve">
          <source>Creates the range that results from discarding the last</source>
          <target state="translated">创建从丢弃最后的</target>
        </trans-unit>
        <trans-unit id="e26745f992813425c3f6e9ec560904ac5dfc6d56" translate="yes" xml:space="preserve">
          <source>Creates the range that results from discarding the last element from the given range.</source>
          <target state="translated">创建从给定范围中丢弃最后一个元素的范围。</target>
        </trans-unit>
        <trans-unit id="702d6feb03374612a47955af68790e7167c2df15" translate="yes" xml:space="preserve">
          <source>Creating Immutable Data</source>
          <target state="translated">创建不可更改的数据</target>
        </trans-unit>
        <trans-unit id="bfac50d6424b5166c3ee2808c85ae7c139b5182f" translate="yes" xml:space="preserve">
          <source>Credits</source>
          <target state="translated">Credits</target>
        </trans-unit>
        <trans-unit id="662cb4a2bd7d633921dbca8a7d42f872af7c9656" translate="yes" xml:space="preserve">
          <source>Cs</source>
          <target state="translated">Cs</target>
        </trans-unit>
        <trans-unit id="c2c3639bbe4de0aea10b057ea83de756ef98378f" translate="yes" xml:space="preserve">
          <source>Ctor</source>
          <target state="translated">Ctor</target>
        </trans-unit>
        <trans-unit id="a47b165571b7225fe9e41c496a97f58f335b0c95" translate="yes" xml:space="preserve">
          <source>CtorFlow &lt;code&gt;ctorflow&lt;/code&gt;</source>
          <target state="translated">CtorFlow &lt;code&gt;ctorflow&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2ec2f1f5ce49dd13daec8eee36db1395ae3b43f" translate="yes" xml:space="preserve">
          <source>CtorFlow &lt;strong id=&quot;clone&quot;&gt;clone&lt;/strong&gt;();</source>
          <target state="translated">CtorFlow &lt;strong id=&quot;clone&quot;&gt;克隆&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="7c804c33db286558bb634271d46f72ed27582aa7" translate="yes" xml:space="preserve">
          <source>Cuneiform</source>
          <target state="translated">Cuneiform</target>
        </trans-unit>
        <trans-unit id="45b5a2c7a3a08d60fb826e098c079562c9b73f47" translate="yes" xml:space="preserve">
          <source>Cuneiform Numbers and Punctuation</source>
          <target state="translated">楔形数字和标点符号</target>
        </trans-unit>
        <trans-unit id="c04085590ca8e7a54d013972ef35c99a27d5d737" translate="yes" xml:space="preserve">
          <source>Curl &lt;strong id=&quot;dup&quot;&gt;dup&lt;/strong&gt;();</source>
          <target state="translated">卷曲&lt;strong id=&quot;dup&quot;&gt;dup&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="773dbcf2918b7b09831a0ed13a940ea3c1ee1fa6" translate="yes" xml:space="preserve">
          <source>CurlCode &lt;strong id=&quot;getTiming&quot;&gt;getTiming&lt;/strong&gt;(CurlInfo timing, ref double val);</source>
          <target state="translated">CurlCode &lt;strong id=&quot;getTiming&quot;&gt;getTiming&lt;/strong&gt;（CurlInfo计时，ref double val）;</target>
        </trans-unit>
        <trans-unit id="c2ad2d9e83c0551cb2f717df5892a96ecafc33b4" translate="yes" xml:space="preserve">
          <source>CurlCode &lt;strong id=&quot;perform&quot;&gt;perform&lt;/strong&gt;(ThrowOnError throwOnError = Yes.throwOnError);</source>
          <target state="translated">CurlCode &lt;strong id=&quot;perform&quot;&gt;执行&lt;/strong&gt;（ThrowOnError throwOnError = Yes.throwOnError）;</target>
        </trans-unit>
        <trans-unit id="be31623169a932d4c6c560d7201b407aa5182a35" translate="yes" xml:space="preserve">
          <source>CurlInfo &lt;code&gt;timing&lt;/code&gt;</source>
          <target state="translated">CurlInfo &lt;code&gt;timing&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="12060f8ec6f86ad11a42f46cb52ac099f81f88f5" translate="yes" xml:space="preserve">
          <source>CurlKHType &lt;strong id=&quot;keytype&quot;&gt;keytype&lt;/strong&gt;;</source>
          <target state="translated">CurlKHType &lt;strong id=&quot;keytype&quot;&gt;键类型&lt;/strong&gt;；</target>
        </trans-unit>
        <trans-unit id="88902869e96472323a9edc08d7ae406940c970e5" translate="yes" xml:space="preserve">
          <source>CurlOption &lt;code&gt;option&lt;/code&gt;</source>
          <target state="translated">CurlOption &lt;code&gt;option&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52b9269b5ed7da7a493a1dbe83846551a4d7568c" translate="yes" xml:space="preserve">
          <source>CurlSeek delegate(long, CurlSeekPos) &lt;code&gt;callback&lt;/code&gt;</source>
          <target state="translated">CurlSeek委托（long，CurlSeekPos） &lt;code&gt;callback&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="37f1460d74729779c053720f8343662b43997475" translate="yes" xml:space="preserve">
          <source>Currency Symbols</source>
          <target state="translated">货币符号</target>
        </trans-unit>
        <trans-unit id="84f9a40ca51da6b15c30fb2dde0fe4ae3193cebf" translate="yes" xml:space="preserve">
          <source>Currency_Symbol</source>
          <target state="translated">Currency_Symbol</target>
        </trans-unit>
        <trans-unit id="1c51a4dec4b6d066a950991a20e81d7204b847ff" translate="yes" xml:space="preserve">
          <source>Current 'state' of the compiler. Used to gather together most global variables. This struct is saved/restored during function body parsing.</source>
          <target state="translated">当前编译器的 &quot;状态&quot;。用于收集大多数全局变量。该结构在函数体解析过程中被保存/恢复。</target>
        </trans-unit>
        <trans-unit id="8bb5afa66ef9deeeb65948941312b1da2a80f78e" translate="yes" xml:space="preserve">
          <source>Current items are equal; no editing is necessary.</source>
          <target state="translated">当前的项目是平等的,不需要编辑。</target>
        </trans-unit>
        <trans-unit id="69802cb8c8d960584abd7b92600c394739df538c" translate="yes" xml:space="preserve">
          <source>Current limitation: Due to &lt;a href=&quot;https://issues.dlang.org/show_bug.cgi?id=11500&quot;&gt;bug #11500&lt;/a&gt;, currently the constructors specified in this mixin cannot be overloaded with any other custom constructors. Thus this mixin can currently only be used when no such custom constructors need to be explicitly specified.</source>
          <target state="translated">当前限制：由于&lt;a href=&quot;https://issues.dlang.org/show_bug.cgi?id=11500&quot;&gt;错误＃11500&lt;/a&gt;，当前在此mixin中指定的构造函数无法与任何其他自定义构造函数重载。因此，当前仅在不需要显式指定此类自定义构造函数时才能使用此混合。</target>
        </trans-unit>
        <trans-unit id="ce942321383836e436083da3460ea976ea73c9cf" translate="yes" xml:space="preserve">
          <source>Currently nested templates can capture at most one context. As a typical example, non-static template member functions cannot take local symbol by using template alias parameter.</source>
          <target state="translated">目前嵌套模板最多只能采集一个上下文。典型的例子是,非静态模板成员函数不能通过使用模板别名参数来获取本地符号。</target>
        </trans-unit>
        <trans-unit id="ff4623ac05dc3913907977438836d2f3c936fb47" translate="yes" xml:space="preserve">
          <source>Currently only supports UTF documents.  If there is an encoding attribute in the prolog, it is ignored.</source>
          <target state="translated">目前只支持UTF文档。如果prolog中存在编码属性,则会被忽略。</target>
        </trans-unit>
        <trans-unit id="cdb34bac47d9c08061ba96d029fe7cfb9cc5802d" translate="yes" xml:space="preserve">
          <source>Currently only works on x86 and Itanium CPUs. Many processors have bugs in their microcode for the CPUID instruction, so sometimes the cache information may be incorrect.</source>
          <target state="translated">目前只适用于x86和Itanium CPU。许多处理器的CPUID指令在其微代码中存在错误,因此有时缓存信息可能不正确。</target>
        </trans-unit>
        <trans-unit id="cfc0dbba909b8d801dfd589ff4ce7238fefbfe4c" translate="yes" xml:space="preserve">
          <source>Currently, only FreeBSD/DragonFlyBSD supports a more precise clock, where it uses &lt;code&gt;CLOCK_MONOTONIC_PRECISE&lt;/code&gt; for the monotonic time and &lt;code&gt;CLOCK_REALTIME_PRECISE&lt;/code&gt; for the wall clock time.</source>
          <target state="translated">目前，只有FreeBSD的/ DragonFlyBSD支持更精确的时钟，其中，它采用 &lt;code&gt;CLOCK_MONOTONIC_PRECISE&lt;/code&gt; 为单调时间和 &lt;code&gt;CLOCK_REALTIME_PRECISE&lt;/code&gt; 为挂钟时间。</target>
        </trans-unit>
        <trans-unit id="959207731027f2760054a49b8e3de46c08dd6bdd" translate="yes" xml:space="preserve">
          <source>Currently, only Linux and FreeBSD/DragonFlyBSD support a coarser clock, and on other platforms, it's treated as &lt;code&gt;ClockType.normal&lt;/code&gt;.</source>
          <target state="translated">当前，只有Linux和FreeBSD / DragonFlyBSD支持较粗的时钟，在其他平台上，它被视为 &lt;code&gt;ClockType.normal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dfcc51a98311f46893672f2fb6d173d44d66fc77" translate="yes" xml:space="preserve">
          <source>Custom Page Cache Object</source>
          <target state="translated">自定义页面缓存对象</target>
        </trans-unit>
        <trans-unit id="b3fc60eff39cb549b6d9c803b4a451eb43428671" translate="yes" xml:space="preserve">
          <source>Custom predicate for comparison of haystack and needle</source>
          <target state="translated">自定义比较干草堆和针的谓词。</target>
        </trans-unit>
        <trans-unit id="c8a592f320e5a686e3807c060bc9b332dcc6b0b4" translate="yes" xml:space="preserve">
          <source>Custom predicate functions.</source>
          <target state="translated">自定义谓词函数。</target>
        </trans-unit>
        <trans-unit id="bfed9740a3d512ab6d90b0cbc0ffce4c3744006e" translate="yes" xml:space="preserve">
          <source>Custom request, for customizing the get command like</source>
          <target state="translated">自定义请求,用于自定义获取命令,如</target>
        </trans-unit>
        <trans-unit id="a74881d82849f50f687aa6d7ccfec894be3d7785" translate="yes" xml:space="preserve">
          <source>Customized Base64 encoding schemes can be implemented by instantiating this template with the appropriate arguments. For example:</source>
          <target state="translated">自定义的Base64编码方案可以通过实例化这个模板和适当的参数来实现。例如:</target>
        </trans-unit>
        <trans-unit id="5edb9626eb87d040db1eb00c7aa5b2c28b0e6650" translate="yes" xml:space="preserve">
          <source>Cycle!R &lt;strong id=&quot;cycle&quot;&gt;cycle&lt;/strong&gt;(R)(R input, size_t index = 0)</source>
          <target state="translated">循环！R &lt;strong id=&quot;cycle&quot;&gt;循环&lt;/strong&gt;（R）（R输入，size_t索引= 0）</target>
        </trans-unit>
        <trans-unit id="7d8cafa53ee2c1c0875ad69af202f51945cbe5f0" translate="yes" xml:space="preserve">
          <source>Cycles (circular dependencies) in the import declarations are allowed as long as not both of the modules contain static constructors or static destructors. Violation of this rule will result in a runtime exception.</source>
          <target state="translated">在导入声明中允许循环(循环依赖),只要不是两个模块都包含静态构造函数或静态析构函数。违反这一规则将导致运行时异常。</target>
        </trans-unit>
        <trans-unit id="eb48393cdd04925357b593a4e1a8ff95b3dc4455" translate="yes" xml:space="preserve">
          <source>Cycles (circular dependencies) in the import declarations are allowed so long as neither, or one, but not both, of the modules, contains static constructors or static destructors. Violation of this rule will result in a runtime exception.</source>
          <target state="translated">在导入声明中允许循环(循环依赖),只要两个模块都不包含静态构造函数或静态析构函数,或者一个模块,但不是两个模块。违反此规则将导致运行时异常。</target>
        </trans-unit>
        <trans-unit id="467f7f2e1a32702888fd1652ec31b786fd0b1c0b" translate="yes" xml:space="preserve">
          <source>Cyclic Redundancy Check (32-bit) implementation.</source>
          <target state="translated">循环冗余检查(32位)的实现。</target>
        </trans-unit>
        <trans-unit id="36c9c09d1a88bef7e48da22695dc2c7f51367161" translate="yes" xml:space="preserve">
          <source>Cyclic functions (i.e. functions that wind up directly or indirectly calling themselves) are inferred as being impure, throwing, and @system.</source>
          <target state="translated">循环函数(即风直接或间接调用自己的函数)被推断为不纯、抛出和@系统。</target>
        </trans-unit>
        <trans-unit id="0de933d74049be9213bca8bd3670f39dc4e2b3ac" translate="yes" xml:space="preserve">
          <source>Cyclic redundancy check (CRC) value.</source>
          <target state="translated">循环冗余检查(CRC)值。</target>
        </trans-unit>
        <trans-unit id="5330ddfa4df379999c1bfc18ba91ec4dcf678d1d" translate="yes" xml:space="preserve">
          <source>Cypriot</source>
          <target state="translated">Cypriot</target>
        </trans-unit>
        <trans-unit id="3f15c59d268026cfd87f29afcccbd986a8b120f6" translate="yes" xml:space="preserve">
          <source>Cypriot Syllabary</source>
          <target state="translated">Cypriot Syllabary</target>
        </trans-unit>
        <trans-unit id="1cb0955565a00adf2d4dd0f3ab0976a162bd4df5" translate="yes" xml:space="preserve">
          <source>Cyrillic</source>
          <target state="translated">Cyrillic</target>
        </trans-unit>
        <trans-unit id="13cb71dbdc01614be3dd0248e4bab527145b3a0c" translate="yes" xml:space="preserve">
          <source>Cyrillic Extended-A</source>
          <target state="translated">西里尔语扩展-A</target>
        </trans-unit>
        <trans-unit id="6e19f6b8db26b5f4584e846a958391e34785c75d" translate="yes" xml:space="preserve">
          <source>Cyrillic Extended-B</source>
          <target state="translated">西里尔语扩展-B</target>
        </trans-unit>
        <trans-unit id="5f096016543cf8648b1e0ba5ebd0cde1cb50f3a2" translate="yes" xml:space="preserve">
          <source>Cyrillic Supplement</source>
          <target state="translated">西里尔语补编</target>
        </trans-unit>
        <trans-unit id="50c9e8d5fc98727b4bbc93cf5d64a68db647f04f" translate="yes" xml:space="preserve">
          <source>D</source>
          <target state="translated">D</target>
        </trans-unit>
        <trans-unit id="c075a684f58014ba537d34ff9519af0073d068d0" translate="yes" xml:space="preserve">
          <source>D &lt;code&gt;duration&lt;/code&gt;</source>
          <target state="translated">D &lt;code&gt;duration&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="420ba6fd12e656eed08bc3686d185ed3d67a02db" translate="yes" xml:space="preserve">
          <source>D &lt;code&gt;lhs&lt;/code&gt;</source>
          <target state="translated">d &lt;code&gt;lhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31ddff47ea2df1a65990ec2b6a0572ffb0107b5b" translate="yes" xml:space="preserve">
          <source>D &lt;code&gt;rhs&lt;/code&gt;</source>
          <target state="translated">d &lt;code&gt;rhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df22aa7a42bde4b06895be25544565774c8fe9f9" translate="yes" xml:space="preserve">
          <source>D &lt;code&gt;td&lt;/code&gt;</source>
          <target state="translated">d &lt;code&gt;td&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ca85edb97301be7fd1849c8854fbc23b8139193" translate="yes" xml:space="preserve">
          <source>D And C Function Prototype Equivalence</source>
          <target state="translated">D和C函数原型的等价性</target>
        </trans-unit>
        <trans-unit id="c3dde59eb8e6d6f854408cbe61a4fbfc9b447911" translate="yes" xml:space="preserve">
          <source>D And C Type Equivalence</source>
          <target state="translated">D型和C型等价</target>
        </trans-unit>
        <trans-unit id="4959476e34feab4fd79ecd8a71227840715bd031" translate="yes" xml:space="preserve">
          <source>D And C++ Type Equivalence</source>
          <target state="translated">D和C++类型等价</target>
        </trans-unit>
        <trans-unit id="86da087c301b2f798d4ba996b708f1700a968709" translate="yes" xml:space="preserve">
          <source>D Code Formatting Macros</source>
          <target state="translated">D代码格式化宏</target>
        </trans-unit>
        <trans-unit id="d3f23c864026a341662336508bfcf4b56460282f" translate="yes" xml:space="preserve">
          <source>D Grammar</source>
          <target state="translated">D 语法</target>
        </trans-unit>
        <trans-unit id="20fb9b176e61fdbf6fd72a0f9b1c75e432e9363e" translate="yes" xml:space="preserve">
          <source>D Operations That Involve the Garbage Collector</source>
          <target state="translated">D 涉及到垃圾收集器的操作。</target>
        </trans-unit>
        <trans-unit id="3b1a6b14130ac212af69f729479639b4f6728d35" translate="yes" xml:space="preserve">
          <source>D accomplishes typesafe linking by</source>
          <target state="translated">D通过以下方式实现类型安全链接</target>
        </trans-unit>
        <trans-unit id="e8bd85138c80a70ce7a94bdf0dbb9e8c049bd318" translate="yes" xml:space="preserve">
          <source>D allows overloading of the comparison operators &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt; via two functions, &lt;code&gt;opEquals&lt;/code&gt; and &lt;code&gt;opCmp&lt;/code&gt;.</source>
          <target state="translated">D允许通过两个函数 &lt;code&gt;opEquals&lt;/code&gt; 和 &lt;code&gt;opCmp&lt;/code&gt; 重载比较运算符 &lt;code&gt;==&lt;/code&gt; ， &lt;code&gt;!=&lt;/code&gt; ， &lt;code&gt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;=&lt;/code&gt; ， &lt;code&gt;&amp;gt;=&lt;/code&gt; ， &lt;code&gt;&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="245c88a0d2db8ba44dd302d346881e4a09782dfc" translate="yes" xml:space="preserve">
          <source>D also provides the mechanisms to write code where the garbage collector is &lt;b&gt;not involved&lt;/b&gt;. More information is provided below.</source>
          <target state="translated">D还提供了在&lt;b&gt;不涉及&lt;/b&gt;垃圾收集器的情况下编写代码的机制。下面提供了更多信息。</target>
        </trans-unit>
        <trans-unit id="536f3a2ed377e10f64d552c2d73a20c905e02fc9" translate="yes" xml:space="preserve">
          <source>D binding to C++</source>
          <target state="translated">D与C++绑定</target>
        </trans-unit>
        <trans-unit id="19ddf415c5a9aba3800b9f9389ba5483b40b7a2f" translate="yes" xml:space="preserve">
          <source>D binding to C++ std::allocator.</source>
          <target state="translated">D绑定到C++std::allocator。</target>
        </trans-unit>
        <trans-unit id="31b1546a7311b8038bca2bd20f9fc0ac1391d37a" translate="yes" xml:space="preserve">
          <source>D bindings for standard C headers.</source>
          <target state="translated">标准C型封头的D型封头。</target>
        </trans-unit>
        <trans-unit id="40b1be27cbfa93ccf74b6920df5a41be8c48c101" translate="yes" xml:space="preserve">
          <source>D can easily call C callbacks (function pointers), and C can call callbacks provided by D code if the callback is an &lt;code&gt;extern(C)&lt;/code&gt; function, or some other linkage that both sides have agreed to (e.g. &lt;code&gt;extern(Windows)&lt;/code&gt;).</source>
          <target state="translated">D可以轻松地调用C回调（函数指针），并且如果回调是 &lt;code&gt;extern(C)&lt;/code&gt; 函数或双方都同意的某些其他链接（例如 &lt;code&gt;extern(Windows)&lt;/code&gt; ），则C可以调用D代码提供的回调。</target>
        </trans-unit>
        <trans-unit id="c470394ce7797205adec8b8a502a172295e638c7" translate="yes" xml:space="preserve">
          <source>D can explicitly manage memory using a variety of library tools, such as with &lt;a href=&quot;https://dlang.org/phobos/std_experimental_allocator.html&quot;&gt;&lt;code&gt;std.experimental.allocator&lt;/code&gt;&lt;/a&gt;. Additionally, &lt;code&gt;core.stdc.stdlib.malloc&lt;/code&gt; and &lt;code&gt;core.stdc.stdlib.free&lt;/code&gt; can be used directly for connecting to C++ functions that expect &lt;code&gt;malloc&lt;/code&gt;'d buffers.</source>
          <target state="translated">D可以使用各种库工具（例如，使用&lt;a href=&quot;https://dlang.org/phobos/std_experimental_allocator.html&quot;&gt; &lt;code&gt;std.experimental.allocator&lt;/code&gt; )&lt;/a&gt;显式管理内存。此外， &lt;code&gt;core.stdc.stdlib.malloc&lt;/code&gt; 和 &lt;code&gt;core.stdc.stdlib.free&lt;/code&gt; 可直接使用用于连接到期望的C ++函数 &lt;code&gt;malloc&lt;/code&gt; 的 &amp;ldquo;d缓冲器。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
