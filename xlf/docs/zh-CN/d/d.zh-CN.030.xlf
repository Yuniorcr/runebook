<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="d">
    <body>
      <group id="d">
        <trans-unit id="0a331d1a65f7b110b5273b5d7868371d3b08b9ac" translate="yes" xml:space="preserve">
          <source>When a header is provided but a matching column is not found</source>
          <target state="translated">当提供了一个页眉,但没有找到匹配的列时。</target>
        </trans-unit>
        <trans-unit id="b0b45f354df73daafacbfa28c4412f42f9090d16" translate="yes" xml:space="preserve">
          <source>When a non-static nested class is instantiated, the context pointer is assigned before the class's constructor is called, therefore the constructor has full access to the enclosing variables. A non-static nested class can only be instantiated when the necessary context pointer information is available:</source>
          <target state="translated">当一个非静态嵌套类被实例化时,上下文指针是在类的构造函数被调用之前分配的,因此构造函数可以完全访问包围变量。只有在获得必要的上下文指针信息时,才能实例化一个非静态嵌套类。</target>
        </trans-unit>
        <trans-unit id="ef920e26f90cd5a47576ce324fd1771288bcca86" translate="yes" xml:space="preserve">
          <source>When a parameter is passed by value to a function:</source>
          <target state="translated">当一个参数通过值传递给一个函数时。</target>
        </trans-unit>
        <trans-unit id="c61c979210ecf2e4589b54627f634e1037a8ddad" translate="yes" xml:space="preserve">
          <source>When a parameter is returned by value from a function and Named Returned Value Optiomization (NRVO) cannot be performed:</source>
          <target state="translated">当参数由函数的值返回时,不能执行命名返回值 Optiomization(NRVO)。</target>
        </trans-unit>
        <trans-unit id="bad8777ba790b6e52988c8133c63b2e65339ddbd" translate="yes" xml:space="preserve">
          <source>When a pointer to</source>
          <target state="translated">当指向</target>
        </trans-unit>
        <trans-unit id="1e0b2ba65ca51f0167b76facd54366bc0400933e" translate="yes" xml:space="preserve">
          <source>When a scope class reference goes out of scope, the destructor (if any) for it is automatically called. This holds true even if the scope was exited via a thrown exception.</source>
          <target state="translated">当一个 scope 类引用退出 scope 时,它的析构器(如果有的话)会被自动调用。即使通过抛出的异常退出了作用域,这也是正确的。</target>
        </trans-unit>
        <trans-unit id="b6bb469f2736e5b29050178fdbb45f42be341bd3" translate="yes" xml:space="preserve">
          <source>When a socket is blocking, calls to receive(), accept(), and send() will block and wait for data/action. A non-blocking socket will immediately return instead of blocking.</source>
          <target state="translated">当套接字阻塞时,对receive()、accept()和send()的调用将阻塞并等待数据/动作。一个非阻塞的套接字将立即返回而不是阻塞。</target>
        </trans-unit>
        <trans-unit id="5af91437874803519acee62d5c577c0e8cbfe57c" translate="yes" xml:space="preserve">
          <source>When a symbol name is used unqualified, a two-phase lookup is used. First, the module scope is searched, starting from the innermost scope. For example, in the previous example, while looking for &lt;code&gt;writeln&lt;/code&gt;, the order will be:</source>
          <target state="translated">当符号名称使用不合格时，将使用两阶段查找。首先，从最内部的范围开始搜索模块范围。例如，在前面的示例中，在查找 &lt;code&gt;writeln&lt;/code&gt; 时，顺序为：</target>
        </trans-unit>
        <trans-unit id="53589a36e302415933b16ff556ec6d4fa213d853" translate="yes" xml:space="preserve">
          <source>When a symbol name is used unqualified, a two-phase lookup will happen. First, the module scope will be searched, starting from the innermost scope. For example, in the previous example, while looking for &lt;code&gt;writeln&lt;/code&gt;, the order will be:</source>
          <target state="translated">当符号名称使用不合格时，将进行两阶段查找。首先，将从最内部的范围开始搜索模块范围。例如，在前面的示例中，在查找 &lt;code&gt;writeln&lt;/code&gt; 时，顺序为：</target>
        </trans-unit>
        <trans-unit id="25a09fb47990dfe5a4bac049451c12fdc1522cc8" translate="yes" xml:space="preserve">
          <source>When a variable is explicitly initialized:</source>
          <target state="translated">当一个变量被显式初始化时。</target>
        </trans-unit>
        <trans-unit id="e356d7a1b95eac6faf7fe7ab10b40256f67e5d27" translate="yes" xml:space="preserve">
          <source>When an AA indexing access appears on the left side of an assignment operator, it is specially handled for setting an AA entry associated with the key.</source>
          <target state="translated">当赋值运算符左侧出现AA索引访问时,会专门处理设置与键相关的AA条目。</target>
        </trans-unit>
        <trans-unit id="847c3c4e979270acfa06a799f042c78559833b79" translate="yes" xml:space="preserve">
          <source>When an input contains a header the &lt;code&gt;Contents&lt;/code&gt; can be specified as an associative array. Passing null to signify that a header is present.</source>
          <target state="translated">当输入包含标题时，可以将 &lt;code&gt;Contents&lt;/code&gt; 指定为关联数组。传递null表示存在标头。</target>
        </trans-unit>
        <trans-unit id="0d733d6c910f9784e16ad4aef1338d80a037f29e" translate="yes" xml:space="preserve">
          <source>When an instance of a struct is created, the following steps happen:</source>
          <target state="translated">当一个结构的实例被创建时,会发生以下步骤。</target>
        </trans-unit>
        <trans-unit id="f9b07f7bbc9886fac959cdee6dc7290b9a45d6c3" translate="yes" xml:space="preserve">
          <source>When an output range's &lt;code&gt;put&lt;/code&gt; method only accepts elements of type &lt;code&gt;T&lt;/code&gt;, use the global &lt;code&gt;put&lt;/code&gt; to handle outputting a &lt;code&gt;T[]&lt;/code&gt; to the range or vice-versa.</source>
          <target state="translated">当输出范围的 &lt;code&gt;put&lt;/code&gt; 方法仅接受类型 &lt;code&gt;T&lt;/code&gt; 的元素时，请使用全局 &lt;code&gt;put&lt;/code&gt; 来处理将 &lt;code&gt;T[]&lt;/code&gt; 输出到范围，反之亦然。</target>
        </trans-unit>
        <trans-unit id="b0d460e664066b93100c6efcc10898f6bcea3cee" translate="yes" xml:space="preserve">
          <source>When any &lt;a href=&quot;std_range&quot;&gt;range&lt;/a&gt; can be passed as an argument to a member function, the documention usually refers to the parameter's templated type as &lt;code&gt;Stuff&lt;/code&gt;.</source>
          <target state="translated">当可以将任何&lt;a href=&quot;std_range&quot;&gt;范围&lt;/a&gt;作为参数传递给成员函数时，文档通常将参数的模板化类型称为 &lt;code&gt;Stuff&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e035b70c43ed4b954c78ad9443d2b0b366cee1c" translate="yes" xml:space="preserve">
          <source>When array literals are cast to another array type, each element of the array is cast to the new element type. When arrays that are not literals are cast, the array is reinterpreted as the new type, and the length is recomputed:</source>
          <target state="translated">当数组的字元被投向另一个数组类型时,数组的每个元素都被投向新的元素类型。当数组非字面数组被转换时,数组会被重新解释为新的类型,并重新计算长度。</target>
        </trans-unit>
        <trans-unit id="8bc694b68085959ea8d163c5c30c93a25f539782" translate="yes" xml:space="preserve">
          <source>When called on a &lt;code&gt;Nullable&lt;/code&gt;, &lt;code&gt;apply&lt;/code&gt; will unpack the value contained in the &lt;code&gt;Nullable&lt;/code&gt;, pass it to the function you provide and wrap the result in another &lt;code&gt;Nullable&lt;/code&gt; (if necessary). If the &lt;code&gt;Nullable&lt;/code&gt; is null, &lt;code&gt;apply&lt;/code&gt; will return null itself.</source>
          <target state="translated">在对 &lt;code&gt;Nullable&lt;/code&gt; 进行调用时， &lt;code&gt;apply&lt;/code&gt; 将解压缩 &lt;code&gt;Nullable&lt;/code&gt; 中包含的值，将其传递给您提供的函数，并将结果包装在另一个 &lt;code&gt;Nullable&lt;/code&gt; 中（如有必要）。如果 &lt;code&gt;Nullable&lt;/code&gt; 为null，则 &lt;code&gt;apply&lt;/code&gt; 将自身返回null。</target>
        </trans-unit>
        <trans-unit id="dc1515373d01db08ef2117bb4defaff339297545" translate="yes" xml:space="preserve">
          <source>When calling &lt;code&gt;recurrence&lt;/code&gt;, the function that computes the next value is specified as a template argument, and the initial values in the recurrence are passed as regular arguments. For example, in a Fibonacci sequence, there are two initial values (and therefore a state size of 2) because computing the next Fibonacci value needs the past two values.</source>
          <target state="translated">调用 &lt;code&gt;recurrence&lt;/code&gt; ，将计算下一个值的函数指定为模板参数，并将递归中的初始值作为常规参数传递。例如，在斐波那契序列中，有两个初始值（因此状态大小为2），因为计算下一个斐波那契值需要过去的两个值。</target>
        </trans-unit>
        <trans-unit id="18b07986b7a6997aa1e86f263e6c86015fef29b1" translate="yes" xml:space="preserve">
          <source>When comparing with &lt;a href=&quot;function#nested&quot;&gt;nested functions&lt;/a&gt;, the &lt;code&gt;function&lt;/code&gt; form is analogous to static or non-nested functions, and the &lt;code&gt;delegate&lt;/code&gt; form is analogous to non-static nested functions. In other words, a delegate literal can access stack variables in its enclosing function, a function literal cannot.</source>
          <target state="translated">与&lt;a href=&quot;function#nested&quot;&gt;嵌套函数&lt;/a&gt;进行比较时， &lt;code&gt;function&lt;/code&gt; 形式类似于静态或非嵌套函数，而 &lt;code&gt;delegate&lt;/code&gt; 形式类似于非静态嵌套函数。换句话说，委托文字可以访问其封闭函数中的堆栈变量，而函数文字不能。</target>
        </trans-unit>
        <trans-unit id="fd9f348ed0f84700657f1faa1882de97c9d5f215" translate="yes" xml:space="preserve">
          <source>When compiled and run, it will produce the message:</source>
          <target state="translated">编译和运行时,会产生信息。</target>
        </trans-unit>
        <trans-unit id="5c8b8502e98bd1b0e213cd0332618f47d50bedee" translate="yes" xml:space="preserve">
          <source>When compiled with debug mode, this function performs an extra check to make sure the return value is a valid Unicode string.</source>
          <target state="translated">当用调试模式编译时,这个函数会执行一个额外的检查,以确保返回值是一个有效的Unicode字符串。</target>
        </trans-unit>
        <trans-unit id="cd356cab928423e5fd67844fa0607a2ecaf98686" translate="yes" xml:space="preserve">
          <source>When compiling for release, the invariant code is not generated, and the compiled program runs at maximum speed. The compiler is free to assume the invariant holds true, regardless of whether code is generated for it or not, and may optimize code accordingly.</source>
          <target state="translated">在编译发布时,不生成不变式代码,编译后的程序以最大速度运行。编译器可以自由地假设不变式成立,不管是否为其生成代码,都可以相应地优化代码。</target>
        </trans-unit>
        <trans-unit id="f10c0d6014f2fa95b1f233b08b48cbc3b9a32b36" translate="yes" xml:space="preserve">
          <source>When compiling the application remember to link with the required libraries, in this case the Foundation framework. Example:</source>
          <target state="translated">当编译应用程序时,记得与所需的库链接,在这种情况下,基金会框架。例子:在编译应用程序时,记得与所需的库链接,这里是基金会框架。</target>
        </trans-unit>
        <trans-unit id="b62e9a626abd9a9fe60a81c2acd8e6a6e782d60a" translate="yes" xml:space="preserve">
          <source>When considering matches, a class is considered to be a match for any super classes or interfaces:</source>
          <target state="translated">在考虑匹配时,一个类被认为是任何超级类或接口的匹配。</target>
        </trans-unit>
        <trans-unit id="25e7aea40035f2392fc028cbab809dceedddf2af" translate="yes" xml:space="preserve">
          <source>When converting strings to numeric types, note that the D hexadecimal and binary literals are not handled. Neither the prefixes that indicate the base, nor the horizontal bar used to separate groups of digits are recognized. This also applies to the suffixes that indicate the type.  To work around this, you can specify a radix for conversions involving numbers.</source>
          <target state="translated">当将字符串转换为数字类型时,请注意,D十六进制和二进制字元不被处理。无论是表示基数的前缀,还是用于分隔数字组的横杠,都不被识别。这也适用于表示类型的后缀。为了解决这个问题,您可以为涉及数字的转换指定一个半径。</target>
        </trans-unit>
        <trans-unit id="f20f2f5dc05d757ab38fb9ae4891dd9fae63b55d" translate="yes" xml:space="preserve">
          <source>When creating a value of type &lt;code&gt;Flag!&quot;Name&quot;&lt;/code&gt;, use &lt;code&gt; Flag!&quot;Name&quot;.no&lt;/code&gt; for the negative option. When using a value of type &lt;code&gt;Flag!&quot;Name&quot;&lt;/code&gt;, compare it against &lt;code&gt; Flag!&quot;Name&quot;.no&lt;/code&gt; or just &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">创建类型为 &lt;code&gt;Flag!&quot;Name&quot;&lt;/code&gt; 的值时，请使用 &lt;code&gt; Flag!&quot;Name&quot;.no&lt;/code&gt; 作为否定选项。当使用类型 &lt;code&gt;Flag!&quot;Name&quot;&lt;/code&gt; 的值时，将其与 &lt;code&gt; Flag!&quot;Name&quot;.no&lt;/code&gt; 进行比较，或者为 &lt;code&gt;false&lt;/code&gt; 或 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75b62a7e29426c0ff497e198ae5a3aa4814c266f" translate="yes" xml:space="preserve">
          <source>When creating a value of type &lt;code&gt;Flag!&quot;Name&quot;&lt;/code&gt;, use &lt;code&gt; Flag!&quot;Name&quot;.yes&lt;/code&gt; for the affirmative option. When using a value of type &lt;code&gt;Flag!&quot;Name&quot;&lt;/code&gt;, compare it against &lt;code&gt; Flag!&quot;Name&quot;.yes&lt;/code&gt;.</source>
          <target state="translated">当创建类型为 &lt;code&gt;Flag!&quot;Name&quot;&lt;/code&gt; 的值时，请使用 &lt;code&gt; Flag!&quot;Name&quot;.yes&lt;/code&gt; 作为肯定选项。使用 &lt;code&gt;Flag!&quot;Name&quot;&lt;/code&gt; 类型的值时，请将其与 &lt;code&gt; Flag!&quot;Name&quot;.yes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5052cdcf10ea7a59ad8fcab69f469387e38a545c" translate="yes" xml:space="preserve">
          <source>When defining a Scheduler, an instance of this struct must be associated with each logical thread. It contains all implementation-level information needed by the internal API.</source>
          <target state="translated">当定义一个Scheduler时,这个结构的实例必须与每个逻辑线程相关联。它包含内部API所需要的所有实现级信息。</target>
        </trans-unit>
        <trans-unit id="a5cd9eef8c2bc9dbecfebdd3358b5fd51424da8d" translate="yes" xml:space="preserve">
          <source>When e is trivial and alwaysCopy == false, e itself is returned. Otherwise, a new VarExp is returned.</source>
          <target state="translated">当e是琐碎的且alwaysCopy ==false时,返回e本身。否则,将返回一个新的VarExp。</target>
        </trans-unit>
        <trans-unit id="1714fad4c54ea032f644bd0ff2725ffe944cc8e9" translate="yes" xml:space="preserve">
          <source>When examining a data structure or interface, it is very helpful to be able to easily tell which data can be expected to not change, which data might change, and who may change that data. This is done with the aid of the language typing system. Data can be marked as const or immutable, with the default being changeable (or</source>
          <target state="translated">在检查一个数据结构或接口时,能够很容易地分辨出哪些数据可以预期不会改变,哪些数据可能会改变,以及谁可能会改变这些数据是非常有用的。这要借助于语言类型系统来完成。数据可以被标记为const或immutable,默认为可改变(或</target>
        </trans-unit>
        <trans-unit id="0859e008a01c747e02b607536b15fa5d79c1fdcb" translate="yes" xml:space="preserve">
          <source>When getting the size of a member, it is not necessary for there to be a</source>
          <target state="translated">在获取成员的大小时,不一定要有一个</target>
        </trans-unit>
        <trans-unit id="814983e81354978a67ed413c94e9b7b6f637709d" translate="yes" xml:space="preserve">
          <source>When indexing and slicing an array, an out of bounds access will cause a runtime error, in order to prevent undefined behavior.</source>
          <target state="translated">当对一个数组进行索引和切片时,为了防止出现未定义的行为,越界访问将导致运行时错误。</target>
        </trans-unit>
        <trans-unit id="fc7c4dad5ca2cb8b81db522d7ceba34b23bb3cfe" translate="yes" xml:space="preserve">
          <source>When inheriting from &lt;code&gt;MultiLogger&lt;/code&gt; this member can be used to gain access to the stored &lt;code&gt;Logger&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;MultiLogger&lt;/code&gt; 继承时，该成员可用于访问存储的 &lt;code&gt;Logger&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b86472ecfbd7bd8b1de11ab8c34dee4b76f1d70d" translate="yes" xml:space="preserve">
          <source>When laying out a struct to match an externally defined layout, use align attributes to describe an exact match. Using a &lt;a href=&quot;version#static-assert&quot;&gt;Static Assert&lt;/a&gt; to ensure the result is as expected.</source>
          <target state="translated">在布局结构以匹配外部定义的布局时，请使用align属性描述完全匹配。使用&lt;a href=&quot;version#static-assert&quot;&gt;静态声明&lt;/a&gt;来确保结果符合预期。</target>
        </trans-unit>
        <trans-unit id="c69f0de2afd3d5bd4cbff71a6a8b6010bba89573" translate="yes" xml:space="preserve">
          <source>When moving a struct instance, the compiler emits a call to this function after blitting the instance and before releasing the original instance's memory.</source>
          <target state="translated">当移动一个结构体实例时,编译器在点亮实例后,在释放原实例的内存之前,会发出对该函数的调用。</target>
        </trans-unit>
        <trans-unit id="25749d61a1b645ecb81cf7a527d2528e8b1112d5" translate="yes" xml:space="preserve">
          <source>When no delimiter is provided, strings are split into an array of words, using whitespace as delimiter. Runs of whitespace are merged together (no empty words are produced).</source>
          <target state="translated">当没有提供定界符时,字符串被分割成一个字数组,使用空格作为定界符。由空格组成的字符串会被合并在一起(不会产生空字)。</target>
        </trans-unit>
        <trans-unit id="c4c9890957dc3d440a6789767a520a3402a9a5c4" translate="yes" xml:space="preserve">
          <source>When one memory location is accessible with two different types, that aliasing is considered safe in these cases:</source>
          <target state="translated">当一个内存位置可以用两种不同的类型访问时,在这些情况下,该别名被认为是安全的。</target>
        </trans-unit>
        <trans-unit id="24002fe90670fbadfc9a04fb282387881cb74bb4" translate="yes" xml:space="preserve">
          <source>When passing a string with unicode modifiers on characters, such as &lt;code&gt;\u0301&lt;/code&gt;, this function will not properly keep the position of the modifier. For example, reversing &lt;code&gt;ba\u0301d&lt;/code&gt; (&quot;b&amp;aacute;d&quot;) will result in d\u0301ab (&quot;d́ab&quot;) instead of &lt;code&gt;da\u0301b&lt;/code&gt; (&quot;d&amp;aacute;b&quot;).</source>
          <target state="translated">当在字符上传递带有unicode修饰符的字符串时，例如 &lt;code&gt;\u0301&lt;/code&gt; ，此函数将无法正确保留修饰符的位置。例如，反转 &lt;code&gt;ba\u0301d&lt;/code&gt; （&amp;ldquo;b&amp;aacute;d&amp;rdquo;）将导致d \ u0301ab（&amp;ldquo; d́ab&amp;rdquo;）而不是 &lt;code&gt;da\u0301b&lt;/code&gt; （&amp;ldquo;d&amp;aacute;b&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="4594bf9ec9e481a017a23a91d52669a9aa1fb686" translate="yes" xml:space="preserve">
          <source>When performing type conversions, &lt;a href=&quot;std_conv#ConvException&quot;&gt;&lt;code&gt;std.conv.ConvException&lt;/code&gt;&lt;/a&gt; is stored in the &lt;code&gt;next&lt;/code&gt; field.</source>
          <target state="translated">执行类型转换时，&lt;a href=&quot;std_conv#ConvException&quot;&gt; &lt;code&gt;std.conv.ConvException&lt;/code&gt; &lt;/a&gt;存储 &lt;code&gt;next&lt;/code&gt; 字段中。</target>
        </trans-unit>
        <trans-unit id="d930594f828ce102df70231e080c643ae6db4dfc" translate="yes" xml:space="preserve">
          <source>When reading data from an external source (like a file) written in a different endian format.</source>
          <target state="translated">当从外部源(如文件)读取以不同的endian格式编写的数据时。</target>
        </trans-unit>
        <trans-unit id="4a9a422bd912cb28217d65422e937a7368680e06" translate="yes" xml:space="preserve">
          <source>When reading or writing individual bytes of a multibyte type like &lt;code&gt;long&lt;/code&gt;s or &lt;code&gt;double&lt;/code&gt;s.</source>
          <target state="translated">读取或写入多字节类型（如 &lt;code&gt;long&lt;/code&gt; 或 &lt;code&gt;double&lt;/code&gt; )的单个字节时。</target>
        </trans-unit>
        <trans-unit id="45de4a8a712e00f9f4a3855141e4d0d235915b3d" translate="yes" xml:space="preserve">
          <source>When renaming and selective importing are combined:</source>
          <target state="translated">当重命名和选择性导入相结合时。</target>
        </trans-unit>
        <trans-unit id="7cadeab2e49ad72e63d768db3fcadd9c0cd9f7e7" translate="yes" xml:space="preserve">
          <source>When representing data, the nature of that data is generally symbolic as opposed to some other kind of data (for example, visual).</source>
          <target state="translated">在表示数据时,该数据的性质一般是象征性的,而不是其他种类的数据(例如,视觉数据)。</target>
        </trans-unit>
        <trans-unit id="938265349267329f2acf92b42b29485438eaaf7b" translate="yes" xml:space="preserve">
          <source>When set to &quot;&quot;, parameters to array and associative array receivers are treated as an individual argument. That is, only one argument is appended or inserted per appearance of the option switch. If &lt;code&gt;arraySep&lt;/code&gt; is set to something else, then each parameter is first split by the separator, and the individual pieces are treated as arguments to the same option.</source>
          <target state="translated">当设置为&amp;ldquo;&amp;rdquo;时，数组和关联数组接收器的参数将被视为单个参数。也就是说，每次选项开关出现时，仅会附加或插入一个参数。如果将 &lt;code&gt;arraySep&lt;/code&gt; 设置为其他值，则每个参数首先由分隔符分开，并将各个部分视为同一选项的参数。</target>
        </trans-unit>
        <trans-unit id="80aa4a5b53887e0378b7c0557a102bb741248b2a" translate="yes" xml:space="preserve">
          <source>When talking about function parameters, the</source>
          <target state="translated">当谈论函数参数时,</target>
        </trans-unit>
        <trans-unit id="fb193fda02d3c450532e2c4ed3ce35d59b4da16c" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;maxSize&lt;/code&gt; parameter is specified, memoize will used a fixed size hash table to limit the number of cached entries.</source>
          <target state="translated">当指定 &lt;code&gt;maxSize&lt;/code&gt; 参数时，memoize将使用固定大小的哈希表来限制缓存条目的数量。</target>
        </trans-unit>
        <trans-unit id="28be91897a1b828d9ca3bf3d37a260c8b80f7f1c" translate="yes" xml:space="preserve">
          <source>When the app thinks there's data available for curl it calls this function to read/write whatever there is right now. This returns as soon as the reads and writes are done. This function does not require that there actually is data available for reading or that data can be written, it can be called just in case. It returns the number of handles that still transfer data in the second argument's integer-pointer.</source>
          <target state="translated">当应用程序认为有数据可供curl使用时,它就会调用这个函数来读取/写入现在的任何数据。读写完成后会立即返回。这个函数并不要求真的有数据可供读取,也不要求可以写入数据,它可以被调用以备不时之需。它返回第二个参数的整数指针中仍然传输数据的句柄数。</target>
        </trans-unit>
        <trans-unit id="e0b14f32551259767f4a30407e0fff8e38d4bb8d" translate="yes" xml:space="preserve">
          <source>When the compiler sees a call to a method with Objective-C linkage it will generate a call similar to how an Objective-C compiler would call the method.</source>
          <target state="translated">当编译器看到一个带有Objective-C链接的方法的调用时,它将会产生一个类似于Objective-C编译器调用方法的调用。</target>
        </trans-unit>
        <trans-unit id="83c1e44b83f0f40840e69797d87e16b92208f380" translate="yes" xml:space="preserve">
          <source>When the data to be compressed doesn't fit in one buffer, use &lt;a href=&quot;#Compress&quot;&gt;&lt;code&gt;Compress&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#UnCompress&quot;&gt;&lt;code&gt;UnCompress&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当要压缩的数据不适合一个缓冲区时，请使用&lt;a href=&quot;#Compress&quot;&gt; &lt;code&gt;Compress&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#UnCompress&quot;&gt; &lt;code&gt;UnCompress&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="896539fdc3e45dd59ef48e379f0327b9c5844901" translate="yes" xml:space="preserve">
          <source>When the environment variable version is used, the path won't be modified if the environment variable doesn't exist or it is empty. When the database version is used, the path won't be modified if the user doesn't exist in the database or there is not enough memory to perform the query.</source>
          <target state="translated">当使用环境变量版本时,如果环境变量不存在或为空,路径不会被修改。当使用数据库版本时,如果用户在数据库中不存在或没有足够的内存进行查询,则不会修改路径。</target>
        </trans-unit>
        <trans-unit id="7c65129fadefc530bc417ed6acb8a69dec4764f6" translate="yes" xml:space="preserve">
          <source>When the fallback type is different from the Nullable type, &lt;code&gt;get(T)&lt;/code&gt; returns the common type.</source>
          <target state="translated">当后备类型与Nullable类型不同时， &lt;code&gt;get(T)&lt;/code&gt; 返回公共类型。</target>
        </trans-unit>
        <trans-unit id="cb534bd82a0cc54777be5e4326d6be4e7a12f475" translate="yes" xml:space="preserve">
          <source>When the owner of the graph is no longer needed, then the graph of memory objects it points to is no longer needed and can be safely disposed of. If the owner itself is no longer in use (i.e. is no longer</source>
          <target state="translated">当图的所有者不再需要时,那么它所指向的内存对象的图就不再需要,可以安全地处理掉。如果图的所有者本身不再使用(即不再是</target>
        </trans-unit>
        <trans-unit id="ef2705f8c4f5d477062e59510ed5eeb511cc61cb" translate="yes" xml:space="preserve">
          <source>When the sequence is a</source>
          <target state="translated">当序列是一个</target>
        </trans-unit>
        <trans-unit id="0309591ed6bc783d05be62ec41369ee1fb439157" translate="yes" xml:space="preserve">
          <source>When the slice operator appears as the left-hand side of an assignment expression, it means that the contents of the array are the target of the assignment rather than a reference to the array. Array copying happens when the left-hand side is a slice, and the right-hand side is an array of or pointer to the same type.</source>
          <target state="translated">当分片运算符作为赋值表达式的左手边出现时,意味着数组的内容是赋值的目标,而不是数组的引用。当左手边是分片,右手边是相同类型的数组或指针时,就会发生数组复制。</target>
        </trans-unit>
        <trans-unit id="0d0158e3bfad8163fe4d771bd25fbc541f126c32" translate="yes" xml:space="preserve">
          <source>When the template parameters must be deduced, the eponymous members can't rely on a &lt;a href=&quot;version#StaticIfCondition&quot;&gt;&lt;code&gt;static if&lt;/code&gt;&lt;/a&gt; condition since the deduction relies on how the in members are used:</source>
          <target state="translated">当必须推导模板参数时，同名成员不能依赖于&lt;a href=&quot;version#StaticIfCondition&quot;&gt; &lt;code&gt;static if&lt;/code&gt; &lt;/a&gt;条件，因为推导取决于in成员的使用方式：</target>
        </trans-unit>
        <trans-unit id="18a1489da8628a0eecf26996d6a9104fb7ace293" translate="yes" xml:space="preserve">
          <source>When the threads in the global task pool are waiting on a synchronization primitive (for example a mutex), and you want to parallelize the code that needs to run before these threads can be resumed.</source>
          <target state="translated">当全局任务池中的线程正在等待一个同步基元(例如mutex),而你想并行化需要在这些线程恢复之前运行的代码。</target>
        </trans-unit>
        <trans-unit id="234c7c2ced27e46dbe44f8c1d3b942116be5d1ba" translate="yes" xml:space="preserve">
          <source>When the value that is returned by this function is destroyed, &lt;code&gt;func&lt;/code&gt; will run. &lt;code&gt;func&lt;/code&gt; is a unary function that takes a &lt;a href=&quot;core_time#TickDuration&quot;&gt;&lt;code&gt;core.time.TickDuration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当此函数返回的值被破坏时， &lt;code&gt;func&lt;/code&gt; 将运行。 &lt;code&gt;func&lt;/code&gt; 是一个采用&lt;a href=&quot;core_time#TickDuration&quot;&gt; &lt;code&gt;core.time.TickDuration&lt;/code&gt; &lt;/a&gt;的一元函数。</target>
        </trans-unit>
        <trans-unit id="f3712c7b591b91ff3f87d8d90ad3ede3c54ffd11" translate="yes" xml:space="preserve">
          <source>When the virtual-table mechanism stabilizes, we will declare the interface fixed, support it indefinitely, and remove this comment.</source>
          <target state="translated">等到虚拟表机制稳定后,我们会宣布接口固定,无限期支持,并删除此评论。</target>
        </trans-unit>
        <trans-unit id="a3cf6901b7b4052fec7ad41737841bcba23193f0" translate="yes" xml:space="preserve">
          <source>When there are more than two ranges, the above conditions apply to each adjacent pair of ranges.</source>
          <target state="translated">当有两个以上的范围时,上述条件适用于每一对相邻的范围。</target>
        </trans-unit>
        <trans-unit id="d07dc7e0a2ca5375f8d0e4ada71ece6299c4ea8d" translate="yes" xml:space="preserve">
          <source>When this function returns true, &lt;code&gt;checkValue()&lt;/code&gt; should also return true.</source>
          <target state="translated">当此函数返回true时， &lt;code&gt;checkValue()&lt;/code&gt; 也应返回true。</target>
        </trans-unit>
        <trans-unit id="0e32a64dc0a978025c37a0920a24a143d7cf1416" translate="yes" xml:space="preserve">
          <source>When transversed, the elements of a range of ranges are assumed to have different lengths (e.g. a jagged array).</source>
          <target state="translated">转置时,假设一个范围内的元素具有不同的长度(如锯齿形阵列)。</target>
        </trans-unit>
        <trans-unit id="216d54ab44b92631e631f27e0f2e599194972d30" translate="yes" xml:space="preserve">
          <source>When unit tests are enabled, the &lt;a href=&quot;version#PredefinedVersions&quot;&gt;version identifier&lt;/a&gt;&lt;code&gt;unittest&lt;/code&gt; is predefined.</source>
          <target state="translated">启用单元测试后，将预定义&lt;a href=&quot;version#PredefinedVersions&quot;&gt;版本标识符&lt;/a&gt; &lt;code&gt;unittest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="13ccf60a3ee5316c31b6b5b537a534e41d39ff06" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;Array&lt;/code&gt; with range-based functions like those in &lt;code&gt;std.algorithm&lt;/code&gt;, &lt;code&gt;Array&lt;/code&gt; must be sliced to get a range (for example, use &lt;code&gt;array[].map!&lt;/code&gt; instead of &lt;code&gt;array.map!&lt;/code&gt;). The container itself is not a range.</source>
          <target state="translated">当将 &lt;code&gt;Array&lt;/code&gt; 与基于范围的函数（如 &lt;code&gt;std.algorithm&lt;/code&gt; 中的函数）一起使用时，必须对 &lt;code&gt;Array&lt;/code&gt; 进行切片以获取范围（例如，使用 &lt;code&gt;array[].map!&lt;/code&gt; &lt;code&gt;array.map!&lt;/code&gt; 而不是array.map！）。容器本身不是范围。</target>
        </trans-unit>
        <trans-unit id="03cc7adf8ba709706cb35f2bb58133dcfd782ae1" translate="yes" xml:space="preserve">
          <source>When using inline assembly to correctly call a function.</source>
          <target state="translated">当使用内联装配正确调用函数时。</target>
        </trans-unit>
        <trans-unit id="774688ec36c97935b4687d1f1193e25cd82c07c5" translate="yes" xml:space="preserve">
          <source>When you want &lt;code&gt;TaskPool&lt;/code&gt; instances with multiple priorities, for example a low priority pool and a high priority pool.</source>
          <target state="translated">当您想要具有多个优先级的 &lt;code&gt;TaskPool&lt;/code&gt; 实例时，例如低优先级池和高优先级池。</target>
        </trans-unit>
        <trans-unit id="5c533eb95b7c68ca359d852388aa63c0df13caf8" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;W&lt;/code&gt; is an &lt;a href=&quot;std_range_primitives#isOutputRange&quot;&gt;output range&lt;/a&gt; which accepts characters. The template type does not have to be called &lt;code&gt;W&lt;/code&gt;.  The following overloads are also accepted for legacy reasons or for use in virtual functions. It's recommended that any new code forgo these overloads if possible for speed and attribute acceptance reasons.</source>
          <target state="translated">其中 &lt;code&gt;W&lt;/code&gt; 是接受字符的&lt;a href=&quot;std_range_primitives#isOutputRange&quot;&gt;输出范围&lt;/a&gt;。模板类型没有被称为 &lt;code&gt;W&lt;/code&gt; 。出于传统原因或在虚拟函数中使用，也可以接受以下重载。出于速度和属性接受的原因，建议所有新代码都尽可能放弃这些重载。</target>
        </trans-unit>
        <trans-unit id="eb779ddbf577345f9139abf518ae6cd3c208a9cf" translate="yes" xml:space="preserve">
          <source>Where XX, YY and ZZ are the main version, release and patch numbers in hexadecimal (using 8 bits each). All three numbers are always represented using two digits. 1.2 would appear as &quot;0x010200&quot; while version 9.11.7 appears as &quot;0x090b07&quot;.</source>
          <target state="translated">其中 XX、YY 和 ZZ 是十六进制的主要版本、版本号和补丁号(每个版本使用 8 位)。所有三个数字总是用两个数字来表示。1.2将显示为 &quot;0x010200&quot;,而9.11.7版本则显示为 &quot;0x090b07&quot;。</target>
        </trans-unit>
        <trans-unit id="6a3d5415126b01717847c36c693a1e7515df6fdf" translate="yes" xml:space="preserve">
          <source>Where a, b are arbitrary classes, means union, set difference, symmetric set difference, and intersection respectively.</source>
          <target state="translated">其中a、b为任意类,分别指联合、集差、对称集差和交集。</target>
        </trans-unit>
        <trans-unit id="69a17bf80e2fc04c2ef5e795e322e80f59502b94" translate="yes" xml:space="preserve">
          <source>Where if &lt;code&gt;elemsPerPage&lt;/code&gt; is a power of 2 the whole process is a handful of simple instructions and 2 array reads. Subsequent levels of the trie are introduced by recursing on this notion - the index array is treated as values. The number of bits in index is then again split into 2 parts, with pages over 'current-index' and the new 'upper-index'.</source>
          <target state="translated">如果 &lt;code&gt;elemsPerPage&lt;/code&gt; 是2的幂，则整个过程只有少量的简单指令和2个数组读取。通过递归此概念来引入特里的后续级别-将索引数组视为值。然后，将索引中的位数再次分为两部分，页面分别位于&amp;ldquo; current-index&amp;rdquo;和新的&amp;ldquo; upper-index&amp;rdquo;上。</target>
        </trans-unit>
        <trans-unit id="ffd66cb2f4f10b47de2beafeec66ea7b60de2589" translate="yes" xml:space="preserve">
          <source>Where the identifier is set</source>
          <target state="translated">当标识符被设置为</target>
        </trans-unit>
        <trans-unit id="c203f2e467da276e5a5bb88a389aa547ada7fa1a" translate="yes" xml:space="preserve">
          <source>Where to copy into. The destructor, if any, is invoked before the copy is performed.</source>
          <target state="translated">复制到哪里。如果有的话,在进行复制之前,会先调用解构器。</target>
        </trans-unit>
        <trans-unit id="dae838c18b4d528d3dc79e9e2ab37bd9a763d468" translate="yes" xml:space="preserve">
          <source>Whereas classes are reference types, structs are value types. Structs and unions are simple aggregations of data and their associated operations on that data.</source>
          <target state="translated">而类是引用类型,结构是值类型。构造体和联合体是数据的简单聚合,以及它们对数据的相关操作。</target>
        </trans-unit>
        <trans-unit id="62176441139d7d91c6f66f0b49fc197cb19d61fc" translate="yes" xml:space="preserve">
          <source>Whereas the other constructors take in the given date/time, assume that it's in the given time zone, and convert it to hnsecs in UTC since midnight, January 1st, 1 A.D. UTC - i.e. std time - this constructor takes a std time, which is specifically already in UTC, so no conversion takes place. Of course, the various getter properties and functions will use the given time zone's conversion function to convert the results to that time zone, but no conversion of the arguments to this constructor takes place.</source>
          <target state="translated">而其他构造函数则是获取给定的日期/时间,假设它在给定的时区,并将其转换为公元1月1日午夜起的UTC时区的hnsecs--即标准时间--而这个构造函数获取的是标准时间,特别是已经在UTC时区的时间,所以没有进行转换。当然,各种getter属性和函数会使用给定时区的转换函数将结果转换为该时区,但这个构造函数的参数不会发生转换。</target>
        </trans-unit>
        <trans-unit id="5439ddebea3bcb8241b4a1b48a901c3a98dff5ec" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;c&lt;/code&gt; is a control character.</source>
          <target state="translated">无论 &lt;code&gt;c&lt;/code&gt; 是控制字符。</target>
        </trans-unit>
        <trans-unit id="ac340e59aede6ee81d823a4cd6c5e84a932a655e" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;c&lt;/code&gt; is a digit (0 .. 9).</source>
          <target state="translated">是否 &lt;code&gt;c&lt;/code&gt; 是数字（0..9）。</target>
        </trans-unit>
        <trans-unit id="7a1b20eec72209de601cdbd2eb60cdc44fe1de5c" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;c&lt;/code&gt; is a digit in base 16 (0 .. 9, A .. F, a .. f).</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; 是否为以16为底的数字（0..9，A..F，a..f）。</target>
        </trans-unit>
        <trans-unit id="5ef7c81488982c30dc4276356f1e35e27da46b13" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;c&lt;/code&gt; is a digit in base 8 (0 .. 7).</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; 是否为以8为底的数字（0 .. 7）。</target>
        </trans-unit>
        <trans-unit id="485864c1a1ee3e1f67b7c0cca59c7933fd3cba6d" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;c&lt;/code&gt; is a letter or a number (0 .. 9, a .. z, A .. Z).</source>
          <target state="translated">是否 &lt;code&gt;c&lt;/code&gt; 是一个字母或一个数字（0 .. 9，.. Z，A .. Z）。</target>
        </trans-unit>
        <trans-unit id="7ed8edd047ab927ee6ae7e9b404aa1611fee1ac6" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;c&lt;/code&gt; is a lowercase ASCII letter (a .. z).</source>
          <target state="translated">无论 &lt;code&gt;c&lt;/code&gt; 是小写ASCII字母（A ... Z）。</target>
        </trans-unit>
        <trans-unit id="e45a29a9e82d832a043d4e613efe813b387b2d34" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;c&lt;/code&gt; is an ASCII letter (A .. Z, a .. z).</source>
          <target state="translated">是否 &lt;code&gt;c&lt;/code&gt; 是一个ASCII字母（A .. Z，一.. z）表示。</target>
        </trans-unit>
        <trans-unit id="4f95dae2edd2421032fe310301c2c8b1dfab82c9" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;c&lt;/code&gt; is an uppercase ASCII letter (A .. Z).</source>
          <target state="translated">是否 &lt;code&gt;c&lt;/code&gt; 是大写字母ASCII（A .. Z）。</target>
        </trans-unit>
        <trans-unit id="7e4e8211288692290b0be6dedd54932002f12b6c" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;popFront&lt;/code&gt; should be called on the range before returning it.</source>
          <target state="translated">返回范围之前是否应在范围上调用 &lt;code&gt;popFront&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="81f48dc00dd66c921120fd6bdac04fd2154ca8fc" translate="yes" xml:space="preserve">
          <source>Whether a particular function can be inlined or not is implementation defined.</source>
          <target state="translated">某一特定函数是否可以内联,是由实现定义的。</target>
        </trans-unit>
        <trans-unit id="80666ab4965f448639b5b13ddb44b4b76acb3bd0" translate="yes" xml:space="preserve">
          <source>Whether a particular operation on a type is supported can be tested at compile time with:</source>
          <target state="translated">是否支持对类型的特定操作可以在编译时用以下方法测试。</target>
        </trans-unit>
        <trans-unit id="b17fe9f3bccc77f51d0d6f2eb75dfb731d9293e3" translate="yes" xml:space="preserve">
          <source>Whether a path is absolute or not.</source>
          <target state="translated">一个路径是否绝对。</target>
        </trans-unit>
        <trans-unit id="d4257757fa6c5a2c951b861ea5ebf39ab85d95e9" translate="yes" xml:space="preserve">
          <source>Whether a path starts at a root directory.  On POSIX, this function returns true if and only if the path starts with a slash (/).  On Windows, this function returns true if the path starts at the root directory of the current drive, of some other drive, or of a network drive.</source>
          <target state="translated">路径是否以根目录开始。在POSIX上,如果且仅当路径以斜线(/)开始时,这个函数返回true。在Windows上,如果路径以当前驱动器、其他驱动器或网络驱动器的根目录开始,这个函数返回true。</target>
        </trans-unit>
        <trans-unit id="47cbbb478f0753b2ad9648d6b321f84472430403" translate="yes" xml:space="preserve">
          <source>Whether a pointer is allocated memory using the GC or some other storage allocator is immaterial to OB, they are not distinguished and are handled identically.</source>
          <target state="translated">指针是使用GC还是其他存储分配器分配内存,对OB来说是无关紧要的,它们没有区别,处理方式是一样的。</target>
        </trans-unit>
        <trans-unit id="c3ee264abbb44915ef26b042ef0ba91b59c33f3c" translate="yes" xml:space="preserve">
          <source>Whether a type exists or not can be tested at compile time with an &lt;a href=&quot;expression#IsExpression&quot;&gt;&lt;i&gt;IsExpression&lt;/i&gt;&lt;/a&gt;:</source>
          <target state="translated">可以在编译时使用&lt;a href=&quot;expression#IsExpression&quot;&gt;&lt;i&gt;IsExpression&lt;/i&gt;&lt;/a&gt;测试类型是否存在：</target>
        </trans-unit>
        <trans-unit id="0d2e8298d7375b3835488873ddc1eb261222d403" translate="yes" xml:space="preserve">
          <source>Whether all of the given strings are valid units of time.</source>
          <target state="translated">是否所有给定的字符串都是有效的时间单位。</target>
        </trans-unit>
        <trans-unit id="bddd6255fa5caa2472a10e52a62323219a833636" translate="yes" xml:space="preserve">
          <source>Whether duplicates should be allowed (optional, default: false)</source>
          <target state="translated">是否允许重复(可选,默认:false)。</target>
        </trans-unit>
        <trans-unit id="105ee00d48f41e70c224fbb448cf13e95b6d4c14" translate="yes" xml:space="preserve">
          <source>Whether matching path name components against the base path should be case-sensitive or not.</source>
          <target state="translated">与基本路径匹配的路径名组件是否应该区分大小写。</target>
        </trans-unit>
        <trans-unit id="5994712767c3b51ff98f1684ff6aac750498fbfd" translate="yes" xml:space="preserve">
          <source>Whether or not &lt;code&gt;c&lt;/code&gt; is a Unicode whitespace &lt;a href=&quot;#Character&quot;&gt;character&lt;/a&gt;. (general Unicode category: Part of C0(tab, vertical tab, form feed, carriage return, and linefeed characters), Zs, Zl, Zp, and NEL(U+0085))</source>
          <target state="translated">无论 &lt;code&gt;c&lt;/code&gt; 是一个Unicode空白&lt;a href=&quot;#Character&quot;&gt;字符&lt;/a&gt;。（通用Unicode类别：C0（制表符，垂直制表符，换页符，回车符和换行符），Zs，Zl，Zp和NEL（U + 0085）的一部分）</target>
        </trans-unit>
        <trans-unit id="e5176862b3796a64ee6f96c0f2cad977204be80c" translate="yes" xml:space="preserve">
          <source>Whether or not &lt;code&gt;c&lt;/code&gt; is a printable character - including the space character.</source>
          <target state="translated">无论 &lt;code&gt;c&lt;/code&gt; 是可打印字符-包括空格字符。</target>
        </trans-unit>
        <trans-unit id="8d275566c08c40d417a8d0c1a542e23706cfd89d" translate="yes" xml:space="preserve">
          <source>Whether or not &lt;code&gt;c&lt;/code&gt; is a printable character other than the space character.</source>
          <target state="translated">无论 &lt;code&gt;c&lt;/code&gt; 比空格字符以外的可打印字符。</target>
        </trans-unit>
        <trans-unit id="0d4466d6122843433740ac1e24f53638cd058f74" translate="yes" xml:space="preserve">
          <source>Whether or not &lt;code&gt;c&lt;/code&gt; is a punctuation character. That includes all ASCII characters which are not control characters, letters, digits, or whitespace.</source>
          <target state="translated">无论 &lt;code&gt;c&lt;/code&gt; 是标点字符。其中包括不是控制字符，字母，数字或空格的所有ASCII字符。</target>
        </trans-unit>
        <trans-unit id="53aed4e21bd24c8a6a4ab614baedfcc7d4f4996f" translate="yes" xml:space="preserve">
          <source>Whether or not &lt;code&gt;c&lt;/code&gt; is a whitespace character. That includes the space, tab, vertical tab, form feed, carriage return, and linefeed characters.</source>
          <target state="translated">无论 &lt;code&gt;c&lt;/code&gt; 是一个空白字符。其中包括空格，制表符，垂直制表符，换页符，回车符和换行符。</target>
        </trans-unit>
        <trans-unit id="b615a3fb840147ddc1a8af598703baa7a19f1868" translate="yes" xml:space="preserve">
          <source>Whether or not &lt;code&gt;c&lt;/code&gt; is in the ASCII character set - i.e. in the range 0 .. 0x7F.</source>
          <target state="translated">是否 &lt;code&gt;c&lt;/code&gt; 是ASCII字符集-即，在范围从0到0x7F的。</target>
        </trans-unit>
        <trans-unit id="4fcdd7b41031ee1cf72b913251142382d55fe4bc" translate="yes" xml:space="preserve">
          <source>Whether or not suffix matching is case-sensitive.</source>
          <target state="translated">后缀匹配是否区分大小写。</target>
        </trans-unit>
        <trans-unit id="ab7c20d3765e454b2882b3b020b5a0b203d7fc57" translate="yes" xml:space="preserve">
          <source>Whether or not to replace invalid UTF with &lt;a href=&quot;#replacementDchar&quot;&gt;&lt;code&gt;replacementDchar&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">是否要替换无效UTF &lt;a href=&quot;#replacementDchar&quot;&gt; &lt;code&gt;replacementDchar&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e89650fbf7133e4518a40c904d03fa213351ed5" translate="yes" xml:space="preserve">
          <source>Whether some pointers can be initialized with the addresses of other functions or data.</source>
          <target state="translated">是否可以用其他函数或数据的地址初始化一些指针。</target>
        </trans-unit>
        <trans-unit id="46b11fa801f28347be88f3318e7531888286afa4" translate="yes" xml:space="preserve">
          <source>Whether symbolic links which point to directories should be treated as directories and their contents iterated over.</source>
          <target state="translated">是否应将指向目录的符号链接作为目录及其内容进行迭代处理。</target>
        </trans-unit>
        <trans-unit id="cf1e4687c0d3d2d1dc253d21a37e498c8e5bdf91" translate="yes" xml:space="preserve">
          <source>Whether the</source>
          <target state="translated">是否</target>
        </trans-unit>
        <trans-unit id="2b547c643e30d803b4436c4a2410fe11d4d71937" translate="yes" xml:space="preserve">
          <source>Whether the alias this was reported as deprecated.</source>
          <target state="translated">这个别名是否报废了。</target>
        </trans-unit>
        <trans-unit id="64958592863f2f27ab327ee132cce3a7bd2ddc9b" translate="yes" xml:space="preserve">
          <source>Whether the attributes are values or types is up to the user, and whether later attributes accumulate or override earlier ones is also up to how the user interprets them.</source>
          <target state="translated">属性是值还是类型由用户决定,后来的属性是积累还是覆盖之前的属性,也取决于用户如何解释。</target>
        </trans-unit>
        <trans-unit id="63cc9d04434e2b0f371df73e94c3596c4b2795d4" translate="yes" xml:space="preserve">
          <source>Whether the current year is a date in A.D.</source>
          <target state="translated">本年是否为公元的日期。</target>
        </trans-unit>
        <trans-unit id="74f48ebfb70bd542fa649d10356abbfea0c933cd" translate="yes" xml:space="preserve">
          <source>Whether the day should be allowed to overflow, causing the month to increment.</source>
          <target state="translated">是否应该允许日溢出,导致月递增。</target>
        </trans-unit>
        <trans-unit id="e4d91a4b6609e830d213d95f93d157f35d7012ec" translate="yes" xml:space="preserve">
          <source>Whether the days should be allowed to overflow on &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;, causing their month to increment.</source>
          <target state="translated">是否应允许这些天在 &lt;code&gt;begin&lt;/code&gt; 和 &lt;code&gt;end&lt;/code&gt; 溢出，从而导致其月份增加。</target>
        </trans-unit>
        <trans-unit id="f906c90dd95bf15e29eecd5d760671025012b178" translate="yes" xml:space="preserve">
          <source>Whether the days should be allowed to overflow on &lt;code&gt;begin&lt;/code&gt;, causing its month to increment.</source>
          <target state="translated">无论是天应允许溢出的 &lt;code&gt;begin&lt;/code&gt; ，导致其每月递增。</target>
        </trans-unit>
        <trans-unit id="1cf8d3b77ba179bc4efd8d66d52696c2e6e3533e" translate="yes" xml:space="preserve">
          <source>Whether the days should be allowed to overflow on &lt;code&gt;end&lt;/code&gt;, causing its month to increment.</source>
          <target state="translated">是否应允许天数 &lt;code&gt;end&lt;/code&gt; ，从而导致其月份增加。</target>
        </trans-unit>
        <trans-unit id="75b2be390650906e0d7fdcddcbc148b30188752c" translate="yes" xml:space="preserve">
          <source>Whether the days should be allowed to overflow on &lt;code&gt;end&lt;/code&gt;, causing their month to increment.</source>
          <target state="translated">是否应允许天数 &lt;code&gt;end&lt;/code&gt; ，从而导致其月份增加。</target>
        </trans-unit>
        <trans-unit id="4f04a420fd7af3fb4659b207356841de3d274500" translate="yes" xml:space="preserve">
          <source>Whether the days should be allowed to overflow, causing the month to increment.</source>
          <target state="translated">是否应该允许天数溢出,导致月份递增。</target>
        </trans-unit>
        <trans-unit id="5edf9636ede7af2a2961293554b8a7947f2de1da" translate="yes" xml:space="preserve">
          <source>Whether the directory's sub-directories should be iterated in depth-first post-order (&lt;a href=&quot;#depth&quot;&gt;&lt;code&gt;depth&lt;/code&gt;&lt;/a&gt;), depth-first pre-order (&lt;a href=&quot;#breadth&quot;&gt;&lt;code&gt;breadth&lt;/code&gt;&lt;/a&gt;), or not at all (&lt;a href=&quot;#shallow&quot;&gt;&lt;code&gt;shallow&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">目录的子目录是否应该按深度优先（&lt;a href=&quot;#depth&quot;&gt; &lt;code&gt;depth&lt;/code&gt; &lt;/a&gt;），深度优先（&lt;a href=&quot;#breadth&quot;&gt; &lt;code&gt;breadth&lt;/code&gt; &lt;/a&gt;）或根本不（&lt;a href=&quot;#shallow&quot;&gt; &lt;code&gt;shallow&lt;/code&gt; &lt;/a&gt;）进行迭代。</target>
        </trans-unit>
        <trans-unit id="e52e8a91e4b8f750e345969fb48d6af719bcad92" translate="yes" xml:space="preserve">
          <source>Whether the elements copied should be in sorted order.</source>
          <target state="translated">复制的元素是否应该按顺序排列。</target>
        </trans-unit>
        <trans-unit id="c4ed695121f4b89d56651176a0692d94b2e93e86" translate="yes" xml:space="preserve">
          <source>Whether the elements copied should be in sorted order.  The function &lt;code&gt;largestPartialIntersection&lt;/code&gt; is useful for e.g. searching an &lt;a href=&quot;https://en.wikipedia.org/wiki/Inverted_index&quot;&gt;inverted index&lt;/a&gt; for the documents most likely to contain some terms of interest. The complexity of the search is &amp;Omicron;(&lt;code&gt;n * log(tgt.length)&lt;/code&gt;), where &lt;code&gt;n&lt;/code&gt; is the sum of lengths of all input ranges. This approach is faster than keeping an associative array of the occurrences and then selecting its top items, and also requires less memory (&lt;code&gt;largestPartialIntersection&lt;/code&gt; builds its result directly in &lt;code&gt;tgt&lt;/code&gt; and requires no extra memory).  If at least one of the ranges is a multiset, then all occurences of a duplicate element are taken into account. The result is equivalent to merging all ranges and picking the most frequent &lt;code&gt;tgt.length&lt;/code&gt; elements.</source>
          <target state="translated">复制的元素是否应按排序顺序。函数 &lt;code&gt;largestPartialIntersection&lt;/code&gt; 对于例如在&lt;a href=&quot;https://en.wikipedia.org/wiki/Inverted_index&quot;&gt;反向索引中&lt;/a&gt;搜索最有可能包含某些感兴趣项的文档很有用。搜索的复杂度为&amp;Omicron;（ &lt;code&gt;n * log(tgt.length)&lt;/code&gt; ），其中 &lt;code&gt;n&lt;/code&gt; 是所有输入范围的长度之和。这种方法比保留事件的关联数组然后选择其顶部项要快，并且所需的内存也更少（ &lt;code&gt;largestPartialIntersection&lt;/code&gt; 直接在 &lt;code&gt;tgt&lt;/code&gt; 中构建其结果并且不需要额外的内存）。如果范围中的至少一个是多集，那么将考虑重复元素的所有出现。结果等同于合并所有范围并选择最常用的 &lt;code&gt;tgt.length&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="222aaf1e209a1d1950f86d3b862f71882791518e" translate="yes" xml:space="preserve">
          <source>Whether the given Gregorian Year is a leap year.</source>
          <target state="translated">给定的公历年是否为闰年。</target>
        </trans-unit>
        <trans-unit id="0960e5d381ab24794774d7641f42ed087b4e5af5" translate="yes" xml:space="preserve">
          <source>Whether the given interval is adjacent to this interval.</source>
          <target state="translated">给定的区间是否与这个区间相邻。</target>
        </trans-unit>
        <trans-unit id="2224cd32996d6b99aba1574ce1aececc83aecc58" translate="yes" xml:space="preserve">
          <source>Whether the given interval is completely within this interval.</source>
          <target state="translated">给定的区间是否完全在这个区间内。</target>
        </trans-unit>
        <trans-unit id="3eb9c7e591a9089f7aa4ef62cbadc0d86f7ab393" translate="yes" xml:space="preserve">
          <source>Whether the given interval overlaps this interval.</source>
          <target state="translated">给定的区间是否与这个区间重叠。</target>
        </trans-unit>
        <trans-unit id="43cf734ed67d93278a33afc7cd0b9e0cc54e9d11" translate="yes" xml:space="preserve">
          <source>Whether the given time point is within this interval.</source>
          <target state="translated">给定的时间点是否在这个区间内。</target>
        </trans-unit>
        <trans-unit id="fba0a8c883b3bbb3c817280550f713f113b648ef" translate="yes" xml:space="preserve">
          <source>Whether the given type defines all of the necessary functions for it to function as a time point.</source>
          <target state="translated">给定类型是否定义了它作为时间点的所有必要功能。</target>
        </trans-unit>
        <trans-unit id="7595a2da4d09354571e7d048eb2cac04b29d2b5c" translate="yes" xml:space="preserve">
          <source>Whether the input should be considered to already be in quotes</source>
          <target state="translated">是否应该认为输入的内容已经加了引号?</target>
        </trans-unit>
        <trans-unit id="6c405afd958614c32b310c5d0cf26f852d390597" translate="yes" xml:space="preserve">
          <source>Whether the interval's length is 0, that is, whether &lt;code&gt;begin == end&lt;/code&gt;.</source>
          <target state="translated">间隔的长度是否为0，即 &lt;code&gt;begin == end&lt;/code&gt; 是否。</target>
        </trans-unit>
        <trans-unit id="fee4c582fcbd6cb7b6d78096f397a088d57f77e8" translate="yes" xml:space="preserve">
          <source>Whether the interval's length is 0. Always returns false.</source>
          <target state="translated">区间的长度是否为0,总是返回false。</target>
        </trans-unit>
        <trans-unit id="211f313086ef9b6b83422bb372a90c8c62b36199" translate="yes" xml:space="preserve">
          <source>Whether the last element has fewer elements than &lt;code&gt;windowSize&lt;/code&gt; it should be be ignored (&lt;code&gt;No.withPartial&lt;/code&gt;) or added (&lt;code&gt;Yes.withPartial&lt;/code&gt;)</source>
          <target state="translated">最后一个元素是否少于 &lt;code&gt;windowSize&lt;/code&gt; ，应将其忽略（ &lt;code&gt;No.withPartial&lt;/code&gt; ）或添加（ &lt;code&gt;Yes.withPartial&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ba9abeb7a170a01907bd30fe75c31c8934244314" translate="yes" xml:space="preserve">
          <source>Whether the matching should be case-sensitive</source>
          <target state="translated">匹配是否应该区分大小写。</target>
        </trans-unit>
        <trans-unit id="f13a37d1655eb5c02daf3aaa88f877bec24d658e" translate="yes" xml:space="preserve">
          <source>Whether the program stops on the first unit test failure, or continues running the unit tests.</source>
          <target state="translated">程序是在第一次单元测试失败时停止,还是继续运行单元测试。</target>
        </trans-unit>
        <trans-unit id="16d709e5514290422fe4701b1fcb581c1cf7c0ea" translate="yes" xml:space="preserve">
          <source>Whether the symbol represented by the string, member, exists and is a static member of T.</source>
          <target state="translated">字符串member所代表的符号是否存在,是否是T的静态成员。</target>
        </trans-unit>
        <trans-unit id="5440d07830fe58a338f1510d753f2b44ea0975da" translate="yes" xml:space="preserve">
          <source>Whether the type is modifiable</source>
          <target state="translated">该类型是否可以修改</target>
        </trans-unit>
        <trans-unit id="3f12e12092120abbb5facbde31d865f4ac9237a3" translate="yes" xml:space="preserve">
          <source>Whether there are more matches.</source>
          <target state="translated">是否有更多的匹配。</target>
        </trans-unit>
        <trans-unit id="79ba28ddb3b853b6d70a3013610438f23721a2fc" translate="yes" xml:space="preserve">
          <source>Whether this &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; is in a leap year.</source>
          <target state="translated">此&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;是否在a年。</target>
        </trans-unit>
        <trans-unit id="cfc2c65b73e5981574242c9ea69e9d9a4065c55b" translate="yes" xml:space="preserve">
          <source>Whether this &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; is in a leap year.</source>
          <target state="translated">此&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;是否在a年中。</target>
        </trans-unit>
        <trans-unit id="8a7bb8b28d4fed31e73e86d279c785680a5039aa" translate="yes" xml:space="preserve">
          <source>Whether this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; is in a leap year.</source>
          <target state="translated">此&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;是否处于a年。</target>
        </trans-unit>
        <trans-unit id="cbeb386e746809fa0b6115a9b6ed409316553ae9" translate="yes" xml:space="preserve">
          <source>Whether this &lt;code&gt;IntervalRange&lt;/code&gt; is empty.</source>
          <target state="translated">此 &lt;code&gt;IntervalRange&lt;/code&gt; 是否为空。</target>
        </trans-unit>
        <trans-unit id="b64edf6a2596a02728c1746b3074d42171989fdf" translate="yes" xml:space="preserve">
          <source>Whether this &lt;code&gt;alias this&lt;/code&gt; is deprecated or not</source>
          <target state="translated">此 &lt;code&gt;alias this&lt;/code&gt; 是否已弃用</target>
        </trans-unit>
        <trans-unit id="5f10f8b3bbf77628c34f12ea0b9275a2e7571d57" translate="yes" xml:space="preserve">
          <source>Whether this interval is after the given interval and does not intersect it.</source>
          <target state="translated">这个区间是否在给定区间之后,而不与之相交。</target>
        </trans-unit>
        <trans-unit id="3518cb2bbf874df4bb8421f23e69b77bffff6981" translate="yes" xml:space="preserve">
          <source>Whether this interval is after the given time point.</source>
          <target state="translated">这个区间是否在给定的时间点之后。</target>
        </trans-unit>
        <trans-unit id="e8beff07475e780f798cb6bfa07a9e4e3b7aa515" translate="yes" xml:space="preserve">
          <source>Whether this interval is before the given interval and does not intersect it.</source>
          <target state="translated">这个区间是否在给定区间之前,而不与之相交。</target>
        </trans-unit>
        <trans-unit id="5dcfd253111a81b33599a14f13a913487a6b41a0" translate="yes" xml:space="preserve">
          <source>Whether this interval is before the given interval and does not intersect with it.</source>
          <target state="translated">这个区间是否在给定的区间之前,与它不相交。</target>
        </trans-unit>
        <trans-unit id="e4e02f2380c2d7ee22f3e1d560e4a94074cf7d0b" translate="yes" xml:space="preserve">
          <source>Whether this interval is before the given time point.</source>
          <target state="translated">这个区间是否在给定的时间点之前。</target>
        </trans-unit>
        <trans-unit id="ff0d513f725657c9701839abfc98c3dd010c6909" translate="yes" xml:space="preserve">
          <source>Whether this time zone has Daylight Savings Time at any point in time. Note that for some time zone types it may not have DST for current dates but will still return true for &lt;code&gt;hasDST&lt;/code&gt; because the time zone did at some point have DST.</source>
          <target state="translated">此时区在任何时间点是否具有夏令时。请注意，对于某些时区类型，它可能没有当前日期的DST，但对于 &lt;code&gt;hasDST&lt;/code&gt; 仍将返回true，因为该时区在某时确实具有DST。</target>
        </trans-unit>
        <trans-unit id="f678c2cc53224442a63d8eb28e8e0eb235c4cb30" translate="yes" xml:space="preserve">
          <source>Whether to sort the elements copied into &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">是否对复制到 &lt;code&gt;target&lt;/code&gt; 中的元素进行排序。</target>
        </trans-unit>
        <trans-unit id="11b3a2eb47ce7aed7eefa6b35dca0ba9b2577af6" translate="yes" xml:space="preserve">
          <source>Which vendor produced this compiler.</source>
          <target state="translated">哪个厂商生产的这个编译器。</target>
        </trans-unit>
        <trans-unit id="89d2da88935f744eb5dc43351e0a9f1635d4c8e4" translate="yes" xml:space="preserve">
          <source>While Statement</source>
          <target state="translated">而声明</target>
        </trans-unit>
        <trans-unit id="7659a44594ab81434d082561cb3451e34e95259a" translate="yes" xml:space="preserve">
          <source>While Windows environment variable names are case insensitive, D's built-in associative arrays are not. This function will store all variable names in uppercase (e.g. &lt;code&gt;PATH&lt;/code&gt;).</source>
          <target state="translated">Windows环境变量名称不区分大小写，而D的内置关联数组则不区分大小写。此函数将所有变量名以大写形式存储（例如 &lt;code&gt;PATH&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e24dc8d5e3b7b9e5ec92f45cfd6c7a044e34e2f8" translate="yes" xml:space="preserve">
          <source>While copy construction takes care of initializing an object from another object of the same type, assignment is defined as copying the contents of a source object over those of a destination object, calling the destination object's destructor if it has one in the process:</source>
          <target state="translated">复制构造负责从另一个相同类型的对象中初始化一个对象,而赋值则被定义为将源对象的内容复制到目的对象的内容上,在此过程中如果有目的对象的析构器,则调用它。</target>
        </trans-unit>
        <trans-unit id="6ff7a87cbdd305f6521232a6c7f965514f712bfe" translate="yes" xml:space="preserve">
          <source>While getting and setting &lt;code&gt;sharedLog&lt;/code&gt; is thread-safe, it has to be considered that the returned reference is only a current snapshot and in the following code, you must make sure no other thread reassigns to it between reading and writing &lt;code&gt;sharedLog&lt;/code&gt;.</source>
          <target state="translated">尽管获取和设置 &lt;code&gt;sharedLog&lt;/code&gt; 是线程安全的，但必须考虑到返回的引用只是当前快照，在以下代码中，必须确保在读写 &lt;code&gt;sharedLog&lt;/code&gt; 之间没有其他线程为其重新分配。</target>
        </trans-unit>
        <trans-unit id="f6e5bcb9190a1ada8fb4e6ac105cd38eb4513180" translate="yes" xml:space="preserve">
          <source>While it may seem that void arrays are just fancy syntax for &lt;code&gt;ubyte[]&lt;/code&gt;, there is a subtle distinction. The garbage collector generally will not scan &lt;code&gt;ubyte[]&lt;/code&gt; arrays for pointers, &lt;code&gt;ubyte[]&lt;/code&gt; being presumed to contain only pure byte data, not pointers. However, it</source>
          <target state="translated">似乎空数组只是 &lt;code&gt;ubyte[]&lt;/code&gt; 奇特语法，但有一个细微的区别。垃圾回收器通常不会在 &lt;code&gt;ubyte[]&lt;/code&gt; 数组中扫描指针，假定 &lt;code&gt;ubyte[]&lt;/code&gt; 仅包含纯字节数据，而不包含指针。但是，</target>
        </trans-unit>
        <trans-unit id="46639ab687f349e8b6021b4ed72b63fb5679e139" translate="yes" xml:space="preserve">
          <source>While some containers offer direct access to their elements e.g. via &lt;code&gt;opIndex&lt;/code&gt;, &lt;code&gt;c.front&lt;/code&gt; or &lt;code&gt;c.back&lt;/code&gt;, access and modification of a container's contents is generally done through its primary &lt;a href=&quot;std_range&quot;&gt;range&lt;/a&gt; type, which is aliased as &lt;code&gt;C.Range&lt;/code&gt;. For example, the primary range type of &lt;code&gt;Array!int&lt;/code&gt; is &lt;code&gt;Array!int.Range&lt;/code&gt;.</source>
          <target state="translated">虽然某些容器（例如，通过 &lt;code&gt;opIndex&lt;/code&gt; ， &lt;code&gt;c.front&lt;/code&gt; 或 &lt;code&gt;c.back&lt;/code&gt; )提供对元素的直接访问，但通常通过其主&lt;a href=&quot;std_range&quot;&gt;范围&lt;/a&gt;类型（别名为 &lt;code&gt;C.Range&lt;/code&gt; )完成对容器内容的访问和修改。例如， &lt;code&gt;Array!int&lt;/code&gt; 的主要范围类型是 &lt;code&gt;Array!int.Range&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4f4f0535fe84b7df413259e8e5f2078595bb140b" translate="yes" xml:space="preserve">
          <source>While the</source>
          <target state="translated">虽然</target>
        </trans-unit>
        <trans-unit id="f208f6b0e96c87c1b483e05c18f118d000b490de" translate="yes" xml:space="preserve">
          <source>While the debug and version conditions superficially behave the same, they are intended for very different purposes. Debug statements are for adding debug code that is removed for the release version. Version statements are to aid in portability and multiple release versions.</source>
          <target state="translated">虽然调试和版本条件表面上表现相同,但它们的目的却截然不同。调试语句是为了添加调试代码,为发布版本删除。版本声明是为了帮助实现可移植性和多个发布版本。</target>
        </trans-unit>
        <trans-unit id="4a2d2c6bac88a828336274aa6e63799cf47b9a2e" translate="yes" xml:space="preserve">
          <source>While the generic versions of these functions are computationally expensive relative to the cost of the operation itself, compiler implementations are free to recognize them and generate equivalent and faster code.</source>
          <target state="translated">虽然这些函数的通用版本相对于操作本身的成本来说计算成本很高,但编译器的实现可以自由地识别它们,并生成等价和更快的代码。</target>
        </trans-unit>
        <trans-unit id="4d2a7879cc14c93bf5b4fe24670e954f3f073eac" translate="yes" xml:space="preserve">
          <source>While the receive timeout setting is generally quite accurate on *nix systems even for smaller durations, there are two issues to be aware of on Windows: First, although undocumented, the effective timeout duration seems to be the one set on the socket plus half a second. &lt;code&gt;setOption()&lt;/code&gt; tries to compensate for that, but still, timeouts under 500ms are not possible on Windows. Second, be aware that the actual amount of time spent until a blocking call returns randomly varies on the order of 10ms.</source>
          <target state="translated">尽管即使在较小的持续时间内，* nix系统上的接收超时设置通常也相当准确，但在Windows上需要注意两个问题：首先，尽管未记录，但有效超时持续时间似乎是套接字上的有效超时时间加上一半。第二。 &lt;code&gt;setOption()&lt;/code&gt; 试图弥补这一点，但是在Windows上，500ms以下的超时仍然是不可能的。其次，请注意，直到阻塞调用随机返回的实际时间量大约为10ms。</target>
        </trans-unit>
        <trans-unit id="ea3902c92ee74dcdfd72c59af08de3db3511067c" translate="yes" xml:space="preserve">
          <source>While this function takes the address of variables that may be on the stack, some overloads are marked as @trusted. &lt;code&gt;Task&lt;/code&gt; includes a destructor that waits for the task to complete before destroying the stack frame it is allocated on. Therefore, it is impossible for the stack frame to be destroyed before the task is complete and no longer referenced by a &lt;code&gt;TaskPool&lt;/code&gt;.</source>
          <target state="translated">尽管此函数采用的可能是堆栈中变量的地址，但某些重载被标记为@trusted。 &lt;code&gt;Task&lt;/code&gt; 包含一个析构函数，该析构函数等待任务完成，然后销毁分配给它的堆栈帧。因此，不可能在任务完成之前销毁堆栈框架，并且不再由 &lt;code&gt;TaskPool&lt;/code&gt; 引用堆栈框架。</target>
        </trans-unit>
        <trans-unit id="f0b22e024cefbd662530ad4f62e3c1e20aab7ccd" translate="yes" xml:space="preserve">
          <source>While this might look unreasonable, in practice whenever this is done it either is a bug or at least looks like a bug.</source>
          <target state="translated">虽然这看起来不合理,但实际上只要这样做,要么是个bug,要么至少看起来像个bug。</target>
        </trans-unit>
        <trans-unit id="bac09e53981b38ee90df9f891d55bff60d1a7bab" translate="yes" xml:space="preserve">
          <source>While, testing can be done without the &lt;em&gt;-betterC&lt;/em&gt; flag, it is sometimes desirable to run the testsuite in &lt;code&gt;-betterC&lt;/code&gt; too. &lt;code&gt;unittest&lt;/code&gt; blocks can be listed with the &lt;a href=&quot;traits#getUnitTests&quot;&gt;&lt;code&gt;getUnitTests&lt;/code&gt;&lt;/a&gt; trait:</source>
          <target state="translated">虽然可以在不使用&lt;em&gt;-betterC&lt;/em&gt;标志的情况下进行&lt;em&gt;测试&lt;/em&gt;，但有时也希望在 &lt;code&gt;-betterC&lt;/code&gt; 中运行测试套件。可以使用&lt;a href=&quot;traits#getUnitTests&quot;&gt; &lt;code&gt;getUnitTests&lt;/code&gt; &lt;/a&gt;特性列出 &lt;code&gt;unittest&lt;/code&gt; 块：</target>
        </trans-unit>
        <trans-unit id="ff0f36602d56ff20e347eedfcee547e7074e86d6" translate="yes" xml:space="preserve">
          <source>White Space</source>
          <target state="translated">白色空间</target>
        </trans-unit>
        <trans-unit id="5da2d68669a03b947051233558b6ce56e6780f0a" translate="yes" xml:space="preserve">
          <source>White_Space</source>
          <target state="translated">White_Space</target>
        </trans-unit>
        <trans-unit id="04095795c4578ea2e54241cfccfa1659c3513815" translate="yes" xml:space="preserve">
          <source>Whitespace and newlines are ignored, so the hex data can be easily formatted. The number of hex characters must be a multiple of 2.</source>
          <target state="translated">忽略空白和换行,因此十六进制数据可以很容易地进行格式化。十六进制字符的数量必须是2的倍数。</target>
        </trans-unit>
        <trans-unit id="a58ddf50c5ea5c03802da919dd5953bbf82ebd74" translate="yes" xml:space="preserve">
          <source>Width</source>
          <target state="translated">Width</target>
        </trans-unit>
        <trans-unit id="5dcb127348f728b3146a3e531a4bd1ca9bab0b4d" translate="yes" xml:space="preserve">
          <source>Width of the field to center &lt;code&gt;s&lt;/code&gt; in</source>
          <target state="translated">场的宽度中心 &lt;code&gt;s&lt;/code&gt; 的</target>
        </trans-unit>
        <trans-unit id="664add438097fbd4307f814de8e62a10f8905588" translate="yes" xml:space="preserve">
          <source>Wikipedia</source>
          <target state="translated">Wikipedia</target>
        </trans-unit>
        <trans-unit id="d5387a54e32017aea8f8d0a5887c6a2e00c032bc" translate="yes" xml:space="preserve">
          <source>Wikipedia Comma-separated values</source>
          <target state="translated">维基百科 逗号分隔的数值</target>
        </trans-unit>
        <trans-unit id="337e9f5e1d26296ff63a3b47029ab44de601ac95" translate="yes" xml:space="preserve">
          <source>Wikipedia article about SHA</source>
          <target state="translated">维基百科关于SHA的文章</target>
        </trans-unit>
        <trans-unit id="f454523199747c7975fb27c2c145f3ddf6613344" translate="yes" xml:space="preserve">
          <source>Wikipedia entry on TZ Database</source>
          <target state="translated">维基百科上的TZ数据库条目</target>
        </trans-unit>
        <trans-unit id="7c37b2692cf2556bdd59cfe50d71e16e0d843e62" translate="yes" xml:space="preserve">
          <source>Wikipedia on CRC</source>
          <target state="translated">维基百科上的CRC</target>
        </trans-unit>
        <trans-unit id="96ee6f82283ef66c8e354e4839873eaa37b3674a" translate="yes" xml:space="preserve">
          <source>Wikipedia on MD5</source>
          <target state="translated">维基百科上的MD5</target>
        </trans-unit>
        <trans-unit id="6edc90cc8ad6e1864bac759b4c3827efbba013d6" translate="yes" xml:space="preserve">
          <source>Wikipedia on RIPEMD-160</source>
          <target state="translated">维基百科上的RIPEMD-160</target>
        </trans-unit>
        <trans-unit id="9c668ea4b7293340a845504eaceece6a5a68b03a" translate="yes" xml:space="preserve">
          <source>Wikipedia: glob (programming)</source>
          <target state="translated">维基百科:glob</target>
        </trans-unit>
        <trans-unit id="20090ab63c8caad94d271d9d33cb7ecd2c964a55" translate="yes" xml:space="preserve">
          <source>Will take ownership of the buffer located inside &lt;code&gt;readResult&lt;/code&gt;.</source>
          <target state="translated">将获得 &lt;code&gt;readResult&lt;/code&gt; 内缓冲区的所有权。</target>
        </trans-unit>
        <trans-unit id="0463d1ccc9613d5098c42774fc7e43131ce95d1e" translate="yes" xml:space="preserve">
          <source>Win32 Specific Interface</source>
          <target state="translated">Win32特定接口</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="1795e7900ce9ccc312122f0f53ad0579cfef9d87" translate="yes" xml:space="preserve">
          <source>Windows API conventions are:</source>
          <target state="translated">Windows API的惯例是:</target>
        </trans-unit>
        <trans-unit id="7d109a43d386f5d7e791378257372b485d57017e" translate="yes" xml:space="preserve">
          <source>Windows only: if running in a dynamically loaded DLL, this delegate will be called if the DLL is supposed to be unloaded, but the thread is still running. The thread must be terminated via &lt;code&gt;joinLowLevelThread&lt;/code&gt; by the callback.</source>
          <target state="translated">仅限Windows：如果在动态加载的DLL中运行，则在假定DLL被卸载但线程仍在运行的情况下，将调用此委托。该线程必须通过 &lt;code&gt;joinLowLevelThread&lt;/code&gt; 由回调终止。</target>
        </trans-unit>
        <trans-unit id="34796431c4136a13fc1a272537e43a27d56433b1" translate="yes" xml:space="preserve">
          <source>Windows specific</source>
          <target state="translated">窗口专用</target>
        </trans-unit>
        <trans-unit id="d6cb85155bdca89444f87ede6d91a77dd2285d9d" translate="yes" xml:space="preserve">
          <source>Windows specific character set support.</source>
          <target state="translated">支持Windows特定字符集。</target>
        </trans-unit>
        <trans-unit id="a2a0337ee498510df7507386009893267714bb73" translate="yes" xml:space="preserve">
          <source>Windows uses a different set of time zone names than the IANA time zone database does, and how they correspond to one another changes over time (particularly when Microsoft updates Windows). &lt;a href=&quot;http://unicode.org/cldr/data/common/supplemental/windowsZones.xml&quot;&gt;windowsZones.xml&lt;/a&gt; provides the current conversions (which may or may not match up with what's on a particular Windows box depending on how up-to-date it is), and parseTZConversions reads in those conversions from windowsZones.xml so that a D program can use those conversions.</source>
          <target state="translated">Windows使用的时区名称集与IANA时区数据库使用的名称集不同，并且它们彼此之间的对应关系随时间而变化（尤其是在Microsoft更新Windows时）。&lt;a href=&quot;http://unicode.org/cldr/data/common/supplemental/windowsZones.xml&quot;&gt;windowsZones.xml&lt;/a&gt;提供当前的转换（取决于特定的Windows盒的最新程度，它们是否匹配），并且parseTZConversions从windowsZones.xml读取这些转换，以便D程序可以使用这些转换。</target>
        </trans-unit>
        <trans-unit id="9e74330d0719e2c837cc7724c4fda4e7807db3d1" translate="yes" xml:space="preserve">
          <source>Windows uses a different set of time zone names than the IANA time zone database does, and how they correspond to one another changes over time (particularly when Microsoft updates Windows). &lt;a href=&quot;https://unicode.org/cldr/data/common/supplemental/windowsZones.xml&quot;&gt;windowsZones.xml&lt;/a&gt; provides the current conversions (which may or may not match up with what's on a particular Windows box depending on how up-to-date it is), and parseTZConversions reads in those conversions from windowsZones.xml so that a D program can use those conversions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e945f65f1cc64663b7c91a745aabfe9ddd6074" translate="yes" xml:space="preserve">
          <source>Windows x86 note: A DMD compatible libcurl static library can be downloaded from the dlang.org &lt;a href=&quot;http://dlang.org/download.html&quot;&gt;download page&lt;/a&gt;.</source>
          <target state="translated">Windows x86注意：可以从dlang.org &lt;a href=&quot;http://dlang.org/download.html&quot;&gt;下载页面&lt;/a&gt;下载DDM兼容的libcurl静态库。</target>
        </trans-unit>
        <trans-unit id="f4db909be5b20ef140227bb8c3e3b7e15ef517df" translate="yes" xml:space="preserve">
          <source>Windows x86 note: A DMD compatible libcurl static library can be downloaded from the dlang.org &lt;a href=&quot;http://downloads.dlang.org/other/index.html&quot;&gt;download archive page&lt;/a&gt;.  Compared to using libcurl directly this module allows simpler client code for common uses, requires no unsafe operations, and integrates better with the rest of the language. Futhermore it provides &lt;a href=&quot;std_range&quot;&gt;range&lt;/a&gt; access to protocols supported by libcurl both synchronously and asynchronously.  A high level and a low level API are available. The high level API is built entirely on top of the low level one.  The high level API is for commonly used functionality such as HTTP/FTP get. The &lt;a href=&quot;#byLineAsync&quot;&gt;&lt;code&gt;byLineAsync&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#byChunkAsync&quot;&gt;&lt;code&gt;byChunkAsync&lt;/code&gt;&lt;/a&gt; provides asynchronous &lt;a href=&quot;std_range&quot;&gt;range&lt;/a&gt; that performs the request in another thread while handling a line/chunk in the current thread.  The low level API allows for streaming and other advanced features.</source>
          <target state="translated">Windows x86注意：DMD兼容的libcurl静态库可以从dlang.org &lt;a href=&quot;http://downloads.dlang.org/other/index.html&quot;&gt;下载档案页面下载&lt;/a&gt;。与直接使用libcurl相比，此模块可以简化通用的客户端代码，不需要不安全的操作，并且可以与其他语言更好地集成。此外，它提供对libcurl支持的协议的同步和异步&lt;a href=&quot;std_range&quot;&gt;范围&lt;/a&gt;访问。可以使用高级和低级API。高级API完全建立在低级API之上。高级API用于常用功能，例如HTTP / FTP get。的&lt;a href=&quot;#byLineAsync&quot;&gt; &lt;code&gt;byLineAsync&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#byChunkAsync&quot;&gt; &lt;code&gt;byChunkAsync&lt;/code&gt; &lt;/a&gt;提供异步&lt;a href=&quot;std_range&quot;&gt;范围&lt;/a&gt;它在处理当前线程中的行/块时在另一个线程中执行请求。低级API允许流式传输和其他高级功能。</target>
        </trans-unit>
        <trans-unit id="bec2db5e60635c89ee2429b529d4047d4fa2e62c" translate="yes" xml:space="preserve">
          <source>Windows x86 note: A DMD compatible libcurl static library can be downloaded from the dlang.org &lt;a href=&quot;http://downloads.dlang.org/other/index.html&quot;&gt;download archive page&lt;/a&gt;.  This module is not available for iOS, tvOS or watchOS.  Compared to using libcurl directly this module allows simpler client code for common uses, requires no unsafe operations, and integrates better with the rest of the language. Futhermore it provides &lt;a href=&quot;std_range&quot;&gt;range&lt;/a&gt; access to protocols supported by libcurl both synchronously and asynchronously.  A high level and a low level API are available. The high level API is built entirely on top of the low level one.  The high level API is for commonly used functionality such as HTTP/FTP get. The &lt;a href=&quot;#byLineAsync&quot;&gt;&lt;code&gt;byLineAsync&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#byChunkAsync&quot;&gt;&lt;code&gt;byChunkAsync&lt;/code&gt;&lt;/a&gt; provides asynchronous &lt;a href=&quot;std_range&quot;&gt;range&lt;/a&gt; that performs the request in another thread while handling a line/chunk in the current thread.  The low level API allows for streaming and other advanced features.</source>
          <target state="translated">Windows x86注意：DMD兼容的libcurl静态库可以从dlang.org&lt;a href=&quot;http://downloads.dlang.org/other/index.html&quot;&gt;下载档案页面下载&lt;/a&gt;。此模块不适用于iOS，tvOS或watchOS。与直接使用libcurl相比，此模块可以简化通用的客户端代码，不需要不安全的操作，并且可以与其他语言更好地集成。此外，它还提供对libcurl支持的协议的同步和异步&lt;a href=&quot;std_range&quot;&gt;范围&lt;/a&gt;访问。可以使用高级和低级API。高级API完全建立在低级API的基础上。高级API用于常用功能，例如HTTP / FTP get。的&lt;a href=&quot;#byLineAsync&quot;&gt; &lt;code&gt;byLineAsync&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#byChunkAsync&quot;&gt; &lt;code&gt;byChunkAsync&lt;/code&gt; &lt;/a&gt;提供异步&lt;a href=&quot;std_range&quot;&gt;范围&lt;/a&gt;它在处理当前线程中的行/块时在另一个线程中执行请求。低级API允许流式传输和其他高级功能。</target>
        </trans-unit>
        <trans-unit id="3f51991495e3278d2789cd751ed228258f7120a6" translate="yes" xml:space="preserve">
          <source>Windows x86 note: A DMD compatible libcurl static library can be downloaded from the dlang.org &lt;a href=&quot;https://dlang.org/download.html&quot;&gt;download page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60be3f1caf4fea17050a14a88440a0b64f55ed06" translate="yes" xml:space="preserve">
          <source>With Statement</source>
          <target state="translated">有声明</target>
        </trans-unit>
        <trans-unit id="4e955385152531f3736a983c851768114e7023a5" translate="yes" xml:space="preserve">
          <source>With a binary predicate, a range of ranges is returned in which all elements in a given subrange are equivalent under the given predicate. With a unary predicate, a range of tuples is returned, with the tuple consisting of the result of the unary predicate for each subrange, and the subrange itself.</source>
          <target state="translated">对于二元谓词,返回的是一个范围,在这个范围内,给定子范围内的所有元素在给定的谓词下都是等价的。对于单项谓词,返回的是一个元组范围,元组由每个子范围的单项谓词的结果和子范围本身组成。</target>
        </trans-unit>
        <trans-unit id="b2936eb0281259dec571bd7da523aa2c0285dc45" translate="yes" xml:space="preserve">
          <source>With arguments of mixed signedness, the return type is the one that can store the lowest values.</source>
          <target state="translated">对于混合签名性的参数,返回类型是能够存储最低值的参数。</target>
        </trans-unit>
        <trans-unit id="3176d986db58f62d282b850e7d10ffe59cbb8f5f" translate="yes" xml:space="preserve">
          <source>With either function, the predicate must be a strict ordering just like with &lt;code&gt;isSorted&lt;/code&gt;. For example, using &lt;code&gt;&quot;a &amp;lt;= b&quot;&lt;/code&gt; instead of &lt;code&gt;&quot;a &amp;lt; b&quot;&lt;/code&gt; is incorrect and will cause failed assertions.</source>
          <target state="translated">无论使用哪个函数，谓词都必须像 &lt;code&gt;isSorted&lt;/code&gt; 一样严格排序。例如，使用 &lt;code&gt;&quot;a &amp;lt;= b&quot;&lt;/code&gt; 而不是 &lt;code&gt;&quot;a &amp;lt; b&quot;&lt;/code&gt; 是不正确的，并且将导致断言失败。</target>
        </trans-unit>
        <trans-unit id="6ac97370c950e205f86272b5e6a043cdb9f5012f" translate="yes" xml:space="preserve">
          <source>With either function, the predicate must be a strict ordering. For example, using &lt;code&gt;&quot;a &amp;lt;= b&quot;&lt;/code&gt; instead of &lt;code&gt;&quot;a &amp;lt; b&quot;&lt;/code&gt; is incorrect and will cause failed assertions.</source>
          <target state="translated">无论使用哪种功能，谓词都必须严格排序。例如，使用 &lt;code&gt;&quot;a &amp;lt;= b&quot;&lt;/code&gt; 而不是 &lt;code&gt;&quot;a &amp;lt; b&quot;&lt;/code&gt; 是不正确的，并且将导致断言失败。</target>
        </trans-unit>
        <trans-unit id="5f404fdd2edadc615c0355a47cce8ef6af402ed0" translate="yes" xml:space="preserve">
          <source>With statement scope</source>
          <target state="translated">有报表范围</target>
        </trans-unit>
        <trans-unit id="379b8bea62c49b3ba24f35087b121928859e87af" translate="yes" xml:space="preserve">
          <source>With the above code you can invoke the program with &quot;--output=myfile.txt,yourfile.txt&quot;, or &quot;--output myfile.txt,yourfile.txt&quot;.</source>
          <target state="translated">通过上面的代码,你可以用&quot;--output=myfile.txt,yourfile.txt&quot;,或者&quot;--output myfile.txt,yourfile.txt &quot;来调用程序。</target>
        </trans-unit>
        <trans-unit id="54a01cc42bda8e929cf9280559ef4a1e7d2d6d0d" translate="yes" xml:space="preserve">
          <source>With the above code you can invoke the program with &quot;--tune=alpha=0.5,beta=0.6&quot;, or &quot;--tune alpha=0.5,beta=0.6&quot;.  In general, the keys and values can be of any parsable types.</source>
          <target state="translated">通过上面的代码,你可以用&quot;-tune=alpha=0.5,beta=0.6&quot;,或者&quot;-tune alpha=0.5,beta=0.6 &quot;来调用程序。一般来说,键和值可以是任何可解析的类型。</target>
        </trans-unit>
        <trans-unit id="4e7ea4808c516dd2621097198b60332075e1b32a" translate="yes" xml:space="preserve">
          <source>With this definition, allocation requests for &lt;code&gt;n1&lt;/code&gt; bytes or less are directed to &lt;code&gt;A1&lt;/code&gt;; requests between &lt;code&gt;n1 + 1&lt;/code&gt; and &lt;code&gt;n2&lt;/code&gt; bytes (inclusive) are directed to &lt;code&gt;A2&lt;/code&gt;; requests between &lt;code&gt;n2 + 1&lt;/code&gt; and &lt;code&gt;n3&lt;/code&gt; bytes (inclusive) are directed to &lt;code&gt;A3&lt;/code&gt;; and requests for more than &lt;code&gt;n3&lt;/code&gt; bytes are directed to &lt;code&gt;A4&lt;/code&gt;. If some particular range should not be handled, &lt;code&gt;NullAllocator&lt;/code&gt; may be used appropriately.</source>
          <target state="translated">按照此定义，将 &lt;code&gt;n1&lt;/code&gt; 字节或更少字节的分配请求定向到 &lt;code&gt;A1&lt;/code&gt; ； &lt;code&gt;n1 + 1&lt;/code&gt; 和 &lt;code&gt;n2&lt;/code&gt; 字节（含）之间的请求被定向到 &lt;code&gt;A2&lt;/code&gt; ； &lt;code&gt;n2 + 1&lt;/code&gt; 和 &lt;code&gt;n3&lt;/code&gt; 字节（含）之间的请求被定向到 &lt;code&gt;A3&lt;/code&gt; ；超过 &lt;code&gt;n3&lt;/code&gt; 个字节的请求将定向到 &lt;code&gt;A4&lt;/code&gt; 。如果不应处理某些特定范围， &lt;code&gt;NullAllocator&lt;/code&gt; 可以适当地使用NullAllocator。</target>
        </trans-unit>
        <trans-unit id="eabd87c7367119a510e10aa1fc357af4be84da36" translate="yes" xml:space="preserve">
          <source>With this template any single entity can be aliased:</source>
          <target state="translated">有了这个模板,任何单个实体都可以被别名。</target>
        </trans-unit>
        <trans-unit id="c9eeb0586b522665291cf81e818a29ca7386a2eb" translate="yes" xml:space="preserve">
          <source>WithStatement</source>
          <target state="translated">WithStatement</target>
        </trans-unit>
        <trans-unit id="81a1a1e16f9313636de11bd71de525c3a2fd9896" translate="yes" xml:space="preserve">
          <source>Within a module, static construction occurs in the lexical order in which they appear.</source>
          <target state="translated">在一个模块内,静态构造是按照它们出现的词汇顺序进行的。</target>
        </trans-unit>
        <trans-unit id="23f06a3534e9c200e5a28318b23f4aa9ddf98991" translate="yes" xml:space="preserve">
          <source>Within a module, the static construction occurs in the lexical order in which they appear.</source>
          <target state="translated">在一个模块中,静态构造按照它们出现的词法顺序出现。</target>
        </trans-unit>
        <trans-unit id="1e17b4775e323753ed2cd29d65d6c43cb910dd8f" translate="yes" xml:space="preserve">
          <source>Within a non-static member function, &lt;code&gt;this&lt;/code&gt; resolves to a reference to the object for which the function was called. If the object is an instance of a struct, &lt;code&gt;this&lt;/code&gt; will be a pointer to that instance. If a member function is called with an explicit reference to &lt;code&gt;typeof(this)&lt;/code&gt;, a non-virtual call is made:</source>
          <target state="translated">在非静态成员函数中， &lt;code&gt;this&lt;/code&gt; 解析为对该函数被调用的对象的引用。如果对象是结构的实例， &lt;code&gt;this&lt;/code&gt; 它将是指向该实例的指针。如果使用显式引用 &lt;code&gt;typeof(this)&lt;/code&gt; 调用成员函数，则会进行非虚拟调用：</target>
        </trans-unit>
        <trans-unit id="3df71e1c8566f2156343b539c269380e5ded71d7" translate="yes" xml:space="preserve">
          <source>Within each dynasty, the optimisation techniques are largely identical (eg, use instruction pairing for group 4). Major instruction set improvements occur within each dynasty.</source>
          <target state="translated">在每个朝代内,优化技术基本相同(例如,对第4组使用指令对)。每个朝代内都有重大的指令集改进。</target>
        </trans-unit>
        <trans-unit id="c5a725a9aa204ef26605cfb88e094f3761a32a02" translate="yes" xml:space="preserve">
          <source>Within the [ ] of a static or a dynamic array, the symbol &lt;code&gt;$&lt;/code&gt; represents the length of the array.</source>
          <target state="translated">在静态或动态数组的[]中，符号 &lt;code&gt;$&lt;/code&gt; 表示数组的长度。</target>
        </trans-unit>
        <trans-unit id="b865d9b6a0282f9882fe6fded1959a061a026851" translate="yes" xml:space="preserve">
          <source>Within the arguments to array index and slicing operators, &lt;code&gt;$&lt;/code&gt; gets translated to &lt;code&gt;opDollar!i&lt;/code&gt;, where &lt;code&gt;i&lt;/code&gt; is the position of the expression &lt;code&gt;$&lt;/code&gt; appears in. For example:</source>
          <target state="translated">在数组索引和切片运算符的参数中，将 &lt;code&gt;$&lt;/code&gt; 转换为 &lt;code&gt;opDollar!i&lt;/code&gt; ，其中 &lt;code&gt;i&lt;/code&gt; 是表达式 &lt;code&gt;$&lt;/code&gt; 出现的位置。例如：</target>
        </trans-unit>
        <trans-unit id="39569217a70cf6ca9c936b2a9a45c6702055afc8" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;-lowmem&lt;/code&gt;, we need to switch to the bump-pointer allocation scheme right from the start, before any module ctors are run, so we need this hook before druntime is initialized and &lt;code&gt;_Dmain&lt;/code&gt; is called.</source>
          <target state="translated">如果没有 &lt;code&gt;-lowmem&lt;/code&gt; ，则需要在运行任何模块ctor之前从一开始就切换到凹凸指针分配方案，因此我们需要在初始化 &lt;code&gt;_Dmain&lt;/code&gt; 和调用_Dmain之前使用此钩子。</target>
        </trans-unit>
        <trans-unit id="34f7315fd1aaacb94332f891276d7a1cb6067a26" translate="yes" xml:space="preserve">
          <source>Won't be generated by parser.</source>
          <target state="translated">不会被解析器生成。</target>
        </trans-unit>
        <trans-unit id="31f52cd8749a7a903b8481046b2787c755e758da" translate="yes" xml:space="preserve">
          <source>Word size of this xorshift generator and the return type of &lt;code&gt;opCall&lt;/code&gt;.</source>
          <target state="translated">此xorshift生成器的字长以及 &lt;code&gt;opCall&lt;/code&gt; 的返回类型。</target>
        </trans-unit>
        <trans-unit id="84b30f1d163f6819d59e7e7466b961744996f249" translate="yes" xml:space="preserve">
          <source>Word-level alignment.</source>
          <target state="translated">字级排列。</target>
        </trans-unit>
        <trans-unit id="992d31e258a782f6e52ea07fcd0ee0997b7da140" translate="yes" xml:space="preserve">
          <source>WorkerLocalStorage!T &lt;strong id=&quot;workerLocalStorage&quot;&gt;workerLocalStorage&lt;/strong&gt;(T)(lazy T initialVal = T.init);</source>
          <target state="translated">WorkerLocalStorage！T &lt;strong id=&quot;workerLocalStorage&quot;&gt;workerLocalStorage&lt;/strong&gt;（T）（懒惰的T initialVal = T.init）;</target>
        </trans-unit>
        <trans-unit id="37d97ca17647a6bee8e65a6f35cad028b58d8d12" translate="yes" xml:space="preserve">
          <source>Working with the Garbage Collector</source>
          <target state="translated">与垃圾收集器合作</target>
        </trans-unit>
        <trans-unit id="38bb5af2736644721a17f24a5ee3d9864cb5ac14" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;finish&lt;/code&gt; but does not reset the internal state, so it's possible to continue putting data into this CRC after a call to peek.</source>
          <target state="translated">像 &lt;code&gt;finish&lt;/code&gt; 一样工作，但不重置内部状态，因此可以在调用窥视之后继续将数据放入此CRC中。</target>
        </trans-unit>
        <trans-unit id="557f00a1de11ff690b55d85810dfb12357791c73" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;finish&lt;/code&gt; but does not reset the internal state, so it's possible to continue putting data into this WrapperDigest after a call to peek.</source>
          <target state="translated">像 &lt;code&gt;finish&lt;/code&gt; 一样工作，但不重置内部状态，因此可以在调用窥视之后继续将数据放入此WrapperDigest中。</target>
        </trans-unit>
        <trans-unit id="f6c55023c3f48d83141afa6b39cf1a1f8e16bbec" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;isAbstractClass&lt;/code&gt;, except it's for final classes.</source>
          <target state="translated">类似于 &lt;code&gt;isAbstractClass&lt;/code&gt; ，除了用于最终课程。</target>
        </trans-unit>
        <trans-unit id="257073bf2bff55c2797a68b782e9c7e37b49fb19" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;isArithmetic&lt;/code&gt;, except it's for associative array types.</source>
          <target state="translated">像 &lt;code&gt;isArithmetic&lt;/code&gt; 一样工作，除了它用于关联数组类型。</target>
        </trans-unit>
        <trans-unit id="0a69285a27011260c5d6d719ae7fb72a26cffe4e" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;isArithmetic&lt;/code&gt;, except it's for floating point types (including imaginary and complex types).</source>
          <target state="translated">像 &lt;code&gt;isArithmetic&lt;/code&gt; 一样工作，除了它适用于浮点类型（包括虚数和复数类型）。</target>
        </trans-unit>
        <trans-unit id="8ceb0e8d704718d48d55c5c32b9522c9c499787c" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;isArithmetic&lt;/code&gt;, except it's for integral types (including character types).</source>
          <target state="translated">像 &lt;code&gt;isArithmetic&lt;/code&gt; 一样工作，除了它用于整数类型（包括字符类型）。</target>
        </trans-unit>
        <trans-unit id="7abff98f46b77eb7b6b94e5ca6e034a29deef048" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;isArithmetic&lt;/code&gt;, except it's for scalar types.</source>
          <target state="translated">像 &lt;code&gt;isArithmetic&lt;/code&gt; 一样工作，除了它用于标量类型。</target>
        </trans-unit>
        <trans-unit id="79230c494d3167bb14479d0f0902108a0ad374d5" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;isArithmetic&lt;/code&gt;, except it's for static array types.</source>
          <target state="translated">类似于 &lt;code&gt;isArithmetic&lt;/code&gt; 一样工作，除了它适用于静态数组类型。</target>
        </trans-unit>
        <trans-unit id="a3a07b9159dee88ca3840794772f640bc3115b39" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;isArithmetic&lt;/code&gt;, except it's for unsigned types.</source>
          <target state="translated">像 &lt;code&gt;isArithmetic&lt;/code&gt; 一样工作，除了它用于无符号类型。</target>
        </trans-unit>
        <trans-unit id="f0a70fd23c7692a856ee0237be75ede52b20afd7" translate="yes" xml:space="preserve">
          <source>Wrap src in an anonymous class implementing Targets.</source>
          <target state="translated">将 src 包裹在一个实现 Targets 的匿名类中。</target>
        </trans-unit>
        <trans-unit id="1464bb1e874127ba2c5db433daec7f3ace8b2f82" translate="yes" xml:space="preserve">
          <source>Wrap text into a paragraph.</source>
          <target state="translated">将文字绕成一段。</target>
        </trans-unit>
        <trans-unit id="3b0a975353fc715fec14e946a0c3766d6a6d51d7" translate="yes" xml:space="preserve">
          <source>Wrap the unwinder's data with our own compiler specific struct with our own data.</source>
          <target state="translated">用我们自己的编译器专用结构与我们自己的数据来包裹拆分器的数据。</target>
        </trans-unit>
        <trans-unit id="3cc5194239acc099229522f2326aca77f79a86d7" translate="yes" xml:space="preserve">
          <source>Wrapper for bidirectional ranges with assignable elements.</source>
          <target state="translated">具有可分配元素的双向范围的封装器。</target>
        </trans-unit>
        <trans-unit id="482dcac045bf310d55bbcc3f7aecdd043622aa3e" translate="yes" xml:space="preserve">
          <source>Wrapper for bidirectional ranges.</source>
          <target state="translated">双向范围的封装器。</target>
        </trans-unit>
        <trans-unit id="59326ac149de95b9deb08a0f11f430a8c14b72ce" translate="yes" xml:space="preserve">
          <source>Wrapper for deprecated declarations.</source>
          <target state="translated">废弃声明的封装器。</target>
        </trans-unit>
        <trans-unit id="a03c3fb2c3cfd6a3695e20acdf7774c905dd55f3" translate="yes" xml:space="preserve">
          <source>Wrapper for finite random-access ranges with assignable elements.</source>
          <target state="translated">具有可分配元素的有限随机存取范围的封装器。</target>
        </trans-unit>
        <trans-unit id="b56fb4e4af7b711682584f0bbf2e4cd660a098eb" translate="yes" xml:space="preserve">
          <source>Wrapper for finite random-access ranges.</source>
          <target state="translated">有限随机存取范围的封装器。</target>
        </trans-unit>
        <trans-unit id="211fed544be798538bc476360c3e2ec3fb89c8d4" translate="yes" xml:space="preserve">
          <source>Wrapper for forward ranges with assignable elements.</source>
          <target state="translated">具有可分配元素的前向范围的封装器。</target>
        </trans-unit>
        <trans-unit id="92850a0186cbcef479f7cc5539bf23d874562bfb" translate="yes" xml:space="preserve">
          <source>Wrapper for forward ranges.</source>
          <target state="translated">前进范围的包装物。</target>
        </trans-unit>
        <trans-unit id="1837fdc88befd95dea3165c6d54f1e3c41d0394f" translate="yes" xml:space="preserve">
          <source>Wrapper for infinite random-access ranges.</source>
          <target state="translated">无限随机访问范围的封装器。</target>
        </trans-unit>
        <trans-unit id="37bdb8f566f2d5a031530ff138898fa6ae23cdfd" translate="yes" xml:space="preserve">
          <source>Wrapper for input ranges with assignable elements.</source>
          <target state="translated">具有可分配元素的输入范围的封装器。</target>
        </trans-unit>
        <trans-unit id="c3d9916a0371443b3a41375a3a1c28aa8e91a094" translate="yes" xml:space="preserve">
          <source>Wrapper for input ranges.</source>
          <target state="translated">输入范围的封装器。</target>
        </trans-unit>
        <trans-unit id="b0a95a21e1760a09fb4db567a6f4ee03a11a7d5a" translate="yes" xml:space="preserve">
          <source>Wrapper for output ranges.</source>
          <target state="translated">输出范围的封装器。</target>
        </trans-unit>
        <trans-unit id="de3d4101c4e21df3d5905171039aec77f7ed4860" translate="yes" xml:space="preserve">
          <source>Wrapper to provide a better interface to libcurl than using the plain C API. It is recommended to use the &lt;code&gt;HTTP&lt;/code&gt;/&lt;code&gt;FTP&lt;/code&gt; etc. structs instead unless raw access to libcurl is needed.</source>
          <target state="translated">与使用普通C API相比，包装器提供了更好的libcurl接口。除非需要对libcurl的原始访问，否则建议使用 &lt;code&gt;HTTP&lt;/code&gt; / &lt;code&gt;FTP&lt;/code&gt; 等结构。</target>
        </trans-unit>
        <trans-unit id="39537f1f2830ede14ee9fa6d2b62f5b64f801ca8" translate="yes" xml:space="preserve">
          <source>Wrapper which effectively makes it possible to pass a range by reference. Both the original range and the RefRange will always have the exact same elements. Any operation done on one will affect the other. So, for instance, if it's passed to a function which would implicitly copy the original range if it were passed to it, the original range is</source>
          <target state="translated">封装器,它可以有效地通过引用传递一个范围。原始范围和RefRange总是有完全相同的元素。对其中一个进行的任何操作都会影响另一个。所以,举例来说,如果它被传递给一个函数,而这个函数会隐式地复制原始范围,那么原始范围就是</target>
        </trans-unit>
        <trans-unit id="8618b840b60543d75b11e0d88e3bf56a352299c0" translate="yes" xml:space="preserve">
          <source>Wraps a possibly-throwing expression in a &lt;code&gt;nothrow&lt;/code&gt; wrapper so that it can be called by a &lt;code&gt;nothrow&lt;/code&gt; function.</source>
          <target state="translated">在 &lt;code&gt;nothrow&lt;/code&gt; 包装器中包装可能抛出的表达式，以便可以由 &lt;code&gt;nothrow&lt;/code&gt; 函数调用它。</target>
        </trans-unit>
        <trans-unit id="4d17b811fb36d5c934b00c26b8e8c9b92a1e888d" translate="yes" xml:space="preserve">
          <source>Wraps a template API hash struct into a Digest interface. Modules providing digest implementations will usually provide an alias for this template (e.g. MD5Digest, SHA1Digest, ...).</source>
          <target state="translated">将一个模板API哈希结构包装成一个Digest接口。提供Digest实现的模块通常会为这个模板提供一个别名(例如MD5Digest、SHA1Digest...)。</target>
        </trans-unit>
        <trans-unit id="1099c1f74d6812ece804b9cbf074c78e29c32ea4" translate="yes" xml:space="preserve">
          <source>Wraps remaining &lt;code&gt;Appender&lt;/code&gt; methods such as &lt;a href=&quot;#put&quot;&gt;&lt;code&gt;put&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">包装其余的 &lt;code&gt;Appender&lt;/code&gt; 方法，例如&lt;a href=&quot;#put&quot;&gt; &lt;code&gt;put&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7c7ac617339018f6920ef4c3f2015a628986c38e" translate="yes" xml:space="preserve">
          <source>Write 4 bytes of value.</source>
          <target state="translated">写4个字节的值。</target>
        </trans-unit>
        <trans-unit id="7b2d00fb0e7046aa336568ca894f9bb21983d223" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;buffer&lt;/code&gt; to file &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;buffer&lt;/code&gt; 写入文件 &lt;code&gt;name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a38083e109d2e7a4d69cbaa3489444f640acbb5f" translate="yes" xml:space="preserve">
          <source>Write Data Into A BLOB Incrementally</source>
          <target state="translated">以递增方式将数据写入BLOB中。</target>
        </trans-unit>
        <trans-unit id="d8676a24afa3e4fa26f8aa90b7515ad1db60e34d" translate="yes" xml:space="preserve">
          <source>Write a bunch of zeros</source>
          <target state="translated">写一堆零</target>
        </trans-unit>
        <trans-unit id="cd6ebd461d34874264399a83d24a2bda6b4f4798" translate="yes" xml:space="preserve">
          <source>Write a file, returning &lt;code&gt;true&lt;/code&gt; on success.</source>
          <target state="translated">写一个文件，成功返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c23284d2531bd9efe864545f4deedd492a816fa" translate="yes" xml:space="preserve">
          <source>Write a reference to s+offset</source>
          <target state="translated">写一个s+offset的引用</target>
        </trans-unit>
        <trans-unit id="c592a1af0fe821d27955299f19033c098bb4eae4" translate="yes" xml:space="preserve">
          <source>Write a reference to the data ptr[0..size+nzeros]</source>
          <target state="translated">向数据ptr[0...size+nzeros]写入一个引用。</target>
        </trans-unit>
        <trans-unit id="3882bd2c403298385dd12d1ae983b7517cc8ea11" translate="yes" xml:space="preserve">
          <source>Write a size_t value.</source>
          <target state="translated">写一个size_t值。</target>
        </trans-unit>
        <trans-unit id="7b48df38bf6bec7bc7495236d55a213c96208120" translate="yes" xml:space="preserve">
          <source>Write compression method used for this member</source>
          <target state="translated">写入该成员使用的压缩方法</target>
        </trans-unit>
        <trans-unit id="ad225ae5d885e53a7fe7e2b14f383df6da47f195" translate="yes" xml:space="preserve">
          <source>Write data of member in uncompressed form.</source>
          <target state="translated">以非压缩形式写入成员的数据。</target>
        </trans-unit>
        <trans-unit id="de773a94d6778baa590700460694a2cc5240feda" translate="yes" xml:space="preserve">
          <source>Write out argument types to buf.</source>
          <target state="translated">向buf写出参数类型。</target>
        </trans-unit>
        <trans-unit id="47b35050ddbd7849601928f12e067c9e7bf6f24c" translate="yes" xml:space="preserve">
          <source>Write read-only string to object file, create a local symbol for it. Makes a copy of str's contents, does not keep a reference to it.</source>
          <target state="translated">将只读字符串写入对象文件,为其创建一个本地符号。复制str的内容,不保留对它的引用。</target>
        </trans-unit>
        <trans-unit id="bfc6582499d380a7ad4bacacf8e5c59cd194bd21" translate="yes" xml:space="preserve">
          <source>Write reference to offset in code segment.</source>
          <target state="translated">在代码段中写入对偏移量的引用。</target>
        </trans-unit>
        <trans-unit id="52b53ecf38b837b581ff5600e009ee4494a94b7a" translate="yes" xml:space="preserve">
          <source>Write the UUID into &lt;code&gt;sink&lt;/code&gt; as an ASCII string in the canonical form, which is 36 characters in the form &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;</source>
          <target state="translated">将UUID 作为标准格式的ASCII字符串写入接收 &lt;code&gt;sink&lt;/code&gt; ，该字符串为36个字符，格式为&amp;ldquo; xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="1ef16b7a07c299f61bfb74b5ad3be81f23a593eb" translate="yes" xml:space="preserve">
          <source>Write the contents of the string to dest. Use numberOfCodeUnits() to determine size of result.</source>
          <target state="translated">将字符串的内容写入 dest。使用numberOfCodeUnits()来确定结果的大小。</target>
        </trans-unit>
        <trans-unit id="9a1c97eb157d22efcffe10a200a9901ebb080254" translate="yes" xml:space="preserve">
          <source>Write the format string to an output range until the next format specifier is found and parse that format specifier.</source>
          <target state="translated">将格式字符串写入输出范围,直到找到下一个格式指定符并解析该格式指定符。</target>
        </trans-unit>
        <trans-unit id="9df19c54f436b6a77ec7817a689a3cb7a8863393" translate="yes" xml:space="preserve">
          <source>Write-Ahead Log Commit Hook</source>
          <target state="translated">预写日志提交钩子</target>
        </trans-unit>
        <trans-unit id="dabbf81e18099cb6956d08106b3303fb985c826b" translate="yes" xml:space="preserve">
          <source>Writer &lt;code&gt;sink&lt;/code&gt;</source>
          <target state="translated">作家 &lt;code&gt;sink&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e30103d33af6a946f9ebe462448f1d80d87755a5" translate="yes" xml:space="preserve">
          <source>Writer &lt;code&gt;w&lt;/code&gt;</source>
          <target state="translated">作家 &lt;code&gt;w&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="261949f891c9b0b3af3322e9a82fd8c652e10037" translate="yes" xml:space="preserve">
          <source>Writers get preference. This may starve readers.</source>
          <target state="translated">作家们得到了优待。这可能会饿坏读者。</target>
        </trans-unit>
        <trans-unit id="c169d753208ebdefff0c5bc61bb4a72eb78601af" translate="yes" xml:space="preserve">
          <source>Writes 'newval' into 'val'. The memory barrier specified by 'ms' is applied to the operation, which is fully sequenced by default. Valid memory orders are MemoryOrder.raw, MemoryOrder.rel, and MemoryOrder.seq.</source>
          <target state="translated">将'newval'写入'val'中。由'ms'指定的内存屏障被应用到操作中,默认情况下是完全排序的。有效的内存顺序是MemoryOrder.raw、MemoryOrder.rel和MemoryOrder.seq。</target>
        </trans-unit>
        <trans-unit id="f545090236c52b4db845fdcaa9b14bff9fdd1e07" translate="yes" xml:space="preserve">
          <source>Writes a &lt;a href=&quot;#Code%20point&quot;&gt;code point&lt;/a&gt;&lt;code&gt;ch&lt;/code&gt; at given index in this cluster.</source>
          <target state="translated">将&lt;a href=&quot;#Code%20point&quot;&gt;代码点&lt;/a&gt; &lt;code&gt;ch&lt;/code&gt; 写入此集群中的给定索引。</target>
        </trans-unit>
        <trans-unit id="da65af1a504194bc282a562bcd49dbb2f1a648fd" translate="yes" xml:space="preserve">
          <source>Writes a file, terminate the program on error</source>
          <target state="translated">写文件,错误时终止程序。</target>
        </trans-unit>
        <trans-unit id="3ffb03394b34b5a784ef70061fb278a426c07e08" translate="yes" xml:space="preserve">
          <source>Writes an array or range to a file. Shorthand for &lt;code&gt;data.copy(File(fileName, &quot;wb&quot;).lockingBinaryWriter)&lt;/code&gt;. Similar to &lt;a href=&quot;std_file#write&quot;&gt;&lt;code&gt;std.file.write&lt;/code&gt;&lt;/a&gt;, strings are written as-is, rather than encoded according to the &lt;code&gt;File&lt;/code&gt;'s &lt;a href=&quot;http://en.cppreference.com/w/c/io#Narrow_and_wide_orientation&quot;&gt;orientation&lt;/a&gt;.</source>
          <target state="translated">将数组或范围写入文件。速记 &lt;code&gt;data.copy(File(fileName, &quot;wb&quot;).lockingBinaryWriter)&lt;/code&gt; 。与&lt;a href=&quot;std_file#write&quot;&gt; &lt;code&gt;std.file.write&lt;/code&gt; &lt;/a&gt;相似，字符串按原样写入，而不是根据 &lt;code&gt;File&lt;/code&gt; 的&lt;a href=&quot;http://en.cppreference.com/w/c/io#Narrow_and_wide_orientation&quot;&gt;方向进行&lt;/a&gt;编码。</target>
        </trans-unit>
        <trans-unit id="671cfcd86b743c33ffcbc7db930780c93330dcf9" translate="yes" xml:space="preserve">
          <source>Writes and returns value to I/O port at port_address.</source>
          <target state="translated">将值写入 port_address 的 I/O 端口并返回。</target>
        </trans-unit>
        <trans-unit id="c98d5d7059935e8dfc263a9b5d85176d88130c5a" translate="yes" xml:space="preserve">
          <source>Writes formatted data to standard output (without a trailing newline).</source>
          <target state="translated">将格式化的数据写入标准输出(无尾部换行)。</target>
        </trans-unit>
        <trans-unit id="7a22ff839b6664d67c85bd4ac1968cd869085e52" translate="yes" xml:space="preserve">
          <source>Writes its arguments in text format to standard output (without a trailing newline).</source>
          <target state="translated">将它的参数以文本格式写入标准输出(没有尾部的换行)。</target>
        </trans-unit>
        <trans-unit id="22ac1343524825034c576966a15ac34d09638673" translate="yes" xml:space="preserve">
          <source>Writes its arguments in text format to the file, according to the format string fmt.</source>
          <target state="translated">根据格式字符串fmt,将其参数以文本格式写入文件。</target>
        </trans-unit>
        <trans-unit id="e124919c1b78704f045218d126ac7290c975bdd3" translate="yes" xml:space="preserve">
          <source>Writes its arguments in text format to the file, followed by a newline.</source>
          <target state="translated">将其参数以文本格式写入文件,后面加一个换行。</target>
        </trans-unit>
        <trans-unit id="d3d461f396ab97110d36d894979f20e6ede9f849" translate="yes" xml:space="preserve">
          <source>Writes its arguments in text format to the file.</source>
          <target state="translated">将其参数以文本格式写入文件。</target>
        </trans-unit>
        <trans-unit id="62cb6d546280f4feea26cac5835bb92dc3d81ffa" translate="yes" xml:space="preserve">
          <source>Writes this module's fully-qualified name to buf</source>
          <target state="translated">将这个模块的全称写入buf中。</target>
        </trans-unit>
        <trans-unit id="2dabb8334b6cbbc19635a160f00032f11eeb9962" translate="yes" xml:space="preserve">
          <source>Writing</source>
          <target state="translated">Writing</target>
        </trans-unit>
        <trans-unit id="ad162d2c79c76f33c48d81a0634c1baa1d09990c" translate="yes" xml:space="preserve">
          <source>Writing either arrays of &lt;code&gt;char&lt;/code&gt;s or &lt;code&gt;ubyte&lt;/code&gt;s is faster than writing each character individually from a range. For large amounts of data, writing the contents in chunks using an intermediary array can result in a speed increase.</source>
          <target state="translated">写入 &lt;code&gt;char&lt;/code&gt; 或 &lt;code&gt;ubyte&lt;/code&gt; 数组要比分别写入一个范围中的每个字符要快。对于大量数据，使用中间数组将内容写入块中可以提高速度。</target>
        </trans-unit>
        <trans-unit id="dee8bd37d704973bd57f3004e2cb5ef11b63a6dc" translate="yes" xml:space="preserve">
          <source>Written in the D programming language. Equivalent to unwind.h</source>
          <target state="translated">用D编程语言编写。相当于unwind.h</target>
        </trans-unit>
        <trans-unit id="b109ed01b302839f4c77abd81c996851cc4aa9de" translate="yes" xml:space="preserve">
          <source>Written in the D programming language. Implementation of exception handling support routines for Posix and Win64.</source>
          <target state="translated">用D编程语言编写。实现Posix和Win64的异常处理支持例程。</target>
        </trans-unit>
        <trans-unit id="49db7f4304c68465326e6bfa4a2c75bc29acc1b8" translate="yes" xml:space="preserve">
          <source>Written in the D programming language. Module initialization routines.</source>
          <target state="translated">用D编程语言编写。模块初始化例程。</target>
        </trans-unit>
        <trans-unit id="bcc259680d6a3b51f61e191fd1e26662589cdb25" translate="yes" xml:space="preserve">
          <source>Written in the D programming language. This module provides Darwin 64 bit specific support for sections.</source>
          <target state="translated">用D编程语言编写。该模块提供了达尔文64位特定的章节支持。</target>
        </trans-unit>
        <trans-unit id="c866fcbf99d5602882352f6b26195cfcc8dd82c4" translate="yes" xml:space="preserve">
          <source>Written in the D programming language. This module provides ELF-specific support for sections with shared libraries.</source>
          <target state="translated">用D编程语言编写。该模块为具有共享库的部分提供ELF专用支持。</target>
        </trans-unit>
        <trans-unit id="17d6a2308d5068aa0b43c14f08e05e3755cbbcf1" translate="yes" xml:space="preserve">
          <source>Written in the D programming language. This module provides OS X x86 specific support for sections.</source>
          <target state="translated">用D编程语言编写。该模块提供OS X x86特有的部分支持。</target>
        </trans-unit>
        <trans-unit id="aefaa53ce78b985648513722359bd4425aa1cb2d" translate="yes" xml:space="preserve">
          <source>Written in the D programming language. This module provides OS X x86-64 specific support for sections.</source>
          <target state="translated">用D编程语言编写。该模块提供OS X x86-64特定的章节支持。</target>
        </trans-unit>
        <trans-unit id="ca0cae03a7a5c3acd5595105b8f3e0a0ae198ca1" translate="yes" xml:space="preserve">
          <source>Written in the D programming language. This module provides Solaris-specific support for sections.</source>
          <target state="translated">用D编程语言编写。该模块提供了Solaris特有的分段支持。</target>
        </trans-unit>
        <trans-unit id="2b4f7ed077ce71d4c32f279f6eae5e4c9e152169" translate="yes" xml:space="preserve">
          <source>Written in the D programming language. This module provides Win32-specific support for sections.</source>
          <target state="translated">用D编程语言编写。该模块提供了Win32特有的分段支持。</target>
        </trans-unit>
        <trans-unit id="1805d8b1070ddc09d2826c5527186a21ffa4052b" translate="yes" xml:space="preserve">
          <source>Written in the D programming language. This module provides bionic-specific support for sections.</source>
          <target state="translated">用D编程语言编写。该模块提供了仿生学特有的部分支持。</target>
        </trans-unit>
        <trans-unit id="09eb5bb61ba3b0aa4f6364dacd7049445e4dc50e" translate="yes" xml:space="preserve">
          <source>Wysiwyg (&quot;what you see is what you get&quot;) quoted strings are enclosed by &lt;code&gt;r&quot;&lt;/code&gt; and &lt;code&gt;&quot;&lt;/code&gt;. All characters between the &lt;code&gt;r&quot;&lt;/code&gt; and &lt;code&gt;&quot;&lt;/code&gt; are part of the string. There are no escape sequences inside wysiwyg strings.</source>
          <target state="translated">所见即所得（&amp;ldquo;所见即所得&amp;rdquo;）用 &lt;code&gt;r&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;&lt;/code&gt; 括起来。 &lt;code&gt;r&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;&lt;/code&gt; 之间的所有字符都是字符串的一部分。所见即所得字符串中没有转义序列。</target>
        </trans-unit>
        <trans-unit id="a6cb1ff0672a736cac188c10daba997612f2b5d7" translate="yes" xml:space="preserve">
          <source>Wysiwyg (&quot;what you see is what you get&quot;) quoted strings can be defined using either of two syntaxes.</source>
          <target state="translated">Wysiwyg(&quot;所见即所得&quot;)引用的字符串可以使用两种语法中的一种来定义。</target>
        </trans-unit>
        <trans-unit id="1f394fca831934fbcb7376bfab2879d2cf43ab77" translate="yes" xml:space="preserve">
          <source>Wysiwyg Strings</source>
          <target state="translated">弦乐</target>
        </trans-unit>
        <trans-unit id="c032adc1ff629c9b66f22749ad667e6beadf144b" translate="yes" xml:space="preserve">
          <source>X</source>
          <target state="translated">X</target>
        </trans-unit>
        <trans-unit id="9f0ffc25b2d7427efa79b34a28595c3421d94517" translate="yes" xml:space="preserve">
          <source>X &lt;code&gt;from&lt;/code&gt;</source>
          <target state="translated">X &lt;code&gt;from&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="838a45e19c4c329eb943a7e88927c9dbf2d8de29" translate="yes" xml:space="preserve">
          <source>X &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">X &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ce5d7ec39a23b922a17f0c3abf223f6f76a032f" translate="yes" xml:space="preserve">
          <source>X86 And X86_64 Vector Extension Implementation</source>
          <target state="translated">X86 和 X86_64 矢量扩展实施</target>
        </trans-unit>
        <trans-unit id="50efddb988b104babe6401aede32fd071cdc5984" translate="yes" xml:space="preserve">
          <source>XID_Continue</source>
          <target state="translated">XID_Continue</target>
        </trans-unit>
        <trans-unit id="2c844a38f208dd0b734ef526a343db1d60c00d66" translate="yes" xml:space="preserve">
          <source>XID_Start</source>
          <target state="translated">XID_Start</target>
        </trans-unit>
        <trans-unit id="5b72efcf7e8eabc51f5896751a16634ab4ef311c" translate="yes" xml:space="preserve">
          <source>XIException if the segment body is illegal (contains &quot;&amp;gt;&quot;)</source>
          <target state="translated">XIException如果段主体是非法的（包含&amp;ldquo;&amp;gt;&amp;rdquo;）</target>
        </trans-unit>
        <trans-unit id="b2d4816b0ff06e62a59ac8c5ce7de8752afdaa5d" translate="yes" xml:space="preserve">
          <source>XML 1.0</source>
          <target state="translated">XML 1.0</target>
        </trans-unit>
        <trans-unit id="cdf582a2f3fe605b845df26a838737ecff0c3fe3" translate="yes" xml:space="preserve">
          <source>XMM opcodes that conform to the following:</source>
          <target state="translated">符合下列条件的XMM操作码:</target>
        </trans-unit>
        <trans-unit id="2c7bb3312643d9ad59c52760eab81e963630bcd2" translate="yes" xml:space="preserve">
          <source>Xerox NS protocol</source>
          <target state="translated">Xerox NS协议</target>
        </trans-unit>
        <trans-unit id="4e530f8bf5eb82ad3ccf91c4c829121f9a54abad" translate="yes" xml:space="preserve">
          <source>Xerox NS protocol level</source>
          <target state="translated">施乐NS协议级别</target>
        </trans-unit>
        <trans-unit id="eb2d9c37422dc286e83db49708664a6da951c27c" translate="yes" xml:space="preserve">
          <source>Xor Expressions</source>
          <target state="translated">Xor表达式</target>
        </trans-unit>
        <trans-unit id="64735c56cdb98bf119d182f824db814b9e562062" translate="yes" xml:space="preserve">
          <source>Xorshift Engines</source>
          <target state="translated">Xorshift发动机</target>
        </trans-unit>
        <trans-unit id="85f1172c42fb72f91fb5f94b48cd45b847b16691" translate="yes" xml:space="preserve">
          <source>Xorshift generator. Implemented according to &lt;a href=&quot;http://www.jstatsoft.org/v08/i14/paper&quot;&gt;Xorshift RNGs&lt;/a&gt; (Marsaglia, 2003) when the size is small. For larger sizes the generator uses Sebastino Vigna's optimization of using an index to avoid needing to rotate the internal array.</source>
          <target state="translated">Xorshift生成器。当尺寸较小时，根据&lt;a href=&quot;http://www.jstatsoft.org/v08/i14/paper&quot;&gt;Xorshift RNG&lt;/a&gt;（Marsaglia，2003年）实现。对于较大的大小，生成器使用Sebastino Vigna的优化方法，即使用索引来避免旋转内部数组。</target>
        </trans-unit>
        <trans-unit id="c0f0cadca077341656948de09d8670971ee5641b" translate="yes" xml:space="preserve">
          <source>YEAR</source>
          <target state="translated">YEAR</target>
        </trans-unit>
        <trans-unit id="9f0b3ec328ac735aae6d043262de18d9d11f4eaa" translate="yes" xml:space="preserve">
          <source>Yazan Dabain</source>
          <target state="translated">Yazan Dabain</target>
        </trans-unit>
        <trans-unit id="7c887a64b178b27f92231366833c25de4d13a9ba" translate="yes" xml:space="preserve">
          <source>Yazan Dabain, Sean Kelly</source>
          <target state="translated">Yazan Dabain,Sean Kelly</target>
        </trans-unit>
        <trans-unit id="5f2748a461454cf10b2f902f6d541955314d51f4" translate="yes" xml:space="preserve">
          <source>Year 0 is a leap year.</source>
          <target state="translated">0年是一个闰年。</target>
        </trans-unit>
        <trans-unit id="985b2a4dc89c44de21746593a2cc7eb37a2b3bd4" translate="yes" xml:space="preserve">
          <source>Year B.C. of the Gregorian Calendar counting year 0 as 1 B.C.</source>
          <target state="translated">公元前一年</target>
        </trans-unit>
        <trans-unit id="b9c408c073ad8582d540590e32701ef21fc98b1b" translate="yes" xml:space="preserve">
          <source>Year of the Gregorian Calendar. Positive numbers are A.D. Non-positive are B.C.</source>
          <target state="translated">公历年。正数为公元,非正数为公元前。</target>
        </trans-unit>
        <trans-unit id="8f12c389ba31dc6166c8efdbd3320c92c713f633" translate="yes" xml:space="preserve">
          <source>Year of the Gregorian Calendar. Positive values are A.D. Non-positive values are B.C. with year 0 being the year prior to 1 A.D.</source>
          <target state="translated">公历年。正值为公元,非正值为公元前,0年为公元1年之前的年份。</target>
        </trans-unit>
        <trans-unit id="041fa90b252fda96d77375b360e6dda6c7588996" translate="yes" xml:space="preserve">
          <source>Year, month, and day are kept separately internally so that &lt;code&gt;Date&lt;/code&gt; is optimized for calendar-based operations.</source>
          <target state="translated">年，月和日在内部分别保存，以便针对基于日历的操作优化 &lt;code&gt;Date&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="8b3ea263ffe29592bef18c80ae24a5c69c012728" translate="yes" xml:space="preserve">
          <source>Yet another class of algorithms may choose an intermediate tradeoff by being stable only on a well-defined subrange of the range. There is no established terminology for such behavior; this library calls it &lt;b&gt;semistable&lt;/b&gt;.</source>
          <target state="translated">另一类算法可以通过仅在范围的明确定义的子范围上保持稳定来选择中间折衷。没有关于这种行为的既定术语；这个库称它为&lt;b&gt;准稳态&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="c2bf8cb1a13b6661ace7ce9f9719055b32f2e726" translate="yes" xml:space="preserve">
          <source>Yi</source>
          <target state="translated">Yi</target>
        </trans-unit>
        <trans-unit id="11b6edc31ec66de50fd5378989503aea27ad82d5" translate="yes" xml:space="preserve">
          <source>Yi Radicals</source>
          <target state="translated">彝族激进分子</target>
        </trans-unit>
        <trans-unit id="871743fa0c93bc0da9a20cdf8000104bbc1a35c0" translate="yes" xml:space="preserve">
          <source>Yi Syllables</source>
          <target state="translated">彝族音节</target>
        </trans-unit>
        <trans-unit id="4f2be812d0ba733c97bf4f338315cfec143db69a" translate="yes" xml:space="preserve">
          <source>Yields &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;R&lt;/code&gt; has a &lt;code&gt;length&lt;/code&gt; member that returns a value of &lt;code&gt;size_t&lt;/code&gt; type. &lt;code&gt;R&lt;/code&gt; does not have to be a range. If &lt;code&gt;R&lt;/code&gt; is a range, algorithms in the standard library are only guaranteed to support &lt;code&gt;length&lt;/code&gt; with type &lt;code&gt;size_t&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;R&lt;/code&gt; 的 &lt;code&gt;length&lt;/code&gt; 成员返回 &lt;code&gt;size_t&lt;/code&gt; 类型的值，则产生 &lt;code&gt;true&lt;/code&gt; 。 &lt;code&gt;R&lt;/code&gt; 不必是范围。如果 &lt;code&gt;R&lt;/code&gt; 是一个范围，则仅保证标准库中的算法支持 &lt;code&gt;size_t&lt;/code&gt; 类型的 &lt;code&gt;length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d63667905d7542aa573c76be73117be28084946c" translate="yes" xml:space="preserve">
          <source>Yields &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;T&lt;/code&gt; is an aggregate that defines a symbol called &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">产量 &lt;code&gt;true&lt;/code&gt; 当且仅当 &lt;code&gt;T&lt;/code&gt; 是定义一个名为符号的集合 &lt;code&gt;name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b78b1033eef6ebbec6c54884c6c74ed3e982e76c" translate="yes" xml:space="preserve">
          <source>Yields a value of type T to the caller of the currently executing generator.</source>
          <target state="translated">向当前执行的生成器的调用者产生一个T类型的值。</target>
        </trans-unit>
        <trans-unit id="b170ba66d44b075487377d036e56fe2e1236ecfd" translate="yes" xml:space="preserve">
          <source>Yields execution to another logical thread.</source>
          <target state="translated">将执行权交给另一个逻辑线程。</target>
        </trans-unit>
        <trans-unit id="c0fee1b841b1164e3c9df7152dc5dc76a150031e" translate="yes" xml:space="preserve">
          <source>Yijing Hexagram Symbols</source>
          <target state="translated">易经六合图库符号</target>
        </trans-unit>
        <trans-unit id="1ec730d733a5a23d15b5142c27fc22cbe77f9ce5" translate="yes" xml:space="preserve">
          <source>You can also remove the standard GC implementation from a statically linked binary by redefining the function &lt;code&gt;extern(C) void* register_default_gcs()&lt;/code&gt;. If no custom garbage collector has been registered all attempts to allocate GC managed memory will terminate the application with an appropriate message.</source>
          <target state="translated">您还可以通过重新定义函数 &lt;code&gt;extern(C) void* register_default_gcs()&lt;/code&gt; 从静态链接的二进制文件中删除标准GC的实现。如果尚未注册任何自定义垃圾收集器，则所有尝试分配GC管理的内存的尝试都会以适当的消息终止应用程序。</target>
        </trans-unit>
        <trans-unit id="cb9ce54c7e063a5f63459b64e87e580212a04c11" translate="yes" xml:space="preserve">
          <source>You can convert this &lt;code&gt;length&lt;/code&gt; into the number of seconds by dividing it by &lt;code&gt;ticksPerSec&lt;/code&gt; (or using one the appropriate property function to do it).</source>
          <target state="translated">您可以将此转换 &lt;code&gt;length&lt;/code&gt; 通过将其除以成秒数 &lt;code&gt;ticksPerSec&lt;/code&gt; （或使用一个合适的属性功能做到这一点）。</target>
        </trans-unit>
        <trans-unit id="6a280f20fa2a0436981b678de2506b6fda834ebf" translate="yes" xml:space="preserve">
          <source>You can either use the generic function &lt;code&gt;dur&lt;/code&gt; and give it the units as a &lt;code&gt;string&lt;/code&gt; or use the named aliases.</source>
          <target state="translated">您可以使用通用函数 &lt;code&gt;dur&lt;/code&gt; 并将其单位指定为 &lt;code&gt;string&lt;/code&gt; 也可以使用命名别名。</target>
        </trans-unit>
        <trans-unit id="155cb1da1f9e22e9d6f167f108238008a26d3e23" translate="yes" xml:space="preserve">
          <source>You can escape any ASCII punctuation symbol with a backslash &lt;code&gt;\&lt;/code&gt;. Doing so outputs the original character without the backslash, except for the following characters which output predefined macros instead:</source>
          <target state="translated">您可以使用反斜杠 &lt;code&gt;\&lt;/code&gt; 来转义任何ASCII标点符号。这样做会输出不带反斜杠的原始字符，但以下字符会输出预定义的宏：</target>
        </trans-unit>
        <trans-unit id="e3235c6feadfb13ad2c1d369dc6696e0b1bd716f" translate="yes" xml:space="preserve">
          <source>You can foreach either with or without an index. If an index is specified, it will be initialized at each iteration with the offset into the string at which the code point begins.</source>
          <target state="translated">你可以使用或不使用索引来执行foreach。如果指定了索引,它将在每次迭代时以代码点开始的偏移量初始化。</target>
        </trans-unit>
        <trans-unit id="268f4f2a943986f919b73829b619ff1ea95be319" translate="yes" xml:space="preserve">
          <source>You can insert a literal asterisk by &lt;a href=&quot;#punctuation_escapes&quot;&gt;backslash-escaping&lt;/a&gt; it: &lt;code&gt;\*&lt;/code&gt; is rendered as *.</source>
          <target state="translated">您可以通过&lt;a href=&quot;#punctuation_escapes&quot;&gt;反斜杠转义&lt;/a&gt;插入星号： &lt;code&gt;\*&lt;/code&gt; 表示为*。</target>
        </trans-unit>
        <trans-unit id="281c7bf193a2238d33c24d116bbd109a49197245" translate="yes" xml:space="preserve">
          <source>You can pass them to &lt;code&gt;getopt&lt;/code&gt; in any position, except in between an option string and its bound pointer.</source>
          <target state="translated">您可以将它们传递到 &lt;code&gt;getopt&lt;/code&gt; 的任何位置，除非在选项字符串与其绑定指针之间。</target>
        </trans-unit>
        <trans-unit id="9fee02d71c7ece7369ab291103ad7a7fb75ebd8e" translate="yes" xml:space="preserve">
          <source>You can use bitwise to implement an uniform bool generator</source>
          <target state="translated">你可以使用bitwise来实现统一的bool生成器。</target>
        </trans-unit>
        <trans-unit id="665a916dcc61b11eaca958b8fb02768f4747231d" translate="yes" xml:space="preserve">
          <source>You may alias &lt;code&gt;map&lt;/code&gt; with some function(s) to a symbol and use it separately:</source>
          <target state="translated">您可以 &lt;code&gt;map&lt;/code&gt; 某些功能的别名映射到符号并单独使用它：</target>
        </trans-unit>
        <trans-unit id="b206026afc946b60b23a987f6918168a0be2d6d9" translate="yes" xml:space="preserve">
          <source>You may define your own &lt;code&gt;DOC_ROOT_&lt;/code&gt; macros for any external packages you wish to link to using a &lt;a href=&quot;#macros&quot;&gt;Macros section&lt;/a&gt;.</source>
          <target state="translated">您可以使用&amp;ldquo; &lt;a href=&quot;#macros&quot;&gt;宏&amp;rdquo;部分&lt;/a&gt;为要链接到的任何外部包定义自己的 &lt;code&gt;DOC_ROOT_&lt;/code&gt; 宏。</target>
        </trans-unit>
        <trans-unit id="bf2a29cba8c99ca679dbf684333c923cf4ec456a" translate="yes" xml:space="preserve">
          <source>You may need to link to the &lt;b&gt;curl&lt;/b&gt; library, e.g. by adding &lt;code&gt;&quot;libs&quot;: [&quot;curl&quot;]&lt;/code&gt; to your &lt;b&gt;dub.json&lt;/b&gt; file if you are using &lt;a href=&quot;http://code.dlang.org&quot;&gt;DUB&lt;/a&gt;.</source>
          <target state="translated">您可能需要链接到&lt;b&gt;curl&lt;/b&gt;库，例如，如果使用的是&lt;a href=&quot;http://code.dlang.org&quot;&gt;DUB，&lt;/a&gt;则可以在&lt;b&gt;dub.json&lt;/b&gt;文件中添加 &lt;code&gt;&quot;libs&quot;: [&quot;curl&quot;]&lt;/code&gt; 。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="40c2fb3b6d80aac2a220718ac296cc1069f98791" translate="yes" xml:space="preserve">
          <source>You may need to link to the &lt;b&gt;curl&lt;/b&gt; library, e.g. by adding &lt;code&gt;&quot;libs&quot;: [&quot;curl&quot;]&lt;/code&gt; to your &lt;b&gt;dub.json&lt;/b&gt; file if you are using &lt;a href=&quot;https://code.dlang.org&quot;&gt;DUB&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edfa5374961a427324fc95b6cba01103b14831ce" translate="yes" xml:space="preserve">
          <source>You may opt to use, copy, modify, merge, publish, distribute and/or sell copies of the Software, and permit persons to whom the Software is furnished to do so, under the terms of the COPYING file.</source>
          <target state="translated">您可以选择使用、复制、修改、合并、出版、分发和/或出售本软件的副本,并允许获得本软件的人根据复制文件的条款这样做。</target>
        </trans-unit>
        <trans-unit id="50322cada6a0e21e214b6785e4891d438ace2a91" translate="yes" xml:space="preserve">
          <source>You may want to use &lt;code&gt;Rebindable&lt;/code&gt; when you want to have mutable storage referring to &lt;code&gt;const&lt;/code&gt; objects, for example an array of references that must be sorted in place. &lt;code&gt;Rebindable&lt;/code&gt; does not break the soundness of D's type system and does not incur any of the risks usually associated with &lt;code&gt;cast&lt;/code&gt;.</source>
          <target state="translated">当您想使用可变 &lt;code&gt;const&lt;/code&gt; 存储引用const对象时（例如必须在适当位置排序的引用数组），可能需要使用 &lt;code&gt;Rebindable&lt;/code&gt; 。 &lt;code&gt;Rebindable&lt;/code&gt; 不会破坏D的类型系统的健全性，也不会招致通常与 &lt;code&gt;cast&lt;/code&gt; 相关的任何风险。</target>
        </trans-unit>
        <trans-unit id="d40216de066cb1f033f6b3262e764ef0915eb5ad" translate="yes" xml:space="preserve">
          <source>You may want to use templated property functions (instead of Implicit Template Properties) to generate complex functions:</source>
          <target state="translated">你可能想使用模板属性函数(而不是隐式模板属性)来生成复杂的函数。</target>
        </trans-unit>
        <trans-unit id="db55fd579be49c54f8c178991ee321d18dc5a1f5" translate="yes" xml:space="preserve">
          <source>You may want to use the CRC32, CRC65ECMA and CRC64ISO aliases for convenience.</source>
          <target state="translated">为方便起见,您不妨使用CRC32、CRC65ECMA和CRC64ISO的别名。</target>
        </trans-unit>
        <trans-unit id="1a1d4c57f4a2414bd387d52bf93fb36278919c78" translate="yes" xml:space="preserve">
          <source>You need to specify the &lt;code&gt;unsafe&lt;/code&gt; parameter for enums with custom values</source>
          <target state="translated">您需要为带有自定义值的枚举指定 &lt;code&gt;unsafe&lt;/code&gt; 参数</target>
        </trans-unit>
        <trans-unit id="fc4767992a9f1c3de860fd8ca00dee74332afe20" translate="yes" xml:space="preserve">
          <source>You should rarely need to call this function. It exists so that CDatas can be used as associative array keys.</source>
          <target state="translated">你应该很少需要调用这个函数。它的存在是为了让CDatas可以作为关联数组键使用。</target>
        </trans-unit>
        <trans-unit id="86159f6788175c96b0181428a15b2f1f4051d9ac" translate="yes" xml:space="preserve">
          <source>You should rarely need to call this function. It exists so that Comments can be used as associative array keys.</source>
          <target state="translated">你应该很少需要调用这个函数。它的存在是为了让Comments可以作为关联数组键使用。</target>
        </trans-unit>
        <trans-unit id="55cf97addbd4d7e3fe53879199da112ed7f347bb" translate="yes" xml:space="preserve">
          <source>You should rarely need to call this function. It exists so that Documents can be used as associative array keys.</source>
          <target state="translated">你应该很少需要调用这个函数。它的存在是为了让Documents可以作为关联数组键使用。</target>
        </trans-unit>
        <trans-unit id="770696c8a297f8edec55950cc36f1c9cf4ea2f96" translate="yes" xml:space="preserve">
          <source>You should rarely need to call this function. It exists so that Elements can be used as associative array keys.</source>
          <target state="translated">你应该很少需要调用这个函数。它的存在是为了让Elements可以作为关联数组键使用。</target>
        </trans-unit>
        <trans-unit id="e963a087e2db85f944689291b453ef957179668f" translate="yes" xml:space="preserve">
          <source>You should rarely need to call this function. It exists so that ProcessingInstructions can be used as associative array keys.</source>
          <target state="translated">你应该很少需要调用这个函数。它的存在是为了让ProcessingInstructions可以作为关联数组键使用。</target>
        </trans-unit>
        <trans-unit id="7a79379185bbe8329843c72f4cd3a55c92058c99" translate="yes" xml:space="preserve">
          <source>You should rarely need to call this function. It exists so that Tags can be used as associative array keys.</source>
          <target state="translated">你应该很少需要调用这个函数。它的存在是为了让标签可以作为关联数组键使用。</target>
        </trans-unit>
        <trans-unit id="ffae39495c1ba7a2ec2a8a534df6e7552d4a2443" translate="yes" xml:space="preserve">
          <source>You should rarely need to call this function. It exists so that Texts can be used as associative array keys.</source>
          <target state="translated">你应该很少需要调用这个函数。它的存在是为了让 Texts 可以作为关联数组键使用。</target>
        </trans-unit>
        <trans-unit id="89946c8ae1beb19f9cb83a272f63a2e2a1dad64f" translate="yes" xml:space="preserve">
          <source>You should rarely need to call this function. It exists so that XmlInstructions can be used as associative array keys.</source>
          <target state="translated">你应该很少需要调用这个函数。它的存在是为了让 XmlInstructions 可以作为关联数组键使用。</target>
        </trans-unit>
        <trans-unit id="909f99a779adb66a76fc53ab56c7dd1caf35d0fd" translate="yes" xml:space="preserve">
          <source>Z</source>
          <target state="translated">Z</target>
        </trans-unit>
        <trans-unit id="4e9f2773f15b5889a5fb652dc146b57476cd52d6" translate="yes" xml:space="preserve">
          <source>Z_FINISH</source>
          <target state="translated">Z_FINISH</target>
        </trans-unit>
        <trans-unit id="07d3ecd2b854f2a13223bb7b7dd4db1a482ccd3c" translate="yes" xml:space="preserve">
          <source>Z_FULL_FLUSH</source>
          <target state="translated">Z_FULL_FLUSH</target>
        </trans-unit>
        <trans-unit id="78534a9ce32ec2df62158e7c9c11693b6744604b" translate="yes" xml:space="preserve">
          <source>Z_SYNC_FLUSH</source>
          <target state="translated">Z_SYNC_FLUSH</target>
        </trans-unit>
        <trans-unit id="2da27396964ac06f05f5bbad804ea58b1b769a7a" translate="yes" xml:space="preserve">
          <source>Zero if all elemented are visited, nonzero if not.</source>
          <target state="translated">如果所有元素都被访问,则为零,如果没有,则为非零。</target>
        </trans-unit>
        <trans-unit id="8df5e58805947bdcff88bb2019b2d094d05c05c9" translate="yes" xml:space="preserve">
          <source>Zero or more non-infinite forward ranges</source>
          <target state="translated">零或更多的非无限远距离</target>
        </trans-unit>
        <trans-unit id="bb1efd5bc2b916d992598168372279a4684c9e49" translate="yes" xml:space="preserve">
          <source>Zero or more pairs consisting of an &lt;code&gt;AllocFlag&lt;/code&gt; and an allocator type.</source>
          <target state="translated">零对或更多对，包含一个 &lt;code&gt;AllocFlag&lt;/code&gt; 和一个分配器类型。</target>
        </trans-unit>
        <trans-unit id="3e2bda8a88aff5f46c955102111f711363165c54" translate="yes" xml:space="preserve">
          <source>Zero-width lookahead assertion. Matches at a point where the subexpression regex could be matched starting from the current position.</source>
          <target state="translated">零宽度看头断言。从当前位置开始,在子表达式regex可以匹配的位置进行匹配。</target>
        </trans-unit>
        <trans-unit id="d859db4a5a63e306c41886451e4f60d1de98a6ed" translate="yes" xml:space="preserve">
          <source>Zero-width lookbehind assertion. Matches at a point where the subexpression regex could be matched ending at the current position (matching goes backwards).</source>
          <target state="translated">零宽度的lookbehind断言。在子表达式regex可以被匹配的点上进行匹配,以当前位置结束(匹配向后)。</target>
        </trans-unit>
        <trans-unit id="dd25b63c4bd1a2436f18b05d857f1a5b388ed97c" translate="yes" xml:space="preserve">
          <source>Zero-width negative lookahead assertion. Matches at a point where the subexpression regex could &lt;em&gt;not&lt;/em&gt; be matched starting from the current position.</source>
          <target state="translated">零宽度否定超前声明。匹配在其中的子表达式的正则表达式可以点&lt;em&gt;不是&lt;/em&gt;从当前位置开始进行匹配。</target>
        </trans-unit>
        <trans-unit id="c08ab8fc338dc8665d7647825312c8220d091cd8" translate="yes" xml:space="preserve">
          <source>Zero-width negative lookbehind assertion. Matches at a point where the subexpression regex could &lt;em&gt;not&lt;/em&gt; be matched ending at the current position (matching goes backwards).</source>
          <target state="translated">零宽度负向后声明。在子表达式正则表达式&lt;em&gt;无法&lt;/em&gt;匹配到当前位置结束的点匹配（匹配向后）。</target>
        </trans-unit>
        <trans-unit id="de1bd670d90f58a6c9b2ffebdc2fb027056ab442" translate="yes" xml:space="preserve">
          <source>ZipException when an unsupported compression method is used or when compression failed.</source>
          <target state="translated">当使用不支持的压缩方法或压缩失败时,出现ZipException。</target>
        </trans-unit>
        <trans-unit id="752cdaf20ca6526205211ed5572bf77959364345" translate="yes" xml:space="preserve">
          <source>ZipException when the archive could not be build.</source>
          <target state="translated">当档案无法建立时,出现ZipException。</target>
        </trans-unit>
        <trans-unit id="225113b2d8f745ebbb0d147b615c37ff99d15bc2" translate="yes" xml:space="preserve">
          <source>ZipException when the archive was invalid or when malware was detected.</source>
          <target state="translated">当存档无效或检测到恶意软件时,出现ZipException。</target>
        </trans-unit>
        <trans-unit id="4b1755d9718a61fbea36cc02d57100d6afa1daab" translate="yes" xml:space="preserve">
          <source>ZipException when the entry is invalid or the compression method is not supported.</source>
          <target state="translated">当条目无效或不支持压缩方法时,出现ZipException。</target>
        </trans-unit>
        <trans-unit id="6be404c28a20a755971361ab2d7b6240b4ee20e2" translate="yes" xml:space="preserve">
          <source>Zl</source>
          <target state="translated">Zl</target>
        </trans-unit>
        <trans-unit id="5633f83512c43c6456260610345d94ebb6dbe9d5" translate="yes" xml:space="preserve">
          <source>Zp</source>
          <target state="translated">Zp</target>
        </trans-unit>
        <trans-unit id="0b85f14fa99ca19d173a463217a813ab4fe5ad81" translate="yes" xml:space="preserve">
          <source>Zs</source>
          <target state="translated">Zs</target>
        </trans-unit>
        <trans-unit id="ed4edf00c589794000c22c60e5896dd5563b98fa" translate="yes" xml:space="preserve">
          <source>[ e1, e2, e3, ... ]</source>
          <target state="translated">[e1，e2，e3，...]</target>
        </trans-unit>
        <trans-unit id="8938fea170332eb44328d18b5e681dc858213e09" translate="yes" xml:space="preserve">
          <source>[ key0 : value0, key1 : value1, ... ]</source>
          <target state="translated">[key0：value0，key1：value1，...]</target>
        </trans-unit>
        <trans-unit id="a0c7153f1cc4aa831954a6788d4f2f9ef25f9bd4" translate="yes" xml:space="preserve">
          <source>[05:00:30 - 12:00:00)</source>
          <target state="translated">[05:00:30-12:00:00）</target>
        </trans-unit>
        <trans-unit id="5cc780b611e649470fb813785a884d0781d82398" translate="yes" xml:space="preserve">
          <source>[0x00, 0x00, 0xFE, 0xFF]</source>
          <target state="translated">[0x00、0x00、0xFE，0xFF]</target>
        </trans-unit>
        <trans-unit id="3a82e1270f683dce0aafeb683ef13257aa7cd535" translate="yes" xml:space="preserve">
          <source>[0x0E, 0xFE, 0xFF]</source>
          <target state="translated">[0x0E，0xFE，0xFF]</target>
        </trans-unit>
        <trans-unit id="127241c46d6af9dae67045d409338b48cf7d851c" translate="yes" xml:space="preserve">
          <source>[0x84, 0x31, 0x95, 0x33]</source>
          <target state="translated">[0x84、0x31、0x95、0x33]</target>
        </trans-unit>
        <trans-unit id="25d3883361a4fae44aa127fb1db5f4de39632e42" translate="yes" xml:space="preserve">
          <source>[0xDD, 0x73, 0x66, 0x73]</source>
          <target state="translated">[0xDD，0x73、0x66、0x73]</target>
        </trans-unit>
        <trans-unit id="f85c19245e651cc73bc05b92970a9810642dc5bd" translate="yes" xml:space="preserve">
          <source>[0xEF, 0xBB, 0xBF]</source>
          <target state="translated">[0xEF，0xBB，0xBF]</target>
        </trans-unit>
        <trans-unit id="8091720208bd9e06c11e2526dee2576869699591" translate="yes" xml:space="preserve">
          <source>[0xF7, 0x64, 0x4C]</source>
          <target state="translated">[0xF7、0x64、0x4C]</target>
        </trans-unit>
        <trans-unit id="50948e8255cdbb4bffa669a403821268e817ff90" translate="yes" xml:space="preserve">
          <source>[0xFB, 0xEE, 0x28]</source>
          <target state="translated">[0xFB，0xEE，0x28]</target>
        </trans-unit>
        <trans-unit id="37f1beff2dcd5309ee7e7c60e25143e26012959e" translate="yes" xml:space="preserve">
          <source>[0xFE, 0xFF]</source>
          <target state="translated">[0xFE，0xFF]</target>
        </trans-unit>
        <trans-unit id="88043d764331c8d0d96a29e08610589a55790021" translate="yes" xml:space="preserve">
          <source>[0xFF, 0xFE, 0x00, 0x00]</source>
          <target state="translated">[0xFF，0xFE，0x00、0x00]</target>
        </trans-unit>
        <trans-unit id="b0813d64143dd99bd80443c996704f63795593aa" translate="yes" xml:space="preserve">
          <source>[0xFF, 0xFE]</source>
          <target state="translated">[0xFF，0xFE]</target>
        </trans-unit>
        <trans-unit id="bb90d949090bdc87a5ffc85a1d4fc7c9359636ac" translate="yes" xml:space="preserve">
          <source>[1982-01-04T08:59:00 - 2010-07-04T12:00:00)</source>
          <target state="translated">[1982-01-04T08：59：00-2010-07-04T12：00：00）</target>
        </trans-unit>
        <trans-unit id="12347dc7f7cdd583255745f9bf967b1b9d33a2bd" translate="yes" xml:space="preserve">
          <source>[EDX,EAX] = [EDX,EAX] / [ECX,EBX] [ECX,EBX] = [EDX,EAX] % [ECX,EBX]</source>
          <target state="translated">[EDX，EAX] = [EDX，EAX] / [ECX，EBX] [ECX，EBX] = [EDX，EAX]％[ECX，EBX]</target>
        </trans-unit>
        <trans-unit id="709899bf392f7ec43be5bb3439c0b80f3583eeb7" translate="yes" xml:space="preserve">
          <source>[EDX,EAX] = [EDX,EAX] / [ECX,EBX] [ECX,EBX] = [EDX,EAX] % [ECX,EBX] ESI,EDI destroyed</source>
          <target state="translated">[EDX，EAX] = [EDX，EAX] / [ECX，EBX] [ECX，EBX] = [EDX，EAX]％[ECX，EBX] ESI，EDI已销毁</target>
        </trans-unit>
        <trans-unit id="455df00305aecd4738e1dab757f8f7993ca6aea1" translate="yes" xml:space="preserve">
          <source>[EDX,EAX],[ECX,EBX]</source>
          <target state="translated">[EDX,EAX],[ECX,EBX]</target>
        </trans-unit>
        <trans-unit id="ddaf8db003092aa758759000f6bb7ea6319f5293" translate="yes" xml:space="preserve">
          <source>[January 5th, 2010 - March 10th, 2010)</source>
          <target state="translated">[2010年1月5日-2010年3月10日）</target>
        </trans-unit>
        <trans-unit id="5850d1834e46e1a5b7ad928ccc67bc19e466e16b" translate="yes" xml:space="preserve">
          <source>[The GC modules defining the interface (gc.interface) and registration (gc.registry) are currently not public and are subject to change from version to version. Add an import search path to the druntime/src path to compile the example.]</source>
          <target state="translated">[定义接口（gc.interface）和注册（gc.registry）的GC模块目前尚未公开，并且可能会因版本而异。将导入搜索路径添加到druntime / src路径以编译示例。</target>
        </trans-unit>
        <trans-unit id="4b954678c0799d6d81c056360b3a7adde81fe086" translate="yes" xml:space="preserve">
          <source>[^class]</source>
          <target state="translated">[^class]</target>
        </trans-unit>
        <trans-unit id="4c30f6694055256fdec9df696d7c787e9f238f82" translate="yes" xml:space="preserve">
          <source>[a||b], [a--b], [a~~b], [a&amp;amp;&amp;amp;b]</source>
          <target state="translated">[a || b]，[a--b]，[a ~~ b]，[a &amp;amp;&amp;amp; b]</target>
        </trans-unit>
        <trans-unit id="045361a9242bfbdf1bdd2d8c5cd510cfe86f0507" translate="yes" xml:space="preserve">
          <source>[class]</source>
          <target state="translated">[class]</target>
        </trans-unit>
        <trans-unit id="a30e2891772edb4c8ba0ee9b73303175b2f0cd07" translate="yes" xml:space="preserve">
          <source>[mixin] template Identifier (parameters) [Constraint] &lt;a href=&quot;https://dlang.org/spec/template.html&quot;&gt;https://dlang.org/spec/template.html&lt;/a&gt;&lt;a href=&quot;https://dlang.org/spec/template-mixin.html&quot;&gt;https://dlang.org/spec/template-mixin.html&lt;/a&gt;</source>
          <target state="translated">[mixin]模板标识符（参数）[约束] &lt;a href=&quot;https://dlang.org/spec/template.html&quot;&gt;https://dlang.org/spec/template.html &lt;/a&gt;&lt;a href=&quot;https://dlang.org/spec/template-mixin.html&quot;&gt;https://dlang.org/spec/template-mixin.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1cbd929c7ee2a6fff2837e3fb05eb9e6b1989986" translate="yes" xml:space="preserve">
          <source>[special case]</source>
          <target state="translated">[特殊情况]</target>
        </trans-unit>
        <trans-unit id="95bc0dc370dc108367da33cf82301a753f2e319e" translate="yes" xml:space="preserve">
          <source>\B</source>
          <target state="translated">\B</target>
        </trans-unit>
        <trans-unit id="685fbb74df34ffbf7cb2576e295a8f2797a5c326" translate="yes" xml:space="preserve">
          <source>\D</source>
          <target state="translated">\D</target>
        </trans-unit>
        <trans-unit id="19784d22d82960d909c15c3197ac197f3f69df53" translate="yes" xml:space="preserve">
          <source>\P{Cyrillic}</source>
          <target state="translated">\P{Cyrillic}</target>
        </trans-unit>
        <trans-unit id="511b3dde8cf5b068533868bfe0a22b8e3fd6110e" translate="yes" xml:space="preserve">
          <source>\P{InBasicLatin}</source>
          <target state="translated">\P{InBasicLatin}</target>
        </trans-unit>
        <trans-unit id="e3d5456e0206a6f9d998d4a70a59a08724f2fbdc" translate="yes" xml:space="preserve">
          <source>\P{PropertyName}</source>
          <target state="translated">\P{PropertyName}</target>
        </trans-unit>
        <trans-unit id="cb092f062604c51a9863ba0cb5f29f5cc676fa1d" translate="yes" xml:space="preserve">
          <source>\S</source>
          <target state="translated">\S</target>
        </trans-unit>
        <trans-unit id="e2cf00aa1ca687b794ccd3e7ad1cd3f95b155126" translate="yes" xml:space="preserve">
          <source>\U00YYYYYY</source>
          <target state="translated">\U00YYYYYY</target>
        </trans-unit>
        <trans-unit id="dd763376ee8ab23121ea96f020a65565c5e68687" translate="yes" xml:space="preserve">
          <source>\W</source>
          <target state="translated">\W</target>
        </trans-unit>
        <trans-unit id="9e94758983980504af303ef297fd2bf9d9cea063" translate="yes" xml:space="preserve">
          <source>\\</source>
          <target state="translated">\\</target>
        </trans-unit>
        <trans-unit id="4629ca1b60e263bdc4326334b23323e0434717a5" translate="yes" xml:space="preserve">
          <source>\b</source>
          <target state="translated">\b</target>
        </trans-unit>
        <trans-unit id="9d84dff8df5bc5872e07f8bc4fd5c30d118c579e" translate="yes" xml:space="preserve">
          <source>\c , where c is any character</source>
          <target state="translated">\ c，其中c是任何字符</target>
        </trans-unit>
        <trans-unit id="28bc53053f1b821cbb584b3e67bb0cf54eaaee23" translate="yes" xml:space="preserve">
          <source>\c where c is one of [|*+?()</source>
          <target state="translated">\ c其中c是[| * +？（）之一</target>
        </trans-unit>
        <trans-unit id="e99e482dfabaf62459df1d07f2b8b140105afe46" translate="yes" xml:space="preserve">
          <source>\cC</source>
          <target state="translated">\cC</target>
        </trans-unit>
        <trans-unit id="caf5b0b18d08106e7f87e99a2da9940d43b46e3b" translate="yes" xml:space="preserve">
          <source>\d</source>
          <target state="translated">\d</target>
        </trans-unit>
        <trans-unit id="794a729d2e4ffbb094fec03ae9b3acd219371385" translate="yes" xml:space="preserve">
          <source>\f</source>
          <target state="translated">\f</target>
        </trans-unit>
        <trans-unit id="ef7e6794ca9c6a06b54b66f279237fb8daaaeea8" translate="yes" xml:space="preserve">
          <source>\n</source>
          <target state="translated">\n</target>
        </trans-unit>
        <trans-unit id="ebe4d41e923a479329d1012ecceef8319b97bfe6" translate="yes" xml:space="preserve">
          <source>\p{Cyrillic}</source>
          <target state="translated">\p{Cyrillic}</target>
        </trans-unit>
        <trans-unit id="6ba94b4fb31f1afec11f9809b329845de27c9bb8" translate="yes" xml:space="preserve">
          <source>\p{InBasicLatin}</source>
          <target state="translated">\p{InBasicLatin}</target>
        </trans-unit>
        <trans-unit id="c0ab0ae964aa381825b8b94bb5a7bb07c1a5bbdc" translate="yes" xml:space="preserve">
          <source>\p{PropertyName}</source>
          <target state="translated">\p{PropertyName}</target>
        </trans-unit>
        <trans-unit id="f12c84902108895980702c88db900ceea2d2ec01" translate="yes" xml:space="preserve">
          <source>\r</source>
          <target state="translated">\r</target>
        </trans-unit>
        <trans-unit id="e1c702e348504013ae2a1faa8cec6a558f9315a8" translate="yes" xml:space="preserve">
          <source>\s</source>
          <target state="translated">\s</target>
        </trans-unit>
        <trans-unit id="8bf81043e29dfc96a6fe1f30f7116f552de6e7d7" translate="yes" xml:space="preserve">
          <source>\t</source>
          <target state="translated">\t</target>
        </trans-unit>
        <trans-unit id="f2cc6fc9ff8093a6d4713d7baac4f64b490f9732" translate="yes" xml:space="preserve">
          <source>\uXXXX</source>
          <target state="translated">\uXXXX</target>
        </trans-unit>
        <trans-unit id="d5d0ebb2740b3e81b5cce512a169118a280bb8cb" translate="yes" xml:space="preserve">
          <source>\v</source>
          <target state="translated">\v</target>
        </trans-unit>
        <trans-unit id="84a1312a8a946a90cf99ad056ddaeb081ebe238e" translate="yes" xml:space="preserve">
          <source>\w</source>
          <target state="translated">\w</target>
        </trans-unit>
        <trans-unit id="3ae3339d3df42bd81574a61520ae7ec1b26f3f20" translate="yes" xml:space="preserve">
          <source>\xXX</source>
          <target state="translated">\xXX</target>
        </trans-unit>
        <trans-unit id="4ff447b8ef42ca51fa6fb287bed8d40f49be58f1" translate="yes" xml:space="preserve">
          <source>]</source>
          <target state="translated">]</target>
        </trans-unit>
        <trans-unit id="2c1dc11960c9d5c8367226c4452cef60c46ae64b" translate="yes" xml:space="preserve">
          <source>], and sub-sequences are denoted by the slicing syntax.</source>
          <target state="translated">]，子序列由切片语法表示。</target>
        </trans-unit>
        <trans-unit id="5e6f80a34a9798cafc6a5db96cc57ba4c4db59c2" translate="yes" xml:space="preserve">
          <source>^</source>
          <target state="translated">^</target>
        </trans-unit>
        <trans-unit id="980c4ab611293347dac0eddbf024ca3da40ebfb9" translate="yes" xml:space="preserve">
          <source>_N2 &lt;strong id=&quot;strings&quot;&gt;strings&lt;/strong&gt;;</source>
          <target state="translated">_N2 &lt;strong id=&quot;strings&quot;&gt;字符串&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5a5dc3120fd3d083305057a37451ec087d1ec206" translate="yes" xml:space="preserve">
          <source>_N31 &lt;strong id=&quot;data&quot;&gt;data&lt;/strong&gt;;</source>
          <target state="translated">_N31 &lt;strong id=&quot;data&quot;&gt;数据&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6b416a55cf8bb5b155da033be92758ef2f0fd324" translate="yes" xml:space="preserve">
          <source>_Unwind_Action &lt;code&gt;actions&lt;/code&gt;</source>
          <target state="translated">_Unwind_Action &lt;code&gt;actions&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6120ca07385a9d02cca9d20e846a6c4107396652" translate="yes" xml:space="preserve">
          <source>_Unwind_Context* &lt;code&gt;context&lt;/code&gt;</source>
          <target state="translated">_Unwind_Context * &lt;code&gt;context&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="602b6e0399b5d74ad3f9037cbe913543b4f9dd5f" translate="yes" xml:space="preserve">
          <source>_Unwind_Exception* &lt;code&gt;eo&lt;/code&gt;</source>
          <target state="translated">_Unwind_Exception * &lt;code&gt;eo&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="554e3b632e56d6f1df6dfc8b8a2101dfa9a092b7" translate="yes" xml:space="preserve">
          <source>_Unwind_Exception* &lt;code&gt;exceptionObject&lt;/code&gt;</source>
          <target state="translated">_Unwind_Exception * &lt;code&gt;exceptionObject&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4210dabc2a56c810c242f98f93364e5a2ac2a25a" translate="yes" xml:space="preserve">
          <source>_Unwind_Exception_Class &lt;code&gt;exceptionClass&lt;/code&gt;</source>
          <target state="translated">_Unwind_Exception_Class &lt;code&gt;exceptionClass&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="792273665f4652968e51ebb49f54e805c90d1ed5" translate="yes" xml:space="preserve">
          <source>_Unwind_Ptr &lt;code&gt;ip&lt;/code&gt;</source>
          <target state="translated">_Unwind_Ptr &lt;code&gt;ip&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d154c3f701d36b2cec3d162fa56a26b218612d55" translate="yes" xml:space="preserve">
          <source>_Unwind_Ptr &lt;code&gt;landingPad&lt;/code&gt;</source>
          <target state="translated">_Unwind_Ptr &lt;code&gt;landingPad&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c675061e0d8b288a6134cf2588857468b008450a" translate="yes" xml:space="preserve">
          <source>_Unwind_Reason_Code &lt;strong id=&quot;__dmd_personality_v0&quot;&gt;__dmd_personality_v0&lt;/strong&gt;(int ver, _Unwind_Action actions, _Unwind_Exception_Class exceptionClass, _Unwind_Exception* exceptionObject, _Unwind_Context* context);</source>
          <target state="translated">_Unwind_Reason_Code &lt;strong id=&quot;__dmd_personality_v0&quot;&gt;__dmd_personality_v0&lt;/strong&gt;（int ver，_Unwind_Action操作，_Unwind_Exception_Class exceptionClass，_Unwind_Exception * exceptionObject，_Unwind_Context *上下文）;</target>
        </trans-unit>
        <trans-unit id="9072ddffb62ae60ff34ae70b7030371d0c03ad0d" translate="yes" xml:space="preserve">
          <source>_sleb128_t &lt;strong id=&quot;sLEB128&quot;&gt;sLEB128&lt;/strong&gt;(const(ubyte)** p);</source>
          <target state="translated">_sleb128_t &lt;strong id=&quot;sLEB128&quot;&gt;sLEB128&lt;/strong&gt;（const（ubyte）** p）;</target>
        </trans-unit>
        <trans-unit id="b7419a423f2fcfe5cd1de6e9080bcb6d2faec43e" translate="yes" xml:space="preserve">
          <source>_traits(identifier, args...)</source>
          <target state="translated">_traits（标识符，参数...）</target>
        </trans-unit>
        <trans-unit id="2c3a07fac6fc35e6943846630c3e1cd773d7e32d" translate="yes" xml:space="preserve">
          <source>_uleb128_t &lt;strong id=&quot;uLEB128&quot;&gt;uLEB128&lt;/strong&gt;(const(ubyte)** p);</source>
          <target state="translated">_uleb128_t &lt;strong id=&quot;uLEB128&quot;&gt;uLEB128&lt;/strong&gt;（const（ubyte）** p）;</target>
        </trans-unit>
        <trans-unit id="5259a4315957e9c1db2618c0f2d7fe150b69556c" translate="yes" xml:space="preserve">
          <source>`0`</source>
          <target state="translated">`0`</target>
        </trans-unit>
        <trans-unit id="267a4bb6f51ed35da54f9fb95b42688147432a5a" translate="yes" xml:space="preserve">
          <source>`AllocFlag.fixedSize`</source>
          <target state="translated">`AllocFlag.fixedSize`</target>
        </trans-unit>
        <trans-unit id="3fb8a6fec0a41da3ce9dc667372b3c3e5fcc056d" translate="yes" xml:space="preserve">
          <source>`AllocFlag.hasNoIndirections | AllocFlag.fixedSize`</source>
          <target state="translated">`AllocFlag.hasNoIndirections | AllocFlag.fixedSize`</target>
        </trans-unit>
        <trans-unit id="4b09a4ccee1998b0b223e05f91d954fcd0746599" translate="yes" xml:space="preserve">
          <source>`AllocFlag.hasNoIndirections`</source>
          <target state="translated">`AllocFlag.hasNoIndirections`</target>
        </trans-unit>
        <trans-unit id="1e7a4b101ab0d46e83e3df2c788c1202fea02588" translate="yes" xml:space="preserve">
          <source>`AllocFlag.immutableShared | AllocFlag.hasNoIndirections | AllocFlag.fixedSize`</source>
          <target state="translated">`AllocFlag.immutableShared | AllocFlag.hasNoIndirections | AllocFlag.fixedSize`</target>
        </trans-unit>
        <trans-unit id="95ee7f2e0af8ea1b26858a0e24b13ac2a35d5e89" translate="yes" xml:space="preserve">
          <source>`AllocFlag.immutableShared | AllocFlag.hasNoIndirections`</source>
          <target state="translated">`AllocFlag.immutableShared | AllocFlag.hasNoIndirections`</target>
        </trans-unit>
        <trans-unit id="9226bfc311c2934df8a67406986e1fae35e0d1e2" translate="yes" xml:space="preserve">
          <source>`AllocFlag.immutableShared`</source>
          <target state="translated">`AllocFlag.immutableShared`</target>
        </trans-unit>
        <trans-unit id="8ffb013f2c91e1792124ee48ad9e8399f986d95f" translate="yes" xml:space="preserve">
          <source>`AllocFlag.threadLocal | AllocFlag.hasNoIndirections | AllocFlag.fixedSize`</source>
          <target state="translated">`AllocFlag.threadLocal | AllocFlag.hasNoIndirections | AllocFlag.fixedSize`</target>
        </trans-unit>
        <trans-unit id="39c79680debfe2439708064e798d03d1ba1d9f52" translate="yes" xml:space="preserve">
          <source>`AllocFlag.threadLocal | AllocFlag.hasNoIndirections`</source>
          <target state="translated">`AllocFlag.threadLocal | AllocFlag.hasNoIndirections`</target>
        </trans-unit>
        <trans-unit id="07b48c6da1bc77296f0bcd6675397ce85fd60f8b" translate="yes" xml:space="preserve">
          <source>`AllocFlag.threadLocal`</source>
          <target state="translated">`AllocFlag.threadLocal`</target>
        </trans-unit>
        <trans-unit id="93b7aad5da37a53762dc7ee6a72c8493e2857ab7" translate="yes" xml:space="preserve">
          <source>`Ternary empty();`</source>
          <target state="translated">三元empty（）;</target>
        </trans-unit>
        <trans-unit id="30e090b60af63e8d6bccaa51660ec51ef8cf21df" translate="yes" xml:space="preserve">
          <source>`Ternary owns(void[] b);`</source>
          <target state="translated">`三元拥有（void [] b）;`</target>
        </trans-unit>
        <trans-unit id="11a952ce8951413a7965d2ef58f8668e085709d5" translate="yes" xml:space="preserve">
          <source>`Ternary resolveInternalPointer(void* p, ref void[] result);`</source>
          <target state="translated">三元resolveInternalPointer（void * p，ref void []结果）；</target>
        </trans-unit>
        <trans-unit id="b293daf2b94fcecc6d941d7fd9a963fabb2f414a" translate="yes" xml:space="preserve">
          <source>`UUID.Variant`</source>
          <target state="translated">`UUID.Variant`</target>
        </trans-unit>
        <trans-unit id="612e57ee3eda41877d759b9338ff3aa24f00d43f" translate="yes" xml:space="preserve">
          <source>`UUID.Version`</source>
          <target state="translated">`UUID.Version`</target>
        </trans-unit>
        <trans-unit id="67cae93829c730c322b7fcf354b743041c305a6d" translate="yes" xml:space="preserve">
          <source>`bool alignedReallocate(ref void[] b,</source>
          <target state="translated">`boolalignedReallocate（ref void [] b，</target>
        </trans-unit>
        <trans-unit id="2eb1c73d19a8284e71ebbfe525c77ffa32126ed3" translate="yes" xml:space="preserve">
          <source>`bool deallocate(void[] b);`</source>
          <target state="translated">`bool deallocate（void [] b）;`</target>
        </trans-unit>
        <trans-unit id="4ba14ab4f841b3304bd9a4feb1e38bd47e64d895" translate="yes" xml:space="preserve">
          <source>`bool deallocateAll();`</source>
          <target state="translated">`bool deallocateAll（）;`</target>
        </trans-unit>
        <trans-unit id="13a6aa7488cf2ff21c19c58f6d92c530fea1a259" translate="yes" xml:space="preserve">
          <source>`bool expand(ref void[] b, size_t delta);`</source>
          <target state="translated">`bool expand（ref void [] b，size_t delta）;`</target>
        </trans-unit>
        <trans-unit id="406b79125a607cf78944c45500dd31b422545453" translate="yes" xml:space="preserve">
          <source>`bool reallocate(ref void[] b, size_t s);`</source>
          <target state="translated">`bool reallocate（ref void [] b，size_t s）;`</target>
        </trans-unit>
        <trans-unit id="cfdd2f2491b2c295432df1370b4c458ff823fef8" translate="yes" xml:space="preserve">
          <source>`size_t goodAllocSize(size_t n);`</source>
          <target state="translated">`size_t goodAllocSize（size_t n）;`</target>
        </trans-unit>
        <trans-unit id="801bd6813aa4c0330dcf2056e10b3533a1352a81" translate="yes" xml:space="preserve">
          <source>`static Allocator instance;`</source>
          <target state="translated">静态分配器实例；</target>
        </trans-unit>
        <trans-unit id="ad28a9b1fb797def73cae78fdd852227fd7d7573" translate="yes" xml:space="preserve">
          <source>`uint alignment;`</source>
          <target state="translated">uint对齐；</target>
        </trans-unit>
        <trans-unit id="0c6332d76bec808ed786689c706ba08b1b302fbf" translate="yes" xml:space="preserve">
          <source>`void[] alignedAllocate(size_t s, uint a);`</source>
          <target state="translated">`void [] alignedAllocate（size_t s，uint a）;`</target>
        </trans-unit>
        <trans-unit id="f0b1271584aa3408a331061f5d648e112b7efce9" translate="yes" xml:space="preserve">
          <source>`void[] allocate(size_t s);`</source>
          <target state="translated">`void [] allocate（size_t s）;`</target>
        </trans-unit>
        <trans-unit id="75ef97c368705919d5757541da49a9d741b5cc8f" translate="yes" xml:space="preserve">
          <source>`void[] allocateAll();`</source>
          <target state="translated">`void [] allocateAll（）;`</target>
        </trans-unit>
        <trans-unit id="86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" translate="yes" xml:space="preserve">
          <source>a</source>
          <target state="translated">a</target>
        </trans-unit>
        <trans-unit id="4e1df7712d667e3c4f7c2ae7d664f5e6185a68c1" translate="yes" xml:space="preserve">
          <source>a &amp;cap; b</source>
          <target state="translated">a&amp;cap;b</target>
        </trans-unit>
        <trans-unit id="071b68afd90173dc93c649c6c0bf3a80778f2074" translate="yes" xml:space="preserve">
          <source>a &amp;cup; b</source>
          <target state="translated">a&amp;cup;b</target>
        </trans-unit>
        <trans-unit id="49e4ed45006b0ed737f3ead37d6f12ffe51e71c7" translate="yes" xml:space="preserve">
          <source>a .. z</source>
          <target state="translated">a ...z</target>
        </trans-unit>
        <trans-unit id="ec2f0d57fb7ffa20b86457d77672259e646844d0" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;#FileAndLines&quot;&gt;&lt;code&gt;FileAndLines&lt;/code&gt;&lt;/a&gt; object containing a line-by-line representation of the requested file</source>
          <target state="translated">一个&lt;a href=&quot;#FileAndLines&quot;&gt; &lt;code&gt;FileAndLines&lt;/code&gt; &lt;/a&gt;对象，其中包含所请求文件的逐行表示</target>
        </trans-unit>
        <trans-unit id="ae003014da05dd328a0259aef2b40c1543a1bb05" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;expression#NewExpression&quot;&gt;&lt;i&gt;NewExpression&lt;/i&gt;&lt;/a&gt;</source>
          <target state="translated">一个&lt;a href=&quot;expression#NewExpression&quot;&gt;&lt;i&gt;NewExpression&lt;/i&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="67149728bff457d4ca064189aebe0b9345430db2" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;std_range_primitives#isBidirectionalRange&quot;&gt;bidirectional range&lt;/a&gt; or &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt;</source>
          <target state="translated">一个&lt;a href=&quot;std_range_primitives#isBidirectionalRange&quot;&gt;双向范围&lt;/a&gt;或&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f8653df1e136899ee0cf91e4ff780365e4ac2cea" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;std_range_primitives#isBidirectionalRange&quot;&gt;bidirectional range&lt;/a&gt; with a length member</source>
          <target state="translated">具有长度成员的&lt;a href=&quot;std_range_primitives#isBidirectionalRange&quot;&gt;双向范围&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e805b2a3b236f9cd9bf9c0d39f55509179e3c3e0" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;std_range_primitives#isBidirectionalRange&quot;&gt;bidirectional range&lt;/a&gt; with either swappable elements, a random access range with a length member, or a narrow string</source>
          <target state="translated">具有可交换元素的&lt;a href=&quot;std_range_primitives#isBidirectionalRange&quot;&gt;双向范围&lt;/a&gt;，具有长度成员的随机访问范围或窄字符串</target>
        </trans-unit>
        <trans-unit id="df8045e3f2cce8b905eed1d3c80cebe099149916" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;forward range&lt;/a&gt;</source>
          <target state="translated">一个&lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;前进档&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f42a1354e42c927e608012b3a9c367c38fefb573" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;Nullable&lt;/code&gt;</source>
          <target state="translated">可 &lt;code&gt;Nullable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49695019b9966fa00d02e848d13d2ef54c1e8a9d" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;RegexMatch&lt;/code&gt; object holding engine state after first match.</source>
          <target state="translated">一个 &lt;code&gt;RegexMatch&lt;/code&gt; 对象，在第一次匹配后保持引擎状态。</target>
        </trans-unit>
        <trans-unit id="b757888337c73f1c546ccc04a483b659909fa89c" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;bool&lt;/code&gt; indicating if the hook is present.</source>
          <target state="translated">指示钩子是否存在的 &lt;code&gt;bool&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="5bc54aa30d63c6f7fea044ddc457725de4aee66c" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;dchar[]&lt;/code&gt;, &lt;code&gt;const(dchar)[]&lt;/code&gt;, or &lt;code&gt;immutable(dchar)[]&lt;/code&gt; depending on the constness of the input.</source>
          <target state="translated">一个 &lt;code&gt;dchar[]&lt;/code&gt; ， &lt;code&gt;const(dchar)[]&lt;/code&gt; ，或 &lt;code&gt;immutable(dchar)[]&lt;/code&gt; 根据输入的常量性。</target>
        </trans-unit>
        <trans-unit id="03839dca8b9b692ac1d7aee42852db8c332f295b" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;string&lt;/code&gt; or a callable</source>
          <target state="translated">一个 &lt;code&gt;string&lt;/code&gt; 或调用</target>
        </trans-unit>
        <trans-unit id="cb872c0d9ef96cb3322219e41f6eeac0ec3c5d02" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;string&lt;/code&gt;, a &lt;code&gt;wstring&lt;/code&gt; or a &lt;code&gt;dstring&lt;/code&gt;, according to the type of hexData.</source>
          <target state="translated">一个 &lt;code&gt;string&lt;/code&gt; ，一个 &lt;code&gt;wstring&lt;/code&gt; 的或 &lt;code&gt;dstring&lt;/code&gt; ，根据hexData的类型。</target>
        </trans-unit>
        <trans-unit id="ccc866ad6800cdbcc2ca4cdacd252f4481d61e0c" translate="yes" xml:space="preserve">
          <source>a D identifier to include scope and type information.</source>
          <target state="translated">a D标识符,包括范围和类型信息。</target>
        </trans-unit>
        <trans-unit id="fe7ef2f63d5ee004ed09501c1595fd5181fbc14f" translate="yes" xml:space="preserve">
          <source>a Range with all of range except element at the start and end</source>
          <target state="translated">a 范围内除了开头和结尾的元素外,其他都是范围。</target>
        </trans-unit>
        <trans-unit id="4dec9368b24007f8419ebfa9246f664978da71b0" translate="yes" xml:space="preserve">
          <source>a SwapStrategy to determine if the original order needs to be preserved</source>
          <target state="translated">a SwapStrategy来确定是否需要保留原来的订单。</target>
        </trans-unit>
        <trans-unit id="790c4b14baf27505558b4b6b645315ca29ca6346" translate="yes" xml:space="preserve">
          <source>a bidirectional ranges with lvalue elements or mutable character arrays</source>
          <target state="translated">带有l值元素或可变字符数组的双向范围。</target>
        </trans-unit>
        <trans-unit id="0a5fa2340fb556380d5d778923f9c24f91575b85" translate="yes" xml:space="preserve">
          <source>a bit number, starting with bit 0 of p[0], and progressing. It addresses bits like the expression:</source>
          <target state="translated">一个位数,从p[0]的第0位开始,然后逐步增加。它的位数地址就像表达式一样。</target>
        </trans-unit>
        <trans-unit id="0ad06a6379ceb4cf2d26d3dbe64014c3bc0b2638" translate="yes" xml:space="preserve">
          <source>a block of 16 to 256 bytes has an 8-bit length.</source>
          <target state="translated">一个16到256字节的块有8位长度。</target>
        </trans-unit>
        <trans-unit id="636382d53c33f221bc93820c5da3d45d8e582a11" translate="yes" xml:space="preserve">
          <source>a block with 512 to pagesize/2 bytes has a 16-bit length.</source>
          <target state="translated">一个512到pageize/2字节的块有16位长度。</target>
        </trans-unit>
        <trans-unit id="63dc84cfb488be56164093a4bdcd03d2b1298666" translate="yes" xml:space="preserve">
          <source>a callable object whose opCall takes at least 1 object</source>
          <target state="translated">一个可调用对象,其opCall至少需要1个对象。</target>
        </trans-unit>
        <trans-unit id="daf6a6b6706d9d1ca73d83fb14a03265f1cf1b22" translate="yes" xml:space="preserve">
          <source>a complete asm {} block</source>
          <target state="translated">一个完整的asm {}块</target>
        </trans-unit>
        <trans-unit id="b8f7f3e0729ccf7a3ebdd043ba13f0117f857481" translate="yes" xml:space="preserve">
          <source>a complex number of two float values</source>
          <target state="translated">复数</target>
        </trans-unit>
        <trans-unit id="1ec824306b3c33dafba3a2181e71d12cbd804cc9" translate="yes" xml:space="preserve">
          <source>a consistent look and feel for the contracts</source>
          <target state="translated">合同的外观和感觉一致</target>
        </trans-unit>
        <trans-unit id="e1eb7a00f854554d82c47e43291ee8679e31edcf" translate="yes" xml:space="preserve">
          <source>a copy</source>
          <target state="translated">复本</target>
        </trans-unit>
        <trans-unit id="1f7130e75c49486ef081e7c892a20ab1a931a5f6" translate="yes" xml:space="preserve">
          <source>a definition</source>
          <target state="translated">定义</target>
        </trans-unit>
        <trans-unit id="922b5e213dee1219392e6ee5619bc4fdb3e0bc7a" translate="yes" xml:space="preserve">
          <source>a delegate that is not shared.</source>
          <target state="translated">一个不共享的代表。</target>
        </trans-unit>
        <trans-unit id="f854768186923f7ab92a02bc0db7eb9d81722d8b" translate="yes" xml:space="preserve">
          <source>a delegate.</source>
          <target state="translated">向代表们介绍。</target>
        </trans-unit>
        <trans-unit id="c6795ac04025149e8c2d9c07896a810980a6522c" translate="yes" xml:space="preserve">
          <source>a finite &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt;</source>
          <target state="translated">有限的&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e34e8650151d2e3fda4c7ae9b869ad4bdf0b9cb" translate="yes" xml:space="preserve">
          <source>a finite bidirectional range of any character type</source>
          <target state="translated">任意字型的有限双向范围</target>
        </trans-unit>
        <trans-unit id="68abf41f49f9c1433888d21a08ac5fa8fbbdb47e" translate="yes" xml:space="preserve">
          <source>a finite input range</source>
          <target state="translated">有限的输入范围</target>
        </trans-unit>
        <trans-unit id="d49aa2609891c0f3d30106ea282a31ceae46796c" translate="yes" xml:space="preserve">
          <source>a finite range of unsigned integers</source>
          <target state="translated">有限范围内的无符号整数。</target>
        </trans-unit>
        <trans-unit id="649db5f4a21a97229739d0662f4a3ae8d0e38718" translate="yes" xml:space="preserve">
          <source>a floating point number.</source>
          <target state="translated">一个浮点数。</target>
        </trans-unit>
        <trans-unit id="487c373e88007c86b23b353a4b50b852df4b0953" translate="yes" xml:space="preserve">
          <source>a floating point type</source>
          <target state="translated">浮点型</target>
        </trans-unit>
        <trans-unit id="c090c8bd507efb6e4ca04287da9914ef2a0aab27" translate="yes" xml:space="preserve">
          <source>a forward range of characters</source>
          <target state="translated">正字</target>
        </trans-unit>
        <trans-unit id="628ce63ede2a327909956ecaf8cccfa6ce999af7" translate="yes" xml:space="preserve">
          <source>a function operating on the content of the nullable</source>
          <target state="translated">的内容上操作的函数。</target>
        </trans-unit>
        <trans-unit id="91112f1aadba820ad445ebe615d0547a6acfe8b0" translate="yes" xml:space="preserve">
          <source>a function parameter, type, D keyword, etc. To prevent unintended emphasis of an identifier, it can be preceded by an underscore (_). The underscore will be stripped from the output.</source>
          <target state="translated">函数参数、类型、D关键字等。为了防止标识符被无意中强调,可以在标识符前加上下划线(_)。下划线将从输出中删除。</target>
        </trans-unit>
        <trans-unit id="d4d5a7e70378b636e3b00c3a1822d9583ac5bc54" translate="yes" xml:space="preserve">
          <source>a function pointer or an aggregate type with &lt;code&gt;opCall&lt;/code&gt; defined.</source>
          <target state="translated">函数指针或定义了 &lt;code&gt;opCall&lt;/code&gt; 的聚合类型。</target>
        </trans-unit>
        <trans-unit id="8e2a09a27fb8ee8761906aa158f3dff9b9712b43" translate="yes" xml:space="preserve">
          <source>a function taking at least one argument</source>
          <target state="translated">一个至少接受一个参数的函数</target>
        </trans-unit>
        <trans-unit id="a97bc5020979027c4ffda324639c732aacaf23f9" translate="yes" xml:space="preserve">
          <source>a gzip file format header</source>
          <target state="translated">gzip文件格式头</target>
        </trans-unit>
        <trans-unit id="0100dfab5b820f9c81dcbadcd39369be91bb4fbb" translate="yes" xml:space="preserve">
          <source>a human readable representation of &lt;code&gt;kind&lt;/code&gt;</source>
          <target state="translated">一种人类可读的表示 &lt;code&gt;kind&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f00a7a0ee8c70534bf8c96dc229c15d465e64551" translate="yes" xml:space="preserve">
          <source>a human readable representation of &lt;code&gt;mod&lt;/code&gt;, which is the token &lt;code&gt;mod&lt;/code&gt; corresponds to</source>
          <target state="translated">&lt;code&gt;mod&lt;/code&gt; 的人类可读表示形式，即令牌 &lt;code&gt;mod&lt;/code&gt; 对应于</target>
        </trans-unit>
        <trans-unit id="5e16d75f43a42130dbe18bac0e7c29b365988d9a" translate="yes" xml:space="preserve">
          <source>a human readable representation of &lt;code&gt;trust&lt;/code&gt;, which is the token &lt;code&gt;trust&lt;/code&gt; corresponds to</source>
          <target state="translated">可读的 &lt;code&gt;trust&lt;/code&gt; 表示形式，即令牌 &lt;code&gt;trust&lt;/code&gt; 对应于</target>
        </trans-unit>
        <trans-unit id="8167707979440f9b27a1db55e9e9db99b20d954a" translate="yes" xml:space="preserve">
          <source>a lazy range of the center justified result</source>
          <target state="translated">一个懒惰的范围的中心公正的结果。</target>
        </trans-unit>
        <trans-unit id="05849852a3c615b71ba6ebcb2db90ff95a3557ec" translate="yes" xml:space="preserve">
          <source>a lazy range of the left justified result</source>
          <target state="translated">一个懒惰的范围的左对齐的结果。</target>
        </trans-unit>
        <trans-unit id="c4599ab7eb80f5e32e3d6d14e21939b828f66f92" translate="yes" xml:space="preserve">
          <source>a lazy range of the right justified result</source>
          <target state="translated">懒惰的范围的正确的正当的结果。</target>
        </trans-unit>
        <trans-unit id="9c1679fa6fa9482337c5d92d57681f9c86acf627" translate="yes" xml:space="preserve">
          <source>a nested anonymous metaclass for classes declared with &lt;code&gt;extern (Objective-C)&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;extern (Objective-C)&lt;/code&gt; 声明的类的嵌套匿名元类</target>
        </trans-unit>
        <trans-unit id="e9e7456a88ad947c20708de6829d3c61458d1076" translate="yes" xml:space="preserve">
          <source>a new &lt;code&gt;Address&lt;/code&gt; object for the current address family.</source>
          <target state="translated">当前地址族的新 &lt;code&gt;Address&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="389c91bb51f9cfa0458917dcf2eb2a1ff107b745" translate="yes" xml:space="preserve">
          <source>a new CURLM handle to use in all 'curl_multi' functions.</source>
          <target state="translated">一个新的CURLM句柄,用于所有'curl_multi'函数。</target>
        </trans-unit>
        <trans-unit id="c8bf750c22c80e55f24830fe1a75e1fa0f055664" translate="yes" xml:space="preserve">
          <source>a new side effect part will be appended to it.</source>
          <target state="translated">一个新的副作用部分将被附加到它上面。</target>
        </trans-unit>
        <trans-unit id="b37cc0fa9addd5bd99cc71f9847e07ad4b2bc47d" translate="yes" xml:space="preserve">
          <source>a newly allocated &lt;code&gt;Token&lt;/code&gt;.</source>
          <target state="translated">新分配的 &lt;code&gt;Token&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a7d797e7c7c0fe19dbbff1d234c07a6b85bc4643" translate="yes" xml:space="preserve">
          <source>a newly allocated variable that can be added to the global environment</source>
          <target state="translated">一个新分配的变量,可以添加到全局环境中。</target>
        </trans-unit>
        <trans-unit id="d56871548a1832d8b03d7d36fc3c0cb1e15b54d3" translate="yes" xml:space="preserve">
          <source>a non-NULL pointer to an array of size_ts.</source>
          <target state="translated">一个指向size_ts数组的非NULL指针。</target>
        </trans-unit>
        <trans-unit id="26e785e0e12b9301f27f6129c0d1e3732f421ad8" translate="yes" xml:space="preserve">
          <source>a parameter list or an &lt;a href=&quot;std_meta#AliasSeq&quot;&gt;&lt;code&gt;std.meta.AliasSeq&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">参数列表或&lt;a href=&quot;std_meta#AliasSeq&quot;&gt; &lt;code&gt;std.meta.AliasSeq&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b825c2b89a7b65ebd8efbeb9c3c47187195e609" translate="yes" xml:space="preserve">
          <source>a parameter passed to fp.</source>
          <target state="translated">a 传递给fp的参数。</target>
        </trans-unit>
        <trans-unit id="3e8a8c89b9f7d485fe2d176f226a4dc30ac744e9" translate="yes" xml:space="preserve">
          <source>a path to a file or a directory</source>
          <target state="translated">文件路径</target>
        </trans-unit>
        <trans-unit id="c004984b0ff8689f0b2c64ba44ddb90f50f87467" translate="yes" xml:space="preserve">
          <source>a path to check (the name is stripped)</source>
          <target state="translated">检查路径(名称已被删除)</target>
        </trans-unit>
        <trans-unit id="21fc31a44f9fa0a4c6f9375f5da16bb9ce1c6173" translate="yes" xml:space="preserve">
          <source>a pointer value is read from any part of the memory object graph, which is treated as assignment to whoever receives that pointer</source>
          <target state="translated">从内存对象图的任何部分读取指针值,这将被视为对接收该指针的人的赋值。</target>
        </trans-unit>
        <trans-unit id="c0019fae2527fd9881c87f8441e2f7840f60cf59" translate="yes" xml:space="preserve">
          <source>a predicate that splits the range when it returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">当返回 &lt;code&gt;true&lt;/code&gt; 时分割范围的谓词。</target>
        </trans-unit>
        <trans-unit id="33fae92b0643fcbc5277050bf157e00e0f69167e" translate="yes" xml:space="preserve">
          <source>a priori</source>
          <target state="translated">先验</target>
        </trans-unit>
        <trans-unit id="1a9f0ea3e7ef5961f2d620fe43278ed03a639dae" translate="yes" xml:space="preserve">
          <source>a random access range of the transformed path</source>
          <target state="translated">变换后路径的随机访问范围</target>
        </trans-unit>
        <trans-unit id="2fee2e73aec51a47416d4a6e2e9d67b9648bd826" translate="yes" xml:space="preserve">
          <source>a random access range that has the &lt;code&gt;length&lt;/code&gt; property defined</source>
          <target state="translated">具有定义的 &lt;code&gt;length&lt;/code&gt; 属性的随机访问范围</target>
        </trans-unit>
        <trans-unit id="92f30b65c6a221f4d486b1bbcdb830a23b98aa20" translate="yes" xml:space="preserve">
          <source>a random access range with length and slicing</source>
          <target state="translated">随机访问范围,长度和分片。</target>
        </trans-unit>
        <trans-unit id="1d179652a4e158dfbeff3f1f10cd49dd3f21a551" translate="yes" xml:space="preserve">
          <source>a range containing the consecutive reduced values.</source>
          <target state="translated">含有连续减少值的范围。</target>
        </trans-unit>
        <trans-unit id="e2781d63293139e2556f24c205b5ad27ae1c76e2" translate="yes" xml:space="preserve">
          <source>a range of key/values for &lt;code&gt;aa&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;aa&lt;/code&gt; 的键/值范围。</target>
        </trans-unit>
        <trans-unit id="43a5a343a2251882995e76e970a8af071e6d7d85" translate="yes" xml:space="preserve">
          <source>a range with swappable elements</source>
          <target state="translated">可交换元素的范围</target>
        </trans-unit>
        <trans-unit id="b17d5c73af540a000b6f6e63479eac11de1d82a0" translate="yes" xml:space="preserve">
          <source>a range with the substitutions replaced.</source>
          <target state="translated">替换的范围。</target>
        </trans-unit>
        <trans-unit id="21d0ed1bc8f959e056a89160cb5229a3f37ec952" translate="yes" xml:space="preserve">
          <source>a raw pointer &lt;code&gt;U*&lt;/code&gt; and &lt;code&gt;U&lt;/code&gt; is not immutable or shared;</source>
          <target state="translated">原始指针 &lt;code&gt;U*&lt;/code&gt; 并且 &lt;code&gt;U&lt;/code&gt; 是不可变的或不共享的；</target>
        </trans-unit>
        <trans-unit id="79e50baeb3d063611f00a4f43409559f6fc83879" translate="yes" xml:space="preserve">
          <source>a raw pointer &lt;code&gt;U*&lt;/code&gt; and &lt;code&gt;U&lt;/code&gt; is not immutable;</source>
          <target state="translated">原始指针 &lt;code&gt;U*&lt;/code&gt; 并且 &lt;code&gt;U&lt;/code&gt; 是不可变的；</target>
        </trans-unit>
        <trans-unit id="bb5ae1e2ccaa3affccdf7062f555c80027e1514b" translate="yes" xml:space="preserve">
          <source>a raw pointer &lt;code&gt;U*&lt;/code&gt;;</source>
          <target state="translated">原始指针 &lt;code&gt;U*&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="ae375e46ec29a2f0eacc078d3bc2a801bdfc2fdd" translate="yes" xml:space="preserve">
          <source>a reference to a class or interface type &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; is not immutable.</source>
          <target state="translated">对类或接口类型 &lt;code&gt;C&lt;/code&gt; 和 &lt;code&gt;C&lt;/code&gt; 的引用不是不可变的。</target>
        </trans-unit>
        <trans-unit id="f19bdd640ead3f29b9c19fdeac686f1cd2fc82cf" translate="yes" xml:space="preserve">
          <source>a reference to a class type &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; is not immutable or shared.</source>
          <target state="translated">对类类型 &lt;code&gt;C&lt;/code&gt; 和 &lt;code&gt;C&lt;/code&gt; 的引用不是不可变的或不共享的。</target>
        </trans-unit>
        <trans-unit id="7d75434c0735e6afa0aa79ebfddfaaffcd35e59c" translate="yes" xml:space="preserve">
          <source>a reference to a class type &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">对类 &lt;code&gt;C&lt;/code&gt; 的引用。</target>
        </trans-unit>
        <trans-unit id="148580627812ac95e48dbbdccb5f2026281794a9" translate="yes" xml:space="preserve">
          <source>a reference to the array being grown</source>
          <target state="translated">阵列的引用</target>
        </trans-unit>
        <trans-unit id="e73a1c28cc974188b5649f82a204be6256b684ff" translate="yes" xml:space="preserve">
          <source>a reference to the array being shrunk</source>
          <target state="translated">对被收缩的数组的引用</target>
        </trans-unit>
        <trans-unit id="dd256d8afbdff3c97c21d239389f44b83c713c52" translate="yes" xml:space="preserve">
          <source>a scope for the parameters of ti</source>
          <target state="translated">ti的参数范围</target>
        </trans-unit>
        <trans-unit id="900b6d61727bf38670543f302fa5afe93dc45e0f" translate="yes" xml:space="preserve">
          <source>a set of replacements/substitutions</source>
          <target state="translated">一套替换/替代方案。</target>
        </trans-unit>
        <trans-unit id="95d89b650f29de7bd2964e529745e5a28ecd8f1c" translate="yes" xml:space="preserve">
          <source>a single value which can be substituted in &amp;Omicron;(&lt;code&gt;1&lt;/code&gt;)</source>
          <target state="translated">可以替换为&amp;Omicron;（ &lt;code&gt;1&lt;/code&gt; ）的单个值</target>
        </trans-unit>
        <trans-unit id="7f2852d8b1ffaad7610b1947814ef77a1693697e" translate="yes" xml:space="preserve">
          <source>a standard zlib header</source>
          <target state="translated">标准的zlib头</target>
        </trans-unit>
        <trans-unit id="aac0fee755016e2c7eb030feae3d94bcf836e2b0" translate="yes" xml:space="preserve">
          <source>a string of &lt;code&gt;chars&lt;/code&gt;, &lt;code&gt;wchars&lt;/code&gt;, or &lt;code&gt;dchars&lt;/code&gt;, or any custom type that casts to a &lt;code&gt;string&lt;/code&gt; type</source>
          <target state="translated">一串 &lt;code&gt;chars&lt;/code&gt; ， &lt;code&gt;wchars&lt;/code&gt; 或 &lt;code&gt;dchars&lt;/code&gt; ，或任何强制类型转换为 &lt;code&gt;string&lt;/code&gt; 类型的自定义类型</target>
        </trans-unit>
        <trans-unit id="6b098a6de224f3afd1732001eeb4dcde43264d38" translate="yes" xml:space="preserve">
          <source>a super class</source>
          <target state="translated">超一流</target>
        </trans-unit>
        <trans-unit id="8b2bf0cc0af6ff3e9a821f1c216a5dd0c740312c" translate="yes" xml:space="preserve">
          <source>a symbolic link, then this function returns the same result as getAttributes.</source>
          <target state="translated">符号链接,那么这个函数返回的结果和getAttributes一样。</target>
        </trans-unit>
        <trans-unit id="ab3af9c0283f081bc3bea60f8b5edd2c5c7a6f05" translate="yes" xml:space="preserve">
          <source>a temporary is created</source>
          <target state="translated">姑且</target>
        </trans-unit>
        <trans-unit id="60b7cf24e644afefc7283c41a9aaa20d65bbada5" translate="yes" xml:space="preserve">
          <source>a value composed of to with from's sign bit.</source>
          <target state="translated">由to与from的符号位组成的值。</target>
        </trans-unit>
        <trans-unit id="8e844cdc8ccc36baf4224b163fe87b586e865b67" translate="yes" xml:space="preserve">
          <source>a value of the same type as the elements of &lt;code&gt;range&lt;/code&gt; or another</source>
          <target state="translated">与 &lt;code&gt;range&lt;/code&gt; 元素或其他元素类型相同的值</target>
        </trans-unit>
        <trans-unit id="8b3d081f8c47b5157cb11c1b0a972d62497370b2" translate="yes" xml:space="preserve">
          <source>a variable or the result of the</source>
          <target state="translated">的结果</target>
        </trans-unit>
        <trans-unit id="56b639ee9ee05047e2ef785a7cbdfb353ca1bc9f" translate="yes" xml:space="preserve">
          <source>a ~ b</source>
          <target state="translated">a ~ b</target>
        </trans-unit>
        <trans-unit id="fb35c4b616776fb6592cb05476b0bfe92df2837c" translate="yes" xml:space="preserve">
          <source>a ∖ b</source>
          <target state="translated">a ∖ b</target>
        </trans-unit>
        <trans-unit id="6b6c2ccd462c682b27ee161ecdb19779d3900466" translate="yes" xml:space="preserve">
          <source>a-z</source>
          <target state="translated">a-z</target>
        </trans-unit>
        <trans-unit id="3a03030725b0199fd4c86e3c8d0a00300de99977" translate="yes" xml:space="preserve">
          <source>a.b.c.d</source>
          <target state="translated">a.b.c.d</target>
        </trans-unit>
        <trans-unit id="f29bc91bbdab169fc0c0a326965953d11c7dff83" translate="yes" xml:space="preserve">
          <source>a1</source>
          <target state="translated">a1</target>
        </trans-unit>
        <trans-unit id="b9f85daa6f83cf02ce5c31913d1f64d3f5c8fade" translate="yes" xml:space="preserve">
          <source>a2</source>
          <target state="translated">a2</target>
        </trans-unit>
        <trans-unit id="252bc06763afb3b6c2a0802f7346700ab55f46f5" translate="yes" xml:space="preserve">
          <source>a3</source>
          <target state="translated">a3</target>
        </trans-unit>
        <trans-unit id="b521ea96e9e6e36ea9392ad018bba8be3aecff53" translate="yes" xml:space="preserve">
          <source>aaRange implements a ForwardRange</source>
          <target state="translated">aaRange实现了一个ForwardRange。</target>
        </trans-unit>
        <trans-unit id="ade5cf54af7f5b303ac4e754cc4c48f00b3f37df" translate="yes" xml:space="preserve">
          <source>aborting the program</source>
          <target state="translated">终止程序</target>
        </trans-unit>
        <trans-unit id="66206b19c16f55926390c56d098d8185332f4213" translate="yes" xml:space="preserve">
          <source>about harmonia</source>
          <target state="translated">关于和声</target>
        </trans-unit>
        <trans-unit id="c3900ea911127bf782b2d7bb9ec9503ece3dbba7" translate="yes" xml:space="preserve">
          <source>absolute path</source>
          <target state="translated">绝对路径</target>
        </trans-unit>
        <trans-unit id="602dca236598238a20d1d974a6a552be16144410" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;ASTNode&quot;&gt;ASTNode&lt;/strong&gt;: dmd.root.rootobject.RootObject;</source>
          <target state="translated">抽象类&lt;strong id=&quot;ASTNode&quot;&gt;ASTNode&lt;/strong&gt;：dmd.root.rootobject.RootObject;</target>
        </trans-unit>
        <trans-unit id="95509f8a438d1cf3f323d02b088ca5779b76583c" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;Address&quot;&gt;Address&lt;/strong&gt;;</source>
          <target state="translated">抽象类&lt;strong id=&quot;Address&quot;&gt;地址&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="63e845ea4d461d4b16e1bbc87ea8009ecb18f618" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;AggregateDeclaration&quot;&gt;AggregateDeclaration&lt;/strong&gt;: dmd.dsymbol.ScopeDsymbol;</source>
          <target state="translated">抽象类&lt;strong id=&quot;AggregateDeclaration&quot;&gt;AggregateDeclaration&lt;/strong&gt;：dmd.dsymbol.ScopeDsymbol;</target>
        </trans-unit>
        <trans-unit id="403dcb8243542a4bc5815dc711147d99ed29e505" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;AttribDeclaration&quot;&gt;AttribDeclaration&lt;/strong&gt;: dmd.dsymbol.Dsymbol;</source>
          <target state="translated">抽象类&lt;strong id=&quot;AttribDeclaration&quot;&gt;AttribDeclaration&lt;/strong&gt;：dmd.dsymbol.Dsymbol;</target>
        </trans-unit>
        <trans-unit id="e8a38045cbe1fb3004176c55373db6883312bb5a" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;BinExp&quot;&gt;BinExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="translated">抽象类&lt;strong id=&quot;BinExp&quot;&gt;BinExp&lt;/strong&gt;：dmd.expression.Expression;</target>
        </trans-unit>
        <trans-unit id="9394d0631363a67c3a779404482a247a6ca9d5a9" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;DVCondition&quot;&gt;DVCondition&lt;/strong&gt;: dmd.cond.Condition;</source>
          <target state="translated">&lt;strong id=&quot;DVCondition&quot;&gt;DVCondition&lt;/strong&gt;抽象类：dmd.cond.Condition;</target>
        </trans-unit>
        <trans-unit id="20175d4842de48104bc341a1fa032c678d99cb0d" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;Declaration&quot;&gt;Declaration&lt;/strong&gt;: dmd.dsymbol.Dsymbol;</source>
          <target state="translated">抽象类&lt;strong id=&quot;Declaration&quot;&gt;声明&lt;/strong&gt;：dmd.dsymbol.Dsymbol;</target>
        </trans-unit>
        <trans-unit id="62305af0d3d5f4a75ca73a484fb06a9fa2d2477e" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;DiagnosticReporter&quot;&gt;DiagnosticReporter&lt;/strong&gt;;</source>
          <target state="translated">抽象类&lt;strong id=&quot;DiagnosticReporter&quot;&gt;DiagnosticReporter&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ff2920faff7856c19bb3ebf3648943afb8e898c2" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;EncodingScheme&quot;&gt;EncodingScheme&lt;/strong&gt;;</source>
          <target state="translated">抽象类&lt;strong id=&quot;EncodingScheme&quot;&gt;EncodingScheme&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="94eeab83710d1c83646bc2b10efc14bc964a406c" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;Expression&quot;&gt;Expression&lt;/strong&gt;: dmd.ast_node.ASTNode;</source>
          <target state="translated">抽象类&lt;strong id=&quot;Expression&quot;&gt;表达式&lt;/strong&gt;：dmd.ast_node.ASTNode;</target>
        </trans-unit>
        <trans-unit id="f8be1b3f718c56fdbd0615c655f6306f46529984" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;Item&quot;&gt;Item&lt;/strong&gt;;</source>
          <target state="translated">抽象类&lt;strong id=&quot;Item&quot;&gt;Item&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="149923a53a0ca05ff89bd02ffe41d3241c32359b" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;Logger&quot;&gt;Logger&lt;/strong&gt;;</source>
          <target state="translated">抽象类&lt;strong id=&quot;Logger&quot;&gt;Logger&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f85697e4de75a42ea78654ae3f7d6c37dfaad822" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;Statement&quot;&gt;Statement&lt;/strong&gt;: dmd.ast_node.ASTNode;</source>
          <target state="translated">抽象类&lt;strong id=&quot;Statement&quot;&gt;声明&lt;/strong&gt;：dmd.ast_node.ASTNode;</target>
        </trans-unit>
        <trans-unit id="007fc2b635ffccd53ce2345ac64b2dc386a175b4" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;TemplateParameter&quot;&gt;TemplateParameter&lt;/strong&gt;: dmd.ast_node.ASTNode;</source>
          <target state="translated">抽象类&lt;strong id=&quot;TemplateParameter&quot;&gt;TemplateParameter&lt;/strong&gt;：dmd.ast_node.ASTNode;</target>
        </trans-unit>
        <trans-unit id="d3c19fd4a030fecb8af73bafe481c5088f40ec39" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;TimeZone&quot;&gt;TimeZone&lt;/strong&gt;;</source>
          <target state="translated">抽象类&lt;strong id=&quot;TimeZone&quot;&gt;TimeZone&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ba56109af33e44da40c2f5e9104b0ca45af8a48b" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;Type&quot;&gt;Type&lt;/strong&gt;: dmd.ast_node.ASTNode;</source>
          <target state="translated">抽象类&lt;strong id=&quot;Type&quot;&gt;类型&lt;/strong&gt;：dmd.ast_node.ASTNode;</target>
        </trans-unit>
        <trans-unit id="798a2222891ab69ba186eaaccc2bab0c9eb748df" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;TypeArray&quot;&gt;TypeArray&lt;/strong&gt;: dmd.mtype.TypeNext;</source>
          <target state="translated">抽象类&lt;strong id=&quot;TypeArray&quot;&gt;TypeArray&lt;/strong&gt;：dmd.mtype.TypeNext;</target>
        </trans-unit>
        <trans-unit id="a4c13a5a815e8f5e75a925515cdae3e2bc035bc4" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;TypeInfo&quot;&gt;TypeInfo&lt;/strong&gt;;</source>
          <target state="translated">抽象类&lt;strong id=&quot;TypeInfo&quot;&gt;TypeInfo&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="0f3504678015ab650adadb12d8c93874393377d7" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;TypeNext&quot;&gt;TypeNext&lt;/strong&gt;: dmd.mtype.Type;</source>
          <target state="translated">抽象类&lt;strong id=&quot;TypeNext&quot;&gt;TypeNext&lt;/strong&gt;：dmd.mtype.Type;</target>
        </trans-unit>
        <trans-unit id="47c0cd8c87bc56d2477764d2bfef68a567c269df" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;TypeQualified&quot;&gt;TypeQualified&lt;/strong&gt;: dmd.mtype.Type;</source>
          <target state="translated">抽象类&lt;strong id=&quot;TypeQualified&quot;&gt;TypeQualified&lt;/strong&gt;：dmd.mtype.Type;</target>
        </trans-unit>
        <trans-unit id="dac3841924a003012fa35ee82ab6ba299fb0e170" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;UnaExp&quot;&gt;UnaExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="translated">抽象类&lt;strong id=&quot;UnaExp&quot;&gt;UnaExp&lt;/strong&gt;：dmd.expression.Expression;</target>
        </trans-unit>
        <trans-unit id="04905ecdd0bc24265bb75e2f8349eeebb71f723d" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;environment&quot;&gt;environment&lt;/strong&gt;;</source>
          <target state="translated">抽象课堂&lt;strong id=&quot;environment&quot;&gt;环境&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b92286f6ded5726e9d1cf41a43730d855dbda337" translate="yes" xml:space="preserve">
          <source>abstract const @property immutable(ubyte)[] &lt;strong id=&quot;replacementSequence&quot;&gt;replacementSequence&lt;/strong&gt;();</source>
          <target state="translated">抽象常量@property不可变的（UBYTE）[] &lt;strong id=&quot;replacementSequence&quot;&gt;replacementSequence&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="a078097d45f73e5f942f2ad0b2cd3e147ce88a2c" translate="yes" xml:space="preserve">
          <source>abstract const @safe bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt;(scope const Object o);</source>
          <target state="translated">抽象const @safe bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt;（作用域const Object o）；</target>
        </trans-unit>
        <trans-unit id="9ec343436a8d45ebb3c0b51f976b32c5db7770f7" translate="yes" xml:space="preserve">
          <source>abstract const @safe int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt;(scope const Object o);</source>
          <target state="translated">抽象const @safe int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt;（作用域const Object o）；</target>
        </trans-unit>
        <trans-unit id="7b8164e42fa21d5b9a3d865bd45b5f7757b770ba" translate="yes" xml:space="preserve">
          <source>abstract const bool &lt;strong id=&quot;canEncode&quot;&gt;canEncode&lt;/strong&gt;(dchar c);</source>
          <target state="translated">抽象const bool &lt;strong id=&quot;canEncode&quot;&gt;canEncode&lt;/strong&gt;（dchar c）;</target>
        </trans-unit>
        <trans-unit id="8ddaec9d91a381ca7db3fa66d634855390e4adc1" translate="yes" xml:space="preserve">
          <source>abstract const dchar &lt;strong id=&quot;decode&quot;&gt;decode&lt;/strong&gt;(ref const(ubyte)[] s);</source>
          <target state="translated">抽象const dchar &lt;strong id=&quot;decode&quot;&gt;解码&lt;/strong&gt;（ref const（ubyte）[] s）;</target>
        </trans-unit>
        <trans-unit id="53eadf7889a9cff20dba39144e6a26e0141f0a34" translate="yes" xml:space="preserve">
          <source>abstract const dchar &lt;strong id=&quot;safeDecode&quot;&gt;safeDecode&lt;/strong&gt;(ref const(ubyte)[] s);</source>
          <target state="translated">抽象const dchar &lt;strong id=&quot;safeDecode&quot;&gt;safeDecode&lt;/strong&gt;（ref const（ubyte）[] s）;</target>
        </trans-unit>
        <trans-unit id="6e33c81d704d3b0f7d3ba23df15ad0c8228b2ea1" translate="yes" xml:space="preserve">
          <source>abstract const nothrow @property @safe bool &lt;strong id=&quot;hasDST&quot;&gt;hasDST&lt;/strong&gt;();</source>
          <target state="translated">抽象const nothrow @property @safe bool &lt;strong id=&quot;hasDST&quot;&gt;hasDST&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="f931bd7261429df79d9bc44f77f1263acb3018a6" translate="yes" xml:space="preserve">
          <source>abstract const nothrow @property @trusted size_t &lt;strong id=&quot;length&quot;&gt;length&lt;/strong&gt;();</source>
          <target state="translated">抽象const nothrow @property @trusted size_t &lt;strong id=&quot;length&quot;&gt;length&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="5540b65913716858bace3cf98a03b87188f44b67" translate="yes" xml:space="preserve">
          <source>abstract const nothrow @safe bool &lt;strong id=&quot;dstInEffect&quot;&gt;dstInEffect&lt;/strong&gt;(long stdTime);</source>
          <target state="translated">抽象const nothrow @safe bool &lt;strong id=&quot;dstInEffect&quot;&gt;dstInEffect&lt;/strong&gt;（长stdTime）；</target>
        </trans-unit>
        <trans-unit id="8c086739876521b50fd6e96d4027e47834e57fff" translate="yes" xml:space="preserve">
          <source>abstract const nothrow @safe long &lt;strong id=&quot;tzToUTC&quot;&gt;tzToUTC&lt;/strong&gt;(long adjTime);</source>
          <target state="translated">抽象const nothrow @safe long &lt;strong id=&quot;tzToUTC&quot;&gt;tzToUTC&lt;/strong&gt;（long adjTime）;</target>
        </trans-unit>
        <trans-unit id="d0c4bc82b9438e84b2646684043e9d09eb8c8d7f" translate="yes" xml:space="preserve">
          <source>abstract const nothrow @safe long &lt;strong id=&quot;utcToTZ&quot;&gt;utcToTZ&lt;/strong&gt;(long stdTime);</source>
          <target state="translated">抽象const nothrow @safe long &lt;strong id=&quot;utcToTZ&quot;&gt;utcToTZ&lt;/strong&gt;（long stdTime）;</target>
        </trans-unit>
        <trans-unit id="9a720d6b4499c3cbf7103b828c3a83e9cd9b479a" translate="yes" xml:space="preserve">
          <source>abstract const pure nothrow @nogc @property @safe const(sockaddr)* &lt;strong id=&quot;name&quot;&gt;name&lt;/strong&gt;();</source>
          <target state="translated">抽象const纯nothrow @nogc @property @safe const（sockaddr）* &lt;strong id=&quot;name&quot;&gt;名称&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="52efee9dd8b6b17375ff78f8fc9e9b8d5461eda1" translate="yes" xml:space="preserve">
          <source>abstract const pure nothrow @nogc @property @safe socklen_t &lt;strong id=&quot;nameLen&quot;&gt;nameLen&lt;/strong&gt;();</source>
          <target state="translated">抽象const纯nothrow @nogc @property @safe socklen_t &lt;strong id=&quot;nameLen&quot;&gt;nameLen&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="f353e2cb7d99934a61fc5f31472dae3722e99e7f" translate="yes" xml:space="preserve">
          <source>abstract const pure nothrow @nogc @property scope @safe bool &lt;strong id=&quot;isEmptyXML&quot;&gt;isEmptyXML&lt;/strong&gt;();</source>
          <target state="translated">抽象const纯nothrow @nogc @property作用域@safe bool &lt;strong id=&quot;isEmptyXML&quot;&gt;isEmptyXML&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="b249614910dfe2f856313aa1019178dd9fe70cb9" translate="yes" xml:space="preserve">
          <source>abstract const pure nothrow @nogc @safe const(void)[] &lt;strong id=&quot;initializer&quot;&gt;initializer&lt;/strong&gt;();</source>
          <target state="translated">抽象const纯nothrow @nogc @safe const（void）[] &lt;strong id=&quot;initializer&quot;&gt;初始值设定项&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="cb35c80415cb32c94c73a7756df440c1c0085656" translate="yes" xml:space="preserve">
          <source>abstract const scope @safe size_t &lt;strong id=&quot;toHash&quot;&gt;toHash&lt;/strong&gt;();</source>
          <target state="translated">抽象const作用域@safe size_t &lt;strong id=&quot;toHash&quot;&gt;toHash&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="ba60f0f7e9c67be9c2a374cbf12efe3f6ce0981b" translate="yes" xml:space="preserve">
          <source>abstract const scope @safe string &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt;();</source>
          <target state="translated">抽象const作用域@safe string &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="3fddb56a48e702f11c3260531971876b15c5b616" translate="yes" xml:space="preserve">
          <source>abstract const size_t &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt;(dchar c, ubyte[] buffer);</source>
          <target state="translated">抽象const size_t &lt;strong id=&quot;encode&quot;&gt;编码&lt;/strong&gt;（dchar c，ubyte []缓冲区）；</target>
        </trans-unit>
        <trans-unit id="60ca1bd89bc8caee262d7cb530fc381260b71bc7" translate="yes" xml:space="preserve">
          <source>abstract const size_t &lt;strong id=&quot;encodedLength&quot;&gt;encodedLength&lt;/strong&gt;(dchar c);</source>
          <target state="translated">抽象const size_t &lt;strong id=&quot;encodedLength&quot;&gt;编码长度&lt;/strong&gt;（dchar c）;</target>
        </trans-unit>
        <trans-unit id="83071325e73d53e5f586a7473d854a646dfa53f2" translate="yes" xml:space="preserve">
          <source>abstract const string &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt;();</source>
          <target state="translated">抽象常量字符串&lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="6a7f3249c54be78bd9aefd00c5134b6c22ed4229" translate="yes" xml:space="preserve">
          <source>abstract const string[] &lt;strong id=&quot;names&quot;&gt;names&lt;/strong&gt;();</source>
          <target state="translated">抽象的const string [] &lt;strong id=&quot;names&quot;&gt;names&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="57f6f621bc4fda3d27a805f68650176d80cae595" translate="yes" xml:space="preserve">
          <source>abstract nothrow @property ref ThreadInfo &lt;strong id=&quot;thisInfo&quot;&gt;thisInfo&lt;/strong&gt;();</source>
          <target state="translated">抽象&lt;strong id=&quot;thisInfo&quot;&gt;nothrow @property&lt;/strong&gt; ref ThreadInfo &lt;strong id=&quot;thisInfo&quot;&gt;thisInfo&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="8ce4ca186c11cd72e82380377b8f27ebe6f26cd6" translate="yes" xml:space="preserve">
          <source>abstract nothrow @property uint &lt;strong id=&quot;alignment&quot;&gt;alignment&lt;/strong&gt;();</source>
          <target state="translated">抽象nothrow @property uint &lt;strong id=&quot;alignment&quot;&gt;对齐&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="b79d9fb4976110e88e4ab28a861490510565fb15" translate="yes" xml:space="preserve">
          <source>abstract nothrow @trusted ubyte[] &lt;strong id=&quot;finish&quot;&gt;finish&lt;/strong&gt;();</source>
          <target state="translated">抽象nothrow @trusted ubyte [] &lt;strong id=&quot;finish&quot;&gt;finish&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="167c64980438994d6dbad9f19e456295b6c94b8a" translate="yes" xml:space="preserve">
          <source>abstract nothrow @trusted void &lt;strong id=&quot;put&quot;&gt;put&lt;/strong&gt;(scope const(ubyte)[] data...);</source>
          <target state="translated">抽象nothrow @trusted void &lt;strong id=&quot;put&quot;&gt;put&lt;/strong&gt;（scope const（ubyte）[] data ...）;</target>
        </trans-unit>
        <trans-unit id="86a6002b042cafebd04ec7cf6c791edaae960ae4" translate="yes" xml:space="preserve">
          <source>abstract nothrow @trusted void &lt;strong id=&quot;reset&quot;&gt;reset&lt;/strong&gt;();</source>
          <target state="translated">抽象nothrow @trusted void &lt;strong id=&quot;reset&quot;&gt;reset&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="e59361272d85e133dacd2d7633f69a1cc1289cb3" translate="yes" xml:space="preserve">
          <source>abstract nothrow Condition &lt;strong id=&quot;newCondition&quot;&gt;newCondition&lt;/strong&gt;(Mutex m);</source>
          <target state="translated">abstract nothrow条件&lt;strong id=&quot;newCondition&quot;&gt;newCondition&lt;/strong&gt;（Mutex m）;</target>
        </trans-unit>
        <trans-unit id="60910532671bf8753b04472cff1bc534ba4ac9c8" translate="yes" xml:space="preserve">
          <source>abstract nothrow Ternary &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt;();</source>
          <target state="translated">抽象nothrow三元&lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="e1cbb0bdf80fccbb2b734c3c9a902ae40b765d8b" translate="yes" xml:space="preserve">
          <source>abstract nothrow Ternary &lt;strong id=&quot;owns&quot;&gt;owns&lt;/strong&gt;(void[] b);</source>
          <target state="translated">三元&lt;strong id=&quot;owns&quot;&gt;拥有的&lt;/strong&gt;抽象nothrow （void [] b）;</target>
        </trans-unit>
        <trans-unit id="a499e8082c356f5f98161e5ee0e2030976f96f31" translate="yes" xml:space="preserve">
          <source>abstract nothrow Ternary &lt;strong id=&quot;resolveInternalPointer&quot;&gt;resolveInternalPointer&lt;/strong&gt;(const void* p, ref void[] result);</source>
          <target state="translated">抽象&lt;strong id=&quot;resolveInternalPointer&quot;&gt;nothrow&lt;/strong&gt;三元&lt;strong id=&quot;resolveInternalPointer&quot;&gt;resolveInternalPointer&lt;/strong&gt;（const void * p，ref void [] result）;</target>
        </trans-unit>
        <trans-unit id="2c4d08f3784605a480640ab968377af8ff0ce5fd" translate="yes" xml:space="preserve">
          <source>abstract nothrow bool &lt;strong id=&quot;alignedReallocate&quot;&gt;alignedReallocate&lt;/strong&gt;(ref void[] b, size_t size, uint alignment);</source>
          <target state="translated">抽象&lt;strong id=&quot;alignedReallocate&quot;&gt;nothrow boolalignedReallocate&lt;/strong&gt;（ref void [] b，size_t size，uint对齐）;</target>
        </trans-unit>
        <trans-unit id="9d69e75dc9bcb49d9905f73d8210657227458ffc" translate="yes" xml:space="preserve">
          <source>abstract nothrow bool &lt;strong id=&quot;deallocate&quot;&gt;deallocate&lt;/strong&gt;(void[] b);</source>
          <target state="translated">抽象nothrow bool &lt;strong id=&quot;deallocate&quot;&gt;释放&lt;/strong&gt;（void [] b）;</target>
        </trans-unit>
        <trans-unit id="afa2b20b684f27c142f4112a6d99f9932eb01370" translate="yes" xml:space="preserve">
          <source>abstract nothrow bool &lt;strong id=&quot;deallocateAll&quot;&gt;deallocateAll&lt;/strong&gt;();</source>
          <target state="translated">抽象nothrow bool &lt;strong id=&quot;deallocateAll&quot;&gt;deallocateAll&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="6b1ba7f33b558a329f8f6224834c8460d344a129" translate="yes" xml:space="preserve">
          <source>abstract nothrow bool &lt;strong id=&quot;expand&quot;&gt;expand&lt;/strong&gt;(ref void[], size_t);</source>
          <target state="translated">抽象nothrow bool &lt;strong id=&quot;expand&quot;&gt;expand&lt;/strong&gt;（ref void []，size_t）;</target>
        </trans-unit>
        <trans-unit id="b87cc10b53f23a530901939991462cefca7f8245" translate="yes" xml:space="preserve">
          <source>abstract nothrow bool &lt;strong id=&quot;reallocate&quot;&gt;reallocate&lt;/strong&gt;(ref void[], size_t);</source>
          <target state="translated">抽象nothrow bool &lt;strong id=&quot;reallocate&quot;&gt;重新分配&lt;/strong&gt;（ref void []，size_t）；</target>
        </trans-unit>
        <trans-unit id="a37d26cf992e712c5fb5057d3327388969756806" translate="yes" xml:space="preserve">
          <source>abstract nothrow int &lt;strong id=&quot;deprecationCount&quot;&gt;deprecationCount&lt;/strong&gt;();</source>
          <target state="translated">抽象nothrow int &lt;strong id=&quot;deprecationCount&quot;&gt;deprecationCount&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="195235832c7fc492f87dd0627fb8d1728a061658" translate="yes" xml:space="preserve">
          <source>abstract nothrow int &lt;strong id=&quot;errorCount&quot;&gt;errorCount&lt;/strong&gt;();</source>
          <target state="translated">抽象&lt;strong id=&quot;errorCount&quot;&gt;nothrow&lt;/strong&gt; int &lt;strong id=&quot;errorCount&quot;&gt;errorCount&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="ca583154b01f55013661898507f9c49042fa8959" translate="yes" xml:space="preserve">
          <source>abstract nothrow int &lt;strong id=&quot;warningCount&quot;&gt;warningCount&lt;/strong&gt;();</source>
          <target state="translated">abstract &lt;strong id=&quot;warningCount&quot;&gt;nothrow&lt;/strong&gt; int &lt;strong id=&quot;warningCount&quot;&gt;warningCount&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="f008dfd494361930bb1e0b013b005d1b2191a7fc" translate="yes" xml:space="preserve">
          <source>abstract nothrow size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt;(size_t s);</source>
          <target state="translated">抽象&lt;strong id=&quot;goodAllocSize&quot;&gt;nothrow&lt;/strong&gt; size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt;（size_t s）;</target>
        </trans-unit>
        <trans-unit id="64e614568397a9f16f71c06efba43163d1b84a93" translate="yes" xml:space="preserve">
          <source>abstract nothrow ubyte[] &lt;strong id=&quot;finish&quot;&gt;finish&lt;/strong&gt;(ubyte[] buf);</source>
          <target state="translated">抽象nothrow ubyte [] &lt;strong id=&quot;finish&quot;&gt;完成&lt;/strong&gt;（ubyte [] buf）;</target>
        </trans-unit>
        <trans-unit id="a8f14d4ef8a4271b6a8f216a4a6cee637a617eb9" translate="yes" xml:space="preserve">
          <source>abstract nothrow void &lt;strong id=&quot;deprecation&quot;&gt;deprecation&lt;/strong&gt;(ref const Loc loc, const(char)* format, va_list args);</source>
          <target state="translated">抽象nothrow void &lt;strong id=&quot;deprecation&quot;&gt;弃用&lt;/strong&gt;（ref const Loc loc，const（char）*格式，va_list args）；</target>
        </trans-unit>
        <trans-unit id="7c4ca06627e61e4041fb2119f0755bd2dbe8c72e" translate="yes" xml:space="preserve">
          <source>abstract nothrow void &lt;strong id=&quot;deprecationSupplemental&quot;&gt;deprecationSupplemental&lt;/strong&gt;(ref const Loc loc, const(char)* format, va_list);</source>
          <target state="translated">抽象nothrow void &lt;strong id=&quot;deprecationSupplemental&quot;&gt;弃用&lt;/strong&gt;补充（ref const Loc loc，const（char）*格式，va_list）;</target>
        </trans-unit>
        <trans-unit id="a8a2cb650960fcb355e62fee2551472cd09471c2" translate="yes" xml:space="preserve">
          <source>abstract nothrow void &lt;strong id=&quot;error&quot;&gt;error&lt;/strong&gt;(ref const Loc loc, const(char)* format, va_list args);</source>
          <target state="translated">抽象的空位无效&lt;strong id=&quot;error&quot;&gt;错误&lt;/strong&gt;（ref const Loc loc，const（char）* format，va_list args）;</target>
        </trans-unit>
        <trans-unit id="953fcfc258a1f2e17925c804f6c75c7e28f536c8" translate="yes" xml:space="preserve">
          <source>abstract nothrow void &lt;strong id=&quot;errorSupplemental&quot;&gt;errorSupplemental&lt;/strong&gt;(ref const Loc loc, const(char)* format, va_list);</source>
          <target state="translated">抽象&lt;strong id=&quot;errorSupplemental&quot;&gt;nothrow&lt;/strong&gt; void &lt;strong id=&quot;errorSupplemental&quot;&gt;错误补充&lt;/strong&gt;（ref const Loc loc，const（char）* format，va_list）;</target>
        </trans-unit>
        <trans-unit id="83b1e781a033f2145a6f0560414778620f1e8b65" translate="yes" xml:space="preserve">
          <source>abstract nothrow void &lt;strong id=&quot;warning&quot;&gt;warning&lt;/strong&gt;(ref const Loc loc, const(char)* format, va_list args);</source>
          <target state="translated">抽象的空位无效&lt;strong id=&quot;warning&quot;&gt;警告&lt;/strong&gt;（ref const Loc loc，const（char）* format，va_list args）;</target>
        </trans-unit>
        <trans-unit id="f9b6bcbbf3ed0a23bc8036487ef0725b5dd511ae" translate="yes" xml:space="preserve">
          <source>abstract nothrow void &lt;strong id=&quot;warningSupplemental&quot;&gt;warningSupplemental&lt;/strong&gt;(ref const Loc loc, const(char)* format, va_list);</source>
          <target state="translated">抽象&lt;strong id=&quot;warningSupplemental&quot;&gt;nothrow&lt;/strong&gt;无效&lt;strong id=&quot;warningSupplemental&quot;&gt;警告补充&lt;/strong&gt;（ref const Loc loc，const（char）*格式，va_list）;</target>
        </trans-unit>
        <trans-unit id="b9b0cb737085475ef9a000316c0a92356d2a06dd" translate="yes" xml:space="preserve">
          <source>abstract nothrow void &lt;strong id=&quot;yield&quot;&gt;yield&lt;/strong&gt;();</source>
          <target state="translated">抽象nothrow void &lt;strong id=&quot;yield&quot;&gt;yield&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="55c1baf7b210b0645d46ed7e9a31d914c3ac84b7" translate="yes" xml:space="preserve">
          <source>abstract nothrow void[] &lt;strong id=&quot;alignedAllocate&quot;&gt;alignedAllocate&lt;/strong&gt;(size_t n, uint a);</source>
          <target state="translated">抽象&lt;strong id=&quot;alignedAllocate&quot;&gt;nothrow&lt;/strong&gt; void [] &lt;strong id=&quot;alignedAllocate&quot;&gt;alignedAllocate&lt;/strong&gt;（size_t n，uint a）;</target>
        </trans-unit>
        <trans-unit id="773db43da85e9e2a1509afb2788ee00a07791816" translate="yes" xml:space="preserve">
          <source>abstract nothrow void[] &lt;strong id=&quot;allocate&quot;&gt;allocate&lt;/strong&gt;(size_t, TypeInfo ti = null);</source>
          <target state="translated">抽象nothrow void [] &lt;strong id=&quot;allocate&quot;&gt;分配&lt;/strong&gt;（size_t，TypeInfo ti = null）;</target>
        </trans-unit>
        <trans-unit id="6ec1ee0a929e80615878c0ae26585d557f4f8c7a" translate="yes" xml:space="preserve">
          <source>abstract nothrow void[] &lt;strong id=&quot;allocateAll&quot;&gt;allocateAll&lt;/strong&gt;();</source>
          <target state="translated">抽象nothrow void [] &lt;strong id=&quot;allocateAll&quot;&gt;allocateAll&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="f84f56ca6a5da43f8c300f0be0a091e7cf175df0" translate="yes" xml:space="preserve">
          <source>abstract pure nothrow @nogc @property @safe sockaddr* &lt;strong id=&quot;name&quot;&gt;name&lt;/strong&gt;();</source>
          <target state="translated">抽象的纯nothrow @nogc @property @safe sockaddr * &lt;strong id=&quot;name&quot;&gt;名称&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="5191c2b295c85c49a53c4ea4934153aa1ec53119" translate="yes" xml:space="preserve">
          <source>abstract pure nothrow @nogc @safe bool &lt;strong id=&quot;decRef&quot;&gt;decRef&lt;/strong&gt;();</source>
          <target state="translated">抽象的纯nothrow @nogc @safe bool &lt;strong id=&quot;decRef&quot;&gt;decRef&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="75d6c2daf504e97823a9213af02c350b108b1042" translate="yes" xml:space="preserve">
          <source>abstract pure nothrow @nogc @safe void &lt;strong id=&quot;incRef&quot;&gt;incRef&lt;/strong&gt;();</source>
          <target state="translated">抽象纯的nothrow @nogc @safe void &lt;strong id=&quot;incRef&quot;&gt;incRef&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="0b22b8685eeeec326764b37d217112c331999e56" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow @property uint &lt;strong id=&quot;alignment&quot;&gt;alignment&lt;/strong&gt;();</source>
          <target state="translated">抽象共享nothrow @property uint &lt;strong id=&quot;alignment&quot;&gt;对齐&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="7fa490cefc6fa349aff28acf40c78a50dc12b009" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow Ternary &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt;();</source>
          <target state="translated">抽象共享nothrow三进制&lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="8c8d7fce3d4fdd74a8e8b1c48fa97adc3688230a" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow Ternary &lt;strong id=&quot;owns&quot;&gt;owns&lt;/strong&gt;(void[] b);</source>
          <target state="translated">三元&lt;strong id=&quot;owns&quot;&gt;拥有的&lt;/strong&gt;抽象共享nothrow （void [] b）;</target>
        </trans-unit>
        <trans-unit id="d4d00d23ab5c52e35b0c61f1cd2971c48eca5753" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow Ternary &lt;strong id=&quot;resolveInternalPointer&quot;&gt;resolveInternalPointer&lt;/strong&gt;(const void* p, ref void[] result);</source>
          <target state="translated">抽象共享的&lt;strong id=&quot;resolveInternalPointer&quot;&gt;nothrow&lt;/strong&gt;三元&lt;strong id=&quot;resolveInternalPointer&quot;&gt;resolveInternalPointer&lt;/strong&gt;（const void * p，ref void [] result）;</target>
        </trans-unit>
        <trans-unit id="6eb8d65a745bf1eff27454c21ecad4e8cb5fa95a" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow bool &lt;strong id=&quot;alignedReallocate&quot;&gt;alignedReallocate&lt;/strong&gt;(ref void[] b, size_t size, uint alignment);</source>
          <target state="translated">抽象共享的&lt;strong id=&quot;alignedReallocate&quot;&gt;nothrow boolalignedReallocate&lt;/strong&gt;（ref void [] b，size_t大小，uint对齐）；</target>
        </trans-unit>
        <trans-unit id="172b3164307331bc0db721464d4e414cc13b6774" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow bool &lt;strong id=&quot;deallocate&quot;&gt;deallocate&lt;/strong&gt;(void[] b);</source>
          <target state="translated">抽象共享nothrow bool &lt;strong id=&quot;deallocate&quot;&gt;释放&lt;/strong&gt;（void [] b）;</target>
        </trans-unit>
        <trans-unit id="577662e3c19f522e0adf2e1a53be6b027e60bf8e" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow bool &lt;strong id=&quot;deallocateAll&quot;&gt;deallocateAll&lt;/strong&gt;();</source>
          <target state="translated">抽象共享nothrow bool &lt;strong id=&quot;deallocateAll&quot;&gt;deallocateAll&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="be3c894bb70613c1f9699c41df295000a24b1fc7" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow bool &lt;strong id=&quot;expand&quot;&gt;expand&lt;/strong&gt;(ref void[], size_t);</source>
          <target state="translated">抽象共享的nothrow bool &lt;strong id=&quot;expand&quot;&gt;expand&lt;/strong&gt;（ref void []，size_t）;</target>
        </trans-unit>
        <trans-unit id="2cf808b65a3b051e6f2fc4296775a0158944ceb2" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow bool &lt;strong id=&quot;reallocate&quot;&gt;reallocate&lt;/strong&gt;(ref void[], size_t);</source>
          <target state="translated">抽象共享的nothrow bool &lt;strong id=&quot;reallocate&quot;&gt;重新分配&lt;/strong&gt;（ref void []，size_t）；</target>
        </trans-unit>
        <trans-unit id="81e4553b43e4822ecc988f56cbfc9eff86215758" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt;(size_t s);</source>
          <target state="translated">抽象共享&lt;strong id=&quot;goodAllocSize&quot;&gt;nothrow&lt;/strong&gt; size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt;（size_t s）;</target>
        </trans-unit>
        <trans-unit id="286a2c08b387f4af1005a7dc380c33c80d84d314" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow void[] &lt;strong id=&quot;alignedAllocate&quot;&gt;alignedAllocate&lt;/strong&gt;(size_t n, uint a);</source>
          <target state="translated">抽象共享的&lt;strong id=&quot;alignedAllocate&quot;&gt;nothrow&lt;/strong&gt; void [] &lt;strong id=&quot;alignedAllocate&quot;&gt;alignedAllocate&lt;/strong&gt;（size_t n，uint a）;</target>
        </trans-unit>
        <trans-unit id="7d244b2f152c02faa70d2001505da7efe927e999" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow void[] &lt;strong id=&quot;allocate&quot;&gt;allocate&lt;/strong&gt;(size_t, TypeInfo ti = null);</source>
          <target state="translated">抽象共享的nothrow void [] &lt;strong id=&quot;allocate&quot;&gt;分配&lt;/strong&gt;（size_t，TypeInfo ti = null）;</target>
        </trans-unit>
        <trans-unit id="ef6badfeb6de9fcd4dd428e938ede9f826cc6ce0" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow void[] &lt;strong id=&quot;allocateAll&quot;&gt;allocateAll&lt;/strong&gt;();</source>
          <target state="translated">抽象共享nothrow void [] &lt;strong id=&quot;allocateAll&quot;&gt;allocateAll&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="d4e3317aa8e2c0ecc28ec0ee7339b747ef883c11" translate="yes" xml:space="preserve">
          <source>abstract shared pure nothrow @nogc @safe bool &lt;strong id=&quot;decRef&quot;&gt;decRef&lt;/strong&gt;();</source>
          <target state="translated">抽象共享纯nothrow @nogc @safe bool &lt;strong id=&quot;decRef&quot;&gt;decRef&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="d1f1aa61fb59b47104b429cd0fcd5b88a5671c5f" translate="yes" xml:space="preserve">
          <source>abstract shared pure nothrow @nogc @safe void &lt;strong id=&quot;incRef&quot;&gt;incRef&lt;/strong&gt;();</source>
          <target state="translated">抽象共享纯nothrow @nogc @safe void &lt;strong id=&quot;incRef&quot;&gt;incRef&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="c158996e5263cf637b358325686e957d675eb2ed" translate="yes" xml:space="preserve">
          <source>abstract void &lt;strong id=&quot;accept&quot;&gt;accept&lt;/strong&gt;(Visitor v);</source>
          <target state="translated">抽象无效&lt;strong id=&quot;accept&quot;&gt;接受&lt;/strong&gt;（访问者v）；</target>
        </trans-unit>
        <trans-unit id="2fce188a4c9da388b1b55082adfa8c961b784050" translate="yes" xml:space="preserve">
          <source>abstract void &lt;strong id=&quot;spawn&quot;&gt;spawn&lt;/strong&gt;(void delegate() op);</source>
          <target state="translated">抽象的void &lt;strong id=&quot;spawn&quot;&gt;生成&lt;/strong&gt;（void proxy（）op）;</target>
        </trans-unit>
        <trans-unit id="4f0fe392414368b23e4ca3d33af54dbe50a1d98f" translate="yes" xml:space="preserve">
          <source>abstract void &lt;strong id=&quot;start&quot;&gt;start&lt;/strong&gt;(void delegate() op);</source>
          <target state="translated">抽象void &lt;strong id=&quot;start&quot;&gt;开始&lt;/strong&gt;（void委托（）op）；</target>
        </trans-unit>
        <trans-unit id="15c093e9b3ea5895886f4007a3b8c726b27dbd9b" translate="yes" xml:space="preserve">
          <source>accept separator characters or not</source>
          <target state="translated">是否接受分隔符</target>
        </trans-unit>
        <trans-unit id="dd82f36c8279769497a226012c721f4fe55f6237" translate="yes" xml:space="preserve">
          <source>access mode defined above.</source>
          <target state="translated">上面定义的访问模式。</target>
        </trans-unit>
        <trans-unit id="3c2311736b395b779b842a7b7a96ed5a1f4b0c93" translate="yes" xml:space="preserve">
          <source>access.d</source>
          <target state="translated">access.d</target>
        </trans-unit>
        <trans-unit id="c854e7342897099cc5d681d6545d8ddd8dfd14ae" translate="yes" xml:space="preserve">
          <source>acos(x)</source>
          <target state="translated">acos(x)</target>
        </trans-unit>
        <trans-unit id="572f358ec01da12611b4426c46482d86677aa2ea" translate="yes" xml:space="preserve">
          <source>acosh(x)</source>
          <target state="translated">acosh(x)</target>
        </trans-unit>
        <trans-unit id="3ff03dd719c7d132069786e1f6d667bed743bb1b" translate="yes" xml:space="preserve">
          <source>act result</source>
          <target state="translated">作用结果</target>
        </trans-unit>
        <trans-unit id="8e6d7797ae2ce7e078c20281527439a5e6c3ba4e" translate="yes" xml:space="preserve">
          <source>actually an OpenSSL SSL_CTX</source>
          <target state="translated">实际上是一个OpenSSL SSL_CTX</target>
        </trans-unit>
        <trans-unit id="75adfe4c00460f712e62051da535436093d88ab4" translate="yes" xml:space="preserve">
          <source>ad aggregate with the invariant vthis variable with 'this'</source>
          <target state="translated">广告聚合,用'this'作为不变式vthis变量。</target>
        </trans-unit>
        <trans-unit id="c3c09d3f7ae734026e9b4c851dec727884c99bd3" translate="yes" xml:space="preserve">
          <source>add a root where a pointer to the object is stored using core.memory.GC.addRoot() or core.memory.GC.addRange().</source>
          <target state="translated">使用core.memory.GC.addRoot()或core.memory.GC.addRange()添加一个存放对象指针的根。</target>
        </trans-unit>
        <trans-unit id="480740162b7d8663fa92db29cad733476efc3e9d" translate="yes" xml:space="preserve">
          <source>add a standard curl handle to the multi stack</source>
          <target state="translated">在多栈中添加一个标准的卷曲手柄。</target>
        </trans-unit>
        <trans-unit id="3c58f0ca7b97197d529d2cc9a31562e3ea91ba4f" translate="yes" xml:space="preserve">
          <source>add terminating 0</source>
          <target state="translated">加上终止符0</target>
        </trans-unit>
        <trans-unit id="f0b01fbc8d31bfe16b50470019d2118ee3b2eafa" translate="yes" xml:space="preserve">
          <source>added in 7.10</source>
          <target state="translated">7.10月增加</target>
        </trans-unit>
        <trans-unit id="3f869431e3796d025d9b5bf8d0180b0416cb9c74" translate="yes" xml:space="preserve">
          <source>added in 7.10, new in 7.19.4 default is to use CONNECT HTTP/1.1</source>
          <target state="translated">在7.10中添加,在7.19.4中新增,默认使用CONNECT HTTP/1.1。</target>
        </trans-unit>
        <trans-unit id="8379149f4a61f047d1ac288baf16003208ad98c7" translate="yes" xml:space="preserve">
          <source>added in 7.18.0</source>
          <target state="translated">在7.18.0中添加</target>
        </trans-unit>
        <trans-unit id="ccde6fbd330c9dfc0f65870905bf0bc35a4fdd16" translate="yes" xml:space="preserve">
          <source>added in 7.19.4, force to use CONNECT HTTP/1.0</source>
          <target state="translated">在7.19.4中增加了,强制使用CONNECT HTTP/1.0。</target>
        </trans-unit>
        <trans-unit id="07bb8f2a1713eda2b64e7bc1c1eac81b5f0651ba" translate="yes" xml:space="preserve">
          <source>additional message prefix</source>
          <target state="translated">附加信息前缀</target>
        </trans-unit>
        <trans-unit id="f1a7e1fb3467870775548603723fe843b49f7790" translate="yes" xml:space="preserve">
          <source>address of a module's &lt;code&gt;const(MemberInfo)[] getMembers(string)&lt;/code&gt; function, &lt;code&gt;null&lt;/code&gt; if there isn't one</source>
          <target state="translated">模块的 &lt;code&gt;const(MemberInfo)[] getMembers(string)&lt;/code&gt; 函数的地址，如果不存在，则为 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="309cbf6efe7a5f366fe768c4e701fc3ec86f5ad7" translate="yes" xml:space="preserve">
          <source>address of function that runs the module's unittests, &lt;code&gt;null&lt;/code&gt; if there isn't one</source>
          <target state="translated">运行模块的单元测试的函数的地址，如果没有，则为 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eb12daa81a63939b6aa34dacd341e252df41f3d1" translate="yes" xml:space="preserve">
          <source>address range of a code segment.</source>
          <target state="translated">代码段的地址范围。</target>
        </trans-unit>
        <trans-unit id="7c6a5cc8945241af7b164bb1ebcd23ef262fd3f9" translate="yes" xml:space="preserve">
          <source>address to be prefetched</source>
          <target state="translated">要预传的地址</target>
        </trans-unit>
        <trans-unit id="427b037d57302700b1f24e30efda53586a8a7b2a" translate="yes" xml:space="preserve">
          <source>address to store error message, or null</source>
          <target state="translated">存储错误信息的地址,或为空</target>
        </trans-unit>
        <trans-unit id="d14c87a05c28dcaf4160f1bc040d60e8fcbd808d" translate="yes" xml:space="preserve">
          <source>addrlen was a socklen_t type before 7.18.0 but it turned really ugly and painful on the systems that lack this type</source>
          <target state="translated">在7.18.0之前,addrlen是一个socklen_t类型,但在缺乏这个类型的系统上,它变得非常丑陋和痛苦。</target>
        </trans-unit>
        <trans-unit id="53504064b52d1ad530ff07212732650222614ede" translate="yes" xml:space="preserve">
          <source>ae, or ErrorExp if errors occurred</source>
          <target state="translated">ae,如果发生错误,则为ErrorExp</target>
        </trans-unit>
        <trans-unit id="3fcb3775702bb9a6593546d016353c5e45ff4cc7" translate="yes" xml:space="preserve">
          <source>after the optional &lt;code&gt;else&lt;/code&gt; is compiled in.</source>
          <target state="translated">在可选的 &lt;code&gt;else&lt;/code&gt; 被编译之后。</target>
        </trans-unit>
        <trans-unit id="d42c6e7cc5ed1af7b62e3b180053a9c0366852ee" translate="yes" xml:space="preserve">
          <source>age of the returned struct</source>
          <target state="translated">返回结构的年龄</target>
        </trans-unit>
        <trans-unit id="401e2d68a79243739d57ba3ead37788bd8b33ba0" translate="yes" xml:space="preserve">
          <source>aggregate object that should be destroyed</source>
          <target state="translated">销毁对象</target>
        </trans-unit>
        <trans-unit id="e2de68bd1e10225e43cbe7f9474f53da79419131" translate="yes" xml:space="preserve">
          <source>aggregate.d</source>
          <target state="translated">aggregate.d</target>
        </trans-unit>
        <trans-unit id="cdb6fdbe91faa53a7c573c80b7c18108c73c0480" translate="yes" xml:space="preserve">
          <source>alias</source>
          <target state="translated">alias</target>
        </trans-unit>
        <trans-unit id="5c69cbf2101b5e31d8dd94771eda6ce48457b09a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;AllocateGC&quot;&gt;AllocateGC&lt;/strong&gt; = std.typecons.Flag!&quot;allocateGC&quot;.Flag;</source>
          <target state="translated">别名&lt;strong id=&quot;AllocateGC&quot;&gt;AllocateGC&lt;/strong&gt; = std.typecons.Flag！&amp;ldquo; allocateGC&amp;rdquo; .Flag;</target>
        </trans-unit>
        <trans-unit id="0f1384017b2db76b8e6dbcaca4430216bc96a57e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Allocator&quot;&gt;Allocator&lt;/strong&gt; = typeof(Factory.init(1));</source>
          <target state="translated">别名&lt;strong id=&quot;Allocator&quot;&gt;分配器&lt;/strong&gt; = typeof（Factory.init（1））;</target>
        </trans-unit>
        <trans-unit id="51eceb63f918c26f2f860b9f02135e245ec51938" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;AllowDayOverflow&quot;&gt;AllowDayOverflow&lt;/strong&gt; = std.typecons.Flag!&quot;allowDayOverflow&quot;.Flag;</source>
          <target state="translated">别名&lt;strong id=&quot;AllowDayOverflow&quot;&gt;AllowDayOverflow&lt;/strong&gt; = std.typecons.Flag！&amp;ldquo; allowDayOverflow&amp;rdquo; .Flag;</target>
        </trans-unit>
        <trans-unit id="c6117121e2f0a186d7fea61c0a407f6b41efb166" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;AllowedTypes&quot;&gt;AllowedTypes&lt;/strong&gt; = This2Variant!(VariantN, AllowedTypesParam);</source>
          <target state="translated">别名&lt;strong id=&quot;AllowedTypes&quot;&gt;AllowedTypes&lt;/strong&gt; = This2Variant！（VariantN，AllowedTypesParam）;</target>
        </trans-unit>
        <trans-unit id="a6c10e3c6bc0a1d1f1ff6bec39e36250f0832a10" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;AsciiString&quot;&gt;AsciiString&lt;/strong&gt; = immutable(AsciiChar)[];</source>
          <target state="translated">别名&lt;strong id=&quot;AsciiString&quot;&gt;AsciiString&lt;/strong&gt; = immutable（AsciiChar）[];</target>
        </trans-unit>
        <trans-unit id="4552953b6577669e6d8e4e679c31b8f9d2f34971" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;AssertHandler&quot;&gt;AssertHandler&lt;/strong&gt; = void function(string file, ulong line, string msg) nothrow;</source>
          <target state="translated">别名&lt;strong id=&quot;AssertHandler&quot;&gt;AssertHandler&lt;/strong&gt; = void function（字符串文件，ulong行，字符串msg）nothrow;</target>
        </trans-unit>
        <trans-unit id="3b6c543bddb447158a3195ca9a0fe5d37dbfce28" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;AuthMethod&quot;&gt;AuthMethod&lt;/strong&gt; = etc.c.curl.CurlAuth;</source>
          <target state="translated">别名&lt;strong id=&quot;AuthMethod&quot;&gt;AuthMethod&lt;/strong&gt; = etc.c.curl.CurlAuth;</target>
        </trans-unit>
        <trans-unit id="136c22f9b9d295a4a0203d83b60b15db381fa367" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;AutoStart&quot;&gt;AutoStart&lt;/strong&gt; = std.typecons.Flag!&quot;autoStart&quot;.Flag;</source>
          <target state="translated">别名&lt;strong id=&quot;AutoStart&quot;&gt;AutoStart&lt;/strong&gt; = std.typecons.Flag！&amp;ldquo; autoStart&amp;rdquo; .Flag;</target>
        </trans-unit>
        <trans-unit id="366d804a81d2cc2014441c6698fddcebc2469561" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;BC&quot;&gt;BC&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;BC&quot;&gt;BC&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="109ae4b1be9cf2e5f402ea2203ac9956dffdd304" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;BOMSeq&quot;&gt;BOMSeq&lt;/strong&gt; = std.typecons.Tuple!(BOM, &quot;schema&quot;, ubyte[], &quot;sequence&quot;).Tuple;</source>
          <target state="translated">别名&lt;strong id=&quot;BOMSeq&quot;&gt;BOMSeq&lt;/strong&gt; = std.typecons.Tuple！（BOM，&amp;ldquo;模式&amp;rdquo;，ubyte []，&amp;ldquo;序列&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="71dfab7efd0d74d86e57974d10caaa37d023b8a3" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Base64&quot;&gt;Base64&lt;/strong&gt; = Base64Impl!('+', '/', '=');</source>
          <target state="translated">别名&lt;strong id=&quot;Base64&quot;&gt;Base64&lt;/strong&gt; = Base64Impl！（'+'，'/'，'='）;</target>
        </trans-unit>
        <trans-unit id="e915b7fec4e5fed0843eb13a9173ca0733d62721" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Base64URL&quot;&gt;Base64URL&lt;/strong&gt; = Base64Impl!('-', '_', '=');</source>
          <target state="translated">别名&lt;strong id=&quot;Base64URL&quot;&gt;Base64URL&lt;/strong&gt; = Base64Impl！（'-'，'_'，'='）;</target>
        </trans-unit>
        <trans-unit id="a1c434286a3e66c884935196e9ff7e35bda813de" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Base64URLNoPadding&quot;&gt;Base64URLNoPadding&lt;/strong&gt; = Base64Impl!('-', '_', '\x00');</source>
          <target state="translated">别名&lt;strong id=&quot;Base64URLNoPadding&quot;&gt;Base64URLNoPadding&lt;/strong&gt; = Base64Impl！（'-'，'_'，'\ x00'）;</target>
        </trans-unit>
        <trans-unit id="5e0aea131e6c2b6185d29d987b22ba419abc771b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;BlkInfo&quot;&gt;BlkInfo&lt;/strong&gt; = .BlkInfo_;</source>
          <target state="translated">别名&lt;strong id=&quot;BlkInfo&quot;&gt;BlkInfo&lt;/strong&gt; = .BlkInfo_;</target>
        </trans-unit>
        <trans-unit id="e982568e8b8366c4d1e542de1ae1dd43ebb802ec" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CRC32&quot;&gt;CRC32&lt;/strong&gt; = CRC!(32u, 3988292384LU).CRC;</source>
          <target state="translated">别名&lt;strong id=&quot;CRC32&quot;&gt;CRC32&lt;/strong&gt; = CRC！（32u，3988292384LU）.CRC;</target>
        </trans-unit>
        <trans-unit id="c5562bf79a732ea45f5bacef87c682a52fc01ac6" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CRC32Digest&quot;&gt;CRC32Digest&lt;/strong&gt; = std.digest.WrapperDigest!(CRC!(32u, 3988292384LU)).WrapperDigest;</source>
          <target state="translated">别名&lt;strong id=&quot;CRC32Digest&quot;&gt;CRC32Digest&lt;/strong&gt; = std.digest.WrapperDigest！（CRC！（32u，3988292384LU））。WrapperDigest;</target>
        </trans-unit>
        <trans-unit id="b0dc1a407e133f2abf7b7389d911d48c159502b9" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CRC64ECMA&quot;&gt;CRC64ECMA&lt;/strong&gt; = CRC!(64u, 14514072000185962306LU).CRC;</source>
          <target state="translated">别名&lt;strong id=&quot;CRC64ECMA&quot;&gt;CRC64ECMA&lt;/strong&gt; = CRC！（64u，14514072000185962306LU）.CRC;</target>
        </trans-unit>
        <trans-unit id="b0f7180627d8ecc5b955b40ed663c5e00511d193" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CRC64ECMADigest&quot;&gt;CRC64ECMADigest&lt;/strong&gt; = std.digest.WrapperDigest!(CRC!(64u, 14514072000185962306LU)).WrapperDigest;</source>
          <target state="translated">别名&lt;strong id=&quot;CRC64ECMADigest&quot;&gt;CRC64ECMADigest&lt;/strong&gt; = std.digest.WrapperDigest！（CRC！（64u，14514072000185962306LU））。WrapperDigest;</target>
        </trans-unit>
        <trans-unit id="d5b3a5fe39e17abf876214d0378f042f0dcf15fc" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CRC64ISO&quot;&gt;CRC64ISO&lt;/strong&gt; = CRC!(64u, 15564440312192434176LU).CRC;</source>
          <target state="translated">别名&lt;strong id=&quot;CRC64ISO&quot;&gt;CRC64ISO&lt;/strong&gt; = CRC！（64u，15564440312192434176LU）.CRC;</target>
        </trans-unit>
        <trans-unit id="0357ac08a8f82faf8e3edd92076e1f9d05285737" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CRC64ISODigest&quot;&gt;CRC64ISODigest&lt;/strong&gt; = std.digest.WrapperDigest!(CRC!(64u, 15564440312192434176LU)).WrapperDigest;</source>
          <target state="translated">别名&lt;strong id=&quot;CRC64ISODigest&quot;&gt;CRC64ISODigest&lt;/strong&gt; = std.digest.WrapperDigest！（CRC！（64u，15564440312192434176LU））。WrapperDigest;</target>
        </trans-unit>
        <trans-unit id="0f1448f8f9b87c6f30dba37e4042754bc3a6ed19" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURL&quot;&gt;CURL&lt;/strong&gt; = void;</source>
          <target state="translated">别名&lt;strong id=&quot;CURL&quot;&gt;CURL&lt;/strong&gt; = void;</target>
        </trans-unit>
        <trans-unit id="966a04852330b1b1cb2e76ee0334e539669ab654" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLFORMcode&quot;&gt;CURLFORMcode&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;CURLFORMcode&quot;&gt;CURLFORMcode&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="652c2d4aab0d84b3e534062870328a79b0ae4a56" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLINFO&quot;&gt;CURLINFO&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;CURLINFO&quot;&gt;CURLINFO&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="ca6aec3f85b1cca661f3bc6ffa4541800408df08" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLM&quot;&gt;CURLM&lt;/strong&gt; = void;</source>
          <target state="translated">别名&lt;strong id=&quot;CURLM&quot;&gt;CURLM&lt;/strong&gt; = void;</target>
        </trans-unit>
        <trans-unit id="f478ce0aa30cb8112c24da3b81f7dfff32f1078e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLMSG&quot;&gt;CURLMSG&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;CURLMSG&quot;&gt;CURLMSG&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="9313e5b8be7ba935a145f521a56b0f6c3be75766" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLMcode&quot;&gt;CURLMcode&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;CURLMcode&quot;&gt;CURLMcode&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="744644df0b7137bafa2f8f0ad370f8a381ff7111" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLMoption&quot;&gt;CURLMoption&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;CURLMoption&quot;&gt;CURLMoption&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="0b0aea0ebbbeb4eacf77ee0fed4dcb2ef4cefb6d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLSH&quot;&gt;CURLSH&lt;/strong&gt; = void;</source>
          <target state="translated">别名&lt;strong id=&quot;CURLSH&quot;&gt;CURLSH&lt;/strong&gt; = void;</target>
        </trans-unit>
        <trans-unit id="828faef142c18fe1bbf8624be0f5ca1c30a21579" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLSHcode&quot;&gt;CURLSHcode&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;CURLSHcode&quot;&gt;CURLSHcode&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="3fd6606ab1fc09078c162325e0db7acaa1720f06" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLSHoption&quot;&gt;CURLSHoption&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;CURLSHoption&quot;&gt;CURLSHoption&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="bee61d2790cf5b59bf08c583d689695cb51ed39c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURL_SOCKET_TIMEOUT&quot;&gt;CURL_SOCKET_TIMEOUT&lt;/strong&gt; = CURL_SOCKET_BAD;</source>
          <target state="translated">别名&lt;strong id=&quot;CURL_SOCKET_TIMEOUT&quot;&gt;CURL_SOCKET_TIMEOUT&lt;/strong&gt; = CURL_SOCKET_BAD;</target>
        </trans-unit>
        <trans-unit id="278074d4f088cc5174f3edc0e29586918898ea85" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLcode&quot;&gt;CURLcode&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;CURLcode&quot;&gt;CURLcode&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="0ef665c371e21228b752948c3048b6092d18842a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLoption&quot;&gt;CURLoption&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;CURLoption&quot;&gt;CURLoption&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="9a6a37101a378795fff25d58442a41e62b0ff316" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLversion&quot;&gt;CURLversion&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;CURLversion&quot;&gt;CURLversion&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="43808d3e34b17ca85b402dbb638519917a894cb0" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CaseSensitive&quot;&gt;CaseSensitive&lt;/strong&gt; = std.typecons.Flag!&quot;caseSensitive&quot;.Flag;</source>
          <target state="translated">别名&lt;strong id=&quot;CaseSensitive&quot;&gt;CaseSensitive&lt;/strong&gt; = std.typecons.Flag！&amp;ldquo; caseSensitive&amp;rdquo; .Flag;</target>
        </trans-unit>
        <trans-unit id="b4eb901fa05a3be796a0cf5c4799366280b8d056" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CheckDns&quot;&gt;CheckDns&lt;/strong&gt; = std.typecons.Flag!&quot;checkDns&quot;.Flag;</source>
          <target state="translated">别名&lt;strong id=&quot;CheckDns&quot;&gt;CheckDns&lt;/strong&gt; = std.typecons.Flag！&amp;ldquo; checkDns&amp;rdquo; .Flag;</target>
        </trans-unit>
        <trans-unit id="c986682a26c64c3e9dbab299c77169ad56d30069" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ClassDeclaration_&quot;&gt;ClassDeclaration_&lt;/strong&gt; = void*;</source>
          <target state="translated">别名&lt;strong id=&quot;ClassDeclaration_&quot;&gt;ClassDeclaration_&lt;/strong&gt; = void *;</target>
        </trans-unit>
        <trans-unit id="33117c2d5a87fda6201623a5437bdb6dcbde64f8" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CodepointSet&quot;&gt;CodepointSet&lt;/strong&gt; = InversionList!(GcPolicy).InversionList;</source>
          <target state="translated">别名&lt;strong id=&quot;CodepointSet&quot;&gt;CodepointSet&lt;/strong&gt; = InversionList（将gcpolicy）.InversionList！;</target>
        </trans-unit>
        <trans-unit id="f508ca1b9a7da7485846f7fcd6adb0ea31d1c92c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ConstRange&quot;&gt;ConstRange&lt;/strong&gt; = RBRange!(const(RBNode)*);</source>
          <target state="translated">别名&lt;strong id=&quot;ConstRange&quot;&gt;ConstRange&lt;/strong&gt; = RBRange！（const（RBNode）*）;</target>
        </trans-unit>
        <trans-unit id="06d5acafb4e7407c29de0b70dbf56e268bc6bccc" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ConstRange&quot;&gt;ConstRange&lt;/strong&gt; = RangeT!(const(Array));</source>
          <target state="translated">别名&lt;strong id=&quot;ConstRange&quot;&gt;ConstRange&lt;/strong&gt; = RangeT！（const（Array））;</target>
        </trans-unit>
        <trans-unit id="df21137410819c4a39438ff651d33c6bbd8befe8" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CreateFolder&quot;&gt;CreateFolder&lt;/strong&gt; = std.typecons.Flag!&quot;&lt;strong id=&quot;CreateFolder&quot;&gt;CreateFolder&lt;/strong&gt;&quot;.Flag;</source>
          <target state="translated">别名&lt;strong id=&quot;CreateFolder&quot;&gt;CreateFolder&lt;/strong&gt; = std.typecons.Flag！&amp;ldquo; &lt;strong id=&quot;CreateFolder&quot;&gt;CreateFolder&lt;/strong&gt; &amp;rdquo; .Flag;</target>
        </trans-unit>
        <trans-unit id="e19fa90a591fce0186b9e006303938d8cd29936a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CurlCode&quot;&gt;CurlCode&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;CurlCode&quot;&gt;CurlCode&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="16039bb1cbbcf4bb410adef18c14ceb9de6265b4" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CurlProxy&quot;&gt;CurlProxy&lt;/strong&gt; = etc.c.curl.&lt;strong id=&quot;CurlProxy&quot;&gt;CurlProxy&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;CurlProxy&quot;&gt;CurlProxy&lt;/strong&gt; = etc.c.curl。&lt;strong id=&quot;CurlProxy&quot;&gt;CurlProxy&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="568d17d4cfdd25bd4ad0b2b12e408c3d0f7f9ff6" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;DateTimeException&quot;&gt;DateTimeException&lt;/strong&gt; = core.time.TimeException;</source>
          <target state="translated">别名&lt;strong id=&quot;DateTimeException&quot;&gt;DateTimeException&lt;/strong&gt; = core.time.TimeException;</target>
        </trans-unit>
        <trans-unit id="20e47686ffb05231fce8ce448dadf1c4bdc7ff0e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;DosFileTime&quot;&gt;DosFileTime&lt;/strong&gt; = uint;</source>
          <target state="translated">别名&lt;strong id=&quot;DosFileTime&quot;&gt;DosFileTime&lt;/strong&gt; = uint;</target>
        </trans-unit>
        <trans-unit id="30601f503b93ed109c6af8d5939e449f24092bc5" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Elem&quot;&gt;Elem&lt;/strong&gt; = T;</source>
          <target state="translated">别名&lt;strong id=&quot;Elem&quot;&gt;Elem&lt;/strong&gt; = T;</target>
        </trans-unit>
        <trans-unit id="d7a024ca89d80a0ec754ae7bec15230f24527001" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Element&quot;&gt;Element&lt;/strong&gt; = uint;</source>
          <target state="translated">别名&lt;strong id=&quot;Element&quot;&gt;元素&lt;/strong&gt; = uint;</target>
        </trans-unit>
        <trans-unit id="585f4f639534371feba0c422f3992b968c674e12" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Elf64_Addr&quot;&gt;Elf64_Addr&lt;/strong&gt; = ulong;</source>
          <target state="translated">别名&lt;strong id=&quot;Elf64_Addr&quot;&gt;Elf64_Addr&lt;/strong&gt; = ulong;</target>
        </trans-unit>
        <trans-unit id="c6d3c2ed45e3be69108685725fb0cb1f9cdb9f9c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ExceptionMask&quot;&gt;ExceptionMask&lt;/strong&gt; = uint;</source>
          <target state="translated">别名&lt;strong id=&quot;ExceptionMask&quot;&gt;ExceptionMask&lt;/strong&gt; = uint;</target>
        </trans-unit>
        <trans-unit id="10b9f21c880baf6866f47c53cfcbbab861ec101c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ExtendedModuleUnitTester&quot;&gt;ExtendedModuleUnitTester&lt;/strong&gt; = UnitTestResult function();</source>
          <target state="translated">别名&lt;strong id=&quot;ExtendedModuleUnitTester&quot;&gt;ExtendedModuleUnitTester&lt;/strong&gt; = UnitTestResult function（）;</target>
        </trans-unit>
        <trans-unit id="205955d5b4a35a9b23cc68f1f0e1cb199ee0d1e6" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;FILE&quot;&gt;FILE&lt;/strong&gt; = _IO_FILE;</source>
          <target state="translated">别名&lt;strong id=&quot;FILE&quot;&gt;文件&lt;/strong&gt; = _IO_FILE;</target>
        </trans-unit>
        <trans-unit id="e6c0f768d495460002889928acd29f5d658d7270" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;FL&quot;&gt;FL&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;FL&quot;&gt;FL&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="417524eabdf4858e02bd33d2414ef0c926fe41f6" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;FP_ILOGB0&quot;&gt;FP_ILOGB0&lt;/strong&gt; = core.stdc.math.&lt;strong id=&quot;FP_ILOGB0&quot;&gt;FP_ILOGB0&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;FP_ILOGB0&quot;&gt;FP_ILOGB0&lt;/strong&gt; = core.stdc.math。&lt;strong id=&quot;FP_ILOGB0&quot;&gt;FP_ILOGB0&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="8a88106b406e76b3acb4a345116637b6f85af776" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;FP_ILOGBNAN&quot;&gt;FP_ILOGBNAN&lt;/strong&gt; = core.stdc.math.&lt;strong id=&quot;FP_ILOGBNAN&quot;&gt;FP_ILOGBNAN&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;FP_ILOGBNAN&quot;&gt;FP_ILOGBNAN&lt;/strong&gt; = core.stdc.math。&lt;strong id=&quot;FP_ILOGBNAN&quot;&gt;FP_ILOGBNAN&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="adf01f14a2f2cf7ec7f8e9c82093f8c5ea95b92c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;FUNCTIONPOINT&quot;&gt;FUNCTIONPOINT&lt;/strong&gt; = CURLOPTTYPE_FUNCTIONPOINT;</source>
          <target state="translated">别名&lt;strong id=&quot;FUNCTIONPOINT&quot;&gt;FUNCTIONPOINT&lt;/strong&gt; = CURLOPTTYPE_FUNCTIONPOINT;</target>
        </trans-unit>
        <trans-unit id="4dac6eb78990d1ff9de2cacc528665dc43262505" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;FieldTypeTuple&quot;&gt;FieldTypeTuple&lt;/strong&gt; = Fields(T);</source>
          <target state="translated">别名&lt;strong id=&quot;FieldTypeTuple&quot;&gt;FieldTypeTuple&lt;/strong&gt; = Fields（T）;</target>
        </trans-unit>
        <trans-unit id="194c7b6dadbb9ed50b19260b1bea6cf1cb0c64a2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;GCFactory&quot;&gt;GCFactory&lt;/strong&gt; = GC function();</source>
          <target state="translated">别名&lt;strong id=&quot;GCFactory&quot;&gt;GCFactory&lt;/strong&gt; = GC function（）;</target>
        </trans-unit>
        <trans-unit id="7f59fac0bca7f5e885a4ba1efc923ff555a54434" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;INT16_C&quot;&gt;INT16_C&lt;/strong&gt; = _typify!short._typify;</source>
          <target state="translated">别名&lt;strong id=&quot;INT16_C&quot;&gt;INT16_C&lt;/strong&gt; = _typify！short._typify;</target>
        </trans-unit>
        <trans-unit id="ac47bfab576eea1670d347dad7f45928ed95b138" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;INT32_C&quot;&gt;INT32_C&lt;/strong&gt; = _typify!int._typify;</source>
          <target state="translated">别名&lt;strong id=&quot;INT32_C&quot;&gt;INT32_C&lt;/strong&gt; = _typify！int._typify;</target>
        </trans-unit>
        <trans-unit id="9b961e8b9f0d9f086f0cb15e75f37471fe7216a5" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;INT64_C&quot;&gt;INT64_C&lt;/strong&gt; = _typify!long._typify;</source>
          <target state="translated">别名&lt;strong id=&quot;INT64_C&quot;&gt;INT64_C&lt;/strong&gt; = _typify！long._typify;</target>
        </trans-unit>
        <trans-unit id="a3dcc9b8348d68125565dd89f1f552e714998456" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;INT8_C&quot;&gt;INT8_C&lt;/strong&gt; = _typify!byte._typify;</source>
          <target state="translated">别名&lt;strong id=&quot;INT8_C&quot;&gt;INT8_C&lt;/strong&gt; = _typify！byte._typify;</target>
        </trans-unit>
        <trans-unit id="0598e95dbe8c7a647498e5ad3c7103cf7756ff62" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;INTMAX_C&quot;&gt;INTMAX_C&lt;/strong&gt; = _typify!long._typify;</source>
          <target state="translated">别名&lt;strong id=&quot;INTMAX_C&quot;&gt;INTMAX_C&lt;/strong&gt; = _typify！long._typify;</target>
        </trans-unit>
        <trans-unit id="c06a45278f529bcd4312420bdfa5cbcfec5a9f6e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ImmutableRange&quot;&gt;ImmutableRange&lt;/strong&gt; = RBRange!(immutable(RBNode)*);</source>
          <target state="translated">别名&lt;strong id=&quot;ImmutableRange&quot;&gt;ImmutableRange&lt;/strong&gt; = RBRange！（immutable（RBNode）*）;</target>
        </trans-unit>
        <trans-unit id="5cfa3534249b3edbc71e16caf2dae764a6914002" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ImmutableRange&quot;&gt;ImmutableRange&lt;/strong&gt; = RangeT!(immutable(Array));</source>
          <target state="translated">别名&lt;strong id=&quot;ImmutableRange&quot;&gt;ImmutableRange&lt;/strong&gt; = RangeT！（immutable（Array））;</target>
        </trans-unit>
        <trans-unit id="0c590d2b82800774c4153178b12ab7cb0a1d9103" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;IsMarkedDg&quot;&gt;IsMarkedDg&lt;/strong&gt; = int delegate(void* addr) nothrow;</source>
          <target state="translated">别名&lt;strong id=&quot;IsMarkedDg&quot;&gt;IsMarkedDg&lt;/strong&gt; = int委托（void * addr）nothrow;</target>
        </trans-unit>
        <trans-unit id="0bb78e2a6e10a581fa50121298d2dc42cb97d40a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;KeepTerminator&quot;&gt;KeepTerminator&lt;/strong&gt; = std.typecons.Flag!&quot;keepTerminator&quot;.Flag;</source>
          <target state="translated">别名&lt;strong id=&quot;KeepTerminator&quot;&gt;KeepTerminator&lt;/strong&gt; = std.typecons.Flag！&amp;ldquo; keepTerminator&amp;rdquo; .Flag;</target>
        </trans-unit>
        <trans-unit id="514c554ea0cf9c21885e9ad7ad66b1196e27d15a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;LONG&quot;&gt;LONG&lt;/strong&gt; = CURLOPTTYPE_LONG;</source>
          <target state="translated">别名&lt;strong id=&quot;LONG&quot;&gt;LONG&lt;/strong&gt; = CURLOPTTYPE_LONG;</target>
        </trans-unit>
        <trans-unit id="79f5e1bc6bac448e4f0053160a51712124b167a7" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Latin1String&quot;&gt;Latin1String&lt;/strong&gt; = immutable(Latin1Char)[];</source>
          <target state="translated">别名&lt;strong id=&quot;Latin1String&quot;&gt;Latin1String&lt;/strong&gt; = immutable（Latin1Char）[];</target>
        </trans-unit>
        <trans-unit id="c12966e74c11e99604171e425127feed3900a595" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Latin2String&quot;&gt;Latin2String&lt;/strong&gt; = immutable(Latin2Char)[];</source>
          <target state="translated">别名&lt;strong id=&quot;Latin2String&quot;&gt;Latin2String&lt;/strong&gt; = immutable（Latin2Char）[];</target>
        </trans-unit>
        <trans-unit id="00866f41663f0f1ecfbcc6f08cbff2d7f6c35728" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;MD5Digest&quot;&gt;MD5Digest&lt;/strong&gt; = std.digest.WrapperDigest!(MD5).WrapperDigest;</source>
          <target state="translated">别名&lt;strong id=&quot;MD5Digest&quot;&gt;MD5Digest&lt;/strong&gt; = std.digest.WrapperDigest！（MD5）.WrapperDigest;</target>
        </trans-unit>
        <trans-unit id="e2a98a01d50148b31d883760ea72595c31539832" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;MinstdRand&quot;&gt;MinstdRand&lt;/strong&gt; = LinearCongruentialEngine!(uint, 48271u, 0u, 2147483647u).LinearCongruentialEngine;</source>
          <target state="translated">别名&lt;strong id=&quot;MinstdRand&quot;&gt;MinstdRand&lt;/strong&gt; = LinearCongruentialEngine！（uint，48271u，0u，2147483647u）.LinearCongruentialEngine;</target>
        </trans-unit>
        <trans-unit id="690baf0bb88b1f642479f27a0e464c32bf144a84" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;MinstdRand0&quot;&gt;MinstdRand0&lt;/strong&gt; = LinearCongruentialEngine!(uint, 16807u, 0u, 2147483647u).LinearCongruentialEngine;</source>
          <target state="translated">别名&lt;strong id=&quot;MinstdRand0&quot;&gt;MinstdRand0&lt;/strong&gt; = LinearCongruentialEngine！（uint，16807u，0u，2147483647u）.LinearCongruentialEngine;</target>
        </trans-unit>
        <trans-unit id="4c3e3e926838b170eb2080bfd23e350c41dedf58" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ModuleUnitTester&quot;&gt;ModuleUnitTester&lt;/strong&gt; = bool function();</source>
          <target state="translated">别名&lt;strong id=&quot;ModuleUnitTester&quot;&gt;ModuleUnitTester&lt;/strong&gt; = bool function（）;</target>
        </trans-unit>
        <trans-unit id="4a0664f287125b4e2cf67b0e2e39ed9807e22bb7" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;MonoTime&quot;&gt;MonoTime&lt;/strong&gt; = MonoTimeImpl!cast(ClockType)0.MonoTimeImpl;</source>
          <target state="translated">别名&lt;strong id=&quot;MonoTime&quot;&gt;MonoTime&lt;/strong&gt; = MonoTimeImpl！cast（ClockType）0.MonoTimeImpl;</target>
        </trans-unit>
        <trans-unit id="1782de53052c855df00f1dd5074c31e3fa2933a1" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Mt19937&quot;&gt;Mt19937&lt;/strong&gt; = MersenneTwisterEngine!(uint, 32LU, 624LU, 397LU, 31LU, 2567483615u, 11LU, 4294967295u, 7LU, 2636928640u, 15LU, 4022730752u, 18LU, 1812433253u).MersenneTwisterEngine;</source>
          <target state="translated">别名&lt;strong id=&quot;Mt19937&quot;&gt;Mt19937&lt;/strong&gt; = MersenneTwisterEngine！（uint，32LU，624LU，397LU，31LU，2567483615u，11LU，4294967295u，7LU，2636928640u，15LU，4022730752u，18LU，1812433253u）。</target>
        </trans-unit>
        <trans-unit id="33f9205f17b10c29115425ecc23a619d7b727500" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Mt19937_64&quot;&gt;Mt19937_64&lt;/strong&gt; = MersenneTwisterEngine!(ulong, 64LU, 312LU, 156LU, 31LU, 13043109905998158313LU, 29LU, 6148914691236517205LU, 17LU, 8202884508482404352LU, 37LU, 18444473444759240704LU, 43LU, 6364136223846793005LU).MersenneTwisterEngine;</source>
          <target state="translated">别名&lt;strong id=&quot;Mt19937_64&quot;&gt;Mt19937_64&lt;/strong&gt; = MersenneTwisterEngine！（ulong，64LU，312LU，156LU，31LU，13043109905998158313LU，29LU，6148914691236517205LU，17LU，8202884508482404352LU，37LU，18444473444759240704LU，43LU，6364136223846793005LU）; MersenneTwisterEngine</target>
        </trans-unit>
        <trans-unit id="b65c2f3816a932149a4362b657312be988754b56" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;OBJECTPOINT&quot;&gt;OBJECTPOINT&lt;/strong&gt; = CURLOPTTYPE_OBJECTPOINT;</source>
          <target state="translated">别名&lt;strong id=&quot;OBJECTPOINT&quot;&gt;OBJECTPOINT&lt;/strong&gt; = CURLOPTTYPE_OBJECTPOINT;</target>
        </trans-unit>
        <trans-unit id="6ff939daa4f4766ad318f76b8e7dbb94c62b992a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;OFF_T&quot;&gt;OFF_T&lt;/strong&gt; = CURLOPTTYPE_OFF_T;</source>
          <target state="translated">别名&lt;strong id=&quot;OFF_T&quot;&gt;OFF_T&lt;/strong&gt; = CURLOPTTYPE_OFF_T;</target>
        </trans-unit>
        <trans-unit id="ca9af3ad8d0d1a16d82d664d545342980066f476" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;OpenRight&quot;&gt;OpenRight&lt;/strong&gt; = std.typecons.Flag!&quot;openRight&quot;.Flag;</source>
          <target state="translated">别名&lt;strong id=&quot;OpenRight&quot;&gt;OpenRight&lt;/strong&gt; = std.typecons.Flag！&amp;ldquo; openRight&amp;rdquo; .Flag;</target>
        </trans-unit>
        <trans-unit id="b28a7f4fd04b85b476be44422bce2eef13d43989" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ParameterDefaultValueTuple&quot;&gt;ParameterDefaultValueTuple&lt;/strong&gt; = ParameterDefaults(func...) if (func.length == 1 &amp;amp;&amp;amp; isCallable!func);</source>
          <target state="translated">如果（func.length == 1 &amp;amp;&amp;amp; isCallable！func）; 别名&lt;strong id=&quot;ParameterDefaultValueTuple&quot;&gt;ParameterDefaultValueTuple&lt;/strong&gt; = ParameterDefaults（func ...）;</target>
        </trans-unit>
        <trans-unit id="06b867874e0236680798e4e6a25be349a6865cd0" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ParameterTypeTuple&quot;&gt;ParameterTypeTuple&lt;/strong&gt; = Parameters(func...) if (func.length == 1 &amp;amp;&amp;amp; isCallable!func);</source>
          <target state="translated">别名&lt;strong id=&quot;ParameterTypeTuple&quot;&gt;ParameterTypeTuple&lt;/strong&gt; = Parameters（func ...）if（func.length == 1 &amp;amp;&amp;amp; isCallable！func）;</target>
        </trans-unit>
        <trans-unit id="a14f95c5bff227381c095d7a9730dc87659f0304" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;PopFirst&quot;&gt;PopFirst&lt;/strong&gt; = std.typecons.Flag!&quot;popFirst&quot;.Flag;</source>
          <target state="translated">别名&lt;strong id=&quot;PopFirst&quot;&gt;PopFirst&lt;/strong&gt; = std.typecons.Flag！&amp;ldquo; popFirst&amp;rdquo; .Flag;</target>
        </trans-unit>
        <trans-unit id="7244c5a2ce8b9d59e2fe1114f3dd5c86967b2129" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;RIPEMD160Digest&quot;&gt;RIPEMD160Digest&lt;/strong&gt; = std.digest.WrapperDigest!(RIPEMD160).WrapperDigest;</source>
          <target state="translated">别名&lt;strong id=&quot;RIPEMD160Digest&quot;&gt;RIPEMD160Digest&lt;/strong&gt; = std.digest.WrapperDigest！（RIPEMD160）.WrapperDigest;</target>
        </trans-unit>
        <trans-unit id="70ca825cdd7c07e65c754bc2275b8044d88eb4ae" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Random&quot;&gt;Random&lt;/strong&gt; = MersenneTwisterEngine!(uint, 32LU, 624LU, 397LU, 31LU, 2567483615u, 11LU, 4294967295u, 7LU, 2636928640u, 15LU, 4022730752u, 18LU, 1812433253u).MersenneTwisterEngine;</source>
          <target state="translated">别名&lt;strong id=&quot;Random&quot;&gt;Random&lt;/strong&gt; = MersenneTwisterEngine！（uint，32LU，624LU，397LU，31LU，2567483615u，11LU，4294967295u，7LU，2636928640u，15LU，4022730752u，18LU，1812433253u）;</target>
        </trans-unit>
        <trans-unit id="750139e09816e29b8b16a402cf24d512039aec70" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Range&quot;&gt;Range&lt;/strong&gt; = RBRange!(RBNode*);</source>
          <target state="translated">别名&lt;strong id=&quot;Range&quot;&gt;范围&lt;/strong&gt; = RBRange！（RBNode *）;</target>
        </trans-unit>
        <trans-unit id="3903e796aa41d2a9cdda260c32c09dfda1635563" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Range&quot;&gt;Range&lt;/strong&gt; = RangeT!Array;</source>
          <target state="translated">别名&lt;strong id=&quot;Range&quot;&gt;范围&lt;/strong&gt; = RangeT！Array;</target>
        </trans-unit>
        <trans-unit id="9590a9c1c98e6dcfcb4cc03a77fe14074fc1c5a3" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;RefT&quot;&gt;RefT&lt;/strong&gt; = T;</source>
          <target state="translated">别名&lt;strong id=&quot;RefT&quot;&gt;RefT&lt;/strong&gt; = T;</target>
        </trans-unit>
        <trans-unit id="2f4d5e046a4d82cc85576c72703e5bc33b8dc423" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;RegexException&quot;&gt;RegexException&lt;/strong&gt; = std.regex.internal.ir.&lt;strong id=&quot;RegexException&quot;&gt;RegexException&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;RegexException&quot;&gt;RegexException&lt;/strong&gt; = std.regex.internal.ir。&lt;strong id=&quot;RegexException&quot;&gt;RegexException&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e9ae073f4645d1aa4b7fcd9241ded9ffabdf542e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Representation&quot;&gt;Representation&lt;/strong&gt; = T;</source>
          <target state="translated">别名&lt;strong id=&quot;Representation&quot;&gt;表示&lt;/strong&gt; = T;</target>
        </trans-unit>
        <trans-unit id="3fc9e6d75898aaa07c27402514b32207f82b1284" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ReturnType&quot;&gt;ReturnType&lt;/strong&gt; = typeof(fun(_args));</source>
          <target state="translated">别名&lt;strong id=&quot;ReturnType&quot;&gt;ReturnType&lt;/strong&gt; = typeof（fun（_args））;</target>
        </trans-unit>
        <trans-unit id="473a1e4ea7fa1426ce8d622e5397a1101f14606f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;RoundingMode&quot;&gt;RoundingMode&lt;/strong&gt; = uint;</source>
          <target state="translated">别名&lt;strong id=&quot;RoundingMode&quot;&gt;RoundingMode&lt;/strong&gt; = uint;</target>
        </trans-unit>
        <trans-unit id="b8b94f6c4ba725a76abd9e975887c05d6c79babe" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SC&quot;&gt;SC&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;SC&quot;&gt;SC&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="f426386f7681664e2efc6f883bbdba5934caa803" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA1&quot;&gt;SHA1&lt;/strong&gt; = SHA!(512u, 160u).SHA;</source>
          <target state="translated">别名&lt;strong id=&quot;SHA1&quot;&gt;SHA1&lt;/strong&gt; = SHA！（512u，160u）.SHA;</target>
        </trans-unit>
        <trans-unit id="0e211c8b0bc93f32b288cf0264bc3c7c40b1f7a3" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA1Digest&quot;&gt;SHA1Digest&lt;/strong&gt; = std.digest.WrapperDigest!(SHA!(512u, 160u)).WrapperDigest;</source>
          <target state="translated">别名&lt;strong id=&quot;SHA1Digest&quot;&gt;SHA1Digest&lt;/strong&gt; = std.digest.WrapperDigest！（SHA！（512u，160u））。WrapperDigest;</target>
        </trans-unit>
        <trans-unit id="f7458b1465c12f383eb1e78411fc07b66d5c83f9" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA224&quot;&gt;SHA224&lt;/strong&gt; = SHA!(512u, 224u).SHA;</source>
          <target state="translated">别名&lt;strong id=&quot;SHA224&quot;&gt;SHA224&lt;/strong&gt; = SHA！（512u，224u）.SHA;</target>
        </trans-unit>
        <trans-unit id="8fcad978f632bd33a73fc68aa30cc70832047eb1" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA224Digest&quot;&gt;SHA224Digest&lt;/strong&gt; = std.digest.WrapperDigest!(SHA!(512u, 224u)).WrapperDigest;</source>
          <target state="translated">别名&lt;strong id=&quot;SHA224Digest&quot;&gt;SHA224Digest&lt;/strong&gt; = std.digest.WrapperDigest！（SHA！（512u，224u））。WrapperDigest;</target>
        </trans-unit>
        <trans-unit id="6a13705eaefc845d593adee0f16acea806fed7f2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA256&quot;&gt;SHA256&lt;/strong&gt; = SHA!(512u, 256u).SHA;</source>
          <target state="translated">别名&lt;strong id=&quot;SHA256&quot;&gt;SHA256&lt;/strong&gt; = SHA！（512u，256u）.SHA;</target>
        </trans-unit>
        <trans-unit id="783f8f67d503f518f015fb548ac29d62b31133fb" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA256Digest&quot;&gt;SHA256Digest&lt;/strong&gt; = std.digest.WrapperDigest!(SHA!(512u, 256u)).WrapperDigest;</source>
          <target state="translated">别名&lt;strong id=&quot;SHA256Digest&quot;&gt;SHA256Digest&lt;/strong&gt; = std.digest.WrapperDigest！（SHA！（512u，256u））。</target>
        </trans-unit>
        <trans-unit id="c41ae3a8cc057981ffbd5cc37b49e76ce8e00b29" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA384&quot;&gt;SHA384&lt;/strong&gt; = SHA!(1024u, 384u).SHA;</source>
          <target state="translated">别名&lt;strong id=&quot;SHA384&quot;&gt;SHA3​​84&lt;/strong&gt; = SHA！（1024u，384u）.SHA;</target>
        </trans-unit>
        <trans-unit id="4263c69e1db073c21daa40efabff09c0cb13929a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA384Digest&quot;&gt;SHA384Digest&lt;/strong&gt; = std.digest.WrapperDigest!(SHA!(1024u, 384u)).WrapperDigest;</source>
          <target state="translated">别名&lt;strong id=&quot;SHA384Digest&quot;&gt;SHA3​​84Digest&lt;/strong&gt; = std.digest.WrapperDigest！（SHA！（1024u，384u））。WrapperDigest;</target>
        </trans-unit>
        <trans-unit id="bb3944d4148cf9aa74bbe2342b62919f21090af3" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA512&quot;&gt;SHA512&lt;/strong&gt; = SHA!(1024u, 512u).SHA;</source>
          <target state="translated">别名&lt;strong id=&quot;SHA512&quot;&gt;SHA512&lt;/strong&gt; = SHA！（1024u，512u）.SHA;</target>
        </trans-unit>
        <trans-unit id="6479a84e131fd89e4aa4fdfa0cb0f1454d12031a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA512Digest&quot;&gt;SHA512Digest&lt;/strong&gt; = std.digest.WrapperDigest!(SHA!(1024u, 512u)).WrapperDigest;</source>
          <target state="translated">别名&lt;strong id=&quot;SHA512Digest&quot;&gt;SHA512Digest&lt;/strong&gt; = std.digest.WrapperDigest！（SHA！（1024u，512u））。</target>
        </trans-unit>
        <trans-unit id="b45a0f390042be603390bfb4f83ffa8856799565" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA512_224&quot;&gt;SHA512_224&lt;/strong&gt; = SHA!(1024u, 224u).SHA;</source>
          <target state="translated">别名&lt;strong id=&quot;SHA512_224&quot;&gt;SHA512_224&lt;/strong&gt; = SHA！（1024u，224u）.SHA;</target>
        </trans-unit>
        <trans-unit id="3ece9c60a1266a9fb5a8d0d6268db6b1e2a9cb39" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA512_224Digest&quot;&gt;SHA512_224Digest&lt;/strong&gt; = std.digest.WrapperDigest!(SHA!(1024u, 224u)).WrapperDigest;</source>
          <target state="translated">别名&lt;strong id=&quot;SHA512_224Digest&quot;&gt;SHA512_224Digest&lt;/strong&gt; = std.digest.WrapperDigest！（SHA！（1024u，224u））。WrapperDigest;</target>
        </trans-unit>
        <trans-unit id="dd2421d2fa0975c1bbdefa2cb4a123b7a95be498" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA512_256&quot;&gt;SHA512_256&lt;/strong&gt; = SHA!(1024u, 256u).SHA;</source>
          <target state="translated">别名&lt;strong id=&quot;SHA512_256&quot;&gt;SHA512_256&lt;/strong&gt; = SHA！（1024u，256u）.SHA;</target>
        </trans-unit>
        <trans-unit id="9d933be6e96bdeccdc3e74c3b81debea0a997e51" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA512_256Digest&quot;&gt;SHA512_256Digest&lt;/strong&gt; = std.digest.WrapperDigest!(SHA!(1024u, 256u)).WrapperDigest;</source>
          <target state="translated">别名&lt;strong id=&quot;SHA512_256Digest&quot;&gt;SHA512_256Digest&lt;/strong&gt; = std.digest.WrapperDigest！（SHA！（1024u，256u））。</target>
        </trans-unit>
        <trans-unit id="cae73265c5de54e59b5bf95a1663ada92c6ed8a8" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ScanAllThreadsFn&quot;&gt;ScanAllThreadsFn&lt;/strong&gt; = void delegate(void*, void*) nothrow;</source>
          <target state="translated">别名&lt;strong id=&quot;ScanAllThreadsFn&quot;&gt;ScanAllThreadsFn&lt;/strong&gt; = void委托（void *，void *）nothrow;</target>
        </trans-unit>
        <trans-unit id="8c14c9f5050cf47b7cd8ee1601f11f616c97bcd6" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ScanAllThreadsTypeFn&quot;&gt;ScanAllThreadsTypeFn&lt;/strong&gt; = void delegate(ScanType, void*, void*) nothrow;</source>
          <target state="translated">别名&lt;strong id=&quot;ScanAllThreadsTypeFn&quot;&gt;ScanAllThreadsT​​ypeFn&lt;/strong&gt; = void委托（ScanType，void *，void *）nothrow;</target>
        </trans-unit>
        <trans-unit id="ef9f324195c918487020d0ce2d2bb03ace83c5fb" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SortOutput&quot;&gt;SortOutput&lt;/strong&gt; = std.typecons.Flag!&quot;sortOutput&quot;.Flag;</source>
          <target state="translated">别名&lt;strong id=&quot;SortOutput&quot;&gt;SortOutput&lt;/strong&gt; = std.typecons.Flag！&amp;ldquo; sortOutput&amp;rdquo; .Flag;</target>
        </trans-unit>
        <trans-unit id="6b429002044dfd5e92db2d06f559e49072d75bcd" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;StaticRegex&quot;&gt;StaticRegex&lt;/strong&gt; = Regex(Char);</source>
          <target state="translated">别名&lt;strong id=&quot;StaticRegex&quot;&gt;StaticRegex&lt;/strong&gt; = Regex（Char）;</target>
        </trans-unit>
        <trans-unit id="e48dad6a2e5adfa27287ae708ea01dd9dc8c83a7" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ThreadID&quot;&gt;ThreadID&lt;/strong&gt; = ulong;</source>
          <target state="translated">别名&lt;strong id=&quot;ThreadID&quot;&gt;ThreadID&lt;/strong&gt; = ulong;</target>
        </trans-unit>
        <trans-unit id="875adf8104677ede44f6ed0da8dcf7df98fa1644" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ThrowOnError&quot;&gt;ThrowOnError&lt;/strong&gt; = std.typecons.Flag!&quot;throwOnError&quot;.Flag;</source>
          <target state="translated">别名&lt;strong id=&quot;ThrowOnError&quot;&gt;ThrowOnError&lt;/strong&gt; = std.typecons.Flag！&amp;ldquo; throwOnError&amp;rdquo; .Flag;</target>
        </trans-unit>
        <trans-unit id="a67feb9ac61a52cd66f27661016aaa951c558bba" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;TimeCond&quot;&gt;TimeCond&lt;/strong&gt; = etc.c.curl.CurlTimeCond;</source>
          <target state="translated">别名&lt;strong id=&quot;TimeCond&quot;&gt;TimeCond&lt;/strong&gt; = etc.c.curl.CurlTimeCond;</target>
        </trans-unit>
        <trans-unit id="856da67287e30226394545145edd95535dd34795" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;TraceHandler&quot;&gt;TraceHandler&lt;/strong&gt; = TraceInfo function(void* ptr);</source>
          <target state="translated">别名&lt;strong id=&quot;TraceHandler&quot;&gt;TraceHandler&lt;/strong&gt; = TraceInfo函数（void * ptr）;</target>
        </trans-unit>
        <trans-unit id="1e4f07782e271ccfec4a4d52d52428534752c20f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Types&quot;&gt;Types&lt;/strong&gt; = staticMap!(extractType, fieldSpecs);</source>
          <target state="translated">别名&lt;strong id=&quot;Types&quot;&gt;类型&lt;/strong&gt; = staticMap！（extractType，fieldSpecs）;</target>
        </trans-unit>
        <trans-unit id="95bb23ce63d4298f8ccc31473e000520de4f2171" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;UINT16_C&quot;&gt;UINT16_C&lt;/strong&gt; = _typify!ushort._typify;</source>
          <target state="translated">别名&lt;strong id=&quot;UINT16_C&quot;&gt;UINT16_C&lt;/strong&gt; = _typify！ushort._typify;</target>
        </trans-unit>
        <trans-unit id="55f75149370054eab9d8f1791b89e8c375a778b3" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;UINT32_C&quot;&gt;UINT32_C&lt;/strong&gt; = _typify!uint._typify;</source>
          <target state="translated">别名&lt;strong id=&quot;UINT32_C&quot;&gt;UINT32_C&lt;/strong&gt; = _typify！uint._typify;</target>
        </trans-unit>
        <trans-unit id="8cb6dd2b6443365daeb3e8fe647536a5816681b1" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;UINT64_C&quot;&gt;UINT64_C&lt;/strong&gt; = _typify!ulong._typify;</source>
          <target state="translated">别名&lt;strong id=&quot;UINT64_C&quot;&gt;UINT64_C&lt;/strong&gt; = _typify！ulong._typify;</target>
        </trans-unit>
        <trans-unit id="6a54464a4452378451f8790bd9f843ffc5261932" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;UINT8_C&quot;&gt;UINT8_C&lt;/strong&gt; = _typify!ubyte._typify;</source>
          <target state="translated">别名&lt;strong id=&quot;UINT8_C&quot;&gt;UINT8_C&lt;/strong&gt; = _typify！ubyte._typify;</target>
        </trans-unit>
        <trans-unit id="2b14b4e6e7594f87bf3ead80279dfcd6c87fe005" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;UINTMAX_C&quot;&gt;UINTMAX_C&lt;/strong&gt; = _typify!ulong._typify;</source>
          <target state="translated">别名&lt;strong id=&quot;UINTMAX_C&quot;&gt;UINTMAX_C&lt;/strong&gt; = _typify！ulong._typify;</target>
        </trans-unit>
        <trans-unit id="4c2aa77ff8d91fff84532b7a5468d9fa527e2b7d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;UseReplacementDchar&quot;&gt;UseReplacementDchar&lt;/strong&gt; = std.typecons.Flag!&quot;useReplacementDchar&quot;.Flag;</source>
          <target state="translated">别名&lt;strong id=&quot;UseReplacementDchar&quot;&gt;UseReplacementDchar&lt;/strong&gt; = std.typecons.Flag！&amp;ldquo; useReplacementDchar&amp;rdquo; .Flag;</target>
        </trans-unit>
        <trans-unit id="3ef3557f77a29e58903b2e8194a09bc18d38dad1" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Variant&quot;&gt;Variant&lt;/strong&gt; = VariantN!32LU.VariantN;</source>
          <target state="translated">别名&lt;strong id=&quot;Variant&quot;&gt;Variant&lt;/strong&gt; = VariantN！32LU.VariantN;</target>
        </trans-unit>
        <trans-unit id="5e2369afe1c0860b53d715f3568f2d3d4b329bbd" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Windows1250String&quot;&gt;Windows1250String&lt;/strong&gt; = immutable(Windows1250Char)[];</source>
          <target state="translated">别名&lt;strong id=&quot;Windows1250String&quot;&gt;Windows1250String&lt;/strong&gt; =不可变（Windows1250Char）[];</target>
        </trans-unit>
        <trans-unit id="6d951dc7a8b58312220c11fa5df880c4f3097f28" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Windows1251String&quot;&gt;Windows1251String&lt;/strong&gt; = immutable(Windows1251Char)[];</source>
          <target state="translated">别名&lt;strong id=&quot;Windows1251String&quot;&gt;Windows1251String&lt;/strong&gt; =不可变（Windows1251Char）[];</target>
        </trans-unit>
        <trans-unit id="e6dee8a64df2307cef1a6c68790b30eb785df11c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Windows1252String&quot;&gt;Windows1252String&lt;/strong&gt; = immutable(Windows1252Char)[];</source>
          <target state="translated">别名&lt;strong id=&quot;Windows1252String&quot;&gt;Windows1252String&lt;/strong&gt; =不可变（Windows1252Char）[];</target>
        </trans-unit>
        <trans-unit id="2889a10e8a58186049bc79d11795ad0650e77356" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Xorshift&quot;&gt;Xorshift&lt;/strong&gt; = XorshiftEngine!(uint, 128u, 11, -8, -19).XorshiftEngine;</source>
          <target state="translated">别名&lt;strong id=&quot;Xorshift&quot;&gt;Xorshift&lt;/strong&gt; = XorshiftEngine！（uint，128u，11，-8，-19）。</target>
        </trans-unit>
        <trans-unit id="7e34f2d9de88961bc53e8d291fba1afbde051ac0" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Xorshift128&quot;&gt;Xorshift128&lt;/strong&gt; = XorshiftEngine!(uint, 128u, 11, -8, -19).XorshiftEngine;</source>
          <target state="translated">别名&lt;strong id=&quot;Xorshift128&quot;&gt;Xorshift128&lt;/strong&gt; = XorshiftEngine！（uint，128u，11，-8，-19）。</target>
        </trans-unit>
        <trans-unit id="a90cbc61c42369a6781d50d1453f624232f58fc1" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Xorshift160&quot;&gt;Xorshift160&lt;/strong&gt; = XorshiftEngine!(uint, 160u, 2, -1, -4).XorshiftEngine;</source>
          <target state="translated">别名&lt;strong id=&quot;Xorshift160&quot;&gt;Xorshift160&lt;/strong&gt; = XorshiftEngine！（uint，160u，2，-1，-4）。</target>
        </trans-unit>
        <trans-unit id="9c5f4792cbc2d087de2518754ab0484da2e59a4a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Xorshift192&quot;&gt;Xorshift192&lt;/strong&gt; = XorshiftEngine!(uint, 192u, -2, 1, 4).XorshiftEngine;</source>
          <target state="translated">别名&lt;strong id=&quot;Xorshift192&quot;&gt;Xorshift192&lt;/strong&gt; = XorshiftEngine！（uint，192u，-2，1，4）。</target>
        </trans-unit>
        <trans-unit id="ae0fbf3f1d08d5693da7dadf400095eb9d46e65d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Xorshift32&quot;&gt;Xorshift32&lt;/strong&gt; = XorshiftEngine!(uint, 32u, 13, -17, 15).XorshiftEngine;</source>
          <target state="translated">别名&lt;strong id=&quot;Xorshift32&quot;&gt;Xorshift32&lt;/strong&gt; = XorshiftEngine！（uint，32u，13，-17，15）。</target>
        </trans-unit>
        <trans-unit id="c9bf71fdcf1d7a5c1aff8e6b1e471f66a525b219" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Xorshift64&quot;&gt;Xorshift64&lt;/strong&gt; = XorshiftEngine!(uint, 64u, 10, -13, -10).XorshiftEngine;</source>
          <target state="translated">别名&lt;strong id=&quot;Xorshift64&quot;&gt;Xorshift64&lt;/strong&gt; = XorshiftEngine！（uint，64u，10，-13，-10）。</target>
        </trans-unit>
        <trans-unit id="332c4d85169c7e7d2a2f5f1b8a3cc83612a54d65" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Xorshift96&quot;&gt;Xorshift96&lt;/strong&gt; = XorshiftEngine!(uint, 96u, 10, -5, -26).XorshiftEngine;</source>
          <target state="translated">别名&lt;strong id=&quot;Xorshift96&quot;&gt;Xorshift96&lt;/strong&gt; = XorshiftEngine！（uint，96u，10，-5，-26）。</target>
        </trans-unit>
        <trans-unit id="28c311c7947fa20ce90a701713546d166c854a80" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;_compare_fp_t&quot;&gt;_compare_fp_t&lt;/strong&gt; = extern (C) int function(const(void*), const(void*)) @system;</source>
          <target state="translated">别名&lt;strong id=&quot;_compare_fp_t&quot;&gt;_compare_fp_t&lt;/strong&gt; = extern（C）int函数（const（void *），const（void *））@system;</target>
        </trans-unit>
        <trans-unit id="eb86794d34bf7966554d7c3d4f5bb36e1eabc283" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;_d_arrayappendTTrace&quot;&gt;_d_arrayappendTTrace&lt;/strong&gt; = _d_HookTraceImpl!(Tarr, _d_arrayappendT, errorMessage);</source>
          <target state="translated">别名&lt;strong id=&quot;_d_arrayappendTTrace&quot;&gt;_d_arrayappendTTrace&lt;/strong&gt; = _d_HookTraceImpl！（Tarr，_d_arrayappendT，errorMessage）;</target>
        </trans-unit>
        <trans-unit id="63fbdd765e2492b357e2b0542cb7ca2957861316" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;_d_arrayappendcTXTrace&quot;&gt;_d_arrayappendcTXTrace&lt;/strong&gt; = _d_HookTraceImpl!(Tarr, _d_arrayappendcTX, errorMessage);</source>
          <target state="translated">别名&lt;strong id=&quot;_d_arrayappendcTXTrace&quot;&gt;_d_arrayappendcTXTrace&lt;/strong&gt; = _d_HookTraceImpl！（Tarr，_d_arrayappendcTX，errorMessage）;</target>
        </trans-unit>
        <trans-unit id="983a64934348d856be83fc8f23400608c814a784" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;_d_arraycatnTXTrace&quot;&gt;_d_arraycatnTXTrace&lt;/strong&gt; = _d_HookTraceImpl!(ResultArrT, _d_arraycatnTX, errorMessage);</source>
          <target state="translated">别名&lt;strong id=&quot;_d_arraycatnTXTrace&quot;&gt;_d_arraycatnTXTrace&lt;/strong&gt; = _d_HookTraceImpl！（ResultArrT，_d_arraycatnTX，errorMessage）;</target>
        </trans-unit>
        <trans-unit id="beac3785c51090bee8f14ba9c2a851aa2d53d5ed" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;_d_arraysetlengthTTrace&quot;&gt;_d_arraysetlengthTTrace&lt;/strong&gt; = _d_HookTraceImpl!(Tarr, _d_arraysetlengthT, errorMessage);</source>
          <target state="translated">别名&lt;strong id=&quot;_d_arraysetlengthTTrace&quot;&gt;_d_arraysetlengthTTrace&lt;/strong&gt; = _d_HookTraceImpl！（Tarr，_d_arraysetlengthT，errorMessage）;</target>
        </trans-unit>
        <trans-unit id="d52c52fc523fdb9d6e695bffd8dfe119a62236d2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;_iobuf&quot;&gt;_iobuf&lt;/strong&gt; = _IO_FILE;</source>
          <target state="translated">别名&lt;strong id=&quot;_iobuf&quot;&gt;_iobuf&lt;/strong&gt; = _IO_FILE;</target>
        </trans-unit>
        <trans-unit id="0526c1f80e3c213c5a4b8431b208ad0576e0645a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;acos&quot;&gt;acos&lt;/strong&gt; = &lt;strong id=&quot;acos&quot;&gt;acos&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;acos&quot;&gt;acos&lt;/strong&gt; = &lt;strong id=&quot;acos&quot;&gt;acos&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="618ba3c9884aaa07e8f1c2115af51569f65ea930" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;acos&quot;&gt;acos&lt;/strong&gt; = core.stdc.complex.cacosl;</source>
          <target state="translated">别名&lt;strong id=&quot;acos&quot;&gt;acos&lt;/strong&gt; = core.stdc.complex.cacosl;</target>
        </trans-unit>
        <trans-unit id="e4ac032daafe310d85ee66c4d80417c1d6cd40a2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;acosh&quot;&gt;acosh&lt;/strong&gt; = &lt;strong id=&quot;acosh&quot;&gt;acosh&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;acosh&quot;&gt;acosh&lt;/strong&gt; = &lt;strong id=&quot;acosh&quot;&gt;acosh&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ec0fa6cb9dd432e6d568e6a0c3bed0364cc74ac8" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;acosh&quot;&gt;acosh&lt;/strong&gt; = core.stdc.complex.cacoshl;</source>
          <target state="translated">别名&lt;strong id=&quot;acosh&quot;&gt;acosh&lt;/strong&gt; = core.stdc.complex.cacoshl;</target>
        </trans-unit>
        <trans-unit id="b3d59802dc0171e30bdce02c43146a3998fb9e9f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;alignment&quot;&gt;alignment&lt;/strong&gt; = Allocator.&lt;strong id=&quot;alignment&quot;&gt;alignment&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;alignment&quot;&gt;对齐&lt;/strong&gt; =分配器。&lt;strong id=&quot;alignment&quot;&gt;对齐&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="87d13510f865687a84e4b5f58fb2b1d2ddb2661d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;alignment&quot;&gt;alignment&lt;/strong&gt; = ParentAllocator.&lt;strong id=&quot;alignment&quot;&gt;alignment&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;alignment&quot;&gt;对齐&lt;/strong&gt; = ParentAllocator。&lt;strong id=&quot;alignment&quot;&gt;对齐&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d50d5567db97149d8a526a8e094a4aaf0bd1907e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;alignment&quot;&gt;alignment&lt;/strong&gt; = minAlign;</source>
          <target state="translated">别名&lt;strong id=&quot;alignment&quot;&gt;对齐&lt;/strong&gt; = minAlign;</target>
        </trans-unit>
        <trans-unit id="b7c43f9fb7f990fe73d420eecda47bb4b66976aa" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;alignment&quot;&gt;alignment&lt;/strong&gt; = theAlignment;</source>
          <target state="translated">别名&lt;strong id=&quot;alignment&quot;&gt;对齐&lt;/strong&gt; = theAlignment;</target>
        </trans-unit>
        <trans-unit id="85333218887429326223c71e0b78402ce9d647af" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;allocator_type&quot;&gt;allocator_type&lt;/strong&gt; = Alloc;</source>
          <target state="translated">别名&lt;strong id=&quot;allocator_type&quot;&gt;allocator_type&lt;/strong&gt; = Alloc;</target>
        </trans-unit>
        <trans-unit id="fe37c3081642f1eb2800360e02e4b56d4707520d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;args&quot;&gt;args&lt;/strong&gt; = _args[1 .. __dollar];</source>
          <target state="translated">别名&lt;strong id=&quot;args&quot;&gt;args&lt;/strong&gt; = _args [1 .. __dollar];</target>
        </trans-unit>
        <trans-unit id="5b973575924434354028fca5629213321bd68cd2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;asin&quot;&gt;asin&lt;/strong&gt; = &lt;strong id=&quot;asin&quot;&gt;asin&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;asin&quot;&gt;asin&lt;/strong&gt; = &lt;strong id=&quot;asin&quot;&gt;asin&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ede0f1b7163b376f1c2fdf8fce9dc916ef6f3173" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;asin&quot;&gt;asin&lt;/strong&gt; = core.stdc.complex.casinl;</source>
          <target state="translated">别名&lt;strong id=&quot;asin&quot;&gt;asin&lt;/strong&gt; = core.stdc.complex.casinl;</target>
        </trans-unit>
        <trans-unit id="4246e2d0c71e1360cb3abedb9fb0321e14c8c0bd" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;asinh&quot;&gt;asinh&lt;/strong&gt; = &lt;strong id=&quot;asinh&quot;&gt;asinh&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;asinh&quot;&gt;asinh&lt;/strong&gt; = &lt;strong id=&quot;asinh&quot;&gt;asinh&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6a58837fabe1ac7990b323b49b29e5aaedbf6cd3" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;asinh&quot;&gt;asinh&lt;/strong&gt; = core.stdc.complex.casinhl;</source>
          <target state="translated">别名&lt;strong id=&quot;asinh&quot;&gt;asinh&lt;/strong&gt; = core.stdc.complex.casinhl;</target>
        </trans-unit>
        <trans-unit id="1bd9379549e84d21391aca0a2c6e33125ab31d4d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;atan&quot;&gt;atan&lt;/strong&gt; = &lt;strong id=&quot;atan&quot;&gt;atan&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;atan&quot;&gt;atan&lt;/strong&gt; = &lt;strong id=&quot;atan&quot;&gt;atan&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="aade6c62ad19ed5bf1656de0da761f80deba1695" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;atan&quot;&gt;atan&lt;/strong&gt; = core.stdc.complex.catanl;</source>
          <target state="translated">别名&lt;strong id=&quot;atan&quot;&gt;atan&lt;/strong&gt; = core.stdc.complex.catanl;</target>
        </trans-unit>
        <trans-unit id="943b2a59ff6322ac0a9a30a13d3c8f3ac2ac6659" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;atan2&quot;&gt;atan2&lt;/strong&gt; = &lt;strong id=&quot;atan2&quot;&gt;atan2&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;atan2&quot;&gt;atan2&lt;/strong&gt; = &lt;strong id=&quot;atan2&quot;&gt;atan2&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5755e94d8aff9f54caa7b4d4214c9c56cd8c4ebc" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;atan2&quot;&gt;atan2&lt;/strong&gt; = core.stdc.math.atan2l;</source>
          <target state="translated">别名&lt;strong id=&quot;atan2&quot;&gt;atan2&lt;/strong&gt; = core.stdc.math.atan2l;</target>
        </trans-unit>
        <trans-unit id="ee23b807c81dff1b4c738c740b75df9ff6e99a8b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;atanh&quot;&gt;atanh&lt;/strong&gt; = &lt;strong id=&quot;atanh&quot;&gt;atanh&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;atanh&quot;&gt;atanh&lt;/strong&gt; = &lt;strong id=&quot;atanh&quot;&gt;atanh&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="64ba8a11e3a6dd0bc48a214d4c03e2dd89ead9e3" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;atanh&quot;&gt;atanh&lt;/strong&gt; = core.stdc.complex.catanhl;</source>
          <target state="translated">别名&lt;strong id=&quot;atanh&quot;&gt;atanh&lt;/strong&gt; = core.stdc.complex.catanhl;</target>
        </trans-unit>
        <trans-unit id="cd3c30e39b5c3d6830295ed51960f9738aa6ab3a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;blockSize&quot;&gt;blockSize&lt;/strong&gt; = theBlockSize;</source>
          <target state="translated">别名&lt;strong id=&quot;blockSize&quot;&gt;blockSize&lt;/strong&gt; = theBlockSize;</target>
        </trans-unit>
        <trans-unit id="b660fe91bfb693ed5d712f7fceff607302218ebd" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;byChar&quot;&gt;byChar&lt;/strong&gt; = byUTF!(char, cast(Flag)true).byUTF(R)(R r) if (isAutodecodableString!R &amp;amp;&amp;amp; isInputRange!R &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R));</source>
          <target state="translated">别名&lt;strong id=&quot;byChar&quot;&gt;byChar&lt;/strong&gt; = byUTF！（char，cast（Flag）true）.byUTF（R）（R r）if（isAutodecodableString！R &amp;amp;&amp;amp; isInputRange！R &amp;amp;&amp;amp; isSomeChar！（ElementEncodingType！R））;</target>
        </trans-unit>
        <trans-unit id="fe3266f7da1a19efef18c2c23eee693e22637dee" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;byChar&quot;&gt;byChar&lt;/strong&gt; = byUTF!char.byUTF(R)(R r) if (isAutodecodableString!R &amp;amp;&amp;amp; isInputRange!R &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R));</source>
          <target state="translated">如果（isAutodecodableString！R &amp;amp;&amp;amp; isInputRange！R &amp;amp;&amp;amp; isSomeChar！（ElementEncodingType！R）），则别名&lt;strong id=&quot;byChar&quot;&gt;byChar&lt;/strong&gt; = byUTF！char.byUTF（R）（R r））;</target>
        </trans-unit>
        <trans-unit id="afbd9556602c3b419bdd291a883453e9ecfa933d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;byDchar&quot;&gt;byDchar&lt;/strong&gt; = byUTF!(dchar, cast(Flag)true).byUTF(R)(R r) if (isAutodecodableString!R &amp;amp;&amp;amp; isInputRange!R &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R));</source>
          <target state="translated">别名&lt;strong id=&quot;byDchar&quot;&gt;byDchar&lt;/strong&gt; = byUTF！（dchar，cast（Flag）true）.byUTF（R）（R r）if（isAutodecodableString！R &amp;amp;&amp;amp; isInputRange！R &amp;amp;&amp;amp; isSomeChar！（ElementEncodingType！R））;</target>
        </trans-unit>
        <trans-unit id="cf181ef3cf7a348b492b5818cebe7a41e5aaa5f2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;byDchar&quot;&gt;byDchar&lt;/strong&gt; = byUTF!dchar.byUTF(R)(R r) if (isAutodecodableString!R &amp;amp;&amp;amp; isInputRange!R &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R));</source>
          <target state="translated">别名&lt;strong id=&quot;byDchar&quot;&gt;byDchar&lt;/strong&gt; = byUTF！dchar.byUTF（R）（R r）如果（isAutodecodableString！R &amp;amp;&amp;amp; isInputRange！R &amp;amp;&amp;amp; isSomeChar！（ElementEncodingType！R））;</target>
        </trans-unit>
        <trans-unit id="4782be22424396f92cc819e8cc3429ab999b4571" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;byWchar&quot;&gt;byWchar&lt;/strong&gt; = byUTF!(wchar, cast(Flag)true).byUTF(R)(R r) if (isAutodecodableString!R &amp;amp;&amp;amp; isInputRange!R &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R));</source>
          <target state="translated">别名&lt;strong id=&quot;byWchar&quot;&gt;byWchar&lt;/strong&gt; = byUTF！（wchar，cast（Flag）true）.byUTF（R）（R r）if（isAutodecodableString！R &amp;amp;&amp;amp; isInputRange！R &amp;amp;&amp;amp; isSomeChar！（ElementEncodingType！R））;</target>
        </trans-unit>
        <trans-unit id="58a83a2c569747fdbe377878cef199c974d64adb" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;byWchar&quot;&gt;byWchar&lt;/strong&gt; = byUTF!wchar.byUTF(R)(R r) if (isAutodecodableString!R &amp;amp;&amp;amp; isInputRange!R &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R));</source>
          <target state="translated">别名&lt;strong id=&quot;byWchar&quot;&gt;byWchar&lt;/strong&gt; = byUTF！wchar.byUTF（R）（R r）如果（isAutodecodableString！R &amp;amp;&amp;amp; isInputRange！R &amp;amp;&amp;amp; isSomeChar！（ElementEncodingType！R））;</target>
        </trans-unit>
        <trans-unit id="2d5b21ba34eb95da18300c864ed4a77cb9630e33" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;byte16&quot;&gt;byte16&lt;/strong&gt; = __vector(byte[16]);</source>
          <target state="translated">别名&lt;strong id=&quot;byte16&quot;&gt;byte16&lt;/strong&gt; = __vector（byte [16]）;</target>
        </trans-unit>
        <trans-unit id="7d70d558525ef4cc2b52192560b3e40c0ca5c4ba" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;carg&quot;&gt;carg&lt;/strong&gt; = &lt;strong id=&quot;carg&quot;&gt;carg&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;carg&quot;&gt;猪&lt;/strong&gt; = &lt;strong id=&quot;carg&quot;&gt;猪&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="760b93d24837f552ad25028b9fcb0a515537c362" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;carg&quot;&gt;carg&lt;/strong&gt; = core.stdc.complex.cargl;</source>
          <target state="translated">别名&lt;strong id=&quot;carg&quot;&gt;carg&lt;/strong&gt; = core.stdc.complex.cargl;</target>
        </trans-unit>
        <trans-unit id="4fcfa15dfc03e25d6197d9dfeba2549940974119" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;cbrt&quot;&gt;cbrt&lt;/strong&gt; = &lt;strong id=&quot;cbrt&quot;&gt;cbrt&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;cbrt&quot;&gt;cbrt&lt;/strong&gt; = &lt;strong id=&quot;cbrt&quot;&gt;cbrt&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="abbb6f1bda6a60e80554fd1480dc0610142be29a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;cbrt&quot;&gt;cbrt&lt;/strong&gt; = core.stdc.math.cbrtl;</source>
          <target state="translated">别名&lt;strong id=&quot;cbrt&quot;&gt;cbrt&lt;/strong&gt; = core.stdc.math.cbrtl;</target>
        </trans-unit>
        <trans-unit id="a83059b6f2f0bb76cd7e0fc66a47e33f3817949b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ceil&quot;&gt;ceil&lt;/strong&gt; = &lt;strong id=&quot;ceil&quot;&gt;ceil&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;ceil&quot;&gt;ceil&lt;/strong&gt; = &lt;strong id=&quot;ceil&quot;&gt;ceil&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="fc0d53c025e031125ab29e3c56b891a578ae3835" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ceil&quot;&gt;ceil&lt;/strong&gt; = core.stdc.math.ceill;</source>
          <target state="translated">别名&lt;strong id=&quot;ceil&quot;&gt;ceil&lt;/strong&gt; = core.stdc.math.ceill;</target>
        </trans-unit>
        <trans-unit id="645aac154274589f4130d04936985e8614802808" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;cimag&quot;&gt;cimag&lt;/strong&gt; = &lt;strong id=&quot;cimag&quot;&gt;cimag&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;cimag&quot;&gt;cimag&lt;/strong&gt; = &lt;strong id=&quot;cimag&quot;&gt;cimag&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="49b143d0368d14b216d204117a45ecd9723d6d07" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;cimag&quot;&gt;cimag&lt;/strong&gt; = core.stdc.complex.cimagl;</source>
          <target state="translated">别名&lt;strong id=&quot;cimag&quot;&gt;cimag&lt;/strong&gt; = core.stdc.complex.cimagl;</target>
        </trans-unit>
        <trans-unit id="94ad54f56cdbc4da396e341f28a1e9a7bad81ccd" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;complex&quot;&gt;complex&lt;/strong&gt; = creal;</source>
          <target state="translated">别名&lt;strong id=&quot;complex&quot;&gt;复杂&lt;/strong&gt; = creal;</target>
        </trans-unit>
        <trans-unit id="0c4d977f8648380aaae1e698d17ca09c155f2e62" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;conj&quot;&gt;conj&lt;/strong&gt; = &lt;strong id=&quot;conj&quot;&gt;conj&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;conj&quot;&gt;conj&lt;/strong&gt; = &lt;strong id=&quot;conj&quot;&gt;conj&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="08f5ebba614915d807c974e6544552caf8b9fadd" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;conj&quot;&gt;conj&lt;/strong&gt; = core.stdc.complex.conjl;</source>
          <target state="translated">别名&lt;strong id=&quot;conj&quot;&gt;conj&lt;/strong&gt; = core.stdc.complex.conjl;</target>
        </trans-unit>
        <trans-unit id="9369e12ad4f5a2dfba11254af79f235d23cbe8ec" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;const_pointer&quot;&gt;const_pointer&lt;/strong&gt; = const(T)*;</source>
          <target state="translated">别名&lt;strong id=&quot;const_pointer&quot;&gt;const_pointer&lt;/strong&gt; = const（T）*;</target>
        </trans-unit>
        <trans-unit id="169d5d15b2ffa4172203eaff3850b48faa8871e3" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;const_pointer&quot;&gt;const_pointer&lt;/strong&gt; = const(value_type)*;</source>
          <target state="translated">别名&lt;strong id=&quot;const_pointer&quot;&gt;const_pointer&lt;/strong&gt; = const（value_type）*;</target>
        </trans-unit>
        <trans-unit id="bcc1f6a9188a928e8e2a049c85f0da342f1eb139" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;copysign&quot;&gt;copysign&lt;/strong&gt; = &lt;strong id=&quot;copysign&quot;&gt;copysign&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;copysign&quot;&gt;copysign&lt;/strong&gt; = &lt;strong id=&quot;copysign&quot;&gt;copysign&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="356f5b6311b4f55554f7b01779b334f0a47bb7ae" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;copysign&quot;&gt;copysign&lt;/strong&gt; = core.stdc.math.copysignl;</source>
          <target state="translated">别名&lt;strong id=&quot;copysign&quot;&gt;copysign&lt;/strong&gt; = core.stdc.math.copysignl;</target>
        </trans-unit>
        <trans-unit id="1fdb7a80fe353c4b06b8cca32319091daf7d586e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;cos&quot;&gt;cos&lt;/strong&gt; = &lt;strong id=&quot;cos&quot;&gt;cos&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;cos&quot;&gt;cos&lt;/strong&gt; = &lt;strong id=&quot;cos&quot;&gt;cos&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="18976074d8dc55ebfb022926bd199e96d12a9e3b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;cos&quot;&gt;cos&lt;/strong&gt; = core.stdc.complex.ccosl;</source>
          <target state="translated">别名&lt;strong id=&quot;cos&quot;&gt;cos&lt;/strong&gt; = core.stdc.complex.ccosl;</target>
        </trans-unit>
        <trans-unit id="cd2f22447a9191e0503b649f9e3c02411e448c6a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;cosh&quot;&gt;cosh&lt;/strong&gt; = &lt;strong id=&quot;cosh&quot;&gt;cosh&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;cosh&quot;&gt;cosh&lt;/strong&gt; = &lt;strong id=&quot;cosh&quot;&gt;cosh&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4b4724c9c997fa033cd797a550bff7a6132af38e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;cosh&quot;&gt;cosh&lt;/strong&gt; = core.stdc.complex.ccoshl;</source>
          <target state="translated">别名&lt;strong id=&quot;cosh&quot;&gt;cosh&lt;/strong&gt; = core.stdc.complex.ccoshl;</target>
        </trans-unit>
        <trans-unit id="c1b95e204122438d9bebb8be107540e58a8e1992" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;cproj&quot;&gt;cproj&lt;/strong&gt; = &lt;strong id=&quot;cproj&quot;&gt;cproj&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;cproj&quot;&gt;cproj&lt;/strong&gt; = &lt;strong id=&quot;cproj&quot;&gt;cproj&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="2329a46232c07f4e418d4e99773ae9ec9baf849a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;cproj&quot;&gt;cproj&lt;/strong&gt; = core.stdc.complex.cprojl;</source>
          <target state="translated">别名&lt;strong id=&quot;cproj&quot;&gt;cproj&lt;/strong&gt; = core.stdc.complex.cprojl;</target>
        </trans-unit>
        <trans-unit id="9193c8afa4b755d18b91323063c5982254261d9f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;crcHexString&quot;&gt;crcHexString&lt;/strong&gt; = &lt;strong id=&quot;crcHexString&quot;&gt;crcHexString&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;crcHexString&quot;&gt;crcHexString&lt;/strong&gt; = &lt;strong id=&quot;crcHexString&quot;&gt;crcHexString&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1cbc0795ec8ec9640b654b016d76261208d0b68d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;crcHexString&quot;&gt;crcHexString&lt;/strong&gt; = std.digest.toHexString!(cast(Order)true, 16LU, cast(LetterCase)false).toHexString;</source>
          <target state="translated">别名&lt;strong id=&quot;crcHexString&quot;&gt;crcHexString&lt;/strong&gt; = std.digest.toHexString！（cast（Order）true，16LU，cast（LetterCase）false）.toHexString;</target>
        </trans-unit>
        <trans-unit id="72701b09ee939e3ea0f24807774f28d74e646d82" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;critical&quot;&gt;critical&lt;/strong&gt; = .Logger.memLogFunctions!cast(LogLevel)cast(ubyte)160u.logImpl(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy A args) if (args.length == 0 || args.length &amp;gt; 0 &amp;amp;&amp;amp; !is(A[0] : bool));</source>
          <target state="translated">别名&lt;strong id=&quot;critical&quot;&gt;关键&lt;/strong&gt; = .Logger.memLogFunctions！cast（LogLevel）cast（ubyte）160u.logImpl（int行= __LINE__，字符串文件= __FILE__，字符串funcName = __FUNCTION__，字符串prettyFuncName = __PRETTY_FUNCTION__，字符串moduleName = __MODULE__，A ...） （惰性A args）如果（args.length == 0 || args.length&amp;gt; 0 &amp;amp;&amp;amp;！is（A [0]：bool））;</target>
        </trans-unit>
        <trans-unit id="bf66195049ea30aecc8b48b99fe77d4335312671" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;critical&quot;&gt;critical&lt;/strong&gt; = defaultLogFunction!cast(LogLevel)cast(ubyte)160u.defaultLogFunction(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy A args) if (args.length &amp;gt; 0 &amp;amp;&amp;amp; !is(Unqual!(A[0]) : bool) || args.length == 0);</source>
          <target state="translated">别名&lt;strong id=&quot;critical&quot;&gt;关键&lt;/strong&gt; = defaultLogFunction！cast（LogLevel）cast（ubyte）160u.defaultLogFunction（int行= __LINE__，字符串文件= __FILE__，字符串funcName = __FUNCTION__，字符串prettyFuncName = __PRETTY_FUNCTION__，字符串moduleName = __MODULE__，A ...） args）if（args.length&amp;gt; 0 &amp;amp;&amp;amp;！is（Unqual！（A [0]）：bool）|| args.length == 0）;</target>
        </trans-unit>
        <trans-unit id="5f7748db48f723cce4db6336ac844f1ea0da3b3d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;criticalf&quot;&gt;criticalf&lt;/strong&gt; = .Logger.memLogFunctions!cast(LogLevel)cast(ubyte)160u.logImplf(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy bool condition, lazy string msg, lazy A args);</source>
          <target state="translated">别名&lt;strong id=&quot;criticalf&quot;&gt;criticalf&lt;/strong&gt; = .Logger.memLogFunctions！cast（LogLevel）cast（ubyte）160u.logImplf（int line = __LINE__，字符串文件= __FILE__，字符串funcName = __FUNCTION__，字符串prettyFuncName = __PRETTY_FUNCTION__，字符串moduleName = __MODULE__，A ...） （惰性布尔条件，惰性字符串味精，惰性A args）；</target>
        </trans-unit>
        <trans-unit id="4131543b85b58c5d636e1394f42b7ae535bf384d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;criticalf&quot;&gt;criticalf&lt;/strong&gt; = defaultLogFunctionf!cast(LogLevel)cast(ubyte)160u.defaultLogFunctionf(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy string msg, lazy A args);</source>
          <target state="translated">别名&lt;strong id=&quot;criticalf&quot;&gt;criticalf&lt;/strong&gt; = defaultLogFunctionf！cast（LogLevel）cast（ubyte）160u.defaultLogFunctionf（int line = __LINE__，字符串文件= __FILE__，字符串funcName = __FUNCTION__，字符串prettyFuncName = __PRETTY_FUNCTION__，字符串moduleName = __MODULE__，A ...） msg，惰性A参数）；</target>
        </trans-unit>
        <trans-unit id="e4481ad01faf13363fea0b61ddcaa508a347898b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;csin&quot;&gt;csin&lt;/strong&gt; = &lt;strong id=&quot;csin&quot;&gt;csin&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;csin&quot;&gt;csin&lt;/strong&gt; = &lt;strong id=&quot;csin&quot;&gt;csin&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="dd39beab14ea25a81a52b4ee6cff8bf5315eaec2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;csin&quot;&gt;csin&lt;/strong&gt; = core.stdc.complex.csinl;</source>
          <target state="translated">别名&lt;strong id=&quot;csin&quot;&gt;csin&lt;/strong&gt; = core.stdc.complex.csinl;</target>
        </trans-unit>
        <trans-unit id="9a949b71883cfcdedf8a83999712d89495a9ea36" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_TimeCond&quot;&gt;curl_TimeCond&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;curl_TimeCond&quot;&gt;curl_TimeCond&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="58e86d120cab1f781c36181aaa523ec96829be3b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_calloc_callback&quot;&gt;curl_calloc_callback&lt;/strong&gt; = void* function(ulong nmemb, ulong size);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_calloc_callback&quot;&gt;curl_calloc_callback&lt;/strong&gt; = void * function（ulnmnmemb，ulong size）;</target>
        </trans-unit>
        <trans-unit id="8b2be8b8d52c35ad034039fa7fcc3a34da6a4017" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_chunk_bgn_callback&quot;&gt;curl_chunk_bgn_callback&lt;/strong&gt; = long function(const(void)* transfer_info, void* ptr, int remains);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_chunk_bgn_callback&quot;&gt;curl_chunk_bgn_callback&lt;/strong&gt; = long函数（const（void）* transfer_info，void * ptr，int保留）;</target>
        </trans-unit>
        <trans-unit id="d2ff16a57891d95c9145b18426014ef6bfacfdbc" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_chunk_end_callback&quot;&gt;curl_chunk_end_callback&lt;/strong&gt; = long function(void* ptr);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_chunk_end_callback&quot;&gt;curl_chunk_end_callback&lt;/strong&gt; = long function（void * ptr）;</target>
        </trans-unit>
        <trans-unit id="af81d2948fcc31b894ebf224351049dff4198252" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_closepolicy&quot;&gt;curl_closepolicy&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;curl_closepolicy&quot;&gt;curl_closepolicy&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="a1c05c3f2befcc55b905f71f68420a9107be5f14" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_conv_callback&quot;&gt;curl_conv_callback&lt;/strong&gt; = int function(char* buffer, ulong length);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_conv_callback&quot;&gt;curl_conv_callback&lt;/strong&gt; = int函数（char *缓冲区，超长）；</target>
        </trans-unit>
        <trans-unit id="c59d1e1472eeb6d0af1ae428c3d59801b3a6ffed" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_debug_callback&quot;&gt;curl_debug_callback&lt;/strong&gt; = int function(void* handle, int type, char* data, ulong size, void* userptr);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_debug_callback&quot;&gt;curl_debug_callback&lt;/strong&gt; = int函数（void *句柄，int类型，char *数据，ulong大小，void * userptr）;</target>
        </trans-unit>
        <trans-unit id="6618f55227faf7a7355394072306115078ba209f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_fnmatch_callback&quot;&gt;curl_fnmatch_callback&lt;/strong&gt; = int function(void* ptr, const(char*) pattern, const(char*) string);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_fnmatch_callback&quot;&gt;curl_fnmatch_callback&lt;/strong&gt; = int函数（void * ptr，const（char *）模式，const（char *）字符串）;</target>
        </trans-unit>
        <trans-unit id="60e42a7877a0218abd2f97a19446e6bdd06693d0" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_fnmatch_callback&quot;&gt;curl_fnmatch_callback&lt;/strong&gt; = int function(void* ptr, in char* pattern, in char* string);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_fnmatch_callback&quot;&gt;curl_fnmatch_callback&lt;/strong&gt; = int function（void * ptr，以char *模式，以char *字符串）;</target>
        </trans-unit>
        <trans-unit id="da9837c51d6af1fdd38177c0b544bbfd9c96694c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_formget_callback&quot;&gt;curl_formget_callback&lt;/strong&gt; = extern (C) ulong function(void* arg, const(char*) buf, ulong len);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_formget_callback&quot;&gt;curl_formget_callback&lt;/strong&gt; = extern（C）ulong函数（void * arg，const（char *）buf，ulong len）;</target>
        </trans-unit>
        <trans-unit id="89ef21b279a5540edb266ccefbcf31154661cc4f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_formget_callback&quot;&gt;curl_formget_callback&lt;/strong&gt; = extern (C) ulong function(void* arg, in char* buf, ulong len);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_formget_callback&quot;&gt;curl_formget_callback&lt;/strong&gt; = extern（C）ulong函数（void * arg，in char * buf，ulong len）;</target>
        </trans-unit>
        <trans-unit id="0ba2b61739eb89d274e92cf716137dd6b58a6cdc" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_free_callback&quot;&gt;curl_free_callback&lt;/strong&gt; = void function(void* ptr);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_free_callback&quot;&gt;curl_free_callback&lt;/strong&gt; = void function（void * ptr）;</target>
        </trans-unit>
        <trans-unit id="7eae2b512d24161e9b33a80a38c30ec5ab03b221" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_ftpauth&quot;&gt;curl_ftpauth&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;curl_ftpauth&quot;&gt;curl_ftpauth&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="33bbc666f342bb5b5ef70da067ff0bab880a6664" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_ftpccc&quot;&gt;curl_ftpccc&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;curl_ftpccc&quot;&gt;curl_ftpccc&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="8961d9b69e08e966e4772527b72c740260dd1abd" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_ftpcreatedir&quot;&gt;curl_ftpcreatedir&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;curl_ftpcreatedir&quot;&gt;curl_ftpcreatedir&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="5e37e5db17a21111efd9baa298cd0d7b6bfd7c65" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_ftpmethod&quot;&gt;curl_ftpmethod&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;curl_ftpmethod&quot;&gt;curl_ftpmethod&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="98a6ea725cf666644bc014a65c90b00a884dee09" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_infotype&quot;&gt;curl_infotype&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;curl_infotype&quot;&gt;curl_infotype&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="6de51e23231c3d87891df945b1b2e2d86a3bef44" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_ioctl_callback&quot;&gt;curl_ioctl_callback&lt;/strong&gt; = int function(void* handle, int cmd, void* clientp);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_ioctl_callback&quot;&gt;curl_ioctl_callback&lt;/strong&gt; = int function（void * handle，int cmd，void * clientp）;</target>
        </trans-unit>
        <trans-unit id="73969dd142445296fbaa39d08a7cd17c0ec824e4" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_lock_access&quot;&gt;curl_lock_access&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;curl_lock_access&quot;&gt;curl_lock_access&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="0d682ea89ac66d71a6432b0ef6ac6aa13fdf7131" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_lock_data&quot;&gt;curl_lock_data&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;curl_lock_data&quot;&gt;curl_lock_data&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="9466dc84d5e4334ff73d99dd84c110ea752116e2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_lock_function&quot;&gt;curl_lock_function&lt;/strong&gt; = void function(void* handle, int data, int locktype, void* userptr);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_lock_function&quot;&gt;curl_lock_function&lt;/strong&gt; = void function（void * handle，int data，int locktype，void * userptr）;</target>
        </trans-unit>
        <trans-unit id="47cfdd59335226d1e6b450314a1e15bab2ea4018" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_malloc_callback&quot;&gt;curl_malloc_callback&lt;/strong&gt; = void* function(ulong size);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_malloc_callback&quot;&gt;curl_malloc_callback&lt;/strong&gt; = void * function（ulong size）;</target>
        </trans-unit>
        <trans-unit id="6f11645fcf7d678fe408a3541df8b66781ee1db0" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_multi_timer_callback&quot;&gt;curl_multi_timer_callback&lt;/strong&gt; = extern (C) int function(void* multi, long timeout_ms, void* userp);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_multi_timer_callback&quot;&gt;curl_multi_timer_callback&lt;/strong&gt; = extern（C）int函数（void * multi，long timeout_ms，void * userp）;</target>
        </trans-unit>
        <trans-unit id="c5d3345371ca80aad0c7b6fe3f71b172bbc9a869" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_off_t&quot;&gt;curl_off_t&lt;/strong&gt; = long;</source>
          <target state="translated">别名&lt;strong id=&quot;curl_off_t&quot;&gt;curl_off_t&lt;/strong&gt; = long;</target>
        </trans-unit>
        <trans-unit id="818131d29990ef07b62ccf2963afbea8985fb717" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_opensocket_callback&quot;&gt;curl_opensocket_callback&lt;/strong&gt; = socket_t function(void* clientp, int purpose, curl_sockaddr* address);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_opensocket_callback&quot;&gt;curl_opensocket_callback&lt;/strong&gt; = socket_t函数（void * clientp，int目的，curl_sockaddr *地址）;</target>
        </trans-unit>
        <trans-unit id="3e7349367da3fb4202fc8297d7f98591f5981e90" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_progress_callback&quot;&gt;curl_progress_callback&lt;/strong&gt; = int function(void* clientp, double dltotal, double dlnow, double ultotal, double ulnow);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_progress_callback&quot;&gt;curl_progress_callback&lt;/strong&gt; = int函数（void * clientp，double dltotal，double dlnow，double ultotal，double ulnow）;</target>
        </trans-unit>
        <trans-unit id="608344257cdfcbc299c4512fb683c8987edba573" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_proxytype&quot;&gt;curl_proxytype&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;curl_proxytype&quot;&gt;curl_proxytype&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="693b28e9e16da63cd1f3cbbb8618345a5ba9e734" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_read_callback&quot;&gt;curl_read_callback&lt;/strong&gt; = ulong function(char* buffer, ulong size, ulong nitems, void* instream);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_read_callback&quot;&gt;curl_read_callback&lt;/strong&gt; = ulong函数（char *缓冲区，ulong大小，ulong nitems，void * instream）;</target>
        </trans-unit>
        <trans-unit id="bc3a96315e0ccdd8842d86e843fea5829fb8b9fe" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_realloc_callback&quot;&gt;curl_realloc_callback&lt;/strong&gt; = void* function(void* ptr, ulong size);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_realloc_callback&quot;&gt;curl_realloc_callback&lt;/strong&gt; = void * function（void * ptr，ulong size）;</target>
        </trans-unit>
        <trans-unit id="b7cf64205e0403fd361b4d7ad7737a5b477648e4" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_seek_callback&quot;&gt;curl_seek_callback&lt;/strong&gt; = int function(void* instream, long offset, int origin);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_seek_callback&quot;&gt;curl_seek_callback&lt;/strong&gt; = int function（void * instream，long offset，int origin）;</target>
        </trans-unit>
        <trans-unit id="c983d93187d0f16ed301d4790b05d876e438464a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_socket_callback&quot;&gt;curl_socket_callback&lt;/strong&gt; = extern (C) int function(void* easy, socket_t s, int what, void* userp, void* socketp);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_socket_callback&quot;&gt;curl_socket_callback&lt;/strong&gt; = extern（C）int函数（void * easy，socket_t s，int what，void * userp，void * socketp）;</target>
        </trans-unit>
        <trans-unit id="92104eb3af2bf15b670027196afa4ed37a671aaa" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_socket_t&quot;&gt;curl_socket_t&lt;/strong&gt; = std.socket.socket_t;</source>
          <target state="translated">别名&lt;strong id=&quot;curl_socket_t&quot;&gt;curl_socket_t&lt;/strong&gt; = std.socket.socket_t;</target>
        </trans-unit>
        <trans-unit id="ffc0def919f1639273b8e4f191b798914096f52d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_sockopt_callback&quot;&gt;curl_sockopt_callback&lt;/strong&gt; = int function(void* clientp, socket_t curlfd, int purpose);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_sockopt_callback&quot;&gt;curl_sockopt_callback&lt;/strong&gt; = int函数（void * clientp，socket_t curlfd，int目的）;</target>
        </trans-unit>
        <trans-unit id="9fc153a4dcfba47c6b5dec09b02308a807a6010e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_sshkeycallback&quot;&gt;curl_sshkeycallback&lt;/strong&gt; = int function(void* easy, const(curl_khkey)* knownkey, const(curl_khkey)* foundkey, CurlKHMatch m, void* clientp);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_sshkeycallback&quot;&gt;curl_sshkeycallback&lt;/strong&gt; = int function（void * easy，const（curl_khkey）* knownkey，const（curl_khkey）* foundkey，CurlKHMatch m，void * clientp）;</target>
        </trans-unit>
        <trans-unit id="7b8fbd83fe489d7166281f3ba4867fd46236e82b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_ssl_ctx_callback&quot;&gt;curl_ssl_ctx_callback&lt;/strong&gt; = int function(void* curl, void* ssl_ctx, void* userptr);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_ssl_ctx_callback&quot;&gt;curl_ssl_ctx_callback&lt;/strong&gt; = int函数（void * curl，void * ssl_ctx，void * userptr）;</target>
        </trans-unit>
        <trans-unit id="e7d43d99be8abcc3b4447eea02dcb98d3787c4d0" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_strdup_callback&quot;&gt;curl_strdup_callback&lt;/strong&gt; = char* function(const(char*) str);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_strdup_callback&quot;&gt;curl_strdup_callback&lt;/strong&gt; = char * function（const（char *）str）;</target>
        </trans-unit>
        <trans-unit id="64bbab93c784df2d8836f1d30bbc7f71a1fd6451" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_strdup_callback&quot;&gt;curl_strdup_callback&lt;/strong&gt; = char* function(in char* str);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_strdup_callback&quot;&gt;curl_strdup_callback&lt;/strong&gt; = char *函数（在char * str中）;</target>
        </trans-unit>
        <trans-unit id="f72712febad332b2e79a7009d74d0591db9b1c90" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_unlock_function&quot;&gt;curl_unlock_function&lt;/strong&gt; = void function(void* handle, int data, void* userptr);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_unlock_function&quot;&gt;curl_unlock_function&lt;/strong&gt; = void function（void * handle，int data，void * userptr）;</target>
        </trans-unit>
        <trans-unit id="7a207413716cc69fef3f8c11d363b616d9bc15f5" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_usessl&quot;&gt;curl_usessl&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;curl_usessl&quot;&gt;curl_usessl&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="fdd618516d52f279b219a8ef5763648bbc81b1ac" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_version_info_data&quot;&gt;curl_version_info_data&lt;/strong&gt; = _N28;</source>
          <target state="translated">别名&lt;strong id=&quot;curl_version_info_data&quot;&gt;curl_version_info_data&lt;/strong&gt; = _N28;</target>
        </trans-unit>
        <trans-unit id="4a83e9c6ecf6bbba7e8e1dec380008f7f7bd72ef" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_write_callback&quot;&gt;curl_write_callback&lt;/strong&gt; = ulong function(char* buffer, ulong size, ulong nitems, void* outstream);</source>
          <target state="translated">别名&lt;strong id=&quot;curl_write_callback&quot;&gt;curl_write_callback&lt;/strong&gt; = ulong函数（char *缓冲区，ulong大小，ulong nitems，void *流出）;</target>
        </trans-unit>
        <trans-unit id="8ddd69c112f7157012959e4fe66d94b75a4fbbf9" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curlfiletype&quot;&gt;curlfiletype&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;curlfiletype&quot;&gt;curlfiletype&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="c02b5daf309adf5bced5a496c792334b768848c9" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curliocmd&quot;&gt;curliocmd&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;curliocmd&quot;&gt;curliocmd&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="85617e27259cd6a0446dbf51e8a383c546fb0071" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curlioerr&quot;&gt;curlioerr&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;curlioerr&quot;&gt;curlioerr&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="a5bdf9726bee8dab51eb77f0f4f962ee92801b1c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curlsocktype&quot;&gt;curlsocktype&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;curlsocktype&quot;&gt;curlsocktype&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="aa3e1452ca65ed9225c4502630e61727262f82fd" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;days&quot;&gt;days&lt;/strong&gt; = dur!&quot;&lt;strong id=&quot;days&quot;&gt;days&lt;/strong&gt;&quot;.dur;</source>
          <target state="translated">别名&lt;strong id=&quot;days&quot;&gt;days&lt;/strong&gt; = dur！&amp;ldquo; &lt;strong id=&quot;days&quot;&gt;days&lt;/strong&gt; &amp;rdquo; .dur;</target>
        </trans-unit>
        <trans-unit id="b025ac1574175ab2f99a2181749e43b8a8fe4a7c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;dg2_t&quot;&gt;dg2_t&lt;/strong&gt; = int delegate(void*, void*);</source>
          <target state="translated">别名&lt;strong id=&quot;dg2_t&quot;&gt;dg2_t&lt;/strong&gt; = int委托（void *，void *）;</target>
        </trans-unit>
        <trans-unit id="ba4079ad8ff6a67dae036c57593b3c02e6248d12" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;dg_t&quot;&gt;dg_t&lt;/strong&gt; = int delegate(void*);</source>
          <target state="translated">别名&lt;strong id=&quot;dg_t&quot;&gt;dg_t&lt;/strong&gt; = int委托（void *）;</target>
        </trans-unit>
        <trans-unit id="2a9b037fd4bfa4ff38345c74e277cf86dfef4f12" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;difference_type&quot;&gt;difference_type&lt;/strong&gt; = allocator_type.&lt;strong id=&quot;difference_type&quot;&gt;difference_type&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;difference_type&quot;&gt;difference_type&lt;/strong&gt; = allocator_type。&lt;strong id=&quot;difference_type&quot;&gt;差异类型&lt;/strong&gt;;</target>
        </trans-unit>
        <trans-unit id="8741e31177e1595292fc44a856d4f00790882f36" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;difference_type&quot;&gt;difference_type&lt;/strong&gt; = ptrdiff_t;</source>
          <target state="translated">别名&lt;strong id=&quot;difference_type&quot;&gt;difference_type&lt;/strong&gt; = ptrdiff_t;</target>
        </trans-unit>
        <trans-unit id="2c52cac7636598598f313bc9bab614923e7e7851" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;double2&quot;&gt;double2&lt;/strong&gt; = __vector(double[2]);</source>
          <target state="translated">别名&lt;strong id=&quot;double2&quot;&gt;double2&lt;/strong&gt; = __vector（double [2]）;</target>
        </trans-unit>
        <trans-unit id="8dfd1d328e39656c8deef5a64eda69724c3d4b37" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;double_t&quot;&gt;double_t&lt;/strong&gt; = double;</source>
          <target state="translated">别名&lt;strong id=&quot;double_t&quot;&gt;double_t&lt;/strong&gt; = double;</target>
        </trans-unit>
        <trans-unit id="618198c95843c3fe6c1e58c3c1eb14d5d28b368b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;enum_flags_t&quot;&gt;enum_flags_t&lt;/strong&gt; = uint;</source>
          <target state="translated">别名&lt;strong id=&quot;enum_flags_t&quot;&gt;enum_flags_t&lt;/strong&gt; = uint;</target>
        </trans-unit>
        <trans-unit id="6d0751ae4a67ceb7d76c173d7e9cff4112112ba9" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;equalTo&quot;&gt;equalTo&lt;/strong&gt; = safeOp!&quot;==&quot;.safeOp(T0, T1)(auto ref T0 a, auto ref T1 b);</source>
          <target state="translated">别名&lt;strong id=&quot;equalTo&quot;&gt;equalTo&lt;/strong&gt; = safeOp！&amp;ldquo; ==&amp;rdquo;。safeOp（T0，T1）（auto ref T0 a，auto ref T1 b）;</target>
        </trans-unit>
        <trans-unit id="6f09aac2bcbd9a2897c94869156540d3ed815a23" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;erf&quot;&gt;erf&lt;/strong&gt; = &lt;strong id=&quot;erf&quot;&gt;erf&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;erf&quot;&gt;erf&lt;/strong&gt; = &lt;strong id=&quot;erf&quot;&gt;erf&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b3296733ad34bd9615eaf69df8283533074f4671" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;erf&quot;&gt;erf&lt;/strong&gt; = core.stdc.math.erfl;</source>
          <target state="translated">别名&lt;strong id=&quot;erf&quot;&gt;erf&lt;/strong&gt; = core.stdc.math.erfl;</target>
        </trans-unit>
        <trans-unit id="e609ec4341a48a8a750d95a27726345b03745513" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;erfc&quot;&gt;erfc&lt;/strong&gt; = &lt;strong id=&quot;erfc&quot;&gt;erfc&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;erfc&quot;&gt;erfc&lt;/strong&gt; = &lt;strong id=&quot;erfc&quot;&gt;erfc&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d122fac91e37a5c8729b9e1e704259bc1383192c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;erfc&quot;&gt;erfc&lt;/strong&gt; = core.stdc.math.erfcl;</source>
          <target state="translated">别名&lt;strong id=&quot;erfc&quot;&gt;erfc&lt;/strong&gt; = core.stdc.math.erfcl;</target>
        </trans-unit>
        <trans-unit id="d9063d659044cf51e9cc965dda62279c7b620c66" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;errnoEnforce&quot;&gt;errnoEnforce&lt;/strong&gt; = enforce!(ErrnoException).enforce(T)(T value, lazy const(char)[] msg = null, string file = __FILE__, size_t line = __LINE__) if (is(typeof(() { if (!value) { } } )));</source>
          <target state="translated">别名&lt;strong id=&quot;errnoEnforce&quot;&gt;errnoEnforce&lt;/strong&gt; =强制执行（ErrnoException）.enforce（T）（T值，惰性const（char）[] msg = null，字符串文件= __FILE__，size_t line = __LINE__）if（is（typeof（（）{if（！值）{}}）））；</target>
        </trans-unit>
        <trans-unit id="447172d3ad40a71d7ed829e9d0418495e8018346" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;error&quot;&gt;error&lt;/strong&gt; = .Logger.memLogFunctions!cast(LogLevel)cast(ubyte)128u.logImpl(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy A args) if (args.length == 0 || args.length &amp;gt; 0 &amp;amp;&amp;amp; !is(A[0] : bool));</source>
          <target state="translated">别名&lt;strong id=&quot;error&quot;&gt;错误&lt;/strong&gt; = .Logger.memLogFunctions！cast（LogLevel）cast（ubyte）128u.logImpl（int行= __LINE__，字符串文件= __FILE__，字符串funcName = __FUNCTION__，字符串prettyFuncName = __PRETTY_FUNCTION__，字符串moduleName = __MODULE__，A ...） （惰性A args）如果（args.length == 0 || args.length&amp;gt; 0 &amp;amp;&amp;amp;！is（A [0]：bool））;</target>
        </trans-unit>
        <trans-unit id="82a2627f90877ad3505a83961256de6d5c1ba5f7" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;error&quot;&gt;error&lt;/strong&gt; = defaultLogFunction!cast(LogLevel)cast(ubyte)128u.defaultLogFunction(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy A args) if (args.length &amp;gt; 0 &amp;amp;&amp;amp; !is(Unqual!(A[0]) : bool) || args.length == 0);</source>
          <target state="translated">别名&lt;strong id=&quot;error&quot;&gt;错误&lt;/strong&gt; = defaultLogFunction！cast（LogLevel）cast（ubyte）128u.defaultLogFunction（int行= __LINE__，字符串文件= __FILE__，字符串funcName = __FUNCTION__，字符串prettyFuncName = __PRETTY_FUNCTION__，字符串moduleName = __MODULE__，A ...） args）if（args.length&amp;gt; 0 &amp;amp;&amp;amp;！is（Unqual！（A [0]）：bool）|| args.length == 0）;</target>
        </trans-unit>
        <trans-unit id="4e235ae564c0a0e796c2b1089b4f7b7ac337f4e4" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;errorf&quot;&gt;errorf&lt;/strong&gt; = .Logger.memLogFunctions!cast(LogLevel)cast(ubyte)128u.logImplf(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy bool condition, lazy string msg, lazy A args);</source>
          <target state="translated">别名&lt;strong id=&quot;errorf&quot;&gt;errorf&lt;/strong&gt; = .Logger.memLogFunctions！cast（LogLevel）cast（ubyte）128u.logImplf（int行= __LINE__，字符串文件= __FILE__，字符串funcName = __FUNCTION__，字符串prettyFuncName = __PRETTY_FUNCTION__，字符串moduleName = __MODULE__，A ...） （惰性布尔条件，惰性字符串味精，惰性A args）；</target>
        </trans-unit>
        <trans-unit id="09d8be46088ed5055601e43ef194715549282d57" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;errorf&quot;&gt;errorf&lt;/strong&gt; = defaultLogFunctionf!cast(LogLevel)cast(ubyte)128u.defaultLogFunctionf(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy string msg, lazy A args);</source>
          <target state="translated">别名&lt;strong id=&quot;errorf&quot;&gt;errorf&lt;/strong&gt; = defaultLogFunctionf！cast（LogLevel）cast（ubyte）128u.defaultLogFunctionf（int line = __LINE__，字符串文件= __FILE__，字符串funcName = __FUNCTION__，字符串prettyFuncName = __PRETTY_FUNCTION__，字符串moduleName = __MODULE__，A ...） msg，惰性A参数）；</target>
        </trans-unit>
        <trans-unit id="bdb6a6a71ba3292a78719cb29cca2f8bbb73b324" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;exp&quot;&gt;exp&lt;/strong&gt; = &lt;strong id=&quot;exp&quot;&gt;exp&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;exp&quot;&gt;exp&lt;/strong&gt; = &lt;strong id=&quot;exp&quot;&gt;exp&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="a763a89fde6207ea26282d57ddb72cfe0f60c341" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;exp&quot;&gt;exp&lt;/strong&gt; = core.stdc.complex.cexpl;</source>
          <target state="translated">别名&lt;strong id=&quot;exp&quot;&gt;exp&lt;/strong&gt; = core.stdc.complex.cexpl;</target>
        </trans-unit>
        <trans-unit id="60e56da2d2e0acd344c745e09f8b93b4a6edb711" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;exp2&quot;&gt;exp2&lt;/strong&gt; = &lt;strong id=&quot;exp2&quot;&gt;exp2&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;exp2&quot;&gt;exp2&lt;/strong&gt; = &lt;strong id=&quot;exp2&quot;&gt;exp2&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="bb7321d58e976ff74a680655fb1da02f4be3878f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;exp2&quot;&gt;exp2&lt;/strong&gt; = core.stdc.math.exp2l;</source>
          <target state="translated">别名&lt;strong id=&quot;exp2&quot;&gt;exp2&lt;/strong&gt; = core.stdc.math.exp2l;</target>
        </trans-unit>
        <trans-unit id="ae10acffc126d3400f587d66fc7e26cac2404a95" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;expm1&quot;&gt;expm1&lt;/strong&gt; = &lt;strong id=&quot;expm1&quot;&gt;expm1&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;expm1&quot;&gt;expm1&lt;/strong&gt; = &lt;strong id=&quot;expm1&quot;&gt;expm1&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="cbc3e66b62fc6557ba0661252df59f31b4f3b754" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;expm1&quot;&gt;expm1&lt;/strong&gt; = core.stdc.math.expm1l;</source>
          <target state="translated">别名&lt;strong id=&quot;expm1&quot;&gt;expm1&lt;/strong&gt; = core.stdc.math.expm1l;</target>
        </trans-unit>
        <trans-unit id="e4a5947ef92b1e17a8c19496aab435aa37965b7c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fabs&quot;&gt;fabs&lt;/strong&gt; = &lt;strong id=&quot;fabs&quot;&gt;fabs&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;fabs&quot;&gt;fabs&lt;/strong&gt; = &lt;strong id=&quot;fabs&quot;&gt;fabs&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5b8151574f03c901640c148933358716d810c704" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fabs&quot;&gt;fabs&lt;/strong&gt; = core.stdc.complex.cabsl;</source>
          <target state="translated">别名&lt;strong id=&quot;fabs&quot;&gt;fabs&lt;/strong&gt; = core.stdc.complex.cabsl;</target>
        </trans-unit>
        <trans-unit id="0d1f86aa3e812df99cad3fb48ac779d0de46cb4c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;false_type&quot;&gt;false_type&lt;/strong&gt; = integral_constant!(bool, false).integral_constant;</source>
          <target state="translated">别名&lt;strong id=&quot;false_type&quot;&gt;false_type&lt;/strong&gt; = &lt;strong id=&quot;false_type&quot;&gt;integer_constant&lt;/strong&gt;！（bool，false）.integral_constant;</target>
        </trans-unit>
        <trans-unit id="09ea54bdab555de209f9984793c18a30056b5818" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fatal&quot;&gt;fatal&lt;/strong&gt; = .Logger.memLogFunctions!cast(LogLevel)cast(ubyte)192u.logImpl(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy A args) if (args.length == 0 || args.length &amp;gt; 0 &amp;amp;&amp;amp; !is(A[0] : bool));</source>
          <target state="translated">别名&lt;strong id=&quot;fatal&quot;&gt;致命&lt;/strong&gt; = .Logger.memLogFunctions！ （惰性A args）如果（args.length == 0 || args.length&amp;gt; 0 &amp;amp;&amp;amp;！is（A [0]：bool））;</target>
        </trans-unit>
        <trans-unit id="6d05d8c9a2473517929fa029fe61c3e6c55aed7c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fatal&quot;&gt;fatal&lt;/strong&gt; = defaultLogFunction!cast(LogLevel)cast(ubyte)192u.defaultLogFunction(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy A args) if (args.length &amp;gt; 0 &amp;amp;&amp;amp; !is(Unqual!(A[0]) : bool) || args.length == 0);</source>
          <target state="translated">别名&lt;strong id=&quot;fatal&quot;&gt;fatal&lt;/strong&gt; = defaultLogFunction！cast（LogLevel）cast（ubyte）192u.defaultLogFunction（int行= __LINE__，字符串文件= __FILE__，字符串funcName = __FUNCTION__，字符串prettyFuncName = __PRETTY_FUNCTION__，字符串moduleName = __MODULE__，A ...） args）if（args.length&amp;gt; 0 &amp;amp;&amp;amp;！is（Unqual！（A [0]）：bool）|| args.length == 0）;</target>
        </trans-unit>
        <trans-unit id="74e050175aeb5dffef6e320510ba79fd6e2d1372" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fatalf&quot;&gt;fatalf&lt;/strong&gt; = .Logger.memLogFunctions!cast(LogLevel)cast(ubyte)192u.logImplf(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy bool condition, lazy string msg, lazy A args);</source>
          <target state="translated">别名&lt;strong id=&quot;fatalf&quot;&gt;fatalf&lt;/strong&gt; = .Logger.memLogFunctions！cast（LogLevel）cast（ubyte）192u.logImplf（int行= __LINE__，字符串文件= __FILE__，字符串funcName = __FUNCTION__，字符串prettyFuncName = __PRETTY_FUNCTION__，字符串moduleName = __MODULE__，A ...） （惰性布尔条件，惰性字符串味精，惰性A args）；</target>
        </trans-unit>
        <trans-unit id="a70f22dd1f1712102f579ad0e11fce1ec177f07a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fatalf&quot;&gt;fatalf&lt;/strong&gt; = defaultLogFunctionf!cast(LogLevel)cast(ubyte)192u.defaultLogFunctionf(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy string msg, lazy A args);</source>
          <target state="translated">别名&lt;strong id=&quot;fatalf&quot;&gt;fatalf&lt;/strong&gt; = defaultLogFunctionf！cast（LogLevel）cast（ubyte）192u.defaultLogFunctionf（int行= __LINE__，字符串文件= __FILE__，字符串funcName = __FUNCTION__，字符串prettyFuncName = __PRETTY_FUNCTION__，字符串moduleName = __MODULE__，A ...）（惰性字符串msg，惰性A参数）；</target>
        </trans-unit>
        <trans-unit id="3df64f048a39b2f594b4da992f17ea3de61b8127" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fd_set&quot;&gt;fd_set&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;fd_set&quot;&gt;fd_set&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="e402ba28bc56434c0c97e1ece5fd5d86e5d97bef" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fdim&quot;&gt;fdim&lt;/strong&gt; = &lt;strong id=&quot;fdim&quot;&gt;fdim&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;fdim&quot;&gt;fdim&lt;/strong&gt; = &lt;strong id=&quot;fdim&quot;&gt;fdim&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="eac035b41cca6013ff4cee988e05370d9c750f0f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fdim&quot;&gt;fdim&lt;/strong&gt; = core.stdc.math.fdiml;</source>
          <target state="translated">别名&lt;strong id=&quot;fdim&quot;&gt;fdim&lt;/strong&gt; = core.stdc.math.fdiml;</target>
        </trans-unit>
        <trans-unit id="191e95dabbefbad78b4aefcf87f5e8ec6d8e6570" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fieldNames&quot;&gt;fieldNames&lt;/strong&gt; = staticMap!(extractName, fieldSpecs);</source>
          <target state="translated">别名&lt;strong id=&quot;fieldNames&quot;&gt;fieldNames&lt;/strong&gt; = staticMap！（extractName，fieldSpecs）;</target>
        </trans-unit>
        <trans-unit id="647a300f652c7c2371558508d1c49d333d746afb" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;float4&quot;&gt;float4&lt;/strong&gt; = __vector(float[4]);</source>
          <target state="translated">别名&lt;strong id=&quot;float4&quot;&gt;float4&lt;/strong&gt; = __vector（float [4]）;</target>
        </trans-unit>
        <trans-unit id="d9b4907872e355147abd9046813ee5e717c7ff5d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;float_t&quot;&gt;float_t&lt;/strong&gt; = float;</source>
          <target state="translated">别名&lt;strong id=&quot;float_t&quot;&gt;float_t&lt;/strong&gt; = float;</target>
        </trans-unit>
        <trans-unit id="930400c4196eedc89223e9a9d1621f3a8bb15f8d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;floor&quot;&gt;floor&lt;/strong&gt; = &lt;strong id=&quot;floor&quot;&gt;floor&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;floor&quot;&gt;地板&lt;/strong&gt; = &lt;strong id=&quot;floor&quot;&gt;地板&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="053ab22463b06f2cf25e7f9666d3729369ea36d2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;floor&quot;&gt;floor&lt;/strong&gt; = core.stdc.math.floorl;</source>
          <target state="translated">别名&lt;strong id=&quot;floor&quot;&gt;层&lt;/strong&gt; = core.stdc.math.floorl;</target>
        </trans-unit>
        <trans-unit id="a78502808249c2a1987ddb87c967d69423ac2c50" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fma&quot;&gt;fma&lt;/strong&gt; = &lt;strong id=&quot;fma&quot;&gt;fma&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;fma&quot;&gt;fma&lt;/strong&gt; = &lt;strong id=&quot;fma&quot;&gt;fma&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="49d1b86ae544159cc1aa654eb753b0b4fff2726a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fma&quot;&gt;fma&lt;/strong&gt; = core.stdc.math.fmal;</source>
          <target state="translated">别名&lt;strong id=&quot;fma&quot;&gt;fma&lt;/strong&gt; = core.stdc.math.fmal;</target>
        </trans-unit>
        <trans-unit id="cfe7906d58b71c75f021b52905c1d569c18fa71b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fmax&quot;&gt;fmax&lt;/strong&gt; = &lt;strong id=&quot;fmax&quot;&gt;fmax&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;fmax&quot;&gt;fmax&lt;/strong&gt; = &lt;strong id=&quot;fmax&quot;&gt;fmax&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f5d48e8b74614bc612564a820e11fa323f37c747" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fmax&quot;&gt;fmax&lt;/strong&gt; = core.stdc.math.fmaxl;</source>
          <target state="translated">别名&lt;strong id=&quot;fmax&quot;&gt;fmax&lt;/strong&gt; = core.stdc.math.fmaxl;</target>
        </trans-unit>
        <trans-unit id="b3b692a6739dc9ede38eda3e443518d69044a4d1" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fmin&quot;&gt;fmin&lt;/strong&gt; = &lt;strong id=&quot;fmin&quot;&gt;fmin&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;fmin&quot;&gt;fmin&lt;/strong&gt; = &lt;strong id=&quot;fmin&quot;&gt;fmin&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f396a8f9ac4db9633914b754d89439a9d7ec0b97" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fmin&quot;&gt;fmin&lt;/strong&gt; = core.stdc.math.fminl;</source>
          <target state="translated">别名&lt;strong id=&quot;fmin&quot;&gt;fmin&lt;/strong&gt; = core.stdc.math.fminl;</target>
        </trans-unit>
        <trans-unit id="58b5365b2be289c3ecb8273e5096266c1a793bc5" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fmod&quot;&gt;fmod&lt;/strong&gt; = &lt;strong id=&quot;fmod&quot;&gt;fmod&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;fmod&quot;&gt;fmod&lt;/strong&gt; = &lt;strong id=&quot;fmod&quot;&gt;fmod&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b9eb7f51d099711a013023235f2f6f3b2c882296" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fmod&quot;&gt;fmod&lt;/strong&gt; = core.stdc.math.fmodl;</source>
          <target state="translated">别名&lt;strong id=&quot;fmod&quot;&gt;fmod&lt;/strong&gt; = core.stdc.math.fmodl;</target>
        </trans-unit>
        <trans-unit id="6e30f6c6fa158de00ab24de3d0c8e5159001f3ec" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;frexp&quot;&gt;frexp&lt;/strong&gt; = &lt;strong id=&quot;frexp&quot;&gt;frexp&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;frexp&quot;&gt;frexp&lt;/strong&gt; = &lt;strong id=&quot;frexp&quot;&gt;frexp&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="13a3b27a949be06e6c7616edff1fcfff53619208" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;frexp&quot;&gt;frexp&lt;/strong&gt; = core.stdc.math.frexpl;</source>
          <target state="translated">别名&lt;strong id=&quot;frexp&quot;&gt;frexp&lt;/strong&gt; = core.stdc.math.frexpl;</target>
        </trans-unit>
        <trans-unit id="ab4ac1d4eab61f6485c4df7a3cd3163ae47631dc" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fts5_extension_function&quot;&gt;fts5_extension_function&lt;/strong&gt; = extern (C) void function(const(Fts5ExtensionApi*) pApi, Fts5Context* pFts, sqlite3_context* pCtx, int nVal, sqlite3_value** apVal) nothrow;</source>
          <target state="translated">别名&lt;strong id=&quot;fts5_extension_function&quot;&gt;fts5_extension_function&lt;/strong&gt; = extern（C）void function（const（Fts5ExtensionApi *）pApi，Fts5Context * pFts，sqlite3_context * pCtx，int nVal，sqlite3_value ** apVal）nothrow;</target>
        </trans-unit>
        <trans-unit id="d1157c51c97dfc5056057d3e75081848467d1f91" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;gcClrFn&quot;&gt;gcClrFn&lt;/strong&gt; = extern (C) void function();</source>
          <target state="translated">别名&lt;strong id=&quot;gcClrFn&quot;&gt;gcClrFn&lt;/strong&gt; = extern（C）void function（）;</target>
        </trans-unit>
        <trans-unit id="6a0b82b00d551e37916a8df71f2ea18b55192306" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;gcGetFn&quot;&gt;gcGetFn&lt;/strong&gt; = extern (C) void* function();</source>
          <target state="translated">别名&lt;strong id=&quot;gcGetFn&quot;&gt;gcGetFn&lt;/strong&gt; = extern（C）void * function（）;</target>
        </trans-unit>
        <trans-unit id="12a1a5ce49605fb0b87b37b2ca38f7a2f5fc250b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;gcSetFn&quot;&gt;gcSetFn&lt;/strong&gt; = extern (C) void function(void*);</source>
          <target state="translated">别名&lt;strong id=&quot;gcSetFn&quot;&gt;gcSetFn&lt;/strong&gt; = extern（C）void function（void *）;</target>
        </trans-unit>
        <trans-unit id="5546b5ca3ce0eb55b8312e0e07f3e584d4454e44" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;getpid&quot;&gt;getpid&lt;/strong&gt; = core.sys.posix.unistd.&lt;strong id=&quot;getpid&quot;&gt;getpid&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;getpid&quot;&gt;getpid&lt;/strong&gt; = core.sys.posix.unistd。&lt;strong id=&quot;getpid&quot;&gt;脾气暴躁&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="72470660f42a93a763736f84d0fa0b7745fb9aee" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;greaterThan&quot;&gt;greaterThan&lt;/strong&gt; = safeOp!&quot;&amp;gt;&quot;.safeOp(T0, T1)(auto ref T0 a, auto ref T1 b);</source>
          <target state="translated">别名&lt;strong id=&quot;greaterThan&quot;&gt;GREATERTHAN&lt;/strong&gt; = safeOp &amp;ldquo;&amp;gt;&amp;rdquo; safeOp（T0，T1）（自动REF T0一个，自动REF T1 B）！。</target>
        </trans-unit>
        <trans-unit id="254f04dbdcdd078872c5dee9d13531e4ebf7fca9" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;hnsecs&quot;&gt;hnsecs&lt;/strong&gt; = dur!&quot;&lt;strong id=&quot;hnsecs&quot;&gt;hnsecs&lt;/strong&gt;&quot;.dur;</source>
          <target state="translated">别名&lt;strong id=&quot;hnsecs&quot;&gt;hnsecs&lt;/strong&gt; = dur！&amp;ldquo; &lt;strong id=&quot;hnsecs&quot;&gt;hnsecs&lt;/strong&gt; &amp;rdquo; .dur;</target>
        </trans-unit>
        <trans-unit id="009cc77f25a38fb8854d1926b21d038c0ca26c44" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;hours&quot;&gt;hours&lt;/strong&gt; = dur!&quot;&lt;strong id=&quot;hours&quot;&gt;hours&lt;/strong&gt;&quot;.dur;</source>
          <target state="translated">别名&lt;strong id=&quot;hours&quot;&gt;小时&lt;/strong&gt; = dur！&amp;ldquo; &lt;strong id=&quot;hours&quot;&gt;小时&lt;/strong&gt; &amp;rdquo; .dur;</target>
        </trans-unit>
        <trans-unit id="7c20c0fcdf02912adfdbd501d2a96e77806e6fac" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;hypot&quot;&gt;hypot&lt;/strong&gt; = &lt;strong id=&quot;hypot&quot;&gt;hypot&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;hypot&quot;&gt;hypot&lt;/strong&gt; = &lt;strong id=&quot;hypot&quot;&gt;hypot&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4b8dd7a2d6a819b8d1dcee378c53c5f6f88e90af" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;hypot&quot;&gt;hypot&lt;/strong&gt; = core.stdc.math.hypotl;</source>
          <target state="translated">别名&lt;strong id=&quot;hypot&quot;&gt;hypot将&lt;/strong&gt; = core.stdc.math.hypotl;</target>
        </trans-unit>
        <trans-unit id="e11794c2a6fef14be5a474387eaec51fc611eb8b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ilogb&quot;&gt;ilogb&lt;/strong&gt; = &lt;strong id=&quot;ilogb&quot;&gt;ilogb&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;ilogb&quot;&gt;ilogb&lt;/strong&gt; = &lt;strong id=&quot;ilogb&quot;&gt;ilogb&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="7b75669f6326ec453ddbfffa2574a0ff8d6f76f1" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ilogb&quot;&gt;ilogb&lt;/strong&gt; = core.stdc.math.ilogbl;</source>
          <target state="translated">别名&lt;strong id=&quot;ilogb&quot;&gt;ilogb&lt;/strong&gt; = core.stdc.math.ilogbl;</target>
        </trans-unit>
        <trans-unit id="88abf7565636c3fff93c5c5491b3bf12fbd1cc17" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;imaginary&quot;&gt;imaginary&lt;/strong&gt; = ireal;</source>
          <target state="translated">&lt;strong id=&quot;imaginary&quot;&gt;假想&lt;/strong&gt;别名= ireal;</target>
        </trans-unit>
        <trans-unit id="1db986705439e3be32417cc44e181f7931ba18e7" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;info&quot;&gt;info&lt;/strong&gt; = .Logger.memLogFunctions!cast(LogLevel)cast(ubyte)64u.logImpl(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy A args) if (args.length == 0 || args.length &amp;gt; 0 &amp;amp;&amp;amp; !is(A[0] : bool));</source>
          <target state="translated">别名&lt;strong id=&quot;info&quot;&gt;信息&lt;/strong&gt; = .Logger.memLogFunctions！cast（LogLevel）cast（ubyte）64u.logImpl（int行= __LINE__，字符串文件= __FILE__，字符串funcName = __FUNCTION__，字符串prettyFuncName = __PRETTY_FUNCTION__，字符串moduleName = __MODULE__，A ...） （惰性A args）如果（args.length == 0 || args.length&amp;gt; 0 &amp;amp;&amp;amp;！is（A [0]：bool））;</target>
        </trans-unit>
        <trans-unit id="1c0f4e431fb00a2c95a800c4151384e7b0bfd537" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;info&quot;&gt;info&lt;/strong&gt; = defaultLogFunction!cast(LogLevel)cast(ubyte)64u.defaultLogFunction(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy A args) if (args.length &amp;gt; 0 &amp;amp;&amp;amp; !is(Unqual!(A[0]) : bool) || args.length == 0);</source>
          <target state="translated">别名&lt;strong id=&quot;info&quot;&gt;信息&lt;/strong&gt; = defaultLogFunction！cast（LogLevel）cast（ubyte）64u.defaultLogFunction（int行= __LINE__，字符串文件= __FILE__，字符串funcName = __FUNCTION__，字符串prettyFuncName = __PRETTY_FUNCTION__，字符串moduleName = __MODULE__，A ...） args）if（args.length&amp;gt; 0 &amp;amp;&amp;amp;！is（Unqual！（A [0]）：bool）|| args.length == 0）;</target>
        </trans-unit>
        <trans-unit id="194c4de22f2da8ff8029b84998814e0209e18e58" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;infof&quot;&gt;infof&lt;/strong&gt; = .Logger.memLogFunctions!cast(LogLevel)cast(ubyte)64u.logImplf(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy bool condition, lazy string msg, lazy A args);</source>
          <target state="translated">别名&lt;strong id=&quot;infof&quot;&gt;infof&lt;/strong&gt; = .Logger.memLogFunctions！cast（LogLevel）cast（ubyte）64u.logImplf（int行= __LINE__，字符串文件= __FILE__，字符串funcName = __FUNCTION__，字符串prettyFuncName = __PRETTY_FUNCTION__，字符串moduleName = __MODULE__，A ...） （惰性布尔条件，惰性字符串味精，惰性A args）；</target>
        </trans-unit>
        <trans-unit id="da3a4ae28771efac9ce7731a5a77e054b194dc71" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;infof&quot;&gt;infof&lt;/strong&gt; = defaultLogFunctionf!cast(LogLevel)cast(ubyte)64u.defaultLogFunctionf(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy string msg, lazy A args);</source>
          <target state="translated">别名&lt;strong id=&quot;infof&quot;&gt;infof&lt;/strong&gt; = defaultLogFunctionf！cast（LogLevel）cast（ubyte）64u.defaultLogFunctionf（int行= __LINE__，字符串文件= __FILE__，字符串funcName = __FUNCTION__，字符串prettyFuncName = __PRETTY_FUNCTION__，字符串moduleName = __MODULE__，A ...） msg，惰性A参数）；</target>
        </trans-unit>
        <trans-unit id="b8aeabb76fc8df350ee662d907d051acd47055ca" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;insert&quot;&gt;insert&lt;/strong&gt; = insertBack;</source>
          <target state="translated">别名&lt;strong id=&quot;insert&quot;&gt;insert&lt;/strong&gt; = insertBack;</target>
        </trans-unit>
        <trans-unit id="b4d436274378ca3c9e4313d40392b5c5b187bd9f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;insert&quot;&gt;insert&lt;/strong&gt; = insertFront;</source>
          <target state="translated">别名&lt;strong id=&quot;insert&quot;&gt;insert&lt;/strong&gt; = insertFront;</target>
        </trans-unit>
        <trans-unit id="472e113d06fe974aaafada3f717ebae6c78df469" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;insert&quot;&gt;insert&lt;/strong&gt; = stableInsert;</source>
          <target state="translated">别名&lt;strong id=&quot;insert&quot;&gt;insert&lt;/strong&gt; = stableInsert;</target>
        </trans-unit>
        <trans-unit id="63c644f0388342b356f6df09446322ee85fd65ce" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int16_t&quot;&gt;int16_t&lt;/strong&gt; = short;</source>
          <target state="translated">别名&lt;strong id=&quot;int16_t&quot;&gt;int16_t&lt;/strong&gt; = short;</target>
        </trans-unit>
        <trans-unit id="938053c3db1a2f952f9837a408a37e6aca729f5b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int32_t&quot;&gt;int32_t&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;int32_t&quot;&gt;int32_t&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="aee7457cf0fa039b4d36fc709a814a9dfc9dcd31" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int4&quot;&gt;int4&lt;/strong&gt; = __vector(int[4]);</source>
          <target state="translated">别名&lt;strong id=&quot;int4&quot;&gt;int4&lt;/strong&gt; = __vector（int [4]）;</target>
        </trans-unit>
        <trans-unit id="d09ac7a514014921e753325664c4b7692553d08c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int64_t&quot;&gt;int64_t&lt;/strong&gt; = long;</source>
          <target state="translated">别名&lt;strong id=&quot;int64_t&quot;&gt;int64_t&lt;/strong&gt; = long;</target>
        </trans-unit>
        <trans-unit id="a2fdb8fc4f7935df32cb8f521759c47359d4ad53" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int8_t&quot;&gt;int8_t&lt;/strong&gt; = byte;</source>
          <target state="translated">别名&lt;strong id=&quot;int8_t&quot;&gt;int8_t&lt;/strong&gt; =字节;</target>
        </trans-unit>
        <trans-unit id="ef10d7904263c2c68ee37680881fbf5cab8da090" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int_fast16_t&quot;&gt;int_fast16_t&lt;/strong&gt; = long;</source>
          <target state="translated">别名&lt;strong id=&quot;int_fast16_t&quot;&gt;int_fast16_t&lt;/strong&gt; = long;</target>
        </trans-unit>
        <trans-unit id="72f4ea0f6044879fcd85e4b16c381993888e0e4c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int_fast32_t&quot;&gt;int_fast32_t&lt;/strong&gt; = long;</source>
          <target state="translated">别名&lt;strong id=&quot;int_fast32_t&quot;&gt;int_fast32_t&lt;/strong&gt; = long;</target>
        </trans-unit>
        <trans-unit id="c6ebe00fe5b4b3407edefc41775701e0c86492cf" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int_fast64_t&quot;&gt;int_fast64_t&lt;/strong&gt; = long;</source>
          <target state="translated">别名&lt;strong id=&quot;int_fast64_t&quot;&gt;int_fast64_t&lt;/strong&gt; = long;</target>
        </trans-unit>
        <trans-unit id="d74549578a0b3548b0f2c6e70f56037dd7f5dfd1" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int_fast8_t&quot;&gt;int_fast8_t&lt;/strong&gt; = byte;</source>
          <target state="translated">别名&lt;strong id=&quot;int_fast8_t&quot;&gt;int_fast8_t&lt;/strong&gt; =字节;</target>
        </trans-unit>
        <trans-unit id="fbce74d115baf8f06fddb26c06f2bf0df519b910" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int_least16_t&quot;&gt;int_least16_t&lt;/strong&gt; = short;</source>
          <target state="translated">别名&lt;strong id=&quot;int_least16_t&quot;&gt;int_least16_t&lt;/strong&gt; =短;</target>
        </trans-unit>
        <trans-unit id="67f73d437b2304e3b407c8ab87cd000282603143" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int_least32_t&quot;&gt;int_least32_t&lt;/strong&gt; = int;</source>
          <target state="translated">别名&lt;strong id=&quot;int_least32_t&quot;&gt;int_least32_t&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="5817a8981d079e5e1dc046d0a7e4f59dc3ed6a2a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int_least64_t&quot;&gt;int_least64_t&lt;/strong&gt; = long;</source>
          <target state="translated">别名&lt;strong id=&quot;int_least64_t&quot;&gt;int_least64_t&lt;/strong&gt; = long;</target>
        </trans-unit>
        <trans-unit id="44cc1b815f41f02e035206aa5793b4ea760a2dc7" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int_least8_t&quot;&gt;int_least8_t&lt;/strong&gt; = byte;</source>
          <target state="translated">别名&lt;strong id=&quot;int_least8_t&quot;&gt;int_least8_t&lt;/strong&gt; =字节;</target>
        </trans-unit>
        <trans-unit id="8eb07e228710eb2adebe5faff10d1e90bf9b1d58" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;intmax_t&quot;&gt;intmax_t&lt;/strong&gt; = long;</source>
          <target state="translated">别名&lt;strong id=&quot;intmax_t&quot;&gt;intmax_t&lt;/strong&gt; = long;</target>
        </trans-unit>
        <trans-unit id="203b6c89737da4a11f46cb099705a2cd71312e19" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;intptr_t&quot;&gt;intptr_t&lt;/strong&gt; = long;</source>
          <target state="translated">别名&lt;strong id=&quot;intptr_t&quot;&gt;intptr_t&lt;/strong&gt; = long;</target>
        </trans-unit>
        <trans-unit id="b2220c08db7d1cb26676cf1f8ae84a288f55a5e5" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;isExpressionTuple&quot;&gt;isExpressionTuple&lt;/strong&gt; = isExpressions(T...);</source>
          <target state="translated">别名&lt;strong id=&quot;isExpressionTuple&quot;&gt;isExpressionTuple&lt;/strong&gt; = isExpressions（T ...）;</target>
        </trans-unit>
        <trans-unit id="e5bfe324afeac8d43a0b29768ce8c9fc64686c7f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ldexp&quot;&gt;ldexp&lt;/strong&gt; = &lt;strong id=&quot;ldexp&quot;&gt;ldexp&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;ldexp&quot;&gt;ldexp&lt;/strong&gt; = &lt;strong id=&quot;ldexp&quot;&gt;ldexp&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5a2ae907a38aedddf316557818b905a71f1f9767" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ldexp&quot;&gt;ldexp&lt;/strong&gt; = core.stdc.math.ldexpl;</source>
          <target state="translated">别名&lt;strong id=&quot;ldexp&quot;&gt;ldexp&lt;/strong&gt; = core.stdc.math.ldexpl;</target>
        </trans-unit>
        <trans-unit id="cf63d6637832063bc30b67f97730f7d6801fc643" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;length&quot;&gt;length&lt;/strong&gt; = size;</source>
          <target state="translated">别名&lt;strong id=&quot;length&quot;&gt;长度&lt;/strong&gt; =大小；</target>
        </trans-unit>
        <trans-unit id="f08be964780f77b29d62652f674be3726dd6ffce" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;lessThan&quot;&gt;lessThan&lt;/strong&gt; = safeOp!&quot;&amp;lt;&quot;.safeOp(T0, T1)(auto ref T0 a, auto ref T1 b);</source>
          <target state="translated">别名&lt;strong id=&quot;lessThan&quot;&gt;lessThan&lt;/strong&gt; = safeOp！&amp;ldquo; &amp;lt;&amp;rdquo;。safeOp（T0，T1）（自动参考T0a，自动参考T1b）;</target>
        </trans-unit>
        <trans-unit id="919d6edc6ee50f8e6b80bbd1e5eb4cd641dbf1c5" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;lgamma&quot;&gt;lgamma&lt;/strong&gt; = &lt;strong id=&quot;lgamma&quot;&gt;lgamma&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;lgamma&quot;&gt;lgamma&lt;/strong&gt; = &lt;strong id=&quot;lgamma&quot;&gt;lgamma&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="a3c50ca502dc7175879a4ddb56d49d6e6104e086" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;lgamma&quot;&gt;lgamma&lt;/strong&gt; = core.stdc.math.lgammal;</source>
          <target state="translated">别名 &lt;strong id=&quot;lgamma&quot;&gt; lgamma&lt;/strong&gt; = core.stdc.math.lgammal;</target>
        </trans-unit>
        <trans-unit id="9ba7f609c07cee2cd58245e9ddd336e3eb675b83" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;linearInsert&quot;&gt;linearInsert&lt;/strong&gt; = insertBack;</source>
          <target state="translated">别名&lt;strong id=&quot;linearInsert&quot;&gt;linearInsert&lt;/strong&gt; = insertBack;</target>
        </trans-unit>
        <trans-unit id="9a3e53f928cb943cc25c73ca06dd48f2cf6171f6" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;llrint&quot;&gt;llrint&lt;/strong&gt; = &lt;strong id=&quot;llrint&quot;&gt;llrint&lt;/strong&gt;;</source>
          <target state="translated">别名&lt;strong id=&quot;llrint&quot;&gt;llrint&lt;/strong&gt; = &lt;strong id=&quot;llrint&quot;&gt;llrint&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d8087b5da29833db77c79f911503c34ea63b6c0a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;llrint&quot;&gt;llrint&lt;/strong&gt; = core.stdc.math.llrintl;</source>
          <target state="translated">别名&lt;strong id=&quot;llrint&quot;&gt;llrint&lt;/strong&gt; = core.stdc.math.llrintl;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
