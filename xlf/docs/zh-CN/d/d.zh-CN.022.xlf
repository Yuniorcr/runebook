<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="d">
    <body>
      <group id="d">
        <trans-unit id="93a7e558e0aeedd54f6dee5a37efe3afb6f4c131" translate="yes" xml:space="preserve">
          <source>LsdaResult &lt;strong id=&quot;scanLSDA&quot;&gt;scanLSDA&lt;/strong&gt;(const(ubyte)* lsda, _Unwind_Ptr ip, _Unwind_Exception_Class exceptionClass, bool cleanupsOnly, bool preferHandler, _Unwind_Exception* exceptionObject, out _Unwind_Ptr landingPad, out int handler);</source>
          <target state="translated">LsdaResult &lt;strong id=&quot;scanLSDA&quot;&gt;scanLSDA&lt;/strong&gt;（const（ubyte）* lsda，_Unwind_Ptr ip，_Unwind_Exception_Class exceptionClass，bool cleansOnly，bool preferredHandler，_Unwind_Exception * exceptionObject，out _Unwind_Ptr landingPad，out int handler）;复制代码</target>
        </trans-unit>
        <trans-unit id="f41a055096fba2f5ebbddc8916d81727739dbdb3" translate="yes" xml:space="preserve">
          <source>Lt</source>
          <target state="translated">Lt</target>
        </trans-unit>
        <trans-unit id="eef6ef9869ba818327c7d9505b56279d719e493a" translate="yes" xml:space="preserve">
          <source>Lu</source>
          <target state="translated">Lu</target>
        </trans-unit>
        <trans-unit id="717f61ff64cc1d6b73a3c57e533103b3f6a567a9" translate="yes" xml:space="preserve">
          <source>LwrExpression</source>
          <target state="translated">LwrExpression</target>
        </trans-unit>
        <trans-unit id="f9156a05ab3755f6c7a6aab965a12bc73fd9cc2c" translate="yes" xml:space="preserve">
          <source>Lycian</source>
          <target state="translated">Lycian</target>
        </trans-unit>
        <trans-unit id="253fa34d4b816ad16ebad60a0945ef037709d0b8" translate="yes" xml:space="preserve">
          <source>Lydian</source>
          <target state="translated">Lydian</target>
        </trans-unit>
        <trans-unit id="c63ae6dd4fc9f9dda66970e827d13f7c73fe841c" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>
        </trans-unit>
        <trans-unit id="b6d557e553638176bbc7442ef35ab7cffd41c1e4" translate="yes" xml:space="preserve">
          <source>MATCH &lt;strong id=&quot;callMatch&quot;&gt;callMatch&lt;/strong&gt;(Type tthis, Expression[] args, int flag = 0, const(char)** pMessage = null, Scope* sc = null);</source>
          <target state="translated">MATCH &lt;strong id=&quot;callMatch&quot;&gt;callMatch&lt;/strong&gt;（类型&lt;strong id=&quot;callMatch&quot;&gt;tthis&lt;/strong&gt;，Expression [] args，int flag = 0，const（char）** pMessage = null，Scope * sc = null）;</target>
        </trans-unit>
        <trans-unit id="63c0d0982dd717fe106c7dfaf4dbef053e569f37" translate="yes" xml:space="preserve">
          <source>MATCH &lt;strong id=&quot;constConv&quot;&gt;constConv&lt;/strong&gt;(Type to);</source>
          <target state="translated">匹配&lt;strong id=&quot;constConv&quot;&gt;constConv&lt;/strong&gt;（类型为）;</target>
        </trans-unit>
        <trans-unit id="7189716dd2570ff5122c43fe6e3e0126d15533a1" translate="yes" xml:space="preserve">
          <source>MATCH &lt;strong id=&quot;deduceFunctionTemplateMatch&quot;&gt;deduceFunctionTemplateMatch&lt;/strong&gt;(TemplateInstance ti, Scope* sc, ref FuncDeclaration fd, Type tthis, Expressions* fargs);</source>
          <target state="translated">MATCH &lt;strong id=&quot;deduceFunctionTemplateMatch&quot;&gt;deduceFunctionTemplateMatch&lt;/strong&gt;（TemplateInstance ti，Scope * sc，ref FuncDeclaration fd，Type tthis，Expressions * fargs）;</target>
        </trans-unit>
        <trans-unit id="8f902d50b36da53875defe35cdfd37c8db415308" translate="yes" xml:space="preserve">
          <source>MATCH &lt;strong id=&quot;implicitConvTo&quot;&gt;implicitConvTo&lt;/strong&gt;(Expression e, Type t);</source>
          <target state="translated">MATCH &lt;strong id=&quot;implicitConvTo&quot;&gt;hiddenConvTo&lt;/strong&gt;（表达式e，类型t）;</target>
        </trans-unit>
        <trans-unit id="17f9b85399cd8eacf845a08f0ddd5c81dc4efaaf" translate="yes" xml:space="preserve">
          <source>MATCH &lt;strong id=&quot;implicitConvTo&quot;&gt;implicitConvTo&lt;/strong&gt;(Type to);</source>
          <target state="translated">MATCH &lt;strong id=&quot;implicitConvTo&quot;&gt;hiddenConvTo&lt;/strong&gt;（Type to）;</target>
        </trans-unit>
        <trans-unit id="01016d25cb7f7307f5c30d54b28b7e62898ef0f4" translate="yes" xml:space="preserve">
          <source>MATCH &lt;strong id=&quot;leastAsSpecialized&quot;&gt;leastAsSpecialized&lt;/strong&gt;(Scope* sc, TemplateDeclaration td2, Expressions* fargs);</source>
          <target state="translated">MATCH &lt;strong id=&quot;leastAsSpecialized&quot;&gt;minimumAsSpecialized&lt;/strong&gt;（Scope * sc，TemplateDeclaration td2，Expressions * fargs）;</target>
        </trans-unit>
        <trans-unit id="918dc11643797c59c58daf42cb0ca1d4a73b4d76" translate="yes" xml:space="preserve">
          <source>MATCH &lt;strong id=&quot;matchArg&quot;&gt;matchArg&lt;/strong&gt;(TemplateParameter tp, Loc instLoc, Scope* sc, Objects* tiargs, size_t i, TemplateParameters* parameters, Objects* dedtypes, Declaration* psparam);</source>
          <target state="translated">MATCH &lt;strong id=&quot;matchArg&quot;&gt;matchArg&lt;/strong&gt;（TemplateParameter tp，Loc instLoc，Scope * sc，Objects * tiargs，size_t i，TemplateParameters *参数，Objects * dedtypes，Declaration * psparam）;</target>
        </trans-unit>
        <trans-unit id="f9fa496f162d5b1d5225ec4710970983096606da" translate="yes" xml:space="preserve">
          <source>MATCH &lt;strong id=&quot;matchWithInstance&quot;&gt;matchWithInstance&lt;/strong&gt;(Scope* sc, TemplateInstance ti, Objects* dedtypes, Expressions* fargs, int flag);</source>
          <target state="translated">MATCH &lt;strong id=&quot;matchWithInstance&quot;&gt;matchWithInstance&lt;/strong&gt;（Scope * sc，TemplateInstance ti，Objects * dedtypes，Expressions * fargs，int标志）;</target>
        </trans-unit>
        <trans-unit id="5843e5e021e20b605f42acd4c88a16a007841d32" translate="yes" xml:space="preserve">
          <source>MATCH.exact 'this' == 'to' MATCH.constant 'to' is const MATCH.nomatch conversion to mutable or invariant</source>
          <target state="translated">MATCH.exact 'this' =='to' MATCH.constant 'to' 是const MATCH.nomatch 转换为可变或不变的。</target>
        </trans-unit>
        <trans-unit id="03d0a50e82b0494ec2b0ced95d0effb00b5a4de8" translate="yes" xml:space="preserve">
          <source>MATCH.nomatch, MATCH.convert, MATCH.constant, MATCH.exact</source>
          <target state="translated">MATCH.nomatch、MATCH.convert、MATCH.constant、MATCH.exact</target>
        </trans-unit>
        <trans-unit id="eceb0459a5cb4578982ccd6ce7529eeed14e4cab" translate="yes" xml:space="preserve">
          <source>MATCHxxxx</source>
          <target state="translated">MATCHxxxx</target>
        </trans-unit>
        <trans-unit id="a5f71adafc8958cac2aa5aebe8cd541186115a14" translate="yes" xml:space="preserve">
          <source>MIME type of the data, for example, &quot;text/plain&quot; or &quot;application/octet-stream&quot;. See also: &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_media_type&quot;&gt; Internet media type&lt;/a&gt; on Wikipedia.</source>
          <target state="translated">数据的MIME类型，例如&amp;ldquo;文本/纯文本&amp;rdquo;或&amp;ldquo;应用程序/八位字节流&amp;rdquo;。另请参阅：Wikipedia上的&lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_media_type&quot;&gt;Internet媒体类型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6d4631fbf4689affb8ff105bbf8ac5b78adddcd3" translate="yes" xml:space="preserve">
          <source>ML-style functional exception handling. Runs the supplied expression and returns its result. If the expression throws a &lt;code&gt;Throwable&lt;/code&gt;, runs the supplied error handler instead and return its result. The error handler's type must be the same as the expression's type.</source>
          <target state="translated">ML样式的功能异常处理。运行提供的表达式并返回其结果。如果表达式抛出 &lt;code&gt;Throwable&lt;/code&gt; ，则改为运行提供的错误处理程序并返回其结果。错误处理程序的类型必须与表达式的类型相同。</target>
        </trans-unit>
        <trans-unit id="33379ede9c84ed9d3104a88adf47b86b54d3c4fa" translate="yes" xml:space="preserve">
          <source>MOD &lt;code&gt;mod&lt;/code&gt;</source>
          <target state="translated">国防部 &lt;code&gt;mod&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="701271424e18847db6f579468d2cd5078329cdaa" translate="yes" xml:space="preserve">
          <source>MOD &lt;strong id=&quot;deduceWild&quot;&gt;deduceWild&lt;/strong&gt;(Type t, bool isRef);</source>
          <target state="translated">MOD &lt;strong id=&quot;deduceWild&quot;&gt;deruceWild&lt;/strong&gt;（类型t，bool isRef）;</target>
        </trans-unit>
        <trans-unit id="76b10e3dcb4a133c7bb6262af258f9831130f8e8" translate="yes" xml:space="preserve">
          <source>MOD bits</source>
          <target state="translated">MOD位</target>
        </trans-unit>
        <trans-unit id="84cc32aac369a52d44f13e6b163b25f342633b78" translate="yes" xml:space="preserve">
          <source>MSVC allocates on default initialisation in debug, which can't be modelled by D &lt;code&gt;struct&lt;/code&gt;</source>
          <target state="translated">MSVC在调试中分配默认的初始化，D &lt;code&gt;struct&lt;/code&gt; 无法对其进行建模</target>
        </trans-unit>
        <trans-unit id="b48af28979910507a72300805b16b39786c09205" translate="yes" xml:space="preserve">
          <source>Mac OS X</source>
          <target state="translated">Mac OS X</target>
        </trans-unit>
        <trans-unit id="bb5fc92b2d874256f372cac5c2a5b3a773e873c8" translate="yes" xml:space="preserve">
          <source>Macro Definitions Generated by Ddoc</source>
          <target state="translated">Ddoc生成的宏定义</target>
        </trans-unit>
        <trans-unit id="f267b7710be73b007f894278ea6b282b0c3b62d8" translate="yes" xml:space="preserve">
          <source>Macro Definitions from .ddoc Files on the Command Line</source>
          <target state="translated">命令行上.doc文件的宏定义</target>
        </trans-unit>
        <trans-unit id="b244d94b9e3687038ccb11df99431228edef706c" translate="yes" xml:space="preserve">
          <source>Macro Definitions from &lt;code&gt;sc.ini&lt;/code&gt;'s DDOCFILE</source>
          <target state="translated">来自 &lt;code&gt;sc.ini&lt;/code&gt; 的DDOCFILE的宏定义</target>
        </trans-unit>
        <trans-unit id="d9287b4f065fa8285b646a8b8eb23fd987c1ed50" translate="yes" xml:space="preserve">
          <source>Macro and Escape text substitution is performed to produce the final result.</source>
          <target state="translated">进行宏和转义文本替换以产生最终结果。</target>
        </trans-unit>
        <trans-unit id="0342437ac2c198171fe2e3235a577c880ee3a26d" translate="yes" xml:space="preserve">
          <source>Macro definitions come from the following sources, in the specified order:</source>
          <target state="translated">宏定义按指定顺序来自以下来源:</target>
        </trans-unit>
        <trans-unit id="64c2f043d46921aa3d0d7e83b419b8b713824341" translate="yes" xml:space="preserve">
          <source>Macro names beginning with &quot;D_&quot; and &quot;DDOC_&quot; are reserved.</source>
          <target state="translated">以 &quot;D_&quot;和 &quot;DDOC_&quot;开头的宏名称被保留。</target>
        </trans-unit>
        <trans-unit id="5300aeedfdbb4e7dc6ac9411b36bf223f7cb19b1" translate="yes" xml:space="preserve">
          <source>Macro redefinitions replace previous definitions of the same name. This means that the sequence of macro definitions from the various sources forms a hierarchy.</source>
          <target state="translated">宏的重新定义取代了以前的同名定义。这意味着来自不同来源的宏定义的序列形成了一个层次结构。</target>
        </trans-unit>
        <trans-unit id="899bd694d29ace1be956ab35177075021977560b" translate="yes" xml:space="preserve">
          <source>Macros</source>
          <target state="translated">Macros</target>
        </trans-unit>
        <trans-unit id="ab4342746df71224401959d238150c1f6538a7c1" translate="yes" xml:space="preserve">
          <source>Macros can have arguments. Any text from the end of the identifier to the closing &amp;lsquo;)&amp;rsquo; is the &amp;amp;dollar;0 argument. A &amp;amp;dollar;0 in the replacement text is replaced with the argument text. If there are commas in the argument text, &amp;amp;dollar;1 will represent the argument text up to the first comma, &amp;amp;dollar;2 from the first comma to the second comma, etc., up to &amp;amp;dollar;9. &amp;amp;dollar;+ represents the text from the first comma to the closing &amp;lsquo;)&amp;rsquo;. The argument text can contain nested parentheses, &quot;&quot; or '' strings, &lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;!--&lt;/code&gt;&lt;code&gt;...&lt;/code&gt;&lt;code&gt;--&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; comments, or tags. If stray, unnested parentheses are used, they can be &lt;a href=&quot;#punctuation_escapes&quot;&gt;backslash-escaped&lt;/a&gt;: &lt;code&gt;\(&lt;/code&gt; or &lt;code&gt;\)&lt;/code&gt;.</source>
          <target state="translated">宏可以有参数。从标识符末尾到结尾的'）'的任何文本均为＆dollar; 0参数。替换文本中的＆0替换为自变量文本。如果自变量文本中包含逗号，则$ 1将代表自变量文本，直到第一个逗号为止，＆dollar; 2从第一个逗号到第二个逗号，依此类推，直到$ 9。 ＆dollar; +表示从第一个逗号到结尾的'）'的文本。该参数文本可以包含嵌套的括号，&amp;ldquo;&amp;rdquo;或&amp;ldquo;&amp;rdquo;字符串， &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;code&gt;!--&lt;/code&gt; &lt;code&gt;...&lt;/code&gt; &lt;code&gt;--&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 评论，或标签。如果使用了杂散的，未嵌套的括号，则可以对它们进行&lt;a href=&quot;#punctuation_escapes&quot;&gt;反斜杠转义&lt;/a&gt;： &lt;code&gt;\(&lt;/code&gt; 或 &lt;code&gt;\)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3c3c4c2ccfe8372f6cd2e069e3461d5720e2dc7" translate="yes" xml:space="preserve">
          <source>Macros to ease generating code modregrm: generate mod reg r/m field modregxrm: reg could be R8..R15 modregrmx: rm could be R8..R15 modregxrmx: reg or rm could be R8..R15</source>
          <target state="translated">方便生成代码的宏 modregrm:生成mod reg r/m字段 modregxrm:reg可以是R8...R15 modregrmx:rm可以是R8...R15 modregxrmx:reg或rm可以是R8...R15。</target>
        </trans-unit>
        <trans-unit id="6b01d69d3c594ccd1f39b3609dda80d687b27a74" translate="yes" xml:space="preserve">
          <source>Mahjong Tiles</source>
          <target state="translated">麻将牌</target>
        </trans-unit>
        <trans-unit id="415d5e06ca564fdf93a52865ce8d28f3a5acb8bf" translate="yes" xml:space="preserve">
          <source>Main date types</source>
          <target state="translated">主要日期类型</target>
        </trans-unit>
        <trans-unit id="66e415faddc4e0d878f47329f905001f0f264f9c" translate="yes" xml:space="preserve">
          <source>Main functionality</source>
          <target state="translated">主要功能</target>
        </trans-unit>
        <trans-unit id="89997588a647b351fb1614fbf191614c691cf9dc" translate="yes" xml:space="preserve">
          <source>Main types</source>
          <target state="translated">主要类型</target>
        </trans-unit>
        <trans-unit id="be35592b858c062b5b0300f1bbcabf23cb933bac" translate="yes" xml:space="preserve">
          <source>Mainly just a placeholder</source>
          <target state="translated">主要是一个占位符</target>
        </trans-unit>
        <trans-unit id="6c880a7e58cb5a48462791228162b04b3cb63f18" translate="yes" xml:space="preserve">
          <source>Mainly just a placeholder of Package, Module, Nspace, and TemplateInstance (including TemplateMixin)</source>
          <target state="translated">主要只是Package、Module、Nspace和TemplateInstance(包括TemplateMixin)的占位符。</target>
        </trans-unit>
        <trans-unit id="6709119b1651a47a086b7f828dc2d3ff1312b000" translate="yes" xml:space="preserve">
          <source>Maintain another reference to that same data in another thread that the GC does know about.</source>
          <target state="translated">在另一个GC确实知道的线程中保持对相同数据的另一种参考。</target>
        </trans-unit>
        <trans-unit id="e4472e37b338e67a89fd1b5d36c98992fe68aa60" translate="yes" xml:space="preserve">
          <source>Major HTTP version ie. 1 in HTTP/1.0.</source>
          <target state="translated">主要的HTTP版本即HTTP/1.0中的1。</target>
        </trans-unit>
        <trans-unit id="a94431ee22f05f141107f9355ed3127d0f0c4d5a" translate="yes" xml:space="preserve">
          <source>Make</source>
          <target state="translated">Make</target>
        </trans-unit>
        <trans-unit id="3ba97147877901fcf3ccf5fc1131336b182b7b33" translate="yes" xml:space="preserve">
          <source>Make a common block for s.</source>
          <target state="translated">为s做一个普通的区块。</target>
        </trans-unit>
        <trans-unit id="26c580c3818b547739a9a7bd7a4237654b2d0833" translate="yes" xml:space="preserve">
          <source>Make a copy of ap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfea7cf8f1b26e91c42e125bf884c70d3ad164a" translate="yes" xml:space="preserve">
          <source>Make a dual-context container for use as a &lt;code&gt;this&lt;/code&gt; argument.</source>
          <target state="translated">制作一个双上下文容器用作 &lt;code&gt;this&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="1abfcba754e1c0302a58d5e32f10b1091f1ebe7e" translate="yes" xml:space="preserve">
          <source>Make a new directory &lt;code&gt;pathname&lt;/code&gt;.</source>
          <target state="translated">新建目录 &lt;code&gt;pathname&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c1a6e13f0addb5f5646c2abd0cb0b65b975d7ea4" translate="yes" xml:space="preserve">
          <source>Make a specific point in time in the New York timezone</source>
          <target state="translated">在纽约时区确定一个具体的时间点。</target>
        </trans-unit>
        <trans-unit id="b3f8f13ef7892bd05bbf45497a5da917ae81e2c9" translate="yes" xml:space="preserve">
          <source>Make directory and all parent directories as needed.</source>
          <target state="translated">根据需要制作目录和所有父目录。</target>
        </trans-unit>
        <trans-unit id="6da7393f911740ab04336b2af60f186b865c60f5" translate="yes" xml:space="preserve">
          <source>Make sure that the runtime hook &lt;code&gt;id&lt;/code&gt; exists.</source>
          <target state="translated">确保运行时挂钩 &lt;code&gt;id&lt;/code&gt; 存在。</target>
        </trans-unit>
        <trans-unit id="525e5a74e45c1668b80e6f1f69958698da6f4d6e" translate="yes" xml:space="preserve">
          <source>Make the next option a required option</source>
          <target state="translated">将下一个选项设为必填选项</target>
        </trans-unit>
        <trans-unit id="a77836e1ee565bdbac321b50fccddb3229a3e1a6" translate="yes" xml:space="preserve">
          <source>Make type mutable.</source>
          <target state="translated">使类型可以突变。</target>
        </trans-unit>
        <trans-unit id="4605f2e5776569eac7f1701721da7c9b10116ccc" translate="yes" xml:space="preserve">
          <source>Make type unshared. 0 =&amp;gt; 0 const =&amp;gt; const immutable =&amp;gt; immutable shared =&amp;gt; 0 shared const =&amp;gt; const wild =&amp;gt; wild wild const =&amp;gt; wild const shared wild =&amp;gt; wild shared wild const =&amp;gt; wild const</source>
          <target state="translated">将类型设为不共享。0 =&amp;gt; 0 const =&amp;gt; const不可变=&amp;gt;不变共享=&amp;gt; 0共享const =&amp;gt; const wild =&amp;gt; wild wild const =&amp;gt; wild const shared wild =&amp;gt; wild共享wild const =&amp;gt; wild const</target>
        </trans-unit>
        <trans-unit id="9e6b91f833a3dc15ae3a2a05397995784c41e6ab" translate="yes" xml:space="preserve">
          <source>Makes a copy of the given array on newly allocated memory.</source>
          <target state="translated">在新分配的内存中复制一个数组。</target>
        </trans-unit>
        <trans-unit id="5dcc70498836fb07f79353bc8ef2dfbc632b1248" translate="yes" xml:space="preserve">
          <source>Makes a null-terminated copy of the given string on newly allocated memory. The null-terminator won't be part of the returned string slice. It will be at position &lt;code&gt;n&lt;/code&gt; where &lt;code&gt;n&lt;/code&gt; is the length of the input string.</source>
          <target state="translated">在新分配的内存上以给定字符串为结尾的空副本。空终止符将不属于返回的字符串切片。它将在位置 &lt;code&gt;n&lt;/code&gt; 处，其中 &lt;code&gt;n&lt;/code&gt; 是输入字符串的长度。</target>
        </trans-unit>
        <trans-unit id="c56fa23eba2ab1fc971b9c8c2bace5681b9baed6" translate="yes" xml:space="preserve">
          <source>Makes sure the payload was properly initialized. Such a call is typically inserted before using the payload.</source>
          <target state="translated">确保有效载荷被正确初始化。这种调用通常是在使用有效载荷之前插入的。</target>
        </trans-unit>
        <trans-unit id="cdf9329928a453eb7ea93527766dc15a786af057" translate="yes" xml:space="preserve">
          <source>Making a copy of the data using &lt;a href=&quot;https://dlang.org/phobos/std_experimental_allocator.html&quot;&gt;&lt;code&gt;std.experimental.allocator&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;core.stdc.stdlib.malloc&lt;/code&gt; and passing the copy instead.</source>
          <target state="translated">使用&lt;a href=&quot;https://dlang.org/phobos/std_experimental_allocator.html&quot;&gt; &lt;code&gt;std.experimental.allocator&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;core.stdc.stdlib.malloc&lt;/code&gt; 复制数据，然后传递该副本。</target>
        </trans-unit>
        <trans-unit id="d4347a59dcc14e96dcb9203070618e3dae91bd4b" translate="yes" xml:space="preserve">
          <source>Making a copy of the data using core.stdc.stdlib.malloc() and passing the copy instead.</source>
          <target state="translated">使用core.stdc.stdlib.malloc()制作一份数据的副本,并传递副本。</target>
        </trans-unit>
        <trans-unit id="c730df3afaaac142f305e8f798eca241f12abf9f" translate="yes" xml:space="preserve">
          <source>Malayalam</source>
          <target state="translated">Malayalam</target>
        </trans-unit>
        <trans-unit id="ae60c0645f8b0ef8bf786de73f43479ecba0ff5d" translate="yes" xml:space="preserve">
          <source>Manage flow analysis for constructors.</source>
          <target state="translated">管理施工人员的流程分析。</target>
        </trans-unit>
        <trans-unit id="63617cfe427854e42387ca5fb2dd42a8d02042c4" translate="yes" xml:space="preserve">
          <source>Mandaic</source>
          <target state="translated">Mandaic</target>
        </trans-unit>
        <trans-unit id="dc3a58f069313e89dc8f96321457748a4819acb0" translate="yes" xml:space="preserve">
          <source>Mangle function signatures ('this' qualifier, and parameter types) to check conflicts in function overloads. It's different from fd.type.deco. For example, fd.type.deco would be null if fd is an auto function.</source>
          <target state="translated">Mangle函数签名('this'限定符和参数类型)来检查函数重载中的冲突。它与 fd.type.deco 不同。例如,如果 fd 是一个自动函数,那么 fd.type.deco 将为空。</target>
        </trans-unit>
        <trans-unit id="ced58ad2f9818afd78e1b67efec7988d477fb723" translate="yes" xml:space="preserve">
          <source>Mangle the given symbol for C++ ABI.</source>
          <target state="translated">Mangle给定的符号为C++ABI。</target>
        </trans-unit>
        <trans-unit id="5f2b13060b64fd11b1052222629bef3facad8f88" translate="yes" xml:space="preserve">
          <source>Mangles a D function.</source>
          <target state="translated">捣毁了一个D函数。</target>
        </trans-unit>
        <trans-unit id="a34594bca42d9e54bcfa5ae318f82eb8738df791" translate="yes" xml:space="preserve">
          <source>Mangles a D symbol.</source>
          <target state="translated">捣毁了一个D符号。</target>
        </trans-unit>
        <trans-unit id="148f8cf1414dcfee88fdea6836cf667aec741ed3" translate="yes" xml:space="preserve">
          <source>Mangling refers to how a symbol is represented in text form in the generated object file. &lt;code&gt;.mangleof&lt;/code&gt; returns a string literal of the representation of the type or symbol it is applied to. The mangling of types and symbols with D linkage is defined by &lt;a href=&quot;abi#name_mangling&quot;&gt;Name Mangling&lt;/a&gt;.</source>
          <target state="translated">重整是指如何在生成的目标文件中以文本形式表示符号。 &lt;code&gt;.mangleof&lt;/code&gt; 返回其应用的类型或符号的表示形式的字符串文字。具有D链接的类型和符号的&lt;a href=&quot;abi#name_mangling&quot;&gt;修饰&lt;/a&gt;由名称修饰定义。</target>
        </trans-unit>
        <trans-unit id="1fe7f3349feabe9c89e0c56bcd790f4f6db52a02" translate="yes" xml:space="preserve">
          <source>Manifest Constants</source>
          <target state="translated">体现常量</target>
        </trans-unit>
        <trans-unit id="dbbdf8dc2eb670e040ba223dcb25ad582879b9f4" translate="yes" xml:space="preserve">
          <source>Manifest constants are not lvalues, meaning their address cannot be taken. They exist only in the memory of the compiler.</source>
          <target state="translated">Manifest常量不是l值,这意味着它们的地址不能被获取。它们只存在于编译器的内存中。</target>
        </trans-unit>
        <trans-unit id="a6bd23ae5d1ad3b51438e4d31cc4052a69e2527b" translate="yes" xml:space="preserve">
          <source>Manipulate builtin arrays.</source>
          <target state="translated">操作内置的数组。</target>
        </trans-unit>
        <trans-unit id="b3d27b0d4934910380362c1298dce9010e6bd996" translate="yes" xml:space="preserve">
          <source>Manipulate files and directories.</source>
          <target state="translated">操作文件和目录。</target>
        </trans-unit>
        <trans-unit id="c5b5a6b88c43d3a6c6daa4ed63f323e6a3048a07" translate="yes" xml:space="preserve">
          <source>Manipulate strings that represent filesystem paths.</source>
          <target state="translated">操作表示文件系统路径的字符串。</target>
        </trans-unit>
        <trans-unit id="3e4d28d389556bd825a440f859d3401675a6c5c2" translate="yes" xml:space="preserve">
          <source>Manipulates environment variables using an associative-array-like interface.</source>
          <target state="translated">使用一个类似于关联数组的接口来操纵环境变量。</target>
        </trans-unit>
        <trans-unit id="a0c12fb39a6a73583409d354fb81a52d9a2e0a56" translate="yes" xml:space="preserve">
          <source>Manu Evans</source>
          <target state="translated">Manu Evans</target>
        </trans-unit>
        <trans-unit id="a747304ebc9a5c399ecad10827e0d5fb3537bd7f" translate="yes" xml:space="preserve">
          <source>Manual D main (for druntime initialization), which forwards to &lt;code&gt;tryMain&lt;/code&gt;.</source>
          <target state="translated">手册D main（用于druntime初始化），转发给 &lt;code&gt;tryMain&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4fbeb16d0215c18c2ad3b7f92b0e101cadbbba80" translate="yes" xml:space="preserve">
          <source>Manually initialize the client RTSP CSeq for this handle</source>
          <target state="translated">手动初始化该句柄的客户端RTSP CSeq。</target>
        </trans-unit>
        <trans-unit id="0297a4524810d6d4a3159e7c6f28143e0ac281d1" translate="yes" xml:space="preserve">
          <source>Manually initialize the server RTSP CSeq for this handle</source>
          <target state="translated">手动初始化该句柄的服务器RTSP CSeq。</target>
        </trans-unit>
        <trans-unit id="1dcb8e75d7969bc3abd2e7c3effeca48107c2001" translate="yes" xml:space="preserve">
          <source>Many aggregate range operations turn out to be solved with &lt;code&gt;reduce&lt;/code&gt; quickly and easily. The example below illustrates &lt;code&gt;reduce&lt;/code&gt;'s remarkable power and flexibility.</source>
          <target state="translated">许多聚集范围操作中又与要解决 &lt;code&gt;reduce&lt;/code&gt; 迅速和容易。下面的示例说明了 &lt;code&gt;reduce&lt;/code&gt; 的强大功能和灵活性。</target>
        </trans-unit>
        <trans-unit id="fc2ca31ee175eeb6b7d2fc289d02204152e17221" translate="yes" xml:space="preserve">
          <source>Many array operations, also known as vector operations, can be expressed at a high level rather than as a loop. For example, the loop:</source>
          <target state="translated">很多数组操作,也就是向量操作,可以用高层次的方式来表达,而不是用循环的方式。例如,循环。</target>
        </trans-unit>
        <trans-unit id="a74103b79f7a383e8126d38c82beb9f82d879e84" translate="yes" xml:space="preserve">
          <source>Many functions in this package are parameterized with a &lt;a href=&quot;http://dlang.org/glossary.html#predicate&quot;&gt;predicate&lt;/a&gt;. The predicate may be any suitable callable type (a function, a delegate, a &lt;a href=&quot;http://dlang.org/glossary.html#functor&quot;&gt;functor&lt;/a&gt;, or a lambda), or a compile-time string. The string may consist of &lt;b&gt;any&lt;/b&gt; legal D expression that uses the symbol &lt;code&gt;a&lt;/code&gt; (for unary functions) or the symbols &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; (for binary functions). These names will NOT interfere with other homonym symbols in user code because they are evaluated in a different context. The default for all binary comparison predicates is &lt;code&gt;&quot;a == b&quot;&lt;/code&gt; for unordered operations and &lt;code&gt;&quot;a &amp;lt; b&quot;&lt;/code&gt; for ordered operations.</source>
          <target state="translated">此软件包中的许多函数都使用&lt;a href=&quot;http://dlang.org/glossary.html#predicate&quot;&gt;谓词&lt;/a&gt;进行参数化。谓词可以是任何合适的可调用类型（函数，委托，&lt;a href=&quot;http://dlang.org/glossary.html#functor&quot;&gt;函子&lt;/a&gt;或lambda）或编译时字符串。该字符串可以包含&lt;b&gt;任何&lt;/b&gt;使用符号 &lt;code&gt;a&lt;/code&gt; （用于一元函数）或符号 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; （用于二进制函数）的合法D表达式。这些名称不会干扰用户代码中的其他同音异义符号，因为它们是在不同的上下文中评估的。所有二进制比较谓词的默认值对于无序操作为 &lt;code&gt;&quot;a == b&quot;&lt;/code&gt; 对于有序操作为 &lt;code&gt;&quot;a &amp;lt; b&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0dca517d4d22249072adc31efed00eaae12a4434" translate="yes" xml:space="preserve">
          <source>Many languages overload the + operator to mean concatenation. This confusingly leads to, does:</source>
          <target state="translated">许多语言都把+操作符重载为连接的意思。这令人困惑地导致,确实。</target>
        </trans-unit>
        <trans-unit id="0e9603791fcc610a28e818534a769f77b36897c4" translate="yes" xml:space="preserve">
          <source>Many more functions will be added to this module. The naming convention for the distribution functions (gammaIncomplete, etc) is not yet finalized and will probably change.</source>
          <target state="translated">这个模块将增加更多的函数。分布函数(gammaIncomplete等)的命名惯例还没有最终确定,可能会改变。</target>
        </trans-unit>
        <trans-unit id="0b3c0f640962fe45a5bb8aa72a2bf3ed127a738c" translate="yes" xml:space="preserve">
          <source>Map (higher-order function)</source>
          <target state="translated">地图(高阶函数)</target>
        </trans-unit>
        <trans-unit id="d023b2e06ae9ecd57655e63d888c6a38d365c1c2" translate="yes" xml:space="preserve">
          <source>Mapping of a byte sequence to &lt;b&gt;Byte Order Mark (BOM)&lt;/b&gt;</source>
          <target state="translated">字节序列到&lt;b&gt;字节顺序标记（BOM）的&lt;/b&gt;映射&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="31e9697d43a1a66f2e45db652019fb9a6216df22" translate="yes" xml:space="preserve">
          <source>Mark</source>
          <target state="translated">Mark</target>
        </trans-unit>
        <trans-unit id="6ffcc0a259f655515f96cc8b2d001cfa106d6adf" translate="yes" xml:space="preserve">
          <source>Mark the operand as will never be dereferenced, which is useful info for @safe checks. Do before semantic() on operands rewrites them.</source>
          <target state="translated">将操作数标记为永远不会被解除引用,这对于@安全检查来说是有用的信息。在操作数上的semantic()重写操作数之前执行。</target>
        </trans-unit>
        <trans-unit id="7b1aaf9a9b88a6df8d74ea8b9437f9bf9b28ca98" translate="yes" xml:space="preserve">
          <source>Mark the operands as will never be dereferenced, which is useful info for @safe checks. Do before semantic() on operands rewrites them.</source>
          <target state="translated">将操作数标记为永远不会被解除引用,这对于@安全检查来说是有用的信息。在操作数上的semantic()重写操作数之前执行。</target>
        </trans-unit>
        <trans-unit id="6502c1ba20a549a34759225baf0e5d40999bf988" translate="yes" xml:space="preserve">
          <source>Mark this as a Rng</source>
          <target state="translated">标记为Rng</target>
        </trans-unit>
        <trans-unit id="2bf4fa7c0956cb1fdd3ecbee1e7ce54d5a6bb263" translate="yes" xml:space="preserve">
          <source>Mark variable v as modified if it is inside a constructor that var is a field in.</source>
          <target state="translated">如果变量v在一个构造函数中,而var是一个字段,则将其标记为修改。</target>
        </trans-unit>
        <trans-unit id="9a6792841b7a25d5643379e908c8ab22105dfa68" translate="yes" xml:space="preserve">
          <source>Marked as &lt;code&gt;@system&lt;/code&gt; to discourage casual use of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43791f7af0838eabc46d0824572db10f91b02285" translate="yes" xml:space="preserve">
          <source>Martin Kinkelin</source>
          <target state="translated">Martin Kinkelin</target>
        </trans-unit>
        <trans-unit id="5637a4a34d1c67892335f2ad5244cdfa55d85c6d" translate="yes" xml:space="preserve">
          <source>Martin Nowak</source>
          <target state="translated">Martin Nowak</target>
        </trans-unit>
        <trans-unit id="634e2099c6e661c76d0ed1209ae09cbdd335ffa4" translate="yes" xml:space="preserve">
          <source>Martin Nowak, Walter Bright, &lt;a href=&quot;http://www.digitalmars.com&quot;&gt;http://www.digitalmars.com&lt;/a&gt;</source>
          <target state="translated">马丁&amp;middot;诺瓦克（Martin Nowak），沃尔特&amp;middot;布赖特（Walter Bright），&lt;a href=&quot;http://www.digitalmars.com&quot;&gt;http：//www.digitalmars.com&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd5bb36f0c221e6191a45e9c1239a0ef757bb11e" translate="yes" xml:space="preserve">
          <source>Masahiro Nakagawa, Daniel Murphy (Single value Encoder and Decoder)</source>
          <target state="translated">Masahiro Nakagawa,Daniel Murphy (单值编码器和解码器)</target>
        </trans-unit>
        <trans-unit id="3b4d8cf3890734f4fadb4d37ea781cb0ac9e5158" translate="yes" xml:space="preserve">
          <source>Masks for register pairs. Note that index registers are always LSWs. This is for the convenience of implementing far pointers.</source>
          <target state="translated">寄存器对的掩码。注意,索引寄存器总是LSW。这是为了方便实现远指针。</target>
        </trans-unit>
        <trans-unit id="40deae84f1abfc7e207419de3291a71df137054a" translate="yes" xml:space="preserve">
          <source>Master list of D compiler vendors.</source>
          <target state="translated">D编译器供应商的总清单。</target>
        </trans-unit>
        <trans-unit id="bdbdc9dc0b30e98355e6da908f27cfdf0b692c8d" translate="yes" xml:space="preserve">
          <source>Match function arguments against a specific template function.</source>
          <target state="translated">将函数参数与特定的模板函数进行匹配。</target>
        </trans-unit>
        <trans-unit id="c3be1112e4fade99753f0a12ea4510c5118cf76f" translate="yes" xml:space="preserve">
          <source>Match position rather than character</source>
          <target state="translated">匹配位置而非字符</target>
        </trans-unit>
        <trans-unit id="c6689129157a0cd7e210456aa61647929d8c6a12" translate="yes" xml:space="preserve">
          <source>Match single characters</source>
          <target state="translated">匹配单字</target>
        </trans-unit>
        <trans-unit id="148aa05679c67c07ca0b45d24720b741e8965e9e" translate="yes" xml:space="preserve">
          <source>Match to a particular TemplateParameter.</source>
          <target state="translated">匹配到一个特定的TemplateParameter。</target>
        </trans-unit>
        <trans-unit id="d67f60e052c647bc8e8157aba95edd1135747518" translate="yes" xml:space="preserve">
          <source>Match. If the codepoint is found in the set then range &lt;code&gt;inp&lt;/code&gt; is advanced by its size in &lt;a href=&quot;#Code%20unit&quot;&gt;code units&lt;/a&gt;, otherwise the range is not modifed.</source>
          <target state="translated">比赛。如果在集合中找到代码点，则范围 &lt;code&gt;inp&lt;/code&gt; 将以其大小（以&lt;a href=&quot;#Code%20unit&quot;&gt;代码单位&lt;/a&gt;）超前，否则范围不会被修改。</target>
        </trans-unit>
        <trans-unit id="376518d2ef13168fcac562d64282005ad23bc928" translate="yes" xml:space="preserve">
          <source>MatchAccumulator &lt;code&gt;m&lt;/code&gt;</source>
          <target state="translated">MatchAccumulator &lt;code&gt;m&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb15661c397d61fb56d9df6a184e4fb0749edfcf" translate="yes" xml:space="preserve">
          <source>Matches 0 or more instances of any character.</source>
          <target state="translated">匹配任何字符的0个或更多实例。</target>
        </trans-unit>
        <trans-unit id="1b9ff915f17d527a366476bc5fa2efc5bd3344df" translate="yes" xml:space="preserve">
          <source>Matches \ character.</source>
          <target state="translated">匹配字符。</target>
        </trans-unit>
        <trans-unit id="d260610c825342c8a67d6079303a94f547805d4d" translate="yes" xml:space="preserve">
          <source>Matches a carriage return character.</source>
          <target state="translated">匹配一个回车字符。</target>
        </trans-unit>
        <trans-unit id="3d4ef72de0c62fe37341c3d09484f217488c5b53" translate="yes" xml:space="preserve">
          <source>Matches a character that belongs to the Unicode PropertyName set. Single letter abbreviations can be used without surrounding {,}.</source>
          <target state="translated">匹配一个属于Unicode属性名集的字符。可以使用单字母缩写,而不需要包围{,}。</target>
        </trans-unit>
        <trans-unit id="93f07d191bb83f6c2008b9d72fa87801f16649a3" translate="yes" xml:space="preserve">
          <source>Matches a character that does not belong to the Unicode PropertyName set. Single letter abbreviations can be used without surrounding {,}.</source>
          <target state="translated">匹配一个不属于Unicode属性名集的字符。可以使用单字母缩写,而不需要包围{,}。</target>
        </trans-unit>
        <trans-unit id="566d7f7e38c4f32d92f952f44e41d0f5e20341c0" translate="yes" xml:space="preserve">
          <source>Matches a character with hexadecimal value of XX.</source>
          <target state="translated">匹配一个十六进制值为XX的字符。</target>
        </trans-unit>
        <trans-unit id="f8e9580dd531ce650e18ada33bfae29a8575ead2" translate="yes" xml:space="preserve">
          <source>Matches a character with hexadecimal value of XXXX.</source>
          <target state="translated">匹配一个十六进制值为XXXX的字符。</target>
        </trans-unit>
        <trans-unit id="38acb7b15bf078182213f163b848e68097571ebb" translate="yes" xml:space="preserve">
          <source>Matches a character with hexadecimal value of YYYYYY.</source>
          <target state="translated">匹配一个十六进制值为YYYYY的字符。</target>
        </trans-unit>
        <trans-unit id="4b5eb461f7e32007ad36804786e028b3b6d3dc0b" translate="yes" xml:space="preserve">
          <source>Matches a formfeed character.</source>
          <target state="translated">匹配一个formfeed字符。</target>
        </trans-unit>
        <trans-unit id="77e95872193cd47012e519a74ae3e1c87ca38f7d" translate="yes" xml:space="preserve">
          <source>Matches a linefeed character.</source>
          <target state="translated">匹配一个行进的字符。</target>
        </trans-unit>
        <trans-unit id="3e897b344e0757fd41067b191889c5addfadb41f" translate="yes" xml:space="preserve">
          <source>Matches a pattern against a path.</source>
          <target state="translated">将图案与路径进行匹配。</target>
        </trans-unit>
        <trans-unit id="d66a7d7700d7a95eb1d2874bde9effcf95c0d4ea" translate="yes" xml:space="preserve">
          <source>Matches a single character that belongs to this character class.</source>
          <target state="translated">匹配属于该字符类的单个字符。</target>
        </trans-unit>
        <trans-unit id="83324b7e2c1bc20326ff487b5840c55c39dc6197" translate="yes" xml:space="preserve">
          <source>Matches a single character that does &lt;em&gt;not&lt;/em&gt; belong to this character class.</source>
          <target state="translated">匹配&lt;em&gt;不&lt;/em&gt;属于此字符类的单个字符。</target>
        </trans-unit>
        <trans-unit id="cab02f886f635ace9cbacc9188ee8abb79f5d542" translate="yes" xml:space="preserve">
          <source>Matches a tab character.</source>
          <target state="translated">匹配一个标签字符。</target>
        </trans-unit>
        <trans-unit id="e236db248100ae3fd28caffc37fe9c48f80f9bb6" translate="yes" xml:space="preserve">
          <source>Matches a vertical tab character.</source>
          <target state="translated">匹配一个垂直标签字符。</target>
        </trans-unit>
        <trans-unit id="9e6b2c792fd634e9622e84bef86fbd0a77a6417b" translate="yes" xml:space="preserve">
          <source>Matches any Unicode digit.</source>
          <target state="translated">匹配任何Unicode数字。</target>
        </trans-unit>
        <trans-unit id="8fa150f9ecc4530d1ba9af253009cc3456029976" translate="yes" xml:space="preserve">
          <source>Matches any character except Unicode digits.</source>
          <target state="translated">匹配除Unicode数字以外的任何字符。</target>
        </trans-unit>
        <trans-unit id="5d5fafcbb22ed76de0bbd720f8c34d2e0299c44a" translate="yes" xml:space="preserve">
          <source>Matches any character except ones in Cyrillic &lt;em&gt;script&lt;/em&gt;.</source>
          <target state="translated">匹配除那些在西里尔任何字符&lt;em&gt;的脚本&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="924bc1a5b59a3dce4f3c80cc62dab13e152ebb85" translate="yes" xml:space="preserve">
          <source>Matches any character except ones in the BasicLatin Unicode &lt;em&gt;block&lt;/em&gt;.</source>
          <target state="translated">匹配除BasicLatin Unicode &lt;em&gt;块&lt;/em&gt;中的字符以外的任何字符。</target>
        </trans-unit>
        <trans-unit id="6021ff274bc8c771ce0e596bb4aaa530db0a929a" translate="yes" xml:space="preserve">
          <source>Matches any character except those recognized as</source>
          <target state="translated">匹配任何字符,除了那些被认为是</target>
        </trans-unit>
        <trans-unit id="d45f9d47fbc3385960d4045204b8fa2e386214d5" translate="yes" xml:space="preserve">
          <source>Matches any character that is part of Cyrillic &lt;em&gt;script&lt;/em&gt;.</source>
          <target state="translated">匹配是西里尔的一部分的任何字符&lt;em&gt;的脚本&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="d03c91729f38a9723ae90c15a2197e33622f23ef" translate="yes" xml:space="preserve">
          <source>Matches any character that is part of the BasicLatin Unicode &lt;em&gt;block&lt;/em&gt;.</source>
          <target state="translated">匹配属于BasicLatin Unicode &lt;em&gt;块的&lt;/em&gt;任何字符。</target>
        </trans-unit>
        <trans-unit id="fb574dadab1447a560dffc656e147119382698b5" translate="yes" xml:space="preserve">
          <source>Matches any non-word character.</source>
          <target state="translated">匹配任何非文字字符。</target>
        </trans-unit>
        <trans-unit id="3403b0fa145ced1d792923f6d49e5db2d7819435" translate="yes" xml:space="preserve">
          <source>Matches any word character (note: this includes numbers).</source>
          <target state="translated">匹配任何文字字符(注意:包括数字)。</target>
        </trans-unit>
        <trans-unit id="80da2f0135b2a31162fa38adfbd74f0e45d4aeea" translate="yes" xml:space="preserve">
          <source>Matches at the begining of input or line (in multiline mode).</source>
          <target state="translated">在输入或行的开头进行匹配(在多行模式下)。</target>
        </trans-unit>
        <trans-unit id="22405e45d9f4b57fd785c56e62bdefc784bbacad" translate="yes" xml:space="preserve">
          <source>Matches at the end of input or line (in multiline mode).</source>
          <target state="translated">在输入或行的末端进行匹配(在多行模式下)。</target>
        </trans-unit>
        <trans-unit id="9e52d31b85e40923acff9955825d7752c6e3d5f3" translate="yes" xml:space="preserve">
          <source>Matches at word boundary.</source>
          <target state="translated">在词的边界处进行匹配。</target>
        </trans-unit>
        <trans-unit id="577bd19069cccb78c878150d0873c8b87bf7a56a" translate="yes" xml:space="preserve">
          <source>Matches either of the specified strings.</source>
          <target state="translated">匹配任意一个指定的字符串。</target>
        </trans-unit>
        <trans-unit id="7032474b5acce6809313391bc66533e639b25d58" translate="yes" xml:space="preserve">
          <source>Matches exactly one instance of any character.</source>
          <target state="translated">准确匹配任何字符的一个实例。</target>
        </trans-unit>
        <trans-unit id="36a44fb433346fca4b9bc3c5d901586ff1246b65" translate="yes" xml:space="preserve">
          <source>Matches named subexpression regex labeling it with name 'name'. When referring to a matched portion of text, names work like aliases in addition to direct numbers.</source>
          <target state="translated">匹配命名的子表达式regex,用名称'name'标记它。当引用匹配的文本部分时,除了直接的数字外,名字的作用就像别名一样。</target>
        </trans-unit>
        <trans-unit id="00d1e608ef75a418f8d7948d0b6823e3bc89b904" translate="yes" xml:space="preserve">
          <source>Matches one instance of any character that appears between the brackets.</source>
          <target state="translated">匹配括号中出现的任何字符的一个实例。</target>
        </trans-unit>
        <trans-unit id="f1226391146d3924b763eb9ef0e5cf228cb4de36" translate="yes" xml:space="preserve">
          <source>Matches one instance of any character that does not appear between the brackets after the exclamation mark.</source>
          <target state="translated">匹配感叹号后括号内没有出现的任何字符的一个实例。</target>
        </trans-unit>
        <trans-unit id="988aaf14193608b4daf8a5deb48eaea59a3dcec1" translate="yes" xml:space="preserve">
          <source>Matches previous character/subexpression 0 or more times. Greedy version - tries as many times as possible.</source>
          <target state="translated">匹配前一个字符/表达式0次或更多次。贪婪的版本--尽可能多的尝试。</target>
        </trans-unit>
        <trans-unit id="dc5890e4e43176bad35bb66bd98239c5e9dce6e5" translate="yes" xml:space="preserve">
          <source>Matches previous character/subexpression 0 or more times. Lazy version - stops as early as possible.</source>
          <target state="translated">匹配前一个字符/表达式0次或更多次。懒惰版--尽可能早的停止。</target>
        </trans-unit>
        <trans-unit id="7057e108d200837d3f3e3900e17b1ad6f500a9ff" translate="yes" xml:space="preserve">
          <source>Matches previous character/subexpression 1 or more times. Greedy version - tries as many times as possible.</source>
          <target state="translated">匹配前一个字符/表达式1次或多次。贪婪的版本--尽可能多的尝试。</target>
        </trans-unit>
        <trans-unit id="3452a18b749bc5cf311ba5e68ced61439cf96c5b" translate="yes" xml:space="preserve">
          <source>Matches previous character/subexpression 1 or more times. Lazy version - stops as early as possible.</source>
          <target state="translated">匹配前一个字符/表达式1次或多次。懒惰版--尽可能早的停止。</target>
        </trans-unit>
        <trans-unit id="2ffd12f9ff030816a3d8b080af1d2850b99b06d2" translate="yes" xml:space="preserve">
          <source>Matches previous character/subexpression exactly n times.</source>
          <target state="translated">准确匹配前一个字符/表达式n次。</target>
        </trans-unit>
        <trans-unit id="e30e49830de16035498306cf102e3cf0560e438f" translate="yes" xml:space="preserve">
          <source>Matches previous character/subexpression n times or more. Greedy version - tries as many times as possible.</source>
          <target state="translated">匹配前一个字符/表达式n次或更多。贪婪的版本--尽可能多的尝试。</target>
        </trans-unit>
        <trans-unit id="559dc120300f9b03ed2c4d11de66b47f805dff5b" translate="yes" xml:space="preserve">
          <source>Matches previous character/subexpression n times or more. Lazy version - stops as early as possible.</source>
          <target state="translated">匹配前一个字符/表达式n次或更多。懒惰版--尽可能早的停止。</target>
        </trans-unit>
        <trans-unit id="718cd66ef291724dca1b1655e4689eb3f6e7962c" translate="yes" xml:space="preserve">
          <source>Matches previous character/subexpression n to m times. Greedy version - tries as many times as possible, but no more than m times.</source>
          <target state="translated">匹配前一个字符/表达式n到m次。贪婪的版本--尽可能多的尝试,但不超过m次。</target>
        </trans-unit>
        <trans-unit id="c8c46caef3efc96dcf2d80650ac81f7704565b52" translate="yes" xml:space="preserve">
          <source>Matches previous character/subexpression n to m times. Lazy version - stops as early as possible, but no less then n times.</source>
          <target state="translated">匹配前一个字符/表达式n到m次。懒惰版本--尽可能早地停止,但不少于n次。</target>
        </trans-unit>
        <trans-unit id="55fad56791bcac5e8467a93ff520f840617fad9a" translate="yes" xml:space="preserve">
          <source>Matches subexpression A, or failing that, matches B.</source>
          <target state="translated">匹配子表达式A,否则匹配B。</target>
        </trans-unit>
        <trans-unit id="0152891decac3dd1755184ed1399dcc0dad87f92" translate="yes" xml:space="preserve">
          <source>Matches subexpression regex, &lt;em&gt;not&lt;/em&gt; saving matched portion of text. Useful to speed up matching.</source>
          <target state="translated">匹配子表达式正则表达式，&lt;em&gt;不&lt;/em&gt;保存文本的匹配部分。有助于加快匹配速度。</target>
        </trans-unit>
        <trans-unit id="eb8c9711322ff24a78ef813a8c7d9cf871d789fe" translate="yes" xml:space="preserve">
          <source>Matches subexpression regex, saving matched portion of text for later retrieval.</source>
          <target state="translated">匹配子表达式regex,保存匹配的文本部分以便以后检索。</target>
        </trans-unit>
        <trans-unit id="6601b3118fcc0e244e360384257b8e903b4ea7f8" translate="yes" xml:space="preserve">
          <source>Matches the character c itself.</source>
          <target state="translated">匹配字符c本身。</target>
        </trans-unit>
        <trans-unit id="8c3dc8c9444ac4e63e48c719abc51544ef470a8f" translate="yes" xml:space="preserve">
          <source>Matches the character itself.</source>
          <target state="translated">与角色本身相匹配。</target>
        </trans-unit>
        <trans-unit id="4cecc7435bfa871d524952f5bff148bdc2b51957" translate="yes" xml:space="preserve">
          <source>Matches the control character corresponding to letter C</source>
          <target state="translated">匹配字母C对应的控制字符</target>
        </trans-unit>
        <trans-unit id="abd6e41a9323e0a9e48fa76b6daf09b0566eaa14" translate="yes" xml:space="preserve">
          <source>Matches when &lt;em&gt;not&lt;/em&gt; at word boundary.</source>
          <target state="translated">&lt;em&gt;不在&lt;/em&gt;单词边界时匹配。</target>
        </trans-unit>
        <trans-unit id="c97355716d3d517fe5e4d25c561b4a081f053fef" translate="yes" xml:space="preserve">
          <source>Matches whitespace, same as \p{White_Space}.</source>
          <target state="translated">匹配whitespace,与p{White_Space}相同。</target>
        </trans-unit>
        <trans-unit id="5150558ec125a3f4852d898bf9fb73076c3ddf80" translate="yes" xml:space="preserve">
          <source>Matching</source>
          <target state="translated">Matching</target>
        </trans-unit>
        <trans-unit id="3edf0df49942da6d11a1a217e4d3af4a5a8e64f2" translate="yes" xml:space="preserve">
          <source>Math</source>
          <target state="translated">Math</target>
        </trans-unit>
        <trans-unit id="593ab8a4827c0f6a24bb66511456c27b983c3d36" translate="yes" xml:space="preserve">
          <source>Math notation</source>
          <target state="translated">数学符号</target>
        </trans-unit>
        <trans-unit id="cf36f25f0559cb79154e20b8ea575a6b21bd026f" translate="yes" xml:space="preserve">
          <source>Math_Symbol</source>
          <target state="translated">Math_Symbol</target>
        </trans-unit>
        <trans-unit id="6a2f1fef8d0b8728fe438f495de2e1ae827aab61" translate="yes" xml:space="preserve">
          <source>Mathematical Alphanumeric Symbols</source>
          <target state="translated">数学字母数字符号</target>
        </trans-unit>
        <trans-unit id="0a46c733f98e0b91d3ba8029a4593062b6eca0a2" translate="yes" xml:space="preserve">
          <source>Mathematical Operators</source>
          <target state="translated">数学运算符</target>
        </trans-unit>
        <trans-unit id="9d3f9c0127bce6fc83c843d0dd0b886857f901b2" translate="yes" xml:space="preserve">
          <source>Mathematical Special Functions</source>
          <target state="translated">数学特殊函数</target>
        </trans-unit>
        <trans-unit id="303c3bfeb0c566d68c9cf9bc9d6feb84cfa3e99a" translate="yes" xml:space="preserve">
          <source>Mathematically,</source>
          <target state="translated">Mathematically,</target>
        </trans-unit>
        <trans-unit id="e75225470130f13024b089d576a9938f9308ab12" translate="yes" xml:space="preserve">
          <source>Mathematically, acosh(x) = log(x + sqrt( x*x - 1))</source>
          <target state="translated">数学上,acosh(x)=log(x+sqrt(x*x-1))</target>
        </trans-unit>
        <trans-unit id="502c0bcf3d4b5cef68953c91b886223b99eb3579" translate="yes" xml:space="preserve">
          <source>Mathematically, atanh(x) = log( (1+x)/(1-x) ) / 2</source>
          <target state="translated">数学上,atanh(x)=log((1+x)/(1-x))/2。</target>
        </trans-unit>
        <trans-unit id="354081ac0eaf5ecbff2a21240af5c85107f9d3b8" translate="yes" xml:space="preserve">
          <source>Mathematically, if z.re &amp;gt; 0 then &amp;Gamma;(z) = &lt;em&gt;&amp;int;&lt;sub&gt;&lt;small&gt;0&lt;/small&gt;&lt;/sub&gt;&lt;sup&gt;&amp;infin;&lt;/sup&gt;&lt;/em&gt; t&lt;sup&gt;z-1&lt;/sup&gt;e&lt;sup&gt;-t&lt;/sup&gt; dt</source>
          <target state="translated">在数学上，如果z.re&amp;gt; 0，则&amp;Gamma;（Z）= &lt;em&gt;&amp;int; &lt;sub&gt;&lt;small&gt;0&lt;/small&gt;&lt;/sub&gt;&lt;sup&gt; &amp;infin;&lt;/sup&gt;&lt;/em&gt;吨&lt;sup&gt;Z-1&lt;/sup&gt; &amp;Euml; &lt;sup&gt;-t&lt;/sup&gt; dt的</target>
        </trans-unit>
        <trans-unit id="d0b76b554e18654fc7afe37a2d36ca2278c9a0bd" translate="yes" xml:space="preserve">
          <source>Max amount of cached alive connections</source>
          <target state="translated">缓存活跃连接的最大数量</target>
        </trans-unit>
        <trans-unit id="d5b26c0e81e6d1a04cf9525857321ed542c48ef8" translate="yes" xml:space="preserve">
          <source>MaxType!T &lt;strong id=&quot;max&quot;&gt;max&lt;/strong&gt;(T...)(T args)</source>
          <target state="translated">MaxType！T &lt;strong id=&quot;max&quot;&gt;max&lt;/strong&gt;（T ...）（T参数）</target>
        </trans-unit>
        <trans-unit id="0dd9def42e4e971e29f54b75773752e9cfc0c934" translate="yes" xml:space="preserve">
          <source>Maximum absolute difference. Defaults to &lt;code&gt;1e-5&lt;/code&gt;.</source>
          <target state="translated">最大绝对差。默认为 &lt;code&gt;1e-5&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="326a29117722fa8006df72d4c88aedadb99f0cb3" translate="yes" xml:space="preserve">
          <source>Maximum absolute difference. This is mainly usefull for comparing values to zero. Setting to 0.0 disables this check. Defaults to &lt;code&gt;0.0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d56970a7b8384e9f042aab9b74e42a459be282be" translate="yes" xml:space="preserve">
          <source>Maximum absolute difference. This is mainly usefull for comparing values to zero. Setting to 0.0 disables this check. Defaults to &lt;code&gt;1e-5&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c4e73a22344551fbaade4415de482e307dcb08" translate="yes" xml:space="preserve">
          <source>Maximum allowable difference relative to &lt;code&gt;reference&lt;/code&gt;. Setting to 0.0 disables this check. Defaults to &lt;code&gt;1e-2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7b018d266ff7216df8a5bed74f6143c9da1187" translate="yes" xml:space="preserve">
          <source>Maximum allowable difference relative to &lt;code&gt;rhs&lt;/code&gt;. Defaults to &lt;code&gt;1e-2&lt;/code&gt;.</source>
          <target state="translated">相对于 &lt;code&gt;rhs&lt;/code&gt; 的最大允许差。默认为 &lt;code&gt;1e-2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57095b317cfa496d705b2b231f6572a19bbf4841" translate="yes" xml:space="preserve">
          <source>Maximum allowable relative difference. Setting to 0.0 disables this check. Default depends on the type of &lt;code&gt;lhs&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt;: It is approximately half the number of decimal digits of precision of the smaller type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173bf02e3e5d647f57619cdb3f8fe81ffcb9080f" translate="yes" xml:space="preserve">
          <source>Maximum number of http redirects to follow</source>
          <target state="translated">最多可以跟随的http重定向数量</target>
        </trans-unit>
        <trans-unit id="549e94c2379df9e88c8b21145c9bed436b888bf9" translate="yes" xml:space="preserve">
          <source>Maximum size eligible for freelisting. Construction with this parameter is defined only if &lt;code&gt;maxSize == chooseAtRuntime&lt;/code&gt; or &lt;code&gt;maxSize == unbounded&lt;/code&gt;.</source>
          <target state="translated">符合自由列出条件的最大大小。仅当 &lt;code&gt;maxSize == chooseAtRuntime&lt;/code&gt; 或 &lt;code&gt;maxSize == unbounded&lt;/code&gt; 才定义使用此参数的构造。</target>
        </trans-unit>
        <trans-unit id="5bc432c657fe4144bd45d936698c166acecd18fa" translate="yes" xml:space="preserve">
          <source>Maximum xShmLock index</source>
          <target state="translated">最大xShmLock指数</target>
        </trans-unit>
        <trans-unit id="a5294666cf7ca1197c10f2f70f693b65ba9f87b8" translate="yes" xml:space="preserve">
          <source>May differ from &lt;a href=&quot;#year&quot;&gt;&lt;code&gt;year&lt;/code&gt;&lt;/a&gt; between 28 December and 4 January.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a70fc4b531788cfa4bd3091286f5c9f6c8385cb7" translate="yes" xml:space="preserve">
          <source>May throw a &lt;code&gt;UTFException&lt;/code&gt; if &lt;code&gt;str[index]&lt;/code&gt; is not one past the end of a valid UTF sequence.</source>
          <target state="translated">如果 &lt;code&gt;str[index]&lt;/code&gt; 不超过有效UTF序列的末尾，则可能抛出 &lt;code&gt;UTFException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5fa0097c5f6c3d6966b6fd938ee6ef58844d1cb" translate="yes" xml:space="preserve">
          <source>May throw a &lt;code&gt;UTFException&lt;/code&gt; if &lt;code&gt;str[index]&lt;/code&gt; is not the start of a valid UTF sequence.</source>
          <target state="translated">如果 &lt;code&gt;str[index]&lt;/code&gt; 不是有效的UTF序列的开始，则可能抛出 &lt;code&gt;UTFException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4cf2cc5419330915ceb88f803da616df3e656fb1" translate="yes" xml:space="preserve">
          <source>Mc</source>
          <target state="translated">Mc</target>
        </trans-unit>
        <trans-unit id="94563ec383e29aa3743abd9b337b2e084fb199fb" translate="yes" xml:space="preserve">
          <source>Me</source>
          <target state="translated">Me</target>
        </trans-unit>
        <trans-unit id="236346d53333e28078765d761ee605b09c5c66e1" translate="yes" xml:space="preserve">
          <source>Meaning:</source>
          <target state="translated">Meaning:</target>
        </trans-unit>
        <trans-unit id="ae0a51f3f8c1bd633457792e73d95ebdfb47fabe" translate="yes" xml:space="preserve">
          <source>Measure a time in milliseconds, microseconds, or nanoseconds</source>
          <target state="translated">以毫秒、微秒或纳秒为单位测量时间。</target>
        </trans-unit>
        <trans-unit id="5a8ad743c5f100acd20d0277cefb86b571133693" translate="yes" xml:space="preserve">
          <source>Measures the maximum bytes allocated over the time. This is useful for dimensioning allocators.</source>
          <target state="translated">测量时间内分配的最大字节数。这对分配器来说很有用。</target>
        </trans-unit>
        <trans-unit id="ebcd785babc414ca5f7b40b1e241144407a1963a" translate="yes" xml:space="preserve">
          <source>Measures the sum of extra bytes allocated beyond the bytes requested, i.e. the &lt;a href=&quot;http://goo.gl/YoKffF&quot;&gt;internal fragmentation&lt;/a&gt;. This is the current effective number of slack bytes, and it goes up and down with time.</source>
          <target state="translated">测量超出请求的字节分配的额外字节的总和，即&lt;a href=&quot;http://goo.gl/YoKffF&quot;&gt;内部碎片&lt;/a&gt;。这是当前有效的松弛字节数，并且随时间增加和减少。</target>
        </trans-unit>
        <trans-unit id="3428bf3e3bb069070bf76af2715fdc04ab1cc564" translate="yes" xml:space="preserve">
          <source>Meetei Mayek</source>
          <target state="translated">Meetei Mayek</target>
        </trans-unit>
        <trans-unit id="c29a4366fb08674ddc833d9c2d648bc22d81049a" translate="yes" xml:space="preserve">
          <source>Meetei Mayek Extensions</source>
          <target state="translated">Meetei Mayek Extensions</target>
        </trans-unit>
        <trans-unit id="a66ec7d3e2375014d1ffe12adf1704c1f323a128" translate="yes" xml:space="preserve">
          <source>Meetei_Mayek</source>
          <target state="translated">Meetei_Mayek</target>
        </trans-unit>
        <trans-unit id="13754495aca84346deb594b0d23bc4d086989ee4" translate="yes" xml:space="preserve">
          <source>Member Functions</source>
          <target state="translated">会员功能</target>
        </trans-unit>
        <trans-unit id="0910b8592e88e63cf46fd5f933f9a07965dd736a" translate="yes" xml:space="preserve">
          <source>Member Functions (a.k.a. Methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="019a4c7b4ab7db0b7225cbe8eaee02aa570d3b44" translate="yes" xml:space="preserve">
          <source>Member fields of a synchronized class cannot be public:</source>
          <target state="translated">同步类的成员字段不能是公共的。</target>
        </trans-unit>
        <trans-unit id="d04f0e51c5452147e13f2fc623076db7f9982260" translate="yes" xml:space="preserve">
          <source>Member functions declared as abstract can still have function bodies. This is so that even though they must be overridden, they can still provide &amp;lsquo;base class functionality&amp;rsquo;, e.g. through &lt;code&gt;super.foo()&lt;/code&gt; in a derived class. Note that the class is still abstract and cannot be instantiated directly.</source>
          <target state="translated">声明为抽象的成员函数仍然可以具有函数体。这样一来，即使必须重写它们，它们仍然可以提供&amp;ldquo;基类功能&amp;rdquo;，例如通过派生类中的 &lt;code&gt;super.foo()&lt;/code&gt; 。请注意，该类仍然是抽象的，不能直接实例化。</target>
        </trans-unit>
        <trans-unit id="94bc1832afe1d646c790e7dacf415889c81edee1" translate="yes" xml:space="preserve">
          <source>Member functions of non-synchronized classes can be individually marked as synchronized.</source>
          <target state="translated">非同步类的成员函数可以单独标记为同步。</target>
        </trans-unit>
        <trans-unit id="0a4bd789ee2475a604bf6ff4993b3e6cecd51772" translate="yes" xml:space="preserve">
          <source>Member functions which are &lt;code&gt;private&lt;/code&gt; or &lt;code&gt;package&lt;/code&gt; are never virtual, and hence cannot be overridden.</source>
          <target state="translated">&lt;code&gt;private&lt;/code&gt; 或 &lt;code&gt;package&lt;/code&gt; 成员函数永远不会是虚拟的，因此不能被覆盖。</target>
        </trans-unit>
        <trans-unit id="4011f1f1ed250e6e35afd37eaa3106784a7610ca" translate="yes" xml:space="preserve">
          <source>Member functions with Objective-C linkage have an additional hidden, anonymous, parameter which is the selector the function was called with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="730bfd462ce7ea2565aafe9ffe8c9ce0ab84dc5f" translate="yes" xml:space="preserve">
          <source>Member functions with the Objective-C linkage has an additional hidden, anonymous, parameter which is the selector the function was called with.</source>
          <target state="translated">与Objective-C链接的成员函数有一个额外的隐藏的、匿名的参数,这个参数就是函数被调用的选择器。</target>
        </trans-unit>
        <trans-unit id="9b4cee7f1b1fb6a636414a18e51281d77ef7373e" translate="yes" xml:space="preserve">
          <source>Member functions, constructors, destructors, operating overloading, etc.</source>
          <target state="translated">成员函数、构造函数、析构函数、操作重载等。</target>
        </trans-unit>
        <trans-unit id="75c82559a505947763aebe88eed8911e94db5f71" translate="yes" xml:space="preserve">
          <source>Member names not found in a class or struct can be forwarded to a template function named &lt;code&gt;opDispatch&lt;/code&gt; for resolution.</source>
          <target state="translated">可以将在类或结构中找不到的成员名称转发到名为 &lt;code&gt;opDispatch&lt;/code&gt; 的模板函数以进行解析。</target>
        </trans-unit>
        <trans-unit id="380b024ed26a6ddc44f49ea617bc4dc47f59b8b6" translate="yes" xml:space="preserve">
          <source>Member template functions cannot be virtual and hence cannot be overridden.</source>
          <target state="translated">成员模板功能不能虚拟,因此不能被覆盖。</target>
        </trans-unit>
        <trans-unit id="15c228569a3dd4d2d440fdfdc1b2145ae78b2fc2" translate="yes" xml:space="preserve">
          <source>Member to be added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43b3bbfea09de9d05623bd67c78ee32f29363bf" translate="yes" xml:space="preserve">
          <source>Member to be decompressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="163de5e5dca3c7f3fd0faaa10cb4eb20478c931c" translate="yes" xml:space="preserve">
          <source>Member to be deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb449c1126609b4b41e1d87f65f0d7cd19b49b9" translate="yes" xml:space="preserve">
          <source>Members</source>
          <target state="translated">Members</target>
        </trans-unit>
        <trans-unit id="d8ffb4f7a80ae39a133b7a5a35dbf287204e2686" translate="yes" xml:space="preserve">
          <source>Members of a base class can be accessed by prepending the name of the base class followed by a dot:</source>
          <target state="translated">基类的成员可以通过在基类的名称后面加上一个点来访问。</target>
        </trans-unit>
        <trans-unit id="38b88ba291aedc801f0cf1ace141ae388b9947cc" translate="yes" xml:space="preserve">
          <source>Memory Allocation</source>
          <target state="translated">内存分配</target>
        </trans-unit>
        <trans-unit id="57b0394c856fac60e784f92bcfff68951cf81266" translate="yes" xml:space="preserve">
          <source>Memory Allocation Routines</source>
          <target state="translated">内存分配例程</target>
        </trans-unit>
        <trans-unit id="3a30329db6460c4ed15bebe4d427af9052e6678f" translate="yes" xml:space="preserve">
          <source>Memory Allocation Subsystem</source>
          <target state="translated">内存分配子系统</target>
        </trans-unit>
        <trans-unit id="f5bd12480983914d8406751d31133ba86381302d" translate="yes" xml:space="preserve">
          <source>Memory Allocator Statistics</source>
          <target state="translated">内存分配器统计</target>
        </trans-unit>
        <trans-unit id="e0efdce50032a40b3a3914e5fc8bfa6cd4288bb5" translate="yes" xml:space="preserve">
          <source>Memory Management</source>
          <target state="translated">内存管理</target>
        </trans-unit>
        <trans-unit id="a1bf368dfa41af6966ac27794caf5006abecc398" translate="yes" xml:space="preserve">
          <source>Memory Model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de1129facae4051e8fdee7abb0f38e9a1213e56" translate="yes" xml:space="preserve">
          <source>Memory Safety</source>
          <target state="translated">记忆安全</target>
        </trans-unit>
        <trans-unit id="b61b70edbe3a97caa2ecb5ac100b7aca209a1cba" translate="yes" xml:space="preserve">
          <source>Memory allocation</source>
          <target state="translated">内存分配</target>
        </trans-unit>
        <trans-unit id="ecdbc7f2417ef638487194e74177e17fd205af0b" translate="yes" xml:space="preserve">
          <source>Memory allocation function</source>
          <target state="translated">内存分配功能</target>
        </trans-unit>
        <trans-unit id="0957c4cd1e00be649fec851480b4b7928614288b" translate="yes" xml:space="preserve">
          <source>Memory locations come in three groups:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac799873aaaeaed7f28a8dcd45e4b44ea97f1ebf" translate="yes" xml:space="preserve">
          <source>Memory safety does not imply that code is portable, uses only sound programming practices, is free of byte order dependencies, or other bugs. It is focussed only on eliminating memory corruption possibilities.</source>
          <target state="translated">内存安全并不意味着代码是可移植的,只使用合理的编程实践,没有字节顺序依赖性或其他错误。它的重点只是消除内存损坏的可能性。</target>
        </trans-unit>
        <trans-unit id="8745e9a708aba0d2943782621706fd0939c4d32e" translate="yes" xml:space="preserve">
          <source>Memory safety protections</source>
          <target state="translated">内存安全保护</target>
        </trans-unit>
        <trans-unit id="e7c6afbb979807b3801d17fed1c71c2877b27c2e" translate="yes" xml:space="preserve">
          <source>Memory usage is 8 bytes per each contiguous interval in a set. The value semantics are achieved by using the &lt;a href=&quot;http://en.wikipedia.org/wiki/Copy-on-write&quot;&gt;COW&lt;/a&gt; technique and thus it's not safe to cast this type to shared.</source>
          <target state="translated">一组中每个连续间隔的内存使用量为8个字节。值语义是通过使用&lt;a href=&quot;http://en.wikipedia.org/wiki/Copy-on-write&quot;&gt;COW&lt;/a&gt;技术实现的，因此将这种类型转换为共享是不安全的。</target>
        </trans-unit>
        <trans-unit id="4b41ea4fb6a604fb88f6b0c86c204fa450c81da1" translate="yes" xml:space="preserve">
          <source>Memory-Safe-D-Spec</source>
          <target state="translated">Memory-Safe-D-Spec</target>
        </trans-unit>
        <trans-unit id="c247f5fb6586475135ee70daab74580914c6fb6b" translate="yes" xml:space="preserve">
          <source>Memory-safe code &lt;a href=&quot;function#function-safety&quot;&gt;cannot use certain language features&lt;/a&gt;, such as:</source>
          <target state="translated">内存安全代码&lt;a href=&quot;function#function-safety&quot;&gt;不能使用某些语言功能&lt;/a&gt;，例如：</target>
        </trans-unit>
        <trans-unit id="473d96fd623e27fc2d73e66bac82fb8aa418af0a" translate="yes" xml:space="preserve">
          <source>Merge &lt;code&gt;b&lt;/code&gt; flow analysis results into &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;b&lt;/code&gt; 流量分析结果合并到 &lt;code&gt;a&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="96ca7f2df1a2bb46a631ddf55db0107e8a0f6dcf" translate="yes" xml:space="preserve">
          <source>Merge function attributes pure, nothrow, @safe, @nogc, and @disable from f into s1.</source>
          <target state="translated">将f的函数属性pure、nothrow、@safe、@nogc和@disable合并到s1中。</target>
        </trans-unit>
        <trans-unit id="18b4df384210c098ee9c1e6e0d3d8ee231c3a119" translate="yes" xml:space="preserve">
          <source>Merge into this function the 'in' contracts of all it overrides. 'in's are OR'd together, i.e. only one of them needs to pass.</source>
          <target state="translated">将它覆盖的所有'in'合同合并到这个函数中。'in's 是一起 OR'd,即只需要通过其中一个。</target>
        </trans-unit>
        <trans-unit id="e39e3795a7731eaa4793023cc894fafa2b4ab3fe" translate="yes" xml:space="preserve">
          <source>Merge into this function the 'out' contracts of all it overrides. 'out's are AND'd together, i.e. all of them need to pass.</source>
          <target state="translated">将它覆盖的所有'out'合同合并到这个函数中。'out'的合同都是AND'd在一起的,也就是说,所有的合同都需要通过。</target>
        </trans-unit>
        <trans-unit id="02db82771755ecdf0b22312c3b847d054cdfe1f4" translate="yes" xml:space="preserve">
          <source>Merge mod bits to form common mod.</source>
          <target state="translated">合并mod位,形成通用mod。</target>
        </trans-unit>
        <trans-unit id="c109861e51d1c86a02e432754a712c3fe0fa9fd9" translate="yes" xml:space="preserve">
          <source>Merge multiple sorted ranges &lt;code&gt;rs&lt;/code&gt; with less-than predicate function &lt;code&gt;pred&lt;/code&gt; into one single sorted output range containing the sorted union of the elements of inputs. Duplicates are not eliminated, meaning that the total number of elements in the output is the sum of all elements in the ranges passed to it; the &lt;code&gt;length&lt;/code&gt; member is offered if all inputs also have &lt;code&gt;length&lt;/code&gt;. The element types of all the inputs must have a common type &lt;code&gt;CommonType&lt;/code&gt;.</source>
          <target state="translated">合并多个分选范围 &lt;code&gt;rs&lt;/code&gt; 与低于谓词函数 &lt;code&gt;pred&lt;/code&gt; 成含有的输入元素的排序工会一个单一有序输出范围。没有消除重复项，这意味着输出中元素的总数是传递给它的范围内所有元素的总和；所述 &lt;code&gt;length&lt;/code&gt; 部件是提供在所有输入端也有 &lt;code&gt;length&lt;/code&gt; 。所有输入的元素类型必须具有公共类型 &lt;code&gt;CommonType&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e1d499c82c414943f5481100c85ef8982e1adc8" translate="yes" xml:space="preserve">
          <source>Merge!(less, Rs) &lt;strong id=&quot;merge&quot;&gt;merge&lt;/strong&gt;(alias less = &quot;a &amp;lt; b&quot;, Rs...)(Rs rs)</source>
          <target state="translated">合并！（少，Rs）&lt;strong id=&quot;merge&quot;&gt;合并&lt;/strong&gt;（别名少=&amp;ldquo; a &amp;lt;b&amp;rdquo;，Rs ...）（Rs rs）</target>
        </trans-unit>
        <trans-unit id="ecd689f30483b3176616a4f345aa11ac1af0123e" translate="yes" xml:space="preserve">
          <source>Merges a range of sorted ranges.</source>
          <target state="translated">合并一系列的排序范围。</target>
        </trans-unit>
        <trans-unit id="3ee86161e1a8c504c0b3ad79f0b486e252c299a5" translate="yes" xml:space="preserve">
          <source>Merges multiple sets. The input sets are passed as a range of ranges and each is assumed to be sorted by &lt;code&gt;less&lt;/code&gt;. Computation is done lazily, one union element at a time. The complexity of one &lt;code&gt;popFront&lt;/code&gt; operation is &amp;Omicron;(&lt;code&gt;log(ror.length)&lt;/code&gt;). However, the length of &lt;code&gt;ror&lt;/code&gt; decreases as ranges in it are exhausted, so the complexity of a full pass through &lt;code&gt;MultiwayMerge&lt;/code&gt; is dependent on the distribution of the lengths of ranges contained within &lt;code&gt;ror&lt;/code&gt;. If all ranges have the same length &lt;code&gt;n&lt;/code&gt; (worst case scenario), the complexity of a full pass through &lt;code&gt;MultiwayMerge&lt;/code&gt; is &amp;Omicron;(&lt;code&gt;n * ror.length * log(ror.length)&lt;/code&gt;), i.e., &lt;code&gt;log(ror.length)&lt;/code&gt; times worse than just spanning all ranges in turn. The output comes sorted (unstably) by &lt;code&gt;less&lt;/code&gt;.</source>
          <target state="translated">合并多组。输入集作为范围的范围传递，并且假定每个输入集按 &lt;code&gt;less&lt;/code&gt; 排序。计算是懒惰的，一次只有一个并集元素。一个 &lt;code&gt;popFront&lt;/code&gt; 操作的复杂度为〇（ &lt;code&gt;log(ror.length)&lt;/code&gt; ）。但是，随着 &lt;code&gt;ror&lt;/code&gt; 长度的耗尽，它的长度会减小，因此，通过 &lt;code&gt;MultiwayMerge&lt;/code&gt; 的全程复杂度取决于 &lt;code&gt;ror&lt;/code&gt; 中包含的范围的长度分布。如果所有范围都具有相同的长度 &lt;code&gt;n&lt;/code&gt; （最坏的情况），则通过 &lt;code&gt;MultiwayMerge&lt;/code&gt; 的完全遍历的复杂度为 &lt;code&gt;n * ror.length * log(ror.length)&lt;/code&gt; （n * ror.length * log（ror.length）），即， &lt;code&gt;log(ror.length)&lt;/code&gt; 的时间比仅依次跨所有范围的时间差。输出以 &lt;code&gt;less&lt;/code&gt; 排序（不稳定）。</target>
        </trans-unit>
        <trans-unit id="c45302b65966374aac57034c7b9f57e0b5ffd393" translate="yes" xml:space="preserve">
          <source>Meroitic Cursive</source>
          <target state="translated">梅洛特草书</target>
        </trans-unit>
        <trans-unit id="0dfb86cb098d5f5d08325cb7f5549fffa8c54aa5" translate="yes" xml:space="preserve">
          <source>Meroitic Hieroglyphs</source>
          <target state="translated">象形文字</target>
        </trans-unit>
        <trans-unit id="fad43e700acf724fbc03a57e905d1e33999d5a95" translate="yes" xml:space="preserve">
          <source>Meroitic_Cursive</source>
          <target state="translated">Meroitic_Cursive</target>
        </trans-unit>
        <trans-unit id="16256e81ed15ae584494444b4607752969d09a87" translate="yes" xml:space="preserve">
          <source>Meroitic_Hieroglyphs</source>
          <target state="translated">Meroitic_Hieroglyphs</target>
        </trans-unit>
        <trans-unit id="441df2997a0bdfabc9155cb3f1b9eb0bfcd1b8d7" translate="yes" xml:space="preserve">
          <source>Mersenne Twister Engines</source>
          <target state="translated">梅森螺旋桨发动机</target>
        </trans-unit>
        <trans-unit id="e35d33912d5bd7fc92d12ad758d85ef83755b678" translate="yes" xml:space="preserve">
          <source>Message describing the error.</source>
          <target state="translated">描述错误的信息。</target>
        </trans-unit>
        <trans-unit id="e5f4b8e2eaa86c20a211c5730b176738e052b5df" translate="yes" xml:space="preserve">
          <source>Message logging is a common approach to expose runtime information of a program. Logging should be easy, but also flexible and powerful, therefore &lt;code&gt;D&lt;/code&gt; provides a standard interface for logging.  The easiest way to create a log message is to write:</source>
          <target state="translated">消息日志记录是公开程序运行时信息的常用方法。日志记录应该很简单，但又要灵活而强大，因此 &lt;code&gt;D&lt;/code&gt; 提供了一个标准的日志记录接口。创建日志消息的最简单方法是编写：</target>
        </trans-unit>
        <trans-unit id="1a14b3e6b388251b68ea9615ecf15beddb585962" translate="yes" xml:space="preserve">
          <source>Messages are logged if the &lt;code&gt;LogLevel&lt;/code&gt; of the log message is greater than or equal to the &lt;code&gt;LogLevel&lt;/code&gt; of the used &lt;code&gt;Logger&lt;/code&gt; and additionally if the &lt;code&gt;LogLevel&lt;/code&gt; of the log message is greater than or equal to the global &lt;code&gt;LogLevel&lt;/code&gt;. If a condition is passed into the log call, this condition must be true.  The global &lt;code&gt;LogLevel&lt;/code&gt; is accessible by using &lt;code&gt;globalLogLevel&lt;/code&gt;. To assign a &lt;code&gt;LogLevel&lt;/code&gt; of a &lt;code&gt;Logger&lt;/code&gt; use the &lt;code&gt;logLevel&lt;/code&gt; property of the logger.</source>
          <target state="translated">如果消息将记录 &lt;code&gt;LogLevel&lt;/code&gt; 的日志消息的大于或等于所述 &lt;code&gt;LogLevel&lt;/code&gt; 所使用的 &lt;code&gt;Logger&lt;/code&gt; ，并且另外如果 &lt;code&gt;LogLevel&lt;/code&gt; 的日志消息的大于或等于全局 &lt;code&gt;LogLevel&lt;/code&gt; 的。如果将条件传递到日志调用中，则此条件必须为true。可以使用 &lt;code&gt;globalLogLevel&lt;/code&gt; 访问全局 &lt;code&gt;LogLevel&lt;/code&gt; 。要分配 &lt;code&gt;Logger&lt;/code&gt; 的 &lt;code&gt;LogLevel&lt;/code&gt; ，请使用记录器的 &lt;code&gt;logLevel&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="674200f0791d0391b26e7ab0cb61f591c00e9006" translate="yes" xml:space="preserve">
          <source>Messages that inform about critical errors should be logged with this level.</source>
          <target state="translated">告知关键错误的消息应该用这个级别来记录。</target>
        </trans-unit>
        <trans-unit id="3b1389e0e832a05337d6ccb31e50ea1425ca91a8" translate="yes" xml:space="preserve">
          <source>Method name</source>
          <target state="translated">方法名称</target>
        </trans-unit>
        <trans-unit id="5432728a99110699123ab292c79d8929b4a93cff" translate="yes" xml:space="preserve">
          <source>Method name to call.</source>
          <target state="translated">要调用的方法名称。</target>
        </trans-unit>
        <trans-unit id="c33db9381eac351f01f1ebcace4d045842265eb0" translate="yes" xml:space="preserve">
          <source>Methods of a final class are &lt;code&gt;final&lt;/code&gt; by default.</source>
          <target state="translated">final类的方法默认为 &lt;code&gt;final&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="536a2a35026e0b6a919478b3ed257a839d2e1750" translate="yes" xml:space="preserve">
          <source>Methods returning &lt;code&gt;Ternary&lt;/code&gt; return &lt;code&gt;Ternary.yes&lt;/code&gt; upon success, &lt;code&gt;Ternary.no&lt;/code&gt; upon failure, and &lt;code&gt;Ternary.unknown&lt;/code&gt; if the primitive is not implemented by the allocator instance.</source>
          <target state="translated">方法返回 &lt;code&gt;Ternary&lt;/code&gt; 回报 &lt;code&gt;Ternary.yes&lt;/code&gt; 成功时， &lt;code&gt;Ternary.no&lt;/code&gt; 发生故障时，以及 &lt;code&gt;Ternary.unknown&lt;/code&gt; 如果原始的未被分配的实例来实现。</target>
        </trans-unit>
        <trans-unit id="cc7e0e02c16756d9acee15cd9d7a7473daeb068d" translate="yes" xml:space="preserve">
          <source>Miao</source>
          <target state="translated">Miao</target>
        </trans-unit>
        <trans-unit id="4014a3a1206afc2fb8f2e5f9f2071d7a3abf5198" translate="yes" xml:space="preserve">
          <source>Microsoft 32 bit Windows systems</source>
          <target state="translated">微软32位Windows系统</target>
        </trans-unit>
        <trans-unit id="b6f7d07f6d0d4d6ca14a809acf6053a583de57a5" translate="yes" xml:space="preserve">
          <source>Microsoft 32-bit Windows systems</source>
          <target state="translated">微软32位Windows系统</target>
        </trans-unit>
        <trans-unit id="0a7f8a6a3c059af73acb9cd574b05b2a9543c4ad" translate="yes" xml:space="preserve">
          <source>Microsoft 64 bit Windows systems</source>
          <target state="translated">微软64位Windows系统</target>
        </trans-unit>
        <trans-unit id="ac72b2ac11f991f699272cc1db01bb25e6d51711" translate="yes" xml:space="preserve">
          <source>Microsoft 64-bit Windows systems</source>
          <target state="translated">微软64位Windows系统</target>
        </trans-unit>
        <trans-unit id="ed82c6f8a58bc49b4d9060c4f66fdffc94ae06da" translate="yes" xml:space="preserve">
          <source>Microsoft C runtime</source>
          <target state="translated">微软C语言运行时</target>
        </trans-unit>
        <trans-unit id="ebd6d05a731e12a86c8b4e80bc60f72f287734f6" translate="yes" xml:space="preserve">
          <source>Microsoft COFF object file format</source>
          <target state="translated">微软COFF对象文件格式</target>
        </trans-unit>
        <trans-unit id="c16c96e5cb2017286d8a64c25450e71226f0000b" translate="yes" xml:space="preserve">
          <source>Microsoft Corporation backward compatibility</source>
          <target state="translated">微软公司的向后兼容性</target>
        </trans-unit>
        <trans-unit id="7a650ad47d922de9a3c42b429d96b1e405df1b9b" translate="yes" xml:space="preserve">
          <source>Microsoft Cpp runtime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bde9e716692327663fd157039cda187ce1ee7df" translate="yes" xml:space="preserve">
          <source>Microsoft Windows systems</source>
          <target state="translated">微软视窗系统</target>
        </trans-unit>
        <trans-unit id="eecec507337963babdc80d1f001447bcfa1ad938" translate="yes" xml:space="preserve">
          <source>Mike Cote, John Micco and &lt;a href=&quot;http://www.digitalmars.com&quot;&gt;Walter Bright&lt;/a&gt;</source>
          <target state="translated">迈克&amp;middot;科特，约翰&amp;middot;米科和&lt;a href=&quot;http://www.digitalmars.com&quot;&gt;沃尔特&amp;middot;布莱特&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce0263fbd5d81126a5accf38c2a8cfa720a38f5f" translate="yes" xml:space="preserve">
          <source>Mike Cote, John Micco, &lt;a href=&quot;http://www.digitalmars.com&quot;&gt;Walter Bright&lt;/a&gt;,</source>
          <target state="translated">Mike Cote，John Micco，&lt;a href=&quot;http://www.digitalmars.com&quot;&gt;Walter Bright&lt;/a&gt;，</target>
        </trans-unit>
        <trans-unit id="646bada43bacb04d883be0a800cf55c1bff27489" translate="yes" xml:space="preserve">
          <source>MinType!T &lt;strong id=&quot;min&quot;&gt;min&lt;/strong&gt;(T...)(T args)</source>
          <target state="translated">MinType！T &lt;strong id=&quot;min&quot;&gt;min&lt;/strong&gt;（T ...）（T参数）</target>
        </trans-unit>
        <trans-unit id="96619c2744574ba83e062f07794a4bce5e184561" translate="yes" xml:space="preserve">
          <source>Minimum global level this condition needs to pass. Only used if &lt;code&gt;ident&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">此条件需要通过的最低全局级别。仅当 &lt;code&gt;ident&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; 时使用。</target>
        </trans-unit>
        <trans-unit id="72ac10aa985b72fc878006245095a438f4afd28d" translate="yes" xml:space="preserve">
          <source>Minimum number of input bytes to process</source>
          <target state="translated">处理的最小输入字节数</target>
        </trans-unit>
        <trans-unit id="23735bdebe5dd753b2eecb3ee5464f912043405c" translate="yes" xml:space="preserve">
          <source>Minimum number of output bytes to process</source>
          <target state="translated">处理的最小输出字节数</target>
        </trans-unit>
        <trans-unit id="7520451067e6f7c0bfa18e9bfe94463900128da6" translate="yes" xml:space="preserve">
          <source>Minimum size eligible for freelisting. Construction with this parameter is defined only if &lt;code&gt;minSize == chooseAtRuntime&lt;/code&gt;. If this condition is met and no &lt;code&gt;min&lt;/code&gt; parameter is present, &lt;code&gt;min&lt;/code&gt; is initialized with &lt;code&gt;max&lt;/code&gt;.</source>
          <target state="translated">符合自由刊登条件的最小尺寸。仅当 &lt;code&gt;minSize == chooseAtRuntime&lt;/code&gt; 才定义使用此参数的构造。如果满足此条件并且不存在 &lt;code&gt;min&lt;/code&gt; 参数，则使用 &lt;code&gt;max&lt;/code&gt; 初始化 &lt;code&gt;min&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0fbfeb63cedecc26008c4032bda53482f765205a" translate="yes" xml:space="preserve">
          <source>Minimum width, default &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">最小宽度，默认为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b86e7a6a020ac76991cd6c26e23328074d134a16" translate="yes" xml:space="preserve">
          <source>Minor HTTP version ie. 0 in HTTP/1.0.</source>
          <target state="translated">小的HTTP版本即HTTP/1.0中的0。</target>
        </trans-unit>
        <trans-unit id="ef8cde8759f0faa5c37800217783e19162b32772" translate="yes" xml:space="preserve">
          <source>Minor differences can be handled by constant defined in a system specific import, and then using that constant in an</source>
          <target state="translated">小的差异可以通过在系统特定导入中定义的常量来处理,然后在</target>
        </trans-unit>
        <trans-unit id="276eb814fa83eb8650d994da85c3e0fe04f261ce" translate="yes" xml:space="preserve">
          <source>Minute of the hour [0 - 60).</source>
          <target state="translated">小时的分钟[0-60)。</target>
        </trans-unit>
        <trans-unit id="6fe63922288d3720f67a6b936f7e7d8469da7b2c" translate="yes" xml:space="preserve">
          <source>Minutes past the current hour.</source>
          <target state="translated">当前时间过了几分钟。</target>
        </trans-unit>
        <trans-unit id="9eb18cc6cb54a3c25688822c68aea8834585db05" translate="yes" xml:space="preserve">
          <source>Minutes past the hour.</source>
          <target state="translated">小时后的分钟。</target>
        </trans-unit>
        <trans-unit id="9fcc2a870494a945127b62192effb291451b3f6c" translate="yes" xml:space="preserve">
          <source>Misaligned pointers may be used if the underlying hardware supports them &lt;b&gt;and&lt;/b&gt; the pointer is never used to point into the GC heap.</source>
          <target state="translated">如果基础硬件支持它们&lt;b&gt;，&lt;/b&gt;则可能会使用未对齐的指针，并且永远不要使用该指针指向GC堆。</target>
        </trans-unit>
        <trans-unit id="0a893ece8e469a3ca3d935c49f41d08d04b75ecc" translate="yes" xml:space="preserve">
          <source>Misc</source>
          <target state="translated">Misc</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="541cc60b15fef5f9a0d86353e83aac8f8978605b" translate="yes" xml:space="preserve">
          <source>Miscellaneous Mathematical Symbols-A</source>
          <target state="translated">杂项数学符号-A</target>
        </trans-unit>
        <trans-unit id="11779b66b9fb2d0a37251ee4317a6797b1ced04b" translate="yes" xml:space="preserve">
          <source>Miscellaneous Mathematical Symbols-B</source>
          <target state="translated">杂项数学符号-B</target>
        </trans-unit>
        <trans-unit id="a5ae444d30ca53b5d78b290b90087547ee9d3bad" translate="yes" xml:space="preserve">
          <source>Miscellaneous Symbols</source>
          <target state="translated">杂项符号</target>
        </trans-unit>
        <trans-unit id="d40df653d33c1970b2f4ff4a287cf2530bc9a141" translate="yes" xml:space="preserve">
          <source>Miscellaneous Symbols And Pictographs</source>
          <target state="translated">其他符号和象形文字</target>
        </trans-unit>
        <trans-unit id="cc7c226cc2dbc1d256d3a82995b8efaa4183a299" translate="yes" xml:space="preserve">
          <source>Miscellaneous Symbols and Arrows</source>
          <target state="translated">其他符号和箭头</target>
        </trans-unit>
        <trans-unit id="b4173dcb7119b89bcf0b405aae468ee1b3ada77b" translate="yes" xml:space="preserve">
          <source>Miscellaneous Technical</source>
          <target state="translated">杂项技术</target>
        </trans-unit>
        <trans-unit id="91b6cb48d150ba0933d7fc6f4df7440a745c169f" translate="yes" xml:space="preserve">
          <source>Mismatched arguments and formats result in a &lt;code&gt; FormatException&lt;/code&gt; being thrown.</source>
          <target state="translated">参数和格式不匹配会导致引发 &lt;code&gt; FormatException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f4313428de55c91dd490c268154ae445becae4a" translate="yes" xml:space="preserve">
          <source>Mixin Declaration</source>
          <target state="translated">搅拌器声明</target>
        </trans-unit>
        <trans-unit id="970c2320d1bfe8e77dd4e7dd5bb34d2e4ac013f5" translate="yes" xml:space="preserve">
          <source>Mixin Expressions</source>
          <target state="translated">混合表达式</target>
        </trans-unit>
        <trans-unit id="05c3d721d13b6e356ee3eef96ba0569377ee567e" translate="yes" xml:space="preserve">
          <source>Mixin Scope</source>
          <target state="translated">混合器范围</target>
        </trans-unit>
        <trans-unit id="4ca673828825e6fb0a1c7aa7b3baac8a4415fa74" translate="yes" xml:space="preserve">
          <source>Mixin Statement</source>
          <target state="translated">搅拌器声明</target>
        </trans-unit>
        <trans-unit id="a55840005f5cf42b3920857662d4a3179c53e14d" translate="yes" xml:space="preserve">
          <source>Mixin declarations, like: mixin(&quot;int x&quot;); &lt;a href=&quot;https://dlang.org/spec/module.html#mixin-declaration&quot;&gt;https://dlang.org/spec/module.html#mixin-declaration&lt;/a&gt;</source>
          <target state="translated">Mixin声明，例如：mixin（&amp;ldquo; int x&amp;rdquo;）; &lt;a href=&quot;https://dlang.org/spec/module.html#mixin-declaration&quot;&gt;https://dlang.org/spec/module.html#mixin-declaration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1246e35b912ba38445c7ecaa8bf8ad7a769360a5" translate="yes" xml:space="preserve">
          <source>Mixin to create a signal within a class object.</source>
          <target state="translated">Mixin用于在类对象中创建一个信号。</target>
        </trans-unit>
        <trans-unit id="47620c2433a5ab559d0c8a5a645ecf0ac1a65079" translate="yes" xml:space="preserve">
          <source>MixinTemplateName</source>
          <target state="translated">MixinTemplateName</target>
        </trans-unit>
        <trans-unit id="a80a20f619b719e7320185da056d428905f0e3b9" translate="yes" xml:space="preserve">
          <source>Mixing Memory Pools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef39b028b40565a8271f3d2ef7d30563984e8bc1" translate="yes" xml:space="preserve">
          <source>Mixing memory management strategies (GC + manual memory management) can be tricky, hence removing D's GC from the equation may be worthwhile sometimes.</source>
          <target state="translated">混合内存管理策略(GC+手动内存管理)是很棘手的,因此将D的GC从等式中删除有时可能是值得的。</target>
        </trans-unit>
        <trans-unit id="602c1de155aef24628d7038834874c6fffc0b6fa" translate="yes" xml:space="preserve">
          <source>Mixing struct constructors and &lt;code&gt;static opCall&lt;/code&gt; is not allowed.</source>
          <target state="translated">不允许混合使用struct构造函数和 &lt;code&gt;static opCall&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4103da3e3d11e8682ca7214516c5066dddbce1b" translate="yes" xml:space="preserve">
          <source>Mixins are evaluated in the scope of where they appear, not the scope of the template declaration:</source>
          <target state="translated">Mixins在其出现的范围内被评估,而不是模板声明的范围。</target>
        </trans-unit>
        <trans-unit id="c2e7f916aaa9cd501280e6c15b4f67cd1691d8dc" translate="yes" xml:space="preserve">
          <source>Mixins can add virtual functions to a class:</source>
          <target state="translated">Mixins可以为一个类添加虚拟函数。</target>
        </trans-unit>
        <trans-unit id="f55b2564a92bcf6859a24f6ce115142e96f27a3d" translate="yes" xml:space="preserve">
          <source>Mixins can be parameterized:</source>
          <target state="translated">Mixins可以被参数化。</target>
        </trans-unit>
        <trans-unit id="0e0cc6d6a4019a943d3fb16059acca448a091f6c" translate="yes" xml:space="preserve">
          <source>Mixins can parameterize symbols using alias parameters:</source>
          <target state="translated">Mixins可以使用别名参数对符号进行参数化。</target>
        </trans-unit>
        <trans-unit id="0d3456e398172f180f8497d1149d800d0157031d" translate="yes" xml:space="preserve">
          <source>MmFile objects control the memory mapped file resource.</source>
          <target state="translated">MmFile对象控制内存映射的文件资源。</target>
        </trans-unit>
        <trans-unit id="35175076c72c31fd517a5a9c6d72204f71d15dc7" translate="yes" xml:space="preserve">
          <source>Mn</source>
          <target state="translated">Mn</target>
        </trans-unit>
        <trans-unit id="d92d632ad70c36fb1672c13251c63eac88e413a9" translate="yes" xml:space="preserve">
          <source>Mode &lt;code&gt;mode&lt;/code&gt;</source>
          <target state="translated">模式 &lt;code&gt;mode&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88822b475ea7dae25ac66418498e7b0921c4b86a" translate="yes" xml:space="preserve">
          <source>Mode &lt;strong id=&quot;mode&quot;&gt;mode&lt;/strong&gt;();</source>
          <target state="translated">模式&lt;strong id=&quot;mode&quot;&gt;模式&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="a0f130d655b96fb098a22c25e359b43327c97c9e" translate="yes" xml:space="preserve">
          <source>Mode to associate with this File. The mode has the same semantics semantics as in the C standard library &lt;a href=&quot;http://cplusplus.com/reference/cstdio/fopen/&quot;&gt;fdopen&lt;/a&gt; function, and must be compatible with &lt;code&gt;fd&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c58c26e6b83749e7dad65a9fe45675deb95b104" translate="yes" xml:space="preserve">
          <source>Mode to use for decoding.</source>
          <target state="translated">用于解码的模式。</target>
        </trans-unit>
        <trans-unit id="bf450e500975a036b6274b77d63a23a31754d542" translate="yes" xml:space="preserve">
          <source>Modern Features?</source>
          <target state="translated">现代功能?</target>
        </trans-unit>
        <trans-unit id="9836b361a7d6a40632b395085dcbd7a2727fe256" translate="yes" xml:space="preserve">
          <source>Modern Formatted Writing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd2738f029c8a83162857e80150020a1b8efa00" translate="yes" xml:space="preserve">
          <source>Modifiable &lt;strong id=&quot;checkModifiable&quot;&gt;checkModifiable&lt;/strong&gt;(Scope* sc, int flag = 0);</source>
          <target state="translated">可修改的&lt;strong id=&quot;checkModifiable&quot;&gt;checkModifiable&lt;/strong&gt;（Scope * sc，int flag = 0）;</target>
        </trans-unit>
        <trans-unit id="08b349ac1c097b91fcbd83115613e840381fbc40" translate="yes" xml:space="preserve">
          <source>Modifiable.yes or Modifiable.initialization</source>
          <target state="translated">Modifiable.yes或Modifiable.initialization。</target>
        </trans-unit>
        <trans-unit id="e1a38da29f4d24e5a1f0e3b0d0a11f0ec65a4ef0" translate="yes" xml:space="preserve">
          <source>Modification of pointer values.</source>
          <target state="translated">修改指针值。</target>
        </trans-unit>
        <trans-unit id="f260e757cec75096bc3eefbfb1c4a14720832017" translate="yes" xml:space="preserve">
          <source>Modifier</source>
          <target state="translated">Modifier</target>
        </trans-unit>
        <trans-unit id="c28e47f6044e41ff0471e331bc5947f7ad950346" translate="yes" xml:space="preserve">
          <source>Modifier Tone Letters</source>
          <target state="translated">编辑色调字母</target>
        </trans-unit>
        <trans-unit id="8346f1ccfc1c83e1327c9516f54835e7836ddef2" translate="yes" xml:space="preserve">
          <source>Modifier_Letter</source>
          <target state="translated">Modifier_Letter</target>
        </trans-unit>
        <trans-unit id="31a38c9c5af3c6a38d76df500b9d21534d32817b" translate="yes" xml:space="preserve">
          <source>Modifier_Symbol</source>
          <target state="translated">Modifier_Symbol</target>
        </trans-unit>
        <trans-unit id="3a7ea294bf33134dce4b142b8b7182de29b978b2" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modifiers</target>
        </trans-unit>
        <trans-unit id="9fe408e12dc6ee8d44c87b38b82ff435c397a441" translate="yes" xml:space="preserve">
          <source>Modify</source>
          <target state="translated">Modify</target>
        </trans-unit>
        <trans-unit id="e7532a054e72ed2b2ee923a9b28bf5cd38743380" translate="yes" xml:space="preserve">
          <source>Modify all expression type of return statements to tret.</source>
          <target state="translated">将所有表达式类型的返回语句修改为ret。</target>
        </trans-unit>
        <trans-unit id="b8ff02892916ff59f7fbd4e617fccd01f6bca576" translate="yes" xml:space="preserve">
          <source>Module</source>
          <target state="translated">Module</target>
        </trans-unit>
        <trans-unit id="6658e9ce5ba737387d02a8c5def43fd4cf55b431" translate="yes" xml:space="preserve">
          <source>Module &lt;code&gt;m&lt;/code&gt;</source>
          <target state="translated">模块 &lt;code&gt;m&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="937ba920fb486031428c2fad0ad46f6224397871" translate="yes" xml:space="preserve">
          <source>Module &lt;code&gt;mod&lt;/code&gt;</source>
          <target state="translated">模块 &lt;code&gt;mod&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="53369c001691b815ca3a05eecd1682d09a8470cd" translate="yes" xml:space="preserve">
          <source>Module &lt;strong id=&quot;entrypoint&quot;&gt;entrypoint&lt;/strong&gt;;</source>
          <target state="translated">模块&lt;strong id=&quot;entrypoint&quot;&gt;入口点&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="c8bf8cd6d1bd90507075fdd4361174c0fa37286c" translate="yes" xml:space="preserve">
          <source>Module &lt;strong id=&quot;importedFrom&quot;&gt;importedFrom&lt;/strong&gt;;</source>
          <target state="translated">模块&lt;strong id=&quot;importedFrom&quot;&gt;importedFrom&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ff53f93875f0242523e6c98ab579d326f23c343e" translate="yes" xml:space="preserve">
          <source>Module &lt;strong id=&quot;parse&quot;&gt;parse&lt;/strong&gt;();</source>
          <target state="translated">模块&lt;strong id=&quot;parse&quot;&gt;解析&lt;/strong&gt;（）；</target>
        </trans-unit>
        <trans-unit id="512a40abc1493f140d5c39a8e2d19f624b504462" translate="yes" xml:space="preserve">
          <source>Module &lt;strong id=&quot;parse&quot;&gt;parse&lt;/strong&gt;(AST)(DiagnosticReporter diagnosticReporter);</source>
          <target state="translated">模块&lt;strong id=&quot;parse&quot;&gt;解析&lt;/strong&gt;（AST）（DiagnosticReporter diagnosticReporter）;</target>
        </trans-unit>
        <trans-unit id="c79df9fc0acbd8cd2ea949b87e97fb853b994bf3" translate="yes" xml:space="preserve">
          <source>Module &lt;strong id=&quot;rootHasMain&quot;&gt;rootHasMain&lt;/strong&gt;;</source>
          <target state="translated">模块&lt;strong id=&quot;rootHasMain&quot;&gt;rootHasMain&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b60388160a0e83135f7049a2a65562bf3b5b53e0" translate="yes" xml:space="preserve">
          <source>Module Declaration</source>
          <target state="translated">模块声明</target>
        </trans-unit>
        <trans-unit id="fd27d97553a2a8a4d766210d868e6015f60e1ae7" translate="yes" xml:space="preserve">
          <source>Module Initialization and Termination</source>
          <target state="translated">模块初始化和终止</target>
        </trans-unit>
        <trans-unit id="ca4ce7b8e6017ea6f7141a9e94c2ffc705fd320b" translate="yes" xml:space="preserve">
          <source>Module Scope Operator</source>
          <target state="translated">模块范围操作员</target>
        </trans-unit>
        <trans-unit id="6483f83ef8550752d7a2e299c6b850018ec74cd5" translate="yes" xml:space="preserve">
          <source>Module constructor and destructor routines.</source>
          <target state="translated">模块构造和反构造器例程。</target>
        </trans-unit>
        <trans-unit id="2d4c60ff894bd0aa405d27e42fcae8268f876f90" translate="yes" xml:space="preserve">
          <source>Module containing core time functionality, such as &lt;a href=&quot;#Duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; (which represents a duration of time) or &lt;a href=&quot;#MonoTime&quot;&gt;&lt;code&gt;MonoTime&lt;/code&gt;&lt;/a&gt; (which represents a timestamp of the system's monotonic clock).</source>
          <target state="translated">包含核心时间功能的模块，例如&lt;a href=&quot;#Duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt;（代表持续时间）或&lt;a href=&quot;#MonoTime&quot;&gt; &lt;code&gt;MonoTime&lt;/code&gt; &lt;/a&gt;（代表系统单调时钟的时间戳）。</target>
        </trans-unit>
        <trans-unit id="0a81435755ae74b4d015fcd51a7cfdac0b3182d8" translate="yes" xml:space="preserve">
          <source>Module containing some basic benchmarking and timing functionality.</source>
          <target state="translated">包含一些基本的基准测试和定时功能的模块。</target>
        </trans-unit>
        <trans-unit id="a0a8a168e341b16dc8158618161a129b9b407119" translate="yes" xml:space="preserve">
          <source>Module in which the D main is</source>
          <target state="translated">D主的模块</target>
        </trans-unit>
        <trans-unit id="58b8208bcfdac835bd589f0a0f394caee9130541" translate="yes" xml:space="preserve">
          <source>Module names</source>
          <target state="translated">模块名称</target>
        </trans-unit>
        <trans-unit id="70899daeefb999b373eb42fec0ee19192cad4996" translate="yes" xml:space="preserve">
          <source>Module symbols can be imported.</source>
          <target state="translated">可以导入模块符号。</target>
        </trans-unit>
        <trans-unit id="a2b694f1832151dfbd90f5a6a709070e10c8d5ee" translate="yes" xml:space="preserve">
          <source>Module this node belongs to</source>
          <target state="translated">该节点所属的模块</target>
        </trans-unit>
        <trans-unit id="fa098333373ac1a458273e0aff013b55525016b7" translate="yes" xml:space="preserve">
          <source>Module unit test handler</source>
          <target state="translated">模块单元测试处理程序</target>
        </trans-unit>
        <trans-unit id="8e4dbc79efde2a2b6f620f3e85fc1dec81fe54f7" translate="yes" xml:space="preserve">
          <source>ModuleDeclaration</source>
          <target state="translated">ModuleDeclaration</target>
        </trans-unit>
        <trans-unit id="1d70436f71331e7691f5e4a6575b7798509f7215" translate="yes" xml:space="preserve">
          <source>ModuleFullyQualifiedName</source>
          <target state="translated">ModuleFullyQualifiedName</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="cb6c75d384ba2ee83daf2876f5a399b7c1f0f1fe" translate="yes" xml:space="preserve">
          <source>Modules &lt;strong id=&quot;createModules&quot;&gt;createModules&lt;/strong&gt;(ref Strings files, ref Strings libmodules);</source>
          <target state="translated">模块&lt;strong id=&quot;createModules&quot;&gt;createModules&lt;/strong&gt;（ref Strings files，ref Strings libmodules）;</target>
        </trans-unit>
        <trans-unit id="3da6e793084964d8a57e69c238db9dd58256809c" translate="yes" xml:space="preserve">
          <source>Modules are always compiled at global scope, and are unaffected by surrounding attributes or other modifiers.</source>
          <target state="translated">模块总是在全局范围内编译,并且不受周围属性或其他修改器的影响。</target>
        </trans-unit>
        <trans-unit id="ee05c4b1bd6be476eb53ca950de0eb4c248b18b7" translate="yes" xml:space="preserve">
          <source>Modules automatically provide a namespace scope for their contents. Modules superficially resemble classes, but differ in that:</source>
          <target state="translated">模块自动为其内容提供一个命名空间范围。模块表面上与类相似,但不同的是。</target>
        </trans-unit>
        <trans-unit id="b416e3eb463a331e85667194c836c015f4d354e1" translate="yes" xml:space="preserve">
          <source>Modules can be grouped together in hierarchies called</source>
          <target state="translated">模块可以以层次结构的形式组合在一起,称为</target>
        </trans-unit>
        <trans-unit id="3e78263eed2a0541f7c20a04b773beb7d10b627d" translate="yes" xml:space="preserve">
          <source>Modules do not inherit, they have no super modules, etc.</source>
          <target state="translated">模块不继承,它们没有超级模块等。</target>
        </trans-unit>
        <trans-unit id="fe99ae5c5906ceceb6d714060f49ed25dbefbd27" translate="yes" xml:space="preserve">
          <source>Modules have a one-to-one correspondence with source files. The module name is, by default, the file name with the path and extension stripped off, and can be set explicitly with the module declaration.</source>
          <target state="translated">模块与源文件有一对一的对应关系,默认情况下,模块名是去掉路径和扩展名的文件名,可以通过模块声明明确设置。默认情况下,模块名是去掉路径和扩展名的文件名,可以在模块声明中明确设置。</target>
        </trans-unit>
        <trans-unit id="077b9b7259692d5a93f09beb6ff63b63184c5793" translate="yes" xml:space="preserve">
          <source>Modules offer several guarantees:</source>
          <target state="translated">模块提供了多项保障。</target>
        </trans-unit>
        <trans-unit id="58a0f28806f53fd75308c3f2a793267cf1428ae8" translate="yes" xml:space="preserve">
          <source>Modulus</source>
          <target state="translated">Modulus</target>
        </trans-unit>
        <trans-unit id="c3bdbab40a4be4ac1b8eb1ccb2dbb2eaf8ed480f" translate="yes" xml:space="preserve">
          <source>Mongolian</source>
          <target state="translated">Mongolian</target>
        </trans-unit>
        <trans-unit id="1c76a58fbf51dcfb4f86986f8351b250a767af1c" translate="yes" xml:space="preserve">
          <source>MonoTimeImpl &lt;strong id=&quot;max&quot;&gt;max&lt;/strong&gt;();</source>
          <target state="translated">MonoTimeImpl &lt;strong id=&quot;max&quot;&gt;max&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="75204b25a4143c50617e7f536fd89fa5538edf26" translate="yes" xml:space="preserve">
          <source>MonoTimeImpl &lt;strong id=&quot;min&quot;&gt;min&lt;/strong&gt;();</source>
          <target state="translated">MonoTimeImpl &lt;strong id=&quot;min&quot;&gt;min&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="fee0ee10984bd3ac7bbdf08b79f3b112f28e5f09" translate="yes" xml:space="preserve">
          <source>MonoTimeImpl &lt;strong id=&quot;zero&quot;&gt;zero&lt;/strong&gt;();</source>
          <target state="translated">MonoTimeImpl &lt;strong id=&quot;zero&quot;&gt;零&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="eede0f12587dd7beec0a1e43ee87fff438df01b9" translate="yes" xml:space="preserve">
          <source>Month &lt;code&gt;month&lt;/code&gt;</source>
          <target state="translated">月 &lt;code&gt;month&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="770498cc7209865e7142aee60b35cd4ef1a665ec" translate="yes" xml:space="preserve">
          <source>Month of a Gregorian Year.</source>
          <target state="translated">格里高利年的月份。</target>
        </trans-unit>
        <trans-unit id="a982879f5e351a31dc81a576cd9f499ed195b9ca" translate="yes" xml:space="preserve">
          <source>Month of the year (January is 1).</source>
          <target state="translated">年的月份(1月为1)。</target>
        </trans-unit>
        <trans-unit id="267248d9e2a350a08fb014509dd997369fd505b0" translate="yes" xml:space="preserve">
          <source>More precisely, an expression of the form &lt;code&gt;arr[&lt;/code&gt;</source>
          <target state="translated">更准确地说，是 &lt;code&gt;arr[&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="51359e07cc3dafc35c2e930e5c6893f3b29a6a3e" translate="yes" xml:space="preserve">
          <source>More than one qualifier may apply to a type. The order of application is irrelevant, for example given an unqualified type &lt;code&gt;T&lt;/code&gt;, &lt;code&gt;const shared T&lt;/code&gt; and &lt;code&gt;shared const T&lt;/code&gt; are the same type. For that reason, this document depicts qualifier combinations without parentheses unless necessary and in alphabetic order.</source>
          <target state="translated">一个类型可以使用多个限定符。应用顺序无关紧要，例如，给定非限定类型 &lt;code&gt;T&lt;/code&gt; ，则 &lt;code&gt;const shared T&lt;/code&gt; 和 &lt;code&gt;shared const T&lt;/code&gt; 是同一类型。出于这个原因，除非必要且按字母顺序，否则本文档描述了不带括号的限定词组合。</target>
        </trans-unit>
        <trans-unit id="6b91b6e5e4417fbf29a4b247eba962d491f1a192" translate="yes" xml:space="preserve">
          <source>Most Objective-C code is bundled in something called a &quot;Framework&quot;. This is basically a regular directory, with the &lt;code&gt;.framework&lt;/code&gt; extension and a specific directory layout. A framework contains a dynamic library, all public header files and any resources (images, sounds and so on) required by the framework.</source>
          <target state="translated">大多数Objective-C代码都捆绑在一个称为&amp;ldquo;框架&amp;rdquo;的东西中。这基本上是一个常规目录，带有 &lt;code&gt;.framework&lt;/code&gt; 扩展名和特定的目录布局。框架包含动态库，所有公共头文件和框架所需的任何资源（图像，声音等）。</target>
        </trans-unit>
        <trans-unit id="bfb12bc22804b44b167d93aec3f3c70407b2e35d" translate="yes" xml:space="preserve">
          <source>Most functions do not perform any memory allocations, and if a string is returned, it is usually a slice of an input string. If a function allocates, this is explicitly mentioned in the documentation.</source>
          <target state="translated">大多数函数不执行任何内存分配,如果返回一个字符串,它通常是一个输入字符串的片断。如果一个函数进行了分配,在文档中会明确提到。</target>
        </trans-unit>
        <trans-unit id="774795e055d4e2dccab7943b620741f1d26bed50" translate="yes" xml:space="preserve">
          <source>Most negative &lt;code&gt;Duration&lt;/code&gt; possible.</source>
          <target state="translated">可能的负面最大 &lt;code&gt;Duration&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="581c4c1b8a2332d611ce4416497bc282ce6dfdaa" translate="yes" xml:space="preserve">
          <source>Most negative &lt;code&gt;MonoTime&lt;/code&gt; possible.</source>
          <target state="translated">最负的 &lt;code&gt;MonoTime&lt;/code&gt; 可能。</target>
        </trans-unit>
        <trans-unit id="ddbd3dbc157ec8539b793dbad7b600adfc5f9e59" translate="yes" xml:space="preserve">
          <source>Most negative &lt;code&gt;TickDuration&lt;/code&gt; possible.</source>
          <target state="translated">可能的负数 &lt;code&gt;TickDuration&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1009e1ed86d39d0ca096eb1687471230fd67e3f4" translate="yes" xml:space="preserve">
          <source>Most numbers are ordered naturally.</source>
          <target state="translated">大多数数字是自然排序的。</target>
        </trans-unit>
        <trans-unit id="4def053b3d04f0dae2fabbf052a1fa8bb609014a" translate="yes" xml:space="preserve">
          <source>Most of the functionality in this module is not available on iOS, tvOS and watchOS. The only functions available on those platforms are: &lt;a href=&quot;#environment&quot;&gt;&lt;code&gt;environment&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#thisProcessID&quot;&gt;&lt;code&gt;thisProcessID&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#thisThreadID&quot;&gt;&lt;code&gt;thisThreadID&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4812af24b14425f80ec6fa5d4117b8b760e8ef9a" translate="yes" xml:space="preserve">
          <source>Most of the logic to implement scoped pointers and scoped references is here.</source>
          <target state="translated">大部分实现作用域指针和作用域引用的逻辑都在这里。</target>
        </trans-unit>
        <trans-unit id="c833ba71d68fc55966f6e1456e6db2fd0300c96d" translate="yes" xml:space="preserve">
          <source>Most programs should not use the coarse clock, exactly because it's less precise, and most programs don't need to get the time often enough to care, but for those rare programs that need to get the time extremely frequently (e.g. hundreds of thousands of times a second) but don't care about high precision, the coarse clock might be appropriate.</source>
          <target state="translated">大多数程序不应该使用粗钟,正是因为它的精度较低,大多数程序不需要经常获取时间,所以不需要在意,但对于那些极少数需要极其频繁地获取时间(如每秒几十万次),但又不在乎高精度的程序,粗钟可能是合适的。</target>
        </trans-unit>
        <trans-unit id="aa1b6e1a33d26c83c47eddc206c5ac1e624e5155" translate="yes" xml:space="preserve">
          <source>Most programs should not use this directly, but it's exposed for those few programs that need it.</source>
          <target state="translated">大多数程序应该不会直接使用这个,但对于那些少数需要它的程序来说,它是暴露的。</target>
        </trans-unit>
        <trans-unit id="7e894652e8d984064189391f996d60397e2a48ec" translate="yes" xml:space="preserve">
          <source>Move a BLOB Handle to a New Row</source>
          <target state="translated">将一个BLOB手柄移动到新的行。</target>
        </trans-unit>
        <trans-unit id="add02f8fc89679f014286c95aa282291626003eb" translate="yes" xml:space="preserve">
          <source>Moves &lt;code&gt;source&lt;/code&gt; into &lt;code&gt;target&lt;/code&gt;, via a destructive copy when necessary.</source>
          <target state="translated">必要时通过破坏性副本将 &lt;code&gt;source&lt;/code&gt; 移动到 &lt;code&gt;target&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16a236d46c92b4a5ca559f8a89c2b3c577b168e0" translate="yes" xml:space="preserve">
          <source>Moves all elements from one range to another.</source>
          <target state="translated">将所有元素从一个范围移动到另一个范围。</target>
        </trans-unit>
        <trans-unit id="8479b9f61cb11354afd2e1600228140ad6b9d6dc" translate="yes" xml:space="preserve">
          <source>Moves as many elements as possible from one range to another.</source>
          <target state="translated">将尽可能多的元素从一个范围移动到另一个范围。</target>
        </trans-unit>
        <trans-unit id="960405f6c4b3aa5de72b116119525712115be474" translate="yes" xml:space="preserve">
          <source>Moves element at index &lt;code&gt;i&lt;/code&gt; of &lt;code&gt;r&lt;/code&gt; out and returns it. Leaves &lt;code&gt; r[i]&lt;/code&gt; in a destroyable state that does not allocate any resources (usually equal to its &lt;code&gt;.init&lt;/code&gt; value).</source>
          <target state="translated">将 &lt;code&gt;r&lt;/code&gt; 的索引 &lt;code&gt;i&lt;/code&gt; 处的元素移出并返回。使 &lt;code&gt; r[i]&lt;/code&gt; 处于不分配任何资源的可破坏状态（通常等于其 &lt;code&gt;.init&lt;/code&gt; 值）。</target>
        </trans-unit>
        <trans-unit id="78ea6259d5295d73b4c9b122251d954bd3288ccc" translate="yes" xml:space="preserve">
          <source>Moves out the back.</source>
          <target state="translated">移动到后面去。</target>
        </trans-unit>
        <trans-unit id="e8dbe19673ddfdfe7531306a22cbece7e08fa915" translate="yes" xml:space="preserve">
          <source>Moves out the front.</source>
          <target state="translated">移动到了前面。</target>
        </trans-unit>
        <trans-unit id="21464138e9b7b84f1e21b5677eb4772e282fc223" translate="yes" xml:space="preserve">
          <source>Moves the back of &lt;code&gt;r&lt;/code&gt; out and returns it. Leaves &lt;code&gt;r.back&lt;/code&gt; in a destroyable state that does not allocate any resources (usually equal to its &lt;code&gt;.init&lt;/code&gt; value).</source>
          <target state="translated">将 &lt;code&gt;r&lt;/code&gt; 的后移并返回。使 &lt;code&gt;r.back&lt;/code&gt; 处于不分配任何资源的可破坏状态（通常等于其 &lt;code&gt;.init&lt;/code&gt; 值）。</target>
        </trans-unit>
        <trans-unit id="89199b203d67cc4472b5a42c11f218296b0fa959" translate="yes" xml:space="preserve">
          <source>Moves the front of &lt;code&gt;r&lt;/code&gt; out and returns it. Leaves &lt;code&gt;r.front&lt;/code&gt; in a destroyable state that does not allocate any resources (usually equal to its &lt;code&gt;.init&lt;/code&gt; value).</source>
          <target state="translated">将 &lt;code&gt;r&lt;/code&gt; 的前移并返回。使 &lt;code&gt;r.front&lt;/code&gt; 处于不分配任何资源的可破坏状态（通常等于其 &lt;code&gt;.init&lt;/code&gt; 值）。</target>
        </trans-unit>
        <trans-unit id="22eb7096554b6e74868e7d16970a1dc126973c23" translate="yes" xml:space="preserve">
          <source>Much of the D documentation itself is generated this way, including this page. Such documentation is marked at the bottom as being generated by Ddoc.</source>
          <target state="translated">D文档本身的很多内容都是这样生成的,包括本页面。这种文档在底部标明是由Ddoc生成的。</target>
        </trans-unit>
        <trans-unit id="d60ee27cc756708ec2d1a2d75f87ef3c6b16e014" translate="yes" xml:space="preserve">
          <source>Mul Expressions</source>
          <target state="translated">木质表达式</target>
        </trans-unit>
        <trans-unit id="7e13b5b1d94de82bc38c31c61776089164a0d74c" translate="yes" xml:space="preserve">
          <source>Mul expressions for floating point operands are not associative.</source>
          <target state="translated">浮点操作数的Mul表达式不具有关联性。</target>
        </trans-unit>
        <trans-unit id="bf7dc9a1dd03ca0b5671d66051467ce10dce0721" translate="yes" xml:space="preserve">
          <source>Multi-disk zips not supported.</source>
          <target state="translated">不支持多盘压缩。</target>
        </trans-unit>
        <trans-unit id="098b25f016e7cee3aeb46b0951ffba8ca7a4aba9" translate="yes" xml:space="preserve">
          <source>Multi-line mode, match ^, $ on start and end line separators as well as start and end of input.</source>
          <target state="translated">多行模式,在开始和结束行的分隔符以及输入的开始和结束处匹配^、$。</target>
        </trans-unit>
        <trans-unit id="7df91ee85cfe006da084d6eec2205103d82b62a7" translate="yes" xml:space="preserve">
          <source>MultiLogger logs to multiple &lt;code&gt;Logger&lt;/code&gt;. The &lt;code&gt;Logger&lt;/code&gt;s are stored in an &lt;code&gt;Logger[]&lt;/code&gt; in their order of insertion.</source>
          <target state="translated">MultiLogger记录到多个 &lt;code&gt;Logger&lt;/code&gt; 。该 &lt;code&gt;Logger&lt;/code&gt; s的存储在 &lt;code&gt;Logger[]&lt;/code&gt; 在它们的插入的顺序。</target>
        </trans-unit>
        <trans-unit id="740922ac20ba9136af0a0a62b3c2c734d9f20fc6" translate="yes" xml:space="preserve">
          <source>Multiple</source>
          <target state="translated">Multiple</target>
        </trans-unit>
        <trans-unit id="29e590b1115ee1a9a48191676c1dd3a4d12cb97a" translate="yes" xml:space="preserve">
          <source>Multiple functions can be passed to &lt;code&gt;map&lt;/code&gt;. In that case, the element type of &lt;code&gt;map&lt;/code&gt; is a tuple containing one element for each function.</source>
          <target state="translated">可以将多个函数传递给 &lt;code&gt;map&lt;/code&gt; 。在这种情况下， &lt;code&gt;map&lt;/code&gt; 的元素类型是一个元组，其中每个功能包含一个元素。</target>
        </trans-unit>
        <trans-unit id="abca3b636846e1599131fb30115e7624fb04c581" translate="yes" xml:space="preserve">
          <source>Multiple identifiers in the</source>
          <target state="translated">中的多个标识符</target>
        </trans-unit>
        <trans-unit id="02d184893da2dc41280aed339b733b86a1d5d7d9" translate="yes" xml:space="preserve">
          <source>Multiple indices can be passed into &lt;code&gt;remove&lt;/code&gt;. In that case, elements at the respective indices are all removed. The indices must be passed in increasing order, otherwise an exception occurs.</source>
          <target state="translated">可以将多个索引传递到 &lt;code&gt;remove&lt;/code&gt; 中。在这种情况下，所有索引处的元素都将被删除。索引必须以递增顺序传递，否则会发生异常。</target>
        </trans-unit>
        <trans-unit id="ad9e29f23e6c577c3330b7f72495b39a5263c9d7" translate="yes" xml:space="preserve">
          <source>Multiple instantiations of a</source>
          <target state="translated">一个的多个实例</target>
        </trans-unit>
        <trans-unit id="440d1a8a232140baee2e245b3e53c432fe0e99fc" translate="yes" xml:space="preserve">
          <source>Multiple substitutes</source>
          <target state="translated">多个替代品</target>
        </trans-unit>
        <trans-unit id="d488fe5f5a2700bbcfa9a073ec3ff1f6ecfd5b57" translate="yes" xml:space="preserve">
          <source>Multiplies an integral value and a &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">将整数值与 &lt;code&gt;Duration&lt;/code&gt; 相乘。</target>
        </trans-unit>
        <trans-unit id="56a0e7e79948bc24fcfd6b23d109776c18e4bdf1" translate="yes" xml:space="preserve">
          <source>Multiplies or divides the duration by an integer value.</source>
          <target state="translated">将持续时间乘以或除以一个整数值。</target>
        </trans-unit>
        <trans-unit id="0954814fc4bb5f73545aacc2e2398a5d8549c662" translate="yes" xml:space="preserve">
          <source>Multiplies/Divides the duration by an integer value as well as assigning the result to this &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">将持续时间乘以/除以整数值，并将结果分配给该 &lt;code&gt;Duration&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b7cc0cb1ca5c98043347b03c80d00881ef4f41c9" translate="yes" xml:space="preserve">
          <source>Multiply two complex floating point numbers, x and y.</source>
          <target state="translated">将两个复杂的浮点数x和y相乘。</target>
        </trans-unit>
        <trans-unit id="7c62087494680c6ab390a67b385387fc2371ff36" translate="yes" xml:space="preserve">
          <source>Multiply two signed integers, checking for overflow.</source>
          <target state="translated">将两个有符号的整数相乘,检查是否溢出。</target>
        </trans-unit>
        <trans-unit id="5ace69a7d289fcbc18bab280e6a93de8a21ddc54" translate="yes" xml:space="preserve">
          <source>Multiply two unsigned integers, checking for overflow (aka carry).</source>
          <target state="translated">将两个无符号整数相乘,检查是否有溢出(也就是携带)。</target>
        </trans-unit>
        <trans-unit id="5880acb922eaf637f5fe6ee51c64bbc5576e150e" translate="yes" xml:space="preserve">
          <source>MultiwayMerge!(less, RangeOfRanges) &lt;strong id=&quot;multiwayMerge&quot;&gt;multiwayMerge&lt;/strong&gt;(alias less = &quot;a &amp;lt; b&quot;, RangeOfRanges)(RangeOfRanges ror);</source>
          <target state="translated">MultiwayMerge！（less，RangeOfRanges）&lt;strong id=&quot;multiwayMerge&quot;&gt;multiwayMerge&lt;/strong&gt;（alias less =&amp;ldquo; a &amp;lt;b&amp;rdquo;，RangeOfRanges）（RangeOfRanges ror）;</target>
        </trans-unit>
        <trans-unit id="efa03890066c23a8b19ca12948a9e10fceae838f" translate="yes" xml:space="preserve">
          <source>MurmurHash3 comes in three flavors, listed in increasing order of throughput:</source>
          <target state="translated">MurmurHash3有三种口味,按吞吐量增加的顺序排列。</target>
        </trans-unit>
        <trans-unit id="4f19edd3144a2656247fe56232af4c5408c8b7ee" translate="yes" xml:space="preserve">
          <source>Musical Symbols</source>
          <target state="translated">音乐符号</target>
        </trans-unit>
        <trans-unit id="13bcc5c25bae00735d267b69807a37eb90d90472" translate="yes" xml:space="preserve">
          <source>Mutation</source>
          <target state="translated">Mutation</target>
        </trans-unit>
        <trans-unit id="c0b02d18cf57f54fa894db9640ab1fdf261c7702" translate="yes" xml:space="preserve">
          <source>Mutex &lt;code&gt;m&lt;/code&gt;</source>
          <target state="translated">互斥 &lt;code&gt;m&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc7eaf9d7996275cabd58454896268bb0c4057bf" translate="yes" xml:space="preserve">
          <source>Mutex &lt;code&gt;mutex&lt;/code&gt;</source>
          <target state="translated">互斥 &lt;code&gt;mutex&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee9066f4d731d8a141c6e684743ee9a9527de8b6" translate="yes" xml:space="preserve">
          <source>Mutex Handle</source>
          <target state="translated">互换手柄</target>
        </trans-unit>
        <trans-unit id="9f117864c1709baa2c76d7b2cfa8d17c9f1bfe11" translate="yes" xml:space="preserve">
          <source>Mutex Methods Object</source>
          <target state="translated">Mutex方法对象</target>
        </trans-unit>
        <trans-unit id="9ca067080a430d66f997055e5f2d644e22736a96" translate="yes" xml:space="preserve">
          <source>Mutex Verification Routines</source>
          <target state="translated">Mutex验证例程</target>
        </trans-unit>
        <trans-unit id="7703eaffd0654744dd25ed0b2c8483a972228de2" translate="yes" xml:space="preserve">
          <source>Mutex for mutually exclusive access.</source>
          <target state="translated">互斥访问的Mutex。</target>
        </trans-unit>
        <trans-unit id="82f2c9599c5c14be2ce92b9de958cb57db81b38f" translate="yes" xml:space="preserve">
          <source>Mutexes</source>
          <target state="translated">Mutexes</target>
        </trans-unit>
        <trans-unit id="928b7c48a60ad93b81bc3bee9d274c5f2aed9ad3" translate="yes" xml:space="preserve">
          <source>Myanmar</source>
          <target state="translated">Myanmar</target>
        </trans-unit>
        <trans-unit id="355376d91cd047a2d8fdca64b43c804618ed3101" translate="yes" xml:space="preserve">
          <source>Myanmar Extended-A</source>
          <target state="translated">缅甸扩展-A</target>
        </trans-unit>
        <trans-unit id="b51a60734da64be0e618bacbea2865a8a7dcd669" translate="yes" xml:space="preserve">
          <source>N</source>
          <target state="translated">N</target>
        </trans-unit>
        <trans-unit id="de9d4243b85d288bbb9d4e29d9b8114613e21d53" translate="yes" xml:space="preserve">
          <source>N-ary predicate that reverses the order of arguments, e.g., given &lt;code&gt;pred(a, b, c)&lt;/code&gt;, returns &lt;code&gt;pred(c, b, a)&lt;/code&gt;.</source>
          <target state="translated">反转参数顺序的N元谓词，例如，给定 &lt;code&gt;pred(a, b, c)&lt;/code&gt; ，返回 &lt;code&gt;pred(c, b, a)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9d371451b6909ac85117130b9153a96499a362c" translate="yes" xml:space="preserve">
          <source>NAME</source>
          <target state="translated">NAME</target>
        </trans-unit>
        <trans-unit id="d82a19a46f2f7da0f84cb56740a41e0148eda5c1" translate="yes" xml:space="preserve">
          <source>NAN</source>
          <target state="translated">NAN</target>
        </trans-unit>
        <trans-unit id="e2f31d8d8e29c1c65e1a03cf1b1495f55b89828e" translate="yes" xml:space="preserve">
          <source>NANs of the same sign are ordered by the payload ('negative' ones - in reverse order).</source>
          <target state="translated">同号的NAN按有效载荷排序(&quot;负 &quot;号--顺序相反)。</target>
        </trans-unit>
        <trans-unit id="5d468ae642bb247a8e01e4ff6b3d5521a502f435" translate="yes" xml:space="preserve">
          <source>NANs of the same sign are ordered by the payload.</source>
          <target state="translated">同号的NAN按有效载荷排序。</target>
        </trans-unit>
        <trans-unit id="3d4b99ee66548ff50c18139181185129923f01ff" translate="yes" xml:space="preserve">
          <source>NCS backward compatibility</source>
          <target state="translated">NCS向后兼容性</target>
        </trans-unit>
        <trans-unit id="f32955bf4c7fd11cc57b3ad4ab0172c20d35e0aa" translate="yes" xml:space="preserve">
          <source>NDP[8] &lt;strong id=&quot;_8087elems&quot;&gt;_8087elems&lt;/strong&gt;;</source>
          <target state="translated">NDP [8] &lt;strong id=&quot;_8087elems&quot;&gt;_8087elems&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="dc1bfb052f62695e8afc872dbacb4c070b0c10e5" translate="yes" xml:space="preserve">
          <source>NEWREG</source>
          <target state="translated">NEWREG</target>
        </trans-unit>
        <trans-unit id="8e64e5eebed2a307131d496e00360f4a910e75dc" translate="yes" xml:space="preserve">
          <source>NKo</source>
          <target state="translated">NKo</target>
        </trans-unit>
        <trans-unit id="965befa21e77d9af06a32a773577d2548bb3c644" translate="yes" xml:space="preserve">
          <source>NL line feed, new line</source>
          <target state="translated">NL 线路输入,新线路</target>
        </trans-unit>
        <trans-unit id="8ac00a7e70abeeaf254830eb6d9428e78c8d7ef4" translate="yes" xml:space="preserve">
          <source>NN</source>
          <target state="translated">NN</target>
        </trans-unit>
        <trans-unit id="81baa761ece464984c4726ca74944a94c4dca7bc" translate="yes" xml:space="preserve">
          <source>NO LONGER USED</source>
          <target state="translated">不再使用</target>
        </trans-unit>
        <trans-unit id="0654a028e5aea48c8fbb09871b8f397a186c883b" translate="yes" xml:space="preserve">
          <source>NONE</source>
          <target state="translated">NONE</target>
        </trans-unit>
        <trans-unit id="556cfa38702a7b11d3a265b69b1a1f579954c6ad" translate="yes" xml:space="preserve">
          <source>NOT USED</source>
          <target state="translated">不使用</target>
        </trans-unit>
        <trans-unit id="a8ad860c15810cce0e7beac1c91da3ab2cb22c47" translate="yes" xml:space="preserve">
          <source>NOTE</source>
          <target state="translated">NOTE</target>
        </trans-unit>
        <trans-unit id="22f6c302a991a23878dc1d3fd193f165c6d7378d" translate="yes" xml:space="preserve">
          <source>NOTE 2:</source>
          <target state="translated">附注2:</target>
        </trans-unit>
        <trans-unit id="92dfb30e422cabeb6b909c9930e19e573ebc5371" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;code&gt;delete&lt;/code&gt; has been deprecated. Instead, please use &lt;a href=&quot;https://dlang.org/phobos/object.html#destroy&quot;&gt;&lt;code&gt;destroy&lt;/code&gt;&lt;/a&gt; if feasible, or &lt;a href=&quot;https://dlang.org/phobos/core_memory.html#__delete&quot;&gt;&lt;code&gt;core.memory.__delete&lt;/code&gt;&lt;/a&gt; as a last resort.</source>
          <target state="translated">注意：不建议 &lt;code&gt;delete&lt;/code&gt; 。相反，如果可行，请使用&lt;a href=&quot;https://dlang.org/phobos/object.html#destroy&quot;&gt; &lt;code&gt;destroy&lt;/code&gt; &lt;/a&gt;，或者将&lt;a href=&quot;https://dlang.org/phobos/core_memory.html#__delete&quot;&gt; &lt;code&gt;core.memory.__delete&lt;/code&gt; &lt;/a&gt;作为最后的选择。</target>
        </trans-unit>
        <trans-unit id="41627eab8a13abe6cd0a95719c7b5b2435940124" translate="yes" xml:space="preserve">
          <source>NOTE: Not yet implemented.</source>
          <target state="translated">注:尚未执行。</target>
        </trans-unit>
        <trans-unit id="a142d11fd8e1893f7241ef23da3ac42b73c007c2" translate="yes" xml:space="preserve">
          <source>NP form feed, new page</source>
          <target state="translated">NP表格馈送,新页面</target>
        </trans-unit>
        <trans-unit id="026eac853e081a2793439a30ef3a00433e26f261" translate="yes" xml:space="preserve">
          <source>NTLM</source>
          <target state="translated">NTLM</target>
        </trans-unit>
        <trans-unit id="b9b6768f79f1577e799b1efce766e4e8e86e2dd4" translate="yes" xml:space="preserve">
          <source>NTLM auth is supported</source>
          <target state="translated">支持NTLM认证</target>
        </trans-unit>
        <trans-unit id="c9515fcc91e92808d85b39d93f92900ad927ccb8" translate="yes" xml:space="preserve">
          <source>NULL Function Name</source>
          <target state="translated">NULL 功能名称</target>
        </trans-unit>
        <trans-unit id="fe1cc67b4afd83bc08c13bcd7b64a2b5b268c52b" translate="yes" xml:space="preserve">
          <source>NULL NULL</source>
          <target state="translated">NULL NULL</target>
        </trans-unit>
        <trans-unit id="c87d41aff24ba6f4ec554d24dce699e7d1692a05" translate="yes" xml:space="preserve">
          <source>NULL file not found !=NULL mem.xmalloc'd file name</source>
          <target state="translated">NULL 文件未找到 !=NULL mem.xmalloc'd 文件名。</target>
        </trans-unit>
        <trans-unit id="9eaa2cbecdcbd2183d8b68e5b96e784ce915bf78" translate="yes" xml:space="preserve">
          <source>NaN value</source>
          <target state="translated">氮气值</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="b86ccc3e7cba86e65ae5df758ab1c57554830621" translate="yes" xml:space="preserve">
          <source>Name Mangling</source>
          <target state="translated">乱名</target>
        </trans-unit>
        <trans-unit id="daa5b774be0bfcbd2e2835e6bd0980fb6e06778a" translate="yes" xml:space="preserve">
          <source>Name Of A Host Parameter</source>
          <target state="translated">主机参数名称</target>
        </trans-unit>
        <trans-unit id="cb9e33f6b09bb7fe5d38a783b74c6905b2f43077" translate="yes" xml:space="preserve">
          <source>Name Of The Folder Holding Database Files</source>
          <target state="translated">保存数据库文件的文件夹名称</target>
        </trans-unit>
        <trans-unit id="7749c218b18b42cbe27f3f870da40b8d3d708ba1" translate="yes" xml:space="preserve">
          <source>Name Of The Folder Holding Temporary Files</source>
          <target state="translated">保存临时文件的文件夹名称</target>
        </trans-unit>
        <trans-unit id="e59df65314daa841d45f5a3e14ba76e2f9e9c8c1" translate="yes" xml:space="preserve">
          <source>Name of file for which the error occurred.</source>
          <target state="translated">发生错误的文件名称。</target>
        </trans-unit>
        <trans-unit id="d559607a1a6446ab7620756e13a0b5f234bf2473" translate="yes" xml:space="preserve">
          <source>Name of production rule which failed to parse, or specific error message</source>
          <target state="translated">未能解析的生产规则名称,或具体的错误信息。</target>
        </trans-unit>
        <trans-unit id="e31cbabb3f72b2a73875e1063140161450989ac1" translate="yes" xml:space="preserve">
          <source>Name of proxy to use.</source>
          <target state="translated">要使用的代理名称。</target>
        </trans-unit>
        <trans-unit id="4743065d5c24dea8c1049fa1ad276414cb966a5e" translate="yes" xml:space="preserve">
          <source>Name of symbol to test that resides in &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">驻留在 &lt;code&gt;T&lt;/code&gt; 中的要测试的符号的名称。</target>
        </trans-unit>
        <trans-unit id="926beea7a204b67e08849a9f0f8baf4eade0c1be" translate="yes" xml:space="preserve">
          <source>Name of this class.</source>
          <target state="translated">这个班级的名字。</target>
        </trans-unit>
        <trans-unit id="5bd20c9269fc21e28a5ca023c75d67f561fd2907" translate="yes" xml:space="preserve">
          <source>Name string is a URL</source>
          <target state="translated">名称字符串是一个URL</target>
        </trans-unit>
        <trans-unit id="3e9d951df5185dacb50ff8e872d8f60652b3003f" translate="yes" xml:space="preserve">
          <source>Name string is a fully-qualified domain name</source>
          <target state="translated">名称字符串是一个完全限定的域名。</target>
        </trans-unit>
        <trans-unit id="0ec414128b6f1f85f67f2bea1a748a95de4410a8" translate="yes" xml:space="preserve">
          <source>Name string is an ISO OID</source>
          <target state="translated">名称字符串是一个ISO OID</target>
        </trans-unit>
        <trans-unit id="f9b19d50c25b3743eb4adeadeaa3e5a0ab484c83" translate="yes" xml:space="preserve">
          <source>Name string is an X.500 DN (in DER or a text output format)</source>
          <target state="translated">名称字符串是一个X.500 DN(DER或文本输出格式)。</target>
        </trans-unit>
        <trans-unit id="5d41d633c54bc35ed0b102d16a59c09042d7e6f8" translate="yes" xml:space="preserve">
          <source>Name to append to path</source>
          <target state="translated">要附加到路径的名称</target>
        </trans-unit>
        <trans-unit id="57e44b2dd9241e59e5da1fe5cf27cc5a6f2a79e1" translate="yes" xml:space="preserve">
          <source>Named Character Entities</source>
          <target state="translated">已命名的字符实体</target>
        </trans-unit>
        <trans-unit id="61a5eb217e7e482d8acfda053982ce228847a019" translate="yes" xml:space="preserve">
          <source>Named Enum Properties</source>
          <target state="translated">已命名的Enum属性</target>
        </trans-unit>
        <trans-unit id="0f9a079f7fd37c78ad2d46952b2843d67f7e8c61" translate="yes" xml:space="preserve">
          <source>Named Enums</source>
          <target state="translated">命名枚举</target>
        </trans-unit>
        <trans-unit id="3880787f5865cac8472d36131fe148caae5fca26" translate="yes" xml:space="preserve">
          <source>Named character entity from the HTML5 specification. See &lt;a href=&quot;entity#NamedCharacterEntity&quot;&gt;&lt;i&gt;NamedCharacterEntity&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">HTML5规范中的命名字符实体。参见&lt;a href=&quot;entity#NamedCharacterEntity&quot;&gt;&lt;i&gt;NamedCharacterEntity&lt;/i&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="198f570fd56ceba05fedca92bb0332df23db79b7" translate="yes" xml:space="preserve">
          <source>Named character entity from the HTML5 specification. These names begin with &lt;code&gt;&amp;amp;&lt;/code&gt; and end with &lt;code&gt;;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67bbc13122b700cc80fcad9791161657d846a9cd" translate="yes" xml:space="preserve">
          <source>Named enum members may not have individual</source>
          <target state="translated">命名的枚举成员不能有单独的</target>
        </trans-unit>
        <trans-unit id="680bdf9cb66385985bc0370016c9c0b2510bfa40" translate="yes" xml:space="preserve">
          <source>Named enums are used to declare related constants and group them by giving them a unique type. The &lt;a href=&quot;#EnumMembers&quot;&gt;&lt;i&gt;EnumMembers&lt;/i&gt;&lt;/a&gt; are declared in the scope of the named enum. The named enum declares a new type, and all the</source>
          <target state="translated">命名枚举用于声明相关的常量，并通过为其赋予唯一类型来对其进行分组。该&lt;a href=&quot;#EnumMembers&quot;&gt;&lt;i&gt;EnumMembers&lt;/i&gt;&lt;/a&gt;在命名枚举的范围内声明。命名枚举声明一个新类型，所有</target>
        </trans-unit>
        <trans-unit id="80e6a3723926ccc64d8cb3caf791cfc7436d9eeb" translate="yes" xml:space="preserve">
          <source>Named sections follow the</source>
          <target state="translated">已命名的部分遵循</target>
        </trans-unit>
        <trans-unit id="7572bcf7df65774ff78b8059cf1d76bfd458d709" translate="yes" xml:space="preserve">
          <source>Named subexpressions, with Python syntax.</source>
          <target state="translated">命名的子表达式,采用Python语法。</target>
        </trans-unit>
        <trans-unit id="2b7c08c3ab75f37e2da656c1aab228f5f3a793b1" translate="yes" xml:space="preserve">
          <source>Names</source>
          <target state="translated">Names</target>
        </trans-unit>
        <trans-unit id="18279a42718c13f69852b27bda71bca286baf482" translate="yes" xml:space="preserve">
          <source>Namespace identifier resolved during semantic.</source>
          <target state="translated">在语义过程中解析的命名空间标识符。</target>
        </trans-unit>
        <trans-unit id="16eb70d8d96eda3f848bd01fad9c8740968e54df" translate="yes" xml:space="preserve">
          <source>Namespaces create a new named scope that is imported into its enclosing scope.</source>
          <target state="translated">命名空间创建一个新的命名作用域,并将其导入到它的外层作用域中。</target>
        </trans-unit>
        <trans-unit id="f1ac1397736e022a1d1f2150f9efcc470a2f2b26" translate="yes" xml:space="preserve">
          <source>Narrow strings are handled as a special case in an overload.</source>
          <target state="translated">窄字符串作为特殊情况在重载中处理。</target>
        </trans-unit>
        <trans-unit id="8e62ebb952ce8cd996872d7384f0690928fe12f3" translate="yes" xml:space="preserve">
          <source>Narrow strings are handled as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1baa0f5a64eb81bc7adf3575d07ce443439b75e" translate="yes" xml:space="preserve">
          <source>Narrows down the search for sets of &lt;a href=&quot;#Code%20point&quot;&gt;code points&lt;/a&gt; to all Unicode blocks.</source>
          <target state="translated">缩小搜索所有Unicode块的&lt;a href=&quot;#Code%20point&quot;&gt;代码点&lt;/a&gt;集的范围。</target>
        </trans-unit>
        <trans-unit id="972986128033c9c5a0fa48b5cba6b81b431ea5b8" translate="yes" xml:space="preserve">
          <source>Narrows down the search for sets of &lt;a href=&quot;#Code%20point&quot;&gt;code points&lt;/a&gt; to all Unicode scripts.</source>
          <target state="translated">缩小搜索所有Unicode脚本的&lt;a href=&quot;#Code%20point&quot;&gt;代码&lt;/a&gt;集的范围。</target>
        </trans-unit>
        <trans-unit id="a0d5df10c5743ed78b049b016736baea220da828" translate="yes" xml:space="preserve">
          <source>Natural logarithm of the gamma function, &amp;Gamma;(x)</source>
          <target state="translated">伽马函数&amp;Gamma;（x）的自然对数</target>
        </trans-unit>
        <trans-unit id="9af04929dbb837f665a10a968e5ddf32830b2b68" translate="yes" xml:space="preserve">
          <source>Nd</source>
          <target state="translated">Nd</target>
        </trans-unit>
        <trans-unit id="5ff045772783a219420ce41451947dd63b0d24fc" translate="yes" xml:space="preserve">
          <source>Nearly the full language remains available. Highlights include:</source>
          <target state="translated">几乎保留了完整的语言。重点包括:</target>
        </trans-unit>
        <trans-unit id="d19f92de109ac46a4d1496b1a25770fce9bf58d9" translate="yes" xml:space="preserve">
          <source>NeedInterpret &lt;code&gt;needInterpret&lt;/code&gt;</source>
          <target state="translated">NeedInterpret &lt;code&gt;needInterpret&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="75fa110366f333fd5bab311830e3dde315a57f85" translate="yes" xml:space="preserve">
          <source>Needles &lt;code&gt;needles&lt;/code&gt;</source>
          <target state="translated">针 &lt;code&gt;needles&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ca161e3cc3002c027a2393428d0e306fbbaf695" translate="yes" xml:space="preserve">
          <source>Needles &lt;code&gt;withOneOfThese&lt;/code&gt;</source>
          <target state="translated">针 &lt;code&gt;withOneOfThese&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="252cb1c005cf9e2d7b10d76452dacceef651591d" translate="yes" xml:space="preserve">
          <source>Needs to be run after all arguments parsing (command line, DFLAGS environment variable and config file) in order to add final flags (such as &lt;code&gt;X86_64&lt;/code&gt; or the &lt;code&gt;CRuntime&lt;/code&gt; used).</source>
          <target state="translated">需要在所有参数解析后运行（命令行，DFLAGS环境变量和配置文件），以便添加最终标志（例如 &lt;code&gt;X86_64&lt;/code&gt; 或使用的 &lt;code&gt;CRuntime&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="773b47405b1ade5cb7def242c625aee9a0503c8c" translate="yes" xml:space="preserve">
          <source>NegExp, UAddExp, or ComExp which is revised per rules</source>
          <target state="translated">NegExp,UAddExp,或ComExp,按规则修改。</target>
        </trans-unit>
        <trans-unit id="86ed584de044b5671abdde74aefb4ce336bc1352" translate="yes" xml:space="preserve">
          <source>NegInfInterval &lt;code&gt;interval&lt;/code&gt;</source>
          <target state="translated">NegInfInterval &lt;code&gt;interval&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d37436b24a16d602498d52710fab24c4c0728fb" translate="yes" xml:space="preserve">
          <source>NegInfInterval &lt;code&gt;rhs&lt;/code&gt;</source>
          <target state="translated">NegInfInterval &lt;code&gt;rhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06abdfa680cc88d985771cbd0b3ca58828a2c451" translate="yes" xml:space="preserve">
          <source>NegInfInterval!TP &lt;code&gt;interval&lt;/code&gt;</source>
          <target state="translated">NegInfInterval！TP &lt;code&gt;interval&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6035d6e362cc58462f47d6189969232e8adefdb5" translate="yes" xml:space="preserve">
          <source>NegInfIntervalRange &lt;code&gt;rhs&lt;/code&gt;</source>
          <target state="translated">NegInfIntervalRange &lt;code&gt;rhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b509d53b6c53336b97c7a2d0d8fd0931d01cf01" translate="yes" xml:space="preserve">
          <source>Negate an integer.</source>
          <target state="translated">否定一个整数。</target>
        </trans-unit>
        <trans-unit id="d65959b6815872890e463de3dd8c9f108e73ed07" translate="yes" xml:space="preserve">
          <source>Negates predicate &lt;code&gt;pred&lt;/code&gt;.</source>
          <target state="translated">否定谓词 &lt;code&gt;pred&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2be9e5f14286a848786e1067cc531abff2e5a28" translate="yes" xml:space="preserve">
          <source>Negates the passed template predicate.</source>
          <target state="translated">否定通过的模板谓词。</target>
        </trans-unit>
        <trans-unit id="377568a17aa50c7d08c08a483a0eaa6ac8ab5550" translate="yes" xml:space="preserve">
          <source>Negative acknowledge</source>
          <target state="translated">否定承认</target>
        </trans-unit>
        <trans-unit id="2daad810c80df74440602a7aceea31f882914c35" translate="yes" xml:space="preserve">
          <source>Negotiate auth support</source>
          <target state="translated">协商授权支持</target>
        </trans-unit>
        <trans-unit id="a29c776e4dbfe3a513f9eff63083ad09174aeb63" translate="yes" xml:space="preserve">
          <source>Neither of the above postblits is defined for structs that don't define &lt;code&gt;this(this)&lt;/code&gt; and don't have fields that transitively define it. If a struct does not define a postblit (implicit or explicit) but defines functions that use the same name/signature as the internally generated postblits, the compiler is able to identify that the functions are not actual postblits and does not insert calls to them when the struct is copied. Example:</source>
          <target state="translated">上面的postblits都没有为未定义 &lt;code&gt;this(this)&lt;/code&gt; 和没有可传递定义它的字段的结构定义。如果一个结构未定义后遗漏（隐式或显式），但定义的函数使用与内部生成的后遗漏相同的名称/签名，则编译器能够识别该函数不是实际的后遗漏，并且在以下情况下不会插入对它们的调用：结构被复制。例：</target>
        </trans-unit>
        <trans-unit id="fbdc670d6c3fa0c3348a1095041949b891ee8b90" translate="yes" xml:space="preserve">
          <source>Neither part of the address may begin with a dot</source>
          <target state="translated">地址的两个部分均不得以点号开头。</target>
        </trans-unit>
        <trans-unit id="adecc7ca86d9dceca1b8a8af2434d1f53d82528b" translate="yes" xml:space="preserve">
          <source>Neither part of the address may end with a dot</source>
          <target state="translated">地址的两个部分均不得以点号结尾。</target>
        </trans-unit>
        <trans-unit id="c7aed298b0805dc753e9e811fcc17786fa078e4f" translate="yes" xml:space="preserve">
          <source>Neither the</source>
          <target state="translated">都没有</target>
        </trans-unit>
        <trans-unit id="d54ff6b0bd3497e2fc52575cdc71b5c7d66565ca" translate="yes" xml:space="preserve">
          <source>Neither the type of the &lt;code&gt;return ref&lt;/code&gt; parameter(s) nor the type of the return value is considered when determining the lifetime of the return value.</source>
          <target state="translated">确定返回值的生存期时，既不考虑 &lt;code&gt;return ref&lt;/code&gt; 参数的类型，也不考虑返回值的类型。</target>
        </trans-unit>
        <trans-unit id="01b40ef9e87e1aa8159c98216ddccbf41a39cea4" translate="yes" xml:space="preserve">
          <source>Nested Classes</source>
          <target state="translated">嵌套类</target>
        </trans-unit>
        <trans-unit id="6ceba4234e15aa5ab2bd2d8b94c4dcba7693959f" translate="yes" xml:space="preserve">
          <source>Nested Functions</source>
          <target state="translated">嵌套函数</target>
        </trans-unit>
        <trans-unit id="bc233cc472db43781bf227ced2be0151fbaa6765" translate="yes" xml:space="preserve">
          <source>Nested Structs</source>
          <target state="translated">嵌套结构</target>
        </trans-unit>
        <trans-unit id="18abd9c388e5b52a8ab76caf29e0af466e0fc751" translate="yes" xml:space="preserve">
          <source>Nested Templates</source>
          <target state="translated">嵌套模板</target>
        </trans-unit>
        <trans-unit id="d7b8bd3fd9842e6b5f5443071f6160290a2688fd" translate="yes" xml:space="preserve">
          <source>Nested functions always have the D function linkage type.</source>
          <target state="translated">嵌套函数总是具有D函数连接类型。</target>
        </trans-unit>
        <trans-unit id="59b742f5047d7f2f070cdc497bf94356170baca1" translate="yes" xml:space="preserve">
          <source>Nested functions can be accessed only if the name is in scope.</source>
          <target state="translated">只有当名称在作用域内时,才可以访问嵌套函数。</target>
        </trans-unit>
        <trans-unit id="687841a342e2af7eaa9fb5771e49ff2ecd7c7c55" translate="yes" xml:space="preserve">
          <source>Nested functions cannot be overloaded.</source>
          <target state="translated">嵌套函数不能过载。</target>
        </trans-unit>
        <trans-unit id="de56879ae392c0f410b6a4803a848b74acc25efa" translate="yes" xml:space="preserve">
          <source>Nested functions have access to the variables and other symbols defined by the lexically enclosing function. This access includes both the ability to read and write them.</source>
          <target state="translated">嵌套函数可以访问词法包围函数所定义的变量和其他符号。这种访问包括对它们的读写能力。</target>
        </trans-unit>
        <trans-unit id="81d040d8cbecb1f3ea6ea11fdae7060537a65415" translate="yes" xml:space="preserve">
          <source>Nested functions, nested structs, delegates and lambdas</source>
          <target state="translated">嵌套函数、嵌套结构、委托和lambdas。</target>
        </trans-unit>
        <trans-unit id="e58fbc07285bd7225d930bd7dd9f892a522af9f6" translate="yes" xml:space="preserve">
          <source>Nested structs/classes cannot be created.</source>
          <target state="translated">不能创建嵌套结构/类。</target>
        </trans-unit>
        <trans-unit id="84758e8ed7fb7e044ecd7ee4b8be21ee953041d9" translate="yes" xml:space="preserve">
          <source>Nesting Delimiters</source>
          <target state="translated">嵌套定界符</target>
        </trans-unit>
        <trans-unit id="2a8e9132760d41d72a6889c4990ba4d0970d98d7" translate="yes" xml:space="preserve">
          <source>Nesting block comments can span multiple lines and can nest.</source>
          <target state="translated">嵌块注释可以跨越多行,可以嵌套。</target>
        </trans-unit>
        <trans-unit id="3e9e1f6f189ff8e4d505c81b54a796d5e66a2542" translate="yes" xml:space="preserve">
          <source>NetBSD</source>
          <target state="translated">NetBSD</target>
        </trans-unit>
        <trans-unit id="f72e37a825c66ec1f9c150b1cff07ef3b471399e" translate="yes" xml:space="preserve">
          <source>Networking client functionality as provided by &lt;a href=&quot;http://curl.haxx.se/libcurl&quot;&gt;libcurl&lt;/a&gt;. The libcurl library must be installed on the system in order to use this module.</source>
          <target state="translated">&lt;a href=&quot;http://curl.haxx.se/libcurl&quot;&gt;libcurl&lt;/a&gt;提供的网络客户端功能。为了使用该模块，必须在系统上安装libcurl库。</target>
        </trans-unit>
        <trans-unit id="581aefeada059f802da1d583ea93e3161c11eedd" translate="yes" xml:space="preserve">
          <source>Networking client functionality as provided by libcurl.</source>
          <target state="translated">由libcurl提供的网络客户端功能。</target>
        </trans-unit>
        <trans-unit id="ebe07da3dd45bd0d24ce7337762bb47dbdca8703" translate="yes" xml:space="preserve">
          <source>Never defined; used to just disable a section of code</source>
          <target state="translated">从未定义;用于禁用某段代码。</target>
        </trans-unit>
        <trans-unit id="bbdcd23a18b9ea161014043c83bf82b0c775856d" translate="yes" xml:space="preserve">
          <source>Never do checking</source>
          <target state="translated">从来不做检查</target>
        </trans-unit>
        <trans-unit id="0fc947765f94c215d01465bd1d5f3c6b067a780d" translate="yes" xml:space="preserve">
          <source>New Expressions</source>
          <target state="translated">新的表达方式</target>
        </trans-unit>
        <trans-unit id="814ede89739aeda2dd2ef09f7a84f1a31b54f537" translate="yes" xml:space="preserve">
          <source>New Tai Lue</source>
          <target state="translated">新大路</target>
        </trans-unit>
        <trans-unit id="00ca8599d50ec8f4a491f84862a1372294230642" translate="yes" xml:space="preserve">
          <source>New thread with anonymous function</source>
          <target state="translated">具有匿名功能的新线程</target>
        </trans-unit>
        <trans-unit id="4730a25585b21bc83b2fb6fd8c21ccef35173c07" translate="yes" xml:space="preserve">
          <source>NewAnonClassExpression</source>
          <target state="translated">NewAnonClassExpression</target>
        </trans-unit>
        <trans-unit id="aeae939b51fa073aeb7c50b858bfbe0a984f939c" translate="yes" xml:space="preserve">
          <source>NewExpression</source>
          <target state="translated">NewExpression</target>
        </trans-unit>
        <trans-unit id="47cc38a5f6affc6fd9f8a8683e76dfafa574aed8" translate="yes" xml:space="preserve">
          <source>New_Tai_Lue</source>
          <target state="translated">New_Tai_Lue</target>
        </trans-unit>
        <trans-unit id="406e5a30366bef1c2bdc60eb13855fbae99b6877" translate="yes" xml:space="preserve">
          <source>Newline sequence for this system.</source>
          <target state="translated">本系统的新线序列。</target>
        </trans-unit>
        <trans-unit id="73452a97f008435fbe0f0b3d0ee3f1a418dddd2c" translate="yes" xml:space="preserve">
          <source>Newly created temporary variable.</source>
          <target state="translated">新创建的临时变量。</target>
        </trans-unit>
        <trans-unit id="e302c64310a9ca244fa110a87de65f2e1a592e89" translate="yes" xml:space="preserve">
          <source>Newton iterations or interval halving is used.</source>
          <target state="translated">采用牛顿迭代或区间减半。</target>
        </trans-unit>
        <trans-unit id="ddc9b12c0e2ac408af04a6464da02c9fab4fbf61" translate="yes" xml:space="preserve">
          <source>Next, if the</source>
          <target state="translated">接下来,如果</target>
        </trans-unit>
        <trans-unit id="55674258a28777513c3ee8a1247d68d39b7e5128" translate="yes" xml:space="preserve">
          <source>Nko</source>
          <target state="translated">Nko</target>
        </trans-unit>
        <trans-unit id="4dd2d83410062286116bfd3474723788ce66b385" translate="yes" xml:space="preserve">
          <source>Nl</source>
          <target state="translated">Nl</target>
        </trans-unit>
        <trans-unit id="816c52fd2bdd94a63cd0944823a6c0aa9384c103" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>
        </trans-unit>
        <trans-unit id="d53788aa816acff93069d1b59d3bb9bffba09d17" translate="yes" xml:space="preserve">
          <source>No &lt;a href=&quot;#CaseRangeStatement&quot;&gt;&lt;i&gt;CaseRangeStatement&lt;/i&gt;&lt;/a&gt;s are allowed.</source>
          <target state="translated">不允许使用&lt;a href=&quot;#CaseRangeStatement&quot;&gt;&lt;i&gt;CaseRangeStatement&lt;/i&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5df4eb877482a34133026cdb08bb53e2da2f886c" translate="yes" xml:space="preserve">
          <source>No &lt;a href=&quot;#DefaultStatement&quot;&gt;&lt;i&gt;DefaultStatement&lt;/i&gt;&lt;/a&gt; is allowed.</source>
          <target state="translated">不允许使用&lt;a href=&quot;#DefaultStatement&quot;&gt;&lt;i&gt;DefaultStatement&lt;/i&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c0f12b769823d7fd1937e52e1988a020c1b079c" translate="yes" xml:space="preserve">
          <source>No Documentation</source>
          <target state="translated">没有文件</target>
        </trans-unit>
        <trans-unit id="b083b669fe03ec7d0a1f3bf704ff111420546cb5" translate="yes" xml:space="preserve">
          <source>No argument types are composed of inout types.</source>
          <target state="translated">没有参数类型是由inout类型组成的。</target>
        </trans-unit>
        <trans-unit id="05a28f52a1c146ef4b20ec452938cfe8a22f2f90" translate="yes" xml:space="preserve">
          <source>No attributes set.</source>
          <target state="translated">没有设置属性。</target>
        </trans-unit>
        <trans-unit id="f1563df863c77d6e7fa91961ad8c317b0e5242ee" translate="yes" xml:space="preserve">
          <source>No casting from a pointer type to any type other than &lt;code&gt;void*&lt;/code&gt;.</source>
          <target state="translated">没有将指针类型强制转换为 &lt;code&gt;void*&lt;/code&gt; 以外的任何类型。</target>
        </trans-unit>
        <trans-unit id="d2b719c294a008242eab778b0415eda49646fa7f" translate="yes" xml:space="preserve">
          <source>No casting from a pointer type to any type with pointers other than &lt;code&gt;void*&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4eccf0778d2081320adaf4c9dc6b743373b86ae" translate="yes" xml:space="preserve">
          <source>No casting from any non-pointer type to a pointer type.</source>
          <target state="translated">不能从任何非指针类型转为指针类型。</target>
        </trans-unit>
        <trans-unit id="5c470bb022340ab631092bbc23badd4bdd7c168d" translate="yes" xml:space="preserve">
          <source>No catching of exceptions that are not derived from &lt;code&gt;class Exception&lt;/code&gt;.</source>
          <target state="translated">不捕获不是从 &lt;code&gt;class Exception&lt;/code&gt; 派生的异常。</target>
        </trans-unit>
        <trans-unit id="fbac8274a33fb459b7645c36c3607643d6b98cfe" translate="yes" xml:space="preserve">
          <source>No compression, just archiving</source>
          <target state="translated">没有压缩,只是存档</target>
        </trans-unit>
        <trans-unit id="4188ccd2e11d8b82f2d752d935628af0f778934d" translate="yes" xml:space="preserve">
          <source>No compression, just archiving.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6579f4713f1ca4f2cacddaf325e194df56d72c76" translate="yes" xml:space="preserve">
          <source>No documentation is generated for the following constructs, even if they have a documentation comment:</source>
          <target state="translated">以下结构即使有文档注释,也不会生成文档。</target>
        </trans-unit>
        <trans-unit id="c5f9dc057bfe284b0c9c0f7b4ca23ad4c81ff2b1" translate="yes" xml:space="preserve">
          <source>No errors get inadvertently ignored.</source>
          <target state="translated">没有错误会被无意中忽略。</target>
        </trans-unit>
        <trans-unit id="50aeb67eaf0b0cda9c958bef425109300bb895b8" translate="yes" xml:space="preserve">
          <source>No exceptions are thrown due to incorrect CSV.</source>
          <target state="translated">不会因为CSV不正确而产生异常。</target>
        </trans-unit>
        <trans-unit id="dc51393e7f92e68cd01f568a57bc078ab0b1db70" translate="yes" xml:space="preserve">
          <source>No explicit casting of immutable objects to mutable.</source>
          <target state="translated">没有显式的将不可变对象转换为可变对象。</target>
        </trans-unit>
        <trans-unit id="e4d9d68fd7f6457d876881ca9bddb464171be02d" translate="yes" xml:space="preserve">
          <source>No explicit casting of mutable objects to immutable.</source>
          <target state="translated">没有明确地将可变对象转为不可变对象。</target>
        </trans-unit>
        <trans-unit id="775074d6faaec2b5829ecb6995107bffdb44ed81" translate="yes" xml:space="preserve">
          <source>No explicit casting of shared objects to thread local.</source>
          <target state="translated">没有显式的将共享对象投向线程本地。</target>
        </trans-unit>
        <trans-unit id="0117ad0eedc8f9fbd21fb52bc04392fa4d19b224" translate="yes" xml:space="preserve">
          <source>No explicit casting of thread local objects to shared.</source>
          <target state="translated">没有明确地将线程本地对象投向共享。</target>
        </trans-unit>
        <trans-unit id="ea0b61f64bab381eec1afb06029d67d731142c75" translate="yes" xml:space="preserve">
          <source>No immutables</source>
          <target state="translated">没有不可改变的东西</target>
        </trans-unit>
        <trans-unit id="c1cfcdaf8da9814719d81beadb47a10db90d633b" translate="yes" xml:space="preserve">
          <source>No longer used</source>
          <target state="translated">不再使用</target>
        </trans-unit>
        <trans-unit id="f2b30c37a539bfa2c82d0314aa5de0494ad94e1d" translate="yes" xml:space="preserve">
          <source>No longer used, kept as alias to Regex for backwards compatibility.</source>
          <target state="translated">不再使用,为了向后兼容,保留为Regex的别名。</target>
        </trans-unit>
        <trans-unit id="00ef7d44f74673ea0171f0ade11b4f235bf2603b" translate="yes" xml:space="preserve">
          <source>No new scope is introduced, even if the</source>
          <target state="translated">没有引入新的范围,即使</target>
        </trans-unit>
        <trans-unit id="f181ddb7a18d67a4be3a457ae7b06e8eba4e6364" translate="yes" xml:space="preserve">
          <source>No pointer arithmetic (including pointer indexing).</source>
          <target state="translated">没有指针运算(包括指针索引)。</target>
        </trans-unit>
        <trans-unit id="e48360ebcff22ce8f91aabe6500b37ca86c8ef0e" translate="yes" xml:space="preserve">
          <source>No taking the address of a local variable or function parameter.</source>
          <target state="translated">不取局部变量或函数参数的地址。</target>
        </trans-unit>
        <trans-unit id="16d169fc62706e94837dca4e7304ed543a25d932" translate="yes" xml:space="preserve">
          <source>No-GC Functions</source>
          <target state="translated">无GC功能</target>
        </trans-unit>
        <trans-unit id="12e519130ae384b81c85660c8490969df2fb8431" translate="yes" xml:space="preserve">
          <source>No-GC functions are functions marked with the &lt;code&gt;@nogc&lt;/code&gt; attribute. Those functions do not allocate memory on the GC heap, through the following language features:</source>
          <target state="translated">No-GC函数是标有 &lt;code&gt;@nogc&lt;/code&gt; 属性的函数。这些功能不会通过以下语言功能在GC堆上分配内存：</target>
        </trans-unit>
        <trans-unit id="0c64e8cc83777da3ceeb6f24324ae0cad20ddc48" translate="yes" xml:space="preserve">
          <source>No-GC functions cannot be closures.</source>
          <target state="translated">No-GC函数不能是闭包。</target>
        </trans-unit>
        <trans-unit id="e71ecc7f1b6436e6f38e1a5ba5a26ba864e8984e" translate="yes" xml:space="preserve">
          <source>No-GC functions cannot call functions that are not &lt;code&gt;@nogc&lt;/code&gt;.</source>
          <target state="translated">No-GC函数不能调用非 &lt;code&gt;@nogc&lt;/code&gt; 的函数。</target>
        </trans-unit>
        <trans-unit id="ea249cedbd757dbfa8a8d6da523734c90b706a5c" translate="yes" xml:space="preserve">
          <source>No-op.</source>
          <target state="translated">No-op.</target>
        </trans-unit>
        <trans-unit id="1f9e31c476e79b885710c0e54c00dae29e759873" translate="yes" xml:space="preserve">
          <source>No-seed version. The first element of &lt;code&gt;r&lt;/code&gt; is used as the seed's value.</source>
          <target state="translated">无种子版本。 &lt;code&gt;r&lt;/code&gt; 的第一个元素用作种子的值。</target>
        </trans-unit>
        <trans-unit id="2d2d6976f81cfe20333afbe24adc3861a20e45ae" translate="yes" xml:space="preserve">
          <source>No-seed version. The first element of &lt;code&gt;r&lt;/code&gt; is used as the seed's value. For each function &lt;code&gt;f&lt;/code&gt; in &lt;code&gt;fun&lt;/code&gt;, the corresponding seed type &lt;code&gt;S&lt;/code&gt; is &lt;code&gt;Unqual!(typeof(f(e, e)))&lt;/code&gt;, where &lt;code&gt;e&lt;/code&gt; is an element of &lt;code&gt;r&lt;/code&gt;: &lt;code&gt;ElementType!R&lt;/code&gt;. Once &lt;code&gt;S&lt;/code&gt; has been determined, then &lt;code&gt;S s = e;&lt;/code&gt; and &lt;code&gt;s = f(s, e);&lt;/code&gt; must both be legal.</source>
          <target state="translated">无种子版本。 &lt;code&gt;r&lt;/code&gt; 的第一个元素用作种子的值。对于每个功能 &lt;code&gt;f&lt;/code&gt; 在 &lt;code&gt;fun&lt;/code&gt; ，相应的种子类型 &lt;code&gt;S&lt;/code&gt; 是 &lt;code&gt;Unqual!(typeof(f(e, e)))&lt;/code&gt; 其中 &lt;code&gt;e&lt;/code&gt; 是的元件 &lt;code&gt;r&lt;/code&gt; ！ &lt;code&gt;ElementType!R&lt;/code&gt; 。一旦 &lt;code&gt;S&lt;/code&gt; 已经确定，然后 &lt;code&gt;S s = e;&lt;/code&gt; 和 &lt;code&gt;s = f(s, e);&lt;/code&gt; 必须都合法。</target>
        </trans-unit>
        <trans-unit id="b0f4acc87a789952bfc1b197631323f519961850" translate="yes" xml:space="preserve">
          <source>Node to represent a version condition</source>
          <target state="translated">表示版本条件的节点</target>
        </trans-unit>
        <trans-unit id="b467c97e1e04e6dfe215b8ccc5a464d40fdfc31c" translate="yes" xml:space="preserve">
          <source>Nominally the result is the desired value of the cast operation, which will be forwarded as the result of the cast. For &lt;code&gt;Abort&lt;/code&gt;, the function never returns because it aborts the program.</source>
          <target state="translated">标称结果是转换操作的期望值，该值将作为转换结果转发。对于 &lt;code&gt;Abort&lt;/code&gt; ，该函数永远不会返回，因为它会中止程序。</target>
        </trans-unit>
        <trans-unit id="11768937dad6c4d6650b30ee482657c917bafca3" translate="yes" xml:space="preserve">
          <source>Nominally the result is the desired value of the cast operation, which will be forwarded as the result of the cast. For &lt;code&gt;Throw&lt;/code&gt;, the function never returns because it throws an exception.</source>
          <target state="translated">标称结果是转换操作的期望值，该值将作为转换结果转发。对于 &lt;code&gt;Throw&lt;/code&gt; ，该函数永远不会返回，因为它会引发异常。</target>
        </trans-unit>
        <trans-unit id="1b2c041885adf1fc88ecec500a0190e9f4cf26cd" translate="yes" xml:space="preserve">
          <source>Nominally the result is the desired value of the operator, which will be forwarded as result. For &lt;code&gt;Abort&lt;/code&gt;, the function never returns because it aborts the program.</source>
          <target state="translated">标称结果是操作员的期望值，该值将作为结果转发。对于 &lt;code&gt;Abort&lt;/code&gt; ，该函数永远不会返回，因为它会中止程序。</target>
        </trans-unit>
        <trans-unit id="058f4352276fbd832056c1654d0a5c83818f3abd" translate="yes" xml:space="preserve">
          <source>Nominally the result is the desired value of the operator, which will be forwarded as result. For &lt;code&gt;Throw&lt;/code&gt;, the function never returns because it throws an exception.</source>
          <target state="translated">标称结果是操作员的期望值，该值将作为结果转发。对于 &lt;code&gt;Throw&lt;/code&gt; ，该函数永远不会返回，因为它会引发异常。</target>
        </trans-unit>
        <trans-unit id="95ff8049ae0af803b72d929b70cdc7bd1428c808" translate="yes" xml:space="preserve">
          <source>Nominally the result is the desired value of the operator, which will be forwarded as result. For &lt;code&gt;Throw&lt;/code&gt;, the function never returns because it throws.</source>
          <target state="translated">标称结果是操作员的期望值，该值将作为结果转发。对于 &lt;code&gt;Throw&lt;/code&gt; ，该函数永远不会返回，因为它会抛出。</target>
        </trans-unit>
        <trans-unit id="7f89b59a9068926b546bf9dc745b7cf2ad0322d0" translate="yes" xml:space="preserve">
          <source>Non-IEEE 128 bit Big-endian 'doubledouble' (eg PowerPC) has partial support</source>
          <target state="translated">非IEEE 128位Big-endian'double'(如PowerPC)有部分支持。</target>
        </trans-unit>
        <trans-unit id="a25c683f08b05e969df911e0d059e27354f7cc6b" translate="yes" xml:space="preserve">
          <source>Non-Lexical Lifetimes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c2f7e6bb1f6c3ecbf603f6f600b23e9b51b8c3" translate="yes" xml:space="preserve">
          <source>Non-Standard Format Specifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9b3d80259432deefe50b3b3a447de9bae6df57" translate="yes" xml:space="preserve">
          <source>Non-Standard format specifiers will be rejected by the compiler. Since the checking is only done for formats as string literals, non-Standard ones can be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81fddc68dfa81833c1f14ca92fdbdf8790a22085" translate="yes" xml:space="preserve">
          <source>Non-allocating forward range option: &amp;Omicron;(&lt;code&gt;n^2&lt;/code&gt;) Non-allocating forward range option with custom &lt;code&gt;pred&lt;/code&gt;: &amp;Omicron;(&lt;code&gt;n^2&lt;/code&gt;) Allocating forward range option: amortized &amp;Omicron;(&lt;code&gt;r1.length&lt;/code&gt;) + &amp;Omicron;(&lt;code&gt;r2.length&lt;/code&gt;)</source>
          <target state="translated">非分配正向范围选项：&amp;Omicron;（ &lt;code&gt;n^2&lt;/code&gt; ）具有自定义 &lt;code&gt;pred&lt;/code&gt; 的非分配正向范围选项：&amp;Omicron;（ &lt;code&gt;n^2&lt;/code&gt; ）分配正向范围选项：摊销&amp;Omicron;（ &lt;code&gt;r1.length&lt;/code&gt; ）+&amp;Omicron;（ &lt;code&gt;r2.length&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a578c05b9c2826b19b96d5e16a0ceb9b0ece04e0" translate="yes" xml:space="preserve">
          <source>Non-copyable structs can still be moved:</source>
          <target state="translated">不可复制的结构仍然可以移动。</target>
        </trans-unit>
        <trans-unit id="6a1e5ae49f7fbd3b1306db6c5fe5107b5dbc51c5" translate="yes" xml:space="preserve">
          <source>Non-forward input ranges are supported, but with limited semantics.</source>
          <target state="translated">支持非前向输入范围,但语义有限。</target>
        </trans-unit>
        <trans-unit id="9d73b158c3cbb9c0c20029958a34f23570ec9b1c" translate="yes" xml:space="preserve">
          <source>Non-portable casts (eg, from &lt;code&gt;int[]&lt;/code&gt; to &lt;code&gt;float[]&lt;/code&gt;), including casts which depend on endianness, are not permitted. Casts between signed and unsigned types are permitted</source>
          <target state="translated">禁止使用非便携式强制类型转换（例如，从 &lt;code&gt;int[]&lt;/code&gt; 到 &lt;code&gt;float[]&lt;/code&gt; ），包括依赖于字节序的强制类型转换。允许在有符号和无符号类型之间进行强制转换</target>
        </trans-unit>
        <trans-unit id="61e065b3de2ba702e71857963714ee2de3918409" translate="yes" xml:space="preserve">
          <source>Non-recoverable errors (such as assert failures) do not throw exceptions; instead, they end interpretation immediately.</source>
          <target state="translated">不可恢复的错误(如断言失败)不会抛出异常;相反,它们会立即结束解释。</target>
        </trans-unit>
        <trans-unit id="d74bfb7bba1e55d60fe9becbe7df81d0fef5ea9e" translate="yes" xml:space="preserve">
          <source>Non-shared static constructors and destructors are run whenever threads are created or destroyed, including the main thread.</source>
          <target state="translated">每当线程创建或销毁时,包括主线程在内的非共享静态构造函数和析构函数都会被运行。</target>
        </trans-unit>
        <trans-unit id="c605ebf3ce46a504feb4b640239e7ba60285c122" translate="yes" xml:space="preserve">
          <source>Non-shared static constructors and destructors are used to initialize and terminate thread local data.</source>
          <target state="translated">非共享静态构造函数和析构函数用于初始化和终止线程本地数据。</target>
        </trans-unit>
        <trans-unit id="d96909cc07f8b70370f0c23c993424d8363fc715" translate="yes" xml:space="preserve">
          <source>Non-static &lt;a href=&quot;#nested&quot;&gt;function-nested D structs&lt;/a&gt;, which access the context of their enclosing scope, have an extra field.</source>
          <target state="translated">访问其封闭范围的上下文的非静态&lt;a href=&quot;#nested&quot;&gt;函数嵌套D结构&lt;/a&gt;具有一个额外的字段。</target>
        </trans-unit>
        <trans-unit id="b3b2dbc478b4150312eab6be4bc6d5c0decce954" translate="yes" xml:space="preserve">
          <source>Non-static member functions can have, in addition to the usual &lt;a href=&quot;function#FunctionAttribute&quot;&gt;&lt;i&gt;FunctionAttribute&lt;/i&gt;&lt;/a&gt;s, the attributes &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;immutable&lt;/code&gt;, &lt;code&gt;shared&lt;/code&gt;, or &lt;code&gt;inout&lt;/code&gt;. These attributes apply to the hidden</source>
          <target state="translated">除了通常的&lt;a href=&quot;function#FunctionAttribute&quot;&gt;&lt;i&gt;FunctionAttribute&lt;/i&gt;&lt;/a&gt;之外，非静态成员函数还可以具有 &lt;code&gt;const&lt;/code&gt; ， &lt;code&gt;immutable&lt;/code&gt; ， &lt;code&gt;shared&lt;/code&gt; 或 &lt;code&gt;inout&lt;/code&gt; 属性。这些属性适用于隐藏</target>
        </trans-unit>
        <trans-unit id="f0fad86bcaafddf030802679290bc8c2fee402a9" translate="yes" xml:space="preserve">
          <source>Non-static member functions have an extra hidden parameter called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a196514d4f0d0eafb3a4cd25af29fefa694ba14" translate="yes" xml:space="preserve">
          <source>Non-static member functions or static member functions with &lt;code&gt;Objective-C&lt;/code&gt; linkage have an extra hidden parameter called</source>
          <target state="translated">非静态成员函数或具有 &lt;code&gt;Objective-C&lt;/code&gt; 链接的静态成员函数具有一个额外的隐藏参数，称为</target>
        </trans-unit>
        <trans-unit id="f3b4db56d91106facfca56b48e63a8bae5d8e3b2" translate="yes" xml:space="preserve">
          <source>Non-static nested classes work by containing an extra hidden member (called the context pointer) that is the frame pointer of the enclosing function if it is nested inside a function, or the &lt;code&gt;this&lt;/code&gt; of the enclosing class's instance if it is nested inside a class.</source>
          <target state="translated">非静态嵌套类的工作方式是包含一个额外的隐藏成员（称为上下文指针），如果该成员隐藏在函数中，则该隐藏成员是该封闭函数的框架指针；如果嵌套在一个类中，则该封闭类实例的 &lt;code&gt;this&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5548014eb4de34224028b093eceb44e9d96d089f" translate="yes" xml:space="preserve">
          <source>Non-static nested classes work by containing an extra hidden member (called the context pointer) that is the frame pointer of the enclosing function if it is nested inside a function, or the &lt;code&gt;this&lt;/code&gt; reference of the enclosing class's instance if it is nested inside a class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea89d244aa398e61a240d02e563d9e920cc1cfb" translate="yes" xml:space="preserve">
          <source>Non-zero value means to use the global dns cache</source>
          <target state="translated">非零值表示使用全局dns缓存。</target>
        </trans-unit>
        <trans-unit id="1aafcdc0be4becd732b9a3ad04759d113484d426" translate="yes" xml:space="preserve">
          <source>NonEmptyStatement</source>
          <target state="translated">NonEmptyStatement</target>
        </trans-unit>
        <trans-unit id="d42bc2090abcd86d6431b50ed9070e084b02b130" translate="yes" xml:space="preserve">
          <source>NonVoidInitializer</source>
          <target state="translated">NonVoidInitializer</target>
        </trans-unit>
        <trans-unit id="1179ca48470076675d205adcff73d6d61f15f34a" translate="yes" xml:space="preserve">
          <source>Noncharacter_Code_Point</source>
          <target state="translated">Noncharacter_Code_Point</target>
        </trans-unit>
        <trans-unit id="36dc33e9395aef9881b08cdb0dd1daef6114c736" translate="yes" xml:space="preserve">
          <source>Nonspacing_Mark</source>
          <target state="translated">Nonspacing_Mark</target>
        </trans-unit>
        <trans-unit id="429802f981d76022956f28768dab516f8772bd42" translate="yes" xml:space="preserve">
          <source>Nonstandard function that minimizes the memory usage of the freelist by freeing each element in turn. Defined only if &lt;code&gt;ParentAllocator&lt;/code&gt; defines &lt;code&gt;deallocate&lt;/code&gt;.</source>
          <target state="translated">非标准功能通过依次释放每个元素来最大程度地减少空闲列表的内存使用量。仅在 &lt;code&gt;ParentAllocator&lt;/code&gt; 定义 &lt;code&gt;deallocate&lt;/code&gt; 时定义。</target>
        </trans-unit>
        <trans-unit id="57b001c8ba41b4ad340a0d783255e54cfd3c3bce" translate="yes" xml:space="preserve">
          <source>Nonstandard function that minimizes the memory usage of the freelist by freeing each element in turn. Defined only if &lt;code&gt;ParentAllocator&lt;/code&gt; defines &lt;code&gt;deallocate&lt;/code&gt;. &lt;code&gt;FreeList!(0, unbounded)&lt;/code&gt; does not have this function.</source>
          <target state="translated">非标准功能通过依次释放每个元素来最大程度地减少空闲列表的内存使用量。仅在 &lt;code&gt;ParentAllocator&lt;/code&gt; 定义 &lt;code&gt;deallocate&lt;/code&gt; 时定义。 &lt;code&gt;FreeList!(0, unbounded)&lt;/code&gt; 没有此功能。</target>
        </trans-unit>
        <trans-unit id="e3b494dd74c014fe5ba2aa220f7424fbd28b5b50" translate="yes" xml:space="preserve">
          <source>Nonstandard function that returns the bytes available for allocation.</source>
          <target state="translated">非标准函数,返回可供分配的字节数。</target>
        </trans-unit>
        <trans-unit id="1b4df24b03c214a98bd7860dd19d472f2804640a" translate="yes" xml:space="preserve">
          <source>Nonstandard property that returns bytes available for allocation.</source>
          <target state="translated">非标准属性,返回可供分配的字节。</target>
        </trans-unit>
        <trans-unit id="3412d111007fbeb4dae75cdce13533138e69acc1" translate="yes" xml:space="preserve">
          <source>Nonzero for on.</source>
          <target state="translated">非零为上。</target>
        </trans-unit>
        <trans-unit id="46931da5935530c974e152c2caa633195ab79b11" translate="yes" xml:space="preserve">
          <source>Normal distribution function.</source>
          <target state="translated">正态分布函数。</target>
        </trans-unit>
        <trans-unit id="b8c54e5e1e867a54e9d75697c450f4be835f910e" translate="yes" xml:space="preserve">
          <source>Normalization</source>
          <target state="translated">Normalization</target>
        </trans-unit>
        <trans-unit id="80b6124577fc42c3b7c1e6bbf615255e8605397d" translate="yes" xml:space="preserve">
          <source>Normalization Form C (NFC): The canonical composition of the &lt;a href=&quot;#Canonical%20decomposition&quot;&gt;canonical decomposition&lt;/a&gt; of a coded character sequence.</source>
          <target state="translated">规范化形式C（NFC）：编码字符序列的&lt;a href=&quot;#Canonical%20decomposition&quot;&gt;规范分解&lt;/a&gt;的规范组成。</target>
        </trans-unit>
        <trans-unit id="0418119af85721c4087c8e6f6b3159c547d399f2" translate="yes" xml:space="preserve">
          <source>Normalization Form D (NFD): The &lt;a href=&quot;#Canonical%20decomposition&quot;&gt; canonical decomposition&lt;/a&gt; of a character sequence.</source>
          <target state="translated">规范化形式D（NFD）：字符序列的&lt;a href=&quot;#Canonical%20decomposition&quot;&gt;规范分解&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="138b8bb2fbf469c965274f2588f5cf860f8e57f2" translate="yes" xml:space="preserve">
          <source>Normalization Form KC (NFKC): The canonical composition of the &lt;a href=&quot;#Compatibility%20decomposition&quot;&gt; compatibility decomposition&lt;/a&gt; of a character sequence</source>
          <target state="translated">规范化形式KC（NFKC）：字符序列&lt;a href=&quot;#Compatibility%20decomposition&quot;&gt;兼容性分解&lt;/a&gt;的规范组成</target>
        </trans-unit>
        <trans-unit id="031a463d0092b90e5f527a2e15b37690c30120f9" translate="yes" xml:space="preserve">
          <source>Normalization Form KD (NFKD): The &lt;a href=&quot;#Compatibility%20decomposition&quot;&gt; compatibility decomposition&lt;/a&gt; of a character sequence.</source>
          <target state="translated">规范化形式KD（NFKD）：字符序列的&lt;a href=&quot;#Compatibility%20decomposition&quot;&gt;兼容性分解&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9fc9758024af9fe044b26fa95babda5e385e2a92" translate="yes" xml:space="preserve">
          <source>Normalize a path by resolving current/parent directory symbols (&lt;code&gt;&quot;.&quot;&lt;/code&gt; and &lt;code&gt;&quot;..&quot;&lt;/code&gt;) and removing superfluous directory separators. It will return &quot;.&quot; if the path leads to the starting directory. On Windows, slashes are replaced with backslashes.</source>
          <target state="translated">通过解析当前/父目录符号（ &lt;code&gt;&quot;.&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;..&quot;&lt;/code&gt; ）并删除多余的目录分隔符来规范化路径。它将返回&amp;ldquo;。&amp;rdquo; 如果路径指向起始目录。在Windows上，将斜杠替换为反斜杠。</target>
        </trans-unit>
        <trans-unit id="8001671105bf59f11468e49232cdcf7930cadfe8" translate="yes" xml:space="preserve">
          <source>Normalize path by turning forward slashes into backslashes</source>
          <target state="translated">通过将正向斜杠变成反斜杠来规范路径</target>
        </trans-unit>
        <trans-unit id="9e6f99e9fe995a304393f1d99580068a9cbfde06" translate="yes" xml:space="preserve">
          <source>Normalizes values in &lt;code&gt;range&lt;/code&gt; by multiplying each element with a number chosen such that values sum up to &lt;code&gt;sum&lt;/code&gt;. If elements in &lt;code&gt;range&lt;/code&gt; sum to zero, assigns &lt;code&gt;sum / range.length&lt;/code&gt; to all. Normalization makes sense only if all elements in &lt;code&gt;range&lt;/code&gt; are positive. &lt;code&gt;normalize&lt;/code&gt; assumes that is the case without checking it.</source>
          <target state="translated">通过将每个元素与所选的数字相乘，以使值求和为 &lt;code&gt;sum&lt;/code&gt; 来规范 &lt;code&gt;range&lt;/code&gt; 的值。如果 &lt;code&gt;range&lt;/code&gt; 元素总和为零， &lt;code&gt;sum / range.length&lt;/code&gt; all / range.length分配给所有元素。仅当 &lt;code&gt;range&lt;/code&gt; 中的所有元素均为正数时，规范化才有意义。 &lt;code&gt;normalize&lt;/code&gt; 假设情况就是这样，无需检查。</target>
        </trans-unit>
        <trans-unit id="661d479c1dc56a2c85105c1a989fb99e1258f06c" translate="yes" xml:space="preserve">
          <source>Normally it is not necessary to do this manually, as &lt;a href=&quot;std_stdio#File&quot;&gt;&lt;code&gt;std.stdio.File&lt;/code&gt;&lt;/a&gt; objects are automatically closed when there are no more references to them.</source>
          <target state="translated">通常，不需要手动执行此操作，因为在没有更多引用时，&lt;a href=&quot;std_stdio#File&quot;&gt; &lt;code&gt;std.stdio.File&lt;/code&gt; &lt;/a&gt;对象会自动关闭。</target>
        </trans-unit>
        <trans-unit id="adfa9c0b301a56712a5c4c9dfdc57e862274cd5a" translate="yes" xml:space="preserve">
          <source>Normally the entire range is iterated. If partial iteration (early stopping) is desired, &lt;code&gt;fun&lt;/code&gt; needs to return a value of type &lt;a href=&quot;std_typecons#Flag&quot;&gt;&lt;code&gt;std.typecons.Flag&lt;/code&gt;&lt;/a&gt;&lt;code&gt;!&quot;each&quot;&lt;/code&gt; (&lt;code&gt;Yes.each&lt;/code&gt; to continue iteration, or &lt;code&gt;No.each&lt;/code&gt; to stop iteration).</source>
          <target state="translated">通常，整个范围都是迭代的。如果局部迭代（年初停止）是需要的， &lt;code&gt;fun&lt;/code&gt; 需要返回类型的值&lt;a href=&quot;std_typecons#Flag&quot;&gt; &lt;code&gt;std.typecons.Flag&lt;/code&gt; &lt;/a&gt; &lt;code&gt;!&quot;each&quot;&lt;/code&gt; （ &lt;code&gt;Yes.each&lt;/code&gt; 继续迭代，或 &lt;code&gt;No.each&lt;/code&gt; 停止迭代）。</target>
        </trans-unit>
        <trans-unit id="29618eee34797a5a2f7a6b8c7471e6891e8c6f72" translate="yes" xml:space="preserve">
          <source>Normally this will be a representation of some substitution character, such as U+FFFD or '?'.</source>
          <target state="translated">通常这将是一些替换字符的表示,如U+FFFD或'?'。</target>
        </trans-unit>
        <trans-unit id="616330b39a091db71ac93a24fa21496f28c24b0e" translate="yes" xml:space="preserve">
          <source>Normally, all threads other than the collector thread must be halted while the collection is in progress.</source>
          <target state="translated">通常情况下,在收集过程中,必须停止除收集器线程以外的所有线程。</target>
        </trans-unit>
        <trans-unit id="d2cdadd59c9faa6f566843af471118acedd006a9" translate="yes" xml:space="preserve">
          <source>Normally, variables are initialized either with an explicit &lt;a href=&quot;#Initializer&quot;&gt;&lt;i&gt;Initializer&lt;/i&gt;&lt;/a&gt; or are set to the default value for the type of the variable. If the</source>
          <target state="translated">通常，变量可以使用显式的&lt;a href=&quot;#Initializer&quot;&gt;&lt;i&gt;Initializer初始化，&lt;/i&gt;&lt;/a&gt;也可以设置为变量类型的默认值。如果</target>
        </trans-unit>
        <trans-unit id="b33c1ae2bc162cf47c63d7dd7001c6d16ef1d3ab" translate="yes" xml:space="preserve">
          <source>Not &lt;code&gt;null&lt;/code&gt; iff the &lt;code&gt;static foreach&lt;/code&gt; is over a range. Exactly one of the &lt;code&gt;aggrefe&lt;/code&gt; and &lt;code&gt;rangefe&lt;/code&gt; fields is not null. See &lt;code&gt;aggrfe&lt;/code&gt; field for more details.</source>
          <target state="translated">没有 &lt;code&gt;null&lt;/code&gt; 当且仅当 &lt;code&gt;static foreach&lt;/code&gt; 是在一定范围内。恰好 &lt;code&gt;aggrefe&lt;/code&gt; 和 &lt;code&gt;rangefe&lt;/code&gt; 字段之一不为null。有关更多详细信息，请参见 &lt;code&gt;aggrfe&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="53a3a9472c8c6ede9ddff52aba2954163c06cc47" translate="yes" xml:space="preserve">
          <source>Not &lt;code&gt;null&lt;/code&gt; iff the &lt;code&gt;static foreach&lt;/code&gt; is over an aggregate. In this case, it contains the corresponding ForeachStatement. For StaticForeachDeclaration, the body is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">没有 &lt;code&gt;null&lt;/code&gt; 当且仅当 &lt;code&gt;static foreach&lt;/code&gt; 结束的集合。在这种情况下，它包含相应的ForeachStatement。对于StaticForeachDeclaration，主体为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97057bfa10cf793926cfd87b11566cdc01e1cb3c" translate="yes" xml:space="preserve">
          <source>Not all NFS implementations correctly implement file locking.</source>
          <target state="translated">并非所有的NFS实现都能正确实现文件锁定。</target>
        </trans-unit>
        <trans-unit id="01a3e29cd96b83aac5cafcd85558e38b6683f44f" translate="yes" xml:space="preserve">
          <source>Not currently implemented - rounds twice.</source>
          <target state="translated">目前未执行----轮换两次。</target>
        </trans-unit>
        <trans-unit id="8c8eaa281c14ceaa91826c9250d9cfd83ad9d40f" translate="yes" xml:space="preserve">
          <source>Not everything can be directly aliased. An alias cannot be declared of - for example - a literal:</source>
          <target state="translated">并非所有的东西都可以直接使用别名。例如,不能为一个字面意思声明别名。</target>
        </trans-unit>
        <trans-unit id="4fb931cd85c14975fa02ea3e36a9938b47df2d71" translate="yes" xml:space="preserve">
          <source>Not implemented for Microsoft C Runtime</source>
          <target state="translated">未在Microsoft C运行时实施</target>
        </trans-unit>
        <trans-unit id="d1cd7a5726d3f1a764ca2fc961231d11bd265912" translate="yes" xml:space="preserve">
          <source>Not only functions, but also instantiated class and struct types can become nested via implicitly captured context.</source>
          <target state="translated">不仅是函数,而且实例化的类和结构类型也可以通过隐式捕获上下文成为嵌套。</target>
        </trans-unit>
        <trans-unit id="370f69da05a7f1c2f2916dfb7540ce12b5251753" translate="yes" xml:space="preserve">
          <source>Not sequenced. Corresponds to &lt;a href=&quot;https://llvm.org/docs/Atomics.html#monotonic&quot;&gt;LLVM AtomicOrdering.Monotonic&lt;/a&gt; and C++11/C11 &lt;code&gt;memory_order_relaxed&lt;/code&gt;.</source>
          <target state="translated">未排序。对应于&lt;a href=&quot;https://llvm.org/docs/Atomics.html#monotonic&quot;&gt;LLVM AtomicOrdering.Monotonic&lt;/a&gt;和C ++ 11 / C11 &lt;code&gt;memory_order_relaxed&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72a8611375e3228ee97719b4aa70e9a3728d46c5" translate="yes" xml:space="preserve">
          <source>Not used</source>
          <target state="translated">未使用</target>
        </trans-unit>
        <trans-unit id="82ecf8fc619ffac944a052c932297b27a382324f" translate="yes" xml:space="preserve">
          <source>Notably absent from the list of overloaded unary operators is the ! logical negation operator. More obscurely absent is a unary operator to convert to a bool result. Instead, these are covered by a rewrite to:</source>
          <target state="translated">值得注意的是,在重载单数运算符列表中,没有 !逻辑否定运算符。更为隐晦的是,没有一个将结果转换为 bool 的单利运算符。相反,这些运算符被重写为:</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="d0ac0232e6dce0f6fe6e5dd1148acf7178ea46fa" translate="yes" xml:space="preserve">
          <source>Note how in the above example, the constructor is not bindable and is instead disabled on the D side; an alternative would be to reimplement the constructor in D. See the &lt;a href=&quot;cpp_interface#lifetime-management&quot;&gt;section below on lifetime management&lt;/a&gt; for more information.</source>
          <target state="translated">请注意，在上面的示例中，构造函数不可绑定，而是在D侧被禁用；另一种选择是在D中重新实现构造函数。有关更多信息，请参见&lt;a href=&quot;cpp_interface#lifetime-management&quot;&gt;下面有关生命周期管理&lt;/a&gt;的部分。</target>
        </trans-unit>
        <trans-unit id="d63d9fe9d0db7f9d24974a2fa9eef608eb74e8f0" translate="yes" xml:space="preserve">
          <source>Note how the gaps in matching are simply ignored, for example (&lt;code&gt;&quot;Hello&quot;, &quot;new&quot;&lt;/code&gt;) is deemed as good a match as (&lt;code&gt;&quot;new&quot;, &quot;world&quot;&lt;/code&gt;). This may be too permissive for some applications. To eliminate gapped matches entirely, use &lt;code&gt;lambda = 0&lt;/code&gt;:</source>
          <target state="translated">请注意，如何简单地忽略匹配中的差距，例如（ &lt;code&gt;&quot;Hello&quot;, &quot;new&quot;&lt;/code&gt; ）被视为与（ &lt;code&gt;&quot;new&quot;, &quot;world&quot;&lt;/code&gt; ）匹配良好。对于某些应用程序，这可能太宽容了。要完全消除空白匹配，请使用 &lt;code&gt;lambda = 0&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a1e8204a558e9a55cf2fa37f85f947f27510f23e" translate="yes" xml:space="preserve">
          <source>Note however that you need to mark the &lt;b&gt;mixin&lt;/b&gt; line with at least a minimal (i.e. just &lt;b&gt;///&lt;/b&gt;) DDoc comment if you want the mixed-in constructors to be documented in the newly created Exception subclass.</source>
          <target state="translated">但是请注意，如果要将混合构造函数记录在新创建的Exception子类中，则需要在&lt;b&gt;混合&lt;/b&gt;行中至少标记一个最小（即&lt;b&gt;///&lt;/b&gt;）。</target>
        </trans-unit>
        <trans-unit id="49782e4f0e6f78442cd5999d6960bb6410f594b1" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;expression#Expression&quot;&gt;&lt;i&gt;Expression&lt;/i&gt;&lt;/a&gt; only gets evaluated once and is not copied. The with statement does not change what &lt;code&gt;this&lt;/code&gt; or &lt;code&gt;super&lt;/code&gt; refer to.</source>
          <target state="translated">请注意，&lt;a href=&quot;expression#Expression&quot;&gt;&lt;i&gt;表达式&lt;/i&gt;&lt;/a&gt;仅计算一次，不会被复制。with语句不会更改 &lt;code&gt;this&lt;/code&gt; 或 &lt;code&gt;super&lt;/code&gt; 所引用的内容。</target>
        </trans-unit>
        <trans-unit id="e4659f73d3ae58eed0197c3a42a85e74bfb19d3b" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;SpanMode.breadth&lt;/code&gt; will not result in all directory members occurring before any subdirectory members, i.e. it is not true &lt;a href=&quot;https://en.wikipedia.org/wiki/Tree_traversal#Breadth-first_search&quot;&gt; breadth-first traversal&lt;/a&gt;.</source>
          <target state="translated">请注意， &lt;code&gt;SpanMode.breadth&lt;/code&gt; 不会导致所有目录成员都出现在任何子目录成员之前，即不是真正的&lt;a href=&quot;https://en.wikipedia.org/wiki/Tree_traversal#Breadth-first_search&quot;&gt;广度优先遍历&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="42e0aef8adc72b9023bfd746db5bfa57d6852029" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;extern(C)&lt;/code&gt; can be provided for all types of declarations, including &lt;code&gt;struct&lt;/code&gt; or &lt;code&gt;class&lt;/code&gt;, even though there is no corresponding match on the &lt;code&gt;C&lt;/code&gt; side. In that case, the attribute is ignored. This behavior applies for nested functions and nested variables as well. However, for &lt;code&gt;static&lt;/code&gt; member methods and &lt;code&gt;static&lt;/code&gt; nested functions, adding &lt;code&gt;extern(C)&lt;/code&gt; will change the calling convention, but not the mangling.</source>
          <target state="translated">请注意，即使 &lt;code&gt;C&lt;/code&gt; 端没有相应的匹配 &lt;code&gt;class&lt;/code&gt; ，也可以为所有类型的声明（包括 &lt;code&gt;struct&lt;/code&gt; 或class &lt;code&gt;extern(C)&lt;/code&gt; 提供extern（C）。在这种情况下，该属性将被忽略。此行为也适用于嵌套函数和嵌套变量。但是，对于 &lt;code&gt;static&lt;/code&gt; 成员方法和 &lt;code&gt;static&lt;/code&gt; 嵌套函数，添加 &lt;code&gt;extern(C)&lt;/code&gt; 将更改调用约定，但不会更改操作。</target>
        </trans-unit>
        <trans-unit id="c694f9520df240fcfb4f1d45e61d464f651b858d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;length&lt;/code&gt; is an optional primitive as no range must implement it. Some ranges do not store their length explicitly, some cannot compute it without actually exhausting the range (e.g. socket streams), and some other ranges may be infinite.</source>
          <target state="translated">注意， &lt;code&gt;length&lt;/code&gt; 是可选的原语，因为没有范围可以实现它。有些范围不能明确存储其长度，有些不能在不耗尽范围的情况下进行计算（例如套接字流），而另一些范围可能是无限的。</target>
        </trans-unit>
        <trans-unit id="1985cc6351c47a8eb8f5d167c16f6d5887181cf3" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;make&lt;/code&gt; can infer the element type from the given arguments.</source>
          <target state="translated">请注意， &lt;code&gt;make&lt;/code&gt; 可以从给定参数推断元素类型。</target>
        </trans-unit>
        <trans-unit id="0d177ff7ae98932b810bf22e27225c171a711978" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;opCast&lt;/code&gt; is only ever used with an explicit &lt;code&gt;cast&lt;/code&gt; expression, except in the case of boolean operations (see next section)</source>
          <target state="translated">需要注意的是 &lt;code&gt;opCast&lt;/code&gt; 只会被使用显式使用的 &lt;code&gt;cast&lt;/code&gt; 表达，除了在布尔操作的情况下（参见下一节）</target>
        </trans-unit>
        <trans-unit id="0819f08e5482b36a26eff5fe36779d0358954a41" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;opCmp&lt;/code&gt; is only used for the inequality operators; expressions like &lt;code&gt;a == b&lt;/code&gt; always uses &lt;code&gt;opEquals&lt;/code&gt;. If &lt;code&gt;opCmp&lt;/code&gt; is defined but &lt;code&gt;opEquals&lt;/code&gt; isn't, the compiler will supply a default version of &lt;code&gt;opEquals&lt;/code&gt; that performs member-wise comparison. If this member-wise comparison is not consistent with the user-defined &lt;code&gt;opCmp&lt;/code&gt;, then it is up to the programmer to supply an appropriate version of &lt;code&gt;opEquals&lt;/code&gt;. Otherwise, inequalities like &lt;code&gt;a &amp;lt;= b&lt;/code&gt; will behave inconsistently with equalities like &lt;code&gt;a == b&lt;/code&gt;.</source>
          <target state="translated">注意， &lt;code&gt;opCmp&lt;/code&gt; 仅用于不等式运算符。像 &lt;code&gt;a == b&lt;/code&gt; 这样的表达式始终使用 &lt;code&gt;opEquals&lt;/code&gt; 。如果定义了 &lt;code&gt;opCmp&lt;/code&gt; 但未定义 &lt;code&gt;opEquals&lt;/code&gt; ，则编译器将提供默认版本的 &lt;code&gt;opEquals&lt;/code&gt; ，该默认版本执行逐成员比较。如果此成员比较与用户定义的 &lt;code&gt;opCmp&lt;/code&gt; 不一致，则应由程序员提供适当版本的 &lt;code&gt;opEquals&lt;/code&gt; 。否则，像 &lt;code&gt;a &amp;lt;= b&lt;/code&gt; 不等式将与像 &lt;code&gt;a == b&lt;/code&gt; 等式不一致。</target>
        </trans-unit>
        <trans-unit id="1bdba074265129732a88d63db9be3f0813532fc0" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;opDollar!i&lt;/code&gt; is only evaluated once for each &lt;code&gt;i&lt;/code&gt; where &lt;code&gt;$&lt;/code&gt; occurs in the corresponding position in the indexing operation. Thus, an expression like &lt;code&gt;arr[$-sqrt($), 0, $-1]&lt;/code&gt; has the effect of:</source>
          <target state="translated">注意，对于索引操作中相应位置出现 &lt;code&gt;$&lt;/code&gt; 的每个 &lt;code&gt;i&lt;/code&gt; ，仅对 &lt;code&gt;opDollar!i&lt;/code&gt; 进行一次评估。因此，像 &lt;code&gt;arr[$-sqrt($), 0, $-1]&lt;/code&gt; 这样的表达式具有以下效果：</target>
        </trans-unit>
        <trans-unit id="d28a332cf4afd40dd7792fd4da1375ef4f81f0a1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;opIn&lt;/code&gt; and &lt;code&gt;opIn_r&lt;/code&gt; have been deprecated in favor of &lt;code&gt;opBinary!&quot;in&quot;&lt;/code&gt; and &lt;code&gt;opBinaryRight!&quot;in&quot;&lt;/code&gt; respectively.</source>
          <target state="translated">请注意，不赞成使用 &lt;code&gt;opIn&lt;/code&gt; 和 &lt;code&gt;opIn_r&lt;/code&gt; ，而分别赞成使用 &lt;code&gt;opBinary!&quot;in&quot;&lt;/code&gt; 和 &lt;code&gt;opBinaryRight!&quot;in&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9fe998aedd3f2332b372e13ad892064966a05a40" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;p[0 .. sz]&lt;/code&gt; is treated as an opaque range of memory assumed to be suitably managed by the caller. In particular, if p points into a GC-managed memory block, addRange does</source>
          <target state="translated">注意， &lt;code&gt;p[0 .. sz]&lt;/code&gt; 被视为假定由调用方适当管理的内存的不透明范围。特别是，如果p指向GC管理的内存块，则addRange会执行</target>
        </trans-unit>
        <trans-unit id="446697cde3fce65ea1af249f991e067ee7a7126c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;remove&lt;/code&gt; does not change the length of the original range directly; instead, it returns the shortened range. If its return value is not assigned to the original range, the original range will retain its original length, though its contents will have changed:</source>
          <target state="translated">请注意， &lt;code&gt;remove&lt;/code&gt; 不会直接更改原始范围的长度。而是返回缩短的范围。如果未将其返回值分配给原始范围，则原始范围将保留其原始长度，尽管其内容已更改：</target>
        </trans-unit>
        <trans-unit id="bd79b3c280c7d264b68b6cb7886d544b94d51de2" translate="yes" xml:space="preserve">
          <source>Note that DDoc comments may embed raw HTML, including &amp;lt;script&amp;gt; tags. Be careful when publishing or distributing rendered DDoc HTML generated from untrusted sources, as this may allow &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt; cross-site scripting&lt;/a&gt;.</source>
          <target state="translated">请注意，DDoc注释可能会嵌入原始HTML，包括&amp;lt;script&amp;gt;标记。发布或分发从不受信任的来源生成的渲染的DDoc HTML时要小心，因为这可能允许&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;跨站点脚本编写&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0036754838cdb2ff3f71827ebae24962a2f81ac6" translate="yes" xml:space="preserve">
          <source>Note that a lone &lt;code&gt;extern&lt;/code&gt; declaration is used as a &lt;a href=&quot;declaration#extern&quot;&gt;storage class&lt;/a&gt;.</source>
          <target state="translated">注意，一个单独的 &lt;code&gt;extern&lt;/code&gt; 声明用作&lt;a href=&quot;declaration#extern&quot;&gt;存储类&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d2f839e70486c3b3c3b2b7c5e6ccf35d0c885cd8" translate="yes" xml:space="preserve">
          <source>Note that all instantiations used in D code must be provided by linking to C++ object code or shared libraries containing the instantiations.</source>
          <target state="translated">注意,D代码中使用的所有实例必须通过链接到C++对象代码或包含实例的共享库来提供。</target>
        </trans-unit>
        <trans-unit id="115633c56a2153ab4afb3286ea8d9b5f88ac33a5" translate="yes" xml:space="preserve">
          <source>Note that any &lt;a href=&quot;expression#FunctionLiteral&quot;&gt;&lt;i&gt;FunctionLiteral&lt;/i&gt;&lt;/a&gt; should be inlined when used in its declaration scope.</source>
          <target state="translated">请注意，在其声明范围中使用任何&lt;a href=&quot;expression#FunctionLiteral&quot;&gt;&lt;i&gt;FunctionLiteral时&lt;/i&gt;&lt;/a&gt;都应内联。</target>
        </trans-unit>
        <trans-unit id="912ae4118da5ae88c104ee54cbc7ed752a73a626" translate="yes" xml:space="preserve">
          <source>Note that because &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; does not currently support having a second value of 60 (as is sometimes done for leap seconds), if the date-time value does have a value of 60 for the seconds, it is treated as 59.</source>
          <target state="translated">请注意，由于&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;当前不支持第二个值60（有时用于leap秒），因此，如果date-time值的秒数确实为60，则将其视为59。</target>
        </trans-unit>
        <trans-unit id="f6dc1eb334587071e774c1938dbe1cdce303845a" translate="yes" xml:space="preserve">
          <source>Note that built-in comparison operators operate on a &lt;a href=&quot;http://www.unicode.org/glossary/#code_unit&quot;&gt;code unit&lt;/a&gt; basis. The end result for valid strings is the same as that of &lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;code point&lt;/a&gt; for &lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;code point&lt;/a&gt; comparison as long as both strings are in the same &lt;a href=&quot;http://www.unicode.org/glossary/#normalization_form&quot;&gt;normalization form&lt;/a&gt;. Since normalization is a costly operation not suitable for language primitives it's assumed to be enforced by the user.</source>
          <target state="translated">请注意，内置比较运算符以&lt;a href=&quot;http://www.unicode.org/glossary/#code_unit&quot;&gt;代码单位为&lt;/a&gt;基础进行操作。有效字符串的最终结果与用于&lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;代码点&lt;/a&gt;比较的&lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;代码点&lt;/a&gt;的最终结果相同，只要两个字符串都具有相同的&lt;a href=&quot;http://www.unicode.org/glossary/#normalization_form&quot;&gt;规范化形式即可&lt;/a&gt;。由于规范化是一项不适合语言原语的昂贵操作，因此假定由用户强制执行。</target>
        </trans-unit>
        <trans-unit id="9b28b1e383cdef82230e59abe072f131bbfb679e" translate="yes" xml:space="preserve">
          <source>Note that by default an import expression will not compile unless you pass one or more paths via the &lt;b&gt;-J&lt;/b&gt; switch. This tells the compiler where it should look for the files to import. This is a security feature.</source>
          <target state="translated">请注意，默认情况下，除非您通过&lt;b&gt;-J&lt;/b&gt;开关传递一个或多个路径，否则不会编译导入表达式。这告诉编译器应该在哪里寻找要导入的文件。这是一项安全功能。</target>
        </trans-unit>
        <trans-unit id="f443bcce9cbaf4b849f4fec4e4d01fac263bc259" translate="yes" xml:space="preserve">
          <source>Note that casting away a const qualifier and then mutating is undefined behavior, too, even when the referenced data is mutable. This is so that compilers and programmers can make assumptions based on const alone. For example, here it may be assumed that &lt;code&gt;f&lt;/code&gt; does not alter &lt;code&gt;x&lt;/code&gt;:</source>
          <target state="translated">请注意，即使引用的数据是可变的，抛弃const限定符然后进行变异也是未定义的行为。这样，编译器和程序员就可以仅基于const进行假设。例如，这里可以假定 &lt;code&gt;f&lt;/code&gt; 不会改变 &lt;code&gt;x&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a47b32f03830e6e76bd154f4549ffa1d22b1729d" translate="yes" xml:space="preserve">
          <source>Note that dimensions and indices appear in opposite orders. Dimensions in the &lt;a href=&quot;#declarations&quot;&gt;declaration&lt;/a&gt; are read right to left whereas indices are read left to right:</source>
          <target state="translated">请注意，维度和索引以相反的顺序出现。&lt;a href=&quot;#declarations&quot;&gt;声明&lt;/a&gt;中的尺寸从右到左读取，而索引从左到右读取：</target>
        </trans-unit>
        <trans-unit id="51822d7a0b3604134aaf4375e4432a320cf932bc" translate="yes" xml:space="preserve">
          <source>Note that directory separators and dots don't stop a meta-character from matching further portions of the path.</source>
          <target state="translated">请注意,目录分隔符和点不会阻止元字符与路径的其他部分进行匹配。</target>
        </trans-unit>
        <trans-unit id="8e6cafb39971b4ab5ce4fa0e09eee1340357d767" translate="yes" xml:space="preserve">
          <source>Note that hypot(x, y), hypot(y, x) and hypot(x, -y) are equivalent.</source>
          <target state="translated">注意,hypot(x,y)、hypot(y,x)和hypot(x,-y)是等价的。</target>
        </trans-unit>
        <trans-unit id="7d64153396681f56405a98e9a94c523f4293a81b" translate="yes" xml:space="preserve">
          <source>Note that if day overflow is allowed, and the date with the adjusted year/month overflows the number of days in the new month, then the month will be incremented by one, and the day set to the number of days overflowed. (e.g. if the day were 31 and the new month were June, then the month would be incremented to July, and the new day would be 1). If day overflow is not allowed, then the day will be set to the last valid day in the month (e.g. June 31st would become June 30th).</source>
          <target state="translated">请注意,如果允许日期溢出,并且调整后的年/月的日期溢出了新月份的天数,那么月份将被递增1,而日期则被设置为溢出的天数。(例如:如果这一天是31,新的月份是6月,那么月份将递增为7月,新的一天将是1)。如果不允许日期溢出,那么日期将被设置为该月的最后一天(例如,6月31日将成为6月30日)。</target>
        </trans-unit>
        <trans-unit id="ad6965a043b0f438ffed7d142808cac0176fe172" translate="yes" xml:space="preserve">
          <source>Note that if either end of the pipe has been passed to a child process, it will only be closed in the parent process. (What happens in the child process is platform dependent.)</source>
          <target state="translated">请注意,如果管道的任何一端被传递给了子进程,那么只有在父进程中才会被关闭(在子进程中发生的事情取决于平台)。在子进程中发生的事情取决于平台)。</target>
        </trans-unit>
        <trans-unit id="641b8bad6eb393e831a191963ea178efc311a8dd" translate="yes" xml:space="preserve">
          <source>Note that if iterating forward, &lt;code&gt;add!&quot;years&quot;()&lt;/code&gt; is called on the given time point, then &lt;code&gt;add!&quot;months&quot;()&lt;/code&gt;, and finally the duration is added to it. However, if iterating backwards, the duration is added first, then &lt;code&gt;add!&quot;months&quot;()&lt;/code&gt; is called, and finally &lt;code&gt;add!&quot;years&quot;()&lt;/code&gt; is called. That way, going backwards generates close to the same time points that iterating forward does, but since adding years and months is not entirely reversible (due to possible day overflow, regardless of whether &lt;code&gt;AllowDayOverflow.yes&lt;/code&gt; or &lt;code&gt;AllowDayOverflow.no&lt;/code&gt; is used), it can't be guaranteed that iterating backwards will give the same time points as iterating forward would have (even assuming that the end of the range is a time point which would be returned by the delegate when iterating forward from &lt;code&gt;begin&lt;/code&gt;).</source>
          <target state="translated">注意，如果向前迭代，则在给定的时间点调用 &lt;code&gt;add!&quot;years&quot;()&lt;/code&gt; ，然后 &lt;code&gt;add!&quot;months&quot;()&lt;/code&gt; ，最后将持续时间添加到其中。但是，如果向后迭代，则先 &lt;code&gt;add!&quot;months&quot;()&lt;/code&gt; 持续时间，然后调用add！&amp;ldquo; months&amp;rdquo;（），最后调用 &lt;code&gt;add!&quot;years&quot;()&lt;/code&gt; 。这样，向后退生成的时间点几乎与向前迭代的时间点相同，但是由于增加年月数并不是完全可逆的（由于可能存在日溢出，无论 &lt;code&gt;AllowDayOverflow.yes&lt;/code&gt; 还是 &lt;code&gt;AllowDayOverflow.no&lt;/code&gt; 使用），不能保证向后迭代会提供与向前迭代相同的时间点（即使假设范围的结束是委托从 &lt;code&gt;begin&lt;/code&gt; 向前迭代时返回的时间点） 。</target>
        </trans-unit>
        <trans-unit id="9e24d541ab43dc77168136d6d96c2ec6d9cd50de" translate="yes" xml:space="preserve">
          <source>Note that if the extended unit test handler is set, this handler will be ignored.</source>
          <target state="translated">请注意,如果设置了扩展单元测试处理程序,这个处理程序将被忽略。</target>
        </trans-unit>
        <trans-unit id="09f09d5fb056a58012c263581462eef772037e06" translate="yes" xml:space="preserve">
          <source>Note that if you pass a &lt;code&gt;File&lt;/code&gt; object that is</source>
          <target state="translated">请注意，如果传递的 &lt;code&gt;File&lt;/code&gt; 对象是</target>
        </trans-unit>
        <trans-unit id="ae86af4bef5c6e75e79e1cb92f184299576a6121" translate="yes" xml:space="preserve">
          <source>Note that in UTF-32, a code unit is a code point and is represented by the D &lt;code&gt;dchar&lt;/code&gt; type.</source>
          <target state="translated">请注意，在UTF-32中，代码单位是代码点，并由D &lt;code&gt;dchar&lt;/code&gt; 类型表示。</target>
        </trans-unit>
        <trans-unit id="b8fbb5eacdc4154a5078a8de39a2ed8fa4ea03d3" translate="yes" xml:space="preserve">
          <source>Note that in all cases, &lt;code&gt;arr&lt;/code&gt; is only evaluated once. Thus, an expression like &lt;code&gt;getArray()[1, 2..3, $-1]=c&lt;/code&gt; has the effect of:</source>
          <target state="translated">请注意，在所有情况下， &lt;code&gt;arr&lt;/code&gt; 仅被评估一次。因此，像 &lt;code&gt;getArray()[1, 2..3, $-1]=c&lt;/code&gt; 这样的表达式具有以下效果：</target>
        </trans-unit>
        <trans-unit id="e006ced4b4958bf488f02e8e58d1bf92ac15c8b1" translate="yes" xml:space="preserve">
          <source>Note that in the above example the documentation comment uses the /++ ... +/ form so that /* ... */ can be used inside the code section.</source>
          <target state="translated">请注意,在上面的例子中,文档注释使用了 /++....+/形式,这样**......*/可以在代码部分内部使用。</target>
        </trans-unit>
        <trans-unit id="13e74cc91272ec9b2bfdce2ef0b3c810ab9c9367" translate="yes" xml:space="preserve">
          <source>Note that in this example, the first &lt;code&gt;wait&lt;/code&gt; call will have no effect if the process has already terminated by the time &lt;code&gt;tryWait&lt;/code&gt; is called. In the opposite case, however, the &lt;code&gt;scope&lt;/code&gt; statement ensures that we always wait for the process if it hasn't terminated by the time we reach the end of the scope.</source>
          <target state="translated">请注意，在此示例中，如果在调用 &lt;code&gt;tryWait&lt;/code&gt; 时进程已经终止，则第一次 &lt;code&gt;wait&lt;/code&gt; 调用将无效。但是，在相反情况下， &lt;code&gt;scope&lt;/code&gt; 语句可确保我们一直等待该过程，直到该过程在到达作用域末尾时尚未终止。</target>
        </trans-unit>
        <trans-unit id="80bddd1ea633b51a86fe0e551b1923914b6691c0" translate="yes" xml:space="preserve">
          <source>Note that less should produce a strict ordering. That is, for two unequal elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;less(a, b) == !less(b, a)&lt;/code&gt;. &lt;code&gt;less(a, a)&lt;/code&gt; should always equal &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">请注意，少应产生严格的顺序。也就是说，对于两个不相等的元素 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; ， &lt;code&gt;less(a, b) == !less(b, a)&lt;/code&gt; 。 &lt;code&gt;less(a, a)&lt;/code&gt; 应该始终等于 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="70bbeb274fea359aae2d040c8c2296e15c498ac2" translate="yes" xml:space="preserve">
          <source>Note that like all conversions in std.datetime, this is a truncating conversion.</source>
          <target state="translated">请注意,和 std.datetime 中的所有转换一样,这是一种截断式转换。</target>
        </trans-unit>
        <trans-unit id="44035a71fb744a3041456ec9cbdeceb03e62e357" translate="yes" xml:space="preserve">
          <source>Note that many file systems do not update the access time for files (generally for performance reasons), so there's a good chance that &lt;code&gt;timeLastAccessed&lt;/code&gt; will return the same value as &lt;code&gt;timeLastModified&lt;/code&gt;.</source>
          <target state="translated">注意，许多文件系统不会更新文件的访问时间（通常是出于性能方面的考虑），因此 &lt;code&gt;timeLastAccessed&lt;/code&gt; 很有可能会返回与 &lt;code&gt;timeLastModified&lt;/code&gt; 相同的值。</target>
        </trans-unit>
        <trans-unit id="36dba645f22a44df55465946f776825de4b8109a" translate="yes" xml:space="preserve">
          <source>Note that merely declaring &lt;code&gt;opCall&lt;/code&gt; automatically disables &lt;a href=&quot;struct#StructLiteral&quot;&gt;struct literal&lt;/a&gt; syntax. To avoid the limitation, you need to also declare a &lt;a href=&quot;struct#Struct-Constructor&quot;&gt;constructor&lt;/a&gt; so that it takes priority over &lt;code&gt;opCall&lt;/code&gt; in &lt;code&gt;Type(...)&lt;/code&gt; syntax.</source>
          <target state="translated">注意，仅声明 &lt;code&gt;opCall&lt;/code&gt; 会自动禁用&lt;a href=&quot;struct#StructLiteral&quot;&gt;结构文字&lt;/a&gt;语法。为了避免限制，你也需要声明一个&lt;a href=&quot;struct#Struct-Constructor&quot;&gt;构造函数&lt;/a&gt;，以便它优先于 &lt;code&gt;opCall&lt;/code&gt; 的 &lt;code&gt;Type(...)&lt;/code&gt; 语法。</target>
        </trans-unit>
        <trans-unit id="c19df3c7c698492518d32c4e38e6a62e58e238c9" translate="yes" xml:space="preserve">
          <source>Note that on Windows, both the backslash (&lt;code&gt;\&lt;/code&gt;) and the slash (&lt;code&gt;/&lt;/code&gt;) are in principle valid directory separators. This module treats them both on equal footing, but in cases where a</source>
          <target state="translated">请注意，在Windows上，反斜杠（ &lt;code&gt;\&lt;/code&gt; ）和斜杠（ &lt;code&gt;/&lt;/code&gt; ）原则上都是有效的目录分隔符。本模块以平等的态度对待他们，但在</target>
        </trans-unit>
        <trans-unit id="f0f97f096be5401c7d3f862a606a79cf1362201a" translate="yes" xml:space="preserve">
          <source>Note that only positive numbers can be integer powers of two. This function always return &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;x&lt;/code&gt; is negative or zero.</source>
          <target state="translated">请注意，只有正数可以是2的整数幂。如果 &lt;code&gt;x&lt;/code&gt; 为负或零，则此函数始终返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eda6c02b923a2ed1d7a7c278f61d78d88a3639e6" translate="yes" xml:space="preserve">
          <source>Note that since scripts and blocks overlap the usual trick to disambiguate is used - to get a block use &lt;code&gt;unicode.InBlockName&lt;/code&gt;, to search a script use &lt;code&gt;unicode.ScriptName&lt;/code&gt;.</source>
          <target state="translated">注意，由于脚本和块重叠惯用的伎俩，以消除歧义用来-获取块使用 &lt;code&gt;unicode.InBlockName&lt;/code&gt; ，搜索脚本中使用 &lt;code&gt;unicode.ScriptName&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22cc19be60608f85b4e4dfefb9bd5fe35fe1487b" translate="yes" xml:space="preserve">
          <source>Note that some attributes can be inferred. For example:</source>
          <target state="translated">注意,有些属性是可以推断的。例如:</target>
        </trans-unit>
        <trans-unit id="f18ac40c792f74fb305df69994445a32bfe7fcb9" translate="yes" xml:space="preserve">
          <source>Note that the &quot;mode&quot; parameter can be one of DecodeMode.NONE (do not decode), DecodeMode.LOOSE (decode, but ignore errors), or DecodeMode.STRICT (decode, and throw a DecodeException in the event of an error).</source>
          <target state="translated">请注意,&quot;mode &quot;参数可以是DecodeMode.NONE(不解码)、DecodeMode.LOOSE(解码,但忽略错误)或DecodeMode.STRICT(解码,并在发生错误时抛出一个DecodeException)中的一个。</target>
        </trans-unit>
        <trans-unit id="b273c3d2c6f44162b3727ab0ea7ead816fe1384c" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;extern (C++, &lt;/code&gt;ns&lt;code&gt;)&lt;/code&gt; linkage attribute affects only the ABI (name mangling and calling convention) of these declarations. Importing them follows the usual &lt;a href=&quot;spec/module&quot;&gt;D module import semantics&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9454f9715d5041deb694a9a0e0b28ae86a7f41f" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;strip&lt;/code&gt; and &lt;code&gt;stripRight&lt;/code&gt; functions require the range to be a &lt;a href=&quot;#BidirectionalRange&quot;&gt;&lt;code&gt;BidirectionalRange&lt;/code&gt;&lt;/a&gt; range.</source>
          <target state="translated">请注意， &lt;code&gt;strip&lt;/code&gt; 和 &lt;code&gt;stripRight&lt;/code&gt; 函数要求范围为&lt;a href=&quot;#BidirectionalRange&quot;&gt; &lt;code&gt;BidirectionalRange&lt;/code&gt; &lt;/a&gt;范围。</target>
        </trans-unit>
        <trans-unit id="105b64c754d996e053dd0d505eb33e6917a0a7c3" translate="yes" xml:space="preserve">
          <source>Note that the above restrictions apply only to expressions which are actually executed. For example:</source>
          <target state="translated">注意,上述限制只适用于实际执行的表达式。例如:</target>
        </trans-unit>
        <trans-unit id="c1a0644d2f3551c55090ce3b1a4bb396a6220a01" translate="yes" xml:space="preserve">
          <source>Note that the file attributes on Windows and POSIX systems are completely different. On Windows, they're what is returned by &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa364944(v=vs.85).aspx&quot;&gt; GetFileAttributes&lt;/a&gt;, whereas on POSIX systems, they're the &lt;code&gt;st_mode&lt;/code&gt; value which is part of the &lt;code&gt;stat struct&lt;/code&gt; gotten by calling the &lt;a href=&quot;http://en.wikipedia.org/wiki/Stat_%28Unix%29&quot;&gt;&lt;code&gt;stat&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801e5cbcd36f40a4077d34bcc94b269428800929" translate="yes" xml:space="preserve">
          <source>Note that the file attributes on Windows and POSIX systems are completely different. On, Windows, they're what is returned by &lt;code&gt;GetFileAttributes&lt;/code&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa364944(v=vs.85).aspx&quot;&gt;GetFileAttributes&lt;/a&gt; Whereas, an POSIX systems, they're the &lt;code&gt;st_mode&lt;/code&gt; value which is part of the &lt;code&gt;stat&lt;/code&gt; struct gotten by calling &lt;code&gt;stat&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f56ed4aac2dbf1ced449f72f5d0793404a040ac" translate="yes" xml:space="preserve">
          <source>Note that the file attributes on Windows and Posix systems are completely different. On Windows, they're what is returned by &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa364944(v=vs.85).aspx&quot;&gt; GetFileAttributes&lt;/a&gt;, whereas on Posix systems, they're the &lt;code&gt;st_mode&lt;/code&gt; value which is part of the &lt;code&gt;stat struct&lt;/code&gt; gotten by calling the &lt;a href=&quot;http://en.wikipedia.org/wiki/Stat_%28Unix%29&quot;&gt;&lt;code&gt;stat&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">请注意，Windows和Posix系统上的文件属性完全不同。在Windows上，它们是&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa364944(v=vs.85).aspx&quot;&gt;GetFileAttributes&lt;/a&gt;返回的内容，而在Posix系统上，它们是 &lt;code&gt;st_mode&lt;/code&gt; 值，它是通过调用&lt;a href=&quot;http://en.wikipedia.org/wiki/Stat_%28Unix%29&quot;&gt; &lt;code&gt;stat&lt;/code&gt; &lt;/a&gt;函数获得的 &lt;code&gt;stat struct&lt;/code&gt; 一部分。</target>
        </trans-unit>
        <trans-unit id="58b3a122bcf863a6e06a86f361dfc75dff88483d" translate="yes" xml:space="preserve">
          <source>Note that the file attributes on Windows and Posix systems are completely different. On, Windows, they're what is returned by &lt;code&gt;GetFileAttributes&lt;/code&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa364944(v=vs.85).aspx&quot;&gt;GetFileAttributes&lt;/a&gt; Whereas, an Posix systems, they're the &lt;code&gt;st_mode&lt;/code&gt; value which is part of the &lt;code&gt;stat&lt;/code&gt; struct gotten by calling &lt;code&gt;stat&lt;/code&gt;.</source>
          <target state="translated">请注意，Windows和Posix系统上的文件属性完全不同。在Windows上，它们是 &lt;code&gt;GetFileAttributes&lt;/code&gt; &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa364944(v=vs.85).aspx&quot;&gt;GetFileAttributes&lt;/a&gt;返回的内容，而在Posix系统中，它们是 &lt;code&gt;st_mode&lt;/code&gt; 值，它是通过调用 &lt;code&gt;stat&lt;/code&gt; 获得的 &lt;code&gt;stat&lt;/code&gt; 结构的一部分。</target>
        </trans-unit>
        <trans-unit id="ac0d5de26025de020503b24834bbc1e01d074910" translate="yes" xml:space="preserve">
          <source>Note that the number of days in the months or how far into the month either &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; is is irrelevant. It is the difference in the month property combined with the difference in years * 12. So, for instance, December 31st and January 1st are one month apart just as December 1st and January 31st are one month apart.</source>
          <target state="translated">请注意，月份中的天数或每个&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;与月份之间的距离无关。它是月份属性的差异加上年份的差异*12。因此，例如，12月31日和1月1日相距一个月，就像12月1日和1月31日相距一个月。</target>
        </trans-unit>
        <trans-unit id="3b7532f9c55c33a0ea3ab36928dfa00325e43b78" translate="yes" xml:space="preserve">
          <source>Note that the number of days in the months or how far into the month either date is is irrelevant. It is the difference in the month property combined with the difference in years * 12. So, for instance, December 31st and January 1st are one month apart just as December 1st and January 31st are one month apart.</source>
          <target state="translated">请注意,月份中的天数或任何一个日期进入月份的时间都是无关紧要的。它是月份属性的差异与年份*12的差异相结合。所以,例如,12月31日和1月1日相差一个月,就像12月1日和1月31日相差一个月一样。</target>
        </trans-unit>
        <trans-unit id="7def91aa85d70e11e052a5c942f5159d4bbd2f46" translate="yes" xml:space="preserve">
          <source>Note that the number of digits in the fractional seconds varies with the number of fractional seconds. It's a maximum of 7 (which would be hnsecs), but only has as many as are necessary to hold the correct value (so no trailing zeroes), and if there are no fractional seconds, then there is no decimal point.</source>
          <target state="translated">注意,小数秒的位数是随着小数秒的数量而变化的。它的最大值是7(也就是hnsecs),但只有保持正确数值所需的数量(所以没有尾数零),如果没有小数秒,那么就没有小数点。</target>
        </trans-unit>
        <trans-unit id="ed9272ebf234b02f1f0545ae76356a3b0ec23a8c" translate="yes" xml:space="preserve">
          <source>Note that the parameter to &lt;code&gt;opEquals&lt;/code&gt; is of type &lt;code&gt;Object&lt;/code&gt;, not the type of the class in which it is defined.</source>
          <target state="translated">请注意， &lt;code&gt;opEquals&lt;/code&gt; 的参数类型为 &lt;code&gt;Object&lt;/code&gt; ，而不是其定义所在类的类型。</target>
        </trans-unit>
        <trans-unit id="3bcdcd90f9f0d2f4085e68b75a145415970ef1fe" translate="yes" xml:space="preserve">
          <source>Note that the parameter to the generated &lt;code&gt;opAssign&lt;/code&gt; is passed by value, which means that the postblit is going to be called (if it is defined) in both of the above situations before entering the body of &lt;code&gt;opAssign&lt;/code&gt;. The assignments in the above generated function bodies are blit expressions, so they can be regarded as &lt;code&gt;memcpy&lt;/code&gt;s (&lt;code&gt;opAssign&lt;/code&gt; is not called as this will result in an infinite recursion; the postblit is not called because it has already been called when the parameter was passed by value).</source>
          <target state="translated">请注意，生成的 &lt;code&gt;opAssign&lt;/code&gt; 的参数是通过值传递的，这意味着在进入上述两种情况下，将在进入 &lt;code&gt;opAssign&lt;/code&gt; 的主体之前调用postblit（如果已定义）。上面生成的函数体中的分配是blit表达式，因此可以将它们视为 &lt;code&gt;memcpy&lt;/code&gt; s（未调用 &lt;code&gt;opAssign&lt;/code&gt; ,因为这将导致无限递归；未调用postblit，因为在传递参数时已经调用了postblit按价值）。</target>
        </trans-unit>
        <trans-unit id="cfca2dafa198ccff289d808ee6e617972ea3da55" translate="yes" xml:space="preserve">
          <source>Note that the precision of StopWatch differs from system to system. It is impossible for it to be the same for all systems, since the precision of the system clock and other system-dependent and situation-dependent factors (such as the overhead of a context switch between threads) varies from system to system and can affect StopWatch's accuracy.</source>
          <target state="translated">注意,StopWatch的精度因系统而异。它不可能对所有的系统都是一样的,因为系统时钟的精度和其他系统依赖和情况依赖的因素(如线程之间上下文切换的开销)因系统而异,会影响StopWatch的精度。</target>
        </trans-unit>
        <trans-unit id="013108e934bb36b82a19ea994bcf87182beae597" translate="yes" xml:space="preserve">
          <source>Note that the result is always mutable even if the original type was const or immutable. In order to retain the constness, use &lt;a href=&quot;std_traits#Signed&quot;&gt;&lt;code&gt;std.traits.Signed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请注意，即使原始类型为const或不可变，结果也始终是可变的。为了保留&lt;a href=&quot;std_traits#Signed&quot;&gt; &lt;code&gt;std.traits.Signed&lt;/code&gt; &lt;/a&gt;，请使用std.traits.Signed。</target>
        </trans-unit>
        <trans-unit id="b9fc2a3abef27f02d267911870b28cef9c5fce9d" translate="yes" xml:space="preserve">
          <source>Note that the result is always mutable even if the original type was const or immutable. In order to retain the constness, use &lt;a href=&quot;std_traits#Unsigned&quot;&gt;&lt;code&gt;std.traits.Unsigned&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请注意，即使原始类型为const或不可变，结果也始终是可变的。为了保留&lt;a href=&quot;std_traits#Unsigned&quot;&gt; &lt;code&gt;std.traits.Unsigned&lt;/code&gt; &lt;/a&gt;，请使用std.traits.Unsigned。</target>
        </trans-unit>
        <trans-unit id="97a6bd409b0edfaeec19001e1e4b496e335537bd" translate="yes" xml:space="preserve">
          <source>Note that the template mixin is evaluated in the context of its instantiation, not declaration. If this is a problem, the template mixin can use local imports, or have the member functions forward to the actual functions.</source>
          <target state="translated">请注意,模板 mixin 是在其实例化的上下文中评估的,而不是声明。如果这是个问题,模板 mixin 可以使用本地导入,或者让成员函数转发到实际函数中。</target>
        </trans-unit>
        <trans-unit id="90520f60d5001fa0deb6ccd61eaac980e05c6894" translate="yes" xml:space="preserve">
          <source>Note that the time zone is ignored. Only the internal std times (which are in UTC) are compared.</source>
          <target state="translated">请注意,时区被忽略。只有内部标准时间(以UTC为单位)被比较。</target>
        </trans-unit>
        <trans-unit id="347830fe2dab68c08b8a8c382421a6b59d1a9414" translate="yes" xml:space="preserve">
          <source>Note that there is no trailing &lt;code&gt;;&lt;/code&gt; after the closing &lt;code&gt;}&lt;/code&gt; of the class definition. It is also not possible to declare a variable var like:</source>
          <target state="translated">注意没有尾随 &lt;code&gt;;&lt;/code&gt; 在类定义的结束 &lt;code&gt;}&lt;/code&gt; 之后。也不可能像这样声明变量var：</target>
        </trans-unit>
        <trans-unit id="e2ce7a1307c873540e8c4568f17f9cb7d94fa592" translate="yes" xml:space="preserve">
          <source>Note that these specialized summing algorithms execute more primitive operations than vanilla summation. Therefore, if in certain cases maximum speed is required at expense of precision, one can use &lt;code&gt;fold!((a, b) =&amp;gt; a + b)(r, 0)&lt;/code&gt;, which is not specialized for summation.</source>
          <target state="translated">请注意，这些特殊的求和算法比原始求和执行更多的原始运算。因此，如果在某些情况下需要最大速度以牺牲精度为代价，则可以使用 &lt;code&gt;fold!((a, b) =&amp;gt; a + b)(r, 0)&lt;/code&gt; ，这不是专门用于求和的。</target>
        </trans-unit>
        <trans-unit id="66ceba8ad81e64e59b5bf6adfb9a8515853d4ada" translate="yes" xml:space="preserve">
          <source>Note that this class, like &lt;code&gt;Nspace&lt;/code&gt;, matches only one identifier part of a namespace. For the namespace &lt;code&gt;&quot;foo::bar&quot;&lt;/code&gt;, the will be a &lt;code&gt;CPPNamespaceDeclaration&lt;/code&gt; with its &lt;code&gt;ident&lt;/code&gt; set to &lt;code&gt;&quot;bar&quot;&lt;/code&gt;, and its &lt;code&gt;namespace&lt;/code&gt; field pointing to another &lt;code&gt;CPPNamespaceDeclaration&lt;/code&gt; with its &lt;code&gt;ident&lt;/code&gt; set to &lt;code&gt;&quot;foo&quot;&lt;/code&gt;.</source>
          <target state="translated">请注意，此类类似于 &lt;code&gt;Nspace&lt;/code&gt; ，仅匹配名称空间的一个标识符部分。对于命名空间 &lt;code&gt;&quot;foo::bar&quot;&lt;/code&gt; ，它将是一个 &lt;code&gt;CPPNamespaceDeclaration&lt;/code&gt; ，其 &lt;code&gt;ident&lt;/code&gt; 设置为 &lt;code&gt;&quot;bar&quot;&lt;/code&gt; ，其 &lt;code&gt;namespace&lt;/code&gt; 字段指向另一个 &lt;code&gt;CPPNamespaceDeclaration&lt;/code&gt; ，其 &lt;code&gt;ident&lt;/code&gt; 设置为 &lt;code&gt;&quot;foo&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c21c11195a0d1c7a31fd4780e9a08c186e540bb2" translate="yes" xml:space="preserve">
          <source>Note that this function can be used in conjunction with logGamma(x) to evaluate gamma for very large values of x.</source>
          <target state="translated">请注意,这个函数可以和logGamma(x)一起使用,以评估非常大的x值的gamma。</target>
        </trans-unit>
        <trans-unit id="0bf2881edd5d472dbfdc4275277886cc17c5a866" translate="yes" xml:space="preserve">
          <source>Note that this function does not resolve symbolic links.</source>
          <target state="translated">请注意,该函数不解析符号链接。</target>
        </trans-unit>
        <trans-unit id="21e585872c0d53f25db7173b27751038000ea37f" translate="yes" xml:space="preserve">
          <source>Note that this includes the non-character code points U+FFFE and U+FFFF, since these are valid code points (even though they are not valid characters).</source>
          <target state="translated">请注意,这包括非字符码点U+FFFE和U+FFFF,因为这些都是有效的码点(即使它们不是有效的字符)。</target>
        </trans-unit>
        <trans-unit id="9e54e3f648dff697f15989171e1f17afab1f263c" translate="yes" xml:space="preserve">
          <source>Note that unary &lt;code&gt;-&lt;/code&gt; is considered to overflow if &lt;code&gt;T&lt;/code&gt; is a signed integral of 32 or 64 bits and is equal to the most negative value. This is because that value has no positive negation.</source>
          <target state="translated">请注意，如果 &lt;code&gt;T&lt;/code&gt; 为32或64位的有符号整数且等于最大负值，则认为一元 &lt;code&gt;-&lt;/code&gt; 溢出。这是因为该值没有肯定的否定。</target>
        </trans-unit>
        <trans-unit id="e22da1f09943bc1bd2194eb52462e47725243938" translate="yes" xml:space="preserve">
          <source>Note that using immutable on the left hand side of a method does not apply to the return type:</source>
          <target state="translated">请注意,在方法的左侧使用immutable并不适用于返回类型。</target>
        </trans-unit>
        <trans-unit id="918640f380644b341ffcec2196c90d882dd46a65" translate="yes" xml:space="preserve">
          <source>Note that using the &lt;code&gt;~user&lt;/code&gt; syntax may give different values from just &lt;code&gt;~&lt;/code&gt; if the environment variable doesn't match the value stored in the user database.</source>
          <target state="translated">请注意，如果环境变量与用户数据库中存储的值不匹配，则使用 &lt;code&gt;~user&lt;/code&gt; 语法可能会提供与 &lt;code&gt;~&lt;/code&gt; 不同的值。</target>
        </trans-unit>
        <trans-unit id="d08e2d88ab7d380019dd445d33fece11f314cccc" translate="yes" xml:space="preserve">
          <source>Note that when &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;immutable&lt;/code&gt; are used to explicitly qualify a postblit as in &lt;code&gt;this(this) const immutable;&lt;/code&gt; or &lt;code&gt;const immutable this(this);&lt;/code&gt; - the order in which the qualifiers are declared does not matter - the compiler generates a conflicting attribute error, however declaring the struct as &lt;code&gt;const&lt;/code&gt;/&lt;code&gt;immutable&lt;/code&gt; and the postblit as &lt;code&gt;immutable&lt;/code&gt;/&lt;code&gt;const&lt;/code&gt; achieves the effect of applying both qualifiers to the postblit. In both cases the postblit is qualified with the more restrictive qualifier, which is &lt;code&gt;immutable&lt;/code&gt;.</source>
          <target state="translated">注意，当使用 &lt;code&gt;const&lt;/code&gt; 和 &lt;code&gt;immutable&lt;/code&gt; 显式限定postblit时，就像 &lt;code&gt;this(this) const immutable;&lt;/code&gt; 或 &lt;code&gt;const immutable this(this);&lt;/code&gt; -限定词的声明顺序无关紧要-编译器生成冲突的属性错误，但是将struct声明为 &lt;code&gt;const&lt;/code&gt; / &lt;code&gt;immutable&lt;/code&gt; ，将postblit声明为 &lt;code&gt;immutable&lt;/code&gt; / &lt;code&gt;const&lt;/code&gt; 可以达到将两个限定符应用于postblit的效果。在这两种情况下，postblit都使用更严格的限定符进行限定，后者是 &lt;code&gt;immutable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db6f486afc782e7d8d40d6176273ffd0a92d6589" translate="yes" xml:space="preserve">
          <source>Note that when rolling msecs, usecs or hnsecs, they all add up to a second. So, for example, rolling 1000 msecs is exactly the same as rolling 100,000 usecs.</source>
          <target state="translated">请注意,当滚动毫秒、毫秒或毫秒时,它们都加起来就是一秒。因此,例如,滚动1000毫秒与滚动100,000微秒完全相同。</target>
        </trans-unit>
        <trans-unit id="72c082db4e1807b855106dcd51e06ae543e5a663" translate="yes" xml:space="preserve">
          <source>Note that while &lt;code&gt;collectException&lt;/code&gt;</source>
          <target state="translated">请注意，虽然 &lt;code&gt;collectException&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a633cde16fe0b35262b02b2b40dcd83110f14198" translate="yes" xml:space="preserve">
          <source>Note that while &lt;code&gt;collectExceptionMsg&lt;/code&gt;</source>
          <target state="translated">请注意，尽管 &lt;code&gt;collectExceptionMsg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb0030eca3940263d99b92bc47097ce8c0e84a35" translate="yes" xml:space="preserve">
          <source>Note that your function will be called for both start tags and empty tags. That is, we make no distinction between &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; and &amp;lt;br/&amp;gt;.</source>
          <target state="translated">请注意，开始标记和空标记都会调用您的函数。也就是说，我们在&amp;lt;br&amp;gt; &amp;lt;/br&amp;gt;和&amp;lt;br/&amp;gt;之间没有区别。</target>
        </trans-unit>
        <trans-unit id="9b9f74a3e01b56fbe0b6285c40c17c1416f204c3" translate="yes" xml:space="preserve">
          <source>Note that, currently, foreach (c:codePoints(s)) is superior to foreach (c;s) in that the latter will fall over on encountering U+FFFF.</source>
          <target state="translated">需要注意的是,目前foreach(c:codePoints(s))优于foreach(c;s),因为后者在遇到U+FFFF时就会倒下。</target>
        </trans-unit>
        <trans-unit id="1b30eb201d301a49862249a5a39c27627b493d38" translate="yes" xml:space="preserve">
          <source>Note that, since &lt;code&gt;functions&lt;/code&gt; are assumed to be associative, additional optimizations are made to the serial portion of the reduction algorithm. These take advantage of the instruction level parallelism of modern CPUs, in addition to the thread-level parallelism that the rest of this module exploits. This can lead to better than linear speedups relative to &lt;a href=&quot;std_algorithm_iteration#reduce&quot;&gt;&lt;code&gt;std.algorithm.iteration.reduce&lt;/code&gt;&lt;/a&gt;, especially for fine-grained benchmarks like dot products.</source>
          <target state="translated">注意，由于假定 &lt;code&gt;functions&lt;/code&gt; 是关联的，因此对归约算法的串行部分进行了其他优化。除了本模块其余部分利用的线程级并行性外，它们还利用了现代CPU的指令级并行性。与&lt;a href=&quot;std_algorithm_iteration#reduce&quot;&gt; &lt;code&gt;std.algorithm.iteration.reduce&lt;/code&gt; 相比&lt;/a&gt;，这可以带来比线性加速更好的效果，尤其是对于像点产品这样的细粒度基准测试而言。</target>
        </trans-unit>
        <trans-unit id="3b050c108011d5c83aae9e488ace3162ed4d3888" translate="yes" xml:space="preserve">
          <source>Note the double asterisks in the example above. This is because the list is inside a documentation comment that is delimited with asterisks, so the initial asterisk is considered part of the documentation comment, not a list item. This is even true when other lines don't start with an asterisk:</source>
          <target state="translated">请注意上面例子中的双星号。这是因为列表位于用星号分隔的文档注释中,所以最初的星号被认为是文档注释的一部分,而不是列表项。甚至当其他行不以星号开头时也是如此。</target>
        </trans-unit>
        <trans-unit id="77a42fc96213541cea82021eba50295b8b065cb7" translate="yes" xml:space="preserve">
          <source>Note there is also LARGE version which adds large file support for platforms which have larger off_t sizes. See MAXFILESIZE_LARGE below.</source>
          <target state="translated">请注意,还有LARGE版本,它为off_t大小较大的平台增加了大文件支持。参见下面的MAXFILESIZE_LARGE。</target>
        </trans-unit>
        <trans-unit id="14c50f05b7dc80a74871bb2afa89104fae9ab95b" translate="yes" xml:space="preserve">
          <source>Note there is also a LARGE version of this key which uses off_t types, allowing for large file offsets on platforms which use larger-than-32-bit off_t's. Look below for RESUME_FROM_LARGE.</source>
          <target state="translated">注意这个键还有一个LARGE版本,它使用off_t类型,允许在使用大于32位off_t的平台上使用大文件偏移量。请看下面的RESUME_FROM_LARGE。</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">Note:</target>
        </trans-unit>
        <trans-unit id="474b920eed351c384de7672326f5263e20997572" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;static opCall&lt;/code&gt; can be used to simulate struct constructors with no arguments, but this is not recommended practice. Instead, the preferred solution is to use a factory function to create struct instances.</source>
          <target state="translated">注意： &lt;code&gt;static opCall&lt;/code&gt; 可以用于模拟不带参数的struct构造函数，但是不建议您这样做。相反，首选解决方案是使用工厂函数创建结构实例。</target>
        </trans-unit>
        <trans-unit id="b6757b7ec836c02379870ff926a56d3f1c2de6cf" translate="yes" xml:space="preserve">
          <source>Note: Although the definition is straightforward, a few subtleties exist related to function literals. In the statement &lt;code&gt;return (() =&amp;gt; x + f())() * g();&lt;/code&gt;, the full expression of &lt;code&gt;f()&lt;/code&gt; is &lt;code&gt;x + f()&lt;/code&gt;, not the expression passed to &lt;code&gt;return&lt;/code&gt;. This is because the parent of &lt;code&gt;x + f()&lt;/code&gt; has function literal type, not expression type.</source>
          <target state="translated">注意：尽管定义很简单，但是与函数文字有关的一些细微之处仍然存在。在语句中 &lt;code&gt;return (() =&amp;gt; x + f())() * g();&lt;/code&gt; ， &lt;code&gt;f()&lt;/code&gt; 的完整表达式是 &lt;code&gt;x + f()&lt;/code&gt; ，而不是传递给 &lt;code&gt;return&lt;/code&gt; 的表达式。这是因为 &lt;code&gt;x + f()&lt;/code&gt; 的父级具有函数文字类型，而不是表达式类型。</target>
        </trans-unit>
        <trans-unit id="8786381c9a210d5e82b40aa9d7e16a168f4d8ef9" translate="yes" xml:space="preserve">
          <source>Note: An intuition behind these rules is that destructors of temporaries are deferred to the end of full expression and in reverse order of construction, with the exception that the right-hand side of &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt; are considered their own full expressions even when part of larger expressions.</source>
          <target state="translated">注意：这些规则背后的直觉是，临时变量的析构函数被推迟到完整表达式的末尾并以相反的构造顺序进行，但 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 和 &lt;code&gt;||&lt;/code&gt; 的右侧 即使是较大表达式的一部分，也被认为是它们自己的完整表达式。</target>
        </trans-unit>
        <trans-unit id="aa74ddd8151c0e8c6ba91a90babe4e4a7f4d559e" translate="yes" xml:space="preserve">
          <source>Note: Hex Strings are &lt;b&gt;deprecated&lt;/b&gt;. Please use &lt;a href=&quot;https://dlang.org/phobos/std_conv.html#hexString&quot;&gt;&lt;code&gt;std.conv.hexString&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">注意：&lt;b&gt;不建议使用&lt;/b&gt;十六进制字符串。请改用&lt;a href=&quot;https://dlang.org/phobos/std_conv.html#hexString&quot;&gt; &lt;code&gt;std.conv.hexString&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ab44e664d0fb73e17b2d788f273100f8a9756fcb" translate="yes" xml:space="preserve">
          <source>Note: Rvalues include all literals, special value keywords such as &lt;code&gt;__FILE__&lt;/code&gt; and &lt;code&gt;__LINE__&lt;/code&gt;, &lt;code&gt;enum&lt;/code&gt; values, and the result of expressions not defined as lvalues above.</source>
          <target state="translated">注意：右值包括所有文字，特殊值关键字（例如 &lt;code&gt;__FILE__&lt;/code&gt; 和 &lt;code&gt;__LINE__&lt;/code&gt; )， &lt;code&gt;enum&lt;/code&gt; 值以及上面未定义为左值的表达式的结果。</target>
        </trans-unit>
        <trans-unit id="065a513243cfbfb6ba132105f812e5a75641d676" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;return&lt;/code&gt; attribute is currently only enforced by &lt;code&gt;dmd&lt;/code&gt; when the &lt;code&gt;-dip25&lt;/code&gt; switch is passed.</source>
          <target state="translated">注意： &lt;code&gt;return&lt;/code&gt; 属性当前仅在传递 &lt;code&gt;-dip25&lt;/code&gt; 开关时由 &lt;code&gt;dmd&lt;/code&gt; 强制执行。</target>
        </trans-unit>
        <trans-unit id="93747fb439b767f7416b2ece9f49c1ec18c64ad0" translate="yes" xml:space="preserve">
          <source>Note: The ternary expression</source>
          <target state="translated">注:三元表达式</target>
        </trans-unit>
        <trans-unit id="ee4e59bed66f02dc6f460df8e2185e7345a20b4e" translate="yes" xml:space="preserve">
          <source>Note: for 32 bit gcc, it's &lt;code&gt;long long&lt;/code&gt; instead of &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">注意：对于32位gcc，它是 &lt;code&gt;long long&lt;/code&gt; 而不是 &lt;code&gt;long&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="3f5230b128c9da8ca00898450d16b6f3d9dd7622" translate="yes" xml:space="preserve">
          <source>Notes to implementors</source>
          <target state="translated">给执行者的说明</target>
        </trans-unit>
        <trans-unit id="f7c7e2b89a99758727779c65c16d4c60e658ae08" translate="yes" xml:space="preserve">
          <source>Notes to users</source>
          <target state="translated">用户须知</target>
        </trans-unit>
        <trans-unit id="011fcd843da8c529c1fa3883c7f45aba859be2bf" translate="yes" xml:space="preserve">
          <source>Nothrow Functions</source>
          <target state="translated">空投功能</target>
        </trans-unit>
        <trans-unit id="bd69d0c378869da8300879aa2418a7369c07459a" translate="yes" xml:space="preserve">
          <source>Nothrow functions are covariant with throwing ones.</source>
          <target state="translated">无投函数与投函数是共通的。</target>
        </trans-unit>
        <trans-unit id="621c7bb048303809630a2eae2cfb3587611e1c2f" translate="yes" xml:space="preserve">
          <source>Nothrow functions can only throw exceptions derived from class</source>
          <target state="translated">Nothrow函数只能抛出源于类的异常。</target>
        </trans-unit>
        <trans-unit id="8a581796a24d10c48d25cf2bf5de6850099d5228" translate="yes" xml:space="preserve">
          <source>Notice that neither example accesses the line data returned by &lt;code&gt;front&lt;/code&gt; after the corresponding &lt;code&gt;popFront&lt;/code&gt; call is made (because the contents may well have changed).</source>
          <target state="translated">注意，在进行相应的 &lt;code&gt;popFront&lt;/code&gt; 调用之后，这两个示例都没有访问 &lt;code&gt;front&lt;/code&gt; 返回的行数据（因为内容可能已经更改）。</target>
        </trans-unit>
        <trans-unit id="dcd4250a12512a2c398c7fe01f5bc68a926da35d" translate="yes" xml:space="preserve">
          <source>Notice that several callbacks can be done for each call to &lt;code&gt;perform()&lt;/code&gt; due to redirections.</source>
          <target state="translated">请注意，由于重定向，可以为每个对 &lt;code&gt;perform()&lt;/code&gt; 的调用进行多个回调。</target>
        </trans-unit>
        <trans-unit id="7c222c11980679caccf67c7a85849f0e950edc28" translate="yes" xml:space="preserve">
          <source>Notifies all waiters.</source>
          <target state="translated">通知所有服务员。</target>
        </trans-unit>
        <trans-unit id="cbc750275e7d97cd8c120ef91be05291f0103743" translate="yes" xml:space="preserve">
          <source>Notifies one waiter.</source>
          <target state="translated">通知一名服务员。</target>
        </trans-unit>
        <trans-unit id="b94b032502f2f9d495a4f02e02f68111a39d131a" translate="yes" xml:space="preserve">
          <source>Novell IPX</source>
          <target state="translated">Novell IPX</target>
        </trans-unit>
        <trans-unit id="109085beaaa80ac89858b283a64f7c75d7e5bb12" translate="yes" xml:space="preserve">
          <source>Null</source>
          <target state="translated">Null</target>
        </trans-unit>
        <trans-unit id="447e3998fb0128904fe3329e53a4e7a27cefac16" translate="yes" xml:space="preserve">
          <source>Null values</source>
          <target state="translated">无效值</target>
        </trans-unit>
        <trans-unit id="dec14193294f19de7c47f5a56980f3295c70ec10" translate="yes" xml:space="preserve">
          <source>Null-terminated string representing parameters.</source>
          <target state="translated">代表参数的无尾字符串。</target>
        </trans-unit>
        <trans-unit id="1804c90829b7f01abfd49841af3caae85ad51299" translate="yes" xml:space="preserve">
          <source>Nullable</source>
          <target state="translated">Nullable</target>
        </trans-unit>
        <trans-unit id="8a24e40402207b8b70cc14eba1867548ac1b09e9" translate="yes" xml:space="preserve">
          <source>Num</source>
          <target state="translated">Num</target>
        </trans-unit>
        <trans-unit id="227a24a3e4141a9ac40b8fdf7fd5c2ffacf8d89f" translate="yes" xml:space="preserve">
          <source>Num &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">数字 &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d7588782f3d53157aff69b1bffa0181c62154c99" translate="yes" xml:space="preserve">
          <source>Num[] &lt;code&gt;proportions&lt;/code&gt;</source>
          <target state="translated">数字[] &lt;code&gt;proportions&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7baa1d40c4ea29afc9098732bffee2a861a6c44" translate="yes" xml:space="preserve">
          <source>Number</source>
          <target state="translated">Number</target>
        </trans-unit>
        <trans-unit id="dd451df143db1883131677d43c7f1a93144a6224" translate="yes" xml:space="preserve">
          <source>Number Forms</source>
          <target state="translated">数字表格</target>
        </trans-unit>
        <trans-unit id="eb0f5a21c19313cdefd12cf556538964ec1b60c1" translate="yes" xml:space="preserve">
          <source>Number Of Columns In A Result Set</source>
          <target state="translated">结果集中的列数</target>
        </trans-unit>
        <trans-unit id="29a85c89c3b665d61a62026778cb1a84d89e00ac" translate="yes" xml:space="preserve">
          <source>Number Of SQL Parameters</source>
          <target state="translated">SQL参数数量</target>
        </trans-unit>
        <trans-unit id="a22e9e0b736b63398e30b2dc8f5160ec0610321d" translate="yes" xml:space="preserve">
          <source>Number of &lt;a href=&quot;#Code%20point&quot;&gt;code points&lt;/a&gt; in this set</source>
          <target state="translated">此集中的&lt;a href=&quot;#Code%20point&quot;&gt;代码点数&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e026d4caea1fcabe0afc5bce1ec527601e891b24" translate="yes" xml:space="preserve">
          <source>Number of ArchiveMembers in the directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dced2e36ae14ec7a69ee28b0add25c818b2b4655" translate="yes" xml:space="preserve">
          <source>Number of additional microseconds.</source>
          <target state="translated">额外的微秒数。</target>
        </trans-unit>
        <trans-unit id="0d2fad8cfb1c2fbe8652c823ff48cfedc04bfb72" translate="yes" xml:space="preserve">
          <source>Number of bits in each size_t</source>
          <target state="translated">每个size_t中的位数</target>
        </trans-unit>
        <trans-unit id="a93803f4135c13b69cc5979ce910aec164759875" translate="yes" xml:space="preserve">
          <source>Number of bits in the &lt;code&gt;BitArray&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BitArray&lt;/code&gt; 中的位数。</target>
        </trans-unit>
        <trans-unit id="07597dee353e144af76fdefb2c5ac5332f4fcf87" translate="yes" xml:space="preserve">
          <source>Number of bits to be mapped from the source array, i.e. length of the created &lt;code&gt;BitArray&lt;/code&gt;.</source>
          <target state="translated">源数组中要映射的位数，即创建的 &lt;code&gt;BitArray&lt;/code&gt; 的长度。</target>
        </trans-unit>
        <trans-unit id="65c610ddbb8967f4ab1b1f258ae1d73dd7fc506f" translate="yes" xml:space="preserve">
          <source>Number of bytes read into the cache when a cache miss occurs.</source>
          <target state="translated">当发生缓存遗漏时,读入缓存的字节数。</target>
        </trans-unit>
        <trans-unit id="93e4ee2802912bc9542ff03c865140e0975aff48" translate="yes" xml:space="preserve">
          <source>Number of columns in a result set</source>
          <target state="translated">结果集中的列数</target>
        </trans-unit>
        <trans-unit id="bf960b6a4005bb2d8ceff632ab3a6e2d4f800bfc" translate="yes" xml:space="preserve">
          <source>Number of digits printed between separators.</source>
          <target state="translated">分隔符之间打印的数字数量。</target>
        </trans-unit>
        <trans-unit id="014bdfb1fc4a2ab03418a68a5de4668cdfda5a8c" translate="yes" xml:space="preserve">
          <source>Number of elements to increment on each iteration. Can't be &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">每次迭代要增加的元素数。不能为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3cc33728b84226726cec7ea6692b1f2ec781dcd" translate="yes" xml:space="preserve">
          <source>Number of entries in aConstraint</source>
          <target state="translated">aConstraint中的条目数</target>
        </trans-unit>
        <trans-unit id="ce0515ee85716ef2446a29c50ffe921e9b963466" translate="yes" xml:space="preserve">
          <source>Number of errors diagnosed</source>
          <target state="translated">诊断的错误数量</target>
        </trans-unit>
        <trans-unit id="e24daa30f457f98d16ad81a8cd1b686a780b57bc" translate="yes" xml:space="preserve">
          <source>Number of matches in this object.</source>
          <target state="translated">该对象的匹配数量。</target>
        </trans-unit>
        <trans-unit id="1dac03e71ace427dad9e6b7ffe2927de0a46070f" translate="yes" xml:space="preserve">
          <source>Number of modules passed the unittests</source>
          <target state="translated">通过单元测试的模块数量</target>
        </trans-unit>
        <trans-unit id="eede2a1147dee400c67d4557443a83e95e2ed490" translate="yes" xml:space="preserve">
          <source>Number of modules which were tested</source>
          <target state="translated">测试的模块数量</target>
        </trans-unit>
        <trans-unit id="7438e82b6c23c1a6a50ced05d87fbc419c638058" translate="yes" xml:space="preserve">
          <source>Number of pattern matched counting, where 1 - the first pattern. Returns 0 on no match.</source>
          <target state="translated">匹配的模式数,其中1-第一个模式。没有匹配时返回0。</target>
        </trans-unit>
        <trans-unit id="922cca92f6321c3aaf3d76ca4f48884a73b7acfb" translate="yes" xml:space="preserve">
          <source>Number of ports to try, including the first one set with LOCALPORT. Thus, setting it to 1 will make no additional attempts but the first.</source>
          <target state="translated">要尝试的端口数量,包括用 LOCALPORT 设置的第一个端口。因此,将其设为1,除了第一次尝试外,不会再进行其他尝试。</target>
        </trans-unit>
        <trans-unit id="d04f19934163f0381d14164007519a392b8483aa" translate="yes" xml:space="preserve">
          <source>Number of seconds between when successive keep-alive packets are sent if no acknowledgement is received.</source>
          <target state="translated">如果没有收到确认,连续发送保持有效数据包的间隔秒数。</target>
        </trans-unit>
        <trans-unit id="0bc72a7cc11fac0901c32b98ed01a772c919d228" translate="yes" xml:space="preserve">
          <source>Number of seconds with no activity until the first keep-alive packet is sent.</source>
          <target state="translated">在发送第一个keep-alive数据包之前,没有活动的秒数。</target>
        </trans-unit>
        <trans-unit id="8dbf01ad892fef3cbce4edb89d69f81c5f0de924" translate="yes" xml:space="preserve">
          <source>Number of seconds.</source>
          <target state="translated">秒数。</target>
        </trans-unit>
        <trans-unit id="c214b9bdd41903556e087fe149c81c976a0f4498" translate="yes" xml:space="preserve">
          <source>Number of significant &lt;code&gt;uint&lt;/code&gt;s which are used in storing this number. The absolute value of this &lt;code&gt;BigInt&lt;/code&gt; is always &amp;lt; 2&lt;sup&gt;32*uintLength&lt;/sup&gt;</source>
          <target state="translated">存储此数字时使用的有效 &lt;code&gt;uint&lt;/code&gt; 数。此 &lt;code&gt;BigInt&lt;/code&gt; 的绝对值始终为&amp;lt;2 &lt;sup&gt;32 * uintLength&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="4bdce26619426ae548a19f521bd66b45e9ee23da" translate="yes" xml:space="preserve">
          <source>Number of significant &lt;code&gt;ulong&lt;/code&gt;s which are used in storing this number. The absolute value of this &lt;code&gt;BigInt&lt;/code&gt; is always &amp;lt; 2&lt;sup&gt;64*ulongLength&lt;/sup&gt;</source>
          <target state="translated">用于存储此数字的有效 &lt;code&gt;ulong&lt;/code&gt; 数。此 &lt;code&gt;BigInt&lt;/code&gt; 的绝对值始终为&amp;lt;2 &lt;sup&gt;64 * ulongLength&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="64b3ecb75c4dfda2a446b2f4f3b2871ac03979f3" translate="yes" xml:space="preserve">
          <source>Number of terms in the ORDER BY clause</source>
          <target state="translated">ORDER BY条款中的术语数量</target>
        </trans-unit>
        <trans-unit id="ef9279ba4d5abd3b54baf0ba9c7ff343e2d5a039" translate="yes" xml:space="preserve">
          <source>Number of the disk, where the central directory starts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad086bd903ef281a8b19c4693c7769037ca0462e" translate="yes" xml:space="preserve">
          <source>Number of this disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5888fcbbf39aff14a132b0aa33a185d58c5a3831" translate="yes" xml:space="preserve">
          <source>Number of warnings diagnosed</source>
          <target state="translated">诊断的警告数量</target>
        </trans-unit>
        <trans-unit id="561f30d62b1a6200b9732c30482b0463610d0115" translate="yes" xml:space="preserve">
          <source>Number of ways of associativity, eg:</source>
          <target state="translated">联想方式的数量,例如。</target>
        </trans-unit>
        <trans-unit id="cd3b1b068542b26d45d6b3ef969ff75d18222dc4" translate="yes" xml:space="preserve">
          <source>Number used to identify the index</source>
          <target state="translated">用于识别指数的数字</target>
        </trans-unit>
        <trans-unit id="c25ed4b26440772f57732268d4988021acc7b988" translate="yes" xml:space="preserve">
          <source>Numbering of both row and col start at one and corresponds to the location in the file rather than any specified header. Special consideration should be made when there is failure to match the header see &lt;a href=&quot;#%20HeaderMismatchException&quot;&gt;&lt;code&gt; HeaderMismatchException&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">row和col的编号均从1开始，并且对应于文件中的位置，而不是任何指定的标头。如果无法匹配标头，则应特别注意，有关详细信息，请参见&lt;a href=&quot;#%20HeaderMismatchException&quot;&gt; &lt;code&gt; HeaderMismatchException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="043b9f0681a8dd4b8f64327c866f7055557d443c" translate="yes" xml:space="preserve">
          <source>Numbers in back references are encoded with base 26 by upper case letters &lt;b&gt;A&lt;/b&gt; - &lt;b&gt;Z&lt;/b&gt; for higher digits but lower case letters &lt;b&gt;a&lt;/b&gt; - &lt;b&gt;z&lt;/b&gt; for the last digit.</source>
          <target state="translated">反向引用中的数字以26为基数编码，大写字母&lt;b&gt;A&lt;/b&gt; - &lt;b&gt;Z&lt;/b&gt;用于高位数字，小写字母&lt;b&gt;a&lt;/b&gt; - &lt;b&gt;z&lt;/b&gt;用于最后一位数字。</target>
        </trans-unit>
        <trans-unit id="30a62380404b3b267a5c4e21b5e111455d09031e" translate="yes" xml:space="preserve">
          <source>Numeric</source>
          <target state="translated">Numeric</target>
        </trans-unit>
        <trans-unit id="7fcd839a0c3a9bfde44006032939e1a31c5868bc" translate="yes" xml:space="preserve">
          <source>Numeric options.</source>
          <target state="translated">数字选项。</target>
        </trans-unit>
        <trans-unit id="270e362a8583599d25044ab02934c1f0544031a5" translate="yes" xml:space="preserve">
          <source>O(n) Exactly &lt;code&gt;n - 1&lt;/code&gt; comparisons are needed.</source>
          <target state="translated">O（n）确实需要 &lt;code&gt;n - 1&lt;/code&gt; 比较。</target>
        </trans-unit>
        <trans-unit id="8ebce3c4279d1345740690ecbe2cb5d8468c3d5b" translate="yes" xml:space="preserve">
          <source>ODBC API Reference on MSN Online</source>
          <target state="translated">MSN在线的ODBC API参考</target>
        </trans-unit>
        <trans-unit id="8b5eff42232707634349636f92675ea68779d3cd" translate="yes" xml:space="preserve">
          <source>OEM</source>
          <target state="translated">OEM</target>
        </trans-unit>
        <trans-unit id="557b1e3dfa4d6c186eed45510ad708c5febe6794" translate="yes" xml:space="preserve">
          <source>OOP API</source>
          <target state="translated">OOP API</target>
        </trans-unit>
        <trans-unit id="6921936df35e74323acb623a59db8353c959e5ec" translate="yes" xml:space="preserve">
          <source>OOP API CRC32 implementation. See &lt;code&gt;std.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="translated">OOP API CRC32实现。有关模板和OOP API之间的差异，请参见 &lt;code&gt;std.digest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ecc5ce592d40207f7cf51c58cc165c87d26dfe71" translate="yes" xml:space="preserve">
          <source>OOP API CRC64-ECMA implementation. See &lt;code&gt;std.digest.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="translated">OOP API CRC64-ECMA实现。有关模板和OOP API之间的差异，请参见 &lt;code&gt;std.digest.digest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c20805b5dfcc262ae7041b841371e4419085a84" translate="yes" xml:space="preserve">
          <source>OOP API CRC64-ECMA implementation. See &lt;code&gt;std.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f12b177dd99fc261f8c72b1e0213b2e6e7b80d50" translate="yes" xml:space="preserve">
          <source>OOP API CRC64-ISO implementation. See &lt;code&gt;std.digest.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="translated">OOP API CRC64-ISO实现。有关模板和OOP API之间的差异，请参见 &lt;code&gt;std.digest.digest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f91bc29ac78b7bc87fccaec2d6b32d49dd2ac1ca" translate="yes" xml:space="preserve">
          <source>OOP API CRC64-ISO implementation. See &lt;code&gt;std.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4435eff46cba37f8974382bdc1da051288640e06" translate="yes" xml:space="preserve">
          <source>OOP API MD5 implementation. See &lt;code&gt;std.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="translated">OOP API MD5实现。有关模板和OOP API之间的差异，请参见 &lt;code&gt;std.digest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f868a309d4075e7e6d29d7ba2d8755b13e54f79b" translate="yes" xml:space="preserve">
          <source>OOP API RIPEMD160 implementation. See &lt;code&gt;std.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="translated">OOP API RIPEMD160实现。有关模板和OOP API之间的差异，请参见 &lt;code&gt;std.digest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7dfbc3d2d3fbec054ee506d60faed523760f1e0" translate="yes" xml:space="preserve">
          <source>OOP API SHA1 and SHA2 implementations. See &lt;code&gt;std.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="translated">OOP API SHA1和SHA2实现。有关模板和OOP API之间的差异，请参见 &lt;code&gt;std.digest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df7ef594df8b60ce4c07238616bdf42e033977bc" translate="yes" xml:space="preserve">
          <source>OPER &lt;code&gt;op&lt;/code&gt;</source>
          <target state="translated">OPER &lt;code&gt;op&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6259a657ea98cbfae3336dd19e405644a8e8c23e" translate="yes" xml:space="preserve">
          <source>OR CSX bits to &lt;code&gt;this&lt;/code&gt;</source>
          <target state="translated">或CSX位与 &lt;code&gt;this&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ea1a5ba1dffba576fe0a188bb466f1a65ef5c2d" translate="yes" xml:space="preserve">
          <source>OS Interface File Virtual Methods Object</source>
          <target state="translated">操作系统接口文件虚拟方法对象</target>
        </trans-unit>
        <trans-unit id="2fdd9f0dd04e20b2da0185c9864ac62e0fd49b33" translate="yes" xml:space="preserve">
          <source>OS Interface Object</source>
          <target state="translated">操作系统接口对象</target>
        </trans-unit>
        <trans-unit id="e502b880ac4721322e02bb29b5215f15ab6c97e9" translate="yes" xml:space="preserve">
          <source>OS Interface Open File Handle</source>
          <target state="translated">操作系统界面打开文件手柄</target>
        </trans-unit>
        <trans-unit id="1c57744725eab7d96ac80db864a93aca09030a50" translate="yes" xml:space="preserve">
          <source>OS Specific Code</source>
          <target state="translated">操作系统专用代码</target>
        </trans-unit>
        <trans-unit id="9954b5cb646af3e1d62f8936ee802e399e164efe" translate="yes" xml:space="preserve">
          <source>OS X</source>
          <target state="translated">OS X</target>
        </trans-unit>
        <trans-unit id="816f2c01635dcd191ef472eb81837ab4764ba659" translate="yes" xml:space="preserve">
          <source>OS error code.</source>
          <target state="translated">操作系统错误代码。</target>
        </trans-unit>
        <trans-unit id="c5964b15914a0f20d38705c40412632aaea2180a" translate="yes" xml:space="preserve">
          <source>OS/host/cpu/machine when configured</source>
          <target state="translated">配置后的操作系统/主机/CPU/机器</target>
        </trans-unit>
        <trans-unit id="35acf96a362a15aaca94167666a925df3fe080f1" translate="yes" xml:space="preserve">
          <source>ObjcClassDeclaration &lt;strong id=&quot;objc&quot;&gt;objc&lt;/strong&gt;;</source>
          <target state="translated">ObjcClassDeclaration &lt;strong id=&quot;objc&quot;&gt;objc&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5e48ba2904324f04728f2234033c5d7007795ec3" translate="yes" xml:space="preserve">
          <source>ObjcSelector* &lt;strong id=&quot;selector&quot;&gt;selector&lt;/strong&gt;;</source>
          <target state="translated">ObjcSelector * &lt;strong id=&quot;selector&quot;&gt;选择器&lt;/strong&gt;；</target>
        </trans-unit>
        <trans-unit id="a124d6d00ec7f85d42323b621f494c2cd12184cc" translate="yes" xml:space="preserve">
          <source>Object &lt;code&gt;switchObject&lt;/code&gt;</source>
          <target state="translated">对象 &lt;code&gt;switchObject&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ece8bdfc268974984201b8d682070a5edffce7a2" translate="yes" xml:space="preserve">
          <source>Object &lt;strong id=&quot;_d_newclass&quot;&gt;_d_newclass&lt;/strong&gt;(const ClassInfo ci);</source>
          <target state="translated">对象&lt;strong id=&quot;_d_newclass&quot;&gt;_d_newclass&lt;/strong&gt;（const ClassInfo ci）;</target>
        </trans-unit>
        <trans-unit id="ddc38e05a9ed06d0994faa2bc5bcaf09ff87a879" translate="yes" xml:space="preserve">
          <source>Object &lt;strong id=&quot;_d_toObject&quot;&gt;_d_toObject&lt;/strong&gt;(void* p);</source>
          <target state="translated">对象&lt;strong id=&quot;_d_toObject&quot;&gt;_d_toObject&lt;/strong&gt;（void * p）;</target>
        </trans-unit>
        <trans-unit id="9acd850a30238a54eae733b2ef6db2b68124fe1e" translate="yes" xml:space="preserve">
          <source>Object Model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732daf7f402fda71346fc5973740764129bee2f3" translate="yes" xml:space="preserve">
          <source>Object Pinning and a Moving Garbage Collector</source>
          <target state="translated">对象定位和移动式垃圾收集器</target>
        </trans-unit>
        <trans-unit id="3ecabb74a2c93b43f3577af0a26092db2efdcfb6" translate="yes" xml:space="preserve">
          <source>Object completely outside of query region</source>
          <target state="translated">对象完全不在查询区域内</target>
        </trans-unit>
        <trans-unit id="6cf94223be079da3fbcb13c64cfc6ed135fdad80" translate="yes" xml:space="preserve">
          <source>Object fully contained within query region</source>
          <target state="translated">对象完全包含在查询区域内</target>
        </trans-unit>
        <trans-unit id="cb01dc2819651d214c0a4eb512d158aeef9a6b70" translate="yes" xml:space="preserve">
          <source>Object partially overlaps query region</source>
          <target state="translated">对象与查询区域部分重叠</target>
        </trans-unit>
        <trans-unit id="0ded44e81d1421792f7fc6112d1cfca42b60744c" translate="yes" xml:space="preserve">
          <source>Object representing the entire archive. ZipArchives are collections of ArchiveMembers.</source>
          <target state="translated">代表整个档案的对象。ZipArchives 是 ArchiveMembers 的集合。</target>
        </trans-unit>
        <trans-unit id="ecae80279dd422f8944cb69fbb2f5b597c9f19cc" translate="yes" xml:space="preserve">
          <source>Object to string conversion calls &lt;code&gt;toString&lt;/code&gt; against the object or returns &lt;code&gt;&quot;null&quot;&lt;/code&gt; if the object is null.</source>
          <target state="translated">对象到字符串的转换对对象调用 &lt;code&gt;toString&lt;/code&gt; ，如果对象为null，则返回 &lt;code&gt;&quot;null&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="034dc42255fa6bafb6326377d2645e95c07ee389" translate="yes" xml:space="preserve">
          <source>Object to throw</source>
          <target state="translated">扔的对象</target>
        </trans-unit>
        <trans-unit id="b72ead77472cd34b4701daf055c4eb79c6a81e4a" translate="yes" xml:space="preserve">
          <source>Object which contains &lt;a href=&quot;std_stdio#File&quot;&gt;&lt;code&gt;std.stdio.File&lt;/code&gt;&lt;/a&gt; handles that allow communication with a child process through its standard streams.</source>
          <target state="translated">包含&lt;a href=&quot;std_stdio#File&quot;&gt; &lt;code&gt;std.stdio.File&lt;/code&gt; &lt;/a&gt;句柄的对象，该句柄允许通过其标准流与子进程进行通信。</target>
        </trans-unit>
        <trans-unit id="a5f374a039e07f85b267c41c18b5e4564272df79" translate="yes" xml:space="preserve">
          <source>Object-to-object conversions by dynamic casting throw exception when the source is non-null and the target is null.</source>
          <target state="translated">当源是非空而目标为空时,通过动态铸造进行对象到对象的转换会抛出异常。</target>
        </trans-unit>
        <trans-unit id="99e277264a83dccb794e12be27e133211daf2991" translate="yes" xml:space="preserve">
          <source>Objective-C Linkage</source>
          <target state="translated">Objective-C链接</target>
        </trans-unit>
        <trans-unit id="b0459b002183c075496ce13224dd6546ac66c7e6" translate="yes" xml:space="preserve">
          <source>Objective-C class reference expression.</source>
          <target state="translated">Objective-C类引用表达式。</target>
        </trans-unit>
        <trans-unit id="54d74c41d0f52e19ffb24eaa1df21cfde1c3609d" translate="yes" xml:space="preserve">
          <source>Objective-C implicit selector parameter</source>
          <target state="translated">Objective-C隐式选择器参数</target>
        </trans-unit>
        <trans-unit id="ce5a6ea19029f9f5f4b5ed2b2ccb10ccf00b46e5" translate="yes" xml:space="preserve">
          <source>Objective-C linkage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215e38e2c0c8e6165a5d19476eb05da7a2d96f1b" translate="yes" xml:space="preserve">
          <source>Objective-C linkage is achieved by attaching the &lt;code&gt;extern (Objective-C)&lt;/code&gt; attribute to a class. Example:</source>
          <target state="translated">通过将 &lt;code&gt;extern (Objective-C)&lt;/code&gt; 属性附加到类来实现Objective-C链接。例：</target>
        </trans-unit>
        <trans-unit id="d0b17723f1650f620f6ed1dc84f453d083a59561" translate="yes" xml:space="preserve">
          <source>Objective-C method selector (member function only)</source>
          <target state="translated">Objective-C方法选择器(仅限成员函数)</target>
        </trans-unit>
        <trans-unit id="72a83add2c5ede877c10d23f302d3e17accbadab" translate="yes" xml:space="preserve">
          <source>Objects</source>
          <target state="translated">Objects</target>
        </trans-unit>
        <trans-unit id="774388ab695ea7f6fa92eda419b8a4a91ec37650" translate="yes" xml:space="preserve">
          <source>Objects can be composed into a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9e450214fb7eb03791dd522d5ab5d9060d4e6c" translate="yes" xml:space="preserve">
          <source>Objects of types &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;wstring&lt;/code&gt;, and &lt;code&gt;dstring&lt;/code&gt; are value types and cannot be mutated element-by-element. For using mutation during building strings, use &lt;code&gt;char[]&lt;/code&gt;, &lt;code&gt;wchar[]&lt;/code&gt;, or &lt;code&gt;dchar[]&lt;/code&gt;. The &lt;code&gt;xxxstring&lt;/code&gt; types are preferable because they don't exhibit undesired aliasing, thus making code more robust.</source>
          <target state="translated">类型 &lt;code&gt;string&lt;/code&gt; ， &lt;code&gt;wstring&lt;/code&gt; 和 &lt;code&gt;dstring&lt;/code&gt; 的对象是值类型，不能逐个元素进行突变。要在构建字符串期间使用变异，请使用 &lt;code&gt;char[]&lt;/code&gt; ， &lt;code&gt;wchar[]&lt;/code&gt; 或 &lt;code&gt;dchar[]&lt;/code&gt; 。的 &lt;code&gt;xxxstring&lt;/code&gt; 类型是优选的，因为它们不具有不期望的混叠，从而使代码更健壮。</target>
        </trans-unit>
        <trans-unit id="26fcfe297b1b850d8b9dff28561f4b9b1ce56f00" translate="yes" xml:space="preserve">
          <source>Objects referenced from the data segment never get collected by the gc.</source>
          <target state="translated">数据段引用的对象永远不会被gc收集。</target>
        </trans-unit>
        <trans-unit id="6a4f0f9bbfc4a160ef93e1d60e94318e4b881b61" translate="yes" xml:space="preserve">
          <source>Objects* &lt;code&gt;tiargs&lt;/code&gt;</source>
          <target state="translated">对象* &lt;code&gt;tiargs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ecc00047669613c320e2b8a081aa7c82aa8f91c6" translate="yes" xml:space="preserve">
          <source>Objects* &lt;strong id=&quot;opToArg&quot;&gt;opToArg&lt;/strong&gt;(Scope* sc, TOK op);</source>
          <target state="translated">Objects * &lt;strong id=&quot;opToArg&quot;&gt;opToArg&lt;/strong&gt;（Scope * sc，TOK op）;</target>
        </trans-unit>
        <trans-unit id="1cd772265dd23d3a0ed79c300af6b5bbcbce033e" translate="yes" xml:space="preserve">
          <source>Observer pattern</source>
          <target state="translated">观察员模式</target>
        </trans-unit>
        <trans-unit id="f036e380a093cadb7b7384e4b591b8c75c1ba145" translate="yes" xml:space="preserve">
          <source>Obtain Aggregate Function Context</source>
          <target state="translated">获取聚合函数上下文</target>
        </trans-unit>
        <trans-unit id="077c26082590279e5f39ea62e9c34ff3f445683c" translate="yes" xml:space="preserve">
          <source>Obtain a textual representation of this InversionList in form of open-right intervals.</source>
          <target state="translated">获得该反转列表的文字表示,以开右区间的形式。</target>
        </trans-unit>
        <trans-unit id="9955193cbfed75c0d6fc873fae9a5c26061d84dc" translate="yes" xml:space="preserve">
          <source>Obtaining SQL Function Parameter Values</source>
          <target state="translated">获取SQL函数参数值</target>
        </trans-unit>
        <trans-unit id="6149db4fff5ac75f11f401b9918f00840c3dba03" translate="yes" xml:space="preserve">
          <source>Obtains a set that is the inversion of this set.</source>
          <target state="translated">获得一个是这个集合的反转集。</target>
        </trans-unit>
        <trans-unit id="bc3e5f94349cc9f5746dcb1e65b92691d9d6aed1" translate="yes" xml:space="preserve">
          <source>Obtains a subclass of EncodingScheme which is capable of encoding and decoding the named encoding scheme.</source>
          <target state="translated">获取EncodingScheme的子类,它能够对指定的编码方案进行编码和解码。</target>
        </trans-unit>
        <trans-unit id="ba7c16645de19d70bbf51df86b8b25f634669237" translate="yes" xml:space="preserve">
          <source>Obtains the next value from the underlying function.</source>
          <target state="translated">从基础函数中获取下一个值。</target>
        </trans-unit>
        <trans-unit id="10500e54805775e3d661be35724e87f0b1dbc4c9" translate="yes" xml:space="preserve">
          <source>Octal</source>
          <target state="translated">Octal</target>
        </trans-unit>
        <trans-unit id="0daf1c539c30bf40547a057c7075740c9c50e77c" translate="yes" xml:space="preserve">
          <source>Odd numbers, using function in string form:</source>
          <target state="translated">奇数,使用字符串形式的函数。</target>
        </trans-unit>
        <trans-unit id="1a245d243a2742055ac1b3dfb70948e781eb208b" translate="yes" xml:space="preserve">
          <source>Of course the tuple types can be used to declare things:</source>
          <target state="translated">当然元组类型可以用来声明一些东西。</target>
        </trans-unit>
        <trans-unit id="62fa90ec5148fa0e0f3ac3986984deff76df1822" translate="yes" xml:space="preserve">
          <source>Of course, the real value of UDAs is to be able to create user-defined types with specific values. Having attribute values of basic types does not scale. The attribute tuples can be manipulated like any other tuple, and can be passed as the argument list to a template.</source>
          <target state="translated">当然,UDA的真正价值在于能够创建具有特定值的用户定义类型。拥有基本类型的属性值并不能扩展。属性元组可以像其他元组一样被操作,并且可以作为参数列表传递给模板。</target>
        </trans-unit>
        <trans-unit id="11fc1982f3e473014c90d340826a6dd1a575af7b" translate="yes" xml:space="preserve">
          <source>Of course, transformations that would alter side effects are also invalid.</source>
          <target state="translated">当然,会改变副作用的转化也是无效的。</target>
        </trans-unit>
        <trans-unit id="a25b627c05fa6788c3c361e7833cb2ca525e070c" translate="yes" xml:space="preserve">
          <source>Offers all of allocator's memory to the caller, so it's usually defined by fixed-size allocators. If the allocator is currently NOT managing any memory, then &lt;code&gt;allocateAll()&lt;/code&gt; shall allocate and return all memory available to the allocator, and subsequent calls to all allocation primitives should not succeed (e.g. &lt;code&gt;allocate&lt;/code&gt; shall return &lt;code&gt;null&lt;/code&gt; etc). Otherwise, &lt;code&gt;allocateAll&lt;/code&gt; only works on a best-effort basis, and the allocator is allowed to return &lt;code&gt;null&lt;/code&gt; even if does have available memory. Memory allocated with &lt;code&gt;allocateAll&lt;/code&gt; is not otherwise special (e.g. can be reallocated or deallocated with the usual primitives, if defined).</source>
          <target state="translated">将所有分配器的内存提供给调用方，因此通常由固定大小的分配器定义。如果分配器当前不管理任何内存，则 &lt;code&gt;allocateAll()&lt;/code&gt; 将分配并返回分配器可用的所有内存，并且随后对所有分配原语的调用均不应成功（例如， &lt;code&gt;allocate&lt;/code&gt; 应返回 &lt;code&gt;null&lt;/code&gt; 等）。否则， &lt;code&gt;allocateAll&lt;/code&gt; 仅在尽力而为的基础上工作，并且即使有可用内存，分配器也可以返回 &lt;code&gt;null&lt;/code&gt; 。否则，使用 &lt;code&gt;allocateAll&lt;/code&gt; 分配的内存并不特殊（例如，可以使用常规原语重新分配或释放）（如果已定义）。</target>
        </trans-unit>
        <trans-unit id="b8e254b5857bb996007e86e42f91a92a6fe49956" translate="yes" xml:space="preserve">
          <source>Offset &lt;code&gt;offset&lt;/code&gt;</source>
          <target state="translated">偏移 &lt;code&gt;offset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8e8c6ead4fb6cb7f2c973d4188b3da2d45612843" translate="yes" xml:space="preserve">
          <source>Offset from symbol</source>
          <target state="translated">符号偏移量</target>
        </trans-unit>
        <trans-unit id="5244f072c2bc40432333ca8bae11450eb7f1cd34" translate="yes" xml:space="preserve">
          <source>Offset in bytes of field from beginning of struct</source>
          <target state="translated">字段的偏移量,以字节为单位,从结构的开头开始</target>
        </trans-unit>
        <trans-unit id="8e33b5cfe09a13b536b5161336efb8ad6830ec37" translate="yes" xml:space="preserve">
          <source>Offset is relative to the beginning</source>
          <target state="translated">偏移量是相对于开头</target>
        </trans-unit>
        <trans-unit id="99bd2ecc0f5280a8901a4ed0e050abb97a414e2f" translate="yes" xml:space="preserve">
          <source>Offset is relative to the current position</source>
          <target state="translated">偏移量是相对于当前位置的</target>
        </trans-unit>
        <trans-unit id="c47d1f5c9f6a5ff920bded63466f4748ace14da1" translate="yes" xml:space="preserve">
          <source>Offset is relative to the end</source>
          <target state="translated">偏移量是相对于末端的</target>
        </trans-unit>
        <trans-unit id="b485855fd43092cb4450e8db11b22aad8322f41e" translate="yes" xml:space="preserve">
          <source>Offset of member from start of object</source>
          <target state="translated">成员从对象开始的偏移量</target>
        </trans-unit>
        <trans-unit id="c21c3314a2e6470603bd3c8f84047cb484b50ba5" translate="yes" xml:space="preserve">
          <source>Ogham</source>
          <target state="translated">Ogham</target>
        </trans-unit>
        <trans-unit id="93a70c2b646c1ffdd73eb435b17f35f88e31d121" translate="yes" xml:space="preserve">
          <source>Ok for sqlite3_open_v2()</source>
          <target state="translated">sqlite3_open_v2()可以。</target>
        </trans-unit>
        <trans-unit id="c6e702e40cc2159bb79f5ccec78973bfdae19eaa" translate="yes" xml:space="preserve">
          <source>Ol Chiki</source>
          <target state="translated">Ol Chiki</target>
        </trans-unit>
        <trans-unit id="5f8e3c9a997d8c6ac6d8e0cee37f365cfccbf2c1" translate="yes" xml:space="preserve">
          <source>Ol_Chiki</source>
          <target state="translated">Ol_Chiki</target>
        </trans-unit>
        <trans-unit id="833ad68a2db2dced5d16ece61a3b16b08ed22e87" translate="yes" xml:space="preserve">
          <source>Old API for replacement, operation depends on flags of pattern &lt;code&gt;re&lt;/code&gt;. With &quot;g&quot; flag it performs the equivalent of &lt;a href=&quot;#replaceAll&quot;&gt;&lt;code&gt;replaceAll&lt;/code&gt;&lt;/a&gt; otherwise it works the same as &lt;a href=&quot;#replaceFirst&quot;&gt;&lt;code&gt;replaceFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用于替换的旧API，操作取决于模式 &lt;code&gt;re&lt;/code&gt; 的标志。使用&amp;ldquo; g&amp;rdquo;标志，它等效于&lt;a href=&quot;#replaceAll&quot;&gt; &lt;code&gt;replaceAll&lt;/code&gt; ,&lt;/a&gt;否则与&lt;a href=&quot;#replaceFirst&quot;&gt; &lt;code&gt;replaceFirst&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="02359709d1a195a0128ca35b8d6f25fc1d92a7a7" translate="yes" xml:space="preserve">
          <source>Old Italic</source>
          <target state="translated">旧斜体</target>
        </trans-unit>
        <trans-unit id="f3e69230d34ad29f5b4402e08ffd22711717b552" translate="yes" xml:space="preserve">
          <source>Old Persian</source>
          <target state="translated">古波斯</target>
        </trans-unit>
        <trans-unit id="7261101e4dfe036338fab16980dc651a26f87786" translate="yes" xml:space="preserve">
          <source>Old South Arabian</source>
          <target state="translated">古南阿拉伯</target>
        </trans-unit>
        <trans-unit id="7e504d6f4cf5594ab525495944059dd3ab354803" translate="yes" xml:space="preserve">
          <source>Old Turkic</source>
          <target state="translated">古突厥语</target>
        </trans-unit>
        <trans-unit id="6affc5b51d0bdbad1e9ae41385b26f980a6f3eb2" translate="yes" xml:space="preserve">
          <source>Old code can be reused with new code without having to modify the old code to be compatible with new error types.</source>
          <target state="translated">旧代码可以与新代码重用,而不必修改旧代码以兼容新的错误类型。</target>
        </trans-unit>
        <trans-unit id="1e3a00bb450715730bc19d8deeddada5bc22e8d7" translate="yes" xml:space="preserve">
          <source>Old code can decide to catch all errors, or only specific ones, propagating the rest upwards. In any case, there is no more need to correlate error numbers with messages, the correct message is always supplied.</source>
          <target state="translated">旧代码可以决定捕捉所有的错误,或者只捕捉特定的错误,将其余的错误向上传播。在任何情况下,不再需要将错误数字与信息相关联,总是提供正确的信息。</target>
        </trans-unit>
        <trans-unit id="d31721795f21dfce26688a7f8239a17ca4259705" translate="yes" xml:space="preserve">
          <source>Old_Italic</source>
          <target state="translated">Old_Italic</target>
        </trans-unit>
        <trans-unit id="40f6b23336b20230fad65810979b94941509719d" translate="yes" xml:space="preserve">
          <source>Old_Persian</source>
          <target state="translated">Old_Persian</target>
        </trans-unit>
        <trans-unit id="338432c6b8828a6dc79884aa878e0a2867c42479" translate="yes" xml:space="preserve">
          <source>Old_South_Arabian</source>
          <target state="translated">Old_South_Arabian</target>
        </trans-unit>
        <trans-unit id="3641abb7a588932eef54e644e9d1dff8f948abbf" translate="yes" xml:space="preserve">
          <source>Old_Turkic</source>
          <target state="translated">Old_Turkic</target>
        </trans-unit>
        <trans-unit id="80b8a312a311fc13e2451870de177f83f79912eb" translate="yes" xml:space="preserve">
          <source>On ARM FPU registers are not saved if druntime was compiled as ARM_SoftFloat. If such a build is used on a ARM_SoftFP system which actually has got a FPU and other libraries are using the FPU registers (other code is compiled as ARM_SoftFP) this can cause problems. Druntime must be compiled as ARM_SoftFP in this case.</source>
          <target state="translated">在ARM FPU上,如果druntime被编译为ARM_SoftFloat,则不会保存寄存器。如果这样的编译被用在实际上已经有FPU的ARM_SoftFP系统上,并且其他库正在使用FPU寄存器(其他代码被编译为ARM_SoftFP),这可能会导致问题。在这种情况下,Druntime必须被编译为ARM_SoftFP。</target>
        </trans-unit>
        <trans-unit id="b5359584dd1684a0f13decf91973ad69920c046f" translate="yes" xml:space="preserve">
          <source>On POSIX systems &lt;code&gt;deallocate&lt;/code&gt; calls &lt;code&gt;mmap&lt;/code&gt; with `MAP_FIXED' a second time to decommit the memory. On Windows, it uses &lt;code&gt;VirtualFree&lt;/code&gt; with &lt;code&gt;MEM_DECOMMIT&lt;/code&gt;.</source>
          <target state="translated">在POSIX系统上，第二次使用&amp;ldquo; MAP_FIXED&amp;rdquo;来 &lt;code&gt;deallocate&lt;/code&gt; 对 &lt;code&gt;mmap&lt;/code&gt; 的调用，以解除对内存的使用。在Windows上，它将 &lt;code&gt;VirtualFree&lt;/code&gt; 与 &lt;code&gt;MEM_DECOMMIT&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="45fb7652410851794dc34497cbae11bc3aca67e9" translate="yes" xml:space="preserve">
          <source>On POSIX systems, if &lt;code&gt;attrIsFile&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, that indicates that the file is a regular file (e.g. not a block not device). So, on POSIX systems, it's possible for both &lt;code&gt;attrIsFile&lt;/code&gt; and &lt;code&gt;attrIsDir&lt;/code&gt; to be &lt;code&gt;false&lt;/code&gt; for a particular file (in which case, it's a special file). If a file is a special file, you can use the attributes to check what type of special file it is (see the man page for &lt;code&gt;stat&lt;/code&gt; for more information).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c583b8e40f105624ba78af74e0222ec9e4140f48" translate="yes" xml:space="preserve">
          <source>On POSIX systems, if &lt;code&gt;isFile&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, that indicates that the file is a regular file (e.g. not a block not device). So, on POSIX systems, it's possible for both &lt;code&gt;isFile&lt;/code&gt; and &lt;code&gt;isDir&lt;/code&gt; to be &lt;code&gt;false&lt;/code&gt; for a particular file (in which case, it's a special file). You can use &lt;code&gt;attributes&lt;/code&gt; or &lt;code&gt;statBuf&lt;/code&gt; to get more information about a special file (see the stat man page for more details).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4127c0b93826b8086ea6e5620a6ea6c4c3237ed" translate="yes" xml:space="preserve">
          <source>On POSIX systems, if &lt;code&gt;isFile&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, that indicates that the file is a regular file (e.g. not a block not device). So, on POSIX systems, it's possible for both &lt;code&gt;isFile&lt;/code&gt; and &lt;code&gt;isDir&lt;/code&gt; to be &lt;code&gt;false&lt;/code&gt; for a particular file (in which case, it's a special file). You can use &lt;code&gt;getAttributes&lt;/code&gt; to get the attributes to figure out what type of special it is, or you can use &lt;code&gt;DirEntry&lt;/code&gt; to get at its &lt;code&gt;statBuf&lt;/code&gt;, which is the result from &lt;code&gt;stat&lt;/code&gt;. In either case, see the man page for &lt;code&gt;stat&lt;/code&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0133a132ea7a309a8c48c2dd69a00cf667df59" translate="yes" xml:space="preserve">
          <source>On POSIX systems, if the file represented by this &lt;code&gt;DirEntry&lt;/code&gt; is a symbolic link, then &lt;code&gt;linkAttributes&lt;/code&gt; are the attributes of the symbolic link itself. Otherwise, &lt;code&gt;linkAttributes&lt;/code&gt; is identical to &lt;code&gt;attributes&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f04c1fe2d705f49514bbb88260e20282faf8fb7d" translate="yes" xml:space="preserve">
          <source>On POSIX systems, if the file represented by this &lt;code&gt;DirEntry&lt;/code&gt; is a symbolic link, then attributes are the attributes of the file pointed to by the symbolic link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e31315830b04ae65da3fad10a7a5040e90772b" translate="yes" xml:space="preserve">
          <source>On POSIX systems, if the given file is a symbolic link, then attributes are the attributes of the file pointed to by the symbolic link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11fb04b0e94adc4b37deadc7deec14c85b8112c4" translate="yes" xml:space="preserve">
          <source>On POSIX systems, the signals SIGUSR1 and SIGUSR2 are reserved by this module for use in the garbage collector implementation. Typically, they will be used to stop and resume other threads when performing a collection, but an implementation may choose not to use this mechanism (or not stop the world at all, in the case of concurrent garbage collectors).</source>
          <target state="translated">在POSIX系统上,信号SIGUSR1和SIGUSR2被该模块保留给垃圾收集器实现使用。通常情况下,它们将用于在执行收集时停止和恢复其他线程,但一个实现可以选择不使用这种机制(或者在并发垃圾收集器的情况下,根本不停止世界)。</target>
        </trans-unit>
        <trans-unit id="634f31050bfb94bec5bce1f9c660501b7d894e03" translate="yes" xml:space="preserve">
          <source>On POSIX, &lt;code&gt;filename&lt;/code&gt; may not contain a forward slash (&lt;code&gt;'/'&lt;/code&gt;) or the null character (&lt;code&gt;'\0'&lt;/code&gt;).</source>
          <target state="translated">在POSIX上， &lt;code&gt;filename&lt;/code&gt; 不能包含正斜杠（ &lt;code&gt;'/'&lt;/code&gt; ）或空字符（ &lt;code&gt;'\0'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d0e0b90e35d552ed53d8451ae83171f83caea058" translate="yes" xml:space="preserve">
          <source>On POSIX, &lt;code&gt;userShell&lt;/code&gt; returns the contents of the SHELL environment variable, if it exists and is non-empty. Otherwise, it returns the result of &lt;a href=&quot;#nativeShell&quot;&gt;&lt;code&gt;nativeShell&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在POSIX上， &lt;code&gt;userShell&lt;/code&gt; 返回SHELL环境变量的内容（如果存在）并且为非空。否则，它返回&lt;a href=&quot;#nativeShell&quot;&gt; &lt;code&gt;nativeShell&lt;/code&gt; &lt;/a&gt;的结果。</target>
        </trans-unit>
        <trans-unit id="4a3691fb3a429f6f16c74dbb648019d4ea541a0d" translate="yes" xml:space="preserve">
          <source>On POSIX, an absolute path starts at the root directory. (In fact, &lt;code&gt;_isAbsolute&lt;/code&gt; is just an alias for &lt;a href=&quot;#isRooted&quot;&gt;&lt;code&gt;isRooted&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">在POSIX上，绝对路径从根目录开始。（事实上， &lt;code&gt;_isAbsolute&lt;/code&gt; 只是一个别名&lt;a href=&quot;#isRooted&quot;&gt; &lt;code&gt;isRooted&lt;/code&gt; &lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="9328600ddd5da0c6e6153313212760496891e5c2" translate="yes" xml:space="preserve">
          <source>On POSIX, open &lt;a href=&quot;http://en.wikipedia.org/wiki/File_descriptor&quot;&gt;file descriptors&lt;/a&gt; are by default inherited by the child process. As this may lead to subtle bugs when pipes or multiple threads are involved, &lt;a href=&quot;#spawnProcess&quot;&gt;&lt;code&gt;spawnProcess&lt;/code&gt;&lt;/a&gt; ensures that all file descriptors except the ones that correspond to standard input/output/error are closed in the child process when it starts. Use &lt;code&gt;inheritFDs&lt;/code&gt; to prevent this.</source>
          <target state="translated">在POSIX上，默认情况下，打开&lt;a href=&quot;http://en.wikipedia.org/wiki/File_descriptor&quot;&gt;文件描述符&lt;/a&gt;由子进程继承。因为当涉及管道或多个线程时，这可能导致细微的错误，&lt;a href=&quot;#spawnProcess&quot;&gt; &lt;code&gt;spawnProcess&lt;/code&gt; &lt;/a&gt;确保在子进程启动时关闭所有文件描述符（与标准输入/输出/错误相对应的文件描述符除外）。使用 &lt;code&gt;inheritFDs&lt;/code&gt; 可以防止这种情况。</target>
        </trans-unit>
        <trans-unit id="b54b1b6297751d78c6140482c90352354099820f" translate="yes" xml:space="preserve">
          <source>On Posix systems, if &lt;code&gt;attrIsFile&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, that indicates that the file is a regular file (e.g. not a block not device). So, on Posix systems, it's possible for both &lt;code&gt;attrIsFile&lt;/code&gt; and &lt;code&gt;attrIsDir&lt;/code&gt; to be &lt;code&gt;false&lt;/code&gt; for a particular file (in which case, it's a special file). If a file is a special file, you can use the attributes to check what type of special file it is (see the man page for &lt;code&gt;stat&lt;/code&gt; for more information).</source>
          <target state="translated">在Posix系统上，如果 &lt;code&gt;attrIsFile&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，则表示该文件是常规文件（例如，不是块而不是设备）。因此，在POSIX系统中，有可能两个 &lt;code&gt;attrIsFile&lt;/code&gt; 和 &lt;code&gt;attrIsDir&lt;/code&gt; 是 &lt;code&gt;false&lt;/code&gt; 特定文件（在这种情况下，这是一个特殊的文件）。如果文件是特殊文件，则可以使用属性检查特殊文件的类型（有关详细信息，请参见手册页以获取 &lt;code&gt;stat&lt;/code&gt; 信息）。</target>
        </trans-unit>
        <trans-unit id="a2aa8805027298573b997badd9027bbd45a19fdf" translate="yes" xml:space="preserve">
          <source>On Posix systems, if &lt;code&gt;isFile&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, that indicates that the file is a regular file (e.g. not a block not device). So, on Posix systems, it's possible for both &lt;code&gt;isFile&lt;/code&gt; and &lt;code&gt;isDir&lt;/code&gt; to be &lt;code&gt;false&lt;/code&gt; for a particular file (in which case, it's a special file). You can use &lt;code&gt;attributes&lt;/code&gt; or &lt;code&gt;statBuf&lt;/code&gt; to get more information about a special file (see the stat man page for more details).</source>
          <target state="translated">在Posix系统上，如果 &lt;code&gt;isFile&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，则表示该文件是常规文件（例如，不是块而不是设备）。因此，在POSIX系统中，有可能两个 &lt;code&gt;isFile&lt;/code&gt; 和 &lt;code&gt;isDir&lt;/code&gt; 是 &lt;code&gt;false&lt;/code&gt; 特定文件（在这种情况下，这是一个特殊的文件）。您可以使用 &lt;code&gt;attributes&lt;/code&gt; 或 &lt;code&gt;statBuf&lt;/code&gt; 来获取有关特殊文件的更多信息（有关更多详细信息，请参见stat手册页）。</target>
        </trans-unit>
        <trans-unit id="7fd705ae13245d54c6aa5a4b39418f4284c68396" translate="yes" xml:space="preserve">
          <source>On Posix systems, if &lt;code&gt;isFile&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, that indicates that the file is a regular file (e.g. not a block not device). So, on Posix systems, it's possible for both &lt;code&gt;isFile&lt;/code&gt; and &lt;code&gt;isDir&lt;/code&gt; to be &lt;code&gt;false&lt;/code&gt; for a particular file (in which case, it's a special file). You can use &lt;code&gt;getAttributes&lt;/code&gt; to get the attributes to figure out what type of special it is, or you can use &lt;code&gt;DirEntry&lt;/code&gt; to get at its &lt;code&gt;statBuf&lt;/code&gt;, which is the result from &lt;code&gt;stat&lt;/code&gt;. In either case, see the man page for &lt;code&gt;stat&lt;/code&gt; for more information.</source>
          <target state="translated">在Posix系统上，如果 &lt;code&gt;isFile&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，则表示该文件是常规文件（例如，不是块而不是设备）。因此，在POSIX系统中，有可能两个 &lt;code&gt;isFile&lt;/code&gt; 和 &lt;code&gt;isDir&lt;/code&gt; 是 &lt;code&gt;false&lt;/code&gt; 特定文件（在这种情况下，这是一个特殊的文件）。您可以使用 &lt;code&gt;getAttributes&lt;/code&gt; 来获取属性以找出特殊类型，也可以使用 &lt;code&gt;DirEntry&lt;/code&gt; 来获取其 &lt;code&gt;statBuf&lt;/code&gt; ，这是 &lt;code&gt;stat&lt;/code&gt; 的结果。无论哪种情况，请参见手册页以获得有关更多信息的 &lt;code&gt;stat&lt;/code&gt; 信息。</target>
        </trans-unit>
        <trans-unit id="b683a2ff2d5b15178674a689248bb8e41c5208aa" translate="yes" xml:space="preserve">
          <source>On Posix systems, if the file represented by this &lt;code&gt;DirEntry&lt;/code&gt; is a symbolic link, then &lt;code&gt;linkAttributes&lt;/code&gt; are the attributes of the symbolic link itself. Otherwise, &lt;code&gt;linkAttributes&lt;/code&gt; is identical to &lt;code&gt;attributes&lt;/code&gt;.</source>
          <target state="translated">在Posix系统上，如果此 &lt;code&gt;DirEntry&lt;/code&gt; 表示的文件是符号链接，则 &lt;code&gt;linkAttributes&lt;/code&gt; 是符号链接本身的属性。否则， &lt;code&gt;linkAttributes&lt;/code&gt; 等同于 &lt;code&gt;attributes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffa58299e8f3542f3a6b4fc5fadc8c5816787d74" translate="yes" xml:space="preserve">
          <source>On Posix systems, if the file represented by this &lt;code&gt;DirEntry&lt;/code&gt; is a symbolic link, then attributes are the attributes of the file pointed to by the symbolic link.</source>
          <target state="translated">在Posix系统上，如果此 &lt;code&gt;DirEntry&lt;/code&gt; 表示的文件是符号链接，则属性是符号链接指向的文件的属性。</target>
        </trans-unit>
        <trans-unit id="ecc95bd9a69a6a3b0487f7891f64eaab98150bdc" translate="yes" xml:space="preserve">
          <source>On Posix systems, if the given file is a symbolic link, then attributes are the attributes of the file pointed to by the symbolic link.</source>
          <target state="translated">在Posix系统中,如果给定的文件是一个符号链接,那么属性就是该符号链接所指向的文件的属性。</target>
        </trans-unit>
        <trans-unit id="636f726f7fefb1663dba5a570f41553d8ae54c00" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code&gt;QueryPerformanceCounter&lt;/code&gt; is used. On Mac OS X, &lt;code&gt;mach_absolute_time&lt;/code&gt; is used, while on other POSIX systems, &lt;code&gt;clock_gettime&lt;/code&gt; is used.</source>
          <target state="translated">在Windows上，使用 &lt;code&gt;QueryPerformanceCounter&lt;/code&gt; 。在Mac OS X上，使用 &lt;code&gt;mach_absolute_time&lt;/code&gt; ，而在其他POSIX系统上，使用 &lt;code&gt;clock_gettime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d2300d27b62da0d46cd201ca4d3f5410d7109c6" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code&gt;QueryPerformanceCounter&lt;/code&gt; is used. On Mac OS X, &lt;code&gt;mach_absolute_time&lt;/code&gt; is used, while on other Posix systems, &lt;code&gt;clock_gettime&lt;/code&gt; is used. If &lt;code&gt;mach_absolute_time&lt;/code&gt; or &lt;code&gt;clock_gettime&lt;/code&gt; is unavailable, then Posix systems use &lt;code&gt;gettimeofday&lt;/code&gt; (the decision is made when &lt;code&gt;TickDuration&lt;/code&gt; is compiled), which unfortunately, is not monotonic, but if &lt;code&gt;mach_absolute_time&lt;/code&gt; and &lt;code&gt;clock_gettime&lt;/code&gt; aren't available, then &lt;code&gt;gettimeofday&lt;/code&gt; is the the best that there is.</source>
          <target state="translated">在Windows上，使用 &lt;code&gt;QueryPerformanceCounter&lt;/code&gt; 。在Mac OS X上，使用 &lt;code&gt;mach_absolute_time&lt;/code&gt; ，而在其他Posix系统上，使用 &lt;code&gt;clock_gettime&lt;/code&gt; 。如果 &lt;code&gt;mach_absolute_time&lt;/code&gt; 或 &lt;code&gt;clock_gettime&lt;/code&gt; 不可用，则Posix系统将使用 &lt;code&gt;gettimeofday&lt;/code&gt; （编译 &lt;code&gt;TickDuration&lt;/code&gt; 时会做出决定），不幸的是，它不是单调的，但是如果 &lt;code&gt;mach_absolute_time&lt;/code&gt; 和 &lt;code&gt;clock_gettime&lt;/code&gt; 不可用，则 &lt;code&gt;gettimeofday&lt;/code&gt; 是最好的。</target>
        </trans-unit>
        <trans-unit id="b48a1d53fa4c43afbbe7a02df0466a054d761a29" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code&gt;linkAttributes&lt;/code&gt; is identical to &lt;code&gt;attributes&lt;/code&gt;. It exists on Windows so that you don't have to special-case code for Windows when dealing with symbolic links.</source>
          <target state="translated">在Windows上， &lt;code&gt;linkAttributes&lt;/code&gt; 与 &lt;code&gt;attributes&lt;/code&gt; 相同。它存在于Windows中，因此在处理符号链接时，您不必为Windows设置特殊情况的代码。</target>
        </trans-unit>
        <trans-unit id="351080dce35982b0252c23f3a69184cf9d5c3306" translate="yes" xml:space="preserve">
          <source>On Windows, an absolute path starts at the root directory of a specific drive. Hence, it must start with &lt;code&gt;d:\&lt;/code&gt; or &lt;code&gt;d:/&lt;/code&gt;, where &lt;code&gt;d&lt;/code&gt; is the drive letter. Alternatively, it may be a network path, i.e. a path starting with a double (back)slash.</source>
          <target state="translated">在Windows上，绝对路径从特定驱动器的根目录开始。因此，它必须以 &lt;code&gt;d:\&lt;/code&gt; 或 &lt;code&gt;d:/&lt;/code&gt; 开头，其中 &lt;code&gt;d&lt;/code&gt; 是驱动器号。替代地，它可以是网络路径，即以双（反）斜杠开头的路径。</target>
        </trans-unit>
        <trans-unit id="ef889b88d5f8d9f110b38f728621564638f95148" translate="yes" xml:space="preserve">
          <source>On Windows, getLinkAttributes is identical to getAttributes. It exists on Windows so that you don't have to special-case code for Windows when dealing with symbolic links.</source>
          <target state="translated">在Windows上,getLinkAttributes和getAttributes是一样的。它存在于Windows上,所以当你处理符号链接时,你不必为Windows编写特殊大小写的代码。</target>
        </trans-unit>
        <trans-unit id="83d56815cf3e0a92c059f5d90df1eac05f0a2d5a" translate="yes" xml:space="preserve">
          <source>On Windows, if a file is not a directory, it's a file. So, either &lt;code&gt;attrIsFile&lt;/code&gt; or &lt;code&gt;attrIsDir&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; for the attributes of any given file.</source>
          <target state="translated">在Windows上，如果文件不是目录，则为文件。因此，对于任何给定文件的属性， &lt;code&gt;attrIsFile&lt;/code&gt; 或 &lt;code&gt;attrIsDir&lt;/code&gt; 都将返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1aab655e5665ce1bcef7e3ab64bb515a54733705" translate="yes" xml:space="preserve">
          <source>On Windows, if a file is not a directory, then it's a file. So, either &lt;code&gt;isFile&lt;/code&gt; or &lt;code&gt;isDir&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">在Windows上，如果文件不是目录，则为文件。因此， &lt;code&gt;isFile&lt;/code&gt; 或 &lt;code&gt;isDir&lt;/code&gt; 将返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ea0db99b4ebaafbafa1c6111ac04353baf182a15" translate="yes" xml:space="preserve">
          <source>On Windows, if a file is not a directory, then it's a file. So, either &lt;code&gt;isFile&lt;/code&gt; or &lt;code&gt;isDir&lt;/code&gt; will return true for any given file.</source>
          <target state="translated">在Windows上，如果文件不是目录，则为文件。因此， &lt;code&gt;isFile&lt;/code&gt; 或 &lt;code&gt;isDir&lt;/code&gt; 对于任何给定的文件都将返回true。</target>
        </trans-unit>
        <trans-unit id="fa47af1c2c285a0bc4fbd19f4b9ef76dfda0eeac" translate="yes" xml:space="preserve">
          <source>On Windows, if one of the path segments are rooted, but not absolute (e.g. &lt;code&gt;\foo&lt;/code&gt;), all preceding path segments down to the previous root will be dropped. (See below for an example.)</source>
          <target state="translated">在Windows上，如果其中一个路径段已建立根目录，但不是绝对路径（例如 &lt;code&gt;\foo&lt;/code&gt; ），则所有先前的路径段（直至下一个根目录）都将被删除。（请参见下面的示例。）</target>
        </trans-unit>
        <trans-unit id="04bdf7dfecb2b33004ea9f8e5d6767d50c5920f7" translate="yes" xml:space="preserve">
          <source>On Windows, if the child process is a console application, this flag will prevent the creation of a console window. Otherwise, it will be ignored. On POSIX, &lt;code&gt;suppressConsole&lt;/code&gt; has no effect.</source>
          <target state="translated">在Windows上，如果子进程是控制台应用程序，则此标志将阻止创建控制台窗口。否则，它将被忽略。在POSIX上， &lt;code&gt;suppressConsole&lt;/code&gt; 无效。</target>
        </trans-unit>
        <trans-unit id="aad4687f823a3f85d5221f0d0f2539e9f2c12f2e" translate="yes" xml:space="preserve">
          <source>On Windows, return &lt;code&gt;true&lt;/code&gt; when the file is either a symbolic link or a junction point.</source>
          <target state="translated">在Windows上，当文件是符号链接或连接点时，返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b3d24f7c6deac05d17ed8c47b6c79d39c04c3ba" translate="yes" xml:space="preserve">
          <source>On Windows, returns &lt;code&gt;true&lt;/code&gt; when the file is either a symbolic link or a junction point.</source>
          <target state="translated">在Windows上，当文件是符号链接或结点时，返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f9d78f59bff80dcbd1041e4971f0971b9fc3cd58" translate="yes" xml:space="preserve">
          <source>On Windows, some special rules apply:</source>
          <target state="translated">在Windows上,一些特殊的规则适用。</target>
        </trans-unit>
        <trans-unit id="433c117c547e883a7bdf6c423ef1bcfb810068f6" translate="yes" xml:space="preserve">
          <source>On Windows, the backslash and slash characters (&lt;code&gt;\&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt;) are considered equal.</source>
          <target state="translated">在Windows上，反斜杠和斜杠字符（ &lt;code&gt;\&lt;/code&gt; 和 &lt;code&gt;/&lt;/code&gt; ）被视为相等。</target>
        </trans-unit>
        <trans-unit id="4a88c798e54629c5adeb41273aa766dfd9577b5b" translate="yes" xml:space="preserve">
          <source>On Windows, the following criteria must be satisfied (&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa365247(v=vs.85).aspx&quot;&gt;source&lt;/a&gt;):</source>
          <target state="translated">在Windows上，必须满足以下条件（&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa365247(v=vs.85).aspx&quot;&gt;源&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="f9779d7c68a633ae64f68af4b0e5a5c47a042da7" translate="yes" xml:space="preserve">
          <source>On Windows, this function returns the contents of the COMSPEC environment variable, if it exists. Otherwise, it returns the result of &lt;a href=&quot;#nativeShell&quot;&gt;&lt;code&gt;nativeShell&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在Windows上，此函数返回COMSPEC环境变量的内容（如果存在）。否则，它返回&lt;a href=&quot;#nativeShell&quot;&gt; &lt;code&gt;nativeShell&lt;/code&gt; &lt;/a&gt;的结果。</target>
        </trans-unit>
        <trans-unit id="79eb2a6d7769617f87ca1be1841f02158f05836a" translate="yes" xml:space="preserve">
          <source>On Windows, this function returns the result of calling the Windows API function &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/aa364992.aspx&quot;&gt;&lt;code&gt;GetTempPath&lt;/code&gt;&lt;/a&gt;.  On POSIX platforms, it searches through the following list of directories and returns the first one which is found to exist:</source>
          <target state="translated">在Windows上，此函数返回调用Windows API函数&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/aa364992.aspx&quot;&gt; &lt;code&gt;GetTempPath&lt;/code&gt; 的结果&lt;/a&gt;。在POSIX平台上，它将搜索以下目录列表，并返回发现存在的第一个目录：</target>
        </trans-unit>
        <trans-unit id="fc8accd97298f49fccac8e9aa1187ff12d77a0a0" translate="yes" xml:space="preserve">
          <source>On Windows, this includes both &lt;code&gt;\&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt;. On POSIX, it's just &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">在Windows上，这包括 &lt;code&gt;\&lt;/code&gt; 和 &lt;code&gt;/&lt;/code&gt; 。在POSIX上，它只是 &lt;code&gt;/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="275ea90ff2dff3a9dead6ab2157264ecd02c6a5b" translate="yes" xml:space="preserve">
          <source>On Windows, this option has no effect, and any handles which have been explicitly marked as inheritable will always be inherited by the child process.</source>
          <target state="translated">在Windows上,这个选项没有任何效果,任何被明确标记为可继承的句柄将始终由子进程继承。</target>
        </trans-unit>
        <trans-unit id="e85c0978a77279c90b22ae8dd33a1d55444d1a0f" translate="yes" xml:space="preserve">
          <source>On all platforms, &lt;code&gt;tempDir&lt;/code&gt; returns &lt;code&gt;&quot;.&quot;&lt;/code&gt; on failure, representing the current working directory.</source>
          <target state="translated">在所有平台上， &lt;code&gt;tempDir&lt;/code&gt; 返回 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 如果失败，则表示当前工作目录。</target>
        </trans-unit>
        <trans-unit id="8adc4328682a5c7505adf3df0ba7bb17ee427f01" translate="yes" xml:space="preserve">
          <source>On function literals, return type may be modified based on the context type after its semantic3 is done, in FuncExp::implicitCastTo.</source>
          <target state="translated">在函数字面上,在FuncExp::implicitCastTo中,在其语义3完成后,可以根据上下文类型修改返回类型。</target>
        </trans-unit>
        <trans-unit id="a2267eb64b3a3d0bdb354c3d04c12d89c9a317c3" translate="yes" xml:space="preserve">
          <source>On many computers, greater precision operations do not take any longer than lesser precision operations, so it makes numerical sense to use the greatest precision available for internal temporaries. The philosophy is not to dumb down the language to the lowest common hardware denominator, but to enable the exploitation of the best capabilities of target hardware.</source>
          <target state="translated">在许多计算机上,较大精度的操作并不比较小精度的操作花费更多时间,因此,对内部的时间器使用现有的最大精度在数值上是合理的。其理念不是将语言简化到最低的通用硬件分母,而是使目标硬件的最佳能力得到利用。</target>
        </trans-unit>
        <trans-unit id="53a5882afe52725f67a0137bd88f746ad80234d9" translate="yes" xml:space="preserve">
          <source>On many platforms, catching C++ class objects is supported. Catching C++ objects and D objects cannot both be done in the same</source>
          <target state="translated">在很多平台上,都支持抓取C++类对象。捕捉C++对象和D对象不能同时在同一个</target>
        </trans-unit>
        <trans-unit id="b9cd670388212aa6ebdb79e448445941831f1d67" translate="yes" xml:space="preserve">
          <source>On single-core machines, the primitives provided by &lt;code&gt;TaskPool&lt;/code&gt; operate transparently in single-threaded mode.</source>
          <target state="translated">在单核计算机上， &lt;code&gt;TaskPool&lt;/code&gt; 提供的原语在单线程模式下透明地运行。</target>
        </trans-unit>
        <trans-unit id="65eeec28a4ec73def9ce753282e4a733d2b218e6" translate="yes" xml:space="preserve">
          <source>On some platforms, modifying environment variables may not be allowed in multi-threaded programs. See e.g. &lt;a href=&quot;https://www.gnu.org/software/libc/manual/html_node/Environment-Access.html#Environment-Access&quot;&gt;glibc&lt;/a&gt;.</source>
          <target state="translated">在某些平台上，多线程程序中可能不允许修改环境变量。参见例如&lt;a href=&quot;https://www.gnu.org/software/libc/manual/html_node/Environment-Access.html#Environment-Access&quot;&gt;glibc&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2579191de4bc3eb8840f26a4ccade11d869046e5" translate="yes" xml:space="preserve">
          <source>On success returns the composed LV or LVT hangul syllable.</source>
          <target state="translated">成功后返回组成的LV或LVT hangul音节。</target>
        </trans-unit>
        <trans-unit id="1e477d55ecee9b240368d12b85daa6ac9107cc3f" translate="yes" xml:space="preserve">
          <source>On success, the function returns the number of variables filled. This count can match the expected number of readings or fewer, even zero, if a matching failure happens.</source>
          <target state="translated">成功后,函数返回填充的变量数。如果发生匹配失败,这个计数可以与预期的读数相匹配,或者更少,甚至为零。</target>
        </trans-unit>
        <trans-unit id="9423c42e5e2d607971a466fc971dcc3d4c06beee" translate="yes" xml:space="preserve">
          <source>On systems which do not support a coarser clock, &lt;code&gt;MonoTimeImpl!(ClockType.coarse)&lt;/code&gt; will internally use the same clock as &lt;code&gt;Monotime&lt;/code&gt; does, and &lt;code&gt;Clock.currTime!(ClockType.coarse)&lt;/code&gt; will use the same clock as &lt;code&gt;Clock.currTime&lt;/code&gt;. This is because the coarse clock is doing the same thing as the normal clock (just at lower precision), whereas some of the other clock types (e.g. &lt;code&gt;ClockType.processCPUTime&lt;/code&gt;) mean something fundamentally different. So, treating those as &lt;code&gt;ClockType.normal&lt;/code&gt; on systems where they weren't natively supported would give misleading results.</source>
          <target state="translated">在不支持粗糙的时钟，系统 &lt;code&gt;MonoTimeImpl!(ClockType.coarse)&lt;/code&gt; 将在内部使用相同的时钟作为 &lt;code&gt;Monotime&lt;/code&gt; 确实，和 &lt;code&gt;Clock.currTime!(ClockType.coarse)&lt;/code&gt; 将使用相同的时钟作为 &lt;code&gt;Clock.currTime&lt;/code&gt; 。这是因为粗略时钟的行为与正常时钟相同（只是精度较低），而其他一些时钟类型（例如 &lt;code&gt;ClockType.processCPUTime&lt;/code&gt; ）则表示根本不同。因此，在本机不支持它们的系统 &lt;code&gt;ClockType.normal&lt;/code&gt; 它们视为ClockType.normal会产生误导的结果。</target>
        </trans-unit>
        <trans-unit id="5b968233be4d9a26515726f1fa55ef5fc7adc2c1" translate="yes" xml:space="preserve">
          <source>On the other hand, disabling the bounds check in &lt;code&gt;@safe&lt;/code&gt; code will break the guaranteed memory safety by compiler. It's not recommended unless motivated by speed measurements.</source>
          <target state="translated">另一方面，禁用 &lt;code&gt;@safe&lt;/code&gt; 代码中的边界检查将破坏编译器保证的内存安全性。除非出于速度测量的动机，否则不建议这样做。</target>
        </trans-unit>
        <trans-unit id="5686721515d33ea6d5f3f835d28e7583ce16b2b0" translate="yes" xml:space="preserve">
          <source>OnCrowding &lt;code&gt;doThis&lt;/code&gt;</source>
          <target state="translated">OnCrowding &lt;code&gt;doThis&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="136de9961eb08dceeff5dec3d02243e1d4794113" translate="yes" xml:space="preserve">
          <source>Once &lt;a href=&quot;#wait&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt; has been called on the &lt;a href=&quot;#Pid&quot;&gt;&lt;code&gt;Pid&lt;/code&gt;&lt;/a&gt;, this method will return an invalid handle.</source>
          <target state="translated">一旦在&lt;a href=&quot;#Pid&quot;&gt; &lt;code&gt;Pid&lt;/code&gt; &lt;/a&gt;上调用了&lt;a href=&quot;#wait&quot;&gt; &lt;code&gt;wait&lt;/code&gt; &lt;/a&gt;，此方法将返回无效的句柄。</target>
        </trans-unit>
        <trans-unit id="1cdbbf32331fe81da47f44a31f5d3b1a122a8e37" translate="yes" xml:space="preserve">
          <source>Once S has been determined, then &lt;code&gt;S s = e;&lt;/code&gt; and &lt;code&gt;s = f(s, e);&lt;/code&gt; must both be legal.</source>
          <target state="translated">一旦确定了 &lt;code&gt;S s = e;&lt;/code&gt; ，则S s = e; 和 &lt;code&gt;s = f(s, e);&lt;/code&gt; 必须都合法。</target>
        </trans-unit>
        <trans-unit id="fce1b7cfb7dff703df3fdeab9bc79a1b2ae11a43" translate="yes" xml:space="preserve">
          <source>Once instantiated, the declarations inside the template, called the template members, are in the scope of the</source>
          <target state="translated">实例化后,模板内部的声明,称为模板成员,是在</target>
        </trans-unit>
        <trans-unit id="f63c93929ae7b3005633933b34e6827b3a5df78e" translate="yes" xml:space="preserve">
          <source>Once slice are used everywhere and &lt;code&gt;\0&lt;/code&gt; is not assumed, this can be turned into a simple slicing.</source>
          <target state="translated">一旦在任何地方都使用了切片并且不假定 &lt;code&gt;\0&lt;/code&gt; ，就可以将其转换为简单的切片。</target>
        </trans-unit>
        <trans-unit id="177b7637cfdda24d637e80021941e40011fc4e80" translate="yes" xml:space="preserve">
          <source>Once the chunk is exhausted, the Kernighan-Ritchie allocator allocates another chunk using operating system primitives. For better composability, &lt;code&gt;KRRegion&lt;/code&gt; just gets full (returns &lt;code&gt;null&lt;/code&gt; on new allocation requests). The decision to allocate more blocks is deferred to a higher-level entity. For an example, see the example below using &lt;code&gt;AllocatorList&lt;/code&gt; in conjunction with &lt;code&gt;KRRegion&lt;/code&gt;.</source>
          <target state="translated">一旦块用完，Kernighan-Ritchie分配器就会使用操作系统原语分配另一个块。为了获得更好的可组合性， &lt;code&gt;KRRegion&lt;/code&gt; 会变满（在新分配请求中返回 &lt;code&gt;null&lt;/code&gt; ）。分配更多块的决定将推迟到更高级别的实体。有关示例，请参见下面的示例，将 &lt;code&gt;AllocatorList&lt;/code&gt; 与 &lt;code&gt;KRRegion&lt;/code&gt; 结合使用。</target>
        </trans-unit>
        <trans-unit id="f58a3a2810943bb8e1377bf6e7c64c4eacbf25ce" translate="yes" xml:space="preserve">
          <source>Once the delegate constructor returns, all fields are considered constructed.</source>
          <target state="translated">一旦委托构造函数返回,所有的字段都被认为是构造的。</target>
        </trans-unit>
        <trans-unit id="91e823edbcc801d13e817ea3fe4b7d952fa31c95" translate="yes" xml:space="preserve">
          <source>Once the delegating constructor returns, all fields are considered constructed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b11a10ea8965ed2cfd66ad0ada41f8d84d4d8538" translate="yes" xml:space="preserve">
          <source>Once the region cannot serve an &lt;code&gt;allocate&lt;/code&gt; request, &lt;code&gt;KRRegion&lt;/code&gt; switches to &quot;free list&quot; mode. It sorts the list of previously deallocated blocks by address and serves allocation requests off that free list. The allocation and deallocation follow the pattern described by Kernighan and Ritchie.</source>
          <target state="translated">一旦区域无法满足 &lt;code&gt;allocate&lt;/code&gt; 请求， &lt;code&gt;KRRegion&lt;/code&gt; 就会切换到&amp;ldquo;空闲列表&amp;rdquo;模式。它按地址对先前释放的块列表进行排序，并根据该空闲列表处理分配请求。分配和解除分配遵循Kernighan和Ritchie描述的模式。</target>
        </trans-unit>
        <trans-unit id="ca3be77a39a2b5fa5cbfec1787bdf7c9ae146013" translate="yes" xml:space="preserve">
          <source>One allocation pattern used in multithreaded applications is to share memory across threads, and to deallocate blocks in a different thread than the one that allocated it.</source>
          <target state="translated">多线程应用程序中使用的一种分配模式是跨线程共享内存,并在与分配内存的线程不同的线程中重新分配块。</target>
        </trans-unit>
        <trans-unit id="e48630c4869fa52074205f4f0540ce50688f767d" translate="yes" xml:space="preserve">
          <source>One can also generate the</source>
          <target state="translated">还可以生成</target>
        </trans-unit>
        <trans-unit id="a2aff6d254edcd8887f3a6f1cc2a273d785eb489" translate="yes" xml:space="preserve">
          <source>One can also hash ubyte data piecewise by instanciating a hasher and call the 'put' method.</source>
          <target state="translated">我们也可以通过实例化哈希并调用'put'方法对ubyte数据进行分片哈希。</target>
        </trans-unit>
        <trans-unit id="f741df140a81582ebc9d066ceb30b9c0a1abe1d0" translate="yes" xml:space="preserve">
          <source>One can avoid using pointers anyway for most tasks. D provides features rendering most explicit pointer uses obsolete, such as reference objects, dynamic arrays, and garbage collection. Pointers are provided in order to interface successfully with C APIs and for some low level work.</source>
          <target state="translated">在大多数任务中,人们可以避免使用指针。D提供的功能使大多数明确的指针使用变得过时,比如引用对象、动态数组和垃圾回收。提供指针的目的是为了与C APIs成功接口,以及一些低级工作。</target>
        </trans-unit>
        <trans-unit id="90d544a3f6a256ab611c54b6c404983ee546b81c" translate="yes" xml:space="preserve">
          <source>One can thus generate the even permutations of a range with unique elements by starting with the lexicographically smallest permutation, and repeatedly calling nextEvenPermutation until it returns false.</source>
          <target state="translated">因此,我们可以从词法上最小的permutation开始,重复调用nextEvenPermutation,直到返回false,从而生成一个具有唯一元素的范围的偶数排列。</target>
        </trans-unit>
        <trans-unit id="534eda1fa053a01173b27dcb3d6cc652086074b9" translate="yes" xml:space="preserve">
          <source>One important consequence of &lt;code&gt;destroy&lt;/code&gt; is that it will call the destructor of the &lt;code&gt;T&lt;/code&gt; payload. GC-managed references are not guaranteed to be valid during a destructor call, but other members of &lt;code&gt;T&lt;/code&gt;, such as file handles or pointers to &lt;code&gt;malloc&lt;/code&gt; memory, will still be valid during the destructor call. This allows the &lt;code&gt;T&lt;/code&gt; to deallocate or clean up any non-GC resources immediately after the reference count has reached zero.</source>
          <target state="translated">&lt;code&gt;destroy&lt;/code&gt; 一个重要后果是它将调用 &lt;code&gt;T&lt;/code&gt; 有效载荷的析构函数。 GC管理的引用不能保证在析构函数调用期间有效，但是 &lt;code&gt;T&lt;/code&gt; 的其他成员（例如文件句柄或指向 &lt;code&gt;malloc&lt;/code&gt; 内存的指针）在析构函数调用期间仍然有效。这使 &lt;code&gt;T&lt;/code&gt; 在引用计数达到零后立即释放或清除所有非GC资源。</target>
        </trans-unit>
        <trans-unit id="d289613b2b905b9b8c968b576d93e4b8155280ac" translate="yes" xml:space="preserve">
          <source>One instantiation is of particular interest: &lt;code&gt;FreeList!(0, unbounded)&lt;/code&gt; puts every deallocation in the freelist, and subsequently serves any allocation from the freelist (if not empty). There is no checking of size matching, which would be incorrect for a freestanding allocator but is both correct and fast when an owning allocator on top of the free list allocator (such as &lt;code&gt;Segregator&lt;/code&gt;) is already in charge of handling size checking.</source>
          <target state="translated">一个实例化特别引起关注： &lt;code&gt;FreeList!(0, unbounded)&lt;/code&gt; 将每个释放都放入自由列表中，然后为自由列表中的任何分配服务（如果不为空）。没有大小匹配的检查，这对于独立的分配器来说是不正确的，但是当自由列表分配器（例如 &lt;code&gt;Segregator&lt;/code&gt; ）之上的拥有分配器已经负责处理大小检查时，既正确又快速。</target>
        </trans-unit>
        <trans-unit id="b8bb08b9cf98dd6c73c6dc0c7e52247a78ee67c4" translate="yes" xml:space="preserve">
          <source>One of</source>
          <target state="translated">其中一个</target>
        </trans-unit>
        <trans-unit id="6b6f69412e7b5746bc4bc3d10bafa7869eb676ad" translate="yes" xml:space="preserve">
          <source>One of the following UTF BOMs (Byte Order Marks) can be present at the beginning of the source text:</source>
          <target state="translated">下列UTF BOM(字节序号)之一可以出现在源文本的开头。</target>
        </trans-unit>
        <trans-unit id="187dc51ce92272932644e64e0c07f2ddfef5985d" translate="yes" xml:space="preserve">
          <source>One or more items to search for. Each of &lt;code&gt;needles&lt;/code&gt; must be either comparable to one element in &lt;code&gt;haystack&lt;/code&gt;, or be itself a forward range with elements comparable with elements in &lt;code&gt;haystack&lt;/code&gt;.</source>
          <target state="translated">一个或多个要搜索的项目。每个 &lt;code&gt;needles&lt;/code&gt; 必须是相当于一个元件在 &lt;code&gt;haystack&lt;/code&gt; ，或者是本身前进档与在元件比较的元素 &lt;code&gt;haystack&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b04f89f4dcaf4692c37fd3a834b169482f64078c" translate="yes" xml:space="preserve">
          <source>One reason a custom &lt;code&gt;opAssign&lt;/code&gt; might be more efficient is if the struct has a reference to a local buffer:</source>
          <target state="translated">自定义 &lt;code&gt;opAssign&lt;/code&gt; 可能更有效的一个原因是，如果该结构引用了本地缓冲区：</target>
        </trans-unit>
        <trans-unit id="bb45ebddbc06dea87936ffc85870161ed923a01d" translate="yes" xml:space="preserve">
          <source>One solution is to use &lt;code&gt;scope(exit)&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f5a4fe2f5c62ecd81776d246b8c0c725190c25" translate="yes" xml:space="preserve">
          <source>One-Step Query Execution Interface</source>
          <target state="translated">一步式查询执行界面</target>
        </trans-unit>
        <trans-unit id="84ecd14ddbadabe468f63832d803f2392f405f33" translate="yes" xml:space="preserve">
          <source>Online Backup API.</source>
          <target state="translated">在线备份API。</target>
        </trans-unit>
        <trans-unit id="df4435ab96f572a5ddc0d0575dab3a2326c426c1" translate="yes" xml:space="preserve">
          <source>Online Backup Object</source>
          <target state="translated">在线备份对象</target>
        </trans-unit>
        <trans-unit id="e405ce24fb1f95bf28e59992555ee4472e0a1bb7" translate="yes" xml:space="preserve">
          <source>Only Zip version 20 formats are supported.</source>
          <target state="translated">只支持Zip版本20的格式。</target>
        </trans-unit>
        <trans-unit id="5c244cec2fec4515775043a5c26290f2816cde2e" translate="yes" xml:space="preserve">
          <source>Only called from the driver after platform detection, and internally.</source>
          <target state="translated">只有在平台检测后才会从驱动中调用,内部。</target>
        </trans-unit>
        <trans-unit id="ecb587b264a111fa4057abd83cb3c0390dc38177" translate="yes" xml:space="preserve">
          <source>Only called from the driver for &lt;code&gt;-version=Ident&lt;/code&gt; parameters. Will raise an error if the identifier is reserved.</source>
          <target state="translated">仅从驱动程序为 &lt;code&gt;-version=Ident&lt;/code&gt; 参数调用。如果保留标识符，将引发错误。</target>
        </trans-unit>
        <trans-unit id="cce934e34ed04bb926cd8169afbbec8aaf23e272" translate="yes" xml:space="preserve">
          <source>Only defined if &lt;code&gt;hasLength!R&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">仅在 &lt;code&gt;hasLength!R&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 时定义。</target>
        </trans-unit>
        <trans-unit id="862399b467677fba43c9d502817d5f0b7647d65a" translate="yes" xml:space="preserve">
          <source>Only defined if &lt;code&gt;hasMobileElements!R&lt;/code&gt; and &lt;code&gt;isBidirectionalRange!R&lt;/code&gt; are &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">仅在 &lt;code&gt;hasMobileElements!R&lt;/code&gt; 和 &lt;code&gt;isBidirectionalRange!R&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 时定义。</target>
        </trans-unit>
        <trans-unit id="1d299cfaa7b726004904048bdbbeff2a23f9537e" translate="yes" xml:space="preserve">
          <source>Only defined if &lt;code&gt;hasMobileElements!R&lt;/code&gt; and &lt;code&gt;isForwardRange!R&lt;/code&gt; are &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">仅在 &lt;code&gt;hasMobileElements!R&lt;/code&gt; 和 &lt;code&gt;isForwardRange!R&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 时定义。</target>
        </trans-unit>
        <trans-unit id="f0e1549e42e36af6cc4f14382860c43f58ce9d4a" translate="yes" xml:space="preserve">
          <source>Only defined if &lt;code&gt;hasMobileElements!R&lt;/code&gt; and &lt;code&gt;isRandomAccessRange!R&lt;/code&gt; are &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">仅在 &lt;code&gt;hasMobileElements!R&lt;/code&gt; 和 &lt;code&gt;isRandomAccessRange!R&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 时定义。</target>
        </trans-unit>
        <trans-unit id="fd3e276381109f7d629a5c36b61768f82d6512c0" translate="yes" xml:space="preserve">
          <source>Only defined if &lt;code&gt;hasSlicing!R&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">仅在 &lt;code&gt;hasSlicing!R&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 时定义。</target>
        </trans-unit>
        <trans-unit id="3d00e6646d856997df194a6a9af40811b56eb10b" translate="yes" xml:space="preserve">
          <source>Only defined if &lt;code&gt;isBidirectionalRange!R&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">仅在 &lt;code&gt;isBidirectionalRange!R&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 时定义。</target>
        </trans-unit>
        <trans-unit id="dd62d4c49545ff383b28dc672873e780186fe504" translate="yes" xml:space="preserve">
          <source>Only defined if &lt;code&gt;isForwardRange!R&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">仅在 &lt;code&gt;isForwardRange!R&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 时定义。</target>
        </trans-unit>
        <trans-unit id="9b544462107afa42f4718c874cde66fe7b0ee37b" translate="yes" xml:space="preserve">
          <source>Only defined if &lt;code&gt;isRandomAccesRange!R&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">仅在 &lt;code&gt;isRandomAccesRange!R&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 时定义。</target>
        </trans-unit>
        <trans-unit id="9236b4e0fe39b6bde2da99e0cff381a33d1b78c9" translate="yes" xml:space="preserve">
          <source>Only do checking in &lt;code&gt;@safe&lt;/code&gt; functions</source>
          <target state="translated">仅签入 &lt;code&gt;@safe&lt;/code&gt; 函数</target>
        </trans-unit>
        <trans-unit id="2a79fded6bf47650a5682e0a8be99f79c6ff2e9c" translate="yes" xml:space="preserve">
          <source>Only one module per file.</source>
          <target state="translated">每个文件只有一个模块。</target>
        </trans-unit>
        <trans-unit id="129f862b4645a9b5bc42ca61dd870b0c6bcad71c" translate="yes" xml:space="preserve">
          <source>Only spans one directory.</source>
          <target state="translated">只跨越一个目录。</target>
        </trans-unit>
        <trans-unit id="df00b3a1891c04db004975eb707f42e43dced5b0" translate="yes" xml:space="preserve">
          <source>Only supports compression modes 0 (no compression) and 8 (deflate).</source>
          <target state="translated">只支持压缩模式0(无压缩)和8(放气)。</target>
        </trans-unit>
        <trans-unit id="e57c5241662851c301803a684716b28d4ece2aaf" translate="yes" xml:space="preserve">
          <source>Only the following characters are considered whitespace in XML - space, tab, carriage return and linefeed</source>
          <target state="translated">在XML中,只有以下字符被认为是空白字符--空格、制表符、回车和换行符。</target>
        </trans-unit>
        <trans-unit id="9f64b8772cea113059e2d85e8c2f762ed6fbe026" translate="yes" xml:space="preserve">
          <source>Only the option directly following &lt;code&gt;std.getopt.config.required&lt;/code&gt; is required.</source>
          <target state="translated">仅需要 &lt;code&gt;std.getopt.config.required&lt;/code&gt; 的选项。</target>
        </trans-unit>
        <trans-unit id="a406a3ee3a63cb5ed2bd5dd188ac986593baee94" translate="yes" xml:space="preserve">
          <source>Only used for numeric, bool, null, char, string, enum and pointer types. Specifies the minimum field width. If the width is a &lt;b&gt;*&lt;/b&gt;, an additional argument of type &lt;b&gt;int&lt;/b&gt;, preceding the actual argument, is taken as the width. If the width is negative, it is as if the &lt;b&gt;-&lt;/b&gt; was given as a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6005ab5c2001db5a0f58c1bdc79e5b2f49a7e5f" translate="yes" xml:space="preserve">
          <source>Only valid after semantic analysis.</source>
          <target state="translated">只有经过语义分析后才有效。</target>
        </trans-unit>
        <trans-unit id="56c1872362aaadddaf17d1f0853543a1c5383ad6" translate="yes" xml:space="preserve">
          <source>Only works on Linux</source>
          <target state="translated">只适用于Linux</target>
        </trans-unit>
        <trans-unit id="9cbedc3b0f2aeb7733345bed14e006cfa949d8b9" translate="yes" xml:space="preserve">
          <source>Only works well with English names.</source>
          <target state="translated">只适用于英文名。</target>
        </trans-unit>
        <trans-unit id="46ef769c4a078e6997164d1bdec7d4e9aaa7c5ce" translate="yes" xml:space="preserve">
          <source>Only works with the Digital Mars C Runtime.</source>
          <target state="translated">仅适用于数字火星C运行时。</target>
        </trans-unit>
        <trans-unit id="d868746314878f673eaeb7cab7885b539498ab59" translate="yes" xml:space="preserve">
          <source>Op Assignment Operator Overloading</source>
          <target state="translated">运算符分配运算符超载</target>
        </trans-unit>
        <trans-unit id="aa42ddca3527c3262305947b13219762ea1c8d73" translate="yes" xml:space="preserve">
          <source>Opaque AA wrapper</source>
          <target state="translated">不透明的AA包装纸</target>
        </trans-unit>
        <trans-unit id="581bbfacbdf2dcb0762e876472d6d3e3e356f89d" translate="yes" xml:space="preserve">
          <source>Opaque Structs and Unions</source>
          <target state="translated">不透明结构和联盟</target>
        </trans-unit>
        <trans-unit id="1ad7e0054470d6dbdf375fa4c9c53332e963b6e3" translate="yes" xml:space="preserve">
          <source>Opaque struct and union declarations do not have a &lt;a href=&quot;#AggregateBody&quot;&gt;&lt;i&gt;AggregateBody&lt;/i&gt;&lt;/a&gt;:</source>
          <target state="translated">不透明的struct和union声明没有&lt;a href=&quot;#AggregateBody&quot;&gt;&lt;i&gt;AggregateBody&lt;/i&gt;&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="7524f3aa077afff7785a23fcd72580f55d33ff80" translate="yes" xml:space="preserve">
          <source>Opcodes</source>
          <target state="translated">Opcodes</target>
        </trans-unit>
        <trans-unit id="d145964ace4c15a7eff46c943cbea00eff09f07f" translate="yes" xml:space="preserve">
          <source>Opcodes Supported</source>
          <target state="translated">支持的操作码</target>
        </trans-unit>
        <trans-unit id="313411b9bd1b97b8fcd666d91d350cb8e6bed0d1" translate="yes" xml:space="preserve">
          <source>Open A BLOB For Incremental I/O</source>
          <target state="translated">打开一个增量I/O的BLOB。</target>
        </trans-unit>
        <trans-unit id="9a5db6b9f07fe0f6737e3037148bbc246c9b1140" translate="yes" xml:space="preserve">
          <source>Open memory mapped file filename for reading. File is closed when the object instance is deleted.</source>
          <target state="translated">打开内存映射的文件文件名进行读取。当对象实例被删除时,文件被关闭。</target>
        </trans-unit>
        <trans-unit id="28b52b272c32e6d9c6e60e9eb9e62876583fe9a0" translate="yes" xml:space="preserve">
          <source>Open memory mapped file filename in mode. File is closed when the object instance is deleted.</source>
          <target state="translated">模式下打开内存映射文件文件名。当对象实例被删除时,文件被关闭。</target>
        </trans-unit>
        <trans-unit id="db3951317261fd51cb4c1a3e01c4748b4896c421" translate="yes" xml:space="preserve">
          <source>OpenBSD</source>
          <target state="translated">OpenBSD</target>
        </trans-unit>
        <trans-unit id="d864d3a0cba2629540ad6005310a4e1e9f9110a2" translate="yes" xml:space="preserve">
          <source>OpenRight &lt;code&gt;openRight&lt;/code&gt;</source>
          <target state="translated">OpenRight &lt;code&gt;openRight&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4aacf309ba9d8f7213885764ccd6340aa313658b" translate="yes" xml:space="preserve">
          <source>Open_Punctuation</source>
          <target state="translated">Open_Punctuation</target>
        </trans-unit>
        <trans-unit id="f1ba5b2c8dba45952ee1dd4e3e5587becf1e4832" translate="yes" xml:space="preserve">
          <source>Opening A New Database Connection</source>
          <target state="translated">打开一个新的数据库连接</target>
        </trans-unit>
        <trans-unit id="8ca64c0c572cb68fa4f2ce914ea9b27b8a345ff6" translate="yes" xml:space="preserve">
          <source>Opens a TCP connection to the given host and port, then returns a File struct with read and write access through the same interface as any other file (meaning writef and the byLine ranges work!).</source>
          <target state="translated">打开一个与给定主机和端口的TCP连接,然后返回一个文件结构,该结构可以像其他文件一样通过相同的接口进行读写访问(这意味着 writef 和 byLine 范围可以工作!)。</target>
        </trans-unit>
        <trans-unit id="64bfbb68768403159904c1e04d1ec395011c0a93" translate="yes" xml:space="preserve">
          <source>Operand Types</source>
          <target state="translated">操作数类型</target>
        </trans-unit>
        <trans-unit id="c47fc2f4dad35c7e07dd9ed3c2d29ef84ea7cc74" translate="yes" xml:space="preserve">
          <source>Operand swap</source>
          <target state="translated">操作数互换</target>
        </trans-unit>
        <trans-unit id="a2b8c4621b34e3c27498c6c8832719e530f09634" translate="yes" xml:space="preserve">
          <source>Operands</source>
          <target state="translated">Operands</target>
        </trans-unit>
        <trans-unit id="27ca5c239713ff8f578577200fe8706af71773d3" translate="yes" xml:space="preserve">
          <source>Operates on all threads currently being tracked by the system. The result of deleting any Thread object is undefined. Note that threads passed to the callback might no longer run (see &lt;code&gt;Thread.&lt;/code&gt;&lt;a href=&quot;#isRunning&quot;&gt;&lt;code&gt;isRunning&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">在系统当前正在跟踪的所有线程上运行。删除任何Thread对象的结果是不确定的。需要注意的是传递给回调线程可能不再运行（参见 &lt;code&gt;Thread.&lt;/code&gt; &lt;a href=&quot;#isRunning&quot;&gt; &lt;code&gt;isRunning&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="1ceccd51e36cd099776635232a115dbf0c8ddbbd" translate="yes" xml:space="preserve">
          <source>Operates on all threads currently tracked by this object.</source>
          <target state="translated">对该对象当前跟踪的所有线程进行操作。</target>
        </trans-unit>
        <trans-unit id="5fab1578993e130d7e185a769a8e7d10165a4ce2" translate="yes" xml:space="preserve">
          <source>Operating system error code.</source>
          <target state="translated">操作系统错误代码。</target>
        </trans-unit>
        <trans-unit id="8f5dbd7c97b01eae443b983fcb062faa3e56f50c" translate="yes" xml:space="preserve">
          <source>Operating system.</source>
          <target state="translated">操作系统:</target>
        </trans-unit>
        <trans-unit id="5cc46d2eac1c8b0a848f98a788fe90ffd7043281" translate="yes" xml:space="preserve">
          <source>Operation NULL</source>
          <target state="translated">NULL行动</target>
        </trans-unit>
        <trans-unit id="7c206b387173fa63aaa15f71f0e946eceea43069" translate="yes" xml:space="preserve">
          <source>Operation Savepoint Name</source>
          <target state="translated">操作保存点名称</target>
        </trans-unit>
        <trans-unit id="dc2db8ab152ae696d77bdc87d45929deb94de5dc" translate="yes" xml:space="preserve">
          <source>Operation terminated by sqlite3_interrupt()</source>
          <target state="translated">操作由sqlite3_interrupt()终止。</target>
        </trans-unit>
        <trans-unit id="d0e687b079fb70f2208d1f8d2c75d64d74925496" translate="yes" xml:space="preserve">
          <source>Operator</source>
          <target state="translated">Operator</target>
        </trans-unit>
        <trans-unit id="b2c30e50457298624b96ccb9dc57c58e04b9cd54" translate="yes" xml:space="preserve">
          <source>Operator &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; support.</source>
          <target state="translated">运算符 &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; 支持。</target>
        </trans-unit>
        <trans-unit id="c056556bd6106804af09418fad3513c58dd3ce25" translate="yes" xml:space="preserve">
          <source>Operator &lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt; support.</source>
          <target state="translated">运算符 &lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt; 支持。</target>
        </trans-unit>
        <trans-unit id="f299c884a708c75ca75144e361f0c5cf282b235f" translate="yes" xml:space="preserve">
          <source>Operator Overloading</source>
          <target state="translated">操作员超载</target>
        </trans-unit>
        <trans-unit id="658fcb31752209aa14d15f945731a7c73323992e" translate="yes" xml:space="preserve">
          <source>Operator overload. Check for operator overload, if so, replace with function call.</source>
          <target state="translated">运算符过载。检查操作者是否过载,如果过载,则用函数调用代替。</target>
        </trans-unit>
        <trans-unit id="0881519d8f6e3133862fd99cd3f26c97bd8c5241" translate="yes" xml:space="preserve">
          <source>Operator overloading for a number of operators can be done at the same time. For example, if only the + or - operators are supported:</source>
          <target state="translated">可以同时对多个运算符进行运算符重载。例如,如果只支持+或-运算符。</target>
        </trans-unit>
        <trans-unit id="a79cd265a6b171f4cb1a52d3f639986ca2f05ce4" translate="yes" xml:space="preserve">
          <source>Operator overloading is accomplished by rewriting operators whose operands are class or struct objects into calls to specially named members. No additional syntax is used.</source>
          <target state="translated">操作数重载是通过将操作数为类或结构对象的操作数重写为对特殊命名的成员的调用来实现的。没有使用额外的语法。</target>
        </trans-unit>
        <trans-unit id="eacd76902a11d7e0e3df7b94d293ad81fec39f59" translate="yes" xml:space="preserve">
          <source>Operator sets &lt;code&gt;value&lt;/code&gt; for element of JSON object by &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">操作员通过 &lt;code&gt;key&lt;/code&gt; 为JSON对象的元素设置 &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="942d310c4eece12c0b6eb787bdd18914ed43a921" translate="yes" xml:space="preserve">
          <source>Operators not listed are not supported at all.</source>
          <target state="translated">没有列出的操作者完全不支持。</target>
        </trans-unit>
        <trans-unit id="105f14774b9dc4fd12fb78b69309a3c1d98f98f5" translate="yes" xml:space="preserve">
          <source>Optical Character Recognition</source>
          <target state="translated">光学字符识别</target>
        </trans-unit>
        <trans-unit id="4635b8a94bf8d2a8157ac8f48eae6326d6299a58" translate="yes" xml:space="preserve">
          <source>Optimisation hints for assembly code.</source>
          <target state="translated">汇编代码的优化提示。</target>
        </trans-unit>
        <trans-unit id="6c185f29401844f73973bbf456cd1a89e77f21fa" translate="yes" xml:space="preserve">
          <source>Optimization is an optional pass that attempts to rewrite the program in a semantically equivalent, more performant, version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a03d18f56e01d18b8faf1e7c5daa696b62b96a8" translate="yes" xml:space="preserve">
          <source>Optimization is an optional pass that tries to rewrite the program in a semantically equivalent, but faster executing, version.</source>
          <target state="translated">优化是一个可选的通道,它试图将程序重写成一个语义等同但执行速度更快的版本。</target>
        </trans-unit>
        <trans-unit id="e7750f07400d449f606de01fdfb52aae1fd21fce" translate="yes" xml:space="preserve">
          <source>Optimize common special case alignSize(2)</source>
          <target state="translated">优化常见的特殊情况alignSize(2)</target>
        </trans-unit>
        <trans-unit id="af308e3b0590ac25521d185bafdd2fc15fc1c44b" translate="yes" xml:space="preserve">
          <source>Optimize common special case alignSize(4)</source>
          <target state="translated">优化常见的特殊情况alignSize(4)</target>
        </trans-unit>
        <trans-unit id="e4a193f0de6267241861c2d42d5a4c6cc2a9b046" translate="yes" xml:space="preserve">
          <source>Option[] &lt;code&gt;opt&lt;/code&gt;</source>
          <target state="translated">Option [] &lt;code&gt;opt&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8d1a750a57d5ed1164a68ce6fe48eb75219856e9" translate="yes" xml:space="preserve">
          <source>Option[] &lt;strong id=&quot;options&quot;&gt;options&lt;/strong&gt;;</source>
          <target state="translated">Option [] &lt;strong id=&quot;options&quot;&gt;选项&lt;/strong&gt;；</target>
        </trans-unit>
        <trans-unit id="7d85f397e20f87376d5a77c0d5a7c922b7e4be12" translate="yes" xml:space="preserve">
          <source>Optional 4 char array to put the resulting Soundex characters into. If null, the return value buffer will be allocated on the heap.</source>
          <target state="translated">可选的4个字符数组,用来放置Soundex字符。如果为空,返回值缓冲区将在堆上分配。</target>
        </trans-unit>
        <trans-unit id="d00ac75ec10fc459fe79ad686a447767b4094900" translate="yes" xml:space="preserve">
          <source>Optional Parentheses</source>
          <target state="translated">可选括号</target>
        </trans-unit>
        <trans-unit id="038e563ee642144905db080ffd8ae1bf79d33e01" translate="yes" xml:space="preserve">
          <source>Optional arguments used for initializing the created object. If not present, the object is default constructed.</source>
          <target state="translated">用于初始化创建的对象的可选参数。如果没有,则默认为构造对象。</target>
        </trans-unit>
        <trans-unit id="fdcdde29a4f281b516f2ccc0b86b05e8a9f79eaa" translate="yes" xml:space="preserve">
          <source>Optional initial value for the new type.</source>
          <target state="translated">新类型的可选初始值。</target>
        </trans-unit>
        <trans-unit id="6d59ad8cf4d8ef8301a7aaf80bd895b2ba04a3f4" translate="yes" xml:space="preserve">
          <source>Optional message to output on test failure.</source>
          <target state="translated">测试失败时输出的可选信息。</target>
        </trans-unit>
        <trans-unit id="f30ef832425c5a7898fe008b0347b287bbe11286" translate="yes" xml:space="preserve">
          <source>Optional message to output on test failure. If msg is empty, and the thrown exception has a non-empty msg field, the exception's msg field will be output on test failure.</source>
          <target state="translated">测试失败时输出的可选信息。如果msg为空,并且抛出的异常有一个非空的msg字段,那么异常的msg字段将在测试失败时被输出。</target>
        </trans-unit>
        <trans-unit id="e22e0e7dfcab51210e2c1324ad28b24761a1cc15" translate="yes" xml:space="preserve">
          <source>Optional parentheses are not applied to delegates or function pointers.</source>
          <target state="translated">可选的括号不适用于委托或函数指针。</target>
        </trans-unit>
        <trans-unit id="092c132b404aff7b3204e00316cdb117ca456851" translate="yes" xml:space="preserve">
          <source>Optional string with wildcards, such as  &quot;*.d&quot;. When present, it is used to filter the results by their file name. The supported wildcard strings are described under &lt;a href=&quot;std_path#globMatch&quot;&gt;&lt;code&gt; std.path.globMatch&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">带有通配符的可选字符串，例如&amp;ldquo; * .d&amp;rdquo;。如果存在，则用于按文件名过滤结果。受支持的通配符字符串在&lt;a href=&quot;std_path#globMatch&quot;&gt; &lt;code&gt; std.path.globMatch&lt;/code&gt; &lt;/a&gt;下描述。</target>
        </trans-unit>
        <trans-unit id="5003de64d53361cf50d9ac6aa9cf977dcc7c6c5a" translate="yes" xml:space="preserve">
          <source>Optional, used to create multiple unique types which are based on the same origin type &lt;code&gt;T&lt;/code&gt;</source>
          <target state="translated">可选，用于创建基于相同原始类型 &lt;code&gt;T&lt;/code&gt; 的多个唯一类型</target>
        </trans-unit>
        <trans-unit id="d4544162ebd3cc17060bab5af2189803c9093909" translate="yes" xml:space="preserve">
          <source>Optionally a string literal or manifest constant can be used to provide additional information in the deprecation message.</source>
          <target state="translated">可以选择使用字符串文字或清单常量在废弃信息中提供附加信息。</target>
        </trans-unit>
        <trans-unit id="3fcf22d9a17be7e076745071fa3d0b3148122d91" translate="yes" xml:space="preserve">
          <source>Options Terminator</source>
          <target state="translated">期权终结者</target>
        </trans-unit>
        <trans-unit id="e7e6cd13772f7d3104b04440c2ae1e1e64c992b1" translate="yes" xml:space="preserve">
          <source>Options for &lt;a href=&quot;#SortedRange&quot;&gt;&lt;code&gt;SortedRange&lt;/code&gt;&lt;/a&gt; ranges (below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ad00011b95818e19ed121e47fc0a5a9da924de" translate="yes" xml:space="preserve">
          <source>Options for &lt;code&gt;StatsCollector&lt;/code&gt; defined below. Each enables during compilation one specific counter, statistic, or other piece of information.</source>
          <target state="translated">&lt;code&gt;StatsCollector&lt;/code&gt; 的选项定义如下。在编译过程中，每个函数都启用一个特定的计数器，统计信息或其他信息。</target>
        </trans-unit>
        <trans-unit id="2c3004f998d37dff4cdd5bfe04bd588d9585293d" translate="yes" xml:space="preserve">
          <source>Options for the &lt;a href=&quot;#FrontTransversal&quot;&gt;&lt;code&gt;FrontTransversal&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Transversal&quot;&gt;&lt;code&gt;Transversal&lt;/code&gt;&lt;/a&gt; ranges (below).</source>
          <target state="translated">&lt;a href=&quot;#FrontTransversal&quot;&gt; &lt;code&gt;FrontTransversal&lt;/code&gt; &lt;/a&gt;和&amp;ldquo; &lt;a href=&quot;#Transversal&quot;&gt; &lt;code&gt;Transversal&lt;/code&gt; &lt;/a&gt;范围的选项（如下）。</target>
        </trans-unit>
        <trans-unit id="e73dd1bfc6de45893094d39a0b8c52fd15136773" translate="yes" xml:space="preserve">
          <source>Options regarding auto-initialization of a &lt;code&gt;RefCounted&lt;/code&gt; object (see the definition of &lt;code&gt;RefCounted&lt;/code&gt; below).</source>
          <target state="translated">关于 &lt;code&gt;RefCounted&lt;/code&gt; 对象的自动初始化的选项（请参见下面的 &lt;code&gt;RefCounted&lt;/code&gt; 的定义）。</target>
        </trans-unit>
        <trans-unit id="fa0185ff06c2b5e2963d7b06c5172c58d05f4dc8" translate="yes" xml:space="preserve">
          <source>Options supported by -check</source>
          <target state="translated">由-check支持的选项</target>
        </trans-unit>
        <trans-unit id="d52742178e23e949c60c1d5e040ad60b9387322e" translate="yes" xml:space="preserve">
          <source>Options supported by -checkaction=</source>
          <target state="translated">-checkaction=支持的选项</target>
        </trans-unit>
        <trans-unit id="363dac403a2a83e25797a3d9c9ee22f4611eaac4" translate="yes" xml:space="preserve">
          <source>Options supported by -extern-std</source>
          <target state="translated">-extern-std支持的选项</target>
        </trans-unit>
        <trans-unit id="60f84bb401de02d865a716cc0a5e1289035f7821" translate="yes" xml:space="preserve">
          <source>Options with multiple names</source>
          <target state="translated">有多个名称的选项</target>
        </trans-unit>
        <trans-unit id="19c159a25d07edf6bd220009e32de0cdee356e75" translate="yes" xml:space="preserve">
          <source>Options[] &lt;strong id=&quot;opts&quot;&gt;opts&lt;/strong&gt;;</source>
          <target state="translated">Options [] &lt;strong id=&quot;opts&quot;&gt;选择&lt;/strong&gt;；</target>
        </trans-unit>
        <trans-unit id="edace25305092565e308d9146174a0a2938df434" translate="yes" xml:space="preserve">
          <source>Or Expressions</source>
          <target state="translated">或表现形式</target>
        </trans-unit>
        <trans-unit id="4f2ce19ebdea19c7f2e73deccf0f96bba95a0a64" translate="yes" xml:space="preserve">
          <source>OrOr Expressions</source>
          <target state="translated">或或表达式</target>
        </trans-unit>
        <trans-unit id="2386e5c9e2c936e53415bc77759add97d38ae88d" translate="yes" xml:space="preserve">
          <source>OrOrExpression</source>
          <target state="translated">OrOrExpression</target>
        </trans-unit>
        <trans-unit id="7845f6223be30b5297bf59f283a22a525e6c7aca" translate="yes" xml:space="preserve">
          <source>Order Of Evaluation</source>
          <target state="translated">评估顺序</target>
        </trans-unit>
        <trans-unit id="972733ae150ac5a0d4141ce4b0e555b5149be952" translate="yes" xml:space="preserve">
          <source>Order did not match that found in the input</source>
          <target state="translated">顺序与输入的顺序不一致</target>
        </trans-unit>
        <trans-unit id="15526c521fbddfecba053d2b9bd9f4f2d40a4fcf" translate="yes" xml:space="preserve">
          <source>Order of Static Construction</source>
          <target state="translated">静态结构的顺序</target>
        </trans-unit>
        <trans-unit id="c3fec94dee877456604b578bf17a9f503a832939" translate="yes" xml:space="preserve">
          <source>Order of Static Construction within a Module</source>
          <target state="translated">模块内静态结构的顺序</target>
        </trans-unit>
        <trans-unit id="b07e4919a91d40cd506173a6c238d70b4d2b5a5c" translate="yes" xml:space="preserve">
          <source>Order of Static Destruction</source>
          <target state="translated">静态破坏顺序</target>
        </trans-unit>
        <trans-unit id="03669ae8e7b2e4ca8ca78be6c322b755b43c766a" translate="yes" xml:space="preserve">
          <source>Order of Unit tests</source>
          <target state="translated">单位测试的顺序</target>
        </trans-unit>
        <trans-unit id="c478a3b39efae7d0d0a63d69e6666965308c26b2" translate="yes" xml:space="preserve">
          <source>Order the provided members to minimize size while preserving alignment. Alignment is not always optimal for 80-bit reals, nor for structs declared as align(1).</source>
          <target state="translated">对所提供的成员进行排序,以便在保留对齐方式的同时最小化大小。对于 80 位实数,以及声明为 align(1)的结构,对齐方式并不总是最佳的。</target>
        </trans-unit>
        <trans-unit id="c3d3d13178dc609ab5facd250c988ab12f4ba7bb" translate="yes" xml:space="preserve">
          <source>Ordering comparison used by the &quot;&amp;lt;&quot;, &quot;&amp;lt;=&quot;, &quot;&amp;gt;&quot;, and &quot;&amp;gt;=&quot; operators. In case comparison is not sensible between the held value and &lt;code&gt;rhs&lt;/code&gt;, an exception is thrown.</source>
          <target state="translated">&amp;ldquo; &amp;lt;&amp;rdquo;，&amp;ldquo; &amp;lt;=&amp;rdquo;，&amp;ldquo;&amp;gt;&amp;rdquo;和&amp;ldquo;&amp;gt; =&amp;rdquo;运算符使用的排序比较。如果保持值和 &lt;code&gt;rhs&lt;/code&gt; 之间的比较不明智，则抛出异常。</target>
        </trans-unit>
        <trans-unit id="483f66f6d26b7cb776d522769f431003c3f9bfb5" translate="yes" xml:space="preserve">
          <source>Organizes one contiguous chunk of memory in equal-size blocks and tracks allocation status at the cost of one bit per block.</source>
          <target state="translated">将一个连续的内存块组织成同等大小的块,并以每个块一个比特的代价跟踪分配状态。</target>
        </trans-unit>
        <trans-unit id="0111ae8997cfd3379765a4a4e0e5efb36400d9f8" translate="yes" xml:space="preserve">
          <source>OriginalType!E &lt;strong id=&quot;asOriginalType&quot;&gt;asOriginalType&lt;/strong&gt;(E)(E value)</source>
          <target state="translated">OriginalType！E &lt;strong id=&quot;asOriginalType&quot;&gt;asOriginalType&lt;/strong&gt;（E）（E值）</target>
        </trans-unit>
        <trans-unit id="c10643b85fbfbd4fbb63e61c52588993e2ffbfa5" translate="yes" xml:space="preserve">
          <source>Oriya</source>
          <target state="translated">Oriya</target>
        </trans-unit>
        <trans-unit id="42cb2600c161bf7bf85310fb50b63266488059bf" translate="yes" xml:space="preserve">
          <source>Osmanya</source>
          <target state="translated">Osmanya</target>
        </trans-unit>
        <trans-unit id="6e6a6f2086bb5fe5dbfd17d8d5f502d48759834b" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="translated">Other</target>
        </trans-unit>
        <trans-unit id="9aaa73eee9cf49714bdd9258a2956f335d4eeec0" translate="yes" xml:space="preserve">
          <source>Other &lt;a href=&quot;https://python.org/sigs/doc-sig/otherlangs.html&quot;&gt;documentation tools&lt;/a&gt;</source>
          <target state="translated">其他&lt;a href=&quot;https://python.org/sigs/doc-sig/otherlangs.html&quot;&gt;文档工具&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd6313338475c9071259ef3238ae97dbbd791a4d" translate="yes" xml:space="preserve">
          <source>Other Posix Systems</source>
          <target state="translated">其他Posix系统</target>
        </trans-unit>
        <trans-unit id="5e7b0a895f475b6f28b441a465421ad29d8e0322" translate="yes" xml:space="preserve">
          <source>Other date types</source>
          <target state="translated">其他日期类型</target>
        </trans-unit>
        <trans-unit id="26fa36aba9abb20b0516eee338a081a64cf71284" translate="yes" xml:space="preserve">
          <source>Other early CPUs (Nx586, AMD K5, K6, Centaur C3, Transmeta, Cyrix, Rise) were mostly in-order.</source>
          <target state="translated">其他早期的CPU(Nx586、AMD K5、K6、Centaur C3、Transmeta、Cyrix、Rise)大部分都是现货。</target>
        </trans-unit>
        <trans-unit id="b65c561a3ed0f4f2558514b426246a99c9d341a5" translate="yes" xml:space="preserve">
          <source>Other functionality</source>
          <target state="translated">其他功能</target>
        </trans-unit>
        <trans-unit id="f3ce46edeed2ba5081d15973ee7b8fd78b33a5e9" translate="yes" xml:space="preserve">
          <source>Other non-binary properties (once supported) follow the same notation - &lt;code&gt;unicode.propertyName.propertyValue&lt;/code&gt; for compile-time checked access and &lt;code&gt;unicode.propertyName(propertyValue)&lt;/code&gt; for run-time checked one.</source>
          <target state="translated">其他非二进制属性（一次受支持）采用相同的符号 &lt;code&gt;unicode.propertyName.propertyValue&lt;/code&gt; 用于编译时检查的访问，而 &lt;code&gt;unicode.propertyName(propertyValue)&lt;/code&gt; 用于运行时检查的访问。</target>
        </trans-unit>
        <trans-unit id="315b2283e70ed5c9b3a32d956573fa52bcf2327a" translate="yes" xml:space="preserve">
          <source>Other_Alphabetic</source>
          <target state="translated">Other_Alphabetic</target>
        </trans-unit>
        <trans-unit id="3576c30ed2a7456b454a6df0f1d356a6a5b81854" translate="yes" xml:space="preserve">
          <source>Other_Default_Ignorable_Code_Point</source>
          <target state="translated">Other_Default_Ignorable_Code_Point</target>
        </trans-unit>
        <trans-unit id="b8a4e9e3315108565913f1214d70e6ab06305fea" translate="yes" xml:space="preserve">
          <source>Other_Grapheme_Extend</source>
          <target state="translated">Other_Grapheme_Extend</target>
        </trans-unit>
        <trans-unit id="1eafede4d641ad77c5e7696525a5726a3b1e25e2" translate="yes" xml:space="preserve">
          <source>Other_ID_Continue</source>
          <target state="translated">Other_ID_Continue</target>
        </trans-unit>
        <trans-unit id="20de61891c461dc1d0740d06823ad7c655241aae" translate="yes" xml:space="preserve">
          <source>Other_ID_Start</source>
          <target state="translated">Other_ID_Start</target>
        </trans-unit>
        <trans-unit id="28d3f28453d83a9d4de7288e2adc6832cacb17eb" translate="yes" xml:space="preserve">
          <source>Other_Letter</source>
          <target state="translated">Other_Letter</target>
        </trans-unit>
        <trans-unit id="01c4b64406b7699bf365d87632f6ecac32fc9e72" translate="yes" xml:space="preserve">
          <source>Other_Lowercase</source>
          <target state="translated">Other_Lowercase</target>
        </trans-unit>
        <trans-unit id="85b8947a3c801b69f490df8abb132c7f38d3815e" translate="yes" xml:space="preserve">
          <source>Other_Math</source>
          <target state="translated">Other_Math</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
