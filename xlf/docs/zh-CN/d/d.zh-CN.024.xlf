<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="d">
    <body>
      <group id="d">
        <trans-unit id="b6b39777910b6aa0f8bea5d47f04ada6b3d29ea9" translate="yes" xml:space="preserve">
          <source>Requesting a system service that is not supported.</source>
          <target state="translated">请求不支持的系统服务。</target>
        </trans-unit>
        <trans-unit id="cedd2e25c6537b54aec40e6247f1349ccc85d882" translate="yes" xml:space="preserve">
          <source>Requests an aligned block of managed memory from the garbage collector, which is initialized with all bits set to zero. This memory may be deleted at will with a call to free, or it may be discarded and cleaned up automatically during a collection run. If allocation fails, this function will call onOutOfMemory which is expected to throw an OutOfMemoryError.</source>
          <target state="translated">向垃圾收集器请求一个对齐的托管内存块,该内存块初始化时所有位都设置为0。这个内存可以通过调用free来任意删除,也可以在收集运行期间自动丢弃和清理。如果分配失败,这个函数将调用onOutOfMemory,预计会抛出一个OutOfMemoryError。</target>
        </trans-unit>
        <trans-unit id="3372c028eacd246cc56044aa7a3733e04a6d6f6f" translate="yes" xml:space="preserve">
          <source>Requests an aligned block of managed memory from the garbage collector. This memory may be deleted at will with a call to free, or it may be discarded and cleaned up automatically during a collection run. If allocation fails, this function will call onOutOfMemory which is expected to throw an OutOfMemoryError.</source>
          <target state="translated">向垃圾收集器请求一个对齐的托管内存块。这个内存可以通过调用free来任意删除,也可以在收集运行期间自动丢弃和清理。如果分配失败,这个函数将调用onOutOfMemory,预计会抛出一个OutOfMemoryError。</target>
        </trans-unit>
        <trans-unit id="0f27acb273e8e867abce7f89b11502031e9b54ef" translate="yes" xml:space="preserve">
          <source>Requests that at least sz bytes of memory be obtained from the operating system and marked as free.</source>
          <target state="translated">要求从操作系统中获取至少sz字节的内存并标记为空闲。</target>
        </trans-unit>
        <trans-unit id="139378ece9cc043d995703caf8c0d054566cc3a2" translate="yes" xml:space="preserve">
          <source>Requests that the managed memory block referenced by p be extended in place by at least mx bytes, with a desired extension of sz bytes. If an extension of the required size is not possible or if p references memory not originally allocated by this garbage collector, no action will be taken.</source>
          <target state="translated">请求将p引用的托管内存块在原地至少扩展mx个字节,所需扩展为sz个字节。如果不可能扩展到所需的大小,或者如果p引用的内存不是该垃圾收集器最初分配的,则不会采取任何行动。</target>
        </trans-unit>
        <trans-unit id="52c504ab52de6623939f9c90c2748efd2ee46879" translate="yes" xml:space="preserve">
          <source>Require that all ranges are equal</source>
          <target state="translated">要求所有范围都相等</target>
        </trans-unit>
        <trans-unit id="eed6bfb41051ed5b74447340f3c2e29d11e99a7c" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="translated">Required</target>
        </trans-unit>
        <trans-unit id="4d3f97223e0e772af6b4e15662af447e7861d0d7" translate="yes" xml:space="preserve">
          <source>Requiring errno to be checked.</source>
          <target state="translated">要求检查errno。</target>
        </trans-unit>
        <trans-unit id="b7605a40c901f4f03a81488eb7f88474e985a327" translate="yes" xml:space="preserve">
          <source>Requiring that a function be called to check if the previous function failed.</source>
          <target state="translated">要求调用一个函数来检查前一个函数是否失败。</target>
        </trans-unit>
        <trans-unit id="2c7bb842b37a84d17d9f3688eaa255e6c0f8625b" translate="yes" xml:space="preserve">
          <source>Reserve at least newCapacity elements for appending. Note that more elements may be reserved than requested. If &lt;code&gt;newCapacity &amp;lt;= capacity&lt;/code&gt;, then nothing is done.</source>
          <target state="translated">至少保留newCapacity元素以进行追加。注意，保留的元素可能比请求的要多。如果 &lt;code&gt;newCapacity &amp;lt;= capacity&lt;/code&gt; ，则什么也不做。</target>
        </trans-unit>
        <trans-unit id="7bc2f0e2bcb2ad253290193bf73eb0c5a63f16c2" translate="yes" xml:space="preserve">
          <source>Reserved for future use</source>
          <target state="translated">保留供今后使用</target>
        </trans-unit>
        <trans-unit id="f6fc57a2e78be889f385b7b6aa59f1f303e40117" translate="yes" xml:space="preserve">
          <source>Reserves capacity for a slice. The capacity is the size that the slice can grow to before the underlying array must be reallocated or extended.</source>
          <target state="translated">为一个片区保留容量,容量是指在底层阵列必须重新分配或扩展之前,片区可以增长到的大小。容量是指在必须重新分配或扩展底层阵列之前,片区可以增长到的大小。</target>
        </trans-unit>
        <trans-unit id="d95494e07a6a9549bcea26b9d9f2fbf0deb1f69a" translate="yes" xml:space="preserve">
          <source>Reset A Prepared Statement Object</source>
          <target state="translated">重置一个已准备好的报表对象</target>
        </trans-unit>
        <trans-unit id="42eeaddac57cdadd9740ee6589dcc8b8aa539cc7" translate="yes" xml:space="preserve">
          <source>Reset All Bindings On A Prepared Statement</source>
          <target state="translated">重置已编制报表上的所有绑定。</target>
        </trans-unit>
        <trans-unit id="73a14bd471f06173f0ae50ee3cde4ad48b429415" translate="yes" xml:space="preserve">
          <source>Reset Automatic Extension Loading</source>
          <target state="translated">重置自动延期加载</target>
        </trans-unit>
        <trans-unit id="8523ebb069ab7e3bc472ae3359c34dc47b6ce750" translate="yes" xml:space="preserve">
          <source>Reset stringTab[] between object files being emitted, because the symbols are local.</source>
          <target state="translated">在被发出的对象文件之间重置stringTab[],因为符号是本地的。</target>
        </trans-unit>
        <trans-unit id="f2111437cc95f234e7f61c74a64fa99a6e79c53e" translate="yes" xml:space="preserve">
          <source>Reset the &lt;code&gt;SocketSet&lt;/code&gt; so that there are 0 &lt;code&gt;Socket&lt;/code&gt;s in the collection.</source>
          <target state="translated">重置 &lt;code&gt;SocketSet&lt;/code&gt; ,以便集合中有0个 &lt;code&gt;Socket&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6acfbb95f80f439e77f66baaa4feda1989c06608" translate="yes" xml:space="preserve">
          <source>Reset the event manually</source>
          <target state="translated">手动重置事件</target>
        </trans-unit>
        <trans-unit id="d0e6ffc296492170be6eaac941a0209ac5feb33f" translate="yes" xml:space="preserve">
          <source>Reset this status line</source>
          <target state="translated">重置此状态行</target>
        </trans-unit>
        <trans-unit id="c5f2b07df79684f7e6099777d42617cad068c5ee" translate="yes" xml:space="preserve">
          <source>Resets the StopWatch.</source>
          <target state="translated">重置StopWatch。</target>
        </trans-unit>
        <trans-unit id="1dd9486f880f808a919c8718480623a1605b1ba6" translate="yes" xml:space="preserve">
          <source>Resets the digest and returns the finished hash.</source>
          <target state="translated">重置摘要并返回完成的哈希值。</target>
        </trans-unit>
        <trans-unit id="471712629a58202496aecedf4cc8cd07ce039c66" translate="yes" xml:space="preserve">
          <source>Resets the internal state of the digest.</source>
          <target state="translated">重置摘要的内部状态。</target>
        </trans-unit>
        <trans-unit id="29105a822505923cb74156d62ee974c45964160f" translate="yes" xml:space="preserve">
          <source>Resets the stop watch.</source>
          <target state="translated">重置停表。</target>
        </trans-unit>
        <trans-unit id="3c746f0be60df50f256627441fa28d9489afec36" translate="yes" xml:space="preserve">
          <source>Resets this fiber so that it may be re-used, optionally with a new function/delegate. This routine should only be called for fibers that have terminated, as doing otherwise could result in scope-dependent functionality that is not executed. Stack-based classes, for example, may not be cleaned up properly if a fiber is reset before it has terminated.</source>
          <target state="translated">重置此光纤,以便它可以被重新使用,可以选择使用新的函数/委托人。这个例程只应该被调用给已经终止的光纤,否则可能会导致依赖范围的功能无法执行。例如,基于堆栈的类,如果光纤在终止前被重置,可能无法正确清理。</target>
        </trans-unit>
        <trans-unit id="19d9849184e53be1b62b075e33412496cbeca20e" translate="yes" xml:space="preserve">
          <source>Resilience</source>
          <target state="translated">Resilience</target>
        </trans-unit>
        <trans-unit id="7c6950b5d0d5619c182f3a5ca7fbf452af59df0e" translate="yes" xml:space="preserve">
          <source>Resize an allocation</source>
          <target state="translated">调整分配的大小</target>
        </trans-unit>
        <trans-unit id="b7bd018ef0421ace4cb12ea37baabb0ca4638f29" translate="yes" xml:space="preserve">
          <source>Resize arrays for non-zero initializers. p pointer to array lvalue to be updated newlength new .length property of array sizeelem size of each element of array initsize size of initializer ... initializer</source>
          <target state="translated">p 指向数组的指针 lvalue 要更新 newlength 数组的新.length 属性 sizeelem 数组中每个元素的大小 initsize 初始化器的大小......初始化器。</target>
        </trans-unit>
        <trans-unit id="065447bf2ca7decda27ef1819524c1a96f73dfc5" translate="yes" xml:space="preserve">
          <source>Resize dynamic array</source>
          <target state="translated">调整动态阵列大小</target>
        </trans-unit>
        <trans-unit id="1d5f16a39b451a1be358daae7e9ae7fdd49590f3" translate="yes" xml:space="preserve">
          <source>Resize dynamic arrays with 0 initializers.</source>
          <target state="translated">用0个初始化器调整动态数组的大小。</target>
        </trans-unit>
        <trans-unit id="5dfe5740d7a2956a571c9a469730fb7c99e7b009" translate="yes" xml:space="preserve">
          <source>Resizing a dynamic array is a relatively expensive operation. So, while the following method of filling an array:</source>
          <target state="translated">调整动态数组的大小是一个比较昂贵的操作。所以,虽然下面的填充数组的方法。</target>
        </trans-unit>
        <trans-unit id="d6c383a5217dccf2c0952e72df95ef983342db52" translate="yes" xml:space="preserve">
          <source>Resolve &lt;code&gt;exp&lt;/code&gt; as a compile-time known string.</source>
          <target state="translated">将 &lt;code&gt;exp&lt;/code&gt; 解析为编译时已知的字符串。</target>
        </trans-unit>
        <trans-unit id="add8852f4a8b9d5cd73a4a3a41a11636bdfefb85" translate="yes" xml:space="preserve">
          <source>Resolve IPv4 address number.</source>
          <target state="translated">解析IPv4地址号。</target>
        </trans-unit>
        <trans-unit id="f2816c55ac2f1ed78c8b9a440f1edb45919393c5" translate="yes" xml:space="preserve">
          <source>Resolve __FILE__, __LINE__, __MODULE__, __FUNCTION__, __PRETTY_FUNCTION__, _FILE_FULL_PATH__ to loc.</source>
          <target state="translated">将__FILE__,__LINE__,__MODULE__,__FUNCTION__,__PRETTY_FUNCTION__,_FILE_FULL_PATH__解析为 loc。</target>
        </trans-unit>
        <trans-unit id="4294036a0eac97bbc8b92b3759fc5cad311871ac" translate="yes" xml:space="preserve">
          <source>Resolve forward reference of function body. Returns false if any errors exist in the body.</source>
          <target state="translated">解析函数体的正向引用。如果body中存在任何错误,返回false。</target>
        </trans-unit>
        <trans-unit id="a6291a59121e164606457ba4c505c08e2b5452ce" translate="yes" xml:space="preserve">
          <source>Resolve forward reference of function signature - parameter types, return type, and attributes. Returns false if any errors exist in the signature.</source>
          <target state="translated">解析函数签名的正向引用--参数类型、返回类型和属性。如果签名中存在任何错误,返回false。</target>
        </trans-unit>
        <trans-unit id="23e626fe9c2ba60d897513a49a174cca86f33c64" translate="yes" xml:space="preserve">
          <source>Resolve host name.</source>
          <target state="translated">解决主机名问题。</target>
        </trans-unit>
        <trans-unit id="b746fa36d41b47804bf593057295da4f57fde063" translate="yes" xml:space="preserve">
          <source>Resolve recursive tuple expansion in eponymous template.</source>
          <target state="translated">解决同名模板中的递归元组扩展问题。</target>
        </trans-unit>
        <trans-unit id="d171f89f8496b90f48d29067d7a3b8eeb38cbfd1" translate="yes" xml:space="preserve">
          <source>Resolve type 'mt' to either type, symbol, or expression. If errors happened, resolved to Type.terror.</source>
          <target state="translated">将类型'mt'解析为类型、符号或表达式。如果发生错误,解析为Type.tror。</target>
        </trans-unit>
        <trans-unit id="480c7d8304d6e54ca530b156b2111b7eaf5daca1" translate="yes" xml:space="preserve">
          <source>Resolves an internal pointer to the full block allocated. Implementations that don't support this primitive should always return &lt;code&gt;Ternary.unknown&lt;/code&gt;.</source>
          <target state="translated">解析一个内部指针，指向分配的整个块。不支持该原语的实现应始终返回 &lt;code&gt;Ternary.unknown&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d7b2996046749e7b1014897e894a93ba894c735" translate="yes" xml:space="preserve">
          <source>Restore the original environment.</source>
          <target state="translated">恢复原环境。</target>
        </trans-unit>
        <trans-unit id="0e3a9c5b62f2be2064d3d964a9ef961f37a03948" translate="yes" xml:space="preserve">
          <source>Result Values From A Query</source>
          <target state="translated">查询的结果值</target>
        </trans-unit>
        <trans-unit id="14e9a8a65f95d4830439c26d294fabe9a68ef5c5" translate="yes" xml:space="preserve">
          <source>Result of &lt;code&gt;prefix&lt;/code&gt;/&lt;code&gt;suffix&lt;/code&gt; depending on argument (&lt;code&gt;U&lt;/code&gt; is any unqualified type, &lt;code&gt;Affix&lt;/code&gt; is &lt;code&gt;Prefix&lt;/code&gt; or &lt;code&gt;Suffix&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;prefix&lt;/code&gt; / &lt;code&gt;suffix&lt;/code&gt; 结果取决于参数（ &lt;code&gt;U&lt;/code&gt; 是任何非限定类型， &lt;code&gt;Affix&lt;/code&gt; 是 &lt;code&gt;Prefix&lt;/code&gt; 或 &lt;code&gt;Suffix&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="00745696fca51d33fca520d4f9fe669ebe681576" translate="yes" xml:space="preserve">
          <source>Results are undefined if |x| &amp;gt;= 2&lt;sup&gt;64&lt;/sup&gt;.</source>
          <target state="translated">如果| x |，结果是不确定的 &amp;gt; = 2 &lt;sup&gt;64&lt;/sup&gt;。</target>
        </trans-unit>
        <trans-unit id="20a4ed4ef565e8f5c963baf1f9915922d80dd17b" translate="yes" xml:space="preserve">
          <source>Resume all threads but the calling thread for &quot;stop the world&quot; garbage collection runs. This function must be called once for each preceding call to thread_suspendAll before the threads are actually resumed.</source>
          <target state="translated">恢复除调用线程外的所有线程,以便 &quot;停止世界 &quot;垃圾收集运行。在实际恢复线程之前,这个函数必须在每次调用 thread_suspendAll 之前被调用一次。</target>
        </trans-unit>
        <trans-unit id="bc0928161ff41e4d7d7a001aa80dafe900b42465" translate="yes" xml:space="preserve">
          <source>Resuming all other threads.</source>
          <target state="translated">恢复所有其他线程。</target>
        </trans-unit>
        <trans-unit id="703e161b48645d69ebec4c98b02ec6d09910e568" translate="yes" xml:space="preserve">
          <source>Retained Features</source>
          <target state="translated">保留功能</target>
        </trans-unit>
        <trans-unit id="9436610ae339b49f56637a6888f78a3bf39116b2" translate="yes" xml:space="preserve">
          <source>Rethrow &lt;code&gt;rethrow&lt;/code&gt;</source>
          <target state="translated">重新抛出 &lt;code&gt;rethrow&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98d578ae439e1b092e4a4e615d7b7397ef0334e7" translate="yes" xml:space="preserve">
          <source>Rethrow any unhandled exception which may have caused the current thread to terminate.</source>
          <target state="translated">重投任何可能导致当前线程终止的未处理异常。</target>
        </trans-unit>
        <trans-unit id="9130a10856483bfab6387863e636df689c68f2a7" translate="yes" xml:space="preserve">
          <source>Rethrow any unhandled exception which may have caused this fiber to terminate.</source>
          <target state="translated">重新抛出任何可能导致该光纤终止的未处理的异常。</target>
        </trans-unit>
        <trans-unit id="b192f2c54c63617f6ccccf4f1ccbcc987da3dfb4" translate="yes" xml:space="preserve">
          <source>Rethrow any unhandled exception which may have caused this thread to terminate.</source>
          <target state="translated">重投任何可能导致该线程终止的未处理的异常。</target>
        </trans-unit>
        <trans-unit id="f5afb7b65ef8795be2a474133d2b845f5c63d16f" translate="yes" xml:space="preserve">
          <source>Rethrows any exception thrown during the execution of the &lt;code&gt;Task&lt;/code&gt;.</source>
          <target state="translated">抛出执行 &lt;code&gt;Task&lt;/code&gt; 期间抛出的任何异常。</target>
        </trans-unit>
        <trans-unit id="04939179a95512f6a50b3cd0097445c75c03c0c5" translate="yes" xml:space="preserve">
          <source>Retrieve and clear error status</source>
          <target state="translated">检索和清除错误状态</target>
        </trans-unit>
        <trans-unit id="0b8be3a295e236f6ec47e43018fad28da700853d" translate="yes" xml:space="preserve">
          <source>Retrieve and return the next value that is of type T.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfff5e27469c834715c537fdaa06f3d69dbc3529" translate="yes" xml:space="preserve">
          <source>Retrieve and store in parmn the next value that is of type T.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d24e9ee5fe0654e7043b0779b9118f6c0254dc" translate="yes" xml:space="preserve">
          <source>Retrieve and store through parmn the next value that is of TypeInfo ti. Used when the static type is not known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1a4d2ddb091e2ed5c1df8126e43168969a2ea2" translate="yes" xml:space="preserve">
          <source>Retrieve the error message for the most recently encountered network error.</source>
          <target state="translated">检索最近遇到的网络错误的错误信息。</target>
        </trans-unit>
        <trans-unit id="3ccfcce95184dd63b688eab71bd3c81c72b77f02" translate="yes" xml:space="preserve">
          <source>Retrieve the mutex for a database connection</source>
          <target state="translated">检索数据库连接的mutex。</target>
        </trans-unit>
        <trans-unit id="fd054d14944b7f8962b0dae166fba959f6ef5524" translate="yes" xml:space="preserve">
          <source>Retrieves the members of an enumerated type &lt;code&gt;enum E&lt;/code&gt;.</source>
          <target state="translated">检索枚举类型 &lt;code&gt;enum E&lt;/code&gt; 的成员。</target>
        </trans-unit>
        <trans-unit id="07a895e230fd42b88e4f200ba2424bd521ff0150" translate="yes" xml:space="preserve">
          <source>Retrieves the value of the environment variable with the given &lt;code&gt;name&lt;/code&gt;, or a default value if the variable doesn't exist.</source>
          <target state="translated">检索具有给定 &lt;code&gt;name&lt;/code&gt; 的环境变量的值，如果该变量不存在，则返回默认值。</target>
        </trans-unit>
        <trans-unit id="fe03c3b4a6a960b5acf0f284f07d69430246cd47" translate="yes" xml:space="preserve">
          <source>Retrieves the value of the environment variable with the given &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">检索具有给定 &lt;code&gt;name&lt;/code&gt; 的环境变量的值。</target>
        </trans-unit>
        <trans-unit id="d1327c9133feffd8b254491a96ec4b023b23972e" translate="yes" xml:space="preserve">
          <source>Retrieving Statement SQL</source>
          <target state="translated">检索语句SQL</target>
        </trans-unit>
        <trans-unit id="24f096b221f9534bcad007f2b5a32b490950b5b5" translate="yes" xml:space="preserve">
          <source>Return</source>
          <target state="translated">Return</target>
        </trans-unit>
        <trans-unit id="5076efac4add13272bee6ddd5339fd9cda299560" translate="yes" xml:space="preserve">
          <source>Return !=0 if expression is an lvalue.</source>
          <target state="translated">如果表达式是l值,返回 !=0。</target>
        </trans-unit>
        <trans-unit id="8e1581a5f169c76fa8c14988eaaae171290c12aa" translate="yes" xml:space="preserve">
          <source>Return !=0 if extensions match.</source>
          <target state="translated">如果分机匹配,返回 !=0。</target>
        </trans-unit>
        <trans-unit id="dacbd18f9e3c60c211bc1336b50a6100f6993589" translate="yes" xml:space="preserve">
          <source>Return !=0 if modfrom can be implicitly converted to modto</source>
          <target state="translated">如果modfrom可以隐式转换为modto,返回 !=0。</target>
        </trans-unit>
        <trans-unit id="5eaea1adde418b1924b1f691d2ffcede135bc038" translate="yes" xml:space="preserve">
          <source>Return !=0 if the type or any of its subtypes is wild.</source>
          <target state="translated">如果该类型或其任何子类型是野生的,返回 !=0。</target>
        </trans-unit>
        <trans-unit id="813830fa39348b3cac6aa17105d4deb19aac21bb" translate="yes" xml:space="preserve">
          <source>Return !=0 if type has pointers that need to be scanned by the GC during a collection cycle.</source>
          <target state="translated">如果类型中有需要GC在收集周期内扫描的指针,返回 !=0。</target>
        </trans-unit>
        <trans-unit id="2d22ef1555d405cb20620e62b486706f65de39cb" translate="yes" xml:space="preserve">
          <source>Return !=0 if unicode alpha. Use table from C99 Appendix D.</source>
          <target state="translated">如果是unicode alpha,返回 !=0。使用C99附录D的表格。</target>
        </trans-unit>
        <trans-unit id="7fb67cbae9c13ed76633b46abf739b76f9c294e1" translate="yes" xml:space="preserve">
          <source>Return 0 from the callback to signal success, return 1 to signal error and make curl close the socket</source>
          <target state="translated">从回调中返回0表示成功,返回1表示错误,并使curl关闭socket。</target>
        </trans-unit>
        <trans-unit id="466cf5e4eacffab4b5439c5f4c484cff12bded87" translate="yes" xml:space="preserve">
          <source>Return 0 from the callback to signal success, return non-zero to abort transfer</source>
          <target state="translated">从回调中返回0表示成功,返回非零表示中止传输。</target>
        </trans-unit>
        <trans-unit id="3363b44414c7c859cdedb1714e3b8af576d7fa24" translate="yes" xml:space="preserve">
          <source>Return 0 from the callback to signal success, return non-zero to abort transfer.</source>
          <target state="translated">从回调中返回0表示成功,返回非零表示中止传输。</target>
        </trans-unit>
        <trans-unit id="c9646219088fb7ede96a566f8d70a3a4eec4c914" translate="yes" xml:space="preserve">
          <source>Return 0 to signal success, return non-zero to abort transfer.</source>
          <target state="translated">返回0表示成功,返回非零表示中止传输。</target>
        </trans-unit>
        <trans-unit id="5735756d12a32be153ec40823e5e91495fbf0fff" translate="yes" xml:space="preserve">
          <source>Return 1 if sign bit of e is set, 0 if not.</source>
          <target state="translated">如果e的符号位被设置,则返回1,如果没有,则返回0。</target>
        </trans-unit>
        <trans-unit id="82f89a6b75799e6fbe68dea890823428de349d71" translate="yes" xml:space="preserve">
          <source>Return MATCH level of implicitly converting e to type t. Don't do the actual cast; don't change e.</source>
          <target state="translated">返回将e隐式转换为t类型的MATCH级别,不要进行实际的转换,不要改变e。</target>
        </trans-unit>
        <trans-unit id="24e287b96c21c16dc00195e6a2518bac14d25d32" translate="yes" xml:space="preserve">
          <source>Return MATCH.exact or MATCH.constant if a method of type '() modfrom' can call a method of type '() modto'.</source>
          <target state="translated">如果'()modfrom'类型的方法可以调用'()modto'类型的方法,则返回MATCH.精确或MATCH.常量。</target>
        </trans-unit>
        <trans-unit id="6b5a1d52cb44bff3d519554e6603c5f2ef79882f" translate="yes" xml:space="preserve">
          <source>Return Ref Parameters</source>
          <target state="translated">返回参考参数</target>
        </trans-unit>
        <trans-unit id="40f3a4705ebbb407ee0cdc99059fa5fe5300eb28" translate="yes" xml:space="preserve">
          <source>Return Scope Parameters</source>
          <target state="translated">返回范围参数</target>
        </trans-unit>
        <trans-unit id="b568fd0cda9a73719dc7007f78b5366b6ca2051e" translate="yes" xml:space="preserve">
          <source>Return Statement</source>
          <target state="translated">回报声明</target>
        </trans-unit>
        <trans-unit id="8cfd6fed2b7cd44c8a1d3921d26de3c89f4137b3" translate="yes" xml:space="preserve">
          <source>Return The Filename For A Database Connection</source>
          <target state="translated">返回数据库连接的文件名</target>
        </trans-unit>
        <trans-unit id="7605e4b76df0d8f628e31f2c3d6b09f231afd493" translate="yes" xml:space="preserve">
          <source>Return The Size Of An Open BLOB</source>
          <target state="translated">返回打开的BLOB的大小</target>
        </trans-unit>
        <trans-unit id="4ed1a51e3c7c6cf43a3633b3e58f69e74b9dd263" translate="yes" xml:space="preserve">
          <source>Return Value</source>
          <target state="translated">返回值</target>
        </trans-unit>
        <trans-unit id="dd6416148e17adaeaccfc9b6b7d1e682c603bb71" translate="yes" xml:space="preserve">
          <source>Return a GC allocated array of all keys</source>
          <target state="translated">返回一个GC分配的所有键的数组</target>
        </trans-unit>
        <trans-unit id="e51ad1ab975119086f7ac92aca0a3e9b0bc6500f" translate="yes" xml:space="preserve">
          <source>Return a GC allocated array of all values</source>
          <target state="translated">返回一个GC分配的所有值的数组</target>
        </trans-unit>
        <trans-unit id="85b29e7222f48991ae7292690eb4ff4d837309db" translate="yes" xml:space="preserve">
          <source>Return a copy of this type with all attributes null-initialized. Useful for creating a type with different modifiers.</source>
          <target state="translated">返回此类型的一个副本,所有属性初始化为空。用于创建一个具有不同修饰符的类型。</target>
        </trans-unit>
        <trans-unit id="f10d29706c4a0fdf4790fac9d2887fe37bc15218" translate="yes" xml:space="preserve">
          <source>Return a lazy range of the indices of set bits.</source>
          <target state="translated">返回设置位的指数的懒惰范围。</target>
        </trans-unit>
        <trans-unit id="3c3bd314993cb4f7ebe64ce8ccdfda96b5e89c4f" translate="yes" xml:space="preserve">
          <source>Return a range advanced to within &lt;code&gt;_n&lt;/code&gt; elements of the end of &lt;code&gt;range&lt;/code&gt;.</source>
          <target state="translated">返回范围末尾的 &lt;code&gt;_n&lt;/code&gt; 个元素内的 &lt;code&gt;range&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5347c17867337569c491fc8294864697ba1401bd" translate="yes" xml:space="preserve">
          <source>Return a range advanced to within &lt;code&gt;n&lt;/code&gt; elements of the end of the given range.</source>
          <target state="translated">返回超出给定范围末尾 &lt;code&gt;n&lt;/code&gt; 个元素内的范围。</target>
        </trans-unit>
        <trans-unit id="64584cef9fbdd944a607b7c32156e3abfbfa767a" translate="yes" xml:space="preserve">
          <source>Return a string representation of this BitArray.</source>
          <target state="translated">返回这个BitArray的字符串表示。</target>
        </trans-unit>
        <trans-unit id="909366bd83575cfd59995d950c2eec03f130a564" translate="yes" xml:space="preserve">
          <source>Return aligned 'offset' if it is of size 'size'.</source>
          <target state="translated">如果大小为 &quot;size&quot;,则返回对齐的 &quot;offset&quot;。</target>
        </trans-unit>
        <trans-unit id="7bac63114467240663566e592e5e86e0bef9bef2" translate="yes" xml:space="preserve">
          <source>Return alignment of type</source>
          <target state="translated">返回对齐类型</target>
        </trans-unit>
        <trans-unit id="14099585f9505605deb2190e1aae416384628c38" translate="yes" xml:space="preserve">
          <source>Return alignment to use for this type.</source>
          <target state="translated">返回用于此类型的对齐方式。</target>
        </trans-unit>
        <trans-unit id="78bd5594d8bf94c5bb250c8135cb0038193e109d" translate="yes" xml:space="preserve">
          <source>Return back end type corresponding to D front end type.</source>
          <target state="translated">返回D前端类型对应的后端类型。</target>
        </trans-unit>
        <trans-unit id="82367e299b290bd0a098fc1001f08ec0e0513303" translate="yes" xml:space="preserve">
          <source>Return canonical version of name in a malloc'd buffer. This code is high risk.</source>
          <target state="translated">在malloc'd缓冲区中返回名称的规范版本。这段代码的风险很高。</target>
        </trans-unit>
        <trans-unit id="9c156771844298d98d35a5f40c30a796e519426a" translate="yes" xml:space="preserve">
          <source>Return code of the application</source>
          <target state="translated">应用程序的返回代码</target>
        </trans-unit>
        <trans-unit id="944e1e4d489d2d2acdea588d0a19a936485871df" translate="yes" xml:space="preserve">
          <source>Return default initializer. If the type should be initialized to all zeros, an array with a null ptr and a length equal to the type size will be returned. For static arrays, this returns the default initializer for a single element of the array, use &lt;code&gt;tsize&lt;/code&gt; to get the correct size.</source>
          <target state="translated">返回默认的初始化程序。如果应将类型初始化为全零，则将返回一个ptr为空且长度等于类型大小的数组。对于静态数组，这将为该数组的单个元素返回默认的初始化程序，并使用 &lt;code&gt;tsize&lt;/code&gt; 获取正确的大小。</target>
        </trans-unit>
        <trans-unit id="4053dc0e9bdb3ffb335d94322fd6ee14fabd7bb6" translate="yes" xml:space="preserve">
          <source>Return elem that evaluates to the static frame pointer for function fd. If fd is a member function, the returned expression will compute the value of fd's 'this' variable. 'fdp' is the parent of 'fd' if the frame pointer is being used to call 'fd'. 'origSc' is the original scope we inlined from. This routine is critical for implementing nested functions.</source>
          <target state="translated">返回函数fd的静态帧指针的elem。如果fd是一个成员函数,返回的表达式将计算fd的'this'变量的值。如果帧指针被用来调用'fd','fdp'是'fd'的父函数。'origSc'是我们内联的原始作用域。这个例程对于实现嵌套函数是至关重要的。</target>
        </trans-unit>
        <trans-unit id="9fd03b424640910e6278c70e669b1d4e876e9f5f" translate="yes" xml:space="preserve">
          <source>Return file name without extension.</source>
          <target state="translated">返回没有扩展名的文件名。</target>
        </trans-unit>
        <trans-unit id="07fe9514789d2f4cd0e9b4e57ce0ed5505c13b37" translate="yes" xml:space="preserve">
          <source>Return filename name excluding path (read-only).</source>
          <target state="translated">返回文件名,不包括路径(只读)。</target>
        </trans-unit>
        <trans-unit id="22c4aed7f4185313b77e553930796acded83814f" translate="yes" xml:space="preserve">
          <source>Return first parameter &lt;code&gt;p&lt;/code&gt; that passes an &lt;code&gt;if (p)&lt;/code&gt; test, e.g. &lt;code&gt;either(0, 42, 43)&lt;/code&gt; returns &lt;code&gt;42&lt;/code&gt;.</source>
          <target state="translated">返回通过 &lt;code&gt;if (p)&lt;/code&gt; 测试的第一个参数 &lt;code&gt;p&lt;/code&gt; ，例如 &lt;code&gt;either(0, 42, 43)&lt;/code&gt; 返回 &lt;code&gt;42&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="161ebf2251616309e44b6d0f705eb7df9207ac30" translate="yes" xml:space="preserve">
          <source>Return info used by the garbage collector to do precise collection.</source>
          <target state="translated">返回垃圾收集器用来进行精确收集的信息。</target>
        </trans-unit>
        <trans-unit id="1edd17a195e17c6d1c9dfaec1964d158a7594886" translate="yes" xml:space="preserve">
          <source>Return internal info on arguments fitting into 8byte. See X86-64 ABI 3.2.3</source>
          <target state="translated">返回适合8byte的参数的内部信息。参见X86-64 ABI 3.2.3。</target>
        </trans-unit>
        <trans-unit id="52ee2244a124dcf6a3442090efe2b150aad23b24" translate="yes" xml:space="preserve">
          <source>Return nonzero if this &lt;code&gt;Socket&lt;/code&gt; is in the collection.</source>
          <target state="translated">如果此 &lt;code&gt;Socket&lt;/code&gt; 在集合中，则返回非零值。</target>
        </trans-unit>
        <trans-unit id="5bcb75882578fa152d0a3b8228a6bba059bb03c0" translate="yes" xml:space="preserve">
          <source>Return number of bytes in UTF character.</source>
          <target state="translated">返回UTF字符的字节数。</target>
        </trans-unit>
        <trans-unit id="6b00e7eeba7dd7b1983912d6619513007b5842a8" translate="yes" xml:space="preserve">
          <source>Return path portion of str. returned string is newly allocated Path does not include trailing path separator.</source>
          <target state="translated">返回str的路径部分,返回的字符串是新分配的路径,不包含尾部的路径分隔符。</target>
        </trans-unit>
        <trans-unit id="9e32c0be2d58d4be865d007c41bc8ed55177dfba" translate="yes" xml:space="preserve">
          <source>Return ref parameters are used with &lt;a href=&quot;#ref-functions&quot;&gt;ref functions&lt;/a&gt; to ensure that the returned reference will not outlive the matching argument's lifetime.</source>
          <target state="translated">返回参考参数与&lt;a href=&quot;#ref-functions&quot;&gt;参考函数&lt;/a&gt;一起使用，以确保返回的参考不会超过匹配参数的生命周期。</target>
        </trans-unit>
        <trans-unit id="618c532a610bb89f14f3a07343fb126a0476acfe" translate="yes" xml:space="preserve">
          <source>Return size of data.</source>
          <target state="translated">返回数据的大小。</target>
        </trans-unit>
        <trans-unit id="6d6fc86109cd8c5c3e47783737daf2ca750d004d" translate="yes" xml:space="preserve">
          <source>Return string that is the 'successor' to s[]. If the rightmost character is a-zA-Z0-9, it is incremented within its case or digits. If it generates a carry, the process is repeated with the one to its immediate left.</source>
          <target state="translated">返回s[]的'继承者'字符串。如果最右边的字符是a-zA-Z0-9,则在其大小写或数字范围内递增。如果它产生了一个carry,那么这个过程将与紧挨着它左边的那个字符重复。</target>
        </trans-unit>
        <trans-unit id="44c54a5951a97047f68a283b62e636ee8bfac1cb" translate="yes" xml:space="preserve">
          <source>Return the Tid of the thread which spawned the caller's thread.</source>
          <target state="translated">返回产生调用者线程的线程的Tid。</target>
        </trans-unit>
        <trans-unit id="dae6425ebb00694c8e2b8f43749eb65eb305e7fc" translate="yes" xml:space="preserve">
          <source>Return the UUID as a string in the canonical form.</source>
          <target state="translated">返回UUID作为一个规范形式的字符串。</target>
        </trans-unit>
        <trans-unit id="f5d15e798ef426e1020ac0483edb55fff7505a66" translate="yes" xml:space="preserve">
          <source>Return the current trace handler</source>
          <target state="translated">返回当前的跟踪处理程序</target>
        </trans-unit>
        <trans-unit id="5124903d5287a5fa60d6aa7723c70c0683f914e9" translate="yes" xml:space="preserve">
          <source>Return the given name as an absolute path</source>
          <target state="translated">返回给定名称作为绝对路径</target>
        </trans-unit>
        <trans-unit id="6712230d551ab31ce097306bbbc187117b86954e" translate="yes" xml:space="preserve">
          <source>Return the greatest number less than x that is representable as a real; thus, it gives the previous point on the IEEE number line.</source>
          <target state="translated">返回可表示为实数的小于x的最大数;因此,它给出了IEEE数线上的前一点。</target>
        </trans-unit>
        <trans-unit id="50cbdb762f2bb55c31094ad5fc1de24f5b8a351f" translate="yes" xml:space="preserve">
          <source>Return the least number greater than x that is representable as a real; thus, it gives the next point on the IEEE number line.</source>
          <target state="translated">返回可表示为实数的大于x的最小数;因此,它给出了IEEE数线上的下一点。</target>
        </trans-unit>
        <trans-unit id="9961e81d7ecf72d3873e2aee6f0f99fd21867c8e" translate="yes" xml:space="preserve">
          <source>Return the mask that an integral type will fit into.</source>
          <target state="translated">返回一个积分类型将适合的掩码。</target>
        </trans-unit>
        <trans-unit id="b37d2aa3fd3373873e57e3b908a867dc0ec62fd7" translate="yes" xml:space="preserve">
          <source>Return the number of code units the string would be if it were re-encoded as tynto.</source>
          <target state="translated">返回字符串被重新编码为tynto时的代码单位数。</target>
        </trans-unit>
        <trans-unit id="64be8221f99567047f7d41a30b0f7a629422450c" translate="yes" xml:space="preserve">
          <source>Return the size of an allocation</source>
          <target state="translated">返回分配额的大小</target>
        </trans-unit>
        <trans-unit id="e3de1268dd617a3c170c29afc19a38c699eb49aa" translate="yes" xml:space="preserve">
          <source>Return the value of x rounded to the nearest integer.</source>
          <target state="translated">返回x的值,四舍五入到最接近的整数。</target>
        </trans-unit>
        <trans-unit id="77386a55b3af47db5d6720fdbb34821632594ea1" translate="yes" xml:space="preserve">
          <source>Return the value of x rounded to the nearest integer. If the fractional part of x is exactly 0.5, the return value is rounded away from zero.</source>
          <target state="translated">返回x的值,四舍五入到最接近的整数。如果x的小数部分正好是0.5,则返回值从零开始四舍五入。</target>
        </trans-unit>
        <trans-unit id="eba0bf1594868083254398a7aeb4b4f670dfbd1e" translate="yes" xml:space="preserve">
          <source>Return this type's modifier name.</source>
          <target state="translated">返回此类型的修改器名称。</target>
        </trans-unit>
        <trans-unit id="815f69369aee2a4e4634f0ce87bd2dced618858c" translate="yes" xml:space="preserve">
          <source>Return true if agg1 and agg2 are pointers to the same memory block</source>
          <target state="translated">如果agg1和agg2是指向同一个内存块的指针,则返回true。</target>
        </trans-unit>
        <trans-unit id="bb42b6838897246be79e8ac1836c1c9893f5258e" translate="yes" xml:space="preserve">
          <source>Return true if any of the members are static ctors or static dtors, or if any members have members that are.</source>
          <target state="translated">如果有成员是静态的ctor或静态的dtors,或者有成员是静态的,返回true。</target>
        </trans-unit>
        <trans-unit id="a2affd967703203aa22f06ba3f47f616207aaf70" translate="yes" xml:space="preserve">
          <source>Return true if dt contains pointers (requires relocations).</source>
          <target state="translated">如果dt包含指针,则返回true(需要重新定位)。</target>
        </trans-unit>
        <trans-unit id="a704680e5a2358a4b21f56a8e14e64261e3a1fb8" translate="yes" xml:space="preserve">
          <source>Return true if dt is all zeros.</source>
          <target state="translated">如果dt全部为0,则返回true。</target>
        </trans-unit>
        <trans-unit id="a4b6c1fc0091c1a3a5bb73cc9fc2a1b7c342228c" translate="yes" xml:space="preserve">
          <source>Return true if e could be valid only as a template value parameter. Return false if it might be an alias or tuple. (Note that even in this case, it could still turn out to be a value).</source>
          <target state="translated">如果e只能作为模板值参数有效,则返回true。如果它可能是一个别名或元组,则返回false。(注意,即使在这种情况下,它也可能是一个值)。</target>
        </trans-unit>
        <trans-unit id="84791c44b623e37860c47666951c5280ba6fc7be" translate="yes" xml:space="preserve">
          <source>Return true if module imports itself.</source>
          <target state="translated">如果模块自己导入,则返回true。</target>
        </trans-unit>
        <trans-unit id="dc1399a76e32df10691c532a68ee824eb2a87c93" translate="yes" xml:space="preserve">
          <source>Return true if module imports root module.</source>
          <target state="translated">如果模块导入根模块,返回true。</target>
        </trans-unit>
        <trans-unit id="b8d1cff003fcd386ae3bf958175ea899758e9ab2" translate="yes" xml:space="preserve">
          <source>Return true if size of data is 0.</source>
          <target state="translated">如果数据大小为0,则返回true。</target>
        </trans-unit>
        <trans-unit id="6e045f7f2adea7c61e3f3faafea8ac2112270ae8" translate="yes" xml:space="preserve">
          <source>Return true if there are lazy parameters.</source>
          <target state="translated">如果有懒惰参数,返回true。</target>
        </trans-unit>
        <trans-unit id="e83369e1edea2b1de00e12e9114bab39ec8a35b1" translate="yes" xml:space="preserve">
          <source>Return true if variable needs to call the destructor.</source>
          <target state="translated">如果变量需要调用destructor,则返回true。</target>
        </trans-unit>
        <trans-unit id="e6f382b6d6732c45656ed7d192c05094bace1124" translate="yes" xml:space="preserve">
          <source>Return true if we can take the address of this variable.</source>
          <target state="translated">如果我们可以取这个变量的地址,则返回true。</target>
        </trans-unit>
        <trans-unit id="96335248606b0ff777f182f31ffdf9d3299473ff" translate="yes" xml:space="preserve">
          <source>Return type with the top level of it being mutable.</source>
          <target state="translated">返回类型,它的顶层是可以改变的。</target>
        </trans-unit>
        <trans-unit id="e7370338afdd3f0d3caf67e9c25b67a935b91773" translate="yes" xml:space="preserve">
          <source>Return whether &lt;code&gt;c&lt;/code&gt; is a Unicode lowercase &lt;a href=&quot;#Character&quot;&gt;character&lt;/a&gt;.</source>
          <target state="translated">返回 &lt;code&gt;c&lt;/code&gt; 是否为Unicode小写&lt;a href=&quot;#Character&quot;&gt;字符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8d5dd30c83ee35b4f635ccc0ec48b106e9b9c166" translate="yes" xml:space="preserve">
          <source>Return whether &lt;code&gt;c&lt;/code&gt; is a Unicode uppercase &lt;a href=&quot;#Character&quot;&gt;character&lt;/a&gt;.</source>
          <target state="translated">返回 &lt;code&gt;c&lt;/code&gt; 是否为Unicode大写&lt;a href=&quot;#Character&quot;&gt;字符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aa6f79138c08ba3706b95a32d76889ad1576f327" translate="yes" xml:space="preserve">
          <source>ReturnStatement</source>
          <target state="translated">ReturnStatement</target>
        </trans-unit>
        <trans-unit id="9fee2a258147624ebdf57aeaaa981ddfd6b4674c" translate="yes" xml:space="preserve">
          <source>ReturnType!fun &lt;strong id=&quot;memoize&quot;&gt;memoize&lt;/strong&gt;(alias fun)(Parameters!fun args);</source>
          <target state="translated">returnType！fun &lt;strong id=&quot;memoize&quot;&gt;memoize&lt;/strong&gt;（alias fun）（参数！fun args）;</target>
        </trans-unit>
        <trans-unit id="f0413c4ab273e98a4edc165fa833c49ffe92fc6d" translate="yes" xml:space="preserve">
          <source>ReturnType!fun &lt;strong id=&quot;memoize&quot;&gt;memoize&lt;/strong&gt;(alias fun, uint maxSize)(Parameters!fun args);</source>
          <target state="translated">returnType！fun &lt;strong id=&quot;memoize&quot;&gt;memoize&lt;/strong&gt;（alias fun，uint maxSize）（参数！fun args）;</target>
        </trans-unit>
        <trans-unit id="9c6c9e9250bee2a67f71ce0b8269b7c304840e28" translate="yes" xml:space="preserve">
          <source>Returned values are strictly typed with &lt;code&gt;E&lt;/code&gt;. Thus, the following code does not work without the explicit cast:</source>
          <target state="translated">返回值严格用 &lt;code&gt;E&lt;/code&gt; 键入。因此，如果没有显式强制转换，以下代码将无法工作：</target>
        </trans-unit>
        <trans-unit id="a6ac97e5a779ad777b193998ab3efe07d29d58c5" translate="yes" xml:space="preserve">
          <source>Returning a 0 value.</source>
          <target state="translated">返回一个0值。</target>
        </trans-unit>
        <trans-unit id="c73e68bfada258b418ac816e2d5d678f4463decc" translate="yes" xml:space="preserve">
          <source>Returning a &lt;code&gt;ubyte[n]&lt;/code&gt; helps prevent accidentally using a swapped value as a regular one (and in the case of floating point values, it's necessary, because the FPU will mess up any swapped floating point values. So, you can't actually have swapped floating point values as floating point values).</source>
          <target state="translated">返回一个 &lt;code&gt;ubyte[n]&lt;/code&gt; 有助于防止意外地将交换后的值用作常规值（对于浮点值，则是必要的，因为FPU会弄乱任何交换后的浮点值。因此，实际上您不能交换浮点值作为浮点值）。</target>
        </trans-unit>
        <trans-unit id="93145fea4e51302eb070f8da6bb9a6d60e8f08fa" translate="yes" xml:space="preserve">
          <source>Returning a NULL pointer.</source>
          <target state="translated">返回一个NULL指针。</target>
        </trans-unit>
        <trans-unit id="c2b3f353baca74d789f1759c6379b6dde0b73242" translate="yes" xml:space="preserve">
          <source>Returning a non-zero error code.</source>
          <target state="translated">返回一个非零的错误代码。</target>
        </trans-unit>
        <trans-unit id="2e985b58b9c2ef6cf6a8831e1ffcc745302653df" translate="yes" xml:space="preserve">
          <source>Returning a subtype of &lt;a href=&quot;std_typecons#Tuple&quot;&gt;&lt;code&gt;std.typecons.Tuple&lt;/code&gt;&lt;/a&gt; enables the following convenient idiom:</source>
          <target state="translated">返回&lt;a href=&quot;std_typecons#Tuple&quot;&gt; &lt;code&gt;std.typecons.Tuple&lt;/code&gt; &lt;/a&gt;的子类型将启用以下方便的习惯用法：</target>
        </trans-unit>
        <trans-unit id="182cd17c7c23cdc09eba2a4f2e7e149460a4f29b" translate="yes" xml:space="preserve">
          <source>Returning the address of a &lt;code&gt;ref&lt;/code&gt; variable is also checked.</source>
          <target state="translated">还检查了返回 &lt;code&gt;ref&lt;/code&gt; 变量的地址。</target>
        </trans-unit>
        <trans-unit id="6c27c79f2e4552af535e1d49e91664f690a08cee" translate="yes" xml:space="preserve">
          <source>Returning the current thread to whatever work it was doing.</source>
          <target state="translated">将当前的线程恢复到它正在做的任何工作。</target>
        </trans-unit>
        <trans-unit id="6984d70f1bef25da719e6dc8594bb161e58e8dd9" translate="yes" xml:space="preserve">
          <source>Returning values in registers is often faster, so this can be used as a check on a hot function to ensure it is using the fastest method.</source>
          <target state="translated">在寄存器中返回值通常更快,所以这可以作为对热函数的检查,以确保它使用最快的方法。</target>
        </trans-unit>
        <trans-unit id="ed1d0baa1befb7365f80c956f685b4164ce4abc4" translate="yes" xml:space="preserve">
          <source>Returns (x * y) + z, rounding only once according to the current rounding mode.</source>
          <target state="translated">返回(x*y)+z,根据当前的四舍五入模式只取一次整数。</target>
        </trans-unit>
        <trans-unit id="60778e683e6a3e85209303f22d279d8091b6677d" translate="yes" xml:space="preserve">
          <source>Returns -1 if &amp;Gamma;(x) &amp;lt; 0, +1 if &amp;Gamma;(x) &amp;gt; 0, NAN if sign is indeterminate.</source>
          <target state="translated">如果&amp;Gamma;（x）&amp;lt;0，则返回-1；如果&amp;Gamma;（x）&amp;gt; 0，则返回+1；如果符号不确定，则返回NAN。</target>
        </trans-unit>
        <trans-unit id="ec98e787d4dd28ab0e557aa099033d515eca2e4c" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;http://en.wikipedia.org/wiki/Sine&quot;&gt;sine&lt;/a&gt; of x. x is in &lt;a href=&quot;http://en.wikipedia.org/wiki/Radian&quot;&gt;radians&lt;/a&gt;.</source>
          <target state="translated">返回x的&lt;a href=&quot;http://en.wikipedia.org/wiki/Sine&quot;&gt;正弦&lt;/a&gt;值。x以&lt;a href=&quot;http://en.wikipedia.org/wiki/Radian&quot;&gt;弧度为单位&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="534252ff9584903ee29007cae24024402e5d5549" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;x &amp;lt; 0&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt; if &lt;code&gt;x == 0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt; if &lt;code&gt;x &amp;gt; 0&lt;/code&gt;, and NAN if x==NAN.</source>
          <target state="translated">返回 &lt;code&gt;-1&lt;/code&gt; 如果 &lt;code&gt;x &amp;lt; 0&lt;/code&gt; ， &lt;code&gt;x&lt;/code&gt; 如果 &lt;code&gt;x == 0&lt;/code&gt; ， &lt;code&gt;1&lt;/code&gt; 如果 &lt;code&gt;x &amp;gt; 0&lt;/code&gt; ，和NAN如果x == NAN。</target>
        </trans-unit>
        <trans-unit id="56ad949e95f8129ac1bdde6e3c05a3b620f35036" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Ternary.no&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;Ternary.no&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="162c4b360f19eb0223970b32348aa2468143ae82" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Ternary.yes&lt;/code&gt; if &lt;code&gt;b&lt;/code&gt; belongs to the &lt;code&gt;BitmappedBlock&lt;/code&gt; object, &lt;code&gt;Ternary.no&lt;/code&gt; otherwise. Never returns &lt;code&gt;Ternary.unkown&lt;/code&gt;. (This method is somewhat tolerant in that accepts an interior slice.)</source>
          <target state="translated">返回 &lt;code&gt;Ternary.yes&lt;/code&gt; 如果 &lt;code&gt;b&lt;/code&gt; 属于 &lt;code&gt;BitmappedBlock&lt;/code&gt; 对象， &lt;code&gt;Ternary.no&lt;/code&gt; 否则。从不返回 &lt;code&gt;Ternary.unkown&lt;/code&gt; 。（此方法在接受内部切片方面有些宽容。）</target>
        </trans-unit>
        <trans-unit id="8ceb97bd9a5df5ae709b59070999702eafaa3c90" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Ternary.yes&lt;/code&gt; if &lt;code&gt;b&lt;/code&gt; belongs to the &lt;code&gt;SharedBitmappedBlock&lt;/code&gt; object, &lt;code&gt;Ternary.no&lt;/code&gt; otherwise. Never returns &lt;code&gt;Ternary.unkown&lt;/code&gt;. (This method is somewhat tolerant in that accepts an interior slice.)</source>
          <target state="translated">返回 &lt;code&gt;Ternary.yes&lt;/code&gt; 如果 &lt;code&gt;b&lt;/code&gt; 属于 &lt;code&gt;SharedBitmappedBlock&lt;/code&gt; 对象， &lt;code&gt;Ternary.no&lt;/code&gt; 否则。从不返回 &lt;code&gt;Ternary.unkown&lt;/code&gt; 。（此方法在接受内部切片方面有些宽容。）</target>
        </trans-unit>
        <trans-unit id="aa0ae7e27a4d74ee8d3cc9b782715b16198cb676" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Ternary.yes&lt;/code&gt; if &lt;code&gt;b&lt;/code&gt; has been allocated with this allocator. An allocator should define this method only if it can decide on ownership precisely and fast (in constant time, logarithmic time, or linear time with a low multiplication factor). Traditional allocators such as the C heap do not define such functionality. If &lt;code&gt;b is null&lt;/code&gt;, the allocator shall return &lt;code&gt;Ternary.no&lt;/code&gt;, i.e. no allocator owns the &lt;code&gt;null&lt;/code&gt; slice.</source>
          <target state="translated">如果已经使用此分配器分配了 &lt;code&gt;b&lt;/code&gt; ,则返回 &lt;code&gt;Ternary.yes&lt;/code&gt; 。仅当分配器可以精确而快速地决定所有权时（恒定时间，对数时间或乘法因子低的线性时间），才应定义此方法。传统的分配器（例如C堆）未定义此类功能。如果 &lt;code&gt;b is null&lt;/code&gt; ，则分配器应返回 &lt;code&gt;Ternary.no&lt;/code&gt; ，即没有分配器拥有 &lt;code&gt;null&lt;/code&gt; 片。</target>
        </trans-unit>
        <trans-unit id="cc43b850aae4fdfc4d7d9d18eab4228e8c3f8f7a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Ternary.yes&lt;/code&gt; if &lt;code&gt;b&lt;/code&gt; is the result of a previous allocation, &lt;code&gt;Ternary.no&lt;/code&gt; otherwise.</source>
          <target state="translated">返回 &lt;code&gt;Ternary.yes&lt;/code&gt; 如果 &lt;code&gt;b&lt;/code&gt; 是一个以前的分配，结果 &lt;code&gt;Ternary.no&lt;/code&gt; 否则。</target>
        </trans-unit>
        <trans-unit id="1428bbb4302db4dd1b3f636985f6ddcbfc4d61a2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Ternary.yes&lt;/code&gt; if and only if the allocator holds no memory (i.e. no allocation has occurred, or all allocations have been deallocated).</source>
          <target state="translated">当且仅当分配器不持有任何内存（即未发生分配，或所有分配都已被释放）时，才返回 &lt;code&gt;Ternary.yes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c1c97d1779f0a6a9209ed489a0132919b1507b6d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Ternary.yes&lt;/code&gt; if no allocators are currently active, &lt;code&gt;Ternary.no&lt;/code&gt; otherwise. This methods never returns &lt;code&gt;Ternary.unknown&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;Ternary.yes&lt;/code&gt; 如果没有分配器是目前活跃， &lt;code&gt;Ternary.no&lt;/code&gt; 否则。此方法永远不会返回 &lt;code&gt;Ternary.unknown&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0df29a7d41d84a915ace0d89d94e1699b80dcff7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Ternary.yes&lt;/code&gt; if no memory has been allocated in this region, &lt;code&gt;Ternary.no&lt;/code&gt; otherwise. (Never returns &lt;code&gt;Ternary.unknown&lt;/code&gt;.)</source>
          <target state="translated">返回 &lt;code&gt;Ternary.yes&lt;/code&gt; 如果没有记忆已经在这一地区，被分配 &lt;code&gt;Ternary.no&lt;/code&gt; 否则。（永远不会返回 &lt;code&gt;Ternary.unknown&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="22641d942273ad1a77fc2a90f950d47345bb9533" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Ternary.yes&lt;/code&gt; if no memory is currently allocated from this allocator, &lt;code&gt;Ternary.no&lt;/code&gt; if some allocations are currently active, or &lt;code&gt;Ternary.unknown&lt;/code&gt; if not supported.</source>
          <target state="translated">返回 &lt;code&gt;Ternary.yes&lt;/code&gt; 如果没有记忆当前从这个分配器，分配 &lt;code&gt;Ternary.no&lt;/code&gt; 如果一些分配是当前活动的，或者 &lt;code&gt;Ternary.unknown&lt;/code&gt; 如果不支持。</target>
        </trans-unit>
        <trans-unit id="28f123241a0a7eec0cc32c965f3372769e98b360" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Ternary.yes&lt;/code&gt; if no memory is currently allocated with this allocator, &lt;code&gt;Ternary.no&lt;/code&gt; otherwise. This method never returns &lt;code&gt;Ternary.unknown&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;Ternary.yes&lt;/code&gt; 如果没有内存目前与这个分配器，分配 &lt;code&gt;Ternary.no&lt;/code&gt; 否则。此方法永远不会返回 &lt;code&gt;Ternary.unknown&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="576821022eb07e0ae2aa13aa41f01f8ddabdaa3d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Ternary.yes&lt;/code&gt; if no memory is currently allocated with this allocator, otherwise &lt;code&gt;Ternary.no&lt;/code&gt;. This method never returns &lt;code&gt;Ternary.unknown&lt;/code&gt;.</source>
          <target state="translated">如果此分配器当前未分配任何内存，则返回 &lt;code&gt;Ternary.yes&lt;/code&gt; ，否则 &lt;code&gt;Ternary.no&lt;/code&gt; 。此方法永远不会返回 &lt;code&gt;Ternary.unknown&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e8e5a2d686354e28ac99624b57803cbe311a5bfc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Ternary.yes&lt;/code&gt; if the allocator does not contain any alive objects and &lt;code&gt;Ternary.no&lt;/code&gt; otherwise.</source>
          <target state="translated">返回 &lt;code&gt;Ternary.yes&lt;/code&gt; 如果分配不包含任何活着的对象和 &lt;code&gt;Ternary.no&lt;/code&gt; 否则。</target>
        </trans-unit>
        <trans-unit id="5c75eda55e19b85a866dcdacb4846513741b45d7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Ternary.yes&lt;/code&gt; if the allocator owns &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;Ternary.no&lt;/code&gt; if the allocator doesn't own &lt;code&gt;b&lt;/code&gt;, and &lt;code&gt;Ternary.unknown&lt;/code&gt; if ownership cannot be determined. Implementations that don't support this primitive should always return &lt;code&gt;Ternary.unknown&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;Ternary.yes&lt;/code&gt; 如果分配器拥有 &lt;code&gt;b&lt;/code&gt; ， &lt;code&gt;Ternary.no&lt;/code&gt; 如果分配没有自己 &lt;code&gt;b&lt;/code&gt; ，和 &lt;code&gt;Ternary.unknown&lt;/code&gt; 如果所有权不能确定。不支持该原语的实现应始终返回 &lt;code&gt;Ternary.unknown&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7c3466939fa67b53a7a75df18791cd8a27669629" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Ternary.yes&lt;/code&gt; if the buffer belongs to the parent allocator and &lt;code&gt;Ternary.no&lt;/code&gt; otherwise.</source>
          <target state="translated">返回 &lt;code&gt;Ternary.yes&lt;/code&gt; 如果缓冲区属于母公司分配器和 &lt;code&gt;Ternary.no&lt;/code&gt; 否则。</target>
        </trans-unit>
        <trans-unit id="39020cc870cb247dce8f9c94879adcaa6a57c96a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Ternary.yes&lt;/code&gt; if the passed buffer is inside the range of virtual adresses. Does not guarantee that the passed buffer is still valid.</source>
          <target state="translated">如果传递的缓冲区在虚拟地址范围之内，则返回 &lt;code&gt;Ternary.yes&lt;/code&gt; 。不保证所传递的缓冲区仍然有效。</target>
        </trans-unit>
        <trans-unit id="303082f8c158d6170e928d785a87c6c26ee45a1e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Ternary.yes&lt;/code&gt; if this allocator is not responsible for any memory, &lt;code&gt;Ternary.no&lt;/code&gt; otherwise. (Never returns &lt;code&gt;Ternary.unknown&lt;/code&gt;.)</source>
          <target state="translated">如果此分配器不负责任 &lt;code&gt;Ternary.no&lt;/code&gt; 内存，则返回 &lt;code&gt;Ternary.yes&lt;/code&gt; ，否则返回Ternary.no。（永远不会返回 &lt;code&gt;Ternary.unknown&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="3e0da7ed620f30a5c0b0c0b0cc2ad4c453d99eeb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Ternary.yes&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;Ternary.yes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="171e90d1a5e9b217cfbadc1fe4981e6e561b6e1f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;lhs == WithNaN.defaultValue!Lhs&lt;/code&gt;, &lt;code&gt;lhs == rhs&lt;/code&gt; otherwise.</source>
          <target state="translated">如果 &lt;code&gt;lhs == WithNaN.defaultValue!Lhs&lt;/code&gt; ，则返回 &lt;code&gt;false&lt;/code&gt; ,否则返回 &lt;code&gt;lhs == rhs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b531ec06a4a58e5849f228457943c156e4c192c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;impl.alignment&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;impl.alignment&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2321cc4ffc700d49cca6939f5369564e066de21e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;impl.allocate(s)&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;impl.allocate(s)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa2eecf7d0145c17dcaf88a38b4e20c63af0f54a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;impl.allocateAll()&lt;/code&gt; if present, &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">如果存在，则返回 &lt;code&gt;impl.allocateAll()&lt;/code&gt; ，否则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a1226dde654c77a4a80edc348feb411c699d92f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;impl.expand(b, s)&lt;/code&gt; if defined, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">如果定义，则返回 &lt;code&gt;impl.expand(b, s)&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59e12fcd550e930e0350a5b77d09a89da92d5237" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;impl.goodAllocSize(s)&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;impl.goodAllocSize(s)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9ab643c87da7f4f802b4b6f621bd1cdf5d2cafd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;impl.reallocate(b, s)&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;impl.reallocate(b, s)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="297f733fd8829c297b46be1b6dbcda567e215b5e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;input&lt;/code&gt; string normalized to the chosen form. Form C is used by default.</source>
          <target state="translated">返回标准化为所选形式的 &lt;code&gt;input&lt;/code&gt; 字符串。默认情况下使用表格C。</target>
        </trans-unit>
        <trans-unit id="f65e4dedfaf54f3f539e6a37bd3034786d7d9e2d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0fd314bf9de358fea53410f95a2f026dab84699d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;parent.goodAllocSize(max(Node.sizeof, s))&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;parent.goodAllocSize(max(Node.sizeof, s))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72d8fb1eb1b6183b12d4ee09405418cca7db2cac" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;roundingFunction(n)&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;roundingFunction(n)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6abd4a9b1f3a77730da058c3f5c3e546560b2ae" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;str&lt;/code&gt; without its last character, if there is one. If &lt;code&gt;str&lt;/code&gt; ends with &lt;code&gt;&quot;\r\n&quot;&lt;/code&gt;, then both are removed. If &lt;code&gt;str&lt;/code&gt; is empty, then it is returned unchanged.</source>
          <target state="translated">返回 &lt;code&gt;str&lt;/code&gt; ,但不带最后一个字符（如果有）。如果 &lt;code&gt;str&lt;/code&gt; 以 &lt;code&gt;&quot;\r\n&quot;&lt;/code&gt; 结尾，则两个都将被删除。如果 &lt;code&gt;str&lt;/code&gt; 为空，则将其保持不变。</target>
        </trans-unit>
        <trans-unit id="c1c161f31f56a32344444a0b2419c5d4c9202e0b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;R&lt;/code&gt; is a bidirectional range. A bidirectional range is a forward range that also offers the primitives &lt;code&gt;back&lt;/code&gt; and &lt;code&gt;popBack&lt;/code&gt;. The following code should compile for any bidirectional range.</source>
          <target state="translated">如果 &lt;code&gt;R&lt;/code&gt; 是双向范围，则返回 &lt;code&gt;true&lt;/code&gt; 。双向范围是一个正向范围，它也提供图元 &lt;code&gt;back&lt;/code&gt; 和 &lt;code&gt;popBack&lt;/code&gt; 。以下代码应针对任何双向范围进行编译。</target>
        </trans-unit>
        <trans-unit id="2f059b10cfb16deb0e5638727bb38a6b9ac52201" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;R&lt;/code&gt; is a forward range. A forward range is an input range &lt;code&gt;r&lt;/code&gt; that can save &quot;checkpoints&quot; by saving &lt;code&gt;r.save&lt;/code&gt; to another value of type &lt;code&gt;R&lt;/code&gt;. Notable examples of input ranges that are</source>
          <target state="translated">如果 &lt;code&gt;R&lt;/code&gt; 为正向范围，则返回 &lt;code&gt;true&lt;/code&gt; 。正向范围是输入范围 &lt;code&gt;r&lt;/code&gt; ，可以通过将 &lt;code&gt;r.save&lt;/code&gt; 保存为另一个类型 &lt;code&gt;R&lt;/code&gt; 的值来保存&amp;ldquo;检查点&amp;rdquo; 。输入范围的显着示例是</target>
        </trans-unit>
        <trans-unit id="3b467330b4203940d2a4e8d37c8f0a276e36681b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;R&lt;/code&gt; is a random-access range. A random-access range is a bidirectional range that also offers the primitive &lt;code&gt;opIndex&lt;/code&gt;, OR an infinite forward range that offers &lt;code&gt;opIndex&lt;/code&gt;. In either case, the range must either offer &lt;code&gt;length&lt;/code&gt; or be infinite. The following code should compile for any random-access range.</source>
          <target state="translated">如果 &lt;code&gt;R&lt;/code&gt; 是随机访问范围，则返回 &lt;code&gt;true&lt;/code&gt; 。随机访问范围是一个双向范围，它也提供原始的 &lt;code&gt;opIndex&lt;/code&gt; ，或者是一个无限向前的范围，它提供 &lt;code&gt;opIndex&lt;/code&gt; 。无论哪种情况，范围都必须提供 &lt;code&gt;length&lt;/code&gt; 或无限。以下代码应针对任何随机访问范围进行编译。</target>
        </trans-unit>
        <trans-unit id="f7149a6f275dcde465622cbefd719bfe0d50441e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;R&lt;/code&gt; is an infinite input range. An infinite input range is an input range that has a statically-defined enumerated member called &lt;code&gt;empty&lt;/code&gt; that is always &lt;code&gt;false&lt;/code&gt;, for example:</source>
          <target state="translated">如果 &lt;code&gt;R&lt;/code&gt; 是无限输入范围，则返回 &lt;code&gt;true&lt;/code&gt; 。无限输入范围是具有静态定义的枚举成员（称为 &lt;code&gt;empty&lt;/code&gt; ）的输入范围，该成员始终为 &lt;code&gt;false&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="fbe9c1eac882faaa1dcf8e8f6dece76a2c0658c1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;R&lt;/code&gt; is an input range and has mutable elements. The following code should compile for any range with assignable elements.</source>
          <target state="translated">如果 &lt;code&gt;R&lt;/code&gt; 是输入范围并且具有可变元素，则返回 &lt;code&gt;true&lt;/code&gt; 。以下代码应针对具有可分配元素的任何范围进行编译。</target>
        </trans-unit>
        <trans-unit id="92a385254815ac53aec42359b923e3af33cc4d6e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;R&lt;/code&gt; is an input range and has swappable elements. The following code should compile for any range with swappable elements.</source>
          <target state="translated">如果 &lt;code&gt;R&lt;/code&gt; 是输入范围并且具有可交换元素，则返回 &lt;code&gt;true&lt;/code&gt; 。以下代码应针对可交换元素的任何范围进行编译。</target>
        </trans-unit>
        <trans-unit id="a58ab4a20ee140833f55835772fc3940265454f2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;R&lt;/code&gt; is an input range. An input range must define the primitives &lt;code&gt;empty&lt;/code&gt;, &lt;code&gt;popFront&lt;/code&gt;, and &lt;code&gt;front&lt;/code&gt;. The following code should compile for any input range.</source>
          <target state="translated">如果 &lt;code&gt;R&lt;/code&gt; 是输入范围，则返回 &lt;code&gt;true&lt;/code&gt; 。输入范围必须定义基本 &lt;code&gt;popFront&lt;/code&gt; &lt;code&gt;empty&lt;/code&gt; ，popFront和 &lt;code&gt;front&lt;/code&gt; 。以下代码应针对任何输入范围进行编译。</target>
        </trans-unit>
        <trans-unit id="bf713c5ba61ab267f431d59647761609af6d7365" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;R&lt;/code&gt; is an output range for elements of type &lt;code&gt;E&lt;/code&gt;. An output range is defined functionally as a range that supports the operation &lt;code&gt;put(r, e)&lt;/code&gt; as defined above.</source>
          <target state="translated">如果 &lt;code&gt;R&lt;/code&gt; 是类型 &lt;code&gt;E&lt;/code&gt; 的元素的输出范围，则返回 &lt;code&gt;true&lt;/code&gt; 。输出范围在功能上定义为支持上述操作 &lt;code&gt;put(r, e)&lt;/code&gt; 的范围。</target>
        </trans-unit>
        <trans-unit id="4f58a311b2afe419c192251695a872d19ddd072e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;R&lt;/code&gt; offers a slicing operator with integral boundaries that returns a forward range type.</source>
          <target state="translated">如果 &lt;code&gt;R&lt;/code&gt; 提供具有整数边界的切片运算符，则返回 &lt;code&gt;true&lt;/code&gt; ,则返回true。</target>
        </trans-unit>
        <trans-unit id="be2339a5e762f38e486b357b996cc8c0afa8d2ab" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if T can be iterated over using a &lt;code&gt;foreach&lt;/code&gt; loop with a single loop variable of automatically inferred type, regardless of how the &lt;code&gt;foreach&lt;/code&gt; loop is implemented. This includes ranges, structs/classes that define &lt;code&gt;opApply&lt;/code&gt; with a single loop variable, and builtin dynamic, static and associative arrays.</source>
          <target state="translated">如果可以使用带有自动推断类型的单个循环变量的 &lt;code&gt;foreach&lt;/code&gt; 循环遍历T，则返回 &lt;code&gt;true&lt;/code&gt; ，而与如何实现 &lt;code&gt;foreach&lt;/code&gt; 循环无关。这包括范围，用单个循环变量定义 &lt;code&gt;opApply&lt;/code&gt; 的结构/类，以及内置的动态，静态和关联数组。</target>
        </trans-unit>
        <trans-unit id="19db28355f8adaae7fe54281e6a7169d6254e95e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if and only if</source>
          <target state="translated">仅当且仅当返回 &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e866f26aa80809c3ecd57b506c084fc3221ce4c4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;T&lt;/code&gt; is an instance of &lt;code&gt;std.typecons.Tuple&lt;/code&gt;.</source>
          <target state="translated">当且仅当 &lt;code&gt;T&lt;/code&gt; 是 &lt;code&gt;std.typecons.Tuple&lt;/code&gt; 的实例时，返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91662a20ad55e5e239dca338af4ceba2ee60f7b9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;T&lt;/code&gt;'s representation includes at least one of the following:</source>
          <target state="translated">当且仅当 &lt;code&gt;T&lt;/code&gt; 的表示形式包括以下至少一项时，返回 &lt;code&gt;true&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="f748607acecd90cf140bfeadc5d3b94f97aeb287" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;needle&lt;/code&gt; can be found in &lt;code&gt; range&lt;/code&gt;. Performs &amp;Omicron;(&lt;code&gt;haystack.length&lt;/code&gt;) evaluations of &lt;code&gt;pred&lt;/code&gt;.</source>
          <target state="translated">当且仅当可以在 &lt;code&gt; range&lt;/code&gt; 内找到 &lt;code&gt;needle&lt;/code&gt; 时，才返回 &lt;code&gt;true&lt;/code&gt; 。执行 &lt;code&gt;pred&lt;/code&gt; 的 &amp;Omicron;（ &lt;code&gt;haystack.length&lt;/code&gt; ）个评估。</target>
        </trans-unit>
        <trans-unit id="8347b9ae1247a48045e91dfed1e8ae3a959989ce" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;this&lt;/code&gt; is in the null state.</source>
          <target state="translated">当且仅当 &lt;code&gt;this&lt;/code&gt; 处于null状态时，才返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4f8617e5b686b8968816a74420a58a1764a1a20e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;value&lt;/code&gt; can be found in &lt;code&gt;range&lt;/code&gt;, which is assumed to be sorted. Performs &amp;Omicron;(&lt;code&gt;log(r.length)&lt;/code&gt;) evaluations of &lt;code&gt;pred&lt;/code&gt;.</source>
          <target state="translated">当且仅当在可以假定为sort的 &lt;code&gt;range&lt;/code&gt; 中找到 &lt;code&gt;value&lt;/code&gt; 时，才返回 &lt;code&gt;true&lt;/code&gt; 。执行 &lt;code&gt;pred&lt;/code&gt; 的 &amp;Omicron;（ &lt;code&gt;log(r.length)&lt;/code&gt; ）个评估。</target>
        </trans-unit>
        <trans-unit id="99281d985e62377f2701006146fe6b1540d92251" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if and only if any value &lt;code&gt;v&lt;/code&gt; found in the input range &lt;code&gt;range&lt;/code&gt; satisfies the predicate &lt;code&gt;pred&lt;/code&gt;. Performs (at most) &amp;Omicron;(&lt;code&gt;haystack.length&lt;/code&gt;) evaluations of &lt;code&gt;pred&lt;/code&gt;.</source>
          <target state="translated">当且仅当在输入范围 &lt;code&gt;range&lt;/code&gt; 找到的任何值 &lt;code&gt;v&lt;/code&gt; 满足谓词 &lt;code&gt;pred&lt;/code&gt; 时，才返回 &lt;code&gt;true&lt;/code&gt; 。最多执行 &lt;code&gt;pred&lt;/code&gt; 的 &amp;Omicron;（ &lt;code&gt;haystack.length&lt;/code&gt; ）个评估。</target>
        </trans-unit>
        <trans-unit id="340045aa6f5419b6c3fb24aa3c63b00d481f7099" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if and only if the &lt;code&gt;VariantN&lt;/code&gt; object holds an object implicitly convertible to type &lt;code&gt;T&lt;/code&gt;. Implicit convertibility is defined as per &lt;a href=&quot;std_traits#ImplicitConversionTargets&quot;&gt;ImplicitConversionTargets&lt;/a&gt;.</source>
          <target state="translated">当且仅当 &lt;code&gt;VariantN&lt;/code&gt; 对象包含隐式可转换为 &lt;code&gt;T&lt;/code&gt; 类型的对象时，才返回 &lt;code&gt;true&lt;/code&gt; 。隐式可转换性是根据&lt;a href=&quot;std_traits#ImplicitConversionTargets&quot;&gt;ImplicitConversionTargets&lt;/a&gt;定义的。</target>
        </trans-unit>
        <trans-unit id="dcf1ed6589d8954612b9eba8096e270605501dd0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if and only if the underlying store has been allocated and initialized.</source>
          <target state="translated">当且仅当基础存储已分配并初始化时，才返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="502c0e6d9996c8a042d2f011a9cb56c056f24a67" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;Allocator&lt;/code&gt; has the alignment known at compile time; otherwise it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Allocator&lt;/code&gt; 在编译时具有已知的对齐方式，则返回 &lt;code&gt;true&lt;/code&gt; ;否则返回true。否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7fd5d1f607579d73eccdba6a3b899b6b84dae6e8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;Task&lt;/code&gt; is finished executing.</source>
          <target state="translated">如果 &lt;code&gt;Task&lt;/code&gt; 完成执行，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44dbc6fa301e5cd342bc3c260e5ae09d5b2e4f74" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the container has no elements, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">如果容器没有元素，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="81df5d82b8bc145a8725b6ceb8cab02d15e7cc84" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the file is at end (see &lt;a href=&quot;http://cplusplus.com/reference/clibrary/cstdio/feof.html&quot;&gt;feof&lt;/a&gt;).</source>
          <target state="translated">如果文件在末尾，则返回 &lt;code&gt;true&lt;/code&gt; （请参阅&lt;a href=&quot;http://cplusplus.com/reference/clibrary/cstdio/feof.html&quot;&gt;feof&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5e8ab4a2d65c2af4af5b6475b8db6edfd8781050" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the file is opened.</source>
          <target state="translated">如果打开文件，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab57a086ed171ce09531125c96424a6adc9c55f8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the heap is empty, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">如果堆为空，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4abb8088d0bc3163191e40379de13d1ecff0fd98" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the range is at end. The test depends on the stopping policy.</source>
          <target state="translated">如果范围结束，则返回 &lt;code&gt;true&lt;/code&gt; 。测试取决于停止策略。</target>
        </trans-unit>
        <trans-unit id="d4d3ed4fff3e3f0475cffd560a4e179d73353fb1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; iff &lt;code&gt;R&lt;/code&gt; is an input range that supports the &lt;code&gt;moveFront&lt;/code&gt; primitive, as well as &lt;code&gt;moveBack&lt;/code&gt; and &lt;code&gt;moveAt&lt;/code&gt; if it's a bidirectional or random access range. These may be explicitly implemented, or may work via the default behavior of the module level functions &lt;code&gt;moveFront&lt;/code&gt; and friends. The following code should compile for any range with mobile elements.</source>
          <target state="translated">如果 &lt;code&gt;R&lt;/code&gt; 是支持 &lt;code&gt;moveFront&lt;/code&gt; 原语的输入范围，以及如果它是双向或随机访问范围，则 &lt;code&gt;moveAt&lt;/code&gt; &lt;code&gt;moveBack&lt;/code&gt; 和moveAt，则返回 &lt;code&gt;true&lt;/code&gt; 。这些可以明确实现，也可以通过模块级别功能 &lt;code&gt;moveFront&lt;/code&gt; 和friends 的默认行为来工作。以下代码应针对具有移动元素的任何范围进行编译。</target>
        </trans-unit>
        <trans-unit id="b3920946f073a05433b592c6d88bad79ae413585" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; iff a value of type &lt;code&gt;Rhs&lt;/code&gt; can be assigned to a variable of type &lt;code&gt;Lhs&lt;/code&gt;.</source>
          <target state="translated">如果可以将 &lt;code&gt;Rhs&lt;/code&gt; 类型的值分配给 &lt;code&gt;Lhs&lt;/code&gt; 类型的变量，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be6a353019484efaaa663c32966fbd10e552629c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;val&lt;/code&gt;, if it is between &lt;code&gt;lower&lt;/code&gt; and &lt;code&gt;upper&lt;/code&gt;. Otherwise returns the nearest of the two.</source>
          <target state="translated">如果 &lt;code&gt;val&lt;/code&gt; 在 &lt;code&gt;lower&lt;/code&gt; 和 &lt;code&gt;upper&lt;/code&gt; 之间，则返回val。否则，返回两者中最接近的一个。</target>
        </trans-unit>
        <trans-unit id="5e77f105096e10dff599ded9fcbbd0ec957a4b39" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;x&lt;/code&gt; rounded to a &lt;code&gt;long&lt;/code&gt; value using the &lt;code&gt;FE_TONEAREST&lt;/code&gt; rounding mode. If the integer value of &lt;code&gt;x&lt;/code&gt; is greater than &lt;code&gt;long.max&lt;/code&gt;, the result is indeterminate.</source>
          <target state="translated">使用 &lt;code&gt;FE_TONEAREST&lt;/code&gt; 舍入模式返回将 &lt;code&gt;x&lt;/code&gt; 舍入为 &lt;code&gt;long&lt;/code&gt; 整型值。如果 &lt;code&gt;x&lt;/code&gt; 的整数值大于 &lt;code&gt;long.max&lt;/code&gt; ，则结果不确定。</target>
        </trans-unit>
        <trans-unit id="191bae5fc0041b9a2f632c289a94cb1fad5c5888" translate="yes" xml:space="preserve">
          <source>Returns T if the type is one of the following forms: T delegate()[] T delegate()[dim]</source>
          <target state="translated">如果类型是以下形式之一,则返回T。T delegate()[]T delegate()[dim]。</target>
        </trans-unit>
        <trans-unit id="1ae9eec54bc5f2bb441d40598d1cfc8da340394c" translate="yes" xml:space="preserve">
          <source>Returns ThreadInfo.thisInfo, since it is a thread-local instance of ThreadInfo, which is the correct behavior for this scheduler.</source>
          <target state="translated">返回ThreadInfo.thisInfo,因为它是ThreadInfo的线程本地实例,这是这个调度器的正确行为。</target>
        </trans-unit>
        <trans-unit id="17845a5485dfed66e424a7ba2c7281d3c351c812" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#Duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; with the same number of hnsecs as this &lt;code&gt;TickDuration&lt;/code&gt;. Note that the conventional way to convert between &lt;code&gt;TickDuration&lt;/code&gt; and &lt;code&gt;Duration&lt;/code&gt; is using &lt;a href=&quot;std_conv#to&quot;&gt;&lt;code&gt;std.conv.to&lt;/code&gt;&lt;/a&gt;, e.g.: &lt;code&gt;tickDuration.to!Duration()&lt;/code&gt;</source>
          <target state="translated">返回&lt;a href=&quot;#Duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt;相同数量hnsecs，因为这 &lt;code&gt;TickDuration&lt;/code&gt; 。请注意，在 &lt;code&gt;TickDuration&lt;/code&gt; 和 &lt;code&gt;Duration&lt;/code&gt; 之间进行转换的常规方法是使用&lt;a href=&quot;std_conv#to&quot;&gt; &lt;code&gt;std.conv.to&lt;/code&gt; &lt;/a&gt;，例如： &lt;code&gt;tickDuration.to!Duration()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="632ed79f72c9b3ce7cf08f75c7d5bad1099d1a33" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; with the same std time as this one, but with &lt;a href=&quot;std_datetime_timezone#LocalTime&quot;&gt;&lt;code&gt;std.datetime.timezone.LocalTime&lt;/code&gt;&lt;/a&gt; as its time zone.</source>
          <target state="translated">返回一个&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;具有相同STD时间，因为这一个，但&lt;a href=&quot;std_datetime_timezone#LocalTime&quot;&gt; &lt;code&gt;std.datetime.timezone.LocalTime&lt;/code&gt; &lt;/a&gt;作为其时区。</target>
        </trans-unit>
        <trans-unit id="eb485c36046da604f605fa92ea00c815c886fefb" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; with the same std time as this one, but with &lt;code&gt;UTC&lt;/code&gt; as its time zone.</source>
          <target state="translated">返回与该标准时间相同的标准时间的&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;，但以 &lt;code&gt;UTC&lt;/code&gt; 作为其时区。</target>
        </trans-unit>
        <trans-unit id="71b042c5535eceb8a0181a5120d750356c50df5f" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; with the same std time as this one, but with given time zone as its time zone.</source>
          <target state="translated">返回与该标准时间相同的标准时间的&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;，但以给定的时区作为其时区。</target>
        </trans-unit>
        <trans-unit id="4c42c4ffa645f14b85ca525e085d8ad6101ea548" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#TickDuration&quot;&gt;&lt;code&gt;TickDuration&lt;/code&gt;&lt;/a&gt; with the same number of hnsecs as this &lt;code&gt;Duration&lt;/code&gt;. Note that the conventional way to convert between &lt;code&gt;Duration&lt;/code&gt; and &lt;code&gt;TickDuration&lt;/code&gt; is using &lt;a href=&quot;std_conv#to&quot;&gt;&lt;code&gt;std.conv.to&lt;/code&gt;&lt;/a&gt;, e.g.: &lt;code&gt;duration.to!TickDuration()&lt;/code&gt;</source>
          <target state="translated">返回&lt;a href=&quot;#TickDuration&quot;&gt; &lt;code&gt;TickDuration&lt;/code&gt; &lt;/a&gt;具有相同数量的hnsecs因为这样的 &lt;code&gt;Duration&lt;/code&gt; 。注意，在 &lt;code&gt;Duration&lt;/code&gt; 和 &lt;code&gt;TickDuration&lt;/code&gt; 之间进行转换的常规方法是使用&lt;a href=&quot;std_conv#to&quot;&gt; &lt;code&gt;std.conv.to&lt;/code&gt; &lt;/a&gt;，例如： &lt;code&gt;duration.to!TickDuration()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b5ea13434018601f6e922ebff9fdd27c660b68bd" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#TimeZone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt; with the give name per the TZ Database. The time zone information is fetched from the TZ Database time zone files in the given directory.</source>
          <target state="translated">返回一个具有TZ数据库名称的&lt;a href=&quot;#TimeZone&quot;&gt; &lt;code&gt;TimeZone&lt;/code&gt; &lt;/a&gt;。时区信息是从给定目录中的TZ数据库时区文件中获取的。</target>
        </trans-unit>
        <trans-unit id="09668336c60b52b4ed1aa2667de901b8a5329540" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#TimeZone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt; with the given name per the Windows time zone names. The time zone information is fetched from the Windows registry.</source>
          <target state="translated">返回每个Windows时区名称具有给定名称的&lt;a href=&quot;#TimeZone&quot;&gt; &lt;code&gt;TimeZone&lt;/code&gt; &lt;/a&gt;。从Windows注册表中获取时区信息。</target>
        </trans-unit>
        <trans-unit id="90051d586b426535fb226d796a0084dfa240e45a" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;core_time#Duration&quot;&gt;&lt;code&gt;core.time.Duration&lt;/code&gt;&lt;/a&gt; of 0.</source>
          <target state="translated">返回&lt;a href=&quot;core_time#Duration&quot;&gt; &lt;code&gt;core.time.Duration&lt;/code&gt; &lt;/a&gt;为0。</target>
        </trans-unit>
        <trans-unit id="6f58268073e6b6ab3643180e88e877c65456ef76" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;std_datetime_date#Date&quot;&gt;&lt;code&gt;std.datetime.date.Date&lt;/code&gt;&lt;/a&gt; equivalent to this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回一个&lt;a href=&quot;std_datetime_date#Date&quot;&gt; &lt;code&gt;std.datetime.date.Date&lt;/code&gt; &lt;/a&gt;相当于这个&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="215ca70788743fb43bffe630def0286fd5de28ba" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;std_datetime_date#DateTime&quot;&gt;&lt;code&gt;std.datetime.date.DateTime&lt;/code&gt;&lt;/a&gt; equivalent to this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回一个&lt;a href=&quot;std_datetime_date#DateTime&quot;&gt; &lt;code&gt;std.datetime.date.DateTime&lt;/code&gt; &lt;/a&gt;相当于这个&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f45b89cde1bd0f7cfd15e8eea90e50fcbe5d6c6a" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;std_datetime_date#TimeOfDay&quot;&gt;&lt;code&gt;std.datetime.date.TimeOfDay&lt;/code&gt;&lt;/a&gt; equivalent to this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回一个&lt;a href=&quot;std_datetime_date#TimeOfDay&quot;&gt; &lt;code&gt;std.datetime.date.TimeOfDay&lt;/code&gt; &lt;/a&gt;相当于这个&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a275216af63e773f0fb7362f374c9e89a80a46d3" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;AliasSeq&lt;/code&gt; of the template arguments used to instantiate &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">返回用于实例化 &lt;code&gt;T&lt;/code&gt; 的模板参数的 &lt;code&gt;AliasSeq&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1aa0bc9c6fc6bf59c35507a0a3dd271e25109fab" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;BOMSeq&lt;/code&gt; for a given &lt;code&gt;input&lt;/code&gt;. If no &lt;code&gt;BOM&lt;/code&gt; is present the &lt;code&gt;BOMSeq&lt;/code&gt; for &lt;code&gt;BOM.none&lt;/code&gt; is returned. The &lt;code&gt;BOM&lt;/code&gt; sequence at the beginning of the range will not be comsumed from the passed range. If you pass a reference type range make sure that &lt;code&gt;save&lt;/code&gt; creates a deep copy.</source>
          <target state="translated">返回给定 &lt;code&gt;input&lt;/code&gt; 的 &lt;code&gt;BOMSeq&lt;/code&gt; 。如果没有 &lt;code&gt;BOM&lt;/code&gt; 是目前 &lt;code&gt;BOMSeq&lt;/code&gt; 为 &lt;code&gt;BOM.none&lt;/code&gt; 返回。范围开头的 &lt;code&gt;BOM&lt;/code&gt; 序列不会包含在通过的范围内。如果通过引用类型范围，请确保 &lt;code&gt;save&lt;/code&gt; 创建深拷贝。</target>
        </trans-unit>
        <trans-unit id="271a5129a4614264e0826270bc01f1ec9a6666bf" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;timespec&lt;/code&gt; which represents this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回 &lt;code&gt;timespec&lt;/code&gt; 代表这个&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a975692c0ad818e3dbbf204ae9adcd7dc55e218b" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;timeval&lt;/code&gt; which represents this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回一个 &lt;code&gt;timeval&lt;/code&gt; 代表这个&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca13d4c66a0e5eb5f62a8c851e391479433ab671" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;tm&lt;/code&gt; which represents this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回表示此&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;tm&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b68167263e8112959a914b6724f23bf4be1a30c" translate="yes" xml:space="preserve">
          <source>Returns a C-style zero-terminated string equivalent to &lt;code&gt;str&lt;/code&gt;. &lt;code&gt;str&lt;/code&gt; must not contain embedded &lt;code&gt;'\0'&lt;/code&gt;'s as any C function will treat the first &lt;code&gt;'\0'&lt;/code&gt; that it sees as the end of the string. If &lt;code&gt;str.empty&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, then a string containing only &lt;code&gt;'\0'&lt;/code&gt; is returned.</source>
          <target state="translated">返回等效于 &lt;code&gt;str&lt;/code&gt; 的C样式的零终止字符串。 &lt;code&gt;str&lt;/code&gt; 不能包含嵌入式 &lt;code&gt;'\0'&lt;/code&gt; ，因为任何C函数都将把它看到的第一个 &lt;code&gt;'\0'&lt;/code&gt; 视为字符串的结尾。如果 &lt;code&gt;str.empty&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，则返回仅包含 &lt;code&gt;'\0'&lt;/code&gt; 的字符串。</target>
        </trans-unit>
        <trans-unit id="22582f61782b071673de2012022abb41b3a88086" translate="yes" xml:space="preserve">
          <source>Returns a Condition analog that yields when wait or notify is called.</source>
          <target state="translated">Returns a Condition analog that yields when wait or notify is called.</target>
        </trans-unit>
        <trans-unit id="391290c4a753b240f1d69b198a696aac936ffc55" translate="yes" xml:space="preserve">
          <source>Returns a GC-allocated string with the formatting result.</source>
          <target state="translated">返回一个GC分配的带有格式化结果的字符串。</target>
        </trans-unit>
        <trans-unit id="2d011ef5c1a2c68b3a67ff25c14a92bd9bd1228f" translate="yes" xml:space="preserve">
          <source>Returns a ThreadInfo instance specific to the calling Fiber if the Fiber was created by this dispatcher, otherwise it returns ThreadInfo.thisInfo.</source>
          <target state="translated">如果Fiber是由这个调度器创建的,则返回一个特定于调用Fiber的ThreadInfo实例,否则返回ThreadInfo.thisInfo。</target>
        </trans-unit>
        <trans-unit id="c5dcf9c5990afb4cfa134627952c63721d7c2b80" translate="yes" xml:space="preserve">
          <source>Returns a bit field representing all block attributes set for the memory referenced by p. If p references memory not originally allocated by this garbage collector, points to the interior of a memory block, or if p is null, zero will be returned.</source>
          <target state="translated">返回一个位字段,表示为p引用的内存设置的所有块属性,如果p引用的内存不是这个垃圾收集器最初分配的,则指向内存块的内部,如果p为空,则返回0。</target>
        </trans-unit>
        <trans-unit id="254edba3b71eec2c6ba87bea00c8d6db0a877e9f" translate="yes" xml:space="preserve">
          <source>Returns a bool &lt;code&gt;true&lt;/code&gt; if all of the arguments compile (are semantically correct). The arguments can be symbols, types, or expressions that are syntactically correct. The arguments cannot be statements or declarations.</source>
          <target state="translated">如果所有参数都已编译（在语义上正确），则返回布尔值 &lt;code&gt;true&lt;/code&gt; 。参数可以是语法上正确的符号，类型或表达式。参数不能是语句或声明。</target>
        </trans-unit>
        <trans-unit id="ffd13d4440c5733a6fe8f0131e774995e4323d49" translate="yes" xml:space="preserve">
          <source>Returns a chunk of memory of size &lt;code&gt;n&lt;/code&gt; It finds the first node in the &lt;code&gt;AlignedBlockNode&lt;/code&gt; list which has available memory, and moves it to the front of the list.</source>
          <target state="translated">返回大小为 &lt;code&gt;n&lt;/code&gt; 的内存块。它将在 &lt;code&gt;AlignedBlockNode&lt;/code&gt; 列表中找到具有可用内存的第一个节点，并将其移到列表的前面。</target>
        </trans-unit>
        <trans-unit id="ca5f3b79353818150cbba86f5b049bf05770db58" translate="yes" xml:space="preserve">
          <source>Returns a copy of &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;this&lt;/code&gt; 的副本。</target>
        </trans-unit>
        <trans-unit id="2fe881c498a908bed43ec9dadc634df537aa888f" translate="yes" xml:space="preserve">
          <source>Returns a copy of the front of the heap, which is the largest element according to &lt;code&gt;less&lt;/code&gt;.</source>
          <target state="translated">返回堆前端的副本，这是 &lt;code&gt;less&lt;/code&gt; 的最大元素。</target>
        </trans-unit>
        <trans-unit id="6286d1351fccddad37f0656a2a2cd1cc7539ba85" translate="yes" xml:space="preserve">
          <source>Returns a copy of the input in a newly allocated dynamic array.</source>
          <target state="translated">返回一个新分配的动态数组中的输入副本。</target>
        </trans-unit>
        <trans-unit id="60d8d877d89b38bd95e1988b71e936bdc4210ca0" translate="yes" xml:space="preserve">
          <source>Returns a copy of the underlying value.</source>
          <target state="translated">返回基础值的副本。</target>
        </trans-unit>
        <trans-unit id="3a7d4c032948f3c6a5acf16d0e41938ff551815c" translate="yes" xml:space="preserve">
          <source>Returns a delegate which returns the next time point which is the given duration later.</source>
          <target state="translated">返回下一个时间点的委托,这个时间点是给定的持续时间。</target>
        </trans-unit>
        <trans-unit id="bbe4a37c066b825fa1932453b9b1f48a3c29ebb9" translate="yes" xml:space="preserve">
          <source>Returns a delegate which returns the next time point which is the given number of years, month, and duration later.</source>
          <target state="translated">返回一个委托,它将返回下一个时间点,也就是给定的年、月、日数。</target>
        </trans-unit>
        <trans-unit id="c953b23de84d9eb4ce510c7dbce5e764946b8318" translate="yes" xml:space="preserve">
          <source>Returns a delegate which returns the next time point with the given &lt;code&gt;DayOfWeek&lt;/code&gt; in a range.</source>
          <target state="translated">返回一个委托，该委托将返回给定 &lt;code&gt;DayOfWeek&lt;/code&gt; 在范围内的下一个时间点。</target>
        </trans-unit>
        <trans-unit id="35590143903b1dbbbd2749e2bbedfd5bb37ef887" translate="yes" xml:space="preserve">
          <source>Returns a delegate which returns the next time point with the given month which would be reached by adding months to the given time point.</source>
          <target state="translated">返回一个委托人,该委托人返回给定月份的下一个时间点,该时间点将通过在给定时间点上添加月份来达到。</target>
        </trans-unit>
        <trans-unit id="aef8aee5d89e4d89effa37afed2b636d43a3cb23" translate="yes" xml:space="preserve">
          <source>Returns a duplicate of the container.</source>
          <target state="translated">返回容器的副本。</target>
        </trans-unit>
        <trans-unit id="2284455b20a74066c9b69f2df1803a0a15701997" translate="yes" xml:space="preserve">
          <source>Returns a duplicate of the heap. The &lt;code&gt;dup&lt;/code&gt; method is available only if the underlying store supports it.</source>
          <target state="translated">返回堆的副本。该 &lt;code&gt;dup&lt;/code&gt; 方法仅当底层存储支持它。</target>
        </trans-unit>
        <trans-unit id="6516a2d44fbc6e2b5df03f5721ee57c58059e4d8" translate="yes" xml:space="preserve">
          <source>Returns a dynamic array, the elements of which are the keys in the associative array.</source>
          <target state="translated">返回一个动态数组,其元素是关联数组中的键。</target>
        </trans-unit>
        <trans-unit id="b196a2fb8c2fc705d4c1259ee071e1f46e4c626a" translate="yes" xml:space="preserve">
          <source>Returns a dynamic array, the elements of which are the values in the associative array.</source>
          <target state="translated">返回一个动态数组,其元素是关联数组中的值。</target>
        </trans-unit>
        <trans-unit id="11bef7ff752edd080a72e6a67e1c0c034d43ed83" translate="yes" xml:space="preserve">
          <source>Returns a dynamically-typed &lt;code&gt;CAllocator&lt;/code&gt; built around a given statically- typed allocator &lt;code&gt;a&lt;/code&gt; of type &lt;code&gt;A&lt;/code&gt;. Passing a pointer to the allocator creates a dynamic allocator around the allocator pointed to by the pointer, without attempting to copy or move it. Passing the allocator by value or reference behaves as follows.</source>
          <target state="translated">返回围绕类型 &lt;code&gt;A&lt;/code&gt; 的给定静态类型分配器 &lt;code&gt;a&lt;/code&gt; 构建的动态类型 &lt;code&gt;CAllocator&lt;/code&gt; 。将指针传递给分配器会在指针所指向的分配器周围创建一个动态分配器，而不会尝试复制或移动它。通过值或引用传递分配器的行为如下。</target>
        </trans-unit>
        <trans-unit id="cc9a6befd23b881d297f7e49adb40f16660fb0b3" translate="yes" xml:space="preserve">
          <source>Returns a dynamically-typed &lt;code&gt;CSharedAllocator&lt;/code&gt; built around a given statically- typed allocator &lt;code&gt;a&lt;/code&gt; of type &lt;code&gt;A&lt;/code&gt;. Passing a pointer to the allocator creates a dynamic allocator around the allocator pointed to by the pointer, without attempting to copy or move it. Passing the allocator by value or reference behaves as follows.</source>
          <target state="translated">返回围绕类型 &lt;code&gt;A&lt;/code&gt; 的给定静态类型分配器 &lt;code&gt;a&lt;/code&gt; 构建的动态类型 &lt;code&gt;CSharedAllocator&lt;/code&gt; 。将指针传递给分配器会在指针所指向的分配器周围创建一个动态分配器，而不会尝试复制或移动它。通过值或引用传递分配器的行为如下。</target>
        </trans-unit>
        <trans-unit id="61a5d295f782705eb1946d051714c5c361203f4e" translate="yes" xml:space="preserve">
          <source>Returns a foreachable struct which can bidirectionally iterate over all code points in a string.</source>
          <target state="translated">返回一个foreachable结构,它可以双向迭代一个字符串中的所有代码点。</target>
        </trans-unit>
        <trans-unit id="7fa0f26c7b91c94b3e5dbd456e87a043fa5e41de" translate="yes" xml:space="preserve">
          <source>Returns a foreachable struct which can bidirectionally iterate over all code units in a code point.</source>
          <target state="translated">返回一个foreachable结构,它可以双向迭代一个代码点中的所有代码单元。</target>
        </trans-unit>
        <trans-unit id="b76c0e62da6014dae96a44335ca5d6aeb5506838" translate="yes" xml:space="preserve">
          <source>Returns a forward range over the key value pairs of the associative array.</source>
          <target state="translated">返回关联数组的键值对的前向范围。</target>
        </trans-unit>
        <trans-unit id="7b5dba5e7f3a556437ea8f8c8d90dbd433af0a1f" translate="yes" xml:space="preserve">
          <source>Returns a forward range over the keys of the associative array.</source>
          <target state="translated">返回关联数组中键的前向范围。</target>
        </trans-unit>
        <trans-unit id="84185358b377de7a023911467b7342401fc77869" translate="yes" xml:space="preserve">
          <source>Returns a forward range over the values of the associative array.</source>
          <target state="translated">返回关联数组值的前向范围。</target>
        </trans-unit>
        <trans-unit id="3fffeecef265b33c3680f96e5357d15268e0b6f0" translate="yes" xml:space="preserve">
          <source>Returns a forward range suitable for use as a</source>
          <target state="translated">返回一个适合作为</target>
        </trans-unit>
        <trans-unit id="9cb54cf24074402c237bfc551792b63c2a094850" translate="yes" xml:space="preserve">
          <source>Returns a full &lt;a href=&quot;#Canonical%20decomposition&quot;&gt;Canonical&lt;/a&gt; (by default) or &lt;a href=&quot;#Compatibility%20decomposition&quot;&gt;Compatibility&lt;/a&gt; decomposition of &lt;a href=&quot;#Character&quot;&gt;character&lt;/a&gt;&lt;code&gt;ch&lt;/code&gt;. If no decomposition is available returns a &lt;a href=&quot;#Grapheme&quot;&gt;&lt;code&gt;Grapheme&lt;/code&gt;&lt;/a&gt; with the &lt;code&gt;ch&lt;/code&gt; itself.</source>
          <target state="translated">返回一个完整的&lt;a href=&quot;#Canonical%20decomposition&quot;&gt;规范&lt;/a&gt;（默认）或&lt;a href=&quot;#Compatibility%20decomposition&quot;&gt;兼容性&lt;/a&gt;分解的&lt;a href=&quot;#Character&quot;&gt;字符&lt;/a&gt; &lt;code&gt;ch&lt;/code&gt; 。如果没有分解可用，则返回带有 &lt;code&gt;ch&lt;/code&gt; 本身的&lt;a href=&quot;#Grapheme&quot;&gt; &lt;code&gt;Grapheme&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ce840e5c8fdaeae1dd38ef04182625583e131205" translate="yes" xml:space="preserve">
          <source>Returns a lazily initialized global instantiation of &lt;code&gt;TaskPool&lt;/code&gt;. This function can safely be called concurrently from multiple non-worker threads. The worker threads in this pool are daemon threads, meaning that it is not necessary to call &lt;code&gt;TaskPool.stop&lt;/code&gt; or &lt;code&gt;TaskPool.finish&lt;/code&gt; before terminating the main thread.</source>
          <target state="translated">返回 &lt;code&gt;TaskPool&lt;/code&gt; 的延迟初始化的全局实例。可以安全地从多个非工作程序线程中并发调用此函数。该池中的工作线程是守护程序线程，这意味着在终止主线程之前不必调用 &lt;code&gt;TaskPool.stop&lt;/code&gt; 或 &lt;code&gt;TaskPool.finish&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d07334167a74510fcb87a0bbe4b54cb005c1171d" translate="yes" xml:space="preserve">
          <source>Returns a list of the names of the time zones installed on the system.</source>
          <target state="translated">返回系统中安装的时区名称列表。</target>
        </trans-unit>
        <trans-unit id="3fb9a85a3bd5fb10fa0810307dc66461f5fc1035" translate="yes" xml:space="preserve">
          <source>Returns a list of the names of the time zones installed on the system. The list returned by WindowsTimeZone contains the Windows TZ names, not the TZ Database names. However, &lt;code&gt;TimeZone.getinstalledTZNames&lt;/code&gt; will return the TZ Database names which are equivalent to the Windows TZ names.</source>
          <target state="translated">返回系统上安装的时区名称的列表。WindowsTimeZone返回的列表包含Windows TZ名称，而不是TZ数据库名称。但是， &lt;code&gt;TimeZone.getinstalledTZNames&lt;/code&gt; 将返回与Windows TZ名称等效的TZ数据库名称。</target>
        </trans-unit>
        <trans-unit id="7990a271946971aeb81924fa28441f7c1a9d6465" translate="yes" xml:space="preserve">
          <source>Returns a malloc()'ed string that MUST be curl_free()ed after usage is complete. DEPRECATED - see lib/README.curlx</source>
          <target state="translated">返回一个malloc()'ed的字符串,在使用完成后必须被curl_free()ed。已取消-参见 lib/README.curlx。</target>
        </trans-unit>
        <trans-unit id="3e1fa45142e060d0d318087ea05ea86bb02a6066" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;#Appender&quot;&gt;&lt;code&gt;Appender&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#RefAppender&quot;&gt;&lt;code&gt;RefAppender&lt;/code&gt;&lt;/a&gt; initialized with a given array.</source>
          <target state="translated">返回使用给定数组初始化的新&lt;a href=&quot;#Appender&quot;&gt; &lt;code&gt;Appender&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#RefAppender&quot;&gt; &lt;code&gt;RefAppender&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e52e719b9f80569172479c3836f702a9fcb768c9" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;DList&lt;/code&gt; that's the concatenation of &lt;code&gt;this&lt;/code&gt; and its argument &lt;code&gt;rhs&lt;/code&gt;.</source>
          <target state="translated">返回一个新的 &lt;code&gt;DList&lt;/code&gt; ，它是 &lt;code&gt;this&lt;/code&gt; 及其参数 &lt;code&gt;rhs&lt;/code&gt; 的串联。</target>
        </trans-unit>
        <trans-unit id="229384c3a62e6e998762e855ba510b0f93fb0231" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;DList&lt;/code&gt; that's the concatenation of the argument &lt;code&gt;lhs&lt;/code&gt; and &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">返回一个新的 &lt;code&gt;DList&lt;/code&gt; ，它是参数 &lt;code&gt;lhs&lt;/code&gt; 和 &lt;code&gt;this&lt;/code&gt; 的串联。</target>
        </trans-unit>
        <trans-unit id="fcd633998e8e6235f98b482e529ca8ae6f2d5f66" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;SList&lt;/code&gt; that's the concatenation of &lt;code&gt;this&lt;/code&gt; and its argument. &lt;code&gt;opBinaryRight&lt;/code&gt; is only defined if &lt;code&gt;Stuff&lt;/code&gt; does not define &lt;code&gt;opBinary&lt;/code&gt;.</source>
          <target state="translated">返回一个新的 &lt;code&gt;SList&lt;/code&gt; ，它是 &lt;code&gt;this&lt;/code&gt; 及其参数的串联。 &lt;code&gt;opBinaryRight&lt;/code&gt; 如果只定义 &lt;code&gt;Stuff&lt;/code&gt; 没有定义 &lt;code&gt;opBinary&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53d930f3d86b0f613238f01d6141ea696149dd69" translate="yes" xml:space="preserve">
          <source>Returns a new array of type &lt;code&gt;T&lt;/code&gt; allocated on the garbage collected heap without initializing its elements. This can be a useful optimization if every element will be immediately initialized. &lt;code&gt;T&lt;/code&gt; may be a multidimensional array. In this case sizes may be specified for any number of dimensions from 0 to the number in &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">返回分配给垃圾收集堆的类型 &lt;code&gt;T&lt;/code&gt; 的新数组，而不初始化其元素。如果每个元素都将立即初始化，这可能是有用的优化。 &lt;code&gt;T&lt;/code&gt; 可以是多维数组。在这种情况下，可以为从0到 &lt;code&gt;T&lt;/code&gt; 中的任意数量的尺寸指定尺寸。</target>
        </trans-unit>
        <trans-unit id="b9a0023d51da997f35311b6d254c0383fc9e1dc6" translate="yes" xml:space="preserve">
          <source>Returns a new array of type &lt;code&gt;T&lt;/code&gt; allocated on the garbage collected heap.</source>
          <target state="translated">返回在垃圾回收堆上分配的类型 &lt;code&gt;T&lt;/code&gt; 的新数组。</target>
        </trans-unit>
        <trans-unit id="abf7392fba549c659e501fb5a0955fa6c151e1c3" translate="yes" xml:space="preserve">
          <source>Returns a new array of type &lt;code&gt;T&lt;/code&gt; without initializing its elements.</source>
          <target state="translated">返回类型 &lt;code&gt;T&lt;/code&gt; 的新数组，而不初始化其元素。</target>
        </trans-unit>
        <trans-unit id="ec8b7d3a89d7573b011ce662e56a466678333f35" translate="yes" xml:space="preserve">
          <source>Returns a new array of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">返回类型为 &lt;code&gt;T&lt;/code&gt; 的新数组。</target>
        </trans-unit>
        <trans-unit id="fb460665d1aa8cdb9eb35459df7f67c5dae4e9fd" translate="yes" xml:space="preserve">
          <source>Returns a new array with a given slice replaced.</source>
          <target state="translated">返回一个新的数组,并替换给定的片断。</target>
        </trans-unit>
        <trans-unit id="f398156d6d51631038e97ecfa3f6419a052d13bb" translate="yes" xml:space="preserve">
          <source>Returns a new array with all occurrences of a certain subrange replaced.</source>
          <target state="translated">返回一个新的数组,该数组替换了某个子范围的所有出现。</target>
        </trans-unit>
        <trans-unit id="32eea38fcf0e52b318aafbc12837466730e446ea" translate="yes" xml:space="preserve">
          <source>Returns a new array with the first occurrence of a certain subrange replaced.</source>
          <target state="translated">返回一个新的数组,并替换掉某个子范围的第一次出现。</target>
        </trans-unit>
        <trans-unit id="9f0b4b62fab60c86a583814c0b0cddc8d07616c9" translate="yes" xml:space="preserve">
          <source>Returns a new array with the last occurrence of a certain subrange replaced.</source>
          <target state="translated">返回一个新的数组,并替换最后出现的某个子范围。</target>
        </trans-unit>
        <trans-unit id="c3459f8069902eb0604e4fe85b03e28ea6da536c" translate="yes" xml:space="preserve">
          <source>Returns a newly allocated associative array from a range of key/value tuples or from a range of keys and a range of values.</source>
          <target state="translated">从一系列键/值元组或从一系列键和一系列值返回一个新分配的关联数组。</target>
        </trans-unit>
        <trans-unit id="ff59becca2ed801e30637f44c1bffce2ee1a27f6" translate="yes" xml:space="preserve">
          <source>Returns a newly allocated associative array from a range of key/value tuples.</source>
          <target state="translated">从键/值元组的范围中返回一个新分配的关联数组。</target>
        </trans-unit>
        <trans-unit id="b90c85529c4d19d03fce05ef3fb359ef230d8513" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the first element of the array.</source>
          <target state="translated">返回指向数组中第一个元素的指针。</target>
        </trans-unit>
        <trans-unit id="f98a854ad963487f4f4ca41ba1b7b32cdd1b8cbf" translate="yes" xml:space="preserve">
          <source>Returns a random, uniformly chosen, element &lt;code&gt;e&lt;/code&gt; from the supplied &lt;code&gt;Range range&lt;/code&gt;. If no random number generator is passed, the default &lt;code&gt;rndGen&lt;/code&gt; is used.</source>
          <target state="translated">从提供的 &lt;code&gt;Range range&lt;/code&gt; 返回随机选择的元素 &lt;code&gt;e&lt;/code&gt; 。如果未传递随机数生成器，则使用默认的 &lt;code&gt;rndGen&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf8faeebafd2d68821de1399878ebab570453980" translate="yes" xml:space="preserve">
          <source>Returns a range iterating over the entire container, in a container-defined order.</source>
          <target state="translated">返回按容器定义的顺序在整个容器上迭代的范围。</target>
        </trans-unit>
        <trans-unit id="c77aca72cb7dd37b81c1c03fc57dea6c00d19c65" translate="yes" xml:space="preserve">
          <source>Returns a range of all elements in &lt;code&gt;c&lt;/code&gt; that are equal to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;c&lt;/code&gt; 中等于 &lt;code&gt;v&lt;/code&gt; 的所有元素的范围。</target>
        </trans-unit>
        <trans-unit id="7b408d250a95e25681c58f0fc9865b83e81a9a32" translate="yes" xml:space="preserve">
          <source>Returns a range of all elements strictly greater than &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">返回严格大于 &lt;code&gt;v&lt;/code&gt; 的所有元素的范围。</target>
        </trans-unit>
        <trans-unit id="b8b0b648f4bf17a28c57ddf30b04786a54a23191" translate="yes" xml:space="preserve">
          <source>Returns a range of all elements strictly less than &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">返回严格小于 &lt;code&gt;v&lt;/code&gt; 的所有元素的范围。</target>
        </trans-unit>
        <trans-unit id="78abb6e57a58770219e4d3f846f04d97912f8a9b" translate="yes" xml:space="preserve">
          <source>Returns a range of subranges of elements that are equivalent according to the sorting relation.</source>
          <target state="translated">返回根据排序关系等价的元素的子域范围。</target>
        </trans-unit>
        <trans-unit id="6c2a75d33659bb11b9aeec9563041ac1635f2987" translate="yes" xml:space="preserve">
          <source>Returns a range that iterates over all elements of the container, in forward order.</source>
          <target state="translated">返回一个按前向顺序遍历容器中所有元素的范围。</target>
        </trans-unit>
        <trans-unit id="4effc5e0a10068b4c02001d5d1ad7c0cc2ba897f" translate="yes" xml:space="preserve">
          <source>Returns a range view of the values for all threads, which can be used to further process the results of each thread after running the parallel part of your algorithm. Do not use this method in the parallel portion of your algorithm.</source>
          <target state="translated">返回所有线程的值的范围视图,可以用来在运行你的算法的并行部分后进一步处理每个线程的结果。不要在算法的并行部分使用此方法。</target>
        </trans-unit>
        <trans-unit id="c965d435a8b64438b242d03d8b509ef207bed8c4" translate="yes" xml:space="preserve">
          <source>Returns a range which iterates backwards over the interval, starting at &lt;code&gt;end&lt;/code&gt;, using func to generate each successive time point.</source>
          <target state="translated">返回一个范围，该范围从 &lt;code&gt;end&lt;/code&gt; 开始在该间隔上向后迭代，使用func生成每个连续的时间点。</target>
        </trans-unit>
        <trans-unit id="eefca2b162eae18d961fd1f9e644b6e3aef6c85c" translate="yes" xml:space="preserve">
          <source>Returns a range which iterates forward over the interval, starting at &lt;code&gt;begin&lt;/code&gt;, using func to generate each successive time point.</source>
          <target state="translated">返回一个范围，该范围在 &lt;code&gt;begin&lt;/code&gt; 于begin的间隔内向前迭代，使用func生成每个连续的时间点。</target>
        </trans-unit>
        <trans-unit id="ec14721454b609e82da95155553e35ebce3fc48a" translate="yes" xml:space="preserve">
          <source>Returns a range with all occurrences of &lt;code&gt;substs&lt;/code&gt; in &lt;code&gt;r&lt;/code&gt;. replaced with their substitution.</source>
          <target state="translated">返回与所有出现的一系列 &lt;code&gt;substs&lt;/code&gt; 在 &lt;code&gt;r&lt;/code&gt; 。用他们的替换代替。</target>
        </trans-unit>
        <trans-unit id="336708258920b687458732523280df42e0072783" translate="yes" xml:space="preserve">
          <source>Returns a range with at most one element; for example, &lt;code&gt;takeOne([42, 43, 44])&lt;/code&gt; returns a range consisting of the integer &lt;code&gt;42&lt;/code&gt;. Calling &lt;code&gt;popFront()&lt;/code&gt; off that range renders it empty.</source>
          <target state="translated">返回一个最多包含一个元素的范围；例如， &lt;code&gt;takeOne([42, 43, 44])&lt;/code&gt; 返回一个由整数 &lt;code&gt;42&lt;/code&gt; 组成的范围。在该范围之外调用 &lt;code&gt;popFront()&lt;/code&gt; 使其变为空。</target>
        </trans-unit>
        <trans-unit id="c4e2977b61b18f0458c1a4e9748ec5cc5c064c39" translate="yes" xml:space="preserve">
          <source>Returns a reference to the payload. If (autoInit == RefCountedAutoInitialize.yes), calls &lt;code&gt; refCountedStore.ensureInitialized&lt;/code&gt;. Otherwise, just issues &lt;code&gt; assert(refCountedStore.isInitialized)&lt;/code&gt;. Used with &lt;code&gt;alias refCountedPayload this;&lt;/code&gt;, so callers can just use the &lt;code&gt;RefCounted&lt;/code&gt; object as a &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">返回对有效负载的引用。如果（autoInit == RefCountedAutoInitialize.yes），则调用 &lt;code&gt; refCountedStore.ensureInitialized&lt;/code&gt; 。否则，只需发出 &lt;code&gt; assert(refCountedStore.isInitialized)&lt;/code&gt; 即可。与 &lt;code&gt;alias refCountedPayload this;&lt;/code&gt; 一起使用；，这样呼叫者可以只使用 &lt;code&gt;RefCounted&lt;/code&gt; 对象作为 &lt;code&gt;T&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9045b10d14b481e711cada67087362b1682054da" translate="yes" xml:space="preserve">
          <source>Returns a slice of the range. Defined only if all range define slicing.</source>
          <target state="translated">返回范围的一个分片。只有当所有范围都定义了分片时才会定义。</target>
        </trans-unit>
        <trans-unit id="f64251d3015e05479b9426febfe95d2f0401ef9d" translate="yes" xml:space="preserve">
          <source>Returns a static ascii string of the libcurl version.</source>
          <target state="translated">返回libcurl版本的静态ascii字符串。</target>
        </trans-unit>
        <trans-unit id="beccf3ad45d4948b358959975f27759c4561af07" translate="yes" xml:space="preserve">
          <source>Returns a string of all available CLI options for the current targetOS. Options are separated by newlines.</source>
          <target state="translated">返回当前 targetOS 的所有可用 CLI 选项的字符串。选项用换行符分隔。</target>
        </trans-unit>
        <trans-unit id="3158e51069f70338fe6f0f3c3a6731a2ead51cfd" translate="yes" xml:space="preserve">
          <source>Returns a string representation of this CData section</source>
          <target state="translated">返回此CData部分的字符串表示</target>
        </trans-unit>
        <trans-unit id="97f28b169cc066e4b567fd10b57b028837bab1c0" translate="yes" xml:space="preserve">
          <source>Returns a string representation of this ProcessingInstruction</source>
          <target state="translated">返回这个ProcessingInstruction的字符串表示</target>
        </trans-unit>
        <trans-unit id="c0855bdf6807250230f6b7b764ed38b8f25f5814" translate="yes" xml:space="preserve">
          <source>Returns a string representation of this Text section</source>
          <target state="translated">返回该文本部分的字符串表示</target>
        </trans-unit>
        <trans-unit id="7dc7a2b9391879e36c5974df49f174a86ccc960d" translate="yes" xml:space="preserve">
          <source>Returns a string representation of this XmlInstruction</source>
          <target state="translated">返回这个XmlInstruction的字符串表示。</target>
        </trans-unit>
        <trans-unit id="855a592ad52a573b2270f2cd4e9eb6e24d8b6d14" translate="yes" xml:space="preserve">
          <source>Returns a string representation of this comment</source>
          <target state="translated">返回此评论的字符串表示</target>
        </trans-unit>
        <trans-unit id="3c9e30fc57574cb8186eb91b3136b92cd5023cc1" translate="yes" xml:space="preserve">
          <source>Returns a string representation of this item</source>
          <target state="translated">返回此项目的字符串表示</target>
        </trans-unit>
        <trans-unit id="90bd32093189453221779ee2ccd338845cc232a4" translate="yes" xml:space="preserve">
          <source>Returns a temporary file by calling &lt;a href=&quot;http://cplusplus.com/reference/clibrary/cstdio/tmpfile.html&quot;&gt;tmpfile&lt;/a&gt;. Note that the created file has no &lt;a href=&quot;#name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过调用&lt;a href=&quot;http://cplusplus.com/reference/clibrary/cstdio/tmpfile.html&quot;&gt;tmpfile&lt;/a&gt;返回一个临时文件。请注意，创建的文件没有&lt;a href=&quot;#name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8c8af7d3856b0bbd9bc3cc92813854b9973b7c1" translate="yes" xml:space="preserve">
          <source>Returns a tuple &lt;code&gt;r&lt;/code&gt; such that &lt;code&gt;r[0]&lt;/code&gt; is the same as the result of &lt;code&gt;lowerBound(value)&lt;/code&gt;, &lt;code&gt;r[1]&lt;/code&gt; is the same as the result of &lt;code&gt;equalRange(value)&lt;/code&gt;, and &lt;code&gt;r[2]&lt;/code&gt; is the same as the result of &lt;code&gt;upperBound(value)&lt;/code&gt;. The call is faster than computing all three separately. Uses a search schedule similar to &lt;code&gt;equalRange&lt;/code&gt;. Completes the entire search in &amp;Omicron;(&lt;code&gt;log(n)&lt;/code&gt;) time.</source>
          <target state="translated">返回一个元组 &lt;code&gt;r&lt;/code&gt; ，使得 &lt;code&gt;r[0]&lt;/code&gt; 与 &lt;code&gt;lowerBound(value)&lt;/code&gt; 的结果相同， &lt;code&gt;r[1]&lt;/code&gt; 与 &lt;code&gt;equalRange(value)&lt;/code&gt; 的结果相同，并且 &lt;code&gt;r[2]&lt;/code&gt; 与的结果相同。 &lt;code&gt;upperBound(value)&lt;/code&gt; 。该调用比分别计算所有三个要快。使用类似于 &lt;code&gt;equalRange&lt;/code&gt; 的搜索计划。以&amp;Omicron;（ &lt;code&gt;log(n)&lt;/code&gt; ）时间完成整个搜索。</target>
        </trans-unit>
        <trans-unit id="790d773d570c5e954a4674836170e4f431d2f7c1" translate="yes" xml:space="preserve">
          <source>Returns a tuple of non-static functions with the name &lt;code&gt;name&lt;/code&gt; declared in the class or interface &lt;code&gt;C&lt;/code&gt;. Covariant duplicates are shrunk into the most derived one.</source>
          <target state="translated">返回具有在类或接口 &lt;code&gt;C&lt;/code&gt; 中声明的名称 &lt;code&gt;name&lt;/code&gt; 的非静态函数的元组。协变重复项被缩减为最衍生的重复项。</target>
        </trans-unit>
        <trans-unit id="72aa67a13c982eedb6f77841d173bc55ab7adbc6" translate="yes" xml:space="preserve">
          <source>Returns actual size of underlying &lt;code&gt;sockaddr&lt;/code&gt; structure.</source>
          <target state="translated">返回基础 &lt;code&gt;sockaddr&lt;/code&gt; 结构的实际大小。</target>
        </trans-unit>
        <trans-unit id="3d4e6f0dcafeee9acfc42b3956c272aaeda9e313" translate="yes" xml:space="preserve">
          <source>Returns aggregate information about the memory block containing p. If p references memory not originally allocated by this garbage collector, if p is null, or if the garbage collector does not support this operation, BlkInfo.init will be returned. Typically, support for this operation is dependent on support for addrOf.</source>
          <target state="translated">如果p引用的内存不是由这个垃圾收集器最初分配的,如果p是空的,或者如果垃圾收集器不支持这个操作,将返回BlkInfo.init的汇总信息。通常情况下,对该操作的支持取决于对addrOf的支持。</target>
        </trans-unit>
        <trans-unit id="547f2030a516f33d20565081851ea6d38f393ab1" translate="yes" xml:space="preserve">
          <source>Returns all available CLI options</source>
          <target state="translated">返回所有可用的CLI选项</target>
        </trans-unit>
        <trans-unit id="e3e291fc50b149bf34d2e99f3491379752d7871b" translate="yes" xml:space="preserve">
          <source>Returns all available previews</source>
          <target state="translated">返回所有可用的预览</target>
        </trans-unit>
        <trans-unit id="49cd6455b1d4a20296abe2aa926ff0fde3d659c1" translate="yes" xml:space="preserve">
          <source>Returns all available reverts</source>
          <target state="translated">返回所有可用的回复</target>
        </trans-unit>
        <trans-unit id="f9ae2fbd398addbe739b6c44bfa43ba201627972" translate="yes" xml:space="preserve">
          <source>Returns all available transitions</source>
          <target state="translated">返回所有可用的转换</target>
        </trans-unit>
        <trans-unit id="de8280489e19586a87adf21d1db50e77b285274b" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; for iterating over records found in &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">返回用于遍历 &lt;code&gt;input&lt;/code&gt; 中找到的记录的&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="948ee06c9c866197d5eb7dfe97ceda73ffae4bb4" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; of &lt;code&gt;DirEntry&lt;/code&gt; that lazily iterates a given directory, also provides two ways of foreach iteration. The iteration variable can be of type &lt;code&gt;string&lt;/code&gt; if only the name is needed, or &lt;code&gt;DirEntry&lt;/code&gt; if additional details are needed. The span mode dictates how the directory is traversed. The name of each iterated directory entry contains the absolute or relative path (depending on pathname).</source>
          <target state="translated">返回延迟迭代给定目录的 &lt;code&gt;DirEntry&lt;/code&gt; 的&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;，还提供两种foreach迭代的方式。如果只需要名称，则迭代变量可以是 &lt;code&gt;string&lt;/code&gt; 类型，如果需要其他详细信息，则迭代变量可以是 &lt;code&gt;DirEntry&lt;/code&gt; 。跨度模式指示如何遍历目录。每个迭代目录条目的名称都包含绝对或相对路径（取决于路径名）。</target>
        </trans-unit>
        <trans-unit id="f82c2424c6fff8b7a7a516bb19ee2710d86285bc" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; set up to read from the file handle a chunk at a time.</source>
          <target state="translated">返回设置为一次从文件句柄读取的&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e9c75cc67698ecc1945008a92df85a5774f6335f" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; set up to read from the file handle one line at a time.</source>
          <target state="translated">返回设置为一次从文件句柄读取的&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="637bd45f69dbff13a464ee7d0b167448d7fd0753" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; set up to read from the file handle one line at a time. Each line will be newly allocated. &lt;code&gt;front&lt;/code&gt; will cache its value to allow repeated calls without unnecessary allocations.</source>
          <target state="translated">返回设置为一次从文件句柄读取的&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;输入范围&lt;/a&gt;。每行将被重新分配。 &lt;code&gt;front&lt;/code&gt; 将缓存其值以允许重复调用而无需不必要的分配。</target>
        </trans-unit>
        <trans-unit id="b8074654e34efaa6ddbebb1aaab2611e2ca850d6" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;AliasSeq&lt;/code&gt; created from TList with all occurrences of T, if found, replaced with U.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ba3b84333b451cddeb0f31f90a974eae02222d" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;AliasSeq&lt;/code&gt; created from TList with all occurrences of type T, if found, replaced with type U.</source>
          <target state="translated">返回从 &lt;code&gt;AliasSeq&lt;/code&gt; 创建的AliasSeq，所有出现的类型均为T，如果找到，则替换为U。</target>
        </trans-unit>
        <trans-unit id="95ffa9932c89a1a2c78114fd151186b2a3fa7044" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;AliasSeq&lt;/code&gt; created from TList with the all duplicate types removed.</source>
          <target state="translated">返回从 &lt;code&gt;AliasSeq&lt;/code&gt; 创建的AliasSeq，并删除所有重复类型。</target>
        </trans-unit>
        <trans-unit id="0ec9178bff2b45f05e74fcd30f72b2cd23ed61b5" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;AliasSeq&lt;/code&gt; created from TList with the all occurrences, if any, of T removed.</source>
          <target state="translated">返回从 &lt;code&gt;AliasSeq&lt;/code&gt; 创建的AliasSeq，并删除所有已出现的T。</target>
        </trans-unit>
        <trans-unit id="b707da3072dc01ee26fcc801678667c3b3143910" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;AliasSeq&lt;/code&gt; created from TList with the first occurrence of T, if found, replaced with U.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3320bad74eb24381bb4132ab3e05ebdeb849d9" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;AliasSeq&lt;/code&gt; created from TList with the first occurrence of type T, if found, replaced with type U.</source>
          <target state="translated">返回从 &lt;code&gt;AliasSeq&lt;/code&gt; 创建的AliasSeq，它第一次出现类型为T，如果找到的话，将替换为类型U。</target>
        </trans-unit>
        <trans-unit id="87b0bceb710648d9eaefe66e839ee1fa911e3037" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;AliasSeq&lt;/code&gt; created from TList with the first occurrence, if any, of T removed.</source>
          <target state="translated">返回从 &lt;code&gt;AliasSeq&lt;/code&gt; 创建的AliasSeq，并删除第一次出现的T。</target>
        </trans-unit>
        <trans-unit id="81769798ab1d8e4547d87293fde0e9f953d5950b" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;AliasSeq&lt;/code&gt; created from TList with the order reversed.</source>
          <target state="translated">返回从 &lt;code&gt;AliasSeq&lt;/code&gt; 创建的AliasSeq（顺序相反）。</target>
        </trans-unit>
        <trans-unit id="d223fedb93decc9e25baa0f1772f6e2a622b8c8e" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;AliasSeq&lt;/code&gt; expression of &lt;code&gt;Func&lt;/code&gt; being applied to every variadic template argument.</source>
          <target state="translated">返回将 &lt;code&gt;Func&lt;/code&gt; 的 &lt;code&gt;AliasSeq&lt;/code&gt; 表达式应用于每个可变参数模板参数。</target>
        </trans-unit>
        <trans-unit id="02adeee6d7a4139da18cf929102784cddbcce11d" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;AliasSeq&lt;/code&gt; with the elements of TList sorted so that the most derived types come first.</source>
          <target state="translated">返回一个 &lt;code&gt;AliasSeq&lt;/code&gt; ，其中TList的元素已排序，以便最派生的类型排在最前面。</target>
        </trans-unit>
        <trans-unit id="4f261cd72136edc2dc9d06ce0f0820a1f9e43f21" translate="yes" xml:space="preserve">
          <source>Returns an AggregateDeclaration when toParent() is that.</source>
          <target state="translated">当toParent()是那个时,返回一个AggregateDeclaration。</target>
        </trans-unit>
        <trans-unit id="c66e70830bf3581ee05b63fa397c6a247650d99c" translate="yes" xml:space="preserve">
          <source>Returns an AggregateDeclaration when toParent2() is that.</source>
          <target state="translated">当toParent2()是那个时,返回一个AggregateDeclaration。</target>
        </trans-unit>
        <trans-unit id="b63a2bef70d49ca42f41b2f703578a4b160c47e3" translate="yes" xml:space="preserve">
          <source>Returns an AggregateDeclaration when toParentDecl() is that.</source>
          <target state="translated">当toParentDecl()是那个时,返回一个AggregateDeclaration。</target>
        </trans-unit>
        <trans-unit id="a24ebb418526d4ea1c9c523a5550f2f492ebfb54" translate="yes" xml:space="preserve">
          <source>Returns an AggregateDeclaration when toParentLocal() is that.</source>
          <target state="translated">当toParentLocal()是那个时,返回一个AggregateDeclaration。</target>
        </trans-unit>
        <trans-unit id="8bd6ee4aba8d8369c0390b34882aa7518acea2d6" translate="yes" xml:space="preserve">
          <source>Returns an alias to the template that &lt;code&gt;T&lt;/code&gt; is an instance of. It will return &lt;code&gt;void&lt;/code&gt; if a symbol without a template is given.</source>
          <target state="translated">返回 &lt;code&gt;T&lt;/code&gt; 为其实例的模板的别名。如果给出没有模板的符号，它将返回 &lt;code&gt;void&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="32eeaebd0b9b4b2e20a6c1415518d77091f44840" translate="yes" xml:space="preserve">
          <source>Returns an appropriate ThreadInfo instance.</source>
          <target state="translated">返回一个合适的ThreadInfo实例。</target>
        </trans-unit>
        <trans-unit id="bcc12ef4c76afdb516aeb007ed7aa8abad047604" translate="yes" xml:space="preserve">
          <source>Returns an array literal with each element of the literal being the &lt;code&gt;.init&lt;/code&gt; property of the array element type.</source>
          <target state="translated">返回数组文字，文字的每个元素都是数组元素类型的 &lt;code&gt;.init&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="d9e5f612e7beec996567db962234883ae6bc99de" translate="yes" xml:space="preserve">
          <source>Returns an array of all known names for this encoding scheme</source>
          <target state="translated">返回此编码方案的所有已知名称的数组。</target>
        </trans-unit>
        <trans-unit id="d9060005afabd71371b4c96b9e17f7a9dd77986e" translate="yes" xml:space="preserve">
          <source>Returns an array of variants constructed from &lt;code&gt;args&lt;/code&gt;.</source>
          <target state="translated">返回从 &lt;code&gt;args&lt;/code&gt; 构造的变体数组。</target>
        </trans-unit>
        <trans-unit id="50a5ba547b51f3721f191cd04b59276c858d2120" translate="yes" xml:space="preserve">
          <source>Returns an empty range which is statically known to be empty and is guaranteed to have &lt;code&gt;length&lt;/code&gt; and be random access regardless of &lt;code&gt;R&lt;/code&gt;'s capabilities.</source>
          <target state="translated">返回一个空范围，该范围静态已知为空，并且无论 &lt;code&gt;R&lt;/code&gt; 的功能如何，都保证具有一定 &lt;code&gt;length&lt;/code&gt; 并且可以随机访问。</target>
        </trans-unit>
        <trans-unit id="a2db67fddaa2ff9367099794304809390991b8c9" translate="yes" xml:space="preserve">
          <source>Returns an indented string representation of this item</source>
          <target state="translated">返回此项目的缩进字符串表示</target>
        </trans-unit>
        <trans-unit id="90d2752e4e2d3333f90b26bff116e635c498afb5" translate="yes" xml:space="preserve">
          <source>Returns an indirect type one step from t.</source>
          <target state="translated">返回距离t一步的间接类型。</target>
        </trans-unit>
        <trans-unit id="0032b41f11fc5c384912ed7a8525357ea39f9f6e" translate="yes" xml:space="preserve">
          <source>Returns an initialized object. This function is mainly for eliminating construction differences between structs and classes. It allows code to not worry about whether the type it's constructing is a struct or a class.</source>
          <target state="translated">返回一个初始化对象。这个函数主要用于消除结构体和类之间的构造差异。它允许代码不必担心所构造的类型是结构还是类。</target>
        </trans-unit>
        <trans-unit id="b1c2d5368d6347f59a26a11ee3d9835dd0af0dc8" translate="yes" xml:space="preserve">
          <source>Returns an instance of ThreadInfo specific to the logical thread that is calling this routine or, if the calling thread was not create by this scheduler, returns ThreadInfo.thisInfo instead.</source>
          <target state="translated">返回调用该例程的逻辑线程特有的ThreadInfo实例,如果调用线程不是由该调度器创建的,则返回ThreadInfo.thisInfo代替。</target>
        </trans-unit>
        <trans-unit id="0ae0415de0ccef54833a72e85f53f9141a38fdb3" translate="yes" xml:space="preserve">
          <source>Returns an interval that covers from the earliest time point of two intervals up to (but not including) the latest time point of two intervals.</source>
          <target state="translated">返回从两个间隔的最早时间点到(但不包括)两个间隔的最近时间点的间隔。</target>
        </trans-unit>
        <trans-unit id="e7d37bf7d60fa80601c3b31ae0851a49b472889a" translate="yes" xml:space="preserve">
          <source>Returns an output range that locks the file and allows fast writing to it.</source>
          <target state="translated">返回一个锁定文件并允许快速写入文件的输出范围。</target>
        </trans-unit>
        <trans-unit id="a0c5ef877564042ce05279bfaa0058766c89f7af" translate="yes" xml:space="preserve">
          <source>Returns byte at index i in file.</source>
          <target state="translated">返回文件中index i处的字节。</target>
        </trans-unit>
        <trans-unit id="8077519e3d799a5540868221c3fd94b5e38799f1" translate="yes" xml:space="preserve">
          <source>Returns class instance alignment.</source>
          <target state="translated">返回类实例对齐。</target>
        </trans-unit>
        <trans-unit id="d0d8ee3e2d3218aaa364d114f57797b2d90dd17d" translate="yes" xml:space="preserve">
          <source>Returns cmp OP 0; where OP is ==, !=, &amp;lt;, &amp;gt;=, etc. Result is 0 or 1</source>
          <target state="translated">返回cmp OP 0; 其中OP为==，！=，&amp;lt;，&amp;gt; =等。结果为0或1</target>
        </trans-unit>
        <trans-unit id="4b2d520bcd5b7fe413af70438b8b9387edccb14f" translate="yes" xml:space="preserve">
          <source>Returns code for curl_formadd()</source>
          <target state="translated">返回curl_formadd()的代码。</target>
        </trans-unit>
        <trans-unit id="3271d44e1d89579a34e8e621ef6a5dadbc24c6be" translate="yes" xml:space="preserve">
          <source>Returns cosine of x. x is in radians.</source>
          <target state="translated">Returns cosine of x.x is in radians.</target>
        </trans-unit>
        <trans-unit id="ec7b9a230e216f026f6bbc20d87e29fe18cbb8d4" translate="yes" xml:space="preserve">
          <source>Returns dynamic array, the elements of which are the keys in the associative array.</source>
          <target state="translated">返回动态数组,其元素是关联数组中的键。</target>
        </trans-unit>
        <trans-unit id="a321b50df478fd8b75cbeb825d72294b4d8afe42" translate="yes" xml:space="preserve">
          <source>Returns dynamic array, the elements of which are the values in the associative array.</source>
          <target state="translated">返回动态数组,其元素是关联数组中的值。</target>
        </trans-unit>
        <trans-unit id="992f29577d41e3669ad205a1ac555feb12d094bc" translate="yes" xml:space="preserve">
          <source>Returns e1 OP e2; where OP is ==, !=, &amp;lt;, &amp;gt;=, etc. Result is 0 or 1</source>
          <target state="translated">返回e1 OP e2; 其中OP为==，！=，&amp;lt;，&amp;gt; =等。结果为0或1</target>
        </trans-unit>
        <trans-unit id="25fc6148e44f0a204beb233c0e998d8935f66a07" translate="yes" xml:space="preserve">
          <source>Returns entire file contents as an array.</source>
          <target state="translated">以数组形式返回整个文件内容。</target>
        </trans-unit>
        <trans-unit id="2302eb686d55db1684e3931086ac4fa5129c134d" translate="yes" xml:space="preserve">
          <source>Returns exact mangled name of function.</source>
          <target state="translated">返回函数的确切名称。</target>
        </trans-unit>
        <trans-unit id="740a3ce35c35ab6f2d1182323a12c3dce61abfd8" translate="yes" xml:space="preserve">
          <source>Returns false always</source>
          <target state="translated">总是返回false</target>
        </trans-unit>
        <trans-unit id="ff2f90368a361d1c8bc3d23da1c1ddaf975121dc" translate="yes" xml:space="preserve">
          <source>Returns hnsecs in the local time zone using the standard C function calls on Posix systems and the standard Windows system calls on Windows systems to adjust the time to the appropriate time zone from std time.</source>
          <target state="translated">使用Posix系统上的标准C函数调用和Windows系统上的标准Windows系统调用,返回本地时区的hnsecs,将时间从std time调整到合适的时区。</target>
        </trans-unit>
        <trans-unit id="324edb56de4911b04cacfe0a8f3e5388ba66e6ed" translate="yes" xml:space="preserve">
          <source>Returns incomplete beta integral of the arguments, evaluated from zero to x. The regularized incomplete beta function is defined as</source>
          <target state="translated">返回参数的不完全贝塔积分,从零到x的值。正则化不完全贝塔函数定义为</target>
        </trans-unit>
        <trans-unit id="2a90c38cdc48542d6a62371935faec39ef5c38bb" translate="yes" xml:space="preserve">
          <source>Returns midnight.</source>
          <target state="translated">午夜归来。</target>
        </trans-unit>
        <trans-unit id="97f87cbe8cd887a66a7de26e9826323b7e508d02" translate="yes" xml:space="preserve">
          <source>Returns nonzero if e is found in &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">如果在 &lt;code&gt;c&lt;/code&gt; 中找到e，则返回非零值。</target>
        </trans-unit>
        <trans-unit id="e49c58203f85f22a358092aadf3e729bbc5db241" translate="yes" xml:space="preserve">
          <source>Returns number of cores in CPU</source>
          <target state="translated">返回CPU的核心数</target>
        </trans-unit>
        <trans-unit id="32ab6c0900cf2cafed0d6cd4b43b8557f44a75d7" translate="yes" xml:space="preserve">
          <source>Returns number of threads per CPU</source>
          <target state="translated">返回每个CPU的线程数</target>
        </trans-unit>
        <trans-unit id="bab2cb38d1f647405ab83bfb5ea8dfd3e2ed714a" translate="yes" xml:space="preserve">
          <source>Returns number of values in the associative array. Unlike for dynamic arrays, it is read-only.</source>
          <target state="translated">返回关联数组中的值的数量。与动态数组不同,它是只读的。</target>
        </trans-unit>
        <trans-unit id="21d708c58ed912c7bc21c2298cf5655f917be8b9" translate="yes" xml:space="preserve">
          <source>Returns one of a collection of expressions based on the value of the switch expression.</source>
          <target state="translated">根据开关表达式的值,返回表达式集合中的一个。</target>
        </trans-unit>
        <trans-unit id="deca66d33e8a1dd7d736a253db97e7667b9e6b34" translate="yes" xml:space="preserve">
          <source>Returns one second short of midnight.</source>
          <target state="translated">离午夜还差一秒就回来了。</target>
        </trans-unit>
        <trans-unit id="e5f064227947f38ad15a46c5756f86fcec988d4d" translate="yes" xml:space="preserve">
          <source>Returns pointer to underlying &lt;code&gt;sockaddr&lt;/code&gt; structure.</source>
          <target state="translated">返回指向基础 &lt;code&gt;sockaddr&lt;/code&gt; 结构的指针。</target>
        </trans-unit>
        <trans-unit id="9306efcd51f99fec396c2c46d81607172571eed7" translate="yes" xml:space="preserve">
          <source>Returns processor string, for display purposes only</source>
          <target state="translated">返回处理器字符串,仅用于显示目的</target>
        </trans-unit>
        <trans-unit id="cc0b14fb53d2f5a5602879c4de2b3a707c7529ef" translate="yes" xml:space="preserve">
          <source>Returns runtime profile stats for currently active GC implementation See &lt;code&gt;core.memory.GC.ProfileStats&lt;/code&gt; for list of available metrics.</source>
          <target state="translated">返回当前活动的GC实施的运行时配置文件统计信息。有关可用指标列表，请参阅 &lt;code&gt;core.memory.GC.ProfileStats&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d3e62d6037c0e63f8a83fb2003a74125453d61ef" translate="yes" xml:space="preserve">
          <source>Returns runtime stats for currently active GC implementation See &lt;code&gt;core.memory.GC.Stats&lt;/code&gt; for list of available metrics.</source>
          <target state="translated">返回当前活动的GC实现的运行时统计信息。有关可用度量的列表，请参阅 &lt;code&gt;core.memory.GC.Stats&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="80a001519cbf8d51d6bfe95b96c1bf1bc2a2240e" translate="yes" xml:space="preserve">
          <source>Returns sine of x. x is in radians.</source>
          <target state="translated">Returns sine of x.x is in radians.</target>
        </trans-unit>
        <trans-unit id="661c398de9351ae7788c64f5c998cd25ac7e5e45" translate="yes" xml:space="preserve">
          <source>Returns size of the type.</source>
          <target state="translated">返回类型的大小。</target>
        </trans-unit>
        <trans-unit id="f88530269c33a2ecb15b4c398506263adb7194e7" translate="yes" xml:space="preserve">
          <source>Returns slice of file contents as an array.</source>
          <target state="translated">以数组形式返回文件内容的片断。</target>
        </trans-unit>
        <trans-unit id="bbe508fc76d05bfe400089b46c25ef1854e4f576" translate="yes" xml:space="preserve">
          <source>Returns static array representation</source>
          <target state="translated">返回静态数组表示</target>
        </trans-unit>
        <trans-unit id="6a04d3cce76b0b9fa6130ec7125341d85c2586b8" translate="yes" xml:space="preserve">
          <source>Returns std time using the standard C function calls on Posix systems and the standard Windows system calls on Windows systems to adjust the time to UTC from the appropriate time zone.</source>
          <target state="translated">使用Posix系统上的标准C函数调用和Windows系统上的标准Windows系统调用返回标准时间,将时间从相应的时区调整为UTC。</target>
        </trans-unit>
        <trans-unit id="049ab194623f5b5d997c099672563eb20601b1e9" translate="yes" xml:space="preserve">
          <source>Returns storage implementation struct.</source>
          <target state="translated">返回存储实现结构。</target>
        </trans-unit>
        <trans-unit id="4d11cb1f5285eace9f0da6f72821436f23103eff" translate="yes" xml:space="preserve">
          <source>Returns tangent of x. x is in radians.</source>
          <target state="translated">Returns tangent of x.x is in radians.</target>
        </trans-unit>
        <trans-unit id="ba66f3be48c6467f353f5efd9891c6627cdb89ab" translate="yes" xml:space="preserve">
          <source>Returns that part of the element which has already been parsed</source>
          <target state="translated">返回已经解析过的那部分元素</target>
        </trans-unit>
        <trans-unit id="b608edc397452544804144ad78bbe52ab5fc2029" translate="yes" xml:space="preserve">
          <source>Returns the 1-based index of the first needle found in &lt;code&gt;haystack&lt;/code&gt;. If no needle is found, then &lt;code&gt;0&lt;/code&gt; is returned.</source>
          <target state="translated">返回在 &lt;code&gt;haystack&lt;/code&gt; 中找到的第一根针的从1开始的索引。如果找不到针，则返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7aaa8e97c1413fd2bd543e9004e05b5cf5c4f371" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;#Combining%20class&quot;&gt;combining class&lt;/a&gt; of &lt;code&gt;ch&lt;/code&gt;.</source>
          <target state="translated">返回&lt;a href=&quot;#Combining%20class&quot;&gt;结合类&lt;/a&gt;的 &lt;code&gt;ch&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8be721db94c04e472c94307aecfdfe427375b92" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; farthest in the future which is representable by &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回将来最远的&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;，该&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;可由Date表示。</target>
        </trans-unit>
        <trans-unit id="5c1def76d6ce884cce4d4c98ab3a2fabda5822d2" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; farthest in the past which is representable by &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回过去最远的&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;，可以用&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;表示。</target>
        </trans-unit>
        <trans-unit id="ab0c4a5962794ed68c3814267d8b274bfc7e912b" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; farthest in the future which is representable by &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;最远的未来是由表示的&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0d6cfbf56336eb14c68e9c4e005d3c238efe7d8a" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; farthest in the past which is representable by &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回过去最远的&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;，它可以由&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;表示。</target>
        </trans-unit>
        <trans-unit id="509916d34bf387cddcb67bcb14780b3e260c02f2" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; farthest in the future which is representable by &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;可表示的将来最远的&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1e9fb79b3cb15b2a01f1101a7e66c7413cf60d04" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; farthest in the past which is representable by &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;可以表示的过去最远的&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6098d975abe5b5502583c0eb337b8cf5e7991403" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;http://wikipedia.org/wiki/Levenshtein_distance&quot;&gt;Levenshtein distance&lt;/a&gt; between &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt;. The Levenshtein distance computes the minimal amount of edit operations necessary to transform &lt;code&gt;s&lt;/code&gt; into &lt;code&gt;t&lt;/code&gt;. Performs &amp;Omicron;(&lt;code&gt;s.length * t.length&lt;/code&gt;) evaluations of &lt;code&gt;equals&lt;/code&gt; and occupies &amp;Omicron;(&lt;code&gt;min(s.length, t.length)&lt;/code&gt;) storage.</source>
          <target state="translated">返回 &lt;code&gt;s&lt;/code&gt; 和 &lt;code&gt;t&lt;/code&gt; 之间的&lt;a href=&quot;http://wikipedia.org/wiki/Levenshtein_distance&quot;&gt;Levenshtein距离&lt;/a&gt;。Levenshtein距离计算将 &lt;code&gt;s&lt;/code&gt; 转换为 &lt;code&gt;t&lt;/code&gt; 所需的最少编辑操作量。执行&amp;Omicron;（ &lt;code&gt;s.length * t.length&lt;/code&gt; ）的评价 &lt;code&gt;equals&lt;/code&gt; 并占据&amp;Omicron;（ &lt;code&gt;min(s.length, t.length)&lt;/code&gt; ）存储。</target>
        </trans-unit>
        <trans-unit id="1f6a32a8e8e296b1d3ccd0da949b1aac7471ca63" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;FILE*&lt;/code&gt; corresponding to this object.</source>
          <target state="translated">返回与此对象对应的 &lt;code&gt;FILE*&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="257f9050b4dfb4d53f237029d2536b3e3101b2ba" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;n&lt;/code&gt;th element in the composite range. Defined if all ranges offer random access.</source>
          <target state="translated">返回组合范围内的第 &lt;code&gt;n&lt;/code&gt; 个元素。定义是否所有范围都提供随机访问。</target>
        </trans-unit>
        <trans-unit id="0b59ae7fbd96d7d27b3f0e2f2cf1c051ba985c19" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;shared&lt;/code&gt; global instance of the &lt;code&gt;NullAllocator&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;NullAllocator&lt;/code&gt; 的 &lt;code&gt;shared&lt;/code&gt; 全局实例。</target>
        </trans-unit>
        <trans-unit id="ce6e1c2ff99eaab11519ce3ee941b2f29633ee4b" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;typeid&lt;/code&gt; of the currently held value.</source>
          <target state="translated">返回当前保留值的 &lt;code&gt;typeid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ca240f5c1017fb9b7d3e3febde06ae0b4f5b4d4" translate="yes" xml:space="preserve">
          <source>Returns the FunctionAttribute mask for function &lt;code&gt;func&lt;/code&gt;.</source>
          <target state="translated">返回函数 &lt;code&gt;func&lt;/code&gt; 的FunctionAttribute掩码。</target>
        </trans-unit>
        <trans-unit id="1d42a93b48c21969d8cb340934a7c100cc9b7231" translate="yes" xml:space="preserve">
          <source>Returns the IPv4 address number (in host byte order).</source>
          <target state="translated">返回IPv4地址号(按主机字节顺序)。</target>
        </trans-unit>
        <trans-unit id="45baaf9601220b1e25ad558814402648ada571ca" translate="yes" xml:space="preserve">
          <source>Returns the IPv4 port number (in host byte order).</source>
          <target state="translated">返回IPv4端口号(按主机字节顺序)。</target>
        </trans-unit>
        <trans-unit id="23c37a04b925d1835fba17fa23f45825ee624aa3" translate="yes" xml:space="preserve">
          <source>Returns the IPv6 address.</source>
          <target state="translated">返回IPv6地址。</target>
        </trans-unit>
        <trans-unit id="cbe7a9fcaba392224d10bfe292c3ee68c2a2a8ee" translate="yes" xml:space="preserve">
          <source>Returns the IPv6 port number.</source>
          <target state="translated">返回IPv6端口号。</target>
        </trans-unit>
        <trans-unit id="58c93b39819a6af0f07c9d344cc49d548d1bf175" translate="yes" xml:space="preserve">
          <source>Returns the JSONType of the value stored in this structure.</source>
          <target state="translated">返回存储在该结构中的值的JSON类型。</target>
        </trans-unit>
        <trans-unit id="e743c49645b9efc621fefcedde424e322a718efa" translate="yes" xml:space="preserve">
          <source>Returns the Levenshtein distance and the edit path between &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">返回Levenshtein距离以及 &lt;code&gt;s&lt;/code&gt; 和 &lt;code&gt;t&lt;/code&gt; 之间的编辑路径。</target>
        </trans-unit>
        <trans-unit id="81b4aeabdccf76b9b4ea6ea89fc307eb4334e212" translate="yes" xml:space="preserve">
          <source>Returns the absolute value of a duration.</source>
          <target state="translated">返回持续时间的绝对值。</target>
        </trans-unit>
        <trans-unit id="e570495f978a68cd4bcc7ebeafb6cd038aae9b65" translate="yes" xml:space="preserve">
          <source>Returns the absolute value of x converted to the corresponding unsigned type.</source>
          <target state="translated">返回x的绝对值转换为相应的无符号类型。</target>
        </trans-unit>
        <trans-unit id="1cc10390f78435ed9830cbc4df9f01154f2f0b33" translate="yes" xml:space="preserve">
          <source>Returns the actual bytes allocated when &lt;code&gt;n&lt;/code&gt; bytes are requested, i.e. &lt;code&gt;n.roundUpToMultipleOf(blockSize)&lt;/code&gt;.</source>
          <target state="translated">返回当请求 &lt;code&gt;n&lt;/code&gt; 个字节时分配的实际字节，即 &lt;code&gt;n.roundUpToMultipleOf(blockSize)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6997f16ab28630fa41ce604ab7a7c130397f707" translate="yes" xml:space="preserve">
          <source>Returns the alignment offered.</source>
          <target state="translated">Returns the alignment offered.</target>
        </trans-unit>
        <trans-unit id="196851e7c8f7265b2099a4234f1e49f8e2183ee7" translate="yes" xml:space="preserve">
          <source>Returns the argument, x, for which the area under the Normal probability density function (integrated from minus infinity to x) is equal to p.</source>
          <target state="translated">返回参数x,其正态概率密度函数下的面积(从负无穷到x的积分)等于p。</target>
        </trans-unit>
        <trans-unit id="57478ab50bf3787cb5fea44777273680e0c4914f" translate="yes" xml:space="preserve">
          <source>Returns the arguments supplied when the process was started.</source>
          <target state="translated">返回进程启动时提供的参数。</target>
        </trans-unit>
        <trans-unit id="caddd809a5c7082d66bc12eafd8233866c8fdd55" translate="yes" xml:space="preserve">
          <source>Returns the array index at which the (n+1)th code point begins.</source>
          <target state="translated">返回(n+1)个码点开始的数组索引。</target>
        </trans-unit>
        <trans-unit id="c32d42172aeb065d7243d264818252792375c5cc" translate="yes" xml:space="preserve">
          <source>Returns the array length multiplied by the number of bytes per array element.</source>
          <target state="translated">返回数组长度乘以每个数组元素的字节数。</target>
        </trans-unit>
        <trans-unit id="c9d41878aa69ec140443d5bdd50b1df8caa2f4c8" translate="yes" xml:space="preserve">
          <source>Returns the attributes of the file represented by this &lt;code&gt;DirEntry&lt;/code&gt;.</source>
          <target state="translated">返回此 &lt;code&gt;DirEntry&lt;/code&gt; 表示的文件的属性。</target>
        </trans-unit>
        <trans-unit id="094eb86ed26e7ff7b39ed1c60d218ec0cb6f8669" translate="yes" xml:space="preserve">
          <source>Returns the attributes of the given file.</source>
          <target state="translated">返回给定文件的属性。</target>
        </trans-unit>
        <trans-unit id="8c871e611c4b78aace5fde79e51a6afac50905d9" translate="yes" xml:space="preserve">
          <source>Returns the available disk space based on a given path. On Windows, &lt;code&gt;path&lt;/code&gt; must be a directory; on POSIX systems, it can be a file or directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f46326e3c81a7e2aa110ff84039dd607a22b74f5" translate="yes" xml:space="preserve">
          <source>Returns the available disk space based on a given path. On Windows, &lt;code&gt;path&lt;/code&gt; must be a directory; on Posix systems, it can be a file or directory.</source>
          <target state="translated">根据给定路径返回可用磁盘空间。在Windows上， &lt;code&gt;path&lt;/code&gt; 必须是目录。在Posix系统上，它可以是文件或目录。</target>
        </trans-unit>
        <trans-unit id="a5a77c34a5774ea86ceddcc9f783845770a9aa8d" translate="yes" xml:space="preserve">
          <source>Returns the available size for further allocations in bytes.</source>
          <target state="translated">以字节为单位返回进一步分配的可用大小。</target>
        </trans-unit>
        <trans-unit id="33db445e3ce8a2d6d803f52279746f7aa60d2fc5" translate="yes" xml:space="preserve">
          <source>Returns the base address of the memory block containing p. This value is useful to determine whether p is an interior pointer, and the result may be passed to routines such as sizeOf which may otherwise fail. If p references memory not originally allocated by this garbage collector, if p is null, or if the garbage collector does not support this operation, null will be returned.</source>
          <target state="translated">返回包含p的内存块的基地址,这个值对于确定p是否是内部指针很有用,结果可以传递给sizeOf等例程,否则可能会失败。如果p引用的内存不是这个垃圾收集器最初分配的,如果p为空,或者垃圾收集器不支持这个操作,将返回null。</target>
        </trans-unit>
        <trans-unit id="d829600059cc6d895e0a04268346ed1bba620a88" translate="yes" xml:space="preserve">
          <source>Returns the base e (2.718...) logarithm of the absolute value of the gamma function of the argument.</source>
          <target state="translated">返回参数的伽马函数绝对值的基数e(2.718...)对数。</target>
        </trans-unit>
        <trans-unit id="93475ffa06ff0a318625b6980908fdc9945ae0b4" translate="yes" xml:space="preserve">
          <source>Returns the capacity of the array (the maximum number of elements the managed array can accommodate before triggering a reallocation). If any appending will reallocate, &lt;code&gt;capacity&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">返回数组的容量（托管数组在触发重新分配之前可以容纳的最大元素数）。如果有任何追加将重新分配， &lt;code&gt;capacity&lt;/code&gt; 将返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7cd88ebd34fb9d666f1281686d2cf10bd812d12f" translate="yes" xml:space="preserve">
          <source>Returns the capacity of the heap, which is the length of the underlying store (if the store is a range) or the capacity of the underlying store (if the store is a container).</source>
          <target state="translated">返回堆的容量,即底层存储的长度(如果存储是一个范围)或底层存储的容量(如果存储是一个容器)。</target>
        </trans-unit>
        <trans-unit id="5544e04dfcc3c86cc8c55e7a6573acb213f91559" translate="yes" xml:space="preserve">
          <source>Returns the code length of c in code units for the encoding. sz is the encoding: 1 = utf8, 2 = utf16, 4 = utf32.</source>
          <target state="translated">返回c的编码长度,以编码单位为单位,sz是编码。1=utf8,2=utf16,4=utf32.</target>
        </trans-unit>
        <trans-unit id="6a077755062985e986914e8c259ac848491d8b8e" translate="yes" xml:space="preserve">
          <source>Returns the code length of c in code units.</source>
          <target state="translated">以代码单位返回c的代码长度。</target>
        </trans-unit>
        <trans-unit id="219b4c31cab22d2577f34d0a0da0c17190131039" translate="yes" xml:space="preserve">
          <source>Returns the common prefix of two ranges.</source>
          <target state="translated">返回两个范围的共同前缀。</target>
        </trans-unit>
        <trans-unit id="728b4e05fb8b0f9c59e347e6977095f89332001f" translate="yes" xml:space="preserve">
          <source>Returns the concatenation of &lt;code&gt;c&lt;/code&gt; and &lt;code&gt;r&lt;/code&gt;. &lt;code&gt;x&lt;/code&gt; may be a single element or an input range.</source>
          <target state="translated">返回 &lt;code&gt;c&lt;/code&gt; 和 &lt;code&gt;r&lt;/code&gt; 的串联。 &lt;code&gt;x&lt;/code&gt; 可以是单个元素或输入范围。</target>
        </trans-unit>
        <trans-unit id="ea0c4e9d22c1a50602a0199f4850469755760e82" translate="yes" xml:space="preserve">
          <source>Returns the concatenation of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;. &lt;code&gt;x&lt;/code&gt; may be a single element or an input range type.</source>
          <target state="translated">返回 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;c&lt;/code&gt; 的串联。 &lt;code&gt;x&lt;/code&gt; 可以是单个元素或输入范围类型。</target>
        </trans-unit>
        <trans-unit id="5e42c6644bd4a3579479c7e0bc4f63694376ecd9" translate="yes" xml:space="preserve">
          <source>Returns the corresponding signed type for T. T must be a numeric integral type, otherwise a compile-time error occurs.</source>
          <target state="translated">返回T的对应符号类型,T必须是数值积分类型,否则会出现编译时错误。</target>
        </trans-unit>
        <trans-unit id="79e5c0231d51031f2d202e464e73ae44600f2359" translate="yes" xml:space="preserve">
          <source>Returns the corresponding signed value for &lt;code&gt;x&lt;/code&gt; (e.g. if &lt;code&gt;x&lt;/code&gt; has type &lt;code&gt;uint&lt;/code&gt;, it returns &lt;code&gt;cast(int) x&lt;/code&gt;). The advantage compared to the cast is that you do not need to rewrite the cast if &lt;code&gt;x&lt;/code&gt; later changes type (e.g from &lt;code&gt;uint&lt;/code&gt; to &lt;code&gt;ulong&lt;/code&gt;).</source>
          <target state="translated">返回 &lt;code&gt;x&lt;/code&gt; 的相应带符号值（例如，如果 &lt;code&gt;x&lt;/code&gt; 具有 &lt;code&gt;uint&lt;/code&gt; 类型，则返回 &lt;code&gt;cast(int) x&lt;/code&gt; ）。与强制类型转换相比的优势在于，如果 &lt;code&gt;x&lt;/code&gt; 之后更改类型（例如，从 &lt;code&gt;uint&lt;/code&gt; 变为 &lt;code&gt;ulong&lt;/code&gt; ），则无需重写强制类型。</target>
        </trans-unit>
        <trans-unit id="e0c7cfaa654c9cafcf15a0f23f1488d7a5472921" translate="yes" xml:space="preserve">
          <source>Returns the corresponding unsigned value for &lt;code&gt;x&lt;/code&gt; (e.g. if &lt;code&gt;x&lt;/code&gt; has type &lt;code&gt;int&lt;/code&gt;, it returns &lt;code&gt;cast(uint) x&lt;/code&gt;). The advantage compared to the cast is that you do not need to rewrite the cast if &lt;code&gt;x&lt;/code&gt; later changes type (e.g from &lt;code&gt;int&lt;/code&gt; to &lt;code&gt;long&lt;/code&gt;).</source>
          <target state="translated">返回 &lt;code&gt;x&lt;/code&gt; 的相应无符号值（例如，如果 &lt;code&gt;x&lt;/code&gt; 具有 &lt;code&gt;int&lt;/code&gt; 类型，则返回 &lt;code&gt;cast(uint) x&lt;/code&gt; ）。与强制类型转换相比的优势在于，如果 &lt;code&gt;x&lt;/code&gt; 之后更改类型（例如，从 &lt;code&gt;int&lt;/code&gt; 到 &lt;code&gt;long&lt;/code&gt; ），则无需重写强制类型。</target>
        </trans-unit>
        <trans-unit id="93c8ff19291982433fb8e58bc74d1305cf3d3d6b" translate="yes" xml:space="preserve">
          <source>Returns the creation time of the file represented by this &lt;code&gt;DirEntry&lt;/code&gt;.</source>
          <target state="translated">返回此 &lt;code&gt;DirEntry&lt;/code&gt; 表示的文件的创建时间。</target>
        </trans-unit>
        <trans-unit id="0bc5e97841eee44f7e192aec2d0c900432b1d24f" translate="yes" xml:space="preserve">
          <source>Returns the current hashed value as an ubyte array.</source>
          <target state="translated">以ubyte数组形式返回当前的哈希值。</target>
        </trans-unit>
        <trans-unit id="68e5edc996727c03a46e20f3828e25d19770ed5d" translate="yes" xml:space="preserve">
          <source>Returns the current iterated element.</source>
          <target state="translated">返回当前迭代的元素。</target>
        </trans-unit>
        <trans-unit id="694c91992a7cd9a589268dc0b599c9e30217ee47" translate="yes" xml:space="preserve">
          <source>Returns the current number in the random sequence.</source>
          <target state="translated">返回随机序列中的当前数字。</target>
        </trans-unit>
        <trans-unit id="cf614e2cf305b5a6c219be7d0f159e463b6a471a" translate="yes" xml:space="preserve">
          <source>Returns the current random value.</source>
          <target state="translated">返回当前的随机值。</target>
        </trans-unit>
        <trans-unit id="bd225b42fd192befda1703e4a048ac4c02f68a09" translate="yes" xml:space="preserve">
          <source>Returns the current time in the given time zone.</source>
          <target state="translated">返回指定时区的当前时间。</target>
        </trans-unit>
        <trans-unit id="667c7645c12244d2978ecd63544e99b3b04e054e" translate="yes" xml:space="preserve">
          <source>Returns the decoded interior of an element.</source>
          <target state="translated">返回元素的解密内部。</target>
        </trans-unit>
        <trans-unit id="a8a27e3ff6fcfae053871df190c003ba8b0decb7" translate="yes" xml:space="preserve">
          <source>Returns the difference between the two &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt;s in months.</source>
          <target state="translated">以月为单位返回两个&lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;之间的差。</target>
        </trans-unit>
        <trans-unit id="ace8ca94508ab7b3c40df8f7c875267d12ce842b" translate="yes" xml:space="preserve">
          <source>Returns the difference between the two &lt;a href=&quot;#DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt;s in months.</source>
          <target state="translated">返回两个&lt;a href=&quot;#DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;之间的差（以月为单位）。</target>
        </trans-unit>
        <trans-unit id="b1a5d62e20b24fe7c30bfb712ac567819896873f" translate="yes" xml:space="preserve">
          <source>Returns the difference between the two &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;s in months.</source>
          <target state="translated">返回两个&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;之间的时差（以月为单位）。</target>
        </trans-unit>
        <trans-unit id="08265990114304116123a83a291ea4f348f1c3a1" translate="yes" xml:space="preserve">
          <source>Returns the duration between &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;begin&lt;/code&gt; 和 &lt;code&gt;end&lt;/code&gt; 之间的持续时间。</target>
        </trans-unit>
        <trans-unit id="a353d4f8b3242008c7d6549132f8ef2dcdd8363e" translate="yes" xml:space="preserve">
          <source>Returns the element type of a given range.</source>
          <target state="translated">返回给定范围的元素类型。</target>
        </trans-unit>
        <trans-unit id="85bc1cdc4a1c465dc09c15d9aad74129f2ed9a69" translate="yes" xml:space="preserve">
          <source>Returns the encoding element type of a given range.</source>
          <target state="translated">返回给定范围的编码元素类型。</target>
        </trans-unit>
        <trans-unit id="c652de2806a607191d794853e018776beb310aa3" translate="yes" xml:space="preserve">
          <source>Returns the file number corresponding to this object.</source>
          <target state="translated">返回该对象对应的文件号。</target>
        </trans-unit>
        <trans-unit id="037c9b8f48e4fe12a5d5c13bebaf2bfd864713de" translate="yes" xml:space="preserve">
          <source>Returns the finished CRC hash. This also calls &lt;a href=&quot;#start&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; to reset the internal state.</source>
          <target state="translated">返回完成的CRC哈希。这也称为&lt;a href=&quot;#start&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;以重置内部状态。</target>
        </trans-unit>
        <trans-unit id="1b806b45f0f49c45cfe5429b9d0a5ecd137b2191" translate="yes" xml:space="preserve">
          <source>Returns the finished MD5 hash. This also calls &lt;a href=&quot;#start&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; to reset the internal state.</source>
          <target state="translated">返回完成的MD5哈希值。这也称为&lt;a href=&quot;#start&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;以重置内部状态。</target>
        </trans-unit>
        <trans-unit id="b7c7d50613428f96baa5c9b9724d5388e68313dc" translate="yes" xml:space="preserve">
          <source>Returns the finished RIPEMD160 hash. This also calls &lt;a href=&quot;#start&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; to reset the internal state.</source>
          <target state="translated">返回完成的RIPEMD160哈希。这也称为&lt;a href=&quot;#start&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;以重置内部状态。</target>
        </trans-unit>
        <trans-unit id="dea8c0070ef5fe4ab0db856146f0106a3e3562dd" translate="yes" xml:space="preserve">
          <source>Returns the finished SHA hash. This also calls &lt;a href=&quot;#start&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; to reset the internal state.</source>
          <target state="translated">返回完成的SHA哈希。这也称为&lt;a href=&quot;#start&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;以重置内部状态。</target>
        </trans-unit>
        <trans-unit id="28e136de73953fc61a3a088d3f57bebe2d0e4e54" translate="yes" xml:space="preserve">
          <source>Returns the first element of the container, in a container-defined order.</source>
          <target state="translated">按照容器定义的顺序,返回容器的第一个元素。</target>
        </trans-unit>
        <trans-unit id="4714e9158c318abdd86a87254da5520e1a86d92a" translate="yes" xml:space="preserve">
          <source>Returns the full path of the current executable.</source>
          <target state="translated">返回当前可执行文件的完整路径。</target>
        </trans-unit>
        <trans-unit id="7ff4d778149aefa73277256ef7b4774ab307cc89" translate="yes" xml:space="preserve">
          <source>Returns the given hnsecs without changing them at all.</source>
          <target state="translated">返回给定的hnsecs,不做任何改变。</target>
        </trans-unit>
        <trans-unit id="0630a073d930fd678380d4e8dc6ef00af366e6ac" translate="yes" xml:space="preserve">
          <source>Returns the global instance of this allocator type. The C heap allocator is thread-safe, therefore all of its methods and &lt;code&gt;instance&lt;/code&gt; itself are &lt;code&gt;shared&lt;/code&gt;.</source>
          <target state="translated">返回此分配器类型的全局实例。C堆分配器是线程安全的，因此它的所有方法和 &lt;code&gt;instance&lt;/code&gt; 本身都是 &lt;code&gt;shared&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="532b7a8ef32828945116d58255668b248151d31a" translate="yes" xml:space="preserve">
          <source>Returns the global instance of this allocator type. The C heap allocator is thread-safe, therefore all of its methods and &lt;code&gt;it&lt;/code&gt; itself are &lt;code&gt;shared&lt;/code&gt;.</source>
          <target state="translated">返回此分配器类型的全局实例。C堆中分配是线程安全的，因此的所有方法和 &lt;code&gt;it&lt;/code&gt; 本身的 &lt;code&gt;shared&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2895802e94fc2b99238a662c48e664762c727c4c" translate="yes" xml:space="preserve">
          <source>Returns the global instance of this allocator type. The garbage collected allocator is thread-safe, therefore all of its methods and &lt;code&gt;instance&lt;/code&gt; itself are &lt;code&gt;shared&lt;/code&gt;.</source>
          <target state="translated">返回此分配器类型的全局实例。垃圾回收的分配器是线程安全的，因此其所有方法和 &lt;code&gt;instance&lt;/code&gt; 本身都是 &lt;code&gt;shared&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e7e95e8836e55e0ec878d1ca0df5344c77da1b1" translate="yes" xml:space="preserve">
          <source>Returns the good allocation size that guarantees zero internal fragmentation.</source>
          <target state="translated">返回保证内部零碎片的好分配大小。</target>
        </trans-unit>
        <trans-unit id="761ce3cb0c363cd752d6f37bf64ee9bf23d20ff3" translate="yes" xml:space="preserve">
          <source>Returns the hash as an uint value.</source>
          <target state="translated">返回一个uint值的哈希值。</target>
        </trans-unit>
        <trans-unit id="43702045b3eca7cf2498797e1306c82ad1750c21" translate="yes" xml:space="preserve">
          <source>Returns the hash of a CData</source>
          <target state="translated">返回CD数据的哈希值</target>
        </trans-unit>
        <trans-unit id="2f9ae23bc6367b9df14868b1db260da7bcf8721c" translate="yes" xml:space="preserve">
          <source>Returns the hash of a Comment</source>
          <target state="translated">返回评论的哈希值</target>
        </trans-unit>
        <trans-unit id="2ecb60c7d5597660ed6f2efa04c3fa44f7526861" translate="yes" xml:space="preserve">
          <source>Returns the hash of a Document</source>
          <target state="translated">返回文档的哈希值</target>
        </trans-unit>
        <trans-unit id="c18bf4f15890b55835846a7ee93b31c53d4df9fc" translate="yes" xml:space="preserve">
          <source>Returns the hash of a ProcessingInstruction</source>
          <target state="translated">返回一个ProcessingInstruction的哈希值</target>
        </trans-unit>
        <trans-unit id="36fc578ccf9adb115f7ba61024828b87b4f3726b" translate="yes" xml:space="preserve">
          <source>Returns the hash of a Tag</source>
          <target state="translated">Returns the hash of a Tag</target>
        </trans-unit>
        <trans-unit id="fc39c8c90907974b818c8e42b40d3d4678023682" translate="yes" xml:space="preserve">
          <source>Returns the hash of a text section</source>
          <target state="translated">返回文本部分的哈希值</target>
        </trans-unit>
        <trans-unit id="f122d9bed5829b092eff21cc9e0e5455257e65a2" translate="yes" xml:space="preserve">
          <source>Returns the hash of an Element</source>
          <target state="translated">返回一个元素的哈希值</target>
        </trans-unit>
        <trans-unit id="d90b5c3a81082239c4289ae3ace4f9dbff839e8d" translate="yes" xml:space="preserve">
          <source>Returns the hash of an XMLInstruction</source>
          <target state="translated">返回一个XMLInstruction的哈希值</target>
        </trans-unit>
        <trans-unit id="f538327a2675d7baf16cb9ba4c2248eda2a819ca" translate="yes" xml:space="preserve">
          <source>Returns the hash of this item</source>
          <target state="translated">返回此项目的哈希值</target>
        </trans-unit>
        <trans-unit id="1934f7bb63803e44822e77c02a07f7a51ac0e4dd" translate="yes" xml:space="preserve">
          <source>Returns the index of the first occurrence of T in the sequence TList. If not found, -1 is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d679540ab0aea358f64b4706760d37047c35ebd" translate="yes" xml:space="preserve">
          <source>Returns the index of the first occurrence of any character not an elements in &lt;code&gt;needles&lt;/code&gt; in &lt;code&gt;haystack&lt;/code&gt;. If all element of &lt;code&gt;haystack&lt;/code&gt; are element of &lt;code&gt;needles&lt;/code&gt;&lt;code&gt;-1&lt;/code&gt; is returned.</source>
          <target state="translated">返回任何字符不是在元件的第一次出现的索引 &lt;code&gt;needles&lt;/code&gt; 在 &lt;code&gt;haystack&lt;/code&gt; 。如果 &lt;code&gt;haystack&lt;/code&gt; 所有元素均为 &lt;code&gt;needles&lt;/code&gt; 元素 &lt;code&gt;-1&lt;/code&gt; ,则返回。</target>
        </trans-unit>
        <trans-unit id="d67bbb7827ae15fb753424306aaec63cc979ea9e" translate="yes" xml:space="preserve">
          <source>Returns the index of the first occurrence of any of the elements in &lt;code&gt; needles&lt;/code&gt; in &lt;code&gt;haystack&lt;/code&gt;. If no element of &lt;code&gt;needles&lt;/code&gt; is found, then &lt;code&gt;-1&lt;/code&gt; is returned. The &lt;code&gt;startIdx&lt;/code&gt; slices &lt;code&gt;haystack&lt;/code&gt; in the following way &lt;code&gt;haystack[startIdx .. $]&lt;/code&gt;. &lt;code&gt;startIdx&lt;/code&gt; represents a codeunit index in &lt;code&gt;haystack&lt;/code&gt;. If the sequence ending at &lt;code&gt;startIdx&lt;/code&gt; does not represent a well formed codepoint, then a &lt;a href=&quot;std_utf#UTFException&quot;&gt;&lt;code&gt;std.utf.UTFException&lt;/code&gt;&lt;/a&gt; may be thrown.</source>
          <target state="translated">返回 &lt;code&gt;haystack&lt;/code&gt; 中 &lt;code&gt; needles&lt;/code&gt; 中任何元素首次出现的索引。如果找不到 &lt;code&gt;needles&lt;/code&gt; 元素，则返回 &lt;code&gt;-1&lt;/code&gt; 。该 &lt;code&gt;startIdx&lt;/code&gt; 片 &lt;code&gt;haystack&lt;/code&gt; 通过以下方式 &lt;code&gt;haystack[startIdx .. $]&lt;/code&gt; 。 &lt;code&gt;startIdx&lt;/code&gt; 代表 &lt;code&gt;haystack&lt;/code&gt; 一个代码单元索引。如果以 &lt;code&gt;startIdx&lt;/code&gt; 结尾的序列不表示格式正确的代码点，则可能会引发&lt;a href=&quot;std_utf#UTFException&quot;&gt; &lt;code&gt;std.utf.UTFException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="889c0950d259fdd1770d4352caaa61ee9bbab7af" translate="yes" xml:space="preserve">
          <source>Returns the index of the first occurrence of type T in the sequence of zero or more types TList. If not found, -1 is returned.</source>
          <target state="translated">返回T类型在零或多个TList类型序列中首次出现的索引。如果没有找到,返回-1。</target>
        </trans-unit>
        <trans-unit id="e931d883ec5d22b5c4835731ae9c1d50e68c80c7" translate="yes" xml:space="preserve">
          <source>Returns the index of the last occurrence of any of the elements in &lt;code&gt; needles&lt;/code&gt; in &lt;code&gt;haystack&lt;/code&gt;. If no element of &lt;code&gt;needles&lt;/code&gt; is found, then &lt;code&gt;-1&lt;/code&gt; is returned. The &lt;code&gt;stopIdx&lt;/code&gt; slices &lt;code&gt;haystack&lt;/code&gt; in the following way &lt;code&gt;s[0 .. stopIdx]&lt;/code&gt;. &lt;code&gt;stopIdx&lt;/code&gt; represents a codeunit index in &lt;code&gt;haystack&lt;/code&gt;. If the sequence ending at &lt;code&gt;startIdx&lt;/code&gt; does not represent a well formed codepoint, then a &lt;a href=&quot;std_utf#UTFException&quot;&gt;&lt;code&gt;std.utf.UTFException&lt;/code&gt;&lt;/a&gt; may be thrown.</source>
          <target state="translated">返回的任何元素的最后一次出现的索引 &lt;code&gt; needles&lt;/code&gt; 在 &lt;code&gt;haystack&lt;/code&gt; 。如果找不到 &lt;code&gt;needles&lt;/code&gt; 元素，则返回 &lt;code&gt;-1&lt;/code&gt; 。所述 &lt;code&gt;stopIdx&lt;/code&gt; 切片 &lt;code&gt;haystack&lt;/code&gt; 以下列方式 &lt;code&gt;s[0 .. stopIdx]&lt;/code&gt; 。 &lt;code&gt;stopIdx&lt;/code&gt; 代表 &lt;code&gt;haystack&lt;/code&gt; 一个代码单位索引。如果以 &lt;code&gt;startIdx&lt;/code&gt; 结尾的序列不表示格式正确的代码点，则可能会引发&lt;a href=&quot;std_utf#UTFException&quot;&gt; &lt;code&gt;std.utf.UTFException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="44899dea6e6a128d15b3d41dff6d69cd60cf0bad" translate="yes" xml:space="preserve">
          <source>Returns the index of the visited record.</source>
          <target state="translated">返回被访问记录的索引。</target>
        </trans-unit>
        <trans-unit id="f6209ce86a43f6337d98185a61c24687906bf36b" translate="yes" xml:space="preserve">
          <source>Returns the indices range.</source>
          <target state="translated">返回指数范围。</target>
        </trans-unit>
        <trans-unit id="b915b1c9abc6423470a88454652ad086fbaa08c5" translate="yes" xml:space="preserve">
          <source>Returns the inferred type of the loop variable when a variable of type T is iterated over using a &lt;code&gt;foreach&lt;/code&gt; loop with a single loop variable and automatically inferred return type. Note that this may not be the same as &lt;code&gt;std.range.ElementType!Range&lt;/code&gt; in the case of narrow strings, or if T has both opApply and a range interface.</source>
          <target state="translated">当使用带有单个循环变量并自动推断返回类型的 &lt;code&gt;foreach&lt;/code&gt; 循环迭代T类型的变量时，返回循环变量的推断类型。请注意，对于窄字符串，或者如果T同时具有opApply和range接口，则此 &lt;code&gt;std.range.ElementType!Range&lt;/code&gt; 可能与std.range.ElementType！Range不同。</target>
        </trans-unit>
        <trans-unit id="fd94a60676de8ad7ed4575e7867ec54c92dcf156" translate="yes" xml:space="preserve">
          <source>Returns the integer portion of x, dropping the fractional portion. This is also known as &quot;chop&quot; rounding. &lt;code&gt;pure&lt;/code&gt; on all platforms.</source>
          <target state="translated">返回x的整数部分，除去小数部分。这也称为&amp;ldquo;印章&amp;rdquo;舍入。 &lt;code&gt;pure&lt;/code&gt; 在所有平台上。</target>
        </trans-unit>
        <trans-unit id="e46b47aed6b380cc1ff8e57b7645e1319703edf2" translate="yes" xml:space="preserve">
          <source>Returns the interface type that best matches &lt;code&gt;R&lt;/code&gt;.</source>
          <target state="translated">返回最匹配 &lt;code&gt;R&lt;/code&gt; 的接口类型。</target>
        </trans-unit>
        <trans-unit id="671b7d7586b93eba9a32749549e3f1c69838f496" translate="yes" xml:space="preserve">
          <source>Returns the interface type that best matches the range.</source>
          <target state="translated">返回与该范围最匹配的接口类型。</target>
        </trans-unit>
        <trans-unit id="05299cf602d66c99fc042a596c6adba159f570dc" translate="yes" xml:space="preserve">
          <source>Returns the intersection of two intervals</source>
          <target state="translated">返回两个区间的交点</target>
        </trans-unit>
        <trans-unit id="3ba6218a4e90558e8658ad1c2d3e4f6bec2b347c" translate="yes" xml:space="preserve">
          <source>Returns the larger of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774530114a94286cd0a12e5cfdbef5af41dda063" translate="yes" xml:space="preserve">
          <source>Returns the larger of x and y.</source>
          <target state="translated">返回x和y的较大值。</target>
        </trans-unit>
        <trans-unit id="b82b6b14a6999ef79ef83d3e6cd2bc95774d605f" translate="yes" xml:space="preserve">
          <source>Returns the largest allocation size eligible for allocation from the freelist. (If &lt;code&gt;maxSize != chooseAtRuntime&lt;/code&gt;, this is simply an alias for &lt;code&gt;maxSize&lt;/code&gt;.) All allocation requests for sizes greater than or equal to &lt;code&gt;min&lt;/code&gt; and less than or equal to &lt;code&gt;max&lt;/code&gt; are rounded to &lt;code&gt; max&lt;/code&gt; and forwarded to the parent allocator. When the block fitting the same constraint gets deallocated, it is put in the freelist with the allocated size assumed to be &lt;code&gt;max&lt;/code&gt;.</source>
          <target state="translated">返回可从空闲列表进行分配的最大分配大小。 （如果 &lt;code&gt;maxSize != chooseAtRuntime&lt;/code&gt; ，这只是 &lt;code&gt;maxSize&lt;/code&gt; 的别名。）所有大小大于或等于 &lt;code&gt;min&lt;/code&gt; 且小于或等于 &lt;code&gt;max&lt;/code&gt; 的分配请求都将四舍五入为 &lt;code&gt; max&lt;/code&gt; 并转发给父分配器。当适合相同约束的块被释放时，它将被放置在自由列表中，并且分配的大小假定为 &lt;code&gt;max&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="36bda4b3c965a21e06a23f18801ae5d094e0d776" translate="yes" xml:space="preserve">
          <source>Returns the largest type, i.e. T such that T.sizeof is the largest. If more than one type is of the same size, the leftmost argument of these in will be returned.</source>
          <target state="translated">返回最大的类型,即T,使T.sizeof是最大的。如果有多个类型具有相同的大小,那么将返回这些类型中最左边的参数。</target>
        </trans-unit>
        <trans-unit id="25d9f1c295934166f494926a87ba1444dd4c6d91" translate="yes" xml:space="preserve">
          <source>Returns the last element of the container, in a container-defined order.</source>
          <target state="translated">按照容器定义的顺序,返回容器的最后一个元素。</target>
        </trans-unit>
        <trans-unit id="99fd077dd70806ab6bf64e940a35ff0e09376df5" translate="yes" xml:space="preserve">
          <source>Returns the last index of the first occurence of any character that is not an elements in &lt;code&gt;needles&lt;/code&gt; in &lt;code&gt;haystack&lt;/code&gt;. If all element of &lt;code&gt;haystack&lt;/code&gt; are element of &lt;code&gt;needles&lt;/code&gt;&lt;code&gt;-1&lt;/code&gt; is returned.</source>
          <target state="translated">返回是不是在元素的任何字符中第一次出现的最后一个索引 &lt;code&gt;needles&lt;/code&gt; 在 &lt;code&gt;haystack&lt;/code&gt; 。如果 &lt;code&gt;haystack&lt;/code&gt; 所有元素均为 &lt;code&gt;needles&lt;/code&gt; 元素 &lt;code&gt;-1&lt;/code&gt; ,则返回。</target>
        </trans-unit>
        <trans-unit id="c7ea8577a6f254fdcb3635f541103bf57268587d" translate="yes" xml:space="preserve">
          <source>Returns the length of the first encoded sequence.</source>
          <target state="translated">返回第一个编码序列的长度。</target>
        </trans-unit>
        <trans-unit id="1aa3226fa62013c37bb0b319518a9fd77b811ebf" translate="yes" xml:space="preserve">
          <source>Returns the length of the heap.</source>
          <target state="translated">返回堆的长度。</target>
        </trans-unit>
        <trans-unit id="c18db291eab47f7cea157698943589f9d164feda" translate="yes" xml:space="preserve">
          <source>Returns the length of the last encoded sequence.</source>
          <target state="translated">返回最后一个编码序列的长度。</target>
        </trans-unit>
        <trans-unit id="d282c9f383d2a33ead62f10ecc5e1ac3d569e223" translate="yes" xml:space="preserve">
          <source>Returns the length of the longest possible substring, starting from the first code unit, which is validly encoded.</source>
          <target state="translated">返回从有效编码的第一个代码单位开始的最长子串的长度。</target>
        </trans-unit>
        <trans-unit id="3344cd849734a78abc071ab3b801f34d9c70a4a0" translate="yes" xml:space="preserve">
          <source>Returns the length of the longest possible substring, starting from the first element, which is validly encoded.</source>
          <target state="translated">返回从第一个元素开始有效编码的最长子串的长度。</target>
        </trans-unit>
        <trans-unit id="d80b3e23eca7f81cdfc8fe4a3741af9f063e0987" translate="yes" xml:space="preserve">
          <source>Returns the length of this range. Defined only if all ranges define &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">返回此范围的长度。仅在所有范围都定义 &lt;code&gt;length&lt;/code&gt; 定义。</target>
        </trans-unit>
        <trans-unit id="f375ec26e829d0c6341e7bdb2dac4c8cd869d04b" translate="yes" xml:space="preserve">
          <source>Returns the mangled name of symbol or type &lt;code&gt;sth&lt;/code&gt;.</source>
          <target state="translated">返回错误的符号名称或类型 &lt;code&gt;sth&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="249712de91cee0e6e352a45df0d10104d9153b82" translate="yes" xml:space="preserve">
          <source>Returns the maximum number of elements that can be stored in the container without triggering a reallocation.</source>
          <target state="translated">返回在不触发重新分配的情况下,容器中可存储的元素的最大数量。</target>
        </trans-unit>
        <trans-unit id="f6bcc56ddd4b16c4ee0924ae1ede125e43f8b6cc" translate="yes" xml:space="preserve">
          <source>Returns the maximum number of milliseconds the app is allowed to wait before curl_multi_socket() or curl_multi_perform() must be called (to allow libcurl's timed events to take place).</source>
          <target state="translated">返回在调用curl_multi_socket()或curl_multi_perform()之前允许应用程序等待的最大毫秒数(以允许libcurl的定时事件发生)。</target>
        </trans-unit>
        <trans-unit id="d01eb1576c0fd6a07fe4aff157995910714f0579" translate="yes" xml:space="preserve">
          <source>Returns the minimum alignment of all data returned by the allocator. An allocator may implement &lt;code&gt;alignment&lt;/code&gt; as a statically-known &lt;code&gt;enum&lt;/code&gt; value only. Applications that need dynamically-chosen alignment values should use the &lt;code&gt;alignedAllocate&lt;/code&gt; and &lt;code&gt;alignedReallocate&lt;/code&gt; APIs.</source>
          <target state="translated">返回分配器返回的所有数据的最小对齐方式。分配器只能将 &lt;code&gt;alignment&lt;/code&gt; 实现为静态已知的 &lt;code&gt;enum&lt;/code&gt; 值。需要动态选择对齐方式值的应用程序应使用 &lt;code&gt;alignedAllocate&lt;/code&gt; 和 &lt;code&gt;alignedReallocate&lt;/code&gt; API。</target>
        </trans-unit>
        <trans-unit id="92eeacc8559b5212b274f6522dbca789ac07ae56" translate="yes" xml:space="preserve">
          <source>Returns the most negative value of the numeric type T.</source>
          <target state="translated">返回数值类型T的最负值。</target>
        </trans-unit>
        <trans-unit id="6e703aa68d3677a6418df0b63a2e273835fbb77c" translate="yes" xml:space="preserve">
          <source>Returns the most recently generated value by shallow copy.</source>
          <target state="translated">通过浅层复制返回最近生成的值。</target>
        </trans-unit>
        <trans-unit id="5c299edf68821ee75ebc479b8a7d41e944e4f992" translate="yes" xml:space="preserve">
          <source>Returns the most recently generated value without executing a copy contructor. Will not compile for element types defining a postblit, because Generator does not return by reference.</source>
          <target state="translated">返回最近生成的值,而不执行复制反构器。对于定义了postblit的元素类型不会编译,因为Generator不会通过引用返回。</target>
        </trans-unit>
        <trans-unit id="6aacddb5a82569ad984f219b925a73293d924072" translate="yes" xml:space="preserve">
          <source>Returns the name last used to initialize this &lt;code&gt;File&lt;/code&gt;, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16eace4791215ab06073b1dcea3407f98975712f" translate="yes" xml:space="preserve">
          <source>Returns the name of an encoding.</source>
          <target state="translated">返回一个编码的名称。</target>
        </trans-unit>
        <trans-unit id="4f014efde2b3af5b22e278b2fe5bbf58862e18c6" translate="yes" xml:space="preserve">
          <source>Returns the name of the last opened file, if any. If a &lt;code&gt;File&lt;/code&gt; was created with &lt;a href=&quot;#tmpfile&quot;&gt;&lt;code&gt;tmpfile&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#wrapFile&quot;&gt;&lt;code&gt;wrapFile&lt;/code&gt;&lt;/a&gt; it has no name.</source>
          <target state="translated">返回最后打开的文件的名称（如果有）。如果使用&lt;a href=&quot;#tmpfile&quot;&gt; &lt;code&gt;tmpfile&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#wrapFile&quot;&gt; &lt;code&gt;wrapFile&lt;/code&gt; &lt;/a&gt;创建了 &lt;code&gt;File&lt;/code&gt; ，则它没有名称。</target>
        </trans-unit>
        <trans-unit id="95b9032427f64ceb299627ebe4699571e45b3ca8" translate="yes" xml:space="preserve">
          <source>Returns the negation of this &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">返回此 &lt;code&gt;Duration&lt;/code&gt; 的取反。</target>
        </trans-unit>
        <trans-unit id="9ed1896d37e33436313b41b09305da4a2f64f069" translate="yes" xml:space="preserve">
          <source>Returns the negation of this &lt;code&gt;TickDuration&lt;/code&gt;.</source>
          <target state="translated">返回此 &lt;code&gt;TickDuration&lt;/code&gt; 的否定值。</target>
        </trans-unit>
        <trans-unit id="84f861de072e3568536c62569d2e605a957f3f3c" translate="yes" xml:space="preserve">
          <source>Returns the number of arguments of function &lt;code&gt;func&lt;/code&gt;. arity is undefined for variadic functions.</source>
          <target state="translated">返回函数 &lt;code&gt;func&lt;/code&gt; 的参数数量。可变函数未定义arity。</target>
        </trans-unit>
        <trans-unit id="da1255b03babc2c68019abedb893d51a4db6a8fa" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes allocated for the current thread since program start. It is the same as GC.stats().allocatedInCurrentThread, but faster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bee738dc938b7cdffacfbf7540aaaf7c9d8d8f6" translate="yes" xml:space="preserve">
          <source>Returns the number of code units required to encode a single code point.</source>
          <target state="translated">返回单个码点编码所需的代码单位数。</target>
        </trans-unit>
        <trans-unit id="f042289c8e7065924d012ee4a845daf060371493" translate="yes" xml:space="preserve">
          <source>Returns the number of code units that are required to encode &lt;code&gt;str&lt;/code&gt; in a string whose character type is &lt;code&gt;C&lt;/code&gt;. This is particularly useful when slicing one string with the length of another and the two string types use different character types.</source>
          <target state="translated">返回在字符类型为 &lt;code&gt;C&lt;/code&gt; 的字符串中对 &lt;code&gt;str&lt;/code&gt; 进行编码所需的代码单元数。当将一个字符串切成另一字符串的长度，并且两个字符串类型使用不同的字符类型时，这特别有用。</target>
        </trans-unit>
        <trans-unit id="77d4f76badcda8e9ded16546440aeb406137898c" translate="yes" xml:space="preserve">
          <source>Returns the number of code units that are required to encode the code point &lt;code&gt;c&lt;/code&gt; when &lt;code&gt;C&lt;/code&gt; is the character type used to encode it.</source>
          <target state="translated">当 &lt;code&gt;C&lt;/code&gt; 是用于编码代码点 &lt;code&gt;c&lt;/code&gt; 的字符类型时，返回编码代码点c所需的代码单元数。</target>
        </trans-unit>
        <trans-unit id="ca33c0bd21f5610ff9748493c387c61f2fda847c" translate="yes" xml:space="preserve">
          <source>Returns the number of days from the current day of the week to the given day of the week. If they are the same, then the result is 0.</source>
          <target state="translated">返回从当日到当日的天数。如果两者相同,则结果为0。</target>
        </trans-unit>
        <trans-unit id="2d4beed58f26f66976d2d26980a8559d762abfa2" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in the array.</source>
          <target state="translated">返回数组中元素的数量。</target>
        </trans-unit>
        <trans-unit id="8a57716287a6a9521e772d7a1fd31448a83d0c77" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in the array. This is a fixed quantity for static arrays. It is of type &lt;code&gt;size_t&lt;/code&gt;.</source>
          <target state="translated">返回数组中元素的数量。对于静态数组，这是固定数量。类型为 &lt;code&gt;size_t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1106e6d14a4d6f822e0e0f8561de2bb8ca0c3ec8" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in the container.</source>
          <target state="translated">返回容器中元素的数量。</target>
        </trans-unit>
        <trans-unit id="199c64409bc79be2571c309155abb0254bfd3129" translate="yes" xml:space="preserve">
          <source>Returns the number of hnsecs since midnight, January 1st, 1 A.D. for the current time.</source>
          <target state="translated">Returns the number of hnsecs since midnight,January 1st,A.D.for the current time.</target>
        </trans-unit>
        <trans-unit id="00b2ac0315bafc2024b732f9828782865eb3741e" translate="yes" xml:space="preserve">
          <source>Returns the number of months from the current months of the year to the given month of the year. If they are the same, then the result is 0.</source>
          <target state="translated">返回一年中从当前月份到指定月份的月数。如果月数相同,则结果为0。</target>
        </trans-unit>
        <trans-unit id="4d054fab054046589eb612181607ff62f554a611" translate="yes" xml:space="preserve">
          <source>Returns the number of ubytes required to encode this code point.</source>
          <target state="translated">返回对该码点进行编码所需的字节数。</target>
        </trans-unit>
        <trans-unit id="81661f7f4bce89ee3210938161109929ef601ef8" translate="yes" xml:space="preserve">
          <source>Returns the number of worker threads in the pool.</source>
          <target state="translated">返回池中工作线程的数量。</target>
        </trans-unit>
        <trans-unit id="ec295b8b797d90565601839fb8e33f1e2e669939" translate="yes" xml:space="preserve">
          <source>Returns the overlapping portion, if any, of two arrays. Unlike &lt;code&gt;equal&lt;/code&gt;, &lt;code&gt;overlap&lt;/code&gt; only compares the pointers and lengths in the ranges, not the values referred by them. If &lt;code&gt;r1&lt;/code&gt; and &lt;code&gt;r2&lt;/code&gt; have an overlapping slice, returns that slice. Otherwise, returns the null slice.</source>
          <target state="translated">返回两个数组的重叠部分（如果有）。与 &lt;code&gt;equal&lt;/code&gt; 不同， &lt;code&gt;overlap&lt;/code&gt; 仅比较范围内的指针和长度，而不比较它们引用的值。如果 &lt;code&gt;r1&lt;/code&gt; 和 &lt;code&gt;r2&lt;/code&gt; 具有重叠的切片，则返回该切片。否则，返回空切片。</target>
        </trans-unit>
        <trans-unit id="321af17a1a8b3524d2b5469db55cf50acd8d3868" translate="yes" xml:space="preserve">
          <source>Returns the parent directory of &lt;code&gt;path&lt;/code&gt;. On Windows, this includes the drive letter if present. If &lt;code&gt;path&lt;/code&gt; is a relative path and the parent directory is the current working directory, returns &lt;code&gt;&quot;.&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4578fae06fb06a91735f645190d40809e2f11b95" translate="yes" xml:space="preserve">
          <source>Returns the parent directory of path. On Windows, this includes the drive letter if present.</source>
          <target state="translated">返回path的父目录。在Windows系统中,如果存在,则包括驱动器编号。</target>
        </trans-unit>
        <trans-unit id="9512270ccd2cfcb2d7f82e03f39252859250ba10" translate="yes" xml:space="preserve">
          <source>Returns the path to a directory for temporary files.</source>
          <target state="translated">返回临时文件目录的路径。</target>
        </trans-unit>
        <trans-unit id="56224efa181d714853658dcc0e19b52cef28aa09" translate="yes" xml:space="preserve">
          <source>Returns the path to the file pointed to by a symlink. Note that the path could be either relative or absolute depending on the symlink. If the path is relative, it's relative to the symlink, not the current working directory.</source>
          <target state="translated">返回一个符号链接指向的文件的路径。请注意,路径可以是相对的,也可以是绝对的,这取决于符号链接。如果路径是相对的,则是相对于符号链接的路径,而不是当前工作目录的路径。</target>
        </trans-unit>
        <trans-unit id="3c71e7cca19c90198675c769f0518c4563bf0bf6" translate="yes" xml:space="preserve">
          <source>Returns the path to the file represented by this &lt;code&gt;DirEntry&lt;/code&gt;.</source>
          <target state="translated">返回此 &lt;code&gt;DirEntry&lt;/code&gt; 表示的文件的路径。</target>
        </trans-unit>
        <trans-unit id="73f82fd82f087a2d8b1562865447419684dd7227" translate="yes" xml:space="preserve">
          <source>Returns the physical index into the source range corresponding to a given logical index. This is useful, for example, when indexing an &lt;code&gt;Indexed&lt;/code&gt; without adding another layer of indirection.</source>
          <target state="translated">将物理索引返回到与给定逻辑索引相对应的源范围中。例如，当在不添加另一层间接 &lt;code&gt;Indexed&lt;/code&gt; 情况下为索引索引时，这很有用。</target>
        </trans-unit>
        <trans-unit id="09b8ad97be41c76b883bd81d1751cfdd2c8451a4" translate="yes" xml:space="preserve">
          <source>Returns the positive difference between x and y.</source>
          <target state="translated">返回x和y之间的正差。</target>
        </trans-unit>
        <trans-unit id="6db0cbcc3cc3604c5299ef581ce233e24c1d82b6" translate="yes" xml:space="preserve">
          <source>Returns the process ID of the calling process, which is guaranteed to be unique on the system. This call is always successful.</source>
          <target state="translated">返回调用进程的进程ID,保证在系统中是唯一的。这个调用总是成功的。</target>
        </trans-unit>
        <trans-unit id="8dd04640c0b938a634b031ccbda38f7904013729" translate="yes" xml:space="preserve">
          <source>Returns the process ID of the current process, which is guaranteed to be unique on the system.</source>
          <target state="translated">返回当前进程的进程ID,保证在系统中是唯一的。</target>
        </trans-unit>
        <trans-unit id="4e9bc0a024c6ee761be8d5d5c4e1e0821e589fa4" translate="yes" xml:space="preserve">
          <source>Returns the process ID of the current thread, which is guaranteed to be unique within the current process.</source>
          <target state="translated">返回当前线程的进程ID,保证在当前进程中是唯一的。</target>
        </trans-unit>
        <trans-unit id="45dbdafb829d5aeae4f7251a3a8ea958fdf69767" translate="yes" xml:space="preserve">
          <source>Returns the projection of &lt;code&gt;z&lt;/code&gt; onto the Riemann sphere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96fdff33f644f52d834920298f651dfa04b1b8f5" translate="yes" xml:space="preserve">
          <source>Returns the representation of a string, which has the same type as the string except the character type is replaced by &lt;code&gt;ubyte&lt;/code&gt;, &lt;code&gt;ushort&lt;/code&gt;, or &lt;code&gt;uint&lt;/code&gt; depending on the character width.</source>
          <target state="translated">返回字符串的表示形式，该字符串的类型与字符串相同，只是根据字符宽度，字符类型被 &lt;code&gt;ubyte&lt;/code&gt; ， &lt;code&gt;ushort&lt;/code&gt; 或 &lt;code&gt;uint&lt;/code&gt; 替换。</target>
        </trans-unit>
        <trans-unit id="fbfb1494265bb90efa067ca3a8d809221a83c406" translate="yes" xml:space="preserve">
          <source>Returns the representation of an enumerated value, i.e. the value converted to the base type of the enumeration.</source>
          <target state="translated">返回一个枚举值的表示,即转换为枚举的基本类型的值。</target>
        </trans-unit>
        <trans-unit id="eacbf053d05df4a98ab19bdf1a2baacfc82885bb" translate="yes" xml:space="preserve">
          <source>Returns the rightmost element.</source>
          <target state="translated">返回最右边的元素。</target>
        </trans-unit>
        <trans-unit id="d1aaff92f7ac14d8d8413f0b432ac0871d86e2ef" translate="yes" xml:space="preserve">
          <source>Returns the root directory of the specified path, or &lt;code&gt;null&lt;/code&gt; if the path is not rooted.</source>
          <target state="translated">返回指定路径的根目录；如果该路径未root，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ac3232dbb34dd85e2aafffdad48fc59828f2927" translate="yes" xml:space="preserve">
          <source>Returns the scoped object.</source>
          <target state="translated">返回范围内的对象。</target>
        </trans-unit>
        <trans-unit id="493325a3d5dab747bf95d9f4e75f748c30885086" translate="yes" xml:space="preserve">
          <source>Returns the sequence of ubytes to be used to represent any character which cannot be represented in the encoding scheme.</source>
          <target state="translated">返回用于表示任何不能在编码方案中表示的字符的uby字节序列。</target>
        </trans-unit>
        <trans-unit id="96303d78aae7a3eb2d5802a6d0222688f9d3ce90" translate="yes" xml:space="preserve">
          <source>Returns the size in bytes of the state that needs to be allocated to hold an object of type &lt;code&gt;T&lt;/code&gt;. &lt;code&gt;stateSize!T&lt;/code&gt; is zero for &lt;code&gt;struct&lt;/code&gt;s that are not nested and have no nonstatic member variables.</source>
          <target state="translated">返回需要分配以容纳 &lt;code&gt;T&lt;/code&gt; 类型对象的状态的大小（以字节为单位）。对于没有嵌套且没有非静态成员变量的 &lt;code&gt;struct&lt;/code&gt; ， &lt;code&gt;stateSize!T&lt;/code&gt; 为零。</target>
        </trans-unit>
        <trans-unit id="e87852a3e8a4a6fc449246d5c78ae917e2c7c8b9" translate="yes" xml:space="preserve">
          <source>Returns the size of the dynamic array reference, which is 8 in 32-bit builds and 16 on 64-bit builds.</source>
          <target state="translated">返回动态数组引用的大小,32位构建时为8,64位构建时为16。</target>
        </trans-unit>
        <trans-unit id="8ca27f7e922328e0fb10faffa49cf072fe4695e1" translate="yes" xml:space="preserve">
          <source>Returns the size of the file in bytes, ulong.max if file is not searchable or throws if the operation fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79656b0cc42593d4401d973a3d027503402e732" translate="yes" xml:space="preserve">
          <source>Returns the size of the reference to the associative array; it is 4 in 32-bit builds and 8 on 64-bit builds.</source>
          <target state="translated">返回对关联数组的引用大小;在32位构建中为4,在64位构建中为8。</target>
        </trans-unit>
        <trans-unit id="601c25350e5245a238d4b931b4d1fddb2b7ecc83" translate="yes" xml:space="preserve">
          <source>Returns the size of the the file represented by this &lt;code&gt;DirEntry&lt;/code&gt; in bytes.</source>
          <target state="translated">返回此 &lt;code&gt;DirEntry&lt;/code&gt; 表示的文件的大小（以字节为单位）。</target>
        </trans-unit>
        <trans-unit id="31534bf9e90fc4bdc3997da282f5c5b6cc34c918" translate="yes" xml:space="preserve">
          <source>Returns the smaller of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e59811a73811118f24b9562e672888954bba9c3" translate="yes" xml:space="preserve">
          <source>Returns the smaller of x and y.</source>
          <target state="translated">返回x和y的较小值。</target>
        </trans-unit>
        <trans-unit id="e603fd939a4c87b988df58c7cfb79623f4360f1e" translate="yes" xml:space="preserve">
          <source>Returns the smallest allocation size eligible for allocation from the freelist. (If &lt;code&gt;minSize != chooseAtRuntime&lt;/code&gt;, this is simply an alias for &lt;code&gt;minSize&lt;/code&gt;.)</source>
          <target state="translated">返回可从自由列表进行分配的最小分配大小。（如果 &lt;code&gt;minSize != chooseAtRuntime&lt;/code&gt; ，这只是 &lt;code&gt;minSize&lt;/code&gt; 的别名。）</target>
        </trans-unit>
        <trans-unit id="ef6232c466247ae9de666013ca5c3a93a69fa2ba" translate="yes" xml:space="preserve">
          <source>Returns the source range.</source>
          <target state="translated">返回来源范围。</target>
        </trans-unit>
        <trans-unit id="591f6c56efd9acbfdec07185df39a5b4a3e28087" translate="yes" xml:space="preserve">
          <source>Returns the stack bottom of the currently active stack within the calling thread.</source>
          <target state="translated">返回调用线程内当前活动栈的栈底。</target>
        </trans-unit>
        <trans-unit id="93c6bbcacf562ff819cd9ac347d742eb0bf6819b" translate="yes" xml:space="preserve">
          <source>Returns the stack top of the currently active stack within the calling thread.</source>
          <target state="translated">返回调用线程内当前活动栈的栈顶。</target>
        </trans-unit>
        <trans-unit id="d690f4e2e0ce175d0cb0849639d9c24d3eb70975" translate="yes" xml:space="preserve">
          <source>Returns the standard name of the encoding scheme</source>
          <target state="translated">返回编码方案的标准名称</target>
        </trans-unit>
        <trans-unit id="32420c2bb7df1a4f61f11f0c93c63a3593e1b183" translate="yes" xml:space="preserve">
          <source>Returns the string representation of a Document. (That is, the complete XML of a document).</source>
          <target state="translated">返回一个Document的字符串表示。也就是一个文档的完整XML)。</target>
        </trans-unit>
        <trans-unit id="f48a3f0285b5c3854854b7d954a862bbf8dc6fa1" translate="yes" xml:space="preserve">
          <source>Returns the string representation of a Tag</source>
          <target state="translated">Returns the string representation of a Tag</target>
        </trans-unit>
        <trans-unit id="7adbfbc0dd01ac5fbde4a960d0c7893ef13eef88" translate="yes" xml:space="preserve">
          <source>Returns the string representation of an Element</source>
          <target state="translated">返回一个元素的字符串表示</target>
        </trans-unit>
        <trans-unit id="3feae15df05810e505c4845a2fe9c2db9e1ab993" translate="yes" xml:space="preserve">
          <source>Returns the subrange containing all elements &lt;code&gt;e&lt;/code&gt; for which both &lt;code&gt; pred(e, value)&lt;/code&gt; and &lt;code&gt;pred(value, e)&lt;/code&gt; evaluate to &lt;code&gt;false&lt;/code&gt; (e.g., if &lt;code&gt;pred&lt;/code&gt; is &quot;less than&quot;, returns the portion of the range with elements equal to &lt;code&gt;value&lt;/code&gt;). Uses a classic binary search with interval halving until it finds a value that satisfies the condition, then uses &lt;code&gt;SearchPolicy.gallopBackwards&lt;/code&gt; to find the left boundary and &lt;code&gt;SearchPolicy.gallop&lt;/code&gt; to find the right boundary. These policies are justified by the fact that the two boundaries are likely to be near the first found value (i.e., equal ranges are relatively small). Completes the entire search in &amp;Omicron;(&lt;code&gt;log(n)&lt;/code&gt;) time.</source>
          <target state="translated">返回包含所有元素 &lt;code&gt;e&lt;/code&gt; 的子范围，其 &lt;code&gt; pred(e, value)&lt;/code&gt; 和 &lt;code&gt;pred(value, e)&lt;/code&gt; 求值都为 &lt;code&gt;false&lt;/code&gt; （例如，如果 &lt;code&gt;pred&lt;/code&gt; 为&amp;ldquo;小于&amp;rdquo;，则返回元素等于 &lt;code&gt;value&lt;/code&gt; 的范围的一部分）。使用间隔减半的经典二进制搜索，直到找到满足条件的值，然后使用 &lt;code&gt;SearchPolicy.gallopBackwards&lt;/code&gt; 查找左侧边界，并使用 &lt;code&gt;SearchPolicy.gallop&lt;/code&gt; 查找右侧边界。这些策略的合理性是两个边界很可能接近第一个发现的值（即相等的范围相对较小）。在&amp;Omicron;（ &lt;code&gt;log(n)&lt;/code&gt; 中完成整个搜索） 时间。</target>
        </trans-unit>
        <trans-unit id="888f212e68c70b549e5a35b8b7b97bff1b381c73" translate="yes" xml:space="preserve">
          <source>Returns the tail of &lt;code&gt;range&lt;/code&gt; augmented with length information</source>
          <target state="translated">返回以长度信息扩展的 &lt;code&gt;range&lt;/code&gt; 的尾部</target>
        </trans-unit>
        <trans-unit id="9244c816e0f2c52d4d4ee859f67b142bc1bf8cc7" translate="yes" xml:space="preserve">
          <source>Returns the target type of a pointer.</source>
          <target state="translated">返回指针的目标类型。</target>
        </trans-unit>
        <trans-unit id="d8c28e5955ca04b50866b4585fe591a09c3f37a3" translate="yes" xml:space="preserve">
          <source>Returns the time that the file represented by this &lt;code&gt;DirEntry&lt;/code&gt; was last accessed.</source>
          <target state="translated">返回此 &lt;code&gt;DirEntry&lt;/code&gt; 表示的文件上次访问的时间。</target>
        </trans-unit>
        <trans-unit id="5f119cf7d21455fbe20f1d432bc51a054d2388b1" translate="yes" xml:space="preserve">
          <source>Returns the time that the file represented by this &lt;code&gt;DirEntry&lt;/code&gt; was last changed (not only in contents, but also in permissions or ownership).</source>
          <target state="translated">返回此 &lt;code&gt;DirEntry&lt;/code&gt; 代表的文件最后一次更改的时间（不仅在内容上，而且在权限或所有权上）。</target>
        </trans-unit>
        <trans-unit id="ac35c19630d6ddeda76160c5b47e01dc09e4a04d" translate="yes" xml:space="preserve">
          <source>Returns the time that the file represented by this &lt;code&gt;DirEntry&lt;/code&gt; was last modified.</source>
          <target state="translated">返回此 &lt;code&gt;DirEntry&lt;/code&gt; 表示的文件上次修改的时间。</target>
        </trans-unit>
        <trans-unit id="6688282669b705a2b55a3647db89fd9441e933d5" translate="yes" xml:space="preserve">
          <source>Returns the time that the given file was last accessed.</source>
          <target state="translated">返回给定文件最后被访问的时间。</target>
        </trans-unit>
        <trans-unit id="1ff602a4bf2c63582b21dac98a0d7e10d15ff14a" translate="yes" xml:space="preserve">
          <source>Returns the time that the given file was last changed.</source>
          <target state="translated">返回给定文件最后一次被修改的时间。</target>
        </trans-unit>
        <trans-unit id="688f9686503d322c7ee15caecd64dff61aa00317" translate="yes" xml:space="preserve">
          <source>Returns the time that the given file was last modified.</source>
          <target state="translated">返回给定文件最后被修改的时间。</target>
        </trans-unit>
        <trans-unit id="a44c44de2d516914dc5397a80c7b4afcba2dc3a5" translate="yes" xml:space="preserve">
          <source>Returns the time that the given file was last modified. If the file does not exist, returns &lt;code&gt;returnIfMissing&lt;/code&gt;.</source>
          <target state="translated">返回给定文件的最后修改时间。如果文件不存在，则返回 &lt;code&gt;returnIfMissing&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ddf312cc43f1db53aed7724668c2e84910528ab" translate="yes" xml:space="preserve">
          <source>Returns the time, in seconds since 1 Jan 1970 of the time string given in the first argument. The time argument in the second parameter is unused and should be set to NULL.</source>
          <target state="translated">返回第一个参数中的时间字符串自1970年1月1日以来的时间,单位为秒。第二个参数中的时间参数是未使用的,应设置为NULL。</target>
        </trans-unit>
        <trans-unit id="89c704f29b2f36050d81767dc5fd00a04bedc644" translate="yes" xml:space="preserve">
          <source>Returns the total number of code points encoded in &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">返回以 &lt;code&gt;str&lt;/code&gt; 编码的代码点总数。</target>
        </trans-unit>
        <trans-unit id="f03f9b4a973225346d2de60b005a12c3a18a7233" translate="yes" xml:space="preserve">
          <source>Returns the total number of code points encoded in a ubyte array.</source>
          <target state="translated">返回在一个ubyte数组中编码的码点总数。</target>
        </trans-unit>
        <trans-unit id="432c8ff552adeafe874cdfb7c72ef94e4a6306de" translate="yes" xml:space="preserve">
          <source>Returns the total number of hecto-nanoseconds in this &lt;code&gt;TickDuration&lt;/code&gt;.</source>
          <target state="translated">返回此 &lt;code&gt;TickDuration&lt;/code&gt; 中的十进制纳秒总数。</target>
        </trans-unit>
        <trans-unit id="6c865f4d77e9800572e98a2f1a5d9b39a0d7efc0" translate="yes" xml:space="preserve">
          <source>Returns the total number of microseconds in this &lt;code&gt;TickDuration&lt;/code&gt;.</source>
          <target state="translated">返回此 &lt;code&gt;TickDuration&lt;/code&gt; 中的微秒总数。</target>
        </trans-unit>
        <trans-unit id="648fc3b3189535dd15c9a6a00e81e8095cc6bed5" translate="yes" xml:space="preserve">
          <source>Returns the total number of milliseconds in this &lt;code&gt;TickDuration&lt;/code&gt;.</source>
          <target state="translated">返回此 &lt;code&gt;TickDuration&lt;/code&gt; 中的毫秒总数。</target>
        </trans-unit>
        <trans-unit id="a8cd34fbc38761c3f13e5c165c425b258ccd54b6" translate="yes" xml:space="preserve">
          <source>Returns the total number of nanoseconds in this &lt;code&gt;TickDuration&lt;/code&gt;.</source>
          <target state="translated">返回此 &lt;code&gt;TickDuration&lt;/code&gt; 中的总纳秒数。</target>
        </trans-unit>
        <trans-unit id="8854f536858e89b78eb3d04de3465d6d35dea0b7" translate="yes" xml:space="preserve">
          <source>Returns the total number of seconds in this &lt;code&gt;TickDuration&lt;/code&gt;.</source>
          <target state="translated">返回此 &lt;code&gt;TickDuration&lt;/code&gt; 中的总秒数。</target>
        </trans-unit>
        <trans-unit id="9abcff9844851c2944de9152e2bcfed4b6e58b33" translate="yes" xml:space="preserve">
          <source>Returns the total number of the given units in this &lt;code&gt;Duration&lt;/code&gt;. So, unlike &lt;code&gt;split&lt;/code&gt;, it does not strip out the larger units.</source>
          <target state="translated">返回此 &lt;code&gt;Duration&lt;/code&gt; 中给定单位的总数。因此，与 &lt;code&gt;split&lt;/code&gt; 不同，它不会删除较大的单元。</target>
        </trans-unit>
        <trans-unit id="37e7f4820738c99b6518e081fb070ea7c6f748f3" translate="yes" xml:space="preserve">
          <source>Returns the true size of the memory block referenced by p. This value represents the maximum number of bytes for which a call to realloc may resize the existing block in place. If p references memory not originally allocated by this garbage collector, points to the interior of a memory block, or if p is null, zero will be returned.</source>
          <target state="translated">返回p所引用的内存块的真实大小,这个值代表了调用realloc可以调整现有内存块大小的最大字节数。如果p引用的内存不是这个垃圾收集器最初分配的,指向内存块的内部,或者如果p为空,则返回0。</target>
        </trans-unit>
        <trans-unit id="5d9315a66df13738ae6d32b7a4329655f0950696" translate="yes" xml:space="preserve">
          <source>Returns the type from TList that is the most derived from type T. If none are found, T is returned.</source>
          <target state="translated">从TList中返回从T类型派生最多的类型。如果没有找到,则返回T。</target>
        </trans-unit>
        <trans-unit id="7dab75c2d8a3b6409914b5370705b9824076cf3b" translate="yes" xml:space="preserve">
          <source>Returns the type of &lt;code&gt;Target&lt;/code&gt; with the &quot;constness&quot; of &lt;code&gt;Source&lt;/code&gt;. A type's &lt;b&gt;constness&lt;/b&gt; refers to whether it is &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;immutable&lt;/code&gt;, or &lt;code&gt;inout&lt;/code&gt;. If &lt;code&gt;source&lt;/code&gt; has no constness, the returned type will be the same as &lt;code&gt;Target&lt;/code&gt;.</source>
          <target state="translated">返回具有 &lt;code&gt;Source&lt;/code&gt; 的&amp;ldquo; constness&amp;rdquo;的 &lt;code&gt;Target&lt;/code&gt; 的类型。A型的&lt;b&gt;常量性&lt;/b&gt;是指无论是 &lt;code&gt;const&lt;/code&gt; ， &lt;code&gt;immutable&lt;/code&gt; ，或者 &lt;code&gt;inout&lt;/code&gt; 。如果 &lt;code&gt;source&lt;/code&gt; 没有常量性，则返回的类型将与 &lt;code&gt;Target&lt;/code&gt; 相同。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="55ead0fcda6b56f722ae8ffb4c7253a168827618" translate="yes" xml:space="preserve">
          <source>Returns the type of &lt;code&gt;ToType&lt;/code&gt; with the &quot;constness&quot; of &lt;code&gt;FromType&lt;/code&gt;. A type's &lt;b&gt;constness&lt;/b&gt; refers to whether it is &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;immutable&lt;/code&gt;, or &lt;code&gt;inout&lt;/code&gt;. If &lt;code&gt;FromType&lt;/code&gt; has no constness, the returned type will be the same as &lt;code&gt;ToType&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2aeb4e0b982459aef2c815d392bf403ce3c4473" translate="yes" xml:space="preserve">
          <source>Returns the underlying operating system &lt;code&gt;HANDLE&lt;/code&gt; (Windows only).</source>
          <target state="translated">返回基础操作系统的 &lt;code&gt;HANDLE&lt;/code&gt; （仅Windows）。</target>
        </trans-unit>
        <trans-unit id="17b2b4a9c5c7bcd9a7354071cc3a5232d4231e10" translate="yes" xml:space="preserve">
          <source>Returns the union of two intervals</source>
          <target state="translated">返回两个区间的组合</target>
        </trans-unit>
        <trans-unit id="e7c501dac1b7268ced06dc85b80d7924de744411" translate="yes" xml:space="preserve">
          <source>Returns the unprocessed C arguments supplied when the process was started. Use this when you need to supply argc and argv to C libraries.</source>
          <target state="translated">返回进程启动时提供的未处理的C参数。当你需要向C库提供argc和argv时,可以使用这个函数。</target>
        </trans-unit>
        <trans-unit id="c007f1a37fe33fed3c561280b7a895e57a158e23" translate="yes" xml:space="preserve">
          <source>Returns the value of x rounded downward to the next integer (toward negative infinity).</source>
          <target state="translated">返回x的值向下舍入到下一个整数(向负无穷大方向)。</target>
        </trans-unit>
        <trans-unit id="c0c00c639831eba70113ddd96d75683fb58d7421" translate="yes" xml:space="preserve">
          <source>Returns the value of x rounded upward to the next integer (toward positive infinity).</source>
          <target state="translated">返回x的值,将其向上舍入到下一个整数(向正无穷大方向)。</target>
        </trans-unit>
        <trans-unit id="445a499f1640526d65d5a8f139903046c3786ff6" translate="yes" xml:space="preserve">
          <source>Returns the value stored in the &lt;code&gt;VariantN&lt;/code&gt; object, either by specifying the needed type or the index in the list of allowed types. The latter overload only applies to bounded variants (e.g. &lt;a href=&quot;#Algebraic&quot;&gt;&lt;code&gt;Algebraic&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">通过指定所需的类型或允许的类型列表中的索引，返回存储在 &lt;code&gt;VariantN&lt;/code&gt; 对象中的值。后一种重载仅适用于有界变体（例如&lt;a href=&quot;#Algebraic&quot;&gt; &lt;code&gt;Algebraic&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="53f9fd0298da963256576aa88b5974b5fec2ec49" translate="yes" xml:space="preserve">
          <source>Returns the value stored in the &lt;code&gt;VariantN&lt;/code&gt; object, explicitly converted (coerced) to the requested type &lt;code&gt; T&lt;/code&gt;. If &lt;code&gt;T&lt;/code&gt; is a string type, the value is formatted as a string. If the &lt;code&gt;VariantN&lt;/code&gt; object is a string, a parse of the string to type &lt;code&gt;T&lt;/code&gt; is attempted. If a conversion is not possible, throws a &lt;code&gt; VariantException&lt;/code&gt;.</source>
          <target state="translated">返回存储在所述值 &lt;code&gt;VariantN&lt;/code&gt; 对象，显式转换（强制）所请求的类型 &lt;code&gt; T&lt;/code&gt; 。如果 &lt;code&gt;T&lt;/code&gt; 是字符串类型，则将值格式化为字符串。如果 &lt;code&gt;VariantN&lt;/code&gt; 对象是一个字符串，则尝试解析该字符串以键入 &lt;code&gt;T&lt;/code&gt; 。如果无法进行转换，则抛出 &lt;code&gt; VariantException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48189500a40f8c94061c43ce5944a3669d6bfa4e" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;fn&lt;/code&gt; accepts variables of type T1 and T2 in any order. The following code should compile:</source>
          <target state="translated">如果 &lt;code&gt;fn&lt;/code&gt; 以任何顺序接受T1和T2类型的变量，则返回true 。以下代码应编译：</target>
        </trans-unit>
        <trans-unit id="d870c305b9b513fe09e9c721a070b449320af29c" translate="yes" xml:space="preserve">
          <source>Returns true if T can be converted to boolean value.</source>
          <target state="translated">如果T可以转换为布尔值,返回true。</target>
        </trans-unit>
        <trans-unit id="92392ba9585b402967ab099601644ad8bd94b55e" translate="yes" xml:space="preserve">
          <source>Returns true if T is an instance of the template S.</source>
          <target state="translated">如果T是模板S的实例,返回true。</target>
        </trans-unit>
        <trans-unit id="6539c25106b4f2005acb105be2b679719cddee45" translate="yes" xml:space="preserve">
          <source>Returns true if T is not const or immutable. Note that isMutable is true for string, or immutable(char)[], because the 'head' is mutable.</source>
          <target state="translated">如果T不是const或immutable,则返回true。请注意,对于字符串或immutable(char)[]来说,isMutable为真,因为 &quot;头 &quot;是可变的。</target>
        </trans-unit>
        <trans-unit id="2198152aab84ea1a6b609fc9bd4b6cc95d387179" translate="yes" xml:space="preserve">
          <source>Returns true if all input data has been decompressed and no further data can be decompressed (inflate() returned Z_STREAM_END)</source>
          <target state="translated">如果所有的输入数据已经被解压,并且没有进一步的数据可以被解压,则返回true(inflate()返回Z_STREAM_END)。</target>
        </trans-unit>
        <trans-unit id="fd36125606afbfcb1797e463d3605d76f3b24284" translate="yes" xml:space="preserve">
          <source>Returns true if and only if the &lt;code&gt;VariantN&lt;/code&gt; object holds a valid value (has been initialized with, or assigned from, a valid value).</source>
          <target state="translated">当且仅当 &lt;code&gt;VariantN&lt;/code&gt; 对象具有有效值（已使用有效值初始化或从有效值分配）时，才返回true 。</target>
        </trans-unit>
        <trans-unit id="d43c784814e287a641bf4db270b5cbd743297de6" translate="yes" xml:space="preserve">
          <source>Returns true if and only if the UUID is equal to {00000000-0000-0000-0000-000000000000}</source>
          <target state="translated">如果且仅当UUID等于{00000000-0000-0000-0000-0000-00000000}时,返回true。</target>
        </trans-unit>
        <trans-unit id="c0dbc3cc30ee131794229d2fb5db22ec243b5fb1" translate="yes" xml:space="preserve">
          <source>Returns true if any of the symbols &lt;code&gt;p&lt;/code&gt; resides in the enclosing instantiation scope of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">如果任何符号 &lt;code&gt;p&lt;/code&gt; 驻留在 &lt;code&gt;s&lt;/code&gt; 的封闭实例化范围内，则返回true 。</target>
        </trans-unit>
        <trans-unit id="22613bad77cef50f9c9046836f0a47434aa4b19c" translate="yes" xml:space="preserve">
          <source>Returns true if c is a valid code point</source>
          <target state="translated">如果c是一个有效的代码点,返回true。</target>
        </trans-unit>
        <trans-unit id="23810ab31c324d9a98c14b96b7f48dbc629ea7e1" translate="yes" xml:space="preserve">
          <source>Returns true if function was declared directly or indirectly in a unittest block</source>
          <target state="translated">如果函数直接或间接在单元测试块中声明,则返回true。</target>
        </trans-unit>
        <trans-unit id="e7b192a44d290f22b2a52787d75d812455e1a7ff" translate="yes" xml:space="preserve">
          <source>Returns true if lhs and rhs are equal.</source>
          <target state="translated">如果lhs和rhs相等,返回true。</target>
        </trans-unit>
        <trans-unit id="7ab2f0f2963444c95e5d2134154cb97c261debda" translate="yes" xml:space="preserve">
          <source>Returns true if the Tag is a start tag</source>
          <target state="translated">如果标签是一个起始标签,则返回true。</target>
        </trans-unit>
        <trans-unit id="0bc937d2d630c04cee3d009eb64466e23e412ab9" translate="yes" xml:space="preserve">
          <source>Returns true if the Tag is an empty tag</source>
          <target state="translated">如果标签是空标签,则返回true。</target>
        </trans-unit>
        <trans-unit id="d3185a01a1ab62171d02a2ad80c7513b2d9264cb" translate="yes" xml:space="preserve">
          <source>Returns true if the Tag is an end tag</source>
          <target state="translated">如果Tag是一个结束标签,返回true。</target>
        </trans-unit>
        <trans-unit id="3b17e172a7b60c4716b624a4986e53e7b2f1b546" translate="yes" xml:space="preserve">
          <source>Returns true if the array is encoded correctly</source>
          <target state="translated">如果数组的编码正确,返回true。</target>
        </trans-unit>
        <trans-unit id="72846752e712dd8b0400faa570281eb1dc2027b2" translate="yes" xml:space="preserve">
          <source>Returns true if the character c can be represented in this encoding scheme.</source>
          <target state="translated">如果字符c可以用这种编码方案表示,返回true。</target>
        </trans-unit>
        <trans-unit id="ee11f868a93433cf3721bba9ada0c0e23161b4d7" translate="yes" xml:space="preserve">
          <source>Returns true if the character is a base character according to the XML standard</source>
          <target state="translated">根据XML标准,如果该字符是基本字符,则返回true。</target>
        </trans-unit>
        <trans-unit id="6ed6e26873b798abcb2be5a23ca0eb9d4ce764bc" translate="yes" xml:space="preserve">
          <source>Returns true if the character is a character according to the XML standard</source>
          <target state="translated">如果该字符是一个符合XML标准的字符,则返回true。</target>
        </trans-unit>
        <trans-unit id="bb5377ef48ea29e7c3ddbde117c30414bca2a914" translate="yes" xml:space="preserve">
          <source>Returns true if the character is a combining character according to the XML standard</source>
          <target state="translated">如果该字符是符合XML标准的组合字符,则返回true。</target>
        </trans-unit>
        <trans-unit id="581a5bb1cb76c27bc05a09665dff669924e51288" translate="yes" xml:space="preserve">
          <source>Returns true if the character is a digit according to the XML standard</source>
          <target state="translated">根据XML标准,如果该字符是一个数字,则返回true。</target>
        </trans-unit>
        <trans-unit id="cc80edd02d4ba33cf3880e92daca03f6488bb791" translate="yes" xml:space="preserve">
          <source>Returns true if the character is a letter according to the XML standard</source>
          <target state="translated">根据XML标准,如果该字符是字母,则返回true。</target>
        </trans-unit>
        <trans-unit id="4d4254190cbc9ee3956d0b9d34e37b6f91bbceb6" translate="yes" xml:space="preserve">
          <source>Returns true if the character is an extender according to the XML standard</source>
          <target state="translated">根据XML标准,如果该字符是扩展符,则返回true。</target>
        </trans-unit>
        <trans-unit id="98b812df609439a4618cf65118e80281a06d8ef7" translate="yes" xml:space="preserve">
          <source>Returns true if the character is an ideographic character according to the XML standard</source>
          <target state="translated">根据XML标准,如果该字符是表意文字,则返回true。</target>
        </trans-unit>
        <trans-unit id="4d4fefd3a3c0f8d257980f4b1799fcfb3a7786cd" translate="yes" xml:space="preserve">
          <source>Returns true if the character is whitespace according to the XML standard</source>
          <target state="translated">根据XML标准,如果该字符是空白字符,则返回true。</target>
        </trans-unit>
        <trans-unit id="d5013acf48f139e3639053d68ef9b6757f89433c" translate="yes" xml:space="preserve">
          <source>Returns true if the class described by &lt;code&gt;child&lt;/code&gt; derives from or is the class described by this &lt;code&gt;TypeInfo_Class&lt;/code&gt;. Always returns false if the argument is null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47569ca8b39615ed1ad3396b701a1654b91c2512" translate="yes" xml:space="preserve">
          <source>Returns true if the code unit is legal. For example, the byte 0x80 would not be legal in ASCII, because ASCII code units must always be in the range 0x00 to 0x7F.</source>
          <target state="translated">如果代码单位是合法的,返回true。例如,字节0x80在ASCII码中是不合法的,因为ASCII码单位必须总是在0x00到0x7F的范围内。</target>
        </trans-unit>
        <trans-unit id="90a6fe546782a21f3ba7df3f1dadc4d54092a388" translate="yes" xml:space="preserve">
          <source>Returns true if the content is the empty string</source>
          <target state="translated">如果内容是空字符串,返回true。</target>
        </trans-unit>
        <trans-unit id="200466eecc8eeb7f6712610d6e36be7c216a97d3" translate="yes" xml:space="preserve">
          <source>Returns true if the current thread is in a critical region; otherwise, false.</source>
          <target state="translated">如果当前线程处于关键区域,则返回true;否则返回false。</target>
        </trans-unit>
        <trans-unit id="3ff81a00af8120911ce1e06c2641b13a285ec41f" translate="yes" xml:space="preserve">
          <source>Returns true if the expression may throw exceptions. If 'mustNotThrow' is true, generate an error if it throws</source>
          <target state="translated">如果表达式可以抛出异常,则返回true。如果'mustNotThrow'为真,则在抛出异常时产生一个错误。</target>
        </trans-unit>
        <trans-unit id="defec8929bbdd9c3e56c330cda0ff8c4a8f0b0fd" translate="yes" xml:space="preserve">
          <source>Returns true if the generator is empty.</source>
          <target state="translated">如果生成器为空,返回true。</target>
        </trans-unit>
        <trans-unit id="c69b80a2c5f787a14025c77620c70d4748cec24e" translate="yes" xml:space="preserve">
          <source>Returns true if the item represents empty XML text</source>
          <target state="translated">如果该项代表空的XML文本,则返回true。</target>
        </trans-unit>
        <trans-unit id="f49062b1b1da8d0386864b39946993407faf2743" translate="yes" xml:space="preserve">
          <source>Returns true if the string is encoded correctly</source>
          <target state="translated">如果字符串的编码正确,返回true。</target>
        </trans-unit>
        <trans-unit id="c92c02a0a49dde438909607e2409e70c09bc3f51" translate="yes" xml:space="preserve">
          <source>Returns true if there's an extra member which is the 'this' pointer to the enclosing context (enclosing aggregate or function)</source>
          <target state="translated">如果有一个额外的成员是指向包围上下文的'this'指针(包围集合或函数),则返回true。</target>
        </trans-unit>
        <trans-unit id="b2a91a6c9819f50c117c6dcfa975ecc94517bac5" translate="yes" xml:space="preserve">
          <source>Returns true if this is not instantiated in non-root module, and is a part of non-speculative instantiatiation.</source>
          <target state="translated">如果这个模块没有在非root模块中被实例化,并且是非speculative实例化的一部分,则返回true。</target>
        </trans-unit>
        <trans-unit id="d739611ad1542e81fbbbd7f6c69182a53332b0f4" translate="yes" xml:space="preserve">
          <source>Returns true if this symbol is defined in a non-root module without instantiation.</source>
          <target state="translated">如果这个符号在非root模块中被定义而没有实例化,则返回true。</target>
        </trans-unit>
        <trans-unit id="0b9f2680319b7e6a64c0bbb56b7501127db51d33" translate="yes" xml:space="preserve">
          <source>Returns true iff it is possible to represent the specified codepoint in the encoding.</source>
          <target state="translated">如果可以在编码中表示指定的码点,则返回true。</target>
        </trans-unit>
        <trans-unit id="b73f6993cc90995562085700b23d2b9d1a31bdc3" translate="yes" xml:space="preserve">
          <source>Returns underlying reference count if it is allocated and initialized (a positive integer), and &lt;code&gt;0&lt;/code&gt; otherwise.</source>
          <target state="translated">如果基础引用计数已分配和初始化（正整数），则返回基础引用计数，否则返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="47e84ff3cc0a2906d4557a0807365b812012feef" translate="yes" xml:space="preserve">
          <source>Returns utcOffset as a &lt;a href=&quot;core_time#Duration&quot;&gt;&lt;code&gt;core.time.Duration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回utcOffset作为&lt;a href=&quot;core_time#Duration&quot;&gt; &lt;code&gt;core.time.Duration&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c0cea6c0c8bb9a0927ce744433ca3aac4b38a0de" translate="yes" xml:space="preserve">
          <source>Returns vendor string, for display purposes only. Do NOT use this to determine features! Note that some CPUs have programmable vendorIDs.</source>
          <target state="translated">Returns vendor string,for display only.不要用它来确定功能 请注意,有些CPU有可编程的供应商ID。</target>
        </trans-unit>
        <trans-unit id="e321e4464ea0729c55bacf6d6488ae23c4a221c1" translate="yes" xml:space="preserve">
          <source>Returns what the offset from UTC is at the given std time. It includes the DST offset in effect at that time (if any).</source>
          <target state="translated">返回给定标准时间内UTC的偏移量。它包括当时有效的DST偏移量(如果有的话)。</target>
        </trans-unit>
        <trans-unit id="48510e171f2259637b410e1d6ec7f710f8e1d10b" translate="yes" xml:space="preserve">
          <source>Returns what the offset from UTC is for this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;. It includes the DST offset in effect at that time (if any).</source>
          <target state="translated">返回此&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt;与UTC的偏移量。它包括当时有效的DST偏移量（如果有）。</target>
        </trans-unit>
        <trans-unit id="3c10cabaff5e9865a97c1d29e61edfcde6f67545" translate="yes" xml:space="preserve">
          <source>Returns whether &lt;code&gt;c&lt;/code&gt; is a Unicode Private Use &lt;a href=&quot;#Code%20point&quot;&gt;code point&lt;/a&gt; (general Unicode category: Co).</source>
          <target state="translated">返回 &lt;code&gt;c&lt;/code&gt; 是否为Unicode专用&lt;a href=&quot;#Code%20point&quot;&gt;代码点&lt;/a&gt;（通用Unicode类别：Co）。</target>
        </trans-unit>
        <trans-unit id="8b1c413347814e12626e1a890ec0821fce680f1c" translate="yes" xml:space="preserve">
          <source>Returns whether &lt;code&gt;c&lt;/code&gt; is a Unicode alphabetic &lt;a href=&quot;#Character&quot;&gt;character&lt;/a&gt; (general Unicode category: Alphabetic).</source>
          <target state="translated">返回 &lt;code&gt;c&lt;/code&gt; 是否为Unicode字母&lt;a href=&quot;#Character&quot;&gt;字符&lt;/a&gt;（一般Unicode类别：字母）。</target>
        </trans-unit>
        <trans-unit id="20412304893875ea3e018f7a726da2a8f8476f14" translate="yes" xml:space="preserve">
          <source>Returns whether &lt;code&gt;c&lt;/code&gt; is a Unicode alphabetic &lt;a href=&quot;#Character&quot;&gt;character&lt;/a&gt; or number. (general Unicode category: Alphabetic, Nd, Nl, No).</source>
          <target state="translated">返回 &lt;code&gt;c&lt;/code&gt; 是Unicode字母&lt;a href=&quot;#Character&quot;&gt;字符&lt;/a&gt;还是数字。（通用Unicode类别：字母，Nd，Nl，否）。</target>
        </trans-unit>
        <trans-unit id="8052a83c24e57dc4e4444167682783731f57df26" translate="yes" xml:space="preserve">
          <source>Returns whether &lt;code&gt;c&lt;/code&gt; is a Unicode control &lt;a href=&quot;#Character&quot;&gt;character&lt;/a&gt; (general Unicode category: Cc).</source>
          <target state="translated">返回 &lt;code&gt;c&lt;/code&gt; 是否为Unicode控制&lt;a href=&quot;#Character&quot;&gt;字符&lt;/a&gt;（通用Unicode类别：Cc）。</target>
        </trans-unit>
        <trans-unit id="48123650fef8c5fbb7ca07365c2df319be52309c" translate="yes" xml:space="preserve">
          <source>Returns whether &lt;code&gt;c&lt;/code&gt; is a Unicode formatting &lt;a href=&quot;#Character&quot;&gt;character&lt;/a&gt; (general Unicode category: Cf).</source>
          <target state="translated">返回 &lt;code&gt;c&lt;/code&gt; 是否为Unicode格式&lt;a href=&quot;#Character&quot;&gt;字符&lt;/a&gt;（通用Unicode类别：Cf）。</target>
        </trans-unit>
        <trans-unit id="52cb9f5fdcef562bfd57e037cbe7e5c7fa96ae53" translate="yes" xml:space="preserve">
          <source>Returns whether &lt;code&gt;c&lt;/code&gt; is a Unicode graphical &lt;a href=&quot;#Character&quot;&gt;character&lt;/a&gt; (general Unicode category: L, M, N, P, S, Zs).</source>
          <target state="translated">返回 &lt;code&gt;c&lt;/code&gt; 是否为Unicode图形&lt;a href=&quot;#Character&quot;&gt;字符&lt;/a&gt;（通用Unicode类别：L，M，N，P，S，Zs）。</target>
        </trans-unit>
        <trans-unit id="e328e581ac0dc24314f31ecbc0908c7abb2f7127" translate="yes" xml:space="preserve">
          <source>Returns whether &lt;code&gt;c&lt;/code&gt; is a Unicode high surrogate (lead surrogate).</source>
          <target state="translated">返回 &lt;code&gt;c&lt;/code&gt; 是否为Unicode高代理（超前代理）。</target>
        </trans-unit>
        <trans-unit id="0fe00a23eff6a644a0c6ba70189cfa530b7b6903" translate="yes" xml:space="preserve">
          <source>Returns whether &lt;code&gt;c&lt;/code&gt; is a Unicode low surrogate (trail surrogate).</source>
          <target state="translated">返回 &lt;code&gt;c&lt;/code&gt; 是否为Unicode低代理（尾部代理）。</target>
        </trans-unit>
        <trans-unit id="8c2ff9ed3fdd9c4b449a64051aeedb338901e989" translate="yes" xml:space="preserve">
          <source>Returns whether &lt;code&gt;c&lt;/code&gt; is a Unicode mark (general Unicode category: Mn, Me, Mc).</source>
          <target state="translated">返回 &lt;code&gt;c&lt;/code&gt; 是否为Unicode标记（常规Unicode类别：Mn，Me，Mc）。</target>
        </trans-unit>
        <trans-unit id="5edcb59636f6ab1fc5ccf2d42a7f3a7b301dadc8" translate="yes" xml:space="preserve">
          <source>Returns whether &lt;code&gt;c&lt;/code&gt; is a Unicode non-character i.e. a &lt;a href=&quot;#Code%20point&quot;&gt;code point&lt;/a&gt; with no assigned abstract character. (general Unicode category: Cn)</source>
          <target state="translated">返回 &lt;code&gt;c&lt;/code&gt; 是否为Unicode非字符，即没有分配抽象字符的&lt;a href=&quot;#Code%20point&quot;&gt;代码点&lt;/a&gt;。（通用Unicode类别：Cn）</target>
        </trans-unit>
        <trans-unit id="7595af263e47d4b9c34550528bb8edf7a07b170f" translate="yes" xml:space="preserve">
          <source>Returns whether &lt;code&gt;c&lt;/code&gt; is a Unicode numerical &lt;a href=&quot;#Character&quot;&gt;character&lt;/a&gt; (general Unicode category: Nd, Nl, No).</source>
          <target state="translated">返回 &lt;code&gt;c&lt;/code&gt; 是否为Unicode数字&lt;a href=&quot;#Character&quot;&gt;字符&lt;/a&gt;（Unicode常规类别：Nd，Nl，No）。</target>
        </trans-unit>
        <trans-unit id="1478faa31958f0238c5486524214089322f5cd36" translate="yes" xml:space="preserve">
          <source>Returns whether &lt;code&gt;c&lt;/code&gt; is a Unicode punctuation &lt;a href=&quot;#Character&quot;&gt;character&lt;/a&gt; (general Unicode category: Pd, Ps, Pe, Pc, Po, Pi, Pf).</source>
          <target state="translated">返回 &lt;code&gt;c&lt;/code&gt; 是否为Unicode标点&lt;a href=&quot;#Character&quot;&gt;字符&lt;/a&gt;（通用Unicode类别：Pd，Ps，Pe，Pc，Po，Pi，Pf）。</target>
        </trans-unit>
        <trans-unit id="156a9001b6ee458850080b18ed8a855adfe5a1e0" translate="yes" xml:space="preserve">
          <source>Returns whether &lt;code&gt;c&lt;/code&gt; is a Unicode space &lt;a href=&quot;#Character&quot;&gt;character&lt;/a&gt; (general Unicode category: Zs)</source>
          <target state="translated">返回 &lt;code&gt;c&lt;/code&gt; 是否为Unicode空格&lt;a href=&quot;#Character&quot;&gt;字符&lt;/a&gt;（常规Unicode类别：Zs）</target>
        </trans-unit>
        <trans-unit id="9c80de8e3306b8da6b9918d9184b2f0b65b08d16" translate="yes" xml:space="preserve">
          <source>Returns whether &lt;code&gt;c&lt;/code&gt; is a Unicode surrogate &lt;a href=&quot;#Code%20point&quot;&gt;code point&lt;/a&gt; (general Unicode category: Cs).</source>
          <target state="translated">返回 &lt;code&gt;c&lt;/code&gt; 是否为Unicode代理&lt;a href=&quot;#Code%20point&quot;&gt;代码点&lt;/a&gt;（通用Unicode类别：Cs）。</target>
        </trans-unit>
        <trans-unit id="adc7a749d9ed08ffd6fb11619e94adc5df751f73" translate="yes" xml:space="preserve">
          <source>Returns whether &lt;code&gt;c&lt;/code&gt; is a Unicode symbol &lt;a href=&quot;#Character&quot;&gt;character&lt;/a&gt; (general Unicode category: Sm, Sc, Sk, So).</source>
          <target state="translated">返回 &lt;code&gt;c&lt;/code&gt; 是否为Unicode符号&lt;a href=&quot;#Character&quot;&gt;字符&lt;/a&gt;（Unicode常规类别：Sm，Sc，Sk，So）。</target>
        </trans-unit>
        <trans-unit id="e9d0b0a92175f6ed528c435f87183e3751be3f32" translate="yes" xml:space="preserve">
          <source>Returns whether DST is in effect for this &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回此&lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; 的&lt;/a&gt; DST是否有效。</target>
        </trans-unit>
        <trans-unit id="6ab4d3d13a4b9e6532ff34435c6a4689b5a02a38" translate="yes" xml:space="preserve">
          <source>Returns whether the &lt;code&gt;back&lt;/code&gt;s of &lt;code&gt;lhs&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt; both refer to the same place in memory, making one of the arrays a slice of the other which end at index &lt;code&gt;$&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;lhs&lt;/code&gt; 和 &lt;code&gt;rhs&lt;/code&gt; 的 &lt;code&gt;back&lt;/code&gt; s 是否都指向内存中的同一位置，从而使数组之一成为另一个数组的一个切片，并以索引 &lt;code&gt;$&lt;/code&gt; 结尾。</target>
        </trans-unit>
        <trans-unit id="6be7cfa2f1bb7e4991fc4a28bb92409c19aae932" translate="yes" xml:space="preserve">
          <source>Returns whether the &lt;code&gt;front&lt;/code&gt;s of &lt;code&gt;lhs&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt; both refer to the same place in memory, making one of the arrays a slice of the other which starts at index &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;lhs&lt;/code&gt; 和 &lt;code&gt;rhs&lt;/code&gt; 的 &lt;code&gt;front&lt;/code&gt; s 是否都指向内存中的同一位置，从而使数组之一成为另一个数组的切片，该数组的另一个从索引 &lt;code&gt;0&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="14de15801224be248dd002e5742a8ce6e00309c9" translate="yes" xml:space="preserve">
          <source>Returns whether the file represented by this &lt;code&gt;DirEntry&lt;/code&gt; is a directory.</source>
          <target state="translated">返回此 &lt;code&gt;DirEntry&lt;/code&gt; 表示的文件是否为目录。</target>
        </trans-unit>
        <trans-unit id="e3b0014cf0e4c483c081ccc8b96dc40ccc447a6b" translate="yes" xml:space="preserve">
          <source>Returns whether the file represented by this &lt;code&gt;DirEntry&lt;/code&gt; is a file.</source>
          <target state="translated">返回此 &lt;code&gt;DirEntry&lt;/code&gt; 表示的文件是否为文件。</target>
        </trans-unit>
        <trans-unit id="bbddd3a269a6acf94608d7b485670c33ca54303f" translate="yes" xml:space="preserve">
          <source>Returns whether the file represented by this &lt;code&gt;DirEntry&lt;/code&gt; is a symbolic link.</source>
          <target state="translated">返回此 &lt;code&gt;DirEntry&lt;/code&gt; 表示的文件是否为符号链接。</target>
        </trans-unit>
        <trans-unit id="ba3db36224e13e2474d0dd4f5c75bcb323efc167" translate="yes" xml:space="preserve">
          <source>Returns whether the given day is valid for the given year and month.</source>
          <target state="translated">返回给定年份和月份的日期是否有效。</target>
        </trans-unit>
        <trans-unit id="fd0cae71c12ced837f12efb8bed85b2d663584ad" translate="yes" xml:space="preserve">
          <source>Returns whether the given file (or directory) is a file.</source>
          <target state="translated">返回给定的文件(或目录)是否为文件。</target>
        </trans-unit>
        <trans-unit id="b1d9f2dd278102b2a31cc3434c73368266665cd1" translate="yes" xml:space="preserve">
          <source>Returns whether the given file attributes are for a directory.</source>
          <target state="translated">返回给定的文件属性是否为一个目录。</target>
        </trans-unit>
        <trans-unit id="9a80b5fb681696719b08f9c26c6949cdacb39962" translate="yes" xml:space="preserve">
          <source>Returns whether the given file attributes are for a file.</source>
          <target state="translated">返回给定的文件属性是否为一个文件。</target>
        </trans-unit>
        <trans-unit id="77ccc710157d8864fb9582400cce8aec394abde3" translate="yes" xml:space="preserve">
          <source>Returns whether the given file attributes are for a symbolic link.</source>
          <target state="translated">返回给定的文件属性是否为符号链接。</target>
        </trans-unit>
        <trans-unit id="b361d0b04b5b5842232aa78493d9985b18b232ca" translate="yes" xml:space="preserve">
          <source>Returns whether the given file is a directory.</source>
          <target state="translated">返回给定文件是否为目录。</target>
        </trans-unit>
        <trans-unit id="da5a0bad39028a7d4481de8d65e49dfcb3c95276" translate="yes" xml:space="preserve">
          <source>Returns whether the given file is a symbolic link.</source>
          <target state="translated">返回给定文件是否为符号链接。</target>
        </trans-unit>
        <trans-unit id="8fe6f4c2454ab20247885739acba1adb4cad2ec8" translate="yes" xml:space="preserve">
          <source>Returns whether the given value is valid for the given unit type when in a time point. Naturally, a duration is not held to a particular range, but the values in a time point are (e.g. a month must be in the range of 1 - 12 inclusive).</source>
          <target state="translated">返回给定单位类型的值在时间点上是否有效。当然,持续时间并没有特定的范围,但时间点中的值是有效的(例如,一个月必须在1-12的范围内)。</target>
        </trans-unit>
        <trans-unit id="e5626c162db92c34f6c67b7210f42c09088f14eb" translate="yes" xml:space="preserve">
          <source>Returns whether the resource exists.</source>
          <target state="translated">返回该资源是否存在。</target>
        </trans-unit>
        <trans-unit id="547f6e36f8abd95e8ba99e550f4f1f4c7bd5746d" translate="yes" xml:space="preserve">
          <source>Returns whether this &lt;code&gt;Duration&lt;/code&gt; is negative.</source>
          <target state="translated">返回此 &lt;code&gt;Duration&lt;/code&gt; 是否为负。</target>
        </trans-unit>
        <trans-unit id="0afcdbd574ed97c633aeb99e4d6e73fb6c95ac45" translate="yes" xml:space="preserve">
          <source>Returns whether this StopWatch is currently running.</source>
          <target state="translated">返回该StopWatch当前是否正在运行。</target>
        </trans-unit>
        <trans-unit id="838ce6f04b144643d883aba09cab9cea3aa97645" translate="yes" xml:space="preserve">
          <source>Returns x rounded to a long value using the FE_TONEAREST rounding mode. If the integer value of x is greater than long.max, the result is indeterminate.</source>
          <target state="translated">使用FE_TONEAREST四舍五入模式返回x的长值。如果x的整数值大于long.max,则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="0a95802367fe5f1b74a0d9f770d25f2f23e46b59" translate="yes" xml:space="preserve">
          <source>Returns x rounded to a long value using the current rounding mode. If the integer value of x is greater than long.max, the result is indeterminate.</source>
          <target state="translated">使用当前的四舍五入模式返回x的长值。如果x的整数值大于long.max,则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="80b52c39509623a517e5744a3fafec2a8b652469" translate="yes" xml:space="preserve">
          <source>Returns |x|</source>
          <target state="translated">返回|x|</target>
        </trans-unit>
        <trans-unit id="7749fcf802c472b6c2f5bd0556805e456ffd5674" translate="yes" xml:space="preserve">
          <source>Returns:</source>
          <target state="translated">Returns:</target>
        </trans-unit>
        <trans-unit id="042600f6d61956e81270c4621932f5503cc00b56" translate="yes" xml:space="preserve">
          <source>Reuses the &lt;code&gt;File&lt;/code&gt; object to either open a different file, or change the file mode. If &lt;code&gt;name&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the mode of the currently open file is changed; otherwise, a new file is opened, reusing the C &lt;code&gt;FILE*&lt;/code&gt;. The function has the same semantics as in the C standard library &lt;a href=&quot;http://cplusplus.com/reference/cstdio/freopen/&quot;&gt;freopen&lt;/a&gt; function.</source>
          <target state="translated">重用 &lt;code&gt;File&lt;/code&gt; 对象打开另一个文件，或更改文件模式。如果 &lt;code&gt;name&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，则更改当前打开文件的模式；否则，将重新使用C &lt;code&gt;FILE*&lt;/code&gt; 打开一个新文件。该函数的语义与C标准库&lt;a href=&quot;http://cplusplus.com/reference/cstdio/freopen/&quot;&gt;freopen&lt;/a&gt;函数中的语义相同。</target>
        </trans-unit>
        <trans-unit id="81f6a2c4d287154f1ce5316a434686509dd8c2c4" translate="yes" xml:space="preserve">
          <source>Reverse a list in place.</source>
          <target state="translated">就地反转列表。</target>
        </trans-unit>
        <trans-unit id="02bba980f228add0c93063c7e5848dfa4b43823a" translate="yes" xml:space="preserve">
          <source>Reverse an array in-place.</source>
          <target state="translated">原地反转一个数组。</target>
        </trans-unit>
        <trans-unit id="486fcc000e3e1c1b7111db7b98eb05fe4c35e9ea" translate="yes" xml:space="preserve">
          <source>Reverses &lt;code&gt;r&lt;/code&gt; in-place. Performs &lt;code&gt;r.length / 2&lt;/code&gt; evaluations of &lt;code&gt;swap&lt;/code&gt;. UTF sequences consisting of multiple code units are preserved properly.</source>
          <target state="translated">将 &lt;code&gt;r&lt;/code&gt; 原位反转。执行 &lt;code&gt;r.length / 2&lt;/code&gt; &lt;code&gt;swap&lt;/code&gt; 评估。由多个代码单元组成的UTF序列可以正确保留。</target>
        </trans-unit>
        <trans-unit id="36b64711436f6dd1804041259ae5426a477f2fe3" translate="yes" xml:space="preserve">
          <source>Reverses SList in-place. Performs no memory allocation.</source>
          <target state="translated">原地反转SList。不执行内存分配。</target>
        </trans-unit>
        <trans-unit id="e2c24b3de5bc34f6bc17f9d7532084a2887cdd6e" translate="yes" xml:space="preserve">
          <source>Reverses the bits of the &lt;code&gt;BitArray&lt;/code&gt;.</source>
          <target state="translated">反转 &lt;code&gt;BitArray&lt;/code&gt; 的位。</target>
        </trans-unit>
        <trans-unit id="7cb19a0522bebe49634bd788f59866fd3167457e" translate="yes" xml:space="preserve">
          <source>Reverses the order of bits in a 32-bit integer.</source>
          <target state="translated">颠倒32位整数的位序。</target>
        </trans-unit>
        <trans-unit id="52b779a914b388fa595c14cb18714aac8a12728d" translate="yes" xml:space="preserve">
          <source>Reverses the order of bits in a 64-bit integer.</source>
          <target state="translated">颠倒64位整数的位序。</target>
        </trans-unit>
        <trans-unit id="913c17e6f3ea1b0c8c04639c0711b667473adbb7" translate="yes" xml:space="preserve">
          <source>Revert to a default value upon an error:</source>
          <target state="translated">出错时恢复到默认值。</target>
        </trans-unit>
        <trans-unit id="7e92da2a9db5a146a33de55a03086369ae07d386" translate="yes" xml:space="preserve">
          <source>Reviewed by Brad Roberts. Daniel Keep provided a detailed code review prompting the following improvements: (1) better support for arrays; (2) support for associative arrays; (3) friendlier behavior towards the garbage collector.</source>
          <target state="translated">由Brad Roberts审核。Daniel Keep提供了详细的代码审查,提示了以下改进。(1)更好地支持数组;(2)支持关联数组;(3)对垃圾收集器的行为更友好。</target>
        </trans-unit>
        <trans-unit id="f976e9a2195ccad9e07346e959b4ecc76c325eff" translate="yes" xml:space="preserve">
          <source>Revision history.</source>
          <target state="translated">修订历史。</target>
        </trans-unit>
        <trans-unit id="646189a1955445c94d7221e00a651a2046c1c871" translate="yes" xml:space="preserve">
          <source>Rewrite contracts as statements.</source>
          <target state="translated">将合同改写成报表。</target>
        </trans-unit>
        <trans-unit id="89b5d5e37f6f56a29c2561c072dc241cd55931aa" translate="yes" xml:space="preserve">
          <source>Rewriting of comparison operations</source>
          <target state="translated">重写比较操作</target>
        </trans-unit>
        <trans-unit id="e2def1680135bf4b47297c8087f4620ec0b2e4a9" translate="yes" xml:space="preserve">
          <source>Rhs</source>
          <target state="translated">Rhs</target>
        </trans-unit>
        <trans-unit id="5e526ff266e522a5426ba99295485c6b8af7b831" translate="yes" xml:space="preserve">
          <source>Rhs &lt;code&gt;rhs&lt;/code&gt;</source>
          <target state="translated">RHS &lt;code&gt;rhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bde1c79b7d3fd6e3d0fb5b38d93ff6a5d75715e7" translate="yes" xml:space="preserve">
          <source>Right bound of initial range of &lt;code&gt;f&lt;/code&gt; known to contain the root.</source>
          <target state="translated">已知包含根的 &lt;code&gt;f&lt;/code&gt; 的初始范围的右边界。</target>
        </trans-unit>
        <trans-unit id="a51ab2c4a960026caf59b69b53b43b1ec73a88f5" translate="yes" xml:space="preserve">
          <source>Right bound of initial range of f known to contain the minimum.</source>
          <target state="translated">已知f的初始范围的右界包含最小值。</target>
        </trans-unit>
        <trans-unit id="afb13751cbca853ef0a548421c5ad4469c798c3d" translate="yes" xml:space="preserve">
          <source>Right justify &lt;code&gt;s&lt;/code&gt; in a field &lt;code&gt;width&lt;/code&gt; characters wide. &lt;code&gt;fillChar&lt;/code&gt; is the character that will be used to fill up the space in the field that &lt;code&gt;s&lt;/code&gt; doesn't fill.</source>
          <target state="translated">右对齐字段 &lt;code&gt;width&lt;/code&gt; 为 &lt;code&gt;s&lt;/code&gt; 的字符。 &lt;code&gt;fillChar&lt;/code&gt; 是将用于填充 &lt;code&gt;s&lt;/code&gt; 不会填充的字段中的字符的字符。</target>
        </trans-unit>
        <trans-unit id="cc84b9f323c969ed747f63616d18cb0e2559eefa" translate="yes" xml:space="preserve">
          <source>Rng &lt;code&gt;rnd&lt;/code&gt;</source>
          <target state="translated">RNG &lt;code&gt;rnd&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18748a54bf90fc0b5a4a3a7527f67a3a4d953d4a" translate="yes" xml:space="preserve">
          <source>RoR &lt;code&gt;r&lt;/code&gt;</source>
          <target state="translated">回报率 &lt;code&gt;r&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64c2bd3f7cd65ceac20ebd1622a287b9466bc72e" translate="yes" xml:space="preserve">
          <source>RoR &lt;code&gt;ror&lt;/code&gt;</source>
          <target state="translated">RoR &lt;code&gt;ror&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18ba044430e02f2958be80a25158f225f656d9b1" translate="yes" xml:space="preserve">
          <source>Robert burner Schadek</source>
          <target state="translated">Robert Burner Schadek</target>
        </trans-unit>
        <trans-unit id="c0c828eded61ec9ce66ca119b9686e81b389c44d" translate="yes" xml:space="preserve">
          <source>Rolls a dice with relative probabilities stored in &lt;code&gt;proportions&lt;/code&gt;. Returns the index in &lt;code&gt;proportions&lt;/code&gt; that was chosen.</source>
          <target state="translated">掷骰子，相对概率按 &lt;code&gt;proportions&lt;/code&gt; 存储。以选择的 &lt;code&gt;proportions&lt;/code&gt; 返回索引。</target>
        </trans-unit>
        <trans-unit id="12c0a4d87f9da9ea7c5d02b3d258368b74939baf" translate="yes" xml:space="preserve">
          <source>RootObject &lt;code&gt;id&lt;/code&gt;</source>
          <target state="translated">根对象 &lt;code&gt;id&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8cd58c4c77682fa001856e18b08987d9c7304449" translate="yes" xml:space="preserve">
          <source>RootObject &lt;code&gt;o&lt;/code&gt;</source>
          <target state="translated">RootObject &lt;code&gt;o&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="581ba447c0a648c09593b4209f69b921e66e29fb" translate="yes" xml:space="preserve">
          <source>RootObject &lt;strong id=&quot;aliasParameterSemantic&quot;&gt;aliasParameterSemantic&lt;/strong&gt;(Loc loc, Scope* sc, RootObject o, TemplateParameters* parameters);</source>
          <target state="translated">RootObject &lt;strong id=&quot;aliasParameterSemantic&quot;&gt;aliasParameterSemantic&lt;/strong&gt;（Loc loc，Scope * sc，RootObject o，TemplateParameters *参数）;</target>
        </trans-unit>
        <trans-unit id="1d593553b26c6fd5515161b0277225d93c8a2251" translate="yes" xml:space="preserve">
          <source>RootObject &lt;strong id=&quot;declareParameter&quot;&gt;declareParameter&lt;/strong&gt;(Scope* sc, TemplateParameter tp, RootObject o);</source>
          <target state="translated">RootObject &lt;strong id=&quot;declareParameter&quot;&gt;声明参数&lt;/strong&gt;（Scope * sc，TemplateParameter tp，RootObject o）;</target>
        </trans-unit>
        <trans-unit id="cd5e5447f2a2e34e3141a1bcd21ba5c605ed9ef2" translate="yes" xml:space="preserve">
          <source>RootObject &lt;strong id=&quot;parseTypeOrAssignExp&quot;&gt;parseTypeOrAssignExp&lt;/strong&gt;();</source>
          <target state="translated">RootObject &lt;strong id=&quot;parseTypeOrAssignExp&quot;&gt;parseTypeOrAssignExp&lt;/strong&gt;（）;</target>
        </trans-unit>
        <trans-unit id="b41a314bf17040d8b5e323877c0e8fe02f9fba89" translate="yes" xml:space="preserve">
          <source>RootObject representing the AST</source>
          <target state="translated">代表AST的RootObject</target>
        </trans-unit>
        <trans-unit id="5ba043d4ad1fd9feaa94d824a766c624f78a67ee" translate="yes" xml:space="preserve">
          <source>Round &lt;code&gt;val&lt;/code&gt; to a multiple of &lt;code&gt;pow(base, exp)&lt;/code&gt;. &lt;code&gt;rfunc&lt;/code&gt; specifies the rounding function to use; by default this is &lt;code&gt;rint&lt;/code&gt;, which uses the current rounding mode.</source>
          <target state="translated">将 &lt;code&gt;val&lt;/code&gt; 舍入为 &lt;code&gt;pow(base, exp)&lt;/code&gt; 的倍数。 &lt;code&gt;rfunc&lt;/code&gt; 指定要使用的舍入函数；默认情况下，它是 &lt;code&gt;rint&lt;/code&gt; ，它使用当前的舍入模式。</target>
        </trans-unit>
        <trans-unit id="729404f7fdd29f46bc8030966e8df9381b6f53f0" translate="yes" xml:space="preserve">
          <source>Round &lt;code&gt;val&lt;/code&gt; to a multiple of &lt;code&gt;unit&lt;/code&gt;. &lt;code&gt;rfunc&lt;/code&gt; specifies the rounding function to use; by default this is &lt;code&gt;rint&lt;/code&gt;, which uses the current rounding mode.</source>
          <target state="translated">将 &lt;code&gt;val&lt;/code&gt; 舍入为 &lt;code&gt;unit&lt;/code&gt; 的倍数。 &lt;code&gt;rfunc&lt;/code&gt; 指定要使用的舍入函数；默认情况下，它是 &lt;code&gt;rint&lt;/code&gt; ，它使用当前的舍入模式。</target>
        </trans-unit>
        <trans-unit id="02029a6283cea7d7aaa033d87c3e02f700840712" translate="yes" xml:space="preserve">
          <source>Round argument to a specific precision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9fcd821c05596d6a4e9e2c37c9b79af458d2d7" translate="yes" xml:space="preserve">
          <source>Round up request size to allocation size</source>
          <target state="translated">将请求大小四舍五入到分配大小</target>
        </trans-unit>
        <trans-unit id="9fd5c41f6700ee519edf618656bada84a4f1c15e" translate="yes" xml:space="preserve">
          <source>Rounded conversion from floating point to integral.</source>
          <target state="translated">从浮点到积分的四舍五入转换。</target>
        </trans-unit>
        <trans-unit id="659e3ebceec95fe76068b19e1defb6c7ca41b740" translate="yes" xml:space="preserve">
          <source>Rounded conversions do not work with non-integral target types.</source>
          <target state="translated">四舍五入的转换对非整体目标类型不起作用。</target>
        </trans-unit>
        <trans-unit id="905cc3792492961c10eb158788a7c9f956d57aa5" translate="yes" xml:space="preserve">
          <source>Rounding</source>
          <target state="translated">Rounding</target>
        </trans-unit>
        <trans-unit id="ed8aff3fee04dc785e0009447efda6debf75523d" translate="yes" xml:space="preserve">
          <source>Rounding Control</source>
          <target state="translated">四舍五入控制</target>
        </trans-unit>
        <trans-unit id="aeed6fe8c51a6405741f8ef593b5d5d33c5ff47d" translate="yes" xml:space="preserve">
          <source>Rounding when casting to floating point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb5ec50f2ff4848cbdf10cd3aca75df1aae70d8" translate="yes" xml:space="preserve">
          <source>RoundingMode &lt;code&gt;newMode&lt;/code&gt;</source>
          <target state="translated">RoundingMode &lt;code&gt;newMode&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc46ee2c4198eaa115c62825b2bc01d30bf3319e" translate="yes" xml:space="preserve">
          <source>Rounds the allocation size to the next multiple of the page size. The allocation only reserves a range of virtual pages but the actual physical memory is allocated on demand, when accessing the memory.</source>
          <target state="translated">将分配大小舍入到页面大小的下一个倍数。该分配只保留了虚拟页面的范围,但实际的物理内存是在访问内存时按需分配的。</target>
        </trans-unit>
        <trans-unit id="9330049c8ecb309df4b4f2448f62c07ca3a5bfc1" translate="yes" xml:space="preserve">
          <source>Rounds the given size to a multiple of the &lt;code&gt;alignment&lt;/code&gt;</source>
          <target state="translated">将给定大小四舍五入为 &lt;code&gt;alignment&lt;/code&gt; 的倍数</target>
        </trans-unit>
        <trans-unit id="cf6bdd959037cb97c60373b1c6c57fbce0f61cd1" translate="yes" xml:space="preserve">
          <source>Rounds the given size to a multiple of thew &lt;code&gt;alignment&lt;/code&gt;</source>
          <target state="translated">将给定大小四舍五入为w &lt;code&gt;alignment&lt;/code&gt; 的倍数</target>
        </trans-unit>
        <trans-unit id="014f4474c49fd6651e10ead6abedbffd20a6b747" translate="yes" xml:space="preserve">
          <source>Rounds the mapping size to the next multiple of the page size and calls the OS primitive responsible for creating memory mappings: &lt;code&gt;mmap&lt;/code&gt; on POSIX and &lt;code&gt;VirtualAlloc&lt;/code&gt; on Windows.</source>
          <target state="translated">将映射大小四舍五入到页面大小的下一个倍数，并调用负责创建内存映射的OS原语：POSIX 上的 &lt;code&gt;mmap&lt;/code&gt; 和Windows 上的 &lt;code&gt;VirtualAlloc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91034be1d9b5696626eca72339485ed35eb1c32c" translate="yes" xml:space="preserve">
          <source>Rounds the requested size to the next multiple of the page size.</source>
          <target state="translated">将要求的大小四舍五入到页面大小的下一个倍数。</target>
        </trans-unit>
        <trans-unit id="bb30f3b3a072315c39d8c23f795265f803a1f40a" translate="yes" xml:space="preserve">
          <source>Rounds up to the maximum size of the bucket in which &lt;code&gt;bytes&lt;/code&gt; falls.</source>
          <target state="translated">向上舍入到 &lt;code&gt;bytes&lt;/code&gt; 所在的存储桶的最大大小。</target>
        </trans-unit>
        <trans-unit id="731df05540a9b4da46134227754879d50511760e" translate="yes" xml:space="preserve">
          <source>Rounds x to the nearest integer value, using the current rounding mode.</source>
          <target state="translated">使用当前的四舍五入模式,将x舍入到最接近的整数值。</target>
        </trans-unit>
        <trans-unit id="d63adc049eca9d725dc69dc2d8ec8d8ff1fcd9bf" translate="yes" xml:space="preserve">
          <source>Rounds x to the nearest integer value, using the current rounding mode. If the return value is not equal to x, the FE_INEXACT exception is raised. &lt;b&gt;nearbyint&lt;/b&gt; performs the same operation, but does not set the FE_INEXACT exception.</source>
          <target state="translated">使用当前的舍入模式将x舍入到最接近的整数值。如果返回值不等于x，则会引发FE_INEXACT异常。&lt;b&gt;nearint&lt;/b&gt;执行相同的操作，但不设置FE_INEXACT异常。</target>
        </trans-unit>
        <trans-unit id="284a7f5e42a363953a5a0c3e60335230917805e7" translate="yes" xml:space="preserve">
          <source>Routines specific to the ASCII subset of Unicode.</source>
          <target state="translated">Unicode的ASCII子集的特定例程。</target>
        </trans-unit>
        <trans-unit id="6805fd1202106fd7a5b33f7938919a99122b9436" translate="yes" xml:space="preserve">
          <source>Rs &lt;code&gt;needles&lt;/code&gt;</source>
          <target state="translated">Rs &lt;code&gt;needles&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70d98aa2b860f17dc12cc094ee367ed29d25899f" translate="yes" xml:space="preserve">
          <source>Rs &lt;code&gt;ranges&lt;/code&gt;</source>
          <target state="translated">Rs &lt;code&gt;ranges&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="30691c304c0236788193b6f2b9255d54b7feeef4" translate="yes" xml:space="preserve">
          <source>Rs &lt;code&gt;rs&lt;/code&gt;</source>
          <target state="translated">RS &lt;code&gt;rs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4649e75ce0ca5e2108b66926fc94b55756d33ca" translate="yes" xml:space="preserve">
          <source>Rumi Numeral Symbols</source>
          <target state="translated">鲁米数字符号</target>
        </trans-unit>
        <trans-unit id="89df0e63db6dedf1067d015771af8537f9f0a5c7" translate="yes" xml:space="preserve">
          <source>Run full semantic analysis on a module.</source>
          <target state="translated">在一个模块上运行完整的语义分析。</target>
        </trans-unit>
        <trans-unit id="67bb6e4e60e2ed7434c05e6c4fd8fe82d7918af4" translate="yes" xml:space="preserve">
          <source>Run semantic of tiargs as arguments of template.</source>
          <target state="translated">作为模板的参数运行tiargs的语义。</target>
        </trans-unit>
        <trans-unit id="c2f1578ded20a82e135ec7d157cd65eda0b27068" translate="yes" xml:space="preserve">
          <source>Run semantic on the elements of tiargs.</source>
          <target state="translated">在 tiargs 的元素上运行语义。</target>
        </trans-unit>
        <trans-unit id="24c47178385ae643551870f725edd4d44000744c" translate="yes" xml:space="preserve">
          <source>Run semantic() on deferred symbols.</source>
          <target state="translated">在递延符号上运行semantic()。</target>
        </trans-unit>
        <trans-unit id="487018e035aa1a925c09e288af33a70420405da7" translate="yes" xml:space="preserve">
          <source>Run the compiled program. Return exit status.</source>
          <target state="translated">运行编译后的程序。返回退出状态。</target>
        </trans-unit>
        <trans-unit id="a442da74d9b7a844e73f5eb10b3afcd2d4b6c59c" translate="yes" xml:space="preserve">
          <source>Run the destructor on the object and all its sub-objects</source>
          <target state="translated">在对象和它的所有子对象上运行析产器。</target>
        </trans-unit>
        <trans-unit id="65155cef6176c6b4a7372235d02b5318ebb48bd7" translate="yes" xml:space="preserve">
          <source>Run the linker. Return status of execution.</source>
          <target state="translated">运行链接器。返回执行状态。</target>
        </trans-unit>
        <trans-unit id="8684492770a34ac36f41175eeb606cbd485765c3" translate="yes" xml:space="preserve">
          <source>Run the postblit on the object and all its sub-objects</source>
          <target state="translated">在对象及其所有子对象上运行postblit。</target>
        </trans-unit>
        <trans-unit id="a404918f75e1c621a9e51e540dea6b35ddf73cd9" translate="yes" xml:space="preserve">
          <source>Run-Time Library Compilation Options Diagnostics</source>
          <target state="translated">运行时库编译选项诊断</target>
        </trans-unit>
        <trans-unit id="b3a1ab24d28a4516dc6367fed9cebd2e03e59a70" translate="yes" xml:space="preserve">
          <source>Run-Time Library Version Numbers</source>
          <target state="translated">运行时库版本号</target>
        </trans-unit>
        <trans-unit id="4574000a6e96e607432e6012acf5a8e676d5db3e" translate="yes" xml:space="preserve">
          <source>Run-time Limits</source>
          <target state="translated">运行时间限制</target>
        </trans-unit>
        <trans-unit id="10edb70120d58b585eb716dac04179f10c05bfdd" translate="yes" xml:space="preserve">
          <source>Runic</source>
          <target state="translated">Runic</target>
        </trans-unit>
        <trans-unit id="f23108daf10fc3ed86df2bb60d044dcbc323f158" translate="yes" xml:space="preserve">
          <source>Running destructors for all queued memory.</source>
          <target state="translated">运行所有排队内存的析构器。</target>
        </trans-unit>
        <trans-unit id="076c12c94d5b2e24f616a54dcfe8c9154603b9ed" translate="yes" xml:space="preserve">
          <source>Running unittests in &lt;code&gt;-betterC&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;-betterC&lt;/code&gt; 中运行单元测试</target>
        </trans-unit>
        <trans-unit id="4ba8bd6c28554c6202fef1066cc234eae87487bf" translate="yes" xml:space="preserve">
          <source>Runs any finalizer that is located in address range of the given code segment. This is used before unloading shared libraries. All matching objects which have a finalizer in this code segment are assumed to be dead, using them while or after calling this method has undefined behavior.</source>
          <target state="translated">运行位于给定代码段地址范围内的任何定型器。这是在卸载共享库之前使用的。所有在这个代码段中有定型器的匹配对象都被认为是死的,在调用本方法的同时或之后使用它们会有未定义的行为。</target>
        </trans-unit>
        <trans-unit id="470a6d23ca6f426b222731ede8c4aa789158b8dc" translate="yes" xml:space="preserve">
          <source>Runs program directly</source>
          <target state="translated">直接运行程序</target>
        </trans-unit>
        <trans-unit id="c9d3311dbe287dca576c90f42488f7c77856b7ac" translate="yes" xml:space="preserve">
          <source>Runs semantic on ae.arguments. Declares temporary variables if '$' was used.</source>
          <target state="translated">在ae.arguments上运行语义。如果使用了'$',则声明临时变量。</target>
        </trans-unit>
        <trans-unit id="e4e7cb34c2ab1babf604d85da7c5d6cb4fd0dc24" translate="yes" xml:space="preserve">
          <source>Runs semantic on se.lwr and se.upr. Declares a temporary variable if '$' was used.</source>
          <target state="translated">在se.lwr和se.upr上运行语义。如果使用了'$',则声明一个临时变量。</target>
        </trans-unit>
        <trans-unit id="eef5fd1918e9d70b9d5f48364fcaaf084f45f2b2" translate="yes" xml:space="preserve">
          <source>Runs semantic() for all instance field variables, but also the field types can remain yet not resolved forward references, except direct recursive definitions. After the process sizeok is set to Sizeok.fwd.</source>
          <target state="translated">对所有实例字段变量运行semantic(),但字段类型也可以保持尚未解析的前向引用,直接递归定义除外。进程sizeok设置为Sizeok.fwd后。</target>
        </trans-unit>
        <trans-unit id="6e842f74109e182d726417475c208ddf41aa30d0" translate="yes" xml:space="preserve">
          <source>Runs shell command</source>
          <target state="translated">运行shell命令</target>
        </trans-unit>
        <trans-unit id="66945c04f3e95699c5fdec4cf7dd394fe1c7d455" translate="yes" xml:space="preserve">
          <source>Runtime Helper Functions</source>
          <target state="translated">运行时辅助功能</target>
        </trans-unit>
        <trans-unit id="19429dc4f33b4606e69944f9c03a5f91e1716396" translate="yes" xml:space="preserve">
          <source>Runtime Initialization of Immutable AAs</source>
          <target state="translated">不可变AA的运行时初始化</target>
        </trans-unit>
        <trans-unit id="0cd0c965651550e6b7d802c00c94f2266c77cfe0" translate="yes" xml:space="preserve">
          <source>Runtime Type Identification</source>
          <target state="translated">运行时类型识别</target>
        </trans-unit>
        <trans-unit id="c144d6087854e8cbe0377f690fa84167ea88336c" translate="yes" xml:space="preserve">
          <source>Runtime definitions generated by Ddoc.</source>
          <target state="translated">由Ddoc生成的运行时定义。</target>
        </trans-unit>
        <trans-unit id="4cce066c267be49d859d26b1e82f47342169d76d" translate="yes" xml:space="preserve">
          <source>Runtime environment, such as OS type and endianness.</source>
          <target state="translated">运行环境,如OS类型和endianness。</target>
        </trans-unit>
        <trans-unit id="629014c630c14ebdb1feb763095453ae92ce0c74" translate="yes" xml:space="preserve">
          <source>Runtime support for complex arithmetic code generation (for Posix).</source>
          <target state="translated">运行时支持复杂算术代码的生成(针对Posix)。</target>
        </trans-unit>
        <trans-unit id="98c8a9d894097346cd0b357382518ce28e5bf6f3" translate="yes" xml:space="preserve">
          <source>Runtime type information (a.k.a &lt;code&gt;TypeInfo&lt;/code&gt;) is supported. Evaluates to &lt;code&gt;false&lt;/code&gt; when compiling with command line switch &lt;a href=&quot;https://dlang.org/dmd.html#switch-betterC&quot;&gt;&lt;em&gt;-betterC&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">支持运行时类型信息（即 &lt;code&gt;TypeInfo&lt;/code&gt; ）。使用命令行开关&lt;a href=&quot;https://dlang.org/dmd.html#switch-betterC&quot;&gt;&lt;em&gt;-betterC&lt;/em&gt;&lt;/a&gt;编译时评估为 &lt;code&gt;false&lt;/code&gt; &lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7909f3e2a880ec8330c6e14e5d738f440fdbd059" translate="yes" xml:space="preserve">
          <source>Runtime type information about a class. Can be retrieved from an object instance by using the &lt;a href=&quot;https://dlang.org/spec/property.html#classinfo&quot;&gt;.classinfo&lt;/a&gt; property.</source>
          <target state="translated">有关类的运行时类型信息。可以使用&lt;a href=&quot;https://dlang.org/spec/property.html#classinfo&quot;&gt;.classinfo&lt;/a&gt;属性从对象实例检索。</target>
        </trans-unit>
        <trans-unit id="0b2db9e635e2be76be75ebc790eef0550a4049d2" translate="yes" xml:space="preserve">
          <source>Runtime type information about a type. Can be retrieved for any type using a &lt;a href=&quot;https://dlang.org/spec/expression.html#TypeidExpression&quot;&gt;&lt;i&gt;TypeidExpression&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">有关类型的运行时类型信息。可以使用&lt;a href=&quot;https://dlang.org/spec/expression.html#TypeidExpression&quot;&gt;&lt;i&gt;TypeidExpression&lt;/i&gt;&lt;/a&gt;检索任何类型的&lt;i&gt;数据&lt;/i&gt;。</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="e382de0e0fb44a2437e2cafcf5204582a3adea25" translate="yes" xml:space="preserve">
          <source>S &lt;code&gt;args&lt;/code&gt;</source>
          <target state="translated">小号 &lt;code&gt;args&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9dbe2bde1e0e339ad7404569dc9b29ac5d3dc2c0" translate="yes" xml:space="preserve">
          <source>S &lt;code&gt;firstindent&lt;/code&gt;</source>
          <target state="translated">小号 &lt;code&gt;firstindent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a11859009423adbef61f15df07771c3ab6ebf08f" translate="yes" xml:space="preserve">
          <source>S &lt;code&gt;indent&lt;/code&gt;</source>
          <target state="translated">小号 &lt;code&gt;indent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f4406f8ac105ec20618542297c575d74db7e0d4" translate="yes" xml:space="preserve">
          <source>S &lt;code&gt;input&lt;/code&gt;</source>
          <target state="translated">S &lt;code&gt;input&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="699d25e2b0ab4544fad7df604e63a857fced9182" translate="yes" xml:space="preserve">
          <source>S &lt;code&gt;isoExtString&lt;/code&gt;</source>
          <target state="translated">S &lt;code&gt;isoExtString&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4763442f1fcdb7c934956ed0c078ca94cecb4b69" translate="yes" xml:space="preserve">
          <source>S &lt;code&gt;isoString&lt;/code&gt;</source>
          <target state="translated">小号 &lt;code&gt;isoString&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="87c2a614b00f9d46a131e521b1c970e87e284981" translate="yes" xml:space="preserve">
          <source>S &lt;code&gt;newLocation&lt;/code&gt;</source>
          <target state="translated">小号 &lt;code&gt;newLocation&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="864d7c2b61b468f3d87395f5b343509939e3d3b2" translate="yes" xml:space="preserve">
          <source>S &lt;code&gt;oldLocation&lt;/code&gt;</source>
          <target state="translated">小号 &lt;code&gt;oldLocation&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4594949c12176e425e44b2503e0be257a46d9771" translate="yes" xml:space="preserve">
          <source>S &lt;code&gt;pattern&lt;/code&gt;</source>
          <target state="translated">S &lt;code&gt;pattern&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c58fb4ceef8dbb498c32322ef5a373c844e63f9a" translate="yes" xml:space="preserve">
          <source>S &lt;code&gt;s&lt;/code&gt;</source>
          <target state="translated">小号 &lt;code&gt;s&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7560f20d4834fa9d42d83d64caa71bf12ee60dd4" translate="yes" xml:space="preserve">
          <source>S &lt;code&gt;seed&lt;/code&gt;</source>
          <target state="translated">S &lt;code&gt;seed&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="572e91654bcf8c42d0bb05a4baf68154c349006f" translate="yes" xml:space="preserve">
          <source>S &lt;code&gt;simpleString&lt;/code&gt;</source>
          <target state="translated">S &lt;code&gt;simpleString&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0748e7ed68d912b4985ea58f1801865321ed280" translate="yes" xml:space="preserve">
          <source>S &lt;code&gt;source&lt;/code&gt;</source>
          <target state="translated">S &lt;code&gt;source&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="22085ab23c0a2c2b457708dc398e2151f27afd63" translate="yes" xml:space="preserve">
          <source>S &lt;code&gt;step&lt;/code&gt;</source>
          <target state="translated">S &lt;code&gt;step&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bcd939c73571bdbf9811413c52cedd8170546d1b" translate="yes" xml:space="preserve">
          <source>S &lt;code&gt;str&lt;/code&gt;</source>
          <target state="translated">小号 &lt;code&gt;str&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea8e3ebcf296d0466ec5b83431c3f508a1129aed" translate="yes" xml:space="preserve">
          <source>S &lt;strong id=&quot;center&quot;&gt;center&lt;/strong&gt;(S)(S s, size_t width, dchar fillChar = ' ')</source>
          <target state="translated">S &lt;strong id=&quot;center&quot;&gt;中心&lt;/strong&gt;（S）（S s，size_t宽度，dchar fillChar =''）</target>
        </trans-unit>
        <trans-unit id="ff194ac8e1659fb1ef55f84ca193edab71e46fe9" translate="yes" xml:space="preserve">
          <source>S &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt;(S)(S s);</source>
          <target state="translated">S &lt;strong id=&quot;encode&quot;&gt;编码&lt;/strong&gt;（S）（S s）;</target>
        </trans-unit>
        <trans-unit id="45bede8d40f4ea2b9d66eb19c9f1bb74d28dece7" translate="yes" xml:space="preserve">
          <source>S &lt;strong id=&quot;leftJustify&quot;&gt;leftJustify&lt;/strong&gt;(S)(S s, size_t width, dchar fillChar = ' ')</source>
          <target state="translated">S &lt;strong id=&quot;leftJustify&quot;&gt;左对齐&lt;/strong&gt;（S）（S s，size_t宽度，dchar fillChar =''）</target>
        </trans-unit>
        <trans-unit id="faacb70ba561f5eaab2d93d9e1ff8fec17106215" translate="yes" xml:space="preserve">
          <source>S &lt;strong id=&quot;readText&quot;&gt;readText&lt;/strong&gt;(S = string, R)(auto ref R name)</source>
          <target state="translated">S &lt;strong id=&quot;readText&quot;&gt;readText&lt;/strong&gt;（S =字符串，R）（自动引用R名称）</target>
        </trans-unit>
        <trans-unit id="e1f793c68a84ebeeb87f9b20a9fe015b979293d4" translate="yes" xml:space="preserve">
          <source>S &lt;strong id=&quot;readln&quot;&gt;readln&lt;/strong&gt;(S = string)(dchar terminator = '\x0a')</source>
          <target state="translated">S &lt;strong id=&quot;readln&quot;&gt;readln&lt;/strong&gt;（S =字符串）（dchar终止符='\ x0a'）</target>
        </trans-unit>
        <trans-unit id="684aa7427e974eb85fd33b4bb65ae99bcfd64843" translate="yes" xml:space="preserve">
          <source>S &lt;strong id=&quot;rightJustify&quot;&gt;rightJustify&lt;/strong&gt;(S)(S s, size_t width, dchar fillChar = ' ')</source>
          <target state="translated">S &lt;strong id=&quot;rightJustify&quot;&gt;rightJustify&lt;/strong&gt;（S）（S s，size_t width，dchar fillChar =''）</target>
        </trans-unit>
        <trans-unit id="0393059fed805e5ef642dd11255c12523350d4b3" translate="yes" xml:space="preserve">
          <source>S &lt;strong id=&quot;wrap&quot;&gt;wrap&lt;/strong&gt;(S)(S s, in size_t columns = 80, S firstindent = null, S indent = null, in size_t tabsize = 8)</source>
          <target state="translated">S &lt;strong id=&quot;wrap&quot;&gt;wrap&lt;/strong&gt;（S）（S s，在size_t列中= 80，S firstindent = null，S indent = null，在size_t中tabsize = 8）</target>
        </trans-unit>
        <trans-unit id="e917cf6ebf99c11da0b0aa44342f6a56c3838c33" translate="yes" xml:space="preserve">
          <source>S1 &lt;code&gt;r1&lt;/code&gt;</source>
          <target state="translated">S1 &lt;code&gt;r1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f5aa57d10094e07762a865607ca3aebaebcfaf1" translate="yes" xml:space="preserve">
          <source>S2 &lt;code&gt;r2&lt;/code&gt;</source>
          <target state="translated">S2 &lt;code&gt;r2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90f7dcbe0a7adc29f1b7883d9998068696ebe5c2" translate="yes" xml:space="preserve">
          <source>SDC (Stupid D Compiler) is the compiler</source>
          <target state="translated">SDC(Stupid D Compiler)是编译器。</target>
        </trans-unit>
        <trans-unit id="aaad61307e238135c76b878cf7f2b76b019102a4" translate="yes" xml:space="preserve">
          <source>SELECT ... FROM &amp;lt;rtree&amp;gt; WHERE &amp;lt;rtree col&amp;gt; MATCH zGeom(... params ...)</source>
          <target state="translated">选择...从&amp;lt;rtree&amp;gt;在哪里&amp;lt;rtree col&amp;gt;匹配zGeom（... params ...）</target>
        </trans-unit>
        <trans-unit id="9dea28f2424de76cbec5c0f706b39a3a24402ebb" translate="yes" xml:space="preserve">
          <source>SHA alias for SHA-1, hash is ubyte[20]</source>
          <target state="translated">SHA-1的别称,哈希值为ubyte[20]。</target>
        </trans-unit>
        <trans-unit id="f6ba60d6057db7ffbde7428d5efb7ca39d8e5a8d" translate="yes" xml:space="preserve">
          <source>SHA alias for SHA-224, hash is ubyte[28]</source>
          <target state="translated">SHA-224的别称,哈希值为ubyte[28]。</target>
        </trans-unit>
        <trans-unit id="ef412b0408f1131601bc1d081c71753f55a6f5f5" translate="yes" xml:space="preserve">
          <source>SHA alias for SHA-256, hash is ubyte[32]</source>
          <target state="translated">SHA-256的别称,哈希值为ubyte[32]。</target>
        </trans-unit>
        <trans-unit id="9e1c0999aff0e08d1cc34cb7c8be49144fdf7d19" translate="yes" xml:space="preserve">
          <source>SHA alias for SHA-384, hash is ubyte[48]</source>
          <target state="translated">SHA-384的别名,哈希值为ubyte[48]。</target>
        </trans-unit>
        <trans-unit id="be1e06763922a87658d0515fcb65953b951af771" translate="yes" xml:space="preserve">
          <source>SHA alias for SHA-512, hash is ubyte[64]</source>
          <target state="translated">SHA别名为SHA-512,哈希值为ubyte[64]。</target>
        </trans-unit>
        <trans-unit id="83d47a665aa11f19470eabbe4ad0c6a468a784c5" translate="yes" xml:space="preserve">
          <source>SHA alias for SHA-512/224, hash is ubyte[28]</source>
          <target state="translated">SHA-512/224的SHA别名,哈希值为ubyte[28]。</target>
        </trans-unit>
        <trans-unit id="edb9edf7cba4777e2af2817cdc003dc252ec2048" translate="yes" xml:space="preserve">
          <source>SHA alias for SHA-512/256, hash is ubyte[32]</source>
          <target state="translated">SHA的别名为SHA-512/256,哈希值为ubyte[32]。</target>
        </trans-unit>
        <trans-unit id="218e949ab000eedecd7f5be2181af475d7a28bf4" translate="yes" xml:space="preserve">
          <source>SHA initialization. Begins an SHA1/SHA2 operation.</source>
          <target state="translated">SHA初始化。开始SHA1/SHA2操作。</target>
        </trans-unit>
        <trans-unit id="377b0c5330ca180363130716108279f340ca8914" translate="yes" xml:space="preserve">
          <source>SHA2 comes in several different versions, all supported by this module: SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224 and SHA-512/256.</source>
          <target state="translated">SHA2有几个不同的版本,本模块都支持。SHA-224,SHA-256,SHA-384,SHA-512,SHA-512/224 和 SHA-512/256.</target>
        </trans-unit>
        <trans-unit id="6de691384f5963f51651150662473268acfe159d" translate="yes" xml:space="preserve">
          <source>SIMD</source>
          <target state="translated">SIMD</target>
        </trans-unit>
        <trans-unit id="8ae7a444746a4694c1f810fd55c72594ceaefb23" translate="yes" xml:space="preserve">
          <source>SIMD intrinsics</source>
          <target state="translated">SIMD本质</target>
        </trans-unit>
        <trans-unit id="585340cadbd70b05ddcce6b79f008a8cfde57213" translate="yes" xml:space="preserve">
          <source>SIMD vectors are formatted as arrays.</source>
          <target state="translated">SIMD向量被格式化为数组。</target>
        </trans-unit>
        <trans-unit id="988fdc325bf41ddaa8687b657a22220f9b0cf25e" translate="yes" xml:space="preserve">
          <source>SIZE_INVALID when the size cannot be determined</source>
          <target state="translated">SIZE_INVALID,当大小无法确定时。</target>
        </trans-unit>
        <trans-unit id="86abe807b4ad4886d4e603cb7e82f1ea78f0b47d" translate="yes" xml:space="preserve">
          <source>SList &lt;strong id=&quot;opBinary&quot;&gt;opBinary&lt;/strong&gt;(string op, Stuff)(Stuff rhs)</source>
          <target state="translated">SList &lt;strong id=&quot;opBinary&quot;&gt;opBinary&lt;/strong&gt;（字符串op，Stuff）（stuff rhs）</target>
        </trans-unit>
        <trans-unit id="787bca980009633361375ca85176c51bdd5eafe3" translate="yes" xml:space="preserve">
          <source>SList &lt;strong id=&quot;opBinaryRight&quot;&gt;opBinaryRight&lt;/strong&gt;(string op, Stuff)(Stuff lhs)</source>
          <target state="translated">SList &lt;strong id=&quot;opBinaryRight&quot;&gt;opBinaryRight&lt;/strong&gt;（字符串op，Stuff）（stuff lhs）</target>
        </trans-unit>
        <trans-unit id="96f382d010f0023803a2572f0d3691ad7e5ef724" translate="yes" xml:space="preserve">
          <source>SPNEGO auth</source>
          <target state="translated">SPNEGO auth</target>
        </trans-unit>
        <trans-unit id="5e9ce45942cc7e9d26f3a46fe1708d35956c0bbd" translate="yes" xml:space="preserve">
          <source>SParent &lt;strong id=&quot;parent&quot;&gt;parent&lt;/strong&gt;;</source>
          <target state="translated">SParent &lt;strong id=&quot;parent&quot;&gt;父&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="0a4d6cf316fc8dd03be409de229b75e6a4445a50" translate="yes" xml:space="preserve">
          <source>SQL Function Context Object</source>
          <target state="translated">SQL函数上下文对象</target>
        </trans-unit>
        <trans-unit id="c354013bd3ec56e8aa2a52a6efc8e220327d20d0" translate="yes" xml:space="preserve">
          <source>SQL Keyword Checking</source>
          <target state="translated">SQL关键字检查</target>
        </trans-unit>
        <trans-unit id="ba1a0225e63388b5a990690d4b4fb5821830e1d8" translate="yes" xml:space="preserve">
          <source>SQL Statement Object</source>
          <target state="translated">SQL语句对象</target>
        </trans-unit>
        <trans-unit id="d284e692561007ebb69fa47dc5417ac0d2e8670c" translate="yes" xml:space="preserve">
          <source>SQL Trace Hook</source>
          <target state="translated">SQL跟踪钩子</target>
        </trans-unit>
        <trans-unit id="2b61cfd89697cf1e4c1606af934cf897a3a7e3c3" translate="yes" xml:space="preserve">
          <source>SQLite Runtime Status</source>
          <target state="translated">SQLite运行时状态</target>
        </trans-unit>
        <trans-unit id="2e7ef778859b488d78ccefae8b84f6a54088b1fa" translate="yes" xml:space="preserve">
          <source>SRCFILENAME</source>
          <target state="translated">SRCFILENAME</target>
        </trans-unit>
        <trans-unit id="0460781581237ef65859a0682e556728b2150b0a" translate="yes" xml:space="preserve">
          <source>SRange &lt;code&gt;source&lt;/code&gt;</source>
          <target state="translated">范围 &lt;code&gt;source&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d69c2ff3c2f8e2e33ba27b1f75b0e8bda6f0441" translate="yes" xml:space="preserve">
          <source>SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2 and AVX are supported.</source>
          <target state="translated">支持SEZ、SSE2、SSE3、SSE4.1、SSE4.2和AVX。</target>
        </trans-unit>
        <trans-unit id="9c2137290ddc17e1bf47aba75e1fa887c3bb0d0b" translate="yes" xml:space="preserve">
          <source>SSL for all communication or fail</source>
          <target state="translated">所有通信的SSL,否则失败</target>
        </trans-unit>
        <trans-unit id="94c18953250ee18df93c40e56974f7303e0e4b86" translate="yes" xml:space="preserve">
          <source>SSL for the control connection or fail</source>
          <target state="translated">用于控制连接的SSL或失败</target>
        </trans-unit>
        <trans-unit id="34a8103eb62af3cb2a59c7412e2ef9c7225d5a2f" translate="yes" xml:space="preserve">
          <source>SSL options are present</source>
          <target state="translated">有SSL选项</target>
        </trans-unit>
        <trans-unit id="3d903d50621cb00ff243d594748c29302fa3665e" translate="yes" xml:space="preserve">
          <source>SSPI is supported</source>
          <target state="translated">支持SSPI</target>
        </trans-unit>
        <trans-unit id="bec5a021426205f4bcb6e907edee1eeb124b5cad" translate="yes" xml:space="preserve">
          <source>ST1 real part ST0 imaginary part</source>
          <target state="translated">ST1实部 ST0虚部</target>
        </trans-unit>
        <trans-unit id="7196e7c29d205cf35657781e59674fc592b0e1d5" translate="yes" xml:space="preserve">
          <source>START</source>
          <target state="translated">START</target>
        </trans-unit>
        <trans-unit id="ead9d31f2913387ea670737a1d22aa3db8997291" translate="yes" xml:space="preserve">
          <source>STL's &lt;code&gt;adjacent_find&lt;/code&gt;</source>
          <target state="translated">STL的 &lt;code&gt;adjacent_find&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d433c1de58ad88f4a0ab9475db3fbc3a187c129" translate="yes" xml:space="preserve">
          <source>STL's &lt;code&gt;rotate&lt;/code&gt;</source>
          <target state="translated">STL的 &lt;code&gt;rotate&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c52da2e75828833f502383caea12087d8488f445" translate="yes" xml:space="preserve">
          <source>STRICT</source>
          <target state="translated">STRICT</target>
        </trans-unit>
        <trans-unit id="f8704c48de99f629f97125ecc53909c6abff4468" translate="yes" xml:space="preserve">
          <source>STerm</source>
          <target state="translated">STerm</target>
        </trans-unit>
        <trans-unit id="ed77febc58c1f597f3bbfc31c0982965457b2d93" translate="yes" xml:space="preserve">
          <source>SYSTEMTIME* &lt;code&gt;st&lt;/code&gt;</source>
          <target state="translated">SYSTEMTIME * &lt;code&gt;st&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b60f7266895adacdf4bfc664cfeee4d1a844556" translate="yes" xml:space="preserve">
          <source>S[] &lt;code&gt;lines&lt;/code&gt;</source>
          <target state="translated">S [] &lt;code&gt;lines&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d3f35d2d44b26e7ed2fcf89c8e36d5bd36488aae" translate="yes" xml:space="preserve">
          <source>S[] &lt;code&gt;patterns&lt;/code&gt;</source>
          <target state="translated">S [] &lt;code&gt;patterns&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cba907670e663432d7647ede5695a243fd25e987" translate="yes" xml:space="preserve">
          <source>Safe Aliasing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0bf6a312a9f40f412a6beb9121f50c2ef0d6ef" translate="yes" xml:space="preserve">
          <source>Safe External Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4a129672b620efc79c9478b37bd02b09f23063" translate="yes" xml:space="preserve">
          <source>Safe Functions</source>
          <target state="translated">安全功能</target>
        </trans-unit>
        <trans-unit id="fe9c5a1edff00d7447ccc334c14287fb6479ec8f" translate="yes" xml:space="preserve">
          <source>Safe Interfaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9faf57fc4ed8683e442e06aa290692f2e3a512c4" translate="yes" xml:space="preserve">
          <source>Safe Values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c922825bf9f43cf96017af296ca65b80d35299b0" translate="yes" xml:space="preserve">
          <source>Safe functions</source>
          <target state="translated">安全功能</target>
        </trans-unit>
        <trans-unit id="eb258855cc717eb39d618134eb80322fd4721cb0" translate="yes" xml:space="preserve">
          <source>Safe functions are covariant with trusted or system functions.</source>
          <target state="translated">安全函数与可信函数或系统函数是相通的。</target>
        </trans-unit>
        <trans-unit id="af004793aec7230c86f503125f1c07aba86a96df" translate="yes" xml:space="preserve">
          <source>Safe functions are marked with the &lt;code&gt;@safe&lt;/code&gt; attribute.</source>
          <target state="translated">安全功能带有 &lt;code&gt;@safe&lt;/code&gt; 属性标记。</target>
        </trans-unit>
        <trans-unit id="eb9bc845265935cb5c82599a60cf8ab82cb89c2d" translate="yes" xml:space="preserve">
          <source>Safe functions have &lt;a href=&quot;#safe-interfaces&quot;&gt;safe interfaces&lt;/a&gt;. An implementation must enforce this by restricting the function's body to operations that are known safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5666ba4ff9ee05db0c478f56571ac6677e83dab" translate="yes" xml:space="preserve">
          <source>Samaritan</source>
          <target state="translated">Samaritan</target>
        </trans-unit>
        <trans-unit id="99bd6516e5bd61924dcf1c10ab4f7049ad6403d4" translate="yes" xml:space="preserve">
          <source>Same as !(x.empty), provided for its convenience in conditional statements.</source>
          <target state="translated">和 !(x.empty)一样,是为了方便条件语句的使用。</target>
        </trans-unit>
        <trans-unit id="727481a8b962fc466248dedb31261f069b953503" translate="yes" xml:space="preserve">
          <source>Same as .front, provided for compatibility with original std.regex.</source>
          <target state="translated">与.front相同,是为了与原std.regex兼容。</target>
        </trans-unit>
        <trans-unit id="fd3ad512eab2f944941edd64a482d503631baaf1" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#moveSome&quot;&gt;&lt;code&gt;moveSome&lt;/code&gt;&lt;/a&gt; but assumes all elements in &lt;code&gt;tgt&lt;/code&gt; are uninitialized. Uses &lt;a href=&quot;#moveEmplace&quot;&gt;&lt;code&gt;moveEmplace&lt;/code&gt;&lt;/a&gt; to move elements from &lt;code&gt;src&lt;/code&gt; over elements from &lt;code&gt;tgt&lt;/code&gt;.</source>
          <target state="translated">与&lt;a href=&quot;#moveSome&quot;&gt; &lt;code&gt;moveSome&lt;/code&gt; &lt;/a&gt;相同，但假定 &lt;code&gt;tgt&lt;/code&gt; 中的所有元素都未初始化。使用&lt;a href=&quot;#moveEmplace&quot;&gt; &lt;code&gt;moveEmplace&lt;/code&gt; &lt;/a&gt;将 &lt;code&gt;src&lt;/code&gt; 中的元素移到 &lt;code&gt;tgt&lt;/code&gt; 中的元素上。</target>
        </trans-unit>
        <trans-unit id="78d4c9aecdc6038f22eef6a6ff18f5537f1170ac" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;c.insert(v)&lt;/code&gt; but relaxes complexity to linear.</source>
          <target state="translated">与 &lt;code&gt;c.insert(v)&lt;/code&gt; 相同，但将复杂度放宽为线性。</target>
        </trans-unit>
        <trans-unit id="75a9773be000b0028e154f6bb028458e9b68ee7d" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;c.insert(x)&lt;/code&gt;, but is guaranteed to not invalidate any ranges.</source>
          <target state="translated">与 &lt;code&gt;c.insert(x)&lt;/code&gt; 相同，但保证不会使任何范围无效。</target>
        </trans-unit>
        <trans-unit id="3cbb07b2f250984e910a19b183cea054456f94d7" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;c.insertBack(v)&lt;/code&gt;, but guarantees no ranges will be invalidated.</source>
          <target state="translated">与 &lt;code&gt;c.insertBack(v)&lt;/code&gt; 相同，但保证没有范围会无效。</target>
        </trans-unit>
        <trans-unit id="b7b832c907a3c8e2c88fd08867c961e0660e4dc4" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;c.insertFront(v)&lt;/code&gt;, but guarantees no ranges will be invalidated.</source>
          <target state="translated">与 &lt;code&gt;c.insertFront(v)&lt;/code&gt; 相同，但保证没有范围会无效。</target>
        </trans-unit>
        <trans-unit id="c4511bbf2dc51a3f2a6ed286e36440cb10f6b4fa" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;c.linearRemove(r)&lt;/code&gt;, but guarantees iterators are not invalidated.</source>
          <target state="translated">与 &lt;code&gt;c.linearRemove(r)&lt;/code&gt; 相同，但保证迭代器不会无效。</target>
        </trans-unit>
        <trans-unit id="33a4e65e5aca4c9b1c52f16398b17a822156c321" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;c.remove(r)&lt;/code&gt;, but guarantees iterators are not invalidated.</source>
          <target state="translated">与 &lt;code&gt;c.remove(r)&lt;/code&gt; 相同，但保证迭代器不会无效。</target>
        </trans-unit>
        <trans-unit id="b75d756c31c9feaab2cdaef81d897d243a886269" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;c.removeAny()&lt;/code&gt;, but is guaranteed to not invalidate any iterators.</source>
          <target state="translated">与 &lt;code&gt;c.removeAny()&lt;/code&gt; 相同，但保证不会使任何迭代器无效。</target>
        </trans-unit>
        <trans-unit id="4df85d259bba8c69823d7406dfe7ba0f09b5800f" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;c.removeBack()&lt;/code&gt;, but guarantees no ranges will be invalidated.</source>
          <target state="translated">与 &lt;code&gt;c.removeBack()&lt;/code&gt; 相同，但保证不会有任何范围无效。</target>
        </trans-unit>
        <trans-unit id="3948eac36809d043a27f12e3ecdcee465617ea58" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;c.removeFront()&lt;/code&gt;, but guarantees no ranges will be invalidated.</source>
          <target state="translated">与 &lt;code&gt;c.removeFront()&lt;/code&gt; 相同，但保证没有范围会无效。</target>
        </trans-unit>
        <trans-unit id="dd0144d3023f6044dfa1ded65b6882f70a32dd7e" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;c.stableInsert(v)&lt;/code&gt; but relaxes complexity to linear.</source>
          <target state="translated">与 &lt;code&gt;c.stableInsert(v)&lt;/code&gt; 相同，但将复杂度降低为线性。</target>
        </trans-unit>
        <trans-unit id="3ab6de85a2865e49e64d621a96ffa42c153da266" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;deprecation&lt;/code&gt;, but takes a va_list parameter, and optionally additional message prefixes.</source>
          <target state="translated">与 &lt;code&gt;deprecation&lt;/code&gt; 相同，但带有va_list参数以及可选的其他消息前缀。</target>
        </trans-unit>
        <trans-unit id="a19728bd700823f3dce9f62e0e300f7b45545b66" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;deprecationSupplemental&lt;/code&gt;, but takes a va_list parameter.</source>
          <target state="translated">与 &lt;code&gt;deprecationSupplemental&lt;/code&gt; 相同，但使用va_list参数。</target>
        </trans-unit>
        <trans-unit id="297b5301668c075c062dde99e98da1f1b3af4f6b" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;error&lt;/code&gt;, but takes a va_list parameter, and optionally additional message prefixes.</source>
          <target state="translated">与 &lt;code&gt;error&lt;/code&gt; 相同，但带有va_list参数以及可选的其他消息前缀。</target>
        </trans-unit>
        <trans-unit id="37b532d31065c6d359d467676f9d969d2815ef54" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;errorSupplemental&lt;/code&gt;, but takes a va_list parameter.</source>
          <target state="translated">与 &lt;code&gt;errorSupplemental&lt;/code&gt; 相同，但使用va_list参数。</target>
        </trans-unit>
        <trans-unit id="f384e1f2863a2aeebc9dd8f5c5d2184416ff5cbc" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;fold&lt;/code&gt;, but specialized for accurate summation.</source>
          <target state="translated">与 &lt;code&gt;fold&lt;/code&gt; 相同，但专门用于精确求和。</target>
        </trans-unit>
        <trans-unit id="032c9e0e823b8183cf4d02cceba81d25aad65725" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;message&lt;/code&gt;, but takes a va_list parameter.</source>
          <target state="translated">与 &lt;code&gt;message&lt;/code&gt; 相同，但带有va_list参数。</target>
        </trans-unit>
        <trans-unit id="71490da7d6c15740278024bfb9cca42797f20b8b" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;receive&lt;/code&gt; except that rather than wait forever for a message, it waits until either it receives a message or the given &lt;a href=&quot;core_time#Duration&quot;&gt;&lt;code&gt;core.time.Duration&lt;/code&gt;&lt;/a&gt; has passed. It returns &lt;code&gt;true&lt;/code&gt; if it received a message and &lt;code&gt;false&lt;/code&gt; if it timed out waiting for one.</source>
          <target state="translated">与 &lt;code&gt;receive&lt;/code&gt; 相同，不同之处在于它不是一直等待消息，而是等待直到接收到消息或给定的&lt;a href=&quot;core_time#Duration&quot;&gt; &lt;code&gt;core.time.Duration&lt;/code&gt; &lt;/a&gt;已经过去。如果收到一条消息，则返回 &lt;code&gt;true&lt;/code&gt; ;如果等待一条消息，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7a3019ce60733d0ce7b4dc634b679a1d4891785" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;tip&lt;/code&gt;, but takes a va_list parameter.</source>
          <target state="translated">与 &lt;code&gt;tip&lt;/code&gt; 相同，但使用va_list参数。</target>
        </trans-unit>
        <trans-unit id="e5c4fbf85f3beb6de49795fef02185002ad63624" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;warning&lt;/code&gt;, but takes a va_list parameter.</source>
          <target state="translated">与 &lt;code&gt;warning&lt;/code&gt; 相同，但使用va_list参数。</target>
        </trans-unit>
        <trans-unit id="4c48b5bda54b35c0efd762ae2341da89fa913ce1" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;warningSupplemental&lt;/code&gt;, but takes a va_list parameter.</source>
          <target state="translated">与 &lt;code&gt;warningSupplemental&lt;/code&gt; 相同，但使用va_list参数。</target>
        </trans-unit>
        <trans-unit id="751f77d7da736194060538a83757f294ac637c7b" translate="yes" xml:space="preserve">
          <source>Same as ==, except that positive and negative zero are not identical, and two NANs are identical if they have the same 'payload'.</source>
          <target state="translated">和==一样,只是正零和负零不一样,如果两个NAN的 &quot;有效载荷 &quot;相同,则是相同的。</target>
        </trans-unit>
        <trans-unit id="6d61bd76cf8c63963304e90e422617e5e5227083" translate="yes" xml:space="preserve">
          <source>Same as Dsymbol::oneMember(), but look at an array of Dsymbols.</source>
          <target state="translated">和Dsymbol::oneMember()一样,但看的是一个Dsymbols数组。</target>
        </trans-unit>
        <trans-unit id="3f83382eba02336641c8e8bb79a1282343a63f02" translate="yes" xml:space="preserve">
          <source>Same as TIMEOUT and CONNECTTIMEOUT, but with ms resolution</source>
          <target state="translated">与TIMEOUT和CONNECTTIMEOUT相同,但分辨率为毫秒。</target>
        </trans-unit>
        <trans-unit id="ffb011bf8703e4764378cf5a0a0bf448f82d9b15" translate="yes" xml:space="preserve">
          <source>Same as above but also checks for protected symbols visible from scope &lt;code&gt;sc&lt;/code&gt;. Used for qualified name lookup.</source>
          <target state="translated">与上述相同，但还会检查范围 &lt;code&gt;sc&lt;/code&gt; 可见的受保护符号。用于合格的名称查找。</target>
        </trans-unit>
        <trans-unit id="8efe3f62051383a075e76337100acf0e39cbebb0" translate="yes" xml:space="preserve">
          <source>Same as above, but allows Loc() literals to be passed.</source>
          <target state="translated">同上,但允许传递Loc()字元。</target>
        </trans-unit>
        <trans-unit id="e9308ddbd8fba34c5d92529f2a71ce3a97c679fc" translate="yes" xml:space="preserve">
          <source>Same as above, but determines the lookup module from symbols &lt;code&gt;origin&lt;/code&gt;.</source>
          <target state="translated">与上面相同，但是根据符号 &lt;code&gt;origin&lt;/code&gt; 确定查找模块。</target>
        </trans-unit>
        <trans-unit id="755f3e16e6c0eccc99c51dc60992931000e6c820" translate="yes" xml:space="preserve">
          <source>Same as above, but doesn't take a location argument.</source>
          <target state="translated">和上面一样,但不需要位置参数。</target>
        </trans-unit>
        <trans-unit id="8a5d84d8c80211114b7047ff1d9ff284dbeb9850" translate="yes" xml:space="preserve">
          <source>Same as above, but takes a filename and line information arguments as separate parameters.</source>
          <target state="translated">同上,但将文件名和行信息作为单独的参数。</target>
        </trans-unit>
        <trans-unit id="4148bec1f4d9c3025435fe1637b31f691f714c80" translate="yes" xml:space="preserve">
          <source>Same as above, but takes a separate mutex instead of sharing one among all initOnce instances.</source>
          <target state="translated">和上面一样,但需要一个单独的mutex,而不是在所有initOnce实例之间共享一个。</target>
        </trans-unit>
        <trans-unit id="6ef3b765e0b83339c93f08100b26d393bcd759f2" translate="yes" xml:space="preserve">
          <source>Same as above, for item with non-zero initializer.</source>
          <target state="translated">同上,对于初始值为非零的项目。</target>
        </trans-unit>
        <trans-unit id="5dedd4e173847bb02bce0989d35ee088225c2966" translate="yes" xml:space="preserve">
          <source>Same as above, zero initializes the item.</source>
          <target state="translated">同上,0初始化项目。</target>
        </trans-unit>
        <trans-unit id="d718b33c18604b3f2825d9a34893682fd36cbcb8" translate="yes" xml:space="preserve">
          <source>Same as aggregates and functions, variable declarations with &lt;a href=&quot;declaration#Initializer&quot;&gt;&lt;i&gt;Initializer&lt;/i&gt;&lt;/a&gt; can have optional template parameters:</source>
          <target state="translated">与聚合和函数相同，带有&lt;a href=&quot;declaration#Initializer&quot;&gt;&lt;i&gt;Initializer的&lt;/i&gt;&lt;/a&gt;变量声明可以具有可选的模板参数：</target>
        </trans-unit>
        <trans-unit id="df42bab69a32a505468aa4d21852e1296728537a" translate="yes" xml:space="preserve">
          <source>Same as getFieldIndex, but checks for a direct match with the VarDeclaration</source>
          <target state="translated">与getFieldIndex相同,但检查是否与VarDeclaration直接匹配。</target>
        </trans-unit>
        <trans-unit id="87a0a5b05ee89501954d4b629bf09767caba736f" translate="yes" xml:space="preserve">
          <source>Same as previous, but addr is an IPv4 address string in the dotted-decimal form</source>
          <target state="translated">和之前的一样,但是addr是一个IPv4地址字符串,形式为点-十进制。</target>
        </trans-unit>
        <trans-unit id="d9bfe9476663fc816dde2351073538df50c0def9" translate="yes" xml:space="preserve">
          <source>Same as the overload, but allows for the results to be stored in a user- provided buffer. The buffer must be of the same length as range, must be a random-access range, must have slicing, and must contain elements that are complex-like. This means that they must have a .re and a .im member or property that can be both read and written and are floating point numbers.</source>
          <target state="translated">与重载相同,但允许将结果存储在用户提供的缓冲区中,缓冲区的长度必须与range相同,必须是随机访问的范围,必须具有分片功能,并且必须包含类似复杂的元素。缓冲区的长度必须与range相同,必须是随机访问的范围,必须具有分片功能,并且必须包含类似复数的元素。这意味着它们必须有一个.re和一个.im成员或属性,这些成员或属性既可以读也可以写,并且是浮点数。</target>
        </trans-unit>
        <trans-unit id="490fc4a66e27c7b7fee23222da4c9d9a1088faff" translate="yes" xml:space="preserve">
          <source>Same features as &lt;code&gt;FreeList&lt;/code&gt;, but packaged as a &lt;code&gt;shared&lt;/code&gt; structure that is accessible to several threads.</source>
          <target state="translated">与 &lt;code&gt;FreeList&lt;/code&gt; 相同，但打包为一个 &lt;code&gt;shared&lt;/code&gt; 结构，可供多个线程访问。</target>
        </trans-unit>
        <trans-unit id="33e1356035ce5d0eb2ee979799006e6fb53631bb" translate="yes" xml:space="preserve">
          <source>Sample Assembly</source>
          <target state="translated">样品组装</target>
        </trans-unit>
        <trans-unit id="a55a0fc647ab82f0d156dbe48832b224670188d1" translate="yes" xml:space="preserve">
          <source>Sanitizes a string by replacing malformed code unit sequences with valid code unit sequences. The result is guaranteed to be valid for this encoding.</source>
          <target state="translated">通过用有效的代码单元序列替换畸形的代码单元序列来净化字符串。保证结果对该编码有效。</target>
        </trans-unit>
        <trans-unit id="588fb4501b6744b77a958bd12f00e2d300ddbedb" translate="yes" xml:space="preserve">
          <source>Sanitizes an array by replacing malformed ubyte sequences with valid ubyte sequences. The result is guaranteed to be valid for this encoding scheme.</source>
          <target state="translated">用有效的ubyte序列替换畸形的ubyte序列,从而对数组进行消毒。保证结果对这个编码方案是有效的。</target>
        </trans-unit>
        <trans-unit id="640306121d4405dbfeb73bb587411093702f90f8" translate="yes" xml:space="preserve">
          <source>Saturation is not sticky; if a value reaches its saturation value, another operation may take it back to normal range.</source>
          <target state="translated">饱和度不是粘性的,如果一个值达到了它的饱和值,另一个操作可能会使它回到正常范围。</target>
        </trans-unit>
        <trans-unit id="c04544993d1d8f789981802f89231df026eb2cfc" translate="yes" xml:space="preserve">
          <source>Saurashtra</source>
          <target state="translated">Saurashtra</target>
        </trans-unit>
        <trans-unit id="a6cf92931d2174dd1c0e30bb678dd9a1781b9fac" translate="yes" xml:space="preserve">
          <source>Save the current iteration state of the range.</source>
          <target state="translated">保存当前范围内的迭代状态。</target>
        </trans-unit>
        <trans-unit id="0b2b51abae62959c4f172203815c976a3e0e3c7d" translate="yes" xml:space="preserve">
          <source>Save the environment variable &lt;code&gt;name&lt;/code&gt; if not saved already.</source>
          <target state="translated">如果尚未保存，请保存环境变量 &lt;code&gt;name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="109607031a9b2768a10f71f63027aa34e30b8964" translate="yes" xml:space="preserve">
          <source>Saves the current iteration state.</source>
          <target state="translated">保存当前的迭代状态。</target>
        </trans-unit>
        <trans-unit id="6367ce3e46fb723629c15b19a2aa7445e9b5134f" translate="yes" xml:space="preserve">
          <source>Saving a range is not duplicating it; in the example above, &lt;code&gt;r1&lt;/code&gt; and &lt;code&gt;r2&lt;/code&gt; still refer to the same underlying data. They just navigate that data independently.</source>
          <target state="translated">保存范围不会重复它；在上面的示例中， &lt;code&gt;r1&lt;/code&gt; 和 &lt;code&gt;r2&lt;/code&gt; 仍引用相同的基础数据。他们只是独立浏览数据。</target>
        </trans-unit>
        <trans-unit id="0cc8cc783b9bed9065864d3ac7dc001f239a0ecd" translate="yes" xml:space="preserve">
          <source>Saving the &lt;code&gt;IAllocator&lt;/code&gt; Reference For Later Use</source>
          <target state="translated">保存 &lt;code&gt;IAllocator&lt;/code&gt; 参考以备后用</target>
        </trans-unit>
        <trans-unit id="9552773249da4fe207e8bf1ff0fb9fd855f56a8c" translate="yes" xml:space="preserve">
          <source>Sc</source>
          <target state="translated">Sc</target>
        </trans-unit>
        <trans-unit id="16d7763f80d8f9d31be0bdc44b2bb5a243164311" translate="yes" xml:space="preserve">
          <source>Scalar expression sub-trees of &lt;code&gt;e&lt;/code&gt; are evaluated before calling into druntime to hoist them out of the loop. This is a valid evaluation order as the actual array operations have no side-effect.</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; 的标量表达子树在调用druntime之前将进行求值，以使它们脱离循环。这是一个有效的评估顺序，因为实际的数组操作没有副作用。</target>
        </trans-unit>
        <trans-unit id="b22d31e72e19c5dabc897823cb6fdb3fd44f49eb" translate="yes" xml:space="preserve">
          <source>Scale addition/subtraction to/from pointer.</source>
          <target state="translated">对指针进行加/减法运算。</target>
        </trans-unit>
        <trans-unit id="c6b7e412b3d18473712a0b7f4a6d02a01db4204b" translate="yes" xml:space="preserve">
          <source>Scan forward to one of: start of identifier beginning of next line end of buf</source>
          <target state="translated">向前扫描至以下其中之一:标识符开始,下一行开始,buf结束。</target>
        </trans-unit>
        <trans-unit id="a8bac0de981f93a8ab291e2720acf8b97063ff17" translate="yes" xml:space="preserve">
          <source>Scan function implementations in Module m looking for functions that can be inlined, and inline them in situ.</source>
          <target state="translated">扫描模块m中的函数实现,寻找可以内联的函数,并就地内联。</target>
        </trans-unit>
        <trans-unit id="4ddbc9228342b01ba225e91715e7b177ad4b7a3a" translate="yes" xml:space="preserve">
          <source>ScanAllThreadsFn &lt;code&gt;scan&lt;/code&gt;</source>
          <target state="translated">ScanAllThreadsFn &lt;code&gt;scan&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="264479eda458a0b0320ed850cc6eaac5667ad0b3" translate="yes" xml:space="preserve">
          <source>ScanAllThreadsTypeFn &lt;code&gt;scan&lt;/code&gt;</source>
          <target state="translated">ScanAllThreadsT​​ypeFn &lt;code&gt;scan&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7faa1d62cca1d532292ea70ecc03becc2e5fdc9a" translate="yes" xml:space="preserve">
          <source>Scanning all &amp;lsquo;root&amp;rsquo; memory ranges for pointers into GC allocated memory.</source>
          <target state="translated">扫描所有&amp;ldquo;根&amp;rdquo;内存范围，以查找进入GC分配内存的指针。</target>
        </trans-unit>
        <trans-unit id="3dd5be73b688b9a1c111e4512ec7b5b9a208c35d" translate="yes" xml:space="preserve">
          <source>Scans the bits in v from the most significant bit to the least significant bit, looking for the first set bit.</source>
          <target state="translated">扫描v中的位,从最重要的位到最不重要的位,寻找第一个设置位。</target>
        </trans-unit>
        <trans-unit id="fab7bc0eb467c6a0a3f3550b4413fe32726a2d8f" translate="yes" xml:space="preserve">
          <source>Scans the bits in v starting with bit 0, looking for the first set bit.</source>
          <target state="translated">从位0开始扫描v中的位,寻找第一个设置位。</target>
        </trans-unit>
        <trans-unit id="569aae5b47e464b83049959de67717fbf2ff4407" translate="yes" xml:space="preserve">
          <source>Scenario</source>
          <target state="translated">Scenario</target>
        </trans-unit>
        <trans-unit id="c8d0fd7d6c36cdbcb6f334d0410d40ef7a6c465c" translate="yes" xml:space="preserve">
          <source>Scheduled for deprecation. Please use &lt;code&gt;dataCaches&lt;/code&gt; instead.</source>
          <target state="translated">计划弃用。请使用 &lt;code&gt;dataCaches&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e489cc0f7231aff9d2f32dae249c97a424d884b" translate="yes" xml:space="preserve">
          <source>Scheduler &lt;strong id=&quot;scheduler&quot;&gt;scheduler&lt;/strong&gt;;</source>
          <target state="translated">计划程序&lt;strong id=&quot;scheduler&quot;&gt;计划程序&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4057abdd4ada17d51ad3de8bfe7399eb8ec6b4b9" translate="yes" xml:space="preserve">
          <source>Scope &lt;code&gt;sc&lt;/code&gt;</source>
          <target state="translated">范围 &lt;code&gt;sc&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="feeeb5ea742e01f78e79d82899cf5470dd9ceda4" translate="yes" xml:space="preserve">
          <source>Scope Block Statements</source>
          <target state="translated">范围块声明</target>
        </trans-unit>
        <trans-unit id="efddbb9da8296c76dccb4126bfe638c8368ab8e1" translate="yes" xml:space="preserve">
          <source>Scope Classes</source>
          <target state="translated">范围类</target>
        </trans-unit>
        <trans-unit id="ff37f38826365912c58038af9027c9b58c85cbb3" translate="yes" xml:space="preserve">
          <source>Scope Guard Statement</source>
          <target state="translated">范围保护声明</target>
        </trans-unit>
        <trans-unit id="bc56e8088b13525d0a4a3b4b47c7ab89044a4be8" translate="yes" xml:space="preserve">
          <source>Scope Parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7bff657e6b17b6bdf5df55e7c5e8449a231f32" translate="yes" xml:space="preserve">
          <source>Scope Statements</source>
          <target state="translated">范围说明</target>
        </trans-unit>
        <trans-unit id="bbea6fb6b090070290dd113beb8a61b82be2ca72" translate="yes" xml:space="preserve">
          <source>Scope Table</source>
          <target state="translated">范围表</target>
        </trans-unit>
        <trans-unit id="9eb6a47f1c65e6eab0b311403716abb5d2986340" translate="yes" xml:space="preserve">
          <source>Scope and Return Parameters</source>
          <target state="translated">范围和返回参数</target>
        </trans-unit>
        <trans-unit id="93c85a0c24e024cf624c6cd55b5bf042d8a27202" translate="yes" xml:space="preserve">
          <source>Scope in which the call occurs</source>
          <target state="translated">呼叫发生的范围</target>
        </trans-unit>
        <trans-unit id="18f1215f452aa02e3d371abc03ee7220bd6faee8" translate="yes" xml:space="preserve">
          <source>Scope which triggered the generation of the C main, used to get the module where the D main is.</source>
          <target state="translated">触发C主的生成的范围,用于获取D主所在的模块。</target>
        </trans-unit>
        <trans-unit id="530a514d37623d594f817863dd9345f32171dbc7" translate="yes" xml:space="preserve">
          <source>Scope* &lt;code&gt;sc&lt;/code&gt;</source>
          <target state="translated">范围* &lt;code&gt;sc&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c18627f4598d0f0fadc7bafaad6d84963b0115f7" translate="yes" xml:space="preserve">
          <source>Scope* &lt;strong id=&quot;newScope&quot;&gt;newScope&lt;/strong&gt;(Scope* sc);</source>
          <target state="translated">范围* &lt;strong id=&quot;newScope&quot;&gt;newScope&lt;/strong&gt;（范围* sc）；</target>
        </trans-unit>
        <trans-unit id="a72527b2f4d99350413c59a6d59f72142044189a" translate="yes" xml:space="preserve">
          <source>Scope* &lt;strong id=&quot;scopeForTemplateParameters&quot;&gt;scopeForTemplateParameters&lt;/strong&gt;(TemplateInstance ti, Scope* sc);</source>
          <target state="translated">范围* &lt;strong id=&quot;scopeForTemplateParameters&quot;&gt;scopeForTemplateParameters&lt;/strong&gt;（TemplateInstance ti，Scope * sc）;</target>
        </trans-unit>
        <trans-unit id="2079a397ee6263a2f96e01550925b0a932f092ec" translate="yes" xml:space="preserve">
          <source>ScopeDsymbol &lt;strong id=&quot;forward&quot;&gt;forward&lt;/strong&gt;;</source>
          <target state="translated">ScopeDsymbol &lt;strong id=&quot;forward&quot;&gt;向前&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4169d5fa8946da60036063bbb0f697953c5d62d1" translate="yes" xml:space="preserve">
          <source>ScopeDsymbol &lt;strong id=&quot;scopesym&quot;&gt;scopesym&lt;/strong&gt;;</source>
          <target state="translated">ScopeDsymbol &lt;strong id=&quot;scopesym&quot;&gt;scopesym&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1b3f28294e22c837eef3daf20e8c0c69bfbe6033" translate="yes" xml:space="preserve">
          <source>ScopeGuardStatement</source>
          <target state="translated">ScopeGuardStatement</target>
        </trans-unit>
        <trans-unit id="e229afc1cfbd552b13db67a7a57ecb7a9e1eaf4f" translate="yes" xml:space="preserve">
          <source>ScopeStatement</source>
          <target state="translated">ScopeStatement</target>
        </trans-unit>
        <trans-unit id="30d85dc75fd3ccdc187797c4e4326534883fa5d7" translate="yes" xml:space="preserve">
          <source>Scoped Imports</source>
          <target state="translated">范围内的进口</target>
        </trans-unit>
        <trans-unit id="eb4353978bb23faf444b47d21dc8ed624e11238c" translate="yes" xml:space="preserve">
          <source>Scoped class instances can be embedded in a parent &lt;code&gt;class&lt;/code&gt; or &lt;code&gt;struct&lt;/code&gt;, just like a child struct instance. Scoped member variables must have type &lt;code&gt;typeof(scoped!Class(args))&lt;/code&gt;, and be initialized with a call to scoped. See below for an example.</source>
          <target state="translated">作用域类实例可以嵌入到父 &lt;code&gt;class&lt;/code&gt; 或 &lt;code&gt;struct&lt;/code&gt; 中，就像子struct实例一样。范围成员变量必须具有 &lt;code&gt;typeof(scoped!Class(args))&lt;/code&gt; 类型，并使用对scoped的调用进行初始化。请参阅下面的示例。</target>
        </trans-unit>
        <trans-unit id="5070c3b950a719e474a1f4d51b687331b1a946ab" translate="yes" xml:space="preserve">
          <source>Sean Kelly</source>
          <target state="translated">Sean Kelly</target>
        </trans-unit>
        <trans-unit id="112db5f7c7defff70dd52c960e759d2d7d3cef37" translate="yes" xml:space="preserve">
          <source>Sean Kelly and &lt;a href=&quot;http://jmdavisprog.com&quot;&gt;Jonathan M Davis&lt;/a&gt;</source>
          <target state="translated">肖恩&amp;middot;凯利和&lt;a href=&quot;http://jmdavisprog.com&quot;&gt;乔纳森&amp;middot;M&amp;middot;戴维斯&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="03df2b6aaf7455322223689bbd7461f8d6f32167" translate="yes" xml:space="preserve">
          <source>Sean Kelly, Alex R&amp;oslash;nne Petersen</source>
          <target state="translated">肖恩&amp;middot;凯利，亚历克斯&amp;middot;罗恩&amp;middot;彼得森</target>
        </trans-unit>
        <trans-unit id="3d1f410b20137253a90aa187e04a5819bc443cbe" translate="yes" xml:space="preserve">
          <source>Sean Kelly, Alex R&amp;oslash;nne Petersen, Manu Evans</source>
          <target state="translated">肖恩&amp;middot;凯利，亚历克斯&amp;middot;罗恩&amp;middot;彼得森，马努&amp;middot;埃文斯</target>
        </trans-unit>
        <trans-unit id="67e666191ebe7fef8960d4e0a33c23b48d0af3c6" translate="yes" xml:space="preserve">
          <source>Sean Kelly, Alex R&amp;oslash;nne Petersen, Martin Nowak</source>
          <target state="translated">肖恩&amp;middot;凯利，亚历克斯&amp;middot;罗恩&amp;middot;彼得森，马丁&amp;middot;诺瓦克</target>
        </trans-unit>
        <trans-unit id="b0e67e3650a9a7ee96fc07c10b9f845794beae3f" translate="yes" xml:space="preserve">
          <source>Sean Kelly, Walter Bright, Alex R&amp;oslash;nne Petersen, Martin Nowak</source>
          <target state="translated">肖恩&amp;middot;凯利，沃尔特&amp;middot;布赖特，亚历克斯&amp;middot;罗恩&amp;middot;彼得森，马丁&amp;middot;诺瓦克</target>
        </trans-unit>
        <trans-unit id="5b9d8e641c6ac9a092d9254127af696506298508" translate="yes" xml:space="preserve">
          <source>Search Path for file in a safe manner.</source>
          <target state="translated">以安全的方式搜索文件的路径。</target>
        </trans-unit>
        <trans-unit id="c54b4aeec03de5bf3ac5445a6032756655918bbe" translate="yes" xml:space="preserve">
          <source>Search all modules for TypeInfo_Class corresponding to classname.</source>
          <target state="translated">在所有模块中搜索对应类名的TypeInfo_Class。</target>
        </trans-unit>
        <trans-unit id="40dc545655470ed0c0f91741de8d7603008ed400" translate="yes" xml:space="preserve">
          <source>Search base classes in depth-first, left-to-right order for a class or interface named 'ident'. Stops at first found. Does not look for additional matches.</source>
          <target state="translated">按深度优先,从左到右的顺序搜索名为'ident'的类或接口的基类。以第一个找到的为限。不查找其他匹配项。</target>
        </trans-unit>
        <trans-unit id="05a0c94b71eaa6145a54d9861efafeac514433c9" translate="yes" xml:space="preserve">
          <source>Search for function funcid in aggregate ad.</source>
          <target state="translated">在聚合广告中搜索函数funcid。</target>
        </trans-unit>
        <trans-unit id="b3457640c7fb124ed8ee7343562a3881696029a7" translate="yes" xml:space="preserve">
          <source>Search for ident as member of s.</source>
          <target state="translated">搜索身份为s的成员。</target>
        </trans-unit>
        <trans-unit id="4e4e80f1ee35dec2575daec97fba0228e833b557" translate="yes" xml:space="preserve">
          <source>Search for identifier id as a member of &lt;code&gt;this&lt;/code&gt;. &lt;code&gt;id&lt;/code&gt; may be a template instance.</source>
          <target state="translated">搜索标识符id作为 &lt;code&gt;this&lt;/code&gt; 的成员。 &lt;code&gt;id&lt;/code&gt; 可以是模板实例。</target>
        </trans-unit>
        <trans-unit id="91eea3a437111e0a36b219519cd9b5506cc5af2c" translate="yes" xml:space="preserve">
          <source>Search for mutliple items in an array of items (search for needles in an array of hay stacks)</source>
          <target state="translated">在一个项目阵列中搜索多个项目(在一个干草堆阵列中搜索针头)。</target>
        </trans-unit>
        <trans-unit id="f973c551ba9b74d7cdf6f7aec752fd9b8047cc53" translate="yes" xml:space="preserve">
          <source>Search for ptr in list.</source>
          <target state="translated">在列表中搜索ptr。</target>
        </trans-unit>
        <trans-unit id="7b082131e5aaa638d89e81072e02fa0a35938d5d" translate="yes" xml:space="preserve">
          <source>Search paths for file.</source>
          <target state="translated">搜索文件的路径。</target>
        </trans-unit>
        <trans-unit id="e66d80f386edb12b19c4e812c05579c4fd4e5f45" translate="yes" xml:space="preserve">
          <source>Search sd for a member function of the form: &lt;code&gt;extern (D) string toString();&lt;/code&gt;</source>
          <target state="translated">在sd中搜索以下形式的成员函数： &lt;code&gt;extern (D) string toString();&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b515692596497e8eac06050b176bd5e7c7688df8" translate="yes" xml:space="preserve">
          <source>Search the list of all threads for a thread with the given thread identifier.</source>
          <target state="translated">在所有线程列表中搜索给定线程标识符的线程。</target>
        </trans-unit>
        <trans-unit id="92ad6483a2bd4aa98d97199db784db2ac78880e1" translate="yes" xml:space="preserve">
          <source>Searches for a &lt;code&gt;dmd.conf&lt;/code&gt;.</source>
          <target state="translated">搜索 &lt;code&gt;dmd.conf&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b451945774b0c2a5083e60fde704989ae7cc56af" translate="yes" xml:space="preserve">
          <source>Searches for a &lt;code&gt;ldc2.conf&lt;/code&gt;.</source>
          <target state="translated">搜索一个 &lt;code&gt;ldc2.conf&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f834eba1b2192f6c7c68e67fc2fd6e10437feb42" translate="yes" xml:space="preserve">
          <source>Searches for character in range.</source>
          <target state="translated">搜索范围内的字符。</target>
        </trans-unit>
        <trans-unit id="bede4e788f7625375b2f02fbd23f4cfc34d7a3f4" translate="yes" xml:space="preserve">
          <source>Searches for substring in &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;s&lt;/code&gt; 中搜索子字符串。</target>
        </trans-unit>
        <trans-unit id="27f4ce89033bc50eaffbd3f0b0ae0ce07bab14ae" translate="yes" xml:space="preserve">
          <source>Searches in a linear fashion.</source>
          <target state="translated">以线性方式搜索。</target>
        </trans-unit>
        <trans-unit id="d230169534309838c9ee27aeebc1cc36fa9bd660" translate="yes" xml:space="preserve">
          <source>Searches the given range for an element that matches one of the given choices.</source>
          <target state="translated">在给定的范围内搜索符合给定选择之一的元素。</target>
        </trans-unit>
        <trans-unit id="33b05da4acf3c73cb3c0816fc3f2780f769acf20" translate="yes" xml:space="preserve">
          <source>Searches using a classic interval halving policy. The search starts in the middle of the range, and each search step cuts the range in half. This policy finds a value in &amp;Omicron;(&lt;code&gt;log(n)&lt;/code&gt;) time but is less cache friendly than &lt;code&gt;gallop&lt;/code&gt; for large ranges. The &lt;code&gt;binarySearch&lt;/code&gt; policy is used as the last step of &lt;code&gt;trot&lt;/code&gt;, &lt;code&gt;gallop&lt;/code&gt;, &lt;code&gt;trotBackwards&lt;/code&gt;, and &lt;code&gt; gallopBackwards&lt;/code&gt; strategies.</source>
          <target state="translated">使用经典间隔减半策略进行搜索。搜索从范围的中间开始，每个搜索步骤将范围缩小一半。该策略在&amp;omicron;（ &lt;code&gt;log(n)&lt;/code&gt; ）时间中找到一个值，但是对于大范围而言，其缓存友好性不如 &lt;code&gt;gallop&lt;/code&gt; 。该 &lt;code&gt;binarySearch&lt;/code&gt; 政策作为最后一步 &lt;code&gt;trot&lt;/code&gt; ， &lt;code&gt;gallop&lt;/code&gt; ， &lt;code&gt;trotBackwards&lt;/code&gt; 和 &lt;code&gt; gallopBackwards&lt;/code&gt; 策略。</target>
        </trans-unit>
        <trans-unit id="f3ab2b30008072787361f41cd64ea2a6e111bffc" translate="yes" xml:space="preserve">
          <source>Searches with a step that is grows linearly (1, 2, 3,...) leading to a quadratic search schedule (indexes tried are 0, 1, 3, 6, 10, 15, 21, 28,...) Once the search overshoots its target, the remaining interval is searched using binary search. The search is completed in &amp;Omicron;(&lt;code&gt;sqrt(n)&lt;/code&gt;) time. Use it when you are reasonably confident that the value is around the beginning of the range.</source>
          <target state="translated">搜索以线性增长的步长（1、2、3，...）导致二次搜索计划（尝试的索引为0、1、3、6、10、15、21、28等）如果搜索超出其目标，则使用二进制搜索来搜索剩余间隔。搜索在&amp;omicron;（ &lt;code&gt;sqrt(n)&lt;/code&gt; ）时间内完成。当您有足够的把握确定该值在范围的开始附近时，请使用它。</target>
        </trans-unit>
        <trans-unit id="98cc363c0119e35d1c8070755fc4d4c2387aad71" translate="yes" xml:space="preserve">
          <source>Searching</source>
          <target state="translated">Searching</target>
        </trans-unit>
        <trans-unit id="ef61693f1051e67a96d1ce21e9dcd2a80ac5564a" translate="yes" xml:space="preserve">
          <source>Second item to compare.</source>
          <target state="translated">第二项来比较。</target>
        </trans-unit>
        <trans-unit id="f586a64b1d3b5d9a3b47f03ad11ea20e586672d3" translate="yes" xml:space="preserve">
          <source>Second of the minute [0 - 60).</source>
          <target state="translated">秒的分钟[0-60)。</target>
        </trans-unit>
        <trans-unit id="fe1f701c6b405860b6f7ed99a47d792a19b3cedf" translate="yes" xml:space="preserve">
          <source>Seconds from midnight, January 1st, 1970 in UTC.</source>
          <target state="translated">世界协调时1970年1月1日午夜起秒。</target>
        </trans-unit>
        <trans-unit id="05c6552589f2957076213d53542c5cdb3a02f4aa" translate="yes" xml:space="preserve">
          <source>Seconds past the current minute.</source>
          <target state="translated">当前分钟的秒数。</target>
        </trans-unit>
        <trans-unit id="99ba5a2231f8aafc56b315f631420d5225ea6f90" translate="yes" xml:space="preserve">
          <source>Seconds past the minute.</source>
          <target state="translated">分钟后的秒数。</target>
        </trans-unit>
        <trans-unit id="f2c6b564bd8119e16a3e573a6f9e7c6d1ac7820f" translate="yes" xml:space="preserve">
          <source>Section</source>
          <target state="translated">Section</target>
        </trans-unit>
        <trans-unit id="15b04a3f72bbdbc8b42c3ac02343c26f2ef292f6" translate="yes" xml:space="preserve">
          <source>Section names starting with 'http://' or 'https://' are not recognized as section names.</source>
          <target state="translated">以'http://'或'https://'开头的栏目名称不被识别为栏目名称。</target>
        </trans-unit>
        <trans-unit id="7ff5a6dafd806f6d95302657c480d07703b64604" translate="yes" xml:space="preserve">
          <source>Sections</source>
          <target state="translated">Sections</target>
        </trans-unit>
        <trans-unit id="da2860612425cb47d412d63bf2c0cebeeaefae10" translate="yes" xml:space="preserve">
          <source>Sections - each documentation comment is divided up into a sequence of sections.</source>
          <target state="translated">章节--每个文档评论都被划分为一个章节序列。</target>
        </trans-unit>
        <trans-unit id="c545787818a72c6d5ce007559a5e3149a9e514f8" translate="yes" xml:space="preserve">
          <source>Secure Hash Signature Standard (SHS) (FIPS PUB 180-2)</source>
          <target state="translated">安全散列签名标准(SHS)(FIPS PUB 180-2)</target>
        </trans-unit>
        <trans-unit id="af266f84929c03de0e05203de3b2d71c6cb59fe7" translate="yes" xml:space="preserve">
          <source>Securely compares two digest representations while protecting against timing attacks. Do not use &lt;code&gt;==&lt;/code&gt; to compare digest representations.</source>
          <target state="translated">安全地比较两个摘要表示，同时防止定时攻击。不要使用 &lt;code&gt;==&lt;/code&gt; 比较摘要表示。</target>
        </trans-unit>
        <trans-unit id="2931d5d3232f2248933a3926c6bcfde0392f4223" translate="yes" xml:space="preserve">
          <source>Security considerations</source>
          <target state="translated">安全方面的考虑</target>
        </trans-unit>
        <trans-unit id="ce3df4d818316dd10c7bca5ae8539c894dc07dbb" translate="yes" xml:space="preserve">
          <source>See</source>
          <target state="translated">See</target>
        </trans-unit>
        <trans-unit id="a9c497a4daa0646e69f125d8bf30206df914d1e8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Base64Impl&quot;&gt;&lt;code&gt;Base64Impl&lt;/code&gt;&lt;/a&gt; for a description of available methods.</source>
          <target state="translated">参见&lt;a href=&quot;#Base64Impl&quot;&gt; &lt;code&gt;Base64Impl&lt;/code&gt; &lt;/a&gt;可用方法的描述，。</target>
        </trans-unit>
        <trans-unit id="b2b36bac617e3ef9c16d20e91dac6a3645ccd73c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#FormatSpec&quot;&gt;&lt;code&gt;FormatSpec&lt;/code&gt;&lt;/a&gt; for an example, how to use &lt;code&gt;writeUpToNextSpec&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ff2ba441e1e884d06b5826c3de15889410a086" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#MatcherConcept&quot;&gt;&lt;code&gt;MatcherConcept&lt;/code&gt;&lt;/a&gt; for API outline.</source>
          <target state="translated">参见&lt;a href=&quot;#MatcherConcept&quot;&gt; &lt;code&gt;MatcherConcept&lt;/code&gt; &lt;/a&gt; API概述，。</target>
        </trans-unit>
        <trans-unit id="bd0537aaaa43f315e782023eaca639a88ef05803" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Unicode%20properties&quot;&gt;table of properties&lt;/a&gt; for available sets.</source>
          <target state="translated">见&lt;a href=&quot;#Unicode%20properties&quot;&gt;属性表&lt;/a&gt;可用集合，。</target>
        </trans-unit>
        <trans-unit id="afb94a061cbb4efc100483cf8c401b22b3e7f513" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#array-ops&quot;&gt;Array Indexing and Slicing Operators Overloading&lt;/a&gt; for more details.</source>
          <target state="translated">请参见&lt;a href=&quot;#array-ops&quot;&gt;数组索引和切片运算符重载&lt;/a&gt;更多详细信息，。</target>
        </trans-unit>
        <trans-unit id="9a50c41b118a826a55c078f4026f240d5b33f150" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#toHexString&quot;&gt;&lt;code&gt;toHexString&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;#toHexString&quot;&gt; &lt;code&gt;toHexString&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a066f203c787644dbf959443cd2ebf77b75da02" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;core_internal_array_appending#d_arrayappendTImpl&quot;&gt;&lt;code&gt;core.internal.array.appending.d_arrayappendTImpl&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;core_internal_array_appending#d_arrayappendTImpl&quot;&gt; &lt;code&gt;core.internal.array.appending.d_arrayappendTImpl&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52fb6d3a21e0b2d97670783212c8c505760a8c97" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;core_internal_array_appending#d_arrayappendcTXImpl&quot;&gt;&lt;code&gt;core.internal.array.appending.d_arrayappendcTXImpl&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;core_internal_array_appending#d_arrayappendcTXImpl&quot;&gt; &lt;code&gt;core.internal.array.appending.d_arrayappendcTXImpl&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c8b167414158317de00d83443c7dc6d34e31498" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;core_internal_array_capacity#assumeSafeAppend&quot;&gt;&lt;code&gt;core.internal.array.capacity.assumeSafeAppend&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;core_internal_array_capacity#assumeSafeAppend&quot;&gt; &lt;code&gt;core.internal.array.capacity.assumeSafeAppend&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a65621029ce2377d47e203d07bab5c825fbeaf0b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;core_internal_array_capacity#capacity&quot;&gt;&lt;code&gt;core.internal.array.capacity.capacity&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;core_internal_array_capacity#capacity&quot;&gt; &lt;code&gt;core.internal.array.capacity.capacity&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee1b21043b230fab13955eba761e103cb46b14fb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;core_internal_array_capacity#d_arraysetlengthTImpl&quot;&gt;&lt;code&gt;core.internal.array.capacity.d_arraysetlengthTImpl&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;core_internal_array_capacity#d_arraysetlengthTImpl&quot;&gt; &lt;code&gt;core.internal.array.capacity.d_arraysetlengthTImpl&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1cd179c0954f069f398a0ce9e32931987349e667" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;core_internal_array_capacity#reserve&quot;&gt;&lt;code&gt;core.internal.array.capacity.reserve&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;core_internal_array_capacity#reserve&quot;&gt; &lt;code&gt;core.internal.array.capacity.reserve&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a02137d694d15b9cf0d171ed206c6e5024fe829" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;core_internal_array_casting#_ArrayCast&quot;&gt;&lt;code&gt;core.internal.array.casting._ArrayCast&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;core_internal_array_casting#_ArrayCast&quot;&gt; &lt;code&gt;core.internal.array.casting._ArrayCast&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28724693b5c46e09f70f07d87cd503b6725617df" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;core_internal_array_comparison#_cmp&quot;&gt;&lt;code&gt;core.internal.array.comparison._cmp&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;core_internal_array_comparison#_cmp&quot;&gt; &lt;code&gt;core.internal.array.comparison._cmp&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="766cdaabcaf09a7054a37b8f5a74665607d37e9f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;core_internal_array_concatenation#d_arraycatnTXImpl&quot;&gt;&lt;code&gt;core.internal.array.concatenation.d_arraycatnTXImpl&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;core_internal_array_concatenation#d_arraycatnTXImpl&quot;&gt; &lt;code&gt;core.internal.array.concatenation.d_arraycatnTXImpl&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3168606106f92dba1ffadf6b707881afda02ae4c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;core_internal_array_construction#d_arrayctor&quot;&gt;&lt;code&gt;core.internal.array.construction.d_arrayctor&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;core_internal_array_construction#d_arrayctor&quot;&gt; &lt;code&gt;core.internal.array.construction.d_arrayctor&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89e2202d4a06b1fc57a117ccc993e7d8a9fb3c64" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;core_internal_array_construction#d_arraysetctor&quot;&gt;&lt;code&gt;core.internal.array.construction.d_arraysetctor&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;core_internal_array_construction#d_arraysetctor&quot;&gt; &lt;code&gt;core.internal.array.construction.d_arraysetctor&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7587223cf6e9df4fd010bf20883392efee343e2c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;core_internal_array_equality#_ArrayEq&quot;&gt;&lt;code&gt;core.internal.array.equality._ArrayEq&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;core_internal_array_equality#_ArrayEq&quot;&gt; &lt;code&gt;core.internal.array.equality._ArrayEq&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94a3f213db8e88ba0f7a2552554fe1f7c85cb41e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;core_internal_array_equality#_equals&quot;&gt;&lt;code&gt;core.internal.array.equality._equals&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;core_internal_array_equality#_equals&quot;&gt; &lt;code&gt;core.internal.array.equality._equals&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f99a995997152cddbe2f1e3fddebfa9f2a168f36" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;expression#FunctionLiteral&quot;&gt;&lt;i&gt;FunctionLiteral&lt;/i&gt;&lt;/a&gt;s.</source>
          <target state="translated">请参见&lt;a href=&quot;expression#FunctionLiteral&quot;&gt;&lt;i&gt;FunctionLiteral&lt;/i&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2231af64c20abf3290805c9ea5d8d1814c348561" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;function#nothrow-functions&quot;&gt;Nothrow Functions&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;function#nothrow-functions&quot;&gt;Nothrow函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cd369cb28ee36c88f27da470a4a1050302eb38dc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;function#property-functions&quot;&gt;Property Functions&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;function#property-functions&quot;&gt;属性函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b0f44a630c8ab7bcfdb41acf5197c22514e723f2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;function#pure-functions&quot;&gt;Pure Functions&lt;/a&gt;.</source>
          <target state="translated">请参见&lt;a href=&quot;function#pure-functions&quot;&gt;纯函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4b5af9b0971b631cfba58aaa98f21e0216709b9b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;function#ref-functions&quot;&gt;Ref Functions&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;function#ref-functions&quot;&gt;参考函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="514c0a74e180d0f14dbd0c0f59be031380306088" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;function#return-ref-parameters&quot;&gt;Return Ref Parameters&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;function#return-ref-parameters&quot;&gt;返回参考参数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0762f079ac3dd269848a58eb467ff3449d0d7bfc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://dlang.org/function.html#function-safety&quot;&gt;Function Safety&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;https://dlang.org/function.html#function-safety&quot;&gt;功能安全&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8475f85b045b130ab096ea52849404f04f678642" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://dlang.org/function.html#nogc-functions&quot;&gt;No-GC Functions&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;https://dlang.org/function.html#nogc-functions&quot;&gt;No-GC函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6506b2f314a4a6a872f9af213bab0f4de73538d1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://dlang.org/function.html#pseudo-member&quot;&gt;Uniform Function Call Syntax (UFCS)&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;https://dlang.org/function.html#pseudo-member&quot;&gt;统一函数调用语法（UFCS）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="930d98c6d35abcfa23776e3b8ae228bba5c6f04f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://dlang.org/phobos/core_simd.html&quot;&gt;&lt;code&gt;core.simd&lt;/code&gt;&lt;/a&gt; for the supported intrinsics.</source>
          <target state="translated">有关支持的内在函数，请参见&lt;a href=&quot;https://dlang.org/phobos/core_simd.html&quot;&gt; &lt;code&gt;core.simd&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e650b8163b12b7a007bb6af48f10467e0c39a10a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/dlang/dmd/blob/master/samples/listener.d&quot;&gt;/dmd/samples/d/listener.d&lt;/a&gt; and &lt;a href=&quot;https://github.com/dlang/dmd/blob/master/samples/htmlget.d&quot;&gt;/dmd/samples/d/htmlget.d&lt;/a&gt;</source>
          <target state="translated">请参阅&lt;a href=&quot;https://github.com/dlang/dmd/blob/master/samples/listener.d&quot;&gt;/dmd/samples/d/listener.d&lt;/a&gt;和&lt;a href=&quot;https://github.com/dlang/dmd/blob/master/samples/htmlget.d&quot;&gt;/dmd/samples/d/htmlget.d&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="798d8954e5f2f266ed96a238c41b5aa9e3c1a0e8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;std_container&quot;&gt;std.container.*&lt;/a&gt; for an overview.</source>
          <target state="translated">有关概述，请参见&lt;a href=&quot;std_container&quot;&gt;std.container。*&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="16c00233b879fbb4e5330c067a28e9302e3a4d65" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;std_format#formatValue&quot;&gt;&lt;code&gt;std.format.formatValue&lt;/code&gt;&lt;/a&gt; on how toString should be defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2602d2c8fe40f5b50076249ce71b31969269a6" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;std.digest.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="translated">有关模板和OOP API之间的差异，请参见 &lt;code&gt;std.digest.digest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a0af469eb50854e3e34d0e65ae310f8570e0b4f" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;std.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="translated">有关模板和OOP API之间的差异，请参见 &lt;code&gt;std.digest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61a08f389a25b863d0fca5015a2885ff6fd5c8cd" translate="yes" xml:space="preserve">
          <source>See Also:</source>
          <target state="translated">另见:</target>
        </trans-unit>
        <trans-unit id="aacde3566ce82625ba04b3ab8431e9b38041c372" translate="yes" xml:space="preserve">
          <source>See Also: &lt;a href=&quot;#lazy_variadic_functions&quot;&gt;Lazy Variadic Functions&lt;/a&gt;</source>
          <target state="translated">另请参见：&lt;a href=&quot;#lazy_variadic_functions&quot;&gt;可变参函数&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a20ba872f1e0f396a7ea871c86c99e92a2c9525" translate="yes" xml:space="preserve">
          <source>See StatementSemanticVisitor.makeTupleForeach. This is a simple wrapper that returns the generated statements/declarations.</source>
          <target state="translated">请参见 StatementSemanticVisitor.makeTupleForeach。这是一个简单的包装器,它可以返回生成的语句/声明。</target>
        </trans-unit>
        <trans-unit id="3e05a91b690100a209261d9adf1ee2eff4a842a7" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#function-templates&quot;&gt;function templates&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#function-templates&quot;&gt;功能模板&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5eaaeb98d8ec5994d4f282affdcdd142b373577c" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#implicit-nesting&quot;&gt;Implicit Template Nesting&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#implicit-nesting&quot;&gt;隐式模板嵌套&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="074a72a8df5807b3473b05291f5edddb71c6a3b5" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#unicode&quot;&gt;&lt;code&gt;unicode&lt;/code&gt;&lt;/a&gt; for simpler construction of sets from predefined ones.</source>
          <target state="translated">另请参阅&lt;a href=&quot;#unicode&quot;&gt; &lt;code&gt;unicode&lt;/code&gt; ,&lt;/a&gt;以根据预定义的集合简化集合的构造。</target>
        </trans-unit>
        <trans-unit id="a59ec1762ae86fe770ed1684f0fe7cf21aa23902" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;expression#IndexExpression&quot;&gt;&lt;i&gt;IndexExpression&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;expression#IndexExpression&quot;&gt;&lt;i&gt;IndexExpression&lt;/i&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5fc283e11e2a828dbd1031faf1caf5d1e74986cf" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;expression#SliceExpression&quot;&gt;&lt;i&gt;SliceExpression&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;expression#SliceExpression&quot;&gt;&lt;i&gt;SliceExpression&lt;/i&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="13b5ed1d8f7cf09ba733be2b8794c91c4e4dce8c" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://dlang.org/function.html#safe-functions&quot;&gt;Safe Functions&lt;/a&gt;.</source>
          <target state="translated">另请参阅&lt;a href=&quot;https://dlang.org/function.html#safe-functions&quot;&gt;安全功能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7b2d600783260a2d7c00ecf87216e64427e3b96e" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://wiki.dlang.org/Memory_Management#Explicit_Class_Instance_Allocation&quot;&gt; Explicit Class Instance Allocation&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;https://wiki.dlang.org/Memory_Management#Explicit_Class_Instance_Allocation&quot;&gt;显式类实例分配&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="098c45167b50b4d454201327f53de51cda6c9f6b" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;parent&lt;/code&gt;, &lt;code&gt;toParent&lt;/code&gt; and &lt;code&gt;toParent2&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;parent&lt;/code&gt; ， &lt;code&gt;toParent&lt;/code&gt; 和 &lt;code&gt;toParent2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5af360d96af2570865aea6606b07bd3d909b335b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#template_this_parameter&quot;&gt;Template This Parameters&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d7950857df91efbcc2e2d9e3072c934e0bf3e5" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;attribute#UserDefinedAttribute&quot;&gt;&lt;i&gt;User-Defined Attributes&lt;/i&gt;&lt;/a&gt;</source>
          <target state="translated">另请参阅：&lt;a href=&quot;attribute#UserDefinedAttribute&quot;&gt;&lt;i&gt;用户定义的属性&lt;/i&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="edf87b477d8b0d227109f74f1a4c72b8e5bf7ae3" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;class#delegating-constructors&quot;&gt;delegating class constructors&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93700b7504f16d0c08331de8ffbd82c7fd0dcc01" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;class#nested-explicit&quot;&gt;Nested Class Instantiation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e75b50924fc2077c22f35bf7e4fd2589ca1ad47d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;https://dlang.org/phobos/std_functional.html#partial&quot;&gt;&lt;code&gt;std.functional.partial&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">另请参阅：&lt;a href=&quot;https://dlang.org/phobos/std_functional.html#partial&quot;&gt; &lt;code&gt;std.functional.partial&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c6c43913ca8da05fc74b6c014e07e9707962d8f" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;version#staticforeach&quot;&gt;Static Foreach&lt;/a&gt;.</source>
          <target state="translated">另请参阅：&lt;a href=&quot;version#staticforeach&quot;&gt;静态Foreach&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1210f1577f6bd3c6994a624b22cc19197a8a5f3a" translate="yes" xml:space="preserve">
          <source>See if both types are arrays that can be compared for equality without any casting. Return true if so. This is to enable comparing things like an immutable array with a mutable one.</source>
          <target state="translated">查看两个类型是否都是不需要任何转换就可以进行平等比较的数组。如果是,返回true。这是为了比较像不可变数组和可变数组这样的数组。</target>
        </trans-unit>
        <trans-unit id="19239d98c47446fb192bfcfba0771074c5578d5b" translate="yes" xml:space="preserve">
          <source>See if both types are arrays that can be compared for equality. Return true if so. If they are arrays, but incompatible, issue error. This is to enable comparing things like an immutable array with a mutable one.</source>
          <target state="translated">查看两个类型是否都是可以比较的数组,是否平等。如果是,则返回true。如果它们是数组,但不兼容,则发出错误。这是为了比较像不可变数组和可变数组这样的数组。</target>
        </trans-unit>
        <trans-unit id="c2d5994b26bc328fb865ec548bbd678392387036" translate="yes" xml:space="preserve">
          <source>See if context &lt;code&gt;s&lt;/code&gt; is nested within context &lt;code&gt;p&lt;/code&gt;, meaning it &lt;code&gt;p&lt;/code&gt; is reachable at runtime by walking the static links. If any of the intervening contexts are function literals, make sure they are delegates.</source>
          <target state="translated">查看上下文 &lt;code&gt;s&lt;/code&gt; 是否嵌套在上下文 &lt;code&gt;p&lt;/code&gt; 中，这意味着在运行时可以通过遍历静态链接来访问 &lt;code&gt;p&lt;/code&gt; 。如果任何介入的上下文都是函数文字，请确保它们是委托。</target>
        </trans-unit>
        <trans-unit id="529e4c9e3d397454a92610a9c6eb2b1be227d7b7" translate="yes" xml:space="preserve">
          <source>See if pointers from function parameters, mutable globals, or uplevel functions could leak into return value.</source>
          <target state="translated">查看来自函数参数、可突变的全局或上级函数的指针是否会泄漏到返回值中。</target>
        </trans-unit>
        <trans-unit id="2ec9220fbc46b738b8b9c20032a63b36be29da45" translate="yes" xml:space="preserve">
          <source>See if pointers from function parameters, mutable globals, or uplevel functions could leak into type &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">查看来自函数参数，可变全局变量或上层函数的指针是否可能泄漏到类型 &lt;code&gt;t&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="b2663b20a7956d78a2dd8db0847c7558e8ca705d" translate="yes" xml:space="preserve">
          <source>See if type resolves to a symbol, if so, return that symbol.</source>
          <target state="translated">查看类型是否解析为一个符号,如果是,返回该符号。</target>
        </trans-unit>
        <trans-unit id="62796dd1d3daa2e0bfc7f372dc22f5b71e52aa0d" translate="yes" xml:space="preserve">
          <source>See the '!' &lt;a href=&quot;#opUnary&quot;&gt;&lt;code&gt;opUnary&lt;/code&gt;&lt;/a&gt; for the same but using operators.</source>
          <target state="translated">看到&amp;ldquo;！&amp;rdquo; &lt;a href=&quot;#opUnary&quot;&gt; &lt;code&gt;opUnary&lt;/code&gt; &lt;/a&gt;相同，但使用运算符。</target>
        </trans-unit>
        <trans-unit id="e694b25b255ecc091cc971d84d997ec47c991e52" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#Synopsis&quot;&gt;Synopsis&lt;/a&gt; section for example.</source>
          <target state="translated">例如，请参见&amp;ldquo; &lt;a href=&quot;#Synopsis&quot;&gt;概要&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="245ccdf71f1f6e91a6ab6d01c65baf50a9f10c56" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#Unicode%20properties&quot;&gt;table of properties&lt;/a&gt; for available sets.</source>
          <target state="translated">有关可用集合，请参见&lt;a href=&quot;#Unicode%20properties&quot;&gt;属性表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4414574c453770bbd72e3ab19f304a20c61921fe" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#spawnProcess&quot;&gt;&lt;code&gt;spawnProcess&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">请参阅&lt;a href=&quot;#spawnProcess&quot;&gt; &lt;code&gt;spawnProcess&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="4746ac7b229cf611c63ba1699fcbcbd4e469c6b3" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;std_format&quot;&gt;&lt;code&gt;std.format&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;std_string#format&quot;&gt;&lt;code&gt;std.string.format&lt;/code&gt;&lt;/a&gt; documentation for more information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;std_format&quot;&gt; &lt;code&gt;std.format&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;std_string#format&quot;&gt; &lt;code&gt;std.string.format&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="226d596c8aa5cb229584c07389f4402088ce3cc4" translate="yes" xml:space="preserve">
          <source>See the comment for INFILESIZE above, but in short, specifies the size of the file being uploaded. -1 means unknown.</source>
          <target state="translated">参见上面INFILESIZE的注释,但简而言之,指定上传文件的大小。-1表示未知。</target>
        </trans-unit>
        <trans-unit id="e49d4adbf5b5645c48f86a972eff4c6aebfa6ac4" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;code&gt;UnitTestResult&lt;/code&gt; for details on how the runtime treats the return value from this function.</source>
          <target state="translated">有关运行时如何处理此函数的返回值的详细信息，请参见 &lt;code&gt;UnitTestResult&lt;/code&gt; 的文档。</target>
        </trans-unit>
        <trans-unit id="c395269737082721a6f616c8ff72dd8be0eed697" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;code&gt;UnitTestResult&lt;/code&gt; to see how you should set up the return structure.</source>
          <target state="translated">请参阅 &lt;code&gt;UnitTestResult&lt;/code&gt; 的文档，以了解如何设置返回结构。</target>
        </trans-unit>
        <trans-unit id="c43537cb5c8fcf979a8b0843f56ad28f8198b83b" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;code&gt;runModuleUnitTests&lt;/code&gt; for how the default algorithm works, or read the example below.</source>
          <target state="translated">有关默认算法的工作方式，请参见 &lt;code&gt;runModuleUnitTests&lt;/code&gt; 的文档，或阅读以下示例。</target>
        </trans-unit>
        <trans-unit id="f7fbe074bec1d4cf7c7eb7b99543695878439d64" translate="yes" xml:space="preserve">
          <source>Seed version. The seed should be a single value if &lt;code&gt;fun&lt;/code&gt; is a single function. If &lt;code&gt;fun&lt;/code&gt; is multiple functions, then &lt;code&gt;seed&lt;/code&gt; should be a &lt;a href=&quot;std_typecons#Tuple&quot;&gt;&lt;code&gt;std.typecons.Tuple&lt;/code&gt;&lt;/a&gt;, with one field per function in &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">种子版本。如果 &lt;code&gt;fun&lt;/code&gt; 是单个函数，则种子应为单个值。如果 &lt;code&gt;fun&lt;/code&gt; 是多个函数，则 &lt;code&gt;seed&lt;/code&gt; 应为&lt;a href=&quot;std_typecons#Tuple&quot;&gt; &lt;code&gt;std.typecons.Tuple&lt;/code&gt; &lt;/a&gt;，每个函数在 &lt;code&gt;f&lt;/code&gt; 中具有一个字段。</target>
        </trans-unit>
        <trans-unit id="56570141b0656659fef83cdec1eea9bfbe5323f4" translate="yes" xml:space="preserve">
          <source>Seed version. The seed should be a single value if &lt;code&gt;fun&lt;/code&gt; is a single function. If &lt;code&gt;fun&lt;/code&gt; is multiple functions, then &lt;code&gt;seed&lt;/code&gt; should be a &lt;a href=&quot;std_typecons#Tuple&quot;&gt;&lt;code&gt;std.typecons.Tuple&lt;/code&gt;&lt;/a&gt;, with one field per function in &lt;code&gt;f&lt;/code&gt;. For convenience, if the seed is &lt;code&gt;const&lt;/code&gt;, or has qualified fields, then &lt;code&gt;cumulativeFold&lt;/code&gt; will operate on an unqualified copy. If this happens then the returned type will not perfectly match &lt;code&gt;S&lt;/code&gt;.</source>
          <target state="translated">种子版本。如果 &lt;code&gt;fun&lt;/code&gt; 是单个函数，则种子应为单个值。如果 &lt;code&gt;fun&lt;/code&gt; 是多个函数，则 &lt;code&gt;seed&lt;/code&gt; 应为&lt;a href=&quot;std_typecons#Tuple&quot;&gt; &lt;code&gt;std.typecons.Tuple&lt;/code&gt; &lt;/a&gt;，每个函数在 &lt;code&gt;f&lt;/code&gt; 中具有一个字段。为方便起见，如果种子为 &lt;code&gt;const&lt;/code&gt; 或具有限定字段，则 &lt;code&gt;cumulativeFold&lt;/code&gt; 将对非限定副本进行操作。如果发生这种情况，则返回类型不完全匹配 &lt;code&gt;S&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6bf0881b657a5dd846a29b4c4097e345e1f2e119" translate="yes" xml:space="preserve">
          <source>Seeds a MersenneTwisterEngine object using an InputRange.</source>
          <target state="translated">使用一个InputRange播种一个MersenneTwisterEngine对象。</target>
        </trans-unit>
        <trans-unit id="cd22b02bc771c91069d5e0e67c214d8b493984f4" translate="yes" xml:space="preserve">
          <source>Seeds a MersenneTwisterEngine object.</source>
          <target state="translated">播种一个MersenneTwisterEngine对象。</target>
        </trans-unit>
        <trans-unit id="a098804b14ee33330b8c8a8ec1195174aad5b3cc" translate="yes" xml:space="preserve">
          <source>Segregates allocation requests by size and dispatches them to distinct allocators.</source>
          <target state="translated">将分配请求按大小分开,并将它们分配给不同的分配器。</target>
        </trans-unit>
        <trans-unit id="38d60f3e7b95cc3d915507db06a46b17b8caae05" translate="yes" xml:space="preserve">
          <source>Select &quot;file method&quot; to use when doing FTP, see the curl_ftpmethod above.</source>
          <target state="translated">选择做FTP时要用的 &quot;文件方法&quot;,见上面的curl_ftpmethod。</target>
        </trans-unit>
        <trans-unit id="59104d41affc4eb62d929b6d56267dc9f487cf96" translate="yes" xml:space="preserve">
          <source>Select one context pointer from a dual-context array</source>
          <target state="translated">从双上下文数组中选择一个上下文指针。</target>
        </trans-unit>
        <trans-unit id="def9a1b4b216eaa192bdd8c041abd356f9073d1f" translate="yes" xml:space="preserve">
          <source>Select one of two functions to run via template parameter.</source>
          <target state="translated">通过模板参数选择两个函数中的一个来运行。</target>
        </trans-unit>
        <trans-unit id="d7131b47f27a4be5f48ab270383535a81bc33b85" translate="yes" xml:space="preserve">
          <source>Select!(Types.length == 1, Types[0][], Tuple!Types[]) &lt;strong id=&quot;slurp&quot;&gt;slurp&lt;/strong&gt;(Types...)(string filename, scope const(char)[] format);</source>
          <target state="translated">选择！（Types.length == 1，Types [0] []，Tuple！Types []）&lt;strong id=&quot;slurp&quot;&gt;slurp&lt;/strong&gt;（Types ...）（字符串文件名，作用域const（char）[]格式）;</target>
        </trans-unit>
        <trans-unit id="04de5b85b57e514b580f08634d850f571b5fc6d9" translate="yes" xml:space="preserve">
          <source>Select!(isFloatingPoint!F, F, double) &lt;strong id=&quot;gapWeightedSimilarityNormalized&quot;&gt;gapWeightedSimilarityNormalized&lt;/strong&gt;(alias comp = &quot;a == b&quot;, R1, R2, F)(R1 s, R2 t, F lambda, F sSelfSim = F.init, F tSelfSim = F.init)</source>
          <target state="translated">选择！（isFloatingPoint！F，F，double）&lt;strong id=&quot;gapWeightedSimilarityNormalized&quot;&gt;gapWeightedSimilarityNormalized&lt;/strong&gt;（alias comp =&amp;ldquo; a == b&amp;rdquo;，R1，R2，F）（R1 s，R2 t，F lambda，F sSelfSim = F.init，F tSelfSim = F 。在里面）</target>
        </trans-unit>
        <trans-unit id="cd7d7bec67d146e0b05c0c0e7eabc3124ead984a" translate="yes" xml:space="preserve">
          <source>Selective Imports</source>
          <target state="translated">选择性进口</target>
        </trans-unit>
        <trans-unit id="68aabce7d8ad38eda2923fb8a136b6d9f666a4ab" translate="yes" xml:space="preserve">
          <source>Selectors in Objective-C can contain the colon character, which is not valid in D identifiers. D supports method overloading while Objective-C achieves something similar by using different selectors. For these two reasons it is better to be able to specify the selectors manually in D, instead of trying to infer it. This allows to have a more natural names for the methods in D. Example:</source>
          <target state="translated">Objective-C中的选择符可以包含冒号字符,而冒号字符在D标识符中是无效的。D支持方法重载,而Objective-C通过使用不同的选择符来实现类似的功能。基于这两个原因,最好是能够在D中手动指定选择符,而不是试图推断它。这样就可以在D中为方法取一个更自然的名字。 例子。</target>
        </trans-unit>
        <trans-unit id="5148c140d42764520d6c806c0e39e27cecf84c06" translate="yes" xml:space="preserve">
          <source>Selects a random subsample out of &lt;code&gt;r&lt;/code&gt;, containing exactly &lt;code&gt;n&lt;/code&gt; elements. The order of elements is the same as in the original range. The total length of &lt;code&gt;r&lt;/code&gt; must be known. If &lt;code&gt;total&lt;/code&gt; is passed in, the total number of sample is considered to be &lt;code&gt;total&lt;/code&gt;. Otherwise, &lt;code&gt;RandomSample&lt;/code&gt; uses &lt;code&gt;r.length&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;r&lt;/code&gt; 中选择一个随机的子样本，该样本恰好包含 &lt;code&gt;n&lt;/code&gt; 个元素。元素的顺序与原始范围中的顺序相同。必须知道 &lt;code&gt;r&lt;/code&gt; 的总长度。如果 &lt;code&gt;total&lt;/code&gt; 传入，样品的总数目被认为是 &lt;code&gt;total&lt;/code&gt; 。否则， &lt;code&gt;RandomSample&lt;/code&gt; 使用 &lt;code&gt;r.length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8af7aa32e44b8df6b3666b8681f1c22f69cd9601" translate="yes" xml:space="preserve">
          <source>Selects a subset of &lt;code&gt;Args&lt;/code&gt; by stepping with fixed &lt;code&gt;stepSize&lt;/code&gt; over the sequence. A negative &lt;code&gt;stepSize&lt;/code&gt; starts iteration with the last element.</source>
          <target state="translated">通过在序列上以固定的 &lt;code&gt;stepSize&lt;/code&gt; 步进来选择 &lt;code&gt;Args&lt;/code&gt; 的子集。负的 &lt;code&gt;stepSize&lt;/code&gt; 从最后一个元素开始迭代。</target>
        </trans-unit>
        <trans-unit id="889f8a8a7b968fb4722dc701e22497c28b85d286" translate="yes" xml:space="preserve">
          <source>Selects the maximal element of a range. &lt;code&gt;maxElement([3, 4, 1, 2])&lt;/code&gt; returns &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="translated">选择范围的最大元素。 &lt;code&gt;maxElement([3, 4, 1, 2])&lt;/code&gt; 返回 &lt;code&gt;4&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="124988cb48743956f1747f136a45535a67c16ac5" translate="yes" xml:space="preserve">
          <source>Selects the minimal element of a range. &lt;code&gt;minElement([3, 4, 1, 2])&lt;/code&gt; returns &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">选择范围的最小值。 &lt;code&gt;minElement([3, 4, 1, 2])&lt;/code&gt; 返回 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="36c4a71277dddfc41ec64ecb59c9b75585c9d629" translate="yes" xml:space="preserve">
          <source>Self-Referential Types</source>
          <target state="translated">自参照类型</target>
        </trans-unit>
        <trans-unit id="dc0ce9f7a4fdb9dae86f556ca4a6b9a09bba4442" translate="yes" xml:space="preserve">
          <source>Semantic analysis will convert it to a real type.</source>
          <target state="translated">语义分析将把它转换为实型。</target>
        </trans-unit>
        <trans-unit id="ec46752702565052feae5098b00cdf3ddcda8bd4" translate="yes" xml:space="preserve">
          <source>Semantically analyze and then evaluate a static condition at compile time. This is special because short circuit operators &amp;amp;&amp;amp;, || and ?: at the top level are not semantically analyzed if the result of the expression is not necessary.</source>
          <target state="translated">在编译时语义分析然后评估静态条件。这是特殊的，因为短路运算符&amp;amp;&amp;amp;，|| 如果不需要表达式的结果，则不会对顶层的？和？：进行语义分析。</target>
        </trans-unit>
        <trans-unit id="448b7b4c42f1ccdac0f323ad79d63d110e5f5ad4" translate="yes" xml:space="preserve">
          <source>Semantically consecutive</source>
          <target state="translated">语义连续</target>
        </trans-unit>
        <trans-unit id="fe03c3515833357d89e7094df960e757cae3bc1d" translate="yes" xml:space="preserve">
          <source>Semantics</source>
          <target state="translated">Semantics</target>
        </trans-unit>
        <trans-unit id="6198101739664e7a8802cfb7788d298cd6ac552d" translate="yes" xml:space="preserve">
          <source>Semantics in &lt;code&gt;Checked!(T, Hook)&lt;/code&gt;</source>
          <target state="translated">已 &lt;code&gt;Checked!(T, Hook)&lt;/code&gt; 语义！（T，Hook）</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
