<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="yii">
    <body>
      <group id="yii">
        <trans-unit id="c89521b5d695f9f52fd517532436e9316382af31" translate="yes" xml:space="preserve">
          <source>Whether to return a master connection in case there is no slave connection available.</source>
          <target state="translated">在没有可用的从属连接的情况下,是否要返回一个主连接。</target>
        </trans-unit>
        <trans-unit id="2a7eb97f0329d902d7417bd5306fec49a9fbbe21" translate="yes" xml:space="preserve">
          <source>Whether to return a single row during each iteration.</source>
          <target state="translated">是否在每次迭代过程中返回单行。</target>
        </trans-unit>
        <trans-unit id="62351e2abda3d75c31b5dfee2083710c4d135d58" translate="yes" xml:space="preserve">
          <source>Whether to return a single row during each iteration. If false, a whole batch of rows will be returned in each iteration.</source>
          <target state="translated">是否在每次迭代中只返回一条记录。如果为false,则每次迭代将返回整批记录。</target>
        </trans-unit>
        <trans-unit id="74f2aa6a3c17315cfd8d5e0589773caa90fa969a" translate="yes" xml:space="preserve">
          <source>Whether to return component definitions instead of the loaded component instances.</source>
          <target state="translated">是否返回组件定义而不是加载的组件实例。</target>
        </trans-unit>
        <trans-unit id="fdba2e470a3b9db62e69255157e02418835b5ee5" translate="yes" xml:space="preserve">
          <source>Whether to return document and hit occurrence statistics</source>
          <target state="translated">是否返回文件和命中发生率统计</target>
        </trans-unit>
        <trans-unit id="82cc5aabf1715d3d3bbb074a6fa1bef92e8ada41" translate="yes" xml:space="preserve">
          <source>Whether to return each record as an array.</source>
          <target state="translated">是否以数组形式返回每条记录。</target>
        </trans-unit>
        <trans-unit id="e550e6b8bb9aa7f794bd8b1af474fae1a1dec08e" translate="yes" xml:space="preserve">
          <source>Whether to return each record as an array. If false (default), an object of &lt;a href=&quot;yii-db-activequerytrait#%24modelClass-detail&quot;&gt;$modelClass&lt;/a&gt; will be created to represent each record.</source>
          <target state="translated">是否将每个记录作为数组返回。如果为false（默认），将创建&lt;a href=&quot;yii-db-activequerytrait#%24modelClass-detail&quot;&gt;$ modelClass&lt;/a&gt;对象来表示每个记录。</target>
        </trans-unit>
        <trans-unit id="73bdc0a9490ef2484169476293972d305bab063e" translate="yes" xml:space="preserve">
          <source>Whether to return objects in terms of associative arrays.</source>
          <target state="translated">是否以关联数组的方式返回对象。</target>
        </trans-unit>
        <trans-unit id="2ed0f9ad7d3f0c758037a1f14f26c842c9347c73" translate="yes" xml:space="preserve">
          <source>Whether to return the loaded sub-modules only. If this is set &lt;code&gt;false&lt;/code&gt;, then all sub-modules registered in this module will be returned, whether they are loaded or not. Loaded modules will be returned as objects, while unloaded modules as configuration arrays.</source>
          <target state="translated">是否仅返回已加载的子模块。如果将其设置为 &lt;code&gt;false&lt;/code&gt; ，那么将返回在此模块中注册的所有子模块，无论它们是否已加载。加载的模块将作为对象返回，而卸载的模块将作为配置数组返回。</target>
        </trans-unit>
        <trans-unit id="364af2b24ce741efaa7820801ec59f3f769b3a81" translate="yes" xml:space="preserve">
          <source>Whether to return the primary key value as an array. If &lt;code&gt;true&lt;/code&gt;, the return value will be an array with column name as key and column value as value. If this is &lt;code&gt;false&lt;/code&gt; (default), a scalar value will be returned for non-composite primary key.</source>
          <target state="translated">是否以数组形式返回主键值。如果为 &lt;code&gt;true&lt;/code&gt; ，则返回值将是一个以列名作为键，列值作为值的数组。如果为 &lt;code&gt;false&lt;/code&gt; （默认），则将为非复合主键返回标量值。</target>
        </trans-unit>
        <trans-unit id="6fc2cc12fed500eea6714dac4b6b61057fd38f87" translate="yes" xml:space="preserve">
          <source>Whether to return the primary key value as an array. If &lt;code&gt;true&lt;/code&gt;, the return value will be an array with column names as keys and column values as values. Note that for composite primary keys, an array will always be returned regardless of this parameter value.</source>
          <target state="translated">是否以数组形式返回主键值。如果为 &lt;code&gt;true&lt;/code&gt; ，则返回值将是一个数组，其中列名作为键，列值作为值。请注意，对于复合主键，无论此参数值如何，都将始终返回数组。</target>
        </trans-unit>
        <trans-unit id="4cb97791bf2484ff67da3e08305d2d5e668da42c" translate="yes" xml:space="preserve">
          <source>Whether to return the primary key value as an array. If true, the return value will be an array with attribute names as keys and attribute values as values. Note that for composite primary keys, an array will always be returned regardless of this parameter value.</source>
          <target state="translated">是否以数组形式返回主键值。如果为真,返回值将是一个以属性名为键,属性值为值的数组。请注意,对于复合主键,无论这个参数值如何,都将返回一个数组。</target>
        </trans-unit>
        <trans-unit id="d72bbedf6de674923881464b07be4a9a0ed4a341" translate="yes" xml:space="preserve">
          <source>Whether to return the primary key value as an array. If true, the return value will be an array with column name as key and column value as value. If this is &lt;code&gt;false&lt;/code&gt; (default), a scalar value will be returned for non-composite primary key.</source>
          <target state="translated">是否以数组形式返回主键值。如果为true，则返回值将是一个以列名为键，列值为值的数组。如果为 &lt;code&gt;false&lt;/code&gt; （默认），则将为非复合主键返回标量值。</target>
        </trans-unit>
        <trans-unit id="5910af6b3af4944d3db6684c51fe3b1fbca1c639" translate="yes" xml:space="preserve">
          <source>Whether to return the query results in terms of arrays instead of Active Records.</source>
          <target state="translated">是否以数组而非活动记录的方式返回查询结果。</target>
        </trans-unit>
        <trans-unit id="8db7884fe4c9d825b3a7e948b3ca2dc146867b7c" translate="yes" xml:space="preserve">
          <source>Whether to return the string in lowercase or not. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">是否以小写形式返回字符串。默认为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22718e932cefe463a907d7d0aaf7e91ec2307676" translate="yes" xml:space="preserve">
          <source>Whether to rotate log files by copy and truncate in contrast to rotation by renaming files.</source>
          <target state="translated">是否通过复制和截断的方式旋转日志文件,与通过重命名文件的方式旋转形成对比。</target>
        </trans-unit>
        <trans-unit id="27aa621d6bf819544b37539354733f15f36b8538" translate="yes" xml:space="preserve">
          <source>Whether to rotate log files by copy and truncate in contrast to rotation by renaming files. Defaults to &lt;code&gt;true&lt;/code&gt; to be more compatible with log tailers and is windows systems which do not play well with rename on open files. Rotation by renaming however is a bit faster.</source>
          <target state="translated">与通过重命名文件进行轮换相比，是否通过复制和截断来轮换日志文件。默认为 &lt;code&gt;true&lt;/code&gt; ，以便与日志尾部更加兼容，并且是Windows系统，在打开文件上重命名时效果不佳。但是，通过重命名旋转会更快一些。</target>
        </trans-unit>
        <trans-unit id="c75227338e9f969d04256597910235b779c40c08" translate="yes" xml:space="preserve">
          <source>Whether to run the action.</source>
          <target state="translated">是否运行该动作。</target>
        </trans-unit>
        <trans-unit id="e1673c506bdc1b2b89211de5a9f027dcbba6d91a" translate="yes" xml:space="preserve">
          <source>Whether to run the command interactively.</source>
          <target state="translated">是否交互式运行命令。</target>
        </trans-unit>
        <trans-unit id="2c2ae2a1bcbf89c1ed9d1230db1bc7c41ed2b62d" translate="yes" xml:space="preserve">
          <source>Whether to save email messages as files under &lt;a href=&quot;yii-mail-basemailer#%24fileTransportPath-detail&quot;&gt;$fileTransportPath&lt;/a&gt; instead of sending them to the actual recipients.</source>
          <target state="translated">是否将电子邮件另存为&lt;a href=&quot;yii-mail-basemailer#%24fileTransportPath-detail&quot;&gt;$ fileTransportPath&lt;/a&gt;下的文件，而不是发送给实际的收件人。</target>
        </trans-unit>
        <trans-unit id="09eead7059656edc179380f0764b8155a445c92f" translate="yes" xml:space="preserve">
          <source>Whether to save email messages as files under &lt;a href=&quot;yii-mail-basemailer#%24fileTransportPath-detail&quot;&gt;$fileTransportPath&lt;/a&gt; instead of sending them to the actual recipients. This is usually used during development for debugging purpose.</source>
          <target state="translated">是否将电子邮件另存为&lt;a href=&quot;yii-mail-basemailer#%24fileTransportPath-detail&quot;&gt;$ fileTransportPath&lt;/a&gt;下的文件，而不是发送给实际的收件人。通常在开发过程中用于调试目的。</target>
        </trans-unit>
        <trans-unit id="067b089d1c80aee40664fc598e8e79137ab8ad81" translate="yes" xml:space="preserve">
          <source>Whether to scroll to the first error after validation.</source>
          <target state="translated">是否滚动到验证后的第一个错误。</target>
        </trans-unit>
        <trans-unit id="06ae1722c9afb11c9c73844566053df7b26e5fdd" translate="yes" xml:space="preserve">
          <source>Whether to select distinct rows of data only.</source>
          <target state="translated">是否只选择不同的数据行。</target>
        </trans-unit>
        <trans-unit id="164e34e74712380df15d0d80e3db1efdc2d3f5de" translate="yes" xml:space="preserve">
          <source>Whether to select distinct rows of data only. If this is set true, the SELECT clause would be changed to SELECT DISTINCT.</source>
          <target state="translated">是否只选择不同的数据行。如果设置为true,则SELECT子句将改为SELECT DISTINCT。</target>
        </trans-unit>
        <trans-unit id="f205f51a20815970433cc309eeef5139d857d821" translate="yes" xml:space="preserve">
          <source>Whether to send response to the browser or render it as plain text</source>
          <target state="translated">是向浏览器发送响应,还是以纯文本的形式呈现?</target>
        </trans-unit>
        <trans-unit id="239f1ce3774b9f2cd10c60c82c0f14273f583672" translate="yes" xml:space="preserve">
          <source>Whether to set all words to uppercase</source>
          <target state="translated">是否将所有单词都设置为大写?</target>
        </trans-unit>
        <trans-unit id="2c3bee558b5e8857415c0172332c41a9ade9ff4e" translate="yes" xml:space="preserve">
          <source>Whether to set all words to uppercase or not</source>
          <target state="translated">是否将所有单词都设置为大写?</target>
        </trans-unit>
        <trans-unit id="ad6e1953a0404aa3a6bda021b7d7bfe9e78a416f" translate="yes" xml:space="preserve">
          <source>Whether to show an empty list view if &lt;a href=&quot;yii-widgets-baselistview#%24dataProvider-detail&quot;&gt;$dataProvider&lt;/a&gt; returns no data.</source>
          <target state="translated">如果&lt;a href=&quot;yii-widgets-baselistview#%24dataProvider-detail&quot;&gt;$ dataProvider不&lt;/a&gt;返回任何数据，是否显示一个空列表视图。</target>
        </trans-unit>
        <trans-unit id="9d9750de7275eee2d4e4e42521f0e174613bd482" translate="yes" xml:space="preserve">
          <source>Whether to show an empty list view if &lt;a href=&quot;yii-widgets-baselistview#%24dataProvider-detail&quot;&gt;$dataProvider&lt;/a&gt; returns no data. The default value is false which displays an element according to the &lt;a href=&quot;yii-widgets-baselistview#%24emptyText-detail&quot;&gt;$emptyText&lt;/a&gt; and &lt;a href=&quot;yii-widgets-baselistview#%24emptyTextOptions-detail&quot;&gt;$emptyTextOptions&lt;/a&gt; properties.</source>
          <target state="translated">如果&lt;a href=&quot;yii-widgets-baselistview#%24dataProvider-detail&quot;&gt;$ dataProvider不&lt;/a&gt;返回任何数据，是否显示一个空列表视图。默认值为false，它根据&lt;a href=&quot;yii-widgets-baselistview#%24emptyText-detail&quot;&gt;$ emptyText&lt;/a&gt;和&lt;a href=&quot;yii-widgets-baselistview#%24emptyTextOptions-detail&quot;&gt;$ emptyTextOptions&lt;/a&gt;属性显示一个元素。</target>
        </trans-unit>
        <trans-unit id="cfae5d5c5c0118732e7baec09816caedb1bbdb24" translate="yes" xml:space="preserve">
          <source>Whether to show entry script name in the constructed URL.</source>
          <target state="translated">是否在构建的URL中显示入口脚本名称。</target>
        </trans-unit>
        <trans-unit id="148465d06f639a66cc856e289c943fdbef6983c9" translate="yes" xml:space="preserve">
          <source>Whether to show entry script name in the constructed URL. Defaults to &lt;code&gt;true&lt;/code&gt;. This property is used only if &lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;$enablePrettyUrl&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">是否在构造的URL中显示条目脚本名称。默认为 &lt;code&gt;true&lt;/code&gt; 。仅当&lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;$ enablePrettyUrl&lt;/a&gt;为 &lt;code&gt;true&lt;/code&gt; 时,才使用此属性。</target>
        </trans-unit>
        <trans-unit id="633498653ae10601822095ae62c2241860ba177d" translate="yes" xml:space="preserve">
          <source>Whether to show the footer section of the grid table.</source>
          <target state="translated">是否显示网格表的页脚部分。</target>
        </trans-unit>
        <trans-unit id="cf0d29e473bbb14b2ab6493dea3754087804d6a5" translate="yes" xml:space="preserve">
          <source>Whether to show the grid view if &lt;a href=&quot;yii-widgets-baselistview#%24dataProvider-detail&quot;&gt;$dataProvider&lt;/a&gt; returns no data.</source>
          <target state="translated">&lt;a href=&quot;yii-widgets-baselistview#%24dataProvider-detail&quot;&gt;$ dataProvider不&lt;/a&gt;返回数据时是否显示网格视图。</target>
        </trans-unit>
        <trans-unit id="ec3ffb5ac1e2b80cc09b52c476af16f0c5a07d4e" translate="yes" xml:space="preserve">
          <source>Whether to show the header section of the grid table.</source>
          <target state="translated">是否显示网格表的表头部分。</target>
        </trans-unit>
        <trans-unit id="e946c0c6e6c53ddd6f9ab60960216539ad8e447a" translate="yes" xml:space="preserve">
          <source>Whether to shuffle &lt;a href=&quot;yii-db-connection#%24masters-detail&quot;&gt;$masters&lt;/a&gt; before getting one.</source>
          <target state="translated">是否在获得&lt;a href=&quot;yii-db-connection#%24masters-detail&quot;&gt;$ masters&lt;/a&gt;之前先对其进行洗牌。</target>
        </trans-unit>
        <trans-unit id="67db1c4bd20986547b4dbd57553cf30a550f0986" translate="yes" xml:space="preserve">
          <source>Whether to skip empty strings between delimiters. Default is false.</source>
          <target state="translated">是否跳过定界符之间的空字符串。默认为false。</target>
        </trans-unit>
        <trans-unit id="3b1235404139b209ef83536cfb403b0648abc415" translate="yes" xml:space="preserve">
          <source>Whether to skip this behavior when the &lt;code&gt;$owner&lt;/code&gt; has not been modified</source>
          <target state="translated">在未修改 &lt;code&gt;$owner&lt;/code&gt; 时是否跳过此行为</target>
        </trans-unit>
        <trans-unit id="958c22ee229c73771d89d9c58ade5e8498c0ba38" translate="yes" xml:space="preserve">
          <source>Whether to skip this validator if the input is empty.</source>
          <target state="translated">如果输入为空,是否跳过该验证器。</target>
        </trans-unit>
        <trans-unit id="dce30379ca4c973fc4eab125aea2c1e773fae531" translate="yes" xml:space="preserve">
          <source>Whether to skip this validator if the value being validated is empty.</source>
          <target state="translated">如果被验证的值为空,是否跳过这个验证器。</target>
        </trans-unit>
        <trans-unit id="d0ce33d02034039948137ca517d7e963ada69577" translate="yes" xml:space="preserve">
          <source>Whether to skip typecasting of &lt;code&gt;null&lt;/code&gt; values.</source>
          <target state="translated">是否跳过 &lt;code&gt;null&lt;/code&gt; 值的类型转换。</target>
        </trans-unit>
        <trans-unit id="6373ee2fa66c6f2283c53d93f378eb0b478ee3d7" translate="yes" xml:space="preserve">
          <source>Whether to skip typecasting of &lt;code&gt;null&lt;/code&gt; values. If enabled attribute value which equals to &lt;code&gt;null&lt;/code&gt; will not be type-casted (e.g. &lt;code&gt;null&lt;/code&gt; remains &lt;code&gt;null&lt;/code&gt;), otherwise it will be converted according to the type configured at &lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24attributeTypes-detail&quot;&gt;$attributeTypes&lt;/a&gt;.</source>
          <target state="translated">是否跳过 &lt;code&gt;null&lt;/code&gt; 值的类型转换。如果启用的等于 &lt;code&gt;null&lt;/code&gt; 的属性值将不会进行类型转换（例如 &lt;code&gt;null&lt;/code&gt; 仍然为 &lt;code&gt;null&lt;/code&gt; ），否则将根据&lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24attributeTypes-detail&quot;&gt;$ attributeTypes&lt;/a&gt;配置的类型进行转换。</target>
        </trans-unit>
        <trans-unit id="3f084ad2e83835cc52923217d64cd2d1396078ab" translate="yes" xml:space="preserve">
          <source>Whether to sort messages by keys when merging new messages with the existing ones.</source>
          <target state="translated">合并新邮件和现有邮件时,是否按键排序。</target>
        </trans-unit>
        <trans-unit id="c8e382add76a6f4118a0130a3b956badbaf7d45b" translate="yes" xml:space="preserve">
          <source>Whether to sort messages by keys when merging new messages with the existing ones. Defaults to false, which means the new (untranslated) messages will be separated from the old (translated) ones.</source>
          <target state="translated">合并新邮件和现有邮件时,是否按键排序,默认为false,即新邮件(未翻译的)和旧邮件(已翻译的)分开。默认为false,这意味着新的(未翻译的)邮件将与旧的(翻译的)邮件分开。</target>
        </trans-unit>
        <trans-unit id="d98b9de13badda63035db1bdd8f531fe20ae5050" translate="yes" xml:space="preserve">
          <source>Whether to specially handle AJAX (and PJAX) requests. Defaults to true, meaning if the current request is an AJAX or PJAX request, then calling this method will cause the browser to redirect to the given URL. If this is false, a &lt;code&gt;Location&lt;/code&gt; header will be sent, which when received as an AJAX/PJAX response, may NOT cause browser redirection. Takes effect only when request header &lt;code&gt;X-Ie-Redirect-Compatibility&lt;/code&gt; is absent.</source>
          <target state="translated">是否专门处理AJAX（和PJAX）请求。默认为true，表示如果当前请求是AJAX或PJAX请求，则调用此方法将导致浏览器重定向到给定的URL。如果为false，将发送一个 &lt;code&gt;Location&lt;/code&gt; 标头，当它作为AJAX / PJAX响应接收时，可能不会导致浏览器重定向。仅在不存在请求标头 &lt;code&gt;X-Ie-Redirect-Compatibility&lt;/code&gt; 时有效。</target>
        </trans-unit>
        <trans-unit id="79e0933ce304dc84f1a3675ad493ce41f38743fb" translate="yes" xml:space="preserve">
          <source>Whether to stop validation once first error among attribute value elements is detected.</source>
          <target state="translated">是否在检测到属性值元素中的第一个错误时停止验证。</target>
        </trans-unit>
        <trans-unit id="52d1b1d6dfce770400f2647fdf134b4d08b0b0b2" translate="yes" xml:space="preserve">
          <source>Whether to stop validation once first error among attribute value elements is detected. When enabled validation will produce single error message on attribute, when disabled - multiple error messages mya appear: one per each invalid value. Note that this option will affect only &lt;a href=&quot;yii-validators-eachvalidator#validateAttribute()-detail&quot;&gt;validateAttribute()&lt;/a&gt; value, while &lt;a href=&quot;yii-validators-eachvalidator#validateValue()-detail&quot;&gt;validateValue()&lt;/a&gt; will not be affected.</source>
          <target state="translated">一旦检测到属性值元素中的第一个错误，是否停止验证。启用验证后，将在属性上产生一条错误消息，而禁用时，将显示多条错误消息mya：每个无效值一个。请注意，此选项将仅影响&lt;a href=&quot;yii-validators-eachvalidator#validateAttribute()-detail&quot;&gt;validateAttribute（）&lt;/a&gt;值，而&lt;a href=&quot;yii-validators-eachvalidator#validateValue()-detail&quot;&gt;validateValue（）&lt;/a&gt;不会受到影响。</target>
        </trans-unit>
        <trans-unit id="3db42303325341569645c9077abbc84629652335" translate="yes" xml:space="preserve">
          <source>Whether to throw a &lt;a href=&quot;yii-web-badrequesthttpexception&quot;&gt;yii\web\BadRequestHttpException&lt;/a&gt; if the body is invalid json</source>
          <target state="translated">如果正文无效，是否抛出&lt;a href=&quot;yii-web-badrequesthttpexception&quot;&gt;yii \ web \ BadRequestHttpException&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4169d6a2ca826605bd03f9a201fa011eca26b65b" translate="yes" xml:space="preserve">
          <source>Whether to throw an exception if &lt;code&gt;$id&lt;/code&gt; is not registered with the locator before.</source>
          <target state="translated">如果 &lt;code&gt;$id&lt;/code&gt; 之前未在定位器中注册，是否引发异常。</target>
        </trans-unit>
        <trans-unit id="754054080fc885eb741bea3ac9e397bac34c26c2" translate="yes" xml:space="preserve">
          <source>Whether to throw an exception if the given alias is invalid. If this is false and an invalid alias is given, false will be returned by this method.</source>
          <target state="translated">如果给定的别名无效,是否抛出异常。如果为false,并且给出的别名无效,本方法将返回false。</target>
        </trans-unit>
        <trans-unit id="50981e11399aafcf4dba934f17e83c59c5a5b018" translate="yes" xml:space="preserve">
          <source>Whether to throw exception if the relation does not exist.</source>
          <target state="translated">如果关系不存在,是否抛出异常。</target>
        </trans-unit>
        <trans-unit id="135838a42a483bace72a7d98c8f84a2ba14e90ba" translate="yes" xml:space="preserve">
          <source>Whether to treat behaviors' methods as methods of this component</source>
          <target state="translated">是否将行为的方法视为本组件的方法</target>
        </trans-unit>
        <trans-unit id="59b0432117f400654d0eabe21dc19762cdc15b12" translate="yes" xml:space="preserve">
          <source>Whether to treat behaviors' properties as properties of this component</source>
          <target state="translated">是否将行为的属性作为该组件的属性。</target>
        </trans-unit>
        <trans-unit id="770da47c262802e72ba197d9e69c77aa1e0e9dfa" translate="yes" xml:space="preserve">
          <source>Whether to treat member variables as properties</source>
          <target state="translated">是否将成员变量视为属性</target>
        </trans-unit>
        <trans-unit id="8f44f468c0f31f2eb18fceb8c59cc3a64b53d403" translate="yes" xml:space="preserve">
          <source>Whether to treat the string being truncated as HTML and preserve proper HTML tags. This parameter is available since version 2.0.1.</source>
          <target state="translated">是否将被截断的字符串视为HTML,并保留适当的HTML标签。这个参数从2.0.1版本开始可用。</target>
        </trans-unit>
        <trans-unit id="a7a5d6299ba38efc8fe61880a4ae2db276f6487e" translate="yes" xml:space="preserve">
          <source>Whether to trim each element. Can be:</source>
          <target state="translated">是否对每个元素进行修剪。可以是。</target>
        </trans-unit>
        <trans-unit id="f1d10f0c6336e9623bd1efeb3116ca84458c963d" translate="yes" xml:space="preserve">
          <source>Whether to turn on or off the integrity check.</source>
          <target state="translated">是否开启或关闭诚信检查。</target>
        </trans-unit>
        <trans-unit id="855e717797c84852a402a239d60851bf702cdbc4" translate="yes" xml:space="preserve">
          <source>Whether to turn on prepare emulation.</source>
          <target state="translated">是否开启准备仿真。</target>
        </trans-unit>
        <trans-unit id="25fb32008aede1a7882d1d4abc0c190a8948648a" translate="yes" xml:space="preserve">
          <source>Whether to turn on prepare emulation. Defaults to false, meaning PDO will use the native prepare support if available. For some databases (such as MySQL), this may need to be set true so that PDO can emulate the prepare support to bypass the buggy native prepare support. The default value is null, which means the PDO ATTR_EMULATE_PREPARES value will not be changed.</source>
          <target state="translated">是否开启准备模拟。默认值为false,意味着PDO将使用本地的prepare支持(如果有的话)。对于一些数据库(比如MySQL),这可能需要设置为true,这样PDO就可以模拟prepare支持,以绕过错误的本地prepare支持。默认值是null,这意味着PDO ATTR_EMULATE_PREPARES的值不会被改变。</target>
        </trans-unit>
        <trans-unit id="761ad58cac36579cbf24429269f34ad707b5d8a7" translate="yes" xml:space="preserve">
          <source>Whether to use JSONP response format.</source>
          <target state="translated">是否使用JSONP响应格式。</target>
        </trans-unit>
        <trans-unit id="32b6af86e3f1aa881da90edb2cf05576d1b7d59e" translate="yes" xml:space="preserve">
          <source>Whether to use JSONP response format. When this is true, the &lt;a href=&quot;yii-web-response#%24data-detail&quot;&gt;response data&lt;/a&gt; must be an array consisting of &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;callback&lt;/code&gt; members. The latter should be a JavaScript function name while the former will be passed to this function as a parameter.</source>
          <target state="translated">是否使用JSONP响应格式。如果为真，则&lt;a href=&quot;yii-web-response#%24data-detail&quot;&gt;响应数据&lt;/a&gt;必须是一个由 &lt;code&gt;data&lt;/code&gt; 和 &lt;code&gt;callback&lt;/code&gt; 成员组成的数组。后者应为JavaScript函数名称，而前者将作为参数传递给此函数。</target>
        </trans-unit>
        <trans-unit id="0b089b762ca6a840cf4b2e94b595d2906b35236c" translate="yes" xml:space="preserve">
          <source>Whether to use a persistent connection.</source>
          <target state="translated">是否使用持久连接。</target>
        </trans-unit>
        <trans-unit id="9c6868e0c341858c826d00d4060c21c88ecfdf5a" translate="yes" xml:space="preserve">
          <source>Whether to use a persistent connection. This is used by memcache only.</source>
          <target state="translated">是否使用持久连接。这只被memcache使用。</target>
        </trans-unit>
        <trans-unit id="36007c4df263a608242872fdf5caf41e5f5f9be3" translate="yes" xml:space="preserve">
          <source>Whether to use and validate auth 'nonce' parameter in authentication flow.</source>
          <target state="translated">是否在认证流程中使用和验证 auth 'nonce' 参数。</target>
        </trans-unit>
        <trans-unit id="01abfceb99dbe9e5aba0b4b7e7b97a332354f0bb" translate="yes" xml:space="preserve">
          <source>Whether to use and validate auth 'state' parameter in authentication flow.</source>
          <target state="translated">是否在认证流程中使用和验证 auth 'state' 参数。</target>
        </trans-unit>
        <trans-unit id="fe942b8a0dbc4692f2511610283ec7538d35821c" translate="yes" xml:space="preserve">
          <source>Whether to use and validate auth 'state' parameter in authentication flow. If enabled - the opaque value will be generated and applied to auth URL to maintain state between the request and callback. The authorization server includes this value, when redirecting the user-agent back to the client. The option is used for preventing cross-site request forgery.</source>
          <target state="translated">是否在认证流程中使用和验证auth'state'参数。如果启用-不透明的值将被生成并应用于 auth URL,以保持请求和回调之间的状态。当把用户代理重定向回客户端时,授权服务器会包含这个值。该选项用于防止跨站请求伪造。</target>
        </trans-unit>
        <trans-unit id="49a36566fdc1c6a4d9a7719e54da93b7cd89d602" translate="yes" xml:space="preserve">
          <source>Whether to use apcu or apc as the underlying caching extension.</source>
          <target state="translated">是否使用apcu或apc作为底层缓存扩展。</target>
        </trans-unit>
        <trans-unit id="adaf16d0cc9822c47465b0813bb6bf3050d160f7" translate="yes" xml:space="preserve">
          <source>Whether to use apcu or apc as the underlying caching extension. If true, &lt;a href=&quot;http://pecl.php.net/package/apcu&quot;&gt;apcu&lt;/a&gt; will be used. If false, &lt;a href=&quot;http://pecl.php.net/package/apc&quot;&gt;apc&lt;/a&gt; will be used. Defaults to false.</source>
          <target state="translated">是否使用apcu或apc作为基础缓存扩展。如果为true，将使用&lt;a href=&quot;http://pecl.php.net/package/apcu&quot;&gt;apcu&lt;/a&gt;。如果为false，将使用&lt;a href=&quot;http://pecl.php.net/package/apc&quot;&gt;apc&lt;/a&gt;。默认为false。</target>
        </trans-unit>
        <trans-unit id="33605220b3aa3a4dfd8873b05ddcbc51d0024884" translate="yes" xml:space="preserve">
          <source>Whether to use apcu or apc as the underlying caching extension. If true, &lt;a href=&quot;https://pecl.php.net/package/apcu&quot;&gt;apcu&lt;/a&gt; will be used. If false, &lt;a href=&quot;https://pecl.php.net/package/apc&quot;&gt;apc&lt;/a&gt; will be used. Defaults to false.</source>
          <target state="translated">是否使用apcu或apc作为基础缓存扩展。如果为true，将使用&lt;a href=&quot;https://pecl.php.net/package/apcu&quot;&gt;apcu&lt;/a&gt;。如果为false，将使用&lt;a href=&quot;https://pecl.php.net/package/apc&quot;&gt;apc&lt;/a&gt;。默认为false。</target>
        </trans-unit>
        <trans-unit id="4e47945ec41cb3685eff24f242403ee8c7c27e8e" translate="yes" xml:space="preserve">
          <source>Whether to use big-endian when reading and writing an integer.</source>
          <target state="translated">读写整数时,是否使用大英字型。</target>
        </trans-unit>
        <trans-unit id="3f197d4e12c2eea039ea5c2e94a5cd29bd1a710a" translate="yes" xml:space="preserve">
          <source>Whether to use cookie to persist CSRF token.</source>
          <target state="translated">是否使用cookie来坚持CSRF标记。</target>
        </trans-unit>
        <trans-unit id="2fcb8ba0a83d9c87d3c34412b80e9652b11e1dae" translate="yes" xml:space="preserve">
          <source>Whether to use cookie to persist CSRF token. If false, CSRF token will be stored in session under the name of &lt;a href=&quot;yii-web-request#%24csrfParam-detail&quot;&gt;$csrfParam&lt;/a&gt;. Note that while storing CSRF tokens in session increases security, it requires starting a session for every page, which will degrade your site performance.</source>
          <target state="translated">是否使用cookie来保留CSRF令牌。如果为false，则CSRF令牌将以&lt;a href=&quot;yii-web-request#%24csrfParam-detail&quot;&gt;$ csrfParam&lt;/a&gt;的名称存储在会话中。请注意，虽然将CSRF令牌存储在会话中可提高安全性，但它需要为每个页面启动会话，这将降低站点性能。</target>
        </trans-unit>
        <trans-unit id="f046a633e9c55374bc55efbf1953d401c729a76b" translate="yes" xml:space="preserve">
          <source>Whether to use custom storage.</source>
          <target state="translated">是否使用自定义存储。</target>
        </trans-unit>
        <trans-unit id="396decd758ef6f5b8ef7702062b1c6a1439501f4" translate="yes" xml:space="preserve">
          <source>Whether to use error message composed by validator declared via &lt;a href=&quot;yii-validators-eachvalidator#%24rule-detail&quot;&gt;$rule&lt;/a&gt; if its validation fails.</source>
          <target state="translated">如果验证失败，是否使用通过&lt;a href=&quot;yii-validators-eachvalidator#%24rule-detail&quot;&gt;$ rule&lt;/a&gt;声明的验证器组成的错误消息。</target>
        </trans-unit>
        <trans-unit id="2b8239c010d660a9161dbed5f223f4abe875fb9c" translate="yes" xml:space="preserve">
          <source>Whether to use error message composed by validator declared via &lt;a href=&quot;yii-validators-eachvalidator#%24rule-detail&quot;&gt;$rule&lt;/a&gt; if its validation fails. If enabled, error message specified for this validator itself will appear only if attribute value is not an array. If disabled, own error message value will be used always.</source>
          <target state="translated">如果验证失败，是否使用通过&lt;a href=&quot;yii-validators-eachvalidator#%24rule-detail&quot;&gt;$ rule&lt;/a&gt;声明的验证器组成的错误消息。如果启用，则仅当属性值不是数组时，才会显示为此验证器本身指定的错误消息。如果禁用，则将始终使用自己的错误消息值。</target>
        </trans-unit>
        <trans-unit id="3aca42a0ed0ce34f81dd9be6a06060c72ecc075d" translate="yes" xml:space="preserve">
          <source>Whether to use memcached or memcache as the underlying caching extension.</source>
          <target state="translated">是否使用memcached或memcache作为底层缓存扩展。</target>
        </trans-unit>
        <trans-unit id="c13cc6cce2d6c6c2b9e5de2f8efe346d2bf46f2c" translate="yes" xml:space="preserve">
          <source>Whether to use memcached or memcache as the underlying caching extension. If true, &lt;a href=&quot;http://pecl.php.net/package/memcached&quot;&gt;memcached&lt;/a&gt; will be used. If false, &lt;a href=&quot;http://pecl.php.net/package/memcache&quot;&gt;memcache&lt;/a&gt; will be used. Defaults to false.</source>
          <target state="translated">是否使用memcached或memcache作为基础缓存扩展。如果为true，则将使用&lt;a href=&quot;http://pecl.php.net/package/memcached&quot;&gt;memcached&lt;/a&gt;。如果为false，将使用&lt;a href=&quot;http://pecl.php.net/package/memcache&quot;&gt;内存缓存&lt;/a&gt;。默认为false。</target>
        </trans-unit>
        <trans-unit id="5f041c5131fad584dcf1bf4c6c17894ba2bb302a" translate="yes" xml:space="preserve">
          <source>Whether to use memcached or memcache as the underlying caching extension. If true, &lt;a href=&quot;https://pecl.php.net/package/memcached&quot;&gt;memcached&lt;/a&gt; will be used. If false, &lt;a href=&quot;https://pecl.php.net/package/memcache&quot;&gt;memcache&lt;/a&gt; will be used. Defaults to false.</source>
          <target state="translated">是否使用memcached或memcache作为基础缓存扩展。如果为true，则将使用&lt;a href=&quot;https://pecl.php.net/package/memcached&quot;&gt;memcached&lt;/a&gt;。如果为false，则将使用&lt;a href=&quot;https://pecl.php.net/package/memcache&quot;&gt;内存缓存&lt;/a&gt;。默认为false。</target>
        </trans-unit>
        <trans-unit id="8949c1f608f6a96a0232a82f525a8e81996c81d2" translate="yes" xml:space="preserve">
          <source>Whether to use session to persist authentication status across multiple requests.</source>
          <target state="translated">是否使用会话在多个请求中坚持认证状态。</target>
        </trans-unit>
        <trans-unit id="f6b63fc3d01df1cbbd3c830c4725180aaac5b75d" translate="yes" xml:space="preserve">
          <source>Whether to use session to persist authentication status across multiple requests. You set this property to be &lt;code&gt;false&lt;/code&gt; if your application is stateless, which is often the case for RESTful APIs.</source>
          <target state="translated">是否使用会话在多个请求之间保留身份验证状态。如果您的应用程序是无状态的，则将此属性设置为 &lt;code&gt;false&lt;/code&gt; ，对于RESTful API来说通常是这种情况。</target>
        </trans-unit>
        <trans-unit id="f96e79c2430684973ddc9dc17818212a496da2e7" translate="yes" xml:space="preserve">
          <source>Whether to use symbolic link to publish asset files.</source>
          <target state="translated">是否使用符号链接来发布资产文件。</target>
        </trans-unit>
        <trans-unit id="631ec552b4b274f41e757eafbc2a22773b7f478e" translate="yes" xml:space="preserve">
          <source>Whether to use symbolic link to publish asset files. Defaults to false, meaning asset files are copied to &lt;a href=&quot;yii-web-assetmanager#%24basePath-detail&quot;&gt;$basePath&lt;/a&gt;. Using symbolic links has the benefit that the published assets will always be consistent with the source assets and there is no copy operation required. This is especially useful during development.</source>
          <target state="translated">是否使用符号链接发布资产文件。默认为false，表示资产文件复制到&lt;a href=&quot;yii-web-assetmanager#%24basePath-detail&quot;&gt;$ basePath&lt;/a&gt;。使用符号链接的好处是发布的资产将始终与源资产保持一致，并且不需要复制操作。这在开发期间特别有用。</target>
        </trans-unit>
        <trans-unit id="c8a5407951a3dfa13fc1a9b4f80b8a27a32223ab" translate="yes" xml:space="preserve">
          <source>Whether to use the file extension to determine the MIME type in case &lt;code&gt;finfo_open()&lt;/code&gt; cannot determine it.</source>
          <target state="translated">在 &lt;code&gt;finfo_open()&lt;/code&gt; 无法确定MIME类型的情况下，是否使用文件扩展名来确定MIME类型。</target>
        </trans-unit>
        <trans-unit id="cd685bd5b00c46cead844b45bc6094c9cbb05efd" translate="yes" xml:space="preserve">
          <source>Whether to use transparent background.</source>
          <target state="translated">是否使用透明背景。</target>
        </trans-unit>
        <trans-unit id="30a050bb48bb59a12a528505798a3c36d9be0718" translate="yes" xml:space="preserve">
          <source>Whether to use transparent background. Defaults to false.</source>
          <target state="translated">是否使用透明背景。默认为false。</target>
        </trans-unit>
        <trans-unit id="74a8318ca45bcad61f3a9c43c52e2e8e4143bcec" translate="yes" xml:space="preserve">
          <source>Whether to validate given attribute orders against &lt;a href=&quot;yii-data-sort#%24attributes-detail&quot;&gt;$attributes&lt;/a&gt; and &lt;a href=&quot;yii-data-sort#%24enableMultiSort-detail&quot;&gt;$enableMultiSort&lt;/a&gt;. If validation is enabled incorrect entries will be removed.</source>
          <target state="translated">是否根据&lt;a href=&quot;yii-data-sort#%24attributes-detail&quot;&gt;$ attributes&lt;/a&gt;和&lt;a href=&quot;yii-data-sort#%24enableMultiSort-detail&quot;&gt;$ enableMultiSort&lt;/a&gt;验证给定的属性顺序。如果启用了验证，则将删除不正确的条目。</target>
        </trans-unit>
        <trans-unit id="3ad1af387f32a35b68029f4917948792950f3143" translate="yes" xml:space="preserve">
          <source>Whether to validate page size.</source>
          <target state="translated">是否验证页面大小。</target>
        </trans-unit>
        <trans-unit id="14fe2a544d10eb815e04254e07013389bb053080" translate="yes" xml:space="preserve">
          <source>Whether to validate required attributes.</source>
          <target state="translated">是否验证所需属性。</target>
        </trans-unit>
        <trans-unit id="4166cf2e51a299f12b8a51dd016319b08e8ee288" translate="yes" xml:space="preserve">
          <source>Whether to validate the page number. Note that in order to validate the page number, both &lt;a href=&quot;yii-data-pagination#%24validatePage-detail&quot;&gt;$validatePage&lt;/a&gt; and this parameter must be true.</source>
          <target state="translated">是否验证页码。请注意，为了验证页码，&lt;a href=&quot;yii-data-pagination#%24validatePage-detail&quot;&gt;$ validatePage&lt;/a&gt;和此参数都必须为true。</target>
        </trans-unit>
        <trans-unit id="46e99aa8ebd011e204808fdf000d0c6bf000a0c3" translate="yes" xml:space="preserve">
          <source>Whether to validate/decrypt JWS received with Auth token.</source>
          <target state="translated">是否验证/解密用Auth令牌接收的JWS。</target>
        </trans-unit>
        <trans-unit id="1d388968862e1c842caac3abbf72575a1caa5d91" translate="yes" xml:space="preserve">
          <source>Whether to validate/decrypt JWS received with Auth token. Note: this functionality requires &lt;code&gt;spomky-labs/jose&lt;/code&gt; composer package to be installed. You can disable this option in case of usage of trusted OpenIDConnect provider, however this violates the protocol rules, so you are doing it on your own risk.</source>
          <target state="translated">是否验证/解密使用Auth令牌收到的JWS。注意：此功能需要安装 &lt;code&gt;spomky-labs/jose&lt;/code&gt; composer软件包。如果使用受信任的OpenIDConnect提供程序，则可以禁用此选项，但是这违反了协议规则，因此，后果自负。</target>
        </trans-unit>
        <trans-unit id="9aa2caca5dce6b9bed5600c93c510952260e8506" translate="yes" xml:space="preserve">
          <source>Whether to verify the peer's certificate.</source>
          <target state="translated">是否验证同行的证书。</target>
        </trans-unit>
        <trans-unit id="7755beb2119acf6fab15c13ca412dd85ff7a62fe" translate="yes" xml:space="preserve">
          <source>Whether to wrap the &lt;code&gt;GridView&lt;/code&gt; or &lt;code&gt;ListView&lt;/code&gt; widget with the &lt;code&gt;yii\widgets\Pjax&lt;/code&gt; widget</source>
          <target state="translated">使用 &lt;code&gt;yii\widgets\Pjax&lt;/code&gt; 小部件包装 &lt;code&gt;GridView&lt;/code&gt; 或 &lt;code&gt;ListView&lt;/code&gt; 小部件</target>
        </trans-unit>
        <trans-unit id="46646287efa50376022d9fc2afb76a3353e20ffc" translate="yes" xml:space="preserve">
          <source>Whether trailing slash should be normalized according to the suffix settings of the rule</source>
          <target state="translated">是否应根据规则的后缀设置对斜线进行归一化。</target>
        </trans-unit>
        <trans-unit id="ed3b3af16468371a67e6db847d7323d8a5220c0f" translate="yes" xml:space="preserve">
          <source>Whether transparent sid support is enabled or not, defaults to false.</source>
          <target state="translated">是否启用透明侧边支持,默认为false。</target>
        </trans-unit>
        <trans-unit id="a96d5cc841b2def86ad147ec95aaf6c76688f158" translate="yes" xml:space="preserve">
          <source>Whether transparent sid support is enabled or not.</source>
          <target state="translated">是否启用透明侧边支持。</target>
        </trans-unit>
        <trans-unit id="6fd0026b774d9fb60339336e4a0ed0a291f1098d" translate="yes" xml:space="preserve">
          <source>Whether user confirmed</source>
          <target state="translated">用户是否确认</target>
        </trans-unit>
        <trans-unit id="cfed50da24c3e13583ba9f28d56d9dd087d7f9c1" translate="yes" xml:space="preserve">
          <source>Whether user confirmed. Will return true if &lt;a href=&quot;yii-console-controller#%24interactive-detail&quot;&gt;$interactive&lt;/a&gt; is false.</source>
          <target state="translated">用户是否确认。如果&lt;a href=&quot;yii-console-controller#%24interactive-detail&quot;&gt;$ interactive&lt;/a&gt;为false，则将返回true 。</target>
        </trans-unit>
        <trans-unit id="4fd56daef6ed7988873680b19b8b034fea879c7b" translate="yes" xml:space="preserve">
          <source>Whether validation process should take into account IDN (internationalized domain names).</source>
          <target state="translated">验证过程是否应考虑到IDN(国际化域名)。</target>
        </trans-unit>
        <trans-unit id="c7e882f39f6d9049ee9aca59adacbda510a57ebb" translate="yes" xml:space="preserve">
          <source>Whether validation process should take into account IDN (internationalized domain names). Defaults to false meaning that validation of URLs containing IDN will always fail. Note that in order to use IDN validation you have to install and enable &lt;code&gt;intl&lt;/code&gt; PHP extension, otherwise an exception would be thrown.</source>
          <target state="translated">验证过程是否应考虑IDN（国际化域名）。默认值为false，表示包含IDN的URL的验证将始终失败。请注意，为了使用IDN验证，您必须安装并启用 &lt;code&gt;intl&lt;/code&gt; PHP扩展，否则将引发异常。</target>
        </trans-unit>
        <trans-unit id="f9fc17b7d9d806882121478ace3b5fb0bb1d7760" translate="yes" xml:space="preserve">
          <source>Whether validation process should take into account IDN (internationalized domain names). Defaults to false meaning that validation of emails containing IDN will always fail. Note that in order to use IDN validation you have to install and enable &lt;code&gt;intl&lt;/code&gt; PHP extension, otherwise an exception would be thrown.</source>
          <target state="translated">验证过程是否应考虑IDN（国际化域名）。默认值为false，表示包含IDN的电子邮件的验证将始终失败。请注意，为了使用IDN验证，您必须安装并启用 &lt;code&gt;intl&lt;/code&gt; PHP扩展，否则将引发异常。</target>
        </trans-unit>
        <trans-unit id="459b22ca830c44a11fe710e1a01c240784329118" translate="yes" xml:space="preserve">
          <source>Whether value is checked or not.</source>
          <target state="translated">值是否被选中。</target>
        </trans-unit>
        <trans-unit id="d8ae1004a7366dbc01d002af06aff04fd4f0f75d" translate="yes" xml:space="preserve">
          <source>Whether you should generate the content for caching. False if the cached version is available.</source>
          <target state="translated">是否应该生成内容进行缓存。如果缓存版本可用,则为假。</target>
        </trans-unit>
        <trans-unit id="cab8ee5923b49a774a0c77258c1ba6fdfd572e04" translate="yes" xml:space="preserve">
          <source>Which generates a &lt;a href=&quot;yii-widgets-pjax&quot;&gt;Pjax&lt;/a&gt; widget wrapping the &lt;a href=&quot;yii-grid-gridview&quot;&gt;GridView&lt;/a&gt; or &lt;a href=&quot;yii-widgets-listview&quot;&gt;ListView&lt;/a&gt; widgets.</source>
          <target state="translated">生成一个包装&lt;a href=&quot;yii-grid-gridview&quot;&gt;GridView&lt;/a&gt;或&lt;a href=&quot;yii-widgets-listview&quot;&gt;ListView&lt;/a&gt;小部件的&lt;a href=&quot;yii-widgets-pjax&quot;&gt;Pjax&lt;/a&gt;小部件。</target>
        </trans-unit>
        <trans-unit id="2190e6427b4480e864be549307878e2677b05bbf" translate="yes" xml:space="preserve">
          <source>Which page of articles will be returned in the above example? It depends on whether a query parameter named &lt;code&gt;page&lt;/code&gt; is given. By default, the pagination will attempt to set the &lt;a href=&quot;yii-data-pagination#%24page-detail&quot;&gt;current page&lt;/a&gt; to be the value of the &lt;code&gt;page&lt;/code&gt; parameter. If the parameter is not provided, then it will default to 0.</source>
          <target state="translated">上面的示例将返回哪一页文章？这取决于是否给出了名为 &lt;code&gt;page&lt;/code&gt; 的查询参数。默认情况下，分页将尝试将&lt;a href=&quot;yii-data-pagination#%24page-detail&quot;&gt;当前页面&lt;/a&gt;设置为 &lt;code&gt;page&lt;/code&gt; 参数的值。如果未提供该参数，则它将默认为0。</target>
        </trans-unit>
        <trans-unit id="91cea9cc85fd609cfe474d77a1eb7d7c729ea206" translate="yes" xml:space="preserve">
          <source>While behaviors are similar to &lt;a href=&quot;http://www.php.net/traits&quot;&gt;traits&lt;/a&gt; in that they both &quot;inject&quot; their properties and methods to the primary class, they differ in many aspects. As explained below, they both have pros and cons. They are more like complements to each other rather than alternatives.</source>
          <target state="translated">尽管行为与&lt;a href=&quot;http://www.php.net/traits&quot;&gt;特征&lt;/a&gt;相似，因为它们都将其属性和方法&amp;ldquo;注入&amp;rdquo;了小学班级，但它们在许多方面都存在差异。如下所述，它们都有优点和缺点。它们更像是相互补充而不是替代。</target>
        </trans-unit>
        <trans-unit id="23aa393365637e1e864d9299df5f8568da7bdea6" translate="yes" xml:space="preserve">
          <source>While collections can be represented as arrays, it is usually more desirable to represent them as &lt;a href=&quot;guide-output-data-providers&quot;&gt;data providers&lt;/a&gt;. This is because data providers support sorting and pagination of resources, which is a commonly needed feature for RESTful APIs returning collections. For example, the following action returns a data provider about the post resources:</source>
          <target state="translated">尽管可以将集合表示为数组，但通常更希望将它们表示为&lt;a href=&quot;guide-output-data-providers&quot;&gt;数据提供者&lt;/a&gt;。这是因为数据提供程序支持资源的排序和分页，这是RESTful API返回集合的常用功能。例如，以下操作将返回有关帖子资源的数据提供者：</target>
        </trans-unit>
        <trans-unit id="a9cbbda878853303089b0dc4451f82cfb3c8ba5f" translate="yes" xml:space="preserve">
          <source>While command line options allow us to configure the migration command on-the-fly, sometimes we may want to configure the command once for all. For example you can configure different migration path as follows:</source>
          <target state="translated">虽然命令行选项允许我们即时配置迁移命令,但有时我们可能希望一次性配置该命令。例如,你可以配置不同的迁移路径,如下所示。</target>
        </trans-unit>
        <trans-unit id="3ac6648c51889e0d050ee982eb19b4dc3dfb31f1" translate="yes" xml:space="preserve">
          <source>While components are very powerful, they are a bit heavier than normal objects, due to the fact that it takes extra memory and CPU time to support &lt;a href=&quot;guide-concept-events&quot;&gt;event&lt;/a&gt; and &lt;a href=&quot;guide-concept-behaviors&quot;&gt;behavior&lt;/a&gt; functionality in particular. If your components do not need these two features, you may consider extending your component class from &lt;a href=&quot;yii-base-object&quot;&gt;yii\base\Object&lt;/a&gt; instead of &lt;a href=&quot;yii-base-component&quot;&gt;yii\base\Component&lt;/a&gt;. Doing so will make your components as efficient as normal PHP objects, but with added support for &lt;a href=&quot;guide-concept-properties&quot;&gt;properties&lt;/a&gt;.</source>
          <target state="translated">尽管组件非常强大，但它们要比普通对象重一些，这是因为它需要额外的内存和CPU时间才能特别支持&lt;a href=&quot;guide-concept-events&quot;&gt;事件&lt;/a&gt;和&lt;a href=&quot;guide-concept-behaviors&quot;&gt;行为&lt;/a&gt;功能。如果您的组件不需要这两个功能，则可以考虑从&lt;a href=&quot;yii-base-object&quot;&gt;yii \ base \ Object&lt;/a&gt;而不是&lt;a href=&quot;yii-base-component&quot;&gt;yii \ base \ Component&lt;/a&gt;扩展组件类。这样做将使您的组件像普通的PHP对象一样高效，但是增加了对&lt;a href=&quot;guide-concept-properties&quot;&gt;properties的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="6e72799df6252c18c250f6a52facefccd8b6f0c3" translate="yes" xml:space="preserve">
          <source>While declaring a relation, you should specify the following information:</source>
          <target state="translated">当声明一个关系时,你应该指定以下信息。</target>
        </trans-unit>
        <trans-unit id="da7cbdd5bb8deaaa1e0fcf6e1d0bf6cd2260dc51" translate="yes" xml:space="preserve">
          <source>While extending this class you should use &lt;a href=&quot;yii-web-multifieldsession#composeFields()-detail&quot;&gt;composeFields()&lt;/a&gt; method - while writing the session data into the storage and &lt;a href=&quot;yii-web-multifieldsession#extractData()-detail&quot;&gt;extractData()&lt;/a&gt; - while reading session data from the storage.</source>
          <target state="translated">在扩展此类时，您应使用&lt;a href=&quot;yii-web-multifieldsession#composeFields()-detail&quot;&gt;composeFields（）&lt;/a&gt;方法- 将会话数据写入存储设备中，并使用&lt;a href=&quot;yii-web-multifieldsession#extractData()-detail&quot;&gt;extractData（）&lt;/a&gt; -从存储器中读取会话数据。</target>
        </trans-unit>
        <trans-unit id="058845bb7318a903a1f78f0b79e4c038d7f53872" translate="yes" xml:space="preserve">
          <source>While not required, it is recommended that you develop your RESTful APIs as a separate application, different from your Web front end and back end for easier maintenance.</source>
          <target state="translated">虽然不是必须的,但建议您将RESTful API作为一个单独的应用程序来开发,与Web前端和后端不同,以便于维护。</target>
        </trans-unit>
        <trans-unit id="49a39f2723bd7a6ab7e1301fb22c82ae42728e57" translate="yes" xml:space="preserve">
          <source>While operating namespaced migrations: creating new, reverting and so on, you should specify full namespace before migration name. Note that backslash (&lt;code&gt;\&lt;/code&gt;) symbol is usually considered a special character in the shell, so you need to escape it properly to avoid shell errors or incorrect behavior. For example:</source>
          <target state="translated">在进行命名空间迁移：创建新的，还原等操作时，应在迁移名称之前指定完整的命名空间。请注意，反斜杠（ &lt;code&gt;\&lt;/code&gt; ）符号通常被认为是shell中的特殊字符，因此您需要正确地对其进行转义，以避免shell错误或不正确的行为。例如：</target>
        </trans-unit>
        <trans-unit id="703eb2920b33fa5508876fd8c09ded149c181465" translate="yes" xml:space="preserve">
          <source>While performing complex DB migrations, it is important to ensure each migration to either succeed or fail as a whole so that the database can maintain integrity and consistency. To achieve this goal, it is recommended that you enclose the DB operations of each migration in a &lt;a href=&quot;guide-db-dao#performing-transactions&quot;&gt;transaction&lt;/a&gt;.</source>
          <target state="translated">在执行复杂的数据库迁移时，重要的是确保每次迁移总体上成功或失败，以便数据库可以保持完整性和一致性。为了实现此目标，建议将每个迁移的数据库操作都包含在一个&lt;a href=&quot;guide-db-dao#performing-transactions&quot;&gt;事务中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="418659a3e370787740509218db4eddc996310b6a" translate="yes" xml:space="preserve">
          <source>While retrieving data in terms of Active Record objects is convenient and flexible, it is not always desirable when you have to bring back a large amount of data due to the big memory footprint. In this case, you can retrieve data using PHP arrays by calling &lt;a href=&quot;yii-db-activequerytrait#asArray()-detail&quot;&gt;asArray()&lt;/a&gt; before executing a query method:</source>
          <target state="translated">尽管根据Active Record对象检索数据既方便又灵活，但由于内存占用量大，当您必须取回大量数据时，这并不总是可取的。在这种情况下，可以通过在执行查询方法之前调用&lt;a href=&quot;yii-db-activequerytrait#asArray()-detail&quot;&gt;asArray（）&lt;/a&gt;来使用PHP数组检索数据：</target>
        </trans-unit>
        <trans-unit id="53c56ad62ca4ffe6e8929cf91322f7dc6ac45c2d" translate="yes" xml:space="preserve">
          <source>While the &lt;a href=&quot;https://github.com/yiisoft/yii2-app-basic&quot;&gt;basic&lt;/a&gt; and &lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced&quot;&gt;advanced&lt;/a&gt; project templates are great for most of your needs, you may want to create your own project template with which to start your projects.</source>
          <target state="translated">虽然&lt;a href=&quot;https://github.com/yiisoft/yii2-app-basic&quot;&gt;基本&lt;/a&gt;项目模板和&lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced&quot;&gt;高级&lt;/a&gt;项目模板非常适合您的大多数需求，但您可能希望创建自己的项目模板来启动项目。</target>
        </trans-unit>
        <trans-unit id="488e5acceea0fd6213782c7e277a8f5034755a5d" translate="yes" xml:space="preserve">
          <source>While the response body can be set explicitly as shown above, in most cases you may set it implicitly by the return value of &lt;a href=&quot;guide-structure-controllers&quot;&gt;action&lt;/a&gt; methods. A common use case is like the following:</source>
          <target state="translated">尽管可以如上所示显式设置响应主体，但在大多数情况下，您可以通过&lt;a href=&quot;guide-structure-controllers&quot;&gt;操作&lt;/a&gt;方法的返回值隐式设置它。常见的用例如下：</target>
        </trans-unit>
        <trans-unit id="37f8ca2ac9741a7c099e9a2922e9db3041f1f003" translate="yes" xml:space="preserve">
          <source>While the test first approach described above makes sense for long term and relatively complex projects it could be overkill for simpler ones. There are some indicators of when it's appropriate:</source>
          <target state="translated">虽然上述先测试的方法对于长期和相对复杂的项目来说是有意义的,但对于较简单的项目来说可能是矫枉过正。有一些指标表明什么时候是合适的。</target>
        </trans-unit>
        <trans-unit id="bd0866e89adb5ec57adadb53a58de549f98050df" translate="yes" xml:space="preserve">
          <source>While there is no restriction in how to represent a resource, in Yii you usually would represent resources in terms of objects of &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt; or its child classes (e.g. &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt;), for the following reasons:</source>
          <target state="translated">尽管对资源的表示方式没有任何限制，但是在Yii中，通常会以yii &lt;a href=&quot;yii-base-model&quot;&gt;\ base \ Model&lt;/a&gt;或其子类（例如&lt;a href=&quot;yii-db-activerecord&quot;&gt;yii \ db \ ActiveRecord&lt;/a&gt;）的对象来表示资源，原因如下：</target>
        </trans-unit>
        <trans-unit id="25293b48cb0c3c9cf1b98bcac075f72d980bd732" translate="yes" xml:space="preserve">
          <source>While translating a message containing placeholders, you should leave the placeholders as is. This is because the placeholders will be replaced with the actual values when you call &lt;code&gt;Yii::t()&lt;/code&gt; to translate a message.</source>
          <target state="translated">翻译包含占位符的消息时，应将占位符保持原样。这是因为当您调用 &lt;code&gt;Yii::t()&lt;/code&gt; 转换消息时，占位符将被替换为实际值。</target>
        </trans-unit>
        <trans-unit id="482591f248063210d75260903482293534b71cf0" translate="yes" xml:space="preserve">
          <source>Widget Configurations</source>
          <target state="translated">小工具配置</target>
        </trans-unit>
        <trans-unit id="85aba13ed51d3d3056a7bd9fbc9c958408d0ff8a" translate="yes" xml:space="preserve">
          <source>Widget declarations</source>
          <target state="translated">小工具声明</target>
        </trans-unit>
        <trans-unit id="312cebe45503d8085bd2d9f729d3c0fc71c14b63" translate="yes" xml:space="preserve">
          <source>Widget is the base class for widgets.</source>
          <target state="translated">Widget是widget的基础类。</target>
        </trans-unit>
        <trans-unit id="5b78f8abff763821bb5d645ad47188f1387890ad" translate="yes" xml:space="preserve">
          <source>WidgetEvent represents the event parameter used for a widget event.</source>
          <target state="translated">WidgetEvent表示用于widget事件的事件参数。</target>
        </trans-unit>
        <trans-unit id="bf8a6678a1e36e3d2c45861b80308b477e3345ac" translate="yes" xml:space="preserve">
          <source>Widgets</source>
          <target state="translated">Widgets</target>
        </trans-unit>
        <trans-unit id="cffd2384691af3d453dc3379c940f70f8670b254" translate="yes" xml:space="preserve">
          <source>Widgets are an object-oriented way of reusing view code.</source>
          <target state="translated">Widgets是一种面向对象的重用视图代码的方式。</target>
        </trans-unit>
        <trans-unit id="ef94fdd03b167e0f663e177021f511f940f6e32b" translate="yes" xml:space="preserve">
          <source>Widgets are primarily used in &lt;a href=&quot;guide-structure-views&quot;&gt;views&lt;/a&gt;. You can call the &lt;a href=&quot;yii-base-widget#widget()-detail&quot;&gt;yii\base\Widget::widget()&lt;/a&gt; method to use a widget in a view. The method takes a &lt;a href=&quot;guide-concept-configurations&quot;&gt;configuration&lt;/a&gt; array for initializing the widget and returns the rendering result of the widget. For example, the following code inserts a date picker widget which is configured to use the Russian language and keep the input in the &lt;code&gt;from_date&lt;/code&gt; attribute of &lt;code&gt;$model&lt;/code&gt;.</source>
          <target state="translated">小部件主要用于&lt;a href=&quot;guide-structure-views&quot;&gt;视图中&lt;/a&gt;。您可以调用&lt;a href=&quot;yii-base-widget#widget()-detail&quot;&gt;yii \ base \ Widget :: widget（）&lt;/a&gt;方法在视图中使用小部件。该方法采用用于初始化小部件的&lt;a href=&quot;guide-concept-configurations&quot;&gt;配置&lt;/a&gt;数组，并返回小部件的渲染结果。例如，以下代码插入一个日期选择器小部件，该小部件配置为使用俄语，并将输入保留在 &lt;code&gt;$model&lt;/code&gt; 的 &lt;code&gt;from_date&lt;/code&gt; 属性中。</target>
        </trans-unit>
        <trans-unit id="4e498e47e752b7197d9cf3ccb8fc27f0555a8039" translate="yes" xml:space="preserve">
          <source>Widgets are reusable building blocks used in &lt;a href=&quot;guide-structure-views&quot;&gt;views&lt;/a&gt; to create complex and configurable user interface elements in an object-oriented fashion. For example, a date picker widget may generate a fancy date picker that allows users to pick a date as their input. All you need to do is just to insert the code in a view like the following:</source>
          <target state="translated">窗口小部件是&lt;a href=&quot;guide-structure-views&quot;&gt;视图&lt;/a&gt;中使用的可重用构建块，以面向对象的方式创建复杂且可配置的用户界面元素。例如，日期选择器小部件可以生成新的日期选择器，该日期选择器允许用户选择日期作为其输入。您所要做的只是将代码插入如下所示的视图中：</target>
        </trans-unit>
        <trans-unit id="9791f4d49784b8392afe2bd57d8eb6c2dced5633" translate="yes" xml:space="preserve">
          <source>Widgets should be designed to be self-contained. That is, when using a widget, you should be able to just drop it in a view without doing anything else. This could be tricky if a widget requires external resources, such as CSS, JavaScript, images, etc. Fortunately, Yii provides the support for &lt;a href=&quot;guide-structure-assets&quot;&gt;asset bundles&lt;/a&gt;, which can be utilized to solve the problem.</source>
          <target state="translated">小部件应设计成独立的。也就是说，使用小部件时，您应该可以将其放在视图中而无需执行其他任何操作。如果窗口小部件需要外部资源（例如CSS，JavaScript，图像等），这可能会很棘手。幸运的是，Yii提供了对&lt;a href=&quot;guide-structure-assets&quot;&gt;资产捆绑包&lt;/a&gt;的支持，可以用来解决问题。</target>
        </trans-unit>
        <trans-unit id="9cff755ecf76ecdf453b2da07c06d82632557ebe" translate="yes" xml:space="preserve">
          <source>Wildcard for name of the indexes to be dropped.</source>
          <target state="translated">要删除的索引名称的通配符。</target>
        </trans-unit>
        <trans-unit id="6cfab8bd9110fe306384006b86b7980ed701ffe6" translate="yes" xml:space="preserve">
          <source>Wildcard for name of the indexes to be dropped. You can use &lt;code&gt;*&lt;/code&gt; to drop all indexes.</source>
          <target state="translated">通配符，用于删除索引的名称。您可以使用 &lt;code&gt;*&lt;/code&gt; 删除所有索引。</target>
        </trans-unit>
        <trans-unit id="47012c3373245303d8c36f7288bad5c7bad68c8a" translate="yes" xml:space="preserve">
          <source>Will be prefixed to the formatted duration, when it is negative. Defaults to &lt;code&gt;-&lt;/code&gt;.</source>
          <target state="translated">如果为负，则将以格式化的持续时间为前缀。默认为 &lt;code&gt;-&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="228b47e253230a96ed54e8b98e7817a0f4b0509c" translate="yes" xml:space="preserve">
          <source>Will be used to concatenate duration parts. Defaults to &lt;code&gt;, &lt;/code&gt;.</source>
          <target state="translated">将用于连接持续时间部分。默认为 &lt;code&gt;, &lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee242b5c836fdaebe8bfca1d26b69f3c9e3b62d0" translate="yes" xml:space="preserve">
          <source>Will return a string formatted with the given ANSI style</source>
          <target state="translated">将返回一个以给定ANSI样式格式化的字符串。</target>
        </trans-unit>
        <trans-unit id="64a0eb6c9100d5ea682e9ffccdd013605c0682da" translate="yes" xml:space="preserve">
          <source>Will show a cursor again when it has been hidden by &lt;a href=&quot;yii-helpers-baseconsole#hideCursor()-detail&quot;&gt;hideCursor()&lt;/a&gt; by sending ANSI DECTCEM code ?25h to the terminal.</source>
          <target state="translated">通过将ANSI DECTCEM代码？25h发送到终端，当&lt;a href=&quot;yii-helpers-baseconsole#hideCursor()-detail&quot;&gt;hideCursor（）&lt;/a&gt;隐藏了光标时，它将再次显示。</target>
        </trans-unit>
        <trans-unit id="4ccc342c8167185214b24a1f8f94151f16c75446" translate="yes" xml:space="preserve">
          <source>WinCache provides Windows Cache caching in terms of an application component.</source>
          <target state="translated">WinCache以应用组件的方式提供Windows Cache缓存。</target>
        </trans-unit>
        <trans-unit id="6c6346a9a8cdad51da6b1425d043e4364c0a2100" translate="yes" xml:space="preserve">
          <source>Wiring Up</source>
          <target state="translated">接线</target>
        </trans-unit>
        <trans-unit id="b0736768bcf581ba0e50c14871bca0312475c202" translate="yes" xml:space="preserve">
          <source>With Composer installed, you can install Yii application template by running the following command under a Web-accessible folder:</source>
          <target state="translated">安装好Composer后,你可以在一个Web可访问的文件夹下运行以下命令来安装Yii应用模板。</target>
        </trans-unit>
        <trans-unit id="8dc1c463f733d321131852c23eab1829438d6dab" translate="yes" xml:space="preserve">
          <source>With a fully specified &lt;a href=&quot;yii-data-pagination&quot;&gt;yii\data\Pagination&lt;/a&gt; object, you can retrieve and display data partially. For example, if you are fetching data from a database, you can specify the &lt;code&gt;OFFSET&lt;/code&gt; and &lt;code&gt;LIMIT&lt;/code&gt; clause of the DB query with the corresponding values provided by the pagination. Below is an example,</source>
          <target state="translated">使用完全指定的&lt;a href=&quot;yii-data-pagination&quot;&gt;yii \ data \ Pagination&lt;/a&gt;对象，您可以部分检索和显示数据。例如，如果要从数据库中获取数据，则可以使用分页提供的相应值来指定数据库查询的 &lt;code&gt;OFFSET&lt;/code&gt; 和 &lt;code&gt;LIMIT&lt;/code&gt; 子句。下面是一个例子</target>
        </trans-unit>
        <trans-unit id="4c0b1f9d3c4c32db8610bb589e3b76e5e7d80a0d" translate="yes" xml:space="preserve">
          <source>With index and column names</source>
          <target state="translated">有索引和列名</target>
        </trans-unit>
        <trans-unit id="47f73f3e3d93c486e03272513bd9fbeb84805c48" translate="yes" xml:space="preserve">
          <source>With multi-field data storage, session data can be split between several fields in the storage record. Using such a storage allows saving particular session data into separated field, which then can be used to manipulate sessions in the way plain PHP does not allow.</source>
          <target state="translated">通过多字段数据存储,会话数据可以在存储记录中的多个字段之间分割。使用这样的存储方式可以将特定的会话数据保存到单独的字段中,然后可以用普通PHP不允许的方式来操作会话。</target>
        </trans-unit>
        <trans-unit id="d1f077a86de9c0dde876ddb8db00e3ff36bdeb00" translate="yes" xml:space="preserve">
          <source>With resource and controller classes ready, you can access the resources using the URL like &lt;code&gt;http://localhost/index.php?r=user/create&lt;/code&gt;, similar to what you can do with normal Web applications.</source>
          <target state="translated">在准备好资源和控制器类之后，您可以使用诸如 &lt;code&gt;http://localhost/index.php?r=user/create&lt;/code&gt; 之类的URL访问资源，类似于使用普通Web应用程序可以执行的操作。</target>
        </trans-unit>
        <trans-unit id="ca6a4c45b4c63d7c517068947ee335d7451a8d3d" translate="yes" xml:space="preserve">
          <source>With that code in place, if you have a &lt;code&gt;User&lt;/code&gt; object and try to save it, you will find its &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; are automatically filled with the current UNIX timestamp:</source>
          <target state="translated">使用该代码后，如果您有一个 &lt;code&gt;User&lt;/code&gt; 对象并尝试保存它，则将发现它的 &lt;code&gt;created_at&lt;/code&gt; 和 &lt;code&gt;updated_at&lt;/code&gt; 自动被当前的UNIX时间戳填充：</target>
        </trans-unit>
        <trans-unit id="463104f4ad8315e9371caf925e8f206caaafdcab" translate="yes" xml:space="preserve">
          <source>With the above code you can use the &lt;a href=&quot;http://getbootstrap.com/components/#alerts&quot;&gt;bootstrap alert&lt;/a&gt; classes such as &lt;code&gt;success&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;danger&lt;/code&gt; as the flash message key to influence the color of the div.</source>
          <target state="translated">通过上面的代码，您可以将&lt;a href=&quot;http://getbootstrap.com/components/#alerts&quot;&gt;引导警报&lt;/a&gt;类（例如 &lt;code&gt;success&lt;/code&gt; ， &lt;code&gt;info&lt;/code&gt; ， &lt;code&gt;danger&lt;/code&gt; 用作Flash消息键来影响div的颜色。</target>
        </trans-unit>
        <trans-unit id="dc6328414ddb38769ea0f179fb43bcba6887c1cd" translate="yes" xml:space="preserve">
          <source>With the above code you can use the &lt;a href=&quot;https://getbootstrap.com/components/#alerts&quot;&gt;bootstrap alert&lt;/a&gt; classes such as &lt;code&gt;success&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;danger&lt;/code&gt; as the flash message key to influence the color of the div.</source>
          <target state="translated">通过上面的代码，您可以将&lt;a href=&quot;https://getbootstrap.com/components/#alerts&quot;&gt;bootstrap警报&lt;/a&gt;类（例如 &lt;code&gt;success&lt;/code&gt; ， &lt;code&gt;info&lt;/code&gt; ， &lt;code&gt;danger&lt;/code&gt; 用作闪存消息键来影响div的颜色。</target>
        </trans-unit>
        <trans-unit id="927db2964d2a977e88901a84adc25e2cc169ce06" translate="yes" xml:space="preserve">
          <source>With the above code, any calls to &lt;code&gt;bar()&lt;/code&gt; will trigger an event named &lt;code&gt;hello&lt;/code&gt;.</source>
          <target state="translated">使用上面的代码，对 &lt;code&gt;bar()&lt;/code&gt; 的任何调用都会触发一个名为 &lt;code&gt;hello&lt;/code&gt; 的事件。</target>
        </trans-unit>
        <trans-unit id="b24213199bc05ef499c173163ad16bc81ffa0722" translate="yes" xml:space="preserve">
          <source>With the above configuration, each time you run the migration command, the &lt;code&gt;backend_migration&lt;/code&gt; table will be used to record the migration history. You no longer need to specify it via the &lt;code&gt;migrationTable&lt;/code&gt; command-line option.</source>
          <target state="translated">通过以上配置，每次您运行迁移命令时，都会使用 &lt;code&gt;backend_migration&lt;/code&gt; 表记录迁移历史记录。您不再需要通过 &lt;code&gt;migrationTable&lt;/code&gt; 命令行选项来指定它。</target>
        </trans-unit>
        <trans-unit id="3dfc6373d949b173d344071de3bcc585e4edaaab" translate="yes" xml:space="preserve">
          <source>With the above configuration, the &lt;code&gt;site/offline&lt;/code&gt; action will be used to handle all incoming requests.</source>
          <target state="translated">通过上述配置， &lt;code&gt;site/offline&lt;/code&gt; 操作将用于处理所有传入请求。</target>
        </trans-unit>
        <trans-unit id="bfc9144b9aabd0ca3d4df9e01662c27fb081d4ff" translate="yes" xml:space="preserve">
          <source>With the above configuration, the asset manager will create a symbolic link to the source path of an asset bundle when it is being published. This is faster than file copying and can also ensure that the published assets are always up-to-date.</source>
          <target state="translated">有了上述配置,资产管理器将在发布资产包时,创建一个与该资产包源路径的符号链接,这比复制文件更快,也能确保发布的资产始终是最新的。这比文件复制更快,也可以确保发布的资产始终是最新的。</target>
        </trans-unit>
        <trans-unit id="313f5ff3c204461e99e6d9ff67d23266ed1888c1" translate="yes" xml:space="preserve">
          <source>With the above configuration, the number of source code lines to be displayed in exception pages will be up to 20.</source>
          <target state="translated">通过上述配置,在异常页面中显示的源代码行数最多为20行。</target>
        </trans-unit>
        <trans-unit id="e4b220371cd89a7e68de2951420c4a8f0af25ce3" translate="yes" xml:space="preserve">
          <source>With the above configuration, you will be able to access GiiModule in your browser using the URL &lt;code&gt;http://localhost/path/to/index.php?r=gii&lt;/code&gt;</source>
          <target state="translated">通过上述配置，您将能够使用URL &lt;code&gt;http://localhost/path/to/index.php?r=gii&lt;/code&gt; 在浏览器中访问GiiModule。</target>
        </trans-unit>
        <trans-unit id="619eb939bee483228abab3e537fee7889c85b221" translate="yes" xml:space="preserve">
          <source>With the above minimal amount of effort, you have already finished your task of creating the RESTful APIs for accessing the user data. The APIs you have created include:</source>
          <target state="translated">通过以上最小的努力,你已经完成了创建用于访问用户数据的RESTful API的任务。你所创建的API包括:</target>
        </trans-unit>
        <trans-unit id="7c84e03471ba45ace864b8c098f5cee74e3fe421" translate="yes" xml:space="preserve">
          <source>With the authorization data ready, access check is as simple as a call to the &lt;a href=&quot;yii-rbac-checkaccessinterface#checkAccess()-detail&quot;&gt;yii\rbac\ManagerInterface::checkAccess()&lt;/a&gt; method. Because most access check is about the current user, for convenience Yii provides a shortcut method &lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii\web\User::can()&lt;/a&gt;, which can be used like the following:</source>
          <target state="translated">准备好授权数据后，访问检查就像调用&lt;a href=&quot;yii-rbac-checkaccessinterface#checkAccess()-detail&quot;&gt;yii \ rbac \ ManagerInterface :: checkAccess（）&lt;/a&gt;方法一样简单。因为大多数访问检查都与当前用户有关，所以为了方便起见，Yii提供了一种快捷方式方法&lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii \ web \ User :: can（）&lt;/a&gt;，该方法可以如下使用：</target>
        </trans-unit>
        <trans-unit id="e547100de549e9ae5b7c4d475195d7734d2d36e7" translate="yes" xml:space="preserve">
          <source>With the configuration file, you can run the &lt;code&gt;asset&lt;/code&gt; command to combine and compress the asset files and then generate a new asset bundle configuration file &lt;code&gt;assets-prod.php&lt;/code&gt;:</source>
          <target state="translated">使用配置文件，您可以运行 &lt;code&gt;asset&lt;/code&gt; 命令来组合和压缩资产文件，然后生成一个新的资产捆绑包配置文件 &lt;code&gt;assets-prod.php&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="1c560be9009c7cfb3d758310277addd1771a899a" translate="yes" xml:space="preserve">
          <source>With the template defined, create a Git repository from it, and push your files there. If you're going to open source your template, &lt;a href=&quot;http://github.com&quot;&gt;Github&lt;/a&gt; is the best place to host it. If you intend to keep your template non-collaborative, any Git repository site will do.</source>
          <target state="translated">定义好模板后，从中创建一个Git存储库，然后将文件推送到那里。如果您要开源您的模板，&lt;a href=&quot;http://github.com&quot;&gt;Github&lt;/a&gt;是托管它的最佳位置。如果您打算使模板保持非协作性，则任何Git存储库站点都可以。</target>
        </trans-unit>
        <trans-unit id="05662ee2a08a65e711fa2c4286649aab8228e504" translate="yes" xml:space="preserve">
          <source>With the template defined, create a Git repository from it, and push your files there. If you're going to open source your template, &lt;a href=&quot;https://github.com&quot;&gt;Github&lt;/a&gt; is the best place to host it. If you intend to keep your template non-collaborative, any Git repository site will do.</source>
          <target state="translated">定义好模板后，从中创建一个Git存储库，然后将文件推送到那里。如果您要开源您的模板，&lt;a href=&quot;https://github.com&quot;&gt;Github&lt;/a&gt;是托管它的最佳位置。如果您打算使模板保持非协作性，则任何Git存储库站点都可以。</target>
        </trans-unit>
        <trans-unit id="b616ff17be43259a209f2b305793af183556ca45" translate="yes" xml:space="preserve">
          <source>With these environment constants, you may specify your configurations conditionally based on the current environment. For example, your application configuration may contain the following code to enable the &lt;a href=&quot;guide-tool-debugger&quot;&gt;debug toolbar and debugger&lt;/a&gt; in development environment.</source>
          <target state="translated">使用这些环境常量，您可以根据当前环境有条件地指定配置。例如，您的应用程序配置可能包含以下代码，以在开发环境中启用&lt;a href=&quot;guide-tool-debugger&quot;&gt;调试工具栏和调试器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="69fa6efba05a8fbedd7e83e7a88e7472f353e325" translate="yes" xml:space="preserve">
          <source>With this code, in case 'ordersCount' is present in 'select' statement - &lt;code&gt;Customer::ordersCount&lt;/code&gt; will be populated by query results, otherwise it will be calculated on demand using &lt;code&gt;Customer::orders&lt;/code&gt; relation.</source>
          <target state="translated">使用此代码，如果'select'语句中出现' &lt;code&gt;Customer::ordersCount&lt;/code&gt; 查询结果将填充Customer :: ordersCount，否则将使用 &lt;code&gt;Customer::orders&lt;/code&gt; 关系按需计算。</target>
        </trans-unit>
        <trans-unit id="08d21fbfe05f79e1ea627a63cdb37cc7274f1127" translate="yes" xml:space="preserve">
          <source>With this modified relation declaration, we will have:</source>
          <target state="translated">有了这个修改后的关系声明,我们将拥有:</target>
        </trans-unit>
        <trans-unit id="4f810ed41e7c6236cd40c8262baf7260b21906b0" translate="yes" xml:space="preserve">
          <source>Within &lt;a href=&quot;guide-structure-controllers&quot;&gt;controllers&lt;/a&gt;, you may call the following controller methods to render views:</source>
          <target state="translated">在&lt;a href=&quot;guide-structure-controllers&quot;&gt;controllers中&lt;/a&gt;，您可以调用以下控制器方法来呈现视图：</target>
        </trans-unit>
        <trans-unit id="69c3eab1e3d4f22c896d027b66fb19b0e184300f" translate="yes" xml:space="preserve">
          <source>Within &lt;a href=&quot;guide-structure-widgets&quot;&gt;widgets&lt;/a&gt;, you may call the following widget methods to render views.</source>
          <target state="translated">在&lt;a href=&quot;guide-structure-widgets&quot;&gt;小部件内&lt;/a&gt;，您可以调用以下小部件方法来呈现视图。</target>
        </trans-unit>
        <trans-unit id="033dfb5f0b3e5d54bacd5a110e1c15551ce6a82d" translate="yes" xml:space="preserve">
          <source>Within a layout, you have access to two predefined variables: &lt;code&gt;$this&lt;/code&gt; and &lt;code&gt;$content&lt;/code&gt;. The former refers to the &lt;a href=&quot;yii-base-view&quot;&gt;view&lt;/a&gt; component, like in normal views, while the latter contains the rendering result of a content view which is rendered by calling the &lt;a href=&quot;yii-base-controller#render()-detail&quot;&gt;render()&lt;/a&gt; method in controllers.</source>
          <target state="translated">在布局中，您可以访问两个预定义变量： &lt;code&gt;$this&lt;/code&gt; 和 &lt;code&gt;$content&lt;/code&gt; 。前者是指&lt;a href=&quot;yii-base-view&quot;&gt;视图&lt;/a&gt;组件，就像在普通视图中一样，而后者包含内容视图的呈现结果，该内容视图是通过在控制器中调用&lt;a href=&quot;yii-base-controller#render()-detail&quot;&gt;render（）&lt;/a&gt;方法来呈现的。</target>
        </trans-unit>
        <trans-unit id="22313fcc2f9793528d17842aa8c4d24402fd8de8" translate="yes" xml:space="preserve">
          <source>Within a module, you may often need to get the instance of the &lt;a href=&quot;#module-classes&quot;&gt;module class&lt;/a&gt; so that you can access the module ID, module parameters, module components, etc. You can do so by using the following statement:</source>
          <target state="translated">在模块内，您可能经常需要获取&lt;a href=&quot;#module-classes&quot;&gt;模块类&lt;/a&gt;的实例，以便可以访问模块ID，模块参数，模块组件等。您可以使用以下语句进行访问：</target>
        </trans-unit>
        <trans-unit id="0340d410c81d3fad111a5d9c17e70e07b409c4f6" translate="yes" xml:space="preserve">
          <source>Within a view, you can access &lt;code&gt;$this&lt;/code&gt; which refers to the &lt;a href=&quot;yii-web-view&quot;&gt;view component&lt;/a&gt; managing and rendering this view template.</source>
          <target state="translated">在视图中，您可以访问 &lt;code&gt;$this&lt;/code&gt; ，它是指管理和呈现此视图模板的&lt;a href=&quot;yii-web-view&quot;&gt;视图组件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f4363354298da1a040c8c9e93866d5515f3aa4ac" translate="yes" xml:space="preserve">
          <source>Within each PHP script, the message translations are returned as an array like the following:</source>
          <target state="translated">在每个PHP脚本中,消息翻译会以如下数组的形式返回。</target>
        </trans-unit>
        <trans-unit id="424f529052842f464b851de04ac10804bc0ac1f2" translate="yes" xml:space="preserve">
          <source>Within each migration, the &lt;a href=&quot;yii-db-migration#up()-detail&quot;&gt;up()&lt;/a&gt; method should be overridden to contain the logic for &quot;upgrading&quot; the database; while the &lt;a href=&quot;yii-db-migration#down()-detail&quot;&gt;down()&lt;/a&gt; method for the &quot;downgrading&quot; logic. The &quot;yii migrate&quot; command manages all available migrations in an application.</source>
          <target state="translated">在每次迁移中，应该覆盖&lt;a href=&quot;yii-db-migration#up()-detail&quot;&gt;up（）&lt;/a&gt;方法以包含用于&amp;ldquo;升级&amp;rdquo;数据库的逻辑。而&lt;a href=&quot;yii-db-migration#down()-detail&quot;&gt;down（）&lt;/a&gt;方法用于&amp;ldquo;降级&amp;rdquo;逻辑。&amp;ldquo; yii migration&amp;rdquo;命令管理应用程序中所有可用的迁移。</target>
        </trans-unit>
        <trans-unit id="602d5f8c65396eb88f2d49295d416e7669aac2a8" translate="yes" xml:space="preserve">
          <source>Within each migration, the &lt;a href=&quot;yii-db-migrationinterface#up()-detail&quot;&gt;up()&lt;/a&gt; method should be overridden to contain the logic for &quot;upgrading&quot; the database; while the &lt;a href=&quot;yii-db-migrationinterface#down()-detail&quot;&gt;down()&lt;/a&gt; method for the &quot;downgrading&quot; logic.</source>
          <target state="translated">在每次迁移中，应该覆盖&lt;a href=&quot;yii-db-migrationinterface#up()-detail&quot;&gt;up（）&lt;/a&gt;方法以包含用于&amp;ldquo;升级&amp;rdquo;数据库的逻辑。而&lt;a href=&quot;yii-db-migrationinterface#down()-detail&quot;&gt;down（）&lt;/a&gt;方法用于&amp;ldquo;降级&amp;rdquo;逻辑。</target>
        </trans-unit>
        <trans-unit id="3990eda509f604cc8237f6d8fa656794400cedf4" translate="yes" xml:space="preserve">
          <source>Without using default configurations, you would have to configure &lt;code&gt;maxButtonCount&lt;/code&gt; in every place where you use link pagers.</source>
          <target state="translated">如果不使用默认配置，则必须在使用链接寻呼机的每个位置配置 &lt;code&gt;maxButtonCount&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21edbde7cc97c2cee6e2c05790bc787e0c7dfb9d" translate="yes" xml:space="preserve">
          <source>Without using optional parameters, you would have to create 4 rules to achieve the same result.</source>
          <target state="translated">如果不使用可选参数,你将不得不创建4条规则来实现同样的结果。</target>
        </trans-unit>
        <trans-unit id="42661197f53bca11db1805e51c2a882afa32c920" translate="yes" xml:space="preserve">
          <source>Word wrap text with indentation to fit the screen size</source>
          <target state="translated">缩进文字的Word包装,以适应屏幕尺寸。</target>
        </trans-unit>
        <trans-unit id="f8bf3bb5dddf67736d59fb91fbc37d03a76f0fa3" translate="yes" xml:space="preserve">
          <source>Words in the ID may be concatenated using the specified character (defaults to '-'). For example, 'PostTag' will be converted to 'post-tag'.</source>
          <target state="translated">ID中的单词可以使用指定的字符进行连接(默认为'-')。例如,'PostTag'将被转换为'post-tag'。</target>
        </trans-unit>
        <trans-unit id="849777795d70bc865ac9e99bd4846b56a40329d3" translate="yes" xml:space="preserve">
          <source>Words in the ID separated by &lt;code&gt;$separator&lt;/code&gt; (defaults to '-') will be concatenated into a CamelCase name. For example, 'post-tag' is converted to 'PostTag'.</source>
          <target state="translated">用 &lt;code&gt;$separator&lt;/code&gt; 的ID中的单词（默认为'-'）将串联为CamelCase名称。例如，&amp;ldquo; post-tag&amp;rdquo;将转换为&amp;ldquo; PostTag&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="3bab60d4ed48a51dcd92f3b5336180a2b0568251" translate="yes" xml:space="preserve">
          <source>Working with Client Scripts</source>
          <target state="translated">使用客户端脚本</target>
        </trans-unit>
        <trans-unit id="32fa96c34f69d098e3a5e51e7141385ea3afc95f" translate="yes" xml:space="preserve">
          <source>Working with Data Keys</source>
          <target state="translated">使用数据键</target>
        </trans-unit>
        <trans-unit id="40856931ad4365155b94e252d58baa8f7753d55b" translate="yes" xml:space="preserve">
          <source>Working with Database Schema</source>
          <target state="translated">使用数据库模式</target>
        </trans-unit>
        <trans-unit id="75b5f72bfeb317217ee7d4824c8df2915e44b9a3" translate="yes" xml:space="preserve">
          <source>Working with Databases</source>
          <target state="translated">使用数据库</target>
        </trans-unit>
        <trans-unit id="5894f048934eae6a5c0380476d8796987b6f212d" translate="yes" xml:space="preserve">
          <source>Working with Passwords</source>
          <target state="translated">使用密码</target>
        </trans-unit>
        <trans-unit id="c2e13a5b4d10168c3ba99550396f54f298f970ea" translate="yes" xml:space="preserve">
          <source>Working with Pjax</source>
          <target state="translated">与Pjax一起工作</target>
        </trans-unit>
        <trans-unit id="b47e12cf4554820d96c1738de48bfc8275d55408" translate="yes" xml:space="preserve">
          <source>Working with Relational Data</source>
          <target state="translated">使用关系型数据</target>
        </trans-unit>
        <trans-unit id="6194fa3c8591d4473faac753afbced1a527919dc" translate="yes" xml:space="preserve">
          <source>Working with Transactions</source>
          <target state="translated">使用交易</target>
        </trans-unit>
        <trans-unit id="afbb4af2bebbb0780938be0e03b7fbadd2fa038c" translate="yes" xml:space="preserve">
          <source>Working with model relations</source>
          <target state="translated">使用模型关系</target>
        </trans-unit>
        <trans-unit id="85de1a3572505da83317cb31d04001c94e59d586" translate="yes" xml:space="preserve">
          <source>Wrap every text message that needs to be translated in a call to the &lt;a href=&quot;yii-baseyii#t()-detail&quot;&gt;Yii::t()&lt;/a&gt; method.</source>
          <target state="translated">在对&lt;a href=&quot;yii-baseyii#t()-detail&quot;&gt;Yii :: t（）&lt;/a&gt;方法的调用中包装所有需要翻译的文本消息。</target>
        </trans-unit>
        <trans-unit id="08b42059f689ebbec8035338b083cabc2bcacc30" translate="yes" xml:space="preserve">
          <source>Wrapping with &lt;code&gt;begin()&lt;/code&gt; and &lt;code&gt;end()&lt;/code&gt;</source>
          <target state="translated">用 &lt;code&gt;begin()&lt;/code&gt; 和 &lt;code&gt;end()&lt;/code&gt; 包装</target>
        </trans-unit>
        <trans-unit id="1bb850ce921c35aacbdfb5baa787e3e23bf7e573" translate="yes" xml:space="preserve">
          <source>Write bytes.</source>
          <target state="translated">写字节。</target>
        </trans-unit>
        <trans-unit id="6dd43c3706b58740503d2aeef37421e5da350576" translate="yes" xml:space="preserve">
          <source>Write concern to be used in this command.</source>
          <target state="translated">写关注要在这个命令中使用。</target>
        </trans-unit>
        <trans-unit id="2f40a1983e85c56fa543e5fd59830fc70101a426" translate="yes" xml:space="preserve">
          <source>Write concern, it can be an instance of \MongoDB\Driver\WriteConcern or its scalar mode value, for example: &lt;code&gt;majority&lt;/code&gt;.</source>
          <target state="translated">编写关注点，它可以是\ MongoDB \ Driver \ WriteConcern的实例或其标量模式值，例如： &lt;code&gt;majority&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="acd7228c33f440031b184d50870d3f2e0e1dd4ac" translate="yes" xml:space="preserve">
          <source>Write example:</source>
          <target state="translated">写例子。</target>
        </trans-unit>
        <trans-unit id="bd5d6e112130f4c8deb70a424432fc17d3a86863" translate="yes" xml:space="preserve">
          <source>Write result.</source>
          <target state="translated">写出结果。</target>
        </trans-unit>
        <trans-unit id="bb847cc42de076c44e94f172fca9a612dd6f0377" translate="yes" xml:space="preserve">
          <source>Write simple code to make the new test pass.</source>
          <target state="translated">编写简单的代码,使新的测试通过。</target>
        </trans-unit>
        <trans-unit id="154fdaa8328a28ebdc9b773ae51867b8c1b2af6f" translate="yes" xml:space="preserve">
          <source>Writes a 4-byte integer.</source>
          <target state="translated">写一个4字节的整数。</target>
        </trans-unit>
        <trans-unit id="11a73af4769d2fa84714761c91018f9161b700b9" translate="yes" xml:space="preserve">
          <source>Writes a string.</source>
          <target state="translated">写一个字符串。</target>
        </trans-unit>
        <trans-unit id="9ba1f1d74f5c1ac121132cc2e6452100c4ad6198" translate="yes" xml:space="preserve">
          <source>Writes category messages into PHP file</source>
          <target state="translated">将分类信息写入PHP文件</target>
        </trans-unit>
        <trans-unit id="e54e60b8a60792fce7cc57883db7005dfaee3337" translate="yes" xml:space="preserve">
          <source>Writes log messages to a file.</source>
          <target state="translated">将日志信息写入文件。</target>
        </trans-unit>
        <trans-unit id="2d6ac2e64fadd65eb26f82d5fbd24389c4728752" translate="yes" xml:space="preserve">
          <source>Writes log messages to syslog</source>
          <target state="translated">将日志信息写入syslog</target>
        </trans-unit>
        <trans-unit id="660599bd3f2428633f3d514aac3945c1ccfe98f9" translate="yes" xml:space="preserve">
          <source>Writes messages into PHP files</source>
          <target state="translated">将信息写入PHP文件</target>
        </trans-unit>
        <trans-unit id="93de633593d4203835e358fd842d1112a4cf4ff9" translate="yes" xml:space="preserve">
          <source>Writes messages into PO file</source>
          <target state="translated">将信息写入PO文件</target>
        </trans-unit>
        <trans-unit id="b2eec8f272ce96571f29fb32650978cd7e0e843c" translate="yes" xml:space="preserve">
          <source>Writes messages into POT file</source>
          <target state="translated">将信息写入POT文件</target>
        </trans-unit>
        <trans-unit id="156205b7b2e6155a5f457339633750b74553c74d" translate="yes" xml:space="preserve">
          <source>Writes the the internal file content into the given filename.</source>
          <target state="translated">将内部文件内容写入给定的文件名中。</target>
        </trans-unit>
        <trans-unit id="364f6a013fda0343cffefe2885a2cf0edab35aa9" translate="yes" xml:space="preserve">
          <source>Writes to stream.</source>
          <target state="translated">写到流。</target>
        </trans-unit>
        <trans-unit id="166d73f27af9d00dc9e803f6da305e2a2f6f1bfa" translate="yes" xml:space="preserve">
          <source>X-Sendfile is a feature allowing a web application to redirect the request for a file to the webserver that in turn processes the request, this way eliminating the need to perform tasks like reading the file and sending it to the user. When dealing with a lot of files (or very big files) this can lead to a great increase in performance as the web application is allowed to terminate earlier while the webserver is handling the request.</source>
          <target state="translated">X-Sendfile是一个允许web应用程序将文件请求重定向到web服务器的功能,web服务器再处理该请求,这样就不需要执行读取文件并将其发送给用户的任务。当处理大量文件(或非常大的文件)时,这可以极大地提高性能,因为web应用程序可以在web服务器处理请求时提前终止。</target>
        </trans-unit>
        <trans-unit id="6070d8cc9e11ddb116e80447e89abde16eb0daf3" translate="yes" xml:space="preserve">
          <source>XCache provides XCache caching in terms of an application component.</source>
          <target state="translated">XCache以应用组件的方式提供XCache缓存。</target>
        </trans-unit>
        <trans-unit id="75820fa671bd61b82ff3bc48099ef1668f2bbd79" translate="yes" xml:space="preserve">
          <source>XML array representation.</source>
          <target state="translated">XML数组表示。</target>
        </trans-unit>
        <trans-unit id="59d6a2c74603c87cb341e8daef0fe3c7027c7a40" translate="yes" xml:space="preserve">
          <source>XML format</source>
          <target state="translated">XML格式</target>
        </trans-unit>
        <trans-unit id="a1f447e8855e6147d18cd81c216857626deaf189" translate="yes" xml:space="preserve">
          <source>XSS or cross-site scripting happens when output isn't escaped properly when outputting HTML to the browser. For example, if user can enter his name and instead of &lt;code&gt;Alexander&lt;/code&gt; he enters &lt;code&gt;&amp;lt;script&amp;gt;alert('Hello!');&amp;lt;/script&amp;gt;&lt;/code&gt;, every page that outputs user name without escaping it will execute JavaScript &lt;code&gt;alert('Hello!');&lt;/code&gt; resulting in alert box popping up in a browser. Depending on website instead of innocent alert such script could send messages using your name or even perform bank transactions.</source>
          <target state="translated">当将HTML输出到浏览器时，如果没有正确地转义输出，则会发生XSS或跨站点脚本。例如，如果用户可以输入自己的姓名，而不是输入 &lt;code&gt;Alexander&lt;/code&gt; ，而是输入 &lt;code&gt;&amp;lt;script&amp;gt;alert('Hello!');&amp;lt;/script&amp;gt;&lt;/code&gt; ，则每个输出用户名但不转义的页面都将执行JavaScript &lt;code&gt;alert('Hello!');&lt;/code&gt; 导致警报框在浏览器中弹出。取决于网站而不是无辜的警报，此类脚本可以使用您的姓名发送消息，甚至执行银行交易。</target>
        </trans-unit>
        <trans-unit id="6008cc12286051c5280905725a57fdd493a308f7" translate="yes" xml:space="preserve">
          <source>Xml to process.</source>
          <target state="translated">要处理的Xml。</target>
        </trans-unit>
        <trans-unit id="d44711c321b4d22c83b40c25894526bc8cf6c6d0" translate="yes" xml:space="preserve">
          <source>XmlResponseFormatter formats the given data into an XML response content.</source>
          <target state="translated">XmlResponseFormatter将给定的数据格式化为XML响应内容。</target>
        </trans-unit>
        <trans-unit id="1e7ca5865fcb6142a8a0e3e6caead22a2b77ab64" translate="yes" xml:space="preserve">
          <source>Xterm color code</source>
          <target state="translated">Xterm颜色代码</target>
        </trans-unit>
        <trans-unit id="81c393ae57d5693d0a977bc46365285e50d36b57" translate="yes" xml:space="preserve">
          <source>Yii</source>
          <target state="translated">Yii</target>
        </trans-unit>
        <trans-unit id="c9c3c4d31b3d2483dd199152c6feaa92bd6b269c" translate="yes" xml:space="preserve">
          <source>Yii DAO provides a whole set of methods to let you manipulate the database schema, such as creating new tables, dropping a column from a table, etc. These methods are listed as follows:</source>
          <target state="translated">Yii DAO提供了一整套方法来让你操作数据库模式,如创建新表,从表中删除一列等。这些方法列举如下。</target>
        </trans-unit>
        <trans-unit id="32202174582de194588967cc9e2b0950a5cf9451" translate="yes" xml:space="preserve">
          <source>Yii DAO supports the following databases out of box:</source>
          <target state="translated">Yii DAO支持以下数据库。</target>
        </trans-unit>
        <trans-unit id="52c9eacec45e42e3bbe3b2e5241551ac1fa050d0" translate="yes" xml:space="preserve">
          <source>Yii DAO will automatically convert such constructs into the corresponding quoted column or table names using the DBMS specific syntax. For example,</source>
          <target state="translated">Yii DAO将使用DBMS的特定语法自动将这些构造转换成相应的引号列或表名。例如</target>
        </trans-unit>
        <trans-unit id="d2f68000c3bee36fc8192c1c3aaad73e1c5e6ebe" translate="yes" xml:space="preserve">
          <source>Yii JavaScript Modules</source>
          <target state="translated">Yii JavaScript模块</target>
        </trans-unit>
        <trans-unit id="ba0954d623cf1b1ea0c81211fd58fbf520c5feb1" translate="yes" xml:space="preserve">
          <source>Yii PHP Framework Version 2</source>
          <target state="translated">Yii PHP框架第2版</target>
        </trans-unit>
        <trans-unit id="9681832bdc28ca16445fbca21ea349d417c5587f" translate="yes" xml:space="preserve">
          <source>Yii allows composition of the actual mail messages content via special view files. By default these files should be located at &lt;code&gt;@app/mail&lt;/code&gt; path.</source>
          <target state="translated">Yii允许通过特殊的视图文件来组成实际邮件内容。默认情况下，这些文件应位于 &lt;code&gt;@app/mail&lt;/code&gt; 路径。</target>
        </trans-unit>
        <trans-unit id="59414b68d2468e5060c2f594b0de46e7695841df" translate="yes" xml:space="preserve">
          <source>Yii also can auto-generate fixtures for you based on some template. You can generate your fixtures with different data on different languages and formats. This feature is done by &lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt; library and &lt;code&gt;yii2-faker&lt;/code&gt; extension. See extension &lt;a href=&quot;https://github.com/yiisoft/yii2-faker&quot;&gt;guide&lt;/a&gt; for more docs.</source>
          <target state="translated">Yii还可以基于某些模板为您自动生成灯具。您可以使用不同语言和格式的不同数据生成灯具。此功能由&lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt;库和 &lt;code&gt;yii2-faker&lt;/code&gt; 扩展完成。有关更多文档，请参见扩展&lt;a href=&quot;https://github.com/yiisoft/yii2-faker&quot;&gt;指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5da5f233f6b31930bbcee7d3db7656606997d45f" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of &lt;a href=&quot;yii-validators-validator#%24builtInValidators-detail&quot;&gt;built-in validators&lt;/a&gt;. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii还提供了一组&lt;a href=&quot;yii-validators-validator#%24builtInValidators-detail&quot;&gt;内置的验证器&lt;/a&gt;。每个都有一个别名，可以在指定验证规则时使用。</target>
        </trans-unit>
        <trans-unit id="85c6415c7ee3c832d3b71939cd1781969b15d17c" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii还提供了一组 \Validator::buildInValidators。每一个都有一个别名,可以在指定验证规则时使用。</target>
        </trans-unit>
        <trans-unit id="42a9a0e79b4f0a2aa3e2ba25f0d350314dee2f23" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\debug\models\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii还提供了一组\yii\debug\models\Validator::buildInValidators。每一个都有一个别名,可以在指定验证规则时使用。</target>
        </trans-unit>
        <trans-unit id="2eeeb8b19d606d80b416e167c6c0599b4e627cd8" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\debug\models\search\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii还提供了一组/yii/debug/models/search/Validator::buildInValidators。每一个都有一个别名,可以在指定验证规则时使用。</target>
        </trans-unit>
        <trans-unit id="533cc6bb5bfc6fb87758b4a9e6a14dcab7d415ba" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\debug\models\timeline\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii还提供了一组/yii/debug/models/timeline/Validator::buildInValidators。每一个都有一个别名,可以在指定验证规则时使用。</target>
        </trans-unit>
        <trans-unit id="811f361e14c9cb377c71a36381771d5b080bd249" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\gii\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii还提供了一组\yii\gii\Validator::buildInValidators。每一个都有一个别名,可以在指定验证规则时使用。</target>
        </trans-unit>
        <trans-unit id="d638df492abec5c6b2bb3fb346539e196b1cc9a2" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\gii\generators\controller\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii还提供了一组yii\gii\generators\controller\Validator::buildInValidators。每一个都有一个别名,可以在指定验证规则时使用。</target>
        </trans-unit>
        <trans-unit id="154c558ec4b1b08d47778c166fa19bb40c400ba3" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\gii\generators\crud\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii还提供了一组yii\gii\generators\crud\Validator::buildInValidators。每一个都有一个别名,可以在指定验证规则时使用。</target>
        </trans-unit>
        <trans-unit id="0cf03e07fb8bdc07adea0a6eea1a532431964a12" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\gii\generators\extension\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii还提供了一组yii\gii\generators\extension\Validator::buildInValidators。每一个都有一个别名,可以在指定验证规则时使用。</target>
        </trans-unit>
        <trans-unit id="96f601be4d90afb422164bedf3a3fd6b3b490af4" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\gii\generators\form\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii还提供了一组yii\gii\generators\form\Validator::buildInValidators。每一个都有一个别名,可以在指定验证规则时使用。</target>
        </trans-unit>
        <trans-unit id="22ae03e15fa6b4ac08e991c8254997bc6b28950c" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\gii\generators\model\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii还提供了一组\yii\gii\generators\model\Validator::buildInValidators。每一个都有一个别名,可以在指定验证规则时使用。</target>
        </trans-unit>
        <trans-unit id="e3949d23cbecb6c3dc1af30a9b9efea5174dbc2a" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\gii\generators\module\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii还提供了一组\yii\gii\generators\module\Validator::buildInValidators。每一个都有一个别名,可以在指定验证规则时使用。</target>
        </trans-unit>
        <trans-unit id="1004d0002a1124153326dc623fef50079f034176" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\mongodb\gii\model\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii还提供了一组/yii/mongodb/gi/model/Validator::buildInValidators。每一个都有一个别名,可以在指定验证规则时使用。</target>
        </trans-unit>
        <trans-unit id="e95251dddfd16afddc8f63080c7d571d7273e9ae" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\sphinx\gii\model\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii还提供了一组/yii/sphinx/gii/model/Validator::buildInValidators。每一个都有一个别名,可以在指定验证规则时使用。</target>
        </trans-unit>
        <trans-unit id="7f3adb69f8f2401baa39fa119cc009e885ac59ae" translate="yes" xml:space="preserve">
          <source>Yii also supports setting &lt;a href=&quot;http://en.wikipedia.org/wiki/Isolation_%28database_systems%29#Isolation_levels&quot;&gt;isolation levels&lt;/a&gt; for your transactions. By default, when starting a new transaction, it will use the default isolation level set by your database system. You can override the default isolation level as follows,</source>
          <target state="translated">Yii还支持为您的交易设置&lt;a href=&quot;http://en.wikipedia.org/wiki/Isolation_%28database_systems%29#Isolation_levels&quot;&gt;隔离级别&lt;/a&gt;。默认情况下，启动新事务时，它将使用数据库系统设置的默认隔离级别。您可以按如下方式覆盖默认隔离级别，</target>
        </trans-unit>
        <trans-unit id="f77750bf1d2549251a50f3ee2d6d4d82913aebb3" translate="yes" xml:space="preserve">
          <source>Yii also supports setting &lt;a href=&quot;https://en.wikipedia.org/wiki/Isolation_%28database_systems%29#Isolation_levels&quot;&gt;isolation levels&lt;/a&gt; for your transactions. By default, when starting a new transaction, it will use the default isolation level set by your database system. You can override the default isolation level as follows,</source>
          <target state="translated">Yii还支持为您的交易设置&lt;a href=&quot;https://en.wikipedia.org/wiki/Isolation_%28database_systems%29#Isolation_levels&quot;&gt;隔离级别&lt;/a&gt;。默认情况下，启动新事务时，它将使用数据库系统设置的默认隔离级别。您可以按如下方式覆盖默认隔离级别，</target>
        </trans-unit>
        <trans-unit id="288993aa5a37018865309cefa0789a9913aa166c" translate="yes" xml:space="preserve">
          <source>Yii comes with the default translation messages for validation errors and some other strings. These messages are all in the category &lt;code&gt;yii&lt;/code&gt;. Sometimes you want to correct the default framework message translation for your application. In order to do so, configure the &lt;code&gt;i18n&lt;/code&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt; like the following:</source>
          <target state="translated">Yii附带了用于验证错误和其他一些字符串的默认翻译消息。这些消息都在 &lt;code&gt;yii&lt;/code&gt; 类别中。有时您想为应用程序更正默认框架消息翻译。为了这样做，请像下面这样配置 &lt;code&gt;i18n&lt;/code&gt; &lt;a href=&quot;guide-structure-application-components&quot;&gt;应用程序组件&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="e1934c8af030c19dfd1a4fe683052a967bc3d18e" translate="yes" xml:space="preserve">
          <source>Yii comes with the following built-in log targets. Please refer to the API documentation about these classes to learn how to configure and use them.</source>
          <target state="translated">Yii内置了以下日志目标。请参考关于这些类的API文档来学习如何配置和使用它们。</target>
        </trans-unit>
        <trans-unit id="057263d248b9ac57be2da126abf4563e57032e4a" translate="yes" xml:space="preserve">
          <source>Yii console supports formatted output that is automatically degraded to non-formatted one if it's not supported by terminal running the command.</source>
          <target state="translated">Yii控制台支持格式化的输出,如果终端运行命令不支持,则自动降级为非格式化的输出。</target>
        </trans-unit>
        <trans-unit id="a00f7628bcbd4ca59999ba52a2be77260992137b" translate="yes" xml:space="preserve">
          <source>Yii creates a DI container when you include the &lt;code&gt;Yii.php&lt;/code&gt; file in the &lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;entry script&lt;/a&gt; of your application. The DI container is accessible via &lt;a href=&quot;yii-baseyii#%24container-detail&quot;&gt;Yii::$container&lt;/a&gt;. When you call &lt;a href=&quot;yii-baseyii#createObject()-detail&quot;&gt;Yii::createObject()&lt;/a&gt;, the method will actually call the container's &lt;a href=&quot;yii-di-container#get()-detail&quot;&gt;get()&lt;/a&gt; method to create a new object. As aforementioned, the DI container will automatically resolve the dependencies (if any) and inject them into obtained object. Because Yii uses &lt;a href=&quot;yii-baseyii#createObject()-detail&quot;&gt;Yii::createObject()&lt;/a&gt; in most of its core code to create new objects, this means you can customize the objects globally by dealing with &lt;a href=&quot;yii-baseyii#%24container-detail&quot;&gt;Yii::$container&lt;/a&gt;.</source>
          <target state="translated">当您在应用程序的&lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;输入脚本&lt;/a&gt;中包含 &lt;code&gt;Yii.php&lt;/code&gt; 文件时，Yii将创建一个DI容器。 DI容器可通过&lt;a href=&quot;yii-baseyii#%24container-detail&quot;&gt;Yii :: $ container&lt;/a&gt;访问。当您调用&lt;a href=&quot;yii-baseyii#createObject()-detail&quot;&gt;Yii :: createObject（）时&lt;/a&gt;，该方法实际上将调用容器的&lt;a href=&quot;yii-di-container#get()-detail&quot;&gt;get（）&lt;/a&gt;方法来创建一个新对象。如前所述，DI容器将自动解析依赖项（如果有）并将它们注入获得的对象中。因为Yii 在其大多数核心代码中使用&lt;a href=&quot;yii-baseyii#createObject()-detail&quot;&gt;Yii :: createObject（）&lt;/a&gt;来创建新对象，所以这意味着您可以通过处理&lt;a href=&quot;yii-baseyii#%24container-detail&quot;&gt;Yii :: $ container来&lt;/a&gt;全局自定义对象。</target>
        </trans-unit>
        <trans-unit id="198a1a5349846c90250ad53a7a8ff284a6d78a8a" translate="yes" xml:space="preserve">
          <source>Yii defines a set of &lt;em&gt;core&lt;/em&gt; application components with fixed IDs and default configurations. For example, the &lt;a href=&quot;yii-web-application#%24request-detail&quot;&gt;request&lt;/a&gt; component is used to collect information about a user request and resolve it into a &lt;a href=&quot;guide-runtime-routing&quot;&gt;route&lt;/a&gt;; the &lt;a href=&quot;yii-base-application#%24db-detail&quot;&gt;db&lt;/a&gt; component represents a database connection through which you can perform database queries. It is with help of these core application components that Yii applications are able to handle user requests.</source>
          <target state="translated">Yii定义了一组具有固定ID和默认配置的&lt;em&gt;核心&lt;/em&gt;应用程序组件。例如，&lt;a href=&quot;yii-web-application#%24request-detail&quot;&gt;请求&lt;/a&gt;组件用于收集有关用户请求的信息，并将其解析为&lt;a href=&quot;guide-runtime-routing&quot;&gt;路由&lt;/a&gt;；该&lt;a href=&quot;yii-base-application#%24db-detail&quot;&gt;数据库&lt;/a&gt;组件表示，通过它可以进行数据库查询数据库连接。借助于这些核心应用程序组件，Yii应用程序能够处理用户请求。</target>
        </trans-unit>
        <trans-unit id="1805fe8e0b2ac5502bacbbc40c8c1b322990cd47" translate="yes" xml:space="preserve">
          <source>Yii has many pre-defined aliases already available. For example, the alias &lt;code&gt;@yii&lt;/code&gt; represents the installation path of the Yii framework; &lt;code&gt;@web&lt;/code&gt; represents the base URL for the currently running Web application.</source>
          <target state="translated">Yii有许多可用的预定义别名。例如，别名 &lt;code&gt;@yii&lt;/code&gt; 代表Yii框架的安装路径。 &lt;code&gt;@web&lt;/code&gt; 表示当前正在运行的Web应用程序的基本URL。</target>
        </trans-unit>
        <trans-unit id="c026fafb820fea7d7ce2af2fa70c3574429e2f3c" translate="yes" xml:space="preserve">
          <source>Yii implements a General Hierarchical RBAC, following the &lt;a href=&quot;http://csrc.nist.gov/rbac/sandhu-ferraiolo-kuhn-00.pdf&quot;&gt;NIST RBAC model&lt;/a&gt;. It provides the RBAC functionality through the &lt;a href=&quot;yii-rbac-managerinterface&quot;&gt;authManager&lt;/a&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt;.</source>
          <target state="translated">Yii的实施通常层次RBAC，继&lt;a href=&quot;http://csrc.nist.gov/rbac/sandhu-ferraiolo-kuhn-00.pdf&quot;&gt;NIST RBAC模型&lt;/a&gt;。它通过&lt;a href=&quot;yii-rbac-managerinterface&quot;&gt;authManager &lt;/a&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;应用程序组件&lt;/a&gt;提供RBAC功能。</target>
        </trans-unit>
        <trans-unit id="ccde08fbd49eb84f0f4c693058f0a74d48c52a6b" translate="yes" xml:space="preserve">
          <source>Yii implements its &lt;a href=&quot;guide-concept-service-locator&quot;&gt;service locator&lt;/a&gt; on top of the dependency injection (DI) container. When a service locator is trying to create a new object instance, it will forward the call to the DI container. The latter will resolve the dependencies automatically as described above.</source>
          <target state="translated">Yii 在依赖项注入（DI）容器的顶部实现其&lt;a href=&quot;guide-concept-service-locator&quot;&gt;服务定位器&lt;/a&gt;。当服务定位器尝试创建新的对象实例时，它将把调用转发到DI容器。后者将如上所述自动解决依赖关系。</target>
        </trans-unit>
        <trans-unit id="efcf32dbb2dd50028562bd8948d206e7fe6ee0de" translate="yes" xml:space="preserve">
          <source>Yii includes a built-in &lt;a href=&quot;yii-web-errorhandler&quot;&gt;error handler&lt;/a&gt; which makes error handling a much more pleasant experience than before. In particular, the Yii error handler does the following to improve error handling:</source>
          <target state="translated">Yii包含一个内置的&lt;a href=&quot;yii-web-errorhandler&quot;&gt;错误处理程序&lt;/a&gt;，使错误处理比以前更令人愉快。特别是，Yii错误处理程序执行以下操作以改善错误处理：</target>
        </trans-unit>
        <trans-unit id="c67a073f5b99fa7a33ca56ed3821a60ca7be4b8d" translate="yes" xml:space="preserve">
          <source>Yii introduces a base class called &lt;a href=&quot;yii-base-component&quot;&gt;yii\base\Component&lt;/a&gt; to support events. If a class needs to trigger events, it should extend from &lt;a href=&quot;yii-base-component&quot;&gt;yii\base\Component&lt;/a&gt;, or from a child class.</source>
          <target state="translated">Yii引入了一个名为&lt;a href=&quot;yii-base-component&quot;&gt;yii \ base \ Component&lt;/a&gt;的基类来支持事件。如果某个类需要触发事件，则应从&lt;a href=&quot;yii-base-component&quot;&gt;yii \ base \ Component&lt;/a&gt;或从子类扩展。</target>
        </trans-unit>
        <trans-unit id="fb2faa00c8e09397e9b561c7f6e861fb9ba96627" translate="yes" xml:space="preserve">
          <source>Yii is a helper class serving common framework functionalities.</source>
          <target state="translated">Yii是一个服务于普通框架功能的助手类。</target>
        </trans-unit>
        <trans-unit id="df3f442828dd386122ded6a7239728818539c4c0" translate="yes" xml:space="preserve">
          <source>Yii manages asset bundles through an application component named &lt;code&gt;assetManager&lt;/code&gt; which is implemented by &lt;a href=&quot;yii-web-assetmanager&quot;&gt;yii\web\AssetManager&lt;/a&gt;. By configuring the &lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii\web\AssetManager::$bundles&lt;/a&gt; property, it is possible to customize the behavior of an asset bundle. For example, the default &lt;a href=&quot;yii-web-jqueryasset&quot;&gt;yii\web\JqueryAsset&lt;/a&gt; asset bundle uses the &lt;code&gt;jquery.js&lt;/code&gt; file from the installed jquery Bower package. To improve the availability and performance, you may want to use a version hosted by Google. This can be achieved by configuring &lt;code&gt;assetManager&lt;/code&gt; in the application configuration like the following:</source>
          <target state="translated">YII通过命名的应用程序组件管理资产束 &lt;code&gt;assetManager&lt;/code&gt; 其通过实现&lt;a href=&quot;yii-web-assetmanager&quot;&gt;AssetManager YII \网络\&lt;/a&gt;。通过配置&lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii \ web \ AssetManager :: $ bundles&lt;/a&gt;属性，可以自定义资产捆绑包的行为。例如，默认的&lt;a href=&quot;yii-web-jqueryasset&quot;&gt;yii \ web \ JqueryAsset&lt;/a&gt;资产捆绑包使用已安装的jquery Bower软件包中的 &lt;code&gt;jquery.js&lt;/code&gt; 文件。为了提高可用性和性能，您可能需要使用Google托管的版本。这可以通过在应用程序配置中配置如下的 &lt;code&gt;assetManager&lt;/code&gt; 来实现：</target>
        </trans-unit>
        <trans-unit id="8407f297475131d5de28e7c70f5cd17d2c31efe2" translate="yes" xml:space="preserve">
          <source>Yii manages assets in the unit of &lt;em&gt;asset bundle&lt;/em&gt;. An asset bundle is simply a collection of assets located in a directory. When you register an asset bundle in a &lt;a href=&quot;guide-structure-views&quot;&gt;view&lt;/a&gt;, it will include the CSS and JavaScript files in the bundle in the rendered Web page.</source>
          <target state="translated">Yii以&lt;em&gt;资产捆绑&lt;/em&gt;为单位管理资产。资产捆绑包只是目录中资产的集合。在&lt;a href=&quot;guide-structure-views&quot;&gt;视图中&lt;/a&gt;注册资产捆绑包时，它将在呈现的Web页面的捆绑包中包含CSS和JavaScript文件。</target>
        </trans-unit>
        <trans-unit id="e0c5deb585c90cc0677c2f015901b151cb69b05b" translate="yes" xml:space="preserve">
          <source>Yii predefines a set of aliases to easily reference commonly used file paths and URLs:</source>
          <target state="translated">Yii预先定义了一组别名,以方便引用常用的文件路径和URL。</target>
        </trans-unit>
        <trans-unit id="617bb40ab3072554c55127dcea7083e3c4c685fc" translate="yes" xml:space="preserve">
          <source>Yii provides a console command named &lt;code&gt;asset&lt;/code&gt; to automate the approach that we just described.</source>
          <target state="translated">Yii提供了一个名为 &lt;code&gt;asset&lt;/code&gt; 的控制台命令来自动化我们刚刚描述的方法。</target>
        </trans-unit>
        <trans-unit id="7981ff284aec1f39f5d5dc820fd95ff9c4763045" translate="yes" xml:space="preserve">
          <source>Yii provides a helper method &lt;a href=&quot;yii-helpers-baseurl#to()-detail&quot;&gt;yii\helpers\Url::to()&lt;/a&gt; to create various kinds of URLs from given routes and their associated query parameters. For example,</source>
          <target state="translated">Yii提供了一个辅助方法&lt;a href=&quot;yii-helpers-baseurl#to()-detail&quot;&gt;yii \ helpers \ Url :: to（）&lt;/a&gt;从给定的路由及其关联的查询参数创建各种URL。例如，</target>
        </trans-unit>
        <trans-unit id="dd4888de15d5056c6239ce579e5a3651edf55075" translate="yes" xml:space="preserve">
          <source>Yii provides a powerful logging framework that is highly customizable and extensible. Using this framework, you can easily log various types of messages, filter them, and gather them at different targets, such as files, databases, emails.</source>
          <target state="translated">Yii提供了一个强大的日志框架,它是高度可定制和可扩展的。使用这个框架,你可以很容易地记录各种类型的消息,过滤它们,并在不同的目标,如文件,数据库,电子邮件收集它们。</target>
        </trans-unit>
        <trans-unit id="275b92cab25e8202e6c439dd149749079cf72f24" translate="yes" xml:space="preserve">
          <source>Yii provides a set of &lt;a href=&quot;guide-structure-widgets&quot;&gt;widgets&lt;/a&gt; that can be used to display data. While the &lt;a href=&quot;#detail-view&quot;&gt;DetailView&lt;/a&gt; widget can be used to display data for a single record, &lt;a href=&quot;#list-view&quot;&gt;ListView&lt;/a&gt; and &lt;a href=&quot;#grid-view&quot;&gt;GridView&lt;/a&gt; can be used to display a list or table of data records providing features like pagination, sorting and filtering.</source>
          <target state="translated">Yii提供了一组可用于显示数据的&lt;a href=&quot;guide-structure-widgets&quot;&gt;小部件&lt;/a&gt;。虽然&lt;a href=&quot;#detail-view&quot;&gt;DetailView&lt;/a&gt;小部件可用于显示单个记录的数据，但&lt;a href=&quot;#list-view&quot;&gt;ListView&lt;/a&gt;和&lt;a href=&quot;#grid-view&quot;&gt;GridView&lt;/a&gt;可用于显示数据记录的列表或表，提供分页，排序和过滤等功能。</target>
        </trans-unit>
        <trans-unit id="3491b8ab8d9641f60b5e8af557b3ba1341b893eb" translate="yes" xml:space="preserve">
          <source>Yii provides a set of commonly used core validators, found primarily under the &lt;code&gt;yii\validators&lt;/code&gt; namespace. Instead of using lengthy validator class names, you may use &lt;em&gt;aliases&lt;/em&gt; to specify the use of these core validators. For example, you can use the alias &lt;code&gt;required&lt;/code&gt; to refer to the &lt;a href=&quot;yii-validators-requiredvalidator&quot;&gt;yii\validators\RequiredValidator&lt;/a&gt; class:</source>
          <target state="translated">Yii提供了一组常用的核心验证器，主要在 &lt;code&gt;yii\validators&lt;/code&gt; 命名空间下找到。可以使用&lt;em&gt;别名&lt;/em&gt;来指定这些核心验证器的使用，而不是使用冗长的验证器类名称。例如，您可以使用 &lt;code&gt;required&lt;/code&gt; 的别名来引用&lt;a href=&quot;yii-validators-requiredvalidator&quot;&gt;yii \ validators \ RequiredValidator&lt;/a&gt;类：</target>
        </trans-unit>
        <trans-unit id="648b3b7837161e4fe9898ad111ccc3c87f197b95" translate="yes" xml:space="preserve">
          <source>Yii provides a set of commonly used filters, found primarily under the &lt;code&gt;yii\filters&lt;/code&gt; namespace. In the following, we will briefly introduce these filters.</source>
          <target state="translated">Yii提供了一组常用的过滤器，主要在 &lt;code&gt;yii\filters&lt;/code&gt; 命名空间下找到。在下面，我们将简要介绍这些过滤器。</target>
        </trans-unit>
        <trans-unit id="12ca94073d273b51af9b3af7387cb4dea07a1251" translate="yes" xml:space="preserve">
          <source>Yii provides a set of migration command line tools that allow you to:</source>
          <target state="translated">Yii提供了一套迁移命令行工具,允许你。</target>
        </trans-unit>
        <trans-unit id="05ed21ccabad358ac5bef5e9f076a31e394f54eb" translate="yes" xml:space="preserve">
          <source>Yii provides a very convenient method to do it:</source>
          <target state="translated">Yii提供了一个非常方便的方法。</target>
        </trans-unit>
        <trans-unit id="cd2e48f79309dbab9165c57df881e3ba52e1b42d" translate="yes" xml:space="preserve">
          <source>Yii provides a whole set of tools to simplify the task of implementing RESTful Web Service APIs. In particular, Yii supports the following features about RESTful APIs:</source>
          <target state="translated">Yii提供了一整套工具来简化实现RESTful Web服务API的任务。特别是,Yii支持以下关于RESTful API的功能。</target>
        </trans-unit>
        <trans-unit id="45522c48db32ec7a362821e149ea74675ad7f6f8" translate="yes" xml:space="preserve">
          <source>Yii provides an authentication framework which wires up various components to support login. To use this framework, you mainly need to do the following work:</source>
          <target state="translated">Yii提供了一个认证框架,它连接了各种组件来支持登录。要使用这个框架,你主要需要做以下工作。</target>
        </trans-unit>
        <trans-unit id="da6bd01a738a7b5cdae7e44fb1a8a726f81a66a8" translate="yes" xml:space="preserve">
          <source>Yii provides convenient helper functions that allow you to encrypt/decrypt data using a secret key. The data is passed through the encryption function so that only the person which has the secret key will be able to decrypt it. For example, we need to store some information in our database but we need to make sure only the user who has the secret key can view it (even if the application database is compromised):</source>
          <target state="translated">Yii提供了方便的辅助功能,允许你使用密匙加密/解密数据。数据通过加密功能,只有拥有密匙的人才能解密。例如,我们需要在数据库中存储一些信息,但我们需要确保只有拥有密匙的用户才能查看这些信息(即使应用程序的数据库被破坏)。</target>
        </trans-unit>
        <trans-unit id="ffffc4b57aeaa8f673f353f4b9fa8d5b201255bb" translate="yes" xml:space="preserve">
          <source>Yii provides features that rely on cookies and/or PHP sessions. These can be vulnerable in case your connection is compromised. The risk is reduced if the app uses secure connection via TLS (often referred to as &lt;a href=&quot;https://en.wikipedia.org/wiki/Transport_Layer_Security&quot;&gt;SSL&lt;/a&gt;).</source>
          <target state="translated">Yii提供了依赖Cookie和/或PHP会话的功能。如果您的连接受到威胁，这些漏洞可能很容易受到攻击。如果应用程序使用通过TLS（通常称为&lt;a href=&quot;https://en.wikipedia.org/wiki/Transport_Layer_Security&quot;&gt;SSL&lt;/a&gt;）的安全连接，则可以降低风险。</target>
        </trans-unit>
        <trans-unit id="da71eebc25c9058c91747bf399cff30416065bdc" translate="yes" xml:space="preserve">
          <source>Yii provides four constants for the most common isolation levels:</source>
          <target state="translated">Yii为最常见的隔离等级提供了四个常数。</target>
        </trans-unit>
        <trans-unit id="49d9bdaa68dfd3953a5c3c1b012f8fb94b8065db" translate="yes" xml:space="preserve">
          <source>Yii provides the Active Record support for the following relational databases:</source>
          <target state="translated">Yii为以下关系型数据库提供Active Record支持。</target>
        </trans-unit>
        <trans-unit id="eac1bfca62def4d6ae6a209863e3c8fecf39bf1c" translate="yes" xml:space="preserve">
          <source>Yii provides the DI container feature through the class &lt;a href=&quot;yii-di-container&quot;&gt;yii\di\Container&lt;/a&gt;. It supports the following kinds of dependency injection:</source>
          <target state="translated">Yii通过类&lt;a href=&quot;yii-di-container&quot;&gt;ii \ di \ Container&lt;/a&gt;提供DI容器功能。它支持以下几种依赖项注入：</target>
        </trans-unit>
        <trans-unit id="29fdb88c6f8009862634d0d9a57d55b2930e4556" translate="yes" xml:space="preserve">
          <source>Yii provides the following core extensions that are developed and maintained by the Yii developer team. They are all registered on &lt;a href=&quot;https://packagist.org/&quot;&gt;Packagist&lt;/a&gt; and can be easily installed as described in the &lt;a href=&quot;#using-extensions&quot;&gt;Using Extensions&lt;/a&gt; subsection.</source>
          <target state="translated">Yii提供了以下由Yii开发人员团队开发和维护的核心扩展。它们均已在&lt;a href=&quot;https://packagist.org/&quot;&gt;Packagist上&lt;/a&gt;注册，并且可以按照&amp;ldquo; &lt;a href=&quot;#using-extensions&quot;&gt;使用扩展&amp;rdquo;&lt;/a&gt;小节中的说明轻松安装。</target>
        </trans-unit>
        <trans-unit id="0b735fed76635e2d25181e24ee5ff5ac85418c22" translate="yes" xml:space="preserve">
          <source>Yii provides two base controller classes to simplify your work of creating RESTful actions: &lt;a href=&quot;yii-rest-controller&quot;&gt;yii\rest\Controller&lt;/a&gt; and &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii\rest\ActiveController&lt;/a&gt;. The difference between these two controllers is that the latter provides a default set of actions that are specifically designed to deal with resources represented as &lt;a href=&quot;guide-db-active-record&quot;&gt;Active Record&lt;/a&gt;. So if you are using &lt;a href=&quot;guide-db-active-record&quot;&gt;Active Record&lt;/a&gt; and are comfortable with the provided built-in actions, you may consider extending your controller classes from &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii\rest\ActiveController&lt;/a&gt;, which will allow you to create powerful RESTful APIs with minimal code.</source>
          <target state="translated">Yii提供了两个基本的控制器类来简化创建RESTful动作的工作：&lt;a href=&quot;yii-rest-controller&quot;&gt;yii \ rest \ Controller&lt;/a&gt;和&lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii \ rest \ ActiveController&lt;/a&gt;。这两个控制器之间的区别在于，后者提供了一组默认的操作，这些操作专门用于处理表示为&lt;a href=&quot;guide-db-active-record&quot;&gt;Active Record的&lt;/a&gt;资源。因此，如果您正在使用&lt;a href=&quot;guide-db-active-record&quot;&gt;Active Record&lt;/a&gt;并且对提供的内置操作感到满意，则可以考虑从&lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii \ rest \ ActiveController&lt;/a&gt;扩展控制器类，这将使您可以使用最少的代码来创建功能强大的RESTful API。</target>
        </trans-unit>
        <trans-unit id="6e384f724156ac43fbf8586f9c6cde34be1ef76c" translate="yes" xml:space="preserve">
          <source>Yii relies on the &lt;a href=&quot;http://www.php.net/manual/en/language.oop5.autoload.php&quot;&gt;class autoloading mechanism&lt;/a&gt; to locate and include all required class files. It provides a high-performance class autoloader that is compliant with the &lt;a href=&quot;https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md&quot;&gt;PSR-4 standard&lt;/a&gt;. The autoloader is installed when you include the &lt;code&gt;Yii.php&lt;/code&gt; file.</source>
          <target state="translated">Yii依靠&lt;a href=&quot;http://www.php.net/manual/en/language.oop5.autoload.php&quot;&gt;类自动加载机制&lt;/a&gt;来查找和包含所有必需的类文件。它提供了符合&lt;a href=&quot;https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md&quot;&gt;PSR-4标准&lt;/a&gt;的高性能自动装带器。当您包含 &lt;code&gt;Yii.php&lt;/code&gt; 文件时，即会安装自动装带器。</target>
        </trans-unit>
        <trans-unit id="8d1c79b34024ef1ffb94abd22b34954b425b4e4e" translate="yes" xml:space="preserve">
          <source>Yii relies on the installed pre-processor tools to convert assets. For example, to use &lt;a href=&quot;http://lesscss.org/&quot;&gt;LESS&lt;/a&gt; you should install the &lt;code&gt;lessc&lt;/code&gt; pre-processor command.</source>
          <target state="translated">Yii依赖于已安装的预处理器工具来转换资产。例如，要使用&lt;a href=&quot;http://lesscss.org/&quot;&gt;LESS&lt;/a&gt;，应安装 &lt;code&gt;lessc&lt;/code&gt; 预处理程序命令。</target>
        </trans-unit>
        <trans-unit id="5c5aecb30ed2d9f367372c6157b1bf796bf92263" translate="yes" xml:space="preserve">
          <source>Yii represents each cookie as an object of &lt;a href=&quot;yii-web-cookie&quot;&gt;yii\web\Cookie&lt;/a&gt;. Both &lt;a href=&quot;yii-web-request&quot;&gt;yii\web\Request&lt;/a&gt; and &lt;a href=&quot;yii-web-response&quot;&gt;yii\web\Response&lt;/a&gt; maintain a collection of cookies via the property named &lt;code&gt;cookies&lt;/code&gt;. The cookie collection in the former represents the cookies submitted in a request, while the cookie collection in the latter represents the cookies that are to be sent to the user.</source>
          <target state="translated">Yii将每个cookie表示为yii &lt;a href=&quot;yii-web-cookie&quot;&gt;\ web \ Cookie&lt;/a&gt;的对象。这两个&lt;a href=&quot;yii-web-request&quot;&gt;警予\网络\请求&lt;/a&gt;和&lt;a href=&quot;yii-web-response&quot;&gt;警予\网络\响应&lt;/a&gt;通过属性命名保持饼干的集合 &lt;code&gt;cookies&lt;/code&gt; 。前者中的cookie集合表示在请求中提交的cookie，而后者中的cookie集合表示要发送给用户的cookie。</target>
        </trans-unit>
        <trans-unit id="bde9a7a13bc7f8716c6c6d4d250c84526c723f11" translate="yes" xml:space="preserve">
          <source>Yii security helper makes generating pseudorandom data simple:</source>
          <target state="translated">Yii安全助手使生成伪随机数据变得简单。</target>
        </trans-unit>
        <trans-unit id="d6f66512d0e8d0ef316edce2cc3fbdbc0f5d585f" translate="yes" xml:space="preserve">
          <source>Yii supports a so-called &lt;em&gt;global event&lt;/em&gt;, which is actually a trick based on the event mechanism described above. The global event requires a globally accessible Singleton, such as the &lt;a href=&quot;guide-structure-applications&quot;&gt;application&lt;/a&gt; instance itself.</source>
          <target state="translated">Yii支持所谓的&lt;em&gt;全局事件&lt;/em&gt;，它实际上是基于上述事件机制的一个技巧。全局事件需要可全局访问的Singleton，例如&lt;a href=&quot;guide-structure-applications&quot;&gt;应用程序&lt;/a&gt;实例本身。</target>
        </trans-unit>
        <trans-unit id="d3a1a7ebcdc952e2d8783c148bbd598626a0ade1" translate="yes" xml:space="preserve">
          <source>Yii supports a wide range of cache storage. The following is a summary:</source>
          <target state="translated">Yii支持多种缓存存储方式。以下是一个总结。</target>
        </trans-unit>
        <trans-unit id="fcb24d902e1e35609509de2a48de29ca9c86d501" translate="yes" xml:space="preserve">
          <source>Yii supports all of the above authentication methods. You can also easily create new authentication methods.</source>
          <target state="translated">Yii支持以上所有的认证方法。你也可以很容易地创建新的认证方法。</target>
        </trans-unit>
        <trans-unit id="30ab94ba1099d0e9be7146392a354c49a5cfc48c" translate="yes" xml:space="preserve">
          <source>Yii supports all these caching mechanisms:</source>
          <target state="translated">Yii支持所有这些缓存机制。</target>
        </trans-unit>
        <trans-unit id="bc497a78097f3fd3da0039c19000ec607fbda1b2" translate="yes" xml:space="preserve">
          <source>Yii supports composition and sending of the email messages. However, the framework core provides only the content composition functionality and basic interface. Actual mail sending mechanism should be provided by the extension, because different projects may require its different implementation and it usually depends on the external services and libraries.</source>
          <target state="translated">Yii支持邮件信息的组成和发送。然而,框架核心只提供了内容组成功能和基本接口。实际的邮件发送机制应该由扩展提供,因为不同的项目可能需要不同的实现,而且通常依赖于外部服务和库。</target>
        </trans-unit>
        <trans-unit id="c90aa3fb11f0c23f94af18dbfc155e1c3ee82db7" translate="yes" xml:space="preserve">
          <source>Yii supports content negotiation via the &lt;a href=&quot;yii-filters-contentnegotiator&quot;&gt;yii\filters\ContentNegotiator&lt;/a&gt; filter. The RESTful API base controller class &lt;a href=&quot;yii-rest-controller&quot;&gt;yii\rest\Controller&lt;/a&gt; is equipped with this filter under the name of &lt;code&gt;contentNegotiator&lt;/code&gt;. The filter provides response format negotiation as well as language negotiation. For example, if a RESTful API request contains the following header,</source>
          <target state="translated">Yii支持通过&lt;a href=&quot;yii-filters-contentnegotiator&quot;&gt;yii \ filters \ ContentNegotiator&lt;/a&gt;过滤器进行内容协商。RESTful API基本控制器类&lt;a href=&quot;yii-rest-controller&quot;&gt;yii \ rest \ Controller&lt;/a&gt;配备了该过滤器，名称为 &lt;code&gt;contentNegotiator&lt;/code&gt; 。该过滤器提供响应格式协商以及语言协商。例如，如果RESTful API请求包含以下标头，</target>
        </trans-unit>
        <trans-unit id="3a1593b575ba819babaa158f51e65790b4df6548" translate="yes" xml:space="preserve">
          <source>Yii supports fixtures via the &lt;code&gt;yii fixture&lt;/code&gt; command line tool. This tool supports:</source>
          <target state="translated">Yii通过yii &lt;code&gt;yii fixture&lt;/code&gt; 命令行工具支持灯具。该工具支持：</target>
        </trans-unit>
        <trans-unit id="d8595637ded337fed241668635b90c512b6a4725" translate="yes" xml:space="preserve">
          <source>Yii supports the following formats out of the box, each implemented by a &lt;a href=&quot;yii-web-responseformatterinterface&quot;&gt;formatter&lt;/a&gt; class. You can customize these formatters or add new ones by configuring the &lt;a href=&quot;yii-web-response#%24formatters-detail&quot;&gt;yii\web\Response::$formatters&lt;/a&gt; property.</source>
          <target state="translated">Yii开箱即用地支持以下格式，每种&lt;a href=&quot;yii-web-responseformatterinterface&quot;&gt;格式&lt;/a&gt;都由格式化程序类实现。您可以通过配置&lt;a href=&quot;yii-web-response#%24formatters-detail&quot;&gt;yii \ web \ Response :: $ formatters&lt;/a&gt;属性来自定义这些格式化程序或添加新的格式化程序。</target>
        </trans-unit>
        <trans-unit id="d47376a3b3a2d723b42e1b96bfe3b31e273806c2" translate="yes" xml:space="preserve">
          <source>Yii uses a &lt;a href=&quot;yii-data-pagination&quot;&gt;yii\data\Pagination&lt;/a&gt; object to represent the information about a pagination scheme. In particular,</source>
          <target state="translated">Yii使用yii &lt;a href=&quot;yii-data-pagination&quot;&gt;\ data \ Pagination&lt;/a&gt;对象表示有关分页方案的信息。特别是，</target>
        </trans-unit>
        <trans-unit id="e3d708ce8225e8778a8071dda846b3156e655e4a" translate="yes" xml:space="preserve">
          <source>Yii uses the &lt;a href=&quot;http://php.net/manual/en/book.intl.php&quot;&gt;PHP intl extension&lt;/a&gt; to provide most of its I18N features, such as the date and number formatting of the &lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii\i18n\Formatter&lt;/a&gt; class and the message formatting using &lt;a href=&quot;yii-i18n-messageformatter&quot;&gt;yii\i18n\MessageFormatter&lt;/a&gt;. Both classes provide a fallback mechanism when the &lt;code&gt;intl&lt;/code&gt; extension is not installed. However, the fallback implementation only works well for English target language. So it is highly recommended that you install &lt;code&gt;intl&lt;/code&gt; when I18N is needed.</source>
          <target state="translated">Yii使用&lt;a href=&quot;http://php.net/manual/en/book.intl.php&quot;&gt;PHP intl扩展&lt;/a&gt;来提供其大多数I18N功能，例如&lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii \ i18n \ Formatter&lt;/a&gt;类的日期和数字格式以及使用&lt;a href=&quot;yii-i18n-messageformatter&quot;&gt;yii \ i18n \ MessageFormatter进行&lt;/a&gt;的消息格式。当未安装 &lt;code&gt;intl&lt;/code&gt; 扩展名时，这两个类都提供了一个后备机制。但是，后备实现仅适用于英语目标语言。因此，强烈建议您在需要I18N时安装 &lt;code&gt;intl&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8ebf52070f7861b0696af82a6a091e4c23a32c3a" translate="yes" xml:space="preserve">
          <source>Yii uses the &lt;a href=&quot;https://php.net/manual/en/book.intl.php&quot;&gt;PHP intl extension&lt;/a&gt; to provide most of its I18N features, such as the date and number formatting of the &lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii\i18n\Formatter&lt;/a&gt; class and the message formatting using &lt;a href=&quot;yii-i18n-messageformatter&quot;&gt;yii\i18n\MessageFormatter&lt;/a&gt;. Both classes provide a fallback mechanism when the &lt;code&gt;intl&lt;/code&gt; extension is not installed. However, the fallback implementation only works well for English target language. So it is highly recommended that you install &lt;code&gt;intl&lt;/code&gt; when I18N is needed.</source>
          <target state="translated">Yii使用&lt;a href=&quot;https://php.net/manual/en/book.intl.php&quot;&gt;PHP intl扩展&lt;/a&gt;来提供其大多数I18N功能，例如&lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii \ i18n \ Formatter&lt;/a&gt;类的日期和数字格式以及使用&lt;a href=&quot;yii-i18n-messageformatter&quot;&gt;yii \ i18n \ MessageFormatter进行&lt;/a&gt;的消息格式。当未安装 &lt;code&gt;intl&lt;/code&gt; 扩展名时，这两个类都提供了一个后备机制。但是，后备实现仅适用于英语目标语言。因此，强烈建议您在需要I18N时安装 &lt;code&gt;intl&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="92ec6b19198f635405ec7f49ad8221d679f3994e" translate="yes" xml:space="preserve">
          <source>Yii uses the file name extensions to identify which extended syntax an asset is in. By default it recognizes the following syntax and file name extensions:</source>
          <target state="translated">Yii使用文件名扩展名来识别一个资产的扩展语法。默认情况下,它可以识别以下语法和文件名扩展名。</target>
        </trans-unit>
        <trans-unit id="622047a8a05cf3e5ff6ca47acdc74e84ee1b3809" translate="yes" xml:space="preserve">
          <source>Yii::beginProfile()</source>
          <target state="translated">Yii::beginProfile()</target>
        </trans-unit>
        <trans-unit id="6165791e41339bc4676e9ac090aa3fff2ee53436" translate="yes" xml:space="preserve">
          <source>Yii::endProfile()</source>
          <target state="translated">Yii::endProfile()</target>
        </trans-unit>
        <trans-unit id="2821e4069e58f4a988f91f69957f62b2eb0dd53e" translate="yes" xml:space="preserve">
          <source>Yii::error()</source>
          <target state="translated">Yii::error()</target>
        </trans-unit>
        <trans-unit id="b261955fe444fba86ee00f34d6e4eab1ca3857de" translate="yes" xml:space="preserve">
          <source>Yii::info()</source>
          <target state="translated">Yii::info()</target>
        </trans-unit>
        <trans-unit id="8faa5bd98de63fcd3a6cc12a688447367c199cd3" translate="yes" xml:space="preserve">
          <source>Yii::trace()</source>
          <target state="translated">Yii::trace()</target>
        </trans-unit>
        <trans-unit id="cd5a87a8433f9e7cbd6eeab7dd09a0def9d6c864" translate="yes" xml:space="preserve">
          <source>Yii::warning()</source>
          <target state="translated">Yii::warning()</target>
        </trans-unit>
        <trans-unit id="70487f1d0e08574b6629e7a383b3edcf3424d21b" translate="yes" xml:space="preserve">
          <source>YiiRequirementChecker</source>
          <target state="translated">YiiRequirementChecker</target>
        </trans-unit>
        <trans-unit id="eb36f894205b50eb05855994f30fe4233663b72a" translate="yes" xml:space="preserve">
          <source>YiiRequirementChecker allows checking, if current system meets the requirements for running the Yii application.</source>
          <target state="translated">YiiRequirementChecker允许检查当前系统是否满足运行Yii应用程序的要求。</target>
        </trans-unit>
        <trans-unit id="6dcea3771eeae8b57092080b353e1034d0d299a2" translate="yes" xml:space="preserve">
          <source>You also can create your own data providers for custom tables fields, see Faker library guide for more info (&lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;https://github.com/fzaninotto/Faker&lt;/a&gt;); After you created custom provider, for example:</source>
          <target state="translated">您还可以为自定义表格字段创建自己的数据提供程序，有关更多信息，请参阅Faker库指南（&lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;https://github.com/fzaninotto/Faker&lt;/a&gt;）；创建自定义提供程序后，例如：</target>
        </trans-unit>
        <trans-unit id="569dda332e65107f700a65ba66f11f354a3b38d8" translate="yes" xml:space="preserve">
          <source>You also can use shortcut for the above like the following:</source>
          <target state="translated">你也可以像下面这样使用快捷键来实现上述功能。</target>
        </trans-unit>
        <trans-unit id="de3c7123eaac0da4d6fd40a0687f03782f4f539f" translate="yes" xml:space="preserve">
          <source>You also need to create the following database table to store session data:</source>
          <target state="translated">你还需要创建以下数据库表来存储会话数据。</target>
        </trans-unit>
        <trans-unit id="a16bab3d4c1d3d765e56a38725b5a4fdb9ff45f6" translate="yes" xml:space="preserve">
          <source>You also need to prepare the server so that it can handle the AJAX validation requests. This can be achieved by a code snippet like the following in the controller actions:</source>
          <target state="translated">您还需要准备服务器,使其能够处理AJAX验证请求。这可以通过控制器动作中类似下面的代码片段来实现。</target>
        </trans-unit>
        <trans-unit id="8eba7532686a01fbd611404f2abbf9d20119aca2" translate="yes" xml:space="preserve">
          <source>You are able to fetch additional columns or values from query and store it inside the Active Record. For example, assume we have a table named &lt;code&gt;room&lt;/code&gt;, which contains information about rooms available in the hotel. Each room stores information about its geometrical size using fields &lt;code&gt;length&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;. Imagine we need to retrieve list of all available rooms with their volume in descendant order. So you can not calculate volume using PHP, because we need to sort the records by its value, but you also want &lt;code&gt;volume&lt;/code&gt; to be displayed in the list. To achieve the goal, you need to declare an extra field in your &lt;code&gt;Room&lt;/code&gt; Active Record class, which will store &lt;code&gt;volume&lt;/code&gt; value:</source>
          <target state="translated">您可以从查询中获取其他列或值，并将其存储在Active Record中。例如，假设我们有一个名为 &lt;code&gt;room&lt;/code&gt; 的表，其中包含有关酒店可用房间的信息。每个房间都使用 &lt;code&gt;length&lt;/code&gt; ， &lt;code&gt;width&lt;/code&gt; ， &lt;code&gt;height&lt;/code&gt; 字段存储有关其几何尺寸的信息。想象一下，我们需要检索所有可用房间的列表，并按降序排列它们的体积。因此，您无法使用PHP计算体积，因为我们需要按记录的值对记录进行排序，但是您还希望在列表中显示 &lt;code&gt;volume&lt;/code&gt; 。为了实现该目标，您需要在&amp;ldquo; &lt;code&gt;Room&lt;/code&gt; 活动记录&amp;rdquo;类中声明一个额外的字段，该字段将存储 &lt;code&gt;volume&lt;/code&gt; 值：</target>
        </trans-unit>
        <trans-unit id="dfeb92ca4f5a667e6ca4adcf1a2bdfb9e7579ec6" translate="yes" xml:space="preserve">
          <source>You call &lt;a href=&quot;yii-base-view#beginBlock()-detail&quot;&gt;beginBlock()&lt;/a&gt; and &lt;a href=&quot;yii-base-view#endBlock()-detail&quot;&gt;endBlock()&lt;/a&gt; to define a block. The block can then be accessed via &lt;code&gt;$view-&amp;gt;blocks[$blockID]&lt;/code&gt;, where &lt;code&gt;$blockID&lt;/code&gt; stands for a unique ID that you assign to the block when defining it.</source>
          <target state="translated">您调用&lt;a href=&quot;yii-base-view#beginBlock()-detail&quot;&gt;beginBlock（）&lt;/a&gt;和&lt;a href=&quot;yii-base-view#endBlock()-detail&quot;&gt;endBlock（）&lt;/a&gt;定义一个块。然后可以通过 &lt;code&gt;$view-&amp;gt;blocks[$blockID]&lt;/code&gt; 来访问该块，其中 &lt;code&gt;$blockID&lt;/code&gt; 代表在定义该块时分配给该块的唯一ID。</target>
        </trans-unit>
        <trans-unit id="b8c48ff360bc0286cda15b5d65528097893d2d7d" translate="yes" xml:space="preserve">
          <source>You can access a &lt;em&gt;public&lt;/em&gt; member variable or a &lt;a href=&quot;guide-concept-properties&quot;&gt;property&lt;/a&gt; defined by a getter and/or a setter of the behavior through the component it is attached to:</source>
          <target state="translated">您可以通过其附加到的组件访问&lt;em&gt;公共&lt;/em&gt;成员变量或由行为的getter和/或setter定义的&lt;a href=&quot;guide-concept-properties&quot;&gt;属性&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="157461627b0d21edc5ecf3b56a02c762bba1d75c" translate="yes" xml:space="preserve">
          <source>You can access an attribute like accessing a normal object property:</source>
          <target state="translated">你可以像访问普通对象属性一样访问一个属性。</target>
        </trans-unit>
        <trans-unit id="69a5593c56e51551acced1fa307e287136a97d85" translate="yes" xml:space="preserve">
          <source>You can access the &lt;a href=&quot;yii-base-theme&quot;&gt;yii\base\Theme&lt;/a&gt; object through the &lt;a href=&quot;yii-base-view#%24theme-detail&quot;&gt;yii\base\View::$theme&lt;/a&gt; property. For example, in a view file, you can write the following code because &lt;code&gt;$this&lt;/code&gt; refers to the view object:</source>
          <target state="translated">您可以通过&lt;a href=&quot;yii-base-view#%24theme-detail&quot;&gt;yii \ base \ View :: $ theme&lt;/a&gt;属性访问&lt;a href=&quot;yii-base-theme&quot;&gt;yii \ base \ Theme&lt;/a&gt;对象。例如，在视图文件中，您可以编写以下代码，因为 &lt;code&gt;$this&lt;/code&gt; 引用视图对象：</target>
        </trans-unit>
        <trans-unit id="89affb68d5e842c47584499c03f89c6d2c79b2e8" translate="yes" xml:space="preserve">
          <source>You can add attachments to message using methods &lt;code&gt;attach()&lt;/code&gt; and &lt;code&gt;attachContent()&lt;/code&gt;:</source>
          <target state="translated">您可以使用方法 &lt;code&gt;attach()&lt;/code&gt; 和 &lt;code&gt;attachContent()&lt;/code&gt; 将附件添加到邮件中：</target>
        </trans-unit>
        <trans-unit id="26bc1cdbd072644ddb9b8594094e394e3d981a5f" translate="yes" xml:space="preserve">
          <source>You can add further conditions to the button, for example only display it, when the model is editable (here assuming you have a status field that indicates that):</source>
          <target state="translated">您可以为该按钮添加更多的条件,例如只有在模型可编辑时才显示该按钮(这里假设您有一个状态字段表明这一点)。</target>
        </trans-unit>
        <trans-unit id="7a5ce015e2dc45310833c92b13373dc4a3f89ea4" translate="yes" xml:space="preserve">
          <source>You can add parameters to a translation message that will be substituted with the corresponding value after translation. The format for this is to use curly brackets around the parameter name as you can see in the following example:</source>
          <target state="translated">您可以在翻译消息中添加参数,这些参数将在翻译后被相应的值所替代。其格式是在参数名称周围使用大括号,如下例所示。</target>
        </trans-unit>
        <trans-unit id="b3ac4813d93fe3dff39c2429520fb32a119a1a5e" translate="yes" xml:space="preserve">
          <source>You can also access attributes like accessing array elements, thanks to the support for &lt;a href=&quot;http://php.net/manual/en/class.arrayaccess.php&quot;&gt;ArrayAccess&lt;/a&gt; and &lt;a href=&quot;http://php.net/manual/en/class.traversable.php&quot;&gt;Traversable&lt;/a&gt; by &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt;:</source>
          <target state="translated">还可以访问属性，如访问数组元素，由于用于支撑&lt;a href=&quot;http://php.net/manual/en/class.arrayaccess.php&quot;&gt;了ArrayAccess&lt;/a&gt;和&lt;a href=&quot;http://php.net/manual/en/class.traversable.php&quot;&gt;Traversable的&lt;/a&gt;由&lt;a href=&quot;yii-base-model&quot;&gt;YII \基\型号&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="4f0dd65d0819e4b7810e228cdcf18fb97d75ff16" translate="yes" xml:space="preserve">
          <source>You can also access attributes like accessing array elements, thanks to the support for &lt;a href=&quot;https://php.net/manual/en/class.arrayaccess.php&quot;&gt;ArrayAccess&lt;/a&gt; and &lt;a href=&quot;https://php.net/manual/en/class.traversable.php&quot;&gt;Traversable&lt;/a&gt; by &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt;:</source>
          <target state="translated">还可以访问属性，如访问数组元素，由于用于支撑&lt;a href=&quot;https://php.net/manual/en/class.arrayaccess.php&quot;&gt;了ArrayAccess&lt;/a&gt;和&lt;a href=&quot;https://php.net/manual/en/class.traversable.php&quot;&gt;Traversable的&lt;/a&gt;由&lt;a href=&quot;yii-base-model&quot;&gt;YII \基\型号&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f1572b82019b125a1e9d0d42fdb507779ab46cf3" translate="yes" xml:space="preserve">
          <source>You can also attach a handler to an event when configuring a component with a configuration array. The syntax is like the following:</source>
          <target state="translated">当用配置数组配置一个组件时,你也可以将一个处理程序附加到一个事件上。其语法如下。</target>
        </trans-unit>
        <trans-unit id="7de18c911e1ef733e76b9430b0bd10a24d121fb5" translate="yes" xml:space="preserve">
          <source>You can also call a &lt;em&gt;public&lt;/em&gt; method of the behavior similarly:</source>
          <target state="translated">您也可以类似地调用行为的&lt;em&gt;公共&lt;/em&gt;方法：</target>
        </trans-unit>
        <trans-unit id="caf98e0e206f1755b05a2702c2c7d100ec294ad9" translate="yes" xml:space="preserve">
          <source>You can also configure multiple masters with multiple slaves. For example,</source>
          <target state="translated">你也可以配置多个主站与多个从站。例如</target>
        </trans-unit>
        <trans-unit id="60736dec98c4b4b9749014e258618ee9eed4646d" translate="yes" xml:space="preserve">
          <source>You can also directly manipulate &lt;a href=&quot;yii-base-model#%24validators-detail&quot;&gt;$validators&lt;/a&gt; to add or remove validation rules. This method provides a shortcut.</source>
          <target state="translated">您还可以直接操纵&lt;a href=&quot;yii-base-model#%24validators-detail&quot;&gt;$ validators&lt;/a&gt;添加或删除验证规则。此方法提供了一种快捷方式。</target>
        </trans-unit>
        <trans-unit id="4ee1dfc9b9d4aeeb82bbf9a0ada70d7e13afa148" translate="yes" xml:space="preserve">
          <source>You can also disable &lt;em&gt;all&lt;/em&gt; asset bundles by setting &lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii\web\AssetManager::$bundles&lt;/a&gt; as &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">您还可以通过将&lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii \ web \ AssetManager :: $ bundles设置&lt;/a&gt;为 &lt;code&gt;false&lt;/code&gt; 来禁用&lt;em&gt;所有&lt;/em&gt;资产捆绑包。</target>
        </trans-unit>
        <trans-unit id="c11f111d857dfbc7fc765cb818fb89da570ac0b0" translate="yes" xml:space="preserve">
          <source>You can also embed parameters in the server names to extract dynamic information from them. For example, the following rule will parse the URL &lt;code&gt;http://en.example.com/posts&lt;/code&gt; into the route &lt;code&gt;post/index&lt;/code&gt; and the parameter &lt;code&gt;language=en&lt;/code&gt;.</source>
          <target state="translated">您还可以在服务器名称中嵌入参数以从中提取动态信息。例如，以下规则会将URL &lt;code&gt;http://en.example.com/posts&lt;/code&gt; 解析为路由 &lt;code&gt;post/index&lt;/code&gt; 和参数 &lt;code&gt;language=en&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1bcc1e34c03b97afa45545805d17a3df8ecb0b1f" translate="yes" xml:space="preserve">
          <source>You can also explicitly create a Deferred object and call its &lt;code&gt;resolve()&lt;/code&gt; method when the asynchronous callback is hit. The following example shows how to validate the dimensions of an uploaded image file on the client-side.</source>
          <target state="translated">您还可以显式创建Deferred对象，并在命中异步回调时调用其 &lt;code&gt;resolve()&lt;/code&gt; 方法。以下示例显示了如何在客户端上验证上载图像文件的尺寸。</target>
        </trans-unit>
        <trans-unit id="6e60023513100e476077c343b132072d01f1a481" translate="yes" xml:space="preserve">
          <source>You can also explicitly specify a particular migration to which the database should be migrated by using the &lt;code&gt;migrate/to&lt;/code&gt; command in one of the following formats:</source>
          <target state="translated">您还可以通过使用以下格式之一的migration &lt;code&gt;migrate/to&lt;/code&gt; 命令，明确指定数据库应迁移到的特定迁移：</target>
        </trans-unit>
        <trans-unit id="79a89012d5a9d009688f41c23ea754d0b9bb50da" translate="yes" xml:space="preserve">
          <source>You can also specify a custom pattern to format the date value:</source>
          <target state="translated">你也可以指定一个自定义模式来格式化日期值。</target>
        </trans-unit>
        <trans-unit id="689fd8bacd2925bec04ef5aace8c1e1f79aa42db" translate="yes" xml:space="preserve">
          <source>You can also specify a custom pattern to format the number. For example,</source>
          <target state="translated">你也可以指定一个自定义模式来格式化数字。例如</target>
        </trans-unit>
        <trans-unit id="c6a4e452e1f645ef84a3a7d8bea943d43ed9e0a9" translate="yes" xml:space="preserve">
          <source>You can also specify a custom pattern to format the time value:</source>
          <target state="translated">你也可以指定一个自定义模式来格式化时间值。</target>
        </trans-unit>
        <trans-unit id="48578b7694795f2795d657f14422fdb191570d8f" translate="yes" xml:space="preserve">
          <source>You can also specify file content via \yii\mongodb\file\newFileContent attribute:</source>
          <target state="translated">你也可以通过yyii/mongodb/file/newFileContent属性来指定文件内容。</target>
        </trans-unit>
        <trans-unit id="a946a2d68e2ebd1277bf82520d898c3d97800ed9" translate="yes" xml:space="preserve">
          <source>You can also specify operator explicitly:</source>
          <target state="translated">您也可以明确地指定操作者。</target>
        </trans-unit>
        <trans-unit id="42d1b7a1ae5cfd9a9417bbf70ed596831db2ccb1" translate="yes" xml:space="preserve">
          <source>You can also upload multiple files at once, with some adjustments to the code listed in the previous subsections.</source>
          <target state="translated">你也可以一次上传多个文件,对前面小节中列出的代码做一些调整。</target>
        </trans-unit>
        <trans-unit id="53e2ef0ace032178ca75f26efa7bbadd593def20" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;yii-db-command#noCache()-detail&quot;&gt;yii\db\Command::noCache()&lt;/a&gt; to disable query caching for a single command. For example,</source>
          <target state="translated">您也可以使用&lt;a href=&quot;yii-db-command#noCache()-detail&quot;&gt;yii \ db \ Command :: noCache（）&lt;/a&gt;禁用单个命令的查询缓存。例如，</target>
        </trans-unit>
        <trans-unit id="81fa1c6bedee5f001616207fd46bc2c4db1c6308" translate="yes" xml:space="preserve">
          <source>You can also use sub-queries with hash format like the following:</source>
          <target state="translated">你也可以使用像下面这样的哈希格式的子查询。</target>
        </trans-unit>
        <trans-unit id="7a5f522ec648a6fe74868a87fcc4d0b8ec3c3958" translate="yes" xml:space="preserve">
          <source>You can also use the new query building methods when defining relations about &lt;code&gt;Comment&lt;/code&gt; or performing relational query:</source>
          <target state="translated">在定义有关 &lt;code&gt;Comment&lt;/code&gt; 的关系或执行关系查询时，还可以使用新的查询构建方法：</target>
        </trans-unit>
        <trans-unit id="6e1bf39b6a5e391cd1068412229c4070e48651bf" translate="yes" xml:space="preserve">
          <source>You can also use this widget in an &lt;a href=&quot;yii-widgets-activeform&quot;&gt;ActiveForm&lt;/a&gt; using the &lt;a href=&quot;yii-widgets-activefield#widget()-detail&quot;&gt;widget()&lt;/a&gt; method, for example like this:</source>
          <target state="translated">您还可以使用&lt;a href=&quot;yii-widgets-activefield#widget()-detail&quot;&gt;widget（）&lt;/a&gt;方法在&lt;a href=&quot;yii-widgets-activeform&quot;&gt;ActiveForm中&lt;/a&gt;使用此窗口小部件，例如：</target>
        </trans-unit>
        <trans-unit id="26595b510e16e3cc600755a6b6ca64e3778991e0" translate="yes" xml:space="preserve">
          <source>You can also use this widget in an &lt;a href=&quot;yii-widgets-activeform&quot;&gt;yii\widgets\ActiveForm&lt;/a&gt; using the &lt;a href=&quot;yii-widgets-activefield#widget()-detail&quot;&gt;widget()&lt;/a&gt; method, for example like this:</source>
          <target state="translated">您还可以使用&lt;a href=&quot;yii-widgets-activefield#widget()-detail&quot;&gt;widget（）&lt;/a&gt;方法在&lt;a href=&quot;yii-widgets-activeform&quot;&gt;yii \ widgets \ ActiveForm中&lt;/a&gt;使用此小部件，例如：</target>
        </trans-unit>
        <trans-unit id="7025d97894e50fb9a8ce5cdd7224f18e6dc02263" translate="yes" xml:space="preserve">
          <source>You can also use this widget in an \yii\jui\yii\widgets\ActiveForm using the \yii\jui\yii\widgets\ActiveField::widget() method, for example like this:</source>
          <target state="translated">你也可以使用这个widgets/ActiveForm中的widgets/ActiveField::widget()方法来使用这个widget,比如像这样。</target>
        </trans-unit>
        <trans-unit id="3e83f59a8228d3efd18a3c317f72226f99b16111" translate="yes" xml:space="preserve">
          <source>You can append additional constraints when using abstract types. In the above example, &lt;code&gt; NOT NULL&lt;/code&gt; is appended to &lt;code&gt;Schema::TYPE_STRING&lt;/code&gt; to specify that the column cannot be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">使用抽象类型时，可以附加其他约束。在上面的示例中， &lt;code&gt; NOT NULL&lt;/code&gt; 附加到 &lt;code&gt;Schema::TYPE_STRING&lt;/code&gt; 以指定该列不能为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffa0a41fd18333d6136b1b9a14b0a07790a18e75" translate="yes" xml:space="preserve">
          <source>You can attach a behavior to a &lt;a href=&quot;yii-base-component&quot;&gt;component&lt;/a&gt; either statically or dynamically. The former is more common in practice.</source>
          <target state="translated">您可以将行为静态或动态地附加到&lt;a href=&quot;yii-base-component&quot;&gt;组件&lt;/a&gt;。在实践中，前者更为常见。</target>
        </trans-unit>
        <trans-unit id="fc2e6d1aad0c2e7f0f97aceefbb3eaa2cecc0e9c" translate="yes" xml:space="preserve">
          <source>You can attach a handler to an event by calling the &lt;a href=&quot;yii-base-component#on()-detail&quot;&gt;yii\base\Component::on()&lt;/a&gt; method. For example:</source>
          <target state="translated">您可以通过调用&lt;a href=&quot;yii-base-component#on()-detail&quot;&gt;yii \ base \ Component :: on（）&lt;/a&gt;方法将处理程序附加到事件。例如：</target>
        </trans-unit>
        <trans-unit id="75bfce168ff025f63c5c6c8102d03bae91f9260b" translate="yes" xml:space="preserve">
          <source>You can calculate the aggregation fields as well using defined relations:</source>
          <target state="translated">你也可以使用定义的关系来计算聚合字段。</target>
        </trans-unit>
        <trans-unit id="8daa1945db57b6f2831fb8dc280cef8a185c0839" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-baseyii#getAlias()-detail&quot;&gt;Yii::getAlias()&lt;/a&gt; to resolve a root alias into the file path or URL it represents. The same method can also resolve a derived alias into the corresponding file path or URL:</source>
          <target state="translated">您可以调用&lt;a href=&quot;yii-baseyii#getAlias()-detail&quot;&gt;Yii :: getAlias（）&lt;/a&gt;将根别名解析为其表示的文件路径或URL。同样的方法也可以将派生的别名解析为相应的文件路径或URL：</target>
        </trans-unit>
        <trans-unit id="6a0e08406431f4c6acf511ac3d57a841deba4799" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-data-sort#link()-detail&quot;&gt;yii\data\Sort::link()&lt;/a&gt; to generate a hyperlink upon which end users can click to request sorting the data by the specified attribute. You may also call &lt;a href=&quot;yii-data-sort#createUrl()-detail&quot;&gt;yii\data\Sort::createUrl()&lt;/a&gt; to create a sortable URL. For example,</source>
          <target state="translated">您可以调用&lt;a href=&quot;yii-data-sort#link()-detail&quot;&gt;yii \ data \ Sort :: link（）&lt;/a&gt;生成超链接，最终用户可以单击该超链接以请求按指定属性对数据进行排序。您也可以调用&lt;a href=&quot;yii-data-sort#createUrl()-detail&quot;&gt;yii \ data \ Sort :: createUrl（）&lt;/a&gt;创建可排序的URL。例如，</target>
        </trans-unit>
        <trans-unit id="79415c016cbacc594c12bf7d7594e8afdc01d641" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-db-activerecord#deleteAll()-detail&quot;&gt;yii\db\ActiveRecord::deleteAll()&lt;/a&gt; to delete multiple or all rows of data. For example,</source>
          <target state="translated">您可以调用&lt;a href=&quot;yii-db-activerecord#deleteAll()-detail&quot;&gt;yii \ db \ ActiveRecord :: deleteAll（）&lt;/a&gt;删除多行或所有数据行。例如，</target>
        </trans-unit>
        <trans-unit id="128f17d03304aa3f27f9d5de64b2c0a982b6f587" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-db-query#addGroupBy()-detail&quot;&gt;addGroupBy()&lt;/a&gt; to add additional columns to the &lt;code&gt;GROUP BY&lt;/code&gt; fragment. For example,</source>
          <target state="translated">您可以调用&lt;a href=&quot;yii-db-query#addGroupBy()-detail&quot;&gt;addGroupBy（）&lt;/a&gt;将其他列添加到 &lt;code&gt;GROUP BY&lt;/code&gt; 片段。例如，</target>
        </trans-unit>
        <trans-unit id="74f7a52ddd3543d83c0cee67008794f6809196bb" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-db-query#addSelect()-detail&quot;&gt;addSelect()&lt;/a&gt; to select additional columns. For example,</source>
          <target state="translated">您可以调用&lt;a href=&quot;yii-db-query#addSelect()-detail&quot;&gt;addSelect（）&lt;/a&gt;选择其他列。例如，</target>
        </trans-unit>
        <trans-unit id="6b8c117bd9498aa128c75ee96a0f34cc701908a7" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-db-query#andHaving()-detail&quot;&gt;andHaving()&lt;/a&gt; or &lt;a href=&quot;yii-db-query#orHaving()-detail&quot;&gt;orHaving()&lt;/a&gt; to append additional conditions to the &lt;code&gt;HAVING&lt;/code&gt; fragment. For example,</source>
          <target state="translated">您可以调用&lt;a href=&quot;yii-db-query#andHaving()-detail&quot;&gt;andHaving（）&lt;/a&gt;或&lt;a href=&quot;yii-db-query#orHaving()-detail&quot;&gt;orHaving（）&lt;/a&gt;将附加条件附加到 &lt;code&gt;HAVING&lt;/code&gt; 片段。例如，</target>
        </trans-unit>
        <trans-unit id="b5215a1a408079b2fbe507a63659daca8f59f3ba" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-db-query#union()-detail&quot;&gt;union()&lt;/a&gt; multiple times to append more &lt;code&gt;UNION&lt;/code&gt; fragments.</source>
          <target state="translated">您可以多次调用&lt;a href=&quot;yii-db-query#union()-detail&quot;&gt;union（）&lt;/a&gt;来附加更多的 &lt;code&gt;UNION&lt;/code&gt; 片段。</target>
        </trans-unit>
        <trans-unit id="2bd29c906dfe6a09453f31d34d2154a34c9033cc" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-db-querytrait#addOrderBy()-detail&quot;&gt;addOrderBy()&lt;/a&gt; to add additional columns to the &lt;code&gt;ORDER BY&lt;/code&gt; fragment. For example,</source>
          <target state="translated">您可以调用&lt;a href=&quot;yii-db-querytrait#addOrderBy()-detail&quot;&gt;addOrderBy（）&lt;/a&gt;将其他列添加到 &lt;code&gt;ORDER BY&lt;/code&gt; 片段。例如，</target>
        </trans-unit>
        <trans-unit id="19bd3b2fcbf6cf9b7a9ca8ea472b86934af498db" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-web-session#open()-detail&quot;&gt;open()&lt;/a&gt; and &lt;a href=&quot;yii-web-session#close()-detail&quot;&gt;close()&lt;/a&gt; multiple times without causing errors; internally the methods will first check if the session is already open.</source>
          <target state="translated">您可以多次调用&lt;a href=&quot;yii-web-session#open()-detail&quot;&gt;open（）&lt;/a&gt;和&lt;a href=&quot;yii-web-session#close()-detail&quot;&gt;close（）&lt;/a&gt;而不引起错误；在内部，方法将首先检查会话是否已打开。</target>
        </trans-unit>
        <trans-unit id="21cb9c1ca2162dbe68887e3d210d3a55c525fb57" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-web-uploadedfile#getInstance()-detail&quot;&gt;getInstance()&lt;/a&gt; to retrieve the instance of an uploaded file, and then use &lt;a href=&quot;yii-web-uploadedfile#saveAs()-detail&quot;&gt;saveAs()&lt;/a&gt; to save it on the server. You may also query other information about the file, including &lt;a href=&quot;yii-web-uploadedfile#%24name-detail&quot;&gt;$name&lt;/a&gt;, &lt;a href=&quot;yii-web-uploadedfile#%24tempName-detail&quot;&gt;$tempName&lt;/a&gt;, &lt;a href=&quot;yii-web-uploadedfile#%24type-detail&quot;&gt;$type&lt;/a&gt;, &lt;a href=&quot;yii-web-uploadedfile#%24size-detail&quot;&gt;$size&lt;/a&gt; and &lt;a href=&quot;yii-web-uploadedfile#%24error-detail&quot;&gt;$error&lt;/a&gt;.</source>
          <target state="translated">您可以调用&lt;a href=&quot;yii-web-uploadedfile#getInstance()-detail&quot;&gt;getInstance（）&lt;/a&gt;来检索上载文件的实例，然后使用&lt;a href=&quot;yii-web-uploadedfile#saveAs()-detail&quot;&gt;saveAs（）&lt;/a&gt;将其保存在服务器上。您还可以查询有关文件的其他信息，包括&lt;a href=&quot;yii-web-uploadedfile#%24name-detail&quot;&gt;$ name&lt;/a&gt;，&lt;a href=&quot;yii-web-uploadedfile#%24tempName-detail&quot;&gt;$ tempName&lt;/a&gt;，&lt;a href=&quot;yii-web-uploadedfile#%24type-detail&quot;&gt;$ type&lt;/a&gt;，&lt;a href=&quot;yii-web-uploadedfile#%24size-detail&quot;&gt;$ size&lt;/a&gt;和&lt;a href=&quot;yii-web-uploadedfile#%24error-detail&quot;&gt;$ error&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d396f2e1d93c94a35d240e2fe82a22dabfacd93d" translate="yes" xml:space="preserve">
          <source>You can call &lt;code&gt;with()&lt;/code&gt; multiple times. Each call will add relations to the existing ones. For example, the following two statements are equivalent:</source>
          <target state="translated">您可以多次调用 &lt;code&gt;with()&lt;/code&gt; 。每个调用都会将关系添加到现有调用中。例如，以下两个语句是等效的：</target>
        </trans-unit>
        <trans-unit id="6637b3bb6366762dae549304b3931dd3f0444c83" translate="yes" xml:space="preserve">
          <source>You can check the validation result by &lt;a href=&quot;yii-base-model#hasErrors()-detail&quot;&gt;hasErrors()&lt;/a&gt;, like you do with a normal model. You may also access the dynamic attributes defined through the model instance, e.g., &lt;code&gt;$model-&amp;gt;name&lt;/code&gt; and &lt;code&gt;$model-&amp;gt;email&lt;/code&gt;.</source>
          <target state="translated">您可以像使用普通模型一样通过&lt;a href=&quot;yii-base-model#hasErrors()-detail&quot;&gt;hasErrors（）&lt;/a&gt;检查验证结果。您也可以访问通过模型实例定义的动态属性，例如 &lt;code&gt;$model-&amp;gt;name&lt;/code&gt; 和 &lt;code&gt;$model-&amp;gt;email&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc715b3e12074944633b5b9c489a9a76260a346e" translate="yes" xml:space="preserve">
          <source>You can configure &lt;a href=&quot;yii-web-urlmanager#%24rules-detail&quot;&gt;yii\web\UrlManager::$rules&lt;/a&gt; as an array with keys being the &lt;a href=&quot;yii-web-urlrule#%24pattern-detail&quot;&gt;patterns&lt;/a&gt; and values the corresponding &lt;a href=&quot;yii-web-urlrule#%24route-detail&quot;&gt;routes&lt;/a&gt;. Each pattern-route pair constructs a URL rule. For example, the following &lt;a href=&quot;yii-web-urlmanager#%24rules-detail&quot;&gt;rules&lt;/a&gt; configuration declares two URL rules. The first rule matches a URL &lt;code&gt;posts&lt;/code&gt; and maps it into the route &lt;code&gt;post/index&lt;/code&gt;. The second rule matches a URL matching the regular expression &lt;code&gt;post/(\d+)&lt;/code&gt; and maps it into the route &lt;code&gt;post/view&lt;/code&gt; and defines a query parameter named &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">您可以将&lt;a href=&quot;yii-web-urlmanager#%24rules-detail&quot;&gt;yii \ web \ UrlManager :: $ rules配置&lt;/a&gt;为一个数组，其键为&lt;a href=&quot;yii-web-urlrule#%24pattern-detail&quot;&gt;模式，&lt;/a&gt;并为相应的&lt;a href=&quot;yii-web-urlrule#%24route-detail&quot;&gt;路由&lt;/a&gt;赋值。每个模式路由对都构造一个URL规则。例如，以下&lt;a href=&quot;yii-web-urlmanager#%24rules-detail&quot;&gt;规则&lt;/a&gt;配置声明两个URL规则。第一个规则匹配URL &lt;code&gt;posts&lt;/code&gt; 并将其映射到路由 &lt;code&gt;post/index&lt;/code&gt; 中。第二个规则匹配与正则表达式 &lt;code&gt;post/(\d+)&lt;/code&gt; 匹配的URL，并将其映射到路线 &lt;code&gt;post/view&lt;/code&gt; 中,并定义名为 &lt;code&gt;id&lt;/code&gt; 的查询参数。</target>
        </trans-unit>
        <trans-unit id="2b8798757fe341123b629d74381c88fd3a8dc4b6" translate="yes" xml:space="preserve">
          <source>You can configure &lt;a href=&quot;yii-widgets-pjax#%24formSelector-detail&quot;&gt;$formSelector&lt;/a&gt; to specify which form submission may trigger pjax. If not set, all forms with &lt;code&gt;data-pjax&lt;/code&gt; attribute within the enclosed content of Pjax will trigger pjax requests.</source>
          <target state="translated">您可以配置&lt;a href=&quot;yii-widgets-pjax#%24formSelector-detail&quot;&gt;$ formSelector&lt;/a&gt;来指定哪些表单提交可能触发pjax。如果未设置，则包含在Pjax内容中的所有具有 &lt;code&gt;data-pjax&lt;/code&gt; 属性的表单都将触发pjax请求。</target>
        </trans-unit>
        <trans-unit id="223f8994ac2c774bbd368d65995853e353e7dcc3" translate="yes" xml:space="preserve">
          <source>You can configure application languages in the &quot;application configuration&quot; like the following:</source>
          <target state="translated">在 &quot;应用程序的设置 &quot;中,可以设置应用程序的语言,如下所示。</target>
        </trans-unit>
        <trans-unit id="4730f3df0111223e740948366c12d20360b8e5db" translate="yes" xml:space="preserve">
          <source>You can configure multiple asset bundles similarly through &lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii\web\AssetManager::$bundles&lt;/a&gt;. The array keys should be the class names (without the leading backslash) of the asset bundles, and the array values should be the corresponding &lt;a href=&quot;guide-concept-configurations&quot;&gt;configuration arrays&lt;/a&gt;.</source>
          <target state="translated">您可以通过&lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii \ web \ AssetManager :: $ bundles&lt;/a&gt;类似地配置多个资产捆绑包。数组键应为资产束的类名（不带反斜杠），并且数组值应为对应的&lt;a href=&quot;guide-concept-configurations&quot;&gt;配置数组&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="44bd9421b6ea3945e9564161985f7350c1fbda28" translate="yes" xml:space="preserve">
          <source>You can configure multiple flavors using the &lt;a href=&quot;yii-helpers-basemarkdown#%24flavors-detail&quot;&gt;$flavors&lt;/a&gt; property.</source>
          <target state="translated">您可以使用&lt;a href=&quot;yii-helpers-basemarkdown#%24flavors-detail&quot;&gt;$ flavors&lt;/a&gt;属性配置多个风味。</target>
        </trans-unit>
        <trans-unit id="935eb0e94f61a7614938e155e7775fe1ee8a0ed9" translate="yes" xml:space="preserve">
          <source>You can configure the &lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;controller map&lt;/a&gt; to overcome the constraints of the controller IDs and class names described above. This is mainly useful when you are using third-party controllers and you do not have control over their class names.</source>
          <target state="translated">您可以配置&lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;控制器映射，&lt;/a&gt;以克服上述控制器ID和类名的约束。当您使用第三方控制器并且无法控制其类名时，这主要有用。</target>
        </trans-unit>
        <trans-unit id="43ea54d63a88e4cc902334a9e69530bb7d9dfc4d" translate="yes" xml:space="preserve">
          <source>You can configure the &lt;a href=&quot;yii-web-errorhandler#%24errorView-detail&quot;&gt;errorView&lt;/a&gt; and &lt;a href=&quot;yii-web-errorhandler#%24exceptionView-detail&quot;&gt;exceptionView&lt;/a&gt; properties of the error handler to use your own views to customize the error display.</source>
          <target state="translated">您可以配置错误处理程序的&lt;a href=&quot;yii-web-errorhandler#%24errorView-detail&quot;&gt;errorView&lt;/a&gt;和&lt;a href=&quot;yii-web-errorhandler#%24exceptionView-detail&quot;&gt;exceptionView&lt;/a&gt;属性以使用自己的视图来自定义错误显示。</target>
        </trans-unit>
        <trans-unit id="7ddb7d132ff7d3d24f0c0484d3a911f72081d496" translate="yes" xml:space="preserve">
          <source>You can create actions in two ways: inline actions and standalone actions. An inline action is defined as a method in the controller class, while a standalone action is a class extending &lt;a href=&quot;yii-base-action&quot;&gt;yii\base\Action&lt;/a&gt; or its child classes. Inline actions take less effort to create and are often preferred if you have no intention to reuse these actions. Standalone actions, on the other hand, are mainly created to be used in different controllers or be redistributed as &lt;a href=&quot;guide-structure-extensions&quot;&gt;extensions&lt;/a&gt;.</source>
          <target state="translated">您可以通过两种方式创建操作：内联操作和独立操作。内联动作定义为控制器类中的方法，而独立动作是扩展&lt;a href=&quot;yii-base-action&quot;&gt;yii \ base \ Action&lt;/a&gt;或其子类的类。内联动作的创建工作较少，如果您无意重复使用这些动作，则通常首选它们。另一方面，独立操作主要是创建为在不同的控制器中使用或作为&lt;a href=&quot;guide-structure-extensions&quot;&gt;扩展&lt;/a&gt;重新分配。</target>
        </trans-unit>
        <trans-unit id="a3749eebd410c75f5ee9936eefa2d3bfb1292b37" translate="yes" xml:space="preserve">
          <source>You can create model classes by extending &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt; or its child classes. The base class &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt; supports many useful features:</source>
          <target state="translated">您可以通过扩展&lt;a href=&quot;yii-base-model&quot;&gt;yii \ base \ Model&lt;/a&gt;或其子类来创建模型类。基类&lt;a href=&quot;yii-base-model&quot;&gt;yii \ base \ Model&lt;/a&gt;支持许多有用的功能：</target>
        </trans-unit>
        <trans-unit id="1856ab667a17768f37e4593a79849823eb3e6fd1" translate="yes" xml:space="preserve">
          <source>You can create the &lt;code&gt;site/error&lt;/code&gt; action as follows,</source>
          <target state="translated">您可以按以下步骤创建 &lt;code&gt;site/error&lt;/code&gt; 操作，</target>
        </trans-unit>
        <trans-unit id="6b2ae815bce6fd26e0ce241da8bc8ea64e6048bd" translate="yes" xml:space="preserve">
          <source>You can customize the error message of a rule by specifying the &lt;code&gt;message&lt;/code&gt; property when declaring the rule, like the following,</source>
          <target state="translated">您可以通过在声明规则时指定 &lt;code&gt;message&lt;/code&gt; 属性来自定义规则的错误消息，如下所示，</target>
        </trans-unit>
        <trans-unit id="71181a5c128a98188695a4880907d39182477435" translate="yes" xml:space="preserve">
          <source>You can customize the pre-processor commands and the supported extended syntax by configuring &lt;a href=&quot;yii-web-assetmanager#%24converter-detail&quot;&gt;yii\web\AssetManager::$converter&lt;/a&gt; like the following:</source>
          <target state="translated">您可以通过配置&lt;a href=&quot;yii-web-assetmanager#%24converter-detail&quot;&gt;yii \ web \ AssetManager :: $ converter来自&lt;/a&gt;定义预处理程序命令和受支持的扩展语法，如下所示：</target>
        </trans-unit>
        <trans-unit id="f2afa663d338b56ea78528b19566306a1a9d8542" translate="yes" xml:space="preserve">
          <source>You can customize the widget appearance by using &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;begin()&lt;/a&gt; and &lt;a href=&quot;yii-base-widget#end()-detail&quot;&gt;end()&lt;/a&gt; syntax along with using method &lt;a href=&quot;yii-authclient-widgets-authchoice#clientLink()-detail&quot;&gt;clientLink()&lt;/a&gt; or &lt;a href=&quot;yii-authclient-widgets-authchoice#createClientUrl()-detail&quot;&gt;createClientUrl()&lt;/a&gt;. For example:</source>
          <target state="translated">您可以使用&lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;begin（）&lt;/a&gt;和&lt;a href=&quot;yii-base-widget#end()-detail&quot;&gt;end（）&lt;/a&gt;语法以及方法&lt;a href=&quot;yii-authclient-widgets-authchoice#clientLink()-detail&quot;&gt;clientLink（）&lt;/a&gt;或&lt;a href=&quot;yii-authclient-widgets-authchoice#createClientUrl()-detail&quot;&gt;createClientUrl（）来自&lt;/a&gt;定义小部件外观。例如：</target>
        </trans-unit>
        <trans-unit id="99f3df88feb4587383abc941ea119e285a94c400" translate="yes" xml:space="preserve">
          <source>You can define an alias for a file path or URL by calling &lt;a href=&quot;yii-baseyii#setAlias()-detail&quot;&gt;Yii::setAlias()&lt;/a&gt;:</source>
          <target state="translated">您可以通过调用&lt;a href=&quot;yii-baseyii#setAlias()-detail&quot;&gt;Yii :: setAlias（）&lt;/a&gt;来为文件路径或URL定义别名：</target>
        </trans-unit>
        <trans-unit id="1162416a41713002cf2d15f67671c8e8ac01005c" translate="yes" xml:space="preserve">
          <source>You can define an alias using another alias (either root or derived):</source>
          <target state="translated">你可以使用另一个别名(根或派生)定义别名。</target>
        </trans-unit>
        <trans-unit id="a7cd803556699b6df350a80c63dda1a95ed38c77" translate="yes" xml:space="preserve">
          <source>You can detect the identity of the current user using the expression &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;identity&lt;/code&gt;. It returns an instance of the &lt;a href=&quot;yii-web-user#%24identityClass-detail&quot;&gt;identity class&lt;/a&gt; representing the currently logged-in user, or &lt;code&gt;null&lt;/code&gt; if the current user is not authenticated (meaning a guest). The following code shows how to retrieve other authentication-related information from &lt;a href=&quot;yii-web-user&quot;&gt;yii\web\User&lt;/a&gt;:</source>
          <target state="translated">您可以使用表达式 &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;identity&lt;/code&gt; 来检测当前用户的身份。它返回表示当前登录用户的&lt;a href=&quot;yii-web-user#%24identityClass-detail&quot;&gt;身份类&lt;/a&gt;的实例；如果当前用户未通过身份验证（表示来宾），则返回 &lt;code&gt;null&lt;/code&gt; 。以下代码显示了如何从&lt;a href=&quot;yii-web-user&quot;&gt;yii \ web \ User中&lt;/a&gt;检索其他与身份验证相关的信息：</target>
        </trans-unit>
        <trans-unit id="daa755367836ad9735708c9a775bc6240b216490" translate="yes" xml:space="preserve">
          <source>You can differentiate the two states of an Active Record instance by checking its &lt;a href=&quot;yii-db-baseactiverecord#%24isNewRecord-detail&quot;&gt;isNewRecord&lt;/a&gt; property value. This property is also used by &lt;a href=&quot;yii-db-baseactiverecord#save()-detail&quot;&gt;save()&lt;/a&gt; internally as follows:</source>
          <target state="translated">您可以通过检查Active Record实例的&lt;a href=&quot;yii-db-baseactiverecord#%24isNewRecord-detail&quot;&gt;isNewRecord&lt;/a&gt;属性值来区分其两种状态。&lt;a href=&quot;yii-db-baseactiverecord#save()-detail&quot;&gt;save（）&lt;/a&gt;内部还使用此属性，如下所示：</target>
        </trans-unit>
        <trans-unit id="166dd3e176b7fc8d853d3022f55bc65930802728" translate="yes" xml:space="preserve">
          <source>You can disable one or multiple asset bundles by associating &lt;code&gt;false&lt;/code&gt; with the names of the asset bundles that you want to disable. When you register a disabled asset bundle with a view, none of its dependent bundles will be registered, and the view also will not include any of the assets in the bundle in the page it renders. For example, to disable &lt;a href=&quot;yii-web-jqueryasset&quot;&gt;yii\web\JqueryAsset&lt;/a&gt;, you can use the following configuration:</source>
          <target state="translated">您可以通过将 &lt;code&gt;false&lt;/code&gt; 与要禁用的资产束的名称相关联来禁用一个或多个资产束。当您在视图中注册禁用资产捆绑时，将不会注册其任何依赖捆绑，并且该视图还将在其呈现的页面中不包含捆绑中的任何资产。例如，要禁用&lt;a href=&quot;yii-web-jqueryasset&quot;&gt;yii \ web \ JqueryAsset&lt;/a&gt;，可以使用以下配置：</target>
        </trans-unit>
        <trans-unit id="09483c4a2201c6538e9a5c4289caf7692399e721" translate="yes" xml:space="preserve">
          <source>You can eagerly load deeply nested relations, such as &lt;code&gt;a.b.c.d&lt;/code&gt;. All parent relations will be eagerly loaded. That is, when you call &lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;with()&lt;/a&gt; using &lt;code&gt;a.b.c.d&lt;/code&gt;, you will eagerly load &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;a.b&lt;/code&gt;, &lt;code&gt;a.b.c&lt;/code&gt; and &lt;code&gt;a.b.c.d&lt;/code&gt;.</source>
          <target state="translated">您可以热切加载深层嵌套的关系，例如 &lt;code&gt;a.b.c.d&lt;/code&gt; 。所有的父母关系都将热切加载。也就是说，当您使用 &lt;code&gt;a.b.c.d&lt;/code&gt; 调用&lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;with（）时&lt;/a&gt;，您将急切地加载 &lt;code&gt;a&lt;/code&gt; ， &lt;code&gt;a.b&lt;/code&gt; ， &lt;code&gt;a.b.c&lt;/code&gt; 和 &lt;code&gt;a.b.c.d&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c4c2316e9d256b16dfa95cc443f856100262185" translate="yes" xml:space="preserve">
          <source>You can eagerly load one or multiple relations. You can even eagerly load &lt;em&gt;nested relations&lt;/em&gt;. A nested relation is a relation that is declared within a related Active Record class. For example, &lt;code&gt;Customer&lt;/code&gt; is related with &lt;code&gt;Order&lt;/code&gt; through the &lt;code&gt;orders&lt;/code&gt; relation, and &lt;code&gt;Order&lt;/code&gt; is related with &lt;code&gt;Item&lt;/code&gt; through the &lt;code&gt;items&lt;/code&gt; relation. When querying for &lt;code&gt;Customer&lt;/code&gt;, you can eagerly load &lt;code&gt;items&lt;/code&gt; using the nested relation notation &lt;code&gt;orders.items&lt;/code&gt;.</source>
          <target state="translated">您可以渴望加载一个或多个关系。您甚至可以热切地加载&lt;em&gt;嵌套关系&lt;/em&gt;。嵌套关系是在相关Active Record类中声明的关系。例如， &lt;code&gt;Customer&lt;/code&gt; 与相关的 &lt;code&gt;Order&lt;/code&gt; 通过 &lt;code&gt;orders&lt;/code&gt; 关系， &lt;code&gt;Order&lt;/code&gt; 与相关 &lt;code&gt;Item&lt;/code&gt; 通过 &lt;code&gt;items&lt;/code&gt; 的关系。查询 &lt;code&gt;Customer&lt;/code&gt; 时，您可以使用嵌套的关系符号 &lt;code&gt;orders.items&lt;/code&gt; 急于加载 &lt;code&gt;items&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="969edff440702198f6a774126ea676ffa551501e" translate="yes" xml:space="preserve">
          <source>You can embed images into the message content using &lt;code&gt;embed()&lt;/code&gt; method. This method returns the attachment id, which should be then used at &lt;code&gt;img&lt;/code&gt; tag. This method is easy to use when composing message content via view file:</source>
          <target state="translated">您可以使用 &lt;code&gt;embed()&lt;/code&gt; 方法将图像嵌入消息内容中。此方法返回附件ID，然后应在 &lt;code&gt;img&lt;/code&gt; 标签处使用该附件ID 。通过视图文件编写消息内容时，此方法易于使用：</target>
        </trans-unit>
        <trans-unit id="8c119654193a7a7160f6567e04f6057eb96b0ec5" translate="yes" xml:space="preserve">
          <source>You can embed parameter names in the route of a URL rule. This allows a URL rule to be used for matching multiple routes. For example, the following rules embed &lt;code&gt;controller&lt;/code&gt; and &lt;code&gt;action&lt;/code&gt; parameters in the routes.</source>
          <target state="translated">您可以将参数名称嵌入URL规则的路由中。这允许将URL规则用于匹配多个路由。例如，以下规则将 &lt;code&gt;controller&lt;/code&gt; 和 &lt;code&gt;action&lt;/code&gt; 参数嵌入到路由中。</target>
        </trans-unit>
        <trans-unit id="8bc594d4aa264d879450c0921cc90f54c2f2ef02" translate="yes" xml:space="preserve">
          <source>You can enable or disable a log target by configuring its &lt;a href=&quot;yii-log-target#%24enabled-detail&quot;&gt;enabled&lt;/a&gt; property. You may do so via the log target configuration or by the following PHP statement in your code:</source>
          <target state="translated">您可以通过配置日志目标的&lt;a href=&quot;yii-log-target#%24enabled-detail&quot;&gt;enabled&lt;/a&gt;属性来启用或禁用日志目标。您可以通过日志目标配置或代码中的以下PHP语句来执行此操作：</target>
        </trans-unit>
        <trans-unit id="48ac181ff1ef586a8f0408b783458d91262a86bf" translate="yes" xml:space="preserve">
          <source>You can flush the cache from the console by calling &lt;code&gt;yii cache/flush&lt;/code&gt; as well.</source>
          <target state="translated">您也可以通过调用 &lt;code&gt;yii cache/flush&lt;/code&gt; 从控制台刷新缓存。</target>
        </trans-unit>
        <trans-unit id="ab9dca3aa8f6c73236465b3cfabad8f80c3c8cf9" translate="yes" xml:space="preserve">
          <source>You can get details about the syntax in &lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;Quoting Table and Column Names&lt;/a&gt;.</source>
          <target state="translated">您可以在&amp;ldquo; &lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;引用表名和列名&amp;rdquo;中&lt;/a&gt;获取有关语法的详细信息。</target>
        </trans-unit>
        <trans-unit id="612c04288985a12bb124525c58bbdb546654082c" translate="yes" xml:space="preserve">
          <source>You can get the HTTP header information through the &lt;a href=&quot;yii-web-headercollection&quot;&gt;header collection&lt;/a&gt; returned by the &lt;a href=&quot;yii-web-request#%24headers-detail&quot;&gt;yii\web\Request::$headers&lt;/a&gt; property. For example,</source>
          <target state="translated">您可以通过&lt;a href=&quot;yii-web-request#%24headers-detail&quot;&gt;yii \ web \ Request :: $ headers&lt;/a&gt;属性返回的&lt;a href=&quot;yii-web-headercollection&quot;&gt;标头集合&lt;/a&gt;获取HTTP标头信息。例如，</target>
        </trans-unit>
        <trans-unit id="705dfb64fd254ad5c2e9e133a865ae502dacd074" translate="yes" xml:space="preserve">
          <source>You can get the HTTP method used by the current request via the expression &lt;code&gt;Yii::$app-&amp;gt;request-&amp;gt;method&lt;/code&gt;. A whole set of boolean properties is also provided for you to check if the current method is of certain type. For example,</source>
          <target state="translated">您可以通过表达式 &lt;code&gt;Yii::$app-&amp;gt;request-&amp;gt;method&lt;/code&gt; 获得当前请求使用的HTTP 方法。还提供了一组布尔属性，供您检查当前方法是否为某种类型。例如，</target>
        </trans-unit>
        <trans-unit id="5f0baba47332d24b7b32a58a8fa9006d1d06b25e" translate="yes" xml:space="preserve">
          <source>You can get the cookies in the current request using the following code:</source>
          <target state="translated">你可以使用以下代码获取当前请求中的cookie。</target>
        </trans-unit>
        <trans-unit id="e084d2a7b3351971fce182e93edcfd3ec146a1be" translate="yes" xml:space="preserve">
          <source>You can get the host name and IP address of the client machine through &lt;a href=&quot;yii-web-request#%24userHost-detail&quot;&gt;userHost&lt;/a&gt; and &lt;a href=&quot;yii-web-request#%24userIP-detail&quot;&gt;userIP&lt;/a&gt;, respectively. For example,</source>
          <target state="translated">您可以分别通过&lt;a href=&quot;yii-web-request#%24userHost-detail&quot;&gt;userHost&lt;/a&gt;和&lt;a href=&quot;yii-web-request#%24userIP-detail&quot;&gt;userIP&lt;/a&gt;获得客户端计算机的主机名和IP地址。例如，</target>
        </trans-unit>
        <trans-unit id="de5fa5ef6704c8f1fa717825c2727185203a484f" translate="yes" xml:space="preserve">
          <source>You can get the label of an attribute by calling &lt;a href=&quot;yii-base-model#getAttributeLabel()-detail&quot;&gt;yii\base\Model::getAttributeLabel()&lt;/a&gt;. For example,</source>
          <target state="translated">您可以通过调用&lt;a href=&quot;yii-base-model#getAttributeLabel()-detail&quot;&gt;yii \ base \ Model :: getAttributeLabel（）&lt;/a&gt;获得属性的标签。例如，</target>
        </trans-unit>
        <trans-unit id="50f3e39cff11910c98c98ea5c6178db6cbec78dd" translate="yes" xml:space="preserve">
          <source>You can ignore &lt;code&gt;$attribute&lt;/code&gt; parameter because validation is not related to just one attribute.</source>
          <target state="translated">您可以忽略 &lt;code&gt;$attribute&lt;/code&gt; 参数，因为验证不仅与一个属性有关。</target>
        </trans-unit>
        <trans-unit id="5bff127cbf6da7874f941f7c6e36b2ad79802a28" translate="yes" xml:space="preserve">
          <source>You can install Yii in two ways, using the &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt; package manager or by downloading an archive file. The former is the preferred way, as it allows you to install new &lt;a href=&quot;guide-structure-extensions&quot;&gt;extensions&lt;/a&gt; or update Yii by simply running a single command.</source>
          <target state="translated">您可以通过两种方式安装Yii，即使用&lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt;软件包管理器或下载存档文件。前者是首选方式，因为它允许您通过简单地运行单个命令来安装新&lt;a href=&quot;guide-structure-extensions&quot;&gt;扩展&lt;/a&gt;或更新Yii。</target>
        </trans-unit>
        <trans-unit id="3b4fa10e9c3141b84f913ce29edb33bd3711be44" translate="yes" xml:space="preserve">
          <source>You can list the asset files in extended syntax in the &lt;a href=&quot;yii-web-assetbundle#%24css-detail&quot;&gt;css&lt;/a&gt; and &lt;a href=&quot;yii-web-assetbundle#%24js-detail&quot;&gt;js&lt;/a&gt; properties of an asset bundle. For example,</source>
          <target state="translated">您可以在资产捆绑包的&lt;a href=&quot;yii-web-assetbundle#%24css-detail&quot;&gt;css&lt;/a&gt;和&lt;a href=&quot;yii-web-assetbundle#%24js-detail&quot;&gt;js&lt;/a&gt;属性中以扩展的语法列出资产文件。例如，</target>
        </trans-unit>
        <trans-unit id="5f9a92152e1718a168ac9a54ef32aa5a46b6f571" translate="yes" xml:space="preserve">
          <source>You can modify its configuration by adding an array to your application config under &lt;code&gt;components&lt;/code&gt; as it is shown in the following example:</source>
          <target state="translated">您可以通过在 &lt;code&gt;components&lt;/code&gt; 下的应用程序配置中添加一个数组来修改其配置，如以下示例所示：</target>
        </trans-unit>
        <trans-unit id="c451175a7f4fb755f3904b25a8fce5c6aafdf447" translate="yes" xml:space="preserve">
          <source>You can modify its configuration by adding an array to your application config under &lt;code&gt;components&lt;/code&gt; as shown in the following example:</source>
          <target state="translated">您可以通过在 &lt;code&gt;components&lt;/code&gt; 下的应用程序配置中添加一个数组来修改其配置，如以下示例所示：</target>
        </trans-unit>
        <trans-unit id="b448792c4446f4ec3600b758c7e9a4a053e67611" translate="yes" xml:space="preserve">
          <source>You can output static pages by putting their code in the view, and then using the code like the following in a controller:</source>
          <target state="translated">你可以把静态页面的代码放在视图中,然后在控制器中使用下面这样的代码来输出静态页面。</target>
        </trans-unit>
        <trans-unit id="dfa181280949d0369ea69caf8bd4894c94a04428" translate="yes" xml:space="preserve">
          <source>You can override &lt;code&gt;fields()&lt;/code&gt; to add, remove, rename or redefine fields. The return value of &lt;code&gt;fields()&lt;/code&gt; should be an array. The array keys are the field names, and the array values are the corresponding field definitions which can be either property/attribute names or anonymous functions returning the corresponding field values. In the special case when a field name is the same as its defining attribute name, you can omit the array key. For example,</source>
          <target state="translated">您可以覆盖 &lt;code&gt;fields()&lt;/code&gt; 以添加，删除，重命名或重新定义字段。 &lt;code&gt;fields()&lt;/code&gt; 的返回值应该是一个数组。数组键是字段名称，数组值是相应的字段定义，可以是属性/属性名称，也可以是返回相应字段值的匿名函数。在特殊情况下，如果字段名称与其定义的属性名称相同，则可以省略数组键。例如，</target>
        </trans-unit>
        <trans-unit id="a29c90ae682b6df9619aeeae91c5ad13522bc97a" translate="yes" xml:space="preserve">
          <source>You can pass the return value of this to one of the formatting methods: &lt;a href=&quot;yii-helpers-baseconsole#ansiFormat()-detail&quot;&gt;ansiFormat()&lt;/a&gt;, &lt;a href=&quot;yii-helpers-baseconsole#ansiFormatCode()-detail&quot;&gt;ansiFormatCode()&lt;/a&gt;, &lt;a href=&quot;yii-helpers-baseconsole#beginAnsiFormat()-detail&quot;&gt;beginAnsiFormat()&lt;/a&gt;</source>
          <target state="translated">您可以将此方法的返回值传递给以下一种格式化方法：&lt;a href=&quot;yii-helpers-baseconsole#ansiFormat()-detail&quot;&gt;ansiFormat（）&lt;/a&gt;，&lt;a href=&quot;yii-helpers-baseconsole#ansiFormatCode()-detail&quot;&gt;ansiFormatCode（）&lt;/a&gt;，&lt;a href=&quot;yii-helpers-baseconsole#beginAnsiFormat()-detail&quot;&gt;beginAnsiFormat（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="574564a9c8fc20fce6bc5014bd620496f50ef00d" translate="yes" xml:space="preserve">
          <source>You can redirect the user browser to a URL by calling the &lt;a href=&quot;yii-web-response#redirect()-detail&quot;&gt;yii\web\Response::redirect()&lt;/a&gt; method. The method sets the appropriate &lt;code&gt;Location&lt;/code&gt; header with the given URL and returns the response object itself. In an action method, you can call its shortcut version &lt;a href=&quot;yii-web-controller#redirect()-detail&quot;&gt;yii\web\Controller::redirect()&lt;/a&gt;. For example,</source>
          <target state="translated">您可以通过调用&lt;a href=&quot;yii-web-response#redirect()-detail&quot;&gt;yii \ web \ Response :: redirect（）&lt;/a&gt;方法将用户浏览器重定向到URL 。该方法使用给定的URL 设置适当的 &lt;code&gt;Location&lt;/code&gt; 标头，然后返回响应对象本身。在操作方法中，可以调用其快捷方式版本&lt;a href=&quot;yii-web-controller#redirect()-detail&quot;&gt;yii \ web \ Controller :: redirect（）&lt;/a&gt;。例如，</target>
        </trans-unit>
        <trans-unit id="ade68b828302db37c0966e5f482674a73ebd73da" translate="yes" xml:space="preserve">
          <source>You can register any component with an application, and the component can later be accessed globally using the expression &lt;code&gt;\Yii::$app-&amp;gt;componentID&lt;/code&gt;.</source>
          <target state="translated">您可以在应用程序中注册任何组件，以后可以使用表达式 &lt;code&gt;\Yii::$app-&amp;gt;componentID&lt;/code&gt; 全局访问该组件。</target>
        </trans-unit>
        <trans-unit id="9bd0a0caf81523e2686af2caf844048740622799" translate="yes" xml:space="preserve">
          <source>You can register multiple log targets in an application by configuring them through the &lt;code&gt;log&lt;/code&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt; in the application configuration, like the following:</source>
          <target state="translated">您可以通过在&lt;a href=&quot;guide-structure-application-components&quot;&gt;应用&lt;/a&gt;程序配置中的 &lt;code&gt;log&lt;/code&gt; 应用程序组件进行配置来在应用程序中注册多个日志目标，如下所示：</target>
        </trans-unit>
        <trans-unit id="83103224419fe0e7532edf920f2e34da302fbfd9" translate="yes" xml:space="preserve">
          <source>You can render a view within another view by calling one of the following methods provided by the &lt;a href=&quot;yii-base-view&quot;&gt;view component&lt;/a&gt;:</source>
          <target state="translated">您可以通过调用&lt;a href=&quot;yii-base-view&quot;&gt;view组件&lt;/a&gt;提供的以下方法之一在另一个视图中呈现视图：</target>
        </trans-unit>
        <trans-unit id="db88cc8fb3740a617a7d702a6ace70bf6fbf9f87" translate="yes" xml:space="preserve">
          <source>You can render views in &lt;a href=&quot;guide-structure-controllers&quot;&gt;controllers&lt;/a&gt;, &lt;a href=&quot;guide-structure-widgets&quot;&gt;widgets&lt;/a&gt;, or any other places by calling view rendering methods. These methods share a similar signature shown as follows,</source>
          <target state="translated">您可以通过调用视图渲染方法在&lt;a href=&quot;guide-structure-controllers&quot;&gt;控制器&lt;/a&gt;，&lt;a href=&quot;guide-structure-widgets&quot;&gt;小部件&lt;/a&gt;或任何其他地方渲染视图。这些方法具有相似的签名，如下所示：</target>
        </trans-unit>
        <trans-unit id="53a70216f82eb14c7d15081479dbf4e3cc3a58d4" translate="yes" xml:space="preserve">
          <source>You can see all available templates by running command:</source>
          <target state="translated">您可以通过运行命令查看所有可用的模板。</target>
        </trans-unit>
        <trans-unit id="42c46211060baa4c6795ea439a7e0d6385c8304d" translate="yes" xml:space="preserve">
          <source>You can send HTTP headers by manipulating the &lt;a href=&quot;yii-web-response#%24headers-detail&quot;&gt;header collection&lt;/a&gt; in the &lt;code&gt;response&lt;/code&gt; component. For example,</source>
          <target state="translated">您可以通过操纵发送HTTP头&lt;a href=&quot;yii-web-response#%24headers-detail&quot;&gt;头采集&lt;/a&gt;的 &lt;code&gt;response&lt;/code&gt; 分量。例如，</target>
        </trans-unit>
        <trans-unit id="907be410ee5e5c3f501a2edfbbdc0ece7986aadc" translate="yes" xml:space="preserve">
          <source>You can send cookies to end users using the following code:</source>
          <target state="translated">您可以使用以下代码向终端用户发送cookies。</target>
        </trans-unit>
        <trans-unit id="c5613abe58044176423b69ddd25505b71d1bb084" translate="yes" xml:space="preserve">
          <source>You can set and access flash data through the &lt;code&gt;session&lt;/code&gt; application component. For example,</source>
          <target state="translated">您可以通过 &lt;code&gt;session&lt;/code&gt; 应用程序组件设置和访问Flash数据。例如，</target>
        </trans-unit>
        <trans-unit id="568000f70e8230e39031c2095395d586c438df39" translate="yes" xml:space="preserve">
          <source>You can specify additional formatting rules in the placeholders of a message so that the parameter values can be formatted properly before they replace the placeholders. In the following example, the price parameter value will be treated as a number and formatted as a currency value:</source>
          <target state="translated">您可以在消息的占位符中指定额外的格式化规则,以便参数值在替换占位符之前能够正确地进行格式化。在下面的例子中,价格参数值将被视为一个数字,并被格式化为货币值。</target>
        </trans-unit>
        <trans-unit id="40f49a773735223f2f5fd62f1b0acf8ded1ca033" translate="yes" xml:space="preserve">
          <source>You can specify an optional parameter style as &lt;code&gt;integer&lt;/code&gt;, &lt;code&gt;currency&lt;/code&gt;, or &lt;code&gt;percent&lt;/code&gt;:</source>
          <target state="translated">您可以将可选参数样式指定为 &lt;code&gt;integer&lt;/code&gt; ， &lt;code&gt;currency&lt;/code&gt; 或 &lt;code&gt;percent&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8d459e45f9efd2c50ed8d2a85f0e4bd614ba3dab" translate="yes" xml:space="preserve">
          <source>You can specify an optional parameter style as &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, or &lt;code&gt;full&lt;/code&gt;:</source>
          <target state="translated">您可以将可选参数样式指定为 &lt;code&gt;short&lt;/code&gt; ， &lt;code&gt;medium&lt;/code&gt; ， &lt;code&gt;long&lt;/code&gt; 或 &lt;code&gt;full&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="09c238a0e767dd0f50881f9ac0dc834514728d99" translate="yes" xml:space="preserve">
          <source>You can specify date and time formats using the &lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime&quot;&gt;ICU syntax&lt;/a&gt;. You can also use the &lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;PHP date() syntax&lt;/a&gt; with a prefix &lt;code&gt;php:&lt;/code&gt; to differentiate it from ICU syntax. For example,</source>
          <target state="translated">您可以使用&lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime&quot;&gt;ICU语法&lt;/a&gt;指定日期和时间格式。您还可以将&lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;PHP date（）语法&lt;/a&gt;与前缀 &lt;code&gt;php:&lt;/code&gt; 一起使用,以将其与ICU语法区分开。例如，</target>
        </trans-unit>
        <trans-unit id="e62a2d58d20273ec16c96fc9aab9b3639becbabf" translate="yes" xml:space="preserve">
          <source>You can specify date and time formats using the &lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime&quot;&gt;ICU syntax&lt;/a&gt;. You can also use the &lt;a href=&quot;https://php.net/manual/en/function.date.php&quot;&gt;PHP date() syntax&lt;/a&gt; with a prefix &lt;code&gt;php:&lt;/code&gt; to differentiate it from ICU syntax. For example,</source>
          <target state="translated">您可以使用&lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime&quot;&gt;ICU语法&lt;/a&gt;指定日期和时间格式。您还可以将&lt;a href=&quot;https://php.net/manual/en/function.date.php&quot;&gt;PHP date（）语法&lt;/a&gt;与前缀 &lt;code&gt;php:&lt;/code&gt; 一起使用,以将其与ICU语法区分开。例如，</target>
        </trans-unit>
        <trans-unit id="034fbdbfbf010be99c37159ac2fbf07fa373f8fe" translate="yes" xml:space="preserve">
          <source>You can specify default message source that will be used as a fallback for category that doesn't match any configured category. You can do that by configuring a wildcard category &lt;code&gt;*&lt;/code&gt;. In order to do that, add the following to the application config:</source>
          <target state="translated">您可以指定默认消息源，该消息源将用作与任何已配置类别都不匹配的类别的后备。您可以通过配置通配符类别 &lt;code&gt;*&lt;/code&gt; 来实现。为此，将以下内容添加到应用程序配置中：</target>
        </trans-unit>
        <trans-unit id="56eedfddec216b087b4759f2ead366f526f1e9ed" translate="yes" xml:space="preserve">
          <source>You can specify different options of this command:</source>
          <target state="translated">您可以指定该命令的不同选项。</target>
        </trans-unit>
        <trans-unit id="fe7d14b154b1ffa1efd87b2fd9bda0524eee9c69" translate="yes" xml:space="preserve">
          <source>You can specify different view files for HTML and plain text message contents:</source>
          <target state="translated">您可以为HTML和纯文本信息内容指定不同的视图文件。</target>
        </trans-unit>
        <trans-unit id="4b3fb9033a61b88bbf47b0fb764b9699a692405e" translate="yes" xml:space="preserve">
          <source>You can specify how many fixtures per file you need by the second parameter. In the code below we generate all fixtures and in each file there will be 3 rows (fixtures).</source>
          <target state="translated">您可以通过第二个参数指定每个文件需要多少个夹具。在下面的代码中,我们生成所有的夹具,在每个文件中会有3行(夹具)。</target>
        </trans-unit>
        <trans-unit id="97644b9bee3bf5b95e963f10299f847a12468ed1" translate="yes" xml:space="preserve">
          <source>You can specify more field parameters.</source>
          <target state="translated">您可以指定更多的字段参数。</target>
        </trans-unit>
        <trans-unit id="6ab305fd50436081692652cd4c627e5e94e11863" translate="yes" xml:space="preserve">
          <source>You can specify multiple columns as follows:</source>
          <target state="translated">您可以按以下方式指定多列。</target>
        </trans-unit>
        <trans-unit id="6cfbde70adc4db07b292fa6a89e0c4f0bbbf34dc" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;a href=&quot;yii-web-assetbundle#%24cssOptions-detail&quot;&gt;cssOptions&lt;/a&gt; and &lt;a href=&quot;yii-web-assetbundle#%24jsOptions-detail&quot;&gt;jsOptions&lt;/a&gt; properties to customize the way that CSS and JavaScript files are included in a page. The values of these properties will be passed to the &lt;a href=&quot;yii-web-view#registerCssFile()-detail&quot;&gt;yii\web\View::registerCssFile()&lt;/a&gt; and &lt;a href=&quot;yii-web-view#registerJsFile()-detail&quot;&gt;yii\web\View::registerJsFile()&lt;/a&gt; methods, respectively, when they are called by the &lt;a href=&quot;guide-structure-views&quot;&gt;view&lt;/a&gt; to include CSS and JavaScript files.</source>
          <target state="translated">您可以指定&lt;a href=&quot;yii-web-assetbundle#%24cssOptions-detail&quot;&gt;cssOptions&lt;/a&gt;和&lt;a href=&quot;yii-web-assetbundle#%24jsOptions-detail&quot;&gt;jsOptions&lt;/a&gt;属性，以自定义页面中包含CSS和JavaScript文件的方式。当&lt;a href=&quot;guide-structure-views&quot;&gt;视图&lt;/a&gt;调用它们包含CSS和JavaScript文件时，这些属性的值将分别传递到&lt;a href=&quot;yii-web-view#registerCssFile()-detail&quot;&gt;yii \ web \ View :: registerCssFile（）&lt;/a&gt;和&lt;a href=&quot;yii-web-view#registerJsFile()-detail&quot;&gt;yii \ web \ View :: registerJsFile（）&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="eb99eb13f8c1d390931dce9e7d825051052f4c4c" translate="yes" xml:space="preserve">
          <source>You can specify the table(s) being selected from in either a string or an array. The table names may contain schema prefixes and/or table aliases, like you do when writing raw SQL statements. For example,</source>
          <target state="translated">你可以用字符串或数组来指定被选择的表,表名可以包含模式前缀和/或表的别名,就像你在编写原始SQL语句时一样。表名可以包含模式前缀和/或表的别名,就像你在编写原始SQL语句时那样。例如:表名可以包含模式前缀和/或表别名,就像编写原始SQL语句时一样。</target>
        </trans-unit>
        <trans-unit id="af64abfbe84057f57c7d6e30e53adc04a4eb8d80" translate="yes" xml:space="preserve">
          <source>You can still override the value set via DI container, though:</source>
          <target state="translated">不过你仍然可以通过DI容器覆盖设置的值。</target>
        </trans-unit>
        <trans-unit id="cfbdac5b2ea7b4a3b1ae9a01d8a7584828abebd3" translate="yes" xml:space="preserve">
          <source>You can then access the DB connection via the expression &lt;code&gt;Yii::$app-&amp;gt;db&lt;/code&gt;.</source>
          <target state="translated">然后，您可以通过表达式 &lt;code&gt;Yii::$app-&amp;gt;db&lt;/code&gt; 访问数据库连接。</target>
        </trans-unit>
        <trans-unit id="2a0b78888e8bb4b5991a22aeef06fb3a6f58831f" translate="yes" xml:space="preserve">
          <source>You can then access the above cache component using the expression &lt;code&gt;Yii::$app-&amp;gt;cache&lt;/code&gt;.</source>
          <target state="translated">然后，您可以使用表达式 &lt;code&gt;Yii::$app-&amp;gt;cache&lt;/code&gt; 访问上述缓存组件。</target>
        </trans-unit>
        <trans-unit id="4a1efa82519e8b37cf2d8604650edb5245ea1245" translate="yes" xml:space="preserve">
          <source>You can trigger the event of those classes:</source>
          <target state="translated">你可以触发这些类的事件。</target>
        </trans-unit>
        <trans-unit id="c2a5659ca5cacfbf44da52abc323f711dc8b6b7c" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;guide-caching-fragment&quot;&gt;fragment caching&lt;/a&gt; as well as &lt;a href=&quot;guide-caching-fragment#dynamic-content&quot;&gt;dynamic content&lt;/a&gt; together with page caching.</source>
          <target state="translated">您可以将&lt;a href=&quot;guide-caching-fragment&quot;&gt;片段缓存&lt;/a&gt;以及&lt;a href=&quot;guide-caching-fragment#dynamic-content&quot;&gt;动态内容&lt;/a&gt;与页面缓存一起使用。</target>
        </trans-unit>
        <trans-unit id="cdc9d9cb4f7653ef01e897f26bc11310e1544363" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;guide-db-migrations&quot;&gt;migrations&lt;/a&gt; to initialize and modify hierarchy via APIs offered by &lt;code&gt;authManager&lt;/code&gt;.</source>
          <target state="translated">您可以使用&lt;a href=&quot;guide-db-migrations&quot;&gt;迁移&lt;/a&gt;通过 &lt;code&gt;authManager&lt;/code&gt; 提供的API来初始化和修改层次结构。</target>
        </trans-unit>
        <trans-unit id="7cb643736d8634f20ebb2fdbe26f84e4f81b335f" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;yii-db-connection#cache()-detail&quot;&gt;yii\db\Connection::cache()&lt;/a&gt; if you have multiple SQL queries that need to take advantage of query caching. The usage is as follows,</source>
          <target state="translated">如果您有多个SQL查询需要利用查询缓存，则可以使用&lt;a href=&quot;yii-db-connection#cache()-detail&quot;&gt;yii \ db \ Connection :: cache（）&lt;/a&gt;。用法如下，</target>
        </trans-unit>
        <trans-unit id="eee1f92a1abff2c101abd64c6e5c2df3d8d5429b" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;yii-db-query#andWhere()-detail&quot;&gt;andWhere()&lt;/a&gt; or &lt;a href=&quot;yii-db-query#orWhere()-detail&quot;&gt;orWhere()&lt;/a&gt; to append additional conditions to an existing one. You can call them multiple times to append multiple conditions separately. For example,</source>
          <target state="translated">您可以使用&lt;a href=&quot;yii-db-query#andWhere()-detail&quot;&gt;andWhere（）&lt;/a&gt;或&lt;a href=&quot;yii-db-query#orWhere()-detail&quot;&gt;orWhere（）&lt;/a&gt;将其他条件附加到现有条件上。您可以多次调用它们以分别附加多个条件。例如，</target>
        </trans-unit>
        <trans-unit id="23fc83e4faa0b3cf1fcc41838e38f35e38074bac" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;yii-di-container#get()-detail&quot;&gt;get()&lt;/a&gt; to either create or get object instance. The method takes a dependency name, which can be a class name, an interface name or an alias name. The dependency name may be registered via &lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;set()&lt;/a&gt; or &lt;a href=&quot;yii-di-container#setSingleton()-detail&quot;&gt;setSingleton()&lt;/a&gt;. You may optionally provide a list of class constructor parameters and a &lt;a href=&quot;guide-concept-configurations&quot;&gt;configuration&lt;/a&gt; to configure the newly created object.</source>
          <target state="translated">您可以使用&lt;a href=&quot;yii-di-container#get()-detail&quot;&gt;get（）&lt;/a&gt;创建或获取对象实例。该方法采用一个依赖项名称，该依赖项名称可以是类名称，接口名称或别名。依赖项名称可以通过&lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;set（）&lt;/a&gt;或&lt;a href=&quot;yii-di-container#setSingleton()-detail&quot;&gt;setSingleton（）&lt;/a&gt;进行注册。您可以选择提供的类的构造函数参数列表和&lt;a href=&quot;guide-concept-configurations&quot;&gt;配置&lt;/a&gt;来配置新创建的对象。</target>
        </trans-unit>
        <trans-unit id="eddc9fe5579bbbaf840d07acafefc52062943b61" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;yii\di\Container::set()&lt;/a&gt; to register dependencies. The registration requires a dependency name as well as a dependency definition. A dependency name can be a class name, an interface name, or an alias name; and a dependency definition can be a class name, a configuration array, or a PHP callable.</source>
          <target state="translated">您可以使用&lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;yii \ di \ Container :: set（）&lt;/a&gt;注册依赖项。注册需要依赖项名称以及依赖项定义。依赖项名称可以是类名称，接口名称或别名。依赖项定义可以是类名，配置数组或可调用的PHP。</target>
        </trans-unit>
        <trans-unit id="c335e922984928bb6317cb78d3e16ec378d9b3fe" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;yii-helpers-basearrayhelper#merge()-detail&quot;&gt;ArrayHelper::merge()&lt;/a&gt; to merge two or more arrays into one recursively. If each array has an element with the same string key value, the latter will overwrite the former (different from &lt;a href=&quot;http://php.net/manual/en/function.array-merge-recursive.php&quot;&gt;array_merge_recursive()&lt;/a&gt;). Recursive merging will be conducted if both arrays have an element of array type and are having the same key. For integer-keyed elements, the elements from the latter array will be appended to the former array. You can use &lt;a href=&quot;yii-helpers-unsetarrayvalue&quot;&gt;yii\helpers\UnsetArrayValue&lt;/a&gt; object to unset value from previous array or &lt;a href=&quot;yii-helpers-replacearrayvalue&quot;&gt;yii\helpers\ReplaceArrayValue&lt;/a&gt; to force replace former value instead of recursive merging.</source>
          <target state="translated">您可以使用&lt;a href=&quot;yii-helpers-basearrayhelper#merge()-detail&quot;&gt;ArrayHelper :: merge（）&lt;/a&gt;将两个或多个数组递归合并为一个。如果每个数组的元素具有相同的字符串键值，则后者将覆盖前者（与&lt;a href=&quot;http://php.net/manual/en/function.array-merge-recursive.php&quot;&gt;array_merge_recursive（）&lt;/a&gt;不同）。如果两个数组都具有数组类型的元素并且具有相同的键，则将进行递归合并。对于整数键元素，后一个数组中的元素将附加到前一个数组中。您可以使用&lt;a href=&quot;yii-helpers-unsetarrayvalue&quot;&gt;yii \ helpers \ UnsetArrayValue&lt;/a&gt;对象从先前的数组中取消设置值，也可以使用yii &lt;a href=&quot;yii-helpers-replacearrayvalue&quot;&gt;\ helpers \ ReplaceArrayValue&lt;/a&gt;来强制替换先前的值，而不是递归合并。</target>
        </trans-unit>
        <trans-unit id="120e268febce873294b3dcdf58b3531de66404bc" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;yii-helpers-basearrayhelper#merge()-detail&quot;&gt;ArrayHelper::merge()&lt;/a&gt; to merge two or more arrays into one recursively. If each array has an element with the same string key value, the latter will overwrite the former (different from &lt;a href=&quot;https://php.net/manual/en/function.array-merge-recursive.php&quot;&gt;array_merge_recursive()&lt;/a&gt;). Recursive merging will be conducted if both arrays have an element of array type and are having the same key. For integer-keyed elements, the elements from the latter array will be appended to the former array. You can use &lt;a href=&quot;yii-helpers-unsetarrayvalue&quot;&gt;yii\helpers\UnsetArrayValue&lt;/a&gt; object to unset value from previous array or &lt;a href=&quot;yii-helpers-replacearrayvalue&quot;&gt;yii\helpers\ReplaceArrayValue&lt;/a&gt; to force replace former value instead of recursive merging.</source>
          <target state="translated">您可以使用&lt;a href=&quot;yii-helpers-basearrayhelper#merge()-detail&quot;&gt;ArrayHelper :: merge（）&lt;/a&gt;将两个或多个数组递归合并为一个。如果每个数组的元素具有相同的字符串键值，则后者将覆盖前者（与&lt;a href=&quot;https://php.net/manual/en/function.array-merge-recursive.php&quot;&gt;array_merge_recursive（）&lt;/a&gt;不同）。如果两个数组都具有数组类型的元素并且具有相同的键，则将进行递归合并。对于整数键元素，后一个数组中的元素将附加到前一个数组中。您可以使用&lt;a href=&quot;yii-helpers-unsetarrayvalue&quot;&gt;yii \ helpers \ UnsetArrayValue&lt;/a&gt;对象从先前的数组中取消设置值，也可以使用yii &lt;a href=&quot;yii-helpers-replacearrayvalue&quot;&gt;\ helpers \ ReplaceArrayValue&lt;/a&gt;来强制替换先前的值，而不是递归合并。</target>
        </trans-unit>
        <trans-unit id="5040433ed42e6ff91e29b8e4a2c63c6b60ce3045" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;'*'&lt;/code&gt; to stand for all actions. When an action is explicitly specified, it takes precedence over the specification given by &lt;code&gt;'*'&lt;/code&gt;.</source>
          <target state="translated">您可以使用 &lt;code&gt;'*'&lt;/code&gt; 代表所有动作。当明确指定动作时，它优先于 &lt;code&gt;'*'&lt;/code&gt; 给出的规格。</target>
        </trans-unit>
        <trans-unit id="232fddab8bf295ad14b387744faff3648c4194da" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;Download::substr()&lt;/code&gt; to read a specific part of the file:</source>
          <target state="translated">您可以使用 &lt;code&gt;Download::substr()&lt;/code&gt; 读取文件的特定部分：</target>
        </trans-unit>
        <trans-unit id="337c676558c8efbc8d2db1df43f25958cb106ca9" translate="yes" xml:space="preserve">
          <source>You can use any of these attributes instead (or use what you think is the most relevant):</source>
          <target state="translated">你可以使用这些属性中的任何一个来代替(或者使用你认为最相关的属性)。</target>
        </trans-unit>
        <trans-unit id="6770228d3f2564f530d6c6a610d4431aad3bbf74" translate="yes" xml:space="preserve">
          <source>You can use either &lt;em&gt;named placeholders&lt;/em&gt; or &lt;em&gt;positional placeholders&lt;/em&gt;, but not both, in a single message.</source>
          <target state="translated">您可以在单个消息中使用&lt;em&gt;命名占位符&lt;/em&gt;或&lt;em&gt;位置占位符&lt;/em&gt;，但不能同时使用两者。</target>
        </trans-unit>
        <trans-unit id="f1e45c905dc03e0fd0b6c2fa49de54f32a9ca090" translate="yes" xml:space="preserve">
          <source>You can use either a URL or an alias of the URL.</source>
          <target state="translated">你可以使用URL或URL的别名。</target>
        </trans-unit>
        <trans-unit id="19137c51d7ea74c2bf3559951824316ac7ae99c0" translate="yes" xml:space="preserve">
          <source>You can use either a directory or an alias of the directory.</source>
          <target state="translated">你可以使用目录或目录的别名。</target>
        </trans-unit>
        <trans-unit id="4cdcfc9b4d46da8d968f5a3759b81db140cbe839" translate="yes" xml:space="preserve">
          <source>You can use either the short form or the full form to specify a placeholder with formatting:</source>
          <target state="translated">你可以使用简短的形式或完整的形式来指定一个带有格式的占位符。</target>
        </trans-unit>
        <trans-unit id="b1e05716147c6b82340a30ff35f5ff8c63f9657e" translate="yes" xml:space="preserve">
          <source>You can use it in a child model:</source>
          <target state="translated">你可以在子模型中使用它。</target>
        </trans-unit>
        <trans-unit id="397ad4620359a3523cd1eee0636496228b053147" translate="yes" xml:space="preserve">
          <source>You can use it in an action by returning the &lt;a href=&quot;yii-web-response&quot;&gt;yii\web\Response&lt;/a&gt; directly:</source>
          <target state="translated">您可以通过直接返回&lt;a href=&quot;yii-web-response&quot;&gt;yii \ web \ Response&lt;/a&gt;来在操作中使用它：</target>
        </trans-unit>
        <trans-unit id="a14286a77f45556d0f29442115424cb392fd5846" translate="yes" xml:space="preserve">
          <source>You can use more than one GridView on a single page but some additional configuration is needed so that they do not interfere with each other. When using multiple instances of GridView you have to configure different parameter names for the generated sort and pagination links so that each GridView has its own individual sorting and pagination. You do so by setting the &lt;a href=&quot;yii-data-sort#%24sortParam-detail&quot;&gt;sortParam&lt;/a&gt; and &lt;a href=&quot;yii-data-pagination#%24pageParam-detail&quot;&gt;pageParam&lt;/a&gt; of the dataProvider's &lt;a href=&quot;yii-data-basedataprovider#%24sort-detail&quot;&gt;sort&lt;/a&gt; and &lt;a href=&quot;yii-data-basedataprovider#%24pagination-detail&quot;&gt;pagination&lt;/a&gt; instances.</source>
          <target state="translated">您可以在单个页面上使用多个GridView，但是需要进行一些其他配置，以防止它们彼此干扰。使用多个GridView实例时，必须为生成的排序和分页链接配置不同的参数名称，以便每个GridView都有自己的单独的排序和分页。您可以通过设置dataProvider的&lt;a href=&quot;yii-data-basedataprovider#%24sort-detail&quot;&gt;sort&lt;/a&gt;和&lt;a href=&quot;yii-data-basedataprovider#%24pagination-detail&quot;&gt;pagination&lt;/a&gt;实例的&lt;a href=&quot;yii-data-sort#%24sortParam-detail&quot;&gt;sortParam&lt;/a&gt;和&lt;a href=&quot;yii-data-pagination#%24pageParam-detail&quot;&gt;pageParam&lt;/a&gt;来实现。</target>
        </trans-unit>
        <trans-unit id="70f105cacf05832701008e93edb4937dc295468f" translate="yes" xml:space="preserve">
          <source>You can use most of the relational query features that have been described in this section.</source>
          <target state="translated">你可以使用本节中介绍的大部分关系查询功能。</target>
        </trans-unit>
        <trans-unit id="8fdf62b64d822b1fe81bc6cf2a0e0501d8684964" translate="yes" xml:space="preserve">
          <source>You can use one of the following workarounds to solve this problem:</source>
          <target state="translated">你可以使用以下一种变通方法来解决这个问题。</target>
        </trans-unit>
        <trans-unit id="1956a8441e380e05737bdee1eb22295e503752de" translate="yes" xml:space="preserve">
          <source>You can use query methods, such as &lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where()&lt;/a&gt;, &lt;a href=&quot;yii-db-querytrait#limit()-detail&quot;&gt;limit()&lt;/a&gt; and &lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy()&lt;/a&gt; to customize the query options.</source>
          <target state="translated">您可以使用诸如&lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where（）&lt;/a&gt;，&lt;a href=&quot;yii-db-querytrait#limit()-detail&quot;&gt;limit（）&lt;/a&gt;和&lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy（）之类的&lt;/a&gt;查询方法来自定义查询选项。</target>
        </trans-unit>
        <trans-unit id="34ccad1d25e86d7cb9f5795a28112b826e84b69d" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;select&lt;/code&gt; parameter type to choose a phrase based on the parameter value. For example,</source>
          <target state="translated">您可以使用 &lt;code&gt;select&lt;/code&gt; 参数类型来根据参数值选择短语。例如，</target>
        </trans-unit>
        <trans-unit id="f2672726990a35ca839c3bcc4af91649a876d3b3" translate="yes" xml:space="preserve">
          <source>You can use the following shortcut methods to specify &lt;code&gt;INNER JOIN&lt;/code&gt;, &lt;code&gt;LEFT JOIN&lt;/code&gt; and &lt;code&gt;RIGHT JOIN&lt;/code&gt;, respectively.</source>
          <target state="translated">您可以使用以下快捷方式分别指定 &lt;code&gt;INNER JOIN&lt;/code&gt; ， &lt;code&gt;LEFT JOIN&lt;/code&gt; 和 &lt;code&gt;RIGHT JOIN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef2ce57ef897d3627e7e715d96a3982e8a369977" translate="yes" xml:space="preserve">
          <source>You can use this command to generate models, controllers, etc. For example, to generate an ActiveRecord model based on a DB table, you can run:</source>
          <target state="translated">您可以使用这个命令来生成模型、控制器等。例如,要生成基于DB表的ActiveRecord模型,你可以运行。</target>
        </trans-unit>
        <trans-unit id="7f5e666d1cb6797be150dc85c9b7e6812f3ae2f5" translate="yes" xml:space="preserve">
          <source>You can use this function in the controller to get the dataProvider for the GridView:</source>
          <target state="translated">你可以在控制器中使用这个函数来获取GridView的数据提供者。</target>
        </trans-unit>
        <trans-unit id="3e4b42317cfc8594a32a564726111b1dd44b4dda" translate="yes" xml:space="preserve">
          <source>You can use this method in an action by returning the &lt;a href=&quot;yii-web-response&quot;&gt;yii\web\Response&lt;/a&gt; directly:</source>
          <target state="translated">您可以通过直接返回&lt;a href=&quot;yii-web-response&quot;&gt;yii \ web \ Response&lt;/a&gt;在操作中使用此方法：</target>
        </trans-unit>
        <trans-unit id="ab14b0773b565e5d1b9590638c4242163112cfba" translate="yes" xml:space="preserve">
          <source>You can use this validator to validate against a single column or multiple columns (i.e., the combination of multiple attribute values should exist).</source>
          <target state="translated">您可以使用该验证器对单列或多列进行验证(即多个属性值的组合应该存在)。</target>
        </trans-unit>
        <trans-unit id="fa6bc0a9c10cd414e914335ff9198b7ec5ebfbff" translate="yes" xml:space="preserve">
          <source>You can use this widget in an \yii\bootstrap\yii\bootstrap\ActiveForm using the \yii\bootstrap\yii\widgets\ActiveField::widget() method, for example like this:</source>
          <target state="translated">你可以在一个使用yiiii/bootstrap/yiiii/bootstrap/ActiveForm的widgets/ActiveField::widgets/ActiveField::widget()方法来使用这个widget,比如像这样。</target>
        </trans-unit>
        <trans-unit id="0bd418d3da34d4f67e7389c5d19a9c8a70323e2e" translate="yes" xml:space="preserve">
          <source>You can use your browser to access the installed Yii application with the following URL:</source>
          <target state="translated">您可以使用您的浏览器访问安装的Yii应用程序,网址如下。</target>
        </trans-unit>
        <trans-unit id="ecf17c27a315fc3190d39f0d620f0929300d26d4" translate="yes" xml:space="preserve">
          <source>You can work with several different databases at the same server using this class. However, while it is unlikely your application will actually need it, the Connection class provides ability to use &lt;a href=&quot;yii-mongodb-connection#%24defaultDatabaseName-detail&quot;&gt;$defaultDatabaseName&lt;/a&gt; as well as a shortcut method &lt;a href=&quot;yii-mongodb-connection#getCollection()-detail&quot;&gt;getCollection()&lt;/a&gt; to retrieve a particular collection instance:</source>
          <target state="translated">您可以使用此类在同一台服务器上使用多个不同的数据库。但是，虽然您的应用程序不太可能真正需要它，但是Connection类提供了使用&lt;a href=&quot;yii-mongodb-connection#%24defaultDatabaseName-detail&quot;&gt;$ defaultDatabaseName&lt;/a&gt;以及快捷方法&lt;a href=&quot;yii-mongodb-connection#getCollection()-detail&quot;&gt;getCollection（）&lt;/a&gt;来检索特定集合实例的功能：</target>
        </trans-unit>
        <trans-unit id="3c4438d2becc4b7dbaf360018f67e531dc7905b6" translate="yes" xml:space="preserve">
          <source>You do not always need to configure this property if none of your code is using it.</source>
          <target state="translated">如果你的代码中没有使用这个属性,你并不总是需要配置它。</target>
        </trans-unit>
        <trans-unit id="57654e756cbfcf7bc9f7ef568aee3b8795492ee1" translate="yes" xml:space="preserve">
          <source>You execute a console controller action using the following syntax:</source>
          <target state="translated">您可以使用以下语法执行一个控制台控制器操作。</target>
        </trans-unit>
        <trans-unit id="ebefdfb4e46cab361490385a9de043d9f618e743" translate="yes" xml:space="preserve">
          <source>You have two ways to divide these asset bundles. One is to use a single group to include all asset bundles, the other is to put A in Group X, D in Group Y, and (B, C) in Group S. Which one is better? It depends. The first way has the advantage that both pages share the same combined CSS and JavaScript files, which makes HTTP caching more effective. On the other hand, because the single group contains all bundles, the size of the combined CSS and JavaScript files will be bigger and thus increase the initial file transmission time. For simplicity in this example, we will use the first way, i.e., use a single group to contain all bundles.</source>
          <target state="translated">你有两种方法来划分这些资产束。一种是用一个组来包含所有的资产束,另一种是把A放在X组,D放在Y组,(B,C)放在S组,哪一种更好?这要看情况。第一种方式的优点是两个页面共享相同的组合CSS和JavaScript文件,这使得HTTP缓存更加有效。另一方面,由于单个组包含了所有的捆绑包,所以组合的CSS和JavaScript文件的大小会更大,从而增加了初始文件的传输时间。为了简单起见,在本例中,我们将使用第一种方式,即使用单个组来包含所有的bundles。</target>
        </trans-unit>
        <trans-unit id="951b4ea0cde1e15fa22899208ecba6ee28a2cd42" translate="yes" xml:space="preserve">
          <source>You mainly use &lt;a href=&quot;yii-web-user&quot;&gt;yii\web\User&lt;/a&gt; in terms of the &lt;code&gt;user&lt;/code&gt; application component.</source>
          <target state="translated">就 &lt;code&gt;user&lt;/code&gt; 应用程序组件而言，您主要使用&lt;a href=&quot;yii-web-user&quot;&gt;yii \ web \ User&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b55f71375967a787256a697c6146216da96decb1" translate="yes" xml:space="preserve">
          <source>You may access your APIs with the &lt;code&gt;curl&lt;/code&gt; command like the following,</source>
          <target state="translated">您可以使用 &lt;code&gt;curl&lt;/code&gt; 命令访问API，如下所示，</target>
        </trans-unit>
        <trans-unit id="c033157d67304f04a821cf667092aaed43e37e34" translate="yes" xml:space="preserve">
          <source>You may add a class to the class map, stored in &lt;code&gt;Yii::$classMap&lt;/code&gt;, using:</source>
          <target state="translated">您可以使用以下方法将类添加到类映射中，并存储在 &lt;code&gt;Yii::$classMap&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="5e6f54ab417d156a29e9549046b5d673666cc211" translate="yes" xml:space="preserve">
          <source>You may also access the instance of a module using the following approaches:</source>
          <target state="translated">您也可以使用以下方法访问模块的实例。</target>
        </trans-unit>
        <trans-unit id="1a836823955bf8ff0f255f46017b3de9c077a331" translate="yes" xml:space="preserve">
          <source>You may also assign an alias to a fixture. In the above example, the &lt;code&gt;UserProfileFixture&lt;/code&gt; is aliased as &lt;code&gt;profiles&lt;/code&gt;. In the test methods, you may then access a fixture object using its alias. For example, &lt;code&gt;$this-&amp;gt;profiles&lt;/code&gt; will return the &lt;code&gt;UserProfileFixture&lt;/code&gt; object.</source>
          <target state="translated">您也可以为灯具指定别名。在上面的示例中， &lt;code&gt;UserProfileFixture&lt;/code&gt; 别名为 &lt;code&gt;profiles&lt;/code&gt; 。然后，在测试方法中，您可以使用其别名访问灯具对象。例如， &lt;code&gt;$this-&amp;gt;profiles&lt;/code&gt; 将返回 &lt;code&gt;UserProfileFixture&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="a3b96e73b37e493c3def6a47c8a9157371df54cf" translate="yes" xml:space="preserve">
          <source>You may also attach behaviors through &lt;a href=&quot;guide-concept-configurations&quot;&gt;configurations&lt;/a&gt; like the following:</source>
          <target state="translated">您也可以通过以下&lt;a href=&quot;guide-concept-configurations&quot;&gt;配置来&lt;/a&gt;附加行为：</target>
        </trans-unit>
        <trans-unit id="9243ad8149d0a3e517d8c7bd5555d2d9ab144e20" translate="yes" xml:space="preserve">
          <source>You may also attach event handlers through &lt;a href=&quot;guide-concept-configurations&quot;&gt;configurations&lt;/a&gt;. For more details, please refer to the &lt;a href=&quot;guide-concept-configurations#configuration-format&quot;&gt;Configurations&lt;/a&gt; section.</source>
          <target state="translated">您还可以通过&lt;a href=&quot;guide-concept-configurations&quot;&gt;配置&lt;/a&gt;附加事件处理程序。有关更多详细信息，请参阅&amp;ldquo; &lt;a href=&quot;guide-concept-configurations#configuration-format&quot;&gt;配置&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="aa4b965a27e1942163a01c4686c098cc5e814794" translate="yes" xml:space="preserve">
          <source>You may also call &lt;a href=&quot;yii-db-command#batchInsert()-detail&quot;&gt;batchInsert()&lt;/a&gt; to insert multiple rows in one shot, which is much more efficient than inserting one row at a time:</source>
          <target state="translated">您也可以调用&lt;a href=&quot;yii-db-command#batchInsert()-detail&quot;&gt;batchInsert（）一次&lt;/a&gt;插入多行，这比一次插入一行要高效得多：</target>
        </trans-unit>
        <trans-unit id="5b2c5ca170e3378f236b3881918eb76029e62a70" translate="yes" xml:space="preserve">
          <source>You may also configure &lt;code&gt;patterns&lt;/code&gt; or &lt;code&gt;extraPatterns&lt;/code&gt; to redefine existing patterns or add new patterns supported by this rule. For example, to support a new action &lt;code&gt;search&lt;/code&gt; by the endpoint &lt;code&gt;GET /users/search&lt;/code&gt;, configure the &lt;code&gt;extraPatterns&lt;/code&gt; option as follows,</source>
          <target state="translated">您也可以配置 &lt;code&gt;patterns&lt;/code&gt; 或 &lt;code&gt;extraPatterns&lt;/code&gt; 以重新定义现有模式或添加此规则支持的新模式。例如，要支持通过端点 &lt;code&gt;GET /users/search&lt;/code&gt; 进行的新操作 &lt;code&gt;search&lt;/code&gt; ，请按以下方式配置 &lt;code&gt;extraPatterns&lt;/code&gt; 选项，</target>
        </trans-unit>
        <trans-unit id="b485762eab68baececfabe39304b54de2a62103d" translate="yes" xml:space="preserve">
          <source>You may also detach &lt;em&gt;all&lt;/em&gt; behaviors:</source>
          <target state="translated">您还可以分离&lt;em&gt;所有&lt;/em&gt;行为：</target>
        </trans-unit>
        <trans-unit id="c1839c755c4cb177f1b7052533cd5eac9f9e2765" translate="yes" xml:space="preserve">
          <source>You may also directly set &lt;code&gt;Yii::$app-&amp;gt;db-&amp;gt;enableSlaves&lt;/code&gt; to be &lt;code&gt;false&lt;/code&gt; to direct all queries to the master connection.</source>
          <target state="translated">您也可以直接将 &lt;code&gt;Yii::$app-&amp;gt;db-&amp;gt;enableSlaves&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; ,以将所有查询定向到主连接。</target>
        </trans-unit>
        <trans-unit id="ccccb09cb8d7419f64cb332d1b1b5d255706c73c" translate="yes" xml:space="preserve">
          <source>You may also frequently use the following minor yet useful features when you are developing Web pages.</source>
          <target state="translated">在开发网页时,你还可能经常使用以下一些小而有用的功能。</target>
        </trans-unit>
        <trans-unit id="ea0c725a34bffc57dee6cfeb88da7d2af58495a2" translate="yes" xml:space="preserve">
          <source>You may also get all behaviors attached to a component:</source>
          <target state="translated">你也可以得到附加到一个组件的所有行为。</target>
        </trans-unit>
        <trans-unit id="0a79375be66cb489c7e2067f48de3a1bb285d8b0" translate="yes" xml:space="preserve">
          <source>You may also pass multiple controller IDs as an array. If this is the case, this composite rule will generate applicable URL rules for EVERY specified controller. For example, &lt;code&gt;['user', 'post']&lt;/code&gt;.</source>
          <target state="translated">您也可以将多个控制器ID作为数组传递。在这种情况下，此复合规则将为每个指定的控制器生成适用的URL规则。例如， &lt;code&gt;['user', 'post']&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eeaf206cd4b00350a1bcdb1634ed099882526766" translate="yes" xml:space="preserve">
          <source>You may also send several messages at once:</source>
          <target state="translated">您也可以同时发送多个信息。</target>
        </trans-unit>
        <trans-unit id="4b76c26a5e0674ebae8a7f810b91a5194db34f88" translate="yes" xml:space="preserve">
          <source>You may also set this property to a string representing the attribute name to be displayed in this column. This can be used when the attribute to be displayed is different from the &lt;a href=&quot;yii-grid-datacolumn#%24attribute-detail&quot;&gt;$attribute&lt;/a&gt; that is used for sorting and filtering.</source>
          <target state="translated">您也可以将此属性设置为表示要在此列中显示的属性名称的字符串。当要显示的&lt;a href=&quot;yii-grid-datacolumn#%24attribute-detail&quot;&gt;属性&lt;/a&gt;与用于排序和过滤的$ attribute不同时，可以使用此属性。</target>
        </trans-unit>
        <trans-unit id="8ffe5aa9e139803630a655f97552821b2ed2b14f" translate="yes" xml:space="preserve">
          <source>You may also skip the configuration of the &lt;a href=&quot;yii-swiftmailer-mailer#%24transport-detail&quot;&gt;$transport&lt;/a&gt; property. In that case, the default PHP &lt;code&gt;mail()&lt;/code&gt; function will be used to send emails.</source>
          <target state="translated">您也可以跳过&lt;a href=&quot;yii-swiftmailer-mailer#%24transport-detail&quot;&gt;$ transport&lt;/a&gt;属性的配置。在这种情况下，默认的PHP &lt;code&gt;mail()&lt;/code&gt; 函数将用于发送电子邮件。</target>
        </trans-unit>
        <trans-unit id="395a332f0c3f8bdef16dede19dbdb6695b97ce8c" translate="yes" xml:space="preserve">
          <source>You may also specify a closure that returns an array. This can be used to evaluate the array values only if they are needed, for example when a model needs to be loaded like in the following code:</source>
          <target state="translated">你也可以指定一个返回数组的闭包。只有在需要时,才可以用它来评估数组的值,例如,当需要加载模型时,就像下面的代码一样。</target>
        </trans-unit>
        <trans-unit id="3561057999968b219efb55c7edc25007885a83d2" translate="yes" xml:space="preserve">
          <source>You may also specify a sub-query that is used to get the values for the &lt;code&gt;IN&lt;/code&gt;-condition: &lt;code&gt;['in', 'user_id', (new Query())-&amp;gt;select('id')-&amp;gt;from('users')-&amp;gt;where(['active' =&amp;gt; 1])]&lt;/code&gt;</source>
          <target state="translated">您还可以指定一个子查询，该子查询用于获取 &lt;code&gt;IN&lt;/code&gt; 条件的值： &lt;code&gt;['in', 'user_id', (new Query())-&amp;gt;select('id')-&amp;gt;from('users')-&amp;gt;where(['active' =&amp;gt; 1])]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="abac669fd6d6a519082185c334a0462e51cd4c34" translate="yes" xml:space="preserve">
          <source>You may also use './yii message/config' command to dynamically generate configuration file with specified options via cli. For example, you can set &lt;code&gt;languages&lt;/code&gt; and &lt;code&gt;messagePath&lt;/code&gt; parameters like the following:</source>
          <target state="translated">您还可以使用'./yii message / config'命令通过cli动态生成具有指定选项的配置文件。例如，您可以设置 &lt;code&gt;languages&lt;/code&gt; 和 &lt;code&gt;messagePath&lt;/code&gt; 参数，如下所示：</target>
        </trans-unit>
        <trans-unit id="a1dcc8f7a8818ca60bf8c27a2eb9117fcdcfabe8" translate="yes" xml:space="preserve">
          <source>You may also use a &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt; to specify the location of the command:</source>
          <target state="translated">您也可以使用&lt;a href=&quot;guide-concept-aliases&quot;&gt;路径别名&lt;/a&gt;来指定命令的位置：</target>
        </trans-unit>
        <trans-unit id="cad1adf34b61215004f12b795816456c7fc365d6" translate="yes" xml:space="preserve">
          <source>You may also use aliases while specifying map value, for example:</source>
          <target state="translated">您也可以在指定地图值时使用别名,例如。</target>
        </trans-unit>
        <trans-unit id="2ad9d7a929efc7a88f4b27b5f09cf3ad264bfbdd" translate="yes" xml:space="preserve">
          <source>You may also use the array style when adding or removing classes:</source>
          <target state="translated">您也可以在添加或删除类时使用数组样式。</target>
        </trans-unit>
        <trans-unit id="c4159d627e124ff1678bf7c2f2c97b6c320710a9" translate="yes" xml:space="preserve">
          <source>You may also use the more general &lt;a href=&quot;guide-tutorial-core-validators#filter&quot;&gt;filter&lt;/a&gt; validator to perform more complex data filtering.</source>
          <target state="translated">您也可以使用更通用的&lt;a href=&quot;guide-tutorial-core-validators#filter&quot;&gt;过滤&lt;/a&gt;器验证器来执行更复杂的数据过滤。</target>
        </trans-unit>
        <trans-unit id="fefcd16648bb1f71b04ac638547951446c2009b4" translate="yes" xml:space="preserve">
          <source>You may as well compose expressions with special operators like 'MAYBE', 'PROXIMITY' etc. For example:</source>
          <target state="translated">你也可以用特殊的运算符组成表达式,如'MAYBE'、'PROXIMITY'等。比如说</target>
        </trans-unit>
        <trans-unit id="2a90ecdd682fa6a316fc5047f447789e0453a948" translate="yes" xml:space="preserve">
          <source>You may associate a name with a behavior by specifying the array key corresponding to the behavior configuration. In this case, the behavior is called a &lt;em&gt;named behavior&lt;/em&gt;. In the above example, there are two named behaviors: &lt;code&gt;myBehavior2&lt;/code&gt; and &lt;code&gt;myBehavior4&lt;/code&gt;. If a behavior is not associated with a name, it is called an &lt;em&gt;anonymous behavior&lt;/em&gt;.</source>
          <target state="translated">您可以通过指定与行为配置相对应的数组键来将名称与行为相关联。在这种情况下，该行为称为&lt;em&gt;命名行为&lt;/em&gt;。在上面的示例中，有两个命名的行为： &lt;code&gt;myBehavior2&lt;/code&gt; 和 &lt;code&gt;myBehavior4&lt;/code&gt; 。如果行为与名称不相关，则称为&lt;em&gt;匿名行为&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e1a2275b6fbfbeebb887a1e1a0fa6ce890760735" translate="yes" xml:space="preserve">
          <source>You may attach multiple behaviors at once using the &lt;a href=&quot;yii-base-component#attachBehaviors()-detail&quot;&gt;yii\base\Component::attachBehaviors()&lt;/a&gt; method:</source>
          <target state="translated">您可以使用&lt;a href=&quot;yii-base-component#attachBehaviors()-detail&quot;&gt;yii \ base \ Component :: attachBehaviors（）&lt;/a&gt;方法一次附加多个行为：</target>
        </trans-unit>
        <trans-unit id="50a4cfce8775d89ac6f6e6d98381df04aabc3232" translate="yes" xml:space="preserve">
          <source>You may attach one or more handlers to a single event. When an event is triggered, the attached handlers will be called in the order that they were attached to the event. If a handler needs to stop the invocation of the handlers that follow it, it may set the &lt;a href=&quot;yii-base-event#%24handled-detail&quot;&gt;yii\base\Event::$handled&lt;/a&gt; property of the &lt;code&gt;$event&lt;/code&gt; parameter to be &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">您可以将一个或多个处理程序附加到单个事件。触发事件后，将按附加到事件的顺序调用附加的处理程序。如果处理程序需要停止对其后的处理程序的调用，则可以将 &lt;code&gt;$event&lt;/code&gt; 参数的&lt;a href=&quot;yii-base-event#%24handled-detail&quot;&gt;yii \ base \ Event :: $ handled&lt;/a&gt;属性设置为 &lt;code&gt;true&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="009a2116edaae70ab18b61cc0bc1eae87428677d" translate="yes" xml:space="preserve">
          <source>You may call &lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;yii\base\Model::validate()&lt;/a&gt; to validate the received data. The method will use the validation rules declared in &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;yii\base\Model::rules()&lt;/a&gt; to validate every relevant attribute. If no error is found, it will return &lt;code&gt;true&lt;/code&gt;. Otherwise, it will keep the errors in the &lt;a href=&quot;yii-base-model#%24errors-detail&quot;&gt;yii\base\Model::$errors&lt;/a&gt; property and return &lt;code&gt;false&lt;/code&gt;. For example,</source>
          <target state="translated">您可以调用&lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;yii \ base \ Model :: validate（）&lt;/a&gt;来验证接收到的数据。该方法将使用&lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;yii \ base \ Model :: rules（）中&lt;/a&gt;声明的验证规则来验证每个相关属性。如果未发现错误，它将返回 &lt;code&gt;true&lt;/code&gt; 。否则，它将错误保留在&lt;a href=&quot;yii-base-model#%24errors-detail&quot;&gt;yii \ base \ Model :: $ errors&lt;/a&gt;属性中，并返回 &lt;code&gt;false&lt;/code&gt; 。例如，</target>
        </trans-unit>
        <trans-unit id="ff1146c1a8570a4f2a1e978e49ae831e48606895" translate="yes" xml:space="preserve">
          <source>You may call &lt;a href=&quot;yii-base-view#renderDynamic()-detail&quot;&gt;yii\base\View::renderDynamic()&lt;/a&gt; within a cached fragment to insert dynamic content at the desired place, like the following,</source>
          <target state="translated">您可以在缓存的片段中调用&lt;a href=&quot;yii-base-view#renderDynamic()-detail&quot;&gt;yii \ base \ View :: renderDynamic（）&lt;/a&gt;在所需的位置插入动态内容，如下所示，</target>
        </trans-unit>
        <trans-unit id="60a43cced48f677a05fba2623cf4cdef40f1b286" translate="yes" xml:space="preserve">
          <source>You may call that method either by passing an instance of &lt;code&gt;\my\heavy\Dependency&lt;/code&gt; yourself or using &lt;a href=&quot;yii-di-container#invoke()-detail&quot;&gt;yii\di\Container::invoke()&lt;/a&gt; like the following:</source>
          <target state="translated">您可以通过自己传递 &lt;code&gt;\my\heavy\Dependency&lt;/code&gt; 的实例或使用&lt;a href=&quot;yii-di-container#invoke()-detail&quot;&gt;yii \ di \ Container :: invoke（）来调用&lt;/a&gt;该方法，如下所示：</target>
        </trans-unit>
        <trans-unit id="6f89a021c21c8b68ebb6af968bcfdf7ecc403c22" translate="yes" xml:space="preserve">
          <source>You may call this method to load default values after creating a new instance:</source>
          <target state="translated">您可以在创建新的实例后调用此方法加载默认值。</target>
        </trans-unit>
        <trans-unit id="0390a2ab9d10058e393976acebb4c195ea9447a2" translate="yes" xml:space="preserve">
          <source>You may call various methods to change the user authentication status:</source>
          <target state="translated">你可以调用各种方法来改变用户认证状态。</target>
        </trans-unit>
        <trans-unit id="eeb190b72329eb7df9658a69982207ed09bc3287" translate="yes" xml:space="preserve">
          <source>You may change the default controller with the following &lt;a href=&quot;guide-structure-applications#application-configurations&quot;&gt;application configuration&lt;/a&gt;:</source>
          <target state="translated">您可以使用以下&lt;a href=&quot;guide-structure-applications#application-configurations&quot;&gt;应用程序配置&lt;/a&gt;来更改默认控制器：</target>
        </trans-unit>
        <trans-unit id="80b86a68c9fc45856eccceca97ef7720e60802c5" translate="yes" xml:space="preserve">
          <source>You may change the name of the table used to store the data by setting &lt;a href=&quot;yii-log-dbtarget#%24logTable-detail&quot;&gt;$logTable&lt;/a&gt;.</source>
          <target state="translated">您可以通过设置&lt;a href=&quot;yii-log-dbtarget#%24logTable-detail&quot;&gt;$ logTable&lt;/a&gt;来更改用于存储数据的表的名称。</target>
        </trans-unit>
        <trans-unit id="7a50ca8eac8c39ce3aebeb6697ea7a7e3cdd9710" translate="yes" xml:space="preserve">
          <source>You may change the names of the tables used to store the authorization and rule data by setting &lt;a href=&quot;yii-rbac-dbmanager#%24itemTable-detail&quot;&gt;$itemTable&lt;/a&gt;, &lt;a href=&quot;yii-rbac-dbmanager#%24itemChildTable-detail&quot;&gt;$itemChildTable&lt;/a&gt;, &lt;a href=&quot;yii-rbac-dbmanager#%24assignmentTable-detail&quot;&gt;$assignmentTable&lt;/a&gt; and &lt;a href=&quot;yii-rbac-dbmanager#%24ruleTable-detail&quot;&gt;$ruleTable&lt;/a&gt;.</source>
          <target state="translated">您可以通过设置&lt;a href=&quot;yii-rbac-dbmanager#%24itemTable-detail&quot;&gt;$ itemTable&lt;/a&gt;，&lt;a href=&quot;yii-rbac-dbmanager#%24itemChildTable-detail&quot;&gt;$ itemChildTable&lt;/a&gt;，&lt;a href=&quot;yii-rbac-dbmanager#%24assignmentTable-detail&quot;&gt;$ assignmentTable&lt;/a&gt;和&lt;a href=&quot;yii-rbac-dbmanager#%24ruleTable-detail&quot;&gt;$ ruleTable&lt;/a&gt;来更改用于存储授权和规则数据的表的名称。</target>
        </trans-unit>
        <trans-unit id="937b286b6cc89c7e8dd8b14fc13d591b0ffbeb2a" translate="yes" xml:space="preserve">
          <source>You may configure &lt;a href=&quot;yii-i18n-phpmessagesource#%24fileMap-detail&quot;&gt;fileMap&lt;/a&gt; to map a category to a PHP file with a different naming approach.</source>
          <target state="translated">您可以配置&lt;a href=&quot;yii-i18n-phpmessagesource#%24fileMap-detail&quot;&gt;fileMap&lt;/a&gt;以使用不同的命名方法将类别映射到PHP文件。</target>
        </trans-unit>
        <trans-unit id="eefc200c88eb574324fa83dfa71b747eeeea7600" translate="yes" xml:space="preserve">
          <source>You may configure &lt;a href=&quot;yii-rest-urlrule#%24only-detail&quot;&gt;$only&lt;/a&gt; and/or &lt;a href=&quot;yii-rest-urlrule#%24except-detail&quot;&gt;$except&lt;/a&gt; to disable some of the above rules. You may configure &lt;a href=&quot;yii-rest-urlrule#%24patterns-detail&quot;&gt;$patterns&lt;/a&gt; to completely redefine your own list of rules. You may configure &lt;a href=&quot;yii-rest-urlrule#%24controller-detail&quot;&gt;$controller&lt;/a&gt; with multiple controller IDs to generate rules for all these controllers. For example, the following code will disable the &lt;code&gt;delete&lt;/code&gt; rule and generate rules for both &lt;code&gt;user&lt;/code&gt; and &lt;code&gt;post&lt;/code&gt; controllers:</source>
          <target state="translated">您可以配置&lt;a href=&quot;yii-rest-urlrule#%24only-detail&quot;&gt;$ only&lt;/a&gt;和/或&lt;a href=&quot;yii-rest-urlrule#%24except-detail&quot;&gt;$ except&lt;/a&gt;禁用某些上述规则。您可以配置&lt;a href=&quot;yii-rest-urlrule#%24patterns-detail&quot;&gt;$ patterns&lt;/a&gt;来完全重新定义自己的规则列表。您可以&lt;a href=&quot;yii-rest-urlrule#%24controller-detail&quot;&gt;为$ controller&lt;/a&gt;配置多个控制器ID，以为所有这些控制器生成规则。例如，以下代码将禁用 &lt;code&gt;delete&lt;/code&gt; 规则，并为 &lt;code&gt;user&lt;/code&gt; 和 &lt;code&gt;post&lt;/code&gt; 控制器生成规则：</target>
        </trans-unit>
        <trans-unit id="284ef6848425498bf9aa6aa0adb8db1e60870cf1" translate="yes" xml:space="preserve">
          <source>You may configure &lt;a href=&quot;yii-widgets-pjax#%24linkSelector-detail&quot;&gt;$linkSelector&lt;/a&gt; to specify which links should trigger pjax, and configure &lt;a href=&quot;yii-widgets-pjax#%24formSelector-detail&quot;&gt;$formSelector&lt;/a&gt; to specify which form submission may trigger pjax.</source>
          <target state="translated">您可以配置&lt;a href=&quot;yii-widgets-pjax#%24linkSelector-detail&quot;&gt;$ linkSelector&lt;/a&gt;以指定哪些链接应触发pjax，并配置&lt;a href=&quot;yii-widgets-pjax#%24formSelector-detail&quot;&gt;$ formSelector&lt;/a&gt;以指定哪些表单提交可以触发pjax。</target>
        </trans-unit>
        <trans-unit id="d212c0718ed147f2346bd144931ea2875a4fc528" translate="yes" xml:space="preserve">
          <source>You may configure &lt;code&gt;logVars&lt;/code&gt; to be an empty array to totally disable the inclusion of context information. Or if you want to implement your own way of providing context information, you may override the &lt;a href=&quot;yii-log-target#getContextMessage()-detail&quot;&gt;yii\log\Target::getContextMessage()&lt;/a&gt; method.</source>
          <target state="translated">您可以将 &lt;code&gt;logVars&lt;/code&gt; 配置为空数组，以完全禁用上下文信息的包含。或者，如果您想实现自己的提供上下文信息的方式，则可以覆盖&lt;a href=&quot;yii-log-target#getContextMessage()-detail&quot;&gt;yii \ log \ Target :: getContextMessage（）&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="bb249f61f9206fc9272ff1589caa97aaf5527b10" translate="yes" xml:space="preserve">
          <source>You may configure it as a directory or a path &lt;a href=&quot;guide-concept-aliases&quot;&gt;alias&lt;/a&gt;.</source>
          <target state="translated">您可以将其配置为目录或路径&lt;a href=&quot;guide-concept-aliases&quot;&gt;别名&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6c695d2d97c57d42b5d2f7638240f080160de440" translate="yes" xml:space="preserve">
          <source>You may configure it as a directory or a path &lt;a href=&quot;guide-concept-aliases&quot;&gt;alias&lt;/a&gt;. Note that the runtime path must be writable by the process running the application. And the path should be protected from being accessed by end users, because the temporary files under it may contain sensitive information.</source>
          <target state="translated">您可以将其配置为目录或路径&lt;a href=&quot;guide-concept-aliases&quot;&gt;别名&lt;/a&gt;。请注意，运行应用程序的进程必须可以写入运行时路径。并且应保护该路径以防止最终用户访问该路径，因为该路径下的临时文件可能包含敏感信息。</target>
        </trans-unit>
        <trans-unit id="46e993fe4cba059f8ca99f2598dde5617a953014" translate="yes" xml:space="preserve">
          <source>You may configure the &lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;basePath&lt;/a&gt; property using a directory path or a &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt;. In both forms, the corresponding directory must exist, or an exception will be thrown. The path will be normalized by calling the &lt;code&gt;realpath()&lt;/code&gt; function.</source>
          <target state="translated">您可以使用目录路径或&lt;a href=&quot;guide-concept-aliases&quot;&gt;路径别名&lt;/a&gt;来配置&lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;basePath&lt;/a&gt;属性。在这两种形式中，必须存在相应的目录，否则将引发异常。该路径将通过调用 &lt;code&gt;realpath()&lt;/code&gt; 函数进行规范化。</target>
        </trans-unit>
        <trans-unit id="fcf2165a2fc73556feb55ef039be53d5fb06f34a" translate="yes" xml:space="preserve">
          <source>You may configure the &lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;controller map&lt;/a&gt; in the &lt;a href=&quot;guide-structure-applications#application-configurations&quot;&gt;application configuration&lt;/a&gt;. For example:</source>
          <target state="translated">您可以在&lt;a href=&quot;guide-structure-applications#application-configurations&quot;&gt;应用程序配置中配置&lt;/a&gt;&lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;控制器映射&lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="26923611b538647aa01543a173ba5039a95252b4" translate="yes" xml:space="preserve">
          <source>You may configure the &lt;a href=&quot;yii-filters-httpcache#%24etagSeed-detail&quot;&gt;yii\filters\HttpCache::$etagSeed&lt;/a&gt; property to enable sending the &lt;code&gt;ETag&lt;/code&gt; header. The property should be a PHP callable returning a seed for generating the ETag hash. The signature of the PHP callable should be as follows,</source>
          <target state="translated">您可以配置&lt;a href=&quot;yii-filters-httpcache#%24etagSeed-detail&quot;&gt;yii \ filters \ HttpCache :: $ etagSeed&lt;/a&gt;属性来启用发送 &lt;code&gt;ETag&lt;/code&gt; 头。该属性应该是PHP可调用的，返回用于生成ETag哈希的种子。可调用PHP的签名应如下所示：</target>
        </trans-unit>
        <trans-unit id="a9dbaab49d4123eb4e9c72788605e55579d6019f" translate="yes" xml:space="preserve">
          <source>You may configure the &lt;a href=&quot;yii-filters-httpcache#%24lastModified-detail&quot;&gt;yii\filters\HttpCache::$lastModified&lt;/a&gt; property to enable sending the &lt;code&gt;Last-Modified&lt;/code&gt; header. The property should be a PHP callable returning a UNIX timestamp about the page modification time. The signature of the PHP callable should be as follows,</source>
          <target state="translated">您可以配置&lt;a href=&quot;yii-filters-httpcache#%24lastModified-detail&quot;&gt;yii \ filters \ HttpCache :: $ lastModified&lt;/a&gt;属性来启用发送 &lt;code&gt;Last-Modified&lt;/code&gt; 头。该属性应该是PHP可调用的，返回有关页面修改时间的UNIX时间戳。可调用PHP的签名应如下所示：</target>
        </trans-unit>
        <trans-unit id="7ec8d153154a41cdcebeaa35fd5c6baf4c4b82ea" translate="yes" xml:space="preserve">
          <source>You may configure the &lt;code&gt;only&lt;/code&gt; and &lt;code&gt;except&lt;/code&gt; options to explicitly list which actions to support or which actions should be disabled, respectively. For example,</source>
          <target state="translated">您可以配置 &lt;code&gt;only&lt;/code&gt; 和 &lt;code&gt;except&lt;/code&gt; 选项，以分别明确列出要支持的操作或应禁用的操作。例如，</target>
        </trans-unit>
        <trans-unit id="37c7960e8108a9c0cab3f9957dec3234bd4d81c1" translate="yes" xml:space="preserve">
          <source>You may configure the email to be sent by setting the &lt;a href=&quot;yii-log-emailtarget#%24message-detail&quot;&gt;$message&lt;/a&gt; property, through which you can set the target email addresses, subject, etc.:</source>
          <target state="translated">您可以通过设置&lt;a href=&quot;yii-log-emailtarget#%24message-detail&quot;&gt;$ message&lt;/a&gt;属性来配置要发送的电子邮件，通过该属性可以设置目标电子邮件地址，主题等：</target>
        </trans-unit>
        <trans-unit id="e83545638c0436eec8296f9841b04f5c260f6c7b" translate="yes" xml:space="preserve">
          <source>You may configure the rate limiter as follows in your REST controller classes:</source>
          <target state="translated">您可以在您的REST控制器类中按以下方式配置速率限制器。</target>
        </trans-unit>
        <trans-unit id="d050d5574a365c7db05a4a7ea9d767a9705dcc50" translate="yes" xml:space="preserve">
          <source>You may configure the serializer by setting the &lt;a href=&quot;yii-rest-controller#%24serializer-detail&quot;&gt;yii\rest\Controller::$serializer&lt;/a&gt; property with a configuration array. For example, sometimes you may want to help simplify the client development work by including pagination information directly in the response body. To do so, configure the &lt;a href=&quot;yii-rest-serializer#%24collectionEnvelope-detail&quot;&gt;yii\rest\Serializer::$collectionEnvelope&lt;/a&gt; property as follows:</source>
          <target state="translated">您可以通过使用配置数组设置&lt;a href=&quot;yii-rest-controller#%24serializer-detail&quot;&gt;yii \ rest \ Controller :: $ serializer&lt;/a&gt;属性来配置序列化器。例如，有时您可能希望通过将分页信息直接包含在响应正文中来帮助简化客户端开发工作。这样做，配置&lt;a href=&quot;yii-rest-serializer#%24collectionEnvelope-detail&quot;&gt;yii \ rest \ Serializer :: $ collectionEnvelope&lt;/a&gt;属性，如下所示：</target>
        </trans-unit>
        <trans-unit id="0d9d44aa3acfd0b103788521b3b5c0dc3dca5310" translate="yes" xml:space="preserve">
          <source>You may configure the targets in application configuration, like the following:</source>
          <target state="translated">你可以在应用程序配置中配置目标,比如以下。</target>
        </trans-unit>
        <trans-unit id="3631a9b486cfc84e9bd0f3dc2f4d3f51448cd1fa" translate="yes" xml:space="preserve">
          <source>You may configure this property as a directory or a path &lt;a href=&quot;guide-concept-aliases&quot;&gt;alias&lt;/a&gt;. When you modify this property, make sure you also adjust the Composer configuration accordingly.</source>
          <target state="translated">您可以将此属性配置为目录或路径&lt;a href=&quot;guide-concept-aliases&quot;&gt;别名&lt;/a&gt;。修改此属性时，请确保还相应地调整Composer配置。</target>
        </trans-unit>
        <trans-unit id="a8eb1ac3a114f4441c6c226ba95c90e6da12929c" translate="yes" xml:space="preserve">
          <source>You may configure this property to be &lt;code&gt;false&lt;/code&gt; if you want to disable layout by default, although this is very rare.</source>
          <target state="translated">如果您想默认禁用布局，则可以将此属性配置为 &lt;code&gt;false&lt;/code&gt; ，尽管这种情况很少见。</target>
        </trans-unit>
        <trans-unit id="e0cb45b2ef2a88f18188a5a7ef7e49f27bbefbb7" translate="yes" xml:space="preserve">
          <source>You may consider creating an extension when you feel the need to share with other people your great code. An extension can contain any code you like, such as a helper class, a widget, a module, etc.</source>
          <target state="translated">当你觉得需要与他人分享你的优秀代码时,你可以考虑创建一个扩展。一个扩展可以包含任何你喜欢的代码,比如一个辅助类,一个小部件,一个模块等等。</target>
        </trans-unit>
        <trans-unit id="3d06154e3dcd0736828176a105faddd8d707848e" translate="yes" xml:space="preserve">
          <source>You may control automatic typecasting for particular case using fields &lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24typecastAfterValidate-detail&quot;&gt;$typecastAfterValidate&lt;/a&gt;, &lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24typecastBeforeSave-detail&quot;&gt;$typecastBeforeSave&lt;/a&gt; and &lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24typecastAfterFind-detail&quot;&gt;$typecastAfterFind&lt;/a&gt;. By default typecasting will be performed only after model validation.</source>
          <target state="translated">您可以使用&lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24typecastAfterValidate-detail&quot;&gt;$ typecastAfterValidate&lt;/a&gt;，&lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24typecastBeforeSave-detail&quot;&gt;$ typecastBeforeSave&lt;/a&gt;和&lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24typecastAfterFind-detail&quot;&gt;$ typecastAfterFind&lt;/a&gt;字段来控制特定情况下的自动类型转换。默认情况下，仅在模型验证之后才执行类型转换。</target>
        </trans-unit>
        <trans-unit id="89d314eaa7477503dfdc899a6a9e4518bd38ffdb" translate="yes" xml:space="preserve">
          <source>You may customize the error response format by responding to the &lt;code&gt;beforeSend&lt;/code&gt; event of the &lt;code&gt;response&lt;/code&gt; component in the application configuration:</source>
          <target state="translated">您可以通过响应应用程序配置中 &lt;code&gt;response&lt;/code&gt; 组件的 &lt;code&gt;beforeSend&lt;/code&gt; 事件来自定义错误响应格式：</target>
        </trans-unit>
        <trans-unit id="b301010542ffdabdb6c7c4a9398d8d4bfaeb65b8" translate="yes" xml:space="preserve">
          <source>You may customize the formatting process or support additional formats by configuring &lt;a href=&quot;yii-web-response#%24formatters-detail&quot;&gt;$formatters&lt;/a&gt;.</source>
          <target state="translated">您可以通过配置&lt;a href=&quot;yii-web-response#%24formatters-detail&quot;&gt;$ formatters&lt;/a&gt;定制格式设置过程或支持其他格式。</target>
        </trans-unit>
        <trans-unit id="61d158f70e6e31f6085708dfd5eb806fce3de244" translate="yes" xml:space="preserve">
          <source>You may customize the formatting rules by configuring the &lt;code&gt;formatter&lt;/code&gt; component in the &lt;a href=&quot;guide-concept-configurations#application-configurations&quot;&gt;application configuration&lt;/a&gt;. For example,</source>
          <target state="translated">您可以通过在&lt;a href=&quot;guide-concept-configurations#application-configurations&quot;&gt;应用程序配置中配置&lt;/a&gt; &lt;code&gt;formatter&lt;/code&gt; 组件来自定义格式化规则。例如，</target>
        </trans-unit>
        <trans-unit id="b024c1ceb6e4abf972599c49408810b8b83db6d5" translate="yes" xml:space="preserve">
          <source>You may customize the namespace of controller classes by configuring the &lt;a href=&quot;yii-base-module#%24controllerNamespace-detail&quot;&gt;yii\base\Module::$controllerNamespace&lt;/a&gt; property. In case some of the controllers are outside of this namespace, you may make them accessible by configuring the &lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;yii\base\Module::$controllerMap&lt;/a&gt; property, similar to &lt;a href=&quot;guide-structure-applications#controller-map&quot;&gt;what you do in an application&lt;/a&gt;.</source>
          <target state="translated">您可以通过配置&lt;a href=&quot;yii-base-module#%24controllerNamespace-detail&quot;&gt;yii \ base \ Module :: $ controllerNamespace&lt;/a&gt;属性来自定义控制器类的名称空间。如果某些控制器不在此命名空间中，则可以通过配置&lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;yii \ base \ Module :: $ controllerMap&lt;/a&gt;属性来使其可访问，类似于&lt;a href=&quot;guide-structure-applications#controller-map&quot;&gt;在应用程序中进行的操作&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5832103e6af7bb70811b8f2771082bd4d28019d9" translate="yes" xml:space="preserve">
          <source>You may customize these default view directories by overriding the &lt;a href=&quot;yii-base-viewcontextinterface#getViewPath()-detail&quot;&gt;yii\base\ViewContextInterface::getViewPath()&lt;/a&gt; method of controllers or widgets.</source>
          <target state="translated">您可以通过覆盖控制器或小部件的&lt;a href=&quot;yii-base-viewcontextinterface#getViewPath()-detail&quot;&gt;yii \ base \ ViewContextInterface :: getViewPath（）&lt;/a&gt;方法来自定义这些默认视图目录。</target>
        </trans-unit>
        <trans-unit id="5febc33a98c6d253f7c625f0ffe0bf7cdbc5e0f3" translate="yes" xml:space="preserve">
          <source>You may customize this behavior by configuring the &lt;a href=&quot;yii-filters-accesscontrol#%24denyCallback-detail&quot;&gt;yii\filters\AccessControl::$denyCallback&lt;/a&gt; property like the following:</source>
          <target state="translated">您可以通过配置&lt;a href=&quot;yii-filters-accesscontrol#%24denyCallback-detail&quot;&gt;yii \ filters \ AccessControl :: $ denyCallback&lt;/a&gt;属性来自定义此行为，如下所示：</target>
        </trans-unit>
        <trans-unit id="a9e8355ca1724af8d0dda94eb0614eafbc0ce276" translate="yes" xml:space="preserve">
          <source>You may customize this format by configuring the &lt;a href=&quot;yii-log-target#%24prefix-detail&quot;&gt;yii\log\Target::$prefix&lt;/a&gt; property which takes a PHP callable returning a customized message prefix. For example, the following code configures a log target to prefix each log message with the current user ID (IP address and Session ID are removed for privacy reasons).</source>
          <target state="translated">您可以通过配置&lt;a href=&quot;yii-log-target#%24prefix-detail&quot;&gt;yii \ log \ Target :: $ prefix&lt;/a&gt;属性来自定义此格式，该属性采用PHP可调用函数并返回自定义消息前缀。例如，以下代码将日志目标配置为为每个日志消息添加当前用户ID的前缀（出于隐私原因，删除了IP地址和会话ID）。</target>
        </trans-unit>
        <trans-unit id="bbbad2e0bc5440370fab949789ceea9de7b3379d" translate="yes" xml:space="preserve">
          <source>You may define &lt;code&gt;YII_ENV&lt;/code&gt; as one of the following values:</source>
          <target state="translated">您可以将 &lt;code&gt;YII_ENV&lt;/code&gt; 定义为以下值之一：</target>
        </trans-unit>
        <trans-unit id="17e1ded28ca02844f8eae73b130fa67c75cd02a3" translate="yes" xml:space="preserve">
          <source>You may directly use Model to store model data, or extend it with customization.</source>
          <target state="translated">你可以直接使用Model来存储模型数据,或者通过自定义来扩展它。</target>
        </trans-unit>
        <trans-unit id="9c92fd6c77dc71eef7395c438b2e8f6a1734d8a6" translate="yes" xml:space="preserve">
          <source>You may disable pjax for a specific link inside the container by adding &lt;code&gt;data-pjax=&quot;0&quot;&lt;/code&gt; attribute to this link.</source>
          <target state="translated">您可以通过向该链接添加 &lt;code&gt;data-pjax=&quot;0&quot;&lt;/code&gt; 属性来为容器内的特定链接禁用pjax 。</target>
        </trans-unit>
        <trans-unit id="245d0233f8a8ec2c4b666b3d0647f596767a5729" translate="yes" xml:space="preserve">
          <source>You may disable some of these actions by overriding &lt;a href=&quot;yii-rest-activecontroller#actions()-detail&quot;&gt;actions()&lt;/a&gt; and unsetting the corresponding actions.</source>
          <target state="translated">您可以通过重写&lt;a href=&quot;yii-rest-activecontroller#actions()-detail&quot;&gt;actions（）&lt;/a&gt;并取消设置相应的动作来禁用其中一些动作。</target>
        </trans-unit>
        <trans-unit id="9edb07bfb183943e091594b86245866acb55bd4e" translate="yes" xml:space="preserve">
          <source>You may disable these headers by configuring &lt;a href=&quot;yii-filters-ratelimiter#%24enableRateLimitHeaders-detail&quot;&gt;yii\filters\RateLimiter::$enableRateLimitHeaders&lt;/a&gt; to be &lt;code&gt;false&lt;/code&gt;, as shown in the above code example.</source>
          <target state="translated">您可以通过将&lt;a href=&quot;yii-filters-ratelimiter#%24enableRateLimitHeaders-detail&quot;&gt;yii \ filters \ RateLimiter :: $$ enableRateLimitHeaders&lt;/a&gt;配置为 &lt;code&gt;false&lt;/code&gt; 来禁用这些标头，如上面的代码示例所示。</target>
        </trans-unit>
        <trans-unit id="dd3e6b28fea9f880b73876d9aa7c22a0a7856682" translate="yes" xml:space="preserve">
          <source>You may encounter a case where your JavaScript needs to print a message reacting to some event. In an application that works with multiple languages this string has to be translated to the current application language. One way to achieve this is to use the &lt;a href=&quot;guide-tutorial-i18n#message-translation&quot;&gt;message translation feature&lt;/a&gt; provided by Yii and passing the result to the JavaScript code.</source>
          <target state="translated">您可能会遇到JavaScript需要打印对某些事件作出反应的消息的情况。在使用多种语言的应用程序中，此字符串必须转换为当前的应用程序语言。实现此目的的一种方法是使用Yii提供的&lt;a href=&quot;guide-tutorial-i18n#message-translation&quot;&gt;消息翻译功能&lt;/a&gt;，并将结果传递给JavaScript代码。</target>
        </trans-unit>
        <trans-unit id="79ce208d34bc2fabcdb1f97e235afa5dd1f7ca56" translate="yes" xml:space="preserve">
          <source>You may even conditionally define attribute labels. For example, based on the &lt;a href=&quot;#scenarios&quot;&gt;scenario&lt;/a&gt; the model is being used in, you may return different labels for the same attribute.</source>
          <target state="translated">您甚至可以有条件地定义属性标签。例如，根据使用模型的&lt;a href=&quot;#scenarios&quot;&gt;场景&lt;/a&gt;，您可以为同一属性返回不同的标签。</target>
        </trans-unit>
        <trans-unit id="8ebb471ff2f44ef9183b03f3659f58fe6de1dce0" translate="yes" xml:space="preserve">
          <source>You may explicitly specify it by setting the &lt;a href=&quot;yii-web-request#setHostInfo()-detail&quot;&gt;hostInfo&lt;/a&gt; property.</source>
          <target state="translated">您可以通过设置&lt;a href=&quot;yii-web-request#setHostInfo()-detail&quot;&gt;hostInfo&lt;/a&gt;属性来明确指定它。</target>
        </trans-unit>
        <trans-unit id="cab756a33fe8464cebdcb5312cc4424cc09f1050" translate="yes" xml:space="preserve">
          <source>You may give an alias to a row so that later in your test, you may refer to the row via the alias. In the above example, the two rows are aliased as &lt;code&gt;user1&lt;/code&gt; and &lt;code&gt;user2&lt;/code&gt;, respectively.</source>
          <target state="translated">您可以为行指定别名，以便稍后在测试中可以通过别名引用该行。在上面的示例中，这两行分别别名为 &lt;code&gt;user1&lt;/code&gt; 和 &lt;code&gt;user2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a84dcd610d410e2f88e80dcadb4c87d89c0c60c" translate="yes" xml:space="preserve">
          <source>You may have noticed that the controller ID &lt;code&gt;user&lt;/code&gt; appears in plural form as &lt;code&gt;users&lt;/code&gt; in the endpoint URLs. This is because &lt;a href=&quot;yii-rest-urlrule&quot;&gt;yii\rest\UrlRule&lt;/a&gt; automatically pluralizes controller IDs when creating child URL rules. You may disable this behavior by setting &lt;a href=&quot;yii-rest-urlrule#%24pluralize-detail&quot;&gt;yii\rest\UrlRule::$pluralize&lt;/a&gt; to be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">您可能已经注意到，该控制器ID &lt;code&gt;user&lt;/code&gt; 出现在复数形式 &lt;code&gt;users&lt;/code&gt; 在端点的URL。这是因为&lt;a href=&quot;yii-rest-urlrule&quot;&gt;yii \ rest \ UrlRule&lt;/a&gt;在创建子URL规则时会自动使控制器ID复数。您可以通过将&lt;a href=&quot;yii-rest-urlrule#%24pluralize-detail&quot;&gt;yii \ rest \ UrlRule :: $$ pluralize&lt;/a&gt;设置为 &lt;code&gt;false&lt;/code&gt; 来禁用此行为。</target>
        </trans-unit>
        <trans-unit id="5fe12e04658544ac490699a0de9b026072b80011" translate="yes" xml:space="preserve">
          <source>You may just focus on the first step, because the second step can be achieved by generic data formatters, such as &lt;a href=&quot;yii-web-jsonresponseformatter&quot;&gt;yii\web\JsonResponseFormatter&lt;/a&gt;.</source>
          <target state="translated">您可能只专注于第一步，因为第二步可以通过通用数据格式化程序来实现，例如&lt;a href=&quot;yii-web-jsonresponseformatter&quot;&gt;yii \ web \ JsonResponseFormatter&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c1022d50e5bb4a18b81e33e7c72f221538a244b" translate="yes" xml:space="preserve">
          <source>You may list one or multiple root namespaces and their corresponding file paths.</source>
          <target state="translated">您可以列出一个或多个根名称空间及其对应的文件路径。</target>
        </trans-unit>
        <trans-unit id="018473a68e1001c0442e6244fb958d968739118d" translate="yes" xml:space="preserve">
          <source>You may modify or remove some of the GET parameters, or add additional query parameters through the &lt;code&gt;$params&lt;/code&gt; parameter. In particular, if you specify a parameter to be null, then this parameter will be removed from the existing GET parameters; all other parameters specified in &lt;code&gt;$params&lt;/code&gt; will be merged with the existing GET parameters. For example,</source>
          <target state="translated">您可以修改或删除某些GET参数，或者通过 &lt;code&gt;$params&lt;/code&gt; 参数添加其他查询参数。特别是，如果您将参数指定为null，则将从现有GET参数中删除该参数； &lt;code&gt;$params&lt;/code&gt; 指定的所有其他参数将与现有的GET参数合并。例如，</target>
        </trans-unit>
        <trans-unit id="cd1c6cba18b24dd9658f6188dee1d4083a5a6097" translate="yes" xml:space="preserve">
          <source>You may optionally format the string with ANSI codes by passing additional parameters using the constants defined in &lt;a href=&quot;yii-helpers-console&quot;&gt;yii\helpers\Console&lt;/a&gt;.</source>
          <target state="translated">您可以选择使用ANSI代码格式化字符串，方法是使用&lt;a href=&quot;yii-helpers-console&quot;&gt;yii \ helpers \ Console中&lt;/a&gt;定义的常量传递附加参数。</target>
        </trans-unit>
        <trans-unit id="34d6c0706ce8cb5a69a6aa4257609a9bcf9f6b32" translate="yes" xml:space="preserve">
          <source>You may override &lt;a href=&quot;yii-base-model#attributes()-detail&quot;&gt;yii\base\Model::attributes()&lt;/a&gt; to define attributes in a different way. The method should return the names of the attributes in a model. For example, &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt; does so by returning the column names of the associated database table as its attribute names. Note that you may also need to override the magic methods such as &lt;code&gt;__get()&lt;/code&gt;, &lt;code&gt;__set()&lt;/code&gt; so that the attributes can be accessed like normal object properties.</source>
          <target state="translated">您可以重写&lt;a href=&quot;yii-base-model#attributes()-detail&quot;&gt;yii \ base \ Model :: attributes（）&lt;/a&gt;以不同的方式定义属性。该方法应返回模型中属性的名称。例如，&lt;a href=&quot;yii-db-activerecord&quot;&gt;yii \ db \ ActiveRecord&lt;/a&gt;通过返回关联数据库表的列名作为其属性名来实现。请注意，您可能还需要覆盖诸如 &lt;code&gt;__get()&lt;/code&gt; ， &lt;code&gt;__set()&lt;/code&gt; 之类的魔术方法，以便可以像普通对象属性一样访问属性。</target>
        </trans-unit>
        <trans-unit id="7b50f0b41641b8cac465898b5ef5b57aab19de91" translate="yes" xml:space="preserve">
          <source>You may override &lt;a href=&quot;yii-elasticsearch-activerecord#index()-detail&quot;&gt;index()&lt;/a&gt; and &lt;a href=&quot;yii-elasticsearch-activerecord#type()-detail&quot;&gt;type()&lt;/a&gt; to define the index and type this record represents.</source>
          <target state="translated">您可以重写&lt;a href=&quot;yii-elasticsearch-activerecord#index()-detail&quot;&gt;index（）&lt;/a&gt;和&lt;a href=&quot;yii-elasticsearch-activerecord#type()-detail&quot;&gt;type（）&lt;/a&gt;来定义该记录表示的索引和类型。</target>
        </trans-unit>
        <trans-unit id="e5074a25af7796ec08fc0a2ee360262410131989" translate="yes" xml:space="preserve">
          <source>You may override it to customize checking.</source>
          <target state="translated">你可以覆盖它来定制检查。</target>
        </trans-unit>
        <trans-unit id="5a07798a16e5c8d1cead8310de32b5e011af1bde" translate="yes" xml:space="preserve">
          <source>You may override it to customize slug generation. The default implementation calls &lt;a href=&quot;yii-helpers-baseinflector#slug()-detail&quot;&gt;yii\helpers\Inflector::slug()&lt;/a&gt; on the input strings concatenated by dashes (&lt;code&gt;-&lt;/code&gt;).</source>
          <target state="translated">您可以覆盖它以自定义块生成。默认实现在由破折号（ &lt;code&gt;-&lt;/code&gt; ）连接的输入字符串上调用&lt;a href=&quot;yii-helpers-baseinflector#slug()-detail&quot;&gt;yii \ helpers \ Inflector :: slug（&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a2e55721fbaf639066ecb75def5f4663a495e02a" translate="yes" xml:space="preserve">
          <source>You may override the configuration of both categories.</source>
          <target state="translated">你可以覆盖这两个类别的配置。</target>
        </trans-unit>
        <trans-unit id="bc1434d6af3846d2d29b3f19f249040a90a8e2d7" translate="yes" xml:space="preserve">
          <source>You may override this method if the instance being created depends on the row data to be populated into the record. For example, by creating a record based on the value of a column, you may implement the so-called single-table inheritance mapping.</source>
          <target state="translated">如果正在创建的实例依赖于要填充到记录中的行数据,您可以重写这个方法。例如,通过基于列的值创建记录,你可以实现所谓的单表继承映射。</target>
        </trans-unit>
        <trans-unit id="bdf560aa7c3d93683d2d994664e3db561754fc44" translate="yes" xml:space="preserve">
          <source>You may override this method to cancel caching by returning &lt;code&gt;false&lt;/code&gt; or store an additional data in a cache entry by returning an array instead of &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">您可以通过返回 &lt;code&gt;false&lt;/code&gt; 来覆盖此方法以取消缓存，或者通过返回数组而不是 &lt;code&gt;true&lt;/code&gt; 来将其他数据存储在缓存项中。</target>
        </trans-unit>
        <trans-unit id="d10de7e931b28dd0b3a6cfe1a0f0bcc930e7c086" translate="yes" xml:space="preserve">
          <source>You may override this method to create a number formatter based on patterns.</source>
          <target state="translated">你可以覆盖这个方法来创建一个基于模式的数字格式器。</target>
        </trans-unit>
        <trans-unit id="2f88e58b6f4ddebaf09922b2e54701927b34d894" translate="yes" xml:space="preserve">
          <source>You may override this method to customize the generation of page buttons.</source>
          <target state="translated">您可以覆盖此方法来定制页面按钮的生成。</target>
        </trans-unit>
        <trans-unit id="13ba27b05d3360f41e6461e74cda4236dfdd9091" translate="yes" xml:space="preserve">
          <source>You may override this method to customize the message storage in the MongoDB.</source>
          <target state="translated">你可以覆盖这个方法来定制MongoDB中的消息存储。</target>
        </trans-unit>
        <trans-unit id="070249dd05b0204d5a9beaf9cbd6a5fbccc9f34f" translate="yes" xml:space="preserve">
          <source>You may override this method to customize the message storage in the database.</source>
          <target state="translated">你可以覆盖这个方法来定制数据库中的消息存储。</target>
        </trans-unit>
        <trans-unit id="570f2d1d4aacf159e43d8eec86494a8cfd002969" translate="yes" xml:space="preserve">
          <source>You may override this method to define the primary key name when you have defined &lt;a href=&quot;http://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-id-field.html&quot;&gt;path mapping&lt;/a&gt; for the &lt;code&gt;_id&lt;/code&gt; field so that it is part of the &lt;code&gt;_source&lt;/code&gt; and thus part of the &lt;a href=&quot;yii-elasticsearch-activerecord#attributes()-detail&quot;&gt;attributes&lt;/a&gt;.</source>
          <target state="translated">在为 &lt;code&gt;_id&lt;/code&gt; 字段定义&lt;a href=&quot;http://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-id-field.html&quot;&gt;路径映射&lt;/a&gt;时，可以覆盖此方法以定义主键名称，以使其成为 &lt;code&gt;_source&lt;/code&gt; 的一部分，从而成为&lt;a href=&quot;yii-elasticsearch-activerecord#attributes()-detail&quot;&gt;属性的&lt;/a&gt;一部分。</target>
        </trans-unit>
        <trans-unit id="5c602694906d9187494c06e476d9d69d3841428a" translate="yes" xml:space="preserve">
          <source>You may override this method to define the primary key name when you have defined &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-id-field.html&quot;&gt;path mapping&lt;/a&gt; for the &lt;code&gt;_id&lt;/code&gt; field so that it is part of the &lt;code&gt;_source&lt;/code&gt; and thus part of the &lt;a href=&quot;yii-elasticsearch-activerecord#attributes()-detail&quot;&gt;attributes&lt;/a&gt;.</source>
          <target state="translated">在为 &lt;code&gt;_id&lt;/code&gt; 字段定义&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-id-field.html&quot;&gt;路径映射&lt;/a&gt;时，可以覆盖此方法以定义主键名称，以使其成为 &lt;code&gt;_source&lt;/code&gt; 的一部分，从而成为&lt;a href=&quot;yii-elasticsearch-activerecord#attributes()-detail&quot;&gt;属性的&lt;/a&gt;一部分。</target>
        </trans-unit>
        <trans-unit id="634b37f6bfbda1faaf1fbfe5c84cef5992fdbc2c" translate="yes" xml:space="preserve">
          <source>You may override this method to do last-minute preparation before the response is sent.</source>
          <target state="translated">您可以覆盖此方法,在发送响应前做最后的准备。</target>
        </trans-unit>
        <trans-unit id="270a842f8ab090ddc17ac8fc758d7c80944af6e4" translate="yes" xml:space="preserve">
          <source>You may override this method to do last-minute preparation for the message. If you override this method, please make sure you call the parent implementation first.</source>
          <target state="translated">你可以重写这个方法来做消息的最后一刻准备。如果你重写了这个方法,请确保你先调用父级实现。</target>
        </trans-unit>
        <trans-unit id="8f026db875734c4f989897be8c1c65d07f61829d" translate="yes" xml:space="preserve">
          <source>You may override this method to do post-processing work for the action run.</source>
          <target state="translated">你可以覆盖这个方法来做动作运行的后处理工作。</target>
        </trans-unit>
        <trans-unit id="bddd5c92bdfb1cda5a1e049b6e6363b1ced65e8e" translate="yes" xml:space="preserve">
          <source>You may override this method to do preparation work for the action run. If the method returns false, it will cancel the action.</source>
          <target state="translated">你可以重写这个方法,为动作运行做准备工作。如果该方法返回false,将取消动作。</target>
        </trans-unit>
        <trans-unit id="c09b9bcec5b6900123dcd8de55553428caf40880" translate="yes" xml:space="preserve">
          <source>You may override this method to do some postprocessing for the action.</source>
          <target state="translated">你可以覆盖这个方法为动作做一些后处理。</target>
        </trans-unit>
        <trans-unit id="6d2c24e77fc6453c9b112c3976e6974f936ca999" translate="yes" xml:space="preserve">
          <source>You may override this method to do some postprocessing or logging based on mail send status. If you override this method, please make sure you call the parent implementation first.</source>
          <target state="translated">你可以重写这个方法来做一些基于邮件发送状态的后处理或日志记录。如果你重写了这个方法,请确保你先调用父方法。</target>
        </trans-unit>
        <trans-unit id="c0b9cf0d6f7986ff4d2e313c04a1eaa3efe46398" translate="yes" xml:space="preserve">
          <source>You may override this method to return a customized query. For example,</source>
          <target state="translated">你可以重写这个方法来返回一个自定义的查询。例如:</target>
        </trans-unit>
        <trans-unit id="e29ea611831ce3d507881ef90dcb079ff2cc4a98" translate="yes" xml:space="preserve">
          <source>You may override this method to return a list of expandable fields based on some context information (e.g. the current application user).</source>
          <target state="translated">你可以覆盖这个方法,根据一些上下文信息(例如当前应用程序用户)返回一个可扩展字段的列表。</target>
        </trans-unit>
        <trans-unit id="f83caac1e77797c93e1a78d2e520c65ee2e13498" translate="yes" xml:space="preserve">
          <source>You may override this method to return customized help. The default implementation returns help information retrieved from the PHPDoc comment.</source>
          <target state="translated">你可以重写这个方法来返回自定义的帮助。默认的实现是返回从PHPDoc注释中获取的帮助信息。</target>
        </trans-unit>
        <trans-unit id="f5f8206a7ec0e990ce449ecad50e3cd50688df80" translate="yes" xml:space="preserve">
          <source>You may override this method to return customized summary. The default implementation returns first line from the PHPDoc comment.</source>
          <target state="translated">你可以重写这个方法来返回自定义的摘要。默认的实现是返回PHPDoc注释的第一行。</target>
        </trans-unit>
        <trans-unit id="b593e34d6e7c0628ff11e01d17a9b0b81a996c25" translate="yes" xml:space="preserve">
          <source>You may override this method to return the JavaScript validation code if the validator can support client-side validation.</source>
          <target state="translated">如果验证器可以支持客户端验证,你可以重写这个方法来返回JavaScript验证代码。</target>
        </trans-unit>
        <trans-unit id="2a184f534c9a0164974296f4e89d2c9192772b5a" translate="yes" xml:space="preserve">
          <source>You may pass additional parameters using the constants defined in &lt;a href=&quot;yii-helpers-console&quot;&gt;yii\helpers\Console&lt;/a&gt;.</source>
          <target state="translated">您可以使用&lt;a href=&quot;yii-helpers-console&quot;&gt;yii \ helpers \ Console中&lt;/a&gt;定义的常量传递其他参数。</target>
        </trans-unit>
        <trans-unit id="49588c006493b64f70a7d86bef66ca228d8f4ac7" translate="yes" xml:space="preserve">
          <source>You may pass additional view parameters to &lt;code&gt;compose()&lt;/code&gt; method, which will be available inside the view files:</source>
          <target state="translated">您可以将其他视图参数传递给 &lt;code&gt;compose()&lt;/code&gt; 方法，该参数将在视图文件中提供：</target>
        </trans-unit>
        <trans-unit id="1209efb57536f70ae3eb9edd80c275332d275de1" translate="yes" xml:space="preserve">
          <source>You may provide constructor parameters (&lt;code&gt;$params&lt;/code&gt;) and object configurations (&lt;code&gt;$config&lt;/code&gt;) that will be used during the creation of the instance.</source>
          <target state="translated">您可以提供在实例创建期间将使用的构造函数参数（ &lt;code&gt;$params&lt;/code&gt; ）和对象配置（ &lt;code&gt;$config&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f399703c1aefc792b59d2d8e23a96c804fcac557" translate="yes" xml:space="preserve">
          <source>You may respond to these events to implement features such as login audit, online user statistics. For example, in the handler for &lt;a href=&quot;yii-web-user#EVENT_AFTER_LOGIN-detail&quot;&gt;EVENT_AFTER_LOGIN&lt;/a&gt;, you may record the login time and IP address in the &lt;code&gt;user&lt;/code&gt; table.</source>
          <target state="translated">您可以响应这些事件以实现诸如登录审核，在线用户统计之类的功能。例如，在&lt;a href=&quot;yii-web-user#EVENT_AFTER_LOGIN-detail&quot;&gt;EVENT_AFTER_LOGIN&lt;/a&gt;的处理程序中，您可以在 &lt;code&gt;user&lt;/code&gt; 表中记录登录时间和IP地址。</target>
        </trans-unit>
        <trans-unit id="32d6c08da371e6eb3a6500cc4ff84694ba601f0d" translate="yes" xml:space="preserve">
          <source>You may set options using keys, which are specific to particular transport, like &lt;code&gt;[CURLOPT_VERBOSE =&amp;gt; true]&lt;/code&gt; in case there is a necessity for it.</source>
          <target state="translated">如果需要，可以使用特定于特定传输的键来设置选项，例如 &lt;code&gt;[CURLOPT_VERBOSE =&amp;gt; true]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="49d8ddbdc82d84a1a96dabcbf690c803ecde1af4" translate="yes" xml:space="preserve">
          <source>You may specify additional options about fragment caching by passing the option array as the second parameter to the &lt;a href=&quot;yii-base-view#beginCache()-detail&quot;&gt;beginCache()&lt;/a&gt; method. Behind the scene, this option array will be used to configure a &lt;a href=&quot;yii-widgets-fragmentcache&quot;&gt;yii\widgets\FragmentCache&lt;/a&gt; widget which implements the actual fragment caching functionality.</source>
          <target state="translated">您可以通过将选项数组作为第二个参数传递给&lt;a href=&quot;yii-base-view#beginCache()-detail&quot;&gt;beginCache（）&lt;/a&gt;方法来指定有关片段缓存的其他选项。在后台，此选项数组将用于配置&lt;a href=&quot;yii-widgets-fragmentcache&quot;&gt;yii \ widgets \ FragmentCache&lt;/a&gt;小部件，该小部件实现实际的片段缓存功能。</target>
        </trans-unit>
        <trans-unit id="eaaab053fa861172364943e338d24b8780718f1c" translate="yes" xml:space="preserve">
          <source>You may specify multiple CSS classes using the array style as well:</source>
          <target state="translated">你也可以使用数组样式指定多个CSS类。</target>
        </trans-unit>
        <trans-unit id="f325f940cbe268faddfb775f36c137fdac5901cf" translate="yes" xml:space="preserve">
          <source>You may specify several target bundles in order to compress different groups of assets. In this case you should use 'depends' key to specify, which bundles should be covered with particular target bundle. You may leave 'depends' to be empty for single bundle, which will compress all remaining bundles in this case. For example:</source>
          <target state="translated">您可以指定多个目标捆绑包,以压缩不同的资产组。在这种情况下,您应该使用'depend'键来指定特定目标捆绑包应该覆盖哪些捆绑包。您可以将'depend'键留为空,在这种情况下,它将压缩所有剩余的捆绑包。例如</target>
        </trans-unit>
        <trans-unit id="e4644ea99ae5a3cf2830561bf488a43c9da30e38" translate="yes" xml:space="preserve">
          <source>You may specify the attributes to be updated as name list or name-value pairs. If the latter, the corresponding attribute values will be modified accordingly. The method will then save the specified attributes into database.</source>
          <target state="translated">您可以将要更新的属性指定为名称列表或名称-值对。如果是后者,相应的属性值也会被修改。然后,本方法将指定的属性保存到数据库中。</target>
        </trans-unit>
        <trans-unit id="9431d6a1f359943e7b69db4d68f2cf6620827055" translate="yes" xml:space="preserve">
          <source>You may specify the relation name as the array key and provide an anonymous functions that can be used to modify the relation queries on-the-fly as the array value.</source>
          <target state="translated">你可以指定关系名作为数组键,并提供一个匿名函数作为数组值,用于即时修改关系查询。</target>
        </trans-unit>
        <trans-unit id="9b2cdb040a8d6d46bf7522e1f7b741f16a1f212e" translate="yes" xml:space="preserve">
          <source>You may specify the route as a string, e.g., &lt;code&gt;site/index&lt;/code&gt;. You may also use an array if you want to specify additional query parameters for the URL being created. The array format must be:</source>
          <target state="translated">您可以将路由指定为字符串，例如 &lt;code&gt;site/index&lt;/code&gt; 。如果要为正在创建的URL指定其他查询参数，也可以使用数组。数组格式必须为：</target>
        </trans-unit>
        <trans-unit id="29698c4ff5651a913299b85eaa6489f041110cd4" translate="yes" xml:space="preserve">
          <source>You may specify various container HTML options by passing arrays to:</source>
          <target state="translated">你可以通过传递数组到.来指定各种容器HTML选项。</target>
        </trans-unit>
        <trans-unit id="eb72cbafd49b860c1288740ce2c51d6c943d0058" translate="yes" xml:space="preserve">
          <source>You may switch between the two URL formats by toggling the &lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;enablePrettyUrl&lt;/a&gt; property of the &lt;a href=&quot;yii-web-urlmanager&quot;&gt;URL manager&lt;/a&gt; without changing any other application code.</source>
          <target state="translated">您可以通过切换&lt;a href=&quot;yii-web-urlmanager&quot;&gt;URL管理器&lt;/a&gt;的&lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;enablePrettyUrl&lt;/a&gt;属性在两种URL格式之间切换，而无需更改任何其他应用程序代码。</target>
        </trans-unit>
        <trans-unit id="60d3e8174ca0cec7334f320d9a546492fd7d8153" translate="yes" xml:space="preserve">
          <source>You may then get the following response for request &lt;code&gt;http://localhost/users&lt;/code&gt;:</source>
          <target state="translated">然后，对于请求 &lt;code&gt;http://localhost/users&lt;/code&gt; ,您可能会收到以下响应：</target>
        </trans-unit>
        <trans-unit id="0a9167c9a38f2bb34bfd6f2a32c4f4b8ea7daa15" translate="yes" xml:space="preserve">
          <source>You may trigger a &lt;em&gt;class-level&lt;/em&gt; event by calling the static method &lt;a href=&quot;yii-base-event#trigger()-detail&quot;&gt;yii\base\Event::trigger()&lt;/a&gt;. A class-level event is not associated with a particular object. As a result, it will cause the invocation of class-level event handlers only. For example:</source>
          <target state="translated">您可以通过调用静态方法&lt;a href=&quot;yii-base-event#trigger()-detail&quot;&gt;yii \ base \ Event :: trigger（）&lt;/a&gt;来触发&lt;em&gt;类级别的&lt;/em&gt;事件。类级事件不与特定对象关联。结果，它将仅导致类级别事件处理程序的调用。例如：</target>
        </trans-unit>
        <trans-unit id="08c753a7b0281e6c44ebb0a9804c23e7d2e79e2f" translate="yes" xml:space="preserve">
          <source>You may tune the CORS headers by overriding default parameters on a per action basis. For example adding the &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; for the &lt;code&gt;login&lt;/code&gt; action could be done like this :</source>
          <target state="translated">您可以通过基于每个操作覆盖默认参数来调整CORS标头。例如，可以为 &lt;code&gt;login&lt;/code&gt; 操作添加 &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="91d103b87fc8896d67c1c157b85a2f6b439e1d40" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-authclient-baseoauth#createApiRequest()-detail&quot;&gt;createApiRequest()&lt;/a&gt; method instead, gaining more control over request execution.</source>
          <target state="translated">您可以改用&lt;a href=&quot;yii-authclient-baseoauth#createApiRequest()-detail&quot;&gt;createApiRequest（）&lt;/a&gt;方法，以获得对请求执行的更多控制。</target>
        </trans-unit>
        <trans-unit id="10eb6e1a35dc9b84ed21a2548b6d10529950947a" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-captcha-captchavalidator&quot;&gt;yii\captcha\CaptchaValidator&lt;/a&gt; to validate the user input matches the current CAPTCHA verification code.</source>
          <target state="translated">您可以使用&lt;a href=&quot;yii-captcha-captchavalidator&quot;&gt;yii \ captcha \ CaptchaValidator&lt;/a&gt;来验证用户输入是否与当前的CAPTCHA验证码匹配。</target>
        </trans-unit>
        <trans-unit id="6f8b7c4613fd2cbe425941e8a7c4a14cc3e24919" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-di-instance#get()-detail&quot;&gt;get()&lt;/a&gt; to obtain the actual object referenced by &lt;a href=&quot;yii-di-instance#%24id-detail&quot;&gt;$id&lt;/a&gt;.</source>
          <target state="translated">您可以使用&lt;a href=&quot;yii-di-instance#get()-detail&quot;&gt;get（）&lt;/a&gt;获取&lt;a href=&quot;yii-di-instance#%24id-detail&quot;&gt;$ id&lt;/a&gt;引用的实际对象。</target>
        </trans-unit>
        <trans-unit id="a81c7b3b06719fce40d869194c924e9acf0d7984" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-di-servicelocator#has()-detail&quot;&gt;yii\di\ServiceLocator::has()&lt;/a&gt; to check if a component ID has already been registered. If you call &lt;a href=&quot;yii-di-servicelocator#get()-detail&quot;&gt;yii\di\ServiceLocator::get()&lt;/a&gt; with an invalid ID, an exception will be thrown.</source>
          <target state="translated">您可以使用&lt;a href=&quot;yii-di-servicelocator#has()-detail&quot;&gt;yii \ di \ ServiceLocator :: has（）&lt;/a&gt;检查组件ID是否已被注册。如果使用无效的ID 调用&lt;a href=&quot;yii-di-servicelocator#get()-detail&quot;&gt;yii \ di \ ServiceLocator :: get（）&lt;/a&gt;，则会引发异常。</target>
        </trans-unit>
        <trans-unit id="cc59f533cdb398cf9626350e62bc8f8ebfac6b60" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-i18n-phpmessagesource#%24fileMap-detail&quot;&gt;$fileMap&lt;/a&gt; to customize the association between category names and the file names.</source>
          <target state="translated">您可以使用&lt;a href=&quot;yii-i18n-phpmessagesource#%24fileMap-detail&quot;&gt;$ fileMap&lt;/a&gt;自定义类别名称和文件名称之间的关联。</target>
        </trans-unit>
        <trans-unit id="387bc85ba5e82526186968fdcaf51d6d7f357083" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-rest-urlrule&quot;&gt;yii\rest\UrlRule&lt;/a&gt; to simplify the routing to your API endpoints.</source>
          <target state="translated">您可以使用&lt;a href=&quot;yii-rest-urlrule&quot;&gt;yii \ rest \ UrlRule&lt;/a&gt;简化到API端点的路由。</target>
        </trans-unit>
        <trans-unit id="3cafa7a3cf722fe4845365f3c1313a77c926e2d7" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-sphinx-matchexpression#match()-detail&quot;&gt;match()&lt;/a&gt;, &lt;a href=&quot;yii-sphinx-matchexpression#andMatch()-detail&quot;&gt;andMatch()&lt;/a&gt; and &lt;a href=&quot;yii-sphinx-matchexpression#orMatch()-detail&quot;&gt;orMatch()&lt;/a&gt; to combine several conditions. For example:</source>
          <target state="translated">您可以使用&lt;a href=&quot;yii-sphinx-matchexpression#match()-detail&quot;&gt;匹配（） &lt;/a&gt;，&lt;a href=&quot;yii-sphinx-matchexpression#andMatch()-detail&quot;&gt;andMatch（）&lt;/a&gt;和&lt;a href=&quot;yii-sphinx-matchexpression#orMatch()-detail&quot;&gt;orMatch（）&lt;/a&gt;几个条件结合起来。例如：</target>
        </trans-unit>
        <trans-unit id="f6a2d770a40d3ba779a1265fe007f61624fab27c" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-web-user#%24isGuest-detail&quot;&gt;$isGuest&lt;/a&gt; to determine whether the current user is a guest or not. If the user is a guest, the &lt;a href=&quot;yii-web-user#%24identity-detail&quot;&gt;$identity&lt;/a&gt; property would return &lt;code&gt;null&lt;/code&gt;. Otherwise, it would be an instance of &lt;a href=&quot;yii-web-identityinterface&quot;&gt;yii\web\IdentityInterface&lt;/a&gt;.</source>
          <target state="translated">您可以使用&lt;a href=&quot;yii-web-user#%24isGuest-detail&quot;&gt;$ isGuest&lt;/a&gt;来确定当前用户是否为访客。如果用户是访客，则&lt;a href=&quot;yii-web-user#%24identity-detail&quot;&gt;$ identity&lt;/a&gt;属性将返回 &lt;code&gt;null&lt;/code&gt; 。否则，它将是&lt;a href=&quot;yii-web-identityinterface&quot;&gt;yii \ web \ IdentityInterface&lt;/a&gt;的实例。</target>
        </trans-unit>
        <trans-unit id="6c456bd3c6c9d2f0b95deb3028a93e3dd5591355" translate="yes" xml:space="preserve">
          <source>You may use CORS filter by attaching it as a behavior to a controller or module, like the following,</source>
          <target state="translated">你可以通过将CORS过滤器作为行为附加到控制器或模块中来使用它,就像下面这样。</target>
        </trans-unit>
        <trans-unit id="453ecf90c65c6d377c9e13fa408ad7f0868d0dec" translate="yes" xml:space="preserve">
          <source>You may use ContentNegotiator as a bootstrapping component as well as an action filter.</source>
          <target state="translated">你可以使用ContentNegotiator作为一个引导组件以及一个动作过滤器。</target>
        </trans-unit>
        <trans-unit id="277efd291bd0e5995f2508a389a47968e560cb7c" translate="yes" xml:space="preserve">
          <source>You may use HttpBasicAuth by attaching it as a behavior to a controller or module, like the following:</source>
          <target state="translated">你可以通过将HttpBasicAuth作为一个行为附加到一个控制器或模块中来使用它,就像下面这样。</target>
        </trans-unit>
        <trans-unit id="30ba80bf293355adc8aa50ee1dbd8cea08b9b805" translate="yes" xml:space="preserve">
          <source>You may use HttpBearerAuth by attaching it as a behavior to a controller or module, like the following:</source>
          <target state="translated">你可以通过将HttpBearerAuth作为一个行为附加到一个控制器或模块中来使用它,像下面这样。</target>
        </trans-unit>
        <trans-unit id="888df728afc94c5ca1871651105544a2c666abc3" translate="yes" xml:space="preserve">
          <source>You may use RateLimiter by attaching it as a behavior to a controller or module, like the following,</source>
          <target state="translated">你可以通过将RateLimiter作为行为附加到控制器或模块中来使用它,就像下面这样。</target>
        </trans-unit>
        <trans-unit id="a7e0eb2a91ded0e97f0d1db132c6ce127b133082" translate="yes" xml:space="preserve">
          <source>You may use a different layout by configuring either &lt;a href=&quot;yii-base-application#%24layout-detail&quot;&gt;yii\base\Application::$layout&lt;/a&gt; or &lt;a href=&quot;yii-base-controller#%24layout-detail&quot;&gt;yii\base\Controller::$layout&lt;/a&gt;. The former governs the layout used by all controllers, while the latter overrides the former for individual controllers. For example, the following code makes the &lt;code&gt;post&lt;/code&gt; controller to use &lt;code&gt;@app/views/layouts/post.php&lt;/code&gt; as the layout when rendering its views. Other controllers, assuming their &lt;code&gt;layout&lt;/code&gt; property is untouched, will still use the default &lt;code&gt;@app/views/layouts/main.php&lt;/code&gt; as the layout.</source>
          <target state="translated">您可以通过配置&lt;a href=&quot;yii-base-application#%24layout-detail&quot;&gt;yii \ base \ Application :: $ layout&lt;/a&gt;或&lt;a href=&quot;yii-base-controller#%24layout-detail&quot;&gt;yii \ base \ Controller :: $ layout来使用其他布局&lt;/a&gt;。前者控制所有控制器使用的布局，而后者覆盖单个控制器的前者。例如，以下代码使 &lt;code&gt;post&lt;/code&gt; 控制器在呈现其视图时使用 &lt;code&gt;@app/views/layouts/post.php&lt;/code&gt; 作为布局。假设其他控制器的 &lt;code&gt;layout&lt;/code&gt; 属性保持不变，它们仍将使用默认的 &lt;code&gt;@app/views/layouts/main.php&lt;/code&gt; 作为布局。</target>
        </trans-unit>
        <trans-unit id="fd40f79e1c1ff1359298066a33e303d658f57df0" translate="yes" xml:space="preserve">
          <source>You may use a string or an arbitrary value as a cache key. When a key is not a string, it will be automatically serialized into a string.</source>
          <target state="translated">您可以使用一个字符串或任意值作为缓存键。当一个键不是字符串时,它将被自动序列化为一个字符串。</target>
        </trans-unit>
        <trans-unit id="3d6787a5d1a7fab102ca6d334c44c5819d59e111" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;array&lt;/code&gt; type hint to indicate that an argument should be treated as an array. The array will be generated by splitting the input string on commas.</source>
          <target state="translated">您可以使用 &lt;code&gt;array&lt;/code&gt; 类型提示来指示应将参数视为数组。该数组将通过以逗号分隔输入字符串来生成。</target>
        </trans-unit>
        <trans-unit id="bbd4cd216cc58ec316d824211db2482c718f6a67" translate="yes" xml:space="preserve">
          <source>You may use the Composer autoloader alone without the Yii autoloader. However, by doing so, the performance of your class autoloading may be degraded, and you must follow the rules set by Composer in order for your classes to be autoloadable.</source>
          <target state="translated">你可以单独使用Composer自动加载器而不使用Yii自动加载器。然而,这样做,你的类的自动加载性能可能会降低,你必须遵循Composer设置的规则,以使你的类可以自动加载。</target>
        </trans-unit>
        <trans-unit id="2b12e801fa2620210df7c349c121dd600d64e60b" translate="yes" xml:space="preserve">
          <source>You may use the following placeholders in the message:</source>
          <target state="translated">您可以在信息中使用以下占位符。</target>
        </trans-unit>
        <trans-unit id="d4ac98a995c809d8198e583c09ea640c2d53aaaa" translate="yes" xml:space="preserve">
          <source>You may use this method to display all the flash messages in a view file:</source>
          <target state="translated">您可以使用此方法在视图文件中显示所有的Flash信息。</target>
        </trans-unit>
        <trans-unit id="0d86b217aaa0c045fa361ff534d654af343a7216" translate="yes" xml:space="preserve">
          <source>You may use this method to validate a value out of the context of a data model.</source>
          <target state="translated">您可以使用此方法来验证数据模型上下文之外的值。</target>
        </trans-unit>
        <trans-unit id="612f67a6c867726e3208be64859c9e9a52be67b3" translate="yes" xml:space="preserve">
          <source>You may usually consider the last recommendation above when you are developing large complex systems. In these systems, models could be very fat because they are used in many places and may thus contain many sets of rules and business logic. This often ends up in a nightmare in maintaining the model code because a single touch of the code could affect several different places. To make the model code more maintainable, you may take the following strategy:</source>
          <target state="translated">当您在开发大型复杂系统时,您通常可以考虑上述最后一个建议。在这些系统中,模型可能非常肥大,因为它们被用在很多地方,因此可能包含很多套规则和业务逻辑。这在维护模型代码时往往会陷入一场噩梦,因为一个代码的触动可能会影响几个不同的地方。为了使模型代码更易维护,你可以采取以下策略。</target>
        </trans-unit>
        <trans-unit id="79ed884bde88f00c3bb27f17d23d57489d9e724b" translate="yes" xml:space="preserve">
          <source>You may view this method as an enhanced version of the &lt;code&gt;new&lt;/code&gt; operator. The method supports creating an object based on a class name, a configuration array or an anonymous function.</source>
          <target state="translated">您可以将此方法视为 &lt;code&gt;new&lt;/code&gt; 运算符的增强版本。该方法支持基于类名称，配置数组或匿名函数创建对象。</target>
        </trans-unit>
        <trans-unit id="2ae0d67d0931a97047a1e1de68af6d81d8f28917" translate="yes" xml:space="preserve">
          <source>You may want to add suffixes to the URLs for various purposes. For example, you may add &lt;code&gt;.html&lt;/code&gt; to the URLs so that they look like URLs for static HTML pages; you may also add &lt;code&gt;.json&lt;/code&gt; to the URLs to indicate the expected content type of the response. You can achieve this goal by configuring the &lt;a href=&quot;yii-web-urlmanager#%24suffix-detail&quot;&gt;yii\web\UrlManager::$suffix&lt;/a&gt; property like the following in the application configuration:</source>
          <target state="translated">出于各种目的，您可能希望在URL中添加后缀。例如，您可以在URL中添加 &lt;code&gt;.html&lt;/code&gt; ，以使它们看起来像静态HTML页面的URL。您还可以在网址中添加 &lt;code&gt;.json&lt;/code&gt; 以指示响应的预期内容类型。您可以通过在应用程序配置中配置&lt;a href=&quot;yii-web-urlmanager#%24suffix-detail&quot;&gt;yii \ web \ UrlManager :: $ suffix&lt;/a&gt;属性来实现此目标：</target>
        </trans-unit>
        <trans-unit id="950012003281cf7b507ed653ebb68b0cb02e2973" translate="yes" xml:space="preserve">
          <source>You may want to use two columns in the user table to record the allowance and timestamp information. With those defined, then &lt;code&gt;loadAllowance()&lt;/code&gt; and &lt;code&gt;saveAllowance()&lt;/code&gt; can be implemented to read and save the values of the two columns corresponding to the current authenticated user. To improve performance, you may also consider storing these pieces of information in a cache or NoSQL storage.</source>
          <target state="translated">您可能要在用户表中使用两列来记录配额和时间戳记信息。定义了这些值之后，就可以实现 &lt;code&gt;loadAllowance()&lt;/code&gt; 和 &lt;code&gt;saveAllowance()&lt;/code&gt; 来读取和保存与当前经过身份验证的用户相对应的两列的值。为了提高性能，您还可以考虑将这些信息存储在缓存或NoSQL存储中。</target>
        </trans-unit>
        <trans-unit id="f67f6d32cd9a0fa8ddc2097d91419c4e4a2cd353" translate="yes" xml:space="preserve">
          <source>You might notice &lt;code&gt;Instance::of('tempFileStorage')&lt;/code&gt; notation. It means, that the &lt;a href=&quot;yii-di-container&quot;&gt;Container&lt;/a&gt; will implicitly provide a dependency registered with the name of &lt;code&gt;tempFileStorage&lt;/code&gt; and pass it as the first argument of &lt;code&gt;app\storage\DocumentsWriter&lt;/code&gt; constructor.</source>
          <target state="translated">您可能会注意到 &lt;code&gt;Instance::of('tempFileStorage')&lt;/code&gt; 表示法。这意味着，&lt;a href=&quot;yii-di-container&quot;&gt;容器&lt;/a&gt;将隐式提供以 &lt;code&gt;tempFileStorage&lt;/code&gt; 名称注册的依赖项，并将其作为 &lt;code&gt;app\storage\DocumentsWriter&lt;/code&gt; 构造函数的第一个参数传递。</target>
        </trans-unit>
        <trans-unit id="bb4f45a144926f78932609e67066eaa8eb1b71ec" translate="yes" xml:space="preserve">
          <source>You must set this property if the directory containing the source asset files is not Web accessible. By setting this property, &lt;a href=&quot;yii-web-assetmanager&quot;&gt;yii\web\AssetManager&lt;/a&gt; will publish the source asset files to a Web-accessible directory automatically when the asset bundle is registered on a page.</source>
          <target state="translated">如果包含源资产文件的目录不可通过Web访问，则必须设置此属性。通过设置此属性，当在页面上注册资产捆绑包时，&lt;a href=&quot;yii-web-assetmanager&quot;&gt;yii \ web \ AssetManager&lt;/a&gt;会将源资产文件自动发布到可通过Web访问的目录中。</target>
        </trans-unit>
        <trans-unit id="5d809cf52d2d850b60599645fdcf06fe2316dccb" translate="yes" xml:space="preserve">
          <source>You need to use &lt;a href=&quot;yii-sphinx-query#search()-detail&quot;&gt;search()&lt;/a&gt; method in order to fetch facet results.</source>
          <target state="translated">您需要使用&lt;a href=&quot;yii-sphinx-query#search()-detail&quot;&gt;search（）&lt;/a&gt;方法来获取方面结果。</target>
        </trans-unit>
        <trans-unit id="60be138619e00f23fc3d5ad581f437bc0205ec04" translate="yes" xml:space="preserve">
          <source>You normally do not need to set this property as the default selectors should work well for most cases.</source>
          <target state="translated">通常情况下,您不需要设置此属性,因为默认的选择器在大多数情况下都能正常工作。</target>
        </trans-unit>
        <trans-unit id="4e3ec279d371a78e621fc1bf393f720ffc6af9bd" translate="yes" xml:space="preserve">
          <source>You now have to define the &lt;code&gt;CommentQuery&lt;/code&gt; class, which can be customized in many creative ways to improve your query building experience. For example,</source>
          <target state="translated">现在，您必须定义 &lt;code&gt;CommentQuery&lt;/code&gt; 类，可以通过许多创造性的方式对其进行自定义，以改善您的查询构建体验。例如，</target>
        </trans-unit>
        <trans-unit id="9ecab457e3ec81ac428d52253c51adb97922150b" translate="yes" xml:space="preserve">
          <source>You often need to set the &lt;a href=&quot;yii-base-application#%24language-detail&quot;&gt;target language&lt;/a&gt; dynamically based on different factors, such as the language preference of end users. Instead of configuring it in the application configuration, you can use the following statement to change the target language:</source>
          <target state="translated">您通常需要根据不同因素（例如最终用户的语言首选项）动态设置&lt;a href=&quot;yii-base-application#%24language-detail&quot;&gt;目标语言&lt;/a&gt;。您可以使用以下语句更改目标语言，而不是在应用程序配置中对其进行配置：</target>
        </trans-unit>
        <trans-unit id="7060f9a3765a6c98c9490a982496ed53e7cc155e" translate="yes" xml:space="preserve">
          <source>You should configure your PHP installation so that it meets the minimum requirements of Yii. Most importantly, you should have PHP 5.4 or above. Ideally latest PHP 7. You should also install the &lt;a href=&quot;http://www.php.net/manual/en/pdo.installation.php&quot;&gt;PDO PHP Extension&lt;/a&gt; and a corresponding database driver (such as &lt;code&gt;pdo_mysql&lt;/code&gt; for MySQL databases), if your application needs a database.</source>
          <target state="translated">您应该配置PHP安装，使其符合Yii的最低要求。最重要的是，您应该拥有PHP 5.4或更高版本。最好是最新的 &lt;code&gt;pdo_mysql&lt;/code&gt; 。如果您的应用程序需要数据库，则还应该安装&lt;a href=&quot;http://www.php.net/manual/en/pdo.installation.php&quot;&gt;PDO PHP Extension&lt;/a&gt;和相应的数据库驱动程序（例如，用于MySQL数据库的pdo_mysql）。</target>
        </trans-unit>
        <trans-unit id="7b261c1d50077bc0e60225597ed17d0f3d574199" translate="yes" xml:space="preserve">
          <source>You should configure your application as follows (you can use any alias, not only &quot;fixture&quot;):</source>
          <target state="translated">您应该对您的应用程序进行如下配置(您可以使用任何别名,而不仅仅是 &quot;夹具&quot;)。</target>
        </trans-unit>
        <trans-unit id="882d3821fb6550df1d6c0744dd5e12f592333e93" translate="yes" xml:space="preserve">
          <source>You should give each release of your extension a version number (e.g. &lt;code&gt;1.0.1&lt;/code&gt;). We recommend you follow the &lt;a href=&quot;http://semver.org&quot;&gt;semantic versioning&lt;/a&gt; practice when determining what version numbers should be used.</source>
          <target state="translated">您应该为扩展程序的每个发行版指定一个版本号（例如 &lt;code&gt;1.0.1&lt;/code&gt; ）。在确定应使用的版本号时，建议您遵循&lt;a href=&quot;http://semver.org&quot;&gt;语义版本控制&lt;/a&gt;做法。</target>
        </trans-unit>
        <trans-unit id="8d6c41d0606fbb47c998a6155cae28fcec730aad" translate="yes" xml:space="preserve">
          <source>You should modify this file and specify which bundles you plan to combine in the &lt;code&gt;bundles&lt;/code&gt; option. In the &lt;code&gt;targets&lt;/code&gt; option you should specify how the bundles should be divided into groups. You can specify one or multiple groups, as aforementioned.</source>
          <target state="translated">您应该修改此文件，并在 &lt;code&gt;bundles&lt;/code&gt; 选项中指定计划合并的捆绑软件。在 &lt;code&gt;targets&lt;/code&gt; 选项中，应指定如何将捆绑包分成几组。如上所述，您可以指定一个或多个组。</target>
        </trans-unit>
        <trans-unit id="8aa282c30d6166ba165fb654ab69bbcf6bd83c92" translate="yes" xml:space="preserve">
          <source>You should never enable Gii or the Debug toolbar in production. It could be used to get information about database structure, code and to simply rewrite code with what's generated by Gii.</source>
          <target state="translated">你永远不应该在生产中启用Gii或Debug工具栏,它可以用来获取数据库结构、代码和简单的重写代码。它可以用来获取数据库结构、代码和简单的重写Gii生成的代码的信息。</target>
        </trans-unit>
        <trans-unit id="201f94f904112e1b0db8a2eb52fe6a3a80c0c9aa" translate="yes" xml:space="preserve">
          <source>You should normally override &lt;a href=&quot;yii-test-fixture#load()-detail&quot;&gt;load()&lt;/a&gt; to specify how to set up a fixture; and override &lt;a href=&quot;yii-test-fixture#unload()-detail&quot;&gt;unload()&lt;/a&gt; for clearing up a fixture.</source>
          <target state="translated">通常，您应该重写&lt;a href=&quot;yii-test-fixture#load()-detail&quot;&gt;load（）&lt;/a&gt;来指定如何设置灯具；并覆盖&lt;a href=&quot;yii-test-fixture#unload()-detail&quot;&gt;unload（）&lt;/a&gt;来清除灯具。</target>
        </trans-unit>
        <trans-unit id="9badfe9fecb9559c4639e94d04d75a1343610e20" translate="yes" xml:space="preserve">
          <source>You should normally use InitDbFixture to prepare a skeleton test database. Other DB fixtures will then add specific tables and data to this database.</source>
          <target state="translated">您通常应该使用 InitDbFixture 来准备一个骨架测试数据库。其他的DB夹具将向这个数据库添加特定的表和数据。</target>
        </trans-unit>
        <trans-unit id="f29fd8cc9393f290b8e14bfa1c8dec6bbbe2e100" translate="yes" xml:space="preserve">
          <source>You should now create a view file located at &lt;code&gt;views/site/error.php&lt;/code&gt;. In this view file, you can access the following variables if the error action is defined as &lt;a href=&quot;yii-web-erroraction&quot;&gt;yii\web\ErrorAction&lt;/a&gt;:</source>
          <target state="translated">现在，您应该创建一个位于 &lt;code&gt;views/site/error.php&lt;/code&gt; 的视图文件。在错误文件定义为&lt;a href=&quot;yii-web-erroraction&quot;&gt;yii \ web \ ErrorAction&lt;/a&gt;的情况下，您可以访问以下变量：</target>
        </trans-unit>
        <trans-unit id="d2fb953d8d974975f8bdc8aed6e79e503dd28c87" translate="yes" xml:space="preserve">
          <source>You should see the above &quot;Congratulations!&quot; page in your browser. If not, please check if your PHP installation satisfies Yii's requirements. You can check if the minimum requirements are met using one of the following approaches:</source>
          <target state="translated">你应该在浏览器中看到上面的 &quot;恭喜!&quot;页面。如果没有,请检查你的PHP安装是否满足Yii的要求。你可以使用以下方法检查是否满足最低要求。</target>
        </trans-unit>
        <trans-unit id="d5b5112c41184f0c5160fb5f6bc6f46c942c9d61" translate="yes" xml:space="preserve">
          <source>You should specify exact attribute types via &lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24attributeTypes-detail&quot;&gt;$attributeTypes&lt;/a&gt;.</source>
          <target state="translated">您应该通过&lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24attributeTypes-detail&quot;&gt;$ attributeTypes&lt;/a&gt;指定确切的属性类型。</target>
        </trans-unit>
        <trans-unit id="a5d5763caddc2a1ee67afa397ff52f1e0f31fa38" translate="yes" xml:space="preserve">
          <source>You should usually override &lt;a href=&quot;yii-rest-activecontroller#checkAccess()-detail&quot;&gt;checkAccess()&lt;/a&gt; to check whether the current user has the privilege to perform the specified action against the specified model.</source>
          <target state="translated">通常，您应该重写&lt;a href=&quot;yii-rest-activecontroller#checkAccess()-detail&quot;&gt;checkAccess（）&lt;/a&gt;以检查当前用户是否具有对指定模型执行指定操作的特权。</target>
        </trans-unit>
        <trans-unit id="96ee84d6d03a1c341246f395ee4bfabb45cc334f" translate="yes" xml:space="preserve">
          <source>You specify the pagination and sorting behaviors of a data provider by configuring its &lt;a href=&quot;yii-data-basedataprovider#%24pagination-detail&quot;&gt;pagination&lt;/a&gt; and &lt;a href=&quot;yii-data-basedataprovider#%24sort-detail&quot;&gt;sort&lt;/a&gt; properties which correspond to the configurations for &lt;a href=&quot;yii-data-pagination&quot;&gt;yii\data\Pagination&lt;/a&gt; and &lt;a href=&quot;yii-data-sort&quot;&gt;yii\data\Sort&lt;/a&gt;, respectively. You may also configure them to be &lt;code&gt;false&lt;/code&gt; to disable pagination and/or sorting features.</source>
          <target state="translated">您可以通过配置数据提供者的&lt;a href=&quot;yii-data-basedataprovider#%24pagination-detail&quot;&gt;分页&lt;/a&gt;和&lt;a href=&quot;yii-data-basedataprovider#%24sort-detail&quot;&gt;排序&lt;/a&gt;属性来指定数据提供者的分页和排序行为，这些属性分别与&lt;a href=&quot;yii-data-pagination&quot;&gt;yii \ data \ Pagination&lt;/a&gt;和&lt;a href=&quot;yii-data-sort&quot;&gt;yii \ data \ Sort&lt;/a&gt;的配置相对应。您也可以将它们配置为 &lt;code&gt;false&lt;/code&gt; 以禁用分页和/或排序功能。</target>
        </trans-unit>
        <trans-unit id="734ed8c8b5b84217e4d7ac48268c912824204cf1" translate="yes" xml:space="preserve">
          <source>You specify the transport constructor arguments using 'constructArgs' key in the config. You can also specify the list of plugins, which should be registered to the transport using 'plugins' key. For example:</source>
          <target state="translated">你可以使用config中的'constructArgs'键指定传输构造函数的参数。你也可以使用'plugins'键指定应该注册到传输的插件列表。例如,你可以使用'plugins'键指定应该注册到传输的插件列表。</target>
        </trans-unit>
        <trans-unit id="ceee26291f383ec8f1a67bfb37cc946f87f23044" translate="yes" xml:space="preserve">
          <source>You then list this class in the &lt;code&gt;composer.json&lt;/code&gt; file of your extension like follows,</source>
          <target state="translated">然后，您可以在扩展程序的 &lt;code&gt;composer.json&lt;/code&gt; 文件中列出此类，如下所示，</target>
        </trans-unit>
        <trans-unit id="ec2e3dd7ea9aaff592ed3d85eb403189a1ea8824" translate="yes" xml:space="preserve">
          <source>You usually do not instantiate BatchQueryResult directly. Instead, you obtain it by calling &lt;a href=&quot;yii-db-query#batch()-detail&quot;&gt;yii\db\Query::batch()&lt;/a&gt; or &lt;a href=&quot;yii-db-query#each()-detail&quot;&gt;yii\db\Query::each()&lt;/a&gt;. Because BatchQueryResult implements the &lt;a href=&quot;http://www.php.net/class.iterator&quot;&gt;Iterator&lt;/a&gt; interface, you can iterate it to obtain a batch of data in each iteration. For example,</source>
          <target state="translated">通常，您不直接实例化BatchQueryResult。相反，您可以通过调用&lt;a href=&quot;yii-db-query#batch()-detail&quot;&gt;yii \ db \ Query :: batch（）&lt;/a&gt;或&lt;a href=&quot;yii-db-query#each()-detail&quot;&gt;yii \ db \ Query :: each（）获得它&lt;/a&gt;。由于BatchQueryResult实现了&lt;a href=&quot;http://www.php.net/class.iterator&quot;&gt;Iterator&lt;/a&gt;接口，因此您可以对其进行迭代以在每次迭代中获取一批数据。例如，</target>
        </trans-unit>
        <trans-unit id="a92ba8dda4b98b6d0754a08676f83f814dd518f9" translate="yes" xml:space="preserve">
          <source>You usually do not instantiate BatchQueryResult directly. Instead, you obtain it by calling &lt;a href=&quot;yii-elasticsearch-query#batch()-detail&quot;&gt;yii\elasticsearch\Query::batch()&lt;/a&gt; or &lt;a href=&quot;yii-elasticsearch-query#each()-detail&quot;&gt;yii\elasticsearch\Query::each()&lt;/a&gt;. Because BatchQueryResult implements the &lt;a href=&quot;http://www.php.net/class.iterator&quot;&gt;Iterator&lt;/a&gt; interface, you can iterate it to obtain a batch of data in each iteration.</source>
          <target state="translated">通常，您不直接实例化BatchQueryResult。相反，您可以通过调用&lt;a href=&quot;yii-elasticsearch-query#batch()-detail&quot;&gt;yii \ elasticsearch \ Query :: batch（）&lt;/a&gt;或&lt;a href=&quot;yii-elasticsearch-query#each()-detail&quot;&gt;yii \ elasticsearch \ Query :: each（）来获取它&lt;/a&gt;。由于BatchQueryResult实现了&lt;a href=&quot;http://www.php.net/class.iterator&quot;&gt;Iterator&lt;/a&gt;接口，因此您可以对其进行迭代以在每次迭代中获取一批数据。</target>
        </trans-unit>
        <trans-unit id="482f8de8ed66d4f1095aa201b9e8a6f9b94255bd" translate="yes" xml:space="preserve">
          <source>You usually do not instantiate BatchQueryResult directly. Instead, you obtain it by calling &lt;a href=&quot;yii-mongodb-query#batch()-detail&quot;&gt;yii\mongodb\Query::batch()&lt;/a&gt; or &lt;a href=&quot;yii-mongodb-query#each()-detail&quot;&gt;yii\mongodb\Query::each()&lt;/a&gt;. Because BatchQueryResult implements the &lt;code&gt;Iterator&lt;/code&gt; interface, you can iterate it to obtain a batch of data in each iteration. For example,</source>
          <target state="translated">通常，您不直接实例化BatchQueryResult。相反，您可以通过调用&lt;a href=&quot;yii-mongodb-query#batch()-detail&quot;&gt;yii \ mongodb \ Query :: batch（）&lt;/a&gt;或&lt;a href=&quot;yii-mongodb-query#each()-detail&quot;&gt;yii \ mongodb \ Query :: each（）来获取它&lt;/a&gt;。由于BatchQueryResult实现了 &lt;code&gt;Iterator&lt;/code&gt; 接口，因此您可以对其进行迭代以在每次迭代中获取一批数据。例如，</target>
        </trans-unit>
        <trans-unit id="dcf29e35022fa9f6812ffe0c908262507818e0ff" translate="yes" xml:space="preserve">
          <source>You want data to be outputted as HTML.</source>
          <target state="translated">您希望数据以HTML形式输出。</target>
        </trans-unit>
        <trans-unit id="78dd0473aefa07bf9925835f9c8a31b2c0647ccc" translate="yes" xml:space="preserve">
          <source>You want data to be outputted as plain text.</source>
          <target state="translated">您希望数据以纯文本形式输出。</target>
        </trans-unit>
        <trans-unit id="4a386bfed8205ffa9efbba31acd608c8cef7989e" translate="yes" xml:space="preserve">
          <source>You want your extension to run flawlessly without bringing problems to other people. To reach this goal, you should test your extension before releasing it to public.</source>
          <target state="translated">你希望你的扩展能够完美无瑕地运行,而不会给其他人带来问题。为了达到这个目标,你应该在向公众发布之前测试你的扩展。</target>
        </trans-unit>
        <trans-unit id="b670969ada90014ed6700fedd368184d566ea083" translate="yes" xml:space="preserve">
          <source>You will see a data grid showing the countries from the database table. You may sort the grid, or filter it by entering filter conditions in the column headers.</source>
          <target state="translated">你会看到一个数据网格,显示数据库表中的国家。您可以对网格进行排序,或者通过在列头输入过滤条件进行过滤。</target>
        </trans-unit>
        <trans-unit id="bdd1f2c519c5c0fd3008e3d2daaff67d226138ad" translate="yes" xml:space="preserve">
          <source>You will then find your files (if you've chosen file based translations) in your &lt;code&gt;messagePath&lt;/code&gt; directory.</source>
          <target state="translated">然后，您可以在 &lt;code&gt;messagePath&lt;/code&gt; 目录中找到文件（如果您选择了基于文件的翻译）。</target>
        </trans-unit>
        <trans-unit id="9cef9aa6654c76786b476d9fd08377bbd2b9dbc4" translate="yes" xml:space="preserve">
          <source>You would normally call &lt;code&gt;$query-&amp;gt;search()&lt;/code&gt; instead of creating a command as this method adds the &lt;code&gt;indexBy()&lt;/code&gt; feature and also removes some inconsistencies from the response.</source>
          <target state="translated">通常，您将调用 &lt;code&gt;$query-&amp;gt;search()&lt;/code&gt; 而不是创建命令，因为此方法添加了 &lt;code&gt;indexBy()&lt;/code&gt; 功能，并且还消除了响应中的某些不一致之处。</target>
        </trans-unit>
        <trans-unit id="214f658eafcae47e47e1d69db61cded352ffad56" translate="yes" xml:space="preserve">
          <source>You've got a project to work on and it has no tests.</source>
          <target state="translated">你有一个项目要做,但它没有测试。</target>
        </trans-unit>
        <trans-unit id="ce405dec9725435a249741ae84755d1fa80b89f7" translate="yes" xml:space="preserve">
          <source>Your class namespaces should start with &lt;code&gt;vendorName\extensionName&lt;/code&gt;, where &lt;code&gt;extensionName&lt;/code&gt; is similar to the project name in the package name except that it should not contain the &lt;code&gt;yii2-&lt;/code&gt; prefix. For example, for the &lt;code&gt;yiisoft/yii2-imagine&lt;/code&gt; extension, we use &lt;code&gt;yii\imagine&lt;/code&gt; as the namespace for its classes.</source>
          <target state="translated">您的类名称空间应以 &lt;code&gt;vendorName\extensionName&lt;/code&gt; 开头，其中 &lt;code&gt;extensionName&lt;/code&gt; 与程序包名称中的项目名称类似，不同之处在于它不应包含 &lt;code&gt;yii2-&lt;/code&gt; 前缀。例如，对于 &lt;code&gt;yiisoft/yii2-imagine&lt;/code&gt; 扩展，我们使用 &lt;code&gt;yii\imagine&lt;/code&gt; 作为其类的名称空间。</target>
        </trans-unit>
        <trans-unit id="b1d20048a4833e533c87e7b5ec88bffdd930dbb8" translate="yes" xml:space="preserve">
          <source>Your commands will then be available from the command line using the following route:</source>
          <target state="translated">然后,您的命令将可以从命令行使用以下路径。</target>
        </trans-unit>
        <trans-unit id="4c549ddf9c76d91a544d89560303aba1e880a364" translate="yes" xml:space="preserve">
          <source>Your extension depends on Yii (of course). So you should list it (&lt;code&gt;yiisoft/yii2&lt;/code&gt;) in the &lt;code&gt;require&lt;/code&gt; entry in &lt;code&gt;composer.json&lt;/code&gt;. If your extension also depends on other extensions or third-party libraries, you should list them as well. Make sure you also list appropriate version constraints (e.g. &lt;code&gt;1.*&lt;/code&gt;, &lt;code&gt;@stable&lt;/code&gt;) for each dependent package. Use stable dependencies when your extension is released in a stable version.</source>
          <target state="translated">您的扩展名取决于Yii（当然）。因此，您应该在 &lt;code&gt;composer.json&lt;/code&gt; 的 &lt;code&gt;require&lt;/code&gt; 条目中列出它（ &lt;code&gt;yiisoft/yii2&lt;/code&gt; ）。如果您的扩展程序还依赖于其他扩展程序或第三方库，则也应列出它们。确保您还列出了每个从属软件包的适当版本约束（例如 &lt;code&gt;1.*&lt;/code&gt; ， &lt;code&gt;@stable&lt;/code&gt; ）。当您的扩展以稳定版本发布时，请使用稳定依赖项。</target>
        </trans-unit>
        <trans-unit id="93e4e7c3847b6589a61eb21e4fe05008f4d3f99f" translate="yes" xml:space="preserve">
          <source>Your extension may be used by applications supporting different languages! Therefore, if your extension displays content to end users, you should try to &lt;a href=&quot;guide-tutorial-i18n&quot;&gt;internationalize and localize&lt;/a&gt; it. In particular,</source>
          <target state="translated">您的扩展程序可能会被支持不同语言的应用程序使用！因此，如果您的扩展程序向最终用户显示内容，则应尝试对其进行&lt;a href=&quot;guide-tutorial-i18n&quot;&gt;国际化和本地化&lt;/a&gt;。特别是，</target>
        </trans-unit>
        <trans-unit id="2abad81845b4c3b144643cd7faaf29ad4e589850" translate="yes" xml:space="preserve">
          <source>Your extension may need to access databases. Do not assume that the applications that use your extension will always use &lt;code&gt;Yii::$db&lt;/code&gt; as the DB connection. Instead, you should declare a &lt;code&gt;db&lt;/code&gt; property for the classes that require DB access. The property will allow users of your extension to customize which DB connection they would like your extension to use. As an example, you may refer to the &lt;a href=&quot;yii-caching-dbcache&quot;&gt;yii\caching\DbCache&lt;/a&gt; class and see how it declares and uses the &lt;code&gt;db&lt;/code&gt; property.</source>
          <target state="translated">您的扩展程序可能需要访问数据库。不要以为使用扩展名的应用程序将始终使用 &lt;code&gt;Yii::$db&lt;/code&gt; 作为数据库连接。相反，您应该为需要DB访问的类声明 &lt;code&gt;db&lt;/code&gt; 属性。该属性将允许您的扩展程序的用户自定义他们希望您的扩展程序使用的数据库连接。例如，您可以参考&lt;a href=&quot;yii-caching-dbcache&quot;&gt;yii \ caching \ DbCache&lt;/a&gt;类，并查看其如何声明和使用 &lt;code&gt;db&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="b90194819d87a8e4edd32f38a5a45b466a64501e" translate="yes" xml:space="preserve">
          <source>Your module may also declare commands, that will be available through the &lt;a href=&quot;guide-tutorial-console&quot;&gt;Console&lt;/a&gt; mode.</source>
          <target state="translated">您的模块还可以声明命令，这些命令可通过&lt;a href=&quot;guide-tutorial-console&quot;&gt;控制台&lt;/a&gt;模式使用。</target>
        </trans-unit>
        <trans-unit id="3b7257e194a80cb2cd58ea8732179497eca569dd" translate="yes" xml:space="preserve">
          <source>Your resource classes may support HATEOAS by implementing the &lt;a href=&quot;yii-web-linkable&quot;&gt;yii\web\Linkable&lt;/a&gt; interface. The interface contains a single method &lt;a href=&quot;yii-web-linkable#getLinks()-detail&quot;&gt;getLinks()&lt;/a&gt; which should return a list of &lt;a href=&quot;yii-web-link&quot;&gt;links&lt;/a&gt;. Typically, you should return at least the &lt;code&gt;self&lt;/code&gt; link representing the URL to the resource object itself. For example,</source>
          <target state="translated">您的资源类可以通过实现yii &lt;a href=&quot;yii-web-linkable&quot;&gt;\ web \&lt;/a&gt; Linkable 接口来支持HATEOAS 。该接口包含单个方法&lt;a href=&quot;yii-web-linkable#getLinks()-detail&quot;&gt;getLinks（）&lt;/a&gt;，该方法应返回&lt;a href=&quot;yii-web-link&quot;&gt;links&lt;/a&gt;列表。通常，您应该至少返回代表资源对象本身的URL 的 &lt;code&gt;self&lt;/code&gt; 链接。例如，</target>
        </trans-unit>
        <trans-unit id="9658c4e8cc329ead3d12bcf99fc150f01fe31dcb" translate="yes" xml:space="preserve">
          <source>ZSH completion</source>
          <target state="translated">ZSH完成</target>
        </trans-unit>
        <trans-unit id="93c6c90643e3b1807979e6999edde193244028b2" translate="yes" xml:space="preserve">
          <source>ZendDataCache provides Zend data caching in terms of an application component.</source>
          <target state="translated">ZendDataCache以应用组件的方式提供Zend数据缓存。</target>
        </trans-unit>
        <trans-unit id="95a03e66821ae9cbc62744cc4467eff2f8650297" translate="yes" xml:space="preserve">
          <source>Zero-based column index</source>
          <target state="translated">零基列索引</target>
        </trans-unit>
        <trans-unit id="0dd814e32fd56ebd047e4f8d972f25d9d1384154" translate="yes" xml:space="preserve">
          <source>Zero-based offset from where the records are to be returned.</source>
          <target state="translated">以零为基础的偏移,从要返回的记录的位置。</target>
        </trans-unit>
        <trans-unit id="3ff85ff4b844384ebb17c3d3a1ee582a6e4d5e06" translate="yes" xml:space="preserve">
          <source>Zero-based offset from where the records are to be returned. May be an instance of &lt;a href=&quot;yii-db-expression&quot;&gt;yii\db\Expression&lt;/a&gt;. If not set or less than 0, it means starting from the beginning.</source>
          <target state="translated">从零开始的记录偏移量。可能是&lt;a href=&quot;yii-db-expression&quot;&gt;yii \ db \ Expression&lt;/a&gt;的实例。如果未设置或小于0，则表示从头开始。</target>
        </trans-unit>
        <trans-unit id="cfee675a504bb4d63e08844965191948a09ed016" translate="yes" xml:space="preserve">
          <source>[optional]</source>
          <target state="translated">[optional]</target>
        </trans-unit>
        <trans-unit id="f01c72c514fd7694294ef85d47819051c42b9da5" translate="yes" xml:space="preserve">
          <source>\AccessControl</source>
          <target state="translated">\AccessControl</target>
        </trans-unit>
        <trans-unit id="034a219f2fa8437720d100e78e5cc337e479baae" translate="yes" xml:space="preserve">
          <source>\AccessControl $denyCallback</source>
          <target state="translated">\ AccessControl $ denyCallback</target>
        </trans-unit>
        <trans-unit id="cd5b22309b1c0f8d1014372095db9462a04b3db2" translate="yes" xml:space="preserve">
          <source>\AccessControl $ruleConfig</source>
          <target state="translated">\ AccessControl $ ruleConfig</target>
        </trans-unit>
        <trans-unit id="256f0c7c4956279d0cbfbef825aa4d2c95eb308c" translate="yes" xml:space="preserve">
          <source>\AccessControl $rules</source>
          <target state="translated">\ AccessControl $规则</target>
        </trans-unit>
        <trans-unit id="b8347bf2c86ad7b21221e854724ab636b0e0bfee" translate="yes" xml:space="preserve">
          <source>\AccessControl $user</source>
          <target state="translated">\ AccessControl $ user</target>
        </trans-unit>
        <trans-unit id="ac2e1ae4f231245b4e37b081f718b7306d0ad0cd" translate="yes" xml:space="preserve">
          <source>\AccessControl beforeAction()</source>
          <target state="translated">\ AccessControl beforeAction（）</target>
        </trans-unit>
        <trans-unit id="a9a8bea3617764be0141b6055a4f1a3054ffa02f" translate="yes" xml:space="preserve">
          <source>\AccessControl denyAccess()</source>
          <target state="translated">\ AccessControl denyAccess（）</target>
        </trans-unit>
        <trans-unit id="de9bc970cbeac7f2d32d85b4932ef1f5443f7375" translate="yes" xml:space="preserve">
          <source>\AccessControl init()</source>
          <target state="translated">\ AccessControl init（）</target>
        </trans-unit>
        <trans-unit id="32538ea214d27cfc3b69052deb1419ef9351b7aa" translate="yes" xml:space="preserve">
          <source>\AccessRule</source>
          <target state="translated">\AccessRule</target>
        </trans-unit>
        <trans-unit id="9dc7ba0a1757de520231577606a22029ecb8829b" translate="yes" xml:space="preserve">
          <source>\AccessRule $actions</source>
          <target state="translated">\ AccessRule $ actions</target>
        </trans-unit>
        <trans-unit id="ff4939c192b862a3d76420655f437f1fbf0e0b99" translate="yes" xml:space="preserve">
          <source>\AccessRule $allow</source>
          <target state="translated">\ AccessRule $ allow</target>
        </trans-unit>
        <trans-unit id="1796f91577c1f057f7b46d872335115be13c2266" translate="yes" xml:space="preserve">
          <source>\AccessRule $controllers</source>
          <target state="translated">\ AccessRule $控制器</target>
        </trans-unit>
        <trans-unit id="a52edc3fe891cf9e3b85d62822251fd5d8c0b680" translate="yes" xml:space="preserve">
          <source>\AccessRule $denyCallback</source>
          <target state="translated">\ AccessRule $ denyCallback</target>
        </trans-unit>
        <trans-unit id="5b3a66238b9cc7b7238f5d54f9265522c0a70ae1" translate="yes" xml:space="preserve">
          <source>\AccessRule $ips</source>
          <target state="translated">\ AccessRule $ ips</target>
        </trans-unit>
        <trans-unit id="df0c9c4ae255b0cb08a34aa41180a6802e006764" translate="yes" xml:space="preserve">
          <source>\AccessRule $matchCallback</source>
          <target state="translated">\ AccessRule $ matchCallback</target>
        </trans-unit>
        <trans-unit id="2b5577ef910d0cc782c6342e59ea08078c44845c" translate="yes" xml:space="preserve">
          <source>\AccessRule $roleParams</source>
          <target state="translated">\ AccessRule $ roleParams</target>
        </trans-unit>
        <trans-unit id="c9e645c48a13a70a5254c289bae6415bf4b7b725" translate="yes" xml:space="preserve">
          <source>\AccessRule $roles</source>
          <target state="translated">\ AccessRule $ roles</target>
        </trans-unit>
        <trans-unit id="de69c8a26d25ba184f44d1e78209e370838433b0" translate="yes" xml:space="preserve">
          <source>\AccessRule $verbs</source>
          <target state="translated">\ AccessRule $动词</target>
        </trans-unit>
        <trans-unit id="36dc83f40f118197740a166e196e3561728268ab" translate="yes" xml:space="preserve">
          <source>\AccessRule allows()</source>
          <target state="translated">\ AccessRule allow（）</target>
        </trans-unit>
        <trans-unit id="56b635336f38f7553812df3570de908cc37b55ae" translate="yes" xml:space="preserve">
          <source>\AccessRule matchAction()</source>
          <target state="translated">\ AccessRule matchAction（）</target>
        </trans-unit>
        <trans-unit id="5cce58db18376c8695af68321760726ac4d66ff5" translate="yes" xml:space="preserve">
          <source>\AccessRule matchController()</source>
          <target state="translated">\ AccessRule matchController（）</target>
        </trans-unit>
        <trans-unit id="c82025ed0b424c830a14ec7f25bc2c23713f35ab" translate="yes" xml:space="preserve">
          <source>\AccessRule matchCustom()</source>
          <target state="translated">\ AccessRule matchCustom（）</target>
        </trans-unit>
        <trans-unit id="bd98c4d96fa3852106adec16a47da5cce0eb99af" translate="yes" xml:space="preserve">
          <source>\AccessRule matchIP()</source>
          <target state="translated">\ AccessRule matchIP（）</target>
        </trans-unit>
        <trans-unit id="418b039ee4657bd9d34f875df95ecde8d0e05a6b" translate="yes" xml:space="preserve">
          <source>\AccessRule matchRole()</source>
          <target state="translated">\ AccessRule matchRole（）</target>
        </trans-unit>
        <trans-unit id="8ece4f3e78e3509001d02341feba5a6eff07af8b" translate="yes" xml:space="preserve">
          <source>\AccessRule matchVerb()</source>
          <target state="translated">\ AccessRule matchVerb（）</target>
        </trans-unit>
        <trans-unit id="dbd4e22a55295c8e6c46a9bc19e6a064b3264616" translate="yes" xml:space="preserve">
          <source>\Accordion</source>
          <target state="translated">\Accordion</target>
        </trans-unit>
        <trans-unit id="5682cbdd500914a3f4ac6f37270b5be6257115f4" translate="yes" xml:space="preserve">
          <source>\Accordion $headerOptions</source>
          <target state="translated">\ Accordion $ headerOptions</target>
        </trans-unit>
        <trans-unit id="6d3076a65990acda6dcddf9101ad7e48c2a31ca5" translate="yes" xml:space="preserve">
          <source>\Accordion $itemOptions</source>
          <target state="translated">\手风琴$ itemOptions</target>
        </trans-unit>
        <trans-unit id="caf71755c16344384c6bd752d98615a086d52cdc" translate="yes" xml:space="preserve">
          <source>\Accordion $items</source>
          <target state="translated">\手风琴$ items</target>
        </trans-unit>
        <trans-unit id="9ddb0200fef45315f3bd82d9c06140b735e3a938" translate="yes" xml:space="preserve">
          <source>\Accordion $options</source>
          <target state="translated">\手风琴$选项</target>
        </trans-unit>
        <trans-unit id="afb6b35c4c9c1f7f73f97e0b30cd56d0f5d0ad97" translate="yes" xml:space="preserve">
          <source>\Accordion renderItems()</source>
          <target state="translated">\ Accordion renderItems（）</target>
        </trans-unit>
        <trans-unit id="01afcc1f5b16c08b0b717ab99514ba9d3a1ae66d" translate="yes" xml:space="preserve">
          <source>\Accordion run()</source>
          <target state="translated">\ Accordion run（）</target>
        </trans-unit>
        <trans-unit id="808516dcd15c68f964c8a874f90479db25f7aecf" translate="yes" xml:space="preserve">
          <source>\Action</source>
          <target state="translated">\Action</target>
        </trans-unit>
        <trans-unit id="5bec3707a61b0fd5e99f7fa7a3a94ea88545d58f" translate="yes" xml:space="preserve">
          <source>\Action $checkAccess</source>
          <target state="translated">\ Action $ checkAccess</target>
        </trans-unit>
        <trans-unit id="dc9b48cda4322e1a7cc2eb43a45d54bf3144985d" translate="yes" xml:space="preserve">
          <source>\Action $controller</source>
          <target state="translated">\ Action $ controller</target>
        </trans-unit>
        <trans-unit id="1dd1052b31d5489a3bb60960e8ae0b7aa231d52b" translate="yes" xml:space="preserve">
          <source>\Action $findModel</source>
          <target state="translated">\ Action $ findModel</target>
        </trans-unit>
        <trans-unit id="64a67e5154d2890dcc0bc97f7aeea0978d1dab39" translate="yes" xml:space="preserve">
          <source>\Action $id</source>
          <target state="translated">\动作$ id</target>
        </trans-unit>
        <trans-unit id="f1399c9f4f1100bf67a0f591d9d61003b87e7d60" translate="yes" xml:space="preserve">
          <source>\Action $modelClass</source>
          <target state="translated">\ Action $ modelClass</target>
        </trans-unit>
        <trans-unit id="78085ec4e9850e376ac26e469b6a60372d1b24ec" translate="yes" xml:space="preserve">
          <source>\Action $uniqueId</source>
          <target state="translated">\动作$ uniqueId</target>
        </trans-unit>
        <trans-unit id="6faea5a548f6b01b3e5da60bdb36b7cee8812dbe" translate="yes" xml:space="preserve">
          <source>\Action __construct()</source>
          <target state="translated">\ Action __construct（）</target>
        </trans-unit>
        <trans-unit id="18a33cee182bedcb001f6cd2e9c2efd181529ee0" translate="yes" xml:space="preserve">
          <source>\Action afterRun()</source>
          <target state="translated">\ Action afterRun（）</target>
        </trans-unit>
        <trans-unit id="2dd591aec3ac10bfe00c8f396d6bfdf64fd38958" translate="yes" xml:space="preserve">
          <source>\Action beforeRun()</source>
          <target state="translated">\ Action beforeRun（）</target>
        </trans-unit>
        <trans-unit id="8a332d060b2b7b9f82e52cefc3752bd5450e14c2" translate="yes" xml:space="preserve">
          <source>\Action findModel()</source>
          <target state="translated">\动作findModel（）</target>
        </trans-unit>
        <trans-unit id="b49764229b7d648f2db840179693965c0924bebb" translate="yes" xml:space="preserve">
          <source>\Action getUniqueId()</source>
          <target state="translated">\ Action getUniqueId（）</target>
        </trans-unit>
        <trans-unit id="3091d55ba43a5a444c8c7b46aacc015fdfcc5bcd" translate="yes" xml:space="preserve">
          <source>\Action init()</source>
          <target state="translated">\动作init（）</target>
        </trans-unit>
        <trans-unit id="969c1b1d0ff9827bd84c26c9ed7a58722fb78d1e" translate="yes" xml:space="preserve">
          <source>\Action runWithParams()</source>
          <target state="translated">\ Action runWithParams（）</target>
        </trans-unit>
        <trans-unit id="fde50aff7a3ad3b68d19a34cee9b06efbacf5683" translate="yes" xml:space="preserve">
          <source>\ActionColumn</source>
          <target state="translated">\ActionColumn</target>
        </trans-unit>
        <trans-unit id="a590117ed8842b5d21ce73eaac23f2051f13b07b" translate="yes" xml:space="preserve">
          <source>\ActionColumn $buttonOptions</source>
          <target state="translated">\ ActionColumn $ buttonOptions</target>
        </trans-unit>
        <trans-unit id="c3f0be0b13b67ccd5e2b6a3b6377b23596436747" translate="yes" xml:space="preserve">
          <source>\ActionColumn $buttons</source>
          <target state="translated">\ ActionColumn $按钮</target>
        </trans-unit>
        <trans-unit id="08fa9b6174f7147e8c27e4070e503c93b45d147f" translate="yes" xml:space="preserve">
          <source>\ActionColumn $controller</source>
          <target state="translated">\ ActionColumn $ controller</target>
        </trans-unit>
        <trans-unit id="ebfe5b74749fdc01b4b8a653a0795e96d62f0c9e" translate="yes" xml:space="preserve">
          <source>\ActionColumn $headerOptions</source>
          <target state="translated">\ ActionColumn $ headerOptions</target>
        </trans-unit>
        <trans-unit id="5c2b0a0166ae54253a20d2329fdecb4342261e12" translate="yes" xml:space="preserve">
          <source>\ActionColumn $template</source>
          <target state="translated">\ ActionColumn $模板</target>
        </trans-unit>
        <trans-unit id="c4b2a85d2d7d006c1dbbebec2fd7bce9ed4ab418" translate="yes" xml:space="preserve">
          <source>\ActionColumn $urlCreator</source>
          <target state="translated">\ ActionColumn $ urlCreator</target>
        </trans-unit>
        <trans-unit id="e836c32b8071f33f99216afbe2fafda2637c04fc" translate="yes" xml:space="preserve">
          <source>\ActionColumn $visibleButtons</source>
          <target state="translated">\ ActionColumn $ visibleButtons</target>
        </trans-unit>
        <trans-unit id="37b7b34b8d0d6617e1fb4c979060673c738c3522" translate="yes" xml:space="preserve">
          <source>\ActionColumn createUrl()</source>
          <target state="translated">\ ActionColumn createUrl（）</target>
        </trans-unit>
        <trans-unit id="87b8fa94af707ac616e15d8b9169a33410a6966f" translate="yes" xml:space="preserve">
          <source>\ActionColumn init()</source>
          <target state="translated">\ ActionColumn init（）</target>
        </trans-unit>
        <trans-unit id="7e02ca29e6bd749965e8001f948d3ae9343840cd" translate="yes" xml:space="preserve">
          <source>\ActionColumn initDefaultButton()</source>
          <target state="translated">\ ActionColumn initDefaultButton（）</target>
        </trans-unit>
        <trans-unit id="86cbce1fe130bdf359091fc5a534196d0e759b5c" translate="yes" xml:space="preserve">
          <source>\ActionColumn initDefaultButtons()</source>
          <target state="translated">\ ActionColumn initDefaultButtons（）</target>
        </trans-unit>
        <trans-unit id="6e0d9811be157e4f828c46023a3d1d9a5777553e" translate="yes" xml:space="preserve">
          <source>\ActionColumn renderDataCellContent()</source>
          <target state="translated">\ ActionColumn renderDataCellContent（）</target>
        </trans-unit>
        <trans-unit id="eeab3b338e9fa0a0e35d01d075ee24a49d3bd97f" translate="yes" xml:space="preserve">
          <source>\ActionEvent</source>
          <target state="translated">\ActionEvent</target>
        </trans-unit>
        <trans-unit id="5180a9ad976398841ff725a17c06671d06b081de" translate="yes" xml:space="preserve">
          <source>\ActionEvent $action</source>
          <target state="translated">\ ActionEvent $ action</target>
        </trans-unit>
        <trans-unit id="fd340c5a1e658649b26373e650232e5e0fed2f42" translate="yes" xml:space="preserve">
          <source>\ActionEvent $isValid</source>
          <target state="translated">\ ActionEvent $ isValid</target>
        </trans-unit>
        <trans-unit id="43fee8c2b776d8dc6c9359ed5bc7d6ecf86db176" translate="yes" xml:space="preserve">
          <source>\ActionEvent $result</source>
          <target state="translated">\ ActionEvent $结果</target>
        </trans-unit>
        <trans-unit id="ef611a6f41f798759fa6f950fac6ecf38c5fbdc7" translate="yes" xml:space="preserve">
          <source>\ActionEvent __construct()</source>
          <target state="translated">\ ActionEvent __construct（）</target>
        </trans-unit>
        <trans-unit id="ea9d63ea7f8896638c9d067869f45ea8a7497d66" translate="yes" xml:space="preserve">
          <source>\ActionFilter</source>
          <target state="translated">\ActionFilter</target>
        </trans-unit>
        <trans-unit id="2978e01e3481b009447593aa04aa8e91377c8fad" translate="yes" xml:space="preserve">
          <source>\ActionFilter $except</source>
          <target state="translated">\ ActionFilter $ except</target>
        </trans-unit>
        <trans-unit id="e8629ad9d0ad7de16b4f5a60f92b2f32d8bbc179" translate="yes" xml:space="preserve">
          <source>\ActionFilter $only</source>
          <target state="translated">\ ActionFilter $ only</target>
        </trans-unit>
        <trans-unit id="78678f8384feb832f58f552f899aa499ca9f1ba0" translate="yes" xml:space="preserve">
          <source>\ActionFilter afterAction()</source>
          <target state="translated">\ ActionFilter afterAction（）</target>
        </trans-unit>
        <trans-unit id="38e7e91c47550b9c00442c105c239b223d46da71" translate="yes" xml:space="preserve">
          <source>\ActionFilter afterFilter()</source>
          <target state="translated">\ ActionFilter afterFilter（）</target>
        </trans-unit>
        <trans-unit id="a793d068172a44ff796fe41020499b834aa6ba00" translate="yes" xml:space="preserve">
          <source>\ActionFilter attach()</source>
          <target state="translated">\ ActionFilter attach（）</target>
        </trans-unit>
        <trans-unit id="9e28ad35439c878903848592638b9f499de9270d" translate="yes" xml:space="preserve">
          <source>\ActionFilter beforeAction()</source>
          <target state="translated">\ ActionFilter beforeAction（）</target>
        </trans-unit>
        <trans-unit id="85ba3de804997ade911bb03dd0d36c0a4cd68584" translate="yes" xml:space="preserve">
          <source>\ActionFilter beforeFilter()</source>
          <target state="translated">\ ActionFilter beforeFilter（）</target>
        </trans-unit>
        <trans-unit id="d38954875116fb8c5d2c3fc4016df6551c3a7384" translate="yes" xml:space="preserve">
          <source>\ActionFilter detach()</source>
          <target state="translated">\ ActionFilter detach（）</target>
        </trans-unit>
        <trans-unit id="78454eb9923da80ecce0848ab849b64d8476679a" translate="yes" xml:space="preserve">
          <source>\ActionFilter getActionId()</source>
          <target state="translated">\ ActionFilter getActionId（）</target>
        </trans-unit>
        <trans-unit id="dd466264ea070e1ee75e67e0448b18f19e824c94" translate="yes" xml:space="preserve">
          <source>\ActionFilter isActive()</source>
          <target state="translated">\ ActionFilter isActive（）</target>
        </trans-unit>
        <trans-unit id="a977e05099cfa5a32c1210383fa89247bea6b34c" translate="yes" xml:space="preserve">
          <source>\ActiveController</source>
          <target state="translated">\ActiveController</target>
        </trans-unit>
        <trans-unit id="3539f7d89126136bfd79409fa9d19b9ab9f838b2" translate="yes" xml:space="preserve">
          <source>\ActiveController $createScenario</source>
          <target state="translated">\ ActiveController $ createScenario</target>
        </trans-unit>
        <trans-unit id="4cf97305aa8b8b99437bb1694df0907be2184053" translate="yes" xml:space="preserve">
          <source>\ActiveController $modelClass</source>
          <target state="translated">\ ActiveController $ modelClass</target>
        </trans-unit>
        <trans-unit id="853a990e3e3dc01ca5136062af28a3646b164ee1" translate="yes" xml:space="preserve">
          <source>\ActiveController $updateScenario</source>
          <target state="translated">\ ActiveController $ updateScenario</target>
        </trans-unit>
        <trans-unit id="abdb627eb302f1f435439202a10b26df6b2ceb3b" translate="yes" xml:space="preserve">
          <source>\ActiveController actions()</source>
          <target state="translated">\ ActiveController actions（）</target>
        </trans-unit>
        <trans-unit id="f527b9ead0b9ba0b1ed39bc6b5a4fccf9778e64a" translate="yes" xml:space="preserve">
          <source>\ActiveController checkAccess()</source>
          <target state="translated">\ ActiveController checkAccess（）</target>
        </trans-unit>
        <trans-unit id="31dddc15f34e1c758a9434d2b2688c0d0767fe26" translate="yes" xml:space="preserve">
          <source>\ActiveController init()</source>
          <target state="translated">\ ActiveController init（）</target>
        </trans-unit>
        <trans-unit id="04b323de4c191f7391275a8fedf31f6132b6af5b" translate="yes" xml:space="preserve">
          <source>\ActiveController verbs()</source>
          <target state="translated">\ ActiveController动词（）</target>
        </trans-unit>
        <trans-unit id="c54afeb3eea34c3a06e6c54db3c7ef2e0d006e0d" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider</source>
          <target state="translated">\ActiveDataProvider</target>
        </trans-unit>
        <trans-unit id="4c7624edc51458b3dd38ed51f816babf80caf65c" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider $aggregations</source>
          <target state="translated">\ ActiveDataProvider $聚合</target>
        </trans-unit>
        <trans-unit id="3e0207220028cc245ab8dc0a6bcc31fc5ca727c0" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider $db</source>
          <target state="translated">\ ActiveDataProvider $ db</target>
        </trans-unit>
        <trans-unit id="bbbeaa69b6c34ca80d0dedd792b14ca1404104cc" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider $facets</source>
          <target state="translated">\ ActiveDataProvider $ facets</target>
        </trans-unit>
        <trans-unit id="2efb5b51c8ef1c746dfe09789515882c5bde8992" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider $key</source>
          <target state="translated">\ ActiveDataProvider $ key</target>
        </trans-unit>
        <trans-unit id="60ec0ea321516e096ae4b1569aca797165eafde4" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider $meta</source>
          <target state="translated">\ ActiveDataProvider $ meta</target>
        </trans-unit>
        <trans-unit id="873fe9b3084fecc7afc01d0b17e1640ed361a198" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider $query</source>
          <target state="translated">\ ActiveDataProvider $ query</target>
        </trans-unit>
        <trans-unit id="3b8badb2c5555c1a6cc152c4c79fa94233e0df1b" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider $queryResults</source>
          <target state="translated">\ ActiveDataProvider $ queryResults</target>
        </trans-unit>
        <trans-unit id="3fb79e8d6f201a3d888ec804e74deb88eabccef0" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider getAggregation()</source>
          <target state="translated">\ ActiveDataProvider getAggregation（）</target>
        </trans-unit>
        <trans-unit id="38d779979b94e3868d711dfd53cac361780af2d1" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider getAggregations()</source>
          <target state="translated">\ ActiveDataProvider getAggregations（）</target>
        </trans-unit>
        <trans-unit id="4f307fb0850d48f770ce70962155d8a8d1aff5be" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider getFacet()</source>
          <target state="translated">\ ActiveDataProvider getFacet（）</target>
        </trans-unit>
        <trans-unit id="9d421c26a6a60c4f14938ce03e5ae6e02d834e2d" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider getFacets()</source>
          <target state="translated">\ ActiveDataProvider getFacets（）</target>
        </trans-unit>
        <trans-unit id="a531132f160c7c992bd3278518bb4867cae09849" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider getMeta()</source>
          <target state="translated">\ ActiveDataProvider getMeta（）</target>
        </trans-unit>
        <trans-unit id="52527397241fd32d5407c9004861e88728c5d3cd" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider getQueryResults()</source>
          <target state="translated">\ ActiveDataProvider getQueryResults（）</target>
        </trans-unit>
        <trans-unit id="b50def96da41893ac32571e785d7bfcbc9596a88" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider init()</source>
          <target state="translated">\ ActiveDataProvider init（）</target>
        </trans-unit>
        <trans-unit id="e704544585172deb728d0309e8d473b639307012" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider prepareKeys()</source>
          <target state="translated">\ ActiveDataProvider prepareKeys（）</target>
        </trans-unit>
        <trans-unit id="66ff51bd71d16518b54a9c44d5c09541b5053600" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider prepareModels()</source>
          <target state="translated">\ ActiveDataProvider prepareModels（）</target>
        </trans-unit>
        <trans-unit id="dcd06f3e614ea650b035aac84e53983dc1564d11" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider prepareTotalCount()</source>
          <target state="translated">\ ActiveDataProvider prepareTotalCount（）</target>
        </trans-unit>
        <trans-unit id="e9537041047eee9215979308e0171d61774d364b" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider setFacets()</source>
          <target state="translated">\ ActiveDataProvider setFacets（）</target>
        </trans-unit>
        <trans-unit id="2b98e2a336beedc6fc1075de46865f8b914bceca" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider setMeta()</source>
          <target state="translated">\ ActiveDataProvider setMeta（）</target>
        </trans-unit>
        <trans-unit id="ca1af5f4620676c8bd02a3cc9c6a24d577345d28" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider setQueryResults()</source>
          <target state="translated">\ ActiveDataProvider setQueryResults（）</target>
        </trans-unit>
        <trans-unit id="3b99a76be60dd9df526c4fbf25c127e57e9e89a6" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider setSort()</source>
          <target state="translated">\ ActiveDataProvider setSort（）</target>
        </trans-unit>
        <trans-unit id="634d796de504dc00f5c1bb1a499b89967bd366d2" translate="yes" xml:space="preserve">
          <source>\ActiveField</source>
          <target state="translated">\ActiveField</target>
        </trans-unit>
        <trans-unit id="9f51e72ec89f015d36456a4e514173e2fbe455d1" translate="yes" xml:space="preserve">
          <source>\ActiveField $addAriaAttributes</source>
          <target state="translated">\ ActiveField $ addAriaAttributes</target>
        </trans-unit>
        <trans-unit id="8a58a522738346c17fc7587f6ad224f6d33832fb" translate="yes" xml:space="preserve">
          <source>\ActiveField $attribute</source>
          <target state="translated">\ ActiveField $ attribute</target>
        </trans-unit>
        <trans-unit id="1806b0584aae9b2fe75d17449e2c79bffe13c5f1" translate="yes" xml:space="preserve">
          <source>\ActiveField $checkboxTemplate</source>
          <target state="translated">\ ActiveField $ checkboxTemplate</target>
        </trans-unit>
        <trans-unit id="d7b2d5b07e2fdfcf6984853d34667039f8f05aff" translate="yes" xml:space="preserve">
          <source>\ActiveField $enableAjaxValidation</source>
          <target state="translated">\ ActiveField $ enableAjaxValidation</target>
        </trans-unit>
        <trans-unit id="9a89ed874a9c6fae6651183630a88b2ea9ae4b4a" translate="yes" xml:space="preserve">
          <source>\ActiveField $enableClientValidation</source>
          <target state="translated">\ ActiveField $ enableClientValidation</target>
        </trans-unit>
        <trans-unit id="4e6deb3be78ccd7ff96332a052eb4841d634654b" translate="yes" xml:space="preserve">
          <source>\ActiveField $enableError</source>
          <target state="translated">\ ActiveField $ enableError</target>
        </trans-unit>
        <trans-unit id="2e3b143321c21cd7b2d980c26fb1cb506a1d21f1" translate="yes" xml:space="preserve">
          <source>\ActiveField $enableLabel</source>
          <target state="translated">\ ActiveField $ enableLabel</target>
        </trans-unit>
        <trans-unit id="6d84290525a431e861cf7ec1ed7737dceb045aff" translate="yes" xml:space="preserve">
          <source>\ActiveField $errorOptions</source>
          <target state="translated">\ ActiveField $ errorOptions</target>
        </trans-unit>
        <trans-unit id="f1605204c9d7b6c433f2b26c081886773b60703a" translate="yes" xml:space="preserve">
          <source>\ActiveField $form</source>
          <target state="translated">\ ActiveField $ form</target>
        </trans-unit>
        <trans-unit id="92635672ed40b3badcd8f95f0c37e9093e09aff7" translate="yes" xml:space="preserve">
          <source>\ActiveField $hintOptions</source>
          <target state="translated">\ ActiveField $ hintOptions</target>
        </trans-unit>
        <trans-unit id="86ddd302e48ea1e6aac102b0e2c03b6032e2f49d" translate="yes" xml:space="preserve">
          <source>\ActiveField $horizontalCheckboxTemplate</source>
          <target state="translated">\ ActiveField $ horizo​​ntalCheckboxTemplate</target>
        </trans-unit>
        <trans-unit id="e9c8c7194b895e1c8e41d87f6aa8514726363478" translate="yes" xml:space="preserve">
          <source>\ActiveField $horizontalCssClasses</source>
          <target state="translated">\ ActiveField $ horizo​​ntalCssClasses</target>
        </trans-unit>
        <trans-unit id="8ae864a00daf0f477319cd55305e7affef8cd010" translate="yes" xml:space="preserve">
          <source>\ActiveField $horizontalRadioTemplate</source>
          <target state="translated">\ ActiveField $ horizo​​ntalRadioTemplate</target>
        </trans-unit>
        <trans-unit id="3c9d0a8517d176931163451f200c35218fd7fa5c" translate="yes" xml:space="preserve">
          <source>\ActiveField $inline</source>
          <target state="translated">\ ActiveField $ inline</target>
        </trans-unit>
        <trans-unit id="f3ab8b4731d5e2731c10af59e73279d4090ae3a7" translate="yes" xml:space="preserve">
          <source>\ActiveField $inlineCheckboxListTemplate</source>
          <target state="translated">\ ActiveField $ inlineCheckboxListTemplate</target>
        </trans-unit>
        <trans-unit id="a32172a8310840ab477664d5e837046c523d1924" translate="yes" xml:space="preserve">
          <source>\ActiveField $inlineRadioListTemplate</source>
          <target state="translated">\ ActiveField $ inlineRadioListTemplate</target>
        </trans-unit>
        <trans-unit id="3c1bbc50ae357c142dbd9fe7dc9dc21adede7e66" translate="yes" xml:space="preserve">
          <source>\ActiveField $inputOptions</source>
          <target state="translated">\ ActiveField $ inputOptions</target>
        </trans-unit>
        <trans-unit id="d5363c9b12ddc10d4477849509a6ff06facbd164" translate="yes" xml:space="preserve">
          <source>\ActiveField $inputTemplate</source>
          <target state="translated">\ ActiveField $ inputTemplate</target>
        </trans-unit>
        <trans-unit id="9d08e72af22486986523f14cee2d7cd8fd49de6f" translate="yes" xml:space="preserve">
          <source>\ActiveField $labelOptions</source>
          <target state="translated">\ ActiveField $ labelOptions</target>
        </trans-unit>
        <trans-unit id="59f95fec143e51f9c67093f06ff670d20b1fe510" translate="yes" xml:space="preserve">
          <source>\ActiveField $model</source>
          <target state="translated">\ ActiveField $模型</target>
        </trans-unit>
        <trans-unit id="4899e092a9c4cedec8ca867db219629bc4d3b380" translate="yes" xml:space="preserve">
          <source>\ActiveField $options</source>
          <target state="translated">\ ActiveField $选项</target>
        </trans-unit>
        <trans-unit id="750e3ef71a3cfa67963fcf435ce80ce6100e827d" translate="yes" xml:space="preserve">
          <source>\ActiveField $parts</source>
          <target state="translated">\ ActiveField $部分</target>
        </trans-unit>
        <trans-unit id="d42b84e6f087d50e6d27ddba0ce2e7defb94f9d6" translate="yes" xml:space="preserve">
          <source>\ActiveField $radioTemplate</source>
          <target state="translated">\ ActiveField $ radioTemplate</target>
        </trans-unit>
        <trans-unit id="1dd1fec50b75b28a3ad984fccc98ef044629aac0" translate="yes" xml:space="preserve">
          <source>\ActiveField $selectors</source>
          <target state="translated">\ ActiveField $选择器</target>
        </trans-unit>
        <trans-unit id="7256dde7a2a08eeef3c0dd896ee7eb5023d46002" translate="yes" xml:space="preserve">
          <source>\ActiveField $template</source>
          <target state="translated">\ ActiveField $模板</target>
        </trans-unit>
        <trans-unit id="affcaedb85194a498d6c4fbc743837ad111aafee" translate="yes" xml:space="preserve">
          <source>\ActiveField $validateOnBlur</source>
          <target state="translated">\ ActiveField $ validateOnBlur</target>
        </trans-unit>
        <trans-unit id="30a596660232766fe9572d4bdbd0b76f851aca83" translate="yes" xml:space="preserve">
          <source>\ActiveField $validateOnChange</source>
          <target state="translated">\ ActiveField $ validateOnChange</target>
        </trans-unit>
        <trans-unit id="7a602ea82f620d726ad1c0f71b3632dd217d0155" translate="yes" xml:space="preserve">
          <source>\ActiveField $validateOnType</source>
          <target state="translated">\ ActiveField $ validateOnType</target>
        </trans-unit>
        <trans-unit id="ce0a0fb08af4bf94ed7a75f2086d1efa0431c83f" translate="yes" xml:space="preserve">
          <source>\ActiveField $validationDelay</source>
          <target state="translated">\ ActiveField $ validationDelay</target>
        </trans-unit>
        <trans-unit id="e5f8d80bfb52744ee31e0da1acaff38a069ec085" translate="yes" xml:space="preserve">
          <source>\ActiveField $wrapperOptions</source>
          <target state="translated">\ ActiveField $ wrapperOptions</target>
        </trans-unit>
        <trans-unit id="84464c1647a559c4d8798a8578315d2052763ae1" translate="yes" xml:space="preserve">
          <source>\ActiveField __construct()</source>
          <target state="translated">\ ActiveField __construct（）</target>
        </trans-unit>
        <trans-unit id="3a078f9aafbbebb632ed8902b370e0ad79a34495" translate="yes" xml:space="preserve">
          <source>\ActiveField __toString()</source>
          <target state="translated">\ ActiveField __toString（）</target>
        </trans-unit>
        <trans-unit id="2fdd8fc59167225b6f84a5fdc07519a186fa9c8a" translate="yes" xml:space="preserve">
          <source>\ActiveField addAriaAttributes()</source>
          <target state="translated">\ ActiveField addAriaAttributes（）</target>
        </trans-unit>
        <trans-unit id="7ba4665b6d6782140d5a7ed3f133948b905e2216" translate="yes" xml:space="preserve">
          <source>\ActiveField adjustLabelFor()</source>
          <target state="translated">\ ActiveField AdjustLabelFor（）</target>
        </trans-unit>
        <trans-unit id="fd5b3ad4ef57206b650e50016235cf429b54c2dc" translate="yes" xml:space="preserve">
          <source>\ActiveField begin()</source>
          <target state="translated">\ ActiveField begin（）</target>
        </trans-unit>
        <trans-unit id="db56721199e79ec883862cb375a0206b873386c8" translate="yes" xml:space="preserve">
          <source>\ActiveField checkbox()</source>
          <target state="translated">\ ActiveField复选框（）</target>
        </trans-unit>
        <trans-unit id="85bb7430c7d14dc98995d40d98b662b1c287e4f6" translate="yes" xml:space="preserve">
          <source>\ActiveField checkboxList()</source>
          <target state="translated">\ ActiveField checkboxList（）</target>
        </trans-unit>
        <trans-unit id="30abe349fd706efd5b629f4ac91a6daa170f0d29" translate="yes" xml:space="preserve">
          <source>\ActiveField createLayoutConfig()</source>
          <target state="translated">\ ActiveField createLayoutConfig（）</target>
        </trans-unit>
        <trans-unit id="f460a0c8f6a32bee4016c276140042eb10e9f90f" translate="yes" xml:space="preserve">
          <source>\ActiveField dropDownList()</source>
          <target state="translated">\ ActiveField dropDownList（）</target>
        </trans-unit>
        <trans-unit id="165ca151c908f4b0f5966fcc29e0690a38c58ce9" translate="yes" xml:space="preserve">
          <source>\ActiveField end()</source>
          <target state="translated">\ ActiveField end（）</target>
        </trans-unit>
        <trans-unit id="519e8ca13876699120a45f4abdeaf3b5020d026c" translate="yes" xml:space="preserve">
          <source>\ActiveField error()</source>
          <target state="translated">\ ActiveField错误（）</target>
        </trans-unit>
        <trans-unit id="b4a7166b42be1c2eca68c4aa87db0a5ace1cf9fc" translate="yes" xml:space="preserve">
          <source>\ActiveField fileInput()</source>
          <target state="translated">\ ActiveField fileInput（）</target>
        </trans-unit>
        <trans-unit id="a926121849f7b8c0e3f7d8c89fe8b06b6fa06617" translate="yes" xml:space="preserve">
          <source>\ActiveField getClientOptions()</source>
          <target state="translated">\ ActiveField getClientOptions（）</target>
        </trans-unit>
        <trans-unit id="860c62f7007d98b2cbddd40810cd8188712f6940" translate="yes" xml:space="preserve">
          <source>\ActiveField getInputId()</source>
          <target state="translated">\ ActiveField getInputId（）</target>
        </trans-unit>
        <trans-unit id="9bf2a644c1f01257ec9038040ec5047a2d286d90" translate="yes" xml:space="preserve">
          <source>\ActiveField hiddenInput()</source>
          <target state="translated">\ ActiveField hiddenInput（）</target>
        </trans-unit>
        <trans-unit id="319aa9b180717e59739caf834867bd82ad917ca0" translate="yes" xml:space="preserve">
          <source>\ActiveField hint()</source>
          <target state="translated">\ ActiveField hint（）</target>
        </trans-unit>
        <trans-unit id="51b2635e2aef84de608329e5fa45f6818d940aea" translate="yes" xml:space="preserve">
          <source>\ActiveField inline()</source>
          <target state="translated">\ ActiveField inline（）</target>
        </trans-unit>
        <trans-unit id="82e2ed27128e53a2741296e17f122410576aacab" translate="yes" xml:space="preserve">
          <source>\ActiveField input()</source>
          <target state="translated">\ ActiveField input（）</target>
        </trans-unit>
        <trans-unit id="0a136e1e9d5cafad6c4bcd87eb709b4eebd35460" translate="yes" xml:space="preserve">
          <source>\ActiveField isAjaxValidationEnabled()</source>
          <target state="translated">\ ActiveField isAjaxValidationEnabled（）</target>
        </trans-unit>
        <trans-unit id="fe00217265bc51b8968e62a92724809f065b6792" translate="yes" xml:space="preserve">
          <source>\ActiveField isClientValidationEnabled()</source>
          <target state="translated">\ ActiveField isClientValidationEnabled（）</target>
        </trans-unit>
        <trans-unit id="f8b572f6bf8205503f67f1b213a03330a4fae422" translate="yes" xml:space="preserve">
          <source>\ActiveField label()</source>
          <target state="translated">\ ActiveField标签（）</target>
        </trans-unit>
        <trans-unit id="3d5612e1a71fa46e2455d8e2ca8a487bed5fde05" translate="yes" xml:space="preserve">
          <source>\ActiveField listBox()</source>
          <target state="translated">\ ActiveField listBox（）</target>
        </trans-unit>
        <trans-unit id="7025da7ee260ab4cae37cbbaad7cec5d8ef69ecf" translate="yes" xml:space="preserve">
          <source>\ActiveField passwordInput()</source>
          <target state="translated">\ ActiveField passwordInput（）</target>
        </trans-unit>
        <trans-unit id="24ffca8b90d164fa5b4eeacc32c5e3538ea7936e" translate="yes" xml:space="preserve">
          <source>\ActiveField radio()</source>
          <target state="translated">\ ActiveField radio（）</target>
        </trans-unit>
        <trans-unit id="dd980241976d009df044cf34a52e9a546412e647" translate="yes" xml:space="preserve">
          <source>\ActiveField radioList()</source>
          <target state="translated">\ ActiveField radioList（）</target>
        </trans-unit>
        <trans-unit id="d90a8681323e2f928da3e75dd19673318df03e7b" translate="yes" xml:space="preserve">
          <source>\ActiveField render()</source>
          <target state="translated">\ ActiveField render（）</target>
        </trans-unit>
        <trans-unit id="3d0d0ffff43939b268b08946f84e17eea2e3da04" translate="yes" xml:space="preserve">
          <source>\ActiveField renderLabelParts()</source>
          <target state="translated">\ ActiveField renderLabelParts（）</target>
        </trans-unit>
        <trans-unit id="0a81d208fbf1c92777af8369a21955058c6e42bc" translate="yes" xml:space="preserve">
          <source>\ActiveField staticControl()</source>
          <target state="translated">\ ActiveField staticControl（）</target>
        </trans-unit>
        <trans-unit id="077dc7ac806913d5671e5aa82c085a1787ffd434" translate="yes" xml:space="preserve">
          <source>\ActiveField textInput()</source>
          <target state="translated">\ ActiveField textInput（）</target>
        </trans-unit>
        <trans-unit id="939a3b8c720c5b6d083b3ca8dcd5ffedc533571e" translate="yes" xml:space="preserve">
          <source>\ActiveField textarea()</source>
          <target state="translated">\ ActiveField textarea（）</target>
        </trans-unit>
        <trans-unit id="b88e3a9a25db7bcb0a2249ef3c7e589353695ba5" translate="yes" xml:space="preserve">
          <source>\ActiveField widget()</source>
          <target state="translated">\ ActiveField小部件（）</target>
        </trans-unit>
        <trans-unit id="dd7d7ead486a9809d9adff65aada4fb78fb350e3" translate="yes" xml:space="preserve">
          <source>\ActiveFixture</source>
          <target state="translated">\ActiveFixture</target>
        </trans-unit>
        <trans-unit id="f5e6eb895bec35e1b30eb47b4740edbee5aa2a11" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $collectionName</source>
          <target state="translated">\ ActiveFixture $ collectionName</target>
        </trans-unit>
        <trans-unit id="e16982e063f83376e30f3f7b8b8aa2758a9c0c17" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $dataFile</source>
          <target state="translated">\ ActiveFixture $ dataFile</target>
        </trans-unit>
        <trans-unit id="05c80bd88c8798e344549577978c44227db4c5b5" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $db</source>
          <target state="translated">\ ActiveFixture $ db</target>
        </trans-unit>
        <trans-unit id="d667f77b151aa11dd2a88e1eebd083ee50968b77" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $index</source>
          <target state="translated">\ ActiveFixture $ index</target>
        </trans-unit>
        <trans-unit id="9992c58b76e9ddba24056238cdf7db4eb1dc5348" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $indexName</source>
          <target state="translated">\ ActiveFixture $ indexName</target>
        </trans-unit>
        <trans-unit id="1347876a2e64e4c31faf40ee03a2cb0d03438990" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $indexSchema</source>
          <target state="translated">\ ActiveFixture $ indexSchema</target>
        </trans-unit>
        <trans-unit id="3e022066752d513d8efe4d2ebdbecfa240fc3fa7" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $tableName</source>
          <target state="translated">\ ActiveFixture $ tableName</target>
        </trans-unit>
        <trans-unit id="719718396f5b73d19863ab469015c95d02c89eb0" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $tableSchema</source>
          <target state="translated">\ ActiveFixture $ tableSchema</target>
        </trans-unit>
        <trans-unit id="555adeabf1aae9f8405d6e50d5bee676affc332c" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $type</source>
          <target state="translated">\ ActiveFixture $类型</target>
        </trans-unit>
        <trans-unit id="3f8ffb621bbf713ac02ef585f3ef9b459afa3d3b" translate="yes" xml:space="preserve">
          <source>\ActiveFixture getCollection()</source>
          <target state="translated">\ ActiveFixture getCollection（）</target>
        </trans-unit>
        <trans-unit id="65c2a1bcce6586a0c92c1a72af46b096d0ea6e72" translate="yes" xml:space="preserve">
          <source>\ActiveFixture getCollectionName()</source>
          <target state="translated">\ ActiveFixture getCollectionName（）</target>
        </trans-unit>
        <trans-unit id="57cfac11f4f9d3bbf1513163779e2a91b62d9bdb" translate="yes" xml:space="preserve">
          <source>\ActiveFixture getData()</source>
          <target state="translated">\ ActiveFixture getData（）</target>
        </trans-unit>
        <trans-unit id="834894822be43168840e5f1f9db5ec4dfa52b06b" translate="yes" xml:space="preserve">
          <source>\ActiveFixture getIndexSchema()</source>
          <target state="translated">\ ActiveFixture getIndexSchema（）</target>
        </trans-unit>
        <trans-unit id="864e808f4b4b594479e88613cdb347e3a0f395a6" translate="yes" xml:space="preserve">
          <source>\ActiveFixture getTableSchema()</source>
          <target state="translated">\ ActiveFixture getTableSchema（）</target>
        </trans-unit>
        <trans-unit id="f1202d5a9bb2aabf5fd21fc4853eff81e5ea8822" translate="yes" xml:space="preserve">
          <source>\ActiveFixture init()</source>
          <target state="translated">\ ActiveFixture init（）</target>
        </trans-unit>
        <trans-unit id="cf9d02277b26b7fc69df33998f3d02a650c1db2d" translate="yes" xml:space="preserve">
          <source>\ActiveFixture load()</source>
          <target state="translated">\ ActiveFixture负载（）</target>
        </trans-unit>
        <trans-unit id="d64ba901f8f17c3531d1702c9a79e16265865006" translate="yes" xml:space="preserve">
          <source>\ActiveFixture resetCollection()</source>
          <target state="translated">\ ActiveFixture resetCollection（）</target>
        </trans-unit>
        <trans-unit id="11e47ba81221122fa774a78e464b9a7104b3321f" translate="yes" xml:space="preserve">
          <source>\ActiveFixture resetIndex()</source>
          <target state="translated">\ ActiveFixture resetIndex（）</target>
        </trans-unit>
        <trans-unit id="9841cecae14b3fb3799f7bc5b35ed901851ab0f6" translate="yes" xml:space="preserve">
          <source>\ActiveFixture resetTable()</source>
          <target state="translated">\ ActiveFixture resetTable（）</target>
        </trans-unit>
        <trans-unit id="c75ab608c91299e0e90f514e3c9a782620b556ac" translate="yes" xml:space="preserve">
          <source>\ActiveFixture unload()</source>
          <target state="translated">\ ActiveFixture卸载（）</target>
        </trans-unit>
        <trans-unit id="9a2d099a386a24935bfd240065f1e2c43e62c285" translate="yes" xml:space="preserve">
          <source>\ActiveForm</source>
          <target state="translated">\ActiveForm</target>
        </trans-unit>
        <trans-unit id="a535a890f0a33ef454d25981d5498693ef230ef4" translate="yes" xml:space="preserve">
          <source>\ActiveForm $action</source>
          <target state="translated">\ ActiveForm $ action</target>
        </trans-unit>
        <trans-unit id="227880784b690bae996fdfb28d6200816e3198af" translate="yes" xml:space="preserve">
          <source>\ActiveForm $ajaxDataType</source>
          <target state="translated">\ ActiveForm $ ajaxDataType</target>
        </trans-unit>
        <trans-unit id="3c28703464bdd0f2a610bf0f260d59c74d2b08aa" translate="yes" xml:space="preserve">
          <source>\ActiveForm $ajaxParam</source>
          <target state="translated">\ ActiveForm $ ajaxParam</target>
        </trans-unit>
        <trans-unit id="03d0fdaaafbf0ae7e37eab8c251d859d97acf891" translate="yes" xml:space="preserve">
          <source>\ActiveForm $attributes</source>
          <target state="translated">\ ActiveForm $属性</target>
        </trans-unit>
        <trans-unit id="246ee251e6576db1e42f3617cc1a93ef558b621f" translate="yes" xml:space="preserve">
          <source>\ActiveForm $enableAjaxValidation</source>
          <target state="translated">\ ActiveForm $ enableAjaxValidation</target>
        </trans-unit>
        <trans-unit id="fcc93277d0bffd35a494f78a3e3756a23f3c463a" translate="yes" xml:space="preserve">
          <source>\ActiveForm $enableClientScript</source>
          <target state="translated">\ ActiveForm $ enableClientScript</target>
        </trans-unit>
        <trans-unit id="ea435678991a2ece47f4c6d8075b4533d1d7756f" translate="yes" xml:space="preserve">
          <source>\ActiveForm $enableClientValidation</source>
          <target state="translated">\ ActiveForm $ enableClientValidation</target>
        </trans-unit>
        <trans-unit id="7932250e7a03cbcdd87a1db2a8fe507215acb728" translate="yes" xml:space="preserve">
          <source>\ActiveForm $encodeErrorSummary</source>
          <target state="translated">\ ActiveForm $ encodeErrorSummary</target>
        </trans-unit>
        <trans-unit id="03901d667aabd2d4c0c1d639f736e29bc0a79fa7" translate="yes" xml:space="preserve">
          <source>\ActiveForm $errorCssClass</source>
          <target state="translated">\ ActiveForm $ errorCssClass</target>
        </trans-unit>
        <trans-unit id="0ba11718df9b3f0ab034ef9f60d9f42f94c9bb08" translate="yes" xml:space="preserve">
          <source>\ActiveForm $errorSummaryCssClass</source>
          <target state="translated">\ ActiveForm $ errorSummaryCssClass</target>
        </trans-unit>
        <trans-unit id="70d84d3405b91d47860b354b6ad43d23680860a8" translate="yes" xml:space="preserve">
          <source>\ActiveForm $fieldClass</source>
          <target state="translated">\ ActiveForm $ fieldClass</target>
        </trans-unit>
        <trans-unit id="ba1ecdcec73e845aacd42f39d1e3ac69c0f6118a" translate="yes" xml:space="preserve">
          <source>\ActiveForm $fieldConfig</source>
          <target state="translated">\ ActiveForm $ fieldConfig</target>
        </trans-unit>
        <trans-unit id="3cdfb985c18cbcf24a152428d13d9f9d053b3d1f" translate="yes" xml:space="preserve">
          <source>\ActiveForm $layout</source>
          <target state="translated">\ ActiveForm $布局</target>
        </trans-unit>
        <trans-unit id="42bc6e2d0ddd5ace056d1da51a94cb052dd7d545" translate="yes" xml:space="preserve">
          <source>\ActiveForm $method</source>
          <target state="translated">\ ActiveForm $方法</target>
        </trans-unit>
        <trans-unit id="4439f8b8ca27042150c9e29ba5100f7f52fd4522" translate="yes" xml:space="preserve">
          <source>\ActiveForm $options</source>
          <target state="translated">\ ActiveForm $选项</target>
        </trans-unit>
        <trans-unit id="c1c2e85e678f2db8e8b1d972dcb623d07f6e8856" translate="yes" xml:space="preserve">
          <source>\ActiveForm $requiredCssClass</source>
          <target state="translated">\ ActiveForm $ requiredCssClass</target>
        </trans-unit>
        <trans-unit id="ce65beeb12acd99a9982f895629b30aa8e2f2e9e" translate="yes" xml:space="preserve">
          <source>\ActiveForm $scrollToError</source>
          <target state="translated">\ ActiveForm $ scrollToError</target>
        </trans-unit>
        <trans-unit id="3c3b6adac1cdc13595916d6b7de3f64f2e61b2b5" translate="yes" xml:space="preserve">
          <source>\ActiveForm $scrollToErrorOffset</source>
          <target state="translated">\ ActiveForm $ scrollToErrorOffset</target>
        </trans-unit>
        <trans-unit id="c8e0384db8a5c1356fbaef131480a3a8deb3ff75" translate="yes" xml:space="preserve">
          <source>\ActiveForm $successCssClass</source>
          <target state="translated">\ ActiveForm $ successCssClass</target>
        </trans-unit>
        <trans-unit id="9aeb2ff99ca64439f033cb45eaf126a003b3cdc4" translate="yes" xml:space="preserve">
          <source>\ActiveForm $validateOnBlur</source>
          <target state="translated">\ ActiveForm $ validateOnBlur</target>
        </trans-unit>
        <trans-unit id="d8b1883dbe3ee6c3663e068bc7e8a17624595fbf" translate="yes" xml:space="preserve">
          <source>\ActiveForm $validateOnChange</source>
          <target state="translated">\ ActiveForm $ validateOnChange</target>
        </trans-unit>
        <trans-unit id="6f5bd8235ca4638d308fc18789e64c52875458ee" translate="yes" xml:space="preserve">
          <source>\ActiveForm $validateOnSubmit</source>
          <target state="translated">\ ActiveForm $ validateOnSubmit</target>
        </trans-unit>
        <trans-unit id="36baa0afa475514ce78997bf474204257d614858" translate="yes" xml:space="preserve">
          <source>\ActiveForm $validateOnType</source>
          <target state="translated">\ ActiveForm $ validateOnType</target>
        </trans-unit>
        <trans-unit id="aa52a7bb67391d3c8fd7c18a6db045e81cf151c6" translate="yes" xml:space="preserve">
          <source>\ActiveForm $validatingCssClass</source>
          <target state="translated">\ ActiveForm $ validatingCssClass</target>
        </trans-unit>
        <trans-unit id="b7aab4a025afc829be4a6ce08556b6039cfb409b" translate="yes" xml:space="preserve">
          <source>\ActiveForm $validationDelay</source>
          <target state="translated">\ ActiveForm $ validationDelay</target>
        </trans-unit>
        <trans-unit id="07b13f3ae09a47eab557c8aaad0f408b6e799b90" translate="yes" xml:space="preserve">
          <source>\ActiveForm $validationUrl</source>
          <target state="translated">\ ActiveForm $ validationUrl</target>
        </trans-unit>
        <trans-unit id="5db220672b71349b1b050761ef7ae773dc742889" translate="yes" xml:space="preserve">
          <source>\ActiveForm beginField()</source>
          <target state="translated">\ ActiveForm beginField（）</target>
        </trans-unit>
        <trans-unit id="f14bb6b911e1ee05006a3de48343474b89b31d69" translate="yes" xml:space="preserve">
          <source>\ActiveForm endField()</source>
          <target state="translated">\ ActiveForm endField（）</target>
        </trans-unit>
        <trans-unit id="fc16619a839cfd04ea7602817fab4d4997d3b6b5" translate="yes" xml:space="preserve">
          <source>\ActiveForm errorSummary()</source>
          <target state="translated">\ ActiveForm errorSummary（）</target>
        </trans-unit>
        <trans-unit id="a50e263307a2e299474bcd27a7f149b5b8cac542" translate="yes" xml:space="preserve">
          <source>\ActiveForm field()</source>
          <target state="translated">\ ActiveForm字段（）</target>
        </trans-unit>
        <trans-unit id="ab4a03cc2f3a284b9e8a72324ba4be7bebc116e3" translate="yes" xml:space="preserve">
          <source>\ActiveForm getClientOptions()</source>
          <target state="translated">\ ActiveForm getClientOptions（）</target>
        </trans-unit>
        <trans-unit id="64c2d7bcc62a0a21c052c1bb997c08e33ce4930c" translate="yes" xml:space="preserve">
          <source>\ActiveForm init()</source>
          <target state="translated">\ ActiveForm init（）</target>
        </trans-unit>
        <trans-unit id="5fd9cbe251a11cfa169e5e0f9114c4bf5afc6f4b" translate="yes" xml:space="preserve">
          <source>\ActiveForm registerClientScript()</source>
          <target state="translated">\ ActiveForm registerClientScript（）</target>
        </trans-unit>
        <trans-unit id="d4040dff110fd372180bef9be93d001a1032d462" translate="yes" xml:space="preserve">
          <source>\ActiveForm run()</source>
          <target state="translated">\ ActiveForm run（）</target>
        </trans-unit>
        <trans-unit id="64dc7ef054343aad3f6ceb452182d4c5216b22a7" translate="yes" xml:space="preserve">
          <source>\ActiveForm validate()</source>
          <target state="translated">\ ActiveForm validate（）</target>
        </trans-unit>
        <trans-unit id="0668caabfdeb2523767baed905babbec9980b4a5" translate="yes" xml:space="preserve">
          <source>\ActiveForm validateMultiple()</source>
          <target state="translated">\ ActiveForm validateMultiple（）</target>
        </trans-unit>
        <trans-unit id="80aa1cf747eb2ee33d39162f9b6ceae49716436f" translate="yes" xml:space="preserve">
          <source>\ActiveFormAsset</source>
          <target state="translated">\ActiveFormAsset</target>
        </trans-unit>
        <trans-unit id="bf1e235d855c27a2041a2cad7bf6d3b3b46f99fe" translate="yes" xml:space="preserve">
          <source>\ActiveFormAsset $depends</source>
          <target state="translated">\ ActiveFormAsset $ depends</target>
        </trans-unit>
        <trans-unit id="405688b03f7ce126fa14286ee191a7fda831659e" translate="yes" xml:space="preserve">
          <source>\ActiveFormAsset $js</source>
          <target state="translated">\ ActiveFormAsset $ js</target>
        </trans-unit>
        <trans-unit id="eae1f680a173d1043f882e5a1630b411137bfb43" translate="yes" xml:space="preserve">
          <source>\ActiveFormAsset $sourcePath</source>
          <target state="translated">\ ActiveFormAsset $ sourcePath</target>
        </trans-unit>
        <trans-unit id="8edc721a0d9ab38a4b9e5b2fc9d4600c652d4f2f" translate="yes" xml:space="preserve">
          <source>\ActiveQuery</source>
          <target state="translated">\ActiveQuery</target>
        </trans-unit>
        <trans-unit id="3d7872fb7f760a7daddc661198a20c2174a7ae88" translate="yes" xml:space="preserve">
          <source>\ActiveQuery $collection</source>
          <target state="translated">\ ActiveQuery $ collection</target>
        </trans-unit>
        <trans-unit id="f9875dfeb90b40f0177b887d5efae8ba8163b417" translate="yes" xml:space="preserve">
          <source>\ActiveQuery $joinWith</source>
          <target state="translated">\ ActiveQuery $ joinWith</target>
        </trans-unit>
        <trans-unit id="e0a099767455bd7e795a919cdc8bc86fb07aa00b" translate="yes" xml:space="preserve">
          <source>\ActiveQuery $on</source>
          <target state="translated">\ ActiveQuery $ on</target>
        </trans-unit>
        <trans-unit id="2f30e61b2f76fbe53c2c2130a0dd59cb4a879d3b" translate="yes" xml:space="preserve">
          <source>\ActiveQuery $sql</source>
          <target state="translated">\ ActiveQuery $ sql</target>
        </trans-unit>
        <trans-unit id="6e4281847c656ba21979df37a2075cefabe3ff38" translate="yes" xml:space="preserve">
          <source>\ActiveQuery $tablesUsedInFrom</source>
          <target state="translated">\ ActiveQuery $ tablesUsedInFrom</target>
        </trans-unit>
        <trans-unit id="2afde5b334c088b6effd287feaa49443b8cb58a9" translate="yes" xml:space="preserve">
          <source>\ActiveQuery EVENT_INIT</source>
          <target state="translated">\ ActiveQuery EVENT_INIT</target>
        </trans-unit>
        <trans-unit id="13d531b705ef2d323aa4f00a446a84d2d86eed27" translate="yes" xml:space="preserve">
          <source>\ActiveQuery __construct()</source>
          <target state="translated">\ ActiveQuery __construct（）</target>
        </trans-unit>
        <trans-unit id="4cb3c7e6f5de2e47b22bd6bf694cf445c1b64125" translate="yes" xml:space="preserve">
          <source>\ActiveQuery alias()</source>
          <target state="translated">\ ActiveQuery alias（）</target>
        </trans-unit>
        <trans-unit id="d46ae3063887d3429991d9138cde847e563fd6a1" translate="yes" xml:space="preserve">
          <source>\ActiveQuery all()</source>
          <target state="translated">\ ActiveQuery全部（）</target>
        </trans-unit>
        <trans-unit id="a2d9d87b3bf838b15459e4537395c12ebde9e8ef" translate="yes" xml:space="preserve">
          <source>\ActiveQuery andOnCondition()</source>
          <target state="translated">\ ActiveQuery和OnCondition（）</target>
        </trans-unit>
        <trans-unit id="c6ab281783fe56683553d6d26d3492eb479c1bc3" translate="yes" xml:space="preserve">
          <source>\ActiveQuery average()</source>
          <target state="translated">\ ActiveQuery average（）</target>
        </trans-unit>
        <trans-unit id="24f9af8f6054ff2a4c845c1fb6fa50f285df1b76" translate="yes" xml:space="preserve">
          <source>\ActiveQuery callSnippets()</source>
          <target state="translated">\ ActiveQuery callSnippets（）</target>
        </trans-unit>
        <trans-unit id="893138f42fac1ee895a7098cacea0389b65ecaee" translate="yes" xml:space="preserve">
          <source>\ActiveQuery column()</source>
          <target state="translated">\ ActiveQuery列（）</target>
        </trans-unit>
        <trans-unit id="7e8a366c5c92c892e2da424a4242ca9622ac8b63" translate="yes" xml:space="preserve">
          <source>\ActiveQuery count()</source>
          <target state="translated">\ ActiveQuery count（）</target>
        </trans-unit>
        <trans-unit id="b4fac57b6203842e835d6f871616fd62b1ecb423" translate="yes" xml:space="preserve">
          <source>\ActiveQuery createCommand()</source>
          <target state="translated">\ ActiveQuery createCommand（）</target>
        </trans-unit>
        <trans-unit id="98ed11985764f119bccad025d15d8e9369d1c1c5" translate="yes" xml:space="preserve">
          <source>\ActiveQuery defaultConnection()</source>
          <target state="translated">\ ActiveQuery defaultConnection（）</target>
        </trans-unit>
        <trans-unit id="78d4379a6724cc122c7951bd92aa04bf6171f418" translate="yes" xml:space="preserve">
          <source>\ActiveQuery executeScript()</source>
          <target state="translated">\ ActiveQuery executeScript（）</target>
        </trans-unit>
        <trans-unit id="e310f6fc0fbfd286d1f19a954584e25ef231940c" translate="yes" xml:space="preserve">
          <source>\ActiveQuery exists()</source>
          <target state="translated">\ ActiveQuery存在（）</target>
        </trans-unit>
        <trans-unit id="b82983da03c444c733ffefc504449920a1bd7de2" translate="yes" xml:space="preserve">
          <source>\ActiveQuery fetchSnippetSourceFromModels()</source>
          <target state="translated">\ ActiveQuery fetchSnippetSourceFromModels（）</target>
        </trans-unit>
        <trans-unit id="2c3d91f7e47344342962fcf564ecea88fcd42345" translate="yes" xml:space="preserve">
          <source>\ActiveQuery getCollection()</source>
          <target state="translated">\ ActiveQuery getCollection（）</target>
        </trans-unit>
        <trans-unit id="8a289aaf78bf49d966566f9b4daec8dd4585ed6a" translate="yes" xml:space="preserve">
          <source>\ActiveQuery getPrimaryTableName()</source>
          <target state="translated">\ ActiveQuery getPrimaryTableName（）</target>
        </trans-unit>
        <trans-unit id="0f941a35c476b55122358d582b8c4cc9e15294b2" translate="yes" xml:space="preserve">
          <source>\ActiveQuery getTablesUsedInFrom()</source>
          <target state="translated">\ ActiveQuery getTablesUsedInFrom（）</target>
        </trans-unit>
        <trans-unit id="4130b98f5515804ed8460d4effe3e4a4bbd420f8" translate="yes" xml:space="preserve">
          <source>\ActiveQuery init()</source>
          <target state="translated">\ ActiveQuery init（）</target>
        </trans-unit>
        <trans-unit id="1ec30478ddeddafd52a9562ae2d0fa900a0d9b0e" translate="yes" xml:space="preserve">
          <source>\ActiveQuery innerJoinWith()</source>
          <target state="translated">\ ActiveQuery innerJoinWith（）</target>
        </trans-unit>
        <trans-unit id="b68707267635a36b22f4fb59f02fbed311f6c040" translate="yes" xml:space="preserve">
          <source>\ActiveQuery joinWith()</source>
          <target state="translated">\ ActiveQuery joinWith（）</target>
        </trans-unit>
        <trans-unit id="a722b29b51140d3300b11c52bc03ae212d998fc8" translate="yes" xml:space="preserve">
          <source>\ActiveQuery max()</source>
          <target state="translated">\ ActiveQuery max（）</target>
        </trans-unit>
        <trans-unit id="61e05f51a5f862567495d62f1a6cf706d2025780" translate="yes" xml:space="preserve">
          <source>\ActiveQuery min()</source>
          <target state="translated">\ ActiveQuery min（）</target>
        </trans-unit>
        <trans-unit id="17ef67fbd4919c84f6ad90390ebe7b4c38980f80" translate="yes" xml:space="preserve">
          <source>\ActiveQuery modify()</source>
          <target state="translated">\ ActiveQuery Modify（）</target>
        </trans-unit>
        <trans-unit id="780ec1f1a40d9ad935640e1dfbc423088527b673" translate="yes" xml:space="preserve">
          <source>\ActiveQuery onCondition()</source>
          <target state="translated">\ ActiveQuery onCondition（）</target>
        </trans-unit>
        <trans-unit id="a66db28e8cc41f16c7ec8a6cb8cc0c2731517bd0" translate="yes" xml:space="preserve">
          <source>\ActiveQuery one()</source>
          <target state="translated">\ ActiveQuery一个（）</target>
        </trans-unit>
        <trans-unit id="4ceeaeaa57478741bd2d78828f86102226ef9415" translate="yes" xml:space="preserve">
          <source>\ActiveQuery orOnCondition()</source>
          <target state="translated">\ ActiveQuery或OnCondition（）</target>
        </trans-unit>
        <trans-unit id="d30a4bde9be774422bd6b799b3a2dd1ce7573fc3" translate="yes" xml:space="preserve">
          <source>\ActiveQuery populate()</source>
          <target state="translated">\ ActiveQuery populate（）</target>
        </trans-unit>
        <trans-unit id="f8bd80cf641f12d1c97b5c7fd7410960a343a09e" translate="yes" xml:space="preserve">
          <source>\ActiveQuery prepare()</source>
          <target state="translated">\ ActiveQuery prepare（）</target>
        </trans-unit>
        <trans-unit id="a3c776eed2cb1a7ff47bd41b57affea713c166c1" translate="yes" xml:space="preserve">
          <source>\ActiveQuery queryScalar()</source>
          <target state="translated">\ ActiveQuery queryScalar（）</target>
        </trans-unit>
        <trans-unit id="7517d42eb7594cdf888195c9fad7004735098c6c" translate="yes" xml:space="preserve">
          <source>\ActiveQuery scalar()</source>
          <target state="translated">\ ActiveQuery标量（）</target>
        </trans-unit>
        <trans-unit id="cb5298cc33207c5d7acadc7d8dc07fcfbcfa174c" translate="yes" xml:space="preserve">
          <source>\ActiveQuery search()</source>
          <target state="translated">\ ActiveQuery搜索（）</target>
        </trans-unit>
        <trans-unit id="d7cbb9d6c105386033b39044c3f830aa63bd4c0e" translate="yes" xml:space="preserve">
          <source>\ActiveQuery snippetByModel()</source>
          <target state="translated">\ ActiveQuery snippetByModel（）</target>
        </trans-unit>
        <trans-unit id="2bf17d003d0b4684e30fc1736ec3cc3acd94dc6d" translate="yes" xml:space="preserve">
          <source>\ActiveQuery sum()</source>
          <target state="translated">\ ActiveQuery sum（）</target>
        </trans-unit>
        <trans-unit id="840fb042ff76437b90c84ad03f6b614ac82ead8c" translate="yes" xml:space="preserve">
          <source>\ActiveQuery viaTable()</source>
          <target state="translated">\ ActiveQuery viaTable（）</target>
        </trans-unit>
        <trans-unit id="e1b6f2d5e5b4a5e6287956719919de477ab11920" translate="yes" xml:space="preserve">
          <source>\ActiveQueryInterface</source>
          <target state="translated">\ActiveQueryInterface</target>
        </trans-unit>
        <trans-unit id="2ca84ce630f6e06a9c54c38e48a205d45e1df957" translate="yes" xml:space="preserve">
          <source>\ActiveQueryInterface asArray()</source>
          <target state="translated">\ ActiveQueryInterface asArray（）</target>
        </trans-unit>
        <trans-unit id="ba7e33162d769f484e1ded379d03c6591d6f504c" translate="yes" xml:space="preserve">
          <source>\ActiveQueryInterface findFor()</source>
          <target state="translated">\ ActiveQueryInterface findFor（）</target>
        </trans-unit>
        <trans-unit id="29eb2a551c034f479d82fc86dc46e0a426887cd0" translate="yes" xml:space="preserve">
          <source>\ActiveQueryInterface indexBy()</source>
          <target state="translated">\ ActiveQueryInterface indexBy（）</target>
        </trans-unit>
        <trans-unit id="e9b2fa38bc1220d53bb735095e61d83efdda3e3c" translate="yes" xml:space="preserve">
          <source>\ActiveQueryInterface one()</source>
          <target state="translated">\ ActiveQueryInterface一个（）</target>
        </trans-unit>
        <trans-unit id="303a2ce02ba893101410f8be475c212d0122cb52" translate="yes" xml:space="preserve">
          <source>\ActiveQueryInterface via()</source>
          <target state="translated">\ ActiveQueryInterface via（）</target>
        </trans-unit>
        <trans-unit id="8dd333836328838758cf82dbfcfcf3d013501ee1" translate="yes" xml:space="preserve">
          <source>\ActiveQueryInterface with()</source>
          <target state="translated">\ ActiveQueryInterface with（）</target>
        </trans-unit>
        <trans-unit id="f43285759272501e87c729b2f3c623fdf837cde3" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait</source>
          <target state="translated">\ActiveQueryTrait</target>
        </trans-unit>
        <trans-unit id="7def933b25ffeef161a159285d736253cc04085c" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait $asArray</source>
          <target state="translated">\ ActiveQueryTrait $ asArray</target>
        </trans-unit>
        <trans-unit id="3ef39dd1e7d6f73aa8a4a1bb1933deb1e59900d5" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait $modelClass</source>
          <target state="translated">\ ActiveQueryTrait $ modelClass</target>
        </trans-unit>
        <trans-unit id="7971f6eca2584fd7636a3a269908beafd2541f82" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait $with</source>
          <target state="translated">\ ActiveQueryTrait $ with</target>
        </trans-unit>
        <trans-unit id="551a232665eb7624999eefd6d644d5354080ed1c" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait asArray()</source>
          <target state="translated">\ ActiveQueryTrait asArray（）</target>
        </trans-unit>
        <trans-unit id="ee2e38e5dd042580fd0932c46fc714bd14d37993" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait createModels()</source>
          <target state="translated">\ ActiveQueryTrait createModels（）</target>
        </trans-unit>
        <trans-unit id="c5512cd88eb1b244c58eeca2810b87ed028e3dda" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait findWith()</source>
          <target state="translated">\ ActiveQueryTrait findWith（）</target>
        </trans-unit>
        <trans-unit id="b51f8f6f6ddf7f7a8105643bf12b2631e4cc1ec6" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait with()</source>
          <target state="translated">\ ActiveQueryTrait with（）</target>
        </trans-unit>
        <trans-unit id="e709bee0215a9eef98c1d65622903136dadbed1c" translate="yes" xml:space="preserve">
          <source>\ActiveRecord</source>
          <target state="translated">\ActiveRecord</target>
        </trans-unit>
        <trans-unit id="78543b48ca4c163f752f3638903958b3e0729a31" translate="yes" xml:space="preserve">
          <source>\ActiveRecord $explanation</source>
          <target state="translated">\ ActiveRecord $说明</target>
        </trans-unit>
        <trans-unit id="1dfaf3691730ad1219e3a9386512817527ada815" translate="yes" xml:space="preserve">
          <source>\ActiveRecord $highlight</source>
          <target state="translated">\ ActiveRecord $ highlight</target>
        </trans-unit>
        <trans-unit id="5490b1758d8823cd98b108a904c1ebdab0f8a6a4" translate="yes" xml:space="preserve">
          <source>\ActiveRecord $oldPrimaryKey</source>
          <target state="translated">\ ActiveRecord $ oldPrimaryKey</target>
        </trans-unit>
        <trans-unit id="32e2e2fe986e6de448bdaaad998e951e842820c1" translate="yes" xml:space="preserve">
          <source>\ActiveRecord $primaryKey</source>
          <target state="translated">\ ActiveRecord $ primaryKey</target>
        </trans-unit>
        <trans-unit id="5032bdb9a7975bf1bdee19e3aa367c164635fbe0" translate="yes" xml:space="preserve">
          <source>\ActiveRecord $score</source>
          <target state="translated">\ ActiveRecord $得分</target>
        </trans-unit>
        <trans-unit id="a7a13357ce0d681453a050ce15cb7876d19ff350" translate="yes" xml:space="preserve">
          <source>\ActiveRecord $snippet</source>
          <target state="translated">\ ActiveRecord $ snippet</target>
        </trans-unit>
        <trans-unit id="fd987ebe4a3d6d1432382069ac69a4768f785497" translate="yes" xml:space="preserve">
          <source>\ActiveRecord $snippetSource</source>
          <target state="translated">\ ActiveRecord $ snippetSource</target>
        </trans-unit>
        <trans-unit id="da9941a28a9a1cc6f395def36e5baaedf7ada37d" translate="yes" xml:space="preserve">
          <source>\ActiveRecord arrayAttributes()</source>
          <target state="translated">\ ActiveRecord arrayAttributes（）</target>
        </trans-unit>
        <trans-unit id="038b386f153c28bdbcaf249e5081852c0179d2bd" translate="yes" xml:space="preserve">
          <source>\ActiveRecord attributes()</source>
          <target state="translated">\ ActiveRecord属性（）</target>
        </trans-unit>
        <trans-unit id="bc5782b013b81e7e48902e817c65bb936e3c2473" translate="yes" xml:space="preserve">
          <source>\ActiveRecord buildKey()</source>
          <target state="translated">\ ActiveRecord buildKey（）</target>
        </trans-unit>
        <trans-unit id="88d158573b19b717c69d92bd2757c061627ff026" translate="yes" xml:space="preserve">
          <source>\ActiveRecord callKeywords()</source>
          <target state="translated">\ ActiveRecord callKeywords（）</target>
        </trans-unit>
        <trans-unit id="8e202a3867b7a1815a57d6ddc5ab436e9e0d2a12" translate="yes" xml:space="preserve">
          <source>\ActiveRecord callSnippets()</source>
          <target state="translated">\ ActiveRecord callSnippets（）</target>
        </trans-unit>
        <trans-unit id="c59afd16fd17e9ff11e891f47b9d26f7c4558eed" translate="yes" xml:space="preserve">
          <source>\ActiveRecord collectionName()</source>
          <target state="translated">\ ActiveRecord collectionName（）</target>
        </trans-unit>
        <trans-unit id="252f56be99e6756b5ba27e36176ca7c3ca20254c" translate="yes" xml:space="preserve">
          <source>\ActiveRecord delete()</source>
          <target state="translated">\ ActiveRecord delete（）</target>
        </trans-unit>
        <trans-unit id="c4c5bd851b6595a7a2972c2556a6f2fc0d7ee670" translate="yes" xml:space="preserve">
          <source>\ActiveRecord deleteAll()</source>
          <target state="translated">\ ActiveRecord deleteAll（）</target>
        </trans-unit>
        <trans-unit id="6d6967a0c9660fbd33cf9f428f69f26cf943078b" translate="yes" xml:space="preserve">
          <source>\ActiveRecord deleteInternal()</source>
          <target state="translated">\ ActiveRecord deleteInternal（）</target>
        </trans-unit>
        <trans-unit id="35de0f309a1ffe031296ff3fb119b1a0e8edcf61" translate="yes" xml:space="preserve">
          <source>\ActiveRecord equals()</source>
          <target state="translated">\ ActiveRecord等于（）</target>
        </trans-unit>
        <trans-unit id="3d91e2447b6ae242f97ffc4ff51a09cc6bf5dc88" translate="yes" xml:space="preserve">
          <source>\ActiveRecord fetchSnippet()</source>
          <target state="translated">\ ActiveRecord fetchSnippet（）</target>
        </trans-unit>
        <trans-unit id="fd62b6edcbbfa2e881b341082dbb1d52c85b4ed7" translate="yes" xml:space="preserve">
          <source>\ActiveRecord find()</source>
          <target state="translated">\ ActiveRecord find（）</target>
        </trans-unit>
        <trans-unit id="ebefc730e9aa4abfe371b7cea753de40607afa41" translate="yes" xml:space="preserve">
          <source>\ActiveRecord findAll()</source>
          <target state="translated">\ ActiveRecord findAll（）</target>
        </trans-unit>
        <trans-unit id="72a496fb839b7b38e41323fa638b24b92dd30750" translate="yes" xml:space="preserve">
          <source>\ActiveRecord findByCondition()</source>
          <target state="translated">\ ActiveRecord findByCondition（）</target>
        </trans-unit>
        <trans-unit id="ab71a0cf07a4af4104fdb7f6ea00fef6e6f1774f" translate="yes" xml:space="preserve">
          <source>\ActiveRecord findBySql()</source>
          <target state="translated">\ ActiveRecord findBySql（）</target>
        </trans-unit>
        <trans-unit id="c7d7fd5853767ca5a3c912b3f1c40371b09727aa" translate="yes" xml:space="preserve">
          <source>\ActiveRecord findOne()</source>
          <target state="translated">\ ActiveRecord findOne（）</target>
        </trans-unit>
        <trans-unit id="bebf15f0569b1ee8bd38cc310f4c84842c88521f" translate="yes" xml:space="preserve">
          <source>\ActiveRecord get()</source>
          <target state="translated">\ ActiveRecord get（）</target>
        </trans-unit>
        <trans-unit id="e862dc8537887b4ea4ce1f16d7aa851a3331d7bd" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getCollection()</source>
          <target state="translated">\ ActiveRecord getCollection（）</target>
        </trans-unit>
        <trans-unit id="1efe5ac5c80248e844497612b315300a8931d74c" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getDb()</source>
          <target state="translated">\ ActiveRecord getDb（）</target>
        </trans-unit>
        <trans-unit id="48519eb50c48f9365f88eab38165ce76f91727ef" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getExplanation()</source>
          <target state="translated">\ ActiveRecord getExplanation（）</target>
        </trans-unit>
        <trans-unit id="19b2169c004e871a48138ad8bbd7a5abfee73ae9" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getHighlight()</source>
          <target state="translated">\ ActiveRecord getHighlight（）</target>
        </trans-unit>
        <trans-unit id="e465834c5c26feb2d872cdbce01cc8105d306bf8" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getIndexSchema()</source>
          <target state="translated">\ ActiveRecord getIndexSchema（）</target>
        </trans-unit>
        <trans-unit id="885432607f507d5dc3623c3c357166686aefcbec" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getOldPrimaryKey()</source>
          <target state="translated">\ ActiveRecord getOldPrimaryKey（）</target>
        </trans-unit>
        <trans-unit id="265287d218160f2fe8faf493bb3cb1615db58fb6" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getPrimaryKey()</source>
          <target state="translated">\ ActiveRecord getPrimaryKey（）</target>
        </trans-unit>
        <trans-unit id="08b033e5cf3fc35a02204d3a35168a14e7a5414c" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getScore()</source>
          <target state="translated">\ ActiveRecord getScore（）</target>
        </trans-unit>
        <trans-unit id="d3945670fa9961037a2c507a61295afeb8c075a8" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getSnippet()</source>
          <target state="translated">\ ActiveRecord getSnippet（）</target>
        </trans-unit>
        <trans-unit id="3d7997f1b28863aff8e7062dec606b2fde24f889" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getSnippetSource()</source>
          <target state="translated">\ ActiveRecord getSnippetSource（）</target>
        </trans-unit>
        <trans-unit id="d0a22108dc8f2159d88a56aaee75295b15fe17a5" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getTableSchema()</source>
          <target state="translated">\ ActiveRecord getTableSchema（）</target>
        </trans-unit>
        <trans-unit id="0f781cc215052c0113e49c1c608f949123a16041" translate="yes" xml:space="preserve">
          <source>\ActiveRecord index()</source>
          <target state="translated">\ ActiveRecord index（）</target>
        </trans-unit>
        <trans-unit id="3ce65d0fd997a1b13a31d0467f060182c56d72a8" translate="yes" xml:space="preserve">
          <source>\ActiveRecord indexName()</source>
          <target state="translated">\ ActiveRecord indexName（）</target>
        </trans-unit>
        <trans-unit id="dd908a103e30b8c68e4096ce267b7b0ee298e1e4" translate="yes" xml:space="preserve">
          <source>\ActiveRecord insert()</source>
          <target state="translated">\ ActiveRecord insert（）</target>
        </trans-unit>
        <trans-unit id="27bd1eb8728fd6cc9ac03467643f83ce45f06f55" translate="yes" xml:space="preserve">
          <source>\ActiveRecord insertInternal()</source>
          <target state="translated">\ ActiveRecord insertInternal（）</target>
        </trans-unit>
        <trans-unit id="238d68b57498b5fb7812d61c69e2fb3c95350abe" translate="yes" xml:space="preserve">
          <source>\ActiveRecord instantiate()</source>
          <target state="translated">\ ActiveRecord实例化（）</target>
        </trans-unit>
        <trans-unit id="71a4d756840628b6013dc94a65fa90625f76e064" translate="yes" xml:space="preserve">
          <source>\ActiveRecord isTransactional()</source>
          <target state="translated">\ ActiveRecord isTransactional（）</target>
        </trans-unit>
        <trans-unit id="7b8ab42d36ca7d68659b08522006deb3599a8f5e" translate="yes" xml:space="preserve">
          <source>\ActiveRecord keyPrefix()</source>
          <target state="translated">\ ActiveRecord keyPrefix（）</target>
        </trans-unit>
        <trans-unit id="a31448a6aa3c2b29c37d3c12983a236767a4ef28" translate="yes" xml:space="preserve">
          <source>\ActiveRecord loadDefaultValues()</source>
          <target state="translated">\ ActiveRecord loadDefaultValues（）</target>
        </trans-unit>
        <trans-unit id="08fbcdaa4a311630e55b3f2307a4d56de8b2a9f5" translate="yes" xml:space="preserve">
          <source>\ActiveRecord mget()</source>
          <target state="translated">\ ActiveRecord mget（）</target>
        </trans-unit>
        <trans-unit id="41437fc47d4e7e760da677c51ec82cc51ddf8c0d" translate="yes" xml:space="preserve">
          <source>\ActiveRecord optimisticLock()</source>
          <target state="translated">\ ActiveRecord optimisticLock（）</target>
        </trans-unit>
        <trans-unit id="2d3db41849b69f4dd503b07f2e20db9375f52ca3" translate="yes" xml:space="preserve">
          <source>\ActiveRecord populateRecord()</source>
          <target state="translated">\ ActiveRecord populateRecord（）</target>
        </trans-unit>
        <trans-unit id="b1ab79fdaa6fa3ce5cb545059c38c61392216fd8" translate="yes" xml:space="preserve">
          <source>\ActiveRecord primaryKey()</source>
          <target state="translated">\ ActiveRecord primaryKey（）</target>
        </trans-unit>
        <trans-unit id="42ba5ceaae177a15c15940a7428e3ba5a0e7ab5f" translate="yes" xml:space="preserve">
          <source>\ActiveRecord primaryKeysByCondition()</source>
          <target state="translated">\ ActiveRecord primaryKeysByCondition（）</target>
        </trans-unit>
        <trans-unit id="0c7170030fa3de7cdfceef3f5a7452410207c368" translate="yes" xml:space="preserve">
          <source>\ActiveRecord setPrimaryKey()</source>
          <target state="translated">\ ActiveRecord setPrimaryKey（）</target>
        </trans-unit>
        <trans-unit id="fbff2898c943687cd09074ae95777a8afeb85970" translate="yes" xml:space="preserve">
          <source>\ActiveRecord setSnippet()</source>
          <target state="translated">\ ActiveRecord setSnippet（）</target>
        </trans-unit>
        <trans-unit id="a29ada4a39677cd5380f4a2ce5556edebae8b539" translate="yes" xml:space="preserve">
          <source>\ActiveRecord tableName()</source>
          <target state="translated">\ ActiveRecord tableName（）</target>
        </trans-unit>
        <trans-unit id="f79adc895520603efc96ad1a96af49ba1573c21b" translate="yes" xml:space="preserve">
          <source>\ActiveRecord toArray()</source>
          <target state="translated">\ ActiveRecord toArray（）</target>
        </trans-unit>
        <trans-unit id="b0baa51e984c8e0aeacfda1d3623430ab9050ffe" translate="yes" xml:space="preserve">
          <source>\ActiveRecord transactions()</source>
          <target state="translated">\ ActiveRecord事务（）</target>
        </trans-unit>
        <trans-unit id="614a9d1251d0db8d2d3abf7e80459b80ab32157d" translate="yes" xml:space="preserve">
          <source>\ActiveRecord type()</source>
          <target state="translated">\ ActiveRecord类型（）</target>
        </trans-unit>
        <trans-unit id="d5cae26838ba94849e9f77b120f3b55521083e55" translate="yes" xml:space="preserve">
          <source>\ActiveRecord unlinkAll()</source>
          <target state="translated">\ ActiveRecord unlinkAll（）</target>
        </trans-unit>
        <trans-unit id="afc7a640ee57a7dca78b532036f1f6a0d942700e" translate="yes" xml:space="preserve">
          <source>\ActiveRecord update()</source>
          <target state="translated">\ ActiveRecord update（）</target>
        </trans-unit>
        <trans-unit id="c978be1b0b119e1c6e3bf2f5c83182dc9614eda2" translate="yes" xml:space="preserve">
          <source>\ActiveRecord updateAll()</source>
          <target state="translated">\ ActiveRecord updateAll（）</target>
        </trans-unit>
        <trans-unit id="d3f1c020d37cde417592e3cd4f35a944c6df677f" translate="yes" xml:space="preserve">
          <source>\ActiveRecord updateAllCounters()</source>
          <target state="translated">\ ActiveRecord updateAllCounters（）</target>
        </trans-unit>
        <trans-unit id="69079575176621231312e60d5bbd7bada99f3e33" translate="yes" xml:space="preserve">
          <source>\ActiveRecord updateInternal()</source>
          <target state="translated">\ ActiveRecord updateInternal（）</target>
        </trans-unit>
        <trans-unit id="eca51b3097c11e2c62e9ee15fbd4d46c08b4bbcb" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface</source>
          <target state="translated">\ActiveRecordInterface</target>
        </trans-unit>
        <trans-unit id="ff352bd367202eabc65abf5620b076d09b255de7" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface attributes()</source>
          <target state="translated">\ ActiveRecordInterface属性（）</target>
        </trans-unit>
        <trans-unit id="720df21a18e16e6c135e5e2f31ecf819195c8d35" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface delete()</source>
          <target state="translated">\ ActiveRecordInterface delete（）</target>
        </trans-unit>
        <trans-unit id="7df605179ed323cfa9d3cc01b842d31aeb6f1969" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface deleteAll()</source>
          <target state="translated">\ ActiveRecordInterface deleteAll（）</target>
        </trans-unit>
        <trans-unit id="e13456027b814107ec320084700de03598d42abc" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface equals()</source>
          <target state="translated">\ ActiveRecordInterface等于（）</target>
        </trans-unit>
        <trans-unit id="79916814fa47a72ec94926c8825d15cb69105431" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface find()</source>
          <target state="translated">\ ActiveRecordInterface find（）</target>
        </trans-unit>
        <trans-unit id="19e2990cf8d11958131629b3759dddbcf037d5c1" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface findAll()</source>
          <target state="translated">\ ActiveRecordInterface findAll（）</target>
        </trans-unit>
        <trans-unit id="66478aedd442ffba0ae3ba320a265324f4355be2" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface findOne()</source>
          <target state="translated">\ ActiveRecordInterface findOne（）</target>
        </trans-unit>
        <trans-unit id="0e4e981982998488362ca3a9fc756d33e790e662" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface getAttribute()</source>
          <target state="translated">\ ActiveRecordInterface getAttribute（）</target>
        </trans-unit>
        <trans-unit id="2990d48d0b30ab75e3608dce5b7cefdc9007ec93" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface getDb()</source>
          <target state="translated">\ ActiveRecordInterface getDb（）</target>
        </trans-unit>
        <trans-unit id="d8d972e68e87df05b64ecaf11e51035be16fd073" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface getIsNewRecord()</source>
          <target state="translated">\ ActiveRecordInterface getIsNewRecord（）</target>
        </trans-unit>
        <trans-unit id="f90436a83ca11709cf0906b5b80d4624721333e7" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface getOldPrimaryKey()</source>
          <target state="translated">\ ActiveRecordInterface getOldPrimaryKey（）</target>
        </trans-unit>
        <trans-unit id="9827e98996fce645ffd273220a5092a9f5005e6b" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface getPrimaryKey()</source>
          <target state="translated">\ ActiveRecordInterface getPrimaryKey（）</target>
        </trans-unit>
        <trans-unit id="4036739cdcc2c3891e6996dab20f8eed2d972f96" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface getRelation()</source>
          <target state="translated">\ ActiveRecordInterface getRelation（）</target>
        </trans-unit>
        <trans-unit id="d89042ac9e830a74013eb6f8ea0085486b79fb35" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface hasAttribute()</source>
          <target state="translated">\ ActiveRecordInterface hasAttribute（）</target>
        </trans-unit>
        <trans-unit id="fbd6fb33cc0e9cc44ff5b773335c047df3a4200e" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface insert()</source>
          <target state="translated">\ ActiveRecordInterface insert（）</target>
        </trans-unit>
        <trans-unit id="fb5148cc266970a4139bbd821065dc731d3b57f2" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface isPrimaryKey()</source>
          <target state="translated">\ ActiveRecordInterface isPrimaryKey（）</target>
        </trans-unit>
        <trans-unit id="a781526cbad7ef6bc2543fb157dafe81c29f9ec2" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface link()</source>
          <target state="translated">\ ActiveRecordInterface链接（）</target>
        </trans-unit>
        <trans-unit id="768d5f148ec133222610a95a24d8f9e175f1e1cc" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface populateRelation()</source>
          <target state="translated">\ ActiveRecordInterface populateRelation（）</target>
        </trans-unit>
        <trans-unit id="dd26eac2fc67f9face90d7c38fdaee67ad322acb" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface primaryKey()</source>
          <target state="translated">\ ActiveRecordInterface primaryKey（）</target>
        </trans-unit>
        <trans-unit id="cdf4110be164abecce92ae0045686307190de145" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface save()</source>
          <target state="translated">\ ActiveRecordInterface save（）</target>
        </trans-unit>
        <trans-unit id="f2f8ab987c92f0d2b2c29b504e140ea73a61f6d8" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface setAttribute()</source>
          <target state="translated">\ ActiveRecordInterface setAttribute（）</target>
        </trans-unit>
        <trans-unit id="045665fa5d86c6cfee924321bf7f555fb981742d" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface unlink()</source>
          <target state="translated">\ ActiveRecordInterface unlink（）</target>
        </trans-unit>
        <trans-unit id="2beb3fd187a2328a99304bc1c9ac05e39669e6ca" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface update()</source>
          <target state="translated">\ ActiveRecordInterface更新（）</target>
        </trans-unit>
        <trans-unit id="3dec7e60f266a2e62c5313ff8f3e92cf08deb010" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface updateAll()</source>
          <target state="translated">\ ActiveRecordInterface updateAll（）</target>
        </trans-unit>
        <trans-unit id="6bfb127896a41a488d46d22d9193635cb4acb3bb" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait</source>
          <target state="translated">\ActiveRelationTrait</target>
        </trans-unit>
        <trans-unit id="73a4fc3b602ddd52b549a2de5b348de48b4e50f7" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait $inverseOf</source>
          <target state="translated">\ ActiveRelationTrait $ inverseOf</target>
        </trans-unit>
        <trans-unit id="feca4c9f24ae9f4f8ce0295692c591167c392985" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait $link</source>
          <target state="translated">\ ActiveRelationTrait $链接</target>
        </trans-unit>
        <trans-unit id="83ee72f8e2d11df64aacd74a8e721a5409ab02e0" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait $multiple</source>
          <target state="translated">\ ActiveRelationTrait $ multiple</target>
        </trans-unit>
        <trans-unit id="f3862c79e0e7aed43d72972cc1f5ae657e41f5ae" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait $primaryModel</source>
          <target state="translated">\ ActiveRelationTrait $ primaryModel</target>
        </trans-unit>
        <trans-unit id="cc846139b31d26804ad036514250df882dfbbfdb" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait $via</source>
          <target state="translated">\ ActiveRelationTrait $ via</target>
        </trans-unit>
        <trans-unit id="afb4c44009ae9e37a40eddc0346bf623988cc49b" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait __clone()</source>
          <target state="translated">\ ActiveRelationTrait __clone（）</target>
        </trans-unit>
        <trans-unit id="72f71600a4b96342dce3fdcdcab9fab53cdcd0a0" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait findFor()</source>
          <target state="translated">\ ActiveRelationTrait findFor（）</target>
        </trans-unit>
        <trans-unit id="7d9a053f4a0beda19daaff9e97a843623538f131" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait inverseOf()</source>
          <target state="translated">\ ActiveRelationTrait inverseOf（）</target>
        </trans-unit>
        <trans-unit id="c68c7406c7bfd157770f24d7cdf6b512ef7f5b6c" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait populateRelation()</source>
          <target state="translated">\ ActiveRelationTrait populateRelation（）</target>
        </trans-unit>
        <trans-unit id="196e07a651b255f92981398697ecedddfd3e5b0b" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait via()</source>
          <target state="translated">\ ActiveRelationTrait通过（）</target>
        </trans-unit>
        <trans-unit id="d4257f8e52daf9f039382d7a727f2b6c7dde12ea" translate="yes" xml:space="preserve">
          <source>\AfterSaveEvent</source>
          <target state="translated">\AfterSaveEvent</target>
        </trans-unit>
        <trans-unit id="606223a16970d6b5d706a4eccc01c6fe1814bbb9" translate="yes" xml:space="preserve">
          <source>\AfterSaveEvent $changedAttributes</source>
          <target state="translated">\ AfterSaveEvent $ changedAttributes</target>
        </trans-unit>
        <trans-unit id="b8783f4623a6f06122d3f74d245bc1047608e74a" translate="yes" xml:space="preserve">
          <source>\Alert</source>
          <target state="translated">\Alert</target>
        </trans-unit>
        <trans-unit id="521230d1ac463b695161858c4581e94fabf27903" translate="yes" xml:space="preserve">
          <source>\Alert $body</source>
          <target state="translated">\警报$ body</target>
        </trans-unit>
        <trans-unit id="c2a904c262289e38284fe37e50f847bfde6817b4" translate="yes" xml:space="preserve">
          <source>\Alert $closeButton</source>
          <target state="translated">\ Alert $ closeButton</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
