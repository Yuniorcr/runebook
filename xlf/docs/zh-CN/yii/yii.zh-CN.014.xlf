<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="yii">
    <body>
      <group id="yii">
        <trans-unit id="96aae2cd1372928a438a4ac51b9b8380b87de8ed" translate="yes" xml:space="preserve">
          <source>How to sort the query results. This is used to construct the ORDER BY clause in a SQL statement. The array keys are the columns to be sorted by, and the array values are the corresponding sort directions which can be either &lt;a href=&quot;http://php.net/manual/en/array.constants.php#constant.sort-asc&quot;&gt;SORT_ASC&lt;/a&gt; or &lt;a href=&quot;http://php.net/manual/en/array.constants.php#constant.sort-desc&quot;&gt;SORT_DESC&lt;/a&gt;. The array may also contain &lt;a href=&quot;yii-db-expression&quot;&gt;yii\db\Expression&lt;/a&gt; objects. If that is the case, the expressions will be converted into strings without any change.</source>
          <target state="translated">如何对查询结果进行排序。这用于在SQL语句中构造ORDER BY子句。数组键是要排序的列，数组值是对应的排序方向，可以是&lt;a href=&quot;http://php.net/manual/en/array.constants.php#constant.sort-asc&quot;&gt;SORT_ASC&lt;/a&gt;或&lt;a href=&quot;http://php.net/manual/en/array.constants.php#constant.sort-desc&quot;&gt;SORT_DESC&lt;/a&gt;。该数组还可以包含&lt;a href=&quot;yii-db-expression&quot;&gt;yii \ db \ Expression&lt;/a&gt;对象。在这种情况下，表达式将被转换为字符串，而无需进行任何更改。</target>
        </trans-unit>
        <trans-unit id="cc374563a7a9f9e6fa95da33b772215bb3fb92af" translate="yes" xml:space="preserve">
          <source>How to sort the query results. This is used to construct the ORDER BY clause in a SQL statement. The array keys are the columns to be sorted by, and the array values are the corresponding sort directions which can be either &lt;a href=&quot;https://php.net/manual/en/array.constants.php#constant.sort-asc&quot;&gt;SORT_ASC&lt;/a&gt; or &lt;a href=&quot;https://php.net/manual/en/array.constants.php#constant.sort-desc&quot;&gt;SORT_DESC&lt;/a&gt;. The array may also contain &lt;a href=&quot;yii-db-expression&quot;&gt;yii\db\Expression&lt;/a&gt; objects. If that is the case, the expressions will be converted into strings without any change.</source>
          <target state="translated">如何对查询结果进行排序。这用于在SQL语句中构造ORDER BY子句。数组键是要排序的列，数组值是对应的排序方向，可以是&lt;a href=&quot;https://php.net/manual/en/array.constants.php#constant.sort-asc&quot;&gt;SORT_ASC&lt;/a&gt;或&lt;a href=&quot;https://php.net/manual/en/array.constants.php#constant.sort-desc&quot;&gt;SORT_DESC&lt;/a&gt;。该数组还可以包含&lt;a href=&quot;yii-db-expression&quot;&gt;yii \ db \ Expression&lt;/a&gt;对象。在这种情况下，表达式将被转换为字符串，而无需进行任何更改。</target>
        </trans-unit>
        <trans-unit id="a216304f0ace742ba3a6ee8f5155125fc31f643d" translate="yes" xml:space="preserve">
          <source>However some cases can make using of closure useful. For example when &lt;code&gt;visible&lt;/code&gt; is specified and you want to prevent &lt;code&gt;value&lt;/code&gt; calculations in case it evaluates to &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">但是，在某些情况下可以使用闭包有用。例如，当指定 &lt;code&gt;visible&lt;/code&gt; 时，并且您希望在计算结果为 &lt;code&gt;false&lt;/code&gt; 时避免进行 &lt;code&gt;value&lt;/code&gt; 计算：</target>
        </trans-unit>
        <trans-unit id="2baba02c8c0c7fe7ce349257c9a45e3e765cf42c" translate="yes" xml:space="preserve">
          <source>However, a better approach is to exploit the existing relation declarations by calling &lt;a href=&quot;yii-db-activequery#joinWith()-detail&quot;&gt;yii\db\ActiveQuery::joinWith()&lt;/a&gt;:</source>
          <target state="translated">但是，更好的方法是通过调用&lt;a href=&quot;yii-db-activequery#joinWith()-detail&quot;&gt;yii \ db \ ActiveQuery :: joinWith（）&lt;/a&gt;来利用现有的关系声明：</target>
        </trans-unit>
        <trans-unit id="9485c75809121fb6060236c454de23ca79518828" translate="yes" xml:space="preserve">
          <source>However, because the namespace of the global events is shared by all parties, you should name the global events wisely, such as introducing some sort of namespace (e.g. &quot;frontend.mail.sent&quot;, &quot;backend.mail.sent&quot;).</source>
          <target state="translated">但是,由于全局事件的命名空间是各方共享的,所以应该合理地命名全局事件,比如引入某种命名空间(如 &quot;前端.mail.sent&quot;、&quot;后端.mail.sent&quot;)。</target>
        </trans-unit>
        <trans-unit id="1d4c209fc808066d571080e96011153b3e2085e3" translate="yes" xml:space="preserve">
          <source>However, if the alias to be translated is '@foo/barbar/config', then '@foo' will be replaced instead of '@foo/bar', because '/' serves as the boundary character.</source>
          <target state="translated">但是,如果要翻译的别名是'@foo/barbar/config',那么'@foo'将被替换为'@foo/bar',因为'/'是边界字符。</target>
        </trans-unit>
        <trans-unit id="afc049a09118c3744bae17dff7a3d43ab2a20920" translate="yes" xml:space="preserve">
          <source>However, in most cases you do not need to explicitly set the status code. This is because the default value of &lt;a href=&quot;yii-web-response#%24statusCode-detail&quot;&gt;yii\web\Response::$statusCode&lt;/a&gt; is 200. And if you want to indicate the request is unsuccessful, you may throw an appropriate HTTP exception like the following:</source>
          <target state="translated">但是，在大多数情况下，您无需显式设置状态代码。这是因为&lt;a href=&quot;yii-web-response#%24statusCode-detail&quot;&gt;yii \ web \ Response :: $ statusCode&lt;/a&gt;的默认值为200。而且，如果您想指示请求不成功，则可能会抛出如下所示的适当的HTTP异常：</target>
        </trans-unit>
        <trans-unit id="43d024ebbf534badd0aa70bb56000a29e1e9c1ba" translate="yes" xml:space="preserve">
          <source>However, there are special requirements for hosting environments in order to use symbolic links. In particular, symbolic links are supported only on Linux/Unix, and Windows Vista/2008 or greater.</source>
          <target state="translated">然而,为了使用符号链接,对主机环境有特殊要求。特别是,只有在Linux/Unix和Windows Vista/2008或更高版本上才支持符号链接。</target>
        </trans-unit>
        <trans-unit id="4d1361d99b51a4ce5be6d8baa39643cf54085e3a" translate="yes" xml:space="preserve">
          <source>Html helper</source>
          <target state="translated">Html助手</target>
        </trans-unit>
        <trans-unit id="9a82f1a21492011fb7ca40312f09aab07dd460fc" translate="yes" xml:space="preserve">
          <source>Html options to be applied to the &lt;a href=&quot;yii-grid-actioncolumn#initDefaultButton()-detail&quot;&gt;default button&lt;/a&gt;.</source>
          <target state="translated">HTML选项将应用于&lt;a href=&quot;yii-grid-actioncolumn#initDefaultButton()-detail&quot;&gt;默认按钮&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="19660eb95d2e75493b880c64bf2c14cdcfa86407" translate="yes" xml:space="preserve">
          <source>Html provides a set of static methods for generating commonly used HTML tags.</source>
          <target state="translated">Html提供了一组生成常用HTML标签的静态方法。</target>
        </trans-unit>
        <trans-unit id="330b27105ab820b72f608c86b1310b0a20e2d7ab" translate="yes" xml:space="preserve">
          <source>HtmlPurifier provides an ability to clean up HTML from any harmful code.</source>
          <target state="translated">HtmlPurifier提供了一种清理HTML中任何有害代码的能力。</target>
        </trans-unit>
        <trans-unit id="ad05e2b3f187381656047ac6982749ce9c34cd93" translate="yes" xml:space="preserve">
          <source>HtmlResponseFormatter formats the given data into an HTML response content.</source>
          <target state="translated">HtmlResponseFormatter将给定数据格式化为HTML响应内容。</target>
        </trans-unit>
        <trans-unit id="24d5c09b807c008b1e820ff32ade540542e3136c" translate="yes" xml:space="preserve">
          <source>HttpBasicAuth is an action filter that supports the HTTP Basic authentication method.</source>
          <target state="translated">HttpBasicAuth是一个支持HTTP Basic认证方法的动作过滤器。</target>
        </trans-unit>
        <trans-unit id="c1d05380097f41721f4aa72eca22127fce131209" translate="yes" xml:space="preserve">
          <source>HttpBearerAuth is an action filter that supports the authentication method based on HTTP Bearer token.</source>
          <target state="translated">HttpBearerAuth是一个支持基于HTTP Bearer token的认证方式的动作过滤器。</target>
        </trans-unit>
        <trans-unit id="c367573a91a83e03b5c2d73ab1bb9951bf37df87" translate="yes" xml:space="preserve">
          <source>HttpCache</source>
          <target state="translated">HttpCache</target>
        </trans-unit>
        <trans-unit id="a8782f49f0270f369434c2a57c224fd3b95333b1" translate="yes" xml:space="preserve">
          <source>HttpCache implements client-side caching by utilizing the &lt;code&gt;Last-Modified&lt;/code&gt; and &lt;code&gt;ETag&lt;/code&gt; HTTP headers.</source>
          <target state="translated">HttpCache通过使用 &lt;code&gt;Last-Modified&lt;/code&gt; 和 &lt;code&gt;ETag&lt;/code&gt; HTTP标头实现客户端缓存。</target>
        </trans-unit>
        <trans-unit id="64b73c49c36b32bc8e8088c64b35454f4639d780" translate="yes" xml:space="preserve">
          <source>HttpCache implements client-side caching by utilizing the &lt;code&gt;Last-Modified&lt;/code&gt; and &lt;code&gt;Etag&lt;/code&gt; HTTP headers. For example,</source>
          <target state="translated">HttpCache通过使用 &lt;code&gt;Last-Modified&lt;/code&gt; 和 &lt;code&gt;Etag&lt;/code&gt; HTTP标头实现客户端缓存。例如，</target>
        </trans-unit>
        <trans-unit id="cc02f156e7cd7fd5ad4996cd2e10641f0c6d7256" translate="yes" xml:space="preserve">
          <source>HttpException can be differentiated via its &lt;a href=&quot;yii-web-httpexception#%24statusCode-detail&quot;&gt;$statusCode&lt;/a&gt; property value which keeps a standard HTTP status code (e.g. 404, 500). Error handlers may use this status code to decide how to format the error page.</source>
          <target state="translated">HttpException可以通过其&lt;a href=&quot;yii-web-httpexception#%24statusCode-detail&quot;&gt;$ statusCode&lt;/a&gt;属性值来区分，该属性值保留标准的HTTP状态代码（例如404、500）。错误处理程序可以使用此状态代码来决定如何格式化错误页面。</target>
        </trans-unit>
        <trans-unit id="e4a52b6f47e8c044ec8f98ab8bf60607b9ef0760" translate="yes" xml:space="preserve">
          <source>HttpException represents an exception caused by an improper request of the end-user.</source>
          <target state="translated">HttpException表示由终端用户的不当请求引起的异常。</target>
        </trans-unit>
        <trans-unit id="4716d0b4c50b051c157e70aa2ddcaa43ec078f7f" translate="yes" xml:space="preserve">
          <source>Human-readable exception name or null if it cannot be determined</source>
          <target state="translated">人类可读的异常名称,如果无法确定则为空。</target>
        </trans-unit>
        <trans-unit id="9711a7cfeff071972d36fdd6050e80bc9d749c0b" translate="yes" xml:space="preserve">
          <source>Hyperlinks</source>
          <target state="translated">Hyperlinks</target>
        </trans-unit>
        <trans-unit id="5eb01d7ed1c32dabbeaed0b32d7c651063a2379d" translate="yes" xml:space="preserve">
          <source>I18N is configured as an application component in &lt;a href=&quot;yii-base-application&quot;&gt;yii\base\Application&lt;/a&gt; by default. You can access that instance via &lt;code&gt;Yii::$app-&amp;gt;i18n&lt;/code&gt;.</source>
          <target state="translated">默认情况下，在&lt;a href=&quot;yii-base-application&quot;&gt;yii \ base \ Application&lt;/a&gt;中将I18N配置为应用程序组件。您可以通过 &lt;code&gt;Yii::$app-&amp;gt;i18n&lt;/code&gt; 访问该实例。</target>
        </trans-unit>
        <trans-unit id="dde129112cfdc26b01544ea06a4723aa0f21aedb" translate="yes" xml:space="preserve">
          <source>I18N provides features related with internationalization (I18N) and localization (L10N).</source>
          <target state="translated">I18N提供了与国际化(I18N)和本地化(L10N)相关的功能。</target>
        </trans-unit>
        <trans-unit id="acb9221210dba602b25dce7e702570a639ff206b" translate="yes" xml:space="preserve">
          <source>ID of the action</source>
          <target state="translated">行动的ID</target>
        </trans-unit>
        <trans-unit id="e312d88ef444feb84582e5ea3b9b5042012f2f8f" translate="yes" xml:space="preserve">
          <source>ID of the widget.</source>
          <target state="translated">小组件的ID。</target>
        </trans-unit>
        <trans-unit id="da2abb9b5411766d7d261e1d72ef2e7ccb79164a" translate="yes" xml:space="preserve">
          <source>IDEs are more friendly to traits as they are a native language construct.</source>
          <target state="translated">IDE对特征比较友好,因为它们是一种母语结构。</target>
        </trans-unit>
        <trans-unit id="a542ce48fc1cfd2b7b1f65a85e584583519f4a66" translate="yes" xml:space="preserve">
          <source>INDEX_B_TREE</source>
          <target state="translated">INDEX_B_TREE</target>
        </trans-unit>
        <trans-unit id="d963b11dc75718cb12bc458ba78089f88de75b1b" translate="yes" xml:space="preserve">
          <source>INDEX_GIN</source>
          <target state="translated">INDEX_GIN</target>
        </trans-unit>
        <trans-unit id="7d599ccec14e2ab2fadfa571479f610f6a7ffe2d" translate="yes" xml:space="preserve">
          <source>INDEX_GIST</source>
          <target state="translated">INDEX_GIST</target>
        </trans-unit>
        <trans-unit id="64d146a6596dae71f404aede74ccdc7e66dd26cb" translate="yes" xml:space="preserve">
          <source>INDEX_HASH</source>
          <target state="translated">INDEX_HASH</target>
        </trans-unit>
        <trans-unit id="6e9e9f74544186128d1212894b1aa5cd3f2a8c8d" translate="yes" xml:space="preserve">
          <source>INDEX_UNIQUE</source>
          <target state="translated">INDEX_UNIQUE</target>
        </trans-unit>
        <trans-unit id="88cfe67b2131a92be4b5a6dfb5d987d0bb6de133" translate="yes" xml:space="preserve">
          <source>IPV4_ADDRESS_LENGTH</source>
          <target state="translated">IPV4_ADDRESS_LENGTH</target>
        </trans-unit>
        <trans-unit id="04f0e7ef375370b4fc53e029dea19826d7d4582c" translate="yes" xml:space="preserve">
          <source>IPV6_ADDRESS_LENGTH</source>
          <target state="translated">IPV6_ADDRESS_LENGTH</target>
        </trans-unit>
        <trans-unit id="67dc3db544eed52913cf3f38e2b6b32936decc7e" translate="yes" xml:space="preserve">
          <source>ISO8601 duration format. For example, all of these values represent &lt;code&gt;1 day, 2 hours, 30 minutes&lt;/code&gt; duration: &lt;code&gt;2015-01-01T13:00:00Z/2015-01-02T13:30:00Z&lt;/code&gt; - between two datetime values &lt;code&gt;2015-01-01T13:00:00Z/P1D2H30M&lt;/code&gt; - time interval after datetime value &lt;code&gt;P1D2H30M/2015-01-02T13:30:00Z&lt;/code&gt; - time interval before datetime value &lt;code&gt;P1D2H30M&lt;/code&gt; - simply a date interval &lt;code&gt;P-1D2H30M&lt;/code&gt; - a negative date interval (&lt;code&gt;-1 day, 2 hours, 30 minutes&lt;/code&gt;)</source>
          <target state="translated">ISO8601持续时间格式。例如，所有这些值代表 &lt;code&gt;1 day, 2 hours, 30 minutes&lt;/code&gt; 持续时间： &lt;code&gt;2015-01-01T13:00:00Z/2015-01-02T13:30:00Z&lt;/code&gt; -两个日期时间值之间的 &lt;code&gt;2015-01-01T13:00:00Z/P1D2H30M&lt;/code&gt; -日期时间值之后的时间间隔 &lt;code&gt;P1D2H30M/2015-01-02T13:30:00Z&lt;/code&gt; &lt;code&gt;P1D2H30M&lt;/code&gt; 日期时间值之前的时间间隔P1D2H30M-简单的日期间隔 &lt;code&gt;P-1D2H30M&lt;/code&gt; -负的日期间隔（ &lt;code&gt;-1 day, 2 hours, 30 minutes&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a45fc0ecfc1986917e9e87bc036f55da5d3ece29" translate="yes" xml:space="preserve">
          <source>ITALIC</source>
          <target state="translated">ITALIC</target>
        </trans-unit>
        <trans-unit id="f2951d48060ffeaf8066be894661ad7936556842" translate="yes" xml:space="preserve">
          <source>Icon HTML.</source>
          <target state="translated">Icon HTML。</target>
        </trans-unit>
        <trans-unit id="483850c8b78337a2e48331c8758e8f2c3926bd07" translate="yes" xml:space="preserve">
          <source>Icon short name, for example: 'star'</source>
          <target state="translated">图标简称,例如:'星'。</target>
        </trans-unit>
        <trans-unit id="9b61d481cb2172eec67edfd35a5d0cc2b22baf0d" translate="yes" xml:space="preserve">
          <source>Id connection component</source>
          <target state="translated">Id连接组件</target>
        </trans-unit>
        <trans-unit id="6fa101a709a52df732b119a1f2ea7ae4f699b453" translate="yes" xml:space="preserve">
          <source>Id of the model to be deleted.</source>
          <target state="translated">要删除的模型的ID。</target>
        </trans-unit>
        <trans-unit id="d302d7cf32a779bc0c6228df44c7d0f7c02f7bf0" translate="yes" xml:space="preserve">
          <source>Id of the widget.</source>
          <target state="translated">小部件的ID。</target>
        </trans-unit>
        <trans-unit id="51c6e94fb9b536ff0fc10607d5e354effef0b1f9" translate="yes" xml:space="preserve">
          <source>Identity URL.</source>
          <target state="translated">身份网址。</target>
        </trans-unit>
        <trans-unit id="2efedd8a7cffef8a91df584eb3d32b5b859556cb" translate="yes" xml:space="preserve">
          <source>IdentityInterface is the interface that should be implemented by a class providing identity information.</source>
          <target state="translated">IdentityInterface是一个提供身份信息的类应该实现的接口。</target>
        </trans-unit>
        <trans-unit id="d8e477422628a7d05ec5ecfcb0f64e6d995ccee6" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-base-controller#%24layout-detail&quot;&gt;$layout&lt;/a&gt; is null, search through all ancestor modules of this controller and find the first module whose &lt;a href=&quot;yii-base-module#%24layout-detail&quot;&gt;layout&lt;/a&gt; is not null. The layout and the corresponding module are used as the layout name and the context module, respectively. If such a module is not found or the corresponding layout is not a string, it will return false, meaning no applicable layout.</source>
          <target state="translated">如果&lt;a href=&quot;yii-base-controller#%24layout-detail&quot;&gt;$ layout&lt;/a&gt;为null，则搜索该控制器的所有祖先模块，并找到第一个&lt;a href=&quot;yii-base-module#%24layout-detail&quot;&gt;布局&lt;/a&gt;不为null的模块。布局和相应的模块分别用作布局名称和上下文模块。如果找不到这样的模块，或者对应的布局不是字符串，它将返回false，表示没有适用的布局。</target>
        </trans-unit>
        <trans-unit id="1394ddb0e5859972881fa082047149d7da2e16ff" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-base-controller#%24layout-detail&quot;&gt;$layout&lt;/a&gt; is specified as a string, use it as the layout name and &lt;a href=&quot;yii-base-controller#%24module-detail&quot;&gt;$module&lt;/a&gt; as the context module;</source>
          <target state="translated">如果将&lt;a href=&quot;yii-base-controller#%24layout-detail&quot;&gt;$ layout&lt;/a&gt;指定为字符串，则将其用作布局名称，将&lt;a href=&quot;yii-base-controller#%24module-detail&quot;&gt;$ module&lt;/a&gt;用作上下文模块；</target>
        </trans-unit>
        <trans-unit id="fb0a7ff5c3ae035fa0efadf636c8d5b370fdfad2" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-base-view#%24renderers-detail&quot;&gt;renderer&lt;/a&gt; is enabled (not null), the method will use it to render the view file. Otherwise, it will simply include the view file as a normal PHP file, capture its output and return it as a string.</source>
          <target state="translated">如果启用了&lt;a href=&quot;yii-base-view#%24renderers-detail&quot;&gt;渲染器&lt;/a&gt;（不为null），则该方法将使用它来渲染视图文件。否则，它将仅将视图文件包含为普通的PHP文件，捕获其输出并将其作为字符串返回。</target>
        </trans-unit>
        <trans-unit id="0fb58195a959dd9ab3241725697a4fdd9ff84826" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-base-view#%24theme-detail&quot;&gt;$theme&lt;/a&gt; is enabled (not null), it will try to render the themed version of the view file as long as it is available.</source>
          <target state="translated">如果&lt;a href=&quot;yii-base-view#%24theme-detail&quot;&gt;$ theme&lt;/a&gt;启用（不为null），则只要有可用，它将尝试呈现视图文件的主题版本。</target>
        </trans-unit>
        <trans-unit id="a9c6f13de17765d2f9bf10555c6c66183de171e4" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-data-activedataprovider#%24query-detail&quot;&gt;$query&lt;/a&gt; is an &lt;a href=&quot;yii-db-activequery&quot;&gt;yii\db\ActiveQuery&lt;/a&gt; instance, the primary keys of &lt;a href=&quot;yii-db-activequerytrait#%24modelClass-detail&quot;&gt;yii\db\ActiveQuery::$modelClass&lt;/a&gt; will be used.</source>
          <target state="translated">如果&lt;a href=&quot;yii-data-activedataprovider#%24query-detail&quot;&gt;$ query&lt;/a&gt;是&lt;a href=&quot;yii-db-activequery&quot;&gt;yii \ db \ ActiveQuery&lt;/a&gt;实例，则将使用&lt;a href=&quot;yii-db-activequerytrait#%24modelClass-detail&quot;&gt;yii \ db \ ActiveQuery :: $ modelClass&lt;/a&gt;的主键。</target>
        </trans-unit>
        <trans-unit id="513a7ad39a005acde7d86af4b4680ef172f6814e" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-db-querytrait#%24orderBy-detail&quot;&gt;yii\elasticsearch\Query::$orderBy&lt;/a&gt; parameter is not set, batches will be processed using the highly efficient &quot;scan&quot; mode. In this case, &lt;a href=&quot;yii-db-querytrait#%24limit-detail&quot;&gt;yii\elasticsearch\Query::$limit&lt;/a&gt; setting determines batch size per shard. See &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-scroll.html&quot;&gt;elasticsearch guide&lt;/a&gt; for more information.</source>
          <target state="translated">如果未设置&lt;a href=&quot;yii-db-querytrait#%24orderBy-detail&quot;&gt;yii \ elasticsearch \ Query :: $ orderBy&lt;/a&gt;参数，则将使用高效的&amp;ldquo;扫描&amp;rdquo;模式处理批次。在这种情况下，&lt;a href=&quot;yii-db-querytrait#%24limit-detail&quot;&gt;yii \ elasticsearch \ Query :: $ limit&lt;/a&gt;设置确定每个碎片的批次大小。有关更多信息，请参见&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-scroll.html&quot;&gt;elasticsearch指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="41c2528cd50f11b9c565aee669cad5b3e277a76d" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-elasticsearch-elasticsearchtarget#%24includeContext-detail&quot;&gt;$includeContext&lt;/a&gt; is true, returns an empty string (so that context message in &lt;a href=&quot;yii-elasticsearch-elasticsearchtarget#collect()-detail&quot;&gt;collect()&lt;/a&gt; is not generated), expecting that context will be appended to every message in &lt;a href=&quot;yii-elasticsearch-elasticsearchtarget#prepareMessage()-detail&quot;&gt;prepareMessage()&lt;/a&gt;.</source>
          <target state="translated">如果&lt;a href=&quot;yii-elasticsearch-elasticsearchtarget#%24includeContext-detail&quot;&gt;$ includeContext&lt;/a&gt;为true，则返回一个空字符串（这样将不会生成&lt;a href=&quot;yii-elasticsearch-elasticsearchtarget#collect()-detail&quot;&gt;collect（）&lt;/a&gt;中的上下文消息），并希望将该上下文附加到&lt;a href=&quot;yii-elasticsearch-elasticsearchtarget#prepareMessage()-detail&quot;&gt;prepareMessage（）中的&lt;/a&gt;每个消息之后。</target>
        </trans-unit>
        <trans-unit id="2050c42966d8612f4cc06353799cb5d8b0e4e084" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-elasticsearch-elasticsearchtarget#%24includeContext-detail&quot;&gt;$includeContext&lt;/a&gt; property is false, returns context message normally.</source>
          <target state="translated">如果&lt;a href=&quot;yii-elasticsearch-elasticsearchtarget#%24includeContext-detail&quot;&gt;$ includeContext&lt;/a&gt;属性为false，则正常返回上下文消息。</target>
        </trans-unit>
        <trans-unit id="8eb77ba459e8ffec8fb0dbb8da450d1ed17bab9f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-filters-pagecache#%24cacheCookies-detail&quot;&gt;$cacheCookies&lt;/a&gt; or &lt;a href=&quot;yii-filters-pagecache#%24cacheHeaders-detail&quot;&gt;$cacheHeaders&lt;/a&gt; is enabled, then &lt;a href=&quot;yii-caching-dependency#%24reusable-detail&quot;&gt;yii\caching\Dependency::$reusable&lt;/a&gt; should be enabled as well to save performance. This is because the cookies and headers are currently stored separately from the actual page content, causing the dependency to be evaluated twice.</source>
          <target state="translated">如果启用&lt;a href=&quot;yii-filters-pagecache#%24cacheCookies-detail&quot;&gt;$ cacheCookies&lt;/a&gt;或&lt;a href=&quot;yii-filters-pagecache#%24cacheHeaders-detail&quot;&gt;$ cacheHeaders&lt;/a&gt;，则也应启用yii &lt;a href=&quot;yii-caching-dependency#%24reusable-detail&quot;&gt;\ caching \ Dependency :: $ reusable&lt;/a&gt;以节省性能。这是因为cookie和标头当前与实际页面内容分开存储，从而导致对依赖项进行两次评估。</target>
        </trans-unit>
        <trans-unit id="6ffc33bc77ef3ae29490c484b416d39bee5682ae" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-gii-generators-model-generator#%24useTablePrefix-detail&quot;&gt;$useTablePrefix&lt;/a&gt; is false, the table name will be returned without change.</source>
          <target state="translated">如果&lt;a href=&quot;yii-gii-generators-model-generator#%24useTablePrefix-detail&quot;&gt;$ useTablePrefix&lt;/a&gt;为false，则将返回表名称，而无需更改。</target>
        </trans-unit>
        <trans-unit id="36d166e45a74b85dec90c46a321c24c979211fab" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-i18n-formatter#%24sizeFormatBase-detail&quot;&gt;$sizeFormatBase&lt;/a&gt; is 1024, &lt;a href=&quot;http://en.wikipedia.org/wiki/Binary_prefix&quot;&gt;binary prefixes&lt;/a&gt; (e.g. kibibyte/KiB, mebibyte/MiB, ...) are used in the formatting result.</source>
          <target state="translated">如果&lt;a href=&quot;yii-i18n-formatter#%24sizeFormatBase-detail&quot;&gt;$ sizeFormatBase&lt;/a&gt;为1024，则在格式化结果中使用&lt;a href=&quot;http://en.wikipedia.org/wiki/Binary_prefix&quot;&gt;二进制前缀&lt;/a&gt;（例如kibibyte / KiB，mebibyte / MiB等）。</target>
        </trans-unit>
        <trans-unit id="df3b10301637f40dbefa2ab24700570b5efcc8d7" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-i18n-formatter#%24sizeFormatBase-detail&quot;&gt;$sizeFormatBase&lt;/a&gt; is 1024, &lt;a href=&quot;https://en.wikipedia.org/wiki/Binary_prefix&quot;&gt;binary prefixes&lt;/a&gt; (e.g. kibibyte/KiB, mebibyte/MiB, ...) are used in the formatting result.</source>
          <target state="translated">如果&lt;a href=&quot;yii-i18n-formatter#%24sizeFormatBase-detail&quot;&gt;$ sizeFormatBase&lt;/a&gt;为1024，则在格式化结果中使用&lt;a href=&quot;https://en.wikipedia.org/wiki/Binary_prefix&quot;&gt;二进制前缀&lt;/a&gt;（例如kibibyte / KiB，mebibyte / MiB等）。</target>
        </trans-unit>
        <trans-unit id="69c6dcfaa675d3c400673c228f13bfed7db310cb" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-i18n-missingtranslationevent#%24translatedMessage-detail&quot;&gt;yii\i18n\MissingTranslationEvent::$translatedMessage&lt;/a&gt; is set by the event handler it will be displayed as the translation result.</source>
          <target state="translated">如果事件处理程序设置了&lt;a href=&quot;yii-i18n-missingtranslationevent#%24translatedMessage-detail&quot;&gt;yii \ i18n \ MissingTranslationEvent :: $ translatedMessage&lt;/a&gt;，它将显示为翻译结果。</target>
        </trans-unit>
        <trans-unit id="c24540f61c12f00d319d426ecf294fae3800b551" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-log-logger#%24traceLevel-detail&quot;&gt;$traceLevel&lt;/a&gt; is greater than 0, additional call stack information about the application code will be logged as well.</source>
          <target state="translated">如果&lt;a href=&quot;yii-log-logger#%24traceLevel-detail&quot;&gt;$ traceLevel&lt;/a&gt;大于0，则还将记录有关应用程序代码的其他调用堆栈信息。</target>
        </trans-unit>
        <trans-unit id="41de71af82ef0b5708b111764c532a8e75eb30d1" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-log-target#%24prefix-detail&quot;&gt;$prefix&lt;/a&gt; is configured it will return the result of the callback. The default implementation will return user IP, user ID and session ID as a prefix.</source>
          <target state="translated">如果配置了&lt;a href=&quot;yii-log-target#%24prefix-detail&quot;&gt;$ prefix&lt;/a&gt;，它将返回回调结果。默认实现将返回用户IP，用户ID和会话ID作为前缀。</target>
        </trans-unit>
        <trans-unit id="efb054d0ac7b1572ca5585fcba5c6d41542cf5a0" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-sphinx-gii-model-generator#%24useIndexPrefix-detail&quot;&gt;$useIndexPrefix&lt;/a&gt; is false, the table name will be returned without change.</source>
          <target state="translated">如果&lt;a href=&quot;yii-sphinx-gii-model-generator#%24useIndexPrefix-detail&quot;&gt;$ useIndexPrefix&lt;/a&gt;为false，则将返回表名称，而不进行任何更改。</target>
        </trans-unit>
        <trans-unit id="fe9e871935cce373459201769149a18fbb6e6897" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-validators-datevalidator#%24timestampAttributeFormat-detail&quot;&gt;$timestampAttributeFormat&lt;/a&gt; is not set, this property will be ignored.</source>
          <target state="translated">如果未设置&lt;a href=&quot;yii-validators-datevalidator#%24timestampAttributeFormat-detail&quot;&gt;$ timestampAttributeFormat&lt;/a&gt;，则将忽略此属性。</target>
        </trans-unit>
        <trans-unit id="1c516cadb8f469099a6ad79e5752c148349a7f56" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-web-assetbundle#%24sourcePath-detail&quot;&gt;$sourcePath&lt;/a&gt; is set, this property will be &lt;em&gt;overwritten&lt;/em&gt; by &lt;a href=&quot;yii-web-assetmanager&quot;&gt;yii\web\AssetManager&lt;/a&gt; when it publishes the asset files from &lt;a href=&quot;yii-web-assetbundle#%24sourcePath-detail&quot;&gt;$sourcePath&lt;/a&gt;.</source>
          <target state="translated">如果&lt;a href=&quot;yii-web-assetbundle#%24sourcePath-detail&quot;&gt;$ SOURCEPATH&lt;/a&gt;设置，此属性将&lt;em&gt;覆盖&lt;/em&gt;由&lt;a href=&quot;yii-web-assetmanager&quot;&gt;警予\网络\ AssetManager&lt;/a&gt;当它发布来自资源文件&lt;a href=&quot;yii-web-assetbundle#%24sourcePath-detail&quot;&gt;$ SOURCEPATH&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="74474e51cae3b0fd3bca7e3a4af8e12a43c7d09a" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-web-user#%24authTimeout-detail&quot;&gt;$authTimeout&lt;/a&gt; is set, this method will refresh the timer.</source>
          <target state="translated">如果设置了&lt;a href=&quot;yii-web-user#%24authTimeout-detail&quot;&gt;$ authTimeout&lt;/a&gt;，则此方法将刷新计时器。</target>
        </trans-unit>
        <trans-unit id="7e6ae2479f283555097b43e312e80d774e54c902" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-web-user#%24enableSession-detail&quot;&gt;$enableSession&lt;/a&gt; is &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">如果&lt;a href=&quot;yii-web-user#%24enableSession-detail&quot;&gt;$ enableSession&lt;/a&gt;为 &lt;code&gt;false&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="09d929a88235dee7faf8d94626f5f5873c45257e" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-web-user#%24enableSession-detail&quot;&gt;$enableSession&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">如果&lt;a href=&quot;yii-web-user#%24enableSession-detail&quot;&gt;$ enableSession&lt;/a&gt;为 &lt;code&gt;true&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="154c5fa3407b47fa1a591c4623d627422c4bdd17" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-widgets-listview#%24afterItem-detail&quot;&gt;$afterItem&lt;/a&gt; is not a closure, &lt;code&gt;null&lt;/code&gt; will be returned.</source>
          <target state="translated">如果&lt;a href=&quot;yii-widgets-listview#%24afterItem-detail&quot;&gt;$ afterItem&lt;/a&gt;不是闭包，则将返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f25132b046d14deb4f1e7220f59aa4bb0af25b7d" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;yii-widgets-listview#%24beforeItem-detail&quot;&gt;$beforeItem&lt;/a&gt; is not a closure, &lt;code&gt;null&lt;/code&gt; will be returned.</source>
          <target state="translated">如果&lt;a href=&quot;yii-widgets-listview#%24beforeItem-detail&quot;&gt;$ beforeItem&lt;/a&gt;不是闭包，则将返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6aceb6c9d015a2fcfd2408c2d425cae64c0a2603" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$attribute&lt;/code&gt; has neither prefix nor suffix, it will be returned back without change.</source>
          <target state="translated">如果 &lt;code&gt;$attribute&lt;/code&gt; 既没有前缀也没有后缀，则将不做任何更改将其返回。</target>
        </trans-unit>
        <trans-unit id="dcdcc63ba5d4e35c77c2eb27e509158d4d9cf7e7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$checkInstance&lt;/code&gt; is false (default), the method will return a value indicating whether the locator has the specified component definition.</source>
          <target state="translated">如果 &lt;code&gt;$checkInstance&lt;/code&gt; 为false（默认值），则该方法将返回一个值，该值指示定位器是否具有指定的组件定义。</target>
        </trans-unit>
        <trans-unit id="0f339bd2273aac17706703227d6bb567510c0404" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$checkInstance&lt;/code&gt; is true, the method will return a value indicating whether the locator has instantiated the specified component.</source>
          <target state="translated">如果 &lt;code&gt;$checkInstance&lt;/code&gt; 为true，则该方法将返回一个值，该值指示定位器是否已实例化指定的组件。</target>
        </trans-unit>
        <trans-unit id="a34198d29dbb412eca0007d6ae072b5a8f98c335" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$query&lt;/code&gt; in the above example is created using the following code, then the data provider will return raw arrays.</source>
          <target state="translated">如果以上示例中的 &lt;code&gt;$query&lt;/code&gt; 是使用以下代码创建的，则数据提供程序将返回原始数组。</target>
        </trans-unit>
        <trans-unit id="4d8dfc3e526b0e1c41f60c95e0ace087f468e7a4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$removeFromBrowser&lt;/code&gt; is true, the cookie will be removed from the browser. In this case, a cookie with outdated expiry will be added to the collection.</source>
          <target state="translated">如果 &lt;code&gt;$removeFromBrowser&lt;/code&gt; 为true，则将从浏览器中删除cookie。在这种情况下，过期的cookie将被添加到集合中。</target>
        </trans-unit>
        <trans-unit id="8f91b18aa21fb6e112ac6bb1f4c2f94921e6aee1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$search&lt;/code&gt; is not empty, the following &lt;code&gt;WHERE&lt;/code&gt; condition will be generated:</source>
          <target state="translated">如果 &lt;code&gt;$search&lt;/code&gt; 不为空，则将生成以下 &lt;code&gt;WHERE&lt;/code&gt; 条件：</target>
        </trans-unit>
        <trans-unit id="d70774fa8f14c480fa7398ed73c2aaae61db6fb1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;@foo/bar&lt;/code&gt; is not defined as a root alias, the last statement would display &lt;code&gt;/path/to/foo/bar/file.php&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;@foo/bar&lt;/code&gt; 未定义为根别名，则最后一条语句将显示 &lt;code&gt;/path/to/foo/bar/file.php&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="abd0a73fb7c236e7791d18c8be6f97e81d84242a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;GROUP BY&lt;/code&gt; only involves simple column names, you can specify it using a string, just like you do when writing raw SQL statements. For example,</source>
          <target state="translated">如果 &lt;code&gt;GROUP BY&lt;/code&gt; 仅涉及简单的列名，则可以使用字符串来指定它，就像编写原始SQL语句时一样。例如，</target>
        </trans-unit>
        <trans-unit id="1d5635c731aaf2bc1da06399b0896ce94eb517ac" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ORDER BY&lt;/code&gt; only involves simple column names, you can specify it using a string, just like you do when writing raw SQL statements. For example,</source>
          <target state="translated">如果 &lt;code&gt;ORDER BY&lt;/code&gt; 仅涉及简单的列名，则可以使用字符串来指定它，就像编写原始SQL语句时一样。例如，</target>
        </trans-unit>
        <trans-unit id="0f3277dd1bec2f2e32b8a2827f9a22122d902e06" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;useTablePrefix&lt;/code&gt; equals true, then the table name will contain the prefix format.</source>
          <target state="translated">如果 &lt;code&gt;useTablePrefix&lt;/code&gt; 等于true，则表名将包含前缀格式。</target>
        </trans-unit>
        <trans-unit id="b3d6f64e1de7bae3cdd1775e5866d6cc72af84e4" translate="yes" xml:space="preserve">
          <source>If PHP extension version matches.</source>
          <target state="translated">如果PHP扩展版本匹配。</target>
        </trans-unit>
        <trans-unit id="ad1c010fb4cb5d73e9a9a8f64966ec146c294cdf" translate="yes" xml:space="preserve">
          <source>If Step 2 or 3 fails, the original view file will be used.</source>
          <target state="translated">如果步骤2或3失败,将使用原始视图文件。</target>
        </trans-unit>
        <trans-unit id="4cdfdc156cebeae91835ed511a0a331923e3eb77" translate="yes" xml:space="preserve">
          <source>If URL is relative or scheme is not string, normalization is skipped.</source>
          <target state="translated">如果URL是相对的或方案不是字符串,则跳过标准化。</target>
        </trans-unit>
        <trans-unit id="7d884cbf6a51b115d685e06a8b045482ced8e455" translate="yes" xml:space="preserve">
          <source>If a Web site contains many static pages, it would be very tedious repeating the similar code many times. To solve this problem, you may introduce a &lt;a href=&quot;guide-structure-controllers#standalone-actions&quot;&gt;standalone action&lt;/a&gt; called &lt;a href=&quot;yii-web-viewaction&quot;&gt;yii\web\ViewAction&lt;/a&gt; in a controller. For example,</source>
          <target state="translated">如果一个网站包含许多静态页面，那么多次重复类似的代码将非常繁琐。要解决此问题，您可以在控制器中引入一个名为&lt;a href=&quot;yii-web-viewaction&quot;&gt;yii \ web \ ViewAction&lt;/a&gt;的&lt;a href=&quot;guide-structure-controllers#standalone-actions&quot;&gt;独立操作&lt;/a&gt;。例如，</target>
        </trans-unit>
        <trans-unit id="9106c6dc968e7fd20fcb91a819f3c9fb5660653a" translate="yes" xml:space="preserve">
          <source>If a behavior needs to respond to the events triggered by the component it is attached to, it should override the &lt;a href=&quot;yii-base-behavior#events()-detail&quot;&gt;yii\base\Behavior::events()&lt;/a&gt; method. For example:</source>
          <target state="translated">如果某个行为需要响应其所附加的组件触发的事件，则它应该覆盖&lt;a href=&quot;yii-base-behavior#events()-detail&quot;&gt;yii \ base \ Behavior :: events（）&lt;/a&gt;方法。例如：</target>
        </trans-unit>
        <trans-unit id="ce5799073ad3d99cc4e4af1263d7efdc3ecab75e" translate="yes" xml:space="preserve">
          <source>If a class definition with the same name already exists, it will be overwritten with the new one. You may use &lt;a href=&quot;yii-di-container#has()-detail&quot;&gt;has()&lt;/a&gt; to check if a class definition already exists.</source>
          <target state="translated">如果已经存在同名的类定义，则它将被新的类定义覆盖。您可以使用&lt;a href=&quot;yii-di-container#has()-detail&quot;&gt;has（）&lt;/a&gt;检查类定义是否已经存在。</target>
        </trans-unit>
        <trans-unit id="7834e32f4f7c7c2d91ecdf4f1e53e65f0644e2a4" translate="yes" xml:space="preserve">
          <source>If a column is of class &lt;a href=&quot;yii-grid-datacolumn&quot;&gt;yii\grid\DataColumn&lt;/a&gt;, the &quot;class&quot; element can be omitted.</source>
          <target state="translated">如果列属于&lt;a href=&quot;yii-grid-datacolumn&quot;&gt;yii \ grid \ DataColumn&lt;/a&gt;类，则可以省略&amp;ldquo; class&amp;rdquo;元素。</target>
        </trans-unit>
        <trans-unit id="768f94f5a3828adbd6ed6315c1a7857ac4b5e602" translate="yes" xml:space="preserve">
          <source>If a column is specified with definition only (e.g. 'PRIMARY KEY (name, type)'), it will be directly inserted into the generated SQL.</source>
          <target state="translated">如果只指定了一个列的定义(例如'PRIMARY KEY (name,type)'),它将直接插入到生成的SQL中。</target>
        </trans-unit>
        <trans-unit id="60fabf8d4bc7aae0c74a37762811f01ab9b26480" translate="yes" xml:space="preserve">
          <source>If a column is specified with definition only (e.g. 'PRIMARY KEY (name, type)'), it will be directly put into the generated SQL.</source>
          <target state="translated">如果只指定了一个列的定义(例如'PRIMARY KEY (name,type)'),它将被直接放入生成的SQL中。</target>
        </trans-unit>
        <trans-unit id="9863f4bb6b9f8f0a59f91a598ccc7a802e03b284" translate="yes" xml:space="preserve">
          <source>If a component definition with the same ID already exists, it will be overwritten.</source>
          <target state="translated">如果一个具有相同ID的组件定义已经存在,它将被覆盖。</target>
        </trans-unit>
        <trans-unit id="01c875e07136370dc352ba081142519eebf451b5" translate="yes" xml:space="preserve">
          <source>If a handler is found and detached</source>
          <target state="translated">如果发现一个处理人,并将其分离出来</target>
        </trans-unit>
        <trans-unit id="1cee2bc8e058446471188e03bd7c021d734aedf4" translate="yes" xml:space="preserve">
          <source>If a link is active, you only need to specify its &quot;label&quot;, and instead of writing &lt;code&gt;['label' =&amp;gt; $label]&lt;/code&gt;, you may simply use &lt;code&gt;$label&lt;/code&gt;.</source>
          <target state="translated">如果链接处于活动状态，则只需要指定其&amp;ldquo;标签&amp;rdquo;即可，而不必编写 &lt;code&gt;['label' =&amp;gt; $label]&lt;/code&gt; ，而只需使用 &lt;code&gt;$label&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="733421069782ae8c3ff755199e051d6f4250105f" translate="yes" xml:space="preserve">
          <source>If a menu item is a string, it will be rendered directly without HTML encoding.</source>
          <target state="translated">如果菜单项是一个字符串,它将直接呈现,不需要HTML编码。</target>
        </trans-unit>
        <trans-unit id="db8957177871b3dec98c884827664040222161d4" translate="yes" xml:space="preserve">
          <source>If a new sub-module has the same ID as an existing one, the existing one will be overwritten silently.</source>
          <target state="translated">如果一个新的子模块与现有的子模块有相同的ID,现有的子模块将被默默覆盖。</target>
        </trans-unit>
        <trans-unit id="462a1573a9ba9c20272277995ff028b3473a5ca4" translate="yes" xml:space="preserve">
          <source>If a particular method is not needed, you may implement it with an empty body. For example, if your application is a pure stateless RESTful application, you would only need to implement &lt;a href=&quot;yii-web-identityinterface#findIdentityByAccessToken()-detail&quot;&gt;findIdentityByAccessToken()&lt;/a&gt; and &lt;a href=&quot;yii-web-identityinterface#getId()-detail&quot;&gt;getId()&lt;/a&gt; while leaving all other methods with an empty body.</source>
          <target state="translated">如果不需要特定的方法，则可以将其实现为空。例如，如果您的应用程序是纯无状态RESTful应用程序，则只需实现&lt;a href=&quot;yii-web-identityinterface#findIdentityByAccessToken()-detail&quot;&gt;findIdentityByAccessToken（）&lt;/a&gt;和&lt;a href=&quot;yii-web-identityinterface#getId()-detail&quot;&gt;getId（），&lt;/a&gt;而将所有其他方法留空。</target>
        </trans-unit>
        <trans-unit id="9ce062fb5ef24a1a1c0de913e0fa5945258f403f" translate="yes" xml:space="preserve">
          <source>If a property has only a getter method and has no setter method, it is considered as &lt;em&gt;read-only&lt;/em&gt;. In this case, trying to modify the property value will cause an exception.</source>
          <target state="translated">如果属性仅具有getter方法而没有setter方法，则将其视为&lt;em&gt;只读&lt;/em&gt;。在这种情况下，尝试修改属性值将导致异常。</target>
        </trans-unit>
        <trans-unit id="874305f2686e0fa02fe34833291a8236fbdf5e96" translate="yes" xml:space="preserve">
          <source>If a relation involves a junction collection, it may be specified by &lt;a href=&quot;yii-db-activerelationtrait#via()-detail&quot;&gt;via()&lt;/a&gt;. This methods may only be called in a relational context. Same is true for &lt;a href=&quot;yii-db-activerelationtrait#inverseOf()-detail&quot;&gt;inverseOf()&lt;/a&gt;, which marks a relation as inverse of another relation.</source>
          <target state="translated">如果关系涉及结点集合，则可以通过&lt;a href=&quot;yii-db-activerelationtrait#via()-detail&quot;&gt;via（）&lt;/a&gt;进行指定。只能在关系上下文中调用此方法。&lt;a href=&quot;yii-db-activerelationtrait#inverseOf()-detail&quot;&gt;inverseOf（）&lt;/a&gt;也是如此，它将一个关系标记为另一个关系的逆。</target>
        </trans-unit>
        <trans-unit id="93afa12e4e9227f9b98c4c5ea4072b5b1cc5e0f8" translate="yes" xml:space="preserve">
          <source>If a relation involves a junction table, it may be specified by &lt;a href=&quot;yii-db-activerelationtrait#via()-detail&quot;&gt;via()&lt;/a&gt; or &lt;a href=&quot;yii-db-activequery#viaTable()-detail&quot;&gt;viaTable()&lt;/a&gt; method. These methods may only be called in a relational context. Same is true for &lt;a href=&quot;yii-db-activerelationtrait#inverseOf()-detail&quot;&gt;inverseOf()&lt;/a&gt;, which marks a relation as inverse of another relation and &lt;a href=&quot;yii-db-activequery#onCondition()-detail&quot;&gt;onCondition()&lt;/a&gt; which adds a condition that is to be added to relational query join condition.</source>
          <target state="translated">如果关系涉及联结表，则可以通过&lt;a href=&quot;yii-db-activerelationtrait#via()-detail&quot;&gt;via（）&lt;/a&gt;或&lt;a href=&quot;yii-db-activequery#viaTable()-detail&quot;&gt;viaTable（）&lt;/a&gt;方法指定它。这些方法只能在关系上下文中调用。对于&lt;a href=&quot;yii-db-activerelationtrait#inverseOf()-detail&quot;&gt;inverseOf（）来说&lt;/a&gt;也是如此，它将一个关系标记为另一个关系的相反，而&lt;a href=&quot;yii-db-activequery#onCondition()-detail&quot;&gt;onCondition（）则将要&lt;/a&gt;添加的条件添加到关系查询联接条件中。</target>
        </trans-unit>
        <trans-unit id="7ed1923bfb8bdc024367f8b0b83d759ead4b2381" translate="yes" xml:space="preserve">
          <source>If a relation involves a junction table, it may be specified by &lt;a href=&quot;yii-db-activerelationtrait#via()-detail&quot;&gt;via()&lt;/a&gt;. This methods may only be called in a relational context. Same is true for &lt;a href=&quot;yii-db-activerelationtrait#inverseOf()-detail&quot;&gt;inverseOf()&lt;/a&gt;, which marks a relation as inverse of another relation.</source>
          <target state="translated">如果关系涉及联结表，则可以通过&lt;a href=&quot;yii-db-activerelationtrait#via()-detail&quot;&gt;via（）&lt;/a&gt;进行指定。只能在关系上下文中调用此方法。&lt;a href=&quot;yii-db-activerelationtrait#inverseOf()-detail&quot;&gt;inverseOf（）&lt;/a&gt;也是如此，它将一个关系标记为另一个关系的逆。</target>
        </trans-unit>
        <trans-unit id="2df8ad87571af596192221b01525b644d2cc3a2f" translate="yes" xml:space="preserve">
          <source>If a relation is declared with &lt;a href=&quot;yii-db-baseactiverecord#hasMany()-detail&quot;&gt;hasMany()&lt;/a&gt;, accessing this relation property will return an array of the related Active Record instances; if a relation is declared with &lt;a href=&quot;yii-db-baseactiverecord#hasOne()-detail&quot;&gt;hasOne()&lt;/a&gt;, accessing the relation property will return the related Active Record instance or &lt;code&gt;null&lt;/code&gt; if no related data is found.</source>
          <target state="translated">如果使用&lt;a href=&quot;yii-db-baseactiverecord#hasMany()-detail&quot;&gt;hasMany（）&lt;/a&gt;声明了一个关系，则访问此关系属性将返回相关Active Record实例的数组；否则，将返回一个数组。如果使用&lt;a href=&quot;yii-db-baseactiverecord#hasOne()-detail&quot;&gt;hasOne（）&lt;/a&gt;声明了一个关系，则访问该关系属性将返回相关的Active Record实例；如果未找到相关数据，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="05e6432034ef916c839ed453942007df9bbc7e35" translate="yes" xml:space="preserve">
          <source>If a relation name corresponds to multiple links, use an array to represent them.</source>
          <target state="translated">如果一个关系名对应多个链接,用一个数组来表示它们。</target>
        </trans-unit>
        <trans-unit id="07fc1fbe30461163a4d7edb3d7b9c41f2deb4130" translate="yes" xml:space="preserve">
          <source>If a relation query does not need modification, you may use the relation name as the array value.</source>
          <target state="translated">如果一个关系查询不需要修改,可以使用关系名作为数组值。</target>
        </trans-unit>
        <trans-unit id="2893ac46b4db20dcedcb8dbcb59c152f70a87929" translate="yes" xml:space="preserve">
          <source>If a table name is given as &lt;code&gt;{{%TableName}}&lt;/code&gt;, then the percentage character &lt;code&gt;%&lt;/code&gt; will be replaced with the table prefix. For example, &lt;code&gt;{{%post}}&lt;/code&gt; becomes &lt;code&gt;{{tbl_post}}&lt;/code&gt;. The brackets around the table name are used for &lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;quoting in an SQL query&lt;/a&gt;.</source>
          <target state="translated">如果将表名指定为 &lt;code&gt;{{%TableName}}&lt;/code&gt; ，则百分比字符 &lt;code&gt;%&lt;/code&gt; 将被替换为表前缀。例如， &lt;code&gt;{{%post}}&lt;/code&gt; 变为 &lt;code&gt;{{tbl_post}}&lt;/code&gt; 。表名的方括号用于&lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;在SQL查询中引用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="223600ba55b08146154a14f8154fbb1bbc5531c7" translate="yes" xml:space="preserve">
          <source>If a translation is not found, a &lt;a href=&quot;yii-i18n-messagesource#EVENT_MISSING_TRANSLATION-detail&quot;&gt;missingTranslation&lt;/a&gt; event will be triggered.</source>
          <target state="translated">如果未找到翻译，则会触发&lt;a href=&quot;yii-i18n-messagesource#EVENT_MISSING_TRANSLATION-detail&quot;&gt;missingTranslation&lt;/a&gt;事件。</target>
        </trans-unit>
        <trans-unit id="38ce3549db44a118e6b64c9cfe24960da7174370" translate="yes" xml:space="preserve">
          <source>If a type cannot be found in &lt;a href=&quot;yii-db-querybuilder#%24typeMap-detail&quot;&gt;$typeMap&lt;/a&gt;, it will be returned without any change.</source>
          <target state="translated">如果在&lt;a href=&quot;yii-db-querybuilder#%24typeMap-detail&quot;&gt;$ typeMap中&lt;/a&gt;找不到类型，则将返回它而没有任何更改。</target>
        </trans-unit>
        <trans-unit id="95b2951225cd70cf76423e2a351e9210a631d915" translate="yes" xml:space="preserve">
          <source>If a value is &lt;code&gt;null&lt;/code&gt;, the corresponding attribute will not be rendered.</source>
          <target state="translated">如果值为 &lt;code&gt;null&lt;/code&gt; ，则不会呈现相应的属性。</target>
        </trans-unit>
        <trans-unit id="3c08e7ad31eb045621b72a7b1ab5f79522b335b2" translate="yes" xml:space="preserve">
          <source>If a view is rendered within another view, the directory containing the other view file will be prefixed to the new view name to form the actual view file path. For example, &lt;code&gt;item&lt;/code&gt; will be resolved into &lt;code&gt;@app/views/post/item.php&lt;/code&gt; if it is being rendered in the view &lt;code&gt;@app/views/post/index.php&lt;/code&gt;.</source>
          <target state="translated">如果在另一个视图中呈现一个视图，则包含另一个视图文件的目录将以新视图名称为前缀，以形成实际的视图文件路径。例如，如果 &lt;code&gt;item&lt;/code&gt; 在视图 &lt;code&gt;@app/views/post/index.php&lt;/code&gt; 呈现，则它将解析为 &lt;code&gt;@app/views/post/item.php&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a742dbe317b1b848b9f3c6ded469a88e7aa150e3" translate="yes" xml:space="preserve">
          <source>If access is granted</source>
          <target state="translated">如果允许访问</target>
        </trans-unit>
        <trans-unit id="42e7d85c50bf4c4991b2a8033db2a13ae6a18d3e" translate="yes" xml:space="preserve">
          <source>If additional transformations are required or the way of getting value is complex, second argument could be specified as an anonymous function:</source>
          <target state="translated">如果需要进行额外的转换,或者获取值的方式比较复杂,第二个参数可以指定为匿名函数。</target>
        </trans-unit>
        <trans-unit id="b9ceff565c106def18cbb9d250587250aa578794" translate="yes" xml:space="preserve">
          <source>If address is already in use</source>
          <target state="translated">如果地址已在使用中</target>
        </trans-unit>
        <trans-unit id="6ce5090ec8349b3b513dc3d84a59303a02cb6be7" translate="yes" xml:space="preserve">
          <source>If all the CRUD operations are managed together then it's a good idea to use a single permission, like &lt;code&gt;managePost&lt;/code&gt;, and check it in &lt;a href=&quot;yii-web-controller#beforeAction()-detail&quot;&gt;yii\web\Controller::beforeAction()&lt;/a&gt;.</source>
          <target state="translated">如果所有CRUD操作都一起管理，则最好使用单个权限（例如 &lt;code&gt;managePost&lt;/code&gt; )，然后在&lt;a href=&quot;yii-web-controller#beforeAction()-detail&quot;&gt;yii \ web \ Controller :: beforeAction（）中进行检查&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6b2e25615ef256ccccfd5d502967e33985ff1a0d" translate="yes" xml:space="preserve">
          <source>If all you need is plain text then escaping is as easy as the following:</source>
          <target state="translated">如果你需要的是纯文本,那么转义就像下面一样简单。</target>
        </trans-unit>
        <trans-unit id="2c3dee110b5c42fa6eb43d86ddbcfcf0a649fcf2" translate="yes" xml:space="preserve">
          <source>If an attribute fails the validation, the method/function should call &lt;a href=&quot;yii-base-model#addError()-detail&quot;&gt;yii\base\Model::addError()&lt;/a&gt; to save the error message in the model so that it can be retrieved back later to present to end users.</source>
          <target state="translated">如果某个属性未能通过验证，则该方法/函数应调用&lt;a href=&quot;yii-base-model#addError()-detail&quot;&gt;yii \ base \ Model :: addError（）&lt;/a&gt;将错误消息保存在模型中，以便稍后可以将其取回以呈现给最终用户。</target>
        </trans-unit>
        <trans-unit id="997fe1e2325ed5be0a8af05fc54f08dc290b7b4a" translate="yes" xml:space="preserve">
          <source>If an attribute value is an instance of &lt;a href=&quot;yii-db-activerecordinterface&quot;&gt;yii\db\ActiveRecordInterface&lt;/a&gt; or an array of such instances, the primary value(s) of the AR instance(s) will be returned instead.</source>
          <target state="translated">如果属性值是&lt;a href=&quot;yii-db-activerecordinterface&quot;&gt;yii \ db \ ActiveRecordInterface&lt;/a&gt;的实例或此类实例的数组，则将改为返回AR实例的主要值。</target>
        </trans-unit>
        <trans-unit id="7d137b7f63db74e30d1896ed425bcda906a256fd" translate="yes" xml:space="preserve">
          <source>If an extension does not have a class autoloader but follows the &lt;a href=&quot;http://www.php-fig.org/psr/psr-4/&quot;&gt;PSR-4 standard&lt;/a&gt;, you may use the class autoloader provided by Yii to autoload the extension classes. All you need to do is just to declare a &lt;a href=&quot;guide-concept-aliases#defining-aliases&quot;&gt;root alias&lt;/a&gt; for the extension root directory. For example, assuming you have installed an extension in the directory &lt;code&gt;vendor/mycompany/myext&lt;/code&gt;, and the extension classes are under the &lt;code&gt;myext&lt;/code&gt; namespace, then you can include the following code in your application configuration:</source>
          <target state="translated">如果扩展没有类自动加载器，但遵循&lt;a href=&quot;http://www.php-fig.org/psr/psr-4/&quot;&gt;PSR-4标准&lt;/a&gt;，则可以使用Yii提供的类自动加载器来自动加载扩展类。您需要做的只是为扩展根目录声明一个&lt;a href=&quot;guide-concept-aliases#defining-aliases&quot;&gt;根别名&lt;/a&gt;。例如，假设您在目录 &lt;code&gt;vendor/mycompany/myext&lt;/code&gt; 中安装了扩展，并且扩展类位于 &lt;code&gt;myext&lt;/code&gt; 命名空间下，则可以在应用程序配置中包括以下代码：</target>
        </trans-unit>
        <trans-unit id="c25ebc5293d0e152bf2e20dfb7ff919b2c15aa1a" translate="yes" xml:space="preserve">
          <source>If any of the above steps resolves into a controller, it is returned together with the rest part of the route which will be treated as the action ID. Otherwise, &lt;code&gt;false&lt;/code&gt; will be returned.</source>
          <target state="translated">如果上述任何步骤分解为控制器，它将与路由的其余部分一起返回，该剩余部分将被视为操作ID。否则，将返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ec5aa866b1b32b89aad2e953478986516e2daf4" translate="yes" xml:space="preserve">
          <source>If any of the filters cancel the action execution, the filters (both pre-filters and post-filters) after it will not be applied.</source>
          <target state="translated">如果任何一个过滤器取消了动作的执行,那么之后的过滤器(包括前过滤器和后过滤器)将不会被应用。</target>
        </trans-unit>
        <trans-unit id="a7a45bbff22367b061c745ed6d5e7b26e6210ab0" translate="yes" xml:space="preserve">
          <source>If array - request data, otherwise - request content.</source>
          <target state="translated">如果是数组--请求数据,否则--请求内容。</target>
        </trans-unit>
        <trans-unit id="f62c088ec033fbb93dcb286068f7ebdb02e96cf9" translate="yes" xml:space="preserve">
          <source>If array given, each element of it will be processed.</source>
          <target state="translated">如果给定数组,将对其中的每个元素进行处理。</target>
        </trans-unit>
        <trans-unit id="f11e980ab02eb3b139dff315ba27380bfafd2c82" translate="yes" xml:space="preserve">
          <source>If authentication fails, a response with HTTP status 401 will be sent back together with other appropriate headers (such as a &lt;code&gt;WWW-Authenticate&lt;/code&gt; header for HTTP Basic Auth).</source>
          <target state="translated">如果身份验证失败，则将将HTTP状态为401的响应与其他适当的标头（例如HTTP基本 &lt;code&gt;WWW-Authenticate&lt;/code&gt; 的WWW-Authenticate标头）一起发送回去。</target>
        </trans-unit>
        <trans-unit id="a559c001a5940e739fca0014d88e55097e606bdc" translate="yes" xml:space="preserve">
          <source>If authentication succeeds, the controller will perform other checks (such as rate limiting, authorization) and then run the action. The authenticated user identity information can be retrieved via &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;identity&lt;/code&gt;.</source>
          <target state="translated">如果身份验证成功，则控制器将执行其他检查（例如速率限制，授权），然后运行该操作。可以通过 &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;identity&lt;/code&gt; 检索经过身份验证的用户身份信息。</target>
        </trans-unit>
        <trans-unit id="7812529036e081ea6133baea3187ec5f297cd136" translate="yes" xml:space="preserve">
          <source>If base value is set</source>
          <target state="translated">如果设置了基值</target>
        </trans-unit>
        <trans-unit id="b6b4e127b6d8e4bcf8dd852f2b2a2081b7d3c9ea" translate="yes" xml:space="preserve">
          <source>If body is already set and its content type matches given one, it will be overridden, if content type miss match the multipart message will be composed.</source>
          <target state="translated">如果body已经设置好,并且其内容类型与给定的内容类型相匹配,则会被覆盖,如果内容类型不匹配,则会组成多部分消息。</target>
        </trans-unit>
        <trans-unit id="099aa1cd3808f580f4372e95a7c4d749a4dd6082" translate="yes" xml:space="preserve">
          <source>If both Last-Modified and ETag are null, returns false.</source>
          <target state="translated">如果Last-Modified和ETag都为空,返回false。</target>
        </trans-unit>
        <trans-unit id="b250fde6ec6530eee061bbc13257eb5eb95a76a7" translate="yes" xml:space="preserve">
          <source>If bundle should be published</source>
          <target state="translated">如果捆绑发布</target>
        </trans-unit>
        <trans-unit id="0517f838ae9ee8f77b88300f42a2b3f09eae86fa" translate="yes" xml:space="preserve">
          <source>If data is used to specify column names or table names the best thing to do is to allow only predefined set of values:</source>
          <target state="translated">如果使用数据来指定列名或表名,最好的办法是只允许使用预定义的值集。</target>
        </trans-unit>
        <trans-unit id="031596c967f1eed4d6c72b62b771db2ff232f37d" translate="yes" xml:space="preserve">
          <source>If each array has an element with the same string key value, the latter will overwrite the former (different from array_merge_recursive). Recursive merging will be conducted if both arrays have an element of array type and are having the same key. For integer-keyed elements, the elements from the latter array will be appended to the former array. You can use &lt;a href=&quot;yii-helpers-unsetarrayvalue&quot;&gt;yii\helpers\UnsetArrayValue&lt;/a&gt; object to unset value from previous array or &lt;a href=&quot;yii-helpers-replacearrayvalue&quot;&gt;yii\helpers\ReplaceArrayValue&lt;/a&gt; to force replace former value instead of recursive merging.</source>
          <target state="translated">如果每个数组的元素具有相同的字符串键值，则后者将覆盖前者（不同于array_merge_recursive）。如果两个数组都具有数组类型的元素并且具有相同的键，则将进行递归合并。对于整数键元素，后一个数组中的元素将附加到前一个数组中。您可以使用&lt;a href=&quot;yii-helpers-unsetarrayvalue&quot;&gt;yii \ helpers \ UnsetArrayValue&lt;/a&gt;对象从先前的数组中取消设置值，也可以使用yii &lt;a href=&quot;yii-helpers-replacearrayvalue&quot;&gt;\ helpers \ ReplaceArrayValue&lt;/a&gt;来强制替换先前的值，而不是递归合并。</target>
        </trans-unit>
        <trans-unit id="a30c1dbc1ae9c5879108573ac9579e937826a5e4" translate="yes" xml:space="preserve">
          <source>If error is one of fatal type</source>
          <target state="translated">如果错误是致命型的</target>
        </trans-unit>
        <trans-unit id="7aa6da69fd6b2a24ac80f07abc11630fe37a3dc4" translate="yes" xml:space="preserve">
          <source>If existing file should be overwritten without backup</source>
          <target state="translated">如果现有的文件在没有备份的情况下要被覆盖,那么就会被覆盖</target>
        </trans-unit>
        <trans-unit id="a594b4be4fca8e7c5b2346783e67846f1d48aef4" translate="yes" xml:space="preserve">
          <source>If false carousel indicators (</source>
          <target state="translated">如果错误的转盘指标(</target>
        </trans-unit>
        <trans-unit id="afa90e727a43a2ed8bd10b9879eba1564cb612ef" translate="yes" xml:space="preserve">
          <source>If intl extension is loaded</source>
          <target state="translated">如果加载了intl扩展名</target>
        </trans-unit>
        <trans-unit id="78ade4d7e982d95934c57c2a009b333e29b4a3c1" translate="yes" xml:space="preserve">
          <source>If intl extension isn't available uses fallback that converts latin characters only and removes the rest. You may customize characters map via $transliteration property of the helper.</source>
          <target state="translated">如果intl扩展不可用,则使用回退功能,只转换拉丁文字符,并删除其他字符。你可以通过助手的$transliteration属性自定义字符映射。</target>
        </trans-unit>
        <trans-unit id="2474b60b32e60e2e083dde1c95d1593a697cdc0a" translate="yes" xml:space="preserve">
          <source>If it is the first time you are releasing an extension, you should register it on a Composer repository, such as &lt;a href=&quot;https://packagist.org/&quot;&gt;Packagist&lt;/a&gt;. After that, all you need to do is simply create a release tag (e.g. &lt;code&gt;v1.0.1&lt;/code&gt;) on the VCS repository of your extension and notify the Composer repository about the new release. People will then be able to find the new release, and install or update the extension through the Composer repository.</source>
          <target state="translated">如果是第一次发布扩展，则应在Composer存储库（例如&lt;a href=&quot;https://packagist.org/&quot;&gt;Packagist）中&lt;/a&gt;注册它。之后，您只需要在扩展的VCS存储库上创建一个发行标签（例如 &lt;code&gt;v1.0.1&lt;/code&gt; ），然后将新发行版通知Composer存储库。人们随后将能够找到新版本，并通过Composer信息库安装或更新扩展。</target>
        </trans-unit>
        <trans-unit id="bdce04541a3e084a3c66dc7fd4de0a0f84a1805c" translate="yes" xml:space="preserve">
          <source>If it should be HTML we could get some help from HtmlPurifier:</source>
          <target state="translated">如果应该是HTML,我们可以从HtmlPurifier那里得到一些帮助。</target>
        </trans-unit>
        <trans-unit id="ecb86142fffc322bbba2009336aba359bb8dd102" translate="yes" xml:space="preserve">
          <source>If it's the case don't forget to deny access to everything except &lt;code&gt;web&lt;/code&gt;. If it can't be done consider hosting your application elsewhere.</source>
          <target state="translated">如果是这种情况，请不要忘记拒绝访问除 &lt;code&gt;web&lt;/code&gt; 之外的所有内容。如果无法完成，请考虑将应用程序托管在其他位置。</target>
        </trans-unit>
        <trans-unit id="8507a4cf09db708e4fbf14ec0335fbe6f901f5a0" translate="yes" xml:space="preserve">
          <source>If message was sent successfully.</source>
          <target state="translated">如果信息发送成功。</target>
        </trans-unit>
        <trans-unit id="5f92506f19def9069d6a88ef5be3bcb4d1bf0df2" translate="yes" xml:space="preserve">
          <source>If most of your DB tables names share a common prefix, you may use the table prefix feature provided by Yii DAO.</source>
          <target state="translated">如果你的大部分DB表名都有一个共同的前缀,你可以使用Yii DAO提供的表前缀功能。</target>
        </trans-unit>
        <trans-unit id="73e3fd63985d864c72e16bb65657fa000e1864fb" translate="yes" xml:space="preserve">
          <source>If need to build models from log messages and refresh them.</source>
          <target state="translated">如果需要从日志消息中建立模型并刷新它们。</target>
        </trans-unit>
        <trans-unit id="1bb5f9bd79229e1bf9ddf5f5527086670488a827" translate="yes" xml:space="preserve">
          <source>If needed you can pass transaction isolation level as a second parameter:</source>
          <target state="translated">如果需要,你可以将事务隔离级别作为第二个参数传递。</target>
        </trans-unit>
        <trans-unit id="24f76137c3d1ac0a7da27dfd4aae8dc782056714" translate="yes" xml:space="preserve">
          <source>If no error happens during deletion</source>
          <target state="translated">如果在删除过程中没有发生错误</target>
        </trans-unit>
        <trans-unit id="179b61a5213f3bcea415d706500dd7f533cc6a41" translate="yes" xml:space="preserve">
          <source>If no parameter is passed, the generated URL is relative. You can either pass &lt;code&gt;true&lt;/code&gt; to get an absolute URL for the current schema or specify a schema explicitly (&lt;code&gt;https&lt;/code&gt;, &lt;code&gt;http&lt;/code&gt;).</source>
          <target state="translated">如果未传递任何参数，则生成的URL是相对的。您可以传递 &lt;code&gt;true&lt;/code&gt; 以获取当前架构的绝对URL，也可以显式指定架构（ &lt;code&gt;https&lt;/code&gt; ， &lt;code&gt;http&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f9d379a49170ee8cca999f33f9b2c03d2170a703" translate="yes" xml:space="preserve">
          <source>If no renderer is available for the given view file, the view file will be treated as a normal PHP and rendered via &lt;a href=&quot;yii-base-view#renderPhpFile()-detail&quot;&gt;renderPhpFile()&lt;/a&gt;.</source>
          <target state="translated">如果给定视图文件没有可用的渲染器，则该视图文件将被视为普通的PHP，并通过&lt;a href=&quot;yii-base-view#renderPhpFile()-detail&quot;&gt;renderPhpFile（）进行&lt;/a&gt;渲染。</target>
        </trans-unit>
        <trans-unit id="e18ed81a57461e23b23fb56496f6f86cd9732a5a" translate="yes" xml:space="preserve">
          <source>If none of the above operators is detected, the &lt;code&gt;$defaultOperator&lt;/code&gt; will be used.</source>
          <target state="translated">如果未检测到上述任何一个运算符，则将使用 &lt;code&gt;$defaultOperator&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c47821db582b0de51f4d0ce64e727247b64ab77" translate="yes" xml:space="preserve">
          <source>If not listed by this method, attributes retrieved through &lt;a href=&quot;yii-elasticsearch-query#fields()-detail&quot;&gt;yii\elasticsearch\ActiveQuery::fields()&lt;/a&gt; will converted to a scalar value when the result array contains only one value.</source>
          <target state="translated">如果此方法未列出，则当结果数组仅包含一个值时，通过&lt;a href=&quot;yii-elasticsearch-query#fields()-detail&quot;&gt;yii \ elasticsearch \ ActiveQuery :: fields（）&lt;/a&gt;检索的属性将转换为标量值。</target>
        </trans-unit>
        <trans-unit id="9b2b751adffebf8c2af7b0a71526c135c0fdfa67" translate="yes" xml:space="preserve">
          <source>If not set - &lt;a href=&quot;yii-db-queryinterface#one()-detail&quot;&gt;yii\db\QueryInterface::one()&lt;/a&gt; will be used.</source>
          <target state="translated">如果未设置-将使用&lt;a href=&quot;yii-db-queryinterface#one()-detail&quot;&gt;yii \ db \ QueryInterface :: one（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3e0ffcd889630e8aed7165b8c3be21bb87924e9a" translate="yes" xml:space="preserve">
          <source>If not set - application 'session' component will be used, but only, if it is available (e.g. in web application), otherwise - no session will be used and no data saving will be performed.</source>
          <target state="translated">如果没有设置--应用程序 &quot;会话 &quot;组件将被使用,但只有在它可用的情况下才会被使用(例如在web应用程序中),否则--将不使用会话,也不会进行数据保存。</target>
        </trans-unit>
        <trans-unit id="fb62da5c6478461f9eac123c021de7dab78d8b3f" translate="yes" xml:space="preserve">
          <source>If not set explicitly in the application config, this property will be populated with the contents of &lt;code&gt;@vendor/yiisoft/extensions.php&lt;/code&gt;.</source>
          <target state="translated">如果未在应用程序配置中明确设置，则此属性将填充 &lt;code&gt;@vendor/yiisoft/extensions.php&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b6cb2dfb8e9531ebd9fe6253f3e645ad7009c7c" translate="yes" xml:space="preserve">
          <source>If not set or empty, it means this rule applies to all controllers.</source>
          <target state="translated">如果没有设置或为空,则表示该规则适用于所有控制器。</target>
        </trans-unit>
        <trans-unit id="604e8c580e47b4ca19f15f2f42df59e2a727a9d9" translate="yes" xml:space="preserve">
          <source>If not set the default value will be taken from &lt;code&gt;Yii::$app-&amp;gt;formatter-&amp;gt;dateFormat&lt;/code&gt;.</source>
          <target state="translated">如果未设置，则默认值将从 &lt;code&gt;Yii::$app-&amp;gt;formatter-&amp;gt;dateFormat&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c979fcf344412c1700f08cf7587f16467c67969a" translate="yes" xml:space="preserve">
          <source>If not set unique slug will be generated adding incrementing suffix to the base slug.</source>
          <target state="translated">如果没有设置,将生成唯一的Slug,并在基本Slug上添加递增的后缀。</target>
        </trans-unit>
        <trans-unit id="18f471cd3cabad13614fb92598ccdaa08ec91d8a" translate="yes" xml:space="preserve">
          <source>If not set, &lt;a href=&quot;yii-baseyii#getLogger()-detail&quot;&gt;Yii::getLogger()&lt;/a&gt; will be used.</source>
          <target state="translated">如果未设置，将使用&lt;a href=&quot;yii-baseyii#getLogger()-detail&quot;&gt;Yii :: getLogger（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8652222a10e264a872f3456e5e838e863270f75" translate="yes" xml:space="preserve">
          <source>If not set, &lt;a href=&quot;yii-log-target#getMessagePrefix()-detail&quot;&gt;getMessagePrefix()&lt;/a&gt; will be used, which prefixes the message with context information such as user IP, user ID and session ID.</source>
          <target state="translated">如果未设置，将使用&lt;a href=&quot;yii-log-target#getMessagePrefix()-detail&quot;&gt;getMessagePrefix（）&lt;/a&gt;，它在消息前添加上下文信息，例如用户IP，用户ID和会话ID。</target>
        </trans-unit>
        <trans-unit id="598244aad0b8b5a3d25dc3ad366072c313b162ad" translate="yes" xml:space="preserve">
          <source>If not set, &lt;a href=&quot;yii-validators-datevalidator#%24timestampAttribute-detail&quot;&gt;$timestampAttribute&lt;/a&gt; will receive a UNIX timestamp. If &lt;a href=&quot;yii-validators-datevalidator#%24timestampAttribute-detail&quot;&gt;$timestampAttribute&lt;/a&gt; is not set, this property will be ignored.</source>
          <target state="translated">如果未设置，则&lt;a href=&quot;yii-validators-datevalidator#%24timestampAttribute-detail&quot;&gt;$ timestampAttribute&lt;/a&gt;将收到UNIX时间戳。如果未设置&lt;a href=&quot;yii-validators-datevalidator#%24timestampAttribute-detail&quot;&gt;$ timestampAttribute&lt;/a&gt;，则将忽略此属性。</target>
        </trans-unit>
        <trans-unit id="6f0159300f503950ad0cafa083a6a5451887329c" translate="yes" xml:space="preserve">
          <source>If not set, attribute type map will be composed automatically from the owner validation rules.</source>
          <target state="translated">如果不设置,属性类型图将由所有者验证规则自动组成。</target>
        </trans-unit>
        <trans-unit id="c7ba6cf13dbde30bbf876ef13767afa18e0f6f50" translate="yes" xml:space="preserve">
          <source>If not set, it will use the &lt;code&gt;controllers&lt;/code&gt; sub-namespace under the namespace of this module. For example, if the namespace of this module is &lt;code&gt;foo\bar&lt;/code&gt;, then the default controller namespace would be &lt;code&gt;foo\bar\controllers&lt;/code&gt;.</source>
          <target state="translated">如果未设置，它将使用此模块名称空间下的 &lt;code&gt;controllers&lt;/code&gt; 子名称空间。例如，如果此模块的名称空间为 &lt;code&gt;foo\bar&lt;/code&gt; ，则默认控制器名称空间将为 &lt;code&gt;foo\bar\controllers&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6cb28085c35f61ff67f1625031bdec1323c891ac" translate="yes" xml:space="preserve">
          <source>If not, use radio list:</source>
          <target state="translated">如果没有,则使用单选列表。</target>
        </trans-unit>
        <trans-unit id="79d598537e0ab26c10557e14982c6ecf0e1efced" translate="yes" xml:space="preserve">
          <source>If object tags should be added</source>
          <target state="translated">如果需要添加对象标签</target>
        </trans-unit>
        <trans-unit id="3cc4368a6f2e22b506c6355d54bb9b8354d29db8" translate="yes" xml:space="preserve">
          <source>If obsolete translations should be marked</source>
          <target state="translated">如果是过时的译文应标明</target>
        </trans-unit>
        <trans-unit id="ce2587abda112e3f1ab3670ea7fefe36f3c59a94" translate="yes" xml:space="preserve">
          <source>If obsolete translations should be removed</source>
          <target state="translated">如果过时的译文应予删除</target>
        </trans-unit>
        <trans-unit id="927aca9111385a996b928446d5d0bd9c92ba6744" translate="yes" xml:space="preserve">
          <source>If one of the calls returns &lt;code&gt;false&lt;/code&gt;, the rest of the uncalled &lt;code&gt;beforeAction()&lt;/code&gt; methods will be skipped and the action execution will be cancelled.</source>
          <target state="translated">如果其中一个调用返回 &lt;code&gt;false&lt;/code&gt; ，则其余未 &lt;code&gt;beforeAction()&lt;/code&gt; 方法将被跳过，并且动作执行将被取消。</target>
        </trans-unit>
        <trans-unit id="4e2ffb22a05cead6ff0620f77d289bb40e0357e5" translate="yes" xml:space="preserve">
          <source>If partial match should be used</source>
          <target state="translated">如果应该使用部分匹配</target>
        </trans-unit>
        <trans-unit id="075825610310b5c6cb6078260fc13ca717495d28" translate="yes" xml:space="preserve">
          <source>If partial match should be used.</source>
          <target state="translated">如应采用部分匹配。</target>
        </trans-unit>
        <trans-unit id="91dd0765a1c03f17ceb419a01dcf89142fa16a49" translate="yes" xml:space="preserve">
          <source>If request failed</source>
          <target state="translated">如果请求失败</target>
        </trans-unit>
        <trans-unit id="08a10fa4be221ceef987c0f17fc663e01d397fb0" translate="yes" xml:space="preserve">
          <source>If resolved to an abstract class or an interface (since 2.0.9)</source>
          <target state="translated">如果解析为抽象类或接口(自2.0.9起)</target>
        </trans-unit>
        <trans-unit id="cd9e4f2310e3dae8708c94347dc9c241334cde3a" translate="yes" xml:space="preserve">
          <source>If response body contains JSON and should be decoded</source>
          <target state="translated">如果响应体包含JSON,并且应该被解码。</target>
        </trans-unit>
        <trans-unit id="fc99290efe0a7a2f4ade2f8d14a22f2dbee5af4c" translate="yes" xml:space="preserve">
          <source>If screen size could not be detected, or the indentation is greater than the screen size, the text will not be wrapped.</source>
          <target state="translated">如果无法检测到屏幕尺寸,或缩进大于屏幕尺寸,则不会对文字进行包装。</target>
        </trans-unit>
        <trans-unit id="6b9028d582601ca15d2ae87a68345097e5b21da8" translate="yes" xml:space="preserve">
          <source>If set to true, returns the raw string without trimming</source>
          <target state="translated">如果设置为 &quot;true&quot;,则返回未修剪的原始字符串。</target>
        </trans-unit>
        <trans-unit id="5c8947b0d73bad0c2e5251344a1b78b894714e6c" translate="yes" xml:space="preserve">
          <source>If set, this forces a minimum position for javascript files. This will adjust depending assets javascript file position or fail if requirement can not be met. If this is null, asset bundles position settings will not be changed. See &lt;a href=&quot;yii-web-view#registerJsFile()-detail&quot;&gt;registerJsFile()&lt;/a&gt; for more details on javascript position.</source>
          <target state="translated">如果设置，这将强制javascript文件的最小位置。这将调整取决于资产的javascript文件的位置，如果无法满足要求，则将失败。如果为空，则资产束位置设置将不会更改。有关JavaScript位置的更多详细信息，请参见&lt;a href=&quot;yii-web-view#registerJsFile()-detail&quot;&gt;registerJsFile（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="738fd291d476f5f498d53a1de0155485cd11e05c" translate="yes" xml:space="preserve">
          <source>If simple HTML should be rendered</source>
          <target state="translated">如果要呈现简单的HTML</target>
        </trans-unit>
        <trans-unit id="b07125ba6075068db374f5180cb5266ac762a261" translate="yes" xml:space="preserve">
          <source>If some URL rules share the same prefix in their patterns or routes, you may consider using &lt;a href=&quot;yii-web-groupurlrule&quot;&gt;yii\web\GroupUrlRule&lt;/a&gt; so that they can be more efficiently examined by &lt;a href=&quot;yii-web-urlmanager&quot;&gt;URL manager&lt;/a&gt; as a group. This is often the case when your application is composed by modules, each having its own set of URL rules with module ID as their common prefixes.</source>
          <target state="translated">如果某些URL规则在其模式或路由中共享相同的前缀，则可以考虑使用&lt;a href=&quot;yii-web-groupurlrule&quot;&gt;yii \ web \ GroupUrlRule，&lt;/a&gt;以便&lt;a href=&quot;yii-web-urlmanager&quot;&gt;URL管理器&lt;/a&gt;可以更有效地对它们进行检查。当您的应用程序由模块组成时，通常就是这种情况，每个模块都有自己的URL规则集，其中模块ID作为其公共前缀。</target>
        </trans-unit>
        <trans-unit id="cce8dee872e81ca0756c094c1fac1e7f5426e5b7" translate="yes" xml:space="preserve">
          <source>If specified as a string an own query method with such name will be invoked, passing &lt;a href=&quot;yii-caching-dbquerydependency#%24db-detail&quot;&gt;$db&lt;/a&gt; value as its first argument. For example: &lt;code&gt;exists&lt;/code&gt;, &lt;code&gt;all&lt;/code&gt;.</source>
          <target state="translated">如果指定为字符串，则将调用具有该名称的自己的查询方法，并将&lt;a href=&quot;yii-caching-dbquerydependency#%24db-detail&quot;&gt;$ db&lt;/a&gt;值作为第一个参数传递。例如： &lt;code&gt;exists&lt;/code&gt; ， &lt;code&gt;all&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="27208a4ad10ef5cbc8c2fb53fb3aa650f99cd1d1" translate="yes" xml:space="preserve">
          <source>If specified the value is used as a reference time instead of &lt;code&gt;now&lt;/code&gt; when &lt;code&gt;$value&lt;/code&gt; is not a &lt;code&gt;DateInterval&lt;/code&gt; object.</source>
          <target state="translated">如果指定该值，则在 &lt;code&gt;$value&lt;/code&gt; 不是 &lt;code&gt;DateInterval&lt;/code&gt; 对象时，将其用作参考时间，而不是 &lt;code&gt;now&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="80b76f8a6ebb8192019ecd47793c4e15a130b06a" translate="yes" xml:space="preserve">
          <source>If specified, this variable will be set to &lt;code&gt;true&lt;/code&gt; if $pathInfo was changed during normalization</source>
          <target state="translated">如果指定，则在标准化过程中更改$ pathInfo时，此变量将设置为 &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff1b7d6a0ddb8123caa86dd780a874c42e9cb6e3" translate="yes" xml:space="preserve">
          <source>If such a key exists, the corresponding value will be used to replace the corresponding part in the view file path;</source>
          <target state="translated">如果存在这样一个键,相应的值将被用来替换视图文件路径中的相应部分。</target>
        </trans-unit>
        <trans-unit id="797d82aedf8008681fcc25e29412ef0ca6c8c64e" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;http://php.net/manual/en/book.intl.php&quot;&gt;PHP intl extension&lt;/a&gt; is not available, setting this property will have no effect.</source>
          <target state="translated">如果&lt;a href=&quot;http://php.net/manual/en/book.intl.php&quot;&gt;PHP intl扩展&lt;/a&gt;不可用，则设置此属性将无效。</target>
        </trans-unit>
        <trans-unit id="d548f466d5ce622d4ab816a0ad22b2b305414daf" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://php.net/manual/en/book.intl.php&quot;&gt;PHP intl extension&lt;/a&gt; is not available, setting this property will have no effect.</source>
          <target state="translated">如果&lt;a href=&quot;https://php.net/manual/en/book.intl.php&quot;&gt;PHP intl扩展名&lt;/a&gt;不可用，则设置此属性将无效。</target>
        </trans-unit>
        <trans-unit id="0b63857e685d3fab747cd3889c9245f048f5dbcc" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;yii-base-controller#%24layout-detail&quot;&gt;yii\base\Controller::$layout&lt;/a&gt; property of the controller is &lt;code&gt;null&lt;/code&gt;, search through all ancestor modules (including the application itself) of the controller and find the first module whose &lt;a href=&quot;yii-base-module#%24layout-detail&quot;&gt;layout&lt;/a&gt; property is not &lt;code&gt;null&lt;/code&gt;. Use that module and its &lt;a href=&quot;yii-base-module#%24layout-detail&quot;&gt;layout&lt;/a&gt; value as the context module and the chosen layout value. If such a module cannot be found, it means no layout will be applied.</source>
          <target state="translated">如果&lt;a href=&quot;yii-base-controller#%24layout-detail&quot;&gt;控制器&lt;/a&gt;的yii \ base \ Controller :: $ layout属性为 &lt;code&gt;null&lt;/code&gt; ，则搜索控制器的所有祖先模块（包括应用程序本身），并找到其&lt;a href=&quot;yii-base-module#%24layout-detail&quot;&gt;layout&lt;/a&gt;属性不为 &lt;code&gt;null&lt;/code&gt; 的第一个模块。使用该模块及其&lt;a href=&quot;yii-base-module#%24layout-detail&quot;&gt;布局&lt;/a&gt;值作为上下文模块和所选的布局值。如果找不到这样的模块，则意味着不会应用任何布局。</target>
        </trans-unit>
        <trans-unit id="3c9cba2b12960d3694209b568c8e5b827f1dd561" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;yii-base-controller#%24layout-detail&quot;&gt;yii\base\Controller::$layout&lt;/a&gt; property of the controller is not &lt;code&gt;null&lt;/code&gt;, use it as the layout value and the &lt;a href=&quot;yii-base-controller#%24module-detail&quot;&gt;module&lt;/a&gt; of the controller as the context module.</source>
          <target state="translated">如果&lt;a href=&quot;yii-base-controller#%24layout-detail&quot;&gt;控制器&lt;/a&gt;的yii \ base \ Controller :: $ layout属性不为 &lt;code&gt;null&lt;/code&gt; ，则将其用作布局值，并将控制器的&lt;a href=&quot;yii-base-controller#%24module-detail&quot;&gt;模块&lt;/a&gt;用作上下文模块。</target>
        </trans-unit>
        <trans-unit id="15e659462542fcd8ac528aac9d835aacc6e70a24" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;yii-elasticsearch-activerecord#primaryKey()-detail&quot;&gt;primary key&lt;/a&gt; is not set (null) during insertion, it will be populated with a &lt;a href=&quot;http://www.elastic.co/guide/en/elasticsearch/reference/current/docs-index_.html#_automatic_id_generation&quot;&gt;randomly generated value&lt;/a&gt; after insertion.</source>
          <target state="translated">如果在插入过程中未设置&lt;a href=&quot;yii-elasticsearch-activerecord#primaryKey()-detail&quot;&gt;主键&lt;/a&gt;（空），则在插入后将使用&lt;a href=&quot;http://www.elastic.co/guide/en/elasticsearch/reference/current/docs-index_.html#_automatic_id_generation&quot;&gt;随机生成的值&lt;/a&gt;填充主键。</target>
        </trans-unit>
        <trans-unit id="a6a90912f23d9d658b6a032f35aa0c4ca139ee32" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;yii-elasticsearch-activerecord#primaryKey()-detail&quot;&gt;primary key&lt;/a&gt; is not set (null) during insertion, it will be populated with a &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-index_.html#_automatic_id_generation&quot;&gt;randomly generated value&lt;/a&gt; after insertion.</source>
          <target state="translated">如果在插入过程中未设置&lt;a href=&quot;yii-elasticsearch-activerecord#primaryKey()-detail&quot;&gt;主键&lt;/a&gt;（空），则在插入后将使用&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-index_.html#_automatic_id_generation&quot;&gt;随机生成的值&lt;/a&gt;填充主键。</target>
        </trans-unit>
        <trans-unit id="60c3e09752f4cccf4e25e0bc8b62b7ef3900924e" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;yii-validators-regularexpressionvalidator#%24not-detail&quot;&gt;$not&lt;/a&gt; property is set true, the validator will ensure the attribute value do NOT match the &lt;a href=&quot;yii-validators-regularexpressionvalidator#%24pattern-detail&quot;&gt;$pattern&lt;/a&gt;.</source>
          <target state="translated">如果&lt;a href=&quot;yii-validators-regularexpressionvalidator#%24not-detail&quot;&gt;$ not&lt;/a&gt;属性设置为true，则验证器将确保属性值与&lt;a href=&quot;yii-validators-regularexpressionvalidator#%24pattern-detail&quot;&gt;$ pattern&lt;/a&gt;不匹配。</target>
        </trans-unit>
        <trans-unit id="b726822910d28d332236ad4e701764ee8dab2771" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$eagerLoading&lt;/code&gt; parameter is true, the method will also perform eager loading for the specified relations, which is equivalent to calling &lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;with()&lt;/a&gt; using the specified relations.</source>
          <target state="translated">如果 &lt;code&gt;$eagerLoading&lt;/code&gt; 参数为true，则该方法还将对指定的关系执行预加载，这等效于使用指定的关系调用&lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;with（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4b3e451a466028d2dddaffb05f79610042b56865" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$key&lt;/code&gt; attribute or its value for the particular element is &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;$groups&lt;/code&gt; is not defined, the array element will be discarded. Otherwise, if &lt;code&gt;$groups&lt;/code&gt; is specified, array element will be added to the result array without any key.</source>
          <target state="translated">如果 &lt;code&gt;$key&lt;/code&gt; 对特定元素的属性，或者其值 &lt;code&gt;null&lt;/code&gt; 和 &lt;code&gt;$groups&lt;/code&gt; 没有被定义，则数组元素将被丢弃。否则，如果指定了 &lt;code&gt;$groups&lt;/code&gt; ，则将不使用任何键将数组元素添加到结果数组中。</target>
        </trans-unit>
        <trans-unit id="f833d8e783f409cda178c69f0e5fc2ce24108bdf" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$key&lt;/code&gt; is specified as &lt;code&gt;null&lt;/code&gt; or a value of an element corresponding to the key is &lt;code&gt;null&lt;/code&gt; in addition to &lt;code&gt;$groups&lt;/code&gt; not specified then the element is discarded.</source>
          <target state="translated">如果 &lt;code&gt;$key&lt;/code&gt; 被指定为 &lt;code&gt;null&lt;/code&gt; 或除未指定的 &lt;code&gt;$groups&lt;/code&gt; 之外，与该键对应的元素的值为 &lt;code&gt;null&lt;/code&gt; ，则该元素将被丢弃。</target>
        </trans-unit>
        <trans-unit id="92f05b9592fa5b6440250467f8b030637944b9f9" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;extends&lt;/code&gt; option is specified, it will also check if the class is a child class of the class represented by the &lt;code&gt;extends&lt;/code&gt; option.</source>
          <target state="translated">如果指定了 &lt;code&gt;extends&lt;/code&gt; 选项，还将检查该类是否是由 &lt;code&gt;extends&lt;/code&gt; 选项代表的类的子类。</target>
        </trans-unit>
        <trans-unit id="fb860477def6ff786d16a900f8897215f952839b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;init()&lt;/code&gt; method contains a lot of code initializing the module's properties, you may also save them in terms of a &lt;a href=&quot;guide-concept-configurations&quot;&gt;configuration&lt;/a&gt; and load it with the following code in &lt;code&gt;init()&lt;/code&gt;:</source>
          <target state="translated">如果 &lt;code&gt;init()&lt;/code&gt; 方法包含大量初始化模块属性的代码，则您还可以根据&lt;a href=&quot;guide-concept-configurations&quot;&gt;配置&lt;/a&gt;保存它们，并在 &lt;code&gt;init()&lt;/code&gt; 中使用以下代码加载它：</target>
        </trans-unit>
        <trans-unit id="4ccc9c9de135774c682ee962ad83a69c75ff0165" translate="yes" xml:space="preserve">
          <source>If the CSS class is already in the options, it will not be added again. If class specification at given options is an array, and some class placed there with the named (string) key, overriding of such key will have no effect. For example:</source>
          <target state="translated">如果CSS类已经在选项中,将不会再添加。如果给定的选项中的类规范是一个数组,并且某个类以命名(字符串)键放在那里,那么覆盖这个键将不会有任何效果。例如</target>
        </trans-unit>
        <trans-unit id="319699e7d35150aed7560472fd2a4efd71efb896" translate="yes" xml:space="preserve">
          <source>If the CSS class option is specified using the array style, you may use a named key to mark the logical purpose of the class. In this case, a class with the same key in the array style will be ignored in &lt;code&gt;Html::addCssClass()&lt;/code&gt;:</source>
          <target state="translated">如果使用数组样式指定了CSS类选项，则可以使用命名键来标记类的逻辑用途。在这种情况下，数组样式中具有相同键的类将在 &lt;code&gt;Html::addCssClass()&lt;/code&gt; 被忽略：</target>
        </trans-unit>
        <trans-unit id="fe435042db98105dfeb61298abc6cb52667537ce" translate="yes" xml:space="preserve">
          <source>If the DB table does not declare any primary key, you should override this method to return the attributes that you want to use as primary keys for this AR class.</source>
          <target state="translated">如果DB表没有声明任何主键,你应该覆盖这个方法来返回你想作为这个AR类主键的属性。</target>
        </trans-unit>
        <trans-unit id="7e7904588bfd946f23764cda2151317184f585d5" translate="yes" xml:space="preserve">
          <source>If the GET parameter does not exist, the second parameter passed to this method will be returned.</source>
          <target state="translated">如果GET参数不存在,将返回传递给本方法的第二个参数。</target>
        </trans-unit>
        <trans-unit id="831d7a47f15e87ddeb56c28687b69570124aca33" translate="yes" xml:space="preserve">
          <source>If the abstract type contains two or more parts separated by spaces (e.g. &quot;string NOT NULL&quot;), then only the first part will be converted, and the rest of the parts will be appended to the converted result. For example, 'string NOT NULL' is converted to 'varchar(255) NOT NULL'.</source>
          <target state="translated">如果抽象类型包含两个或多个用空格隔开的部分(例如 &quot;string NOT NULL&quot;),那么只有第一个部分将被转换,其余部分将被追加到转换结果中。例如,&quot;string NOT NULL &quot;被转换为 &quot;varchar(255)NOT NULL&quot;。</target>
        </trans-unit>
        <trans-unit id="34509f6ce379bc4a2ec1f4e2efa95f17d40bb35e" translate="yes" xml:space="preserve">
          <source>If the action ID is empty, the method will use &lt;a href=&quot;yii-base-controller#%24defaultAction-detail&quot;&gt;$defaultAction&lt;/a&gt;.</source>
          <target state="translated">如果操作ID为空，则该方法将使用&lt;a href=&quot;yii-base-controller#%24defaultAction-detail&quot;&gt;$ defaultAction&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="46b7fb124fee260f3f8c361111dd42e02cc9788f" translate="yes" xml:space="preserve">
          <source>If the action ID is found in the &lt;a href=&quot;yii-base-controller#actions()-detail&quot;&gt;action map&lt;/a&gt;, a standalone action will be created;</source>
          <target state="translated">如果在&lt;a href=&quot;yii-base-controller#actions()-detail&quot;&gt;动作图中&lt;/a&gt;找到了动作ID ，则将创建一个独立的动作；否则，将创建一个独立动作。</target>
        </trans-unit>
        <trans-unit id="0795366db3f4de44ba4856acc0a941ce474a80d9" translate="yes" xml:space="preserve">
          <source>If the action ID is found to match an action method, an inline action will be created;</source>
          <target state="translated">如果发现动作ID与动作方法匹配,就会创建一个内联动作。</target>
        </trans-unit>
        <trans-unit id="6caa330420e94f90c46774207afa96fbca0e9d4e" translate="yes" xml:space="preserve">
          <source>If the action ID is not specified, the &lt;a href=&quot;yii-base-controller#%24defaultAction-detail&quot;&gt;default action ID&lt;/a&gt; will be used.</source>
          <target state="translated">如果未指定&lt;a href=&quot;yii-base-controller#%24defaultAction-detail&quot;&gt;操作ID，&lt;/a&gt;则将使用默认操作ID。</target>
        </trans-unit>
        <trans-unit id="e86c07d7c07aa69f441f7c0d2ac335abde6a1764" translate="yes" xml:space="preserve">
          <source>If the anonymous function requires some data from the outer scope, you can pass it with the &lt;code&gt;use&lt;/code&gt; statement. For example:</source>
          <target state="translated">如果匿名函数需要外部作用域的某些数据，则可以 &lt;code&gt;use&lt;/code&gt; 语句传递它。例如：</target>
        </trans-unit>
        <trans-unit id="4d37b040e8c9d874ff5a34d05cde58a8b9cf80ab" translate="yes" xml:space="preserve">
          <source>If the asset is a directory, all files and subdirectories under it will be published recursively. Note, in case $forceCopy is false the method only checks the existence of the target directory to avoid repetitive copying (which is very expensive).</source>
          <target state="translated">如果asset是一个目录,那么它下面的所有文件和子目录将被递归发布。注意,如果$forceCopy为false,则该方法只检查目标目录的存在,以避免重复复制(这是非常昂贵的)。</target>
        </trans-unit>
        <trans-unit id="7a9beab4c907cdc1337c3b83420284e62f0d48d3" translate="yes" xml:space="preserve">
          <source>If the asset is a file, its file modification time will be checked to avoid unnecessary file copying.</source>
          <target state="translated">如果资产是一个文件,将检查其文件修改时间,以避免不必要的文件复制。</target>
        </trans-unit>
        <trans-unit id="43a15ff763a3efa8200fece736f8781e56a9022b" translate="yes" xml:space="preserve">
          <source>If the attribute is NOT a data attribute, the value will be JSON-encoded. For example, &lt;code&gt;['params' =&amp;gt; ['id' =&amp;gt; 1, 'name' =&amp;gt; 'yii']&lt;/code&gt; generates &lt;code&gt;params='{&quot;id&quot;:1,&quot;name&quot;:&quot;yii&quot;}'&lt;/code&gt;.</source>
          <target state="translated">如果该属性不是数据属性，则该值将进行JSON编码。例如， &lt;code&gt;['params' =&amp;gt; ['id' =&amp;gt; 1, 'name' =&amp;gt; 'yii']&lt;/code&gt; 生成 &lt;code&gt;params='{&quot;id&quot;:1,&quot;name&quot;:&quot;yii&quot;}'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c21572ff46d266cfa6f711b9ed2f6e413847c270" translate="yes" xml:space="preserve">
          <source>If the attribute is a data attribute as listed in &lt;a href=&quot;yii-helpers-basehtml#%24dataAttributes-detail&quot;&gt;yii\helpers\Html::$dataAttributes&lt;/a&gt;, such as &lt;code&gt;data&lt;/code&gt; or &lt;code&gt;ng&lt;/code&gt;, a list of attributes will be rendered, one for each element in the value array. For example, &lt;code&gt;'data' =&amp;gt; ['id' =&amp;gt; 1, 'name' =&amp;gt; 'yii']&lt;/code&gt; generates &lt;code&gt;data-id=&quot;1&quot; data-name=&quot;yii&quot;&lt;/code&gt;; and &lt;code&gt;'data' =&amp;gt; ['params' =&amp;gt; ['id' =&amp;gt; 1, 'name' =&amp;gt; 'yii'], 'status' =&amp;gt; 'ok']&lt;/code&gt; generates &lt;code&gt;data-params='{&quot;id&quot;:1,&quot;name&quot;:&quot;yii&quot;}' data-status=&quot;ok&quot;&lt;/code&gt;. Note that in the latter example JSON format is used to render a sub-array.</source>
          <target state="translated">如果该属性是&lt;a href=&quot;yii-helpers-basehtml#%24dataAttributes-detail&quot;&gt;yii \ helpers \ Html :: $ dataAttributes中&lt;/a&gt;列出的数据属性，例如 &lt;code&gt;data&lt;/code&gt; 或 &lt;code&gt;ng&lt;/code&gt; ，则将呈现一个属性列表，每个值数组中的一个元素。例如， &lt;code&gt;'data' =&amp;gt; ['id' =&amp;gt; 1, 'name' =&amp;gt; 'yii']&lt;/code&gt; 生成 &lt;code&gt;data-id=&quot;1&quot; data-name=&quot;yii&quot;&lt;/code&gt; ;和 &lt;code&gt;'data' =&amp;gt; ['params' =&amp;gt; ['id' =&amp;gt; 1, 'name' =&amp;gt; 'yii'], 'status' =&amp;gt; 'ok']&lt;/code&gt; 生成 &lt;code&gt;data-params='{&quot;id&quot;:1,&quot;name&quot;:&quot;yii&quot;}' data-status=&quot;ok&quot;&lt;/code&gt; 。请注意，在后一个示例中，JSON格式用于呈现子数组。</target>
        </trans-unit>
        <trans-unit id="f7eb995867a2b5c0f548cc0689286ae195f21536" translate="yes" xml:space="preserve">
          <source>If the attribute looks like &lt;code&gt;relatedModel.attribute&lt;/code&gt;, then the attribute will be received from the related model.</source>
          <target state="translated">如果属性看起来像 &lt;code&gt;relatedModel.attribute&lt;/code&gt; ，那么将从相关模型接收该属性。</target>
        </trans-unit>
        <trans-unit id="991357ecb7a52cf2c1b0a8fcc6b21099023f377b" translate="yes" xml:space="preserve">
          <source>If the cache already contains such a key, the existing value and expiration time will be preserved.</source>
          <target state="translated">如果缓存中已经包含了这样一个密钥,那么现有的值和过期时间将被保留。</target>
        </trans-unit>
        <trans-unit id="f5328dbd14665e4d191562a915b68e87d3f63e77" translate="yes" xml:space="preserve">
          <source>If the cache already contains such a key, the existing value and expiration time will be replaced with the new ones, respectively.</source>
          <target state="translated">如果缓存中已经包含了这样一个键,那么现有的值和过期时间将分别被新的值和过期时间所取代。</target>
        </trans-unit>
        <trans-unit id="d4d29c734e6c7ab6e36766949e5193d4328bded3" translate="yes" xml:space="preserve">
          <source>If the cache already contains such a key, the existing value will be replaced with the new ones. To add expiration and dependencies, use the &lt;a href=&quot;yii-caching-cache#set()-detail&quot;&gt;set()&lt;/a&gt; method. This method is required by the interface &lt;a href=&quot;http://www.php.net/class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;.</source>
          <target state="translated">如果缓存中已经包含这样的键，则现有值将被新的值替换。要添加到期和依赖关系，请使用&lt;a href=&quot;yii-caching-cache#set()-detail&quot;&gt;set（）&lt;/a&gt;方法。接口&lt;a href=&quot;http://www.php.net/class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;需要此方法。</target>
        </trans-unit>
        <trans-unit id="71c6ecd8fecfd5bf5b80a4e9fa08aab627852f4c" translate="yes" xml:space="preserve">
          <source>If the class implements &lt;a href=&quot;yii-base-configurable&quot;&gt;yii\base\Configurable&lt;/a&gt;, the &lt;code&gt;$config&lt;/code&gt; parameter will be passed as the last parameter to the class constructor; Otherwise, the configuration will be applied &lt;em&gt;after&lt;/em&gt; the object is instantiated.</source>
          <target state="translated">如果该类实现&lt;a href=&quot;yii-base-configurable&quot;&gt;yii \ base \ Configurable&lt;/a&gt;，则 &lt;code&gt;$config&lt;/code&gt; 参数将作为最后一个参数传递给类构造函数；否则，将在实例化对象&lt;em&gt;后&lt;/em&gt;应用配置。</target>
        </trans-unit>
        <trans-unit id="ffb0e8dd94449e34cb4791fce13eb2f285ccd815" translate="yes" xml:space="preserve">
          <source>If the class is namespaced (e.g. &lt;code&gt;yii\base\Component&lt;/code&gt;), it will attempt to include the file associated with the corresponding path alias (e.g. &lt;code&gt;@yii/base/Component.php&lt;/code&gt;);</source>
          <target state="translated">如果该类具有名称空间（例如 &lt;code&gt;yii\base\Component&lt;/code&gt; ），它将尝试包括与相应路径别名关联的文件（例如 &lt;code&gt;@yii/base/Component.php&lt;/code&gt; ）；</target>
        </trans-unit>
        <trans-unit id="46a49bf5074f1e23d2e11e0c2533c509d2543bd4" translate="yes" xml:space="preserve">
          <source>If the client is already authenticated and is simply not allowed to perform the action, consider using a 403 &lt;a href=&quot;yii-web-forbiddenhttpexception&quot;&gt;yii\web\ForbiddenHttpException&lt;/a&gt; or 404 &lt;a href=&quot;yii-web-notfoundhttpexception&quot;&gt;yii\web\NotFoundHttpException&lt;/a&gt; instead.</source>
          <target state="translated">如果客户端已经通过身份验证，并且完全不允许执行该操作，请考虑改用403 &lt;a href=&quot;yii-web-forbiddenhttpexception&quot;&gt;yii \ web \ ForbiddenHttpException&lt;/a&gt;或404 &lt;a href=&quot;yii-web-notfoundhttpexception&quot;&gt;yii \ web \ NotFoundHttpException&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a4afb3ae4826775361cb53807e80ec0513aba0e3" translate="yes" xml:space="preserve">
          <source>If the column name contains prefix, the prefix will also be properly quoted. If the column name is already quoted or contains '(', '[[' or '{{', then this method will do nothing.</source>
          <target state="translated">如果列名包含前缀,那么前缀也将被正确引用。如果列名已经被引用或包含'(','[['或'{',那么本方法将不做任何操作。</target>
        </trans-unit>
        <trans-unit id="111ea23a815468b8542654d9ba8e50b3b2db6c86" translate="yes" xml:space="preserve">
          <source>If the column name contains prefix, the prefix will also be properly quoted. If the column name is already quoted or contains special characters including '(', '[[' and '{{', then this method will do nothing.</source>
          <target state="translated">如果列名中包含前缀,那么前缀也将被正确引用。如果列名已经被引用或包含特殊字符,包括'('、'[[['和'{',那么本方法将不做任何操作。</target>
        </trans-unit>
        <trans-unit id="78ed0e45182c28a5a62d90af60d34815bfcb9387" translate="yes" xml:space="preserve">
          <source>If the controller is created successfully, it will be returned together with the requested action ID. Otherwise &lt;code&gt;false&lt;/code&gt; will be returned.</source>
          <target state="translated">如果控制器创建成功，它将与请求的操作ID一起返回。否则将返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8df51f10a10aa23c96c3fbba561e221c7a96ad1e" translate="yes" xml:space="preserve">
          <source>If the current user is Jane with &lt;code&gt;ID=1&lt;/code&gt; we are starting at &lt;code&gt;createPost&lt;/code&gt; and trying to get to &lt;code&gt;Jane&lt;/code&gt;:</source>
          <target state="translated">如果当前用户是 &lt;code&gt;ID=1&lt;/code&gt; 的 Jane，那么我们将从 &lt;code&gt;createPost&lt;/code&gt; 开始并尝试进入 &lt;code&gt;Jane&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="f671841eb513a2d78326da7dc330c2d4543ccb40" translate="yes" xml:space="preserve">
          <source>If the cursor is already at the edge of the screen, this has no effect.</source>
          <target state="translated">如果光标已经在屏幕的边缘,则没有任何影响。</target>
        </trans-unit>
        <trans-unit id="4f536e333a3f9ab34a0f84bbeffbce31a916292f" translate="yes" xml:space="preserve">
          <source>If the data file does not exist, an empty array will be returned.</source>
          <target state="translated">如果数据文件不存在,将返回一个空数组。</target>
        </trans-unit>
        <trans-unit id="9e07282e7c4fe55930d9abaedca212205f5be171" translate="yes" xml:space="preserve">
          <source>If the data model is not found, a 404 HTTP exception will be raised.</source>
          <target state="translated">如果找不到数据模型,将引发404 HTTP异常。</target>
        </trans-unit>
        <trans-unit id="1089463ec3410a7e5667dfdf26e0d44cbaa1c8e9" translate="yes" xml:space="preserve">
          <source>If the database supports transactions, you may also override &lt;a href=&quot;yii-db-migration#safeUp()-detail&quot;&gt;safeUp()&lt;/a&gt; and &lt;a href=&quot;yii-db-migration#safeDown()-detail&quot;&gt;safeDown()&lt;/a&gt; so that if anything wrong happens during the upgrading or downgrading, the whole migration can be reverted in a whole.</source>
          <target state="translated">如果数据库支持事务，则还可以覆盖&lt;a href=&quot;yii-db-migration#safeUp()-detail&quot;&gt;safeUp（）&lt;/a&gt;和&lt;a href=&quot;yii-db-migration#safeDown()-detail&quot;&gt;safeDown（），&lt;/a&gt;以便在升级或降级期间发生任何错误时，可以整体还原整个迁移。</target>
        </trans-unit>
        <trans-unit id="965be86d15b1c168d72ddc33107636b6de7a8c0d" translate="yes" xml:space="preserve">
          <source>If the default value of an option is of an array type and you set this option while running the command, the option value will be converted into an array by splitting the input string on any commas.</source>
          <target state="translated">如果一个选项的默认值是一个数组类型,而你在运行命令时设置了这个选项,那么选项的值将通过分割输入字符串上的任何逗号转换成一个数组。</target>
        </trans-unit>
        <trans-unit id="18852f402d118c92ad33505eee22e5c4e36dac5e" translate="yes" xml:space="preserve">
          <source>If the exception that you want to throw is not among the above list, you may create one by extending from &lt;a href=&quot;yii-web-httpexception&quot;&gt;yii\web\HttpException&lt;/a&gt;, or directly throw it with a status code, for example,</source>
          <target state="translated">如果您要抛出的异常不在上面的列表中，则可以通过从&lt;a href=&quot;yii-web-httpexception&quot;&gt;yii \ web \ HttpException&lt;/a&gt;扩展来创建一个异常，或者直接使用状态代码将其抛出，例如，</target>
        </trans-unit>
        <trans-unit id="a167e3b831b3c5c7691a7a82b3b2435dccb0cf2c" translate="yes" xml:space="preserve">
          <source>If the extension displays messages intended for end users, the messages should be wrapped into &lt;code&gt;Yii::t()&lt;/code&gt; so that they can be translated. Messages meant for developers (such as internal exception messages) do not need to be translated.</source>
          <target state="translated">如果扩展名显示了针对最终用户的消息，则应将消息包装到 &lt;code&gt;Yii::t()&lt;/code&gt; 以便可以进行翻译。发给开发人员的消息（例如内部异常消息）不需要翻译。</target>
        </trans-unit>
        <trans-unit id="7268ec4ffbf2e0f2000f9e900ab403b03f3ecbea" translate="yes" xml:space="preserve">
          <source>If the extension displays numbers, dates, etc., they should be formatted using &lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii\i18n\Formatter&lt;/a&gt; with appropriate formatting rules.</source>
          <target state="translated">如果扩展名显示数字，日期等，则应使用&lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii \ i18n \ Formatter&lt;/a&gt;按照适当的格式设置规则对其进行格式化。</target>
        </trans-unit>
        <trans-unit id="9ee396891cae37eb2190c50fe42731292e994321" translate="yes" xml:space="preserve">
          <source>If the extension is installed, the bootstrap information will be saved in &lt;a href=&quot;yii-base-application#%24extensions-detail&quot;&gt;yii\base\Application::$extensions&lt;/a&gt;.</source>
          <target state="translated">如果安装了扩展名，引导程序信息将保存在&lt;a href=&quot;yii-base-application#%24extensions-detail&quot;&gt;yii \ base \ Application :: $ extensions中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c95b6ef1844724f6f2cef65a0c30130d32d60871" translate="yes" xml:space="preserve">
          <source>If the first segment of the route is a valid module ID as declared in &lt;a href=&quot;yii-base-module#%24modules-detail&quot;&gt;$modules&lt;/a&gt;, call the module's &lt;code&gt;createController()&lt;/code&gt; with the rest part of the route;</source>
          <target state="translated">如果路由的第一段是&lt;a href=&quot;yii-base-module#%24modules-detail&quot;&gt;$ modules中&lt;/a&gt;声明的有效模块ID ，则使用路由的其余部分调用模块的 &lt;code&gt;createController()&lt;/code&gt; ；否则，将调用该模块的createController（）。</target>
        </trans-unit>
        <trans-unit id="5682a6ad10f54d1ab8de6e8e26878747ecf83b26" translate="yes" xml:space="preserve">
          <source>If the first segment of the route is found in &lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;$controllerMap&lt;/a&gt;, create a controller based on the corresponding configuration found in &lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;$controllerMap&lt;/a&gt;;</source>
          <target state="translated">如果在&lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;$ controllerMap中&lt;/a&gt;找到路由的第一段，则根据&lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;$ controllerMap中&lt;/a&gt;找到的相应配置创建一个控制器。</target>
        </trans-unit>
        <trans-unit id="67c5b4daf81f8105e3129be53ee97325c66c6d89" translate="yes" xml:space="preserve">
          <source>If the given alias does not start with '@', it is returned back without change;</source>
          <target state="translated">如果给定的别名不是以'@'开头的,则会原封不动地返回。</target>
        </trans-unit>
        <trans-unit id="e6299b014135cdc2ea19d847471fe7cf0a177496" translate="yes" xml:space="preserve">
          <source>If the given key is a string containing alphanumeric characters only and no more than 32 characters, then the key will be returned back prefixed with &lt;a href=&quot;yii-caching-cache#%24keyPrefix-detail&quot;&gt;$keyPrefix&lt;/a&gt;. Otherwise, a normalized key is generated by serializing the given key, applying MD5 hashing, and prefixing with &lt;a href=&quot;yii-caching-cache#%24keyPrefix-detail&quot;&gt;$keyPrefix&lt;/a&gt;.</source>
          <target state="translated">如果给定密钥是仅包含字母数字字符且不超过32个字符的字符串，则该密钥将以&lt;a href=&quot;yii-caching-cache#%24keyPrefix-detail&quot;&gt;$ keyPrefix&lt;/a&gt;为前缀返回。否则，通过序列化给定密钥，应用MD5哈希并以&lt;a href=&quot;yii-caching-cache#%24keyPrefix-detail&quot;&gt;$ keyPrefix作为&lt;/a&gt;前缀来生成标准化密钥。</target>
        </trans-unit>
        <trans-unit id="d0725036f254f8eb438ca8c976d7d67fa9628356" translate="yes" xml:space="preserve">
          <source>If the given key is a string containing alphanumeric characters only and no more than 32 characters, then the key will be returned back prefixed with \yii\caching\keyPrefix. Otherwise, a normalized key is generated by serializing the given key, applying MD5 hashing, and prefixing with \yii\caching\keyPrefix.</source>
          <target state="translated">如果给定的密钥是一个只包含字母数字字符的字符串,并且不超过32个字符,那么密钥将被返回,前缀为yyii/caching/keyPrefix。否则,一个归一化的密钥将通过序列化给定的密钥,应用MD5散列,并在前缀为yii/caching/keyPrefix来生成。</target>
        </trans-unit>
        <trans-unit id="63a25578aee6a19c0bbc1e83352adb9b15a44c4d" translate="yes" xml:space="preserve">
          <source>If the index name contains schema prefix, the prefix will also be properly quoted. If the index name is already quoted or contains '(' or '{{', then this method will do nothing.</source>
          <target state="translated">如果索引名包含schema前缀,那么前缀也会被适当地引用,如果索引名已经被引用或者包含'('或'{{',那么这个方法不会做任何事情。如果索引名已经被引用或包含'('或'{{',那么本方法将不做任何操作。</target>
        </trans-unit>
        <trans-unit id="7b15c4cb7241e973ebeffe74ebed5ab0b57b9271" translate="yes" xml:space="preserve">
          <source>If the index name contains schema prefix, the prefix will also be properly quoted. If the index name is already quoted or contains special characters including '(', '[[' and '{{', then this method will do nothing.</source>
          <target state="translated">如果索引名包含模式前缀,那么前缀也将被适当地引用。如果索引名已经被引用或包含特殊字符,包括'('、'[[['和'{',那么本方法将不做任何操作。</target>
        </trans-unit>
        <trans-unit id="cb65208309929f0205b374bd46d3b2d18e00ca4a" translate="yes" xml:space="preserve">
          <source>If the intl extension is not installed, the data will not be localized.</source>
          <target state="translated">如果没有安装intl扩展,数据将不会被本地化。</target>
        </trans-unit>
        <trans-unit id="eb04bced2b762b5611e2073ca497d3a3cec5aba0" translate="yes" xml:space="preserve">
          <source>If the item does not specify a rule, this method will return true. Otherwise, it will return the value of &lt;a href=&quot;yii-rbac-rule#execute()-detail&quot;&gt;yii\rbac\Rule::execute()&lt;/a&gt;.</source>
          <target state="translated">如果该项未指定规则，则此方法将返回true。否则，它将返回&lt;a href=&quot;yii-rbac-rule#execute()-detail&quot;&gt;yii \ rbac \ Rule :: execute（）的值&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="464d5c7723263a6e210a472995e8a1ef86cb868c" translate="yes" xml:space="preserve">
          <source>If the key does not exist in the array or object, the default value will be returned instead.</source>
          <target state="translated">如果键在数组或对象中不存在,将返回默认值。</target>
        </trans-unit>
        <trans-unit id="28abaad2dab1c192a41509dcaa3373d20cbb10ff" translate="yes" xml:space="preserve">
          <source>If the last modification time of the file specified via &lt;a href=&quot;yii-caching-filedependency#%24fileName-detail&quot;&gt;$fileName&lt;/a&gt; is changed, the dependency is considered as changed.</source>
          <target state="translated">如果通过&lt;a href=&quot;yii-caching-filedependency#%24fileName-detail&quot;&gt;$ fileName&lt;/a&gt;指定的文件的最后修改时间被更改，则该依赖关系被视为已更改。</target>
        </trans-unit>
        <trans-unit id="f10872e3d505c91361fc20a27e2e7c9f26a0e4ed" translate="yes" xml:space="preserve">
          <source>If the layout name does not contain a file extension, it will use the default one &lt;code&gt;.php&lt;/code&gt;.</source>
          <target state="translated">如果布局名称不包含文件扩展名，它将使用默认的 &lt;code&gt;.php&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1adfaa28635e75391026a3fab1af3f10b8633727" translate="yes" xml:space="preserve">
          <source>If the layout value does not contain a file extension, it will use the default one &lt;code&gt;.php&lt;/code&gt;.</source>
          <target state="translated">如果layout值不包含文件扩展名，它将使用默认的 &lt;code&gt;.php&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f99bbb69debee97ab3722854804d80e833c99f6d" translate="yes" xml:space="preserve">
          <source>If the message is not found, a &lt;a href=&quot;yii-i18n-messagesource#EVENT_MISSING_TRANSLATION-detail&quot;&gt;missingTranslation&lt;/a&gt; event will be triggered. If there is an event handler, it may provide a &lt;a href=&quot;yii-i18n-missingtranslationevent#%24translatedMessage-detail&quot;&gt;fallback translation&lt;/a&gt;. If no fallback translation is provided this method will return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果未找到该消息，则会触发&lt;a href=&quot;yii-i18n-messagesource#EVENT_MISSING_TRANSLATION-detail&quot;&gt;MissingTranslation&lt;/a&gt;事件。如果有事件处理程序，则可以提供&lt;a href=&quot;yii-i18n-missingtranslationevent#%24translatedMessage-detail&quot;&gt;后备翻译&lt;/a&gt;。如果未提供回退转换，则此方法将返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e53480c37a69c20f9e07010c9df1433b41f36e9" translate="yes" xml:space="preserve">
          <source>If the migration name is of a special form, for example &lt;code&gt;create_xxx_table&lt;/code&gt; or &lt;code&gt;drop_xxx_table&lt;/code&gt; then the generated migration file will contain extra code, in this case for creating/dropping tables. In the following all variants of this feature are described.</source>
          <target state="translated">如果迁移名称采用特殊形式，例如 &lt;code&gt;create_xxx_table&lt;/code&gt; 或 &lt;code&gt;drop_xxx_table&lt;/code&gt; ,则生成的迁移文件将包含额外的代码，在这种情况下，用于创建/删除表。在下文中，将描述此功能的所有变体。</target>
        </trans-unit>
        <trans-unit id="37737e37d6c6ba206e741a4a589339ee4135543e" translate="yes" xml:space="preserve">
          <source>If the migration name is of the form &lt;code&gt;add_xxx_column_to_yyy_table&lt;/code&gt; then the file content would contain &lt;code&gt;addColumn&lt;/code&gt; and &lt;code&gt;dropColumn&lt;/code&gt; statements necessary.</source>
          <target state="translated">如果迁移名称的格式为 &lt;code&gt;add_xxx_column_to_yyy_table&lt;/code&gt; ,则文件内容将包含必要的 &lt;code&gt;addColumn&lt;/code&gt; 和 &lt;code&gt;dropColumn&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="83f6ba1dabb2953813fc6afa2504fa618fa75641" translate="yes" xml:space="preserve">
          <source>If the migration name is of the form &lt;code&gt;create_junction_table_for_xxx_and_yyy_tables&lt;/code&gt; or &lt;code&gt;create_junction_xxx_and_yyy_tables&lt;/code&gt; then code necessary to create junction table will be generated.</source>
          <target state="translated">如果迁移名称的格式为 &lt;code&gt;create_junction_table_for_xxx_and_yyy_tables&lt;/code&gt; 或 &lt;code&gt;create_junction_xxx_and_yyy_tables&lt;/code&gt; ,则将生成创建联结表所需的代码。</target>
        </trans-unit>
        <trans-unit id="f2b52716cb6e3c3f42e5862aabb33951cbe297c4" translate="yes" xml:space="preserve">
          <source>If the migration name is of the form &lt;code&gt;drop_xxx_column_from_yyy_table&lt;/code&gt; then the file content would contain &lt;code&gt;addColumn&lt;/code&gt; and &lt;code&gt;dropColumn&lt;/code&gt; statements necessary.</source>
          <target state="translated">如果迁移名称的格式为 &lt;code&gt;drop_xxx_column_from_yyy_table&lt;/code&gt; ,则文件内容将包含必要的 &lt;code&gt;addColumn&lt;/code&gt; 和 &lt;code&gt;dropColumn&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="9e25c9ac5a967181c247af86ad7118df11aa6fcf" translate="yes" xml:space="preserve">
          <source>If the model implements the &lt;a href=&quot;yii-web-linkable&quot;&gt;yii\web\Linkable&lt;/a&gt; interface, the resulting array will also have a &lt;code&gt;_link&lt;/code&gt; element which refers to a list of links as specified by the interface.</source>
          <target state="translated">如果模型实现&lt;a href=&quot;yii-web-linkable&quot;&gt;yii \ web \ Linkable&lt;/a&gt;接口，则结果数组还将具有 &lt;code&gt;_link&lt;/code&gt; 元素，该元素引用该接口指定的链接列表。</target>
        </trans-unit>
        <trans-unit id="fc6fb379798cff43ff0d7eeb05a7a08c5f067acc" translate="yes" xml:space="preserve">
          <source>If the model implements the \yii\mongodb\Linkable interface, the resulting array will also have a &lt;code&gt;_link&lt;/code&gt; element which refers to a list of links as specified by the interface.</source>
          <target state="translated">如果模型实现\ yii \ mongodb \ Linkable接口，则结果数组还将具有 &lt;code&gt;_link&lt;/code&gt; 元素，该元素引用该接口指定的链接列表。</target>
        </trans-unit>
        <trans-unit id="864c4315179c19afa9cbdfca598bd45ccabe9c46" translate="yes" xml:space="preserve">
          <source>If the module class is not currently requested, &lt;code&gt;null&lt;/code&gt; will be returned. This method is provided so that you access the module instance from anywhere within the module.</source>
          <target state="translated">如果当前不请求模块类，则将返回 &lt;code&gt;null&lt;/code&gt; 。提供此方法是为了使您可以从模块内的任何位置访问模块实例。</target>
        </trans-unit>
        <trans-unit id="314f89ffb5629d58a0d8dd7cda2b215711d540f2" translate="yes" xml:space="preserve">
          <source>If the name component ends in suffix this will also be cut off.</source>
          <target state="translated">如果名称组件以后缀结束,这也将被切断。</target>
        </trans-unit>
        <trans-unit id="b4f840a232a2bae8526e8bdc26da6fb04cecddde" translate="yes" xml:space="preserve">
          <source>If the name of such a property is the same as a class member variable, the latter will take precedence. For example, if the above &lt;code&gt;Foo&lt;/code&gt; class has a member variable &lt;code&gt;label&lt;/code&gt;, then the assignment &lt;code&gt;$object-&amp;gt;label = 'abc'&lt;/code&gt; will affect the &lt;em&gt;member variable&lt;/em&gt;&lt;code&gt;label&lt;/code&gt;; that line would not call the &lt;code&gt;setLabel()&lt;/code&gt; setter method.</source>
          <target state="translated">如果此类属性的名称与类成员变量相同，则后者优先。例如，如果上述 &lt;code&gt;Foo&lt;/code&gt; 类具有成员变量 &lt;code&gt;label&lt;/code&gt; ，则赋值 &lt;code&gt;$object-&amp;gt;label = 'abc'&lt;/code&gt; 将影响&lt;em&gt;成员变量&lt;/em&gt; &lt;code&gt;label&lt;/code&gt; ; 该行不会调用 &lt;code&gt;setLabel()&lt;/code&gt; setter方法。</target>
        </trans-unit>
        <trans-unit id="33b6177337aa1d78aed63ca0d334a34c3f7b86f6" translate="yes" xml:space="preserve">
          <source>If the named section is not supported, false will be returned.</source>
          <target state="translated">如果不支持命名部分,将返回false。</target>
        </trans-unit>
        <trans-unit id="c7ffd99a2666ace78a222547697eec2dbd191df2" translate="yes" xml:space="preserve">
          <source>If the option is not set, it will take the default value 60, which means the cached content will expire in 60 seconds.</source>
          <target state="translated">如果不设置该选项,它将采取默认值60,这意味着缓存内容将在60秒内过期。</target>
        </trans-unit>
        <trans-unit id="991632dc9c80b91464d6917b5b70313af5d5a278" translate="yes" xml:space="preserve">
          <source>If the options already contain a &lt;code&gt;style&lt;/code&gt; element, the new style will be merged with the existing one. If a CSS property exists in both the new and the old styles, the old one may be overwritten if &lt;code&gt;$overwrite&lt;/code&gt; is true.</source>
          <target state="translated">如果选项已经包含 &lt;code&gt;style&lt;/code&gt; 元素，则新样式将与现有样式合并。如果新样式和旧样式均存在CSS属性，则 &lt;code&gt;$overwrite&lt;/code&gt; 为true时，旧样式可能会被覆盖。</target>
        </trans-unit>
        <trans-unit id="bd38a58c74fc2e4fd0a9fb5cf2cdd1b5b9148919" translate="yes" xml:space="preserve">
          <source>If the parameter does not exist, the second parameter passed to this method will be returned.</source>
          <target state="translated">如果参数不存在,将返回传递给本方法的第二个参数。</target>
        </trans-unit>
        <trans-unit id="1bad09223aa6043f0b902569689ce7f36cf25067" translate="yes" xml:space="preserve">
          <source>If the primary key is null during insertion, it will be populated with the actual value after insertion.</source>
          <target state="translated">如果主键在插入过程中为空,插入后将用实际值填充。</target>
        </trans-unit>
        <trans-unit id="f93039cbd82996308b8ae0155db98d81f47dc18a" translate="yes" xml:space="preserve">
          <source>If the query result changes, the dependency is considered as changed. The query is specified via the &lt;a href=&quot;yii-caching-dbdependency#%24sql-detail&quot;&gt;$sql&lt;/a&gt; property.</source>
          <target state="translated">如果查询结果发生更改，则将依赖项视为已更改。该查询是通过&lt;a href=&quot;yii-caching-dbdependency#%24sql-detail&quot;&gt;$ sql&lt;/a&gt;属性指定的。</target>
        </trans-unit>
        <trans-unit id="d9edfc64ae3639222067d216475f59e26ba12a8e" translate="yes" xml:space="preserve">
          <source>If the query result changes, the dependency is considered as changed. The query is specified via the &lt;a href=&quot;yii-caching-dbquerydependency#%24query-detail&quot;&gt;$query&lt;/a&gt; property.</source>
          <target state="translated">如果查询结果发生更改，则将依赖项视为已更改。通过&lt;a href=&quot;yii-caching-dbquerydependency#%24query-detail&quot;&gt;$ query&lt;/a&gt;属性指定查询。</target>
        </trans-unit>
        <trans-unit id="c8d80c07f2b1c4a22cf81655e5e4686316013a15" translate="yes" xml:space="preserve">
          <source>If the refresh is successful, an &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_REFRESH-detail&quot;&gt;EVENT_AFTER_REFRESH&lt;/a&gt; event will be triggered. This event is available since version 2.0.8.</source>
          <target state="translated">如果刷新成功，将触发&lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_REFRESH-detail&quot;&gt;EVENT_AFTER_REFRESH&lt;/a&gt;事件。此事件自版本2.0.8起可用。</target>
        </trans-unit>
        <trans-unit id="77c3cf84bd28206a063a2d48b84454e1d467a717" translate="yes" xml:space="preserve">
          <source>If the relationship involves a junction table, a new row will be inserted into the junction table which contains the primary key values from both models.</source>
          <target state="translated">如果关系涉及结表,则会在结表中插入一条新的记录,该记录包含两个模型的主键值。</target>
        </trans-unit>
        <trans-unit id="0dfea4c4a20add74a144d414bb7319306468f13b" translate="yes" xml:space="preserve">
          <source>If the relationship involves a junction table, a new row will be inserted into the junction table which contains the primary key values from both records.</source>
          <target state="translated">如果关系涉及到连接表,则会在连接表中插入一条新的记录,该记录包含两个记录的主键值。</target>
        </trans-unit>
        <trans-unit id="528b86f65ddcbc43111bc59039f52bef4d29816e" translate="yes" xml:space="preserve">
          <source>If the request is sent via secure channel (https)</source>
          <target state="translated">如果请求是通过安全通道(https)发送的。</target>
        </trans-unit>
        <trans-unit id="77171108b842023023b62901521e12fa2b85b6e6" translate="yes" xml:space="preserve">
          <source>If the route contains no slashes at all (e.g. &lt;code&gt;index&lt;/code&gt;), it is considered to be an action ID of the current controller and will be prepended with &lt;a href=&quot;yii-base-controller#%24uniqueId-detail&quot;&gt;yii\web\Controller::$uniqueId&lt;/a&gt;;</source>
          <target state="translated">如果该路由根本不包含任何斜杠（例如 &lt;code&gt;index&lt;/code&gt; ），则将其视为当前控制器的操作ID，并以&lt;a href=&quot;yii-base-controller#%24uniqueId-detail&quot;&gt;yii \ web \ Controller :: $ uniqueId开头&lt;/a&gt;；</target>
        </trans-unit>
        <trans-unit id="0e4c11e702fe6ea152d353f6e5e8b5d29fc39bae" translate="yes" xml:space="preserve">
          <source>If the route contains no slashes at all, it is considered to be an action ID of the current controller and will be prepended with &lt;a href=&quot;yii-base-controller#%24uniqueId-detail&quot;&gt;yii\web\Controller::$uniqueId&lt;/a&gt;;</source>
          <target state="translated">如果路由根本不包含任何斜线，则将其视为当前控制器的操作ID，并以&lt;a href=&quot;yii-base-controller#%24uniqueId-detail&quot;&gt;yii \ web \ Controller :: $ uniqueId开头&lt;/a&gt;；</target>
        </trans-unit>
        <trans-unit id="8f199c5dc9161b654aab2fa62e45c8429d419620" translate="yes" xml:space="preserve">
          <source>If the route contains no slashes at all, it is considered to be an action ID of the current controller and will be prepended with the &lt;a href=&quot;yii-base-controller#%24uniqueId-detail&quot;&gt;uniqueId&lt;/a&gt; value of the current controller;</source>
          <target state="translated">如果路由根本不包含任何斜线，则将其视为当前控制器的动作ID，并在其前面加上当前控制器的&lt;a href=&quot;yii-base-controller#%24uniqueId-detail&quot;&gt;uniqueId&lt;/a&gt;值；</target>
        </trans-unit>
        <trans-unit id="3838e013d15124b57ec37a951bf2edf7f0f06c01" translate="yes" xml:space="preserve">
          <source>If the route has no leading slash (e.g. &lt;code&gt;site/index&lt;/code&gt;), it is considered to be a route relative to the current module and will be prepended with the module's &lt;a href=&quot;yii-base-module#%24uniqueId-detail&quot;&gt;uniqueId&lt;/a&gt;.</source>
          <target state="translated">如果路由没有前导斜线（例如 &lt;code&gt;site/index&lt;/code&gt; ），则将其视为相对于当前模块的路由，并且将在模块前面加上模块的&lt;a href=&quot;yii-base-module#%24uniqueId-detail&quot;&gt;uniqueId&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c0f7f945f90ddfa6b8e8aac1248995518474c2d3" translate="yes" xml:space="preserve">
          <source>If the route has no leading slash, it is considered to be a route relative to the current module and will be prepended with the &lt;a href=&quot;yii-base-module#%24uniqueId-detail&quot;&gt;uniqueId&lt;/a&gt; value of the current module.</source>
          <target state="translated">如果路由没有前导斜线，则将其视为相对于当前模块的路由，并且将使用当前模块的&lt;a href=&quot;yii-base-module#%24uniqueId-detail&quot;&gt;uniqueId&lt;/a&gt;值作为前缀。</target>
        </trans-unit>
        <trans-unit id="dba2ca08b788d93a668b0cf04bccd5bc4bf84f9b" translate="yes" xml:space="preserve">
          <source>If the route has no leading slash, it is considered to be a route relative to the current module and will be prepended with the module's uniqueId.</source>
          <target state="translated">如果路由没有前导斜线,则被认为是相对于当前模块的路由,会在前面加上模块的uniqueId。</target>
        </trans-unit>
        <trans-unit id="f9b0655708e7c7bc84f9755131ce868541ec8827" translate="yes" xml:space="preserve">
          <source>If the route is an empty string, the current &lt;a href=&quot;yii-base-controller#%24route-detail&quot;&gt;route&lt;/a&gt; will be used;</source>
          <target state="translated">如果路由为空字符串，则使用当前&lt;a href=&quot;yii-base-controller#%24route-detail&quot;&gt;路由&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="10fc382bcadef53e08e5b0075bb47c5977816c0b" translate="yes" xml:space="preserve">
          <source>If the route is an empty string, the currently requested &lt;a href=&quot;yii-base-controller#%24route-detail&quot;&gt;route&lt;/a&gt; will be used;</source>
          <target state="translated">如果路由为空字符串，则将使用当前请求的&lt;a href=&quot;yii-base-controller#%24route-detail&quot;&gt;路由&lt;/a&gt;；否则，将使用当前路由。</target>
        </trans-unit>
        <trans-unit id="6d390401d5a2f0927e56256fc5350845e3e02c05" translate="yes" xml:space="preserve">
          <source>If the route is empty, use &lt;a href=&quot;yii-base-module#%24defaultRoute-detail&quot;&gt;$defaultRoute&lt;/a&gt;;</source>
          <target state="translated">如果路由为空，请使用&lt;a href=&quot;yii-base-module#%24defaultRoute-detail&quot;&gt;$ defaultRoute&lt;/a&gt;；</target>
        </trans-unit>
        <trans-unit id="acf331fe50a8d9665060ecced5e6ae0ff505ab28" translate="yes" xml:space="preserve">
          <source>If the schema is not cached, or it is necessary to run other queries while the batch query is being processed, you can create a separate unbuffered connection to the database:</source>
          <target state="translated">如果模式没有被缓存,或者需要在处理批处理查询时运行其他查询,可以创建一个单独的非缓冲连接到数据库。</target>
        </trans-unit>
        <trans-unit id="4c1b85fdce45cf1b0309ee0e1142afc27a62e326" translate="yes" xml:space="preserve">
          <source>If the server should be flagged as online upon a failure.</source>
          <target state="translated">如果服务器发生故障时,应该标记为在线。</target>
        </trans-unit>
        <trans-unit id="a2c301f0800ad79885ea318453a7929c4d6f23bb" translate="yes" xml:space="preserve">
          <source>If the server should be flagged as online upon a failure. This is used by memcache only.</source>
          <target state="translated">如果服务器发生故障时,是否应该被标记为在线。这仅用于memcache。</target>
        </trans-unit>
        <trans-unit id="cd09912a220042ec76431b08939b461985d7292a" translate="yes" xml:space="preserve">
          <source>If the session variable does not exist, the &lt;code&gt;$defaultValue&lt;/code&gt; will be returned.</source>
          <target state="translated">如果会话变量不存在，则将返回 &lt;code&gt;$defaultValue&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b8af8fd9bf5ece008cfde6d5a5ff5e5ec4cd2c9d" translate="yes" xml:space="preserve">
          <source>If the specified migration has already been applied before, any later applied migrations will be reverted.</source>
          <target state="translated">如果之前已经应用了指定的迁移,那么之后应用的任何迁移将被还原。</target>
        </trans-unit>
        <trans-unit id="5c3984832c3d7b5cae3b14747a16e7d495d9306d" translate="yes" xml:space="preserve">
          <source>If the specified name already exists, the old value will be overwritten.</source>
          <target state="translated">如果指定的名称已经存在,旧的值将被覆盖。</target>
        </trans-unit>
        <trans-unit id="6dcf7e963583b93cd66a4735b0e5fa1a0a89d01f" translate="yes" xml:space="preserve">
          <source>If the table name contains schema prefix, the prefix will also be properly quoted. If the table name is already quoted or contains '(' or '{{', then this method will do nothing.</source>
          <target state="translated">如果表名包含模式前缀,前缀也会被适当地引用。如果表名已经被引用或包含'('或'{{',那么本方法将不做任何操作。</target>
        </trans-unit>
        <trans-unit id="a4b06fb2e4d3186151060a68c1c913150f1d75af" translate="yes" xml:space="preserve">
          <source>If the table name contains schema prefix, the prefix will also be properly quoted. If the table name is already quoted or contains special characters including '(', '[[' and '{{', then this method will do nothing.</source>
          <target state="translated">如果表名包含模式前缀,那么前缀也将被适当地引用。如果表名已经被引用或包含特殊字符,包括'('、'[[['和'{',那么本方法将不做任何操作。</target>
        </trans-unit>
        <trans-unit id="f91dae3e2c4249b13e68f7a97f7d516a7e97fd9b" translate="yes" xml:space="preserve">
          <source>If the table's primary key is auto-incremental and is &lt;code&gt;null&lt;/code&gt; during insertion, it will be populated with the actual value after insertion.</source>
          <target state="translated">如果表的主键是自动递增的，并且在插入期间为 &lt;code&gt;null&lt;/code&gt; ，则在插入后将使用实际值填充该表。</target>
        </trans-unit>
        <trans-unit id="6c7b978da51a4ba24ea582ab630c0078fb0250b0" translate="yes" xml:space="preserve">
          <source>If the target and the source language codes are the same, the original file will be returned.</source>
          <target state="translated">如果目标语言和源语言代码相同,将返回原始文件。</target>
        </trans-unit>
        <trans-unit id="8125400e5c5d70ac31f1d8f0d996fd9ffa3353f4" translate="yes" xml:space="preserve">
          <source>If the underlying DBMS supports transactions, you can perform transactional SQL queries like the following:</source>
          <target state="translated">如果底层DBMS支持事务,则可以执行事务性SQL查询,如以下。</target>
        </trans-unit>
        <trans-unit id="615abde542964e67dddd6c3082eddfd5364b4d99" translate="yes" xml:space="preserve">
          <source>If the user identity cannot be determined by session, this method will try to &lt;a href=&quot;yii-web-user#loginByCookie()-detail&quot;&gt;login by cookie&lt;/a&gt; if &lt;a href=&quot;yii-web-user#%24enableAutoLogin-detail&quot;&gt;$enableAutoLogin&lt;/a&gt; is true.</source>
          <target state="translated">如果无法通过会话确定用户身份，则在&lt;a href=&quot;yii-web-user#%24enableAutoLogin-detail&quot;&gt;$ enableAutoLogin&lt;/a&gt;为true时，此方法将尝试&lt;a href=&quot;yii-web-user#loginByCookie()-detail&quot;&gt;通过cookie登录&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="705592b8c2383f219608117cc81ad438abd7d266" translate="yes" xml:space="preserve">
          <source>If the user is a guest, it will call &lt;a href=&quot;yii-web-user#loginRequired()-detail&quot;&gt;yii\web\User::loginRequired()&lt;/a&gt; to redirect the user browser to the login page.</source>
          <target state="translated">如果用户是访客，它将调用&lt;a href=&quot;yii-web-user#loginRequired()-detail&quot;&gt;yii \ web \ User :: loginRequired（）&lt;/a&gt;将用户浏览器重定向到登录页面。</target>
        </trans-unit>
        <trans-unit id="6af13fa95d246847d3bc07a440ae9cd0789781bb" translate="yes" xml:space="preserve">
          <source>If the user is already authenticated, it will throw a &lt;a href=&quot;yii-web-forbiddenhttpexception&quot;&gt;yii\web\ForbiddenHttpException&lt;/a&gt;.</source>
          <target state="translated">如果用户已经通过身份验证，它将抛出&lt;a href=&quot;yii-web-forbiddenhttpexception&quot;&gt;yii \ web \ ForbiddenHttpException&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e10aa866d4fbdb8c9c091aa3afb0a9ff74dd6f8" translate="yes" xml:space="preserve">
          <source>If the value is empty</source>
          <target state="translated">如果该值为空</target>
        </trans-unit>
        <trans-unit id="e3aebffcd1da079cb9b912016de5c6f7b6f93f05" translate="yes" xml:space="preserve">
          <source>If the value is null or an &lt;a href=&quot;yii-db-expression&quot;&gt;yii\db\Expression&lt;/a&gt;, it will not be converted.</source>
          <target state="translated">如果该值为null或&lt;a href=&quot;yii-db-expression&quot;&gt;yii \ db \ Expression&lt;/a&gt;，则不会进行转换。</target>
        </trans-unit>
        <trans-unit id="3d9dc1b09b963e65cfad2ba6083954b4fd87f8ea" translate="yes" xml:space="preserve">
          <source>If the value of an attribute is an array, it will be handled as follows:</source>
          <target state="translated">如果一个属性的值是一个数组,将按以下方式处理。</target>
        </trans-unit>
        <trans-unit id="9f91e357d1a5b97858654c415b39e699c66e7aa7" translate="yes" xml:space="preserve">
          <source>If the variable does not exist, the &lt;code&gt;$defaultValue&lt;/code&gt; will be returned.</source>
          <target state="translated">如果该变量不存在，则将返回 &lt;code&gt;$defaultValue&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b4e0283136edc7546152648f82c7fe8973f97484" translate="yes" xml:space="preserve">
          <source>If the view is rendered with a &lt;a href=&quot;yii-base-view#%24context-detail&quot;&gt;context&lt;/a&gt; and the context implements &lt;a href=&quot;yii-base-viewcontextinterface&quot;&gt;yii\base\ViewContextInterface&lt;/a&gt;, the view file path is formed by prefixing the &lt;a href=&quot;yii-base-viewcontextinterface#getViewPath()-detail&quot;&gt;view path&lt;/a&gt; of the context to the view name. This mainly applies to the views rendered within controllers and widgets. For example, &lt;code&gt;about&lt;/code&gt; will be resolved into &lt;code&gt;@app/views/site/about.php&lt;/code&gt; if the context is the controller &lt;code&gt;SiteController&lt;/code&gt;.</source>
          <target state="translated">如果视图被与一个渲染&lt;a href=&quot;yii-base-view#%24context-detail&quot;&gt;上下文&lt;/a&gt;和上下文器具&lt;a href=&quot;yii-base-viewcontextinterface&quot;&gt;YII \基\ ViewContextInterface&lt;/a&gt;，视图文件路径由前缀所形成的&lt;a href=&quot;yii-base-viewcontextinterface#getViewPath()-detail&quot;&gt;视图路径&lt;/a&gt;上下文视图名称的。这主要适用于在控制器和小部件内呈现的视图。例如，如果上下文是控制器 &lt;code&gt;SiteController&lt;/code&gt; ，则 &lt;code&gt;about&lt;/code&gt; 将解析为 &lt;code&gt;@app/views/site/about.php&lt;/code&gt; about.php。</target>
        </trans-unit>
        <trans-unit id="b07718384b1a789030f1bbc8e8c74be97baa6e2a" translate="yes" xml:space="preserve">
          <source>If the view name does not contain a file extension, it will use the default one &lt;code&gt;.php&lt;/code&gt;.</source>
          <target state="translated">如果视图名称不包含文件扩展名，它将使用默认的 &lt;code&gt;.php&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="143675328ee1511cec615714266cf85228a771f7" translate="yes" xml:space="preserve">
          <source>If the view name starts with a single slash &lt;code&gt;/&lt;/code&gt;, the view file path is formed by prefixing the view name with the &lt;a href=&quot;yii-base-module#%24viewPath-detail&quot;&gt;view path&lt;/a&gt; of the currently active &lt;a href=&quot;guide-structure-modules&quot;&gt;module&lt;/a&gt;. If there is no active module, &lt;code&gt;@app/views/ViewName&lt;/code&gt; will be used. For example, &lt;code&gt;/user/create&lt;/code&gt; will be resolved into &lt;code&gt;@app/modules/user/views/user/create.php&lt;/code&gt;, if the currently active module is &lt;code&gt;user&lt;/code&gt;. If there is no active module, the view file path would be &lt;code&gt;@app/views/user/create.php&lt;/code&gt;.</source>
          <target state="translated">如果视图名称与单斜线开始 &lt;code&gt;/&lt;/code&gt; ，视图文件路径由与所述前缀视图名称形成&lt;a href=&quot;yii-base-module#%24viewPath-detail&quot;&gt;视图路径&lt;/a&gt;当前活动的&lt;a href=&quot;guide-structure-modules&quot;&gt;模块&lt;/a&gt;。如果没有活动的模块，将使用 &lt;code&gt;@app/views/ViewName&lt;/code&gt; 。例如，如果当前活动的模块是 &lt;code&gt;user&lt;/code&gt; ，则 &lt;code&gt;/user/create&lt;/code&gt; 将解析为 &lt;code&gt;@app/modules/user/views/user/create.php&lt;/code&gt; 。如果没有活动模块，则视图文件路径为 &lt;code&gt;@app/views/user/create.php&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35abd4ea596b4641d909b8e80a5f564e1ff92982" translate="yes" xml:space="preserve">
          <source>If the view name starts with double slashes &lt;code&gt;//&lt;/code&gt;, the corresponding view file path would be &lt;code&gt;@app/views/ViewName&lt;/code&gt;. That is, the view is looked for under the &lt;a href=&quot;yii-base-module#%24viewPath-detail&quot;&gt;application's view path&lt;/a&gt;. For example, &lt;code&gt;//site/about&lt;/code&gt; will be resolved into &lt;code&gt;@app/views/site/about.php&lt;/code&gt;.</source>
          <target state="translated">如果视图名称以双斜杠 &lt;code&gt;//&lt;/code&gt; 开头，则相应的视图文件路径为 &lt;code&gt;@app/views/ViewName&lt;/code&gt; 。也就是说，在&lt;a href=&quot;yii-base-module#%24viewPath-detail&quot;&gt;应用程序的视图路径&lt;/a&gt;下寻找该视图。例如， &lt;code&gt;//site/about&lt;/code&gt; 将解析为 &lt;code&gt;@app/views/site/about.php&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="170fa172f5ef290babcc98d20f22052ffd6efeb1" translate="yes" xml:space="preserve">
          <source>If there are any unapplied migrations earlier than the specified one, they will all be applied before the specified migration is applied.</source>
          <target state="translated">如果有比指定的迁移更早的未应用的迁移,将在应用指定的迁移之前全部应用。</target>
        </trans-unit>
        <trans-unit id="3d6269efdd87d35e81a6e30b44c8c4d25feaf266" translate="yes" xml:space="preserve">
          <source>If there are existing flash messages with the same key, the new one will be appended to the existing message array.</source>
          <target state="translated">如果已有相同键的Flash信息,新的信息将被追加到现有的信息阵列中。</target>
        </trans-unit>
        <trans-unit id="675bacb81959d8deb64b51bb88241ea7a951784d" translate="yes" xml:space="preserve">
          <source>If there are less than count bytes available, return as many as are available. If no more data is available, return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果可用字节数少于计数，则返回尽可能多的字节。如果没有更多数据可用，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f507778199bb49929c2f181eacac367bbb5b8865" translate="yes" xml:space="preserve">
          <source>If there is a match</source>
          <target state="translated">如果有一个匹配</target>
        </trans-unit>
        <trans-unit id="b7395b370d45629b7dc70fa54628e41910a9ce57" translate="yes" xml:space="preserve">
          <source>If there is already a cookie with the same name in the collection, it will be removed first.</source>
          <target state="translated">如果集合中已经有同名的cookie,则会先将其删除。</target>
        </trans-unit>
        <trans-unit id="37c9451c80c6201c31b145498ab546069975fb11" translate="yes" xml:space="preserve">
          <source>If there is already a header with the same name, it will be replaced.</source>
          <target state="translated">如果已经有一个同名的头,将被替换。</target>
        </trans-unit>
        <trans-unit id="56742f49bb631ba105a20e59ff25c692c57251d4" translate="yes" xml:space="preserve">
          <source>If there is already a header with the same name, the new one will be appended to it instead of replacing it.</source>
          <target state="translated">如果已经有一个同名的头,新的头将被附加到它上面,而不是取代它。</target>
        </trans-unit>
        <trans-unit id="a77342df47cc04f34e01b7fc3f1a0ebbf922cef6" translate="yes" xml:space="preserve">
          <source>If there is already a header with the same name, the new one will be ignored.</source>
          <target state="translated">如果已经有一个同名的头,新的头将被忽略。</target>
        </trans-unit>
        <trans-unit id="3fb1daa693c715a7f944d8ae3cf782d4929b4458" translate="yes" xml:space="preserve">
          <source>If there is no corresponding themed file, the original file will be returned.</source>
          <target state="translated">如果没有相应的主题文件,将返回原文件。</target>
        </trans-unit>
        <trans-unit id="8e4ad10c5e73f8be318acbc44cbef562d5fb588f" translate="yes" xml:space="preserve">
          <source>If there is no validation error, an empty error summary markup will still be generated, but it will be hidden.</source>
          <target state="translated">如果没有验证错误,仍然会生成一个空的错误摘要标记,但会被隐藏。</target>
        </trans-unit>
        <trans-unit id="5fe82a202e7d5bdd734ae4113e13e67b775c3c26" translate="yes" xml:space="preserve">
          <source>If there's active tab defined</source>
          <target state="translated">如果有活动标签定义</target>
        </trans-unit>
        <trans-unit id="3283b3c2e482ab68171dc0341bb5983f400daef0" translate="yes" xml:space="preserve">
          <source>If this callback returns &lt;a href=&quot;yii-web-response&quot;&gt;yii\web\Response&lt;/a&gt; instance, it will be used as action response, otherwise redirection to &lt;a href=&quot;yii-authclient-authaction#%24successUrl-detail&quot;&gt;$successUrl&lt;/a&gt; will be performed.</source>
          <target state="translated">如果此回调返回&lt;a href=&quot;yii-web-response&quot;&gt;yii \ web \ Response&lt;/a&gt;实例，它将用作操作响应，否则将重定向到&lt;a href=&quot;yii-authclient-authaction#%24successUrl-detail&quot;&gt;$ successUrl&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b8fc3244a33ca746e6b9ed2492e56036d2ddd8b6" translate="yes" xml:space="preserve">
          <source>If this field is not set - no host name check will be performed.</source>
          <target state="translated">如果此字段未设置--将不执行主机名检查。</target>
        </trans-unit>
        <trans-unit id="0e866213638741762a83c4f351d7b8b96a6ec683" translate="yes" xml:space="preserve">
          <source>If this is an anonymous function, it will be called for each row and the return value will be used as the value to display for every data model. The signature of this function should be: &lt;code&gt;function ($model, $key, $index, $column)&lt;/code&gt;. Where &lt;code&gt;$model&lt;/code&gt;, &lt;code&gt;$key&lt;/code&gt;, and &lt;code&gt;$index&lt;/code&gt; refer to the model, key and index of the row currently being rendered and &lt;code&gt;$column&lt;/code&gt; is a reference to the &lt;a href=&quot;yii-grid-datacolumn&quot;&gt;yii\grid\DataColumn&lt;/a&gt; object.</source>
          <target state="translated">如果这是一个匿名函数，则将为每一行调用该函数，并将返回值用作为每个数据模型显示的值。该函数的签名应为： &lt;code&gt;function ($model, $key, $index, $column)&lt;/code&gt; 。其中 &lt;code&gt;$model&lt;/code&gt; ， &lt;code&gt;$key&lt;/code&gt; 和 &lt;code&gt;$index&lt;/code&gt; 指的是当前呈现的行的模型，键和索引，而 &lt;code&gt;$column&lt;/code&gt; 是对&lt;a href=&quot;yii-grid-datacolumn&quot;&gt;yii \ grid \ DataColumn&lt;/a&gt;对象的引用。</target>
        </trans-unit>
        <trans-unit id="fbf6722cdafe67c212a5ddf61cafab63f5cb1cb2" translate="yes" xml:space="preserve">
          <source>If this is an array, it will be passed directly to &lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii\web\User::can()&lt;/a&gt;. For example for passing an ID from the current request, you may use the following:</source>
          <target state="translated">如果这是一个数组，它将直接传递到&lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii \ web \ User :: can（）&lt;/a&gt;。例如，为了传递当前请求中的ID，您可以使用以下代码：</target>
        </trans-unit>
        <trans-unit id="761eb1705ad22831150a87cc36264273756425bf" translate="yes" xml:space="preserve">
          <source>If this is not set, &lt;code&gt;$model[$attribute]&lt;/code&gt; will be used to obtain the value, where &lt;code&gt;$attribute&lt;/code&gt; is the value of &lt;a href=&quot;yii-grid-datacolumn#%24attribute-detail&quot;&gt;$attribute&lt;/a&gt;.</source>
          <target state="translated">如果没有设置， &lt;code&gt;$model[$attribute]&lt;/code&gt; 将被用于获取值，其中 &lt;code&gt;$attribute&lt;/code&gt; 是价值&lt;a href=&quot;yii-grid-datacolumn#%24attribute-detail&quot;&gt;$属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="794189c37f43f22f9917f60650b2dfcecb055bfd" translate="yes" xml:space="preserve">
          <source>If this is not set, the asset manager will use the default CRC32 and filemtime in the &lt;code&gt;hash&lt;/code&gt; method.</source>
          <target state="translated">如果未设置，则资产管理器将在 &lt;code&gt;hash&lt;/code&gt; 方法中使用默认的CRC32和filemtime 。</target>
        </trans-unit>
        <trans-unit id="c83721f74f2afcc718a014333d39fecdc6b37065" translate="yes" xml:space="preserve">
          <source>If this is not set, the following rules will be used to determine the keys of the data models:</source>
          <target state="translated">如果没有设置,将使用以下规则来确定数据模型的键。</target>
        </trans-unit>
        <trans-unit id="bf414659f003b83c3edf7f1c703c1d5b71419781" translate="yes" xml:space="preserve">
          <source>If this is not set, the keys of the &lt;a href=&quot;yii-data-basedataprovider#%24models-detail&quot;&gt;$models&lt;/a&gt; array will be used.</source>
          <target state="translated">如果未设置，将使用&lt;a href=&quot;yii-data-basedataprovider#%24models-detail&quot;&gt;$ models&lt;/a&gt;数组的键。</target>
        </trans-unit>
        <trans-unit id="92a4fa48092d8c3b5d7bfd67fbd44b3aa340a186" translate="yes" xml:space="preserve">
          <source>If this method is called for the first time, it will try to open a master connection.</source>
          <target state="translated">如果这个方法第一次被调用,它将尝试打开一个主连接。</target>
        </trans-unit>
        <trans-unit id="e01642b6d332ec2ef8cf5bdc44df748cdf249d18" translate="yes" xml:space="preserve">
          <source>If this method is called for the first time, it will try to open a slave connection when &lt;a href=&quot;yii-db-connection#%24enableSlaves-detail&quot;&gt;$enableSlaves&lt;/a&gt; is true.</source>
          <target state="translated">如果第一次调用此方法，则&lt;a href=&quot;yii-db-connection#%24enableSlaves-detail&quot;&gt;$ enableSlaves&lt;/a&gt;为true 时，它将尝试打开从属连接。</target>
        </trans-unit>
        <trans-unit id="4b7817e9aab2d820377ca6bbbbf78628c37fdfe5" translate="yes" xml:space="preserve">
          <source>If this method is overridden in a child class, it is recommended that</source>
          <target state="translated">如果这个方法在子类中被重写,建议将</target>
        </trans-unit>
        <trans-unit id="c5725d8902bb45ae2616fbe9c182021cab28ca93" translate="yes" xml:space="preserve">
          <source>If this option is disabled by the web server, when this method is called a download configuration dialog will open but the downloaded file will have 0 bytes.</source>
          <target state="translated">如果这个选项被Web服务器禁用,当这个方法被调用时,将打开一个下载配置对话框,但下载的文件将有0个字节。</target>
        </trans-unit>
        <trans-unit id="5ec8809778f160f65925278e47ba02f9f4c26b6b" translate="yes" xml:space="preserve">
          <source>If this property is &lt;code&gt;null&lt;/code&gt;, a 403 HTTP exception will be raised when &lt;a href=&quot;yii-web-user#loginRequired()-detail&quot;&gt;loginRequired()&lt;/a&gt; is called.</source>
          <target state="translated">如果此属性为 &lt;code&gt;null&lt;/code&gt; ，则在调用&lt;a href=&quot;yii-web-user#loginRequired()-detail&quot;&gt;loginRequired（）&lt;/a&gt;时将引发403 HTTP异常。</target>
        </trans-unit>
        <trans-unit id="d3eb3feb60ffc05455aedb0bb8723cfe18b1b43a" translate="yes" xml:space="preserve">
          <source>If this property is &lt;code&gt;null&lt;/code&gt;, then &lt;code&gt;session_cache_limiter()&lt;/code&gt; will not be called. As a result, PHP will send headers according to the &lt;code&gt;session.cache_limiter&lt;/code&gt; PHP ini setting.</source>
          <target state="translated">如果此属性为 &lt;code&gt;null&lt;/code&gt; ，则不会调用 &lt;code&gt;session_cache_limiter()&lt;/code&gt; 。结果，PHP将根据 &lt;code&gt;session.cache_limiter&lt;/code&gt; PHP ini设置发送标头。</target>
        </trans-unit>
        <trans-unit id="d8f6ebb990cfb2c3d2bed9d15e01ef3ff1669c27" translate="yes" xml:space="preserve">
          <source>If this property is an array, a dropdown list will be generated that uses this property value as the list options.</source>
          <target state="translated">如果此属性是一个数组,将生成一个下拉列表,使用此属性值作为列表选项。</target>
        </trans-unit>
        <trans-unit id="8e67c42d2d158b7329818fac60a3394a4f446e33" translate="yes" xml:space="preserve">
          <source>If this property is empty or not set, language negotiation will be skipped.</source>
          <target state="translated">如果该属性为空或未设置,将跳过语言协商。</target>
        </trans-unit>
        <trans-unit id="ddb881d35c0a9793c4530636b14e5dc121a4bf66" translate="yes" xml:space="preserve">
          <source>If this property is empty or not set, response format negotiation will be skipped.</source>
          <target state="translated">如果此属性为空或未设置,将跳过响应格式协商。</target>
        </trans-unit>
        <trans-unit id="405afefe29b13f7aef198bc023c70a501085c899" translate="yes" xml:space="preserve">
          <source>If this property is empty, no authentication will be performed.</source>
          <target state="translated">如果此属性为空,则不会进行任何验证。</target>
        </trans-unit>
        <trans-unit id="6c328ce57a50b4e54b6d098d9573758322fbc020" translate="yes" xml:space="preserve">
          <source>If this property is false, it means the whole asset bundle feature is disabled and &lt;a href=&quot;yii-web-assetmanager#getBundle()-detail&quot;&gt;getBundle()&lt;/a&gt; will always return null.</source>
          <target state="translated">如果此属性为false，则表示整个资产捆绑包功能&lt;a href=&quot;yii-web-assetmanager#getBundle()-detail&quot;&gt;均已&lt;/a&gt;禁用，并且getBundle（）将始终返回null。</target>
        </trans-unit>
        <trans-unit id="aef0a3538f3df323434f2c81123afd00592192b5" translate="yes" xml:space="preserve">
          <source>If this property is not set or empty, it means this rule applies to all roles.</source>
          <target state="translated">如果此属性未设置或为空,则表示此规则适用于所有角色。</target>
        </trans-unit>
        <trans-unit id="6c3529cc5dd62162c7cfc46f76acb9eecc8c5a0c" translate="yes" xml:space="preserve">
          <source>If this property is not set, a text field will be generated as the filter input;</source>
          <target state="translated">如果没有设置此属性,则会生成一个文本字段作为过滤器的输入。</target>
        </trans-unit>
        <trans-unit id="d2aa03b44febc64b0a26b4c7ef2415cc3db737a0" translate="yes" xml:space="preserve">
          <source>If this property is not set, button URLs will be created using &lt;a href=&quot;yii-grid-actioncolumn#createUrl()-detail&quot;&gt;createUrl()&lt;/a&gt;.</source>
          <target state="translated">如果未设置此属性，则将使用&lt;a href=&quot;yii-grid-actioncolumn#createUrl()-detail&quot;&gt;createUrl（）&lt;/a&gt;创建按钮URL 。</target>
        </trans-unit>
        <trans-unit id="3e69efef20b9de65aaf0a9d9599496343fb846f0" translate="yes" xml:space="preserve">
          <source>If this property is not set, the default value will be obtained from &lt;code&gt;Yii::$app-&amp;gt;formatter-&amp;gt;dateFormat&lt;/code&gt;, see &lt;a href=&quot;yii-i18n-formatter#%24dateFormat-detail&quot;&gt;yii\i18n\Formatter::$dateFormat&lt;/a&gt; for details. Since version 2.0.8 the default value will be determined from different formats of the formatter class, dependent on the value of &lt;a href=&quot;yii-validators-datevalidator#%24type-detail&quot;&gt;$type&lt;/a&gt;:</source>
          <target state="translated">如果未设置此属性，那么将从 &lt;code&gt;Yii::$app-&amp;gt;formatter-&amp;gt;dateFormat&lt;/code&gt; 获得默认值，有关详细信息，请参见&lt;a href=&quot;yii-i18n-formatter#%24dateFormat-detail&quot;&gt;yii \ i18n \ Formatter :: $ dateFormat&lt;/a&gt;。从版本2.0.8开始，默认值将根据formatter类的不同格式来确定，具体取决于&lt;a href=&quot;yii-validators-datevalidator#%24type-detail&quot;&gt;$ type&lt;/a&gt;的值：</target>
        </trans-unit>
        <trans-unit id="98d105681c9d81a0809894b0464b26c0a4dd813a" translate="yes" xml:space="preserve">
          <source>If this property is not set, the resource arrays will be directly returned without using envelope. The pagination information as shown in &lt;code&gt;_links&lt;/code&gt; and &lt;code&gt;_meta&lt;/code&gt; can be accessed from the response HTTP headers.</source>
          <target state="translated">如果未设置此属性，则将直接返回资源数组，而不使用信封。可以从响应HTTP标头访问 &lt;code&gt;_links&lt;/code&gt; 和 &lt;code&gt;_meta&lt;/code&gt; 中所示的分页信息。</target>
        </trans-unit>
        <trans-unit id="f59858c6ae5ce0a9a0f7dd8716effab2652e820f" translate="yes" xml:space="preserve">
          <source>If this property is not set, the username information will be considered as an access token while the password information will be ignored. The &lt;a href=&quot;yii-web-user#loginByAccessToken()-detail&quot;&gt;yii\web\User::loginByAccessToken()&lt;/a&gt; method will be called to authenticate and login the user.</source>
          <target state="translated">如果未设置此属性，则用户名信息将被视为访问令牌，而密码信息将被忽略。所述&lt;a href=&quot;yii-web-user#loginByAccessToken()-detail&quot;&gt;YII \幅\用户:: loginByAccessToken（）&lt;/a&gt;方法将被调用来验证和登录用户。</target>
        </trans-unit>
        <trans-unit id="1b11585caec536adf53c89c8d43d6fd0e82f525e" translate="yes" xml:space="preserve">
          <source>If this property is specified as a callback, it should have the following signature:</source>
          <target state="translated">如果此属性被指定为回调,它应该有以下签名。</target>
        </trans-unit>
        <trans-unit id="e58b23b2569be835f78c6402f0301eef9b4d3346" translate="yes" xml:space="preserve">
          <source>If this property is specified as an anonymous function, it should have the following signature:</source>
          <target state="translated">如果此属性被指定为匿名函数,它应该有以下签名。</target>
        </trans-unit>
        <trans-unit id="a86cc1af09da5de44b3ddd37d7899250d535585a" translate="yes" xml:space="preserve">
          <source>If this record is the result of a query and the attribute is not loaded, &lt;code&gt;null&lt;/code&gt; will be returned.</source>
          <target state="translated">如果此记录是查询的结果，并且未加载该属性，则将返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="595d230f5bfe79f8070489d0205e83a77b43797f" translate="yes" xml:space="preserve">
          <source>If translation for specific locale code such as &lt;code&gt;en-US&lt;/code&gt; isn't found it tries more generic &lt;code&gt;en&lt;/code&gt;.</source>
          <target state="translated">如果未找到特定语言环境代码（例如 &lt;code&gt;en-US&lt;/code&gt; ）的翻译，它将尝试使用更通用的 &lt;code&gt;en&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a4191dd0e6f33b444f0dc7b6e1f2840830e59ac" translate="yes" xml:space="preserve">
          <source>If translation for specific locale code such as &lt;code&gt;en-US&lt;/code&gt; isn't found it tries more generic &lt;code&gt;en&lt;/code&gt;. When both are present, the &lt;code&gt;en-US&lt;/code&gt; messages will be merged over &lt;code&gt;en&lt;/code&gt;. See &lt;a href=&quot;yii-i18n-gettextmessagesource#loadFallbackMessages()-detail&quot;&gt;loadFallbackMessages()&lt;/a&gt; for details. If the $language is less specific than &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$sourceLanguage&lt;/a&gt;, the method will try to load the messages for &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$sourceLanguage&lt;/a&gt;. For example: &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$sourceLanguage&lt;/a&gt; is &lt;code&gt;en-GB&lt;/code&gt;, $language is &lt;code&gt;en&lt;/code&gt;. The method will load the messages for &lt;code&gt;en&lt;/code&gt; and merge them over &lt;code&gt;en-GB&lt;/code&gt;.</source>
          <target state="translated">如果未找到特定语言环境代码（例如 &lt;code&gt;en-US&lt;/code&gt; ）的翻译，它将尝试使用更通用的 &lt;code&gt;en&lt;/code&gt; 。如果两者都存在，则 &lt;code&gt;en-US&lt;/code&gt; 消息将通过 &lt;code&gt;en&lt;/code&gt; 合并。有关详细信息，请参见&lt;a href=&quot;yii-i18n-gettextmessagesource#loadFallbackMessages()-detail&quot;&gt;loadFallbackMessages（）&lt;/a&gt;。如果$ language不如&lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$ sourceLanguage&lt;/a&gt;特定，则该方法将尝试加载&lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$ sourceLanguage&lt;/a&gt;的消息。例如：&lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$ sourceLanguage&lt;/a&gt;是 &lt;code&gt;en-GB&lt;/code&gt; ，$ language是 &lt;code&gt;en&lt;/code&gt; 。该方法将为 &lt;code&gt;en&lt;/code&gt; 加载消息并通过 &lt;code&gt;en-GB&lt;/code&gt; 合并它们。</target>
        </trans-unit>
        <trans-unit id="bdaf153b5c170ff45ca76308bff663eff053e8ad" translate="yes" xml:space="preserve">
          <source>If translation for specific locale code such as &lt;code&gt;en-US&lt;/code&gt; isn't found it tries more generic &lt;code&gt;en&lt;/code&gt;. When both are present, the &lt;code&gt;en-US&lt;/code&gt; messages will be merged over &lt;code&gt;en&lt;/code&gt;. See &lt;a href=&quot;yii-i18n-phpmessagesource#loadFallbackMessages()-detail&quot;&gt;loadFallbackMessages()&lt;/a&gt; for details. If the $language is less specific than &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$sourceLanguage&lt;/a&gt;, the method will try to load the messages for &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$sourceLanguage&lt;/a&gt;. For example: &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$sourceLanguage&lt;/a&gt; is &lt;code&gt;en-GB&lt;/code&gt;, $language is &lt;code&gt;en&lt;/code&gt;. The method will load the messages for &lt;code&gt;en&lt;/code&gt; and merge them over &lt;code&gt;en-GB&lt;/code&gt;.</source>
          <target state="translated">如果未找到特定语言环境代码（例如 &lt;code&gt;en-US&lt;/code&gt; ）的翻译，它将尝试使用更通用的 &lt;code&gt;en&lt;/code&gt; 。如果两者都存在，则 &lt;code&gt;en-US&lt;/code&gt; 消息将通过 &lt;code&gt;en&lt;/code&gt; 合并。有关详细信息，请参见&lt;a href=&quot;yii-i18n-phpmessagesource#loadFallbackMessages()-detail&quot;&gt;loadFallbackMessages（）&lt;/a&gt;。如果$ language不如&lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$ sourceLanguage&lt;/a&gt;特定，则该方法将尝试加载&lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$ sourceLanguage&lt;/a&gt;的消息。例如：&lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$ sourceLanguage&lt;/a&gt;是 &lt;code&gt;en-GB&lt;/code&gt; ，$ language是 &lt;code&gt;en&lt;/code&gt; 。该方法将为 &lt;code&gt;en&lt;/code&gt; 加载消息并通过 &lt;code&gt;en-GB&lt;/code&gt; 合并它们。</target>
        </trans-unit>
        <trans-unit id="0851fde4b410d1ade4416c888f897ac84ba83813" translate="yes" xml:space="preserve">
          <source>If translations should be sorted</source>
          <target state="translated">如果要对翻译进行排序</target>
        </trans-unit>
        <trans-unit id="863ea3e36d5d2bad422712c1e74f66f72cd13c87" translate="yes" xml:space="preserve">
          <source>If true, context message will cached once it's been created.</source>
          <target state="translated">如果为真,上下文信息一旦被创建就会被缓存。</target>
        </trans-unit>
        <trans-unit id="5942f3ab0aead82e8a4880596207dee1d0abae22" translate="yes" xml:space="preserve">
          <source>If true, context message will cached once it's been created. Makes sense to use with &lt;a href=&quot;yii-elasticsearch-elasticsearchtarget#%24includeContext-detail&quot;&gt;$includeContext&lt;/a&gt;.</source>
          <target state="translated">如果为true，则上下文消息一旦创建就将被缓存。与&lt;a href=&quot;yii-elasticsearch-elasticsearchtarget#%24includeContext-detail&quot;&gt;$ includeContext&lt;/a&gt;一起使用是有意义的。</target>
        </trans-unit>
        <trans-unit id="2bc2f4eec112d8e1ca6337f23ea84dfde92d2572" translate="yes" xml:space="preserve">
          <source>If true, context will be included in every message.</source>
          <target state="translated">如果为真,每条消息中都会包含上下文。</target>
        </trans-unit>
        <trans-unit id="d4f7d62a318fe9b61eb15a99b13fe92e8af72527" translate="yes" xml:space="preserve">
          <source>If true, context will be included in every message. This is convenient if you log application errors and analyze them with tools like Kibana.</source>
          <target state="translated">如果为真,每条消息中都会包含上下文。这在你记录应用程序错误并使用Kibana等工具分析它们时非常方便。</target>
        </trans-unit>
        <trans-unit id="8588e71490d2b8f7b9be0e55dfd8e7a7e5aad9a4" translate="yes" xml:space="preserve">
          <source>If true, context will be logged as a separate message after all other messages.</source>
          <target state="translated">如果为 &quot;true&quot;,上下文将被记录在所有其他消息之后,作为单独的消息。</target>
        </trans-unit>
        <trans-unit id="48be22f667695315030c677c2aea101404ac6c6a" translate="yes" xml:space="preserve">
          <source>If true, shows the widget as an inline calendar and the input as a hidden field.</source>
          <target state="translated">如果为真,则将小组件显示为内联日历,将输入内容显示为隐藏字段。</target>
        </trans-unit>
        <trans-unit id="415f678f3922bf74cfc39f8b5a24ecb578df6a13" translate="yes" xml:space="preserve">
          <source>If two behaviors define the same property or method and they are both attached to the same component, the behavior that is attached to the component &lt;em&gt;first&lt;/em&gt; will take precedence when the property or method is accessed.</source>
          <target state="translated">如果两个行为定义了相同的属性或方法，并且它们都被附加到同一组件，则在访问属性或方法时，将&lt;em&gt;首先&lt;/em&gt;附加到该组件的行为为准。</target>
        </trans-unit>
        <trans-unit id="50f3e45b0f74d8f2394ec529276f40a2d3782bd7" translate="yes" xml:space="preserve">
          <source>If version is not explicitly set, &lt;a href=&quot;yii-base-module#defaultVersion()-detail&quot;&gt;defaultVersion()&lt;/a&gt; method will be used to determine its value.</source>
          <target state="translated">如果未明确设置版本，则将使用&lt;a href=&quot;yii-base-module#defaultVersion()-detail&quot;&gt;defaultVersion（）&lt;/a&gt;方法确定其值。</target>
        </trans-unit>
        <trans-unit id="e619fb3201f37a533d9bc1619294228a4621a868" translate="yes" xml:space="preserve">
          <source>If we are using fixture that loads data into database then these rows will be applied to &lt;code&gt;users&lt;/code&gt; table. If we are using nosql fixtures, for example &lt;code&gt;mongodb&lt;/code&gt; fixture, then this data will be applied to &lt;code&gt;users&lt;/code&gt; mongodb collection. In order to learn about implementing various loading strategies and more, refer to official &lt;a href=&quot;https://github.com/yiisoft/yii2/blob/master/docs/guide/test-fixtures.md&quot;&gt;documentation&lt;/a&gt;. Above fixture example was auto-generated by &lt;code&gt;yii2-faker&lt;/code&gt; extension, read more about it in these &lt;a href=&quot;#auto-generating-fixtures&quot;&gt;section&lt;/a&gt;. Fixture classes name should not be plural.</source>
          <target state="translated">如果我们使用的是将数据加载到数据库中的夹具，那么这些行将应用于 &lt;code&gt;users&lt;/code&gt; 表。如果我们使用nosql固定装置，例如 &lt;code&gt;mongodb&lt;/code&gt; 固定装置，则此数据将应用于 &lt;code&gt;users&lt;/code&gt; mongodb集合。为了了解实施各种加载策略的更多信息，请参阅官方&lt;a href=&quot;https://github.com/yiisoft/yii2/blob/master/docs/guide/test-fixtures.md&quot;&gt;文档&lt;/a&gt;。上面的夹具示例是由 &lt;code&gt;yii2-faker&lt;/code&gt; 扩展自动生成的，请在这些&lt;a href=&quot;#auto-generating-fixtures&quot;&gt;部分中&lt;/a&gt;阅读有关它的更多信息。灯具类的名称不能为复数。</target>
        </trans-unit>
        <trans-unit id="94b47be848c0711aef8f85ca6431d684f03c677a" translate="yes" xml:space="preserve">
          <source>If you access this controller from browser, you will see an error complaining the &lt;code&gt;BookingInterface&lt;/code&gt; cannot be instantiated. This is because you need to tell the DI container how to deal with this dependency:</source>
          <target state="translated">如果从浏览器访问此控制器，将会看到一个错误， &lt;code&gt;BookingInterface&lt;/code&gt; 无法实例化BookingInterface。这是因为您需要告诉DI容器如何处理这种依赖关系：</target>
        </trans-unit>
        <trans-unit id="b65c7c3bf9c3c8458864283b217efb447132a6d3" translate="yes" xml:space="preserve">
          <source>If you already have a formatted body string, you may assign it to the &lt;a href=&quot;yii-web-response#%24content-detail&quot;&gt;yii\web\Response::$content&lt;/a&gt; property of the response. For example,</source>
          <target state="translated">如果已经有格式化的正文字符串，则可以将其分配给&lt;a href=&quot;yii-web-response#%24content-detail&quot;&gt;响应&lt;/a&gt;的yii \ web \ Response :: $ content属性。例如，</target>
        </trans-unit>
        <trans-unit id="0fb4988697011a42f159bad2641e0d77b8761b7a" translate="yes" xml:space="preserve">
          <source>If you already have an object, you may use &lt;a href=&quot;yii-baseyii#configure()-detail&quot;&gt;Yii::configure()&lt;/a&gt; to initialize the object's properties with a configuration array:</source>
          <target state="translated">如果已经有了对象，则可以使用&lt;a href=&quot;yii-baseyii#configure()-detail&quot;&gt;Yii :: configure（）&lt;/a&gt;通过配置数组来初始化对象的属性：</target>
        </trans-unit>
        <trans-unit id="b5bc44656c8b621ae37e089b46f97b3fe69216b4" translate="yes" xml:space="preserve">
          <source>If you also need to support client-side conditional validation, you should configure the &lt;a href=&quot;yii-validators-validator#%24whenClient-detail&quot;&gt;whenClient&lt;/a&gt; property which takes a string representing a JavaScript function whose return value determines whether to apply the rule or not. For example,</source>
          <target state="translated">如果还需要支持客户端条件验证，则应配置&lt;a href=&quot;yii-validators-validator#%24whenClient-detail&quot;&gt;whenClient&lt;/a&gt;属性，该属性采用表示JavaScript函数的字符串，该JavaScript函数的返回值确定是否应用规则。例如，</target>
        </trans-unit>
        <trans-unit id="015c2306247e95ea889ed473e6fce52b12b81385" translate="yes" xml:space="preserve">
          <source>If you are calling the file sending method in places other than an action method, you should also call the &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;yii\web\Response::send()&lt;/a&gt; method afterwards to ensure no extra content will be appended to the response.</source>
          <target state="translated">如果要在动作方法之外的其他地方调用文件发送方法，则还应该在以后调用&lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;yii \ web \ Response :: send（）&lt;/a&gt;方法，以确保不会在响应中附加任何内容。</target>
        </trans-unit>
        <trans-unit id="2b8119693bac426cf5390310731d2dd4315e59fb" translate="yes" xml:space="preserve">
          <source>If you are interested in the attribute values prior to their most recent modification, you may call &lt;a href=&quot;yii-db-baseactiverecord#getOldAttributes()-detail&quot;&gt;getOldAttributes()&lt;/a&gt; or &lt;a href=&quot;yii-db-baseactiverecord#getOldAttribute()-detail&quot;&gt;getOldAttribute()&lt;/a&gt;.</source>
          <target state="translated">如果您对最近修改的属性值感兴趣，可以调用&lt;a href=&quot;yii-db-baseactiverecord#getOldAttributes()-detail&quot;&gt;getOldAttributes（）&lt;/a&gt;或&lt;a href=&quot;yii-db-baseactiverecord#getOldAttribute()-detail&quot;&gt;getOldAttribute（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1576c65845d56e383650720054efede4cd92f6ad" translate="yes" xml:space="preserve">
          <source>If you are registering an asset bundle in other places, you should provide the needed view object. For example, to register an asset bundle in a &lt;a href=&quot;guide-structure-widgets&quot;&gt;widget&lt;/a&gt; class, you can get the view object by &lt;code&gt;$this-&amp;gt;view&lt;/code&gt;.</source>
          <target state="translated">如果要在其他地方注册资产捆绑包，则应提供所需的视图对象。例如，要在&lt;a href=&quot;guide-structure-widgets&quot;&gt;小部件&lt;/a&gt;类中注册资产束，可以通过 &lt;code&gt;$this-&amp;gt;view&lt;/code&gt; 获取视图对象。</target>
        </trans-unit>
        <trans-unit id="e66182a77eb78e65351400c3acc25a8757dced18" translate="yes" xml:space="preserve">
          <source>If you are the developer of a redistributable &lt;a href=&quot;guide-structure-extensions&quot;&gt;extension&lt;/a&gt;, you can register dependencies in the bootstrapping class of the extension.</source>
          <target state="translated">如果您是可再发行的&lt;a href=&quot;guide-structure-extensions&quot;&gt;扩展程序&lt;/a&gt;的开发人员，则可以在该扩展程序的引导类中注册依赖项。</target>
        </trans-unit>
        <trans-unit id="88a0770ee0f1566f7b66faeaa988abce546693b8" translate="yes" xml:space="preserve">
          <source>If you are the developer of an application, you can register your dependencies using application configuration. Please, read the &lt;a href=&quot;guide-concept-configurations#application-configurations&quot;&gt;Application Configurations&lt;/a&gt; subsection of the &lt;a href=&quot;guide-concept-configurations&quot;&gt;Configurations&lt;/a&gt; guide article.</source>
          <target state="translated">如果您是应用程序的开发人员，则可以使用应用程序配置注册您的依赖项。请阅读&lt;a href=&quot;guide-concept-configurations&quot;&gt;配置&lt;/a&gt;指南文章的&amp;ldquo; &lt;a href=&quot;guide-concept-configurations#application-configurations&quot;&gt;应用程序配置&amp;rdquo;&lt;/a&gt;小节。</target>
        </trans-unit>
        <trans-unit id="06902672b81cadfce97d71b07442604af26c59fb" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;http://codeception.com/&quot;&gt;Codeception&lt;/a&gt; to test your code, you should consider using the &lt;code&gt;yii2-codeception&lt;/code&gt; extension which has built-in support for loading and accessing fixtures. If you are using other testing frameworks, you may use &lt;a href=&quot;yii-test-fixturetrait&quot;&gt;yii\test\FixtureTrait&lt;/a&gt; in your test cases to achieve the same goal.</source>
          <target state="translated">如果您正在使用&lt;a href=&quot;http://codeception.com/&quot;&gt;Codeception&lt;/a&gt;测试代码，则应考虑使用 &lt;code&gt;yii2-codeception&lt;/code&gt; 扩展，该扩展内置支持加载和访问灯具。如果使用其他测试框架，则可以在测试用例中使用&lt;a href=&quot;yii-test-fixturetrait&quot;&gt;yii \ test \ FixtureTrait&lt;/a&gt;来实现相同的目标。</target>
        </trans-unit>
        <trans-unit id="d09c3d1a47aec1e68c234972666fda76e27c788e" translate="yes" xml:space="preserve">
          <source>If you are using RBAC (Role-Based Access Control), you may also specify role or permission names. In this case, &lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii\web\User::can()&lt;/a&gt; will be called to check access.</source>
          <target state="translated">如果您正在使用RBAC（基于角色的访问控制），则还可以指定角色或权限名称。在这种情况下，将调用&lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii \ web \ User :: can（）&lt;/a&gt;检查访问。</target>
        </trans-unit>
        <trans-unit id="ad1c6d719e6dccd6b9958b5720f3b6a3500673c6" translate="yes" xml:space="preserve">
          <source>If you are using the array format to specify columns, you can also use the array keys to specify the column aliases. For example, the above code can be rewritten as follows,</source>
          <target state="translated">如果使用数组格式来指定列,也可以使用数组键来指定列的别名。例如,上面的代码可以重写如下。</target>
        </trans-unit>
        <trans-unit id="cca6006b06430b370aef7e215d362f4f853ce00b" translate="yes" xml:space="preserve">
          <source>If you are using the array format, you can also use the array keys to specify the table aliases, like the following:</source>
          <target state="translated">如果使用的是数组格式,也可以使用数组键来指定表的别名,比如下面。</target>
        </trans-unit>
        <trans-unit id="cf272a02eda59adafb9739848242520368c3b760" translate="yes" xml:space="preserve">
          <source>If you can write to the root level directory i.e. where &lt;code&gt;config&lt;/code&gt;, &lt;code&gt;logs&lt;/code&gt; and &lt;code&gt;www&lt;/code&gt; are, then upload &lt;code&gt;assets&lt;/code&gt;, &lt;code&gt;commands&lt;/code&gt; etc. as is to the root level directory.</source>
          <target state="translated">如果您可以写入根目录，即 &lt;code&gt;config&lt;/code&gt; ， &lt;code&gt;logs&lt;/code&gt; 和 &lt;code&gt;www&lt;/code&gt; 所在的位置，则将 &lt;code&gt;assets&lt;/code&gt; ， &lt;code&gt;commands&lt;/code&gt; 等原样上传到根目录。</target>
        </trans-unit>
        <trans-unit id="df8767bc6311f37d43cc764bb148cd0b46cfb3c4" translate="yes" xml:space="preserve">
          <source>If you check the &lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;entry script&lt;/a&gt;&lt;code&gt;web/index.php&lt;/code&gt; of your application, you will find the following line, which essentially makes &lt;code&gt;YII_ENV_DEV&lt;/code&gt; to be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">如果您检查应用程序的&lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;输入脚本&lt;/a&gt; &lt;code&gt;web/index.php&lt;/code&gt; ，则会发现以下行，这实际上使 &lt;code&gt;YII_ENV_DEV&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e2b8995bac820139370c7025dec71f9ddc12641" translate="yes" xml:space="preserve">
          <source>If you do not already have Composer installed, you may do so by following the instructions at &lt;a href=&quot;https://getcomposer.org/download/&quot;&gt;getcomposer.org&lt;/a&gt;. On Linux and Mac OS X, you'll run the following commands:</source>
          <target state="translated">如果尚未安装Composer，则可以按照&lt;a href=&quot;https://getcomposer.org/download/&quot;&gt;getcomposer.org上&lt;/a&gt;的说明进行安装。在Linux和Mac OS X上，您将运行以下命令：</target>
        </trans-unit>
        <trans-unit id="34e02e29d3b917fae8bc5e506145f3a5d872502e" translate="yes" xml:space="preserve">
          <source>If you do not call the &lt;a href=&quot;yii-db-query#select()-detail&quot;&gt;select()&lt;/a&gt; method when building a query, &lt;code&gt;*&lt;/code&gt; will be selected, which means selecting &lt;em&gt;all&lt;/em&gt; columns.</source>
          <target state="translated">如果在构建查询时未调用&lt;a href=&quot;yii-db-query#select()-detail&quot;&gt;select（）&lt;/a&gt;方法，则将选择 &lt;code&gt;*&lt;/code&gt; ，这表示选择&lt;em&gt;所有&lt;/em&gt;列。</target>
        </trans-unit>
        <trans-unit id="9bbd9756599724c118670f73c6822737993caac2" translate="yes" xml:space="preserve">
          <source>If you do not set this property, it means the source asset files are located under &lt;a href=&quot;yii-web-assetbundle#%24basePath-detail&quot;&gt;$basePath&lt;/a&gt;.</source>
          <target state="translated">如果未设置此属性，则意味着源资产文件位于&lt;a href=&quot;yii-web-assetbundle#%24basePath-detail&quot;&gt;$ basePath下&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="15df1e1bf52515ef5c414fda35e0f81dc0c5cf8b" translate="yes" xml:space="preserve">
          <source>If you do not specify a container, the method will first try &lt;code&gt;Yii::$app&lt;/code&gt; followed by &lt;code&gt;Yii::$container&lt;/code&gt;.</source>
          <target state="translated">如果未指定容器，则该方法将首先尝试 &lt;code&gt;Yii::$app&lt;/code&gt; 然后是 &lt;code&gt;Yii::$container&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bbfbd8d8baef3ed91f59f15a458d0e79092210a1" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;a href=&quot;yii-log-target#%24categories-detail&quot;&gt;categories&lt;/a&gt; property, it means the target will process messages of &lt;em&gt;any&lt;/em&gt; category.</source>
          <target state="translated">如果未指定&lt;a href=&quot;yii-log-target#%24categories-detail&quot;&gt;Categories&lt;/a&gt;属性，则意味着目标将处理&lt;em&gt;任何&lt;/em&gt;类别的消息。</target>
        </trans-unit>
        <trans-unit id="c83976f53814a5c6e157693af42cd201c01528fa" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;a href=&quot;yii-log-target#%24levels-detail&quot;&gt;levels&lt;/a&gt; property, it means the target will process messages of &lt;em&gt;any&lt;/em&gt; severity level.</source>
          <target state="translated">如果不指定&lt;a href=&quot;yii-log-target#%24levels-detail&quot;&gt;级别&lt;/a&gt;属性，则意味着目标将处理&lt;em&gt;任何&lt;/em&gt;严重性级别的消息。</target>
        </trans-unit>
        <trans-unit id="a0dc687b3f47759a70f2551c6991ad2949f4ffe4" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;code&gt;on&lt;/code&gt; property, the rule would be applied in all scenarios. A rule is called an &lt;em&gt;active rule&lt;/em&gt; if it can be applied in the current &lt;a href=&quot;yii-base-model#%24scenario-detail&quot;&gt;scenario&lt;/a&gt;.</source>
          <target state="translated">如果未指定 &lt;code&gt;on&lt;/code&gt; 属性，则该规则将应用于所有方案。如果可以在当前&lt;a href=&quot;yii-base-model#%24scenario-detail&quot;&gt;方案中&lt;/a&gt;应用&lt;em&gt;规则，&lt;/em&gt;则该规则称为&lt;em&gt;活动规则&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="02e99cf5bbefbfce55e712a3a93d5a3e326a4e7e" translate="yes" xml:space="preserve">
          <source>If you do not want to use automatically generated labels, you may override &lt;a href=&quot;yii-base-model#attributeLabels()-detail&quot;&gt;yii\base\Model::attributeLabels()&lt;/a&gt; to explicitly declare attribute labels. For example,</source>
          <target state="translated">如果您不想使用自动生成的标签，则可以重写&lt;a href=&quot;yii-base-model#attributeLabels()-detail&quot;&gt;yii \ base \ Model :: attributeLabels（）&lt;/a&gt;来显式声明属性标签。例如，</target>
        </trans-unit>
        <trans-unit id="2233096be3004f1317ef8ce2d620d5044d2276ed" translate="yes" xml:space="preserve">
          <source>If you don't have access to the server configuration, you can setup &lt;a href=&quot;yii-filters-hostcontrol&quot;&gt;yii\filters\HostControl&lt;/a&gt; filter at application level in order to protect against such kind of attack:</source>
          <target state="translated">如果您无权访问服务器配置，则可以在应用程序级别设置&lt;a href=&quot;yii-filters-hostcontrol&quot;&gt;yii \ filters \ HostControl&lt;/a&gt;过滤器，以防止此类攻击：</target>
        </trans-unit>
        <trans-unit id="297fdf89d1ba18aa001365c462a967490eb1353d" translate="yes" xml:space="preserve">
          <source>If you don't want a filter for this data column, set this value to be false.</source>
          <target state="translated">如果不希望对该数据列进行过滤,请将此值设置为false。</target>
        </trans-unit>
        <trans-unit id="8f16ee7856b24b7e128f183542176ba6c98a7896" translate="yes" xml:space="preserve">
          <source>If you don't want to hardcode what users have certain roles, don't put &lt;code&gt;-&amp;gt;assign()&lt;/code&gt; calls into the command. Instead, create either UI or console command to manage assignments.</source>
          <target state="translated">如果您不想硬编码哪些用户具有某些角色，请不要在命令中放置 &lt;code&gt;-&amp;gt;assign()&lt;/code&gt; 调用。而是创建UI或控制台命令来管理分配。</target>
        </trans-unit>
        <trans-unit id="10dd3b49a623e880cab614b0f3f3f9cb137d0787" translate="yes" xml:space="preserve">
          <source>If you don't want to hardcode which users have certain roles, don't put &lt;code&gt;-&amp;gt;assign()&lt;/code&gt; calls in migrations. Instead, create either UI or console command to manage assignments.</source>
          <target state="translated">如果您不想硬编码哪些用户具有某些角色，请不要在迁移中放置 &lt;code&gt;-&amp;gt;assign()&lt;/code&gt; 调用。而是创建UI或控制台命令来管理分配。</target>
        </trans-unit>
        <trans-unit id="75c1aeab64a68a337bfda4419659b6450aa83471" translate="yes" xml:space="preserve">
          <source>If you don't want to use migration and need SQL instead, files for all databases are in migrations directory.</source>
          <target state="translated">如果你不想使用迁移而需要SQL,所有数据库的文件都在migrations目录下。</target>
        </trans-unit>
        <trans-unit id="81567f29f5cd049f5d932ed4b5a9c26bb0d3983c" translate="yes" xml:space="preserve">
          <source>If you had Composer already installed before, make sure you use an up to date version. You can update Composer by running &lt;code&gt;composer self-update&lt;/code&gt;.</source>
          <target state="translated">如果您以前已经安装过Composer，请确保使用最新版本。您可以通过运行 &lt;code&gt;composer self-update&lt;/code&gt; 来更新Composer 。</target>
        </trans-unit>
        <trans-unit id="226c85b94e088f58e757c44ac9999f77253a0581" translate="yes" xml:space="preserve">
          <source>If you have multiple migrations that use the same database, it is recommended that you create a base migration class with the above &lt;code&gt;init()&lt;/code&gt; code. Then each migration class can extend from this base class.</source>
          <target state="translated">如果您有使用同一数据库的多个迁移，则建议您使用上面的 &lt;code&gt;init()&lt;/code&gt; 代码创建一个基本迁移类。然后，每个迁移类都可以从该基类扩展。</target>
        </trans-unit>
        <trans-unit id="3ca820c6a3f148bcdc5cc2897e2506bd35c89231" translate="yes" xml:space="preserve">
          <source>If you have registered two aliases '@foo' and '@foo/bar'. Then translating '@foo/bar/config' would replace the part '@foo/bar' (instead of '@foo') with the corresponding registered path. This is because the longest alias takes precedence.</source>
          <target state="translated">如果你注册了两个别名'@foo'和'@foo/bar'。那么翻译'@foo/bar/config'就会用相应的注册路径替换'@foo/bar'部分(而不是'@foo')。这是因为最长的别名优先。</target>
        </trans-unit>
        <trans-unit id="074a0067623a940403724020352ca9fff63461f7" translate="yes" xml:space="preserve">
          <source>If you have set up &lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationNamespaces-detail&quot;&gt;$migrationNamespaces&lt;/a&gt;, you may set this field to &lt;code&gt;null&lt;/code&gt; in order to disable usage of migrations that are not namespaced.</source>
          <target state="translated">如果已设置&lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationNamespaces-detail&quot;&gt;$ migrationNamespaces&lt;/a&gt;，则可以将此字段设置为 &lt;code&gt;null&lt;/code&gt; ，以禁止使用未命名空间的迁移。</target>
        </trans-unit>
        <trans-unit id="bf461844ffbd3c10d5abbe039431781f607e5f46" translate="yes" xml:space="preserve">
          <source>If you just want to use query caching for a single query, you can call &lt;a href=&quot;yii-db-command#cache()-detail&quot;&gt;yii\db\Command::cache()&lt;/a&gt; when building the command. For example,</source>
          <target state="translated">如果只想对单个查询使用查询缓存，则在构建命令时可以调用&lt;a href=&quot;yii-db-command#cache()-detail&quot;&gt;yii \ db \ Command :: cache（）&lt;/a&gt;。例如，</target>
        </trans-unit>
        <trans-unit id="c5064b4e1cd50b3f1237adabca0cffd7e52dc8a2" translate="yes" xml:space="preserve">
          <source>If you know the input type in advance, it's more convenient to use the shortcut methods:</source>
          <target state="translated">如果事先知道了输入类型,使用快捷方法会更方便。</target>
        </trans-unit>
        <trans-unit id="20205f9420f300877ed35da67fba58c90dbbbc0d" translate="yes" xml:space="preserve">
          <source>If you miss &lt;code&gt;\Yii::endProfile('block1')&lt;/code&gt; or switch the order of &lt;code&gt;\Yii::endProfile('block1')&lt;/code&gt; and &lt;code&gt;\Yii::endProfile('block2')&lt;/code&gt;, the performance profiling will not work.</source>
          <target state="translated">如果您错过 &lt;code&gt;\Yii::endProfile('block1')&lt;/code&gt; 或切换 &lt;code&gt;\Yii::endProfile('block1')&lt;/code&gt; 和 &lt;code&gt;\Yii::endProfile('block2')&lt;/code&gt; ，则性能分析将不起作用。</target>
        </trans-unit>
        <trans-unit id="17e6d86332962c0e1a0a19ec8415cad80fa6504b" translate="yes" xml:space="preserve">
          <source>If you need to build string dynamically combining multiple styles it's better to use &lt;a href=&quot;yii-helpers-baseconsole#ansiFormat()-detail&quot;&gt;ansiFormat()&lt;/a&gt;:</source>
          <target state="translated">如果您需要动态组合多种样式来构建字符串，则最好使用&lt;a href=&quot;yii-helpers-baseconsole#ansiFormat()-detail&quot;&gt;ansiFormat（）&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="d50f41ee67e8569f928d2157e8866cbe9e336b7c" translate="yes" xml:space="preserve">
          <source>If you need to generate &lt;code&gt;mailto&lt;/code&gt; links, you can use the following code:</source>
          <target state="translated">如果需要生成 &lt;code&gt;mailto&lt;/code&gt; 链接，则可以使用以下代码：</target>
        </trans-unit>
        <trans-unit id="9b2f9aa5737990c5740d2b149e2d7b6b607e62f6" translate="yes" xml:space="preserve">
          <source>If you need to pass additional data to each view, you can use the &lt;a href=&quot;yii-widgets-listview#%24viewParams-detail&quot;&gt;$viewParams&lt;/a&gt; property to pass key value pairs like the following:</source>
          <target state="translated">如果需要将其他数据传递给每个视图，则可以使用&lt;a href=&quot;yii-widgets-listview#%24viewParams-detail&quot;&gt;$ viewParams&lt;/a&gt;属性传递键值对，如下所示：</target>
        </trans-unit>
        <trans-unit id="792f7deec5e7c3ac4cfae0908b2093492aab2f2e" translate="yes" xml:space="preserve">
          <source>If you need to perform asynchronous client-side validation, you can create &lt;a href=&quot;http://api.jquery.com/category/deferred-object/&quot;&gt;Deferred objects&lt;/a&gt;. For example, to perform a custom AJAX validation, you can use the following code:</source>
          <target state="translated">如果需要执行异步客户端验证，则可以创建&lt;a href=&quot;http://api.jquery.com/category/deferred-object/&quot;&gt;Deferred对象&lt;/a&gt;。例如，要执行自定义AJAX验证，可以使用以下代码：</target>
        </trans-unit>
        <trans-unit id="ca224e27a7ea5d8173e777c554e08e2168ab1964" translate="yes" xml:space="preserve">
          <source>If you need to perform asynchronous client-side validation, you can create &lt;a href=&quot;https://api.jquery.com/category/deferred-object/&quot;&gt;Deferred objects&lt;/a&gt;. For example, to perform a custom AJAX validation, you can use the following code:</source>
          <target state="translated">如果需要执行异步客户端验证，则可以创建&lt;a href=&quot;https://api.jquery.com/category/deferred-object/&quot;&gt;Deferred对象&lt;/a&gt;。例如，要执行自定义AJAX验证，可以使用以下代码：</target>
        </trans-unit>
        <trans-unit id="d8a69e74f2142a7da431174b057d7c7fab686eff" translate="yes" xml:space="preserve">
          <source>If you need to perform multiple validations against several values, you can use &lt;a href=&quot;yii-base-dynamicmodel&quot;&gt;yii\base\DynamicModel&lt;/a&gt; which supports declaring both attributes and rules on the fly. Its usage is like the following:</source>
          <target state="translated">如果需要对多个值执行多次验证，则可以使用&lt;a href=&quot;yii-base-dynamicmodel&quot;&gt;yii \ base \ DynamicModel&lt;/a&gt;，它支持动态声明属性和规则。其用法如下所示：</target>
        </trans-unit>
        <trans-unit id="f08e17867db1f3d19412df39187a07c792cfbd39" translate="yes" xml:space="preserve">
          <source>If you only need to perform one type of validation (e.g. validating email addresses), you may call the &lt;a href=&quot;yii-validators-validator#validate()-detail&quot;&gt;validate()&lt;/a&gt; method of the desired validator, like the following:</source>
          <target state="translated">如果只需要执行一种类型的验证（例如，验证电子邮件地址），则可以调用所需验证器的&lt;a href=&quot;yii-validators-validator#validate()-detail&quot;&gt;validate（）&lt;/a&gt;方法，如下所示：</target>
        </trans-unit>
        <trans-unit id="92fe42db235098b77ea17bda7aa92d3f4609001d" translate="yes" xml:space="preserve">
          <source>If you only want to install the core framework and would like to build an entire application from scratch, you may follow the instructions as explained in &lt;a href=&quot;guide-tutorial-start-from-scratch&quot;&gt;Building Application from Scratch&lt;/a&gt;.</source>
          <target state="translated">如果你只是想安装核心框架，并想从头开始构建一个完整的应用程序，你可以按照说明中解释&lt;a href=&quot;guide-tutorial-start-from-scratch&quot;&gt;从头开始构建应用程序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5132167b73f3206327b1551caa7d3bd82c21435d" translate="yes" xml:space="preserve">
          <source>If you override the &lt;a href=&quot;yii-base-object#init()-detail&quot;&gt;yii\base\Object::init()&lt;/a&gt; method, make sure you call the parent implementation of &lt;code&gt;init()&lt;/code&gt;&lt;em&gt;at the beginning&lt;/em&gt; of your &lt;code&gt;init()&lt;/code&gt; method.</source>
          <target state="translated">如果忽略&lt;a href=&quot;yii-base-object#init()-detail&quot;&gt;警予\基地\ ::对象的init（）&lt;/a&gt;方法，一定要调用父类的实现 &lt;code&gt;init()&lt;/code&gt; &lt;em&gt;在开始&lt;/em&gt;您的 &lt;code&gt;init()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="f5ff7ba9e299b08518cab5f6fc7a7b51d30603d9" translate="yes" xml:space="preserve">
          <source>If you override the constructor, specify a &lt;code&gt;$config&lt;/code&gt; parameter as the constructor's &lt;em&gt;last&lt;/em&gt; parameter, and then pass this parameter to the parent constructor.</source>
          <target state="translated">如果覆盖构造函数，请指定 &lt;code&gt;$config&lt;/code&gt; 参数作为构造函数的&lt;em&gt;最后一个&lt;/em&gt;参数，然后将此参数传递给父构造函数。</target>
        </trans-unit>
        <trans-unit id="cda60d790c37655ba5e4268ca2f7190265c10c83" translate="yes" xml:space="preserve">
          <source>If you override this method, make sure you call the parent implementation first.</source>
          <target state="translated">如果你重写了这个方法,请确保你先调用父级实现。</target>
        </trans-unit>
        <trans-unit id="eef6866dec6da3b2206202cc146d4c98d8a132d8" translate="yes" xml:space="preserve">
          <source>If you override this method, make sure you call the parent implementation in the last.</source>
          <target state="translated">如果你重写了这个方法,请确保你在最后调用父体实现。</target>
        </trans-unit>
        <trans-unit id="789a89c920137236a0377112c245ee793f9f0db7" translate="yes" xml:space="preserve">
          <source>If you override this method, please make sure you call the parent implementation.</source>
          <target state="translated">如果你重写了这个方法,请确保你调用了父体的实现。</target>
        </trans-unit>
        <trans-unit id="00ca879ed9c67ca95fe8e219c8f8ea6b15834a0a" translate="yes" xml:space="preserve">
          <source>If you override this method, you should consider calling the parent implementation so that the data returned by &lt;a href=&quot;yii-elasticsearch-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt; can be populated into the index.</source>
          <target state="translated">如果重写此方法，则应考虑调用父实现，以便可以将&lt;a href=&quot;yii-elasticsearch-activefixture#getData()-detail&quot;&gt;getData（）&lt;/a&gt;返回的数据填充到索引中。</target>
        </trans-unit>
        <trans-unit id="5d394008a8d1ec16ea61030a724ae789587aec39" translate="yes" xml:space="preserve">
          <source>If you override this method, you should consider calling the parent implementation so that the data returned by &lt;a href=&quot;yii-sphinx-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt; can be populated into the index.</source>
          <target state="translated">如果重写此方法，则应考虑调用父实现，以便可以将&lt;a href=&quot;yii-sphinx-activefixture#getData()-detail&quot;&gt;getData（）&lt;/a&gt;返回的数据填充到索引中。</target>
        </trans-unit>
        <trans-unit id="fb5638ac19004d386e25e4df5ee6752ad149ab1d" translate="yes" xml:space="preserve">
          <source>If you override this method, you should consider calling the parent implementation so that the data returned by &lt;a href=&quot;yii-test-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt; can be populated into the table.</source>
          <target state="translated">如果重写此方法，则应考虑调用父实现，以便可以将&lt;a href=&quot;yii-test-activefixture#getData()-detail&quot;&gt;getData（）&lt;/a&gt;返回的数据填充到表中。</target>
        </trans-unit>
        <trans-unit id="3524d4f731d1186bff33d0f612c1a67ae12da79a" translate="yes" xml:space="preserve">
          <source>If you override this method, your code should look like the following:</source>
          <target state="translated">如果你覆盖了这个方法,你的代码应该像下面这样。</target>
        </trans-unit>
        <trans-unit id="41bdba2faa8095bf8604ac901078b7a369d4754b" translate="yes" xml:space="preserve">
          <source>If you previously created the &lt;code&gt;controllers/CountryController.php&lt;/code&gt; and &lt;code&gt;views/country/index.php&lt;/code&gt; files (in the databases section of the guide), check the &quot;overwrite&quot; box to replace them. (The previous versions did not have full CRUD support.)</source>
          <target state="translated">如果您先前创建了 &lt;code&gt;controllers/CountryController.php&lt;/code&gt; 和 &lt;code&gt;views/country/index.php&lt;/code&gt; 文件（在指南的数据库部分中），请选中&amp;ldquo;覆盖&amp;rdquo;框以替换它们。（以前的版本没有完全的CRUD支持。）</target>
        </trans-unit>
        <trans-unit id="4db19082b234b0490ce30c7c7c6df9fd6697790d" translate="yes" xml:space="preserve">
          <source>If you set a custom &lt;code&gt;id&lt;/code&gt; for the container element, you may need to adjust the &lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$selectors&lt;/a&gt; accordingly.</source>
          <target state="translated">如果您为容器元素设置了自定义 &lt;code&gt;id&lt;/code&gt; ，则可能需要相应地调整&lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$ selector&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d635d4b83c6c1478ebc67e883a1fdc20f440e21b" translate="yes" xml:space="preserve">
          <source>If you set a custom &lt;code&gt;id&lt;/code&gt; for the error element, you may need to adjust the &lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$selectors&lt;/a&gt; accordingly.</source>
          <target state="translated">如果为错误元素设置了自定义 &lt;code&gt;id&lt;/code&gt; ，则可能需要相应地调整&lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$ selector&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="af94c050f74ecdf042ac85674c3bdcad83c69f7d" translate="yes" xml:space="preserve">
          <source>If you set a custom &lt;code&gt;id&lt;/code&gt; for the input element, you may need to adjust the &lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$selectors&lt;/a&gt; accordingly.</source>
          <target state="translated">如果为输入元素设置了自定义 &lt;code&gt;id&lt;/code&gt; ，则可能需要相应地调整&lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$ selector&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="75d36be3956961e96969f915a0b15f3fa2b95cbd" translate="yes" xml:space="preserve">
          <source>If you set a custom &lt;code&gt;id&lt;/code&gt; for the textarea element, you may need to adjust the &lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$selectors&lt;/a&gt; accordingly.</source>
          <target state="translated">如果您为textarea元素设置了自定义 &lt;code&gt;id&lt;/code&gt; ，则可能需要相应地调整&lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$ selector&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="81d5471e4053253eb9f42280d7521cb6afd7d948" translate="yes" xml:space="preserve">
          <source>If you specify an invalid limit or offset (e.g. a negative value), it will be ignored.</source>
          <target state="translated">如果你指定了一个无效的限制或偏移量(如负值),它将被忽略。</target>
        </trans-unit>
        <trans-unit id="a34fe2f0885048bb9fe4db8cb3e69dd8b5091175" translate="yes" xml:space="preserve">
          <source>If you specify the query result to be indexed by some column via &lt;a href=&quot;yii-db-querytrait#indexBy()-detail&quot;&gt;yii\db\Query::indexBy()&lt;/a&gt;, the batch query will still keep the proper index.</source>
          <target state="translated">如果通过&lt;a href=&quot;yii-db-querytrait#indexBy()-detail&quot;&gt;yii \ db \ Query :: indexBy（）&lt;/a&gt;指定要由某些列索引的查询结果，则批处理查询仍将保留正确的索引。</target>
        </trans-unit>
        <trans-unit id="7ac4b149f8d3d808c930cc0b94116aa25c9764ca" translate="yes" xml:space="preserve">
          <source>If you specify view name as a scalar string, its rendering result will be used as HTML body, while plain text body will be composed by removing all HTML entities from HTML one.</source>
          <target state="translated">如果将视图名称指定为标量字符串,其渲染结果将作为HTML体,而纯文本体将由HTML体中的所有HTML实体组成。</target>
        </trans-unit>
        <trans-unit id="eb19bfefe929b6c29848d7e1776c6d00c34d3cc5" translate="yes" xml:space="preserve">
          <source>If you use callback as an attribute value it will be called with the following three parameters:</source>
          <target state="translated">如果你使用callback作为属性值,它将被调用,有以下三个参数。</target>
        </trans-unit>
        <trans-unit id="6543e55b509c45e792379a58952614f592b38291" translate="yes" xml:space="preserve">
          <source>If you use the &quot;yii&quot; JavaScript module, it will handle the AJAX redirection as described above. Otherwise, you should write the following JavaScript code to handle the redirection:</source>
          <target state="translated">如果你使用 &quot;yii &quot;JavaScript模块,它将会像上面描述的那样处理AJAX重定向。否则,你应该编写以下JavaScript代码来处理重定向。</target>
        </trans-unit>
        <trans-unit id="d48e18a9ccf2ddbe904498f6864ad878a0ea4b3a" translate="yes" xml:space="preserve">
          <source>If you want an action parameter to accept array values, you should type-hint it with &lt;code&gt;array&lt;/code&gt;, like the following:</source>
          <target state="translated">如果希望动作参数接受数组值，则应使用 &lt;code&gt;array&lt;/code&gt; 键入提示，如下所示：</target>
        </trans-unit>
        <trans-unit id="9744fe362c811352b1b65a34f3e252ff2d358a3a" translate="yes" xml:space="preserve">
          <source>If you want multiple choices to be selectable, you can use a checkbox list:</source>
          <target state="translated">如果您希望有多个选择,您可以使用复选框列表。</target>
        </trans-unit>
        <trans-unit id="caa73650d998bff5569c491747f3a175e8cd1f1e" translate="yes" xml:space="preserve">
          <source>If you want several migrations to be applied and tracked down completely separated from each other, you can configure multiple migration commands which will use different namespaces and migration history tables:</source>
          <target state="translated">如果你想让几个迁移完全分开应用和跟踪,你可以配置多个迁移命令,这些命令将使用不同的命名空间和迁移历史表。</target>
        </trans-unit>
        <trans-unit id="3d46b091dc01e90d1a3c337e76eb07f5e2dbf441" translate="yes" xml:space="preserve">
          <source>If you want to access other data in layouts, you have to use the pull method as described in the &lt;a href=&quot;#accessing-data-in-views&quot;&gt;Accessing Data in Views&lt;/a&gt; subsection. If you want to pass data from a content view to a layout, you may use the method described in the &lt;a href=&quot;#sharing-data-among-views&quot;&gt;Sharing Data among Views&lt;/a&gt; subsection.</source>
          <target state="translated">如果要访问布局中的其他数据，则必须使用&amp;ldquo; &lt;a href=&quot;#accessing-data-in-views&quot;&gt;访问视图&lt;/a&gt;中的数据&amp;rdquo;小节中所述的pull方法。如果要将数据从内容视图传递到布局，则可以使用&amp;ldquo; &lt;a href=&quot;#sharing-data-among-views&quot;&gt;在视图之间共享数据&amp;rdquo;&lt;/a&gt;小节中描述的方法。</target>
        </trans-unit>
        <trans-unit id="96c97c9d156f964d584377c0f7dc4b51df7486ab" translate="yes" xml:space="preserve">
          <source>If you want to authenticate users using username and password, you should provide the &lt;a href=&quot;yii-filters-auth-httpbasicauth#%24auth-detail&quot;&gt;$auth&lt;/a&gt; function for example like the following:</source>
          <target state="translated">如果要使用用户名和密码对用户进行身份验证，则应提供&lt;a href=&quot;yii-filters-auth-httpbasicauth#%24auth-detail&quot;&gt;$ auth&lt;/a&gt;函数，例如以下所示：</target>
        </trans-unit>
        <trans-unit id="973062f3d1c199266c4bb56840280c6f05a20624" translate="yes" xml:space="preserve">
          <source>If you want to build UI element manually, you may use &lt;a href=&quot;yii-data-pagination#createUrl()-detail&quot;&gt;yii\data\Pagination::createUrl()&lt;/a&gt; to create URLs that would lead to different pages. The method requires a page parameter and will create a properly formatted URL containing the page parameter. For example,</source>
          <target state="translated">如果要手动构建UI元素，则可以使用&lt;a href=&quot;yii-data-pagination#createUrl()-detail&quot;&gt;yii \ data \ Pagination :: createUrl（）&lt;/a&gt;创建指向不同页面的URL。该方法需要一个page参数，并将创建一个格式正确的URL，其中包含page参数。例如，</target>
        </trans-unit>
        <trans-unit id="cfdac1c47758b755ae4fc2575033927454706401" translate="yes" xml:space="preserve">
          <source>If you want to configure it:</source>
          <target state="translated">如果你想配置它。</target>
        </trans-unit>
        <trans-unit id="8784c117ab38842c5a718d041de7d5d60cdf83f5" translate="yes" xml:space="preserve">
          <source>If you want to create a URL with an anchor, you can use the array format with a &lt;code&gt;#&lt;/code&gt; parameter. For example,</source>
          <target state="translated">如果要使用锚创建URL，则可以将数组格式与 &lt;code&gt;#&lt;/code&gt; 参数一起使用。例如，</target>
        </trans-unit>
        <trans-unit id="4930d393b0bf6975b94b5fdf61801cb1fcd6e99a" translate="yes" xml:space="preserve">
          <source>If you want to ensure that the &lt;code&gt;$unbufferedDb&lt;/code&gt; has exactly the same PDO attributes like the original buffered &lt;code&gt;$db&lt;/code&gt; but the &lt;code&gt;PDO::MYSQL_ATTR_USE_BUFFERED_QUERY&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, &lt;a href=&quot;https://github.com/yiisoft/yii2/issues/8420#issuecomment-301423833&quot;&gt;consider a deep copy of &lt;code&gt;$db&lt;/code&gt;&lt;/a&gt;, set it to false manually.</source>
          <target state="translated">如果要确保 &lt;code&gt;$unbufferedDb&lt;/code&gt; 具有与原始缓冲的 &lt;code&gt;$db&lt;/code&gt; 完全相同的PDO属性，但 &lt;code&gt;PDO::MYSQL_ATTR_USE_BUFFERED_QUERY&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; ，请&lt;a href=&quot;https://github.com/yiisoft/yii2/issues/8420#issuecomment-301423833&quot;&gt;考虑 &lt;code&gt;$db&lt;/code&gt; &lt;/a&gt;的深层副本，将其手动设置为false。</target>
        </trans-unit>
        <trans-unit id="ff5cf31e060bb3ae5d605ca84033c8473ea9f53c" translate="yes" xml:space="preserve">
          <source>If you want to show an error page telling the user that his request is invalid or unexpected, you may simply throw an &lt;a href=&quot;yii-web-httpexception&quot;&gt;HTTP exception&lt;/a&gt;, such as &lt;a href=&quot;yii-web-notfoundhttpexception&quot;&gt;yii\web\NotFoundHttpException&lt;/a&gt;. The error handler will correctly set the HTTP status code of the response and use an appropriate error view to display the error message.</source>
          <target state="translated">如果要显示错误页面告诉用户其请求无效或意外，则可以简单地引发&lt;a href=&quot;yii-web-httpexception&quot;&gt;HTTP异常&lt;/a&gt;，例如&lt;a href=&quot;yii-web-notfoundhttpexception&quot;&gt;yii \ web \ NotFoundHttpException&lt;/a&gt;。错误处理程序将正确设置响应的HTTP状态代码，并使用适当的错误视图显示错误消息。</target>
        </trans-unit>
        <trans-unit id="d04941355e3e0b34ca78d75fc75e90af4a129166" translate="yes" xml:space="preserve">
          <source>If you want to specify additional properties of the style tag, pass an array of name-values to the second argument. The last argument is a unique ID that is used to identify the style block and make sure it is only added once in case the same style is registered from different places in the code.</source>
          <target state="translated">如果您想指定样式标签的附加属性,请将一个名称值数组传递给第二个参数。最后一个参数是一个唯一的ID,用于识别样式块,并确保它只被添加一次,以防同一个样式在代码的不同地方被注册。</target>
        </trans-unit>
        <trans-unit id="181efa07bdef332fb8a67bc20224485544c2983e" translate="yes" xml:space="preserve">
          <source>If you want to specify what meta tags to generate in content views, you can call &lt;a href=&quot;yii-web-view#registerMetaTag()-detail&quot;&gt;yii\web\View::registerMetaTag()&lt;/a&gt; in a content view, like the following:</source>
          <target state="translated">如果要指定要在内容视图中生成的元标记，则可以在内容视图中调用&lt;a href=&quot;yii-web-view#registerMetaTag()-detail&quot;&gt;yii \ web \ View :: registerMetaTag（）&lt;/a&gt;，如下所示：</target>
        </trans-unit>
        <trans-unit id="0df30b48387d57bac7fe29b7f26676c4821e6997" translate="yes" xml:space="preserve">
          <source>If you want to start a transaction with the slave connection, you should explicitly do so, like the following:</source>
          <target state="translated">如果你想用从属连接启动一个事务,你应该显式地这样做,像下面这样。</target>
        </trans-unit>
        <trans-unit id="5ca04f49460e5df3ea9089fdbecfc9801486620f" translate="yes" xml:space="preserve">
          <source>If you want to start with a more sophisticated application, better suited to team development environments, you may consider installing the &lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced/blob/master/docs/guide/README.md&quot;&gt;Advanced Project Template&lt;/a&gt;.</source>
          <target state="translated">如果要从更适合团队开发环境的更复杂的应用程序开始，则可以考虑安装&lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced/blob/master/docs/guide/README.md&quot;&gt;Advanced Project Template&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a4fbaac18f251bdf4e9cb8186739748bfd2b2b0c" translate="yes" xml:space="preserve">
          <source>If you want to support all three authentication methods explained above, you can use &lt;code&gt;CompositeAuth&lt;/code&gt; like the following,</source>
          <target state="translated">如果要支持上述所有三种身份验证方法，可以使用 &lt;code&gt;CompositeAuth&lt;/code&gt; ，如下所示，</target>
        </trans-unit>
        <trans-unit id="a16ee12993c92cce650c40593db10383ad12ebe3" translate="yes" xml:space="preserve">
          <source>If you want to translate the messages for a module and avoid using a single translation file for all the messages, you can do it like the following:</source>
          <target state="translated">如果你想翻译一个模块的消息,避免使用一个翻译文件来翻译所有的消息,你可以像下面这样做。</target>
        </trans-unit>
        <trans-unit id="fc549bc1078d0feb282c28a7ae4502ae7a3a403c" translate="yes" xml:space="preserve">
          <source>If you want to turn off client-side validation completely, you may configure the &lt;a href=&quot;yii-widgets-activeform#%24enableClientValidation-detail&quot;&gt;yii\widgets\ActiveForm::$enableClientValidation&lt;/a&gt; property to be &lt;code&gt;false&lt;/code&gt;. You may also turn off client-side validation of individual input fields by configuring their &lt;a href=&quot;yii-widgets-activefield#%24enableClientValidation-detail&quot;&gt;yii\widgets\ActiveField::$enableClientValidation&lt;/a&gt; property to be false. When &lt;code&gt;enableClientValidation&lt;/code&gt; is configured at both the input field level and the form level, the former will take precedence.</source>
          <target state="translated">如果要完全关闭客户端验证，则可以将&lt;a href=&quot;yii-widgets-activeform#%24enableClientValidation-detail&quot;&gt;yii \ widgets \ ActiveForm :: $ enableClientValidation&lt;/a&gt;属性配置为 &lt;code&gt;false&lt;/code&gt; 。您也可以通过将单个输入字段的&lt;a href=&quot;yii-widgets-activefield#%24enableClientValidation-detail&quot;&gt;yii \ widgets \ ActiveField :: $ enableClientValidation&lt;/a&gt;属性配置为false来关闭客户端对单个输入字段的验证。在输入字段级别和表单级别都配置了 &lt;code&gt;enableClientValidation&lt;/code&gt; 时，前者优先。</target>
        </trans-unit>
        <trans-unit id="4d5d579ce05e6854d9f90531c98c9e2a9306c487" translate="yes" xml:space="preserve">
          <source>If you want to use a different database connection other than the &lt;code&gt;db&lt;/code&gt; component, you should override the &lt;a href=&quot;yii-db-activerecord#getDb()-detail&quot;&gt;getDb()&lt;/a&gt; method:</source>
          <target state="translated">如果要使用除 &lt;code&gt;db&lt;/code&gt; 组件之外的其他数据库连接，则应重写&lt;a href=&quot;yii-db-activerecord#getDb()-detail&quot;&gt;getDb（）&lt;/a&gt;方法：</target>
        </trans-unit>
        <trans-unit id="52f55d3c04e1f5c45cc778dbf626fbdf705ac5a9" translate="yes" xml:space="preserve">
          <source>If you want to use a widget that does not have &lt;code&gt;model&lt;/code&gt; and &lt;code&gt;attribute&lt;/code&gt; properties, please use &lt;a href=&quot;yii-widgets-activefield#render()-detail&quot;&gt;render()&lt;/a&gt; instead.</source>
          <target state="translated">如果要使用没有 &lt;code&gt;model&lt;/code&gt; 和 &lt;code&gt;attribute&lt;/code&gt; 属性的小部件，请改用&lt;a href=&quot;yii-widgets-activefield#render()-detail&quot;&gt;render（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4232e534d47ba4fe2443dc263ccd877595f5005a" translate="yes" xml:space="preserve">
          <source>If you want to use an absolute url you can call &lt;a href=&quot;yii-helpers-baseurl#to()-detail&quot;&gt;yii\helpers\Url::to()&lt;/a&gt; yourself, before passing the URL to this method, like this:</source>
          <target state="translated">如果要使用绝对URL，可以在将URL传递给此方法之前，自己调用&lt;a href=&quot;yii-helpers-baseurl#to()-detail&quot;&gt;yii \ helpers \ Url :: to（）&lt;/a&gt;，如下所示：</target>
        </trans-unit>
        <trans-unit id="9c00554841920360df5b674312015f71e11043fa" translate="yes" xml:space="preserve">
          <source>If you want to use an external style in a CSS file:</source>
          <target state="translated">如果你想在CSS文件中使用外部样式。</target>
        </trans-unit>
        <trans-unit id="b3c0dd1714d3e1f73614955b786e10ad9946b51d" translate="yes" xml:space="preserve">
          <source>If you want your validator to support validating a value without a model, you should also override &lt;a href=&quot;yii-validators-validator#validate()-detail&quot;&gt;yii\validators\Validator::validate()&lt;/a&gt;. You may also override &lt;a href=&quot;yii-validators-validator#validateValue()-detail&quot;&gt;yii\validators\Validator::validateValue()&lt;/a&gt; instead of &lt;code&gt;validateAttribute()&lt;/code&gt; and &lt;code&gt;validate()&lt;/code&gt; because by default the latter two methods are implemented by calling &lt;code&gt;validateValue()&lt;/code&gt;.</source>
          <target state="translated">如果希望验证器支持在没有模型的情况下验证值，则还应该覆盖&lt;a href=&quot;yii-validators-validator#validate()-detail&quot;&gt;yii \ validators \ Validator :: validate（）&lt;/a&gt;。您还可以覆盖&lt;a href=&quot;yii-validators-validator#validateValue()-detail&quot;&gt;yii \ validators \ Validator :: validateValue（）&lt;/a&gt;而不是 &lt;code&gt;validateAttribute()&lt;/code&gt; 和 &lt;code&gt;validate()&lt;/code&gt; ,因为默认情况下，后两种方法是通过调用 &lt;code&gt;validateValue()&lt;/code&gt; 实现的。</target>
        </trans-unit>
        <trans-unit id="75f25d4428efca03d2fa5ec005ba3811fa93de25" translate="yes" xml:space="preserve">
          <source>If you wish to render the report with your own representation, use &lt;a href=&quot;yiirequirementchecker#getResult()-detail&quot;&gt;getResult()&lt;/a&gt; instead of &lt;a href=&quot;yiirequirementchecker#render()-detail&quot;&gt;render()&lt;/a&gt;</source>
          <target state="translated">如果希望使用自己的表示形式呈现报告，请使用&lt;a href=&quot;yiirequirementchecker#getResult()-detail&quot;&gt;getResult（）&lt;/a&gt;而不是&lt;a href=&quot;yiirequirementchecker#render()-detail&quot;&gt;render（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aecdccc20549210b9767f57636f6f477e22ea4f8" translate="yes" xml:space="preserve">
          <source>If your DBMS supports Savepoint, you may nest multiple transactions like the following:</source>
          <target state="translated">如果您的DBMS支持Savepoint,您可以像下面这样嵌套多个事务。</target>
        </trans-unit>
        <trans-unit id="dc1b68aacc536f7e825ed1e2f72965abafe596d3" translate="yes" xml:space="preserve">
          <source>If your application allows user signup you need to assign roles to these new users once. For example, in order for all signed up users to become authors in your advanced project template you need to modify &lt;code&gt;frontend\models\SignupForm::signup()&lt;/code&gt; as follows:</source>
          <target state="translated">如果您的应用程序允许用户注册，则需要一次向这些新用户分配角色。例如，为了使所有注册用户都成为高级项目模板中的作者，您需要修改 &lt;code&gt;frontend\models\SignupForm::signup()&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="9c5f333f02e07ebac084592c1d7ddcf8419143df" translate="yes" xml:space="preserve">
          <source>If your application enables &lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;pretty URLs&lt;/a&gt;, you can then access Gii via URL: &lt;code&gt;http://localhost/path/to/index.php/gii&lt;/code&gt;</source>
          <target state="translated">如果您的应用程序启用了&lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;漂亮的URL&lt;/a&gt;，则可以通过URL访问Gii： &lt;code&gt;http://localhost/path/to/index.php/gii&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe801a3b4f552be6a8d316446a768ffa0b9b757d" translate="yes" xml:space="preserve">
          <source>If your application supports multiple languages and you want to display pages in the language that is the most preferred by the end user, you may use the language negotiation method &lt;a href=&quot;yii-web-request#getPreferredLanguage()-detail&quot;&gt;yii\web\Request::getPreferredLanguage()&lt;/a&gt;. This method takes a list of languages supported by your application, compares them with &lt;a href=&quot;yii-web-request#%24acceptableLanguages-detail&quot;&gt;acceptableLanguages&lt;/a&gt;, and returns the most appropriate language.</source>
          <target state="translated">如果您的应用程序支持多种语言，并且您想要以最终用户最喜欢的语言显示页面，则可以使用语言协商方法&lt;a href=&quot;yii-web-request#getPreferredLanguage()-detail&quot;&gt;yii \ web \ Request :: getPreferredLanguage（）&lt;/a&gt;。此方法获取应用程序支持的语言列表，将它们与&lt;a href=&quot;yii-web-request#%24acceptableLanguages-detail&quot;&gt;acceptableLanguages&lt;/a&gt;进行比较，并返回最合适的语言。</target>
        </trans-unit>
        <trans-unit id="30540e5536bbc5532e4ac632d4b4fbe84251097e" translate="yes" xml:space="preserve">
          <source>If your attribute name is different, you may configure the &lt;a href=&quot;yii-behaviors-sluggablebehavior#%24slugAttribute-detail&quot;&gt;$slugAttribute&lt;/a&gt; property like the following:</source>
          <target state="translated">如果属性名称不同，则可以如下配置&lt;a href=&quot;yii-behaviors-sluggablebehavior#%24slugAttribute-detail&quot;&gt;$ slugAttribute&lt;/a&gt;属性：</target>
        </trans-unit>
        <trans-unit id="d12f53fc7cc057edf533cc2d5d0b58fb6435d569" translate="yes" xml:space="preserve">
          <source>If your attribute names are different or you want to use a different way of calculating the timestamp, you may configure the &lt;a href=&quot;yii-behaviors-timestampbehavior#%24createdAtAttribute-detail&quot;&gt;$createdAtAttribute&lt;/a&gt;, &lt;a href=&quot;yii-behaviors-timestampbehavior#%24updatedAtAttribute-detail&quot;&gt;$updatedAtAttribute&lt;/a&gt; and &lt;a href=&quot;yii-behaviors-timestampbehavior#%24value-detail&quot;&gt;$value&lt;/a&gt; properties like the following:</source>
          <target state="translated">如果你的属性名称不同，或者您想使用计算时间戳的方式不一样，你可以配置&lt;a href=&quot;yii-behaviors-timestampbehavior#%24createdAtAttribute-detail&quot;&gt;$ createdAtAttribute&lt;/a&gt;，&lt;a href=&quot;yii-behaviors-timestampbehavior#%24updatedAtAttribute-detail&quot;&gt;$ updatedAtAttribute&lt;/a&gt;和&lt;a href=&quot;yii-behaviors-timestampbehavior#%24value-detail&quot;&gt;$值&lt;/a&gt;类似以下特性：</target>
        </trans-unit>
        <trans-unit id="655f56fb704f928de2fb1d3f2cf3423caa814d2e" translate="yes" xml:space="preserve">
          <source>If your attribute names are different, you may configure the &lt;a href=&quot;yii-behaviors-blameablebehavior#%24createdByAttribute-detail&quot;&gt;$createdByAttribute&lt;/a&gt; and &lt;a href=&quot;yii-behaviors-blameablebehavior#%24updatedByAttribute-detail&quot;&gt;$updatedByAttribute&lt;/a&gt; properties like the following:</source>
          <target state="translated">如果你的属性名称不同，您可以配置&lt;a href=&quot;yii-behaviors-blameablebehavior#%24createdByAttribute-detail&quot;&gt;$ createdByAttribute&lt;/a&gt;和&lt;a href=&quot;yii-behaviors-blameablebehavior#%24updatedByAttribute-detail&quot;&gt;$ updatedByAttribute&lt;/a&gt;性质类似如下：</target>
        </trans-unit>
        <trans-unit id="04e1fd7301c8b0a8c2eb130213b405fc33de7f48" translate="yes" xml:space="preserve">
          <source>If your code depends on jQuery, jQuery UI or Bootstrap, you should use these predefined asset bundles rather than creating your own versions. If the default setting of these bundles do not satisfy your needs, you may customize them as described in the &lt;a href=&quot;#customizing-asset-bundles&quot;&gt;Customizing Asset Bundle&lt;/a&gt; subsection.</source>
          <target state="translated">如果您的代码依赖jQuery，jQuery UI或Bootstrap，则应使用这些预定义的资产捆绑包，而不要创建自己的版本。如果这些捆绑包的默认设置不能满足您的需求，则可以按照&amp;ldquo; &lt;a href=&quot;#customizing-asset-bundles&quot;&gt;自定义资产捆绑包&amp;rdquo;&lt;/a&gt;小节中的描述对其进行自定义。</target>
        </trans-unit>
        <trans-unit id="4f2a41d12081f71e67635e96eb2364dde97bd614" translate="yes" xml:space="preserve">
          <source>If your controller class extends from &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii\rest\ActiveController&lt;/a&gt;, you should set its &lt;a href=&quot;yii-rest-activecontroller#%24modelClass-detail&quot;&gt;modelClass&lt;/a&gt; property to be the name of the resource class that you plan to serve through this controller. The class must extend from &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt;.</source>
          <target state="translated">如果控制器类从&lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii \ rest \ ActiveController&lt;/a&gt;扩展，则应将其&lt;a href=&quot;yii-rest-activecontroller#%24modelClass-detail&quot;&gt;modelClass&lt;/a&gt;属性设置为计划通过此控制器提供服务的资源类的名称。该类必须从&lt;a href=&quot;yii-db-activerecord&quot;&gt;yii \ db \ ActiveRecord&lt;/a&gt;扩展。</target>
        </trans-unit>
        <trans-unit id="a0a95f72d004584eaac38eaddc0002f08046ec4b" translate="yes" xml:space="preserve">
          <source>If your controllers extend from &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii\rest\ActiveController&lt;/a&gt;, you may override the &lt;a href=&quot;yii-rest-activecontroller#checkAccess()-detail&quot;&gt;checkAccess()&lt;/a&gt; method to perform authorization check. The method will be called by the built-in actions provided by &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii\rest\ActiveController&lt;/a&gt;.</source>
          <target state="translated">如果您的控制器从&lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii \ rest \ ActiveController&lt;/a&gt;扩展，则可以覆盖&lt;a href=&quot;yii-rest-activecontroller#checkAccess()-detail&quot;&gt;checkAccess（）&lt;/a&gt;方法以执行授权检查。该方法将由&lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii \ rest \ ActiveController&lt;/a&gt;提供的内置动作调用。</target>
        </trans-unit>
        <trans-unit id="0e64627496264d0eb09507e6456eacd2317502a7" translate="yes" xml:space="preserve">
          <source>If your data needs to be formatted before sending it to end users, you should set both of the &lt;a href=&quot;yii-web-response#%24format-detail&quot;&gt;format&lt;/a&gt; and &lt;a href=&quot;yii-web-response#%24data-detail&quot;&gt;data&lt;/a&gt; properties. The &lt;a href=&quot;yii-web-response#%24format-detail&quot;&gt;format&lt;/a&gt; property specifies in which format the &lt;a href=&quot;yii-web-response#%24data-detail&quot;&gt;data&lt;/a&gt; should be formatted. For example,</source>
          <target state="translated">如果在将数据发送给最终用户之前需要对其进行格式化，则应同时设置&lt;a href=&quot;yii-web-response#%24format-detail&quot;&gt;格式&lt;/a&gt;和&lt;a href=&quot;yii-web-response#%24data-detail&quot;&gt;数据&lt;/a&gt;属性。该&lt;a href=&quot;yii-web-response#%24format-detail&quot;&gt;格式&lt;/a&gt;属性指定格式的&lt;a href=&quot;yii-web-response#%24data-detail&quot;&gt;数据&lt;/a&gt;应该被格式化。例如，</target>
        </trans-unit>
        <trans-unit id="57555b93a460402573dd29a7d141b6b53f3f5666" translate="yes" xml:space="preserve">
          <source>If your extension is a widget or a module, chances are that it may require some &lt;a href=&quot;guide-structure-assets&quot;&gt;assets&lt;/a&gt; to work. For example, a module may display some pages which contain images, JavaScript, and CSS. Because the files of an extension are all under the same directory which is not Web accessible when installed in an application, you have two choices to make the asset files directly accessible via Web:</source>
          <target state="translated">如果您的扩展程序是窗口小部件或模块，则可能需要一些&lt;a href=&quot;guide-structure-assets&quot;&gt;资产&lt;/a&gt;才能工作。例如，模块可以显示一些包含图像，JavaScript和CSS的页面。由于扩展名的文件都位于同一目录下，因此安装在应用程序中时该目录不能通过Web访问，因此有两种选择可以使资产文件通过Web直接访问：</target>
        </trans-unit>
        <trans-unit id="11dd86967cbdc21c7aa0e26aad43324a07db00ad" translate="yes" xml:space="preserve">
          <source>If your extension needs to create specific DB tables or make changes to DB schema, you should</source>
          <target state="translated">如果您的扩展需要创建特定的DB表或对DB模式进行更改,那么您应该使用</target>
        </trans-unit>
        <trans-unit id="2e89acf6ec364549e6dca3fd852fd80d97fad5ae" translate="yes" xml:space="preserve">
          <source>If your permissions hierarchy doesn't change at all and you have a fixed number of users you can create a -&lt;a href=&quot;guide-tutorial-console#create-command&quot;&gt;console command&lt;/a&gt; that will initialize authorization data once via APIs offered by &lt;code&gt;authManager&lt;/code&gt;:</source>
          <target state="translated">如果您的权限层次结构完全不变，并且用户数量固定，则可以创建 &lt;code&gt;authManager&lt;/code&gt; &lt;a href=&quot;guide-tutorial-console#create-command&quot;&gt;命令&lt;/a&gt;，该命令将通过authManager提供的API一次初始化授权数据：</target>
        </trans-unit>
        <trans-unit id="4b4c4ad4371c9bf3bf03e546c4781230762f2e6b" translate="yes" xml:space="preserve">
          <source>If your web application and console application share a lot of configuration parameters and values, you may consider moving the common parts into a separate file, and including this file in both of the application configurations (web and console). You can see an example of this in the advanced project template.</source>
          <target state="translated">如果你的Web应用程序和控制台应用程序共享很多配置参数和值,你可以考虑将共同的部分移动到一个单独的文件中,并在两个应用程序配置(Web和控制台)中包含这个文件。你可以在高级项目模板中看到一个例子。</target>
        </trans-unit>
        <trans-unit id="3a536ec1a08142297386e172ddffda41d5e2e56a" translate="yes" xml:space="preserve">
          <source>If your webserver is Apache you'll need to add an &lt;code&gt;.htaccess&lt;/code&gt; file with the following content to &lt;code&gt;web&lt;/code&gt; (or &lt;code&gt;public_html&lt;/code&gt; or whatever) (where the &lt;code&gt;index.php&lt;/code&gt; file is located):</source>
          <target state="translated">如果您的网络服务器是Apache，则需要将具有以下内容的 &lt;code&gt;.htaccess&lt;/code&gt; 文件添加到 &lt;code&gt;web&lt;/code&gt; （或 &lt;code&gt;public_html&lt;/code&gt; 或其他文件）（位于 &lt;code&gt;index.php&lt;/code&gt; 文件所在的位置）：</target>
        </trans-unit>
        <trans-unit id="ce6c30e230e10dcde1716030700b4f9b0a9510a5" translate="yes" xml:space="preserve">
          <source>Image contents</source>
          <target state="translated">图片内容</target>
        </trans-unit>
        <trans-unit id="9afbc432fdf4f4f29ea724144e64d868ea432467" translate="yes" xml:space="preserve">
          <source>Image contents in PNG format.</source>
          <target state="translated">图片内容为PNG格式。</target>
        </trans-unit>
        <trans-unit id="764dba28eb0f45ff3dd6549b0ba060aa2f9bdc8e" translate="yes" xml:space="preserve">
          <source>ImageValidator verifies if an attribute is receiving a valid image.</source>
          <target state="translated">ImageValidator验证一个属性是否接收到有效的图像。</target>
        </trans-unit>
        <trans-unit id="09e871c98fef3b901a775def173e4126aaf73b42" translate="yes" xml:space="preserve">
          <source>Images</source>
          <target state="translated">Images</target>
        </trans-unit>
        <trans-unit id="83c9906a6ba1c6eebe2d4c7b54d399618204b9c7" translate="yes" xml:space="preserve">
          <source>Implement &lt;a href=&quot;yii-web-identityinterface#findIdentityByAccessToken()-detail&quot;&gt;yii\web\IdentityInterface::findIdentityByAccessToken()&lt;/a&gt; in your &lt;a href=&quot;yii-web-user#%24identityClass-detail&quot;&gt;user identity class&lt;/a&gt;.</source>
          <target state="translated">在您的&lt;a href=&quot;yii-web-user#%24identityClass-detail&quot;&gt;用户身份类中&lt;/a&gt;实现&lt;a href=&quot;yii-web-identityinterface#findIdentityByAccessToken()-detail&quot;&gt;yii \ web \ IdentityInterface :: findIdentityByAccessToken（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="99ac8896f0b8e4fb226d431e9d558d4b8b692dbe" translate="yes" xml:space="preserve">
          <source>Implementation in the &lt;code&gt;User&lt;/code&gt; model could look like the following:</source>
          <target state="translated">&lt;code&gt;User&lt;/code&gt; 模型中的实现可能如下所示：</target>
        </trans-unit>
        <trans-unit id="eef447a098b65c07343d0573ed93bad4b771eec6" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;code&gt;findIdentityByAccessToken()&lt;/code&gt; is application specific. For example, in simple scenarios when each user can only have one access token, you may store the access token in an &lt;code&gt;access_token&lt;/code&gt; column in the user table. The method can then be readily implemented in the &lt;code&gt;User&lt;/code&gt; class as follows,</source>
          <target state="translated">&lt;code&gt;findIdentityByAccessToken()&lt;/code&gt; 的实现是特定于应用程序的。例如，在每个用户只能有一个访问令牌的简单方案中，您可以将访问令牌存储在用户表的 &lt;code&gt;access_token&lt;/code&gt; 列中。然后可以在 &lt;code&gt;User&lt;/code&gt; 类中轻松实现该方法，如下所示：</target>
        </trans-unit>
        <trans-unit id="18fc5be5203380c325a1f096ff8242d1b6df5755" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;code&gt;validateChildrenFunds&lt;/code&gt; can be like this:</source>
          <target state="translated">&lt;code&gt;validateChildrenFunds&lt;/code&gt; 的实现可以是这样的：</target>
        </trans-unit>
        <trans-unit id="75ac4ae1dbbdf0e323f5a3d365241165b3d30df4" translate="yes" xml:space="preserve">
          <source>Implementation of IdentityInterface</source>
          <target state="translated">IdentityInterface的实现</target>
        </trans-unit>
        <trans-unit id="eb88c33bd464bfa9f39365c0015e38ae930937f8" translate="yes" xml:space="preserve">
          <source>Implemented by</source>
          <target state="translated">执行人:</target>
        </trans-unit>
        <trans-unit id="a15dbec766115594c5c0793a66731e33650eda71" translate="yes" xml:space="preserve">
          <source>Implementing &lt;a href=&quot;yii-web-identityinterface&quot;&gt;yii\web\IdentityInterface&lt;/a&gt;</source>
          <target state="translated">实现&lt;a href=&quot;yii-web-identityinterface&quot;&gt;yii \ web \ IdentityInterface&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5147dd8f9a2656c00a2bad55fbcf10f095123217" translate="yes" xml:space="preserve">
          <source>Implementing Client-Side Validation</source>
          <target state="translated">实施客户端验证</target>
        </trans-unit>
        <trans-unit id="9082f008cd6f06e66b87644eb0d48acef966f656" translate="yes" xml:space="preserve">
          <source>Implementing yii\web\IdentityInterface</source>
          <target state="translated">实现yii/web/IdentityInterface。</target>
        </trans-unit>
        <trans-unit id="8011cb5556f43ad7310267c2a3929ab7da14c6f2" translate="yes" xml:space="preserve">
          <source>Implements</source>
          <target state="translated">Implements</target>
        </trans-unit>
        <trans-unit id="7aeceabf8ce0c5bc87ccf00b716a69809e03e3eb" translate="yes" xml:space="preserve">
          <source>Implements HKDF specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc5869&quot;&gt;RFC 5869&lt;/a&gt;. Recommend use one of the SHA-2 hash algorithms: sha224, sha256, sha384 or sha512.</source>
          <target state="translated">实现&lt;a href=&quot;https://tools.ietf.org/html/rfc5869&quot;&gt;RFC 5869中&lt;/a&gt;指定的HKDF。推荐使用SHA-2哈希算法之一：sha224，sha256，sha384或sha512。</target>
        </trans-unit>
        <trans-unit id="4d38d0a1528b9d39c1ac239f1457a17b936d53d8" translate="yes" xml:space="preserve">
          <source>Implements HKDF2 specified in &lt;a href=&quot;http://tools.ietf.org/html/rfc2898#section-5.2&quot;&gt;RFC 2898&lt;/a&gt; Recommend use one of the SHA-2 hash algorithms: sha224, sha256, sha384 or sha512.</source>
          <target state="translated">实现&lt;a href=&quot;http://tools.ietf.org/html/rfc2898#section-5.2&quot;&gt;RFC 2898中&lt;/a&gt;指定的HKDF2。建议使用SHA-2哈希算法之一：sha224，sha256，sha384或sha512。</target>
        </trans-unit>
        <trans-unit id="eb732ae2e8912c4801495689fa0d7edad5d4ba49" translate="yes" xml:space="preserve">
          <source>Implements HKDF2 specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc2898#section-5.2&quot;&gt;RFC 2898&lt;/a&gt; Recommend use one of the SHA-2 hash algorithms: sha224, sha256, sha384 or sha512.</source>
          <target state="translated">实现&lt;a href=&quot;https://tools.ietf.org/html/rfc2898#section-5.2&quot;&gt;RFC 2898中&lt;/a&gt;指定的HKDF2。建议使用SHA-2哈希算法之一：sha224，sha256，sha384或sha512。</target>
        </trans-unit>
        <trans-unit id="133507769129b57cd7e00743e5d80044b6d57f9f" translate="yes" xml:space="preserve">
          <source>Implements of User model with search method.</source>
          <target state="translated">通过搜索方法实现用户模型。</target>
        </trans-unit>
        <trans-unit id="484ddd6d1a627d12739d48ff1825511be4a327a1" translate="yes" xml:space="preserve">
          <source>Important Properties</source>
          <target state="translated">重要属性</target>
        </trans-unit>
        <trans-unit id="5b4287989d3a3b5906b72557b9cc98ebc73d0c1e" translate="yes" xml:space="preserve">
          <source>Improve code and make sure tests are still OK.</source>
          <target state="translated">改进代码,确保测试还可以。</target>
        </trans-unit>
        <trans-unit id="df5792a70749c5238d889147e6729926aac96a68" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;#accessing-relational-data&quot;&gt;Accessing Relational Data&lt;/a&gt;, we explained that you can access a relation property of an Active Record instance like accessing a normal object property. A SQL statement will be executed only when you access the relation property the first time. We call such relational data accessing method &lt;em&gt;lazy loading&lt;/em&gt;. For example,</source>
          <target state="translated">在&lt;a href=&quot;#accessing-relational-data&quot;&gt;访问关系数据中&lt;/a&gt;，我们解释了您可以访问Active Record实例的关系属性，就像访问普通对象属性一样。仅当您第一次访问关系属性时，才会执行SQL语句。我们称这种关系数据访问方法为&lt;em&gt;延迟加载&lt;/em&gt;。例如，</target>
        </trans-unit>
        <trans-unit id="637cef6e1625741ad246d70ea515a0955b16dc62" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;guide-db-query-builder&quot;&gt;Query Builder&lt;/a&gt;, we have explained that you may use &lt;em&gt;batch query&lt;/em&gt; to minimize your memory usage when querying a large amount of data from the database. You may use the same technique in Active Record. For example,</source>
          <target state="translated">在&lt;a href=&quot;guide-db-query-builder&quot;&gt;Query Builder中&lt;/a&gt;，我们已经解释了当从数据库查询大量数据时，可以使用&lt;em&gt;批处理查询&lt;/em&gt;来最大程度地减少内存使用。您可以在Active Record中使用相同的技术。例如，</target>
        </trans-unit>
        <trans-unit id="207c9814e0b88206738f05e6de5079954856b9d0" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;yii-web-application&quot;&gt;Web applications&lt;/a&gt;, controllers should extend from &lt;a href=&quot;yii-web-controller&quot;&gt;yii\web\Controller&lt;/a&gt; or its child classes. Similarly in &lt;a href=&quot;yii-console-application&quot;&gt;console applications&lt;/a&gt;, controllers should extend from &lt;a href=&quot;yii-console-controller&quot;&gt;yii\console\Controller&lt;/a&gt; or its child classes. The following code defines a &lt;code&gt;site&lt;/code&gt; controller:</source>
          <target state="translated">在&lt;a href=&quot;yii-web-application&quot;&gt;Web应用程序中&lt;/a&gt;，控制器应从&lt;a href=&quot;yii-web-controller&quot;&gt;yii \ web \ Controller&lt;/a&gt;或其子类扩展。同样，在&lt;a href=&quot;yii-console-application&quot;&gt;控制台应用程序中&lt;/a&gt;，控制器应从&lt;a href=&quot;yii-console-controller&quot;&gt;yii \ console \ Controller&lt;/a&gt;或其子类扩展。以下代码定义了 &lt;code&gt;site&lt;/code&gt; 控制器：</target>
        </trans-unit>
        <trans-unit id="fe8e8664f862bd61570b2f16619d402eecb37bd1" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;search()&lt;/code&gt; you then just add another filter condition with:</source>
          <target state="translated">然后在 &lt;code&gt;search()&lt;/code&gt; 中,您只需添加另一个过滤条件：</target>
        </trans-unit>
        <trans-unit id="c8af23a07546714ca95ff73b5f3ab92ee0fb3ca9" translate="yes" xml:space="preserve">
          <source>In AJAX mode, this normally will not work as expected unless there are some client-side JavaScript code handling the redirection. To help achieve this goal, this method will send out a &quot;X-Redirect&quot; header instead of &quot;Location&quot;.</source>
          <target state="translated">在AJAX模式下,这通常不会像预期的那样工作,除非有一些客户端的JavaScript代码处理重定向。为了帮助实现这个目标,这个方法将发送一个 &quot;X-Redirect &quot;头而不是 &quot;Location&quot;。</target>
        </trans-unit>
        <trans-unit id="c1f723e70c53be0cfc36d8849f10bdd614bba60f" translate="yes" xml:space="preserve">
          <source>In JavaScript, you may get the values of &lt;a href=&quot;yii-web-request#%24csrfParam-detail&quot;&gt;$csrfParam&lt;/a&gt; and &lt;a href=&quot;yii-web-request#%24csrfToken-detail&quot;&gt;$csrfToken&lt;/a&gt; via &lt;code&gt;yii.getCsrfParam()&lt;/code&gt; and &lt;code&gt;yii.getCsrfToken()&lt;/code&gt;, respectively. The &lt;a href=&quot;yii-web-yiiasset&quot;&gt;yii\web\YiiAsset&lt;/a&gt; asset must be registered. You also need to include CSRF meta tags in your pages by using &lt;a href=&quot;yii-helpers-basehtml#csrfMetaTags()-detail&quot;&gt;yii\helpers\Html::csrfMetaTags()&lt;/a&gt;.</source>
          <target state="translated">在JavaScript中，您可以&lt;a href=&quot;yii-web-request#%24csrfToken-detail&quot;&gt;分别&lt;/a&gt;通过 &lt;code&gt;yii.getCsrfParam()&lt;/code&gt; 和 &lt;code&gt;yii.getCsrfToken()&lt;/code&gt; 获得&lt;a href=&quot;yii-web-request#%24csrfParam-detail&quot;&gt;$ csrfParam&lt;/a&gt;和$ csrfToken的值。该&lt;a href=&quot;yii-web-yiiasset&quot;&gt;警予\网络\ YiiAsset&lt;/a&gt;资产必须进行登记。您还需要使用&lt;a href=&quot;yii-helpers-basehtml#csrfMetaTags()-detail&quot;&gt;yii \ helpers \ Html :: csrfMetaTags（）&lt;/a&gt;在页面中包含CSRF元标记。</target>
        </trans-unit>
        <trans-unit id="927e174e4106b452b588459c497c27e588b306a5" translate="yes" xml:space="preserve">
          <source>In PHP, class member variables are also called &lt;em&gt;properties&lt;/em&gt;. These variables are part of the class definition, and are used to represent the state of a class instance (i.e., to differentiate one instance of the class from another). In practice, you may often want to handle the reading or writing of properties in special ways. For example, you may want to always trim a string when it is being assigned to a &lt;code&gt;label&lt;/code&gt; property. You &lt;em&gt;could&lt;/em&gt; use the following code to achieve this task:</source>
          <target state="translated">在PHP中，类成员变量也称为&lt;em&gt;properties&lt;/em&gt;。这些变量是类定义的一部分，用于表示类实例的状态（即，将类的一个实例与另一个实例区分开）。实际上，您可能经常想以特殊方式处理属性的读取或写入。例如，当您将字符串分配给 &lt;code&gt;label&lt;/code&gt; 属性时，可能要始终修剪它。您&lt;em&gt;可以&lt;/em&gt;使用以下代码来完成此任务：</target>
        </trans-unit>
        <trans-unit id="672788c73a675b474b222103e325a67052f82755" translate="yes" xml:space="preserve">
          <source>In Yii most of database querying happens via &lt;a href=&quot;guide-db-active-record&quot;&gt;Active Record&lt;/a&gt; which properly uses PDO prepared statements internally. In case of prepared statements it's not possible to manipulate query as was demonstrated above.</source>
          <target state="translated">在Yii中，大多数数据库查询都是通过&lt;a href=&quot;guide-db-active-record&quot;&gt;Active Record进行的&lt;/a&gt;，该Active Record在内部正确使用了PDO准备好的语句。对于准备好的语句，不可能像上面演示的那样操作查询。</target>
        </trans-unit>
        <trans-unit id="bcef10dfa50886d5445e85ea30866f411cef3e02" translate="yes" xml:space="preserve">
          <source>In Yii, a service locator is simply an instance of &lt;a href=&quot;yii-di-servicelocator&quot;&gt;yii\di\ServiceLocator&lt;/a&gt; or a child class.</source>
          <target state="translated">在Yii中，服务定位器只是yii &lt;a href=&quot;yii-di-servicelocator&quot;&gt;\ di \ ServiceLocator&lt;/a&gt;的实例或子类。</target>
        </trans-unit>
        <trans-unit id="4d3b35ae790e3f70c92e6de5dd1c5ac31d086006" translate="yes" xml:space="preserve">
          <source>In Yii, most probably you'll use &lt;a href=&quot;guide-input-validation&quot;&gt;form validation&lt;/a&gt; to do alike checks.</source>
          <target state="translated">在Yii中，很可能您将使用&lt;a href=&quot;guide-input-validation&quot;&gt;表单验证&lt;/a&gt;来进行相似的检查。</target>
        </trans-unit>
        <trans-unit id="8c8da1bb8dd752422ec6ddd77eea7e4d47261ff7" translate="yes" xml:space="preserve">
          <source>In Yii, we often use the term &quot;language&quot; to refer to a locale.</source>
          <target state="translated">在Yii中,我们经常使用 &quot;语言 &quot;一词来指代一个地方。</target>
        </trans-unit>
        <trans-unit id="12182fac915d3de68bdb4b7a44aa8181229eca83" translate="yes" xml:space="preserve">
          <source>In a controller action you may use this method like this:</source>
          <target state="translated">在一个控制器动作中,你可以使用这样的方法。</target>
        </trans-unit>
        <trans-unit id="71be5b4661cbd45d7c73edf23249028eaad9aaad" translate="yes" xml:space="preserve">
          <source>In a message to be translated, you can embed one or multiple parameters (also called placeholders) so that they can be replaced by the given values. By giving different sets of values, you can variate the translated message dynamically. In the following example, the placeholder &lt;code&gt;{username}&lt;/code&gt; in the message &lt;code&gt;'Hello, {username}!'&lt;/code&gt; will be replaced by &lt;code&gt;'Alexander'&lt;/code&gt; and &lt;code&gt;'Qiang'&lt;/code&gt;, respectively.</source>
          <target state="translated">在要翻译的消息中，您可以嵌入一个或多个参数（也称为占位符），以便可以用给定的值替换它们。通过提供不同的值集，您可以动态地转换翻译后的消息。在下面的例子中，占位符 &lt;code&gt;{username}&lt;/code&gt; 消息在 &lt;code&gt;'Hello, {username}!'&lt;/code&gt; 将分别由 &lt;code&gt;'Alexander'&lt;/code&gt; 和 &lt;code&gt;'Qiang'&lt;/code&gt; 代替。</target>
        </trans-unit>
        <trans-unit id="8186cbab42cf501b8e19d36cbdb7970f39f6e830" translate="yes" xml:space="preserve">
          <source>In a well-designed application, controllers are often very thin, with each action containing only a few lines of code. If your controller is rather complicated, it usually indicates that you should refactor it and move some code to other classes.</source>
          <target state="translated">在一个设计良好的应用程序中,控制器通常非常薄,每个动作只包含几行代码。如果你的控制器相当复杂,通常表明你应该重构它,将一些代码移到其他类中。</target>
        </trans-unit>
        <trans-unit id="361806aa4dc4e336a54c75c305ea2b35f0ea29fc" translate="yes" xml:space="preserve">
          <source>In addition to column classes provided by Yii that we'll review below, you can create your own column classes.</source>
          <target state="translated">除了Yii提供的列类,我们将在下面回顾,你可以创建自己的列类。</target>
        </trans-unit>
        <trans-unit id="20146be38ec2d61dd7e5e5c3a117346dcc16a50e" translate="yes" xml:space="preserve">
          <source>In any application, you should at least configure two properties: &lt;a href=&quot;yii-base-module#%24id-detail&quot;&gt;id&lt;/a&gt; and &lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;basePath&lt;/a&gt;.</source>
          <target state="translated">在任何应用程序中，至少应配置两个属性：&lt;a href=&quot;yii-base-module#%24id-detail&quot;&gt;id&lt;/a&gt;和&lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;basePath&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="43c112b5f30a2205f4501ab1dd5da1007abdddde" translate="yes" xml:space="preserve">
          <source>In any place, you can get access to the &lt;a href=&quot;yii-base-view&quot;&gt;view&lt;/a&gt; application component by the expression &lt;code&gt;Yii::$app-&amp;gt;view&lt;/code&gt; and then call its aforementioned methods to render a view. For example,</source>
          <target state="translated">在任何地方，您都可以通过表达式 &lt;code&gt;Yii::$app-&amp;gt;view&lt;/code&gt; 访问&lt;a href=&quot;yii-base-view&quot;&gt;视图&lt;/a&gt;应用程序组件，然后调用其上述方法来呈现视图。例如，</target>
        </trans-unit>
        <trans-unit id="a03fbf90e5ee72f1d1b77e3333c2919a3335a850" translate="yes" xml:space="preserve">
          <source>In case &lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationPath-detail&quot;&gt;$migrationPath&lt;/a&gt; is not set and no namespace is provided, the first entry of &lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationNamespaces-detail&quot;&gt;$migrationNamespaces&lt;/a&gt; will be used.</source>
          <target state="translated">如果未设置&lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationPath-detail&quot;&gt;$ migrationPath&lt;/a&gt;且未提供名称空间，则将使用&lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationNamespaces-detail&quot;&gt;$ migrationNamespaces&lt;/a&gt;的第一个条目。</target>
        </trans-unit>
        <trans-unit id="bbaeab39a9473a0d389ee5d972c286be4e2a1175" translate="yes" xml:space="preserve">
          <source>In case &lt;a href=&quot;yii-sphinx-query#showMeta()-detail&quot;&gt;yii\sphinx\Query::showMeta()&lt;/a&gt; is set ActiveDataProvider will fetch total count value from the query meta information, avoiding extra counting query:</source>
          <target state="translated">如果设置了yii &lt;a href=&quot;yii-sphinx-query#showMeta()-detail&quot;&gt;\ sphinx \ Query :: showMeta（）&lt;/a&gt;，ActiveDataProvider将从查询元信息中获取总计数值，从而避免了额外的查询计数：</target>
        </trans-unit>
        <trans-unit id="9257125a23fc2102e9c66cb31081137bf8a1bb9d" translate="yes" xml:space="preserve">
          <source>In case it's not possible, table and column names should be escaped. Yii has special syntax for such escaping which allows doing it the same way for all databases it supports:</source>
          <target state="translated">在不可能的情况下,表和列名应该被转义。Yii有特殊的语法,允许对所有支持的数据库进行同样的转义。</target>
        </trans-unit>
        <trans-unit id="6a24af6493e84ccab50c34b1ea726f95b8e7ff43" translate="yes" xml:space="preserve">
          <source>In case of Jane it is a bit simpler since she is an admin:</source>
          <target state="translated">如果是Jane的话,就比较简单了,因为她是一个管理员。</target>
        </trans-unit>
        <trans-unit id="78bf3afc6473cb67f16ebf2f2e28f02700f18047" translate="yes" xml:space="preserve">
          <source>In case of a single positional parameter its value could be specified without wrapping it into array:</source>
          <target state="translated">如果是单个位置参数,可以指定其值,而不需要将其包装成数组。</target>
        </trans-unit>
        <trans-unit id="2fe94a70a859a5f3af709c1d0d193919bdf947ae" translate="yes" xml:space="preserve">
          <source>In case of nginx you should not need any extra config files.</source>
          <target state="translated">对于nginx来说,你不需要任何额外的配置文件。</target>
        </trans-unit>
        <trans-unit id="33ef5f5724a7f5d8ef33fc5c217e59be44e29506" translate="yes" xml:space="preserve">
          <source>In case the action should not run, the request should be handled inside of the &lt;code&gt;beforeAction&lt;/code&gt; code by either providing the necessary output or redirecting the request. Otherwise the response will be empty.</source>
          <target state="translated">如果该操作不应运行，则应通过提供必要的输出或重定向该请求，在 &lt;code&gt;beforeAction&lt;/code&gt; 代码内部处理该请求。否则，响应将为空。</target>
        </trans-unit>
        <trans-unit id="a92175de985d4aa65a968ba18cec6b69b9d7a504" translate="yes" xml:space="preserve">
          <source>In case the input is optional you may also want to add a &lt;a href=&quot;#default&quot;&gt;default value filter&lt;/a&gt; in addition to the date validator to ensure empty input is stored as &lt;code&gt;null&lt;/code&gt;. Otherwise you may end up with dates like &lt;code&gt;0000-00-00&lt;/code&gt; in your database or &lt;code&gt;1970-01-01&lt;/code&gt; in the input field of a date picker.</source>
          <target state="translated">如果输入是可选的，则除了日期验证器之外，您可能还需要添加一个&lt;a href=&quot;#default&quot;&gt;默认值过滤&lt;/a&gt;器，以确保将空输入存储为 &lt;code&gt;null&lt;/code&gt; 。否则，您可能最终在数据库中输入诸如 &lt;code&gt;0000-00-00&lt;/code&gt; 的日期，或者在日期选择器的输入字段中输入 &lt;code&gt;1970-01-01&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a62b57857fce24824ce67d2d705d7a4638c4b59" translate="yes" xml:space="preserve">
          <source>In case there is no exception in the component, treat as the action has been invoked not from error handler, but by direct route, so '404 Not Found' error will be displayed.</source>
          <target state="translated">如果组件中没有异常,则视为该动作不是从错误处理程序中调用的,而是通过直接路径调用的,因此会显示'404 Not Found'错误。</target>
        </trans-unit>
        <trans-unit id="eaabad93cc875ed73d4db3fe7213a9ced27c48d2" translate="yes" xml:space="preserve">
          <source>In case when the automatic pluralization does not meet your requirement, you may also configure the &lt;a href=&quot;yii-rest-urlrule#%24controller-detail&quot;&gt;yii\rest\UrlRule::$controller&lt;/a&gt; property to explicitly specify how to map a name used in endpoint URLs to a controller ID. For example, the following code maps the name &lt;code&gt;u&lt;/code&gt; to the controller ID &lt;code&gt;user&lt;/code&gt;.</source>
          <target state="translated">如果自动复数不满足您的要求，您还可以配置&lt;a href=&quot;yii-rest-urlrule#%24controller-detail&quot;&gt;yii \ rest \ UrlRule :: $ controller&lt;/a&gt;属性以显式指定如何将端点URL中使用的名称映射到控制器ID。例如，以下代码将名称 &lt;code&gt;u&lt;/code&gt; 映射到控制器ID &lt;code&gt;user&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48bf1ba46f667eb9a012fda9dc211446b54a6b72" translate="yes" xml:space="preserve">
          <source>In case you do not use the Yii autoloader, the Composer autoloader can still autoload extension classes for you.</source>
          <target state="translated">如果你不使用Yii自动加载器,Composer自动加载器仍然可以为你自动加载扩展类。</target>
        </trans-unit>
        <trans-unit id="c6d00d465c4acbcf00323e2f2c63667612e6d0e3" translate="yes" xml:space="preserve">
          <source>In case you need just an opening or closing tag, you can use the &lt;code&gt;Html::beginTag()&lt;/code&gt; and &lt;code&gt;Html::endTag()&lt;/code&gt; methods.</source>
          <target state="translated">如果只需要一个开始或结束标记，则可以使用 &lt;code&gt;Html::beginTag()&lt;/code&gt; 和 &lt;code&gt;Html::endTag()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="00f830d0b7596fcb1c0cd6d3e1fc337869d97177" translate="yes" xml:space="preserve">
          <source>In case you need permissions hierarchy to be formed dynamically you need a UI or a console command. API used to build the hierarchy itself won't be different.</source>
          <target state="translated">如果你需要动态地形成权限层次,你需要一个用户界面或一个控制台命令。用于建立层次结构的API本身不会有什么不同.</target>
        </trans-unit>
        <trans-unit id="6d5db19d05fdac2d3a12405b342322a54c0c4d8b" translate="yes" xml:space="preserve">
          <source>In case you use an &lt;a href=&quot;yii-db-expression&quot;&gt;yii\db\Expression&lt;/a&gt; object as in the example above, the attribute will not hold the timestamp value, but the Expression object itself after the record has been saved. If you need the value from DB afterwards you should call the &lt;a href=&quot;yii-db-baseactiverecord#refresh()-detail&quot;&gt;refresh()&lt;/a&gt; method of the record.</source>
          <target state="translated">如果如上例中那样使用&lt;a href=&quot;yii-db-expression&quot;&gt;yii \ db \ Expression&lt;/a&gt;对象，则该属性将不保存时间戳值，而是保存记录后的Expression对象本身。如果之后需要DB的值，则应调用记录的&lt;a href=&quot;yii-db-baseactiverecord#refresh()-detail&quot;&gt;refresh（）&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="2977971cc385b42b9e37d10b995aac7cc37c6fcf" translate="yes" xml:space="preserve">
          <source>In case you want to break the convention as described above, you may configure the &lt;a href=&quot;#controllerMap&quot;&gt;controllerMap&lt;/a&gt; property.</source>
          <target state="translated">如果您想违反上述约定，则可以配置&lt;a href=&quot;#controllerMap&quot;&gt;controllerMap&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="5f7b7ba1b4cc2d45f36a4e78bddc7b63ad9e1add" translate="yes" xml:space="preserve">
          <source>In case you want to get the value and then immediately remove it from array you can use &lt;code&gt;remove&lt;/code&gt; method:</source>
          <target state="translated">如果要获取值，然后立即将其从数组中删除，可以使用 &lt;code&gt;remove&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="d07a26e9cdda2d886061e951566fd2d2d3d86319" translate="yes" xml:space="preserve">
          <source>In case, when the &lt;a href=&quot;yii-behaviors-blameablebehavior#%24value-detail&quot;&gt;$value&lt;/a&gt; property is &lt;code&gt;null&lt;/code&gt;, the value of &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;id&lt;/code&gt; will be used as the value.</source>
          <target state="translated">如果&lt;a href=&quot;yii-behaviors-blameablebehavior#%24value-detail&quot;&gt;$ value&lt;/a&gt;属性为 &lt;code&gt;null&lt;/code&gt; ，则将 &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;id&lt;/code&gt; 的值用作该值。</target>
        </trans-unit>
        <trans-unit id="d14a4bb43947d1b412fc5b1bd50ff4c675cf554d" translate="yes" xml:space="preserve">
          <source>In case, when the &lt;a href=&quot;yii-behaviors-timestampbehavior#%24value-detail&quot;&gt;$value&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, the result of the PHP function &lt;a href=&quot;http://php.net/manual/en/function.time.php&quot;&gt;time()&lt;/a&gt; will be used as value.</source>
          <target state="translated">如果&lt;a href=&quot;yii-behaviors-timestampbehavior#%24value-detail&quot;&gt;$ value&lt;/a&gt;为 &lt;code&gt;null&lt;/code&gt; ，则PHP函数&lt;a href=&quot;http://php.net/manual/en/function.time.php&quot;&gt;time（）的结果&lt;/a&gt;将用作值。</target>
        </trans-unit>
        <trans-unit id="800f3104b92e7d5b873ffaa482345dc76163feae" translate="yes" xml:space="preserve">
          <source>In case, when the &lt;a href=&quot;yii-behaviors-timestampbehavior#%24value-detail&quot;&gt;$value&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, the result of the PHP function &lt;a href=&quot;https://php.net/manual/en/function.time.php&quot;&gt;time()&lt;/a&gt; will be used as value.</source>
          <target state="translated">如果&lt;a href=&quot;yii-behaviors-timestampbehavior#%24value-detail&quot;&gt;$ value&lt;/a&gt;为 &lt;code&gt;null&lt;/code&gt; ，则PHP函数&lt;a href=&quot;https://php.net/manual/en/function.time.php&quot;&gt;time（）的结果&lt;/a&gt;将用作值。</target>
        </trans-unit>
        <trans-unit id="526054892fd32fe87d7f7de2e41a85c0aa4be415" translate="yes" xml:space="preserve">
          <source>In case, when the property is &lt;code&gt;null&lt;/code&gt;, the value of &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;id&lt;/code&gt; will be used as the value.</source>
          <target state="translated">如果该属性为 &lt;code&gt;null&lt;/code&gt; ，则将 &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;id&lt;/code&gt; 的值用作该值。</target>
        </trans-unit>
        <trans-unit id="9564171aca75e76624dc565ca06192455459af18" translate="yes" xml:space="preserve">
          <source>In case, when the value is &lt;code&gt;null&lt;/code&gt;, the result of the PHP function &lt;a href=&quot;http://php.net/manual/en/function.time.php&quot;&gt;time()&lt;/a&gt; will be used as value.</source>
          <target state="translated">如果值是 &lt;code&gt;null&lt;/code&gt; ，则PHP函数&lt;a href=&quot;http://php.net/manual/en/function.time.php&quot;&gt;time（）的结果&lt;/a&gt;将用作值。</target>
        </trans-unit>
        <trans-unit id="676b67444264f46c55a2a161f1c4b131d17846bb" translate="yes" xml:space="preserve">
          <source>In case, when the value is &lt;code&gt;null&lt;/code&gt;, the result of the PHP function &lt;a href=&quot;https://php.net/manual/en/function.time.php&quot;&gt;time()&lt;/a&gt; will be used as value.</source>
          <target state="translated">如果值是 &lt;code&gt;null&lt;/code&gt; ，则PHP函数&lt;a href=&quot;https://php.net/manual/en/function.time.php&quot;&gt;time（）的结果&lt;/a&gt;将用作值。</target>
        </trans-unit>
        <trans-unit id="9749a54364ea6fe5c6022ef4bd789bcf6fb12750" translate="yes" xml:space="preserve">
          <source>In classes which use service locator to obtain dependent objects.</source>
          <target state="translated">在使用服务定位器来获取依赖对象的类中。</target>
        </trans-unit>
        <trans-unit id="a28f37f1c5783111edd24e61758b73478c8a9e4e" translate="yes" xml:space="preserve">
          <source>In conjunction with &lt;a href=&quot;yii-sphinx-matchbuilder&quot;&gt;yii\sphinx\MatchBuilder&lt;/a&gt; this class provides ability to build sophisticated MATCH expressions. Instance of this class can be passed to &lt;a href=&quot;yii-sphinx-query#match()-detail&quot;&gt;yii\sphinx\Query::match()&lt;/a&gt;. For example:</source>
          <target state="translated">与&lt;a href=&quot;yii-sphinx-matchbuilder&quot;&gt;yii \ sphinx \ MatchBuilder&lt;/a&gt;结合使用，该类提供了构建复杂的MATCH表达式的功能。此类的实例可以传递给&lt;a href=&quot;yii-sphinx-query#match()-detail&quot;&gt;yii \ sphinx \ Query :: match（）&lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="4e6a44c798c65c94fe27655e06212cb6fd0197bb" translate="yes" xml:space="preserve">
          <source>In contrast to the single model forms explained before, we are working with an array of models now. This array is passed to the view to display the input fields for each model in a table like style and we will use helper methods of &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt; that allow loading and validating multiple models at once:</source>
          <target state="translated">与之前说明的单个模型形式相反，我们现在正在处理一系列模型。该数组将传递到视图，以在样式表中显示每个模型的输入字段，我们将使用&lt;a href=&quot;yii-base-model&quot;&gt;yii \ base \ Model的&lt;/a&gt;辅助方法，该方法允许一次加载和验证多个模型：</target>
        </trans-unit>
        <trans-unit id="21c81d733976c0e859768c7761a3a5754aabe5c1" translate="yes" xml:space="preserve">
          <source>In database modelling, when the multiplicity between two related tables is many-to-many, a &lt;a href=&quot;https://en.wikipedia.org/wiki/Junction_table&quot;&gt;junction table&lt;/a&gt; is usually introduced. For example, the &lt;code&gt;order&lt;/code&gt; table and the &lt;code&gt;item&lt;/code&gt; table may be related via a junction table named &lt;code&gt;order_item&lt;/code&gt;. One order will then correspond to multiple order items, while one product item will also correspond to multiple order items.</source>
          <target state="translated">在数据库建模中，当两个相关表之间的多重性是多对多时，通常会引入一个&lt;a href=&quot;https://en.wikipedia.org/wiki/Junction_table&quot;&gt;联结表&lt;/a&gt;。例如， &lt;code&gt;order&lt;/code&gt; 表和 &lt;code&gt;item&lt;/code&gt; 表可以通过名为 &lt;code&gt;order_item&lt;/code&gt; 的联结表进行关联。一个订单将对应多个订单商品，而一个产品也将对应多个订单商品。</target>
        </trans-unit>
        <trans-unit id="f2c03dffbf661b3707cfb1ab25115b89be06fc51" translate="yes" xml:space="preserve">
          <source>In debug mode Yii shows quite verbose errors which are certainly helpful for development. The thing is that these verbose errors are handy for attacker as well since these could reveal database structure, configuration values and parts of your code. Never run production applications with &lt;code&gt;YII_DEBUG&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; in your &lt;code&gt;index.php&lt;/code&gt;.</source>
          <target state="translated">在调试模式下，Yii显示非常详细的错误，对于开发肯定有帮助。事实是，这些冗长的错误对于攻击者也很方便，因为它们可能揭示数据库结构，配置值和代码的一部分。切勿在 &lt;code&gt;index.php&lt;/code&gt; &lt;code&gt;YII_DEBUG&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; 的情况下运行生产应用程序。</target>
        </trans-unit>
        <trans-unit id="f6476bed2efb8416e1f88656caa94a2df20ce1e5" translate="yes" xml:space="preserve">
          <source>In each &lt;a href=&quot;guide-structure-applications&quot;&gt;application&lt;/a&gt; or &lt;a href=&quot;guide-structure-modules&quot;&gt;module&lt;/a&gt; that uses a model, define a concrete model class by extending from the corresponding base model class. The concrete model classes should contain rules and logic that are specific for that application or module.</source>
          <target state="translated">在每个使用模型的&lt;a href=&quot;guide-structure-applications&quot;&gt;应用程序&lt;/a&gt;或&lt;a href=&quot;guide-structure-modules&quot;&gt;模块中&lt;/a&gt;，通过从相应的基础模型类扩展而定义一个具体的模型类。具体的模型类应包含特定于该应用程序或模块的规则和逻辑。</target>
        </trans-unit>
        <trans-unit id="9191020487ad3c1c36bba5781eeaa2c2ea995540" translate="yes" xml:space="preserve">
          <source>In each element, the key is one of the ciphers supported by OpenSSL (@see openssl_get_cipher_methods()). The value is an array of two integers, the first is the cipher's block size in bytes and the second is the key size in bytes.</source>
          <target state="translated">在每个元素中,密钥是OpenSSL支持的密码之一(@see openssl_get_cipher_methods())。值是一个由两个整数组成的数组,第一个是密码的块大小,以字节为单位,第二个是密钥大小,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="943aa28d921b00f4501d3a1aefac536b80c7cc7c" translate="yes" xml:space="preserve">
          <source>In general, to load migrations from different locations, &lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationNamespaces-detail&quot;&gt;$migrationNamespaces&lt;/a&gt; is the preferable solution as the migration name contains the origin of the migration in the history, which is not the case when using multiple migration paths.</source>
          <target state="translated">通常，要从不同位置加载迁移，&lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationNamespaces-detail&quot;&gt;$ migrationNamespaces&lt;/a&gt;是更可取的解决方案，因为迁移名称包含历史记录中的迁移源，而使用多个迁移路径时则不是这种情况。</target>
        </trans-unit>
        <trans-unit id="6dd2878d7d38e6005c4b2ddbc596fb6d9bf2e492" translate="yes" xml:space="preserve">
          <source>In most cases you should mainly deal with the &lt;code&gt;response&lt;/code&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt; which is an instance of &lt;a href=&quot;yii-web-response&quot;&gt;yii\web\Response&lt;/a&gt;, by default. However, Yii also allows you to create your own response objects and send them to end users as we will explain in the following.</source>
          <target state="translated">在大多数情况下，默认情况下，您应该主要处理 &lt;code&gt;response&lt;/code&gt; &lt;a href=&quot;guide-structure-application-components&quot;&gt;应用程序组件&lt;/a&gt;，该组件是&lt;a href=&quot;yii-web-response&quot;&gt;yii \ web \ Response&lt;/a&gt;的实例。但是，Yii还允许您创建自己的响应对象，并将其发送给最终用户，我们将在下面进行解释。</target>
        </trans-unit>
        <trans-unit id="7c39c0e0a62be9ff367056f057942d4b243801d6" translate="yes" xml:space="preserve">
          <source>In oder to acquire access token perform following sequence:</source>
          <target state="translated">为了获得访问令牌,请执行以下顺序。</target>
        </trans-unit>
        <trans-unit id="7dfbc915ac708c96111ef4645795b450aeba23f1" translate="yes" xml:space="preserve">
          <source>In order for content to be displayed properly and securely in HTML, special characters in the content should be encoded. In PHP this is done with &lt;a href=&quot;http://www.php.net/manual/en/function.htmlspecialchars.php&quot;&gt;htmlspecialchars&lt;/a&gt; and &lt;a href=&quot;http://www.php.net/manual/en/function.htmlspecialchars-decode.php&quot;&gt;htmlspecialchars_decode&lt;/a&gt;. The issue with using these methods directly is that you have to specify encoding and extra flags all the time. Since these flags are the same all the time and the encoding should match the one of the application in order to prevent security issues, Yii provides two compact and simple-to-use methods:</source>
          <target state="translated">为了以HTML正确正确地显示内容，应对内容中的特殊字符进行编码。在PHP中，这是通过&lt;a href=&quot;http://www.php.net/manual/en/function.htmlspecialchars.php&quot;&gt;htmlspecialchars&lt;/a&gt;和&lt;a href=&quot;http://www.php.net/manual/en/function.htmlspecialchars-decode.php&quot;&gt;htmlspecialchars_decode完成的&lt;/a&gt;。直接使用这些方法的问题在于，您必须始终指定编码和额外的标志。由于这些标志一直都是相同的，并且编码应与应用程序中的一个匹配，以防止安全问题，Yii提供了两种紧凑且易于使用的方法：</target>
        </trans-unit>
        <trans-unit id="de775412071f9c20514e596d5ac2742225c85839" translate="yes" xml:space="preserve">
          <source>In order for the command line utility to see your commands, you will need to change the &lt;a href=&quot;yii-base-module#%24controllerNamespace-detail&quot;&gt;yii\base\Module::$controllerNamespace&lt;/a&gt; property, when Yii is executed in the console mode, and point it to your commands namespace.</source>
          <target state="translated">为了使命令行实用程序能够看到您的命令，当在控制台模式下执行Yii时，您需要更改&lt;a href=&quot;yii-base-module#%24controllerNamespace-detail&quot;&gt;yii \ base \ Module :: $ controllerNamespace&lt;/a&gt;属性，并将其指向命令命名空间。</target>
        </trans-unit>
        <trans-unit id="223a733e50855645d206d75e30009ecec04a494a" translate="yes" xml:space="preserve">
          <source>In order for your classes to be autoloaded by the Yii class autoloader or the Composer class autoloader, you should specify the &lt;code&gt;autoload&lt;/code&gt; entry in the &lt;code&gt;composer.json&lt;/code&gt; file, like shown below:</source>
          <target state="translated">为了让您的类被Yii类自动加载器或Composer类自动加载器自动加载，您应该在 &lt;code&gt;composer.json&lt;/code&gt; 文件中指定 &lt;code&gt;autoload&lt;/code&gt; 条目，如下所示：</target>
        </trans-unit>
        <trans-unit id="7b9a72656a0c3e94933c931a20d4250ae3b56ab9" translate="yes" xml:space="preserve">
          <source>In order to access server from remote machines use 0.0.0.0:8000. That is especially useful when running server in a virtual machine.</source>
          <target state="translated">为了从远程机器访问服务器,请使用0.0.0.0:8000。这在虚拟机中运行服务器时特别有用。</target>
        </trans-unit>
        <trans-unit id="237b10302060d386286ebb41982352399dc836c5" translate="yes" xml:space="preserve">
          <source>In order to acquire access token perform following sequence:</source>
          <target state="translated">为了获得访问令牌,请执行以下顺序。</target>
        </trans-unit>
        <trans-unit id="eb0ef91de056ce90c7a709745fbc53b0cb04ead3" translate="yes" xml:space="preserve">
          <source>In order to add hash to all links use &lt;code&gt;array_merge($_GET, ['#' =&amp;gt; 'my-hash'])&lt;/code&gt;.</source>
          <target state="translated">为了向所有链接添加哈希，请使用 &lt;code&gt;array_merge($_GET, ['#' =&amp;gt; 'my-hash'])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e8bb3b39b17a730be5838452811e8932c7e28363" translate="yes" xml:space="preserve">
          <source>In order to avoid CSRF you should always:</source>
          <target state="translated">为了避免CSRF,你应该始终。</target>
        </trans-unit>
        <trans-unit id="9f7fe63f8a92b1bbe95650e847e93f1f6f78f73e" translate="yes" xml:space="preserve">
          <source>In order to build a map (key-value pairs) from a multidimensional array or an array of objects you can use &lt;code&gt;map&lt;/code&gt; method. The &lt;code&gt;$from&lt;/code&gt; and &lt;code&gt;$to&lt;/code&gt; parameters specify the key names or property names to set up the map. Optionally, one can further group the map according to a grouping field &lt;code&gt;$group&lt;/code&gt;. For example,</source>
          <target state="translated">为了从多维数组或对象数组构建映射（键-值对），可以使用 &lt;code&gt;map&lt;/code&gt; 方法。在 &lt;code&gt;$from&lt;/code&gt; 和 &lt;code&gt;$to&lt;/code&gt; 参数指定的按键名称或属性名称来设置地图。可选地，可以根据分组字段 &lt;code&gt;$group&lt;/code&gt; 将地图进一步分组。例如，</target>
        </trans-unit>
        <trans-unit id="5c6f8f27a6760964e4cd9f17ee909090deef18ab" translate="yes" xml:space="preserve">
          <source>In order to catch logs written by this class, you need to setup a log route for 'yii\swiftmailer\Logger::add' category. For example:</source>
          <target state="translated">为了抓取这个类写的日志,你需要为 &quot;yii/swiftmailer/\Logger::add &quot;类别设置一个日志路由。例如</target>
        </trans-unit>
        <trans-unit id="532468d261862f09dde4c5f58f7aebedd1786f90" translate="yes" xml:space="preserve">
          <source>In order to check if a user can update a post, we need to pass an extra parameter that is required by &lt;code&gt;AuthorRule&lt;/code&gt; described before:</source>
          <target state="translated">为了检查用户是否可以更新帖子，我们需要传递一个 &lt;code&gt;AuthorRule&lt;/code&gt; 要求的额外参数，该参数前面已经描述过：</target>
        </trans-unit>
        <trans-unit id="9478d992d55e8b2e3148a336d2f884dcb660089f" translate="yes" xml:space="preserve">
          <source>In order to compose message content via view file simply pass view name to the &lt;code&gt;compose()&lt;/code&gt; method:</source>
          <target state="translated">为了通过视图文件编写消息内容，只需将视图名称传递给 &lt;code&gt;compose()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="1943811e5349383b3acc9d54937cd8ffdbfd5747" translate="yes" xml:space="preserve">
          <source>In order to create a URL to a given route use the &lt;code&gt;Url::toRoute()&lt;/code&gt; method. The method uses &lt;a href=&quot;yii-web-urlmanager&quot;&gt;yii\web\UrlManager&lt;/a&gt; to create a URL:</source>
          <target state="translated">为了创建给定路由的URL，请使用 &lt;code&gt;Url::toRoute()&lt;/code&gt; 方法。该方法使用&lt;a href=&quot;yii-web-urlmanager&quot;&gt;yii \ web \ UrlManager&lt;/a&gt;创建URL：</target>
        </trans-unit>
        <trans-unit id="205bf34fb5e393be1b1a52ddab72aab973b52595" translate="yes" xml:space="preserve">
          <source>In order to create a form element in the form, along with the element's label, and any applicable JavaScript validation, the &lt;a href=&quot;yii-widgets-activeform#field()-detail&quot;&gt;ActiveForm::field()&lt;/a&gt; method is called, which returns an instance of &lt;a href=&quot;yii-widgets-activefield&quot;&gt;yii\widgets\ActiveField&lt;/a&gt;. When the result of this method is echoed directly, the result is a regular (text) input. To customize the output, you can chain additional methods of &lt;a href=&quot;yii-widgets-activefield&quot;&gt;ActiveField&lt;/a&gt; to this call:</source>
          <target state="translated">为了在表单中创建表单元素，元素的标签以及任何适用的JavaScript验证，将调用&lt;a href=&quot;yii-widgets-activeform#field()-detail&quot;&gt;ActiveForm :: field（）&lt;/a&gt;方法，该方法返回&lt;a href=&quot;yii-widgets-activefield&quot;&gt;yii \ widgets \ ActiveField&lt;/a&gt;的实例。当直接回显此方法的结果时，结果是常规（文本）输入。要自定义输出，可以将&lt;a href=&quot;yii-widgets-activefield&quot;&gt;ActiveField的&lt;/a&gt;其他方法链接到此调用：</target>
        </trans-unit>
        <trans-unit id="59a7f8340a18d3106127ee372ea417327d5ecb11" translate="yes" xml:space="preserve">
          <source>In order to create your own custom mail solution, you need to create 2 classes: one for the &lt;code&gt;Mailer&lt;/code&gt; and another one for the &lt;code&gt;Message&lt;/code&gt;. You can use &lt;code&gt;yii\mail\BaseMailer&lt;/code&gt; and &lt;code&gt;yii\mail\BaseMessage&lt;/code&gt; as the base classes for your solution. These classes already contain the basic logic, which is described in this guide. However, their usage is not mandatory, it is enough to implement &lt;code&gt;yii\mail\MailerInterface&lt;/code&gt; and &lt;code&gt;yii\mail\MessageInterface&lt;/code&gt; interfaces. Then you need to implement all the abstract methods to build your solution.</source>
          <target state="translated">为了创建自己的自定义邮件解决方案，您需要创建2个类：一个用于 &lt;code&gt;Mailer&lt;/code&gt; ，另一个用于 &lt;code&gt;Message&lt;/code&gt; 。您可以使用 &lt;code&gt;yii\mail\BaseMailer&lt;/code&gt; 和yii &lt;code&gt;yii\mail\BaseMessage&lt;/code&gt; 作为解决方案的基类。这些类已经包含基本逻辑，本指南对此进行了介绍。但是，它们的用法不是强制性的，足以实现 &lt;code&gt;yii\mail\MailerInterface&lt;/code&gt; 和yii &lt;code&gt;yii\mail\MessageInterface&lt;/code&gt; 接口。然后，您需要实现所有抽象方法来构建您的解决方案。</target>
        </trans-unit>
        <trans-unit id="9ba710a4251d38c946f9e6b5cfc456507763dab7" translate="yes" xml:space="preserve">
          <source>In order to display form errors from a model or models as a summary, you could use:</source>
          <target state="translated">为了将一个或多个模型中的表格错误作为摘要显示,您可以使用。</target>
        </trans-unit>
        <trans-unit id="a76c921f704b6e4916193f4009429fc0fc00bc72" translate="yes" xml:space="preserve">
          <source>In order to enable cookie-based login, you need to configure &lt;a href=&quot;yii-web-user#%24enableAutoLogin-detail&quot;&gt;yii\web\User::$enableAutoLogin&lt;/a&gt; to be &lt;code&gt;true&lt;/code&gt; in the application configuration. You also need to provide a duration time parameter when calling the &lt;a href=&quot;yii-web-user#login()-detail&quot;&gt;yii\web\User::login()&lt;/a&gt; method.</source>
          <target state="translated">为了启用基于Cookie的登录，您需要在应用程序配置&lt;a href=&quot;yii-web-user#%24enableAutoLogin-detail&quot;&gt;中将yii \ web \ User :: $ enableAutoLogin&lt;/a&gt;配置为 &lt;code&gt;true&lt;/code&gt; 。调用&lt;a href=&quot;yii-web-user#login()-detail&quot;&gt;yii \ web \ User :: login（）&lt;/a&gt;方法时，还需要提供持续时间参数。</target>
        </trans-unit>
        <trans-unit id="a3d3196e1aa838b941845ee2fe6c315bdb0acfac" translate="yes" xml:space="preserve">
          <source>In order to enable this command you should adjust the configuration of your console application:</source>
          <target state="translated">为了启用这个命令,你应该调整你的控制台应用程序的配置。</target>
        </trans-unit>
        <trans-unit id="0f567bfe6a52c32cfdda3ce9e688431db0552980" translate="yes" xml:space="preserve">
          <source>In order to enable this parser you should configure &lt;a href=&quot;yii-web-request#%24parsers-detail&quot;&gt;yii\web\Request::$parsers&lt;/a&gt; in the following way:</source>
          <target state="translated">为了启用此解析器，您应该以以下方式配置&lt;a href=&quot;yii-web-request#%24parsers-detail&quot;&gt;yii \ web \ Request :: $ parsers&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="75e77e1f49c52febe0442d63e1b6ac0342bb11a6" translate="yes" xml:space="preserve">
          <source>In order to encode or decode special characters in an array of strings into HTML entities you can use the following:</source>
          <target state="translated">为了将字符串数组中的特殊字符编码或解码成HTML实体,您可以使用以下方法。</target>
        </trans-unit>
        <trans-unit id="95c509395307e548e7fb57fa34c4904374080b8a" translate="yes" xml:space="preserve">
          <source>In order to ensure the above life cycles, if a child class of Object needs to override the constructor, it should be done like the following:</source>
          <target state="translated">为了保证上述生命周期,如果Object的子类需要覆盖构造函数,应该像下面这样做。</target>
        </trans-unit>
        <trans-unit id="a99e8065744f9d2153d11083e290e5b89090d120" translate="yes" xml:space="preserve">
          <source>In order to generate a namespaced migration, you should specify a namespace before the migration's name. Note that backslash (&lt;code&gt;\&lt;/code&gt;) is usually considered a special character in the shell, so you need to escape it properly to avoid shell errors or incorrect behavior. For example:</source>
          <target state="translated">为了生成命名空间迁移，您应该在迁移名称之前指定一个命名空间。请注意，反斜杠（ &lt;code&gt;\&lt;/code&gt; ）通常被认为是shell中的特殊字符，因此您需要正确地对其进行转义，以避免shell错误或不正确的行为。例如：</target>
        </trans-unit>
        <trans-unit id="40714802db4ad8dd55fad1e51be288ae9f84940a" translate="yes" xml:space="preserve">
          <source>In order to generate an image tag, use the following:</source>
          <target state="translated">为了生成图像标签,请使用以下方法。</target>
        </trans-unit>
        <trans-unit id="51028e7f8369a624bd567b83f02efaefb9f0b169" translate="yes" xml:space="preserve">
          <source>In order to generate buttons, you can use the following code:</source>
          <target state="translated">为了生成按钮,你可以使用以下代码。</target>
        </trans-unit>
        <trans-unit id="429db4c04ca41454c5225407eba386dba119684d" translate="yes" xml:space="preserve">
          <source>In order to get ordered list, use &lt;code&gt;Html::ol()&lt;/code&gt; instead.</source>
          <target state="translated">为了获得有序列表，请改用 &lt;code&gt;Html::ol()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aebe343be8ed8922ba43fdbc487945fdaf835974" translate="yes" xml:space="preserve">
          <source>In order to get the attribute name without suffixes or prefixes, one can use the following:</source>
          <target state="translated">为了得到没有后缀或前缀的属性名,可以使用以下方法。</target>
        </trans-unit>
        <trans-unit id="48e24505352b3b8e1745343538d99deacc73164f" translate="yes" xml:space="preserve">
          <source>In order to index an array according to a specified key, the &lt;code&gt;index&lt;/code&gt; method can be used. The input should be either multidimensional array or an array of objects. The &lt;code&gt;$key&lt;/code&gt; can be either a key name of the sub-array, a property name of object, or an anonymous function that must return the value that will be used as a key.</source>
          <target state="translated">为了根据指定的键索引数组，可以使用 &lt;code&gt;index&lt;/code&gt; 方法。输入应为多维数组或对象数组。该 &lt;code&gt;$key&lt;/code&gt; 可以是子阵列的任一键名，对象的属性名称或必须返回将被用作键的值的匿名函数。</target>
        </trans-unit>
        <trans-unit id="8b4ec312165f3e9a304f2ff73d3818ed2e5992ac" translate="yes" xml:space="preserve">
          <source>In order to perform &quot;find&quot; queries use &lt;a href=&quot;yii-mongodb-file-query&quot;&gt;yii\mongodb\file\Query&lt;/a&gt; class.</source>
          <target state="translated">为了执行&amp;ldquo;查找&amp;rdquo;查询，请使用&lt;a href=&quot;yii-mongodb-file-query&quot;&gt;yii \ mongodb \ file \ Query&lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="59c8918b05350f0ee10ab16169e9539098c71a16" translate="yes" xml:space="preserve">
          <source>In order to perform &quot;find&quot; queries use &lt;a href=&quot;yii-mongodb-query&quot;&gt;yii\mongodb\Query&lt;/a&gt; class.</source>
          <target state="translated">为了执行&amp;ldquo;查找&amp;rdquo;查询，请使用&lt;a href=&quot;yii-mongodb-query&quot;&gt;yii \ mongodb \ Query&lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="bcfca2d3f7f9e1584749a3e58ee0618f650287e5" translate="yes" xml:space="preserve">
          <source>In order to provide increased security for user passwords, even in the worst case scenario (your application is breached), you need to use a hashing algorithm that is resilient against brute force attacks. The best current choice is &lt;code&gt;bcrypt&lt;/code&gt;. In PHP, you can create a &lt;code&gt;bcrypt&lt;/code&gt; hash using the &lt;a href=&quot;http://php.net/manual/en/function.crypt.php&quot;&gt;crypt function&lt;/a&gt;. Yii provides two helper functions which make using &lt;code&gt;crypt&lt;/code&gt; to securely generate and verify hashes easier.</source>
          <target state="translated">为了提高用户密码的安全性，即使在最坏的情况下（您的应用程序已被破坏），您也需要使用能够抵抗暴力攻击的哈希算法。当前最好的选择是 &lt;code&gt;bcrypt&lt;/code&gt; 。在PHP中，您可以使用&lt;a href=&quot;http://php.net/manual/en/function.crypt.php&quot;&gt;crypt函数&lt;/a&gt;创建 &lt;code&gt;bcrypt&lt;/code&gt; 哈希。 Yii提供了两个帮助函数，这些函数使使用 &lt;code&gt;crypt&lt;/code&gt; 轻松安全地生成和验证哈希。</target>
        </trans-unit>
        <trans-unit id="b478d2ce3bd01c90b53371f6c7ed185f3493e3b1" translate="yes" xml:space="preserve">
          <source>In order to provide increased security for user passwords, even in the worst case scenario (your application is breached), you need to use a hashing algorithm that is resilient against brute force attacks. The best current choice is &lt;code&gt;bcrypt&lt;/code&gt;. In PHP, you can create a &lt;code&gt;bcrypt&lt;/code&gt; hash using the &lt;a href=&quot;https://php.net/manual/en/function.crypt.php&quot;&gt;crypt function&lt;/a&gt;. Yii provides two helper functions which make using &lt;code&gt;crypt&lt;/code&gt; to securely generate and verify hashes easier.</source>
          <target state="translated">为了提高用户密码的安全性，即使在最坏的情况下（您的应用程序已被破坏），您也需要使用能够抵抗暴力攻击的哈希算法。当前最好的选择是 &lt;code&gt;bcrypt&lt;/code&gt; 。在PHP中，您可以使用&lt;a href=&quot;https://php.net/manual/en/function.crypt.php&quot;&gt;crypt函数&lt;/a&gt;创建 &lt;code&gt;bcrypt&lt;/code&gt; 哈希。Yii提供了两个帮助函数，这些函数使使用 &lt;code&gt;crypt&lt;/code&gt; 轻松安全地生成和验证哈希。</target>
        </trans-unit>
        <trans-unit id="551eb9be6a321036a10f20511e3a53e143c556b6" translate="yes" xml:space="preserve">
          <source>In order to run Yii, your webserver must meet its requirements. The very minimum requirement is PHP 5.4. In order to check the requirements copy &lt;code&gt;requirements.php&lt;/code&gt; from your root directory into the webroot directory and run it via browser using &lt;code&gt;http://example.com/requirements.php&lt;/code&gt; URL. Don't forget to delete the file afterwards.</source>
          <target state="translated">为了运行Yii，您的Web服务器必须满足其要求。最低要求是PHP 5.4。为了检查要求复制 &lt;code&gt;requirements.php&lt;/code&gt; 从根目录到根目录的目录，并通过浏览器使用运行 &lt;code&gt;http://example.com/requirements.php&lt;/code&gt; URL。不要忘记以后删除文件。</target>
        </trans-unit>
        <trans-unit id="b00cce8aef0e2c6851c7189dd5989555ddf4021b" translate="yes" xml:space="preserve">
          <source>In order to setup Sphinx &quot;searchd&quot; to support MySQL protocol following configuration should be added:</source>
          <target state="translated">为了设置Sphinx &quot;searchd &quot;支持MySQL协议,需要添加以下配置。</target>
        </trans-unit>
        <trans-unit id="f6133ca192354c0e131ed1c794a686c48ed7e0dd" translate="yes" xml:space="preserve">
          <source>In order to theme modules, &lt;a href=&quot;yii-base-theme#%24pathMap-detail&quot;&gt;yii\base\Theme::$pathMap&lt;/a&gt; can be configured like the following:</source>
          <target state="translated">为了主题模块，可以如下配置&lt;a href=&quot;yii-base-theme#%24pathMap-detail&quot;&gt;yii \ base \ Theme :: $ pathMap&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="a710788aa13f189276cb2a9a7f5410a30b5ca017" translate="yes" xml:space="preserve">
          <source>In order to theme widgets, you can configure &lt;a href=&quot;yii-base-theme#%24pathMap-detail&quot;&gt;yii\base\Theme::$pathMap&lt;/a&gt; in the following way:</source>
          <target state="translated">为了主题小部件，您可以通过以下方式配置&lt;a href=&quot;yii-base-theme#%24pathMap-detail&quot;&gt;yii \ base \ Theme :: $ pathMap&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="8ce27104e11d931a6691a80c425ae98e20fe3ffa" translate="yes" xml:space="preserve">
          <source>In order to use Facebook OAuth you must register your application at &lt;a href=&quot;https://developers.facebook.com/apps&quot;&gt;https://developers.facebook.com/apps&lt;/a&gt;.</source>
          <target state="translated">为了使用Facebook OAuth，您必须在&lt;a href=&quot;https://developers.facebook.com/apps&quot;&gt;https://developers.facebook.com/apps上&lt;/a&gt;注册您的应用程序。</target>
        </trans-unit>
        <trans-unit id="37aee35b502e65c15cd467eec8f3af7e8d304237" translate="yes" xml:space="preserve">
          <source>In order to use GitHub OAuth you must register your application at &lt;a href=&quot;https://github.com/settings/applications/new&quot;&gt;https://github.com/settings/applications/new&lt;/a&gt;.</source>
          <target state="translated">为了使用GitHub OAuth，您必须在&lt;a href=&quot;https://github.com/settings/applications/new&quot;&gt;https://github.com/settings/applications/new上&lt;/a&gt;注册您的应用程序。</target>
        </trans-unit>
        <trans-unit id="8b9dfb8de106378a14ebc735283dc1490d42850d" translate="yes" xml:space="preserve">
          <source>In order to use Google OAuth you must create a project at &lt;a href=&quot;https://console.developers.google.com/project&quot;&gt;https://console.developers.google.com/project&lt;/a&gt; and setup its credentials at https://console.developers.google.com/project/[yourProjectId]/apiui/credential. In order to enable using scopes for retrieving user attributes, you should also enable Google+ API at https://console.developers.google.com/project/[yourProjectId]/apiui/api/plus</source>
          <target state="translated">为了使用Google OAuth，您必须在&lt;a href=&quot;https://console.developers.google.com/project&quot;&gt;https://console.developers.google.com/project&lt;/a&gt;创建一个项目，并在https://console.developers.google.com/project/[yourProjectId]/apiui/上设置其凭据。凭据。为了启用使用范围来检索用户属性，您还应该在https://console.developers.google.com/project/[yourProjectId]/apiui/api/plus启用Google+ API</target>
        </trans-unit>
        <trans-unit id="6a0c5470f29449b1d799f1f989a2750c53e9170f" translate="yes" xml:space="preserve">
          <source>In order to use Microsoft Live OAuth you must register your application at &lt;a href=&quot;https://account.live.com/developers/applications&quot;&gt;https://account.live.com/developers/applications&lt;/a&gt;</source>
          <target state="translated">为了使用Microsoft Live OAuth，您必须在&lt;a href=&quot;https://account.live.com/developers/applications&quot;&gt;https://account.live.com/developers/applications上&lt;/a&gt;注册您的应用程序</target>
        </trans-unit>
        <trans-unit id="7b4a065e9f223269d86e3e030a91c75d11657c2a" translate="yes" xml:space="preserve">
          <source>In order to use Twitter OAuth you must register your application at &lt;a href=&quot;https://dev.twitter.com/apps/new&quot;&gt;https://dev.twitter.com/apps/new&lt;/a&gt;.</source>
          <target state="translated">为了使用Twitter OAuth，您必须在&lt;a href=&quot;https://dev.twitter.com/apps/new&quot;&gt;https://dev.twitter.com/apps/new上&lt;/a&gt;注册您的应用程序。</target>
        </trans-unit>
        <trans-unit id="19214c5bb0b0f85974868e73873ffa04d35f752c" translate="yes" xml:space="preserve">
          <source>In order to use VKontakte OAuth you must register your application at &lt;a href=&quot;http://vk.com/editapp?act=create&quot;&gt;http://vk.com/editapp?act=create&lt;/a&gt;.</source>
          <target state="translated">为了使用VKontakte OAuth，您必须在&lt;a href=&quot;http://vk.com/editapp?act=create&quot;&gt;http://vk.com/editapp?act=create上&lt;/a&gt;注册您的应用程序。</target>
        </trans-unit>
        <trans-unit id="09c32220a40d91a1b6d6b1fd2acd52d3642cdd98" translate="yes" xml:space="preserve">
          <source>In order to use VKontakte OAuth you must register your application at &lt;a href=&quot;https://vk.com/editapp?act=create&quot;&gt;http://vk.com/editapp?act=create&lt;/a&gt;.</source>
          <target state="translated">为了使用VKontakte OAuth，您必须在&lt;a href=&quot;https://vk.com/editapp?act=create&quot;&gt;http://vk.com/editapp?act=create上&lt;/a&gt;注册您的应用程序。</target>
        </trans-unit>
        <trans-unit id="d5a88e41c598b6680378cd0d6034da6c8b43c482" translate="yes" xml:space="preserve">
          <source>In order to use Yandex OAuth you must register your application at &lt;a href=&quot;https://oauth.yandex.ru/client/new&quot;&gt;https://oauth.yandex.ru/client/new&lt;/a&gt;.</source>
          <target state="translated">为了使用Yandex OAuth，您必须在&lt;a href=&quot;https://oauth.yandex.ru/client/new&quot;&gt;https://oauth.yandex.ru/client/new上&lt;/a&gt;注册您的应用程序。</target>
        </trans-unit>
        <trans-unit id="0c82ae15a36d8819e26fe9ee26b31e6fe1622bb0" translate="yes" xml:space="preserve">
          <source>In order to use linkedIn OAuth you must register your application at &lt;a href=&quot;https://www.linkedin.com/secure/developer&quot;&gt;https://www.linkedin.com/secure/developer&lt;/a&gt;.</source>
          <target state="translated">为了使用linkedIn OAuth，您必须在&lt;a href=&quot;https://www.linkedin.com/secure/developer&quot;&gt;https://www.linkedin.com/secure/developer上&lt;/a&gt;注册您的应用程序。</target>
        </trans-unit>
        <trans-unit id="de37b0661b2941b5f47798772a08d71eedec623f" translate="yes" xml:space="preserve">
          <source>In other places, if you want to send out the &quot;Location&quot; header immediately, you should use the following code:</source>
          <target state="translated">在其他地方,如果你想立即发送 &quot;位置 &quot;头,你应该使用以下代码。</target>
        </trans-unit>
        <trans-unit id="fb537221d2c1614f92fb897d078fe4c7c6b3c556" translate="yes" xml:space="preserve">
          <source>In particular, Security supports the following features:</source>
          <target state="translated">特别是,Security支持以下功能:</target>
        </trans-unit>
        <trans-unit id="2bbde8db494df90be702d5b5d346c75616dab39f" translate="yes" xml:space="preserve">
          <source>In places other than an action method, you should call &lt;a href=&quot;yii-web-response#redirect()-detail&quot;&gt;yii\web\Response::redirect()&lt;/a&gt; directly followed by a chained call to the &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;yii\web\Response::send()&lt;/a&gt; method to ensure no extra content will be appended to the response.</source>
          <target state="translated">在非操作方法的地方，应直接调用&lt;a href=&quot;yii-web-response#redirect()-detail&quot;&gt;yii \ web \ Response :: redirect（）&lt;/a&gt;，然后链式调用&lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;yii \ web \ Response :: send（）&lt;/a&gt;方法，以确保不会在该方法后面附加任何内容。响应。</target>
        </trans-unit>
        <trans-unit id="1fbdc15fb21ded0a3a54bf98d1312a1f30e24c1e" translate="yes" xml:space="preserve">
          <source>In practice, you usually want to enable pretty URLs and take advantage of HTTP verbs. For example, a request &lt;code&gt;POST /users&lt;/code&gt; would mean accessing the &lt;code&gt;user/create&lt;/code&gt; action. This can be done easily by configuring the &lt;code&gt;urlManager&lt;/code&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt; in the application configuration like the following:</source>
          <target state="translated">实际上，您通常希望启用漂亮的URL并利用HTTP动词。例如，请求 &lt;code&gt;POST /users&lt;/code&gt; 将意味着访问 &lt;code&gt;user/create&lt;/code&gt; 动作。可以通过在应用程序配置中配置 &lt;code&gt;urlManager&lt;/code&gt; &lt;a href=&quot;guide-structure-application-components&quot;&gt;应用程序组件&lt;/a&gt;来轻松完成此操作，如下所示：</target>
        </trans-unit>
        <trans-unit id="a610654095da50b607045621c707cae0689602d0" translate="yes" xml:space="preserve">
          <source>In production mode, enable a bytecode cache, such as &lt;a href=&quot;http://php.net/manual/en/intro.opcache.php&quot;&gt;PHP OPcache&lt;/a&gt; or &lt;a href=&quot;http://php.net/manual/en/book.apc.php&quot;&gt;APC&lt;/a&gt;, to minimize the time needed for including and parsing PHP files.</source>
          <target state="translated">在生产模式下，启用字节码缓存，例如&lt;a href=&quot;http://php.net/manual/en/intro.opcache.php&quot;&gt;PHP OPcache&lt;/a&gt;或&lt;a href=&quot;http://php.net/manual/en/book.apc.php&quot;&gt;APC&lt;/a&gt;，以最大程度地减少包含和解析PHP文件所需的时间。</target>
        </trans-unit>
        <trans-unit id="140ed558eff1b6a1655e4c748dd76260a6ebcb7a" translate="yes" xml:space="preserve">
          <source>In production mode, enable a bytecode cache, such as &lt;a href=&quot;https://php.net/manual/en/intro.opcache.php&quot;&gt;PHP OPcache&lt;/a&gt; or &lt;a href=&quot;https://php.net/manual/en/book.apc.php&quot;&gt;APC&lt;/a&gt;, to minimize the time needed for including and parsing PHP files.</source>
          <target state="translated">在生产模式下，启用字节码缓存，例如&lt;a href=&quot;https://php.net/manual/en/intro.opcache.php&quot;&gt;PHP OPcache&lt;/a&gt;或&lt;a href=&quot;https://php.net/manual/en/book.apc.php&quot;&gt;APC&lt;/a&gt;，以最小化包含和解析PHP文件所需的时间。</target>
        </trans-unit>
        <trans-unit id="ef9067f0e8276f31c8e8537f005de545bcc6ff0c" translate="yes" xml:space="preserve">
          <source>In relational context ActiveQuery represents a relation between two Active Record classes.</source>
          <target state="translated">在关系上下文中,ActiveQuery表示两个Active Record类之间的关系。</target>
        </trans-unit>
        <trans-unit id="91fba3216272f1517910651b76fc3094fe4c7e95" translate="yes" xml:space="preserve">
          <source>In some cases any form of automated testing could be overkill:</source>
          <target state="translated">在某些情况下,任何形式的自动化测试都可能矫枉过正。</target>
        </trans-unit>
        <trans-unit id="09ec95920ff23b38ff29ba5af603a969840f9a11" translate="yes" xml:space="preserve">
          <source>In some rare occasions, you may want to install some or all extensions manually, rather than relying on Composer. To do so, you should:</source>
          <target state="translated">在一些罕见的情况下,你可能想手动安装一些或所有的扩展,而不是依赖Composer。要做到这一点,你应该:</target>
        </trans-unit>
        <trans-unit id="3ea81eac69c47ebc18ea5dc5ebea45220554b17b" translate="yes" xml:space="preserve">
          <source>In some scenarios, to ensure data consistency, you may want to enclose some or all of them in transactions. You can do so by overriding this method and returning the operations that need to be transactional. For example,</source>
          <target state="translated">在某些情况下,为了保证数据的一致性,你可能希望将部分或全部的数据封装在事务中。你可以通过覆盖这个方法,并返回需要事务性的操作来实现。例如</target>
        </trans-unit>
        <trans-unit id="3ed8a59a56249cf24f13e7ffcf67fc4dcffea023" translate="yes" xml:space="preserve">
          <source>In summary, models</source>
          <target state="translated">总之,模型</target>
        </trans-unit>
        <trans-unit id="61a2e894a6164c1560b05ee22a2faf1053a05402" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;guide-output-pagination&quot;&gt;Pagination&lt;/a&gt; and &lt;a href=&quot;guide-output-sorting&quot;&gt;Sorting&lt;/a&gt; sections, we have described how to allow end users to choose a particular page of data to display and sort them by some columns. Because the task of paginating and sorting data is very common, Yii provides a set of &lt;em&gt;data provider&lt;/em&gt; classes to encapsulate it.</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;guide-output-pagination&quot;&gt;分页&lt;/a&gt;和&lt;a href=&quot;guide-output-sorting&quot;&gt;排序&amp;rdquo;&lt;/a&gt;部分中，我们描述了如何允许最终用户选择要显示的特定数据页面并按某些列对它们进行排序。由于对数据进行分页和排序的任务非常普遍，因此Yii提供了一组&lt;em&gt;数据提供程序&lt;/em&gt;类来对其进行封装。</target>
        </trans-unit>
        <trans-unit id="48ee1e4e346026fc9e757bff8e6e6cdaa606fd0e" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;entry script&lt;/a&gt;, class autoloaders for different libraries are registered. This includes the Composer autoloader through its &lt;code&gt;autoload.php&lt;/code&gt; file and the Yii autoloader through its &lt;code&gt;Yii&lt;/code&gt; class file. The entry script then loads the application &lt;a href=&quot;guide-concept-configurations&quot;&gt;configuration&lt;/a&gt; and creates an &lt;a href=&quot;guide-structure-applications&quot;&gt;application&lt;/a&gt; instance.</source>
          <target state="translated">在&lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;输入脚本中&lt;/a&gt;，注册了用于不同库的类自动加载器。这包括通过其 &lt;code&gt;autoload.php&lt;/code&gt; 文件的Composer自动加载器，以及通过其 &lt;code&gt;Yii&lt;/code&gt; 类文件的Yii自动加载器。然后，输入脚本将加载应用程序&lt;a href=&quot;guide-concept-configurations&quot;&gt;配置&lt;/a&gt;并创建一个&lt;a href=&quot;guide-structure-applications&quot;&gt;应用程序&lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="77e3595c24ae1d4de4f6354d101786dd64c6a0fd" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced/blob/master/docs/guide/README.md&quot;&gt;Advanced Project Template&lt;/a&gt;, each tier has its own root alias. For example, the front-end tier has a root alias &lt;code&gt;@frontend&lt;/code&gt;, while the back-end tier root alias is &lt;code&gt;@backend&lt;/code&gt;. As a result, you may put the front-end classes under the namespace &lt;code&gt;frontend&lt;/code&gt; while the back-end classes are under &lt;code&gt;backend&lt;/code&gt;. This will allow these classes to be autoloaded by the Yii autoloader.</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced/blob/master/docs/guide/README.md&quot;&gt;高级项目模板&amp;rdquo;中&lt;/a&gt;，每个层都有其自己的根别名。例如，前端层的根别名为 &lt;code&gt;@frontend&lt;/code&gt; ，而后端层的根别名为 &lt;code&gt;@backend&lt;/code&gt; 。结果，您可以将前端类放在名称空间 &lt;code&gt;frontend&lt;/code&gt; 下，而后端类放在 &lt;code&gt;backend&lt;/code&gt; 下。这将允许这些类由Yii自动加载器自动加载。</target>
        </trans-unit>
        <trans-unit id="cccdafc371d04e0912238d3b7289c362d079b412" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;composer.json&lt;/code&gt; of your project, add the following lines:</source>
          <target state="translated">在您的项目的 &lt;code&gt;composer.json&lt;/code&gt; 中，添加以下行：</target>
        </trans-unit>
        <trans-unit id="c9d3dd633c3452ece02051a45be5a07698138947" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;create&lt;/code&gt; action (defined by the &lt;code&gt;actionCreate()&lt;/code&gt; method), the code is similar. It first tries to populate a new instance of the &lt;a href=&quot;guide-structure-models&quot;&gt;model&lt;/a&gt; using the request data and save the model. If both succeed it will redirect the browser to the &lt;code&gt;view&lt;/code&gt; action with the ID of the newly created model. Otherwise it will display the &lt;code&gt;create&lt;/code&gt; view through which users can provide the needed input.</source>
          <target state="translated">在 &lt;code&gt;create&lt;/code&gt; 动作（由 &lt;code&gt;actionCreate()&lt;/code&gt; 方法定义）中，代码相似。它首先尝试使用请求数据填充&lt;a href=&quot;guide-structure-models&quot;&gt;模型&lt;/a&gt;的新实例并保存模型。如果两者都成功，它将使用新创建的模型的ID 将浏览器重定向到 &lt;code&gt;view&lt;/code&gt; 操作。否则，它将显示 &lt;code&gt;create&lt;/code&gt; 视图，用户可以通过该视图提供所需的输入。</target>
        </trans-unit>
        <trans-unit id="d937606db7a455e2bb87dcde4e18035a444b3d63" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;update&lt;/code&gt; action, we first load the &lt;code&gt;$user&lt;/code&gt; and &lt;code&gt;$profile&lt;/code&gt; models to be updated from the database. We then call &lt;a href=&quot;yii-base-model#load()-detail&quot;&gt;yii\base\Model::load()&lt;/a&gt; to populate these two models with the user input. If loading is successful, we will validate the two models and then save them &amp;mdash; please note that we use &lt;code&gt;save(false)&lt;/code&gt; to skip over validations inside the models as the user input data have already been validated. If loading is not successful, we will render the &lt;code&gt;update&lt;/code&gt; view which has the following content:</source>
          <target state="translated">在 &lt;code&gt;update&lt;/code&gt; 操作中，我们首先加载要从数据库中更新的 &lt;code&gt;$user&lt;/code&gt; 和 &lt;code&gt;$profile&lt;/code&gt; 模型。然后，我们调用&lt;a href=&quot;yii-base-model#load()-detail&quot;&gt;yii \ base \ Model :: load（）&lt;/a&gt;用用户输入填充这两个模型。如果加载成功，我们将验证两个模型，然后将它们保存-请注意，由于用户输入数据已经通过验证，因此我们使用 &lt;code&gt;save(false)&lt;/code&gt; 跳过模型内部的验证。如果加载不成功，我们将呈现具有以下内容的 &lt;code&gt;update&lt;/code&gt; 视图：</target>
        </trans-unit>
        <trans-unit id="abb70b6b8810a76c79b24275d41e814fa1614c65" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;view&lt;/code&gt; action (defined by the &lt;code&gt;actionView()&lt;/code&gt; method), the code first loads the &lt;a href=&quot;guide-structure-models&quot;&gt;model&lt;/a&gt; according to the requested model ID; If the model is loaded successfully, it will display it using a &lt;a href=&quot;guide-structure-views&quot;&gt;view&lt;/a&gt; named &lt;code&gt;view&lt;/code&gt;. Otherwise, it will throw an exception.</source>
          <target state="translated">在 &lt;code&gt;view&lt;/code&gt; 动作（由定义 &lt;code&gt;actionView()&lt;/code&gt; 方法），代码首先加载&lt;a href=&quot;guide-structure-models&quot;&gt;模型&lt;/a&gt;根据所请求的模型ID; 如果成功加载了模型，它将使用名为 &lt;code&gt;view&lt;/code&gt; 的&lt;a href=&quot;guide-structure-views&quot;&gt;视图&lt;/a&gt;显示模型。否则，它将引发异常。</target>
        </trans-unit>
        <trans-unit id="38741ea73b0ac314976a3a1c53ba3a0b26fa8acf" translate="yes" xml:space="preserve">
          <source>In the SQL statement, you can embed one or multiple parameter placeholders (e.g. &lt;code&gt;:id&lt;/code&gt; in the above example). A parameter placeholder should be a string starting with a colon. You may then call one of the following parameter binding methods to bind the parameter values:</source>
          <target state="translated">在SQL语句中，您可以嵌入一个或多个参数占位符（例如，上例中的 &lt;code&gt;:id&lt;/code&gt; ）。参数占位符应为​​以冒号开头的字符串。然后，您可以调用以下参数绑定方法之一来绑定参数值：</target>
        </trans-unit>
        <trans-unit id="9b817ffd564bb4dc6ff99c9eff425cc1b63e04f7" translate="yes" xml:space="preserve">
          <source>In the Web form that collects the user input, add a hidden field that stores the lock version of the recording being updated.</source>
          <target state="translated">在收集用户输入的Web表单中,添加一个隐藏字段,存储正在更新的记录的锁定版本。</target>
        </trans-unit>
        <trans-unit id="a6e413a8811435732fdc1f5d13e97397205f6e39" translate="yes" xml:space="preserve">
          <source>In the Web form that takes user inputs, add a hidden field to store the current version number of the row being updated. Be sure your version attribute has input validation rules and validates successfully.</source>
          <target state="translated">在接受用户输入的Web表单中,添加一个隐藏字段来存储被更新行的当前版本号。确保你的版本属性有输入验证规则,并且验证成功。</target>
        </trans-unit>
        <trans-unit id="92a0f38a4d2046996a85f125b92cd25b82aaa4fa" translate="yes" xml:space="preserve">
          <source>In the above &lt;code&gt;$attribute&lt;/code&gt; refers to the attribute currently being validated while &lt;code&gt;$params&lt;/code&gt; contains an array of validator configuration options such as &lt;code&gt;max&lt;/code&gt; in case of &lt;code&gt;string&lt;/code&gt; validator. The value of the attribute currently being validated can be accessed as &lt;code&gt;$this-&amp;gt;$attribute&lt;/code&gt;. Note the &lt;code&gt;$&lt;/code&gt; before &lt;code&gt;attribute&lt;/code&gt;; this is taking the value of the variable &lt;code&gt;$attribute&lt;/code&gt; and using it as the name of the property to access.</source>
          <target state="translated">上面的 &lt;code&gt;$attribute&lt;/code&gt; 当前正在验证的属性，而 &lt;code&gt;$params&lt;/code&gt; 包含验证器配置选项的数组，例如在 &lt;code&gt;string&lt;/code&gt; 验证器的情况下为 &lt;code&gt;max&lt;/code&gt; 。当前正在验证的属性的值可以通过 &lt;code&gt;$this-&amp;gt;$attribute&lt;/code&gt; 。注意 &lt;code&gt;$&lt;/code&gt; before &lt;code&gt;attribute&lt;/code&gt; ；这将获取变量 &lt;code&gt;$attribute&lt;/code&gt; 的值，并将其用作要访问的属性的名称。</target>
        </trans-unit>
        <trans-unit id="ee29e244aa41f83a1f032e5e3ffd0a11ce8e58bd" translate="yes" xml:space="preserve">
          <source>In the above &lt;code&gt;mailer&lt;/code&gt; is ID of the component that sends email and should be already configured.</source>
          <target state="translated">在上面的 &lt;code&gt;mailer&lt;/code&gt; 是发送电子邮件的组件的ID，应该已经配置。</target>
        </trans-unit>
        <trans-unit id="468a966a350a2c46623415d1c74ea08b02a9c077" translate="yes" xml:space="preserve">
          <source>In the above code, &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;ActiveForm::begin()&lt;/a&gt; not only creates a form instance, but also marks the beginning of the form. All of the content placed between &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;ActiveForm::begin()&lt;/a&gt; and &lt;a href=&quot;yii-base-widget#end()-detail&quot;&gt;ActiveForm::end()&lt;/a&gt; will be wrapped within the HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tag. As with any widget, you can specify some options as to how the widget should be configured by passing an array to the &lt;code&gt;begin&lt;/code&gt; method. In this case, an extra CSS class and identifying ID are passed to be used in the opening &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tag. For all available options, please refer to the API documentation of &lt;a href=&quot;yii-widgets-activeform&quot;&gt;yii\widgets\ActiveForm&lt;/a&gt;.</source>
          <target state="translated">在上面的代码中，&lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;ActiveForm :: begin（）&lt;/a&gt;不仅创建表单实例，而且还标记了表单的开始。&lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;ActiveForm :: begin（）&lt;/a&gt;和&lt;a href=&quot;yii-base-widget#end()-detail&quot;&gt;ActiveForm :: end（）&lt;/a&gt;之间的所有内容都将包装在HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 标记内。与任何小部件一样，您可以通过将数组传递给 &lt;code&gt;begin&lt;/code&gt; 方法来指定一些有关如何配置小部件的选项。在这种情况下，将在开始 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 标记中传递一个额外的CSS类和标识ID 。有关所有可用选项，请参阅&lt;a href=&quot;yii-widgets-activeform&quot;&gt;yii \ widgets \ ActiveForm&lt;/a&gt;的API文档。</target>
        </trans-unit>
        <trans-unit id="aecd6b07c362c37a4a41f804d85cc593aa548092" translate="yes" xml:space="preserve">
          <source>In the above code, a message source supported by &lt;a href=&quot;yii-i18n-phpmessagesource&quot;&gt;yii\i18n\PhpMessageSource&lt;/a&gt; is being configured.</source>
          <target state="translated">在上面的代码中，正在配置&lt;a href=&quot;yii-i18n-phpmessagesource&quot;&gt;yii \ i18n \ PhpMessageSource&lt;/a&gt;支持的消息源。</target>
        </trans-unit>
        <trans-unit id="06c11d2674ddaa447071f06b82909700160d299e" translate="yes" xml:space="preserve">
          <source>In the above code, in the context of a view file, the &lt;code&gt;AppAsset&lt;/code&gt; bundle is registered on the current view (represented by &lt;code&gt;$this&lt;/code&gt;). When registering asset bundles from within a widget, you would pass the &lt;a href=&quot;yii-base-widget#%24view-detail&quot;&gt;$view&lt;/a&gt; of the widget instead (&lt;code&gt;$this-&amp;gt;view&lt;/code&gt;).</source>
          <target state="translated">在上面的代码中，在视图文件的上下文中， &lt;code&gt;AppAsset&lt;/code&gt; 捆绑包被注册在当前视图上（由 &lt;code&gt;$this&lt;/code&gt; 表示）。从窗口小部件中注册资产捆绑包时，您将改为传递窗口小部件的&lt;a href=&quot;yii-base-widget#%24view-detail&quot;&gt;$ view&lt;/a&gt;（ &lt;code&gt;$this-&amp;gt;view&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="47980e038a276420642b24d2763eecc4cb20ef1e" translate="yes" xml:space="preserve">
          <source>In the above code, the action method returns the result of the &lt;code&gt;redirect()&lt;/code&gt; method. As explained before, the response object returned by an action method will be used as the response sending to end users.</source>
          <target state="translated">在上面的代码中，action方法返回 &lt;code&gt;redirect()&lt;/code&gt; 方法的结果。如前所述，由操作方法返回的响应对象将用作发送给最终用户的响应。</target>
        </trans-unit>
        <trans-unit id="d5e58f85f4445c478e50307b833ef852f842dc29" translate="yes" xml:space="preserve">
          <source>In the above code, the array keys are column names while the array values are the corresponding order by directions. The PHP constant &lt;code&gt;SORT_ASC&lt;/code&gt; specifies ascending sort and &lt;code&gt;SORT_DESC&lt;/code&gt; descending sort.</source>
          <target state="translated">在上面的代码中，数组键是列名，而数组值是按方向对应的顺序。PHP常量 &lt;code&gt;SORT_ASC&lt;/code&gt; 指定升序和 &lt;code&gt;SORT_DESC&lt;/code&gt; 降序。</target>
        </trans-unit>
        <trans-unit id="6465f501e9a43adc22b5ea2a23b8faee05dfcaa2" translate="yes" xml:space="preserve">
          <source>In the above code, two log targets are registered in the &lt;a href=&quot;yii-log-dispatcher#%24targets-detail&quot;&gt;yii\log\Dispatcher::$targets&lt;/a&gt; property:</source>
          <target state="translated">在上面的代码中，两个日志目标在&lt;a href=&quot;yii-log-dispatcher#%24targets-detail&quot;&gt;yii \ log \ Dispatcher :: $ targets&lt;/a&gt;属性中注册：</target>
        </trans-unit>
        <trans-unit id="1177a53bf1566d73d8297f0378bbb0c3a2f7fd89" translate="yes" xml:space="preserve">
          <source>In the above code, we have declared an &lt;code&gt;orders&lt;/code&gt; relation for the &lt;code&gt;Customer&lt;/code&gt; class, and a &lt;code&gt;customer&lt;/code&gt; relation for the &lt;code&gt;Order&lt;/code&gt; class.</source>
          <target state="translated">在上面的代码中，我们为 &lt;code&gt;Customer&lt;/code&gt; 类声明了一个 &lt;code&gt;orders&lt;/code&gt; 关系，为 &lt;code&gt;Order&lt;/code&gt; 类声明了一个 &lt;code&gt;customer&lt;/code&gt; 关系。</target>
        </trans-unit>
        <trans-unit id="7a5ebc97c6876660b07545f44b5d99da277f6373" translate="yes" xml:space="preserve">
          <source>In the above code, when the form is submitted, the &lt;a href=&quot;yii-web-uploadedfile#getInstance()-detail&quot;&gt;yii\web\UploadedFile::getInstance()&lt;/a&gt; method is called to represent the uploaded file as an &lt;code&gt;UploadedFile&lt;/code&gt; instance. We then rely on the model validation to make sure the uploaded file is valid and save the file on the server.</source>
          <target state="translated">在上面的代码中，提交表单后，将调用&lt;a href=&quot;yii-web-uploadedfile#getInstance()-detail&quot;&gt;yii \ web \ UploadedFile :: getInstance（）&lt;/a&gt;方法将上传的文件表示为 &lt;code&gt;UploadedFile&lt;/code&gt; 实例。然后，我们依靠模型验证来确保上载的文件有效，并将文件保存在服务器上。</target>
        </trans-unit>
        <trans-unit id="817ab8597a650262634bfec9b1d2bd4b35e7ce3f" translate="yes" xml:space="preserve">
          <source>In the above example the method &lt;code&gt;compose()&lt;/code&gt; creates an instance of the mail message, which then is populated and sent. You may put more complex logic in this process if needed:</source>
          <target state="translated">在上面的示例中，方法 &lt;code&gt;compose()&lt;/code&gt; 创建邮件消息的实例，然后将其填充并发送。如果需要，您可以在此过程中添加更复杂的逻辑：</target>
        </trans-unit>
        <trans-unit id="60c490d6ea2de69fb4645106ce917af1ed70c92a" translate="yes" xml:space="preserve">
          <source>In the above example, &lt;a href=&quot;yii-filters-accessrule#%24roleParams-detail&quot;&gt;roleParams&lt;/a&gt; is a Closure that will be evaluated when the access rule is checked, so the model will only be loaded when needed. If the creation of role parameters is a simple operation, you may just specify an array, like so:</source>
          <target state="translated">在上面的示例中，&lt;a href=&quot;yii-filters-accessrule#%24roleParams-detail&quot;&gt;roleParams&lt;/a&gt;是一个Closure，将在检查访问规则时对其进行评估，因此仅在需要时才加载模型。如果创建角色参数是一个简单的操作，则可以仅指定一个数组，如下所示：</target>
        </trans-unit>
        <trans-unit id="9c07ebedbca92612df62e48e0250c344a54260b7" translate="yes" xml:space="preserve">
          <source>In the above example, because you provide to &lt;a href=&quot;yii-data-activedataprovider&quot;&gt;yii\data\ActiveDataProvider&lt;/a&gt; an &lt;a href=&quot;yii-db-activequery&quot;&gt;yii\db\ActiveQuery&lt;/a&gt; object, it is intelligent enough to return primary key values as the keys. You may also explicitly specify how the key values should be calculated by configuring &lt;a href=&quot;yii-data-activedataprovider#%24key-detail&quot;&gt;yii\data\ActiveDataProvider::$key&lt;/a&gt; with a column name or a callable calculating key values. For example,</source>
          <target state="translated">在上面的例子中，因为您提供给&lt;a href=&quot;yii-data-activedataprovider&quot;&gt;YII \数据\ ActiveDataProvider&lt;/a&gt;一个&lt;a href=&quot;yii-db-activequery&quot;&gt;YII \分贝\ ActiveQuery&lt;/a&gt;对象时，它是足够智能以返回主键值作为密钥。您还可以通过使用列名或可调用的计算键值配置&lt;a href=&quot;yii-data-activedataprovider#%24key-detail&quot;&gt;yii \ data \ ActiveDataProvider :: $ key&lt;/a&gt;来明确指定应如何计算键值。例如，</target>
        </trans-unit>
        <trans-unit id="72086c9910dd67f6c856d8e8f1850e851d969ab7" translate="yes" xml:space="preserve">
          <source>In the above example, no parameters are passed with the roles specified for accessing an action, but in case of the &lt;code&gt;updatePost&lt;/code&gt; permission, we need to pass a &lt;code&gt;post&lt;/code&gt; parameter for it to work properly. You can pass parameters to &lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii\web\User::can()&lt;/a&gt; by specifying &lt;a href=&quot;yii-filters-accessrule#%24roleParams-detail&quot;&gt;roleParams&lt;/a&gt; on the access rule:</source>
          <target state="translated">在上面的示例中，没有为访问动作指定的角色传递任何参数，但是在 &lt;code&gt;updatePost&lt;/code&gt; 权限的情况下，我们需要传递一个 &lt;code&gt;post&lt;/code&gt; 参数，以使其正常工作。您可以通过在访问规则上指定&lt;a href=&quot;yii-filters-accessrule#%24roleParams-detail&quot;&gt;roleParams&lt;/a&gt;来将参数传递给&lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii \ web \ User :: can（）&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="6c78c95f5b923119ce871df7a517ee3991bbcd40" translate="yes" xml:space="preserve">
          <source>In the above example, the category &lt;code&gt;app/error&lt;/code&gt; is mapped to the PHP file &lt;code&gt;@app/messages/ru-RU/error.php&lt;/code&gt; (assuming &lt;code&gt;ru-RU&lt;/code&gt; is the target language). However, without this configuration the category would be mapped to &lt;code&gt;@app/messages/ru-RU/app/error.php&lt;/code&gt; instead.</source>
          <target state="translated">在上面的示例中，类别 &lt;code&gt;app/error&lt;/code&gt; 被映射到PHP文件 &lt;code&gt;@app/messages/ru-RU/error.php&lt;/code&gt; （假设 &lt;code&gt;ru-RU&lt;/code&gt; 是目标语言）。但是，如果没有此配置，则类别将改为映射到 &lt;code&gt;@app/messages/ru-RU/app/error.php&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f26e007eacc84b914e412c472dc2c19f2d4e6b88" translate="yes" xml:space="preserve">
          <source>In the above example, two attributes are declared for the &lt;a href=&quot;yii-data-sort&quot;&gt;Sort&lt;/a&gt; object: &lt;code&gt;age&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">在上面的示例中，为&lt;a href=&quot;yii-data-sort&quot;&gt;Sort&lt;/a&gt;对象声明了两个属性： &lt;code&gt;age&lt;/code&gt; 和 &lt;code&gt;name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="177e373efcb93ee3d29013397019cccb45a864b0" translate="yes" xml:space="preserve">
          <source>In the above step 1 and 3, events named &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_DELETE-detail&quot;&gt;EVENT_BEFORE_DELETE&lt;/a&gt; and &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_DELETE-detail&quot;&gt;EVENT_AFTER_DELETE&lt;/a&gt; will be raised by the corresponding methods.</source>
          <target state="translated">在上面的步骤1和3中，将通过相应的方法引发名为&lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_DELETE-detail&quot;&gt;EVENT_BEFORE_DELETE&lt;/a&gt;和&lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_DELETE-detail&quot;&gt;EVENT_AFTER_DELETE的&lt;/a&gt;事件。</target>
        </trans-unit>
        <trans-unit id="28a44c7ea3ef235cbcd6d073a45e7541ff9d79f8" translate="yes" xml:space="preserve">
          <source>In the above step 1, 2, 3 and 5, events &lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt;, &lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt;, &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_INSERT-detail&quot;&gt;EVENT_BEFORE_INSERT&lt;/a&gt;, and &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_INSERT-detail&quot;&gt;EVENT_AFTER_INSERT&lt;/a&gt; will be raised by the corresponding methods.</source>
          <target state="translated">在上面的步骤1、2、3和5中，事件&lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt;，&lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt;，&lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_INSERT-detail&quot;&gt;EVENT_BEFORE_INSERT&lt;/a&gt;和&lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_INSERT-detail&quot;&gt;EVENT_AFTER_INSERT&lt;/a&gt;将通过相应的方法引发。</target>
        </trans-unit>
        <trans-unit id="4a0c5e3b1be87b1c782054438d67f072025ad539" translate="yes" xml:space="preserve">
          <source>In the above step 1, 2, 3 and 5, events &lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt;, &lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt;, &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_UPDATE-detail&quot;&gt;EVENT_BEFORE_UPDATE&lt;/a&gt;, and &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_UPDATE-detail&quot;&gt;EVENT_AFTER_UPDATE&lt;/a&gt; will be raised by the corresponding methods.</source>
          <target state="translated">在上面的步骤1、2、3和5中，将通过相应的方法引发事件&lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt;，&lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt;，&lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_UPDATE-detail&quot;&gt;EVENT_BEFORE_UPDATE&lt;/a&gt;和&lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_UPDATE-detail&quot;&gt;EVENT_AFTER_UPDATE&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="12e9a59d333bfe2b6a9e9f4df5571be4f4b28fa1" translate="yes" xml:space="preserve">
          <source>In the above step 1, 2, 3 and 5, events &lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt;, &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_INSERT-detail&quot;&gt;EVENT_BEFORE_INSERT&lt;/a&gt;, &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_INSERT-detail&quot;&gt;EVENT_AFTER_INSERT&lt;/a&gt; and &lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt; will be raised by the corresponding methods.</source>
          <target state="translated">在上面的步骤1、2、3和5中，事件&lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt;，&lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_INSERT-detail&quot;&gt;EVENT_BEFORE_INSERT&lt;/a&gt;，&lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_INSERT-detail&quot;&gt;EVENT_AFTER_INSERT&lt;/a&gt;和&lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt;将通过相应的方法引发。</target>
        </trans-unit>
        <trans-unit id="6d19d8d8dd4d6d48e978523e03bb1023a3bee9c5" translate="yes" xml:space="preserve">
          <source>In the above step 1, 2, 3 and 5, events &lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt;, &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_UPDATE-detail&quot;&gt;EVENT_BEFORE_UPDATE&lt;/a&gt;, &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_UPDATE-detail&quot;&gt;EVENT_AFTER_UPDATE&lt;/a&gt; and &lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt; will be raised by the corresponding methods.</source>
          <target state="translated">在上述步骤1、2、3和5中，将通过相应的方法引发事件&lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt;，&lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_UPDATE-detail&quot;&gt;EVENT_BEFORE_UPDATE&lt;/a&gt;，&lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_UPDATE-detail&quot;&gt;EVENT_AFTER_UPDATE&lt;/a&gt;和&lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f847f6d8632888c1c5ff2d0944391dbaf1a9939f" translate="yes" xml:space="preserve">
          <source>In the above, &lt;code&gt;$customer&lt;/code&gt; is a &lt;code&gt;Customer&lt;/code&gt; object while &lt;code&gt;$customers&lt;/code&gt; is an array of &lt;code&gt;Customer&lt;/code&gt; objects. They are all populated with the data retrieved from the &lt;code&gt;customer&lt;/code&gt; table.</source>
          <target state="translated">在上面， &lt;code&gt;$customer&lt;/code&gt; 是一个 &lt;code&gt;Customer&lt;/code&gt; 对象，而 &lt;code&gt;$customers&lt;/code&gt; 是一个 &lt;code&gt;Customer&lt;/code&gt; 对象数组。它们都填充有从 &lt;code&gt;customer&lt;/code&gt; 表中检索到的数据。</target>
        </trans-unit>
        <trans-unit id="f74bb67034e86890a2d422c3c96fe8fa856db298" translate="yes" xml:space="preserve">
          <source>In the above, &lt;code&gt;&amp;lt;route&amp;gt;&lt;/code&gt; refers to the route to the controller action. The options will populate the class properties and arguments are the parameters of the action method.</source>
          <target state="translated">在上面， &lt;code&gt;&amp;lt;route&amp;gt;&lt;/code&gt; 是指到控制器操作的路由。这些选项将填充类属性，而参数是action方法的参数。</target>
        </trans-unit>
        <trans-unit id="1a7628f6d0a0c48d3ea61a8a3d25fdde1730a198" translate="yes" xml:space="preserve">
          <source>In the above, &lt;code&gt;text&lt;/code&gt; corresponds to &lt;a href=&quot;yii-i18n-formatter#asText()-detail&quot;&gt;yii\i18n\Formatter::asText()&lt;/a&gt;. The value of the column is passed as the first argument. In the second column definition, &lt;code&gt;date&lt;/code&gt; corresponds to &lt;a href=&quot;yii-i18n-formatter#asDate()-detail&quot;&gt;yii\i18n\Formatter::asDate()&lt;/a&gt;. The value of the column is, again, passed as the first argument while 'php:Y-m-d' is used as the second argument value.</source>
          <target state="translated">在上面， &lt;code&gt;text&lt;/code&gt; 对应于&lt;a href=&quot;yii-i18n-formatter#asText()-detail&quot;&gt;yii \ i18n \ Formatter :: asText（）&lt;/a&gt;。列的值作为第一个参数传递。在第二列定义中， &lt;code&gt;date&lt;/code&gt; 对应于&lt;a href=&quot;yii-i18n-formatter#asDate()-detail&quot;&gt;yii \ i18n \ Formatter :: asDate（）&lt;/a&gt;。再次将列的值作为第一个参数传递，而将&amp;ldquo; php：Ymd&amp;rdquo;用作第二个参数值。</target>
        </trans-unit>
        <trans-unit id="1cec26f1484115686c1c006e4ac6624ae20e5ade" translate="yes" xml:space="preserve">
          <source>In the above, &lt;code&gt;www&lt;/code&gt; is your webserver webroot directory. It could be named differently. Common names are: &lt;code&gt;www&lt;/code&gt;, &lt;code&gt;htdocs&lt;/code&gt;, and &lt;code&gt;public_html&lt;/code&gt;.</source>
          <target state="translated">在上面， &lt;code&gt;www&lt;/code&gt; 是您的Web服务器的webroot目录。它的名称可以不同。通用名称是： &lt;code&gt;www&lt;/code&gt; ， &lt;code&gt;htdocs&lt;/code&gt; 和 &lt;code&gt;public_html&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef0b4ec31ea4811be604363ebf134034263baf6d" translate="yes" xml:space="preserve">
          <source>In the above, an anonymous function is attached to the &quot;update&quot; event of the post. You may attach the following types of event handlers:</source>
          <target state="translated">在上面的例子中,一个匿名函数被附加到帖子的 &quot;更新 &quot;事件中。您可以附加以下类型的事件处理程序。</target>
        </trans-unit>
        <trans-unit id="9f81b5924ae8633ba936771163879bac06e1c572" translate="yes" xml:space="preserve">
          <source>In the above, both Step 2 and 3 occur at the end of the class constructor. It is recommended that you perform object initialization in the &lt;code&gt;init()&lt;/code&gt; method because at that stage, the object configuration is already applied.</source>
          <target state="translated">在上面，步骤2和3都发生在类构造函数的末尾。建议您在 &lt;code&gt;init()&lt;/code&gt; 方法中执行对象初始化，因为在此阶段，对象配置已被应用。</target>
        </trans-unit>
        <trans-unit id="3a865e97e29e600f5fb600a24b2e029e48fe4080" translate="yes" xml:space="preserve">
          <source>In the above, if the command name is not provided, all available commands will be displayed.</source>
          <target state="translated">在上面的命令中,如果没有提供命令名称,将显示所有可用的命令。</target>
        </trans-unit>
        <trans-unit id="3c3e7963a7dd4d40b6df5a3b76080a9721df058b" translate="yes" xml:space="preserve">
          <source>In the above, the &lt;code&gt;deferred&lt;/code&gt; variable is provided by Yii, which is an array of Deferred objects. The &lt;code&gt;$.get()&lt;/code&gt; jQuery method creates a Deferred object which is pushed to the &lt;code&gt;deferred&lt;/code&gt; array.</source>
          <target state="translated">在上面，由Yii提供了 &lt;code&gt;deferred&lt;/code&gt; 变量，它是Deferred对象的数组。的 &lt;code&gt;$.get()&lt;/code&gt; 的jQuery方法创建其推到一个延迟对象 &lt;code&gt;deferred&lt;/code&gt; 阵列。</target>
        </trans-unit>
        <trans-unit id="41d890539b4bc592bd83034ef7d007fb18aed747" translate="yes" xml:space="preserve">
          <source>In the above, the first argument is the model, while the second one is the attribute expression. In its simplest form the expression is just an attribute name, but it can be an attribute name prefixed and/or suffixed with array indexes, which is mainly used for tabular input:</source>
          <target state="translated">在上面,第一个参数是模型,第二个参数是属性表达式。最简单的形式是,表达式只是一个属性名,但也可以是一个属性名前缀和/或后缀数组索引,这主要用于表格输入。</target>
        </trans-unit>
        <trans-unit id="18c50d5918e7e82b04c55c829b22ffe4502a7861" translate="yes" xml:space="preserve">
          <source>In the above, there is an alternative way to configure the &lt;code&gt;search&lt;/code&gt; component. Instead of directly writing a PHP callback which builds a &lt;code&gt;SolrService&lt;/code&gt; instance, you can use a static class method to return such a callback, like shown as below:</source>
          <target state="translated">以上是配置 &lt;code&gt;search&lt;/code&gt; 组件的另一种方法。与其直接编写构建 &lt;code&gt;SolrService&lt;/code&gt; 实例的PHP回调，不如使用静态类方法返回此类回调，如下所示：</target>
        </trans-unit>
        <trans-unit id="81a6020d8ad894793a9f072d8598bc5cf6cec1a7" translate="yes" xml:space="preserve">
          <source>In the above, two attributes are declared: &lt;code&gt;age&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt;. The &lt;code&gt;age&lt;/code&gt; attribute is a simple attribute which is equivalent to the following:</source>
          <target state="translated">在上面，声明了两个属性： &lt;code&gt;age&lt;/code&gt; 和 &lt;code&gt;name&lt;/code&gt; 。该 &lt;code&gt;age&lt;/code&gt; 属性是一个简单的属性，它等效于以下情况：</target>
        </trans-unit>
        <trans-unit id="ed25307523e215dbfeb3bdb2d82f57dbf6ee70a7" translate="yes" xml:space="preserve">
          <source>In the above, two memcache servers are used: server1 and server2. You can configure more properties of each server, such as &lt;code&gt;persistent&lt;/code&gt;, &lt;code&gt;weight&lt;/code&gt;, &lt;code&gt;timeout&lt;/code&gt;. Please see &lt;a href=&quot;yii-caching-memcacheserver&quot;&gt;yii\caching\MemCacheServer&lt;/a&gt; for available options.</source>
          <target state="translated">在上面，使用了两个内存缓存服务器：server1和server2。您可以配置每个服务器的更多属性，例如 &lt;code&gt;persistent&lt;/code&gt; ， &lt;code&gt;weight&lt;/code&gt; ， &lt;code&gt;timeout&lt;/code&gt; 。请参阅&lt;a href=&quot;yii-caching-memcacheserver&quot;&gt;yii \ caching \ MemCacheServer&lt;/a&gt;了解可用选项。</target>
        </trans-unit>
        <trans-unit id="a56fa7a3535171f417cfb3fc8c7dd673c7076fd7" translate="yes" xml:space="preserve">
          <source>In the above, we declare two &lt;a href=&quot;yii-data-sort#%24attributes-detail&quot;&gt;$attributes&lt;/a&gt; that support sorting: &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;age&lt;/code&gt;. We pass the sort information to the Article query so that the query results are sorted by the orders specified by the Sort object. In the view, we show two hyperlinks that can lead to pages with the data sorted by the corresponding attributes.</source>
          <target state="translated">在上面，我们声明了两个支持排序的&lt;a href=&quot;yii-data-sort#%24attributes-detail&quot;&gt;$ attributes&lt;/a&gt;： &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;age&lt;/code&gt; 。我们将排序信息传递给Article查询，以便按Sort对象指定的顺序对查询结果进行排序。在该视图中，我们显示了两个超链接，这些超链接可以导致带有按相应属性排序的数据的页面。</target>
        </trans-unit>
        <trans-unit id="2cacbaf14d669acabadd0db9aece91da9e0ce9c4" translate="yes" xml:space="preserve">
          <source>In the above, we have described how to define and use fixtures. Below we summarize the typical workflow of running unit tests related with DB:</source>
          <target state="translated">在上文中,我们已经介绍了如何定义和使用夹具。下面我们总结了运行与DB相关的单元测试的典型工作流程。</target>
        </trans-unit>
        <trans-unit id="81ced116e0947fe97060e14e70a25c32de0343f8" translate="yes" xml:space="preserve">
          <source>In the above, we have shown how to define a fixture about a DB table. To define a fixture not related with DB (e.g. a fixture about certain files and directories), you may extend from the more general base class &lt;a href=&quot;yii-test-fixture&quot;&gt;yii\test\Fixture&lt;/a&gt; and override the &lt;a href=&quot;yii-test-fixture#load()-detail&quot;&gt;load()&lt;/a&gt; and &lt;a href=&quot;yii-test-fixture#unload()-detail&quot;&gt;unload()&lt;/a&gt; methods.</source>
          <target state="translated">在上面，我们展示了如何定义关于数据库表的固定装置。要定义与数据库无关的固定装置（例如，有关某些文件和目录的固定装置），可以从更通用的基类&lt;a href=&quot;yii-test-fixture&quot;&gt;yii \ test \ Fixture&lt;/a&gt;扩展，并覆盖&lt;a href=&quot;yii-test-fixture#load()-detail&quot;&gt;load（）&lt;/a&gt;和&lt;a href=&quot;yii-test-fixture#unload()-detail&quot;&gt;unload（）&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="ddc41b8472e6c983809c0ebc64666cbc5076f64a" translate="yes" xml:space="preserve">
          <source>In the above, we specify the supported extended syntax via the &lt;a href=&quot;yii-web-assetconverter#%24commands-detail&quot;&gt;yii\web\AssetConverter::$commands&lt;/a&gt; property. The array keys are the file extension names (without leading dot), and the array values are the resulting asset file extension names and the commands for performing the asset conversion. The tokens &lt;code&gt;{from}&lt;/code&gt; and &lt;code&gt;{to}&lt;/code&gt; in the commands will be replaced with the source asset file paths and the target asset file paths.</source>
          <target state="translated">在上面，我们通过&lt;a href=&quot;yii-web-assetconverter#%24commands-detail&quot;&gt;yii \ web \ AssetConverter :: $ commands&lt;/a&gt;属性指定了受支持的扩展语法。数组键是文件扩展名（无前导点），数组值是生成的资产文件扩展名和用于执行资产转换的命令。命令中的标记 &lt;code&gt;{from}&lt;/code&gt; 和 &lt;code&gt;{to}&lt;/code&gt; 将被源资产文件路径和目标资产文件路径替换。</target>
        </trans-unit>
        <trans-unit id="26ebeb4f72567e250bbe931dc04eafce66c1cb0c" translate="yes" xml:space="preserve">
          <source>In the code above &quot;users&quot; is template name, after this command run, new file named same as template will be created under the &lt;code&gt;$fixtureDataPath&lt;/code&gt; folder. You can generate fixtures for all templates, for example:</source>
          <target state="translated">在&amp;ldquo;用户&amp;rdquo;上方的代码中为模板名称，运行此命令后，将在 &lt;code&gt;$fixtureDataPath&lt;/code&gt; 文件夹下创建与模板相同的新文件。您可以为所有模板生成灯具，例如：</target>
        </trans-unit>
        <trans-unit id="897bd332a9b46e74287f3d96b9c20447a13f4284" translate="yes" xml:space="preserve">
          <source>In the code above ACF is attached to the &lt;code&gt;site&lt;/code&gt; controller as a behavior. This is the typical way of using an action filter. The &lt;code&gt;only&lt;/code&gt; option specifies that the ACF should only be applied to the &lt;code&gt;login&lt;/code&gt;, &lt;code&gt;logout&lt;/code&gt; and &lt;code&gt;signup&lt;/code&gt; actions. All other actions in the &lt;code&gt;site&lt;/code&gt; controller are not subject to the access control. The &lt;code&gt;rules&lt;/code&gt; option lists the &lt;a href=&quot;yii-filters-accessrule&quot;&gt;access rules&lt;/a&gt;, which reads as follows:</source>
          <target state="translated">在上面的代码中，ACF 作为行为附加到了 &lt;code&gt;site&lt;/code&gt; 控制器。这是使用动作过滤器的典型方法。该 &lt;code&gt;only&lt;/code&gt; 选项指定ACF应该只适用于 &lt;code&gt;login&lt;/code&gt; ， &lt;code&gt;logout&lt;/code&gt; 和 &lt;code&gt;signup&lt;/code&gt; 行为。 &lt;code&gt;site&lt;/code&gt; 控制器中的所有其他操作不受访问控制的约束。该 &lt;code&gt;rules&lt;/code&gt; 选项列表的&lt;a href=&quot;yii-filters-accessrule&quot;&gt;访问规则&lt;/a&gt;，其内容如下：</target>
        </trans-unit>
        <trans-unit id="8f79771a19a5d1563ceed68426976905ea509d12" translate="yes" xml:space="preserve">
          <source>In the code above we're using &lt;a href=&quot;yii-db-querytrait#indexBy()-detail&quot;&gt;indexBy()&lt;/a&gt; when retrieving models from the database to populate an array indexed by models primary keys. These will be later used to identify form fields. &lt;a href=&quot;yii-base-model#loadMultiple()-detail&quot;&gt;Model::loadMultiple()&lt;/a&gt; fills multiple models with the form data coming from POST and &lt;a href=&quot;yii-base-model#validateMultiple()-detail&quot;&gt;Model::validateMultiple()&lt;/a&gt; validates all models at once. As we have validated our models before, using &lt;code&gt;validateMultiple()&lt;/code&gt;, we're now passing &lt;code&gt;false&lt;/code&gt; as a parameter to &lt;a href=&quot;yii-db-baseactiverecord#save()-detail&quot;&gt;save()&lt;/a&gt; to not run validation twice.</source>
          <target state="translated">在上面的代码中，当从数据库中检索模型以填充由模型主键索引的数组时，我们使用&lt;a href=&quot;yii-db-querytrait#indexBy()-detail&quot;&gt;indexBy（）&lt;/a&gt;。这些将在以后用于标识表单字段。&lt;a href=&quot;yii-base-model#loadMultiple()-detail&quot;&gt;Model :: loadMultiple（）&lt;/a&gt;使用来自POST的表单数据填充多个模型，而&lt;a href=&quot;yii-base-model#validateMultiple()-detail&quot;&gt;Model :: validateMultiple（）可&lt;/a&gt;一次验证所有模型。由于我们之前使用 &lt;code&gt;validateMultiple()&lt;/code&gt; 验证了模型，因此现在将 &lt;code&gt;false&lt;/code&gt; 作为参数传递给&lt;a href=&quot;yii-db-baseactiverecord#save()-detail&quot;&gt;save（）&lt;/a&gt;，以免两次运行验证。</target>
        </trans-unit>
        <trans-unit id="bd3f74ef35a1905aee6c542c505734e8c77c325c" translate="yes" xml:space="preserve">
          <source>In the code above, &lt;code&gt;$url&lt;/code&gt; is the URL that the column creates for the button, &lt;code&gt;$model&lt;/code&gt; is the model object being rendered for the current row, and &lt;code&gt;$key&lt;/code&gt; is the key of the model in the data provider array.</source>
          <target state="translated">在上面的代码中， &lt;code&gt;$url&lt;/code&gt; 是列为按钮创建的URL， &lt;code&gt;$model&lt;/code&gt; 是为当前行呈现的模型对象，而 &lt;code&gt;$key&lt;/code&gt; 是数据提供程序数组中模型的键。</target>
        </trans-unit>
        <trans-unit id="32475e2479879768004e96a9e331fb94d0c500fd" translate="yes" xml:space="preserve">
          <source>In the code above, both Smarty and Twig are configured to be useable by the view files. But in order to get these extensions into your project, you need to also modify your &lt;code&gt;composer.json&lt;/code&gt; file to include them, too:</source>
          <target state="translated">在上面的代码中，Smarty和Twig都配置为可由视图文件使用。但是，为了将这些扩展名添加到您的项目中，您还需要修改 &lt;code&gt;composer.json&lt;/code&gt; 文件以使其也包括在内：</target>
        </trans-unit>
        <trans-unit id="f877d21ab84581197677deed46e76a38d0cac6c5" translate="yes" xml:space="preserve">
          <source>In the code above, the &lt;code&gt;imageFile&lt;/code&gt; attribute is used to keep the uploaded file instance. It is associated with a &lt;code&gt;file&lt;/code&gt; validation rule which uses &lt;a href=&quot;yii-validators-filevalidator&quot;&gt;yii\validators\FileValidator&lt;/a&gt; to ensure a file with extension name &lt;code&gt;png&lt;/code&gt; or &lt;code&gt;jpg&lt;/code&gt; is uploaded. The &lt;code&gt;upload()&lt;/code&gt; method will perform the validation and save the uploaded file on the server.</source>
          <target state="translated">在上面的代码中， &lt;code&gt;imageFile&lt;/code&gt; 属性用于保留上传的文件实例。它与使用&lt;a href=&quot;yii-validators-filevalidator&quot;&gt;yii \ validators \ FileValidator&lt;/a&gt;的 &lt;code&gt;file&lt;/code&gt; 验证规则相关联，以确保扩展名为 &lt;code&gt;png&lt;/code&gt; 或 &lt;code&gt;jpg&lt;/code&gt; 的文件已上传。在 &lt;code&gt;upload()&lt;/code&gt; 方法进行验证，并在服务器上保存上传的文件。</target>
        </trans-unit>
        <trans-unit id="f97d55983c247932583fb30aad343970e4e9b6a1" translate="yes" xml:space="preserve">
          <source>In the constructor of the application, the following bootstrapping work is done:</source>
          <target state="translated">在应用程序的构造函数中,完成了以下的引导工作。</target>
        </trans-unit>
        <trans-unit id="b1d0a045d632aa6fcc67d9e062e210d8b30ef29b" translate="yes" xml:space="preserve">
          <source>In the controller action that does the data updating, try to catch the &lt;a href=&quot;yii-db-staleobjectexception&quot;&gt;yii\db\StaleObjectException&lt;/a&gt; and implement necessary business logic (e.g. merging the changes, prompting stated data) to resolve the conflict.</source>
          <target state="translated">在执行数据更新的控制器操作中，尝试捕获&lt;a href=&quot;yii-db-staleobjectexception&quot;&gt;yii \ db \ StaleObjectException&lt;/a&gt;并实现必要的业务逻辑（例如，合并更改，提示声明的数据）以解决冲突。</target>
        </trans-unit>
        <trans-unit id="19aacb613a6bf0af3193525b4f5693e4dbad7203" translate="yes" xml:space="preserve">
          <source>In the controller action that updates the row using Active Record, try and catch the &lt;a href=&quot;yii-db-staleobjectexception&quot;&gt;yii\db\StaleObjectException&lt;/a&gt; exception. Implement necessary business logic (e.g. merging the changes, prompting staled data) to resolve the conflict.</source>
          <target state="translated">在使用Active Record更新行的控制器操作中，尝试捕获&lt;a href=&quot;yii-db-staleobjectexception&quot;&gt;yii \ db \ StaleObjectException&lt;/a&gt;异常。实施必要的业务逻辑（例如，合并更改，提示陈旧的数据）以解决冲突。</target>
        </trans-unit>
        <trans-unit id="83d499730cd38291506c9394c86f71f6247d0881" translate="yes" xml:space="preserve">
          <source>In the controller view, insert a &lt;a href=&quot;yii-captcha-captcha&quot;&gt;yii\captcha\Captcha&lt;/a&gt; widget in the form.</source>
          <target state="translated">在控制器视图中，在表单中插入&lt;a href=&quot;yii-captcha-captcha&quot;&gt;yii \ captcha \ Captcha&lt;/a&gt;小部件。</target>
        </trans-unit>
        <trans-unit id="1c44ac8125ea9f2a96b51a8beee2a5ab3b37fc1c" translate="yes" xml:space="preserve">
          <source>In the controller, we will pass an instance of that model to the view, wherein the &lt;a href=&quot;yii-widgets-activeform&quot;&gt;ActiveForm&lt;/a&gt; widget is used to display the form:</source>
          <target state="translated">在控制器中，我们会将模型的实例传递给视图，其中&lt;a href=&quot;yii-widgets-activeform&quot;&gt;ActiveForm&lt;/a&gt;小部件用于显示表单：</target>
        </trans-unit>
        <trans-unit id="5c4414f85b4c33fd8923cfd169f0e323c9cc1dbd" translate="yes" xml:space="preserve">
          <source>In the example above &lt;code&gt;author_id:integer:notNull:foreignKey(user)&lt;/code&gt; will generate a column named &lt;code&gt;author_id&lt;/code&gt; with a foreign key to the &lt;code&gt;user&lt;/code&gt; table while &lt;code&gt;category_id:integer:defaultValue(1):foreignKey&lt;/code&gt; will generate a column &lt;code&gt;category_id&lt;/code&gt; with a foreign key to the &lt;code&gt;category&lt;/code&gt; table.</source>
          <target state="translated">在上面的示例中， &lt;code&gt;author_id:integer:notNull:foreignKey(user)&lt;/code&gt; 将生成一个名为 &lt;code&gt;author_id&lt;/code&gt; 的列，该列具有指向 &lt;code&gt;user&lt;/code&gt; 表的外键，而 &lt;code&gt;category_id:integer:defaultValue(1):foreignKey&lt;/code&gt; 将生成一个列 &lt;code&gt;category_id&lt;/code&gt; ，其列具有一个外键 &lt;code&gt;category&lt;/code&gt; 表。</target>
        </trans-unit>
        <trans-unit id="b67e7f4075f261551e9dd87400a1e59bc66b8939" translate="yes" xml:space="preserve">
          <source>In the example above we are using wildcard for matching and then filtering each category per needed file. Instead of using &lt;code&gt;fileMap&lt;/code&gt;, you can simply use the convention of the category mapping to the same named file. Now you can use &lt;code&gt;Module::t('validation', 'your custom validation message')&lt;/code&gt; or &lt;code&gt;Module::t('form', 'some form label')&lt;/code&gt; directly.</source>
          <target state="translated">在上面的示例中，我们使用通配符进行匹配，然后根据需要过滤每个类别的文件。除了使用 &lt;code&gt;fileMap&lt;/code&gt; 之外，您还可以简单地使用类别映射的约定到相同的命名文件。现在，您可以直接使用 &lt;code&gt;Module::t('validation', 'your custom validation message')&lt;/code&gt; 或 &lt;code&gt;Module::t('form', 'some form label')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0550ac988e107e5bdb246c879ed2d54a95bc1d83" translate="yes" xml:space="preserve">
          <source>In the examples shown above, the action results are all strings which will be treated as the response body to be sent to end users. The following example shows how an action can redirect the user browser to a new URL by returning a response object (because the &lt;a href=&quot;yii-web-controller#redirect()-detail&quot;&gt;redirect()&lt;/a&gt; method returns a response object):</source>
          <target state="translated">在上面显示的示例中，操作结果是所有字符串，将被视为要发送给最终用户的响应主体。下面的示例显示操作如何通过返回响应对象（因为&lt;a href=&quot;yii-web-controller#redirect()-detail&quot;&gt;redirect（）&lt;/a&gt;方法返回响应对象）将用户浏览器重定向到新的URL ：</target>
        </trans-unit>
        <trans-unit id="8f31d382030614295df897cf04c919e7fba1b667" translate="yes" xml:space="preserve">
          <source>In the expression above, both &lt;code&gt;female&lt;/code&gt; and &lt;code&gt;male&lt;/code&gt; are possible parameter values, while &lt;code&gt;other&lt;/code&gt; handles values that do not match either one of them. Following each possible parameter value, you should specify a phrase and enclose it in a pair of curly brackets.</source>
          <target state="translated">在上面的表达式中， &lt;code&gt;female&lt;/code&gt; 和 &lt;code&gt;male&lt;/code&gt; 都是可能的参数值，而 &lt;code&gt;other&lt;/code&gt; 参数则处理与其中任何一个都不匹配的值。在每个可能的参数值之后，应指定一个短语并将其用大括号括起来。</target>
        </trans-unit>
        <trans-unit id="f7b82950ca3eb74c085ec39aa5d76079eb2a26c7" translate="yes" xml:space="preserve">
          <source>In the first step, it determines the layout name and the context module:</source>
          <target state="translated">第一步,它确定布局名称和上下文模块。</target>
        </trans-unit>
        <trans-unit id="c4c20ec84413f9f817b768847f82c4c4c222f04b" translate="yes" xml:space="preserve">
          <source>In the first step, it determines the layout value and the context module:</source>
          <target state="translated">第一步,它确定布局值和上下文模块。</target>
        </trans-unit>
        <trans-unit id="0d03a44a8f83b3126ab36a60c6635d351ceeb16a" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;HelloWidget&lt;/code&gt; HTML-encodes and displays the content assigned to its &lt;code&gt;message&lt;/code&gt; property. If the property is not set, it will display &quot;Hello World&quot; by default.</source>
          <target state="translated">在以下示例中， &lt;code&gt;HelloWidget&lt;/code&gt; HTML编码并显示分配给其 &lt;code&gt;message&lt;/code&gt; 属性的内容。如果未设置该属性，则默认情况下将显示&amp;ldquo; Hello World&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a647d4fa1c2d60d6e11de96eee8f2fc97c1d5384" translate="yes" xml:space="preserve">
          <source>In the following example, ContentNegotiator is configured to support JSON and XML response formats, and English (United States) and German languages.</source>
          <target state="translated">在下面的例子中,ContentNegotiator被配置为支持JSON和XML响应格式,以及英语(美国)和德语。</target>
        </trans-unit>
        <trans-unit id="bf725dd452115361d74ea9e8fcc7de10d135c8e7" translate="yes" xml:space="preserve">
          <source>In the following example, an &lt;a href=&quot;yii-web-user#%24identityClass-detail&quot;&gt;identity class&lt;/a&gt; is implemented as an &lt;a href=&quot;guide-db-active-record&quot;&gt;Active Record&lt;/a&gt; class associated with the &lt;code&gt;user&lt;/code&gt; database table.</source>
          <target state="translated">在下面的示例中，将&lt;a href=&quot;yii-web-user#%24identityClass-detail&quot;&gt;身份类&lt;/a&gt;实现为与 &lt;code&gt;user&lt;/code&gt; 数据库表关联的&lt;a href=&quot;guide-db-active-record&quot;&gt;Active Record&lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="f45b7737e0f3b93eb2ce5e2c4a22789b33f27fe1" translate="yes" xml:space="preserve">
          <source>In the following example, any assets ending with &lt;code&gt;jquery.min.js&lt;/code&gt; will be replaced with &lt;code&gt;jquery/dist/jquery.js&lt;/code&gt; which is relative to &lt;a href=&quot;yii-web-assetmanager#%24baseUrl-detail&quot;&gt;$baseUrl&lt;/a&gt; and &lt;a href=&quot;yii-web-assetmanager#%24basePath-detail&quot;&gt;$basePath&lt;/a&gt;.</source>
          <target state="translated">在以下示例中，所有以 &lt;code&gt;jquery.min.js&lt;/code&gt; 结尾的资产都将替换为相对于&lt;a href=&quot;yii-web-assetmanager#%24baseUrl-detail&quot;&gt;$ baseUrl&lt;/a&gt;和&lt;a href=&quot;yii-web-assetmanager#%24basePath-detail&quot;&gt;$ basePath的&lt;/a&gt; &lt;code&gt;jquery/dist/jquery.js&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="26544fda077baba51d34d725ee9e838ad7c7dce2" translate="yes" xml:space="preserve">
          <source>In the following example, besides creating the &lt;code&gt;news&lt;/code&gt; table we also insert an initial row into this table.</source>
          <target state="translated">在下面的示例中，除了创建 &lt;code&gt;news&lt;/code&gt; 表之外，我们还在此表中插入了第一行。</target>
        </trans-unit>
        <trans-unit id="cca725f3af415949b4f3338963fc58a1ed58dd03" translate="yes" xml:space="preserve">
          <source>In the following example, the &lt;code&gt;view&lt;/code&gt; action (an inline action) has declared two parameters: &lt;code&gt;$id&lt;/code&gt; and &lt;code&gt;$version&lt;/code&gt;.</source>
          <target state="translated">在以下示例中， &lt;code&gt;view&lt;/code&gt; 操作（内联操作）声明了两个参数： &lt;code&gt;$id&lt;/code&gt; 和 &lt;code&gt;$version&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a01213e67d94863f63c6439ee835d7c80581123f" translate="yes" xml:space="preserve">
          <source>In the following example, we create a &lt;code&gt;StatusValidator&lt;/code&gt; which validates if an input is a valid status input against the existing status data. The validator supports both server-side and client-side validation.</source>
          <target state="translated">在以下示例中，我们创建一个 &lt;code&gt;StatusValidator&lt;/code&gt; ，以根据现有状态数据验证输入是否为有效状态输入。验证器支持服务器端和客户端验证。</target>
        </trans-unit>
        <trans-unit id="bd2a966019903cdd109b89075a74858a08235878" translate="yes" xml:space="preserve">
          <source>In the following example, we declare an Active Record class named &lt;code&gt;Customer&lt;/code&gt; for the &lt;code&gt;customer&lt;/code&gt; database table.</source>
          <target state="translated">在下面的示例中，我们为 &lt;code&gt;customer&lt;/code&gt; 数据库表声明一个名为 &lt;code&gt;Customer&lt;/code&gt; 的Active Record类。</target>
        </trans-unit>
        <trans-unit id="3d9adffb2c4b59d542dca0f3a2f98e46672747d9" translate="yes" xml:space="preserve">
          <source>In the following example, we show how a generic model can be used for a login form:</source>
          <target state="translated">在下面的例子中,我们展示了如何将一个通用模型用于登录表单。</target>
        </trans-unit>
        <trans-unit id="e94f6172c80c1ed223ed5c2e9252a5b74d834432" translate="yes" xml:space="preserve">
          <source>In the following examples, we assume the target &lt;a href=&quot;yii-i18n-formatter#%24timeZone-detail&quot;&gt;time zone&lt;/a&gt; is set as &lt;code&gt;Europe/Berlin&lt;/code&gt;.</source>
          <target state="translated">在以下示例中，我们假设目标&lt;a href=&quot;yii-i18n-formatter#%24timeZone-detail&quot;&gt;时区&lt;/a&gt;设置为 &lt;code&gt;Europe/Berlin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="63dff8635262222c8d1db6e4b2a14e6b3412d3df" translate="yes" xml:space="preserve">
          <source>In the following rule declaration, the &lt;code&gt;page&lt;/code&gt; and &lt;code&gt;tag&lt;/code&gt; parameters are both optional and will take the value of 1 and empty string, respectively, when they are not provided.</source>
          <target state="translated">在下面的规则声明中， &lt;code&gt;page&lt;/code&gt; 和 &lt;code&gt;tag&lt;/code&gt; 参数都是可选的，当未提供时，它们的值分别为1和空字符串。</target>
        </trans-unit>
        <trans-unit id="d9fdf281902e61d3446b55099e65b227216990e4" translate="yes" xml:space="preserve">
          <source>In the following we will describe how to write a &lt;code&gt;UserProfile&lt;/code&gt; unit test class using &lt;code&gt;yii2-codeception&lt;/code&gt;.</source>
          <target state="translated">在下文中，我们将描述如何使用 &lt;code&gt;yii2-codeception&lt;/code&gt; 编写 &lt;code&gt;UserProfile&lt;/code&gt; 单元测试类。</target>
        </trans-unit>
        <trans-unit id="a2a25380e22ec4a9056e9aa4f46f274522493632" translate="yes" xml:space="preserve">
          <source>In the following you find some examples:</source>
          <target state="translated">在下面你会发现一些例子。</target>
        </trans-unit>
        <trans-unit id="bb4317488c64a617db36451042d438ecffd0b026" translate="yes" xml:space="preserve">
          <source>In the following, a configuration is used to create and initialize a database connection:</source>
          <target state="translated">在下面的配置中,用于创建和初始化数据库连接。</target>
        </trans-unit>
        <trans-unit id="34b24fa1e0b3e264622d2211c950bf562870a9b6" translate="yes" xml:space="preserve">
          <source>In the following, we introduce an approach to combine and compress asset files without the need to modify your existing application code.</source>
          <target state="translated">在下文中,我们将介绍一种不需要修改现有应用程序代码就能合并和压缩资产文件的方法。</target>
        </trans-unit>
        <trans-unit id="006f6f0d755bfb0c4016b3c8b51f72b46caa7e76" translate="yes" xml:space="preserve">
          <source>In the following, we use an example to illustrate how you can build a set of RESTful APIs with some minimal coding effort.</source>
          <target state="translated">在下文中,我们用一个例子来说明如何用一些最小的编码工作来构建一组RESTful API。</target>
        </trans-unit>
        <trans-unit id="3b85145d55d27de74750582ebdc2fad9e8452ce9" translate="yes" xml:space="preserve">
          <source>In the following, we will describe the features common to all log targets.</source>
          <target state="translated">在下文中,我们将描述所有日志目标的共同特征。</target>
        </trans-unit>
        <trans-unit id="b08a026c58882ab85e8ff91613f612f1786333a7" translate="yes" xml:space="preserve">
          <source>In the following, we will describe the main usage and properties of every core validator.</source>
          <target state="translated">下面,我们将介绍每个核心验证器的主要用法和属性。</target>
        </trans-unit>
        <trans-unit id="6ede61bc57857e88e7216550c91ac20509a5e48f" translate="yes" xml:space="preserve">
          <source>In the following, we will describe the usage of each query building method.</source>
          <target state="translated">下面,我们将介绍每种查询建立方法的用法。</target>
        </trans-unit>
        <trans-unit id="593e237107fe1a364b93a34a2cc13596f7ad1482" translate="yes" xml:space="preserve">
          <source>In the following, we will show how you can create a form that would allow you to collect data for both &lt;code&gt;User&lt;/code&gt; and &lt;code&gt;Profile&lt;/code&gt; models.</source>
          <target state="translated">在下面的内容中，我们将展示如何创建一个表单，该表单将允许您收集 &lt;code&gt;User&lt;/code&gt; 模型和 &lt;code&gt;Profile&lt;/code&gt; 模型的数据。</target>
        </trans-unit>
        <trans-unit id="92d40b91f1c0b567e616eb289beb07faa00a1825" translate="yes" xml:space="preserve">
          <source>In the following, we will summarize the various Active Record life cycles and the methods/events that are involved in the life cycles.</source>
          <target state="translated">下面,我们将总结各种活动记录的生命周期以及生命周期中涉及的方法/事件。</target>
        </trans-unit>
        <trans-unit id="930ad6f754d1291a8567c57a0325259b09ef74bc" translate="yes" xml:space="preserve">
          <source>In the form model, declare an attribute to store user-entered verification code, and declare the attribute to be validated by the 'captcha' validator.</source>
          <target state="translated">在表单模型中,声明一个属性来存储用户输入的验证码,并声明该属性将由'验证码'验证器进行验证。</target>
        </trans-unit>
        <trans-unit id="7798b4f07de510bb5f985bc6028cec3fe3961ddb" translate="yes" xml:space="preserve">
          <source>In the last subsection, we have explained how to combine all asset bundles into a single one in order to minimize the HTTP requests for asset files referenced in an application. This is not always desirable in practice. For example, imagine your application has a &quot;front end&quot; as well as a &quot;back end&quot;, each of which uses a different set of JavaScript and CSS files. In this case, combining all asset bundles from both ends into a single one does not make sense, because the asset bundles for the &quot;front end&quot; are not used by the &quot;back end&quot; and it would be a waste of network bandwidth to send the &quot;back end&quot; assets when a &quot;front end&quot; page is requested.</source>
          <target state="translated">在上一小节中,我们已经解释了如何将所有的资产捆绑组合成一个单一的资产捆绑,以尽量减少对应用程序中引用的资产文件的HTTP请求。这在实践中并不总是可取的。例如,想象一下你的应用程序有一个 &quot;前端 &quot;和一个 &quot;后端&quot;,每一个都使用不同的JavaScript和CSS文件。在这种情况下,将两端的所有资产捆绑组合成一个资产捆绑是没有意义的,因为 &quot;前端 &quot;的资产捆绑不被 &quot;后端 &quot;使用,而且当 &quot;前端 &quot;页面被请求时,发送 &quot;后端 &quot;的资产是一种网络带宽的浪费。</target>
        </trans-unit>
        <trans-unit id="01772b7e084f1afe8f8d19da7ef79b38926b9866" translate="yes" xml:space="preserve">
          <source>In the long term it usually gives you a good time-saving effect.</source>
          <target state="translated">从长期来看,通常会给你带来很好的省时效果。</target>
        </trans-unit>
        <trans-unit id="11181a7f8a9f99639c8791d18596ce6da30fb091" translate="yes" xml:space="preserve">
          <source>In the migration class, you are expected to write code in the &lt;code&gt;up()&lt;/code&gt; method that makes changes to the database structure. You may also want to write code in the &lt;code&gt;down()&lt;/code&gt; method to revert the changes made by &lt;code&gt;up()&lt;/code&gt;. The &lt;code&gt;up()&lt;/code&gt; method is invoked when you upgrade the database with this migration, while the &lt;code&gt;down()&lt;/code&gt; method is invoked when you downgrade the database. The following code shows how you may implement the migration class to create a &lt;code&gt;news&lt;/code&gt; table:</source>
          <target state="translated">在迁移类中，应该使用 &lt;code&gt;up()&lt;/code&gt; 方法编写代码来更改数据库结构。您可能还想在 &lt;code&gt;down()&lt;/code&gt; 方法中编写代码，以还原 &lt;code&gt;up()&lt;/code&gt; 所做的更改。该 &lt;code&gt;up()&lt;/code&gt; 当您升级使用此迁移数据库，而方法被调用， &lt;code&gt;down()&lt;/code&gt; 当你降级数据库方法被调用。以下代码显示了如何实现迁移类以创建 &lt;code&gt;news&lt;/code&gt; 表：</target>
        </trans-unit>
        <trans-unit id="b5352f6e8746aecc5d93256d8c7969529f55442b" translate="yes" xml:space="preserve">
          <source>In the next request we can get URL remembered in the following way:</source>
          <target state="translated">在接下来的请求中,我们可以通过以下方式获得URL的记忆。</target>
        </trans-unit>
        <trans-unit id="0388b91d4a6be44e30e1cbd299bf00b4bfcc95f8" translate="yes" xml:space="preserve">
          <source>In the plural rule arguments above, &lt;code&gt;=&lt;/code&gt; means explicit value. So &lt;code&gt;=0&lt;/code&gt; means exactly zero, &lt;code&gt;=1&lt;/code&gt; means exactly one. &lt;code&gt;other&lt;/code&gt; stands for any other value. &lt;code&gt;#&lt;/code&gt; is replaced with the value of &lt;code&gt;n&lt;/code&gt; formatted according to target language.</source>
          <target state="translated">在上面的复数规则参数中， &lt;code&gt;=&lt;/code&gt; 表示显式值。因此 &lt;code&gt;=0&lt;/code&gt; 表示正好为零， &lt;code&gt;=1&lt;/code&gt; 表示正好为1。 &lt;code&gt;other&lt;/code&gt; 代表任何其他值。 &lt;code&gt;#&lt;/code&gt; 将替换为根据目标语言格式化的 &lt;code&gt;n&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="e0137ded62f4a20b6e3f580da6808d8376faf51f" translate="yes" xml:space="preserve">
          <source>In the releases of your extension, in addition to code files, you should also consider including the following to help other people learn about and use your extension:</source>
          <target state="translated">在发布你的扩展时,除了代码文件外,你还应该考虑包括以下内容,以帮助其他人了解和使用你的扩展。</target>
        </trans-unit>
        <trans-unit id="90d0b6f6db0613112ab59dc16feeb14ce715a152" translate="yes" xml:space="preserve">
          <source>In the second step, it determines the actual layout file according to the layout value and the context module determined in the first step. The layout value can be:</source>
          <target state="translated">第二步,根据第一步确定的布局值和上下文模块确定实际布局文件。布局值可以是:</target>
        </trans-unit>
        <trans-unit id="74162be168ede01b54358940789028f7eedc3694" translate="yes" xml:space="preserve">
          <source>In the second step, it determines the actual layout file according to the previously found layout name and context module. The layout name can be:</source>
          <target state="translated">第二步,根据之前找到的布局名和上下文模块,确定实际的布局文件。布局名可以是:</target>
        </trans-unit>
        <trans-unit id="e5e6e3e552627d5c595da898832c1ee3ecec7729" translate="yes" xml:space="preserve">
          <source>In the special case when you want to maintain extensions manually, you may configure this property as follows:</source>
          <target state="translated">在特殊情况下,当您想手动维护扩展时,您可以按以下方式配置此属性。</target>
        </trans-unit>
        <trans-unit id="2d4938470f107ce0270bb4bfb3290c224b8ca98e" translate="yes" xml:space="preserve">
          <source>In the view file above, the current data model is available as &lt;code&gt;$model&lt;/code&gt;. Additionally the following variables are available:</source>
          <target state="translated">在上面的视图文件中，当前数据模型可作为 &lt;code&gt;$model&lt;/code&gt; 。此外，以下变量可用：</target>
        </trans-unit>
        <trans-unit id="0bb7197979c5d62d6e9876d2665e34a7b0d1a2d4" translate="yes" xml:space="preserve">
          <source>In the view file, you should add the &lt;code&gt;multiple&lt;/code&gt; option to the &lt;code&gt;fileInput()&lt;/code&gt; call so that the file upload field can receive multiple files:</source>
          <target state="translated">在视图文件中，应该将 &lt;code&gt;multiple&lt;/code&gt; 选项添加到 &lt;code&gt;fileInput()&lt;/code&gt; 调用中，以便文件上载字段可以接收多个文件：</target>
        </trans-unit>
        <trans-unit id="dc1cc2dfa07b545938ca7e8c892c39c16846d199" translate="yes" xml:space="preserve">
          <source>In the view you can use javascript to add new input lines dynamically.</source>
          <target state="translated">在视图中,你可以使用javascript来动态添加新的输入行。</target>
        </trans-unit>
        <trans-unit id="8739cc5ba8a1e32ca4949a66c7709ae8161a6046" translate="yes" xml:space="preserve">
          <source>In this and the next few sections, we will describe how to install Yii with the so-called &lt;em&gt;Basic Project Template&lt;/em&gt; and how to implement new features on top of this template. Yii also provides another template called the &lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced/blob/master/docs/guide/README.md&quot;&gt;Advanced Project Template&lt;/a&gt; which is better used in a team development environment to develop applications with multiple tiers.</source>
          <target state="translated">在本节和接下来的几节中，我们将描述如何使用所谓的&amp;ldquo; &lt;em&gt;基本项目模板&amp;rdquo;&lt;/em&gt;安装Yii，以及如何在该模板之上实现新功能。Yii还提供了另一个称为&amp;ldquo; &lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced/blob/master/docs/guide/README.md&quot;&gt;高级项目模板&amp;rdquo;的模板&lt;/a&gt;，该模板更适合在团队开发环境中用于开发多层应用程序。</target>
        </trans-unit>
        <trans-unit id="4366eb881bb5453529c5307d54196f6265e320d4" translate="yes" xml:space="preserve">
          <source>In this case attributes &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;password&lt;/code&gt; and &lt;code&gt;secret&lt;/code&gt; are required, but &lt;code&gt;secret&lt;/code&gt; must be assigned explicitly.</source>
          <target state="translated">在这种情况下，必须提供 &lt;code&gt;username&lt;/code&gt; ， &lt;code&gt;password&lt;/code&gt; 和 &lt;code&gt;secret&lt;/code&gt; 属性，但必须显式分配 &lt;code&gt;secret&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d9a3494231bb923705dde8c50a9551ddc7f9752" translate="yes" xml:space="preserve">
          <source>In this case, the container will use a registered PHP callable to build new instances of a class. Each time when &lt;a href=&quot;yii-di-container#get()-detail&quot;&gt;yii\di\Container::get()&lt;/a&gt; is called, the corresponding callable will be invoked. The callable is responsible to resolve the dependencies and inject them appropriately to the newly created objects. For example,</source>
          <target state="translated">在这种情况下，容器将使用可注册的可调用PHP来构建类的新实例。每次调用&lt;a href=&quot;yii-di-container#get()-detail&quot;&gt;yii \ di \ Container :: get（）时&lt;/a&gt;，将调用相应的callable。可调用对象负责解析依赖项并将它们适当地注入到新创建的对象中。例如，</target>
        </trans-unit>
        <trans-unit id="26eb690dbd2c78d43e9a964771ba439ac1acd7c3" translate="yes" xml:space="preserve">
          <source>In this case, the themed version could be either &lt;code&gt;@app/themes/christmas/site/index.php&lt;/code&gt; or &lt;code&gt;@app/themes/basic/site/index.php&lt;/code&gt;. The former has precedence over the latter if both files exist.</source>
          <target state="translated">在这种情况下，主题版本可以是 &lt;code&gt;@app/themes/christmas/site/index.php&lt;/code&gt; 或 &lt;code&gt;@app/themes/basic/site/index.php&lt;/code&gt; 。如果两个文件都存在，则前者优先于后者。</target>
        </trans-unit>
        <trans-unit id="7c5fe2392a26a651ff9104e5951e87011d834326" translate="yes" xml:space="preserve">
          <source>In this case, the view &lt;code&gt;@app/views/site/index.php&lt;/code&gt; would be themed as either &lt;code&gt;@app/themes/christmas/site/index.php&lt;/code&gt; or &lt;code&gt;@app/themes/basic/site/index.php&lt;/code&gt;, depending on which themed file exists. If both themed files exist, the first one will take precedence. In practice, you would keep most themed view files in &lt;code&gt;@app/themes/basic&lt;/code&gt; and customize some of them in &lt;code&gt;@app/themes/christmas&lt;/code&gt;.</source>
          <target state="translated">在这种情况下，视 &lt;code&gt;@app/views/site/index.php&lt;/code&gt; 为主题的视景为 &lt;code&gt;@app/themes/christmas/site/index.php&lt;/code&gt; 或 &lt;code&gt;@app/themes/basic/site/index.php&lt;/code&gt; ，具体取决于哪个主题文件存在。如果两个主题文件都存在，则第一个优先。实际上，您可以将大多数主题视图文件保存在 &lt;code&gt;@app/themes/basic&lt;/code&gt; ，并在 &lt;code&gt;@app/themes/christmas&lt;/code&gt; 自定义其中的一些。</target>
        </trans-unit>
        <trans-unit id="a965d447e60a37553486daddd7ee6fc9fef1cf3d" translate="yes" xml:space="preserve">
          <source>In this case, you should put the sub-query in an array and use the array key to specify the alias.</source>
          <target state="translated">在这种情况下,你应该把子查询放在一个数组中,并使用数组键来指定别名。</target>
        </trans-unit>
        <trans-unit id="ad2adbe1e86cc2a2d6674dfccc81ce9cbc89e449" translate="yes" xml:space="preserve">
          <source>In this example we use an array to pass global configuration parameters from the PHP part of the application to the JS frontend code.</source>
          <target state="translated">在这个例子中,我们使用一个数组将应用程序的PHP部分的全局配置参数传递给JS前端代码。</target>
        </trans-unit>
        <trans-unit id="be93219142dfb672afd6eb71e888ad89024c03cf" translate="yes" xml:space="preserve">
          <source>In this example, access is allowed for all the IPv4 and IPv6 addresses excluding the &lt;code&gt;192.168.10.0/24&lt;/code&gt; subnet. IPv4 address &lt;code&gt;192.168.10.128&lt;/code&gt; is also allowed, because it is listed before the restriction.</source>
          <target state="translated">在此示例中，允许访问除 &lt;code&gt;192.168.10.0/24&lt;/code&gt; 子网之外的所有IPv4和IPv6地址。还允许使用IPv4地址 &lt;code&gt;192.168.10.128&lt;/code&gt; ，因为它在限制之前列出。</target>
        </trans-unit>
        <trans-unit id="697384e31c1de90bd1e6bbc4532ab13e48f4f048" translate="yes" xml:space="preserve">
          <source>In this guide all composer commands assume you have installed composer &lt;a href=&quot;https://getcomposer.org/doc/00-intro.md#globally&quot;&gt;globally&lt;/a&gt; so that it is available as the &lt;code&gt;composer&lt;/code&gt; command. If you are using the &lt;code&gt;composer.phar&lt;/code&gt; in the local directory instead, you have to adjust the example commands accordingly.</source>
          <target state="translated">在本指南中，所有composer命令都假定您已&lt;a href=&quot;https://getcomposer.org/doc/00-intro.md#globally&quot;&gt;全局&lt;/a&gt;安装composer ，以便可以将其作为 &lt;code&gt;composer&lt;/code&gt; 命令使用。如果在本地目录中使用 &lt;code&gt;composer.phar&lt;/code&gt; ，则必须相应地调整示例命令。</target>
        </trans-unit>
        <trans-unit id="5436fce9d897c4424437c2c9fbdd3b4a63f3cb1f" translate="yes" xml:space="preserve">
          <source>In this method, you may also want to return different lists of fields based on some context information. For example, depending on &lt;a href=&quot;yii-base-model#%24scenario-detail&quot;&gt;$scenario&lt;/a&gt; or the privilege of the current application user, you may return different sets of visible fields or filter out some fields.</source>
          <target state="translated">在此方法中，您可能还想根据某些上下文信息返回不同的字段列表。例如，根据&lt;a href=&quot;yii-base-model#%24scenario-detail&quot;&gt;$ scenario&lt;/a&gt;或当前应用程序用户的特权，您可以返回不同的可见字段集或过滤掉某些字段。</target>
        </trans-unit>
        <trans-unit id="600a972a598e27df6b4dcb4d42c25bcb6044490a" translate="yes" xml:space="preserve">
          <source>In this method, you may also want to return different lists of fields based on some context information. For example, depending on the privilege of the current application user, you may return different sets of visible fields or filter out some fields.</source>
          <target state="translated">在这个方法中,你可能还想根据一些上下文信息返回不同的字段列表。例如,根据当前应用程序用户的权限,你可以返回不同的可见字段集或过滤掉一些字段。</target>
        </trans-unit>
        <trans-unit id="0ad9d436ae6e4b37d8dfe306b7b3c4bf9e51af12" translate="yes" xml:space="preserve">
          <source>In this section we'll review the following security aspects:</source>
          <target state="translated">在本节中,我们将回顾以下安全方面的内容。</target>
        </trans-unit>
        <trans-unit id="79675da0a827e23bf791e7a8383835c34be74fd3" translate="yes" xml:space="preserve">
          <source>In this section, we will describe how to compose and send responses to end users.</source>
          <target state="translated">在本节中,我们将介绍如何编写并向最终用户发送响应。</target>
        </trans-unit>
        <trans-unit id="ba259a8c8b10c6ee64d0185493b7c2b214d2502d" translate="yes" xml:space="preserve">
          <source>In this section, we will mainly describe how a resource class extending from &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt; (or its child classes) can specify what data may be returned via RESTful APIs. If the resource class does not extend from &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt;, then all its public member variables will be returned.</source>
          <target state="translated">在本节中，我们将主要描述从&lt;a href=&quot;yii-base-model&quot;&gt;yii \ base \ Model&lt;/a&gt;扩展的资源类（或其子类）如何指定可以通过RESTful API返回哪些数据。如果资源类未从&lt;a href=&quot;yii-base-model&quot;&gt;yii \ base \ Model&lt;/a&gt;扩展，则将返回其所有公共成员变量。</target>
        </trans-unit>
        <trans-unit id="7e6949cd2bd7b47ca2fa811fd8de9d13fb7e9d25" translate="yes" xml:space="preserve">
          <source>In this section, we will mainly describe the first two steps.</source>
          <target state="translated">在本节中,我们将主要介绍前两个步骤。</target>
        </trans-unit>
        <trans-unit id="a46fcea3c9be5bbc6fbd46ca7954d4e8360c62cb" translate="yes" xml:space="preserve">
          <source>In this section, you have learned how to use Gii to generate the code that implements complete CRUD functionality for content stored in a database table.</source>
          <target state="translated">在本节中,你已经学会了如何使用Gii来生成代码,实现对存储在数据库表中的内容的完整CRUD功能。</target>
        </trans-unit>
        <trans-unit id="40046d0924f75606215143f4bec5d1df81fac54c" translate="yes" xml:space="preserve">
          <source>In this tutorial, we will mainly describe the usage of Active Record for relational databases. However, most content described here are also applicable to Active Record for NoSQL databases.</source>
          <target state="translated">在本教程中,我们将主要介绍Active Record对于关系型数据库的用法。但是,这里描述的大部分内容也适用于NoSQL数据库的Active Record。</target>
        </trans-unit>
        <trans-unit id="874ffee33f1b020d8b8a956709a23e150e249d7b" translate="yes" xml:space="preserve">
          <source>In this way you will avoid collision of fixture data files between tests and use them as you need.</source>
          <target state="translated">这样,您就可以避免测试之间的夹具数据文件的碰撞,并根据您的需要使用它们。</target>
        </trans-unit>
        <trans-unit id="a1a5f71916336b95986d3d9bba5e7e86ead0ee52" translate="yes" xml:space="preserve">
          <source>In view files often the HTML code is not written out directly but generated by some PHP code dependent on the variables of the view. In order for the generated HTML to be manipulated with Javascript, the JS code has to contain dynamic parts too, for example the IDs of the jQuery selectors.</source>
          <target state="translated">在视图文件中,HTML代码往往不是直接写出来的,而是由一些依赖于视图变量的PHP代码生成的,为了让生成的HTML能够被Javascript操作,JS代码也必须包含动态部分,例如jQuery选择器的ID。为了让生成的HTML能够用Javascript进行操作,JS代码也必须包含动态部分,例如jQuery选择器的ID。</target>
        </trans-unit>
        <trans-unit id="e3f29f71c6c6618a65fcb7924a133f223e54a9ca" translate="yes" xml:space="preserve">
          <source>In which format should the value of each data model be displayed as (e.g. &lt;code&gt;&quot;raw&quot;&lt;/code&gt;, &lt;code&gt;&quot;text&quot;&lt;/code&gt;, &lt;code&gt;&quot;html&quot;&lt;/code&gt;, &lt;code&gt;['date', 'php:Y-m-d']&lt;/code&gt;).</source>
          <target state="translated">每个数据模型的值应以哪种格式显示（例如 &lt;code&gt;&quot;raw&quot;&lt;/code&gt; ， &lt;code&gt;&quot;text&quot;&lt;/code&gt; ， &lt;code&gt;&quot;html&quot;&lt;/code&gt; ， &lt;code&gt;['date', 'php:Y-m-d']&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="02d4acf11ad177c49763e80afd208b4892f18537" translate="yes" xml:space="preserve">
          <source>In which format should the value of each data model be displayed as (e.g. &lt;code&gt;&quot;raw&quot;&lt;/code&gt;, &lt;code&gt;&quot;text&quot;&lt;/code&gt;, &lt;code&gt;&quot;html&quot;&lt;/code&gt;, &lt;code&gt;['date', 'php:Y-m-d']&lt;/code&gt;). Supported formats are determined by the &lt;a href=&quot;yii-grid-gridview#%24formatter-detail&quot;&gt;formatter&lt;/a&gt; used by the &lt;a href=&quot;yii-grid-gridview&quot;&gt;yii\grid\GridView&lt;/a&gt;. Default format is &quot;text&quot; which will format the value as an HTML-encoded plain text when &lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii\i18n\Formatter&lt;/a&gt; is used as the &lt;a href=&quot;yii-grid-gridview#%24formatter-detail&quot;&gt;formatter&lt;/a&gt; of the GridView.</source>
          <target state="translated">每个数据模型的值应以哪种格式显示（例如 &lt;code&gt;&quot;raw&quot;&lt;/code&gt; ， &lt;code&gt;&quot;text&quot;&lt;/code&gt; ， &lt;code&gt;&quot;html&quot;&lt;/code&gt; ， &lt;code&gt;['date', 'php:Y-m-d']&lt;/code&gt; ）。支持的格式由&lt;a href=&quot;yii-grid-gridview&quot;&gt;yii \ grid \ GridView&lt;/a&gt;使用的&lt;a href=&quot;yii-grid-gridview#%24formatter-detail&quot;&gt;格式化程序&lt;/a&gt;确定。默认格式为&amp;ldquo;文本&amp;rdquo;，当使用&lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii \ i18n \ Formatter&lt;/a&gt;作为GridView 的&lt;a href=&quot;yii-grid-gridview#%24formatter-detail&quot;&gt;格式&lt;/a&gt;设置器时，会将值格式化为HTML编码的纯文本。</target>
        </trans-unit>
        <trans-unit id="43f1840020864c280b6030185f71cbc6507de538" translate="yes" xml:space="preserve">
          <source>In your JavaScript code you can now access these like &lt;code&gt;yiiOptions.baseUrl&lt;/code&gt; or &lt;code&gt;yiiOptions.language&lt;/code&gt;.</source>
          <target state="translated">现在，您可以在JavaScript代码中访问 &lt;code&gt;yiiOptions.baseUrl&lt;/code&gt; 或 &lt;code&gt;yiiOptions.language&lt;/code&gt; 之类的内容。</target>
        </trans-unit>
        <trans-unit id="00bd92117b61de092e8b53f27488ce9889f6f063" translate="yes" xml:space="preserve">
          <source>In your unit test class extending &lt;a href=&quot;yii-codeception-dbtestcase&quot;&gt;yii\codeception\DbTestCase&lt;/a&gt; or &lt;a href=&quot;yii-codeception-testcase&quot;&gt;yii\codeception\TestCase&lt;/a&gt;, declare which fixtures you want to use in the &lt;a href=&quot;yii-test-fixturetrait#fixtures()-detail&quot;&gt;fixtures()&lt;/a&gt; method. For example,</source>
          <target state="translated">在扩展&lt;a href=&quot;yii-codeception-dbtestcase&quot;&gt;yii \ codeception \ DbTestCase&lt;/a&gt;或yii &lt;a href=&quot;yii-codeception-testcase&quot;&gt;\ codeception \ TestCase&lt;/a&gt;的单元测试类中，声明您要在Fixtures &lt;a href=&quot;yii-test-fixturetrait#fixtures()-detail&quot;&gt;（）&lt;/a&gt;方法中使用的灯具。例如，</target>
        </trans-unit>
        <trans-unit id="73caa3358e297d4c512dad71b8f738fa3cc27275" translate="yes" xml:space="preserve">
          <source>Include file(s) before starting tinker shell</source>
          <target state="translated">在启动tinker shell之前包含文件</target>
        </trans-unit>
        <trans-unit id="724fc6eae7e32c77ed08a9cab9ea718258ffe375" translate="yes" xml:space="preserve">
          <source>Include the &lt;a href=&quot;yii&quot;&gt;Yii&lt;/a&gt; class file;</source>
          <target state="translated">包含&lt;a href=&quot;yii&quot;&gt;Yii&lt;/a&gt;类文件；</target>
        </trans-unit>
        <trans-unit id="5c53f1d11bfa21025286f5120779565f88c97f72" translate="yes" xml:space="preserve">
          <source>Include the directory in the &lt;code&gt;$fpath&lt;/code&gt;, e.g. by adding it to &lt;code&gt;~/.zshrc&lt;/code&gt;</source>
          <target state="translated">将目录包括在 &lt;code&gt;$fpath&lt;/code&gt; ，例如通过将其添加到 &lt;code&gt;~/.zshrc&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c0a29bb504a876c51cd7ad9a22fe9190f2ae7e9" translate="yes" xml:space="preserve">
          <source>Include the extension manifest file &lt;code&gt;vendor/yiisoft/extensions.php&lt;/code&gt;.</source>
          <target state="translated">包括扩展清单文件 &lt;code&gt;vendor/yiisoft/extensions.php&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c37d3c1a0bacc352c9589efc03a4fab916f3683f" translate="yes" xml:space="preserve">
          <source>Includes client assets of &lt;a href=&quot;https://github.com/RobinHerbots/Inputmask&quot;&gt;jQuery input mask plugin&lt;/a&gt;.</source>
          <target state="translated">包括&lt;a href=&quot;https://github.com/RobinHerbots/Inputmask&quot;&gt;jQuery输入蒙版插件的&lt;/a&gt;客户端资产。</target>
        </trans-unit>
        <trans-unit id="15c22d169f90cb83d8893cd476573b43732b45a8" translate="yes" xml:space="preserve">
          <source>Includes the migration file for a given migration class name.</source>
          <target state="translated">包括给定迁移类名称的迁移文件。</target>
        </trans-unit>
        <trans-unit id="fef77fd0793d3c2cf3b857ff00cad601ec7a2695" translate="yes" xml:space="preserve">
          <source>Index metadata. &lt;code&gt;null&lt;/code&gt; - if the named index does not exist.</source>
          <target state="translated">索引元数据。 &lt;code&gt;null&lt;/code&gt; -如果命名索引不存在。</target>
        </trans-unit>
        <trans-unit id="27bf949a8c6bbf392cd9bbfb0a23ac87298c9ae6" translate="yes" xml:space="preserve">
          <source>Index name</source>
          <target state="translated">索引名称</target>
        </trans-unit>
        <trans-unit id="e6bada87abc8ee10df4583463137a3f0b7f63d38" translate="yes" xml:space="preserve">
          <source>Index name or pattern, use &lt;code&gt;*&lt;/code&gt; in order to drop all indexes.</source>
          <target state="translated">索引名称或模式，使用 &lt;code&gt;*&lt;/code&gt; 可以删除所有索引。</target>
        </trans-unit>
        <trans-unit id="6e92b7a2785e378d347a5dbba4568f754e0b3cfb" translate="yes" xml:space="preserve">
          <source>Index name.</source>
          <target state="translated">索引名称:</target>
        </trans-unit>
        <trans-unit id="82abe6b26544e9ff8eed1b4c2cd35852eb64f8ee" translate="yes" xml:space="preserve">
          <source>Index name. The index name may contain schema name if any. Do not quote the index name.</source>
          <target state="translated">索引名称。索引名称可以包含模式名称(如果有)。不要引用索引名。</target>
        </trans-unit>
        <trans-unit id="bac2a9da8998703d93adb1d10003f51ef53e0fae" translate="yes" xml:space="preserve">
          <source>Index schema information. Null if the named index does not exist.</source>
          <target state="translated">索引模式信息。如果命名的索引不存在,则为空。</target>
        </trans-unit>
        <trans-unit id="b94962abe613b3ebfaaf8264a4cf8a31f00b0c22" translate="yes" xml:space="preserve">
          <source>Index that the document belogs to. Can be set to null if the command has a default index (&lt;a href=&quot;yii-elasticsearch-bulkcommand#%24index-detail&quot;&gt;yii\elasticsearch\BulkCommand::$index&lt;/a&gt;) assigned.</source>
          <target state="translated">文件记录到的索引。如果命令分配了默认索引（&lt;a href=&quot;yii-elasticsearch-bulkcommand#%24index-detail&quot;&gt;yii \ elasticsearch \ BulkCommand :: $ index&lt;/a&gt;），则可以设置为null 。</target>
        </trans-unit>
        <trans-unit id="f28c7134fe738b1baa2e6bc30b4ff32821809b3d" translate="yes" xml:space="preserve">
          <source>IndexAction implements the API endpoint for listing multiple models.</source>
          <target state="translated">IndexAction实现了列出多个模型的API端点。</target>
        </trans-unit>
        <trans-unit id="ae7d1fe5edff93d934063cc390217314b9e2bb0a" translate="yes" xml:space="preserve">
          <source>Indexes and/or groups the array according to a specified key.</source>
          <target state="translated">根据指定的键对数组进行索引和/或分组。</target>
        </trans-unit>
        <trans-unit id="f77617d70f83cf7b1d1896f4cfb5f9927286bc2e" translate="yes" xml:space="preserve">
          <source>Indexes specification. Each specification should be an array in format: optionName =&amp;gt; value The main options are:</source>
          <target state="translated">索引规范。每个规范应为以下格式的数组：optionName =&amp;gt; value主要选项为：</target>
        </trans-unit>
        <trans-unit id="b1f3cbbf8d37f08e3d21cd4bc0a7ffe67e04ef6b" translate="yes" xml:space="preserve">
          <source>Indexes specifications.</source>
          <target state="translated">指数规格。</target>
        </trans-unit>
        <trans-unit id="7fad0e26fd25542aa035943bb4dcf7b1bd89671d" translate="yes" xml:space="preserve">
          <source>Indexing Query Results</source>
          <target state="translated">索引查询结果</target>
        </trans-unit>
        <trans-unit id="9e3d96a1631811addaed53777a78194601c63eac" translate="yes" xml:space="preserve">
          <source>Indicates if popup window should be used instead of direct links.</source>
          <target state="translated">表示是否应该使用弹出窗口而不是直接链接。</target>
        </trans-unit>
        <trans-unit id="8fdca9d873a9836142abfa8fdd037626dd0ec980" translate="yes" xml:space="preserve">
          <source>Indicates if redirect should be performed even in case of popup window.</source>
          <target state="translated">表示是否在弹出窗口的情况下也要进行重定向。</target>
        </trans-unit>
        <trans-unit id="014c9e6f0fea8c9251e7ce51fd892a3b1ebde501" translate="yes" xml:space="preserve">
          <source>Indicates if widget content, should be rendered automatically.</source>
          <target state="translated">表示小组件的内容,是否应该自动呈现。</target>
        </trans-unit>
        <trans-unit id="c6eebbca3ecf02356cd6356837f1a3edde7acdbb" translate="yes" xml:space="preserve">
          <source>Indicates if widget content, should be rendered automatically. Note: this value automatically set to 'false' at the first call of &lt;a href=&quot;yii-authclient-widgets-authchoice#createClientUrl()-detail&quot;&gt;createClientUrl()&lt;/a&gt;</source>
          <target state="translated">指示是否应自动呈现窗口小部件内容。注意：在首次调用&lt;a href=&quot;yii-authclient-widgets-authchoice#createClientUrl()-detail&quot;&gt;createClientUrl（）时，&lt;/a&gt;此值会自动设置为&amp;ldquo; false&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="4da078df730dd61103f92529eb7beeeb860b245a" translate="yes" xml:space="preserve">
          <source>Indicates whether the table names generated should consider the &lt;code&gt;tablePrefix&lt;/code&gt; setting of the DB connection.</source>
          <target state="translated">指示生成的表名称是否应考虑数据库连接的 &lt;code&gt;tablePrefix&lt;/code&gt; 设置。</target>
        </trans-unit>
        <trans-unit id="182149604b0beba8e881df7dba223d823250da6e" translate="yes" xml:space="preserve">
          <source>Indicates whether the table names generated should consider the &lt;code&gt;tablePrefix&lt;/code&gt; setting of the DB connection. For example, if the table name is &lt;code&gt;post&lt;/code&gt; the generator wil return &lt;code&gt;{{%post}}&lt;/code&gt;.</source>
          <target state="translated">指示生成的表名称是否应考虑数据库连接的 &lt;code&gt;tablePrefix&lt;/code&gt; 设置。例如，如果表名是 &lt;code&gt;post&lt;/code&gt; ,则生成器将返回 &lt;code&gt;{{%post}}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cc43eabb9fc7f8889ee1414fb8485f7e4a474877" translate="yes" xml:space="preserve">
          <source>Inflector pluralizes and singularizes English nouns. It also contains some other useful methods.</source>
          <target state="translated">Inflector将英语名词复数化和单数化。它还包含一些其他有用的方法。</target>
        </trans-unit>
        <trans-unit id="f0ad3fca6ab05d833db8b58699b7e26836b20db6" translate="yes" xml:space="preserve">
          <source>Info attribute input search value</source>
          <target state="translated">信息属性输入搜索值</target>
        </trans-unit>
        <trans-unit id="e64e08fc9d6921155de313395207352b842d485e" translate="yes" xml:space="preserve">
          <source>Info message.</source>
          <target state="translated">信息留言。</target>
        </trans-unit>
        <trans-unit id="8e8955cb8a8c349fdc96dfe7fee4218234a6a552" translate="yes" xml:space="preserve">
          <source>Informational message level. An informational message is one that includes certain information for developers to review.</source>
          <target state="translated">信息性信息级别。信息性信息是指包括一定的信息,供开发人员审核。</target>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="67eb7c4bdb557e17a2430101a293ded796c9767a" translate="yes" xml:space="preserve">
          <source>InitDbFixture represents the initial state needed for DB-related tests.</source>
          <target state="translated">InitDbFixture表示DB相关测试所需的初始状态。</target>
        </trans-unit>
        <trans-unit id="5a3ebe3b930b896810c07c00c18665e24d06eced" translate="yes" xml:space="preserve">
          <source>Initial property values for &lt;a href=&quot;yii-widgets-fragmentcache&quot;&gt;yii\widgets\FragmentCache&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;yii-widgets-fragmentcache&quot;&gt;yii \ widgets \ FragmentCache的&lt;/a&gt;初始属性值</target>
        </trans-unit>
        <trans-unit id="ff527de3138c137e8846197e6df479c84e326d99" translate="yes" xml:space="preserve">
          <source>Initial value of the aggregation counter object.</source>
          <target state="translated">聚合计数器对象的初始值。</target>
        </trans-unit>
        <trans-unit id="7be9c79533ef1a080403e2d429e2019bb365e678" translate="yes" xml:space="preserve">
          <source>Initial values specified in &lt;a href=&quot;yii-web-request#%24csrfCookie-detail&quot;&gt;$csrfCookie&lt;/a&gt; will be applied to the generated cookie.</source>
          <target state="translated">&lt;a href=&quot;yii-web-request#%24csrfCookie-detail&quot;&gt;$ csrfCookie中&lt;/a&gt;指定的初始值将应用于生成的cookie。</target>
        </trans-unit>
        <trans-unit id="31d0bce9606c028997ba6db8124f4694480e575b" translate="yes" xml:space="preserve">
          <source>Initial values to be applied to the validator properties.</source>
          <target state="translated">要应用到验证器属性的初始值。</target>
        </trans-unit>
        <trans-unit id="725d944eb21453b9e5e699e05ed30327e4078dd8" translate="yes" xml:space="preserve">
          <source>Initialize application properties using the given application configuration.</source>
          <target state="translated">使用给定的应用程序配置初始化应用程序属性。</target>
        </trans-unit>
        <trans-unit id="81b5a3cd380686d55c9373b4efb4a8672465f50e" translate="yes" xml:space="preserve">
          <source>Initialize the application.</source>
          <target state="translated">初始化应用程序。</target>
        </trans-unit>
        <trans-unit id="6b0fabaec77b757d9c0aac60716f70308c134417" translate="yes" xml:space="preserve">
          <source>Initialize the fixtures</source>
          <target state="translated">初始化灯具</target>
        </trans-unit>
        <trans-unit id="74cf2ec766f57a4aea10a8bdc040b936b2d9d1e3" translate="yes" xml:space="preserve">
          <source>Initializes MySQL specific mutex component implementation.</source>
          <target state="translated">初始化MySQL特定的mutex组件实现。</target>
        </trans-unit>
        <trans-unit id="19500c74e6bf616441c781164eb6aa77a9632058" translate="yes" xml:space="preserve">
          <source>Initializes Oracle specific mutex component implementation.</source>
          <target state="translated">初始化Oracle特定mutex组件的实现。</target>
        </trans-unit>
        <trans-unit id="142836f24de27536e6e2f30ef6c1ba689666353f" translate="yes" xml:space="preserve">
          <source>Initializes PgSQL specific mutex component implementation.</source>
          <target state="translated">初始化PgSQL特定的mutex组件实现。</target>
        </trans-unit>
        <trans-unit id="bdf7e1762088769cadf6fce17e9594a394e41661" translate="yes" xml:space="preserve">
          <source>Initializes UrlManager.</source>
          <target state="translated">初始化UrlManager。</target>
        </trans-unit>
        <trans-unit id="92f182596182178dc3ada47b35e212673ad6a5d2" translate="yes" xml:space="preserve">
          <source>Initializes authenticated user attributes.</source>
          <target state="translated">初始化已认证的用户属性。</target>
        </trans-unit>
        <trans-unit id="44eeead23e09f7100e24be51b647cde1ea01278f" translate="yes" xml:space="preserve">
          <source>Initializes client options</source>
          <target state="translated">初始化客户端选项</target>
        </trans-unit>
        <trans-unit id="a4bcac598c2fb71446a83f3fddb78d24f4b86058" translate="yes" xml:space="preserve">
          <source>Initializes extensions and executes bootstrap components.</source>
          <target state="translated">初始化扩展并执行bootstrap组件。</target>
        </trans-unit>
        <trans-unit id="63418b854aa1f329fbeefa31ed5abb9a7b5a0083" translate="yes" xml:space="preserve">
          <source>Initializes generic database table based mutex implementation.</source>
          <target state="translated">初始化基于通用数据库表的mutex实现。</target>
        </trans-unit>
        <trans-unit id="10a02dd3c4321f9e65c311349a9cb2c359b009d7" translate="yes" xml:space="preserve">
          <source>Initializes information about name and type of all index in the Sphinx.</source>
          <target state="translated">初始化Sphinx中所有索引的名称和类型信息。</target>
        </trans-unit>
        <trans-unit id="2b41d5d488fe9dcb6877325d9accfa718c6f1cf3" translate="yes" xml:space="preserve">
          <source>Initializes mutex component implementation dedicated for UNIX, GNU/Linux, Mac OS X, and other UNIX-like operating systems.</source>
          <target state="translated">初始化UNIX、GNU/Linux、Mac OS X和其他类似UNIX的操作系统专用的mutex组件实现。</target>
        </trans-unit>
        <trans-unit id="7c98cd73bd563886fd1e2f81255452e02f27b389" translate="yes" xml:space="preserve">
          <source>Initializes panels.</source>
          <target state="translated">初始化面板。</target>
        </trans-unit>
        <trans-unit id="670253633ca7e20b6f0f6b5f28c9227280ccc507" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;yii-filters-accesscontrol#%24rules-detail&quot;&gt;$rules&lt;/a&gt; array by instantiating rule objects from configurations.</source>
          <target state="translated">通过从配置实例化规则对象来初始化&lt;a href=&quot;yii-filters-accesscontrol#%24rules-detail&quot;&gt;$ rules&lt;/a&gt;数组。</target>
        </trans-unit>
        <trans-unit id="df61805cefa87f9c38bfcd370e364975b0bf4586" translate="yes" xml:space="preserve">
          <source>Initializes the Cache component.</source>
          <target state="translated">初始化Cache组件。</target>
        </trans-unit>
        <trans-unit id="afd801846cdb45453ccfa7ae1d54ae5888d8076e" translate="yes" xml:space="preserve">
          <source>Initializes the DB connection component.</source>
          <target state="translated">初始化DB连接组件。</target>
        </trans-unit>
        <trans-unit id="0fccbe8193c2c2d4ed880169998161716239cbc4" translate="yes" xml:space="preserve">
          <source>Initializes the DB connection.</source>
          <target state="translated">初始化DB连接。</target>
        </trans-unit>
        <trans-unit id="ed92eeb27d8136d4280e370dc71fc9646f85b220" translate="yes" xml:space="preserve">
          <source>Initializes the DbCache component.</source>
          <target state="translated">初始化DbCache组件。</target>
        </trans-unit>
        <trans-unit id="1e64b09c712c76bf69c5a494164e3196c083dae0" translate="yes" xml:space="preserve">
          <source>Initializes the DbMessageSource component.</source>
          <target state="translated">初始化DbMessageSource组件。</target>
        </trans-unit>
        <trans-unit id="bc4f3187874b94367f57cd5f5611b9d2912e50c8" translate="yes" xml:space="preserve">
          <source>Initializes the DbSession component.</source>
          <target state="translated">初始化DbSession组件。</target>
        </trans-unit>
        <trans-unit id="b072eb061afed48d79161c46e362ef7d589978ef" translate="yes" xml:space="preserve">
          <source>Initializes the DbTarget component.</source>
          <target state="translated">初始化DbTarget组件。</target>
        </trans-unit>
        <trans-unit id="fa7ee1ba32d1b9aeeb32240c349b3814c8f3f853" translate="yes" xml:space="preserve">
          <source>Initializes the FragmentCache object.</source>
          <target state="translated">初始化FragmentCache对象。</target>
        </trans-unit>
        <trans-unit id="e26884c940e732795e4852c157b5965968ea4cc6" translate="yes" xml:space="preserve">
          <source>Initializes the MongoDbTarget component.</source>
          <target state="translated">初始化MongoDbTarget组件。</target>
        </trans-unit>
        <trans-unit id="a6442f02945b02a93f74e91f049fc346ab458c8f" translate="yes" xml:space="preserve">
          <source>Initializes the Mutex component.</source>
          <target state="translated">初始化Mutex组件。</target>
        </trans-unit>
        <trans-unit id="b5bbe27ad7df4cc69816250d797a08a8da751035" translate="yes" xml:space="preserve">
          <source>Initializes the Session component.</source>
          <target state="translated">初始化Session组件。</target>
        </trans-unit>
        <trans-unit id="f8f3f4331bea110bce3dfea352ade952ca42f5c4" translate="yes" xml:space="preserve">
          <source>Initializes the action.</source>
          <target state="translated">初始化动作。</target>
        </trans-unit>
        <trans-unit id="ce0c174ceb8af15700aff4a38c51e9f3544365eb" translate="yes" xml:space="preserve">
          <source>Initializes the application component.</source>
          <target state="translated">初始化应用组件。</target>
        </trans-unit>
        <trans-unit id="e67c3be4e756ca776750317ad4bdea87d7f0d1b7" translate="yes" xml:space="preserve">
          <source>Initializes the bundle.</source>
          <target state="translated">初始化捆绑。</target>
        </trans-unit>
        <trans-unit id="7d1c6227a025cbe089f7a7774de272c245d7c24e" translate="yes" xml:space="preserve">
          <source>Initializes the component by configuring the default message categories.</source>
          <target state="translated">通过配置默认的消息类别来初始化组件。</target>
        </trans-unit>
        <trans-unit id="e6bbd5d2931b613f33c3b48e6bdf504489c82050" translate="yes" xml:space="preserve">
          <source>Initializes the component.</source>
          <target state="translated">初始化该组件。</target>
        </trans-unit>
        <trans-unit id="1ff780a75b126503c3778b4fa72703553277d654" translate="yes" xml:space="preserve">
          <source>Initializes the default button rendering callback for single button</source>
          <target state="translated">初始化单个按钮的默认按钮渲染回调。</target>
        </trans-unit>
        <trans-unit id="b6efa85a6a2aee4c2619bcaec1d820644f6cbb7a" translate="yes" xml:space="preserve">
          <source>Initializes the default button rendering callbacks.</source>
          <target state="translated">初始化默认的按钮渲染回调。</target>
        </trans-unit>
        <trans-unit id="ded69346230122835907d0079fa1ea5d6a7a5578" translate="yes" xml:space="preserve">
          <source>Initializes the detail view.</source>
          <target state="translated">初始化详细视图。</target>
        </trans-unit>
        <trans-unit id="8d6b246f880a8ba9b5a365a42c5168734116c150" translate="yes" xml:space="preserve">
          <source>Initializes the grid view.</source>
          <target state="translated">初始化网格视图。</target>
        </trans-unit>
        <trans-unit id="76d148ef3491068666f35ec5925bc3a52a430190" translate="yes" xml:space="preserve">
          <source>Initializes the logger by registering &lt;a href=&quot;yii-log-logger#flush()-detail&quot;&gt;flush()&lt;/a&gt; as a shutdown function.</source>
          <target state="translated">通过将&lt;a href=&quot;yii-log-logger#flush()-detail&quot;&gt;flush（）&lt;/a&gt;注册为关闭函数来初始化记录器。</target>
        </trans-unit>
        <trans-unit id="22acedcdcd5e351b54488486230c46378d043e28" translate="yes" xml:space="preserve">
          <source>Initializes the migration.</source>
          <target state="translated">初始化迁移。</target>
        </trans-unit>
        <trans-unit id="a9d15a56f7e9305b63d8db596d0bc3df9076b5fc" translate="yes" xml:space="preserve">
          <source>Initializes the module.</source>
          <target state="translated">初始化模块。</target>
        </trans-unit>
        <trans-unit id="cc2058d972ac1ce9084f899484a2c772f989b0dc" translate="yes" xml:space="preserve">
          <source>Initializes the object with the given configuration &lt;code&gt;$config&lt;/code&gt;.</source>
          <target state="translated">使用给定的配置 &lt;code&gt;$config&lt;/code&gt; 初始化对象。</target>
        </trans-unit>
        <trans-unit id="2a2ebcb62e07bfa23fe63ff902381554659598f7" translate="yes" xml:space="preserve">
          <source>Initializes the object.</source>
          <target state="translated">初始化对象。</target>
        </trans-unit>
        <trans-unit id="960f35e87f34e9197eb23444c1df22c411aac44c" translate="yes" xml:space="preserve">
          <source>Initializes the pager.</source>
          <target state="translated">初始化寻呼机。</target>
        </trans-unit>
        <trans-unit id="585d5607f12a3969f864fd206d39423586de087e" translate="yes" xml:space="preserve">
          <source>Initializes the redis Cache component.</source>
          <target state="translated">初始化redis Cache组件。</target>
        </trans-unit>
        <trans-unit id="4162605a32d8a4305ce8b03449544e56cb73d0f7" translate="yes" xml:space="preserve">
          <source>Initializes the redis Mutex component.</source>
          <target state="translated">初始化redis Mutex组件。</target>
        </trans-unit>
        <trans-unit id="f096e311f53101d14d480cbbbe0e8274e91821cc" translate="yes" xml:space="preserve">
          <source>Initializes the redis Session component.</source>
          <target state="translated">初始化redis Session组件。</target>
        </trans-unit>
        <trans-unit id="300e055eaff3119ea26b221786e378f629b3f86f" translate="yes" xml:space="preserve">
          <source>Initializes the route.</source>
          <target state="translated">初始化途径。</target>
        </trans-unit>
        <trans-unit id="3822532e5e6f3a373e145076be61482b2d2bf093" translate="yes" xml:space="preserve">
          <source>Initializes the sorter.</source>
          <target state="translated">初始化分拣机。</target>
        </trans-unit>
        <trans-unit id="a36e1f98155f489853f5269d54dcaa5575ce2010" translate="yes" xml:space="preserve">
          <source>Initializes the view component.</source>
          <target state="translated">初始化视图组件。</target>
        </trans-unit>
        <trans-unit id="e769f0ac978f54f6e8d71a32d13085bdc2e240de" translate="yes" xml:space="preserve">
          <source>Initializes the view.</source>
          <target state="translated">初始化视图。</target>
        </trans-unit>
        <trans-unit id="daf999cf79369c4690f8c4173e650d121cd7901f" translate="yes" xml:space="preserve">
          <source>Initializes the widget options.</source>
          <target state="translated">初始化小组件选项。</target>
        </trans-unit>
        <trans-unit id="5ee0a73357c706f6366227bda4effb01e2119791" translate="yes" xml:space="preserve">
          <source>Initializes the widget.</source>
          <target state="translated">初始化小组件。</target>
        </trans-unit>
        <trans-unit id="d4350faccf44a9137e5b92ea075883a90d174d8c" translate="yes" xml:space="preserve">
          <source>Initializes this application component.</source>
          <target state="translated">初始化该应用组件。</target>
        </trans-unit>
        <trans-unit id="c261c57f05a0c92c8c281423671937ed888f1ed6" translate="yes" xml:space="preserve">
          <source>Initializes this component by ensuring the existence of the cache path.</source>
          <target state="translated">通过确保缓存路径的存在来初始化这个组件。</target>
        </trans-unit>
        <trans-unit id="de3bbc19e58e3ad4a69013a5f66908e913c75558" translate="yes" xml:space="preserve">
          <source>Initializes this component.</source>
          <target state="translated">初始化该组件。</target>
        </trans-unit>
        <trans-unit id="cb2999d9364098818b312b69cf21d725718ba247" translate="yes" xml:space="preserve">
          <source>Initializes this rule.</source>
          <target state="translated">初始化此规则。</target>
        </trans-unit>
        <trans-unit id="cef2cf7efb3d11b6e4f06ec176884d1144eea489" translate="yes" xml:space="preserve">
          <source>Inline Actions</source>
          <target state="translated">内联动作</target>
        </trans-unit>
        <trans-unit id="bb3336fa39fec4be365b76323158beafb5003a9c" translate="yes" xml:space="preserve">
          <source>Inline Validators</source>
          <target state="translated">内联验证器</target>
        </trans-unit>
        <trans-unit id="97d4a8593c24cd6f8730add5bc1fbcdc6670657c" translate="yes" xml:space="preserve">
          <source>Inline actions are the most commonly defined actions because they take little effort to create. However, if you plan to reuse the same action in different places, or if you want to redistribute an action, you should consider defining it as a &lt;em&gt;standalone action&lt;/em&gt;.</source>
          <target state="translated">内联动作是最常用的定义动作，因为它们几乎不需要创建任何动作。但是，如果计划在不同位置重用同一动作，或者要重新分配动作，则应考虑将其定义为&lt;em&gt;独立动作&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="642e40c88280f47676f64b5a4c250937145c873b" translate="yes" xml:space="preserve">
          <source>Inline actions refer to the actions that are defined in terms of action methods as we just described.</source>
          <target state="translated">内联动作指的是我们刚才介绍的用动作方法定义的动作。</target>
        </trans-unit>
        <trans-unit id="3bdfb11bae51f20f1ee7e1c1a1279cf43650c0f0" translate="yes" xml:space="preserve">
          <source>Inline scripts are useful for configuration, dynamically generated code and small snippets created by reusable frontend code contained in &lt;a href=&quot;guide-structure-widgets&quot;&gt;widgets&lt;/a&gt;. The &lt;a href=&quot;yii-web-view#registerJs()-detail&quot;&gt;registerJs()&lt;/a&gt; method for adding these can be used as follows:</source>
          <target state="translated">内联脚本可用于配置，动态生成的代码以及由&lt;a href=&quot;guide-structure-widgets&quot;&gt;小部件中&lt;/a&gt;包含的可重用前端代码创建的小片段。可以使用添加这些的&lt;a href=&quot;yii-web-view#registerJs()-detail&quot;&gt;registerJs（）&lt;/a&gt;方法，如下所示：</target>
        </trans-unit>
        <trans-unit id="11c3b1b7ca351ef4ccdedeeccf19ed99c9c13436" translate="yes" xml:space="preserve">
          <source>InlineAction represents an action that is defined as a controller method.</source>
          <target state="translated">InlineAction表示一个定义为控制器方法的动作。</target>
        </trans-unit>
        <trans-unit id="30c5649eded82d3e3be576f33d359cd9996ec234" translate="yes" xml:space="preserve">
          <source>InlineValidator represents a validator which is defined as a method in the object being validated.</source>
          <target state="translated">InlineValidator表示一个验证器,它被定义为被验证对象中的一个方法。</target>
        </trans-unit>
        <trans-unit id="c03caeef02108c6f2afa47e5c5e2a5d0a67d8091" translate="yes" xml:space="preserve">
          <source>Inner joins with the specified relations.</source>
          <target state="translated">与指定的关系进行内部连接。</target>
        </trans-unit>
        <trans-unit id="c3e25ca576e396f7f7ca07c51c68d0045face42a" translate="yes" xml:space="preserve">
          <source>Input CSS file name.</source>
          <target state="translated">输入CSS文件名。</target>
        </trans-unit>
        <trans-unit id="df5d437a42f572d0e0a1c5d22258b521cd8ca7e7" translate="yes" xml:space="preserve">
          <source>Input Fields</source>
          <target state="translated">输入字段</target>
        </trans-unit>
        <trans-unit id="48706e56aa935bef2083be3ad06d7a71f3624f45" translate="yes" xml:space="preserve">
          <source>Input Names and Values</source>
          <target state="translated">输入名称和数值</target>
        </trans-unit>
        <trans-unit id="0ccf7df786c4c24c937ef4429a0248a86f57588f" translate="yes" xml:space="preserve">
          <source>Input array with replaced placeholder keys</source>
          <target state="translated">输入数组与替换的占位键</target>
        </trans-unit>
        <trans-unit id="6d206308e60db70d1b0e69e6818ee2fca5a79400" translate="yes" xml:space="preserve">
          <source>Input name.</source>
          <target state="translated">输入名称:</target>
        </trans-unit>
        <trans-unit id="b040d1819589fb36c90f50dd95e60c4dda95cac0" translate="yes" xml:space="preserve">
          <source>Input parameters (name =&amp;gt; value) for the SQL execution. See &lt;a href=&quot;yii-db-command#execute()-detail&quot;&gt;yii\db\Command::execute()&lt;/a&gt; for more details.</source>
          <target state="translated">SQL执行的输入参数（名称=&amp;gt;值）。有关更多详细信息，请参见&lt;a href=&quot;yii-db-command#execute()-detail&quot;&gt;yii \ db \ Command :: execute（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2194413609b4f971534953bb2ee656c00a1de56c" translate="yes" xml:space="preserve">
          <source>Input string</source>
          <target state="translated">输入字符串</target>
        </trans-unit>
        <trans-unit id="58e49189baab320a0ada7a4875f1c82eb580df6d" translate="yes" xml:space="preserve">
          <source>Input string to check</source>
          <target state="translated">要检查的输入字符串</target>
        </trans-unit>
        <trans-unit id="0dac1a70c96f388509f66290a3d22d9300e6b8e7" translate="yes" xml:space="preserve">
          <source>Input type, can be:</source>
          <target state="translated">输入类型,可以是。</target>
        </trans-unit>
        <trans-unit id="4247619c2cd9ede80b6fff35d0c3d7200393f8dd" translate="yes" xml:space="preserve">
          <source>Input type, can be: - 'checkbox' - 'radio'</source>
          <target state="translated">输入类型,可以是-&quot;复选框&quot;-&quot;单选&quot;。</target>
        </trans-unit>
        <trans-unit id="a9e020d632ebb33c3a6a2f5cc2af3d36d9ba1540" translate="yes" xml:space="preserve">
          <source>Input value</source>
          <target state="translated">输入值</target>
        </trans-unit>
        <trans-unit id="103b73f8b8612de7f92ed544d130aab2ccb3dead" translate="yes" xml:space="preserve">
          <source>Input value.</source>
          <target state="translated">输入值:</target>
        </trans-unit>
        <trans-unit id="72f802b268034dc5346369ad70e75693d101634f" translate="yes" xml:space="preserve">
          <source>InputWidget is the base class for widgets that collect user inputs.</source>
          <target state="translated">InputWidget是收集用户输入的widget的基础类。</target>
        </trans-unit>
        <trans-unit id="fe4fa9ffdbf4577fd592df056d6c2025eab35a46" translate="yes" xml:space="preserve">
          <source>Inserted data, each row will have &quot;_id&quot; key assigned to it.</source>
          <target state="translated">插入的数据,每一行都会有&quot;_id &quot;键分配给它。</target>
        </trans-unit>
        <trans-unit id="94403dc7609bd5e3d3fd6768c751909856bc73d9" translate="yes" xml:space="preserve">
          <source>Inserted record ID, &lt;code&gt;false&lt;/code&gt; - on failure.</source>
          <target state="translated">插入的记录ID， &lt;code&gt;false&lt;/code&gt; -失败。</target>
        </trans-unit>
        <trans-unit id="9b0c3395b88187ccbfc85a2801cd30eb7752d408" translate="yes" xml:space="preserve">
          <source>Inserts a document into an index</source>
          <target state="translated">将文档插入索引中</target>
        </trans-unit>
        <trans-unit id="f6e52cde7fa2f8dbd9923be91ebe47f32f99a080" translate="yes" xml:space="preserve">
          <source>Inserts a document into the associated index using the attribute values of this record.</source>
          <target state="translated">使用该记录的属性值将文档插入到相关索引中。</target>
        </trans-unit>
        <trans-unit id="dc4b8a44766f134b9d8265d8695b4c7f5c14b762" translate="yes" xml:space="preserve">
          <source>Inserts a row into the associated Mongo collection using the attribute values of this record.</source>
          <target state="translated">使用该记录的属性值在相关的Mongo集合中插入一条记录。</target>
        </trans-unit>
        <trans-unit id="ef32118a9ba09a14cc4516fb9f82a0bac1db006b" translate="yes" xml:space="preserve">
          <source>Inserts a row into the associated Sphinx index using the attribute values of this record.</source>
          <target state="translated">使用该记录的属性值在相关的Sphinx索引中插入一条记录。</target>
        </trans-unit>
        <trans-unit id="1816c802c05f0969666a55e6312cd44681a7a500" translate="yes" xml:space="preserve">
          <source>Inserts a row into the associated database table using the attribute values of this record.</source>
          <target state="translated">使用该记录的属性值在相关的数据库表中插入一条记录。</target>
        </trans-unit>
        <trans-unit id="11edb8fc62bf3fc7f91afbfe6371f2de6fe9cba9" translate="yes" xml:space="preserve">
          <source>Inserts an ActiveRecord into DB without considering transaction.</source>
          <target state="translated">在不考虑事务的情况下将一个ActiveRecord插入到DB中。</target>
        </trans-unit>
        <trans-unit id="79d5584ce263b0b34b1786daea6d1120bc19fb32" translate="yes" xml:space="preserve">
          <source>Inserts batch of new documents into collection.</source>
          <target state="translated">将一批新的文件插入到集合中。</target>
        </trans-unit>
        <trans-unit id="9dd12eaed0a08018acf670a1d47efe93c511313e" translate="yes" xml:space="preserve">
          <source>Inserts new data into collection.</source>
          <target state="translated">将新的数据插入到收集中。</target>
        </trans-unit>
        <trans-unit id="3cfbe27efcdaa47639c005f377696ad1e4271e1c" translate="yes" xml:space="preserve">
          <source>Inserts new document into collection.</source>
          <target state="translated">将新文档插入到集合中。</target>
        </trans-unit>
        <trans-unit id="1c9f5b8e44c7191e2537f31e05e12769d0067158" translate="yes" xml:space="preserve">
          <source>Inserts several new rows into collection.</source>
          <target state="translated">在集合中插入若干新行。</target>
        </trans-unit>
        <trans-unit id="bf2eee84e640e4fd3496ccb0d9d8b0c2b5228815" translate="yes" xml:space="preserve">
          <source>Inserts the record into the database using the attribute values of this record.</source>
          <target state="translated">使用该记录的属性值将记录插入到数据库中。</target>
        </trans-unit>
        <trans-unit id="95b5771df0479ee4cf97eb31d2fb3d39b695097c" translate="yes" xml:space="preserve">
          <source>Inside your controller there are a few ways to implement authorization. If you want granular permissions that separate access to adding and deleting, then you need to check access for each action. You can either use the above condition in each action method, or use &lt;a href=&quot;yii-filters-accesscontrol&quot;&gt;yii\filters\AccessControl&lt;/a&gt;:</source>
          <target state="translated">在控制器内部，有几种实现授权的方法。如果要使用细化权限将访问权限添加和删除分开，则需要检查每个操作的访问权限。您可以在每种操作方法中使用上述条件，也可以使用&lt;a href=&quot;yii-filters-accesscontrol&quot;&gt;yii \ filters \ AccessControl&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="b53fd13b9fec1a5e462e7bd89731997206b86335" translate="yes" xml:space="preserve">
          <source>Installing Composer</source>
          <target state="translated">安装Composer</target>
        </trans-unit>
        <trans-unit id="94192738c8065f994879b8b91734a6608f420e1f" translate="yes" xml:space="preserve">
          <source>Installing Extensions Manually</source>
          <target state="translated">手动安装扩展程序</target>
        </trans-unit>
        <trans-unit id="46b981e97a4ea8c2ec0403fa3c275b1fe8ccb413" translate="yes" xml:space="preserve">
          <source>Installing Yii</source>
          <target state="translated">安装Yii</target>
        </trans-unit>
        <trans-unit id="3829a4b0a280f4637e0d3bd035e95fa412ce25a2" translate="yes" xml:space="preserve">
          <source>Installing Yii from an archive file involves three steps:</source>
          <target state="translated">从存档文件安装Yii包括三个步骤。</target>
        </trans-unit>
        <trans-unit id="c1e820aecee17ad3e4d768df0da74050fd15d27b" translate="yes" xml:space="preserve">
          <source>Installing from an Archive File</source>
          <target state="translated">从存档文件安装</target>
        </trans-unit>
        <trans-unit id="85bf6a7d0b6bacb168397719f473b9ef92d613e3" translate="yes" xml:space="preserve">
          <source>Installing via Composer</source>
          <target state="translated">通过Composer安装</target>
        </trans-unit>
        <trans-unit id="190de99eb315315ab7a29177474e35d219cd57d3" translate="yes" xml:space="preserve">
          <source>Instance is mainly used in two places:</source>
          <target state="translated">Instance主要用在两个地方。</target>
        </trans-unit>
        <trans-unit id="b922dec9a4c45821cc2f06c79cd2b2ecfd56b685" translate="yes" xml:space="preserve">
          <source>Instance represents a reference to a named object in a dependency injection (DI) container or a service locator.</source>
          <target state="translated">Instance表示对依赖注入(DI)容器或服务定位器中命名对象的引用。</target>
        </trans-unit>
        <trans-unit id="f091fdab5a1a6500405887cdd5448baf822164da" translate="yes" xml:space="preserve">
          <source>Instantiates and configures the Smarty object.</source>
          <target state="translated">实例化并配置Smarty对象。</target>
        </trans-unit>
        <trans-unit id="54271f22dc7286475ff1ed18402d5835dc383898" translate="yes" xml:space="preserve">
          <source>Instead of actually applying or reverting migrations, sometimes you may simply want to mark that your database has been upgraded to a particular migration. This often happens when you manually change the database to a particular state and you do not want the migration(s) for that change to be re-applied later. You can achieve this goal with the following command:</source>
          <target state="translated">有时,您可能只是想标记您的数据库已经升级到特定的迁移,而不是实际应用或恢复迁移,这通常发生在您手动更改数据库到特定状态,并且您不希望以后重新应用该更改的迁移。这种情况通常发生在您手动将数据库变更为特定状态,并且您不希望以后重新应用该变更的迁移时。你可以通过以下命令来实现这个目标。</target>
        </trans-unit>
        <trans-unit id="87198a7795a15848a302a47e84e5f18c288b43df" translate="yes" xml:space="preserve">
          <source>Instead of directly writing CSS and/or JavaScript code, developers often write them in some extended syntax and use special tools to convert it into CSS/JavaScript. For example, for CSS code you may use &lt;a href=&quot;http://lesscss.org/&quot;&gt;LESS&lt;/a&gt; or &lt;a href=&quot;http://sass-lang.com/&quot;&gt;SCSS&lt;/a&gt;; and for JavaScript you may use &lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;.</source>
          <target state="translated">开发人员通常不使用某些扩展语法来编写它们，而是直接使用CSS和/或JavaScript代码来编写它们，并使用特殊工具将其转换为CSS / JavaScript。例如，对于CSS代码，您可以使用&lt;a href=&quot;http://lesscss.org/&quot;&gt;LESS&lt;/a&gt;或&lt;a href=&quot;http://sass-lang.com/&quot;&gt;SCSS&lt;/a&gt;；对于JavaScript，您可以使用&lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="322101f752ee2ecbe30f6059d4205200d85636f2" translate="yes" xml:space="preserve">
          <source>Instead of directly writing CSS and/or JavaScript code, developers often write them in some extended syntax and use special tools to convert it into CSS/JavaScript. For example, for CSS code you may use &lt;a href=&quot;http://lesscss.org/&quot;&gt;LESS&lt;/a&gt; or &lt;a href=&quot;http://sass-lang.com/&quot;&gt;SCSS&lt;/a&gt;; and for JavaScript you may use &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;.</source>
          <target state="translated">开发人员通常不使用某些扩展的语法来编写它们，而是直接使用CSS和/或JavaScript代码，并使用特殊的工具将其转换为CSS / JavaScript。例如，对于CSS代码，您可以使用&lt;a href=&quot;http://lesscss.org/&quot;&gt;LESS&lt;/a&gt;或&lt;a href=&quot;http://sass-lang.com/&quot;&gt;SCSS&lt;/a&gt;；对于JavaScript，您可以使用&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="61846135400171c7e17ff0131d792d10f4e7ead8" translate="yes" xml:space="preserve">
          <source>Instead of entering the same option values every time you run the migration command, you may configure it once for all in the application configuration like shown below:</source>
          <target state="translated">与其每次运行迁移命令时输入相同的选项值,不如在应用程序配置中一次性配置,如下图所示。</target>
        </trans-unit>
        <trans-unit id="ba2b13e5d275bc7464ec9c952a2e787efa562747" translate="yes" xml:space="preserve">
          <source>Instead of publishing assets by file copying, you may consider using symbolic links, if your OS and Web server allow. This feature can be enabled by setting &lt;a href=&quot;yii-web-assetmanager#%24linkAssets-detail&quot;&gt;linkAssets&lt;/a&gt; to be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">如果操作系统和Web服务器允许，则可以考虑使用符号链接来代替通过文件复制发布资产。可以通过将&lt;a href=&quot;yii-web-assetmanager#%24linkAssets-detail&quot;&gt;linkAssets&lt;/a&gt;设置为 &lt;code&gt;true&lt;/code&gt; 来启用此功能。</target>
        </trans-unit>
        <trans-unit id="3a474af5236c02af7167b64236c27df9232b3c5c" translate="yes" xml:space="preserve">
          <source>Instead of supplying correct username attacker could give your applications something like &lt;code&gt;'; DROP TABLE user; --&lt;/code&gt;. Resulting SQL will be the following:</source>
          <target state="translated">除了提供正确的用户名外，攻击者还可能会给您的应用程序类似 &lt;code&gt;'; DROP TABLE user; --&lt;/code&gt; 。产生的SQL将如下所示：</target>
        </trans-unit>
        <trans-unit id="a67d8d7c704681e689d46a9abdcea343d2bd9b06" translate="yes" xml:space="preserve">
          <source>Instead of translating individual text messages, sometimes you may want to translate a whole view script. To achieve this goal, simply translate the view and save it under a subdirectory whose name is the same as target language. For example, if you want to translate the view script &lt;code&gt;views/site/index.php&lt;/code&gt; and the target language is &lt;code&gt;ru-RU&lt;/code&gt;, you may translate the view and save it as the file &lt;code&gt;views/site/ru-RU/index.php&lt;/code&gt;. Now whenever you call &lt;a href=&quot;yii-base-view#renderFile()-detail&quot;&gt;yii\base\View::renderFile()&lt;/a&gt; or any method that invoke this method (e.g. &lt;a href=&quot;yii-base-controller#render()-detail&quot;&gt;yii\base\Controller::render()&lt;/a&gt;) to render the view &lt;code&gt;views/site/index.php&lt;/code&gt;, it will end up rendering the translated view &lt;code&gt;views/site/ru-RU/index.php&lt;/code&gt;, instead.</source>
          <target state="translated">有时您可能需要翻译整个视图脚本，而不是翻译单个文本消息。要实现此目标，只需转换视图并将其保存在名称与目标语言相同的子目录下。例如，如果您要翻译视图脚本 &lt;code&gt;views/site/index.php&lt;/code&gt; 并且目标语言是 &lt;code&gt;ru-RU&lt;/code&gt; ，则可以翻译视图并将其另存为 &lt;code&gt;views/site/ru-RU/index.php&lt;/code&gt; 文件。现在，每当您调用&lt;a href=&quot;yii-base-view#renderFile()-detail&quot;&gt;yii \ base \ View :: renderFile（）&lt;/a&gt;或调用此方法的任何方法（例如&lt;a href=&quot;yii-base-controller#render()-detail&quot;&gt;yii \ base \ Controller :: render（）&lt;/a&gt;）来呈现视图 &lt;code&gt;views/site/index.php&lt;/code&gt; 时，它都会结束呈现翻译后的视图 &lt;code&gt;views/site/ru-RU/index.php&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40c2096e78beb32cbe63471aaba3fc0d8e0ea23e" translate="yes" xml:space="preserve">
          <source>Instead of using &lt;code&gt;fileMap&lt;/code&gt; you can simply use the convention of the category mapping to the same named file. Now you can use &lt;code&gt;Menu::t('messages', 'new messages {messages}', ['{messages}' =&amp;gt; 10])&lt;/code&gt; directly.</source>
          <target state="translated">除了使用 &lt;code&gt;fileMap&lt;/code&gt; 之外,您还可以简单地使用类别映射的约定到相同的命名文件。现在，您可以直接使用 &lt;code&gt;Menu::t('messages', 'new messages {messages}', ['{messages}' =&amp;gt; 10])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d79346606bd16622cb5ce534f3441a8504da23a" translate="yes" xml:space="preserve">
          <source>Interface for classes that parse the raw request body into a parameters array.</source>
          <target state="translated">用于将原始请求体解析为参数数组的类的接口。</target>
        </trans-unit>
        <trans-unit id="2e64df73956dc9f366b6debf17bcc754875788f2" translate="yes" xml:space="preserve">
          <source>Interface yii\authclient\ClientInterface</source>
          <target state="translated">接口yii/authclient/Client接口。</target>
        </trans-unit>
        <trans-unit id="47e6fa02edc4ef53d6701680e0509ea86bf1e4a1" translate="yes" xml:space="preserve">
          <source>Interface yii\authclient\StateStorageInterface</source>
          <target state="translated">接口yii/authclient/StateStorageInterface。</target>
        </trans-unit>
        <trans-unit id="a0c2a283035c8447d452d140d608b3ea34a9ae44" translate="yes" xml:space="preserve">
          <source>Interface yii\base\Arrayable</source>
          <target state="translated">接口yii/base/Arrayable</target>
        </trans-unit>
        <trans-unit id="f9348fa8fea4b947559c8276e1c19882f6bf870c" translate="yes" xml:space="preserve">
          <source>Interface yii\base\BootstrapInterface</source>
          <target state="translated">接口 yiibase/BootstrapInterface</target>
        </trans-unit>
        <trans-unit id="f1a835b623f61839c543c4c354fb2437bbec6885" translate="yes" xml:space="preserve">
          <source>Interface yii\base\Configurable</source>
          <target state="translated">介面 yii/base/Configurable</target>
        </trans-unit>
        <trans-unit id="8145b87ccf48dd0a4d69b85f7037d177cf61e921" translate="yes" xml:space="preserve">
          <source>Interface yii\base\ViewContextInterface</source>
          <target state="translated">接口 yii/base/ViewContextInterface</target>
        </trans-unit>
        <trans-unit id="434e73ec1f3c8f176b060bb141e7b710ecc68746" translate="yes" xml:space="preserve">
          <source>Interface yii\caching\CacheInterface</source>
          <target state="translated">接口 yii/caching/CacheInterface</target>
        </trans-unit>
        <trans-unit id="96c6034e8e14d867e3fb530e5e9850e815420169" translate="yes" xml:space="preserve">
          <source>Interface yii\data\DataProviderInterface</source>
          <target state="translated">接口 yiidata/DataProviderInterface</target>
        </trans-unit>
        <trans-unit id="5252f5bd1cd9fb41d7b736dcbebacb24ecb235be" translate="yes" xml:space="preserve">
          <source>Interface yii\db\ActiveQueryInterface</source>
          <target state="translated">yiidb/ActiveQueryInterface</target>
        </trans-unit>
        <trans-unit id="613b51b10a0300d57ef23980ecb0418dc08b03ca" translate="yes" xml:space="preserve">
          <source>Interface yii\db\ActiveRecordInterface</source>
          <target state="translated">接口 yii/db/ActiveRecordInterface</target>
        </trans-unit>
        <trans-unit id="6f6bf76a7f1e077d267dad182984d3cd91ec202a" translate="yes" xml:space="preserve">
          <source>Interface yii\db\MigrationInterface</source>
          <target state="translated">接口 yii/db/移民接口</target>
        </trans-unit>
        <trans-unit id="d44f129e06b1fcff2c69051e092e1fe9023efe16" translate="yes" xml:space="preserve">
          <source>Interface yii\db\QueryInterface</source>
          <target state="translated">yiidb/QueryInterface</target>
        </trans-unit>
        <trans-unit id="f5ed6426bfd34fc7569556b3cb9ae86477027907" translate="yes" xml:space="preserve">
          <source>Interface yii\debug\components\search\matchers\MatcherInterface</source>
          <target state="translated">Interface yii/debug/components/search/matchers/MatcherInterface</target>
        </trans-unit>
        <trans-unit id="a5b048f87c4ba8ec0c9eae493c7c7ce2f9d1151d" translate="yes" xml:space="preserve">
          <source>Interface yii\debug\models\search\UserSearchInterface</source>
          <target state="translated">Interface yii/debug/models/search/UserSearchInterface</target>
        </trans-unit>
        <trans-unit id="fa6aeb3fc2d12c482beb79bc7a25c199c1c8c1ef" translate="yes" xml:space="preserve">
          <source>Interface yii\filters\RateLimitInterface</source>
          <target state="translated">Interface yii/filters/RateLimitInterface</target>
        </trans-unit>
        <trans-unit id="70b21e72dcc7a7bc099e45ff68390ad2e6efd5b2" translate="yes" xml:space="preserve">
          <source>Interface yii\filters\auth\AuthInterface</source>
          <target state="translated">接口 yiifilters/auth/AuthInterface</target>
        </trans-unit>
        <trans-unit id="01a4c481c64d75df7379e9b57e9ecf30cc790f7e" translate="yes" xml:space="preserve">
          <source>Interface yii\httpclient\FormatterInterface</source>
          <target state="translated">接口yii/httpclient/Formatter接口</target>
        </trans-unit>
        <trans-unit id="6e20152ef5f704bfb0398d3c2dcdf9e690424edb" translate="yes" xml:space="preserve">
          <source>Interface yii\httpclient\ParserInterface</source>
          <target state="translated">接口 yii/httpclient/ParserInterface</target>
        </trans-unit>
        <trans-unit id="0784064d46f0b15165ba8cf710a9a6f56ac68f2b" translate="yes" xml:space="preserve">
          <source>Interface yii\mail\MailerInterface</source>
          <target state="translated">接口yii/mail/MailerInterface</target>
        </trans-unit>
        <trans-unit id="c96d3b021ab4844b56494f4f59b5b3fb9c0e0527" translate="yes" xml:space="preserve">
          <source>Interface yii\mail\MessageInterface</source>
          <target state="translated">接口 yii/mail/MessageInterface</target>
        </trans-unit>
        <trans-unit id="366f28ebb01ee88bdf4745ac927f364eec5b8714" translate="yes" xml:space="preserve">
          <source>Interface yii\rbac\CheckAccessInterface</source>
          <target state="translated">接口 yii/rbac/CheckAccessInterface</target>
        </trans-unit>
        <trans-unit id="80b3aa9add198313bdb04eebcdf27573d2b50db1" translate="yes" xml:space="preserve">
          <source>Interface yii\rbac\ManagerInterface</source>
          <target state="translated">Interface yii\rbac\ManagerInterface</target>
        </trans-unit>
        <trans-unit id="dd9c12990586c7d349300b85c5abf58d22bdddaf" translate="yes" xml:space="preserve">
          <source>Interface yii\web\AssetConverterInterface</source>
          <target state="translated">接口yii/web/AssetConverter接口</target>
        </trans-unit>
        <trans-unit id="17b9167faecd28e1fb2a0bbcb2a644b43c6899d8" translate="yes" xml:space="preserve">
          <source>Interface yii\web\IdentityInterface</source>
          <target state="translated">接口 yii/web/IdentityInterface</target>
        </trans-unit>
        <trans-unit id="90ae37c7b4ff7c57786e77c63323c9bdb1ebc8c9" translate="yes" xml:space="preserve">
          <source>Interface yii\web\Linkable</source>
          <target state="translated">Interface yii\web\Linkable</target>
        </trans-unit>
        <trans-unit id="251266ee55efea4f724611aa72115696d8ed7612" translate="yes" xml:space="preserve">
          <source>Interface yii\web\RequestParserInterface</source>
          <target state="translated">接口yii/web/RequestParser接口</target>
        </trans-unit>
        <trans-unit id="1ae71e68adf3eb105abd5c8a9a4a317266872bab" translate="yes" xml:space="preserve">
          <source>Interface yii\web\ResponseFormatterInterface</source>
          <target state="translated">接口yii/web/ResponseFormatter接口。</target>
        </trans-unit>
        <trans-unit id="45fbaa06ae92011d63ead7bc9e0b32a97f2e0b6a" translate="yes" xml:space="preserve">
          <source>Interface yii\web\UrlRuleInterface</source>
          <target state="translated">接口 yii/web/UrlRuleInterface</target>
        </trans-unit>
        <trans-unit id="c3a5ace31cf0a4fd6a24f272d8420df6f5f549e5" translate="yes" xml:space="preserve">
          <source>Internal HTTP client.</source>
          <target state="translated">内部HTTP客户端。</target>
        </trans-unit>
        <trans-unit id="3b755f7b857b999860755840e5f0964f6b120c4d" translate="yes" xml:space="preserve">
          <source>Internationalization</source>
          <target state="translated">Internationalization</target>
        </trans-unit>
        <trans-unit id="55678c6233b4e8256403a6d87de8bda0e77808ff" translate="yes" xml:space="preserve">
          <source>Internationalization (I18N) refers to the process of designing a software application so that it can be adapted to various languages and regions without engineering changes. For Web applications, this is of particular importance because the potential users may be worldwide. Yii offers a full spectrum of I18N features that support message translation, view translation, date and number formatting.</source>
          <target state="translated">国际化(I18N)指的是设计软件应用程序的过程,以便在不改变工程设计的情况下使其适应各种语言和地区。对于网络应用来说,这一点尤为重要,因为潜在的用户可能遍布全球。Yii提供了全方位的I18N功能,支持信息翻译,视图翻译,日期和数字格式化。</target>
        </trans-unit>
        <trans-unit id="ec41529ec988c31d48e2791253f7675f0f07663a" translate="yes" xml:space="preserve">
          <source>Internationalization and Localization</source>
          <target state="translated">国际化和本土化</target>
        </trans-unit>
        <trans-unit id="3b345225b8997a0b00986b3ccff1b1f8b9bab1b5" translate="yes" xml:space="preserve">
          <source>InvalidCallException represents an exception caused by calling a method in a wrong way.</source>
          <target state="translated">InvalidCallException表示以错误的方式调用一个方法所引起的异常。</target>
        </trans-unit>
        <trans-unit id="212caccaad772fbea21747ed08a5e69221b90f8d" translate="yes" xml:space="preserve">
          <source>InvalidConfigException represents an exception caused by incorrect object configuration.</source>
          <target state="translated">InvalidConfigException表示由不正确的对象配置引起的异常。</target>
        </trans-unit>
        <trans-unit id="dd51af202c401c05f263fec1cf8d0ab7f4a2f1af" translate="yes" xml:space="preserve">
          <source>InvalidParamException represents an exception caused by invalid parameters passed to a method.</source>
          <target state="translated">InvalidParamException表示由传递给方法的无效参数引起的异常。</target>
        </trans-unit>
        <trans-unit id="0832988a1cf88136c2c529b068a1b86e9ca606f0" translate="yes" xml:space="preserve">
          <source>InvalidRouteException represents an exception caused by an invalid route.</source>
          <target state="translated">InvalidRouteException表示由无效路由引起的异常。</target>
        </trans-unit>
        <trans-unit id="5410323db3762a7d4ca4b3ee268a8421b445a052" translate="yes" xml:space="preserve">
          <source>InvalidValueException represents an exception caused by a function returning a value of unexpected type.</source>
          <target state="translated">InvalidValueException表示一个函数返回一个意外类型的值所引起的异常。</target>
        </trans-unit>
        <trans-unit id="ed078df4d003d0b3cd855001e0db2c1f5865f3fc" translate="yes" xml:space="preserve">
          <source>Invalidates RBAC related cache</source>
          <target state="translated">使RBAC相关缓存无效</target>
        </trans-unit>
        <trans-unit id="4137efe1ea3617156377ecbf8f099c49915a6a78" translate="yes" xml:space="preserve">
          <source>Invalidates all of the cached data items that are associated with any of the specified &lt;a href=&quot;yii-caching-tagdependency#%24tags-detail&quot;&gt;$tags&lt;/a&gt;.</source>
          <target state="translated">使与任何指定的&lt;a href=&quot;yii-caching-tagdependency#%24tags-detail&quot;&gt;$ tags&lt;/a&gt;关联的所有缓存数据项无效。</target>
        </trans-unit>
        <trans-unit id="40eae926bb84850c7e2e401ca1aba8fefc88f58f" translate="yes" xml:space="preserve">
          <source>Invalidates precompiled script cache (such as OPCache or APC) for the given file.</source>
          <target state="translated">使给定文件的预编译脚本缓存无效(如OPCache或APC)。</target>
        </trans-unit>
        <trans-unit id="72a6aa2eb2ce4c79f3d15f1fe0bcf96592dbc4e2" translate="yes" xml:space="preserve">
          <source>Inverse Relations</source>
          <target state="translated">逆向关系</target>
        </trans-unit>
        <trans-unit id="5237a71ae84eb0a88d8b429891cd78b9a5d46089" translate="yes" xml:space="preserve">
          <source>Inverts an SQL expressions with &lt;code&gt;NOT&lt;/code&gt; operator.</source>
          <target state="translated">使用 &lt;code&gt;NOT&lt;/code&gt; 运算符反转SQL表达式。</target>
        </trans-unit>
        <trans-unit id="81595013b8a47ec2d8e093b03d5f7bf04cbcd2cf" translate="yes" xml:space="preserve">
          <source>Invoke a callback with resolving dependencies in parameters.</source>
          <target state="translated">调用参数中解析依赖关系的回调。</target>
        </trans-unit>
        <trans-unit id="91dca1b632934189d9d6c880aa7bc4214c9a6563" translate="yes" xml:space="preserve">
          <source>Ip attribute input search value</source>
          <target state="translated">Ip属性输入搜索值</target>
        </trans-unit>
        <trans-unit id="302ef212e27e87db676e356a7b80c0951cfde119" translate="yes" xml:space="preserve">
          <source>Is the source data to extract a snippet from. It could be either a single string or array of strings.</source>
          <target state="translated">是要提取一个片段的源数据。它可以是单个字符串或字符串数组。</target>
        </trans-unit>
        <trans-unit id="eaa6ecd01685548632bbee726641854e5a1ab02d" translate="yes" xml:space="preserve">
          <source>Is token expired.</source>
          <target state="translated">令牌是否过期。</target>
        </trans-unit>
        <trans-unit id="e4b33cfebdea4f3a0d4c2cd23cb8399beaaa2964" translate="yes" xml:space="preserve">
          <source>Is token valid.</source>
          <target state="translated">令牌是否有效。</target>
        </trans-unit>
        <trans-unit id="d35d4477210affed8cfe05ccd3595f4f940e7ea2" translate="yes" xml:space="preserve">
          <source>Issues no error when an insufficient number of arguments have been provided. Instead, the placeholders will not be substituted.</source>
          <target state="translated">当提供的参数数量不足时,不会出错。相反,占位符将不会被替换。</target>
        </trans-unit>
        <trans-unit id="90fafd1df93c5da0d163104f07e23e90c26a073f" translate="yes" xml:space="preserve">
          <source>It accepts named arguments and mixed numeric and named arguments.</source>
          <target state="translated">它接受命名参数和混合数字和命名参数。</target>
        </trans-unit>
        <trans-unit id="2f267867645da8df922bdc8b4c4f126a00b71b3b" translate="yes" xml:space="preserve">
          <source>It adds an additional WHERE condition for the given field and determines the comparison operator based on the first few characters of the given value. The condition is added in the same way as in &lt;a href=&quot;yii-db-querytrait#andFilterWhere()-detail&quot;&gt;andFilterWhere()&lt;/a&gt; so &lt;a href=&quot;yii-db-querytrait#isEmpty()-detail&quot;&gt;empty values&lt;/a&gt; are ignored. The new condition and the existing one will be joined using the &lt;code&gt;AND&lt;/code&gt; operator.</source>
          <target state="translated">它为给定字段添加了额外的WHERE条件，并根据给定值的前几个字符确定比较运算符。该条件的添加方式与&lt;a href=&quot;yii-db-querytrait#andFilterWhere()-detail&quot;&gt;andFilterWhere（）&lt;/a&gt;中的添加方式相同，因此将忽略&lt;a href=&quot;yii-db-querytrait#isEmpty()-detail&quot;&gt;空值&lt;/a&gt;。新条件和现有条件将使用 &lt;code&gt;AND&lt;/code&gt; 运算符合并。</target>
        </trans-unit>
        <trans-unit id="c43a145728fee1444ace624821b3d4b822029b6f" translate="yes" xml:space="preserve">
          <source>It allows to define allowed HTTP request methods for each action and will throw an HTTP 405 error when the method is not allowed.</source>
          <target state="translated">它允许为每个动作定义允许的HTTP请求方法,当方法不允许时,将抛出HTTP 405错误。</target>
        </trans-unit>
        <trans-unit id="90f6b20cb43792a3f75521480aee97ff781b7cb2" translate="yes" xml:space="preserve">
          <source>It allows to fetch not only rows and total rows count, but also a meta information and facet results.</source>
          <target state="translated">它不仅可以获取行数和总行数,还可以获取元信息和面结果。</target>
        </trans-unit>
        <trans-unit id="32d22bee08011b2ca7a95df3f084d49b8939aa57" translate="yes" xml:space="preserve">
          <source>It allows to fetch not only rows and total rows count, but full query results including aggregations and so on.</source>
          <target state="translated">它不仅可以获取行数和总行数,还可以获取完整的查询结果,包括汇总等。</target>
        </trans-unit>
        <trans-unit id="1199a1616d7b035e2dae63f9388ce454979590ea" translate="yes" xml:space="preserve">
          <source>It also handles objects by using the PHP functions serialize() and unserialize().</source>
          <target state="translated">它还通过使用PHP函数serialize()和unserialize()来处理对象。</target>
        </trans-unit>
        <trans-unit id="7a9217699b2832f178701bede490df16cdc08538" translate="yes" xml:space="preserve">
          <source>It also may change attribute's value if normalization of IPv6 expansion is enabled.</source>
          <target state="translated">如果启用IPv6扩展的规范化,它也可能改变属性的值。</target>
        </trans-unit>
        <trans-unit id="6a8c9f29b7655a6022e9fe1ec05b097999e21a6c" translate="yes" xml:space="preserve">
          <source>It also supports &lt;a href=&quot;http://redis.io/commands/auth&quot;&gt;the AUTH command&lt;/a&gt; of redis. When the server needs authentication, you can set the &lt;a href=&quot;yii-redis-connection#%24password-detail&quot;&gt;$password&lt;/a&gt; property to authenticate with the server after connect.</source>
          <target state="translated">它还支持redis &lt;a href=&quot;http://redis.io/commands/auth&quot;&gt;的AUTH命令&lt;/a&gt;。当服务器需要身份验证时，可以将&lt;a href=&quot;yii-redis-connection#%24password-detail&quot;&gt;$ password&lt;/a&gt;属性设置为在连接后通过服务器进行身份验证。</target>
        </trans-unit>
        <trans-unit id="d065b2a737f424b6bb2a086d524e74ef12a8d02a" translate="yes" xml:space="preserve">
          <source>It can also be a custom format as specified in the &lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICU manual&lt;/a&gt;.</source>
          <target state="translated">它也可以是&lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICU手册中&lt;/a&gt;指定的自定义格式。</target>
        </trans-unit>
        <trans-unit id="454aa12e82d2bbc8154a8e17e87458a55b943ef0" translate="yes" xml:space="preserve">
          <source>It can also be a custom format as specified in the &lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICU manual&lt;/a&gt;. Alternatively this can be a string prefixed with &lt;code&gt;php:&lt;/code&gt; representing a format that can be recognized by the PHP &lt;a href=&quot;http://php.net/manual/de/function.date.php&quot;&gt;date()&lt;/a&gt;-function.</source>
          <target state="translated">它也可以是&lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICU手册中&lt;/a&gt;指定的自定义格式。另外，它可以是一个前缀为 &lt;code&gt;php:&lt;/code&gt; 的字符串：表示可以由PHP &lt;a href=&quot;http://php.net/manual/de/function.date.php&quot;&gt;date（）&lt;/a&gt;函数识别的格式。</target>
        </trans-unit>
        <trans-unit id="5133633d36549fbebf4958e0a82525110ad9f120" translate="yes" xml:space="preserve">
          <source>It can also be a custom format as specified in the &lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICU manual&lt;/a&gt;. Alternatively this can be a string prefixed with &lt;code&gt;php:&lt;/code&gt; representing a format that can be recognized by the PHP &lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;date()&lt;/a&gt;-function.</source>
          <target state="translated">它也可以是&lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICU手册中&lt;/a&gt;指定的自定义格式。另外，它可以是一个前缀为 &lt;code&gt;php:&lt;/code&gt; 的字符串：表示可以由PHP &lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;date（）&lt;/a&gt;函数识别的格式。</target>
        </trans-unit>
        <trans-unit id="6a510563f094fbff076345fc7fdab7725911b14e" translate="yes" xml:space="preserve">
          <source>It can also be a custom format as specified in the &lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICU manual&lt;/a&gt;. Alternatively this can be a string prefixed with &lt;code&gt;php:&lt;/code&gt; representing a format that can be recognized by the PHP &lt;a href=&quot;https://php.net/manual/de/function.date.php&quot;&gt;date()&lt;/a&gt;-function.</source>
          <target state="translated">它也可以是&lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICU手册中&lt;/a&gt;指定的自定义格式。另外，这可以是一个以 &lt;code&gt;php:&lt;/code&gt; 的字符串：表示可以由PHP &lt;a href=&quot;https://php.net/manual/de/function.date.php&quot;&gt;date（）&lt;/a&gt;函数识别的格式。</target>
        </trans-unit>
        <trans-unit id="fadf3afffdc5e248e76c88a796a727cabd85ea37" translate="yes" xml:space="preserve">
          <source>It can also be a custom format as specified in the &lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICU manual&lt;/a&gt;. Alternatively this can be a string prefixed with &lt;code&gt;php:&lt;/code&gt; representing a format that can be recognized by the PHP &lt;a href=&quot;https://php.net/manual/en/function.date.php&quot;&gt;date()&lt;/a&gt;-function.</source>
          <target state="translated">它也可以是&lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICU手册中&lt;/a&gt;指定的自定义格式。另外，这可以是一个以 &lt;code&gt;php:&lt;/code&gt; 的字符串：表示可以由PHP &lt;a href=&quot;https://php.net/manual/en/function.date.php&quot;&gt;date（）&lt;/a&gt;函数识别的格式。</target>
        </trans-unit>
        <trans-unit id="75fe673e5394f576a5d11a8507b0c0b6ec22bfbf" translate="yes" xml:space="preserve">
          <source>It can also parse internationalized dates in a specific &lt;a href=&quot;yii-validators-datevalidator#%24locale-detail&quot;&gt;$locale&lt;/a&gt; like e.g. &lt;code&gt;12 мая 2014&lt;/code&gt; when &lt;a href=&quot;yii-validators-datevalidator#%24format-detail&quot;&gt;$format&lt;/a&gt; is configured to use a time pattern in ICU format.</source>
          <target state="translated">当&lt;a href=&quot;yii-validators-datevalidator#%24format-detail&quot;&gt;$ format&lt;/a&gt;配置为使用ICU格式的时间模式时，它还可以解析特定&lt;a href=&quot;yii-validators-datevalidator#%24locale-detail&quot;&gt;$ locale&lt;/a&gt;中的国际化日期，例如 &lt;code&gt;12 мая 2014&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a27990bf66f0d948f795885b7a43141c8f274077" translate="yes" xml:space="preserve">
          <source>It can correctly identify the recursively referenced objects in a complex object structure. It also has a recursive depth control to avoid indefinite recursive display of some peculiar variables.</source>
          <target state="translated">它可以正确识别复杂对象结构中递归引用的对象。它还具有递归深度控制功能,以避免一些特殊变量的无限递归显示。</target>
        </trans-unit>
        <trans-unit id="11d519ecbf2d2361f4b5d76a28bc37f5b72f996f" translate="yes" xml:space="preserve">
          <source>It checks if extension required is loaded.</source>
          <target state="translated">它检查是否加载了所需的扩展。</target>
        </trans-unit>
        <trans-unit id="4e9a32e88c2062df79e089e3d217fcbbc68b2221" translate="yes" xml:space="preserve">
          <source>It could be useful to specify extra configuration that is applied to each rule contained within &lt;a href=&quot;yii-rest-urlrule&quot;&gt;yii\rest\UrlRule&lt;/a&gt;. A good example would be specifying defaults for &lt;code&gt;expand&lt;/code&gt; parameter:</source>
          <target state="translated">指定应用于&lt;a href=&quot;yii-rest-urlrule&quot;&gt;yii \ rest \ UrlRule中&lt;/a&gt;包含的每个规则的额外配置可能很有用。一个很好的例子是为 &lt;code&gt;expand&lt;/code&gt; 参数指定默认值：</target>
        </trans-unit>
        <trans-unit id="05e01bb517ce649066d217b8860059ba8c136db5" translate="yes" xml:space="preserve">
          <source>It creates the memcache instance and adds memcache servers.</source>
          <target state="translated">它创建memcache实例并添加memcache服务器。</target>
        </trans-unit>
        <trans-unit id="89899e1ef9b0fe529fde8aeaf6009c836cab54cb" translate="yes" xml:space="preserve">
          <source>It defaults to &lt;a href=&quot;yii-web-request#%24baseUrl-detail&quot;&gt;yii\web\Request::$baseUrl&lt;/a&gt;. This is mainly used when &lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;$enablePrettyUrl&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt; and &lt;a href=&quot;yii-web-urlmanager#%24showScriptName-detail&quot;&gt;$showScriptName&lt;/a&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">默认为&lt;a href=&quot;yii-web-request#%24baseUrl-detail&quot;&gt;yii \ web \ Request :: $ baseUrl&lt;/a&gt;。这主要是用来当&lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;$ enablePrettyUrl&lt;/a&gt;是 &lt;code&gt;true&lt;/code&gt; 和&lt;a href=&quot;yii-web-urlmanager#%24showScriptName-detail&quot;&gt;$ showScriptName&lt;/a&gt;是 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a728ca560a8aae336f221bc87c5181b5e5bee64" translate="yes" xml:space="preserve">
          <source>It defaults to &lt;a href=&quot;yii-web-request#%24scriptUrl-detail&quot;&gt;yii\web\Request::$scriptUrl&lt;/a&gt;. This is mainly used when &lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;$enablePrettyUrl&lt;/a&gt; is &lt;code&gt;false&lt;/code&gt; or &lt;a href=&quot;yii-web-urlmanager#%24showScriptName-detail&quot;&gt;$showScriptName&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">默认为&lt;a href=&quot;yii-web-request#%24scriptUrl-detail&quot;&gt;yii \ web \ Request :: $ scriptUrl&lt;/a&gt;。这主要是用来当&lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;$ enablePrettyUrl&lt;/a&gt;是 &lt;code&gt;false&lt;/code&gt; 或&lt;a href=&quot;yii-web-urlmanager#%24showScriptName-detail&quot;&gt;$ showScriptName&lt;/a&gt;是 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10c5c351d15f103b9bc17ac09e45ba4c8a30db99" translate="yes" xml:space="preserve">
          <source>It defaults to &lt;code&gt;UTC&lt;/code&gt; so you only have to adjust this value if you store datetime values in another time zone in your database.</source>
          <target state="translated">它默认为 &lt;code&gt;UTC&lt;/code&gt; ,因此仅当将datetime值存储在数据库的另一个时区中时，才需要调整此值。</target>
        </trans-unit>
        <trans-unit id="7e44ed7cf450651d283b26b3f88309329d180d35" translate="yes" xml:space="preserve">
          <source>It defaults to the directory containing the module class file.</source>
          <target state="translated">它默认为包含模块类文件的目录。</target>
        </trans-unit>
        <trans-unit id="0bc3a1d545b7a0e506f429cba21a5d92903d23e6" translate="yes" xml:space="preserve">
          <source>It does nothing if a DB connection has already been established.</source>
          <target state="translated">如果一个DB连接已经建立,它什么也不做。</target>
        </trans-unit>
        <trans-unit id="7cb4d76c2627f3ed0c1b85af950a217139857ca3" translate="yes" xml:space="preserve">
          <source>It does nothing if a MongoDB connection has already been established.</source>
          <target state="translated">如果已经建立了MongoDB连接,它什么也不做。</target>
        </trans-unit>
        <trans-unit id="e5c06d71a780645ac1bafd69375220fdc4c7fde0" translate="yes" xml:space="preserve">
          <source>It does nothing if the connection is already closed.</source>
          <target state="translated">如果连接已经关闭,它什么也不做。</target>
        </trans-unit>
        <trans-unit id="db179dae3eada9ef431dc9a5f2a9899c6f5be58a" translate="yes" xml:space="preserve">
          <source>It does the translation by looking up the message to be translated in a message source which stores the original messages and the translated messages. If the message is found, the corresponding translated message will be returned; otherwise the original message will be returned untranslated.</source>
          <target state="translated">它通过在存储原始消息和翻译消息的消息源中查找要翻译的消息来进行翻译。如果找到了消息,将返回相应的翻译消息,否则将返回未翻译的原始消息。</target>
        </trans-unit>
        <trans-unit id="389ac910ce18f55d0bdbc0a953df1628d698fa01" translate="yes" xml:space="preserve">
          <source>It encapsulates the $_SERVER variable and resolves its inconsistency among different Web servers. Also it provides an interface to retrieve request parameters from $_POST, $_GET, $_COOKIES and REST parameters sent via other HTTP methods like PUT or DELETE.</source>
          <target state="translated">它封装了$_SERVER变量,并解决了不同Web服务器之间的不一致问题。同时,它还提供了一个接口,用于从$_POST、$_GET、$_COOKIES和通过其他HTTP方法(如PUT或DELETE)发送的REST参数中检索请求参数。</target>
        </trans-unit>
        <trans-unit id="c8ce105c040f1e461505a3672e95ceb67bd4300f" translate="yes" xml:space="preserve">
          <source>It encapsulates the parameters associated with an event. The &lt;a href=&quot;yii-base-event#%24sender-detail&quot;&gt;$sender&lt;/a&gt; property describes who raises the event. And the &lt;a href=&quot;yii-base-event#%24handled-detail&quot;&gt;$handled&lt;/a&gt; property indicates if the event is handled. If an event handler sets &lt;a href=&quot;yii-base-event#%24handled-detail&quot;&gt;$handled&lt;/a&gt; to be &lt;code&gt;true&lt;/code&gt;, the rest of the uninvoked handlers will no longer be called to handle the event.</source>
          <target state="translated">它封装了与事件关联的参数。在&lt;a href=&quot;yii-base-event#%24sender-detail&quot;&gt;$发件人&lt;/a&gt;属性描述谁引发事件。和&lt;a href=&quot;yii-base-event#%24handled-detail&quot;&gt;$处理&lt;/a&gt;属性表示，如果事件被处理。如果事件处理程序将&lt;a href=&quot;yii-base-event#%24handled-detail&quot;&gt;$ handled&lt;/a&gt;设置为 &lt;code&gt;true&lt;/code&gt; ，那么将不再调用其余未调用的处理程序来处理事件。</target>
        </trans-unit>
        <trans-unit id="8acc93b65ad30c37d9b974bd00555eb3cb6abbfa" translate="yes" xml:space="preserve">
          <source>It enhances the PHP built-in functions &lt;code&gt;json_encode()&lt;/code&gt; and &lt;code&gt;json_decode()&lt;/code&gt; by supporting encoding JavaScript expressions and throwing exceptions when decoding fails.</source>
          <target state="translated">通过支持编码JavaScript表达式并在解码失败时抛出异常，它增强了PHP内置函数 &lt;code&gt;json_encode()&lt;/code&gt; 和 &lt;code&gt;json_decode()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aed15eec7537c46d1666b1fb8fe89b67147949f3" translate="yes" xml:space="preserve">
          <source>It ensures &lt;a href=&quot;yii-swiftmailer-message#%24swiftMessage-detail&quot;&gt;$swiftMessage&lt;/a&gt; is also cloned.</source>
          <target state="translated">它确保&lt;a href=&quot;yii-swiftmailer-message#%24swiftMessage-detail&quot;&gt;$ swiftMessage&lt;/a&gt;也被克隆。</target>
        </trans-unit>
        <trans-unit id="db5e9c9e70524e8687126d5d61c516e0df75e517" translate="yes" xml:space="preserve">
          <source>It extends from &lt;a href=&quot;yii-baseyii&quot;&gt;yii\BaseYii&lt;/a&gt; which provides the actual implementation. By writing your own Yii class, you can customize some functionalities of &lt;a href=&quot;yii-baseyii&quot;&gt;yii\BaseYii&lt;/a&gt;.</source>
          <target state="translated">它从提供实际实现的&lt;a href=&quot;yii-baseyii&quot;&gt;yii \ BaseYii&lt;/a&gt;扩展。通过编写自己的Yii类，可以自定义&lt;a href=&quot;yii-baseyii&quot;&gt;yii \ BaseYii的&lt;/a&gt;某些功能。</target>
        </trans-unit>
        <trans-unit id="ded4a272ba4b68057d44447d9738be4d747e5d94" translate="yes" xml:space="preserve">
          <source>It first looks for a key in &lt;a href=&quot;yii-base-theme#%24pathMap-detail&quot;&gt;$pathMap&lt;/a&gt; that is a substring of the given view file path;</source>
          <target state="translated">它首先在&lt;a href=&quot;yii-base-theme#%24pathMap-detail&quot;&gt;$ pathMap&lt;/a&gt;中寻找一个键，该键是给定视图文件路径的子字符串。</target>
        </trans-unit>
        <trans-unit id="a5ad7cd4f17ed35ef1b100c9654872d1ba80d7aa" translate="yes" xml:space="preserve">
          <source>It has no content yet.</source>
          <target state="translated">它还没有内容。</target>
        </trans-unit>
        <trans-unit id="62b76ebe8d88156dc4de0944165d5ec409bd9e43" translate="yes" xml:space="preserve">
          <source>It has support for getting &lt;a href=&quot;yii-db-queryinterface#one()-detail&quot;&gt;one()&lt;/a&gt; instance or &lt;a href=&quot;yii-db-queryinterface#all()-detail&quot;&gt;all()&lt;/a&gt;. Allows pagination via &lt;a href=&quot;yii-db-queryinterface#limit()-detail&quot;&gt;limit()&lt;/a&gt; and &lt;a href=&quot;yii-db-queryinterface#offset()-detail&quot;&gt;offset()&lt;/a&gt;. Sorting is supported via &lt;a href=&quot;yii-db-queryinterface#orderBy()-detail&quot;&gt;orderBy()&lt;/a&gt; and items can be limited to match some conditions using &lt;a href=&quot;yii-db-queryinterface#where()-detail&quot;&gt;where()&lt;/a&gt;.</source>
          <target state="translated">它支持获取&lt;a href=&quot;yii-db-queryinterface#one()-detail&quot;&gt;one（）&lt;/a&gt;实例或&lt;a href=&quot;yii-db-queryinterface#all()-detail&quot;&gt;all（）&lt;/a&gt;。允许通过&lt;a href=&quot;yii-db-queryinterface#limit()-detail&quot;&gt;limit（）&lt;/a&gt;和&lt;a href=&quot;yii-db-queryinterface#offset()-detail&quot;&gt;offset（）&lt;/a&gt;进行分页。通过&lt;a href=&quot;yii-db-queryinterface#orderBy()-detail&quot;&gt;orderBy（）&lt;/a&gt;支持排序，并且可以使用&lt;a href=&quot;yii-db-queryinterface#where()-detail&quot;&gt;where（）&lt;/a&gt;将项目限制为匹配某些条件。</target>
        </trans-unit>
        <trans-unit id="06b262991f92d5df8d52d9d96f779941475b6812" translate="yes" xml:space="preserve">
          <source>It holds the &lt;a href=&quot;yii-web-response#%24headers-detail&quot;&gt;$headers&lt;/a&gt;, &lt;a href=&quot;yii-web-response#%24cookies-detail&quot;&gt;$cookies&lt;/a&gt; and &lt;a href=&quot;yii-web-response#%24content-detail&quot;&gt;$content&lt;/a&gt; that is to be sent to the client. It also controls the HTTP &lt;a href=&quot;yii-web-response#%24statusCode-detail&quot;&gt;status code&lt;/a&gt;.</source>
          <target state="translated">它包含将发送到客户端的&lt;a href=&quot;yii-web-response#%24headers-detail&quot;&gt;$ header&lt;/a&gt;，&lt;a href=&quot;yii-web-response#%24cookies-detail&quot;&gt;$ cookies&lt;/a&gt;和&lt;a href=&quot;yii-web-response#%24content-detail&quot;&gt;$ content&lt;/a&gt;。它还控制HTTP &lt;a href=&quot;yii-web-response#%24statusCode-detail&quot;&gt;状态代码&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="58c970be17232bf64859d3d2c88d274a68e51f85" translate="yes" xml:space="preserve">
          <source>It is a common task to increment or decrement a column in a database table. We call these columns &quot;counter columns&quot;. You can use &lt;a href=&quot;yii-db-baseactiverecord#updateCounters()-detail&quot;&gt;updateCounters()&lt;/a&gt; to update one or multiple counter columns. For example,</source>
          <target state="translated">递增或递减数据库表中的列是一项常见的任务。我们将这些列称为&amp;ldquo;计数器列&amp;rdquo;。您可以使用&lt;a href=&quot;yii-db-baseactiverecord#updateCounters()-detail&quot;&gt;updateCounters（）&lt;/a&gt;更新一个或多个计数器列。例如，</target>
        </trans-unit>
        <trans-unit id="3c1e64d0ec1283fec7e84d0c14f8d11c2efb9848" translate="yes" xml:space="preserve">
          <source>It is a wrapper for the PHP &lt;code&gt;$_SERVER&lt;/code&gt; variable which holds information about the currently running PHP script and the command line arguments given to it.</source>
          <target state="translated">它是PHP &lt;code&gt;$_SERVER&lt;/code&gt; 变量的包装，该变量保存有关当前正在运行的PHP脚本以及为其提供的命令行参数的信息。</target>
        </trans-unit>
        <trans-unit id="badd5c80e7a8585fdf6c7200f7a1b0a55ed4ef5d" translate="yes" xml:space="preserve">
          <source>It is also possible to just call &lt;code&gt;$query-&amp;gt;joinWith(['author']);&lt;/code&gt; when the alias is defined in the relation definition.</source>
          <target state="translated">也可以只调用 &lt;code&gt;$query-&amp;gt;joinWith(['author']);&lt;/code&gt; 在关系定义中定义别名时。</target>
        </trans-unit>
        <trans-unit id="2b93ff272f7cbc1df49d8d1c3f40d5c181296e78" translate="yes" xml:space="preserve">
          <source>It is also recommended that you use an ICU version equal or greater than version 49. This will ensure you can use all the features described in this document. For example, an ICU version below 49 does not support using &lt;code&gt;#&lt;/code&gt; placeholders in plural rules. Please refer to &lt;a href=&quot;http://site.icu-project.org/download&quot;&gt;http://site.icu-project.org/download&lt;/a&gt; for a complete list of available ICU versions. Note that the version numbering has changed after the 4.8 release (e.g., ICU 4.8, ICU 49, ICU 50, etc.)</source>
          <target state="translated">还建议您使用等于或大于49版的ICU版本。这将确保您可以使用本文档中介绍的所有功能。例如，低于49的ICU版本不支持在复数规则中使用 &lt;code&gt;#&lt;/code&gt; 个占位符。请参阅&lt;a href=&quot;http://site.icu-project.org/download&quot;&gt;http://site.icu-project.org/download&lt;/a&gt;以获取可用ICU版本的完整列表。请注意，版本号在4.8版本之后已更改（例如，ICU 4.8，ICU 49，ICU 50等）</target>
        </trans-unit>
        <trans-unit id="435705785b2f2b2097bdca619cf904bdadae211d" translate="yes" xml:space="preserve">
          <source>It is an action filter that can be added to a controller and handles the &lt;code&gt;beforeAction&lt;/code&gt; event.</source>
          <target state="translated">它是一个动作过滤器，可以添加到控制器并处理 &lt;code&gt;beforeAction&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="f272a70db1a6bbedb3d2b2a8920bf62d946bc257" translate="yes" xml:space="preserve">
          <source>It is best used for displaying a model in a regular format (e.g. each model attribute is displayed as a row in a table). The model can be either an instance or subclass of &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt; such as an &lt;a href=&quot;guide-db-active-record&quot;&gt;active record&lt;/a&gt; or an associative array.</source>
          <target state="translated">最好用于以常规格式显示模型（例如，每个模型属性在表中显示为一行）。该模型可以是&lt;a href=&quot;yii-base-model&quot;&gt;yii \ base \ Model&lt;/a&gt;的实例或子类，例如&lt;a href=&quot;guide-db-active-record&quot;&gt;活动记录&lt;/a&gt;或关联数组。</target>
        </trans-unit>
        <trans-unit id="2fc0c00c45d1f0f2a5d16046ddd364fec4d8b490" translate="yes" xml:space="preserve">
          <source>It is further possible to limit the date within a certain range using &lt;a href=&quot;yii-validators-datevalidator#%24min-detail&quot;&gt;$min&lt;/a&gt; and &lt;a href=&quot;yii-validators-datevalidator#%24max-detail&quot;&gt;$max&lt;/a&gt;.</source>
          <target state="translated">还可以使用&lt;a href=&quot;yii-validators-datevalidator#%24min-detail&quot;&gt;$ min&lt;/a&gt;和&lt;a href=&quot;yii-validators-datevalidator#%24max-detail&quot;&gt;$ max&lt;/a&gt;将日期限制在一定范围内。</target>
        </trans-unit>
        <trans-unit id="9e29a18e20911f45dcf0ba7bfb1ce0c0f6b1e175" translate="yes" xml:space="preserve">
          <source>It is handy to know whether an array is indexed or an associative. Here's an example:</source>
          <target state="translated">了解一个数组是索引型还是关联型很方便。下面是一个例子。</target>
        </trans-unit>
        <trans-unit id="e505bc9470131ba9fd9fa473d57301f150832431" translate="yes" xml:space="preserve">
          <source>It is highly recommended to use &lt;a href=&quot;guide-structure-assets&quot;&gt;asset bundles&lt;/a&gt; to register external CSS files rather than &lt;a href=&quot;yii-web-view#registerCssFile()-detail&quot;&gt;registerCssFile()&lt;/a&gt;. Using asset bundles allows you to combine and compress multiple CSS files, which is desirable for high traffic websites. It also provides more flexibility as all asset dependencies of your application are configured in one place.</source>
          <target state="translated">强烈建议使用&lt;a href=&quot;guide-structure-assets&quot;&gt;资产捆绑包&lt;/a&gt;注册外部CSS文件，而不是&lt;a href=&quot;yii-web-view#registerCssFile()-detail&quot;&gt;registerCssFile（）&lt;/a&gt;。使用资产捆绑包可让您组合和压缩多个CSS文件，这对于高流量的网站是理想的。由于您的应用程序的所有资产依赖项都在一个位置配置，因此它还提供了更大的灵活性。</target>
        </trans-unit>
        <trans-unit id="ba5dd4d1609e1ccfe3332edf7a29eb242b331604" translate="yes" xml:space="preserve">
          <source>It is highly recommended to use &lt;a href=&quot;guide-structure-assets&quot;&gt;asset bundles&lt;/a&gt; to register external JS files rather than &lt;a href=&quot;yii-web-view#registerJsFile()-detail&quot;&gt;registerJsFile()&lt;/a&gt; because these allow better flexibility and more granular dependency configuration. Also using asset bundles allows you to combine and compress multiple JS files, which is desirable for high traffic websites.</source>
          <target state="translated">强烈建议使用&lt;a href=&quot;guide-structure-assets&quot;&gt;资产捆绑包&lt;/a&gt;注册外部JS文件而不是&lt;a href=&quot;yii-web-view#registerJsFile()-detail&quot;&gt;registerJsFile（），&lt;/a&gt;因为它们可以提供更好的灵活性和更精细的依赖性配置。此外，还可以使用资产捆绑包来组合和压缩多个JS文件，这对于高流量的网站而言是理想的。</target>
        </trans-unit>
        <trans-unit id="d756d6d1864092502123de800e04e1d1f88c6456" translate="yes" xml:space="preserve">
          <source>It is important that the fully qualified controller classes should be &lt;a href=&quot;guide-concept-autoloading&quot;&gt;autoloadable&lt;/a&gt; and the actual namespace of your controller classes match the value of this property. Otherwise, you will receive a &quot;Page Not Found&quot; error when accessing the application.</source>
          <target state="translated">重要的是，完全合格的控制器类应该是可&lt;a href=&quot;guide-concept-autoloading&quot;&gt;自动加载的，&lt;/a&gt;并且控制器类的实际名称空间应与此属性的值匹配。否则，访问该应用程序时将收到&amp;ldquo;找不到页面&amp;rdquo;错误。</target>
        </trans-unit>
        <trans-unit id="3ec72f61b6feaf6c072e9a4bd04490913c9c7610" translate="yes" xml:space="preserve">
          <source>It is important that you specify the package type of your extension as &lt;code&gt;yii2-extension&lt;/code&gt; so that the package can be recognized as a Yii extension when being installed.</source>
          <target state="translated">重要的是，将扩展的软件包类型指定为 &lt;code&gt;yii2-extension&lt;/code&gt; ,以便在安装该软件包时将其识别为Yii扩展。</target>
        </trans-unit>
        <trans-unit id="84e963549c8e0626ef39e6bd02a7ede21a869fa4" translate="yes" xml:space="preserve">
          <source>It is important to make sure that the pairs of &lt;code&gt;beginProfile&lt;/code&gt; and &lt;code&gt;endProfile&lt;/code&gt; are properly nested. For example,</source>
          <target state="translated">确保对 &lt;code&gt;beginProfile&lt;/code&gt; 和 &lt;code&gt;endProfile&lt;/code&gt; 对正确嵌套很重要。例如，</target>
        </trans-unit>
        <trans-unit id="062dc60dfbba51727d4a7e5335c0df3e49a9ed97" translate="yes" xml:space="preserve">
          <source>It is important to remember that you add the &lt;code&gt;enctype&lt;/code&gt; option to the form so that the file can be properly uploaded. The &lt;code&gt;fileInput()&lt;/code&gt; call will render a &lt;code&gt;&amp;lt;input type=&quot;file&quot;&amp;gt;&lt;/code&gt; tag which will allow users to select a file to upload.</source>
          <target state="translated">重要的是要记住，您向表单添加了 &lt;code&gt;enctype&lt;/code&gt; 选项，以便可以正确上传文件。所述 &lt;code&gt;fileInput()&lt;/code&gt; 调用将呈现 &lt;code&gt;&amp;lt;input type=&quot;file&quot;&amp;gt;&lt;/code&gt; 标签，这将允许用户选择要上传的文件。</target>
        </trans-unit>
        <trans-unit id="b68125c76b99aac4ae94a9acca2f53ca843b771b" translate="yes" xml:space="preserve">
          <source>It is important to understand the life cycles of Active Record when it is used for different purposes. During each life cycle, a certain sequence of methods will be invoked, and you can override these methods to get a chance to customize the life cycle. You can also respond to certain Active Record events triggered during a life cycle to inject your custom code. These events are especially useful when you are developing Active Record &lt;a href=&quot;guide-concept-behaviors&quot;&gt;behaviors&lt;/a&gt; which need to customize Active Record life cycles.</source>
          <target state="translated">了解Active Record用于不同目的的生命周期非常重要。在每个生命周期中，将调用特定的方法序列，您可以重写这些方法以获得自定义生命周期的机会。您还可以响应生命周期中触发的某些Active Record事件，以注入您的自定义代码。当您开发需要自定义Active Record生命周期的Active Record &lt;a href=&quot;guide-concept-behaviors&quot;&gt;行为&lt;/a&gt;时，这些事件特别有用。</target>
        </trans-unit>
        <trans-unit id="16541b98b077f4ebcb4c47fc17115652e92c0ac1" translate="yes" xml:space="preserve">
          <source>It is necessary to override PDO's method as some MSSQL PDO driver (e.g. dblib) does not support getting attributes</source>
          <target state="translated">需要覆盖PDO的方法,因为一些MSSQL PDO驱动(例如dblib)不支持获取属性。</target>
        </trans-unit>
        <trans-unit id="c8c70386e63814ee892359a581c8af4f52d03df7" translate="yes" xml:space="preserve">
          <source>It is often preferable to manage assets programmatically. For example, when you use the &lt;a href=&quot;yii-jui-datepicker&quot;&gt;yii\jui\DatePicker&lt;/a&gt; widget in a page, it will automatically include the required CSS and JavaScript files, instead of asking you to manually find these files and include them. And when you upgrade the widget to a new version, it will automatically use the new version of the asset files. In this tutorial, we will describe the powerful asset management capability provided in Yii.</source>
          <target state="translated">通常最好以编程方式管理资产。例如，当您在页面中使用&lt;a href=&quot;yii-jui-datepicker&quot;&gt;yii \ jui \ DatePicker&lt;/a&gt;小部件时，它将自动包括所需的CSS和JavaScript文件，而不是要求您手动查找并包括这些文件。当您将小部件升级到新版本时，它将自动使用资产文件的新版本。在本教程中，我们将描述Yii中提供的强大资产管理功能。</target>
        </trans-unit>
        <trans-unit id="9b38538428b5b6461dfc79ad3cb235d550c4d4b0" translate="yes" xml:space="preserve">
          <source>It is possible to configure multiple definitions at once, passing configuration array to &lt;a href=&quot;yii-di-container#setDefinitions()-detail&quot;&gt;setDefinitions()&lt;/a&gt; or &lt;a href=&quot;yii-di-container#setSingletons()-detail&quot;&gt;setSingletons()&lt;/a&gt; method. Iterating over the configuration array, the methods will call &lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;set()&lt;/a&gt; or &lt;a href=&quot;yii-di-container#setSingleton()-detail&quot;&gt;setSingleton()&lt;/a&gt; respectively for each item.</source>
          <target state="translated">可以一次配置多个定义，将配置数组传递给&lt;a href=&quot;yii-di-container#setDefinitions()-detail&quot;&gt;setDefinitions（）&lt;/a&gt;或&lt;a href=&quot;yii-di-container#setSingletons()-detail&quot;&gt;setSingletons（）&lt;/a&gt;方法。在配置数组上迭代，这些方法将分别为每个项目调用&lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;set（）&lt;/a&gt;或&lt;a href=&quot;yii-di-container#setSingleton()-detail&quot;&gt;setSingleton（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4a7b8db1916ecef5539d848d8928c2b1fb5795ae" translate="yes" xml:space="preserve">
          <source>It is possible to connect to a redis server using &lt;a href=&quot;yii-redis-connection#%24hostname-detail&quot;&gt;$hostname&lt;/a&gt; and &lt;a href=&quot;yii-redis-connection#%24port-detail&quot;&gt;$port&lt;/a&gt; or using a &lt;a href=&quot;yii-redis-connection#%24unixSocket-detail&quot;&gt;$unixSocket&lt;/a&gt;.</source>
          <target state="translated">可以使用&lt;a href=&quot;yii-redis-connection#%24hostname-detail&quot;&gt;$ hostname&lt;/a&gt;和&lt;a href=&quot;yii-redis-connection#%24port-detail&quot;&gt;$ port&lt;/a&gt;或&lt;a href=&quot;yii-redis-connection#%24unixSocket-detail&quot;&gt;$ unixSocket&lt;/a&gt;连接到Redis服务器。</target>
        </trans-unit>
        <trans-unit id="cb05251de537836c044a98b48cc29adb29cddbc2" translate="yes" xml:space="preserve">
          <source>It is possible to include Web server names in the patterns of URL rules. This is mainly useful when your application should behave differently for different Web server names. For example, the following rules will parse the URL &lt;code&gt;http://admin.example.com/login&lt;/code&gt; into the route &lt;code&gt;admin/user/login&lt;/code&gt; and &lt;code&gt;http://www.example.com/login&lt;/code&gt; into &lt;code&gt;site/login&lt;/code&gt;.</source>
          <target state="translated">可以在URL规则的模式中包含Web服务器名称。当您的应用程序对于不同的Web服务器名称应该表现不同时，这主要有用。例如，以下规则将把URL &lt;code&gt;http://admin.example.com/login&lt;/code&gt; 解析为路由 &lt;code&gt;admin/user/login&lt;/code&gt; 和将 &lt;code&gt;http://www.example.com/login&lt;/code&gt; 解析为 &lt;code&gt;site/login&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="07c53912dd5fa17c6ec70a347e1f858ac2f4433c" translate="yes" xml:space="preserve">
          <source>It is possible to map a single path to multiple paths. For example,</source>
          <target state="translated">可以将一个路径映射到多个路径。例如:</target>
        </trans-unit>
        <trans-unit id="a1bc5beceb79eedc2c43fcca4fc0eda27dfdafe7" translate="yes" xml:space="preserve">
          <source>It is possible to provide default way of converting object to array for a specific class by implementing &lt;a href=&quot;yii-base-arrayable&quot;&gt;Arrayable&lt;/a&gt; interface in that class.</source>
          <target state="translated">通过在特定类中实现&lt;a href=&quot;yii-base-arrayable&quot;&gt;Arrayable&lt;/a&gt;接口，可以提供将对象转换为特定类的数组的默认方法。</target>
        </trans-unit>
        <trans-unit id="a6783dea010b569b6ca1b14b387cebbf69baebd7" translate="yes" xml:space="preserve">
          <source>It is possible to use a specific mode of data fetching by setting &lt;a href=&quot;yii-db-datareader#%24fetchMode-detail&quot;&gt;$fetchMode&lt;/a&gt;. See the &lt;a href=&quot;http://www.php.net/manual/en/function.PDOStatement-setFetchMode.php&quot;&gt;PHP manual&lt;/a&gt; for more details about possible fetch mode.</source>
          <target state="translated">通过设置&lt;a href=&quot;yii-db-datareader#%24fetchMode-detail&quot;&gt;$ fetchMode&lt;/a&gt;可以使用特定的数据获取模式。有关可能的获取模式的更多详细信息，请参见&lt;a href=&quot;http://www.php.net/manual/en/function.PDOStatement-setFetchMode.php&quot;&gt;PHP手册&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a4fa2b2497794839540c020e4aaf1a9f8f690162" translate="yes" xml:space="preserve">
          <source>It is recommended that you create an extension in terms of a &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer package&lt;/a&gt; so that it can be more easily installed and used by other users, as described in the last subsection.</source>
          <target state="translated">建议您根据&lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer软件包&lt;/a&gt;创建扩展，以便其他用户可以更轻松地安装和使用它，如最后一个小节所述。</target>
        </trans-unit>
        <trans-unit id="9f21b449e6f28ed349d2e6d4e2b73523a8be3f48" translate="yes" xml:space="preserve">
          <source>It is recommended that you create various test cases to cover your extension code rather than relying on manual tests. Each time before you release a new version of your extension, you may simply run these test cases to make sure everything is in good shape. Yii provides testing support, which can help you to more easily write unit tests, acceptance tests and functionality tests. For more details, please refer to the &lt;a href=&quot;guide-test-overview&quot;&gt;Testing&lt;/a&gt; section.</source>
          <target state="translated">建议您创建各种测试用例以覆盖扩展代码，而不要依靠手动测试。每次在发布新版本的扩展程序之前，您都可以运行这些测试用例，以确保一切正常。Yii提供了测试支持，可以帮助您更轻松地编写单元测试，验收测试和功能测试。有关更多详细信息，请参阅&amp;ldquo; &lt;a href=&quot;guide-test-overview&quot;&gt;测试&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="5463f47310fa33410358d0e2b962c1ff4e075c2b" translate="yes" xml:space="preserve">
          <source>It is recommended that you place assets belonging to an application in a Web directory to avoid the unnecessary asset publishing process. This is why &lt;code&gt;AppAsset&lt;/code&gt; in the prior example specifies &lt;a href=&quot;yii-web-assetbundle#%24basePath-detail&quot;&gt;basePath&lt;/a&gt; instead of &lt;a href=&quot;yii-web-assetbundle#%24sourcePath-detail&quot;&gt;sourcePath&lt;/a&gt;.</source>
          <target state="translated">建议将属于应用程序的资产放置在Web目录中，以避免不必要的资产发布过程。这就是为什么前面示例中的 &lt;code&gt;AppAsset&lt;/code&gt; 指定&lt;a href=&quot;yii-web-assetbundle#%24basePath-detail&quot;&gt;basePath&lt;/a&gt;而不是&lt;a href=&quot;yii-web-assetbundle#%24sourcePath-detail&quot;&gt;sourcePath的原因&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="00f46f7066f9d224c48b366c7692131decdbb782" translate="yes" xml:space="preserve">
          <source>It is recommended that you specify a language in terms of an &lt;a href=&quot;http://en.wikipedia.org/wiki/IETF_language_tag&quot;&gt;IETF language tag&lt;/a&gt;. For example, &lt;code&gt;en&lt;/code&gt; stands for English, while &lt;code&gt;en-US&lt;/code&gt; stands for English (United States).</source>
          <target state="translated">建议您根据&lt;a href=&quot;http://en.wikipedia.org/wiki/IETF_language_tag&quot;&gt;IETF语言标签&lt;/a&gt;指定语言。例如， &lt;code&gt;en&lt;/code&gt; 代表英语，而 &lt;code&gt;en-US&lt;/code&gt; 代表英语（美国）。</target>
        </trans-unit>
        <trans-unit id="ec5995a4a3f94444e33080d2de5c0d9e2ff6b6a8" translate="yes" xml:space="preserve">
          <source>It is recommended that you specify a language in terms of an &lt;a href=&quot;https://en.wikipedia.org/wiki/IETF_language_tag&quot;&gt;IETF language tag&lt;/a&gt;. For example, &lt;code&gt;en&lt;/code&gt; stands for English, while &lt;code&gt;en-US&lt;/code&gt; stands for English (United States).</source>
          <target state="translated">建议您根据&lt;a href=&quot;https://en.wikipedia.org/wiki/IETF_language_tag&quot;&gt;IETF语言标签&lt;/a&gt;指定语言。例如， &lt;code&gt;en&lt;/code&gt; 代表英语，而 &lt;code&gt;en-US&lt;/code&gt; 代表英语（美国）。</target>
        </trans-unit>
        <trans-unit id="639559a18ed28fb96c7be7b03405b2b2f3819c61" translate="yes" xml:space="preserve">
          <source>It is supposed to be used in a class that implements the &lt;a href=&quot;yii-db-queryinterface&quot;&gt;yii\db\QueryInterface&lt;/a&gt;.</source>
          <target state="translated">应该在实现&lt;a href=&quot;yii-db-queryinterface&quot;&gt;yii \ db \ QueryInterface&lt;/a&gt;的类中使用它。</target>
        </trans-unit>
        <trans-unit id="c3ce90737a765c504ddd862b28787fa840b2fa68" translate="yes" xml:space="preserve">
          <source>It is used by &lt;a href=&quot;yii-mongodb-command&quot;&gt;yii\mongodb\Command&lt;/a&gt; for particular commands and queries composition.</source>
          <target state="translated">它用于通过&lt;a href=&quot;yii-mongodb-command&quot;&gt;YII \ mongodb的\命令&lt;/a&gt;对特定命令和查询的组合物。</target>
        </trans-unit>
        <trans-unit id="c2b24adea233777ea9c2a4b4ee5ff3cb198c30fd" translate="yes" xml:space="preserve">
          <source>It is used by &lt;a href=&quot;yii-web-assetmanager&quot;&gt;yii\web\AssetManager&lt;/a&gt; to convert files after they have been published.</source>
          <target state="translated">&lt;a href=&quot;yii-web-assetmanager&quot;&gt;yii \ web \ AssetManager&lt;/a&gt;使用它在文件发布后转换文件。</target>
        </trans-unit>
        <trans-unit id="516a53c699a38ed82299e7bb54464186143ca6cd" translate="yes" xml:space="preserve">
          <source>It is used by &lt;a href=&quot;yii-web-response&quot;&gt;yii\web\Response&lt;/a&gt; to format response data.</source>
          <target state="translated">&lt;a href=&quot;yii-web-response&quot;&gt;yii \ web \ Response&lt;/a&gt;使用它来格式化响应数据。</target>
        </trans-unit>
        <trans-unit id="254ae0b615f45d6ec497d47e8ae361512b97982c" translate="yes" xml:space="preserve">
          <source>It is used to show data columns and allows &lt;a href=&quot;yii-grid-datacolumn#%24enableSorting-detail&quot;&gt;sorting&lt;/a&gt; and &lt;a href=&quot;yii-grid-datacolumn#%24filter-detail&quot;&gt;filtering&lt;/a&gt; them.</source>
          <target state="translated">它用于显示数据列，并允许对其进行&lt;a href=&quot;yii-grid-datacolumn#%24enableSorting-detail&quot;&gt;排序&lt;/a&gt;和&lt;a href=&quot;yii-grid-datacolumn#%24filter-detail&quot;&gt;过滤&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6902b56f58f3c5f376113def885af6be42675e73" translate="yes" xml:space="preserve">
          <source>It is usually created by calling &lt;a href=&quot;yii-db-connection#beginTransaction()-detail&quot;&gt;yii\db\Connection::beginTransaction()&lt;/a&gt;.</source>
          <target state="translated">通常是通过调用&lt;a href=&quot;yii-db-connection#beginTransaction()-detail&quot;&gt;yii \ db \ Connection :: beginTransaction（）创建的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ece9eaccb18f9d5abc0a0d696e3031c7914976f4" translate="yes" xml:space="preserve">
          <source>It needs to be configured with a redis &lt;a href=&quot;yii-redis-connection&quot;&gt;yii\redis\Connection&lt;/a&gt; that is also configured as an application component. By default it will use the &lt;code&gt;redis&lt;/code&gt; application component.</source>
          <target state="translated">需要使用redis &lt;a href=&quot;yii-redis-connection&quot;&gt;yii \ redis \ Connection&lt;/a&gt;进行配置，该配置也配置为应用程序组件。默认情况下，它将使用 &lt;code&gt;redis&lt;/code&gt; 应用程序组件。</target>
        </trans-unit>
        <trans-unit id="b5b08891cccb4c34c0a495a0adc07afdfcf5204f" translate="yes" xml:space="preserve">
          <source>It often happens that the data being entered and/or displayed are in a format which is different from the one used in storing the data in a database. For example, in the database you are storing customers' birthdays as UNIX timestamps (which is not a good design, though), while in most cases you would like to manipulate birthdays as strings in the format of &lt;code&gt;'YYYY/MM/DD'&lt;/code&gt;. To achieve this goal, you can define &lt;em&gt;data transformation&lt;/em&gt; methods in the &lt;code&gt;Customer&lt;/code&gt; Active Record class like the following:</source>
          <target state="translated">经常发生的是，输入和/或显示的数据的格式与将数据存储在数据库中所使用的格式不同。例如，在数据库中，您将客户的生日存储为UNIX时间戳（尽管这不是一个好的设计），而在大多数情况下，您希望将生日作为字符串以 &lt;code&gt;'YYYY/MM/DD'&lt;/code&gt; 的格式进行处理。为了实现此目标，可以在 &lt;code&gt;Customer&lt;/code&gt; Active Record类中定义&lt;em&gt;数据转换&lt;/em&gt;方法，如下所示：</target>
        </trans-unit>
        <trans-unit id="bea8cfcbc4eac41533c4914ce2c490623e21b837" translate="yes" xml:space="preserve">
          <source>It opens a popup window for the client authentication process. By default this widget relies on presence of &lt;a href=&quot;yii-authclient-collection&quot;&gt;yii\authclient\Collection&lt;/a&gt; among application components to get auth clients information.</source>
          <target state="translated">它打开一个用于客户端身份验证过程的弹出窗口。默认情况下，此窗口小部件依靠应用程序组件中&lt;a href=&quot;yii-authclient-collection&quot;&gt;yii \ authclient \ Collection的&lt;/a&gt;存在来获取身份验证客户端信息。</target>
        </trans-unit>
        <trans-unit id="44a35c0bac74c7f72ab524e62d8ac9b6e7ad3795" translate="yes" xml:space="preserve">
          <source>It passes value to the inner iterator.</source>
          <target state="translated">它将值传递给内部迭代器。</target>
        </trans-unit>
        <trans-unit id="34b1daeb190d978303ab027d93fc6cd4037bdc5c" translate="yes" xml:space="preserve">
          <source>It populate the table with the data returned by &lt;a href=&quot;yii-test-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt;.</source>
          <target state="translated">它使用&lt;a href=&quot;yii-test-activefixture#getData()-detail&quot;&gt;getData（）&lt;/a&gt;返回的数据填充表。</target>
        </trans-unit>
        <trans-unit id="f131bff557d2143a7c13fe1c9968b87b68f3b69c" translate="yes" xml:space="preserve">
          <source>It provides features like &lt;a href=&quot;yii-widgets-baselistview#%24sorter-detail&quot;&gt;sorting&lt;/a&gt;, &lt;a href=&quot;yii-widgets-baselistview#%24pager-detail&quot;&gt;paging&lt;/a&gt; and also &lt;a href=&quot;yii-grid-gridview#%24filterModel-detail&quot;&gt;filtering&lt;/a&gt; the data.</source>
          <target state="translated">它提供了诸如&lt;a href=&quot;yii-widgets-baselistview#%24sorter-detail&quot;&gt;排序&lt;/a&gt;，&lt;a href=&quot;yii-widgets-baselistview#%24pager-detail&quot;&gt;分页&lt;/a&gt;和&lt;a href=&quot;yii-grid-gridview#%24filterModel-detail&quot;&gt;过滤&lt;/a&gt;数据之类的功能。</target>
        </trans-unit>
        <trans-unit id="7424318227eb48acdef562d28f805170e4b866a2" translate="yes" xml:space="preserve">
          <source>It provides features like sorting, paging and also filtering the data.</source>
          <target state="translated">它提供了排序、分页和过滤数据等功能。</target>
        </trans-unit>
        <trans-unit id="d5dc687d54aac6a85ffccb90ae2203ba202b7609" translate="yes" xml:space="preserve">
          <source>It provides functions to convert date format patterns between different conventions.</source>
          <target state="translated">它提供了在不同公约之间转换日期格式模式的功能。</target>
        </trans-unit>
        <trans-unit id="6748c3e79ef95cc29bfcba1c70beae706418e4c9" translate="yes" xml:space="preserve">
          <source>It provides workarounds for improperly implemented functionalities of the MSSQL and DBLIB drivers.</source>
          <target state="translated">它提供了MSSQL和DBLIB驱动程序功能实现不当的变通方法。</target>
        </trans-unit>
        <trans-unit id="8b6f6ebbb61b8c66f95755d69161a146eeceb44c" translate="yes" xml:space="preserve">
          <source>It provides workarounds for improperly implemented functionalities of the SQLSRV driver.</source>
          <target state="translated">它为SQLSRV驱动的不恰当的功能实现提供了变通方法。</target>
        </trans-unit>
        <trans-unit id="802bf4f719e3360a0082db55583b249fcdc55f49" translate="yes" xml:space="preserve">
          <source>It redirects method call to inner iterator.</source>
          <target state="translated">它将方法调用重定向到内部迭代器。</target>
        </trans-unit>
        <trans-unit id="e580b09190a2c303b5402ad9188dcf56c0dd8b0a" translate="yes" xml:space="preserve">
          <source>It removes all behaviors because they are attached to the old object.</source>
          <target state="translated">它删除了所有的行为,因为它们是附着在旧对象上的。</target>
        </trans-unit>
        <trans-unit id="1e24a38f99fe0f09182e9bee4c537ed048247773" translate="yes" xml:space="preserve">
          <source>It returns value from the inner iterator.</source>
          <target state="translated">它从内部迭代器返回值。</target>
        </trans-unit>
        <trans-unit id="e3020b1d152d6059769014c428299a6e3c5b5c24" translate="yes" xml:space="preserve">
          <source>It should have the same signature as &lt;a href=&quot;yii-widgets-listview#%24beforeItem-detail&quot;&gt;$beforeItem&lt;/a&gt;.</source>
          <target state="translated">它应该与&lt;a href=&quot;yii-widgets-listview#%24beforeItem-detail&quot;&gt;$ beforeItem&lt;/a&gt;具有相同的签名。</target>
        </trans-unit>
        <trans-unit id="7595018fc143457ecb0d164e5c783edc9a45b5c6" translate="yes" xml:space="preserve">
          <source>It supports &lt;a href=&quot;yii-authclient-openid&quot;&gt;yii\authclient\OpenId&lt;/a&gt;, &lt;a href=&quot;yii-authclient-oauth1&quot;&gt;yii\authclient\OAuth1&lt;/a&gt; and &lt;a href=&quot;yii-authclient-oauth2&quot;&gt;yii\authclient\OAuth2&lt;/a&gt; client types.</source>
          <target state="translated">它支持&lt;a href=&quot;yii-authclient-openid&quot;&gt;yii \ authclient \ OpenId&lt;/a&gt;，&lt;a href=&quot;yii-authclient-oauth1&quot;&gt;yii \ authclient \ OAuth1&lt;/a&gt;和&lt;a href=&quot;yii-authclient-oauth2&quot;&gt;yii \ authclient \ OAuth2&lt;/a&gt;客户端类型。</target>
        </trans-unit>
        <trans-unit id="51cb992866e9a16606be035789f3c2b5e635e986" translate="yes" xml:space="preserve">
          <source>It uses the PHP intl extension's &lt;a href=&quot;http://www.php.net/manual/en/class.messageformatter.php&quot;&gt;MessageFormatter&lt;/a&gt; and works around some issues. If PHP intl is not installed a fallback will be used that supports a subset of the ICU message format.</source>
          <target state="translated">它使用PHP intl扩展的&lt;a href=&quot;http://www.php.net/manual/en/class.messageformatter.php&quot;&gt;MessageFormatter&lt;/a&gt;并解决了一些问题。如果未安装PHP intl，则将使用支持ICU消息格式的子集的后备。</target>
        </trans-unit>
        <trans-unit id="5c418f46b6898971cd81466eec272703dcdddc1d" translate="yes" xml:space="preserve">
          <source>It uses the PHP intl extension's &lt;a href=&quot;http://www.php.net/manual/en/messageformatter.parsemessage.php&quot;&gt;MessageFormatter::parse()&lt;/a&gt; and adds support for named arguments. Usage of this method requires PHP intl extension to be installed.</source>
          <target state="translated">它使用PHP intl扩展的&lt;a href=&quot;http://www.php.net/manual/en/messageformatter.parsemessage.php&quot;&gt;MessageFormatter :: parse（）&lt;/a&gt;并添加了对命名参数的支持。使用此方法需要安装PHP intl扩展。</target>
        </trans-unit>
        <trans-unit id="de7d84e952f5373c3277dbce4a728b3ddf6d8d40" translate="yes" xml:space="preserve">
          <source>It will allow you to theme &lt;code&gt;@app/modules/blog/views/comment/index.php&lt;/code&gt; into &lt;code&gt;@app/themes/basic/modules/blog/views/comment/index.php&lt;/code&gt;.</source>
          <target state="translated">它将允许您将 &lt;code&gt;@app/modules/blog/views/comment/index.php&lt;/code&gt; &lt;code&gt;@app/themes/basic/modules/blog/views/comment/index.php&lt;/code&gt; 为@ app / themes / basic / modules / blog / views / comment / index.php。</target>
        </trans-unit>
        <trans-unit id="4a69f4ab14d39fb98d118848d66da79417698347" translate="yes" xml:space="preserve">
          <source>It will also try to convert non-CSS or JS files (e.g. LESS, Sass) into the corresponding CSS or JS files using &lt;a href=&quot;yii-web-assetmanager#%24converter-detail&quot;&gt;asset converter&lt;/a&gt;.</source>
          <target state="translated">它还将尝试使用&lt;a href=&quot;yii-web-assetmanager#%24converter-detail&quot;&gt;资产转换器&lt;/a&gt;将非CSS或JS文件（例如LESS，Sass）转换为相应的CSS或JS文件。</target>
        </trans-unit>
        <trans-unit id="c29732523a5be5f4a01c51f1ab8b28d6f577e7d9" translate="yes" xml:space="preserve">
          <source>It will join all columns into a string with comma as separators.</source>
          <target state="translated">它将把所有列连接成一个以逗号作为分隔符的字符串。</target>
        </trans-unit>
        <trans-unit id="1cacf9359d6cad637a6a34b4805a0a69023006b3" translate="yes" xml:space="preserve">
          <source>It will then check if the updated view file exists or not. If so, that file will be used to replace the original view file.</source>
          <target state="translated">然后它将检查更新后的视图文件是否存在。如果存在,该文件将被用来替换原来的视图文件。</target>
        </trans-unit>
        <trans-unit id="22dba5bdedd78fa7de659a7ce12a85deea2dbdd5" translate="yes" xml:space="preserve">
          <source>It's a good practice to define meaningful constants for your controller in case you have more error code types.</source>
          <target state="translated">为你的控制器定义有意义的常量是一个很好的做法,以防你有更多的错误代码类型。</target>
        </trans-unit>
        <trans-unit id="b71a537ef5bb5a2eaf3606015fdc78eb142da6d4" translate="yes" xml:space="preserve">
          <source>It's a one-time project that will no longer be worked on.</source>
          <target state="translated">这是一个一次性的项目,将不再工作。</target>
        </trans-unit>
        <trans-unit id="9425ca1cca62ec8a8bcdc958d3c1bbd5887e2772" translate="yes" xml:space="preserve">
          <source>It's also possible to use key instead of password via &lt;a href=&quot;yii-base-security#encryptByKey()-detail&quot;&gt;yii\base\Security::encryptByKey()&lt;/a&gt; and &lt;a href=&quot;yii-base-security#decryptByKey()-detail&quot;&gt;yii\base\Security::decryptByKey()&lt;/a&gt;.</source>
          <target state="translated">它也可以使用键代替密码通过&lt;a href=&quot;yii-base-security#encryptByKey()-detail&quot;&gt;警予\基地\安全:: EncryptByKey的（）&lt;/a&gt;和&lt;a href=&quot;yii-base-security#decryptByKey()-detail&quot;&gt;警予\基地\安全:: DecryptByKey这个（） &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="14d5c9fde290fe01df6f45234cdc30f9759137af" translate="yes" xml:space="preserve">
          <source>Item 1</source>
          <target state="translated">项目1</target>
        </trans-unit>
        <trans-unit id="18ced5c76db797e1292c85b44d21d36295e5a2f8" translate="yes" xml:space="preserve">
          <source>Item 2</source>
          <target state="translated">项目2</target>
        </trans-unit>
        <trans-unit id="e44739c3e353a3ae73c55984dd40ae4b03f08097" translate="yes" xml:space="preserve">
          <source>Item 3</source>
          <target state="translated">项目3</target>
        </trans-unit>
        <trans-unit id="ed8246a860cdb8b17508b2b2e298eec6cac7ab35" translate="yes" xml:space="preserve">
          <source>Item 4</source>
          <target state="translated">项目4</target>
        </trans-unit>
        <trans-unit id="c0fcc554ccff879f567ef032a1d01802ce78956a" translate="yes" xml:space="preserve">
          <source>Item index.</source>
          <target state="translated">项目索引:</target>
        </trans-unit>
        <trans-unit id="29e34590c00f9404b818d318193cb5de69513705" translate="yes" xml:space="preserve">
          <source>Item label.</source>
          <target state="translated">项目标签:</target>
        </trans-unit>
        <trans-unit id="6bc5eec04878d10b41059c11a4cce09c74455c81" translate="yes" xml:space="preserve">
          <source>Iterates over &lt;a href=&quot;yii-web-urlrule#%24placeholders-detail&quot;&gt;$placeholders&lt;/a&gt; and checks whether each placeholder exists as a key in $matches array.</source>
          <target state="translated">遍历&lt;a href=&quot;yii-web-urlrule#%24placeholders-detail&quot;&gt;$ placeholders&lt;/a&gt;并检查每个占位符是否作为$ matches数组中的键存在。</target>
        </trans-unit>
        <trans-unit id="78f1b4e4c6d73e121256eefe6748ba446c8487ee" translate="yes" xml:space="preserve">
          <source>Iterates through specified rules and calls &lt;a href=&quot;yii-web-compositeurlrule#createUrl()-detail&quot;&gt;createUrl()&lt;/a&gt; for each of them.</source>
          <target state="translated">遍历指定的规则，并为每个规则调用&lt;a href=&quot;yii-web-compositeurlrule#createUrl()-detail&quot;&gt;createUrl（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="954c8b41c673d8226e3e3467a1a8343177ec64d1" translate="yes" xml:space="preserve">
          <source>Iteration number</source>
          <target state="translated">迭代次数</target>
        </trans-unit>
        <trans-unit id="bae8809b2429231a50c28ba87cecc038aac88855" translate="yes" xml:space="preserve">
          <source>Iterator</source>
          <target state="translated">Iterator</target>
        </trans-unit>
        <trans-unit id="9403aa5efbdb22c2f1977f9b3d45b6c23b569ce4" translate="yes" xml:space="preserve">
          <source>Its main task is to toggle integrity check of the database during data loading. This is needed by other DB-related fixtures (e.g. &lt;a href=&quot;yii-test-activefixture&quot;&gt;yii\test\ActiveFixture&lt;/a&gt;) so that they can populate data into the database without triggering integrity check errors.</source>
          <target state="translated">它的主要任务是在数据加载期间切换数据库的完整性检查。其他与数据库相关的固定装置（例如&lt;a href=&quot;yii-test-activefixture&quot;&gt;yii \ test \ ActiveFixture&lt;/a&gt;）需要此功能，以便它们可以将数据填充到数据库中而不会触发完整性检查错误。</target>
        </trans-unit>
        <trans-unit id="5766bfd5841dee1b6f2aaf89bbb921f60e7d1b6f" translate="yes" xml:space="preserve">
          <source>JSON format</source>
          <target state="translated">JSON格式</target>
        </trans-unit>
        <trans-unit id="adf3b32b70ceb32a9085598f64127c92241a1e9f" translate="yes" xml:space="preserve">
          <source>JWS algorithms, which are allowed to be used.</source>
          <target state="translated">JWS算法,是允许使用的。</target>
        </trans-unit>
        <trans-unit id="0bdbf91316a853d735e420a1dafcace50da7151a" translate="yes" xml:space="preserve">
          <source>JWS algorithms, which are allowed to be used. These are used by &lt;code&gt;spomky-labs/jose&lt;/code&gt; library for JWS validation/decryption. Make sure &lt;code&gt;spomky-labs/jose&lt;/code&gt; supports the particular algorithm before adding it here.</source>
          <target state="translated">允许使用的JWS算法。这些被使用的 &lt;code&gt;spomky-labs/jose&lt;/code&gt; 库JWS验证/解密。在将其添加到此处之前，请确保 &lt;code&gt;spomky-labs/jose&lt;/code&gt; 支持特定算法。</target>
        </trans-unit>
        <trans-unit id="394dea453fe0f2d46e856dd2664100b7169fa2e6" translate="yes" xml:space="preserve">
          <source>JWS underlying data.</source>
          <target state="translated">JWS基础数据。</target>
        </trans-unit>
        <trans-unit id="48bc7c7e77cc67e67c2a92ccb875a96515be001f" translate="yes" xml:space="preserve">
          <source>JavaScript button itself generated by \yii\authclient\clients\yii\authclient\widgets\GooglePlusButton widget. If you are using \yii\authclient\clients\yii\authclient\widgets\AuthChoice it will appear automatically. Otherwise you need to add it into your page manually. You may customize its appearance using 'widget' key at &lt;a href=&quot;yii-authclient-baseclient#%24viewOptions-detail&quot;&gt;$viewOptions&lt;/a&gt;:</source>
          <target state="translated">JavaScript按钮本身由\ yii \ authclient \ clients \ yii \ authclient \ widgets \ GooglePlusButton小部件生成。如果您使用的是\ yii \ authclient \ clients \ yii \ authclient \ widgets \ AuthChoice，它将自动显示。否则，您需要手动将其添加到页面中。您可以使用&lt;a href=&quot;yii-authclient-baseclient#%24viewOptions-detail&quot;&gt;$ viewOptions中的&lt;/a&gt; &amp;ldquo; widget&amp;rdquo;键来自定义其外观：</target>
        </trans-unit>
        <trans-unit id="9ee87f77ff1cd9a798e5b0c75ba2d2de50ea237d" translate="yes" xml:space="preserve">
          <source>JavaScript file compressor.</source>
          <target state="translated">JavaScript文件压缩器。</target>
        </trans-unit>
        <trans-unit id="40da65be9a7c8710e9aa40b96f54c02232a955ba" translate="yes" xml:space="preserve">
          <source>JavaScript file compressor. If a string, it is treated as shell command template, which should contain placeholders {from} - source file name - and {to} - output file name. Otherwise, it is treated as PHP callback, which should perform the compression.</source>
          <target state="translated">JavaScript文件压缩器。如果是字符串,它将被视为shell命令模板,其中应该包含占位符{from}-源文件名-和{to}-输出文件名。否则,它将被视为PHP回调,它将执行压缩。</target>
        </trans-unit>
        <trans-unit id="0d8f160a6c2fd9ddf6bf32b0a9d0699412d032dc" translate="yes" xml:space="preserve">
          <source>JavaScript files are combined, compressed and written to &lt;code&gt;js/all-{hash}.js&lt;/code&gt; where {hash} is replaced with the hash of the resulting file.</source>
          <target state="translated">JavaScript文件被组合，压缩并写入 &lt;code&gt;js/all-{hash}.js&lt;/code&gt; ，其中{hash}被替换为结果文件的哈希。</target>
        </trans-unit>
        <trans-unit id="37fc744b377e37e4d25b618eb94f2e5961da9223" translate="yes" xml:space="preserve">
          <source>JavaScript function name.</source>
          <target state="translated">JavaScript功能名称:</target>
        </trans-unit>
        <trans-unit id="45104ab0da2643be241e111b35b858fab612105e" translate="yes" xml:space="preserve">
          <source>Joining with Relations</source>
          <target state="translated">加入关系</target>
        </trans-unit>
        <trans-unit id="fe79a8c2a70073c5f85a3dd5282c58ea806f0110" translate="yes" xml:space="preserve">
          <source>Joins with the specified relations.</source>
          <target state="translated">用指定的关系连接。</target>
        </trans-unit>
        <trans-unit id="0a553bfa58667cdae81434070798b551c5c7b08b" translate="yes" xml:space="preserve">
          <source>JsExpression marks a string as a JavaScript expression.</source>
          <target state="translated">JsExpression将一个字符串标记为JavaScript表达式。</target>
        </trans-unit>
        <trans-unit id="a39c80ac4ae6093a2cb99575bc52b72b361ab4dd" translate="yes" xml:space="preserve">
          <source>Json is a helper class providing JSON data encoding and decoding.</source>
          <target state="translated">Json是一个提供JSON数据编码和解码的助手类。</target>
        </trans-unit>
        <trans-unit id="3137c3bdc4254e2d689f3bae4bc9ec23609e2b89" translate="yes" xml:space="preserve">
          <source>Json string or array of data to store</source>
          <target state="translated">存储数据的Json字符串或数组</target>
        </trans-unit>
        <trans-unit id="f1f4129b55aad72ca05992463d9fae98f805894d" translate="yes" xml:space="preserve">
          <source>JsonResponseFormatter formats the given data into a JSON or JSONP response content.</source>
          <target state="translated">JsonResponseFormatter将给定的数据格式化为JSON或JSONP响应内容。</target>
        </trans-unit>
        <trans-unit id="efada65b775773e67d70408dadefb1568f30d3e9" translate="yes" xml:space="preserve">
          <source>Keep Yii CSRF protection enabled.</source>
          <target state="translated">启用Yii的CSRF保护。</target>
        </trans-unit>
        <trans-unit id="abca61e71b2fade3d232154e06c85efccc13232b" translate="yes" xml:space="preserve">
          <source>Keep in mind that customization made via &lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii\web\AssetManager::$bundles&lt;/a&gt; is applied at the creation of the asset bundle, e.g. at object constructor stage. Thus any adjustments made to the bundle object after that will override the mapping setup at &lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii\web\AssetManager::$bundles&lt;/a&gt; level. In particular: adjustments made inside &lt;a href=&quot;yii-web-assetbundle#init()-detail&quot;&gt;yii\web\AssetBundle::init()&lt;/a&gt; method or over the registered bundle object will take precedence over &lt;code&gt;AssetManager&lt;/code&gt; configuration. Here are the examples, where mapping set via &lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii\web\AssetManager::$bundles&lt;/a&gt; makes no effect:</source>
          <target state="translated">请记住，通过&lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii \ web \ AssetManager :: $ bundles进行的&lt;/a&gt;自定义将在资产束的创建时应用，例如在对象构造器阶段。因此，之后对bundle对象进行的任何调整都将覆盖&lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii \ web \ AssetManager :: $ bundles&lt;/a&gt;级别的映射设置。特别是：在&lt;a href=&quot;yii-web-assetbundle#init()-detail&quot;&gt;yii \ web \ AssetBundle :: init（）&lt;/a&gt;方法中或在已注册的bundle对象中进行的调整将优先于 &lt;code&gt;AssetManager&lt;/code&gt; 配置。以下是示例，其中通过&lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii \ web \ AssetManager :: $ bundles&lt;/a&gt;设置的映射无效：</target>
        </trans-unit>
        <trans-unit id="d310f486f71abe6bf48b2e365d77a015524fdf48" translate="yes" xml:space="preserve">
          <source>Keeps you focused on one thing at a time which results in improved planning and implementation.</source>
          <target state="translated">让你一次专注于一件事,从而改进计划和执行。</target>
        </trans-unit>
        <trans-unit id="9a5a2bb480940ca6c7e9aefe683b69c88e51f3b6" translate="yes" xml:space="preserve">
          <source>Kept to match &lt;a href=&quot;yii-db-queryinterface&quot;&gt;yii\db\QueryInterface&lt;/a&gt;, its value is ignored.</source>
          <target state="translated">保持匹配&lt;a href=&quot;yii-db-queryinterface&quot;&gt;yii \ db \ QueryInterface&lt;/a&gt;，其值将被忽略。</target>
        </trans-unit>
        <trans-unit id="1eeffa78fdad9a849e09f54683bacf7438ed48cb" translate="yes" xml:space="preserve">
          <source>Key derivation using standard algorithms: &lt;a href=&quot;yii-base-security#pbkdf2()-detail&quot;&gt;pbkdf2()&lt;/a&gt; and &lt;a href=&quot;yii-base-security#hkdf()-detail&quot;&gt;hkdf()&lt;/a&gt;</source>
          <target state="translated">使用标准算法派生密钥：&lt;a href=&quot;yii-base-security#pbkdf2()-detail&quot;&gt;pbkdf2（）&lt;/a&gt;和&lt;a href=&quot;yii-base-security#hkdf()-detail&quot;&gt;hkdf（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eacd56ec60f535fbfc83f6a9a35278b0ec2b3b14" translate="yes" xml:space="preserve">
          <source>Key identifying the flash message type</source>
          <target state="translated">识别闪光信息类型的键</target>
        </trans-unit>
        <trans-unit id="e3948cf0b8bb28a87e036f7a59e208c3d5160050" translate="yes" xml:space="preserve">
          <source>Key in &lt;a href=&quot;yii-authclient-oauthtoken#%24params-detail&quot;&gt;$params&lt;/a&gt; array, which stores token key.</source>
          <target state="translated">键入&lt;a href=&quot;yii-authclient-oauthtoken#%24params-detail&quot;&gt;$ params&lt;/a&gt;数组，该数组存储令牌密钥。</target>
        </trans-unit>
        <trans-unit id="965d2014aceeff49347b18d3699fd60c662d6412" translate="yes" xml:space="preserve">
          <source>Key in &lt;a href=&quot;yii-authclient-oauthtoken#%24params-detail&quot;&gt;$params&lt;/a&gt; array, which stores token secret key.</source>
          <target state="translated">键入&lt;a href=&quot;yii-authclient-oauthtoken#%24params-detail&quot;&gt;$ params&lt;/a&gt;数组，该数组存储令牌秘密密钥。</target>
        </trans-unit>
        <trans-unit id="572f0e0eb3891af729345868f4e3bc5502ab39a3" translate="yes" xml:space="preserve">
          <source>Key name of the array element</source>
          <target state="translated">阵列元素的键名</target>
        </trans-unit>
        <trans-unit id="228ea3a37fec3998b56612bb0b1b43383fdf01ee" translate="yes" xml:space="preserve">
          <source>Key name of the array element, an array of keys or property name of the object, or an anonymous function returning the value. The anonymous function signature should be: &lt;code&gt;function($array, $defaultValue)&lt;/code&gt;. The possibility to pass an array of keys is available since version 2.0.4.</source>
          <target state="translated">数组元素的键名称，键的数组或对象的属性名称，或者返回值的匿名函数。匿名函数签名应为： &lt;code&gt;function($array, $defaultValue)&lt;/code&gt; 。从版本2.0.4开始，可以传递密钥数组。</target>
        </trans-unit>
        <trans-unit id="5a9e0f9669aaad5f3d4171b4572a9606fb11bb05" translate="yes" xml:space="preserve">
          <source>Key-value array of options to choose from</source>
          <target state="translated">可供选择的键值数组</target>
        </trans-unit>
        <trans-unit id="9eec3d361dacbe41c0e70149bbca3539358acd8d" translate="yes" xml:space="preserve">
          <source>Keywords and statistics</source>
          <target state="translated">关键词和统计</target>
        </trans-unit>
        <trans-unit id="d2b1b5b3f5b6446d9521318155583acc76ce31db" translate="yes" xml:space="preserve">
          <source>LEVEL_ERROR</source>
          <target state="translated">LEVEL_ERROR</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
