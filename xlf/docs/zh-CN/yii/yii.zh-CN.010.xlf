<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="yii">
    <body>
      <group id="yii">
        <trans-unit id="f2bb9d31851053f2eac96fd902a45184437ad0e8" translate="yes" xml:space="preserve">
          <source>After executing the code &lt;code&gt;$array&lt;/code&gt; will contain &lt;code&gt;['options' =&amp;gt; [1, 2]]&lt;/code&gt; and &lt;code&gt;$type&lt;/code&gt; will be &lt;code&gt;A&lt;/code&gt;. Note that unlike &lt;code&gt;getValue&lt;/code&gt; method, &lt;code&gt;remove&lt;/code&gt; supports simple key names only.</source>
          <target state="translated">执行所述代码后 &lt;code&gt;$array&lt;/code&gt; 将包含 &lt;code&gt;['options' =&amp;gt; [1, 2]]&lt;/code&gt; 和 &lt;code&gt;$type&lt;/code&gt; 将是 &lt;code&gt;A&lt;/code&gt; 。请注意，与 &lt;code&gt;getValue&lt;/code&gt; 方法不同， &lt;code&gt;remove&lt;/code&gt; 仅支持简单键名。</target>
        </trans-unit>
        <trans-unit id="df1c99cae36c4ee635a1fd6bc625ed90f6982bf4" translate="yes" xml:space="preserve">
          <source>After installation is done, either configure your web server (see next section) or use the &lt;a href=&quot;https://secure.php.net/manual/en/features.commandline.webserver.php&quot;&gt;built-in PHP web server&lt;/a&gt; by running the following console command while in the project &lt;code&gt;web&lt;/code&gt; directory:</source>
          <target state="translated">安装完成后，可以在项目 &lt;code&gt;web&lt;/code&gt; 目录中运行以下控制台命令来配置Web服务器（请参阅下一节）或使用&lt;a href=&quot;https://secure.php.net/manual/en/features.commandline.webserver.php&quot;&gt;内置的PHP Web服务器&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="06bb1c6e31524add941808a5acc14e96b34b2a6c" translate="yes" xml:space="preserve">
          <source>After it's done the process is repeated again for another feature or improvement. If the existing feature is to be changed, tests should be changed as well.</source>
          <target state="translated">做完之后,再重复这个过程,进行另一个功能或改进。如果要改变现有的功能,测试也应该改变。</target>
        </trans-unit>
        <trans-unit id="20df5690488652862dca7e00443321e8bd99eb02" translate="yes" xml:space="preserve">
          <source>After logging in a user:</source>
          <target state="translated">登录用户后。</target>
        </trans-unit>
        <trans-unit id="a7e9bd64fe457d3c7f20f6a58af59ef618b5848b" translate="yes" xml:space="preserve">
          <source>After sorting we'll get the following in &lt;code&gt;$data&lt;/code&gt;:</source>
          <target state="translated">排序后，我们将在 &lt;code&gt;$data&lt;/code&gt; 获得以下内容：</target>
        </trans-unit>
        <trans-unit id="81f3c6956052133c23206baf68ab314fb97534e7" translate="yes" xml:space="preserve">
          <source>After that you can use this UserView active record with search models, without additional specification of sorting and filtering attributes. All attributes will be working out of the box. Note that this approach has several pros and cons:</source>
          <target state="translated">之后你就可以用搜索模型来使用这个UserView活动记录,不需要额外规范排序和过滤属性。所有的属性都将在盒子里工作。注意,这种方法有几个优点和缺点。</target>
        </trans-unit>
        <trans-unit id="9783b667b274572ce904b44c559fb18999325226" translate="yes" xml:space="preserve">
          <source>After the &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;yii\web\Response::send()&lt;/a&gt; method is called once, any further call to this method will be ignored. This means once the response is sent out, you will not be able to append more content to it.</source>
          <target state="translated">后&lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;警予\网络\响应::的send（）&lt;/a&gt;方法被调用一次，这种方法的任何进一步的通话将被忽略。这意味着一旦发出响应，您将无法向其添加更多内容。</target>
        </trans-unit>
        <trans-unit id="a55d47573fdfb75d3850e263287750ca3e41ed9b" translate="yes" xml:space="preserve">
          <source>After the CacheSession object is created, if you want to change this property, you should only assign it with a cache object.</source>
          <target state="translated">在CacheSession对象创建后,如果要改变这个属性,只能用缓存对象来分配。</target>
        </trans-unit>
        <trans-unit id="d480b6c263798ec72ffc5c3b38bbc1423b8b8946" translate="yes" xml:space="preserve">
          <source>After the DB connection is established, one can execute SQL statements like the following:</source>
          <target state="translated">建立DB连接后,可以执行以下SQL语句。</target>
        </trans-unit>
        <trans-unit id="cb9caf83e05f0b4fa9a4182da3fadcd82604de50" translate="yes" xml:space="preserve">
          <source>After the DbMessageSource object is created, if you want to change this property, you should only assign it with a DB connection object.</source>
          <target state="translated">在创建DbMessageSource对象后,如果要改变这个属性,只能用DB连接对象来分配。</target>
        </trans-unit>
        <trans-unit id="514ce56ea1d72c76c207e920ebe92146170ac2da" translate="yes" xml:space="preserve">
          <source>After the DbMessageSource object is created, if you want to change this property, you should only assign it with a cache object.</source>
          <target state="translated">在创建DbMessageSource对象后,如果要改变这个属性,只能用缓存对象来分配。</target>
        </trans-unit>
        <trans-unit id="86b4c540c10c9dbdc8a673c3ca12d1aa22a6cf16" translate="yes" xml:space="preserve">
          <source>After the Mongo connection is established, one can access Mongo databases and collections:</source>
          <target state="translated">Mongo连接建立后,可以访问Mongo数据库和集合。</target>
        </trans-unit>
        <trans-unit id="982f24355b2c8c28082500564da21e33d64290cd" translate="yes" xml:space="preserve">
          <source>After the MongoDbMessageSource object is created, if you want to change this property, you should only assign it with a MongoDB connection object.</source>
          <target state="translated">在MongoDbMessageSource对象创建后,如果要改变这个属性,只能用MongoDB连接对象来分配。</target>
        </trans-unit>
        <trans-unit id="912e899ebeba2892f409b6c1b424797850741cbf" translate="yes" xml:space="preserve">
          <source>After the MongoDbMessageSource object is created, if you want to change this property, you should only assign it with a cache object.</source>
          <target state="translated">MongoDbMessageSource对象创建后,如果要改变这个属性,只能用缓存对象来分配。</target>
        </trans-unit>
        <trans-unit id="d89a90c4a96868396aa0ac6283344011cd63e469" translate="yes" xml:space="preserve">
          <source>After the SessionStateStorage object is created, if you want to change this property, you should only assign it with a session object.</source>
          <target state="translated">在SessionStateStorage对象创建后,如果要改变这个属性,只能用session对象来分配。</target>
        </trans-unit>
        <trans-unit id="85ae30057495d6c077a2234d3171651fe0d6333c" translate="yes" xml:space="preserve">
          <source>After the Sphinx connection is established, one can execute SQL statements like the following:</source>
          <target state="translated">在Sphinx连接建立后,可以执行以下SQL语句。</target>
        </trans-unit>
        <trans-unit id="f23b17249cf76ad5a9355c3815b46bf575aa477e" translate="yes" xml:space="preserve">
          <source>After the UrlManager object is created, if you want to change this property, you should only assign it with a cache object. Set this property to &lt;code&gt;false&lt;/code&gt; if you do not want to cache the URL rules.</source>
          <target state="translated">创建UrlManager对象后，如果要更改此属性，则应仅为其分配一个缓存对象。如果您不想缓存URL规则，请将此属性设置为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d6d818e3a0476a2d7c544d830e7216b0069a265" translate="yes" xml:space="preserve">
          <source>After the fixture is loaded, you can access the loaded data via the &lt;a href=&quot;yii-test-baseactivefixture#%24data-detail&quot;&gt;$data&lt;/a&gt; property. If you set &lt;a href=&quot;yii-test-baseactivefixture#%24modelClass-detail&quot;&gt;$modelClass&lt;/a&gt;, you will also be able to retrieve an instance of &lt;a href=&quot;yii-test-baseactivefixture#%24modelClass-detail&quot;&gt;$modelClass&lt;/a&gt; with the populated data via &lt;a href=&quot;yii-test-baseactivefixture#getModel()-detail&quot;&gt;getModel()&lt;/a&gt;.</source>
          <target state="translated">加载夹具后，您可以通过&lt;a href=&quot;yii-test-baseactivefixture#%24data-detail&quot;&gt;$ data&lt;/a&gt;属性访问加载的数据。如果设置了&lt;a href=&quot;yii-test-baseactivefixture#%24modelClass-detail&quot;&gt;$ modelClass&lt;/a&gt;，则还可以通过&lt;a href=&quot;yii-test-baseactivefixture#getModel()-detail&quot;&gt;getModel（）&lt;/a&gt;使用填充的数据检索&lt;a href=&quot;yii-test-baseactivefixture#%24modelClass-detail&quot;&gt;$ modelClass&lt;/a&gt;的实例。</target>
        </trans-unit>
        <trans-unit id="acff2af201ab3f17e2e4bdefab4eb9feaf569c36" translate="yes" xml:space="preserve">
          <source>After the installation, you should see the directory &lt;code&gt;yiisoft/yii2-imagine&lt;/code&gt; under &lt;code&gt;BasePath/vendor&lt;/code&gt;. You should also see another directory &lt;code&gt;imagine/imagine&lt;/code&gt; which contains the installed dependent package.</source>
          <target state="translated">安装后，您应该在 &lt;code&gt;BasePath/vendor&lt;/code&gt; 下看到目录 &lt;code&gt;yiisoft/yii2-imagine&lt;/code&gt; 。您还应该看到包含已安装的依赖程序包的另一个目录 &lt;code&gt;imagine/imagine&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5c79a0ad7dca6f81431ebfe79c1d148cc13b3ff" translate="yes" xml:space="preserve">
          <source>After the module is initialized, this property will become an array of generator instances which are created based on the configurations previously taken by this property.</source>
          <target state="translated">模块初始化后,该属性将成为生成器实例的数组,该数组是根据该属性之前采取的配置创建的。</target>
        </trans-unit>
        <trans-unit id="39531824816a6b8fd6be0ba00f83c91fef0d309e" translate="yes" xml:space="preserve">
          <source>After this mode is enabled, methods, returning query results like &lt;a href=&quot;yii-db-queryinterface#one()-detail&quot;&gt;one()&lt;/a&gt;, &lt;a href=&quot;yii-db-queryinterface#all()-detail&quot;&gt;all()&lt;/a&gt;, &lt;a href=&quot;yii-db-queryinterface#exists()-detail&quot;&gt;exists()&lt;/a&gt; and so on, will return empty or false values. You should use this method in case your program logic indicates query should not return any results, like in case you set false where condition like &lt;code&gt;0=1&lt;/code&gt;.</source>
          <target state="translated">启用此模式后，返回&lt;a href=&quot;yii-db-queryinterface#one()-detail&quot;&gt;one（）&lt;/a&gt;，&lt;a href=&quot;yii-db-queryinterface#all()-detail&quot;&gt;all（）&lt;/a&gt;，&lt;a href=&quot;yii-db-queryinterface#exists()-detail&quot;&gt;exist（）&lt;/a&gt;等查询结果的方法将返回空值或false值。如果您的程序逻辑指示查询不应返回任何结果，例如在条件为 &lt;code&gt;0=1&lt;/code&gt; 的情况下设置false，则应使用此方法。</target>
        </trans-unit>
        <trans-unit id="d4c78bab34be69acc3ece582addfa308adcfe716" translate="yes" xml:space="preserve">
          <source>After this mode is enabled, methods, returning query results like \yii\db\one(), \yii\db\all(), \yii\db\exists() and so on, will return empty or false values. You should use this method in case your program logic indicates query should not return any results, like in case you set false where condition like &lt;code&gt;0=1&lt;/code&gt;.</source>
          <target state="translated">启用此模式后，返回\ yii \ db \ one（），\ yii \ db \ all（），\ yii \ db \ exists（）等查询结果的方法将返回空值或错误值。如果您的程序逻辑指示查询不应返回任何结果，例如在条件为 &lt;code&gt;0=1&lt;/code&gt; 的情况下设置false，则应使用此方法。</target>
        </trans-unit>
        <trans-unit id="64ea859af07aefcea21b7237fab5fbfe7f258a5e" translate="yes" xml:space="preserve">
          <source>After translation the message will be formatted using &lt;a href=&quot;yii-i18n-messageformatter&quot;&gt;yii\i18n\MessageFormatter&lt;/a&gt; if it contains ICU message format and &lt;code&gt;$params&lt;/code&gt; are not empty.</source>
          <target state="translated">翻译后，如果邮件包含ICU邮件格式且 &lt;code&gt;$params&lt;/code&gt; 不为空，则将使用&lt;a href=&quot;yii-i18n-messageformatter&quot;&gt;yii \ i18n \ MessageFormatter&lt;/a&gt;格式化邮件。</target>
        </trans-unit>
        <trans-unit id="5b21cd515587188a044d7b4e26a060939047f021" translate="yes" xml:space="preserve">
          <source>After validation, you can check if the validation succeeded or not by calling the &lt;a href=&quot;yii-base-model#hasErrors()-detail&quot;&gt;hasErrors()&lt;/a&gt; method, and then get the validation errors from the &lt;a href=&quot;yii-base-model#%24errors-detail&quot;&gt;errors&lt;/a&gt; property, like you do with a normal model. You may also access the dynamic attributes defined through the model instance, e.g., &lt;code&gt;$model-&amp;gt;name&lt;/code&gt; and &lt;code&gt;$model-&amp;gt;email&lt;/code&gt;.</source>
          <target state="translated">验证之后，您可以通过调用&lt;a href=&quot;yii-base-model#hasErrors()-detail&quot;&gt;hasErrors（）&lt;/a&gt;方法来检查验证是否成功，然后像对待普通模型一样，从&lt;a href=&quot;yii-base-model#%24errors-detail&quot;&gt;errors&lt;/a&gt;属性中获取验证错误。您还可以访问通过模型实例定义的动态属性，例如 &lt;code&gt;$model-&amp;gt;name&lt;/code&gt; 和 &lt;code&gt;$model-&amp;gt;email&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0840ead2c2193e794bc6e3e409e09cf99961c7a1" translate="yes" xml:space="preserve">
          <source>After you prepared needed templates for tables you can simply generate your fixtures via command</source>
          <target state="translated">当您准备好所需的表格模板后,您可以通过命令简单地生成您的夹具</target>
        </trans-unit>
        <trans-unit id="bdfb012df57a9009771d71e1ebcf597d7fd0da6b" translate="yes" xml:space="preserve">
          <source>After you set all needed fields in callback, you need to return $fixture array back from the callback.</source>
          <target state="translated">当你在回调中设置了所有需要的字段后,你需要从回调中返回$fixture数组。</target>
        </trans-unit>
        <trans-unit id="86ffa4a81f0a062488b04212bd502995065dd755" translate="yes" xml:space="preserve">
          <source>AfterSaveEvent represents the information available in &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_INSERT-detail&quot;&gt;yii\db\ActiveRecord::EVENT_AFTER_INSERT&lt;/a&gt; and &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_UPDATE-detail&quot;&gt;yii\db\ActiveRecord::EVENT_AFTER_UPDATE&lt;/a&gt;.</source>
          <target state="translated">AfterSaveEvent表示yii &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_INSERT-detail&quot;&gt;\ db \ ActiveRecord :: EVENT_AFTER_INSERT&lt;/a&gt;和yii &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_UPDATE-detail&quot;&gt;\ db \ ActiveRecord :: EVENT_AFTER_UPDATE中可用的信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="34b0e46ba312d5a9a38e7d35a9a5f0703c0c63ca" translate="yes" xml:space="preserve">
          <source>Aggregation name.</source>
          <target state="translated">集合名称:</target>
        </trans-unit>
        <trans-unit id="fc39530259492095f22bb99217b9415395213ab0" translate="yes" xml:space="preserve">
          <source>Aggregation operator.</source>
          <target state="translated">聚合运算符。</target>
        </trans-unit>
        <trans-unit id="4719cd098acba3ad9bc6b960732c34c49e95ac19" translate="yes" xml:space="preserve">
          <source>Aggregation result.</source>
          <target state="translated">聚合结果。</target>
        </trans-unit>
        <trans-unit id="96cc7a4e6c7ed5239620adb8e58a76ec141164dd" translate="yes" xml:space="preserve">
          <source>Aggregation results.</source>
          <target state="translated">聚合结果。</target>
        </trans-unit>
        <trans-unit id="e3004d2e67eaadc74c62aaac74f43b3a988fbed6" translate="yes" xml:space="preserve">
          <source>Ajax attribute input search value</source>
          <target state="translated">Ajax属性输入搜索值</target>
        </trans-unit>
        <trans-unit id="63b0e0fa2efb230b1c55c37368935e475a2fadf6" translate="yes" xml:space="preserve">
          <source>Alias of &lt;a href=&quot;yii-mongodb-file-download#toFile()-detail&quot;&gt;toFile()&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;yii-mongodb-file-download#toFile()-detail&quot;&gt;toFile（）&lt;/a&gt;方法的别名。</target>
        </trans-unit>
        <trans-unit id="3f01c31cdc0570fba6dc8ee077db101c9069c5e8" translate="yes" xml:space="preserve">
          <source>Alias of &lt;a href=&quot;yii-mongodb-file-download#toString()-detail&quot;&gt;toString()&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;yii-mongodb-file-download#toString()-detail&quot;&gt;toString（）&lt;/a&gt;方法的别名。</target>
        </trans-unit>
        <trans-unit id="1a81cd69a0ecd9aaf035c909676a827376b8ea94" translate="yes" xml:space="preserve">
          <source>Alias of &lt;a href=&quot;yii-sphinx-connection#quoteIndexName()-detail&quot;&gt;quoteIndexName()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-sphinx-connection#quoteIndexName()-detail&quot;&gt;quoteIndexName（）的&lt;/a&gt;别名。</target>
        </trans-unit>
        <trans-unit id="2df77c71c913b612e90b61efbc7de05f2c90b1d5" translate="yes" xml:space="preserve">
          <source>Alias to the fixture data path, where data files should be written.</source>
          <target state="translated">夹具数据路径的别名,数据文件应该被写入其中。</target>
        </trans-unit>
        <trans-unit id="3d02a8477722fb38146ee3e15c94f2f2dfad791b" translate="yes" xml:space="preserve">
          <source>Alias to the template path, where all tables templates are stored.</source>
          <target state="translated">模板路径的别名,所有的表模板都存放在这里。</target>
        </trans-unit>
        <trans-unit id="6a8b49f23c0c2e66b347773e3a4bb453ff1fb91c" translate="yes" xml:space="preserve">
          <source>Aliases</source>
          <target state="translated">Aliases</target>
        </trans-unit>
        <trans-unit id="469971b6112deff647e0dbbbccbdf79ec47c4405" translate="yes" xml:space="preserve">
          <source>Aliases are recognized in many places in Yii without needing to call &lt;a href=&quot;yii-baseyii#getAlias()-detail&quot;&gt;Yii::getAlias()&lt;/a&gt; to convert them into paths or URLs. For example, &lt;a href=&quot;yii-caching-filecache#%24cachePath-detail&quot;&gt;yii\caching\FileCache::$cachePath&lt;/a&gt; can accept both a file path and an alias representing a file path, thanks to the &lt;code&gt;@&lt;/code&gt; prefix which allows it to differentiate a file path from an alias.</source>
          <target state="translated">别名在Yii的许多地方都可以识别，而无需调用&lt;a href=&quot;yii-baseyii#getAlias()-detail&quot;&gt;Yii :: getAlias（）&lt;/a&gt;将其转换为路径或URL。例如，&lt;a href=&quot;yii-caching-filecache#%24cachePath-detail&quot;&gt;yii \ caching \ FileCache :: $ cachePath&lt;/a&gt;可以接受文件路径和代表文件路径的别名，这要归功于 &lt;code&gt;@&lt;/code&gt; 前缀，它可以使文件路径与别名区分开。</target>
        </trans-unit>
        <trans-unit id="21204fc892dcb8379b4e86af84935004ccc95657" translate="yes" xml:space="preserve">
          <source>Aliases are used to represent file paths or URLs so that you don't have to hard-code absolute paths or URLs in your project. An alias must start with the &lt;code&gt;@&lt;/code&gt; character to be differentiated from normal file paths and URLs. Alias defined without leading &lt;code&gt;@&lt;/code&gt; will be prefixed with &lt;code&gt;@&lt;/code&gt; character.</source>
          <target state="translated">别名用于表示文件路径或URL，因此您不必在项目中对绝对路径或URL进行硬编码。别名必须以 &lt;code&gt;@&lt;/code&gt; 字符开头，以区别于普通文件路径和URL。定义为没有前导 &lt;code&gt;@&lt;/code&gt; 的别名将以 &lt;code&gt;@&lt;/code&gt; 字符为前缀。</target>
        </trans-unit>
        <trans-unit id="0e75c6a2260ca48552cd58cc7cd818490dfa5c52" translate="yes" xml:space="preserve">
          <source>All Classes</source>
          <target state="translated">所有班级</target>
        </trans-unit>
        <trans-unit id="15ce1c4105795b1ccebd3c08f672fa464ba0b216" translate="yes" xml:space="preserve">
          <source>All aggregations results</source>
          <target state="translated">所有汇总结果</target>
        </trans-unit>
        <trans-unit id="9ced8bbeed2324b7a41185a70b21a3be09b21bdb" translate="yes" xml:space="preserve">
          <source>All ancestor modules that this controller is located within.</source>
          <target state="translated">该控制器所在的所有祖先模块。</target>
        </trans-unit>
        <trans-unit id="bfa3e070b30fd13067d8cd8dc004be2e670efea6" translate="yes" xml:space="preserve">
          <source>All auth items (name =&amp;gt; Item)</source>
          <target state="translated">所有身份验证项目（名称=&amp;gt;项目）</target>
        </trans-unit>
        <trans-unit id="dc8a523f609748e42a0626475faba8a6cfd33ef3" translate="yes" xml:space="preserve">
          <source>All auth rules (name =&amp;gt; Rule)</source>
          <target state="translated">所有身份验证规则（名称=&amp;gt;规则）</target>
        </trans-unit>
        <trans-unit id="aed57276b08d5f335c9a2f7d3bc8c9be56d8a5f6" translate="yes" xml:space="preserve">
          <source>All available action IDs.</source>
          <target state="translated">所有可用的行动ID。</target>
        </trans-unit>
        <trans-unit id="6dada28f7acde322548b6b75755cd8550e3262e6" translate="yes" xml:space="preserve">
          <source>All available command names</source>
          <target state="translated">所有可用的命令名称</target>
        </trans-unit>
        <trans-unit id="d2cfbd344b64bda80f416daad27d927383934889" translate="yes" xml:space="preserve">
          <source>All available commands as keys and their description as values.</source>
          <target state="translated">所有可用的命令为键,其描述为值。</target>
        </trans-unit>
        <trans-unit id="0d4a6ed741eee857d41bd8c8d76f608c17a2c2e5" translate="yes" xml:space="preserve">
          <source>All cache components have the same base class &lt;a href=&quot;yii-caching-cache&quot;&gt;yii\caching\Cache&lt;/a&gt; and thus support the following APIs:</source>
          <target state="translated">所有缓存组件都具有相同的基类&lt;a href=&quot;yii-caching-cache&quot;&gt;yii \ caching \ Cache&lt;/a&gt;，因此支持以下API：</target>
        </trans-unit>
        <trans-unit id="6803f0e8417ba3711b7aba14abb63ee8fcdfdbc0" translate="yes" xml:space="preserve">
          <source>All db schema names or an array with a single empty string</source>
          <target state="translated">所有的数据库模式名称或包含一个空字符串的数组。</target>
        </trans-unit>
        <trans-unit id="3d817e60570b9a7e2df7672e3236f77b3dcf55d0" translate="yes" xml:space="preserve">
          <source>All dependent asset bundles will be registered.</source>
          <target state="translated">所有从属资产捆绑将被登记。</target>
        </trans-unit>
        <trans-unit id="6e738d64d2efbdfd4b4e61b8c57cb86e522b8be9" translate="yes" xml:space="preserve">
          <source>All dependent fixtures will also be created.</source>
          <target state="translated">所有依赖的固定装置也将被创建。</target>
        </trans-unit>
        <trans-unit id="9c1eb49d0577b00ce13951634fe4705eef6c64b7" translate="yes" xml:space="preserve">
          <source>All direct permissions that the user has. The array is indexed by the permission names.</source>
          <target state="translated">用户拥有的所有直接权限。数组以权限名称为索引。</target>
        </trans-unit>
        <trans-unit id="bd9dc1c9ba0079f8590a118d2e143128a314c457" translate="yes" xml:space="preserve">
          <source>All existing old attribute values will be discarded.</source>
          <target state="translated">所有现有的旧属性值将被丢弃。</target>
        </trans-unit>
        <trans-unit id="30095d31c403907368597d0ea60545093212931c" translate="yes" xml:space="preserve">
          <source>All generate the same code.</source>
          <target state="translated">都会产生同样的代码。</target>
        </trans-unit>
        <trans-unit id="40645c3ca37288d3875bd676b164fcb7a518c2f6" translate="yes" xml:space="preserve">
          <source>All index names in the Sphinx.</source>
          <target state="translated">斯芬克斯的所有索引名称。</target>
        </trans-unit>
        <trans-unit id="20a512ccb50a2d0d1bf5d0c2fd9b68f6312a2d4c" translate="yes" xml:space="preserve">
          <source>All index types in the Sphinx in format: index name =&amp;gt; index type.</source>
          <target state="translated">Sphinx中的所有索引类型均采用以下格式：索引名称=&amp;gt;索引类型。</target>
        </trans-unit>
        <trans-unit id="97999c7205e8e0f0d4e8a93c5216c5a2e0e4903e" translate="yes" xml:space="preserve">
          <source>All inherited permissions that the user has. The array is indexed by the permission names.</source>
          <target state="translated">用户拥有的所有继承权限。数组以权限名称为索引。</target>
        </trans-unit>
        <trans-unit id="c2ef6e6d53dc2ae5fe880333345a500b3b00bd98" translate="yes" xml:space="preserve">
          <source>All non-fatal PHP errors (e.g. warnings, notices) are converted into catchable exceptions.</source>
          <target state="translated">所有非致命的PHP错误(如警告、通知)都被转换为可捕获的异常。</target>
        </trans-unit>
        <trans-unit id="49c1a66eca2021f53f8721541c4d33825e4d4605" translate="yes" xml:space="preserve">
          <source>All parent child relations will be adjusted accordingly.</source>
          <target state="translated">所有的父母子女关系都会相应调整。</target>
        </trans-unit>
        <trans-unit id="b28141b01d43e6076cd3810992266a479a663ab2" translate="yes" xml:space="preserve">
          <source>All permissions in the system.</source>
          <target state="translated">系统中的所有权限。</target>
        </trans-unit>
        <trans-unit id="93b5c2e75545336a0739edf32e59148ed7586bdc" translate="yes" xml:space="preserve">
          <source>All permissions in the system. The array is indexed by the permission names.</source>
          <target state="translated">系统中的所有权限。该数组以权限名称为索引。</target>
        </trans-unit>
        <trans-unit id="9c5ea8222f2cfdc8afe85deba75358ec3f198e9b" translate="yes" xml:space="preserve">
          <source>All permissions that the role represents. The array is indexed by the permission names.</source>
          <target state="translated">角色所代表的所有权限。数组以权限名称为索引。</target>
        </trans-unit>
        <trans-unit id="ce171c8e6ce915e6946d4257ff0e49a3023402cd" translate="yes" xml:space="preserve">
          <source>All permissions that the user has. The array is indexed by the permission names.</source>
          <target state="translated">用户拥有的所有权限。数组以权限名称为索引。</target>
        </trans-unit>
        <trans-unit id="f31f4559b681040547cd4bbd1603a6d4204df8bb" translate="yes" xml:space="preserve">
          <source>All roles and permissions which have rules will be adjusted accordingly.</source>
          <target state="translated">所有有规则的角色和权限都会相应调整。</target>
        </trans-unit>
        <trans-unit id="9065999e5c68217dcd0440ae4a4be22cf916718b" translate="yes" xml:space="preserve">
          <source>All roles directly assigned to the user. The array is indexed by the role names.</source>
          <target state="translated">所有直接分配给用户的角色。该数组以角色名称为索引。</target>
        </trans-unit>
        <trans-unit id="587a0c0cfeaffe22e81eba4fae7c88460be7e960" translate="yes" xml:space="preserve">
          <source>All roles in the system.</source>
          <target state="translated">系统中的所有角色。</target>
        </trans-unit>
        <trans-unit id="cabcf662c27cbc2cbd7282da826e47be521bde59" translate="yes" xml:space="preserve">
          <source>All roles in the system. The array is indexed by the role names.</source>
          <target state="translated">系统中的所有角色。该数组以角色名称为索引。</target>
        </trans-unit>
        <trans-unit id="443d8306b5c087d1bd114698a5b70812ac0fe720" translate="yes" xml:space="preserve">
          <source>All rows of the query result. Each array element is an array representing a row of data. An empty array is returned if the query results in nothing.</source>
          <target state="translated">查询结果的所有行。每个数组元素都是代表一行数据的数组。如果查询结果为空,则返回一个空数组。</target>
        </trans-unit>
        <trans-unit id="2040f173a7a7e5bc3e7ee06f166fa2494ae39543" translate="yes" xml:space="preserve">
          <source>All schema names in the database, except system schemas</source>
          <target state="translated">除系统模式外,数据库中的所有模式名称。</target>
        </trans-unit>
        <trans-unit id="16c3c223a155ff1797fb52bafd6a098c61fc9660" translate="yes" xml:space="preserve">
          <source>All schema names in the database, except system schemas.</source>
          <target state="translated">除系统模式外,数据库中的所有模式名称。</target>
        </trans-unit>
        <trans-unit id="f16e983dcba17168dcd9f5856641a30a9208b194" translate="yes" xml:space="preserve">
          <source>All table names in the database.</source>
          <target state="translated">数据库中的所有表名。</target>
        </trans-unit>
        <trans-unit id="66895ff8052d0444fb72bf7fe94ca3acd41cee8f" translate="yes" xml:space="preserve">
          <source>All table names in the database. The names have NO schema name prefix.</source>
          <target state="translated">数据库中的所有表名。这些表名没有模式名前缀。</target>
        </trans-unit>
        <trans-unit id="5bc8a60b0a1fa2abc7ca0ad6f7c8a7f84ccb15c7" translate="yes" xml:space="preserve">
          <source>All the validators declared in the model.</source>
          <target state="translated">模型中声明的所有验证器。</target>
        </trans-unit>
        <trans-unit id="6dd3e06ecb09f23d9d45847d97f457bd5166d545" translate="yes" xml:space="preserve">
          <source>All these actions are declared through the &lt;a href=&quot;yii-rest-activecontroller#actions()-detail&quot;&gt;actions()&lt;/a&gt; method. You may configure these actions or disable some of them by overriding the &lt;code&gt;actions()&lt;/code&gt; method, like shown the following,</source>
          <target state="translated">所有这些动作都是通过&lt;a href=&quot;yii-rest-activecontroller#actions()-detail&quot;&gt;actions（）&lt;/a&gt;方法声明的。您可以通过覆盖 &lt;code&gt;actions()&lt;/code&gt; 方法来配置这些操作或禁用其中的一些操作，如下所示，</target>
        </trans-unit>
        <trans-unit id="de5621693fc76b4ddac7e4343f4e72eeb2bbebc3" translate="yes" xml:space="preserve">
          <source>All these query methods take an optional &lt;code&gt;$db&lt;/code&gt; parameter representing the &lt;a href=&quot;yii-db-connection&quot;&gt;DB connection&lt;/a&gt; that should be used to perform a DB query. If you omit this parameter, the &lt;code&gt;db&lt;/code&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt; will be used as the DB connection. Below is another example using the &lt;a href=&quot;yii-db-query#count()-detail&quot;&gt;count()&lt;/a&gt; query method:</source>
          <target state="translated">所有这些查询方法都使用一个可选的 &lt;code&gt;$db&lt;/code&gt; 参数，该参数表示应用于执行数据库查询的&lt;a href=&quot;yii-db-connection&quot;&gt;数据库连接&lt;/a&gt;。如果省略此参数，则 &lt;code&gt;db&lt;/code&gt; &lt;a href=&quot;guide-structure-application-components&quot;&gt;应用程序组件&lt;/a&gt;将用作数据库连接。下面是使用&lt;a href=&quot;yii-db-query#count()-detail&quot;&gt;count（）&lt;/a&gt;查询方法的另一个示例：</target>
        </trans-unit>
        <trans-unit id="f446f4881ed2b86a801a303b9c185ef4ad3f4a04" translate="yes" xml:space="preserve">
          <source>All these session classes support the same set of API methods. As a result, you can switch to a different session storage class without the need to modify your application code that uses sessions.</source>
          <target state="translated">所有这些会话类都支持相同的API方法集。因此,您可以切换到不同的会话存储类,而无需修改使用会话的应用程序代码。</target>
        </trans-unit>
        <trans-unit id="4ca66882744c7e48dd09a65f5bc6d535213cf836" translate="yes" xml:space="preserve">
          <source>All these tools are accessible through the command &lt;code&gt;yii migrate&lt;/code&gt;. In this section we will describe in detail how to accomplish various tasks using these tools. You may also get the usage of each tool via the help command &lt;code&gt;yii help migrate&lt;/code&gt;.</source>
          <target state="translated">所有这些工具都可以通过 &lt;code&gt;yii migrate&lt;/code&gt; 命令访问。在本节中，我们将详细描述如何使用这些工具完成各种任务。您还可以通过help命令 &lt;code&gt;yii help migrate&lt;/code&gt; 获得每个工具的用法。</target>
        </trans-unit>
        <trans-unit id="8a689f25bb0e0052fbc2678ff63894b5fb2d53ce" translate="yes" xml:space="preserve">
          <source>All three operations: insert, update, delete. This is a shortcut of the expression: OP_INSERT | OP_UPDATE | OP_DELETE.</source>
          <target state="translated">都是三种操作:插入、更新、删除。这是表达式的快捷方式。OP_INSERT | OP_UPDATE | OP_DELETE.</target>
        </trans-unit>
        <trans-unit id="fe07d83e6a842570b38a8fdebdb5b164b9e561bb" translate="yes" xml:space="preserve">
          <source>All translations are saved under the &lt;a href=&quot;yii-i18n-gettextmessagesource#%24basePath-detail&quot;&gt;$basePath&lt;/a&gt; directory.</source>
          <target state="translated">所有翻译都保存在&lt;a href=&quot;yii-i18n-gettextmessagesource#%24basePath-detail&quot;&gt;$ basePath&lt;/a&gt;目录下。</target>
        </trans-unit>
        <trans-unit id="b4b2e8d98dccc862c58d92ce93877fb28c544eb5" translate="yes" xml:space="preserve">
          <source>All unique foreign key pairs if the table is a junction table, or false if the table is not a junction table.</source>
          <target state="translated">如果该表是结表,则所有唯一的外键对,如果该表不是结表,则为假。</target>
        </trans-unit>
        <trans-unit id="a19feb5c65bdaa663207b8342675f446d60ff3f9" translate="yes" xml:space="preserve">
          <source>All unique indexes for the given table.</source>
          <target state="translated">给定表格的所有唯一索引。</target>
        </trans-unit>
        <trans-unit id="2c7af4ac58c49f72104dc4a2376edb8b74d00bf0" translate="yes" xml:space="preserve">
          <source>All view names in the database.</source>
          <target state="translated">数据库中的所有视图名称。</target>
        </trans-unit>
        <trans-unit id="0bdf15cdd01c18835d7af81433996ddc6048015d" translate="yes" xml:space="preserve">
          <source>All views names in the database. The names have NO schema name prefix.</source>
          <target state="translated">数据库中的所有视图名称。这些名称没有模式名前缀。</target>
        </trans-unit>
        <trans-unit id="b1d7cc06bc7814c3560e7b7910d26b209252bd3e" translate="yes" xml:space="preserve">
          <source>Allow all guest (not yet authenticated) users to access the &lt;code&gt;login&lt;/code&gt; and &lt;code&gt;signup&lt;/code&gt; actions. The &lt;code&gt;roles&lt;/code&gt; option contains a question mark &lt;code&gt;?&lt;/code&gt; which is a special token representing &quot;guest users&quot;.</source>
          <target state="translated">允许所有来宾（尚未验证）用户访问 &lt;code&gt;login&lt;/code&gt; 和 &lt;code&gt;signup&lt;/code&gt; 操作。该 &lt;code&gt;roles&lt;/code&gt; 选项包含一个问号 &lt;code&gt;?&lt;/code&gt; 这是代表&amp;ldquo;访客用户&amp;rdquo;的特殊令牌。</target>
        </trans-unit>
        <trans-unit id="89f64f45766a4fe32f0af3d9e8cb4a72cbb92408" translate="yes" xml:space="preserve">
          <source>Allow authenticated users to access the &lt;code&gt;logout&lt;/code&gt; action. The &lt;code&gt;@&lt;/code&gt; character is another special token representing &quot;authenticated users&quot;.</source>
          <target state="translated">允许经过身份验证的用户访问 &lt;code&gt;logout&lt;/code&gt; 操作。该 &lt;code&gt;@&lt;/code&gt; 字符是另一种特殊的记号代表&amp;ldquo;身份验证的用户&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="70b32974d681513bbaf733c546b98fd50c460985" translate="yes" xml:space="preserve">
          <source>Allow the extended HtmlPurifier class to set some default config options.</source>
          <target state="translated">允许扩展的HtmlPurifier类设置一些默认的配置选项。</target>
        </trans-unit>
        <trans-unit id="c913a724c8c7d0059ffbd3514b912531d5611cfa" translate="yes" xml:space="preserve">
          <source>Allowed columns for GridView.</source>
          <target state="translated">GridView允许的列。</target>
        </trans-unit>
        <trans-unit id="e124d090eb43939fe0291502d5cc74a464358269" translate="yes" xml:space="preserve">
          <source>Allows issuing all supported commands via magic methods.</source>
          <target state="translated">允许通过魔术方式发出所有支持的命令。</target>
        </trans-unit>
        <trans-unit id="13379886bc305f363f910d0c0391fff81bf651f2" translate="yes" xml:space="preserve">
          <source>Allows you to combine and compress your JavaScript and CSS files.</source>
          <target state="translated">允许你组合和压缩你的JavaScript和CSS文件。</target>
        </trans-unit>
        <trans-unit id="4956941ad7c122256fa27a787a4847c237721ddb" translate="yes" xml:space="preserve">
          <source>Allows you to flush cache.</source>
          <target state="translated">允许你刷新缓存。</target>
        </trans-unit>
        <trans-unit id="a605907c306161ff1d007ffc83606f463bef1e84" translate="yes" xml:space="preserve">
          <source>Already loaded bundles list.</source>
          <target state="translated">已经加载的捆绑列表。</target>
        </trans-unit>
        <trans-unit id="c236c4714d489f49080f3baed53b322e0a7afff5" translate="yes" xml:space="preserve">
          <source>Also a default &lt;a href=&quot;yii-db-connection#%24tablePrefix-detail&quot;&gt;tablePrefix&lt;/a&gt; can be applied. For example if &lt;a href=&quot;yii-db-connection#%24tablePrefix-detail&quot;&gt;tablePrefix&lt;/a&gt; is &lt;code&gt;tbl_&lt;/code&gt;, &lt;code&gt;Customer&lt;/code&gt; becomes &lt;code&gt;tbl_customer&lt;/code&gt; and &lt;code&gt;OrderItem&lt;/code&gt; becomes &lt;code&gt;tbl_order_item&lt;/code&gt;.</source>
          <target state="translated">也可以应用默认的&lt;a href=&quot;yii-db-connection#%24tablePrefix-detail&quot;&gt;tablePrefix&lt;/a&gt;。例如，如果&lt;a href=&quot;yii-db-connection#%24tablePrefix-detail&quot;&gt;tablePrefix&lt;/a&gt;为 &lt;code&gt;tbl_&lt;/code&gt; ，则 &lt;code&gt;Customer&lt;/code&gt; 变为 &lt;code&gt;tbl_customer&lt;/code&gt; ,而 &lt;code&gt;OrderItem&lt;/code&gt; 变为 &lt;code&gt;tbl_order_item&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e835a0cd5faac8a9e0b272cbb647bcd861436d1f" translate="yes" xml:space="preserve">
          <source>Also a default &lt;a href=&quot;yii-db-connection#%24tablePrefix-detail&quot;&gt;tablePrefix&lt;/a&gt; can be applied. Implementation instructions are in the &lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;&quot;Quoting Tables&quot; section of the &quot;Database Access Objects&quot; guide&lt;/a&gt;.</source>
          <target state="translated">也可以应用默认的&lt;a href=&quot;yii-db-connection#%24tablePrefix-detail&quot;&gt;tablePrefix&lt;/a&gt;。实现说明在&lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;&amp;ldquo;数据库访问对象&amp;rdquo;指南&lt;/a&gt;的&amp;ldquo;报价表&amp;rdquo;部分中。</target>
        </trans-unit>
        <trans-unit id="7bac50868a3df10c590b7bb6d0bd54b810f7e28a" translate="yes" xml:space="preserve">
          <source>Also check the section on &lt;a href=&quot;guide-rest-controllers#cors&quot;&gt;REST Controllers&lt;/a&gt; if you want to add the CORS filter to an &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii\rest\ActiveController&lt;/a&gt; class in your API.</source>
          <target state="translated">如果要将CORS过滤器添加到API中的&lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii \ rest \ ActiveController&lt;/a&gt;类，也请检查&lt;a href=&quot;guide-rest-controllers#cors&quot;&gt;REST控制器&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="cf264927b1e48142dd15a8f161eab81e37ce50ef" translate="yes" xml:space="preserve">
          <source>Also note that if you modify RBAC items, rules or parent-child relationships from outside of this component, you have to manually call &lt;a href=&quot;yii-mongodb-rbac-mongodbmanager#invalidateCache()-detail&quot;&gt;invalidateCache()&lt;/a&gt; to ensure data consistency.</source>
          <target state="translated">还要注意，如果您从此组件外部修改RBAC项，规则或父子关系，则必须手动调用&lt;a href=&quot;yii-mongodb-rbac-mongodbmanager#invalidateCache()-detail&quot;&gt;invalidateCache（）&lt;/a&gt;以确保数据一致性。</target>
        </trans-unit>
        <trans-unit id="2cf5efa787da5c95c7e39e4f9ff51ef20f2ae782" translate="yes" xml:space="preserve">
          <source>Also note that if you modify RBAC items, rules or parent-child relationships from outside of this component, you have to manually call &lt;a href=&quot;yii-rbac-dbmanager#invalidateCache()-detail&quot;&gt;invalidateCache()&lt;/a&gt; to ensure data consistency.</source>
          <target state="translated">还要注意，如果您从此组件外部修改RBAC项，规则或父子关系，则必须手动调用&lt;a href=&quot;yii-rbac-dbmanager#invalidateCache()-detail&quot;&gt;invalidateCache（）&lt;/a&gt;以确保数据一致性。</target>
        </trans-unit>
        <trans-unit id="e749c872a8d11043270ddc15d3ddc5047612ec70" translate="yes" xml:space="preserve">
          <source>Also note that the created command is not executed until &lt;a href=&quot;yii-db-command#execute()-detail&quot;&gt;execute()&lt;/a&gt; is called.</source>
          <target state="translated">还要注意，只有在调用&lt;a href=&quot;yii-db-command#execute()-detail&quot;&gt;execute（）&lt;/a&gt;之前，才会执行创建的命令。</target>
        </trans-unit>
        <trans-unit id="640c87db9d516fbe9022c9884ac6180c5701b031" translate="yes" xml:space="preserve">
          <source>Also note that when running an HTTPS server, you need to add &lt;code&gt;fastcgi_param HTTPS on;&lt;/code&gt; so that Yii can properly detect if a connection is secure.</source>
          <target state="translated">另外请注意，在运行HTTPS服务器时，需要在 &lt;code&gt;fastcgi_param HTTPS on;&lt;/code&gt; 添加fastcgi_param。以便Yii可以正确检测连接是否安全。</target>
        </trans-unit>
        <trans-unit id="5ec50f40edb3f2b766e3cc97860ce4af213ba0ac" translate="yes" xml:space="preserve">
          <source>Also the &lt;a href=&quot;guide-concept-autoloading&quot;&gt;guide section on autoloading&lt;/a&gt;.</source>
          <target state="translated">也是&lt;a href=&quot;guide-concept-autoloading&quot;&gt;有关自动加载&lt;/a&gt;的指南部分。</target>
        </trans-unit>
        <trans-unit id="4c2ca5ee01e5ea2566eac9238aecd49623123d18" translate="yes" xml:space="preserve">
          <source>Also, if &lt;a href=&quot;yii-grid-datacolumn#%24label-detail&quot;&gt;$label&lt;/a&gt; is not specified, the label associated with the attribute will be displayed.</source>
          <target state="translated">另外，如果未指定&lt;a href=&quot;yii-grid-datacolumn#%24label-detail&quot;&gt;$ label&lt;/a&gt;，则将显示与属性关联的标签。</target>
        </trans-unit>
        <trans-unit id="6728faa4c0ff27813fefe7730ebc6cbb518d8c08" translate="yes" xml:space="preserve">
          <source>Also, when specifying the &lt;a href=&quot;yii-data-sort#%24defaultOrder-detail&quot;&gt;defaultOrder&lt;/a&gt; for sorting, you need to use the relation name instead of the alias:</source>
          <target state="translated">另外，在指定&lt;a href=&quot;yii-data-sort#%24defaultOrder-detail&quot;&gt;defaultOrder&lt;/a&gt;进行排序时，您需要使用关系名称而不是别名：</target>
        </trans-unit>
        <trans-unit id="729591bc23d4755d39dd88b21625254e3d8a9dd8" translate="yes" xml:space="preserve">
          <source>Also, you do not need to specify the data for auto-incremental columns. Yii will automatically fill the actual values into the rows when the fixture is being loaded.</source>
          <target state="translated">另外,你不需要为自动递增的列指定数据,Yii会在加载夹具时自动将实际值填入行中。Yii会在加载夹具时自动将实际值填入行中。</target>
        </trans-unit>
        <trans-unit id="1de40cf7f3ffee92547f9ab7afccf9c97fa07a77" translate="yes" xml:space="preserve">
          <source>Also, you may use options to dynamically change parameters for extraction.</source>
          <target state="translated">此外,您还可以使用选项动态改变提取的参数。</target>
        </trans-unit>
        <trans-unit id="c260a4720d37123d84dfb4920076a81a3eb7bcbc" translate="yes" xml:space="preserve">
          <source>Alternatively this can be a string prefixed with &lt;code&gt;php:&lt;/code&gt; representing a format that can be recognized by the PHP &lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;date()&lt;/a&gt;-function.</source>
          <target state="translated">另外，它可以是一个前缀为 &lt;code&gt;php:&lt;/code&gt; 的字符串：表示可以由PHP &lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;date（）&lt;/a&gt;函数识别的格式。</target>
        </trans-unit>
        <trans-unit id="c6ccef770a642e1e25e7ccbdc11a252cad1f7182" translate="yes" xml:space="preserve">
          <source>Alternatively this can be a string prefixed with &lt;code&gt;php:&lt;/code&gt; representing a format that can be recognized by the PHP Datetime class. Please refer to &lt;a href=&quot;http://php.net/manual/en/datetime.createfromformat.php&quot;&gt;http://php.net/manual/en/datetime.createfromformat.php&lt;/a&gt; on supported formats.</source>
          <target state="translated">另外，它可以是一个以 &lt;code&gt;php:&lt;/code&gt; 为前缀的字符串，表示PHP Datetime类可以识别的格式。请参阅&lt;a href=&quot;http://php.net/manual/en/datetime.createfromformat.php&quot;&gt;http://php.net/manual/en/datetime.createfromformat.php&lt;/a&gt;上支持的格式。</target>
        </trans-unit>
        <trans-unit id="0f2003b56529b17146d488aa85a5c2b3a97ec5e0" translate="yes" xml:space="preserve">
          <source>Alternatively, this can be accomplished with the following migration:</source>
          <target state="translated">另外,也可以通过以下迁移来实现。</target>
        </trans-unit>
        <trans-unit id="f53a7da871abb541ee9f314f53e94350ce51ec87" translate="yes" xml:space="preserve">
          <source>Alternatively, you may attach event handlers during the &lt;a href=&quot;guide-runtime-bootstrapping&quot;&gt;bootstrapping process&lt;/a&gt; after the application instance is created. For example:</source>
          <target state="translated">另外，您可以在创建应用程序实例后的&lt;a href=&quot;guide-runtime-bootstrapping&quot;&gt;引导过程中&lt;/a&gt;附加事件处理程序。例如：</target>
        </trans-unit>
        <trans-unit id="79c43c5191036dd4f0991db1c610a68306f8f3c9" translate="yes" xml:space="preserve">
          <source>Alternatively, you may use the following more &quot;classic&quot; syntax to perform ad hoc data validation:</source>
          <target state="translated">另外,你也可以使用以下更 &quot;经典 &quot;的语法来执行特殊的数据验证。</target>
        </trans-unit>
        <trans-unit id="05d375712f127c63526124e97277c237770534ed" translate="yes" xml:space="preserve">
          <source>Alternatively, you may use the following more &quot;classic&quot; syntax to perform ad-hoc data validation:</source>
          <target state="translated">另外,你也可以使用以下更 &quot;经典 &quot;的语法来执行特殊的数据验证。</target>
        </trans-unit>
        <trans-unit id="d1986782af17e3e09c03278962231b9042e55a8b" translate="yes" xml:space="preserve">
          <source>Alternatives are searched using the following steps:</source>
          <target state="translated">使用以下步骤搜索替代品。</target>
        </trans-unit>
        <trans-unit id="d8aef0bafdb8a209f9fe0e79528fd32a11e9b3a4" translate="yes" xml:space="preserve">
          <source>Always call the parent constructor &lt;em&gt;at the end&lt;/em&gt; of your overriding constructor.</source>
          <target state="translated">始终&lt;em&gt;在&lt;/em&gt;覆盖的构造函数&lt;em&gt;的末尾&lt;/em&gt;调用父构造函数。</target>
        </trans-unit>
        <trans-unit id="f84b5f4859a3bc59abcb3bbccd2c6627f3ada54e" translate="yes" xml:space="preserve">
          <source>Among the above steps, if any error occurs, a &lt;a href=&quot;yii-web-notfoundhttpexception&quot;&gt;yii\web\NotFoundHttpException&lt;/a&gt; will be thrown, indicating the failure of the routing process.</source>
          <target state="translated">上述步骤中，如果发生错误，将抛出&lt;a href=&quot;yii-web-notfoundhttpexception&quot;&gt;yii \ web \ NotFoundHttpException&lt;/a&gt;异常，表明路由过程失败。</target>
        </trans-unit>
        <trans-unit id="68db5115f7d4b6e2c091e3ce0a8e9eec3a46ecc8" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Upload&lt;/code&gt; object is usually created by calling &lt;a href=&quot;yii-mongodb-file-collection#createUpload()-detail&quot;&gt;yii\mongodb\file\Collection::createUpload()&lt;/a&gt;.</source>
          <target state="translated">通常通过调用&lt;a href=&quot;yii-mongodb-file-collection#createUpload()-detail&quot;&gt;yii \ mongodb \ file \ Collection :: createUpload（）&lt;/a&gt;创建一个 &lt;code&gt;Upload&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="5f7b917116f3b793bcdc16396a6d52a053b995c3" translate="yes" xml:space="preserve">
          <source>An ActiveQuery can be a normal query or be used in a relational context.</source>
          <target state="translated">一个ActiveQuery可以是一个普通的查询,也可以在关系上下文中使用。</target>
        </trans-unit>
        <trans-unit id="dcd29613666219a97f2491f0610be4945ceed298" translate="yes" xml:space="preserve">
          <source>An Example</source>
          <target state="translated">一个例子</target>
        </trans-unit>
        <trans-unit id="f5e3e0045eb3628e06f8996fcb72c6b51361e92d" translate="yes" xml:space="preserve">
          <source>An HTML hyperlink that can be displayed on your Web page showing &quot;Powered by Yii Framework&quot; information</source>
          <target state="translated">一个HTML超链接,可以在你的网页上显示 &quot;Powered by Yii Framework &quot;的信息。</target>
        </trans-unit>
        <trans-unit id="3827428f9514996f16e7313c06a61493b11d9f31" translate="yes" xml:space="preserve">
          <source>An ID that identifies a Memcached instance.</source>
          <target state="translated">一个标识Memcached实例的ID。</target>
        </trans-unit>
        <trans-unit id="e2e0b802f5121fe7c455865fb79ef40fb7501b32" translate="yes" xml:space="preserve">
          <source>An ID that identifies a Memcached instance. This property is used only when &lt;a href=&quot;yii-caching-memcache#%24useMemcached-detail&quot;&gt;$useMemcached&lt;/a&gt; is true. By default the Memcached instances are destroyed at the end of the request. To create an instance that persists between requests, you may specify a unique ID for the instance. All instances created with the same ID will share the same connection.</source>
          <target state="translated">标识Memcached实例的ID。仅当&lt;a href=&quot;yii-caching-memcache#%24useMemcached-detail&quot;&gt;$ useMemcached&lt;/a&gt;为true 时，才使用此属性。默认情况下，Memcached实例在请求结束时被销毁。要创建在请求之间保留的实例，可以为该实例指定唯一的ID。使用相同ID创建的所有实例将共享相同的连接。</target>
        </trans-unit>
        <trans-unit id="39e68202ebe7dcd417bc556c1b5a2fe608c83388" translate="yes" xml:space="preserve">
          <source>An ID that uniquely identifies a user identity.</source>
          <target state="translated">一个唯一标识用户身份的ID。</target>
        </trans-unit>
        <trans-unit id="f1bb64465f8820d0603bb5df7aff1fa106203f01" translate="yes" xml:space="preserve">
          <source>An ID that uniquely identifies the data provider among all data providers.</source>
          <target state="translated">在所有数据提供者中唯一标识数据提供者的ID。</target>
        </trans-unit>
        <trans-unit id="4e8d4e569a9b7e3cdd951196b309931ecfd7c7e6" translate="yes" xml:space="preserve">
          <source>An ID that uniquely identifies the data provider among all data providers. Generated automatically the following way in case it is not set:</source>
          <target state="translated">在所有数据提供者中唯一标识数据提供者的ID。如果没有设置,则按以下方式自动生成:</target>
        </trans-unit>
        <trans-unit id="55895ddbe561fe9e1a349f6a518751396f53ba0e" translate="yes" xml:space="preserve">
          <source>An ID that uniquely identifies this code file.</source>
          <target state="translated">唯一标识该代码文件的ID。</target>
        </trans-unit>
        <trans-unit id="994046f96305a62076f9545c9db3320de4aeb42f" translate="yes" xml:space="preserve">
          <source>An ID that uniquely identifies this module among other modules which have the same &lt;a href=&quot;yii-base-module#%24module-detail&quot;&gt;parent&lt;/a&gt;.</source>
          <target state="translated">在具有相同&lt;a href=&quot;yii-base-module#%24module-detail&quot;&gt;父级的&lt;/a&gt;其他模块中唯一标识此模块的ID 。</target>
        </trans-unit>
        <trans-unit id="b6641f53a376ff2b925592e023ec06e8137e5272" translate="yes" xml:space="preserve">
          <source>An action filter will participate in the action execution workflow by responding to the &lt;code&gt;beforeAction&lt;/code&gt; and &lt;code&gt;afterAction&lt;/code&gt; events triggered by modules and controllers.</source>
          <target state="translated">动作过滤器将通过响应模块和控制器触发的 &lt;code&gt;beforeAction&lt;/code&gt; 和 &lt;code&gt;afterAction&lt;/code&gt; 事件来参与动作执行工作流程。</target>
        </trans-unit>
        <trans-unit id="76583a56230ab0c84d077b55ce3437dcbea6caa8" translate="yes" xml:space="preserve">
          <source>An action is often designed to perform a particular manipulation of a resource. For this reason, action IDs are usually verbs, such as &lt;code&gt;view&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, etc.</source>
          <target state="translated">动作通常被设计为执行对资源的特定操纵。因此，动作ID通常是动词，例如 &lt;code&gt;view&lt;/code&gt; ， &lt;code&gt;update&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="ad2acdfb536ae1ee00f3549e05e518cd37a02b89" translate="yes" xml:space="preserve">
          <source>An active attribute is one that is subject to validation in the current scenario. The returned array should be in the following format:</source>
          <target state="translated">活动属性是指在当前场景中需要验证的属性。返回的数组应采用以下格式。</target>
        </trans-unit>
        <trans-unit id="15d4ac9aa881b90dc995721b888a5caac29fb9a2" translate="yes" xml:space="preserve">
          <source>An alias is automatically defined for each &lt;a href=&quot;guide-structure-extensions&quot;&gt;extension&lt;/a&gt; that is installed via Composer. Each alias is named after the root namespace of the extension as declared in its &lt;code&gt;composer.json&lt;/code&gt; file, and each alias represents the root directory of the package. For example, if you install the &lt;code&gt;yiisoft/yii2-jui&lt;/code&gt; extension, you will automatically have the alias &lt;code&gt;@yii/jui&lt;/code&gt; defined during the &lt;a href=&quot;guide-runtime-bootstrapping&quot;&gt;bootstrapping&lt;/a&gt; stage, equivalent to:</source>
          <target state="translated">将自动为通过Composer安装的每个&lt;a href=&quot;guide-structure-extensions&quot;&gt;扩展&lt;/a&gt;定义别名。每个别名均以其 &lt;code&gt;composer.json&lt;/code&gt; 文件中声明的扩展名的根名称空间命名，并且每个别名代表包的根目录。例如，如果安装 &lt;code&gt;yiisoft/yii2-jui&lt;/code&gt; 扩展名，则会在&lt;a href=&quot;guide-runtime-bootstrapping&quot;&gt;引导&lt;/a&gt;阶段自动定义别名 &lt;code&gt;@yii/jui&lt;/code&gt; ，等效于：</target>
        </trans-unit>
        <trans-unit id="e45d08c213e323935a70d0d53a9dbdc11a20cf39" translate="yes" xml:space="preserve">
          <source>An anonymous function can be used in the grouping array as well.</source>
          <target state="translated">在分组数组中也可以使用匿名函数。</target>
        </trans-unit>
        <trans-unit id="9e37a78e43927d066fb74c4ccccb8523ecc437e6" translate="yes" xml:space="preserve">
          <source>An anonymous function can be used in the grouping array as well:</source>
          <target state="translated">在分组数组中也可以使用匿名函数。</target>
        </trans-unit>
        <trans-unit id="7b3fa12355abbaf51626b5f0585390b7306e300c" translate="yes" xml:space="preserve">
          <source>An anonymous function or a string that is used to determine the value to display in the current column.</source>
          <target state="translated">一个匿名函数或一个字符串,用于确定在当前列中显示的值。</target>
        </trans-unit>
        <trans-unit id="b032769fab5a8a55d09627d1a24f55398666cf84" translate="yes" xml:space="preserve">
          <source>An anonymous function or the name of a model class method that returns the client validation code.</source>
          <target state="translated">一个匿名函数或模型类方法的名称,返回客户端验证码。</target>
        </trans-unit>
        <trans-unit id="9556326967ea8855f2fe17a373b7f4f6ae574b34" translate="yes" xml:space="preserve">
          <source>An anonymous function or the name of a model class method that returns the client validation code. The signature of the method should be like the following:</source>
          <target state="translated">一个匿名函数或一个模型类方法的名称,用于返回客户端验证码。该方法的签名应如下:</target>
        </trans-unit>
        <trans-unit id="63ffc7ecc2dbdb7f2726700e7689e8567f4b12e2" translate="yes" xml:space="preserve">
          <source>An anonymous function or the name of a model class method that will be called to perform the actual validation.</source>
          <target state="translated">一个匿名函数或模型类方法的名称,将被调用来执行实际验证。</target>
        </trans-unit>
        <trans-unit id="e106efbd82afcbd0a191d1e850798bd349daaea8" translate="yes" xml:space="preserve">
          <source>An anonymous function or the name of a model class method that will be called to perform the actual validation. The signature of the method should be like the following:</source>
          <target state="translated">一个匿名函数或模型类方法的名称,它将被调用来执行实际验证。该方法的签名应如下:</target>
        </trans-unit>
        <trans-unit id="37609269ef4e8aa8f629a9935f45706e4db8b1a7" translate="yes" xml:space="preserve">
          <source>An anonymous function that is called once AFTER rendering each data model.</source>
          <target state="translated">在渲染每个数据模型后调用一次的匿名函数。</target>
        </trans-unit>
        <trans-unit id="da216a5b133b1c870b3ccd508838592e7461f0fd" translate="yes" xml:space="preserve">
          <source>An anonymous function that is called once AFTER rendering each data model. It should have the similar signature as &lt;a href=&quot;yii-grid-gridview#%24rowOptions-detail&quot;&gt;$rowOptions&lt;/a&gt;. The return result of the function will be rendered directly.</source>
          <target state="translated">呈现每个数据模型后调用一次的匿名函数。它应该具有与&lt;a href=&quot;yii-grid-gridview#%24rowOptions-detail&quot;&gt;$ rowOptions&lt;/a&gt;类似的签名。该函数的返回结果将直接呈现。</target>
        </trans-unit>
        <trans-unit id="9f390b9f47fb8d5ae21fd8606abfcdcf6bbf0458" translate="yes" xml:space="preserve">
          <source>An anonymous function that is called once BEFORE rendering each data model.</source>
          <target state="translated">一个匿名函数,在渲染每个数据模型之前被调用一次。</target>
        </trans-unit>
        <trans-unit id="de3dcd4ae79c94678f4545a40d7162ce8726a7b0" translate="yes" xml:space="preserve">
          <source>An anonymous function that is called once BEFORE rendering each data model. It should have the following signature:</source>
          <target state="translated">一个匿名函数,在渲染每个数据模型之前被调用一次。它应该有以下签名。</target>
        </trans-unit>
        <trans-unit id="4ca229868fdb965d285b11aa16685e19387792b0" translate="yes" xml:space="preserve">
          <source>An anonymous function that is called once BEFORE rendering each data model. It should have the similar signature as &lt;a href=&quot;yii-grid-gridview#%24rowOptions-detail&quot;&gt;$rowOptions&lt;/a&gt;. The return result of the function will be rendered directly.</source>
          <target state="translated">呈现每个数据模型之前调用一次的匿名函数。它应该具有与&lt;a href=&quot;yii-grid-gridview#%24rowOptions-detail&quot;&gt;$ rowOptions&lt;/a&gt;类似的签名。该函数的返回结果将直接呈现。</target>
        </trans-unit>
        <trans-unit id="e34c2855e943fe65b1de67dc9d4d3cf9fbde5001" translate="yes" xml:space="preserve">
          <source>An anonymous function will be called after the config was created. The signature should be: &lt;code&gt;function($config)&lt;/code&gt; where &lt;code&gt;$config&lt;/code&gt; will be an instance of &lt;code&gt;HTMLPurifier_Config&lt;/code&gt;.</source>
          <target state="translated">创建配置后，将调用匿名函数。签名应为： &lt;code&gt;function($config)&lt;/code&gt; ，其中 &lt;code&gt;$config&lt;/code&gt; 将是 &lt;code&gt;HTMLPurifier_Config&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="dad1b0c757a6277bd06227c04820722580d4926e" translate="yes" xml:space="preserve">
          <source>An application component is created the first time it is accessed through the above expression. Any further accesses will return the same component instance.</source>
          <target state="translated">通过上述表达式第一次访问应用程序组件时,就会创建一个应用程序组件。任何进一步的访问将返回相同的组件实例。</target>
        </trans-unit>
        <trans-unit id="01cc576b282109eafacf8514a86726101330e5ca" translate="yes" xml:space="preserve">
          <source>An application triggers several events during the lifecycle of handling a request. You may attach event handlers to these events in application configurations as follows:</source>
          <target state="translated">应用程序在处理请求的生命周期中会触发几个事件。您可以在应用程序配置中为这些事件附加事件处理程序,具体如下。</target>
        </trans-unit>
        <trans-unit id="4939fe8718deb509a193bdbe180c91916018c9f3" translate="yes" xml:space="preserve">
          <source>An arbitrary string to convert</source>
          <target state="translated">要转换的任意字符串</target>
        </trans-unit>
        <trans-unit id="f5eac93d14543fe046d28ada4ff59f2f51633b76" translate="yes" xml:space="preserve">
          <source>An array containing formatting values. You can pass any of the &lt;code&gt;FG_*&lt;/code&gt;, &lt;code&gt;BG_*&lt;/code&gt; and &lt;code&gt;TEXT_*&lt;/code&gt; constants and also &lt;a href=&quot;yii-helpers-baseconsole#xtermFgColor()-detail&quot;&gt;xtermFgColor()&lt;/a&gt; and &lt;a href=&quot;yii-helpers-baseconsole#xtermBgColor()-detail&quot;&gt;xtermBgColor()&lt;/a&gt; to specify a format.</source>
          <target state="translated">包含格式值的数组。您可以传递 &lt;code&gt;FG_*&lt;/code&gt; ， &lt;code&gt;BG_*&lt;/code&gt; 和 &lt;code&gt;TEXT_*&lt;/code&gt; 常量，也可以&lt;a href=&quot;yii-helpers-baseconsole#xtermFgColor()-detail&quot;&gt;传递xtermFgColor（）&lt;/a&gt;和&lt;a href=&quot;yii-helpers-baseconsole#xtermBgColor()-detail&quot;&gt;xtermBgColor（）&lt;/a&gt;来指定格式。</target>
        </trans-unit>
        <trans-unit id="f16780050f50f5c622df86abf6605f999c632958" translate="yes" xml:space="preserve">
          <source>An array containing items extracted, or &lt;code&gt;FALSE&lt;/code&gt; on error.</source>
          <target state="translated">包含提取的项目的数组，或者在错误时为 &lt;code&gt;FALSE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c62a8cb4a800b954b103106c14ab0f1f060b6693" translate="yes" xml:space="preserve">
          <source>An array is associative if all its keys are strings. If &lt;code&gt;$allStrings&lt;/code&gt; is false, then an array will be treated as associative if at least one of its keys is a string.</source>
          <target state="translated">如果数组的所有键都是字符串，则它是关联的。如果 &lt;code&gt;$allStrings&lt;/code&gt; 为false，则如果数组的至少一个键为字符串，则将其视为关联数组。</target>
        </trans-unit>
        <trans-unit id="bea73ff8efa8d1cfa55a156a2b82d8f411743fb7" translate="yes" xml:space="preserve">
          <source>An array is indexed if all its keys are integers. If &lt;code&gt;$consecutive&lt;/code&gt; is true, then the array keys must be a consecutive sequence starting from 0.</source>
          <target state="translated">如果数组的所有键均为整数，则为该索引建立索引。如果 &lt;code&gt;$consecutive&lt;/code&gt; 为true，则数组键必须是从0开始的连续序列。</target>
        </trans-unit>
        <trans-unit id="10a085e7f12731a15243aa39b98a39b18be5e94d" translate="yes" xml:space="preserve">
          <source>An array of ($width, $height) or false when it was not able to determine size.</source>
          <target state="translated">($width,$height)的数组,如果不能确定大小,则为false。</target>
        </trans-unit>
        <trans-unit id="046b41e47941ac92f1a0461797e9d7df957763e6" translate="yes" xml:space="preserve">
          <source>An array of ActiveRecord instance, or an empty array if nothing matches.</source>
          <target state="translated">ActiveRecord实例的数组,如果没有匹配的,则为空数组。</target>
        </trans-unit>
        <trans-unit id="99c5694acf151e5c6d9c2fe47335dbd980a78453" translate="yes" xml:space="preserve">
          <source>An array of ActiveRecord instances, or an empty array if nothing matches.</source>
          <target state="translated">ActiveRecord实例的数组,如果没有匹配的实例,则为空数组。</target>
        </trans-unit>
        <trans-unit id="b2af5b72183736f66ca9dd0090eaa9310265ed39" translate="yes" xml:space="preserve">
          <source>An array of action IDs entered by the user</source>
          <target state="translated">用户输入的动作ID的数组。</target>
        </trans-unit>
        <trans-unit id="715de38ab6f60ca186ae18b45bab38b4cdb659eb" translate="yes" xml:space="preserve">
          <source>An array of an additional data stored in a cache entry or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">存储在缓存项中的附加数据的数组，或者为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="33157dc338986f271f067a56cb6a1e52f66e1806" translate="yes" xml:space="preserve">
          <source>An array of groups to maintain a statistics aggregation for.</source>
          <target state="translated">维持统计汇总的组数组。</target>
        </trans-unit>
        <trans-unit id="51c051f2cd17dba0d519142fab581cb14d022385" translate="yes" xml:space="preserve">
          <source>An array of models to be validated.</source>
          <target state="translated">一系列有待审定的模型;</target>
        </trans-unit>
        <trans-unit id="a2ce0ef4a8b39eec50b14b5b07c0af7ac1c66fbf" translate="yes" xml:space="preserve">
          <source>An array of parameter values indexed by parameter names</source>
          <target state="translated">以参数名称为索引的参数值数组。</target>
        </trans-unit>
        <trans-unit id="8536afd2bbd21a4482c411826842304aa0ebc1d0" translate="yes" xml:space="preserve">
          <source>An array of primaryKey values</source>
          <target state="translated">一个主键值的数组</target>
        </trans-unit>
        <trans-unit id="9924bfb27ac9b41b17797097522a6480a842f0be" translate="yes" xml:space="preserve">
          <source>An array of related records indexed by relation names.</source>
          <target state="translated">按关系名索引的相关记录数组。</target>
        </trans-unit>
        <trans-unit id="c0945d5d8b916c265e6eb9817e02b83479750152" translate="yes" xml:space="preserve">
          <source>An array of strings that should be concatenated and converted to generate the slug value.</source>
          <target state="translated">一个字符串数组,该数组应该被连接和转换以产生slug值。</target>
        </trans-unit>
        <trans-unit id="ed2c9608710e998feea635b70cb4b7fa0af7d39f" translate="yes" xml:space="preserve">
          <source>An array of two elements. The first element is the maximum number of allowed requests, and the second element is the size of the window in seconds.</source>
          <target state="translated">一个由两个元素组成的数组。第一个元素是允许的最大请求数,第二个元素是窗口的大小,单位是秒。</target>
        </trans-unit>
        <trans-unit id="75f47cd6a30047ea025987c5bc0fe9c1b65613ad" translate="yes" xml:space="preserve">
          <source>An array of two elements. The first element is the number of allowed requests, and the second element is the corresponding UNIX timestamp.</source>
          <target state="translated">一个由两个元素组成的数组。第一个元素是允许的请求数,第二个元素是相应的UNIX时间戳。</target>
        </trans-unit>
        <trans-unit id="91f49a67f81589d1280a87e801247fb4628f7f99" translate="yes" xml:space="preserve">
          <source>An array of two or three operands</source>
          <target state="translated">一个由两个或三个操作数组成的数组</target>
        </trans-unit>
        <trans-unit id="8b8864a89d7361beb1877170b5770d9d0c552067" translate="yes" xml:space="preserve">
          <source>An array will be passed to the &lt;code&gt;HTMLPurifier_Config::create()&lt;/code&gt; method.</source>
          <target state="translated">数组将传递给 &lt;code&gt;HTMLPurifier_Config::create()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="8421ad68caadfb8b4285de09200615dd0ad19075" translate="yes" xml:space="preserve">
          <source>An asset bundle can depend on other asset bundles. When registering an asset bundle with a view, all its dependent asset bundles will be automatically registered.</source>
          <target state="translated">一个资产包可以依赖其他资产包。当用视图注册一个资产包时,它的所有依赖性资产包都会被自动注册。</target>
        </trans-unit>
        <trans-unit id="5d7acac1b525a25d5ac564c48d5a327b4a522553" translate="yes" xml:space="preserve">
          <source>An asset in Yii is a file that may be referenced in a Web page. It can be a CSS file, a JavaScript file, an image or video file, etc. Assets are located in Web-accessible directories and are directly served by Web servers.</source>
          <target state="translated">Yii中的asset是一个可以在网页中引用的文件,可以是CSS文件,JavaScript文件,图片或视频文件等。它可以是一个CSS文件,一个JavaScript文件,一个图像或视频文件等。资产位于Web可访问的目录中,直接由Web服务器提供服务。</target>
        </trans-unit>
        <trans-unit id="6b5379254c0e5de439311a6f9ebf70a624e9dce0" translate="yes" xml:space="preserve">
          <source>An associative array of parameters that will be merged with the current GET parameters. If a parameter value is null, the corresponding GET parameter will be removed.</source>
          <target state="translated">将与当前GET参数合并的参数关联数组,如果一个参数值为空,则对应的GET参数将被删除。如果一个参数值为空,则相应的GET参数将被删除。</target>
        </trans-unit>
        <trans-unit id="401f9d82acc07a615b38c7fbf7727c3f010cf5af" translate="yes" xml:space="preserve">
          <source>An attribute can also be specified in terms of an array with the following elements:</source>
          <target state="translated">属性也可以用一个数组来指定,其元素如下。</target>
        </trans-unit>
        <trans-unit id="b877818fdea233e29560b1b665ce3fa3a7f984af" translate="yes" xml:space="preserve">
          <source>An attribute can be specified as a string in the format of &lt;code&gt;attribute&lt;/code&gt;, &lt;code&gt;attribute:format&lt;/code&gt; or &lt;code&gt;attribute:format:label&lt;/code&gt;, where &lt;code&gt;attribute&lt;/code&gt; refers to the attribute name, and &lt;code&gt;format&lt;/code&gt; represents the format of the attribute. The &lt;code&gt;format&lt;/code&gt; is passed to the &lt;a href=&quot;yii-i18n-formatter#format()-detail&quot;&gt;yii\i18n\Formatter::format()&lt;/a&gt; method to format an attribute value into a displayable text. Please refer to &lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii\i18n\Formatter&lt;/a&gt; for the supported types. Both &lt;code&gt;format&lt;/code&gt; and &lt;code&gt;label&lt;/code&gt; are optional. They will take default values if absent.</source>
          <target state="translated">可以将属性指定为字符串，格式为 &lt;code&gt;attribute&lt;/code&gt; ， &lt;code&gt;attribute:format&lt;/code&gt; 或 &lt;code&gt;attribute:format:label&lt;/code&gt; ，其中 &lt;code&gt;attribute&lt;/code&gt; 表示属性名称，而 &lt;code&gt;format&lt;/code&gt; 表示属性的格式。的 &lt;code&gt;format&lt;/code&gt; 传递给&lt;a href=&quot;yii-i18n-formatter#format()-detail&quot;&gt;YII \ I18N \格式化::格式（）&lt;/a&gt;方法的属性值格式化为可显示的文本。请参阅&lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii \ i18n \ Formatter&lt;/a&gt;了解支持的类型。这两种 &lt;code&gt;format&lt;/code&gt; 和 &lt;code&gt;label&lt;/code&gt; 是可选的。如果不存在，它们将采用默认值。</target>
        </trans-unit>
        <trans-unit id="853a1ed3b40f731c7d8ec6faf07576f1060842bc" translate="yes" xml:space="preserve">
          <source>An attribute expression is an attribute name prefixed and/or suffixed with array indexes. It is mainly used in tabular data input and/or input of array type. Below are some examples:</source>
          <target state="translated">属性表达式是以数组索引为前缀和/或后缀的属性名称。它主要用于表格数据输入和/或数组类型的输入。下面是一些例子。</target>
        </trans-unit>
        <trans-unit id="6921fb2e3b72ba55aeff2e010b8a995cc70d53ea" translate="yes" xml:space="preserve">
          <source>An attribute will be validated if and only if it is an active attribute declared in &lt;code&gt;scenarios()&lt;/code&gt; and is associated with one or multiple active rules declared in &lt;code&gt;rules()&lt;/code&gt;.</source>
          <target state="translated">当且仅当一个属性是在 &lt;code&gt;scenarios()&lt;/code&gt; 声明的活动属性并且与 &lt;code&gt;rules()&lt;/code&gt; 中声明的一个或多个活动规则相关联时，该属性才会被验证。</target>
        </trans-unit>
        <trans-unit id="5ae179cc9f6087ab3883ac7a187654a3fd14a97a" translate="yes" xml:space="preserve">
          <source>An easy rule to remember this is, as you see in the example above, you write the column that belongs to the related Active Record directly next to it. You see there that &lt;code&gt;customer_id&lt;/code&gt; is a property of &lt;code&gt;Order&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; is a property of &lt;code&gt;Customer&lt;/code&gt;.</source>
          <target state="translated">一个容易记住的规则是，如您在上面的示例中所看到的，您直接在其旁边编写了属于相关Active Record的列。您会在此处看到 &lt;code&gt;customer_id&lt;/code&gt; 是 &lt;code&gt;Order&lt;/code&gt; 的属性，而 &lt;code&gt;id&lt;/code&gt; 是 &lt;code&gt;Customer&lt;/code&gt; 的属性。</target>
        </trans-unit>
        <trans-unit id="ef701d29b8c899351081d907d3ed4c2615ff4474" translate="yes" xml:space="preserve">
          <source>An error code describing the status of this file uploading.</source>
          <target state="translated">描述该文件上传状态的错误代码。</target>
        </trans-unit>
        <trans-unit id="599042e6528008689b690678ed4ca7dc49a7b63e" translate="yes" xml:space="preserve">
          <source>An error message is typically logged when an unrecoverable error occurs during the execution of an application.</source>
          <target state="translated">当应用程序执行过程中发生不可恢复的错误时,通常会记录一个错误消息。</target>
        </trans-unit>
        <trans-unit id="7a376eb8d7345ba7370c5c22bae6def44179d869" translate="yes" xml:space="preserve">
          <source>An even easier way of implementing transactional migrations is to put migration code in the &lt;code&gt;safeUp()&lt;/code&gt; and &lt;code&gt;safeDown()&lt;/code&gt; methods. These two methods differ from &lt;code&gt;up()&lt;/code&gt; and &lt;code&gt;down()&lt;/code&gt; in that they are enclosed implicitly in a transaction. As a result, if any operation in these methods fails, all prior operations will be rolled back automatically.</source>
          <target state="translated">实现事务性迁移的一种甚至更简单的方法是将迁移代码放入 &lt;code&gt;safeUp()&lt;/code&gt; 和 &lt;code&gt;safeDown()&lt;/code&gt; 方法中。这两种方法与 &lt;code&gt;up()&lt;/code&gt; 和 &lt;code&gt;down()&lt;/code&gt; 的不同之处在于，它们隐式地包含在事务中。结果，如果这些方法中的任何操作失败，则所有先前的操作将自动回滚。</target>
        </trans-unit>
        <trans-unit id="a32bdea2615c873d270a8123bc4c08aa2929884b" translate="yes" xml:space="preserve">
          <source>An event handler is a &lt;a href=&quot;http://www.php.net/manual/en/language.types.callable.php&quot;&gt;PHP callback&lt;/a&gt; that gets executed when the event it is attached to is triggered. You can use any of the following callbacks:</source>
          <target state="translated">事件处理程序是一个&lt;a href=&quot;http://www.php.net/manual/en/language.types.callable.php&quot;&gt;PHP回调&lt;/a&gt;，当其附加到的事件被触发时将执行。您可以使用以下任何回调：</target>
        </trans-unit>
        <trans-unit id="08166f995bafeb8640256560deac714b3f1e3c44" translate="yes" xml:space="preserve">
          <source>An event is identified by a name that should be unique within the class it is defined at. Event names are &lt;em&gt;case-sensitive&lt;/em&gt;.</source>
          <target state="translated">事件由在其定义的类中应该唯一的名称标识。事件名称&lt;em&gt;区分大小写&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="deac1aa683c442f226ce0e882f0ee490f323a460" translate="yes" xml:space="preserve">
          <source>An event raised after executing a controller action.</source>
          <target state="translated">执行控制器动作后引发的事件。</target>
        </trans-unit>
        <trans-unit id="f033c843da0efb9e38fc36c7fa265b755d44c3e7" translate="yes" xml:space="preserve">
          <source>An event raised after the application successfully handles a request (before the response is sent out).</source>
          <target state="translated">应用程序成功处理请求后(在响应发出之前)引发的事件。</target>
        </trans-unit>
        <trans-unit id="1449dc2fc910e8ad05867a955ff0b5cc6c8b1733" translate="yes" xml:space="preserve">
          <source>An event raised at the beginning of &lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;validate()&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;validate（）&lt;/a&gt;的开头引发的事件。</target>
        </trans-unit>
        <trans-unit id="99968d4de62e7f07dd41a1afa51e7b86f6516926" translate="yes" xml:space="preserve">
          <source>An event raised at the beginning of &lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;validate()&lt;/a&gt;. You may set &lt;a href=&quot;yii-base-modelevent#%24isValid-detail&quot;&gt;yii\base\ModelEvent::$isValid&lt;/a&gt; to be false to stop the validation.</source>
          <target state="translated">在&lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;validate（）&lt;/a&gt;的开头引发的事件。您可以将&lt;a href=&quot;yii-base-modelevent#%24isValid-detail&quot;&gt;yii \ base \ ModelEvent :: $ isValid&lt;/a&gt;设置为false以停止验证。</target>
        </trans-unit>
        <trans-unit id="3c1e77871b4dee3a44a0a6dae39bb8e9673311d1" translate="yes" xml:space="preserve">
          <source>An event raised at the end of &lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;validate()&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;validate（）&lt;/a&gt;结束时引发的事件</target>
        </trans-unit>
        <trans-unit id="8d4f2b3bbca5bccfe7af783e688a14939ac01eca" translate="yes" xml:space="preserve">
          <source>An event raised before executing a controller action.</source>
          <target state="translated">在执行控制器动作前引发的事件。</target>
        </trans-unit>
        <trans-unit id="d3635a1ac16cc82cc4ccb2265fd42b1951c3164d" translate="yes" xml:space="preserve">
          <source>An event raised before executing a controller action. You may set &lt;a href=&quot;yii-base-actionevent#%24isValid-detail&quot;&gt;yii\base\ActionEvent::$isValid&lt;/a&gt; to be &lt;code&gt;false&lt;/code&gt; to cancel the action execution.</source>
          <target state="translated">在执行控制器操作之前引发的事件。您可以将&lt;a href=&quot;yii-base-actionevent#%24isValid-detail&quot;&gt;yii \ base \ ActionEvent :: $ isValid&lt;/a&gt;设置为 &lt;code&gt;false&lt;/code&gt; 以取消操作执行。</target>
        </trans-unit>
        <trans-unit id="566ae54926a8d4c3aa0c38e52be7d8142ad4d05e" translate="yes" xml:space="preserve">
          <source>An event raised before the application starts to handle a request.</source>
          <target state="translated">在应用程序开始处理请求前引发的事件。</target>
        </trans-unit>
        <trans-unit id="c6a511137f8b53b1e23ca8cdd525cf2278c1f413" translate="yes" xml:space="preserve">
          <source>An event raised right after executing a controller action.</source>
          <target state="translated">在执行控制器动作后立即引发的事件。</target>
        </trans-unit>
        <trans-unit id="3f3b7a3aacf5fe675e113cfee5dcfd81bb030dfe" translate="yes" xml:space="preserve">
          <source>An event raised right after executing a widget.</source>
          <target state="translated">执行小组件后立即引发的事件。</target>
        </trans-unit>
        <trans-unit id="1e6221131ed8cdddec54aa8caee33a1299bad447" translate="yes" xml:space="preserve">
          <source>An event raised right after executing a widget. (available since version 2.0.11)</source>
          <target state="translated">在执行小组件后立即引发的事件。(自2.0.11版起可用)</target>
        </trans-unit>
        <trans-unit id="46996b5ef305329c3c1b515f170f201bf600ce2f" translate="yes" xml:space="preserve">
          <source>An event raised right after request has been sent.</source>
          <target state="translated">在请求发送后立即引发的事件。</target>
        </trans-unit>
        <trans-unit id="8f9a7deca3f26dd6de89ff74762d7a8fee713256" translate="yes" xml:space="preserve">
          <source>An event raised right after send.</source>
          <target state="translated">发送后立即引发的事件。</target>
        </trans-unit>
        <trans-unit id="25e7e64cde22f3c8acffd0d68487bf2e1fefd6d2" translate="yes" xml:space="preserve">
          <source>An event raised right before executing a controller action.</source>
          <target state="translated">在执行控制器动作之前发生的事件。</target>
        </trans-unit>
        <trans-unit id="860fb413364a70b9476b439f28f7f972320a63cb" translate="yes" xml:space="preserve">
          <source>An event raised right before executing a controller action. You may set &lt;a href=&quot;yii-base-actionevent#%24isValid-detail&quot;&gt;yii\base\ActionEvent::$isValid&lt;/a&gt; to be false to cancel the action execution.</source>
          <target state="translated">在执行控制器操作之前引发的事件。您可以将&lt;a href=&quot;yii-base-actionevent#%24isValid-detail&quot;&gt;yii \ base \ ActionEvent :: $ isValid&lt;/a&gt;设置为false以取消操作执行。</target>
        </trans-unit>
        <trans-unit id="3933ded45ebfe0221e194511f4c49c2f07224904" translate="yes" xml:space="preserve">
          <source>An event raised right before executing a widget. (available since version 2.0.11)</source>
          <target state="translated">在执行小组件之前发生的事件。(自2.0.11版起可用)</target>
        </trans-unit>
        <trans-unit id="8774dd88209dff3924a73a6a38fc315f47b8d730" translate="yes" xml:space="preserve">
          <source>An event raised right before executing a widget. You may set &lt;a href=&quot;yii-base-widgetevent#%24isValid-detail&quot;&gt;yii\base\WidgetEvent::$isValid&lt;/a&gt; to be false to cancel the widget execution.</source>
          <target state="translated">在执行小部件之前引发的事件。您可以将&lt;a href=&quot;yii-base-widgetevent#%24isValid-detail&quot;&gt;yii \ base \ WidgetEvent :: $ isValid&lt;/a&gt;设置为false以取消小部件执行。</target>
        </trans-unit>
        <trans-unit id="2f9b7a2388b140c536366cf03c3407988ea1aa42" translate="yes" xml:space="preserve">
          <source>An event raised right before send.</source>
          <target state="translated">一个事件在发送前提出。</target>
        </trans-unit>
        <trans-unit id="e369522a4beba6aebadedc2a249177dc5f90017b" translate="yes" xml:space="preserve">
          <source>An event raised right before send. You may set &lt;a href=&quot;yii-mail-mailevent#%24isValid-detail&quot;&gt;yii\mail\MailEvent::$isValid&lt;/a&gt; to be false to cancel the send.</source>
          <target state="translated">发送前引发的事件。您可以将&lt;a href=&quot;yii-mail-mailevent#%24isValid-detail&quot;&gt;yii \ mail \ MailEvent :: $ isValid&lt;/a&gt;设置为false以取消发送。</target>
        </trans-unit>
        <trans-unit id="6dc8cc7aa2e86db639d61807b374574a258c3a8a" translate="yes" xml:space="preserve">
          <source>An event raised right before sending request.</source>
          <target state="translated">在发送请求前就会引发事件。</target>
        </trans-unit>
        <trans-unit id="9887e8e503bd77f541dc42e342a6645c4507fb9e" translate="yes" xml:space="preserve">
          <source>An event that is triggered after a DB connection is established</source>
          <target state="translated">DB连接建立后触发的事件。</target>
        </trans-unit>
        <trans-unit id="65bc024f2f13dd05fd7f111fe008d511f8e006a8" translate="yes" xml:space="preserve">
          <source>An event that is triggered after a record is deleted.</source>
          <target state="translated">记录被删除后触发的事件。</target>
        </trans-unit>
        <trans-unit id="97cb1751ddf82f9b602c9d537a2bdf74195a7d57" translate="yes" xml:space="preserve">
          <source>An event that is triggered after a record is inserted.</source>
          <target state="translated">插入记录后触发的事件。</target>
        </trans-unit>
        <trans-unit id="5943462b4eb622215f5a84e95ba4a02c9d33178f" translate="yes" xml:space="preserve">
          <source>An event that is triggered after a record is refreshed.</source>
          <target state="translated">刷新记录后触发的事件。</target>
        </trans-unit>
        <trans-unit id="21dd6ce07c85616b62e6fdbf964a995541362810" translate="yes" xml:space="preserve">
          <source>An event that is triggered after a record is refreshed. (available since version 2.0.8)</source>
          <target state="translated">刷新记录后触发的事件。(自2.0.8版本起可用)</target>
        </trans-unit>
        <trans-unit id="1b6196e2b362bfe92b26e78fb39da27ffe52b4d5" translate="yes" xml:space="preserve">
          <source>An event that is triggered after a record is updated.</source>
          <target state="translated">记录更新后触发的事件。</target>
        </trans-unit>
        <trans-unit id="492519361bac0922ab23bd66b7e960ac7316a9f3" translate="yes" xml:space="preserve">
          <source>An event that is triggered after the record is created and populated with query result.</source>
          <target state="translated">在创建记录并填充查询结果后触发的事件。</target>
        </trans-unit>
        <trans-unit id="5d21f7692687805719ec350a27d147bc551b2c8e" translate="yes" xml:space="preserve">
          <source>An event that is triggered at the beginning of &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;send()&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;send（）&lt;/a&gt;开头触发的事件。</target>
        </trans-unit>
        <trans-unit id="716168179796383cdd97ff1aaf041bc6449130ab" translate="yes" xml:space="preserve">
          <source>An event that is triggered at the end of &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;send()&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;send（）&lt;/a&gt;末尾触发的事件。</target>
        </trans-unit>
        <trans-unit id="ab366a52d6394e8f3411a089f0b4339b46526e2e" translate="yes" xml:space="preserve">
          <source>An event that is triggered before deleting a record.</source>
          <target state="translated">删除记录前触发的事件。</target>
        </trans-unit>
        <trans-unit id="d036f8be460625fa788dca7379160b3e22536e09" translate="yes" xml:space="preserve">
          <source>An event that is triggered before deleting a record. You may set &lt;a href=&quot;yii-base-modelevent#%24isValid-detail&quot;&gt;yii\base\ModelEvent::$isValid&lt;/a&gt; to be &lt;code&gt;false&lt;/code&gt; to stop the deletion.</source>
          <target state="translated">在删除记录之前触发的事件。您可以将&lt;a href=&quot;yii-base-modelevent#%24isValid-detail&quot;&gt;yii \ base \ ModelEvent :: $ isValid&lt;/a&gt;设置为 &lt;code&gt;false&lt;/code&gt; 以停止删除。</target>
        </trans-unit>
        <trans-unit id="3dbb4ac469558e3dacef1b72a69c21f235f558ad" translate="yes" xml:space="preserve">
          <source>An event that is triggered before inserting a record.</source>
          <target state="translated">插入记录前触发的事件。</target>
        </trans-unit>
        <trans-unit id="689e4e8c03e4549a90b04fefc1f24f1169614399" translate="yes" xml:space="preserve">
          <source>An event that is triggered before inserting a record. You may set &lt;a href=&quot;yii-base-modelevent#%24isValid-detail&quot;&gt;yii\base\ModelEvent::$isValid&lt;/a&gt; to be &lt;code&gt;false&lt;/code&gt; to stop the insertion.</source>
          <target state="translated">在插入记录之前触发的事件。您可以将&lt;a href=&quot;yii-base-modelevent#%24isValid-detail&quot;&gt;yii \ base \ ModelEvent :: $ isValid&lt;/a&gt;设置为 &lt;code&gt;false&lt;/code&gt; 以停止插入。</target>
        </trans-unit>
        <trans-unit id="16371a4b6966ba70ab9ae4b35904b6fa382b0b9c" translate="yes" xml:space="preserve">
          <source>An event that is triggered before updating a record.</source>
          <target state="translated">更新记录前触发的事件。</target>
        </trans-unit>
        <trans-unit id="60ab674ad814692c449cbe1d1dd92fdb556c0420" translate="yes" xml:space="preserve">
          <source>An event that is triggered before updating a record. You may set &lt;a href=&quot;yii-base-modelevent#%24isValid-detail&quot;&gt;yii\base\ModelEvent::$isValid&lt;/a&gt; to be &lt;code&gt;false&lt;/code&gt; to stop the update.</source>
          <target state="translated">在更新记录之前触发的事件。您可以将&lt;a href=&quot;yii-base-modelevent#%24isValid-detail&quot;&gt;yii \ base \ ModelEvent :: $ isValid&lt;/a&gt;设置为 &lt;code&gt;false&lt;/code&gt; 以停止更新。</target>
        </trans-unit>
        <trans-unit id="ad2d439087f0bb0c3cb16512b6bf3ea4989cea6e" translate="yes" xml:space="preserve">
          <source>An event that is triggered by &lt;a href=&quot;yii-base-view#beginPage()-detail&quot;&gt;beginPage()&lt;/a&gt;.</source>
          <target state="translated">由&lt;a href=&quot;yii-base-view#beginPage()-detail&quot;&gt;beginPage（）&lt;/a&gt;触发的事件。</target>
        </trans-unit>
        <trans-unit id="2bcbca47e88f03367b02989538d51f040c3c4d58" translate="yes" xml:space="preserve">
          <source>An event that is triggered by &lt;a href=&quot;yii-base-view#endPage()-detail&quot;&gt;endPage()&lt;/a&gt;.</source>
          <target state="translated">由&lt;a href=&quot;yii-base-view#endPage()-detail&quot;&gt;endPage（）&lt;/a&gt;触发的事件。</target>
        </trans-unit>
        <trans-unit id="1a903ff9f55ec9d42c06db9f82fb5c475d62a939" translate="yes" xml:space="preserve">
          <source>An event that is triggered by &lt;a href=&quot;yii-base-view#renderFile()-detail&quot;&gt;renderFile()&lt;/a&gt; right after it renders a view file.</source>
          <target state="translated">由&lt;a href=&quot;yii-base-view#renderFile()-detail&quot;&gt;renderFile（）&lt;/a&gt;在呈现视图文件后立即触发的事件。</target>
        </trans-unit>
        <trans-unit id="622e7dac74cf4b702f26e160bd643614f6d87351" translate="yes" xml:space="preserve">
          <source>An event that is triggered by &lt;a href=&quot;yii-base-view#renderFile()-detail&quot;&gt;renderFile()&lt;/a&gt; right before it renders a view file.</source>
          <target state="translated">由&lt;a href=&quot;yii-base-view#renderFile()-detail&quot;&gt;renderFile（）&lt;/a&gt;在呈现视图文件之前触发的事件。</target>
        </trans-unit>
        <trans-unit id="1028dfcc1c0cc4c6528327f2be5758b9ce9f6716" translate="yes" xml:space="preserve">
          <source>An event that is triggered by &lt;a href=&quot;yii-web-view#beginBody()-detail&quot;&gt;beginBody()&lt;/a&gt;.</source>
          <target state="translated">由&lt;a href=&quot;yii-web-view#beginBody()-detail&quot;&gt;beginBody（）&lt;/a&gt;触发的事件。</target>
        </trans-unit>
        <trans-unit id="a77ba61ccf7b2e3c73e21d5e51ff1ba8f942c675" translate="yes" xml:space="preserve">
          <source>An event that is triggered by &lt;a href=&quot;yii-web-view#endBody()-detail&quot;&gt;endBody()&lt;/a&gt;.</source>
          <target state="translated">由&lt;a href=&quot;yii-web-view#endBody()-detail&quot;&gt;endBody（）&lt;/a&gt;触发的事件。</target>
        </trans-unit>
        <trans-unit id="5475da88f1687b2785f3f2206a690b2447a9958a" translate="yes" xml:space="preserve">
          <source>An event that is triggered right after &lt;a href=&quot;yii-web-response#prepare()-detail&quot;&gt;prepare()&lt;/a&gt; is called in &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;send()&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;yii-web-response#prepare()-detail&quot;&gt;prepare（）&lt;/a&gt;之后立即触发的事件在&lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;send（）中&lt;/a&gt;调用。</target>
        </trans-unit>
        <trans-unit id="ad0456d6fac6f89ecbdb746d0d763ef978bb48cb" translate="yes" xml:space="preserve">
          <source>An event that is triggered right after &lt;a href=&quot;yii-web-response#prepare()-detail&quot;&gt;prepare()&lt;/a&gt; is called in &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;send()&lt;/a&gt;. You may respond to this event to filter the response content before it is sent to the client.</source>
          <target state="translated">在&lt;a href=&quot;yii-web-response#prepare()-detail&quot;&gt;prepare（）&lt;/a&gt;之后立即触发的事件在&lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;send（）中&lt;/a&gt;调用。您可以响应此事件以在将响应内容发送到客户端之前对其进行过滤。</target>
        </trans-unit>
        <trans-unit id="5f141ea16aec8f61049ba4a255bb5744729d4dee" translate="yes" xml:space="preserve">
          <source>An event that is triggered right after a top-level transaction is committed</source>
          <target state="translated">顶层事务提交后立即触发的事件。</target>
        </trans-unit>
        <trans-unit id="2058d1a3a79c15bbd18e9a3c6eb58cfc703ba279" translate="yes" xml:space="preserve">
          <source>An event that is triggered right after a top-level transaction is rolled back</source>
          <target state="translated">顶层事务回滚后立即触发的事件。</target>
        </trans-unit>
        <trans-unit id="da9886403f60b7ab0f40e9e3f2aeb1951ecdee0d" translate="yes" xml:space="preserve">
          <source>An event that is triggered right before a top-level transaction is started</source>
          <target state="translated">在顶层交易开始前被触发的事件。</target>
        </trans-unit>
        <trans-unit id="6b0171121f78fddf9672e8cd1f0d2b404a311c09" translate="yes" xml:space="preserve">
          <source>An event that is triggered when a message translation is not found.</source>
          <target state="translated">未找到消息翻译时触发的事件。</target>
        </trans-unit>
        <trans-unit id="07e267041e1f46f66c59e26e48e7d3f61335bcef" translate="yes" xml:space="preserve">
          <source>An event that is triggered when the query is initialized via &lt;a href=&quot;yii-db-activequery#init()-detail&quot;&gt;init()&lt;/a&gt;.</source>
          <target state="translated">通过&lt;a href=&quot;yii-db-activequery#init()-detail&quot;&gt;init（）&lt;/a&gt;初始化查询时触发的事件。</target>
        </trans-unit>
        <trans-unit id="2a9d31f2c4fdc6d1babb494634ad2e4dfb845e5a" translate="yes" xml:space="preserve">
          <source>An event that is triggered when the query is initialized via &lt;a href=&quot;yii-elasticsearch-activequery#init()-detail&quot;&gt;init()&lt;/a&gt;.</source>
          <target state="translated">通过&lt;a href=&quot;yii-elasticsearch-activequery#init()-detail&quot;&gt;init（）&lt;/a&gt;初始化查询时触发的事件。</target>
        </trans-unit>
        <trans-unit id="feac8125b3fe5d4285df6d7db1406fe9e6b93bb8" translate="yes" xml:space="preserve">
          <source>An event that is triggered when the query is initialized via &lt;a href=&quot;yii-mongodb-activequery#init()-detail&quot;&gt;init()&lt;/a&gt;.</source>
          <target state="translated">通过&lt;a href=&quot;yii-mongodb-activequery#init()-detail&quot;&gt;init（）&lt;/a&gt;初始化查询时触发的事件。</target>
        </trans-unit>
        <trans-unit id="7491c655bde3ed1e70cb1a7865717124fedaee5e" translate="yes" xml:space="preserve">
          <source>An event that is triggered when the query is initialized via &lt;a href=&quot;yii-mongodb-file-activequery#init()-detail&quot;&gt;init()&lt;/a&gt;.</source>
          <target state="translated">通过&lt;a href=&quot;yii-mongodb-file-activequery#init()-detail&quot;&gt;init（）&lt;/a&gt;初始化查询时触发的事件。</target>
        </trans-unit>
        <trans-unit id="061fe05477dcfe6792ce0472a5240bd0ecf3284e" translate="yes" xml:space="preserve">
          <source>An event that is triggered when the query is initialized via &lt;a href=&quot;yii-redis-activequery#init()-detail&quot;&gt;init()&lt;/a&gt;.</source>
          <target state="translated">通过&lt;a href=&quot;yii-redis-activequery#init()-detail&quot;&gt;init（）&lt;/a&gt;初始化查询时触发的事件。</target>
        </trans-unit>
        <trans-unit id="487f5950ba9b3b8e6a35b58a654e37eda188e993" translate="yes" xml:space="preserve">
          <source>An event that is triggered when the query is initialized via &lt;a href=&quot;yii-sphinx-activequery#init()-detail&quot;&gt;init()&lt;/a&gt;.</source>
          <target state="translated">通过&lt;a href=&quot;yii-sphinx-activequery#init()-detail&quot;&gt;init（）&lt;/a&gt;初始化查询时触发的事件。</target>
        </trans-unit>
        <trans-unit id="680624c80f548f6e111135d9e613327dd832e2d0" translate="yes" xml:space="preserve">
          <source>An event that is triggered when the record is initialized via &lt;a href=&quot;yii-db-baseactiverecord#init()-detail&quot;&gt;init()&lt;/a&gt;.</source>
          <target state="translated">通过&lt;a href=&quot;yii-db-baseactiverecord#init()-detail&quot;&gt;init（）&lt;/a&gt;初始化记录时触发的事件。</target>
        </trans-unit>
        <trans-unit id="8f31c8c5a6091c26af0b06f0171ed7d0c48d8b74" translate="yes" xml:space="preserve">
          <source>An event that is triggered when the widget is initialized via &lt;a href=&quot;yii-base-widget#init()-detail&quot;&gt;init()&lt;/a&gt;.</source>
          <target state="translated">通过&lt;a href=&quot;yii-base-widget#init()-detail&quot;&gt;init（）&lt;/a&gt;初始化窗口小部件时触发的事件。</target>
        </trans-unit>
        <trans-unit id="ad2863212a35a72b9c06a27dbba33dd13422b953" translate="yes" xml:space="preserve">
          <source>An event that is triggered when the widget is initialized via &lt;a href=&quot;yii-base-widget#init()-detail&quot;&gt;init()&lt;/a&gt;. (available since version 2.0.11)</source>
          <target state="translated">通过&lt;a href=&quot;yii-base-widget#init()-detail&quot;&gt;init（）&lt;/a&gt;初始化窗口小部件时触发的事件。（自2.0.11版开始可用）</target>
        </trans-unit>
        <trans-unit id="f4ea3fbd6f3532d2ba6d00c0480e681e8ac7d1be" translate="yes" xml:space="preserve">
          <source>An example may be found in the &lt;a href=&quot;guide-rest-quick-start#trying-it-out&quot;&gt;Quick Start&lt;/a&gt; section.</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;guide-rest-quick-start#trying-it-out&quot;&gt;快速入门&amp;rdquo;&lt;/a&gt;部分中可以找到一个示例。</target>
        </trans-unit>
        <trans-unit id="a977f55a5ccece9a2809aee3f3ca7ed633865de4" translate="yes" xml:space="preserve">
          <source>An example of how to use the prompt method with a validator function.</source>
          <target state="translated">一个如何使用带有验证器函数的提示方法的例子。</target>
        </trans-unit>
        <trans-unit id="25da80857c244f028459a5487aef4343e8c8c2b0" translate="yes" xml:space="preserve">
          <source>An example usage is as follows:</source>
          <target state="translated">使用实例如下:</target>
        </trans-unit>
        <trans-unit id="12e8ba729ae9efc963987257dcf724b569ec4015" translate="yes" xml:space="preserve">
          <source>An explanation for each hit on how its score was computed.</source>
          <target state="translated">解释每个命中的分数是如何计算出来的;</target>
        </trans-unit>
        <trans-unit id="ebddd9681f4eef20a2d99119a85ac6fb26cabc57" translate="yes" xml:space="preserve">
          <source>An expression can also be bound with parameters specified via &lt;a href=&quot;yii-db-expression#%24params-detail&quot;&gt;$params&lt;/a&gt;.</source>
          <target state="translated">表达式也可以与通过&lt;a href=&quot;yii-db-expression#%24params-detail&quot;&gt;$ params&lt;/a&gt;指定的参数绑定。</target>
        </trans-unit>
        <trans-unit id="ddfe30a2e2f0bf135d7922cffd5e1a7bf950b30d" translate="yes" xml:space="preserve">
          <source>An external script can be added like the following:</source>
          <target state="translated">可以添加一个外部脚本,如下所示。</target>
        </trans-unit>
        <trans-unit id="6926e2df7c73bf21fc0b10c4afad42786f99fc85" translate="yes" xml:space="preserve">
          <source>An informative message is typically logged by an application to keep record of something important (e.g. an administrator logs in).</source>
          <target state="translated">信息性消息通常是由应用程序记录一些重要的事情(如管理员登录)。</target>
        </trans-unit>
        <trans-unit id="e0ac36f178530c5330237bc399089634049109cd" translate="yes" xml:space="preserve">
          <source>An inline validator is one defined in terms of a model method or an anonymous function. The signature of the method/function is:</source>
          <target state="translated">内联验证器是用一个模型方法或匿名函数定义的。方法/函数的签名是:</target>
        </trans-unit>
        <trans-unit id="8e22d6bd83f4d55c3fdfdca5a7f709bd8c14e692" translate="yes" xml:space="preserve">
          <source>An inline validator that checks if the attribute value refers to a valid namespaced class name.</source>
          <target state="translated">一个内联验证器,用于检查属性值是否指向一个有效的命名间隔类名。</target>
        </trans-unit>
        <trans-unit id="7c54d00922a8f54941b844d4dcf463a9df6e07fc" translate="yes" xml:space="preserve">
          <source>An inline validator that checks if the attribute value refers to an existing class name.</source>
          <target state="translated">一个内联验证器,用于检查属性值是否指向一个现有的类名。</target>
        </trans-unit>
        <trans-unit id="d0e71cf7c2a0096c9a3bbff9e63947e4673bee16" translate="yes" xml:space="preserve">
          <source>An input widget can be associated with a data model and an attribute, or a name and a value. If the former, the name and the value will be generated automatically.</source>
          <target state="translated">输入部件可与数据模型和属性相关联,或与名称和值相关联。如果是前者,名称和值将自动生成。</target>
        </trans-unit>
        <trans-unit id="e46a0d95432509af0112938b6390ae25da58b129" translate="yes" xml:space="preserve">
          <source>An instance of Dispatcher is registered as a core application component and can be accessed using &lt;code&gt;Yii::$app-&amp;gt;log&lt;/code&gt;.</source>
          <target state="translated">Dispatcher的一个实例已注册为核心应用程序组件，可以使用 &lt;code&gt;Yii::$app-&amp;gt;log&lt;/code&gt; 进行访问。</target>
        </trans-unit>
        <trans-unit id="3104416de2a00a9294d0e7e58ff1cf8480f275af" translate="yes" xml:space="preserve">
          <source>An instance of the requested class.</source>
          <target state="translated">所请求的类的实例。</target>
        </trans-unit>
        <trans-unit id="48d7112781d572cc148540e26f0a005621a9271a" translate="yes" xml:space="preserve">
          <source>An iterator for traversing the cookies in the collection.</source>
          <target state="translated">用于遍历收集中的cookie的迭代器。</target>
        </trans-unit>
        <trans-unit id="2f7b2c04dfad4b55ea6f418f115d517b68435efd" translate="yes" xml:space="preserve">
          <source>An iterator for traversing the headers in the collection.</source>
          <target state="translated">用于遍历集合中的头文件的迭代器。</target>
        </trans-unit>
        <trans-unit id="2687f8369362a67906752d4edf165f25136aecc0" translate="yes" xml:space="preserve">
          <source>An iterator for traversing the items in the list.</source>
          <target state="translated">用于遍历列表中的项目的迭代器。</target>
        </trans-unit>
        <trans-unit id="b156f95e92e8323615c5fb12c92ea4eaed6efd2d" translate="yes" xml:space="preserve">
          <source>An iterator for traversing the session variables.</source>
          <target state="translated">用于遍历会话变量的迭代器。</target>
        </trans-unit>
        <trans-unit id="f1dea75e5ef73db069b400b7bf2afd42bc99c05e" translate="yes" xml:space="preserve">
          <source>An object implementing the SessionHandlerInterface or a configuration array.</source>
          <target state="translated">一个实现SessionHandlerInterface的对象或一个配置数组。</target>
        </trans-unit>
        <trans-unit id="38ea8f0b6ebebac0428c2671c5bafabec11a4a4a" translate="yes" xml:space="preserve">
          <source>An object implementing the SessionHandlerInterface or a configuration array. If set, will be used to provide persistency instead of build-in methods.</source>
          <target state="translated">一个实现SessionHandlerInterface的对象或一个配置数组。如果设置,将用于提供持久性,而不是内置方法。</target>
        </trans-unit>
        <trans-unit id="5a3271b1f00fa57b150ee276a2ad4ed9ee72205e" translate="yes" xml:space="preserve">
          <source>An object or a reference to the desired object. You may specify a reference in terms of a component ID or an Instance object. Starting from version 2.0.2, you may also pass in a configuration array for creating the object. If the &quot;class&quot; value is not specified in the configuration array, it will use the value of &lt;code&gt;$type&lt;/code&gt;.</source>
          <target state="translated">一个对象或对所需对象的引用。您可以根据组件ID或实例对象指定引用。从版本2.0.2开始，您还可以传入用于创建对象的配置数组。如果未在配置数组中指定&amp;ldquo; class&amp;rdquo;值，它将使用 &lt;code&gt;$type&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="6aa8ebf00eadd7301388afca0eb1a6ec8c00e076" translate="yes" xml:space="preserve">
          <source>An option character the user chose</source>
          <target state="translated">用户选择的一个选项字符</target>
        </trans-unit>
        <trans-unit id="f01a6622b79c8dc21777b9d96cb22df3857f4bab" translate="yes" xml:space="preserve">
          <source>An optional mapping of ANSI control codes such as FG_&lt;em&gt;COLOR&lt;/em&gt; or &lt;a href=&quot;yii-helpers-baseconsole#BOLD-detail&quot;&gt;BOLD&lt;/a&gt; to a set of css style definitions. The CSS style definitions are represented as an array where the array keys correspond to the css style attribute names and the values are the css values. values may be arrays that will be merged and imploded with &lt;code&gt;' '&lt;/code&gt; when rendered.</source>
          <target state="translated">ANSI控制代码（例如FG_ &lt;em&gt;COLOR&lt;/em&gt;或&lt;a href=&quot;yii-helpers-baseconsole#BOLD-detail&quot;&gt;BOLD）&lt;/a&gt;到一组CSS样式定义的可选映射。CSS样式定义表示为一个数组，其中数组键对应于css样式属性名称，而值是css值。值可以是在呈现时将合并并内含 &lt;code&gt;' '&lt;/code&gt; 数组。</target>
        </trans-unit>
        <trans-unit id="be0bc802f6f0710a1593f8abe94cdf19d5be0116" translate="yes" xml:space="preserve">
          <source>An optional string to display before the progress bar. Default to empty string which results in no prefix to be displayed.</source>
          <target state="translated">在进度条前显示的可选字符串。默认为空字符串,结果是不显示前缀。</target>
        </trans-unit>
        <trans-unit id="27d0248faa6e52a76dd5917dfff766af3e87b817" translate="yes" xml:space="preserve">
          <source>An optional string to display before the progress bar. Defaults to null meaning the prefix specified by &lt;a href=&quot;yii-helpers-baseconsole#startProgress()-detail&quot;&gt;startProgress()&lt;/a&gt; will be used. If prefix is specified it will update the prefix that will be used by later calls.</source>
          <target state="translated">在进度条之前显示的可选字符串。默认为null，表示将使用&lt;a href=&quot;yii-helpers-baseconsole#startProgress()-detail&quot;&gt;startProgress（）&lt;/a&gt;指定的前缀。如果指定了前缀，它将更新将在以后的调用中使用的前缀。</target>
        </trans-unit>
        <trans-unit id="153cb43015bb0662f858c1387380aa98bdb7b86a" translate="yes" xml:space="preserve">
          <source>An optional third operand can also be provided to specify how to escape special characters in the value(s). The operand should be an array of mappings from the special characters to their escaped counterparts. If this operand is not provided, a default escape mapping will be used. You may use &lt;code&gt;false&lt;/code&gt; or an empty array to indicate the values are already escaped and no escape should be applied. Note that when using an escape mapping (or the third operand is not provided), the values will be automatically enclosed within a pair of percentage characters.</source>
          <target state="translated">还可以提供可选的第三个操作数，以指定如何对值中的特殊字符进行转义。操作数应该是从特殊字符到其转义的对应字符的映射数组。如果未提供此操作数，则将使用默认的转义映射。您可以使用 &lt;code&gt;false&lt;/code&gt; 或空数组来指示值已被转义，并且不应应用任何转义。请注意，使用转义映射（或未提供第三个操作数）时，值将自动包含在一对百分比字符内。</target>
        </trans-unit>
        <trans-unit id="ee01470c3a435a7a34ff2efb8cef7dffddbca5e4" translate="yes" xml:space="preserve">
          <source>An unmasked token, or an empty string in case of token format is invalid.</source>
          <target state="translated">一个未屏蔽的标记,或一个空字符串,如果标记格式无效。</target>
        </trans-unit>
        <trans-unit id="298abe4e02378670319be4a11b3e6acaf441f585" translate="yes" xml:space="preserve">
          <source>An unmasked token.</source>
          <target state="translated">一个不加掩饰的令牌。</target>
        </trans-unit>
        <trans-unit id="3119139b10adc7ff9994fd3f57b3dc4f5085994e" translate="yes" xml:space="preserve">
          <source>An upgrade file in the package root directory: it gives the instructions on how to upgrade from older releases of the extension. The file may be written in Markdown format and named as &lt;code&gt;upgrade.md&lt;/code&gt;.</source>
          <target state="translated">软件包根目录中的升级文件：它提供了有关如何从扩展的较旧版本进行升级的说明。该文件可以Markdown格式编写，并命名为 &lt;code&gt;upgrade.md&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9bb2b90bb9d220235d42c10abcf8dae35f4487f8" translate="yes" xml:space="preserve">
          <source>And add the representative fields to the filter form:</source>
          <target state="translated">并将代表字段添加到过滤表格中。</target>
        </trans-unit>
        <trans-unit id="b2af27346b32b004354020d2fe400600ec150d45" translate="yes" xml:space="preserve">
          <source>And finally in the controller action, you should call &lt;code&gt;UploadedFile::getInstances()&lt;/code&gt; instead of &lt;code&gt;UploadedFile::getInstance()&lt;/code&gt; to assign an array of &lt;code&gt;UploadedFile&lt;/code&gt; instances to &lt;code&gt;UploadForm::imageFiles&lt;/code&gt;.</source>
          <target state="translated">最后，在控制器操作中，应调用 &lt;code&gt;UploadedFile::getInstances()&lt;/code&gt; 而不是 &lt;code&gt;UploadedFile::getInstance()&lt;/code&gt; 以将 &lt;code&gt;UploadedFile&lt;/code&gt; 实例的数组分配给 &lt;code&gt;UploadForm::imageFiles&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d117fb31146a340ff80f323fe94b7d1f6b49fa6" translate="yes" xml:space="preserve">
          <source>And in the view you then assign the &lt;code&gt;$dataProvider&lt;/code&gt; and &lt;code&gt;$searchModel&lt;/code&gt; to the GridView:</source>
          <target state="translated">然后在视图中将 &lt;code&gt;$dataProvider&lt;/code&gt; 和 &lt;code&gt;$searchModel&lt;/code&gt; 分配给GridView：</target>
        </trans-unit>
        <trans-unit id="b6637441ceb39aa83ca0a06574fb871ba7d77d7e" translate="yes" xml:space="preserve">
          <source>And the following API endpoints are supported by this rule:</source>
          <target state="translated">而该规则支持以下API端点。</target>
        </trans-unit>
        <trans-unit id="7f5e18269c4a5c0bc76f83cb841a21d31b95dd19" translate="yes" xml:space="preserve">
          <source>And the following example shows how a class retrieves a component from a service locator:</source>
          <target state="translated">而下面的例子显示了一个类如何从服务定位器中检索一个组件。</target>
        </trans-unit>
        <trans-unit id="5e2d8c931b64208ab8ca180d2d9423976050127a" translate="yes" xml:space="preserve">
          <source>And the following example shows how to use ActiveDataProvider without ActiveRecord:</source>
          <target state="translated">而下面的例子展示了如何在没有ActiveRecord的情况下使用ActiveDataProvider。</target>
        </trans-unit>
        <trans-unit id="59b6a0cae9508308c22a2a60525e315437e5a694" translate="yes" xml:space="preserve">
          <source>And the following steps show how to deploy a new release with database migrations to production:</source>
          <target state="translated">而下面的步骤显示了如何将新版本的数据库迁移部署到生产中。</target>
        </trans-unit>
        <trans-unit id="a6180737f083ca090fa4e906f75eb9d24ae57b1d" translate="yes" xml:space="preserve">
          <source>And the parameters provided for the action are: &lt;code&gt;['id' =&amp;gt; 1]&lt;/code&gt;. Then the &lt;code&gt;run()&lt;/code&gt; method will be invoked as &lt;code&gt;run(1)&lt;/code&gt; automatically.</source>
          <target state="translated">为该操作提供的参数为： &lt;code&gt;['id' =&amp;gt; 1]&lt;/code&gt; 。然后， &lt;code&gt;run()&lt;/code&gt; 方法将作为 &lt;code&gt;run(1)&lt;/code&gt; 自动调用。</target>
        </trans-unit>
        <trans-unit id="3c5ee401b8c8ef355db347fca7339d8a822678d0" translate="yes" xml:space="preserve">
          <source>And then overriding default in sub-views:</source>
          <target state="translated">然后在子视图中覆盖默认。</target>
        </trans-unit>
        <trans-unit id="c6c698165e3be8715d87cfb6f414fb564dd39079" translate="yes" xml:space="preserve">
          <source>And two classes, that implement it:</source>
          <target state="translated">和两个类,实现它。</target>
        </trans-unit>
        <trans-unit id="6dd4bafb98d15729cd654a79057caa1806de2d9d" translate="yes" xml:space="preserve">
          <source>And use the new rule class in the &lt;a href=&quot;yii-web-urlmanager#%24rules-detail&quot;&gt;yii\web\UrlManager::$rules&lt;/a&gt; configuration:</source>
          <target state="translated">并在&lt;a href=&quot;yii-web-urlmanager#%24rules-detail&quot;&gt;yii \ web \ UrlManager :: $ rules&lt;/a&gt;配置中使用新的规则类：</target>
        </trans-unit>
        <trans-unit id="6ae5c0ef5a16bed74cafbcbd12b08760354a27b4" translate="yes" xml:space="preserve">
          <source>And when the rules are used to create URLs:</source>
          <target state="translated">而当规则被用来创建URL时。</target>
        </trans-unit>
        <trans-unit id="5d2e6f48f3d12b8f490e0cab11cd3a8ba9a59876" translate="yes" xml:space="preserve">
          <source>And|or define how target attributes are related</source>
          <target state="translated">并且|或定义目标属性如何关联</target>
        </trans-unit>
        <trans-unit id="bd730d8a99626f196456a1a1beea6054acb58110" translate="yes" xml:space="preserve">
          <source>Anonymous function, passed as a &lt;code&gt;$key&lt;/code&gt;, gives the same result:</source>
          <target state="translated">作为 &lt;code&gt;$key&lt;/code&gt; 传递的匿名函数给出相同的结果：</target>
        </trans-unit>
        <trans-unit id="33718acd50e2ddccb7a4b47a58718bfc6994cc8e" translate="yes" xml:space="preserve">
          <source>Another example is to take advantage of the automatic constructor injection of the DI container. Assume your controller class depends on some other objects, such as a hotel booking service. You can declare the dependency through a constructor parameter and let the DI container to resolve it for you.</source>
          <target state="translated">另一个例子是利用DI容器的自动构造函数注入。假设您的控制器类依赖于一些其他对象,例如酒店预订服务。您可以通过构造函数参数声明依赖性,让DI容器为您解析。</target>
        </trans-unit>
        <trans-unit id="6510a65cdc5c3cc43bdc89434ba8ccf0369e6074" translate="yes" xml:space="preserve">
          <source>Another item</source>
          <target state="translated">另一个项目</target>
        </trans-unit>
        <trans-unit id="2980bf8472493bed81209e01791850695af2ad51" translate="yes" xml:space="preserve">
          <source>Another practical example is in the application configuration for the &lt;a href=&quot;guide-start-installation&quot;&gt;Basic Project Template&lt;/a&gt;, where the &lt;code&gt;debug&lt;/code&gt; and &lt;code&gt;gii&lt;/code&gt; modules are configured as bootstrapping components when the application is running in the development environment:</source>
          <target state="translated">另一个实际示例是在&lt;a href=&quot;guide-start-installation&quot;&gt;基本项目模板&lt;/a&gt;的应用程序配置中，其中，当应用程序在开发环境中运行时， &lt;code&gt;debug&lt;/code&gt; 和 &lt;code&gt;gii&lt;/code&gt; 模块被配置为引导组件：</target>
        </trans-unit>
        <trans-unit id="3b15eea03006d19e5deecf2fd08a8094188b36b8" translate="yes" xml:space="preserve">
          <source>Another step on configuration optimization is to register some dependencies as singletons. A dependency registered via &lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;set()&lt;/a&gt; will be instantiated each time it is needed. Some classes do not change the state during runtime, therefore they may be registered as singletons in order to increase the application performance.</source>
          <target state="translated">配置优化的另一步骤是将某些依赖项注册为单例。通过&lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;set（）&lt;/a&gt;注册的依赖项将在每次需要时实例化。有些类在运行时不会更改状态，因此可以将它们注册为单例，以提高应用程序性能。</target>
        </trans-unit>
        <trans-unit id="2f75336542a47b09df53e5c27808b600d5d6a57d" translate="yes" xml:space="preserve">
          <source>Another strategy that you can take to migrate multiple databases is to keep migrations for different databases in different migration paths. Then you can migrate these databases in separate commands like the following:</source>
          <target state="translated">你可以采取的另一个迁移多个数据库的策略是在不同的迁移路径中保持对不同数据库的迁移。然后,你可以像下面这样,在单独的命令中迁移这些数据库。</target>
        </trans-unit>
        <trans-unit id="7d3704f7ea081a8fd87d77d8296cbed77e10c326" translate="yes" xml:space="preserve">
          <source>Another value being compared</source>
          <target state="translated">另一个被比较的值</target>
        </trans-unit>
        <trans-unit id="83ba7473590bec9bceb42e5edf49b47391d9c6de" translate="yes" xml:space="preserve">
          <source>Any SQL queries in the anonymous function will be cached for the specified duration with the specified dependency. If the result of a query is found valid in the cache, the query will be skipped and the result will be served from the cache instead. If you do not specify the &lt;code&gt;$duration&lt;/code&gt; parameter, the value of &lt;a href=&quot;yii-db-connection#%24queryCacheDuration-detail&quot;&gt;queryCacheDuration&lt;/a&gt; will be used instead.</source>
          <target state="translated">匿名函数中的所有SQL查询都将在具有指定依赖项的指定持续时间内进行缓存。如果在缓存中发现查询结果有效，则将跳过查询，而是从缓存中提供结果。如果未指定 &lt;code&gt;$duration&lt;/code&gt; 参数，则将使用&lt;a href=&quot;yii-db-connection#%24queryCacheDuration-detail&quot;&gt;queryCacheDuration&lt;/a&gt;的值。</target>
        </trans-unit>
        <trans-unit id="53b25972597782005d482e6bbc8d55ff2fcade5b" translate="yes" xml:space="preserve">
          <source>Any content enclosed between the &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;begin()&lt;/a&gt; and &lt;a href=&quot;yii-base-widget#end()-detail&quot;&gt;end()&lt;/a&gt; calls of NavBar is treated as the content of the navbar. You may use widgets such as &lt;a href=&quot;yii-bootstrap-nav&quot;&gt;yii\bootstrap\Nav&lt;/a&gt; or &lt;a href=&quot;yii-widgets-menu&quot;&gt;yii\widgets\Menu&lt;/a&gt; to build up such content. For example,</source>
          <target state="translated">NavBar 的&lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;begin（）&lt;/a&gt;和&lt;a href=&quot;yii-base-widget#end()-detail&quot;&gt;end（）&lt;/a&gt;调用之间包含的所有内容均被视为导航栏的内容。您可以使用&lt;a href=&quot;yii-bootstrap-nav&quot;&gt;yii \ bootstrap \ Nav&lt;/a&gt;或&lt;a href=&quot;yii-widgets-menu&quot;&gt;yii \ widgets \ Menu之类的小部件&lt;/a&gt;来构建此类内容。例如，</target>
        </trans-unit>
        <trans-unit id="3e013944d0271ebdb70b758c708c6f8ce5652b38" translate="yes" xml:space="preserve">
          <source>Any relative URL that starts with a single forward slash &quot;/&quot; will be converted into an absolute one by prepending it with the host info of the current request.</source>
          <target state="translated">任何以单条斜线&quot;/&quot;开头的相对URL,都会在前面加上当前请求的主机信息,转换为绝对URL。</target>
        </trans-unit>
        <trans-unit id="a73508e674a6b1f2bd9262ff35b760dcc345dc28" translate="yes" xml:space="preserve">
          <source>Any trailing '/' and '\' characters in the given path will be trimmed.</source>
          <target state="translated">在给定的路径中,任何尾部的'/'和'/'字符将被修剪。</target>
        </trans-unit>
        <trans-unit id="7da34f288079812aa931a91ba8e228ca94611e6c" translate="yes" xml:space="preserve">
          <source>Apache 2: &lt;a href=&quot;http://httpd.apache.org/docs/trunk/vhosts/examples.html#defaultallports&quot;&gt;http://httpd.apache.org/docs/trunk/vhosts/examples.html#defaultallports&lt;/a&gt;</source>
          <target state="translated">Apache 2：&lt;a href=&quot;http://httpd.apache.org/docs/trunk/vhosts/examples.html#defaultallports&quot;&gt;http&lt;/a&gt;：//httpd.apache.org/docs/trunk/vhosts/examples.html#defaultallports</target>
        </trans-unit>
        <trans-unit id="eb80fd4953e6e08054b69ea88e66ea1009b5714e" translate="yes" xml:space="preserve">
          <source>Apache: &lt;a href=&quot;http://tn123.org/mod_xsendfile&quot;&gt;X-Sendfile&lt;/a&gt;</source>
          <target state="translated">Apache：&lt;a href=&quot;http://tn123.org/mod_xsendfile&quot;&gt;X-Sendfile&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11392dff1e730f4e8a2fc4d71e432a2c14b8f8d3" translate="yes" xml:space="preserve">
          <source>ApcCache provides APC caching in terms of an application component.</source>
          <target state="translated">ApcCache以应用组件的方式提供APC缓存。</target>
        </trans-unit>
        <trans-unit id="5d6ea696bfc5029fa79907064d60a6bcddd12bd9" translate="yes" xml:space="preserve">
          <source>Append the suffix &lt;code&gt;Controller&lt;/code&gt;.</source>
          <target state="translated">附加后缀 &lt;code&gt;Controller&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e838304820d9ae6f3d00c7cf9ca8de1da3968e5" translate="yes" xml:space="preserve">
          <source>Appending Conditions</source>
          <target state="translated">附加条件</target>
        </trans-unit>
        <trans-unit id="1c6378d836e1da5d91a66cf7b3d6806ea2d6cf87" translate="yes" xml:space="preserve">
          <source>Appends a JOIN part to the query.</source>
          <target state="translated">在查询中添加一个JOIN部分。</target>
        </trans-unit>
        <trans-unit id="db9b0ea031341ed1a20e4040b91f1f13de025942" translate="yes" xml:space="preserve">
          <source>Appends a LEFT OUTER JOIN part to the query.</source>
          <target state="translated">将LEFT OUTER JOIN部分添加到查询中。</target>
        </trans-unit>
        <trans-unit id="f84d03dfaed4dd063f0f8a33186f4a3d41d897e1" translate="yes" xml:space="preserve">
          <source>Appends a RIGHT OUTER JOIN part to the query.</source>
          <target state="translated">在查询中添加RIGHT OUTER JOIN部分。</target>
        </trans-unit>
        <trans-unit id="cd26e6fb3371574aaa486c80f073ecd2df98f921" translate="yes" xml:space="preserve">
          <source>Appends a SQL statement using UNION operator.</source>
          <target state="translated">使用UNION操作符添加一条SQL语句。</target>
        </trans-unit>
        <trans-unit id="1680471d402f618338ed007948e6fde0eaa76b2a" translate="yes" xml:space="preserve">
          <source>Appends an INNER JOIN part to the query.</source>
          <target state="translated">将INNER JOIN部分添加到查询中。</target>
        </trans-unit>
        <trans-unit id="e6afd6f97c01258164173df1600578611c3bc377" translate="yes" xml:space="preserve">
          <source>Application Components</source>
          <target state="translated">应用组件</target>
        </trans-unit>
        <trans-unit id="fc3dc02f2eed26ec68b7f655e0c082d0c5d80d4d" translate="yes" xml:space="preserve">
          <source>Application Configurations</source>
          <target state="translated">应用配置</target>
        </trans-unit>
        <trans-unit id="43d9ac0286bd4cf919461e1e4f7426fee4f1df01" translate="yes" xml:space="preserve">
          <source>Application Events</source>
          <target state="translated">应用事件</target>
        </trans-unit>
        <trans-unit id="d6a57cc95d512e5364ca4edb5405c3ae4211a3ec" translate="yes" xml:space="preserve">
          <source>Application Lifecycle</source>
          <target state="translated">应用寿命周期</target>
        </trans-unit>
        <trans-unit id="3252c8dd86809c12991ca3ce9c641976809cb4ca" translate="yes" xml:space="preserve">
          <source>Application Properties</source>
          <target state="translated">应用属性</target>
        </trans-unit>
        <trans-unit id="30ca4882f3a44a01cbb9dbbf545efd0155fdfae5" translate="yes" xml:space="preserve">
          <source>Application components can be any objects. You can register them by configuring the &lt;a href=&quot;yii-di-servicelocator#%24components-detail&quot;&gt;yii\base\Application::$components&lt;/a&gt; property in &lt;a href=&quot;guide-structure-applications#application-configurations&quot;&gt;application configurations&lt;/a&gt;. For example,</source>
          <target state="translated">应用程序组件可以是任何对象。您可以通过在&lt;a href=&quot;guide-structure-applications#application-configurations&quot;&gt;应用程序配置中&lt;/a&gt;配置&lt;a href=&quot;yii-di-servicelocator#%24components-detail&quot;&gt;yii \ base \ Application :: $ components&lt;/a&gt;属性来注册它们。例如，</target>
        </trans-unit>
        <trans-unit id="2ff37659319a0ba411a584b05313bacd0679854f" translate="yes" xml:space="preserve">
          <source>Application config</source>
          <target state="translated">应用配置</target>
        </trans-unit>
        <trans-unit id="cb2434fdf7fd93ee3ab19630741f55aa2516476a" translate="yes" xml:space="preserve">
          <source>Application configuration example:</source>
          <target state="translated">应用配置实例。</target>
        </trans-unit>
        <trans-unit id="13392ff375892debc3e77407f145d0bbc5b93958" translate="yes" xml:space="preserve">
          <source>Application extends from &lt;a href=&quot;yii-base-application&quot;&gt;yii\base\Application&lt;/a&gt; by providing functionalities that are specific to console requests. In particular, it deals with console requests through a command-based approach:</source>
          <target state="translated">通过提供特定于控制台请求的功能，应用程序从&lt;a href=&quot;yii-base-application&quot;&gt;yii \ base \&lt;/a&gt; Application扩展。特别是，它通过基于命令的方法处理控制台请求：</target>
        </trans-unit>
        <trans-unit id="0c27e1ffe913d59fbb505833353e87a1c647eb9a" translate="yes" xml:space="preserve">
          <source>Application is the base class for all application classes.</source>
          <target state="translated">Application是所有应用类的基础类。</target>
        </trans-unit>
        <trans-unit id="986da0675c9d6bc473feb023ca05ce18c28f1099" translate="yes" xml:space="preserve">
          <source>Application is the base class for all web application classes.</source>
          <target state="translated">Application是所有Web应用类的基础类。</target>
        </trans-unit>
        <trans-unit id="767725b8b939480bcee8194b9c16a941023f4e40" translate="yes" xml:space="preserve">
          <source>Application represents a console application.</source>
          <target state="translated">应用程序代表一个控制台应用程序。</target>
        </trans-unit>
        <trans-unit id="543166750256db6d06f94c1566a731f2e1966b12" translate="yes" xml:space="preserve">
          <source>Application state used by &lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$state&lt;/a&gt;: application has ended.</source>
          <target state="translated">&lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$&lt;/a&gt; state使用的应用程序状态：应用程序已结束。</target>
        </trans-unit>
        <trans-unit id="05246379e5981d53d1eb2f3d48d8b6c6033b8d90" translate="yes" xml:space="preserve">
          <source>Application state used by &lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$state&lt;/a&gt;: application is about to send response.</source>
          <target state="translated">&lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$&lt;/a&gt; state使用的应用程序状态：应用程序将发送响应。</target>
        </trans-unit>
        <trans-unit id="92d35435dccf1009415ba58b513f9ec16d85e7f3" translate="yes" xml:space="preserve">
          <source>Application state used by &lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$state&lt;/a&gt;: application is handling the request.</source>
          <target state="translated">&lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$&lt;/a&gt; state使用的应用程序状态：应用程序正在处理请求。</target>
        </trans-unit>
        <trans-unit id="b71a78d795d5239c7702c2e52499a0796514acc0" translate="yes" xml:space="preserve">
          <source>Application state used by &lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$state&lt;/a&gt;: application is initializing.</source>
          <target state="translated">&lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$&lt;/a&gt; state使用的应用程序状态：应用程序正在初始化。</target>
        </trans-unit>
        <trans-unit id="c88b05bb12922c2fbf86fc12388d45cac28706bd" translate="yes" xml:space="preserve">
          <source>Application state used by &lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$state&lt;/a&gt;: application is triggering &lt;a href=&quot;yii-base-application#EVENT_AFTER_REQUEST-detail&quot;&gt;EVENT_AFTER_REQUEST&lt;/a&gt;. .</source>
          <target state="translated">&lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$&lt;/a&gt; state使用的应用程序状态：应用程序正在触发&lt;a href=&quot;yii-base-application#EVENT_AFTER_REQUEST-detail&quot;&gt;EVENT_AFTER_REQUEST&lt;/a&gt;。。</target>
        </trans-unit>
        <trans-unit id="487e550a5bcd524526d5f025c7c9e51d66eba88d" translate="yes" xml:space="preserve">
          <source>Application state used by &lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$state&lt;/a&gt;: application is triggering &lt;a href=&quot;yii-base-application#EVENT_BEFORE_REQUEST-detail&quot;&gt;EVENT_BEFORE_REQUEST&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$&lt;/a&gt; state使用的应用程序状态：应用程序正在触发&lt;a href=&quot;yii-base-application#EVENT_BEFORE_REQUEST-detail&quot;&gt;EVENT_BEFORE_REQUEST&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0e8ba3647d009059e2f538f7bf9bd48ff5f46046" translate="yes" xml:space="preserve">
          <source>Application state used by &lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$state&lt;/a&gt;: application just started.</source>
          <target state="translated">&lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$&lt;/a&gt; state使用的应用程序状态：应用程序刚刚启动。</target>
        </trans-unit>
        <trans-unit id="76c74bd071dd73f01696fddbbffc77712a479faf" translate="yes" xml:space="preserve">
          <source>Applications</source>
          <target state="translated">Applications</target>
        </trans-unit>
        <trans-unit id="ca2bc1835b0666393d94310011a91f78e72487ab" translate="yes" xml:space="preserve">
          <source>Applications are &lt;a href=&quot;guide-concept-service-locator&quot;&gt;service locators&lt;/a&gt;. They host a set of the so-called &lt;em&gt;application components&lt;/em&gt; that provide different services for processing requests. For example, the &lt;code&gt;urlManager&lt;/code&gt; component is responsible for routing Web requests to appropriate controllers; the &lt;code&gt;db&lt;/code&gt; component provides DB-related services; and so on.</source>
          <target state="translated">应用程序是&lt;a href=&quot;guide-concept-service-locator&quot;&gt;服务定位器&lt;/a&gt;。它们托管了一组所谓的&lt;em&gt;应用程序组件&lt;/em&gt;，这些&lt;em&gt;组件&lt;/em&gt;为处理请求提供不同的服务。例如， &lt;code&gt;urlManager&lt;/code&gt; 组件负责将Web请求路由到适当的控制器。该 &lt;code&gt;db&lt;/code&gt; 组件提供DB-相关服务; 等等。</target>
        </trans-unit>
        <trans-unit id="62efd227a737df1b4490120333388277316e90b5" translate="yes" xml:space="preserve">
          <source>Applications are objects that govern the overall structure and lifecycle of Yii application systems. Each Yii application system contains a single application object which is created in the &lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;entry script&lt;/a&gt; and is globally accessible through the expression &lt;code&gt;\Yii::$app&lt;/code&gt;.</source>
          <target state="translated">应用程序是控制Yii应用程序系统的整体结构和生命周期的对象。每个Yii应用程序系统都包含一个在&lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;输入脚本中&lt;/a&gt;创建的应用程序对象，并且可以通过表达式 &lt;code&gt;\Yii::$app&lt;/code&gt; 全局访问。</target>
        </trans-unit>
        <trans-unit id="7d59917b4d5d2dd7d89b8933266a966a7173c3ed" translate="yes" xml:space="preserve">
          <source>Applies &lt;a href=&quot;yii-authclient-baseoauth#%24accessToken-detail&quot;&gt;$accessToken&lt;/a&gt; to the request.</source>
          <target state="translated">将&lt;a href=&quot;yii-authclient-baseoauth#%24accessToken-detail&quot;&gt;$ accessToken&lt;/a&gt;应用于请求。</target>
        </trans-unit>
        <trans-unit id="bb2c2cc168e8c823635dfb473b7a9f3ca5c9d718" translate="yes" xml:space="preserve">
          <source>Applies a random mask to the token and prepends the mask used to the result making the string always unique. Used to mitigate BREACH attack by randomizing how token is outputted on each request.</source>
          <target state="translated">将随机掩码应用到token上,并将掩码预写到结果中,使字符串总是唯一的。通过随机化每个请求的token输出方式,来减缓BREACH攻击。</target>
        </trans-unit>
        <trans-unit id="12d4af2ff78af162c31026ac3b863b2aa2040baa" translate="yes" xml:space="preserve">
          <source>Applies access token to the HTTP request instance.</source>
          <target state="translated">将访问令牌应用于HTTP请求实例。</target>
        </trans-unit>
        <trans-unit id="ab00664f7756d642bacf51bf27e8551435722fe2" translate="yes" xml:space="preserve">
          <source>Applies client credentials (e.g. &lt;a href=&quot;yii-authclient-oauth2#%24clientId-detail&quot;&gt;$clientId&lt;/a&gt; and &lt;a href=&quot;yii-authclient-oauth2#%24clientSecret-detail&quot;&gt;$clientSecret&lt;/a&gt;) to the HTTP request instance.</source>
          <target state="translated">将客户端凭据（例如&lt;a href=&quot;yii-authclient-oauth2#%24clientId-detail&quot;&gt;$ clientId&lt;/a&gt;和&lt;a href=&quot;yii-authclient-oauth2#%24clientSecret-detail&quot;&gt;$ clientSecret&lt;/a&gt;）应用于HTTP请求实例。</target>
        </trans-unit>
        <trans-unit id="0f30e0b04c9c86227e73e8a6d153b699f222f967" translate="yes" xml:space="preserve">
          <source>Applies configuration from the given file to self instance.</source>
          <target state="translated">将给定文件中的配置应用于自身实例。</target>
        </trans-unit>
        <trans-unit id="cc2de1b1d57f6d3937c589525d0820f38e3eb9af" translate="yes" xml:space="preserve">
          <source>Applies filter on a given array and returns filtered data.</source>
          <target state="translated">对给定数组进行过滤并返回过滤后的数据。</target>
        </trans-unit>
        <trans-unit id="44ccc8f98f497196ad73004d4b631b2e721e2a64" translate="yes" xml:space="preserve">
          <source>Apply filters declared in the application in the order they are listed in &lt;code&gt;behaviors()&lt;/code&gt;.</source>
          <target state="translated">按照在 &lt;code&gt;behaviors()&lt;/code&gt; 中列出的顺序应用在应用程序中声明的过滤器。</target>
        </trans-unit>
        <trans-unit id="214ffe0193aabf387f2d7606c4ead5b0537a9932" translate="yes" xml:space="preserve">
          <source>Apply filters declared in the application in the reverse order they are listed in &lt;code&gt;behaviors()&lt;/code&gt;.</source>
          <target state="translated">以相反的顺序应用在应用程序中声明的过滤器，它们在 &lt;code&gt;behaviors()&lt;/code&gt; 中列出。</target>
        </trans-unit>
        <trans-unit id="698d5d1c38233796d6ee7a848f8f9c12839c0630" translate="yes" xml:space="preserve">
          <source>Apply filters declared in the controller in the order they are listed in &lt;code&gt;behaviors()&lt;/code&gt;.</source>
          <target state="translated">按照在 &lt;code&gt;behaviors()&lt;/code&gt; 中列出的顺序应用在控制器中声明的过滤器。</target>
        </trans-unit>
        <trans-unit id="9547ca87b410e64f49254419b3f10e8613e26f6d" translate="yes" xml:space="preserve">
          <source>Apply filters declared in the controller in the reverse order they are listed in &lt;code&gt;behaviors()&lt;/code&gt;.</source>
          <target state="translated">以相反的顺序应用在控制器中声明的过滤器，该过滤器在 &lt;code&gt;behaviors()&lt;/code&gt; 中列出。</target>
        </trans-unit>
        <trans-unit id="623454840bbf1f49bb6d373d472e100ea8d794f6" translate="yes" xml:space="preserve">
          <source>Apply filters declared in the module in the order they are listed in &lt;code&gt;behaviors()&lt;/code&gt;.</source>
          <target state="translated">按照在 &lt;code&gt;behaviors()&lt;/code&gt; 中列出的顺序应用在模块中声明的过滤器。</target>
        </trans-unit>
        <trans-unit id="3cf369ec30c9fde0e32e8f5aa29c747c920d0964" translate="yes" xml:space="preserve">
          <source>Apply filters declared in the module in the reverse order they are listed in &lt;code&gt;behaviors()&lt;/code&gt;.</source>
          <target state="translated">以相反的顺序应用在模块中声明的过滤器，这些过滤器在 &lt;code&gt;behaviors()&lt;/code&gt; 中列出。</target>
        </trans-unit>
        <trans-unit id="0aeb27d1e5aa3454f04d78811439517eade54259" translate="yes" xml:space="preserve">
          <source>Applying Migrations</source>
          <target state="translated">应用迁移</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="33118eabb12b06bcdf20447e0a74a81f14a9f0a1" translate="yes" xml:space="preserve">
          <source>Arguments array to be converted</source>
          <target state="translated">要转换的参数数组</target>
        </trans-unit>
        <trans-unit id="056d61270fd8b57b18cb52770b2b3bcb49e69d01" translate="yes" xml:space="preserve">
          <source>Array Data Provider</source>
          <target state="translated">阵列数据提供者</target>
        </trans-unit>
        <trans-unit id="74397669308f245b16a683127df65188c45706f5" translate="yes" xml:space="preserve">
          <source>Array either MUST contain both username and password on not contain any authentication credentials.</source>
          <target state="translated">数组要么必须包含用户名和密码,要么不包含任何认证凭证。</target>
        </trans-unit>
        <trans-unit id="fa3b8678b611aaa7173b7189e129fd203aa1029d" translate="yes" xml:space="preserve">
          <source>Array elements:</source>
          <target state="translated">阵列元素。</target>
        </trans-unit>
        <trans-unit id="8bdd9c0e755963e545282e2afe85bf7e265be42d" translate="yes" xml:space="preserve">
          <source>Array input options</source>
          <target state="translated">阵列输入选项</target>
        </trans-unit>
        <trans-unit id="469b440e7006a7c0ccc78db2e29bc7e7af9d3449" translate="yes" xml:space="preserve">
          <source>Array keys are not always required. When an array value does not have a key, the matching of the requested language will be based on a language fallback mechanism. For example, a value of &lt;code&gt;en&lt;/code&gt; will match &lt;code&gt;en&lt;/code&gt;, &lt;code&gt;en_US&lt;/code&gt;, &lt;code&gt;en-US&lt;/code&gt;, &lt;code&gt;en-GB&lt;/code&gt;, etc.</source>
          <target state="translated">并非总是需要阵列键。当数组值没有键时，所请求语言的匹配将基于语言回退机制。例如， &lt;code&gt;en&lt;/code&gt; 的值将匹配 &lt;code&gt;en&lt;/code&gt; ， &lt;code&gt;en_US&lt;/code&gt; ， &lt;code&gt;en-US&lt;/code&gt; ， &lt;code&gt;en-GB&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="ea3b33abfbe2209b46883b419977cf00c729d01e" translate="yes" xml:space="preserve">
          <source>Array of 2 elements:</source>
          <target state="translated">2个元素的阵列。</target>
        </trans-unit>
        <trans-unit id="afa0810357b508ae32ed48856131ae1cb8171704" translate="yes" xml:space="preserve">
          <source>Array of UploadedFile objects. Empty array is returned if no available file was found for the given attribute.</source>
          <target state="translated">UploadedFile对象的数组。如果给定属性没有找到可用的文件,则返回空数组。</target>
        </trans-unit>
        <trans-unit id="78478793379d7765da90f911b4ac89274e4483ba" translate="yes" xml:space="preserve">
          <source>Array of actions to add to the debug modules default controller.</source>
          <target state="translated">要添加到调试模块默认控制器的动作数组。</target>
        </trans-unit>
        <trans-unit id="0cb7f236a65a038797361a6796ebfe91b26c022d" translate="yes" xml:space="preserve">
          <source>Array of actions to add to the debug modules default controller. This array will be merged with all other panels actions property. See &lt;a href=&quot;yii-base-controller#actions()-detail&quot;&gt;yii\base\Controller::actions()&lt;/a&gt; for the format.</source>
          <target state="translated">要添加到调试模块默认控制器的动作数组。该数组将与所有其他面板的action属性合并。有关格式，请参见&lt;a href=&quot;yii-base-controller#actions()-detail&quot;&gt;yii \ base \ Controller :: actions（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="89073326118322a6767f9807d83bd5498e70ecd3" translate="yes" xml:space="preserve">
          <source>Array of additional options</source>
          <target state="translated">额外选项阵列</target>
        </trans-unit>
        <trans-unit id="b63da124153843be4e0f7c75dd501b70cb4677ff" translate="yes" xml:space="preserve">
          <source>Array of arrays or objects to be inserted.</source>
          <target state="translated">要插入的数组或对象的数组。</target>
        </trans-unit>
        <trans-unit id="c25476f14f471f13f85324c74a8681d47595175a" translate="yes" xml:space="preserve">
          <source>Array of attributes with keys being the AX schema names, e.g. 'contact/email'</source>
          <target state="translated">属性数组,其键为AX模式名称,例如 &quot;联系人/电子邮件&quot;。</target>
        </trans-unit>
        <trans-unit id="00e1f0a1aa1d86f05c426c160590e432a73b8fa0" translate="yes" xml:space="preserve">
          <source>Array of attributes.</source>
          <target state="translated">属性数组。</target>
        </trans-unit>
        <trans-unit id="cda3dd1fc730b2616329b66cde0e490decf015cb" translate="yes" xml:space="preserve">
          <source>Array of bundles to formatting.</source>
          <target state="translated">捆绑格式化的数组。</target>
        </trans-unit>
        <trans-unit id="5d714cb2be2e1eb05e07824b36c17a7ac813116f" translate="yes" xml:space="preserve">
          <source>Array of column names</source>
          <target state="translated">列名阵列</target>
        </trans-unit>
        <trans-unit id="d5b8e2a4f6a3340f40fda96d630e66fdf066d20d" translate="yes" xml:space="preserve">
          <source>Array of definitions. There are two allowed formats of array. The first format:</source>
          <target state="translated">定义的数组。数组有两种允许的格式。第一种格式。</target>
        </trans-unit>
        <trans-unit id="5abd08f8def634c8db82b8a6ab8892f08d516a55" translate="yes" xml:space="preserve">
          <source>Array of distinct values</source>
          <target state="translated">不同数值的阵列</target>
        </trans-unit>
        <trans-unit id="f70e664625936358926fdf1f251fcdeecff8c23f" translate="yes" xml:space="preserve">
          <source>Array of distinct values, or &quot;false&quot; on failure.</source>
          <target state="translated">不同值的数组,或失败时为 &quot;false&quot;。</target>
        </trans-unit>
        <trans-unit id="828330fe5c8e671f9f372b9fea39ecec3c9b0921" translate="yes" xml:space="preserve">
          <source>Array of failed keys</source>
          <target state="translated">失败钥匙阵列</target>
        </trans-unit>
        <trans-unit id="647daeb9b41fc7ea32592fea871a927d5133543a" translate="yes" xml:space="preserve">
          <source>Array of failed keys.</source>
          <target state="translated">失败钥匙的阵列。</target>
        </trans-unit>
        <trans-unit id="cf5ef11fba1b8e53f956362b5b18ab1e3aafa9b9" translate="yes" xml:space="preserve">
          <source>Array of found fixtures</source>
          <target state="translated">找到的固定装置阵列</target>
        </trans-unit>
        <trans-unit id="37feecd468948ec260c865352b6cb57cd816649a" translate="yes" xml:space="preserve">
          <source>Array of messages or null if file not found</source>
          <target state="translated">信息数组,如果没有找到文件则为空</target>
        </trans-unit>
        <trans-unit id="f47dfa01ef7c9109700acdd0f00326690f7e880d" translate="yes" xml:space="preserve">
          <source>Array of method arguments.</source>
          <target state="translated">方法参数数组。</target>
        </trans-unit>
        <trans-unit id="5ac7383d9855238f2ccebe3bfab29394daa4dd6b" translate="yes" xml:space="preserve">
          <source>Array of names of fixtures that should not be loaded</source>
          <target state="translated">不应该被加载的灯具名称的数组。</target>
        </trans-unit>
        <trans-unit id="633ad4897aa3926f00fedcfcab860d1a47d02daf" translate="yes" xml:space="preserve">
          <source>Array of parameters to highlight results.</source>
          <target state="translated">用于突出显示结果的参数阵列。</target>
        </trans-unit>
        <trans-unit id="504f638b263299d6837bd213f7e9fcd853be5b7c" translate="yes" xml:space="preserve">
          <source>Array of primary key attributes. Only the first element of the array will be used.</source>
          <target state="translated">主键属性数组。只使用数组的第一个元素。</target>
        </trans-unit>
        <trans-unit id="60dfcef65050ade4eb247ac898903a4adc9d14b6" translate="yes" xml:space="preserve">
          <source>Array of singleton definitions.</source>
          <target state="translated">单子定义的阵列。</target>
        </trans-unit>
        <trans-unit id="ca96f1255540252a7cd7f654373df0f08faa8121" translate="yes" xml:space="preserve">
          <source>Array of singleton definitions. See &lt;a href=&quot;yii-di-container#setDefinitions()-detail&quot;&gt;setDefinitions()&lt;/a&gt; for allowed formats of array.</source>
          <target state="translated">单例定义的数组。有关允许的数组格式，请参见&lt;a href=&quot;yii-di-container#setDefinitions()-detail&quot;&gt;setDefinitions（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eaaecf3dae3401a9adc89bcce0ef13b6f5a9049a" translate="yes" xml:space="preserve">
          <source>Array of user ID strings</source>
          <target state="translated">用户ID字符串数组</target>
        </trans-unit>
        <trans-unit id="9cbc3d81168c904a9e92540b2121fb26e3560463" translate="yes" xml:space="preserve">
          <source>Array of user's assignments</source>
          <target state="translated">用户任务数组</target>
        </trans-unit>
        <trans-unit id="c86c17fb8f3eab027753c140d1233cd635b85724" translate="yes" xml:space="preserve">
          <source>Array or object to extract value from</source>
          <target state="translated">要从数组或对象中提取值</target>
        </trans-unit>
        <trans-unit id="6234cfac56337af117a3b05543629271ef23e16b" translate="yes" xml:space="preserve">
          <source>Array to be merged from. You can specify additional arrays via third argument, fourth argument etc.</source>
          <target state="translated">要合并的数组。你可以通过第三个参数、第四个参数等指定其他数组。</target>
        </trans-unit>
        <trans-unit id="15344f5fadea9877805ce80ae94c0421d4afc97b" translate="yes" xml:space="preserve">
          <source>Array to be merged to</source>
          <target state="translated">要合并成的数组</target>
        </trans-unit>
        <trans-unit id="e2acf8ed2916fb5b2a0ff723712c73f9bc3394be" translate="yes" xml:space="preserve">
          <source>Array where key corresponds to cache key while value</source>
          <target state="translated">数组,其中key对应于缓存键,而value对应于缓存键。</target>
        </trans-unit>
        <trans-unit id="5907a712a841b1816ab31a630344637776fa3313" translate="yes" xml:space="preserve">
          <source>Array where key corresponds to cache key while value is the value stored</source>
          <target state="translated">数组,其中键对应于缓存键,而值是存储的值。</target>
        </trans-unit>
        <trans-unit id="95374e8d8c3a3ef39938a1ef6c3a6f3df37ebd78" translate="yes" xml:space="preserve">
          <source>Array where key corresponds to cache key while value is the value stored.</source>
          <target state="translated">数组,其中key对应于缓存键,value是存储的值。</target>
        </trans-unit>
        <trans-unit id="b3f2e985db383c94521559410abfe5a507362e26" translate="yes" xml:space="preserve">
          <source>ArrayAccess</source>
          <target state="translated">ArrayAccess</target>
        </trans-unit>
        <trans-unit id="f82c963f66c6ba2747c723e834999f968ae2239c" translate="yes" xml:space="preserve">
          <source>ArrayAccessTrait provides the implementation for &lt;a href=&quot;http://www.php.net/class.iteratoraggregate&quot;&gt;IteratorAggregate&lt;/a&gt;, &lt;a href=&quot;http://www.php.net/class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; and &lt;a href=&quot;http://www.php.net/class.countable&quot;&gt;Countable&lt;/a&gt;.</source>
          <target state="translated">ArrayAccessTrait提供&lt;a href=&quot;http://www.php.net/class.iteratoraggregate&quot;&gt;IteratorAggregate&lt;/a&gt;，&lt;a href=&quot;http://www.php.net/class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;和&lt;a href=&quot;http://www.php.net/class.countable&quot;&gt;Countable的实现&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8aa8beaba0f0f92ea7a94cc00f268421e16a6621" translate="yes" xml:space="preserve">
          <source>ArrayCache provides caching for the current request only by storing the values in an array.</source>
          <target state="translated">ArrayCache仅通过将值存储在数组中为当前请求提供缓存。</target>
        </trans-unit>
        <trans-unit id="1ca4acc405078a0fb8630fa75df5a7882fa35a81" translate="yes" xml:space="preserve">
          <source>ArrayDataProvider implements a data provider based on a data array.</source>
          <target state="translated">ArrayDataProvider实现了一个基于数据数组的数据提供者。</target>
        </trans-unit>
        <trans-unit id="9b67ce491b983e5e0b1e445476ad40d77b4d934a" translate="yes" xml:space="preserve">
          <source>ArrayDataProvider may be used in the following way:</source>
          <target state="translated">ArrayDataProvider可以用以下方式使用。</target>
        </trans-unit>
        <trans-unit id="6b6977012514023f0d4e7309c7da5910f737be79" translate="yes" xml:space="preserve">
          <source>ArrayFixture represents arbitrary fixture that can be loaded from PHP files.</source>
          <target state="translated">ArrayFixture代表任意的夹具,可以从PHP文件中加载。</target>
        </trans-unit>
        <trans-unit id="3a91c2a88cc5f629889533e012cc822c78d2aa6d" translate="yes" xml:space="preserve">
          <source>ArrayHelper</source>
          <target state="translated">ArrayHelper</target>
        </trans-unit>
        <trans-unit id="776719d86c43bfe323717d4658d932c70f44e404" translate="yes" xml:space="preserve">
          <source>ArrayHelper provides additional array functionality that you can use in your application.</source>
          <target state="translated">ArrayHelper提供了额外的数组功能,你可以在你的应用程序中使用。</target>
        </trans-unit>
        <trans-unit id="41eb415c07831f366e7c8a298f4997f3beb0eb62" translate="yes" xml:space="preserve">
          <source>ArrayIterator</source>
          <target state="translated">ArrayIterator</target>
        </trans-unit>
        <trans-unit id="c3e3b6d1d92f95ad0f0b55a2d3e955e5f18f94d4" translate="yes" xml:space="preserve">
          <source>ArrayObject</source>
          <target state="translated">ArrayObject</target>
        </trans-unit>
        <trans-unit id="fbebff73abaef1a72758d8d123134fcf9a569f77" translate="yes" xml:space="preserve">
          <source>Arrayable is the interface that should be implemented by classes who want to support customizable representation of their instances.</source>
          <target state="translated">Arrayable是应该由想要支持其实例的可定制表示的类来实现的接口。</target>
        </trans-unit>
        <trans-unit id="4de51d1ce03915d12cd3a763430c6c41bc16b83d" translate="yes" xml:space="preserve">
          <source>ArrayableTrait implements &lt;a href=&quot;yii-base-arrayabletrait#toArray()-detail&quot;&gt;toArray()&lt;/a&gt; by respecting the field definitions as declared in &lt;a href=&quot;yii-base-arrayabletrait#fields()-detail&quot;&gt;fields()&lt;/a&gt; and &lt;a href=&quot;yii-base-arrayabletrait#extraFields()-detail&quot;&gt;extraFields()&lt;/a&gt;.</source>
          <target state="translated">ArrayableTrait 通过遵守在&lt;a href=&quot;yii-base-arrayabletrait#fields()-detail&quot;&gt;fields（）&lt;/a&gt;和&lt;a href=&quot;yii-base-arrayabletrait#extraFields()-detail&quot;&gt;extraFields（）中&lt;/a&gt;声明的字段定义来实现&lt;a href=&quot;yii-base-arrayabletrait#toArray()-detail&quot;&gt;toArray &lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="45fd31062256ce4b54d432bf4a32178261f31241" translate="yes" xml:space="preserve">
          <source>ArrayableTrait provides a common implementation of the &lt;a href=&quot;yii-base-arrayable&quot;&gt;yii\base\Arrayable&lt;/a&gt; interface.</source>
          <target state="translated">ArrayableTrait提供yii &lt;a href=&quot;yii-base-arrayable&quot;&gt;\ base \ Arrayable&lt;/a&gt;接口的通用实现。</target>
        </trans-unit>
        <trans-unit id="f475debd2f84169fd5f0bbf4f9eece9de2a48b47" translate="yes" xml:space="preserve">
          <source>As a result, we will not see error message near form fields. To display it, we can include the error summary in view:</source>
          <target state="translated">因此,我们不会在表单字段附近看到错误信息。要显示它,我们可以在视图中包含错误摘要。</target>
        </trans-unit>
        <trans-unit id="ca7e8b6043f5ac61b1f1cc888796e522fb938403" translate="yes" xml:space="preserve">
          <source>As a rule of thumb, you should never trust the data received from end users and should always validate it before putting it to good use.</source>
          <target state="translated">作为经验法则,你永远不应该相信从终端用户那里收到的数据,应该总是在投入使用之前对其进行验证。</target>
        </trans-unit>
        <trans-unit id="36e2419d1789031ad93dde73d1e0fb4080f0896a" translate="yes" xml:space="preserve">
          <source>As a shortcut format, a string may be used to specify the configuration of a data column which only contains &lt;a href=&quot;yii-grid-datacolumn#%24attribute-detail&quot;&gt;attribute&lt;/a&gt;, &lt;a href=&quot;yii-grid-datacolumn#%24format-detail&quot;&gt;format&lt;/a&gt;, and/or &lt;a href=&quot;yii-grid-datacolumn#%24label-detail&quot;&gt;label&lt;/a&gt; options: &lt;code&gt;&quot;attribute:format:label&quot;&lt;/code&gt;. For example, the above &quot;name&quot; column can also be specified as: &lt;code&gt;&quot;name:text:Name&quot;&lt;/code&gt;. Both &quot;format&quot; and &quot;label&quot; are optional. They will take default values if absent.</source>
          <target state="translated">作为一种快捷格式，可以使用字符串来指定仅包含&lt;a href=&quot;yii-grid-datacolumn#%24attribute-detail&quot;&gt;attribute&lt;/a&gt;，&lt;a href=&quot;yii-grid-datacolumn#%24format-detail&quot;&gt;format&lt;/a&gt;和/或&lt;a href=&quot;yii-grid-datacolumn#%24label-detail&quot;&gt;label&lt;/a&gt;选项的数据列的配置： &lt;code&gt;&quot;attribute:format:label&quot;&lt;/code&gt; 。例如，上面的&amp;ldquo;名称&amp;rdquo;列也可以指定为： &lt;code&gt;&quot;name:text:Name&quot;&lt;/code&gt; 。&amp;ldquo;格式&amp;rdquo;和&amp;ldquo;标签&amp;rdquo;都是可选的。如果不存在，它们将采用默认值。</target>
        </trans-unit>
        <trans-unit id="484dd72010beb69264280f48883059a497658025" translate="yes" xml:space="preserve">
          <source>As aforementioned, a view is simply a PHP script mixed with HTML and PHP code. The following is the view that presents a login form. As you can see, PHP code is used to generate the dynamic content, such as the page title and the form, while HTML code organizes them into a presentable HTML page.</source>
          <target state="translated">如前所述,视图只是一个混合了HTML和PHP代码的PHP脚本。下面是呈现一个登录表单的视图。如你所见,PHP代码用于生成动态内容,如页面标题和表单,而HTML代码则将它们组织成一个可呈现的HTML页面。</target>
        </trans-unit>
        <trans-unit id="5ba0a7635fe3c5ecee6359b765e4712453d078fd" translate="yes" xml:space="preserve">
          <source>As aforementioned, besides using the default &lt;code&gt;response&lt;/code&gt; application component, you can also create your own response objects and send them to end users. You can do so by returning such object in an action method, like the following,</source>
          <target state="translated">如前所述，除了使用默认的 &lt;code&gt;response&lt;/code&gt; 应用程序组件之外，您还可以创建自己的响应对象并将其发送给最终用户。您可以通过以下操作方法返回此类对象，例如：</target>
        </trans-unit>
        <trans-unit id="d14ee148c10118344541047d1e58d23e3ea28ae0" translate="yes" xml:space="preserve">
          <source>As aforementioned, if an asset bundle is located in a directory that is not Web accessible, its assets will be copied to a Web directory when the bundle is being registered with a view. This process is called &lt;em&gt;asset publishing&lt;/em&gt;, and is done automatically by the &lt;a href=&quot;yii-web-assetmanager&quot;&gt;asset manager&lt;/a&gt;.</source>
          <target state="translated">如前所述，如果资产捆绑包位于不可通过Web访问的目录中，则在将资产捆绑包注册到视图时，其资产将复制到Web目录中。此过程称为&lt;em&gt;资产发布&lt;/em&gt;，由&lt;a href=&quot;yii-web-assetmanager&quot;&gt;资产管理器&lt;/a&gt;自动完成。</target>
        </trans-unit>
        <trans-unit id="2837bb903592caf8a0d1223e3b2429bd516ecd81" translate="yes" xml:space="preserve">
          <source>As aforementioned, log messages are maintained in an array by the &lt;a href=&quot;yii-log-logger&quot;&gt;logger object&lt;/a&gt;. To limit the memory consumption by this array, the logger will flush the recorded messages to the &lt;a href=&quot;#log-targets&quot;&gt;log targets&lt;/a&gt; each time the array accumulates a certain number of log messages. You can customize this number by configuring the &lt;a href=&quot;yii-log-dispatcher#%24flushInterval-detail&quot;&gt;flushInterval&lt;/a&gt; property of the &lt;code&gt;log&lt;/code&gt; component:</source>
          <target state="translated">如前所述，日志消息由&lt;a href=&quot;yii-log-logger&quot;&gt;logger对象&lt;/a&gt;维护在一个数组中。为了限制此阵列的内存消耗，每次阵列累积一定数量的日志消息时，记录器都会将记录的消息刷新到&lt;a href=&quot;#log-targets&quot;&gt;日志目标&lt;/a&gt;。您可以通过配置 &lt;code&gt;log&lt;/code&gt; 组件的&lt;a href=&quot;yii-log-dispatcher#%24flushInterval-detail&quot;&gt;flushInterval&lt;/a&gt;属性来自定义此数字：</target>
        </trans-unit>
        <trans-unit id="3f961a6f658e8c4090464ab86e837f5d261b33df" translate="yes" xml:space="preserve">
          <source>As aforementioned, rules add additional constraint to roles and permissions. A rule is a class extending from &lt;a href=&quot;yii-rbac-rule&quot;&gt;yii\rbac\Rule&lt;/a&gt;. It must implement the &lt;a href=&quot;yii-rbac-rule#execute()-detail&quot;&gt;execute()&lt;/a&gt; method. In the hierarchy we've created previously author cannot edit his own post. Let's fix it. First we need a rule to verify that the user is the post author:</source>
          <target state="translated">如前所述，规则为角色和权限添加了额外的约束。规则是从&lt;a href=&quot;yii-rbac-rule&quot;&gt;yii \ rbac \ Rule&lt;/a&gt;扩展的类。它必须实现&lt;a href=&quot;yii-rbac-rule#execute()-detail&quot;&gt;execute（）&lt;/a&gt;方法。在我们之前创建的层次结构中，作者无法编辑自己的帖子。让我们修复它。首先，我们需要一个规则来验证用户是帖子作者：</target>
        </trans-unit>
        <trans-unit id="8af00427a3bb997dde063dc2c60652d6c2b81612" translate="yes" xml:space="preserve">
          <source>As aforementioned, the data brought back from the database are populated into Active Record instances, and each row of the query result corresponds to a single Active Record instance. You can access the column values by accessing the attributes of the Active Record instances, for example,</source>
          <target state="translated">如前所述,从数据库带回的数据被填充到Active Record实例中,查询结果的每一行都对应一个Active Record实例。例如,可以通过访问Active Record实例的属性来访问列值。</target>
        </trans-unit>
        <trans-unit id="850bd5fabdff0df28992bb2351e107c8e94bc6d9" translate="yes" xml:space="preserve">
          <source>As aforementioned, the error handler turns all non-fatal PHP errors into catchable exceptions. This means you can use the following code to deal with PHP errors:</source>
          <target state="translated">如前所述,错误处理程序将所有非致命的PHP错误转化为可捕获的异常。这意味着你可以使用下面的代码来处理PHP错误。</target>
        </trans-unit>
        <trans-unit id="f504177d6ad022f06d1300b6e044c49da2e21c9d" translate="yes" xml:space="preserve">
          <source>As aforementioned, the formatter may use the currently active &lt;a href=&quot;yii-i18n-formatter#%24locale-detail&quot;&gt;locale&lt;/a&gt; to determine how to format a value that is suitable in the target country/region. For example, the same date value may be formatted differently for different locales:</source>
          <target state="translated">如上所述，格式化程序可以使用当前活动的&lt;a href=&quot;yii-i18n-formatter#%24locale-detail&quot;&gt;语言环境&lt;/a&gt;来确定如何格式化适合目标国家/地区的值。例如，对于不同的语言环境，相同的日期值可能会采用不同的格式：</target>
        </trans-unit>
        <trans-unit id="aeef30065b0adef9628d7576516a55a98eb2cb7d" translate="yes" xml:space="preserve">
          <source>As an example, say that the &lt;code&gt;Customer&lt;/code&gt; ActiveRecord class is associated with the &lt;code&gt;customer&lt;/code&gt; table. This would mean that the class's &lt;code&gt;name&lt;/code&gt; attribute is automatically mapped to the &lt;code&gt;name&lt;/code&gt; column in &lt;code&gt;customer&lt;/code&gt; table. Thanks to Active Record, assuming the variable &lt;code&gt;$customer&lt;/code&gt; is an object of type &lt;code&gt;Customer&lt;/code&gt;, to get the value of the &lt;code&gt;name&lt;/code&gt; column for the table row, you can use the expression &lt;code&gt;$customer-&amp;gt;name&lt;/code&gt;. In this example, Active Record is providing an object-oriented interface for accessing data stored in the database. But Active Record provides much more functionality than this.</source>
          <target state="translated">例如，假设 &lt;code&gt;Customer&lt;/code&gt; ActiveRecord类与 &lt;code&gt;customer&lt;/code&gt; 表相关联。这意味着该类的 &lt;code&gt;name&lt;/code&gt; 属性将自动映射到 &lt;code&gt;customer&lt;/code&gt; 表中的 &lt;code&gt;name&lt;/code&gt; 列。多亏了Active Record，假设变量 &lt;code&gt;$customer&lt;/code&gt; 是 &lt;code&gt;Customer&lt;/code&gt; 类型的对象，要获取表行的 &lt;code&gt;name&lt;/code&gt; 列的值，可以使用表达式 &lt;code&gt;$customer-&amp;gt;name&lt;/code&gt; 。在此示例中，Active Record提供了一个面向对象的接口，用于访问存储在数据库中的数据。但是Active Record提供的功能远不止于此。</target>
        </trans-unit>
        <trans-unit id="9261305a0066fedd72b31c2be00661bbbe4da402" translate="yes" xml:space="preserve">
          <source>As an example, to only have the view, and update button you can add the ActionColumn to your GridView columns as follows:</source>
          <target state="translated">作为一个例子,要想只拥有视图,和更新按钮,你可以添加ActionColumn到你的GridView列,如下所示。</target>
        </trans-unit>
        <trans-unit id="2294e31a91d8ebe38022a75f5269af8817bed489" translate="yes" xml:space="preserve">
          <source>As can be seen in the code above, the console application uses its own configuration file, named &lt;code&gt;console.php&lt;/code&gt;. In this file you should configure various &lt;a href=&quot;guide-structure-application-components&quot;&gt;application components&lt;/a&gt; and properties for the console application in particular.</source>
          <target state="translated">从上面的代码中可以看出，控制台应用程序使用其自己的配置文件，名为 &lt;code&gt;console.php&lt;/code&gt; 。在此文件中，您应该特别配置控制台应用程序的各种&lt;a href=&quot;guide-structure-application-components&quot;&gt;应用程序组件&lt;/a&gt;和属性。</target>
        </trans-unit>
        <trans-unit id="7239db934b4f387094639d2d671db3e5fd4b87cb" translate="yes" xml:space="preserve">
          <source>As described above, the &lt;a href=&quot;yii-base-model#scenarios()-detail&quot;&gt;yii\base\Model::scenarios()&lt;/a&gt; method serves for two purposes: determining which attributes should be validated, and determining which attributes are safe. In some rare cases, you may want to validate an attribute but do not want to mark it safe. You can do so by prefixing an exclamation mark &lt;code&gt;!&lt;/code&gt; to the attribute name when declaring it in &lt;code&gt;scenarios()&lt;/code&gt;, like the &lt;code&gt;secret&lt;/code&gt; attribute in the following:</source>
          <target state="translated">如上所述，&lt;a href=&quot;yii-base-model#scenarios()-detail&quot;&gt;yii \ base \ Model :: scenarios（）&lt;/a&gt;方法用于两个目的：确定应验证哪些属性，以及确定哪些属性是安全的。在极少数情况下，您可能想要验证属性，但又不想将其标记为安全。您可以在感叹号前面加上前缀 &lt;code&gt;!&lt;/code&gt; 在 &lt;code&gt;scenarios()&lt;/code&gt; 声明属性名称时，将其更改为属性名称，例如以下内容中的 &lt;code&gt;secret&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="51430248033b063f779afc2ba45fed3a8de4f4db" translate="yes" xml:space="preserve">
          <source>As described in the &lt;a href=&quot;#rendering-in-controllers&quot;&gt;Rendering in Controllers&lt;/a&gt; subsection, when you render a view by calling the &lt;a href=&quot;yii-base-controller#render()-detail&quot;&gt;render()&lt;/a&gt; method in a controller, a layout will be applied to the rendering result. By default, the layout &lt;code&gt;@app/views/layouts/main.php&lt;/code&gt; will be used.</source>
          <target state="translated">如&lt;a href=&quot;#rendering-in-controllers&quot;&gt;控制器&lt;/a&gt;中的渲染小节中所述，当通过在控制器中调用&lt;a href=&quot;yii-base-controller#render()-detail&quot;&gt;render（）&lt;/a&gt;方法来渲染视图时，布局将应用于渲染结果。默认情况下，将使用布局 &lt;code&gt;@app/views/layouts/main.php&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e07d3fe2092cf163fd9d0e2991a34a7c1606d475" translate="yes" xml:space="preserve">
          <source>As described in the &lt;a href=&quot;#resolving-dependencies&quot;&gt;Resolving Dependencies&lt;/a&gt; subsection, &lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;set()&lt;/a&gt; and &lt;a href=&quot;yii-di-container#setSingleton()-detail&quot;&gt;setSingleton()&lt;/a&gt; can optionally take dependency's constructor parameters as a third argument. To set the constructor parameters, you may use the following configuration array format:</source>
          <target state="translated">如&amp;ldquo; &lt;a href=&quot;#resolving-dependencies&quot;&gt;解决依赖关系&amp;rdquo;&lt;/a&gt;小节中所述，&lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;set（）&lt;/a&gt;和&lt;a href=&quot;yii-di-container#setSingleton()-detail&quot;&gt;setSingleton（）&lt;/a&gt;可以选择将依赖关系的构造函数参数作为第三个参数。要设置构造函数参数，可以使用以下配置数组格式：</target>
        </trans-unit>
        <trans-unit id="0029b31d99f2e78be6c6229de75f036e664e3f4f" translate="yes" xml:space="preserve">
          <source>As explained in the &lt;a href=&quot;#customizing-asset-bundles&quot;&gt;Customizing Asset Bundles&lt;/a&gt; subsection, the above configuration changes the default behavior of each bundle. In particular, Bundle A, B, C and D no longer have any asset files. They now all depend on the &lt;code&gt;all&lt;/code&gt; bundle which contains the combined &lt;code&gt;all-xyz.css&lt;/code&gt; and &lt;code&gt;all-xyz.js&lt;/code&gt; files. Consequently, for Page X, instead of including the original source files from Bundle A, B and C, only these two combined files will be included; the same thing happens to Page Y.</source>
          <target state="translated">如&amp;ldquo; &lt;a href=&quot;#customizing-asset-bundles&quot;&gt;自定义资产捆绑包&amp;rdquo;&lt;/a&gt;小节中所述，以上配置更改了每个捆绑包的默认行为。特别是，捆绑软件A，B，C和D不再具有任何资产文件。现在，它们都依赖于包含合并的 &lt;code&gt;all-xyz.css&lt;/code&gt; 和 &lt;code&gt;all-xyz.js&lt;/code&gt; 文件的 &lt;code&gt;all&lt;/code&gt; 捆绑包。因此，对于第X页，将不包括来自捆绑软件A，B和C的原始源文件，而仅包括这两个组合文件。 Page Y也发生了同样的事情。</target>
        </trans-unit>
        <trans-unit id="1573d6adb6188fdbfa3506a698a80dcd68e25d1d" translate="yes" xml:space="preserve">
          <source>As explained previously, you only need to implement &lt;code&gt;getAuthKey()&lt;/code&gt; and &lt;code&gt;validateAuthKey()&lt;/code&gt; if your application uses cookie-based login feature. In this case, you may use the following code to generate an auth key for each user and store it in the &lt;code&gt;user&lt;/code&gt; table:</source>
          <target state="translated">如前所述，如果您的应用程序使用基于cookie的登录功能，则仅需要实现 &lt;code&gt;getAuthKey()&lt;/code&gt; 和 &lt;code&gt;validateAuthKey()&lt;/code&gt; 。在这种情况下，您可以使用以下代码为每个用户生成一个身份验证密钥，并将其存储在 &lt;code&gt;user&lt;/code&gt; 表中：</target>
        </trans-unit>
        <trans-unit id="ed48c38ecf8ab6a07e5efc79531962415dc94881" translate="yes" xml:space="preserve">
          <source>As mentioned above, an application component will only be instantiated when it is being accessed the first time. If it is not accessed at all during a request, it will not be instantiated. Sometimes, however, you may want to instantiate an application component for every request, even if it is not explicitly accessed. To do so, you may list its ID in the &lt;a href=&quot;yii-base-application#bootstrap()-detail&quot;&gt;bootstrap&lt;/a&gt; property of the application.</source>
          <target state="translated">如上所述，仅当首次访问应用程序组件时，才会实例化该组件。如果在请求期间根本没有访问它，则不会实例化它。但是，有时，您可能希望为每个请求实例化一个应用程序组件，即使未显式访问它也是如此。为此，您可以在应用程序的&lt;a href=&quot;yii-base-application#bootstrap()-detail&quot;&gt;bootstrap&lt;/a&gt;属性中列出其ID 。</target>
        </trans-unit>
        <trans-unit id="da8bf91de7ece2fd9cb4f6c59cdee44e1787b5e3" translate="yes" xml:space="preserve">
          <source>As noted before, when using JOIN in a query, we need to disambiguate column names. Therefor often an alias is defined for a table. Setting an alias for the relational query would be possible by customizing the relation query in the following way:</source>
          <target state="translated">如前所述,当在查询中使用JOIN时,我们需要对列名进行歧义。因此,通常会为一个表定义一个别名。为关系查询设置别名可以通过自定义关系查询来实现,具体方法如下。</target>
        </trans-unit>
        <trans-unit id="e9873ec58ed12881c76e1239a377080fdc3fd77f" translate="yes" xml:space="preserve">
          <source>As shown above, &lt;a href=&quot;yii-di-servicelocator&quot;&gt;yii\di\ServiceLocator&lt;/a&gt; allows you to access a component like a property using the component ID. When you access a component for the first time, &lt;a href=&quot;yii-di-servicelocator&quot;&gt;yii\di\ServiceLocator&lt;/a&gt; will use the component registration information to create a new instance of the component and return it. Later, if the component is accessed again, the service locator will return the same instance.</source>
          <target state="translated">如上所示，&lt;a href=&quot;yii-di-servicelocator&quot;&gt;yii \ di \ ServiceLocator&lt;/a&gt;允许您使用组件ID访问组件，例如属性。首次访问组件时，&lt;a href=&quot;yii-di-servicelocator&quot;&gt;yii \ di \ ServiceLocator&lt;/a&gt;将使用组件注册信息来创建该组件的新实例并返回它。以后，如果再次访问该组件，则服务定位器将返回相同的实例。</target>
        </trans-unit>
        <trans-unit id="57275728031bb518e3560944782495830b64498d" translate="yes" xml:space="preserve">
          <source>As shown above, the child layout content should be enclosed within &lt;a href=&quot;yii-base-view#beginContent()-detail&quot;&gt;beginContent()&lt;/a&gt; and &lt;a href=&quot;yii-base-view#endContent()-detail&quot;&gt;endContent()&lt;/a&gt;. The parameter passed to &lt;a href=&quot;yii-base-view#beginContent()-detail&quot;&gt;beginContent()&lt;/a&gt; specifies what is the parent layout. It can be either a layout file or alias.</source>
          <target state="translated">如上所示，子布局内容应包含在&lt;a href=&quot;yii-base-view#beginContent()-detail&quot;&gt;beginContent（）&lt;/a&gt;和&lt;a href=&quot;yii-base-view#endContent()-detail&quot;&gt;endContent（）中&lt;/a&gt;。传递给&lt;a href=&quot;yii-base-view#beginContent()-detail&quot;&gt;beginContent（）&lt;/a&gt;的参数指定什么是父布局。它可以是布局文件或别名。</target>
        </trans-unit>
        <trans-unit id="0cddc62b1f64a706e416f8810a02e7256d0f4ec1" translate="yes" xml:space="preserve">
          <source>As this header directive is non-standard different directives exists for different web servers applications:</source>
          <target state="translated">由于这个头指令是非标准的,不同的Web服务器应用存在不同的指令。</target>
        </trans-unit>
        <trans-unit id="452d63e0d4bb32d7f5c85597d447cd098bcc9ab9" translate="yes" xml:space="preserve">
          <source>As validators are executed in the order they are specified this will first validate that the values entered in &lt;code&gt;fromDate&lt;/code&gt; and &lt;code&gt;toDate&lt;/code&gt; are valid date values and if so, they will be converted into a machine readable format. Afterwards these two values are compared with the compare validator. Client validation is not enabled as this will only work on the server-side because the date validator currently does not provide client validation, so &lt;a href=&quot;yii-validators-validator#%24enableClientValidation-detail&quot;&gt;$enableClientValidation&lt;/a&gt; is set to &lt;code&gt;false&lt;/code&gt; on the compare validator too.</source>
          <target state="translated">当验证器按照指定的顺序执行时，这将首先验证在 &lt;code&gt;fromDate&lt;/code&gt; 和 &lt;code&gt;toDate&lt;/code&gt; 中输入的值是有效的日期值，如果是，则将它们转换为机器可读格式。然后，将这两个值与比较验证器进行比较。未启用客户端验证，因为这仅在服务器端有效，因为日期验证器当前不提供客户端验证，因此&lt;a href=&quot;yii-validators-validator#%24enableClientValidation-detail&quot;&gt;$ enableClientValidation&lt;/a&gt;在比较验证器上也设置为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d585c94b400fa4319d142bdbe63d1929ee736d58" translate="yes" xml:space="preserve">
          <source>As was mentioned earlier it's recommended to use asset bundles instead of registering CSS and JavaScript files directly. You can get details on how to define asset bundles in the &lt;a href=&quot;guide-structure-assets&quot;&gt;&quot;Assets&quot; section&lt;/a&gt;. As for using already defined asset bundles, it's very straightforward:</source>
          <target state="translated">如前所述，建议您使用资产捆绑包，而不是直接注册CSS和JavaScript文件。您可以在&lt;a href=&quot;guide-structure-assets&quot;&gt;&amp;ldquo;资产&amp;rdquo;部分中&lt;/a&gt;获取有关如何定义资产束的详细信息。至于使用已经定义的资产束，则非常简单：</target>
        </trans-unit>
        <trans-unit id="9672da2617d161f8c35249335357a5fbae5539bc" translate="yes" xml:space="preserve">
          <source>As we described earlier, a fixture may depend on other fixtures. For example, a &lt;code&gt;UserProfileFixture&lt;/code&gt; may need to depends on &lt;code&gt;UserFixture&lt;/code&gt; because the user profile table contains a foreign key pointing to the user table. The dependency is specified via the &lt;a href=&quot;yii-test-fixture#%24depends-detail&quot;&gt;yii\test\Fixture::$depends&lt;/a&gt; property, like the following,</source>
          <target state="translated">如前所述，一个灯具可能依赖于其他灯具。例如，一个 &lt;code&gt;UserProfileFixture&lt;/code&gt; 可能需要依赖 &lt;code&gt;UserFixture&lt;/code&gt; ,因为用户配置文件表包含指向该用户表的外键。依赖关系是通过&lt;a href=&quot;yii-test-fixture#%24depends-detail&quot;&gt;yii \ test \ Fixture :: $ depends&lt;/a&gt;属性指定的，如下所示，</target>
        </trans-unit>
        <trans-unit id="94568645b114617fea333e40949a91933d722067" translate="yes" xml:space="preserve">
          <source>As we have described above, &lt;a href=&quot;yii-rest-serializer&quot;&gt;yii\rest\Serializer&lt;/a&gt; is the central piece responsible for converting resource objects or collections into arrays. It recognizes objects implementing &lt;a href=&quot;yii-base-arrayable&quot;&gt;yii\base\Arrayable&lt;/a&gt; as well as &lt;a href=&quot;yii-data-dataproviderinterface&quot;&gt;yii\data\DataProviderInterface&lt;/a&gt;. The former is mainly implemented by resource objects, while the latter resource collections.</source>
          <target state="translated">如上文所述，&lt;a href=&quot;yii-rest-serializer&quot;&gt;yii \ rest \ Serializer&lt;/a&gt;是负责将资源对象或集合转换为数组的核心部分。它识别实现&lt;a href=&quot;yii-base-arrayable&quot;&gt;yii \ base \ Arrayable&lt;/a&gt;以及yii &lt;a href=&quot;yii-data-dataproviderinterface&quot;&gt;\ data \ DataProviderInterface的对象&lt;/a&gt;。前者主要由资源对象实现，而后者则由资源集合实现。</target>
        </trans-unit>
        <trans-unit id="7dac11129364483f5c1fb018d0ee796d8ee0c500" translate="yes" xml:space="preserve">
          <source>As with all places where raw SQL is involved, you may use the &lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;DBMS agnostic quoting syntax&lt;/a&gt; for table and column names when writing DB expressions in select.</source>
          <target state="translated">与涉及原始SQL的所有地方一样，在select中编写数据库表达式时，可以对表名和列名使用&lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;DBMS不可知的引用语法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0793ad6a7d027728dd879ebeeb1f8dafd3e323cb" translate="yes" xml:space="preserve">
          <source>As with all places where raw SQL is involved, you may use the &lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;DBMS agnostic quoting syntax&lt;/a&gt; for table and column names when writing conditions in string format.</source>
          <target state="translated">与涉及原始SQL的所有地方一样，在以字符串格式编写条件时，可以对表名和列名使用&lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;DBMS不可知的引用语法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7c90a3583d2da4dfa6924c00a79cf1617238633f" translate="yes" xml:space="preserve">
          <source>As you can see from the code comment above, there are 101 SQL statements being executed! This is because each time you access the &lt;code&gt;orders&lt;/code&gt; relation property of a different &lt;code&gt;Customer&lt;/code&gt; object in the for-loop, a SQL statement will be executed.</source>
          <target state="translated">从上面的代码注释中可以看到，有101条SQL语句正在执行！这是因为每次在for循环中访问另一个 &lt;code&gt;Customer&lt;/code&gt; 对象的 &lt;code&gt;orders&lt;/code&gt; 关系属性时，都会执行一条SQL语句。</target>
        </trans-unit>
        <trans-unit id="af91e94d99d50cd2f1ace10873ad9120ffe39c48" translate="yes" xml:space="preserve">
          <source>As you can see in the screenshot, Yii has already defined a set of commands that are available by default:</source>
          <target state="translated">正如你在截图中看到的,Yii已经定义了一组默认可用的命令。</target>
        </trans-unit>
        <trans-unit id="59165dba75660573a50efa9e01b0e0074781d685" translate="yes" xml:space="preserve">
          <source>As you can see, PHP's output buffer is started in &lt;code&gt;init()&lt;/code&gt; so that any output between the calls of &lt;code&gt;init()&lt;/code&gt; and &lt;code&gt;run()&lt;/code&gt; can be captured, processed and returned in &lt;code&gt;run()&lt;/code&gt;.</source>
          <target state="translated">如您所见，PHP的输出缓冲区在 &lt;code&gt;init()&lt;/code&gt; 中启动，因此 &lt;code&gt;init()&lt;/code&gt; 和 &lt;code&gt;run()&lt;/code&gt; 调用之间的任何输出都可以在 &lt;code&gt;run()&lt;/code&gt; 中捕获，处理和返回。</target>
        </trans-unit>
        <trans-unit id="3737fbfcf8ec2a290e673827b88ce473ff4606a0" translate="yes" xml:space="preserve">
          <source>As you can see, all these methods are named as &lt;code&gt;asXyz()&lt;/code&gt;, where &lt;code&gt;Xyz&lt;/code&gt; stands for a supported format. Alternatively, you may format data using the generic method &lt;a href=&quot;yii-i18n-formatter#format()-detail&quot;&gt;format()&lt;/a&gt;, which allows you to control the desired format programmatically and is commonly used by widgets like &lt;a href=&quot;yii-grid-gridview&quot;&gt;yii\grid\GridView&lt;/a&gt; and &lt;a href=&quot;yii-widgets-detailview&quot;&gt;yii\widgets\DetailView&lt;/a&gt;. For example,</source>
          <target state="translated">正如你所看到的，所有这些方法被命名为 &lt;code&gt;asXyz()&lt;/code&gt; ，其中 &lt;code&gt;Xyz&lt;/code&gt; 代表支持的格式。或者，您可以使用通用方法&lt;a href=&quot;yii-i18n-formatter#format()-detail&quot;&gt;format（）&lt;/a&gt;格式化数据，该方法允许您以编程方式控制所需的格式，并且通常由&lt;a href=&quot;yii-grid-gridview&quot;&gt;yii \ grid \ GridView&lt;/a&gt;和&lt;a href=&quot;yii-widgets-detailview&quot;&gt;yii \ widgets \ DetailView之类的小部件使用&lt;/a&gt;。例如，</target>
        </trans-unit>
        <trans-unit id="73fa135256d4d4ca0b681a9540ea9079a2b78eb3" translate="yes" xml:space="preserve">
          <source>As you can see, although &lt;code&gt;$component&lt;/code&gt; does not define &lt;code&gt;prop1&lt;/code&gt; and &lt;code&gt;foo()&lt;/code&gt;, they can be used as if they are part of the component definition due to the attached behavior.</source>
          <target state="translated">如您所见，尽管 &lt;code&gt;$component&lt;/code&gt; 没有定义 &lt;code&gt;prop1&lt;/code&gt; 和 &lt;code&gt;foo()&lt;/code&gt; ，但是由于附加的行为，它们可以当作组件定义的一部分来使用。</target>
        </trans-unit>
        <trans-unit id="0c52b75701591352076bfed31dc60f8af996668d" translate="yes" xml:space="preserve">
          <source>As you can see, in the &lt;code&gt;update&lt;/code&gt; view you would render input fields using two models &lt;code&gt;$user&lt;/code&gt; and &lt;code&gt;$profile&lt;/code&gt;.</source>
          <target state="translated">如您所见，在 &lt;code&gt;update&lt;/code&gt; 视图中，您将使用两个模型 &lt;code&gt;$user&lt;/code&gt; 和 &lt;code&gt;$profile&lt;/code&gt; 呈现输入字段。</target>
        </trans-unit>
        <trans-unit id="cf3da484741cd88799acaff0ad68f3b2ec0fa95c" translate="yes" xml:space="preserve">
          <source>As you can see, in the response headers, there is information about the total count, page count, etc. There are also links that allow you to navigate to other pages of data. For example, &lt;code&gt;http://localhost/users?page=2&lt;/code&gt; would give you the next page of the user data.</source>
          <target state="translated">如您所见，在响应标题中，有关于总计数，页数等的信息。还有一些链接使您可以导航到其他数据页。例如， &lt;code&gt;http://localhost/users?page=2&lt;/code&gt; 将为您提供用户数据的下一页。</target>
        </trans-unit>
        <trans-unit id="71fced5eaeb58aa9eb35094a317952401ad8a6e8" translate="yes" xml:space="preserve">
          <source>As you can see, page caching is very similar to &lt;a href=&quot;guide-caching-fragment&quot;&gt;fragment caching&lt;/a&gt;. They both support options such as &lt;code&gt;duration&lt;/code&gt;, &lt;code&gt;dependencies&lt;/code&gt;, &lt;code&gt;variations&lt;/code&gt;, and &lt;code&gt;enabled&lt;/code&gt;. Their main difference is that page caching is implemented as an &lt;a href=&quot;guide-structure-filters&quot;&gt;action filter&lt;/a&gt; while fragment caching a &lt;a href=&quot;guide-structure-widgets&quot;&gt;widget&lt;/a&gt;.</source>
          <target state="translated">如您所见，页面缓存与&lt;a href=&quot;guide-caching-fragment&quot;&gt;片段缓存&lt;/a&gt;非常相似。它们都支持诸如 &lt;code&gt;duration&lt;/code&gt; ， &lt;code&gt;dependencies&lt;/code&gt; ， &lt;code&gt;variations&lt;/code&gt; 和 &lt;code&gt;enabled&lt;/code&gt; 。它们的主要区别在于，页面缓存是作为&lt;a href=&quot;guide-structure-filters&quot;&gt;动作过滤器&lt;/a&gt;实现的，而片段缓存了&lt;a href=&quot;guide-structure-widgets&quot;&gt;小部件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="84260914752fb6ac84f0c0ab25f0bc20cbe84ae7" translate="yes" xml:space="preserve">
          <source>As you can see, the &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;yii\web\Response::send()&lt;/a&gt; method triggers several useful events. By responding to these events, it is possible to adjust or decorate the response.</source>
          <target state="translated">如您所见，&lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;yii \ web \ Response :: send（）&lt;/a&gt;方法触发了几个有用的事件。通过响应这些事件，可以调整或修饰响应。</target>
        </trans-unit>
        <trans-unit id="ebda101cc9d30b2e3c9fda857168b641e88cf8da" translate="yes" xml:space="preserve">
          <source>As you can see, the &lt;code&gt;actions()&lt;/code&gt; method should return an array whose keys are action IDs and values the corresponding action class names or &lt;a href=&quot;guide-concept-configurations&quot;&gt;configurations&lt;/a&gt;. Unlike inline actions, action IDs for standalone actions can contain arbitrary characters, as long as they are declared in the &lt;code&gt;actions()&lt;/code&gt; method.</source>
          <target state="translated">如您所见， &lt;code&gt;actions()&lt;/code&gt; 方法应返回一个数组，其键为动作ID，其值对应于对应的动作类名称或&lt;a href=&quot;guide-concept-configurations&quot;&gt;配置&lt;/a&gt;。与内联动作不同，独立动作的动作ID可以包含任意字符，只要它们在 &lt;code&gt;actions()&lt;/code&gt; 方法中声明即可。</target>
        </trans-unit>
        <trans-unit id="e241100b1416c0bbf91ff397c70a5ea72779f7e8" translate="yes" xml:space="preserve">
          <source>As you can see, the asset bundles are divided into three groups: &lt;code&gt;allShared&lt;/code&gt;, &lt;code&gt;allBackEnd&lt;/code&gt; and &lt;code&gt;allFrontEnd&lt;/code&gt;. They each depends on an appropriate set of asset bundles. For example, &lt;code&gt;allBackEnd&lt;/code&gt; depends on &lt;code&gt;app\assets\AdminAsset&lt;/code&gt;. When running &lt;code&gt;asset&lt;/code&gt; command with this configuration, it will combine asset bundles according to the above specification.</source>
          <target state="translated">如您所见，资产捆绑包分为三组： &lt;code&gt;allShared&lt;/code&gt; ， &lt;code&gt;allBackEnd&lt;/code&gt; 和 &lt;code&gt;allFrontEnd&lt;/code&gt; 。它们每个都依赖于一组适当的资产捆绑。例如， &lt;code&gt;allBackEnd&lt;/code&gt; 取决于 &lt;code&gt;app\assets\AdminAsset&lt;/code&gt; 。使用此配置运行 &lt;code&gt;asset&lt;/code&gt; 命令时，它将根据上述规范组合资产束。</target>
        </trans-unit>
        <trans-unit id="99332175435a66cd5c51183af5f6b3b4a859ea2c" translate="yes" xml:space="preserve">
          <source>As you can see, the key includes all necessary information needed to uniquely specify a database table.</source>
          <target state="translated">正如你所看到的,该键包含了唯一指定数据库表所需的所有必要信息。</target>
        </trans-unit>
        <trans-unit id="550dc6a26877cd64fc5b67d37d76bdc822bfa83c" translate="yes" xml:space="preserve">
          <source>As you can see, the layout generates the HTML tags that are common to all pages. Within the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; section, the layout echoes the &lt;code&gt;$content&lt;/code&gt; variable which represents the rendering result of content views and is pushed into the layout when &lt;a href=&quot;yii-base-controller#render()-detail&quot;&gt;yii\base\Controller::render()&lt;/a&gt; is called.</source>
          <target state="translated">如您所见，布局生成了所有页面通用的HTML标签。在 &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 部分中，布局回显表示内容视图渲染结果的 &lt;code&gt;$content&lt;/code&gt; 变量，并在调用&lt;a href=&quot;yii-base-controller#render()-detail&quot;&gt;yii \ base \ Controller :: render（）&lt;/a&gt;时将其推送到布局中。</target>
        </trans-unit>
        <trans-unit id="6d0e2ab6807efff8fb37e1aeb98600891aac3db0" translate="yes" xml:space="preserve">
          <source>As you can see, the property takes an array of extension specifications. Each extension is specified with an array consisting of &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;version&lt;/code&gt; elements. If an extension needs to run during the &lt;a href=&quot;guide-runtime-bootstrapping&quot;&gt;bootstrap&lt;/a&gt; process, a &lt;code&gt;bootstrap&lt;/code&gt; element may be specified with a bootstrapping class name or a &lt;a href=&quot;guide-concept-configurations&quot;&gt;configuration&lt;/a&gt; array. An extension may also define a few &lt;a href=&quot;guide-concept-aliases&quot;&gt;aliases&lt;/a&gt;.</source>
          <target state="translated">如您所见，该属性采用一组扩展规范。每个扩展都由一个由 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;version&lt;/code&gt; 元素组成的数组指定。如果扩展需要在&lt;a href=&quot;guide-runtime-bootstrapping&quot;&gt;引导&lt;/a&gt;过程中运行，则可以使用引导类名或&lt;a href=&quot;guide-concept-configurations&quot;&gt;配置&lt;/a&gt;数组指定 &lt;code&gt;bootstrap&lt;/code&gt; 元素。扩展也可以定义一些&lt;a href=&quot;guide-concept-aliases&quot;&gt;别名&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e74f74fd0ea0faba2799d34ade6c6cb9b94cde44" translate="yes" xml:space="preserve">
          <source>As you can see, the query builder is intelligent enough to properly handle values that are nulls or arrays.</source>
          <target state="translated">正如你所看到的那样,查询生成器足够智能,可以正确地处理为空或数组的值。</target>
        </trans-unit>
        <trans-unit id="fcd76f089ba69e28c7f33d693e5af4e36c0731c4" translate="yes" xml:space="preserve">
          <source>As you can see, these validation rules do not really validate the inputs. Instead, they will process the values and save them back to the attributes being validated.</source>
          <target state="translated">正如你所看到的,这些验证规则并没有真正验证输入。相反,它们会处理值并将其保存到被验证的属性中。</target>
        </trans-unit>
        <trans-unit id="9f978b1695a46272efc31459c84f8c674dc1e9c0" translate="yes" xml:space="preserve">
          <source>As you can see, this is very similar to the procedure with &lt;a href=&quot;guide-db-query-builder&quot;&gt;query builder&lt;/a&gt;. The only difference is that instead of using the &lt;code&gt;new&lt;/code&gt; operator to create a query object, you call &lt;a href=&quot;yii-db-activerecord#find()-detail&quot;&gt;yii\db\ActiveRecord::find()&lt;/a&gt; to return a new query object which is of class &lt;a href=&quot;yii-db-activequery&quot;&gt;yii\db\ActiveQuery&lt;/a&gt;.</source>
          <target state="translated">如您所见，这与使用&lt;a href=&quot;guide-db-query-builder&quot;&gt;query builder&lt;/a&gt;的过程非常相似。唯一的区别是，您无需使用 &lt;code&gt;new&lt;/code&gt; 运算符来创建查询对象，而是调用&lt;a href=&quot;yii-db-activerecord#find()-detail&quot;&gt;yii \ db \ ActiveRecord :: find（）&lt;/a&gt;返回一个新查询类&lt;a href=&quot;yii-db-activequery&quot;&gt;yii \ db \ ActiveQuery&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="327c3e579d0a27f963e7d0a5abccdd867f6a3ce0" translate="yes" xml:space="preserve">
          <source>As you can see, you can register a bootstrapping class in terms of either a class name or a configuration class.</source>
          <target state="translated">正如你所看到的,你可以用类名或配置类来注册一个引导类。</target>
        </trans-unit>
        <trans-unit id="66874a8c759dd90f1fea9ad669ffac7f7fb9cf05" translate="yes" xml:space="preserve">
          <source>Asks the user for input. Ends when the user types a carriage return (PHP_EOL). Optionally, It also provides a prompt.</source>
          <target state="translated">要求用户输入。当用户输入回车(PHP_EOL)时结束。可选地,它还提供一个提示。</target>
        </trans-unit>
        <trans-unit id="00b2ffc22ffe6ef0219c2c2b2b4d7f8c3f96c1f8" translate="yes" xml:space="preserve">
          <source>Asks user to confirm by typing y or n.</source>
          <target state="translated">要求用户通过输入y或n进行确认。</target>
        </trans-unit>
        <trans-unit id="bda98c2151f56027efb69a688308b94576e1a797" translate="yes" xml:space="preserve">
          <source>Asset Bundles</source>
          <target state="translated">资产包</target>
        </trans-unit>
        <trans-unit id="6ac54a516f95d6101ba93ee141d79aa0e7ece8e7" translate="yes" xml:space="preserve">
          <source>Asset Conversion</source>
          <target state="translated">资产转换</target>
        </trans-unit>
        <trans-unit id="43b5fc750a0a8ca9974237e9d72a2580f28eff9c" translate="yes" xml:space="preserve">
          <source>Asset Dependencies</source>
          <target state="translated">资产依赖性</target>
        </trans-unit>
        <trans-unit id="7b1699acb6cee23628544fb69294d1c3727d8b50" translate="yes" xml:space="preserve">
          <source>Asset Locations</source>
          <target state="translated">资产位置</target>
        </trans-unit>
        <trans-unit id="0b898c33049a821c2822ba3c3379df098743bfca" translate="yes" xml:space="preserve">
          <source>Asset Mapping</source>
          <target state="translated">资产测绘</target>
        </trans-unit>
        <trans-unit id="f6a0a74290e12a8804e0de36f4933ce849205be7" translate="yes" xml:space="preserve">
          <source>Asset Options</source>
          <target state="translated">资产选择</target>
        </trans-unit>
        <trans-unit id="d73761c7e77ee2b98737782d3ff5cd1bb1a3b17f" translate="yes" xml:space="preserve">
          <source>Asset Publishing</source>
          <target state="translated">资产出版</target>
        </trans-unit>
        <trans-unit id="6f5721b3b2dcacaf4d4cef0647f5a92a2ee55f2e" translate="yes" xml:space="preserve">
          <source>Asset base path and command working directory</source>
          <target state="translated">资产基础路径和命令工作目录</target>
        </trans-unit>
        <trans-unit id="6815c144110478082c7ca9cd28a9e17e396bc899" translate="yes" xml:space="preserve">
          <source>Asset bundles are specified as PHP classes extending from &lt;a href=&quot;yii-web-assetbundle&quot;&gt;yii\web\AssetBundle&lt;/a&gt;. The name of a bundle is simply its corresponding fully qualified PHP class name (without the leading backslash). An asset bundle class should be &lt;a href=&quot;guide-concept-autoloading&quot;&gt;autoloadable&lt;/a&gt;. It usually specifies where the assets are located, what CSS and JavaScript files the bundle contains, and how the bundle depends on other bundles.</source>
          <target state="translated">资产捆绑包指定为从&lt;a href=&quot;yii-web-assetbundle&quot;&gt;yii \ web \ AssetBundle&lt;/a&gt;扩展的PHP类。捆绑包的名称只是其对应的完全限定的PHP类名称（不带反斜杠）。资产捆绑包类应该是可&lt;a href=&quot;guide-concept-autoloading&quot;&gt;自动加载的&lt;/a&gt;。它通常指定资产的位置，捆绑软件包含哪些CSS和JavaScript文件以及捆绑软件如何依赖于其他捆绑软件。</target>
        </trans-unit>
        <trans-unit id="74e332a516d450d6e3754b627c9abb5d84c6171f" translate="yes" xml:space="preserve">
          <source>Asset bundles list.</source>
          <target state="translated">资产捆绑清单。</target>
        </trans-unit>
        <trans-unit id="26188e03af51e4da4b42e3faa72c64710f25988e" translate="yes" xml:space="preserve">
          <source>Asset dependencies are mainly specified through the &lt;a href=&quot;yii-web-assetbundle#%24depends-detail&quot;&gt;yii\web\AssetBundle::$depends&lt;/a&gt; property. In the &lt;code&gt;AppAsset&lt;/code&gt; example, the asset bundle depends on two other asset bundles: &lt;a href=&quot;yii-web-yiiasset&quot;&gt;yii\web\YiiAsset&lt;/a&gt; and &lt;a href=&quot;yii-bootstrap-bootstrapasset&quot;&gt;yii\bootstrap\BootstrapAsset&lt;/a&gt;, which means the CSS and JavaScript files in &lt;code&gt;AppAsset&lt;/code&gt; will be included &lt;em&gt;after&lt;/em&gt; those files in the two dependent bundles.</source>
          <target state="translated">资产依赖关系主要通过&lt;a href=&quot;yii-web-assetbundle#%24depends-detail&quot;&gt;yii \ web \ AssetBundle :: $ depends&lt;/a&gt;属性指定。在 &lt;code&gt;AppAsset&lt;/code&gt; 示例中，资产捆绑包依赖于其他两个资产捆绑包：&lt;a href=&quot;yii-web-yiiasset&quot;&gt;yii \ web \ YiiAsset&lt;/a&gt;和yii &lt;a href=&quot;yii-bootstrap-bootstrapasset&quot;&gt;\ bootstrap \ BootstrapAsset&lt;/a&gt;，这意味着 &lt;code&gt;AppAsset&lt;/code&gt; 中的CSS和JavaScript文件将被包含&lt;em&gt;在&lt;/em&gt;两个从属捆绑中的那些文件&lt;em&gt;之后&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ffd541ea7684e943685ef29a37c86a04e3ab08cd" translate="yes" xml:space="preserve">
          <source>Asset dependencies are transitive. This means if bundle A depends on B which depends on C, A will depend on C, too.</source>
          <target state="translated">资产依赖性是转折性的。这意味着如果捆绑A依赖于B,而B依赖于C,那么A也将依赖于C。</target>
        </trans-unit>
        <trans-unit id="5598d0c865c21c0e9bb5ffe40fc59576b5adcca9" translate="yes" xml:space="preserve">
          <source>Asset manager instance or its array configuration.</source>
          <target state="translated">资产管理人实例或其阵列配置。</target>
        </trans-unit>
        <trans-unit id="8594df8e750358fd470e3a09930439a35a07fa01" translate="yes" xml:space="preserve">
          <source>Asset manager instance.</source>
          <target state="translated">资产管理人实例。</target>
        </trans-unit>
        <trans-unit id="f66e9c2528c620b17814663d7b63f9b0fef363c0" translate="yes" xml:space="preserve">
          <source>AssetBundle represents a collection of asset files, such as CSS, JS, images.</source>
          <target state="translated">AssetBundle表示资产文件的集合,如CSS、JS、图片。</target>
        </trans-unit>
        <trans-unit id="ba1ac37456a75903f6940da2674acb9a17754c0f" translate="yes" xml:space="preserve">
          <source>AssetConverter supports conversion of several popular script formats into JS or CSS scripts.</source>
          <target state="translated">AssetConverter支持将几种流行的脚本格式转换为JS或CSS脚本。</target>
        </trans-unit>
        <trans-unit id="90992fac1e21c4cb1ba55ef4b848a407ba8a39c1" translate="yes" xml:space="preserve">
          <source>AssetManager is configured as an application component in &lt;a href=&quot;yii-web-application&quot;&gt;yii\web\Application&lt;/a&gt; by default. You can access that instance via &lt;code&gt;Yii::$app-&amp;gt;assetManager&lt;/code&gt;.</source>
          <target state="translated">默认情况下，AssetManager在&lt;a href=&quot;yii-web-application&quot;&gt;yii \ web \ Application中&lt;/a&gt;配置为应用程序组件。您可以通过 &lt;code&gt;Yii::$app-&amp;gt;assetManager&lt;/code&gt; 访问该实例。</target>
        </trans-unit>
        <trans-unit id="8d99eace589737bba73e19787d6fd07b01d837d2" translate="yes" xml:space="preserve">
          <source>AssetManager manages asset bundle configuration and loading.</source>
          <target state="translated">AssetManager管理资产捆绑配置和加载。</target>
        </trans-unit>
        <trans-unit id="20e338624cee29d0effead85b0dd0e70de783b4c" translate="yes" xml:space="preserve">
          <source>Assets</source>
          <target state="translated">Assets</target>
        </trans-unit>
        <trans-unit id="cfbe502f01d8d6b72053de040f8a04a4e976c04e" translate="yes" xml:space="preserve">
          <source>Assets, based on their location, can be classified as:</source>
          <target state="translated">资产根据其位置可分为:</target>
        </trans-unit>
        <trans-unit id="b1048f29ec321509fa4b87338907236e9fe24f98" translate="yes" xml:space="preserve">
          <source>Assign new values to Active Record attributes</source>
          <target state="translated">为活动记录属性分配新值</target>
        </trans-unit>
        <trans-unit id="7c7c96ccbb2af072864f03a56adfad48b398b303" translate="yes" xml:space="preserve">
          <source>Assigning roles to users</source>
          <target state="translated">为用户分配角色</target>
        </trans-unit>
        <trans-unit id="8a81c6bfb3eebe6ed9dae29295b99b18127ebbfe" translate="yes" xml:space="preserve">
          <source>Assignment represents an assignment of a role to a user.</source>
          <target state="translated">分配表示将一个角色分配给一个用户。</target>
        </trans-unit>
        <trans-unit id="5b95fb01a2cdf3c4d5614bd6b969a38748209711" translate="yes" xml:space="preserve">
          <source>Assigns a role to a user.</source>
          <target state="translated">为用户指定一个角色。</target>
        </trans-unit>
        <trans-unit id="df5a7676484bec7031afe76829f37b5d2d08a6e8" translate="yes" xml:space="preserve">
          <source>Associated stream resource context.</source>
          <target state="translated">相关的流资源上下文。</target>
        </trans-unit>
        <trans-unit id="6017e17eb15a136356ed4bc5410b1a7e08b27a69" translate="yes" xml:space="preserve">
          <source>Associated stream resource context. This property is set automatically by PHP once wrapper is instantiated.</source>
          <target state="translated">相关的流资源上下文。这个属性是PHP在实例化wrapper后自动设置的。</target>
        </trans-unit>
        <trans-unit id="fec288fc3e278eb0fcf755ae0d8d0db7967e3069" translate="yes" xml:space="preserve">
          <source>Associated with each role or permission, there may be a &lt;em&gt;rule&lt;/em&gt;. A rule represents a piece of code that will be executed during access check to determine if the corresponding role or permission applies to the current user. For example, the &quot;update post&quot; permission may have a rule that checks if the current user is the post creator. During access checking, if the user is NOT the post creator, he/she will be considered not having the &quot;update post&quot; permission.</source>
          <target state="translated">与每个角色或权限相关联，可能会有一个&lt;em&gt;规则&lt;/em&gt;。规则代表一段代码，将在访问检查期间执行该代码以确定相应的角色或权限是否适用于当前用户。例如，&amp;ldquo;更新帖子&amp;rdquo;权限可能具有检查当前用户是否是帖子创建者的规则。在访问检查期间，如果用户不是帖子创建者，则将认为他/她没有&amp;ldquo;更新帖子&amp;rdquo;权限。</target>
        </trans-unit>
        <trans-unit id="e5be3bbe9f953e22e5ea6a7e130594b51128b0b9" translate="yes" xml:space="preserve">
          <source>Assume in the user table, you have a &lt;code&gt;group&lt;/code&gt; column which uses 1 to represent the administrator group and 2 the author group. You plan to have two RBAC roles &lt;code&gt;admin&lt;/code&gt; and &lt;code&gt;author&lt;/code&gt; to represent the permissions for these two groups, respectively. You can set up the RBAC data as follows,</source>
          <target state="translated">假设在用户表中，您有一个 &lt;code&gt;group&lt;/code&gt; 列，其中使用1代表管理员组，使用2代表作者组。您计划有两个RBAC角色 &lt;code&gt;admin&lt;/code&gt; 和 &lt;code&gt;author&lt;/code&gt; 分别代表这两个组的权限。您可以按以下方式设置RBAC数据，</target>
        </trans-unit>
        <trans-unit id="08c631b2150158dce256e7d5d3cd4dc60641a1a5" translate="yes" xml:space="preserve">
          <source>Assume we want to list the &lt;code&gt;Post&lt;/code&gt; and &lt;code&gt;User&lt;/code&gt; models for which we have already prepared two data providers in &lt;code&gt;$userProvider&lt;/code&gt; and &lt;code&gt;$postProvider&lt;/code&gt;:</source>
          <target state="translated">假设我们要列出已经为 &lt;code&gt;$userProvider&lt;/code&gt; 和 &lt;code&gt;$postProvider&lt;/code&gt; 准备了两个数据提供者的 &lt;code&gt;Post&lt;/code&gt; 和 &lt;code&gt;User&lt;/code&gt; 模型：</target>
        </trans-unit>
        <trans-unit id="e420beeb42afd4d60dd10a4a03feda866e71def2" translate="yes" xml:space="preserve">
          <source>Assume you want to expose the user data via RESTful APIs. The user data are stored in the &lt;code&gt;user&lt;/code&gt; DB table, and you have already created the &lt;a href=&quot;guide-db-active-record&quot;&gt;active record&lt;/a&gt; class &lt;code&gt;app\models\User&lt;/code&gt; to access the user data.</source>
          <target state="translated">假设您想通过RESTful API公开用户数据。用户数据存储在 &lt;code&gt;user&lt;/code&gt; 数据库表中，并且您已经创建了&lt;a href=&quot;guide-db-active-record&quot;&gt;活动记录&lt;/a&gt;类 &lt;code&gt;app\models\User&lt;/code&gt; 来访问用户数据。</target>
        </trans-unit>
        <trans-unit id="dda4c315aa9e6f2f500333b92166d75247610bc6" translate="yes" xml:space="preserve">
          <source>Assume your application has two pages, X and Y. Page X uses asset bundles A, B and C, while Page Y uses asset bundles B, C and D.</source>
          <target state="translated">假设你的应用程序有两个页面,X和Y,X页使用资产捆绑A、B和C,而Y页使用资产捆绑B、C和D。</target>
        </trans-unit>
        <trans-unit id="c290e5e329db8890c22474c05707bbdff542dd5a" translate="yes" xml:space="preserve">
          <source>Assuming the URL being requested is &lt;code&gt;http://example.com/admin/index.php/product?id=100&lt;/code&gt;, you can get various parts of this URL as summarized in the following:</source>
          <target state="translated">假设所请求的URL为 &lt;code&gt;http://example.com/admin/index.php/product?id=100&lt;/code&gt; ，则可以获取该URL的各个部分，如下所示：</target>
        </trans-unit>
        <trans-unit id="1ebee97a4c9505ff6c3dab4884070dbde12be345" translate="yes" xml:space="preserve">
          <source>Attach a content as file and return it's CID source.</source>
          <target state="translated">将一个内容作为文件附加,并返回它的CID来源。</target>
        </trans-unit>
        <trans-unit id="f30d3b2ad07394d046f41e43478aed87242ac463" translate="yes" xml:space="preserve">
          <source>Attach a file and return it's CID source.</source>
          <target state="translated">附加一个文件,并返回它的CID来源。</target>
        </trans-unit>
        <trans-unit id="5c0fbac87cd094db00f5a599ab04defd2a4663b8" translate="yes" xml:space="preserve">
          <source>Attach specified content as file for the email message.</source>
          <target state="translated">将指定的内容以文件形式附加到电子邮件中。</target>
        </trans-unit>
        <trans-unit id="95a409751b721fe36d1e20d006e2aceb1bfdb4ec" translate="yes" xml:space="preserve">
          <source>Attaches a behavior to this component.</source>
          <target state="translated">为该组件附加一个行为。</target>
        </trans-unit>
        <trans-unit id="686998eb219b35dff2117997927b8c0c0f3a9c20" translate="yes" xml:space="preserve">
          <source>Attaches a list of behaviors to the component.</source>
          <target state="translated">为组件附加一个行为列表。</target>
        </trans-unit>
        <trans-unit id="917e4f2507c4c988afcccf72344b099990c2e001" translate="yes" xml:space="preserve">
          <source>Attaches an event handler to a class-level event.</source>
          <target state="translated">将事件处理程序附加到类级事件上。</target>
        </trans-unit>
        <trans-unit id="40eed125cc09317c19b8db77acf7a530e5a46e06" translate="yes" xml:space="preserve">
          <source>Attaches an event handler to an event.</source>
          <target state="translated">将一个事件处理程序附加到一个事件上。</target>
        </trans-unit>
        <trans-unit id="df2ad1db5725d0e2c6d2d0990faa79992afa0e22" translate="yes" xml:space="preserve">
          <source>Attaches existing file to the email message.</source>
          <target state="translated">将现有文件附加到电子邮件中。</target>
        </trans-unit>
        <trans-unit id="b24e04f19d140f9683a0723f72a92bef5dd83ab6" translate="yes" xml:space="preserve">
          <source>Attaches the behavior object to the component.</source>
          <target state="translated">将行为对象附加到组件上。</target>
        </trans-unit>
        <trans-unit id="070a3875e53d5501a800ef9c8331993b2fcd7005" translate="yes" xml:space="preserve">
          <source>Attaching Behaviors</source>
          <target state="translated">附加行为</target>
        </trans-unit>
        <trans-unit id="26f0fbe9c5ffe93e1655eb0444714819b12ef57b" translate="yes" xml:space="preserve">
          <source>Attaching Event Handlers</source>
          <target state="translated">附加事件处理程序</target>
        </trans-unit>
        <trans-unit id="3358189ca675cc317d9fc150be5d598afbb62797" translate="yes" xml:space="preserve">
          <source>Attachment CID.</source>
          <target state="translated">附文CID:</target>
        </trans-unit>
        <trans-unit id="0ea417f3d550475cb38059e8a19a39772db98496" translate="yes" xml:space="preserve">
          <source>Attachment file content.</source>
          <target state="translated">附件文件内容。</target>
        </trans-unit>
        <trans-unit id="e0462b8b192dce941d7a313abe813fadf6823011" translate="yes" xml:space="preserve">
          <source>Attention: do not confuse &lt;a href=&quot;yii-bootstrap-html&quot;&gt;yii\bootstrap\Html&lt;/a&gt; and &lt;a href=&quot;yii-helpers-html&quot;&gt;yii\helpers\Html&lt;/a&gt;, be careful in which class you are using inside your views.</source>
          <target state="translated">注意：不要混淆&lt;a href=&quot;yii-bootstrap-html&quot;&gt;yii \ bootstrap \ Html&lt;/a&gt;和&lt;a href=&quot;yii-helpers-html&quot;&gt;yii \ helpers \ Html&lt;/a&gt;，请注意在视图内部使用哪个类。</target>
        </trans-unit>
        <trans-unit id="8a140ec5fb5b95453a67e75f8c3d4ed2e3b4d560" translate="yes" xml:space="preserve">
          <source>Attribute Labels</source>
          <target state="translated">属性标签</target>
        </trans-unit>
        <trans-unit id="ff1297b52c798c4392080811b068b18a9efbf979" translate="yes" xml:space="preserve">
          <source>Attribute hints (name =&amp;gt; hint)</source>
          <target state="translated">属性提示（名称=&amp;gt;提示）</target>
        </trans-unit>
        <trans-unit id="a1fc6cb52ee546495bc6f3357ecdeea04f0222ff" translate="yes" xml:space="preserve">
          <source>Attribute hints are mainly used for display purpose. For example, given an attribute &lt;code&gt;isPublic&lt;/code&gt;, we can declare a hint &lt;code&gt;Whether the post should be visible for not logged in users&lt;/code&gt;, which provides user-friendly description of the attribute meaning and can be displayed to end users.</source>
          <target state="translated">属性提示主要用于显示目的。例如，给定一个属性 &lt;code&gt;isPublic&lt;/code&gt; ，我们可以声明一个提示： &lt;code&gt;Whether the post should be visible for not logged in users&lt;/code&gt; ，该帖子是否应该可见；该提示提供了用户友好的属性含义描述，并可以显示给最终用户。</target>
        </trans-unit>
        <trans-unit id="3090cc0f8edcfcec24b7354eb8e5990e59efa6ce" translate="yes" xml:space="preserve">
          <source>Attribute labels (name =&amp;gt; label)</source>
          <target state="translated">属性标签（名称=&amp;gt;标签）</target>
        </trans-unit>
        <trans-unit id="e75614a42973b5398f30064c09dd9c1a8e0d4deb" translate="yes" xml:space="preserve">
          <source>Attribute labels are mainly used for display purpose. For example, given an attribute &lt;code&gt;firstName&lt;/code&gt;, we can declare a label &lt;code&gt;First Name&lt;/code&gt; which is more user-friendly and can be displayed to end users.</source>
          <target state="translated">属性标签主要用于显示目的。例如，给定属性 &lt;code&gt;firstName&lt;/code&gt; ，我们可以声明一个标签 &lt;code&gt;First Name&lt;/code&gt; ，它更易于使用，并且可以显示给最终用户。</target>
        </trans-unit>
        <trans-unit id="fd11efd3b2bb215beb5fe4deac5b15c31b49871e" translate="yes" xml:space="preserve">
          <source>Attribute name</source>
          <target state="translated">属性名称</target>
        </trans-unit>
        <trans-unit id="8db7e8cffe657361faaaf56deedf7fa4f39ce959" translate="yes" xml:space="preserve">
          <source>Attribute name.</source>
          <target state="translated">属性名称:</target>
        </trans-unit>
        <trans-unit id="8ede9958403ab60d04f161223c6a855b9a36c94c" translate="yes" xml:space="preserve">
          <source>Attribute name. Use null to check all attributes.</source>
          <target state="translated">属性名。使用空来检查所有属性。</target>
        </trans-unit>
        <trans-unit id="2f13689b8a3182ca0e4f6f3cbb2cb4af248f2be9" translate="yes" xml:space="preserve">
          <source>Attribute name. Use null to remove errors for all attributes.</source>
          <target state="translated">属性名。使用null来消除所有属性的错误。</target>
        </trans-unit>
        <trans-unit id="fd84f620fb0ef3f8e8b5eee3b5a9ea2080ee38ad" translate="yes" xml:space="preserve">
          <source>Attribute name. Use null to retrieve errors for all attributes.</source>
          <target state="translated">属性名。使用空值来检索所有属性的错误。</target>
        </trans-unit>
        <trans-unit id="fe361a9ca59aba572035e2c674667c798b69c014" translate="yes" xml:space="preserve">
          <source>Attribute names.</source>
          <target state="translated">属性名称:</target>
        </trans-unit>
        <trans-unit id="5bc187c6bb23c9b6e94c2e84257f39487ee1b621" translate="yes" xml:space="preserve">
          <source>Attribute search</source>
          <target state="translated">属性搜索</target>
        </trans-unit>
        <trans-unit id="6eccf09fc6ad265b4388da07ec948a88efff0dc3" translate="yes" xml:space="preserve">
          <source>Attribute to filter</source>
          <target state="translated">要过滤的属性</target>
        </trans-unit>
        <trans-unit id="8d6ff1182bbc90bca8d3caa72103bbdb27617be1" translate="yes" xml:space="preserve">
          <source>Attribute type map.</source>
          <target state="translated">属性类型图。</target>
        </trans-unit>
        <trans-unit id="9c18077e02f919025a99caba4e3c471093e1530d" translate="yes" xml:space="preserve">
          <source>Attribute typecast map in format: attributeName =&amp;gt; type.</source>
          <target state="translated">属性类型转换映射，格式为：attributeName =&amp;gt; type。</target>
        </trans-unit>
        <trans-unit id="e332ab229cc0f7c426bdefb2c9ad9702bdd9b433" translate="yes" xml:space="preserve">
          <source>Attribute typecast map in format: attributeName =&amp;gt; type. Type can be set via PHP callable, which accept raw value as an argument and should return typecast result. For example:</source>
          <target state="translated">属性类型转换映射，格式为：attributeName =&amp;gt; type。可以通过可调用的PHP设置类型，该PHP可以接受原始值作为参数，并应返回类型转换结果。例如：</target>
        </trans-unit>
        <trans-unit id="2ec8da9af31528a5dd69e8a911d49cec2d8d539d" translate="yes" xml:space="preserve">
          <source>Attribute values (name =&amp;gt; value)</source>
          <target state="translated">属性值（名称=&amp;gt;值）</target>
        </trans-unit>
        <trans-unit id="1fabaa7bc628d734e7e73bd95c95415d2cf2b991" translate="yes" xml:space="preserve">
          <source>Attribute values (name =&amp;gt; value) to be assigned to the model.</source>
          <target state="translated">要分配给模型的属性值（名称=&amp;gt;值）。</target>
        </trans-unit>
        <trans-unit id="e3aa0e7a131bfbd77309948518307cae49c7f46d" translate="yes" xml:space="preserve">
          <source>Attribute values (name =&amp;gt; value).</source>
          <target state="translated">属性值（名称=&amp;gt;值）。</target>
        </trans-unit>
        <trans-unit id="36cab2ad702a5e63a9a824753f822c2dce191018" translate="yes" xml:space="preserve">
          <source>Attribute values (name-value pairs) to be saved for the record. Unlike &lt;a href=&quot;yii-db-activerecordinterface#update()-detail&quot;&gt;update()&lt;/a&gt; these are not going to be validated.</source>
          <target state="translated">要保存为记录的属性值（名称-值对）。与&lt;a href=&quot;yii-db-activerecordinterface#update()-detail&quot;&gt;update（）&lt;/a&gt;不同，这些不会被验证。</target>
        </trans-unit>
        <trans-unit id="d3d8bf04d7c6499b62f8cd001fb6499bc9e950b3" translate="yes" xml:space="preserve">
          <source>Attribute values (name-value pairs) to be saved into the collection</source>
          <target state="translated">要保存到集合中的属性值(名-值对)。</target>
        </trans-unit>
        <trans-unit id="97a32393a214c811d3dfcbfbb97c28332ada0726" translate="yes" xml:space="preserve">
          <source>Attribute values (name-value pairs) to be saved into the table</source>
          <target state="translated">要保存到表中的属性值(名-值对)。</target>
        </trans-unit>
        <trans-unit id="1d2d877b27fa46b13b0d96f616b5e7ea21684dd3" translate="yes" xml:space="preserve">
          <source>Attribute will be considered as valid, if it is an instance of \MongoId or a its string value.</source>
          <target state="translated">如果是MongoId的实例或其字符串值,该属性将被视为有效。</target>
        </trans-unit>
        <trans-unit id="e0a48affdfcddaef11bf192245f329c7c40dd73f" translate="yes" xml:space="preserve">
          <source>AttributeBehavior automatically assigns a specified value to one or multiple attributes of an ActiveRecord object when certain events happen.</source>
          <target state="translated">当某些事件发生时,AttributeBehavior会自动为ActiveRecord对象的一个或多个属性分配一个指定的值。</target>
        </trans-unit>
        <trans-unit id="556c9a535846d9dbff04cf42fba00907745abec0" translate="yes" xml:space="preserve">
          <source>AttributeTypecastBehavior provides an ability of automatic model attribute typecasting.</source>
          <target state="translated">AttributeTypecastBehavior提供了一种自动模型属性类型化的能力。</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="8482f83b7546f22971cd4670a57c0fe6bcf7152d" translate="yes" xml:space="preserve">
          <source>Attributes Typecasting</source>
          <target state="translated">属性类型化</target>
        </trans-unit>
        <trans-unit id="1cb6f49b272fbe3e96fbe69e0f2b7f28ac95abdf" translate="yes" xml:space="preserve">
          <source>Attributes are names of fields of the corresponding elasticsearch document. The primaryKey for elasticsearch documents is the &lt;code&gt;_id&lt;/code&gt; field by default which is not part of the attributes. You may define &lt;a href=&quot;http://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-id-field.html&quot;&gt;path mapping&lt;/a&gt; for the &lt;code&gt;_id&lt;/code&gt; field so that it is part of the &lt;code&gt;_source&lt;/code&gt; fields and thus becomes part of the attributes.</source>
          <target state="translated">属性是相应的Elasticsearch文档的字段名称。缺省情况下，elasticsearch文档的primaryKey是 &lt;code&gt;_id&lt;/code&gt; 字段，它不是属性的一部分。您可以为 &lt;code&gt;_id&lt;/code&gt; 字段定义&lt;a href=&quot;http://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-id-field.html&quot;&gt;路径映射&lt;/a&gt;，使其成为 &lt;code&gt;_source&lt;/code&gt; 字段的一部分，从而成为属性的一部分。</target>
        </trans-unit>
        <trans-unit id="8678ab4d9afb1a301024abbab79aa58e2d74ccf5" translate="yes" xml:space="preserve">
          <source>Attributes to be rendered. The attribute values will be HTML-encoded using &lt;a href=&quot;yii-helpers-basehtml#encode()-detail&quot;&gt;encode()&lt;/a&gt;.</source>
          <target state="translated">要渲染的属性。属性值将使用&lt;a href=&quot;yii-helpers-basehtml#encode()-detail&quot;&gt;encode（）&lt;/a&gt;进行HTML编码。</target>
        </trans-unit>
        <trans-unit id="533ebe182164ad7e00d611b91b202abb49c2c7c0" translate="yes" xml:space="preserve">
          <source>Attributes to be validated by this validator.</source>
          <target state="translated">该验证器要验证的属性。</target>
        </trans-unit>
        <trans-unit id="bed4d5a7ae59b186ccf81de2496f2a4dca596f59" translate="yes" xml:space="preserve">
          <source>Attributes to be validated by this validator. For multiple attributes, please specify them as an array; for single attribute, you may use either a string or an array.</source>
          <target state="translated">要被这个验证器验证的属性,对于多个属性,请指定为数组;对于单个属性,可以使用字符串或数组。对于多个属性,请将其指定为一个数组;对于单个属性,可以使用字符串或数组。</target>
        </trans-unit>
        <trans-unit id="a106210845944741729a91a4f0f533f4e6b43298" translate="yes" xml:space="preserve">
          <source>Attributes to update</source>
          <target state="translated">要更新的属性</target>
        </trans-unit>
        <trans-unit id="05c5c2a8586f3dbfbd311371b0f065758b2cd537" translate="yes" xml:space="preserve">
          <source>Attributes whose values are null will not be rendered.</source>
          <target state="translated">值为空的属性将不会被渲染。</target>
        </trans-unit>
        <trans-unit id="19f81a911352f97b48b83360e0e46a4a9ee17c15" translate="yes" xml:space="preserve">
          <source>Attributes whose values are of boolean type will be treated as &lt;a href=&quot;http://www.w3.org/TR/html5/infrastructure.html#boolean-attributes&quot;&gt;boolean attributes&lt;/a&gt;.</source>
          <target state="translated">值为布尔类型的&lt;a href=&quot;http://www.w3.org/TR/html5/infrastructure.html#boolean-attributes&quot;&gt;属性&lt;/a&gt;将被视为布尔属性。</target>
        </trans-unit>
        <trans-unit id="3d26fe4835700ee65b26c915769c15b126054bbb" translate="yes" xml:space="preserve">
          <source>Auth Clients</source>
          <target state="translated">认证客户</target>
        </trans-unit>
        <trans-unit id="c59b236beefd5d3a0db03cf0e21402310ff0310f" translate="yes" xml:space="preserve">
          <source>Auth URL.</source>
          <target state="translated">Auth URL。</target>
        </trans-unit>
        <trans-unit id="a7e8b310afdb52d7b24b6dd89907ad1ed6bb9fe7" translate="yes" xml:space="preserve">
          <source>Auth callback URL.</source>
          <target state="translated">Auth回调URL。</target>
        </trans-unit>
        <trans-unit id="953d05b758aa9042d7098ec63b11c9f504c7302d" translate="yes" xml:space="preserve">
          <source>Auth client id.</source>
          <target state="translated">Auth客户ID。</target>
        </trans-unit>
        <trans-unit id="efafc1433e384a6405ca0a10bf514d18a4c35c84" translate="yes" xml:space="preserve">
          <source>Auth client instance configuration.</source>
          <target state="translated">Auth客户端实例配置。</target>
        </trans-unit>
        <trans-unit id="5122eb4ffd5ae70ec0258b4cafed3d98213e4280" translate="yes" xml:space="preserve">
          <source>Auth client instance.</source>
          <target state="translated">Auth客户端实例。</target>
        </trans-unit>
        <trans-unit id="1365d10c829ffb42524b293c2157a6e440d7de09" translate="yes" xml:space="preserve">
          <source>Auth clients list.</source>
          <target state="translated">Auth客户名单。</target>
        </trans-unit>
        <trans-unit id="c49160e4c2bec22f044211ee892afca5031ecbef" translate="yes" xml:space="preserve">
          <source>Auth item parent-child relationships (childName =&amp;gt; list of parents)</source>
          <target state="translated">验证项目的父子关系（childName =&amp;gt;父列表）</target>
        </trans-unit>
        <trans-unit id="b47c7390a9072d404b80205a46ca0a93a275703e" translate="yes" xml:space="preserve">
          <source>Auth nonce value.</source>
          <target state="translated">Auth nonce值。</target>
        </trans-unit>
        <trans-unit id="231c15762e3e6fdcf99b45e74c1395b7f9549e74" translate="yes" xml:space="preserve">
          <source>Auth providers</source>
          <target state="translated">Auth提供者</target>
        </trans-unit>
        <trans-unit id="1046e77eb6c88123a74f1ff5c6825dfad7a82fbf" translate="yes" xml:space="preserve">
          <source>Auth request scope.</source>
          <target state="translated">认证请求范围。</target>
        </trans-unit>
        <trans-unit id="406ae04f7b503e9b41209a37600c82a62cf2ce2f" translate="yes" xml:space="preserve">
          <source>Auth state value.</source>
          <target state="translated">Auth状态值。</target>
        </trans-unit>
        <trans-unit id="f98b8f87d971db7a8c750159e3185d2751519c8c" translate="yes" xml:space="preserve">
          <source>Auth token instance.</source>
          <target state="translated">认证令牌实例。</target>
        </trans-unit>
        <trans-unit id="ce5fb4449f0226df41b3e53606890f21de2b41ae" translate="yes" xml:space="preserve">
          <source>Auth token to be saved.</source>
          <target state="translated">要保存的认证令牌。</target>
        </trans-unit>
        <trans-unit id="0e731ee342395a59b9d5b3219fcf4f8da16355c4" translate="yes" xml:space="preserve">
          <source>Auth token.</source>
          <target state="translated">认证令牌。</target>
        </trans-unit>
        <trans-unit id="66a4777cfe73992b97da10a02d2e261dd111e0a5" translate="yes" xml:space="preserve">
          <source>Auth user attributes.</source>
          <target state="translated">认证用户属性。</target>
        </trans-unit>
        <trans-unit id="d5ef90f467a4d96e12c5fe178bc54e6385fb5815" translate="yes" xml:space="preserve">
          <source>AuthInterface is the interface that should be implemented by auth method classes.</source>
          <target state="translated">AuthInterface是auth方法类应该实现的接口。</target>
        </trans-unit>
        <trans-unit id="485ef26e67288d8da89763adc66f8e840c5698e0" translate="yes" xml:space="preserve">
          <source>AuthMethod is a base class implementing the &lt;a href=&quot;yii-filters-auth-authinterface&quot;&gt;yii\filters\auth\AuthInterface&lt;/a&gt; interface.</source>
          <target state="translated">AuthMethod是实现yii &lt;a href=&quot;yii-filters-auth-authinterface&quot;&gt;\ filters \ auth \ AuthInterface&lt;/a&gt;接口的基类。</target>
        </trans-unit>
        <trans-unit id="ab86936b488c04880e5a9478a2337cccbee3719f" translate="yes" xml:space="preserve">
          <source>Authenticate OAuth client directly at the provider without third party (user) involved, using 'client_credentials' grant type.</source>
          <target state="translated">在没有第三方(用户)参与的情况下,直接在提供者处认证OAuth客户端,使用'client_credentials'授予类型。</target>
        </trans-unit>
        <trans-unit id="1657569ad67bd1619a6cd55dc4aa1aa3d016504a" translate="yes" xml:space="preserve">
          <source>Authenticates the current user.</source>
          <target state="translated">对当前用户进行认证。</target>
        </trans-unit>
        <trans-unit id="74a4b1e8ce75eb179431fc2f912e7ea098c45ab9" translate="yes" xml:space="preserve">
          <source>Authenticates user directly by 'username/password' pair, using 'password' grant type.</source>
          <target state="translated">通过 &quot;用户名/密码 &quot;配对,使用 &quot;密码 &quot;授予类型直接验证用户。</target>
        </trans-unit>
        <trans-unit id="ca33d368885f6aa32476efda0d2e515f3666443e" translate="yes" xml:space="preserve">
          <source>Authenticates user directly using JSON Web Token (JWT).</source>
          <target state="translated">直接使用JSON Web Token (JWT)认证用户。</target>
        </trans-unit>
        <trans-unit id="c74df4cd67c24e1f63bd9617843c2417b3331eba" translate="yes" xml:space="preserve">
          <source>Authenticating user (see &lt;a href=&quot;yii-filters-auth-authinterface&quot;&gt;yii\filters\auth\AuthInterface&lt;/a&gt;);</source>
          <target state="translated">验证用户（请参见&lt;a href=&quot;yii-filters-auth-authinterface&quot;&gt;yii \ filters \ auth \ AuthInterface&lt;/a&gt;）；</target>
        </trans-unit>
        <trans-unit id="ee1acfa55eb1476c86c5c4a68f256a67b25289ab" translate="yes" xml:space="preserve">
          <source>Authentication</source>
          <target state="translated">Authentication</target>
        </trans-unit>
        <trans-unit id="0d357d90fb22ff0162023a0dec13665985d921ca" translate="yes" xml:space="preserve">
          <source>Authentication Events</source>
          <target state="translated">认证事件</target>
        </trans-unit>
        <trans-unit id="f77359147493ed8911d60cab4549d20748630ab6" translate="yes" xml:space="preserve">
          <source>Authentication Method Filters</source>
          <target state="translated">认证方法过滤器</target>
        </trans-unit>
        <trans-unit id="9d5bf9c32e4fc3a3783fa3199b6da56b4d63b235" translate="yes" xml:space="preserve">
          <source>Authentication URL.</source>
          <target state="translated">认证网址。</target>
        </trans-unit>
        <trans-unit id="4b314936f04340e6178d7594bc27cb061f6e42cf" translate="yes" xml:space="preserve">
          <source>Authentication and authorization;</source>
          <target state="translated">认证和授权;</target>
        </trans-unit>
        <trans-unit id="ee7cad3c9691f82a678f5eb25c778e94e26f643c" translate="yes" xml:space="preserve">
          <source>Authentication base URL, which should be used to compose actual authentication URL by &lt;a href=&quot;yii-authclient-openid#buildAuthUrl()-detail&quot;&gt;buildAuthUrl()&lt;/a&gt; method.</source>
          <target state="translated">身份验证基本URL，应使用&lt;a href=&quot;yii-authclient-openid#buildAuthUrl()-detail&quot;&gt;buildAuthUrl（）&lt;/a&gt;方法来组成实际的身份验证URL 。</target>
        </trans-unit>
        <trans-unit id="7fecf6dddd27b80b54a4d18b1e6516b3da35684a" translate="yes" xml:space="preserve">
          <source>Authentication data used to connect to the ElasticSearch node.</source>
          <target state="translated">用于连接到ElasticSearch节点的认证数据。</target>
        </trans-unit>
        <trans-unit id="5f144bf3978cda1d9bdcc971ff9d76134d20f50d" translate="yes" xml:space="preserve">
          <source>Authentication is the process of verifying the identity of a user. It usually uses an identifier (e.g. a username or an email address) and a secret token (e.g. a password or an access token) to judge if the user is the one whom he claims as. Authentication is the basis of the login feature.</source>
          <target state="translated">认证是核实用户身份的过程。它通常使用一个标识符(如用户名或电子邮件地址)和一个秘密令牌(如密码或访问令牌)来判断用户是否是他声称的那个人。认证是登录功能的基础。</target>
        </trans-unit>
        <trans-unit id="d03a04fc073a9858caea8df05687bfb7d6158d6d" translate="yes" xml:space="preserve">
          <source>Authentication method filters are commonly used in implementing RESTful APIs. For more details, please refer to the RESTful &lt;a href=&quot;guide-rest-authentication&quot;&gt;Authentication&lt;/a&gt; section.</source>
          <target state="translated">身份验证方法筛选器通常用于实现RESTful API。有关更多详细信息，请参阅RESTful &lt;a href=&quot;guide-rest-authentication&quot;&gt;身份验证&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="d98b98143f1a8da99c9c634a1420b997ed10230b" translate="yes" xml:space="preserve">
          <source>Authentication method filters are used to authenticate a user using various methods, such as &lt;a href=&quot;http://en.wikipedia.org/wiki/Basic_access_authentication&quot;&gt;HTTP Basic Auth&lt;/a&gt;, &lt;a href=&quot;http://oauth.net/2/&quot;&gt;OAuth 2&lt;/a&gt;. These filter classes are all under the &lt;code&gt;yii\filters\auth&lt;/code&gt; namespace.</source>
          <target state="translated">身份验证方法过滤器用于使用各种方法（例如&lt;a href=&quot;http://en.wikipedia.org/wiki/Basic_access_authentication&quot;&gt;HTTP Basic Auth&lt;/a&gt;和&lt;a href=&quot;http://oauth.net/2/&quot;&gt;OAuth 2）&lt;/a&gt;对用户进行身份验证。这些过滤器类都在 &lt;code&gt;yii\filters\auth&lt;/code&gt; 命名空间下。</target>
        </trans-unit>
        <trans-unit id="a99b7372d4f473cf7ea264672eb187440680dba9" translate="yes" xml:space="preserve">
          <source>Authentication return URL.</source>
          <target state="translated">认证返回URL。</target>
        </trans-unit>
        <trans-unit id="52d2fce9c6f50872f11114102f0ab83a37fa18be" translate="yes" xml:space="preserve">
          <source>Author can create post, admin can update post and do everything author can.</source>
          <target state="translated">作者可以创建帖子,管理员可以更新帖子,做一切作者能做的事情。</target>
        </trans-unit>
        <trans-unit id="5e25ce007aa95ea2ea8b158aee9c630a32ea5616" translate="yes" xml:space="preserve">
          <source>Authorization</source>
          <target state="translated">Authorization</target>
        </trans-unit>
        <trans-unit id="3fe6d9d7a61025be60ba5bc6aa46c9404e1618fc" translate="yes" xml:space="preserve">
          <source>Authorization URL.</source>
          <target state="translated">授权网址。</target>
        </trans-unit>
        <trans-unit id="c73c31d9ef69b6ec000ce4acf4c78082084622ba" translate="yes" xml:space="preserve">
          <source>Authorization code, usually comes at $_GET['code'].</source>
          <target state="translated">授权码,通常在$_GET['code']处出现。</target>
        </trans-unit>
        <trans-unit id="353011b387322b0e64037c7f9e47efbc48348925" translate="yes" xml:space="preserve">
          <source>Authorization header in format: [name =&amp;gt; content].</source>
          <target state="translated">授权标头，格式为：[名称=&amp;gt;内容]。</target>
        </trans-unit>
        <trans-unit id="f717182a7245caba3863f5ddf872259c272cb336" translate="yes" xml:space="preserve">
          <source>Authorization is the process of verifying that a user has enough permission to do something. Yii provides two authorization methods: Access Control Filter (ACF) and Role-Based Access Control (RBAC).</source>
          <target state="translated">授权是验证一个用户是否有足够的权限去做某事的过程。Yii提供了两种授权方法,分别是访问控制过滤器(ACF)和基于角色的访问控制(RBAC)。访问控制过滤器(ACF)和基于角色的访问控制(RBAC)。</target>
        </trans-unit>
        <trans-unit id="baefea20c54f3d3ab45ecee686f05fe7a0ea5a31" translate="yes" xml:space="preserve">
          <source>Authorization realm.</source>
          <target state="translated">授权境界。</target>
        </trans-unit>
        <trans-unit id="d62c81beced099459ac93734776f6a7f79c53cd0" translate="yes" xml:space="preserve">
          <source>Authorize URL</source>
          <target state="translated">授权URL</target>
        </trans-unit>
        <trans-unit id="aab1fe13ba17b5b5c886f223a02aee3cf9b7666d" translate="yes" xml:space="preserve">
          <source>Authorize URL.</source>
          <target state="translated">授权URL。</target>
        </trans-unit>
        <trans-unit id="c2116f0671e14b9d6599649cc500b5c5d3eb5676" translate="yes" xml:space="preserve">
          <source>Auto complete data (array of callables or scalars)</source>
          <target state="translated">自动完成数据(可调用或标量数组)</target>
        </trans-unit>
        <trans-unit id="26a7d66c70fc92443eaedade1fa40d2ea702dc73" translate="yes" xml:space="preserve">
          <source>Auto-completion of command arguments is a useful thing when working with the shell. Since version 2.0.11, the &lt;code&gt;./yii&lt;/code&gt; command provides auto completion for the Bash and ZSH out of the box.</source>
          <target state="translated">使用shell时，命令参数的自动完成是很有用的。从2.0.11版本开始，。/ &lt;code&gt;./yii&lt;/code&gt; 命令提供了Bash和ZSH的自动完成功能。</target>
        </trans-unit>
        <trans-unit id="a0bfa8a8b9f6f1b70dd2a496cc0a3eaa28470167" translate="yes" xml:space="preserve">
          <source>Auto-generating fixtures</source>
          <target state="translated">自动生成装置</target>
        </trans-unit>
        <trans-unit id="24e5a4c731c39bc5e20071a6de760f4c26c932d6" translate="yes" xml:space="preserve">
          <source>Auto-generating fixtures and populating it with random data.</source>
          <target state="translated">自动生成固定装置并填充随机数据。</target>
        </trans-unit>
        <trans-unit id="3fa81ba949fafdad4688aed6d9380f82976ca9d7" translate="yes" xml:space="preserve">
          <source>Autoloading</source>
          <target state="translated">Autoloading</target>
        </trans-unit>
        <trans-unit id="77b23a7b48607c3fd602ea01a0a4c7fd636b6bb4" translate="yes" xml:space="preserve">
          <source>Autoloading Extension Classes</source>
          <target state="translated">自动加载扩展类</target>
        </trans-unit>
        <trans-unit id="dd1c710f9ff5f7d2cfd10df176a0ef1dc920f5f7" translate="yes" xml:space="preserve">
          <source>Available calendar names can be found in the &lt;a href=&quot;http://userguide.icu-project.org/datetime/calendar&quot;&gt;ICU manual&lt;/a&gt;.</source>
          <target state="translated">可在&lt;a href=&quot;http://userguide.icu-project.org/datetime/calendar&quot;&gt;ICU手册中&lt;/a&gt;找到可用的日历名称。</target>
        </trans-unit>
        <trans-unit id="776cc36af429871c62a3419a2ff6a47133902976" translate="yes" xml:space="preserve">
          <source>Available lock modes</source>
          <target state="translated">可用的锁定模式</target>
        </trans-unit>
        <trans-unit id="8f6c1bd506f2e67b4d62d326fff3b21139729716" translate="yes" xml:space="preserve">
          <source>Available properties you can configure are:</source>
          <target state="translated">你可以配置的属性有:</target>
        </trans-unit>
        <trans-unit id="6af39876529075630fb13c8ac2d873aaae0a89f9" translate="yes" xml:space="preserve">
          <source>Available since version</source>
          <target state="translated">自版本以来可用</target>
        </trans-unit>
        <trans-unit id="4b88fdf3b0ce5638c371e1039bb9e02600c4c052" translate="yes" xml:space="preserve">
          <source>Avoiding &lt;code&gt;Host&lt;/code&gt;-header attacks</source>
          <target state="translated">避免 &lt;code&gt;Host&lt;/code&gt; 攻击</target>
        </trans-unit>
        <trans-unit id="18e1df08b882b5cbb4719739c3146f9e8d9b4788" translate="yes" xml:space="preserve">
          <source>Avoiding CSRF</source>
          <target state="translated">避免CSRF</target>
        </trans-unit>
        <trans-unit id="dd931c8c9b64f8bebdd76f65d2ca68a8e1cc44dc" translate="yes" xml:space="preserve">
          <source>Avoiding SQL injections</source>
          <target state="translated">避免SQL注入</target>
        </trans-unit>
        <trans-unit id="67f4a5d4a0a8ea88345fb91e915b67e184547fe7" translate="yes" xml:space="preserve">
          <source>Avoiding XSS</source>
          <target state="translated">避免XSS</target>
        </trans-unit>
        <trans-unit id="d17ab5745972bdec6596582bb458bb8f8e4fa710" translate="yes" xml:space="preserve">
          <source>Avoiding XSS is quite easy in Yii. There are generally two cases:</source>
          <target state="translated">在Yii中避免XSS是相当容易的。一般有两种情况。</target>
        </trans-unit>
        <trans-unit id="2ac3473adf52e6488f92a8c8409d45c6c3bb324c" translate="yes" xml:space="preserve">
          <source>Avoiding debug info and tools in production</source>
          <target state="translated">避免在生产中使用调试信息和工具</target>
        </trans-unit>
        <trans-unit id="3d8c52952e9f09e3f175828142f1bfe6308d07ff" translate="yes" xml:space="preserve">
          <source>Avoiding file exposure</source>
          <target state="translated">避免文件曝光</target>
        </trans-unit>
        <trans-unit id="0b0153beb9d5b6645438683eb23924f810fb5d1e" translate="yes" xml:space="preserve">
          <source>BASE_MIGRATION</source>
          <target state="translated">BASE_MIGRATION</target>
        </trans-unit>
        <trans-unit id="3c4f9f9f26058e514f17130b3c7ee244ff8fdd0f" translate="yes" xml:space="preserve">
          <source>BG_BLACK</source>
          <target state="translated">BG_BLACK</target>
        </trans-unit>
        <trans-unit id="0d35002bb8fd625e8bb94fdec84d71c1eecc81c0" translate="yes" xml:space="preserve">
          <source>BG_BLUE</source>
          <target state="translated">BG_BLUE</target>
        </trans-unit>
        <trans-unit id="c4c6dac991b9e42e45794793d33415b85f06b3e7" translate="yes" xml:space="preserve">
          <source>BG_CYAN</source>
          <target state="translated">BG_CYAN</target>
        </trans-unit>
        <trans-unit id="5d508f46beabd6119420efd5b48faf15f52799ca" translate="yes" xml:space="preserve">
          <source>BG_GREEN</source>
          <target state="translated">BG_GREEN</target>
        </trans-unit>
        <trans-unit id="5443c4a5e5a551a13a5b98fe2f55aa8008f23aed" translate="yes" xml:space="preserve">
          <source>BG_GREY</source>
          <target state="translated">BG_GREY</target>
        </trans-unit>
        <trans-unit id="92577b4f906466a032ca4697f736cddc5a4b56a0" translate="yes" xml:space="preserve">
          <source>BG_PURPLE</source>
          <target state="translated">BG_PURPLE</target>
        </trans-unit>
        <trans-unit id="0ce85a6fed63049f245d64acde30cf2ec1b65ea1" translate="yes" xml:space="preserve">
          <source>BG_RED</source>
          <target state="translated">BG_RED</target>
        </trans-unit>
        <trans-unit id="a900edc9af729f9053377b75ec6510110d835858" translate="yes" xml:space="preserve">
          <source>BG_YELLOW</source>
          <target state="translated">BG_YELLOW</target>
        </trans-unit>
        <trans-unit id="23adb632666e647dfff3c24f09614be906d7af7a" translate="yes" xml:space="preserve">
          <source>BLINK</source>
          <target state="translated">BLINK</target>
        </trans-unit>
        <trans-unit id="7f5468283ffb5e8bbed87d8fba2648d355d1d029" translate="yes" xml:space="preserve">
          <source>BOLD</source>
          <target state="translated">BOLD</target>
        </trans-unit>
        <trans-unit id="e93a82aabe0fa8b97d0c801d88a5ed7f0a40dd6e" translate="yes" xml:space="preserve">
          <source>BadMethodCallException</source>
          <target state="translated">BadMethodCallException</target>
        </trans-unit>
        <trans-unit id="e8cc1be5e4fade274c620069fd4b4cc7f58bad6c" translate="yes" xml:space="preserve">
          <source>BadRequestHttpException represents a &quot;Bad Request&quot; HTTP exception with status code 400.</source>
          <target state="translated">BadRequestHttpException表示一个状态码为400的 &quot;坏请求 &quot;HTTP异常。</target>
        </trans-unit>
        <trans-unit id="67816a95b7fd479f292b6c5df322708027f68a32" translate="yes" xml:space="preserve">
          <source>Base URL.</source>
          <target state="translated">基本网址:</target>
        </trans-unit>
        <trans-unit id="3c7cc3e1ca6cb8f481be05d588470400c7101844" translate="yes" xml:space="preserve">
          <source>Base auth URL configuration.</source>
          <target state="translated">基础认证URL配置。</target>
        </trans-unit>
        <trans-unit id="5fd9adda35ec3d4a2bedfd92745dad1e4ba75cea" translate="yes" xml:space="preserve">
          <source>Base request URL.</source>
          <target state="translated">基本请求URL。</target>
        </trans-unit>
        <trans-unit id="f6e65642853508e9fc334a079cc049567bbbdc4b" translate="yes" xml:space="preserve">
          <source>Base signature string.</source>
          <target state="translated">基本签名字符串。</target>
        </trans-unit>
        <trans-unit id="4464801a9a9a338b85d2a72bf6e1a60dccd26173" translate="yes" xml:space="preserve">
          <source>Base slug value</source>
          <target state="translated">基础弹头值</target>
        </trans-unit>
        <trans-unit id="2a251ed2d45373b18f154e7f85729dc799989030" translate="yes" xml:space="preserve">
          <source>Base value to check</source>
          <target state="translated">要检查的基值</target>
        </trans-unit>
        <trans-unit id="e489e0158a972e540c37daaecdd811253c218fb7" translate="yes" xml:space="preserve">
          <source>BaseActiveFixture is the base class for fixture classes that support accessing fixture data as ActiveRecord objects.</source>
          <target state="translated">BaseActiveFixture是夹具类的基类,它支持以ActiveRecord对象的形式访问夹具数据。</target>
        </trans-unit>
        <trans-unit id="0b44a159f663f0da6e6ab5b5ed7bec8b86dd5879" translate="yes" xml:space="preserve">
          <source>BaseArrayHelper provides concrete implementation for &lt;a href=&quot;yii-helpers-arrayhelper&quot;&gt;yii\helpers\ArrayHelper&lt;/a&gt;.</source>
          <target state="translated">BaseArrayHelper为yii &lt;a href=&quot;yii-helpers-arrayhelper&quot;&gt;\ helpers \ ArrayHelper&lt;/a&gt;提供了具体的实现。</target>
        </trans-unit>
        <trans-unit id="d02b24076f41c9121de33e88c452cf35a8c140a6" translate="yes" xml:space="preserve">
          <source>BaseConsole provides concrete implementation for &lt;a href=&quot;yii-helpers-console&quot;&gt;yii\helpers\Console&lt;/a&gt;.</source>
          <target state="translated">BaseConsole为yii &lt;a href=&quot;yii-helpers-console&quot;&gt;\ helpers \ Console&lt;/a&gt;提供了具体的实现。</target>
        </trans-unit>
        <trans-unit id="4fc14fdcce9c48e3c056fbcf442d5686f01959ec" translate="yes" xml:space="preserve">
          <source>BaseDataProvider provides a base class that implements the &lt;a href=&quot;yii-data-dataproviderinterface&quot;&gt;yii\data\DataProviderInterface&lt;/a&gt;.</source>
          <target state="translated">BaseDataProvider提供一个实现&lt;a href=&quot;yii-data-dataproviderinterface&quot;&gt;yii \ data \ DataProviderInterface&lt;/a&gt;的基类。</target>
        </trans-unit>
        <trans-unit id="f7449ee9c677e1b1550c1e20748adc164b1a919f" translate="yes" xml:space="preserve">
          <source>BaseFileHelper provides concrete implementation for &lt;a href=&quot;yii-helpers-filehelper&quot;&gt;yii\helpers\FileHelper&lt;/a&gt;.</source>
          <target state="translated">BaseFileHelper为&lt;a href=&quot;yii-helpers-filehelper&quot;&gt;yii \ helpers \ FileHelper&lt;/a&gt;提供了具体的实现。</target>
        </trans-unit>
        <trans-unit id="968b5ea443459de1b47df3c012a478091bbb609f" translate="yes" xml:space="preserve">
          <source>BaseFormatConverter provides concrete implementation for &lt;a href=&quot;yii-helpers-formatconverter&quot;&gt;yii\helpers\FormatConverter&lt;/a&gt;.</source>
          <target state="translated">BaseFormatConverter为yii &lt;a href=&quot;yii-helpers-formatconverter&quot;&gt;\ helpers \ FormatConverter&lt;/a&gt;提供了具体的实现。</target>
        </trans-unit>
        <trans-unit id="86c137e871336a4b9a11a248b9940fcd3d4e472f" translate="yes" xml:space="preserve">
          <source>BaseHtml provides concrete implementation for &lt;a href=&quot;yii-helpers-html&quot;&gt;yii\helpers\Html&lt;/a&gt;.</source>
          <target state="translated">BaseHtml为yii &lt;a href=&quot;yii-helpers-html&quot;&gt;\ helpers \ Html&lt;/a&gt;提供了具体的实现。</target>
        </trans-unit>
        <trans-unit id="ead872170d66606ef27c6a92b1c4591e8b44ee0e" translate="yes" xml:space="preserve">
          <source>BaseHtmlPurifier provides concrete implementation for &lt;a href=&quot;yii-helpers-htmlpurifier&quot;&gt;yii\helpers\HtmlPurifier&lt;/a&gt;.</source>
          <target state="translated">BaseHtmlPurifier为yii &lt;a href=&quot;yii-helpers-htmlpurifier&quot;&gt;\ helpers \ HtmlPurifier&lt;/a&gt;提供了具体的实现。</target>
        </trans-unit>
        <trans-unit id="fb3a65c3b01e0a0c84c9697ff0aa34a13c563b1c" translate="yes" xml:space="preserve">
          <source>BaseInflector provides concrete implementation for &lt;a href=&quot;yii-helpers-inflector&quot;&gt;yii\helpers\Inflector&lt;/a&gt;.</source>
          <target state="translated">BaseInflector为yii &lt;a href=&quot;yii-helpers-inflector&quot;&gt;\ helpers \ Inflector&lt;/a&gt;提供了具体的实现。</target>
        </trans-unit>
        <trans-unit id="7f14f8d80276e0099da49cad54e7f341373bd2c7" translate="yes" xml:space="preserve">
          <source>BaseJson provides concrete implementation for &lt;a href=&quot;yii-helpers-json&quot;&gt;yii\helpers\Json&lt;/a&gt;.</source>
          <target state="translated">BaseJson为yii &lt;a href=&quot;yii-helpers-json&quot;&gt;\ helpers \ Json&lt;/a&gt;提供了具体的实现。</target>
        </trans-unit>
        <trans-unit id="9570a4c72df91ff567a63ea04ae8b71119e3c3a4" translate="yes" xml:space="preserve">
          <source>BaseListView is a base class for widgets displaying data from data provider such as ListView and GridView.</source>
          <target state="translated">BaseListView是一个基础类,用于显示来自数据提供者(如ListView和GridView)的数据的部件。</target>
        </trans-unit>
        <trans-unit id="b2017d39f924365b23430a2656ceef0a84e4a306" translate="yes" xml:space="preserve">
          <source>BaseMailer serves as a base class that implements the basic functions required by &lt;a href=&quot;yii-mail-mailerinterface&quot;&gt;yii\mail\MailerInterface&lt;/a&gt;.</source>
          <target state="translated">BaseMailer用作实现&lt;a href=&quot;yii-mail-mailerinterface&quot;&gt;yii \ mail \ MailerInterface&lt;/a&gt;所需的基本功能的基类。</target>
        </trans-unit>
        <trans-unit id="f5a7a93ded2874f9a51f093b603e60d794506988" translate="yes" xml:space="preserve">
          <source>BaseManager is a base class implementing &lt;a href=&quot;yii-rbac-managerinterface&quot;&gt;yii\rbac\ManagerInterface&lt;/a&gt; for RBAC management.</source>
          <target state="translated">BaseManager是实现RBAC管理的yii &lt;a href=&quot;yii-rbac-managerinterface&quot;&gt;\ rbac \&lt;/a&gt; ManagerInterface的基类。</target>
        </trans-unit>
        <trans-unit id="3e66b6d8386848dd184b5f9a81e7deef27812489" translate="yes" xml:space="preserve">
          <source>BaseMarkdown provides concrete implementation for &lt;a href=&quot;yii-helpers-markdown&quot;&gt;yii\helpers\Markdown&lt;/a&gt;.</source>
          <target state="translated">BaseMarkdown为yii &lt;a href=&quot;yii-helpers-markdown&quot;&gt;\ helpers \ Markdown&lt;/a&gt;提供了具体的实现。</target>
        </trans-unit>
        <trans-unit id="5a9916e2b02b50baa147e0596e72a65b5bd61b6b" translate="yes" xml:space="preserve">
          <source>BaseMessage serves as a base class that implements the &lt;a href=&quot;yii-mail-basemessage#send()-detail&quot;&gt;send()&lt;/a&gt; method required by &lt;a href=&quot;yii-mail-messageinterface&quot;&gt;yii\mail\MessageInterface&lt;/a&gt;.</source>
          <target state="translated">BaseMessage用作实现yii &lt;a href=&quot;yii-mail-messageinterface&quot;&gt;\ mail \ MessageInterface&lt;/a&gt;所需的&lt;a href=&quot;yii-mail-basemessage#send()-detail&quot;&gt;send（）&lt;/a&gt;方法的基类。</target>
        </trans-unit>
        <trans-unit id="9f7cf8d9fadc25b3d9468ad9ebdb42f4ca77f55e" translate="yes" xml:space="preserve">
          <source>BaseMigrateController is the base class for migrate controllers.</source>
          <target state="translated">BaseMigrateController是迁移控制器的基础类。</target>
        </trans-unit>
        <trans-unit id="ced57bb5bc7efc34184ac0f9215167cd67828a97" translate="yes" xml:space="preserve">
          <source>BaseStringHelper provides concrete implementation for &lt;a href=&quot;yii-helpers-stringhelper&quot;&gt;yii\helpers\StringHelper&lt;/a&gt;.</source>
          <target state="translated">BaseStringHelper为yii &lt;a href=&quot;yii-helpers-stringhelper&quot;&gt;\ helpers \ StringHelper&lt;/a&gt;提供了具体的实现。</target>
        </trans-unit>
        <trans-unit id="75ed4b0ced00aaf9ec55b7d67d9fcc2a9c901437" translate="yes" xml:space="preserve">
          <source>BaseUrl provides concrete implementation for &lt;a href=&quot;yii-helpers-url&quot;&gt;yii\helpers\Url&lt;/a&gt;.</source>
          <target state="translated">BaseUrl为yii &lt;a href=&quot;yii-helpers-url&quot;&gt;\ helpers \ Url&lt;/a&gt;提供了具体的实现。</target>
        </trans-unit>
        <trans-unit id="46a12e49b3ee24c45f5fa77b088833833d9fe280" translate="yes" xml:space="preserve">
          <source>BaseVarDumper provides concrete implementation for &lt;a href=&quot;yii-helpers-vardumper&quot;&gt;yii\helpers\VarDumper&lt;/a&gt;.</source>
          <target state="translated">BaseVarDumper为yii &lt;a href=&quot;yii-helpers-vardumper&quot;&gt;\ helpers \ VarDumper&lt;/a&gt;提供了具体的实现。</target>
        </trans-unit>
        <trans-unit id="d53852b7efea4da6257eb80ec9e9a6f0424d3b55" translate="yes" xml:space="preserve">
          <source>BaseYii</source>
          <target state="translated">BaseYii</target>
        </trans-unit>
        <trans-unit id="74bb711129e6fc121f995d45dd319dd953902415" translate="yes" xml:space="preserve">
          <source>BaseYii $aliases</source>
          <target state="translated">BaseYii $aliases</target>
        </trans-unit>
        <trans-unit id="207bce5e5111d2b287bd1d827600c16e16e61b2a" translate="yes" xml:space="preserve">
          <source>BaseYii $app</source>
          <target state="translated">BaseYii $app</target>
        </trans-unit>
        <trans-unit id="aaa2a86d10bfde5f6daedd4bee370ca8e13c5951" translate="yes" xml:space="preserve">
          <source>BaseYii $classMap</source>
          <target state="translated">BaseYii $classMap</target>
        </trans-unit>
        <trans-unit id="9b561e909791736deda6480ea07325bff99f4893" translate="yes" xml:space="preserve">
          <source>BaseYii $container</source>
          <target state="translated">BaseYii $container</target>
        </trans-unit>
        <trans-unit id="00d7d908ca55ba30242bcde02d7e5a03b02df9e9" translate="yes" xml:space="preserve">
          <source>BaseYii autoload()</source>
          <target state="translated">BaseYii autoload()</target>
        </trans-unit>
        <trans-unit id="9d2c09d267096def3d264a728faf8bf8702fcbf1" translate="yes" xml:space="preserve">
          <source>BaseYii beginProfile()</source>
          <target state="translated">BaseYii beginProfile()</target>
        </trans-unit>
        <trans-unit id="14d694dc54eb6cc715c143cb603c8a27a64dd889" translate="yes" xml:space="preserve">
          <source>BaseYii configure()</source>
          <target state="translated">BaseYii configure()</target>
        </trans-unit>
        <trans-unit id="d826cd8a120d3bfa8738ec01b9e308bbf413d3a5" translate="yes" xml:space="preserve">
          <source>BaseYii createObject()</source>
          <target state="translated">BaseYii createObject()</target>
        </trans-unit>
        <trans-unit id="eaaaf05c6853d673e42e725f5ef1a7b120ee516d" translate="yes" xml:space="preserve">
          <source>BaseYii endProfile()</source>
          <target state="translated">BaseYii endProfile()</target>
        </trans-unit>
        <trans-unit id="1486bdc7a5bc8d4bd928924f8c4614d3310db17c" translate="yes" xml:space="preserve">
          <source>BaseYii error()</source>
          <target state="translated">BaseYii error()</target>
        </trans-unit>
        <trans-unit id="c7565c305343176bdf5ae955a97a0caa2db5ff97" translate="yes" xml:space="preserve">
          <source>BaseYii getAlias()</source>
          <target state="translated">BaseYii getAlias()</target>
        </trans-unit>
        <trans-unit id="05a2933233d2c94be3b8283d60bea2b169733956" translate="yes" xml:space="preserve">
          <source>BaseYii getLogger()</source>
          <target state="translated">BaseYii getLogger()</target>
        </trans-unit>
        <trans-unit id="cdfb70a6aba34d45329a25e94883da938da4c6e6" translate="yes" xml:space="preserve">
          <source>BaseYii getObjectVars()</source>
          <target state="translated">BaseYii getObjectVars()</target>
        </trans-unit>
        <trans-unit id="e2fe913136db9fc8fdc4aa45474eac5ebff3b87e" translate="yes" xml:space="preserve">
          <source>BaseYii getRootAlias()</source>
          <target state="translated">BaseYii getRootAlias()</target>
        </trans-unit>
        <trans-unit id="fea43e7f063bc56a5d01bd2552c4ed58f6ad4a01" translate="yes" xml:space="preserve">
          <source>BaseYii getVersion()</source>
          <target state="translated">BaseYii getVersion()</target>
        </trans-unit>
        <trans-unit id="337c67c9e7de8262868db82cac710618a34d08f8" translate="yes" xml:space="preserve">
          <source>BaseYii info()</source>
          <target state="translated">BaseYii info()</target>
        </trans-unit>
        <trans-unit id="a86868f982e69d18bb53f60530456535a7f4018a" translate="yes" xml:space="preserve">
          <source>BaseYii is the core helper class for the Yii framework.</source>
          <target state="translated">BaseYii是Yii框架的核心帮助类。</target>
        </trans-unit>
        <trans-unit id="80f70e17869621b898ce0ce8e49c3ff143dc03e7" translate="yes" xml:space="preserve">
          <source>BaseYii powered()</source>
          <target state="translated">BaseYii powered()</target>
        </trans-unit>
        <trans-unit id="a68516c3eea0542e26e5d17eaa0f4cbbedbb2327" translate="yes" xml:space="preserve">
          <source>BaseYii setAlias()</source>
          <target state="translated">BaseYii setAlias()</target>
        </trans-unit>
        <trans-unit id="fd7ddcb119e1ab1ef7b80c087fedd18cd3ae62d1" translate="yes" xml:space="preserve">
          <source>BaseYii setLogger()</source>
          <target state="translated">BaseYii setLogger()</target>
        </trans-unit>
        <trans-unit id="c3b6eeebb2f1644de9e4b4daffab553c3484958f" translate="yes" xml:space="preserve">
          <source>BaseYii t()</source>
          <target state="translated">BaseYii t()</target>
        </trans-unit>
        <trans-unit id="5fc8020ffbc8f7108af8f1296f2693baa3cf698c" translate="yes" xml:space="preserve">
          <source>BaseYii trace()</source>
          <target state="translated">BaseYii trace()</target>
        </trans-unit>
        <trans-unit id="22e0e753cf16e910c41420c0efd917420df1713f" translate="yes" xml:space="preserve">
          <source>BaseYii warning()</source>
          <target state="translated">BaseYii warning()</target>
        </trans-unit>
        <trans-unit id="cfae77f67bac8e0d97669657a7770fd72bec3e4e" translate="yes" xml:space="preserve">
          <source>Based on &lt;a href=&quot;https://github.com/cebe/markdown&quot;&gt;cebe/markdown&lt;/a&gt;.</source>
          <target state="translated">基于&lt;a href=&quot;https://github.com/cebe/markdown&quot;&gt;cebe / markdown&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6414ebe1bb4ace2f0ab1574d69f489ffcfaa5351" translate="yes" xml:space="preserve">
          <source>Based on the sort direction, the CSS class of the generated hyperlink will be appended with &quot;asc&quot; or &quot;desc&quot;.</source>
          <target state="translated">根据排序方向,生成的超链接的CSS类将附加 &quot;asc &quot;或 &quot;desc&quot;。</target>
        </trans-unit>
        <trans-unit id="e63f51f7e5afad0c831b1acc1916d16e437f5b4a" translate="yes" xml:space="preserve">
          <source>Bash completion</source>
          <target state="translated">Bash完成</target>
        </trans-unit>
        <trans-unit id="5eab8fc3ffa32aa796174a77104a420884806a36" translate="yes" xml:space="preserve">
          <source>Basic Concepts</source>
          <target state="translated">基本概念</target>
        </trans-unit>
        <trans-unit id="49d7bd87df3d5071be5328113fddee7069deefee" translate="yes" xml:space="preserve">
          <source>Basic headers handled for the CORS requests.</source>
          <target state="translated">处理CORS请求的基本头文件。</target>
        </trans-unit>
        <trans-unit id="c59bab2761efa2dc78ea4cbc3be5405c02bb44ec" translate="yes" xml:space="preserve">
          <source>Basic principles</source>
          <target state="translated">基本原则</target>
        </trans-unit>
        <trans-unit id="cbd09c3ec35517548a74e9155de3de4190f95554" translate="yes" xml:space="preserve">
          <source>Basic slug value</source>
          <target state="translated">基本弹头值</target>
        </trans-unit>
        <trans-unit id="cb3a8802da5b3164771a468d78ff7995a249f08a" translate="yes" xml:space="preserve">
          <source>Basic usage</source>
          <target state="translated">基本用途</target>
        </trans-unit>
        <trans-unit id="72539f0f51a3099df9234f65310a0fd23c204da3" translate="yes" xml:space="preserve">
          <source>Basic usage is the following:</source>
          <target state="translated">基本用法如下:</target>
        </trans-unit>
        <trans-unit id="5fcebeefad3cdbbf8733aa928160dec7dc90c1a1" translate="yes" xml:space="preserve">
          <source>Basics</source>
          <target state="translated">Basics</target>
        </trans-unit>
        <trans-unit id="dda8947615266767ff87d8f18b927639a69c4bb3" translate="yes" xml:space="preserve">
          <source>Batch Query</source>
          <target state="translated">批量查询</target>
        </trans-unit>
        <trans-unit id="bb1b5e8a6c9f44d479cfbd84336aa07dfb98bd17" translate="yes" xml:space="preserve">
          <source>Batch options.</source>
          <target state="translated">批量选择。</target>
        </trans-unit>
        <trans-unit id="73bc6ce52f957f97e5a856207b74f34f89ea0729" translate="yes" xml:space="preserve">
          <source>Batch query can be used like the following:</source>
          <target state="translated">批量查询可以使用如下方式。</target>
        </trans-unit>
        <trans-unit id="e4d105c518f4942d711a8bc5983c31743f590a02" translate="yes" xml:space="preserve">
          <source>Batch size is determined by the &lt;a href=&quot;yii-db-querytrait#%24limit-detail&quot;&gt;yii\elasticsearch\Query::$limit&lt;/a&gt; setting. &lt;a href=&quot;yii-db-querytrait#%24offset-detail&quot;&gt;yii\elasticsearch\Query::$offset&lt;/a&gt; setting is ignored. New batches will be obtained until the server runs out of results.</source>
          <target state="translated">批次大小由&lt;a href=&quot;yii-db-querytrait#%24limit-detail&quot;&gt;yii \ elasticsearch \ Query :: $ limit&lt;/a&gt;设置确定。&lt;a href=&quot;yii-db-querytrait#%24offset-detail&quot;&gt;yii \ elasticsearch \ Query :: $ offset&lt;/a&gt;设置将被忽略。将获得新批次，直到服务器用完结果为止。</target>
        </trans-unit>
        <trans-unit id="44c8c77a96ae4e610b04659073f1cf4936126b24" translate="yes" xml:space="preserve">
          <source>Batch size is determined by the &lt;code&gt;limit&lt;/code&gt; setting (note that in scan mode batch limit is per shard).</source>
          <target state="translated">批次大小由 &lt;code&gt;limit&lt;/code&gt; 设置确定（请注意，在扫描模式下，批次限制是每个分片）。</target>
        </trans-unit>
        <trans-unit id="4be246d85e35ff9c8228c9cdc1f8ac352967895d" translate="yes" xml:space="preserve">
          <source>BatchQueryResult represents a batch query from which you can retrieve data in batches.</source>
          <target state="translated">BatchQueryResult表示一个批量查询,你可以从这个查询中分批检索数据。</target>
        </trans-unit>
        <trans-unit id="4f49b6c4b389fdd50e921cd5401b3c220b4e6414" translate="yes" xml:space="preserve">
          <source>Bcc attribute input search value</source>
          <target state="translated">Bcc属性输入搜索值</target>
        </trans-unit>
        <trans-unit id="6ad3337a3f1f1b9bcef749cb395d745cbfdc40e6" translate="yes" xml:space="preserve">
          <source>Be careful of performing this operation if the cache is shared among multiple applications.</source>
          <target state="translated">如果多个应用程序共享缓存,请小心执行此操作。</target>
        </trans-unit>
        <trans-unit id="a5bac5d9fdee10b215823af0cb372254c962c827" translate="yes" xml:space="preserve">
          <source>Be careful when naming form elements such as submit buttons. According to the &lt;a href=&quot;https://api.jquery.com/submit/&quot;&gt;jQuery documentation&lt;/a&gt; there are some reserved names that can cause conflicts, e.g. &lt;code&gt;submit&lt;/code&gt;, &lt;code&gt;length&lt;/code&gt;, or &lt;code&gt;method&lt;/code&gt;.</source>
          <target state="translated">在命名表单元素（例如，提交按钮）时要小心。根据&lt;a href=&quot;https://api.jquery.com/submit/&quot;&gt;jQuery文档，&lt;/a&gt;存在一些可能引起冲突的保留名称，例如 &lt;code&gt;submit&lt;/code&gt; ， &lt;code&gt;length&lt;/code&gt; 或 &lt;code&gt;method&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="343e8a4650e718d9ae9776d5a2a9b4a7e8b95a29" translate="yes" xml:space="preserve">
          <source>Be careful when naming form elements such as submit buttons. According to the &lt;a href=&quot;https://api.jquery.com/submit/&quot;&gt;jQuery documentation&lt;/a&gt; there are some reserved names that can cause conflicts:</source>
          <target state="translated">在命名表单元素（例如，提交按钮）时要小心。根据&lt;a href=&quot;https://api.jquery.com/submit/&quot;&gt;jQuery文档，&lt;/a&gt;存在一些可能导致冲突的保留名称：</target>
        </trans-unit>
        <trans-unit id="0f8859b4f0ec2a660e7af3f087092a06dd4cf2a0" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;yii-base-module&quot;&gt;yii\base\Module&lt;/a&gt; extends from ServiceLocator, modules and the application are all service locators.</source>
          <target state="translated">因为&lt;a href=&quot;yii-base-module&quot;&gt;yii \ base \ Module&lt;/a&gt;从ServiceLocator扩展，所以模块和应用程序都是服务定位器。</target>
        </trans-unit>
        <trans-unit id="d9a43d61ec67d4a93b4e2cf4541812ca34f7a9f8" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;yii-caching-cache&quot;&gt;yii\caching\Cache&lt;/a&gt; implements &lt;code&gt;ArrayAccess&lt;/code&gt;, a cache component can be used like an array. The following are some examples:</source>
          <target state="translated">因为&lt;a href=&quot;yii-caching-cache&quot;&gt;yii \ caching \ Cache&lt;/a&gt;实现 &lt;code&gt;ArrayAccess&lt;/code&gt; ，所以可以像数组一样使用缓存组件。以下是一些示例：</target>
        </trans-unit>
        <trans-unit id="296371f589d001ae05e8975d96532652b64f3cc0" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt; extends from &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt;, it inherits &lt;em&gt;all&lt;/em&gt;&lt;a href=&quot;guide-structure-models&quot;&gt;model&lt;/a&gt; features, such as attributes, validation rules, data serialization, etc.</source>
          <target state="translated">由于&lt;a href=&quot;yii-db-activerecord&quot;&gt;yii \ db \ ActiveRecord&lt;/a&gt;从&lt;a href=&quot;yii-base-model&quot;&gt;yii \ base \ Model&lt;/a&gt;扩展而来，因此它继承了&lt;em&gt;所有&lt;/em&gt;&lt;a href=&quot;guide-structure-models&quot;&gt;模型&lt;/a&gt;功能，例如属性，验证规则，数据序列化等。</target>
        </trans-unit>
        <trans-unit id="c20709b15190252e6c2a041197eb0da3d6b619a2" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt; extends from &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt;, it shares the same &lt;a href=&quot;guide-input-validation&quot;&gt;data validation&lt;/a&gt; feature. You can declare validation rules by overriding the &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules()&lt;/a&gt; method and perform data validation by calling the &lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;validate()&lt;/a&gt; method.</source>
          <target state="translated">因为&lt;a href=&quot;yii-db-activerecord&quot;&gt;yii \ db \ ActiveRecord&lt;/a&gt;从&lt;a href=&quot;yii-base-model&quot;&gt;yii \ base \ Model&lt;/a&gt;扩展，所以它共享相同的&lt;a href=&quot;guide-input-validation&quot;&gt;数据验证&lt;/a&gt;功能。您可以通过覆盖&lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules（）&lt;/a&gt;方法来声明验证规则，并可以通过调用&lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;validate（）&lt;/a&gt;方法来执行数据验证。</target>
        </trans-unit>
        <trans-unit id="187242f2dbfcfd6fa70b117f73a19c5dbbbeadbf" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;yii-db-command#bindParam()-detail&quot;&gt;bindParam()&lt;/a&gt; supports binding parameters by references, the above code can also be written like the following:</source>
          <target state="translated">因为&lt;a href=&quot;yii-db-command#bindParam()-detail&quot;&gt;bindParam（）&lt;/a&gt;通过引用支持绑定参数，所以上面的代码也可以如下编写：</target>
        </trans-unit>
        <trans-unit id="3fcd2020a4c2afcc93489f07488e5b9da87e768e" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;UserProfileFixture&lt;/code&gt; extends from &lt;code&gt;ActiveFixture&lt;/code&gt;, you may further use the following syntax to access the data provided by the fixture:</source>
          <target state="translated">由于 &lt;code&gt;UserProfileFixture&lt;/code&gt; 从 &lt;code&gt;ActiveFixture&lt;/code&gt; 扩展而来，因此您可以进一步使用以下语法来访问Fixture提供的数据：</target>
        </trans-unit>
        <trans-unit id="a10e0ffcab85a75c37e7a5d5302e7081e3bbb17a" translate="yes" xml:space="preserve">
          <source>Because Active Record attributes are named after table columns, you may find you are writing PHP code like &lt;code&gt;$customer-&amp;gt;first_name&lt;/code&gt;, which uses underscores to separate words in attribute names if your table columns are named in this way. If you are concerned about code style consistency, you should rename your table columns accordingly (to use camelCase, for example).</source>
          <target state="translated">因为Active Record属性是以表列命名的，所以您可能会发现您正在编写 &lt;code&gt;$customer-&amp;gt;first_name&lt;/code&gt; 类的PHP代码，如果以这种方式命名表列，则使用下划线将属性名称中的单词分开。如果您担心代码样式的一致性，则应相应地重命名表列（例如，使用camelCase）。</target>
        </trans-unit>
        <trans-unit id="3fb4016ec98e1dc1ddfb6ff6a48cda045f74ff6f" translate="yes" xml:space="preserve">
          <source>Because ActiveQuery extends from &lt;a href=&quot;yii-db-query&quot;&gt;yii\db\Query&lt;/a&gt;, one can use query methods, such as &lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where()&lt;/a&gt;, &lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy()&lt;/a&gt; to customize the query options.</source>
          <target state="translated">由于ActiveQuery从&lt;a href=&quot;yii-db-query&quot;&gt;yii \ db \ Query&lt;/a&gt;扩展而来，因此可以使用查询方法，例如&lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where（）&lt;/a&gt;，&lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy（）&lt;/a&gt;来定制查询选项。</target>
        </trans-unit>
        <trans-unit id="85da14873ea82a9923e87d66ad94b1122dc5d455" translate="yes" xml:space="preserve">
          <source>Because ActiveQuery extends from &lt;a href=&quot;yii-elasticsearch-query&quot;&gt;yii\elasticsearch\Query&lt;/a&gt;, one can use query methods, such as &lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where()&lt;/a&gt;, &lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy()&lt;/a&gt; to customize the query options.</source>
          <target state="translated">由于ActiveQuery从&lt;a href=&quot;yii-elasticsearch-query&quot;&gt;yii \ elasticsearch \ Query&lt;/a&gt;扩展而来，因此可以使用查询方法，例如&lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where（）&lt;/a&gt;，&lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy（）&lt;/a&gt;来定制查询选项。</target>
        </trans-unit>
        <trans-unit id="3a70917033619bceca3d511b58c383c9f6a6bc1a" translate="yes" xml:space="preserve">
          <source>Because ActiveQuery extends from &lt;a href=&quot;yii-mongodb-file-query&quot;&gt;yii\mongodb\file\Query&lt;/a&gt;, one can use query methods, such as &lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where()&lt;/a&gt;, &lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy()&lt;/a&gt; to customize the query options.</source>
          <target state="translated">由于ActiveQuery从&lt;a href=&quot;yii-mongodb-file-query&quot;&gt;yii \ mongodb \ file \ Query&lt;/a&gt;扩展而来，因此可以使用查询方法，例如&lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where（）&lt;/a&gt;，&lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy（）&lt;/a&gt;来定制查询选项。</target>
        </trans-unit>
        <trans-unit id="b701177194fa70f11dd884ac1b767d527a6f15d4" translate="yes" xml:space="preserve">
          <source>Because ActiveQuery extends from &lt;a href=&quot;yii-mongodb-query&quot;&gt;yii\mongodb\Query&lt;/a&gt;, one can use query methods, such as &lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where()&lt;/a&gt;, &lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy()&lt;/a&gt; to customize the query options.</source>
          <target state="translated">由于ActiveQuery从&lt;a href=&quot;yii-mongodb-query&quot;&gt;yii \ mongodb \ Query&lt;/a&gt;扩展而来，因此可以使用查询方法，例如&lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where（）&lt;/a&gt;，&lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy（）&lt;/a&gt;来定制查询选项。</target>
        </trans-unit>
        <trans-unit id="d1c6c236499c44f0aea76bf24537eb2899f3f27d" translate="yes" xml:space="preserve">
          <source>Because ActiveQuery extends from &lt;a href=&quot;yii-sphinx-query&quot;&gt;yii\sphinx\Query&lt;/a&gt;, one can use query methods, such as &lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where()&lt;/a&gt;, &lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy()&lt;/a&gt; to customize the query options.</source>
          <target state="translated">由于ActiveQuery从&lt;a href=&quot;yii-sphinx-query&quot;&gt;yii \ sphinx \ Query&lt;/a&gt;扩展而来，因此可以使用查询方法，例如&lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where（）&lt;/a&gt;，&lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy（）&lt;/a&gt;来定制查询选项。</target>
        </trans-unit>
        <trans-unit id="b6a5e467c985cfafb9c183c9bfacadd78473892d" translate="yes" xml:space="preserve">
          <source>Because Cache implements the &lt;a href=&quot;http://www.php.net/class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; interface, it can be used like an array. For example,</source>
          <target state="translated">由于Cache实现了&lt;a href=&quot;http://www.php.net/class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;接口，因此可以像数组一样使用它。例如，</target>
        </trans-unit>
        <trans-unit id="3dec77ec660e177aae7b181f1bd14b74582bf7fa" translate="yes" xml:space="preserve">
          <source>Because CacheInterface extends the &lt;a href=&quot;http://www.php.net/class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; interface, it can be used like an array. For example,</source>
          <target state="translated">由于CacheInterface扩展了&lt;a href=&quot;http://www.php.net/class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;接口，因此可以像使用数组一样使用它。例如，</target>
        </trans-unit>
        <trans-unit id="710910cf6aa85ab704edd15b5e3ccd7278293e0e" translate="yes" xml:space="preserve">
          <source>Because Gii generates new code files on the server, you should only use it on your own development machine. To prevent other people from using this module, by default, Gii can only be accessed by localhost. You may configure its &lt;a href=&quot;yii-gii-module#%24allowedIPs-detail&quot;&gt;$allowedIPs&lt;/a&gt; property if you want to make it accessible on other machines.</source>
          <target state="translated">因为Gii在服务器上生成新的代码文件，所以您只能在自己的开发机器上使用它。为了防止其他人使用此模块，默认情况下，Gii只能由localhost访问。如果要使其在其他计算机上可访问，可以配置其&lt;a href=&quot;yii-gii-module#%24allowedIPs-detail&quot;&gt;$ allowedIPs&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="3e614fa849facdacbe81fff64ddf044bd6c519b3" translate="yes" xml:space="preserve">
          <source>Because Yii embraces Composer as a package dependency manager, it is recommended that you also install the Composer autoloader. If you are using 3rd-party libraries that have their own autoloaders, you should also install those.</source>
          <target state="translated">因为Yii将Composer作为一个包的依赖管理器,建议你也安装Composer自动加载器。如果你使用的第三方库有自己的自动加载器,你也应该安装。</target>
        </trans-unit>
        <trans-unit id="9289d8285d66e744a22db5e188215cd2408a8fc6" translate="yes" xml:space="preserve">
          <source>Because a DB connection often needs to be accessed in different places, a common practice is to configure it in terms of an &lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt; like the following:</source>
          <target state="translated">由于通常需要在不同位置访问数据库连接，因此通常的做法是根据&lt;a href=&quot;guide-structure-application-components&quot;&gt;应用程序组件&lt;/a&gt;来配置它，如下所示：</target>
        </trans-unit>
        <trans-unit id="e749146cf895d5cd00af02d9f6240f5457f0388b" translate="yes" xml:space="preserve">
          <source>Because a relation method returns an instance of &lt;a href=&quot;yii-db-activequery&quot;&gt;yii\db\ActiveQuery&lt;/a&gt;, you can further build this query using query building methods before performing DB query. For example,</source>
          <target state="translated">因为关系方法返回&lt;a href=&quot;yii-db-activequery&quot;&gt;yii \ db \ ActiveQuery&lt;/a&gt;的实例，所以您可以在执行数据库查询之前使用查询构建方法进一步构建此查询。例如，</target>
        </trans-unit>
        <trans-unit id="a79b062db1558c6ffb9cbc2a0563d1557df5d3f6" translate="yes" xml:space="preserve">
          <source>Because all cache components support the same set of APIs, you can swap the underlying cache component with a different one by reconfiguring it in the application configuration without modifying the code that uses the cache. For example, you can modify the above configuration to use &lt;a href=&quot;yii-caching-apccache&quot;&gt;APC cache&lt;/a&gt;:</source>
          <target state="translated">因为所有缓存组件都支持相同的API集，所以您可以通过在应用程序配置中重新配置基础缓存组件来与其他缓存组件交换，而无需修改使用缓存的代码。例如，您可以修改以上配置以使用&lt;a href=&quot;yii-caching-apccache&quot;&gt;APC缓存&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="c2580aa1ab34f1a08564b46eced2e312853eb367" translate="yes" xml:space="preserve">
          <source>Because attribute values will be set automatically by this behavior, they are usually not user input and should therefore not be validated, i.e. &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; should not appear in the &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules()&lt;/a&gt; method of the model.</source>
          <target state="translated">因为属性值将通过此行为自动设置，所以它们通常不是用户输入，因此不应进行验证，即 &lt;code&gt;created_at&lt;/code&gt; 和 &lt;code&gt;updated_at&lt;/code&gt; 不应出现在模型的&lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules（）&lt;/a&gt;方法中。</target>
        </trans-unit>
        <trans-unit id="be465f3c7b0e10cc089af80dffeca6c797704401" translate="yes" xml:space="preserve">
          <source>Because attribute values will be set automatically by this behavior, they are usually not user input and should therefore not be validated, i.e. &lt;code&gt;created_by&lt;/code&gt; and &lt;code&gt;updated_by&lt;/code&gt; should not appear in the &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules()&lt;/a&gt; method of the model.</source>
          <target state="translated">因为属性值将通过此行为自动设置，所以它们通常不是用户输入，因此不应进行验证，即 &lt;code&gt;created_by&lt;/code&gt; 和 &lt;code&gt;updated_by&lt;/code&gt; 不应出现在模型的&lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules（）&lt;/a&gt;方法中。</target>
        </trans-unit>
        <trans-unit id="86880942c47713f6b2e57ae18d59350535d53183" translate="yes" xml:space="preserve">
          <source>Because attribute values will be set automatically by this behavior, they are usually not user input and should therefore not be validated, i.e. the &lt;code&gt;slug&lt;/code&gt; attribute should not appear in the &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules()&lt;/a&gt; method of the model.</source>
          <target state="translated">因为属性值将通过此行为自动设置，所以它们通常不是用户输入的，因此不应进行验证，即， &lt;code&gt;slug&lt;/code&gt; 属性不应出现在模型的&lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules（）&lt;/a&gt;方法中。</target>
        </trans-unit>
        <trans-unit id="d1d556cef46fa7cdfb32efd0170fd78500b6ba3f" translate="yes" xml:space="preserve">
          <source>Because attribute values will be set automatically by this behavior, they are usually not user input and should therefore not be validated, i.e. they should not appear in the &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules()&lt;/a&gt; method of the model.</source>
          <target state="translated">因为属性值将通过此行为自动设置，所以它们通常不是用户输入，因此不应进行验证，即，它们不应出现在模型的&lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules（）&lt;/a&gt;方法中。</target>
        </trans-unit>
        <trans-unit id="ea2da1d0acb18fd2d52039c2b1c0797933dbde1d" translate="yes" xml:space="preserve">
          <source>Because breadcrumbs usually appears in nearly every page of a website, you may consider placing it in a layout view. You can use a view parameter (e.g. &lt;code&gt;$this-&amp;gt;params['breadcrumbs']&lt;/code&gt;) to configure the links in different views. In the layout view, you assign this view parameter to the &lt;a href=&quot;yii-widgets-breadcrumbs#%24links-detail&quot;&gt;$links&lt;/a&gt; property like the following:</source>
          <target state="translated">由于面包屑通常会出现在网站的几乎每个页面上，因此您可以考虑将其放在布局视图中。您可以使用视图参数（例如 &lt;code&gt;$this-&amp;gt;params['breadcrumbs']&lt;/code&gt; ）在不同视图中配置链接。在布局视图中，将此视图参数分配给&lt;a href=&quot;yii-widgets-breadcrumbs#%24links-detail&quot;&gt;$ links&lt;/a&gt;属性，如下所示：</target>
        </trans-unit>
        <trans-unit id="0bf90ffec0b936767b859768f83383e965528a16" translate="yes" xml:space="preserve">
          <source>Because by default the response format is &lt;a href=&quot;yii-web-response#FORMAT_HTML-detail&quot;&gt;HTML&lt;/a&gt;, you should only return a string in an action method. If you want to use a different response format, you should set it first before returning the data. For example,</source>
          <target state="translated">因为默认情况下响应格式为&lt;a href=&quot;yii-web-response#FORMAT_HTML-detail&quot;&gt;HTML&lt;/a&gt;，所以您仅应在操作方法中返回字符串。如果要使用其他响应格式，则应先设置它，然后再返回数据。例如，</target>
        </trans-unit>
        <trans-unit id="b0da934f3c5d97ac0ed8b419488543534bc57e19" translate="yes" xml:space="preserve">
          <source>Because dependencies are needed when new objects are being created, their registration should be done as early as possible. The following are the recommended practices:</source>
          <target state="translated">由于在创建新对象时需要依赖关系,因此应尽早对其进行注册。以下是建议的做法:</target>
        </trans-unit>
        <trans-unit id="420687bc398ae45a48fe9f097148bec0c52ca110" translate="yes" xml:space="preserve">
          <source>Because extensions are meant to be used by other people, you often need to make an extra effort during development. Below we introduce some common and recommended practices in creating high quality extensions.</source>
          <target state="translated">由于扩展是要被别人使用的,所以在开发过程中往往需要付出额外的努力。下面我们介绍一些创建高质量扩展的常见和推荐做法。</target>
        </trans-unit>
        <trans-unit id="90958be63fe611ca0eb30c39df2434afc5b2793c" translate="yes" xml:space="preserve">
          <source>Because it is a common task to query by primary key values or a set of column values, Yii provides two shortcut methods for this purpose:</source>
          <target state="translated">因为它是一个常见的任务,通过主键值或列值集来查询,Yii提供了两个快捷方法来实现这个目的。</target>
        </trans-unit>
        <trans-unit id="ef5f330df44fd2f7ee5d7461819693dc35b5acb5" translate="yes" xml:space="preserve">
          <source>Because layouts are also views, they can be created in the similar way as normal views. By default, layouts are stored in the directory &lt;code&gt;@app/views/layouts&lt;/code&gt;. For layouts used within a &lt;a href=&quot;guide-structure-modules&quot;&gt;module&lt;/a&gt;, they should be stored in the &lt;code&gt;views/layouts&lt;/code&gt; directory under the &lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;module directory&lt;/a&gt;. You may customize the default layout directory by configuring the &lt;a href=&quot;yii-base-module#%24layoutPath-detail&quot;&gt;yii\base\Module::$layoutPath&lt;/a&gt; property of the application or modules.</source>
          <target state="translated">由于布局也是视图，因此可以按照与普通视图类似的方式来创建布局。默认情况下，布局存储在目录 &lt;code&gt;@app/views/layouts&lt;/code&gt; 。对于&lt;a href=&quot;guide-structure-modules&quot;&gt;模块中&lt;/a&gt;使用的布局，应将其存储在&lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;模块目录&lt;/a&gt;下的 &lt;code&gt;views/layouts&lt;/code&gt; 目录中。您可以通过配置应用程序或模块的&lt;a href=&quot;yii-base-module#%24layoutPath-detail&quot;&gt;yii \ base \ Module :: $ layoutPath&lt;/a&gt;属性来自定义默认布局目录。</target>
        </trans-unit>
        <trans-unit id="6336648679a3e6cc0a89b52d58cf7aaaf793b367" translate="yes" xml:space="preserve">
          <source>Because of the flushing and exporting level setting, by default when you call &lt;code&gt;Yii::trace()&lt;/code&gt; or any other logging method, you will NOT see the log message immediately in the log targets. This could be a problem for some long-running console applications. To make each log message appear immediately in the log targets, you should set both &lt;a href=&quot;yii-log-dispatcher#%24flushInterval-detail&quot;&gt;flushInterval&lt;/a&gt; and &lt;a href=&quot;yii-log-target#%24exportInterval-detail&quot;&gt;exportInterval&lt;/a&gt; to be 1, as shown below:</source>
          <target state="translated">由于刷新和导出级别设置，默认情况下，当您调用 &lt;code&gt;Yii::trace()&lt;/code&gt; 或任何其他日志记录方法时，您不会在日志目标中立即看到日志消息。对于某些长时间运行的控制台应用程序来说可能是个问题。要使每个日志消息立即出现在日志目标中，应将&lt;a href=&quot;yii-log-dispatcher#%24flushInterval-detail&quot;&gt;flushInterval&lt;/a&gt;和&lt;a href=&quot;yii-log-target#%24exportInterval-detail&quot;&gt;exportInterval&lt;/a&gt;都设置为1，如下所示：</target>
        </trans-unit>
        <trans-unit id="2430a076d138167e46ba181727a6f2a925241c8f" translate="yes" xml:space="preserve">
          <source>Because service locators are often being created with &lt;a href=&quot;guide-concept-configurations&quot;&gt;configurations&lt;/a&gt;, a writable property named &lt;a href=&quot;yii-di-servicelocator#setComponents()-detail&quot;&gt;components&lt;/a&gt; is provided. This allows you to configure and register multiple components at once. The following code shows a configuration array that can be used to configure a service locator (e.g. an &lt;a href=&quot;guide-structure-applications&quot;&gt;application&lt;/a&gt;) with the &lt;code&gt;db&lt;/code&gt;, &lt;code&gt;cache&lt;/code&gt; and &lt;code&gt;search&lt;/code&gt; components:</source>
          <target state="translated">由于通常使用&lt;a href=&quot;guide-concept-configurations&quot;&gt;配置&lt;/a&gt;创建服务定位器，因此提供了一个名为&lt;a href=&quot;yii-di-servicelocator#setComponents()-detail&quot;&gt;components&lt;/a&gt;的可写属性。这使您可以一次配置和注册多个组件。以下代码显示了一个配置数组，该数组可用于通过 &lt;code&gt;db&lt;/code&gt; ， &lt;code&gt;cache&lt;/code&gt; 和 &lt;code&gt;search&lt;/code&gt; 组件配置服务定位器（例如&lt;a href=&quot;guide-structure-applications&quot;&gt;application&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="3324f10752241de408a51d282208ebbab5dfa067" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;components&lt;/code&gt; configuration is complex too, you store it in a separate file called &lt;code&gt;components.php&lt;/code&gt; and &quot;require&quot; this file in &lt;code&gt;web.php&lt;/code&gt; as shown above. The content of &lt;code&gt;components.php&lt;/code&gt; is as follows,</source>
          <target state="translated">由于 &lt;code&gt;components&lt;/code&gt; 配置也很复杂，因此您将其存储在一个名为 &lt;code&gt;components.php&lt;/code&gt; 的单独文件中， &lt;code&gt;web.php&lt;/code&gt; 如上所示在web.php中 &amp;ldquo;要求&amp;rdquo;该文件。 &lt;code&gt;components.php&lt;/code&gt; 的内容如下，</target>
        </trans-unit>
        <trans-unit id="e0efb6818ef7b93fdab512bd9a523cc259d11aa4" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;layout&lt;/code&gt; property may be configured at different levels (controllers, modules, application), behind the scene Yii takes two steps to determine what is the actual layout file being used for a particular controller.</source>
          <target state="translated">因为可以在不同的级别（控制器，模块，应用程序）配置 &lt;code&gt;layout&lt;/code&gt; 属性，所以Yii在后台采取了两个步骤来确定用于特定控制器的实际布局文件是什么。</target>
        </trans-unit>
        <trans-unit id="d1f815f1a877c71d7d484ad86d8773a17d49f547" translate="yes" xml:space="preserve">
          <source>Because the bootstrapping work has to be done before handling &lt;em&gt;every&lt;/em&gt; request, it is very important to keep this process light and optimize it as much as possible.</source>
          <target state="translated">由于必须在处理&lt;em&gt;每个&lt;/em&gt;请求之前完成引导工作，因此保持该过程的轻量化并尽可能地对其进行优化非常重要。</target>
        </trans-unit>
        <trans-unit id="70e301c5481aff560779eb109497734db12a4d27" translate="yes" xml:space="preserve">
          <source>Because the default implementation of &lt;a href=&quot;yii-base-model#scenarios()-detail&quot;&gt;yii\base\Model::scenarios()&lt;/a&gt; will return all scenarios and attributes found in &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;yii\base\Model::rules()&lt;/a&gt;, if you do not override this method, it means an attribute is safe as long as it appears in one of the active validation rules.</source>
          <target state="translated">因为&lt;a href=&quot;yii-base-model#scenarios()-detail&quot;&gt;yii \ base \ Model :: scenarios（）&lt;/a&gt;的默认实现将返回在&lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;yii \ base \ Model :: rules（）中&lt;/a&gt;找到的所有方案和属性，所以如果您不覆盖此方法，则意味着只要该属性是安全的就像其中一项有效的验证规则一样。</target>
        </trans-unit>
        <trans-unit id="6230f0fe655618bda928da46c5be3a9970ccb35c" translate="yes" xml:space="preserve">
          <source>Because this class is a behavior, when it is attached to a component, that component will then also have the &lt;code&gt;prop1&lt;/code&gt; and &lt;code&gt;prop2&lt;/code&gt; properties and the &lt;code&gt;foo()&lt;/code&gt; method.</source>
          <target state="translated">因为此类是一种行为，所以当将其附加到组件时，该组件还将具有 &lt;code&gt;prop1&lt;/code&gt; 和 &lt;code&gt;prop2&lt;/code&gt; 属性以及 &lt;code&gt;foo()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="55920b46f3eaea3b0285ed66a8cc5265cef83185" translate="yes" xml:space="preserve">
          <source>Because this method returns an ArrayObject object, you may manipulate it by inserting or removing validators (useful in model behaviors). For example,</source>
          <target state="translated">因为这个方法返回一个ArrayObject对象,所以你可以通过插入或删除验证器来操作它(在模型行为中很有用)。例如</target>
        </trans-unit>
        <trans-unit id="efb385432b7ece23df097332cd4171d31a52a4bb" translate="yes" xml:space="preserve">
          <source>Before feature can be used this wrapper should be registered via &lt;a href=&quot;yii-mongodb-file-streamwrapper#register()-detail&quot;&gt;register()&lt;/a&gt; method. It is usually performed via \yii\mongodb\file\yii\mongodb\Connection::registerFileStreamWrapper().</source>
          <target state="translated">在使用功能之前，应通过&lt;a href=&quot;yii-mongodb-file-streamwrapper#register()-detail&quot;&gt;register（）&lt;/a&gt;方法注册该包装。通常通过\ yii \ mongodb \ file \ yii \ mongodb \ Connection :: registerFileStreamWrapper（）执行。</target>
        </trans-unit>
        <trans-unit id="07227dfbf64a71bb46357a6f19b053b70c5fedba" translate="yes" xml:space="preserve">
          <source>Before the redirection, the current URL (if it's not an AJAX url) will be kept as &lt;a href=&quot;yii-web-user#%24returnUrl-detail&quot;&gt;$returnUrl&lt;/a&gt; so that the user browser may be redirected back to the current page after successful login.</source>
          <target state="translated">重定向之前，当前URL（如果不是AJAX URL）将保留为&lt;a href=&quot;yii-web-user#%24returnUrl-detail&quot;&gt;$ returnUrl，&lt;/a&gt;以便在成功登录后可以将用户浏览器重定向回当前页面。</target>
        </trans-unit>
        <trans-unit id="c9358b14f20904e289a4cb2a46bbb15d363b9fe8" translate="yes" xml:space="preserve">
          <source>Before we set off to define authorization data and perform access checking, we need to configure the &lt;a href=&quot;yii-base-application#%24authManager-detail&quot;&gt;authManager&lt;/a&gt; application component. Yii provides two types of authorization managers: &lt;a href=&quot;yii-rbac-phpmanager&quot;&gt;yii\rbac\PhpManager&lt;/a&gt; and &lt;a href=&quot;yii-rbac-dbmanager&quot;&gt;yii\rbac\DbManager&lt;/a&gt;. The former uses a PHP script file to store authorization data, while the latter stores authorization data in a database. You may consider using the former if your application does not require very dynamic role and permission management.</source>
          <target state="translated">在开始定义授权数据和执行访问检查之前，我们需要配置&lt;a href=&quot;yii-base-application#%24authManager-detail&quot;&gt;authManager&lt;/a&gt;应用程序组件。Yii提供两种类型的授权管理器：&lt;a href=&quot;yii-rbac-phpmanager&quot;&gt;yii \ rbac \ PhpManager&lt;/a&gt;和yii &lt;a href=&quot;yii-rbac-dbmanager&quot;&gt;\ rbac \ DbManager&lt;/a&gt;。前者使用PHP脚本文件存储授权数据，而后者使用授权数据存储在数据库中。如果您的应用程序不需要非常动态的角色和权限管理，则可以考虑使用前者。</target>
        </trans-unit>
        <trans-unit id="33443d8a5c9e9bcde056a8f254827236ba6db71b" translate="yes" xml:space="preserve">
          <source>Before you can go on you need to create those tables in the database. To do this, you can use the migration stored in &lt;code&gt;@yii/rbac/migrations&lt;/code&gt;:</source>
          <target state="translated">在继续之前，您需要在数据库中创建这些表。为此，您可以使用存储在 &lt;code&gt;@yii/rbac/migrations&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b729f9d33c28cf3cd936af16905711d45583ec20" translate="yes" xml:space="preserve">
          <source>Begins a form field.</source>
          <target state="translated">开始一个表格字段。</target>
        </trans-unit>
        <trans-unit id="8cf0b865ce0821948992d3642584fcb7e901151e" translate="yes" xml:space="preserve">
          <source>Begins a transaction.</source>
          <target state="translated">开始交易。</target>
        </trans-unit>
        <trans-unit id="98c22a82cdb5c9cc429e4d6f64edc457a50804ad" translate="yes" xml:space="preserve">
          <source>Begins a widget.</source>
          <target state="translated">开始一个小部件。</target>
        </trans-unit>
        <trans-unit id="f411290d37d609a2351cac68bca982929f1bf1b6" translate="yes" xml:space="preserve">
          <source>Begins fragment caching.</source>
          <target state="translated">开始片段缓存。</target>
        </trans-unit>
        <trans-unit id="e995d5bde231b1bc4282273e17f03af039cc1e23" translate="yes" xml:space="preserve">
          <source>Begins recording a block.</source>
          <target state="translated">开始记录一个块。</target>
        </trans-unit>
        <trans-unit id="c9d1fe33c8a269d673c20ddeac18de3469b81c0d" translate="yes" xml:space="preserve">
          <source>Begins the rendering of content that is to be decorated by the specified view.</source>
          <target state="translated">开始渲染要由指定视图装饰的内容。</target>
        </trans-unit>
        <trans-unit id="5204572a175f0f672aa0cedd8c61b0dc6a6b363a" translate="yes" xml:space="preserve">
          <source>Behavior classes, like normal classes, support inheritance. Traits, on the other hand, can be considered as language-supported copy and paste. They do not support inheritance.</source>
          <target state="translated">行为类和普通类一样,支持继承。另一方面,特征可以被认为是语言支持的复制和粘贴。它们不支持继承。</target>
        </trans-unit>
        <trans-unit id="fdda77c9441838913592429d41fa040581d64c30" translate="yes" xml:space="preserve">
          <source>Behavior is the base class for all behavior classes.</source>
          <target state="translated">行为是所有行为类的基础类。</target>
        </trans-unit>
        <trans-unit id="3b615d319efe934d18d838650aea75dd222232f9" translate="yes" xml:space="preserve">
          <source>Behaviors</source>
          <target state="translated">Behaviors</target>
        </trans-unit>
        <trans-unit id="f61e2abbbeb1421331b1db9905a3e01885e419f1" translate="yes" xml:space="preserve">
          <source>Behaviors are configurable while traits are not.</source>
          <target state="translated">行为是可以配置的,而特质是不能配置的。</target>
        </trans-unit>
        <trans-unit id="1bdd3edf26829f49718d8257f2a7375e6b1a6fff" translate="yes" xml:space="preserve">
          <source>Behaviors are instances of &lt;a href=&quot;yii-base-behavior&quot;&gt;yii\base\Behavior&lt;/a&gt;, or of a child class. Behaviors, also known as &lt;a href=&quot;http://en.wikipedia.org/wiki/Mixin&quot;&gt;mixins&lt;/a&gt;, allow you to enhance the functionality of an existing &lt;a href=&quot;yii-base-component&quot;&gt;component&lt;/a&gt; class without needing to change the class's inheritance. Attaching a behavior to a component &quot;injects&quot; the behavior's methods and properties into the component, making those methods and properties accessible as if they were defined in the component class itself. Moreover, a behavior can respond to the &lt;a href=&quot;guide-concept-events&quot;&gt;events&lt;/a&gt; triggered by the component, which allows behaviors to also customize the normal code execution of the component.</source>
          <target state="translated">行为是&lt;a href=&quot;yii-base-behavior&quot;&gt;yii \ base \ Behavior&lt;/a&gt;或子类的实例。行为（也称为&lt;a href=&quot;http://en.wikipedia.org/wiki/Mixin&quot;&gt;mixin&lt;/a&gt;）使您可以增强现有&lt;a href=&quot;yii-base-component&quot;&gt;组件&lt;/a&gt;类的功能，而无需更改类的继承。将行为附加到组件上会将行为的方法和属性&amp;ldquo;注入&amp;rdquo;到组件中，从而使这些方法和属性可以访问，就好像它们是在组件类本身中定义的一样。此外，行为可以响应组件触发的&lt;a href=&quot;guide-concept-events&quot;&gt;事件&lt;/a&gt;，这使行为也可以自定义组件的常规代码执行。</target>
        </trans-unit>
        <trans-unit id="53d3de1a4372ca69ff9f876f056b006d22aa5837" translate="yes" xml:space="preserve">
          <source>Behaviors can be attached and detached to a component dynamically without requiring modification of the component class. To use a trait, you must modify the code of the class using it.</source>
          <target state="translated">行为可以动态地附加和分离到一个组件上,而不需要修改组件类。要使用一个特质,你必须修改使用它的类的代码。</target>
        </trans-unit>
        <trans-unit id="a54dddc2b5e4525eedbc1b338cd525f1eb5e596b" translate="yes" xml:space="preserve">
          <source>Behaviors can customize the code execution of a component by responding to its events.</source>
          <target state="translated">行为可以通过响应组件的事件来定制组件的代码执行。</target>
        </trans-unit>
        <trans-unit id="80ff3ff60f2728f23284dab06fd494771bf4e723" translate="yes" xml:space="preserve">
          <source>Behaviors declared in this method will be attached to the component automatically (on demand).</source>
          <target state="translated">在此方法中声明的行为将被自动附加到组件中(按需)。</target>
        </trans-unit>
        <trans-unit id="09fdf16da13f87d391115a4ba0b0badfb2e07ff8" translate="yes" xml:space="preserve">
          <source>Behind the scene, &lt;a href=&quot;yii-widgets-activeform&quot;&gt;yii\widgets\ActiveForm&lt;/a&gt; will read the validation rules declared in the model and generate appropriate JavaScript code for validators that support client-side validation. When a user changes the value of an input field or submit the form, the client-side validation JavaScript will be triggered.</source>
          <target state="translated">在后台，&lt;a href=&quot;yii-widgets-activeform&quot;&gt;yii \ widgets \ ActiveForm&lt;/a&gt;将读取模型中声明的验证规则，并为支持客户端验证的验证器生成适当的JavaScript代码。当用户更改输入字段的值或提交表单时，将触发客户端验证JavaScript。</target>
        </trans-unit>
        <trans-unit id="6c64c783443c8049ce1c834958eec695222b1cce" translate="yes" xml:space="preserve">
          <source>Behind the scene, before a RESTful API controller action is executed, the &lt;a href=&quot;yii-filters-contentnegotiator&quot;&gt;yii\filters\ContentNegotiator&lt;/a&gt; filter will check the &lt;code&gt;Accept&lt;/code&gt; HTTP header in the request and set the &lt;a href=&quot;yii-web-response#%24format-detail&quot;&gt;response format&lt;/a&gt; to be &lt;code&gt;'json'&lt;/code&gt;. After the action is executed and returns the resulting resource object or collection, &lt;a href=&quot;yii-rest-serializer&quot;&gt;yii\rest\Serializer&lt;/a&gt; will convert the result into an array. And finally, &lt;a href=&quot;yii-web-jsonresponseformatter&quot;&gt;yii\web\JsonResponseFormatter&lt;/a&gt; will serialize the array into a JSON string and include it in the response body.</source>
          <target state="translated">在幕后，在执行RESTful API控制器操作之前，&lt;a href=&quot;yii-filters-contentnegotiator&quot;&gt;yii \ filters \ ContentNegotiator&lt;/a&gt;过滤器将检查请求中的 &lt;code&gt;Accept&lt;/code&gt; HTTP标头，并将&lt;a href=&quot;yii-web-response#%24format-detail&quot;&gt;响应格式&lt;/a&gt;设置为 &lt;code&gt;'json'&lt;/code&gt; 。执行该操作并返回生成的资源对象或集合后，&lt;a href=&quot;yii-rest-serializer&quot;&gt;yii \ rest \ Serializer&lt;/a&gt;会将结果转换为数组。最后，&lt;a href=&quot;yii-web-jsonresponseformatter&quot;&gt;yii \ web \ JsonResponseFormatter&lt;/a&gt;将序列化为JSON字符串并将其包含在响应主体中。</target>
        </trans-unit>
        <trans-unit id="202996e9ee577a289b3d1ce78800eccf592634f8" translate="yes" xml:space="preserve">
          <source>Behind the scene, the DI container does much more work than just creating a new object. The container will first inspect the class constructor to find out dependent class or interface names and then automatically resolve those dependencies recursively.</source>
          <target state="translated">在幕后,DI容器所做的工作远比创建一个新对象要多得多,它首先会检查类的构造函数,找出依赖的类或接口名称,然后自动递归解析这些依赖关系。容器将首先检查类构造函数,找出依赖的类或接口名称,然后自动递归地解析这些依赖关系。</target>
        </trans-unit>
        <trans-unit id="28901dcfc2c4de7933df3176a509c10a87f7bac2" translate="yes" xml:space="preserve">
          <source>Being a regular PHP class asset bundle can bear some extra logic related to it and may adjust its internal parameters dynamically. For example: you may use some sophisticated JavaScript library, which provides some internationalization packed in separated source files: each per each supported language. Thus you will need to add particular '.js' file to your page in order to make library translation work. This can be achieved overriding &lt;a href=&quot;yii-web-assetbundle#init()-detail&quot;&gt;yii\web\AssetBundle::init()&lt;/a&gt; method:</source>
          <target state="translated">作为常规的PHP类资产捆绑包，可以承担一些与其相关的额外逻辑，并且可以动态调整其内部参数。例如：您可以使用一些复杂的JavaScript库，该库将一些国际化打包在单独的源文件中：每种受支持的语言每种。因此，您将需要在页面中添加特定的&amp;ldquo; .js&amp;rdquo;文件以使库翻译工作。这可以通过覆盖&lt;a href=&quot;yii-web-assetbundle#init()-detail&quot;&gt;yii \ web \ AssetBundle :: init（）&lt;/a&gt;方法来实现：</target>
        </trans-unit>
        <trans-unit id="1361bf42bf8100e7707fc4b7cc0aa034658099c6" translate="yes" xml:space="preserve">
          <source>Being populated by query results &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt; performs automatic typecast for its attribute values, using information from &lt;a href=&quot;guide-db-dao#database-schema&quot;&gt;database table schema&lt;/a&gt;. This allows data retrieved from table column declared as integer to be populated in ActiveRecord instance with PHP integer, boolean with boolean and so on. However, typecasting mechanism has several limitations:</source>
          <target state="translated">由查询结果填充&lt;a href=&quot;yii-db-activerecord&quot;&gt;yii \ db \ ActiveRecord&lt;/a&gt;使用&lt;a href=&quot;guide-db-dao#database-schema&quot;&gt;数据库表模式中的&lt;/a&gt;信息对其属性值执行自动类型转换。这允许从声明为整数的表列中检索的数据在PHP的ActiveRecord实例中填充，在PHP的布尔值中使用boolean填充，依此类推。但是，类型转换机制有一些限制：</target>
        </trans-unit>
        <trans-unit id="1e0c0c1e7675c049dc953cf3ccae38ca1df94fa9" translate="yes" xml:space="preserve">
          <source>Below are some common usages of this command:</source>
          <target state="translated">以下是该命令的一些常见用法。</target>
        </trans-unit>
        <trans-unit id="1dd172103223f61f7631b02fb8d576484648d0a8" translate="yes" xml:space="preserve">
          <source>Below are some examples of using this method:</source>
          <target state="translated">下面是一些使用这种方法的例子。</target>
        </trans-unit>
        <trans-unit id="56e4cfa1166ebefaad30cf26945e71483c2c1283" translate="yes" xml:space="preserve">
          <source>Below are some examples showing how to use Active Query to query data:</source>
          <target state="translated">以下是一些例子,展示了如何使用Active Query来查询数据。</target>
        </trans-unit>
        <trans-unit id="1dd6d0e4c96ee178dec190fc1f5650780670c1c1" translate="yes" xml:space="preserve">
          <source>Below are some examples:</source>
          <target state="translated">以下是一些例子。</target>
        </trans-unit>
        <trans-unit id="f3cac87a4fb2d6726928b2bf44c115a2f2f44e7c" translate="yes" xml:space="preserve">
          <source>Below are some usage examples,</source>
          <target state="translated">以下是一些使用实例。</target>
        </trans-unit>
        <trans-unit id="b347e2c55ac996616fa8cb09db1739dfc3853f85" translate="yes" xml:space="preserve">
          <source>Below are some usage examples:</source>
          <target state="translated">以下是一些使用实例。</target>
        </trans-unit>
        <trans-unit id="8a808de5ca5c38204dd098f7b6ebc50607fe39a3" translate="yes" xml:space="preserve">
          <source>Below are the basic steps you may follow to create an extension as a Composer package.</source>
          <target state="translated">以下是你可以遵循的基本步骤,创建一个扩展作为Composer包。</target>
        </trans-unit>
        <trans-unit id="288b2d89a324ba4a9d927cf9c44f5eeb1e7919d4" translate="yes" xml:space="preserve">
          <source>Below is a summary of the available cache dependencies:</source>
          <target state="translated">以下是可用的缓存依赖的总结。</target>
        </trans-unit>
        <trans-unit id="e8f5d807e092f978ba7d687cc583eb868df54ec2" translate="yes" xml:space="preserve">
          <source>Below is a variant of &lt;code&gt;HelloWidget&lt;/code&gt; which takes the content enclosed within the &lt;code&gt;begin()&lt;/code&gt; and &lt;code&gt;end()&lt;/code&gt; calls, HTML-encodes it and then displays it.</source>
          <target state="translated">以下是 &lt;code&gt;HelloWidget&lt;/code&gt; 的一种变体，它采用了 &lt;code&gt;begin()&lt;/code&gt; 和 &lt;code&gt;end()&lt;/code&gt; 调用中包含的内容，对其进行HTML编码，然后将其显示。</target>
        </trans-unit>
        <trans-unit id="4a9ed104286cf1a327ccbc7033c42cb67020310e" translate="yes" xml:space="preserve">
          <source>Below is an example of a data provider that reads CSV data efficiently:</source>
          <target state="translated">下面是一个高效读取CSV数据的数据提供者的例子。</target>
        </trans-unit>
        <trans-unit id="7662644db5a92bb033265992ed664aee29de259b" translate="yes" xml:space="preserve">
          <source>Below is an example of how you could use the above validator class within your model.</source>
          <target state="translated">下面是一个如何在模型中使用上述验证器类的例子。</target>
        </trans-unit>
        <trans-unit id="f3877074d1dbfd4d7cacef2613fbda57ae7c625e" translate="yes" xml:space="preserve">
          <source>Below is an example of using Container:</source>
          <target state="translated">下面是一个使用Container的例子。</target>
        </trans-unit>
        <trans-unit id="fcf0c4c83669641c3d0634fb9d467d6bec73e0c2" translate="yes" xml:space="preserve">
          <source>Below is an example showing a configuration with initial property values, event handlers, and behaviors:</source>
          <target state="translated">下面是一个带有初始属性值、事件处理程序和行为的配置示例。</target>
        </trans-unit>
        <trans-unit id="5aea25b4fa49af115ec8d171a39191512a52975f" translate="yes" xml:space="preserve">
          <source>Below is an example showing how to make use of the &lt;code&gt;matchCallback&lt;/code&gt; option, which allows you to write arbitrary access check logic:</source>
          <target state="translated">下面的示例显示了如何使用 &lt;code&gt;matchCallback&lt;/code&gt; 选项，该选项允许您编写任意访问检查逻辑：</target>
        </trans-unit>
        <trans-unit id="87ac5f1d823e1b3695168c9fb11b97231c9aada6" translate="yes" xml:space="preserve">
          <source>Below is an example showing some typical usage of ActiveRecord:</source>
          <target state="translated">下面是一个典型的ActiveRecord的例子。</target>
        </trans-unit>
        <trans-unit id="3a70d04c1ef62c14933cff1c5df6d13ef6a06dc8" translate="yes" xml:space="preserve">
          <source>Below is an example:</source>
          <target state="translated">下面是一个例子。</target>
        </trans-unit>
        <trans-unit id="9bf8b3832997209243e02211047b12f15517b93e" translate="yes" xml:space="preserve">
          <source>Below is the list of all these database accessing methods:</source>
          <target state="translated">以下是所有这些数据库访问方法的列表。</target>
        </trans-unit>
        <trans-unit id="a106c6ba2f89aac0c36e518ea900fe1e4ca75faa" translate="yes" xml:space="preserve">
          <source>Below is the list of the predefined core application components. You may configure and customize them like you do with normal application components. When you are configuring a core application component, if you do not specify its class, the default one will be used.</source>
          <target state="translated">下面是预定义的核心应用程序组件的列表,您可以像配置普通应用程序组件一样配置和定制它们。您可以像配置普通的应用程序组件一样配置和定制它们。当你配置一个核心应用组件时,如果你没有指定它的类,将使用默认的类。</target>
        </trans-unit>
        <trans-unit id="3f344dd80165d206dafc90ed37837ef04bb54a0f" translate="yes" xml:space="preserve">
          <source>Below we'll review common security principles and describe how to avoid threats when developing applications using Yii. Most of these priciples are not unique to Yii alone but apply to website or software development in general, so we you will also find links for further reading on the general ideas behind these.</source>
          <target state="translated">下面我们将回顾常见的安全原则,并描述如何在使用Yii开发应用程序时避免威胁。大部分的原则并不是Yii独有的,而是适用于网站或一般的软件开发,所以我们也会找到链接来进一步阅读这些背后的一般想法。</target>
        </trans-unit>
        <trans-unit id="10ebb3efe69e50a44f9917020d1e2f6967e2c0c2" translate="yes" xml:space="preserve">
          <source>Besides &lt;a href=&quot;guide-concept-aliases&quot;&gt;aliases&lt;/a&gt;, the first argument can accept routes, parameters and URLs, in the same way &lt;a href=&quot;guide-helper-url&quot;&gt;Url::to()&lt;/a&gt; does.</source>
          <target state="translated">除&lt;a href=&quot;guide-concept-aliases&quot;&gt;别名外&lt;/a&gt;，第一个参数可以接受路由，参数和URL，就像&lt;a href=&quot;guide-helper-url&quot;&gt;Url :: to（）&lt;/a&gt;一样。</target>
        </trans-unit>
        <trans-unit id="47b251c2af4b639de8852e330be5aee6b301833e" translate="yes" xml:space="preserve">
          <source>Besides &lt;code&gt;$this&lt;/code&gt;, there may be other predefined variables in a view, such as &lt;code&gt;$model&lt;/code&gt; in the above example. These variables represent the data that are &lt;em&gt;pushed&lt;/em&gt; into the view by &lt;a href=&quot;guide-structure-controllers&quot;&gt;controllers&lt;/a&gt; or other objects which trigger the &lt;a href=&quot;#rendering-views&quot;&gt;view rendering&lt;/a&gt;.</source>
          <target state="translated">除了 &lt;code&gt;$this&lt;/code&gt; ，视图中可能还有其他预定义变量，例如上例中的 &lt;code&gt;$model&lt;/code&gt; 。这些变量代表由触发&lt;a href=&quot;#rendering-views&quot;&gt;视图渲染的&lt;/a&gt;&lt;a href=&quot;guide-structure-controllers&quot;&gt;控制器&lt;/a&gt;或其他对象&lt;em&gt;推&lt;/em&gt;入视图的数据。</target>
        </trans-unit>
        <trans-unit id="d3001f4efa27f7015640f43a8485665f608e9cd6" translate="yes" xml:space="preserve">
          <source>Besides changing the database schema, you can also retrieve the definition information about a table through the &lt;a href=&quot;yii-db-connection#getTableSchema()-detail&quot;&gt;getTableSchema()&lt;/a&gt; method of a DB connection. For example,</source>
          <target state="translated">除了更改数据库架构，您还可以通过数据库连接的&lt;a href=&quot;yii-db-connection#getTableSchema()-detail&quot;&gt;getTableSchema（）&lt;/a&gt;方法检索有关表的定义信息。例如，</target>
        </trans-unit>
        <trans-unit id="f68e6dcaf1bb0ef1216ba02096ee58d634fb799a" translate="yes" xml:space="preserve">
          <source>Besides column names, you can also select DB expressions. You must use the array format when selecting a DB expression that contains commas to avoid incorrect automatic name quoting. For example,</source>
          <target state="translated">除了列名,还可以选择DB表达式。在选择包含逗号的DB表达式时,必须使用数组格式,以避免错误的自动名称引号。例如</target>
        </trans-unit>
        <trans-unit id="9673da95ff34534c0fe0419155745c72d7e876d9" translate="yes" xml:space="preserve">
          <source>Besides controllers, you can also declare filters in a &lt;a href=&quot;guide-structure-modules&quot;&gt;module&lt;/a&gt; or &lt;a href=&quot;guide-structure-applications&quot;&gt;application&lt;/a&gt;. When you do so, the filters will be applied to &lt;em&gt;all&lt;/em&gt; controller actions belonging to that module or application, unless you configure the filters' &lt;a href=&quot;yii-base-actionfilter#%24only-detail&quot;&gt;only&lt;/a&gt; and &lt;a href=&quot;yii-base-actionfilter#%24except-detail&quot;&gt;except&lt;/a&gt; properties like described above.</source>
          <target state="translated">除了控制器，您还可以在&lt;a href=&quot;guide-structure-modules&quot;&gt;模块&lt;/a&gt;或&lt;a href=&quot;guide-structure-applications&quot;&gt;应用程序中&lt;/a&gt;声明过滤器。这样做时，过滤器将应用于属于该模块或应用程序的&lt;em&gt;所有&lt;/em&gt;控制器动作，除非您&lt;a href=&quot;yii-base-actionfilter#%24only-detail&quot;&gt;仅&lt;/a&gt;配置过滤器以及上述属性&lt;a href=&quot;yii-base-actionfilter#%24except-detail&quot;&gt;之外的&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="a2c6c2cae842ed35356035e87cf8e4911e0bb451" translate="yes" xml:space="preserve">
          <source>Besides date/time and number formats, Yii also supports other commonly used formats, including</source>
          <target state="translated">除了日期/时间和数字格式,Yii还支持其他常用的格式,包括</target>
        </trans-unit>
        <trans-unit id="ef7720106d812656221c4a8d9bfc472f18581d3c" translate="yes" xml:space="preserve">
          <source>Besides declaring URL rules as pattern-route pairs, you may also declare them as configuration arrays. Each configuration array is used to configure a single URL rule object. This is often needed when you want to configure other properties of a URL rule. For example,</source>
          <target state="translated">除了将URL规则声明为模式-路径对,还可以将它们声明为配置数组。每个配置数组都用于配置单个URL规则对象。当你想配置一个URL规则的其他属性时,通常需要这样做。例如</target>
        </trans-unit>
        <trans-unit id="80825cc82bc1a5a8fa86636b94bb92e1649bdc21" translate="yes" xml:space="preserve">
          <source>Besides expiration setting, cached data item may also be invalidated by changes of the so-called &lt;em&gt;cache dependencies&lt;/em&gt;. For example, &lt;a href=&quot;yii-caching-filedependency&quot;&gt;yii\caching\FileDependency&lt;/a&gt; represents the dependency of a file's modification time. When this dependency changes, it means the corresponding file is modified. As a result, any outdated file content found in the cache should be invalidated and the &lt;a href=&quot;yii-caching-cache#get()-detail&quot;&gt;get()&lt;/a&gt; call should return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">除了到期设置外，还可能通过更改所谓的&lt;em&gt;缓存依赖&lt;/em&gt;项来使缓存的数据项无效。例如，&lt;a href=&quot;yii-caching-filedependency&quot;&gt;yii \ caching \ FileDependency&lt;/a&gt;表示文件修改时间的依赖性。当此依赖关系更改时，意味着相应的文件已被修改。结果，在缓存中找到的任何过时的文件内容都应无效，并且&lt;a href=&quot;yii-caching-cache#get()-detail&quot;&gt;get（）&lt;/a&gt;调用应返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e22874e07ded165a1bf20b12d3347b955478256c" translate="yes" xml:space="preserve">
          <source>Besides joining with tables, you can also join with sub-queries. To do so, specify the sub-queries to be joined as &lt;a href=&quot;yii-db-query&quot;&gt;yii\db\Query&lt;/a&gt; objects. For example,</source>
          <target state="translated">除了与表联接之外，您还可以与子查询联接。为此，将要连接的子查询指定为&lt;a href=&quot;yii-db-query&quot;&gt;yii \ db \ Query&lt;/a&gt;对象。例如，</target>
        </trans-unit>
        <trans-unit id="5b7eb421d247812d92b1efc90ddff791ea5fab56" translate="yes" xml:space="preserve">
          <source>Besides message prefixes, log targets also append some context information to each batch of log messages. By default, the values of these global PHP variables are included: &lt;code&gt;$_GET&lt;/code&gt;, &lt;code&gt;$_POST&lt;/code&gt;, &lt;code&gt;$_FILES&lt;/code&gt;, &lt;code&gt;$_COOKIE&lt;/code&gt;, &lt;code&gt;$_SESSION&lt;/code&gt; and &lt;code&gt;$_SERVER&lt;/code&gt;. You may adjust this behavior by configuring the &lt;a href=&quot;yii-log-target#%24logVars-detail&quot;&gt;yii\log\Target::$logVars&lt;/a&gt; property with the names of the global variables that you want to include by the log target. For example, the following log target configuration specifies that only the value of the &lt;code&gt;$_SERVER&lt;/code&gt; variable will be appended to the log messages.</source>
          <target state="translated">除了消息前缀之外，日志目标还向每批日志消息附加一些上下文信息。默认情况下，包含以下这些全局PHP变量的值： &lt;code&gt;$_GET&lt;/code&gt; ， &lt;code&gt;$_POST&lt;/code&gt; ， &lt;code&gt;$_FILES&lt;/code&gt; ， &lt;code&gt;$_COOKIE&lt;/code&gt; ， &lt;code&gt;$_SESSION&lt;/code&gt; 和 &lt;code&gt;$_SERVER&lt;/code&gt; 。您可以通过配置&lt;a href=&quot;yii-log-target#%24logVars-detail&quot;&gt;yii \ log \ Target :: $ logVars&lt;/a&gt;属性和您想要由日志目标包括的全局变量的名称来调整此行为。例如，以下日志目标配置指定仅 &lt;code&gt;$_SERVER&lt;/code&gt; 变量的值将附加到日志消息中。</target>
        </trans-unit>
        <trans-unit id="cef05981ac7f7278b16c5175807922e2fa9ec0bf" translate="yes" xml:space="preserve">
          <source>Besides options, a command can also receive arguments. The arguments will be passed as the parameters to the action method corresponding to the requested sub-command. The first argument corresponds to the first parameter, the second corresponds to the second, and so on. If not enough arguments are provided when the command is called, the corresponding parameters will take the declared default values, if defined. If no default value is set, and no value is provided at runtime, the command will exit with an error.</source>
          <target state="translated">除了选项,命令还可以接收参数。这些参数将作为参数传递给与所请求的子命令相对应的操作方法。第一个参数对应第一个参数,第二个参数对应第二个参数,以此类推。如果在调用命令时没有提供足够的参数,相应的参数将采用声明的默认值(如果定义了)。如果没有设置默认值,在运行时也没有提供值,命令将以错误退出。</target>
        </trans-unit>
        <trans-unit id="e48715009122104765e94011922dd6c9f98de78a" translate="yes" xml:space="preserve">
          <source>Besides server-side caching that we have described in the previous sections, Web applications may also exploit client-side caching to save the time for generating and transmitting the same page content.</source>
          <target state="translated">除了我们在前几节介绍的服务器端缓存外,Web应用还可以利用客户端缓存来节省生成和传输同一页面内容的时间。</target>
        </trans-unit>
        <trans-unit id="0996ed1fa8a37125f1ea1463fb67951d26080c1b" translate="yes" xml:space="preserve">
          <source>Besides storing the messages in PHP files, you may also use the following message sources to store translated messages in different storage:</source>
          <target state="translated">除了将消息存储在PHP文件中,你也可以使用以下消息源来存储翻译后的消息。</target>
        </trans-unit>
        <trans-unit id="add0cbe70593e77ef45b75876364a6d72b0e5623" translate="yes" xml:space="preserve">
          <source>Besides table names, you can also select from sub-queries by specifying them in terms of &lt;a href=&quot;yii-db-query&quot;&gt;yii\db\Query&lt;/a&gt; objects. For example,</source>
          <target state="translated">除了表名之外，您还可以通过根据&lt;a href=&quot;yii-db-query&quot;&gt;yii \ db \ Query&lt;/a&gt;对象指定子查询来从子查询中进行选择。例如，</target>
        </trans-unit>
        <trans-unit id="d0f06072b572598dc8c2d80a85ce3994684d53b4" translate="yes" xml:space="preserve">
          <source>Besides the &lt;a href=&quot;yii-db-connection#%24dsn-detail&quot;&gt;dsn&lt;/a&gt; property, you often need to configure &lt;a href=&quot;yii-db-connection#%24username-detail&quot;&gt;username&lt;/a&gt; and &lt;a href=&quot;yii-db-connection#%24password-detail&quot;&gt;password&lt;/a&gt;. Please refer to &lt;a href=&quot;yii-db-connection&quot;&gt;yii\db\Connection&lt;/a&gt; for the full list of configurable properties.</source>
          <target state="translated">除了&lt;a href=&quot;yii-db-connection#%24dsn-detail&quot;&gt;dsn&lt;/a&gt;属性，您通常还需要配置&lt;a href=&quot;yii-db-connection#%24username-detail&quot;&gt;username&lt;/a&gt;和&lt;a href=&quot;yii-db-connection#%24password-detail&quot;&gt;password&lt;/a&gt;。有关可配置属性的完整列表，请参考&lt;a href=&quot;yii-db-connection&quot;&gt;yii \ db \ Connection&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9f2ff4d476c52d37dbd5de4cfadf57e68306c310" translate="yes" xml:space="preserve">
          <source>Besides the &lt;a href=&quot;yii-web-cookie#%24name-detail&quot;&gt;name&lt;/a&gt;, &lt;a href=&quot;yii-web-cookie#%24value-detail&quot;&gt;value&lt;/a&gt; properties shown in the above examples, the &lt;a href=&quot;yii-web-cookie&quot;&gt;yii\web\Cookie&lt;/a&gt; class also defines other properties to fully represent all available cookie information, such as &lt;a href=&quot;yii-web-cookie#%24domain-detail&quot;&gt;domain&lt;/a&gt;, &lt;a href=&quot;yii-web-cookie#%24expire-detail&quot;&gt;expire&lt;/a&gt;. You may configure these properties as needed to prepare a cookie and then add it to the response's cookie collection.</source>
          <target state="translated">除了上面示例中显示的&lt;a href=&quot;yii-web-cookie#%24name-detail&quot;&gt;name&lt;/a&gt;和&lt;a href=&quot;yii-web-cookie#%24value-detail&quot;&gt;value&lt;/a&gt;属性之外，&lt;a href=&quot;yii-web-cookie&quot;&gt;yii \ web \ Cookie&lt;/a&gt;类还定义了其他属性，以完全表示所有可用的cookie信息，例如&lt;a href=&quot;yii-web-cookie#%24domain-detail&quot;&gt;domain&lt;/a&gt;，&lt;a href=&quot;yii-web-cookie#%24expire-detail&quot;&gt;expire&lt;/a&gt;。您可以根据需要配置这些属性以准备cookie，然后将其添加到响应的cookie集合中。</target>
        </trans-unit>
        <trans-unit id="c95e1177d2766726daa95a48474cbcbff4058fe9" translate="yes" xml:space="preserve">
          <source>Besides the &lt;code&gt;to()&lt;/code&gt; method, the &lt;a href=&quot;yii-helpers-url&quot;&gt;yii\helpers\Url&lt;/a&gt; helper class also provides several other convenient URL creation methods. For example,</source>
          <target state="translated">除了 &lt;code&gt;to()&lt;/code&gt; 方法之外，&lt;a href=&quot;yii-helpers-url&quot;&gt;yii \ helpers \ Url&lt;/a&gt; helper类还提供了其他几种方便的URL创建方法。例如，</target>
        </trans-unit>
        <trans-unit id="638587f75daf0b35d5c0b0cea1a6b0ea7d97929a" translate="yes" xml:space="preserve">
          <source>Besides the application object, each module object is also a service locator.</source>
          <target state="translated">除了应用对象,每个模块对象也是一个服务定位器。</target>
        </trans-unit>
        <trans-unit id="16e2a007ac0e9eaf2ccf637e1d4fa812e34aa6fb" translate="yes" xml:space="preserve">
          <source>Besides the property feature, Object also introduces an important object initialization life cycle. In particular, creating an new instance of Object or its derived class will involve the following life cycles sequentially:</source>
          <target state="translated">除了属性功能,Object还引入了一个重要的对象初始化生命周期。特别是,创建一个新的Object或其派生类的实例将依次涉及以下生命周期。</target>
        </trans-unit>
        <trans-unit id="e80de66f8bba1d5dcd11381ade175b7a1e1aa221" translate="yes" xml:space="preserve">
          <source>Besides the rich features for building web applications, Yii also has full-featured support for console applications which are mainly used to create background and maintenance tasks that need to be performed for a website.</source>
          <target state="translated">除了构建Web应用的丰富功能外,Yii还对控制台应用提供了全功能支持,主要用于创建后台和维护网站需要执行的任务。</target>
        </trans-unit>
        <trans-unit id="d68c59dccf52ad6ca1468a0c16e79bfc2fc42b3e" translate="yes" xml:space="preserve">
          <source>Besides using &lt;a href=&quot;yii-web-erroraction&quot;&gt;yii\web\ErrorAction&lt;/a&gt;, you may also define the &lt;code&gt;error&lt;/code&gt; action using an action method like the following,</source>
          <target state="translated">除了使用&lt;a href=&quot;yii-web-erroraction&quot;&gt;yii \ web \ ErrorAction之外&lt;/a&gt;，您还可以使用以下操作方法来定义 &lt;code&gt;error&lt;/code&gt; 操作，</target>
        </trans-unit>
        <trans-unit id="e86259cd224d74f14f5aef8f91bf0f4591161cef" translate="yes" xml:space="preserve">
          <source>Besides using query building methods, you can also write raw SQLs to query data and populate the results into Active Record objects. You can do so by calling the &lt;a href=&quot;yii-db-activerecord#findBySql()-detail&quot;&gt;yii\db\ActiveRecord::findBySql()&lt;/a&gt; method:</source>
          <target state="translated">除了使用查询构建方法外，您还可以编写原始SQL来查询数据并将结果填充到Active Record对象中。您可以通过调用&lt;a href=&quot;yii-db-activerecord#findBySql()-detail&quot;&gt;yii \ db \ ActiveRecord :: findBySql（）&lt;/a&gt;方法来实现：</target>
        </trans-unit>
        <trans-unit id="5bb2a9f31c96072730cad5bb49422fb70b5016de" translate="yes" xml:space="preserve">
          <source>Besides using the &lt;a href=&quot;guide-tutorial-core-validators&quot;&gt;core validators&lt;/a&gt; included in the Yii releases, you may also create your own validators. You may create inline validators or standalone validators.</source>
          <target state="translated">除了使用Yii版本中包含的&lt;a href=&quot;guide-tutorial-core-validators&quot;&gt;核心验证器&lt;/a&gt;之外，您还可以创建自己的验证器。您可以创建内联验证器或独立验证器。</target>
        </trans-unit>
        <trans-unit id="f7e0e5642336aca269577103d6de3feb1c7bfede" translate="yes" xml:space="preserve">
          <source>Besides using the above constants to specify isolation levels, you may also use strings with a valid syntax supported by the DBMS that you are using. For example, in PostgreSQL, you may use &lt;code&gt;&quot;SERIALIZABLE READ ONLY DEFERRABLE&quot;&lt;/code&gt;.</source>
          <target state="translated">除了使用上述常量指定隔离级别外，您还可以使用具有所使用DBMS支持的有效语法的字符串。例如，在PostgreSQL中，您可以使用 &lt;code&gt;&quot;SERIALIZABLE READ ONLY DEFERRABLE&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f237acf669ac104282f9b67338122056a7cf509" translate="yes" xml:space="preserve">
          <source>Besides whitelisting the categories by the &lt;a href=&quot;yii-log-target#%24categories-detail&quot;&gt;categories&lt;/a&gt; property, you may also blacklist certain categories by the &lt;a href=&quot;yii-log-target#%24except-detail&quot;&gt;except&lt;/a&gt; property. If the category of a message is found or matches one of the patterns in this property, it will NOT be processed by the target.</source>
          <target state="translated">除了按&lt;a href=&quot;yii-log-target#%24categories-detail&quot;&gt;类别&lt;/a&gt;属性将类别白名单，您还可以按&lt;a href=&quot;yii-log-target#%24except-detail&quot;&gt;除外&lt;/a&gt;属性将某些类别黑名单。如果找到消息的类别或与该属性中的模式之一匹配，则目标将不会处理它。</target>
        </trans-unit>
        <trans-unit id="422b09d13b8460fedd2eb9919ee9e1bb73f6279d" translate="yes" xml:space="preserve">
          <source>Besides working with individual database tables, Active Record is also capable of bringing together related data, making them readily accessible through the primary data. For example, the customer data is related with the order data because one customer may have placed one or multiple orders. With appropriate declaration of this relation, you'll be able to access a customer's order information using the expression &lt;code&gt;$customer-&amp;gt;orders&lt;/code&gt; which gives back the customer's order information in terms of an array of &lt;code&gt;Order&lt;/code&gt; Active Record instances.</source>
          <target state="translated">除了使用单个数据库表之外，Active Record还能够将相关数据组合在一起，从而使它们可以通过主数据轻松访问。例如，客户数据与订单数据相关，因为一个客户可能下了一个或多个订单。通过对此关系进行适当的声明，您将能够使用表达式 &lt;code&gt;$customer-&amp;gt;orders&lt;/code&gt; 访问客户的订单信息，该表达式根据 &lt;code&gt;Order&lt;/code&gt; Active Record实例数组返回客户的订单信息。</target>
        </trans-unit>
        <trans-unit id="62b9f8f158e44e783a66a8977e0530a1ba9aa62f" translate="yes" xml:space="preserve">
          <source>Besides, DbFixture also attempts to load an &lt;a href=&quot;yii-test-initdbfixture#%24initScript-detail&quot;&gt;initialization script&lt;/a&gt; if it exists.</source>
          <target state="translated">此外，DbFixture还会尝试加载&lt;a href=&quot;yii-test-initdbfixture#%24initScript-detail&quot;&gt;初始化脚本（&lt;/a&gt;如果存在）。</target>
        </trans-unit>
        <trans-unit id="36de90e22d47f94d755a4b1bb70aaddc1bb47593" translate="yes" xml:space="preserve">
          <source>Best Practices</source>
          <target state="translated">最佳做法</target>
        </trans-unit>
        <trans-unit id="f544950bc48d68bba95102c6651d7c3517997b0e" translate="yes" xml:space="preserve">
          <source>Beware, by definition cache storage are volatile, which means the data stored on them may be swapped out and get lost. Therefore, you must make sure the cache used by this component is NOT volatile. If you want to use database as storage medium, &lt;a href=&quot;yii-web-dbsession&quot;&gt;yii\web\DbSession&lt;/a&gt; is a better choice.</source>
          <target state="translated">请注意，根据定义，高速缓存存储是易失性的，这意味着存储在其上的数据可能会换出并丢失。因此，必须确保该组件使用的缓存不是易失的。如果要使用数据库作为存储介质，则&lt;a href=&quot;yii-web-dbsession&quot;&gt;yii \ web \ DbSession&lt;/a&gt;是更好的选择。</target>
        </trans-unit>
        <trans-unit id="a21d63f12ceba11e172dca53451f9c2b900fefb8" translate="yes" xml:space="preserve">
          <source>Binary and multibyte safe.</source>
          <target state="translated">二进制和多字节安全。</target>
        </trans-unit>
        <trans-unit id="ad850feacd36c5ed5be83930741c224540df1b64" translate="yes" xml:space="preserve">
          <source>Binary content.</source>
          <target state="translated">二进制内容。</target>
        </trans-unit>
        <trans-unit id="f1ed619833b5735f10850a0688d39c09d752fc1f" translate="yes" xml:space="preserve">
          <source>Bind parameters (optional);</source>
          <target state="translated">绑定参数(可选)。</target>
        </trans-unit>
        <trans-unit id="7a27fbd94f7d4e90709e4c6b3d04114c2a4beaa7" translate="yes" xml:space="preserve">
          <source>Binding Parameters</source>
          <target state="translated">绑定参数</target>
        </trans-unit>
        <trans-unit id="ac02601a98007cf5ea65eaf642e805836e90383b" translate="yes" xml:space="preserve">
          <source>Binds a column to a PHP variable.</source>
          <target state="translated">将一个列绑定到一个PHP变量。</target>
        </trans-unit>
        <trans-unit id="4865a93ce7f9da342ee5dcf97645ae145ebba00f" translate="yes" xml:space="preserve">
          <source>Binds a list of values to the corresponding parameters.</source>
          <target state="translated">将数值列表与相应的参数绑定。</target>
        </trans-unit>
        <trans-unit id="d4bf41b2d8dfb5e8238113577db7acbe1e567e4f" translate="yes" xml:space="preserve">
          <source>Binds a parameter to the SQL statement to be executed.</source>
          <target state="translated">将一个参数绑定到要执行的SQL语句上。</target>
        </trans-unit>
        <trans-unit id="efb5ece9f44635f99d5ea8df5a426612011b8124" translate="yes" xml:space="preserve">
          <source>Binds a value to a parameter.</source>
          <target state="translated">将一个值绑定到一个参数上。</target>
        </trans-unit>
        <trans-unit id="1fff03a3cb6cdbd50024cc9fbd1fcf34a1bb598f" translate="yes" xml:space="preserve">
          <source>Binds pending parameters that were registered via &lt;a href=&quot;yii-db-command#bindValue()-detail&quot;&gt;bindValue()&lt;/a&gt; and &lt;a href=&quot;yii-db-command#bindValues()-detail&quot;&gt;bindValues()&lt;/a&gt;.</source>
          <target state="translated">绑定通过&lt;a href=&quot;yii-db-command#bindValue()-detail&quot;&gt;bindValue（）&lt;/a&gt;和&lt;a href=&quot;yii-db-command#bindValues()-detail&quot;&gt;bindValues（）&lt;/a&gt;注册的挂起参数。</target>
        </trans-unit>
        <trans-unit id="41af47b4c6e747587083c3334ea860296d01dbd1" translate="yes" xml:space="preserve">
          <source>Binds the parameters to the action.</source>
          <target state="translated">将参数与动作绑定。</target>
        </trans-unit>
        <trans-unit id="91f335ab9f8e6de6bcafdb48e3cb87af640a8c7c" translate="yes" xml:space="preserve">
          <source>Bitmask field which may be set to any combination of connection flags passed to &lt;a href=&quot;http://php.net/manual/en/function.stream-socket-client.php&quot;&gt;stream_socket_client()&lt;/a&gt;. Currently the select of connection flags is limited to &lt;code&gt;STREAM_CLIENT_CONNECT&lt;/code&gt; (default), &lt;code&gt;STREAM_CLIENT_ASYNC_CONNECT&lt;/code&gt; and &lt;code&gt;STREAM_CLIENT_PERSISTENT&lt;/code&gt;.</source>
          <target state="translated">位掩码字段，可以将其设置为传递给&lt;a href=&quot;http://php.net/manual/en/function.stream-socket-client.php&quot;&gt;stream_socket_client（）&lt;/a&gt;的连接标志的任何组合。当前，连接标志的选择仅限于 &lt;code&gt;STREAM_CLIENT_CONNECT&lt;/code&gt; （默认）， &lt;code&gt;STREAM_CLIENT_ASYNC_CONNECT&lt;/code&gt; 和 &lt;code&gt;STREAM_CLIENT_PERSISTENT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b206fdfe175f6f5bfedcbd232154bd6b11cca11b" translate="yes" xml:space="preserve">
          <source>Bitmask field which may be set to any combination of connection flags passed to [stream_socket_client()](&lt;a href=&quot;http://php&quot;&gt;http://php&lt;/a&gt;.</source>
          <target state="translated">位掩码字段，可以将其设置为传递给[stream_socket_client（）]（&lt;a href=&quot;http://php&quot;&gt;http：// php&lt;/a&gt;的连接标志的任意组合）。</target>
        </trans-unit>
        <trans-unit id="dffa2d89b008dc670977bc233f7cd90e4a297ee9" translate="yes" xml:space="preserve">
          <source>BlameableBehavior automatically fills the specified attributes with the current user ID.</source>
          <target state="translated">BlameableBehavior自动将指定的属性填入当前用户ID。</target>
        </trans-unit>
        <trans-unit id="f86677befc10d58edc52ad9312c5f16bc7bfa7f2" translate="yes" xml:space="preserve">
          <source>Block records all output between &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;begin()&lt;/a&gt; and &lt;a href=&quot;yii-base-widget#end()-detail&quot;&gt;end()&lt;/a&gt; calls and stores it in &lt;a href=&quot;yii-base-view#%24blocks-detail&quot;&gt;yii\base\View::$blocks&lt;/a&gt;.</source>
          <target state="translated">Block记录了&lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;begin（）&lt;/a&gt;和&lt;a href=&quot;yii-base-widget#end()-detail&quot;&gt;end（）&lt;/a&gt;调用之间的所有输出，并将其存储在&lt;a href=&quot;yii-base-view#%24blocks-detail&quot;&gt;yii \ base \ View :: $ blocks中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="694d5fca5c1d150e3a61f3c996383e2fdc739e2f" translate="yes" xml:space="preserve">
          <source>Blocks allow you to specify the view content in one place while displaying it in another. They are often used together with layouts. For example, you can define a block in a content view and display it in the layout.</source>
          <target state="translated">块允许您在一个地方指定视图内容,同时在另一个地方显示。它们经常与布局一起使用。例如,您可以在内容视图中定义一个块,并在布局中显示它。</target>
        </trans-unit>
        <trans-unit id="b49cadfe4b17828aba3d0192787afc14b78a802b" translate="yes" xml:space="preserve">
          <source>Body attribute input search value</source>
          <target state="translated">身体属性输入搜索值</target>
        </trans-unit>
        <trans-unit id="09e96683a15b32a505837bb917fc5e1f97d03ace" translate="yes" xml:space="preserve">
          <source>Body content type.</source>
          <target state="translated">体含量类型。</target>
        </trans-unit>
        <trans-unit id="03e977d8acabbdb06b18f4d1e95ed4ac31ca73a0" translate="yes" xml:space="preserve">
          <source>Body content.</source>
          <target state="translated">体内容。</target>
        </trans-unit>
        <trans-unit id="7f51aec98f73bc1ee74aeb24c131fc612486e33d" translate="yes" xml:space="preserve">
          <source>Body format name.</source>
          <target state="translated">体格式名称:</target>
        </trans-unit>
        <trans-unit id="de3f107867098bfda7451925f406bdd063821d52" translate="yes" xml:space="preserve">
          <source>BooleanValidator checks if the attribute value is a boolean value.</source>
          <target state="translated">BooleanValidator检查属性值是否为布尔值。</target>
        </trans-unit>
        <trans-unit id="90a4c7095f75a9c559ffb1a2a582e7049a30cf42" translate="yes" xml:space="preserve">
          <source>Bootstrap method to be called during application bootstrap stage.</source>
          <target state="translated">在应用程序启动阶段调用的Bootstrap方法。</target>
        </trans-unit>
        <trans-unit id="ab8c46c26c3ae0d95e4ce77c4686b07aa64db3b8" translate="yes" xml:space="preserve">
          <source>BootstrapInterface is the interface that should be implemented by classes who want to participate in the application bootstrap process.</source>
          <target state="translated">BootstrapInterface是应该由想要参与应用程序引导过程的类实现的接口。</target>
        </trans-unit>
        <trans-unit id="09273e0b3502cd35874b01a3ba91c106f87a667f" translate="yes" xml:space="preserve">
          <source>Bootstrapping</source>
          <target state="translated">Bootstrapping</target>
        </trans-unit>
        <trans-unit id="5a9f35b91dcc847ee2b585d7bd69449fa65cb6ce" translate="yes" xml:space="preserve">
          <source>Bootstrapping Classes</source>
          <target state="translated">Bootstrapping类</target>
        </trans-unit>
        <trans-unit id="d9a45d247f390215a2e6b0d6314cda4439b6a649" translate="yes" xml:space="preserve">
          <source>Bootstrapping Components</source>
          <target state="translated">Bootstrapping组件</target>
        </trans-unit>
        <trans-unit id="f4e5c9f09bf16e5de5c5471d7a9069129b04fbd4" translate="yes" xml:space="preserve">
          <source>Bootstrapping Modules</source>
          <target state="translated">引导模块</target>
        </trans-unit>
        <trans-unit id="0e10c2fe4fc46c399bf564fd12e68335dd4b3b75" translate="yes" xml:space="preserve">
          <source>Bootstrapping classes can be registered in two approaches.</source>
          <target state="translated">Bootstrapping类可以用两种方法注册。</target>
        </trans-unit>
        <trans-unit id="b3942c2c35395f9511cda1806355f699f8ba0783" translate="yes" xml:space="preserve">
          <source>Bootstrapping refers to the process of preparing the environment before an application starts to resolve and process an incoming request. Bootstrapping is done in two places: the &lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;entry script&lt;/a&gt; and the &lt;a href=&quot;guide-structure-applications&quot;&gt;application&lt;/a&gt;.</source>
          <target state="translated">引导程序是指在应用程序开始解析和处理传入请求之前准备环境的过程。自举在两个地方完成：&lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;输入脚本&lt;/a&gt;和&lt;a href=&quot;guide-structure-applications&quot;&gt;应用程序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ec40a0d10649cf4fb8c0b634569997112f07168" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;yii-rest-controller&quot;&gt;yii\rest\Controller&lt;/a&gt; and &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii\rest\ActiveController&lt;/a&gt; provide the following features, some of which will be described in detail in the next few sections:</source>
          <target state="translated">既&lt;a href=&quot;yii-rest-controller&quot;&gt;YII \其余\控制器&lt;/a&gt;和&lt;a href=&quot;yii-rest-activecontroller&quot;&gt;YII \休息\ ActiveController&lt;/a&gt;提供以下功能，其中的一些将在详细的接下来的几节来描述：</target>
        </trans-unit>
        <trans-unit id="27f8398d3c3cfc153e009c96a86a94e3e4f51e44" translate="yes" xml:space="preserve">
          <source>Both aliases and names are enclosed into {{ and }}.</source>
          <target state="translated">别名和名字都用{{和}}括起来。</target>
        </trans-unit>
        <trans-unit id="b12aa67b8a1ab778d46c051b1a1a5d28c2b10a78" translate="yes" xml:space="preserve">
          <source>Both approaches execute the same set of SQL statements. The latter approach is much cleaner and drier, though.</source>
          <target state="translated">两种方法都是执行同一组SQL语句。不过,后一种方法更干净、更干脆。</target>
        </trans-unit>
        <trans-unit id="90f3a85a35e690c63502d32f909eff810b610ddd" translate="yes" xml:space="preserve">
          <source>Both dependency injection and &lt;a href=&quot;guide-concept-service-locator&quot;&gt;service locator&lt;/a&gt; are popular design patterns that allow building software in a loosely-coupled and more testable fashion. We highly recommend you to read &lt;a href=&quot;http://martinfowler.com/articles/injection.html&quot;&gt;Martin's article&lt;/a&gt; to get a deeper understanding of dependency injection and service locator.</source>
          <target state="translated">依赖项注入和&lt;a href=&quot;guide-concept-service-locator&quot;&gt;服务定位器&lt;/a&gt;都是流行的设计模式，它们允许以松散耦合和更可测试的方式构建软件。我们强烈建议您阅读&lt;a href=&quot;http://martinfowler.com/articles/injection.html&quot;&gt;Martin的文章&lt;/a&gt;，以更深入地了解依赖项注入和服务定位器。</target>
        </trans-unit>
        <trans-unit id="3048d773204c3b34a4da00e504537c2c29f11499" translate="yes" xml:space="preserve">
          <source>Both methods can take one of the following parameter formats:</source>
          <target state="translated">这两种方法都可以采用以下参数格式之一。</target>
        </trans-unit>
        <trans-unit id="9a9929d9010d950ace3f3a944297d774d0de4d9b" translate="yes" xml:space="preserve">
          <source>Both project templates already have a console application with them. You can run it by calling the &lt;code&gt;yii&lt;/code&gt; script, which is located in the base directory of the repository. This will give you a list of available commands when you run it without any further parameters:</source>
          <target state="translated">这两个项目模板都已经具有一个控制台应用程序。您可以通过调用 &lt;code&gt;yii&lt;/code&gt; 脚本来运行它，该脚本位于存储库的基本目录中。这将在运行时为您提供可用命令的列表，而无需任何其他参数：</target>
        </trans-unit>
        <trans-unit id="86700be552f3a90418fea4fd7415a4a3fbe97437" translate="yes" xml:space="preserve">
          <source>Both roles and permissions can be organized in a hierarchy. In particular, a role may consist of other roles or permissions; and a permission may consist of other permissions. Yii implements a &lt;em&gt;partial order&lt;/em&gt; hierarchy which includes the more special &lt;em&gt;tree&lt;/em&gt; hierarchy. While a role can contain a permission, it is not &lt;code&gt;true&lt;/code&gt; vice versa.</source>
          <target state="translated">角色和权限都可以按层次结构进行组织。特别是，一个角色可能包含其他角色或权限。权限可能包含其他权限。Yii实现了&lt;em&gt;偏序&lt;/em&gt;层次结构，其中包括更特殊的&lt;em&gt;树形&lt;/em&gt;层次结构。虽然角色可以包含权限，但实际上并非 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8da4f01cbfd34accbf00fa7e38435ec9d0a6a6d1" translate="yes" xml:space="preserve">
          <source>Bower and NPM Assets installation</source>
          <target state="translated">Bower和NPM资产安装</target>
        </trans-unit>
        <trans-unit id="37cd85bf005f008efdb5c6bad31a0cc03e849d6c" translate="yes" xml:space="preserve">
          <source>Breadcrumbs displays a list of links indicating the position of the current page in the whole site hierarchy.</source>
          <target state="translated">Breadcrumbs显示一个链接列表,显示当前页面在整个网站层次结构中的位置。</target>
        </trans-unit>
        <trans-unit id="a5a4d19656d1bb32202b7a98b16189bae8668e9d" translate="yes" xml:space="preserve">
          <source>Browser Redirection</source>
          <target state="translated">浏览器重定向</target>
        </trans-unit>
        <trans-unit id="59344bb0462db11f0e01978e62ab8c3331584beb" translate="yes" xml:space="preserve">
          <source>Browser redirection relies on sending a &lt;code&gt;Location&lt;/code&gt; HTTP header. Because this feature is commonly used, Yii provides some special support for it.</source>
          <target state="translated">浏览器重定向依赖于发送 &lt;code&gt;Location&lt;/code&gt; HTTP标头。因为此功能是常用的，所以Yii为此提供了一些特殊的支持。</target>
        </trans-unit>
        <trans-unit id="f85521f25424e505d7a5fcdb6828b829c7b19d00" translate="yes" xml:space="preserve">
          <source>Build a &lt;a href=&quot;yii-db-query&quot;&gt;yii\db\Query&lt;/a&gt; object to represent different parts (e.g. &lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;FROM&lt;/code&gt;) of a SELECT SQL statement.</source>
          <target state="translated">构建一个&lt;a href=&quot;yii-db-query&quot;&gt;yii \ db \ Query&lt;/a&gt;对象，以表示SELECT SQL语句的不同部分（例如 &lt;code&gt;SELECT&lt;/code&gt; ， &lt;code&gt;FROM&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="004a51b7e43acf2aa902eeb5fd7555aaad94e99a" translate="yes" xml:space="preserve">
          <source>Build the query object by calling &lt;a href=&quot;guide-db-query-builder#building-queries&quot;&gt;query building methods&lt;/a&gt;;</source>
          <target state="translated">通过调用&lt;a href=&quot;guide-db-query-builder#building-queries&quot;&gt;查询构建方法&lt;/a&gt;构建查询对象;</target>
        </trans-unit>
        <trans-unit id="16d1dd5e9728b6ef7c08710218e812e5b5aff4a8" translate="yes" xml:space="preserve">
          <source>Building Authorization Data</source>
          <target state="translated">建筑物授权数据</target>
        </trans-unit>
        <trans-unit id="0e3d562cd9aeec831a28dff385a033279a950263" translate="yes" xml:space="preserve">
          <source>Building Maps</source>
          <target state="translated">建筑地图</target>
        </trans-unit>
        <trans-unit id="0f415e726d44d1d6437d8ac8ff480b5af0422bf8" translate="yes" xml:space="preserve">
          <source>Building Queries</source>
          <target state="translated">建立查询</target>
        </trans-unit>
        <trans-unit id="5283dbc0044023b1331d2b84001beb6bcc44c443" translate="yes" xml:space="preserve">
          <source>Building authorization data is all about the following tasks:</source>
          <target state="translated">建立授权数据都是为了完成以下任务。</target>
        </trans-unit>
        <trans-unit id="23842d3e121561940aa32c79b7110b2d3f90c8f9" translate="yes" xml:space="preserve">
          <source>Builds SHOW META query.</source>
          <target state="translated">建立SHOW META查询。</target>
        </trans-unit>
        <trans-unit id="0b2f3ff1be068de7b2afc8a7a0bc50f0d4f59243" translate="yes" xml:space="preserve">
          <source>Builds SQL for IN condition</source>
          <target state="translated">为IN条件建立SQL</target>
        </trans-unit>
        <trans-unit id="c1784fd34bdaaad30dd264f7b6e88515d418ecd2" translate="yes" xml:space="preserve">
          <source>Builds URL rule objects from the given rule declarations.</source>
          <target state="translated">从给定的规则声明中构建URL规则对象。</target>
        </trans-unit>
        <trans-unit id="444fad0ed27a19bc8ee4900af4ed0df75124b9ed" translate="yes" xml:space="preserve">
          <source>Builds a Lua script for finding a column</source>
          <target state="translated">构建一个用于查找列的 Lua 脚本。</target>
        </trans-unit>
        <trans-unit id="d5d1a7b8779b5d750e737df10868bf10036be19b" translate="yes" xml:space="preserve">
          <source>Builds a Lua script for finding a list of records</source>
          <target state="translated">构建一个用于查找记录列表的Lua脚本。</target>
        </trans-unit>
        <trans-unit id="7cffbe31e84684c6050cbbe4e139c32c15703ea1" translate="yes" xml:space="preserve">
          <source>Builds a Lua script for finding one record</source>
          <target state="translated">构建一个寻找记录的Lua脚本。</target>
        </trans-unit>
        <trans-unit id="6abf36c8f89234a7560db280dbdb27acbf6887df" translate="yes" xml:space="preserve">
          <source>Builds a Lua script for finding the average of a column</source>
          <target state="translated">构建一个Lua脚本,用于查找一列的平均值。</target>
        </trans-unit>
        <trans-unit id="d49fe8b95c944c0fbd44c906fa2b2a1a707e09e2" translate="yes" xml:space="preserve">
          <source>Builds a Lua script for finding the max value of a column</source>
          <target state="translated">构建一个Lua脚本,用于查找列的最大值。</target>
        </trans-unit>
        <trans-unit id="0e4a50bc8a2d038305ecb96c1a1844300ee46f11" translate="yes" xml:space="preserve">
          <source>Builds a Lua script for finding the min value of a column</source>
          <target state="translated">构建一个Lua脚本,用于查找列的最小值。</target>
        </trans-unit>
        <trans-unit id="1bcf199ac75640c7e9df383b6e381084b42d542f" translate="yes" xml:space="preserve">
          <source>Builds a Lua script for finding the sum of a column</source>
          <target state="translated">构建一个Lua脚本,用于查找一列的总和。</target>
        </trans-unit>
        <trans-unit id="0ea23d631e6751aa4231479e024d18f0bb80ba1a" translate="yes" xml:space="preserve">
          <source>Builds a Lua script for getting count of records</source>
          <target state="translated">构建一个用于获取记录计数的Lua脚本。</target>
        </trans-unit>
        <trans-unit id="a30ab4620a88a506404ea0f018493e959f462569" translate="yes" xml:space="preserve">
          <source>Builds a SQL command for adding comment to column</source>
          <target state="translated">构建一个SQL命令,用于向列添加注释。</target>
        </trans-unit>
        <trans-unit id="528b18cc26b7c3ce50f87554242bcae52aefbb90" translate="yes" xml:space="preserve">
          <source>Builds a SQL command for adding comment to table</source>
          <target state="translated">构建一个SQL命令,用于在表中添加注释。</target>
        </trans-unit>
        <trans-unit id="10ae19b012d51e3b462471856b4aa9a586994596" translate="yes" xml:space="preserve">
          <source>Builds a SQL command for dropping comment from column</source>
          <target state="translated">构建一个SQL命令,用于从列中删除注释。</target>
        </trans-unit>
        <trans-unit id="0650951a756e6a1af5a5d615ee911e68c02cf3ce" translate="yes" xml:space="preserve">
          <source>Builds a SQL command for dropping comment from table</source>
          <target state="translated">构建一个SQL命令,用于从表中删除注释。</target>
        </trans-unit>
        <trans-unit id="7131c4a0414bbcaf213b8fb87f1f27f183e494e1" translate="yes" xml:space="preserve">
          <source>Builds a SQL command for enabling or disabling integrity check.</source>
          <target state="translated">构建一个SQL命令,用于启用或禁用完整性检查。</target>
        </trans-unit>
        <trans-unit id="f03d2945a9902007d0e6fb641fa7944ccec95535" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for adding a foreign key constraint to an existing table.</source>
          <target state="translated">构建一个SQL语句,用于向现有的表添加外键约束。</target>
        </trans-unit>
        <trans-unit id="b09769c1cbd360115cc0716bd5f3bf0f55848fa9" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for adding a new DB column.</source>
          <target state="translated">构建一个SQL语句,用于添加一个新的DB列。</target>
        </trans-unit>
        <trans-unit id="983ef924fb2f7fe92458ac07a97a23fa694e08b7" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for adding a primary key constraint to an existing table.</source>
          <target state="translated">构建一个SQL语句,用于向现有的表添加主键约束。</target>
        </trans-unit>
        <trans-unit id="17d6aefba004be06fb089045253fd2439d020e5c" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for adding comment to table</source>
          <target state="translated">构建一个SQL语句,用于向表添加注释。</target>
        </trans-unit>
        <trans-unit id="39d82eec86bab888a7afb53f0f773249769a8ce1" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for call snippet from provided data and query, using specified index settings.</source>
          <target state="translated">使用指定的索引设置,从提供的数据和查询中构建一个SQL语句,用于调用片段。</target>
        </trans-unit>
        <trans-unit id="d7443a9eceb4cfca2667bc6bfe17764751776ea2" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for changing the definition of a column.</source>
          <target state="translated">构建一个SQL语句,用于改变列的定义。</target>
        </trans-unit>
        <trans-unit id="9b7ca0a0b1233a22fccaa8790282b20550a198f7" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for creating a new DB table.</source>
          <target state="translated">为创建一个新的DB表构建一个SQL语句。</target>
        </trans-unit>
        <trans-unit id="d75f03ea15aea23ee93c80076ac32ac078ef3afc" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for creating a new index.</source>
          <target state="translated">为创建一个新的索引构建一个SQL语句。</target>
        </trans-unit>
        <trans-unit id="fb77c5e16ca4f3d6d7c666db5a653f3600fb1d89" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for dropping a DB column.</source>
          <target state="translated">构建一个SQL语句,用于删除一个DB列。</target>
        </trans-unit>
        <trans-unit id="e0a085e2af51ab9fe48da07592433424496849a6" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for dropping a DB table.</source>
          <target state="translated">构建一个SQL语句,用于删除一个DB表。</target>
        </trans-unit>
        <trans-unit id="4488fc089af50d15ae4bcab919abc79f50e2dba7" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for dropping a foreign key constraint.</source>
          <target state="translated">构建一个SQL语句,用于放弃外键约束。</target>
        </trans-unit>
        <trans-unit id="83be2d95d39a948a4c78928a9e69e56eaea90775" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for dropping an index.</source>
          <target state="translated">构建一个SQL语句用于删除索引。</target>
        </trans-unit>
        <trans-unit id="6340774246dd59de5a610396c14fa5aac225358a" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for dropping comment from table</source>
          <target state="translated">构建一个SQL语句,用于从表中删除注释。</target>
        </trans-unit>
        <trans-unit id="172aac25b89317fead4d45d73083a695bf6aec87" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for enabling or disabling integrity check.</source>
          <target state="translated">构建一个SQL语句,用于启用或禁用完整性检查。</target>
        </trans-unit>
        <trans-unit id="746629844867d7f3e37d2ee705be902e47fc05b2" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for removing a primary key constraint to an existing table.</source>
          <target state="translated">建立一个SQL语句,用于删除现有表的主键约束。</target>
        </trans-unit>
        <trans-unit id="c9e0961f40da3fea181c6bfb9ea7da9a1477e0e6" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for renaming a DB table.</source>
          <target state="translated">构建一个SQL语句来重命名一个DB表。</target>
        </trans-unit>
        <trans-unit id="03bc61c6cdf194e7c0c52c579067ca07c46772b5" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for renaming a column.</source>
          <target state="translated">建立一个SQL语句来重命名一个列。</target>
        </trans-unit>
        <trans-unit id="0934cfb5bc3f2cf764b05c508fc392be6fab9483" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for returning tokenized and normalized forms of the keywords, and, optionally, keyword statistics.</source>
          <target state="translated">构建一个SQL语句,用于返回关键字的标记化和规范化形式,以及可选的关键字统计。</target>
        </trans-unit>
        <trans-unit id="c4a52f422393d96e28a08d928c8bd9d096256870" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for truncating a DB table.</source>
          <target state="translated">构建一个用于截断DB表的SQL语句。</target>
        </trans-unit>
        <trans-unit id="a457a680f41f1e4fa21bfc1f10194675a2199fd0" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for truncating an index.</source>
          <target state="translated">构建一个用于截断索引的SQL语句。</target>
        </trans-unit>
        <trans-unit id="9dbbe457eed184243c6ba0c3b108165dd18498cb" translate="yes" xml:space="preserve">
          <source>Builds a map (key-value pairs) from a multidimensional array or an array of objects.</source>
          <target state="translated">从一个多维数组或一个对象数组建立一个地图(键值对)。</target>
        </trans-unit>
        <trans-unit id="4575dcac616ef36a5c01bcd519d7c89ae51bc5c7" translate="yes" xml:space="preserve">
          <source>Builds a normalized cache key from a given key.</source>
          <target state="translated">从给定的密钥建立一个标准化的缓存密钥。</target>
        </trans-unit>
        <trans-unit id="539f66c0a41b165db21dbed226aef0b3501d4ab6" translate="yes" xml:space="preserve">
          <source>Builds a normalized key from a given primary key value.</source>
          <target state="translated">从一个给定的主键值建立一个归一化的键。</target>
        </trans-unit>
        <trans-unit id="6e0d4063d62548eb3c9b543bdec27989bd5dd384" translate="yes" xml:space="preserve">
          <source>Builds a snippet from provided data and query, using specified index settings.</source>
          <target state="translated">使用指定的索引设置,从提供的数据和查询中构建一个片段。</target>
        </trans-unit>
        <trans-unit id="d1ee763f07f7b0cebb1d3040d69205b9ac1e47b5" translate="yes" xml:space="preserve">
          <source>Builds a snippets from provided source data by the given index.</source>
          <target state="translated">根据给定的索引,从提供的源数据中构建一个片段。</target>
        </trans-unit>
        <trans-unit id="9b44e0ef1a65b7210ea93170af5c22be7c850180" translate="yes" xml:space="preserve">
          <source>Builds a snippets from provided source data.</source>
          <target state="translated">从提供的源数据中构建一个片段。</target>
        </trans-unit>
        <trans-unit id="3950eb505a3042a46470ac57b844a3c52de48e12" translate="yes" xml:space="preserve">
          <source>Builds and execute a SQL statement for adding comment to column</source>
          <target state="translated">构建并执行一条SQL语句,用于向列添加注释。</target>
        </trans-unit>
        <trans-unit id="ad78828b22a707db0ed642c52f7884c55e9f44e2" translate="yes" xml:space="preserve">
          <source>Builds and execute a SQL statement for dropping comment from column</source>
          <target state="translated">构建并执行一条SQL语句,用于从列中删除注释。</target>
        </trans-unit>
        <trans-unit id="4f7342ce4651047b147b13ea76ca2e3138218dd6" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for adding a new DB column.</source>
          <target state="translated">构建并执行一个SQL语句,用于添加一个新的DB列。</target>
        </trans-unit>
        <trans-unit id="ab9046a9514df1872a9ce4c64182ce2f602d8131" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for changing the definition of a column.</source>
          <target state="translated">构建并执行一条SQL语句,用于更改列的定义。</target>
        </trans-unit>
        <trans-unit id="6e028ee77e2f7a07928e87cf78eb1500a09f3b4c" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for creating a new DB table.</source>
          <target state="translated">构建并执行一条SQL语句,用于创建一个新的DB表。</target>
        </trans-unit>
        <trans-unit id="45f47b45d6d9946bcafac860819b20fe56368bbf" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for creating a new index.</source>
          <target state="translated">生成并执行一条SQL语句,用于创建新的索引。</target>
        </trans-unit>
        <trans-unit id="93d5afdae4dd5f39feba4018d378979d1752b71f" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for creating a primary key.</source>
          <target state="translated">构建并执行一个用于创建主键的SQL语句。</target>
        </trans-unit>
        <trans-unit id="aea782e817ef4e78c68a535891a6131159a90dfc" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for dropping a DB column.</source>
          <target state="translated">构建并执行一个SQL语句,用于删除一个DB列。</target>
        </trans-unit>
        <trans-unit id="2037e34d86681197a72343168e0fb881a59f0231" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for dropping a DB table.</source>
          <target state="translated">构建并执行一个SQL语句,用于删除一个DB表。</target>
        </trans-unit>
        <trans-unit id="7a13e6e23ae4c03d83befa5a8c909d11d9291a76" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for dropping a primary key.</source>
          <target state="translated">构建并执行一个SQL语句,用于丢弃主键。</target>
        </trans-unit>
        <trans-unit id="f3aba308cea6bdbdecede3c5e5e4b45e35470d59" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for dropping an index.</source>
          <target state="translated">构建并执行一个SQL语句,用于删除索引。</target>
        </trans-unit>
        <trans-unit id="0d34560bc26bd9d3a3563a2f92502b8a359d3f15" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for renaming a DB table.</source>
          <target state="translated">构建并执行一个SQL语句,用于重命名一个DB表。</target>
        </trans-unit>
        <trans-unit id="c53d8be8bf84fea1e788772a25f5b37197754eae" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for renaming a column.</source>
          <target state="translated">构建并执行一个SQL语句,用于重命名一个列。</target>
        </trans-unit>
        <trans-unit id="aefd8dd287dd068cd6be046c72319436ba4690b5" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for truncating a DB table.</source>
          <target state="translated">构建并执行一个SQL语句,用于截断一个DB表。</target>
        </trans-unit>
        <trans-unit id="947b05c0324c6d1b84e869955046b556e595506c" translate="yes" xml:space="preserve">
          <source>Builds array of parameters that will be passed to the view.</source>
          <target state="translated">建立将传递给视图的参数数组。</target>
        </trans-unit>
        <trans-unit id="828ca3d87a09a0077e236d0f9a8cc8b4b5ce2c4a" translate="yes" xml:space="preserve">
          <source>Builds authentication URL for the protocol version 1.</source>
          <target state="translated">为协议版本1构建认证URL。</target>
        </trans-unit>
        <trans-unit id="7e0755b94cedeedd78994e31046d5c6406eef20d" translate="yes" xml:space="preserve">
          <source>Builds authentication URL for the protocol version 2.</source>
          <target state="translated">为协议版本2构建认证URL。</target>
        </trans-unit>
        <trans-unit id="4cdd5bdfab727f7476e71e97f869d77323fdf26e" translate="yes" xml:space="preserve">
          <source>Builds output asset bundle.</source>
          <target state="translated">构建输出资产包。</target>
        </trans-unit>
        <trans-unit id="706eb5212f13d0de3ef9923eb4f5521bd73eff6f" translate="yes" xml:space="preserve">
          <source>Builds string that represents the exception.</source>
          <target state="translated">建立表示异常的字符串。</target>
        </trans-unit>
        <trans-unit id="23fbd2db95f087ff5355d222ffb7ea722c5ea957" translate="yes" xml:space="preserve">
          <source>Builds the MongoDB cursor for this query.</source>
          <target state="translated">为这个查询建立MongoDB游标。</target>
        </trans-unit>
        <trans-unit id="195731fde802a5f645a6b1ea97b9b7f316c244ad" translate="yes" xml:space="preserve">
          <source>Builds the ORDER BY and LIMIT/OFFSET clauses and appends them to the given SQL.</source>
          <target state="translated">建立ORDER BY和LIMIT/OFFSET子句,并将它们附加到给定的SQL中。</target>
        </trans-unit>
        <trans-unit id="79d870add997c6a60e8bb00d45cacd87b6e5b8cf" translate="yes" xml:space="preserve">
          <source>Builds the ORDER BY/LIMIT/OFFSET clauses for SQL SERVER 2005 to 2008.</source>
          <target state="translated">为SQL SERVER 2005至2008构建ORDER BY/LIMIT/OFFSET子句。</target>
        </trans-unit>
        <trans-unit id="9ce437295ab1b62395cc5a467730b911efe10197" translate="yes" xml:space="preserve">
          <source>Builds the ORDER BY/LIMIT/OFFSET clauses for SQL SERVER 2012 or newer.</source>
          <target state="translated">为SQL SERVER 2012或更新版本构建ORDER BY/LIMIT/OFFSET子句。</target>
        </trans-unit>
        <trans-unit id="a80f4d9e0cad52652b59388aa8f79a71e3c3716e" translate="yes" xml:space="preserve">
          <source>Builds the after constraint for the column. Defaults to unsupported.</source>
          <target state="translated">为列建立后约束。默认为不支持。</target>
        </trans-unit>
        <trans-unit id="20db492e3b444aba62887f3713532d2b378ea308" translate="yes" xml:space="preserve">
          <source>Builds the check constraint for the column.</source>
          <target state="translated">为该列建立检查约束。</target>
        </trans-unit>
        <trans-unit id="3d50c8c7adcc11b70b79bab5b985fb0ecffa5902" translate="yes" xml:space="preserve">
          <source>Builds the comment specification for the column.</source>
          <target state="translated">构建该列的注释规范。</target>
        </trans-unit>
        <trans-unit id="5a498a3cedbc58b7d1c664a328908ea1cec34416" translate="yes" xml:space="preserve">
          <source>Builds the custom string that's appended to column definition.</source>
          <target state="translated">建立附加到列定义中的自定义字符串。</target>
        </trans-unit>
        <trans-unit id="80efa028e38adcc60c013d60e7d023f107e1b280" translate="yes" xml:space="preserve">
          <source>Builds the default value specification for the column.</source>
          <target state="translated">构建列的默认值规范。</target>
        </trans-unit>
        <trans-unit id="5acb5a0e6c9cda98383fdccadd99f576dc433b6b" translate="yes" xml:space="preserve">
          <source>Builds the first constraint for the column. Defaults to unsupported.</source>
          <target state="translated">为列建立第一个约束。默认为不支持。</target>
        </trans-unit>
        <trans-unit id="d331ec694d40bf4ef31162a0570c3400174fc736" translate="yes" xml:space="preserve">
          <source>Builds the full string for the column's schema</source>
          <target state="translated">为该列的模式建立完整的字符串。</target>
        </trans-unit>
        <trans-unit id="d8bf4834bd70226d295982ccaaf2d8fc9413df76" translate="yes" xml:space="preserve">
          <source>Builds the length/precision part of the column.</source>
          <target state="translated">建立列的长度/精度部分。</target>
        </trans-unit>
        <trans-unit id="29327ba3d2be3391f099af2804c678528a4c9e31" translate="yes" xml:space="preserve">
          <source>Builds the not null constraint for the column.</source>
          <target state="translated">为该列建立非空约束。</target>
        </trans-unit>
        <trans-unit id="4ccb4164861ebace871a88ba90268dd5c4dd27e4" translate="yes" xml:space="preserve">
          <source>Builds the unique constraint for the column.</source>
          <target state="translated">为该列建立唯一的约束。</target>
        </trans-unit>
        <trans-unit id="6bbb0ef5e68734b1b85c49d7d084b49a6208e7d6" translate="yes" xml:space="preserve">
          <source>Builds the unsigned string for column. Defaults to unsupported.</source>
          <target state="translated">为列建立无符号字符串。默认为不支持。</target>
        </trans-unit>
        <trans-unit id="294524c4645f5ad6ce52a7e88e2b4bcd8afca0d4" translate="yes" xml:space="preserve">
          <source>Builds up the snippet value from the given query.</source>
          <target state="translated">从给定的查询中建立snippet值。</target>
        </trans-unit>
        <trans-unit id="17bec552f0faaa44386940a5017bfc006782b311" translate="yes" xml:space="preserve">
          <source>Built on top of &lt;a href=&quot;guide-db-dao&quot;&gt;Database Access Objects&lt;/a&gt;, query builder allows you to construct a SQL query in a programmatic and DBMS-agnostic way. Compared to writing raw SQL statements, using query builder will help you write more readable SQL-related code and generate more secure SQL statements.</source>
          <target state="translated">查询构建器建立在&lt;a href=&quot;guide-db-dao&quot;&gt;数据库访问对象&lt;/a&gt;之上，可让您以与程序无关且与DBMS无关的方式构造SQL查询。与编写原始SQL语句相比，使用查询生成器将帮助您编写更具可读性的SQL相关代码并生成更安全的SQL语句。</target>
        </trans-unit>
        <trans-unit id="47b875eb17e08c4cbca735b40165ee529cd2b4e9" translate="yes" xml:space="preserve">
          <source>Built on top of &lt;a href=&quot;http://www.php.net/manual/en/book.pdo.php&quot;&gt;PDO&lt;/a&gt;, Yii DAO (Database Access Objects) provides an object-oriented API for accessing relational databases. It is the foundation for other more advanced database access methods, including &lt;a href=&quot;guide-db-query-builder&quot;&gt;query builder&lt;/a&gt; and &lt;a href=&quot;guide-db-active-record&quot;&gt;active record&lt;/a&gt;.</source>
          <target state="translated">Yii DAO（数据库访问对象）建立在&lt;a href=&quot;http://www.php.net/manual/en/book.pdo.php&quot;&gt;PDO&lt;/a&gt;之上，提供了用于访问关系数据库的面向对象的API。它是其他更高级的数据库访问方法（包括&lt;a href=&quot;guide-db-query-builder&quot;&gt;查询构建器&lt;/a&gt;和&lt;a href=&quot;guide-db-active-record&quot;&gt;活动记录）的基础&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b1321e8d4207a8d9967ca4af0f5d5b9eb3391348" translate="yes" xml:space="preserve">
          <source>Built snippet in case &quot;source&quot; is a string, list of built snippets in case &quot;source&quot; is an array.</source>
          <target state="translated">在 &quot;source &quot;是字符串的情况下建立的snippet,在 &quot;source &quot;是数组的情况下建立的snippet列表。</target>
        </trans-unit>
        <trans-unit id="4534530cc2bdc008b56d129010f12aec21f10aeb" translate="yes" xml:space="preserve">
          <source>Built-in support for the &lt;code&gt;OPTIONS&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt; verbs;</source>
          <target state="translated">对 &lt;code&gt;OPTIONS&lt;/code&gt; 和 &lt;code&gt;HEAD&lt;/code&gt; 动词的内置支持；</target>
        </trans-unit>
        <trans-unit id="59fab26b3574da0dbcd066770f91271dcf21fe60" translate="yes" xml:space="preserve">
          <source>Bundle instance</source>
          <target state="translated">捆绑实例</target>
        </trans-unit>
        <trans-unit id="018d02b404fa3a849e18eae3a6290a796afcd7e6" translate="yes" xml:space="preserve">
          <source>Bundle name</source>
          <target state="translated">捆绑名称</target>
        </trans-unit>
        <trans-unit id="1bb61e57e67820563345b7f3acefd30aee828121" translate="yes" xml:space="preserve">
          <source>Bundle name.</source>
          <target state="translated">捆绑名称:</target>
        </trans-unit>
        <trans-unit id="cc3779cd95fbbb36e00eb9136c9898236320427b" translate="yes" xml:space="preserve">
          <source>Bundle object configuration</source>
          <target state="translated">捆绑对象配置</target>
        </trans-unit>
        <trans-unit id="33f1dc32991f7ab0b91616edf4055a34f977e9f1" translate="yes" xml:space="preserve">
          <source>But please notice, that you can not trigger all the classes, that implement the interface:</source>
          <target state="translated">但请注意,你不能触发所有实现该接口的类。</target>
        </trans-unit>
        <trans-unit id="dc4cbe2d34c43ea22df3018803782de2a2ad4ce1" translate="yes" xml:space="preserve">
          <source>But there are other installation options available:</source>
          <target state="translated">但是还有其他的安装方式可以选择。</target>
        </trans-unit>
        <trans-unit id="e7c32df6e895470ea9ad150cbf3b195b6612a98e" translate="yes" xml:space="preserve">
          <source>Button HTML.</source>
          <target state="translated">按钮HTML。</target>
        </trans-unit>
        <trans-unit id="87771f3b1a7d412908ffc0f2f99541aebe165f35" translate="yes" xml:space="preserve">
          <source>Button name as it's written in template</source>
          <target state="translated">模板中写的按钮名称</target>
        </trans-unit>
        <trans-unit id="d88590b695198f1ff84c8e2a1248b86674161574" translate="yes" xml:space="preserve">
          <source>Button rendering callbacks.</source>
          <target state="translated">按钮渲染回调。</target>
        </trans-unit>
        <trans-unit id="71f8acf9e53669181380f40b154ec5df6b82920d" translate="yes" xml:space="preserve">
          <source>Button rendering callbacks. The array keys are the button names (without curly brackets), and the values are the corresponding button rendering callbacks. The callbacks should use the following signature:</source>
          <target state="translated">按钮渲染回调。数组键是按钮名称(不含大括号),值是对应的按钮渲染回调。这些回调应该使用以下签名。</target>
        </trans-unit>
        <trans-unit id="fbe4f814e39856e61522d1daeb6602dc2aa7396a" translate="yes" xml:space="preserve">
          <source>Button tag HTML options, which will be merged with the default ones.</source>
          <target state="translated">按钮标签的HTML选项,将与默认选项合并。</target>
        </trans-unit>
        <trans-unit id="503d46db37b0db45db898aabed77244252918ca2" translate="yes" xml:space="preserve">
          <source>Buttons</source>
          <target state="translated">Buttons</target>
        </trans-unit>
        <trans-unit id="c507f69d041a8dceb01372756b5c3269c92e1ff7" translate="yes" xml:space="preserve">
          <source>By calling &lt;a href=&quot;yii-caching-tagdependency#invalidate()-detail&quot;&gt;invalidate()&lt;/a&gt;, you can invalidate all cached data items that are associated with the specified tag name(s).</source>
          <target state="translated">通过调用&lt;a href=&quot;yii-caching-tagdependency#invalidate()-detail&quot;&gt;invalidate（）&lt;/a&gt;，可以使所有与指定标记名关联的缓存数据项无效。</target>
        </trans-unit>
        <trans-unit id="bd47cd654ab41d0bdcf9502dfd33f1021b3df0c0" translate="yes" xml:space="preserve">
          <source>By calling &lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;yii\db\ActiveQuery::with()&lt;/a&gt;, you instruct Active Record to bring back the orders for the first 100 customers in one single SQL statement. As a result, you reduce the number of the executed SQL statements from 101 to 2!</source>
          <target state="translated">通过调用&lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;yii \ db \ ActiveQuery :: with（）&lt;/a&gt;，您可以指示Active Record在一个SQL语句中为前100个客户带回订单。结果，您将执行的SQL语句的数量从101个减少到2个！</target>
        </trans-unit>
        <trans-unit id="17fa895cc4169f421f2526ae0c0e66e94377ffbf" translate="yes" xml:space="preserve">
          <source>By calling &lt;a href=&quot;yii-db-query#createCommand()-detail&quot;&gt;createCommand()&lt;/a&gt;, we can get a &lt;a href=&quot;yii-db-command&quot;&gt;yii\db\Command&lt;/a&gt; instance which can be further used to perform/execute the DB query against a database.</source>
          <target state="translated">通过调用&lt;a href=&quot;yii-db-query#createCommand()-detail&quot;&gt;createCommand（）&lt;/a&gt;，我们可以获得&lt;a href=&quot;yii-db-command&quot;&gt;yii \ db \ Command&lt;/a&gt;实例，该实例可进一步用于对数据库执行/执行数据库查询。</target>
        </trans-unit>
        <trans-unit id="a962ab07cc57745a313734259d90bb2ac2558af1" translate="yes" xml:space="preserve">
          <source>By calling &lt;a href=&quot;yii-elasticsearch-query#createCommand()-detail&quot;&gt;createCommand()&lt;/a&gt;, we can get a &lt;a href=&quot;yii-elasticsearch-command&quot;&gt;yii\elasticsearch\Command&lt;/a&gt; instance which can be further used to perform/execute the DB query against a database.</source>
          <target state="translated">通过调用&lt;a href=&quot;yii-elasticsearch-query#createCommand()-detail&quot;&gt;createCommand（）&lt;/a&gt;，我们可以获得&lt;a href=&quot;yii-elasticsearch-command&quot;&gt;yii \ elasticsearch \ Command&lt;/a&gt;实例，该实例可进一步用于对数据库执行/执行数据库查询。</target>
        </trans-unit>
        <trans-unit id="74fe172df65ce970bc247d404f2cb087d1a86107" translate="yes" xml:space="preserve">
          <source>By calling &lt;a href=&quot;yii-sphinx-query#createCommand()-detail&quot;&gt;createCommand()&lt;/a&gt;, we can get a &lt;a href=&quot;yii-sphinx-command&quot;&gt;yii\sphinx\Command&lt;/a&gt; instance which can be further used to perform/execute the Sphinx query.</source>
          <target state="translated">通过调用&lt;a href=&quot;yii-sphinx-query#createCommand()-detail&quot;&gt;createCommand（）&lt;/a&gt;，我们可以获得&lt;a href=&quot;yii-sphinx-command&quot;&gt;yii \ sphinx \ Command&lt;/a&gt;实例，该实例可进一步用于执行/执行Sphinx查询。</target>
        </trans-unit>
        <trans-unit id="b72038daba5dfd02363306458fb657c8a0b764e8" translate="yes" xml:space="preserve">
          <source>By calling the &lt;a href=&quot;yii-db-connection#beginTransaction()-detail&quot;&gt;beginTransaction()&lt;/a&gt; method, a new transaction is started. The transaction is represented as a &lt;a href=&quot;yii-db-transaction&quot;&gt;yii\db\Transaction&lt;/a&gt; object stored in the &lt;code&gt;$transaction&lt;/code&gt; variable. Then, the queries being executed are enclosed in a &lt;code&gt;try...catch...&lt;/code&gt; block. If all queries are executed successfully, the &lt;a href=&quot;yii-db-transaction#commit()-detail&quot;&gt;commit()&lt;/a&gt; method is called to commit the transaction. Otherwise, if an exception will be triggered and caught, the &lt;a href=&quot;yii-db-transaction#rollBack()-detail&quot;&gt;rollBack()&lt;/a&gt; method is called to roll back the changes made by the queries prior to that failed query in the transaction. &lt;code&gt;throw $e&lt;/code&gt; will then re-throw the exception as if we had not caught it, so the normal error handling process will take care of it.</source>
          <target state="translated">通过调用&lt;a href=&quot;yii-db-connection#beginTransaction()-detail&quot;&gt;beginTransaction（）&lt;/a&gt;方法，开始新的事务。事务表示为存储在 &lt;code&gt;$transaction&lt;/code&gt; 变量中的&lt;a href=&quot;yii-db-transaction&quot;&gt;yii \ db \ Transaction&lt;/a&gt;对象。然后，将正在执行的查询包含在 &lt;code&gt;try...catch...&lt;/code&gt; 块中。如果所有查询都成功执行，则调用&lt;a href=&quot;yii-db-transaction#commit()-detail&quot;&gt;commit（）&lt;/a&gt;方法提交事务。否则，如果将触发并捕获异常，则将&lt;a href=&quot;yii-db-transaction#rollBack()-detail&quot;&gt;调用rollBack（）&lt;/a&gt;方法以回滚在事务中失败查询之前由查询进行的更改。然后， &lt;code&gt;throw $e&lt;/code&gt; 将重新抛出异常，就像我们没有捕获到异常一样，因此正常的错误处理过程将对其进行处理。</target>
        </trans-unit>
        <trans-unit id="40140e98ac0ee4e5a00b1389ba7295cb26c05abd" translate="yes" xml:space="preserve">
          <source>By configuring the &lt;code&gt;urlManager&lt;/code&gt; component in the application configuration, you can let your application recognize arbitrary URL formats without modifying your existing application code. For example, you can use the following code to create a URL for the &lt;code&gt;post/view&lt;/code&gt; action:</source>
          <target state="translated">通过在应用程序配置中配置 &lt;code&gt;urlManager&lt;/code&gt; 组件，可以让您的应用程序识别任意URL格式，而无需修改现有的应用程序代码。例如，您可以使用以下代码为 &lt;code&gt;post/view&lt;/code&gt; 操作创建URL ：</target>
        </trans-unit>
        <trans-unit id="1e23887665d7c5d0b838afbabd087aef1232df7e" translate="yes" xml:space="preserve">
          <source>By configuring the properties of CaptchaAction, you may customize the appearance of the generated CAPTCHA images, such as the font color, the background color, etc.</source>
          <target state="translated">通过配置CaptchaAction的属性,你可以自定义生成的验证码图片的外观,如字体颜色、背景颜色等。</target>
        </trans-unit>
        <trans-unit id="4872c8c2eedcb13cd3dc912e998c1ddc6f746fa5" translate="yes" xml:space="preserve">
          <source>By default an attribute label is generated using &lt;a href=&quot;yii-base-model#generateAttributeLabel()-detail&quot;&gt;generateAttributeLabel()&lt;/a&gt;. This method allows you to explicitly specify attribute labels.</source>
          <target state="translated">默认情况下，使用&lt;a href=&quot;yii-base-model#generateAttributeLabel()-detail&quot;&gt;generateAttributeLabel（）&lt;/a&gt;生成属性标签。此方法使您可以显式指定属性标签。</target>
        </trans-unit>
        <trans-unit id="f1cbaa9ce7829292d46b318c465a269c8d0a4b69" translate="yes" xml:space="preserve">
          <source>By default each Active Record class is associated with its database table. The &lt;a href=&quot;yii-db-activerecord#tableName()-detail&quot;&gt;tableName()&lt;/a&gt; method returns the table name by converting the class name via &lt;a href=&quot;yii-helpers-baseinflector#camel2id()-detail&quot;&gt;yii\helpers\Inflector::camel2id()&lt;/a&gt;. You may override this method if the table is not named after this convention.</source>
          <target state="translated">默认情况下，每个Active Record类都与其数据库表相关联。的&lt;a href=&quot;yii-db-activerecord#tableName()-detail&quot;&gt;表名（）&lt;/a&gt;方法通过经由转换类名返回表名&lt;a href=&quot;yii-helpers-baseinflector#camel2id()-detail&quot;&gt;YII \助手\变形器:: camel2id（） &lt;/a&gt;。如果未按照该约定命名表，则可以覆盖此方法。</target>
        </trans-unit>
        <trans-unit id="b7e052089d2bdcbc2e2e75b086b284e796695129" translate="yes" xml:space="preserve">
          <source>By default if you do not specify the &lt;code&gt;class&lt;/code&gt; option for a rule configuration, it will take the default class &lt;a href=&quot;yii-web-urlrule&quot;&gt;yii\web\UrlRule&lt;/a&gt;, which is the default value defined in &lt;a href=&quot;yii-web-urlmanager#%24ruleConfig-detail&quot;&gt;yii\web\UrlManager::$ruleConfig&lt;/a&gt;.</source>
          <target state="translated">默认情况下，如果您没有为规则配置指定 &lt;code&gt;class&lt;/code&gt; 选项，它将采用默认类&lt;a href=&quot;yii-web-urlrule&quot;&gt;yii \ web \ UrlRule&lt;/a&gt;，这是&lt;a href=&quot;yii-web-urlmanager#%24ruleConfig-detail&quot;&gt;yii \ web \ UrlManager :: $ ruleConfig中&lt;/a&gt;定义的默认值。</target>
        </trans-unit>
        <trans-unit id="44ffd12e5dafd71081bc2e0b7294d949c2a54e42" translate="yes" xml:space="preserve">
          <source>By default it assumes there is a redis server running on localhost at port 6379 and uses the database number 0.</source>
          <target state="translated">默认情况下,它假设有一个redis服务器运行在localhost的6379端口,并使用0号数据库。</target>
        </trans-unit>
        <trans-unit id="c4df5cd1c964aac35be3f4975648e24bcb0eedcf" translate="yes" xml:space="preserve">
          <source>By default server webroot is meant to be pointed to &lt;code&gt;web&lt;/code&gt; directory where &lt;code&gt;index.php&lt;/code&gt; is. In case of shared hosting environments it could be impossible to achieve so we'll end up with all the code, configs and logs in server webroot.</source>
          <target state="translated">默认情况下，服务器webroot旨在指向 &lt;code&gt;index.php&lt;/code&gt; 所在的 &lt;code&gt;web&lt;/code&gt; 目录。如果是共享主机环境，则可能无法实现，因此我们将获得服务器Webroot中的所有代码，配置和日志。</target>
        </trans-unit>
        <trans-unit id="e9b18e37b487b15c66c128c43b1e6d44e83351af" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;op_type&lt;/code&gt; is set to &lt;code&gt;create&lt;/code&gt;.</source>
          <target state="translated">默认情况下， &lt;code&gt;op_type&lt;/code&gt; 设置为 &lt;code&gt;create&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="39fe7162b7cfdc0e7060bdd92c344f17476dbaff" translate="yes" xml:space="preserve">
          <source>By default the URL is determined based on the entry script URL. This setter is provided in case you want to change this behavior.</source>
          <target state="translated">默认情况下,URL是根据入口脚本URL来决定的。如果你想改变这种行为,可以使用这个设置器。</target>
        </trans-unit>
        <trans-unit id="28f9061627f59e6dd0922692e196d89b0ac5a594" translate="yes" xml:space="preserve">
          <source>By default the number is spelled out as cardinal. It could be changed:</source>
          <target state="translated">默认情况下,数字的拼写为基数。它可以被改变。</target>
        </trans-unit>
        <trans-unit id="be65f5517a2cf39fa9f57b0255617301f8479338" translate="yes" xml:space="preserve">
          <source>By default this is the &lt;code&gt;authManager&lt;/code&gt; application component. You may override this method to return a different auth manager instance if needed.</source>
          <target state="translated">默认情况下，这是 &lt;code&gt;authManager&lt;/code&gt; 应用程序组件。如果需要，您可以重写此方法以返回其他身份验证管理器实例。</target>
        </trans-unit>
        <trans-unit id="40cbaced001ea1f5c2c6bc236d8ed5ad428a46cc" translate="yes" xml:space="preserve">
          <source>By default this method returns the class name as the collection name by calling &lt;a href=&quot;yii-helpers-baseinflector#camel2id()-detail&quot;&gt;yii\helpers\Inflector::camel2id()&lt;/a&gt;. For example, 'Customer' becomes 'customer', and 'OrderItem' becomes 'order_item'. You may override this method if the collection is not named after this convention.</source>
          <target state="translated">默认情况下，此方法通过调用&lt;a href=&quot;yii-helpers-baseinflector#camel2id()-detail&quot;&gt;yii \ helpers \ Inflector :: camel2id（）&lt;/a&gt;返回类名称作为集合名称。例如，&amp;ldquo;客户&amp;rdquo;变为&amp;ldquo;客户&amp;rdquo;，&amp;ldquo;订单项&amp;rdquo;变为&amp;ldquo; order_item&amp;rdquo;。如果未使用此约定命名集合，则可以覆盖此方法。</target>
        </trans-unit>
        <trans-unit id="ebae9f8b3f78b87c02ea8377464102eda61766eb" translate="yes" xml:space="preserve">
          <source>By default this method returns the class name as the index name by calling &lt;a href=&quot;yii-helpers-baseinflector#camel2id()-detail&quot;&gt;yii\helpers\Inflector::camel2id()&lt;/a&gt;. For example, 'Article' becomes 'article', and 'StockItem' becomes 'stock_item'. You may override this method if the index is not named after this convention.</source>
          <target state="translated">默认情况下，此方法通过调用&lt;a href=&quot;yii-helpers-baseinflector#camel2id()-detail&quot;&gt;yii \ helpers \ Inflector :: camel2id（）&lt;/a&gt;将类名称作为索引名称返回。例如，&amp;ldquo; Article&amp;rdquo;变为&amp;ldquo; article&amp;rdquo;，而&amp;ldquo; StockItem&amp;rdquo;变为&amp;ldquo; stock_item&amp;rdquo;。如果未按照该约定命名索引，则可以覆盖此方法。</target>
        </trans-unit>
        <trans-unit id="bcbefa0f980560aa9a468e9ab03947163a1423ae" translate="yes" xml:space="preserve">
          <source>By default this method returns the class name as the table name by calling &lt;a href=&quot;yii-helpers-baseinflector#camel2id()-detail&quot;&gt;yii\helpers\Inflector::camel2id()&lt;/a&gt; with prefix &lt;a href=&quot;yii-db-connection#%24tablePrefix-detail&quot;&gt;yii\db\Connection::$tablePrefix&lt;/a&gt;. For example if &lt;a href=&quot;yii-db-connection#%24tablePrefix-detail&quot;&gt;yii\db\Connection::$tablePrefix&lt;/a&gt; is &lt;code&gt;tbl_&lt;/code&gt;, &lt;code&gt;Customer&lt;/code&gt; becomes &lt;code&gt;tbl_customer&lt;/code&gt;, and &lt;code&gt;OrderItem&lt;/code&gt; becomes &lt;code&gt;tbl_order_item&lt;/code&gt;. You may override this method if the table is not named after this convention.</source>
          <target state="translated">默认情况下，此方法通过调用带有前缀&lt;a href=&quot;yii-db-connection#%24tablePrefix-detail&quot;&gt;yii \ db \ Connection :: $ tablePrefix的yii &lt;/a&gt;&lt;a href=&quot;yii-helpers-baseinflector#camel2id()-detail&quot;&gt;\ helpers \ Inflector :: camel2id（）&lt;/a&gt;来将类名作为表名返回。例如，如果&lt;a href=&quot;yii-db-connection#%24tablePrefix-detail&quot;&gt;yii \ db \ Connection :: $ tablePrefix&lt;/a&gt;为 &lt;code&gt;tbl_&lt;/code&gt; ，则 &lt;code&gt;Customer&lt;/code&gt; 变为 &lt;code&gt;tbl_customer&lt;/code&gt; ，而 &lt;code&gt;OrderItem&lt;/code&gt; 变为 &lt;code&gt;tbl_order_item&lt;/code&gt; 。如果未按照该约定命名表，则可以覆盖此方法。</target>
        </trans-unit>
        <trans-unit id="8f538d5a70fa5024694ac47c00484f9096cd4a67" translate="yes" xml:space="preserve">
          <source>By default this method returns the class name as the table name by calling &lt;a href=&quot;yii-helpers-baseinflector#camel2id()-detail&quot;&gt;yii\helpers\Inflector::camel2id()&lt;/a&gt;. For example, 'Customer' becomes 'customer', and 'OrderItem' becomes 'order_item'. You may override this method if you want different key naming.</source>
          <target state="translated">默认情况下，此方法通过调用&lt;a href=&quot;yii-helpers-baseinflector#camel2id()-detail&quot;&gt;yii \ helpers \ Inflector :: camel2id（）&lt;/a&gt;将类名作为表名返回。例如，&amp;ldquo;客户&amp;rdquo;变为&amp;ldquo;客户&amp;rdquo;，&amp;ldquo;订单项&amp;rdquo;变为&amp;ldquo; order_item&amp;rdquo;。如果您想要不同的键命名，则可以覆盖此方法。</target>
        </trans-unit>
        <trans-unit id="a5b4d72ce131e6da4664762c994d7f0df987fad2" translate="yes" xml:space="preserve">
          <source>By default this method sends message to 'stdout'.</source>
          <target state="translated">默认情况下,该方法将消息发送到'stdout'。</target>
        </trans-unit>
        <trans-unit id="b201878e6a6f51501d053b0c7cb3d3d3399b592c" translate="yes" xml:space="preserve">
          <source>By default this value is based on the user request information. This method will return the value of &lt;code&gt;$_SERVER['HTTP_HOST']&lt;/code&gt; if it is available or &lt;code&gt;$_SERVER['SERVER_NAME']&lt;/code&gt; if not. You may want to check out the &lt;a href=&quot;http://php.net/manual/en/reserved.variables.server.php&quot;&gt;PHP documentation&lt;/a&gt; for more information on these variables.</source>
          <target state="translated">默认情况下，此值基于用户请求信息。如果可用，此方法将返回 &lt;code&gt;$_SERVER['HTTP_HOST']&lt;/code&gt; 的值，否则返回 &lt;code&gt;$_SERVER['SERVER_NAME']&lt;/code&gt; 。您可能需要查看&lt;a href=&quot;http://php.net/manual/en/reserved.variables.server.php&quot;&gt;PHP文档，&lt;/a&gt;以获得有关这些变量的更多信息。</target>
        </trans-unit>
        <trans-unit id="438c95517e0a4ba5c1225ce5d9c53be7712c3b3c" translate="yes" xml:space="preserve">
          <source>By default value will be HTML-encoded using &lt;a href=&quot;yii-helpers-basehtml#encode()-detail&quot;&gt;encode()&lt;/a&gt;, you may control this behavior via 'encode' option.</source>
          <target state="translated">默认情况下，该值将使用&lt;a href=&quot;yii-helpers-basehtml#encode()-detail&quot;&gt;encode（）&lt;/a&gt;进行HTML编码，您可以通过&amp;ldquo; encode&amp;rdquo;选项控制此行为。</target>
        </trans-unit>
        <trans-unit id="9b13bcaad0ecda22ddd9ca3ec3f732ede808a763" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;yii-base-arrayabletrait#extraFields()-detail&quot;&gt;yii\base\Model::extraFields()&lt;/a&gt; returns an empty array, while &lt;a href=&quot;yii-base-arrayabletrait#extraFields()-detail&quot;&gt;yii\db\ActiveRecord::extraFields()&lt;/a&gt; returns the names of the relations that have been populated from DB.</source>
          <target state="translated">默认情况下，&lt;a href=&quot;yii-base-arrayabletrait#extraFields()-detail&quot;&gt;yii \ base \ Model :: extraFields（）&lt;/a&gt;返回一个空数组，而&lt;a href=&quot;yii-base-arrayabletrait#extraFields()-detail&quot;&gt;yii \ db \ ActiveRecord :: extraFields（）&lt;/a&gt;返回已从数据库填充的关系的名称。</target>
        </trans-unit>
        <trans-unit id="20ebe566233d452ab2b9ccc517e5cb4afd9565a5" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;yii-base-model#fields()-detail&quot;&gt;yii\base\Model::fields()&lt;/a&gt; returns all model attributes as fields, while &lt;a href=&quot;yii-base-arrayabletrait#fields()-detail&quot;&gt;yii\db\ActiveRecord::fields()&lt;/a&gt; only returns the attributes which have been populated from DB.</source>
          <target state="translated">默认情况下，&lt;a href=&quot;yii-base-model#fields()-detail&quot;&gt;yii \ base \ Model :: fields（）&lt;/a&gt;返回所有模型属性作为字段，而&lt;a href=&quot;yii-base-arrayabletrait#fields()-detail&quot;&gt;yii \ db \ ActiveRecord :: fields（）&lt;/a&gt;仅返回已从数据库填充的属性。</target>
        </trans-unit>
        <trans-unit id="1da773fad3f8effe2cf6c70db1a8f6bb725729b7" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;yii-baseyii#%24container-detail&quot;&gt;Yii::$container&lt;/a&gt; refers to a Container instance which is used by &lt;a href=&quot;yii-baseyii#createObject()-detail&quot;&gt;Yii::createObject()&lt;/a&gt; to create new object instances. You may use this method to replace the &lt;code&gt;new&lt;/code&gt; operator when creating a new object, which gives you the benefit of automatic dependency resolution and default property configuration.</source>
          <target state="translated">默认情况下，&lt;a href=&quot;yii-baseyii#%24container-detail&quot;&gt;Yii :: $ container&lt;/a&gt;引用一个Container实例，&lt;a href=&quot;yii-baseyii#createObject()-detail&quot;&gt;Yii :: createObject（）使用它&lt;/a&gt;来创建新的对象实例。创建新对象时，可以使用此方法替换 &lt;code&gt;new&lt;/code&gt; 运算符，这将为您带来自动依赖项解析和默认属性配置的好处。</target>
        </trans-unit>
        <trans-unit id="87410fcbdbe9fd1336a1b5d4694f332e37127985" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;yii-codeception-dbtestcase&quot;&gt;yii\codeception\DbTestCase&lt;/a&gt; already declares &lt;code&gt;InitDbFixture&lt;/code&gt; in its &lt;code&gt;globalFixtures()&lt;/code&gt; method. This means you only need to work with &lt;code&gt;@app/tests/fixtures/initdb.php&lt;/code&gt; if you want to do some initialization work before each test. You may otherwise simply focus on developing each individual test case and the corresponding fixtures.</source>
          <target state="translated">默认情况下，&lt;a href=&quot;yii-codeception-dbtestcase&quot;&gt;警予\ codeception \ DbTestCase&lt;/a&gt;已经声明了 &lt;code&gt;InitDbFixture&lt;/code&gt; 在其 &lt;code&gt;globalFixtures()&lt;/code&gt; 方法。这意味着，如果您想在每次测试之前进行一些初始化工作，则仅需要使用 &lt;code&gt;@app/tests/fixtures/initdb.php&lt;/code&gt; 。否则，您可能只是专注于开发每个单独的测试用例和相应的固定装置。</target>
        </trans-unit>
        <trans-unit id="a2ac11b3a07c31bc117e68d5f641434793fe8a5c" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;yii-data-activedataprovider&quot;&gt;yii\data\ActiveDataProvider&lt;/a&gt; uses the &lt;code&gt;db&lt;/code&gt; application component as the database connection. You may use a different database connection by configuring the &lt;a href=&quot;yii-data-activedataprovider#%24db-detail&quot;&gt;yii\data\ActiveDataProvider::$db&lt;/a&gt; property.</source>
          <target state="translated">缺省情况下，&lt;a href=&quot;yii-data-activedataprovider&quot;&gt;yii \ data \ ActiveDataProvider&lt;/a&gt;使用 &lt;code&gt;db&lt;/code&gt; 应用程序组件作为数据库连接。您可以通过配置&lt;a href=&quot;yii-data-activedataprovider#%24db-detail&quot;&gt;yii \ data \ ActiveDataProvider :: $ db&lt;/a&gt;属性来使用其他数据库连接。</target>
        </trans-unit>
        <trans-unit id="ab7c6787defba25f0210100ddceaae1ae6faf208" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;yii-db-activequery#joinWith()-detail&quot;&gt;joinWith()&lt;/a&gt; will use &lt;code&gt;LEFT JOIN&lt;/code&gt; to join the primary table with the related table. You can specify a different join type (e.g. &lt;code&gt;RIGHT JOIN&lt;/code&gt;) via its third parameter &lt;code&gt;$joinType&lt;/code&gt;. If the join type you want is &lt;code&gt;INNER JOIN&lt;/code&gt;, you can simply call &lt;a href=&quot;yii-db-activequery#innerJoinWith()-detail&quot;&gt;innerJoinWith()&lt;/a&gt;, instead.</source>
          <target state="translated">默认情况下，&lt;a href=&quot;yii-db-activequery#joinWith()-detail&quot;&gt;joinWith（）&lt;/a&gt;将使用 &lt;code&gt;LEFT JOIN&lt;/code&gt; 将主表与相关表联接。您可以通过其第三个参数 &lt;code&gt;$joinType&lt;/code&gt; 指定其他 &lt;code&gt;RIGHT JOIN&lt;/code&gt; 类型（例如RIGHT JOIN）。如果您想要的 &lt;code&gt;INNER JOIN&lt;/code&gt; 类型是INNER JOIN，则可以简单地调用&lt;a href=&quot;yii-db-activequery#innerJoinWith()-detail&quot;&gt;innerJoinWith（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b12fab31b0f12f89093031d336c65d6e6b536328" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;yii-mail-basemessage#send()-detail&quot;&gt;send()&lt;/a&gt; will use the &quot;mail&quot; application component to send the current message. The &quot;mail&quot; application component should be a mailer instance implementing &lt;a href=&quot;yii-mail-mailerinterface&quot;&gt;yii\mail\MailerInterface&lt;/a&gt;.</source>
          <target state="translated">默认情况下，&lt;a href=&quot;yii-mail-basemessage#send()-detail&quot;&gt;send（）&lt;/a&gt;将使用&amp;ldquo;邮件&amp;rdquo;应用程序组件发送当前消息。&amp;ldquo;邮件&amp;rdquo;应用程序组件应该是实现&lt;a href=&quot;yii-mail-mailerinterface&quot;&gt;yii \ mail \ MailerInterface&lt;/a&gt;的邮件程序实例。</target>
        </trans-unit>
        <trans-unit id="a418100959dd8f13bd925ca42acb9a372842da22" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;yii-rbac-phpmanager&quot;&gt;yii\rbac\PhpManager&lt;/a&gt; stores RBAC data in files under &lt;code&gt;@app/rbac&lt;/code&gt; directory. Make sure the directory and all the files in it are writable by the Web server process if permissions hierarchy needs to be changed online.</source>
          <target state="translated">默认情况下，&lt;a href=&quot;yii-rbac-phpmanager&quot;&gt;yii \ rbac \ PhpManager&lt;/a&gt;将RBAC数据存储在 &lt;code&gt;@app/rbac&lt;/code&gt; 目录下的文件中。如果需要在线更改权限层次结构，请确保该目录及其中的所有文件均可被Web服务器进程写入。</target>
        </trans-unit>
        <trans-unit id="667f3bdad89aada623cf12e2b998e7cddcf15188" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii\rest\ActiveController&lt;/a&gt; provides the following actions:</source>
          <target state="translated">默认情况下，&lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii \ rest \ ActiveController&lt;/a&gt;提供以下操作：</target>
        </trans-unit>
        <trans-unit id="3b94b73866a0c86d9d1fb82b5a531a7e74ee3705" translate="yes" xml:space="preserve">
          <source>By default, Active Record uses the &lt;code&gt;db&lt;/code&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt; as the &lt;a href=&quot;yii-db-connection&quot;&gt;DB connection&lt;/a&gt; to access and manipulate the database data. As explained in &lt;a href=&quot;guide-db-dao&quot;&gt;Database Access Objects&lt;/a&gt;, you can configure the &lt;code&gt;db&lt;/code&gt; component in the application configuration like shown below,</source>
          <target state="translated">默认情况下，Active Record使用 &lt;code&gt;db&lt;/code&gt; &lt;a href=&quot;guide-structure-application-components&quot;&gt;应用程序组件&lt;/a&gt;作为&lt;a href=&quot;yii-db-connection&quot;&gt;数据库连接&lt;/a&gt;来访问和操作数据库数据。如&lt;a href=&quot;guide-db-dao&quot;&gt;数据库访问对象中所述&lt;/a&gt;，您可以在应用程序配置中配置 &lt;code&gt;db&lt;/code&gt; 组件，如下所示，</target>
        </trans-unit>
        <trans-unit id="81876bc309d75eb42c1202ba54d731d355889945" translate="yes" xml:space="preserve">
          <source>By default, BlameableBehavior will fill the &lt;code&gt;created_by&lt;/code&gt; and &lt;code&gt;updated_by&lt;/code&gt; attributes with the current user ID when the associated AR object is being inserted; it will fill the &lt;code&gt;updated_by&lt;/code&gt; attribute with the current user ID when the AR object is being updated.</source>
          <target state="translated">默认情况下，当插入关联的AR对象时，BlameableBehavior将使用当前用户ID 填充 &lt;code&gt;created_by&lt;/code&gt; 和 &lt;code&gt;updated_by&lt;/code&gt; 属性。当更新AR对象时，它将使用当前用户ID 填充 &lt;code&gt;updated_by&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="232eef12e535a8fad14e3dc211b28ac851241ced" translate="yes" xml:space="preserve">
          <source>By default, Cache stores session data in a MongoDB collection named 'cache' inside the default database. This collection is better to be pre-created with fields 'id' and 'expire' indexed. The collection name can be changed by setting &lt;a href=&quot;yii-mongodb-cache#%24cacheCollection-detail&quot;&gt;$cacheCollection&lt;/a&gt;.</source>
          <target state="translated">默认情况下，缓存将会话数据存储在默认数据库内名为&amp;ldquo;缓存&amp;rdquo;的MongoDB集合中。最好使用索引为&amp;ldquo; id&amp;rdquo;和&amp;ldquo; expire&amp;rdquo;的字段预先创建此集合。可以通过设置&lt;a href=&quot;yii-mongodb-cache#%24cacheCollection-detail&quot;&gt;$ cacheCollection&lt;/a&gt;来更改集合名称。</target>
        </trans-unit>
        <trans-unit id="68379c108a19a9f238e8ec9c364978db6fa759d8" translate="yes" xml:space="preserve">
          <source>By default, Composer installs packages registered on &lt;a href=&quot;https://packagist.org/&quot;&gt;Packagist&lt;/a&gt; - the biggest repository for open source Composer packages. You can look for extensions on Packagist. You may also &lt;a href=&quot;https://getcomposer.org/doc/05-repositories.md#repository&quot;&gt;create your own repository&lt;/a&gt; and configure Composer to use it. This is useful if you are developing private extensions that you want to share within your projects only.</source>
          <target state="translated">默认情况下，Composer会安装在&lt;a href=&quot;https://packagist.org/&quot;&gt;Packagist上&lt;/a&gt;注册的软件包-Packagist是开源Composer软件包的最大存储库。您可以在Packagist上查找扩展名。您也可以&lt;a href=&quot;https://getcomposer.org/doc/05-repositories.md#repository&quot;&gt;创建自己的存储库&lt;/a&gt;并配置Composer以使用它。如果您正在开发仅要在项目中共享的私有扩展，这将很有用。</target>
        </trans-unit>
        <trans-unit id="129794421b283dc205dc177651a42d571157e3bc" translate="yes" xml:space="preserve">
          <source>By default, DbCache stores session data in a DB table named 'cache'. This table must be pre-created. The table name can be changed by setting &lt;a href=&quot;yii-caching-dbcache#%24cacheTable-detail&quot;&gt;$cacheTable&lt;/a&gt;.</source>
          <target state="translated">默认情况下，DbCache将会话数据存储在名为&amp;ldquo; cache&amp;rdquo;的数据库表中。该表必须是预先创建的。可以通过设置&lt;a href=&quot;yii-caching-dbcache#%24cacheTable-detail&quot;&gt;$ cacheTable&lt;/a&gt;来更改表名。</target>
        </trans-unit>
        <trans-unit id="8b0ac5e5c18302775f4e7e006cd4f82211185548" translate="yes" xml:space="preserve">
          <source>By default, DbSession stores session data in a DB table named 'session'. This table must be pre-created. The table name can be changed by setting &lt;a href=&quot;yii-web-dbsession#%24sessionTable-detail&quot;&gt;$sessionTable&lt;/a&gt;.</source>
          <target state="translated">默认情况下，DbSession将会话数据存储在名为&amp;ldquo; session&amp;rdquo;的数据库表中。该表必须是预先创建的。可以通过设置&lt;a href=&quot;yii-web-dbsession#%24sessionTable-detail&quot;&gt;$ sessionTable&lt;/a&gt;来更改表名。</target>
        </trans-unit>
        <trans-unit id="f970f345795b868de573a99641b855532a1b67a6" translate="yes" xml:space="preserve">
          <source>By default, MongoDbTarget stores the log messages in a MongoDB collection named 'log'. The collection can be changed by setting the &lt;a href=&quot;yii-mongodb-log-mongodbtarget#%24logCollection-detail&quot;&gt;$logCollection&lt;/a&gt; property.</source>
          <target state="translated">默认情况下，MongoDbTarget将日志消息存储在名为&amp;ldquo; log&amp;rdquo;的MongoDB集合中。可以通过设置&lt;a href=&quot;yii-mongodb-log-mongodbtarget#%24logCollection-detail&quot;&gt;$ logCollection&lt;/a&gt;属性来更改集合。</target>
        </trans-unit>
        <trans-unit id="242c59b836bd1507412c2bdfabbc6024a3d61431" translate="yes" xml:space="preserve">
          <source>By default, RESTful APIs support both JSON and XML formats. To support a new format, you should configure the &lt;a href=&quot;yii-filters-contentnegotiator#%24formats-detail&quot;&gt;formats&lt;/a&gt; property of the &lt;code&gt;contentNegotiator&lt;/code&gt; filter like the following in your API controller classes:</source>
          <target state="translated">默认情况下，RESTful API支持JSON和XML格式。为了支持新格式，您应该在API控制器类中配置 &lt;code&gt;contentNegotiator&lt;/code&gt; 过滤器的&lt;a href=&quot;yii-filters-contentnegotiator#%24formats-detail&quot;&gt;formats&lt;/a&gt;属性，如下所示：</target>
        </trans-unit>
        <trans-unit id="50119172b10c03d0c03abfe09d47a7f32bfc4f84" translate="yes" xml:space="preserve">
          <source>By default, Session stores session data in a collection named 'session' inside the default database. This collection is better to be pre-created with fields 'id' and 'expire' indexed. The collection name can be changed by setting &lt;a href=&quot;yii-mongodb-session#%24sessionCollection-detail&quot;&gt;$sessionCollection&lt;/a&gt;.</source>
          <target state="translated">默认情况下，Session将会话数据存储在默认数据库内名为&amp;ldquo; session&amp;rdquo;的集合中。最好使用索引为&amp;ldquo; id&amp;rdquo;和&amp;ldquo; expire&amp;rdquo;的字段预先创建此集合。可以通过设置&lt;a href=&quot;yii-mongodb-session#%24sessionCollection-detail&quot;&gt;$ sessionCollection&lt;/a&gt;来更改集合名称。</target>
        </trans-unit>
        <trans-unit id="4755b1bee5786eb1d40f48e4eaa3c0f77187cab2" translate="yes" xml:space="preserve">
          <source>By default, SluggableBehavior will fill the &lt;code&gt;slug&lt;/code&gt; attribute with a value that can be used a slug in a URL when the associated AR object is being validated.</source>
          <target state="translated">默认情况下，SluggableBehavior将用一个值填充 &lt;code&gt;slug&lt;/code&gt; 属性，该值可在验证关联的AR对象时用作URL中的子段。</target>
        </trans-unit>
        <trans-unit id="0805d80c5a6d6cf07054768b744082f7b40d8dab" translate="yes" xml:space="preserve">
          <source>By default, TimestampBehavior will fill the &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; attributes with the current timestamp when the associated AR object is being inserted; it will fill the &lt;code&gt;updated_at&lt;/code&gt; attribute with the timestamp when the AR object is being updated. The timestamp value is obtained by &lt;code&gt;time()&lt;/code&gt;.</source>
          <target state="translated">默认情况下，插入关联的AR对象时，TimestampBehavior将使用当前时间戳填充 &lt;code&gt;created_at&lt;/code&gt; 和 &lt;code&gt;updated_at&lt;/code&gt; 属性。当更新AR对象时，它将使用时间戳填充 &lt;code&gt;updated_at&lt;/code&gt; 属性。时间戳记值通过 &lt;code&gt;time()&lt;/code&gt; 获得。</target>
        </trans-unit>
        <trans-unit id="6acc8e04855882b60a359ebb8cc45ba7af9186d4" translate="yes" xml:space="preserve">
          <source>By default, Yii uses PHP as its template language, but you can configure Yii to support other rendering engines, such as &lt;a href=&quot;http://twig.sensiolabs.org/&quot;&gt;Twig&lt;/a&gt; or &lt;a href=&quot;http://www.smarty.net/&quot;&gt;Smarty&lt;/a&gt; available as extensions.</source>
          <target state="translated">默认情况下，Yii使用PHP作为其模板语言，但是您可以配置Yii以支持其他渲染引擎，例如&lt;a href=&quot;http://twig.sensiolabs.org/&quot;&gt;Twig&lt;/a&gt;或&lt;a href=&quot;http://www.smarty.net/&quot;&gt;Smarty&lt;/a&gt;作为扩展。</target>
        </trans-unit>
        <trans-unit id="e99952398b236416612ca511cae984944ac33239" translate="yes" xml:space="preserve">
          <source>By default, a newly attached handler is appended to the existing handler queue for the event. As a result, the handler will be called in the last place when the event is triggered. To insert the new handler at the start of the handler queue so that the handler gets called first, you may call &lt;a href=&quot;yii-base-component#on()-detail&quot;&gt;yii\base\Component::on()&lt;/a&gt;, passing &lt;code&gt;false&lt;/code&gt; for the fourth parameter &lt;code&gt;$append&lt;/code&gt;:</source>
          <target state="translated">默认情况下，新附加的处理程序将附加到事件的现有处理程序队列中。结果，触发事件时将在最后一个位置调用处理程序。要在处理程序队列的开头插入新的处理程序，以便首先调用该处理程序，可以调用&lt;a href=&quot;yii-base-component#on()-detail&quot;&gt;yii \ base \ Component :: on（）&lt;/a&gt;，为第四个参数 &lt;code&gt;$append&lt;/code&gt; 传递 &lt;code&gt;false&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="623622db1d8379b9adc8905162303bb4136c1b1c" translate="yes" xml:space="preserve">
          <source>By default, action IDs should contain these characters only: English letters in lower case, digits, underscores, and hyphens (you can use hyphens to separate words). For example, &lt;code&gt;view&lt;/code&gt;, &lt;code&gt;update2&lt;/code&gt;, and &lt;code&gt;comment-post&lt;/code&gt; are all valid action IDs, while &lt;code&gt;view?&lt;/code&gt; and &lt;code&gt;Update&lt;/code&gt; are not.</source>
          <target state="translated">默认情况下，操作ID仅应包含以下字符：小写英文字母，数字，下划线和连字符（可以使用连字符分隔单词）。例如， &lt;code&gt;view&lt;/code&gt; ， &lt;code&gt;update2&lt;/code&gt; 和 &lt;code&gt;comment-post&lt;/code&gt; 都是有效的操作ID，而 &lt;code&gt;view?&lt;/code&gt; 和 &lt;code&gt;Update&lt;/code&gt; 不是。</target>
        </trans-unit>
        <trans-unit id="7b4f9b1aa76bdc8136480e47b48a3c469258e21f" translate="yes" xml:space="preserve">
          <source>By default, all Active Record queries are supported by &lt;a href=&quot;yii-db-activequery&quot;&gt;yii\db\ActiveQuery&lt;/a&gt;. To use a customized query class in an Active Record class, you should override the &lt;a href=&quot;yii-db-activerecord#find()-detail&quot;&gt;yii\db\ActiveRecord::find()&lt;/a&gt; method and return an instance of your customized query class. For example,</source>
          <target state="translated">默认情况下，&lt;a href=&quot;yii-db-activequery&quot;&gt;yii \ db \ ActiveQuery&lt;/a&gt;支持所有Active Record查询。要在Active Record类中使用定制的查询类，应重写&lt;a href=&quot;yii-db-activerecord#find()-detail&quot;&gt;yii \ db \ ActiveRecord :: find（）&lt;/a&gt;方法并返回定制的查询类的实例。例如，</target>
        </trans-unit>
        <trans-unit id="2e1b8b4d6dc58039c70ae13bcac9f79aefad9d1d" translate="yes" xml:space="preserve">
          <source>By default, all parameters declared in a rule are required. If a requested URL does not contain a particular parameter, or if a URL is being created without a particular parameter, the rule will not apply. To make some of the parameters optional, you can configure the &lt;a href=&quot;yii-web-urlrule#%24defaults-detail&quot;&gt;defaults&lt;/a&gt; property of a rule. Parameters listed in this property are optional and will take the specified values when they are not provided.</source>
          <target state="translated">默认情况下，规则中声明的所有参数都是必需的。如果所请求的URL不包含特定参数，或者正在创建的URL中没有特定参数，则该规则将不适用。要使某些参数成为可选参数，可以配置规则的&lt;a href=&quot;yii-web-urlrule#%24defaults-detail&quot;&gt;defaults&lt;/a&gt;属性。此属性中列出的参数是可选的，当不提供时将采用指定的值。</target>
        </trans-unit>
        <trans-unit id="0d58616a8b6aba7eceb67adb73ea750d6dc967ce" translate="yes" xml:space="preserve">
          <source>By default, all profiling results will be returned. You may provide &lt;code&gt;$categories&lt;/code&gt; and &lt;code&gt;$excludeCategories&lt;/code&gt; as parameters to retrieve the results that you are interested in.</source>
          <target state="translated">默认情况下，将返回所有分析结果。您可以提供 &lt;code&gt;$categories&lt;/code&gt; 和 &lt;code&gt;$excludeCategories&lt;/code&gt; 作为参数来检索您感兴趣的结果。</target>
        </trans-unit>
        <trans-unit id="0a653fd726783784f1bcea32fbd783edc432ad8c" translate="yes" xml:space="preserve">
          <source>By default, an active attribute is considered safe and can be massively assigned. If an attribute should NOT be massively assigned (thus considered unsafe), please prefix the attribute with an exclamation character (e.g. &lt;code&gt;'!rank'&lt;/code&gt;).</source>
          <target state="translated">默认情况下，活动属性被认为是安全的，可以进行大规模分配。如果不应大量分配属性（因此认为不安全），请在属性前加上感叹号（例如 &lt;code&gt;'!rank'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="bff15a7088e009f391052d0cb498cf5a5cc0ac07" translate="yes" xml:space="preserve">
          <source>By default, an input is considered empty if its value is an empty string, an empty array or a &lt;code&gt;null&lt;/code&gt;. You may customize the default empty detection logic by configuring the &lt;a href=&quot;yii-validators-validator#isEmpty()-detail&quot;&gt;yii\validators\Validator::isEmpty()&lt;/a&gt; property with a PHP callable. For example,</source>
          <target state="translated">默认情况下，如果输入的值为空字符串，空数组或 &lt;code&gt;null&lt;/code&gt; ，则将其视为空。您可以通过使用可调用PHP 配置&lt;a href=&quot;yii-validators-validator#isEmpty()-detail&quot;&gt;yii \ validators \ Validator :: isEmpty（）&lt;/a&gt;属性来自定义默认的空检测逻辑。例如，</target>
        </trans-unit>
        <trans-unit id="95d868d1696595f3268ed0def97a979399be295b" translate="yes" xml:space="preserve">
          <source>By default, assets are published to the directory &lt;code&gt;@webroot/assets&lt;/code&gt; which corresponds to the URL &lt;code&gt;@web/assets&lt;/code&gt;. You may customize this location by configuring the &lt;a href=&quot;yii-web-assetmanager#%24basePath-detail&quot;&gt;basePath&lt;/a&gt; and &lt;a href=&quot;yii-web-assetmanager#%24baseUrl-detail&quot;&gt;baseUrl&lt;/a&gt; properties.</source>
          <target state="translated">默认情况下，资产发布到与URL &lt;code&gt;@web/assets&lt;/code&gt; 对应的目录 &lt;code&gt;@webroot/assets&lt;/code&gt; / assets。您可以通过配置&lt;a href=&quot;yii-web-assetmanager#%24basePath-detail&quot;&gt;basePath&lt;/a&gt;和&lt;a href=&quot;yii-web-assetmanager#%24baseUrl-detail&quot;&gt;baseUrl&lt;/a&gt;属性来自定义此位置。</target>
        </trans-unit>
        <trans-unit id="132b56cd0370b5c68139dfb2f92080933a10d931" translate="yes" xml:space="preserve">
          <source>By default, attribute labels are automatically generated from attribute names. The generation is done by the method &lt;a href=&quot;yii-base-model#generateAttributeLabel()-detail&quot;&gt;yii\base\Model::generateAttributeLabel()&lt;/a&gt;. It will turn camel-case variable names into multiple words with the first letter in each word in upper case. For example, &lt;code&gt;username&lt;/code&gt; becomes &lt;code&gt;Username&lt;/code&gt;, and &lt;code&gt;firstName&lt;/code&gt; becomes &lt;code&gt;First Name&lt;/code&gt;.</source>
          <target state="translated">默认情况下，属性标签是根据属性名称自动生成的。生成是通过&lt;a href=&quot;yii-base-model#generateAttributeLabel()-detail&quot;&gt;yii \ base \ Model :: generateAttributeLabel（）&lt;/a&gt;方法完成的。它将驼峰式变量名转换为多个单词，每个单词的首字母大写。例如， &lt;code&gt;username&lt;/code&gt; 成为 &lt;code&gt;Username&lt;/code&gt; ， &lt;code&gt;firstName&lt;/code&gt; 成为 &lt;code&gt;First Name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="baa348a30b9209c17135e0fce23684fb6fdac123" translate="yes" xml:space="preserve">
          <source>By default, controller IDs should contain these characters only: English letters in lower case, digits, underscores, hyphens, and forward slashes. For example, &lt;code&gt;article&lt;/code&gt; and &lt;code&gt;post-comment&lt;/code&gt; are both valid controller IDs, while &lt;code&gt;article?&lt;/code&gt;, &lt;code&gt;PostComment&lt;/code&gt;, &lt;code&gt;admin\post&lt;/code&gt; are not.</source>
          <target state="translated">默认情况下，控制器ID仅应包含以下字符：小写英文字母，数字，下划线，连字符和正斜杠。例如， &lt;code&gt;article&lt;/code&gt; 和 &lt;code&gt;post-comment&lt;/code&gt; 都是有效的控制器ID，而 &lt;code&gt;article?&lt;/code&gt; ， &lt;code&gt;PostComment&lt;/code&gt; ， &lt;code&gt;admin\post&lt;/code&gt; 都没有。</target>
        </trans-unit>
        <trans-unit id="940fd9b7d3c812c787dd13ae10b0b32cbd78cecd" translate="yes" xml:space="preserve">
          <source>By default, each &lt;code&gt;afterAction()&lt;/code&gt; method call will trigger an &lt;code&gt;afterAction&lt;/code&gt; event to which you can attach a handler.</source>
          <target state="translated">默认情况下，每个 &lt;code&gt;afterAction()&lt;/code&gt; 方法调用都会触发一个 &lt;code&gt;afterAction&lt;/code&gt; 事件，您可以在该事件上附加一个处理程序。</target>
        </trans-unit>
        <trans-unit id="f7d136712f3aab7aa0467a440bedf2fa28b3691c" translate="yes" xml:space="preserve">
          <source>By default, each &lt;code&gt;beforeAction()&lt;/code&gt; method call will trigger a &lt;code&gt;beforeAction&lt;/code&gt; event to which you can attach a handler.</source>
          <target state="translated">默认情况下，每个 &lt;code&gt;beforeAction()&lt;/code&gt; 方法调用都会触发一个 &lt;code&gt;beforeAction&lt;/code&gt; 事件，您可以在该事件上附加一个处理程序。</target>
        </trans-unit>
        <trans-unit id="7b704e9048287d26ffc5449ac028a7d882e3cf5b" translate="yes" xml:space="preserve">
          <source>By default, field names are equivalent to attribute names. However, you can change this behavior by overriding the &lt;a href=&quot;yii-base-model#fields()-detail&quot;&gt;fields()&lt;/a&gt; and/or &lt;a href=&quot;yii-base-arrayabletrait#extraFields()-detail&quot;&gt;extraFields()&lt;/a&gt; methods. Both methods should return a list of field definitions. The fields defined by &lt;code&gt;fields()&lt;/code&gt; are default fields, meaning that &lt;code&gt;toArray()&lt;/code&gt; will return these fields by default. The &lt;code&gt;extraFields()&lt;/code&gt; method defines additionally available fields which can also be returned by &lt;code&gt;toArray()&lt;/code&gt; as long as you specify them via the &lt;code&gt;$expand&lt;/code&gt; parameter. For example, the following code will return all fields defined in &lt;code&gt;fields()&lt;/code&gt; and the &lt;code&gt;prettyName&lt;/code&gt; and &lt;code&gt;fullAddress&lt;/code&gt; fields if they are defined in &lt;code&gt;extraFields()&lt;/code&gt;.</source>
          <target state="translated">默认情况下，字段名称等效于属性名称。但是，您可以通过重写&lt;a href=&quot;yii-base-model#fields()-detail&quot;&gt;fields（）&lt;/a&gt;和/或&lt;a href=&quot;yii-base-arrayabletrait#extraFields()-detail&quot;&gt;extraFields（）&lt;/a&gt;方法来更改此行为。两种方法都应返回字段定义列表。由 &lt;code&gt;fields()&lt;/code&gt; 定义的字段是默认字段，这意味着 &lt;code&gt;toArray()&lt;/code&gt; 将默认返回这些字段。该 &lt;code&gt;extraFields()&lt;/code&gt; 方法定义它也可以通过返回额外可用字段 &lt;code&gt;toArray()&lt;/code&gt; 只要通过指定它们 &lt;code&gt;$expand&lt;/code&gt; 参数。例如，以下代码将返回在 &lt;code&gt;fields()&lt;/code&gt; 中定义的所有字段以及 &lt;code&gt;prettyName&lt;/code&gt; 和 &lt;code&gt;fullAddress&lt;/code&gt; 字段（如果在 &lt;code&gt;extraFields()&lt;/code&gt; 中定义）。</target>
        </trans-unit>
        <trans-unit id="7b3a5758860b8092c906648e794479440ba26bf0" translate="yes" xml:space="preserve">
          <source>By default, filters declared in a controller class will be applied to &lt;em&gt;all&lt;/em&gt; actions in that controller. You can, however, explicitly specify which actions the filter should be applied to by configuring the &lt;a href=&quot;yii-base-actionfilter#%24only-detail&quot;&gt;only&lt;/a&gt; property. In the above example, the &lt;code&gt;HttpCache&lt;/code&gt; filter only applies to the &lt;code&gt;index&lt;/code&gt; and &lt;code&gt;view&lt;/code&gt; actions. You can also configure the &lt;a href=&quot;yii-base-actionfilter#%24except-detail&quot;&gt;except&lt;/a&gt; property to blacklist some actions from being filtered.</source>
          <target state="translated">默认情况下，在控制器类中声明的过滤器将应用于该控制器中的&lt;em&gt;所有&lt;/em&gt;操作。但是，您可以通过配置&lt;a href=&quot;yii-base-actionfilter#%24only-detail&quot;&gt;only&lt;/a&gt;属性来明确指定应将过滤器应用于哪些操作。在上面的示例中， &lt;code&gt;HttpCache&lt;/code&gt; 筛选器仅适用于 &lt;code&gt;index&lt;/code&gt; 和 &lt;code&gt;view&lt;/code&gt; 操作。您还可以配置&lt;a href=&quot;yii-base-actionfilter#%24except-detail&quot;&gt;except&lt;/a&gt;属性，以将某些操作从过滤中列入黑名单。</target>
        </trans-unit>
        <trans-unit id="fc99597d626e6fe74cace75b30b870700ac26cc0" translate="yes" xml:space="preserve">
          <source>By default, fixture classes look for the corresponding data files under the &lt;code&gt;data&lt;/code&gt; folder which is a sub-folder of the folder containing the fixture class files. You can follow this convention when working with simple projects. For big projects, chances are that you often need to switch different data files for the same fixture class for different tests. We thus recommend that you organize the data files in a hierarchical way that is similar to your class namespaces. For example,</source>
          <target state="translated">默认情况下，灯具类在 &lt;code&gt;data&lt;/code&gt; 文件夹下查找对应的数据文件，该数据文件夹是包含灯具类文件的文件夹的子文件夹。在处理简单项目时，可以遵循此约定。对于大型项目，您常常需要为同一夹具类切换不同的数据文件以进行不同的测试。因此，我们建议您以类似于类名称空间的分层方式来组织数据文件。例如，</target>
        </trans-unit>
        <trans-unit id="5bafdc3d2a4f4af3144a4e9975ff613571746c68" translate="yes" xml:space="preserve">
          <source>By default, if your model class extends directly from &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt;, all its &lt;em&gt;non-static public&lt;/em&gt; member variables are attributes. For example, the &lt;code&gt;ContactForm&lt;/code&gt; model class below has four attributes: &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;, &lt;code&gt;subject&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt;. The &lt;code&gt;ContactForm&lt;/code&gt; model is used to represent the input data received from an HTML form.</source>
          <target state="translated">默认情况下，如果您的模型类直接从&lt;a href=&quot;yii-base-model&quot;&gt;yii \ base \ Model&lt;/a&gt;扩展，则其所有&lt;em&gt;非静态公共&lt;/em&gt;成员变量都是属性。例如，下面的 &lt;code&gt;ContactForm&lt;/code&gt; 模型类具有四个属性： &lt;code&gt;name&lt;/code&gt; ， &lt;code&gt;email&lt;/code&gt; ， &lt;code&gt;subject&lt;/code&gt; 和 &lt;code&gt;body&lt;/code&gt; 。所述 &lt;code&gt;ContactForm&lt;/code&gt; 模型用于表示从HTML表格接收到的输入数据。</target>
        </trans-unit>
        <trans-unit id="80c737bb2df2f1fbfcc8aa45a32e3f55afce44fa" translate="yes" xml:space="preserve">
          <source>By default, log messages will be formatted as follows by the &lt;a href=&quot;yii-log-target#formatMessage()-detail&quot;&gt;yii\log\Target::formatMessage()&lt;/a&gt;:</source>
          <target state="translated">默认情况下，日志消息的格式如下&lt;a href=&quot;yii-log-target#formatMessage()-detail&quot;&gt;yii \ log \ Target :: formatMessage（）&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="a9511bcb054523d747647f7b5c4c1d6c1d6ad256" translate="yes" xml:space="preserve">
          <source>By default, migrations are applied to the same database specified by the &lt;code&gt;db&lt;/code&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt;. If you want them to be applied to a different database, you may specify the &lt;code&gt;db&lt;/code&gt; command-line option like shown below,</source>
          <target state="translated">默认情况下，迁移将应用于 &lt;code&gt;db&lt;/code&gt; &lt;a href=&quot;guide-structure-application-components&quot;&gt;应用程序组件&lt;/a&gt;指定的同一数据库。如果要将它们应用于其他数据库，则可以指定 &lt;code&gt;db&lt;/code&gt; 命令行选项，如下所示，</target>
        </trans-unit>
        <trans-unit id="982026207eff0558af4e8b5058f3f3b5f16c507a" translate="yes" xml:space="preserve">
          <source>By default, the &quot;db&quot; application component is used as the database connection. You may override this method if you want to use a different database connection.</source>
          <target state="translated">默认情况下,&quot;db &quot;应用程序组件被用作数据库连接。如果你想使用不同的数据库连接,可以覆盖这个方法。</target>
        </trans-unit>
        <trans-unit id="ef39427d563336963aa329572d9329746e429b4d" translate="yes" xml:space="preserve">
          <source>By default, the &quot;elasticsearch&quot; application component is used as the database connection. You may override this method if you want to use a different database connection.</source>
          <target state="translated">默认情况下,&quot;elasticsearch &quot;应用组件被用作数据库连接。如果你想使用不同的数据库连接,可以覆盖这个方法。</target>
        </trans-unit>
        <trans-unit id="abebfd2bd420cf1155d1a8585b3e9ab281735eaf" translate="yes" xml:space="preserve">
          <source>By default, the &quot;mongodb&quot; application component is used as the Mongo connection. You may override this method if you want to use a different database connection.</source>
          <target state="translated">默认情况下,&quot;mongodb &quot;应用程序组件被用作Mongo连接。如果你想使用不同的数据库连接,你可以覆盖这个方法。</target>
        </trans-unit>
        <trans-unit id="272591c84797d649872a7fdb87fbf070ac9e8cb8" translate="yes" xml:space="preserve">
          <source>By default, the &quot;redis&quot; application component is used as the database connection. You may override this method if you want to use a different database connection.</source>
          <target state="translated">默认情况下,&quot;redis &quot;应用程序组件被用作数据库连接。如果你想使用不同的数据库连接,可以覆盖这个方法。</target>
        </trans-unit>
        <trans-unit id="1bc4298ce77806fa307689d9f941e90ac16ca637" translate="yes" xml:space="preserve">
          <source>By default, the &quot;sphinx&quot; application component is used as the Sphinx connection. You may override this method if you want to use a different Sphinx connection.</source>
          <target state="translated">默认情况下,&quot;sphinx &quot;应用程序组件被用作Sphinx连接。如果你想使用不同的Sphinx连接,你可以覆盖这个方法。</target>
        </trans-unit>
        <trans-unit id="f81008a703034eb6d3d9fd89df51d6df8bb3dfdd" translate="yes" xml:space="preserve">
          <source>By default, the &lt;a href=&quot;yii-base-model#%24attributes-detail&quot;&gt;yii\base\Model::$attributes&lt;/a&gt; property will return the values of &lt;em&gt;all&lt;/em&gt; attributes declared in &lt;a href=&quot;yii-base-model#attributes()-detail&quot;&gt;yii\base\Model::attributes()&lt;/a&gt;.</source>
          <target state="translated">默认情况下，&lt;a href=&quot;yii-base-model#%24attributes-detail&quot;&gt;yii \ base \ Model :: $ attributes&lt;/a&gt;属性将返回&lt;a href=&quot;yii-base-model#attributes()-detail&quot;&gt;yii \ base \ Model :: attributes（）中&lt;/a&gt;声明的&lt;em&gt;所有&lt;/em&gt;属性的值。</target>
        </trans-unit>
        <trans-unit id="6f78d9686e338e3d17b9c873944caa157a1e6917" translate="yes" xml:space="preserve">
          <source>By default, the &lt;a href=&quot;yii-db-baseactiverecord#unlink()-detail&quot;&gt;unlink()&lt;/a&gt; method will set the foreign key value(s) that specify the existing relationship to be &lt;code&gt;null&lt;/code&gt;. You may, however, choose to delete the table row that contains the foreign key value by passing the &lt;code&gt;$delete&lt;/code&gt; parameter as &lt;code&gt;true&lt;/code&gt; to the method.</source>
          <target state="translated">默认情况下，&lt;a href=&quot;yii-db-baseactiverecord#unlink()-detail&quot;&gt;unlink（）&lt;/a&gt;方法会将指定现有关系的外键值设置为 &lt;code&gt;null&lt;/code&gt; 。但是，您可以选择通过将 &lt;code&gt;$delete&lt;/code&gt; 参数作为 &lt;code&gt;true&lt;/code&gt; 传递给该方法来删除包含外键值的表行。</target>
        </trans-unit>
        <trans-unit id="fb83947dddb243535c9a7fc4c3a58d8f383bff7f" translate="yes" xml:space="preserve">
          <source>By default, the &lt;a href=&quot;yii-web-errorhandler&quot;&gt;error handler&lt;/a&gt; displays errors using two &lt;a href=&quot;guide-structure-views&quot;&gt;views&lt;/a&gt;:</source>
          <target state="translated">默认情况下，&lt;a href=&quot;yii-web-errorhandler&quot;&gt;错误处理程序&lt;/a&gt;使用两个&lt;a href=&quot;guide-structure-views&quot;&gt;视图&lt;/a&gt;显示错误：</target>
        </trans-unit>
        <trans-unit id="d3003487e0174b1b325b9d107514f443c318f58f" translate="yes" xml:space="preserve">
          <source>By default, the controller ID will be pluralized automatically when it is put in the patterns of the generated rules. If you want to explicitly specify how the controller ID should appear in the patterns, you may use an array with the array key being as the controller ID in the pattern, and the array value the actual controller ID. For example, &lt;code&gt;['u' =&amp;gt; 'user']&lt;/code&gt;.</source>
          <target state="translated">默认情况下，将控制器ID放入生成的规则的模式中时，它将自动进行复数形式。如果要明确指定控制器ID在模式中的显示方式，则可以使用数组，其中阵列键作为模式中的控制器ID，而数组值是实际的控制器ID。例如， &lt;code&gt;['u' =&amp;gt; 'user']&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0240f4f334c50046cc48f4e2bca4c615a72c2c12" translate="yes" xml:space="preserve">
          <source>By default, the currently active &lt;a href=&quot;yii-i18n-formatter#%24locale-detail&quot;&gt;locale&lt;/a&gt; is determined by the value of &lt;a href=&quot;yii-base-application#%24language-detail&quot;&gt;yii\base\Application::$language&lt;/a&gt;. You may override it by setting the &lt;a href=&quot;yii-i18n-formatter#%24locale-detail&quot;&gt;yii\i18n\Formatter::$locale&lt;/a&gt; property explicitly.</source>
          <target state="translated">默认情况下，当前活动的&lt;a href=&quot;yii-i18n-formatter#%24locale-detail&quot;&gt;语言环境&lt;/a&gt;由&lt;a href=&quot;yii-base-application#%24language-detail&quot;&gt;yii \ base \ Application :: $ language&lt;/a&gt;的值确定。您可以通过显式设置&lt;a href=&quot;yii-i18n-formatter#%24locale-detail&quot;&gt;yii \ i18n \ Formatter :: $ locale&lt;/a&gt;属性来覆盖它。</target>
        </trans-unit>
        <trans-unit id="5c82b03e1899137ea608c25e54cfb358114f61d7" translate="yes" xml:space="preserve">
          <source>By default, the default action is set as &lt;code&gt;index&lt;/code&gt;. If you want to change the default value, simply override this property in the controller class, like the following:</source>
          <target state="translated">默认情况下，默认操作设置为 &lt;code&gt;index&lt;/code&gt; 。如果要更改默认值，只需在控制器类中覆盖此属性，如下所示：</target>
        </trans-unit>
        <trans-unit id="17c24481991ef18f83790a2614749f655b3859d0" translate="yes" xml:space="preserve">
          <source>By default, the scenarios supported by a model are determined by the &lt;a href=&quot;#validation-rules&quot;&gt;validation rules&lt;/a&gt; declared in the model. However, you can customize this behavior by overriding the &lt;a href=&quot;yii-base-model#scenarios()-detail&quot;&gt;yii\base\Model::scenarios()&lt;/a&gt; method, like the following:</source>
          <target state="translated">默认情况下，模型支持的方案由模型中声明的&lt;a href=&quot;#validation-rules&quot;&gt;验证规则&lt;/a&gt;确定。但是，您可以通过覆盖&lt;a href=&quot;yii-base-model#scenarios()-detail&quot;&gt;yii \ base \ Model :: scenarios（）&lt;/a&gt;方法来自定义此行为，如下所示：</target>
        </trans-unit>
        <trans-unit id="b61928ecc261f61a19f714194eae8b3ac66c4558" translate="yes" xml:space="preserve">
          <source>By default, the view being displayed is specified via the &lt;code&gt;view&lt;/code&gt; GET parameter. The name of the GET parameter can be customized via &lt;a href=&quot;yii-web-viewaction#%24viewParam-detail&quot;&gt;$viewParam&lt;/a&gt;.</source>
          <target state="translated">默认情况下，正在显示的视图是通过 &lt;code&gt;view&lt;/code&gt; GET参数指定的。可以通过&lt;a href=&quot;yii-web-viewaction#%24viewParam-detail&quot;&gt;$ viewParam&lt;/a&gt;定制GET参数的名称。</target>
        </trans-unit>
        <trans-unit id="354440072c4e4ca488c6a0450c190af249959a03" translate="yes" xml:space="preserve">
          <source>By default, this method returns all public non-static properties of the class. You may override this method to change the default behavior.</source>
          <target state="translated">默认情况下,该方法返回类的所有公共非静态属性。你可以重写这个方法来改变默认行为。</target>
        </trans-unit>
        <trans-unit id="267401fa16c5ce41f0c01e9c3c801b45d5a5ef02" translate="yes" xml:space="preserve">
          <source>By default, this method returns the model class name (without the namespace part) as the form name. You may override it when the model is used in different forms.</source>
          <target state="translated">默认情况下,该方法返回模型类名(不含命名空间部分)作为窗体名。当模型在不同的表单中使用时,您可以重写它。</target>
        </trans-unit>
        <trans-unit id="840c7c5ceb424ccc2273687f6c94154b65d99bbf" translate="yes" xml:space="preserve">
          <source>By default, this method will try to determine the page size by &lt;a href=&quot;yii-data-pagination#%24pageSizeParam-detail&quot;&gt;$pageSizeParam&lt;/a&gt; in &lt;a href=&quot;yii-data-pagination#%24params-detail&quot;&gt;$params&lt;/a&gt;. If the page size cannot be determined this way, &lt;a href=&quot;yii-data-pagination#%24defaultPageSize-detail&quot;&gt;$defaultPageSize&lt;/a&gt; will be returned.</source>
          <target state="translated">默认情况下，该方法将尝试确定由页面大小&lt;a href=&quot;yii-data-pagination#%24pageSizeParam-detail&quot;&gt;$ pageSizeParam&lt;/a&gt;在&lt;a href=&quot;yii-data-pagination#%24params-detail&quot;&gt;$ PARAMS&lt;/a&gt;。如果无法通过这种方式确定页面大小，则将返回&lt;a href=&quot;yii-data-pagination#%24defaultPageSize-detail&quot;&gt;$ defaultPageSize&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c67240201aac5524a7fa21b22b30f59225e07b2a" translate="yes" xml:space="preserve">
          <source>By default, transactions use the master connection. And within a transaction, all DB operations will use the master connection. For example,</source>
          <target state="translated">默认情况下,事务使用主连接。而在一个事务中,所有的DB操作都会使用主连接。比如说</target>
        </trans-unit>
        <trans-unit id="9b5e372d4656452508d95298cd7ab6629307b303" translate="yes" xml:space="preserve">
          <source>By default, views for a widget should be stored in files in the &lt;code&gt;WidgetPath/views&lt;/code&gt; directory, where &lt;code&gt;WidgetPath&lt;/code&gt; stands for the directory containing the widget class file. Therefore, the above example will render the view file &lt;code&gt;@app/components/views/hello.php&lt;/code&gt;, assuming the widget class is located under &lt;code&gt;@app/components&lt;/code&gt;. You may override the &lt;a href=&quot;yii-base-widget#getViewPath()-detail&quot;&gt;yii\base\Widget::getViewPath()&lt;/a&gt; method to customize the directory containing the widget view files.</source>
          <target state="translated">默认情况下，小部件的视图应存储在 &lt;code&gt;WidgetPath/views&lt;/code&gt; 目录中的文件中，其中 &lt;code&gt;WidgetPath&lt;/code&gt; 代表包含小部件类文件的目录。因此，假设小部件类位于 &lt;code&gt;@app/components&lt;/code&gt; 下，以上示例将呈现视图文件 &lt;code&gt;@app/components/views/hello.php&lt;/code&gt; 。您可以覆盖&lt;a href=&quot;yii-base-widget#getViewPath()-detail&quot;&gt;yii \ base \ Widget :: getViewPath（）&lt;/a&gt;方法来自定义包含窗口小部件视图文件的目录。</target>
        </trans-unit>
        <trans-unit id="ba2041deaa6e01ee3b6a958e5ce79388538c8ade" translate="yes" xml:space="preserve">
          <source>By default, when an asset bundle is being published, all contents in the directory specified by &lt;a href=&quot;yii-web-assetbundle#%24sourcePath-detail&quot;&gt;yii\web\AssetBundle::$sourcePath&lt;/a&gt; will be published. You can customize this behavior by configuring the &lt;a href=&quot;yii-web-assetbundle#%24publishOptions-detail&quot;&gt;publishOptions&lt;/a&gt; property. For example, to publish only one or a few subdirectories of &lt;a href=&quot;yii-web-assetbundle#%24sourcePath-detail&quot;&gt;yii\web\AssetBundle::$sourcePath&lt;/a&gt;, you can do the following in the asset bundle class:</source>
          <target state="translated">默认情况下，发布资产捆绑包时，将发布&lt;a href=&quot;yii-web-assetbundle#%24sourcePath-detail&quot;&gt;yii \ web \ AssetBundle :: $ sourcePath&lt;/a&gt;指定的目录中的所有内容。您可以通过配置&lt;a href=&quot;yii-web-assetbundle#%24publishOptions-detail&quot;&gt;publishOptions&lt;/a&gt;属性来自定义此行为。例如，要仅发布&lt;a href=&quot;yii-web-assetbundle#%24sourcePath-detail&quot;&gt;yii \ web \ AssetBundle :: $ sourcePath的&lt;/a&gt;一个或几个子目录，可以在资产捆绑包类中执行以下操作：</target>
        </trans-unit>
        <trans-unit id="4c1641716f28c796c0de34d46b6511fdbe34bd02" translate="yes" xml:space="preserve">
          <source>By default, when publishing a directory, subdirectories and files whose name starts with a dot &quot;.&quot; will NOT be published. If you want to change this behavior, you may specify the &quot;beforeCopy&quot; option as explained in the &lt;code&gt;$options&lt;/code&gt; parameter.</source>
          <target state="translated">默认情况下，发布目录时，其名称以点&amp;ldquo;。&amp;rdquo;开头的子目录和文件。将不会被发布。如果要更改此行为，可以按照 &lt;code&gt;$options&lt;/code&gt; 参数中的说明指定&amp;ldquo; beforeCopy&amp;rdquo;选项。</target>
        </trans-unit>
        <trans-unit id="f0f18b1f9b0455b6d0da685d1963375b4d15d02e" translate="yes" xml:space="preserve">
          <source>By doing so, the URL of every published asset will be appended with its last modification timestamp. For example, the URL to &lt;code&gt;yii.js&lt;/code&gt; may look like &lt;code&gt;/assets/5515a87c/yii.js?v=1423448645&quot;&lt;/code&gt;, where the parameter &lt;code&gt;v&lt;/code&gt; represents the last modification timestamp of the &lt;code&gt;yii.js&lt;/code&gt; file. Now if you modify an asset, its URL will be changed, too, which causes the client to fetch the latest version of the asset.</source>
          <target state="translated">这样，每个已发布资产的URL都将附加其最后修改时间戳。例如，指向 &lt;code&gt;yii.js&lt;/code&gt; 的URL 可能类似于 &lt;code&gt;/assets/5515a87c/yii.js?v=1423448645&quot;&lt;/code&gt; ，其中参数 &lt;code&gt;v&lt;/code&gt; 代表 &lt;code&gt;yii.js&lt;/code&gt; 文件的最后修改时间戳。现在，如果您修改资产，则其资产URL也将被更改，这将导致客户端获取资产的最新版本。</target>
        </trans-unit>
        <trans-unit id="75cee4221139d80a5577f58c5f6d1aa1b608f58a" translate="yes" xml:space="preserve">
          <source>By doing so, the person who wants to configure the &lt;code&gt;Foo&lt;/code&gt; class no longer needs to be aware of how it is built.</source>
          <target state="translated">这样，想要配置 &lt;code&gt;Foo&lt;/code&gt; 类的人就不再需要知道它是如何构建的。</target>
        </trans-unit>
        <trans-unit id="bd0623665e2681e88e951d2d94dfd22f86078b8e" translate="yes" xml:space="preserve">
          <source>By overriding &lt;a href=&quot;yii-base-model#fields()-detail&quot;&gt;fields()&lt;/a&gt; and/or &lt;a href=&quot;yii-base-arrayabletrait#extraFields()-detail&quot;&gt;extraFields()&lt;/a&gt;, you may specify what data, called &lt;em&gt;fields&lt;/em&gt;, in the resource can be put into its array representation. The difference between these two methods is that the former specifies the default set of fields which should be included in the array representation, while the latter specifies additional fields which may be included in the array if an end user requests for them via the &lt;code&gt;expand&lt;/code&gt; query parameter. For example,</source>
          <target state="translated">通过覆盖&lt;a href=&quot;yii-base-model#fields()-detail&quot;&gt;fields（）&lt;/a&gt;和/或&lt;a href=&quot;yii-base-arrayabletrait#extraFields()-detail&quot;&gt;extraFields（）&lt;/a&gt;，您可以指定可以将资源中的哪些数据（称为&lt;em&gt;fields）&lt;/em&gt;放入其数组表示形式中。这两种方法之间的区别在于，前一种方法指定了应包含在数组表示形式中的默认字段集，而后一种方法指定了如果最终用户通过 &lt;code&gt;expand&lt;/code&gt; query参数请求可以包含在数组中的其他字段。。例如，</target>
        </trans-unit>
        <trans-unit id="f14c249ed48efa6d7641af6c26a8a47bbe083090" translate="yes" xml:space="preserve">
          <source>By overriding the &lt;a href=&quot;yii-console-controller#options()-detail&quot;&gt;yii\console\Controller::options()&lt;/a&gt; method, you can specify options that are available to a console command (controller/actionID). The method should return a list of the controller class's public properties. When running a command, you may specify the value of an option using the syntax &lt;code&gt;--optionName=optionValue&lt;/code&gt;. This will assign &lt;code&gt;optionValue&lt;/code&gt; to the &lt;code&gt;optionName&lt;/code&gt; property of the controller class.</source>
          <target state="translated">通过覆盖&lt;a href=&quot;yii-console-controller#options()-detail&quot;&gt;yii \ console \ Controller :: options（）&lt;/a&gt;方法，您可以指定控制台命令可用的选项（控制器/ actionID）。该方法应返回控制器类的公共属性的列表。运行命令时，可以使用语法 &lt;code&gt;--optionName=optionValue&lt;/code&gt; 来指定选项的值。这会将 &lt;code&gt;optionValue&lt;/code&gt; 分配给控制器类的 &lt;code&gt;optionName&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="7cac3c06a0dbd47f1925b620a0f0f3a79e1ec05a" translate="yes" xml:space="preserve">
          <source>By passing the data as the second parameter to the view rendering methods, you are using the push approach. The data should be represented as an array of name-value pairs. When the view is being rendered, the PHP &lt;code&gt;extract()&lt;/code&gt; function will be called on this array so that the array is extracted into variables in the view. For example, the following view rendering code in a controller will push two variables to the &lt;code&gt;report&lt;/code&gt; view: &lt;code&gt;$foo = 1&lt;/code&gt; and &lt;code&gt;$bar = 2&lt;/code&gt;.</source>
          <target state="translated">通过将数据作为第二个参数传递给视图呈现方法，您正在使用推入方法。数据应表示为名称/值对的数组。呈现视图时，将在此数组上调用PHP &lt;code&gt;extract()&lt;/code&gt; 函数，以便将该数组提取到视图中的变量中。例如，以下控制器中的视图呈现代码会将两个变量推入 &lt;code&gt;report&lt;/code&gt; 视图： &lt;code&gt;$foo = 1&lt;/code&gt; 和 &lt;code&gt;$bar = 2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff4a7d4d2529f035d1358e76f9fea4568132bbd9" translate="yes" xml:space="preserve">
          <source>By setting &lt;a href=&quot;yii-grid-datacolumn#%24value-detail&quot;&gt;$value&lt;/a&gt; and &lt;a href=&quot;yii-grid-datacolumn#%24label-detail&quot;&gt;$label&lt;/a&gt;, the header and cell content can be customized.</source>
          <target state="translated">通过设置&lt;a href=&quot;yii-grid-datacolumn#%24value-detail&quot;&gt;$ value&lt;/a&gt;和&lt;a href=&quot;yii-grid-datacolumn#%24label-detail&quot;&gt;$ label&lt;/a&gt;，可以自定义标题和单元格内容。</target>
        </trans-unit>
        <trans-unit id="178f09be6976ef07e58cda3d3e95bd80e35a1def" translate="yes" xml:space="preserve">
          <source>By setting the &lt;a href=&quot;yii-base-actionevent#%24isValid-detail&quot;&gt;$isValid&lt;/a&gt; property, one may control whether to continue running the action.</source>
          <target state="translated">通过设置&lt;a href=&quot;yii-base-actionevent#%24isValid-detail&quot;&gt;$ isValid&lt;/a&gt;属性，可以控制是否继续运行该动作。</target>
        </trans-unit>
        <trans-unit id="c363ea6172fb65d03348a7d96ab08829cfb09d25" translate="yes" xml:space="preserve">
          <source>By setting the &lt;a href=&quot;yii-base-widgetevent#%24isValid-detail&quot;&gt;$isValid&lt;/a&gt; property, one may control whether to continue running the widget.</source>
          <target state="translated">通过设置&lt;a href=&quot;yii-base-widgetevent#%24isValid-detail&quot;&gt;$ isValid&lt;/a&gt;属性，可以控制是否继续运行窗口小部件。</target>
        </trans-unit>
        <trans-unit id="17ce914f2edc87af3bf7d3e595573884d755e5b5" translate="yes" xml:space="preserve">
          <source>By setting the &lt;a href=&quot;yii-mail-mailevent#%24isValid-detail&quot;&gt;$isValid&lt;/a&gt; property, one may control whether to continue running the action.</source>
          <target state="translated">通过设置&lt;a href=&quot;yii-mail-mailevent#%24isValid-detail&quot;&gt;$ isValid&lt;/a&gt;属性，可以控制是否继续运行该动作。</target>
        </trans-unit>
        <trans-unit id="a8ab3041e9eb9c5724f52b26e81614634cd9fee1" translate="yes" xml:space="preserve">
          <source>By using FixtureTrait, a test class will be able to specify which fixtures to load by overriding the &lt;a href=&quot;yii-test-fixturetrait#fixtures()-detail&quot;&gt;fixtures()&lt;/a&gt; method. It can then load and unload the fixtures using &lt;a href=&quot;yii-test-fixturetrait#loadFixtures()-detail&quot;&gt;loadFixtures()&lt;/a&gt; and &lt;a href=&quot;yii-test-fixturetrait#unloadFixtures()-detail&quot;&gt;unloadFixtures()&lt;/a&gt;. Once a fixture is loaded, it can be accessed like an object property, thanks to the PHP &lt;code&gt;__get()&lt;/code&gt; magic method. Also, if the fixture is an instance of &lt;a href=&quot;yii-test-activefixture&quot;&gt;yii\test\ActiveFixture&lt;/a&gt;, you will be able to access AR models through the syntax &lt;code&gt;$this-&amp;gt;fixtureName('model name')&lt;/code&gt;.</source>
          <target state="translated">通过使用FixtureTrait，测试类将能够通过覆盖Fixtures &lt;a href=&quot;yii-test-fixturetrait#fixtures()-detail&quot;&gt;（）&lt;/a&gt;方法来指定要加载的灯具。然后，它可以使用&lt;a href=&quot;yii-test-fixturetrait#loadFixtures()-detail&quot;&gt;loadFixtures（）&lt;/a&gt;和&lt;a href=&quot;yii-test-fixturetrait#unloadFixtures()-detail&quot;&gt;unloadFixtures（）&lt;/a&gt;加载和卸载灯具。加载了灯具后， &lt;code&gt;__get()&lt;/code&gt; PHP __get（）魔术方法，就可以像访问对象属性一样对其进行访问。另外，如果夹具是&lt;a href=&quot;yii-test-activefixture&quot;&gt;yii \ test \ ActiveFixture&lt;/a&gt;的实例，则可以通过语法 &lt;code&gt;$this-&amp;gt;fixtureName('model name')&lt;/code&gt; 访问AR模型。</target>
        </trans-unit>
        <trans-unit id="411d187530adbb15df19de046cd5b834ec64e227" translate="yes" xml:space="preserve">
          <source>By using parameterized routes, you may reduce the number of URL rules, which can significantly improve performance.</source>
          <target state="translated">通过使用参数化路由,可以减少URL规则的数量,从而显著提高性能。</target>
        </trans-unit>
        <trans-unit id="8e5fdab92dece79d7629d6d901687613ddc6ab5a" translate="yes" xml:space="preserve">
          <source>Bytes</source>
          <target state="translated">Bytes</target>
        </trans-unit>
        <trans-unit id="f98f6270859220d5c11d01c0c27633f00d251c26" translate="yes" xml:space="preserve">
          <source>CACHE_KEY_PREFIX</source>
          <target state="translated">CACHE_KEY_PREFIX</target>
        </trans-unit>
        <trans-unit id="c6aaea7090c8de7bd03d57660857b55ac5743503" translate="yes" xml:space="preserve">
          <source>CATEGORY_NUMERIC</source>
          <target state="translated">CATEGORY_NUMERIC</target>
        </trans-unit>
        <trans-unit id="bbc92dce85847e1eb1b478de2b5c06da55add9de" translate="yes" xml:space="preserve">
          <source>CATEGORY_OTHER</source>
          <target state="translated">CATEGORY_OTHER</target>
        </trans-unit>
        <trans-unit id="8877bc4f311d689908b83f59ec87a58985140e2c" translate="yes" xml:space="preserve">
          <source>CATEGORY_PK</source>
          <target state="translated">CATEGORY_PK</target>
        </trans-unit>
        <trans-unit id="733aa89ffa79363fe5ff162c0b635cb29e9ccdd1" translate="yes" xml:space="preserve">
          <source>CATEGORY_STRING</source>
          <target state="translated">CATEGORY_STRING</target>
        </trans-unit>
        <trans-unit id="fa0ac1fca036264c8550cc44ed6d7540ad66c62c" translate="yes" xml:space="preserve">
          <source>CATEGORY_TIME</source>
          <target state="translated">CATEGORY_TIME</target>
        </trans-unit>
        <trans-unit id="b1884e212057e8fbb6f1dd5108dd7a0cc930fcd7" translate="yes" xml:space="preserve">
          <source>CLI exit code</source>
          <target state="translated">CLI退出代码</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
