<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="crystal">
    <body>
      <group id="crystal">
        <trans-unit id="b51c0046756c94fa5dd58e3aec76a5f5da1fe577" translate="yes" xml:space="preserve">
          <source>128#&amp;gt;=</source>
          <target state="translated">128#&amp;gt;=</target>
        </trans-unit>
        <trans-unit id="e01abcd1fb6b576eb8c16e10b042fe036dd480d7" translate="yes" xml:space="preserve">
          <source>128#&amp;lt;</source>
          <target state="translated">128#&amp;lt;</target>
        </trans-unit>
        <trans-unit id="4dc41d4fae628d5cf3e68b85826e71b236d9e687" translate="yes" xml:space="preserve">
          <source>128#&amp;lt;=</source>
          <target state="translated">128#&amp;lt;=</target>
        </trans-unit>
        <trans-unit id="c23492b518c2a6cf25f3cd8b20ecdacac703c637" translate="yes" xml:space="preserve">
          <source>128#==</source>
          <target state="translated">128#==</target>
        </trans-unit>
        <trans-unit id="b26d2cbc648de5e209979f168711e4e874227014" translate="yes" xml:space="preserve">
          <source>128#abs</source>
          <target state="translated">128#abs</target>
        </trans-unit>
        <trans-unit id="fb95569aef139d200d0590441861cb7b771812f4" translate="yes" xml:space="preserve">
          <source>128#clone</source>
          <target state="translated">128#clone</target>
        </trans-unit>
        <trans-unit id="75bd83b49b998deed00570de5d987b747aec9799" translate="yes" xml:space="preserve">
          <source>128#leading_zeros_count</source>
          <target state="translated">128#leading_zeros_count</target>
        </trans-unit>
        <trans-unit id="537fb5efc531797916cc43d161bc3e59c0cdf4c1" translate="yes" xml:space="preserve">
          <source>128#popcount</source>
          <target state="translated">128#popcount</target>
        </trans-unit>
        <trans-unit id="9ca1e9787119d54125334802ee4f972db45803a1" translate="yes" xml:space="preserve">
          <source>128#to_f</source>
          <target state="translated">128#to_f</target>
        </trans-unit>
        <trans-unit id="e36f8d8383189fc4260d0d6c0b9a67422aac8260" translate="yes" xml:space="preserve">
          <source>128#to_f!</source>
          <target state="translated">128#to_f!</target>
        </trans-unit>
        <trans-unit id="1cd7f7c0454e3a8305bbcbfb570942e2bb25f986" translate="yes" xml:space="preserve">
          <source>128#to_f32</source>
          <target state="translated">128#to_f32</target>
        </trans-unit>
        <trans-unit id="3b060d7b732f1418d27727d44e6513711cec3858" translate="yes" xml:space="preserve">
          <source>128#to_f32!</source>
          <target state="translated">128#to_f32!</target>
        </trans-unit>
        <trans-unit id="ba944ff50a798b8c39b62604a409ead254aef47a" translate="yes" xml:space="preserve">
          <source>128#to_f64</source>
          <target state="translated">128#to_f64</target>
        </trans-unit>
        <trans-unit id="978a223f9498fe600300ad2c4e3817cf213b67eb" translate="yes" xml:space="preserve">
          <source>128#to_f64!</source>
          <target state="translated">128#to_f64!</target>
        </trans-unit>
        <trans-unit id="8341ed48ffb06c1ff1456fa347925b95bb3244b6" translate="yes" xml:space="preserve">
          <source>128#to_i</source>
          <target state="translated">128#to_i</target>
        </trans-unit>
        <trans-unit id="c67ee25261b3b7b81725e4fff962498e2eaf376f" translate="yes" xml:space="preserve">
          <source>128#to_i!</source>
          <target state="translated">128#to_i!</target>
        </trans-unit>
        <trans-unit id="fd5d08d1cd12a3c01f6c3e99e950dad5711e0c9a" translate="yes" xml:space="preserve">
          <source>128#to_i128</source>
          <target state="translated">128#to_i128</target>
        </trans-unit>
        <trans-unit id="bcea2194b3cf04a0f2295c434f23e38aba47b218" translate="yes" xml:space="preserve">
          <source>128#to_i128!</source>
          <target state="translated">128#to_i128!</target>
        </trans-unit>
        <trans-unit id="7a8648b3ed1dc862d034658ed90097d5958175b3" translate="yes" xml:space="preserve">
          <source>128#to_i16</source>
          <target state="translated">128#to_i16</target>
        </trans-unit>
        <trans-unit id="1c5442d7092e02fa891331bdb7253bed5615bc1c" translate="yes" xml:space="preserve">
          <source>128#to_i16!</source>
          <target state="translated">128#to_i16!</target>
        </trans-unit>
        <trans-unit id="73cc8b86872dff1c99e54752417cd0ace8cc7840" translate="yes" xml:space="preserve">
          <source>128#to_i32</source>
          <target state="translated">128#to_i32</target>
        </trans-unit>
        <trans-unit id="25c4aa594e618e0baa5d28b48a13b2fcdea86685" translate="yes" xml:space="preserve">
          <source>128#to_i32!</source>
          <target state="translated">128#to_i32!</target>
        </trans-unit>
        <trans-unit id="7fadcfd1181b10fd400f044e163c9f357dc89bb1" translate="yes" xml:space="preserve">
          <source>128#to_i64</source>
          <target state="translated">128#to_i64</target>
        </trans-unit>
        <trans-unit id="2a607d2e5dea6ef2731c1acf3539bcf42359410a" translate="yes" xml:space="preserve">
          <source>128#to_i64!</source>
          <target state="translated">128#to_i64!</target>
        </trans-unit>
        <trans-unit id="c0c2551d7b14dc761c0c9acb518db6646580ba32" translate="yes" xml:space="preserve">
          <source>128#to_i8</source>
          <target state="translated">128#to_i8</target>
        </trans-unit>
        <trans-unit id="144badd63e4feee016eca9eeb2ae38de0b6b4df0" translate="yes" xml:space="preserve">
          <source>128#to_i8!</source>
          <target state="translated">128#to_i8!</target>
        </trans-unit>
        <trans-unit id="3e8510a7e186df4d7c00f58ec174756f9b365d68" translate="yes" xml:space="preserve">
          <source>128#to_u</source>
          <target state="translated">128#to_u</target>
        </trans-unit>
        <trans-unit id="56f34b8e6044ba978499e58b0c57673b6decb952" translate="yes" xml:space="preserve">
          <source>128#to_u!</source>
          <target state="translated">128#to_u!</target>
        </trans-unit>
        <trans-unit id="6dbf0a014316b76a4283a570ed583890d0f433c0" translate="yes" xml:space="preserve">
          <source>128#to_u128</source>
          <target state="translated">128#to_u128</target>
        </trans-unit>
        <trans-unit id="75884e358b7a5c1aa62ea1268623087fcfc44673" translate="yes" xml:space="preserve">
          <source>128#to_u128!</source>
          <target state="translated">128#to_u128!</target>
        </trans-unit>
        <trans-unit id="7265f34bb046a4df65e8d6362d5b198a8fbe24a2" translate="yes" xml:space="preserve">
          <source>128#to_u16</source>
          <target state="translated">128#to_u16</target>
        </trans-unit>
        <trans-unit id="258b62a7c50b65f0f5cbdfbd9d33ea83b930f167" translate="yes" xml:space="preserve">
          <source>128#to_u16!</source>
          <target state="translated">128#to_u16!</target>
        </trans-unit>
        <trans-unit id="296b017736c48690b245dda0ff4ce665290373b0" translate="yes" xml:space="preserve">
          <source>128#to_u32</source>
          <target state="translated">128#to_u32</target>
        </trans-unit>
        <trans-unit id="0e59cc4c8ef4a4e005d2ffe65a24e2e0b81e9618" translate="yes" xml:space="preserve">
          <source>128#to_u32!</source>
          <target state="translated">128#to_u32!</target>
        </trans-unit>
        <trans-unit id="2092b27e5f27203797114a3ea2afa2c8bd359ab5" translate="yes" xml:space="preserve">
          <source>128#to_u64</source>
          <target state="translated">128#to_u64</target>
        </trans-unit>
        <trans-unit id="0eca2e52d715488253de5701bebc19d8330e8702" translate="yes" xml:space="preserve">
          <source>128#to_u64!</source>
          <target state="translated">128#to_u64!</target>
        </trans-unit>
        <trans-unit id="0fe6948f31b34a13542b42239230fb07e1c7bb3b" translate="yes" xml:space="preserve">
          <source>128#to_u8</source>
          <target state="translated">128#to_u8</target>
        </trans-unit>
        <trans-unit id="0a927ae98fce57ead24e912f2adb148a03155a4c" translate="yes" xml:space="preserve">
          <source>128#to_u8!</source>
          <target state="translated">128#to_u8!</target>
        </trans-unit>
        <trans-unit id="3ab70d0daf0ccdccc3848fa0618336b2db2512db" translate="yes" xml:space="preserve">
          <source>128#trailing_zeros_count</source>
          <target state="translated">128#trailing_zeros_count</target>
        </trans-unit>
        <trans-unit id="01f4673e8226f977141a6c5fb4c131a80ddf8872" translate="yes" xml:space="preserve">
          <source>128#unsafe_chr</source>
          <target state="translated">128#unsafe_chr</target>
        </trans-unit>
        <trans-unit id="c195ef69d60eb72fec4579910984cc509e74aff3" translate="yes" xml:space="preserve">
          <source>128.new</source>
          <target state="translated">128.new</target>
        </trans-unit>
        <trans-unit id="79d98d8fee89ebb4d98b98f990e376c171b73e3c" translate="yes" xml:space="preserve">
          <source>128.new!</source>
          <target state="translated">128.new!</target>
        </trans-unit>
        <trans-unit id="5a99d70f0075bba49171aaf31aa4d812f9bb6381" translate="yes" xml:space="preserve">
          <source>16#&amp;amp;</source>
          <target state="translated">16#&amp;amp;</target>
        </trans-unit>
        <trans-unit id="c15b77d3d8e2bf9236a10ef61ac75bddf8f94f58" translate="yes" xml:space="preserve">
          <source>16#&amp;amp;*</source>
          <target state="translated">16#&amp;amp;*</target>
        </trans-unit>
        <trans-unit id="8484e9d73dca2ce7a33177db6a1344cbb05656fb" translate="yes" xml:space="preserve">
          <source>16#&amp;amp;+</source>
          <target state="translated">16#&amp;amp;+</target>
        </trans-unit>
        <trans-unit id="4a83b184ba3320df1e52507d7fa37781dee7ec3f" translate="yes" xml:space="preserve">
          <source>16#&amp;amp;-</source>
          <target state="translated">16#&amp;amp;-</target>
        </trans-unit>
        <trans-unit id="135ded3863783d8928ef227ade2a02750a056b96" translate="yes" xml:space="preserve">
          <source>16#&amp;gt;</source>
          <target state="translated">16#&amp;gt;</target>
        </trans-unit>
        <trans-unit id="57eb5329e2eda0121560e288522e92afc0bf54f9" translate="yes" xml:space="preserve">
          <source>16#&amp;gt;=</source>
          <target state="translated">16#&amp;gt;=</target>
        </trans-unit>
        <trans-unit id="56b81761f16cc3e79b4ff96908a050e50eb080c6" translate="yes" xml:space="preserve">
          <source>16#&amp;lt;</source>
          <target state="translated">16#&amp;lt;</target>
        </trans-unit>
        <trans-unit id="9c3f7b9f536cefbfd595e68c59757fc98bc38cfd" translate="yes" xml:space="preserve">
          <source>16#&amp;lt;=</source>
          <target state="translated">16#&amp;lt;=</target>
        </trans-unit>
        <trans-unit id="dbc0bb300e6917f153f6088b6905fc6e7570e48e" translate="yes" xml:space="preserve">
          <source>16#abs</source>
          <target state="translated">16#abs</target>
        </trans-unit>
        <trans-unit id="f22af8cfb13e1910d2f5a19b72451aa7840ed3e5" translate="yes" xml:space="preserve">
          <source>16#clone</source>
          <target state="translated">16#clone</target>
        </trans-unit>
        <trans-unit id="941d308771673f33a78772f90a4b534dbb0dc040" translate="yes" xml:space="preserve">
          <source>16#leading_zeros_count</source>
          <target state="translated">16#leading_zeros_count</target>
        </trans-unit>
        <trans-unit id="49ae5cffc96b6d52cc2857999a37ab721e01a49b" translate="yes" xml:space="preserve">
          <source>16#popcount</source>
          <target state="translated">16#popcount</target>
        </trans-unit>
        <trans-unit id="ab9a6f76245c38209e40eba712abcb41ce7f8f4c" translate="yes" xml:space="preserve">
          <source>16#to_f</source>
          <target state="translated">16#to_f</target>
        </trans-unit>
        <trans-unit id="5171ab4ef00469bf0fea211ab00efa5001bd4713" translate="yes" xml:space="preserve">
          <source>16#to_f!</source>
          <target state="translated">16#to_f!</target>
        </trans-unit>
        <trans-unit id="26864adfba5c39911b2f4e8081050398c54a3886" translate="yes" xml:space="preserve">
          <source>16#to_f32</source>
          <target state="translated">16#to_f32</target>
        </trans-unit>
        <trans-unit id="c7bd9ed60fd4df65105546192789131352f21b82" translate="yes" xml:space="preserve">
          <source>16#to_f32!</source>
          <target state="translated">16#to_f32!</target>
        </trans-unit>
        <trans-unit id="40166fdcf1f3859a4a0c75c58eea0ead014e08dc" translate="yes" xml:space="preserve">
          <source>16#to_f64</source>
          <target state="translated">16#to_f64</target>
        </trans-unit>
        <trans-unit id="845b9dc398957e6550d356179c2c8fed59a4f45a" translate="yes" xml:space="preserve">
          <source>16#to_f64!</source>
          <target state="translated">16#to_f64!</target>
        </trans-unit>
        <trans-unit id="9aa3f09f7bc6e6baddf79700f2b0fae25caffbab" translate="yes" xml:space="preserve">
          <source>16#to_i</source>
          <target state="translated">16#to_i</target>
        </trans-unit>
        <trans-unit id="690da5ef4328de78cb5813625c564d3f75a14c3e" translate="yes" xml:space="preserve">
          <source>16#to_i!</source>
          <target state="translated">16#to_i!</target>
        </trans-unit>
        <trans-unit id="9c7d44c52816f45b91aa139b3f27e805a8db9549" translate="yes" xml:space="preserve">
          <source>16#to_i128</source>
          <target state="translated">16#to_i128</target>
        </trans-unit>
        <trans-unit id="ce1f98caeffb34d0ccd2a6614963cfd7914dc8f2" translate="yes" xml:space="preserve">
          <source>16#to_i128!</source>
          <target state="translated">16#to_i128!</target>
        </trans-unit>
        <trans-unit id="b15cf83b5e1d948bfde6689ecd1fea3e46bb4c5d" translate="yes" xml:space="preserve">
          <source>16#to_i16</source>
          <target state="translated">16#to_i16</target>
        </trans-unit>
        <trans-unit id="bf5f7c239bec571bc2f9d95bc4762ef3e0c0ec8f" translate="yes" xml:space="preserve">
          <source>16#to_i16!</source>
          <target state="translated">16#to_i16!</target>
        </trans-unit>
        <trans-unit id="89d1a2b112f3e6205fe59c1ad5da1279748e6035" translate="yes" xml:space="preserve">
          <source>16#to_i32</source>
          <target state="translated">16#to_i32</target>
        </trans-unit>
        <trans-unit id="96c2d6e2d47eed2bd37bda534652eaa88162491b" translate="yes" xml:space="preserve">
          <source>16#to_i32!</source>
          <target state="translated">16#to_i32!</target>
        </trans-unit>
        <trans-unit id="b874421aa581abacb57f7125a1a8cd45880dde27" translate="yes" xml:space="preserve">
          <source>16#to_i64</source>
          <target state="translated">16#to_i64</target>
        </trans-unit>
        <trans-unit id="6182f795cc3d9aa95d602585f7055de8493203f7" translate="yes" xml:space="preserve">
          <source>16#to_i64!</source>
          <target state="translated">16#to_i64!</target>
        </trans-unit>
        <trans-unit id="4b145219a6be1cf21faef45d2e9792f5a6a82e7f" translate="yes" xml:space="preserve">
          <source>16#to_i8</source>
          <target state="translated">16#to_i8</target>
        </trans-unit>
        <trans-unit id="449bb9cc361beb68e16a464ddb410932093fbcab" translate="yes" xml:space="preserve">
          <source>16#to_i8!</source>
          <target state="translated">16#to_i8!</target>
        </trans-unit>
        <trans-unit id="ba1626cd246748efa7d16ea9473339378b88a304" translate="yes" xml:space="preserve">
          <source>16#to_u</source>
          <target state="translated">16#to_u</target>
        </trans-unit>
        <trans-unit id="c86bc6fa5ec380574986b5d487fde4c6d3e49815" translate="yes" xml:space="preserve">
          <source>16#to_u!</source>
          <target state="translated">16#to_u!</target>
        </trans-unit>
        <trans-unit id="b8681a709009ed56a7d663cd3dfa09af71fd896f" translate="yes" xml:space="preserve">
          <source>16#to_u128</source>
          <target state="translated">16#to_u128</target>
        </trans-unit>
        <trans-unit id="e1205e2f5adc018ce2e9f9aa6ecd4276a5ba41c4" translate="yes" xml:space="preserve">
          <source>16#to_u128!</source>
          <target state="translated">16#to_u128!</target>
        </trans-unit>
        <trans-unit id="54c2e928f0618b656948a9d32b4a28cc50c21c3b" translate="yes" xml:space="preserve">
          <source>16#to_u16</source>
          <target state="translated">16#to_u16</target>
        </trans-unit>
        <trans-unit id="7f4577b195137f11bc76813da753e544f298e4ba" translate="yes" xml:space="preserve">
          <source>16#to_u16!</source>
          <target state="translated">16#to_u16!</target>
        </trans-unit>
        <trans-unit id="188028793b8074e86b21783932aa1afd9ce2ec25" translate="yes" xml:space="preserve">
          <source>16#to_u32</source>
          <target state="translated">16#to_u32</target>
        </trans-unit>
        <trans-unit id="5c3042d4b85e566e413b7b8cc938c00bfcb6d76e" translate="yes" xml:space="preserve">
          <source>16#to_u32!</source>
          <target state="translated">16#to_u32!</target>
        </trans-unit>
        <trans-unit id="dfb52f7b460e6f463c3414a3a8fc26737d61d220" translate="yes" xml:space="preserve">
          <source>16#to_u64</source>
          <target state="translated">16#to_u64</target>
        </trans-unit>
        <trans-unit id="a217c2076974b84244982d426c29b1b3a026c81e" translate="yes" xml:space="preserve">
          <source>16#to_u64!</source>
          <target state="translated">16#to_u64!</target>
        </trans-unit>
        <trans-unit id="96d7f4e44f683ae90446948e4cba176887c6ff05" translate="yes" xml:space="preserve">
          <source>16#to_u8</source>
          <target state="translated">16#to_u8</target>
        </trans-unit>
        <trans-unit id="39d1c607dcbc21f68b00743060d744403612d443" translate="yes" xml:space="preserve">
          <source>16#to_u8!</source>
          <target state="translated">16#to_u8!</target>
        </trans-unit>
        <trans-unit id="61a600e7b7c368f757813831644d70b676ebcd4c" translate="yes" xml:space="preserve">
          <source>16#trailing_zeros_count</source>
          <target state="translated">16#trailing_zeros_count</target>
        </trans-unit>
        <trans-unit id="473bec212b7549c6de4fabe802eda87ce82eb96b" translate="yes" xml:space="preserve">
          <source>16#unsafe_chr</source>
          <target state="translated">16#unsafe_chr</target>
        </trans-unit>
        <trans-unit id="bffc20819b872edf2102033d53f0450b7c853235" translate="yes" xml:space="preserve">
          <source>16.from_json_object_key?</source>
          <target state="translated">16.from_json_object_key?</target>
        </trans-unit>
        <trans-unit id="9f8db41eba22646c68cf933a6fd4eeef23d2569d" translate="yes" xml:space="preserve">
          <source>16.new</source>
          <target state="translated">16.new</target>
        </trans-unit>
        <trans-unit id="41eb2779c57f9c8fb43fd10a04b63ce82211aa05" translate="yes" xml:space="preserve">
          <source>16.new!</source>
          <target state="translated">16.new!</target>
        </trans-unit>
        <trans-unit id="af75a4b6e069123bf75cc229fbd196cba664eb0f" translate="yes" xml:space="preserve">
          <source>2. Assigning the result of invoking the class method &lt;code&gt;new&lt;/code&gt;</source>
          <target state="translated">2.分配调用类方法 &lt;code&gt;new&lt;/code&gt; 的结果</target>
        </trans-unit>
        <trans-unit id="fd6c393ac0c88bac12121df2960c74d2e73ae78f" translate="yes" xml:space="preserve">
          <source>2&lt;sup&gt;63&lt;/sup&gt; - 1</source>
          <target state="translated">2 &lt;sup&gt;63&lt;/sup&gt; - 1</target>
        </trans-unit>
        <trans-unit id="f50c5d38d8dbb8072ec0afd28d220883c112873f" translate="yes" xml:space="preserve">
          <source>2&lt;sup&gt;64&lt;/sup&gt; - 1</source>
          <target state="translated">2 &lt;sup&gt;64&lt;/sup&gt; - 1</target>
        </trans-unit>
        <trans-unit id="5f609e09926aaf5f5bf7bed498825ce2bf3eb0c1" translate="yes" xml:space="preserve">
          <source>3. Assigning a variable that is a method argument with a type restriction</source>
          <target state="translated">3.给作为方法参数的变量分配一个类型限制。</target>
        </trans-unit>
        <trans-unit id="71255c0163d9f762758d7291b4be15ba382de6d0" translate="yes" xml:space="preserve">
          <source>32#&amp;amp;</source>
          <target state="translated">32#&amp;amp;</target>
        </trans-unit>
        <trans-unit id="ba236d98ef8316bcc49fa6e8891a8ff711a16a38" translate="yes" xml:space="preserve">
          <source>32#&amp;amp;*</source>
          <target state="translated">32#&amp;amp;*</target>
        </trans-unit>
        <trans-unit id="c06ec447caa2b2c79a4dfc5b9d6dd26c228def11" translate="yes" xml:space="preserve">
          <source>32#&amp;amp;+</source>
          <target state="translated">32#&amp;amp;+</target>
        </trans-unit>
        <trans-unit id="758e641eb62fd0e17f594586ba4d73090a8961e5" translate="yes" xml:space="preserve">
          <source>32#&amp;amp;-</source>
          <target state="translated">32#&amp;amp;-</target>
        </trans-unit>
        <trans-unit id="63e8db67aef25589bbf378c5863bf5df39d15577" translate="yes" xml:space="preserve">
          <source>32#&amp;gt;</source>
          <target state="translated">32#&amp;gt;</target>
        </trans-unit>
        <trans-unit id="324bf711a475b9f7d705e64a36934152a08a439f" translate="yes" xml:space="preserve">
          <source>32#&amp;gt;=</source>
          <target state="translated">32#&amp;gt;=</target>
        </trans-unit>
        <trans-unit id="1efc7c11a540f89a06076016209a692e7066771e" translate="yes" xml:space="preserve">
          <source>32#&amp;lt;</source>
          <target state="translated">32#&amp;lt;</target>
        </trans-unit>
        <trans-unit id="0827b844d9b575ce89eb6d2e2559aad199b26ba6" translate="yes" xml:space="preserve">
          <source>32#&amp;lt;=</source>
          <target state="translated">32#&amp;lt;=</target>
        </trans-unit>
        <trans-unit id="04caa2d4259a2d3ea1b1ff958b4cd1e94ef3b74f" translate="yes" xml:space="preserve">
          <source>32#abs</source>
          <target state="translated">32#abs</target>
        </trans-unit>
        <trans-unit id="a2e32f3ee29992be0d90bb0ffa6637d6ad0beb84" translate="yes" xml:space="preserve">
          <source>32#ceil</source>
          <target state="translated">32#ceil</target>
        </trans-unit>
        <trans-unit id="1005f68bc540413f2f0adc097f1d1ee47c1d834e" translate="yes" xml:space="preserve">
          <source>32#clone</source>
          <target state="translated">32#clone</target>
        </trans-unit>
        <trans-unit id="9c92d2666dcf327bc20cc1fefb3c0b037b3605ba" translate="yes" xml:space="preserve">
          <source>32#fdiv</source>
          <target state="translated">32#fdiv</target>
        </trans-unit>
        <trans-unit id="fb829dae813be69aab4ac86759e1b13fe8669121" translate="yes" xml:space="preserve">
          <source>32#floor</source>
          <target state="translated">32#floor</target>
        </trans-unit>
        <trans-unit id="342b23cd7762b922dcab628a8bbd05c209cdc469" translate="yes" xml:space="preserve">
          <source>32#leading_zeros_count</source>
          <target state="translated">32#leading_zeros_count</target>
        </trans-unit>
        <trans-unit id="0c1e9c39da39150b9c0f80d118b1a10b9dbbeaac" translate="yes" xml:space="preserve">
          <source>32#popcount</source>
          <target state="translated">32#popcount</target>
        </trans-unit>
        <trans-unit id="bfa11cb0eafe8c01f9e8f53c0b58f53472d9339c" translate="yes" xml:space="preserve">
          <source>32#round</source>
          <target state="translated">32#round</target>
        </trans-unit>
        <trans-unit id="a1274b81f0312985c1f7f272055ab26d2374a2be" translate="yes" xml:space="preserve">
          <source>32#to_f</source>
          <target state="translated">32#to_f</target>
        </trans-unit>
        <trans-unit id="148bbf30f8f5fd60320ed04119db2b076f8a2487" translate="yes" xml:space="preserve">
          <source>32#to_f!</source>
          <target state="translated">32#to_f!</target>
        </trans-unit>
        <trans-unit id="6bdcd4892df45f2cd510f842a51772afca7c7790" translate="yes" xml:space="preserve">
          <source>32#to_f32</source>
          <target state="translated">32#to_f32</target>
        </trans-unit>
        <trans-unit id="d21557e9e3b8f827729c05ec32b09c2bddb75762" translate="yes" xml:space="preserve">
          <source>32#to_f32!</source>
          <target state="translated">32#to_f32!</target>
        </trans-unit>
        <trans-unit id="69cf90d0a2fb66c9c448521f4dba977a9d1ff693" translate="yes" xml:space="preserve">
          <source>32#to_f64</source>
          <target state="translated">32#to_f64</target>
        </trans-unit>
        <trans-unit id="75ac7715a044def510c9a875083a2638e85f8dbc" translate="yes" xml:space="preserve">
          <source>32#to_f64!</source>
          <target state="translated">32#to_f64!</target>
        </trans-unit>
        <trans-unit id="a6f9df695e57f66fd1c1d9ceb897b08baa1f8831" translate="yes" xml:space="preserve">
          <source>32#to_i</source>
          <target state="translated">32#to_i</target>
        </trans-unit>
        <trans-unit id="6286eb935d4887e63e2cd82224f1df960168aa83" translate="yes" xml:space="preserve">
          <source>32#to_i!</source>
          <target state="translated">32#to_i!</target>
        </trans-unit>
        <trans-unit id="ed382511d38b01341da2da455bfb7aa232b6dcf1" translate="yes" xml:space="preserve">
          <source>32#to_i128</source>
          <target state="translated">32#to_i128</target>
        </trans-unit>
        <trans-unit id="545385b8f8c8394132af62acdc2065da5241c604" translate="yes" xml:space="preserve">
          <source>32#to_i128!</source>
          <target state="translated">32#to_i128!</target>
        </trans-unit>
        <trans-unit id="558908642ded2b18d9e54f6995f3849191b90e77" translate="yes" xml:space="preserve">
          <source>32#to_i16</source>
          <target state="translated">32#to_i16</target>
        </trans-unit>
        <trans-unit id="5295d184bde0ff8432d533e088f4562ce1cac588" translate="yes" xml:space="preserve">
          <source>32#to_i16!</source>
          <target state="translated">32#to_i16!</target>
        </trans-unit>
        <trans-unit id="75dcc53b47fe1e38ea1f64a91b5e5cfc3ec74322" translate="yes" xml:space="preserve">
          <source>32#to_i32</source>
          <target state="translated">32#to_i32</target>
        </trans-unit>
        <trans-unit id="3edd489fd7847b879a032558a711e0d953d53c33" translate="yes" xml:space="preserve">
          <source>32#to_i32!</source>
          <target state="translated">32#to_i32!</target>
        </trans-unit>
        <trans-unit id="de6170cc1ef95ac176eedd315cfa1f0ab06deeeb" translate="yes" xml:space="preserve">
          <source>32#to_i64</source>
          <target state="translated">32#to_i64</target>
        </trans-unit>
        <trans-unit id="36c74403fd7e45a903acf91f53e523e816843aa9" translate="yes" xml:space="preserve">
          <source>32#to_i64!</source>
          <target state="translated">32#to_i64!</target>
        </trans-unit>
        <trans-unit id="11d578147f88f7f6f5a9f3a660025f10ed885509" translate="yes" xml:space="preserve">
          <source>32#to_i8</source>
          <target state="translated">32#to_i8</target>
        </trans-unit>
        <trans-unit id="e4c2c78a179b0628c02c46fa067662086f495b48" translate="yes" xml:space="preserve">
          <source>32#to_i8!</source>
          <target state="translated">32#to_i8!</target>
        </trans-unit>
        <trans-unit id="0bb8cc74f395d00bb1735bb1907d6df38a4bc74c" translate="yes" xml:space="preserve">
          <source>32#to_s</source>
          <target state="translated">32#to_s</target>
        </trans-unit>
        <trans-unit id="b1405f85017c311236b5fe0fa8f3ff86210cdcea" translate="yes" xml:space="preserve">
          <source>32#to_u</source>
          <target state="translated">32#to_u</target>
        </trans-unit>
        <trans-unit id="ad72182f351a791b53421029e7c18086329fce0a" translate="yes" xml:space="preserve">
          <source>32#to_u!</source>
          <target state="translated">32#to_u!</target>
        </trans-unit>
        <trans-unit id="147fe3fcf2d426f5458138297354efe9699a4811" translate="yes" xml:space="preserve">
          <source>32#to_u128</source>
          <target state="translated">32#to_u128</target>
        </trans-unit>
        <trans-unit id="a6233bc16f4c4039cb8bb34b54a5633dfc09cc45" translate="yes" xml:space="preserve">
          <source>32#to_u128!</source>
          <target state="translated">32#to_u128!</target>
        </trans-unit>
        <trans-unit id="21ab444a0d5f06e65e58c7df52a2aec46c08c2c9" translate="yes" xml:space="preserve">
          <source>32#to_u16</source>
          <target state="translated">32#to_u16</target>
        </trans-unit>
        <trans-unit id="60b4a6225e07e93b2062cf7646c37b3af7092226" translate="yes" xml:space="preserve">
          <source>32#to_u16!</source>
          <target state="translated">32#to_u16!</target>
        </trans-unit>
        <trans-unit id="f9cbc493f959376cebdb7ad8255c1884ae2bab12" translate="yes" xml:space="preserve">
          <source>32#to_u32</source>
          <target state="translated">32#to_u32</target>
        </trans-unit>
        <trans-unit id="067759bb09db9b30869088eabf5ec11228df378f" translate="yes" xml:space="preserve">
          <source>32#to_u32!</source>
          <target state="translated">32#to_u32!</target>
        </trans-unit>
        <trans-unit id="3017019a8bbce634b3330b7ad4003a0c6e14dbb7" translate="yes" xml:space="preserve">
          <source>32#to_u64</source>
          <target state="translated">32#to_u64</target>
        </trans-unit>
        <trans-unit id="7ea9b93d9d20e6f8aa5d4c5acaf2438b2cf33c6f" translate="yes" xml:space="preserve">
          <source>32#to_u64!</source>
          <target state="translated">32#to_u64!</target>
        </trans-unit>
        <trans-unit id="b6900958e72fd655b96a90d8547e2edf0377a490" translate="yes" xml:space="preserve">
          <source>32#to_u8</source>
          <target state="translated">32#to_u8</target>
        </trans-unit>
        <trans-unit id="ee774551f243417c54d36942a26f27d76ed0b03b" translate="yes" xml:space="preserve">
          <source>32#to_u8!</source>
          <target state="translated">32#to_u8!</target>
        </trans-unit>
        <trans-unit id="0193ffdc9fd6c8d046a2b74d087e0c0c07869ec8" translate="yes" xml:space="preserve">
          <source>32#trailing_zeros_count</source>
          <target state="translated">32#trailing_zeros_count</target>
        </trans-unit>
        <trans-unit id="4ff00e602e60a3159002b1e34634b86e475ec60f" translate="yes" xml:space="preserve">
          <source>32#trunc</source>
          <target state="translated">32#trunc</target>
        </trans-unit>
        <trans-unit id="b9f15c06e91a55df754d06104f32a67df3152387" translate="yes" xml:space="preserve">
          <source>32#unsafe_chr</source>
          <target state="translated">32#unsafe_chr</target>
        </trans-unit>
        <trans-unit id="5de4326dc18e315601f771e52c6575be8f91acce" translate="yes" xml:space="preserve">
          <source>32.from_json_object_key?</source>
          <target state="translated">32.from_json_object_key?</target>
        </trans-unit>
        <trans-unit id="37b52800d407ac015249d17810cae88ae23711c3" translate="yes" xml:space="preserve">
          <source>32.new</source>
          <target state="translated">32.new</target>
        </trans-unit>
        <trans-unit id="f72a72fbcc310c85a4d580f01b7d3b8797a6919a" translate="yes" xml:space="preserve">
          <source>32.new!</source>
          <target state="translated">32.new!</target>
        </trans-unit>
        <trans-unit id="420a83e8d708036269dab25a1b772ebfff77dfd3" translate="yes" xml:space="preserve">
          <source>4. Assigning the result of a class method that has a return type restriction</source>
          <target state="translated">4.赋值一个有返回类型限制的类方法的结果。</target>
        </trans-unit>
        <trans-unit id="393493503e60a10f25f429f585f1b6821ca5afa3" translate="yes" xml:space="preserve">
          <source>5. Assigning a variable that is a method argument with a default value</source>
          <target state="translated">5.给作为方法参数的变量分配一个默认值。</target>
        </trans-unit>
        <trans-unit id="c9aa3e27210845798024ed3d4ef4a4478b15541c" translate="yes" xml:space="preserve">
          <source>5.0 (seconds)</source>
          <target state="translated">5.0(秒)</target>
        </trans-unit>
        <trans-unit id="961871582c7dcd4fcdb856c399c135d27ffba419" translate="yes" xml:space="preserve">
          <source>6. Assigning the result of invoking a &lt;code&gt;lib&lt;/code&gt; function</source>
          <target state="translated">6.分配调用 &lt;code&gt;lib&lt;/code&gt; 函数的结果</target>
        </trans-unit>
        <trans-unit id="97f56457272cb741d17b1f3ac520effa0b4664a4" translate="yes" xml:space="preserve">
          <source>64#&amp;amp;</source>
          <target state="translated">64#&amp;amp;</target>
        </trans-unit>
        <trans-unit id="87b73f6118be1d25f830ae23fca70818161377f7" translate="yes" xml:space="preserve">
          <source>64#&amp;amp;*</source>
          <target state="translated">64#&amp;amp;*</target>
        </trans-unit>
        <trans-unit id="4aa3bc79a2497be4dbf1fe6aac0c8df380e55289" translate="yes" xml:space="preserve">
          <source>64#&amp;amp;+</source>
          <target state="translated">64#&amp;amp;+</target>
        </trans-unit>
        <trans-unit id="c1c6dc11ed7495491d20f90a3a22bd90596418e0" translate="yes" xml:space="preserve">
          <source>64#&amp;amp;-</source>
          <target state="translated">64#&amp;amp;-</target>
        </trans-unit>
        <trans-unit id="83542c9168fd63202914e048ddc166be01b9a784" translate="yes" xml:space="preserve">
          <source>64#&amp;gt;</source>
          <target state="translated">64#&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7fa83469c1b34a7457e38c516ad29ce13b746143" translate="yes" xml:space="preserve">
          <source>64#&amp;gt;=</source>
          <target state="translated">64#&amp;gt;=</target>
        </trans-unit>
        <trans-unit id="5040b1dc294ef477d7364df09885be67f8ff90dc" translate="yes" xml:space="preserve">
          <source>64#&amp;lt;</source>
          <target state="translated">64#&amp;lt;</target>
        </trans-unit>
        <trans-unit id="0b18e2345fff35d8fc735d8fe2073ba579bd8aeb" translate="yes" xml:space="preserve">
          <source>64#&amp;lt;=</source>
          <target state="translated">64#&amp;lt;=</target>
        </trans-unit>
        <trans-unit id="69af89fd6fb6890e78ab8ca86a48b767480bc383" translate="yes" xml:space="preserve">
          <source>64#abs</source>
          <target state="translated">64#abs</target>
        </trans-unit>
        <trans-unit id="752d32a96cdae4af951467ba952dab5e28c54908" translate="yes" xml:space="preserve">
          <source>64#ceil</source>
          <target state="translated">64#ceil</target>
        </trans-unit>
        <trans-unit id="996881555e3078df1074497b61068a16b91b28f5" translate="yes" xml:space="preserve">
          <source>64#clone</source>
          <target state="translated">64#clone</target>
        </trans-unit>
        <trans-unit id="f3512438ac98be55b0e2a0adf32933060cc67ad4" translate="yes" xml:space="preserve">
          <source>64#fdiv</source>
          <target state="translated">64#fdiv</target>
        </trans-unit>
        <trans-unit id="a873eb37f47e1e7f658bc0b6496a1dda728981f8" translate="yes" xml:space="preserve">
          <source>64#floor</source>
          <target state="translated">64#floor</target>
        </trans-unit>
        <trans-unit id="c60f69b5f09d3ff4a1b390b7bdb7e8c719db5294" translate="yes" xml:space="preserve">
          <source>64#leading_zeros_count</source>
          <target state="translated">64#leading_zeros_count</target>
        </trans-unit>
        <trans-unit id="5324765df1835eeade5377e3853b46caa693fc3d" translate="yes" xml:space="preserve">
          <source>64#popcount</source>
          <target state="translated">64#popcount</target>
        </trans-unit>
        <trans-unit id="9097d3efc3073b35d1b03b42024ffd9a925d01eb" translate="yes" xml:space="preserve">
          <source>64#round</source>
          <target state="translated">64#round</target>
        </trans-unit>
        <trans-unit id="27b3dec2e02baad866addf362f5ef740d3ee7422" translate="yes" xml:space="preserve">
          <source>64#to_f</source>
          <target state="translated">64#to_f</target>
        </trans-unit>
        <trans-unit id="f5e86c224515364a0c9d526309331cbb85231305" translate="yes" xml:space="preserve">
          <source>64#to_f!</source>
          <target state="translated">64#to_f!</target>
        </trans-unit>
        <trans-unit id="04593e26ccfd6d9c64bd52747d5f944040e3b915" translate="yes" xml:space="preserve">
          <source>64#to_f32</source>
          <target state="translated">64#to_f32</target>
        </trans-unit>
        <trans-unit id="cf8805abac07447dbedfad7268787ecaf3bf5ed3" translate="yes" xml:space="preserve">
          <source>64#to_f32!</source>
          <target state="translated">64#to_f32!</target>
        </trans-unit>
        <trans-unit id="e9ba602eee66f145d41d0c004b48bf3e7d05e2da" translate="yes" xml:space="preserve">
          <source>64#to_f64</source>
          <target state="translated">64#to_f64</target>
        </trans-unit>
        <trans-unit id="fcf302d5ecb033b5fb7de470b8f611838be49d93" translate="yes" xml:space="preserve">
          <source>64#to_f64!</source>
          <target state="translated">64#to_f64!</target>
        </trans-unit>
        <trans-unit id="c80fc7c5804b16581ea0a9ea77d3856417f831d1" translate="yes" xml:space="preserve">
          <source>64#to_i</source>
          <target state="translated">64#to_i</target>
        </trans-unit>
        <trans-unit id="5dc8e907f1954acad0584653d056582403fe5381" translate="yes" xml:space="preserve">
          <source>64#to_i!</source>
          <target state="translated">64#to_i!</target>
        </trans-unit>
        <trans-unit id="93276bca10511b5dc9087455fd3d713b9d327686" translate="yes" xml:space="preserve">
          <source>64#to_i128</source>
          <target state="translated">64#to_i128</target>
        </trans-unit>
        <trans-unit id="54295fc1f2d4407baf17ac3ab214e694b11b0898" translate="yes" xml:space="preserve">
          <source>64#to_i128!</source>
          <target state="translated">64#to_i128!</target>
        </trans-unit>
        <trans-unit id="1543ba77ce1b2c2be74132a559036f822ddd0d17" translate="yes" xml:space="preserve">
          <source>64#to_i16</source>
          <target state="translated">64#to_i16</target>
        </trans-unit>
        <trans-unit id="ec875bb5acc16d934311f5482808f7a2c7193b22" translate="yes" xml:space="preserve">
          <source>64#to_i16!</source>
          <target state="translated">64#to_i16!</target>
        </trans-unit>
        <trans-unit id="f31f5426ef8b5ccfb7c7a925eb658c72029be6d7" translate="yes" xml:space="preserve">
          <source>64#to_i32</source>
          <target state="translated">64#to_i32</target>
        </trans-unit>
        <trans-unit id="df44f568b55a2fba204831e974094ccc4a640193" translate="yes" xml:space="preserve">
          <source>64#to_i32!</source>
          <target state="translated">64#to_i32!</target>
        </trans-unit>
        <trans-unit id="8669ff72588d2a60340f1a42d838db13e7bd11a1" translate="yes" xml:space="preserve">
          <source>64#to_i64</source>
          <target state="translated">64#to_i64</target>
        </trans-unit>
        <trans-unit id="3f042a32c56caf91339372942851ae8b9555d39e" translate="yes" xml:space="preserve">
          <source>64#to_i64!</source>
          <target state="translated">64#to_i64!</target>
        </trans-unit>
        <trans-unit id="bfa9bd59b779c06d45e6fe1d952b74826f64e86a" translate="yes" xml:space="preserve">
          <source>64#to_i8</source>
          <target state="translated">64#to_i8</target>
        </trans-unit>
        <trans-unit id="17ba9967dc176ad3f39a52907ada6fa80a2ee53e" translate="yes" xml:space="preserve">
          <source>64#to_i8!</source>
          <target state="translated">64#to_i8!</target>
        </trans-unit>
        <trans-unit id="72774ce2148312d84421749be8177e8b39fa0ce5" translate="yes" xml:space="preserve">
          <source>64#to_s</source>
          <target state="translated">64#to_s</target>
        </trans-unit>
        <trans-unit id="ac8c9d972496c24ee03b0b9f4422c64ce19d7f4a" translate="yes" xml:space="preserve">
          <source>64#to_u</source>
          <target state="translated">64#to_u</target>
        </trans-unit>
        <trans-unit id="e8f4cc0f6100484ac85bd63c2a7ab24e2c3b6cbd" translate="yes" xml:space="preserve">
          <source>64#to_u!</source>
          <target state="translated">64#to_u!</target>
        </trans-unit>
        <trans-unit id="6667328143d2d3e5930508090907fa38b1dff196" translate="yes" xml:space="preserve">
          <source>64#to_u128</source>
          <target state="translated">64#to_u128</target>
        </trans-unit>
        <trans-unit id="06c06a2e7c267b8f9a941d4c1f0bab2856f532bf" translate="yes" xml:space="preserve">
          <source>64#to_u128!</source>
          <target state="translated">64#to_u128!</target>
        </trans-unit>
        <trans-unit id="a6cd0d9c7ce7f3e095968d2c73734d620939e11e" translate="yes" xml:space="preserve">
          <source>64#to_u16</source>
          <target state="translated">64#to_u16</target>
        </trans-unit>
        <trans-unit id="6d2eb254539fe38f8f68aaae421b58006036d3d0" translate="yes" xml:space="preserve">
          <source>64#to_u16!</source>
          <target state="translated">64#to_u16!</target>
        </trans-unit>
        <trans-unit id="eb009dccfd4e5dddc10732ea24e21959ed058e4a" translate="yes" xml:space="preserve">
          <source>64#to_u32</source>
          <target state="translated">64#to_u32</target>
        </trans-unit>
        <trans-unit id="430543d1a09f70401a3ddc1a0cc6e2cb510d1c55" translate="yes" xml:space="preserve">
          <source>64#to_u32!</source>
          <target state="translated">64#to_u32!</target>
        </trans-unit>
        <trans-unit id="d0ae544b4bf204bd13119ea85814e3c6f4e27172" translate="yes" xml:space="preserve">
          <source>64#to_u64</source>
          <target state="translated">64#to_u64</target>
        </trans-unit>
        <trans-unit id="ce70add0aa2b0e86949fd9a28c4b194de5bd6e97" translate="yes" xml:space="preserve">
          <source>64#to_u64!</source>
          <target state="translated">64#to_u64!</target>
        </trans-unit>
        <trans-unit id="f652b69eb221fb0dc0845dc811bf25aafe75f2fc" translate="yes" xml:space="preserve">
          <source>64#to_u8</source>
          <target state="translated">64#to_u8</target>
        </trans-unit>
        <trans-unit id="480c026767155cee7432771a1665ba3061d9713e" translate="yes" xml:space="preserve">
          <source>64#to_u8!</source>
          <target state="translated">64#to_u8!</target>
        </trans-unit>
        <trans-unit id="974a9317c3e65e5155abf8bae8d0b966b59c81a9" translate="yes" xml:space="preserve">
          <source>64#trailing_zeros_count</source>
          <target state="translated">64#trailing_zeros_count</target>
        </trans-unit>
        <trans-unit id="d7ebb427cb07eb93fbd65662f354e16841a4673a" translate="yes" xml:space="preserve">
          <source>64#trunc</source>
          <target state="translated">64#trunc</target>
        </trans-unit>
        <trans-unit id="0f26b8c28cab948a6238073aefa1942d1d520069" translate="yes" xml:space="preserve">
          <source>64#unsafe_chr</source>
          <target state="translated">64#unsafe_chr</target>
        </trans-unit>
        <trans-unit id="bb90da14972bc7a17a0842abfbdc9e025d51e279" translate="yes" xml:space="preserve">
          <source>64.from_json_object_key?</source>
          <target state="translated">64.from_json_object_key?</target>
        </trans-unit>
        <trans-unit id="06e0c0ac5d077e19f08ffa19aa15e3d8b5c929c7" translate="yes" xml:space="preserve">
          <source>64.new</source>
          <target state="translated">64.new</target>
        </trans-unit>
        <trans-unit id="88e0af1fe995eb78785f025a11b3d96a4aff8c79" translate="yes" xml:space="preserve">
          <source>64.new!</source>
          <target state="translated">64.new!</target>
        </trans-unit>
        <trans-unit id="6e3256d5b94e333e528701f4d1a59ebd44d3891a" translate="yes" xml:space="preserve">
          <source>7. Using an &lt;code&gt;out&lt;/code&gt; lib expression</source>
          <target state="translated">7.使用 &lt;code&gt;out&lt;/code&gt; lib表达式</target>
        </trans-unit>
        <trans-unit id="9814036e919370d0f7b028796b86c928ee836d0d" translate="yes" xml:space="preserve">
          <source>8#&amp;amp;</source>
          <target state="translated">8#&amp;amp;</target>
        </trans-unit>
        <trans-unit id="080afc5d7d3e429be8cd22933292fbfd58bc569d" translate="yes" xml:space="preserve">
          <source>8#&amp;amp;*</source>
          <target state="translated">8#&amp;amp;*</target>
        </trans-unit>
        <trans-unit id="50906057386b92e5109f9384d8d70e5dc661cf9f" translate="yes" xml:space="preserve">
          <source>8#&amp;amp;+</source>
          <target state="translated">8#&amp;amp;+</target>
        </trans-unit>
        <trans-unit id="5e00bb28da81ea0b8d8a811ca99af16adee1e9d4" translate="yes" xml:space="preserve">
          <source>8#&amp;amp;-</source>
          <target state="translated">8#&amp;amp;-</target>
        </trans-unit>
        <trans-unit id="fef4f15145248a5902dd65ba0447be4a0db50629" translate="yes" xml:space="preserve">
          <source>8#&amp;gt;</source>
          <target state="translated">8#&amp;gt;</target>
        </trans-unit>
        <trans-unit id="09b574959b897aeb316832d34430e84f9f2a22c6" translate="yes" xml:space="preserve">
          <source>8#&amp;gt;=</source>
          <target state="translated">8#&amp;gt;=</target>
        </trans-unit>
        <trans-unit id="95666984c077637db4c0489b1ea625b726e10e7e" translate="yes" xml:space="preserve">
          <source>8#&amp;lt;</source>
          <target state="translated">8#&amp;lt;</target>
        </trans-unit>
        <trans-unit id="9cac8a83b62b5aff72c72602f4a4fa03a596506e" translate="yes" xml:space="preserve">
          <source>8#&amp;lt;=</source>
          <target state="translated">8#&amp;lt;=</target>
        </trans-unit>
        <trans-unit id="b301f5fdea7cf0e84260fb71c2d774e3fa811d78" translate="yes" xml:space="preserve">
          <source>8#clone</source>
          <target state="translated">8#clone</target>
        </trans-unit>
        <trans-unit id="9a00a79a35ab390bfca1400a8a21adac7557341d" translate="yes" xml:space="preserve">
          <source>8#leading_zeros_count</source>
          <target state="translated">8#leading_zeros_count</target>
        </trans-unit>
        <trans-unit id="5a0b052448ba04ab800a022604530101eda1ee8e" translate="yes" xml:space="preserve">
          <source>8#popcount</source>
          <target state="translated">8#popcount</target>
        </trans-unit>
        <trans-unit id="a09baffc4c348428469f251ca2c832bbdfd5a4cc" translate="yes" xml:space="preserve">
          <source>8#to_f</source>
          <target state="translated">8#to_f</target>
        </trans-unit>
        <trans-unit id="41229145c7e65c1cf9b04693cfa27183f1ed3fd8" translate="yes" xml:space="preserve">
          <source>8#to_f!</source>
          <target state="translated">8#to_f!</target>
        </trans-unit>
        <trans-unit id="0564d09241b345bd0fba07c4a5ca86cec0c1b480" translate="yes" xml:space="preserve">
          <source>8#to_f32</source>
          <target state="translated">8#to_f32</target>
        </trans-unit>
        <trans-unit id="4dab2b92c27a88dcd43bd738c509112a149d4e45" translate="yes" xml:space="preserve">
          <source>8#to_f32!</source>
          <target state="translated">8#to_f32!</target>
        </trans-unit>
        <trans-unit id="7f032e583202c69c3fdc3b0111a806d239f1ebfe" translate="yes" xml:space="preserve">
          <source>8#to_f64</source>
          <target state="translated">8#to_f64</target>
        </trans-unit>
        <trans-unit id="058387fd0e594e76c7974ab4f88e5b66fe52d223" translate="yes" xml:space="preserve">
          <source>8#to_f64!</source>
          <target state="translated">8#to_f64!</target>
        </trans-unit>
        <trans-unit id="566455b5a5a3ffd1e4adf28df1d50b06406944a9" translate="yes" xml:space="preserve">
          <source>8#to_i</source>
          <target state="translated">8#to_i</target>
        </trans-unit>
        <trans-unit id="bcff574208f577b89db69b88e318dc3eca358772" translate="yes" xml:space="preserve">
          <source>8#to_i!</source>
          <target state="translated">8#to_i!</target>
        </trans-unit>
        <trans-unit id="b0cace6f7b6f544aa54ebe7079f294bf835c79ca" translate="yes" xml:space="preserve">
          <source>8#to_i128</source>
          <target state="translated">8#to_i128</target>
        </trans-unit>
        <trans-unit id="40b9e6c9fbd0c07a61ca9482dbeeab5ebb4bb0d6" translate="yes" xml:space="preserve">
          <source>8#to_i128!</source>
          <target state="translated">8#to_i128!</target>
        </trans-unit>
        <trans-unit id="fad09f6aba80ec0e3db8fee93b97925c7af536aa" translate="yes" xml:space="preserve">
          <source>8#to_i16</source>
          <target state="translated">8#to_i16</target>
        </trans-unit>
        <trans-unit id="8b449344663931daa7bbe67d5308a507928b3568" translate="yes" xml:space="preserve">
          <source>8#to_i16!</source>
          <target state="translated">8#to_i16!</target>
        </trans-unit>
        <trans-unit id="cb347f0466bc5d241df28df4d97b1d917eee35ca" translate="yes" xml:space="preserve">
          <source>8#to_i32</source>
          <target state="translated">8#to_i32</target>
        </trans-unit>
        <trans-unit id="4753ac49c5415030aa9e2f305a1c9d7dd1209680" translate="yes" xml:space="preserve">
          <source>8#to_i32!</source>
          <target state="translated">8#to_i32!</target>
        </trans-unit>
        <trans-unit id="96726a53ed245718ad8622b3c218a739e5c0408e" translate="yes" xml:space="preserve">
          <source>8#to_i64</source>
          <target state="translated">8#to_i64</target>
        </trans-unit>
        <trans-unit id="aff32b1e3a71240992c6dc1d92fd331c5cb48eec" translate="yes" xml:space="preserve">
          <source>8#to_i64!</source>
          <target state="translated">8#to_i64!</target>
        </trans-unit>
        <trans-unit id="176e283da0d05986da9406a4a5b07eabd4310735" translate="yes" xml:space="preserve">
          <source>8#to_i8</source>
          <target state="translated">8#to_i8</target>
        </trans-unit>
        <trans-unit id="1a8262879dd352bc50a085a0978e89e88a54b18a" translate="yes" xml:space="preserve">
          <source>8#to_i8!</source>
          <target state="translated">8#to_i8!</target>
        </trans-unit>
        <trans-unit id="3dd19d145713456b940e25ac2d21c4f03ab58b4a" translate="yes" xml:space="preserve">
          <source>8#to_u</source>
          <target state="translated">8#to_u</target>
        </trans-unit>
        <trans-unit id="7dbb06bf9c7110208096317b49ec7f26d0a3c529" translate="yes" xml:space="preserve">
          <source>8#to_u!</source>
          <target state="translated">8#to_u!</target>
        </trans-unit>
        <trans-unit id="53fcea69cb397cf3094fc2bfce48f3f7324b6f03" translate="yes" xml:space="preserve">
          <source>8#to_u128</source>
          <target state="translated">8#to_u128</target>
        </trans-unit>
        <trans-unit id="adad134c4661d00e4e947025d440c7db0f048ca3" translate="yes" xml:space="preserve">
          <source>8#to_u128!</source>
          <target state="translated">8#to_u128!</target>
        </trans-unit>
        <trans-unit id="595527244b85b70b9c7b6bc7083c2b47c0608a1c" translate="yes" xml:space="preserve">
          <source>8#to_u16</source>
          <target state="translated">8#to_u16</target>
        </trans-unit>
        <trans-unit id="43481b574cccc1385a591a91479f4bcad0105bb1" translate="yes" xml:space="preserve">
          <source>8#to_u16!</source>
          <target state="translated">8#to_u16!</target>
        </trans-unit>
        <trans-unit id="da995e7378b063ba9c1b9379e269afcdd8985259" translate="yes" xml:space="preserve">
          <source>8#to_u32</source>
          <target state="translated">8#to_u32</target>
        </trans-unit>
        <trans-unit id="33c71b3aff1a714263cfd95adf2246b4cb7b6870" translate="yes" xml:space="preserve">
          <source>8#to_u32!</source>
          <target state="translated">8#to_u32!</target>
        </trans-unit>
        <trans-unit id="ba3f11cf866f27a2aa3c220ccab97f2f1bf4a25a" translate="yes" xml:space="preserve">
          <source>8#to_u64</source>
          <target state="translated">8#to_u64</target>
        </trans-unit>
        <trans-unit id="3f23ae5983b0f1440d4cfb3d978b8c93a5e27add" translate="yes" xml:space="preserve">
          <source>8#to_u64!</source>
          <target state="translated">8#to_u64!</target>
        </trans-unit>
        <trans-unit id="317dc8c5ab618c9a055f85c4f3f62621d9e21089" translate="yes" xml:space="preserve">
          <source>8#to_u8</source>
          <target state="translated">8#to_u8</target>
        </trans-unit>
        <trans-unit id="5cfc45de5587eb21a7103ff5215d526ba737d034" translate="yes" xml:space="preserve">
          <source>8#to_u8!</source>
          <target state="translated">8#to_u8!</target>
        </trans-unit>
        <trans-unit id="7f51ad2e1f293e4c5c232126631fd654d5880cc0" translate="yes" xml:space="preserve">
          <source>8#trailing_zeros_count</source>
          <target state="translated">8#trailing_zeros_count</target>
        </trans-unit>
        <trans-unit id="eb651879ff481af45b34f1e5716275e206ba53ba" translate="yes" xml:space="preserve">
          <source>8#unsafe_chr</source>
          <target state="translated">8#unsafe_chr</target>
        </trans-unit>
        <trans-unit id="48d5495356233458c7d18056beb9c2697989e16f" translate="yes" xml:space="preserve">
          <source>8.from_json_object_key?</source>
          <target state="translated">8.from_json_object_key?</target>
        </trans-unit>
        <trans-unit id="928b11a5446732205e9f7601ace99fd4c41aefa1" translate="yes" xml:space="preserve">
          <source>8.new!</source>
          <target state="translated">8.new!</target>
        </trans-unit>
        <trans-unit id="f803a4b62207ba11c7bd81baaff99969e73c9fb0" translate="yes" xml:space="preserve">
          <source>: removes next newline</source>
          <target state="translated">：删除下一个换行符</target>
        </trans-unit>
        <trans-unit id="25ed56c93872fc6d8361aa97ad67924ee3d8291d" translate="yes" xml:space="preserve">
          <source>: removes previous indentation</source>
          <target state="translated">：删除先前的缩进</target>
        </trans-unit>
        <trans-unit id="393c3944ec6beee37326402cfd4ea7ce4fb25090" translate="yes" xml:space="preserve">
          <source>:inherited:</source>
          <target state="translated">:inherited:</target>
        </trans-unit>
        <trans-unit id="8b176813313c518d7c8339cfe0b7f6a3400d9f47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#crystal-build&quot;&gt;&lt;code&gt;crystal build&lt;/code&gt;&lt;/a&gt;: build an executable</source>
          <target state="translated">&lt;a href=&quot;#crystal-build&quot;&gt; &lt;code&gt;crystal build&lt;/code&gt; &lt;/a&gt;：构建可执行文件</target>
        </trans-unit>
        <trans-unit id="8d5f7d5a380e626b567beb4064dc777bd97ff38e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#crystal-docs&quot;&gt;&lt;code&gt;crystal docs&lt;/code&gt;&lt;/a&gt;: generate documentation</source>
          <target state="translated">&lt;a href=&quot;#crystal-docs&quot;&gt; &lt;code&gt;crystal docs&lt;/code&gt; &lt;/a&gt;：生成文档</target>
        </trans-unit>
        <trans-unit id="cc211de4588144065692ba747b67c947eae29226" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#crystal-env&quot;&gt;&lt;code&gt;crystal env&lt;/code&gt;&lt;/a&gt;: print Crystal environment information</source>
          <target state="translated">&lt;a href=&quot;#crystal-env&quot;&gt; &lt;code&gt;crystal env&lt;/code&gt; &lt;/a&gt;：打印Crystal环境信息</target>
        </trans-unit>
        <trans-unit id="6d54f76b758bde501d30bce3ab6e2499216fbcc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#crystal-eval&quot;&gt;&lt;code&gt;crystal eval&lt;/code&gt;&lt;/a&gt;: eval code from args or standard input</source>
          <target state="translated">&lt;a href=&quot;#crystal-eval&quot;&gt; &lt;code&gt;crystal eval&lt;/code&gt; &lt;/a&gt;：来自args或标准输入的评估代码</target>
        </trans-unit>
        <trans-unit id="11b1b33230e0b9ceb813865abdfa1f31cfa29021" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#crystal-init&quot;&gt;&lt;code&gt;crystal init&lt;/code&gt;&lt;/a&gt;: generate a new project</source>
          <target state="translated">&lt;a href=&quot;#crystal-init&quot;&gt; &lt;code&gt;crystal init&lt;/code&gt; &lt;/a&gt;：生成一个新项目</target>
        </trans-unit>
        <trans-unit id="4e50e8f1e1f1f8fac39c6091ee6172693c43c210" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#crystal-play&quot;&gt;&lt;code&gt;crystal play&lt;/code&gt;&lt;/a&gt;: starts crystal playground server</source>
          <target state="translated">&lt;a href=&quot;#crystal-play&quot;&gt; &lt;code&gt;crystal play&lt;/code&gt; &lt;/a&gt;：启动水晶游乐场服务器</target>
        </trans-unit>
        <trans-unit id="b61d1ca339b1a50ddee6cb62f65ef98da4ef4e55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#crystal-run&quot;&gt;&lt;code&gt;crystal run&lt;/code&gt;&lt;/a&gt;: build and run program</source>
          <target state="translated">&lt;a href=&quot;#crystal-run&quot;&gt; &lt;code&gt;crystal run&lt;/code&gt; &lt;/a&gt;：生成并运行程序</target>
        </trans-unit>
        <trans-unit id="cae71f66ef0667d6b05f1fff2ae75886580d7267" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#crystal-spec&quot;&gt;&lt;code&gt;crystal spec&lt;/code&gt;&lt;/a&gt;: build and run specs</source>
          <target state="translated">&lt;a href=&quot;#crystal-spec&quot;&gt; &lt;code&gt;crystal spec&lt;/code&gt; &lt;/a&gt;：构建和运行规范</target>
        </trans-unit>
        <trans-unit id="7e0de48a86ae2631dca06458068715d9ac93d6de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#crystal-tool&quot;&gt;&lt;code&gt;crystal tool&lt;/code&gt;&lt;/a&gt;: run a compiler tool</source>
          <target state="translated">&lt;a href=&quot;#crystal-tool&quot;&gt; &lt;code&gt;crystal tool&lt;/code&gt; &lt;/a&gt;：运行编译器工具</target>
        </trans-unit>
        <trans-unit id="f5db147cbf12c10fb253318198bf02d62890c3dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#crystal-tool-format&quot;&gt;&lt;code&gt;crystal tool format&lt;/code&gt;&lt;/a&gt;: Format Crystal files</source>
          <target state="translated">&lt;a href=&quot;#crystal-tool-format&quot;&gt; &lt;code&gt;crystal tool format&lt;/code&gt; &lt;/a&gt;：格式化水晶文件</target>
        </trans-unit>
        <trans-unit id="9c38301eafe4e36f05590084bb006f6a8222b65e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#crystal-version&quot;&gt;&lt;code&gt;crystal version&lt;/code&gt;&lt;/a&gt;: show version</source>
          <target state="translated">&lt;a href=&quot;#crystal-version&quot;&gt; &lt;code&gt;crystal version&lt;/code&gt; &lt;/a&gt;：显示版</target>
        </trans-unit>
        <trans-unit id="c1dfa3f62b1d5554e22d912b794b3366ad9e5f70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shards-build&quot;&gt;&lt;code&gt;shards build&lt;/code&gt;&lt;/a&gt;: Builds an executable</source>
          <target state="translated">&lt;a href=&quot;#shards-build&quot;&gt; &lt;code&gt;shards build&lt;/code&gt; &lt;/a&gt;：构建可执行文件</target>
        </trans-unit>
        <trans-unit id="b1378068a1e85b9344373a726f39659627d0c4e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shards-check&quot;&gt;&lt;code&gt;shards check&lt;/code&gt;&lt;/a&gt;: Verifies dependencies are installed</source>
          <target state="translated">&lt;a href=&quot;#shards-check&quot;&gt; &lt;code&gt;shards check&lt;/code&gt; &lt;/a&gt;：验证是否已安装依赖项</target>
        </trans-unit>
        <trans-unit id="c87153b4988663265d62e2d9bc59c23178a76128" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shards-init&quot;&gt;&lt;code&gt;shards init&lt;/code&gt;&lt;/a&gt;: Generates a new &lt;code&gt;shard.yml&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;#shards-init&quot;&gt; &lt;code&gt;shards init&lt;/code&gt; &lt;/a&gt;：生成一个新的 &lt;code&gt;shard.yml&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3f7a4d352103534b338e31a60a8addc2cba7c40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shards-install&quot;&gt;&lt;code&gt;shards install&lt;/code&gt;&lt;/a&gt;: Resolves and installs dependencies</source>
          <target state="translated">&lt;a href=&quot;#shards-install&quot;&gt; &lt;code&gt;shards install&lt;/code&gt; &lt;/a&gt;：解析并安装依赖项</target>
        </trans-unit>
        <trans-unit id="35badb55d781d673d34d32b6f1bb4433bf2d0468" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shards-list&quot;&gt;&lt;code&gt;shards list&lt;/code&gt;&lt;/a&gt;: Lists installed dependencies</source>
          <target state="translated">&lt;a href=&quot;#shards-list&quot;&gt; &lt;code&gt;shards list&lt;/code&gt; &lt;/a&gt;：列出已安装的依赖项</target>
        </trans-unit>
        <trans-unit id="e7df6b64cea9905198158f86be0c2f697af0ef03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shards-prune&quot;&gt;&lt;code&gt;shards prune&lt;/code&gt;&lt;/a&gt;: Removes unused dependencies</source>
          <target state="translated">&lt;a href=&quot;#shards-prune&quot;&gt; &lt;code&gt;shards prune&lt;/code&gt; &lt;/a&gt;：删除未使用的依赖项</target>
        </trans-unit>
        <trans-unit id="7c93bbe21debd67bfeea4256350ef0db1ae667b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shards-update&quot;&gt;&lt;code&gt;shards update&lt;/code&gt;&lt;/a&gt;: Resolves and updates dependencies</source>
          <target state="translated">&lt;a href=&quot;#shards-update&quot;&gt; &lt;code&gt;shards update&lt;/code&gt; &lt;/a&gt;：解决并更新依赖关系</target>
        </trans-unit>
        <trans-unit id="7f697c70339bc8ee7b8777f1441e5da3500d3ede" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shards-version&quot;&gt;&lt;code&gt;shards version&lt;/code&gt;&lt;/a&gt;: Shows version of a shard</source>
          <target state="translated">&lt;a href=&quot;#shards-version&quot;&gt; &lt;code&gt;shards version&lt;/code&gt; &lt;/a&gt;：显示分片的版本</target>
        </trans-unit>
        <trans-unit id="6c5260a8524b0cf44e87e69c5f66e4093ebc65e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../comparable#%3C(other:T)-instance-method&quot;&gt;  &amp;lt;&lt;/a&gt;, &lt;a href=&quot;../../../comparable#%3C=(other:T)-instance-method&quot;&gt; &amp;lt;=(other : T) &amp;lt;=&lt;/a&gt;, &lt;a href=&quot;../../../comparable#(other:T)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : T) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;../../../comparable#==(other:T)-instance-method&quot;&gt; ==(other : T) ==&lt;/a&gt;, &lt;a href=&quot;../../../comparable#%3E(other:T)-instance-method&quot;&gt; &amp;gt;(other : T) &amp;gt;&lt;/a&gt;, &lt;a href=&quot;../../../comparable#%3E=(other:T)-instance-method&quot;&gt; &amp;gt;=(other : T) &amp;gt;=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../comparable#%3C(other:T)-instance-method&quot;&gt; &amp;lt;&lt;/a&gt;，&lt;a href=&quot;../../../comparable#%3C=(other:T)-instance-method&quot;&gt;&amp;lt;=（other：T）&amp;lt;=&lt;/a&gt;，&lt;a href=&quot;../../../comparable#(other:T)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：T）&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;../../../comparable#==(other:T)-instance-method&quot;&gt;==（other：T）==&lt;/a&gt;，&lt;a href=&quot;../../../comparable#%3E(other:T)-instance-method&quot;&gt;&amp;gt;（other：T）&amp;gt;&lt;/a&gt;，&lt;a href=&quot;../../../comparable#%3E=(other:T)-instance-method&quot;&gt;&amp;gt; =（other：T）&amp;gt; =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6819f42ff63c3aae075bda8b81b2b59ca4ae9d15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../comparable#%3C(other:T)-instance-method&quot;&gt;  &amp;lt;&lt;/a&gt;, &lt;a href=&quot;../../../comparable#%3C=(other:T)-instance-method&quot;&gt; &amp;lt;=(other : T) &amp;lt;=&lt;/a&gt;, &lt;a href=&quot;../../../comparable#(other:T)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : T) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;../../../comparable#==(other:T)-instance-method&quot;&gt; ==(other : T) ==&lt;/a&gt;, &lt;a href=&quot;../../../comparable#%3E(other:T)-instance-method&quot;&gt; &amp;gt;(other : T) &amp;gt;&lt;/a&gt;, &lt;a href=&quot;../../../comparable#%3E=(other:T)-instance-method&quot;&gt; &amp;gt;=(other : T) &amp;gt;=&lt;/a&gt;, &lt;a href=&quot;../../../comparable#clamp(min,max)-instance-method&quot;&gt; clamp(min, max)&lt;br/&gt;clamp(range : Range) clamp&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../comparable#%3C(other:T)-instance-method&quot;&gt;&amp;lt;&lt;/a&gt;，&lt;a href=&quot;../../../comparable#%3C=(other:T)-instance-method&quot;&gt;&amp;lt;=（other：T）&amp;lt;=&lt;/a&gt;，&lt;a href=&quot;../../../comparable#(other:T)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：T）&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;../../../comparable#==(other:T)-instance-method&quot;&gt;==（other：T）==&lt;/a&gt;，&lt;a href=&quot;../../../comparable#%3E(other:T)-instance-method&quot;&gt;&amp;gt;（other：T）&amp;gt;&lt;/a&gt;，&lt;a href=&quot;../../../comparable#%3E=(other:T)-instance-method&quot;&gt;&amp;gt; =（other：T）&amp;gt; =&lt;/a&gt;，&lt;a href=&quot;../../../comparable#clamp(min,max)-instance-method&quot;&gt;钳位（最小，最大）&lt;br/&gt;钳位（范围：范围）钳位&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f880a367a2bbf0864c3232d802e9f79dad38c8dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../enum#&amp;amp;(other:self)-instance-method&quot;&gt; &amp;amp;(other : self) &amp;amp;&lt;/a&gt;, &lt;a href=&quot;../../../enum#+(other:Int)-instance-method&quot;&gt; +(other : Int) +&lt;/a&gt;, &lt;a href=&quot;../../../enum#-(other:Int)-instance-method&quot;&gt; -(other : Int) -&lt;/a&gt;, &lt;a href=&quot;../../../enum#(other:self)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : self) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;../../../enum#==(other:self)-instance-method&quot;&gt; ==(other : self) ==&lt;/a&gt;, &lt;a href=&quot;../../../enum#%5E(other:self)-instance-method&quot;&gt; ^(other : self) ^&lt;/a&gt;, &lt;a href=&quot;../../../enum#clone-instance-method&quot;&gt; clone clone&lt;/a&gt;, &lt;a href=&quot;../../../enum#each(&amp;amp;)-instance-method&quot;&gt; each(&amp;amp;) each&lt;/a&gt;, &lt;a href=&quot;../../../enum#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;../../../enum#includes?(other:self)-instance-method&quot;&gt; includes?(other : self) includes?&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_f32:Float32-instance-method&quot;&gt; to_f32 : Float32 to_f32&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_f32!:Float32-instance-method&quot;&gt; to_f32! : Float32 to_f32!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_f64:Float64-instance-method&quot;&gt; to_f64 : Float64 to_f64&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_f64!:Float64-instance-method&quot;&gt; to_f64! : Float64 to_f64!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i:Int32-instance-method&quot;&gt; to_i : Int32 to_i&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i16:Int16-instance-method&quot;&gt; to_i16 : Int16 to_i16&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i16!:Int16-instance-method&quot;&gt; to_i16! : Int16 to_i16!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i32:Int32-instance-method&quot;&gt; to_i32 : Int32 to_i32&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i32!:Int32-instance-method&quot;&gt; to_i32! : Int32 to_i32!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i64:Int64-instance-method&quot;&gt; to_i64 : Int64 to_i64&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i64!:Int64-instance-method&quot;&gt; to_i64! : Int64 to_i64!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i8:Int8-instance-method&quot;&gt; to_i8 : Int8 to_i8&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i8!:Int8-instance-method&quot;&gt; to_i8! : Int8 to_i8!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_json(json:JSON::Builder)-instance-method&quot;&gt; to_json(json : JSON::Builder) to_json&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil&lt;br/&gt;to_s : String to_s&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u16:UInt16-instance-method&quot;&gt; to_u16 : UInt16 to_u16&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u16!:UInt16-instance-method&quot;&gt; to_u16! : UInt16 to_u16!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u32:UInt32-instance-method&quot;&gt; to_u32 : UInt32 to_u32&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u32!:UInt32-instance-method&quot;&gt; to_u32! : UInt32 to_u32!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u64:UInt64-instance-method&quot;&gt; to_u64 : UInt64 to_u64&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u64!:UInt64-instance-method&quot;&gt; to_u64! : UInt64 to_u64!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u8:UInt8-instance-method&quot;&gt; to_u8 : UInt8 to_u8&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u8!:UInt8-instance-method&quot;&gt; to_u8! : UInt8 to_u8!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt; to_yaml(yaml : YAML::Nodes::Builder) to_yaml&lt;/a&gt;, &lt;a href=&quot;../../../enum#%7C(other:self)-instance-method&quot;&gt; |(other : self) |&lt;/a&gt;, &lt;a href=&quot;../../../enum#~-instance-method&quot;&gt; ~ ~&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../enum#&amp;amp;(other:self)-instance-method&quot;&gt;＆（other：self）＆&lt;/a&gt;，&lt;a href=&quot;../../../enum#+(other:Int)-instance-method&quot;&gt;+（other：Int）+&lt;/a&gt;，&lt;a href=&quot;../../../enum#-(other:Int)-instance-method&quot;&gt;-（other：Int）-&lt;/a&gt;，&lt;a href=&quot;../../../enum#(other:self)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：self）&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;../../../enum#==(other:self)-instance-method&quot;&gt;==（other：self）==&lt;/a&gt;，&lt;a href=&quot;../../../enum#%5E(other:self)-instance-method&quot;&gt;^（other： self）^&lt;/a&gt;，&lt;a href=&quot;../../../enum#clone-instance-method&quot;&gt;clone clone&lt;/a&gt;，&lt;a href=&quot;../../../enum#each(&amp;amp;)-instance-method&quot;&gt;each（＆）each&lt;/a&gt;，&lt;a href=&quot;../../../enum#hash(hasher)-instance-method&quot;&gt;hash（hasher）hash&lt;/a&gt;，&lt;a href=&quot;../../../enum#includes?(other:self)-instance-method&quot;&gt;include？（other：self）包括？&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_f32:Float32-instance-method&quot;&gt;to_f32：Float32 to_f32&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_f32!:Float32-instance-method&quot;&gt;to_f32！ ：Float32 to_f32！&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_f64:Float64-instance-method&quot;&gt;to_f64：Float64 to_f64&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_f64!:Float64-instance-method&quot;&gt;to_f64！ ：Float64 to_f64！&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_i:Int32-instance-method&quot;&gt;to_i：Int32 to_i&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_i16:Int16-instance-method&quot;&gt;to_i16：Int16 to_i16&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_i16!:Int16-instance-method&quot;&gt;to_i16！ ：int16 to_i16！&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_i32:Int32-instance-method&quot;&gt;to_i32：Int32 to_i32&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_i32!:Int32-instance-method&quot;&gt;to_i32！ ：Int32 to_i32！&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_i64:Int64-instance-method&quot;&gt;to_i64：Int64 to_i64&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_i64!:Int64-instance-method&quot;&gt;to_i64！ ：int64 to_i64！&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_i8:Int8-instance-method&quot;&gt;to_i8：Int8 to_i8&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_i8!:Int8-instance-method&quot;&gt;to_i8！ ：Int8 to_i8！&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_json(json:JSON::Builder)-instance-method&quot;&gt;to_json（json：JSON :: Builder）to_json&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：无&lt;br/&gt;to_s：字符串to_s&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_u16:UInt16-instance-method&quot;&gt;to_u16：UInt16 to_u16&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_u16!:UInt16-instance-method&quot;&gt;to_u16！ ：UInt16 to_u16！&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_u32:UInt32-instance-method&quot;&gt;to_u32：UInt32 to_u32&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_u32!:UInt32-instance-method&quot;&gt;to_u32！ ：UInt32 to_u32！&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_u64:UInt64-instance-method&quot;&gt;to_u64：UInt64 to_u64&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_u64!:UInt64-instance-method&quot;&gt;to_u64！ ：UInt64 to_u64！&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_u8:UInt8-instance-method&quot;&gt;to_u8：UInt8 to_u8&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_u8!:UInt8-instance-method&quot;&gt;to_u8！ ：UInt8 to_u8！&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt;to_yaml（yaml：YAML :: Nodes :: Builder）to_yaml&lt;/a&gt;，&lt;a href=&quot;../../../enum#%7C(other:self)-instance-method&quot;&gt;|（other：self）| &lt;/a&gt;，&lt;a href=&quot;../../../enum#~-instance-method&quot;&gt;〜〜&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d732f0766aedce6d335d15079976b56c3310bd9e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../enum#&amp;amp;(other:self)-instance-method&quot;&gt; &amp;amp;(other : self) &amp;amp;&lt;/a&gt;, &lt;a href=&quot;../../../enum#+(other:Int)-instance-method&quot;&gt; +(other : Int) +&lt;/a&gt;, &lt;a href=&quot;../../../enum#-(other:Int)-instance-method&quot;&gt; -(other : Int) -&lt;/a&gt;, &lt;a href=&quot;../../../enum#(other:self)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : self) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;../../../enum#==(other:self)-instance-method&quot;&gt; ==(other : self) ==&lt;/a&gt;, &lt;a href=&quot;../../../enum#%5E(other:self)-instance-method&quot;&gt; ^(other : self) ^&lt;/a&gt;, &lt;a href=&quot;../../../enum#clone-instance-method&quot;&gt; clone clone&lt;/a&gt;, &lt;a href=&quot;../../../enum#each(&amp;amp;block)-instance-method&quot;&gt; each(&amp;amp;block) each&lt;/a&gt;, &lt;a href=&quot;../../../enum#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;../../../enum#includes?(other:self)-instance-method&quot;&gt; includes?(other : self) includes?&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_f32:Float32-instance-method&quot;&gt; to_f32 : Float32 to_f32&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_f32!:Float32-instance-method&quot;&gt; to_f32! : Float32 to_f32!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_f64:Float64-instance-method&quot;&gt; to_f64 : Float64 to_f64&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_f64!:Float64-instance-method&quot;&gt; to_f64! : Float64 to_f64!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i:Int32-instance-method&quot;&gt; to_i : Int32 to_i&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i16:Int16-instance-method&quot;&gt; to_i16 : Int16 to_i16&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i16!:Int16-instance-method&quot;&gt; to_i16! : Int16 to_i16!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i32:Int32-instance-method&quot;&gt; to_i32 : Int32 to_i32&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i32!:Int32-instance-method&quot;&gt; to_i32! : Int32 to_i32!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i64:Int64-instance-method&quot;&gt; to_i64 : Int64 to_i64&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i64!:Int64-instance-method&quot;&gt; to_i64! : Int64 to_i64!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i8:Int8-instance-method&quot;&gt; to_i8 : Int8 to_i8&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i8!:Int8-instance-method&quot;&gt; to_i8! : Int8 to_i8!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_json(json:JSON::Builder)-instance-method&quot;&gt; to_json(json : JSON::Builder) to_json&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil&lt;br/&gt;to_s : String to_s&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u16:UInt16-instance-method&quot;&gt; to_u16 : UInt16 to_u16&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u16!:UInt16-instance-method&quot;&gt; to_u16! : UInt16 to_u16!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u32:UInt32-instance-method&quot;&gt; to_u32 : UInt32 to_u32&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u32!:UInt32-instance-method&quot;&gt; to_u32! : UInt32 to_u32!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u64:UInt64-instance-method&quot;&gt; to_u64 : UInt64 to_u64&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u64!:UInt64-instance-method&quot;&gt; to_u64! : UInt64 to_u64!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u8:UInt8-instance-method&quot;&gt; to_u8 : UInt8 to_u8&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u8!:UInt8-instance-method&quot;&gt; to_u8! : UInt8 to_u8!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt; to_yaml(yaml : YAML::Nodes::Builder) to_yaml&lt;/a&gt;, &lt;a href=&quot;../../../enum#%7C(other:self)-instance-method&quot;&gt; |(other : self) |&lt;/a&gt;, &lt;a href=&quot;../../../enum#~-instance-method&quot;&gt; ~ ~&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../enum#&amp;amp;(other:self)-instance-method&quot;&gt;＆（other：self）＆&lt;/a&gt;，&lt;a href=&quot;../../../enum#+(other:Int)-instance-method&quot;&gt;+（other：Int）+&lt;/a&gt;，&lt;a href=&quot;../../../enum#-(other:Int)-instance-method&quot;&gt;-（other：Int）-&lt;/a&gt;，&lt;a href=&quot;../../../enum#(other:self)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：self）&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;../../../enum#==(other:self)-instance-method&quot;&gt;==（other：self）==&lt;/a&gt;，&lt;a href=&quot;../../../enum#%5E(other:self)-instance-method&quot;&gt;^（other： self）^&lt;/a&gt;，&lt;a href=&quot;../../../enum#clone-instance-method&quot;&gt;clone clone&lt;/a&gt;，&lt;a href=&quot;../../../enum#each(&amp;amp;block)-instance-method&quot;&gt;each（＆block）each&lt;/a&gt;，&lt;a href=&quot;../../../enum#hash(hasher)-instance-method&quot;&gt;hash（hasher）hash&lt;/a&gt;，&lt;a href=&quot;../../../enum#includes?(other:self)-instance-method&quot;&gt;include？（other：self）包括吗？&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_f32:Float32-instance-method&quot;&gt;to_f32：Float32 to_f32&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_f32!:Float32-instance-method&quot;&gt;to_f32！ ：Float32 to_f32！&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_f64:Float64-instance-method&quot;&gt;to_f64：Float64 to_f64&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_f64!:Float64-instance-method&quot;&gt;to_f64！ ：Float64 to_f64！&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_i:Int32-instance-method&quot;&gt;to_i：Int32 to_i&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_i16:Int16-instance-method&quot;&gt;to_i16：Int16 to_i16&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_i16!:Int16-instance-method&quot;&gt;to_i16！ ：Int16 to_i16！&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_i32:Int32-instance-method&quot;&gt;to_i32：Int32 to_i32&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_i32!:Int32-instance-method&quot;&gt;to_i32！ ：Int32 to_i32！&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_i64:Int64-instance-method&quot;&gt;to_i64：Int64 to_i64&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_i64!:Int64-instance-method&quot;&gt;to_i64！ ：int64 to_i64！&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_i8:Int8-instance-method&quot;&gt;to_i8：Int8 to_i8&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_i8!:Int8-instance-method&quot;&gt;to_i8！ ：int8 to_i8！&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_json(json:JSON::Builder)-instance-method&quot;&gt;to_json（json：JSON :: Builder）to_json&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：无&lt;br/&gt;to_s：字符串to_s&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_u16:UInt16-instance-method&quot;&gt;to_u16：UInt16 to_u16&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_u16!:UInt16-instance-method&quot;&gt;to_u16！ ：UInt16 to_u16！&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_u32:UInt32-instance-method&quot;&gt;to_u32：UInt32 to_u32&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_u32!:UInt32-instance-method&quot;&gt;to_u32！ ：UInt32 to_u32！&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_u64:UInt64-instance-method&quot;&gt;to_u64：UInt64 to_u64&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_u64!:UInt64-instance-method&quot;&gt;to_u64！ ：UInt64 to_u64！&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_u8:UInt8-instance-method&quot;&gt;to_u8：UInt8 to_u8&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_u8!:UInt8-instance-method&quot;&gt;to_u8！ ：UInt8 to_u8！&lt;/a&gt;，&lt;a href=&quot;../../../enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt;to_yaml（yaml：YAML :: Nodes :: Builder）to_yaml&lt;/a&gt;，&lt;a href=&quot;../../../enum#%7C(other:self)-instance-method&quot;&gt;|（other：self）| &lt;/a&gt;，&lt;a href=&quot;../../../enum#~-instance-method&quot;&gt;〜〜&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c62cfec533d4423c15e6b76ed40095384761245" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../enum#each(&amp;amp;)-class-method&quot;&gt; each(&amp;amp;) each&lt;/a&gt;, &lt;a href=&quot;../../../enum#names:Array(String)-class-method&quot;&gt; names : Array(String) names&lt;/a&gt;, &lt;a href=&quot;../../../enum#valid?(value:self):Bool-class-method&quot;&gt; valid?(value : self) : Bool valid?&lt;/a&gt;, &lt;a href=&quot;../../../enum#values:Array(self)-class-method&quot;&gt; values : Array(self) values&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../enum#each(&amp;amp;)-class-method&quot;&gt;each（＆）each&lt;/a&gt;，&lt;a href=&quot;../../../enum#names:Array(String)-class-method&quot;&gt;名称：Array（String）names&lt;/a&gt;，&lt;a href=&quot;../../../enum#valid?(value:self):Bool-class-method&quot;&gt;有效吗？（value：self）：布尔有效吗？&lt;/a&gt;，&lt;a href=&quot;../../../enum#values:Array(self)-class-method&quot;&gt;values：数组（自身）值&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0412e72b0b488baece88b1e9b5f342bbe70d418a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../enum#each(&amp;amp;block)-class-method&quot;&gt; each(&amp;amp;block) each&lt;/a&gt;, &lt;a href=&quot;../../../enum#names:Array(String)-class-method&quot;&gt; names : Array(String) names&lt;/a&gt;, &lt;a href=&quot;../../../enum#values:Array(self)-class-method&quot;&gt; values : Array(self) values&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../enum#each(&amp;amp;block)-class-method&quot;&gt;each（＆block）each&lt;/a&gt;，&lt;a href=&quot;../../../enum#names:Array(String)-class-method&quot;&gt;名称：Array（String）名称&lt;/a&gt;，&lt;a href=&quot;../../../enum#values:Array(self)-class-method&quot;&gt;值：Array（self）值&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3aac389f7041fe058b248d0178adbab3ce6ec30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../enum#from_value(value:Int):self-class-method&quot;&gt; from_value(value : Int) : self from_value&lt;/a&gt;, &lt;a href=&quot;../../../enum#from_value?(value:Int):self?-class-method&quot;&gt; from_value?(value : Int) : self? from_value?&lt;/a&gt;, &lt;a href=&quot;../../../enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt; new(ctx : YAML::ParseContext, node : YAML::Nodes::Node)&lt;br/&gt;new(pull : JSON::PullParser) new&lt;/a&gt;, &lt;a href=&quot;../../../enum#parse(string:String):self-class-method&quot;&gt; parse(string : String) : self parse&lt;/a&gt;, &lt;a href=&quot;../../../enum#parse?(string:String):self?-class-method&quot;&gt; parse?(string : String) : self? parse?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../enum#from_value(value:Int):self-class-method&quot;&gt;from_value（value：Int）：自我from_value&lt;/a&gt;，&lt;a href=&quot;../../../enum#from_value?(value:Int):self?-class-method&quot;&gt;from_value？（value：Int）：自我吗？from_value？&lt;/a&gt;，&lt;a href=&quot;../../../enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;new（ctx：YAML :: ParseContext，node：YAML :: Nodes :: Node）&lt;br/&gt;new（pull：JSON :: PullParser）new&lt;/a&gt;，&lt;a href=&quot;../../../enum#parse(string:String):self-class-method&quot;&gt;parse（string：String）：self parse&lt;/a&gt;，&lt;a href=&quot;../../../enum#parse?(string:String):self?-class-method&quot;&gt;parse？（string：String）：self ？解析？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2e5fe590fa7330634752730afa201137185d1e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../enum#from_value(value:Int):self-class-method&quot;&gt; from_value(value : Int) : self from_value&lt;/a&gt;, &lt;a href=&quot;../../../enum#from_value?(value:Int):self?-class-method&quot;&gt; from_value?(value : Int) : self? from_value?&lt;/a&gt;, &lt;a href=&quot;../../../enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt; new(ctx : YAML::ParseContext, node : YAML::Nodes::Node)&lt;br/&gt;new(value : self)&lt;br/&gt;new(pull : JSON::PullParser) new&lt;/a&gt;, &lt;a href=&quot;../../../enum#parse(string:String):self-class-method&quot;&gt; parse(string : String) : self parse&lt;/a&gt;, &lt;a href=&quot;../../../enum#parse?(string:String):self?-class-method&quot;&gt; parse?(string : String) : self? parse?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../enum#from_value(value:Int):self-class-method&quot;&gt;from_value（value：Int）：自我from_value&lt;/a&gt;，&lt;a href=&quot;../../../enum#from_value?(value:Int):self?-class-method&quot;&gt;from_value？（value：Int）：自我？from_value？&lt;/a&gt;，&lt;a href=&quot;../../../enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;new（ctx：YAML :: ParseContext，node：YAML :: Nodes :: Node）&lt;br/&gt;new（value：self）&lt;br/&gt;new（pull：JSON :: PullParser）new&lt;/a&gt;，&lt;a href=&quot;../../../enum#parse(string:String):self-class-method&quot;&gt;parse（string：String）：self parse&lt;/a&gt;，&lt;a href=&quot;../../../enum#parse?(string:String):self?-class-method&quot;&gt;parse？（字符串：字符串）：自我？解析？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a9bdf5e4303342db45aa7fef3f593cc5d356809" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../io#copy(src,dst,limit:Int):Int64-class-method&quot;&gt; copy(src, dst, limit : Int) : Int64&lt;br/&gt;copy(src, dst) : Int64 copy&lt;/a&gt;, &lt;a href=&quot;../../../io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt; pipe(read_blocking = false, write_blocking = false) : Tuple(IO::FileDescriptor, IO::FileDescriptor)&lt;br/&gt;pipe(read_blocking = false, write_blocking = false, &amp;amp;) pipe&lt;/a&gt;, &lt;a href=&quot;../../../io#same_content?(stream1:IO,stream2:IO)-class-method&quot;&gt; same_content?(stream1 : IO, stream2 : IO) same_content?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../io#copy(src,dst,limit:Int):Int64-class-method&quot;&gt;copy（src，dst，limit：Int）：Int64 &lt;br/&gt;copy（src，dst）：Int64 copy&lt;/a&gt;，&lt;a href=&quot;../../../io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt;pipe（read_blocking = false，write_blocking = false）：Tuple（IO :: FileDescriptor，IO :: FileDescriptor）&lt;br/&gt;管道（read_blocking = false ，write_blocking = false和＆）管道&lt;/a&gt;，&lt;a href=&quot;../../../io#same_content?(stream1:IO,stream2:IO)-class-method&quot;&gt;same_content？（stream1：IO，stream2：IO）same_content？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23f89fa96f65bfb79941a94a7419b53faf019a4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../io#copy(src,dst,limit:Int):UInt64-class-method&quot;&gt; copy(src, dst, limit : Int) : UInt64&lt;br/&gt;copy(src, dst) : UInt64 copy&lt;/a&gt;, &lt;a href=&quot;../../../io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt; pipe(read_blocking = false, write_blocking = false) : Tuple(IO::FileDescriptor, IO::FileDescriptor)&lt;br/&gt;pipe(read_blocking = false, write_blocking = false, &amp;amp;block) pipe&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../io#copy(src,dst,limit:Int):UInt64-class-method&quot;&gt;copy（src，dst，limit：Int）：UInt64 &lt;br/&gt;copy（src，dst）：UInt64 copy&lt;/a&gt;，&lt;a href=&quot;../../../io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt;pipe（read_blocking = false，write_blocking = false）：Tuple（IO :: FileDescriptor，IO :: FileDescriptor）&lt;br/&gt;管道（read_blocking = false ，write_blocking = false，＆block）管道&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7dc0ac1428fb187ddf652c13147f4c944264e6a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../io#self-instance-method&quot;&gt; &amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt;, &lt;a href=&quot;../../../io#close-instance-method&quot;&gt; close close&lt;/a&gt;, &lt;a href=&quot;../../../io#closed?-instance-method&quot;&gt; closed? closed?&lt;/a&gt;, &lt;a href=&quot;../../../io#each_byte(&amp;amp;):Nil-instance-method&quot;&gt; each_byte(&amp;amp;) : Nil&lt;br/&gt;each_byte each_byte&lt;/a&gt;, &lt;a href=&quot;../../../io#each_char(&amp;amp;):Nil-instance-method&quot;&gt; each_char(&amp;amp;) : Nil&lt;br/&gt;each_char each_char&lt;/a&gt;, &lt;a href=&quot;../../../io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt; each_line(*args, **options, &amp;amp;block : String -&amp;gt; ) : Nil&lt;br/&gt;each_line(*args, **options) each_line&lt;/a&gt;, &lt;a href=&quot;../../../io#encoding:String-instance-method&quot;&gt; encoding : String encoding&lt;/a&gt;, &lt;a href=&quot;../../../io#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;../../../io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt; gets(delimiter : Char, limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : Char, chomp = false) : String?&lt;br/&gt;gets(chomp = true) : String?&lt;br/&gt;gets(limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : String, chomp = false) : String? gets&lt;/a&gt;, &lt;a href=&quot;../../../io#gets_to_end:String-instance-method&quot;&gt; gets_to_end : String gets_to_end&lt;/a&gt;, &lt;a href=&quot;../../../io#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;../../../io#pos-instance-method&quot;&gt; pos pos&lt;/a&gt;, &lt;a href=&quot;../../../io#pos=(value)-instance-method&quot;&gt; pos=(value) pos=&lt;/a&gt;, &lt;a href=&quot;../../../io#print(*objects:_):Nil-instance-method&quot;&gt; print(*objects : _) : Nil&lt;br/&gt;print(obj) : Nil print&lt;/a&gt;, &lt;a href=&quot;../../../io#printf(format_string,*args):Nil-instance-method&quot;&gt; printf(format_string, *args) : Nil&lt;br/&gt;printf(format_string, args : Array | Tuple) : Nil printf&lt;/a&gt;, &lt;a href=&quot;../../../io#puts(*objects:_):Nil-instance-method&quot;&gt; puts(*objects : _) : Nil&lt;br/&gt;puts : Nil&lt;br/&gt;puts(obj) : Nil&lt;br/&gt;puts(string : String) : Nil puts&lt;/a&gt;, &lt;a href=&quot;../../../io#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;../../../io#read_at(offset,bytesize,&amp;amp;)-instance-method&quot;&gt; read_at(offset, bytesize, &amp;amp;) read_at&lt;/a&gt;, &lt;a href=&quot;../../../io#read_byte:UInt8?-instance-method&quot;&gt; read_byte : UInt8? read_byte&lt;/a&gt;, &lt;a href=&quot;../../../io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; read_bytes(type, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) read_bytes&lt;/a&gt;, &lt;a href=&quot;../../../io#read_char:Char?-instance-method&quot;&gt; read_char : Char? read_char&lt;/a&gt;, &lt;a href=&quot;../../../io#read_fully(slice:Bytes)-instance-method&quot;&gt; read_fully(slice : Bytes) read_fully&lt;/a&gt;, &lt;a href=&quot;../../../io#read_fully?(slice:Bytes)-instance-method&quot;&gt; read_fully?(slice : Bytes) read_fully?&lt;/a&gt;, &lt;a href=&quot;../../../io#read_line(*args,**options):String-instance-method&quot;&gt; read_line(*args, **options) : String read_line&lt;/a&gt;, &lt;a href=&quot;../../../io#read_string(bytesize:Int):String-instance-method&quot;&gt; read_string(bytesize : Int) : String read_string&lt;/a&gt;, &lt;a href=&quot;../../../io#read_utf8(slice:Bytes)-instance-method&quot;&gt; read_utf8(slice : Bytes) read_utf8&lt;/a&gt;, &lt;a href=&quot;../../../io#read_utf8_byte-instance-method&quot;&gt; read_utf8_byte read_utf8_byte&lt;/a&gt;, &lt;a href=&quot;../../../io#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;../../../io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt; seek(offset, whence : Seek = Seek::Set) seek&lt;/a&gt;, &lt;a href=&quot;../../../io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt; set_encoding(encoding : String, invalid : Symbol? = nil) set_encoding&lt;/a&gt;, &lt;a href=&quot;../../../io#skip(bytes_count:Int):Nil-instance-method&quot;&gt; skip(bytes_count : Int) : Nil skip&lt;/a&gt;, &lt;a href=&quot;../../../io#skip_to_end:Nil-instance-method&quot;&gt; skip_to_end : Nil skip_to_end&lt;/a&gt;, &lt;a href=&quot;../../../io#tell-instance-method&quot;&gt; tell tell&lt;/a&gt;, &lt;a href=&quot;../../../io#tty?:Bool-instance-method&quot;&gt; tty? : Bool tty?&lt;/a&gt;, &lt;a href=&quot;../../../io#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;, &lt;a href=&quot;../../../io#write_byte(byte:UInt8)-instance-method&quot;&gt; write_byte(byte : UInt8) write_byte&lt;/a&gt;, &lt;a href=&quot;../../../io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; write_bytes(object, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) write_bytes&lt;/a&gt;, &lt;a href=&quot;../../../io#write_utf8(slice:Bytes)-instance-method&quot;&gt; write_utf8(slice : Bytes) write_utf8&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../io#self-instance-method&quot;&gt;&amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt;，&lt;a href=&quot;../../../io#close-instance-method&quot;&gt;关闭关闭&lt;/a&gt;，&lt;a href=&quot;../../../io#closed?-instance-method&quot;&gt;关闭？关闭？&lt;/a&gt;，&lt;a href=&quot;../../../io#each_byte(&amp;amp;):Nil-instance-method&quot;&gt;each_byte（＆）：零个&lt;br/&gt;each_byte each_byte&lt;/a&gt;，&lt;a href=&quot;../../../io#each_char(&amp;amp;):Nil-instance-method&quot;&gt;each_char（＆）：零个&lt;br/&gt;each_char each_char&lt;/a&gt;，each_line &lt;a href=&quot;../../../io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt;（* args，** options，＆block：String-&amp;gt;）：Nil &lt;br/&gt;each_line（* args，** options）each_line&lt;/a&gt;，&lt;a href=&quot;../../../io#encoding:String-instance-method&quot;&gt;编码：String编码&lt;/a&gt;，&lt;a href=&quot;../../../io#flush-instance-method&quot;&gt;刷新冲洗&lt;/a&gt;，&lt;a href=&quot;../../../io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;gets（分隔符：字符，限制：整数，斜率=假）：字符串&lt;br/&gt;gets（定界符：Char，chomp = false）：字符串？&lt;br/&gt;gets（chomp = true）：字符串？&lt;br/&gt;gets（limit：Int，chomp = false）：字符串？&lt;br/&gt;gets（delimiter：String，chomp = false）：字符串？得到&lt;/a&gt;，&lt;a href=&quot;../../../io#gets_to_end:String-instance-method&quot;&gt;gets_to_end：字符串gets_to_end&lt;/a&gt;，&lt;a href=&quot;../../../io#peek:Bytes?-instance-method&quot;&gt;peek：字节？ peek&lt;/a&gt;，&lt;a href=&quot;../../../io#pos-instance-method&quot;&gt;pos pos&lt;/a&gt;，&lt;a href=&quot;../../../io#pos=(value)-instance-method&quot;&gt;pos =（value）pos =&lt;/a&gt;，&lt;a href=&quot;../../../io#print(*objects:_):Nil-instance-method&quot;&gt;print（* objects：_）：Nil &lt;br/&gt;print（obj）：Nil print&lt;/a&gt;，&lt;a href=&quot;../../../io#printf(format_string,*args):Nil-instance-method&quot;&gt;printf（format_string，* args）：Nil &lt;br/&gt;printf（format_string，args：Array | Tuple）： Nil printf&lt;/a&gt;，&lt;a href=&quot;../../../io#puts(*objects:_):Nil-instance-method&quot;&gt;puts（* objects：_）：Nil &lt;br/&gt;puts：Nil &lt;br/&gt;puts（obj）：Nil &lt;br/&gt;puts（string：String）：Nil puts&lt;/a&gt;，&lt;a href=&quot;../../../io#read(slice:Bytes)-instance-method&quot;&gt;read（slice：Bytes）read&lt;/a&gt;，&lt;a href=&quot;../../../io#read_at(offset,bytesize,&amp;amp;)-instance-method&quot;&gt;read_at（offset，bytesize，＆）read_at&lt;/a&gt;，&lt;a href=&quot;../../../io#read_byte:UInt8?-instance-method&quot;&gt;read_byte ：UInt8？ read_byte&lt;/a&gt;，&lt;a href=&quot;../../../io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;read_bytes（type，format：IO :: ByteFormat = IO :: ByteFormat :: SystemEndian）read_bytes&lt;/a&gt;，&lt;a href=&quot;../../../io#read_char:Char?-instance-method&quot;&gt;read_char：字符？ read_char&lt;/a&gt;，&lt;a href=&quot;../../../io#read_fully(slice:Bytes)-instance-method&quot;&gt;read_fully（slice：Bytes）read_fully&lt;/a&gt;，&lt;a href=&quot;../../../io#read_fully?(slice:Bytes)-instance-method&quot;&gt;read_fully？（slice：Bytes）read_fully？&lt;/a&gt;，&lt;a href=&quot;../../../io#read_line(*args,**options):String-instance-method&quot;&gt;read_line（* args，** options）：字符串read_line&lt;/a&gt;，&lt;a href=&quot;../../../io#read_string(bytesize:Int):String-instance-method&quot;&gt;read_string（bytesize：Int）：字符串read_string&lt;/a&gt;，&lt;a href=&quot;../../../io#read_utf8(slice:Bytes)-instance-method&quot;&gt;read_utf8（slice：Bytes）read_utf8&lt;/a&gt;，&lt;a href=&quot;../../../io#read_utf8_byte-instance-method&quot;&gt;read_utf8_byte read_utf8_byte&lt;/a&gt;，&lt;a href=&quot;../../../io#rewind-instance-method&quot;&gt;倒带倒带&lt;/a&gt;，&lt;a href=&quot;../../../io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt;seek（offset，whence：Seek = Seek :: Set ）seek&lt;/a&gt;，&lt;a href=&quot;../../../io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt;set_encoding（编码：字符串，无效：Symbol？= nil）set_encoding&lt;/a&gt;，&lt;a href=&quot;../../../io#skip(bytes_count:Int):Nil-instance-method&quot;&gt;skip（bytes_count：Int）：Nil skip&lt;/a&gt;，&lt;a href=&quot;../../../io#skip_to_end:Nil-instance-method&quot;&gt;skip_to_end：Nil skip_to_end&lt;/a&gt;，&lt;a href=&quot;../../../io#tell-instance-method&quot;&gt;告诉&lt;/a&gt;Tell，&lt;a href=&quot;../../../io#tty?:Bool-instance-method&quot;&gt;tty？ ：布尔蒂？&lt;/a&gt;，&lt;a href=&quot;../../../io#write(slice:Bytes):Nil-instance-method&quot;&gt;write（slice：Bytes）：无写入&lt;/a&gt;，&lt;a href=&quot;../../../io#write_byte(byte:UInt8)-instance-method&quot;&gt;write_byte（byte：UInt8）write_byte&lt;/a&gt;，&lt;a href=&quot;../../../io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;write_bytes（object，format：IO :: ByteFormat = IO :: ByteFormat :: SystemEndian）write_bytes&lt;/a&gt;，&lt;a href=&quot;../../../io#write_utf8(slice:Bytes)-instance-method&quot;&gt;write_utf8（slice：Bytes）write_utf8&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1e8b7ce5c547f29b5685bf867f4a9865e207364" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../io#self-instance-method&quot;&gt; &amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt;, &lt;a href=&quot;../../../io#close-instance-method&quot;&gt; close close&lt;/a&gt;, &lt;a href=&quot;../../../io#closed?-instance-method&quot;&gt; closed? closed?&lt;/a&gt;, &lt;a href=&quot;../../../io#each_byte(&amp;amp;block):Nil-instance-method&quot;&gt; each_byte(&amp;amp;block) : Nil&lt;br/&gt;each_byte each_byte&lt;/a&gt;, &lt;a href=&quot;../../../io#each_char(&amp;amp;block):Nil-instance-method&quot;&gt; each_char(&amp;amp;block) : Nil&lt;br/&gt;each_char each_char&lt;/a&gt;, &lt;a href=&quot;../../../io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt; each_line(*args, **options, &amp;amp;block : String -&amp;gt; ) : Nil&lt;br/&gt;each_line(*args, **options) each_line&lt;/a&gt;, &lt;a href=&quot;../../../io#encoding:String-instance-method&quot;&gt; encoding : String encoding&lt;/a&gt;, &lt;a href=&quot;../../../io#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;../../../io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt; gets(delimiter : Char, limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : Char, chomp = false) : String?&lt;br/&gt;gets(chomp = true) : String?&lt;br/&gt;gets(limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : String, chomp = false) : String? gets&lt;/a&gt;, &lt;a href=&quot;../../../io#gets_to_end:String-instance-method&quot;&gt; gets_to_end : String gets_to_end&lt;/a&gt;, &lt;a href=&quot;../../../io#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;../../../io#pos-instance-method&quot;&gt; pos pos&lt;/a&gt;, &lt;a href=&quot;../../../io#pos=(value)-instance-method&quot;&gt; pos=(value) pos=&lt;/a&gt;, &lt;a href=&quot;../../../io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt; print(*objects : UNDERSCORE) : Nil&lt;br/&gt;print(obj) : Nil print&lt;/a&gt;, &lt;a href=&quot;../../../io#printf(format_string,*args):Nil-instance-method&quot;&gt; printf(format_string, *args) : Nil&lt;br/&gt;printf(format_string, args : Array | Tuple) : Nil printf&lt;/a&gt;, &lt;a href=&quot;../../../io#puts(*objects:UNDERSCORE):Nil-instance-method&quot;&gt; puts(*objects : UNDERSCORE) : Nil&lt;br/&gt;puts : Nil&lt;br/&gt;puts(obj) : Nil&lt;br/&gt;puts(string : String) : Nil puts&lt;/a&gt;, &lt;a href=&quot;../../../io#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;../../../io#read_at(offset,bytesize,&amp;amp;block)-instance-method&quot;&gt; read_at(offset, bytesize, &amp;amp;block) read_at&lt;/a&gt;, &lt;a href=&quot;../../../io#read_byte:UInt8?-instance-method&quot;&gt; read_byte : UInt8? read_byte&lt;/a&gt;, &lt;a href=&quot;../../../io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; read_bytes(type, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) read_bytes&lt;/a&gt;, &lt;a href=&quot;../../../io#read_char:Char?-instance-method&quot;&gt; read_char : Char? read_char&lt;/a&gt;, &lt;a href=&quot;../../../io#read_fully(slice:Bytes)-instance-method&quot;&gt; read_fully(slice : Bytes) read_fully&lt;/a&gt;, &lt;a href=&quot;../../../io#read_fully?(slice:Bytes)-instance-method&quot;&gt; read_fully?(slice : Bytes) read_fully?&lt;/a&gt;, &lt;a href=&quot;../../../io#read_line(*args,**options):String-instance-method&quot;&gt; read_line(*args, **options) : String read_line&lt;/a&gt;, &lt;a href=&quot;../../../io#read_string(bytesize:Int):String-instance-method&quot;&gt; read_string(bytesize : Int) : String read_string&lt;/a&gt;, &lt;a href=&quot;../../../io#read_utf8(slice:Bytes)-instance-method&quot;&gt; read_utf8(slice : Bytes) read_utf8&lt;/a&gt;, &lt;a href=&quot;../../../io#read_utf8_byte-instance-method&quot;&gt; read_utf8_byte read_utf8_byte&lt;/a&gt;, &lt;a href=&quot;../../../io#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;../../../io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt; seek(offset, whence : Seek = Seek::Set) seek&lt;/a&gt;, &lt;a href=&quot;../../../io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt; set_encoding(encoding : String, invalid : Symbol? = nil) set_encoding&lt;/a&gt;, &lt;a href=&quot;../../../io#skip(bytes_count:Int):Nil-instance-method&quot;&gt; skip(bytes_count : Int) : Nil skip&lt;/a&gt;, &lt;a href=&quot;../../../io#skip_to_end:Nil-instance-method&quot;&gt; skip_to_end : Nil skip_to_end&lt;/a&gt;, &lt;a href=&quot;../../../io#tell-instance-method&quot;&gt; tell tell&lt;/a&gt;, &lt;a href=&quot;../../../io#tty?:Bool-instance-method&quot;&gt; tty? : Bool tty?&lt;/a&gt;, &lt;a href=&quot;../../../io#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;, &lt;a href=&quot;../../../io#write_byte(byte:UInt8)-instance-method&quot;&gt; write_byte(byte : UInt8) write_byte&lt;/a&gt;, &lt;a href=&quot;../../../io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; write_bytes(object, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) write_bytes&lt;/a&gt;, &lt;a href=&quot;../../../io#write_utf8(slice:Bytes)-instance-method&quot;&gt; write_utf8(slice : Bytes) write_utf8&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../io#self-instance-method&quot;&gt;&amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt;，&lt;a href=&quot;../../../io#close-instance-method&quot;&gt;关闭关闭&lt;/a&gt;，&lt;a href=&quot;../../../io#closed?-instance-method&quot;&gt;关闭？关闭？&lt;/a&gt;，&lt;a href=&quot;../../../io#each_byte(&amp;amp;block):Nil-instance-method&quot;&gt;each_byte（＆block）：Nil &lt;br/&gt;each_byte each_byte&lt;/a&gt;，&lt;a href=&quot;../../../io#each_char(&amp;amp;block):Nil-instance-method&quot;&gt;each_char（＆block）：Nil &lt;br/&gt;each_char each_char&lt;/a&gt;，each_line &lt;a href=&quot;../../../io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt;（* args，** options，＆block：String-&amp;gt;）：Nil &lt;br/&gt;each_line（* args，** options）each_line&lt;/a&gt;，&lt;a href=&quot;../../../io#encoding:String-instance-method&quot;&gt;编码：String编码&lt;/a&gt;，&lt;a href=&quot;../../../io#flush-instance-method&quot;&gt;刷新，刷新&lt;/a&gt;，&lt;a href=&quot;../../../io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;gets（定界符：Char，限制：Int，chomp = false）：字符串？&lt;br/&gt;gets（定界符：Char，chomp = false）：字符串？&lt;br/&gt;gets（chomp = true）：字符串？&lt;br/&gt;gets（limit：Int，chomp = false）：字符串？&lt;br/&gt;gets（delimiter：String，chomp = false）：字符串？得到&lt;/a&gt;，&lt;a href=&quot;../../../io#gets_to_end:String-instance-method&quot;&gt;gets_to_end：字符串gets_to_end&lt;/a&gt;，&lt;a href=&quot;../../../io#peek:Bytes?-instance-method&quot;&gt;peek：字节？ peek&lt;/a&gt;，&lt;a href=&quot;../../../io#pos-instance-method&quot;&gt;pos pos&lt;/a&gt;，&lt;a href=&quot;../../../io#pos=(value)-instance-method&quot;&gt;pos =（value）pos =&lt;/a&gt;，&lt;a href=&quot;../../../io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;print（* objects：UNDERSCORE）：Nil &lt;br/&gt;print（obj）：Nil print&lt;/a&gt;，&lt;a href=&quot;../../../io#printf(format_string,*args):Nil-instance-method&quot;&gt;printf（format_string，* args）：Nil &lt;br/&gt;printf（format_string，args：Array | Tuple）： Nil printf&lt;/a&gt;，&lt;a href=&quot;../../../io#puts(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;puts（* objects：UNDERSCORE）：Nil &lt;br/&gt;puts：Nil &lt;br/&gt;puts（obj）：Nil &lt;br/&gt;puts（string：String）：Nil puts&lt;/a&gt;，&lt;a href=&quot;../../../io#read(slice:Bytes)-instance-method&quot;&gt;read（slice：Bytes）read&lt;/a&gt;，&lt;a href=&quot;../../../io#read_at(offset,bytesize,&amp;amp;block)-instance-method&quot;&gt;read_at（offset，bytesize，＆block）read_at&lt;/a&gt;，&lt;a href=&quot;../../../io#read_byte:UInt8?-instance-method&quot;&gt;read_byte ：UInt8？ read_byte&lt;/a&gt;，&lt;a href=&quot;../../../io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;read_bytes（类型，格式：IO :: ByteFormat = IO :: ByteFormat :: SystemEndian）read_bytes&lt;/a&gt;，&lt;a href=&quot;../../../io#read_char:Char?-instance-method&quot;&gt;read_char：字符？ read_char&lt;/a&gt;，&lt;a href=&quot;../../../io#read_fully(slice:Bytes)-instance-method&quot;&gt;read_fully（slice：Bytes）read_fully&lt;/a&gt;，&lt;a href=&quot;../../../io#read_fully?(slice:Bytes)-instance-method&quot;&gt;read_fully？（slice：Bytes）read_fully？&lt;/a&gt;，&lt;a href=&quot;../../../io#read_line(*args,**options):String-instance-method&quot;&gt;read_line（* args，** options）：字符串read_line&lt;/a&gt;，&lt;a href=&quot;../../../io#read_string(bytesize:Int):String-instance-method&quot;&gt;read_string（bytesize：Int）：字符串read_string&lt;/a&gt;，&lt;a href=&quot;../../../io#read_utf8(slice:Bytes)-instance-method&quot;&gt;read_utf8（slice：Bytes）read_utf8&lt;/a&gt;，&lt;a href=&quot;../../../io#read_utf8_byte-instance-method&quot;&gt;read_utf8_byte read_utf8_byte&lt;/a&gt;，&lt;a href=&quot;../../../io#rewind-instance-method&quot;&gt;倒带倒带&lt;/a&gt;，&lt;a href=&quot;../../../io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt;seek（offset，whence：Seek = Seek :: Set ）seek&lt;/a&gt;，&lt;a href=&quot;../../../io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt;set_encoding（编码：字符串，无效：Symbol？= nil）set_encoding&lt;/a&gt;，&lt;a href=&quot;../../../io#skip(bytes_count:Int):Nil-instance-method&quot;&gt;skip（bytes_count：Int）：Nil skip&lt;/a&gt;，&lt;a href=&quot;../../../io#skip_to_end:Nil-instance-method&quot;&gt;skip_to_end：Nil skip_to_end&lt;/a&gt;，&lt;a href=&quot;../../../io#tell-instance-method&quot;&gt;告诉&lt;/a&gt;Tell，&lt;a href=&quot;../../../io#tty?:Bool-instance-method&quot;&gt;tty？ ：布尔蒂？&lt;/a&gt;，&lt;a href=&quot;../../../io#write(slice:Bytes):Nil-instance-method&quot;&gt;write（slice：Bytes）：无写&lt;/a&gt;，&lt;a href=&quot;../../../io#write_byte(byte:UInt8)-instance-method&quot;&gt;write_byte（byte：UInt8）write_byte&lt;/a&gt;，&lt;a href=&quot;../../../io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;write_bytes（object，format：IO :: ByteFormat = IO :: ByteFormat :: SystemEndian）write_bytes&lt;/a&gt;，&lt;a href=&quot;../../../io#write_utf8(slice:Bytes)-instance-method&quot;&gt;write_utf8（slice：Bytes）write_utf8&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45623c23cf9611a53e8cc07d5a3937c51dfade55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../io/buffered#buffer_size-instance-method&quot;&gt; buffer_size buffer_size&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#buffer_size=(value)-instance-method&quot;&gt; buffer_size=(value) buffer_size=&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#close:Nil-instance-method&quot;&gt; close : Nil close&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#flush_on_newline=(flush_on_newline)-instance-method&quot;&gt; flush_on_newline=(flush_on_newline) flush_on_newline=&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#flush_on_newline?-instance-method&quot;&gt; flush_on_newline? flush_on_newline?&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#read_buffering=(read_buffering)-instance-method&quot;&gt; read_buffering=(read_buffering) read_buffering=&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#read_buffering?-instance-method&quot;&gt; read_buffering? read_buffering?&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#sync=(sync)-instance-method&quot;&gt; sync=(sync) sync=&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#sync?-instance-method&quot;&gt; sync? sync?&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#unbuffered_close-instance-method&quot;&gt; unbuffered_close unbuffered_close&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#unbuffered_flush-instance-method&quot;&gt; unbuffered_flush unbuffered_flush&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt; unbuffered_read(slice : Bytes) unbuffered_read&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#unbuffered_rewind-instance-method&quot;&gt; unbuffered_rewind unbuffered_rewind&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt; unbuffered_write(slice : Bytes) unbuffered_write&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../io/buffered#buffer_size-instance-method&quot;&gt;buffer_size buffer_size&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#buffer_size=(value)-instance-method&quot;&gt;buffer_size =（value）buffer_size =&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#close:Nil-instance-method&quot;&gt;close：无关闭&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#flush-instance-method&quot;&gt;刷新冲洗&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#flush_on_newline=(flush_on_newline)-instance-method&quot;&gt;flush_on_newline =（flush_on_newline）flush_on_newline =&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#flush_on_newline?-instance-method&quot;&gt;flush_on_newline？ flush_on_newline？&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#peek:Bytes?-instance-method&quot;&gt;偷看：字节？偷看&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#read(slice:Bytes)-instance-method&quot;&gt;read（slice：Bytes）read&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#read_buffering=(read_buffering)-instance-method&quot;&gt;read_buffering =（read_buffering）read_buffering =&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#read_buffering?-instance-method&quot;&gt;read_buffering吗？ read_buffering？&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#rewind-instance-method&quot;&gt;快退&lt;/a&gt;，快退，&lt;a href=&quot;../../../io/buffered#sync=(sync)-instance-method&quot;&gt;sync =（sync）sync =&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#sync?-instance-method&quot;&gt;同步吗？同步？&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#unbuffered_close-instance-method&quot;&gt;unbuffered_close unbuffered_close&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#unbuffered_flush-instance-method&quot;&gt;unbuffered_flush unbuffered_flush&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt;unbuffered_read（slice：Bytes）unbuffered_read&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#unbuffered_rewind-instance-method&quot;&gt;unbuffered_rewind unbuffered_rewind&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt;unbuffered_write（slice：Bytes）unbuffered_write&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#write(slice:Bytes):Nil-instance-method&quot;&gt;write（slice：Bytes）：无写&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="097f4cb5eeabef923e5fdfd9b18e7f4c118c7204" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../io/buffered#buffer_size-instance-method&quot;&gt; buffer_size buffer_size&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#buffer_size=(value)-instance-method&quot;&gt; buffer_size=(value) buffer_size=&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#close:Nil-instance-method&quot;&gt; close : Nil close&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#read_buffering=(read_buffering)-instance-method&quot;&gt; read_buffering=(read_buffering) read_buffering=&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#read_buffering?-instance-method&quot;&gt; read_buffering? read_buffering?&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#sync=(sync)-instance-method&quot;&gt; sync=(sync) sync=&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#sync?-instance-method&quot;&gt; sync? sync?&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#unbuffered_close-instance-method&quot;&gt; unbuffered_close unbuffered_close&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#unbuffered_flush-instance-method&quot;&gt; unbuffered_flush unbuffered_flush&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt; unbuffered_read(slice : Bytes) unbuffered_read&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#unbuffered_rewind-instance-method&quot;&gt; unbuffered_rewind unbuffered_rewind&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt; unbuffered_write(slice : Bytes) unbuffered_write&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../io/buffered#buffer_size-instance-method&quot;&gt;buffer_size buffer_size&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#buffer_size=(value)-instance-method&quot;&gt;buffer_size =（value）buffer_size =&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#close:Nil-instance-method&quot;&gt;close：无关闭&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#flush-instance-method&quot;&gt;冲洗刷新&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#peek:Bytes?-instance-method&quot;&gt;偷看：字节？偷看&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#read(slice:Bytes)-instance-method&quot;&gt;read（slice：Bytes）read&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#read_buffering=(read_buffering)-instance-method&quot;&gt;read_buffering =（read_buffering）read_buffering =&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#read_buffering?-instance-method&quot;&gt;read_buffering吗？ read_buffering？&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#rewind-instance-method&quot;&gt;快退&lt;/a&gt;，快退，&lt;a href=&quot;../../../io/buffered#sync=(sync)-instance-method&quot;&gt;sync =（sync）sync =&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#sync?-instance-method&quot;&gt;同步吗？同步？&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#unbuffered_close-instance-method&quot;&gt;unbuffered_close unbuffered_close&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#unbuffered_flush-instance-method&quot;&gt;unbuffered_flush unbuffered_flush&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt;unbuffered_read（slice：Bytes）unbuffered_read&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#unbuffered_rewind-instance-method&quot;&gt;unbuffered_rewind unbuffered_rewind&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt;unbuffered_write（slice：Bytes）unbuffered_write&lt;/a&gt;，&lt;a href=&quot;../../../io/buffered#write(slice:Bytes):Nil-instance-method&quot;&gt;write（slice：Bytes）：无写入&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20aed88ea4604266a95d6de88b6bd03bf17aa9ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../object#!:Bool-instance-method&quot;&gt; ! : Bool !&lt;/a&gt;, &lt;a href=&quot;../../../object#!=(other)-instance-method&quot;&gt; !=(other) !=&lt;/a&gt;, &lt;a href=&quot;../../../object#!~(other)-instance-method&quot;&gt; !~(other) !~&lt;/a&gt;, &lt;a href=&quot;../../../object#==(other)-instance-method&quot;&gt; ==(other) ==&lt;/a&gt;, &lt;a href=&quot;../../../object#===(other:JSON::Any)-instance-method&quot;&gt; ===(other : JSON::Any)&lt;br/&gt;===(other : YAML::Any)&lt;br/&gt;===(other) ===&lt;/a&gt;, &lt;a href=&quot;../../../object#=~(other)-instance-method&quot;&gt; =~(other) =~&lt;/a&gt;, &lt;a href=&quot;../../../object#as(type:Class)-instance-method&quot;&gt; as(type : Class) as&lt;/a&gt;, &lt;a href=&quot;../../../object#as?(type:Class)-instance-method&quot;&gt; as?(type : Class) as?&lt;/a&gt;, &lt;a href=&quot;../../../object#class-instance-method&quot;&gt; class class&lt;/a&gt;, &lt;a href=&quot;../../../object#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;, &lt;a href=&quot;../../../object#hash(hasher)-instance-method&quot;&gt; hash(hasher)&lt;br/&gt;hash hash&lt;/a&gt;, &lt;a href=&quot;../../../object#in?(*values:Object):Bool-instance-method&quot;&gt; in?(*values : Object) : Bool&lt;br/&gt;in?(collection) : Bool in?&lt;/a&gt;, &lt;a href=&quot;../../../object#inspect:String-instance-method&quot;&gt; inspect : String&lt;br/&gt;inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;../../../object#is_a?(type:Class):Bool-instance-method&quot;&gt; is_a?(type : Class) : Bool is_a?&lt;/a&gt;, &lt;a href=&quot;../../../object#itself-instance-method&quot;&gt; itself itself&lt;/a&gt;, &lt;a href=&quot;../../../object#nil?:Bool-instance-method&quot;&gt; nil? : Bool nil?&lt;/a&gt;, &lt;a href=&quot;../../../object#not_nil!-instance-method&quot;&gt; not_nil! not_nil!&lt;/a&gt;,  pretty_inspect(width = 79, newline = &quot;\n&quot;, indent = 0) : String pretty_inspect, &lt;a href=&quot;../../../object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt; pretty_print(pp : PrettyPrint) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;../../../object#responds_to?(name:Symbol):Bool-instance-method&quot;&gt; responds_to?(name : Symbol) : Bool responds_to?&lt;/a&gt;, &lt;a href=&quot;../../../object#tap(&amp;amp;)-instance-method&quot;&gt; tap(&amp;amp;) tap&lt;/a&gt;, &lt;a href=&quot;../../../object#to_json(io:IO)-instance-method&quot;&gt; to_json(io : IO)&lt;br/&gt;to_json to_json&lt;/a&gt;,  to_pretty_json(io : IO, indent : String = &quot; &quot;)</source>
          <target state="translated">&lt;a href=&quot;../../../object#!:Bool-instance-method&quot;&gt;！ ：布尔！&lt;/a&gt;，&lt;a href=&quot;../../../object#!=(other)-instance-method&quot;&gt;=（其他）=！ ，&lt;/a&gt;〜（&lt;a href=&quot;../../../object#!~(other)-instance-method&quot;&gt;其它）〜！ &lt;/a&gt;，&lt;a href=&quot;../../../object#==(other)-instance-method&quot;&gt;==（其他）==&lt;/a&gt;，&lt;a href=&quot;../../../object#===(other:JSON::Any)-instance-method&quot;&gt;===（其他：JSON ::任何）&lt;br/&gt;===（其它：YAML ::任何）&lt;br/&gt;=== （other）===&lt;/a&gt;，&lt;a href=&quot;../../../object#=~(other)-instance-method&quot;&gt;=〜（other）=〜&lt;/a&gt;，&lt;a href=&quot;../../../object#as(type:Class)-instance-method&quot;&gt;as（type：Class）as&lt;/a&gt;，&lt;a href=&quot;../../../object#as?(type:Class)-instance-method&quot;&gt;as？（type：Class）as？&lt;/a&gt;，&lt;a href=&quot;../../../object#class-instance-method&quot;&gt;类class&lt;/a&gt;，&lt;a href=&quot;../../../object#dup-instance-method&quot;&gt;dup dup&lt;/a&gt;，&lt;a href=&quot;../../../object#hash(hasher)-instance-method&quot;&gt;hash（哈希）&lt;br/&gt;hash hash&lt;/a&gt;，&lt;a href=&quot;../../../object#in?(*values:Object):Bool-instance-method&quot;&gt;in？（* values：Object）：Bool &lt;br/&gt;in？（collection）：Bool in？&lt;/a&gt;，&lt;a href=&quot;../../../object#inspect:String-instance-method&quot;&gt;inspect：字符串&lt;br/&gt;inspect（io：IO）：Nil inspect&lt;/a&gt;，&lt;a href=&quot;../../../object#is_a?(type:Class):Bool-instance-method&quot;&gt;is_a？（type：Class）：布尔is_a？&lt;/a&gt;，&lt;a href=&quot;../../../object#itself-instance-method&quot;&gt;自己本身&lt;/a&gt;，&lt;a href=&quot;../../../object#nil?:Bool-instance-method&quot;&gt;零？：布尔零？&lt;/a&gt;，&lt;a href=&quot;../../../object#not_nil!-instance-method&quot;&gt;not_nil！not_nil！&lt;/a&gt;，pretty_inspect（宽度= 79，换行符=&amp;ldquo; \ n&amp;rdquo;，缩进= 0）：字符串pretty_inspect，&lt;a href=&quot;../../../object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt;pretty_print（pp：PrettyPrint）：Nil pretty_print&lt;/a&gt;，respons_to &lt;a href=&quot;../../../object#responds_to?(name:Symbol):Bool-instance-method&quot;&gt;？（name：Symbol）：Bool &lt;/a&gt;responses_to ？，&lt;a href=&quot;../../../object#tap(&amp;amp;)-instance-method&quot;&gt;tap（＆）tap&lt;/a&gt;，&lt;a href=&quot;../../../object#to_json(io:IO)-instance-method&quot;&gt;to_json（io：IO）&lt;br/&gt;to_json to_json&lt;/a&gt;，to_pretty_json（io：IO，缩进：String =&amp;ldquo;&amp;rdquo;）</target>
        </trans-unit>
        <trans-unit id="47a792acb478f43125c64712e0f290436a07f39f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../object#!=(other)-instance-method&quot;&gt; !=(other) !=&lt;/a&gt;, &lt;a href=&quot;../../../object#!~(other)-instance-method&quot;&gt; !~(other) !~&lt;/a&gt;, &lt;a href=&quot;../../../object#==(other)-instance-method&quot;&gt; ==(other) ==&lt;/a&gt;, &lt;a href=&quot;../../../object#===(other:JSON::Any)-instance-method&quot;&gt; ===(other : JSON::Any)&lt;br/&gt;===(other : YAML::Any)&lt;br/&gt;===(other) ===&lt;/a&gt;, &lt;a href=&quot;../../../object#=~(other)-instance-method&quot;&gt; =~(other) =~&lt;/a&gt;, &lt;a href=&quot;../../../object#class-instance-method&quot;&gt; class class&lt;/a&gt;, &lt;a href=&quot;../../../object#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;, &lt;a href=&quot;../../../object#hash(hasher)-instance-method&quot;&gt; hash(hasher)&lt;br/&gt;hash hash&lt;/a&gt;, &lt;a href=&quot;../../../object#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil&lt;br/&gt;inspect : String inspect&lt;/a&gt;, &lt;a href=&quot;../../../object#itself-instance-method&quot;&gt; itself itself&lt;/a&gt;, &lt;a href=&quot;../../../object#not_nil!-instance-method&quot;&gt; not_nil! not_nil!&lt;/a&gt;,  pretty_inspect(width = 79, newline = &quot;\n&quot;, indent = 0) : String pretty_inspect, &lt;a href=&quot;../../../object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt; pretty_print(pp : PrettyPrint) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;../../../object#tap(&amp;amp;block)-instance-method&quot;&gt; tap(&amp;amp;block) tap&lt;/a&gt;, &lt;a href=&quot;../../../object#to_json(io:IO)-instance-method&quot;&gt; to_json(io : IO)&lt;br/&gt;to_json to_json&lt;/a&gt;,  to_pretty_json(indent : String = &quot; &quot;)</source>
          <target state="translated">&lt;a href=&quot;../../../object#!=(other)-instance-method&quot;&gt;！=（其他）=！ ，&lt;/a&gt;〜（&lt;a href=&quot;../../../object#!~(other)-instance-method&quot;&gt;其它）〜！ &lt;/a&gt;，&lt;a href=&quot;../../../object#==(other)-instance-method&quot;&gt;==（其他）==&lt;/a&gt;，&lt;a href=&quot;../../../object#===(other:JSON::Any)-instance-method&quot;&gt;===（其他：JSON ::任何）&lt;br/&gt;===（其它：YAML ::任何）&lt;br/&gt;===（其他）===&lt;/a&gt;，&lt;a href=&quot;../../../object#=~(other)-instance-method&quot;&gt;=〜（其他）=〜&lt;/a&gt;，&lt;a href=&quot;../../../object#class-instance-method&quot;&gt;类class&lt;/a&gt;，&lt;a href=&quot;../../../object#dup-instance-method&quot;&gt;dup dup&lt;/a&gt;，&lt;a href=&quot;../../../object#hash(hasher)-instance-method&quot;&gt;hash（hasher）&lt;br/&gt;hash hash&lt;/a&gt;，&lt;a href=&quot;../../../object#inspect(io:IO):Nil-instance-method&quot;&gt;inspect（io：IO）：Nil &lt;br/&gt;inspect：字符串inspect&lt;/a&gt;，&lt;a href=&quot;../../../object#itself-instance-method&quot;&gt;本身本身&lt;/a&gt;，&lt;a href=&quot;../../../object#not_nil!-instance-method&quot;&gt;not_nil！ not_nil！&lt;/a&gt;，pretty_inspect（宽度= 79，换行符=&amp;ldquo; \ n&amp;rdquo;，缩进= 0）：字符串pretty_inspect，&lt;a href=&quot;../../../object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt;pretty_print（pp：PrettyPrint）：Nil pretty_print&lt;/a&gt;，&lt;a href=&quot;../../../object#tap(&amp;amp;block)-instance-method&quot;&gt;tap（＆block）tap&lt;/a&gt;，&lt;a href=&quot;../../../object#to_json(io:IO)-instance-method&quot;&gt;to_json（io：IO）&lt;br/&gt;to_json to_json&lt;/a&gt;，to_pretty_json（indent：String =&amp;ldquo;&amp;rdquo;）</target>
        </trans-unit>
        <trans-unit id="3ded64687bb4dafecc8b2b69deea635eddbb1eeb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../object#from_json(string_or_io,root:String)-class-method&quot;&gt; from_json(string_or_io, root : String)&lt;br/&gt;from_json(string_or_io) from_json&lt;/a&gt;, &lt;a href=&quot;../../../object#from_yaml(string_or_io:String%7CIO)-class-method&quot;&gt; from_yaml(string_or_io : String | IO) from_yaml&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../object#from_json(string_or_io,root:String)-class-method&quot;&gt;from_json（string_or_io，root：字符串）&lt;br/&gt;from_json（string_or_io）from_json&lt;/a&gt;，&lt;a href=&quot;../../../object#from_yaml(string_or_io:String%7CIO)-class-method&quot;&gt;from_yaml（string_or_io：String | IO）from_yaml&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f916bb08b17201f6da3d40149b84e42381b7ec47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../object#from_json(string_or_io,root:String):self-class-method&quot;&gt; from_json(string_or_io, root : String) : self&lt;br/&gt;from_json(string_or_io) : self from_json&lt;/a&gt;, &lt;a href=&quot;../../../object#from_yaml(string_or_io:String%7CIO):self-class-method&quot;&gt; from_yaml(string_or_io : String | IO) : self from_yaml&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../object#from_json(string_or_io,root:String):self-class-method&quot;&gt;from_json（string_or_io，root：String）：自我&lt;br/&gt;from_json（string_or_io）：自我from_json&lt;/a&gt;，&lt;a href=&quot;../../../object#from_yaml(string_or_io:String%7CIO):self-class-method&quot;&gt;from_yaml（string_or_io：String | IO）：自我from_yaml&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1c26c7833304c29cf8dd85fced4eb43a43fe7ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../reference#==(other:self)-instance-method&quot;&gt; ==(other : self)&lt;br/&gt;==(other : JSON::Any)&lt;br/&gt;==(other : YAML::Any)&lt;br/&gt;==(other) ==&lt;/a&gt;, &lt;a href=&quot;../../../reference#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;, &lt;a href=&quot;../../../reference#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;../../../reference#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;../../../reference#object_id:UInt64-instance-method&quot;&gt; object_id : UInt64 object_id&lt;/a&gt;, &lt;a href=&quot;../../../reference#pretty_print(pp):Nil-instance-method&quot;&gt; pretty_print(pp) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;../../../reference#same?(other:Reference)-instance-method&quot;&gt; same?(other : Reference)&lt;br/&gt;same?(other : Nil) same?&lt;/a&gt;, &lt;a href=&quot;../../../reference#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../reference#==(other:self)-instance-method&quot;&gt;==（other：self）&lt;br/&gt;==（other：JSON :: Any）&lt;br/&gt;==（other：YAML :: Any）&lt;br/&gt;==（other）==&lt;/a&gt;，&lt;a href=&quot;../../../reference#dup-instance-method&quot;&gt;dup dup&lt;/a&gt;，&lt;a href=&quot;../../../reference#hash(hasher)-instance-method&quot;&gt;hash（哈希）hash&lt;/a&gt;，&lt;a href=&quot;../../../reference#inspect(io:IO):Nil-instance-method&quot;&gt;inspect（io：IO） ：无检查&lt;/a&gt;，&lt;a href=&quot;../../../reference#object_id:UInt64-instance-method&quot;&gt;object_id：UInt64 object_id&lt;/a&gt;，&lt;a href=&quot;../../../reference#pretty_print(pp):Nil-instance-method&quot;&gt;pretty_print（pp）：无pretty_print&lt;/a&gt;，是否&lt;a href=&quot;../../../reference#same?(other:Reference)-instance-method&quot;&gt;相同？（其他：参考）是否&lt;br/&gt;相同（其他：无）？&lt;/a&gt;，&lt;a href=&quot;../../../reference#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：无to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="41b8ec5192fa216261515a36b5ff818aa526d282" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../value#==(other:JSON::Any)-instance-method&quot;&gt; ==(other : JSON::Any)&lt;br/&gt;==(other : YAML::Any)&lt;br/&gt;==(other) ==&lt;/a&gt;, &lt;a href=&quot;../../../value#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../value#==(other:JSON::Any)-instance-method&quot;&gt;==（other：JSON :: Any）&lt;br/&gt;==（other：YAML :: Any）&lt;br/&gt;==（other）==&lt;/a&gt;，&lt;a href=&quot;../../../value#dup-instance-method&quot;&gt;dup dup&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3706220341a649f84a91dd45fc7dc8f6afa82e2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../comparable#%3C(other:T)-instance-method&quot;&gt;  &amp;lt;&lt;/a&gt;, &lt;a href=&quot;../../comparable#%3C=(other:T)-instance-method&quot;&gt; &amp;lt;=(other : T) &amp;lt;=&lt;/a&gt;, &lt;a href=&quot;../../comparable#(other:T)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : T) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;../../comparable#==(other:T)-instance-method&quot;&gt; ==(other : T) ==&lt;/a&gt;, &lt;a href=&quot;../../comparable#%3E(other:T)-instance-method&quot;&gt; &amp;gt;(other : T) &amp;gt;&lt;/a&gt;, &lt;a href=&quot;../../comparable#%3E=(other:T)-instance-method&quot;&gt; &amp;gt;=(other : T) &amp;gt;=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../comparable#%3C(other:T)-instance-method&quot;&gt; &amp;lt;&lt;/a&gt;，&lt;a href=&quot;../../comparable#%3C=(other:T)-instance-method&quot;&gt;&amp;lt;=（other：T）&amp;lt;=&lt;/a&gt;，&lt;a href=&quot;../../comparable#(other:T)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：T）&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;../../comparable#==(other:T)-instance-method&quot;&gt;==（other：T）==&lt;/a&gt;，&lt;a href=&quot;../../comparable#%3E(other:T)-instance-method&quot;&gt;&amp;gt;（other：T）&amp;gt;&lt;/a&gt;，&lt;a href=&quot;../../comparable#%3E=(other:T)-instance-method&quot;&gt;&amp;gt; =（other：T）&amp;gt; =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b633460ec317dd35c3814ea64a71fe8914fe9dea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../comparable#%3C(other:T)-instance-method&quot;&gt;  &amp;lt;&lt;/a&gt;, &lt;a href=&quot;../../comparable#%3C=(other:T)-instance-method&quot;&gt; &amp;lt;=(other : T) &amp;lt;=&lt;/a&gt;, &lt;a href=&quot;../../comparable#(other:T)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : T) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;../../comparable#==(other:T)-instance-method&quot;&gt; ==(other : T) ==&lt;/a&gt;, &lt;a href=&quot;../../comparable#%3E(other:T)-instance-method&quot;&gt; &amp;gt;(other : T) &amp;gt;&lt;/a&gt;, &lt;a href=&quot;../../comparable#%3E=(other:T)-instance-method&quot;&gt; &amp;gt;=(other : T) &amp;gt;=&lt;/a&gt;, &lt;a href=&quot;../../comparable#clamp(min,max)-instance-method&quot;&gt; clamp(min, max)&lt;br/&gt;clamp(range : Range) clamp&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../comparable#%3C(other:T)-instance-method&quot;&gt;&amp;lt;&lt;/a&gt;，&lt;a href=&quot;../../comparable#%3C=(other:T)-instance-method&quot;&gt;&amp;lt;=（other：T）&amp;lt;=&lt;/a&gt;，&lt;a href=&quot;../../comparable#(other:T)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：T）&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;../../comparable#==(other:T)-instance-method&quot;&gt;==（other：T）==&lt;/a&gt;，&lt;a href=&quot;../../comparable#%3E(other:T)-instance-method&quot;&gt;&amp;gt;（other：T）&amp;gt;&lt;/a&gt;，&lt;a href=&quot;../../comparable#%3E=(other:T)-instance-method&quot;&gt;&amp;gt; =（other：T）&amp;gt; =&lt;/a&gt;，&lt;a href=&quot;../../comparable#clamp(min,max)-instance-method&quot;&gt;钳位（最小，最大）&lt;br/&gt;钳位（范围：范围）钳位&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2943e008205d1515e79f2e7a93066f74c6a0320d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../enum#&amp;amp;(other:self)-instance-method&quot;&gt; &amp;amp;(other : self) &amp;amp;&lt;/a&gt;, &lt;a href=&quot;../../enum#+(other:Int)-instance-method&quot;&gt; +(other : Int) +&lt;/a&gt;, &lt;a href=&quot;../../enum#-(other:Int)-instance-method&quot;&gt; -(other : Int) -&lt;/a&gt;, &lt;a href=&quot;../../enum#(other:self)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : self) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;../../enum#==(other:self)-instance-method&quot;&gt; ==(other : self) ==&lt;/a&gt;, &lt;a href=&quot;../../enum#%5E(other:self)-instance-method&quot;&gt; ^(other : self) ^&lt;/a&gt;, &lt;a href=&quot;../../enum#clone-instance-method&quot;&gt; clone clone&lt;/a&gt;, &lt;a href=&quot;../../enum#each(&amp;amp;)-instance-method&quot;&gt; each(&amp;amp;) each&lt;/a&gt;, &lt;a href=&quot;../../enum#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;../../enum#includes?(other:self)-instance-method&quot;&gt; includes?(other : self) includes?&lt;/a&gt;, &lt;a href=&quot;../../enum#to_f32:Float32-instance-method&quot;&gt; to_f32 : Float32 to_f32&lt;/a&gt;, &lt;a href=&quot;../../enum#to_f32!:Float32-instance-method&quot;&gt; to_f32! : Float32 to_f32!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_f64:Float64-instance-method&quot;&gt; to_f64 : Float64 to_f64&lt;/a&gt;, &lt;a href=&quot;../../enum#to_f64!:Float64-instance-method&quot;&gt; to_f64! : Float64 to_f64!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i:Int32-instance-method&quot;&gt; to_i : Int32 to_i&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i16:Int16-instance-method&quot;&gt; to_i16 : Int16 to_i16&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i16!:Int16-instance-method&quot;&gt; to_i16! : Int16 to_i16!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i32:Int32-instance-method&quot;&gt; to_i32 : Int32 to_i32&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i32!:Int32-instance-method&quot;&gt; to_i32! : Int32 to_i32!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i64:Int64-instance-method&quot;&gt; to_i64 : Int64 to_i64&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i64!:Int64-instance-method&quot;&gt; to_i64! : Int64 to_i64!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i8:Int8-instance-method&quot;&gt; to_i8 : Int8 to_i8&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i8!:Int8-instance-method&quot;&gt; to_i8! : Int8 to_i8!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_json(json:JSON::Builder)-instance-method&quot;&gt; to_json(json : JSON::Builder) to_json&lt;/a&gt;, &lt;a href=&quot;../../enum#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil&lt;br/&gt;to_s : String to_s&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u16:UInt16-instance-method&quot;&gt; to_u16 : UInt16 to_u16&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u16!:UInt16-instance-method&quot;&gt; to_u16! : UInt16 to_u16!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u32:UInt32-instance-method&quot;&gt; to_u32 : UInt32 to_u32&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u32!:UInt32-instance-method&quot;&gt; to_u32! : UInt32 to_u32!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u64:UInt64-instance-method&quot;&gt; to_u64 : UInt64 to_u64&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u64!:UInt64-instance-method&quot;&gt; to_u64! : UInt64 to_u64!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u8:UInt8-instance-method&quot;&gt; to_u8 : UInt8 to_u8&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u8!:UInt8-instance-method&quot;&gt; to_u8! : UInt8 to_u8!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt; to_yaml(yaml : YAML::Nodes::Builder) to_yaml&lt;/a&gt;, &lt;a href=&quot;../../enum#%7C(other:self)-instance-method&quot;&gt; |(other : self) |&lt;/a&gt;, &lt;a href=&quot;../../enum#~-instance-method&quot;&gt; ~ ~&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../enum#&amp;amp;(other:self)-instance-method&quot;&gt;＆（other：self）＆&lt;/a&gt;，&lt;a href=&quot;../../enum#+(other:Int)-instance-method&quot;&gt;+（other：Int）+&lt;/a&gt;，&lt;a href=&quot;../../enum#-(other:Int)-instance-method&quot;&gt;-（other：Int）-&lt;/a&gt;，&lt;a href=&quot;../../enum#(other:self)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：self）&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;../../enum#==(other:self)-instance-method&quot;&gt;==（other：self）==&lt;/a&gt;，&lt;a href=&quot;../../enum#%5E(other:self)-instance-method&quot;&gt;^（other： self）^&lt;/a&gt;，&lt;a href=&quot;../../enum#clone-instance-method&quot;&gt;clone clone&lt;/a&gt;，&lt;a href=&quot;../../enum#each(&amp;amp;)-instance-method&quot;&gt;each（＆）each&lt;/a&gt;，&lt;a href=&quot;../../enum#hash(hasher)-instance-method&quot;&gt;hash（hasher）hash&lt;/a&gt;，&lt;a href=&quot;../../enum#includes?(other:self)-instance-method&quot;&gt;include？（other：self）包括？&lt;/a&gt;，&lt;a href=&quot;../../enum#to_f32:Float32-instance-method&quot;&gt;to_f32：Float32 to_f32&lt;/a&gt;，&lt;a href=&quot;../../enum#to_f32!:Float32-instance-method&quot;&gt;to_f32！ ：Float32 to_f32！&lt;/a&gt;，&lt;a href=&quot;../../enum#to_f64:Float64-instance-method&quot;&gt;to_f64：Float64 to_f64&lt;/a&gt;，&lt;a href=&quot;../../enum#to_f64!:Float64-instance-method&quot;&gt;to_f64！ ：Float64 to_f64！&lt;/a&gt;，&lt;a href=&quot;../../enum#to_i:Int32-instance-method&quot;&gt;to_i：Int32 to_i&lt;/a&gt;，&lt;a href=&quot;../../enum#to_i16:Int16-instance-method&quot;&gt;to_i16：Int16 to_i16&lt;/a&gt;，&lt;a href=&quot;../../enum#to_i16!:Int16-instance-method&quot;&gt;to_i16！ ：int16 to_i16！&lt;/a&gt;，&lt;a href=&quot;../../enum#to_i32:Int32-instance-method&quot;&gt;to_i32：Int32 to_i32&lt;/a&gt;，&lt;a href=&quot;../../enum#to_i32!:Int32-instance-method&quot;&gt;to_i32！ ：Int32 to_i32！&lt;/a&gt;，&lt;a href=&quot;../../enum#to_i64:Int64-instance-method&quot;&gt;to_i64：Int64 to_i64&lt;/a&gt;，&lt;a href=&quot;../../enum#to_i64!:Int64-instance-method&quot;&gt;to_i64！ ：int64 to_i64！&lt;/a&gt;，&lt;a href=&quot;../../enum#to_i8:Int8-instance-method&quot;&gt;to_i8：Int8 to_i8&lt;/a&gt;，&lt;a href=&quot;../../enum#to_i8!:Int8-instance-method&quot;&gt;to_i8！ ：Int8 to_i8！&lt;/a&gt;，&lt;a href=&quot;../../enum#to_json(json:JSON::Builder)-instance-method&quot;&gt;to_json（json：JSON :: Builder）to_json&lt;/a&gt;，&lt;a href=&quot;../../enum#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：无&lt;br/&gt;to_s：字符串to_s&lt;/a&gt;，&lt;a href=&quot;../../enum#to_u16:UInt16-instance-method&quot;&gt;to_u16：UInt16 to_u16&lt;/a&gt;，&lt;a href=&quot;../../enum#to_u16!:UInt16-instance-method&quot;&gt;to_u16！ ：UInt16 to_u16！&lt;/a&gt;，&lt;a href=&quot;../../enum#to_u32:UInt32-instance-method&quot;&gt;to_u32：UInt32 to_u32&lt;/a&gt;，&lt;a href=&quot;../../enum#to_u32!:UInt32-instance-method&quot;&gt;to_u32！ ：UInt32 to_u32！&lt;/a&gt;，&lt;a href=&quot;../../enum#to_u64:UInt64-instance-method&quot;&gt;to_u64：UInt64 to_u64&lt;/a&gt;，&lt;a href=&quot;../../enum#to_u64!:UInt64-instance-method&quot;&gt;to_u64！ ：UInt64 to_u64！&lt;/a&gt;，&lt;a href=&quot;../../enum#to_u8:UInt8-instance-method&quot;&gt;to_u8：UInt8 to_u8&lt;/a&gt;，&lt;a href=&quot;../../enum#to_u8!:UInt8-instance-method&quot;&gt;to_u8！ ：UInt8 to_u8！&lt;/a&gt;，&lt;a href=&quot;../../enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt;to_yaml（yaml：YAML :: Nodes :: Builder）to_yaml&lt;/a&gt;，&lt;a href=&quot;../../enum#%7C(other:self)-instance-method&quot;&gt;|（other：self）| &lt;/a&gt;，&lt;a href=&quot;../../enum#~-instance-method&quot;&gt;〜〜&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9e6414276725061bd57a026a65b636a676a85c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../enum#&amp;amp;(other:self)-instance-method&quot;&gt; &amp;amp;(other : self) &amp;amp;&lt;/a&gt;, &lt;a href=&quot;../../enum#+(other:Int)-instance-method&quot;&gt; +(other : Int) +&lt;/a&gt;, &lt;a href=&quot;../../enum#-(other:Int)-instance-method&quot;&gt; -(other : Int) -&lt;/a&gt;, &lt;a href=&quot;../../enum#(other:self)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : self) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;../../enum#==(other:self)-instance-method&quot;&gt; ==(other : self) ==&lt;/a&gt;, &lt;a href=&quot;../../enum#%5E(other:self)-instance-method&quot;&gt; ^(other : self) ^&lt;/a&gt;, &lt;a href=&quot;../../enum#clone-instance-method&quot;&gt; clone clone&lt;/a&gt;, &lt;a href=&quot;../../enum#each(&amp;amp;block)-instance-method&quot;&gt; each(&amp;amp;block) each&lt;/a&gt;, &lt;a href=&quot;../../enum#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;../../enum#includes?(other:self)-instance-method&quot;&gt; includes?(other : self) includes?&lt;/a&gt;, &lt;a href=&quot;../../enum#to_f32:Float32-instance-method&quot;&gt; to_f32 : Float32 to_f32&lt;/a&gt;, &lt;a href=&quot;../../enum#to_f32!:Float32-instance-method&quot;&gt; to_f32! : Float32 to_f32!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_f64:Float64-instance-method&quot;&gt; to_f64 : Float64 to_f64&lt;/a&gt;, &lt;a href=&quot;../../enum#to_f64!:Float64-instance-method&quot;&gt; to_f64! : Float64 to_f64!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i:Int32-instance-method&quot;&gt; to_i : Int32 to_i&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i16:Int16-instance-method&quot;&gt; to_i16 : Int16 to_i16&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i16!:Int16-instance-method&quot;&gt; to_i16! : Int16 to_i16!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i32:Int32-instance-method&quot;&gt; to_i32 : Int32 to_i32&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i32!:Int32-instance-method&quot;&gt; to_i32! : Int32 to_i32!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i64:Int64-instance-method&quot;&gt; to_i64 : Int64 to_i64&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i64!:Int64-instance-method&quot;&gt; to_i64! : Int64 to_i64!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i8:Int8-instance-method&quot;&gt; to_i8 : Int8 to_i8&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i8!:Int8-instance-method&quot;&gt; to_i8! : Int8 to_i8!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_json(json:JSON::Builder)-instance-method&quot;&gt; to_json(json : JSON::Builder) to_json&lt;/a&gt;, &lt;a href=&quot;../../enum#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil&lt;br/&gt;to_s : String to_s&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u16:UInt16-instance-method&quot;&gt; to_u16 : UInt16 to_u16&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u16!:UInt16-instance-method&quot;&gt; to_u16! : UInt16 to_u16!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u32:UInt32-instance-method&quot;&gt; to_u32 : UInt32 to_u32&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u32!:UInt32-instance-method&quot;&gt; to_u32! : UInt32 to_u32!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u64:UInt64-instance-method&quot;&gt; to_u64 : UInt64 to_u64&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u64!:UInt64-instance-method&quot;&gt; to_u64! : UInt64 to_u64!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u8:UInt8-instance-method&quot;&gt; to_u8 : UInt8 to_u8&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u8!:UInt8-instance-method&quot;&gt; to_u8! : UInt8 to_u8!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt; to_yaml(yaml : YAML::Nodes::Builder) to_yaml&lt;/a&gt;, &lt;a href=&quot;../../enum#%7C(other:self)-instance-method&quot;&gt; |(other : self) |&lt;/a&gt;, &lt;a href=&quot;../../enum#~-instance-method&quot;&gt; ~ ~&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../enum#&amp;amp;(other:self)-instance-method&quot;&gt;＆（other：self）＆&lt;/a&gt;，&lt;a href=&quot;../../enum#+(other:Int)-instance-method&quot;&gt;+（other：Int）+&lt;/a&gt;，&lt;a href=&quot;../../enum#-(other:Int)-instance-method&quot;&gt;-（other：Int）-&lt;/a&gt;，&lt;a href=&quot;../../enum#(other:self)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：self）&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;../../enum#==(other:self)-instance-method&quot;&gt;==（other：self）==&lt;/a&gt;，&lt;a href=&quot;../../enum#%5E(other:self)-instance-method&quot;&gt;^（other： self）^&lt;/a&gt;，&lt;a href=&quot;../../enum#clone-instance-method&quot;&gt;clone clone&lt;/a&gt;，&lt;a href=&quot;../../enum#each(&amp;amp;block)-instance-method&quot;&gt;each（＆block）each&lt;/a&gt;，&lt;a href=&quot;../../enum#hash(hasher)-instance-method&quot;&gt;hash（hasher）hash&lt;/a&gt;，&lt;a href=&quot;../../enum#includes?(other:self)-instance-method&quot;&gt;include？（other：self）包括吗？&lt;/a&gt;，&lt;a href=&quot;../../enum#to_f32:Float32-instance-method&quot;&gt;to_f32：Float32 to_f32&lt;/a&gt;，&lt;a href=&quot;../../enum#to_f32!:Float32-instance-method&quot;&gt;to_f32！ ：Float32 to_f32！&lt;/a&gt;，&lt;a href=&quot;../../enum#to_f64:Float64-instance-method&quot;&gt;to_f64：Float64 to_f64&lt;/a&gt;，&lt;a href=&quot;../../enum#to_f64!:Float64-instance-method&quot;&gt;to_f64！ ：Float64 to_f64！&lt;/a&gt;，&lt;a href=&quot;../../enum#to_i:Int32-instance-method&quot;&gt;to_i：Int32 to_i&lt;/a&gt;，&lt;a href=&quot;../../enum#to_i16:Int16-instance-method&quot;&gt;to_i16：Int16 to_i16&lt;/a&gt;，&lt;a href=&quot;../../enum#to_i16!:Int16-instance-method&quot;&gt;to_i16！ ：Int16 to_i16！&lt;/a&gt;，&lt;a href=&quot;../../enum#to_i32:Int32-instance-method&quot;&gt;to_i32：Int32 to_i32&lt;/a&gt;，&lt;a href=&quot;../../enum#to_i32!:Int32-instance-method&quot;&gt;to_i32！ ：Int32 to_i32！&lt;/a&gt;，&lt;a href=&quot;../../enum#to_i64:Int64-instance-method&quot;&gt;to_i64：Int64 to_i64&lt;/a&gt;，&lt;a href=&quot;../../enum#to_i64!:Int64-instance-method&quot;&gt;to_i64！ ：int64 to_i64！&lt;/a&gt;，&lt;a href=&quot;../../enum#to_i8:Int8-instance-method&quot;&gt;to_i8：Int8 to_i8&lt;/a&gt;，&lt;a href=&quot;../../enum#to_i8!:Int8-instance-method&quot;&gt;to_i8！ ：int8 to_i8！&lt;/a&gt;，&lt;a href=&quot;../../enum#to_json(json:JSON::Builder)-instance-method&quot;&gt;to_json（json：JSON :: Builder）to_json&lt;/a&gt;，&lt;a href=&quot;../../enum#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：无&lt;br/&gt;to_s：字符串to_s&lt;/a&gt;，&lt;a href=&quot;../../enum#to_u16:UInt16-instance-method&quot;&gt;to_u16：UInt16 to_u16&lt;/a&gt;，&lt;a href=&quot;../../enum#to_u16!:UInt16-instance-method&quot;&gt;to_u16！ ：UInt16 to_u16！&lt;/a&gt;，&lt;a href=&quot;../../enum#to_u32:UInt32-instance-method&quot;&gt;to_u32：UInt32 to_u32&lt;/a&gt;，&lt;a href=&quot;../../enum#to_u32!:UInt32-instance-method&quot;&gt;to_u32！ ：UInt32 to_u32！&lt;/a&gt;，&lt;a href=&quot;../../enum#to_u64:UInt64-instance-method&quot;&gt;to_u64：UInt64 to_u64&lt;/a&gt;，&lt;a href=&quot;../../enum#to_u64!:UInt64-instance-method&quot;&gt;to_u64！ ：UInt64 to_u64！&lt;/a&gt;，&lt;a href=&quot;../../enum#to_u8:UInt8-instance-method&quot;&gt;to_u8：UInt8 to_u8&lt;/a&gt;，&lt;a href=&quot;../../enum#to_u8!:UInt8-instance-method&quot;&gt;to_u8！ ：UInt8 to_u8！&lt;/a&gt;，&lt;a href=&quot;../../enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt;to_yaml（yaml：YAML :: Nodes :: Builder）to_yaml&lt;/a&gt;，&lt;a href=&quot;../../enum#%7C(other:self)-instance-method&quot;&gt;|（other：self）| &lt;/a&gt;，&lt;a href=&quot;../../enum#~-instance-method&quot;&gt;〜〜&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dad22963cb92b59a7d137f25dccead5634c9022a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../enum#each(&amp;amp;)-class-method&quot;&gt; each(&amp;amp;) each&lt;/a&gt;, &lt;a href=&quot;../../enum#names:Array(String)-class-method&quot;&gt; names : Array(String) names&lt;/a&gt;, &lt;a href=&quot;../../enum#valid?(value:self):Bool-class-method&quot;&gt; valid?(value : self) : Bool valid?&lt;/a&gt;, &lt;a href=&quot;../../enum#values:Array(self)-class-method&quot;&gt; values : Array(self) values&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../enum#each(&amp;amp;)-class-method&quot;&gt;each（＆）each&lt;/a&gt;，&lt;a href=&quot;../../enum#names:Array(String)-class-method&quot;&gt;名称：Array（String）names&lt;/a&gt;，&lt;a href=&quot;../../enum#valid?(value:self):Bool-class-method&quot;&gt;有效吗？（value：self）：布尔有效吗？&lt;/a&gt;，&lt;a href=&quot;../../enum#values:Array(self)-class-method&quot;&gt;values：数组（自身）值&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94f3edd99cae2854625246a7a3a87533e371bdf7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../enum#each(&amp;amp;block)-class-method&quot;&gt; each(&amp;amp;block) each&lt;/a&gt;, &lt;a href=&quot;../../enum#names:Array(String)-class-method&quot;&gt; names : Array(String) names&lt;/a&gt;, &lt;a href=&quot;../../enum#values:Array(self)-class-method&quot;&gt; values : Array(self) values&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../enum#each(&amp;amp;block)-class-method&quot;&gt;each（＆block）each&lt;/a&gt;，&lt;a href=&quot;../../enum#names:Array(String)-class-method&quot;&gt;名称：Array（String）名称&lt;/a&gt;，&lt;a href=&quot;../../enum#values:Array(self)-class-method&quot;&gt;值：Array（self）值&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a34e497fa911ec80230e7e0fd8373653c6db5c1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../enum#from_value(value:Int):self-class-method&quot;&gt; from_value(value : Int) : self from_value&lt;/a&gt;, &lt;a href=&quot;../../enum#from_value?(value:Int):self?-class-method&quot;&gt; from_value?(value : Int) : self? from_value?&lt;/a&gt;, &lt;a href=&quot;../../enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt; new(ctx : YAML::ParseContext, node : YAML::Nodes::Node)&lt;br/&gt;new(pull : JSON::PullParser) new&lt;/a&gt;, &lt;a href=&quot;../../enum#parse(string:String):self-class-method&quot;&gt; parse(string : String) : self parse&lt;/a&gt;, &lt;a href=&quot;../../enum#parse?(string:String):self?-class-method&quot;&gt; parse?(string : String) : self? parse?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../enum#from_value(value:Int):self-class-method&quot;&gt;from_value（value：Int）：自我from_value&lt;/a&gt;，&lt;a href=&quot;../../enum#from_value?(value:Int):self?-class-method&quot;&gt;from_value？（value：Int）：自我吗？from_value？&lt;/a&gt;，&lt;a href=&quot;../../enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;new（ctx：YAML :: ParseContext，node：YAML :: Nodes :: Node）&lt;br/&gt;new（pull：JSON :: PullParser）new&lt;/a&gt;，&lt;a href=&quot;../../enum#parse(string:String):self-class-method&quot;&gt;parse（string：String）：self parse&lt;/a&gt;，&lt;a href=&quot;../../enum#parse?(string:String):self?-class-method&quot;&gt;parse？（string：String）：self ？解析？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3524f010977c33ca0b9d3a1b514bda66bf6a01ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../enum#from_value(value:Int):self-class-method&quot;&gt; from_value(value : Int) : self from_value&lt;/a&gt;, &lt;a href=&quot;../../enum#from_value?(value:Int):self?-class-method&quot;&gt; from_value?(value : Int) : self? from_value?&lt;/a&gt;, &lt;a href=&quot;../../enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt; new(ctx : YAML::ParseContext, node : YAML::Nodes::Node)&lt;br/&gt;new(value : self)&lt;br/&gt;new(pull : JSON::PullParser) new&lt;/a&gt;, &lt;a href=&quot;../../enum#parse(string:String):self-class-method&quot;&gt; parse(string : String) : self parse&lt;/a&gt;, &lt;a href=&quot;../../enum#parse?(string:String):self?-class-method&quot;&gt; parse?(string : String) : self? parse?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../enum#from_value(value:Int):self-class-method&quot;&gt;from_value（value：Int）：自我from_value&lt;/a&gt;，&lt;a href=&quot;../../enum#from_value?(value:Int):self?-class-method&quot;&gt;from_value？（value：Int）：自我？from_value？&lt;/a&gt;，&lt;a href=&quot;../../enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;new（ctx：YAML :: ParseContext，node：YAML :: Nodes :: Node）&lt;br/&gt;new（value：self）&lt;br/&gt;new（pull：JSON :: PullParser）new&lt;/a&gt;，&lt;a href=&quot;../../enum#parse(string:String):self-class-method&quot;&gt;parse（string：String）：self parse&lt;/a&gt;，&lt;a href=&quot;../../enum#parse?(string:String):self?-class-method&quot;&gt;parse？（字符串：字符串）：自我？解析？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="799d35e79bf96ca534a6495768d2581334a474f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="65aca7248f1087ad6bc63bbbd03c977a55d55eec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../enumerable#all?(&amp;amp;)-instance-method&quot;&gt; all?(&amp;amp;)&lt;br/&gt;all?(pattern)&lt;br/&gt;all? all?&lt;/a&gt;, &lt;a href=&quot;../../enumerable#any?(&amp;amp;)-instance-method&quot;&gt; any?(&amp;amp;)&lt;br/&gt;any?(pattern)&lt;br/&gt;any? any?&lt;/a&gt;, &lt;a href=&quot;../../enumerable#chunks(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; chunks(&amp;amp;block : T -&amp;gt; U) forall U chunks&lt;/a&gt;, &lt;a href=&quot;../../enumerable#compact_map(&amp;amp;)-instance-method&quot;&gt; compact_map(&amp;amp;) compact_map&lt;/a&gt;, &lt;a href=&quot;../../enumerable#count(&amp;amp;)-instance-method&quot;&gt; count(&amp;amp;)&lt;br/&gt;count(item) count&lt;/a&gt;, &lt;a href=&quot;../../enumerable#cycle(&amp;amp;)-instance-method&quot;&gt; cycle(&amp;amp;)&lt;br/&gt;cycle(n, &amp;amp;) cycle&lt;/a&gt;, &lt;a href=&quot;../../enumerable#each(&amp;amp;block:T-%3E_)-instance-method&quot;&gt; each(&amp;amp;block : T -&amp;gt; _) each&lt;/a&gt;, &lt;a href=&quot;../../enumerable#each_cons(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt; each_cons(count : Int, reuse = false, &amp;amp;) each_cons&lt;/a&gt;, &lt;a href=&quot;../../enumerable#each_cons_pair(&amp;amp;:T,T-%3E_):Nil-instance-method&quot;&gt; each_cons_pair(&amp;amp; : T, T -&amp;gt; _) : Nil each_cons_pair&lt;/a&gt;, &lt;a href=&quot;../../enumerable#each_slice(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt; each_slice(count : Int, reuse = false, &amp;amp;) each_slice&lt;/a&gt;, &lt;a href=&quot;../../enumerable#each_with_index(offset=0,&amp;amp;)-instance-method&quot;&gt; each_with_index(offset = 0, &amp;amp;) each_with_index&lt;/a&gt;, &lt;a href=&quot;../../enumerable#each_with_object(obj,&amp;amp;)-instance-method&quot;&gt; each_with_object(obj, &amp;amp;) each_with_object&lt;/a&gt;, &lt;a href=&quot;../../enumerable#empty?-instance-method&quot;&gt; empty? empty?&lt;/a&gt;, &lt;a href=&quot;../../enumerable#find(if_none=nil,&amp;amp;)-instance-method&quot;&gt; find(if_none = nil, &amp;amp;) find&lt;/a&gt;, &lt;a href=&quot;../../enumerable#first(&amp;amp;)-instance-method&quot;&gt; first(&amp;amp;)&lt;br/&gt;first(count : Int)&lt;br/&gt;first first&lt;/a&gt;, &lt;a href=&quot;../../enumerable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;../../enumerable#flat_map(&amp;amp;block:T-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt; flat_map(&amp;amp;block : T -&amp;gt; Array(U) | Iterator(U) | U) forall U flat_map&lt;/a&gt;, &lt;a href=&quot;../../enumerable#grep(pattern)-instance-method&quot;&gt; grep(pattern) grep&lt;/a&gt;, &lt;a href=&quot;../../enumerable#group_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; group_by(&amp;amp;block : T -&amp;gt; U) forall U group_by&lt;/a&gt;, &lt;a href=&quot;../../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt; in_groups_of(size : Int, filled_up_with : U = nil) forall U&lt;br/&gt;in_groups_of(size : Int, filled_up_with : U = nil, reuse = false, &amp;amp;) forall U in_groups_of&lt;/a&gt;, &lt;a href=&quot;../../enumerable#includes?(obj)-instance-method&quot;&gt; includes?(obj) includes?&lt;/a&gt;, &lt;a href=&quot;../../enumerable#index(&amp;amp;)-instance-method&quot;&gt; index(&amp;amp;)&lt;br/&gt;index(obj) index&lt;/a&gt;, &lt;a href=&quot;../../enumerable#index_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; index_by(&amp;amp;block : T -&amp;gt; U) forall U index_by&lt;/a&gt;,  join(separator = &quot;&quot;, &amp;amp; : T -&amp;gt; )</source>
          <target state="translated">&lt;a href=&quot;../../enumerable#all?(&amp;amp;)-instance-method&quot;&gt;全部？（＆）&lt;br/&gt;全部？（模式）&lt;br/&gt;全部？所有？&lt;/a&gt;，&lt;a href=&quot;../../enumerable#any?(&amp;amp;)-instance-method&quot;&gt;对吗？（＆）&lt;br/&gt;对吗？（模式）&lt;br/&gt;对吗？任何？&lt;/a&gt;，&lt;a href=&quot;../../enumerable#compact_map(&amp;amp;)-instance-method&quot;&gt;针对所有&lt;/a&gt;&lt;a href=&quot;../../enumerable#chunks(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;U个块的chunks（＆block：T-&amp;gt; U）&lt;/a&gt;，compact_map（＆）compact_map，&lt;a href=&quot;../../enumerable#count(&amp;amp;)-instance-method&quot;&gt;count（＆）&lt;br/&gt;count（item）count&lt;/a&gt;，&lt;a href=&quot;../../enumerable#cycle(&amp;amp;)-instance-method&quot;&gt;cycle（＆）&lt;br/&gt;cycle（n，＆）cycle&lt;/a&gt;，&lt;a href=&quot;../../enumerable#each(&amp;amp;block:T-%3E_)-instance-method&quot;&gt;每个（＆block：T-&amp;gt; _ ）each&lt;/a&gt;，&lt;a href=&quot;../../enumerable#each_cons(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt;each_cons（count：Int，reuse = false，＆）each_cons&lt;/a&gt;，&lt;a href=&quot;../../enumerable#each_cons_pair(&amp;amp;:T,T-%3E_):Nil-instance-method&quot;&gt;each_cons_pair（＆：T，T-&amp;gt; _）：Nil each_cons_pair&lt;/a&gt;，&lt;a href=&quot;../../enumerable#each_slice(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt;each_slice（count：Int，复用= false，＆）each_slice&lt;/a&gt;，&lt;a href=&quot;../../enumerable#each_with_index(offset=0,&amp;amp;)-instance-method&quot;&gt;each_with_index（offset = 0，＆）each_with_index&lt;/a&gt;，&lt;a href=&quot;../../enumerable#each_with_object(obj,&amp;amp;)-instance-method&quot;&gt;each_with_object（obj，＆）each_with_object&lt;/a&gt;，&lt;a href=&quot;../../enumerable#empty?-instance-method&quot;&gt;空吗？空吗&lt;/a&gt;，&lt;a href=&quot;../../enumerable#find(if_none=nil,&amp;amp;)-instance-method&quot;&gt;find（if_none = nil，＆）find&lt;/a&gt;，&lt;a href=&quot;../../enumerable#first(&amp;amp;)-instance-method&quot;&gt;first（＆）&lt;br/&gt;first（count：Int）&lt;br/&gt;首先&lt;/a&gt;，&lt;a href=&quot;../../enumerable#first?-instance-method&quot;&gt;首先？第一？&lt;/a&gt;，&lt;a href=&quot;../../enumerable#flat_map(&amp;amp;block:T-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt;flat_map（＆block：T-&amp;gt; Array（U）| Iterator（U）| U）适用于所有U flat_map&lt;/a&gt;，&lt;a href=&quot;../../enumerable#grep(pattern)-instance-method&quot;&gt;grep（pattern）grep&lt;/a&gt;，&lt;a href=&quot;../../enumerable#group_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;group_by（＆block：T-&amp;gt; U）适用于所有U group_by&lt;/a&gt;，&lt;a href=&quot;../../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt;in_groups_of（size：Int， ：U = nil）forall U &lt;br/&gt;in_groups_of（size：Int，fill_up_with：U = nil，复用= false，＆）forall U in_groups_of&lt;/a&gt;，&lt;a href=&quot;../../enumerable#includes?(obj)-instance-method&quot;&gt;include？（obj）includes？&lt;/a&gt;，&lt;a href=&quot;../../enumerable#index(&amp;amp;)-instance-method&quot;&gt;index（＆）&lt;br/&gt;index（obj）index&lt;/a&gt;，&lt;a href=&quot;../../enumerable#index_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;index_by（＆block：T-&amp;gt; U）对于所有U index_by&lt;/a&gt;，join（separator =&amp;ldquo;&amp;rdquo;，＆：T-&amp;gt;）</target>
        </trans-unit>
        <trans-unit id="3f8264965fc2c685b84108d732337e2bd8c43934" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../enumerable#all?(&amp;amp;block)-instance-method&quot;&gt; all?(&amp;amp;block)&lt;br/&gt;all?(pattern)&lt;br/&gt;all? all?&lt;/a&gt;, &lt;a href=&quot;../../enumerable#any?(&amp;amp;block)-instance-method&quot;&gt; any?(&amp;amp;block)&lt;br/&gt;any?(pattern)&lt;br/&gt;any? any?&lt;/a&gt;, &lt;a href=&quot;../../enumerable#chunks(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; chunks(&amp;amp;block : T -&amp;gt; U) forall U chunks&lt;/a&gt;, &lt;a href=&quot;../../enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt; compact_map(&amp;amp;block) compact_map&lt;/a&gt;, &lt;a href=&quot;../../enumerable#count(item)-instance-method&quot;&gt; count(item)&lt;br/&gt;count(&amp;amp;block) count&lt;/a&gt;, &lt;a href=&quot;../../enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt; cycle(&amp;amp;block)&lt;br/&gt;cycle(n, &amp;amp;block) cycle&lt;/a&gt;, &lt;a href=&quot;../../enumerable#each(&amp;amp;block:T-%3EUNDERSCORE)-instance-method&quot;&gt; each(&amp;amp;block : T -&amp;gt; UNDERSCORE) each&lt;/a&gt;, &lt;a href=&quot;../../enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_cons(count : Int, reuse = false, &amp;amp;block) each_cons&lt;/a&gt;, &lt;a href=&quot;../../enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_slice(count : Int, reuse = false, &amp;amp;block) each_slice&lt;/a&gt;, &lt;a href=&quot;../../enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt; each_with_index(offset = 0, &amp;amp;block) each_with_index&lt;/a&gt;, &lt;a href=&quot;../../enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt; each_with_object(obj, &amp;amp;block) each_with_object&lt;/a&gt;, &lt;a href=&quot;../../enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt; find(if_none = nil, &amp;amp;block) find&lt;/a&gt;, &lt;a href=&quot;../../enumerable#first(count:Int)-instance-method&quot;&gt; first(count : Int)&lt;br/&gt;first first&lt;/a&gt;, &lt;a href=&quot;../../enumerable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;../../enumerable#flat_map(&amp;amp;block:T-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt; flat_map(&amp;amp;block : T -&amp;gt; Array(U) | Iterator(U) | U) forall U flat_map&lt;/a&gt;, &lt;a href=&quot;../../enumerable#grep(pattern)-instance-method&quot;&gt; grep(pattern) grep&lt;/a&gt;, &lt;a href=&quot;../../enumerable#group_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; group_by(&amp;amp;block : T -&amp;gt; U) forall U group_by&lt;/a&gt;, &lt;a href=&quot;../../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt; in_groups_of(size : Int, filled_up_with : U = nil) forall U&lt;br/&gt;in_groups_of(size : Int, filled_up_with : U = nil, reuse = false, &amp;amp;block) forall U in_groups_of&lt;/a&gt;, &lt;a href=&quot;../../enumerable#includes?(obj)-instance-method&quot;&gt; includes?(obj) includes?&lt;/a&gt;, &lt;a href=&quot;../../enumerable#index(&amp;amp;block)-instance-method&quot;&gt; index(&amp;amp;block)&lt;br/&gt;index(obj) index&lt;/a&gt;, &lt;a href=&quot;../../enumerable#index_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; index_by(&amp;amp;block : T -&amp;gt; U) forall U index_by&lt;/a&gt;,  join(separator = &quot;&quot;, &amp;amp;block)</source>
          <target state="translated">&lt;a href=&quot;../../enumerable#all?(&amp;amp;block)-instance-method&quot;&gt;全部？（＆block）&lt;br/&gt;全部？（模式）&lt;br/&gt;全部？所有？&lt;/a&gt;，&lt;a href=&quot;../../enumerable#any?(&amp;amp;block)-instance-method&quot;&gt;对吗？（＆block）&lt;br/&gt;对吗？（pattern）&lt;br/&gt;对吗？任何？&lt;/a&gt;，所有&lt;a href=&quot;../../enumerable#chunks(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;U个块的chunks（＆block：T-&amp;gt; U）&lt;/a&gt;，&lt;a href=&quot;../../enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt;compact_map（＆block）compact_map&lt;/a&gt;，&lt;a href=&quot;../../enumerable#count(item)-instance-method&quot;&gt;count（item）&lt;br/&gt;count（＆block）count&lt;/a&gt;，&lt;a href=&quot;../../enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt;cycle（＆block）&lt;br/&gt;cycle（n，＆block）cycle&lt;/a&gt;，&lt;a href=&quot;../../enumerable#each(&amp;amp;block:T-%3EUNDERSCORE)-instance-method&quot;&gt;每个（＆block：T-&amp;gt; UNDERSCORE ）each&lt;/a&gt;，&lt;a href=&quot;../../enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_cons（count：Int，复用= false，＆block）each_cons&lt;/a&gt;，&lt;a href=&quot;../../enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_slice（count：Int，复用= false，＆block）each_slice&lt;/a&gt;，&lt;a href=&quot;../../enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt;each_with_index（offset = 0，＆block）each_with_index&lt;/a&gt;，&lt;a href=&quot;../../enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt;each_with_object（obj，＆block）each_with_object&lt;/a&gt;，&lt;a href=&quot;../../enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt;find（if_none = nil，＆block）find&lt;/a&gt;，&lt;a href=&quot;../../enumerable#first(count:Int)-instance-method&quot;&gt;first（count：Int）&lt;br/&gt;首先&lt;/a&gt;，&lt;a href=&quot;../../enumerable#first?-instance-method&quot;&gt;首先？第一？&lt;/a&gt;，&lt;a href=&quot;../../enumerable#flat_map(&amp;amp;block:T-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt;flat_map（＆block：T-&amp;gt; Array（U）| Iterator（U）| U）全部U flat_map&lt;/a&gt;，&lt;a href=&quot;../../enumerable#grep(pattern)-instance-method&quot;&gt;grep（pattern）grep&lt;/a&gt;，&lt;a href=&quot;../../enumerable#group_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;group_by（＆block：T-&amp;gt; U）全部U group_by&lt;/a&gt;，&lt;a href=&quot;../../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt;in_groups_of（size：Int， ：U = nil）forall U &lt;br/&gt;in_groups_of（size：Int，fill_up_with：U = nil，复用= false，＆block）forall U in_groups_of&lt;/a&gt;，&lt;a href=&quot;../../enumerable#includes?(obj)-instance-method&quot;&gt;include？（obj）includes？&lt;/a&gt;，&lt;a href=&quot;../../enumerable#index(&amp;amp;block)-instance-method&quot;&gt;index（＆block）&lt;br/&gt;index（obj）index&lt;/a&gt;，&lt;a href=&quot;../../enumerable#index_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;index_by（＆block：T-&amp;gt; U）for all U index_by&lt;/a&gt;，join（separator =&amp;ldquo;&amp;rdquo;，＆block）</target>
        </trans-unit>
        <trans-unit id="b9e66dba69f1da641a33866ea1d1fccf2e5d22ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../exception#backtrace-instance-method&quot;&gt; backtrace backtrace&lt;/a&gt;, &lt;a href=&quot;../../exception#backtrace?-instance-method&quot;&gt; backtrace? backtrace?&lt;/a&gt;, &lt;a href=&quot;../../exception#callstack:CallStack?-instance-method&quot;&gt; callstack : CallStack? callstack&lt;/a&gt;, &lt;a href=&quot;../../exception#callstack=(callstack:CallStack?)-instance-method&quot;&gt; callstack=(callstack : CallStack?) callstack=&lt;/a&gt;, &lt;a href=&quot;../../exception#cause:Exception?-instance-method&quot;&gt; cause : Exception? cause&lt;/a&gt;, &lt;a href=&quot;../../exception#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;../../exception#inspect_with_backtrace(io:IO):Nil-instance-method&quot;&gt; inspect_with_backtrace(io : IO) : Nil&lt;br/&gt;inspect_with_backtrace : String inspect_with_backtrace&lt;/a&gt;, &lt;a href=&quot;../../exception#message:String?-instance-method&quot;&gt; message : String? message&lt;/a&gt;, &lt;a href=&quot;../../exception#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../exception#backtrace-instance-method&quot;&gt;backtrace backtrace&lt;/a&gt;，&lt;a href=&quot;../../exception#backtrace?-instance-method&quot;&gt;回溯？回溯？&lt;/a&gt;，&lt;a href=&quot;../../exception#callstack:CallStack?-instance-method&quot;&gt;callstack：CallStack？callstack&lt;/a&gt;，&lt;a href=&quot;../../exception#callstack=(callstack:CallStack?)-instance-method&quot;&gt;callstack =（（callstack：CallStack？）callstack =&lt;/a&gt;，&lt;a href=&quot;../../exception#cause:Exception?-instance-method&quot;&gt;原因：异常？原因&lt;/a&gt;，&lt;a href=&quot;../../exception#inspect(io:IO):Nil-instance-method&quot;&gt;inspect（io：IO）：无检查&lt;/a&gt;，&lt;a href=&quot;../../exception#inspect_with_backtrace(io:IO):Nil-instance-method&quot;&gt;inspect_with_backtrace（io：IO）：无&lt;br/&gt;inspect_with_backtrace：字符串inspect_with_backtrace&lt;/a&gt;，&lt;a href=&quot;../../exception#message:String?-instance-method&quot;&gt;消息：字符串？消息&lt;/a&gt;，&lt;a href=&quot;../../exception#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：无to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="faa8ba3cca0f42399e182f2fc386e64d745d34ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../exception#backtrace-instance-method&quot;&gt; backtrace backtrace&lt;/a&gt;, &lt;a href=&quot;../../exception#backtrace?-instance-method&quot;&gt; backtrace? backtrace?&lt;/a&gt;, &lt;a href=&quot;../../exception#cause:Exception?-instance-method&quot;&gt; cause : Exception? cause&lt;/a&gt;, &lt;a href=&quot;../../exception#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;../../exception#inspect_with_backtrace(io:IO):Nil-instance-method&quot;&gt; inspect_with_backtrace(io : IO) : Nil&lt;br/&gt;inspect_with_backtrace : String inspect_with_backtrace&lt;/a&gt;, &lt;a href=&quot;../../exception#message:String?-instance-method&quot;&gt; message : String? message&lt;/a&gt;, &lt;a href=&quot;../../exception#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../exception#backtrace-instance-method&quot;&gt;backtrace backtrace&lt;/a&gt;，&lt;a href=&quot;../../exception#backtrace?-instance-method&quot;&gt;回溯？回溯？&lt;/a&gt;，&lt;a href=&quot;../../exception#cause:Exception?-instance-method&quot;&gt;原因：异常？原因&lt;/a&gt;，&lt;a href=&quot;../../exception#inspect(io:IO):Nil-instance-method&quot;&gt;inspect（io：IO）：无检查&lt;/a&gt;，&lt;a href=&quot;../../exception#inspect_with_backtrace(io:IO):Nil-instance-method&quot;&gt;inspect_with_backtrace（io：IO）：无&lt;br/&gt;inspect_with_backtrace：字符串inspect_with_backtrace&lt;/a&gt;，&lt;a href=&quot;../../exception#message:String?-instance-method&quot;&gt;消息：字符串？消息&lt;/a&gt;，&lt;a href=&quot;../../exception#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：无to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a5f8ef885072f274aee0b3fceaa92255b0e8cc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../io#copy(src,dst,limit:Int):Int64-class-method&quot;&gt; copy(src, dst, limit : Int) : Int64&lt;br/&gt;copy(src, dst) : Int64 copy&lt;/a&gt;, &lt;a href=&quot;../../io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt; pipe(read_blocking = false, write_blocking = false) : Tuple(IO::FileDescriptor, IO::FileDescriptor)&lt;br/&gt;pipe(read_blocking = false, write_blocking = false, &amp;amp;) pipe&lt;/a&gt;, &lt;a href=&quot;../../io#same_content?(stream1:IO,stream2:IO)-class-method&quot;&gt; same_content?(stream1 : IO, stream2 : IO) same_content?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../io#copy(src,dst,limit:Int):Int64-class-method&quot;&gt;copy（src，dst，limit：Int）：Int64 &lt;br/&gt;copy（src，dst）：Int64 copy&lt;/a&gt;，&lt;a href=&quot;../../io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt;pipe（read_blocking = false，write_blocking = false）：Tuple（IO :: FileDescriptor，IO :: FileDescriptor）&lt;br/&gt;管道（read_blocking = false ，write_blocking = false和＆）管道&lt;/a&gt;，&lt;a href=&quot;../../io#same_content?(stream1:IO,stream2:IO)-class-method&quot;&gt;same_content？（stream1：IO，stream2：IO）same_content？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="93042bafbdc482829fe1db4ab7cd870986b25337" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../io#copy(src,dst,limit:Int):UInt64-class-method&quot;&gt; copy(src, dst, limit : Int) : UInt64&lt;br/&gt;copy(src, dst) : UInt64 copy&lt;/a&gt;, &lt;a href=&quot;../../io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt; pipe(read_blocking = false, write_blocking = false) : Tuple(IO::FileDescriptor, IO::FileDescriptor)&lt;br/&gt;pipe(read_blocking = false, write_blocking = false, &amp;amp;block) pipe&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../io#copy(src,dst,limit:Int):UInt64-class-method&quot;&gt;copy（src，dst，limit：Int）：UInt64 &lt;br/&gt;copy（src，dst）：UInt64 copy&lt;/a&gt;，&lt;a href=&quot;../../io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt;pipe（read_blocking = false，write_blocking = false）：Tuple（IO :: FileDescriptor，IO :: FileDescriptor）&lt;br/&gt;管道（read_blocking = false ，write_blocking = false，＆block）管道&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0dc766cb9046bde9b1311f24a95e4bce9a35a600" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../io#self-instance-method&quot;&gt; &amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt;, &lt;a href=&quot;../../io#close-instance-method&quot;&gt; close close&lt;/a&gt;, &lt;a href=&quot;../../io#closed?-instance-method&quot;&gt; closed? closed?&lt;/a&gt;, &lt;a href=&quot;../../io#each_byte(&amp;amp;):Nil-instance-method&quot;&gt; each_byte(&amp;amp;) : Nil&lt;br/&gt;each_byte each_byte&lt;/a&gt;, &lt;a href=&quot;../../io#each_char(&amp;amp;):Nil-instance-method&quot;&gt; each_char(&amp;amp;) : Nil&lt;br/&gt;each_char each_char&lt;/a&gt;, &lt;a href=&quot;../../io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt; each_line(*args, **options, &amp;amp;block : String -&amp;gt; ) : Nil&lt;br/&gt;each_line(*args, **options) each_line&lt;/a&gt;, &lt;a href=&quot;../../io#encoding:String-instance-method&quot;&gt; encoding : String encoding&lt;/a&gt;, &lt;a href=&quot;../../io#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;../../io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt; gets(delimiter : Char, limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : Char, chomp = false) : String?&lt;br/&gt;gets(chomp = true) : String?&lt;br/&gt;gets(limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : String, chomp = false) : String? gets&lt;/a&gt;, &lt;a href=&quot;../../io#gets_to_end:String-instance-method&quot;&gt; gets_to_end : String gets_to_end&lt;/a&gt;, &lt;a href=&quot;../../io#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;../../io#pos-instance-method&quot;&gt; pos pos&lt;/a&gt;, &lt;a href=&quot;../../io#pos=(value)-instance-method&quot;&gt; pos=(value) pos=&lt;/a&gt;, &lt;a href=&quot;../../io#print(*objects:_):Nil-instance-method&quot;&gt; print(*objects : _) : Nil&lt;br/&gt;print(obj) : Nil print&lt;/a&gt;, &lt;a href=&quot;../../io#printf(format_string,*args):Nil-instance-method&quot;&gt; printf(format_string, *args) : Nil&lt;br/&gt;printf(format_string, args : Array | Tuple) : Nil printf&lt;/a&gt;, &lt;a href=&quot;../../io#puts(*objects:_):Nil-instance-method&quot;&gt; puts(*objects : _) : Nil&lt;br/&gt;puts : Nil&lt;br/&gt;puts(obj) : Nil&lt;br/&gt;puts(string : String) : Nil puts&lt;/a&gt;, &lt;a href=&quot;../../io#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;../../io#read_at(offset,bytesize,&amp;amp;)-instance-method&quot;&gt; read_at(offset, bytesize, &amp;amp;) read_at&lt;/a&gt;, &lt;a href=&quot;../../io#read_byte:UInt8?-instance-method&quot;&gt; read_byte : UInt8? read_byte&lt;/a&gt;, &lt;a href=&quot;../../io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; read_bytes(type, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) read_bytes&lt;/a&gt;, &lt;a href=&quot;../../io#read_char:Char?-instance-method&quot;&gt; read_char : Char? read_char&lt;/a&gt;, &lt;a href=&quot;../../io#read_fully(slice:Bytes)-instance-method&quot;&gt; read_fully(slice : Bytes) read_fully&lt;/a&gt;, &lt;a href=&quot;../../io#read_fully?(slice:Bytes)-instance-method&quot;&gt; read_fully?(slice : Bytes) read_fully?&lt;/a&gt;, &lt;a href=&quot;../../io#read_line(*args,**options):String-instance-method&quot;&gt; read_line(*args, **options) : String read_line&lt;/a&gt;, &lt;a href=&quot;../../io#read_string(bytesize:Int):String-instance-method&quot;&gt; read_string(bytesize : Int) : String read_string&lt;/a&gt;, &lt;a href=&quot;../../io#read_utf8(slice:Bytes)-instance-method&quot;&gt; read_utf8(slice : Bytes) read_utf8&lt;/a&gt;, &lt;a href=&quot;../../io#read_utf8_byte-instance-method&quot;&gt; read_utf8_byte read_utf8_byte&lt;/a&gt;, &lt;a href=&quot;../../io#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;../../io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt; seek(offset, whence : Seek = Seek::Set) seek&lt;/a&gt;, &lt;a href=&quot;../../io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt; set_encoding(encoding : String, invalid : Symbol? = nil) set_encoding&lt;/a&gt;, &lt;a href=&quot;../../io#skip(bytes_count:Int):Nil-instance-method&quot;&gt; skip(bytes_count : Int) : Nil skip&lt;/a&gt;, &lt;a href=&quot;../../io#skip_to_end:Nil-instance-method&quot;&gt; skip_to_end : Nil skip_to_end&lt;/a&gt;, &lt;a href=&quot;../../io#tell-instance-method&quot;&gt; tell tell&lt;/a&gt;, &lt;a href=&quot;../../io#tty?:Bool-instance-method&quot;&gt; tty? : Bool tty?&lt;/a&gt;, &lt;a href=&quot;../../io#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;, &lt;a href=&quot;../../io#write_byte(byte:UInt8)-instance-method&quot;&gt; write_byte(byte : UInt8) write_byte&lt;/a&gt;, &lt;a href=&quot;../../io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; write_bytes(object, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) write_bytes&lt;/a&gt;, &lt;a href=&quot;../../io#write_utf8(slice:Bytes)-instance-method&quot;&gt; write_utf8(slice : Bytes) write_utf8&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../io#self-instance-method&quot;&gt;&amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt;，&lt;a href=&quot;../../io#close-instance-method&quot;&gt;关闭关闭&lt;/a&gt;，&lt;a href=&quot;../../io#closed?-instance-method&quot;&gt;关闭？关闭？&lt;/a&gt;，&lt;a href=&quot;../../io#each_byte(&amp;amp;):Nil-instance-method&quot;&gt;each_byte（＆）：零个&lt;br/&gt;each_byte each_byte&lt;/a&gt;，&lt;a href=&quot;../../io#each_char(&amp;amp;):Nil-instance-method&quot;&gt;each_char（＆）：零个&lt;br/&gt;each_char each_char&lt;/a&gt;，each_line &lt;a href=&quot;../../io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt;（* args，** options，＆block：String-&amp;gt;）：Nil &lt;br/&gt;each_line（* args，** options）each_line&lt;/a&gt;，&lt;a href=&quot;../../io#encoding:String-instance-method&quot;&gt;编码：String编码&lt;/a&gt;，&lt;a href=&quot;../../io#flush-instance-method&quot;&gt;刷新冲洗&lt;/a&gt;，&lt;a href=&quot;../../io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;gets（分隔符：字符，限制：整数，斜率=假）：字符串&lt;br/&gt;gets（定界符：Char，chomp = false）：字符串？&lt;br/&gt;gets（chomp = true）：字符串？&lt;br/&gt;gets（limit：Int，chomp = false）：字符串？&lt;br/&gt;gets（delimiter：String，chomp = false）：字符串？得到&lt;/a&gt;，&lt;a href=&quot;../../io#gets_to_end:String-instance-method&quot;&gt;gets_to_end：字符串gets_to_end&lt;/a&gt;，&lt;a href=&quot;../../io#peek:Bytes?-instance-method&quot;&gt;peek：字节？ peek&lt;/a&gt;，&lt;a href=&quot;../../io#pos-instance-method&quot;&gt;pos pos&lt;/a&gt;，&lt;a href=&quot;../../io#pos=(value)-instance-method&quot;&gt;pos =（value）pos =&lt;/a&gt;，&lt;a href=&quot;../../io#print(*objects:_):Nil-instance-method&quot;&gt;print（* objects：_）：Nil &lt;br/&gt;print（obj）：Nil print&lt;/a&gt;，&lt;a href=&quot;../../io#printf(format_string,*args):Nil-instance-method&quot;&gt;printf（format_string，* args）：Nil &lt;br/&gt;printf（format_string，args：Array | Tuple）： Nil printf&lt;/a&gt;，&lt;a href=&quot;../../io#puts(*objects:_):Nil-instance-method&quot;&gt;puts（* objects：_）：Nil &lt;br/&gt;puts：Nil &lt;br/&gt;puts（obj）：Nil &lt;br/&gt;puts（string：String）：Nil puts&lt;/a&gt;，&lt;a href=&quot;../../io#read(slice:Bytes)-instance-method&quot;&gt;read（slice：Bytes）read&lt;/a&gt;，&lt;a href=&quot;../../io#read_at(offset,bytesize,&amp;amp;)-instance-method&quot;&gt;read_at（offset，bytesize，＆）read_at&lt;/a&gt;，&lt;a href=&quot;../../io#read_byte:UInt8?-instance-method&quot;&gt;read_byte ：UInt8？ read_byte&lt;/a&gt;，&lt;a href=&quot;../../io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;read_bytes（type，format：IO :: ByteFormat = IO :: ByteFormat :: SystemEndian）read_bytes&lt;/a&gt;，&lt;a href=&quot;../../io#read_char:Char?-instance-method&quot;&gt;read_char：字符？ read_char&lt;/a&gt;，&lt;a href=&quot;../../io#read_fully(slice:Bytes)-instance-method&quot;&gt;read_fully（slice：Bytes）read_fully&lt;/a&gt;，&lt;a href=&quot;../../io#read_fully?(slice:Bytes)-instance-method&quot;&gt;read_fully？（slice：Bytes）read_fully？&lt;/a&gt;，&lt;a href=&quot;../../io#read_line(*args,**options):String-instance-method&quot;&gt;read_line（* args，** options）：字符串read_line&lt;/a&gt;，&lt;a href=&quot;../../io#read_string(bytesize:Int):String-instance-method&quot;&gt;read_string（bytesize：Int）：字符串read_string&lt;/a&gt;，&lt;a href=&quot;../../io#read_utf8(slice:Bytes)-instance-method&quot;&gt;read_utf8（slice：Bytes）read_utf8&lt;/a&gt;，&lt;a href=&quot;../../io#read_utf8_byte-instance-method&quot;&gt;read_utf8_byte read_utf8_byte&lt;/a&gt;，&lt;a href=&quot;../../io#rewind-instance-method&quot;&gt;倒带倒带&lt;/a&gt;，&lt;a href=&quot;../../io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt;seek（offset，whence：Seek = Seek :: Set ）seek&lt;/a&gt;，&lt;a href=&quot;../../io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt;set_encoding（编码：字符串，无效：Symbol？= nil）set_encoding&lt;/a&gt;，&lt;a href=&quot;../../io#skip(bytes_count:Int):Nil-instance-method&quot;&gt;skip（bytes_count：Int）：Nil skip&lt;/a&gt;，&lt;a href=&quot;../../io#skip_to_end:Nil-instance-method&quot;&gt;skip_to_end：Nil skip_to_end&lt;/a&gt;，&lt;a href=&quot;../../io#tell-instance-method&quot;&gt;告诉&lt;/a&gt;Tell，&lt;a href=&quot;../../io#tty?:Bool-instance-method&quot;&gt;tty？ ：布尔蒂？&lt;/a&gt;，&lt;a href=&quot;../../io#write(slice:Bytes):Nil-instance-method&quot;&gt;write（slice：Bytes）：无写入&lt;/a&gt;，&lt;a href=&quot;../../io#write_byte(byte:UInt8)-instance-method&quot;&gt;write_byte（byte：UInt8）write_byte&lt;/a&gt;，&lt;a href=&quot;../../io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;write_bytes（object，format：IO :: ByteFormat = IO :: ByteFormat :: SystemEndian）write_bytes&lt;/a&gt;，&lt;a href=&quot;../../io#write_utf8(slice:Bytes)-instance-method&quot;&gt;write_utf8（slice：Bytes）write_utf8&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72fb4032c1744fc09207e0cbfff74328933ae48e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../io#self-instance-method&quot;&gt; &amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt;, &lt;a href=&quot;../../io#close-instance-method&quot;&gt; close close&lt;/a&gt;, &lt;a href=&quot;../../io#closed?-instance-method&quot;&gt; closed? closed?&lt;/a&gt;, &lt;a href=&quot;../../io#each_byte(&amp;amp;block):Nil-instance-method&quot;&gt; each_byte(&amp;amp;block) : Nil&lt;br/&gt;each_byte each_byte&lt;/a&gt;, &lt;a href=&quot;../../io#each_char(&amp;amp;block):Nil-instance-method&quot;&gt; each_char(&amp;amp;block) : Nil&lt;br/&gt;each_char each_char&lt;/a&gt;, &lt;a href=&quot;../../io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt; each_line(*args, **options, &amp;amp;block : String -&amp;gt; ) : Nil&lt;br/&gt;each_line(*args, **options) each_line&lt;/a&gt;, &lt;a href=&quot;../../io#encoding:String-instance-method&quot;&gt; encoding : String encoding&lt;/a&gt;, &lt;a href=&quot;../../io#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;../../io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt; gets(delimiter : Char, limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : Char, chomp = false) : String?&lt;br/&gt;gets(chomp = true) : String?&lt;br/&gt;gets(limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : String, chomp = false) : String? gets&lt;/a&gt;, &lt;a href=&quot;../../io#gets_to_end:String-instance-method&quot;&gt; gets_to_end : String gets_to_end&lt;/a&gt;, &lt;a href=&quot;../../io#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;../../io#pos-instance-method&quot;&gt; pos pos&lt;/a&gt;, &lt;a href=&quot;../../io#pos=(value)-instance-method&quot;&gt; pos=(value) pos=&lt;/a&gt;, &lt;a href=&quot;../../io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt; print(*objects : UNDERSCORE) : Nil&lt;br/&gt;print(obj) : Nil print&lt;/a&gt;, &lt;a href=&quot;../../io#printf(format_string,*args):Nil-instance-method&quot;&gt; printf(format_string, *args) : Nil&lt;br/&gt;printf(format_string, args : Array | Tuple) : Nil printf&lt;/a&gt;, &lt;a href=&quot;../../io#puts(*objects:UNDERSCORE):Nil-instance-method&quot;&gt; puts(*objects : UNDERSCORE) : Nil&lt;br/&gt;puts : Nil&lt;br/&gt;puts(obj) : Nil&lt;br/&gt;puts(string : String) : Nil puts&lt;/a&gt;, &lt;a href=&quot;../../io#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;../../io#read_at(offset,bytesize,&amp;amp;block)-instance-method&quot;&gt; read_at(offset, bytesize, &amp;amp;block) read_at&lt;/a&gt;, &lt;a href=&quot;../../io#read_byte:UInt8?-instance-method&quot;&gt; read_byte : UInt8? read_byte&lt;/a&gt;, &lt;a href=&quot;../../io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; read_bytes(type, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) read_bytes&lt;/a&gt;, &lt;a href=&quot;../../io#read_char:Char?-instance-method&quot;&gt; read_char : Char? read_char&lt;/a&gt;, &lt;a href=&quot;../../io#read_fully(slice:Bytes)-instance-method&quot;&gt; read_fully(slice : Bytes) read_fully&lt;/a&gt;, &lt;a href=&quot;../../io#read_fully?(slice:Bytes)-instance-method&quot;&gt; read_fully?(slice : Bytes) read_fully?&lt;/a&gt;, &lt;a href=&quot;../../io#read_line(*args,**options):String-instance-method&quot;&gt; read_line(*args, **options) : String read_line&lt;/a&gt;, &lt;a href=&quot;../../io#read_string(bytesize:Int):String-instance-method&quot;&gt; read_string(bytesize : Int) : String read_string&lt;/a&gt;, &lt;a href=&quot;../../io#read_utf8(slice:Bytes)-instance-method&quot;&gt; read_utf8(slice : Bytes) read_utf8&lt;/a&gt;, &lt;a href=&quot;../../io#read_utf8_byte-instance-method&quot;&gt; read_utf8_byte read_utf8_byte&lt;/a&gt;, &lt;a href=&quot;../../io#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;../../io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt; seek(offset, whence : Seek = Seek::Set) seek&lt;/a&gt;, &lt;a href=&quot;../../io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt; set_encoding(encoding : String, invalid : Symbol? = nil) set_encoding&lt;/a&gt;, &lt;a href=&quot;../../io#skip(bytes_count:Int):Nil-instance-method&quot;&gt; skip(bytes_count : Int) : Nil skip&lt;/a&gt;, &lt;a href=&quot;../../io#skip_to_end:Nil-instance-method&quot;&gt; skip_to_end : Nil skip_to_end&lt;/a&gt;, &lt;a href=&quot;../../io#tell-instance-method&quot;&gt; tell tell&lt;/a&gt;, &lt;a href=&quot;../../io#tty?:Bool-instance-method&quot;&gt; tty? : Bool tty?&lt;/a&gt;, &lt;a href=&quot;../../io#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;, &lt;a href=&quot;../../io#write_byte(byte:UInt8)-instance-method&quot;&gt; write_byte(byte : UInt8) write_byte&lt;/a&gt;, &lt;a href=&quot;../../io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; write_bytes(object, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) write_bytes&lt;/a&gt;, &lt;a href=&quot;../../io#write_utf8(slice:Bytes)-instance-method&quot;&gt; write_utf8(slice : Bytes) write_utf8&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../io#self-instance-method&quot;&gt;&amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt;，&lt;a href=&quot;../../io#close-instance-method&quot;&gt;关闭关闭&lt;/a&gt;，&lt;a href=&quot;../../io#closed?-instance-method&quot;&gt;关闭？关闭？&lt;/a&gt;，&lt;a href=&quot;../../io#each_byte(&amp;amp;block):Nil-instance-method&quot;&gt;each_byte（＆block）：Nil &lt;br/&gt;each_byte each_byte&lt;/a&gt;，&lt;a href=&quot;../../io#each_char(&amp;amp;block):Nil-instance-method&quot;&gt;each_char（＆block）：Nil &lt;br/&gt;each_char each_char&lt;/a&gt;，each_line &lt;a href=&quot;../../io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt;（* args，** options，＆block：String-&amp;gt;）：Nil &lt;br/&gt;each_line（* args，** options）each_line&lt;/a&gt;，&lt;a href=&quot;../../io#encoding:String-instance-method&quot;&gt;编码：String编码&lt;/a&gt;，&lt;a href=&quot;../../io#flush-instance-method&quot;&gt;刷新，刷新&lt;/a&gt;，&lt;a href=&quot;../../io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;gets（定界符：Char，限制：Int，chomp = false）：字符串？&lt;br/&gt;gets（定界符：Char，chomp = false）：字符串？&lt;br/&gt;gets（chomp = true）：字符串？&lt;br/&gt;gets（limit：Int，chomp = false）：字符串？&lt;br/&gt;gets（delimiter：String，chomp = false）：字符串？得到&lt;/a&gt;，&lt;a href=&quot;../../io#gets_to_end:String-instance-method&quot;&gt;gets_to_end：字符串gets_to_end&lt;/a&gt;，&lt;a href=&quot;../../io#peek:Bytes?-instance-method&quot;&gt;peek：字节？ peek&lt;/a&gt;，&lt;a href=&quot;../../io#pos-instance-method&quot;&gt;pos pos&lt;/a&gt;，&lt;a href=&quot;../../io#pos=(value)-instance-method&quot;&gt;pos =（value）pos =&lt;/a&gt;，&lt;a href=&quot;../../io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;print（* objects：UNDERSCORE）：Nil &lt;br/&gt;print（obj）：Nil print&lt;/a&gt;，&lt;a href=&quot;../../io#printf(format_string,*args):Nil-instance-method&quot;&gt;printf（format_string，* args）：Nil &lt;br/&gt;printf（format_string，args：Array | Tuple）： Nil printf&lt;/a&gt;，&lt;a href=&quot;../../io#puts(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;puts（* objects：UNDERSCORE）：Nil &lt;br/&gt;puts：Nil &lt;br/&gt;puts（obj）：Nil &lt;br/&gt;puts（string：String）：Nil puts&lt;/a&gt;，&lt;a href=&quot;../../io#read(slice:Bytes)-instance-method&quot;&gt;read（slice：Bytes）read&lt;/a&gt;，&lt;a href=&quot;../../io#read_at(offset,bytesize,&amp;amp;block)-instance-method&quot;&gt;read_at（offset，bytesize，＆block）read_at&lt;/a&gt;，&lt;a href=&quot;../../io#read_byte:UInt8?-instance-method&quot;&gt;read_byte ：UInt8？ read_byte&lt;/a&gt;，&lt;a href=&quot;../../io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;read_bytes（类型，格式：IO :: ByteFormat = IO :: ByteFormat :: SystemEndian）read_bytes&lt;/a&gt;，&lt;a href=&quot;../../io#read_char:Char?-instance-method&quot;&gt;read_char：字符？ read_char&lt;/a&gt;，&lt;a href=&quot;../../io#read_fully(slice:Bytes)-instance-method&quot;&gt;read_fully（slice：Bytes）read_fully&lt;/a&gt;，&lt;a href=&quot;../../io#read_fully?(slice:Bytes)-instance-method&quot;&gt;read_fully？（slice：Bytes）read_fully？&lt;/a&gt;，&lt;a href=&quot;../../io#read_line(*args,**options):String-instance-method&quot;&gt;read_line（* args，** options）：字符串read_line&lt;/a&gt;，&lt;a href=&quot;../../io#read_string(bytesize:Int):String-instance-method&quot;&gt;read_string（bytesize：Int）：字符串read_string&lt;/a&gt;，&lt;a href=&quot;../../io#read_utf8(slice:Bytes)-instance-method&quot;&gt;read_utf8（slice：Bytes）read_utf8&lt;/a&gt;，&lt;a href=&quot;../../io#read_utf8_byte-instance-method&quot;&gt;read_utf8_byte read_utf8_byte&lt;/a&gt;，&lt;a href=&quot;../../io#rewind-instance-method&quot;&gt;倒带倒带&lt;/a&gt;，&lt;a href=&quot;../../io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt;seek（offset，whence：Seek = Seek :: Set ）seek&lt;/a&gt;，&lt;a href=&quot;../../io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt;set_encoding（编码：字符串，无效：Symbol？= nil）set_encoding&lt;/a&gt;，&lt;a href=&quot;../../io#skip(bytes_count:Int):Nil-instance-method&quot;&gt;skip（bytes_count：Int）：Nil skip&lt;/a&gt;，&lt;a href=&quot;../../io#skip_to_end:Nil-instance-method&quot;&gt;skip_to_end：Nil skip_to_end&lt;/a&gt;，&lt;a href=&quot;../../io#tell-instance-method&quot;&gt;告诉&lt;/a&gt;Tell，&lt;a href=&quot;../../io#tty?:Bool-instance-method&quot;&gt;tty？ ：布尔蒂？&lt;/a&gt;，&lt;a href=&quot;../../io#write(slice:Bytes):Nil-instance-method&quot;&gt;write（slice：Bytes）：无写&lt;/a&gt;，&lt;a href=&quot;../../io#write_byte(byte:UInt8)-instance-method&quot;&gt;write_byte（byte：UInt8）write_byte&lt;/a&gt;，&lt;a href=&quot;../../io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;write_bytes（object，format：IO :: ByteFormat = IO :: ByteFormat :: SystemEndian）write_bytes&lt;/a&gt;，&lt;a href=&quot;../../io#write_utf8(slice:Bytes)-instance-method&quot;&gt;write_utf8（slice：Bytes）write_utf8&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61c2d392709be438135cc5c1228f99f90057e0c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../io/buffered#buffer_size-instance-method&quot;&gt; buffer_size buffer_size&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#buffer_size=(value)-instance-method&quot;&gt; buffer_size=(value) buffer_size=&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#close:Nil-instance-method&quot;&gt; close : Nil close&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#flush_on_newline=(flush_on_newline)-instance-method&quot;&gt; flush_on_newline=(flush_on_newline) flush_on_newline=&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#flush_on_newline?-instance-method&quot;&gt; flush_on_newline? flush_on_newline?&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#read_buffering=(read_buffering)-instance-method&quot;&gt; read_buffering=(read_buffering) read_buffering=&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#read_buffering?-instance-method&quot;&gt; read_buffering? read_buffering?&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#sync=(sync)-instance-method&quot;&gt; sync=(sync) sync=&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#sync?-instance-method&quot;&gt; sync? sync?&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#unbuffered_close-instance-method&quot;&gt; unbuffered_close unbuffered_close&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#unbuffered_flush-instance-method&quot;&gt; unbuffered_flush unbuffered_flush&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt; unbuffered_read(slice : Bytes) unbuffered_read&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#unbuffered_rewind-instance-method&quot;&gt; unbuffered_rewind unbuffered_rewind&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt; unbuffered_write(slice : Bytes) unbuffered_write&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../io/buffered#buffer_size-instance-method&quot;&gt;buffer_size buffer_size&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#buffer_size=(value)-instance-method&quot;&gt;buffer_size =（value）buffer_size =&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#close:Nil-instance-method&quot;&gt;close：无关闭&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#flush-instance-method&quot;&gt;刷新冲洗&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#flush_on_newline=(flush_on_newline)-instance-method&quot;&gt;flush_on_newline =（flush_on_newline）flush_on_newline =&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#flush_on_newline?-instance-method&quot;&gt;flush_on_newline？ flush_on_newline？&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#peek:Bytes?-instance-method&quot;&gt;偷看：字节？偷看&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#read(slice:Bytes)-instance-method&quot;&gt;read（slice：Bytes）read&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#read_buffering=(read_buffering)-instance-method&quot;&gt;read_buffering =（read_buffering）read_buffering =&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#read_buffering?-instance-method&quot;&gt;read_buffering吗？ read_buffering？&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#rewind-instance-method&quot;&gt;快退&lt;/a&gt;，快退，&lt;a href=&quot;../../io/buffered#sync=(sync)-instance-method&quot;&gt;sync =（sync）sync =&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#sync?-instance-method&quot;&gt;同步吗？同步？&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#unbuffered_close-instance-method&quot;&gt;unbuffered_close unbuffered_close&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#unbuffered_flush-instance-method&quot;&gt;unbuffered_flush unbuffered_flush&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt;unbuffered_read（slice：Bytes）unbuffered_read&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#unbuffered_rewind-instance-method&quot;&gt;unbuffered_rewind unbuffered_rewind&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt;unbuffered_write（slice：Bytes）unbuffered_write&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#write(slice:Bytes):Nil-instance-method&quot;&gt;write（slice：Bytes）：无写&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ad36b75ad455f2678033fef6db3764530a06dc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../io/buffered#buffer_size-instance-method&quot;&gt; buffer_size buffer_size&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#buffer_size=(value)-instance-method&quot;&gt; buffer_size=(value) buffer_size=&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#close:Nil-instance-method&quot;&gt; close : Nil close&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#read_buffering=(read_buffering)-instance-method&quot;&gt; read_buffering=(read_buffering) read_buffering=&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#read_buffering?-instance-method&quot;&gt; read_buffering? read_buffering?&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#sync=(sync)-instance-method&quot;&gt; sync=(sync) sync=&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#sync?-instance-method&quot;&gt; sync? sync?&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#unbuffered_close-instance-method&quot;&gt; unbuffered_close unbuffered_close&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#unbuffered_flush-instance-method&quot;&gt; unbuffered_flush unbuffered_flush&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt; unbuffered_read(slice : Bytes) unbuffered_read&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#unbuffered_rewind-instance-method&quot;&gt; unbuffered_rewind unbuffered_rewind&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt; unbuffered_write(slice : Bytes) unbuffered_write&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../io/buffered#buffer_size-instance-method&quot;&gt;buffer_size buffer_size&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#buffer_size=(value)-instance-method&quot;&gt;buffer_size =（value）buffer_size =&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#close:Nil-instance-method&quot;&gt;close：无关闭&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#flush-instance-method&quot;&gt;冲洗刷新&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#peek:Bytes?-instance-method&quot;&gt;偷看：字节？偷看&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#read(slice:Bytes)-instance-method&quot;&gt;read（slice：Bytes）read&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#read_buffering=(read_buffering)-instance-method&quot;&gt;read_buffering =（read_buffering）read_buffering =&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#read_buffering?-instance-method&quot;&gt;read_buffering吗？ read_buffering？&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#rewind-instance-method&quot;&gt;快退&lt;/a&gt;，快退，&lt;a href=&quot;../../io/buffered#sync=(sync)-instance-method&quot;&gt;sync =（sync）sync =&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#sync?-instance-method&quot;&gt;同步吗？同步？&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#unbuffered_close-instance-method&quot;&gt;unbuffered_close unbuffered_close&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#unbuffered_flush-instance-method&quot;&gt;unbuffered_flush unbuffered_flush&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt;unbuffered_read（slice：Bytes）unbuffered_read&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#unbuffered_rewind-instance-method&quot;&gt;unbuffered_rewind unbuffered_rewind&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt;unbuffered_write（slice：Bytes）unbuffered_write&lt;/a&gt;，&lt;a href=&quot;../../io/buffered#write(slice:Bytes):Nil-instance-method&quot;&gt;write（slice：Bytes）：无写入&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="418b798a2d8352502baf7500a2a371576e5a7cde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../object#!:Bool-instance-method&quot;&gt; ! : Bool !&lt;/a&gt;, &lt;a href=&quot;../../object#!=(other)-instance-method&quot;&gt; !=(other) !=&lt;/a&gt;, &lt;a href=&quot;../../object#!~(other)-instance-method&quot;&gt; !~(other) !~&lt;/a&gt;, &lt;a href=&quot;../../object#==(other)-instance-method&quot;&gt; ==(other) ==&lt;/a&gt;, &lt;a href=&quot;../../object#===(other:JSON::Any)-instance-method&quot;&gt; ===(other : JSON::Any)&lt;br/&gt;===(other : YAML::Any)&lt;br/&gt;===(other) ===&lt;/a&gt;, &lt;a href=&quot;../../object#=~(other)-instance-method&quot;&gt; =~(other) =~&lt;/a&gt;, &lt;a href=&quot;../../object#as(type:Class)-instance-method&quot;&gt; as(type : Class) as&lt;/a&gt;, &lt;a href=&quot;../../object#as?(type:Class)-instance-method&quot;&gt; as?(type : Class) as?&lt;/a&gt;, &lt;a href=&quot;../../object#class-instance-method&quot;&gt; class class&lt;/a&gt;, &lt;a href=&quot;../../object#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;, &lt;a href=&quot;../../object#hash(hasher)-instance-method&quot;&gt; hash(hasher)&lt;br/&gt;hash hash&lt;/a&gt;, &lt;a href=&quot;../../object#in?(*values:Object):Bool-instance-method&quot;&gt; in?(*values : Object) : Bool&lt;br/&gt;in?(collection) : Bool in?&lt;/a&gt;, &lt;a href=&quot;../../object#inspect:String-instance-method&quot;&gt; inspect : String&lt;br/&gt;inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;../../object#is_a?(type:Class):Bool-instance-method&quot;&gt; is_a?(type : Class) : Bool is_a?&lt;/a&gt;, &lt;a href=&quot;../../object#itself-instance-method&quot;&gt; itself itself&lt;/a&gt;, &lt;a href=&quot;../../object#nil?:Bool-instance-method&quot;&gt; nil? : Bool nil?&lt;/a&gt;, &lt;a href=&quot;../../object#not_nil!-instance-method&quot;&gt; not_nil! not_nil!&lt;/a&gt;,  pretty_inspect(width = 79, newline = &quot;\n&quot;, indent = 0) : String pretty_inspect, &lt;a href=&quot;../../object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt; pretty_print(pp : PrettyPrint) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;../../object#responds_to?(name:Symbol):Bool-instance-method&quot;&gt; responds_to?(name : Symbol) : Bool responds_to?&lt;/a&gt;, &lt;a href=&quot;../../object#tap(&amp;amp;)-instance-method&quot;&gt; tap(&amp;amp;) tap&lt;/a&gt;, &lt;a href=&quot;../../object#to_json(io:IO)-instance-method&quot;&gt; to_json(io : IO)&lt;br/&gt;to_json to_json&lt;/a&gt;,  to_pretty_json(io : IO, indent : String = &quot; &quot;)</source>
          <target state="translated">&lt;a href=&quot;../../object#!:Bool-instance-method&quot;&gt;！ ：布尔！&lt;/a&gt;，&lt;a href=&quot;../../object#!=(other)-instance-method&quot;&gt;=（其他）=！ ，&lt;/a&gt;〜（&lt;a href=&quot;../../object#!~(other)-instance-method&quot;&gt;其它）〜！ &lt;/a&gt;，&lt;a href=&quot;../../object#==(other)-instance-method&quot;&gt;==（其他）==&lt;/a&gt;，&lt;a href=&quot;../../object#===(other:JSON::Any)-instance-method&quot;&gt;===（其他：JSON ::任何）&lt;br/&gt;===（其它：YAML ::任何）&lt;br/&gt;=== （other）===&lt;/a&gt;，&lt;a href=&quot;../../object#=~(other)-instance-method&quot;&gt;=〜（other）=〜&lt;/a&gt;，&lt;a href=&quot;../../object#as(type:Class)-instance-method&quot;&gt;as（type：Class）as&lt;/a&gt;，&lt;a href=&quot;../../object#as?(type:Class)-instance-method&quot;&gt;as？（type：Class）as？&lt;/a&gt;，&lt;a href=&quot;../../object#class-instance-method&quot;&gt;类class&lt;/a&gt;，&lt;a href=&quot;../../object#dup-instance-method&quot;&gt;dup dup&lt;/a&gt;，&lt;a href=&quot;../../object#hash(hasher)-instance-method&quot;&gt;hash（哈希）&lt;br/&gt;hash hash&lt;/a&gt;，&lt;a href=&quot;../../object#in?(*values:Object):Bool-instance-method&quot;&gt;in？（* values：Object）：Bool &lt;br/&gt;in？（collection）：Bool in？&lt;/a&gt;，&lt;a href=&quot;../../object#inspect:String-instance-method&quot;&gt;inspect：字符串&lt;br/&gt;inspect（io：IO）：Nil inspect&lt;/a&gt;，&lt;a href=&quot;../../object#is_a?(type:Class):Bool-instance-method&quot;&gt;is_a？（type：Class）：布尔is_a？&lt;/a&gt;，&lt;a href=&quot;../../object#itself-instance-method&quot;&gt;自己本身&lt;/a&gt;，&lt;a href=&quot;../../object#nil?:Bool-instance-method&quot;&gt;零？：布尔零？&lt;/a&gt;，&lt;a href=&quot;../../object#not_nil!-instance-method&quot;&gt;not_nil！not_nil！&lt;/a&gt;，pretty_inspect（宽度= 79，换行符=&amp;ldquo; \ n&amp;rdquo;，缩进= 0）：字符串pretty_inspect，&lt;a href=&quot;../../object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt;pretty_print（pp：PrettyPrint）：Nil pretty_print&lt;/a&gt;，respons_to &lt;a href=&quot;../../object#responds_to?(name:Symbol):Bool-instance-method&quot;&gt;？（name：Symbol）：Bool &lt;/a&gt;responses_to ？，&lt;a href=&quot;../../object#tap(&amp;amp;)-instance-method&quot;&gt;tap（＆）tap&lt;/a&gt;，&lt;a href=&quot;../../object#to_json(io:IO)-instance-method&quot;&gt;to_json（io：IO）&lt;br/&gt;to_json to_json&lt;/a&gt;，to_pretty_json（io：IO，缩进：String =&amp;ldquo;&amp;rdquo;）</target>
        </trans-unit>
        <trans-unit id="106c0db456ef0fe685caa03eec47e825b3fcd675" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../object#!=(other)-instance-method&quot;&gt; !=(other) !=&lt;/a&gt;, &lt;a href=&quot;../../object#!~(other)-instance-method&quot;&gt; !~(other) !~&lt;/a&gt;, &lt;a href=&quot;../../object#==(other)-instance-method&quot;&gt; ==(other) ==&lt;/a&gt;, &lt;a href=&quot;../../object#===(other:JSON::Any)-instance-method&quot;&gt; ===(other : JSON::Any)&lt;br/&gt;===(other : YAML::Any)&lt;br/&gt;===(other) ===&lt;/a&gt;, &lt;a href=&quot;../../object#=~(other)-instance-method&quot;&gt; =~(other) =~&lt;/a&gt;, &lt;a href=&quot;../../object#class-instance-method&quot;&gt; class class&lt;/a&gt;, &lt;a href=&quot;../../object#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;, &lt;a href=&quot;../../object#hash(hasher)-instance-method&quot;&gt; hash(hasher)&lt;br/&gt;hash hash&lt;/a&gt;, &lt;a href=&quot;../../object#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil&lt;br/&gt;inspect : String inspect&lt;/a&gt;, &lt;a href=&quot;../../object#itself-instance-method&quot;&gt; itself itself&lt;/a&gt;, &lt;a href=&quot;../../object#not_nil!-instance-method&quot;&gt; not_nil! not_nil!&lt;/a&gt;,  pretty_inspect(width = 79, newline = &quot;\n&quot;, indent = 0) : String pretty_inspect, &lt;a href=&quot;../../object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt; pretty_print(pp : PrettyPrint) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;../../object#tap(&amp;amp;block)-instance-method&quot;&gt; tap(&amp;amp;block) tap&lt;/a&gt;, &lt;a href=&quot;../../object#to_json(io:IO)-instance-method&quot;&gt; to_json(io : IO)&lt;br/&gt;to_json to_json&lt;/a&gt;,  to_pretty_json(indent : String = &quot; &quot;)</source>
          <target state="translated">&lt;a href=&quot;../../object#!=(other)-instance-method&quot;&gt;！=（其他）=！ ，&lt;/a&gt;〜（&lt;a href=&quot;../../object#!~(other)-instance-method&quot;&gt;其它）〜！ &lt;/a&gt;，&lt;a href=&quot;../../object#==(other)-instance-method&quot;&gt;==（其他）==&lt;/a&gt;，&lt;a href=&quot;../../object#===(other:JSON::Any)-instance-method&quot;&gt;===（其他：JSON ::任何）&lt;br/&gt;===（其它：YAML ::任何）&lt;br/&gt;===（其他）===&lt;/a&gt;，&lt;a href=&quot;../../object#=~(other)-instance-method&quot;&gt;=〜（其他）=〜&lt;/a&gt;，&lt;a href=&quot;../../object#class-instance-method&quot;&gt;类class&lt;/a&gt;，&lt;a href=&quot;../../object#dup-instance-method&quot;&gt;dup dup&lt;/a&gt;，&lt;a href=&quot;../../object#hash(hasher)-instance-method&quot;&gt;hash（hasher）&lt;br/&gt;hash hash&lt;/a&gt;，&lt;a href=&quot;../../object#inspect(io:IO):Nil-instance-method&quot;&gt;inspect（io：IO）：Nil &lt;br/&gt;inspect：字符串inspect&lt;/a&gt;，&lt;a href=&quot;../../object#itself-instance-method&quot;&gt;本身本身&lt;/a&gt;，&lt;a href=&quot;../../object#not_nil!-instance-method&quot;&gt;not_nil！ not_nil！&lt;/a&gt;，pretty_inspect（宽度= 79，换行符=&amp;ldquo; \ n&amp;rdquo;，缩进= 0）：字符串pretty_inspect，&lt;a href=&quot;../../object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt;pretty_print（pp：PrettyPrint）：Nil pretty_print&lt;/a&gt;，&lt;a href=&quot;../../object#tap(&amp;amp;block)-instance-method&quot;&gt;tap（＆block）tap&lt;/a&gt;，&lt;a href=&quot;../../object#to_json(io:IO)-instance-method&quot;&gt;to_json（io：IO）&lt;br/&gt;to_json to_json&lt;/a&gt;，to_pretty_json（indent：String =&amp;ldquo;&amp;rdquo;）</target>
        </trans-unit>
        <trans-unit id="de62d37f95e4b6825496703323ede8d3c84ecf45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../object#from_json(string_or_io,root:String)-class-method&quot;&gt; from_json(string_or_io, root : String)&lt;br/&gt;from_json(string_or_io) from_json&lt;/a&gt;, &lt;a href=&quot;../../object#from_yaml(string_or_io:String%7CIO)-class-method&quot;&gt; from_yaml(string_or_io : String | IO) from_yaml&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../object#from_json(string_or_io,root:String)-class-method&quot;&gt;from_json（string_or_io，root：字符串）&lt;br/&gt;from_json（string_or_io）from_json&lt;/a&gt;，&lt;a href=&quot;../../object#from_yaml(string_or_io:String%7CIO)-class-method&quot;&gt;from_yaml（string_or_io：String | IO）from_yaml&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9476503aef29e2f088ca9831b9041606ac0b5b2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../object#from_json(string_or_io,root:String):self-class-method&quot;&gt; from_json(string_or_io, root : String) : self&lt;br/&gt;from_json(string_or_io) : self from_json&lt;/a&gt;, &lt;a href=&quot;../../object#from_yaml(string_or_io:String%7CIO):self-class-method&quot;&gt; from_yaml(string_or_io : String | IO) : self from_yaml&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../object#from_json(string_or_io,root:String):self-class-method&quot;&gt;from_json（string_or_io，root：String）：自我&lt;br/&gt;from_json（string_or_io）：自我from_json&lt;/a&gt;，&lt;a href=&quot;../../object#from_yaml(string_or_io:String%7CIO):self-class-method&quot;&gt;from_yaml（string_or_io：String | IO）：自我from_yaml&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f9036be388aeb3c307194a07ec6247dea0dc2fee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../reference#==(other:self)-instance-method&quot;&gt; ==(other : self)&lt;br/&gt;==(other : JSON::Any)&lt;br/&gt;==(other : YAML::Any)&lt;br/&gt;==(other) ==&lt;/a&gt;, &lt;a href=&quot;../../reference#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;, &lt;a href=&quot;../../reference#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;../../reference#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;../../reference#object_id:UInt64-instance-method&quot;&gt; object_id : UInt64 object_id&lt;/a&gt;, &lt;a href=&quot;../../reference#pretty_print(pp):Nil-instance-method&quot;&gt; pretty_print(pp) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;../../reference#same?(other:Reference)-instance-method&quot;&gt; same?(other : Reference)&lt;br/&gt;same?(other : Nil) same?&lt;/a&gt;, &lt;a href=&quot;../../reference#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../reference#==(other:self)-instance-method&quot;&gt;==（other：self）&lt;br/&gt;==（other：JSON :: Any）&lt;br/&gt;==（other：YAML :: Any）&lt;br/&gt;==（other）==&lt;/a&gt;，&lt;a href=&quot;../../reference#dup-instance-method&quot;&gt;dup dup&lt;/a&gt;，&lt;a href=&quot;../../reference#hash(hasher)-instance-method&quot;&gt;hash（哈希）hash&lt;/a&gt;，&lt;a href=&quot;../../reference#inspect(io:IO):Nil-instance-method&quot;&gt;inspect（io：IO） ：无检查&lt;/a&gt;，&lt;a href=&quot;../../reference#object_id:UInt64-instance-method&quot;&gt;object_id：UInt64 object_id&lt;/a&gt;，&lt;a href=&quot;../../reference#pretty_print(pp):Nil-instance-method&quot;&gt;pretty_print（pp）：无pretty_print&lt;/a&gt;，是否&lt;a href=&quot;../../reference#same?(other:Reference)-instance-method&quot;&gt;相同？（其他：参考）是否&lt;br/&gt;相同（其他：无）？&lt;/a&gt;，&lt;a href=&quot;../../reference#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：无to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="58564d87b80d3edfd91e3db505b6795d26123ba3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../socket/server#accept:IO-instance-method&quot;&gt; accept : IO&lt;br/&gt;accept(&amp;amp;) accept&lt;/a&gt;, &lt;a href=&quot;../../socket/server#accept?:IO?-instance-method&quot;&gt; accept? : IO?&lt;br/&gt;accept?(&amp;amp;) accept?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../socket/server#accept:IO-instance-method&quot;&gt;接受：IO&lt;br/&gt;接受（＆）接受&lt;/a&gt;，&lt;a href=&quot;../../socket/server#accept?:IO?-instance-method&quot;&gt;接受吗？：IO？&lt;br/&gt;接受吗？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e72a0df48b6eed42f1d0e76cb77f8d181bcecc0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../socket/server#accept:IO-instance-method&quot;&gt; accept : IO&lt;br/&gt;accept(&amp;amp;block) accept&lt;/a&gt;, &lt;a href=&quot;../../socket/server#accept?:IO?-instance-method&quot;&gt; accept? : IO?&lt;br/&gt;accept?(&amp;amp;block) accept?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../socket/server#accept:IO-instance-method&quot;&gt;accept：IO &lt;br/&gt;accept（＆block）accept&lt;/a&gt;，&lt;a href=&quot;../../socket/server#accept?:IO?-instance-method&quot;&gt;接受吗？：IO？&lt;br/&gt;接受吗？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb5216838eda112c1ca1e9832a3722897f379046" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../struct#==(other):Bool-instance-method&quot;&gt; ==(other) : Bool ==&lt;/a&gt;, &lt;a href=&quot;../../struct#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;../../struct#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;../../struct#pretty_print(pp):Nil-instance-method&quot;&gt; pretty_print(pp) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;../../struct#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../struct#==(other):Bool-instance-method&quot;&gt;==（other）：Bool ==&lt;/a&gt;，&lt;a href=&quot;../../struct#hash(hasher)-instance-method&quot;&gt;hash（哈希）hash&lt;/a&gt;，&lt;a href=&quot;../../struct#inspect(io:IO):Nil-instance-method&quot;&gt;inspect（io：IO）：无检查&lt;/a&gt;，&lt;a href=&quot;../../struct#pretty_print(pp):Nil-instance-method&quot;&gt;pretty_print（pp）：Nil pretty_print&lt;/a&gt;，&lt;a href=&quot;../../struct#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：Nil to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="18f148482a64ab8f4526ebe6672f812bdddd8964" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../value#==(other:JSON::Any)-instance-method&quot;&gt; ==(other : JSON::Any)&lt;br/&gt;==(other : YAML::Any)&lt;br/&gt;==(other) ==&lt;/a&gt;, &lt;a href=&quot;../../value#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../value#==(other:JSON::Any)-instance-method&quot;&gt;==（other：JSON :: Any）&lt;br/&gt;==（other：YAML :: Any）&lt;br/&gt;==（other）==&lt;/a&gt;，&lt;a href=&quot;../../value#dup-instance-method&quot;&gt;dup dup&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ffec79c224b2d49ccb5e79d8025fda1bffb4ceb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../abi#abi_info(atys:Array(Type),rty:Type,ret_def:Bool,context:Context)-instance-method&quot;&gt; abi_info(atys : Array(Type), rty : Type, ret_def : Bool, context : Context) abi_info&lt;/a&gt;, &lt;a href=&quot;../abi#align(type:Type,pointer_size)-instance-method&quot;&gt; align(type : Type, pointer_size)&lt;br/&gt;align(type : Type) align&lt;/a&gt;, &lt;a href=&quot;../abi#align_offset(offset,type)-instance-method&quot;&gt; align_offset(offset, type) align_offset&lt;/a&gt;, &lt;a href=&quot;../abi#osx?:Bool-instance-method&quot;&gt; osx? : Bool osx?&lt;/a&gt;, &lt;a href=&quot;../abi#size(type:Type,pointer_size)-instance-method&quot;&gt; size(type : Type, pointer_size)&lt;br/&gt;size(type : Type) size&lt;/a&gt;, &lt;a href=&quot;../abi#target_data:TargetData-instance-method&quot;&gt; target_data : TargetData target_data&lt;/a&gt;, &lt;a href=&quot;../abi#windows?:Bool-instance-method&quot;&gt; windows? : Bool windows?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../abi#abi_info(atys:Array(Type),rty:Type,ret_def:Bool,context:Context)-instance-method&quot;&gt;abi_info（atys：Array（Type），rty：Type，ret_def：Bool，context：Context）abi_info&lt;/a&gt;，&lt;a href=&quot;../abi#align(type:Type,pointer_size)-instance-method&quot;&gt;align（type：Type，pointer_size）&lt;br/&gt;align（type：Type）align&lt;/a&gt;，&lt;a href=&quot;../abi#align_offset(offset,type)-instance-method&quot;&gt;align_offset（offset，type）align_offset&lt;/a&gt;，&lt;a href=&quot;../abi#osx?:Bool-instance-method&quot;&gt;osx？ ：布尔osx？&lt;/a&gt;，&lt;a href=&quot;../abi#size(type:Type,pointer_size)-instance-method&quot;&gt;size（type：Type，pointer_size）&lt;br/&gt;大小（type：Type）size&lt;/a&gt;，&lt;a href=&quot;../abi#target_data:TargetData-instance-method&quot;&gt;target_data：TargetData target_data&lt;/a&gt;，&lt;a href=&quot;../abi#windows?:Bool-instance-method&quot;&gt;Windows？ ：布尔窗口？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53286bd028546e00315548c6ea24a41ff02e14f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../accesstoken#access_token:String-instance-method&quot;&gt; access_token : String access_token&lt;/a&gt;, &lt;a href=&quot;../accesstoken#access_token=(access_token:String)-instance-method&quot;&gt; access_token=(access_token : String) access_token=&lt;/a&gt;, &lt;a href=&quot;../accesstoken#authenticate(request:HTTP::Request,tls)-instance-method&quot;&gt; authenticate(request : HTTP::Request, tls)&lt;br/&gt;authenticate(client : HTTP::Client) authenticate&lt;/a&gt;, &lt;a href=&quot;../accesstoken#expires_in:Int64?-instance-method&quot;&gt; expires_in : Int64? expires_in&lt;/a&gt;, &lt;a href=&quot;../accesstoken#expires_in=(expires_in:Int64?)-instance-method&quot;&gt; expires_in=(expires_in : Int64?) expires_in=&lt;/a&gt;, &lt;a href=&quot;../accesstoken#extra:Hash(String,String)?-instance-method&quot;&gt; extra : Hash(String, String)? extra&lt;/a&gt;, &lt;a href=&quot;../accesstoken#extra=(extra:Hash(String,String)?)-instance-method&quot;&gt; extra=(extra : Hash(String, String)?) extra=&lt;/a&gt;, &lt;a href=&quot;../accesstoken#refresh_token:String?-instance-method&quot;&gt; refresh_token : String? refresh_token&lt;/a&gt;, &lt;a href=&quot;../accesstoken#refresh_token=(refresh_token:String?)-instance-method&quot;&gt; refresh_token=(refresh_token : String?) refresh_token=&lt;/a&gt;, &lt;a href=&quot;../accesstoken#scope:String?-instance-method&quot;&gt; scope : String? scope&lt;/a&gt;, &lt;a href=&quot;../accesstoken#scope=(scope:String?)-instance-method&quot;&gt; scope=(scope : String?) scope=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../accesstoken#access_token:String-instance-method&quot;&gt;access_token：字符串access_token&lt;/a&gt;，&lt;a href=&quot;../accesstoken#access_token=(access_token:String)-instance-method&quot;&gt;access_token =（access_token：字符串）access_token =&lt;/a&gt;，&lt;a href=&quot;../accesstoken#authenticate(request:HTTP::Request,tls)-instance-method&quot;&gt;authenticate（请求：HTTP :: Request，tls）&lt;br/&gt;authenticate（客户端：HTTP :: Client）authenticate&lt;/a&gt;，&lt;a href=&quot;../accesstoken#expires_in:Int64?-instance-method&quot;&gt;expires_in：Int64吗？ expires_in&lt;/a&gt;，&lt;a href=&quot;../accesstoken#expires_in=(expires_in:Int64?)-instance-method&quot;&gt;expires_in =（expires_in：Int64？）expires_in =&lt;/a&gt;，&lt;a href=&quot;../accesstoken#extra:Hash(String,String)?-instance-method&quot;&gt;extra：哈希（String，String）？ extra&lt;/a&gt;，&lt;a href=&quot;../accesstoken#extra=(extra:Hash(String,String)?)-instance-method&quot;&gt;extra =（extra：Hash（String，String）？）extra =&lt;/a&gt;，&lt;a href=&quot;../accesstoken#refresh_token:String?-instance-method&quot;&gt;refresh_token：String？ refresh_token&lt;/a&gt;，&lt;a href=&quot;../accesstoken#refresh_token=(refresh_token:String?)-instance-method&quot;&gt;refresh_token =（refresh_token：String？）refresh_token =&lt;/a&gt;，&lt;a href=&quot;../accesstoken#scope:String?-instance-method&quot;&gt;作用域：String？ scope&lt;/a&gt;，&lt;a href=&quot;../accesstoken#scope=(scope:String?)-instance-method&quot;&gt;scope =（scope：String？）scope =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6d0fdddff393daf21e2980d15aaae15db34e2f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;prerelease&quot;&gt;SemanticVersion::Prerelease&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;prerelease&quot;&gt;SemanticVersion::Prerelease&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="2a93dd4c5dd324032a202e3509fa7823ff60c500" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;span&quot;&gt;Time::Span&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;span&quot;&gt;Time::Span&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="72461e5b39ae1635a75b9c3629757711a16a8288" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../comparable#%3C(other:T)-instance-method&quot;&gt;  &amp;lt;&lt;/a&gt;, &lt;a href=&quot;../comparable#%3C=(other:T)-instance-method&quot;&gt; &amp;lt;=(other : T) &amp;lt;=&lt;/a&gt;, &lt;a href=&quot;../comparable#(other:T)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : T) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;../comparable#==(other:T)-instance-method&quot;&gt; ==(other : T) ==&lt;/a&gt;, &lt;a href=&quot;../comparable#%3E(other:T)-instance-method&quot;&gt; &amp;gt;(other : T) &amp;gt;&lt;/a&gt;, &lt;a href=&quot;../comparable#%3E=(other:T)-instance-method&quot;&gt; &amp;gt;=(other : T) &amp;gt;=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../comparable#%3C(other:T)-instance-method&quot;&gt; &amp;lt;&lt;/a&gt;，&lt;a href=&quot;../comparable#%3C=(other:T)-instance-method&quot;&gt;&amp;lt;=（other：T）&amp;lt;=&lt;/a&gt;，&lt;a href=&quot;../comparable#(other:T)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：T）&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;../comparable#==(other:T)-instance-method&quot;&gt;==（other：T）==&lt;/a&gt;，&lt;a href=&quot;../comparable#%3E(other:T)-instance-method&quot;&gt;&amp;gt;（other：T）&amp;gt;&lt;/a&gt;，&lt;a href=&quot;../comparable#%3E=(other:T)-instance-method&quot;&gt;&amp;gt; =（other：T）&amp;gt; =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a9c74eff98b6f18a49c5b740e3cc04754cd9e31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../comparable#%3C(other:T)-instance-method&quot;&gt;  &amp;lt;&lt;/a&gt;, &lt;a href=&quot;../comparable#%3C=(other:T)-instance-method&quot;&gt; &amp;lt;=(other : T) &amp;lt;=&lt;/a&gt;, &lt;a href=&quot;../comparable#(other:T)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : T) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;../comparable#==(other:T)-instance-method&quot;&gt; ==(other : T) ==&lt;/a&gt;, &lt;a href=&quot;../comparable#%3E(other:T)-instance-method&quot;&gt; &amp;gt;(other : T) &amp;gt;&lt;/a&gt;, &lt;a href=&quot;../comparable#%3E=(other:T)-instance-method&quot;&gt; &amp;gt;=(other : T) &amp;gt;=&lt;/a&gt;, &lt;a href=&quot;../comparable#clamp(min,max)-instance-method&quot;&gt; clamp(min, max)&lt;br/&gt;clamp(range : Range) clamp&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../comparable#%3C(other:T)-instance-method&quot;&gt;&amp;lt;&lt;/a&gt;，&lt;a href=&quot;../comparable#%3C=(other:T)-instance-method&quot;&gt;&amp;lt;=（other：T）&amp;lt;=&lt;/a&gt;，&lt;a href=&quot;../comparable#(other:T)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：T）&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;../comparable#==(other:T)-instance-method&quot;&gt;==（other：T）==&lt;/a&gt;，&lt;a href=&quot;../comparable#%3E(other:T)-instance-method&quot;&gt;&amp;gt;（other：T）&amp;gt;&lt;/a&gt;，&lt;a href=&quot;../comparable#%3E=(other:T)-instance-method&quot;&gt;&amp;gt; =（other：T）&amp;gt; =&lt;/a&gt;，&lt;a href=&quot;../comparable#clamp(min,max)-instance-method&quot;&gt;钳位（最小，最大）&lt;br/&gt;钳位（范围：范围）钳位&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88c0a0faf2b539286dd6be9a564ff4d315acf1f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../context#add_modes(mode:OpenSSL::SSL::Modes)-instance-method&quot;&gt; add_modes(mode : OpenSSL::SSL::Modes) add_modes&lt;/a&gt;, &lt;a href=&quot;../context#add_options(options:OpenSSL::SSL::Options)-instance-method&quot;&gt; add_options(options : OpenSSL::SSL::Options) add_options&lt;/a&gt;, &lt;a href=&quot;../context#add_x509_verify_flags(flags:OpenSSL::X509VerifyFlags)-instance-method&quot;&gt; add_x509_verify_flags(flags : OpenSSL::X509VerifyFlags) add_x509_verify_flags&lt;/a&gt;, &lt;a href=&quot;../context#alpn_protocol=(protocol:String)-instance-method&quot;&gt; alpn_protocol=(protocol : String) alpn_protocol=&lt;/a&gt;, &lt;a href=&quot;../context#ca_certificates=(file_path:String)-instance-method&quot;&gt; ca_certificates=(file_path : String) ca_certificates=&lt;/a&gt;, &lt;a href=&quot;../context#ca_certificates_path=(dir_path:String)-instance-method&quot;&gt; ca_certificates_path=(dir_path : String) ca_certificates_path=&lt;/a&gt;, &lt;a href=&quot;../context#certificate_chain=(file_path:String)-instance-method&quot;&gt; certificate_chain=(file_path : String) certificate_chain=&lt;/a&gt;, &lt;a href=&quot;../context#ciphers=(ciphers:String)-instance-method&quot;&gt; ciphers=(ciphers : String) ciphers=&lt;/a&gt;, &lt;a href=&quot;../context#default_verify_param=(name:String)-instance-method&quot;&gt; default_verify_param=(name : String) default_verify_param=&lt;/a&gt;, &lt;a href=&quot;../context#finalize-instance-method&quot;&gt; finalize finalize&lt;/a&gt;, &lt;a href=&quot;../context#modes-instance-method&quot;&gt; modes modes&lt;/a&gt;, &lt;a href=&quot;../context#options-instance-method&quot;&gt; options options&lt;/a&gt;, &lt;a href=&quot;../context#private_key=(file_path:String)-instance-method&quot;&gt; private_key=(file_path : String) private_key=&lt;/a&gt;, &lt;a href=&quot;../context#remove_modes(mode:OpenSSL::SSL::Modes)-instance-method&quot;&gt; remove_modes(mode : OpenSSL::SSL::Modes) remove_modes&lt;/a&gt;, &lt;a href=&quot;../context#remove_options(options:OpenSSL::SSL::Options)-instance-method&quot;&gt; remove_options(options : OpenSSL::SSL::Options) remove_options&lt;/a&gt;, &lt;a href=&quot;../context#set_default_verify_paths-instance-method&quot;&gt; set_default_verify_paths set_default_verify_paths&lt;/a&gt;, &lt;a href=&quot;../context#set_tmp_ecdh_key(curve=LibCrypto::NID_X9_62_prime256v1)-instance-method&quot;&gt; set_tmp_ecdh_key(curve = LibCrypto::NID_X9_62_prime256v1) set_tmp_ecdh_key&lt;/a&gt;, &lt;a href=&quot;../context#to_unsafe:LibSSL::SSLContext-instance-method&quot;&gt; to_unsafe : LibSSL::SSLContext to_unsafe&lt;/a&gt;, &lt;a href=&quot;../context#verify_mode-instance-method&quot;&gt; verify_mode verify_mode&lt;/a&gt;, &lt;a href=&quot;../context#verify_mode=(mode:OpenSSL::SSL::VerifyMode)-instance-method&quot;&gt; verify_mode=(mode : OpenSSL::SSL::VerifyMode) verify_mode=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../context#add_modes(mode:OpenSSL::SSL::Modes)-instance-method&quot;&gt;add_modes（模式：OpenSSL的:: SSL ::模式）add_modes&lt;/a&gt;，&lt;a href=&quot;../context#add_options(options:OpenSSL::SSL::Options)-instance-method&quot;&gt;add_options（选项：OpenSSL的:: SSL ::选项）add_options&lt;/a&gt;，&lt;a href=&quot;../context#add_x509_verify_flags(flags:OpenSSL::X509VerifyFlags)-instance-method&quot;&gt;add_x509_verify_flags（国旗：OpenSSL的:: X509VerifyFlags）add_x509_verify_flags&lt;/a&gt;，&lt;a href=&quot;../context#alpn_protocol=(protocol:String)-instance-method&quot;&gt;alpn_protocol =（协议：字符串）alpn_protocol =&lt;/a&gt;，&lt;a href=&quot;../context#ca_certificates=(file_path:String)-instance-method&quot;&gt;ca_certificates =（文件路径：字符串）ca_certificates =&lt;/a&gt;，&lt;a href=&quot;../context#ca_certificates_path=(dir_path:String)-instance-method&quot;&gt;ca_certificates_path =（dir_path：字符串）ca_certificates_path =&lt;/a&gt;，&lt;a href=&quot;../context#certificate_chain=(file_path:String)-instance-method&quot;&gt;certificate_chain =（文件&lt;/a&gt;路径：字符串）certificate_chain =，&lt;a href=&quot;../context#ciphers=(ciphers:String)-instance-method&quot;&gt;ciphers =（密码：字符串）ciphers =&lt;/a&gt;，&lt;a href=&quot;../context#default_verify_param=(name:String)-instance-method&quot;&gt;default_verify_param = {name：字符串）default_verify_param =&lt;/a&gt;，&lt;a href=&quot;../context#finalize-instance-method&quot;&gt;final完成&lt;/a&gt;，&lt;a href=&quot;../context#modes-instance-method&quot;&gt;模式模式&lt;/a&gt;，&lt;a href=&quot;../context#options-instance-method&quot;&gt;选项options&lt;/a&gt;，&lt;a href=&quot;../context#private_key=(file_path:String)-instance-method&quot;&gt;private_key = {file_path：String）private_key =&lt;/a&gt;，&lt;a href=&quot;../context#remove_modes(mode:OpenSSL::SSL::Modes)-instance-method&quot;&gt;remove_modes（mode：OpenSSL :: SSL :: Modes）remove_modes&lt;/a&gt;，&lt;a href=&quot;../context#remove_options(options:OpenSSL::SSL::Options)-instance-method&quot;&gt;remove_options（options：OpenSSL :: SSL :: Options）remove_options&lt;/a&gt;，&lt;a href=&quot;../context#set_default_verify_paths-instance-method&quot;&gt;set_default_verify_paths set_default_verify_paths&lt;/a&gt;，&lt;a href=&quot;../context#set_tmp_ecdh_key(curve=LibCrypto::NID_X9_62_prime256v1)-instance-method&quot;&gt;set_tmp_ecdh_key（curve = ：NID_X9_62_prime256v1）set_tmp_ecdh_key&lt;/a&gt;，&lt;a href=&quot;../context#to_unsafe:LibSSL::SSLContext-instance-method&quot;&gt;to_unsafe：LibSSL :: SSLContext to_unsafe&lt;/a&gt;，&lt;a href=&quot;../context#verify_mode-instance-method&quot;&gt;verify_mode verify_mode&lt;/a&gt;，&lt;a href=&quot;../context#verify_mode=(mode:OpenSSL::SSL::VerifyMode)-instance-method&quot;&gt;verify_mode =（mode：OpenSSL :: SSL :: VerifyMode）verify_mode =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21a71cea2a57e6b7da82daadfe83de37432c6bf9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../crystal/system/filedescriptor#fcntl(fd,cmd,arg=0)-class-method&quot;&gt; fcntl(fd, cmd, arg = 0) fcntl&lt;/a&gt;, &lt;a href=&quot;../crystal/system/filedescriptor#from_stdio(fd)-class-method&quot;&gt; from_stdio(fd) from_stdio&lt;/a&gt;, &lt;a href=&quot;../crystal/system/filedescriptor#pipe(read_blocking,write_blocking)-class-method&quot;&gt; pipe(read_blocking, write_blocking) pipe&lt;/a&gt;, &lt;a href=&quot;../crystal/system/filedescriptor#pread(fd,buffer,offset)-class-method&quot;&gt; pread(fd, buffer, offset) pread&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../crystal/system/filedescriptor#fcntl(fd,cmd,arg=0)-class-method&quot;&gt;fcntl（fd，cmd，arg = 0）fcntl&lt;/a&gt;，&lt;a href=&quot;../crystal/system/filedescriptor#from_stdio(fd)-class-method&quot;&gt;from_stdio（fd）from_stdio&lt;/a&gt;，&lt;a href=&quot;../crystal/system/filedescriptor#pipe(read_blocking,write_blocking)-class-method&quot;&gt;管道（read_blocking，write_blocking）管道&lt;/a&gt;，&lt;a href=&quot;../crystal/system/filedescriptor#pread(fd,buffer,offset)-class-method&quot;&gt;pread（fd，buffer，offset）pread&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c6c8b3972f723dc27885ab6ebabb5acde55a2f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../crystal/system/filedescriptor#fcntl(fd,cmd,arg=0)-class-method&quot;&gt; fcntl(fd, cmd, arg = 0) fcntl&lt;/a&gt;, &lt;a href=&quot;../crystal/system/filedescriptor#pipe(read_blocking,write_blocking)-class-method&quot;&gt; pipe(read_blocking, write_blocking) pipe&lt;/a&gt;, &lt;a href=&quot;../crystal/system/filedescriptor#pread(fd,buffer,offset)-class-method&quot;&gt; pread(fd, buffer, offset) pread&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../crystal/system/filedescriptor#fcntl(fd,cmd,arg=0)-class-method&quot;&gt;fcntl（fd，cmd，arg = 0）fcntl&lt;/a&gt;，&lt;a href=&quot;../crystal/system/filedescriptor#pipe(read_blocking,write_blocking)-class-method&quot;&gt;管道（read_blocking，write_blocking）管道&lt;/a&gt;，&lt;a href=&quot;../crystal/system/filedescriptor#pread(fd,buffer,offset)-class-method&quot;&gt;pread（fd，buffer，offset）pread&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="795870a9427ac82a162a2158ef928ef2c1b253ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../digest/base#digest:Bytes-instance-method&quot;&gt; digest : Bytes digest&lt;/a&gt;, &lt;a href=&quot;../digest/base#digest_size:Int32-instance-method&quot;&gt; digest_size : Int32 digest_size&lt;/a&gt;, &lt;a href=&quot;../digest/base#final(dst:Bytes):Bytes-instance-method&quot;&gt; final(dst : Bytes) : Bytes&lt;br/&gt;final : Bytes final&lt;/a&gt;, &lt;a href=&quot;../digest/base#final_impl(dst:Bytes):Nil-instance-method&quot;&gt; final_impl(dst : Bytes) : Nil final_impl&lt;/a&gt;, &lt;a href=&quot;../digest/base#hexdigest:String-instance-method&quot;&gt; hexdigest : String hexdigest&lt;/a&gt;, &lt;a href=&quot;../digest/base#reset:self-instance-method&quot;&gt; reset : self reset&lt;/a&gt;, &lt;a href=&quot;../digest/base#reset_impl:Nil-instance-method&quot;&gt; reset_impl : Nil reset_impl&lt;/a&gt;, &lt;a href=&quot;../digest/base#update(data:Bytes):self-instance-method&quot;&gt; update(data : Bytes) : self&lt;br/&gt;update(data) : self update&lt;/a&gt;, &lt;a href=&quot;../digest/base#update_impl(data:Bytes):Nil-instance-method&quot;&gt; update_impl(data : Bytes) : Nil update_impl&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../digest/base#digest:Bytes-instance-method&quot;&gt;摘要：字节摘要&lt;/a&gt;，摘要_大小&lt;a href=&quot;../digest/base#digest_size:Int32-instance-method&quot;&gt;：Int32&lt;/a&gt;摘要_大小，&lt;a href=&quot;../digest/base#final(dst:Bytes):Bytes-instance-method&quot;&gt;最终（dst：字节）：字节&lt;br/&gt;最终：字节最终&lt;/a&gt;，&lt;a href=&quot;../digest/base#final_impl(dst:Bytes):Nil-instance-method&quot;&gt;final_impl（dst：字节）：无final_impl&lt;/a&gt;，&lt;a href=&quot;../digest/base#hexdigest:String-instance-method&quot;&gt;hexdigest：字符串十六进制&lt;/a&gt;，&lt;a href=&quot;../digest/base#reset:self-instance-method&quot;&gt;复位：自复位&lt;/a&gt;，复位&lt;a href=&quot;../digest/base#reset_impl:Nil-instance-method&quot;&gt;_impl：无效reset_impl&lt;/a&gt;，&lt;a href=&quot;../digest/base#update(data:Bytes):self-instance-method&quot;&gt;更新（ data：字节）：自我&lt;br/&gt;更新（data）：自我更新&lt;/a&gt;，&lt;a href=&quot;../digest/base#update_impl(data:Bytes):Nil-instance-method&quot;&gt;update_impl（data：字节）：无update_impl&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59880f320ded4b561f97c65c998ff2da7975f2f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enum#&amp;amp;(other:self)-instance-method&quot;&gt; &amp;amp;(other : self) &amp;amp;&lt;/a&gt;, &lt;a href=&quot;../enum#+(other:Int)-instance-method&quot;&gt; +(other : Int) +&lt;/a&gt;, &lt;a href=&quot;../enum#-(other:Int)-instance-method&quot;&gt; -(other : Int) -&lt;/a&gt;, &lt;a href=&quot;../enum#(other:self)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : self) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;../enum#==(other:self)-instance-method&quot;&gt; ==(other : self) ==&lt;/a&gt;, &lt;a href=&quot;../enum#%5E(other:self)-instance-method&quot;&gt; ^(other : self) ^&lt;/a&gt;, &lt;a href=&quot;../enum#clone-instance-method&quot;&gt; clone clone&lt;/a&gt;, &lt;a href=&quot;../enum#each(&amp;amp;)-instance-method&quot;&gt; each(&amp;amp;) each&lt;/a&gt;, &lt;a href=&quot;../enum#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;../enum#includes?(other:self)-instance-method&quot;&gt; includes?(other : self) includes?&lt;/a&gt;, &lt;a href=&quot;../enum#to_f32:Float32-instance-method&quot;&gt; to_f32 : Float32 to_f32&lt;/a&gt;, &lt;a href=&quot;../enum#to_f32!:Float32-instance-method&quot;&gt; to_f32! : Float32 to_f32!&lt;/a&gt;, &lt;a href=&quot;../enum#to_f64:Float64-instance-method&quot;&gt; to_f64 : Float64 to_f64&lt;/a&gt;, &lt;a href=&quot;../enum#to_f64!:Float64-instance-method&quot;&gt; to_f64! : Float64 to_f64!&lt;/a&gt;, &lt;a href=&quot;../enum#to_i:Int32-instance-method&quot;&gt; to_i : Int32 to_i&lt;/a&gt;, &lt;a href=&quot;../enum#to_i16:Int16-instance-method&quot;&gt; to_i16 : Int16 to_i16&lt;/a&gt;, &lt;a href=&quot;../enum#to_i16!:Int16-instance-method&quot;&gt; to_i16! : Int16 to_i16!&lt;/a&gt;, &lt;a href=&quot;../enum#to_i32:Int32-instance-method&quot;&gt; to_i32 : Int32 to_i32&lt;/a&gt;, &lt;a href=&quot;../enum#to_i32!:Int32-instance-method&quot;&gt; to_i32! : Int32 to_i32!&lt;/a&gt;, &lt;a href=&quot;../enum#to_i64:Int64-instance-method&quot;&gt; to_i64 : Int64 to_i64&lt;/a&gt;, &lt;a href=&quot;../enum#to_i64!:Int64-instance-method&quot;&gt; to_i64! : Int64 to_i64!&lt;/a&gt;, &lt;a href=&quot;../enum#to_i8:Int8-instance-method&quot;&gt; to_i8 : Int8 to_i8&lt;/a&gt;, &lt;a href=&quot;../enum#to_i8!:Int8-instance-method&quot;&gt; to_i8! : Int8 to_i8!&lt;/a&gt;, &lt;a href=&quot;../enum#to_json(json:JSON::Builder)-instance-method&quot;&gt; to_json(json : JSON::Builder) to_json&lt;/a&gt;, &lt;a href=&quot;../enum#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil&lt;br/&gt;to_s : String to_s&lt;/a&gt;, &lt;a href=&quot;../enum#to_u16:UInt16-instance-method&quot;&gt; to_u16 : UInt16 to_u16&lt;/a&gt;, &lt;a href=&quot;../enum#to_u16!:UInt16-instance-method&quot;&gt; to_u16! : UInt16 to_u16!&lt;/a&gt;, &lt;a href=&quot;../enum#to_u32:UInt32-instance-method&quot;&gt; to_u32 : UInt32 to_u32&lt;/a&gt;, &lt;a href=&quot;../enum#to_u32!:UInt32-instance-method&quot;&gt; to_u32! : UInt32 to_u32!&lt;/a&gt;, &lt;a href=&quot;../enum#to_u64:UInt64-instance-method&quot;&gt; to_u64 : UInt64 to_u64&lt;/a&gt;, &lt;a href=&quot;../enum#to_u64!:UInt64-instance-method&quot;&gt; to_u64! : UInt64 to_u64!&lt;/a&gt;, &lt;a href=&quot;../enum#to_u8:UInt8-instance-method&quot;&gt; to_u8 : UInt8 to_u8&lt;/a&gt;, &lt;a href=&quot;../enum#to_u8!:UInt8-instance-method&quot;&gt; to_u8! : UInt8 to_u8!&lt;/a&gt;, &lt;a href=&quot;../enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt; to_yaml(yaml : YAML::Nodes::Builder) to_yaml&lt;/a&gt;, &lt;a href=&quot;../enum#%7C(other:self)-instance-method&quot;&gt; |(other : self) |&lt;/a&gt;, &lt;a href=&quot;../enum#~-instance-method&quot;&gt; ~ ~&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../enum#&amp;amp;(other:self)-instance-method&quot;&gt;＆（other：self）＆&lt;/a&gt;，&lt;a href=&quot;../enum#+(other:Int)-instance-method&quot;&gt;+（other：Int）+&lt;/a&gt;，&lt;a href=&quot;../enum#-(other:Int)-instance-method&quot;&gt;-（other：Int）-&lt;/a&gt;，&lt;a href=&quot;../enum#(other:self)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：self）&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;../enum#==(other:self)-instance-method&quot;&gt;==（other：self）==&lt;/a&gt;，&lt;a href=&quot;../enum#%5E(other:self)-instance-method&quot;&gt;^（other： self）^&lt;/a&gt;，&lt;a href=&quot;../enum#clone-instance-method&quot;&gt;clone clone&lt;/a&gt;，&lt;a href=&quot;../enum#each(&amp;amp;)-instance-method&quot;&gt;each（＆）each&lt;/a&gt;，&lt;a href=&quot;../enum#hash(hasher)-instance-method&quot;&gt;hash（hasher）hash&lt;/a&gt;，&lt;a href=&quot;../enum#includes?(other:self)-instance-method&quot;&gt;include？（other：self）包括？&lt;/a&gt;，&lt;a href=&quot;../enum#to_f32:Float32-instance-method&quot;&gt;to_f32：Float32 to_f32&lt;/a&gt;，&lt;a href=&quot;../enum#to_f32!:Float32-instance-method&quot;&gt;to_f32！ ：Float32 to_f32！&lt;/a&gt;，&lt;a href=&quot;../enum#to_f64:Float64-instance-method&quot;&gt;to_f64：Float64 to_f64&lt;/a&gt;，&lt;a href=&quot;../enum#to_f64!:Float64-instance-method&quot;&gt;to_f64！ ：Float64 to_f64！&lt;/a&gt;，&lt;a href=&quot;../enum#to_i:Int32-instance-method&quot;&gt;to_i：Int32 to_i&lt;/a&gt;，&lt;a href=&quot;../enum#to_i16:Int16-instance-method&quot;&gt;to_i16：Int16 to_i16&lt;/a&gt;，&lt;a href=&quot;../enum#to_i16!:Int16-instance-method&quot;&gt;to_i16！ ：int16 to_i16！&lt;/a&gt;，&lt;a href=&quot;../enum#to_i32:Int32-instance-method&quot;&gt;to_i32：Int32 to_i32&lt;/a&gt;，&lt;a href=&quot;../enum#to_i32!:Int32-instance-method&quot;&gt;to_i32！ ：Int32 to_i32！&lt;/a&gt;，&lt;a href=&quot;../enum#to_i64:Int64-instance-method&quot;&gt;to_i64：Int64 to_i64&lt;/a&gt;，&lt;a href=&quot;../enum#to_i64!:Int64-instance-method&quot;&gt;to_i64！ ：int64 to_i64！&lt;/a&gt;，&lt;a href=&quot;../enum#to_i8:Int8-instance-method&quot;&gt;to_i8：Int8 to_i8&lt;/a&gt;，&lt;a href=&quot;../enum#to_i8!:Int8-instance-method&quot;&gt;to_i8！ ：Int8 to_i8！&lt;/a&gt;，&lt;a href=&quot;../enum#to_json(json:JSON::Builder)-instance-method&quot;&gt;to_json（json：JSON :: Builder）to_json&lt;/a&gt;，&lt;a href=&quot;../enum#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：无&lt;br/&gt;to_s：字符串to_s&lt;/a&gt;，&lt;a href=&quot;../enum#to_u16:UInt16-instance-method&quot;&gt;to_u16：UInt16 to_u16&lt;/a&gt;，&lt;a href=&quot;../enum#to_u16!:UInt16-instance-method&quot;&gt;to_u16！ ：UInt16 to_u16！&lt;/a&gt;，&lt;a href=&quot;../enum#to_u32:UInt32-instance-method&quot;&gt;to_u32：UInt32 to_u32&lt;/a&gt;，&lt;a href=&quot;../enum#to_u32!:UInt32-instance-method&quot;&gt;to_u32！ ：UInt32 to_u32！&lt;/a&gt;，&lt;a href=&quot;../enum#to_u64:UInt64-instance-method&quot;&gt;to_u64：UInt64 to_u64&lt;/a&gt;，&lt;a href=&quot;../enum#to_u64!:UInt64-instance-method&quot;&gt;to_u64！ ：UInt64 to_u64！&lt;/a&gt;，&lt;a href=&quot;../enum#to_u8:UInt8-instance-method&quot;&gt;to_u8：UInt8 to_u8&lt;/a&gt;，&lt;a href=&quot;../enum#to_u8!:UInt8-instance-method&quot;&gt;to_u8！ ：UInt8 to_u8！&lt;/a&gt;，&lt;a href=&quot;../enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt;to_yaml（yaml：YAML :: Nodes :: Builder）to_yaml&lt;/a&gt;，&lt;a href=&quot;../enum#%7C(other:self)-instance-method&quot;&gt;|（other：self）| &lt;/a&gt;，&lt;a href=&quot;../enum#~-instance-method&quot;&gt;〜〜&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f71e2dae9c05eaccce01594bfdd667e9f8df7037" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enum#&amp;amp;(other:self)-instance-method&quot;&gt; &amp;amp;(other : self) &amp;amp;&lt;/a&gt;, &lt;a href=&quot;../enum#+(other:Int)-instance-method&quot;&gt; +(other : Int) +&lt;/a&gt;, &lt;a href=&quot;../enum#-(other:Int)-instance-method&quot;&gt; -(other : Int) -&lt;/a&gt;, &lt;a href=&quot;../enum#(other:self)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : self) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;../enum#==(other:self)-instance-method&quot;&gt; ==(other : self) ==&lt;/a&gt;, &lt;a href=&quot;../enum#%5E(other:self)-instance-method&quot;&gt; ^(other : self) ^&lt;/a&gt;, &lt;a href=&quot;../enum#clone-instance-method&quot;&gt; clone clone&lt;/a&gt;, &lt;a href=&quot;../enum#each(&amp;amp;block)-instance-method&quot;&gt; each(&amp;amp;block) each&lt;/a&gt;, &lt;a href=&quot;../enum#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;../enum#includes?(other:self)-instance-method&quot;&gt; includes?(other : self) includes?&lt;/a&gt;, &lt;a href=&quot;../enum#to_f32:Float32-instance-method&quot;&gt; to_f32 : Float32 to_f32&lt;/a&gt;, &lt;a href=&quot;../enum#to_f32!:Float32-instance-method&quot;&gt; to_f32! : Float32 to_f32!&lt;/a&gt;, &lt;a href=&quot;../enum#to_f64:Float64-instance-method&quot;&gt; to_f64 : Float64 to_f64&lt;/a&gt;, &lt;a href=&quot;../enum#to_f64!:Float64-instance-method&quot;&gt; to_f64! : Float64 to_f64!&lt;/a&gt;, &lt;a href=&quot;../enum#to_i:Int32-instance-method&quot;&gt; to_i : Int32 to_i&lt;/a&gt;, &lt;a href=&quot;../enum#to_i16:Int16-instance-method&quot;&gt; to_i16 : Int16 to_i16&lt;/a&gt;, &lt;a href=&quot;../enum#to_i16!:Int16-instance-method&quot;&gt; to_i16! : Int16 to_i16!&lt;/a&gt;, &lt;a href=&quot;../enum#to_i32:Int32-instance-method&quot;&gt; to_i32 : Int32 to_i32&lt;/a&gt;, &lt;a href=&quot;../enum#to_i32!:Int32-instance-method&quot;&gt; to_i32! : Int32 to_i32!&lt;/a&gt;, &lt;a href=&quot;../enum#to_i64:Int64-instance-method&quot;&gt; to_i64 : Int64 to_i64&lt;/a&gt;, &lt;a href=&quot;../enum#to_i64!:Int64-instance-method&quot;&gt; to_i64! : Int64 to_i64!&lt;/a&gt;, &lt;a href=&quot;../enum#to_i8:Int8-instance-method&quot;&gt; to_i8 : Int8 to_i8&lt;/a&gt;, &lt;a href=&quot;../enum#to_i8!:Int8-instance-method&quot;&gt; to_i8! : Int8 to_i8!&lt;/a&gt;, &lt;a href=&quot;../enum#to_json(json:JSON::Builder)-instance-method&quot;&gt; to_json(json : JSON::Builder) to_json&lt;/a&gt;, &lt;a href=&quot;../enum#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil&lt;br/&gt;to_s : String to_s&lt;/a&gt;, &lt;a href=&quot;../enum#to_u16:UInt16-instance-method&quot;&gt; to_u16 : UInt16 to_u16&lt;/a&gt;, &lt;a href=&quot;../enum#to_u16!:UInt16-instance-method&quot;&gt; to_u16! : UInt16 to_u16!&lt;/a&gt;, &lt;a href=&quot;../enum#to_u32:UInt32-instance-method&quot;&gt; to_u32 : UInt32 to_u32&lt;/a&gt;, &lt;a href=&quot;../enum#to_u32!:UInt32-instance-method&quot;&gt; to_u32! : UInt32 to_u32!&lt;/a&gt;, &lt;a href=&quot;../enum#to_u64:UInt64-instance-method&quot;&gt; to_u64 : UInt64 to_u64&lt;/a&gt;, &lt;a href=&quot;../enum#to_u64!:UInt64-instance-method&quot;&gt; to_u64! : UInt64 to_u64!&lt;/a&gt;, &lt;a href=&quot;../enum#to_u8:UInt8-instance-method&quot;&gt; to_u8 : UInt8 to_u8&lt;/a&gt;, &lt;a href=&quot;../enum#to_u8!:UInt8-instance-method&quot;&gt; to_u8! : UInt8 to_u8!&lt;/a&gt;, &lt;a href=&quot;../enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt; to_yaml(yaml : YAML::Nodes::Builder) to_yaml&lt;/a&gt;, &lt;a href=&quot;../enum#%7C(other:self)-instance-method&quot;&gt; |(other : self) |&lt;/a&gt;, &lt;a href=&quot;../enum#~-instance-method&quot;&gt; ~ ~&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../enum#&amp;amp;(other:self)-instance-method&quot;&gt;＆（other：self）＆&lt;/a&gt;，&lt;a href=&quot;../enum#+(other:Int)-instance-method&quot;&gt;+（other：Int）+&lt;/a&gt;，&lt;a href=&quot;../enum#-(other:Int)-instance-method&quot;&gt;-（other：Int）-&lt;/a&gt;，&lt;a href=&quot;../enum#(other:self)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：self）&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;../enum#==(other:self)-instance-method&quot;&gt;==（other：self）==&lt;/a&gt;，&lt;a href=&quot;../enum#%5E(other:self)-instance-method&quot;&gt;^（other： self）^&lt;/a&gt;，&lt;a href=&quot;../enum#clone-instance-method&quot;&gt;clone clone&lt;/a&gt;，&lt;a href=&quot;../enum#each(&amp;amp;block)-instance-method&quot;&gt;each（＆block）each&lt;/a&gt;，&lt;a href=&quot;../enum#hash(hasher)-instance-method&quot;&gt;hash（hasher）hash&lt;/a&gt;，&lt;a href=&quot;../enum#includes?(other:self)-instance-method&quot;&gt;include？（other：self）包括吗？&lt;/a&gt;，&lt;a href=&quot;../enum#to_f32:Float32-instance-method&quot;&gt;to_f32：Float32 to_f32&lt;/a&gt;，&lt;a href=&quot;../enum#to_f32!:Float32-instance-method&quot;&gt;to_f32！ ：Float32 to_f32！&lt;/a&gt;，&lt;a href=&quot;../enum#to_f64:Float64-instance-method&quot;&gt;to_f64：Float64 to_f64&lt;/a&gt;，&lt;a href=&quot;../enum#to_f64!:Float64-instance-method&quot;&gt;to_f64！ ：Float64 to_f64！&lt;/a&gt;，&lt;a href=&quot;../enum#to_i:Int32-instance-method&quot;&gt;to_i：Int32 to_i&lt;/a&gt;，&lt;a href=&quot;../enum#to_i16:Int16-instance-method&quot;&gt;to_i16：Int16 to_i16&lt;/a&gt;，&lt;a href=&quot;../enum#to_i16!:Int16-instance-method&quot;&gt;to_i16！ ：Int16 to_i16！&lt;/a&gt;，&lt;a href=&quot;../enum#to_i32:Int32-instance-method&quot;&gt;to_i32：Int32 to_i32&lt;/a&gt;，&lt;a href=&quot;../enum#to_i32!:Int32-instance-method&quot;&gt;to_i32！ ：Int32 to_i32！&lt;/a&gt;，&lt;a href=&quot;../enum#to_i64:Int64-instance-method&quot;&gt;to_i64：Int64 to_i64&lt;/a&gt;，&lt;a href=&quot;../enum#to_i64!:Int64-instance-method&quot;&gt;to_i64！ ：int64 to_i64！&lt;/a&gt;，&lt;a href=&quot;../enum#to_i8:Int8-instance-method&quot;&gt;to_i8：Int8 to_i8&lt;/a&gt;，&lt;a href=&quot;../enum#to_i8!:Int8-instance-method&quot;&gt;to_i8！ ：int8 to_i8！&lt;/a&gt;，&lt;a href=&quot;../enum#to_json(json:JSON::Builder)-instance-method&quot;&gt;to_json（json：JSON :: Builder）to_json&lt;/a&gt;，&lt;a href=&quot;../enum#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：无&lt;br/&gt;to_s：字符串to_s&lt;/a&gt;，&lt;a href=&quot;../enum#to_u16:UInt16-instance-method&quot;&gt;to_u16：UInt16 to_u16&lt;/a&gt;，&lt;a href=&quot;../enum#to_u16!:UInt16-instance-method&quot;&gt;to_u16！ ：UInt16 to_u16！&lt;/a&gt;，&lt;a href=&quot;../enum#to_u32:UInt32-instance-method&quot;&gt;to_u32：UInt32 to_u32&lt;/a&gt;，&lt;a href=&quot;../enum#to_u32!:UInt32-instance-method&quot;&gt;to_u32！ ：UInt32 to_u32！&lt;/a&gt;，&lt;a href=&quot;../enum#to_u64:UInt64-instance-method&quot;&gt;to_u64：UInt64 to_u64&lt;/a&gt;，&lt;a href=&quot;../enum#to_u64!:UInt64-instance-method&quot;&gt;to_u64！ ：UInt64 to_u64！&lt;/a&gt;，&lt;a href=&quot;../enum#to_u8:UInt8-instance-method&quot;&gt;to_u8：UInt8 to_u8&lt;/a&gt;，&lt;a href=&quot;../enum#to_u8!:UInt8-instance-method&quot;&gt;to_u8！ ：UInt8 to_u8！&lt;/a&gt;，&lt;a href=&quot;../enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt;to_yaml（yaml：YAML :: Nodes :: Builder）to_yaml&lt;/a&gt;，&lt;a href=&quot;../enum#%7C(other:self)-instance-method&quot;&gt;|（other：self）| &lt;/a&gt;，&lt;a href=&quot;../enum#~-instance-method&quot;&gt;〜〜&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d5cc55bd8e1ab2a702893d94f4591575306f09f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enum#each(&amp;amp;)-class-method&quot;&gt; each(&amp;amp;) each&lt;/a&gt;, &lt;a href=&quot;../enum#names:Array(String)-class-method&quot;&gt; names : Array(String) names&lt;/a&gt;, &lt;a href=&quot;../enum#valid?(value:self):Bool-class-method&quot;&gt; valid?(value : self) : Bool valid?&lt;/a&gt;, &lt;a href=&quot;../enum#values:Array(self)-class-method&quot;&gt; values : Array(self) values&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../enum#each(&amp;amp;)-class-method&quot;&gt;each（＆）each&lt;/a&gt;，&lt;a href=&quot;../enum#names:Array(String)-class-method&quot;&gt;名称：Array（String）names&lt;/a&gt;，&lt;a href=&quot;../enum#valid?(value:self):Bool-class-method&quot;&gt;有效吗？（value：self）：布尔有效吗？&lt;/a&gt;，&lt;a href=&quot;../enum#values:Array(self)-class-method&quot;&gt;values：数组（自身）值&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6bfacbf12db0c7474e34dd616a19d6e6d9f7eab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enum#each(&amp;amp;block)-class-method&quot;&gt; each(&amp;amp;block) each&lt;/a&gt;, &lt;a href=&quot;../enum#names:Array(String)-class-method&quot;&gt; names : Array(String) names&lt;/a&gt;, &lt;a href=&quot;../enum#values:Array(self)-class-method&quot;&gt; values : Array(self) values&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../enum#each(&amp;amp;block)-class-method&quot;&gt;each（＆block）each&lt;/a&gt;，&lt;a href=&quot;../enum#names:Array(String)-class-method&quot;&gt;名称：Array（String）名称&lt;/a&gt;，&lt;a href=&quot;../enum#values:Array(self)-class-method&quot;&gt;值：Array（self）值&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6bb3cc684a7979f49ce7b6cc6534a7e5cf079137" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enum#from_value(value:Int):self-class-method&quot;&gt; from_value(value : Int) : self from_value&lt;/a&gt;, &lt;a href=&quot;../enum#from_value?(value:Int):self?-class-method&quot;&gt; from_value?(value : Int) : self? from_value?&lt;/a&gt;, &lt;a href=&quot;../enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt; new(ctx : YAML::ParseContext, node : YAML::Nodes::Node)&lt;br/&gt;new(pull : JSON::PullParser) new&lt;/a&gt;, &lt;a href=&quot;../enum#parse(string:String):self-class-method&quot;&gt; parse(string : String) : self parse&lt;/a&gt;, &lt;a href=&quot;../enum#parse?(string:String):self?-class-method&quot;&gt; parse?(string : String) : self? parse?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../enum#from_value(value:Int):self-class-method&quot;&gt;from_value（value：Int）：自我from_value&lt;/a&gt;，&lt;a href=&quot;../enum#from_value?(value:Int):self?-class-method&quot;&gt;from_value？（value：Int）：自我吗？from_value？&lt;/a&gt;，&lt;a href=&quot;../enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;new（ctx：YAML :: ParseContext，node：YAML :: Nodes :: Node）&lt;br/&gt;new（pull：JSON :: PullParser）new&lt;/a&gt;，&lt;a href=&quot;../enum#parse(string:String):self-class-method&quot;&gt;parse（string：String）：self parse&lt;/a&gt;，&lt;a href=&quot;../enum#parse?(string:String):self?-class-method&quot;&gt;parse？（string：String）：self ？解析？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c0d6e2ea6fe8740c3d24a638c3c48c9c0522f5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enum#from_value(value:Int):self-class-method&quot;&gt; from_value(value : Int) : self from_value&lt;/a&gt;, &lt;a href=&quot;../enum#from_value?(value:Int):self?-class-method&quot;&gt; from_value?(value : Int) : self? from_value?&lt;/a&gt;, &lt;a href=&quot;../enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt; new(ctx : YAML::ParseContext, node : YAML::Nodes::Node)&lt;br/&gt;new(value : self)&lt;br/&gt;new(pull : JSON::PullParser) new&lt;/a&gt;, &lt;a href=&quot;../enum#parse(string:String):self-class-method&quot;&gt; parse(string : String) : self parse&lt;/a&gt;, &lt;a href=&quot;../enum#parse?(string:String):self?-class-method&quot;&gt; parse?(string : String) : self? parse?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../enum#from_value(value:Int):self-class-method&quot;&gt;from_value（value：Int）：自我from_value&lt;/a&gt;，&lt;a href=&quot;../enum#from_value?(value:Int):self?-class-method&quot;&gt;from_value？（value：Int）：自我？from_value？&lt;/a&gt;，&lt;a href=&quot;../enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;new（ctx：YAML :: ParseContext，node：YAML :: Nodes :: Node）&lt;br/&gt;new（value：self）&lt;br/&gt;new（pull：JSON :: PullParser）new&lt;/a&gt;，&lt;a href=&quot;../enum#parse(string:String):self-class-method&quot;&gt;parse（string：String）：self parse&lt;/a&gt;，&lt;a href=&quot;../enum#parse?(string:String):self?-class-method&quot;&gt;parse？（字符串：字符串）：自我？解析？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de3d263a1ababd4f7e8a6332571a5f569b105b91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;../char&quot;&gt;Char&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;../char&quot;&gt;Char&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="565aa47f9f439fe7616a1cbeffcb2a11dae9b81f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;basicblock&quot;&gt;LLVM::BasicBlock&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;basicblock&quot;&gt;LLVM::BasicBlock&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="332670442f6e7df710fcc64202ee45c5e012bca7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;cookie&quot;&gt;HTTP::Cookie&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;cookie&quot;&gt;HTTP::Cookie&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="6607369913de9155133fbff7f6475925ea8853d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;node&quot;&gt;XML::Node&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;node&quot;&gt;XML::Node&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="b2a973884debc5ef82a2fff3a2dea9ac0e20c1f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="723859ce83fbed78ba784efd85ecbfcde22d06d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;)})</source>
          <target state="translated">&lt;a href=&quot;../enumerable&quot;&gt;可枚举&lt;/a&gt;（{ &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;，&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;（&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt; }}）</target>
        </trans-unit>
        <trans-unit id="caadca61095ab77f24f07d6421ae3c87e97a3344" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;})</source>
          <target state="translated">&lt;a href=&quot;../enumerable&quot;&gt;可枚举&lt;/a&gt;（{ &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;，&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt; }）</target>
        </trans-unit>
        <trans-unit id="0f7a01d20ab8866f3d94c66413714ffc1bb4c447" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../symbol&quot;&gt;Symbol&lt;/a&gt;, &lt;a href=&quot;metadata/value&quot;&gt;Log::Metadata::Value&lt;/a&gt;})</source>
          <target state="translated">&lt;a href=&quot;../enumerable&quot;&gt;可枚举&lt;/a&gt;（{ &lt;a href=&quot;../symbol&quot;&gt;Symbol&lt;/a&gt;，&lt;a href=&quot;metadata/value&quot;&gt;Log :: Metadata :: Value&lt;/a&gt; }）</target>
        </trans-unit>
        <trans-unit id="75778e831e54a438689a56a670aab5383f924247" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable#all?(&amp;amp;)-instance-method&quot;&gt; all?(&amp;amp;)&lt;br/&gt;all?(pattern)&lt;br/&gt;all? all?&lt;/a&gt;, &lt;a href=&quot;../enumerable#any?(&amp;amp;)-instance-method&quot;&gt; any?(&amp;amp;)&lt;br/&gt;any?(pattern)&lt;br/&gt;any? any?&lt;/a&gt;, &lt;a href=&quot;../enumerable#chunks(&amp;amp;block:%7BString,Array(String)%7D-%3EU)forallU-instance-method&quot;&gt; chunks(&amp;amp;block : {String, Array(String)} -&amp;gt; U) forall U chunks&lt;/a&gt;, &lt;a href=&quot;../enumerable#compact_map(&amp;amp;)-instance-method&quot;&gt; compact_map(&amp;amp;) compact_map&lt;/a&gt;, &lt;a href=&quot;../enumerable#count(&amp;amp;)-instance-method&quot;&gt; count(&amp;amp;)&lt;br/&gt;count(item) count&lt;/a&gt;, &lt;a href=&quot;../enumerable#cycle(&amp;amp;)-instance-method&quot;&gt; cycle(&amp;amp;)&lt;br/&gt;cycle(n, &amp;amp;) cycle&lt;/a&gt;, &lt;a href=&quot;../enumerable#each(&amp;amp;block:%7BString,Array(String)%7D-%3E_)-instance-method&quot;&gt; each(&amp;amp;block : {String, Array(String)} -&amp;gt; _) each&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_cons(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt; each_cons(count : Int, reuse = false, &amp;amp;) each_cons&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_cons_pair(&amp;amp;:%7BString,Array(String)%7D,%7BString,Array(String)%7D-%3E_):Nil-instance-method&quot;&gt; each_cons_pair(&amp;amp; : {String, Array(String)}, {String, Array(String)} -&amp;gt; _) : Nil each_cons_pair&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_slice(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt; each_slice(count : Int, reuse = false, &amp;amp;) each_slice&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_with_index(offset=0,&amp;amp;)-instance-method&quot;&gt; each_with_index(offset = 0, &amp;amp;) each_with_index&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_with_object(obj,&amp;amp;)-instance-method&quot;&gt; each_with_object(obj, &amp;amp;) each_with_object&lt;/a&gt;, &lt;a href=&quot;../enumerable#empty?-instance-method&quot;&gt; empty? empty?&lt;/a&gt;, &lt;a href=&quot;../enumerable#find(if_none=nil,&amp;amp;)-instance-method&quot;&gt; find(if_none = nil, &amp;amp;) find&lt;/a&gt;, &lt;a href=&quot;../enumerable#first(&amp;amp;)-instance-method&quot;&gt; first(&amp;amp;)&lt;br/&gt;first(count : Int)&lt;br/&gt;first first&lt;/a&gt;, &lt;a href=&quot;../enumerable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;../enumerable#flat_map(&amp;amp;block:%7BString,Array(String)%7D-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt; flat_map(&amp;amp;block : {String, Array(String)} -&amp;gt; Array(U) | Iterator(U) | U) forall U flat_map&lt;/a&gt;, &lt;a href=&quot;../enumerable#grep(pattern)-instance-method&quot;&gt; grep(pattern) grep&lt;/a&gt;, &lt;a href=&quot;../enumerable#group_by(&amp;amp;block:%7BString,Array(String)%7D-%3EU)forallU-instance-method&quot;&gt; group_by(&amp;amp;block : {String, Array(String)} -&amp;gt; U) forall U group_by&lt;/a&gt;, &lt;a href=&quot;../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt; in_groups_of(size : Int, filled_up_with : U = nil) forall U&lt;br/&gt;in_groups_of(size : Int, filled_up_with : U = nil, reuse = false, &amp;amp;) forall U in_groups_of&lt;/a&gt;, &lt;a href=&quot;../enumerable#includes?(obj)-instance-method&quot;&gt; includes?(obj) includes?&lt;/a&gt;, &lt;a href=&quot;../enumerable#index(&amp;amp;)-instance-method&quot;&gt; index(&amp;amp;)&lt;br/&gt;index(obj) index&lt;/a&gt;, &lt;a href=&quot;../enumerable#index_by(&amp;amp;block:%7BString,Array(String)%7D-%3EU)forallU-instance-method&quot;&gt; index_by(&amp;amp;block : {String, Array(String)} -&amp;gt; U) forall U index_by&lt;/a&gt;,  join(separator = &quot;&quot;, &amp;amp; : {String, Array(String)} -&amp;gt; )</source>
          <target state="translated">&lt;a href=&quot;../enumerable#all?(&amp;amp;)-instance-method&quot;&gt;全部？（＆）&lt;br/&gt;全部？（模式）&lt;br/&gt;全部？所有？&lt;/a&gt;，&lt;a href=&quot;../enumerable#any?(&amp;amp;)-instance-method&quot;&gt;对吗？（＆）&lt;br/&gt;对吗？（模式）&lt;br/&gt;对吗？任何？&lt;/a&gt;，&lt;a href=&quot;../enumerable#chunks(&amp;amp;block:%7BString,Array(String)%7D-%3EU)forallU-instance-method&quot;&gt;chunks（＆block：{String，Array（String）}-&amp;gt; U）对于所有U个块&lt;/a&gt;，&lt;a href=&quot;../enumerable#compact_map(&amp;amp;)-instance-method&quot;&gt;compact_map（＆）compact_map&lt;/a&gt;，&lt;a href=&quot;../enumerable#count(&amp;amp;)-instance-method&quot;&gt;count（＆）&lt;br/&gt;count（item）count&lt;/a&gt;，&lt;a href=&quot;../enumerable#cycle(&amp;amp;)-instance-method&quot;&gt;cycle（＆）&lt;br/&gt;cycle（n，＆）cycle&lt;/a&gt;，&lt;a href=&quot;../enumerable#each(&amp;amp;block:%7BString,Array(String)%7D-%3E_)-instance-method&quot;&gt;每个（＆block：{String，Array（String）}-&amp;gt; _）每个&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_cons(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt;each_cons（count：Int，重用= false，＆）each_cons&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_cons_pair(&amp;amp;:%7BString,Array(String)%7D,%7BString,Array(String)%7D-%3E_):Nil-instance-method&quot;&gt;each_cons_pair（＆：{String，Array（String）}，{String，Array（String ）}-&amp;gt; _）：不含each_cons_pair&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_slice(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt;each_slice（count：Int，复用= false，＆）each_slice&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_with_index(offset=0,&amp;amp;)-instance-method&quot;&gt;each_with_index（offset = 0，＆）each_with_index&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_with_object(obj,&amp;amp;)-instance-method&quot;&gt;each_with_object（obj，＆）each_with_object&lt;/a&gt;，是否为&lt;a href=&quot;../enumerable#empty?-instance-method&quot;&gt;空？空吗&lt;/a&gt;，&lt;a href=&quot;../enumerable#find(if_none=nil,&amp;amp;)-instance-method&quot;&gt;find（if_none = nil，＆）find&lt;/a&gt;，&lt;a href=&quot;../enumerable#first(&amp;amp;)-instance-method&quot;&gt;first（＆）&lt;br/&gt;first（count：Int）&lt;br/&gt;首先&lt;/a&gt;，&lt;a href=&quot;../enumerable#first?-instance-method&quot;&gt;首先？第一？&lt;/a&gt;，&lt;a href=&quot;../enumerable#flat_map(&amp;amp;block:%7BString,Array(String)%7D-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt;flat_map（＆block：{String，Array（String）}-&amp;gt; Array（U）| Iterator（U）| U）全部U flat_map&lt;/a&gt;，&lt;a href=&quot;../enumerable#grep(pattern)-instance-method&quot;&gt;grep（pattern）grep&lt;/a&gt;，&lt;a href=&quot;../enumerable#group_by(&amp;amp;block:%7BString,Array(String)%7D-%3EU)forallU-instance-method&quot;&gt;group_by（＆block：{String，Array（String）}- &amp;gt; U）forall U group_by&lt;/a&gt;，&lt;a href=&quot;../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt;in_groups_of（size：Int，fill_up_with：U = nil）forall U &lt;br/&gt;in_groups_of（size：Int，filled_up_with：U = nil，复用= false，＆）for all U in_groups_of&lt;/a&gt;，&lt;a href=&quot;../enumerable#includes?(obj)-instance-method&quot;&gt;（obj）包含吗？&lt;/a&gt;，&lt;a href=&quot;../enumerable#index(&amp;amp;)-instance-method&quot;&gt;index（＆）&lt;br/&gt;index（obj）index&lt;/a&gt;，&lt;a href=&quot;../enumerable#index_by(&amp;amp;block:%7BString,Array(String)%7D-%3EU)forallU-instance-method&quot;&gt;index_by（＆block：{String，Array（String）}-&amp;gt; U）全部U index_by&lt;/a&gt;，join（separator =&amp;ldquo;&amp;rdquo;，＆：{String，Array（String）}-&amp;gt; ）</target>
        </trans-unit>
        <trans-unit id="cada1fadf16ba9d2ab517788cad2a2d06a979e04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable#all?(&amp;amp;)-instance-method&quot;&gt; all?(&amp;amp;)&lt;br/&gt;all?(pattern)&lt;br/&gt;all? all?&lt;/a&gt;, &lt;a href=&quot;../enumerable#any?(&amp;amp;)-instance-method&quot;&gt; any?(&amp;amp;)&lt;br/&gt;any?(pattern)&lt;br/&gt;any? any?&lt;/a&gt;, &lt;a href=&quot;../enumerable#chunks(&amp;amp;block:%7BString,String%7D-%3EU)forallU-instance-method&quot;&gt; chunks(&amp;amp;block : {String, String} -&amp;gt; U) forall U chunks&lt;/a&gt;, &lt;a href=&quot;../enumerable#compact_map(&amp;amp;)-instance-method&quot;&gt; compact_map(&amp;amp;) compact_map&lt;/a&gt;, &lt;a href=&quot;../enumerable#count(&amp;amp;)-instance-method&quot;&gt; count(&amp;amp;)&lt;br/&gt;count(item) count&lt;/a&gt;, &lt;a href=&quot;../enumerable#cycle(&amp;amp;)-instance-method&quot;&gt; cycle(&amp;amp;)&lt;br/&gt;cycle(n, &amp;amp;) cycle&lt;/a&gt;, &lt;a href=&quot;../enumerable#each(&amp;amp;block:%7BString,String%7D-%3E_)-instance-method&quot;&gt; each(&amp;amp;block : {String, String} -&amp;gt; _) each&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_cons(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt; each_cons(count : Int, reuse = false, &amp;amp;) each_cons&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_cons_pair(&amp;amp;:%7BString,String%7D,%7BString,String%7D-%3E_):Nil-instance-method&quot;&gt; each_cons_pair(&amp;amp; : {String, String}, {String, String} -&amp;gt; _) : Nil each_cons_pair&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_slice(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt; each_slice(count : Int, reuse = false, &amp;amp;) each_slice&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_with_index(offset=0,&amp;amp;)-instance-method&quot;&gt; each_with_index(offset = 0, &amp;amp;) each_with_index&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_with_object(obj,&amp;amp;)-instance-method&quot;&gt; each_with_object(obj, &amp;amp;) each_with_object&lt;/a&gt;, &lt;a href=&quot;../enumerable#empty?-instance-method&quot;&gt; empty? empty?&lt;/a&gt;, &lt;a href=&quot;../enumerable#find(if_none=nil,&amp;amp;)-instance-method&quot;&gt; find(if_none = nil, &amp;amp;) find&lt;/a&gt;, &lt;a href=&quot;../enumerable#first(&amp;amp;)-instance-method&quot;&gt; first(&amp;amp;)&lt;br/&gt;first(count : Int)&lt;br/&gt;first first&lt;/a&gt;, &lt;a href=&quot;../enumerable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;../enumerable#flat_map(&amp;amp;block:%7BString,String%7D-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt; flat_map(&amp;amp;block : {String, String} -&amp;gt; Array(U) | Iterator(U) | U) forall U flat_map&lt;/a&gt;, &lt;a href=&quot;../enumerable#grep(pattern)-instance-method&quot;&gt; grep(pattern) grep&lt;/a&gt;, &lt;a href=&quot;../enumerable#group_by(&amp;amp;block:%7BString,String%7D-%3EU)forallU-instance-method&quot;&gt; group_by(&amp;amp;block : {String, String} -&amp;gt; U) forall U group_by&lt;/a&gt;, &lt;a href=&quot;../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt; in_groups_of(size : Int, filled_up_with : U = nil) forall U&lt;br/&gt;in_groups_of(size : Int, filled_up_with : U = nil, reuse = false, &amp;amp;) forall U in_groups_of&lt;/a&gt;, &lt;a href=&quot;../enumerable#includes?(obj)-instance-method&quot;&gt; includes?(obj) includes?&lt;/a&gt;, &lt;a href=&quot;../enumerable#index(&amp;amp;)-instance-method&quot;&gt; index(&amp;amp;)&lt;br/&gt;index(obj) index&lt;/a&gt;, &lt;a href=&quot;../enumerable#index_by(&amp;amp;block:%7BString,String%7D-%3EU)forallU-instance-method&quot;&gt; index_by(&amp;amp;block : {String, String} -&amp;gt; U) forall U index_by&lt;/a&gt;,  join(separator = &quot;&quot;, &amp;amp; : {String, String} -&amp;gt; )</source>
          <target state="translated">&lt;a href=&quot;../enumerable#all?(&amp;amp;)-instance-method&quot;&gt;全部？（＆）&lt;br/&gt;全部？（模式）&lt;br/&gt;全部？所有？&lt;/a&gt;，&lt;a href=&quot;../enumerable#any?(&amp;amp;)-instance-method&quot;&gt;对吗？（＆）&lt;br/&gt;对吗？（模式）&lt;br/&gt;对吗？任何？&lt;/a&gt;，所有&lt;a href=&quot;../enumerable#chunks(&amp;amp;block:%7BString,String%7D-%3EU)forallU-instance-method&quot;&gt;U块的chunks（＆block：{String，String}-&amp;gt; U）&lt;/a&gt;，&lt;a href=&quot;../enumerable#compact_map(&amp;amp;)-instance-method&quot;&gt;compact_map（＆）compact_map&lt;/a&gt;，&lt;a href=&quot;../enumerable#count(&amp;amp;)-instance-method&quot;&gt;count（＆）&lt;br/&gt;count（item）count&lt;/a&gt;，&lt;a href=&quot;../enumerable#cycle(&amp;amp;)-instance-method&quot;&gt;cycle（＆）&lt;br/&gt;cycle（n，＆）cycle&lt;/a&gt;，&lt;a href=&quot;../enumerable#each(&amp;amp;block:%7BString,String%7D-%3E_)-instance-method&quot;&gt;each（＆block： {String，String}-&amp;gt; _）each&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_cons(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt;each_cons（count：Int，复用= false，＆）each_cons&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_cons_pair(&amp;amp;:%7BString,String%7D,%7BString,String%7D-%3E_):Nil-instance-method&quot;&gt;each_cons_pair（＆：{String，String}，{String，String}-&amp;gt; _）：Nil each_cons_pair&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_slice(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt;each_slice（ count：Int，重用= false，＆）each_slice&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_with_index(offset=0,&amp;amp;)-instance-method&quot;&gt;each_with_index（offset = 0，＆&lt;/a&gt;）each_with_index ，&lt;a href=&quot;../enumerable#each_with_object(obj,&amp;amp;)-instance-method&quot;&gt;each_with_object（obj，＆）each_with_object&lt;/a&gt;，是否为&lt;a href=&quot;../enumerable#empty?-instance-method&quot;&gt;空？空吗&lt;/a&gt;，&lt;a href=&quot;../enumerable#find(if_none=nil,&amp;amp;)-instance-method&quot;&gt;find（if_none = nil，＆）find&lt;/a&gt;，&lt;a href=&quot;../enumerable#first(&amp;amp;)-instance-method&quot;&gt;first（＆）&lt;br/&gt;first（count：Int）&lt;br/&gt;首先&lt;/a&gt;，&lt;a href=&quot;../enumerable#first?-instance-method&quot;&gt;首先？第一？&lt;/a&gt;，&lt;a href=&quot;../enumerable#flat_map(&amp;amp;block:%7BString,String%7D-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt;flat_map（＆block：{String，String}-&amp;gt; Array（U）| Iterator（U）| U）forall U flat_map&lt;/a&gt;，&lt;a href=&quot;../enumerable#grep(pattern)-instance-method&quot;&gt;grep（pattern）grep&lt;/a&gt;，&lt;a href=&quot;../enumerable#group_by(&amp;amp;block:%7BString,String%7D-%3EU)forallU-instance-method&quot;&gt;group_by（＆block：{String，String}-&amp;gt; U）forall U group_by&lt;/a&gt;，&lt;a href=&quot;../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt;in_groups_of（size：Int，filled_up_with：U = nil）&lt;br/&gt;for all U in_groups_of（size：Int，filled_up_with：U = nil，复用= false，＆for for all U in_groups_of&lt;/a&gt;，&lt;a href=&quot;../enumerable#includes?(obj)-instance-method&quot;&gt;include？（obj）includes？&lt;/a&gt;，&lt;a href=&quot;../enumerable#index(&amp;amp;)-instance-method&quot;&gt;index（＆）&lt;br/&gt;index（obj）索引&lt;/a&gt;，&lt;a href=&quot;../enumerable#index_by(&amp;amp;block:%7BString,String%7D-%3EU)forallU-instance-method&quot;&gt;index_by（＆block：{String，String}-&amp;gt; U）for all U index_by&lt;/a&gt;，join（separator =&amp;ldquo;&amp;rdquo;，＆：{String，String}-&amp;gt;）</target>
        </trans-unit>
        <trans-unit id="f925db761236f74e9db4ea16901b247ff0088e89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable#all?(&amp;amp;)-instance-method&quot;&gt; all?(&amp;amp;)&lt;br/&gt;all?(pattern)&lt;br/&gt;all? all?&lt;/a&gt;, &lt;a href=&quot;../enumerable#any?(&amp;amp;)-instance-method&quot;&gt; any?(&amp;amp;)&lt;br/&gt;any?(pattern)&lt;br/&gt;any? any?&lt;/a&gt;, &lt;a href=&quot;../enumerable#chunks(&amp;amp;block:%7BSymbol,Log::Metadata::Value%7D-%3EU)forallU-instance-method&quot;&gt; chunks(&amp;amp;block : {Symbol, Log::Metadata::Value} -&amp;gt; U) forall U chunks&lt;/a&gt;, &lt;a href=&quot;../enumerable#compact_map(&amp;amp;)-instance-method&quot;&gt; compact_map(&amp;amp;) compact_map&lt;/a&gt;, &lt;a href=&quot;../enumerable#count(&amp;amp;)-instance-method&quot;&gt; count(&amp;amp;)&lt;br/&gt;count(item) count&lt;/a&gt;, &lt;a href=&quot;../enumerable#cycle(&amp;amp;)-instance-method&quot;&gt; cycle(&amp;amp;)&lt;br/&gt;cycle(n, &amp;amp;) cycle&lt;/a&gt;, &lt;a href=&quot;../enumerable#each(&amp;amp;block:%7BSymbol,Log::Metadata::Value%7D-%3E_)-instance-method&quot;&gt; each(&amp;amp;block : {Symbol, Log::Metadata::Value} -&amp;gt; _) each&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_cons(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt; each_cons(count : Int, reuse = false, &amp;amp;) each_cons&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_cons_pair(&amp;amp;:%7BSymbol,Log::Metadata::Value%7D,%7BSymbol,Log::Metadata::Value%7D-%3E_):Nil-instance-method&quot;&gt; each_cons_pair(&amp;amp; : {Symbol, Log::Metadata::Value}, {Symbol, Log::Metadata::Value} -&amp;gt; _) : Nil each_cons_pair&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_slice(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt; each_slice(count : Int, reuse = false, &amp;amp;) each_slice&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_with_index(offset=0,&amp;amp;)-instance-method&quot;&gt; each_with_index(offset = 0, &amp;amp;) each_with_index&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_with_object(obj,&amp;amp;)-instance-method&quot;&gt; each_with_object(obj, &amp;amp;) each_with_object&lt;/a&gt;, &lt;a href=&quot;../enumerable#empty?-instance-method&quot;&gt; empty? empty?&lt;/a&gt;, &lt;a href=&quot;../enumerable#find(if_none=nil,&amp;amp;)-instance-method&quot;&gt; find(if_none = nil, &amp;amp;) find&lt;/a&gt;, &lt;a href=&quot;../enumerable#first(&amp;amp;)-instance-method&quot;&gt; first(&amp;amp;)&lt;br/&gt;first(count : Int)&lt;br/&gt;first first&lt;/a&gt;, &lt;a href=&quot;../enumerable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;../enumerable#flat_map(&amp;amp;block:%7BSymbol,Log::Metadata::Value%7D-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt; flat_map(&amp;amp;block : {Symbol, Log::Metadata::Value} -&amp;gt; Array(U) | Iterator(U) | U) forall U flat_map&lt;/a&gt;, &lt;a href=&quot;../enumerable#grep(pattern)-instance-method&quot;&gt; grep(pattern) grep&lt;/a&gt;, &lt;a href=&quot;../enumerable#group_by(&amp;amp;block:%7BSymbol,Log::Metadata::Value%7D-%3EU)forallU-instance-method&quot;&gt; group_by(&amp;amp;block : {Symbol, Log::Metadata::Value} -&amp;gt; U) forall U group_by&lt;/a&gt;, &lt;a href=&quot;../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt; in_groups_of(size : Int, filled_up_with : U = nil) forall U&lt;br/&gt;in_groups_of(size : Int, filled_up_with : U = nil, reuse = false, &amp;amp;) forall U in_groups_of&lt;/a&gt;, &lt;a href=&quot;../enumerable#includes?(obj)-instance-method&quot;&gt; includes?(obj) includes?&lt;/a&gt;, &lt;a href=&quot;../enumerable#index(&amp;amp;)-instance-method&quot;&gt; index(&amp;amp;)&lt;br/&gt;index(obj) index&lt;/a&gt;, &lt;a href=&quot;../enumerable#index_by(&amp;amp;block:%7BSymbol,Log::Metadata::Value%7D-%3EU)forallU-instance-method&quot;&gt; index_by(&amp;amp;block : {Symbol, Log::Metadata::Value} -&amp;gt; U) forall U index_by&lt;/a&gt;,  join(separator = &quot;&quot;, &amp;amp; : {Symbol, Log::Metadata::Value} -&amp;gt; )</source>
          <target state="translated">&lt;a href=&quot;../enumerable#all?(&amp;amp;)-instance-method&quot;&gt;全部？（＆）&lt;br/&gt;全部？（模式）&lt;br/&gt;全部？所有？&lt;/a&gt;，&lt;a href=&quot;../enumerable#any?(&amp;amp;)-instance-method&quot;&gt;对吗？（＆）&lt;br/&gt;对吗？（模式）&lt;br/&gt;对吗？任何？&lt;/a&gt;，&lt;a href=&quot;../enumerable#chunks(&amp;amp;block:%7BSymbol,Log::Metadata::Value%7D-%3EU)forallU-instance-method&quot;&gt;chunks（＆block：{Symbol，Log :: Metadata :: Value}-&amp;gt; U）对于所有U个块&lt;/a&gt;，&lt;a href=&quot;../enumerable#compact_map(&amp;amp;)-instance-method&quot;&gt;compact_map（＆）compact_map&lt;/a&gt;，&lt;a href=&quot;../enumerable#count(&amp;amp;)-instance-method&quot;&gt;count（＆）&lt;br/&gt;count（item）count&lt;/a&gt;，&lt;a href=&quot;../enumerable#cycle(&amp;amp;)-instance-method&quot;&gt;cycle（＆）&lt;br/&gt;cycle（n，＆） cycle&lt;/a&gt;，&lt;a href=&quot;../enumerable#each(&amp;amp;block:%7BSymbol,Log::Metadata::Value%7D-%3E_)-instance-method&quot;&gt;each（＆block：{Symbol，Log :: Metadata :: Value}-&amp;gt; _）each&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_cons(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt;each_cons（count：Int，复用= false，＆）each_cons&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_cons_pair(&amp;amp;:%7BSymbol,Log::Metadata::Value%7D,%7BSymbol,Log::Metadata::Value%7D-%3E_):Nil-instance-method&quot;&gt;each_cons_pair（＆：{Symbol，Log :: Metadata :: Value}，{Symbol，Log :: Metadata :: Value}-&amp;gt; _）：无each_cons_pair&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_slice(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt;each_slice（count：Int，复用= false，＆）each_slice&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_with_index(offset=0,&amp;amp;)-instance-method&quot;&gt;each_with_index（offset = 0，＆）each_with_index&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_with_object(obj,&amp;amp;)-instance-method&quot;&gt;each_with_object（obj，＆）each_with_object&lt;/a&gt;，是否为&lt;a href=&quot;../enumerable#empty?-instance-method&quot;&gt;空？空吗&lt;/a&gt;，&lt;a href=&quot;../enumerable#find(if_none=nil,&amp;amp;)-instance-method&quot;&gt;find（if_none = nil，＆）find&lt;/a&gt;，&lt;a href=&quot;../enumerable#first(&amp;amp;)-instance-method&quot;&gt;first（＆）&lt;br/&gt;first（count：Int）&lt;br/&gt;首先&lt;/a&gt;，&lt;a href=&quot;../enumerable#first?-instance-method&quot;&gt;首先？第一？&lt;/a&gt;，&lt;a href=&quot;../enumerable#flat_map(&amp;amp;block:%7BSymbol,Log::Metadata::Value%7D-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt;flat_map（＆block：{Symbol，Log :: Metadata :: Value}-&amp;gt; Array（U）| Iterator（U）| U）对于所有U flat_map&lt;/a&gt;，&lt;a href=&quot;../enumerable#grep(pattern)-instance-method&quot;&gt;grep（pattern）grep&lt;/a&gt;，&lt;a href=&quot;../enumerable#group_by(&amp;amp;block:%7BSymbol,Log::Metadata::Value%7D-%3EU)forallU-instance-method&quot;&gt;group_by（＆block：{Symbol，Log :: Metadata :: Value}-&amp;gt; U）&lt;/a&gt;&lt;a href=&quot;../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt;for all &lt;br/&gt;&lt;/a&gt;U group_by，in_groups_of（size：Int，filled_up_with：U = nil）forall U in_groups_of（size：Int，fill_up_with：U = nil，重用= false，）for all U in_groups_of，&lt;a href=&quot;../enumerable#includes?(obj)-instance-method&quot;&gt;（obj）包含吗？&lt;/a&gt;，&lt;a href=&quot;../enumerable#index(&amp;amp;)-instance-method&quot;&gt;index（＆）&lt;br/&gt;index（obj）index&lt;/a&gt;，&lt;a href=&quot;../enumerable#index_by(&amp;amp;block:%7BSymbol,Log::Metadata::Value%7D-%3EU)forallU-instance-method&quot;&gt;index_by（＆block：{Symbol，Log :: Metadata :: Value}-&amp;gt; U）对于所有U index_by&lt;/a&gt;，join（separator =&amp;ldquo;&amp;rdquo;，＆：{Symbol，Log :: Metadata :: Value}-&amp;gt;）</target>
        </trans-unit>
        <trans-unit id="e459ef2d5092dfa52999c55448fd37d3619a9341" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable#all?(&amp;amp;)-instance-method&quot;&gt; all?(&amp;amp;)&lt;br/&gt;all?(pattern)&lt;br/&gt;all? all?&lt;/a&gt;, &lt;a href=&quot;../enumerable#any?(&amp;amp;)-instance-method&quot;&gt; any?(&amp;amp;)&lt;br/&gt;any?(pattern)&lt;br/&gt;any? any?&lt;/a&gt;, &lt;a href=&quot;../enumerable#chunks(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; chunks(&amp;amp;block : T -&amp;gt; U) forall U chunks&lt;/a&gt;, &lt;a href=&quot;../enumerable#compact_map(&amp;amp;)-instance-method&quot;&gt; compact_map(&amp;amp;) compact_map&lt;/a&gt;, &lt;a href=&quot;../enumerable#count(&amp;amp;)-instance-method&quot;&gt; count(&amp;amp;)&lt;br/&gt;count(item) count&lt;/a&gt;, &lt;a href=&quot;../enumerable#cycle(&amp;amp;)-instance-method&quot;&gt; cycle(&amp;amp;)&lt;br/&gt;cycle(n, &amp;amp;) cycle&lt;/a&gt;, &lt;a href=&quot;../enumerable#each(&amp;amp;block:T-%3E_)-instance-method&quot;&gt; each(&amp;amp;block : T -&amp;gt; _) each&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_cons(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt; each_cons(count : Int, reuse = false, &amp;amp;) each_cons&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_cons_pair(&amp;amp;:T,T-%3E_):Nil-instance-method&quot;&gt; each_cons_pair(&amp;amp; : T, T -&amp;gt; _) : Nil each_cons_pair&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_slice(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt; each_slice(count : Int, reuse = false, &amp;amp;) each_slice&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_with_index(offset=0,&amp;amp;)-instance-method&quot;&gt; each_with_index(offset = 0, &amp;amp;) each_with_index&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_with_object(obj,&amp;amp;)-instance-method&quot;&gt; each_with_object(obj, &amp;amp;) each_with_object&lt;/a&gt;, &lt;a href=&quot;../enumerable#empty?-instance-method&quot;&gt; empty? empty?&lt;/a&gt;, &lt;a href=&quot;../enumerable#find(if_none=nil,&amp;amp;)-instance-method&quot;&gt; find(if_none = nil, &amp;amp;) find&lt;/a&gt;, &lt;a href=&quot;../enumerable#first(&amp;amp;)-instance-method&quot;&gt; first(&amp;amp;)&lt;br/&gt;first(count : Int)&lt;br/&gt;first first&lt;/a&gt;, &lt;a href=&quot;../enumerable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;../enumerable#flat_map(&amp;amp;block:T-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt; flat_map(&amp;amp;block : T -&amp;gt; Array(U) | Iterator(U) | U) forall U flat_map&lt;/a&gt;, &lt;a href=&quot;../enumerable#grep(pattern)-instance-method&quot;&gt; grep(pattern) grep&lt;/a&gt;, &lt;a href=&quot;../enumerable#group_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; group_by(&amp;amp;block : T -&amp;gt; U) forall U group_by&lt;/a&gt;, &lt;a href=&quot;../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt; in_groups_of(size : Int, filled_up_with : U = nil) forall U&lt;br/&gt;in_groups_of(size : Int, filled_up_with : U = nil, reuse = false, &amp;amp;) forall U in_groups_of&lt;/a&gt;, &lt;a href=&quot;../enumerable#includes?(obj)-instance-method&quot;&gt; includes?(obj) includes?&lt;/a&gt;, &lt;a href=&quot;../enumerable#index(&amp;amp;)-instance-method&quot;&gt; index(&amp;amp;)&lt;br/&gt;index(obj) index&lt;/a&gt;, &lt;a href=&quot;../enumerable#index_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; index_by(&amp;amp;block : T -&amp;gt; U) forall U index_by&lt;/a&gt;,  join(separator = &quot;&quot;, &amp;amp; : T -&amp;gt; )</source>
          <target state="translated">&lt;a href=&quot;../enumerable#all?(&amp;amp;)-instance-method&quot;&gt;全部？（＆）&lt;br/&gt;全部？（模式）&lt;br/&gt;全部？所有？&lt;/a&gt;，&lt;a href=&quot;../enumerable#any?(&amp;amp;)-instance-method&quot;&gt;对吗？（＆）&lt;br/&gt;对吗？（模式）&lt;br/&gt;对吗？任何？&lt;/a&gt;，&lt;a href=&quot;../enumerable#compact_map(&amp;amp;)-instance-method&quot;&gt;针对所有&lt;/a&gt;&lt;a href=&quot;../enumerable#chunks(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;U个块的chunks（＆block：T-&amp;gt; U）&lt;/a&gt;，compact_map（＆）compact_map，&lt;a href=&quot;../enumerable#count(&amp;amp;)-instance-method&quot;&gt;count（＆）&lt;br/&gt;count（item）count&lt;/a&gt;，&lt;a href=&quot;../enumerable#cycle(&amp;amp;)-instance-method&quot;&gt;cycle（＆）&lt;br/&gt;cycle（n，＆）cycle&lt;/a&gt;，&lt;a href=&quot;../enumerable#each(&amp;amp;block:T-%3E_)-instance-method&quot;&gt;每个（＆block：T-&amp;gt; _ ）each&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_cons(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt;each_cons（count：Int，reuse = false，＆）each_cons&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_cons_pair(&amp;amp;:T,T-%3E_):Nil-instance-method&quot;&gt;each_cons_pair（＆：T，T-&amp;gt; _）：Nil each_cons_pair&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_slice(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt;each_slice（count：Int，复用= false，＆）each_slice&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_with_index(offset=0,&amp;amp;)-instance-method&quot;&gt;each_with_index（offset = 0，＆）each_with_index&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_with_object(obj,&amp;amp;)-instance-method&quot;&gt;each_with_object（obj，＆）each_with_object&lt;/a&gt;，&lt;a href=&quot;../enumerable#empty?-instance-method&quot;&gt;空吗？空吗&lt;/a&gt;，&lt;a href=&quot;../enumerable#find(if_none=nil,&amp;amp;)-instance-method&quot;&gt;find（if_none = nil，＆）find&lt;/a&gt;，&lt;a href=&quot;../enumerable#first(&amp;amp;)-instance-method&quot;&gt;first（＆）&lt;br/&gt;first（count：Int）&lt;br/&gt;首先&lt;/a&gt;，&lt;a href=&quot;../enumerable#first?-instance-method&quot;&gt;首先？第一？&lt;/a&gt;，&lt;a href=&quot;../enumerable#flat_map(&amp;amp;block:T-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt;flat_map（＆block：T-&amp;gt; Array（U）| Iterator（U）| U）适用于所有U flat_map&lt;/a&gt;，&lt;a href=&quot;../enumerable#grep(pattern)-instance-method&quot;&gt;grep（pattern）grep&lt;/a&gt;，&lt;a href=&quot;../enumerable#group_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;group_by（＆block：T-&amp;gt; U）适用于所有U group_by&lt;/a&gt;，&lt;a href=&quot;../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt;in_groups_of（size：Int， ：U = nil）forall U &lt;br/&gt;in_groups_of（size：Int，fill_up_with：U = nil，复用= false，＆）forall U in_groups_of&lt;/a&gt;，&lt;a href=&quot;../enumerable#includes?(obj)-instance-method&quot;&gt;include？（obj）includes？&lt;/a&gt;，&lt;a href=&quot;../enumerable#index(&amp;amp;)-instance-method&quot;&gt;index（＆）&lt;br/&gt;index（obj）index&lt;/a&gt;，&lt;a href=&quot;../enumerable#index_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;index_by（＆block：T-&amp;gt; U）对于所有U index_by&lt;/a&gt;，join（separator =&amp;ldquo;&amp;rdquo;，＆：T-&amp;gt;）</target>
        </trans-unit>
        <trans-unit id="dad89a25fb8d957f3f07184ded9c454d037a0002" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable#all?(&amp;amp;block)-instance-method&quot;&gt; all?(&amp;amp;block)&lt;br/&gt;all?(pattern)&lt;br/&gt;all? all?&lt;/a&gt;, &lt;a href=&quot;../enumerable#any?(&amp;amp;block)-instance-method&quot;&gt; any?(&amp;amp;block)&lt;br/&gt;any?(pattern)&lt;br/&gt;any? any?&lt;/a&gt;, &lt;a href=&quot;../enumerable#chunks(&amp;amp;block:%7BString,Array(String)%7D-%3EU)forallU-instance-method&quot;&gt; chunks(&amp;amp;block : {String, Array(String)} -&amp;gt; U) forall U chunks&lt;/a&gt;, &lt;a href=&quot;../enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt; compact_map(&amp;amp;block) compact_map&lt;/a&gt;, &lt;a href=&quot;../enumerable#count(item)-instance-method&quot;&gt; count(item)&lt;br/&gt;count(&amp;amp;block) count&lt;/a&gt;, &lt;a href=&quot;../enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt; cycle(&amp;amp;block)&lt;br/&gt;cycle(n, &amp;amp;block) cycle&lt;/a&gt;, &lt;a href=&quot;../enumerable#each(&amp;amp;block:%7BString,Array(String)%7D-%3EUNDERSCORE)-instance-method&quot;&gt; each(&amp;amp;block : {String, Array(String)} -&amp;gt; UNDERSCORE) each&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_cons(count : Int, reuse = false, &amp;amp;block) each_cons&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_slice(count : Int, reuse = false, &amp;amp;block) each_slice&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt; each_with_index(offset = 0, &amp;amp;block) each_with_index&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt; each_with_object(obj, &amp;amp;block) each_with_object&lt;/a&gt;, &lt;a href=&quot;../enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt; find(if_none = nil, &amp;amp;block) find&lt;/a&gt;, &lt;a href=&quot;../enumerable#first(count:Int)-instance-method&quot;&gt; first(count : Int)&lt;br/&gt;first first&lt;/a&gt;, &lt;a href=&quot;../enumerable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;../enumerable#flat_map(&amp;amp;block:%7BString,Array(String)%7D-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt; flat_map(&amp;amp;block : {String, Array(String)} -&amp;gt; Array(U) | Iterator(U) | U) forall U flat_map&lt;/a&gt;, &lt;a href=&quot;../enumerable#grep(pattern)-instance-method&quot;&gt; grep(pattern) grep&lt;/a&gt;, &lt;a href=&quot;../enumerable#group_by(&amp;amp;block:%7BString,Array(String)%7D-%3EU)forallU-instance-method&quot;&gt; group_by(&amp;amp;block : {String, Array(String)} -&amp;gt; U) forall U group_by&lt;/a&gt;, &lt;a href=&quot;../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt; in_groups_of(size : Int, filled_up_with : U = nil) forall U&lt;br/&gt;in_groups_of(size : Int, filled_up_with : U = nil, reuse = false, &amp;amp;block) forall U in_groups_of&lt;/a&gt;, &lt;a href=&quot;../enumerable#includes?(obj)-instance-method&quot;&gt; includes?(obj) includes?&lt;/a&gt;, &lt;a href=&quot;../enumerable#index(&amp;amp;block)-instance-method&quot;&gt; index(&amp;amp;block)&lt;br/&gt;index(obj) index&lt;/a&gt;, &lt;a href=&quot;../enumerable#index_by(&amp;amp;block:%7BString,Array(String)%7D-%3EU)forallU-instance-method&quot;&gt; index_by(&amp;amp;block : {String, Array(String)} -&amp;gt; U) forall U index_by&lt;/a&gt;,  join(separator = &quot;&quot;, &amp;amp;block)</source>
          <target state="translated">&lt;a href=&quot;../enumerable#all?(&amp;amp;block)-instance-method&quot;&gt;全部？（＆block）&lt;br/&gt;全部？（模式）&lt;br/&gt;全部？所有？&lt;/a&gt;，&lt;a href=&quot;../enumerable#any?(&amp;amp;block)-instance-method&quot;&gt;对吗？（＆block）&lt;br/&gt;对吗？（pattern）&lt;br/&gt;对吗？任何？&lt;/a&gt;，&lt;a href=&quot;../enumerable#chunks(&amp;amp;block:%7BString,Array(String)%7D-%3EU)forallU-instance-method&quot;&gt;chunks（＆block：{String，Array（String）}-&amp;gt; U）对于所有U块&lt;/a&gt;，&lt;a href=&quot;../enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt;compact_map（＆block）compact_map&lt;/a&gt;，&lt;a href=&quot;../enumerable#count(item)-instance-method&quot;&gt;count（item）&lt;br/&gt;count（＆block）count&lt;/a&gt;，&lt;a href=&quot;../enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt;cycle（＆block）&lt;br/&gt;cycle（n，＆block）cycle&lt;/a&gt;，&lt;a href=&quot;../enumerable#each(&amp;amp;block:%7BString,Array(String)%7D-%3EUNDERSCORE)-instance-method&quot;&gt;每个（＆block：{String，Array（String）}-&amp;gt; UNDERSCORE）每个&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_cons（count：Int，重用= false，＆block）each_cons&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_slice（count：Int，重用= false，＆block）each_slice&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt;each_with_index（offset = 0 ，＆block）each_with_index&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt;each_with_object（obj，＆block）each_with_object&lt;/a&gt;，&lt;a href=&quot;../enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt;find（if_none = nil，＆block）find&lt;/a&gt;，&lt;a href=&quot;../enumerable#first(count:Int)-instance-method&quot;&gt;first（count：Int）&lt;br/&gt;首先&lt;/a&gt;，&lt;a href=&quot;../enumerable#first?-instance-method&quot;&gt;首先？第一？&lt;/a&gt;，&lt;a href=&quot;../enumerable#flat_map(&amp;amp;block:%7BString,Array(String)%7D-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt;flat_map（＆block：{String，Array（String）}-&amp;gt; Array（U）| Iterator（U）| U）对于所有U flat_map&lt;/a&gt;，&lt;a href=&quot;../enumerable#grep(pattern)-instance-method&quot;&gt;grep（pattern）grep&lt;/a&gt;，&lt;a href=&quot;../enumerable#group_by(&amp;amp;block:%7BString,Array(String)%7D-%3EU)forallU-instance-method&quot;&gt;group_by（＆block：{String，Array（String）}- &amp;gt; U）forall U group_by&lt;/a&gt;，&lt;a href=&quot;../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt;in_groups_of（size：Int，fill_up_with：U = nil）forall U &lt;br/&gt;in_groups_of（size：Int，filled_up_with：U = nil，复用= false，＆block）for all U in_groups_of&lt;/a&gt;，&lt;a href=&quot;../enumerable#includes?(obj)-instance-method&quot;&gt;包括吗？（obj）是否包括？&lt;/a&gt;，&lt;a href=&quot;../enumerable#index(&amp;amp;block)-instance-method&quot;&gt;index（＆block）&lt;br/&gt;index（obj）index&lt;/a&gt;，&lt;a href=&quot;../enumerable#index_by(&amp;amp;block:%7BString,Array(String)%7D-%3EU)forallU-instance-method&quot;&gt;index_by（＆block：{String，Array（String）}-&amp;gt; U）对于所有U index_by&lt;/a&gt;，join（separator =&amp;ldquo;&amp;rdquo;，＆block）</target>
        </trans-unit>
        <trans-unit id="82aa206c2b00960f37afbc872d42439c825f09dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable#all?(&amp;amp;block)-instance-method&quot;&gt; all?(&amp;amp;block)&lt;br/&gt;all?(pattern)&lt;br/&gt;all? all?&lt;/a&gt;, &lt;a href=&quot;../enumerable#any?(&amp;amp;block)-instance-method&quot;&gt; any?(&amp;amp;block)&lt;br/&gt;any?(pattern)&lt;br/&gt;any? any?&lt;/a&gt;, &lt;a href=&quot;../enumerable#chunks(&amp;amp;block:%7BString,String%7D-%3EU)forallU-instance-method&quot;&gt; chunks(&amp;amp;block : {String, String} -&amp;gt; U) forall U chunks&lt;/a&gt;, &lt;a href=&quot;../enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt; compact_map(&amp;amp;block) compact_map&lt;/a&gt;, &lt;a href=&quot;../enumerable#count(item)-instance-method&quot;&gt; count(item)&lt;br/&gt;count(&amp;amp;block) count&lt;/a&gt;, &lt;a href=&quot;../enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt; cycle(&amp;amp;block)&lt;br/&gt;cycle(n, &amp;amp;block) cycle&lt;/a&gt;, &lt;a href=&quot;../enumerable#each(&amp;amp;block:%7BString,String%7D-%3EUNDERSCORE)-instance-method&quot;&gt; each(&amp;amp;block : {String, String} -&amp;gt; UNDERSCORE) each&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_cons(count : Int, reuse = false, &amp;amp;block) each_cons&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_slice(count : Int, reuse = false, &amp;amp;block) each_slice&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt; each_with_index(offset = 0, &amp;amp;block) each_with_index&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt; each_with_object(obj, &amp;amp;block) each_with_object&lt;/a&gt;, &lt;a href=&quot;../enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt; find(if_none = nil, &amp;amp;block) find&lt;/a&gt;, &lt;a href=&quot;../enumerable#first(count:Int)-instance-method&quot;&gt; first(count : Int)&lt;br/&gt;first first&lt;/a&gt;, &lt;a href=&quot;../enumerable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;../enumerable#flat_map(&amp;amp;block:%7BString,String%7D-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt; flat_map(&amp;amp;block : {String, String} -&amp;gt; Array(U) | Iterator(U) | U) forall U flat_map&lt;/a&gt;, &lt;a href=&quot;../enumerable#grep(pattern)-instance-method&quot;&gt; grep(pattern) grep&lt;/a&gt;, &lt;a href=&quot;../enumerable#group_by(&amp;amp;block:%7BString,String%7D-%3EU)forallU-instance-method&quot;&gt; group_by(&amp;amp;block : {String, String} -&amp;gt; U) forall U group_by&lt;/a&gt;, &lt;a href=&quot;../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt; in_groups_of(size : Int, filled_up_with : U = nil) forall U&lt;br/&gt;in_groups_of(size : Int, filled_up_with : U = nil, reuse = false, &amp;amp;block) forall U in_groups_of&lt;/a&gt;, &lt;a href=&quot;../enumerable#includes?(obj)-instance-method&quot;&gt; includes?(obj) includes?&lt;/a&gt;, &lt;a href=&quot;../enumerable#index(&amp;amp;block)-instance-method&quot;&gt; index(&amp;amp;block)&lt;br/&gt;index(obj) index&lt;/a&gt;, &lt;a href=&quot;../enumerable#index_by(&amp;amp;block:%7BString,String%7D-%3EU)forallU-instance-method&quot;&gt; index_by(&amp;amp;block : {String, String} -&amp;gt; U) forall U index_by&lt;/a&gt;,  join(separator = &quot;&quot;, &amp;amp;block)</source>
          <target state="translated">&lt;a href=&quot;../enumerable#all?(&amp;amp;block)-instance-method&quot;&gt;全部？（＆block）&lt;br/&gt;全部？（模式）&lt;br/&gt;全部？所有？&lt;/a&gt;，&lt;a href=&quot;../enumerable#any?(&amp;amp;block)-instance-method&quot;&gt;对吗？（＆block）&lt;br/&gt;对吗？（pattern）&lt;br/&gt;对吗？任何？&lt;/a&gt;，所有&lt;a href=&quot;../enumerable#chunks(&amp;amp;block:%7BString,String%7D-%3EU)forallU-instance-method&quot;&gt;U块的chunks（＆block：{String，String}-&amp;gt; U）&lt;/a&gt;，&lt;a href=&quot;../enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt;compact_map（＆block）compact_map&lt;/a&gt;，&lt;a href=&quot;../enumerable#count(item)-instance-method&quot;&gt;count（item）&lt;br/&gt;count（＆block）count&lt;/a&gt;，&lt;a href=&quot;../enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt;cycle（＆block）&lt;br/&gt;cycle（n，＆block）cycle&lt;/a&gt;，&lt;a href=&quot;../enumerable#each(&amp;amp;block:%7BString,String%7D-%3EUNDERSCORE)-instance-method&quot;&gt;each（＆block： {String，String}-&amp;gt; UNDERSCORE）each&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_cons（count：Int，重用= false，＆block）each_cons&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_slice（count：Int，复用= false，＆block）each_slice&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt;each_with_index（offset = 0，＆block）each_with_index&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt;each_with_object （obj，＆块）each_with_object&lt;/a&gt;，&lt;a href=&quot;../enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt;find（if_none = nil，＆block）find&lt;/a&gt;，&lt;a href=&quot;../enumerable#first(count:Int)-instance-method&quot;&gt;first（count：Int）&lt;br/&gt;首先&lt;/a&gt;，&lt;a href=&quot;../enumerable#first?-instance-method&quot;&gt;首先吗？第一？&lt;/a&gt;，&lt;a href=&quot;../enumerable#flat_map(&amp;amp;block:%7BString,String%7D-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt;flat_map（＆block：{String，String}-&amp;gt; Array（U）| Iterator（U）| U）for all U flat_map&lt;/a&gt;，&lt;a href=&quot;../enumerable#grep(pattern)-instance-method&quot;&gt;grep（pattern）grep&lt;/a&gt;，&lt;a href=&quot;../enumerable#group_by(&amp;amp;block:%7BString,String%7D-%3EU)forallU-instance-method&quot;&gt;group_by（＆block：{String，String}-&amp;gt; U）forall U group_by&lt;/a&gt;，&lt;a href=&quot;../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt;in_groups_of（size：Int，filled_up_with：U = nil）&lt;br/&gt;for all U in_groups_of（size：Int，fill_up_with：U = nil，复用= false，＆block）for all U in_groups_of&lt;/a&gt;，&lt;a href=&quot;../enumerable#includes?(obj)-instance-method&quot;&gt;include？（obj）includes？&lt;/a&gt;，&lt;a href=&quot;../enumerable#index(&amp;amp;block)-instance-method&quot;&gt;index（＆block）&lt;br/&gt;index（obj）index&lt;/a&gt;，&lt;a href=&quot;../enumerable#index_by(&amp;amp;block:%7BString,String%7D-%3EU)forallU-instance-method&quot;&gt;index_by（＆block：{String，String}-&amp;gt; U）对于所有U index_by&lt;/a&gt;，join（separator =&amp;ldquo;&amp;rdquo;，＆block）</target>
        </trans-unit>
        <trans-unit id="23fffe6a4d6856bb8dc89483e90285ff636a4119" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable#all?(&amp;amp;block)-instance-method&quot;&gt; all?(&amp;amp;block)&lt;br/&gt;all?(pattern)&lt;br/&gt;all? all?&lt;/a&gt;, &lt;a href=&quot;../enumerable#any?(&amp;amp;block)-instance-method&quot;&gt; any?(&amp;amp;block)&lt;br/&gt;any?(pattern)&lt;br/&gt;any? any?&lt;/a&gt;, &lt;a href=&quot;../enumerable#chunks(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; chunks(&amp;amp;block : T -&amp;gt; U) forall U chunks&lt;/a&gt;, &lt;a href=&quot;../enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt; compact_map(&amp;amp;block) compact_map&lt;/a&gt;, &lt;a href=&quot;../enumerable#count(item)-instance-method&quot;&gt; count(item)&lt;br/&gt;count(&amp;amp;block) count&lt;/a&gt;, &lt;a href=&quot;../enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt; cycle(&amp;amp;block)&lt;br/&gt;cycle(n, &amp;amp;block) cycle&lt;/a&gt;, &lt;a href=&quot;../enumerable#each(&amp;amp;block:T-%3EUNDERSCORE)-instance-method&quot;&gt; each(&amp;amp;block : T -&amp;gt; UNDERSCORE) each&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_cons(count : Int, reuse = false, &amp;amp;block) each_cons&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_slice(count : Int, reuse = false, &amp;amp;block) each_slice&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt; each_with_index(offset = 0, &amp;amp;block) each_with_index&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt; each_with_object(obj, &amp;amp;block) each_with_object&lt;/a&gt;, &lt;a href=&quot;../enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt; find(if_none = nil, &amp;amp;block) find&lt;/a&gt;, &lt;a href=&quot;../enumerable#first(count:Int)-instance-method&quot;&gt; first(count : Int)&lt;br/&gt;first first&lt;/a&gt;, &lt;a href=&quot;../enumerable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;../enumerable#flat_map(&amp;amp;block:T-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt; flat_map(&amp;amp;block : T -&amp;gt; Array(U) | Iterator(U) | U) forall U flat_map&lt;/a&gt;, &lt;a href=&quot;../enumerable#grep(pattern)-instance-method&quot;&gt; grep(pattern) grep&lt;/a&gt;, &lt;a href=&quot;../enumerable#group_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; group_by(&amp;amp;block : T -&amp;gt; U) forall U group_by&lt;/a&gt;, &lt;a href=&quot;../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt; in_groups_of(size : Int, filled_up_with : U = nil) forall U&lt;br/&gt;in_groups_of(size : Int, filled_up_with : U = nil, reuse = false, &amp;amp;block) forall U in_groups_of&lt;/a&gt;, &lt;a href=&quot;../enumerable#includes?(obj)-instance-method&quot;&gt; includes?(obj) includes?&lt;/a&gt;, &lt;a href=&quot;../enumerable#index(&amp;amp;block)-instance-method&quot;&gt; index(&amp;amp;block)&lt;br/&gt;index(obj) index&lt;/a&gt;, &lt;a href=&quot;../enumerable#index_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; index_by(&amp;amp;block : T -&amp;gt; U) forall U index_by&lt;/a&gt;,  join(separator = &quot;&quot;, &amp;amp;block)</source>
          <target state="translated">&lt;a href=&quot;../enumerable#all?(&amp;amp;block)-instance-method&quot;&gt;全部？（＆block）&lt;br/&gt;全部？（模式）&lt;br/&gt;全部？所有？&lt;/a&gt;，&lt;a href=&quot;../enumerable#any?(&amp;amp;block)-instance-method&quot;&gt;对吗？（＆block）&lt;br/&gt;对吗？（pattern）&lt;br/&gt;对吗？任何？&lt;/a&gt;，所有&lt;a href=&quot;../enumerable#chunks(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;U个块的chunks（＆block：T-&amp;gt; U）&lt;/a&gt;，&lt;a href=&quot;../enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt;compact_map（＆block）compact_map&lt;/a&gt;，&lt;a href=&quot;../enumerable#count(item)-instance-method&quot;&gt;count（item）&lt;br/&gt;count（＆block）count&lt;/a&gt;，&lt;a href=&quot;../enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt;cycle（＆block）&lt;br/&gt;cycle（n，＆block）cycle&lt;/a&gt;，&lt;a href=&quot;../enumerable#each(&amp;amp;block:T-%3EUNDERSCORE)-instance-method&quot;&gt;每个（＆block：T-&amp;gt; UNDERSCORE ）each&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_cons（count：Int，复用= false，＆block）each_cons&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_slice（count：Int，复用= false，＆block）each_slice&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt;each_with_index（offset = 0，＆block）each_with_index&lt;/a&gt;，&lt;a href=&quot;../enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt;each_with_object（obj，＆block）each_with_object&lt;/a&gt;，&lt;a href=&quot;../enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt;find（if_none = nil，＆block）find&lt;/a&gt;，&lt;a href=&quot;../enumerable#first(count:Int)-instance-method&quot;&gt;first（count：Int）&lt;br/&gt;首先&lt;/a&gt;，&lt;a href=&quot;../enumerable#first?-instance-method&quot;&gt;首先？第一？&lt;/a&gt;，&lt;a href=&quot;../enumerable#flat_map(&amp;amp;block:T-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt;flat_map（＆block：T-&amp;gt; Array（U）| Iterator（U）| U）全部U flat_map&lt;/a&gt;，&lt;a href=&quot;../enumerable#grep(pattern)-instance-method&quot;&gt;grep（pattern）grep&lt;/a&gt;，&lt;a href=&quot;../enumerable#group_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;group_by（＆block：T-&amp;gt; U）全部U group_by&lt;/a&gt;，&lt;a href=&quot;../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt;in_groups_of（size：Int， ：U = nil）forall U &lt;br/&gt;in_groups_of（size：Int，fill_up_with：U = nil，复用= false，＆block）forall U in_groups_of&lt;/a&gt;，&lt;a href=&quot;../enumerable#includes?(obj)-instance-method&quot;&gt;include？（obj）includes？&lt;/a&gt;，&lt;a href=&quot;../enumerable#index(&amp;amp;block)-instance-method&quot;&gt;index（＆block）&lt;br/&gt;index（obj）index&lt;/a&gt;，&lt;a href=&quot;../enumerable#index_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;index_by（＆block：T-&amp;gt; U）for all U index_by&lt;/a&gt;，join（separator =&amp;ldquo;&amp;rdquo;，＆block）</target>
        </trans-unit>
        <trans-unit id="131f7c1326f85671468a76e53a1def7f3acb3c66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../error#code-instance-method&quot;&gt; code code&lt;/a&gt;, &lt;a href=&quot;../error#code?:UInt64?-instance-method&quot;&gt; code? : UInt64? code?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../error#code-instance-method&quot;&gt;代码代码&lt;/a&gt;，&lt;a href=&quot;../error#code?:UInt64?-instance-method&quot;&gt;代码？：UInt64？码？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ea0f41ef0624a5e925cf53171f65447542dbc70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../error#code:LibCrypto::ULong-instance-method&quot;&gt; code : LibCrypto::ULong code&lt;/a&gt;, &lt;a href=&quot;../error#code?:LibCrypto::ULong?-instance-method&quot;&gt; code? : LibCrypto::ULong? code?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../error#code:LibCrypto::ULong-instance-method&quot;&gt;代码：LibCrypto :: UL长代码&lt;/a&gt;，&lt;a href=&quot;../error#code?:LibCrypto::ULong?-instance-method&quot;&gt;代码？：LibCrypto :: ULong吗？码？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c4d88815b18bb1b18863f87dc1b1cbcb5716523" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../exception#backtrace-instance-method&quot;&gt; backtrace backtrace&lt;/a&gt;, &lt;a href=&quot;../exception#backtrace?-instance-method&quot;&gt; backtrace? backtrace?&lt;/a&gt;, &lt;a href=&quot;../exception#callstack:CallStack?-instance-method&quot;&gt; callstack : CallStack? callstack&lt;/a&gt;, &lt;a href=&quot;../exception#callstack=(callstack:CallStack?)-instance-method&quot;&gt; callstack=(callstack : CallStack?) callstack=&lt;/a&gt;, &lt;a href=&quot;../exception#cause:Exception?-instance-method&quot;&gt; cause : Exception? cause&lt;/a&gt;, &lt;a href=&quot;../exception#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;../exception#inspect_with_backtrace(io:IO):Nil-instance-method&quot;&gt; inspect_with_backtrace(io : IO) : Nil&lt;br/&gt;inspect_with_backtrace : String inspect_with_backtrace&lt;/a&gt;, &lt;a href=&quot;../exception#message:String?-instance-method&quot;&gt; message : String? message&lt;/a&gt;, &lt;a href=&quot;../exception#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../exception#backtrace-instance-method&quot;&gt;backtrace backtrace&lt;/a&gt;，&lt;a href=&quot;../exception#backtrace?-instance-method&quot;&gt;回溯？回溯？&lt;/a&gt;，&lt;a href=&quot;../exception#callstack:CallStack?-instance-method&quot;&gt;callstack：CallStack？callstack&lt;/a&gt;，&lt;a href=&quot;../exception#callstack=(callstack:CallStack?)-instance-method&quot;&gt;callstack =（（callstack：CallStack？）callstack =&lt;/a&gt;，&lt;a href=&quot;../exception#cause:Exception?-instance-method&quot;&gt;原因：异常？原因&lt;/a&gt;，&lt;a href=&quot;../exception#inspect(io:IO):Nil-instance-method&quot;&gt;inspect（io：IO）：无检查&lt;/a&gt;，&lt;a href=&quot;../exception#inspect_with_backtrace(io:IO):Nil-instance-method&quot;&gt;inspect_with_backtrace（io：IO）：无&lt;br/&gt;inspect_with_backtrace：字符串inspect_with_backtrace&lt;/a&gt;，&lt;a href=&quot;../exception#message:String?-instance-method&quot;&gt;消息：字符串？消息&lt;/a&gt;，&lt;a href=&quot;../exception#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：无to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="abbc65430f6d7d0be65dca8323557b34f135c2d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../exception#backtrace-instance-method&quot;&gt; backtrace backtrace&lt;/a&gt;, &lt;a href=&quot;../exception#backtrace?-instance-method&quot;&gt; backtrace? backtrace?&lt;/a&gt;, &lt;a href=&quot;../exception#cause:Exception?-instance-method&quot;&gt; cause : Exception? cause&lt;/a&gt;, &lt;a href=&quot;../exception#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;../exception#inspect_with_backtrace(io:IO):Nil-instance-method&quot;&gt; inspect_with_backtrace(io : IO) : Nil&lt;br/&gt;inspect_with_backtrace : String inspect_with_backtrace&lt;/a&gt;, &lt;a href=&quot;../exception#message:String?-instance-method&quot;&gt; message : String? message&lt;/a&gt;, &lt;a href=&quot;../exception#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../exception#backtrace-instance-method&quot;&gt;backtrace backtrace&lt;/a&gt;，&lt;a href=&quot;../exception#backtrace?-instance-method&quot;&gt;回溯？回溯？&lt;/a&gt;，&lt;a href=&quot;../exception#cause:Exception?-instance-method&quot;&gt;原因：异常？原因&lt;/a&gt;，&lt;a href=&quot;../exception#inspect(io:IO):Nil-instance-method&quot;&gt;inspect（io：IO）：无检查&lt;/a&gt;，&lt;a href=&quot;../exception#inspect_with_backtrace(io:IO):Nil-instance-method&quot;&gt;inspect_with_backtrace（io：IO）：无&lt;br/&gt;inspect_with_backtrace：字符串inspect_with_backtrace&lt;/a&gt;，&lt;a href=&quot;../exception#message:String?-instance-method&quot;&gt;消息：字符串？消息&lt;/a&gt;，&lt;a href=&quot;../exception#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：无to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d77f010ffadb08e7fe8978a0b666eb3eff7cb15b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../fileinfo#comment-instance-method&quot;&gt; comment comment&lt;/a&gt;, &lt;a href=&quot;../fileinfo#comment=(comment)-instance-method&quot;&gt; comment=(comment) comment=&lt;/a&gt;, &lt;a href=&quot;../fileinfo#compressed_size-instance-method&quot;&gt; compressed_size compressed_size&lt;/a&gt;, &lt;a href=&quot;../fileinfo#compressed_size=(compressed_size)-instance-method&quot;&gt; compressed_size=(compressed_size) compressed_size=&lt;/a&gt;, &lt;a href=&quot;../fileinfo#compression_method-instance-method&quot;&gt; compression_method compression_method&lt;/a&gt;, &lt;a href=&quot;../fileinfo#compression_method=(compression_method)-instance-method&quot;&gt; compression_method=(compression_method) compression_method=&lt;/a&gt;, &lt;a href=&quot;../fileinfo#crc32-instance-method&quot;&gt; crc32 crc32&lt;/a&gt;, &lt;a href=&quot;../fileinfo#crc32=(crc32)-instance-method&quot;&gt; crc32=(crc32) crc32=&lt;/a&gt;, &lt;a href=&quot;../fileinfo#dir?-instance-method&quot;&gt; dir? dir?&lt;/a&gt;, &lt;a href=&quot;../fileinfo#extra-instance-method&quot;&gt; extra extra&lt;/a&gt;, &lt;a href=&quot;../fileinfo#extra=(extra)-instance-method&quot;&gt; extra=(extra) extra=&lt;/a&gt;, &lt;a href=&quot;../fileinfo#file?-instance-method&quot;&gt; file? file?&lt;/a&gt;, &lt;a href=&quot;../fileinfo#filename-instance-method&quot;&gt; filename filename&lt;/a&gt;, &lt;a href=&quot;../fileinfo#filename=(filename)-instance-method&quot;&gt; filename=(filename) filename=&lt;/a&gt;, &lt;a href=&quot;../fileinfo#general_purpose_bit_flag-instance-method&quot;&gt; general_purpose_bit_flag general_purpose_bit_flag&lt;/a&gt;, &lt;a href=&quot;../fileinfo#general_purpose_bit_flag=(general_purpose_bit_flag)-instance-method&quot;&gt; general_purpose_bit_flag=(general_purpose_bit_flag) general_purpose_bit_flag=&lt;/a&gt;, &lt;a href=&quot;../fileinfo#offset-instance-method&quot;&gt; offset offset&lt;/a&gt;, &lt;a href=&quot;../fileinfo#offset=(offset)-instance-method&quot;&gt; offset=(offset) offset=&lt;/a&gt;, &lt;a href=&quot;../fileinfo#time:Time-instance-method&quot;&gt; time : Time time&lt;/a&gt;, &lt;a href=&quot;../fileinfo#time=(time:Time)-instance-method&quot;&gt; time=(time : Time) time=&lt;/a&gt;, &lt;a href=&quot;../fileinfo#uncompressed_size-instance-method&quot;&gt; uncompressed_size uncompressed_size&lt;/a&gt;, &lt;a href=&quot;../fileinfo#uncompressed_size=(uncompressed_size)-instance-method&quot;&gt; uncompressed_size=(uncompressed_size) uncompressed_size=&lt;/a&gt;, &lt;a href=&quot;../fileinfo#version:UInt16-instance-method&quot;&gt; version : UInt16 version&lt;/a&gt;, &lt;a href=&quot;../fileinfo#version=(version:UInt16)-instance-method&quot;&gt; version=(version : UInt16) version=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../fileinfo#comment-instance-method&quot;&gt;comment comment&lt;/a&gt;，&lt;a href=&quot;../fileinfo#comment=(comment)-instance-method&quot;&gt;comment =（comment）comment =&lt;/a&gt;，&lt;a href=&quot;../fileinfo#compressed_size-instance-method&quot;&gt;compressed_sizecompressed_size&lt;/a&gt;，&lt;a href=&quot;../fileinfo#compressed_size=(compressed_size)-instance-method&quot;&gt;compressed_size =（compressed_size）compressed_size =&lt;/a&gt;，&lt;a href=&quot;../fileinfo#compression_method-instance-method&quot;&gt;compression_method compression_method&lt;/a&gt;，&lt;a href=&quot;../fileinfo#compression_method=(compression_method)-instance-method&quot;&gt;compression_method =（compression_method）compression_method =&lt;/a&gt;，&lt;a href=&quot;../fileinfo#crc32-instance-method&quot;&gt;crc32 crc32&lt;/a&gt;，&lt;a href=&quot;../fileinfo#crc32=(crc32)-instance-method&quot;&gt;crc32 =（crc32）crc32 =&lt;/a&gt;，&lt;a href=&quot;../fileinfo#dir?-instance-method&quot;&gt;dir？目录？&lt;/a&gt;，&lt;a href=&quot;../fileinfo#extra-instance-method&quot;&gt;extra extra&lt;/a&gt;，&lt;a href=&quot;../fileinfo#extra=(extra)-instance-method&quot;&gt;extra =（extra）extra =&lt;/a&gt;，&lt;a href=&quot;../fileinfo#file?-instance-method&quot;&gt;文件？文件？&lt;/a&gt;，&lt;a href=&quot;../fileinfo#filename-instance-method&quot;&gt;文件名文件名&lt;/a&gt;，&lt;a href=&quot;../fileinfo#filename=(filename)-instance-method&quot;&gt;文件名=（文件名）文件名=&lt;/a&gt;，&lt;a href=&quot;../fileinfo#general_purpose_bit_flag-instance-method&quot;&gt;general_purpose_bit_flag general_purpose_bit_flag&lt;/a&gt;，&lt;a href=&quot;../fileinfo#general_purpose_bit_flag=(general_purpose_bit_flag)-instance-method&quot;&gt;general_purpose_bit_flag =（general_purpose_bit_flag）general_purpose_bit_flag =&lt;/a&gt;，&lt;a href=&quot;../fileinfo#offset-instance-method&quot;&gt;offset offset&lt;/a&gt;，&lt;a href=&quot;../fileinfo#offset=(offset)-instance-method&quot;&gt;offset =（offset）offset =&lt;/a&gt;，&lt;a href=&quot;../fileinfo#time:Time-instance-method&quot;&gt;time：时间time&lt;/a&gt;，&lt;a href=&quot;../fileinfo#time=(time:Time)-instance-method&quot;&gt;time =（time：Time）time =&lt;/a&gt;，&lt;a href=&quot;../fileinfo#uncompressed_size-instance-method&quot;&gt;uncompressed_size uncompressed_size&lt;/a&gt;，&lt;a href=&quot;../fileinfo#uncompressed_size=(uncompressed_size)-instance-method&quot;&gt;uncompressed_size =（uncompressed_size）uncompressed_size =&lt;/a&gt;，&lt;a href=&quot;../fileinfo#version:UInt16-instance-method&quot;&gt;版本：UInt16版本&lt;/a&gt;，&lt;a href=&quot;../fileinfo#version=(version:UInt16)-instance-method&quot;&gt;版本=（版本：UInt16）版本=&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33f6bb751768d9fa105d91a9d0156e9e1ca883f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../indexable&quot;&gt;Indexable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;../indexable&quot;&gt;Indexable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="094d4df0a761a62b327548724e6b9de0d027c34c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../indexable#%5B%5D(index:Int)-instance-method&quot;&gt; [](index : Int) []&lt;/a&gt;, &lt;a href=&quot;../indexable#%5B%5D?(index:Int)-instance-method&quot;&gt; []?(index : Int) []?&lt;/a&gt;, &lt;a href=&quot;../indexable#bsearch(&amp;amp;block:T-%3EBool)-instance-method&quot;&gt; bsearch(&amp;amp;block : T -&amp;gt; Bool) bsearch&lt;/a&gt;, &lt;a href=&quot;../indexable#bsearch_index(&amp;amp;block:T,Int32-%3EBool)-instance-method&quot;&gt; bsearch_index(&amp;amp;block : T, Int32 -&amp;gt; Bool) bsearch_index&lt;/a&gt;, &lt;a href=&quot;../indexable#dig(index:Int,*subindexes)-instance-method&quot;&gt; dig(index : Int, *subindexes) dig&lt;/a&gt;, &lt;a href=&quot;../indexable#dig?(index:Int,*subindexes)-instance-method&quot;&gt; dig?(index : Int, *subindexes) dig?&lt;/a&gt;, &lt;a href=&quot;../indexable#each(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt; each(*, start : Int, count : Int, &amp;amp;block)&lt;br/&gt;each(*, within range : Range, &amp;amp;block)&lt;br/&gt;each(&amp;amp;block)&lt;br/&gt;each each&lt;/a&gt;, &lt;a href=&quot;../indexable#each_index(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt; each_index(*, start : Int, count : Int, &amp;amp;block)&lt;br/&gt;each_index(&amp;amp;block) : Nil&lt;br/&gt;each_index each_index&lt;/a&gt;, &lt;a href=&quot;../indexable#empty?-instance-method&quot;&gt; empty? empty?&lt;/a&gt;, &lt;a href=&quot;../indexable#equals?(other:Indexable,&amp;amp;block)-instance-method&quot;&gt; equals?(other : Indexable, &amp;amp;block)&lt;br/&gt;equals?(other, &amp;amp;block) equals?&lt;/a&gt;, &lt;a href=&quot;../indexable#fetch(index,default)-instance-method&quot;&gt; fetch(index, default)&lt;br/&gt;fetch(index : Int, &amp;amp;block) fetch&lt;/a&gt;, &lt;a href=&quot;../indexable#first-instance-method&quot;&gt; first&lt;br/&gt;first(&amp;amp;block) first&lt;/a&gt;, &lt;a href=&quot;../indexable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;../indexable#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;../indexable#index(object,offset:Int=0)-instance-method&quot;&gt; index(object, offset : Int = 0)&lt;br/&gt;index(offset : Int = 0, &amp;amp;block) index&lt;/a&gt;,  join(separator = &quot;&quot;) join, &lt;a href=&quot;../indexable#last-instance-method&quot;&gt; last&lt;br/&gt;last(&amp;amp;block) last&lt;/a&gt;, &lt;a href=&quot;../indexable#last?-instance-method&quot;&gt; last? last?&lt;/a&gt;, &lt;a href=&quot;../indexable#reverse_each(&amp;amp;block):Nil-instance-method&quot;&gt; reverse_each(&amp;amp;block) : Nil&lt;br/&gt;reverse_each reverse_each&lt;/a&gt;, &lt;a href=&quot;../indexable#rindex(offset=size-1,&amp;amp;block)-instance-method&quot;&gt; rindex(offset = size - 1, &amp;amp;block)&lt;br/&gt;rindex(value, offset = size - 1) rindex&lt;/a&gt;, &lt;a href=&quot;../indexable#sample(random=Random::DEFAULT)-instance-method&quot;&gt; sample(random = Random::DEFAULT) sample&lt;/a&gt;, &lt;a href=&quot;../indexable#size-instance-method&quot;&gt; size size&lt;/a&gt;, &lt;a href=&quot;../indexable#to_a-instance-method&quot;&gt; to_a to_a&lt;/a&gt;, &lt;a href=&quot;../indexable#unsafe_fetch(index:Int)-instance-method&quot;&gt; unsafe_fetch(index : Int) unsafe_fetch&lt;/a&gt;, &lt;a href=&quot;../indexable#values_at(*indexes:Int)-instance-method&quot;&gt; values_at(*indexes : Int) values_at&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../indexable#%5B%5D(index:Int)-instance-method&quot;&gt;[]（index：Int）[]&lt;/a&gt;，&lt;a href=&quot;../indexable#%5B%5D?(index:Int)-instance-method&quot;&gt;[]？（index：Int）[]？&lt;/a&gt;，&lt;a href=&quot;../indexable#bsearch(&amp;amp;block:T-%3EBool)-instance-method&quot;&gt;bsearch（＆block：T-&amp;gt; Bool）bsearch&lt;/a&gt;，&lt;a href=&quot;../indexable#bsearch_index(&amp;amp;block:T,Int32-%3EBool)-instance-method&quot;&gt;bsearch_index（＆block：T，Int32-&amp;gt; Bool）bsearch_index&lt;/a&gt;，&lt;a href=&quot;../indexable#dig(index:Int,*subindexes)-instance-method&quot;&gt;dig（index：Int，* subindexes）dig&lt;/a&gt;，&lt;a href=&quot;../indexable#dig?(index:Int,*subindexes)-instance-method&quot;&gt;dig？（index：Int，* subindexes）dig？&lt;/a&gt;，&lt;a href=&quot;../indexable#each(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt;each（*，start：Int，count：Int，＆block）&lt;br/&gt;each（*，范围内：Range，＆block）&lt;br/&gt;each（＆block）&lt;br/&gt;each each&lt;/a&gt;，&lt;a href=&quot;../indexable#each_index(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt;each_index（*，start：Int，count：Int，＆block）&lt;br/&gt;each_index（＆block ）：Nil &lt;br/&gt;each_index each_index&lt;/a&gt;，&lt;a href=&quot;../indexable#empty?-instance-method&quot;&gt;空吗？空吗&lt;/a&gt;，&lt;a href=&quot;../indexable#equals?(other:Indexable,&amp;amp;block)-instance-method&quot;&gt;等于？（其他：可索引，＆block）&lt;br/&gt;等于？（其他，＆block）等于？&lt;/a&gt;，&lt;a href=&quot;../indexable#fetch(index,default)-instance-method&quot;&gt;fetch（index，default）&lt;br/&gt;fetch（index：Int，＆block）fetch&lt;/a&gt;，&lt;a href=&quot;../indexable#first-instance-method&quot;&gt;首先是&lt;br/&gt;first（＆block）first&lt;/a&gt;，&lt;a href=&quot;../indexable#first?-instance-method&quot;&gt;首先？第一？&lt;/a&gt;，&lt;a href=&quot;../indexable#hash(hasher)-instance-method&quot;&gt;hash（哈希）hash&lt;/a&gt;，&lt;a href=&quot;../indexable#index(object,offset:Int=0)-instance-method&quot;&gt;index（对象，offset：Int = 0）&lt;br/&gt;index（offset：Int = 0，＆block）索引&lt;/a&gt;，join（separator =&amp;ldquo;&amp;rdquo;）join，&lt;a href=&quot;../indexable#last-instance-method&quot;&gt;last &lt;br/&gt;last（＆block）last&lt;/a&gt;，&lt;a href=&quot;../indexable#last?-instance-method&quot;&gt;last？持续？&lt;/a&gt;，&lt;a href=&quot;../indexable#reverse_each(&amp;amp;block):Nil-instance-method&quot;&gt;reverse_each（＆block）：Nil &lt;br/&gt;reverse_each reverse_each&lt;/a&gt;，&lt;a href=&quot;../indexable#rindex(offset=size-1,&amp;amp;block)-instance-method&quot;&gt;rindex（offset = size-1，＆block）&lt;br/&gt;rindex（value，offset = size-1）rindex&lt;/a&gt;，&lt;a href=&quot;../indexable#sample(random=Random::DEFAULT)-instance-method&quot;&gt;sample（random = Random :: DEFAULT）sample&lt;/a&gt;，&lt;a href=&quot;../indexable#size-instance-method&quot;&gt;size size&lt;/a&gt;，&lt;a href=&quot;../indexable#to_a-instance-method&quot;&gt;to_a to_a&lt;/a&gt;，&lt;a href=&quot;../indexable#unsafe_fetch(index:Int)-instance-method&quot;&gt;unsafe_fetch（index：Int）unsafe_fetch&lt;/a&gt;，&lt;a href=&quot;../indexable#values_at(*indexes:Int)-instance-method&quot;&gt;values_at（* indexes：Int）values_at&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e3385aa7f65f732bff542fb84966bccfb76686e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../indexable#%5B%5D(index:Int)-instance-method&quot;&gt; [](index : Int) []&lt;/a&gt;, &lt;a href=&quot;../indexable#%5B%5D?(index:Int)-instance-method&quot;&gt; []?(index : Int) []?&lt;/a&gt;, &lt;a href=&quot;../indexable#bsearch(&amp;amp;block:T-%3EBool)-instance-method&quot;&gt; bsearch(&amp;amp;block : T -&amp;gt; Bool) bsearch&lt;/a&gt;, &lt;a href=&quot;../indexable#bsearch_index(&amp;amp;block:T,Int32-%3EBool)-instance-method&quot;&gt; bsearch_index(&amp;amp;block : T, Int32 -&amp;gt; Bool) bsearch_index&lt;/a&gt;, &lt;a href=&quot;../indexable#dig(index:Int,*subindexes)-instance-method&quot;&gt; dig(index : Int, *subindexes) dig&lt;/a&gt;, &lt;a href=&quot;../indexable#dig?(index:Int,*subindexes)-instance-method&quot;&gt; dig?(index : Int, *subindexes) dig?&lt;/a&gt;, &lt;a href=&quot;../indexable#each-instance-method&quot;&gt; each&lt;br/&gt;each(*, within range : Range, &amp;amp;)&lt;br/&gt;each(&amp;amp;)&lt;br/&gt;each(*, start : Int, count : Int, &amp;amp;) each&lt;/a&gt;, &lt;a href=&quot;../indexable#each_index(*,start:Int,count:Int,&amp;amp;)-instance-method&quot;&gt; each_index(*, start : Int, count : Int, &amp;amp;)&lt;br/&gt;each_index(&amp;amp;) : Nil&lt;br/&gt;each_index each_index&lt;/a&gt;, &lt;a href=&quot;../indexable#empty?-instance-method&quot;&gt; empty? empty?&lt;/a&gt;, &lt;a href=&quot;../indexable#equals?(other:Indexable,&amp;amp;)-instance-method&quot;&gt; equals?(other : Indexable, &amp;amp;)&lt;br/&gt;equals?(other, &amp;amp;) equals?&lt;/a&gt;, &lt;a href=&quot;../indexable#fetch(index,default)-instance-method&quot;&gt; fetch(index, default)&lt;br/&gt;fetch(index : Int, &amp;amp;) fetch&lt;/a&gt;, &lt;a href=&quot;../indexable#first(&amp;amp;)-instance-method&quot;&gt; first(&amp;amp;) first&lt;/a&gt;, &lt;a href=&quot;../indexable#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;../indexable#index(object,offset:Int=0)-instance-method&quot;&gt; index(object, offset : Int = 0)&lt;br/&gt;index(offset : Int = 0, &amp;amp;) index&lt;/a&gt;,  join(separator = &quot;&quot;) join, &lt;a href=&quot;../indexable#last-instance-method&quot;&gt; last&lt;br/&gt;last(&amp;amp;) last&lt;/a&gt;, &lt;a href=&quot;../indexable#last?-instance-method&quot;&gt; last? last?&lt;/a&gt;, &lt;a href=&quot;../indexable#reverse_each(&amp;amp;):Nil-instance-method&quot;&gt; reverse_each(&amp;amp;) : Nil&lt;br/&gt;reverse_each reverse_each&lt;/a&gt;, &lt;a href=&quot;../indexable#rindex(value,offset=size-1)-instance-method&quot;&gt; rindex(value, offset = size - 1)&lt;br/&gt;rindex(offset = size - 1, &amp;amp;) rindex&lt;/a&gt;, &lt;a href=&quot;../indexable#sample(random=Random::DEFAULT)-instance-method&quot;&gt; sample(random = Random::DEFAULT) sample&lt;/a&gt;, &lt;a href=&quot;../indexable#size-instance-method&quot;&gt; size size&lt;/a&gt;, &lt;a href=&quot;../indexable#to_a-instance-method&quot;&gt; to_a to_a&lt;/a&gt;, &lt;a href=&quot;../indexable#unsafe_fetch(index:Int)-instance-method&quot;&gt; unsafe_fetch(index : Int) unsafe_fetch&lt;/a&gt;, &lt;a href=&quot;../indexable#values_at(*indexes:Int)-instance-method&quot;&gt; values_at(*indexes : Int) values_at&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../indexable#%5B%5D(index:Int)-instance-method&quot;&gt;[]（index：Int）[]&lt;/a&gt;，&lt;a href=&quot;../indexable#%5B%5D?(index:Int)-instance-method&quot;&gt;[]？（index：Int）[]？&lt;/a&gt;，&lt;a href=&quot;../indexable#bsearch(&amp;amp;block:T-%3EBool)-instance-method&quot;&gt;bsearch（＆block：T-&amp;gt; Bool）bsearch&lt;/a&gt;，&lt;a href=&quot;../indexable#bsearch_index(&amp;amp;block:T,Int32-%3EBool)-instance-method&quot;&gt;bsearch_index（＆block：T，Int32-&amp;gt; Bool）bsearch_index&lt;/a&gt;，&lt;a href=&quot;../indexable#dig(index:Int,*subindexes)-instance-method&quot;&gt;dig（index：Int，* subindexes）dig&lt;/a&gt;，&lt;a href=&quot;../indexable#dig?(index:Int,*subindexes)-instance-method&quot;&gt;dig？（index：Int，* subindexes）dig？&lt;/a&gt;，&lt;a href=&quot;../indexable#each-instance-method&quot;&gt;每个&lt;br/&gt;each（*，在范围内：＆范围内）&lt;br/&gt;each（＆）&lt;br/&gt;每个（*，开始：Int，计数：Int，＆）每个&lt;/a&gt;，&lt;a href=&quot;../indexable#each_index(*,start:Int,count:Int,&amp;amp;)-instance-method&quot;&gt;each_index（*，开始：Int，计数：Int，＆）&lt;br/&gt;each_index（＆ ）：Nil &lt;br/&gt;each_index each_index&lt;/a&gt;，&lt;a href=&quot;../indexable#empty?-instance-method&quot;&gt;空吗？空吗&lt;/a&gt;，&lt;a href=&quot;../indexable#equals?(other:Indexable,&amp;amp;)-instance-method&quot;&gt;等于？（其他：可索引，＆）&lt;br/&gt;等于？（其他，＆）等于？&lt;/a&gt;，&lt;a href=&quot;../indexable#fetch(index,default)-instance-method&quot;&gt;提取（索引，默认）&lt;br/&gt;fetch（index：Int，＆）fetch&lt;/a&gt;，&lt;a href=&quot;../indexable#first(&amp;amp;)-instance-method&quot;&gt;first（＆）first&lt;/a&gt;，&lt;a href=&quot;../indexable#hash(hasher)-instance-method&quot;&gt;hash（hasher）hash&lt;/a&gt;，&lt;a href=&quot;../indexable#index(object,offset:Int=0)-instance-method&quot;&gt;index（object，offset：Int = 0）&lt;br/&gt;index（offset：Int = 0，＆）index&lt;/a&gt;，join（separator =&amp;ldquo;&amp;rdquo; ）加入，&lt;a href=&quot;../indexable#last-instance-method&quot;&gt;最后一个&lt;br/&gt;last（＆）最后一个&lt;/a&gt;，&lt;a href=&quot;../indexable#last?-instance-method&quot;&gt;最后一个？持续？&lt;/a&gt;，&lt;a href=&quot;../indexable#reverse_each(&amp;amp;):Nil-instance-method&quot;&gt;reverse_each（＆）：无&lt;br/&gt;reverse_each reverse_each&lt;/a&gt;，&lt;a href=&quot;../indexable#rindex(value,offset=size-1)-instance-method&quot;&gt;RINDEX（值，偏移=大小- 1）&lt;br/&gt;RINDEX（偏移=尺寸- 1，＆）RINDEX&lt;/a&gt;，&lt;a href=&quot;../indexable#sample(random=Random::DEFAULT)-instance-method&quot;&gt;样品（随机=随机:: DEFAULT）样品&lt;/a&gt;，&lt;a href=&quot;../indexable#size-instance-method&quot;&gt;尺寸大小&lt;/a&gt;，&lt;a href=&quot;../indexable#to_a-instance-method&quot;&gt;to_a to_a&lt;/a&gt;，&lt;a href=&quot;../indexable#unsafe_fetch(index:Int)-instance-method&quot;&gt;unsafe_fetch （index：Int）unsafe_fetch&lt;/a&gt;，&lt;a href=&quot;../indexable#values_at(*indexes:Int)-instance-method&quot;&gt;values_at（* indexes：Int）values_at&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6fab07a8b8d853ea68ee142430cda3b5bcec98f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../installation&quot;&gt;Install the latest Crystal release&lt;/a&gt;. To compile Crystal, you need Crystal :).</source>
          <target state="translated">&lt;a href=&quot;../installation&quot;&gt;安装最新的Crystal版本&lt;/a&gt;。要编译Crystal，您需要Crystal :)。</target>
        </trans-unit>
        <trans-unit id="5a169054ab37645794cdd0d6d35bcaf6502435f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io#copy(src,dst,limit:Int):Int64-class-method&quot;&gt; copy(src, dst, limit : Int) : Int64&lt;br/&gt;copy(src, dst) : Int64 copy&lt;/a&gt;, &lt;a href=&quot;../io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt; pipe(read_blocking = false, write_blocking = false) : Tuple(IO::FileDescriptor, IO::FileDescriptor)&lt;br/&gt;pipe(read_blocking = false, write_blocking = false, &amp;amp;) pipe&lt;/a&gt;, &lt;a href=&quot;../io#same_content?(stream1:IO,stream2:IO)-class-method&quot;&gt; same_content?(stream1 : IO, stream2 : IO) same_content?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../io#copy(src,dst,limit:Int):Int64-class-method&quot;&gt;copy（src，dst，limit：Int）：Int64 &lt;br/&gt;copy（src，dst）：Int64 copy&lt;/a&gt;，&lt;a href=&quot;../io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt;pipe（read_blocking = false，write_blocking = false）：Tuple（IO :: FileDescriptor，IO :: FileDescriptor）&lt;br/&gt;管道（read_blocking = false ，write_blocking = false和＆）管道&lt;/a&gt;，&lt;a href=&quot;../io#same_content?(stream1:IO,stream2:IO)-class-method&quot;&gt;same_content？（stream1：IO，stream2：IO）same_content？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c7449a71ecdbfa32a581b1e0468be8d7108821b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io#copy(src,dst,limit:Int):UInt64-class-method&quot;&gt; copy(src, dst, limit : Int) : UInt64&lt;br/&gt;copy(src, dst) : UInt64 copy&lt;/a&gt;, &lt;a href=&quot;../io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt; pipe(read_blocking = false, write_blocking = false) : Tuple(IO::FileDescriptor, IO::FileDescriptor)&lt;br/&gt;pipe(read_blocking = false, write_blocking = false, &amp;amp;block) pipe&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../io#copy(src,dst,limit:Int):UInt64-class-method&quot;&gt;copy（src，dst，limit：Int）：UInt64 &lt;br/&gt;copy（src，dst）：UInt64 copy&lt;/a&gt;，&lt;a href=&quot;../io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt;pipe（read_blocking = false，write_blocking = false）：Tuple（IO :: FileDescriptor，IO :: FileDescriptor）&lt;br/&gt;管道（read_blocking = false ，write_blocking = false，＆block）管道&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b308ab0a1585d75b22947dc07c545287fae6b43d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io#self-instance-method&quot;&gt; &amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt;, &lt;a href=&quot;../io#close-instance-method&quot;&gt; close close&lt;/a&gt;, &lt;a href=&quot;../io#closed?-instance-method&quot;&gt; closed? closed?&lt;/a&gt;, &lt;a href=&quot;../io#each_byte(&amp;amp;):Nil-instance-method&quot;&gt; each_byte(&amp;amp;) : Nil&lt;br/&gt;each_byte each_byte&lt;/a&gt;, &lt;a href=&quot;../io#each_char(&amp;amp;):Nil-instance-method&quot;&gt; each_char(&amp;amp;) : Nil&lt;br/&gt;each_char each_char&lt;/a&gt;, &lt;a href=&quot;../io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt; each_line(*args, **options, &amp;amp;block : String -&amp;gt; ) : Nil&lt;br/&gt;each_line(*args, **options) each_line&lt;/a&gt;, &lt;a href=&quot;../io#encoding:String-instance-method&quot;&gt; encoding : String encoding&lt;/a&gt;, &lt;a href=&quot;../io#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;../io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt; gets(delimiter : Char, limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : Char, chomp = false) : String?&lt;br/&gt;gets(chomp = true) : String?&lt;br/&gt;gets(limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : String, chomp = false) : String? gets&lt;/a&gt;, &lt;a href=&quot;../io#gets_to_end:String-instance-method&quot;&gt; gets_to_end : String gets_to_end&lt;/a&gt;, &lt;a href=&quot;../io#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;../io#pos-instance-method&quot;&gt; pos pos&lt;/a&gt;, &lt;a href=&quot;../io#pos=(value)-instance-method&quot;&gt; pos=(value) pos=&lt;/a&gt;, &lt;a href=&quot;../io#print(*objects:_):Nil-instance-method&quot;&gt; print(*objects : _) : Nil&lt;br/&gt;print(obj) : Nil print&lt;/a&gt;, &lt;a href=&quot;../io#printf(format_string,*args):Nil-instance-method&quot;&gt; printf(format_string, *args) : Nil&lt;br/&gt;printf(format_string, args : Array | Tuple) : Nil printf&lt;/a&gt;, &lt;a href=&quot;../io#puts(*objects:_):Nil-instance-method&quot;&gt; puts(*objects : _) : Nil&lt;br/&gt;puts : Nil&lt;br/&gt;puts(obj) : Nil&lt;br/&gt;puts(string : String) : Nil puts&lt;/a&gt;, &lt;a href=&quot;../io#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;../io#read_at(offset,bytesize,&amp;amp;)-instance-method&quot;&gt; read_at(offset, bytesize, &amp;amp;) read_at&lt;/a&gt;, &lt;a href=&quot;../io#read_byte:UInt8?-instance-method&quot;&gt; read_byte : UInt8? read_byte&lt;/a&gt;, &lt;a href=&quot;../io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; read_bytes(type, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) read_bytes&lt;/a&gt;, &lt;a href=&quot;../io#read_char:Char?-instance-method&quot;&gt; read_char : Char? read_char&lt;/a&gt;, &lt;a href=&quot;../io#read_fully(slice:Bytes)-instance-method&quot;&gt; read_fully(slice : Bytes) read_fully&lt;/a&gt;, &lt;a href=&quot;../io#read_fully?(slice:Bytes)-instance-method&quot;&gt; read_fully?(slice : Bytes) read_fully?&lt;/a&gt;, &lt;a href=&quot;../io#read_line(*args,**options):String-instance-method&quot;&gt; read_line(*args, **options) : String read_line&lt;/a&gt;, &lt;a href=&quot;../io#read_string(bytesize:Int):String-instance-method&quot;&gt; read_string(bytesize : Int) : String read_string&lt;/a&gt;, &lt;a href=&quot;../io#read_utf8(slice:Bytes)-instance-method&quot;&gt; read_utf8(slice : Bytes) read_utf8&lt;/a&gt;, &lt;a href=&quot;../io#read_utf8_byte-instance-method&quot;&gt; read_utf8_byte read_utf8_byte&lt;/a&gt;, &lt;a href=&quot;../io#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;../io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt; seek(offset, whence : Seek = Seek::Set) seek&lt;/a&gt;, &lt;a href=&quot;../io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt; set_encoding(encoding : String, invalid : Symbol? = nil) set_encoding&lt;/a&gt;, &lt;a href=&quot;../io#skip(bytes_count:Int):Nil-instance-method&quot;&gt; skip(bytes_count : Int) : Nil skip&lt;/a&gt;, &lt;a href=&quot;../io#skip_to_end:Nil-instance-method&quot;&gt; skip_to_end : Nil skip_to_end&lt;/a&gt;, &lt;a href=&quot;../io#tell-instance-method&quot;&gt; tell tell&lt;/a&gt;, &lt;a href=&quot;../io#tty?:Bool-instance-method&quot;&gt; tty? : Bool tty?&lt;/a&gt;, &lt;a href=&quot;../io#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;, &lt;a href=&quot;../io#write_byte(byte:UInt8)-instance-method&quot;&gt; write_byte(byte : UInt8) write_byte&lt;/a&gt;, &lt;a href=&quot;../io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; write_bytes(object, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) write_bytes&lt;/a&gt;, &lt;a href=&quot;../io#write_utf8(slice:Bytes)-instance-method&quot;&gt; write_utf8(slice : Bytes) write_utf8&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../io#self-instance-method&quot;&gt;&amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt;，&lt;a href=&quot;../io#close-instance-method&quot;&gt;关闭关闭&lt;/a&gt;，&lt;a href=&quot;../io#closed?-instance-method&quot;&gt;关闭？关闭？&lt;/a&gt;，&lt;a href=&quot;../io#each_byte(&amp;amp;):Nil-instance-method&quot;&gt;each_byte（＆）：零个&lt;br/&gt;each_byte each_byte&lt;/a&gt;，&lt;a href=&quot;../io#each_char(&amp;amp;):Nil-instance-method&quot;&gt;each_char（＆）：零个&lt;br/&gt;each_char each_char&lt;/a&gt;，each_line &lt;a href=&quot;../io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt;（* args，** options，＆block：String-&amp;gt;）：Nil &lt;br/&gt;each_line（* args，** options）each_line&lt;/a&gt;，&lt;a href=&quot;../io#encoding:String-instance-method&quot;&gt;编码：String编码&lt;/a&gt;，&lt;a href=&quot;../io#flush-instance-method&quot;&gt;刷新冲洗&lt;/a&gt;，&lt;a href=&quot;../io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;gets（分隔符：字符，限制：整数，斜率=假）：字符串&lt;br/&gt;gets（定界符：Char，chomp = false）：字符串？&lt;br/&gt;gets（chomp = true）：字符串？&lt;br/&gt;gets（limit：Int，chomp = false）：字符串？&lt;br/&gt;gets（delimiter：String，chomp = false）：字符串？得到&lt;/a&gt;，&lt;a href=&quot;../io#gets_to_end:String-instance-method&quot;&gt;gets_to_end：字符串gets_to_end&lt;/a&gt;，&lt;a href=&quot;../io#peek:Bytes?-instance-method&quot;&gt;peek：字节？ peek&lt;/a&gt;，&lt;a href=&quot;../io#pos-instance-method&quot;&gt;pos pos&lt;/a&gt;，&lt;a href=&quot;../io#pos=(value)-instance-method&quot;&gt;pos =（value）pos =&lt;/a&gt;，&lt;a href=&quot;../io#print(*objects:_):Nil-instance-method&quot;&gt;print（* objects：_）：Nil &lt;br/&gt;print（obj）：Nil print&lt;/a&gt;，&lt;a href=&quot;../io#printf(format_string,*args):Nil-instance-method&quot;&gt;printf（format_string，* args）：Nil &lt;br/&gt;printf（format_string，args：Array | Tuple）： Nil printf&lt;/a&gt;，&lt;a href=&quot;../io#puts(*objects:_):Nil-instance-method&quot;&gt;puts（* objects：_）：Nil &lt;br/&gt;puts：Nil &lt;br/&gt;puts（obj）：Nil &lt;br/&gt;puts（string：String）：Nil puts&lt;/a&gt;，&lt;a href=&quot;../io#read(slice:Bytes)-instance-method&quot;&gt;read（slice：Bytes）read&lt;/a&gt;，&lt;a href=&quot;../io#read_at(offset,bytesize,&amp;amp;)-instance-method&quot;&gt;read_at（offset，bytesize，＆）read_at&lt;/a&gt;，&lt;a href=&quot;../io#read_byte:UInt8?-instance-method&quot;&gt;read_byte ：UInt8？ read_byte&lt;/a&gt;，&lt;a href=&quot;../io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;read_bytes（type，format：IO :: ByteFormat = IO :: ByteFormat :: SystemEndian）read_bytes&lt;/a&gt;，&lt;a href=&quot;../io#read_char:Char?-instance-method&quot;&gt;read_char：字符？ read_char&lt;/a&gt;，&lt;a href=&quot;../io#read_fully(slice:Bytes)-instance-method&quot;&gt;read_fully（slice：Bytes）read_fully&lt;/a&gt;，&lt;a href=&quot;../io#read_fully?(slice:Bytes)-instance-method&quot;&gt;read_fully？（slice：Bytes）read_fully？&lt;/a&gt;，&lt;a href=&quot;../io#read_line(*args,**options):String-instance-method&quot;&gt;read_line（* args，** options）：字符串read_line&lt;/a&gt;，&lt;a href=&quot;../io#read_string(bytesize:Int):String-instance-method&quot;&gt;read_string（bytesize：Int）：字符串read_string&lt;/a&gt;，&lt;a href=&quot;../io#read_utf8(slice:Bytes)-instance-method&quot;&gt;read_utf8（slice：Bytes）read_utf8&lt;/a&gt;，&lt;a href=&quot;../io#read_utf8_byte-instance-method&quot;&gt;read_utf8_byte read_utf8_byte&lt;/a&gt;，&lt;a href=&quot;../io#rewind-instance-method&quot;&gt;倒带倒带&lt;/a&gt;，&lt;a href=&quot;../io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt;seek（offset，whence：Seek = Seek :: Set ）seek&lt;/a&gt;，&lt;a href=&quot;../io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt;set_encoding（编码：字符串，无效：Symbol？= nil）set_encoding&lt;/a&gt;，&lt;a href=&quot;../io#skip(bytes_count:Int):Nil-instance-method&quot;&gt;skip（bytes_count：Int）：Nil skip&lt;/a&gt;，&lt;a href=&quot;../io#skip_to_end:Nil-instance-method&quot;&gt;skip_to_end：Nil skip_to_end&lt;/a&gt;，&lt;a href=&quot;../io#tell-instance-method&quot;&gt;告诉&lt;/a&gt;Tell，&lt;a href=&quot;../io#tty?:Bool-instance-method&quot;&gt;tty？ ：布尔蒂？&lt;/a&gt;，&lt;a href=&quot;../io#write(slice:Bytes):Nil-instance-method&quot;&gt;write（slice：Bytes）：无写入&lt;/a&gt;，&lt;a href=&quot;../io#write_byte(byte:UInt8)-instance-method&quot;&gt;write_byte（byte：UInt8）write_byte&lt;/a&gt;，&lt;a href=&quot;../io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;write_bytes（object，format：IO :: ByteFormat = IO :: ByteFormat :: SystemEndian）write_bytes&lt;/a&gt;，&lt;a href=&quot;../io#write_utf8(slice:Bytes)-instance-method&quot;&gt;write_utf8（slice：Bytes）write_utf8&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de2782d5563a4d53ea1a5b0c3a327eaa0c20a6eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io#self-instance-method&quot;&gt; &amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt;, &lt;a href=&quot;../io#close-instance-method&quot;&gt; close close&lt;/a&gt;, &lt;a href=&quot;../io#closed?-instance-method&quot;&gt; closed? closed?&lt;/a&gt;, &lt;a href=&quot;../io#each_byte(&amp;amp;block):Nil-instance-method&quot;&gt; each_byte(&amp;amp;block) : Nil&lt;br/&gt;each_byte each_byte&lt;/a&gt;, &lt;a href=&quot;../io#each_char(&amp;amp;block):Nil-instance-method&quot;&gt; each_char(&amp;amp;block) : Nil&lt;br/&gt;each_char each_char&lt;/a&gt;, &lt;a href=&quot;../io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt; each_line(*args, **options, &amp;amp;block : String -&amp;gt; ) : Nil&lt;br/&gt;each_line(*args, **options) each_line&lt;/a&gt;, &lt;a href=&quot;../io#encoding:String-instance-method&quot;&gt; encoding : String encoding&lt;/a&gt;, &lt;a href=&quot;../io#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;../io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt; gets(delimiter : Char, limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : Char, chomp = false) : String?&lt;br/&gt;gets(chomp = true) : String?&lt;br/&gt;gets(limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : String, chomp = false) : String? gets&lt;/a&gt;, &lt;a href=&quot;../io#gets_to_end:String-instance-method&quot;&gt; gets_to_end : String gets_to_end&lt;/a&gt;, &lt;a href=&quot;../io#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;../io#pos-instance-method&quot;&gt; pos pos&lt;/a&gt;, &lt;a href=&quot;../io#pos=(value)-instance-method&quot;&gt; pos=(value) pos=&lt;/a&gt;, &lt;a href=&quot;../io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt; print(*objects : UNDERSCORE) : Nil&lt;br/&gt;print(obj) : Nil print&lt;/a&gt;, &lt;a href=&quot;../io#printf(format_string,*args):Nil-instance-method&quot;&gt; printf(format_string, *args) : Nil&lt;br/&gt;printf(format_string, args : Array | Tuple) : Nil printf&lt;/a&gt;, &lt;a href=&quot;../io#puts(*objects:UNDERSCORE):Nil-instance-method&quot;&gt; puts(*objects : UNDERSCORE) : Nil&lt;br/&gt;puts : Nil&lt;br/&gt;puts(obj) : Nil&lt;br/&gt;puts(string : String) : Nil puts&lt;/a&gt;, &lt;a href=&quot;../io#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;../io#read_at(offset,bytesize,&amp;amp;block)-instance-method&quot;&gt; read_at(offset, bytesize, &amp;amp;block) read_at&lt;/a&gt;, &lt;a href=&quot;../io#read_byte:UInt8?-instance-method&quot;&gt; read_byte : UInt8? read_byte&lt;/a&gt;, &lt;a href=&quot;../io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; read_bytes(type, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) read_bytes&lt;/a&gt;, &lt;a href=&quot;../io#read_char:Char?-instance-method&quot;&gt; read_char : Char? read_char&lt;/a&gt;, &lt;a href=&quot;../io#read_fully(slice:Bytes)-instance-method&quot;&gt; read_fully(slice : Bytes) read_fully&lt;/a&gt;, &lt;a href=&quot;../io#read_fully?(slice:Bytes)-instance-method&quot;&gt; read_fully?(slice : Bytes) read_fully?&lt;/a&gt;, &lt;a href=&quot;../io#read_line(*args,**options):String-instance-method&quot;&gt; read_line(*args, **options) : String read_line&lt;/a&gt;, &lt;a href=&quot;../io#read_string(bytesize:Int):String-instance-method&quot;&gt; read_string(bytesize : Int) : String read_string&lt;/a&gt;, &lt;a href=&quot;../io#read_utf8(slice:Bytes)-instance-method&quot;&gt; read_utf8(slice : Bytes) read_utf8&lt;/a&gt;, &lt;a href=&quot;../io#read_utf8_byte-instance-method&quot;&gt; read_utf8_byte read_utf8_byte&lt;/a&gt;, &lt;a href=&quot;../io#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;../io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt; seek(offset, whence : Seek = Seek::Set) seek&lt;/a&gt;, &lt;a href=&quot;../io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt; set_encoding(encoding : String, invalid : Symbol? = nil) set_encoding&lt;/a&gt;, &lt;a href=&quot;../io#skip(bytes_count:Int):Nil-instance-method&quot;&gt; skip(bytes_count : Int) : Nil skip&lt;/a&gt;, &lt;a href=&quot;../io#skip_to_end:Nil-instance-method&quot;&gt; skip_to_end : Nil skip_to_end&lt;/a&gt;, &lt;a href=&quot;../io#tell-instance-method&quot;&gt; tell tell&lt;/a&gt;, &lt;a href=&quot;../io#tty?:Bool-instance-method&quot;&gt; tty? : Bool tty?&lt;/a&gt;, &lt;a href=&quot;../io#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;, &lt;a href=&quot;../io#write_byte(byte:UInt8)-instance-method&quot;&gt; write_byte(byte : UInt8) write_byte&lt;/a&gt;, &lt;a href=&quot;../io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; write_bytes(object, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) write_bytes&lt;/a&gt;, &lt;a href=&quot;../io#write_utf8(slice:Bytes)-instance-method&quot;&gt; write_utf8(slice : Bytes) write_utf8&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../io#self-instance-method&quot;&gt;&amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt;，&lt;a href=&quot;../io#close-instance-method&quot;&gt;关闭关闭&lt;/a&gt;，&lt;a href=&quot;../io#closed?-instance-method&quot;&gt;关闭？关闭？&lt;/a&gt;，&lt;a href=&quot;../io#each_byte(&amp;amp;block):Nil-instance-method&quot;&gt;each_byte（＆block）：Nil &lt;br/&gt;each_byte each_byte&lt;/a&gt;，&lt;a href=&quot;../io#each_char(&amp;amp;block):Nil-instance-method&quot;&gt;each_char（＆block）：Nil &lt;br/&gt;each_char each_char&lt;/a&gt;，each_line &lt;a href=&quot;../io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt;（* args，** options，＆block：String-&amp;gt;）：Nil &lt;br/&gt;each_line（* args，** options）each_line&lt;/a&gt;，&lt;a href=&quot;../io#encoding:String-instance-method&quot;&gt;编码：String编码&lt;/a&gt;，&lt;a href=&quot;../io#flush-instance-method&quot;&gt;刷新，刷新&lt;/a&gt;，&lt;a href=&quot;../io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;gets（定界符：Char，限制：Int，chomp = false）：字符串？&lt;br/&gt;gets（定界符：Char，chomp = false）：字符串？&lt;br/&gt;gets（chomp = true）：字符串？&lt;br/&gt;gets（limit：Int，chomp = false）：字符串？&lt;br/&gt;gets（delimiter：String，chomp = false）：字符串？得到&lt;/a&gt;，&lt;a href=&quot;../io#gets_to_end:String-instance-method&quot;&gt;gets_to_end：字符串gets_to_end&lt;/a&gt;，&lt;a href=&quot;../io#peek:Bytes?-instance-method&quot;&gt;peek：字节？ peek&lt;/a&gt;，&lt;a href=&quot;../io#pos-instance-method&quot;&gt;pos pos&lt;/a&gt;，&lt;a href=&quot;../io#pos=(value)-instance-method&quot;&gt;pos =（value）pos =&lt;/a&gt;，&lt;a href=&quot;../io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;print（* objects：UNDERSCORE）：Nil &lt;br/&gt;print（obj）：Nil print&lt;/a&gt;，&lt;a href=&quot;../io#printf(format_string,*args):Nil-instance-method&quot;&gt;printf（format_string，* args）：Nil &lt;br/&gt;printf（format_string，args：Array | Tuple）： Nil printf&lt;/a&gt;，&lt;a href=&quot;../io#puts(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;puts（* objects：UNDERSCORE）：Nil &lt;br/&gt;puts：Nil &lt;br/&gt;puts（obj）：Nil &lt;br/&gt;puts（string：String）：Nil puts&lt;/a&gt;，&lt;a href=&quot;../io#read(slice:Bytes)-instance-method&quot;&gt;read（slice：Bytes）read&lt;/a&gt;，&lt;a href=&quot;../io#read_at(offset,bytesize,&amp;amp;block)-instance-method&quot;&gt;read_at（offset，bytesize，＆block）read_at&lt;/a&gt;，&lt;a href=&quot;../io#read_byte:UInt8?-instance-method&quot;&gt;read_byte ：UInt8？ read_byte&lt;/a&gt;，&lt;a href=&quot;../io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;read_bytes（类型，格式：IO :: ByteFormat = IO :: ByteFormat :: SystemEndian）read_bytes&lt;/a&gt;，&lt;a href=&quot;../io#read_char:Char?-instance-method&quot;&gt;read_char：字符？ read_char&lt;/a&gt;，&lt;a href=&quot;../io#read_fully(slice:Bytes)-instance-method&quot;&gt;read_fully（slice：Bytes）read_fully&lt;/a&gt;，&lt;a href=&quot;../io#read_fully?(slice:Bytes)-instance-method&quot;&gt;read_fully？（slice：Bytes）read_fully？&lt;/a&gt;，&lt;a href=&quot;../io#read_line(*args,**options):String-instance-method&quot;&gt;read_line（* args，** options）：字符串read_line&lt;/a&gt;，&lt;a href=&quot;../io#read_string(bytesize:Int):String-instance-method&quot;&gt;read_string（bytesize：Int）：字符串read_string&lt;/a&gt;，&lt;a href=&quot;../io#read_utf8(slice:Bytes)-instance-method&quot;&gt;read_utf8（slice：Bytes）read_utf8&lt;/a&gt;，&lt;a href=&quot;../io#read_utf8_byte-instance-method&quot;&gt;read_utf8_byte read_utf8_byte&lt;/a&gt;，&lt;a href=&quot;../io#rewind-instance-method&quot;&gt;倒带倒带&lt;/a&gt;，&lt;a href=&quot;../io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt;seek（offset，whence：Seek = Seek :: Set ）seek&lt;/a&gt;，&lt;a href=&quot;../io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt;set_encoding（编码：字符串，无效：Symbol？= nil）set_encoding&lt;/a&gt;，&lt;a href=&quot;../io#skip(bytes_count:Int):Nil-instance-method&quot;&gt;skip（bytes_count：Int）：Nil skip&lt;/a&gt;，&lt;a href=&quot;../io#skip_to_end:Nil-instance-method&quot;&gt;skip_to_end：Nil skip_to_end&lt;/a&gt;，&lt;a href=&quot;../io#tell-instance-method&quot;&gt;告诉&lt;/a&gt;Tell，&lt;a href=&quot;../io#tty?:Bool-instance-method&quot;&gt;tty？ ：布尔蒂？&lt;/a&gt;，&lt;a href=&quot;../io#write(slice:Bytes):Nil-instance-method&quot;&gt;write（slice：Bytes）：无写&lt;/a&gt;，&lt;a href=&quot;../io#write_byte(byte:UInt8)-instance-method&quot;&gt;write_byte（byte：UInt8）write_byte&lt;/a&gt;，&lt;a href=&quot;../io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;write_bytes（object，format：IO :: ByteFormat = IO :: ByteFormat :: SystemEndian）write_bytes&lt;/a&gt;，&lt;a href=&quot;../io#write_utf8(slice:Bytes)-instance-method&quot;&gt;write_utf8（slice：Bytes）write_utf8&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5879682801f2c7d5a4aa27c31c8832911aa05fb6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/buffered#buffer_size-instance-method&quot;&gt; buffer_size buffer_size&lt;/a&gt;, &lt;a href=&quot;../io/buffered#buffer_size=(value)-instance-method&quot;&gt; buffer_size=(value) buffer_size=&lt;/a&gt;, &lt;a href=&quot;../io/buffered#close:Nil-instance-method&quot;&gt; close : Nil close&lt;/a&gt;, &lt;a href=&quot;../io/buffered#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;../io/buffered#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;../io/buffered#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;../io/buffered#read_buffering=(read_buffering)-instance-method&quot;&gt; read_buffering=(read_buffering) read_buffering=&lt;/a&gt;, &lt;a href=&quot;../io/buffered#read_buffering?-instance-method&quot;&gt; read_buffering? read_buffering?&lt;/a&gt;, &lt;a href=&quot;../io/buffered#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;../io/buffered#sync=(sync)-instance-method&quot;&gt; sync=(sync) sync=&lt;/a&gt;, &lt;a href=&quot;../io/buffered#sync?-instance-method&quot;&gt; sync? sync?&lt;/a&gt;, &lt;a href=&quot;../io/buffered#unbuffered_close-instance-method&quot;&gt; unbuffered_close unbuffered_close&lt;/a&gt;, &lt;a href=&quot;../io/buffered#unbuffered_flush-instance-method&quot;&gt; unbuffered_flush unbuffered_flush&lt;/a&gt;, &lt;a href=&quot;../io/buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt; unbuffered_read(slice : Bytes) unbuffered_read&lt;/a&gt;, &lt;a href=&quot;../io/buffered#unbuffered_rewind-instance-method&quot;&gt; unbuffered_rewind unbuffered_rewind&lt;/a&gt;, &lt;a href=&quot;../io/buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt; unbuffered_write(slice : Bytes) unbuffered_write&lt;/a&gt;, &lt;a href=&quot;../io/buffered#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../io/buffered#buffer_size-instance-method&quot;&gt;buffer_size buffer_size&lt;/a&gt;，&lt;a href=&quot;../io/buffered#buffer_size=(value)-instance-method&quot;&gt;buffer_size =（value）buffer_size =&lt;/a&gt;，&lt;a href=&quot;../io/buffered#close:Nil-instance-method&quot;&gt;close：无关闭&lt;/a&gt;，&lt;a href=&quot;../io/buffered#flush-instance-method&quot;&gt;冲洗刷新&lt;/a&gt;，&lt;a href=&quot;../io/buffered#peek:Bytes?-instance-method&quot;&gt;偷看：字节？偷看&lt;/a&gt;，&lt;a href=&quot;../io/buffered#read(slice:Bytes)-instance-method&quot;&gt;read（slice：Bytes）read&lt;/a&gt;，&lt;a href=&quot;../io/buffered#read_buffering=(read_buffering)-instance-method&quot;&gt;read_buffering =（read_buffering）read_buffering =&lt;/a&gt;，&lt;a href=&quot;../io/buffered#read_buffering?-instance-method&quot;&gt;read_buffering吗？ read_buffering？&lt;/a&gt;，&lt;a href=&quot;../io/buffered#rewind-instance-method&quot;&gt;快退&lt;/a&gt;，快退，&lt;a href=&quot;../io/buffered#sync=(sync)-instance-method&quot;&gt;sync =（sync）sync =&lt;/a&gt;，&lt;a href=&quot;../io/buffered#sync?-instance-method&quot;&gt;同步吗？同步？&lt;/a&gt;，&lt;a href=&quot;../io/buffered#unbuffered_close-instance-method&quot;&gt;unbuffered_close unbuffered_close&lt;/a&gt;，&lt;a href=&quot;../io/buffered#unbuffered_flush-instance-method&quot;&gt;unbuffered_flush unbuffered_flush&lt;/a&gt;，&lt;a href=&quot;../io/buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt;unbuffered_read（slice：Bytes）unbuffered_read&lt;/a&gt;，&lt;a href=&quot;../io/buffered#unbuffered_rewind-instance-method&quot;&gt;unbuffered_rewind unbuffered_rewind&lt;/a&gt;，&lt;a href=&quot;../io/buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt;unbuffered_write（slice：Bytes）unbuffered_write&lt;/a&gt;，&lt;a href=&quot;../io/buffered#write(slice:Bytes):Nil-instance-method&quot;&gt;write（slice：Bytes）：无写入&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5fa461d07b60342a130308042d824c8d2a94edbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../iterable#chunk(reuse=false,&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; chunk(reuse = false, &amp;amp;block : T -&amp;gt; U) forall U chunk&lt;/a&gt;, &lt;a href=&quot;../iterable#chunk_while(reuse:Bool%7CArray(T)=false,&amp;amp;block:T,T-%3EB)forallB-instance-method&quot;&gt; chunk_while(reuse : Bool | Array(T) = false, &amp;amp;block : T, T -&amp;gt; B) forall B chunk_while&lt;/a&gt;, &lt;a href=&quot;../iterable#cycle(n)-instance-method&quot;&gt; cycle(n)&lt;br/&gt;cycle cycle&lt;/a&gt;, &lt;a href=&quot;../iterable#each-instance-method&quot;&gt; each each&lt;/a&gt;, &lt;a href=&quot;../iterable#each_cons(count:Int,reuse=false)-instance-method&quot;&gt; each_cons(count : Int, reuse = false) each_cons&lt;/a&gt;, &lt;a href=&quot;../iterable#each_slice(count:Int,reuse=false)-instance-method&quot;&gt; each_slice(count : Int, reuse = false) each_slice&lt;/a&gt;, &lt;a href=&quot;../iterable#each_with_index(offset=0)-instance-method&quot;&gt; each_with_index(offset = 0) each_with_index&lt;/a&gt;, &lt;a href=&quot;../iterable#each_with_object(obj)-instance-method&quot;&gt; each_with_object(obj) each_with_object&lt;/a&gt;, &lt;a href=&quot;../iterable#slice_after(reuse:Bool%7CArray(T)=false,&amp;amp;block:T-%3EB)forallB-instance-method&quot;&gt; slice_after(reuse : Bool | Array(T) = false, &amp;amp;block : T -&amp;gt; B) forall B&lt;br/&gt;slice_after(pattern, reuse : Bool | Array(T) = false) slice_after&lt;/a&gt;, &lt;a href=&quot;../iterable#slice_before(reuse:Bool%7CArray(T)=false,&amp;amp;block:T-%3EB)forallB-instance-method&quot;&gt; slice_before(reuse : Bool | Array(T) = false, &amp;amp;block : T -&amp;gt; B) forall B&lt;br/&gt;slice_before(pattern, reuse : Bool | Array(T) = false) slice_before&lt;/a&gt;, &lt;a href=&quot;../iterable#slice_when(reuse:Bool%7CArray(T)=false,&amp;amp;block:T,T-%3EB)forallB-instance-method&quot;&gt; slice_when(reuse : Bool | Array(T) = false, &amp;amp;block : T, T -&amp;gt; B) forall B slice_when&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../iterable#chunk(reuse=false,&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;块（重用=假，＆块：笔- &amp;gt; U）的forall&amp;uuml;块&lt;/a&gt;，&lt;a href=&quot;../iterable#chunk_while(reuse:Bool%7CArray(T)=false,&amp;amp;block:T,T-%3EB)forallB-instance-method&quot;&gt;chunk_while（重用：布尔|阵列（T）=假，＆块：T，T - &amp;gt; B）的forall乙chunk_while&lt;/a&gt;，&lt;a href=&quot;../iterable#cycle(n)-instance-method&quot;&gt;周期（n）的&lt;br/&gt;周期循环&lt;/a&gt;，&lt;a href=&quot;../iterable#each-instance-method&quot;&gt;each each&lt;/a&gt;，&lt;a href=&quot;../iterable#each_cons(count:Int,reuse=false)-instance-method&quot;&gt;each_cons（count：Int，复用=虚假）each_cons&lt;/a&gt;，&lt;a href=&quot;../iterable#each_slice(count:Int,reuse=false)-instance-method&quot;&gt;each_slice（count：Int，复用=虚假）each_slice&lt;/a&gt;，&lt;a href=&quot;../iterable#each_with_index(offset=0)-instance-method&quot;&gt;each_with_index（offset = 0）each_with_index&lt;/a&gt;，&lt;a href=&quot;../iterable#each_with_object(obj)-instance-method&quot;&gt;each_with_object（obj）each_with_object&lt;/a&gt;，&lt;a href=&quot;../iterable#slice_after(reuse:Bool%7CArray(T)=false,&amp;amp;block:T-%3EB)forallB-instance-method&quot;&gt;slice_after（复用：Bool | Array（T ）= false，＆block：T-&amp;gt; B）&lt;br/&gt;for all B slice_after（pattern，复用：Bool | Array（T）= false）slice_after&lt;/a&gt;，&lt;a href=&quot;../iterable#slice_before(reuse:Bool%7CArray(T)=false,&amp;amp;block:T-%3EB)forallB-instance-method&quot;&gt;slice_before（reuse：Bool | Array（T）= false，＆block：T-&amp;gt; B）永远的B&lt;br/&gt;slice_before（模式，重复使用：Bool | Array（T）= false）slice_before&lt;/a&gt;，&lt;a href=&quot;../iterable#slice_when(reuse:Bool%7CArray(T)=false,&amp;amp;block:T,T-%3EB)forallB-instance-method&quot;&gt;slice_when（重新使用：Bool | Array（T）= false，＆block：T，T-&amp;gt; B）全部B slice_when&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bea0d7c4b37d063c027e5ccb85963c2af83db0d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../object#!:Bool-instance-method&quot;&gt; ! : Bool !&lt;/a&gt;, &lt;a href=&quot;../object#!=(other)-instance-method&quot;&gt; !=(other) !=&lt;/a&gt;, &lt;a href=&quot;../object#!~(other)-instance-method&quot;&gt; !~(other) !~&lt;/a&gt;, &lt;a href=&quot;../object#==(other)-instance-method&quot;&gt; ==(other) ==&lt;/a&gt;, &lt;a href=&quot;../object#===(other:JSON::Any)-instance-method&quot;&gt; ===(other : JSON::Any)&lt;br/&gt;===(other : YAML::Any)&lt;br/&gt;===(other) ===&lt;/a&gt;, &lt;a href=&quot;../object#=~(other)-instance-method&quot;&gt; =~(other) =~&lt;/a&gt;, &lt;a href=&quot;../object#as(type:Class)-instance-method&quot;&gt; as(type : Class) as&lt;/a&gt;, &lt;a href=&quot;../object#as?(type:Class)-instance-method&quot;&gt; as?(type : Class) as?&lt;/a&gt;, &lt;a href=&quot;../object#class-instance-method&quot;&gt; class class&lt;/a&gt;, &lt;a href=&quot;../object#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;, &lt;a href=&quot;../object#hash(hasher)-instance-method&quot;&gt; hash(hasher)&lt;br/&gt;hash hash&lt;/a&gt;, &lt;a href=&quot;../object#in?(*values:Object):Bool-instance-method&quot;&gt; in?(*values : Object) : Bool&lt;br/&gt;in?(collection) : Bool in?&lt;/a&gt;, &lt;a href=&quot;../object#inspect:String-instance-method&quot;&gt; inspect : String&lt;br/&gt;inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;../object#is_a?(type:Class):Bool-instance-method&quot;&gt; is_a?(type : Class) : Bool is_a?&lt;/a&gt;, &lt;a href=&quot;../object#itself-instance-method&quot;&gt; itself itself&lt;/a&gt;, &lt;a href=&quot;../object#nil?:Bool-instance-method&quot;&gt; nil? : Bool nil?&lt;/a&gt;, &lt;a href=&quot;../object#not_nil!-instance-method&quot;&gt; not_nil! not_nil!&lt;/a&gt;,  pretty_inspect(width = 79, newline = &quot;\n&quot;, indent = 0) : String pretty_inspect, &lt;a href=&quot;../object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt; pretty_print(pp : PrettyPrint) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;../object#responds_to?(name:Symbol):Bool-instance-method&quot;&gt; responds_to?(name : Symbol) : Bool responds_to?&lt;/a&gt;, &lt;a href=&quot;../object#tap(&amp;amp;)-instance-method&quot;&gt; tap(&amp;amp;) tap&lt;/a&gt;, &lt;a href=&quot;../object#to_json(io:IO)-instance-method&quot;&gt; to_json(io : IO)&lt;br/&gt;to_json to_json&lt;/a&gt;,  to_pretty_json(io : IO, indent : String = &quot; &quot;)</source>
          <target state="translated">&lt;a href=&quot;../object#!:Bool-instance-method&quot;&gt;！ ：布尔！&lt;/a&gt;，&lt;a href=&quot;../object#!=(other)-instance-method&quot;&gt;=（其他）=！ ，&lt;/a&gt;〜（&lt;a href=&quot;../object#!~(other)-instance-method&quot;&gt;其它）〜！ &lt;/a&gt;，&lt;a href=&quot;../object#==(other)-instance-method&quot;&gt;==（其他）==&lt;/a&gt;，&lt;a href=&quot;../object#===(other:JSON::Any)-instance-method&quot;&gt;===（其他：JSON ::任何）&lt;br/&gt;===（其它：YAML ::任何）&lt;br/&gt;=== （other）===&lt;/a&gt;，&lt;a href=&quot;../object#=~(other)-instance-method&quot;&gt;=〜（other）=〜&lt;/a&gt;，&lt;a href=&quot;../object#as(type:Class)-instance-method&quot;&gt;as（type：Class）as&lt;/a&gt;，&lt;a href=&quot;../object#as?(type:Class)-instance-method&quot;&gt;as？（type：Class）as？&lt;/a&gt;，&lt;a href=&quot;../object#class-instance-method&quot;&gt;类class&lt;/a&gt;，&lt;a href=&quot;../object#dup-instance-method&quot;&gt;dup dup&lt;/a&gt;，&lt;a href=&quot;../object#hash(hasher)-instance-method&quot;&gt;hash（哈希）&lt;br/&gt;hash hash&lt;/a&gt;，&lt;a href=&quot;../object#in?(*values:Object):Bool-instance-method&quot;&gt;in？（* values：Object）：Bool &lt;br/&gt;in？（collection）：Bool in？&lt;/a&gt;，&lt;a href=&quot;../object#inspect:String-instance-method&quot;&gt;inspect：字符串&lt;br/&gt;inspect（io：IO）：Nil inspect&lt;/a&gt;，&lt;a href=&quot;../object#is_a?(type:Class):Bool-instance-method&quot;&gt;is_a？（type：Class）：布尔is_a？&lt;/a&gt;，&lt;a href=&quot;../object#itself-instance-method&quot;&gt;自己本身&lt;/a&gt;，&lt;a href=&quot;../object#nil?:Bool-instance-method&quot;&gt;零？：布尔零？&lt;/a&gt;，&lt;a href=&quot;../object#not_nil!-instance-method&quot;&gt;not_nil！not_nil！&lt;/a&gt;，pretty_inspect（宽度= 79，换行符=&amp;ldquo; \ n&amp;rdquo;，缩进= 0）：字符串pretty_inspect，&lt;a href=&quot;../object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt;pretty_print（pp：PrettyPrint）：Nil pretty_print&lt;/a&gt;，respons_to &lt;a href=&quot;../object#responds_to?(name:Symbol):Bool-instance-method&quot;&gt;？（name：Symbol）：Bool &lt;/a&gt;responses_to ？，&lt;a href=&quot;../object#tap(&amp;amp;)-instance-method&quot;&gt;tap（＆）tap&lt;/a&gt;，&lt;a href=&quot;../object#to_json(io:IO)-instance-method&quot;&gt;to_json（io：IO）&lt;br/&gt;to_json to_json&lt;/a&gt;，to_pretty_json（io：IO，缩进：String =&amp;ldquo;&amp;rdquo;）</target>
        </trans-unit>
        <trans-unit id="9d2034ae3dd5bfd612cca234f2ec5e050cc85f20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../object#!=(other)-instance-method&quot;&gt; !=(other) !=&lt;/a&gt;, &lt;a href=&quot;../object#!~(other)-instance-method&quot;&gt; !~(other) !~&lt;/a&gt;, &lt;a href=&quot;../object#==(other)-instance-method&quot;&gt; ==(other) ==&lt;/a&gt;, &lt;a href=&quot;../object#===(other:JSON::Any)-instance-method&quot;&gt; ===(other : JSON::Any)&lt;br/&gt;===(other : YAML::Any)&lt;br/&gt;===(other) ===&lt;/a&gt;, &lt;a href=&quot;../object#=~(other)-instance-method&quot;&gt; =~(other) =~&lt;/a&gt;, &lt;a href=&quot;../object#class-instance-method&quot;&gt; class class&lt;/a&gt;, &lt;a href=&quot;../object#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;, &lt;a href=&quot;../object#hash(hasher)-instance-method&quot;&gt; hash(hasher)&lt;br/&gt;hash hash&lt;/a&gt;, &lt;a href=&quot;../object#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil&lt;br/&gt;inspect : String inspect&lt;/a&gt;, &lt;a href=&quot;../object#itself-instance-method&quot;&gt; itself itself&lt;/a&gt;, &lt;a href=&quot;../object#not_nil!-instance-method&quot;&gt; not_nil! not_nil!&lt;/a&gt;,  pretty_inspect(width = 79, newline = &quot;\n&quot;, indent = 0) : String pretty_inspect, &lt;a href=&quot;../object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt; pretty_print(pp : PrettyPrint) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;../object#tap(&amp;amp;block)-instance-method&quot;&gt; tap(&amp;amp;block) tap&lt;/a&gt;, &lt;a href=&quot;../object#to_json(io:IO)-instance-method&quot;&gt; to_json(io : IO)&lt;br/&gt;to_json to_json&lt;/a&gt;,  to_pretty_json(indent : String = &quot; &quot;)</source>
          <target state="translated">&lt;a href=&quot;../object#!=(other)-instance-method&quot;&gt;！=（其他）=！ ，&lt;/a&gt;〜（&lt;a href=&quot;../object#!~(other)-instance-method&quot;&gt;其它）〜！ &lt;/a&gt;，&lt;a href=&quot;../object#==(other)-instance-method&quot;&gt;==（其他）==&lt;/a&gt;，&lt;a href=&quot;../object#===(other:JSON::Any)-instance-method&quot;&gt;===（其他：JSON ::任何）&lt;br/&gt;===（其它：YAML ::任何）&lt;br/&gt;===（其他）===&lt;/a&gt;，&lt;a href=&quot;../object#=~(other)-instance-method&quot;&gt;=〜（其他）=〜&lt;/a&gt;，&lt;a href=&quot;../object#class-instance-method&quot;&gt;类class&lt;/a&gt;，&lt;a href=&quot;../object#dup-instance-method&quot;&gt;dup dup&lt;/a&gt;，&lt;a href=&quot;../object#hash(hasher)-instance-method&quot;&gt;hash（hasher）&lt;br/&gt;hash hash&lt;/a&gt;，&lt;a href=&quot;../object#inspect(io:IO):Nil-instance-method&quot;&gt;inspect（io：IO）：Nil &lt;br/&gt;inspect：字符串inspect&lt;/a&gt;，&lt;a href=&quot;../object#itself-instance-method&quot;&gt;本身本身&lt;/a&gt;，&lt;a href=&quot;../object#not_nil!-instance-method&quot;&gt;not_nil！ not_nil！&lt;/a&gt;，pretty_inspect（宽度= 79，换行符=&amp;ldquo; \ n&amp;rdquo;，缩进= 0）：字符串pretty_inspect，&lt;a href=&quot;../object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt;pretty_print（pp：PrettyPrint）：Nil pretty_print&lt;/a&gt;，&lt;a href=&quot;../object#tap(&amp;amp;block)-instance-method&quot;&gt;tap（＆block）tap&lt;/a&gt;，&lt;a href=&quot;../object#to_json(io:IO)-instance-method&quot;&gt;to_json（io：IO）&lt;br/&gt;to_json to_json&lt;/a&gt;，to_pretty_json（indent：String =&amp;ldquo;&amp;rdquo;）</target>
        </trans-unit>
        <trans-unit id="e2be3ac21fec9de0d6902fbbd513fabad23ef09d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../object#from_json(string_or_io,root:String)-class-method&quot;&gt; from_json(string_or_io, root : String)&lt;br/&gt;from_json(string_or_io) from_json&lt;/a&gt;, &lt;a href=&quot;../object#from_yaml(string_or_io:String%7CIO)-class-method&quot;&gt; from_yaml(string_or_io : String | IO) from_yaml&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../object#from_json(string_or_io,root:String)-class-method&quot;&gt;from_json（string_or_io，root：字符串）&lt;br/&gt;from_json（string_or_io）from_json&lt;/a&gt;，&lt;a href=&quot;../object#from_yaml(string_or_io:String%7CIO)-class-method&quot;&gt;from_yaml（string_or_io：String | IO）from_yaml&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f99dd689cccdf20d98a0babc70b98f08c1ce9759" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../object#from_json(string_or_io,root:String):self-class-method&quot;&gt; from_json(string_or_io, root : String) : self&lt;br/&gt;from_json(string_or_io) : self from_json&lt;/a&gt;, &lt;a href=&quot;../object#from_yaml(string_or_io:String%7CIO):self-class-method&quot;&gt; from_yaml(string_or_io : String | IO) : self from_yaml&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../object#from_json(string_or_io,root:String):self-class-method&quot;&gt;from_json（string_or_io，root：String）：自我&lt;br/&gt;from_json（string_or_io）：自我from_json&lt;/a&gt;，&lt;a href=&quot;../object#from_yaml(string_or_io:String%7CIO):self-class-method&quot;&gt;from_yaml（string_or_io：String | IO）：自我from_yaml&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="70bd99634417f7d5bbff76b29a278934866395e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../random#base64(n:Int=16):String-instance-method&quot;&gt; base64(n : Int = 16) : String base64&lt;/a&gt;, &lt;a href=&quot;../random#hex(n:Int=16):String-instance-method&quot;&gt; hex(n : Int = 16) : String hex&lt;/a&gt;, &lt;a href=&quot;../random#next_bool:Bool-instance-method&quot;&gt; next_bool : Bool next_bool&lt;/a&gt;, &lt;a href=&quot;../random#next_float:Float64-instance-method&quot;&gt; next_float : Float64 next_float&lt;/a&gt;, &lt;a href=&quot;../random#next_int:Int32-instance-method&quot;&gt; next_int : Int32 next_int&lt;/a&gt;, &lt;a href=&quot;../random#next_u-instance-method&quot;&gt; next_u next_u&lt;/a&gt;, &lt;a href=&quot;../random#rand(range:Range(Int,Int)):Int-instance-method&quot;&gt; rand(range : Range(Int, Int)) : Int&lt;br/&gt;rand(max : Int) : Int&lt;br/&gt;rand : Float64&lt;br/&gt;rand(type : UInt64.class) : UInt64&lt;br/&gt;rand(type : Int64.class) : Int64&lt;br/&gt;rand(type : UInt32.class) : UInt32&lt;br/&gt;rand(type : Int32.class) : Int32&lt;br/&gt;rand(type : UInt16.class) : UInt16&lt;br/&gt;rand(type : Int16.class) : Int16&lt;br/&gt;rand(type : UInt8.class) : UInt8&lt;br/&gt;rand(type : Int8.class) : Int8&lt;br/&gt;rand(max : Float) : Float64&lt;br/&gt;rand(type : StaticArray(Int64, UNDERSCORE).class)&lt;br/&gt;rand(type : StaticArray(UInt32, UNDERSCORE).class)&lt;br/&gt;rand(type : StaticArray(Int32, UNDERSCORE).class)&lt;br/&gt;rand(type : StaticArray(UInt16, UNDERSCORE).class)&lt;br/&gt;rand(type : StaticArray(Int16, UNDERSCORE).class)&lt;br/&gt;rand(type : StaticArray(UInt8, UNDERSCORE).class)&lt;br/&gt;rand(type : StaticArray(Int8, UNDERSCORE).class)&lt;br/&gt;rand(range : Range(Float, Float)) : Float&lt;br/&gt;rand(type : StaticArray(UInt64, UNDERSCORE).class) rand&lt;/a&gt;, &lt;a href=&quot;../random#random_bytes(n:Int=16):Bytes-instance-method&quot;&gt; random_bytes(n : Int = 16) : Bytes&lt;br/&gt;random_bytes(buf : Bytes) : Nil random_bytes&lt;/a&gt;, &lt;a href=&quot;../random#urlsafe_base64(n:Int=16,padding=false):String-instance-method&quot;&gt; urlsafe_base64(n : Int = 16, padding = false) : String urlsafe_base64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../random#base64(n:Int=16):String-instance-method&quot;&gt;base64（n：Int = 16）：字符串base64&lt;/a&gt;，&lt;a href=&quot;../random#hex(n:Int=16):String-instance-method&quot;&gt;hex（n：Int = 16）：字符串hex&lt;/a&gt;，&lt;a href=&quot;../random#next_bool:Bool-instance-method&quot;&gt;next_bool：Bool next_bool&lt;/a&gt;，&lt;a href=&quot;../random#next_float:Float64-instance-method&quot;&gt;next_float：Float64 next_float&lt;/a&gt;，&lt;a href=&quot;../random#next_int:Int32-instance-method&quot;&gt;next_int：Int32 next_int&lt;/a&gt;，&lt;a href=&quot;../random#next_u-instance-method&quot;&gt;next_u next_u&lt;/a&gt;，&lt;a href=&quot;../random#rand(range:Range(Int,Int)):Int-instance-method&quot;&gt;rand（范围：Range（Int， Int））：Int &lt;br/&gt;rand（max：Int）：Int &lt;br/&gt;rand：Float64 &lt;br/&gt;rand（type：UInt64.class）：UInt64 &lt;br/&gt;rand（type：Int64.class）：Int64 &lt;br/&gt;rand（type：UInt32.class）：UInt32 &lt;br/&gt;rand（type： Int32.class）：Int32 &lt;br/&gt;rand（类型：UInt16.class）：UInt16 &lt;br/&gt;rand（类型：Int16.class）：Int16 &lt;br/&gt;rand（类型：UInt8.class）：UInt8 &lt;br/&gt;rand（类型：Int8.class）：Int8 &lt;br/&gt;rand（最大： Float）：Float64&lt;br/&gt;兰特（类型：StaticArray（Int64类型，下划线）的.class）&lt;br/&gt;兰特（类型：StaticArray（UInt32的，下划线）的.class）&lt;br/&gt;兰特（类型：StaticArray（的Int32，下划线）的.class）&lt;br/&gt;兰特（类型：StaticArray（UINT16，下划线）。类）&lt;br/&gt;兰特（类型：StaticArray（Int16类型，下划线）的.class）&lt;br/&gt;兰特（类型：StaticArray（UINT8，下划线）的.class）&lt;br/&gt;兰特（类型：StaticArray（INT8，下划线）的.class）&lt;br/&gt;兰特（范围：范围（浮动，浮动））：浮点&lt;br/&gt;rand（type：StaticArray（UInt64，UNDERSCORE）.class）rand&lt;/a&gt;，&lt;a href=&quot;../random#random_bytes(n:Int=16):Bytes-instance-method&quot;&gt;random_bytes（n：Int = 16）：字节&lt;br/&gt;random_bytes（buf：Bytes）：Nil random_bytes&lt;/a&gt;，&lt;a href=&quot;../random#urlsafe_base64(n:Int=16,padding=false):String-instance-method&quot;&gt;urlsafe_base64（n：Int = 16，填充= false ）：字符串urlsafe_base64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20020739e3fdf2902d5abbcad443221725c274e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../reference#==(other:self)-instance-method&quot;&gt; ==(other : self)&lt;br/&gt;==(other : JSON::Any)&lt;br/&gt;==(other : YAML::Any)&lt;br/&gt;==(other) ==&lt;/a&gt;, &lt;a href=&quot;../reference#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;, &lt;a href=&quot;../reference#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;../reference#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;../reference#object_id:UInt64-instance-method&quot;&gt; object_id : UInt64 object_id&lt;/a&gt;, &lt;a href=&quot;../reference#pretty_print(pp):Nil-instance-method&quot;&gt; pretty_print(pp) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;../reference#same?(other:Reference)-instance-method&quot;&gt; same?(other : Reference)&lt;br/&gt;same?(other : Nil) same?&lt;/a&gt;, &lt;a href=&quot;../reference#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../reference#==(other:self)-instance-method&quot;&gt;==（other：self）&lt;br/&gt;==（other：JSON :: Any）&lt;br/&gt;==（other：YAML :: Any）&lt;br/&gt;==（other）==&lt;/a&gt;，&lt;a href=&quot;../reference#dup-instance-method&quot;&gt;dup dup&lt;/a&gt;，&lt;a href=&quot;../reference#hash(hasher)-instance-method&quot;&gt;hash（哈希）hash&lt;/a&gt;，&lt;a href=&quot;../reference#inspect(io:IO):Nil-instance-method&quot;&gt;inspect（io：IO） ：无检查&lt;/a&gt;，&lt;a href=&quot;../reference#object_id:UInt64-instance-method&quot;&gt;object_id：UInt64 object_id&lt;/a&gt;，&lt;a href=&quot;../reference#pretty_print(pp):Nil-instance-method&quot;&gt;pretty_print（pp）：无pretty_print&lt;/a&gt;，是否&lt;a href=&quot;../reference#same?(other:Reference)-instance-method&quot;&gt;相同？（其他：参考）是否&lt;br/&gt;相同（其他：无）？&lt;/a&gt;，&lt;a href=&quot;../reference#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：无to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4cc1a2c68f42f005bcf057eab85b77df6d2aa78a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../socket#alpn_protocol-instance-method&quot;&gt; alpn_protocol alpn_protocol&lt;/a&gt;, &lt;a href=&quot;../socket#cipher:String-instance-method&quot;&gt; cipher : String cipher&lt;/a&gt;, &lt;a href=&quot;../socket#closed?:Bool-instance-method&quot;&gt; closed? : Bool closed?&lt;/a&gt;, &lt;a href=&quot;../socket#finalize-instance-method&quot;&gt; finalize finalize&lt;/a&gt;, &lt;a href=&quot;../socket#hostname:String?-instance-method&quot;&gt; hostname : String? hostname&lt;/a&gt;, &lt;a href=&quot;../socket#local_address-instance-method&quot;&gt; local_address local_address&lt;/a&gt;, &lt;a href=&quot;../socket#read_timeout-instance-method&quot;&gt; read_timeout read_timeout&lt;/a&gt;, &lt;a href=&quot;../socket#read_timeout=(value)-instance-method&quot;&gt; read_timeout=(value) read_timeout=&lt;/a&gt;, &lt;a href=&quot;../socket#remote_address-instance-method&quot;&gt; remote_address remote_address&lt;/a&gt;, &lt;a href=&quot;../socket#sync_close=(sync_close:Bool)-instance-method&quot;&gt; sync_close=(sync_close : Bool) sync_close=&lt;/a&gt;, &lt;a href=&quot;../socket#sync_close?:Bool-instance-method&quot;&gt; sync_close? : Bool sync_close?&lt;/a&gt;, &lt;a href=&quot;../socket#tls_version:String-instance-method&quot;&gt; tls_version : String tls_version&lt;/a&gt;, &lt;a href=&quot;../socket#unbuffered_close-instance-method&quot;&gt; unbuffered_close unbuffered_close&lt;/a&gt;, &lt;a href=&quot;../socket#unbuffered_flush-instance-method&quot;&gt; unbuffered_flush unbuffered_flush&lt;/a&gt;, &lt;a href=&quot;../socket#unbuffered_read(slice:Bytes)-instance-method&quot;&gt; unbuffered_read(slice : Bytes) unbuffered_read&lt;/a&gt;, &lt;a href=&quot;../socket#unbuffered_rewind-instance-method&quot;&gt; unbuffered_rewind unbuffered_rewind&lt;/a&gt;, &lt;a href=&quot;../socket#unbuffered_write(slice:Bytes)-instance-method&quot;&gt; unbuffered_write(slice : Bytes) unbuffered_write&lt;/a&gt;, &lt;a href=&quot;../socket#write_timeout-instance-method&quot;&gt; write_timeout write_timeout&lt;/a&gt;, &lt;a href=&quot;../socket#write_timeout=(value)-instance-method&quot;&gt; write_timeout=(value) write_timeout=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../socket#alpn_protocol-instance-method&quot;&gt;alpn_protocol alpn_protocol&lt;/a&gt;，&lt;a href=&quot;../socket#cipher:String-instance-method&quot;&gt;cipher：字符串cipher&lt;/a&gt;，&lt;a href=&quot;../socket#closed?:Bool-instance-method&quot;&gt;关闭了吗？ ：布尔关闭了吗？&lt;/a&gt;，&lt;a href=&quot;../socket#finalize-instance-method&quot;&gt;finalize finalize&lt;/a&gt;，&lt;a href=&quot;../socket#hostname:String?-instance-method&quot;&gt;主机名：String？主机名&lt;/a&gt;，&lt;a href=&quot;../socket#local_address-instance-method&quot;&gt;local_address local_address&lt;/a&gt;，&lt;a href=&quot;../socket#read_timeout-instance-method&quot;&gt;read_timeout read_timeout&lt;/a&gt;，&lt;a href=&quot;../socket#read_timeout=(value)-instance-method&quot;&gt;read_timeout =（值）read_timeout =&lt;/a&gt;，&lt;a href=&quot;../socket#remote_address-instance-method&quot;&gt;REMOTE_ADDRESS REMOTE_ADDRESS&lt;/a&gt;，&lt;a href=&quot;../socket#sync_close=(sync_close:Bool)-instance-method&quot;&gt;sync_close =（sync_close：BOOL）sync_close =&lt;/a&gt;，&lt;a href=&quot;../socket#sync_close?:Bool-instance-method&quot;&gt;sync_close？ ：布尔sync_close？&lt;/a&gt;，&lt;a href=&quot;../socket#tls_version:String-instance-method&quot;&gt;tls_version：字符串tls_version&lt;/a&gt;，&lt;a href=&quot;../socket#unbuffered_close-instance-method&quot;&gt;unbuffered_close unbuffered_close&lt;/a&gt;，&lt;a href=&quot;../socket#unbuffered_flush-instance-method&quot;&gt;unbuffered_flush unbuffered_flush&lt;/a&gt;，&lt;a href=&quot;../socket#unbuffered_read(slice:Bytes)-instance-method&quot;&gt;unbuffered_read（slice：Bytes）unbuffered_read&lt;/a&gt;，&lt;a href=&quot;../socket#unbuffered_rewind-instance-method&quot;&gt;unbuffered_rewind unbuffered_rewind&lt;/a&gt;，&lt;a href=&quot;../socket#unbuffered_write(slice:Bytes)-instance-method&quot;&gt;unbuffered_write（slice：Bytes）unbuffered_write&lt;/a&gt;，&lt;a href=&quot;../socket#write_timeout-instance-method&quot;&gt;write_timeout write_timeout&lt;/a&gt;，&lt;a href=&quot;../socket#write_timeout=(value)-instance-method&quot;&gt;write_timeout =（value）write_timeout =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d8e53f52b913a01cb3666e11d9962780add1c15f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../struct#==(other):Bool-instance-method&quot;&gt; ==(other) : Bool ==&lt;/a&gt;, &lt;a href=&quot;../struct#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;../struct#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;../struct#pretty_print(pp):Nil-instance-method&quot;&gt; pretty_print(pp) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;../struct#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../struct#==(other):Bool-instance-method&quot;&gt;==（other）：Bool ==&lt;/a&gt;，&lt;a href=&quot;../struct#hash(hasher)-instance-method&quot;&gt;hash（哈希）hash&lt;/a&gt;，&lt;a href=&quot;../struct#inspect(io:IO):Nil-instance-method&quot;&gt;inspect（io：IO）：无检查&lt;/a&gt;，&lt;a href=&quot;../struct#pretty_print(pp):Nil-instance-method&quot;&gt;pretty_print（pp）：Nil pretty_print&lt;/a&gt;，&lt;a href=&quot;../struct#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：Nil to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f40476eb7cd05a8c8f57f220f606d8a528171b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../using_the_compiler/index#crystal-build&quot;&gt;Build the application&lt;/a&gt; and then run it.</source>
          <target state="translated">&lt;a href=&quot;../using_the_compiler/index#crystal-build&quot;&gt;生成应用程序&lt;/a&gt;，然后运行它。</target>
        </trans-unit>
        <trans-unit id="b5b3e3cf30e3a160e313d79fd37672ca9a6c9884" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../value#==(other:JSON::Any)-instance-method&quot;&gt; ==(other : JSON::Any)&lt;br/&gt;==(other : YAML::Any)&lt;br/&gt;==(other) ==&lt;/a&gt;, &lt;a href=&quot;../value#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../value#==(other:JSON::Any)-instance-method&quot;&gt;==（other：JSON :: Any）&lt;br/&gt;==（other：YAML :: Any）&lt;br/&gt;==（other）==&lt;/a&gt;，&lt;a href=&quot;../value#dup-instance-method&quot;&gt;dup dup&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23f9db6f232397d70d7483bcc854ace69ed660ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;address#==(other)-instance-method&quot;&gt; ==(other) ==&lt;/a&gt;, &lt;a href=&quot;address#family:Family-instance-method&quot;&gt; family : Family family&lt;/a&gt;, &lt;a href=&quot;address#size:Int32-instance-method&quot;&gt; size : Int32 size&lt;/a&gt;, &lt;a href=&quot;address#to_unsafe:Pointer(LibC::Sockaddr)-instance-method&quot;&gt; to_unsafe : Pointer(LibC::Sockaddr) to_unsafe&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;address#==(other)-instance-method&quot;&gt;==（other）==&lt;/a&gt;，&lt;a href=&quot;address#family:Family-instance-method&quot;&gt;family：家庭家族&lt;/a&gt;，&lt;a href=&quot;address#size:Int32-instance-method&quot;&gt;size：Int32 size&lt;/a&gt;，&lt;a href=&quot;address#to_unsafe:Pointer(LibC::Sockaddr)-instance-method&quot;&gt;to_unsafe：Pointer（LibC :: Sockaddr）to_unsafe&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8122f58658cc3f9ef1468f2462407f1a80e29a47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;address#from(sockaddr:Pointer(LibC::Sockaddr),addrlen):Address-class-method&quot;&gt; from(sockaddr : Pointer(LibC::Sockaddr), addrlen) : Address from&lt;/a&gt;, &lt;a href=&quot;address#new(family:Family,size:Int32)-class-method&quot;&gt; new(family : Family, size : Int32) new&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;address#from(sockaddr:Pointer(LibC::Sockaddr),addrlen):Address-class-method&quot;&gt;from（sockaddr：Pointer（LibC :: Sockaddr），addrlen）：地址from&lt;/a&gt;，&lt;a href=&quot;address#new(family:Family,size:Int32)-class-method&quot;&gt;new（family：Family，大小：Int32）new&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24118c556b2e579795821b284a3c5eb835b2b4aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;astnode#!=(other:ASTNode):BoolLiteral-instance-method&quot;&gt; !=(other : ASTNode) : BoolLiteral !=&lt;/a&gt;, &lt;a href=&quot;astnode#==(other:ASTNode):BoolLiteral-instance-method&quot;&gt; ==(other : ASTNode) : BoolLiteral ==&lt;/a&gt;, &lt;a href=&quot;astnode#class_name:StringLiteral-instance-method&quot;&gt; class_name : StringLiteral class_name&lt;/a&gt;, &lt;a href=&quot;astnode#column_number:StringLiteral%7CNilLiteral-instance-method&quot;&gt; column_number : StringLiteral | NilLiteral column_number&lt;/a&gt;, &lt;a href=&quot;astnode#end_column_number:StringLiteral%7CNilLiteral-instance-method&quot;&gt; end_column_number : StringLiteral | NilLiteral end_column_number&lt;/a&gt;, &lt;a href=&quot;astnode#end_line_number:StringLiteral%7CNilLiteral-instance-method&quot;&gt; end_line_number : StringLiteral | NilLiteral end_line_number&lt;/a&gt;, &lt;a href=&quot;astnode#filename:StringLiteral%7CNilLiteral-instance-method&quot;&gt; filename : StringLiteral | NilLiteral filename&lt;/a&gt;, &lt;a href=&quot;astnode#id:MacroId-instance-method&quot;&gt; id : MacroId id&lt;/a&gt;, &lt;a href=&quot;astnode#line_number:StringLiteral%7CNilLiteral-instance-method&quot;&gt; line_number : StringLiteral | NilLiteral line_number&lt;/a&gt;, &lt;a href=&quot;astnode#raise(message):NoReturn-instance-method&quot;&gt; raise(message) : NoReturn raise&lt;/a&gt;, &lt;a href=&quot;astnode#stringify:StringLiteral-instance-method&quot;&gt; stringify : StringLiteral stringify&lt;/a&gt;, &lt;a href=&quot;astnode#symbolize:SymbolLiteral-instance-method&quot;&gt; symbolize : SymbolLiteral symbolize&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;astnode#!=(other:ASTNode):BoolLiteral-instance-method&quot;&gt;！=（other：ASTNode）：BoolLiteral！=&lt;/a&gt;，&lt;a href=&quot;astnode#==(other:ASTNode):BoolLiteral-instance-method&quot;&gt;==（other：ASTNode）：BoolLiteral ==&lt;/a&gt;，&lt;a href=&quot;astnode#class_name:StringLiteral-instance-method&quot;&gt;class_name：StringLiteral class_name&lt;/a&gt;，&lt;a href=&quot;astnode#column_number:StringLiteral%7CNilLiteral-instance-method&quot;&gt;column_number：StringLiteral | NilLiteral column_number&lt;/a&gt;，&lt;a href=&quot;astnode#end_column_number:StringLiteral%7CNilLiteral-instance-method&quot;&gt;end_column_number：StringLiteral | NilLiteral end_column_number&lt;/a&gt;，&lt;a href=&quot;astnode#end_line_number:StringLiteral%7CNilLiteral-instance-method&quot;&gt;end_line_number：StringLiteral | NilLiteral end_line_number&lt;/a&gt;，&lt;a href=&quot;astnode#filename:StringLiteral%7CNilLiteral-instance-method&quot;&gt;文件名：StringLiteral | NilLiteral文件名&lt;/a&gt;，&lt;a href=&quot;astnode#id:MacroId-instance-method&quot;&gt;id：MacroId id&lt;/a&gt;，&lt;a href=&quot;astnode#line_number:StringLiteral%7CNilLiteral-instance-method&quot;&gt;line_number：StringLiteral | NilLiteral line_number&lt;/a&gt;，&lt;a href=&quot;astnode#raise(message):NoReturn-instance-method&quot;&gt;提高（消息）：NoReturn提高&lt;/a&gt;，串&lt;a href=&quot;astnode#stringify:StringLiteral-instance-method&quot;&gt;化：StringLiteral &lt;/a&gt;串化，&lt;a href=&quot;astnode#symbolize:SymbolLiteral-instance-method&quot;&gt;象征：SymbolLiteral象征&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b814013d762f2f48a90a24105e19463f67c55d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend#close-instance-method&quot;&gt; close close&lt;/a&gt;, &lt;a href=&quot;backend#write(entry:Entry)-instance-method&quot;&gt; write(entry : Entry) write&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;backend#close-instance-method&quot;&gt;关闭关闭&lt;/a&gt;，&lt;a href=&quot;backend#write(entry:Entry)-instance-method&quot;&gt;写（entry：Entry）写&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f085101e99bff64ea0b911d80f4224bfb8df49ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;base#base64digest(data):String-class-method&quot;&gt; base64digest(data) : String&lt;br/&gt;base64digest(&amp;amp;block) : String base64digest&lt;/a&gt;, &lt;a href=&quot;base#digest(data)-class-method&quot;&gt; digest(data)&lt;br/&gt;digest(&amp;amp;block) digest&lt;/a&gt;, &lt;a href=&quot;base#hexdigest(data):String-class-method&quot;&gt; hexdigest(data) : String&lt;br/&gt;hexdigest(&amp;amp;block) : String hexdigest&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;base#base64digest(data):String-class-method&quot;&gt;base64digest（data）：字符串&lt;br/&gt;base64digest（＆block）：字符串base64digest&lt;/a&gt;，&lt;a href=&quot;base#digest(data)-class-method&quot;&gt;摘要（data）&lt;br/&gt;摘要（＆block）摘要&lt;/a&gt;，&lt;a href=&quot;base#hexdigest(data):String-class-method&quot;&gt;hexdigest（data）：字符串&lt;br/&gt;hexdigest（＆block）：字符串hexdigest&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f8f693f8749aa3062a506e9a0a52231657997b0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;base#digest:Bytes-instance-method&quot;&gt; digest : Bytes digest&lt;/a&gt;, &lt;a href=&quot;base#digest_size:Int32-instance-method&quot;&gt; digest_size : Int32 digest_size&lt;/a&gt;, &lt;a href=&quot;base#final(dst:Bytes):Bytes-instance-method&quot;&gt; final(dst : Bytes) : Bytes&lt;br/&gt;final : Bytes final&lt;/a&gt;, &lt;a href=&quot;base#final_impl(dst:Bytes):Nil-instance-method&quot;&gt; final_impl(dst : Bytes) : Nil final_impl&lt;/a&gt;, &lt;a href=&quot;base#hexdigest:String-instance-method&quot;&gt; hexdigest : String hexdigest&lt;/a&gt;, &lt;a href=&quot;base#reset:self-instance-method&quot;&gt; reset : self reset&lt;/a&gt;, &lt;a href=&quot;base#reset_impl:Nil-instance-method&quot;&gt; reset_impl : Nil reset_impl&lt;/a&gt;, &lt;a href=&quot;base#update(data:Bytes):self-instance-method&quot;&gt; update(data : Bytes) : self&lt;br/&gt;update(data) : self update&lt;/a&gt;, &lt;a href=&quot;base#update_impl(data:Bytes):Nil-instance-method&quot;&gt; update_impl(data : Bytes) : Nil update_impl&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;base#digest:Bytes-instance-method&quot;&gt;摘要：字节摘要&lt;/a&gt;，摘要_大小&lt;a href=&quot;base#digest_size:Int32-instance-method&quot;&gt;：Int32&lt;/a&gt;摘要_大小，&lt;a href=&quot;base#final(dst:Bytes):Bytes-instance-method&quot;&gt;最终（dst：字节）：字节&lt;br/&gt;最终：字节最终&lt;/a&gt;，&lt;a href=&quot;base#final_impl(dst:Bytes):Nil-instance-method&quot;&gt;final_impl（dst：字节）：无final_impl&lt;/a&gt;，&lt;a href=&quot;base#hexdigest:String-instance-method&quot;&gt;hexdigest：字符串十六进制&lt;/a&gt;，&lt;a href=&quot;base#reset:self-instance-method&quot;&gt;复位：自复位&lt;/a&gt;，复位&lt;a href=&quot;base#reset_impl:Nil-instance-method&quot;&gt;_impl：无效reset_impl&lt;/a&gt;，&lt;a href=&quot;base#update(data:Bytes):self-instance-method&quot;&gt;更新（ data：字节）：自我&lt;br/&gt;更新（data）：自我更新&lt;/a&gt;，&lt;a href=&quot;base#update_impl(data:Bytes):Nil-instance-method&quot;&gt;update_impl（data：字节）：无update_impl&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d1cf3ae61846c3c8f80656e0932717a61a4e448" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;binaryop#left:ASTNode-instance-method&quot;&gt; left : ASTNode left&lt;/a&gt;, &lt;a href=&quot;binaryop#right:ASTNode-instance-method&quot;&gt; right : ASTNode right&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;binaryop#left:ASTNode-instance-method&quot;&gt;左：ASTNode左&lt;/a&gt;，&lt;a href=&quot;binaryop#right:ASTNode-instance-method&quot;&gt;右：ASTNode右&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c5b2933f0e63742cfa3829b19d91714d645056a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;buffered#buffer_size-instance-method&quot;&gt; buffer_size buffer_size&lt;/a&gt;, &lt;a href=&quot;buffered#buffer_size=(value)-instance-method&quot;&gt; buffer_size=(value) buffer_size=&lt;/a&gt;, &lt;a href=&quot;buffered#close:Nil-instance-method&quot;&gt; close : Nil close&lt;/a&gt;, &lt;a href=&quot;buffered#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;buffered#flush_on_newline=(flush_on_newline)-instance-method&quot;&gt; flush_on_newline=(flush_on_newline) flush_on_newline=&lt;/a&gt;, &lt;a href=&quot;buffered#flush_on_newline?-instance-method&quot;&gt; flush_on_newline? flush_on_newline?&lt;/a&gt;, &lt;a href=&quot;buffered#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;buffered#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;buffered#read_buffering=(read_buffering)-instance-method&quot;&gt; read_buffering=(read_buffering) read_buffering=&lt;/a&gt;, &lt;a href=&quot;buffered#read_buffering?-instance-method&quot;&gt; read_buffering? read_buffering?&lt;/a&gt;, &lt;a href=&quot;buffered#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;buffered#sync=(sync)-instance-method&quot;&gt; sync=(sync) sync=&lt;/a&gt;, &lt;a href=&quot;buffered#sync?-instance-method&quot;&gt; sync? sync?&lt;/a&gt;, &lt;a href=&quot;buffered#unbuffered_close-instance-method&quot;&gt; unbuffered_close unbuffered_close&lt;/a&gt;, &lt;a href=&quot;buffered#unbuffered_flush-instance-method&quot;&gt; unbuffered_flush unbuffered_flush&lt;/a&gt;, &lt;a href=&quot;buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt; unbuffered_read(slice : Bytes) unbuffered_read&lt;/a&gt;, &lt;a href=&quot;buffered#unbuffered_rewind-instance-method&quot;&gt; unbuffered_rewind unbuffered_rewind&lt;/a&gt;, &lt;a href=&quot;buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt; unbuffered_write(slice : Bytes) unbuffered_write&lt;/a&gt;, &lt;a href=&quot;buffered#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;buffered#buffer_size-instance-method&quot;&gt;buffer_size buffer_size&lt;/a&gt;，&lt;a href=&quot;buffered#buffer_size=(value)-instance-method&quot;&gt;buffer_size =（value）buffer_size =&lt;/a&gt;，&lt;a href=&quot;buffered#close:Nil-instance-method&quot;&gt;close：无关闭&lt;/a&gt;，&lt;a href=&quot;buffered#flush-instance-method&quot;&gt;刷新冲洗&lt;/a&gt;，&lt;a href=&quot;buffered#flush_on_newline=(flush_on_newline)-instance-method&quot;&gt;flush_on_newline =（flush_on_newline）flush_on_newline =&lt;/a&gt;，&lt;a href=&quot;buffered#flush_on_newline?-instance-method&quot;&gt;flush_on_newline？ flush_on_newline？&lt;/a&gt;，&lt;a href=&quot;buffered#peek:Bytes?-instance-method&quot;&gt;偷看：字节？偷看&lt;/a&gt;，&lt;a href=&quot;buffered#read(slice:Bytes)-instance-method&quot;&gt;read（slice：Bytes）read&lt;/a&gt;，&lt;a href=&quot;buffered#read_buffering=(read_buffering)-instance-method&quot;&gt;read_buffering =（read_buffering）read_buffering =&lt;/a&gt;，&lt;a href=&quot;buffered#read_buffering?-instance-method&quot;&gt;read_buffering吗？ read_buffering？&lt;/a&gt;，&lt;a href=&quot;buffered#rewind-instance-method&quot;&gt;快退&lt;/a&gt;，快退，&lt;a href=&quot;buffered#sync=(sync)-instance-method&quot;&gt;sync =（sync）sync =&lt;/a&gt;，&lt;a href=&quot;buffered#sync?-instance-method&quot;&gt;同步吗？同步？&lt;/a&gt;，&lt;a href=&quot;buffered#unbuffered_close-instance-method&quot;&gt;unbuffered_close unbuffered_close&lt;/a&gt;，&lt;a href=&quot;buffered#unbuffered_flush-instance-method&quot;&gt;unbuffered_flush unbuffered_flush&lt;/a&gt;，&lt;a href=&quot;buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt;unbuffered_read（slice：Bytes）unbuffered_read&lt;/a&gt;，&lt;a href=&quot;buffered#unbuffered_rewind-instance-method&quot;&gt;unbuffered_rewind unbuffered_rewind&lt;/a&gt;，&lt;a href=&quot;buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt;unbuffered_write（slice：Bytes）unbuffered_write&lt;/a&gt;，&lt;a href=&quot;buffered#write(slice:Bytes):Nil-instance-method&quot;&gt;write（slice：Bytes）：无写&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e60e84844774339b2de434c4cf11e535f349cea8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;buffered#buffer_size-instance-method&quot;&gt; buffer_size buffer_size&lt;/a&gt;, &lt;a href=&quot;buffered#buffer_size=(value)-instance-method&quot;&gt; buffer_size=(value) buffer_size=&lt;/a&gt;, &lt;a href=&quot;buffered#close:Nil-instance-method&quot;&gt; close : Nil close&lt;/a&gt;, &lt;a href=&quot;buffered#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;buffered#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;buffered#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;buffered#read_buffering=(read_buffering)-instance-method&quot;&gt; read_buffering=(read_buffering) read_buffering=&lt;/a&gt;, &lt;a href=&quot;buffered#read_buffering?-instance-method&quot;&gt; read_buffering? read_buffering?&lt;/a&gt;, &lt;a href=&quot;buffered#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;buffered#sync=(sync)-instance-method&quot;&gt; sync=(sync) sync=&lt;/a&gt;, &lt;a href=&quot;buffered#sync?-instance-method&quot;&gt; sync? sync?&lt;/a&gt;, &lt;a href=&quot;buffered#unbuffered_close-instance-method&quot;&gt; unbuffered_close unbuffered_close&lt;/a&gt;, &lt;a href=&quot;buffered#unbuffered_flush-instance-method&quot;&gt; unbuffered_flush unbuffered_flush&lt;/a&gt;, &lt;a href=&quot;buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt; unbuffered_read(slice : Bytes) unbuffered_read&lt;/a&gt;, &lt;a href=&quot;buffered#unbuffered_rewind-instance-method&quot;&gt; unbuffered_rewind unbuffered_rewind&lt;/a&gt;, &lt;a href=&quot;buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt; unbuffered_write(slice : Bytes) unbuffered_write&lt;/a&gt;, &lt;a href=&quot;buffered#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;buffered#buffer_size-instance-method&quot;&gt;buffer_size buffer_size&lt;/a&gt;，&lt;a href=&quot;buffered#buffer_size=(value)-instance-method&quot;&gt;buffer_size =（value）buffer_size =&lt;/a&gt;，&lt;a href=&quot;buffered#close:Nil-instance-method&quot;&gt;close：无关闭&lt;/a&gt;，&lt;a href=&quot;buffered#flush-instance-method&quot;&gt;冲洗刷新&lt;/a&gt;，&lt;a href=&quot;buffered#peek:Bytes?-instance-method&quot;&gt;偷看：字节？偷看&lt;/a&gt;，&lt;a href=&quot;buffered#read(slice:Bytes)-instance-method&quot;&gt;read（slice：Bytes）read&lt;/a&gt;，&lt;a href=&quot;buffered#read_buffering=(read_buffering)-instance-method&quot;&gt;read_buffering =（read_buffering）read_buffering =&lt;/a&gt;，&lt;a href=&quot;buffered#read_buffering?-instance-method&quot;&gt;read_buffering吗？ read_buffering？&lt;/a&gt;，&lt;a href=&quot;buffered#rewind-instance-method&quot;&gt;快退&lt;/a&gt;，快退，&lt;a href=&quot;buffered#sync=(sync)-instance-method&quot;&gt;sync =（sync）sync =&lt;/a&gt;，&lt;a href=&quot;buffered#sync?-instance-method&quot;&gt;同步吗？同步？&lt;/a&gt;，&lt;a href=&quot;buffered#unbuffered_close-instance-method&quot;&gt;unbuffered_close unbuffered_close&lt;/a&gt;，&lt;a href=&quot;buffered#unbuffered_flush-instance-method&quot;&gt;unbuffered_flush unbuffered_flush&lt;/a&gt;，&lt;a href=&quot;buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt;unbuffered_read（slice：Bytes）unbuffered_read&lt;/a&gt;，&lt;a href=&quot;buffered#unbuffered_rewind-instance-method&quot;&gt;unbuffered_rewind unbuffered_rewind&lt;/a&gt;，&lt;a href=&quot;buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt;unbuffered_write（slice：Bytes）unbuffered_write&lt;/a&gt;，&lt;a href=&quot;buffered#write(slice:Bytes):Nil-instance-method&quot;&gt;write（slice：Bytes）：无写入&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ea665682e2787200c18db25a69d08dbd2bbc1e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;array&quot;&gt;Array(T)&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;array&quot;&gt;Array(T)&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="568acb6969f8911af7cbfe9fbc234f220b404c98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigdecimal&quot;&gt;BigDecimal&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigdecimal&quot;&gt;BigDecimal&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="18c88be2439a1f35aa587e08c248dd9239d442bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigfloat&quot;&gt;BigFloat&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigfloat&quot;&gt;BigFloat&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="6328975d6a362b5f5bdd7d4d0a0e5579666f8224" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigint&quot;&gt;BigInt&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigint&quot;&gt;BigInt&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="8d1464f15d9729ff33e8ecb9028e0f55e28ec17f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigrational&quot;&gt;BigRational&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigrational&quot;&gt;BigRational&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="fd82196e95bca93f65360581350ea2c80c0612f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;char&quot;&gt;Char&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;char&quot;&gt;Char&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="f9aeb5add2ced0e3076c2b56d80beaa17538894b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="99c9b2fcb2f126020d97dd6dd56f506b8077f202" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="8359a39b00cdbf91dd935dab96b9143c8ae30635" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="7329845b066eb01b37a0c706f88dedb1e5bcb977" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;int128&quot;&gt;Int128&lt;/a&gt; | &lt;a href=&quot;int16&quot;&gt;Int16&lt;/a&gt; | &lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt; | &lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt; | &lt;a href=&quot;int8&quot;&gt;Int8&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;可比&lt;/a&gt;（&lt;a href=&quot;int128&quot;&gt;Int128&lt;/a&gt; | &lt;a href=&quot;int16&quot;&gt;Int16&lt;/a&gt; | &lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt; | &lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt; | &lt;a href=&quot;int8&quot;&gt;Int8&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="e8430f6253e28c762fad4f3079e31b5e96c72606" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="d5ade85ea938ad5d9f4239612ee86e8c99d81d0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;path&quot;&gt;Path&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;path&quot;&gt;Path&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="155888b7579c44bcba4061474e9eef365e573e4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;pointer&quot;&gt;Pointer(T)&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;pointer&quot;&gt;Pointer(T)&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="4f457ed9490b55fd655068ef5c7b457754fa7291" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;semanticversion&quot;&gt;SemanticVersion&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;semanticversion&quot;&gt;SemanticVersion&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="0a5f16a1fa9770be519bae88bd5287628ae4229c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;slice&quot;&gt;Slice(T)&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;slice&quot;&gt;Slice(T)&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="9471f2d562375ecea7b6f0660ff1e39c30b21aa6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="8e9ba5ea19bf545c4678182f4eabffa35114c94c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="178d27e61c960fe72d1bc84ef1bd09faee20e297" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="661cee36b2d243d464ab438b0640a6bfe9193324" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;tuple&quot;&gt;Tuple(*T)&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;tuple&quot;&gt;Tuple(*T)&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="49c4001eaa296cd40f0ce0e9119ace43e24d7b9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;uint128&quot;&gt;UInt128&lt;/a&gt; | &lt;a href=&quot;uint16&quot;&gt;UInt16&lt;/a&gt; | &lt;a href=&quot;uint32&quot;&gt;UInt32&lt;/a&gt; | &lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt; | &lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;可比&lt;/a&gt;（&lt;a href=&quot;uint128&quot;&gt;UInt128&lt;/a&gt; | &lt;a href=&quot;uint16&quot;&gt;UInt16&lt;/a&gt; | &lt;a href=&quot;uint32&quot;&gt;UInt32&lt;/a&gt; | &lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt; | &lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="654348efcb111acea774a16f25780677dc40b912" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable#%3C(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt;  &amp;lt;&lt;/a&gt;, &lt;a href=&quot;comparable#%3C=(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt; &amp;lt;=(other : T | T | T | T | T) &amp;lt;=&lt;/a&gt;, &lt;a href=&quot;comparable#(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : T | T | T | T | T) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;comparable#==(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt; ==(other : T | T | T | T | T) ==&lt;/a&gt;, &lt;a href=&quot;comparable#%3E(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt; &amp;gt;(other : T | T | T | T | T) &amp;gt;&lt;/a&gt;, &lt;a href=&quot;comparable#%3E=(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt; &amp;gt;=(other : T | T | T | T | T) &amp;gt;=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;comparable#%3C(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt; &amp;lt;&lt;/a&gt;，&lt;a href=&quot;comparable#%3C=(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt;&amp;lt;=（other：T | T | T | T | T）&amp;lt;=&lt;/a&gt;，&lt;a href=&quot;comparable#(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：T | T | T | T | T）&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;comparable#==(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt;==（other：T | T | T | | T | T）==&lt;/a&gt;，&lt;a href=&quot;comparable#%3E(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt;&amp;gt;（其他：T | T | T | T | T）&amp;gt;&lt;/a&gt;，&lt;a href=&quot;comparable#%3E=(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt;&amp;gt; =（其他：T | T | T | T | T | T）&amp;gt; =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d435eacd33720654666b7cc4d4e07bf2e66e5d44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable#%3C(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt;  &amp;lt;&lt;/a&gt;, &lt;a href=&quot;comparable#%3C=(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt; &amp;lt;=(other : T | T | T | T | T) &amp;lt;=&lt;/a&gt;, &lt;a href=&quot;comparable#(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : T | T | T | T | T) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;comparable#==(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt; ==(other : T | T | T | T | T) ==&lt;/a&gt;, &lt;a href=&quot;comparable#%3E(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt; &amp;gt;(other : T | T | T | T | T) &amp;gt;&lt;/a&gt;, &lt;a href=&quot;comparable#%3E=(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt; &amp;gt;=(other : T | T | T | T | T) &amp;gt;=&lt;/a&gt;, &lt;a href=&quot;comparable#clamp(min,max)-instance-method&quot;&gt; clamp(min, max)&lt;br/&gt;clamp(range : Range) clamp&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;comparable#%3C(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt;&amp;lt;&lt;/a&gt;，&lt;a href=&quot;comparable#%3C=(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt;&amp;lt;=（other：T | T | T | T | T）&amp;lt;=&lt;/a&gt;，&lt;a href=&quot;comparable#(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：T | T | T | T | T）&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;comparable#==(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt;==（other：T | T | T | | T | T）==&lt;/a&gt;，&lt;a href=&quot;comparable#%3E(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt;&amp;gt;（其他：T | T | T | T | T | T）&amp;gt;&lt;/a&gt;，&lt;a href=&quot;comparable#%3E=(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt;&amp;gt; =（其他：T | T | T | T | T | T）&amp;gt; =&lt;/a&gt;，&lt;a href=&quot;comparable#clamp(min,max)-instance-method&quot;&gt;钳位（min，max）&lt;br/&gt;钳位（范围：范围）夹&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8db436b50cccc1bb863accd717e886ba30de9a8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable#%3C(other:T(T))-instance-method&quot;&gt;  &amp;lt;&lt;/a&gt;, &lt;a href=&quot;comparable#%3C=(other:T(T))-instance-method&quot;&gt; &amp;lt;=(other : T(T)) &amp;lt;=&lt;/a&gt;, &lt;a href=&quot;comparable#(other:T(T))-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : T(T)) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;comparable#==(other:T(T))-instance-method&quot;&gt; ==(other : T(T)) ==&lt;/a&gt;, &lt;a href=&quot;comparable#%3E(other:T(T))-instance-method&quot;&gt; &amp;gt;(other : T(T)) &amp;gt;&lt;/a&gt;, &lt;a href=&quot;comparable#%3E=(other:T(T))-instance-method&quot;&gt; &amp;gt;=(other : T(T)) &amp;gt;=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;comparable#%3C(other:T(T))-instance-method&quot;&gt; &amp;lt;&lt;/a&gt;，&lt;a href=&quot;comparable#%3C=(other:T(T))-instance-method&quot;&gt;&amp;lt;=（other：T（T））&amp;lt;=&lt;/a&gt;，&lt;a href=&quot;comparable#(other:T(T))-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：T（T））&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;comparable#==(other:T(T))-instance-method&quot;&gt;==（other：T（T））==&lt;/a&gt;，&lt;a href=&quot;comparable#%3E(other:T(T))-instance-method&quot;&gt;&amp;gt;（other：T（T ））&amp;gt;&lt;/a&gt;，&lt;a href=&quot;comparable#%3E=(other:T(T))-instance-method&quot;&gt;&amp;gt; =（其他：T（T））&amp;gt; =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1131993550f8ebd68dfb8c0880901f6f8b440dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable#%3C(other:T(T))-instance-method&quot;&gt;  &amp;lt;&lt;/a&gt;, &lt;a href=&quot;comparable#%3C=(other:T(T))-instance-method&quot;&gt; &amp;lt;=(other : T(T)) &amp;lt;=&lt;/a&gt;, &lt;a href=&quot;comparable#(other:T(T))-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : T(T)) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;comparable#==(other:T(T))-instance-method&quot;&gt; ==(other : T(T)) ==&lt;/a&gt;, &lt;a href=&quot;comparable#%3E(other:T(T))-instance-method&quot;&gt; &amp;gt;(other : T(T)) &amp;gt;&lt;/a&gt;, &lt;a href=&quot;comparable#%3E=(other:T(T))-instance-method&quot;&gt; &amp;gt;=(other : T(T)) &amp;gt;=&lt;/a&gt;, &lt;a href=&quot;comparable#clamp(min,max)-instance-method&quot;&gt; clamp(min, max)&lt;br/&gt;clamp(range : Range) clamp&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;comparable#%3C(other:T(T))-instance-method&quot;&gt;&amp;lt;&lt;/a&gt;，&lt;a href=&quot;comparable#%3C=(other:T(T))-instance-method&quot;&gt;&amp;lt;=（other：T（T））&amp;lt;=&lt;/a&gt;，&lt;a href=&quot;comparable#(other:T(T))-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：T（T））&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;comparable#==(other:T(T))-instance-method&quot;&gt;==（other：T（T））==&lt;/a&gt;，&lt;a href=&quot;comparable#%3E(other:T(T))-instance-method&quot;&gt;&amp;gt;（other：T（T ））&amp;gt;&lt;/a&gt;，&lt;a href=&quot;comparable#%3E=(other:T(T))-instance-method&quot;&gt;&amp;gt; =（other：T（T））&amp;gt; =&lt;/a&gt;，&lt;a href=&quot;comparable#clamp(min,max)-instance-method&quot;&gt;钳位（min，max）&lt;br/&gt;钳位（范围：范围）钳位&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51cdf81a98708fabf83211353e6edc73a3b29552" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable#%3C(other:T)-instance-method&quot;&gt;  &amp;lt;&lt;/a&gt;, &lt;a href=&quot;comparable#%3C=(other:T)-instance-method&quot;&gt; &amp;lt;=(other : T) &amp;lt;=&lt;/a&gt;, &lt;a href=&quot;comparable#(other:T)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : T) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;comparable#==(other:T)-instance-method&quot;&gt; ==(other : T) ==&lt;/a&gt;, &lt;a href=&quot;comparable#%3E(other:T)-instance-method&quot;&gt; &amp;gt;(other : T) &amp;gt;&lt;/a&gt;, &lt;a href=&quot;comparable#%3E=(other:T)-instance-method&quot;&gt; &amp;gt;=(other : T) &amp;gt;=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;comparable#%3C(other:T)-instance-method&quot;&gt; &amp;lt;&lt;/a&gt;，&lt;a href=&quot;comparable#%3C=(other:T)-instance-method&quot;&gt;&amp;lt;=（other：T）&amp;lt;=&lt;/a&gt;，&lt;a href=&quot;comparable#(other:T)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：T）&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;comparable#==(other:T)-instance-method&quot;&gt;==（other：T）==&lt;/a&gt;，&lt;a href=&quot;comparable#%3E(other:T)-instance-method&quot;&gt;&amp;gt;（other：T）&amp;gt;&lt;/a&gt;，&lt;a href=&quot;comparable#%3E=(other:T)-instance-method&quot;&gt;&amp;gt; =（other：T）&amp;gt; =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59e1ceb107e32854a81efa78b2fb1d9eb4e91798" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable#%3C(other:T)-instance-method&quot;&gt;  &amp;lt;&lt;/a&gt;, &lt;a href=&quot;comparable#%3C=(other:T)-instance-method&quot;&gt; &amp;lt;=(other : T) &amp;lt;=&lt;/a&gt;, &lt;a href=&quot;comparable#(other:T)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : T) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;comparable#==(other:T)-instance-method&quot;&gt; ==(other : T) ==&lt;/a&gt;, &lt;a href=&quot;comparable#%3E(other:T)-instance-method&quot;&gt; &amp;gt;(other : T) &amp;gt;&lt;/a&gt;, &lt;a href=&quot;comparable#%3E=(other:T)-instance-method&quot;&gt; &amp;gt;=(other : T) &amp;gt;=&lt;/a&gt;, &lt;a href=&quot;comparable#clamp(min,max)-instance-method&quot;&gt; clamp(min, max)&lt;br/&gt;clamp(range : Range) clamp&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;comparable#%3C(other:T)-instance-method&quot;&gt;&amp;lt;&lt;/a&gt;，&lt;a href=&quot;comparable#%3C=(other:T)-instance-method&quot;&gt;&amp;lt;=（other：T）&amp;lt;=&lt;/a&gt;，&lt;a href=&quot;comparable#(other:T)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：T）&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;comparable#==(other:T)-instance-method&quot;&gt;==（other：T）==&lt;/a&gt;，&lt;a href=&quot;comparable#%3E(other:T)-instance-method&quot;&gt;&amp;gt;（other：T）&amp;gt;&lt;/a&gt;，&lt;a href=&quot;comparable#%3E=(other:T)-instance-method&quot;&gt;&amp;gt; =（other：T）&amp;gt; =&lt;/a&gt;，&lt;a href=&quot;comparable#clamp(min,max)-instance-method&quot;&gt;钳位（最小，最大）&lt;br/&gt;钳位（范围：范围）钳位&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91e11d4513f0e8f6c98830ad70ae2ffa18ce136e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;context#children:Array(Spec::Example%7CSpec::ExampleGroup)-instance-method&quot;&gt; children : Array(Spec::Example | Spec::ExampleGroup) children&lt;/a&gt;, &lt;a href=&quot;context#randomize(randomizer)-instance-method&quot;&gt; randomize(randomizer) randomize&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;context#children:Array(Spec::Example%7CSpec::ExampleGroup)-instance-method&quot;&gt;children：Array（Spec :: Example | Spec :: ExampleGroup）children&lt;/a&gt;，&lt;a href=&quot;context#randomize(randomizer)-instance-method&quot;&gt;randomize（randomizer）randomize&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84aa0972a686d8f8cfa4b1032a2b115cccb6d6ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;crystal/system/file#chmod(path,mode)-class-method&quot;&gt; chmod(path, mode) chmod&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#chown(path,uid:Int,gid:Int,follow_symlinks)-class-method&quot;&gt; chown(path, uid : Int, gid : Int, follow_symlinks) chown&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#delete(path)-class-method&quot;&gt; delete(path) delete&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#executable?(path):Bool-class-method&quot;&gt; executable?(path) : Bool executable?&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#exists?(path)-class-method&quot;&gt; exists?(path) exists?&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#info(path,follow_symlinks)-class-method&quot;&gt; info(path, follow_symlinks) info&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#info?(path:String,follow_symlinks:Bool):::File::Info?-class-method&quot;&gt; info?(path : String, follow_symlinks : Bool) : ::File::Info? info?&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#link(old_path,new_path)-class-method&quot;&gt; link(old_path, new_path) link&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#mktemp(prefix,suffix,dir):Tuple(LibC::Int,String)-class-method&quot;&gt; mktemp(prefix, suffix, dir) : Tuple(LibC::Int, String) mktemp&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#open(filename,mode,perm)-class-method&quot;&gt; open(filename, mode, perm) open&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#readable?(path):Bool-class-method&quot;&gt; readable?(path) : Bool readable?&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#readlink(path):String-class-method&quot;&gt; readlink(path) : String readlink&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#real_path(path)-class-method&quot;&gt; real_path(path) real_path&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#rename(old_filename,new_filename)-class-method&quot;&gt; rename(old_filename, new_filename) rename&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#symlink(old_path,new_path)-class-method&quot;&gt; symlink(old_path, new_path) symlink&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#utime(atime:::Time,mtime:::Time,filename:String):Nil-class-method&quot;&gt; utime(atime : ::Time, mtime : ::Time, filename : String) : Nil utime&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#writable?(path):Bool-class-method&quot;&gt; writable?(path) : Bool writable?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;crystal/system/file#chmod(path,mode)-class-method&quot;&gt;chmod（路径，模式）chmod&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#chown(path,uid:Int,gid:Int,follow_symlinks)-class-method&quot;&gt;chown（路径，uid：Int，gid：Int，follow_symlinks）chown&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#delete(path)-class-method&quot;&gt;delete（路径）delete&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#executable?(path):Bool-class-method&quot;&gt;可执行文件？（path）：Bool可执行文件？&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#exists?(path)-class-method&quot;&gt;存在吗？（路径）存在吗？&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#info(path,follow_symlinks)-class-method&quot;&gt;info（path，follow_symlinks）info&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#info?(path:String,follow_symlinks:Bool):::File::Info?-class-method&quot;&gt;info？（path：字符串，follow_symlinks：Bool）:: File :: Info？信息？&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#link(old_path,new_path)-class-method&quot;&gt;link（old_path，new_path）link&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#mktemp(prefix,suffix,dir):Tuple(LibC::Int,String)-class-method&quot;&gt;mktemp（prefix，suffix，dir）：Tuple（LibC :: Int，String）mktemp&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#open(filename,mode,perm)-class-method&quot;&gt;open（filename，mode，perm）open&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#readable?(path):Bool-class-method&quot;&gt;可读吗？（path）：布尔可读吗？&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#readlink(path):String-class-method&quot;&gt;readlink（path）：字符串readlink&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#real_path(path)-class-method&quot;&gt;real_path（path）real_path&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#rename(old_filename,new_filename)-class-method&quot;&gt;重命名（old_filename，new_filename）重命名&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#symlink(old_path,new_path)-class-method&quot;&gt;symlink（old_path，new_path）symlink&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#utime(atime:::Time,mtime:::Time,filename:String):Nil-class-method&quot;&gt;utime（atime :: Time，mtime :: Time，filename：String）：无utime&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#writable?(path):Bool-class-method&quot;&gt;可写吗？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72d7fb7730b57846bf38259807fb602806fe20da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;crystal/system/file#chmod(path,mode)-class-method&quot;&gt; chmod(path, mode) chmod&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#chown(path,uid:Int,gid:Int,follow_symlinks)-class-method&quot;&gt; chown(path, uid : Int, gid : Int, follow_symlinks) chown&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#delete(path)-class-method&quot;&gt; delete(path) delete&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#executable?(path):Bool-class-method&quot;&gt; executable?(path) : Bool executable?&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#exists?(path)-class-method&quot;&gt; exists?(path) exists?&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#info?(path:String,follow_symlinks:Bool):::File::Info?-class-method&quot;&gt; info?(path : String, follow_symlinks : Bool) : ::File::Info? info?&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#link(old_path,new_path)-class-method&quot;&gt; link(old_path, new_path) link&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#mktemp(prefix,suffix,dir):Tuple(LibC::Int,String)-class-method&quot;&gt; mktemp(prefix, suffix, dir) : Tuple(LibC::Int, String) mktemp&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#open(filename,mode,perm)-class-method&quot;&gt; open(filename, mode, perm) open&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#readable?(path):Bool-class-method&quot;&gt; readable?(path) : Bool readable?&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#readlink(path):String-class-method&quot;&gt; readlink(path) : String readlink&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#real_path(path)-class-method&quot;&gt; real_path(path) real_path&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#rename(old_filename,new_filename)-class-method&quot;&gt; rename(old_filename, new_filename) rename&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#symlink(old_path,new_path)-class-method&quot;&gt; symlink(old_path, new_path) symlink&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#utime(atime:::Time,mtime:::Time,filename:String):Nil-class-method&quot;&gt; utime(atime : ::Time, mtime : ::Time, filename : String) : Nil utime&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#writable?(path):Bool-class-method&quot;&gt; writable?(path) : Bool writable?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;crystal/system/file#chmod(path,mode)-class-method&quot;&gt;chmod（路径，模式）chmod&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#chown(path,uid:Int,gid:Int,follow_symlinks)-class-method&quot;&gt;chown（路径，uid：Int，gid：Int，follow_symlinks）chown&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#delete(path)-class-method&quot;&gt;delete（路径）delete&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#executable?(path):Bool-class-method&quot;&gt;可执行文件？（path）：Bool可执行文件？&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#exists?(path)-class-method&quot;&gt;存在吗？（路径）存在吗？&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#info?(path:String,follow_symlinks:Bool):::File::Info?-class-method&quot;&gt;信息？（路径：字符串，follow_symlinks：布尔）：::文件::信息？信息？&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#link(old_path,new_path)-class-method&quot;&gt;link（old_path，new_path）link&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#mktemp(prefix,suffix,dir):Tuple(LibC::Int,String)-class-method&quot;&gt;mktemp（prefix，suffix，dir）：Tuple（LibC :: Int，String）mktemp&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#open(filename,mode,perm)-class-method&quot;&gt;open（filename，mode，perm）open&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#readable?(path):Bool-class-method&quot;&gt;可读吗？（path）：布尔可读吗？&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#readlink(path):String-class-method&quot;&gt;readlink（path）：字符串readlink&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#real_path(path)-class-method&quot;&gt;real_path（path）real_path&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#rename(old_filename,new_filename)-class-method&quot;&gt;重命名（old_filename，new_filename）重命名&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#symlink(old_path,new_path)-class-method&quot;&gt;symlink（old_path，new_path）symlink&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#utime(atime:::Time,mtime:::Time,filename:String):Nil-class-method&quot;&gt;utime（atime :: Time，mtime :: Time，filename：String）：无utime&lt;/a&gt;，&lt;a href=&quot;crystal/system/file#writable?(path):Bool-class-method&quot;&gt;可写吗？（path）：Bool可写吗？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="578edbd888378911e74953af38d85be2fa8f928f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;crystal/system/filedescriptor#fcntl(fd,cmd,arg=0)-class-method&quot;&gt; fcntl(fd, cmd, arg = 0) fcntl&lt;/a&gt;, &lt;a href=&quot;crystal/system/filedescriptor#from_stdio(fd)-class-method&quot;&gt; from_stdio(fd) from_stdio&lt;/a&gt;, &lt;a href=&quot;crystal/system/filedescriptor#pipe(read_blocking,write_blocking)-class-method&quot;&gt; pipe(read_blocking, write_blocking) pipe&lt;/a&gt;, &lt;a href=&quot;crystal/system/filedescriptor#pread(fd,buffer,offset)-class-method&quot;&gt; pread(fd, buffer, offset) pread&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;crystal/system/filedescriptor#fcntl(fd,cmd,arg=0)-class-method&quot;&gt;fcntl（fd，cmd，arg = 0）fcntl&lt;/a&gt;，&lt;a href=&quot;crystal/system/filedescriptor#from_stdio(fd)-class-method&quot;&gt;from_stdio（fd）from_stdio&lt;/a&gt;，&lt;a href=&quot;crystal/system/filedescriptor#pipe(read_blocking,write_blocking)-class-method&quot;&gt;管道（read_blocking，write_blocking）管道&lt;/a&gt;，&lt;a href=&quot;crystal/system/filedescriptor#pread(fd,buffer,offset)-class-method&quot;&gt;pread（fd，buffer，offset）pread&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb80c3141c05a8313ffb80375843f77fd433a326" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;crystal/system/filedescriptor#fcntl(fd,cmd,arg=0)-class-method&quot;&gt; fcntl(fd, cmd, arg = 0) fcntl&lt;/a&gt;, &lt;a href=&quot;crystal/system/filedescriptor#pipe(read_blocking,write_blocking)-class-method&quot;&gt; pipe(read_blocking, write_blocking) pipe&lt;/a&gt;, &lt;a href=&quot;crystal/system/filedescriptor#pread(fd,buffer,offset)-class-method&quot;&gt; pread(fd, buffer, offset) pread&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;crystal/system/filedescriptor#fcntl(fd,cmd,arg=0)-class-method&quot;&gt;fcntl（fd，cmd，arg = 0）fcntl&lt;/a&gt;，&lt;a href=&quot;crystal/system/filedescriptor#pipe(read_blocking,write_blocking)-class-method&quot;&gt;管道（read_blocking，write_blocking）管道&lt;/a&gt;，&lt;a href=&quot;crystal/system/filedescriptor#pread(fd,buffer,offset)-class-method&quot;&gt;pread（fd，buffer，offset）pread&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f6cfa7222d1b46ad19d5b58c673867f4f353e08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;digestbase#%3C%3C(data)-instance-method&quot;&gt; &amp;lt; &amp;lt;&amp;lt;&lt;/a&gt;, &lt;a href=&quot;digestbase#base64digest-instance-method&quot;&gt; base64digest base64digest&lt;/a&gt;, &lt;a href=&quot;digestbase#digest-instance-method&quot;&gt; digest digest&lt;/a&gt;, &lt;a href=&quot;digestbase#file(file_name)-instance-method&quot;&gt; file(file_name) file&lt;/a&gt;, &lt;a href=&quot;digestbase#hexdigest-instance-method&quot;&gt; hexdigest hexdigest&lt;/a&gt;, &lt;a href=&quot;digestbase#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;, &lt;a href=&quot;digestbase#update(io:IO)-instance-method&quot;&gt; update(io : IO) update&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;digestbase#%3C%3C(data)-instance-method&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/a&gt;，&lt;a href=&quot;digestbase#base64digest-instance-method&quot;&gt;base64digest base64digest&lt;/a&gt;，&lt;a href=&quot;digestbase#digest-instance-method&quot;&gt;摘要摘要&lt;/a&gt;，&lt;a href=&quot;digestbase#file(file_name)-instance-method&quot;&gt;file（file_name）文件&lt;/a&gt;，&lt;a href=&quot;digestbase#hexdigest-instance-method&quot;&gt;hexdigest hexdigest&lt;/a&gt;，&lt;a href=&quot;digestbase#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：无to_s&lt;/a&gt;，&lt;a href=&quot;digestbase#update(io:IO)-instance-method&quot;&gt;update（io：IO）更新&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="41a13ed9db9cd329a5b5c01d64c0818380745fbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;digestbase#self-instance-method&quot;&gt; &amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt;, &lt;a href=&quot;digestbase#base64digest:String-instance-method&quot;&gt; base64digest : String base64digest&lt;/a&gt;, &lt;a href=&quot;digestbase#file(file_name:Path%7CString):Digest-instance-method&quot;&gt; file(file_name : Path | String) : Digest file&lt;/a&gt;, &lt;a href=&quot;digestbase#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;, &lt;a href=&quot;digestbase#update(io:IO):self-instance-method&quot;&gt; update(io : IO) : self update&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;digestbase#self-instance-method&quot;&gt;&amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt;，&lt;a href=&quot;digestbase#base64digest:String-instance-method&quot;&gt;base64digest：字符串base64digest&lt;/a&gt;，&lt;a href=&quot;digestbase#file(file_name:Path%7CString):Digest-instance-method&quot;&gt;file（file_name：Path | String）：摘要文件&lt;/a&gt;，&lt;a href=&quot;digestbase#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：无to_s&lt;/a&gt;，&lt;a href=&quot;digestbase#update(io:IO):self-instance-method&quot;&gt;update（io：IO）：自我更新&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8b8f15a634ec56b155e4430947dc10c9d3546f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#&amp;amp;(other:self)-instance-method&quot;&gt; &amp;amp;(other : self) &amp;amp;&lt;/a&gt;, &lt;a href=&quot;enum#+(other:Int)-instance-method&quot;&gt; +(other : Int) +&lt;/a&gt;, &lt;a href=&quot;enum#-(other:Int)-instance-method&quot;&gt; -(other : Int) -&lt;/a&gt;, &lt;a href=&quot;enum#(other:self)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : self) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;enum#==(other:self)-instance-method&quot;&gt; ==(other : self) ==&lt;/a&gt;, &lt;a href=&quot;enum#%5E(other:self)-instance-method&quot;&gt; ^(other : self) ^&lt;/a&gt;, &lt;a href=&quot;enum#clone-instance-method&quot;&gt; clone clone&lt;/a&gt;, &lt;a href=&quot;enum#each(&amp;amp;)-instance-method&quot;&gt; each(&amp;amp;) each&lt;/a&gt;, &lt;a href=&quot;enum#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;enum#includes?(other:self)-instance-method&quot;&gt; includes?(other : self) includes?&lt;/a&gt;, &lt;a href=&quot;enum#to_f32:Float32-instance-method&quot;&gt; to_f32 : Float32 to_f32&lt;/a&gt;, &lt;a href=&quot;enum#to_f32!:Float32-instance-method&quot;&gt; to_f32! : Float32 to_f32!&lt;/a&gt;, &lt;a href=&quot;enum#to_f64:Float64-instance-method&quot;&gt; to_f64 : Float64 to_f64&lt;/a&gt;, &lt;a href=&quot;enum#to_f64!:Float64-instance-method&quot;&gt; to_f64! : Float64 to_f64!&lt;/a&gt;, &lt;a href=&quot;enum#to_i:Int32-instance-method&quot;&gt; to_i : Int32 to_i&lt;/a&gt;, &lt;a href=&quot;enum#to_i16:Int16-instance-method&quot;&gt; to_i16 : Int16 to_i16&lt;/a&gt;, &lt;a href=&quot;enum#to_i16!:Int16-instance-method&quot;&gt; to_i16! : Int16 to_i16!&lt;/a&gt;, &lt;a href=&quot;enum#to_i32:Int32-instance-method&quot;&gt; to_i32 : Int32 to_i32&lt;/a&gt;, &lt;a href=&quot;enum#to_i32!:Int32-instance-method&quot;&gt; to_i32! : Int32 to_i32!&lt;/a&gt;, &lt;a href=&quot;enum#to_i64:Int64-instance-method&quot;&gt; to_i64 : Int64 to_i64&lt;/a&gt;, &lt;a href=&quot;enum#to_i64!:Int64-instance-method&quot;&gt; to_i64! : Int64 to_i64!&lt;/a&gt;, &lt;a href=&quot;enum#to_i8:Int8-instance-method&quot;&gt; to_i8 : Int8 to_i8&lt;/a&gt;, &lt;a href=&quot;enum#to_i8!:Int8-instance-method&quot;&gt; to_i8! : Int8 to_i8!&lt;/a&gt;, &lt;a href=&quot;enum#to_json(json:JSON::Builder)-instance-method&quot;&gt; to_json(json : JSON::Builder) to_json&lt;/a&gt;, &lt;a href=&quot;enum#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil&lt;br/&gt;to_s : String to_s&lt;/a&gt;, &lt;a href=&quot;enum#to_u16:UInt16-instance-method&quot;&gt; to_u16 : UInt16 to_u16&lt;/a&gt;, &lt;a href=&quot;enum#to_u16!:UInt16-instance-method&quot;&gt; to_u16! : UInt16 to_u16!&lt;/a&gt;, &lt;a href=&quot;enum#to_u32:UInt32-instance-method&quot;&gt; to_u32 : UInt32 to_u32&lt;/a&gt;, &lt;a href=&quot;enum#to_u32!:UInt32-instance-method&quot;&gt; to_u32! : UInt32 to_u32!&lt;/a&gt;, &lt;a href=&quot;enum#to_u64:UInt64-instance-method&quot;&gt; to_u64 : UInt64 to_u64&lt;/a&gt;, &lt;a href=&quot;enum#to_u64!:UInt64-instance-method&quot;&gt; to_u64! : UInt64 to_u64!&lt;/a&gt;, &lt;a href=&quot;enum#to_u8:UInt8-instance-method&quot;&gt; to_u8 : UInt8 to_u8&lt;/a&gt;, &lt;a href=&quot;enum#to_u8!:UInt8-instance-method&quot;&gt; to_u8! : UInt8 to_u8!&lt;/a&gt;, &lt;a href=&quot;enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt; to_yaml(yaml : YAML::Nodes::Builder) to_yaml&lt;/a&gt;, &lt;a href=&quot;enum#%7C(other:self)-instance-method&quot;&gt; |(other : self) |&lt;/a&gt;, &lt;a href=&quot;enum#~-instance-method&quot;&gt; ~ ~&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;enum#&amp;amp;(other:self)-instance-method&quot;&gt;＆（other：self）＆&lt;/a&gt;，&lt;a href=&quot;enum#+(other:Int)-instance-method&quot;&gt;+（other：Int）+&lt;/a&gt;，&lt;a href=&quot;enum#-(other:Int)-instance-method&quot;&gt;-（other：Int）-&lt;/a&gt;，&lt;a href=&quot;enum#(other:self)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：self）&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;enum#==(other:self)-instance-method&quot;&gt;==（other：self）==&lt;/a&gt;，&lt;a href=&quot;enum#%5E(other:self)-instance-method&quot;&gt;^（other： self）^&lt;/a&gt;，&lt;a href=&quot;enum#clone-instance-method&quot;&gt;clone clone&lt;/a&gt;，&lt;a href=&quot;enum#each(&amp;amp;)-instance-method&quot;&gt;each（＆）each&lt;/a&gt;，&lt;a href=&quot;enum#hash(hasher)-instance-method&quot;&gt;hash（hasher）hash&lt;/a&gt;，&lt;a href=&quot;enum#includes?(other:self)-instance-method&quot;&gt;include？（other：self）包括？&lt;/a&gt;，&lt;a href=&quot;enum#to_f32:Float32-instance-method&quot;&gt;to_f32：Float32 to_f32&lt;/a&gt;，&lt;a href=&quot;enum#to_f32!:Float32-instance-method&quot;&gt;to_f32！ ：Float32 to_f32！&lt;/a&gt;，&lt;a href=&quot;enum#to_f64:Float64-instance-method&quot;&gt;to_f64：Float64 to_f64&lt;/a&gt;，&lt;a href=&quot;enum#to_f64!:Float64-instance-method&quot;&gt;to_f64！ ：Float64 to_f64！&lt;/a&gt;，&lt;a href=&quot;enum#to_i:Int32-instance-method&quot;&gt;to_i：Int32 to_i&lt;/a&gt;，&lt;a href=&quot;enum#to_i16:Int16-instance-method&quot;&gt;to_i16：Int16 to_i16&lt;/a&gt;，&lt;a href=&quot;enum#to_i16!:Int16-instance-method&quot;&gt;to_i16！ ：int16 to_i16！&lt;/a&gt;，&lt;a href=&quot;enum#to_i32:Int32-instance-method&quot;&gt;to_i32：Int32 to_i32&lt;/a&gt;，&lt;a href=&quot;enum#to_i32!:Int32-instance-method&quot;&gt;to_i32！ ：Int32 to_i32！&lt;/a&gt;，&lt;a href=&quot;enum#to_i64:Int64-instance-method&quot;&gt;to_i64：Int64 to_i64&lt;/a&gt;，&lt;a href=&quot;enum#to_i64!:Int64-instance-method&quot;&gt;to_i64！ ：int64 to_i64！&lt;/a&gt;，&lt;a href=&quot;enum#to_i8:Int8-instance-method&quot;&gt;to_i8：Int8 to_i8&lt;/a&gt;，&lt;a href=&quot;enum#to_i8!:Int8-instance-method&quot;&gt;to_i8！ ：Int8 to_i8！&lt;/a&gt;，&lt;a href=&quot;enum#to_json(json:JSON::Builder)-instance-method&quot;&gt;to_json（json：JSON :: Builder）to_json&lt;/a&gt;，&lt;a href=&quot;enum#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：无&lt;br/&gt;to_s：字符串to_s&lt;/a&gt;，&lt;a href=&quot;enum#to_u16:UInt16-instance-method&quot;&gt;to_u16：UInt16 to_u16&lt;/a&gt;，&lt;a href=&quot;enum#to_u16!:UInt16-instance-method&quot;&gt;to_u16！ ：UInt16 to_u16！&lt;/a&gt;，&lt;a href=&quot;enum#to_u32:UInt32-instance-method&quot;&gt;to_u32：UInt32 to_u32&lt;/a&gt;，&lt;a href=&quot;enum#to_u32!:UInt32-instance-method&quot;&gt;to_u32！ ：UInt32 to_u32！&lt;/a&gt;，&lt;a href=&quot;enum#to_u64:UInt64-instance-method&quot;&gt;to_u64：UInt64 to_u64&lt;/a&gt;，&lt;a href=&quot;enum#to_u64!:UInt64-instance-method&quot;&gt;to_u64！ ：UInt64 to_u64！&lt;/a&gt;，&lt;a href=&quot;enum#to_u8:UInt8-instance-method&quot;&gt;to_u8：UInt8 to_u8&lt;/a&gt;，&lt;a href=&quot;enum#to_u8!:UInt8-instance-method&quot;&gt;to_u8！ ：UInt8 to_u8！&lt;/a&gt;，&lt;a href=&quot;enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt;to_yaml（yaml：YAML :: Nodes :: Builder）to_yaml&lt;/a&gt;，&lt;a href=&quot;enum#%7C(other:self)-instance-method&quot;&gt;|（other：self）| &lt;/a&gt;，&lt;a href=&quot;enum#~-instance-method&quot;&gt;〜〜&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0077253e22fd8fb74bb5d01e70f255839de255c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#&amp;amp;(other:self)-instance-method&quot;&gt; &amp;amp;(other : self) &amp;amp;&lt;/a&gt;, &lt;a href=&quot;enum#+(other:Int)-instance-method&quot;&gt; +(other : Int) +&lt;/a&gt;, &lt;a href=&quot;enum#-(other:Int)-instance-method&quot;&gt; -(other : Int) -&lt;/a&gt;, &lt;a href=&quot;enum#(other:self)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : self) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;enum#==(other:self)-instance-method&quot;&gt; ==(other : self) ==&lt;/a&gt;, &lt;a href=&quot;enum#%5E(other:self)-instance-method&quot;&gt; ^(other : self) ^&lt;/a&gt;, &lt;a href=&quot;enum#clone-instance-method&quot;&gt; clone clone&lt;/a&gt;, &lt;a href=&quot;enum#each(&amp;amp;block)-instance-method&quot;&gt; each(&amp;amp;block) each&lt;/a&gt;, &lt;a href=&quot;enum#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;enum#includes?(other:self)-instance-method&quot;&gt; includes?(other : self) includes?&lt;/a&gt;, &lt;a href=&quot;enum#to_f32:Float32-instance-method&quot;&gt; to_f32 : Float32 to_f32&lt;/a&gt;, &lt;a href=&quot;enum#to_f32!:Float32-instance-method&quot;&gt; to_f32! : Float32 to_f32!&lt;/a&gt;, &lt;a href=&quot;enum#to_f64:Float64-instance-method&quot;&gt; to_f64 : Float64 to_f64&lt;/a&gt;, &lt;a href=&quot;enum#to_f64!:Float64-instance-method&quot;&gt; to_f64! : Float64 to_f64!&lt;/a&gt;, &lt;a href=&quot;enum#to_i:Int32-instance-method&quot;&gt; to_i : Int32 to_i&lt;/a&gt;, &lt;a href=&quot;enum#to_i16:Int16-instance-method&quot;&gt; to_i16 : Int16 to_i16&lt;/a&gt;, &lt;a href=&quot;enum#to_i16!:Int16-instance-method&quot;&gt; to_i16! : Int16 to_i16!&lt;/a&gt;, &lt;a href=&quot;enum#to_i32:Int32-instance-method&quot;&gt; to_i32 : Int32 to_i32&lt;/a&gt;, &lt;a href=&quot;enum#to_i32!:Int32-instance-method&quot;&gt; to_i32! : Int32 to_i32!&lt;/a&gt;, &lt;a href=&quot;enum#to_i64:Int64-instance-method&quot;&gt; to_i64 : Int64 to_i64&lt;/a&gt;, &lt;a href=&quot;enum#to_i64!:Int64-instance-method&quot;&gt; to_i64! : Int64 to_i64!&lt;/a&gt;, &lt;a href=&quot;enum#to_i8:Int8-instance-method&quot;&gt; to_i8 : Int8 to_i8&lt;/a&gt;, &lt;a href=&quot;enum#to_i8!:Int8-instance-method&quot;&gt; to_i8! : Int8 to_i8!&lt;/a&gt;, &lt;a href=&quot;enum#to_json(json:JSON::Builder)-instance-method&quot;&gt; to_json(json : JSON::Builder) to_json&lt;/a&gt;, &lt;a href=&quot;enum#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil&lt;br/&gt;to_s : String to_s&lt;/a&gt;, &lt;a href=&quot;enum#to_u16:UInt16-instance-method&quot;&gt; to_u16 : UInt16 to_u16&lt;/a&gt;, &lt;a href=&quot;enum#to_u16!:UInt16-instance-method&quot;&gt; to_u16! : UInt16 to_u16!&lt;/a&gt;, &lt;a href=&quot;enum#to_u32:UInt32-instance-method&quot;&gt; to_u32 : UInt32 to_u32&lt;/a&gt;, &lt;a href=&quot;enum#to_u32!:UInt32-instance-method&quot;&gt; to_u32! : UInt32 to_u32!&lt;/a&gt;, &lt;a href=&quot;enum#to_u64:UInt64-instance-method&quot;&gt; to_u64 : UInt64 to_u64&lt;/a&gt;, &lt;a href=&quot;enum#to_u64!:UInt64-instance-method&quot;&gt; to_u64! : UInt64 to_u64!&lt;/a&gt;, &lt;a href=&quot;enum#to_u8:UInt8-instance-method&quot;&gt; to_u8 : UInt8 to_u8&lt;/a&gt;, &lt;a href=&quot;enum#to_u8!:UInt8-instance-method&quot;&gt; to_u8! : UInt8 to_u8!&lt;/a&gt;, &lt;a href=&quot;enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt; to_yaml(yaml : YAML::Nodes::Builder) to_yaml&lt;/a&gt;, &lt;a href=&quot;enum#%7C(other:self)-instance-method&quot;&gt; |(other : self) |&lt;/a&gt;, &lt;a href=&quot;enum#~-instance-method&quot;&gt; ~ ~&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;enum#&amp;amp;(other:self)-instance-method&quot;&gt;＆（other：self）＆&lt;/a&gt;，&lt;a href=&quot;enum#+(other:Int)-instance-method&quot;&gt;+（other：Int）+&lt;/a&gt;，&lt;a href=&quot;enum#-(other:Int)-instance-method&quot;&gt;-（other：Int）-&lt;/a&gt;，&lt;a href=&quot;enum#(other:self)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：self）&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;enum#==(other:self)-instance-method&quot;&gt;==（other：self）==&lt;/a&gt;，&lt;a href=&quot;enum#%5E(other:self)-instance-method&quot;&gt;^（other： self）^&lt;/a&gt;，&lt;a href=&quot;enum#clone-instance-method&quot;&gt;clone clone&lt;/a&gt;，&lt;a href=&quot;enum#each(&amp;amp;block)-instance-method&quot;&gt;each（＆block）each&lt;/a&gt;，&lt;a href=&quot;enum#hash(hasher)-instance-method&quot;&gt;hash（hasher）hash&lt;/a&gt;，&lt;a href=&quot;enum#includes?(other:self)-instance-method&quot;&gt;include？（other：self）包括吗？&lt;/a&gt;，&lt;a href=&quot;enum#to_f32:Float32-instance-method&quot;&gt;to_f32：Float32 to_f32&lt;/a&gt;，&lt;a href=&quot;enum#to_f32!:Float32-instance-method&quot;&gt;to_f32！ ：Float32 to_f32！&lt;/a&gt;，&lt;a href=&quot;enum#to_f64:Float64-instance-method&quot;&gt;to_f64：Float64 to_f64&lt;/a&gt;，&lt;a href=&quot;enum#to_f64!:Float64-instance-method&quot;&gt;to_f64！ ：Float64 to_f64！&lt;/a&gt;，&lt;a href=&quot;enum#to_i:Int32-instance-method&quot;&gt;to_i：Int32 to_i&lt;/a&gt;，&lt;a href=&quot;enum#to_i16:Int16-instance-method&quot;&gt;to_i16：Int16 to_i16&lt;/a&gt;，&lt;a href=&quot;enum#to_i16!:Int16-instance-method&quot;&gt;to_i16！ ：Int16 to_i16！&lt;/a&gt;，&lt;a href=&quot;enum#to_i32:Int32-instance-method&quot;&gt;to_i32：Int32 to_i32&lt;/a&gt;，&lt;a href=&quot;enum#to_i32!:Int32-instance-method&quot;&gt;to_i32！ ：Int32 to_i32！&lt;/a&gt;，&lt;a href=&quot;enum#to_i64:Int64-instance-method&quot;&gt;to_i64：Int64 to_i64&lt;/a&gt;，&lt;a href=&quot;enum#to_i64!:Int64-instance-method&quot;&gt;to_i64！ ：int64 to_i64！&lt;/a&gt;，&lt;a href=&quot;enum#to_i8:Int8-instance-method&quot;&gt;to_i8：Int8 to_i8&lt;/a&gt;，&lt;a href=&quot;enum#to_i8!:Int8-instance-method&quot;&gt;to_i8！ ：int8 to_i8！&lt;/a&gt;，&lt;a href=&quot;enum#to_json(json:JSON::Builder)-instance-method&quot;&gt;to_json（json：JSON :: Builder）to_json&lt;/a&gt;，&lt;a href=&quot;enum#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：无&lt;br/&gt;to_s：字符串to_s&lt;/a&gt;，&lt;a href=&quot;enum#to_u16:UInt16-instance-method&quot;&gt;to_u16：UInt16 to_u16&lt;/a&gt;，&lt;a href=&quot;enum#to_u16!:UInt16-instance-method&quot;&gt;to_u16！ ：UInt16 to_u16！&lt;/a&gt;，&lt;a href=&quot;enum#to_u32:UInt32-instance-method&quot;&gt;to_u32：UInt32 to_u32&lt;/a&gt;，&lt;a href=&quot;enum#to_u32!:UInt32-instance-method&quot;&gt;to_u32！ ：UInt32 to_u32！&lt;/a&gt;，&lt;a href=&quot;enum#to_u64:UInt64-instance-method&quot;&gt;to_u64：UInt64 to_u64&lt;/a&gt;，&lt;a href=&quot;enum#to_u64!:UInt64-instance-method&quot;&gt;to_u64！ ：UInt64 to_u64！&lt;/a&gt;，&lt;a href=&quot;enum#to_u8:UInt8-instance-method&quot;&gt;to_u8：UInt8 to_u8&lt;/a&gt;，&lt;a href=&quot;enum#to_u8!:UInt8-instance-method&quot;&gt;to_u8！ ：UInt8 to_u8！&lt;/a&gt;，&lt;a href=&quot;enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt;to_yaml（yaml：YAML :: Nodes :: Builder）to_yaml&lt;/a&gt;，&lt;a href=&quot;enum#%7C(other:self)-instance-method&quot;&gt;|（other：self）| &lt;/a&gt;，&lt;a href=&quot;enum#~-instance-method&quot;&gt;〜〜&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3283fe6165d8eaa47bd0a981373faa4e6c2ca731" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#each(&amp;amp;)-class-method&quot;&gt; each(&amp;amp;) each&lt;/a&gt;, &lt;a href=&quot;enum#names:Array(String)-class-method&quot;&gt; names : Array(String) names&lt;/a&gt;, &lt;a href=&quot;enum#valid?(value:self):Bool-class-method&quot;&gt; valid?(value : self) : Bool valid?&lt;/a&gt;, &lt;a href=&quot;enum#values:Array(self)-class-method&quot;&gt; values : Array(self) values&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;enum#each(&amp;amp;)-class-method&quot;&gt;each（＆）each&lt;/a&gt;，&lt;a href=&quot;enum#names:Array(String)-class-method&quot;&gt;名称：Array（String）names&lt;/a&gt;，&lt;a href=&quot;enum#valid?(value:self):Bool-class-method&quot;&gt;有效吗？（value：self）：布尔有效吗？&lt;/a&gt;，&lt;a href=&quot;enum#values:Array(self)-class-method&quot;&gt;values：数组（自身）值&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="60077153c9a74388bc6364130cc991de8415ec1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#each(&amp;amp;block)-class-method&quot;&gt; each(&amp;amp;block) each&lt;/a&gt;, &lt;a href=&quot;enum#names:Array(String)-class-method&quot;&gt; names : Array(String) names&lt;/a&gt;, &lt;a href=&quot;enum#values:Array(self)-class-method&quot;&gt; values : Array(self) values&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;enum#each(&amp;amp;block)-class-method&quot;&gt;each（＆block）each&lt;/a&gt;，&lt;a href=&quot;enum#names:Array(String)-class-method&quot;&gt;名称：Array（String）名称&lt;/a&gt;，&lt;a href=&quot;enum#values:Array(self)-class-method&quot;&gt;值：Array（self）值&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="698c0a8afff27295a693115017c50a989f7f9d8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#from_value(value:Int):self-class-method&quot;&gt; from_value(value : Int) : self from_value&lt;/a&gt;, &lt;a href=&quot;enum#from_value?(value:Int):self?-class-method&quot;&gt; from_value?(value : Int) : self? from_value?&lt;/a&gt;, &lt;a href=&quot;enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt; new(ctx : YAML::ParseContext, node : YAML::Nodes::Node)&lt;br/&gt;new(pull : JSON::PullParser) new&lt;/a&gt;, &lt;a href=&quot;enum#parse(string:String):self-class-method&quot;&gt; parse(string : String) : self parse&lt;/a&gt;, &lt;a href=&quot;enum#parse?(string:String):self?-class-method&quot;&gt; parse?(string : String) : self? parse?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;enum#from_value(value:Int):self-class-method&quot;&gt;from_value（value：Int）：自我from_value&lt;/a&gt;，&lt;a href=&quot;enum#from_value?(value:Int):self?-class-method&quot;&gt;from_value？（value：Int）：自我吗？from_value？&lt;/a&gt;，&lt;a href=&quot;enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;new（ctx：YAML :: ParseContext，node：YAML :: Nodes :: Node）&lt;br/&gt;new（pull：JSON :: PullParser）new&lt;/a&gt;，&lt;a href=&quot;enum#parse(string:String):self-class-method&quot;&gt;parse（string：String）：self parse&lt;/a&gt;，&lt;a href=&quot;enum#parse?(string:String):self?-class-method&quot;&gt;parse？（string：String）：self ？解析？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1fac2e5425d601ff2820c444f6e9fba0bb635bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#from_value(value:Int):self-class-method&quot;&gt; from_value(value : Int) : self from_value&lt;/a&gt;, &lt;a href=&quot;enum#from_value?(value:Int):self?-class-method&quot;&gt; from_value?(value : Int) : self? from_value?&lt;/a&gt;, &lt;a href=&quot;enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt; new(ctx : YAML::ParseContext, node : YAML::Nodes::Node)&lt;br/&gt;new(value : self)&lt;br/&gt;new(pull : JSON::PullParser) new&lt;/a&gt;, &lt;a href=&quot;enum#parse(string:String):self-class-method&quot;&gt; parse(string : String) : self parse&lt;/a&gt;, &lt;a href=&quot;enum#parse?(string:String):self?-class-method&quot;&gt; parse?(string : String) : self? parse?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;enum#from_value(value:Int):self-class-method&quot;&gt;from_value（value：Int）：自我from_value&lt;/a&gt;，&lt;a href=&quot;enum#from_value?(value:Int):self?-class-method&quot;&gt;from_value？（value：Int）：自我？from_value？&lt;/a&gt;，&lt;a href=&quot;enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;new（ctx：YAML :: ParseContext，node：YAML :: Nodes :: Node）&lt;br/&gt;new（value：self）&lt;br/&gt;new（pull：JSON :: PullParser）new&lt;/a&gt;，&lt;a href=&quot;enum#parse(string:String):self-class-method&quot;&gt;parse（string：String）：self parse&lt;/a&gt;，&lt;a href=&quot;enum#parse?(string:String):self?-class-method&quot;&gt;parse？（字符串：字符串）：自我？解析？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bcc7d16751f1ec5817997279f7cff4a6c3c0f444" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="573e2e08b324f18747d52c44ff0f75ba6c2735b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;})</source>
          <target state="translated">&lt;a href=&quot;enumerable&quot;&gt;可枚举&lt;/a&gt;（{ &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;，&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt; }）</target>
        </trans-unit>
        <trans-unit id="11c7615c6e9c807c558b4fb631075435c20b2ca3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enumerable#all?(&amp;amp;)-instance-method&quot;&gt; all?(&amp;amp;)&lt;br/&gt;all?(pattern)&lt;br/&gt;all? all?&lt;/a&gt;, &lt;a href=&quot;enumerable#any?(&amp;amp;)-instance-method&quot;&gt; any?(&amp;amp;)&lt;br/&gt;any?(pattern)&lt;br/&gt;any? any?&lt;/a&gt;, &lt;a href=&quot;enumerable#chunks(&amp;amp;block:%7BK,V%7D-%3EU)forallU-instance-method&quot;&gt; chunks(&amp;amp;block : {K, V} -&amp;gt; U) forall U chunks&lt;/a&gt;, &lt;a href=&quot;enumerable#compact_map(&amp;amp;)-instance-method&quot;&gt; compact_map(&amp;amp;) compact_map&lt;/a&gt;, &lt;a href=&quot;enumerable#count(&amp;amp;)-instance-method&quot;&gt; count(&amp;amp;)&lt;br/&gt;count(item) count&lt;/a&gt;, &lt;a href=&quot;enumerable#cycle(&amp;amp;)-instance-method&quot;&gt; cycle(&amp;amp;)&lt;br/&gt;cycle(n, &amp;amp;) cycle&lt;/a&gt;, &lt;a href=&quot;enumerable#each(&amp;amp;block:%7BK,V%7D-%3E_)-instance-method&quot;&gt; each(&amp;amp;block : {K, V} -&amp;gt; _) each&lt;/a&gt;, &lt;a href=&quot;enumerable#each_cons(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt; each_cons(count : Int, reuse = false, &amp;amp;) each_cons&lt;/a&gt;, &lt;a href=&quot;enumerable#each_cons_pair(&amp;amp;:%7BK,V%7D,%7BK,V%7D-%3E_):Nil-instance-method&quot;&gt; each_cons_pair(&amp;amp; : {K, V}, {K, V} -&amp;gt; _) : Nil each_cons_pair&lt;/a&gt;, &lt;a href=&quot;enumerable#each_slice(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt; each_slice(count : Int, reuse = false, &amp;amp;) each_slice&lt;/a&gt;, &lt;a href=&quot;enumerable#each_with_index(offset=0,&amp;amp;)-instance-method&quot;&gt; each_with_index(offset = 0, &amp;amp;) each_with_index&lt;/a&gt;, &lt;a href=&quot;enumerable#each_with_object(obj,&amp;amp;)-instance-method&quot;&gt; each_with_object(obj, &amp;amp;) each_with_object&lt;/a&gt;, &lt;a href=&quot;enumerable#empty?-instance-method&quot;&gt; empty? empty?&lt;/a&gt;, &lt;a href=&quot;enumerable#find(if_none=nil,&amp;amp;)-instance-method&quot;&gt; find(if_none = nil, &amp;amp;) find&lt;/a&gt;, &lt;a href=&quot;enumerable#first(&amp;amp;)-instance-method&quot;&gt; first(&amp;amp;)&lt;br/&gt;first(count : Int)&lt;br/&gt;first first&lt;/a&gt;, &lt;a href=&quot;enumerable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;enumerable#flat_map(&amp;amp;block:%7BK,V%7D-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt; flat_map(&amp;amp;block : {K, V} -&amp;gt; Array(U) | Iterator(U) | U) forall U flat_map&lt;/a&gt;, &lt;a href=&quot;enumerable#grep(pattern)-instance-method&quot;&gt; grep(pattern) grep&lt;/a&gt;, &lt;a href=&quot;enumerable#group_by(&amp;amp;block:%7BK,V%7D-%3EU)forallU-instance-method&quot;&gt; group_by(&amp;amp;block : {K, V} -&amp;gt; U) forall U group_by&lt;/a&gt;, &lt;a href=&quot;enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt; in_groups_of(size : Int, filled_up_with : U = nil) forall U&lt;br/&gt;in_groups_of(size : Int, filled_up_with : U = nil, reuse = false, &amp;amp;) forall U in_groups_of&lt;/a&gt;, &lt;a href=&quot;enumerable#includes?(obj)-instance-method&quot;&gt; includes?(obj) includes?&lt;/a&gt;, &lt;a href=&quot;enumerable#index(&amp;amp;)-instance-method&quot;&gt; index(&amp;amp;)&lt;br/&gt;index(obj) index&lt;/a&gt;, &lt;a href=&quot;enumerable#index_by(&amp;amp;block:%7BK,V%7D-%3EU)forallU-instance-method&quot;&gt; index_by(&amp;amp;block : {K, V} -&amp;gt; U) forall U index_by&lt;/a&gt;,  join(separator = &quot;&quot;, &amp;amp; : {K, V} -&amp;gt; )</source>
          <target state="translated">&lt;a href=&quot;enumerable#all?(&amp;amp;)-instance-method&quot;&gt;全部？（＆）&lt;br/&gt;全部？（模式）&lt;br/&gt;全部？所有？&lt;/a&gt;，&lt;a href=&quot;enumerable#any?(&amp;amp;)-instance-method&quot;&gt;对吗？（＆）&lt;br/&gt;对吗？（模式）&lt;br/&gt;对吗？任何？&lt;/a&gt;，对于所有&lt;a href=&quot;enumerable#chunks(&amp;amp;block:%7BK,V%7D-%3EU)forallU-instance-method&quot;&gt;U个块&lt;/a&gt;，chunks（＆block：{K，V}-&amp;gt; U），&lt;a href=&quot;enumerable#compact_map(&amp;amp;)-instance-method&quot;&gt;compact_map（＆）compact_map&lt;/a&gt;，&lt;a href=&quot;enumerable#count(&amp;amp;)-instance-method&quot;&gt;count（＆）&lt;br/&gt;count（item）count&lt;/a&gt;，&lt;a href=&quot;enumerable#cycle(&amp;amp;)-instance-method&quot;&gt;cycle（＆）&lt;br/&gt;cycle（n，＆）cycle&lt;/a&gt;，&lt;a href=&quot;enumerable#each(&amp;amp;block:%7BK,V%7D-%3E_)-instance-method&quot;&gt;每个（＆block： {K，V}-&amp;gt; _）each&lt;/a&gt;，&lt;a href=&quot;enumerable#each_cons(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt;each_cons（count：Int，复用= false，＆）each_cons&lt;/a&gt;，&lt;a href=&quot;enumerable#each_cons_pair(&amp;amp;:%7BK,V%7D,%7BK,V%7D-%3E_):Nil-instance-method&quot;&gt;each_cons_pair（＆：{K，V}，{K，V}-&amp;gt; _）：Nil each_cons_pair&lt;/a&gt;，&lt;a href=&quot;enumerable#each_slice(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt;each_slice（ count：Int，重用= false，＆）each_slice&lt;/a&gt;，&lt;a href=&quot;enumerable#each_with_index(offset=0,&amp;amp;)-instance-method&quot;&gt;each_with_index（offset = 0，＆）each_with_index&lt;/a&gt;，&lt;a href=&quot;enumerable#each_with_object(obj,&amp;amp;)-instance-method&quot;&gt;each_with_object（obj，＆）each_with_object&lt;/a&gt;，是否为&lt;a href=&quot;enumerable#empty?-instance-method&quot;&gt;空？空吗&lt;/a&gt;，&lt;a href=&quot;enumerable#find(if_none=nil,&amp;amp;)-instance-method&quot;&gt;find（if_none = nil，＆）find&lt;/a&gt;，&lt;a href=&quot;enumerable#first(&amp;amp;)-instance-method&quot;&gt;first（＆）&lt;br/&gt;first（count：Int）&lt;br/&gt;首先&lt;/a&gt;，&lt;a href=&quot;enumerable#first?-instance-method&quot;&gt;首先？第一？&lt;/a&gt;，&lt;a href=&quot;enumerable#flat_map(&amp;amp;block:%7BK,V%7D-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt;flat_map（＆block：{K，V}-&amp;gt; Array（U）| Iterator（U）| U）for all U flat_map&lt;/a&gt;，&lt;a href=&quot;enumerable#grep(pattern)-instance-method&quot;&gt;grep（pattern）grep&lt;/a&gt;，&lt;a href=&quot;enumerable#group_by(&amp;amp;block:%7BK,V%7D-%3EU)forallU-instance-method&quot;&gt;group_by（＆block：{K，V}-&amp;gt; U）forall U group_by&lt;/a&gt;，&lt;a href=&quot;enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt;in_groups_of（size：Int，filled_up_with：U = nil）&lt;br/&gt;for all U in_groups_of（size：Int，filled_up_with：U = nil，复用= false，＆for for all U in_groups_of&lt;/a&gt;，&lt;a href=&quot;enumerable#includes?(obj)-instance-method&quot;&gt;include？（obj）includes？&lt;/a&gt;，&lt;a href=&quot;enumerable#index(&amp;amp;)-instance-method&quot;&gt;index（＆）&lt;br/&gt;index（obj）索引&lt;/a&gt;，&lt;a href=&quot;enumerable#index_by(&amp;amp;block:%7BK,V%7D-%3EU)forallU-instance-method&quot;&gt;index_by（＆block：{K，V}-&amp;gt; U）for all U index_by&lt;/a&gt;，join（separator =&amp;ldquo;&amp;rdquo;，＆：{K，V}-&amp;gt;）</target>
        </trans-unit>
        <trans-unit id="f0147429a3ed57c5282ccc8594fc5764d62862d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enumerable#all?(&amp;amp;)-instance-method&quot;&gt; all?(&amp;amp;)&lt;br/&gt;all?(pattern)&lt;br/&gt;all? all?&lt;/a&gt;, &lt;a href=&quot;enumerable#any?(&amp;amp;)-instance-method&quot;&gt; any?(&amp;amp;)&lt;br/&gt;any?(pattern)&lt;br/&gt;any? any?&lt;/a&gt;, &lt;a href=&quot;enumerable#chunks(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; chunks(&amp;amp;block : T -&amp;gt; U) forall U chunks&lt;/a&gt;, &lt;a href=&quot;enumerable#compact_map(&amp;amp;)-instance-method&quot;&gt; compact_map(&amp;amp;) compact_map&lt;/a&gt;, &lt;a href=&quot;enumerable#count(&amp;amp;)-instance-method&quot;&gt; count(&amp;amp;)&lt;br/&gt;count(item) count&lt;/a&gt;, &lt;a href=&quot;enumerable#cycle(&amp;amp;)-instance-method&quot;&gt; cycle(&amp;amp;)&lt;br/&gt;cycle(n, &amp;amp;) cycle&lt;/a&gt;, &lt;a href=&quot;enumerable#each(&amp;amp;block:T-%3E_)-instance-method&quot;&gt; each(&amp;amp;block : T -&amp;gt; _) each&lt;/a&gt;, &lt;a href=&quot;enumerable#each_cons(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt; each_cons(count : Int, reuse = false, &amp;amp;) each_cons&lt;/a&gt;, &lt;a href=&quot;enumerable#each_cons_pair(&amp;amp;:T,T-%3E_):Nil-instance-method&quot;&gt; each_cons_pair(&amp;amp; : T, T -&amp;gt; _) : Nil each_cons_pair&lt;/a&gt;, &lt;a href=&quot;enumerable#each_slice(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt; each_slice(count : Int, reuse = false, &amp;amp;) each_slice&lt;/a&gt;, &lt;a href=&quot;enumerable#each_with_index(offset=0,&amp;amp;)-instance-method&quot;&gt; each_with_index(offset = 0, &amp;amp;) each_with_index&lt;/a&gt;, &lt;a href=&quot;enumerable#each_with_object(obj,&amp;amp;)-instance-method&quot;&gt; each_with_object(obj, &amp;amp;) each_with_object&lt;/a&gt;, &lt;a href=&quot;enumerable#empty?-instance-method&quot;&gt; empty? empty?&lt;/a&gt;, &lt;a href=&quot;enumerable#find(if_none=nil,&amp;amp;)-instance-method&quot;&gt; find(if_none = nil, &amp;amp;) find&lt;/a&gt;, &lt;a href=&quot;enumerable#first(&amp;amp;)-instance-method&quot;&gt; first(&amp;amp;)&lt;br/&gt;first(count : Int)&lt;br/&gt;first first&lt;/a&gt;, &lt;a href=&quot;enumerable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;enumerable#flat_map(&amp;amp;block:T-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt; flat_map(&amp;amp;block : T -&amp;gt; Array(U) | Iterator(U) | U) forall U flat_map&lt;/a&gt;, &lt;a href=&quot;enumerable#grep(pattern)-instance-method&quot;&gt; grep(pattern) grep&lt;/a&gt;, &lt;a href=&quot;enumerable#group_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; group_by(&amp;amp;block : T -&amp;gt; U) forall U group_by&lt;/a&gt;, &lt;a href=&quot;enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt; in_groups_of(size : Int, filled_up_with : U = nil) forall U&lt;br/&gt;in_groups_of(size : Int, filled_up_with : U = nil, reuse = false, &amp;amp;) forall U in_groups_of&lt;/a&gt;, &lt;a href=&quot;enumerable#includes?(obj)-instance-method&quot;&gt; includes?(obj) includes?&lt;/a&gt;, &lt;a href=&quot;enumerable#index(&amp;amp;)-instance-method&quot;&gt; index(&amp;amp;)&lt;br/&gt;index(obj) index&lt;/a&gt;, &lt;a href=&quot;enumerable#index_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; index_by(&amp;amp;block : T -&amp;gt; U) forall U index_by&lt;/a&gt;,  join(separator = &quot;&quot;, &amp;amp; : T -&amp;gt; )</source>
          <target state="translated">&lt;a href=&quot;enumerable#all?(&amp;amp;)-instance-method&quot;&gt;全部？（＆）&lt;br/&gt;全部？（模式）&lt;br/&gt;全部？所有？&lt;/a&gt;，&lt;a href=&quot;enumerable#any?(&amp;amp;)-instance-method&quot;&gt;对吗？（＆）&lt;br/&gt;对吗？（模式）&lt;br/&gt;对吗？任何？&lt;/a&gt;，&lt;a href=&quot;enumerable#compact_map(&amp;amp;)-instance-method&quot;&gt;针对所有&lt;/a&gt;&lt;a href=&quot;enumerable#chunks(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;U个块的chunks（＆block：T-&amp;gt; U）&lt;/a&gt;，compact_map（＆）compact_map，&lt;a href=&quot;enumerable#count(&amp;amp;)-instance-method&quot;&gt;count（＆）&lt;br/&gt;count（item）count&lt;/a&gt;，&lt;a href=&quot;enumerable#cycle(&amp;amp;)-instance-method&quot;&gt;cycle（＆）&lt;br/&gt;cycle（n，＆）cycle&lt;/a&gt;，&lt;a href=&quot;enumerable#each(&amp;amp;block:T-%3E_)-instance-method&quot;&gt;每个（＆block：T-&amp;gt; _ ）each&lt;/a&gt;，&lt;a href=&quot;enumerable#each_cons(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt;each_cons（count：Int，reuse = false，＆）each_cons&lt;/a&gt;，&lt;a href=&quot;enumerable#each_cons_pair(&amp;amp;:T,T-%3E_):Nil-instance-method&quot;&gt;each_cons_pair（＆：T，T-&amp;gt; _）：Nil each_cons_pair&lt;/a&gt;，&lt;a href=&quot;enumerable#each_slice(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt;each_slice（count：Int，复用= false，＆）each_slice&lt;/a&gt;，&lt;a href=&quot;enumerable#each_with_index(offset=0,&amp;amp;)-instance-method&quot;&gt;each_with_index（offset = 0，＆）each_with_index&lt;/a&gt;，&lt;a href=&quot;enumerable#each_with_object(obj,&amp;amp;)-instance-method&quot;&gt;each_with_object（obj，＆）each_with_object&lt;/a&gt;，&lt;a href=&quot;enumerable#empty?-instance-method&quot;&gt;空吗？空吗&lt;/a&gt;，&lt;a href=&quot;enumerable#find(if_none=nil,&amp;amp;)-instance-method&quot;&gt;find（if_none = nil，＆）find&lt;/a&gt;，&lt;a href=&quot;enumerable#first(&amp;amp;)-instance-method&quot;&gt;first（＆）&lt;br/&gt;first（count：Int）&lt;br/&gt;首先&lt;/a&gt;，&lt;a href=&quot;enumerable#first?-instance-method&quot;&gt;首先？第一？&lt;/a&gt;，&lt;a href=&quot;enumerable#flat_map(&amp;amp;block:T-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt;flat_map（＆block：T-&amp;gt; Array（U）| Iterator（U）| U）适用于所有U flat_map&lt;/a&gt;，&lt;a href=&quot;enumerable#grep(pattern)-instance-method&quot;&gt;grep（pattern）grep&lt;/a&gt;，&lt;a href=&quot;enumerable#group_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;group_by（＆block：T-&amp;gt; U）适用于所有U group_by&lt;/a&gt;，&lt;a href=&quot;enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt;in_groups_of（size：Int， ：U = nil）forall U &lt;br/&gt;in_groups_of（size：Int，fill_up_with：U = nil，复用= false，＆）forall U in_groups_of&lt;/a&gt;，&lt;a href=&quot;enumerable#includes?(obj)-instance-method&quot;&gt;include？（obj）includes？&lt;/a&gt;，&lt;a href=&quot;enumerable#index(&amp;amp;)-instance-method&quot;&gt;index（＆）&lt;br/&gt;index（obj）index&lt;/a&gt;，&lt;a href=&quot;enumerable#index_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;index_by（＆block：T-&amp;gt; U）对于所有U index_by&lt;/a&gt;，join（separator =&amp;ldquo;&amp;rdquo;，＆：T-&amp;gt;）</target>
        </trans-unit>
        <trans-unit id="da4541800463385d96ef271fa7cc35472593df0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enumerable#all?(&amp;amp;)-instance-method&quot;&gt; all?(&amp;amp;)&lt;br/&gt;all?(pattern)&lt;br/&gt;all? all?&lt;/a&gt;, &lt;a href=&quot;enumerable#any?(&amp;amp;)-instance-method&quot;&gt; any?(&amp;amp;)&lt;br/&gt;any?(pattern)&lt;br/&gt;any? any?&lt;/a&gt;, &lt;a href=&quot;enumerable#chunks(&amp;amp;block:Union(T)-%3EU)forallU-instance-method&quot;&gt; chunks(&amp;amp;block : Union(T) -&amp;gt; U) forall U chunks&lt;/a&gt;, &lt;a href=&quot;enumerable#compact_map(&amp;amp;)-instance-method&quot;&gt; compact_map(&amp;amp;) compact_map&lt;/a&gt;, &lt;a href=&quot;enumerable#count(&amp;amp;)-instance-method&quot;&gt; count(&amp;amp;)&lt;br/&gt;count(item) count&lt;/a&gt;, &lt;a href=&quot;enumerable#cycle(&amp;amp;)-instance-method&quot;&gt; cycle(&amp;amp;)&lt;br/&gt;cycle(n, &amp;amp;) cycle&lt;/a&gt;, &lt;a href=&quot;enumerable#each(&amp;amp;block:Union(T)-%3E_)-instance-method&quot;&gt; each(&amp;amp;block : Union(T) -&amp;gt; _) each&lt;/a&gt;, &lt;a href=&quot;enumerable#each_cons(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt; each_cons(count : Int, reuse = false, &amp;amp;) each_cons&lt;/a&gt;, &lt;a href=&quot;enumerable#each_cons_pair(&amp;amp;:Union(T),Union(T)-%3E_):Nil-instance-method&quot;&gt; each_cons_pair(&amp;amp; : Union(T), Union(T) -&amp;gt; _) : Nil each_cons_pair&lt;/a&gt;, &lt;a href=&quot;enumerable#each_slice(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt; each_slice(count : Int, reuse = false, &amp;amp;) each_slice&lt;/a&gt;, &lt;a href=&quot;enumerable#each_with_index(offset=0,&amp;amp;)-instance-method&quot;&gt; each_with_index(offset = 0, &amp;amp;) each_with_index&lt;/a&gt;, &lt;a href=&quot;enumerable#each_with_object(obj,&amp;amp;)-instance-method&quot;&gt; each_with_object(obj, &amp;amp;) each_with_object&lt;/a&gt;, &lt;a href=&quot;enumerable#empty?-instance-method&quot;&gt; empty? empty?&lt;/a&gt;, &lt;a href=&quot;enumerable#find(if_none=nil,&amp;amp;)-instance-method&quot;&gt; find(if_none = nil, &amp;amp;) find&lt;/a&gt;, &lt;a href=&quot;enumerable#first(&amp;amp;)-instance-method&quot;&gt; first(&amp;amp;)&lt;br/&gt;first(count : Int)&lt;br/&gt;first first&lt;/a&gt;, &lt;a href=&quot;enumerable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;enumerable#flat_map(&amp;amp;block:Union(T)-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt; flat_map(&amp;amp;block : Union(T) -&amp;gt; Array(U) | Iterator(U) | U) forall U flat_map&lt;/a&gt;, &lt;a href=&quot;enumerable#grep(pattern)-instance-method&quot;&gt; grep(pattern) grep&lt;/a&gt;, &lt;a href=&quot;enumerable#group_by(&amp;amp;block:Union(T)-%3EU)forallU-instance-method&quot;&gt; group_by(&amp;amp;block : Union(T) -&amp;gt; U) forall U group_by&lt;/a&gt;, &lt;a href=&quot;enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt; in_groups_of(size : Int, filled_up_with : U = nil) forall U&lt;br/&gt;in_groups_of(size : Int, filled_up_with : U = nil, reuse = false, &amp;amp;) forall U in_groups_of&lt;/a&gt;, &lt;a href=&quot;enumerable#includes?(obj)-instance-method&quot;&gt; includes?(obj) includes?&lt;/a&gt;, &lt;a href=&quot;enumerable#index(&amp;amp;)-instance-method&quot;&gt; index(&amp;amp;)&lt;br/&gt;index(obj) index&lt;/a&gt;, &lt;a href=&quot;enumerable#index_by(&amp;amp;block:Union(T)-%3EU)forallU-instance-method&quot;&gt; index_by(&amp;amp;block : Union(T) -&amp;gt; U) forall U index_by&lt;/a&gt;,  join(separator = &quot;&quot;, &amp;amp; : Union(T) -&amp;gt; )</source>
          <target state="translated">&lt;a href=&quot;enumerable#all?(&amp;amp;)-instance-method&quot;&gt;全部？（＆）&lt;br/&gt;全部？（模式）&lt;br/&gt;全部？所有？&lt;/a&gt;，&lt;a href=&quot;enumerable#any?(&amp;amp;)-instance-method&quot;&gt;对吗？（＆）&lt;br/&gt;对吗？（模式）&lt;br/&gt;对吗？任何？&lt;/a&gt;，所有&lt;a href=&quot;enumerable#chunks(&amp;amp;block:Union(T)-%3EU)forallU-instance-method&quot;&gt;U块的chunks（＆block：Union（T）-&amp;gt; U）&lt;/a&gt;，&lt;a href=&quot;enumerable#compact_map(&amp;amp;)-instance-method&quot;&gt;compact_map（＆）compact_map&lt;/a&gt;，&lt;a href=&quot;enumerable#count(&amp;amp;)-instance-method&quot;&gt;count（＆）&lt;br/&gt;count（item）count&lt;/a&gt;，&lt;a href=&quot;enumerable#cycle(&amp;amp;)-instance-method&quot;&gt;cycle（＆）&lt;br/&gt;cycle（n，＆）cycle&lt;/a&gt;，&lt;a href=&quot;enumerable#each(&amp;amp;block:Union(T)-%3E_)-instance-method&quot;&gt;每个（＆block：Union （T）-&amp;gt; _）each&lt;/a&gt;，&lt;a href=&quot;enumerable#each_cons(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt;each_cons（count：Int，重用= false，＆）each_cons&lt;/a&gt;，&lt;a href=&quot;enumerable#each_cons_pair(&amp;amp;:Union(T),Union(T)-%3E_):Nil-instance-method&quot;&gt;each_cons_pair（＆：Union（T），Union（T）-&amp;gt; _）：Nil each_cons_pair&lt;/a&gt;，&lt;a href=&quot;enumerable#each_slice(count:Int,reuse=false,&amp;amp;)-instance-method&quot;&gt;each_slice（count：Int，复用=假，＆）each_slice&lt;/a&gt;，&lt;a href=&quot;enumerable#each_with_index(offset=0,&amp;amp;)-instance-method&quot;&gt;each_with_index（offset = 0，＆）each_with_index&lt;/a&gt;，&lt;a href=&quot;enumerable#each_with_object(obj,&amp;amp;)-instance-method&quot;&gt;each_with_object（obj，＆）each_with_object&lt;/a&gt;，是否为&lt;a href=&quot;enumerable#empty?-instance-method&quot;&gt;空？空吗&lt;/a&gt;，&lt;a href=&quot;enumerable#find(if_none=nil,&amp;amp;)-instance-method&quot;&gt;find（if_none = nil，＆）find&lt;/a&gt;，&lt;a href=&quot;enumerable#first(&amp;amp;)-instance-method&quot;&gt;first（＆）&lt;br/&gt;first（count：Int）&lt;br/&gt;首先&lt;/a&gt;，&lt;a href=&quot;enumerable#first?-instance-method&quot;&gt;首先？第一？&lt;/a&gt;，&lt;a href=&quot;enumerable#flat_map(&amp;amp;block:Union(T)-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt;flat_map（＆block：Union（T）-&amp;gt; Array（U）| Iterator（U）| U）for all U flat_map&lt;/a&gt;，&lt;a href=&quot;enumerable#grep(pattern)-instance-method&quot;&gt;grep（pattern）grep&lt;/a&gt;，&lt;a href=&quot;enumerable#group_by(&amp;amp;block:Union(T)-%3EU)forallU-instance-method&quot;&gt;group_by（＆block：Union（T）-&amp;gt; U）&lt;/a&gt;&lt;a href=&quot;enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt;for all &lt;br/&gt;&lt;/a&gt;U group_by，in_groups_of （size：Int，fill_up_with：U = nil）forall U in_groups_of（size：Int，filled_up_with：U = nil，复用= false，）for all U in_groups_of，&lt;a href=&quot;enumerable#includes?(obj)-instance-method&quot;&gt;包括吗？（obj）是否包括？&lt;/a&gt;，&lt;a href=&quot;enumerable#index(&amp;amp;)-instance-method&quot;&gt;index（＆）&lt;br/&gt;index（obj）索引&lt;/a&gt;，&lt;a href=&quot;enumerable#index_by(&amp;amp;block:Union(T)-%3EU)forallU-instance-method&quot;&gt;所有U的index_by（＆block：Union（T）-&amp;gt; U）index_by&lt;/a&gt;，join（separator =&amp;ldquo;&amp;rdquo;，＆：Union（T）-&amp;gt;）</target>
        </trans-unit>
        <trans-unit id="c664b58947ba3709dcc5f4da86bec60c4156bc0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enumerable#all?(&amp;amp;block)-instance-method&quot;&gt; all?(&amp;amp;block)&lt;br/&gt;all?(pattern)&lt;br/&gt;all? all?&lt;/a&gt;, &lt;a href=&quot;enumerable#any?(&amp;amp;block)-instance-method&quot;&gt; any?(&amp;amp;block)&lt;br/&gt;any?(pattern)&lt;br/&gt;any? any?&lt;/a&gt;, &lt;a href=&quot;enumerable#chunks(&amp;amp;block:%7BK,V%7D-%3EU)forallU-instance-method&quot;&gt; chunks(&amp;amp;block : {K, V} -&amp;gt; U) forall U chunks&lt;/a&gt;, &lt;a href=&quot;enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt; compact_map(&amp;amp;block) compact_map&lt;/a&gt;, &lt;a href=&quot;enumerable#count(item)-instance-method&quot;&gt; count(item)&lt;br/&gt;count(&amp;amp;block) count&lt;/a&gt;, &lt;a href=&quot;enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt; cycle(&amp;amp;block)&lt;br/&gt;cycle(n, &amp;amp;block) cycle&lt;/a&gt;, &lt;a href=&quot;enumerable#each(&amp;amp;block:%7BK,V%7D-%3EUNDERSCORE)-instance-method&quot;&gt; each(&amp;amp;block : {K, V} -&amp;gt; UNDERSCORE) each&lt;/a&gt;, &lt;a href=&quot;enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_cons(count : Int, reuse = false, &amp;amp;block) each_cons&lt;/a&gt;, &lt;a href=&quot;enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_slice(count : Int, reuse = false, &amp;amp;block) each_slice&lt;/a&gt;, &lt;a href=&quot;enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt; each_with_index(offset = 0, &amp;amp;block) each_with_index&lt;/a&gt;, &lt;a href=&quot;enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt; each_with_object(obj, &amp;amp;block) each_with_object&lt;/a&gt;, &lt;a href=&quot;enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt; find(if_none = nil, &amp;amp;block) find&lt;/a&gt;, &lt;a href=&quot;enumerable#first(count:Int)-instance-method&quot;&gt; first(count : Int)&lt;br/&gt;first first&lt;/a&gt;, &lt;a href=&quot;enumerable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;enumerable#flat_map(&amp;amp;block:%7BK,V%7D-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt; flat_map(&amp;amp;block : {K, V} -&amp;gt; Array(U) | Iterator(U) | U) forall U flat_map&lt;/a&gt;, &lt;a href=&quot;enumerable#grep(pattern)-instance-method&quot;&gt; grep(pattern) grep&lt;/a&gt;, &lt;a href=&quot;enumerable#group_by(&amp;amp;block:%7BK,V%7D-%3EU)forallU-instance-method&quot;&gt; group_by(&amp;amp;block : {K, V} -&amp;gt; U) forall U group_by&lt;/a&gt;, &lt;a href=&quot;enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt; in_groups_of(size : Int, filled_up_with : U = nil) forall U&lt;br/&gt;in_groups_of(size : Int, filled_up_with : U = nil, reuse = false, &amp;amp;block) forall U in_groups_of&lt;/a&gt;, &lt;a href=&quot;enumerable#includes?(obj)-instance-method&quot;&gt; includes?(obj) includes?&lt;/a&gt;, &lt;a href=&quot;enumerable#index(&amp;amp;block)-instance-method&quot;&gt; index(&amp;amp;block)&lt;br/&gt;index(obj) index&lt;/a&gt;, &lt;a href=&quot;enumerable#index_by(&amp;amp;block:%7BK,V%7D-%3EU)forallU-instance-method&quot;&gt; index_by(&amp;amp;block : {K, V} -&amp;gt; U) forall U index_by&lt;/a&gt;,  join(separator = &quot;&quot;, &amp;amp;block)</source>
          <target state="translated">&lt;a href=&quot;enumerable#all?(&amp;amp;block)-instance-method&quot;&gt;全部？（＆block）&lt;br/&gt;全部？（模式）&lt;br/&gt;全部？所有？&lt;/a&gt;，&lt;a href=&quot;enumerable#any?(&amp;amp;block)-instance-method&quot;&gt;对吗？（＆block）&lt;br/&gt;对吗？（模式）&lt;br/&gt;对吗？任何？&lt;/a&gt;，对于所有&lt;a href=&quot;enumerable#chunks(&amp;amp;block:%7BK,V%7D-%3EU)forallU-instance-method&quot;&gt;U个块&lt;/a&gt;，chunks（＆block：{K，V}-&amp;gt; U），&lt;a href=&quot;enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt;compact_map（＆block）compact_map&lt;/a&gt;，&lt;a href=&quot;enumerable#count(item)-instance-method&quot;&gt;count（item）&lt;br/&gt;count（＆block）count&lt;/a&gt;，&lt;a href=&quot;enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt;cycle（＆block）&lt;br/&gt;cycle（n，＆block）cycle&lt;/a&gt;，&lt;a href=&quot;enumerable#each(&amp;amp;block:%7BK,V%7D-%3EUNDERSCORE)-instance-method&quot;&gt;each（＆block： {K，V}-&amp;gt; UNDERSCORE）each&lt;/a&gt;，&lt;a href=&quot;enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_cons（count：Int，复用= false，＆block）each_cons&lt;/a&gt;，&lt;a href=&quot;enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_slice（count：Int，复用= false，＆block）each_slice&lt;/a&gt;，&lt;a href=&quot;enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt;each_with_index（offset = 0，＆block）each_with_index&lt;/a&gt;，&lt;a href=&quot;enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt;each_with_object （obj，＆&lt;/a&gt;块）each_with_object ，&lt;a href=&quot;enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt;find（if_none = nil，＆block）find&lt;/a&gt;，&lt;a href=&quot;enumerable#first(count:Int)-instance-method&quot;&gt;first（count：Int）&lt;br/&gt;首先&lt;/a&gt;，&lt;a href=&quot;enumerable#first?-instance-method&quot;&gt;首先？第一？&lt;/a&gt;，&lt;a href=&quot;enumerable#flat_map(&amp;amp;block:%7BK,V%7D-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt;flat_map（＆block：{K，V}-&amp;gt; Array（U）| Iterator（U）| U）for all U flat_map&lt;/a&gt;，&lt;a href=&quot;enumerable#grep(pattern)-instance-method&quot;&gt;grep（pattern）grep&lt;/a&gt;，&lt;a href=&quot;enumerable#group_by(&amp;amp;block:%7BK,V%7D-%3EU)forallU-instance-method&quot;&gt;group_by（＆block：{K，V}-&amp;gt; U）forall U group_by&lt;/a&gt;，&lt;a href=&quot;enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt;in_groups_of（size：Int，filled_up_with：U = nil）&lt;br/&gt;for all U in_groups_of（size：Int，fill_up_with：U = nil，复用= false，＆block）for all U in_groups_of&lt;/a&gt;，&lt;a href=&quot;enumerable#includes?(obj)-instance-method&quot;&gt;include？（obj）includes？&lt;/a&gt;，&lt;a href=&quot;enumerable#index(&amp;amp;block)-instance-method&quot;&gt;index（＆block）&lt;br/&gt;index（obj）index&lt;/a&gt;，&lt;a href=&quot;enumerable#index_by(&amp;amp;block:%7BK,V%7D-%3EU)forallU-instance-method&quot;&gt;index_by（＆block：{K，V}-&amp;gt; U）for all U index_by&lt;/a&gt;，join（separator =&amp;ldquo;&amp;rdquo;，＆block）</target>
        </trans-unit>
        <trans-unit id="85c1f4d5420f79b94f8e755fb7361372e20c64bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enumerable#all?(&amp;amp;block)-instance-method&quot;&gt; all?(&amp;amp;block)&lt;br/&gt;all?(pattern)&lt;br/&gt;all? all?&lt;/a&gt;, &lt;a href=&quot;enumerable#any?(&amp;amp;block)-instance-method&quot;&gt; any?(&amp;amp;block)&lt;br/&gt;any?(pattern)&lt;br/&gt;any? any?&lt;/a&gt;, &lt;a href=&quot;enumerable#chunks(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; chunks(&amp;amp;block : T -&amp;gt; U) forall U chunks&lt;/a&gt;, &lt;a href=&quot;enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt; compact_map(&amp;amp;block) compact_map&lt;/a&gt;, &lt;a href=&quot;enumerable#count(item)-instance-method&quot;&gt; count(item)&lt;br/&gt;count(&amp;amp;block) count&lt;/a&gt;, &lt;a href=&quot;enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt; cycle(&amp;amp;block)&lt;br/&gt;cycle(n, &amp;amp;block) cycle&lt;/a&gt;, &lt;a href=&quot;enumerable#each(&amp;amp;block:T-%3EUNDERSCORE)-instance-method&quot;&gt; each(&amp;amp;block : T -&amp;gt; UNDERSCORE) each&lt;/a&gt;, &lt;a href=&quot;enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_cons(count : Int, reuse = false, &amp;amp;block) each_cons&lt;/a&gt;, &lt;a href=&quot;enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_slice(count : Int, reuse = false, &amp;amp;block) each_slice&lt;/a&gt;, &lt;a href=&quot;enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt; each_with_index(offset = 0, &amp;amp;block) each_with_index&lt;/a&gt;, &lt;a href=&quot;enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt; each_with_object(obj, &amp;amp;block) each_with_object&lt;/a&gt;, &lt;a href=&quot;enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt; find(if_none = nil, &amp;amp;block) find&lt;/a&gt;, &lt;a href=&quot;enumerable#first(count:Int)-instance-method&quot;&gt; first(count : Int)&lt;br/&gt;first first&lt;/a&gt;, &lt;a href=&quot;enumerable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;enumerable#flat_map(&amp;amp;block:T-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt; flat_map(&amp;amp;block : T -&amp;gt; Array(U) | Iterator(U) | U) forall U flat_map&lt;/a&gt;, &lt;a href=&quot;enumerable#grep(pattern)-instance-method&quot;&gt; grep(pattern) grep&lt;/a&gt;, &lt;a href=&quot;enumerable#group_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; group_by(&amp;amp;block : T -&amp;gt; U) forall U group_by&lt;/a&gt;, &lt;a href=&quot;enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt; in_groups_of(size : Int, filled_up_with : U = nil) forall U&lt;br/&gt;in_groups_of(size : Int, filled_up_with : U = nil, reuse = false, &amp;amp;block) forall U in_groups_of&lt;/a&gt;, &lt;a href=&quot;enumerable#includes?(obj)-instance-method&quot;&gt; includes?(obj) includes?&lt;/a&gt;, &lt;a href=&quot;enumerable#index(&amp;amp;block)-instance-method&quot;&gt; index(&amp;amp;block)&lt;br/&gt;index(obj) index&lt;/a&gt;, &lt;a href=&quot;enumerable#index_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; index_by(&amp;amp;block : T -&amp;gt; U) forall U index_by&lt;/a&gt;,  join(separator = &quot;&quot;, &amp;amp;block)</source>
          <target state="translated">&lt;a href=&quot;enumerable#all?(&amp;amp;block)-instance-method&quot;&gt;全部？（＆block）&lt;br/&gt;全部？（模式）&lt;br/&gt;全部？所有？&lt;/a&gt;，&lt;a href=&quot;enumerable#any?(&amp;amp;block)-instance-method&quot;&gt;对吗？（＆block）&lt;br/&gt;对吗？（模式）&lt;br/&gt;对吗？任何？&lt;/a&gt;，所有&lt;a href=&quot;enumerable#chunks(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;U个块的chunks（＆block：T-&amp;gt; U）&lt;/a&gt;，&lt;a href=&quot;enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt;compact_map（＆block）compact_map&lt;/a&gt;，&lt;a href=&quot;enumerable#count(item)-instance-method&quot;&gt;count（item）&lt;br/&gt;count（＆block）count&lt;/a&gt;，&lt;a href=&quot;enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt;cycle（＆block）&lt;br/&gt;cycle（n，＆block）cycle&lt;/a&gt;，&lt;a href=&quot;enumerable#each(&amp;amp;block:T-%3EUNDERSCORE)-instance-method&quot;&gt;每个（＆block：T-&amp;gt; UNDERSCORE ）each&lt;/a&gt;，&lt;a href=&quot;enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_cons（count：Int，复用= false，＆block）each_cons&lt;/a&gt;，&lt;a href=&quot;enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_slice（count：Int，复用= false，＆block）each_slice&lt;/a&gt;，&lt;a href=&quot;enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt;each_with_index（offset = 0，＆block）each_with_index&lt;/a&gt;，&lt;a href=&quot;enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt;each_with_object（obj，＆block）each_with_object&lt;/a&gt;，&lt;a href=&quot;enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt;find（if_none = nil，＆block）find&lt;/a&gt;，&lt;a href=&quot;enumerable#first(count:Int)-instance-method&quot;&gt;first（count：Int）&lt;br/&gt;首先&lt;/a&gt;，&lt;a href=&quot;enumerable#first?-instance-method&quot;&gt;首先？第一？&lt;/a&gt;，&lt;a href=&quot;enumerable#flat_map(&amp;amp;block:T-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt;flat_map（＆block：T-&amp;gt; Array（U）| Iterator（U）| U）全部U flat_map&lt;/a&gt;，&lt;a href=&quot;enumerable#grep(pattern)-instance-method&quot;&gt;grep（pattern）grep&lt;/a&gt;，&lt;a href=&quot;enumerable#group_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;group_by（＆block：T-&amp;gt; U）全部U group_by&lt;/a&gt;，&lt;a href=&quot;enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt;in_groups_of（size：Int，fill_up_with ：U = nil）forall U &lt;br/&gt;in_groups_of（size：Int，fill_up_with：U = nil，复用= false，＆block）forall U in_groups_of&lt;/a&gt;，&lt;a href=&quot;enumerable#includes?(obj)-instance-method&quot;&gt;include？（obj）includes？&lt;/a&gt;，&lt;a href=&quot;enumerable#index(&amp;amp;block)-instance-method&quot;&gt;index（＆block）&lt;br/&gt;index（obj）index&lt;/a&gt;，&lt;a href=&quot;enumerable#index_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;index_by（＆block：T-&amp;gt; U）for all U index_by&lt;/a&gt;，join（separator =&amp;ldquo;&amp;rdquo;，＆block）</target>
        </trans-unit>
        <trans-unit id="15cd4e254cdb3726fa01f9f5195497cf98141123" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enumerable#all?(&amp;amp;block)-instance-method&quot;&gt; all?(&amp;amp;block)&lt;br/&gt;all?(pattern)&lt;br/&gt;all? all?&lt;/a&gt;, &lt;a href=&quot;enumerable#any?(&amp;amp;block)-instance-method&quot;&gt; any?(&amp;amp;block)&lt;br/&gt;any?(pattern)&lt;br/&gt;any? any?&lt;/a&gt;, &lt;a href=&quot;enumerable#chunks(&amp;amp;block:Union(T)-%3EU)forallU-instance-method&quot;&gt; chunks(&amp;amp;block : Union(T) -&amp;gt; U) forall U chunks&lt;/a&gt;, &lt;a href=&quot;enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt; compact_map(&amp;amp;block) compact_map&lt;/a&gt;, &lt;a href=&quot;enumerable#count(item)-instance-method&quot;&gt; count(item)&lt;br/&gt;count(&amp;amp;block) count&lt;/a&gt;, &lt;a href=&quot;enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt; cycle(&amp;amp;block)&lt;br/&gt;cycle(n, &amp;amp;block) cycle&lt;/a&gt;, &lt;a href=&quot;enumerable#each(&amp;amp;block:Union(T)-%3EUNDERSCORE)-instance-method&quot;&gt; each(&amp;amp;block : Union(T) -&amp;gt; UNDERSCORE) each&lt;/a&gt;, &lt;a href=&quot;enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_cons(count : Int, reuse = false, &amp;amp;block) each_cons&lt;/a&gt;, &lt;a href=&quot;enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_slice(count : Int, reuse = false, &amp;amp;block) each_slice&lt;/a&gt;, &lt;a href=&quot;enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt; each_with_index(offset = 0, &amp;amp;block) each_with_index&lt;/a&gt;, &lt;a href=&quot;enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt; each_with_object(obj, &amp;amp;block) each_with_object&lt;/a&gt;, &lt;a href=&quot;enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt; find(if_none = nil, &amp;amp;block) find&lt;/a&gt;, &lt;a href=&quot;enumerable#first(count:Int)-instance-method&quot;&gt; first(count : Int)&lt;br/&gt;first first&lt;/a&gt;, &lt;a href=&quot;enumerable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;enumerable#flat_map(&amp;amp;block:Union(T)-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt; flat_map(&amp;amp;block : Union(T) -&amp;gt; Array(U) | Iterator(U) | U) forall U flat_map&lt;/a&gt;, &lt;a href=&quot;enumerable#grep(pattern)-instance-method&quot;&gt; grep(pattern) grep&lt;/a&gt;, &lt;a href=&quot;enumerable#group_by(&amp;amp;block:Union(T)-%3EU)forallU-instance-method&quot;&gt; group_by(&amp;amp;block : Union(T) -&amp;gt; U) forall U group_by&lt;/a&gt;, &lt;a href=&quot;enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt; in_groups_of(size : Int, filled_up_with : U = nil) forall U&lt;br/&gt;in_groups_of(size : Int, filled_up_with : U = nil, reuse = false, &amp;amp;block) forall U in_groups_of&lt;/a&gt;, &lt;a href=&quot;enumerable#includes?(obj)-instance-method&quot;&gt; includes?(obj) includes?&lt;/a&gt;, &lt;a href=&quot;enumerable#index(&amp;amp;block)-instance-method&quot;&gt; index(&amp;amp;block)&lt;br/&gt;index(obj) index&lt;/a&gt;, &lt;a href=&quot;enumerable#index_by(&amp;amp;block:Union(T)-%3EU)forallU-instance-method&quot;&gt; index_by(&amp;amp;block : Union(T) -&amp;gt; U) forall U index_by&lt;/a&gt;,  join(separator = &quot;&quot;, &amp;amp;block)</source>
          <target state="translated">&lt;a href=&quot;enumerable#all?(&amp;amp;block)-instance-method&quot;&gt;全部？（＆block）&lt;br/&gt;全部？（模式）&lt;br/&gt;全部？所有？&lt;/a&gt;，&lt;a href=&quot;enumerable#any?(&amp;amp;block)-instance-method&quot;&gt;对吗？（＆block）&lt;br/&gt;对吗？（模式）&lt;br/&gt;对吗？任何？&lt;/a&gt;，所有&lt;a href=&quot;enumerable#chunks(&amp;amp;block:Union(T)-%3EU)forallU-instance-method&quot;&gt;U个块的chunks（＆block：Union（T）-&amp;gt; U）&lt;/a&gt;，&lt;a href=&quot;enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt;compact_map（＆block）compact_map&lt;/a&gt;，&lt;a href=&quot;enumerable#count(item)-instance-method&quot;&gt;count（item）&lt;br/&gt;count（＆block）count&lt;/a&gt;，&lt;a href=&quot;enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt;cycle（＆block）&lt;br/&gt;cycle（n，＆block）cycle&lt;/a&gt;，&lt;a href=&quot;enumerable#each(&amp;amp;block:Union(T)-%3EUNDERSCORE)-instance-method&quot;&gt;每个（＆block：Union （T）-&amp;gt; UNDERSCORE）每个&lt;/a&gt;，&lt;a href=&quot;enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_cons（count：Int，复用= false，＆block）each_cons&lt;/a&gt;，&lt;a href=&quot;enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;每个_slice（count：Int，复用= false，＆block）每个_slice&lt;/a&gt;，&lt;a href=&quot;enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt;each_with_index（offset = 0，＆block）each_with_index&lt;/a&gt;，&lt;a href=&quot;enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt;each_with_object（obj） ，＆&lt;/a&gt;块）each_with_object ，&lt;a href=&quot;enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt;find（if_none = nil，＆block）find&lt;/a&gt;，&lt;a href=&quot;enumerable#first(count:Int)-instance-method&quot;&gt;first（count：Int）&lt;br/&gt;首先&lt;/a&gt;，&lt;a href=&quot;enumerable#first?-instance-method&quot;&gt;首先？第一？&lt;/a&gt;，&lt;a href=&quot;enumerable#flat_map(&amp;amp;block:Union(T)-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt;flat_map（＆block：Union（T）-&amp;gt; Array（U）| Iterator（U）| U）for all U flat_map&lt;/a&gt;，&lt;a href=&quot;enumerable#grep(pattern)-instance-method&quot;&gt;grep（pattern）grep&lt;/a&gt;，&lt;a href=&quot;enumerable#group_by(&amp;amp;block:Union(T)-%3EU)forallU-instance-method&quot;&gt;group_by（＆block：Union（T）-&amp;gt; U）&lt;/a&gt;&lt;a href=&quot;enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt;for all &lt;br/&gt;&lt;/a&gt;U group_by，in_groups_of （size：Int，fill_up_with：U = nil）forall U in_groups_of（size：Int，filled_up_with：U = nil，复用= false，＆block）forall U in_groups_of，&lt;a href=&quot;enumerable#includes?(obj)-instance-method&quot;&gt;包括吗？&lt;/a&gt;，&lt;a href=&quot;enumerable#index(&amp;amp;block)-instance-method&quot;&gt;index（＆block）&lt;br/&gt;index（obj）index&lt;/a&gt;，&lt;a href=&quot;enumerable#index_by(&amp;amp;block:Union(T)-%3EU)forallU-instance-method&quot;&gt;index_by（＆block：Union（T）-&amp;gt; U）for all U index_by&lt;/a&gt;，join（separator =&amp;ldquo;&amp;rdquo;，＆block）</target>
        </trans-unit>
        <trans-unit id="fb5cf0d80d17e0ed0a30c12ebbc3468381937310" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error#file:String-instance-method&quot;&gt; file : String file&lt;/a&gt;, &lt;a href=&quot;error#other:String?-instance-method&quot;&gt; other : String? other&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;error#file:String-instance-method&quot;&gt;文件：字符串文件&lt;/a&gt;，&lt;a href=&quot;error#other:String?-instance-method&quot;&gt;其他：字符串？其他&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7fab8d6cced4be7ecceb6ac6b0718c29db48406e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evented#evented_close-instance-method&quot;&gt; evented_close evented_close&lt;/a&gt;, &lt;a href=&quot;evented#evented_read(slice:Bytes,errno_msg:String,&amp;amp;):Int32-instance-method&quot;&gt; evented_read(slice : Bytes, errno_msg : String, &amp;amp;) : Int32 evented_read&lt;/a&gt;, &lt;a href=&quot;evented#evented_reopen-instance-method&quot;&gt; evented_reopen evented_reopen&lt;/a&gt;, &lt;a href=&quot;evented#evented_send(slice:Bytes,errno_msg:String,&amp;amp;):Int32-instance-method&quot;&gt; evented_send(slice : Bytes, errno_msg : String, &amp;amp;) : Int32 evented_send&lt;/a&gt;, &lt;a href=&quot;evented#evented_write(slice:Bytes,errno_msg:String,&amp;amp;):Nil-instance-method&quot;&gt; evented_write(slice : Bytes, errno_msg : String, &amp;amp;) : Nil evented_write&lt;/a&gt;, &lt;a href=&quot;evented#read_timeout:Time::Span?-instance-method&quot;&gt; read_timeout : Time::Span? read_timeout&lt;/a&gt;, &lt;a href=&quot;evented#read_timeout=(read_timeout:Number):Number-instance-method&quot;&gt; read_timeout=(read_timeout : Number) : Number&lt;br/&gt;read_timeout=(timeout : Time::Span?) : Time::Span? read_timeout=&lt;/a&gt;, &lt;a href=&quot;evented#write_timeout:Time::Span?-instance-method&quot;&gt; write_timeout : Time::Span? write_timeout&lt;/a&gt;, &lt;a href=&quot;evented#write_timeout=(write_timeout:Number):Number-instance-method&quot;&gt; write_timeout=(write_timeout : Number) : Number&lt;br/&gt;write_timeout=(timeout : Time::Span?) : Time::Span? write_timeout=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;evented#evented_close-instance-method&quot;&gt;evented_close evented_close&lt;/a&gt;，&lt;a href=&quot;evented#evented_read(slice:Bytes,errno_msg:String,&amp;amp;):Int32-instance-method&quot;&gt;evented_read（slice：Bytes，errno_msg：String，＆）：Int32 evented_read&lt;/a&gt;，&lt;a href=&quot;evented#evented_reopen-instance-method&quot;&gt;evented_reopen evented_reopen&lt;/a&gt;，&lt;a href=&quot;evented#evented_send(slice:Bytes,errno_msg:String,&amp;amp;):Int32-instance-method&quot;&gt;evented_send（slice：Bytes，errno_msg：String，＆）：Int32 evented_send&lt;/a&gt;，&lt;a href=&quot;evented#evented_write(slice:Bytes,errno_msg:String,&amp;amp;):Nil-instance-method&quot;&gt;evented_writes（slice：Bytes） ：无evented_write&lt;/a&gt;，read_timeout &lt;a href=&quot;evented#read_timeout:Time::Span?-instance-method&quot;&gt;：时间::跨度？ read_timeout&lt;/a&gt;，&lt;a href=&quot;evented#read_timeout=(read_timeout:Number):Number-instance-method&quot;&gt;read_timeout =（read_timeout：Number）：数字&lt;br/&gt;read_timeout =（timeout：Time :: Span？）：Time :: Span？&lt;/a&gt;&lt;a href=&quot;evented#write_timeout:Time::Span?-instance-method&quot;&gt;read_timeout &lt;/a&gt;=，write_timeout：时间::跨度？ write_timeout，&lt;a href=&quot;evented#write_timeout=(write_timeout:Number):Number-instance-method&quot;&gt;write_timeout =（write_timeout：Number）：数字&lt;br/&gt;write_timeout =（timeout：Time :: Span？）：Time :: Span？ write_timeout =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f1addcb9c5cfb384b0f6054a9604fe8ca1a1ca80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evented#evented_close-instance-method&quot;&gt; evented_close evented_close&lt;/a&gt;, &lt;a href=&quot;evented#evented_read(slice:Bytes,errno_msg:String,&amp;amp;block):Int32-instance-method&quot;&gt; evented_read(slice : Bytes, errno_msg : String, &amp;amp;block) : Int32 evented_read&lt;/a&gt;, &lt;a href=&quot;evented#evented_reopen-instance-method&quot;&gt; evented_reopen evented_reopen&lt;/a&gt;, &lt;a href=&quot;evented#evented_send(slice:Bytes,errno_msg:String,&amp;amp;block):Int32-instance-method&quot;&gt; evented_send(slice : Bytes, errno_msg : String, &amp;amp;block) : Int32 evented_send&lt;/a&gt;, &lt;a href=&quot;evented#evented_write(slice:Bytes,errno_msg:String,&amp;amp;block):Nil-instance-method&quot;&gt; evented_write(slice : Bytes, errno_msg : String, &amp;amp;block) : Nil evented_write&lt;/a&gt;, &lt;a href=&quot;evented#read_timeout:Time::Span?-instance-method&quot;&gt; read_timeout : Time::Span? read_timeout&lt;/a&gt;, &lt;a href=&quot;evented#read_timeout=(read_timeout:Number):Number-instance-method&quot;&gt; read_timeout=(read_timeout : Number) : Number&lt;br/&gt;read_timeout=(timeout : Time::Span?) : Time::Span? read_timeout=&lt;/a&gt;, &lt;a href=&quot;evented#write_timeout:Time::Span?-instance-method&quot;&gt; write_timeout : Time::Span? write_timeout&lt;/a&gt;, &lt;a href=&quot;evented#write_timeout=(write_timeout:Number):Number-instance-method&quot;&gt; write_timeout=(write_timeout : Number) : Number&lt;br/&gt;write_timeout=(timeout : Time::Span?) : Time::Span? write_timeout=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;evented#evented_close-instance-method&quot;&gt;evented_close evented_close&lt;/a&gt;，&lt;a href=&quot;evented#evented_read(slice:Bytes,errno_msg:String,&amp;amp;block):Int32-instance-method&quot;&gt;evented_read（slice：Bytes，errno_msg：String，＆block）：Int32 evented_read&lt;/a&gt;，&lt;a href=&quot;evented#evented_reopen-instance-method&quot;&gt;evented_reopen evented_reopen&lt;/a&gt;，&lt;a href=&quot;evented#evented_send(slice:Bytes,errno_msg:String,&amp;amp;block):Int32-instance-method&quot;&gt;evented_send（slice：Bytes，errno_msg：String，＆block）：Int32 evented_send&lt;/a&gt;，&lt;a href=&quot;evented#evented_write(slice:Bytes,errno_msg:String,&amp;amp;block):Nil-instance-method&quot;&gt;evented_ms（slice :) ：否evented_write&lt;/a&gt;，read_timeout &lt;a href=&quot;evented#read_timeout:Time::Span?-instance-method&quot;&gt;：时间::跨度？ read_timeout&lt;/a&gt;，&lt;a href=&quot;evented#read_timeout=(read_timeout:Number):Number-instance-method&quot;&gt;read_timeout =（read_timeout：Number）：数字&lt;br/&gt;read_timeout =（timeout：Time :: Span？）：Time :: Span？&lt;/a&gt;&lt;a href=&quot;evented#write_timeout:Time::Span?-instance-method&quot;&gt;read_timeout &lt;/a&gt;=，write_timeout：时间::跨度？ write_timeout，&lt;a href=&quot;evented#write_timeout=(write_timeout:Number):Number-instance-method&quot;&gt;write_timeout =（write_timeout：Number）：数字&lt;br/&gt;write_timeout =（timeout：Time :: Span？）：Time :: Span？ write_timeout =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4fc311956b33fc172dad6ca9a048e3868b51e66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception#backtrace-instance-method&quot;&gt; backtrace backtrace&lt;/a&gt;, &lt;a href=&quot;exception#backtrace?-instance-method&quot;&gt; backtrace? backtrace?&lt;/a&gt;, &lt;a href=&quot;exception#callstack:CallStack?-instance-method&quot;&gt; callstack : CallStack? callstack&lt;/a&gt;, &lt;a href=&quot;exception#callstack=(callstack:CallStack?)-instance-method&quot;&gt; callstack=(callstack : CallStack?) callstack=&lt;/a&gt;, &lt;a href=&quot;exception#cause:Exception?-instance-method&quot;&gt; cause : Exception? cause&lt;/a&gt;, &lt;a href=&quot;exception#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;exception#inspect_with_backtrace(io:IO):Nil-instance-method&quot;&gt; inspect_with_backtrace(io : IO) : Nil&lt;br/&gt;inspect_with_backtrace : String inspect_with_backtrace&lt;/a&gt;, &lt;a href=&quot;exception#message:String?-instance-method&quot;&gt; message : String? message&lt;/a&gt;, &lt;a href=&quot;exception#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;exception#backtrace-instance-method&quot;&gt;backtrace backtrace&lt;/a&gt;，&lt;a href=&quot;exception#backtrace?-instance-method&quot;&gt;回溯？回溯？&lt;/a&gt;，&lt;a href=&quot;exception#callstack:CallStack?-instance-method&quot;&gt;callstack：CallStack？ callstack&lt;/a&gt;，&lt;a href=&quot;exception#callstack=(callstack:CallStack?)-instance-method&quot;&gt;callstack =（（callstack：CallStack？）callstack =&lt;/a&gt;，&lt;a href=&quot;exception#cause:Exception?-instance-method&quot;&gt;原因：异常？原因&lt;/a&gt;，&lt;a href=&quot;exception#inspect(io:IO):Nil-instance-method&quot;&gt;inspect（io：IO）：无检查&lt;/a&gt;，&lt;a href=&quot;exception#inspect_with_backtrace(io:IO):Nil-instance-method&quot;&gt;inspect_with_backtrace（io：IO）：无&lt;br/&gt;inspect_with_backtrace：字符串inspect_with_backtrace&lt;/a&gt;，&lt;a href=&quot;exception#message:String?-instance-method&quot;&gt;消息：字符串？消息&lt;/a&gt;，&lt;a href=&quot;exception#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：无to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c895ed9b1ca8727c02a64c8ce86b3a7b9f6663c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception#backtrace-instance-method&quot;&gt; backtrace backtrace&lt;/a&gt;, &lt;a href=&quot;exception#backtrace?-instance-method&quot;&gt; backtrace? backtrace?&lt;/a&gt;, &lt;a href=&quot;exception#cause:Exception?-instance-method&quot;&gt; cause : Exception? cause&lt;/a&gt;, &lt;a href=&quot;exception#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;exception#inspect_with_backtrace(io:IO):Nil-instance-method&quot;&gt; inspect_with_backtrace(io : IO) : Nil&lt;br/&gt;inspect_with_backtrace : String inspect_with_backtrace&lt;/a&gt;, &lt;a href=&quot;exception#message:String?-instance-method&quot;&gt; message : String? message&lt;/a&gt;, &lt;a href=&quot;exception#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;exception#backtrace-instance-method&quot;&gt;backtrace backtrace&lt;/a&gt;，&lt;a href=&quot;exception#backtrace?-instance-method&quot;&gt;回溯？回溯？&lt;/a&gt;，&lt;a href=&quot;exception#cause:Exception?-instance-method&quot;&gt;原因：异常？原因&lt;/a&gt;，&lt;a href=&quot;exception#inspect(io:IO):Nil-instance-method&quot;&gt;inspect（io：IO）：无检查&lt;/a&gt;，&lt;a href=&quot;exception#inspect_with_backtrace(io:IO):Nil-instance-method&quot;&gt;inspect_with_backtrace（io：IO）：无&lt;br/&gt;inspect_with_backtrace：字符串inspect_with_backtrace&lt;/a&gt;，&lt;a href=&quot;exception#message:String?-instance-method&quot;&gt;消息：字符串？消息&lt;/a&gt;，&lt;a href=&quot;exception#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：无to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a10984e6a0612a088f0c0cf7053ee2647e4faa6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;float#%25(other)-instance-method&quot;&gt; %(other) %&lt;/a&gt;, &lt;a href=&quot;float#--instance-method&quot;&gt; - -&lt;/a&gt;, &lt;a href=&quot;float#//(other)-instance-method&quot;&gt; //(other) //&lt;/a&gt;, &lt;a href=&quot;float#(other:BigDecimal)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : BigDecimal)&lt;br/&gt;&amp;lt;=&amp;gt;(other : BigRational)&lt;br/&gt;&amp;lt;=&amp;gt;(other : BigInt) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;float#days:Time::Span-instance-method&quot;&gt; days : Time::Span days&lt;/a&gt;, &lt;a href=&quot;float#fdiv(other):self-instance-method&quot;&gt; fdiv(other) : self fdiv&lt;/a&gt;, &lt;a href=&quot;float#finite?-instance-method&quot;&gt; finite? finite?&lt;/a&gt;, &lt;a href=&quot;float#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;float#hours:Time::Span-instance-method&quot;&gt; hours : Time::Span hours&lt;/a&gt;, &lt;a href=&quot;float#infinite?-instance-method&quot;&gt; infinite? infinite?&lt;/a&gt;, &lt;a href=&quot;float#microseconds:Time::Span-instance-method&quot;&gt; microseconds : Time::Span microseconds&lt;/a&gt;, &lt;a href=&quot;float#milliseconds:Time::Span-instance-method&quot;&gt; milliseconds : Time::Span milliseconds&lt;/a&gt;, &lt;a href=&quot;float#minutes:Time::Span-instance-method&quot;&gt; minutes : Time::Span minutes&lt;/a&gt;, &lt;a href=&quot;float#modulo(other)-instance-method&quot;&gt; modulo(other) modulo&lt;/a&gt;, &lt;a href=&quot;float#nan?-instance-method&quot;&gt; nan? nan?&lt;/a&gt;, &lt;a href=&quot;float#nanoseconds:Time::Span-instance-method&quot;&gt; nanoseconds : Time::Span nanoseconds&lt;/a&gt;, &lt;a href=&quot;float#remainder(other)-instance-method&quot;&gt; remainder(other) remainder&lt;/a&gt;, &lt;a href=&quot;float#seconds:Time::Span-instance-method&quot;&gt; seconds : Time::Span seconds&lt;/a&gt;, &lt;a href=&quot;float#to_big_d-instance-method&quot;&gt; to_big_d to_big_d&lt;/a&gt;, &lt;a href=&quot;float#to_big_i:BigInt-instance-method&quot;&gt; to_big_i : BigInt to_big_i&lt;/a&gt;, &lt;a href=&quot;float#to_big_r-instance-method&quot;&gt; to_big_r to_big_r&lt;/a&gt;, &lt;a href=&quot;float#to_io(io:IO,format:IO::ByteFormat)-instance-method&quot;&gt; to_io(io : IO, format : IO::ByteFormat) to_io&lt;/a&gt;, &lt;a href=&quot;float#to_json(json:JSON::Builder)-instance-method&quot;&gt; to_json(json : JSON::Builder) to_json&lt;/a&gt;, &lt;a href=&quot;float#to_json_object_key-instance-method&quot;&gt; to_json_object_key to_json_object_key&lt;/a&gt;, &lt;a href=&quot;float#weeks:Time::Span-instance-method&quot;&gt; weeks : Time::Span weeks&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;float#%25(other)-instance-method&quot;&gt;％（other）％&lt;/a&gt;，&lt;a href=&quot;float#--instance-method&quot;&gt;--&lt;/a&gt;，&lt;a href=&quot;float#//(other)-instance-method&quot;&gt;//（other）//&lt;/a&gt;，&lt;a href=&quot;float#(other:BigDecimal)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：BigDecimal）&lt;br/&gt;&amp;lt;=&amp;gt;（other：BigRational）&lt;br/&gt;&amp;lt;=&amp;gt;（other：BigInt）&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;float#days:Time::Span-instance-method&quot;&gt;天数：时间::跨越天数&lt;/a&gt;，&lt;a href=&quot;float#fdiv(other):self-instance-method&quot;&gt;fdiv（other）：自我fdiv&lt;/a&gt;，&lt;a href=&quot;float#finite?-instance-method&quot;&gt;有限吗？有限？&lt;/a&gt;，&lt;a href=&quot;float#hash(hasher)-instance-method&quot;&gt;hash（hasher）hash&lt;/a&gt;，&lt;a href=&quot;float#hours:Time::Span-instance-method&quot;&gt;hours：时间::跨度&lt;/a&gt;，&lt;a href=&quot;float#infinite?-instance-method&quot;&gt;无限？无限的？&lt;/a&gt;，&lt;a href=&quot;float#microseconds:Time::Span-instance-method&quot;&gt;微秒：Time :: Span微秒&lt;/a&gt;，&lt;a href=&quot;float#milliseconds:Time::Span-instance-method&quot;&gt;毫秒：Time :: Span毫秒&lt;/a&gt;，&lt;a href=&quot;float#minutes:Time::Span-instance-method&quot;&gt;分钟：Time :: Span分钟&lt;/a&gt;，&lt;a href=&quot;float#modulo(other)-instance-method&quot;&gt;模（其他）模&lt;/a&gt;，&lt;a href=&quot;float#nan?-instance-method&quot;&gt;nan？南吗&lt;/a&gt;，&lt;a href=&quot;float#nanoseconds:Time::Span-instance-method&quot;&gt;纳秒：时间::跨纳秒&lt;/a&gt;，&lt;a href=&quot;float#remainder(other)-instance-method&quot;&gt;其余（其余）剩余&lt;/a&gt;（&lt;a href=&quot;float#seconds:Time::Span-instance-method&quot;&gt;秒）：时间:: Span seconds&lt;/a&gt;，&lt;a href=&quot;float#to_big_d-instance-method&quot;&gt;to_big_d to_big_d&lt;/a&gt;，&lt;a href=&quot;float#to_big_i:BigInt-instance-method&quot;&gt;to_big_i：BigInt to_big_i&lt;/a&gt;，&lt;a href=&quot;float#to_big_r-instance-method&quot;&gt;to_big_r to_big_r&lt;/a&gt;，&lt;a href=&quot;float#to_io(io:IO,format:IO::ByteFormat)-instance-method&quot;&gt;to_io（io：IO，format：IO :: ByteFormat）to_io&lt;/a&gt;，&lt;a href=&quot;float#to_json(json:JSON::Builder)-instance-method&quot;&gt;to_json（json：JSON :: Builder） to_json&lt;/a&gt;，&lt;a href=&quot;float#to_json_object_key-instance-method&quot;&gt;to_json_object_key，to_json_object_key&lt;/a&gt;，&lt;a href=&quot;float#weeks:Time::Span-instance-method&quot;&gt;周：时间：：跨周&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f10057adddeba850112bb5e7717c362976af4b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;float#%25(other)-instance-method&quot;&gt; %(other) %&lt;/a&gt;, &lt;a href=&quot;float#--instance-method&quot;&gt; - -&lt;/a&gt;, &lt;a href=&quot;float#//(other)-instance-method&quot;&gt; //(other) //&lt;/a&gt;, &lt;a href=&quot;float#(other:BigDecimal)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : BigDecimal)&lt;br/&gt;&amp;lt;=&amp;gt;(other : BigRational)&lt;br/&gt;&amp;lt;=&amp;gt;(other : BigInt) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;float#days:Time::Span-instance-method&quot;&gt; days : Time::Span days&lt;/a&gt;, &lt;a href=&quot;float#fdiv(other:BigInt%7CBigFloat%7CBigDecimal%7CBigRational):self-instance-method&quot;&gt; fdiv(other : BigInt | BigFloat | BigDecimal | BigRational) : self fdiv&lt;/a&gt;, &lt;a href=&quot;float#finite?-instance-method&quot;&gt; finite? finite?&lt;/a&gt;, &lt;a href=&quot;float#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;float#hours:Time::Span-instance-method&quot;&gt; hours : Time::Span hours&lt;/a&gt;, &lt;a href=&quot;float#infinite?-instance-method&quot;&gt; infinite? infinite?&lt;/a&gt;, &lt;a href=&quot;float#microseconds:Time::Span-instance-method&quot;&gt; microseconds : Time::Span microseconds&lt;/a&gt;, &lt;a href=&quot;float#milliseconds:Time::Span-instance-method&quot;&gt; milliseconds : Time::Span milliseconds&lt;/a&gt;, &lt;a href=&quot;float#minutes:Time::Span-instance-method&quot;&gt; minutes : Time::Span minutes&lt;/a&gt;, &lt;a href=&quot;float#modulo(other)-instance-method&quot;&gt; modulo(other) modulo&lt;/a&gt;, &lt;a href=&quot;float#nan?-instance-method&quot;&gt; nan? nan?&lt;/a&gt;, &lt;a href=&quot;float#nanoseconds:Time::Span-instance-method&quot;&gt; nanoseconds : Time::Span nanoseconds&lt;/a&gt;, &lt;a href=&quot;float#remainder(other)-instance-method&quot;&gt; remainder(other) remainder&lt;/a&gt;, &lt;a href=&quot;float#seconds:Time::Span-instance-method&quot;&gt; seconds : Time::Span seconds&lt;/a&gt;, &lt;a href=&quot;float#to_big_d-instance-method&quot;&gt; to_big_d to_big_d&lt;/a&gt;, &lt;a href=&quot;float#to_big_i:BigInt-instance-method&quot;&gt; to_big_i : BigInt to_big_i&lt;/a&gt;, &lt;a href=&quot;float#to_big_r-instance-method&quot;&gt; to_big_r to_big_r&lt;/a&gt;, &lt;a href=&quot;float#to_io(io:IO,format:IO::ByteFormat)-instance-method&quot;&gt; to_io(io : IO, format : IO::ByteFormat) to_io&lt;/a&gt;, &lt;a href=&quot;float#to_json(json:JSON::Builder)-instance-method&quot;&gt; to_json(json : JSON::Builder) to_json&lt;/a&gt;, &lt;a href=&quot;float#to_json_object_key-instance-method&quot;&gt; to_json_object_key to_json_object_key&lt;/a&gt;, &lt;a href=&quot;float#weeks:Time::Span-instance-method&quot;&gt; weeks : Time::Span weeks&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;float#%25(other)-instance-method&quot;&gt;％（other）％&lt;/a&gt;，&lt;a href=&quot;float#--instance-method&quot;&gt;--&lt;/a&gt;，&lt;a href=&quot;float#//(other)-instance-method&quot;&gt;//（other）//&lt;/a&gt;，&lt;a href=&quot;float#(other:BigDecimal)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：BigDecimal）&lt;br/&gt;&amp;lt;=&amp;gt;（other：BigRational）&lt;br/&gt;&amp;lt;=&amp;gt;（other：BigInt）&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;float#days:Time::Span-instance-method&quot;&gt;天数：时间::跨越天数&lt;/a&gt;，&lt;a href=&quot;float#fdiv(other:BigInt%7CBigFloat%7CBigDecimal%7CBigRational):self-instance-method&quot;&gt;fdiv（其他：BigInt | BigFloat | BigDecimal | BigRational）：自我fdiv&lt;/a&gt;，&lt;a href=&quot;float#finite?-instance-method&quot;&gt;有限吗？有限？&lt;/a&gt;，&lt;a href=&quot;float#hash(hasher)-instance-method&quot;&gt;hash（hasher）hash&lt;/a&gt;，&lt;a href=&quot;float#hours:Time::Span-instance-method&quot;&gt;hours：时间:: Span hours&lt;/a&gt;，是&lt;a href=&quot;float#infinite?-instance-method&quot;&gt;无限的？无穷？&lt;/a&gt;，&lt;a href=&quot;float#microseconds:Time::Span-instance-method&quot;&gt;微秒：Time :: Span微秒&lt;/a&gt;，&lt;a href=&quot;float#milliseconds:Time::Span-instance-method&quot;&gt;毫秒：Time :: Span毫秒&lt;/a&gt;，&lt;a href=&quot;float#minutes:Time::Span-instance-method&quot;&gt;分钟：Time :: Span分钟&lt;/a&gt;，&lt;a href=&quot;float#modulo(other)-instance-method&quot;&gt;模（其他）模&lt;/a&gt;，&lt;a href=&quot;float#nan?-instance-method&quot;&gt;nan？南吗&lt;/a&gt;，&lt;a href=&quot;float#nanoseconds:Time::Span-instance-method&quot;&gt;纳秒：时间::跨度纳秒&lt;/a&gt;，&lt;a href=&quot;float#remainder(other)-instance-method&quot;&gt;余数（其他）余数&lt;/a&gt;，&lt;a href=&quot;float#seconds:Time::Span-instance-method&quot;&gt;秒：时间::跨度秒&lt;/a&gt;，&lt;a href=&quot;float#to_big_d-instance-method&quot;&gt;to_big_d to_big_d&lt;/a&gt;，&lt;a href=&quot;float#to_big_i:BigInt-instance-method&quot;&gt;to_big_i：BigInt有to_big_i&lt;/a&gt;，&lt;a href=&quot;float#to_big_r-instance-method&quot;&gt;to_big_r to_big_r&lt;/a&gt;，&lt;a href=&quot;float#to_io(io:IO,format:IO::ByteFormat)-instance-method&quot;&gt;to_io（IO：IO，格式：IO :: ByteFormat）to_io&lt;/a&gt;，&lt;a href=&quot;float#to_json(json:JSON::Builder)-instance-method&quot;&gt;to_json（ json：JSON :: Builder）to_json&lt;/a&gt;，&lt;a href=&quot;float#to_json_object_key-instance-method&quot;&gt;to_json_object_key to_json_object_key&lt;/a&gt;，week &lt;a href=&quot;float#weeks:Time::Span-instance-method&quot;&gt;：时间::跨周&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23ecaab67f58412da777ec4e46bdac4e54b618cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;handler#call(context:HTTP::Server::Context)-instance-method&quot;&gt; call(context : HTTP::Server::Context) call&lt;/a&gt;, &lt;a href=&quot;handler#call_next(context:HTTP::Server::Context)-instance-method&quot;&gt; call_next(context : HTTP::Server::Context) call_next&lt;/a&gt;, &lt;a href=&quot;handler#next:Handler%7CHandlerProc%7CNil-instance-method&quot;&gt; next : Handler | HandlerProc | Nil next&lt;/a&gt;, &lt;a href=&quot;handler#next=(next__arg0:Handler%7CHandlerProc%7CNil)-instance-method&quot;&gt; next=(next __arg0 : Handler | HandlerProc | Nil) next=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;handler#call(context:HTTP::Server::Context)-instance-method&quot;&gt;call（context：HTTP :: Server :: Context）call&lt;/a&gt;，&lt;a href=&quot;handler#call_next(context:HTTP::Server::Context)-instance-method&quot;&gt;call_next（context：HTTP :: Server :: Context）call_next&lt;/a&gt;，&lt;a href=&quot;handler#next:Handler%7CHandlerProc%7CNil-instance-method&quot;&gt;下一个：处理程序| HandlerProc | Nil next&lt;/a&gt;，&lt;a href=&quot;handler#next=(next__arg0:Handler%7CHandlerProc%7CNil)-instance-method&quot;&gt;next =（下一个__arg0：Handler | HandlerProc | Nil）next =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51516f6fd6f0924e82945def1ddbb2a1c5873c27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://crystal-lang.org/api/Bool.html&quot;&gt;Bool&lt;/a&gt; has only two possible values: &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;. They are constructed using the following literals:</source>
          <target state="translated">&lt;a href=&quot;http://crystal-lang.org/api/Bool.html&quot;&gt;Bool&lt;/a&gt;只有两个可能的值： &lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;false&lt;/code&gt; 。它们使用以下文字构造：</target>
        </trans-unit>
        <trans-unit id="f0f3b89a6c7b0114802eb94e5ede5d28aef879f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://crystal-lang.org/api/Hash.html#each(&amp;amp;&quot;&gt;Hash(K, V)#each&lt;/a&gt;:Nil-instance-method) passes &lt;code&gt;Tuple(K, V)&lt;/code&gt; to the block so iterating key-value pairs works with auto-splatting:</source>
          <target state="translated">&lt;a href=&quot;http://crystal-lang.org/api/Hash.html#each(&amp;amp;&quot;&gt;Hash（K，V）#each&lt;/a&gt;：Nil-instance-method）将 &lt;code&gt;Tuple(K, V)&lt;/code&gt; 传递给该块，因此迭代键值对可自动进行拼写：</target>
        </trans-unit>
        <trans-unit id="6aa9feaacebcaa5a83eaea499f43ce37e7ee60e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://crystal-lang.org/reference/syntax_and_semantics/literals/hash.html&quot;&gt;Hash literals&lt;/a&gt; can also be used to create a &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://crystal-lang.org/reference/syntax_and_semantics/literals/hash.html&quot;&gt;哈希文字&lt;/a&gt;也可以用于创建 &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b32a80ad9213b2baefdf4c8373b5e7a1ff90af2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.travis-ci.com/user/deployment/pages/&quot;&gt;Click Here&lt;/a&gt; for the official documentation on deploying to GitHub-Pages with Travis CI.</source>
          <target state="translated">&lt;a href=&quot;https://docs.travis-ci.com/user/deployment/pages/&quot;&gt;单击此处，&lt;/a&gt;获取有关使用Travis CI部署到GitHub-Pages的官方文档。</target>
        </trans-unit>
        <trans-unit id="3cf808b0ef29aa77e986bc486725221cf86da558" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.travis-ci.com/user/environment-variables#defining-variables-in-repository-settings&quot;&gt;Set the Environment Variable&lt;/a&gt;, &lt;code&gt;GITHUB_TOKEN&lt;/code&gt;, with your &lt;a href=&quot;https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/&quot;&gt;personal access token&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.travis-ci.com/user/environment-variables#defining-variables-in-repository-settings&quot;&gt;设置环境变量&lt;/a&gt;， &lt;code&gt;GITHUB_TOKEN&lt;/code&gt; ，用你的&lt;a href=&quot;https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/&quot;&gt;个人访问令牌&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0ace43823e011e2ab3142e32413f7942c97c8c8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Regular_expression&quot;&gt;Regular expressions&lt;/a&gt; have their own language for describing strings.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Regular_expression&quot;&gt;正则表达式&lt;/a&gt;使用自己的语言来描述字符串。</target>
        </trans-unit>
        <trans-unit id="032636f6379e6035b08b357674032a9faad32d0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/crystal-lang/crystal-mysql&quot;&gt;crystal-lang/crystal-mysql&lt;/a&gt; for mysql &amp;amp; mariadb</source>
          <target state="translated">&lt;a href=&quot;https://github.com/crystal-lang/crystal-mysql&quot;&gt;&lt;/a&gt;用于mysql和mariadb的crystal-lang / crystal-mysql</target>
        </trans-unit>
        <trans-unit id="62fbf37a84a93b65632474f5f8461ad22f18a9c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/crystal-lang/crystal-sqlite3&quot;&gt;crystal-lang/crystal-sqlite3&lt;/a&gt; for sqlite</source>
          <target state="translated">&lt;a href=&quot;https://github.com/crystal-lang/crystal-sqlite3&quot;&gt;&lt;/a&gt;sqlite的crystal-lang / crystal-sqlite3</target>
        </trans-unit>
        <trans-unit id="f7bb1711c9ce6d6a91f8753627fbca7c627d310a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/crystal-lang/shards/blob/master/SPEC.md&quot;&gt;The spec&lt;/a&gt; is your rulebook. Follow it.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/crystal-lang/shards/blob/master/SPEC.md&quot;&gt;规格&lt;/a&gt;是您的规则手册。跟着它。</target>
        </trans-unit>
        <trans-unit id="9c95b906b8f4c6725cd494ba4ea8d2bfb813d139" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/will/crystal-pg&quot;&gt;will/crystal-pg&lt;/a&gt; for postgres</source>
          <target state="translated">&lt;a href=&quot;https://github.com/will/crystal-pg&quot;&gt;will / crystal-pg&lt;/a&gt;用于postgres</target>
        </trans-unit>
        <trans-unit id="abf6e1eac3df3cb53ab2314f13f03ab461b53c8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;(&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;(&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="48f3db27b9ec77a3695b0d313e8bdd48ad792742" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;indexable#%5B%5D(index:Int)-instance-method&quot;&gt; [](index : Int) []&lt;/a&gt;, &lt;a href=&quot;indexable#%5B%5D?(index:Int)-instance-method&quot;&gt; []?(index : Int) []?&lt;/a&gt;, &lt;a href=&quot;indexable#bsearch(&amp;amp;block:T-%3EBool)-instance-method&quot;&gt; bsearch(&amp;amp;block : T -&amp;gt; Bool) bsearch&lt;/a&gt;, &lt;a href=&quot;indexable#bsearch_index(&amp;amp;block:T,Int32-%3EBool)-instance-method&quot;&gt; bsearch_index(&amp;amp;block : T, Int32 -&amp;gt; Bool) bsearch_index&lt;/a&gt;, &lt;a href=&quot;indexable#dig(index:Int,*subindexes)-instance-method&quot;&gt; dig(index : Int, *subindexes) dig&lt;/a&gt;, &lt;a href=&quot;indexable#dig?(index:Int,*subindexes)-instance-method&quot;&gt; dig?(index : Int, *subindexes) dig?&lt;/a&gt;, &lt;a href=&quot;indexable#each(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt; each(*, start : Int, count : Int, &amp;amp;block)&lt;br/&gt;each(*, within range : Range, &amp;amp;block)&lt;br/&gt;each(&amp;amp;block)&lt;br/&gt;each each&lt;/a&gt;, &lt;a href=&quot;indexable#each_index(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt; each_index(*, start : Int, count : Int, &amp;amp;block)&lt;br/&gt;each_index(&amp;amp;block) : Nil&lt;br/&gt;each_index each_index&lt;/a&gt;, &lt;a href=&quot;indexable#empty?-instance-method&quot;&gt; empty? empty?&lt;/a&gt;, &lt;a href=&quot;indexable#equals?(other:Indexable,&amp;amp;block)-instance-method&quot;&gt; equals?(other : Indexable, &amp;amp;block)&lt;br/&gt;equals?(other, &amp;amp;block) equals?&lt;/a&gt;, &lt;a href=&quot;indexable#fetch(index,default)-instance-method&quot;&gt; fetch(index, default)&lt;br/&gt;fetch(index : Int, &amp;amp;block) fetch&lt;/a&gt;, &lt;a href=&quot;indexable#first-instance-method&quot;&gt; first&lt;br/&gt;first(&amp;amp;block) first&lt;/a&gt;, &lt;a href=&quot;indexable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;indexable#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;indexable#index(object,offset:Int=0)-instance-method&quot;&gt; index(object, offset : Int = 0)&lt;br/&gt;index(offset : Int = 0, &amp;amp;block) index&lt;/a&gt;,  join(separator = &quot;&quot;) join, &lt;a href=&quot;indexable#last-instance-method&quot;&gt; last&lt;br/&gt;last(&amp;amp;block) last&lt;/a&gt;, &lt;a href=&quot;indexable#last?-instance-method&quot;&gt; last? last?&lt;/a&gt;, &lt;a href=&quot;indexable#reverse_each(&amp;amp;block):Nil-instance-method&quot;&gt; reverse_each(&amp;amp;block) : Nil&lt;br/&gt;reverse_each reverse_each&lt;/a&gt;, &lt;a href=&quot;indexable#rindex(offset=size-1,&amp;amp;block)-instance-method&quot;&gt; rindex(offset = size - 1, &amp;amp;block)&lt;br/&gt;rindex(value, offset = size - 1) rindex&lt;/a&gt;, &lt;a href=&quot;indexable#sample(random=Random::DEFAULT)-instance-method&quot;&gt; sample(random = Random::DEFAULT) sample&lt;/a&gt;, &lt;a href=&quot;indexable#size-instance-method&quot;&gt; size size&lt;/a&gt;, &lt;a href=&quot;indexable#to_a-instance-method&quot;&gt; to_a to_a&lt;/a&gt;, &lt;a href=&quot;indexable#unsafe_fetch(index:Int)-instance-method&quot;&gt; unsafe_fetch(index : Int) unsafe_fetch&lt;/a&gt;, &lt;a href=&quot;indexable#values_at(*indexes:Int)-instance-method&quot;&gt; values_at(*indexes : Int) values_at&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;indexable#%5B%5D(index:Int)-instance-method&quot;&gt;[]（index：Int）[]&lt;/a&gt;，&lt;a href=&quot;indexable#%5B%5D?(index:Int)-instance-method&quot;&gt;[]？（index：Int）[]？&lt;/a&gt;，&lt;a href=&quot;indexable#bsearch(&amp;amp;block:T-%3EBool)-instance-method&quot;&gt;bsearch（＆block：T-&amp;gt; Bool）bsearch&lt;/a&gt;，&lt;a href=&quot;indexable#bsearch_index(&amp;amp;block:T,Int32-%3EBool)-instance-method&quot;&gt;bsearch_index（＆block：T，Int32-&amp;gt; Bool）bsearch_index&lt;/a&gt;，&lt;a href=&quot;indexable#dig(index:Int,*subindexes)-instance-method&quot;&gt;dig（index：Int，* subindexes）dig&lt;/a&gt;，&lt;a href=&quot;indexable#dig?(index:Int,*subindexes)-instance-method&quot;&gt;dig？（index：Int，* subindexes）dig？&lt;/a&gt;，&lt;a href=&quot;indexable#each(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt;each（*，start：Int，count：Int，＆block）&lt;br/&gt;each（*，范围内：Range，＆block）&lt;br/&gt;each（＆block）&lt;br/&gt;each each&lt;/a&gt;，&lt;a href=&quot;indexable#each_index(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt;each_index（*，start：Int，count：Int，＆block）&lt;br/&gt;each_index（＆block ）：Nil &lt;br/&gt;each_index each_index&lt;/a&gt;，&lt;a href=&quot;indexable#empty?-instance-method&quot;&gt;空吗？空吗&lt;/a&gt;，&lt;a href=&quot;indexable#equals?(other:Indexable,&amp;amp;block)-instance-method&quot;&gt;等于？（其他：可索引，＆block）&lt;br/&gt;等于？（其他，＆block）等于？&lt;/a&gt;，&lt;a href=&quot;indexable#fetch(index,default)-instance-method&quot;&gt;fetch（索引，默认）&lt;br/&gt;fetch（索引：Int，＆block）fetch&lt;/a&gt;，&lt;a href=&quot;indexable#first-instance-method&quot;&gt;首先是&lt;br/&gt;first（＆block）first&lt;/a&gt;，&lt;a href=&quot;indexable#first?-instance-method&quot;&gt;首先？第一？&lt;/a&gt;，&lt;a href=&quot;indexable#hash(hasher)-instance-method&quot;&gt;hash（哈希）hash&lt;/a&gt;，&lt;a href=&quot;indexable#index(object,offset:Int=0)-instance-method&quot;&gt;index（对象，offset：Int = 0）&lt;br/&gt;index（offset：Int = 0，＆block）索引&lt;/a&gt;，join（separator =&amp;ldquo;&amp;rdquo;）join，&lt;a href=&quot;indexable#last-instance-method&quot;&gt;last &lt;br/&gt;last（＆block）last&lt;/a&gt;，&lt;a href=&quot;indexable#last?-instance-method&quot;&gt;last？持续？&lt;/a&gt;，&lt;a href=&quot;indexable#reverse_each(&amp;amp;block):Nil-instance-method&quot;&gt;reverse_each（＆block）：Nil &lt;br/&gt;reverse_each reverse_each&lt;/a&gt;，&lt;a href=&quot;indexable#rindex(offset=size-1,&amp;amp;block)-instance-method&quot;&gt;rindex（offset = size-1，＆block）&lt;br/&gt;rindex（value，offset = size-1）rindex&lt;/a&gt;，&lt;a href=&quot;indexable#sample(random=Random::DEFAULT)-instance-method&quot;&gt;sample（random = Random :: DEFAULT）sample&lt;/a&gt;，&lt;a href=&quot;indexable#size-instance-method&quot;&gt;size size&lt;/a&gt;，&lt;a href=&quot;indexable#to_a-instance-method&quot;&gt;to_a to_a&lt;/a&gt;，&lt;a href=&quot;indexable#unsafe_fetch(index:Int)-instance-method&quot;&gt;unsafe_fetch（index：Int）unsafe_fetch&lt;/a&gt;，&lt;a href=&quot;indexable#values_at(*indexes:Int)-instance-method&quot;&gt;values_at（* indexes：Int）values_at&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3acab80bc0882521b1c874353c184ecd7c7f19b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;indexable#%5B%5D(index:Int)-instance-method&quot;&gt; [](index : Int) []&lt;/a&gt;, &lt;a href=&quot;indexable#%5B%5D?(index:Int)-instance-method&quot;&gt; []?(index : Int) []?&lt;/a&gt;, &lt;a href=&quot;indexable#bsearch(&amp;amp;block:T-%3EBool)-instance-method&quot;&gt; bsearch(&amp;amp;block : T -&amp;gt; Bool) bsearch&lt;/a&gt;, &lt;a href=&quot;indexable#bsearch_index(&amp;amp;block:T,Int32-%3EBool)-instance-method&quot;&gt; bsearch_index(&amp;amp;block : T, Int32 -&amp;gt; Bool) bsearch_index&lt;/a&gt;, &lt;a href=&quot;indexable#dig(index:Int,*subindexes)-instance-method&quot;&gt; dig(index : Int, *subindexes) dig&lt;/a&gt;, &lt;a href=&quot;indexable#dig?(index:Int,*subindexes)-instance-method&quot;&gt; dig?(index : Int, *subindexes) dig?&lt;/a&gt;, &lt;a href=&quot;indexable#each-instance-method&quot;&gt; each&lt;br/&gt;each(*, within range : Range, &amp;amp;)&lt;br/&gt;each(&amp;amp;)&lt;br/&gt;each(*, start : Int, count : Int, &amp;amp;) each&lt;/a&gt;, &lt;a href=&quot;indexable#each_index(*,start:Int,count:Int,&amp;amp;)-instance-method&quot;&gt; each_index(*, start : Int, count : Int, &amp;amp;)&lt;br/&gt;each_index(&amp;amp;) : Nil&lt;br/&gt;each_index each_index&lt;/a&gt;, &lt;a href=&quot;indexable#empty?-instance-method&quot;&gt; empty? empty?&lt;/a&gt;, &lt;a href=&quot;indexable#equals?(other:Indexable,&amp;amp;)-instance-method&quot;&gt; equals?(other : Indexable, &amp;amp;)&lt;br/&gt;equals?(other, &amp;amp;) equals?&lt;/a&gt;, &lt;a href=&quot;indexable#fetch(index,default)-instance-method&quot;&gt; fetch(index, default)&lt;br/&gt;fetch(index : Int, &amp;amp;) fetch&lt;/a&gt;, &lt;a href=&quot;indexable#first(&amp;amp;)-instance-method&quot;&gt; first(&amp;amp;) first&lt;/a&gt;, &lt;a href=&quot;indexable#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;indexable#index(object,offset:Int=0)-instance-method&quot;&gt; index(object, offset : Int = 0)&lt;br/&gt;index(offset : Int = 0, &amp;amp;) index&lt;/a&gt;,  join(separator = &quot;&quot;) join, &lt;a href=&quot;indexable#last-instance-method&quot;&gt; last&lt;br/&gt;last(&amp;amp;) last&lt;/a&gt;, &lt;a href=&quot;indexable#last?-instance-method&quot;&gt; last? last?&lt;/a&gt;, &lt;a href=&quot;indexable#reverse_each(&amp;amp;):Nil-instance-method&quot;&gt; reverse_each(&amp;amp;) : Nil&lt;br/&gt;reverse_each reverse_each&lt;/a&gt;, &lt;a href=&quot;indexable#rindex(value,offset=size-1)-instance-method&quot;&gt; rindex(value, offset = size - 1)&lt;br/&gt;rindex(offset = size - 1, &amp;amp;) rindex&lt;/a&gt;, &lt;a href=&quot;indexable#sample(random=Random::DEFAULT)-instance-method&quot;&gt; sample(random = Random::DEFAULT) sample&lt;/a&gt;, &lt;a href=&quot;indexable#size-instance-method&quot;&gt; size size&lt;/a&gt;, &lt;a href=&quot;indexable#to_a-instance-method&quot;&gt; to_a to_a&lt;/a&gt;, &lt;a href=&quot;indexable#unsafe_fetch(index:Int)-instance-method&quot;&gt; unsafe_fetch(index : Int) unsafe_fetch&lt;/a&gt;, &lt;a href=&quot;indexable#values_at(*indexes:Int)-instance-method&quot;&gt; values_at(*indexes : Int) values_at&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;indexable#%5B%5D(index:Int)-instance-method&quot;&gt;[]（index：Int）[]&lt;/a&gt;，&lt;a href=&quot;indexable#%5B%5D?(index:Int)-instance-method&quot;&gt;[]？（index：Int）[]？&lt;/a&gt;，&lt;a href=&quot;indexable#bsearch(&amp;amp;block:T-%3EBool)-instance-method&quot;&gt;bsearch（＆block：T-&amp;gt; Bool）bsearch&lt;/a&gt;，&lt;a href=&quot;indexable#bsearch_index(&amp;amp;block:T,Int32-%3EBool)-instance-method&quot;&gt;bsearch_index（＆block：T，Int32-&amp;gt; Bool）bsearch_index&lt;/a&gt;，&lt;a href=&quot;indexable#dig(index:Int,*subindexes)-instance-method&quot;&gt;dig（index：Int，* subindexes）dig&lt;/a&gt;，&lt;a href=&quot;indexable#dig?(index:Int,*subindexes)-instance-method&quot;&gt;dig？（index：Int，* subindexes）dig？&lt;/a&gt;，&lt;a href=&quot;indexable#each-instance-method&quot;&gt;每个&lt;br/&gt;each（*，在范围内：＆范围内）&lt;br/&gt;each（＆）&lt;br/&gt;每个（*，开始：Int，计数：Int，＆）每个&lt;/a&gt;，&lt;a href=&quot;indexable#each_index(*,start:Int,count:Int,&amp;amp;)-instance-method&quot;&gt;each_index（*，开始：Int，计数：Int，＆）&lt;br/&gt;each_index（＆ ）：Nil &lt;br/&gt;each_index each_index&lt;/a&gt;，&lt;a href=&quot;indexable#empty?-instance-method&quot;&gt;空吗？空吗&lt;/a&gt;，&lt;a href=&quot;indexable#equals?(other:Indexable,&amp;amp;)-instance-method&quot;&gt;等于？（其他：可索引，＆）&lt;br/&gt;等于？（其他，＆）等于？&lt;/a&gt;，&lt;a href=&quot;indexable#fetch(index,default)-instance-method&quot;&gt;提取（索引，默认）&lt;br/&gt;fetch（index：Int，＆）fetch&lt;/a&gt;，&lt;a href=&quot;indexable#first(&amp;amp;)-instance-method&quot;&gt;first（＆）first&lt;/a&gt;，&lt;a href=&quot;indexable#hash(hasher)-instance-method&quot;&gt;hash（hasher）hash&lt;/a&gt;，&lt;a href=&quot;indexable#index(object,offset:Int=0)-instance-method&quot;&gt;index（object，offset：Int = 0）&lt;br/&gt;index（offset：Int = 0，＆）index&lt;/a&gt;，join（separator =&amp;ldquo;&amp;rdquo; ）加入，&lt;a href=&quot;indexable#last-instance-method&quot;&gt;最后一个&lt;br/&gt;last（＆）最后一个&lt;/a&gt;，&lt;a href=&quot;indexable#last?-instance-method&quot;&gt;最后一个？持续？&lt;/a&gt;，&lt;a href=&quot;indexable#reverse_each(&amp;amp;):Nil-instance-method&quot;&gt;reverse_each（＆）：无&lt;br/&gt;reverse_each reverse_each&lt;/a&gt;，&lt;a href=&quot;indexable#rindex(value,offset=size-1)-instance-method&quot;&gt;RINDEX（值，偏移=大小- 1）&lt;br/&gt;RINDEX（偏移=尺寸- 1，＆）RINDEX&lt;/a&gt;，&lt;a href=&quot;indexable#sample(random=Random::DEFAULT)-instance-method&quot;&gt;样品（随机=随机:: DEFAULT）样品&lt;/a&gt;，&lt;a href=&quot;indexable#size-instance-method&quot;&gt;尺寸大小&lt;/a&gt;，&lt;a href=&quot;indexable#to_a-instance-method&quot;&gt;to_a to_a&lt;/a&gt;，&lt;a href=&quot;indexable#unsafe_fetch(index:Int)-instance-method&quot;&gt;unsafe_fetch （index：Int）unsafe_fetch&lt;/a&gt;，&lt;a href=&quot;indexable#values_at(*indexes:Int)-instance-method&quot;&gt;values_at（* indexes：Int）values_at&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="946a7498386a7abc3fc27c19baad2464cd9be3a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;indexable#%5B%5D(index:Int)-instance-method&quot;&gt; [](index : Int) []&lt;/a&gt;, &lt;a href=&quot;indexable#%5B%5D?(index:Int)-instance-method&quot;&gt; []?(index : Int) []?&lt;/a&gt;, &lt;a href=&quot;indexable#bsearch(&amp;amp;block:Union(T)-%3EBool)-instance-method&quot;&gt; bsearch(&amp;amp;block : Union(T) -&amp;gt; Bool) bsearch&lt;/a&gt;, &lt;a href=&quot;indexable#bsearch_index(&amp;amp;block:Union(T),Int32-%3EBool)-instance-method&quot;&gt; bsearch_index(&amp;amp;block : Union(T), Int32 -&amp;gt; Bool) bsearch_index&lt;/a&gt;, &lt;a href=&quot;indexable#dig(index:Int,*subindexes)-instance-method&quot;&gt; dig(index : Int, *subindexes) dig&lt;/a&gt;, &lt;a href=&quot;indexable#dig?(index:Int,*subindexes)-instance-method&quot;&gt; dig?(index : Int, *subindexes) dig?&lt;/a&gt;, &lt;a href=&quot;indexable#each(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt; each(*, start : Int, count : Int, &amp;amp;block)&lt;br/&gt;each(*, within range : Range, &amp;amp;block)&lt;br/&gt;each(&amp;amp;block)&lt;br/&gt;each each&lt;/a&gt;, &lt;a href=&quot;indexable#each_index(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt; each_index(*, start : Int, count : Int, &amp;amp;block)&lt;br/&gt;each_index(&amp;amp;block) : Nil&lt;br/&gt;each_index each_index&lt;/a&gt;, &lt;a href=&quot;indexable#empty?-instance-method&quot;&gt; empty? empty?&lt;/a&gt;, &lt;a href=&quot;indexable#equals?(other:Indexable,&amp;amp;block)-instance-method&quot;&gt; equals?(other : Indexable, &amp;amp;block)&lt;br/&gt;equals?(other, &amp;amp;block) equals?&lt;/a&gt;, &lt;a href=&quot;indexable#fetch(index,default)-instance-method&quot;&gt; fetch(index, default)&lt;br/&gt;fetch(index : Int, &amp;amp;block) fetch&lt;/a&gt;, &lt;a href=&quot;indexable#first-instance-method&quot;&gt; first&lt;br/&gt;first(&amp;amp;block) first&lt;/a&gt;, &lt;a href=&quot;indexable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;indexable#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;indexable#index(object,offset:Int=0)-instance-method&quot;&gt; index(object, offset : Int = 0)&lt;br/&gt;index(offset : Int = 0, &amp;amp;block) index&lt;/a&gt;,  join(separator = &quot;&quot;) join, &lt;a href=&quot;indexable#last-instance-method&quot;&gt; last&lt;br/&gt;last(&amp;amp;block) last&lt;/a&gt;, &lt;a href=&quot;indexable#last?-instance-method&quot;&gt; last? last?&lt;/a&gt;, &lt;a href=&quot;indexable#reverse_each(&amp;amp;block):Nil-instance-method&quot;&gt; reverse_each(&amp;amp;block) : Nil&lt;br/&gt;reverse_each reverse_each&lt;/a&gt;, &lt;a href=&quot;indexable#rindex(offset=size-1,&amp;amp;block)-instance-method&quot;&gt; rindex(offset = size - 1, &amp;amp;block)&lt;br/&gt;rindex(value, offset = size - 1) rindex&lt;/a&gt;, &lt;a href=&quot;indexable#sample(random=Random::DEFAULT)-instance-method&quot;&gt; sample(random = Random::DEFAULT) sample&lt;/a&gt;, &lt;a href=&quot;indexable#size-instance-method&quot;&gt; size size&lt;/a&gt;, &lt;a href=&quot;indexable#to_a-instance-method&quot;&gt; to_a to_a&lt;/a&gt;, &lt;a href=&quot;indexable#unsafe_fetch(index:Int)-instance-method&quot;&gt; unsafe_fetch(index : Int) unsafe_fetch&lt;/a&gt;, &lt;a href=&quot;indexable#values_at(*indexes:Int)-instance-method&quot;&gt; values_at(*indexes : Int) values_at&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;indexable#%5B%5D(index:Int)-instance-method&quot;&gt;[]（index：Int）[]&lt;/a&gt;，&lt;a href=&quot;indexable#%5B%5D?(index:Int)-instance-method&quot;&gt;[]？（index：Int）[]？&lt;/a&gt;，&lt;a href=&quot;indexable#bsearch(&amp;amp;block:Union(T)-%3EBool)-instance-method&quot;&gt;bsearch（＆block：Union（T）-&amp;gt; Bool）bsearch&lt;/a&gt;，&lt;a href=&quot;indexable#bsearch_index(&amp;amp;block:Union(T),Int32-%3EBool)-instance-method&quot;&gt;bsearch_index（＆block：Union（T），Int32-&amp;gt; Bool）bsearch_index&lt;/a&gt;，&lt;a href=&quot;indexable#dig(index:Int,*subindexes)-instance-method&quot;&gt;dig（index：Int，* subindexes）dig&lt;/a&gt;，&lt;a href=&quot;indexable#dig?(index:Int,*subindexes)-instance-method&quot;&gt;dig？（index：Int，*子索引）挖？&lt;/a&gt;，&lt;a href=&quot;indexable#each(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt;each（*，start：Int，count：Int，＆block）&lt;br/&gt;each（*，范围内：Range，＆block）&lt;br/&gt;each（＆block）&lt;br/&gt;each each&lt;/a&gt;，&lt;a href=&quot;indexable#each_index(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt;each_index（*，start：Int，count：Int，＆block）&lt;br/&gt;each_index（＆block ）：Nil &lt;br/&gt;each_index each_index&lt;/a&gt;，&lt;a href=&quot;indexable#empty?-instance-method&quot;&gt;空吗？空吗&lt;/a&gt;，&lt;a href=&quot;indexable#equals?(other:Indexable,&amp;amp;block)-instance-method&quot;&gt;等于？（其他：可索引，＆block）&lt;br/&gt;等于？（其他，＆block）等于？&lt;/a&gt;，&lt;a href=&quot;indexable#fetch(index,default)-instance-method&quot;&gt;fetch（索引，默认）&lt;br/&gt;fetch（索引：Int，＆block）fetch&lt;/a&gt;，&lt;a href=&quot;indexable#first-instance-method&quot;&gt;首先是&lt;br/&gt;first（＆block）first&lt;/a&gt;，&lt;a href=&quot;indexable#first?-instance-method&quot;&gt;首先？第一？&lt;/a&gt;，&lt;a href=&quot;indexable#hash(hasher)-instance-method&quot;&gt;hash（哈希）hash&lt;/a&gt;，&lt;a href=&quot;indexable#index(object,offset:Int=0)-instance-method&quot;&gt;index（对象，offset：Int = 0）&lt;br/&gt;index（offset：Int = 0，＆block）索引&lt;/a&gt;，join（separator =&amp;ldquo;&amp;rdquo;）join，&lt;a href=&quot;indexable#last-instance-method&quot;&gt;last &lt;br/&gt;last（＆block）last&lt;/a&gt;，&lt;a href=&quot;indexable#last?-instance-method&quot;&gt;last？持续？&lt;/a&gt;，&lt;a href=&quot;indexable#reverse_each(&amp;amp;block):Nil-instance-method&quot;&gt;reverse_each（＆block）：Nil &lt;br/&gt;reverse_each reverse_each&lt;/a&gt;，&lt;a href=&quot;indexable#rindex(offset=size-1,&amp;amp;block)-instance-method&quot;&gt;rindex（offset = size-1，＆block）&lt;br/&gt;rindex（value，offset = size-1）rindex&lt;/a&gt;，&lt;a href=&quot;indexable#sample(random=Random::DEFAULT)-instance-method&quot;&gt;sample（random = Random :: DEFAULT）sample&lt;/a&gt;，&lt;a href=&quot;indexable#size-instance-method&quot;&gt;size size&lt;/a&gt;，&lt;a href=&quot;indexable#to_a-instance-method&quot;&gt;to_a to_a&lt;/a&gt;，&lt;a href=&quot;indexable#unsafe_fetch(index:Int)-instance-method&quot;&gt;unsafe_fetch（index：Int）unsafe_fetch&lt;/a&gt;，&lt;a href=&quot;indexable#values_at(*indexes:Int)-instance-method&quot;&gt;values_at（* indexes：Int）values_at&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2caaa206d85e76ba6fa34f38a00e4d2d44f3bd0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;indexable#%5B%5D(index:Int)-instance-method&quot;&gt; [](index : Int) []&lt;/a&gt;, &lt;a href=&quot;indexable#%5B%5D?(index:Int)-instance-method&quot;&gt; []?(index : Int) []?&lt;/a&gt;, &lt;a href=&quot;indexable#bsearch(&amp;amp;block:Union(T)-%3EBool)-instance-method&quot;&gt; bsearch(&amp;amp;block : Union(T) -&amp;gt; Bool) bsearch&lt;/a&gt;, &lt;a href=&quot;indexable#bsearch_index(&amp;amp;block:Union(T),Int32-%3EBool)-instance-method&quot;&gt; bsearch_index(&amp;amp;block : Union(T), Int32 -&amp;gt; Bool) bsearch_index&lt;/a&gt;, &lt;a href=&quot;indexable#dig(index:Int,*subindexes)-instance-method&quot;&gt; dig(index : Int, *subindexes) dig&lt;/a&gt;, &lt;a href=&quot;indexable#dig?(index:Int,*subindexes)-instance-method&quot;&gt; dig?(index : Int, *subindexes) dig?&lt;/a&gt;, &lt;a href=&quot;indexable#each-instance-method&quot;&gt; each&lt;br/&gt;each(*, within range : Range, &amp;amp;)&lt;br/&gt;each(&amp;amp;)&lt;br/&gt;each(*, start : Int, count : Int, &amp;amp;) each&lt;/a&gt;, &lt;a href=&quot;indexable#each_index(*,start:Int,count:Int,&amp;amp;)-instance-method&quot;&gt; each_index(*, start : Int, count : Int, &amp;amp;)&lt;br/&gt;each_index(&amp;amp;) : Nil&lt;br/&gt;each_index each_index&lt;/a&gt;, &lt;a href=&quot;indexable#empty?-instance-method&quot;&gt; empty? empty?&lt;/a&gt;, &lt;a href=&quot;indexable#equals?(other:Indexable,&amp;amp;)-instance-method&quot;&gt; equals?(other : Indexable, &amp;amp;)&lt;br/&gt;equals?(other, &amp;amp;) equals?&lt;/a&gt;, &lt;a href=&quot;indexable#fetch(index,default)-instance-method&quot;&gt; fetch(index, default)&lt;br/&gt;fetch(index : Int, &amp;amp;) fetch&lt;/a&gt;, &lt;a href=&quot;indexable#first(&amp;amp;)-instance-method&quot;&gt; first(&amp;amp;) first&lt;/a&gt;, &lt;a href=&quot;indexable#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;indexable#index(object,offset:Int=0)-instance-method&quot;&gt; index(object, offset : Int = 0)&lt;br/&gt;index(offset : Int = 0, &amp;amp;) index&lt;/a&gt;,  join(separator = &quot;&quot;) join, &lt;a href=&quot;indexable#last-instance-method&quot;&gt; last&lt;br/&gt;last(&amp;amp;) last&lt;/a&gt;, &lt;a href=&quot;indexable#last?-instance-method&quot;&gt; last? last?&lt;/a&gt;, &lt;a href=&quot;indexable#reverse_each(&amp;amp;):Nil-instance-method&quot;&gt; reverse_each(&amp;amp;) : Nil&lt;br/&gt;reverse_each reverse_each&lt;/a&gt;, &lt;a href=&quot;indexable#rindex(value,offset=size-1)-instance-method&quot;&gt; rindex(value, offset = size - 1)&lt;br/&gt;rindex(offset = size - 1, &amp;amp;) rindex&lt;/a&gt;, &lt;a href=&quot;indexable#sample(random=Random::DEFAULT)-instance-method&quot;&gt; sample(random = Random::DEFAULT) sample&lt;/a&gt;, &lt;a href=&quot;indexable#size-instance-method&quot;&gt; size size&lt;/a&gt;, &lt;a href=&quot;indexable#to_a-instance-method&quot;&gt; to_a to_a&lt;/a&gt;, &lt;a href=&quot;indexable#unsafe_fetch(index:Int)-instance-method&quot;&gt; unsafe_fetch(index : Int) unsafe_fetch&lt;/a&gt;, &lt;a href=&quot;indexable#values_at(*indexes:Int)-instance-method&quot;&gt; values_at(*indexes : Int) values_at&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;indexable#%5B%5D(index:Int)-instance-method&quot;&gt;[]（index：Int）[]&lt;/a&gt;，&lt;a href=&quot;indexable#%5B%5D?(index:Int)-instance-method&quot;&gt;[]？（index：Int）[]？&lt;/a&gt;，&lt;a href=&quot;indexable#bsearch(&amp;amp;block:Union(T)-%3EBool)-instance-method&quot;&gt;bsearch（＆block：Union（T）-&amp;gt; Bool）bsearch&lt;/a&gt;，&lt;a href=&quot;indexable#bsearch_index(&amp;amp;block:Union(T),Int32-%3EBool)-instance-method&quot;&gt;bsearch_index（＆block：Union（T），Int32-&amp;gt; Bool）bsearch_index&lt;/a&gt;，&lt;a href=&quot;indexable#dig(index:Int,*subindexes)-instance-method&quot;&gt;dig（index：Int，* subindexes）dig&lt;/a&gt;，&lt;a href=&quot;indexable#dig?(index:Int,*subindexes)-instance-method&quot;&gt;dig？（index：Int，*子索引）挖？&lt;/a&gt;，&lt;a href=&quot;indexable#each-instance-method&quot;&gt;每个&lt;br/&gt;each（*，在范围内：＆范围内）&lt;br/&gt;each（＆）&lt;br/&gt;每个（*，开始：Int，计数：Int，＆）每个&lt;/a&gt;，&lt;a href=&quot;indexable#each_index(*,start:Int,count:Int,&amp;amp;)-instance-method&quot;&gt;each_index（*，开始：Int，计数：Int，＆）&lt;br/&gt;each_index（＆ ）：Nil &lt;br/&gt;each_index each_index&lt;/a&gt;，&lt;a href=&quot;indexable#empty?-instance-method&quot;&gt;空吗？空吗&lt;/a&gt;，&lt;a href=&quot;indexable#equals?(other:Indexable,&amp;amp;)-instance-method&quot;&gt;等于？（其他：可索引，＆）&lt;br/&gt;等于？（其他，＆）等于？&lt;/a&gt;，&lt;a href=&quot;indexable#fetch(index,default)-instance-method&quot;&gt;提取（索引，默认）&lt;br/&gt;fetch（index：Int，＆）fetch&lt;/a&gt;，&lt;a href=&quot;indexable#first(&amp;amp;)-instance-method&quot;&gt;first（＆）first&lt;/a&gt;，&lt;a href=&quot;indexable#hash(hasher)-instance-method&quot;&gt;hash（hasher）hash&lt;/a&gt;，&lt;a href=&quot;indexable#index(object,offset:Int=0)-instance-method&quot;&gt;index（object，offset：Int = 0）&lt;br/&gt;index（offset：Int = 0，＆）index&lt;/a&gt;，join（separator =&amp;ldquo;&amp;rdquo; ）加入，&lt;a href=&quot;indexable#last-instance-method&quot;&gt;最后一个&lt;br/&gt;last（＆）最后一个&lt;/a&gt;，&lt;a href=&quot;indexable#last?-instance-method&quot;&gt;最后一个？持续？&lt;/a&gt;，&lt;a href=&quot;indexable#reverse_each(&amp;amp;):Nil-instance-method&quot;&gt;reverse_each（＆）：无&lt;br/&gt;reverse_each reverse_each&lt;/a&gt;，&lt;a href=&quot;indexable#rindex(value,offset=size-1)-instance-method&quot;&gt;RINDEX（值，偏移=大小- 1）&lt;br/&gt;RINDEX（偏移=尺寸- 1，＆）RINDEX&lt;/a&gt;，&lt;a href=&quot;indexable#sample(random=Random::DEFAULT)-instance-method&quot;&gt;样品（随机=随机:: DEFAULT）样品&lt;/a&gt;，&lt;a href=&quot;indexable#size-instance-method&quot;&gt;尺寸大小&lt;/a&gt;，&lt;a href=&quot;indexable#to_a-instance-method&quot;&gt;to_a to_a&lt;/a&gt;，&lt;a href=&quot;indexable#unsafe_fetch(index:Int)-instance-method&quot;&gt;unsafe_fetch （index：Int）unsafe_fetch&lt;/a&gt;，&lt;a href=&quot;indexable#values_at(*indexes:Int)-instance-method&quot;&gt;values_at（* indexes：Int）values_at&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="219c9f4d6147205f8cbd1cef68fb077a0f3f06a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;int#%25(other:BigInt):BigInt-instance-method&quot;&gt; %(other : BigInt) : BigInt&lt;br/&gt;%(other : Int) %&lt;/a&gt;, &lt;a href=&quot;int#&amp;amp;*(other:BigInt):BigInt-instance-method&quot;&gt; &amp;amp;*(other : BigInt) : BigInt &amp;amp;*&lt;/a&gt;, &lt;a href=&quot;int#&amp;amp;**(exponent:Int):self-instance-method&quot;&gt; &amp;amp;**(exponent : Int) : self &amp;amp;**&lt;/a&gt;, &lt;a href=&quot;int#&amp;amp;+(other:BigInt):BigInt-instance-method&quot;&gt; &amp;amp;+(other : BigInt) : BigInt &amp;amp;+&lt;/a&gt;, &lt;a href=&quot;int#&amp;amp;-(other:BigInt):BigInt-instance-method&quot;&gt; &amp;amp;-(other : BigInt) : BigInt &amp;amp;-&lt;/a&gt;, &lt;a href=&quot;int#*(other:BigDecimal)-instance-method&quot;&gt; *(other : BigDecimal)&lt;br/&gt;*(other : BigRational)&lt;br/&gt;*(other : BigInt) : BigInt *&lt;/a&gt;, &lt;a href=&quot;int#**(exponent:Float):Float64-instance-method&quot;&gt; **(exponent : Float) : Float64&lt;br/&gt;**(exponent : Int) : self **&lt;/a&gt;, &lt;a href=&quot;int#+(other:BigDecimal)-instance-method&quot;&gt; +(other : BigDecimal)&lt;br/&gt;+(other : BigRational)&lt;br/&gt;+(other : BigInt) : BigInt +&lt;/a&gt;, &lt;a href=&quot;int#-(other:BigDecimal)-instance-method&quot;&gt; -(other : BigDecimal)&lt;br/&gt;-(other : BigInt) : BigInt&lt;br/&gt;-(other : BigRational) -&lt;/a&gt;, &lt;a href=&quot;int#/(other:BigRational)-instance-method&quot;&gt; /(other : BigRational) /&lt;/a&gt;, &lt;a href=&quot;int#//(other:Int::Primitive)-instance-method&quot;&gt; //(other : Int::Primitive) //&lt;/a&gt;, &lt;a href=&quot;int#%3C%3C(count:Int)-instance-method&quot;&gt; &amp;lt; &amp;lt;&amp;lt;&lt;/a&gt;, &lt;a href=&quot;int#(other:BigDecimal)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : BigDecimal)&lt;br/&gt;&amp;lt;=&amp;gt;(other : BigRational)&lt;br/&gt;&amp;lt;=&amp;gt;(other : Int) : Int32&lt;br/&gt;&amp;lt;=&amp;gt;(other : BigInt) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;int#===(char:Char)-instance-method&quot;&gt; ===(char : Char) ===&lt;/a&gt;, &lt;a href=&quot;int#%3E%3E(count:Int)-instance-method&quot;&gt; &amp;gt;&amp;gt;(count : Int) &amp;gt;&amp;gt;&lt;/a&gt;, &lt;a href=&quot;int#abs-instance-method&quot;&gt; abs abs&lt;/a&gt;, &lt;a href=&quot;int#bit(bit)-instance-method&quot;&gt; bit(bit) bit&lt;/a&gt;, &lt;a href=&quot;int#bits_set?(mask)-instance-method&quot;&gt; bits_set?(mask) bits_set?&lt;/a&gt;, &lt;a href=&quot;int#ceil-instance-method&quot;&gt; ceil ceil&lt;/a&gt;, &lt;a href=&quot;int#chr-instance-method&quot;&gt; chr chr&lt;/a&gt;, &lt;a href=&quot;int#day:Time::Span-instance-method&quot;&gt; day : Time::Span day&lt;/a&gt;, &lt;a href=&quot;int#days:Time::Span-instance-method&quot;&gt; days : Time::Span days&lt;/a&gt;, &lt;a href=&quot;int#divisible_by?(num)-instance-method&quot;&gt; divisible_by?(num) divisible_by?&lt;/a&gt;, &lt;a href=&quot;int#downto(to,&amp;amp;block:self-%3E):Nil-instance-method&quot;&gt; downto(to, &amp;amp;block : self -&amp;gt; ) : Nil&lt;br/&gt;downto(to) downto&lt;/a&gt;, &lt;a href=&quot;int#even?-instance-method&quot;&gt; even? even?&lt;/a&gt;, &lt;a href=&quot;int#fdiv(other)-instance-method&quot;&gt; fdiv(other) fdiv&lt;/a&gt;, &lt;a href=&quot;int#floor-instance-method&quot;&gt; floor floor&lt;/a&gt;, &lt;a href=&quot;int#gcd(other:Int)-instance-method&quot;&gt; gcd(other : Int) gcd&lt;/a&gt;, &lt;a href=&quot;int#gcm(other:BigInt):Int-instance-method&quot;&gt; gcm(other : BigInt) : Int gcm&lt;/a&gt;, &lt;a href=&quot;int#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;int#hour:Time::Span-instance-method&quot;&gt; hour : Time::Span hour&lt;/a&gt;, &lt;a href=&quot;int#hours:Time::Span-instance-method&quot;&gt; hours : Time::Span hours&lt;/a&gt;, &lt;a href=&quot;int#humanize_bytes(io:IO,precision:Int=3,separator='.',*,significant:Bool=true,format:BinaryPrefixFormat=:IEC):Nil-instance-method&quot;&gt; humanize_bytes(io : IO, precision : Int = 3, separator = '.', *, significant : Bool = true, format : BinaryPrefixFormat = :IEC) : Nil&lt;br/&gt;humanize_bytes(precision : Int = 3, separator = '.', *, significant : Bool = true, format : BinaryPrefixFormat = :IEC) : String humanize_bytes&lt;/a&gt;, &lt;a href=&quot;int#lcm(other:Int)-instance-method&quot;&gt; lcm(other : Int)&lt;br/&gt;lcm(other : BigInt) : BigInt lcm&lt;/a&gt;, &lt;a href=&quot;int#microsecond:Time::Span-instance-method&quot;&gt; microsecond : Time::Span microsecond&lt;/a&gt;, &lt;a href=&quot;int#microseconds:Time::Span-instance-method&quot;&gt; microseconds : Time::Span microseconds&lt;/a&gt;, &lt;a href=&quot;int#millisecond:Time::Span-instance-method&quot;&gt; millisecond : Time::Span millisecond&lt;/a&gt;, &lt;a href=&quot;int#milliseconds:Time::Span-instance-method&quot;&gt; milliseconds : Time::Span milliseconds&lt;/a&gt;, &lt;a href=&quot;int#minute:Time::Span-instance-method&quot;&gt; minute : Time::Span minute&lt;/a&gt;, &lt;a href=&quot;int#minutes:Time::Span-instance-method&quot;&gt; minutes : Time::Span minutes&lt;/a&gt;, &lt;a href=&quot;int#modulo(other)-instance-method&quot;&gt; modulo(other) modulo&lt;/a&gt;, &lt;a href=&quot;int#month:Time::MonthSpan-instance-method&quot;&gt; month : Time::MonthSpan month&lt;/a&gt;, &lt;a href=&quot;int#months:Time::MonthSpan-instance-method&quot;&gt; months : Time::MonthSpan months&lt;/a&gt;, &lt;a href=&quot;int#nanosecond:Time::Span-instance-method&quot;&gt; nanosecond : Time::Span nanosecond&lt;/a&gt;, &lt;a href=&quot;int#nanoseconds:Time::Span-instance-method&quot;&gt; nanoseconds : Time::Span nanoseconds&lt;/a&gt;, &lt;a href=&quot;int#odd?-instance-method&quot;&gt; odd? odd?&lt;/a&gt;, &lt;a href=&quot;int#popcount-instance-method&quot;&gt; popcount popcount&lt;/a&gt;, &lt;a href=&quot;int#pred-instance-method&quot;&gt; pred pred&lt;/a&gt;, &lt;a href=&quot;int#remainder(other:Int)-instance-method&quot;&gt; remainder(other : Int) remainder&lt;/a&gt;, &lt;a href=&quot;int#round-instance-method&quot;&gt; round round&lt;/a&gt;, &lt;a href=&quot;int#second:Time::Span-instance-method&quot;&gt; second : Time::Span second&lt;/a&gt;, &lt;a href=&quot;int#seconds:Time::Span-instance-method&quot;&gt; seconds : Time::Span seconds&lt;/a&gt;, &lt;a href=&quot;int#succ-instance-method&quot;&gt; succ succ&lt;/a&gt;, &lt;a href=&quot;int#tdiv(other:Int)-instance-method&quot;&gt; tdiv(other : Int) tdiv&lt;/a&gt;, &lt;a href=&quot;int#times-instance-method&quot;&gt; times&lt;br/&gt;times(&amp;amp;block : self -&amp;gt; ) : Nil times&lt;/a&gt;, &lt;a href=&quot;int#to(to,&amp;amp;block:self-%3E):Nil-instance-method&quot;&gt; to(to, &amp;amp;block : self -&amp;gt; ) : Nil&lt;br/&gt;to(to) to&lt;/a&gt;, &lt;a href=&quot;int#to_big_d-instance-method&quot;&gt; to_big_d to_big_d&lt;/a&gt;, &lt;a href=&quot;int#to_big_i:BigInt-instance-method&quot;&gt; to_big_i : BigInt to_big_i&lt;/a&gt;, &lt;a href=&quot;int#to_big_r-instance-method&quot;&gt; to_big_r to_big_r&lt;/a&gt;, &lt;a href=&quot;int#to_io(io:IO,format:IO::ByteFormat)-instance-method&quot;&gt; to_io(io : IO, format : IO::ByteFormat) to_io&lt;/a&gt;, &lt;a href=&quot;int#to_json(json:JSON::Builder)-instance-method&quot;&gt; to_json(json : JSON::Builder) to_json&lt;/a&gt;, &lt;a href=&quot;int#to_json_object_key-instance-method&quot;&gt; to_json_object_key to_json_object_key&lt;/a&gt;, &lt;a href=&quot;int#to_s:String-instance-method&quot;&gt; to_s : String&lt;br/&gt;to_s(io : IO) : Nil&lt;br/&gt;to_s(base : Int, io : IO, upcase : Bool = false) : Nil&lt;br/&gt;to_s(base : Int, upcase : Bool = false) : String to_s&lt;/a&gt;, &lt;a href=&quot;int#trailing_zeros_count-instance-method&quot;&gt; trailing_zeros_count trailing_zeros_count&lt;/a&gt;, &lt;a href=&quot;int#trunc-instance-method&quot;&gt; trunc trunc&lt;/a&gt;, &lt;a href=&quot;int#upto(to)-instance-method&quot;&gt; upto(to)&lt;br/&gt;upto(to, &amp;amp;block : self -&amp;gt; ) : Nil upto&lt;/a&gt;, &lt;a href=&quot;int#week:Time::Span-instance-method&quot;&gt; week : Time::Span week&lt;/a&gt;, &lt;a href=&quot;int#weeks:Time::Span-instance-method&quot;&gt; weeks : Time::Span weeks&lt;/a&gt;, &lt;a href=&quot;int#year:Time::MonthSpan-instance-method&quot;&gt; year : Time::MonthSpan year&lt;/a&gt;, &lt;a href=&quot;int#years:Time::MonthSpan-instance-method&quot;&gt; years : Time::MonthSpan years&lt;/a&gt;, &lt;a href=&quot;int#~-instance-method&quot;&gt; ~ ~&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;int#%25(other:BigInt):BigInt-instance-method&quot;&gt;％（other：BigInt）：BigInt &lt;br/&gt;％（other：Int）％&lt;/a&gt;，&lt;a href=&quot;int#&amp;amp;*(other:BigInt):BigInt-instance-method&quot;&gt;＆*（other：BigInt）：BigInt＆*&lt;/a&gt;，&lt;a href=&quot;int#&amp;amp;**(exponent:Int):self-instance-method&quot;&gt;＆**（指数：Int）：self＆**&lt;/a&gt;，&lt;a href=&quot;int#&amp;amp;+(other:BigInt):BigInt-instance-method&quot;&gt;＆+（other：BigInt）： BigInt＆+&lt;/a&gt;，&lt;a href=&quot;int#&amp;amp;-(other:BigInt):BigInt-instance-method&quot;&gt;＆-（other：BigInt）：BigInt＆-&lt;/a&gt;，&lt;a href=&quot;int#*(other:BigDecimal)-instance-method&quot;&gt;*（other：BigDecimal）&lt;br/&gt;*（other：BigRational）&lt;br/&gt;*（other：BigInt）：BigInt *&lt;/a&gt;，&lt;a href=&quot;int#**(exponent:Float):Float64-instance-method&quot;&gt;**（指数：Float）：Float64 &lt;br/&gt;**（指数：Int）：self **&lt;/a&gt;，&lt;a href=&quot;int#+(other:BigDecimal)-instance-method&quot;&gt;+（other：BigDecimal）&lt;br/&gt;+（other：BigRational）&lt;br/&gt;+（other：BigInt）：BigInt +&lt;/a&gt;，&lt;a href=&quot;int#-(other:BigDecimal)-instance-method&quot;&gt;-（other：BigDecimal）&lt;br/&gt;-（other：BigInt）&lt;br/&gt;：BigInt-（other：BigRational ）-&lt;/a&gt;，&lt;a href=&quot;int#/(other:BigRational)-instance-method&quot;&gt;/（其他：BigRational）/&lt;/a&gt;，&lt;a href=&quot;int#//(other:Int::Primitive)-instance-method&quot;&gt;//（other：Int :: Primitive）//&lt;/a&gt;，&lt;a href=&quot;int#%3C%3C(count:Int)-instance-method&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/a&gt;，&lt;a href=&quot;int#(other:BigDecimal)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：BigDecimal）&lt;br/&gt;&amp;lt;=&amp;gt;（other：BigRational）&lt;br/&gt;&amp;lt;=&amp;gt;（other：Int）：Int32 &lt;br/&gt;&amp;lt;=&amp;gt;（other：BigInt ）&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;int#===(char:Char)-instance-method&quot;&gt;===（char：Char）===&lt;/a&gt;，&lt;a href=&quot;int#%3E%3E(count:Int)-instance-method&quot;&gt;&amp;gt;&amp;gt;（count：Int）&amp;gt;&amp;gt;&lt;/a&gt;，&lt;a href=&quot;int#abs-instance-method&quot;&gt;abs abs&lt;/a&gt;，&lt;a href=&quot;int#bit(bit)-instance-method&quot;&gt;bit（bit）位&lt;/a&gt;，&lt;a href=&quot;int#bits_set?(mask)-instance-method&quot;&gt;bits_set？（mask）bits_set？&lt;/a&gt;，&lt;a href=&quot;int#ceil-instance-method&quot;&gt;ceil ceil&lt;/a&gt;，&lt;a href=&quot;int#chr-instance-method&quot;&gt;chr chr&lt;/a&gt;，&lt;a href=&quot;int#day:Time::Span-instance-method&quot;&gt;day：Time :: Span day&lt;/a&gt;，&lt;a href=&quot;int#days:Time::Span-instance-method&quot;&gt;days：Time :: Span days&lt;/a&gt;，&lt;a href=&quot;int#divisible_by?(num)-instance-method&quot;&gt;divisible_by？（num）divisible_by？&lt;/a&gt;，&lt;a href=&quot;int#downto(to,&amp;amp;block:self-%3E):Nil-instance-method&quot;&gt;DOWNTO（于，块：自- &amp;gt;）：无&lt;br/&gt;DOWNTO（至）DOWNTO&lt;/a&gt;，&lt;a href=&quot;int#even?-instance-method&quot;&gt;甚至？甚至？&lt;/a&gt;，&lt;a href=&quot;int#fdiv(other)-instance-method&quot;&gt;fdiv（other）fdiv&lt;/a&gt;，&lt;a href=&quot;int#floor-instance-method&quot;&gt;地板&lt;/a&gt;，&lt;a href=&quot;int#gcd(other:Int)-instance-method&quot;&gt;gcd（other：Int）gcd&lt;/a&gt;，&lt;a href=&quot;int#gcm(other:BigInt):Int-instance-method&quot;&gt;gcm（other：BigInt）：Int gcm&lt;/a&gt;，&lt;a href=&quot;int#hash(hasher)-instance-method&quot;&gt;hash（hasher）hash&lt;/a&gt;，&lt;a href=&quot;int#hour:Time::Span-instance-method&quot;&gt;hour：Time :: Span hour&lt;/a&gt;，&lt;a href=&quot;int#hours:Time::Span-instance-method&quot;&gt;hours：Time :: Span hours&lt;/a&gt;，&lt;a href=&quot;int#humanize_bytes(io:IO,precision:Int=3,separator='.',*,significant:Bool=true,format:BinaryPrefixFormat=:IEC):Nil-instance-method&quot;&gt;humanize_bytes （io：IO，精度：Int = 3，分隔符='。'，*，有效：Bool = true，格式：BinaryPrefixFormat =：IEC）：无humanize_bytes &lt;br/&gt;（精度：Int = 3，分隔符='。'，*，有效：布尔= true，格式：BinaryPrefixFormat =：IEC）：字符串humanize_bytes&lt;/a&gt;，&lt;a href=&quot;int#lcm(other:Int)-instance-method&quot;&gt;lcm（other：Int）&lt;br/&gt;lcm（other：BigInt）：BigInt lcm&lt;/a&gt;，&lt;a href=&quot;int#microsecond:Time::Span-instance-method&quot;&gt;微秒：Time :: Span microsecond&lt;/a&gt;，&lt;a href=&quot;int#microseconds:Time::Span-instance-method&quot;&gt;微秒：时间::跨度微秒&lt;/a&gt;，&lt;a href=&quot;int#millisecond:Time::Span-instance-method&quot;&gt;毫秒：时间::跨度毫秒&lt;/a&gt;，&lt;a href=&quot;int#milliseconds:Time::Span-instance-method&quot;&gt;毫秒：时间::跨度毫秒&lt;/a&gt;，&lt;a href=&quot;int#minute:Time::Span-instance-method&quot;&gt;分钟：时间::跨度&lt;/a&gt;，&lt;a href=&quot;int#minutes:Time::Span-instance-method&quot;&gt;分钟：时间::跨度&lt;/a&gt;，&lt;a href=&quot;int#modulo(other)-instance-method&quot;&gt;模（其他）模&lt;/a&gt;，&lt;a href=&quot;int#month:Time::MonthSpan-instance-method&quot;&gt;月：时间： ：MonthSpan month&lt;/a&gt;，&lt;a href=&quot;int#months:Time::MonthSpan-instance-method&quot;&gt;months：时间:: MonthSpan months&lt;/a&gt;，&lt;a href=&quot;int#nanosecond:Time::Span-instance-method&quot;&gt;纳秒：时间:: Span纳秒&lt;/a&gt;，&lt;a href=&quot;int#nanoseconds:Time::Span-instance-method&quot;&gt;纳秒：时间:: Span纳秒&lt;/a&gt;，&lt;a href=&quot;int#odd?-instance-method&quot;&gt;奇数？奇？&lt;/a&gt;，&lt;a href=&quot;int#popcount-instance-method&quot;&gt;popcount popcount&lt;/a&gt;，&lt;a href=&quot;int#pred-instance-method&quot;&gt;预解码值预解码值&lt;/a&gt;，&lt;a href=&quot;int#remainder(other:Int)-instance-method&quot;&gt;余数（其他的：int）剩余&lt;/a&gt;，&lt;a href=&quot;int#round-instance-method&quot;&gt;道道&lt;/a&gt;，&lt;a href=&quot;int#second:Time::Span-instance-method&quot;&gt;秒：Time :: Span秒&lt;/a&gt;，&lt;a href=&quot;int#seconds:Time::Span-instance-method&quot;&gt;秒：Time :: Span秒&lt;/a&gt;，&lt;a href=&quot;int#succ-instance-method&quot;&gt;succ succ&lt;/a&gt;，&lt;a href=&quot;int#tdiv(other:Int)-instance-method&quot;&gt;tdiv（other：Int）tdiv&lt;/a&gt;，&lt;a href=&quot;int#times-instance-method&quot;&gt;times &lt;br/&gt;times（＆block：self-&amp;gt;）：Nil times&lt;/a&gt;，&lt;a href=&quot;int#to(to,&amp;amp;block:self-%3E):Nil-instance-method&quot;&gt;to（to，＆block：self-&amp;gt;） ：无&lt;br/&gt;至（到）到&lt;/a&gt;，&lt;a href=&quot;int#to_big_d-instance-method&quot;&gt;to_big_d to_big_d&lt;/a&gt;，&lt;a href=&quot;int#to_big_i:BigInt-instance-method&quot;&gt;to_big_i：BigInt有to_big_i&lt;/a&gt;，&lt;a href=&quot;int#to_big_r-instance-method&quot;&gt;to_big_r to_big_r&lt;/a&gt;，&lt;a href=&quot;int#to_io(io:IO,format:IO::ByteFormat)-instance-method&quot;&gt;to_io（IO：IO，格式：IO :: ByteFormat）to_io&lt;/a&gt;，&lt;a href=&quot;int#to_json(json:JSON::Builder)-instance-method&quot;&gt;to_json（JSON：JSON ::生成器）to_json&lt;/a&gt;，&lt;a href=&quot;int#to_json_object_key-instance-method&quot;&gt;to_json_object_key to_json_object_key&lt;/a&gt;，&lt;a href=&quot;int#to_s:String-instance-method&quot;&gt;to_s：字符串&lt;br/&gt;to_s（io：IO）：无&lt;br/&gt;to_s（base：Int，io：IO，upcase：Bool = false）：无&lt;br/&gt;to_s（碱：中等，upcase：BOOL =假）：字符串to_s&lt;/a&gt;，&lt;a href=&quot;int#trailing_zeros_count-instance-method&quot;&gt;trailing_zeros_count trailing_zeros_count&lt;/a&gt;，&lt;a href=&quot;int#trunc-instance-method&quot;&gt;TRUNC TRUNC&lt;/a&gt;，&lt;a href=&quot;int#upto(to)-instance-method&quot;&gt;高达（至）&lt;br/&gt;高达（于，块：自- &amp;gt;）：无高达&lt;/a&gt;，&lt;a href=&quot;int#week:Time::Span-instance-method&quot;&gt;周：时间::跨度周&lt;/a&gt;，&lt;a href=&quot;int#weeks:Time::Span-instance-method&quot;&gt;周：时间:: Span周&lt;/a&gt;，&lt;a href=&quot;int#year:Time::MonthSpan-instance-method&quot;&gt;年：时间:: MonthSpan年&lt;/a&gt;，&lt;a href=&quot;int#years:Time::MonthSpan-instance-method&quot;&gt;年：时间:: MonthSpan年&lt;/a&gt;，&lt;a href=&quot;int#~-instance-method&quot;&gt;〜〜&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b8e3ed6eaf1ba98e97d4158fbbbf76e9e526c12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;int#%25(other:BigInt):BigInt-instance-method&quot;&gt; %(other : BigInt) : BigInt&lt;br/&gt;%(other : Int) %&lt;/a&gt;, &lt;a href=&quot;int#&amp;amp;*(other:BigInt):BigInt-instance-method&quot;&gt; &amp;amp;*(other : BigInt) : BigInt &amp;amp;*&lt;/a&gt;, &lt;a href=&quot;int#&amp;amp;**(exponent:Int):self-instance-method&quot;&gt; &amp;amp;**(exponent : Int) : self &amp;amp;**&lt;/a&gt;, &lt;a href=&quot;int#&amp;amp;+(other:BigInt):BigInt-instance-method&quot;&gt; &amp;amp;+(other : BigInt) : BigInt &amp;amp;+&lt;/a&gt;, &lt;a href=&quot;int#&amp;amp;-(other:BigInt):BigInt-instance-method&quot;&gt; &amp;amp;-(other : BigInt) : BigInt &amp;amp;-&lt;/a&gt;, &lt;a href=&quot;int#*(other:BigDecimal)-instance-method&quot;&gt; *(other : BigDecimal)&lt;br/&gt;*(other : BigRational)&lt;br/&gt;*(other : BigInt) : BigInt *&lt;/a&gt;, &lt;a href=&quot;int#**(exponent:Float):Float64-instance-method&quot;&gt; **(exponent : Float) : Float64&lt;br/&gt;**(exponent : Int) : self **&lt;/a&gt;, &lt;a href=&quot;int#+(other:BigDecimal)-instance-method&quot;&gt; +(other : BigDecimal)&lt;br/&gt;+(other : BigRational)&lt;br/&gt;+(other : BigInt) : BigInt +&lt;/a&gt;, &lt;a href=&quot;int#-(other:BigInt):BigInt-instance-method&quot;&gt; -(other : BigInt) : BigInt&lt;br/&gt;-(other : BigDecimal)&lt;br/&gt;-(other : BigRational) -&lt;/a&gt;, &lt;a href=&quot;int#/(other:BigRational)-instance-method&quot;&gt; /(other : BigRational) /&lt;/a&gt;, &lt;a href=&quot;int#//(other:Int::Primitive)-instance-method&quot;&gt; //(other : Int::Primitive) //&lt;/a&gt;, &lt;a href=&quot;int#%3C%3C(count:Int)-instance-method&quot;&gt; &amp;lt; &amp;lt;&amp;lt;&lt;/a&gt;, &lt;a href=&quot;int#(other:BigDecimal)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : BigDecimal)&lt;br/&gt;&amp;lt;=&amp;gt;(other : BigRational)&lt;br/&gt;&amp;lt;=&amp;gt;(other : Int) : Int32&lt;br/&gt;&amp;lt;=&amp;gt;(other : BigInt) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;int#===(char:Char)-instance-method&quot;&gt; ===(char : Char) ===&lt;/a&gt;, &lt;a href=&quot;int#%3E%3E(count:Int)-instance-method&quot;&gt; &amp;gt;&amp;gt;(count : Int) &amp;gt;&amp;gt;&lt;/a&gt;, &lt;a href=&quot;int#abs-instance-method&quot;&gt; abs abs&lt;/a&gt;, &lt;a href=&quot;int#bit(bit)-instance-method&quot;&gt; bit(bit) bit&lt;/a&gt;, &lt;a href=&quot;int#bit_length:Int32-instance-method&quot;&gt; bit_length : Int32 bit_length&lt;/a&gt;, &lt;a href=&quot;int#bits(range:Range)-instance-method&quot;&gt; bits(range : Range) bits&lt;/a&gt;, &lt;a href=&quot;int#bits_set?(mask)-instance-method&quot;&gt; bits_set?(mask) bits_set?&lt;/a&gt;, &lt;a href=&quot;int#ceil-instance-method&quot;&gt; ceil ceil&lt;/a&gt;, &lt;a href=&quot;int#chr-instance-method&quot;&gt; chr chr&lt;/a&gt;, &lt;a href=&quot;int#day:Time::Span-instance-method&quot;&gt; day : Time::Span day&lt;/a&gt;, &lt;a href=&quot;int#days:Time::Span-instance-method&quot;&gt; days : Time::Span days&lt;/a&gt;, &lt;a href=&quot;int#digits(base=10):Array(Int32)-instance-method&quot;&gt; digits(base = 10) : Array(Int32) digits&lt;/a&gt;, &lt;a href=&quot;int#divisible_by?(num)-instance-method&quot;&gt; divisible_by?(num) divisible_by?&lt;/a&gt;, &lt;a href=&quot;int#downto(to,&amp;amp;block:self-%3E):Nil-instance-method&quot;&gt; downto(to, &amp;amp;block : self -&amp;gt; ) : Nil&lt;br/&gt;downto(to) downto&lt;/a&gt;, &lt;a href=&quot;int#even?-instance-method&quot;&gt; even? even?&lt;/a&gt;, &lt;a href=&quot;int#fdiv(other)-instance-method&quot;&gt; fdiv(other) fdiv&lt;/a&gt;, &lt;a href=&quot;int#floor-instance-method&quot;&gt; floor floor&lt;/a&gt;, &lt;a href=&quot;int#gcd(other:self):self-instance-method&quot;&gt; gcd(other : self) : self gcd&lt;/a&gt;, &lt;a href=&quot;int#gcm(other:BigInt):Int-instance-method&quot;&gt; gcm(other : BigInt) : Int gcm&lt;/a&gt;, &lt;a href=&quot;int#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;int#hour:Time::Span-instance-method&quot;&gt; hour : Time::Span hour&lt;/a&gt;, &lt;a href=&quot;int#hours:Time::Span-instance-method&quot;&gt; hours : Time::Span hours&lt;/a&gt;, &lt;a href=&quot;int#humanize_bytes(io:IO,precision:Int=3,separator='.',*,significant:Bool=true,format:BinaryPrefixFormat=:IEC):Nil-instance-method&quot;&gt; humanize_bytes(io : IO, precision : Int = 3, separator = '.', *, significant : Bool = true, format : BinaryPrefixFormat = :IEC) : Nil&lt;br/&gt;humanize_bytes(precision : Int = 3, separator = '.', *, significant : Bool = true, format : BinaryPrefixFormat = :IEC) : String humanize_bytes&lt;/a&gt;, &lt;a href=&quot;int#lcm(other:Int)-instance-method&quot;&gt; lcm(other : Int)&lt;br/&gt;lcm(other : BigInt) : BigInt lcm&lt;/a&gt;, &lt;a href=&quot;int#microsecond:Time::Span-instance-method&quot;&gt; microsecond : Time::Span microsecond&lt;/a&gt;, &lt;a href=&quot;int#microseconds:Time::Span-instance-method&quot;&gt; microseconds : Time::Span microseconds&lt;/a&gt;, &lt;a href=&quot;int#millisecond:Time::Span-instance-method&quot;&gt; millisecond : Time::Span millisecond&lt;/a&gt;, &lt;a href=&quot;int#milliseconds:Time::Span-instance-method&quot;&gt; milliseconds : Time::Span milliseconds&lt;/a&gt;, &lt;a href=&quot;int#minute:Time::Span-instance-method&quot;&gt; minute : Time::Span minute&lt;/a&gt;, &lt;a href=&quot;int#minutes:Time::Span-instance-method&quot;&gt; minutes : Time::Span minutes&lt;/a&gt;, &lt;a href=&quot;int#modulo(other)-instance-method&quot;&gt; modulo(other) modulo&lt;/a&gt;, &lt;a href=&quot;int#month:Time::MonthSpan-instance-method&quot;&gt; month : Time::MonthSpan month&lt;/a&gt;, &lt;a href=&quot;int#months:Time::MonthSpan-instance-method&quot;&gt; months : Time::MonthSpan months&lt;/a&gt;, &lt;a href=&quot;int#nanosecond:Time::Span-instance-method&quot;&gt; nanosecond : Time::Span nanosecond&lt;/a&gt;, &lt;a href=&quot;int#nanoseconds:Time::Span-instance-method&quot;&gt; nanoseconds : Time::Span nanoseconds&lt;/a&gt;, &lt;a href=&quot;int#odd?-instance-method&quot;&gt; odd? odd?&lt;/a&gt;, &lt;a href=&quot;int#popcount-instance-method&quot;&gt; popcount popcount&lt;/a&gt;, &lt;a href=&quot;int#pred-instance-method&quot;&gt; pred pred&lt;/a&gt;, &lt;a href=&quot;int#remainder(other:Int)-instance-method&quot;&gt; remainder(other : Int) remainder&lt;/a&gt;, &lt;a href=&quot;int#round-instance-method&quot;&gt; round round&lt;/a&gt;, &lt;a href=&quot;int#second:Time::Span-instance-method&quot;&gt; second : Time::Span second&lt;/a&gt;, &lt;a href=&quot;int#seconds:Time::Span-instance-method&quot;&gt; seconds : Time::Span seconds&lt;/a&gt;, &lt;a href=&quot;int#succ-instance-method&quot;&gt; succ succ&lt;/a&gt;, &lt;a href=&quot;int#tdiv(other:Int)-instance-method&quot;&gt; tdiv(other : Int) tdiv&lt;/a&gt;, &lt;a href=&quot;int#times(&amp;amp;block:self-%3E):Nil-instance-method&quot;&gt; times(&amp;amp;block : self -&amp;gt; ) : Nil&lt;br/&gt;times times&lt;/a&gt;, &lt;a href=&quot;int#to(to)-instance-method&quot;&gt; to(to)&lt;br/&gt;to(to, &amp;amp;block : self -&amp;gt; ) : Nil to&lt;/a&gt;, &lt;a href=&quot;int#to_big_d-instance-method&quot;&gt; to_big_d to_big_d&lt;/a&gt;, &lt;a href=&quot;int#to_big_i:BigInt-instance-method&quot;&gt; to_big_i : BigInt to_big_i&lt;/a&gt;, &lt;a href=&quot;int#to_big_r-instance-method&quot;&gt; to_big_r to_big_r&lt;/a&gt;, &lt;a href=&quot;int#to_io(io:IO,format:IO::ByteFormat)-instance-method&quot;&gt; to_io(io : IO, format : IO::ByteFormat) to_io&lt;/a&gt;, &lt;a href=&quot;int#to_json(json:JSON::Builder)-instance-method&quot;&gt; to_json(json : JSON::Builder) to_json&lt;/a&gt;, &lt;a href=&quot;int#to_json_object_key-instance-method&quot;&gt; to_json_object_key to_json_object_key&lt;/a&gt;, &lt;a href=&quot;int#to_s(base:Int=10,*,upcase:Bool=false):String-instance-method&quot;&gt; to_s(base : Int = 10, *, upcase : Bool = false) : String&lt;br/&gt;to_s(io : IO, base : Int = 10, *, upcase : Bool = false) : Nil&lt;br/&gt;to_s(base : Int, _upcase : Bool) : String&lt;br/&gt;to_s(base : Int, io : IO, upcase : Bool = false) : Nil to_s&lt;/a&gt;, &lt;a href=&quot;int#trailing_zeros_count-instance-method&quot;&gt; trailing_zeros_count trailing_zeros_count&lt;/a&gt;, &lt;a href=&quot;int#trunc-instance-method&quot;&gt; trunc trunc&lt;/a&gt;, &lt;a href=&quot;int#upto(to)-instance-method&quot;&gt; upto(to)&lt;br/&gt;upto(to, &amp;amp;block : self -&amp;gt; ) : Nil upto&lt;/a&gt;, &lt;a href=&quot;int#week:Time::Span-instance-method&quot;&gt; week : Time::Span week&lt;/a&gt;, &lt;a href=&quot;int#weeks:Time::Span-instance-method&quot;&gt; weeks : Time::Span weeks&lt;/a&gt;, &lt;a href=&quot;int#year:Time::MonthSpan-instance-method&quot;&gt; year : Time::MonthSpan year&lt;/a&gt;, &lt;a href=&quot;int#years:Time::MonthSpan-instance-method&quot;&gt; years : Time::MonthSpan years&lt;/a&gt;, &lt;a href=&quot;int#~-instance-method&quot;&gt; ~ ~&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;int#%25(other:BigInt):BigInt-instance-method&quot;&gt;％（other：BigInt）：BigInt &lt;br/&gt;％（other：Int）％&lt;/a&gt;，&lt;a href=&quot;int#&amp;amp;*(other:BigInt):BigInt-instance-method&quot;&gt;＆*（other：BigInt）：BigInt＆*&lt;/a&gt;，&lt;a href=&quot;int#&amp;amp;**(exponent:Int):self-instance-method&quot;&gt;＆**（指数：Int）：self＆**&lt;/a&gt;，&lt;a href=&quot;int#&amp;amp;+(other:BigInt):BigInt-instance-method&quot;&gt;＆+（other：BigInt）： BigInt＆+&lt;/a&gt;，&lt;a href=&quot;int#&amp;amp;-(other:BigInt):BigInt-instance-method&quot;&gt;＆-（other：BigInt）：BigInt＆-&lt;/a&gt;，&lt;a href=&quot;int#*(other:BigDecimal)-instance-method&quot;&gt;*（other：BigDecimal）&lt;br/&gt;*（other：BigRational）&lt;br/&gt;*（other：BigInt）：BigInt *&lt;/a&gt;，&lt;a href=&quot;int#**(exponent:Float):Float64-instance-method&quot;&gt;**（指数：Float）：Float64 &lt;br/&gt;**（指数：Int）：self **&lt;/a&gt;，&lt;a href=&quot;int#+(other:BigDecimal)-instance-method&quot;&gt;+（other：BigDecimal）&lt;br/&gt;+（other：BigRational）&lt;br/&gt;+（other：BigInt）：BigInt +&lt;/a&gt;，&lt;a href=&quot;int#-(other:BigInt):BigInt-instance-method&quot;&gt;-（other：BigInt）：BigInt- &lt;br/&gt;（other：BigDecimal）&lt;br/&gt;-（other：BigRational ）-&lt;/a&gt;，&lt;a href=&quot;int#/(other:BigRational)-instance-method&quot;&gt;/（其他：BigRational）/&lt;/a&gt;，&lt;a href=&quot;int#//(other:Int::Primitive)-instance-method&quot;&gt;//（other：Int :: Primitive）//&lt;/a&gt;，&lt;a href=&quot;int#%3C%3C(count:Int)-instance-method&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/a&gt;，&lt;a href=&quot;int#(other:BigDecimal)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：BigDecimal）&lt;br/&gt;&amp;lt;=&amp;gt;（other：BigRational）&lt;br/&gt;&amp;lt;=&amp;gt;（other：Int）：Int32 &lt;br/&gt;&amp;lt;=&amp;gt;（other：BigInt ）&amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;int#===(char:Char)-instance-method&quot;&gt;===（char：Char）===&lt;/a&gt;，&lt;a href=&quot;int#%3E%3E(count:Int)-instance-method&quot;&gt;&amp;gt;&amp;gt;（count：Int）&amp;gt;&amp;gt;&lt;/a&gt;，&lt;a href=&quot;int#abs-instance-method&quot;&gt;abs abs&lt;/a&gt;，&lt;a href=&quot;int#bit(bit)-instance-method&quot;&gt;bit（bit）位&lt;/a&gt;，&lt;a href=&quot;int#bit_length:Int32-instance-method&quot;&gt;bit_length：Int32 bit_length&lt;/a&gt;，&lt;a href=&quot;int#bits(range:Range)-instance-method&quot;&gt;bits（range：Range）位&lt;/a&gt;，&lt;a href=&quot;int#bits_set?(mask)-instance-method&quot;&gt;bits_set （掩码）bits_set？&lt;/a&gt;，&lt;a href=&quot;int#ceil-instance-method&quot;&gt;ceil ceil&lt;/a&gt;，&lt;a href=&quot;int#chr-instance-method&quot;&gt;chr chr&lt;/a&gt;，&lt;a href=&quot;int#day:Time::Span-instance-method&quot;&gt;day：Time :: Span day&lt;/a&gt;，&lt;a href=&quot;int#days:Time::Span-instance-method&quot;&gt;days：Time :: Span days&lt;/a&gt;，&lt;a href=&quot;int#digits(base=10):Array(Int32)-instance-method&quot;&gt;digits（base = 10）：Array（Int32）位数&lt;/a&gt;，&lt;a href=&quot;int#divisible_by?(num)-instance-method&quot;&gt;divisible_by？（num）divisible_by？&lt;/a&gt;，&lt;a href=&quot;int#downto(to,&amp;amp;block:self-%3E):Nil-instance-method&quot;&gt;DOWNTO（于，块：自- &amp;gt;）：无&lt;br/&gt;DOWNTO（至）DOWNTO&lt;/a&gt;，&lt;a href=&quot;int#even?-instance-method&quot;&gt;甚至？甚至？&lt;/a&gt;，&lt;a href=&quot;int#fdiv(other)-instance-method&quot;&gt;fdiv（other）fdiv&lt;/a&gt;，&lt;a href=&quot;int#floor-instance-method&quot;&gt;地板&lt;/a&gt;，&lt;a href=&quot;int#gcd(other:self):self-instance-method&quot;&gt;gcd（other：self）：self gcd&lt;/a&gt;，&lt;a href=&quot;int#gcm(other:BigInt):Int-instance-method&quot;&gt;gcm（other：BigInt）：Int gcm&lt;/a&gt;，&lt;a href=&quot;int#hash(hasher)-instance-method&quot;&gt;hash（hasher）hash&lt;/a&gt;，&lt;a href=&quot;int#hour:Time::Span-instance-method&quot;&gt;hour：时间:: Span小时&lt;/a&gt;，&lt;a href=&quot;int#hours:Time::Span-instance-method&quot;&gt;小时：时间:: Span hours&lt;/a&gt;，&lt;a href=&quot;int#humanize_bytes(io:IO,precision:Int=3,separator='.',*,significant:Bool=true,format:BinaryPrefixFormat=:IEC):Nil-instance-method&quot;&gt;humanize_bytes（io：IO，精度：Int = 3，分隔符='。'，*，有效：Bool = true，format：BinaryPrefixFormat =：IEC）：零humanize_bytes &lt;br/&gt;（precision：Int = 3，分隔符='。' ，*，有效：Bool = true，格式：BinaryPrefixFormat =：IEC）：字符串humanize_bytes&lt;/a&gt;，&lt;a href=&quot;int#lcm(other:Int)-instance-method&quot;&gt;lcm（other：Int）&lt;br/&gt;lcm（other：BigInt）：BigInt lcm&lt;/a&gt;，&lt;a href=&quot;int#microsecond:Time::Span-instance-method&quot;&gt;微秒：Time :: Span微秒&lt;/a&gt;，&lt;a href=&quot;int#microseconds:Time::Span-instance-method&quot;&gt;microseconds：Time :: Span微秒&lt;/a&gt;，&lt;a href=&quot;int#millisecond:Time::Span-instance-method&quot;&gt;毫秒：Time :: Span毫秒&lt;/a&gt;，&lt;a href=&quot;int#milliseconds:Time::Span-instance-method&quot;&gt;毫秒：Time :: Span毫秒&lt;/a&gt;，&lt;a href=&quot;int#minute:Time::Span-instance-method&quot;&gt;分钟：时间跨度::分钟&lt;/a&gt;，&lt;a href=&quot;int#minutes:Time::Span-instance-method&quot;&gt;分钟：时间跨度::分钟&lt;/a&gt;，&lt;a href=&quot;int#modulo(other)-instance-method&quot;&gt;取模（其他）模&lt;/a&gt;，&lt;a href=&quot;int#month:Time::MonthSpan-instance-method&quot;&gt;月：时间:: MonthSpan月&lt;/a&gt;，&lt;a href=&quot;int#months:Time::MonthSpan-instance-method&quot;&gt;月：时间:: MonthSpan个月&lt;/a&gt;，&lt;a href=&quot;int#nanosecond:Time::Span-instance-method&quot;&gt;纳秒：时间跨度::纳秒&lt;/a&gt;，&lt;a href=&quot;int#nanoseconds:Time::Span-instance-method&quot;&gt;毫微秒：时间::跨度纳秒&lt;/a&gt;，&lt;a href=&quot;int#odd?-instance-method&quot;&gt;奇怪吗？奇？&lt;/a&gt;，&lt;a href=&quot;int#popcount-instance-method&quot;&gt;popcount popcount&lt;/a&gt;，&lt;a href=&quot;int#pred-instance-method&quot;&gt;pred pred&lt;/a&gt;，&lt;a href=&quot;int#remainder(other:Int)-instance-method&quot;&gt;余数（other：Int）余数&lt;/a&gt;，&lt;a href=&quot;int#round-instance-method&quot;&gt;round round&lt;/a&gt;，&lt;a href=&quot;int#second:Time::Span-instance-method&quot;&gt;second：time :: Span second&lt;/a&gt;，&lt;a href=&quot;int#seconds:Time::Span-instance-method&quot;&gt;seconds：Time :: Span seconds&lt;/a&gt;，&lt;a href=&quot;int#succ-instance-method&quot;&gt;succ succ&lt;/a&gt;，&lt;a href=&quot;int#tdiv(other:Int)-instance-method&quot;&gt;tdiv（other：Int）tdiv&lt;/a&gt;，&lt;a href=&quot;int#times(&amp;amp;block:self-%3E):Nil-instance-method&quot;&gt;times（＆block：self-&amp;gt;）： Nil&lt;br/&gt;次&lt;/a&gt;，&lt;a href=&quot;int#to(to)-instance-method&quot;&gt;to（to）&lt;br/&gt;to（to，＆block：self-&amp;gt;）：Nil to&lt;/a&gt;，&lt;a href=&quot;int#to_big_d-instance-method&quot;&gt;to_big_d to_big_d&lt;/a&gt;，&lt;a href=&quot;int#to_big_i:BigInt-instance-method&quot;&gt;to_big_i：BigInt to_big_i&lt;/a&gt;，&lt;a href=&quot;int#to_big_r-instance-method&quot;&gt;to_big_r to_big_r&lt;/a&gt;，&lt;a href=&quot;int#to_io(io:IO,format:IO::ByteFormat)-instance-method&quot;&gt;to_io（io：IO，format：IO :: ByteFormat）to_io&lt;/a&gt;，&lt;a href=&quot;int#to_json(json:JSON::Builder)-instance-method&quot;&gt;to_json（ json：JSON :: Builder）to_json&lt;/a&gt;，&lt;a href=&quot;int#to_json_object_key-instance-method&quot;&gt;to_json_object_key to_json_object_key&lt;/a&gt;，&lt;a href=&quot;int#to_s(base:Int=10,*,upcase:Bool=false):String-instance-method&quot;&gt;to_s（base：Int = 10，*，upcase：Bool = false）：字符串&lt;br/&gt;to_s（io：IO，base：Int = 10，*，upcase：Bool = false）：Nil &lt;br/&gt;to_s（base：Int，_upcase：Bool） ：字符串&lt;br/&gt;to_s（碱：中等，IO：IO，upcase：BOOL =假）：无to_s&lt;/a&gt;，&lt;a href=&quot;int#trailing_zeros_count-instance-method&quot;&gt;trailing_zeros_count trailing_zeros_count&lt;/a&gt;，&lt;a href=&quot;int#trunc-instance-method&quot;&gt;TRUNC TRUNC&lt;/a&gt;，&lt;a href=&quot;int#upto(to)-instance-method&quot;&gt;高达（至）&lt;br/&gt;高达（于，块：自- &amp;gt;）：无高达&lt;/a&gt;，&lt;a href=&quot;int#week:Time::Span-instance-method&quot;&gt;周：时间： ：Span周&lt;/a&gt;，&lt;a href=&quot;int#weeks:Time::Span-instance-method&quot;&gt;周：时间:: Span周&lt;/a&gt;，&lt;a href=&quot;int#year:Time::MonthSpan-instance-method&quot;&gt;年：时间:: MonthSpan年&lt;/a&gt;，&lt;a href=&quot;int#years:Time::MonthSpan-instance-method&quot;&gt;年：时间:: MonthSpan年&lt;/a&gt;，&lt;a href=&quot;int#~-instance-method&quot;&gt;〜〜&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51db760545b3c39d580f44496873da9f1246e8d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io#copy(src,dst,limit:Int):Int64-class-method&quot;&gt; copy(src, dst, limit : Int) : Int64&lt;br/&gt;copy(src, dst) : Int64 copy&lt;/a&gt;, &lt;a href=&quot;io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt; pipe(read_blocking = false, write_blocking = false) : Tuple(IO::FileDescriptor, IO::FileDescriptor)&lt;br/&gt;pipe(read_blocking = false, write_blocking = false, &amp;amp;) pipe&lt;/a&gt;, &lt;a href=&quot;io#same_content?(stream1:IO,stream2:IO)-class-method&quot;&gt; same_content?(stream1 : IO, stream2 : IO) same_content?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;io#copy(src,dst,limit:Int):Int64-class-method&quot;&gt;copy（src，dst，limit：Int）：Int64 &lt;br/&gt;copy（src，dst）：Int64 copy&lt;/a&gt;，&lt;a href=&quot;io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt;pipe（read_blocking = false，write_blocking = false）：Tuple（IO :: FileDescriptor，IO :: FileDescriptor）&lt;br/&gt;管道（read_blocking = false ，write_blocking = false和＆）管道&lt;/a&gt;，&lt;a href=&quot;io#same_content?(stream1:IO,stream2:IO)-class-method&quot;&gt;same_content？（stream1：IO，stream2：IO）same_content？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="60454e9646653430b81a1a62ef074aa5b8f73883" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io#copy(src,dst,limit:Int):UInt64-class-method&quot;&gt; copy(src, dst, limit : Int) : UInt64&lt;br/&gt;copy(src, dst) : UInt64 copy&lt;/a&gt;, &lt;a href=&quot;io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt; pipe(read_blocking = false, write_blocking = false) : Tuple(IO::FileDescriptor, IO::FileDescriptor)&lt;br/&gt;pipe(read_blocking = false, write_blocking = false, &amp;amp;block) pipe&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;io#copy(src,dst,limit:Int):UInt64-class-method&quot;&gt;copy（src，dst，limit：Int）：UInt64 &lt;br/&gt;copy（src，dst）：UInt64 copy&lt;/a&gt;，&lt;a href=&quot;io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt;pipe（read_blocking = false，write_blocking = false）：Tuple（IO :: FileDescriptor，IO :: FileDescriptor）&lt;br/&gt;管道（read_blocking = false ，write_blocking = false，＆block）管道&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa30ce28292b23c82f0461f36a55f6784081928a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io#self-instance-method&quot;&gt; &amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt;, &lt;a href=&quot;io#close-instance-method&quot;&gt; close close&lt;/a&gt;, &lt;a href=&quot;io#closed?-instance-method&quot;&gt; closed? closed?&lt;/a&gt;, &lt;a href=&quot;io#each_byte(&amp;amp;):Nil-instance-method&quot;&gt; each_byte(&amp;amp;) : Nil&lt;br/&gt;each_byte each_byte&lt;/a&gt;, &lt;a href=&quot;io#each_char(&amp;amp;):Nil-instance-method&quot;&gt; each_char(&amp;amp;) : Nil&lt;br/&gt;each_char each_char&lt;/a&gt;, &lt;a href=&quot;io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt; each_line(*args, **options, &amp;amp;block : String -&amp;gt; ) : Nil&lt;br/&gt;each_line(*args, **options) each_line&lt;/a&gt;, &lt;a href=&quot;io#encoding:String-instance-method&quot;&gt; encoding : String encoding&lt;/a&gt;, &lt;a href=&quot;io#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt; gets(delimiter : Char, limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : Char, chomp = false) : String?&lt;br/&gt;gets(chomp = true) : String?&lt;br/&gt;gets(limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : String, chomp = false) : String? gets&lt;/a&gt;, &lt;a href=&quot;io#gets_to_end:String-instance-method&quot;&gt; gets_to_end : String gets_to_end&lt;/a&gt;, &lt;a href=&quot;io#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;io#pos-instance-method&quot;&gt; pos pos&lt;/a&gt;, &lt;a href=&quot;io#pos=(value)-instance-method&quot;&gt; pos=(value) pos=&lt;/a&gt;, &lt;a href=&quot;io#print(*objects:_):Nil-instance-method&quot;&gt; print(*objects : _) : Nil&lt;br/&gt;print(obj) : Nil print&lt;/a&gt;, &lt;a href=&quot;io#printf(format_string,*args):Nil-instance-method&quot;&gt; printf(format_string, *args) : Nil&lt;br/&gt;printf(format_string, args : Array | Tuple) : Nil printf&lt;/a&gt;, &lt;a href=&quot;io#puts(*objects:_):Nil-instance-method&quot;&gt; puts(*objects : _) : Nil&lt;br/&gt;puts : Nil&lt;br/&gt;puts(obj) : Nil&lt;br/&gt;puts(string : String) : Nil puts&lt;/a&gt;, &lt;a href=&quot;io#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;io#read_at(offset,bytesize,&amp;amp;)-instance-method&quot;&gt; read_at(offset, bytesize, &amp;amp;) read_at&lt;/a&gt;, &lt;a href=&quot;io#read_byte:UInt8?-instance-method&quot;&gt; read_byte : UInt8? read_byte&lt;/a&gt;, &lt;a href=&quot;io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; read_bytes(type, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) read_bytes&lt;/a&gt;, &lt;a href=&quot;io#read_char:Char?-instance-method&quot;&gt; read_char : Char? read_char&lt;/a&gt;, &lt;a href=&quot;io#read_fully(slice:Bytes)-instance-method&quot;&gt; read_fully(slice : Bytes) read_fully&lt;/a&gt;, &lt;a href=&quot;io#read_fully?(slice:Bytes)-instance-method&quot;&gt; read_fully?(slice : Bytes) read_fully?&lt;/a&gt;, &lt;a href=&quot;io#read_line(*args,**options):String-instance-method&quot;&gt; read_line(*args, **options) : String read_line&lt;/a&gt;, &lt;a href=&quot;io#read_string(bytesize:Int):String-instance-method&quot;&gt; read_string(bytesize : Int) : String read_string&lt;/a&gt;, &lt;a href=&quot;io#read_utf8(slice:Bytes)-instance-method&quot;&gt; read_utf8(slice : Bytes) read_utf8&lt;/a&gt;, &lt;a href=&quot;io#read_utf8_byte-instance-method&quot;&gt; read_utf8_byte read_utf8_byte&lt;/a&gt;, &lt;a href=&quot;io#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt; seek(offset, whence : Seek = Seek::Set) seek&lt;/a&gt;, &lt;a href=&quot;io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt; set_encoding(encoding : String, invalid : Symbol? = nil) set_encoding&lt;/a&gt;, &lt;a href=&quot;io#skip(bytes_count:Int):Nil-instance-method&quot;&gt; skip(bytes_count : Int) : Nil skip&lt;/a&gt;, &lt;a href=&quot;io#skip_to_end:Nil-instance-method&quot;&gt; skip_to_end : Nil skip_to_end&lt;/a&gt;, &lt;a href=&quot;io#tell-instance-method&quot;&gt; tell tell&lt;/a&gt;, &lt;a href=&quot;io#tty?:Bool-instance-method&quot;&gt; tty? : Bool tty?&lt;/a&gt;, &lt;a href=&quot;io#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;, &lt;a href=&quot;io#write_byte(byte:UInt8)-instance-method&quot;&gt; write_byte(byte : UInt8) write_byte&lt;/a&gt;, &lt;a href=&quot;io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; write_bytes(object, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) write_bytes&lt;/a&gt;, &lt;a href=&quot;io#write_utf8(slice:Bytes)-instance-method&quot;&gt; write_utf8(slice : Bytes) write_utf8&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;io#self-instance-method&quot;&gt;&amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt;，&lt;a href=&quot;io#close-instance-method&quot;&gt;关闭关闭&lt;/a&gt;，&lt;a href=&quot;io#closed?-instance-method&quot;&gt;关闭？关闭？&lt;/a&gt;，&lt;a href=&quot;io#each_byte(&amp;amp;):Nil-instance-method&quot;&gt;each_byte（＆）：零个&lt;br/&gt;each_byte each_byte&lt;/a&gt;，&lt;a href=&quot;io#each_char(&amp;amp;):Nil-instance-method&quot;&gt;each_char（＆）：零个&lt;br/&gt;each_char each_char&lt;/a&gt;，each_line &lt;a href=&quot;io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt;（* args，** options，＆block：String-&amp;gt;）：Nil &lt;br/&gt;each_line（* args，** options）each_line&lt;/a&gt;，&lt;a href=&quot;io#encoding:String-instance-method&quot;&gt;编码：String编码&lt;/a&gt;，&lt;a href=&quot;io#flush-instance-method&quot;&gt;刷新冲洗&lt;/a&gt;，&lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;gets（分隔符：字符，限制：整数，斜率=假）：字符串&lt;br/&gt;gets（定界符：Char，chomp = false）：字符串？&lt;br/&gt;gets（chomp = true）：字符串？&lt;br/&gt;gets（limit：Int，chomp = false）：字符串？&lt;br/&gt;gets（delimiter：String，chomp = false）：字符串？得到&lt;/a&gt;，&lt;a href=&quot;io#gets_to_end:String-instance-method&quot;&gt;gets_to_end：字符串gets_to_end&lt;/a&gt;，&lt;a href=&quot;io#peek:Bytes?-instance-method&quot;&gt;peek：字节？ peek&lt;/a&gt;，&lt;a href=&quot;io#pos-instance-method&quot;&gt;pos pos&lt;/a&gt;，&lt;a href=&quot;io#pos=(value)-instance-method&quot;&gt;pos =（value）pos =&lt;/a&gt;，&lt;a href=&quot;io#print(*objects:_):Nil-instance-method&quot;&gt;print（* objects：_）：Nil &lt;br/&gt;print（obj）：Nil print&lt;/a&gt;，&lt;a href=&quot;io#printf(format_string,*args):Nil-instance-method&quot;&gt;printf（format_string，* args）：Nil &lt;br/&gt;printf（format_string，args：Array | Tuple）： Nil printf&lt;/a&gt;，&lt;a href=&quot;io#puts(*objects:_):Nil-instance-method&quot;&gt;puts（* objects：_）：Nil &lt;br/&gt;puts：Nil &lt;br/&gt;puts（obj）：Nil &lt;br/&gt;puts（string：String）：Nil puts&lt;/a&gt;，&lt;a href=&quot;io#read(slice:Bytes)-instance-method&quot;&gt;read（slice：Bytes）read&lt;/a&gt;，&lt;a href=&quot;io#read_at(offset,bytesize,&amp;amp;)-instance-method&quot;&gt;read_at（offset，bytesize，＆）read_at&lt;/a&gt;，&lt;a href=&quot;io#read_byte:UInt8?-instance-method&quot;&gt;read_byte ：UInt8？ read_byte&lt;/a&gt;，&lt;a href=&quot;io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;read_bytes（type，format：IO :: ByteFormat = IO :: ByteFormat :: SystemEndian）read_bytes&lt;/a&gt;，&lt;a href=&quot;io#read_char:Char?-instance-method&quot;&gt;read_char：字符？ read_char&lt;/a&gt;，&lt;a href=&quot;io#read_fully(slice:Bytes)-instance-method&quot;&gt;read_fully（slice：Bytes）read_fully&lt;/a&gt;，&lt;a href=&quot;io#read_fully?(slice:Bytes)-instance-method&quot;&gt;read_fully？（slice：Bytes）read_fully？&lt;/a&gt;，&lt;a href=&quot;io#read_line(*args,**options):String-instance-method&quot;&gt;read_line（* args，** options）：字符串read_line&lt;/a&gt;，&lt;a href=&quot;io#read_string(bytesize:Int):String-instance-method&quot;&gt;read_string（bytesize：Int）：字符串read_string&lt;/a&gt;，&lt;a href=&quot;io#read_utf8(slice:Bytes)-instance-method&quot;&gt;read_utf8（slice：Bytes）read_utf8&lt;/a&gt;，&lt;a href=&quot;io#read_utf8_byte-instance-method&quot;&gt;read_utf8_byte read_utf8_byte&lt;/a&gt;，&lt;a href=&quot;io#rewind-instance-method&quot;&gt;倒带倒带&lt;/a&gt;，&lt;a href=&quot;io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt;seek（offset，whence：Seek = Seek :: Set ）seek&lt;/a&gt;，&lt;a href=&quot;io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt;set_encoding（编码：字符串，无效：Symbol？= nil）set_encoding&lt;/a&gt;，&lt;a href=&quot;io#skip(bytes_count:Int):Nil-instance-method&quot;&gt;skip（bytes_count：Int）：Nil skip&lt;/a&gt;，&lt;a href=&quot;io#skip_to_end:Nil-instance-method&quot;&gt;skip_to_end：Nil skip_to_end&lt;/a&gt;，&lt;a href=&quot;io#tell-instance-method&quot;&gt;告诉&lt;/a&gt;Tell，&lt;a href=&quot;io#tty?:Bool-instance-method&quot;&gt;tty？ ：布尔蒂？&lt;/a&gt;，&lt;a href=&quot;io#write(slice:Bytes):Nil-instance-method&quot;&gt;write（slice：Bytes）：无写入&lt;/a&gt;，&lt;a href=&quot;io#write_byte(byte:UInt8)-instance-method&quot;&gt;write_byte（byte：UInt8）write_byte&lt;/a&gt;，&lt;a href=&quot;io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;write_bytes（object，format：IO :: ByteFormat = IO :: ByteFormat :: SystemEndian）write_bytes&lt;/a&gt;，&lt;a href=&quot;io#write_utf8(slice:Bytes)-instance-method&quot;&gt;write_utf8（slice：Bytes）write_utf8&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17b693d8ab9fb1f89887a87f94e8d0cf21f2c246" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io#self-instance-method&quot;&gt; &amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt;, &lt;a href=&quot;io#close-instance-method&quot;&gt; close close&lt;/a&gt;, &lt;a href=&quot;io#closed?-instance-method&quot;&gt; closed? closed?&lt;/a&gt;, &lt;a href=&quot;io#each_byte(&amp;amp;block):Nil-instance-method&quot;&gt; each_byte(&amp;amp;block) : Nil&lt;br/&gt;each_byte each_byte&lt;/a&gt;, &lt;a href=&quot;io#each_char(&amp;amp;block):Nil-instance-method&quot;&gt; each_char(&amp;amp;block) : Nil&lt;br/&gt;each_char each_char&lt;/a&gt;, &lt;a href=&quot;io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt; each_line(*args, **options, &amp;amp;block : String -&amp;gt; ) : Nil&lt;br/&gt;each_line(*args, **options) each_line&lt;/a&gt;, &lt;a href=&quot;io#encoding:String-instance-method&quot;&gt; encoding : String encoding&lt;/a&gt;, &lt;a href=&quot;io#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt; gets(delimiter : Char, limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : Char, chomp = false) : String?&lt;br/&gt;gets(chomp = true) : String?&lt;br/&gt;gets(limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : String, chomp = false) : String? gets&lt;/a&gt;, &lt;a href=&quot;io#gets_to_end:String-instance-method&quot;&gt; gets_to_end : String gets_to_end&lt;/a&gt;, &lt;a href=&quot;io#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;io#pos-instance-method&quot;&gt; pos pos&lt;/a&gt;, &lt;a href=&quot;io#pos=(value)-instance-method&quot;&gt; pos=(value) pos=&lt;/a&gt;, &lt;a href=&quot;io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt; print(*objects : UNDERSCORE) : Nil&lt;br/&gt;print(obj) : Nil print&lt;/a&gt;, &lt;a href=&quot;io#printf(format_string,*args):Nil-instance-method&quot;&gt; printf(format_string, *args) : Nil&lt;br/&gt;printf(format_string, args : Array | Tuple) : Nil printf&lt;/a&gt;, &lt;a href=&quot;io#puts(*objects:UNDERSCORE):Nil-instance-method&quot;&gt; puts(*objects : UNDERSCORE) : Nil&lt;br/&gt;puts : Nil&lt;br/&gt;puts(obj) : Nil&lt;br/&gt;puts(string : String) : Nil puts&lt;/a&gt;, &lt;a href=&quot;io#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;io#read_at(offset,bytesize,&amp;amp;block)-instance-method&quot;&gt; read_at(offset, bytesize, &amp;amp;block) read_at&lt;/a&gt;, &lt;a href=&quot;io#read_byte:UInt8?-instance-method&quot;&gt; read_byte : UInt8? read_byte&lt;/a&gt;, &lt;a href=&quot;io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; read_bytes(type, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) read_bytes&lt;/a&gt;, &lt;a href=&quot;io#read_char:Char?-instance-method&quot;&gt; read_char : Char? read_char&lt;/a&gt;, &lt;a href=&quot;io#read_fully(slice:Bytes)-instance-method&quot;&gt; read_fully(slice : Bytes) read_fully&lt;/a&gt;, &lt;a href=&quot;io#read_fully?(slice:Bytes)-instance-method&quot;&gt; read_fully?(slice : Bytes) read_fully?&lt;/a&gt;, &lt;a href=&quot;io#read_line(*args,**options):String-instance-method&quot;&gt; read_line(*args, **options) : String read_line&lt;/a&gt;, &lt;a href=&quot;io#read_string(bytesize:Int):String-instance-method&quot;&gt; read_string(bytesize : Int) : String read_string&lt;/a&gt;, &lt;a href=&quot;io#read_utf8(slice:Bytes)-instance-method&quot;&gt; read_utf8(slice : Bytes) read_utf8&lt;/a&gt;, &lt;a href=&quot;io#read_utf8_byte-instance-method&quot;&gt; read_utf8_byte read_utf8_byte&lt;/a&gt;, &lt;a href=&quot;io#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt; seek(offset, whence : Seek = Seek::Set) seek&lt;/a&gt;, &lt;a href=&quot;io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt; set_encoding(encoding : String, invalid : Symbol? = nil) set_encoding&lt;/a&gt;, &lt;a href=&quot;io#skip(bytes_count:Int):Nil-instance-method&quot;&gt; skip(bytes_count : Int) : Nil skip&lt;/a&gt;, &lt;a href=&quot;io#skip_to_end:Nil-instance-method&quot;&gt; skip_to_end : Nil skip_to_end&lt;/a&gt;, &lt;a href=&quot;io#tell-instance-method&quot;&gt; tell tell&lt;/a&gt;, &lt;a href=&quot;io#tty?:Bool-instance-method&quot;&gt; tty? : Bool tty?&lt;/a&gt;, &lt;a href=&quot;io#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;, &lt;a href=&quot;io#write_byte(byte:UInt8)-instance-method&quot;&gt; write_byte(byte : UInt8) write_byte&lt;/a&gt;, &lt;a href=&quot;io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; write_bytes(object, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) write_bytes&lt;/a&gt;, &lt;a href=&quot;io#write_utf8(slice:Bytes)-instance-method&quot;&gt; write_utf8(slice : Bytes) write_utf8&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;io#self-instance-method&quot;&gt;&amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt;，&lt;a href=&quot;io#close-instance-method&quot;&gt;关闭关闭&lt;/a&gt;，&lt;a href=&quot;io#closed?-instance-method&quot;&gt;关闭？关闭？&lt;/a&gt;，&lt;a href=&quot;io#each_byte(&amp;amp;block):Nil-instance-method&quot;&gt;each_byte（＆block）：Nil &lt;br/&gt;each_byte each_byte&lt;/a&gt;，&lt;a href=&quot;io#each_char(&amp;amp;block):Nil-instance-method&quot;&gt;each_char（＆block）：Nil &lt;br/&gt;each_char each_char&lt;/a&gt;，each_line &lt;a href=&quot;io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt;（* args，** options，＆block：String-&amp;gt;）：Nil &lt;br/&gt;each_line（* args，** options）each_line&lt;/a&gt;，&lt;a href=&quot;io#encoding:String-instance-method&quot;&gt;编码：String编码&lt;/a&gt;，&lt;a href=&quot;io#flush-instance-method&quot;&gt;刷新，刷新&lt;/a&gt;，&lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;gets（定界符：Char，限制：Int，chomp = false）：字符串？&lt;br/&gt;gets（定界符：Char，chomp = false）：字符串？&lt;br/&gt;gets（chomp = true）：字符串？&lt;br/&gt;gets（limit：Int，chomp = false）：字符串？&lt;br/&gt;gets（delimiter：String，chomp = false）：字符串？得到&lt;/a&gt;，&lt;a href=&quot;io#gets_to_end:String-instance-method&quot;&gt;gets_to_end：字符串gets_to_end&lt;/a&gt;，&lt;a href=&quot;io#peek:Bytes?-instance-method&quot;&gt;peek：字节？ peek&lt;/a&gt;，&lt;a href=&quot;io#pos-instance-method&quot;&gt;pos pos&lt;/a&gt;，&lt;a href=&quot;io#pos=(value)-instance-method&quot;&gt;pos =（value）pos =&lt;/a&gt;，&lt;a href=&quot;io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;print（* objects：UNDERSCORE）：Nil &lt;br/&gt;print（obj）：Nil print&lt;/a&gt;，&lt;a href=&quot;io#printf(format_string,*args):Nil-instance-method&quot;&gt;printf（format_string，* args）：Nil &lt;br/&gt;printf（format_string，args：Array | Tuple）： Nil printf&lt;/a&gt;，&lt;a href=&quot;io#puts(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;puts（* objects：UNDERSCORE）：Nil &lt;br/&gt;puts：Nil &lt;br/&gt;puts（obj）：Nil &lt;br/&gt;puts（string：String）：Nil puts&lt;/a&gt;，&lt;a href=&quot;io#read(slice:Bytes)-instance-method&quot;&gt;read（slice：Bytes）read&lt;/a&gt;，&lt;a href=&quot;io#read_at(offset,bytesize,&amp;amp;block)-instance-method&quot;&gt;read_at（offset，bytesize，＆block）read_at&lt;/a&gt;，&lt;a href=&quot;io#read_byte:UInt8?-instance-method&quot;&gt;read_byte ：UInt8？ read_byte&lt;/a&gt;，&lt;a href=&quot;io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;read_bytes（类型，格式：IO :: ByteFormat = IO :: ByteFormat :: SystemEndian）read_bytes&lt;/a&gt;，&lt;a href=&quot;io#read_char:Char?-instance-method&quot;&gt;read_char：字符？ read_char&lt;/a&gt;，&lt;a href=&quot;io#read_fully(slice:Bytes)-instance-method&quot;&gt;read_fully（slice：Bytes）read_fully&lt;/a&gt;，&lt;a href=&quot;io#read_fully?(slice:Bytes)-instance-method&quot;&gt;read_fully？（slice：Bytes）read_fully？&lt;/a&gt;，&lt;a href=&quot;io#read_line(*args,**options):String-instance-method&quot;&gt;read_line（* args，** options）：字符串read_line&lt;/a&gt;，&lt;a href=&quot;io#read_string(bytesize:Int):String-instance-method&quot;&gt;read_string（bytesize：Int）：字符串read_string&lt;/a&gt;，&lt;a href=&quot;io#read_utf8(slice:Bytes)-instance-method&quot;&gt;read_utf8（slice：Bytes）read_utf8&lt;/a&gt;，&lt;a href=&quot;io#read_utf8_byte-instance-method&quot;&gt;read_utf8_byte read_utf8_byte&lt;/a&gt;，&lt;a href=&quot;io#rewind-instance-method&quot;&gt;倒带倒带&lt;/a&gt;，&lt;a href=&quot;io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt;seek（offset，whence：Seek = Seek :: Set ）seek&lt;/a&gt;，&lt;a href=&quot;io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt;set_encoding（编码：字符串，无效：Symbol？= nil）set_encoding&lt;/a&gt;，&lt;a href=&quot;io#skip(bytes_count:Int):Nil-instance-method&quot;&gt;skip（bytes_count：Int）：Nil skip&lt;/a&gt;，&lt;a href=&quot;io#skip_to_end:Nil-instance-method&quot;&gt;skip_to_end：Nil skip_to_end&lt;/a&gt;，&lt;a href=&quot;io#tell-instance-method&quot;&gt;告诉&lt;/a&gt;Tell，&lt;a href=&quot;io#tty?:Bool-instance-method&quot;&gt;tty？ ：布尔蒂？&lt;/a&gt;，&lt;a href=&quot;io#write(slice:Bytes):Nil-instance-method&quot;&gt;write（slice：Bytes）：无写&lt;/a&gt;，&lt;a href=&quot;io#write_byte(byte:UInt8)-instance-method&quot;&gt;write_byte（byte：UInt8）write_byte&lt;/a&gt;，&lt;a href=&quot;io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;write_bytes（object，format：IO :: ByteFormat = IO :: ByteFormat :: SystemEndian）write_bytes&lt;/a&gt;，&lt;a href=&quot;io#write_utf8(slice:Bytes)-instance-method&quot;&gt;write_utf8（slice：Bytes）write_utf8&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e8929ccbdb044137c3a2af88910091961ef10c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io/buffered#buffer_size-instance-method&quot;&gt; buffer_size buffer_size&lt;/a&gt;, &lt;a href=&quot;io/buffered#buffer_size=(value)-instance-method&quot;&gt; buffer_size=(value) buffer_size=&lt;/a&gt;, &lt;a href=&quot;io/buffered#close:Nil-instance-method&quot;&gt; close : Nil close&lt;/a&gt;, &lt;a href=&quot;io/buffered#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;io/buffered#flush_on_newline=(flush_on_newline)-instance-method&quot;&gt; flush_on_newline=(flush_on_newline) flush_on_newline=&lt;/a&gt;, &lt;a href=&quot;io/buffered#flush_on_newline?-instance-method&quot;&gt; flush_on_newline? flush_on_newline?&lt;/a&gt;, &lt;a href=&quot;io/buffered#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;io/buffered#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;io/buffered#read_buffering=(read_buffering)-instance-method&quot;&gt; read_buffering=(read_buffering) read_buffering=&lt;/a&gt;, &lt;a href=&quot;io/buffered#read_buffering?-instance-method&quot;&gt; read_buffering? read_buffering?&lt;/a&gt;, &lt;a href=&quot;io/buffered#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;io/buffered#sync=(sync)-instance-method&quot;&gt; sync=(sync) sync=&lt;/a&gt;, &lt;a href=&quot;io/buffered#sync?-instance-method&quot;&gt; sync? sync?&lt;/a&gt;, &lt;a href=&quot;io/buffered#unbuffered_close-instance-method&quot;&gt; unbuffered_close unbuffered_close&lt;/a&gt;, &lt;a href=&quot;io/buffered#unbuffered_flush-instance-method&quot;&gt; unbuffered_flush unbuffered_flush&lt;/a&gt;, &lt;a href=&quot;io/buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt; unbuffered_read(slice : Bytes) unbuffered_read&lt;/a&gt;, &lt;a href=&quot;io/buffered#unbuffered_rewind-instance-method&quot;&gt; unbuffered_rewind unbuffered_rewind&lt;/a&gt;, &lt;a href=&quot;io/buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt; unbuffered_write(slice : Bytes) unbuffered_write&lt;/a&gt;, &lt;a href=&quot;io/buffered#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;io/buffered#buffer_size-instance-method&quot;&gt;buffer_size buffer_size&lt;/a&gt;，&lt;a href=&quot;io/buffered#buffer_size=(value)-instance-method&quot;&gt;buffer_size =（value）buffer_size =&lt;/a&gt;，&lt;a href=&quot;io/buffered#close:Nil-instance-method&quot;&gt;close：无关闭&lt;/a&gt;，&lt;a href=&quot;io/buffered#flush-instance-method&quot;&gt;刷新冲洗&lt;/a&gt;，&lt;a href=&quot;io/buffered#flush_on_newline=(flush_on_newline)-instance-method&quot;&gt;flush_on_newline =（flush_on_newline）flush_on_newline =&lt;/a&gt;，&lt;a href=&quot;io/buffered#flush_on_newline?-instance-method&quot;&gt;flush_on_newline？ flush_on_newline？&lt;/a&gt;，&lt;a href=&quot;io/buffered#peek:Bytes?-instance-method&quot;&gt;偷看：字节？偷看&lt;/a&gt;，&lt;a href=&quot;io/buffered#read(slice:Bytes)-instance-method&quot;&gt;read（slice：Bytes）read&lt;/a&gt;，&lt;a href=&quot;io/buffered#read_buffering=(read_buffering)-instance-method&quot;&gt;read_buffering =（read_buffering）read_buffering =&lt;/a&gt;，&lt;a href=&quot;io/buffered#read_buffering?-instance-method&quot;&gt;read_buffering吗？ read_buffering？&lt;/a&gt;，&lt;a href=&quot;io/buffered#rewind-instance-method&quot;&gt;快退&lt;/a&gt;，快退，&lt;a href=&quot;io/buffered#sync=(sync)-instance-method&quot;&gt;sync =（sync）sync =&lt;/a&gt;，&lt;a href=&quot;io/buffered#sync?-instance-method&quot;&gt;同步吗？同步？&lt;/a&gt;，&lt;a href=&quot;io/buffered#unbuffered_close-instance-method&quot;&gt;unbuffered_close unbuffered_close&lt;/a&gt;，&lt;a href=&quot;io/buffered#unbuffered_flush-instance-method&quot;&gt;unbuffered_flush unbuffered_flush&lt;/a&gt;，&lt;a href=&quot;io/buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt;unbuffered_read（slice：Bytes）unbuffered_read&lt;/a&gt;，&lt;a href=&quot;io/buffered#unbuffered_rewind-instance-method&quot;&gt;unbuffered_rewind unbuffered_rewind&lt;/a&gt;，&lt;a href=&quot;io/buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt;unbuffered_write（slice：Bytes）unbuffered_write&lt;/a&gt;，&lt;a href=&quot;io/buffered#write(slice:Bytes):Nil-instance-method&quot;&gt;write（slice：Bytes）：无写&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ba1cc3eedaef6a4141c6c51e5f0b659ef5bbf4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io/buffered#buffer_size-instance-method&quot;&gt; buffer_size buffer_size&lt;/a&gt;, &lt;a href=&quot;io/buffered#buffer_size=(value)-instance-method&quot;&gt; buffer_size=(value) buffer_size=&lt;/a&gt;, &lt;a href=&quot;io/buffered#close:Nil-instance-method&quot;&gt; close : Nil close&lt;/a&gt;, &lt;a href=&quot;io/buffered#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;io/buffered#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;io/buffered#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;io/buffered#read_buffering=(read_buffering)-instance-method&quot;&gt; read_buffering=(read_buffering) read_buffering=&lt;/a&gt;, &lt;a href=&quot;io/buffered#read_buffering?-instance-method&quot;&gt; read_buffering? read_buffering?&lt;/a&gt;, &lt;a href=&quot;io/buffered#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;io/buffered#sync=(sync)-instance-method&quot;&gt; sync=(sync) sync=&lt;/a&gt;, &lt;a href=&quot;io/buffered#sync?-instance-method&quot;&gt; sync? sync?&lt;/a&gt;, &lt;a href=&quot;io/buffered#unbuffered_close-instance-method&quot;&gt; unbuffered_close unbuffered_close&lt;/a&gt;, &lt;a href=&quot;io/buffered#unbuffered_flush-instance-method&quot;&gt; unbuffered_flush unbuffered_flush&lt;/a&gt;, &lt;a href=&quot;io/buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt; unbuffered_read(slice : Bytes) unbuffered_read&lt;/a&gt;, &lt;a href=&quot;io/buffered#unbuffered_rewind-instance-method&quot;&gt; unbuffered_rewind unbuffered_rewind&lt;/a&gt;, &lt;a href=&quot;io/buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt; unbuffered_write(slice : Bytes) unbuffered_write&lt;/a&gt;, &lt;a href=&quot;io/buffered#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;io/buffered#buffer_size-instance-method&quot;&gt;buffer_size buffer_size&lt;/a&gt;，&lt;a href=&quot;io/buffered#buffer_size=(value)-instance-method&quot;&gt;buffer_size =（value）buffer_size =&lt;/a&gt;，&lt;a href=&quot;io/buffered#close:Nil-instance-method&quot;&gt;close：无关闭&lt;/a&gt;，&lt;a href=&quot;io/buffered#flush-instance-method&quot;&gt;冲洗刷新&lt;/a&gt;，&lt;a href=&quot;io/buffered#peek:Bytes?-instance-method&quot;&gt;偷看：字节？偷看&lt;/a&gt;，&lt;a href=&quot;io/buffered#read(slice:Bytes)-instance-method&quot;&gt;read（slice：Bytes）read&lt;/a&gt;，&lt;a href=&quot;io/buffered#read_buffering=(read_buffering)-instance-method&quot;&gt;read_buffering =（read_buffering）read_buffering =&lt;/a&gt;，&lt;a href=&quot;io/buffered#read_buffering?-instance-method&quot;&gt;read_buffering吗？ read_buffering？&lt;/a&gt;，&lt;a href=&quot;io/buffered#rewind-instance-method&quot;&gt;快退&lt;/a&gt;，快退，&lt;a href=&quot;io/buffered#sync=(sync)-instance-method&quot;&gt;sync =（sync）sync =&lt;/a&gt;，&lt;a href=&quot;io/buffered#sync?-instance-method&quot;&gt;同步吗？同步？&lt;/a&gt;，&lt;a href=&quot;io/buffered#unbuffered_close-instance-method&quot;&gt;unbuffered_close unbuffered_close&lt;/a&gt;，&lt;a href=&quot;io/buffered#unbuffered_flush-instance-method&quot;&gt;unbuffered_flush unbuffered_flush&lt;/a&gt;，&lt;a href=&quot;io/buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt;unbuffered_read（slice：Bytes）unbuffered_read&lt;/a&gt;，&lt;a href=&quot;io/buffered#unbuffered_rewind-instance-method&quot;&gt;unbuffered_rewind unbuffered_rewind&lt;/a&gt;，&lt;a href=&quot;io/buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt;unbuffered_write（slice：Bytes）unbuffered_write&lt;/a&gt;，&lt;a href=&quot;io/buffered#write(slice:Bytes):Nil-instance-method&quot;&gt;write（slice：Bytes）：无写入&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="101265ca2e1409b1df86eb241f1c52a9db6f6a5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io/evented#evented_close-instance-method&quot;&gt; evented_close evented_close&lt;/a&gt;, &lt;a href=&quot;io/evented#evented_read(slice:Bytes,errno_msg:String,&amp;amp;):Int32-instance-method&quot;&gt; evented_read(slice : Bytes, errno_msg : String, &amp;amp;) : Int32 evented_read&lt;/a&gt;, &lt;a href=&quot;io/evented#evented_reopen-instance-method&quot;&gt; evented_reopen evented_reopen&lt;/a&gt;, &lt;a href=&quot;io/evented#evented_send(slice:Bytes,errno_msg:String,&amp;amp;):Int32-instance-method&quot;&gt; evented_send(slice : Bytes, errno_msg : String, &amp;amp;) : Int32 evented_send&lt;/a&gt;, &lt;a href=&quot;io/evented#evented_write(slice:Bytes,errno_msg:String,&amp;amp;):Nil-instance-method&quot;&gt; evented_write(slice : Bytes, errno_msg : String, &amp;amp;) : Nil evented_write&lt;/a&gt;, &lt;a href=&quot;io/evented#read_timeout:Time::Span?-instance-method&quot;&gt; read_timeout : Time::Span? read_timeout&lt;/a&gt;, &lt;a href=&quot;io/evented#read_timeout=(read_timeout:Number):Number-instance-method&quot;&gt; read_timeout=(read_timeout : Number) : Number&lt;br/&gt;read_timeout=(timeout : Time::Span?) : Time::Span? read_timeout=&lt;/a&gt;, &lt;a href=&quot;io/evented#write_timeout:Time::Span?-instance-method&quot;&gt; write_timeout : Time::Span? write_timeout&lt;/a&gt;, &lt;a href=&quot;io/evented#write_timeout=(write_timeout:Number):Number-instance-method&quot;&gt; write_timeout=(write_timeout : Number) : Number&lt;br/&gt;write_timeout=(timeout : Time::Span?) : Time::Span? write_timeout=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;io/evented#evented_close-instance-method&quot;&gt;evented_close evented_close&lt;/a&gt;，&lt;a href=&quot;io/evented#evented_read(slice:Bytes,errno_msg:String,&amp;amp;):Int32-instance-method&quot;&gt;evented_read（slice：Bytes，errno_msg：String，＆）：Int32 evented_read&lt;/a&gt;，&lt;a href=&quot;io/evented#evented_reopen-instance-method&quot;&gt;evented_reopen evented_reopen&lt;/a&gt;，&lt;a href=&quot;io/evented#evented_send(slice:Bytes,errno_msg:String,&amp;amp;):Int32-instance-method&quot;&gt;evented_send（slice：Bytes，errno_msg：String，＆）：Int32 evented_send&lt;/a&gt;，&lt;a href=&quot;io/evented#evented_write(slice:Bytes,errno_msg:String,&amp;amp;):Nil-instance-method&quot;&gt;evented_writes（slice：Bytes） ：无evented_write&lt;/a&gt;，read_timeout &lt;a href=&quot;io/evented#read_timeout:Time::Span?-instance-method&quot;&gt;：时间::跨度？ read_timeout&lt;/a&gt;，&lt;a href=&quot;io/evented#read_timeout=(read_timeout:Number):Number-instance-method&quot;&gt;read_timeout =（read_timeout：Number）：数字&lt;br/&gt;read_timeout =（timeout：Time :: Span？）：Time :: Span？&lt;/a&gt;&lt;a href=&quot;io/evented#write_timeout:Time::Span?-instance-method&quot;&gt;read_timeout &lt;/a&gt;=，write_timeout：时间::跨度？ write_timeout，&lt;a href=&quot;io/evented#write_timeout=(write_timeout:Number):Number-instance-method&quot;&gt;write_timeout =（write_timeout：Number）：数字&lt;br/&gt;write_timeout =（timeout：Time :: Span？）：Time :: Span？ write_timeout =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce27b7a79f72a9f2bc4da2a6f25c1d243a4d730d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io/evented#evented_close-instance-method&quot;&gt; evented_close evented_close&lt;/a&gt;, &lt;a href=&quot;io/evented#evented_read(slice:Bytes,errno_msg:String,&amp;amp;block):Int32-instance-method&quot;&gt; evented_read(slice : Bytes, errno_msg : String, &amp;amp;block) : Int32 evented_read&lt;/a&gt;, &lt;a href=&quot;io/evented#evented_reopen-instance-method&quot;&gt; evented_reopen evented_reopen&lt;/a&gt;, &lt;a href=&quot;io/evented#evented_send(slice:Bytes,errno_msg:String,&amp;amp;block):Int32-instance-method&quot;&gt; evented_send(slice : Bytes, errno_msg : String, &amp;amp;block) : Int32 evented_send&lt;/a&gt;, &lt;a href=&quot;io/evented#evented_write(slice:Bytes,errno_msg:String,&amp;amp;block):Nil-instance-method&quot;&gt; evented_write(slice : Bytes, errno_msg : String, &amp;amp;block) : Nil evented_write&lt;/a&gt;, &lt;a href=&quot;io/evented#read_timeout:Time::Span?-instance-method&quot;&gt; read_timeout : Time::Span? read_timeout&lt;/a&gt;, &lt;a href=&quot;io/evented#read_timeout=(read_timeout:Number):Number-instance-method&quot;&gt; read_timeout=(read_timeout : Number) : Number&lt;br/&gt;read_timeout=(timeout : Time::Span?) : Time::Span? read_timeout=&lt;/a&gt;, &lt;a href=&quot;io/evented#write_timeout:Time::Span?-instance-method&quot;&gt; write_timeout : Time::Span? write_timeout&lt;/a&gt;, &lt;a href=&quot;io/evented#write_timeout=(write_timeout:Number):Number-instance-method&quot;&gt; write_timeout=(write_timeout : Number) : Number&lt;br/&gt;write_timeout=(timeout : Time::Span?) : Time::Span? write_timeout=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;io/evented#evented_close-instance-method&quot;&gt;evented_close evented_close&lt;/a&gt;，&lt;a href=&quot;io/evented#evented_read(slice:Bytes,errno_msg:String,&amp;amp;block):Int32-instance-method&quot;&gt;evented_read（slice：Bytes，errno_msg：String，＆block）：Int32 evented_read&lt;/a&gt;，&lt;a href=&quot;io/evented#evented_reopen-instance-method&quot;&gt;evented_reopen evented_reopen&lt;/a&gt;，&lt;a href=&quot;io/evented#evented_send(slice:Bytes,errno_msg:String,&amp;amp;block):Int32-instance-method&quot;&gt;evented_send（slice：Bytes，errno_msg：String，＆block）：Int32 evented_send&lt;/a&gt;，&lt;a href=&quot;io/evented#evented_write(slice:Bytes,errno_msg:String,&amp;amp;block):Nil-instance-method&quot;&gt;evented_ms（slice :) ：否evented_write&lt;/a&gt;，read_timeout &lt;a href=&quot;io/evented#read_timeout:Time::Span?-instance-method&quot;&gt;：时间::跨度？ read_timeout&lt;/a&gt;，&lt;a href=&quot;io/evented#read_timeout=(read_timeout:Number):Number-instance-method&quot;&gt;read_timeout =（read_timeout：Number）：数字&lt;br/&gt;read_timeout =（timeout：Time :: Span？）：Time :: Span？&lt;/a&gt;&lt;a href=&quot;io/evented#write_timeout:Time::Span?-instance-method&quot;&gt;read_timeout &lt;/a&gt;=，write_timeout：时间::跨度？ write_timeout，&lt;a href=&quot;io/evented#write_timeout=(write_timeout:Number):Number-instance-method&quot;&gt;write_timeout =（write_timeout：Number）：数字&lt;br/&gt;write_timeout =（timeout：Time :: Span？）：Time :: Span？ write_timeout =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bbdd95e9423ce4637c7bcfd2a4dc56a3f80d4592" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io/filedescriptor#blocking-instance-method&quot;&gt; blocking blocking&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#blocking=(value)-instance-method&quot;&gt; blocking=(value) blocking=&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#close_on_exec=(value:Bool)-instance-method&quot;&gt; close_on_exec=(value : Bool) close_on_exec=&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#close_on_exec?-instance-method&quot;&gt; close_on_exec? close_on_exec?&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#closed?:Bool-instance-method&quot;&gt; closed? : Bool closed?&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#cooked(&amp;amp;)-instance-method&quot;&gt; cooked(&amp;amp;) cooked&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#cooked!-instance-method&quot;&gt; cooked! cooked!&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#fcntl(cmd,arg=0)-instance-method&quot;&gt; fcntl(cmd, arg = 0) fcntl&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#fd-instance-method&quot;&gt; fd fd&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#finalize-instance-method&quot;&gt; finalize finalize&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#info-instance-method&quot;&gt; info info&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#noecho(&amp;amp;)-instance-method&quot;&gt; noecho(&amp;amp;) noecho&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#noecho!-instance-method&quot;&gt; noecho! noecho!&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#pos-instance-method&quot;&gt; pos pos&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#pos=(value)-instance-method&quot;&gt; pos=(value) pos=&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#pretty_print(pp)-instance-method&quot;&gt; pretty_print(pp) pretty_print&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#raw(&amp;amp;)-instance-method&quot;&gt; raw(&amp;amp;) raw&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#raw!-instance-method&quot;&gt; raw! raw!&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#reopen(other:IO::FileDescriptor)-instance-method&quot;&gt; reopen(other : IO::FileDescriptor) reopen&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt; seek(offset, whence : Seek = Seek::Set)&lt;br/&gt;seek(offset, whence : Seek = Seek::Set, &amp;amp;) seek&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#tty?-instance-method&quot;&gt; tty? tty?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;io/filedescriptor#blocking-instance-method&quot;&gt;阻塞阻塞&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#blocking=(value)-instance-method&quot;&gt;阻塞=（值）阻塞=&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#close_on_exec=(value:Bool)-instance-method&quot;&gt;close_on_exec =（值：布尔）close_on_exec =&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#close_on_exec?-instance-method&quot;&gt;close_on_exec？ close_on_exec？&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#closed?:Bool-instance-method&quot;&gt;关闭？ ：布尔关闭了吗？&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#cooked(&amp;amp;)-instance-method&quot;&gt;煮熟（＆）煮熟&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#cooked!-instance-method&quot;&gt;煮熟！煮熟了！&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#fcntl(cmd,arg=0)-instance-method&quot;&gt;fcntl（cmd，arg = 0）fcntl&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#fd-instance-method&quot;&gt;fd fd&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#finalize-instance-method&quot;&gt;finalize finalize&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#info-instance-method&quot;&gt;info info&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#inspect(io:IO):Nil-instance-method&quot;&gt;inspect（io：IO）：无检查&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#noecho(&amp;amp;)-instance-method&quot;&gt;noecho（＆）noecho&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#noecho!-instance-method&quot;&gt;noecho！ e！&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#pos-instance-method&quot;&gt;pos pos&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#pos=(value)-instance-method&quot;&gt;pos =（value）pos =&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#pretty_print(pp)-instance-method&quot;&gt;pretty_print（pp）pretty_print&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#raw(&amp;amp;)-instance-method&quot;&gt;raw（＆）raw&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#raw!-instance-method&quot;&gt;原始！生的！&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#reopen(other:IO::FileDescriptor)-instance-method&quot;&gt;重新打开（other：IO :: FileDescriptor）重新打开&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt;seek（offset，whence：Seek = Seek :: Set）&lt;br/&gt;seek（offset，whence：Seek = Seek :: Set，＆）seek&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#tty?-instance-method&quot;&gt;tty？tty？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="076d216d94b1b060c79a373531caf31ab83f3ab4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io/filedescriptor#blocking-instance-method&quot;&gt; blocking blocking&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#blocking=(value)-instance-method&quot;&gt; blocking=(value) blocking=&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#close_on_exec=(value:Bool)-instance-method&quot;&gt; close_on_exec=(value : Bool) close_on_exec=&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#close_on_exec?-instance-method&quot;&gt; close_on_exec? close_on_exec?&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#closed?:Bool-instance-method&quot;&gt; closed? : Bool closed?&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#cooked(&amp;amp;block)-instance-method&quot;&gt; cooked(&amp;amp;block) cooked&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#cooked!-instance-method&quot;&gt; cooked! cooked!&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#fcntl(cmd,arg=0)-instance-method&quot;&gt; fcntl(cmd, arg = 0) fcntl&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#fd:Int32-instance-method&quot;&gt; fd : Int32 fd&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#finalize-instance-method&quot;&gt; finalize finalize&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#info-instance-method&quot;&gt; info info&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#noecho(&amp;amp;block)-instance-method&quot;&gt; noecho(&amp;amp;block) noecho&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#noecho!-instance-method&quot;&gt; noecho! noecho!&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#pos-instance-method&quot;&gt; pos pos&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#pos=(value)-instance-method&quot;&gt; pos=(value) pos=&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#pretty_print(pp)-instance-method&quot;&gt; pretty_print(pp) pretty_print&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#raw(&amp;amp;block)-instance-method&quot;&gt; raw(&amp;amp;block) raw&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#raw!-instance-method&quot;&gt; raw! raw!&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#reopen(other:IO::FileDescriptor)-instance-method&quot;&gt; reopen(other : IO::FileDescriptor) reopen&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt; seek(offset, whence : Seek = Seek::Set)&lt;br/&gt;seek(offset, whence : Seek = Seek::Set, &amp;amp;block) seek&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#tty?-instance-method&quot;&gt; tty? tty?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;io/filedescriptor#blocking-instance-method&quot;&gt;阻塞阻塞&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#blocking=(value)-instance-method&quot;&gt;阻塞=（值）阻塞=&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#close_on_exec=(value:Bool)-instance-method&quot;&gt;close_on_exec =（值：布尔）close_on_exec =&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#close_on_exec?-instance-method&quot;&gt;close_on_exec？ close_on_exec？&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#closed?:Bool-instance-method&quot;&gt;关闭？ ：布尔关闭了吗？&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#cooked(&amp;amp;block)-instance-method&quot;&gt;煮熟（和块）&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#cooked!-instance-method&quot;&gt;煮熟！熟！&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#fcntl(cmd,arg=0)-instance-method&quot;&gt;fcntl（cmd，arg = 0）fcntl&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#fd:Int32-instance-method&quot;&gt;fd：Int32 fd&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#finalize-instance-method&quot;&gt;finalize finalize&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#info-instance-method&quot;&gt;info info&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#inspect(io:IO):Nil-instance-method&quot;&gt;inspect（io：IO）：无检查&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#noecho(&amp;amp;block)-instance-method&quot;&gt;noecho（＆block）noecho&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#noecho!-instance-method&quot;&gt;noecho！ e！&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#pos-instance-method&quot;&gt;pos pos&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#pos=(value)-instance-method&quot;&gt;pos =（value）pos =&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#pretty_print(pp)-instance-method&quot;&gt;pretty_print（pp）pretty_print&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#raw(&amp;amp;block)-instance-method&quot;&gt;raw（＆block）raw&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#raw!-instance-method&quot;&gt;raw！生的！&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#reopen(other:IO::FileDescriptor)-instance-method&quot;&gt;重新打开（other：IO :: FileDescriptor）重新打开&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt;seek（offset，whence：Seek = Seek :: Set）&lt;br/&gt;seek（offset，whence：Seek = Seek :: Set，＆block）seek&lt;/a&gt;，&lt;a href=&quot;io/filedescriptor#tty?-instance-method&quot;&gt;tty？tty？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b90eec0d5a99bb8eab840695d337bde9e381618b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ipsocket#local_address-instance-method&quot;&gt; local_address local_address&lt;/a&gt;, &lt;a href=&quot;ipsocket#remote_address-instance-method&quot;&gt; remote_address remote_address&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ipsocket#local_address-instance-method&quot;&gt;本地地址本地地址&lt;/a&gt;，&lt;a href=&quot;ipsocket#remote_address-instance-method&quot;&gt;远程地址远程地址&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="548967b697f3b26d1baf221482acd999420c7f4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;item#description:String-instance-method&quot;&gt; description : String description&lt;/a&gt;, &lt;a href=&quot;item#end_line:Int32-instance-method&quot;&gt; end_line : Int32 end_line&lt;/a&gt;, &lt;a href=&quot;item#file:String-instance-method&quot;&gt; file : String file&lt;/a&gt;, &lt;a href=&quot;item#focus?:Bool-instance-method&quot;&gt; focus? : Bool focus?&lt;/a&gt;, &lt;a href=&quot;item#line:Int32-instance-method&quot;&gt; line : Int32 line&lt;/a&gt;, &lt;a href=&quot;item#matches_line?(line:Int32):Bool-instance-method&quot;&gt; matches_line?(line : Int32) : Bool matches_line?&lt;/a&gt;, &lt;a href=&quot;item#matches_locations?(locations:Hash(String,Array(Int32))):Bool-instance-method&quot;&gt; matches_locations?(locations : Hash(String, Array(Int32))) : Bool matches_locations?&lt;/a&gt;, &lt;a href=&quot;item#matches_pattern?(pattern:Regex):Bool-instance-method&quot;&gt; matches_pattern?(pattern : Regex) : Bool matches_pattern?&lt;/a&gt;, &lt;a href=&quot;item#parent:Context-instance-method&quot;&gt; parent : Context parent&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;item#description:String-instance-method&quot;&gt;description：字符串说明&lt;/a&gt;，&lt;a href=&quot;item#end_line:Int32-instance-method&quot;&gt;end_line：Int32 end_line&lt;/a&gt;，&lt;a href=&quot;item#file:String-instance-method&quot;&gt;文件：字符串文件&lt;/a&gt;，&lt;a href=&quot;item#focus?:Bool-instance-method&quot;&gt;焦点？ ：布尔重点？&lt;/a&gt;，&lt;a href=&quot;item#line:Int32-instance-method&quot;&gt;line：Int32 line&lt;/a&gt;，&lt;a href=&quot;item#matches_line?(line:Int32):Bool-instance-method&quot;&gt;matchs_line？（line：Int32）：布尔matchs_line？&lt;/a&gt;，&lt;a href=&quot;item#matches_locations?(locations:Hash(String,Array(Int32))):Bool-instance-method&quot;&gt;matchs_locations？（locations：Hash（String，Array（Int32）））：布尔matchs_locations？&lt;/a&gt;，&lt;a href=&quot;item#matches_pattern?(pattern:Regex):Bool-instance-method&quot;&gt;matchs_pattern？（pattern：Regex）：布尔matchs_pattern？&lt;/a&gt;，&lt;a href=&quot;item#parent:Context-instance-method&quot;&gt;父级：上下文父级&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd38d8e51a6e33e30376df8916fc6bb2ea8a6d51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;item#description:String-instance-method&quot;&gt; description : String description&lt;/a&gt;, &lt;a href=&quot;item#end_line:Int32-instance-method&quot;&gt; end_line : Int32 end_line&lt;/a&gt;, &lt;a href=&quot;item#file:String-instance-method&quot;&gt; file : String file&lt;/a&gt;, &lt;a href=&quot;item#focus?:Bool-instance-method&quot;&gt; focus? : Bool focus?&lt;/a&gt;, &lt;a href=&quot;item#line:Int32-instance-method&quot;&gt; line : Int32 line&lt;/a&gt;, &lt;a href=&quot;item#parent:Context-instance-method&quot;&gt; parent : Context parent&lt;/a&gt;, &lt;a href=&quot;item#tags:Set(String)?-instance-method&quot;&gt; tags : Set(String)? tags&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;item#description:String-instance-method&quot;&gt;description：字符串说明&lt;/a&gt;，&lt;a href=&quot;item#end_line:Int32-instance-method&quot;&gt;end_line：Int32 end_line&lt;/a&gt;，&lt;a href=&quot;item#file:String-instance-method&quot;&gt;文件：字符串文件&lt;/a&gt;，&lt;a href=&quot;item#focus?:Bool-instance-method&quot;&gt;焦点？：布尔重点？&lt;/a&gt;，&lt;a href=&quot;item#line:Int32-instance-method&quot;&gt;line：Int32 line&lt;/a&gt;，&lt;a href=&quot;item#parent:Context-instance-method&quot;&gt;parent：上下文parent&lt;/a&gt;，&lt;a href=&quot;item#tags:Set(String)?-instance-method&quot;&gt;标签：Set（String）？标签&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af7508ee9b71a61096b60f165261d2b713ac9369" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="f77c52c93dbe072f8d61e4e7de9dc4ac509fc7c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iterable#chunk(reuse=false,&amp;amp;block:%7BK,V%7D-%3EU)forallU-instance-method&quot;&gt; chunk(reuse = false, &amp;amp;block : {K, V} -&amp;gt; U) forall U chunk&lt;/a&gt;, &lt;a href=&quot;iterable#chunk_while(reuse:Bool%7CArray(%7BK,V%7D)=false,&amp;amp;block:%7BK,V%7D,%7BK,V%7D-%3EB)forallB-instance-method&quot;&gt; chunk_while(reuse : Bool | Array({K, V}) = false, &amp;amp;block : {K, V}, {K, V} -&amp;gt; B) forall B chunk_while&lt;/a&gt;, &lt;a href=&quot;iterable#cycle(n)-instance-method&quot;&gt; cycle(n)&lt;br/&gt;cycle cycle&lt;/a&gt;, &lt;a href=&quot;iterable#each-instance-method&quot;&gt; each each&lt;/a&gt;, &lt;a href=&quot;iterable#each_cons(count:Int,reuse=false)-instance-method&quot;&gt; each_cons(count : Int, reuse = false) each_cons&lt;/a&gt;, &lt;a href=&quot;iterable#each_slice(count:Int,reuse=false)-instance-method&quot;&gt; each_slice(count : Int, reuse = false) each_slice&lt;/a&gt;, &lt;a href=&quot;iterable#each_with_index(offset=0)-instance-method&quot;&gt; each_with_index(offset = 0) each_with_index&lt;/a&gt;, &lt;a href=&quot;iterable#each_with_object(obj)-instance-method&quot;&gt; each_with_object(obj) each_with_object&lt;/a&gt;, &lt;a href=&quot;iterable#slice_after(reuse:Bool%7CArray(%7BK,V%7D)=false,&amp;amp;block:%7BK,V%7D-%3EB)forallB-instance-method&quot;&gt; slice_after(reuse : Bool | Array({K, V}) = false, &amp;amp;block : {K, V} -&amp;gt; B) forall B&lt;br/&gt;slice_after(pattern, reuse : Bool | Array({K, V}) = false) slice_after&lt;/a&gt;, &lt;a href=&quot;iterable#slice_before(reuse:Bool%7CArray(%7BK,V%7D)=false,&amp;amp;block:%7BK,V%7D-%3EB)forallB-instance-method&quot;&gt; slice_before(reuse : Bool | Array({K, V}) = false, &amp;amp;block : {K, V} -&amp;gt; B) forall B&lt;br/&gt;slice_before(pattern, reuse : Bool | Array({K, V}) = false) slice_before&lt;/a&gt;, &lt;a href=&quot;iterable#slice_when(reuse:Bool%7CArray(%7BK,V%7D)=false,&amp;amp;block:%7BK,V%7D,%7BK,V%7D-%3EB)forallB-instance-method&quot;&gt; slice_when(reuse : Bool | Array({K, V}) = false, &amp;amp;block : {K, V}, {K, V} -&amp;gt; B) forall B slice_when&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;iterable#chunk(reuse=false,&amp;amp;block:%7BK,V%7D-%3EU)forallU-instance-method&quot;&gt;对于所有U块&lt;/a&gt;，chunk（reuse = false，＆block：{K，V}-&amp;gt; U）U，&lt;a href=&quot;iterable#chunk_while(reuse:Bool%7CArray(%7BK,V%7D)=false,&amp;amp;block:%7BK,V%7D,%7BK,V%7D-%3EB)forallB-instance-method&quot;&gt;chunk_while（reuse：Bool | Array（{K，V}）= false，＆block：{K，V}，{K，V }-&amp;gt; B）forall B chunk_while&lt;/a&gt;，&lt;a href=&quot;iterable#cycle(n)-instance-method&quot;&gt;cycle（n）&lt;br/&gt;cycle cycle&lt;/a&gt;，&lt;a href=&quot;iterable#each-instance-method&quot;&gt;each each&lt;/a&gt;，&lt;a href=&quot;iterable#each_cons(count:Int,reuse=false)-instance-method&quot;&gt;each_cons（count：Int，复用=虚假）each_cons&lt;/a&gt;，&lt;a href=&quot;iterable#each_slice(count:Int,reuse=false)-instance-method&quot;&gt;each_slice（count：Int，复用=虚假）each_slice&lt;/a&gt;，&lt;a href=&quot;iterable#each_with_index(offset=0)-instance-method&quot;&gt;each_with_index（offset = 0）each_with_index&lt;/a&gt;，&lt;a href=&quot;iterable#each_with_object(obj)-instance-method&quot;&gt;each_with_object（obj）each_with_object&lt;/a&gt;，&lt;a href=&quot;iterable#slice_after(reuse:Bool%7CArray(%7BK,V%7D)=false,&amp;amp;block:%7BK,V%7D-%3EB)forallB-instance-method&quot;&gt;slice_after（reuse：Bool | Array（{K，V}）= false，＆block：{K，V}-&amp;gt; B）forall B &lt;br/&gt;slice_after（pattern，复用，Bool | Array（{K， V}）= false）slice_after之后&lt;/a&gt;，&lt;a href=&quot;iterable#slice_before(reuse:Bool%7CArray(%7BK,V%7D)=false,&amp;amp;block:%7BK,V%7D-%3EB)forallB-instance-method&quot;&gt;slice_before（reuse：Bool | Array（{K，V}）= false，＆block：{K，V}-&amp;gt; B）全部B &lt;br/&gt;slice_before（pattern，复用：Bool | Array（{K，V}）= false）slice_before&lt;/a&gt;，&lt;a href=&quot;iterable#slice_when(reuse:Bool%7CArray(%7BK,V%7D)=false,&amp;amp;block:%7BK,V%7D,%7BK,V%7D-%3EB)forallB-instance-method&quot;&gt;slice_when（reuse：Bool | Array（{K，V}）= false，＆block：{K，V}，{K，V}-&amp;gt; B）全部B slice_when&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33feb43c275a58a0b8897ea0265eb1bd72600ba9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iterable#chunk(reuse=false,&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; chunk(reuse = false, &amp;amp;block : T -&amp;gt; U) forall U chunk&lt;/a&gt;, &lt;a href=&quot;iterable#chunk_while(reuse:Bool%7CArray(T)=false,&amp;amp;block:T,T-%3EB)forallB-instance-method&quot;&gt; chunk_while(reuse : Bool | Array(T) = false, &amp;amp;block : T, T -&amp;gt; B) forall B chunk_while&lt;/a&gt;, &lt;a href=&quot;iterable#cycle(n)-instance-method&quot;&gt; cycle(n)&lt;br/&gt;cycle cycle&lt;/a&gt;, &lt;a href=&quot;iterable#each-instance-method&quot;&gt; each each&lt;/a&gt;, &lt;a href=&quot;iterable#each_cons(count:Int,reuse=false)-instance-method&quot;&gt; each_cons(count : Int, reuse = false) each_cons&lt;/a&gt;, &lt;a href=&quot;iterable#each_slice(count:Int,reuse=false)-instance-method&quot;&gt; each_slice(count : Int, reuse = false) each_slice&lt;/a&gt;, &lt;a href=&quot;iterable#each_with_index(offset=0)-instance-method&quot;&gt; each_with_index(offset = 0) each_with_index&lt;/a&gt;, &lt;a href=&quot;iterable#each_with_object(obj)-instance-method&quot;&gt; each_with_object(obj) each_with_object&lt;/a&gt;, &lt;a href=&quot;iterable#slice_after(reuse:Bool%7CArray(T)=false,&amp;amp;block:T-%3EB)forallB-instance-method&quot;&gt; slice_after(reuse : Bool | Array(T) = false, &amp;amp;block : T -&amp;gt; B) forall B&lt;br/&gt;slice_after(pattern, reuse : Bool | Array(T) = false) slice_after&lt;/a&gt;, &lt;a href=&quot;iterable#slice_before(reuse:Bool%7CArray(T)=false,&amp;amp;block:T-%3EB)forallB-instance-method&quot;&gt; slice_before(reuse : Bool | Array(T) = false, &amp;amp;block : T -&amp;gt; B) forall B&lt;br/&gt;slice_before(pattern, reuse : Bool | Array(T) = false) slice_before&lt;/a&gt;, &lt;a href=&quot;iterable#slice_when(reuse:Bool%7CArray(T)=false,&amp;amp;block:T,T-%3EB)forallB-instance-method&quot;&gt; slice_when(reuse : Bool | Array(T) = false, &amp;amp;block : T, T -&amp;gt; B) forall B slice_when&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;iterable#chunk(reuse=false,&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;块（重用=假，＆块：笔- &amp;gt; U）的forall&amp;uuml;块&lt;/a&gt;，&lt;a href=&quot;iterable#chunk_while(reuse:Bool%7CArray(T)=false,&amp;amp;block:T,T-%3EB)forallB-instance-method&quot;&gt;chunk_while（重用：布尔|阵列（T）=假，＆块：T，T - &amp;gt; B）的forall乙chunk_while&lt;/a&gt;，&lt;a href=&quot;iterable#cycle(n)-instance-method&quot;&gt;周期（n）的&lt;br/&gt;周期循环&lt;/a&gt;，&lt;a href=&quot;iterable#each-instance-method&quot;&gt;each each&lt;/a&gt;，&lt;a href=&quot;iterable#each_cons(count:Int,reuse=false)-instance-method&quot;&gt;each_cons（count：Int，复用=虚假）each_cons&lt;/a&gt;，&lt;a href=&quot;iterable#each_slice(count:Int,reuse=false)-instance-method&quot;&gt;each_slice（count：Int，复用=虚假）each_slice&lt;/a&gt;，&lt;a href=&quot;iterable#each_with_index(offset=0)-instance-method&quot;&gt;each_with_index（offset = 0）each_with_index&lt;/a&gt;，&lt;a href=&quot;iterable#each_with_object(obj)-instance-method&quot;&gt;each_with_object（obj）each_with_object&lt;/a&gt;，&lt;a href=&quot;iterable#slice_after(reuse:Bool%7CArray(T)=false,&amp;amp;block:T-%3EB)forallB-instance-method&quot;&gt;slice_after（复用：Bool | Array（T ）= false，＆block：T-&amp;gt; B）&lt;br/&gt;for all B slice_after（pattern，复用：Bool | Array（T）= false）slice_after&lt;/a&gt;，&lt;a href=&quot;iterable#slice_before(reuse:Bool%7CArray(T)=false,&amp;amp;block:T-%3EB)forallB-instance-method&quot;&gt;slice_before（reuse：Bool | Array（T）= false，＆block：T-&amp;gt; B）永远的B&lt;br/&gt;slice_before（模式，重复使用：Bool | Array（T）= false）slice_before&lt;/a&gt;，&lt;a href=&quot;iterable#slice_when(reuse:Bool%7CArray(T)=false,&amp;amp;block:T,T-%3EB)forallB-instance-method&quot;&gt;slice_when（重新使用：Bool | Array（T）= false，＆block：T，T-&amp;gt; B）全部B slice_when&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de729efb1dc5925cdfc61f167ff2ecd8fa419c6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iterable#chunk(reuse=false,&amp;amp;block:Union(T)-%3EU)forallU-instance-method&quot;&gt; chunk(reuse = false, &amp;amp;block : Union(T) -&amp;gt; U) forall U chunk&lt;/a&gt;, &lt;a href=&quot;iterable#chunk_while(reuse:Bool%7CArray(Union(T))=false,&amp;amp;block:Union(T),Union(T)-%3EB)forallB-instance-method&quot;&gt; chunk_while(reuse : Bool | Array(Union(T)) = false, &amp;amp;block : Union(T), Union(T) -&amp;gt; B) forall B chunk_while&lt;/a&gt;, &lt;a href=&quot;iterable#cycle(n)-instance-method&quot;&gt; cycle(n)&lt;br/&gt;cycle cycle&lt;/a&gt;, &lt;a href=&quot;iterable#each-instance-method&quot;&gt; each each&lt;/a&gt;, &lt;a href=&quot;iterable#each_cons(count:Int,reuse=false)-instance-method&quot;&gt; each_cons(count : Int, reuse = false) each_cons&lt;/a&gt;, &lt;a href=&quot;iterable#each_slice(count:Int,reuse=false)-instance-method&quot;&gt; each_slice(count : Int, reuse = false) each_slice&lt;/a&gt;, &lt;a href=&quot;iterable#each_with_index(offset=0)-instance-method&quot;&gt; each_with_index(offset = 0) each_with_index&lt;/a&gt;, &lt;a href=&quot;iterable#each_with_object(obj)-instance-method&quot;&gt; each_with_object(obj) each_with_object&lt;/a&gt;, &lt;a href=&quot;iterable#slice_after(reuse:Bool%7CArray(Union(T))=false,&amp;amp;block:Union(T)-%3EB)forallB-instance-method&quot;&gt; slice_after(reuse : Bool | Array(Union(T)) = false, &amp;amp;block : Union(T) -&amp;gt; B) forall B&lt;br/&gt;slice_after(pattern, reuse : Bool | Array(Union(T)) = false) slice_after&lt;/a&gt;, &lt;a href=&quot;iterable#slice_before(reuse:Bool%7CArray(Union(T))=false,&amp;amp;block:Union(T)-%3EB)forallB-instance-method&quot;&gt; slice_before(reuse : Bool | Array(Union(T)) = false, &amp;amp;block : Union(T) -&amp;gt; B) forall B&lt;br/&gt;slice_before(pattern, reuse : Bool | Array(Union(T)) = false) slice_before&lt;/a&gt;, &lt;a href=&quot;iterable#slice_when(reuse:Bool%7CArray(Union(T))=false,&amp;amp;block:Union(T),Union(T)-%3EB)forallB-instance-method&quot;&gt; slice_when(reuse : Bool | Array(Union(T)) = false, &amp;amp;block : Union(T), Union(T) -&amp;gt; B) forall B slice_when&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;iterable#chunk(reuse=false,&amp;amp;block:Union(T)-%3EU)forallU-instance-method&quot;&gt;对于所有U块&lt;/a&gt;，chunk（reuse = false，＆block：Union（T）-&amp;gt; U），&lt;a href=&quot;iterable#chunk_while(reuse:Bool%7CArray(Union(T))=false,&amp;amp;block:Union(T),Union(T)-%3EB)forallB-instance-method&quot;&gt;chunk_while（reuse：Bool | Array（Union（T））= false，＆block：Union（T），Union（T）-&amp;gt; B ）forall B chunk_while&lt;/a&gt;，&lt;a href=&quot;iterable#cycle(n)-instance-method&quot;&gt;cycle（n）&lt;br/&gt;cycle cycle&lt;/a&gt;，&lt;a href=&quot;iterable#each-instance-method&quot;&gt;每个each&lt;/a&gt;，&lt;a href=&quot;iterable#each_cons(count:Int,reuse=false)-instance-method&quot;&gt;each_cons（count：Int，复用=假）each_cons&lt;/a&gt;，&lt;a href=&quot;iterable#each_slice(count:Int,reuse=false)-instance-method&quot;&gt;each_slice（count：Int，复用=假）each_slice&lt;/a&gt;，&lt;a href=&quot;iterable#each_with_index(offset=0)-instance-method&quot;&gt;each_with_index（offset = 0）each_with_index&lt;/a&gt;，&lt;a href=&quot;iterable#each_with_object(obj)-instance-method&quot;&gt;each_with_object（obj ）each_with_object&lt;/a&gt;，&lt;a href=&quot;iterable#slice_after(reuse:Bool%7CArray(Union(T))=false,&amp;amp;block:Union(T)-%3EB)forallB-instance-method&quot;&gt;slice_after（reuse：Bool | Array（Union（T））= false，＆block：Union（T）-&amp;gt; B）全部B &lt;br/&gt;slice_after（pattern，reuse：Bool | Array（Union（T））= false）slice_after&lt;/a&gt;，&lt;a href=&quot;iterable#slice_before(reuse:Bool%7CArray(Union(T))=false,&amp;amp;block:Union(T)-%3EB)forallB-instance-method&quot;&gt;slice_before（reuse：Bool | Array（Union（T））= false，＆block：Union（T）-&amp;gt; B）全部B &lt;br/&gt;slice_before（pattern，复用：Bool | Array（Union（T））= false）slice_before&lt;/a&gt;，&lt;a href=&quot;iterable#slice_when(reuse:Bool%7CArray(Union(T))=false,&amp;amp;block:Union(T),Union(T)-%3EB)forallB-instance-method&quot;&gt;slice_when（重用：Bool | Array（Union（T））= false，＆block：Union（T），Union（T）-&amp;gt; B）对于所有B slice_when&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b48bef43beff285c647f6a4d46ef2d7f9490424" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;node#anchor:String?-instance-method&quot;&gt; anchor : String? anchor&lt;/a&gt;, &lt;a href=&quot;node#anchor=(anchor:String?)-instance-method&quot;&gt; anchor=(anchor : String?) anchor=&lt;/a&gt;, &lt;a href=&quot;node#end_column:Int32-instance-method&quot;&gt; end_column : Int32 end_column&lt;/a&gt;, &lt;a href=&quot;node#end_column=(end_column)-instance-method&quot;&gt; end_column=(end_column) end_column=&lt;/a&gt;, &lt;a href=&quot;node#end_line:Int32-instance-method&quot;&gt; end_line : Int32 end_line&lt;/a&gt;, &lt;a href=&quot;node#end_line=(end_line)-instance-method&quot;&gt; end_line=(end_line) end_line=&lt;/a&gt;, &lt;a href=&quot;node#location:Tuple(Int32,Int32)-instance-method&quot;&gt; location : Tuple(Int32, Int32) location&lt;/a&gt;, &lt;a href=&quot;node#raise(message)-instance-method&quot;&gt; raise(message) raise&lt;/a&gt;, &lt;a href=&quot;node#start_column:Int32-instance-method&quot;&gt; start_column : Int32 start_column&lt;/a&gt;, &lt;a href=&quot;node#start_column=(start_column)-instance-method&quot;&gt; start_column=(start_column) start_column=&lt;/a&gt;, &lt;a href=&quot;node#start_line:Int32-instance-method&quot;&gt; start_line : Int32 start_line&lt;/a&gt;, &lt;a href=&quot;node#start_line=(start_line)-instance-method&quot;&gt; start_line=(start_line) start_line=&lt;/a&gt;, &lt;a href=&quot;node#tag:String?-instance-method&quot;&gt; tag : String? tag&lt;/a&gt;, &lt;a href=&quot;node#tag=(tag:String?)-instance-method&quot;&gt; tag=(tag : String?) tag=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;node#anchor:String?-instance-method&quot;&gt;锚：字符串？锚&lt;/a&gt;，&lt;a href=&quot;node#anchor=(anchor:String?)-instance-method&quot;&gt;锚=（锚：字符串？）锚=&lt;/a&gt;，&lt;a href=&quot;node#end_column:Int32-instance-method&quot;&gt;end_column：Int32 end_column&lt;/a&gt;，&lt;a href=&quot;node#end_column=(end_column)-instance-method&quot;&gt;end_column =（end_column）end_column =&lt;/a&gt;，&lt;a href=&quot;node#end_line:Int32-instance-method&quot;&gt;end_line：Int32 end_line&lt;/a&gt;，&lt;a href=&quot;node#end_line=(end_line)-instance-method&quot;&gt;end_line =（end_line）end_line =&lt;/a&gt;，&lt;a href=&quot;node#location:Tuple(Int32,Int32)-instance-method&quot;&gt;位置：Tuple（Int32，Int32）location&lt;/a&gt;，&lt;a href=&quot;node#raise(message)-instance-method&quot;&gt;提高（消息）提高&lt;/a&gt;，&lt;a href=&quot;node#start_column:Int32-instance-method&quot;&gt;start_column：Int32 start_column&lt;/a&gt;，&lt;a href=&quot;node#start_column=(start_column)-instance-method&quot;&gt;start_column =（start_column）start_column =&lt;/a&gt;，&lt;a href=&quot;node#start_line:Int32-instance-method&quot;&gt;start_line：Int32 start_line&lt;/a&gt;，&lt;a href=&quot;node#start_line=(start_line)-instance-method&quot;&gt;start_line =（start_line）start_line =&lt;/a&gt;，&lt;a href=&quot;node#tag:String?-instance-method&quot;&gt;标签：字符串？标签&lt;/a&gt;，&lt;a href=&quot;node#tag=(tag:String?)-instance-method&quot;&gt;标签=（标签：字符串？）标签=&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a5c5e024bea0cf63da47d964899627a9b7f68df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;number#*(other:Complex)-instance-method&quot;&gt; *(other : Complex)&lt;br/&gt;*(other : BigFloat) *&lt;/a&gt;, &lt;a href=&quot;number#+(other:BigFloat)-instance-method&quot;&gt; +(other : BigFloat)&lt;br/&gt;+(other : Complex)&lt;br/&gt;+ +&lt;/a&gt;, &lt;a href=&quot;number#-(other:Complex)-instance-method&quot;&gt; -(other : Complex)&lt;br/&gt;-(other : BigFloat) -&lt;/a&gt;, &lt;a href=&quot;number#/(other:Complex)-instance-method&quot;&gt; /(other : Complex)&lt;br/&gt;/(other : BigFloat) /&lt;/a&gt;, &lt;a href=&quot;number#//(other)-instance-method&quot;&gt; //(other) //&lt;/a&gt;, &lt;a href=&quot;number#(other:BigFloat)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : BigFloat)&lt;br/&gt;&amp;lt;=&amp;gt;(other) : Int32? &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;number#==(other:Complex)-instance-method&quot;&gt; ==(other : Complex) ==&lt;/a&gt;, &lt;a href=&quot;number#abs-instance-method&quot;&gt; abs abs&lt;/a&gt;, &lt;a href=&quot;number#abs2-instance-method&quot;&gt; abs2 abs2&lt;/a&gt;, &lt;a href=&quot;number#cis-instance-method&quot;&gt; cis cis&lt;/a&gt;, &lt;a href=&quot;number#clamp(range:Range)-instance-method&quot;&gt; clamp(range : Range)&lt;br/&gt;clamp(min, max) clamp&lt;/a&gt;, &lt;a href=&quot;number#divmod(number)-instance-method&quot;&gt; divmod(number) divmod&lt;/a&gt;, &lt;a href=&quot;number#format(separator='.',delimiter=',',decimal_places:Int?=nil,*,group:Int=3,only_significant:Bool=false):String-instance-method&quot;&gt; format(separator = '.', delimiter = ',', decimal_places : Int? = nil, *, group : Int = 3, only_significant : Bool = false) : String&lt;br/&gt;format(io : IO, separator = '.', delimiter = ',', decimal_places : Int? = nil, *, group : Int = 3, only_significant : Bool = false) : Nil format&lt;/a&gt;, &lt;a href=&quot;number#humanize(io:IO,precision=3,separator='.',delimiter=',',*,base=10**3,significant=true,prefixes:Indexable=SI_PREFIXES):Nil-instance-method&quot;&gt; humanize(io : IO, precision = 3, separator = '.', delimiter = ',', *, base = 10 ** 3, significant = true, prefixes : Indexable = SI_PREFIXES) : Nil&lt;br/&gt;humanize(io : IO, precision = 3, separator = '.', delimiter = ',', *, base = 10 ** 3, significant = true, prefixes : Proc) : Nil&lt;br/&gt;humanize(precision = 3, separator = '.', delimiter = ',', *, base = 10 ** 3, significant = true, prefixes = SI_PREFIXES) : String&lt;br/&gt;humanize(io : IO, precision = 3, separator = '.', delimiter = ',', *, base = 10 ** 3, significant = true, &amp;amp;prefixes : Int32, Float64 -&amp;gt; Tuple(Int32, UNDERSCORE) | Tuple(Int32, UNDERSCORE, Bool)) : Nil&lt;br/&gt;humanize(precision = 3, separator = '.', delimiter = ',', *, base = 10 ** 3, significant = true, &amp;amp;block) : String&lt;br/&gt;humanize(precision = 3, separator = '.', delimiter = ',', *, base = 10 ** 3, significant = true, prefixes : Proc) : Nil humanize&lt;/a&gt;, &lt;a href=&quot;number#i-instance-method&quot;&gt; i i&lt;/a&gt;, &lt;a href=&quot;number#round(digits=0,base=10)-instance-method&quot;&gt; round(digits = 0, base = 10) round&lt;/a&gt;, &lt;a href=&quot;number#sign-instance-method&quot;&gt; sign sign&lt;/a&gt;, &lt;a href=&quot;number#significant(digits,base=10)-instance-method&quot;&gt; significant(digits, base = 10) significant&lt;/a&gt;, &lt;a href=&quot;number#step(*,to=nil,by=1)-instance-method&quot;&gt; step(*, to = nil, by = 1)&lt;br/&gt;step(*, to = nil, by = 1, &amp;amp;block) step&lt;/a&gt;, &lt;a href=&quot;number#to_big_f-instance-method&quot;&gt; to_big_f to_big_f&lt;/a&gt;, &lt;a href=&quot;number#to_c-instance-method&quot;&gt; to_c to_c&lt;/a&gt;, &lt;a href=&quot;number#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt; to_yaml(yaml : YAML::Nodes::Builder) to_yaml&lt;/a&gt;, &lt;a href=&quot;number#zero?:Bool-instance-method&quot;&gt; zero? : Bool zero?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;number#*(other:Complex)-instance-method&quot;&gt;*（other：Complex）&lt;br/&gt;*（other：BigFloat）*&lt;/a&gt;，&lt;a href=&quot;number#+(other:BigFloat)-instance-method&quot;&gt;+（other：BigFloat）&lt;br/&gt;+（other：Complex）&lt;br/&gt;+ +&lt;/a&gt;，&lt;a href=&quot;number#-(other:Complex)-instance-method&quot;&gt;-（other：Complex）&lt;br/&gt;-（other：BigFloat）-&lt;/a&gt;，&lt;a href=&quot;number#/(other:Complex)-instance-method&quot;&gt;/（other：Complex）&lt;br/&gt;/ （other：BigFloat）/&lt;/a&gt;，&lt;a href=&quot;number#//(other)-instance-method&quot;&gt;//（other）//&lt;/a&gt;，&lt;a href=&quot;number#(other:BigFloat)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：BigFloat）&lt;br/&gt;&amp;lt;=&amp;gt;（other）：Int32？ &amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;number#==(other:Complex)-instance-method&quot;&gt;==（other：Complex）==&lt;/a&gt;，&lt;a href=&quot;number#abs-instance-method&quot;&gt;abs abs&lt;/a&gt;，&lt;a href=&quot;number#abs2-instance-method&quot;&gt;abs2 abs2&lt;/a&gt;，&lt;a href=&quot;number#cis-instance-method&quot;&gt;顺式cis&lt;/a&gt;，&lt;a href=&quot;number#clamp(range:Range)-instance-method&quot;&gt;钳位（范围：范围）&lt;br/&gt;钳位（最小，最大）钳位&lt;/a&gt;，&lt;a href=&quot;number#divmod(number)-instance-method&quot;&gt;divmod（数字）divmod&lt;/a&gt;，&lt;a href=&quot;number#format(separator='.',delimiter=',',decimal_places:Int?=nil,*,group:Int=3,only_significant:Bool=false):String-instance-method&quot;&gt;format（separator ='。'，delimiter ='，'，decimal_places：Int？= nil，*，group：Int = 3，only_significant：Bool = false）：字符串&lt;br/&gt;格式（io：IO，分隔符='。'，分隔符='，'，decimal_places：Int？= nil，*，group：Int = 3，only_significant：Bool = false）：Nil格式&lt;/a&gt;，humanize &lt;a href=&quot;number#humanize(io:IO,precision=3,separator='.',delimiter=',',*,base=10**3,significant=true,prefixes:Indexable=SI_PREFIXES):Nil-instance-method&quot;&gt;（io：IO，精度= 3，分隔符='。'，定界符='， '，*，base = 10 ** 3，有意义= true，前缀：可索引= SI_PREFIXES）：无人性&lt;br/&gt;化（io：IO，精度= 3，分隔符='。'，定界符='，'，*，base = 10 ** 3，有意义=真，前缀：Proc）：无人性&lt;br/&gt;化（精度= 3，分隔符='。'，分隔符='，'，*，基数= 10 ** 3，有意义=真，前缀= SI_PREFIXES）：串&lt;br/&gt;humanize（io：IO，精度= 3，分隔符='。'，分隔符='，'，*，基数= 10 ** 3，有效=真，＆prefixes：Int32，Float64-&amp;gt; Tuple（Int32，UNDERSCORE）|元组（Int32，UNDERSCORE，Bool））：无人性&lt;br/&gt;化（精度= 3，分隔符='。'，分隔符='，'，*，基数= 10 ** 3，有效值= true，＆block）：字符串&lt;br/&gt;人文化（精度= 3 ，分隔符='。'，定界符='，'，*，底数= 10 ** 3，有效=真，前缀：Proc）：Nil humanize&lt;/a&gt;，&lt;a href=&quot;number#i-instance-method&quot;&gt;ii&lt;/a&gt;，&lt;a href=&quot;number#round(digits=0,base=10)-instance-method&quot;&gt;round（digits = 0，base = 10）round&lt;/a&gt;，&lt;a href=&quot;number#sign-instance-method&quot;&gt;sign sign&lt;/a&gt;，&lt;a href=&quot;number#significant(digits,base=10)-instance-method&quot;&gt;有效（数字，基数= 10）有效&lt;/a&gt;，&lt;a href=&quot;number#step(*,to=nil,by=1)-instance-method&quot;&gt;step（*，至= nil，by = 1）&lt;br/&gt;step（*，至= nil，by = 1，＆block）step&lt;/a&gt;，&lt;a href=&quot;number#to_big_f-instance-method&quot;&gt;to_big_f to_big_f&lt;/a&gt;，&lt;a href=&quot;number#to_c-instance-method&quot;&gt;to_c to_c&lt;/a&gt;，&lt;a href=&quot;number#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt;to_yaml（yaml：YAML :: Nodes :: Builder）to_yaml&lt;/a&gt;，&lt;a href=&quot;number#zero?:Bool-instance-method&quot;&gt;零？ ：布尔零？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af66a9da597a881f20772cf1cc3968613a3ce6ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;number#*(other:Complex)-instance-method&quot;&gt; *(other : Complex)&lt;br/&gt;*(other : BigFloat) *&lt;/a&gt;, &lt;a href=&quot;number#+(other:BigFloat)-instance-method&quot;&gt; +(other : BigFloat)&lt;br/&gt;+(other : Complex)&lt;br/&gt;+ +&lt;/a&gt;, &lt;a href=&quot;number#-(other:Complex)-instance-method&quot;&gt; -(other : Complex)&lt;br/&gt;-(other : BigFloat) -&lt;/a&gt;, &lt;a href=&quot;number#/(other:Complex)-instance-method&quot;&gt; /(other : Complex)&lt;br/&gt;/(other : BigFloat) /&lt;/a&gt;, &lt;a href=&quot;number#//(other)-instance-method&quot;&gt; //(other) //&lt;/a&gt;, &lt;a href=&quot;number#(other:BigFloat)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : BigFloat)&lt;br/&gt;&amp;lt;=&amp;gt;(other) : Int32? &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;number#==(other:Complex)-instance-method&quot;&gt; ==(other : Complex) ==&lt;/a&gt;, &lt;a href=&quot;number#abs-instance-method&quot;&gt; abs abs&lt;/a&gt;, &lt;a href=&quot;number#abs2-instance-method&quot;&gt; abs2 abs2&lt;/a&gt;, &lt;a href=&quot;number#cis-instance-method&quot;&gt; cis cis&lt;/a&gt;, &lt;a href=&quot;number#divmod(number)-instance-method&quot;&gt; divmod(number) divmod&lt;/a&gt;, &lt;a href=&quot;number#format(separator='.',delimiter=',',decimal_places:Int?=nil,*,group:Int=3,only_significant:Bool=false):String-instance-method&quot;&gt; format(separator = '.', delimiter = ',', decimal_places : Int? = nil, *, group : Int = 3, only_significant : Bool = false) : String&lt;br/&gt;format(io : IO, separator = '.', delimiter = ',', decimal_places : Int? = nil, *, group : Int = 3, only_significant : Bool = false) : Nil format&lt;/a&gt;, &lt;a href=&quot;number#humanize(io:IO,precision=3,separator='.',delimiter=',',*,base=10**3,significant=true,prefixes:Indexable=SI_PREFIXES):Nil-instance-method&quot;&gt; humanize(io : IO, precision = 3, separator = '.', delimiter = ',', *, base = 10 ** 3, significant = true, prefixes : Indexable = SI_PREFIXES) : Nil&lt;br/&gt;humanize(precision = 3, separator = '.', delimiter = ',', *, base = 10 ** 3, significant = true, prefixes : Proc) : Nil&lt;br/&gt;humanize(precision = 3, separator = '.', delimiter = ',', *, base = 10 ** 3, significant = true, &amp;amp;) : String&lt;br/&gt;humanize(io : IO, precision = 3, separator = '.', delimiter = ',', *, base = 10 ** 3, significant = true, &amp;amp;prefixes : Int32, Float64 -&amp;gt; Tuple(Int32, _) | Tuple(Int32, _, Bool)) : Nil&lt;br/&gt;humanize(precision = 3, separator = '.', delimiter = ',', *, base = 10 ** 3, significant = true, prefixes = SI_PREFIXES) : String&lt;br/&gt;humanize(io : IO, precision = 3, separator = '.', delimiter = ',', *, base = 10 ** 3, significant = true, prefixes : Proc) : Nil humanize&lt;/a&gt;, &lt;a href=&quot;number#i-instance-method&quot;&gt; i i&lt;/a&gt;, &lt;a href=&quot;number#round(digits=0,base=10)-instance-method&quot;&gt; round(digits = 0, base = 10) round&lt;/a&gt;, &lt;a href=&quot;number#sign-instance-method&quot;&gt; sign sign&lt;/a&gt;, &lt;a href=&quot;number#significant(digits,base=10)-instance-method&quot;&gt; significant(digits, base = 10) significant&lt;/a&gt;, &lt;a href=&quot;number#step(*,to=nil,by=1)-instance-method&quot;&gt; step(*, to = nil, by = 1)&lt;br/&gt;step(*, to = nil, by = 1, &amp;amp;) step&lt;/a&gt;, &lt;a href=&quot;number#to_big_f-instance-method&quot;&gt; to_big_f to_big_f&lt;/a&gt;, &lt;a href=&quot;number#to_c-instance-method&quot;&gt; to_c to_c&lt;/a&gt;, &lt;a href=&quot;number#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt; to_yaml(yaml : YAML::Nodes::Builder) to_yaml&lt;/a&gt;, &lt;a href=&quot;number#zero?:Bool-instance-method&quot;&gt; zero? : Bool zero?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;number#*(other:Complex)-instance-method&quot;&gt;*（other：Complex）&lt;br/&gt;*（other：BigFloat）*&lt;/a&gt;，&lt;a href=&quot;number#+(other:BigFloat)-instance-method&quot;&gt;+（other：BigFloat）&lt;br/&gt;+（other：Complex）&lt;br/&gt;+ +&lt;/a&gt;，&lt;a href=&quot;number#-(other:Complex)-instance-method&quot;&gt;-（other：Complex）&lt;br/&gt;-（other：BigFloat）-&lt;/a&gt;，&lt;a href=&quot;number#/(other:Complex)-instance-method&quot;&gt;/（other：Complex）&lt;br/&gt;/ （other：BigFloat）/&lt;/a&gt;，&lt;a href=&quot;number#//(other)-instance-method&quot;&gt;//（other）//&lt;/a&gt;，&lt;a href=&quot;number#(other:BigFloat)-instance-method&quot;&gt;&amp;lt;=&amp;gt;（other：BigFloat）&lt;br/&gt;&amp;lt;=&amp;gt;（other）：Int32？ &amp;lt;=&amp;gt;&lt;/a&gt;，&lt;a href=&quot;number#==(other:Complex)-instance-method&quot;&gt;==（other：Complex）==&lt;/a&gt;，&lt;a href=&quot;number#abs-instance-method&quot;&gt;abs abs&lt;/a&gt;，&lt;a href=&quot;number#abs2-instance-method&quot;&gt;abs2 abs2&lt;/a&gt;，&lt;a href=&quot;number#cis-instance-method&quot;&gt;顺式cis&lt;/a&gt;，&lt;a href=&quot;number#divmod(number)-instance-method&quot;&gt;divmod（number）divmod&lt;/a&gt;，&lt;a href=&quot;number#format(separator='.',delimiter=',',decimal_places:Int?=nil,*,group:Int=3,only_significant:Bool=false):String-instance-method&quot;&gt;format（separator ='。 *，group：Int = 3，only_significant：Bool = false）：字符串&lt;br/&gt;格式（io：IO，分隔符='。'，分隔符='，'，小数位数：Int？= nil，*，group：Int = 3，only_significant：Bool = false）：无格式&lt;/a&gt;，&lt;a href=&quot;number#humanize(io:IO,precision=3,separator='.',delimiter=',',*,base=10**3,significant=true,prefixes:Indexable=SI_PREFIXES):Nil-instance-method&quot;&gt;人性化（io：IO，精度= 3，分隔符='。'，定界符='，'，*，基数= 10 ** 3，有效=真，前缀：可索引= SI_PREFIXES）：无人性&lt;br/&gt;化（精度= 3，分隔符='。'，分隔符= '，'，*，base = 10 ** 3，有意义= true，前缀：Proc）：无人性&lt;br/&gt;化（精度= 3，分隔符='。'，定界符='，'，*，base = 10 ** 3，重要= true，＆）：字符串&lt;br/&gt;humanize（io：IO，精度= 3，分隔符='。'，分隔符='，'，*，base = 10 ** 3，有效= true，＆prefixes：Int32，Float64-&amp;gt;元组（Int32，_）|元组（Int32，_，Bool））：无&lt;br/&gt;humanize（精度= 3，分隔符='。'，分隔符='，'，*，基= 10 ** 3，有效=真，前缀= SI_PREFIXES）：字符串humanize &lt;br/&gt;（io：IO，精度= 3，分隔符=' 。'，定界符='，'，*，基数= 10 ** 3，有效值= true，前缀：Proc）：无人性化&lt;/a&gt;，&lt;a href=&quot;number#i-instance-method&quot;&gt;ii&lt;/a&gt;，&lt;a href=&quot;number#round(digits=0,base=10)-instance-method&quot;&gt;round（数字= 0，基数= 10）round&lt;/a&gt;，&lt;a href=&quot;number#sign-instance-method&quot;&gt;记号&lt;/a&gt;，&lt;a href=&quot;number#significant(digits,base=10)-instance-method&quot;&gt;有效值（数字，base = 10）有效&lt;/a&gt;，&lt;a href=&quot;number#step(*,to=nil,by=1)-instance-method&quot;&gt;step（*，to = nil，by = 1）&lt;br/&gt;step（*，to = nil，by = 1，＆）step&lt;/a&gt;，&lt;a href=&quot;number#to_big_f-instance-method&quot;&gt;to_big_f to_big_f&lt;/a&gt;，&lt;a href=&quot;number#to_c-instance-method&quot;&gt;to_c to_c&lt;/a&gt;，&lt;a href=&quot;number#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt;to_yaml（yaml：YAML :: Nodes： ：Builder）to_yaml&lt;/a&gt;，&lt;a href=&quot;number#zero?:Bool-instance-method&quot;&gt;零？ ：布尔零？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f6b36fd6c27e2a045bc7090587cbbfe3e69167c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;object#!:Bool-instance-method&quot;&gt; ! : Bool !&lt;/a&gt;, &lt;a href=&quot;object#!=(other)-instance-method&quot;&gt; !=(other) !=&lt;/a&gt;, &lt;a href=&quot;object#!~(other)-instance-method&quot;&gt; !~(other) !~&lt;/a&gt;, &lt;a href=&quot;object#==(other)-instance-method&quot;&gt; ==(other) ==&lt;/a&gt;, &lt;a href=&quot;object#===(other:JSON::Any)-instance-method&quot;&gt; ===(other : JSON::Any)&lt;br/&gt;===(other : YAML::Any)&lt;br/&gt;===(other) ===&lt;/a&gt;, &lt;a href=&quot;object#=~(other)-instance-method&quot;&gt; =~(other) =~&lt;/a&gt;, &lt;a href=&quot;object#as(type:Class)-instance-method&quot;&gt; as(type : Class) as&lt;/a&gt;, &lt;a href=&quot;object#as?(type:Class)-instance-method&quot;&gt; as?(type : Class) as?&lt;/a&gt;, &lt;a href=&quot;object#class-instance-method&quot;&gt; class class&lt;/a&gt;, &lt;a href=&quot;object#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;, &lt;a href=&quot;object#hash(hasher)-instance-method&quot;&gt; hash(hasher)&lt;br/&gt;hash hash&lt;/a&gt;, &lt;a href=&quot;object#in?(*values:Object):Bool-instance-method&quot;&gt; in?(*values : Object) : Bool&lt;br/&gt;in?(collection) : Bool in?&lt;/a&gt;, &lt;a href=&quot;object#inspect:String-instance-method&quot;&gt; inspect : String&lt;br/&gt;inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;object#is_a?(type:Class):Bool-instance-method&quot;&gt; is_a?(type : Class) : Bool is_a?&lt;/a&gt;, &lt;a href=&quot;object#itself-instance-method&quot;&gt; itself itself&lt;/a&gt;, &lt;a href=&quot;object#nil?:Bool-instance-method&quot;&gt; nil? : Bool nil?&lt;/a&gt;, &lt;a href=&quot;object#not_nil!-instance-method&quot;&gt; not_nil! not_nil!&lt;/a&gt;,  pretty_inspect(width = 79, newline = &quot;\n&quot;, indent = 0) : String pretty_inspect, &lt;a href=&quot;object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt; pretty_print(pp : PrettyPrint) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;object#responds_to?(name:Symbol):Bool-instance-method&quot;&gt; responds_to?(name : Symbol) : Bool responds_to?&lt;/a&gt;, &lt;a href=&quot;object#tap(&amp;amp;)-instance-method&quot;&gt; tap(&amp;amp;) tap&lt;/a&gt;, &lt;a href=&quot;object#to_json(io:IO)-instance-method&quot;&gt; to_json(io : IO)&lt;br/&gt;to_json to_json&lt;/a&gt;,  to_pretty_json(io : IO, indent : String = &quot; &quot;)</source>
          <target state="translated">&lt;a href=&quot;object#!:Bool-instance-method&quot;&gt;！ ：布尔！&lt;/a&gt;，&lt;a href=&quot;object#!=(other)-instance-method&quot;&gt;=（其他）=！ ，&lt;/a&gt;〜（&lt;a href=&quot;object#!~(other)-instance-method&quot;&gt;其它）〜！ &lt;/a&gt;，&lt;a href=&quot;object#==(other)-instance-method&quot;&gt;==（其他）==&lt;/a&gt;，&lt;a href=&quot;object#===(other:JSON::Any)-instance-method&quot;&gt;===（其他：JSON ::任何）&lt;br/&gt;===（其它：YAML ::任何）&lt;br/&gt;=== （other）===&lt;/a&gt;，&lt;a href=&quot;object#=~(other)-instance-method&quot;&gt;=〜（other）=〜&lt;/a&gt;，&lt;a href=&quot;object#as(type:Class)-instance-method&quot;&gt;as（type：Class）as&lt;/a&gt;，&lt;a href=&quot;object#as?(type:Class)-instance-method&quot;&gt;as？（type：Class）as？&lt;/a&gt;，&lt;a href=&quot;object#class-instance-method&quot;&gt;类class&lt;/a&gt;，&lt;a href=&quot;object#dup-instance-method&quot;&gt;dup dup&lt;/a&gt;，&lt;a href=&quot;object#hash(hasher)-instance-method&quot;&gt;hash（哈希）&lt;br/&gt;hash hash&lt;/a&gt;，&lt;a href=&quot;object#in?(*values:Object):Bool-instance-method&quot;&gt;in？（* values：Object）：Bool &lt;br/&gt;in？（collection）：Bool in？&lt;/a&gt;，&lt;a href=&quot;object#inspect:String-instance-method&quot;&gt;inspect：字符串&lt;br/&gt;inspect（io：IO）：Nil inspect&lt;/a&gt;，&lt;a href=&quot;object#is_a?(type:Class):Bool-instance-method&quot;&gt;is_a？（type：Class）：布尔is_a？&lt;/a&gt;，&lt;a href=&quot;object#itself-instance-method&quot;&gt;自己本身&lt;/a&gt;，&lt;a href=&quot;object#nil?:Bool-instance-method&quot;&gt;零？：布尔零？&lt;/a&gt;，&lt;a href=&quot;object#not_nil!-instance-method&quot;&gt;not_nil！not_nil！&lt;/a&gt;，pretty_inspect（宽度= 79，换行符=&amp;ldquo; \ n&amp;rdquo;，缩进= 0）：字符串pretty_inspect，&lt;a href=&quot;object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt;pretty_print（pp：PrettyPrint）：Nil pretty_print&lt;/a&gt;，respons_to &lt;a href=&quot;object#responds_to?(name:Symbol):Bool-instance-method&quot;&gt;？（name：Symbol）：Bool &lt;/a&gt;responses_to ？，&lt;a href=&quot;object#tap(&amp;amp;)-instance-method&quot;&gt;tap（＆）tap&lt;/a&gt;，&lt;a href=&quot;object#to_json(io:IO)-instance-method&quot;&gt;to_json（io：IO）&lt;br/&gt;to_json to_json&lt;/a&gt;，to_pretty_json（io：IO，缩进：String =&amp;ldquo;&amp;rdquo;）</target>
        </trans-unit>
        <trans-unit id="dd42488e0d0924679b132270be6a2238d7762c38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;object#!=(other)-instance-method&quot;&gt; !=(other) !=&lt;/a&gt;, &lt;a href=&quot;object#!~(other)-instance-method&quot;&gt; !~(other) !~&lt;/a&gt;, &lt;a href=&quot;object#==(other)-instance-method&quot;&gt; ==(other) ==&lt;/a&gt;, &lt;a href=&quot;object#===(other:JSON::Any)-instance-method&quot;&gt; ===(other : JSON::Any)&lt;br/&gt;===(other : YAML::Any)&lt;br/&gt;===(other) ===&lt;/a&gt;, &lt;a href=&quot;object#=~(other)-instance-method&quot;&gt; =~(other) =~&lt;/a&gt;, &lt;a href=&quot;object#class-instance-method&quot;&gt; class class&lt;/a&gt;, &lt;a href=&quot;object#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;, &lt;a href=&quot;object#hash(hasher)-instance-method&quot;&gt; hash(hasher)&lt;br/&gt;hash hash&lt;/a&gt;, &lt;a href=&quot;object#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil&lt;br/&gt;inspect : String inspect&lt;/a&gt;, &lt;a href=&quot;object#itself-instance-method&quot;&gt; itself itself&lt;/a&gt;, &lt;a href=&quot;object#not_nil!-instance-method&quot;&gt; not_nil! not_nil!&lt;/a&gt;,  pretty_inspect(width = 79, newline = &quot;\n&quot;, indent = 0) : String pretty_inspect, &lt;a href=&quot;object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt; pretty_print(pp : PrettyPrint) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;object#tap(&amp;amp;block)-instance-method&quot;&gt; tap(&amp;amp;block) tap&lt;/a&gt;, &lt;a href=&quot;object#to_json(io:IO)-instance-method&quot;&gt; to_json(io : IO)&lt;br/&gt;to_json to_json&lt;/a&gt;,  to_pretty_json(indent : String = &quot; &quot;)</source>
          <target state="translated">&lt;a href=&quot;object#!=(other)-instance-method&quot;&gt;！=（其他）=！ ，&lt;/a&gt;〜（&lt;a href=&quot;object#!~(other)-instance-method&quot;&gt;其它）〜！ &lt;/a&gt;，&lt;a href=&quot;object#==(other)-instance-method&quot;&gt;==（其他）==&lt;/a&gt;，&lt;a href=&quot;object#===(other:JSON::Any)-instance-method&quot;&gt;===（其他：JSON ::任何）&lt;br/&gt;===（其它：YAML ::任何）&lt;br/&gt;===（其他）===&lt;/a&gt;，&lt;a href=&quot;object#=~(other)-instance-method&quot;&gt;=〜（其他）=〜&lt;/a&gt;，&lt;a href=&quot;object#class-instance-method&quot;&gt;类class&lt;/a&gt;，&lt;a href=&quot;object#dup-instance-method&quot;&gt;dup dup&lt;/a&gt;，&lt;a href=&quot;object#hash(hasher)-instance-method&quot;&gt;hash（hasher）&lt;br/&gt;hash hash&lt;/a&gt;，&lt;a href=&quot;object#inspect(io:IO):Nil-instance-method&quot;&gt;inspect（io：IO）：Nil &lt;br/&gt;inspect：字符串inspect&lt;/a&gt;，&lt;a href=&quot;object#itself-instance-method&quot;&gt;本身本身&lt;/a&gt;，&lt;a href=&quot;object#not_nil!-instance-method&quot;&gt;not_nil！ not_nil！&lt;/a&gt;，pretty_inspect（宽度= 79，换行符=&amp;ldquo; \ n&amp;rdquo;，缩进= 0）：字符串pretty_inspect，&lt;a href=&quot;object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt;pretty_print（pp：PrettyPrint）：Nil pretty_print&lt;/a&gt;，&lt;a href=&quot;object#tap(&amp;amp;block)-instance-method&quot;&gt;tap（＆block）tap&lt;/a&gt;，&lt;a href=&quot;object#to_json(io:IO)-instance-method&quot;&gt;to_json（io：IO）&lt;br/&gt;to_json to_json&lt;/a&gt;，to_pretty_json（indent：String =&amp;ldquo;&amp;rdquo;）</target>
        </trans-unit>
        <trans-unit id="229c575555a9108361fef4f45b0a00341c71d056" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;object#from_json(string_or_io,root:String)-class-method&quot;&gt; from_json(string_or_io, root : String)&lt;br/&gt;from_json(string_or_io) from_json&lt;/a&gt;, &lt;a href=&quot;object#from_yaml(string_or_io:String%7CIO)-class-method&quot;&gt; from_yaml(string_or_io : String | IO) from_yaml&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;object#from_json(string_or_io,root:String)-class-method&quot;&gt;from_json（string_or_io，root：字符串）&lt;br/&gt;from_json（string_or_io）from_json&lt;/a&gt;，&lt;a href=&quot;object#from_yaml(string_or_io:String%7CIO)-class-method&quot;&gt;from_yaml（string_or_io：String | IO）from_yaml&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aebe6066ac5685202c314a2313093bcda26118a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;object#from_json(string_or_io,root:String):self-class-method&quot;&gt; from_json(string_or_io, root : String) : self&lt;br/&gt;from_json(string_or_io) : self from_json&lt;/a&gt;, &lt;a href=&quot;object#from_yaml(string_or_io:String%7CIO):self-class-method&quot;&gt; from_yaml(string_or_io : String | IO) : self from_yaml&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;object#from_json(string_or_io,root:String):self-class-method&quot;&gt;from_json（string_or_io，root：String）：自我&lt;br/&gt;from_json（string_or_io）：自我from_json&lt;/a&gt;，&lt;a href=&quot;object#from_yaml(string_or_io:String%7CIO):self-class-method&quot;&gt;from_yaml（string_or_io：String | IO）：自我from_yaml&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="32bebb1b1dee126e39cffb245dd743f50ca43d95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parseexception#column_number:Int32-instance-method&quot;&gt; column_number : Int32 column_number&lt;/a&gt;, &lt;a href=&quot;parseexception#line_number:Int32-instance-method&quot;&gt; line_number : Int32 line_number&lt;/a&gt;, &lt;a href=&quot;parseexception#location-instance-method&quot;&gt; location location&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;parseexception#column_number:Int32-instance-method&quot;&gt;column_number：Int32 column_number&lt;/a&gt;，&lt;a href=&quot;parseexception#line_number:Int32-instance-method&quot;&gt;line_number：Int32 line_number&lt;/a&gt;，&lt;a href=&quot;parseexception#location-instance-method&quot;&gt;位置&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae144ef1a1b677440948d49ed009490fa3b0f57a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reference#==(other:self)-instance-method&quot;&gt; ==(other : self)&lt;br/&gt;==(other : JSON::Any)&lt;br/&gt;==(other : YAML::Any)&lt;br/&gt;==(other) ==&lt;/a&gt;, &lt;a href=&quot;reference#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;, &lt;a href=&quot;reference#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;reference#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;reference#object_id:UInt64-instance-method&quot;&gt; object_id : UInt64 object_id&lt;/a&gt;, &lt;a href=&quot;reference#pretty_print(pp):Nil-instance-method&quot;&gt; pretty_print(pp) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;reference#same?(other:Reference)-instance-method&quot;&gt; same?(other : Reference)&lt;br/&gt;same?(other : Nil) same?&lt;/a&gt;, &lt;a href=&quot;reference#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;reference#==(other:self)-instance-method&quot;&gt;==（other：self）&lt;br/&gt;==（other：JSON :: Any）&lt;br/&gt;==（other：YAML :: Any）&lt;br/&gt;==（other）==&lt;/a&gt;，&lt;a href=&quot;reference#dup-instance-method&quot;&gt;dup dup&lt;/a&gt;，&lt;a href=&quot;reference#hash(hasher)-instance-method&quot;&gt;hash（哈希）hash&lt;/a&gt;，&lt;a href=&quot;reference#inspect(io:IO):Nil-instance-method&quot;&gt;inspect（io：IO） ：无检查&lt;/a&gt;，&lt;a href=&quot;reference#object_id:UInt64-instance-method&quot;&gt;object_id：UInt64 object_id&lt;/a&gt;，&lt;a href=&quot;reference#pretty_print(pp):Nil-instance-method&quot;&gt;pretty_print（pp）：无pretty_print&lt;/a&gt;，是否&lt;a href=&quot;reference#same?(other:Reference)-instance-method&quot;&gt;相同？（其他：参考）是否&lt;br/&gt;相同（其他：无）？&lt;/a&gt;，&lt;a href=&quot;reference#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：无to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="30cc821a2d152d176713ec3c1f796b6dfe1fa0cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#accept:Socket-instance-method&quot;&gt; accept : Socket accept&lt;/a&gt;, &lt;a href=&quot;socket#accept?-instance-method&quot;&gt; accept? accept?&lt;/a&gt;, &lt;a href=&quot;socket#bind(addr,&amp;amp;block)-instance-method&quot;&gt; bind(addr, &amp;amp;block)&lt;br/&gt;bind(host : String, port : Int)&lt;br/&gt;bind(port : Int)&lt;br/&gt;bind(addr) bind&lt;/a&gt;, &lt;a href=&quot;socket#blocking-instance-method&quot;&gt; blocking blocking&lt;/a&gt;, &lt;a href=&quot;socket#blocking=(value)-instance-method&quot;&gt; blocking=(value) blocking=&lt;/a&gt;, &lt;a href=&quot;socket#broadcast=(val:Bool)-instance-method&quot;&gt; broadcast=(val : Bool) broadcast=&lt;/a&gt;, &lt;a href=&quot;socket#broadcast?-instance-method&quot;&gt; broadcast? broadcast?&lt;/a&gt;, &lt;a href=&quot;socket#close_on_exec=(arg:Bool)-instance-method&quot;&gt; close_on_exec=(arg : Bool) close_on_exec=&lt;/a&gt;, &lt;a href=&quot;socket#close_on_exec?-instance-method&quot;&gt; close_on_exec? close_on_exec?&lt;/a&gt;, &lt;a href=&quot;socket#close_read-instance-method&quot;&gt; close_read close_read&lt;/a&gt;, &lt;a href=&quot;socket#close_write-instance-method&quot;&gt; close_write close_write&lt;/a&gt;, &lt;a href=&quot;socket#closed?:Bool-instance-method&quot;&gt; closed? : Bool closed?&lt;/a&gt;, &lt;a href=&quot;socket#connect(addr,timeout=nil,&amp;amp;block)-instance-method&quot;&gt; connect(addr, timeout = nil, &amp;amp;block)&lt;br/&gt;connect(addr, timeout = nil) : Nil&lt;br/&gt;connect(host : String, port : Int, connect_timeout = nil) connect&lt;/a&gt;, &lt;a href=&quot;socket#family:Family-instance-method&quot;&gt; family : Family family&lt;/a&gt;, &lt;a href=&quot;socket#fcntl(cmd,arg=0)-instance-method&quot;&gt; fcntl(cmd, arg = 0) fcntl&lt;/a&gt;, &lt;a href=&quot;socket#fd:Int32-instance-method&quot;&gt; fd : Int32 fd&lt;/a&gt;, &lt;a href=&quot;socket#finalize-instance-method&quot;&gt; finalize finalize&lt;/a&gt;, &lt;a href=&quot;socket#getsockopt(optname,optval,level=LibC::SOL_SOCKET)-instance-method&quot;&gt; getsockopt(optname, optval, level = LibC::SOL_SOCKET) getsockopt&lt;/a&gt;, &lt;a href=&quot;socket#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;socket#keepalive=(val:Bool)-instance-method&quot;&gt; keepalive=(val : Bool) keepalive=&lt;/a&gt;, &lt;a href=&quot;socket#keepalive?-instance-method&quot;&gt; keepalive? keepalive?&lt;/a&gt;, &lt;a href=&quot;socket#linger-instance-method&quot;&gt; linger linger&lt;/a&gt;, &lt;a href=&quot;socket#linger=(val:Int?)-instance-method&quot;&gt; linger=(val : Int?) linger=&lt;/a&gt;, &lt;a href=&quot;socket#listen(backlog:Int=SOMAXCONN)-instance-method&quot;&gt; listen(backlog : Int = SOMAXCONN)&lt;br/&gt;listen(backlog : Int = SOMAXCONN, &amp;amp;block) listen&lt;/a&gt;, &lt;a href=&quot;socket#protocol:Protocol-instance-method&quot;&gt; protocol : Protocol protocol&lt;/a&gt;, &lt;a href=&quot;socket#receive(max_message_size=512):Tuple(String,Address)-instance-method&quot;&gt; receive(max_message_size = 512) : Tuple(String, Address)&lt;br/&gt;receive(message : Bytes) : Tuple(Int32, Address) receive&lt;/a&gt;, &lt;a href=&quot;socket#recv_buffer_size-instance-method&quot;&gt; recv_buffer_size recv_buffer_size&lt;/a&gt;, &lt;a href=&quot;socket#recv_buffer_size=(val:Int32)-instance-method&quot;&gt; recv_buffer_size=(val : Int32) recv_buffer_size=&lt;/a&gt;, &lt;a href=&quot;socket#reuse_address=(val:Bool)-instance-method&quot;&gt; reuse_address=(val : Bool) reuse_address=&lt;/a&gt;, &lt;a href=&quot;socket#reuse_address?-instance-method&quot;&gt; reuse_address? reuse_address?&lt;/a&gt;, &lt;a href=&quot;socket#reuse_port=(val:Bool)-instance-method&quot;&gt; reuse_port=(val : Bool) reuse_port=&lt;/a&gt;, &lt;a href=&quot;socket#reuse_port?-instance-method&quot;&gt; reuse_port? reuse_port?&lt;/a&gt;, &lt;a href=&quot;socket#send(message,toaddr:Address):Int32-instance-method&quot;&gt; send(message, to addr : Address) : Int32&lt;br/&gt;send(message) : Int32 send&lt;/a&gt;, &lt;a href=&quot;socket#send_buffer_size-instance-method&quot;&gt; send_buffer_size send_buffer_size&lt;/a&gt;, &lt;a href=&quot;socket#send_buffer_size=(val:Int32)-instance-method&quot;&gt; send_buffer_size=(val : Int32) send_buffer_size=&lt;/a&gt;, &lt;a href=&quot;socket#setsockopt(optname,optval,level=LibC::SOL_SOCKET)-instance-method&quot;&gt; setsockopt(optname, optval, level = LibC::SOL_SOCKET) setsockopt&lt;/a&gt;, &lt;a href=&quot;socket#tty?-instance-method&quot;&gt; tty? tty?&lt;/a&gt;, &lt;a href=&quot;socket#type:Type-instance-method&quot;&gt; type : Type type&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;socket#accept:Socket-instance-method&quot;&gt;accept：套接字接受&lt;/a&gt;，&lt;a href=&quot;socket#accept?-instance-method&quot;&gt;接受吗？接受？&lt;/a&gt;，&lt;a href=&quot;socket#bind(addr,&amp;amp;block)-instance-method&quot;&gt;bind（addr，＆block）&lt;br/&gt;bind（主机：字符串，端口：Int）&lt;br/&gt;bind（端口：Int）&lt;br/&gt;bind（addr）绑定&lt;/a&gt;，&lt;a href=&quot;socket#blocking-instance-method&quot;&gt;阻塞&lt;/a&gt;，&lt;a href=&quot;socket#blocking=(value)-instance-method&quot;&gt;阻塞=（值）阻塞=&lt;/a&gt;，&lt;a href=&quot;socket#broadcast=(val:Bool)-instance-method&quot;&gt;广播=（val：Bool）广播=&lt;/a&gt;，&lt;a href=&quot;socket#broadcast?-instance-method&quot;&gt;广播？广播？&lt;/a&gt;，&lt;a href=&quot;socket#close_on_exec=(arg:Bool)-instance-method&quot;&gt;close_on_exec =（arg：Bool）close_on_exec =&lt;/a&gt;，&lt;a href=&quot;socket#close_on_exec?-instance-method&quot;&gt;close_on_exec？ close_on_exec？&lt;/a&gt;，&lt;a href=&quot;socket#close_read-instance-method&quot;&gt;close_read close_read&lt;/a&gt;，&lt;a href=&quot;socket#close_write-instance-method&quot;&gt;close_write close_write&lt;/a&gt;，&lt;a href=&quot;socket#closed?:Bool-instance-method&quot;&gt;已关闭？ ：布尔关闭了吗？&lt;/a&gt;，&lt;a href=&quot;socket#connect(addr,timeout=nil,&amp;amp;block)-instance-method&quot;&gt;connect（addr，timeout = nil，＆block）&lt;br/&gt;connect（addr，timeout = nil）：零&lt;br/&gt;connect（host：字符串，port：Int，connect_timeout = nil）connect&lt;/a&gt;，&lt;a href=&quot;socket#family:Family-instance-method&quot;&gt;family：家庭family&lt;/a&gt;，&lt;a href=&quot;socket#fcntl(cmd,arg=0)-instance-method&quot;&gt;fcntl（cmd，arg = 0）fcntl&lt;/a&gt;，&lt;a href=&quot;socket#fd:Int32-instance-method&quot;&gt;fd：Int32 fd&lt;/a&gt;，&lt;a href=&quot;socket#finalize-instance-method&quot;&gt;finalize finalize&lt;/a&gt;，&lt;a href=&quot;socket#getsockopt(optname,optval,level=LibC::SOL_SOCKET)-instance-method&quot;&gt;getsockopt（optname，optval，level = LibC :: SOL_SOCKET）getsockopt&lt;/a&gt;，&lt;a href=&quot;socket#inspect(io:IO):Nil-instance-method&quot;&gt;inspect（io：IO）：无检查&lt;/a&gt;，&lt;a href=&quot;socket#keepalive=(val:Bool)-instance-method&quot;&gt;keepalive =（val：Bool）keepalive =&lt;/a&gt;，&lt;a href=&quot;socket#keepalive?-instance-method&quot;&gt;keepalive吗？活着？&lt;/a&gt;，&lt;a href=&quot;socket#linger-instance-method&quot;&gt;linger linger&lt;/a&gt;，&lt;a href=&quot;socket#linger=(val:Int?)-instance-method&quot;&gt;linger =（val：Int？）linger =&lt;/a&gt;，&lt;a href=&quot;socket#listen(backlog:Int=SOMAXCONN)-instance-method&quot;&gt;listen（backlog：Int = SOMAXCONN）&lt;br/&gt;listen（backlog：Int = SOMAXCONN，＆block）listen&lt;/a&gt;，&lt;a href=&quot;socket#protocol:Protocol-instance-method&quot;&gt;协议：协议协议&lt;/a&gt;，&lt;a href=&quot;socket#receive(max_message_size=512):Tuple(String,Address)-instance-method&quot;&gt;receive（max_message_size = 512）：Tuple（字符串，地址）&lt;br/&gt;receive（消息：字节）：Tuple（Int32，地址）receive&lt;/a&gt;，&lt;a href=&quot;socket#recv_buffer_size-instance-method&quot;&gt;recv_buffer_size recv_buffer_size&lt;/a&gt;，&lt;a href=&quot;socket#recv_buffer_size=(val:Int32)-instance-method&quot;&gt;recv_buffer_size =（val：Int32）recv_buffer_size =&lt;/a&gt;，&lt;a href=&quot;socket#reuse_address=(val:Bool)-instance-method&quot;&gt;复用地址=（val：Bool）复用地址=&lt;/a&gt;，&lt;a href=&quot;socket#reuse_address?-instance-method&quot;&gt;reuse_address？重用地址？&lt;/a&gt;，&lt;a href=&quot;socket#reuse_port=(val:Bool)-instance-method&quot;&gt;reuse_port =（val：Bool），reuse_port =&lt;/a&gt;，&lt;a href=&quot;socket#reuse_port?-instance-method&quot;&gt;reuse_port？重用端口？&lt;/a&gt;，&lt;a href=&quot;socket#send(message,toaddr:Address):Int32-instance-method&quot;&gt;send（消息，到地址）：Int32 &lt;br/&gt;send（消息）：Int32 send&lt;/a&gt;，&lt;a href=&quot;socket#send_buffer_size-instance-method&quot;&gt;send_buffer_size send_buffer_size&lt;/a&gt;，&lt;a href=&quot;socket#send_buffer_size=(val:Int32)-instance-method&quot;&gt;send_buffer_size =（val：Int32）send_buffer_size =&lt;/a&gt;，&lt;a href=&quot;socket#setsockopt(optname,optval,level=LibC::SOL_SOCKET)-instance-method&quot;&gt;setsockopt（optname，optval，level = LibC :: SOL_SOCKET）setsockopt&lt;/a&gt;，&lt;a href=&quot;socket#tty?-instance-method&quot;&gt;tty吗？tty？&lt;/a&gt;，&lt;a href=&quot;socket#type:Type-instance-method&quot;&gt;type：类型类型&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ba2940404192a195998aee906342aa281ca4fb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#accept:Socket-instance-method&quot;&gt; accept : Socket accept&lt;/a&gt;, &lt;a href=&quot;socket#accept?-instance-method&quot;&gt; accept? accept?&lt;/a&gt;, &lt;a href=&quot;socket#bind(host:String,port:Int)-instance-method&quot;&gt; bind(host : String, port : Int)&lt;br/&gt;bind(port : Int)&lt;br/&gt;bind(addr : Socket::Address) bind&lt;/a&gt;, &lt;a href=&quot;socket#blocking-instance-method&quot;&gt; blocking blocking&lt;/a&gt;, &lt;a href=&quot;socket#blocking=(value)-instance-method&quot;&gt; blocking=(value) blocking=&lt;/a&gt;, &lt;a href=&quot;socket#broadcast=(val:Bool)-instance-method&quot;&gt; broadcast=(val : Bool) broadcast=&lt;/a&gt;, &lt;a href=&quot;socket#broadcast?-instance-method&quot;&gt; broadcast? broadcast?&lt;/a&gt;, &lt;a href=&quot;socket#close_on_exec=(arg:Bool)-instance-method&quot;&gt; close_on_exec=(arg : Bool) close_on_exec=&lt;/a&gt;, &lt;a href=&quot;socket#close_on_exec?-instance-method&quot;&gt; close_on_exec? close_on_exec?&lt;/a&gt;, &lt;a href=&quot;socket#close_read-instance-method&quot;&gt; close_read close_read&lt;/a&gt;, &lt;a href=&quot;socket#close_write-instance-method&quot;&gt; close_write close_write&lt;/a&gt;, &lt;a href=&quot;socket#closed?:Bool-instance-method&quot;&gt; closed? : Bool closed?&lt;/a&gt;, &lt;a href=&quot;socket#connect(addr,timeout=nil,&amp;amp;)-instance-method&quot;&gt; connect(addr, timeout = nil, &amp;amp;)&lt;br/&gt;connect(addr, timeout = nil) : Nil&lt;br/&gt;connect(host : String, port : Int, connect_timeout = nil) connect&lt;/a&gt;, &lt;a href=&quot;socket#family:Family-instance-method&quot;&gt; family : Family family&lt;/a&gt;, &lt;a href=&quot;socket#fcntl(cmd,arg=0)-instance-method&quot;&gt; fcntl(cmd, arg = 0) fcntl&lt;/a&gt;, &lt;a href=&quot;socket#fd:Int32-instance-method&quot;&gt; fd : Int32 fd&lt;/a&gt;, &lt;a href=&quot;socket#finalize-instance-method&quot;&gt; finalize finalize&lt;/a&gt;, &lt;a href=&quot;socket#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;socket#keepalive=(val:Bool)-instance-method&quot;&gt; keepalive=(val : Bool) keepalive=&lt;/a&gt;, &lt;a href=&quot;socket#keepalive?-instance-method&quot;&gt; keepalive? keepalive?&lt;/a&gt;, &lt;a href=&quot;socket#linger-instance-method&quot;&gt; linger linger&lt;/a&gt;, &lt;a href=&quot;socket#linger=(val:Int?)-instance-method&quot;&gt; linger=(val : Int?) linger=&lt;/a&gt;, &lt;a href=&quot;socket#listen(backlog:Int=SOMAXCONN)-instance-method&quot;&gt; listen(backlog : Int = SOMAXCONN)&lt;br/&gt;listen(backlog : Int = SOMAXCONN, &amp;amp;) listen&lt;/a&gt;, &lt;a href=&quot;socket#protocol:Protocol-instance-method&quot;&gt; protocol : Protocol protocol&lt;/a&gt;, &lt;a href=&quot;socket#receive(max_message_size=512):Tuple(String,Address)-instance-method&quot;&gt; receive(max_message_size = 512) : Tuple(String, Address)&lt;br/&gt;receive(message : Bytes) : Tuple(Int32, Address) receive&lt;/a&gt;, &lt;a href=&quot;socket#recv_buffer_size-instance-method&quot;&gt; recv_buffer_size recv_buffer_size&lt;/a&gt;, &lt;a href=&quot;socket#recv_buffer_size=(val:Int32)-instance-method&quot;&gt; recv_buffer_size=(val : Int32) recv_buffer_size=&lt;/a&gt;, &lt;a href=&quot;socket#reuse_address=(val:Bool)-instance-method&quot;&gt; reuse_address=(val : Bool) reuse_address=&lt;/a&gt;, &lt;a href=&quot;socket#reuse_address?-instance-method&quot;&gt; reuse_address? reuse_address?&lt;/a&gt;, &lt;a href=&quot;socket#reuse_port=(val:Bool)-instance-method&quot;&gt; reuse_port=(val : Bool) reuse_port=&lt;/a&gt;, &lt;a href=&quot;socket#reuse_port?-instance-method&quot;&gt; reuse_port? reuse_port?&lt;/a&gt;, &lt;a href=&quot;socket#send(message,toaddr:Address):Int32-instance-method&quot;&gt; send(message, to addr : Address) : Int32&lt;br/&gt;send(message) : Int32 send&lt;/a&gt;, &lt;a href=&quot;socket#send_buffer_size-instance-method&quot;&gt; send_buffer_size send_buffer_size&lt;/a&gt;, &lt;a href=&quot;socket#send_buffer_size=(val:Int32)-instance-method&quot;&gt; send_buffer_size=(val : Int32) send_buffer_size=&lt;/a&gt;, &lt;a href=&quot;socket#setsockopt(optname,optval,level=LibC::SOL_SOCKET)-instance-method&quot;&gt; setsockopt(optname, optval, level = LibC::SOL_SOCKET) setsockopt&lt;/a&gt;, &lt;a href=&quot;socket#tty?-instance-method&quot;&gt; tty? tty?&lt;/a&gt;, &lt;a href=&quot;socket#type:Type-instance-method&quot;&gt; type : Type type&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;socket#accept:Socket-instance-method&quot;&gt;accept：套接字接受&lt;/a&gt;，&lt;a href=&quot;socket#accept?-instance-method&quot;&gt;接受吗？接受？&lt;/a&gt;，&lt;a href=&quot;socket#bind(host:String,port:Int)-instance-method&quot;&gt;bind（主机：字符串，端口：整数）&lt;br/&gt;bind（端口：整数）&lt;br/&gt;bind（地址：套接字::地址）绑定&lt;/a&gt;，&lt;a href=&quot;socket#blocking-instance-method&quot;&gt;阻塞阻塞&lt;/a&gt;，&lt;a href=&quot;socket#blocking=(value)-instance-method&quot;&gt;阻塞=（值）阻塞=&lt;/a&gt;，&lt;a href=&quot;socket#broadcast=(val:Bool)-instance-method&quot;&gt;广播=（val：Bool）广播=&lt;/a&gt;，&lt;a href=&quot;socket#broadcast?-instance-method&quot;&gt;广播？广播？&lt;/a&gt;，&lt;a href=&quot;socket#close_on_exec=(arg:Bool)-instance-method&quot;&gt;close_on_exec =（arg：Bool）close_on_exec =&lt;/a&gt;，&lt;a href=&quot;socket#close_on_exec?-instance-method&quot;&gt;close_on_exec？ close_on_exec？&lt;/a&gt;，&lt;a href=&quot;socket#close_read-instance-method&quot;&gt;close_read close_read&lt;/a&gt;，&lt;a href=&quot;socket#close_write-instance-method&quot;&gt;close_write close_write&lt;/a&gt;，&lt;a href=&quot;socket#closed?:Bool-instance-method&quot;&gt;已关闭？ ：布尔关闭了吗？&lt;/a&gt;，&lt;a href=&quot;socket#connect(addr,timeout=nil,&amp;amp;)-instance-method&quot;&gt;connect（addr，timeout = nil，＆）&lt;br/&gt;connect（addr，timeout = nil）：零&lt;br/&gt;connect（host：字符串，port：Int，connect_timeout = nil）connect&lt;/a&gt;，&lt;a href=&quot;socket#family:Family-instance-method&quot;&gt;family：家庭family&lt;/a&gt;，&lt;a href=&quot;socket#fcntl(cmd,arg=0)-instance-method&quot;&gt;fcntl（cmd，arg = 0）fcntl&lt;/a&gt;，&lt;a href=&quot;socket#fd:Int32-instance-method&quot;&gt;fd：Int32 fd&lt;/a&gt;，&lt;a href=&quot;socket#finalize-instance-method&quot;&gt;finalize finalize&lt;/a&gt;，&lt;a href=&quot;socket#inspect(io:IO):Nil-instance-method&quot;&gt;inspect（io：IO）：Nil inspect&lt;/a&gt;，&lt;a href=&quot;socket#keepalive=(val:Bool)-instance-method&quot;&gt;keepalive =（val：Bool）keepalive =&lt;/a&gt;，&lt;a href=&quot;socket#keepalive?-instance-method&quot;&gt;keepalive吗？活着？&lt;/a&gt;，&lt;a href=&quot;socket#linger-instance-method&quot;&gt;linger linger&lt;/a&gt;，&lt;a href=&quot;socket#linger=(val:Int?)-instance-method&quot;&gt;linger =（val：Int？）linger =&lt;/a&gt;，&lt;a href=&quot;socket#listen(backlog:Int=SOMAXCONN)-instance-method&quot;&gt;listen（backlog：Int = SOMAXCONN）&lt;br/&gt;listen（backlog：Int = SOMAXCONN，＆）listen&lt;/a&gt;，&lt;a href=&quot;socket#protocol:Protocol-instance-method&quot;&gt;协议：协议协议&lt;/a&gt;，&lt;a href=&quot;socket#receive(max_message_size=512):Tuple(String,Address)-instance-method&quot;&gt;receive（max_message_size = 512）：Tuple（String ， 地址）&lt;br/&gt;receive（message：Bytes）：Tuple（Int32，Address）receive&lt;/a&gt;，&lt;a href=&quot;socket#recv_buffer_size-instance-method&quot;&gt;recv_buffer_size recv_buffer_size&lt;/a&gt;，&lt;a href=&quot;socket#recv_buffer_size=(val:Int32)-instance-method&quot;&gt;recv_buffer_size =（val：Int32）recv_buffer_size =&lt;/a&gt;，&lt;a href=&quot;socket#reuse_address=(val:Bool)-instance-method&quot;&gt;复用地址=（val：Bool）复用地址=&lt;/a&gt;，&lt;a href=&quot;socket#reuse_address?-instance-method&quot;&gt;复用地址？重用地址？&lt;/a&gt;，&lt;a href=&quot;socket#reuse_port=(val:Bool)-instance-method&quot;&gt;reuse_port =（val：Bool），reuse_port =&lt;/a&gt;，&lt;a href=&quot;socket#reuse_port?-instance-method&quot;&gt;reuse_port？重用端口？&lt;/a&gt;，&lt;a href=&quot;socket#send(message,toaddr:Address):Int32-instance-method&quot;&gt;send（消息，到地址）：Int32 &lt;br/&gt;send（消息）：Int32发送&lt;/a&gt;，&lt;a href=&quot;socket#send_buffer_size-instance-method&quot;&gt;send_buffer_size send_buffer_size&lt;/a&gt;，&lt;a href=&quot;socket#send_buffer_size=(val:Int32)-instance-method&quot;&gt;send_buffer_size =（val：Int32）send_buffer_size =&lt;/a&gt;，&lt;a href=&quot;socket#setsockopt(optname,optval,level=LibC::SOL_SOCKET)-instance-method&quot;&gt;setsockopt（optname，optval，level = LibC :: SOL_SOCKET）setsockopt&lt;/a&gt;，&lt;a href=&quot;socket#tty?-instance-method&quot;&gt;tty？tty？&lt;/a&gt;，&lt;a href=&quot;socket#type:Type-instance-method&quot;&gt; 类型：类型类型&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e041d92710218695715688244a02c7d9caa3f475" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#fcntl(fd,cmd,arg=0)-class-method&quot;&gt; fcntl(fd, cmd, arg = 0) fcntl&lt;/a&gt;, &lt;a href=&quot;socket#ip?(string:String)-class-method&quot;&gt; ip?(string : String) ip?&lt;/a&gt;, &lt;a href=&quot;socket#tcp(family:Family,blocking=false)-class-method&quot;&gt; tcp(family : Family, blocking = false) tcp&lt;/a&gt;, &lt;a href=&quot;socket#udp(family:Family,blocking=false)-class-method&quot;&gt; udp(family : Family, blocking = false) udp&lt;/a&gt;, &lt;a href=&quot;socket#unix(type:Type=Type::STREAM,blocking=false)-class-method&quot;&gt; unix(type : Type = Type::STREAM, blocking = false) unix&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;socket#fcntl(fd,cmd,arg=0)-class-method&quot;&gt;fcntl（fd，cmd，arg = 0）fcntl&lt;/a&gt;，&lt;a href=&quot;socket#ip?(string:String)-class-method&quot;&gt;ip？（字符串：字符串）ip？&lt;/a&gt;，&lt;a href=&quot;socket#tcp(family:Family,blocking=false)-class-method&quot;&gt;tcp（家庭：家庭，阻止=假）tcp&lt;/a&gt;，&lt;a href=&quot;socket#udp(family:Family,blocking=false)-class-method&quot;&gt;udp（家庭：家庭，阻止=假）udp&lt;/a&gt;，&lt;a href=&quot;socket#unix(type:Type=Type::STREAM,blocking=false)-class-method&quot;&gt;Unix（类型：类型=类型::流，阻止=假）Unix&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bac4d87c0eb66ae7a62933f5b6c3e4e408e85c12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket/server#accept:IO-instance-method&quot;&gt; accept : IO&lt;br/&gt;accept(&amp;amp;) accept&lt;/a&gt;, &lt;a href=&quot;socket/server#accept?:IO?-instance-method&quot;&gt; accept? : IO?&lt;br/&gt;accept?(&amp;amp;) accept?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;socket/server#accept:IO-instance-method&quot;&gt;接受：IO&lt;br/&gt;接受（＆）接受&lt;/a&gt;，&lt;a href=&quot;socket/server#accept?:IO?-instance-method&quot;&gt;接受吗？：IO？&lt;br/&gt;接受吗？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="854097c31eea40ed495be72c0dac5055571c76da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket/server#accept:IO-instance-method&quot;&gt; accept : IO&lt;br/&gt;accept(&amp;amp;block) accept&lt;/a&gt;, &lt;a href=&quot;socket/server#accept?:IO?-instance-method&quot;&gt; accept? : IO?&lt;br/&gt;accept?(&amp;amp;block) accept?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;socket/server#accept:IO-instance-method&quot;&gt;accept：IO &lt;br/&gt;accept（＆block）accept&lt;/a&gt;，&lt;a href=&quot;socket/server#accept?:IO?-instance-method&quot;&gt;接受吗？：IO？&lt;br/&gt;接受吗？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab0ef764022745473e4cfe450d91ea544fb0fdc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;spec/expectations#be(value)-instance-method&quot;&gt; be(value)&lt;br/&gt;be be&lt;/a&gt;, &lt;a href=&quot;spec/expectations#be_close(expected,delta)-instance-method&quot;&gt; be_close(expected, delta) be_close&lt;/a&gt;, &lt;a href=&quot;spec/expectations#be_empty-instance-method&quot;&gt; be_empty be_empty&lt;/a&gt;, &lt;a href=&quot;spec/expectations#be_false-instance-method&quot;&gt; be_false be_false&lt;/a&gt;, &lt;a href=&quot;spec/expectations#be_falsey-instance-method&quot;&gt; be_falsey be_falsey&lt;/a&gt;, &lt;a href=&quot;spec/expectations#be_nil-instance-method&quot;&gt; be_nil be_nil&lt;/a&gt;, &lt;a href=&quot;spec/expectations#be_true-instance-method&quot;&gt; be_true be_true&lt;/a&gt;, &lt;a href=&quot;spec/expectations#be_truthy-instance-method&quot;&gt; be_truthy be_truthy&lt;/a&gt;, &lt;a href=&quot;spec/expectations#contain(expected)-instance-method&quot;&gt; contain(expected) contain&lt;/a&gt;, &lt;a href=&quot;spec/expectations#end_with(expected)-instance-method&quot;&gt; end_with(expected) end_with&lt;/a&gt;, &lt;a href=&quot;spec/expectations#eq(value)-instance-method&quot;&gt; eq(value) eq&lt;/a&gt;, &lt;a href=&quot;spec/expectations#expect_raises(klass:T.class,message:String%7CRegex%7CNil=nil,file=__FILE__,line=__LINE__,&amp;amp;)forallT-instance-method&quot;&gt; expect_raises(klass : T.class, message : String | Regex | Nil = nil, file = __FILE__, line = __LINE__, &amp;amp;) forall T expect_raises&lt;/a&gt;, &lt;a href=&quot;spec/expectations#match(value)-instance-method&quot;&gt; match(value) match&lt;/a&gt;, &lt;a href=&quot;spec/expectations#start_with(expected)-instance-method&quot;&gt; start_with(expected) start_with&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;spec/expectations#be(value)-instance-method&quot;&gt;是（值）&lt;br/&gt;是是&lt;/a&gt;，&lt;a href=&quot;spec/expectations#be_close(expected,delta)-instance-method&quot;&gt;be_close（预期，三角洲）be_close&lt;/a&gt;，&lt;a href=&quot;spec/expectations#be_empty-instance-method&quot;&gt;be_empty be_empty&lt;/a&gt;，&lt;a href=&quot;spec/expectations#be_false-instance-method&quot;&gt;be_false be_false&lt;/a&gt;，&lt;a href=&quot;spec/expectations#be_falsey-instance-method&quot;&gt;be_falsey be_falsey&lt;/a&gt;，&lt;a href=&quot;spec/expectations#be_nil-instance-method&quot;&gt;be_nil be_nil&lt;/a&gt;，&lt;a href=&quot;spec/expectations#be_true-instance-method&quot;&gt;be_true be_true&lt;/a&gt;，&lt;a href=&quot;spec/expectations#be_truthy-instance-method&quot;&gt;be_truthy be_truthy&lt;/a&gt;，&lt;a href=&quot;spec/expectations#contain(expected)-instance-method&quot;&gt;包含（预期）包含&lt;/a&gt;，&lt;a href=&quot;spec/expectations#end_with(expected)-instance-method&quot;&gt;end_with（预期）end_with&lt;/a&gt;，&lt;a href=&quot;spec/expectations#eq(value)-instance-method&quot;&gt;当量（值）当量&lt;/a&gt;，，&lt;a href=&quot;spec/expectations#expect_raises(klass:T.class,message:String%7CRegex%7CNil=nil,file=__FILE__,line=__LINE__,&amp;amp;)forallT-instance-method&quot;&gt;Expect_raises（klass：T.class，消息：字符串|正则表达式| Nil = nil，文件= __FILE__，line = __LINE__&lt;/a&gt;，＆）forall T Expect_raises，&lt;a href=&quot;spec/expectations#match(value)-instance-method&quot;&gt;match（value）match&lt;/a&gt;，&lt;a href=&quot;spec/expectations#start_with(expected)-instance-method&quot;&gt;start_with（expected）start_with&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b57c9525f38760884f9ee9a384f629dbe9034e30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;spec/expectations#be(value)-instance-method&quot;&gt; be(value)&lt;br/&gt;be be&lt;/a&gt;, &lt;a href=&quot;spec/expectations#be_close(expected,delta)-instance-method&quot;&gt; be_close(expected, delta) be_close&lt;/a&gt;, &lt;a href=&quot;spec/expectations#be_empty-instance-method&quot;&gt; be_empty be_empty&lt;/a&gt;, &lt;a href=&quot;spec/expectations#be_false-instance-method&quot;&gt; be_false be_false&lt;/a&gt;, &lt;a href=&quot;spec/expectations#be_falsey-instance-method&quot;&gt; be_falsey be_falsey&lt;/a&gt;, &lt;a href=&quot;spec/expectations#be_nil-instance-method&quot;&gt; be_nil be_nil&lt;/a&gt;, &lt;a href=&quot;spec/expectations#be_true-instance-method&quot;&gt; be_true be_true&lt;/a&gt;, &lt;a href=&quot;spec/expectations#be_truthy-instance-method&quot;&gt; be_truthy be_truthy&lt;/a&gt;, &lt;a href=&quot;spec/expectations#contain(expected)-instance-method&quot;&gt; contain(expected) contain&lt;/a&gt;, &lt;a href=&quot;spec/expectations#end_with(expected)-instance-method&quot;&gt; end_with(expected) end_with&lt;/a&gt;, &lt;a href=&quot;spec/expectations#eq(value)-instance-method&quot;&gt; eq(value) eq&lt;/a&gt;, &lt;a href=&quot;spec/expectations#expect_raises(klass:T.class,message=nil,file=__FILE__,line=__LINE__,&amp;amp;block)forallT-instance-method&quot;&gt; expect_raises(klass : T.class, message = nil, file = __FILE__, line = __LINE__, &amp;amp;block) forall T expect_raises&lt;/a&gt;, &lt;a href=&quot;spec/expectations#match(value)-instance-method&quot;&gt; match(value) match&lt;/a&gt;, &lt;a href=&quot;spec/expectations#start_with(expected)-instance-method&quot;&gt; start_with(expected) start_with&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;spec/expectations#be(value)-instance-method&quot;&gt;be（值）&lt;br/&gt;be&lt;/a&gt;，&lt;a href=&quot;spec/expectations#be_close(expected,delta)-instance-method&quot;&gt;be_close（期望，增量）be_close&lt;/a&gt;，&lt;a href=&quot;spec/expectations#be_empty-instance-method&quot;&gt;be_empty be_empty&lt;/a&gt;，&lt;a href=&quot;spec/expectations#be_false-instance-method&quot;&gt;be_false be_false&lt;/a&gt;，&lt;a href=&quot;spec/expectations#be_falsey-instance-method&quot;&gt;be_falsey be_falsey&lt;/a&gt;，&lt;a href=&quot;spec/expectations#be_nil-instance-method&quot;&gt;be_nil be_nil&lt;/a&gt;，&lt;a href=&quot;spec/expectations#be_true-instance-method&quot;&gt;be_true be_true&lt;/a&gt;，&lt;a href=&quot;spec/expectations#be_truthy-instance-method&quot;&gt;be_truthy be_truthy&lt;/a&gt;，&lt;a href=&quot;spec/expectations#contain(expected)-instance-method&quot;&gt;包含（期望）包含&lt;/a&gt;，&lt;a href=&quot;spec/expectations#end_with(expected)-instance-method&quot;&gt;end_with（期望）end_with&lt;/a&gt;，&lt;a href=&quot;spec/expectations#eq(value)-instance-method&quot;&gt;eq（值）eq&lt;/a&gt;，对&lt;a href=&quot;spec/expectations#expect_raises(klass:T.class,message=nil,file=__FILE__,line=__LINE__,&amp;amp;block)forallT-instance-method&quot;&gt;所有人来说T&lt;/a&gt;，期望值（klass：T.class，message = nil，file = __FILE__，line = __LINE__，＆block），&lt;a href=&quot;spec/expectations#match(value)-instance-method&quot;&gt;匹配（值）match&lt;/a&gt;，&lt;a href=&quot;spec/expectations#start_with(expected)-instance-method&quot;&gt;start_with（期望）start_with&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d632d9558dda7560932251f1ae3755f52562abff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;spec/methods#after_all(&amp;amp;block)-instance-method&quot;&gt; after_all(&amp;amp;block) after_all&lt;/a&gt;, &lt;a href=&quot;spec/methods#after_each(&amp;amp;block)-instance-method&quot;&gt; after_each(&amp;amp;block) after_each&lt;/a&gt;, &lt;a href=&quot;spec/methods#around_all(&amp;amp;block:ExampleGroup::Procsy-%3E)-instance-method&quot;&gt; around_all(&amp;amp;block : ExampleGroup::Procsy -&amp;gt; ) around_all&lt;/a&gt;, &lt;a href=&quot;spec/methods#around_each(&amp;amp;block:Example::Procsy-%3E)-instance-method&quot;&gt; around_each(&amp;amp;block : Example::Procsy -&amp;gt; ) around_each&lt;/a&gt;, &lt;a href=&quot;spec/methods#before_all(&amp;amp;block)-instance-method&quot;&gt; before_all(&amp;amp;block) before_all&lt;/a&gt;, &lt;a href=&quot;spec/methods#before_each(&amp;amp;block)-instance-method&quot;&gt; before_each(&amp;amp;block) before_each&lt;/a&gt;, &lt;a href=&quot;spec/methods#context(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt; context(description, file = __FILE__, line = __LINE__, end_line = __END_LINE__, focus : Bool = false, tags : String | Enumerable(String) | Nil = nil, &amp;amp;block) context&lt;/a&gt;, &lt;a href=&quot;spec/methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt; describe(description, file = __FILE__, line = __LINE__, end_line = __END_LINE__, focus : Bool = false, tags : String | Enumerable(String) | Nil = nil, &amp;amp;block) describe&lt;/a&gt;, &lt;a href=&quot;spec/methods#fail(msg,file=__FILE__,line=__LINE__)-instance-method&quot;&gt; fail(msg, file = __FILE__, line = __LINE__) fail&lt;/a&gt;,  it(description = &quot;assert&quot;, file = __FILE__, line = __LINE__, end_line = __END_LINE__, focus : Bool = false, tags : String | Enumerable(String) | Nil = nil, &amp;amp;block) it,  pending(description = &quot;assert&quot;, file = __FILE__, line = __LINE__, end_line = __END_LINE__, focus : Bool = false, tags : String | Enumerable(String) | Nil = nil, &amp;amp;)</source>
          <target state="translated">&lt;a href=&quot;spec/methods#after_all(&amp;amp;block)-instance-method&quot;&gt;after_all（＆block）after_all&lt;/a&gt;，&lt;a href=&quot;spec/methods#after_each(&amp;amp;block)-instance-method&quot;&gt;after_each（＆block）after_each&lt;/a&gt;，&lt;a href=&quot;spec/methods#around_all(&amp;amp;block:ExampleGroup::Procsy-%3E)-instance-method&quot;&gt;around_all（＆block：ExampleGroup :: Procsy-&amp;gt;）around_all&lt;/a&gt;，&lt;a href=&quot;spec/methods#around_each(&amp;amp;block:Example::Procsy-%3E)-instance-method&quot;&gt;around_each（＆block：Example :: Procsy-&amp;gt;）around_each&lt;/a&gt;，&lt;a href=&quot;spec/methods#before_all(&amp;amp;block)-instance-method&quot;&gt;before_all（＆block）before_all&lt;/a&gt;，&lt;a href=&quot;spec/methods#before_each(&amp;amp;block)-instance-method&quot;&gt;before_each（＆block）before_each&lt;/a&gt;，&lt;a href=&quot;spec/methods#context(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;上下文（描述，文件= __FILE__，行= __LINE__，end_line = __END_LINE__，焦点：布尔=假，标签：字符串| Enumerable（String）| Nil =零，＆block）上下文&lt;/a&gt;，&lt;a href=&quot;spec/methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;describe（描述，文件= __FILE__，线= __LINE__ ，end_line = __END_LINE__，焦点：Bool = false，标签：字符串| Enumerable（String）| Nil = nil，＆block）describe&lt;/a&gt;，&lt;a href=&quot;spec/methods#fail(msg,file=__FILE__,line=__LINE__)-instance-method&quot;&gt;fail（msg，file = __FILE__，行= __LINE__）失败&lt;/a&gt;，它（描述=&amp;ldquo;声明&amp;rdquo;，文件= __FILE__，行= __LINE __，end_line = __END_LINE__，焦点：布尔=否，标签：字符串| Enumerable（String）| Nil = nil，并阻止），未决（描述=&amp;ldquo;声明&amp;rdquo; &amp;ldquo;，文件= __FILE__，行= __LINE __，end_line = __END_LINE__，焦点：布尔=否，标签：字符串|可枚举（字符串）|无效=无效，＆）</target>
        </trans-unit>
        <trans-unit id="0f4abdf1f134559a503333f105af6177c7865080" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;spec/methods#assert(file=__FILE__,line=__LINE__,end_line=__END_LINE__,&amp;amp;block)-instance-method&quot;&gt; assert(file = __FILE__, line = __LINE__, end_line = __END_LINE__, &amp;amp;block) assert&lt;/a&gt;, &lt;a href=&quot;spec/methods#context(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt; context(description, file = __FILE__, line = __LINE__, end_line = __END_LINE__, focus : Bool = false, &amp;amp;block) context&lt;/a&gt;, &lt;a href=&quot;spec/methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt; describe(description, file = __FILE__, line = __LINE__, end_line = __END_LINE__, focus : Bool = false, &amp;amp;block) describe&lt;/a&gt;, &lt;a href=&quot;spec/methods#fail(msg,file=__FILE__,line=__LINE__)-instance-method&quot;&gt; fail(msg, file = __FILE__, line = __LINE__) fail&lt;/a&gt;,  it(description = &quot;assert&quot;, file = __FILE__, line = __LINE__, end_line = __END_LINE__, focus : Bool = false, &amp;amp;block) it,  pending(description = &quot;assert&quot;, file = __FILE__, line = __LINE__, end_line = __END_LINE__, focus : Bool = false, &amp;amp;block)</source>
          <target state="translated">&lt;a href=&quot;spec/methods#assert(file=__FILE__,line=__LINE__,end_line=__END_LINE__,&amp;amp;block)-instance-method&quot;&gt;assert（文件= __FILE__，line = __LINE__，end_line = __END_LINE__，＆block）assert&lt;/a&gt;，&lt;a href=&quot;spec/methods#context(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;context（描述，file = __FILE__，line = __LINE__，end_line = __END_LINE__，焦点：Bool = false，＆block）context&lt;/a&gt;，&lt;a href=&quot;spec/methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;describe（描述，file = __FILE__，行= __LINE __，end_line = __END_LINE__，焦点：布尔=否，＆block）描述&lt;/a&gt;，&lt;a href=&quot;spec/methods#fail(msg,file=__FILE__,line=__LINE__)-instance-method&quot;&gt;失败（消息，文件= __FILE__，行= __LINE__）失败&lt;/a&gt;，它（描述=&amp;ldquo;断言&amp;rdquo;，文件= __FILE__，行= __LINE__， end_line = __END_LINE__，焦点：Bool =否，并阻止），待处理（描述=&amp;ldquo;声明&amp;rdquo;，文件= __FILE __，line = __LINE __，end_line = __END_LINE__，焦点：Bool =否，并阻止）</target>
        </trans-unit>
        <trans-unit id="e0087f1d1cda38de34923c965b75a813b75d1a2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;spec/objectextensions#should(expectation,file=__FILE__,line=__LINE__)-instance-method&quot;&gt; should(expectation, file = __FILE__, line = __LINE__) should&lt;/a&gt;, &lt;a href=&quot;spec/objectextensions#should_not(expectation,file=__FILE__,line=__LINE__)-instance-method&quot;&gt; should_not(expectation, file = __FILE__, line = __LINE__) should_not&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;spec/objectextensions#should(expectation,file=__FILE__,line=__LINE__)-instance-method&quot;&gt;应该（期望，文件= __FILE__，行= __LINE__）应该&lt;/a&gt;，应该&lt;a href=&quot;spec/objectextensions#should_not(expectation,file=__FILE__,line=__LINE__)-instance-method&quot;&gt;_不（期望，文件= __FILE__，行= __LINE__）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed5b09f28a73eee6b814f65996d4802f97324f5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;spec/objectextensions#should(expectation:BeAExpectation(T),file=__FILE__,line=__LINE__):TforallT-instance-method&quot;&gt; should(expectation : BeAExpectation(T), file = __FILE__, line = __LINE__) : T forall T&lt;br/&gt;should(expectation, file = __FILE__, line = __LINE__) should&lt;/a&gt;, &lt;a href=&quot;spec/objectextensions#should_not(expectation:BeAExpectation(T),file=__FILE__,line=__LINE__)forallT-instance-method&quot;&gt; should_not(expectation : BeAExpectation(T), file = __FILE__, line = __LINE__) forall T&lt;br/&gt;should_not(expectation : BeNilExpectation, file = __FILE__, line = __LINE__)&lt;br/&gt;should_not(expectation, file = __FILE__, line = __LINE__) should_not&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;spec/objectextensions#should(expectation:BeAExpectation(T),file=__FILE__,line=__LINE__):TforallT-instance-method&quot;&gt;应（期望：BeAExpectation（T），文件= __FILE__，线= __LINE__）：T FORALLŤ&lt;br/&gt;应（期望值，文件= __FILE__，线= __LINE__）应&lt;/a&gt;，&lt;a href=&quot;spec/objectextensions#should_not(expectation:BeAExpectation(T),file=__FILE__,line=__LINE__)forallT-instance-method&quot;&gt;should_not（期望值：BeAExpectation（T），文件= __FILE__，线= &lt;br/&gt;__LINE__ ）forall T should_not（期望：BeNilExpectation，file = &lt;br/&gt;__FILE__，line = __LINE__）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb280580beadf1113160d0d316fb823b5e61dd7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;staticformatter#context(*,before=nil,after=nil)-instance-method&quot;&gt; context(*, before = nil, after = nil) context&lt;/a&gt;, &lt;a href=&quot;staticformatter#data(*,before=nil,after=nil)-instance-method&quot;&gt; data(*, before = nil, after = nil) data&lt;/a&gt;, &lt;a href=&quot;staticformatter#exception(*,before='%5Cn',after=nil)-instance-method&quot;&gt; exception(*, before = '\n', after = nil) exception&lt;/a&gt;, &lt;a href=&quot;staticformatter#message-instance-method&quot;&gt; message message&lt;/a&gt;,  pid(*, before = '#', after = nil) pid, &lt;a href=&quot;staticformatter#progname-instance-method&quot;&gt; progname progname&lt;/a&gt;, &lt;a href=&quot;staticformatter#run-instance-method&quot;&gt; run run&lt;/a&gt;, &lt;a href=&quot;staticformatter#severity-instance-method&quot;&gt; severity severity&lt;/a&gt;, &lt;a href=&quot;staticformatter#source(*,before=nil,after=nil)-instance-method&quot;&gt; source(*, before = nil, after = nil) source&lt;/a&gt;, &lt;a href=&quot;staticformatter#string(str)-instance-method&quot;&gt; string(str) string&lt;/a&gt;, &lt;a href=&quot;staticformatter#timestamp-instance-method&quot;&gt; timestamp timestamp&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;staticformatter#context(*,before=nil,after=nil)-instance-method&quot;&gt;context（*，before = nil，after = nil）context&lt;/a&gt;，&lt;a href=&quot;staticformatter#data(*,before=nil,after=nil)-instance-method&quot;&gt;data（*，before = nil，after = nil）data&lt;/a&gt;，&lt;a href=&quot;staticformatter#exception(*,before='%5Cn',after=nil)-instance-method&quot;&gt;exception（*，before ='\ n'，after = nil）异常&lt;/a&gt;，&lt;a href=&quot;staticformatter#message-instance-method&quot;&gt;消息message&lt;/a&gt;，pid（ *，之前='＃'，之后= nil）pid，&lt;a href=&quot;staticformatter#progname-instance-method&quot;&gt;progname progname&lt;/a&gt;，&lt;a href=&quot;staticformatter#run-instance-method&quot;&gt;运行run&lt;/a&gt;，&lt;a href=&quot;staticformatter#severity-instance-method&quot;&gt;严重性严重性&lt;/a&gt;，&lt;a href=&quot;staticformatter#source(*,before=nil,after=nil)-instance-method&quot;&gt;source（*，before = nil，after = nil）source&lt;/a&gt;，&lt;a href=&quot;staticformatter#string(str)-instance-method&quot;&gt;string（str）string&lt;/a&gt;，&lt;a href=&quot;staticformatter#timestamp-instance-method&quot;&gt;时间戳记&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea38a455b6eafeb5c6f5e0c1f4bb6cd979ec83b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string#percent-string-array-literal&quot;&gt;Arrays of strings&lt;/a&gt; and &lt;a href=&quot;symbol#percent-symbol-array-literal&quot;&gt;arrays of symbols&lt;/a&gt; can be created with percent array literals:</source>
          <target state="translated">&lt;a href=&quot;string#percent-string-array-literal&quot;&gt;字符串数组&lt;/a&gt;和&lt;a href=&quot;symbol#percent-symbol-array-literal&quot;&gt;符号的阵列&lt;/a&gt;可以用百分比数组文本创建：</target>
        </trans-unit>
        <trans-unit id="278c218d13424b5ee437df576fab40f81c52d9bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct#==(other):Bool-instance-method&quot;&gt; ==(other) : Bool ==&lt;/a&gt;, &lt;a href=&quot;struct#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;struct#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;struct#pretty_print(pp):Nil-instance-method&quot;&gt; pretty_print(pp) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;struct#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;struct#==(other):Bool-instance-method&quot;&gt;==（other）：Bool ==&lt;/a&gt;，&lt;a href=&quot;struct#hash(hasher)-instance-method&quot;&gt;hash（hasher）hash&lt;/a&gt;，&lt;a href=&quot;struct#inspect(io:IO):Nil-instance-method&quot;&gt;inspect（io：IO）：无检查&lt;/a&gt;，&lt;a href=&quot;struct#pretty_print(pp):Nil-instance-method&quot;&gt;pretty_print（pp）：Nil pretty_print&lt;/a&gt;，&lt;a href=&quot;struct#to_s(io:IO):Nil-instance-method&quot;&gt;to_s（io：IO）：无to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="057d5c7bb1620dc3eae3871e388d21bc750c89a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tcpsocket#tcp_keepalive_count-instance-method&quot;&gt; tcp_keepalive_count tcp_keepalive_count&lt;/a&gt;, &lt;a href=&quot;tcpsocket#tcp_keepalive_count=(val:Int)-instance-method&quot;&gt; tcp_keepalive_count=(val : Int) tcp_keepalive_count=&lt;/a&gt;, &lt;a href=&quot;tcpsocket#tcp_keepalive_idle-instance-method&quot;&gt; tcp_keepalive_idle tcp_keepalive_idle&lt;/a&gt;, &lt;a href=&quot;tcpsocket#tcp_keepalive_idle=(val:Int)-instance-method&quot;&gt; tcp_keepalive_idle=(val : Int) tcp_keepalive_idle=&lt;/a&gt;, &lt;a href=&quot;tcpsocket#tcp_keepalive_interval-instance-method&quot;&gt; tcp_keepalive_interval tcp_keepalive_interval&lt;/a&gt;, &lt;a href=&quot;tcpsocket#tcp_keepalive_interval=(val:Int)-instance-method&quot;&gt; tcp_keepalive_interval=(val : Int) tcp_keepalive_interval=&lt;/a&gt;, &lt;a href=&quot;tcpsocket#tcp_nodelay=(val:Bool)-instance-method&quot;&gt; tcp_nodelay=(val : Bool) tcp_nodelay=&lt;/a&gt;, &lt;a href=&quot;tcpsocket#tcp_nodelay?-instance-method&quot;&gt; tcp_nodelay? tcp_nodelay?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;tcpsocket#tcp_keepalive_count-instance-method&quot;&gt;tcp_keepalive_count tcp_keepalive_count&lt;/a&gt;，&lt;a href=&quot;tcpsocket#tcp_keepalive_count=(val:Int)-instance-method&quot;&gt;tcp_keepalive_count =（VAL的：int）tcp_keepalive_count =&lt;/a&gt;，&lt;a href=&quot;tcpsocket#tcp_keepalive_idle-instance-method&quot;&gt;tcp_keepalive_idle tcp_keepalive_idle&lt;/a&gt;，&lt;a href=&quot;tcpsocket#tcp_keepalive_idle=(val:Int)-instance-method&quot;&gt;tcp_keepalive_idle =（VAL的：int）tcp_keepalive_idle =&lt;/a&gt;，&lt;a href=&quot;tcpsocket#tcp_keepalive_interval-instance-method&quot;&gt;的tcp_keepalive_interval的tcp_keepalive_interval&lt;/a&gt;，&lt;a href=&quot;tcpsocket#tcp_keepalive_interval=(val:Int)-instance-method&quot;&gt;的tcp_keepalive_interval =（VAL的：int）的tcp_keepalive_interval =&lt;/a&gt;，&lt;a href=&quot;tcpsocket#tcp_nodelay=(val:Bool)-instance-method&quot;&gt;TCP_NODELAY =（VAL：BOOL）TCP_NODELAY =&lt;/a&gt;，&lt;a href=&quot;tcpsocket#tcp_nodelay?-instance-method&quot;&gt;TCP_NODELAY ？tcp_nodelay？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="310c1adacb9f66621053af2c2d2a99050b224175" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;unixsocket#local_address-instance-method&quot;&gt; local_address local_address&lt;/a&gt;, &lt;a href=&quot;unixsocket#path:String?-instance-method&quot;&gt; path : String? path&lt;/a&gt;, &lt;a href=&quot;unixsocket#receive-instance-method&quot;&gt; receive receive&lt;/a&gt;, &lt;a href=&quot;unixsocket#remote_address-instance-method&quot;&gt; remote_address remote_address&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;unixsocket#local_address-instance-method&quot;&gt;local_address local_address&lt;/a&gt;，&lt;a href=&quot;unixsocket#path:String?-instance-method&quot;&gt;路径：字符串？路径&lt;/a&gt;，&lt;a href=&quot;unixsocket#receive-instance-method&quot;&gt;接收接收&lt;/a&gt;，&lt;a href=&quot;unixsocket#remote_address-instance-method&quot;&gt;remote_address remote_address&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3735acb3cdbee580ce379bd4c6375a1e221d81f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;unixsocket#open(path,type:Type=Type::STREAM,&amp;amp;)-class-method&quot;&gt; open(path, type : Type = Type::STREAM, &amp;amp;) open&lt;/a&gt;, &lt;a href=&quot;unixsocket#pair(type:Type=Type::STREAM)-class-method&quot;&gt; pair(type : Type = Type::STREAM)&lt;br/&gt;pair(type : Type = Type::STREAM, &amp;amp;) pair&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;unixsocket#open(path,type:Type=Type::STREAM,&amp;amp;)-class-method&quot;&gt;开（路径，类型：种类=类型:: STREAM，＆）打开&lt;/a&gt;，&lt;a href=&quot;unixsocket#pair(type:Type=Type::STREAM)-class-method&quot;&gt;对（类型：种类=类型:: STREAM）&lt;br/&gt;对（类型：种类=类型:: STREAM，＆）对&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6cf90bc955696db416ca5381cb831813e7b7b8cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;unixsocket#open(path,type:Type=Type::STREAM,&amp;amp;block)-class-method&quot;&gt; open(path, type : Type = Type::STREAM, &amp;amp;block) open&lt;/a&gt;, &lt;a href=&quot;unixsocket#pair(type:Type=Type::STREAM)-class-method&quot;&gt; pair(type : Type = Type::STREAM)&lt;br/&gt;pair(type : Type = Type::STREAM, &amp;amp;block) pair&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;unixsocket#open(path,type:Type=Type::STREAM,&amp;amp;block)-class-method&quot;&gt;open（路径，类型：Type =类型:: STREAM，＆block）open&lt;/a&gt;，&lt;a href=&quot;unixsocket#pair(type:Type=Type::STREAM)-class-method&quot;&gt;对（type：类型= Type :: STREAM）&lt;br/&gt;对（type：Type = Type :: STREAM，＆block）对&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eed8740cef29d5851c0f8a925fad7ce6b9e443e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;value#==(other:JSON::Any)-instance-method&quot;&gt; ==(other : JSON::Any)&lt;br/&gt;==(other : YAML::Any)&lt;br/&gt;==(other) ==&lt;/a&gt;, &lt;a href=&quot;value#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;value#==(other:JSON::Any)-instance-method&quot;&gt;==（other：JSON :: Any）&lt;br/&gt;==（other：YAML :: Any）&lt;br/&gt;==（other）==&lt;/a&gt;，&lt;a href=&quot;value#dup-instance-method&quot;&gt;dup dup&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9ba5ab4e73d19d8bf2d7d87f7edde726e6b4931" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;valuemethods#add_instruction_attribute(index:Int,attribute:LLVM::Attribute,context:LLVM::Context)-instance-method&quot;&gt; add_instruction_attribute(index : Int, attribute : LLVM::Attribute, context : LLVM::Context) add_instruction_attribute&lt;/a&gt;, &lt;a href=&quot;valuemethods#alignment=(bytes)-instance-method&quot;&gt; alignment=(bytes) alignment=&lt;/a&gt;, &lt;a href=&quot;valuemethods#call_convention-instance-method&quot;&gt; call_convention call_convention&lt;/a&gt;, &lt;a href=&quot;valuemethods#call_convention=(call_convention)-instance-method&quot;&gt; call_convention=(call_convention) call_convention=&lt;/a&gt;, &lt;a href=&quot;valuemethods#const_int_get_sext_value-instance-method&quot;&gt; const_int_get_sext_value const_int_get_sext_value&lt;/a&gt;, &lt;a href=&quot;valuemethods#const_int_get_zext_value-instance-method&quot;&gt; const_int_get_zext_value const_int_get_zext_value&lt;/a&gt;, &lt;a href=&quot;valuemethods#constant?-instance-method&quot;&gt; constant? constant?&lt;/a&gt;, &lt;a href=&quot;valuemethods#dump-instance-method&quot;&gt; dump dump&lt;/a&gt;, &lt;a href=&quot;valuemethods#global_constant=(global_constant)-instance-method&quot;&gt; global_constant=(global_constant) global_constant=&lt;/a&gt;, &lt;a href=&quot;valuemethods#global_constant?-instance-method&quot;&gt; global_constant? global_constant?&lt;/a&gt;, &lt;a href=&quot;valuemethods#initializer-instance-method&quot;&gt; initializer initializer&lt;/a&gt;, &lt;a href=&quot;valuemethods#initializer=(initializer)-instance-method&quot;&gt; initializer=(initializer) initializer=&lt;/a&gt;, &lt;a href=&quot;valuemethods#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;valuemethods#kind-instance-method&quot;&gt; kind kind&lt;/a&gt;, &lt;a href=&quot;valuemethods#linkage-instance-method&quot;&gt; linkage linkage&lt;/a&gt;, &lt;a href=&quot;valuemethods#linkage=(linkage)-instance-method&quot;&gt; linkage=(linkage) linkage=&lt;/a&gt;, &lt;a href=&quot;valuemethods#name-instance-method&quot;&gt; name name&lt;/a&gt;, &lt;a href=&quot;valuemethods#name=(name)-instance-method&quot;&gt; name=(name) name=&lt;/a&gt;, &lt;a href=&quot;valuemethods#ordering=(ordering)-instance-method&quot;&gt; ordering=(ordering) ordering=&lt;/a&gt;, &lt;a href=&quot;valuemethods#thread_local=(thread_local)-instance-method&quot;&gt; thread_local=(thread_local) thread_local=&lt;/a&gt;, &lt;a href=&quot;valuemethods#thread_local?-instance-method&quot;&gt; thread_local? thread_local?&lt;/a&gt;, &lt;a href=&quot;valuemethods#to_unsafe-instance-method&quot;&gt; to_unsafe to_unsafe&lt;/a&gt;, &lt;a href=&quot;valuemethods#to_value-instance-method&quot;&gt; to_value to_value&lt;/a&gt;, &lt;a href=&quot;valuemethods#type-instance-method&quot;&gt; type type&lt;/a&gt;, &lt;a href=&quot;valuemethods#volatile=(volatile)-instance-method&quot;&gt; volatile=(volatile) volatile=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;valuemethods#add_instruction_attribute(index:Int,attribute:LLVM::Attribute,context:LLVM::Context)-instance-method&quot;&gt;add_instruction_attribute（指数：中等，属性：LLVM ::属性，上下文：LLVM ::上下文）add_instruction_attribute&lt;/a&gt;，&lt;a href=&quot;valuemethods#alignment=(bytes)-instance-method&quot;&gt;对准=（字节）对准=&lt;/a&gt;，&lt;a href=&quot;valuemethods#call_convention-instance-method&quot;&gt;call_convention call_convention&lt;/a&gt;，&lt;a href=&quot;valuemethods#call_convention=(call_convention)-instance-method&quot;&gt;call_convention =（call_convention）call_convention =&lt;/a&gt;，&lt;a href=&quot;valuemethods#const_int_get_sext_value-instance-method&quot;&gt;const_int_get_sext_value const_int_get_sext_value&lt;/a&gt;，&lt;a href=&quot;valuemethods#const_int_get_zext_value-instance-method&quot;&gt;const_int_get_zext_value const_int_get_zext_value&lt;/a&gt;，&lt;a href=&quot;valuemethods#constant?-instance-method&quot;&gt;恒定？不变？&lt;/a&gt;，&lt;a href=&quot;valuemethods#dump-instance-method&quot;&gt;dump dump&lt;/a&gt;，&lt;a href=&quot;valuemethods#global_constant=(global_constant)-instance-method&quot;&gt;global_constant =（global_constant）global_constant =&lt;/a&gt;，&lt;a href=&quot;valuemethods#global_constant?-instance-method&quot;&gt;global_constant吗？ global_constant？&lt;/a&gt;，&lt;a href=&quot;valuemethods#initializer-instance-method&quot;&gt;初始值设定项&lt;/a&gt;，&lt;a href=&quot;valuemethods#initializer=(initializer)-instance-method&quot;&gt;初始值设定项=（initializer）初始值设定项=&lt;/a&gt;，&lt;a href=&quot;valuemethods#inspect(io:IO):Nil-instance-method&quot;&gt;inspect（io：IO）：无检查&lt;/a&gt;，&lt;a href=&quot;valuemethods#kind-instance-method&quot;&gt;种类&lt;/a&gt;，&lt;a href=&quot;valuemethods#linkage-instance-method&quot;&gt;链接链接&lt;/a&gt;，&lt;a href=&quot;valuemethods#linkage=(linkage)-instance-method&quot;&gt;链接=（链接）链接=&lt;/a&gt;，&lt;a href=&quot;valuemethods#name-instance-method&quot;&gt;名称name&lt;/a&gt;，&lt;a href=&quot;valuemethods#name=(name)-instance-method&quot;&gt;名称=（name）name =&lt;/a&gt;，&lt;a href=&quot;valuemethods#ordering=(ordering)-instance-method&quot;&gt;ordering =（排序）ordering =&lt;/a&gt;，&lt;a href=&quot;valuemethods#thread_local=(thread_local)-instance-method&quot;&gt;thread_local =（thread_local）thread_local =&lt;/a&gt;，&lt;a href=&quot;valuemethods#thread_local?-instance-method&quot;&gt;thread_local？thread_local？&lt;/a&gt;，&lt;a href=&quot;valuemethods#to_unsafe-instance-method&quot;&gt;to_unsafe to_unsafe&lt;/a&gt;，&lt;a href=&quot;valuemethods#to_value-instance-method&quot;&gt;to_value to_value&lt;/a&gt;，&lt;a href=&quot;valuemethods#type-instance-method&quot;&gt;类型type&lt;/a&gt;，&lt;a href=&quot;valuemethods#volatile=(volatile)-instance-method&quot;&gt;volatile =（volatile）volatile =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b213782bf9851c3a24481bff0b9d762e87dc5505" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;x86#abi_info(atys:Array(Type),rty:Type,ret_def:Bool,context:Context)-instance-method&quot;&gt; abi_info(atys : Array(Type), rty : Type, ret_def : Bool, context : Context) abi_info&lt;/a&gt;, &lt;a href=&quot;x86#align(type:Type)-instance-method&quot;&gt; align(type : Type) align&lt;/a&gt;, &lt;a href=&quot;x86#size(type:Type)-instance-method&quot;&gt; size(type : Type) size&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;x86#abi_info(atys:Array(Type),rty:Type,ret_def:Bool,context:Context)-instance-method&quot;&gt;abi_info（atys：Array（Type），rty：Type，ret_def：Bool，context：Context）abi_info&lt;/a&gt;，&lt;a href=&quot;x86#align(type:Type)-instance-method&quot;&gt;align（type：Type）align&lt;/a&gt;，&lt;a href=&quot;x86#size(type:Type)-instance-method&quot;&gt;size（type：Type）大小&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6cf8b2f84857c80b132da69e98e0a22ca1f2e52d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;!=&lt;/code&gt; &amp;ndash; not equals</source>
          <target state="translated">&lt;code&gt;!=&lt;/code&gt; &amp;ndash;不等于</target>
        </trans-unit>
        <trans-unit id="727e18fa4ca6f54b3b1cb3c7b4549b41f08b1ff7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;*&quot;&lt;/code&gt; matches all regular files.</source>
          <target state="translated">&lt;code&gt;&quot;*&quot;&lt;/code&gt; 匹配所有常规文件。</target>
        </trans-unit>
        <trans-unit id="e6ecc84b725f5a81c6fbea24186bf66b66c830d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;*c&quot;&lt;/code&gt; matches all files ending with &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;*c&quot;&lt;/code&gt; 匹配所有以 &lt;code&gt;c&lt;/code&gt; 结尾的文件。</target>
        </trans-unit>
        <trans-unit id="88733c612bd2ab367bbbd5d13a9a3d769af01a28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;*c*&quot;&lt;/code&gt; matches all files that have &lt;code&gt;c&lt;/code&gt; in them (including at the beginning or end).</source>
          <target state="translated">&lt;code&gt;&quot;*c*&quot;&lt;/code&gt; 匹配所有包含 &lt;code&gt;c&lt;/code&gt; 的文件（包括开头或结尾）。</target>
        </trans-unit>
        <trans-unit id="f4e9de796e94fcb2c3e55b42c57feb7fccd6b37a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;&lt;a href=&quot;location#UTC&quot;&gt;UTC&lt;/a&gt;&quot;&lt;/code&gt; and empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;) return &lt;code&gt;&lt;a href=&quot;location#UTC&quot;&gt;Location::UTC&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;&lt;a href=&quot;location#UTC&quot;&gt;UTC&lt;/a&gt;&quot;&lt;/code&gt; 和空字符串（ &lt;code&gt;&quot;&quot;&lt;/code&gt; ）返回 &lt;code&gt;&lt;a href=&quot;location#UTC&quot;&gt;Location::UTC&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="062367d403e815b63958af43f7fdc9fb5cc17d98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;c*&quot;&lt;/code&gt; matches all files beginning with &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;c*&quot;&lt;/code&gt; 匹配所有以 &lt;code&gt;c&lt;/code&gt; 开头的文件。</target>
        </trans-unit>
        <trans-unit id="a49b53350d3b5b94d377b37c661d1382996eea04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;foo\tbar&quot;&lt;/code&gt;, &lt;code&gt;%(&quot;あ&quot;)&lt;/code&gt;, &lt;code&gt;%q(foo #{foo})&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;foo\tbar&quot;&lt;/code&gt; ， &lt;code&gt;%(&quot;あ&quot;)&lt;/code&gt; ， &lt;code&gt;%q(foo #{foo})&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8df46063854e1e85351279b1ab9ab1095e83da25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#value&lt;/code&gt; returns this ordinal number. It can easily be converted to the also common numbering based on &lt;code&gt;&lt;a href=&quot;dayofweek#Sunday&quot;&gt;Sunday&lt;/a&gt; = 0&lt;/code&gt; using &lt;code&gt;value % 7&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;#value&lt;/code&gt; 返回此序号。可以使用 &lt;code&gt;value % 7&lt;/code&gt; 轻松地将其转换为基于 &lt;code&gt;&lt;a href=&quot;dayofweek#Sunday&quot;&gt;Sunday&lt;/a&gt; = 0&lt;/code&gt; 通用编号。</target>
        </trans-unit>
        <trans-unit id="3214c5c2007c3b10f5c7dd9dd3c0dac986ef91fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%&lt;/code&gt; &amp;ndash; modulo</source>
          <target state="translated">&lt;code&gt;%&lt;/code&gt; &amp;ndash;模</target>
        </trans-unit>
        <trans-unit id="6e847b2cbac21918e62f4af07f3b13f1fe32bdcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt; &amp;ndash; bitwise and</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; &amp;ndash;按位和</target>
        </trans-unit>
        <trans-unit id="d0131e40d8d2930f5532fd7c8427253e4fcd9148" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; &amp;ndash; shift right</source>
          <target state="translated">&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; &amp;ndash;右移</target>
        </trans-unit>
        <trans-unit id="7b38d888d09148487e96d0edcf60799c33ebdc7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;&lt;/code&gt; &amp;ndash; greater</source>
          <target state="translated">&lt;code&gt;&amp;gt;&lt;/code&gt; &amp;ndash;更大</target>
        </trans-unit>
        <trans-unit id="d04324242fa44903fe8143f9fdd146cee2ebfd0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;=1&lt;/code&gt;: abort after &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; seconds on close. Linux and Cygwin may block on close.</source>
          <target state="translated">&lt;code&gt;&amp;gt;=1&lt;/code&gt; ：在 &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 秒关闭后中止。Linux和Cygwin可能会关闭。</target>
        </trans-unit>
        <trans-unit id="db66630810fbe839879bee9daf82d10089bb3c13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;=&lt;/code&gt; &amp;ndash; greater or equal</source>
          <target state="translated">&lt;code&gt;&amp;gt;=&lt;/code&gt; &amp;ndash;大于或等于</target>
        </trans-unit>
        <trans-unit id="c2b229998cffa90970eb9b5a186b0808f178345e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; &amp;ndash; shift left, append</source>
          <target state="translated">&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; &amp;ndash;向左移动，追加</target>
        </trans-unit>
        <trans-unit id="29db512822be9d5578cbdae2c23359761eab1b93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac457514e7bdff589c124b5bb1db0e038b05ed31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt; &amp;ndash; less</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; &amp;ndash;少</target>
        </trans-unit>
        <trans-unit id="8d7241cf1a98eb771311e37571c772458547c2a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;=&lt;/code&gt; ， &lt;code&gt;&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;gt;=&lt;/code&gt; ， &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="11e7e9cdb4ab5a9df0d731cc31024fd4b1be323b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; &amp;ndash; comparison</source>
          <target state="translated">&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; &amp;ndash;比较</target>
        </trans-unit>
        <trans-unit id="79c988ad35d520e66ea2eba61c8064e42f6bef6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;=&lt;/code&gt; &amp;ndash; less or equal</source>
          <target state="translated">&lt;code&gt;&amp;lt;=&lt;/code&gt; &amp;ndash;小于或等于</target>
        </trans-unit>
        <trans-unit id="5b0d1f9cf7f75ebbafe47a9dc209de8ce8a2c5fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'\n'&lt;/code&gt;, &lt;code&gt;'あ'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'a'&lt;/code&gt; ， &lt;code&gt;'\n'&lt;/code&gt; ， &lt;code&gt;'あ'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae4be69c1688eac587fe5824bf6b3f021b7965ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;**&lt;/code&gt; &amp;ndash; exponentiation</source>
          <target state="translated">&lt;code&gt;**&lt;/code&gt; &amp;ndash;求幂</target>
        </trans-unit>
        <trans-unit id="8b9d2dcccfa3872322a6a6a1294d53084f372cc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;**&lt;/code&gt; matches an unlimited number of arbitrary characters including &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;**&lt;/code&gt; 匹配无限数量的任意字符，包括 &lt;code&gt;/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5fc4ec589a794c637f1bf90a03aa6e036ac21860" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;**&lt;/code&gt;, &lt;code&gt;&amp;amp;**&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;**&lt;/code&gt; ， &lt;code&gt;&amp;amp;**&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dcf268a84d22ef038796cda9f341a547bbc4f556" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; &amp;ndash; multiplication</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; &amp;ndash;乘法</target>
        </trans-unit>
        <trans-unit id="7a2022f655971b431c3e08e9d0c3255587a80d68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; matches all the sources</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; 匹配所有来源</target>
        </trans-unit>
        <trans-unit id="366656fdad415b1e8c6ea6f9355448aa2823dddc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; matches an unlimited number of arbitrary characters excluding &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; 匹配不限数量的任意字符（不包括 &lt;code&gt;/&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="05ad8b65273667410a90b7916167f76d4bdbbed5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt;, &lt;code&gt;&amp;amp;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;//&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; ， &lt;code&gt;&amp;amp;*&lt;/code&gt; ， &lt;code&gt;/&lt;/code&gt; ， &lt;code&gt;//&lt;/code&gt; ， &lt;code&gt;%&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="338a062a7565baacbaf3c97c8bccf1dd6fb7c51a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt; &amp;ndash; addition</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; &amp;ndash;加法</target>
        </trans-unit>
        <trans-unit id="2c1d0abba8e8cc631e905d797deaab4c46d6f521" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;&amp;amp;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;&amp;amp;-&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; ， &lt;code&gt;&amp;amp;+&lt;/code&gt; ， &lt;code&gt;-&lt;/code&gt; ， &lt;code&gt;&amp;amp;-&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aba022b6ef08a7b47b7707fd15cdde7012954af9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;&amp;amp;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;&amp;amp;-&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;~&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;**&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; ， &lt;code&gt;&amp;amp;+&lt;/code&gt; ， &lt;code&gt;-&lt;/code&gt; ， &lt;code&gt;&amp;amp;-&lt;/code&gt; &lt;code&gt;!&lt;/code&gt; ， &lt;code&gt;~&lt;/code&gt; ， &lt;code&gt;*&lt;/code&gt; ， &lt;code&gt;**&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d263a71b120b4133210668110e586c5b6e8fe1a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--canonical-base-url=URL, -b URL&lt;/code&gt;: Set the &lt;a href=&quot;https://en.wikipedia.org/wiki/Canonical_link_element&quot;&gt;canonical base url&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;--canonical-base-url=URL, -b URL&lt;/code&gt; ：设置&lt;a href=&quot;https://en.wikipedia.org/wiki/Canonical_link_element&quot;&gt;规范的基本URL&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="caeef414e435df134b8d291bfa932ff972b87fa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--cross-compile&lt;/code&gt;: Generate a .o file, and print the command to generate an executable to stdout.</source>
          <target state="translated">&lt;code&gt;--cross-compile&lt;/code&gt; ：生成一个.o文件，并打印命令以生成一个可执行文件到stdout。</target>
        </trans-unit>
        <trans-unit id="6df17ed2506342180665afb17f56dc2fd6172e08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--cross-compile&lt;/code&gt;: When given enables cross compilation mode</source>
          <target state="translated">&lt;code&gt;--cross-compile&lt;/code&gt; ：给定时启用交叉编译模式</target>
        </trans-unit>
        <trans-unit id="3b3d1184ec022a66bc7da840f55f49736c7c4c53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--example &amp;lt;name&amp;gt;&lt;/code&gt;: Runs examples whose full nested names include &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--example &amp;lt;name&amp;gt;&lt;/code&gt; ：运行其完整嵌套名称包括 &lt;code&gt;name&lt;/code&gt; 的示例。</target>
        </trans-unit>
        <trans-unit id="e4af5a09bef06206c911820be2fb71dde7cbc3c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--fail-fast&lt;/code&gt;: Abort the spec run on first failure.</source>
          <target state="translated">&lt;code&gt;--fail-fast&lt;/code&gt; ：中止在第一次失败时运行的规范。</target>
        </trans-unit>
        <trans-unit id="4ad13f7c23fdf5c462803d66c11aa881319cdf59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--junit_output &amp;lt;output_dir&amp;gt;&lt;/code&gt;: Generates JUnit XML output.</source>
          <target state="translated">&lt;code&gt;--junit_output &amp;lt;output_dir&amp;gt;&lt;/code&gt; ：生成JUnit XML输出。</target>
        </trans-unit>
        <trans-unit id="8170a489423c1604cbf7ebe5897519f2f3b8fe6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--line &amp;lt;line&amp;gt;&lt;/code&gt;: Runs examples whose line matches &lt;code&gt;line&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--line &amp;lt;line&amp;gt;&lt;/code&gt; ：运行例子，其线匹配 &lt;code&gt;line&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5fd7c1ad3df8091b938b840c28d1124c9f72f62b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--link-flags FLAGS&lt;/code&gt;: Additional flags to pass to the linker.</source>
          <target state="translated">&lt;code&gt;--link-flags FLAGS&lt;/code&gt; ：传递给链接器的其他标志。</target>
        </trans-unit>
        <trans-unit id="4b31d3b4e9fe4a13c0f92357dec5dd2beb2183bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--location &amp;lt;file&amp;gt;:&amp;lt;line&amp;gt;&lt;/code&gt;: Runs example(s) at &lt;code&gt;line&lt;/code&gt; in &lt;code&gt;file&lt;/code&gt; (multiple options allowed).</source>
          <target state="translated">&lt;code&gt;--location &amp;lt;file&amp;gt;:&amp;lt;line&amp;gt;&lt;/code&gt; ：在 &lt;code&gt;file&lt;/code&gt; 中的 &lt;code&gt;line&lt;/code&gt; 处运行示例（允许多个选项）。</target>
        </trans-unit>
        <trans-unit id="bc315109730f619dc4d8300f3dbad3097c699005" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--lto=thin&lt;/code&gt;: Use ThinLTO, improves performance.</source>
          <target state="translated">&lt;code&gt;--lto=thin&lt;/code&gt; ：使用ThinLTO，可提高性能。</target>
        </trans-unit>
        <trans-unit id="1a27af94a4125385d2f42277aca2f5da77222ccb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--lto=thin&lt;/code&gt;: Use ThinLTO, improving performance on release builds.</source>
          <target state="translated">&lt;code&gt;--lto=thin&lt;/code&gt; ：使用ThinLTO，提高发行版的性能。</target>
        </trans-unit>
        <trans-unit id="86233ba3b3f9ba4c83d28582ea588f5ead0e03a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-color&lt;/code&gt;: Disabled colored output.</source>
          <target state="translated">&lt;code&gt;--no-color&lt;/code&gt; ：禁用彩色输出。</target>
        </trans-unit>
        <trans-unit id="124be197ef89e5679f616356170d8f157c9acdce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-debug&lt;/code&gt;: Skip any symbolic debug info, reducing the output file size.</source>
          <target state="translated">&lt;code&gt;--no-debug&lt;/code&gt; ：跳过任何符号调试信息，以减小输出文件的大小。</target>
        </trans-unit>
        <trans-unit id="2c49ecac760283afefebd587e1ff08289afb7b89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--output=DIR, -o DIR&lt;/code&gt;: Set the output directory (default: &lt;code&gt;./docs&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;--output=DIR, -o DIR&lt;/code&gt; ：设置输出目录（默认： &lt;code&gt;./docs&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="d8b6cc3f53c2fea4c9ed647063e4b470e9b0924e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--production&lt;/code&gt;: Runs in release mode. Development dependencies won't be installed and only locked dependencies will be installed. Commands will fail if dependencies in &lt;code&gt;shard.yml&lt;/code&gt; and &lt;code&gt;shard.lock&lt;/code&gt; are out of sync (used by &lt;code&gt;install&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, &lt;code&gt;check&lt;/code&gt; and &lt;code&gt;list&lt;/code&gt; command)</source>
          <target state="translated">&lt;code&gt;--production&lt;/code&gt; ：以发布模式运行。将不会安装开发依赖项，而只会安装锁定的依赖项。如果 &lt;code&gt;shard.yml&lt;/code&gt; 和 &lt;code&gt;shard.lock&lt;/code&gt; 中的依赖项不同步，则命令将失败（由 &lt;code&gt;install&lt;/code&gt; ， &lt;code&gt;update&lt;/code&gt; ， &lt;code&gt;check&lt;/code&gt; 和 &lt;code&gt;list&lt;/code&gt; 命令使用）</target>
        </trans-unit>
        <trans-unit id="62c573e57f076d70f3c6928b0e2f6983c44a755b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--profile&lt;/code&gt;: Prints the 10 slowest specs.</source>
          <target state="translated">&lt;code&gt;--profile&lt;/code&gt; ：打印最慢的10个规格。</target>
        </trans-unit>
        <trans-unit id="e2818c357a576739bfe4ecb347c2816b46068fde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--progress&lt;/code&gt;: Show progress during compilation.</source>
          <target state="translated">&lt;code&gt;--progress&lt;/code&gt; ：显示编译过程中的进度。</target>
        </trans-unit>
        <trans-unit id="a141066bf93398ad8ac63f831644ee95359fe47b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--project-name=NAME&lt;/code&gt;: Set the project name. The default value is extracted from &lt;code&gt;shard.yml&lt;/code&gt; if available. In case no default can be found, this option is mandatory.</source>
          <target state="translated">&lt;code&gt;--project-name=NAME&lt;/code&gt; ：设置项目名称。如果可用，将从 &lt;code&gt;shard.yml&lt;/code&gt; 中提取默认值。如果找不到默认值，则必须使用此选项。</target>
        </trans-unit>
        <trans-unit id="d46265ff6454a922c897baff87b4ab07511766e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--project-version=VERSION&lt;/code&gt;: Set the project version. The default value is extracted from current git commit or &lt;code&gt;shard.yml&lt;/code&gt; if available. In case no default can be found, this option is mandatory.</source>
          <target state="translated">&lt;code&gt;--project-version=VERSION&lt;/code&gt; ：设置项目版本。默认值是从当前git commit或 &lt;code&gt;shard.yml&lt;/code&gt; 中提取的（如果可用）。如果找不到默认值，则必须使用此选项。</target>
        </trans-unit>
        <trans-unit id="ac950ac4d9cc7f1fb53d629f908bf4f119a117d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--release&lt;/code&gt;: Compile in release mode, doing extra work to apply optimizations to the generated code.</source>
          <target state="translated">&lt;code&gt;--release&lt;/code&gt; ：在发布模式下编译，进行额外的工作以对生成的代码进行优化。</target>
        </trans-unit>
        <trans-unit id="b055dc51d49c96eebafd1fcff3ca9ca4b809bba6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--static&lt;/code&gt;: Link statically.</source>
          <target state="translated">&lt;code&gt;--static&lt;/code&gt; ：静态链接。</target>
        </trans-unit>
        <trans-unit id="eb9e55c91958bc8c4d9ac07ec2068b0f3ea11239" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--tag &amp;lt;tag&amp;gt;&lt;/code&gt;: Runs examples with the specified tag, or excludes examples by adding &lt;code&gt;~&lt;/code&gt; before the tag (multiple options allowed).</source>
          <target state="translated">&lt;code&gt;--tag &amp;lt;tag&amp;gt;&lt;/code&gt; ：运行带有指定标签的示例，或者通过在标签前添加 &lt;code&gt;~&lt;/code&gt; 排除示例（允许多个选项）。</target>
        </trans-unit>
        <trans-unit id="059d2a595ee76dbf2d6c3e21d35a14ea23355bc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--tag a --tag b&lt;/code&gt; will include specs tagged with &lt;code&gt;a&lt;/code&gt; OR &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--tag a --tag b&lt;/code&gt; 将包括规格标有 &lt;code&gt;a&lt;/code&gt; 或 &lt;code&gt;b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="01d3ba92739ce69992a285d18a4bcc334653bb86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--tag a --tag ~b&lt;/code&gt; will include specs tagged with &lt;code&gt;a&lt;/code&gt;, but not tagged with &lt;code&gt;b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--tag a --tag ~b&lt;/code&gt; 将包括标有 &lt;code&gt;a&lt;/code&gt; 的规范，但不标有 &lt;code&gt;b&lt;/code&gt; 的规范</target>
        </trans-unit>
        <trans-unit id="49032598de37f36fe6b8b37c6f5757ad649a009f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--tag ~a --tag ~b&lt;/code&gt; will include specs not tagged with &lt;code&gt;a&lt;/code&gt; AND not tagged with &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--tag ~a --tag ~b&lt;/code&gt; 将包括未标记为 &lt;code&gt;a&lt;/code&gt; 且未标记为 &lt;code&gt;b&lt;/code&gt; 的规范。</target>
        </trans-unit>
        <trans-unit id="1f59f027ab1768e15536927d62ea8e21743ae13d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--target&lt;/code&gt;: the &lt;a href=&quot;http://llvm.org/docs/LangRef.html#target-triple&quot;&gt;LLVM Target Triple&lt;/a&gt; to use and set the default &lt;a href=&quot;compile_time_flags&quot;&gt;compile-time flags&lt;/a&gt; from</source>
          <target state="translated">&lt;code&gt;--target&lt;/code&gt; ：该&lt;a href=&quot;http://llvm.org/docs/LangRef.html#target-triple&quot;&gt;LLVM目标三重&lt;/a&gt;使用和设置默认的&lt;a href=&quot;compile_time_flags&quot;&gt;编译时间标志&lt;/a&gt;从</target>
        </trans-unit>
        <trans-unit id="feeaa401496aa9d16dc205f57745a08246feed12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--verbose&lt;/code&gt;: Display executed commands.</source>
          <target state="translated">&lt;code&gt;--verbose&lt;/code&gt; ：显示执行的命令。</target>
        </trans-unit>
        <trans-unit id="48fdd3ebcbbe84386326baf293973af2cd28ccfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--verbose&lt;/code&gt;: Prints verbose output, including all example names.</source>
          <target state="translated">&lt;code&gt;--verbose&lt;/code&gt; ：打印详细输出，包括所有示例名称。</target>
        </trans-unit>
        <trans-unit id="b8d695fe23842096e5068cc0f5aef364cbffbe16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--version&lt;/code&gt;: Prints the version of &lt;code&gt;shards&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--version&lt;/code&gt; ：打印分 &lt;code&gt;shards&lt;/code&gt; 的版本。</target>
        </trans-unit>
        <trans-unit id="3f4c7d846816b988e0ff39ec96117e0426c1a91f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; is greater than &lt;em&gt;other&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;-1&lt;/code&gt; 如果 &lt;code&gt;self&lt;/code&gt; 大于&lt;em&gt;其他人&lt;/em&gt;则为-1&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd8e4df265dcbebcfd64d260b6b3503d98ffaa96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; is less than &lt;em&gt;other&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;-1&lt;/code&gt; 如果 &lt;code&gt;self&lt;/code&gt; 小于&lt;em&gt;其他人&lt;/em&gt;则为-1&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="15ad6650ef267073fa10a561024a3aad9ba1cb2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1&lt;/code&gt; if this number is negative</source>
          <target state="translated">&lt;code&gt;-1&lt;/code&gt; 如果该数字为负，则为-1</target>
        </trans-unit>
        <trans-unit id="d89f29c787b9302ed6e5aa3cace7bdb6d8da4acb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt; &amp;ndash; subtraction</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt; -减</target>
        </trans-unit>
        <trans-unit id="5c78ae26db477e466b6472bd4751417d20101602" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-D FLAG, --define FLAG&lt;/code&gt;: Define a compile-time flag.</source>
          <target state="translated">&lt;code&gt;-D FLAG, --define FLAG&lt;/code&gt; ：定义编译时标志。</target>
        </trans-unit>
        <trans-unit id="619607ff324ec2ac2d298c0f47c519c737a404bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt;, &lt;code&gt;-B&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; ， &lt;code&gt;-B&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e63540459d0bb92351cb6f45c934a8e749726e35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f FILE&lt;/code&gt;, &lt;code&gt;--file FILE&lt;/code&gt;, &lt;code&gt;--file=FILE&lt;/code&gt; (these will yield the passed value to the block as a string)</source>
          <target state="translated">&lt;code&gt;-f FILE&lt;/code&gt; ，-- &lt;code&gt;--file FILE&lt;/code&gt; ，-- &lt;code&gt;--file=FILE&lt;/code&gt; （这些将把传递的值作为字符串产生）</target>
        </trans-unit>
        <trans-unit id="fd5ffb582f900512a5afd94eb6d37185571f74d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-h, --help&lt;/code&gt;: Prints usage synopsis.</source>
          <target state="translated">&lt;code&gt;-h, --help&lt;/code&gt; ：打印用法提要。</target>
        </trans-unit>
        <trans-unit id="fc964fa91e9fb2d2617452d30bc4d3d0c87883e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-h&lt;/code&gt; / &lt;code&gt;--help&lt;/code&gt;: it will display the application help.</source>
          <target state="translated">&lt;code&gt;-h&lt;/code&gt; / &lt;code&gt;--help&lt;/code&gt; ：它将显示应用程序帮助。</target>
        </trans-unit>
        <trans-unit id="4b64f17da65a7f4c5c2aeadbab1173a5e39d92e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-o &amp;lt;output_file&amp;gt;&lt;/code&gt;: Define the name of the binary executable.</source>
          <target state="translated">&lt;code&gt;-o &amp;lt;output_file&amp;gt;&lt;/code&gt; ：定义二进制可执行文件的名称。</target>
        </trans-unit>
        <trans-unit id="213f208f92f4a4f9235f516c359ed770229d2e86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q, --quiet&lt;/code&gt;: Decreases the log verbosity, printing only warnings and errors.</source>
          <target state="translated">&lt;code&gt;-q, --quiet&lt;/code&gt; ：降低日志的详细程度，仅打印警告和错误。</target>
        </trans-unit>
        <trans-unit id="fb184844b5b7013eefe6083d6ba23ed3fd5042c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-v, --verbose&lt;/code&gt;: Increases the log verbosity, printing all debug statements.</source>
          <target state="translated">&lt;code&gt;-v, --verbose&lt;/code&gt; ：增加日志的详细程度，打印所有调试语句。</target>
        </trans-unit>
        <trans-unit id="a8e9f589ccba916769bb57c91565a671819f2bb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-v&lt;/code&gt; / &lt;code&gt;--version&lt;/code&gt;: it will display the application version.</source>
          <target state="translated">&lt;code&gt;-v&lt;/code&gt; / &lt;code&gt;--version&lt;/code&gt; ：它将显示应用程序版本。</target>
        </trans-unit>
        <trans-unit id="4da635cb40abf7042e5330cec2c7ba66fde2a322" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..&lt;/code&gt;, &lt;code&gt;...&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;..&lt;/code&gt; ， &lt;code&gt;...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4901007555dc5119d44d23f5705940d1e61811ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/(foo)?bar/&lt;/code&gt;, &lt;code&gt;/foo #{foo}/imx&lt;/code&gt;, &lt;code&gt;%r(foo/)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/(foo)?bar/&lt;/code&gt; ， &lt;code&gt;/foo #{foo}/imx&lt;/code&gt; ， &lt;code&gt;%r(foo/)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ad7d400f56cf67bd33bb057f3d2a4ab1e62d243" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/&lt;/code&gt; &amp;ndash; division</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; &amp;ndash;除法</target>
        </trans-unit>
        <trans-unit id="319b573c5748d37cf7882296f1667e3eedc16867" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/&lt;/code&gt; contains a readme, any project configurations (eg, CI or editor configs), and any other project-level documentation (eg, changelog or contributing guide).</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; 包含自述文件，任何项目配置（例如CI或编辑器配置）以及任何其他项目级别的文档（例如changelog或提供指南）。</target>
        </trans-unit>
        <trans-unit id="887480c8a89e178d3db88af96eca10ac59287663" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; is equal to &lt;em&gt;other&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 如果 &lt;code&gt;self&lt;/code&gt; 等于&lt;em&gt;其他人&lt;/em&gt;则为0&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d3981bf79cb7d7c19767129d041e59f07b760f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; is equal to the other object</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 如果 &lt;code&gt;self&lt;/code&gt; 与另一个对象相等，则为0</target>
        </trans-unit>
        <trans-unit id="fe87e05131908472363da2eb6391c28f60ba127e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if this number is zero</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 如果这个数目为零</target>
        </trans-unit>
        <trans-unit id="c0aa2d1b9059429cdacb68e91d0ca0b7e7622d85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt;: Dependencies are satisfied.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; ：相关性得到满足。</target>
        </trans-unit>
        <trans-unit id="86babbf43f0b4b42472ca5675b8dcffd06b41fa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt;: abort on close (socket buffer is discarded and RST sent to peer). Depends on platform and whether &lt;code&gt;shutdown()&lt;/code&gt; was called first.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; ：关闭时中止（套接字缓冲区被丢弃，RST发送到对等方）。取决于平台以及是否首先调用 &lt;code&gt;shutdown()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="31199e425b596bdc88c688a005571baa409f12be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1 &amp;lt;&amp;lt; 2&lt;/code&gt;, &lt;code&gt;STDOUT &amp;lt;&amp;lt; &quot;foo&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;1 &amp;lt;&amp;lt; 2&lt;/code&gt; ， &lt;code&gt;STDOUT &amp;lt;&amp;lt; &quot;foo&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2b63f20dbd38918c3142687c335beb0854aab44f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1..9&lt;/code&gt;, &lt;code&gt;1...10&lt;/code&gt;, &lt;code&gt;0..var&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;1..9&lt;/code&gt; ， &lt;code&gt;1...10&lt;/code&gt; ， &lt;code&gt;0..var&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0657711f08b73c0e05e3a6c697b54967c403ad00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1.0&lt;/code&gt;, &lt;code&gt;1.0_f32&lt;/code&gt;, &lt;code&gt;1e10&lt;/code&gt;, &lt;code&gt;-0.5&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;1.0&lt;/code&gt; ， &lt;code&gt;1.0_f32&lt;/code&gt; ， &lt;code&gt;1e10&lt;/code&gt; ， &lt;code&gt;-0.5&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1ac5028a4d6ca330af185ec5960dfb4803410953" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;18&lt;/code&gt;, &lt;code&gt;-12&lt;/code&gt;, &lt;code&gt;19_i64&lt;/code&gt;, &lt;code&gt;14_u32&lt;/code&gt;,&lt;code&gt;64_u8&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;18&lt;/code&gt; ， &lt;code&gt;-12&lt;/code&gt; ， &lt;code&gt;19_i64&lt;/code&gt; ， &lt;code&gt;14_u32&lt;/code&gt; ， &lt;code&gt;64_u8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7662099e41a9e7c24d63e32954ba33cd5581fdc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if this number is positive</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 如果该数字为正，则为1</target>
        </trans-unit>
        <trans-unit id="190fcb12c70d37bc453df8b55ccef9b97c6903e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt;: Dependencies are not satisfied.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; ：不满足依赖关系。</target>
        </trans-unit>
        <trans-unit id="a83aaa5bcc1009f1737969f3536d414f4500142a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:skip&lt;/code&gt;: invalid byte sequences are ignored</source>
          <target state="translated">&lt;code&gt;:skip&lt;/code&gt; ：无效的字节序列将被忽略</target>
        </trans-unit>
        <trans-unit id="5b1edb8f1623ce164715ff5cc74bfa821f20b33b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:symbol&lt;/code&gt;, &lt;code&gt;:&quot;foo bar&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:symbol&lt;/code&gt; ， &lt;code&gt;:&quot;foo bar&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="096642c6c63fcf1823ab184e7f97f7927f2bd907" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; defines returns &lt;code&gt;false&lt;/code&gt;, but including types may override.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 定义返回 &lt;code&gt;false&lt;/code&gt; ，但包括的类型可能会覆盖。</target>
        </trans-unit>
        <trans-unit id="66a66dae86ce3cb3ca128e4d316a54a13bdbb328" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; makes sure to invoke this method with &lt;em&gt;index&lt;/em&gt; in &lt;code&gt;0..&lt;a href=&quot;parametercollection#size-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt;, so converting negative indices to positive ones is not needed here.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; 确保调用此方法与&lt;em&gt;指标&lt;/em&gt;在 &lt;code&gt;0..&lt;a href=&quot;parametercollection#size-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt; ，所以转换的负指数，积极的这里是没有必要的。</target>
        </trans-unit>
        <trans-unit id="7124b7b8fb18769908db7f473fa952000838908d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; defines returns &lt;code&gt;false&lt;/code&gt;, but including types may override.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 定义返回 &lt;code&gt;false&lt;/code&gt; ，但包括的类型可能会覆盖。</target>
        </trans-unit>
        <trans-unit id="b708f830431fb71071ef6ee0e25f79793eb9ded2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; defines this is a no-op method, but including types may override.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 定义这是一种无操作方法，但包括类型在内的方法可能会覆盖。</target>
        </trans-unit>
        <trans-unit id="6736fef0f0942973b91e9dc07552a28480fcd5b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; uses this property as default value for most method arguments expecting a &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 对于大多数需要 &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; 的方法参数， Time将此属性用作默认值。</target>
        </trans-unit>
        <trans-unit id="662b27e15c33fb9819b87e2b635a397eaba712b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;any&quot;&gt;JSON::Any&lt;/a&gt;&lt;/code&gt; is a convenient wrapper around all possible JSON types (&lt;code&gt;&lt;a href=&quot;any/type&quot;&gt;JSON::Any::Type&lt;/a&gt;&lt;/code&gt;) and can be used for traversing dynamic or unknown JSON structures.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;any&quot;&gt;JSON::Any&lt;/a&gt;&lt;/code&gt; 是所有可能的JSON类型（ &lt;code&gt;&lt;a href=&quot;any/type&quot;&gt;JSON::Any::Type&lt;/a&gt;&lt;/code&gt; ）的便捷包装，可用于遍历动态或未知的JSON结构。</target>
        </trans-unit>
        <trans-unit id="7bb5128abac7bd2917521b3b1fd303c82977ad55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;any&quot;&gt;YAML::Any&lt;/a&gt;&lt;/code&gt; is a convenient wrapper around all possible YAML core types (&lt;code&gt;&lt;a href=&quot;any/type&quot;&gt;YAML::Any::Type&lt;/a&gt;&lt;/code&gt;) and can be used for traversing dynamic or unknown YAML structures.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;any&quot;&gt;YAML::Any&lt;/a&gt;&lt;/code&gt; 是所有可能的YAML核心类型（ &lt;code&gt;&lt;a href=&quot;any/type&quot;&gt;YAML::Any::Type&lt;/a&gt;&lt;/code&gt; ）的便捷包装，可用于遍历动态或未知的YAML结构。</target>
        </trans-unit>
        <trans-unit id="6c7abd89d293c6c8503164925accaf57d04915d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;benchmark/ips&quot;&gt;Benchmark::IPS&lt;/a&gt;&lt;/code&gt; defaults to 2 seconds of warmup time and 5 seconds of calculation time. This can be configured:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;benchmark/ips&quot;&gt;Benchmark::IPS&lt;/a&gt;&lt;/code&gt; 默认为2秒的预热时间和5秒的计算时间。可以配置：</target>
        </trans-unit>
        <trans-unit id="ef731adc466e1f287ae1cac1129cf47dfa137c60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;bigrational#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; (and &lt;code&gt;&lt;a href=&quot;bigrational#inspect(io:IO):Nil-instance-method&quot;&gt;#inspect(io)&lt;/a&gt;&lt;/code&gt;) are the methods used when you invoke &lt;code&gt;&lt;a href=&quot;bigrational#to_s(io:IO,base:Int=10):Nil-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;bigrational#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; on an object that holds other objects and wants to show them. For example when you invoke &lt;code&gt;&lt;a href=&quot;array#to_s(io:IO):Nil-instance-method&quot;&gt;Array#to_s&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;bigrational#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; will be invoked on each element:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;bigrational#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; （和 &lt;code&gt;&lt;a href=&quot;bigrational#inspect(io:IO):Nil-instance-method&quot;&gt;#inspect(io)&lt;/a&gt;&lt;/code&gt; ）是在包含其他对象并想要显示它们的对象上调用 &lt;code&gt;&lt;a href=&quot;bigrational#to_s(io:IO,base:Int=10):Nil-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;bigrational#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; 时使用的方法。例如，当您调用 &lt;code&gt;&lt;a href=&quot;array#to_s(io:IO):Nil-instance-method&quot;&gt;Array#to_s&lt;/a&gt;&lt;/code&gt; 时，将在每个元素上调用 &lt;code&gt;&lt;a href=&quot;bigrational#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5fbe2d4cfdbc26f8f104999371723a4e22eb3c8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;bitarray&quot;&gt;BitArray&lt;/a&gt;&lt;/code&gt; includes all the methods in &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;bitarray&quot;&gt;BitArray&lt;/a&gt;&lt;/code&gt; 包含 &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;&lt;/code&gt; 中的所有方法。</target>
        </trans-unit>
        <trans-unit id="2dfa1c4f8946c2fb4b6a7e1033ada42ad8f3c668" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;bitarray&quot;&gt;BitArray&lt;/a&gt;&lt;/code&gt; is an array data structure that compactly stores bits.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;bitarray&quot;&gt;BitArray&lt;/a&gt;&lt;/code&gt; 是一种紧凑地存储位的数组数据结构。</target>
        </trans-unit>
        <trans-unit id="75d49966a3a728a440a44d0a2191a0bf0ebb52d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;&lt;/code&gt; uses &lt;code&gt;&lt;a href=&quot;comparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; to implement the conventional comparison operators (&lt;code&gt;&lt;a href=&quot;comparable#%3C(other:T)-instance-method&quot;&gt;#&amp;lt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;comparable#%3C=(other:T)-instance-method&quot;&gt;#&amp;lt;=&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;comparable#==(other:T)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;comparable#%3E=(other:T)-instance-method&quot;&gt;#&amp;gt;=&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;comparable#%3E(other:T)-instance-method&quot;&gt;#&amp;gt;&lt;/a&gt;&lt;/code&gt;). All of these return &lt;code&gt;false&lt;/code&gt; when &lt;code&gt;&lt;a href=&quot;comparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;&lt;/code&gt; 使用 &lt;code&gt;&lt;a href=&quot;comparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; 来实现常规比较运算符（ &lt;code&gt;&lt;a href=&quot;comparable#%3C(other:T)-instance-method&quot;&gt;#&amp;lt;&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;comparable#%3C=(other:T)-instance-method&quot;&gt;#&amp;lt;=&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;comparable#==(other:T)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;comparable#%3E=(other:T)-instance-method&quot;&gt;#&amp;gt;=&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;comparable#%3E(other:T)-instance-method&quot;&gt;#&amp;gt;&lt;/a&gt;&lt;/code&gt; ）。当 &lt;code&gt;&lt;a href=&quot;comparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 时，所有这些返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c91a9782612ee4155b106533c72fe1baa3b173f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;complex#sqrt-instance-method&quot;&gt;Complex#sqrt&lt;/a&gt;&lt;/code&gt; was inspired by the &lt;a href=&quot;https://pavpanchekha.com/casio/&quot;&gt;following blog post&lt;/a&gt; of Pavel Panchekha on floating point precision.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;complex#sqrt-instance-method&quot;&gt;Complex#sqrt&lt;/a&gt;&lt;/code&gt; 的灵感来自&lt;a href=&quot;https://pavpanchekha.com/casio/&quot;&gt;以下&lt;/a&gt;有关浮点精度的Pavel Panchekha博客。</target>
        </trans-unit>
        <trans-unit id="6548975a23dc6b942d888c141895465f612e13fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;dayofweek&quot;&gt;DayOfWeek&lt;/a&gt;&lt;/code&gt; represents a day of the week in the Gregorian calendar.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;dayofweek&quot;&gt;DayOfWeek&lt;/a&gt;&lt;/code&gt; 代表公历中的星期几。</target>
        </trans-unit>
        <trans-unit id="9f46fabe60d6acf2e6dbd0d8bcd82af28b879a9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;enumerable/chunk/alone&quot;&gt;Enumerable::Chunk::Alone&lt;/a&gt;&lt;/code&gt; specifies that the element should be chunked by itself</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable/chunk/alone&quot;&gt;Enumerable::Chunk::Alone&lt;/a&gt;&lt;/code&gt; 指定元素应自己分块</target>
        </trans-unit>
        <trans-unit id="d19d42ac7a401d1829854503d5e3536d69e876f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;enumerable/chunk/drop&quot;&gt;Enumerable::Chunk::Drop&lt;/a&gt;&lt;/code&gt; specifies that the elements should be dropped</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable/chunk/drop&quot;&gt;Enumerable::Chunk::Drop&lt;/a&gt;&lt;/code&gt; 指定应删除元素</target>
        </trans-unit>
        <trans-unit id="7a94a0ec84ec4ccfd2f291b8f07c202b492afa9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;env&quot;&gt;ENV&lt;/a&gt;&lt;/code&gt; is a hash-like accessor for environment variables.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;env&quot;&gt;ENV&lt;/a&gt;&lt;/code&gt; 是环境变量的类似于哈希的访问器。</target>
        </trans-unit>
        <trans-unit id="e809996e28a2ea0ff0fced3a803b39114342ac53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;field&quot;&gt;JSON::Field&lt;/a&gt;&lt;/code&gt; properties:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;field&quot;&gt;JSON::Field&lt;/a&gt;&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="63f88c51fc9cf11d078458a3a1df1f2f96f69812" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;field&quot;&gt;YAML::Field&lt;/a&gt;&lt;/code&gt; properties:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;field&quot;&gt;YAML::Field&lt;/a&gt;&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="f0639e71a6839d92cfcc62c034c09954ca578c34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; makes sure to invoke this method with &lt;em&gt;index&lt;/em&gt; in &lt;code&gt;0..&lt;a href=&quot;array#size:Int32-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt;, so converting negative indices to positive ones is not needed here.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; 确保调用此方法与&lt;em&gt;指标&lt;/em&gt;在 &lt;code&gt;0..&lt;a href=&quot;array#size:Int32-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt; ，所以转换的负指数，积极的这里是没有必要的。</target>
        </trans-unit>
        <trans-unit id="75730cc9d1a0c83495b18a0bf36e720aa6af63bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; makes sure to invoke this method with &lt;em&gt;index&lt;/em&gt; in &lt;code&gt;0..&lt;a href=&quot;bitarray#size:Int32-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt;, so converting negative indices to positive ones is not needed here.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; 确保调用此方法与&lt;em&gt;指标&lt;/em&gt;在 &lt;code&gt;0..&lt;a href=&quot;bitarray#size:Int32-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt; ，所以转换的负指数，积极的这里是没有必要的。</target>
        </trans-unit>
        <trans-unit id="5572278147cc5f600c9b972c52423d7034e86abf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; makes sure to invoke this method with &lt;em&gt;index&lt;/em&gt; in &lt;code&gt;0..&lt;a href=&quot;deque#size-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt;, so converting negative indices to positive ones is not needed here.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; 确保调用此方法与&lt;em&gt;指标&lt;/em&gt;在 &lt;code&gt;0..&lt;a href=&quot;deque#size-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt; ，所以转换的负指数，积极的这里是没有必要的。</target>
        </trans-unit>
        <trans-unit id="693d84d7c4dcabe15d06451b9db2499eeed0ec5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; makes sure to invoke this method with &lt;em&gt;index&lt;/em&gt; in &lt;code&gt;0..&lt;a href=&quot;indexable#size-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt;, so converting negative indices to positive ones is not needed here.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; 确保调用此方法与&lt;em&gt;指标&lt;/em&gt;在 &lt;code&gt;0..&lt;a href=&quot;indexable#size-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt; ，所以转换的负指数，积极的这里是没有必要的。</target>
        </trans-unit>
        <trans-unit id="67e05a891666b74f6a4b089360ea70fa449b265d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; makes sure to invoke this method with &lt;em&gt;index&lt;/em&gt; in &lt;code&gt;0..&lt;a href=&quot;slice#size:Int32-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt;, so converting negative indices to positive ones is not needed here.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; 确保调用此方法与&lt;em&gt;指标&lt;/em&gt;在 &lt;code&gt;0..&lt;a href=&quot;slice#size:Int32-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt; ，所以转换的负指数，积极的这里是没有必要的。</target>
        </trans-unit>
        <trans-unit id="847004bc7fa1526d9ad85f23bb34fcbc06287165" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; makes sure to invoke this method with &lt;em&gt;index&lt;/em&gt; in &lt;code&gt;0..&lt;a href=&quot;staticarray#size-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt;, so converting negative indices to positive ones is not needed here.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; 确保调用此方法与&lt;em&gt;指标&lt;/em&gt;在 &lt;code&gt;0..&lt;a href=&quot;staticarray#size-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt; ，所以转换的负指数，积极的这里是没有必要的。</target>
        </trans-unit>
        <trans-unit id="e8635f79bdca94b476cf904ce140e63ba4cf672e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; makes sure to invoke this method with &lt;em&gt;index&lt;/em&gt; in &lt;code&gt;0..&lt;a href=&quot;tuple#size-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt;, so converting negative indices to positive ones is not needed here.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; 确保调用此方法与&lt;em&gt;指标&lt;/em&gt;在 &lt;code&gt;0..&lt;a href=&quot;tuple#size-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt; ，所以转换的负指数，积极的这里是没有必要的。</target>
        </trans-unit>
        <trans-unit id="e85b1a7310bfbf25b06fd06b06b507e354bc8303" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;: enable &lt;code&gt;SO_LINGER&lt;/code&gt; and set timeout to &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; seconds</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; ：启用 &lt;code&gt;SO_LINGER&lt;/code&gt; 并将超时设置为 &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 秒</target>
        </trans-unit>
        <trans-unit id="e742134c1fa9f989b256393a5ee32f07ff43180b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;invalidlocationnameerror&quot;&gt;InvalidLocationNameError&lt;/a&gt;&lt;/code&gt; is raised if a location name cannot be found in the time zone database.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;invalidlocationnameerror&quot;&gt;InvalidLocationNameError&lt;/a&gt;&lt;/code&gt; 如果在时区数据库中找不到位置名称，则会引发 InvalidLocationNameError。</target>
        </trans-unit>
        <trans-unit id="96f9f0c61edff5aadd92531f56d35adcbe83b9e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;invalidtimezoneoffseterror&quot;&gt;InvalidTimezoneOffsetError&lt;/a&gt;&lt;/code&gt; is raised if &lt;code&gt;&lt;a href=&quot;zone#new(name:String?,offset:Int32,dst:Bool)-class-method&quot;&gt;Time::Location::Zone.new&lt;/a&gt;&lt;/code&gt; receives an invalid time zone offset.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;invalidtimezoneoffseterror&quot;&gt;InvalidTimezoneOffsetError&lt;/a&gt;&lt;/code&gt; 如果 &lt;code&gt;&lt;a href=&quot;zone#new(name:String?,offset:Int32,dst:Bool)-class-method&quot;&gt;Time::Location::Zone.new&lt;/a&gt;&lt;/code&gt; 收到无效的时区偏移量，则会引发 InvalidTimezoneOffsetError。</target>
        </trans-unit>
        <trans-unit id="42407023169cbb2023c7e4f9f675845747cf102f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;invalidtzdataerror&quot;&gt;InvalidTZDataError&lt;/a&gt;&lt;/code&gt; is raised if a zoneinfo file contains invalid time zone data.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;invalidtzdataerror&quot;&gt;InvalidTZDataError&lt;/a&gt;&lt;/code&gt; 如果zoneinfo文件包含无效的时区数据，则会引发 InvalidTZDataError。</target>
        </trans-unit>
        <trans-unit id="557ba62d9c4dd1ec653df0b683f80955f2ae33f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; defines returns &lt;code&gt;false&lt;/code&gt;, but including types may override.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 定义返回 &lt;code&gt;false&lt;/code&gt; ，但包括的类型可能会覆盖。</target>
        </trans-unit>
        <trans-unit id="a1adc966e03accb4b70bc16346d536846c686d79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; defines this is a no-op method, but including types may override.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 定义这是一种无操作方法，但包括类型在内的方法可能会覆盖。</target>
        </trans-unit>
        <trans-unit id="6cd78a250365b959ea09828f1883488dd8430182" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;io#read(slice:Bytes)-instance-method&quot;&gt;#read(slice : Bytes)&lt;/a&gt;&lt;/code&gt;: read at most &lt;em&gt;slice.size&lt;/em&gt; bytes from IO into &lt;em&gt;slice&lt;/em&gt; and return the number of bytes read</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;io#read(slice:Bytes)-instance-method&quot;&gt;#read(slice : Bytes)&lt;/a&gt;&lt;/code&gt; ：最多将&lt;em&gt; slice.size&lt;/em&gt;个字节从IO读取到&lt;em&gt; slice中，&lt;/em&gt;并返回读取的字节数</target>
        </trans-unit>
        <trans-unit id="284319b4a1bf6dcde7bd85294943695edb13d633" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;io#write(slice:Bytes):Nil-instance-method&quot;&gt;#write(slice : Bytes)&lt;/a&gt;&lt;/code&gt;: write the whole &lt;em&gt;slice&lt;/em&gt; into the IO</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;io#write(slice:Bytes):Nil-instance-method&quot;&gt;#write(slice : Bytes)&lt;/a&gt;&lt;/code&gt; ：将整个&lt;em&gt;切片&lt;/em&gt;写入IO</target>
        </trans-unit>
        <trans-unit id="acb5180f7bbfda83a361773121bce47ada1d35a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ipaddress&quot;&gt;IPAddress&lt;/a&gt;&lt;/code&gt; won't resolve domains, including &lt;code&gt;localhost&lt;/code&gt;. If you must resolve an IP, or don't know whether a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; constains an IP or a domain name, you should use &lt;code&gt;&lt;a href=&quot;addrinfo#resolve(domain,service,family:Family?=nil,type:Type=nil,protocol:Protocol=Protocol::IP,timeout=nil):Array(Addrinfo)-class-method&quot;&gt;Addrinfo.resolve&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ipaddress&quot;&gt;IPAddress&lt;/a&gt;&lt;/code&gt; 不会解析域，包括 &lt;code&gt;localhost&lt;/code&gt; 。如果必须解析IP，或者不知道 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 是包含IP还是域名，则应改用 &lt;code&gt;&lt;a href=&quot;addrinfo#resolve(domain,service,family:Family?=nil,type:Type=nil,protocol:Protocol=Protocol::IP,timeout=nil):Array(Addrinfo)-class-method&quot;&gt;Addrinfo.resolve&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aeec33f556b316756ec1a4d500b2eb51a04b661e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; redefines many of &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;&lt;/code&gt;'s method in a lazy way, returning iterators instead of arrays.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; 以一种惰性的方式重新定义了 &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;&lt;/code&gt; 的许多方法，返回了迭代器而不是数组。</target>
        </trans-unit>
        <trans-unit id="c99f38e240cb4a16069e5a58b5f570a8d9e1975c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;iteratorwrapper&quot;&gt;IteratorWrapper&lt;/a&gt;&lt;/code&gt; eliminates some boilerplate when defining an &lt;code&gt;&lt;a href=&quot;../iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; that wraps another iterator.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;iteratorwrapper&quot;&gt;IteratorWrapper&lt;/a&gt;&lt;/code&gt; 在定义包装另一个迭代器的 &lt;code&gt;&lt;a href=&quot;../iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; 时， IteratorWrapper消除了一些样板。</target>
        </trans-unit>
        <trans-unit id="e47a42daac6a57741d08231169ecfd93a2843106" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt; must receive a series of named arguments, or a named tuple literal, or a hash literal, whose keys will define Crystal properties.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt; 必须接收一系列命名参数，命名元组文字或哈希文字，其键将定义Crystal属性。</target>
        </trans-unit>
        <trans-unit id="6a958397db2db12bde95c78996e7a57c0f0a1d37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;json#parse(input:String%7CIO):Any-class-method&quot;&gt;JSON.parse&lt;/a&gt;&lt;/code&gt; can read from an &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; directly (such as a file) which saves allocating a string:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;json#parse(input:String%7CIO):Any-class-method&quot;&gt;JSON.parse&lt;/a&gt;&lt;/code&gt; 可以直接从 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; （例如文件）中读取，从而节省了分配字符串的时间：</target>
        </trans-unit>
        <trans-unit id="4ee805b544c76402f490ac1485d4100dae864153" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;json#parse(input:String%7CIO):Any-class-method&quot;&gt;JSON.parse&lt;/a&gt;&lt;/code&gt; will return an &lt;code&gt;&lt;a href=&quot;json/any&quot;&gt;Any&lt;/a&gt;&lt;/code&gt;, which is a convenient wrapper around all possible JSON types, making it easy to traverse a complex JSON structure but requires some casts from time to time, mostly via some method invocations.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;json#parse(input:String%7CIO):Any-class-method&quot;&gt;JSON.parse&lt;/a&gt;&lt;/code&gt; 将返回 &lt;code&gt;&lt;a href=&quot;json/any&quot;&gt;Any&lt;/a&gt;&lt;/code&gt; ，这是对所有可能的JSON类型的便捷包装，使遍历复杂的JSON结构变得容易，但有时需要进行一些强制类型转换，主要是通过某些方法调用。</target>
        </trans-unit>
        <trans-unit id="f9c2e6f43da64d7679e873e68c397aab963bb453" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; maps time instants to the zone in use at that time. It typically represents the collection of time offsets observed in a certain geographical area.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; 将时刻映射到当时正在使用的区域。它通常表示在特定地理区域中观察到的时间偏移量的集合。</target>
        </trans-unit>
        <trans-unit id="650a7b18a9ef0eec6814fe24b31b1f73936c6b08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;log/entrieschecker#check(level:Severity,message:String,file=__FILE__,line=__LINE__):self-instance-method&quot;&gt;EntriesChecker#check&lt;/a&gt;&lt;/code&gt; will find the next entry which matches the level and message. &lt;code&gt;&lt;a href=&quot;log/entrieschecker#next(level:Severity,message:String,file=__FILE__,line=__LINE__):self-instance-method&quot;&gt;EntriesChecker#next&lt;/a&gt;&lt;/code&gt; will validate that the following entry in the list matches the given level and message. &lt;code&gt;&lt;a href=&quot;log/entrieschecker#clear-instance-method&quot;&gt;EntriesChecker#clear&lt;/a&gt;&lt;/code&gt; will clear the emitted and captured entries.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;log/entrieschecker#check(level:Severity,message:String,file=__FILE__,line=__LINE__):self-instance-method&quot;&gt;EntriesChecker#check&lt;/a&gt;&lt;/code&gt; 将找到与级别和消息匹配的下一个条目。 &lt;code&gt;&lt;a href=&quot;log/entrieschecker#next(level:Severity,message:String,file=__FILE__,line=__LINE__):self-instance-method&quot;&gt;EntriesChecker#next&lt;/a&gt;&lt;/code&gt; 将验证列表中的以下条目是否与给定的级别和消息相匹配。 &lt;code&gt;&lt;a href=&quot;log/entrieschecker#clear-instance-method&quot;&gt;EntriesChecker#clear&lt;/a&gt;&lt;/code&gt; 将清除发出和捕获的条目。</target>
        </trans-unit>
        <trans-unit id="ac130a5bc09d89999a2f00cc97c840f527053504" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;log/entrieschecker#empty(file=__FILE__,line=__LINE__)-instance-method&quot;&gt;EntriesChecker#empty&lt;/a&gt;&lt;/code&gt; validates there are no pending entries to match.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;log/entrieschecker#empty(file=__FILE__,line=__LINE__)-instance-method&quot;&gt;EntriesChecker#empty&lt;/a&gt;&lt;/code&gt; 验证没有匹配的未决条目。</target>
        </trans-unit>
        <trans-unit id="37d1bb2854313e17781564cc23b879741dab1540" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;log/entrieschecker#entry:Entry-instance-method&quot;&gt;EntriesChecker#entry&lt;/a&gt;&lt;/code&gt; returns the last matched &lt;code&gt;&lt;a href=&quot;log/entry&quot;&gt;Entry&lt;/a&gt;&lt;/code&gt;. Useful to check additional entry properties other than the message.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;log/entrieschecker#entry:Entry-instance-method&quot;&gt;EntriesChecker#entry&lt;/a&gt;&lt;/code&gt; 返回最后匹配的 &lt;code&gt;&lt;a href=&quot;log/entry&quot;&gt;Entry&lt;/a&gt;&lt;/code&gt; 。对检查消息以外的其他条目属性很有用。</target>
        </trans-unit>
        <trans-unit id="7782c3d560ba85c826d8e56cd743f9ef5049efbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;matchdata&quot;&gt;Regex::MatchData&lt;/a&gt;&lt;/code&gt; is the type of the special variable &lt;code&gt;$~&lt;/code&gt;, and is the type returned by &lt;code&gt;&lt;a href=&quot;../regex#match(str,pos=0,options=Regex::Options::None):MatchData?-instance-method&quot;&gt;Regex#match&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../string#match(regex:Regex,pos=0):Regex::MatchData?-instance-method&quot;&gt;String#match&lt;/a&gt;&lt;/code&gt;. It encapsulates all the results of a regular expression match.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;matchdata&quot;&gt;Regex::MatchData&lt;/a&gt;&lt;/code&gt; 是特殊变量 &lt;code&gt;$~&lt;/code&gt; 的类型，并且是 &lt;code&gt;&lt;a href=&quot;../regex#match(str,pos=0,options=Regex::Options::None):MatchData?-instance-method&quot;&gt;Regex#match&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../string#match(regex:Regex,pos=0):Regex::MatchData?-instance-method&quot;&gt;String#match&lt;/a&gt;&lt;/code&gt; 返回的类型。它封装了正则表达式匹配的所有结果。</target>
        </trans-unit>
        <trans-unit id="b9513d86446dfeee17dbcc2d684e951e3a0ee366" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; is the base type of all Crystal objects.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; 是所有Crystal对象的基本类型。</target>
        </trans-unit>
        <trans-unit id="dca2c68d1f5589d0f8aecc467ffe5797ff8e2dac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;object#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; (and &lt;code&gt;&lt;a href=&quot;object#inspect(io:IO):Nil-instance-method&quot;&gt;#inspect(io)&lt;/a&gt;&lt;/code&gt;) are the methods used when you invoke &lt;code&gt;&lt;a href=&quot;object#to_s:String-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;object#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; on an object that holds other objects and wants to show them. For example when you invoke &lt;code&gt;&lt;a href=&quot;array#to_s(io:IO):Nil-instance-method&quot;&gt;Array#to_s&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;object#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; will be invoked on each element:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;object#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; （和 &lt;code&gt;&lt;a href=&quot;object#inspect(io:IO):Nil-instance-method&quot;&gt;#inspect(io)&lt;/a&gt;&lt;/code&gt; ）是在包含其他对象并想要显示它们的对象上调用 &lt;code&gt;&lt;a href=&quot;object#to_s:String-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;object#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; 时使用的方法。例如，当您调用 &lt;code&gt;&lt;a href=&quot;array#to_s(io:IO):Nil-instance-method&quot;&gt;Array#to_s&lt;/a&gt;&lt;/code&gt; 时，将在每个元素上调用 &lt;code&gt;&lt;a href=&quot;object#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5bdefc07e023d0609c3e6e9ed1dda15c620be60a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;optionparser&quot;&gt;OptionParser&lt;/a&gt;&lt;/code&gt; also supports subcommands.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;optionparser&quot;&gt;OptionParser&lt;/a&gt;&lt;/code&gt; 还支持子命令。</target>
        </trans-unit>
        <trans-unit id="f12ca9426d158bae768e251e29e3c57438fc88c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;optionparser&quot;&gt;OptionParser&lt;/a&gt;&lt;/code&gt; is a class for command-line options processing. It supports:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;optionparser&quot;&gt;OptionParser&lt;/a&gt;&lt;/code&gt; 是用于命令行选项处理的类。它支持：</target>
        </trans-unit>
        <trans-unit id="a2265b8cf8894f9eed9fdafd6068f32bc0adaa43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;parsecontext#read_alias(node,type:T.class,&amp;amp;)forallT-instance-method&quot;&gt;#read_alias&lt;/a&gt;&lt;/code&gt; must be invoked before an instance is created</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;parsecontext#read_alias(node,type:T.class,&amp;amp;)forallT-instance-method&quot;&gt;#read_alias&lt;/a&gt;&lt;/code&gt; 必须在创建实例之前被调用</target>
        </trans-unit>
        <trans-unit id="0dc5754da5a7603be157db58a3eb0db821a33fc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;parsecontext#read_alias(node,type:T.class,&amp;amp;block)forallT-instance-method&quot;&gt;#read_alias&lt;/a&gt;&lt;/code&gt; must be invoked before an instance is created</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;parsecontext#read_alias(node,type:T.class,&amp;amp;block)forallT-instance-method&quot;&gt;#read_alias&lt;/a&gt;&lt;/code&gt; 必须在创建实例之前被调用</target>
        </trans-unit>
        <trans-unit id="281734edbf581fd013256959bb06ae6edd10727b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;parsecontext#record_anchor(node,object:T):NilforallT-instance-method&quot;&gt;#record_anchor&lt;/a&gt;&lt;/code&gt; must be invoked after an instance is created and before its members are deserialized.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;parsecontext#record_anchor(node,object:T):NilforallT-instance-method&quot;&gt;#record_anchor&lt;/a&gt;&lt;/code&gt; 必须在创建实例之后且反序列化其成员之前被调用。</target>
        </trans-unit>
        <trans-unit id="d1bbac570cd565067fffc23abe1eb3804ef2c781" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;partialcomparable&quot;&gt;PartialComparable&lt;/a&gt;&lt;/code&gt; uses &lt;code&gt;&lt;a href=&quot;partialcomparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; to implement the conventional comparison operators (&lt;code&gt;&lt;a href=&quot;partialcomparable#%3C(other:T)-instance-method&quot;&gt;#&amp;lt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;partialcomparable#%3C=(other:T)-instance-method&quot;&gt;#&amp;lt;=&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;partialcomparable#==(other:T)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;partialcomparable#%3E=(other:T)-instance-method&quot;&gt;#&amp;gt;=&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;partialcomparable#%3E(other:T)-instance-method&quot;&gt;#&amp;gt;&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;partialcomparable&quot;&gt;PartialComparable&lt;/a&gt;&lt;/code&gt; 使用 &lt;code&gt;&lt;a href=&quot;partialcomparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; 来实现常规比较运算符（ &lt;code&gt;&lt;a href=&quot;partialcomparable#%3C(other:T)-instance-method&quot;&gt;#&amp;lt;&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;partialcomparable#%3C=(other:T)-instance-method&quot;&gt;#&amp;lt;=&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;partialcomparable#==(other:T)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;partialcomparable#%3E=(other:T)-instance-method&quot;&gt;#&amp;gt;=&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;partialcomparable#%3E(other:T)-instance-method&quot;&gt;#&amp;gt;&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="80ae6405f10875ed7b5f77cdc1c73f2f2029560c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;path#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;Path.new&lt;/a&gt;()&lt;/code&gt; means &lt;code&gt;&lt;a href=&quot;path#posix(path:Path):Path-class-method&quot;&gt;Path.posix&lt;/a&gt;&lt;/code&gt; on POSIX platforms and &lt;code&gt;Path.windows()&lt;/code&gt; on Windows platforms.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;path#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;Path.new&lt;/a&gt;()&lt;/code&gt; 是指 &lt;code&gt;&lt;a href=&quot;path#posix(path:Path):Path-class-method&quot;&gt;Path.posix&lt;/a&gt;&lt;/code&gt; 对POSIX平台和 &lt;code&gt;Path.windows()&lt;/code&gt; 在Windows平台上。</target>
        </trans-unit>
        <trans-unit id="39a0c2550ac9dfa0e01818cf3f83ab02c4fbf32c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;path#posix(path:Path):Path-class-method&quot;&gt;Path.posix&lt;/a&gt;()&lt;/code&gt; creates a new POSIX path</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;path#posix(path:Path):Path-class-method&quot;&gt;Path.posix&lt;/a&gt;()&lt;/code&gt; 创建一个新的POSIX路径</target>
        </trans-unit>
        <trans-unit id="1c4b265257aa3b15a99fd6e153a1379cbd8b8f93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;punycode&quot;&gt;Punycode&lt;/a&gt;&lt;/code&gt; provides an interface for IDNA encoding (&lt;a href=&quot;https://tools.ietf.org/html/rfc5980&quot;&gt;RFC 5980&lt;/a&gt;), defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc3492&quot;&gt;RFC 3492&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;punycode&quot;&gt;Punycode&lt;/a&gt;&lt;/code&gt; 为&lt;a href=&quot;https://tools.ietf.org/html/rfc3492&quot;&gt;RFC 3492中&lt;/a&gt;定义的IDNA编码（&lt;a href=&quot;https://tools.ietf.org/html/rfc5980&quot;&gt; RFC 5980&lt;/a&gt;）提供了一个接口。</target>
        </trans-unit>
        <trans-unit id="63b7837b0102a7735b2fb1efeda573ded938028f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; provides an interface for random values generation, using a pseudo random number generator (PRNG).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; 使用伪随机数生成器（PRNG）提供了用于随机值生成的接口。</target>
        </trans-unit>
        <trans-unit id="2fb4d4f99666c7273cfa3c23205d2585bff7c688" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; is the base class of classes you define in your program. It is set as a class' superclass when you don't specify one:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; 是您在程序中定义的类的基类。当您不指定类时，将其设置为类的超类：</target>
        </trans-unit>
        <trans-unit id="1be96d52b6055334f2451675b458100c052b846c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;secure&quot;&gt;Random::Secure&lt;/a&gt;&lt;/code&gt; generates random numbers from a secure source provided by the system.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;secure&quot;&gt;Random::Secure&lt;/a&gt;&lt;/code&gt; 从系统提供的安全来源生成随机数。</target>
        </trans-unit>
        <trans-unit id="9433f0de2b29f54486561553ea4bc398a5b8efd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;server&quot;&gt;HTTP::Server&lt;/a&gt;&lt;/code&gt; will try to fill this property, and its value will have a format like &quot;IP:port&quot;, but this format is not guaranteed. Middlewares can overwrite this value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;server&quot;&gt;HTTP::Server&lt;/a&gt;&lt;/code&gt; 将尝试填充此属性，并且其值将具有&amp;ldquo; IP：port&amp;rdquo;之类的格式，但是不能保证此格式。中间件可以覆盖此值。</target>
        </trans-unit>
        <trans-unit id="94a676f7b243b2a762043c72fa75cf636ad78a44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;server#bind(socket:Socket::Server):Nil-instance-method&quot;&gt;#bind(uri : URI)&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;server#bind(socket:Socket::Server):Nil-instance-method&quot;&gt;#bind(uri : String)&lt;/a&gt;&lt;/code&gt; parse socket configuration for one of these types from an &lt;code&gt;&lt;a href=&quot;../uri&quot;&gt;URI&lt;/a&gt;&lt;/code&gt;. This can be useful for injecting plain text configuration values.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;server#bind(socket:Socket::Server):Nil-instance-method&quot;&gt;#bind(uri : URI)&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;server#bind(socket:Socket::Server):Nil-instance-method&quot;&gt;#bind(uri : String)&lt;/a&gt;&lt;/code&gt; 从 &lt;code&gt;&lt;a href=&quot;../uri&quot;&gt;URI&lt;/a&gt;&lt;/code&gt; 解析这些类型之一的套接字配置。这对于注入纯文本配置值很有用。</target>
        </trans-unit>
        <trans-unit id="a5e224939335e12b92a665ffd6b5ec68a4c9a081" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; assumes that the identity of each element does not change while it is stored. Modifying an element of a set will render the set to an unreliable state.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; 假定每个元素的标识在存储时都不会更改。修改集合中的元素将使集合处于不可靠状态。</target>
        </trans-unit>
        <trans-unit id="1a27262b7fce762e0b83e8c680dd38dd43b2def0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; implements a collection of unordered values with no duplicates.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; 实现了无重复值的无序集合。</target>
        </trans-unit>
        <trans-unit id="24a9d3806a42fe37fd2a5e1202a6a56c93c26873" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; uses &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; as storage, so you must note the following points:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; 使用 &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; 作为存储，因此必须注意以下几点：</target>
        </trans-unit>
        <trans-unit id="1a3167f1a6f37fe89db792b1f28663eb066ec958" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;span&quot;&gt;Time::Span&lt;/a&gt;&lt;/code&gt; represents one period of time.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;span&quot;&gt;Time::Span&lt;/a&gt;&lt;/code&gt; 代表一个时间段。</target>
        </trans-unit>
        <trans-unit id="05154658b8e2a5f36dde3cdb3625daf9e7dc403c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;staticarray&quot;&gt;StaticArray&lt;/a&gt;&lt;/code&gt; is a generic type with type argument &lt;code&gt;T&lt;/code&gt; specifying the type of its elements and &lt;code&gt;N&lt;/code&gt; the fixed size. For example &lt;code&gt;&lt;a href=&quot;staticarray&quot;&gt;StaticArray&lt;/a&gt;(&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;, 3)&lt;/code&gt; is a static array of &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; with three elements.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;staticarray&quot;&gt;StaticArray&lt;/a&gt;&lt;/code&gt; 是一种泛型类型，类型参数 &lt;code&gt;T&lt;/code&gt; 指定其元素的类型， &lt;code&gt;N&lt;/code&gt; 指定固定大小。例如 &lt;code&gt;&lt;a href=&quot;staticarray&quot;&gt;StaticArray&lt;/a&gt;(&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;, 3)&lt;/code&gt; 是一个静态数组 &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 具有三个元素。</target>
        </trans-unit>
        <trans-unit id="b8c162189a068676e9efac764ef23216776e3a26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;stringscanner&quot;&gt;StringScanner&lt;/a&gt;&lt;/code&gt; provides for lexical scanning operations on a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;stringscanner&quot;&gt;StringScanner&lt;/a&gt;&lt;/code&gt; 提供对 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 的词法扫描操作。</target>
        </trans-unit>
        <trans-unit id="76e695cc043510e387eab2318b28c609311f2569" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;struct&quot;&gt;Struct&lt;/a&gt;&lt;/code&gt; is the base type of structs you create in your program. It is set as a struct's superstruct when you don't specify one:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;struct&quot;&gt;Struct&lt;/a&gt;&lt;/code&gt; 是您在程序中创建的结构的基本类型。当您不指定结构时，将其设置为结构的上层结构：</target>
        </trans-unit>
        <trans-unit id="64ab27060cb4e4127bdd3e3e63617e5793d6c085" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; instances representing a specific instant can be created by &lt;code&gt;&lt;a href=&quot;time#utc:Time-class-method&quot;&gt;.utc&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;time#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; with the date-time specified as individual arguments:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 可以通过 &lt;code&gt;&lt;a href=&quot;time#utc:Time-class-method&quot;&gt;.utc&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;time#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; 创建具有特定时刻的时间实例，并将日期时间指定为单独的参数：</target>
        </trans-unit>
        <trans-unit id="5214f63d8b539be4b03278201f849c56e0fc8505" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; instances representing a specific instant can be created by &lt;code&gt;&lt;a href=&quot;time#utc:Time-class-method&quot;&gt;.utc&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;time#new(year:Int32,month:Int32,day:Int32,hour:Int32=0,minute:Int32=0,second:Int32=0,*,nanosecond:Int32=0,location:Location=Location.local):Time-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; with the date-time specified as individual arguments:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 可以通过 &lt;code&gt;&lt;a href=&quot;time#utc:Time-class-method&quot;&gt;.utc&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;time#new(year:Int32,month:Int32,day:Int32,hour:Int32=0,minute:Int32=0,second:Int32=0,*,nanosecond:Int32=0,location:Location=Location.local):Time-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; 并使用指定为单独参数的日期时间来创建表示特定时刻的时间实例：</target>
        </trans-unit>
        <trans-unit id="176f32e569e4d4df548769ed0f77e4c63354cb09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; represents a date-time instant in &lt;a href=&quot;https://www.w3.org/International/articles/definitions-time/#incremental_time&quot;&gt;incremental time&lt;/a&gt; observed in a specific time zone.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 代表在特定时区中观察到的&lt;a href=&quot;https://www.w3.org/International/articles/definitions-time/#incremental_time&quot;&gt;增量时间中&lt;/a&gt;的日期时间瞬间。</target>
        </trans-unit>
        <trans-unit id="9d8a449b1f11236dc61f56d01e0dba556d465ca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time#day:Int32-instance-method&quot;&gt;#day&lt;/a&gt;&lt;/code&gt;: &lt;code&gt;1&lt;/code&gt; - &lt;code&gt;28&lt;/code&gt;/&lt;code&gt;29&lt;/code&gt;/&lt;code&gt;30&lt;/code&gt;/&lt;code&gt;31&lt;/code&gt; (depending on month and year)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time#day:Int32-instance-method&quot;&gt;#day&lt;/a&gt;&lt;/code&gt; ： &lt;code&gt;1&lt;/code&gt; - &lt;code&gt;28&lt;/code&gt; / &lt;code&gt;29&lt;/code&gt; 日 / &lt;code&gt;30&lt;/code&gt; / &lt;code&gt;31&lt;/code&gt; （取决于年份和月份）</target>
        </trans-unit>
        <trans-unit id="38984c47a1ec0860d411c7fe93d404e2d387b12f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time#day_of_week:Time::DayOfWeek-instance-method&quot;&gt;#day_of_week&lt;/a&gt;&lt;/code&gt;: &lt;code&gt;1..7&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time#day_of_week:Time::DayOfWeek-instance-method&quot;&gt;#day_of_week&lt;/a&gt;&lt;/code&gt; ： &lt;code&gt;1..7&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4161087c2b39aca1e6b2aa5c877dd8c2e1365fa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time#hour:Int32-instance-method&quot;&gt;#hour&lt;/a&gt;&lt;/code&gt;: &lt;code&gt;0..23&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time#hour:Int32-instance-method&quot;&gt;#hour&lt;/a&gt;&lt;/code&gt; ： &lt;code&gt;0..23&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dacecd8ccfcdd512f9572afa2463a9ba865e66d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time#minute:Int32-instance-method&quot;&gt;#minute&lt;/a&gt;&lt;/code&gt;: &lt;code&gt;0..59&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time#minute:Int32-instance-method&quot;&gt;#minute&lt;/a&gt;&lt;/code&gt; ： &lt;code&gt;0..59&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="16e53a0f36e0871071db4a73fe2574c423ffb0cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time#month:Int32-instance-method&quot;&gt;#month&lt;/a&gt;&lt;/code&gt;: &lt;code&gt;1..12&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time#month:Int32-instance-method&quot;&gt;#month&lt;/a&gt;&lt;/code&gt; ： &lt;code&gt;1..12&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd9ecc49d9a40c2c08244ca4753df54c3bd967a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time#nanosecond:Int32-instance-method&quot;&gt;#nanosecond&lt;/a&gt;&lt;/code&gt;: &lt;code&gt;0..999_999_999&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time#nanosecond:Int32-instance-method&quot;&gt;#nanosecond&lt;/a&gt;&lt;/code&gt; ： &lt;code&gt;0..999_999_999&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1997613fe07cea7e7c2209989b3ce7a3ddf738b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time#second:Int32-instance-method&quot;&gt;#second&lt;/a&gt;&lt;/code&gt;: &lt;code&gt;0..59&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time#second:Int32-instance-method&quot;&gt;#second&lt;/a&gt;&lt;/code&gt; ： &lt;code&gt;0..59&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a6f68f8979073fd89941e87698f5c855625089d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time#to_local_in(location:Location)-instance-method&quot;&gt;#to_local_in&lt;/a&gt;&lt;/code&gt; allows changing the time zone while keeping the same local date-time (wall clock) which results in a different instant on the time line.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time#to_local_in(location:Location)-instance-method&quot;&gt;#to_local_in&lt;/a&gt;&lt;/code&gt; 允许更改时区，同时保留相同的本地日期时间（挂钟），这会导致时间轴上的时刻不同。</target>
        </trans-unit>
        <trans-unit id="9572e77acbe644ddb829440cc90365db134468d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time#year:Int32-instance-method&quot;&gt;#year&lt;/a&gt;&lt;/code&gt;: &lt;code&gt;1..9999&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time#year:Int32-instance-method&quot;&gt;#year&lt;/a&gt;&lt;/code&gt; ： &lt;code&gt;1..9999&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="068b36689da22c617e4d4491569982df7412d52b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time/location#UTC&quot;&gt;Time::Location::UTC&lt;/a&gt;&lt;/code&gt; will only be used as &lt;code&gt;&lt;a href=&quot;time#location:Location-instance-method&quot;&gt;#location&lt;/a&gt;&lt;/code&gt; if the formatted time does not contain any time zone information. The return value can't be assumed to be a UTC time (this can be achieved by calling &lt;code&gt;&lt;a href=&quot;time#to_utc:Time-instance-method&quot;&gt;#to_utc&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time/location#UTC&quot;&gt;Time::Location::UTC&lt;/a&gt;&lt;/code&gt; 如果格式化的时间不包含任何时区信息，则 Time :: Location :: UTC仅用作 &lt;code&gt;&lt;a href=&quot;time#location:Location-instance-method&quot;&gt;#location&lt;/a&gt;&lt;/code&gt; 。返回值不能假定为UTC时间（可以通过调用 &lt;code&gt;&lt;a href=&quot;time#to_utc:Time-instance-method&quot;&gt;#to_utc&lt;/a&gt;&lt;/code&gt; 来实现）。</target>
        </trans-unit>
        <trans-unit id="d3590b75c9a013fa400419ce712fa7404159180a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time/location#local-class-method&quot;&gt;Time::Location.local&lt;/a&gt;&lt;/code&gt; will only be used as &lt;code&gt;&lt;a href=&quot;time#location:Location-instance-method&quot;&gt;#location&lt;/a&gt;&lt;/code&gt; if the formatted time does not contain any time zone information. The return value can't be assumed to be a UTC time (this can be achieved by calling &lt;code&gt;&lt;a href=&quot;time#to_local:Time-instance-method&quot;&gt;#to_local&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time/location#local-class-method&quot;&gt;Time::Location.local&lt;/a&gt;&lt;/code&gt; 如果格式化的时间不包含任何时区信息，则 Time :: Location.local仅用作 &lt;code&gt;&lt;a href=&quot;time#location:Location-instance-method&quot;&gt;#location&lt;/a&gt;&lt;/code&gt; 。返回值不能假定为UTC时间（可以通过调用 &lt;code&gt;&lt;a href=&quot;time#to_local:Time-instance-method&quot;&gt;#to_local&lt;/a&gt;&lt;/code&gt; 来实现）。</target>
        </trans-unit>
        <trans-unit id="464acc5cec5443282198875b6f776622fb6d828f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time/location#local:Location?-class-method&quot;&gt;Time::Location.local&lt;/a&gt;&lt;/code&gt; will only be used as &lt;code&gt;&lt;a href=&quot;time#location:Location-instance-method&quot;&gt;#location&lt;/a&gt;&lt;/code&gt; if the formatted time does not contain any time zone information. The return value can't be assumed to be a UTC time (this can be achieved by calling &lt;code&gt;&lt;a href=&quot;time#to_local:Time-instance-method&quot;&gt;#to_local&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time/location#local:Location?-class-method&quot;&gt;Time::Location.local&lt;/a&gt;&lt;/code&gt; 如果格式化的时间不包含任何时区信息，则Time :: Location.local仅用作 &lt;code&gt;&lt;a href=&quot;time#location:Location-instance-method&quot;&gt;#location&lt;/a&gt;&lt;/code&gt; 。返回值不能假定为UTC时间（可以通过调用 &lt;code&gt;&lt;a href=&quot;time#to_local:Time-instance-method&quot;&gt;#to_local&lt;/a&gt;&lt;/code&gt; 来实现）。</target>
        </trans-unit>
        <trans-unit id="17969937fcad851ad277d8e4cf81b5256b65dcc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#decode(string:String,*,plus_to_space:Bool=false):String-class-method&quot;&gt;.decode(string : String, *, plus_to_space : Bool = false)&lt;/a&gt; : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;: Decodes a URL-encoded string.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#decode(string:String,*,plus_to_space:Bool=false):String-class-method&quot;&gt;.decode(string : String, *, plus_to_space : Bool = false)&lt;/a&gt; : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; ：解码URL编码的字符串。</target>
        </trans-unit>
        <trans-unit id="46696f6fd24f1475f53ee4a15022d7b289d8d936" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#decode(string:String,io:IO,*,plus_to_space:Bool=false):Nil-class-method&quot;&gt;.decode(string : String, io : IO, *, plus_to_space : Bool = false)&lt;/a&gt; : &lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt;: Decodes a URL-encoded string to an IO.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#decode(string:String,io:IO,*,plus_to_space:Bool=false):Nil-class-method&quot;&gt;.decode(string : String, io : IO, *, plus_to_space : Bool = false)&lt;/a&gt; : &lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; ：将URL编码的字符串解码为IO。</target>
        </trans-unit>
        <trans-unit id="bd6d246f69b6bad5bf7af8e85ad79f35e9ae71fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#decode(string:String,io:IO,*,plus_to_space:Bool=false):Nil-class-method&quot;&gt;.decode&lt;/a&gt;&lt;/code&gt; encodes plus literally by default.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#decode(string:String,io:IO,*,plus_to_space:Bool=false):Nil-class-method&quot;&gt;.decode&lt;/a&gt;&lt;/code&gt; 默认情况下， .decode编码加字面量。</target>
        </trans-unit>
        <trans-unit id="851f635a66a7d8f35acc9053240765131d35a21d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#decode(string:String,io:IO,*,plus_to_space:Bool=false):Nil-class-method&quot;&gt;.decode&lt;/a&gt;&lt;/code&gt; is the reverse operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#decode(string:String,io:IO,*,plus_to_space:Bool=false):Nil-class-method&quot;&gt;.decode&lt;/a&gt;&lt;/code&gt; 是相反的操作。</target>
        </trans-unit>
        <trans-unit id="dec74dffd3ccb556686dc0eb11f02a16c7d181fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#decode_www_form(string:String,*,plus_to_space:Bool=true):String-class-method&quot;&gt;.decode_www_form(string : String, *, plus_to_space : Bool = true)&lt;/a&gt; : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;: Decodes an &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; string component.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#decode_www_form(string:String,*,plus_to_space:Bool=true):String-class-method&quot;&gt;.decode_www_form(string : String, *, plus_to_space : Bool = true)&lt;/a&gt; : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; ：解码 &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; 字符串组件。</target>
        </trans-unit>
        <trans-unit id="ba5b11f582f57148a494bd7be9bfed1e2f75b799" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#decode_www_form(string:String,io:IO,*,plus_to_space:Bool=true):Nil-class-method&quot;&gt;.decode_www_form(string : String, io : IO, *, plus_to_space : Bool = true)&lt;/a&gt; : &lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt;: Decodes an &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; string component to an IO.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#decode_www_form(string:String,io:IO,*,plus_to_space:Bool=true):Nil-class-method&quot;&gt;.decode_www_form(string : String, io : IO, *, plus_to_space : Bool = true)&lt;/a&gt; : &lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; ：将 &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; 字符串组件解码为IO。</target>
        </trans-unit>
        <trans-unit id="fca055a9cb25859644ee985246d3945d85eac3df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#decode_www_form(string:String,io:IO,*,plus_to_space:Bool=true):Nil-class-method&quot;&gt;.decode_www_form&lt;/a&gt;&lt;/code&gt; encodes plus to space by default.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#decode_www_form(string:String,io:IO,*,plus_to_space:Bool=true):Nil-class-method&quot;&gt;.decode_www_form&lt;/a&gt;&lt;/code&gt; 默认将加号编码为空格。</target>
        </trans-unit>
        <trans-unit id="c8011049facdd2d605dcecb5b201bca67d078f26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#decode_www_form(string:String,io:IO,*,plus_to_space:Bool=true):Nil-class-method&quot;&gt;.decode_www_form&lt;/a&gt;&lt;/code&gt; is the reverse operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#decode_www_form(string:String,io:IO,*,plus_to_space:Bool=true):Nil-class-method&quot;&gt;.decode_www_form&lt;/a&gt;&lt;/code&gt; 是相反的操作。</target>
        </trans-unit>
        <trans-unit id="be26d9f9ece715d8a9cc6b1686e77a2ac1ff7a6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#encode(string:String,*,space_to_plus:Bool=false):String-class-method&quot;&gt;.encode(string : String, *, space_to_plus : Bool = false)&lt;/a&gt; : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;: URL-encodes a string.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#encode(string:String,*,space_to_plus:Bool=false):String-class-method&quot;&gt;.encode(string : String, *, space_to_plus : Bool = false)&lt;/a&gt; : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; ：URL编码一个字符串。</target>
        </trans-unit>
        <trans-unit id="ed3c2714bf855ab6edfb89a88113116e66484b0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#encode(string:String,io:IO,*,space_to_plus:Bool=false):Nil-class-method&quot;&gt;.encode(string : String, io : IO, *, space_to_plus : Bool = false)&lt;/a&gt; : &lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt;: URL-encodes a string to an IO.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#encode(string:String,io:IO,*,space_to_plus:Bool=false):Nil-class-method&quot;&gt;.encode(string : String, io : IO, *, space_to_plus : Bool = false)&lt;/a&gt; : &lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; ：URL将字符串编码为IO。</target>
        </trans-unit>
        <trans-unit id="d443775c26a185d502532483f3b8dd5a00ce9688" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#encode(string:String,io:IO,*,space_to_plus:Bool=false):Nil-class-method&quot;&gt;.encode&lt;/a&gt;&lt;/code&gt; does not escape reserved characters.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#encode(string:String,io:IO,*,space_to_plus:Bool=false):Nil-class-method&quot;&gt;.encode&lt;/a&gt;&lt;/code&gt; 不会转义保留字符。</target>
        </trans-unit>
        <trans-unit id="5046950462972dadf5c3674c0d877a61bf08cb18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#encode(string:String,io:IO,*,space_to_plus:Bool=false):Nil-class-method&quot;&gt;.encode&lt;/a&gt;&lt;/code&gt; is the reverse operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#encode(string:String,io:IO,*,space_to_plus:Bool=false):Nil-class-method&quot;&gt;.encode&lt;/a&gt;&lt;/code&gt; 是相反的操作。</target>
        </trans-unit>
        <trans-unit id="32b275606a8094bc5b0609c37922d574a68c3676" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,*,space_to_plus:Bool=true):String-class-method&quot;&gt;.encode_www_form(string : String, *, space_to_plus : Bool = true)&lt;/a&gt; : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;: Encodes a string as a &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; component.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,*,space_to_plus:Bool=true):String-class-method&quot;&gt;.encode_www_form(string : String, *, space_to_plus : Bool = true)&lt;/a&gt; : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; ：将字符串编码为 &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; 组件。</target>
        </trans-unit>
        <trans-unit id="b1bdc3032da9fe68c3f27c9b1048c8de112c78a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,*,space_to_plus:Bool=true):String-class-method&quot;&gt;.encode_www_form&lt;/a&gt;&lt;/code&gt; also escapes reserved characters.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,*,space_to_plus:Bool=true):String-class-method&quot;&gt;.encode_www_form&lt;/a&gt;&lt;/code&gt; 也转义保留字符。</target>
        </trans-unit>
        <trans-unit id="25593e5e41a025f7fd8a2d89bbf56e140dc451b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,*,space_to_plus:Bool=true):String-class-method&quot;&gt;.encode_www_form&lt;/a&gt;&lt;/code&gt; is the reverse operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,*,space_to_plus:Bool=true):String-class-method&quot;&gt;.encode_www_form&lt;/a&gt;&lt;/code&gt; 是相反的操作。</target>
        </trans-unit>
        <trans-unit id="0b643df2361141386606456ddc1f3c87d35537be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,io:IO,*,space_to_plus:Bool=true):Nil-class-method&quot;&gt;.encode_www_form(string : String, io : IO, *, space_to_plus : Bool = true)&lt;/a&gt; : &lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt;: Encodes a string as a &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; component to an IO.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,io:IO,*,space_to_plus:Bool=true):Nil-class-method&quot;&gt;.encode_www_form(string : String, io : IO, *, space_to_plus : Bool = true)&lt;/a&gt; : &lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; ：将字符串编码为IO的 &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; 组件。</target>
        </trans-unit>
        <trans-unit id="58229f5115bae02ca3053328172c348f8e3d1498" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,io:IO,*,space_to_plus:Bool=true):Nil-class-method&quot;&gt;.encode_www_form&lt;/a&gt;&lt;/code&gt; also escapes reserved characters.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,io:IO,*,space_to_plus:Bool=true):Nil-class-method&quot;&gt;.encode_www_form&lt;/a&gt;&lt;/code&gt; 也转义保留字符。</target>
        </trans-unit>
        <trans-unit id="85c1bcf6360772c2bf0e8d76c02031f2ac42703b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,io:IO,*,space_to_plus:Bool=true):Nil-class-method&quot;&gt;.encode_www_form&lt;/a&gt;&lt;/code&gt; is the reverse operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,io:IO,*,space_to_plus:Bool=true):Nil-class-method&quot;&gt;.encode_www_form&lt;/a&gt;&lt;/code&gt; 是相反的操作。</target>
        </trans-unit>
        <trans-unit id="1552c2db50389cffa78000ac74d99d8c5fd587a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#host:String?-instance-method&quot;&gt;#host&lt;/a&gt;&lt;/code&gt; is lowercased.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#host:String?-instance-method&quot;&gt;#host&lt;/a&gt;&lt;/code&gt; 是小写的。</target>
        </trans-unit>
        <trans-unit id="31ef7e36718796b0eba3db251094dc8a3cf8aab0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#path:String-instance-method&quot;&gt;#path&lt;/a&gt;&lt;/code&gt; is resolved to a minimal, semantical equivalent representation removing dot segments &lt;code&gt;/.&lt;/code&gt; and &lt;code&gt;/..&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#path:String-instance-method&quot;&gt;#path&lt;/a&gt;&lt;/code&gt; 解析为一个最小的语义等效表示形式，删除了点段 &lt;code&gt;/.&lt;/code&gt; 和 &lt;code&gt;/..&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bdf02311d14b23294ccdbb153d06b54838fa51d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#port:Int32?-instance-method&quot;&gt;#port&lt;/a&gt;&lt;/code&gt; is removed if it is the &lt;code&gt;.default_port?&lt;/code&gt; of the scheme.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#port:Int32?-instance-method&quot;&gt;#port&lt;/a&gt;&lt;/code&gt; 如果 #port是 &lt;code&gt;.default_port?&lt;/code&gt; 该计划。</target>
        </trans-unit>
        <trans-unit id="143e62541812bc43d08bd84f373b82aa5790814d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#scheme:String?-instance-method&quot;&gt;#scheme&lt;/a&gt;&lt;/code&gt; is lowercased.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#scheme:String?-instance-method&quot;&gt;#scheme&lt;/a&gt;&lt;/code&gt; 是小写的。</target>
        </trans-unit>
        <trans-unit id="67b59b8cab46acb5563118af01361d8096779c25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; is the base type of the primitive types (&lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;&lt;/code&gt;), &lt;code&gt;&lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;pointer&quot;&gt;Pointer&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;tuple&quot;&gt;Tuple&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;staticarray&quot;&gt;StaticArray&lt;/a&gt;&lt;/code&gt; and all structs.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; 是基本类型（ &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;&lt;/code&gt; ）， &lt;code&gt;&lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;pointer&quot;&gt;Pointer&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;tuple&quot;&gt;Tuple&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;staticarray&quot;&gt;StaticArray&lt;/a&gt;&lt;/code&gt; 和所有结构的基本类型。</target>
        </trans-unit>
        <trans-unit id="90ee166e3a28efc4d88f701636d77af7b9f97a81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xml#parse(string:String,options:ParserOptions=ParserOptions.default):Node-class-method&quot;&gt;XML#parse&lt;/a&gt;&lt;/code&gt; will parse xml from &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; and return xml document as an &lt;code&gt;&lt;a href=&quot;xml/node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt; which represents all kinds of xml nodes.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xml#parse(string:String,options:ParserOptions=ParserOptions.default):Node-class-method&quot;&gt;XML#parse&lt;/a&gt;&lt;/code&gt; 将解析来自 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 的 xml，并将xml文档作为代表各种xml节点的 &lt;code&gt;&lt;a href=&quot;xml/node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="7a93a17df81c6a37abbf98877ba63609a68dc483" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;yaml#dump(object,io:IO)-class-method&quot;&gt;YAML.dump&lt;/a&gt;&lt;/code&gt; generates the YAML representation for an object. An &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; can be passed and it will be written there, otherwise it will be returned as a string. Similarly, &lt;code&gt;#to_yaml&lt;/code&gt; (with or without an &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;) on any object does the same.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;yaml#dump(object,io:IO)-class-method&quot;&gt;YAML.dump&lt;/a&gt;&lt;/code&gt; 为对象生成YAML表示。可以传递一个 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; ，并将其写入那里，否则将以字符串形式返回。类似地，任何对象上的 &lt;code&gt;#to_yaml&lt;/code&gt; （带有或不带有 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; ）都一样。</target>
        </trans-unit>
        <trans-unit id="9407662ea14799adfa9b290094943565e989a144" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;yaml#parse(data:String%7CIO):Any-class-method&quot;&gt;YAML.parse&lt;/a&gt;&lt;/code&gt; can read from an &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; directly (such as a file) which saves allocating a string:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;yaml#parse(data:String%7CIO):Any-class-method&quot;&gt;YAML.parse&lt;/a&gt;&lt;/code&gt; 可以直接从 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; （例如文件）中读取，从而节省了分配字符串的时间：</target>
        </trans-unit>
        <trans-unit id="9ca997e9f013ba6c30e8388fed933310cfe80846" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;yaml#parse(data:String%7CIO):Any-class-method&quot;&gt;YAML.parse&lt;/a&gt;&lt;/code&gt; will return an &lt;code&gt;&lt;a href=&quot;yaml/any&quot;&gt;Any&lt;/a&gt;&lt;/code&gt;, which is a convenient wrapper around all possible YAML core types, making it easy to traverse a complex YAML structure but requires some casts from time to time, mostly via some method invocations.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;yaml#parse(data:String%7CIO):Any-class-method&quot;&gt;YAML.parse&lt;/a&gt;&lt;/code&gt; 将返回 &lt;code&gt;&lt;a href=&quot;yaml/any&quot;&gt;Any&lt;/a&gt;&lt;/code&gt; ，这是对所有可能的YAML核心类型的方便包装，使它易于遍历复杂的YAML结构，但有时需要进行一些强制类型转换，主要是通过某些方法调用。</target>
        </trans-unit>
        <trans-unit id="f67856a153c0078e4a77bf8acebe2198f66e424b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;Compress::Zip::File&lt;/a&gt;&lt;/code&gt; is the preferred method to read zip files if you can provide a &lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;File&lt;/a&gt;&lt;/code&gt;, because it's a bit more flexible and provides more complete information for zip entries (such as comments).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;Compress::Zip::File&lt;/a&gt;&lt;/code&gt; 如果可以提供 &lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; ，则Compress :: Zip :: File是读取zip文件的首选方法，因为它更加灵活，并且为zip条目（例如注释）提供了更完整的信息。</target>
        </trans-unit>
        <trans-unit id="18c29d83c7876e1d5b9fc066e6c43c8837308f97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;Compress::Zip::File&lt;/a&gt;&lt;/code&gt;: can read zip entries from a &lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; or from an &lt;code&gt;&lt;a href=&quot;../io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; and provides random read access to its entries.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;Compress::Zip::File&lt;/a&gt;&lt;/code&gt; ：可以从 &lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; 读取zip条目，并提供对其条目的随机读取访问权限。</target>
        </trans-unit>
        <trans-unit id="74e7557535fecf90c57a220f267c58964d3907d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; is the preferred method to read zip files if you can provide a &lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;File&lt;/a&gt;&lt;/code&gt;, because it's a bit more flexible and provides more complete information for zip entries (such as comments).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; 如果可以提供 &lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; ，则 Zip :: File是读取zip文件的首选方法，因为它更加灵活，并且为zip条目（例如注释）提供了更完整的信息。</target>
        </trans-unit>
        <trans-unit id="d5d50cfa4931554180fe95ab88e2037119eeab0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt;: can read zip entries from a &lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; or from an &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; and provides random read access to its entries.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; ：可以从 &lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; 读取zip条目，并提供对其条目的随机读取访问权限。</target>
        </trans-unit>
        <trans-unit id="89d1f14562b642f9bc9b7adebe0322518f52ef52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zip/reader&quot;&gt;Compress::Zip::Reader&lt;/a&gt;&lt;/code&gt;: can only read zip entries sequentially from any &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zip/reader&quot;&gt;Compress::Zip::Reader&lt;/a&gt;&lt;/code&gt; ：只能从任何 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 顺序读取zip条目。</target>
        </trans-unit>
        <trans-unit id="32e8411c2398041caf02dd9aee656ad9ceb3c9a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zip/reader&quot;&gt;Zip::Reader&lt;/a&gt;&lt;/code&gt;: can only read zip entries sequentially from any &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zip/reader&quot;&gt;Zip::Reader&lt;/a&gt;&lt;/code&gt; ：只能从任何 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 顺序读取zip条目。</target>
        </trans-unit>
        <trans-unit id="0de93a81a03efda0b77956037b351e8d1261ca58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&lt;/code&gt;, &lt;code&gt;[]=&lt;/code&gt;, &lt;code&gt;+=&lt;/code&gt;, &lt;code&gt;&amp;amp;+=&lt;/code&gt;, &lt;code&gt;-=&lt;/code&gt;, &lt;code&gt;&amp;amp;-=&lt;/code&gt;, &lt;code&gt;*=&lt;/code&gt;, &lt;code&gt;&amp;amp;*=&lt;/code&gt;, &lt;code&gt;/=&lt;/code&gt;, &lt;code&gt;//=&lt;/code&gt;, &lt;code&gt;%=&lt;/code&gt;, &lt;code&gt;|=&lt;/code&gt;, &lt;code&gt;&amp;amp;=&lt;/code&gt;,&lt;code&gt;^=&lt;/code&gt;,&lt;code&gt;**=&lt;/code&gt;,&lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt;,&lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;||=&lt;/code&gt;, &lt;code&gt;&amp;amp;&amp;amp;=&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt; ， &lt;code&gt;[]=&lt;/code&gt; ， &lt;code&gt;+=&lt;/code&gt; ， &lt;code&gt;&amp;amp;+=&lt;/code&gt; ， &lt;code&gt;-=&lt;/code&gt; ， &lt;code&gt;&amp;amp;-=&lt;/code&gt; ， &lt;code&gt;*=&lt;/code&gt; ， &lt;code&gt;&amp;amp;*=&lt;/code&gt; ， &lt;code&gt;/=&lt;/code&gt; ， &lt;code&gt;//=&lt;/code&gt; ， &lt;code&gt;%=&lt;/code&gt; ， &lt;code&gt;|=&lt;/code&gt; ， &lt;code&gt;&amp;amp;=&lt;/code&gt; ， &lt;code&gt;^=&lt;/code&gt; ， &lt;code&gt;**=&lt;/code&gt; ， &lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt; ， &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; ， &lt;code&gt;||=&lt;/code&gt; ， &lt;code&gt;&amp;amp;&amp;amp;=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6acfca44ac2b42553d8da6f104eefabd5d125690" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;==&lt;/code&gt; &amp;ndash; equals</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt; &amp;ndash;等于</target>
        </trans-unit>
        <trans-unit id="7e63a6c1bb2748f8c594339286ac978eb3667eb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;=~&lt;/code&gt;, &lt;code&gt;!~&lt;/code&gt;, &lt;code&gt;===&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt; ， &lt;code&gt;!=&lt;/code&gt; ， &lt;code&gt;=~&lt;/code&gt; ， &lt;code&gt;!~&lt;/code&gt; ， &lt;code&gt;===&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1ba39f0299873f1b247e71b1b47f540323e499d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;==&lt;/code&gt;: Checks whether the values of the operands are equal</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt; ：检查操作数的值是否相等</target>
        </trans-unit>
        <trans-unit id="5346f143130a1650dda696e4bafc3e08303c9d50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;===&lt;/code&gt; &amp;ndash; &lt;a href=&quot;case&quot;&gt;case equality&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;===&lt;/code&gt; &amp;ndash; &lt;a href=&quot;case&quot;&gt;大小写相等&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e23b6381c9b581caa5a24cbbfb5e5debb785364" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;===&lt;/code&gt;: Checks whether the left hand operand matches the right hand operand in &lt;a href=&quot;case&quot;&gt;case equality&lt;/a&gt;. This operator is applied in &lt;code&gt;case ... when&lt;/code&gt; conditions.</source>
          <target state="translated">&lt;code&gt;===&lt;/code&gt; ：检查是否&lt;a href=&quot;case&quot;&gt;等于大小写&lt;/a&gt;的左操作数与右操作数匹配。该运算符适用于 &lt;code&gt;case ... when&lt;/code&gt; 情况。</target>
        </trans-unit>
        <trans-unit id="74e8fa7e2386c2b568459d75dd74bddcffc504f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=~&lt;/code&gt;: Checks whether the value of the first operand matches the value of the second operand with pattern matching.</source>
          <target state="translated">&lt;code&gt;=~&lt;/code&gt; ：检查第一个操作数的值是否与模式匹配的第二个操作数的值匹配。</target>
        </trans-unit>
        <trans-unit id="c41f6638706362b055946939c973e5c6b5a19d76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; matches any one character excluding &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; 匹配除 &lt;code&gt;/&lt;/code&gt; 以外的任何一个字符。</target>
        </trans-unit>
        <trans-unit id="5be6c8b8f40f2d92e3ecd4e678a94444ac7bd950" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(&quot;pcre&quot;)]&lt;/code&gt; will lookup for a shared library.</source>
          <target state="translated">&lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(&quot;pcre&quot;)]&lt;/code&gt; 将查找共享库。</target>
        </trans-unit>
        <trans-unit id="dae9face127ecbb81304a589846f90f39b3b651a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(&quot;pcre&quot;, pkg_config: &quot;libpcre&quot;)]&lt;/code&gt; will lookup for a shared library.</source>
          <target state="translated">&lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(&quot;pcre&quot;, pkg_config: &quot;libpcre&quot;)]&lt;/code&gt; 将查找共享库。</target>
        </trans-unit>
        <trans-unit id="f879c00e4286eb2990e44a37d8628dc80592a294" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(&quot;pcre&quot;, static: true)]&lt;/code&gt; will favor static libraries over shared libraries.</source>
          <target state="translated">&lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(&quot;pcre&quot;, static: true)]&lt;/code&gt; 将优先使用静态库而不是共享库。</target>
        </trans-unit>
        <trans-unit id="83f2f7b2735218899f4dd5f460916c90b8abd84a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(framework: &quot;Cocoa&quot;)]&lt;/code&gt; will pass &lt;code&gt;-framework Cocoa&lt;/code&gt; to the linker.</source>
          <target state="translated">&lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(framework: &quot;Cocoa&quot;)]&lt;/code&gt; 将 &lt;code&gt;-framework Cocoa&lt;/code&gt; 传递给链接器。</target>
        </trans-unit>
        <trans-unit id="2da01a37bb7ff5c1836f95aad0456c15b571b643" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(ldflags: &quot;-lpcre&quot;)]&lt;/code&gt; will pass &lt;code&gt;-lpcre&lt;/code&gt; straight to the linker.</source>
          <target state="translated">&lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(ldflags: &quot;-lpcre&quot;)]&lt;/code&gt; 将 &lt;code&gt;-lpcre&lt;/code&gt; 直接传递给链接器。</target>
        </trans-unit>
        <trans-unit id="d86977e0bd5338b777b9a56fe6d77dcaa80006f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@[Link(&quot;pcre&quot;)]&lt;/code&gt; will pass &lt;code&gt;-lpcre&lt;/code&gt; to the linker, but the compiler will first try to use &lt;a href=&quot;http://en.wikipedia.org/wiki/Pkg-config&quot;&gt;pkg-config&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;@[Link(&quot;pcre&quot;)]&lt;/code&gt; 将 &lt;code&gt;-lpcre&lt;/code&gt; 传递给链接器，但是编译器将首先尝试使用&lt;a href=&quot;http://en.wikipedia.org/wiki/Pkg-config&quot;&gt;pkg-config&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0ddc84ac69e4a40f8728cc3e1afe2c39ff2f0802" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@[Link(framework: &quot;Cocoa&quot;)]&lt;/code&gt; will pass &lt;code&gt;-framework Cocoa&lt;/code&gt; to the linker (only useful in macOS).</source>
          <target state="translated">&lt;code&gt;@[Link(framework: &quot;Cocoa&quot;)]&lt;/code&gt; 将 &lt;code&gt;-framework Cocoa&lt;/code&gt; 传递给链接器（仅在macOS中有用）。</target>
        </trans-unit>
        <trans-unit id="d0fb34cba5401627a6e33b6ba41f1659fd638d8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@[Link(ldflags: &quot;...&quot;)]&lt;/code&gt; will pass those flags directly to the linker, without modification. For example: &lt;code&gt;@[Link(ldflags: &quot;-lpcre&quot;)]&lt;/code&gt;. A common technique is to use backticks to execute commands: &lt;code&gt;@[Link(ldflags: &quot;`pkg-config libpcre --libs`&quot;)]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@[Link(ldflags: &quot;...&quot;)]&lt;/code&gt; 将这些标志直接传递给链接器，而无需进行修改。例如： &lt;code&gt;@[Link(ldflags: &quot;-lpcre&quot;)]&lt;/code&gt; 。一种常见的技术是使用反引号执行命令： &lt;code&gt;@[Link(ldflags: &quot;`pkg-config libpcre --libs`&quot;)]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97bd45a84ae432477e929837851b51ff93a33f42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array&lt;/code&gt; is passed by reference, so the reference to &lt;code&gt;[&quot;str&quot;]&lt;/code&gt; is stored in the property of &lt;code&gt;strukt&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; 通过引用传递，因此对 &lt;code&gt;[&quot;str&quot;]&lt;/code&gt; 的引用存储在 &lt;code&gt;strukt&lt;/code&gt; 的属性中</target>
        </trans-unit>
        <trans-unit id="617e83d0c8eacbd97e0aae12df99b3254ed88698" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CRYSTAL_CACHE_DIR&lt;/code&gt;: Defines path where Crystal caches partial compilation results for faster subsequent builds. This path is also used to temporarily store executables when Crystal programs are run with &lt;a href=&quot;#crystal-run&quot;&gt;&lt;code&gt;crystal run&lt;/code&gt;&lt;/a&gt; rather than &lt;a href=&quot;#crystal-build&quot;&gt;&lt;code&gt;crystal build&lt;/code&gt;&lt;/a&gt;. Default value is the first directory that either exists or can be created of &lt;code&gt;${XDG_CACHE_HOME}/crystal&lt;/code&gt; (if &lt;code&gt;XDG_CACHE_HOME&lt;/code&gt; is defined), &lt;code&gt;${HOME}/.cache/crystal&lt;/code&gt;, &lt;code&gt;${HOME}/.crystal&lt;/code&gt;, &lt;code&gt;./.crystal&lt;/code&gt;. If &lt;code&gt;CRYSTAL_CACHE_DIR&lt;/code&gt; is set but points to a path that is not writeable, the default values are used instead.</source>
          <target state="translated">&lt;code&gt;CRYSTAL_CACHE_DIR&lt;/code&gt; ：定义Crystal缓存部分编译结果的路径，以便更快地进行后续构建。当Crystal程序以&lt;a href=&quot;#crystal-run&quot;&gt; &lt;code&gt;crystal run&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;#crystal-build&quot;&gt; &lt;code&gt;crystal build&lt;/code&gt; &lt;/a&gt;运行时，该路径还用于临时存储可执行文件。默认值是第一目录，要么存在或可以来创建 &lt;code&gt;${XDG_CACHE_HOME}/crystal&lt;/code&gt; （如果 &lt;code&gt;XDG_CACHE_HOME&lt;/code&gt; 被定义）， &lt;code&gt;${HOME}/.cache/crystal&lt;/code&gt; ， &lt;code&gt;${HOME}/.crystal&lt;/code&gt; ， &lt;code&gt;./.crystal&lt;/code&gt; 。如果设置了 &lt;code&gt;CRYSTAL_CACHE_DIR&lt;/code&gt; ，但指向不可写的路径，则使用默认值。</target>
        </trans-unit>
        <trans-unit id="9ad4b1cec0ff6eca01c48368a7bca30d1a35ab75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CRYSTAL_LIBRARY_PATH&lt;/code&gt;: The compiler uses the paths in this variable as a first lookup destination for static and dynamic libraries that are to be linked. For example, if static libraries are put in &lt;code&gt;build/libs&lt;/code&gt;, setting the environment variable accordingly will tell the compiler to look for libraries there.</source>
          <target state="translated">&lt;code&gt;CRYSTAL_LIBRARY_PATH&lt;/code&gt; ：编译器使用此变量中的路径作为要链接的静态和动态库的第一个查找目标。例如，如果将静态库放入 &lt;code&gt;build/libs&lt;/code&gt; 中，则相应地设置环境变量将告诉编译器在此处查找库。</target>
        </trans-unit>
        <trans-unit id="7919bde6d012b641d1cb0c6c0cf8eb73aedb9838" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CRYSTAL_PATH&lt;/code&gt;: Defines paths where Crystal searches for required files.</source>
          <target state="translated">&lt;code&gt;CRYSTAL_PATH&lt;/code&gt; ：定义Crystal在其中搜索所需文件的路径。</target>
        </trans-unit>
        <trans-unit id="1ce1b8947f837844d63a6151112b7067f336b461" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CRYSTAL_VERSION&lt;/code&gt; is only available as output of &lt;a href=&quot;#crystal-env&quot;&gt;&lt;code&gt;crystal env&lt;/code&gt;&lt;/a&gt;. The compiler neither sets nor reads it.</source>
          <target state="translated">&lt;code&gt;CRYSTAL_VERSION&lt;/code&gt; 仅可用作&lt;a href=&quot;#crystal-env&quot;&gt; &lt;code&gt;crystal env&lt;/code&gt; 的&lt;/a&gt;输出。编译器既不设置也不读取它。</target>
        </trans-unit>
        <trans-unit id="4c0ca7b105a3171b7ccd6c28faa1bcac37d5910a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DB.open&lt;/code&gt; will allow you to easily connect to a database using a connection uri. The schema of the uri determines the expected driver. The following sample connects to a local mysql database named test with user root and password blank.</source>
          <target state="translated">&lt;code&gt;DB.open&lt;/code&gt; 将允许您使用连接uri轻松连接到数据库。uri的模式确定了预期的驱动程序。以下示例连接到名为test的本地mysql数据库，用户root和密码为空。</target>
        </trans-unit>
        <trans-unit id="8a405391dc1fdb098cdf0d947c8176fd33c6be42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Database#query&lt;/code&gt; returns a &lt;code&gt;ResultSet&lt;/code&gt; that needs to be closed. As in &lt;code&gt;Database#open&lt;/code&gt;, if called with a block, the &lt;code&gt;ResultSet&lt;/code&gt; will be closed implicitly.</source>
          <target state="translated">&lt;code&gt;Database#query&lt;/code&gt; 返回需要关闭的 &lt;code&gt;ResultSet&lt;/code&gt; 。与 &lt;code&gt;Database#open&lt;/code&gt; 中一样，如果使用块调用，则 &lt;code&gt;ResultSet&lt;/code&gt; 将隐式关闭。</target>
        </trans-unit>
        <trans-unit id="e85184b5089758b6a97b9486daa72a1d1ad2fd09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Klass&lt;/code&gt; is a class, so it is passed by reference to &lt;code&gt;modify&lt;/code&gt;, and &lt;code&gt;object.array = [&quot;new&quot;]&lt;/code&gt; saves the reference to the newly created array in the original &lt;code&gt;klass&lt;/code&gt; object, not in the copy as it was with the &lt;code&gt;strukt&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Klass&lt;/code&gt; 是一个类，因此它是通过引用传递到 &lt;code&gt;modify&lt;/code&gt; ，和 &lt;code&gt;object.array = [&quot;new&quot;]&lt;/code&gt; 保存在原来的参考到新创建的阵列 &lt;code&gt;klass&lt;/code&gt; 对象，而不是在复制，因为它是与 &lt;code&gt;strukt&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4fcbe2a574f720d694858cb34ca91acadd070dcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Lib&lt;/code&gt; names are prefixed with &lt;code&gt;Lib&lt;/code&gt;. For example: &lt;code&gt;LibC&lt;/code&gt;, &lt;code&gt;LibEvent2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Lib&lt;/code&gt; 名称以 &lt;code&gt;Lib&lt;/code&gt; 为前缀。例如： &lt;code&gt;LibC&lt;/code&gt; ， &lt;code&gt;LibEvent2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a051a95c444f07859b7447628376695436b010b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MyBox.new(value)&lt;/code&gt; delegates to &lt;code&gt;initialize(@value : T)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MyBox.new(value)&lt;/code&gt; 委托 &lt;code&gt;initialize(@value : T)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc81d6b2bf3bdb53b05b4f03c01929524e14257e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NoReturn&lt;/code&gt; can be explicitly set as return type of a method or function definition but will usually be inferred by the compiler.</source>
          <target state="translated">&lt;code&gt;NoReturn&lt;/code&gt; 可以将NoReturn显式设置为方法或函数定义的返回类型，但通常由编译器来推断。</target>
        </trans-unit>
        <trans-unit id="c8a1483b2601eebda8f2d1a043fc58a3bacab672" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NoReturn&lt;/code&gt;: similar to &lt;code&gt;Void&lt;/code&gt;, but the compiler understands that no code can be executed after that invocation.</source>
          <target state="translated">&lt;code&gt;NoReturn&lt;/code&gt; ：类似于 &lt;code&gt;Void&lt;/code&gt; ，但是编译器理解在该调用之后无法执行任何代码。</target>
        </trans-unit>
        <trans-unit id="88f505fd7b9a95f54524d6c8bee5e1c18154c318" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PCRE_DOTALL&lt;/code&gt; changes the &quot;&lt;code&gt;.&lt;/code&gt;&quot; meaning</source>
          <target state="translated">&lt;code&gt;PCRE_DOTALL&lt;/code&gt; 更改&amp;ldquo; &lt;code&gt;.&lt;/code&gt; &amp;rdquo;的含义</target>
        </trans-unit>
        <trans-unit id="bcd1cfe5d03f14c1a912299c84b26351983cb365" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PCRE_MULTILINE&lt;/code&gt; changes &quot;&lt;code&gt;^&lt;/code&gt;&quot; and &quot;&lt;code&gt;$&lt;/code&gt;&quot; meanings</source>
          <target state="translated">&lt;code&gt;PCRE_MULTILINE&lt;/code&gt; 更改了&amp;ldquo; &lt;code&gt;^&lt;/code&gt; &amp;rdquo;和&amp;ldquo; &lt;code&gt;$&lt;/code&gt; &amp;rdquo;的含义</target>
        </trans-unit>
        <trans-unit id="3909fe8f56b1a541cd6d4525f8ef7f8b8a7c59c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Path.new()&lt;/code&gt; means &lt;code&gt;Path.posix&lt;/code&gt; on POSIX platforms and &lt;code&gt;Path.windows()&lt;/code&gt; on Windows platforms.</source>
          <target state="translated">&lt;code&gt;Path.new()&lt;/code&gt; 在POSIX平台上表示 &lt;code&gt;Path.posix&lt;/code&gt; ，在Windows平台上表示 &lt;code&gt;Path.windows()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46cb9401862d472a03ed8ccffc6170f77419b675" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Path.posix()&lt;/code&gt; creates a new POSIX path</source>
          <target state="translated">&lt;code&gt;Path.posix()&lt;/code&gt; 创建一个新的POSIX路径</target>
        </trans-unit>
        <trans-unit id="9fc38a742318d39af2b2c7df4367966234f70a36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Path.windows()&lt;/code&gt; creates a new Windows path</source>
          <target state="translated">&lt;code&gt;Path.windows()&lt;/code&gt; 创建一个新的Windows路径</target>
        </trans-unit>
        <trans-unit id="5901152464bb481de5ac2c36696592c770948377" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; isn't bound to a type yet, so the compiler binds it to the type of the given argument</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 尚未绑定到类型，因此编译器将其绑定到给定参数的类型</target>
        </trans-unit>
        <trans-unit id="bcce04aa5358fd8f8a99be414929dedf13ba9cfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Void&lt;/code&gt;: the absence of a return value.</source>
          <target state="translated">&lt;code&gt;Void&lt;/code&gt; ：没有返回值。</target>
        </trans-unit>
        <trans-unit id="fcc6131cb0f2b53a9ba60bfc9aace46bdc47cf38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[1, 2, 3]&lt;/code&gt;, &lt;code&gt;[1, 2, 3] of Int32&lt;/code&gt;, &lt;code&gt;%w(one two three)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[1, 2, 3]&lt;/code&gt; &lt;code&gt;[1, 2, 3] of Int32&lt;/code&gt; 1、2、3]，[1、2、3]， &lt;code&gt;%w(one two three)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab3ccd7bdf9aabc0dce3ea090c4ddaf2bc294fb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[]&lt;/code&gt;, &lt;code&gt;[]?&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[]&lt;/code&gt; ， &lt;code&gt;[]?&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e04c806af0a2dda5b03db5671518aba1ce97bd86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[^abc]&lt;/code&gt; matches any one character other than these.</source>
          <target state="translated">&lt;code&gt;[^abc]&lt;/code&gt; 匹配除这些以外的任何一个字符。</target>
        </trans-unit>
        <trans-unit id="b3e2a7192e0b16766e923c49c32540a72ede243f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[a-z]&lt;/code&gt; matches any one character in the range.</source>
          <target state="translated">&lt;code&gt;[a-z]&lt;/code&gt; 匹配范围内的任何一个字符。</target>
        </trans-unit>
        <trans-unit id="ec3f7b2a7808dab128c09c0c5e2ddd8ed740335c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[abc]&lt;/code&gt; matches any one of these character.</source>
          <target state="translated">&lt;code&gt;[abc]&lt;/code&gt; 与以下任一字符匹配。</target>
        </trans-unit>
        <trans-unit id="3c365a129ea545241910ae0154cf999783f1ab3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\\&lt;/code&gt; escapes the next character.</source>
          <target state="translated">&lt;code&gt;\\&lt;/code&gt; 转义下一个字符。</target>
        </trans-unit>
        <trans-unit id="bebea4557f4b5b763c9c266021aa7db770d12bb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^&lt;/code&gt; &amp;ndash; bitwise xor</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; &amp;ndash;按位异或</target>
        </trans-unit>
        <trans-unit id="b0bfad34d92a796ea90eaf85270894aa92689066" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__DIR__&lt;/code&gt; references the full path to the directory where the currently executing crystal file is located.</source>
          <target state="translated">&lt;code&gt;__DIR__&lt;/code&gt; 引用当前执行的Crystal文件所在目录的完整路径。</target>
        </trans-unit>
        <trans-unit id="028b797a284a04149af2b0a7ce9d86271c0da1b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__END_LINE__&lt;/code&gt; is the line number of the &lt;code&gt;end&lt;/code&gt; of the calling block. Can only be used as a default value to a method parameter.</source>
          <target state="translated">&lt;code&gt;__END_LINE__&lt;/code&gt; 是调用块 &lt;code&gt;end&lt;/code&gt; 的行号。只能用作方法参数的默认值。</target>
        </trans-unit>
        <trans-unit id="4171bd99a501811c1e602265d539e55a1a8f239d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__FILE__&lt;/code&gt; references the full path to the currently executing crystal file.</source>
          <target state="translated">&lt;code&gt;__FILE__&lt;/code&gt; 引用当前正在执行的Crystal文件的完整路径。</target>
        </trans-unit>
        <trans-unit id="553103f9774c804cd0962abf92f5baae3f2a88f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__LINE__&lt;/code&gt; is the current line number in the currently executing crystal file. When &lt;code&gt;__LINE__&lt;/code&gt; is declared as the default value to a method parameter, it represents the line number at the location of the method call.</source>
          <target state="translated">&lt;code&gt;__LINE__&lt;/code&gt; 是当前正在执行的Crystal文件中的当前行号。当 &lt;code&gt;__LINE__&lt;/code&gt; 被声明为方法参数的默认值时，它表示方法调用位置的行号。</target>
        </trans-unit>
        <trans-unit id="c33af70e73070ef9d17ac112f9c120d9f01acba1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;`echo foo` &lt;/code&gt;, &lt;code&gt;%x(echo foo)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;`echo foo` &lt;/code&gt; ， &lt;code&gt;%x(echo foo)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1ef4688e6a3236c8acbc31bc048af4bfa4d6660f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a &amp;amp;&amp;amp;= b&lt;/code&gt; transforms to &lt;code&gt;a &amp;amp;&amp;amp; (a = b)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a &amp;amp;&amp;amp;= b&lt;/code&gt; 转换为 &lt;code&gt;a &amp;amp;&amp;amp; (a = b)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e75fde75a2c856fc4fa8cc9d1ac35c6eb9764c49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a ||= b&lt;/code&gt; transforms to &lt;code&gt;a || (a = b)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a ||= b&lt;/code&gt; 转换为 &lt;code&gt;a || (a = b)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80ee088e728eadea2c7ebbacc9a1d636a9381a18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a[i] &amp;amp;&amp;amp;= b&lt;/code&gt; transforms to &lt;code&gt;a[i] = (a[i]? &amp;amp;&amp;amp; b)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a[i] &amp;amp;&amp;amp;= b&lt;/code&gt; 转换为 &lt;code&gt;a[i] = (a[i]? &amp;amp;&amp;amp; b)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d8a9d1d2f7ae21147c6dd7088f16e027ed44e0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a[i] ||= b&lt;/code&gt; transforms to &lt;code&gt;a[i] = (a[i]? || b)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a[i] ||= b&lt;/code&gt; 转换为 &lt;code&gt;a[i] = (a[i]? || b)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc7ddda35445794223915bf504d1bf708311783d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bin/&lt;/code&gt; contains any executables.</source>
          <target state="translated">&lt;code&gt;bin/&lt;/code&gt; 包含任何可执行文件。</target>
        </trans-unit>
        <trans-unit id="53718d276502d9f31b8b3732e4eb52823dcc737d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; and &lt;code&gt;next&lt;/code&gt; can also be used inside an &lt;code&gt;until&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 和 &lt;code&gt;next&lt;/code&gt; 也可以在 &lt;code&gt;until&lt;/code&gt; 中使用。</target>
        </trans-unit>
        <trans-unit id="639d837400c885d5c475b2df1935490991c20484" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; can also accept arguments: these become the method's return value. For example:</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 也可以接受参数：这些参数成为方法的返回值。例如：</target>
        </trans-unit>
        <trans-unit id="1844c1b618530280b5e5b1b776d33d7a663a8d97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; can also take a parameter which will then be the value that gets returned:</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 也可以采用一个参数，该参数将成为返回的值：</target>
        </trans-unit>
        <trans-unit id="f327c8103db6676cba851e931150195437dc7868" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ca&lt;/code&gt;: Path to a file containing the CA certificate chain or a directory containing all CA certificates. See &lt;code&gt;#ca_certificates=&lt;/code&gt; and &lt;code&gt;#ca_certificates_path=&lt;/code&gt;, respectively. Required if &lt;code&gt;verify_mode&lt;/code&gt; is &lt;code&gt;peer&lt;/code&gt; or &lt;code&gt;force-peer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ca&lt;/code&gt; ：包含CA证书链的文件或包含所有CA证书的目录的路径。分别参见 &lt;code&gt;#ca_certificates=&lt;/code&gt; 和 &lt;code&gt;#ca_certificates_path=&lt;/code&gt; 。如果 &lt;code&gt;verify_mode&lt;/code&gt; 是 &lt;code&gt;peer&lt;/code&gt; 或 &lt;code&gt;force-peer&lt;/code&gt; ,则为必需。</target>
        </trans-unit>
        <trans-unit id="f7ad068e182f82e03f5963401acf5b2ab769b12f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ca&lt;/code&gt;: Path to a file containing the CA certificate chain or a directory containing all CA certificates. See &lt;code&gt;#ca_certificates=&lt;/code&gt; and &lt;code&gt;#ca_certificates_path=&lt;/code&gt;, respectively. Required if &lt;code&gt;verify_mode&lt;/code&gt; is &lt;code&gt;peer&lt;/code&gt;, &lt;code&gt;force-peer&lt;/code&gt; or empty.</source>
          <target state="translated">&lt;code&gt;ca&lt;/code&gt; ：包含CA证书链的文件或包含所有CA证书的目录的路径。分别参见 &lt;code&gt;#ca_certificates=&lt;/code&gt; 和 &lt;code&gt;#ca_certificates_path=&lt;/code&gt; 。如果 &lt;code&gt;verify_mode&lt;/code&gt; 为 &lt;code&gt;peer&lt;/code&gt; ， &lt;code&gt;force-peer&lt;/code&gt; 或为空，则为必需。</target>
        </trans-unit>
        <trans-unit id="1f5af57a933b1d62d860c6704d0218cdf220d701" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cert&lt;/code&gt;&lt;em&gt;(required)&lt;/em&gt;: Path to the file containing the public certificate chain. See &lt;code&gt;#certificate_chain=&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cert&lt;/code&gt; &lt;em&gt;（必填）&lt;/em&gt;：包含公共证书链的文件的路径。请参阅 &lt;code&gt;#certificate_chain=&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd90d218f9da4fba1e6bb982b1dc623186be40ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt; is also useful for creating arrays and collections of class type:</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; 对于创建类类型的数组和集合也很有用：</target>
        </trans-unit>
        <trans-unit id="07f518282c92dc3766d69985a674b7d75e086525" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt; is used to refer to a class type, instead of an instance type.</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; 用于引用类类型，而不是实例类型。</target>
        </trans-unit>
        <trans-unit id="b84e527b9abf30ef03cdec5c1530836aa8072710" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crystal help&lt;/code&gt;: show help about commands and options</source>
          <target state="translated">&lt;code&gt;crystal help&lt;/code&gt; ：显示有关命令和选项的帮助</target>
        </trans-unit>
        <trans-unit id="b41947c7c91507447125fbb186b707f510fc9b2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crystal tool context&lt;/code&gt;: Show context for given location</source>
          <target state="translated">&lt;code&gt;crystal tool context&lt;/code&gt; ：显示给定位置的上下文</target>
        </trans-unit>
        <trans-unit id="b8c297bd481a3a73bb9697e32655bb841e126bb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crystal tool expand&lt;/code&gt;: Show macro expansion for given location</source>
          <target state="translated">&lt;code&gt;crystal tool expand&lt;/code&gt; ：显示给定位置的宏扩展</target>
        </trans-unit>
        <trans-unit id="c08d58bef1ac5e1e2aa3c17aac2e7a3edf1e4566" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crystal tool hierarchy&lt;/code&gt;: Show type hierarchy</source>
          <target state="translated">&lt;code&gt;crystal tool hierarchy&lt;/code&gt; ：显示类型层次结构</target>
        </trans-unit>
        <trans-unit id="afc0062ccc7d5c3b83b56e42786716e7a56afc7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crystal tool implementations&lt;/code&gt;: Show implementations for given call in location</source>
          <target state="translated">&lt;code&gt;crystal tool implementations&lt;/code&gt; ：在位置显示给定调用的实现</target>
        </trans-unit>
        <trans-unit id="3c90eeef391ad2fc595295e306b814a7c8df0f9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crystal tool types&lt;/code&gt;: Show types of main variables</source>
          <target state="translated">&lt;code&gt;crystal tool types&lt;/code&gt; ：显示主要变量的类型</target>
        </trans-unit>
        <trans-unit id="015fe739c7e6098ce7b5606b6d3847d7fa170e7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;describe&lt;/code&gt; and &lt;code&gt;context&lt;/code&gt; take a description as argument (which should usually be a string) and a block containing the individual specs or nested groupings.</source>
          <target state="translated">&lt;code&gt;describe&lt;/code&gt; 和 &lt;code&gt;context&lt;/code&gt; 将描述作为参数（通常应为字符串）和包含各个规范或嵌套分组的块。</target>
        </trans-unit>
        <trans-unit id="abd54a4a0ff10b9978a9df4804704b992ec278c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;describe&lt;/code&gt;, &lt;code&gt;context&lt;/code&gt; and &lt;code&gt;it&lt;/code&gt; blocks can be marked with &lt;code&gt;focus: true&lt;/code&gt;, like this:</source>
          <target state="translated">&lt;code&gt;describe&lt;/code&gt; ， &lt;code&gt;context&lt;/code&gt; 和 &lt;code&gt;it&lt;/code&gt; 块可以用 &lt;code&gt;focus: true&lt;/code&gt; 标记，如下所示：</target>
        </trans-unit>
        <trans-unit id="6d7884cb4679552bcffa511d7bd9cb727492e032" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;describe&lt;/code&gt;, &lt;code&gt;context&lt;/code&gt; and &lt;code&gt;it&lt;/code&gt; blocks can be tagged, like this:</source>
          <target state="translated">&lt;code&gt;describe&lt;/code&gt; ， &lt;code&gt;context&lt;/code&gt; 和 &lt;code&gt;it&lt;/code&gt; 块可以被标记，如下所示：</target>
        </trans-unit>
        <trans-unit id="97e772098a0e9e9b87a004d2ababfaa5af9a8fae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ensure&lt;/code&gt; clauses are usually used for clean up, freeing resources, etc.</source>
          <target state="translated">&lt;code&gt;ensure&lt;/code&gt; 子句通常用于清理，释放资源等。</target>
        </trans-unit>
        <trans-unit id="cd33cb3474a3cd89dd62f4d38a805c600ef515cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extended&lt;/code&gt; is invoked when a module is extended. &lt;code&gt;@type&lt;/code&gt; is the extending type.</source>
          <target state="translated">&lt;code&gt;extended&lt;/code&gt; 模块时将调用extended。 &lt;code&gt;@type&lt;/code&gt; 是扩展类型。</target>
        </trans-unit>
        <trans-unit id="0f63a300cea0ef13546df1dc2b27567f635bc4ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;finished&lt;/code&gt; is called once a type has been completely defined - this includes extensions on that class. Consider the following program:</source>
          <target state="translated">&lt;code&gt;finished&lt;/code&gt; 被调用一次一种类型的已被完全确定-这包括在该类上扩展。考虑以下程序：</target>
        </trans-unit>
        <trans-unit id="852f841b8f35c1416848d114ee3293eeb4b9096d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;finished&lt;/code&gt; is invoked after instance variable types for all classes are known.</source>
          <target state="translated">&lt;code&gt;finished&lt;/code&gt; 知道所有类的实例变量类型之后，调用finished。</target>
        </trans-unit>
        <trans-unit id="5f970ede1517e51f2051f5b8e54ed16f80f8acdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flag?&lt;/code&gt; returns a boolean, so you can use it with &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;flag?&lt;/code&gt; 返回一个布尔值，因此可以将其与 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 和 &lt;code&gt;||&lt;/code&gt; 一起使用：</target>
        </trans-unit>
        <trans-unit id="ac5ca06e145b9da852df01a43f7b57877712a414" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo.bar.*&lt;/code&gt; matches &lt;code&gt;foo.bar&lt;/code&gt; and every nested source</source>
          <target state="translated">&lt;code&gt;foo.bar.*&lt;/code&gt; 匹配 &lt;code&gt;foo.bar&lt;/code&gt; 和每个嵌套的源</target>
        </trans-unit>
        <trans-unit id="8da20dbc5dfaf9037fc130e33cfda9a616d41e88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo.bar&lt;/code&gt; matches &lt;code&gt;foo.bar&lt;/code&gt;, but not its nested sources</source>
          <target state="translated">&lt;code&gt;foo.bar&lt;/code&gt; 匹配 &lt;code&gt;foo.bar&lt;/code&gt; ，但不匹配其嵌套源</target>
        </trans-unit>
        <trans-unit id="5c91216a9c5bbe4c7a7612d2fd6e8d7ae6a75a3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo&lt;/code&gt;, &lt;code&gt;run&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;foo&lt;/code&gt; ， &lt;code&gt;run&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e10df003f3901c7218ec045d7d166fdca6bb4ec0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;host&lt;/code&gt; must be an IP address (v4 or v6), otherwise &lt;code&gt;&lt;a href=&quot;error&quot;&gt;Socket::Error&lt;/a&gt;&lt;/code&gt; will be raised. Domain names will not be resolved.</source>
          <target state="translated">&lt;code&gt;host&lt;/code&gt; 必须是IP地址（v4或v6），否则将引发 &lt;code&gt;&lt;a href=&quot;error&quot;&gt;Socket::Error&lt;/a&gt;&lt;/code&gt; 。域名将无法解析。</target>
        </trans-unit>
        <trans-unit id="6c241fd7fbb6b3f3c979f1c10e27e20b99f9e6fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt;: case-insensitive matching (&lt;code&gt;PCRE_CASELESS&lt;/code&gt;): Unicode letters in the pattern match both upper and lower case letters in the subject string.</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; ：不区分大小写的匹配（ &lt;code&gt;PCRE_CASELESS&lt;/code&gt; ）：模式中的Unicode字母与主题字符串中的大写和小写字母都匹配。</target>
        </trans-unit>
        <trans-unit id="0f1192996f8155a53b0fc27fff8de539cfea806b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt;: ignore case (PCRE_CASELESS)</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; ：忽略大小写（PCRE_CASELESS）</target>
        </trans-unit>
        <trans-unit id="2147026552ac41cf4d776b2bd4db51f43e33273f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;included&lt;/code&gt; is invoked when a module is included. &lt;code&gt;@type&lt;/code&gt; is the including type.</source>
          <target state="translated">&lt;code&gt;included&lt;/code&gt; 当包括模块被调用。 &lt;code&gt;@type&lt;/code&gt; 是包含类型。</target>
        </trans-unit>
        <trans-unit id="6c59a4a58e0f3d6789d17148539597cf9405d22b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inherited&lt;/code&gt; is invoked when a subclass is defined. &lt;code&gt;@type&lt;/code&gt; is the inheriting type.</source>
          <target state="translated">&lt;code&gt;inherited&lt;/code&gt; 定义一个子类时被调用。 &lt;code&gt;@type&lt;/code&gt; 是继承类型。</target>
        </trans-unit>
        <trans-unit id="b843a80d13c0d2e51435e6bc4edb5c3308410bcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;&lt;em&gt;(required)&lt;/em&gt;: Path to private key file. See &lt;code&gt;#private_key=&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; &lt;em&gt;（必填）&lt;/em&gt;：私钥文件的路径。请参阅 &lt;code&gt;#private_key=&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="81471a768640d38ee463cd6a871cf9048608529a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;m&lt;/code&gt;: multiline (PCRE_MULTILINE and PCRE_DOTALL)</source>
          <target state="translated">&lt;code&gt;m&lt;/code&gt; ：多行（PCRE_MULTILINE和PCRE_DOTALL）</target>
        </trans-unit>
        <trans-unit id="6cdfedb9f54ca78ba585cd82bad6d409f12a351a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;m&lt;/code&gt;: multiline matching (&lt;code&gt;PCRE_MULTILINE&lt;/code&gt;): The &lt;em&gt;start of line&lt;/em&gt; (&lt;code&gt;^&lt;/code&gt;) and &lt;em&gt;end of line&lt;/em&gt; (&lt;code&gt;$&lt;/code&gt;) metacharacters match immediately following or immediately before internal newlines in the subject string, respectively, as well as at the very start and end.</source>
          <target state="translated">&lt;code&gt;m&lt;/code&gt; ：多行匹配（ &lt;code&gt;PCRE_MULTILINE&lt;/code&gt; ）：在主题字符串中，行的&lt;em&gt;开头&lt;/em&gt;（ &lt;code&gt;^&lt;/code&gt; ）和&lt;em&gt;行的结尾&lt;/em&gt;（ &lt;code&gt;$&lt;/code&gt; ）元字符分别紧接在内部换行之后或之前，以及在开始和结束时都匹配。</target>
        </trans-unit>
        <trans-unit id="05c4736f339e8d92f22940e62a8827af2e9f7b8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;method_added&lt;/code&gt; is invoked when a new method is defined in the current scope.</source>
          <target state="translated">&lt;code&gt;method_added&lt;/code&gt; 在当前范围内定义新方法时，调用method_added。</target>
        </trans-unit>
        <trans-unit id="aa1c981ee3a6ab70dfa3a42b2842500fc307d95d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;method_missing&lt;/code&gt; is invoked when a method is not found.</source>
          <target state="translated">&lt;code&gt;method_missing&lt;/code&gt; 找不到方法时调用method_missing。</target>
        </trans-unit>
        <trans-unit id="4fb0ceb7c05b774ad246fde3071251a3decb3132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modify&lt;/code&gt; returns the reference to this new array and its content is printed</source>
          <target state="translated">&lt;code&gt;modify&lt;/code&gt; 返回对该新数组的引用，并打印其内容</target>
        </trans-unit>
        <trans-unit id="8a16eccfda38bed9352683d07f7e34d7c02c5173" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;next&lt;/code&gt; can also be used to exit from a block, for example:</source>
          <target state="translated">&lt;code&gt;next&lt;/code&gt; 也可以用于退出一个块，例如：</target>
        </trans-unit>
        <trans-unit id="ee4bcbd6449fedeba1325e27dcbc3dfde717a946" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; and the other object are not comparable</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 如果 &lt;code&gt;self&lt;/code&gt; 和其他对象不具有可比性，则为nil</target>
        </trans-unit>
        <trans-unit id="b9bdf1152d91f64b505846757773f65da78d9571" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nil&lt;/code&gt; if self is &lt;code&gt;NaN&lt;/code&gt; or &lt;em&gt;other&lt;/em&gt; is &lt;code&gt;NaN&lt;/code&gt;, because &lt;code&gt;NaN&lt;/code&gt; values are not comparable</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 如果self是 &lt;code&gt;NaN&lt;/code&gt; 或&lt;em&gt;other&lt;/em&gt;是 &lt;code&gt;NaN&lt;/code&gt; ，则为nil，因为 &lt;code&gt;NaN&lt;/code&gt; 值不可比较</target>
        </trans-unit>
        <trans-unit id="38832aa72bb66df9ed2341531b94fe2c9395b420" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nil&lt;/code&gt; if this IO isn't peekable</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 如果IO不是peekable</target>
        </trans-unit>
        <trans-unit id="dbdf70ead3b44921a3e6e5b5d636f1d02ae5f2de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nil&lt;/code&gt; is commonly used to represent the absence of a value. For example, &lt;code&gt;&lt;a href=&quot;string#index(search:Char,offset=0)-instance-method&quot;&gt;String#index&lt;/a&gt;&lt;/code&gt; returns the position of the character or &lt;code&gt;nil&lt;/code&gt; if it's not in the string:</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 通常用于表示缺少值。例如， &lt;code&gt;&lt;a href=&quot;string#index(search:Char,offset=0)-instance-method&quot;&gt;String#index&lt;/a&gt;&lt;/code&gt; 返回字符的位置；如果字符不在字符串中，则返回 &lt;code&gt;nil&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a7887d905a593dec0082c9a88cec58c2843d16dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nil&lt;/code&gt; is commonly used to represent the absence of a value. For example, &lt;code&gt;&lt;a href=&quot;string#index(search:String,offset=0)-instance-method&quot;&gt;String#index&lt;/a&gt;&lt;/code&gt; returns the position of the character or &lt;code&gt;nil&lt;/code&gt; if it's not in the string:</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 通常用于表示缺少值。例如， &lt;code&gt;&lt;a href=&quot;string#index(search:String,offset=0)-instance-method&quot;&gt;String#index&lt;/a&gt;&lt;/code&gt; 返回字符的位置；如果字符不在字符串中，则返回 &lt;code&gt;nil&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e61cbecf5cfd650cd7c2fe1e97e4299b07779df7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nil&lt;/code&gt;: an exception is raised on invalid byte sequences</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; ：无效字节序列引发异常</target>
        </trans-unit>
        <trans-unit id="bb1cb38c4ca93aa518893526e5e86486784bb832" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nil&lt;/code&gt;: disable &lt;code&gt;SO_LINGER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; ：禁用 &lt;code&gt;SO_LINGER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac71b1f4b80d6e580de447225b7a8a30bea76855" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object.array &amp;lt;&amp;lt; &quot;bar&quot;&lt;/code&gt; appends to this newly created array</source>
          <target state="translated">&lt;code&gt;object.array &amp;lt;&amp;lt; &quot;bar&quot;&lt;/code&gt; 追加到这个新创建的数组</target>
        </trans-unit>
        <trans-unit id="84b791d8c0b64fe15bb27fde90d0675629278485" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object.array = [&quot;new&quot;]&lt;/code&gt; replaces the reference in the &lt;em&gt;copy&lt;/em&gt; of &lt;code&gt;strukt&lt;/code&gt; with the reference to the new array</source>
          <target state="translated">&lt;code&gt;object.array = [&quot;new&quot;]&lt;/code&gt; 用新数组的引用替换 &lt;code&gt;strukt&lt;/code&gt; &lt;em&gt;副本&lt;/em&gt;中的引用</target>
        </trans-unit>
        <trans-unit id="d4183fbc7e29a1f00b7244ab3dc56f2f60f1ce6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; can be a file or folder name and include all Crystal files in that folder tree. Omitting &lt;code&gt;path&lt;/code&gt; is equal to specifying the current working directory.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 可以是文件名或文件夹名，并且包括该文件夹树中的所有Crystal文件。省略 &lt;code&gt;path&lt;/code&gt; 等于指定当前工作目录。</target>
        </trans-unit>
        <trans-unit id="5b9e3a2f03ecfd98955c96a5a5b92346524a640f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pointerof(x)&lt;/code&gt;, where &lt;em&gt;x&lt;/em&gt; is a variable or an instance variable, returns a pointer to that variable:</source>
          <target state="translated">&lt;code&gt;pointerof(x)&lt;/code&gt; ，其中&lt;em&gt;x&lt;/em&gt;是变量或实例变量，返回指向该变量的指针：</target>
        </trans-unit>
        <trans-unit id="3da5e35cfa2c31956b23b2439accb12f04051810" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;private&lt;/code&gt; can be used with &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;module&lt;/code&gt;, &lt;code&gt;lib&lt;/code&gt;, &lt;code&gt;enum&lt;/code&gt;, &lt;code&gt;alias&lt;/code&gt; and constants:</source>
          <target state="translated">&lt;code&gt;private&lt;/code&gt; 可以与 &lt;code&gt;class&lt;/code&gt; ， &lt;code&gt;module&lt;/code&gt; ， &lt;code&gt;lib&lt;/code&gt; ， &lt;code&gt;enum&lt;/code&gt; ， &lt;code&gt;alias&lt;/code&gt; 和常量一起使用：</target>
        </trans-unit>
        <trans-unit id="a96c02650abf0f2f7369ef722d091f83ae265046" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;program.cr&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;program.cr&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="d5cb2d8bbe9c198be7bb0bbe30aab9099292f5ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;q = x&lt;a href=&quot;bigint#tdiv(other:Int):BigInt-instance-method&quot;&gt;.tdiv(y)&lt;/a&gt;&lt;/code&gt; is rounded toward zero</source>
          <target state="translated">&lt;code&gt;q = x&lt;a href=&quot;bigint#tdiv(other:Int):BigInt-instance-method&quot;&gt;.tdiv(y)&lt;/a&gt;&lt;/code&gt; 朝四舍五入</target>
        </trans-unit>
        <trans-unit id="52dedccdb88cdac591c1f4eb716cb994b637ce7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;q = x&lt;a href=&quot;int#tdiv(other:Int)-instance-method&quot;&gt;.tdiv(y)&lt;/a&gt;&lt;/code&gt; is rounded toward zero</source>
          <target state="translated">&lt;code&gt;q = x&lt;a href=&quot;int#tdiv(other:Int)-instance-method&quot;&gt;.tdiv(y)&lt;/a&gt;&lt;/code&gt; 朝四舍五入</target>
        </trans-unit>
        <trans-unit id="d98957d715baed72245006861daee1841e882226" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r = x&lt;a href=&quot;bigint#remainder(other:Int):BigInt-instance-method&quot;&gt;.remainder(y)&lt;/a&gt;&lt;/code&gt; has the sign of the first argument</source>
          <target state="translated">&lt;code&gt;r = x&lt;a href=&quot;bigint#remainder(other:Int):BigInt-instance-method&quot;&gt;.remainder(y)&lt;/a&gt;&lt;/code&gt; 具有第一个参数的符号</target>
        </trans-unit>
        <trans-unit id="c3d35505ff6f66b9c78583e941313fbac46bffcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r = x&lt;a href=&quot;int#remainder(other:Int)-instance-method&quot;&gt;.remainder(y)&lt;/a&gt;&lt;/code&gt; has the sign of the first argument</source>
          <target state="translated">&lt;code&gt;r = x&lt;a href=&quot;int#remainder(other:Int)-instance-method&quot;&gt;.remainder(y)&lt;/a&gt;&lt;/code&gt; 具有第一个参数的符号</target>
        </trans-unit>
        <trans-unit id="80066318a5ad94fabe1391cd3989f61cc0387be7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require &quot;./foo/bar/baz&quot;&lt;/code&gt; will lookup &quot;foo/bar/baz.cr&quot; or &quot;foo/bar/baz/baz.cr&quot; relative to the current file.</source>
          <target state="translated">&lt;code&gt;require &quot;./foo/bar/baz&quot;&lt;/code&gt; 将相对于当前文件查找&amp;ldquo; foo / bar / baz.cr&amp;rdquo;或&amp;ldquo; foo / bar / baz / baz.cr&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="ef0fb31774df7066093a47c7512d1131474068fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require &quot;foo/*&quot;&lt;/code&gt; will require all &quot;.cr&quot; files below the &quot;foo&quot; directory, but not below directories inside &quot;foo&quot;.</source>
          <target state="translated">&lt;code&gt;require &quot;foo/*&quot;&lt;/code&gt; 将要求在&amp;ldquo; foo&amp;rdquo;目录下的所有&amp;ldquo; .cr&amp;rdquo;文件，但在&amp;ldquo; foo&amp;rdquo;内部的目录下不需要。</target>
        </trans-unit>
        <trans-unit id="c4fa9323a9c5f47df82cdfded4b9b6c427f03bbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require &quot;foo/**&quot;&lt;/code&gt; will require all &quot;.cr&quot; files below the &quot;foo&quot; directory, and below directories inside &quot;foo&quot;, recursively.</source>
          <target state="translated">&lt;code&gt;require &quot;foo/**&quot;&lt;/code&gt; 将需要递归地在&amp;ldquo; foo&amp;rdquo;目录下以及&amp;ldquo; foo&amp;rdquo;内部目录下的所有&amp;ldquo; .cr&amp;rdquo;文件。</target>
        </trans-unit>
        <trans-unit id="c2c2cba165aa774aa25ecb0902b84d143f9ab6cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require &quot;foo/bar/baz&quot;&lt;/code&gt; will lookup &quot;foo/bar/baz.cr&quot;, &quot;foo/bar/baz/baz.cr&quot;, &quot;foo/src/bar/baz.cr&quot; or &quot;foo/src/bar/baz/baz.cr&quot; in the require path.</source>
          <target state="translated">&lt;code&gt;require &quot;foo/bar/baz&quot;&lt;/code&gt; 将查找&amp;ldquo; foo / bar / baz.cr&amp;rdquo;，&amp;ldquo; foo / bar / baz / baz.cr&amp;rdquo;，&amp;ldquo; foo / src / bar / baz.cr&amp;rdquo;或&amp;ldquo; foo / src / bar&amp;rdquo; /baz/baz.cr&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="4902ece830bb60018e9bc2e0744068ae3f8da844" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt; and &lt;code&gt;break&lt;/code&gt; can't be used inside a captured block. &lt;code&gt;next&lt;/code&gt; can be used and will exit and give the value of the captured block.</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; 和 &lt;code&gt;break&lt;/code&gt; 不能在捕获的块内使用。 &lt;code&gt;next&lt;/code&gt; 可以使用，将退出并给出捕获块的值。</target>
        </trans-unit>
        <trans-unit id="487b95a45ed4a3467cdfd883569f4d0dace70f63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;runner_options&lt;/code&gt; are provided to the compiled binary executable which runs the specs. They should be separated from the other arguments by a double dash (&lt;code&gt;--&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;runner_options&lt;/code&gt; 提供给运行规范的已编译二进制可执行文件。它们应与其他自变量以双破折号（ &lt;code&gt;--&lt;/code&gt; ）分隔。</target>
        </trans-unit>
        <trans-unit id="8e77e74406c196d0cc5c371b64efaf5a72ea5b41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; can be used in the type grammar to denote a &lt;code&gt;self&lt;/code&gt; type. Refer to the &lt;a href=&quot;type_restrictions&quot;&gt;type restrictions&lt;/a&gt; section.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 可以在类型语法中用于表示 &lt;code&gt;self&lt;/code&gt; 类型。请参阅&lt;a href=&quot;type_restrictions&quot;&gt;类型限制&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="3bb1d888efa1b0ab39699381f04ec3295ac332de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shards&lt;/code&gt; requires the presence of a &lt;code&gt;shard.yml&lt;/code&gt; file in the project folder (working directory). This file describes the project and lists dependencies that are required to build it. A default file can be created by running &lt;a href=&quot;#shards-install&quot;&gt;&lt;code&gt;shards init&lt;/code&gt;&lt;/a&gt;. The file's contents are explained in the &lt;a href=&quot;../guides/writing_shards&quot;&gt;&lt;em&gt;Writing a Shard&lt;/em&gt; guide&lt;/a&gt; and a detailed description of the file format is provided by the &lt;a href=&quot;https://github.com/crystal-lang/shards/blob/master/SPEC.md&quot;&gt;shard.yml specification&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;shards&lt;/code&gt; 需要在项目文件夹（工作目录）中存在 &lt;code&gt;shard.yml&lt;/code&gt; 文件。该文件描述了项目，并列出了构建项目所需的依赖项。可以通过运行&lt;a href=&quot;#shards-install&quot;&gt; &lt;code&gt;shards init&lt;/code&gt; &lt;/a&gt;创建默认文件。该文件的内容在&amp;ldquo; &lt;a href=&quot;../guides/writing_shards&quot;&gt;&lt;em&gt;编写分片&amp;rdquo;&lt;/em&gt;指南中&lt;/a&gt;进行了说明，而文件格式的详细说明由&lt;a href=&quot;https://github.com/crystal-lang/shards/blob/master/SPEC.md&quot;&gt;shard.yml规范提供&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aa7715e98d72752ada6e922a69908994550127ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;spec/&lt;/code&gt; contains the &lt;a href=&quot;../guides/testing&quot;&gt;project's specs&lt;/a&gt;, which can be run with &lt;code&gt;crystal spec&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;spec/&lt;/code&gt; 包含&lt;a href=&quot;../guides/testing&quot;&gt;项目的规范&lt;/a&gt;，可以与 &lt;code&gt;crystal spec&lt;/code&gt; 一起运行。</target>
        </trans-unit>
        <trans-unit id="380e6da48e11df13ee2b74a66278a1120568c29a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src/&lt;/code&gt; contains the project's source code.</source>
          <target state="translated">&lt;code&gt;src/&lt;/code&gt; 包含项目的源代码。</target>
        </trans-unit>
        <trans-unit id="ac1b538a7cb723ec490ad9e1b7f57ff46b129a42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_json&lt;/code&gt;, &lt;code&gt;to_json(&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;)&lt;/code&gt; and &lt;code&gt;to_json(&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;)&lt;/code&gt; methods are provided for primitive types, but you need to define &lt;code&gt;to_json(&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;)&lt;/code&gt; for custom objects, either manually or using &lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;to_json&lt;/code&gt; 为原始类型提供了to_json， &lt;code&gt;to_json(&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;)&lt;/code&gt; 和 &lt;code&gt;to_json(&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;)&lt;/code&gt; 方法，但是您需要手动或使用 &lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt; 为自定义对象定义 &lt;code&gt;to_json(&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="023bf40003760e7192d0a8fe6b05712939bb9743" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_json&lt;/code&gt;, &lt;code&gt;to_json(&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;)&lt;/code&gt; and &lt;code&gt;to_json(&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;)&lt;/code&gt; methods are provided for primitive types, but you need to define &lt;code&gt;to_json(&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;)&lt;/code&gt; for custom objects, either manually or using &lt;code&gt;&lt;a href=&quot;json/serializable&quot;&gt;JSON::Serializable&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;to_json&lt;/code&gt; 为原始类型提供了to_json， &lt;code&gt;to_json(&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;)&lt;/code&gt; 和 &lt;code&gt;to_json(&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;)&lt;/code&gt; 方法，但是您需要手动或使用 &lt;code&gt;&lt;a href=&quot;json/serializable&quot;&gt;JSON::Serializable&lt;/a&gt;&lt;/code&gt; 为自定义对象定义 &lt;code&gt;to_json(&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bdaf0b3eb81d501252bc01a931dbd778cfe346b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; ， &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c1fd28236fd6ce4c9cf8ec516712d1769a8d204d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeof&lt;/code&gt; is allowed in the type grammar. It returns a union type of the type of the passed expressions:</source>
          <target state="translated">&lt;code&gt;typeof&lt;/code&gt; 类型语法中允许使用typeof。它返回传递的表达式类型的并集类型：</target>
        </trans-unit>
        <trans-unit id="13459ee8efc02268ca49b21f8ff6afcab89604a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;verify_mode&lt;/code&gt;: Either &lt;code&gt;peer&lt;/code&gt;, &lt;code&gt;force-peer&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt; or empty (default: &lt;code&gt;none&lt;/code&gt;). See &lt;code&gt;verify_mode=&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;verify_mode&lt;/code&gt; ： &lt;code&gt;peer&lt;/code&gt; ， &lt;code&gt;force-peer&lt;/code&gt; ， &lt;code&gt;none&lt;/code&gt; 或为空（默认值： &lt;code&gt;none&lt;/code&gt; ）。参见 &lt;code&gt;verify_mode=&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06d1fdfbdaddb0c9315d1d6859b2bc6e6d0c0f88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;verify_mode&lt;/code&gt;: Either &lt;code&gt;peer&lt;/code&gt;, &lt;code&gt;force-peer&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt; or empty (default: &lt;code&gt;peer&lt;/code&gt;). See &lt;code&gt;verify_mode=&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;verify_mode&lt;/code&gt; ： &lt;code&gt;peer&lt;/code&gt; ， &lt;code&gt;force-peer&lt;/code&gt; ， &lt;code&gt;none&lt;/code&gt; 或为空（默认值： &lt;code&gt;peer&lt;/code&gt; ）。参见 &lt;code&gt;verify_mode=&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b0ab84f2a1bbf667569df1bda2ca95a22ee7db2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;week&lt;/code&gt;: &lt;code&gt;1..53&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;week&lt;/code&gt; ： &lt;code&gt;1..53&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fbd683bf98dba3bf02587315cceea2f5ca6ed7a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x...y&lt;/code&gt;: Three dots denote an exclusive range, including &lt;code&gt;x&lt;/code&gt; and all values up to but not including &lt;code&gt;y&lt;/code&gt; (in mathematics: &lt;code&gt;[x, y)&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;x...y&lt;/code&gt; ：三个点表示一个唯一范围，包括 &lt;code&gt;x&lt;/code&gt; 和所有不超过 &lt;code&gt;y&lt;/code&gt; 的值（在数学中为 &lt;code&gt;[x, y)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e5604e36620e32fe1696df19f5aa033edd9370ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x..y&lt;/code&gt;: Two dots denote an inclusive range, including &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; and all values in between (in mathematics: &lt;code&gt;[x, y]&lt;/code&gt;) .</source>
          <target state="translated">&lt;code&gt;x..y&lt;/code&gt; ：两个点表示一个包含范围，包括 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 及其之间的所有值（在数学中为 &lt;code&gt;[x, y]&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="49a27fc7a20d67b8271e82f759930d3bc730d63f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt;: extended (PCRE_EXTENDED)</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; ：扩展（PCRE_EXTENDED）</target>
        </trans-unit>
        <trans-unit id="849c8fa185ade3259e49ac00b13e56e37f97522f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt;: extended whitespace matching (&lt;code&gt;PCRE_EXTENDED&lt;/code&gt;): Most white space characters in the pattern are totally ignored except when ignore or inside a character class. Unescaped hash characters &lt;code&gt;#&lt;/code&gt; denote the start of a comment ranging to the end of the line.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; ：扩展的空格匹配（ &lt;code&gt;PCRE_EXTENDED&lt;/code&gt; ）：模式中的大多数空格字符都将被完全忽略，除非忽略或在字符类内部。未转义的井号字符 &lt;code&gt;#&lt;/code&gt; 表示注释的开始，一直到行尾。</target>
        </trans-unit>
        <trans-unit id="edb44515282fef8014e85b3d3dfa47ddf2aa2c21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{&quot;foo&quot; =&amp;gt; 2}&lt;/code&gt;, &lt;code&gt;{} of String =&amp;gt; Int32&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{&quot;foo&quot; =&amp;gt; 2}&lt;/code&gt; ， &lt;code&gt;{} of String =&amp;gt; Int32&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f699fd2f19f66e5c5ea2fc79ff7661c702ce867" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{a,b}&lt;/code&gt; matches subpattern &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{a,b}&lt;/code&gt; 匹配子模式 &lt;code&gt;a&lt;/code&gt; 或 &lt;code&gt;b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="061190fa53c23da14e62c1e4b491e92bd94c1227" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{name: &quot;Crystal&quot;, year: 2011}&lt;/code&gt;, &lt;code&gt;{&quot;this is a key&quot;: 1}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{name: &quot;Crystal&quot;, year: 2011}&lt;/code&gt; ， &lt;code&gt;{&quot;this is a key&quot;: 1}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="33c898b55fed5a4971087c53b8504b3193eeb882" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;|&lt;/code&gt; &amp;ndash; bitwise or</source>
          <target state="translated">&lt;code&gt;|&lt;/code&gt; &amp;ndash;按位或</target>
        </trans-unit>
        <trans-unit id="7da4bef0686a1052ccfdf4950c84c9a5cb406b23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;|&lt;/code&gt;,&lt;code&gt;^&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;|&lt;/code&gt;,&lt;code&gt;^&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="47766f5d3234477e16ffab3f1d2726cd169a0e89" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&amp;amp;block&lt;/em&gt; is never evaluated. It can be used to describe behaviour that is not yet implemented.</source>
          <target state="translated">&lt;em&gt;＆block&lt;/em&gt;从不评估。它可以用来描述尚未实现的行为。</target>
        </trans-unit>
        <trans-unit id="6457e6ef9d7cb92283e05ac9d98008025fcea994" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Give me a place to stand, and I shall move the earth.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;给我一个站立的地方，我将移动地球。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a4fd4731d853684f9c741b8491154929e790933c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Relativization&lt;/em&gt; is the inverse of resolution as that it procudes an URI that resolves to the original when resolved against the base.</source>
          <target state="translated">&lt;em&gt;相对化&lt;/em&gt;是解决方案的反面，因为它会产生一个URI，该URI在针对基数进行解析时会解析为原始URI。</target>
        </trans-unit>
        <trans-unit id="eafe24d487ca714e0c38fda17a654166dc9eff41" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Resolution&lt;/em&gt; is the process of resolving one URI against another, &lt;em&gt;base&lt;/em&gt; URI. The resulting URI is constructed from components of both URIs in the manner specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-5.2.2&quot;&gt;RFC 3986 section 5.2&lt;/a&gt;, taking components from the base URI for those not specified in the original. For hierarchical URIs, the path of the original is resolved against the path of the base and then normalized. See &lt;code&gt;&lt;a href=&quot;uri#resolve(uri:URI%7CString):URI-instance-method&quot;&gt;#resolve&lt;/a&gt;&lt;/code&gt; for examples.</source>
          <target state="translated">&lt;em&gt;解析&lt;/em&gt;是将一个URI与另一个&lt;em&gt;基本&lt;/em&gt; URI 解析的过程。最终的URI由&lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-5.2.2&quot;&gt;RFC 3986第5.2节&lt;/a&gt;指定的方式由这两个URI的组件构成，从基本URI中获取未在原始URI中指定的组件。对于分层URI，原始路径将与基础路径相对应，然后进行规范化。有关示例，请参见 &lt;code&gt;&lt;a href=&quot;uri#resolve(uri:URI%7CString):URI-instance-method&quot;&gt;#resolve&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d887b3779f0668de0fcba3377d98e823c8230e74" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;What's a Shard?&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;什么是碎片？&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="06c334d4510e54bf8fe16b02cdc32bd5c3737af1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;access_token&lt;/em&gt;: the OAuth2::AccessToken to make requests.</source>
          <target state="translated">&lt;em&gt;access_token&lt;/em&gt;：OAuth2 :: AccessToken发出请求。</target>
        </trans-unit>
        <trans-unit id="b7a5e49b65075a94f3416ff7b22f3fe7077617ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;algorithm&lt;/em&gt; specifies which &lt;code&gt;&lt;a href=&quot;algorithm&quot;&gt;OpenSSL::Algorithm&lt;/a&gt;&lt;/code&gt; is to be used.</source>
          <target state="translated">&lt;em&gt;算法&lt;/em&gt;指定要使用的 &lt;code&gt;&lt;a href=&quot;algorithm&quot;&gt;OpenSSL::Algorithm&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d231e68d5ba1c68db6f882c1cbe3c7eb2e3b347f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;backlog&lt;/em&gt; to specify how many pending connections are allowed;</source>
          <target state="translated">&lt;em&gt;待办事项&lt;/em&gt;以指定允许多少未决连接；</target>
        </trans-unit>
        <trans-unit id="970221270157ca2fcbfffda037e97a1e22199e87" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;callback&lt;/em&gt;: invoked when an access token is refreshed, giving you a chance to persist it.</source>
          <target state="translated">&lt;em&gt;callback&lt;/em&gt;：刷新访问令牌时调用，使您有机会持久保留它。</target>
        </trans-unit>
        <trans-unit id="c04acc14ce5395b5229908f8f9e1ad16fa5b4827" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;context&lt;/em&gt; configures the SSL options, see &lt;code&gt;&lt;a href=&quot;context/server&quot;&gt;OpenSSL::SSL::Context::Server&lt;/a&gt;&lt;/code&gt; for details</source>
          <target state="translated">&lt;em&gt;上下文&lt;/em&gt;配置SSL选项，有关详细信息，请参见 &lt;code&gt;&lt;a href=&quot;context/server&quot;&gt;OpenSSL::SSL::Context::Server&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="30bd223ea4ea1a8c46a1f672bad6b7b3cbe081a4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;converter&lt;/em&gt; takes an alternate type for parsing. It requires a &lt;code&gt;#from_yaml&lt;/code&gt; method in that class, and returns an instance of the given type. Examples of converters are &lt;code&gt;&lt;a href=&quot;time/format&quot;&gt;Time::Format&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;time/epochconverter&quot;&gt;Time::EpochConverter&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;转换器&lt;/em&gt;采用替代类型进行解析。 &lt;code&gt;#from_yaml&lt;/code&gt; 中需要一个#from_yaml方法，并返回给定类型的实例。转换器的示例是 &lt;code&gt;&lt;a href=&quot;time/format&quot;&gt;Time::Format&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;time/epochconverter&quot;&gt;Time::EpochConverter&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f23d7bbb7ce4b8bd2faeb6394c92080382acbca" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;cstime&lt;/em&gt;: CPU time a processes terminated children (and their terminated children) spent in the kernel.</source>
          <target state="translated">&lt;em&gt;cstime&lt;/em&gt;：进程终止的子代（及其终止的子代）在内核中花费的CPU时间。</target>
        </trans-unit>
        <trans-unit id="87db034ca751e499464f8d8602d53b8c946d160a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;cutime&lt;/em&gt;: CPU time a processes terminated children (and their terminated children) spent in the userland.</source>
          <target state="translated">&lt;em&gt;cutime&lt;/em&gt;：进程终止的子进程（及其终止的子进程）在用户空间中花费的CPU时间。</target>
        </trans-unit>
        <trans-unit id="b69ee0e180cd9d3aaeecd0b17d10c82161dd6941" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;domain&lt;/em&gt; may be an IP address or a domain name.</source>
          <target state="translated">&lt;em&gt;domain&lt;/em&gt;可以是IP地址或域名。</target>
        </trans-unit>
        <trans-unit id="926891845fa77e21dfb97948367c38d13ee05d08" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;invalid&lt;/em&gt; are passed to &lt;code&gt;&lt;a href=&quot;io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt;IO#set_encoding&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;编码&lt;/em&gt;和&lt;em&gt;无效&lt;/em&gt;传递到 &lt;code&gt;&lt;a href=&quot;io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt;IO#set_encoding&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af4b1a713320d70a594ac4d6c6ac6971515f06bb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;expires_at&lt;/em&gt;: the Time when the access token expires.</source>
          <target state="translated">&lt;em&gt;expires_at&lt;/em&gt;：访问令牌过期的时间。</target>
        </trans-unit>
        <trans-unit id="90b400582b1731ad7615258e8ccf225bb08990ce" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;extension&lt;/em&gt; must start with a dot (&lt;code&gt;.&lt;/code&gt;) and must not contain any null bytes.</source>
          <target state="translated">&lt;em&gt;扩展名&lt;/em&gt;必须以点（ &lt;code&gt;.&lt;/code&gt; ）开头，并且不能包含任何空字节。</target>
        </trans-unit>
        <trans-unit id="82d9e7624b3627c0f5aceb75904caeb1257fddc8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;family&lt;/em&gt; is optional and defaults to &lt;code&gt;&lt;a href=&quot;family#UNSPEC&quot;&gt;Family::UNSPEC&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;family&lt;/em&gt;是可选的，默认为 &lt;code&gt;&lt;a href=&quot;family#UNSPEC&quot;&gt;Family::UNSPEC&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6afcb05e1c38011e493bc2222a2c3adf49efe16b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;field&lt;/em&gt; must be the field name to use as a discriminator</source>
          <target state="translated">&lt;em&gt;字段&lt;/em&gt;必须是用作区分符的字段名称</target>
        </trans-unit>
        <trans-unit id="efe061b7574c6ba9049c2cd80318707d0c2e5f09" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;filename&lt;/em&gt; will be created if it does not already exist.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;如果&lt;em&gt;文件名&lt;/em&gt;不存在，则将创建它。</target>
        </trans-unit>
        <trans-unit id="0fb753eff02fc2351fb2f03951c36ca1052dc3d2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;format&lt;/em&gt; can be set to use the extended range of JEDEC units (&lt;code&gt;K&lt;/code&gt;, &lt;code&gt;M&lt;/code&gt;, &lt;code&gt;G&lt;/code&gt;, &lt;code&gt;T&lt;/code&gt;, &lt;code&gt;P&lt;/code&gt;, &lt;code&gt;E&lt;/code&gt;, &lt;code&gt;Z&lt;/code&gt;, &lt;code&gt;Y&lt;/code&gt;) which equals to the prefixes of the SI system except for uppercase &lt;code&gt;K&lt;/code&gt; and is based on powers of 1024 (see &lt;code&gt;&lt;a href=&quot;int/binaryprefixformat#JEDEC&quot;&gt;BinaryPrefixFormat::JEDEC&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;可以将&lt;em&gt;格式&lt;/em&gt;设置为使用扩展的JEDEC单位范围（ &lt;code&gt;K&lt;/code&gt; ， &lt;code&gt;M&lt;/code&gt; ， &lt;code&gt;G&lt;/code&gt; ， &lt;code&gt;T&lt;/code&gt; ， &lt;code&gt;P&lt;/code&gt; ， &lt;code&gt;E&lt;/code&gt; ， &lt;code&gt;Z&lt;/code&gt; ， &lt;code&gt;Y&lt;/code&gt; ），该范围等于SI系统的前缀（大写 &lt;code&gt;K&lt;/code&gt; 除外），并且基于1024（参见 &lt;code&gt;&lt;a href=&quot;int/binaryprefixformat#JEDEC&quot;&gt;BinaryPrefixFormat::JEDEC&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="df07cda3bb38341f4cf308ac75e1c3e40b987a4d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;home&lt;/em&gt; specifies the home directory which &lt;code&gt;~&lt;/code&gt; will expand to. &quot;~&quot; is expanded to the value passed to &lt;em&gt;home&lt;/em&gt;. If it is &lt;code&gt;false&lt;/code&gt; (default), home is not expanded. If &lt;code&gt;true&lt;/code&gt;, it is expanded to the user's home directory (&lt;code&gt;&lt;a href=&quot;path#home:Path-class-method&quot;&gt;Path.home&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;em&gt;home&lt;/em&gt;指定 &lt;code&gt;~&lt;/code&gt; 将会扩展到的主目录。&amp;ldquo;〜&amp;rdquo;扩展为传递给&lt;em&gt;home&lt;/em&gt;的值。如果为 &lt;code&gt;false&lt;/code&gt; （默认），则不会展开home。如果为 &lt;code&gt;true&lt;/code&gt; ，则将其扩展到用户的主目录（ &lt;code&gt;&lt;a href=&quot;path#home:Path-class-method&quot;&gt;Path.home&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="37f74cd29108552cd7922a920646fccde93e3f43" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;home&lt;/em&gt; specifies the home directory which &lt;code&gt;~&lt;/code&gt; will expand to. If not given (or &lt;code&gt;nil&lt;/code&gt; is given) then &lt;code&gt;&lt;a href=&quot;path#home:Path-class-method&quot;&gt;Path.home&lt;/a&gt;&lt;/code&gt; will be used. If &lt;em&gt;expand_base&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, &lt;em&gt;base&lt;/em&gt; itself will be exanded in &lt;code&gt;&lt;a href=&quot;dir#current:String-class-method&quot;&gt;Dir.current&lt;/a&gt;&lt;/code&gt; if it is not an absolute path. This guarantees the method returns an absolute path (assuming that &lt;code&gt;&lt;a href=&quot;dir#current:String-class-method&quot;&gt;Dir.current&lt;/a&gt;&lt;/code&gt; is absolute).</source>
          <target state="translated">&lt;em&gt;home&lt;/em&gt;指定 &lt;code&gt;~&lt;/code&gt; 将扩展到的主目录。如果未给出（或给出 &lt;code&gt;nil&lt;/code&gt; ），则将使用 &lt;code&gt;&lt;a href=&quot;path#home:Path-class-method&quot;&gt;Path.home&lt;/a&gt;&lt;/code&gt; 。如果&lt;em&gt;expand_base&lt;/em&gt;是 &lt;code&gt;true&lt;/code&gt; ，&lt;em&gt;立足&lt;/em&gt;本身中exanded &lt;code&gt;&lt;a href=&quot;dir#current:String-class-method&quot;&gt;Dir.current&lt;/a&gt;&lt;/code&gt; 如果它不是一个绝对路径。这样可以保证该方法返回一个绝对路径（假设 &lt;code&gt;&lt;a href=&quot;dir#current:String-class-method&quot;&gt;Dir.current&lt;/a&gt;&lt;/code&gt; 是绝对路径）。</target>
        </trans-unit>
        <trans-unit id="54696c8ccb4e43728f090fd9a8506eedef8d9c1c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;initial&lt;/em&gt; optionally sets the starting value, &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, for all bits in the array.</source>
          <target state="translated">&lt;em&gt;initial&lt;/em&gt;为数组中的所有位设置起始值 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f596385ff2da91e4580cec4ab7d58ab08564736" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt; defines which key to read from a YAML document. It defaults to the name of the property.</source>
          <target state="translated">&lt;em&gt;键&lt;/em&gt;定义从YAML文档中读取哪个键。默认为属性名称。</target>
        </trans-unit>
        <trans-unit id="203cb7f1c01cd120af09c3b3ecdde17c674c983b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mapping&lt;/em&gt; must be a hash or named tuple where each key-value pair maps a discriminator value to a class to deserialize</source>
          <target state="translated">&lt;em&gt;映射&lt;/em&gt;必须是散列或命名元组，其中每个键值对将鉴别符值映射到要反序列化的类</target>
        </trans-unit>
        <trans-unit id="cb196a573e945130e0e02d6055e97bb86f898339" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mode&lt;/em&gt; must be one of the following file open modes:</source>
          <target state="translated">&lt;em&gt;模式&lt;/em&gt;必须是以下文件打开模式之一：</target>
        </trans-unit>
        <trans-unit id="bf026bb8c85455353fc877455bf304a5838266af" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is an optional and used only as an internal reference.</source>
          <target state="translated">&lt;em&gt;名称&lt;/em&gt;是可选的，仅用作内部引用。</target>
        </trans-unit>
        <trans-unit id="c14d1ac839300fbcb7cf09d4ccaf0be1c0be153d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is understood to be a location name in the IANA Time Zone database, such as &lt;code&gt;&quot;America/New_York&quot;&lt;/code&gt;. As special cases, &lt;code&gt;&quot;&lt;a href=&quot;location#UTC&quot;&gt;UTC&lt;/a&gt;&quot;&lt;/code&gt; and empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;) return &lt;code&gt;&lt;a href=&quot;location#UTC&quot;&gt;Location::UTC&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&quot;Local&quot;&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;location#local-class-method&quot;&gt;Location.local&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;名称&lt;/em&gt;被理解为IANA时区数据库中的位置名称，例如 &lt;code&gt;&quot;America/New_York&quot;&lt;/code&gt; 。作为特殊情况， &lt;code&gt;&quot;&lt;a href=&quot;location#UTC&quot;&gt;UTC&lt;/a&gt;&quot;&lt;/code&gt; 和空字符串（ &lt;code&gt;&quot;&quot;&lt;/code&gt; ）返回 &lt;code&gt;&lt;a href=&quot;location#UTC&quot;&gt;Location::UTC&lt;/a&gt;&lt;/code&gt; ，而 &lt;code&gt;&quot;Local&quot;&lt;/code&gt; 返回 &lt;code&gt;&lt;a href=&quot;location#local-class-method&quot;&gt;Location.local&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac499b7b034ebd30c640e6d356a2d16968160bc9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is understood to be a location name in the IANA Time Zone database, such as &lt;code&gt;&quot;America/New_York&quot;&lt;/code&gt;. As special cases, &lt;code&gt;&quot;&lt;a href=&quot;location#UTC&quot;&gt;UTC&lt;/a&gt;&quot;&lt;/code&gt; and empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;) return &lt;code&gt;&lt;a href=&quot;location#UTC&quot;&gt;Location::UTC&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&quot;Local&quot;&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;location#local:Location?-class-method&quot;&gt;Location.local&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;名称&lt;/em&gt;被理解为IANA时区数据库中的位置名称，例如 &lt;code&gt;&quot;America/New_York&quot;&lt;/code&gt; 。作为特殊情况， &lt;code&gt;&quot;&lt;a href=&quot;location#UTC&quot;&gt;UTC&lt;/a&gt;&quot;&lt;/code&gt; 和空字符串（ &lt;code&gt;&quot;&quot;&lt;/code&gt; ）返回 &lt;code&gt;&lt;a href=&quot;location#UTC&quot;&gt;Location::UTC&lt;/a&gt;&lt;/code&gt; ，而 &lt;code&gt;&quot;Local&quot;&lt;/code&gt; 返回 &lt;code&gt;&lt;a href=&quot;location#local:Location?-class-method&quot;&gt;Location.local&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22338e920fe6bdc6e6c1cdfdb41f5afb9c0da82a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; must be a symbol literal, it cannot be evaluated at runtime.</source>
          <target state="translated">&lt;em&gt;名称&lt;/em&gt;必须是符号文字，不能在运行时求值。</target>
        </trans-unit>
        <trans-unit id="169aaf62e57ed85d7badf5bc4cd8bf8d2354ae6b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;nilable&lt;/em&gt; defines if a property can be a &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt;. Passing &lt;code&gt;T?&lt;/code&gt; as a type has the same effect.</source>
          <target state="translated">&lt;em&gt;nilable&lt;/em&gt;定义属性是否可以为 &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; 。通过 &lt;code&gt;T?&lt;/code&gt; 作为一种类型具有相同的效果。</target>
        </trans-unit>
        <trans-unit id="bf83d27ed666498c37864c7063d240b003fa111e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;oauth2_client&lt;/em&gt;: the OAuth2::Client used to refresh an access token.</source>
          <target state="translated">&lt;em&gt;oauth2_client&lt;/em&gt;：OAuth2 :: Client用于刷新访问令牌。</target>
        </trans-unit>
        <trans-unit id="55a31cd5469ce51a819019d8f51941fa405dafad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;prefix&lt;/em&gt; and &lt;em&gt;suffix&lt;/em&gt; are appended to the front and end of the file name, respectively. These values may contain directory separators.</source>
          <target state="translated">&lt;em&gt;前缀&lt;/em&gt;和&lt;em&gt;后缀&lt;/em&gt;分别附加在文件名的开头和结尾。这些值可能包含目录分隔符。</target>
        </trans-unit>
        <trans-unit id="f8ec535a9d760081f0850e7ed6453e594c54f8b2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;protocol&lt;/em&gt; is the intended socket protocol (e.g. &lt;code&gt;&lt;a href=&quot;protocol#TCP&quot;&gt;Protocol::TCP&lt;/a&gt;&lt;/code&gt;) and should be specified.</source>
          <target state="translated">&lt;em&gt;protocol&lt;/em&gt;是预期的套接字协议（例如 &lt;code&gt;&lt;a href=&quot;protocol#TCP&quot;&gt;Protocol::TCP&lt;/a&gt;&lt;/code&gt; ），应指定。</target>
        </trans-unit>
        <trans-unit id="b0757bafd0368014d40702811700ac94900d65f2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;reuse_port&lt;/em&gt; to enable multiple processes to bind to the same port (&lt;code&gt;SO_REUSEPORT&lt;/code&gt;).</source>
          <target state="translated">&lt;em&gt;redirect_port&lt;/em&gt;允许多个进程绑定到同一端口（ &lt;code&gt;SO_REUSEPORT&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b8f8334872eefab373a2e177a6a9bf7d4ee3be54" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;separator&lt;/em&gt; describes the decimal separator, &lt;em&gt;delimiter&lt;/em&gt; the thousands delimiter (see &lt;code&gt;&lt;a href=&quot;number#format(separator='.',delimiter=',',decimal_places:Int?=nil,*,group:Int=3,only_significant:Bool=false):String-instance-method&quot;&gt;#format&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;em&gt;分隔符&lt;/em&gt;描述小数点分隔&lt;em&gt;符&lt;/em&gt;，用千位分隔符定界（请参阅 &lt;code&gt;&lt;a href=&quot;number#format(separator='.',delimiter=',',decimal_places:Int?=nil,*,group:Int=3,only_significant:Bool=false):String-instance-method&quot;&gt;#format&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7f9dcc182591b19be7deefc4728cf885176f351d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;separator&lt;/em&gt; is used as decimal separator, &lt;em&gt;delimiter&lt;/em&gt; as thousands delimiter between batches of &lt;em&gt;group&lt;/em&gt; digits.</source>
          <target state="translated">&lt;em&gt;分离器&lt;/em&gt;被用作小数分隔，&lt;em&gt;分隔符&lt;/em&gt;，成千上万的批次之间的分隔符&lt;em&gt;组&lt;/em&gt;数字。</target>
        </trans-unit>
        <trans-unit id="9ed8772b697b08c734c715b74c806a4c95c819b8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;service&lt;/em&gt; may be a port number or a service name. It must be specified, because different servers may handle the &lt;code&gt;mail&lt;/code&gt; or &lt;code&gt;http&lt;/code&gt; services for example.</source>
          <target state="translated">&lt;em&gt;服务&lt;/em&gt;可以是端口号或服务名称。必须指定它，因为不同的服务器可能处理例如 &lt;code&gt;mail&lt;/code&gt; 或 &lt;code&gt;http&lt;/code&gt; 服务。</target>
        </trans-unit>
        <trans-unit id="100067e2c32c847fe379d07244d99cec391257f3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;start&lt;/em&gt; can can be negative to start counting from the end of the string.</source>
          <target state="translated">&lt;em&gt;start&lt;/em&gt;可以为负，以从字符串末尾开始计数。</target>
        </trans-unit>
        <trans-unit id="c7908235a297d4dcf23448d699ed11bb6e674b97" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;start&lt;/em&gt; can can be negative to start counting from the end of the string. If &lt;em&gt;count&lt;/em&gt; is bigger than the number of bytes from &lt;em&gt;start&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;string#bytesize:Int32-instance-method&quot;&gt;#bytesize&lt;/a&gt;&lt;/code&gt;, only remaining bytes are returned.</source>
          <target state="translated">&lt;em&gt;start&lt;/em&gt;可以为负，以从字符串末尾开始计数。如果&lt;em&gt;count&lt;/em&gt;大于从&lt;em&gt;开始&lt;/em&gt;到 &lt;code&gt;&lt;a href=&quot;string#bytesize:Int32-instance-method&quot;&gt;#bytesize&lt;/a&gt;&lt;/code&gt; 的字节数，则仅返回剩余的字节。</target>
        </trans-unit>
        <trans-unit id="f877f4511de8c901d388be2e9ea7b1133b67c403" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;status&lt;/em&gt; is the exit status of the current process.</source>
          <target state="translated">&lt;em&gt;status&lt;/em&gt;是当前进程的退出状态。</target>
        </trans-unit>
        <trans-unit id="cd1de7458b64d26b2b82d64d143c6a6cdc38b833" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stime&lt;/em&gt;: CPU time a process spent in the kernel.</source>
          <target state="translated">&lt;em&gt;stime&lt;/em&gt;：CPU在内核中花费的时间。</target>
        </trans-unit>
        <trans-unit id="9a8c44e98d5a8635973a9eba791da161ccdea2f7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;time&lt;/em&gt; is always converted to UTC.</source>
          <target state="translated">&lt;em&gt;时间&lt;/em&gt;总是转换为UTC。</target>
        </trans-unit>
        <trans-unit id="7239f797b2bc16a11d41d14980623489d059e05c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;type&lt;/em&gt; (required) defines its type. In the example above, &lt;em&gt;title: String&lt;/em&gt; is a shortcut to &lt;em&gt;title: {type: String}&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;type&lt;/em&gt;（必填）定义其类型。在上面的示例中，&lt;em&gt;title：String&lt;/em&gt;是&lt;em&gt;title：{type：String}&lt;/em&gt;的快捷方式。</target>
        </trans-unit>
        <trans-unit id="d3c0c7b942e1ac71bced0fb3cea03fe68acf9416" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;type&lt;/em&gt; is the intended socket type (e.g. &lt;code&gt;&lt;a href=&quot;type#STREAM&quot;&gt;Type::STREAM&lt;/a&gt;&lt;/code&gt;) and must be specified.</source>
          <target state="translated">&lt;em&gt;type&lt;/em&gt;是预期的套接字类型（例如 &lt;code&gt;&lt;a href=&quot;type#STREAM&quot;&gt;Type::STREAM&lt;/a&gt;&lt;/code&gt; ），必须指定。</target>
        </trans-unit>
        <trans-unit id="aa4e01154cc63c1969172977d82b9c988b355805" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;type&lt;/em&gt; must be a constant or &lt;code&gt;typeof()&lt;/code&gt; expresion. It cannot be evaluated at runtime.</source>
          <target state="translated">&lt;em&gt;type&lt;/em&gt;必须为常数或 &lt;code&gt;typeof()&lt;/code&gt; 表达式。无法在运行时对其进行评估。</target>
        </trans-unit>
        <trans-unit id="326a486ee0ff7973ffb59150c16479a4fc1c90ac" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;type&lt;/em&gt; must be a constant or &lt;code&gt;typeof()&lt;/code&gt; expression. It cannot be evaluated at runtime.</source>
          <target state="translated">&lt;em&gt;type&lt;/em&gt;必须是常量或 &lt;code&gt;typeof()&lt;/code&gt; 表达式。无法在运行时对其进行评估。</target>
        </trans-unit>
        <trans-unit id="30ffceff1ec8db62f85bad87157a3b41d3603f57" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;type&lt;/em&gt; must be a constant or &lt;code&gt;typeof()&lt;/code&gt; expression. It cannot be evaluated at runtime. &lt;em&gt;variable&lt;/em&gt; must be the name of an instance variable of &lt;em&gt;type&lt;/em&gt;, prefixed by &lt;code&gt;@&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;type&lt;/em&gt;必须是常量或 &lt;code&gt;typeof()&lt;/code&gt; 表达式。无法在运行时对其进行评估。&lt;em&gt;变量&lt;/em&gt;必须是&lt;em&gt;类型&lt;/em&gt;实例变量的名称，其前缀为 &lt;code&gt;@&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a397f407d11d41468bdc2ec0e16ba10d41a90d7c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;unix_seconds&lt;/em&gt; expresses the number of seconds since UNIX epoch (&lt;code&gt;1970-01-01 00:00:00 &lt;a href=&quot;location#UTC&quot;&gt;UTC&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;em&gt;unix_seconds&lt;/em&gt;表示自UNIX纪元（ &lt;code&gt;1970-01-01 00:00:00 &lt;a href=&quot;location#UTC&quot;&gt;UTC&lt;/a&gt;&lt;/code&gt; ）以来的秒数。</target>
        </trans-unit>
        <trans-unit id="f512f0573ace13f49f6a4fbfd72d6c2e90cfd96b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;utime&lt;/em&gt;: CPU time a process spent in userland.</source>
          <target state="translated">&lt;em&gt;utime&lt;/em&gt;：一个进程在用户区花费的CPU时间。</target>
        </trans-unit>
        <trans-unit id="6c0a7998e131f8cd8288b0ab5afef4ae4044238a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;variable&lt;/em&gt; must be a variable (local, instance, class or library).</source>
          <target state="translated">&lt;em&gt;变量&lt;/em&gt;必须是变量（本地，实例，类或库）。</target>
        </trans-unit>
        <trans-unit id="e317fb33167f85960be1b41a9a3d32f654bdf768" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;years&lt;/em&gt; is equivalent to &lt;code&gt;12&lt;/code&gt; months and &lt;em&gt;weeks&lt;/em&gt; is equivalent to &lt;code&gt;7&lt;/code&gt; days.</source>
          <target state="translated">&lt;em&gt;年&lt;/em&gt;等于 &lt;code&gt;12&lt;/code&gt; 个月，&lt;em&gt;几周&lt;/em&gt;相当于 &lt;code&gt;7&lt;/code&gt; 天。</target>
        </trans-unit>
        <trans-unit id="b9bc48c110857c7aacc0955be7b4f01326e17dbc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!&lt;/strong&gt; : Bool</source>
          <target state="translated">&lt;strong&gt;＃！&lt;/strong&gt;：布尔</target>
        </trans-unit>
        <trans-unit id="f5fa0e4aec6c34b9fa5f07685762a00dabdf657d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : ASTNode) : BoolLiteral</source>
          <target state="translated">&lt;strong&gt;＃！=&lt;/strong&gt;（其他：ASTNode）：BoolLiteral</target>
        </trans-unit>
        <trans-unit id="6e7acc99dbfdd6b0a64badcf1f04e8de29a83c45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : Bool) : Bool</source>
          <target state="translated">&lt;strong&gt;＃！=&lt;/strong&gt;（其他：Bool）：Bool</target>
        </trans-unit>
        <trans-unit id="69eb5dcfa4dc99e7976a1197f39923f1d8b8b45b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : Char) : Bool</source>
          <target state="translated">&lt;strong&gt;＃！=&lt;/strong&gt;（other：Char）：布尔</target>
        </trans-unit>
        <trans-unit id="b1001014c0e3e9aaa26e7713b443d40b3028a947" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : Float32) : Bool</source>
          <target state="translated">&lt;strong&gt;＃！=&lt;/strong&gt;（other：Float32）：布尔</target>
        </trans-unit>
        <trans-unit id="0dd2999fac26f64314f9a34af7994e8885fdfc6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : Float64) : Bool</source>
          <target state="translated">&lt;strong&gt;＃！=&lt;/strong&gt;（其他：Float64）：布尔</target>
        </trans-unit>
        <trans-unit id="a81afe4674ae903f85db1226c81dc9028d9b0803" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : Int128) : Bool</source>
          <target state="translated">&lt;strong&gt;＃！=&lt;/strong&gt;（other：Int128）：布尔</target>
        </trans-unit>
        <trans-unit id="83ad1a6cc85954499cb989a87386fe45b7d272ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : Int16) : Bool</source>
          <target state="translated">&lt;strong&gt;＃！=&lt;/strong&gt;（other：Int16）：布尔</target>
        </trans-unit>
        <trans-unit id="cee521abcb1885cd7ae27b6591f01af73812bce7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : Int32) : Bool</source>
          <target state="translated">&lt;strong&gt;＃！=&lt;/strong&gt;（other：Int32）：布尔</target>
        </trans-unit>
        <trans-unit id="915f3102056c3959559585d7d68c37666bbaf6bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : Int64) : Bool</source>
          <target state="translated">&lt;strong&gt;＃！=&lt;/strong&gt;（other：Int64）：布尔</target>
        </trans-unit>
        <trans-unit id="e40ec3a46150c71018ec837f1de7a2e5eebfbdf7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : Int8) : Bool</source>
          <target state="translated">&lt;strong&gt;＃！=&lt;/strong&gt;（other：Int8）：布尔</target>
        </trans-unit>
        <trans-unit id="a577bdf3e1051976a633c58d8fc9ff26330f7b6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : Symbol) : Bool</source>
          <target state="translated">&lt;strong&gt;＃！=&lt;/strong&gt;（其他：符号）：布尔</target>
        </trans-unit>
        <trans-unit id="9c0a92225ecb3b9a1de7f125213d1f65c1ab0085" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : UInt128) : Bool</source>
          <target state="translated">&lt;strong&gt;＃！=&lt;/strong&gt;（其他：UInt128）：布尔</target>
        </trans-unit>
        <trans-unit id="24a5b9afee391cd04c8eb1485a5855f5719f9107" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : UInt16) : Bool</source>
          <target state="translated">&lt;strong&gt;＃！=&lt;/strong&gt;（其他：UInt16）：布尔</target>
        </trans-unit>
        <trans-unit id="7c05a9acda15b4d97a14f1c08e83d73624838ca3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : UInt32) : Bool</source>
          <target state="translated">&lt;strong&gt;＃！=&lt;/strong&gt;（其他：UInt32）：布尔</target>
        </trans-unit>
        <trans-unit id="656c2be3708466f095b11897af5f202910db518a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : UInt64) : Bool</source>
          <target state="translated">&lt;strong&gt;＃！=&lt;/strong&gt;（其他：UInt64）：布尔</target>
        </trans-unit>
        <trans-unit id="e2b74dc274ac10edd21cddb9fb48c8c170943a51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : UInt8) : Bool</source>
          <target state="translated">&lt;strong&gt;＃！=&lt;/strong&gt;（其他：UInt8）：布尔</target>
        </trans-unit>
        <trans-unit id="10ff942a68c160be1e73987c0e2937d8a724de43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other)</source>
          <target state="translated">&lt;strong&gt;#!=&lt;/strong&gt;(other)</target>
        </trans-unit>
        <trans-unit id="0862cf16159adb79da4e333feecc4ad2901d8eb9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!~&lt;/strong&gt;(other)</source>
          <target state="translated">&lt;strong&gt;#!~&lt;/strong&gt;(other)</target>
        </trans-unit>
        <trans-unit id="d05554cbdcb45d3b31321328953d9730390674a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#%&lt;/strong&gt;(other : BigInt) : BigInt</source>
          <target state="translated">&lt;strong&gt;＃％&lt;/strong&gt;（其他：BigInt）：BigInt</target>
        </trans-unit>
        <trans-unit id="c2eac438b3dd65c265c378a79db91a8d4e12b530" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#%&lt;/strong&gt;(other : Int)</source>
          <target state="translated">&lt;strong&gt;＃％&lt;/strong&gt;（其他：整数）</target>
        </trans-unit>
        <trans-unit id="59ca0824e41029a8690c141e2ee4e031645e43bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#%&lt;/strong&gt;(other : Int) : BigInt</source>
          <target state="translated">&lt;strong&gt;＃％&lt;/strong&gt;（其他：整数）：BigInt</target>
        </trans-unit>
        <trans-unit id="1730b20b5d2e1a685de11d30f597fe7847ba273d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#%&lt;/strong&gt;(other : NumberLiteral) : NumberLiteral</source>
          <target state="translated">&lt;strong&gt;＃％&lt;/strong&gt;（其他：NumberLiteral）：NumberLiteral</target>
        </trans-unit>
        <trans-unit id="9b4f257e41253814ead9b805bc9ddadc5abae813" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#%&lt;/strong&gt;(other)</source>
          <target state="translated">&lt;strong&gt;#%&lt;/strong&gt;(other)</target>
        </trans-unit>
        <trans-unit id="9ef2f33fd08f52a809934cd152bfaa98bffa0263" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;**&lt;/strong&gt;(exponent : Int) : self</source>
          <target state="translated">&lt;strong&gt;＃＆**&lt;/strong&gt;（指数：Int）：自我</target>
        </trans-unit>
        <trans-unit id="4bcda843b0018e79cf160e080c61a7deb6140e16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other : BigInt) : BigInt</source>
          <target state="translated">&lt;strong&gt;＃＆*&lt;/strong&gt;（其他：BigInt）：BigInt</target>
        </trans-unit>
        <trans-unit id="d1ab580c5b016840bbd32e6b028e669138f06e53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other : Int128) : self</source>
          <target state="translated">&lt;strong&gt;＃＆*&lt;/strong&gt;（other：Int128）：自我</target>
        </trans-unit>
        <trans-unit id="227d74c66fad11e24da60b7e5d5a8a831be91a9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other : Int16) : self</source>
          <target state="translated">&lt;strong&gt;＃＆*&lt;/strong&gt;（other：Int16）：自我</target>
        </trans-unit>
        <trans-unit id="ce7b4024e3f8f1df74bac45a9ce80a11769d8512" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other : Int32) : self</source>
          <target state="translated">&lt;strong&gt;＃＆*&lt;/strong&gt;（other：Int32）：自我</target>
        </trans-unit>
        <trans-unit id="3fdf119ccee09a71a4072e6e5e1bd56467d893ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other : Int64) : self</source>
          <target state="translated">&lt;strong&gt;＃＆*&lt;/strong&gt;（other：Int64）：自我</target>
        </trans-unit>
        <trans-unit id="841cd251127081a4e5f51a15a3720f76dd5d2e6f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other : Int8) : self</source>
          <target state="translated">&lt;strong&gt;＃＆*&lt;/strong&gt;（other：Int8）：自我</target>
        </trans-unit>
        <trans-unit id="281c885fd1a5473e7a37dd243ade7ed3b5e18e27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other : UInt128) : self</source>
          <target state="translated">&lt;strong&gt;＃＆*&lt;/strong&gt;（other：UInt128）：自我</target>
        </trans-unit>
        <trans-unit id="8920463e360af2d1dc763d2dc0968c122279ce3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other : UInt16) : self</source>
          <target state="translated">&lt;strong&gt;＃＆*&lt;/strong&gt;（其他：UInt16）：自我</target>
        </trans-unit>
        <trans-unit id="d1b6a91057545afeda79474d3e3456d9f0a1b030" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other : UInt32) : self</source>
          <target state="translated">&lt;strong&gt;＃＆*&lt;/strong&gt;（其他：UInt32）：自我</target>
        </trans-unit>
        <trans-unit id="808e6ebccf45fc524dca70224bfc9ea5da37a467" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other : UInt64) : self</source>
          <target state="translated">&lt;strong&gt;＃＆*&lt;/strong&gt;（其他：UInt64）：自我</target>
        </trans-unit>
        <trans-unit id="97f8f511aa9fd0fc780ed45fc0af9b77c4c7a199" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other : UInt8) : self</source>
          <target state="translated">&lt;strong&gt;＃＆*&lt;/strong&gt;（other：UInt8）：自我</target>
        </trans-unit>
        <trans-unit id="a0617b8257110d0c3bbacc1ac007688bd4cd9a7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other) : BigInt</source>
          <target state="translated">&lt;strong&gt;＃＆*&lt;/strong&gt;（其他）：BigInt</target>
        </trans-unit>
        <trans-unit id="0491463917f74441e49131b8809f4b5612718c8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other : BigInt) : BigInt</source>
          <target state="translated">&lt;strong&gt;＃＆+&lt;/strong&gt;（其他：BigInt）：BigInt</target>
        </trans-unit>
        <trans-unit id="fb69302fe3312da75d6c508215c467511792ce24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other : Int128) : self</source>
          <target state="translated">&lt;strong&gt;＃＆+&lt;/strong&gt;（other：Int128）：自我</target>
        </trans-unit>
        <trans-unit id="8f736975ef68e6dfebd782d701b91f1d0d7c6829" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other : Int16) : self</source>
          <target state="translated">&lt;strong&gt;＃＆+&lt;/strong&gt;（other：Int16）：自我</target>
        </trans-unit>
        <trans-unit id="e572fdcb49349f69ec91442b4bd6ae8e6986f775" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other : Int32) : self</source>
          <target state="translated">&lt;strong&gt;＃＆+&lt;/strong&gt;（other：Int32）：自我</target>
        </trans-unit>
        <trans-unit id="935948a639889c4a8f8754c039bffcf0aa0dbaeb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other : Int64) : self</source>
          <target state="translated">&lt;strong&gt;＃＆+&lt;/strong&gt;（other：Int64）：自我</target>
        </trans-unit>
        <trans-unit id="36fe3116a30fee904cc496b0f80c70f6146a33c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other : Int8) : self</source>
          <target state="translated">&lt;strong&gt;＃＆+&lt;/strong&gt;（other：Int8）：自我</target>
        </trans-unit>
        <trans-unit id="cfa3cf9d7c06c1fe4edafc61523d71205ac4b8a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other : UInt128) : self</source>
          <target state="translated">&lt;strong&gt;＃＆+&lt;/strong&gt;（其他：UInt128）：自我</target>
        </trans-unit>
        <trans-unit id="f3161d025782560be6eba304c56a4ee3f06f7aca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other : UInt16) : self</source>
          <target state="translated">&lt;strong&gt;＃＆+&lt;/strong&gt;（其他：UInt16）：自我</target>
        </trans-unit>
        <trans-unit id="b889ddfb96c6c7130539e0eacbd7951124fb5dd0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other : UInt32) : self</source>
          <target state="translated">&lt;strong&gt;＃＆+&lt;/strong&gt;（other：UInt32）：自我</target>
        </trans-unit>
        <trans-unit id="661641ab5f348d4fb856c3a11b241280a18742aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other : UInt64) : self</source>
          <target state="translated">&lt;strong&gt;＃＆+&lt;/strong&gt;（其他：UInt64）：自我</target>
        </trans-unit>
        <trans-unit id="e9d187e75248c5ad4600a1fb616deb439dd5fbc1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other : UInt8) : self</source>
          <target state="translated">&lt;strong&gt;＃＆+&lt;/strong&gt;（other：UInt8）：自我</target>
        </trans-unit>
        <trans-unit id="d15e64499630d49126edfc208e3f3cb80e63ef67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other) : BigInt</source>
          <target state="translated">&lt;strong&gt;＃＆+&lt;/strong&gt;（其他）：BigInt</target>
        </trans-unit>
        <trans-unit id="6dc74f6fb40b219265278d4e076ec9f61773bd47" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other : BigInt) : BigInt</source>
          <target state="translated">&lt;strong&gt;＃＆-&lt;/strong&gt;（其他：BigInt）：BigInt</target>
        </trans-unit>
        <trans-unit id="e2d154b2a380b53b53a12dd9aa7bb5564d57c017" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other : Int128) : self</source>
          <target state="translated">&lt;strong&gt;＃＆-&lt;/strong&gt;（其他：Int128）：自我</target>
        </trans-unit>
        <trans-unit id="29abeadf8c658ee1442c7778bcbac4d75386f6d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other : Int16) : self</source>
          <target state="translated">&lt;strong&gt;＃＆-&lt;/strong&gt;（其他：Int16）：自我</target>
        </trans-unit>
        <trans-unit id="37a3b306b761c671a5fccdd4b52589a873954a20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other : Int32) : self</source>
          <target state="translated">&lt;strong&gt;＃＆-&lt;/strong&gt;（other：Int32）：自我</target>
        </trans-unit>
        <trans-unit id="83a467744d102f239aa1d0095ea238f9e154673f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other : Int64) : self</source>
          <target state="translated">&lt;strong&gt;＃＆-&lt;/strong&gt;（其他：Int64）：自我</target>
        </trans-unit>
        <trans-unit id="34527e1a16a2050526c7f29cd56b49a17b236e4d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other : Int8) : self</source>
          <target state="translated">&lt;strong&gt;＃＆-&lt;/strong&gt;（其他：Int8）：自我</target>
        </trans-unit>
        <trans-unit id="86903c66de24027a285300e041fb90715ff212df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other : UInt128) : self</source>
          <target state="translated">&lt;strong&gt;＃＆-&lt;/strong&gt;（其他：UInt128）：自我</target>
        </trans-unit>
        <trans-unit id="d5783372e89f4fbba4ca38c6894664f36fcaea57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other : UInt16) : self</source>
          <target state="translated">&lt;strong&gt;＃＆-&lt;/strong&gt;（其他：UInt16）：自我</target>
        </trans-unit>
        <trans-unit id="89ef794ab04ab47ce66eda8c492699a5e638dc14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other : UInt32) : self</source>
          <target state="translated">&lt;strong&gt;＃＆-&lt;/strong&gt;（其他：UInt32）：自我</target>
        </trans-unit>
        <trans-unit id="d18094121d8fef23801c2bb958a4c8a41f41a906" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other : UInt64) : self</source>
          <target state="translated">&lt;strong&gt;＃＆-&lt;/strong&gt;（其他：UInt64）：自我</target>
        </trans-unit>
        <trans-unit id="c68a90940214de43d3848c74771f06044c9fde1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other : UInt8) : self</source>
          <target state="translated">&lt;strong&gt;＃＆-&lt;/strong&gt;（其他：UInt8）：自我</target>
        </trans-unit>
        <trans-unit id="ea4d140351f3f8e5b05949e74bb602142be1eed1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other) : BigInt</source>
          <target state="translated">&lt;strong&gt;＃＆-&lt;/strong&gt;（其他）：BigInt</target>
        </trans-unit>
        <trans-unit id="c4a35dbe43c05377695176bd05b6287333d179a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : Array(U)) forall U</source>
          <target state="translated">&lt;strong&gt;＃＆&lt;/strong&gt;（other：Array（U））全部U</target>
        </trans-unit>
        <trans-unit id="4d3b04ad23620f59b29a2a3f7e5cae0cd0ca1b6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : Bool) : Bool</source>
          <target state="translated">&lt;strong&gt;＃＆&lt;/strong&gt;（其他：Bool）：Bool</target>
        </trans-unit>
        <trans-unit id="0f2258a4a1dd9485634c691339b0d47211b3c42d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : Int) : BigInt</source>
          <target state="translated">&lt;strong&gt;＃＆&lt;/strong&gt;（other：Int）：BigInt</target>
        </trans-unit>
        <trans-unit id="704877ec224fe87f6d8736c252fa4bdb70d45843" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : Int128) : self</source>
          <target state="translated">&lt;strong&gt;＃＆&lt;/strong&gt;（other：Int128）：自我</target>
        </trans-unit>
        <trans-unit id="35234c01e335dda39c8a9b0462f68203383fff01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : Int16) : self</source>
          <target state="translated">&lt;strong&gt;＃＆&lt;/strong&gt;（other：Int16）：自我</target>
        </trans-unit>
        <trans-unit id="72b7f46d2e500b41a2fbfce3a483654d8f9786ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : Int32) : self</source>
          <target state="translated">&lt;strong&gt;＃＆&lt;/strong&gt;（other：Int32）：自我</target>
        </trans-unit>
        <trans-unit id="43ce191c188dbec5e16248102c6ec24b03af4bad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : Int64) : self</source>
          <target state="translated">&lt;strong&gt;＃＆&lt;/strong&gt;（other：Int64）：自我</target>
        </trans-unit>
        <trans-unit id="6dfab307408f9bd0a156ea76c9032cf2977863b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : Int8) : self</source>
          <target state="translated">&lt;strong&gt;＃＆&lt;/strong&gt;（other：Int8）：自我</target>
        </trans-unit>
        <trans-unit id="bcb80f431afc39702eeb69ecf9dded7a954cf49a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : NumberLiteral) : NumberLiteral</source>
          <target state="translated">&lt;strong&gt;＃＆&lt;/strong&gt;（其他：NumberLiteral）：NumberLiteral</target>
        </trans-unit>
        <trans-unit id="e3a355b18ae2f41bf6b2aaedaa83ca91c8b6db7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : Set)</source>
          <target state="translated">&lt;strong&gt;＃＆&lt;/strong&gt;（其他：设置）</target>
        </trans-unit>
        <trans-unit id="c3dd8723fe29937f358f4432abeb900d5782477d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : UInt128) : self</source>
          <target state="translated">&lt;strong&gt;＃＆&lt;/strong&gt;（其他：UInt128）：自我</target>
        </trans-unit>
        <trans-unit id="7cdc3857c50aea51e1327d2e3ff6516957612343" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : UInt16) : self</source>
          <target state="translated">&lt;strong&gt;＃＆&lt;/strong&gt;（其他：UInt16）：自我</target>
        </trans-unit>
        <trans-unit id="80adca1719197a1e223b4033ba7c37872d1a30d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : UInt32) : self</source>
          <target state="translated">&lt;strong&gt;＃＆&lt;/strong&gt;（其他：UInt32）：自我</target>
        </trans-unit>
        <trans-unit id="b9584d49238496b5ef16046aa801e34e301345fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : UInt64) : self</source>
          <target state="translated">&lt;strong&gt;＃＆&lt;/strong&gt;（其他：UInt64）：自我</target>
        </trans-unit>
        <trans-unit id="f3d7e537bd3ac527438ef0c40349735f2523debf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : UInt8) : self</source>
          <target state="translated">&lt;strong&gt;＃＆&lt;/strong&gt;（其他：UInt8）：自我</target>
        </trans-unit>
        <trans-unit id="eb68f1b73bd111c592e8326f5b16397972500744" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : self)</source>
          <target state="translated">&lt;strong&gt;＃＆&lt;/strong&gt;（其他：自我）</target>
        </trans-unit>
        <trans-unit id="4e54f1e5e4a0932241079b30a256c4f5ff33f068" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&amp;gt;&lt;/strong&gt;(count : Int)</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt;&amp;gt;&lt;/strong&gt;（count：Int）</target>
        </trans-unit>
        <trans-unit id="b2bb4021de72b8af886ca7fe941751eee6b1f1c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&amp;gt;&lt;/strong&gt;(other : Int)</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt;&amp;gt;&lt;/strong&gt;（其他：Int）</target>
        </trans-unit>
        <trans-unit id="abbd71dc0031ef0033edc17173f43dc5edac880a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&amp;gt;&lt;/strong&gt;(other : Int) : BigInt</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt;&amp;gt;&lt;/strong&gt;（other：Int）：BigInt</target>
        </trans-unit>
        <trans-unit id="2a58378603fd127fef695a3bc8cb79f03150fd63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&amp;gt;&lt;/strong&gt;(other : NumberLiteral) : NumberLiteral</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt;&amp;gt;&lt;/strong&gt;（其他：NumberLiteral）：NumberLiteral</target>
        </trans-unit>
        <trans-unit id="a57bf05dfc3ee5c27041049adfcf0749a9005ef5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : Char) : Bool</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt;&lt;/strong&gt;（other：Char）：布尔</target>
        </trans-unit>
        <trans-unit id="1d24e2ccc57fb7878ec042d3dcb77228ae4bd6ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : Float32) : Bool</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt;&lt;/strong&gt;（other：Float32）：布尔</target>
        </trans-unit>
        <trans-unit id="14576bf6b566ff3f7a2d67024a398ef51ddb8231" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : Float64) : Bool</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt;&lt;/strong&gt;（other：Float64）：布尔</target>
        </trans-unit>
        <trans-unit id="187b02b32b6c303e433ef4a964562a23e296b739" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : Int128) : Bool</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt;&lt;/strong&gt;（other：Int128）：布尔</target>
        </trans-unit>
        <trans-unit id="a72c2cdabe021251d447c0609b4f9660f0bea9c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : Int16) : Bool</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt;&lt;/strong&gt;（other：Int16）：布尔</target>
        </trans-unit>
        <trans-unit id="d43985ab07e4bd435acd2dba9afcfbb696fa4fc2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : Int32) : Bool</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt;&lt;/strong&gt;（other：Int32）：布尔</target>
        </trans-unit>
        <trans-unit id="7e32e30de1d1a8087c14bd45cd2fb38bd4b95f82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : Int64) : Bool</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt;&lt;/strong&gt;（other：Int64）：布尔</target>
        </trans-unit>
        <trans-unit id="b3e16d8374d5ea748ebc11db685490409cd7dcbc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : Int8) : Bool</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt;&lt;/strong&gt;（other：Int8）：布尔</target>
        </trans-unit>
        <trans-unit id="a3f08d0e3b22571acf26c5acd67b5c2f9d6f5387" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : NumberLiteral) : BoolLiteral</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt;&lt;/strong&gt;（其他：NumberLiteral）：BoolLiteral</target>
        </trans-unit>
        <trans-unit id="9071b6d81047bf21a39cfb430ea7d78d27ad843d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : StringLiteral | MacroId) : BoolLiteral</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt;&lt;/strong&gt;（其他：StringLiteral | MacroId）：BoolLiteral</target>
        </trans-unit>
        <trans-unit id="78fcb15296d780015046fe13381223f58b330868" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : T)</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt;&lt;/strong&gt;（其他：T）</target>
        </trans-unit>
        <trans-unit id="0c1b0af42bf7f4b0c4417ed5ac16c5c8fb4cb89b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : T.class) forall T</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt;&lt;/strong&gt;（other：T.class）forall T</target>
        </trans-unit>
        <trans-unit id="6813b82f1564644fb6618a39260bf62aade2b311" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : TypeNode) : BoolLiteral</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt;&lt;/strong&gt;（other：TypeNode）：BoolLiteral</target>
        </trans-unit>
        <trans-unit id="ea6f8d7829283c5001cccc61f3bfab7e1f2a3f94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : UInt128) : Bool</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt;&lt;/strong&gt;（other：UInt128）：布尔</target>
        </trans-unit>
        <trans-unit id="f6e0f42e97606e7c1b3b758d92bed9c8c285770e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : UInt16) : Bool</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt;&lt;/strong&gt;（other：UInt16）：布尔</target>
        </trans-unit>
        <trans-unit id="235a898e53e76091e94a6c1e072e527f47492e78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : UInt32) : Bool</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt;&lt;/strong&gt;（other：UInt32）：布尔</target>
        </trans-unit>
        <trans-unit id="4f86fdd05a9f1fa2857b26366e7852f2bee4e4dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : UInt64) : Bool</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt;&lt;/strong&gt;（other：UInt64）：布尔</target>
        </trans-unit>
        <trans-unit id="7ddf4ea6b1a5029822a001e61f56073ca5ce79c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : UInt8) : Bool</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt;&lt;/strong&gt;（other：UInt8）：布尔</target>
        </trans-unit>
        <trans-unit id="80e2ce4fedf7d90a5c0267e92649d201d140a300" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : Char) : Bool</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt; =&lt;/strong&gt;（other：Char）：布尔</target>
        </trans-unit>
        <trans-unit id="1c721a8579a4a4f8ce37a19fa6349a934bec4e09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : Float32) : Bool</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt; =&lt;/strong&gt;（other：Float32）：布尔</target>
        </trans-unit>
        <trans-unit id="0b5d82196ab443c6be363f645f955638f608cbde" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : Float64) : Bool</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt; =&lt;/strong&gt;（other：Float64）：布尔</target>
        </trans-unit>
        <trans-unit id="95f16e9a91909095bb0bfb88d70f86f5ca792817" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : Int128) : Bool</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt; =&lt;/strong&gt;（other：Int128）：布尔</target>
        </trans-unit>
        <trans-unit id="0e508476ada4fde27fb9eb6042326cde460a8295" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : Int16) : Bool</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt; =&lt;/strong&gt;（other：Int16）：布尔</target>
        </trans-unit>
        <trans-unit id="82d4f99342b95bce809541674599b0c7b8c6f67f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : Int32) : Bool</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt; =&lt;/strong&gt;（other：Int32）：布尔</target>
        </trans-unit>
        <trans-unit id="9840cfd32f588ca165b3ea11f2765f183afd11b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : Int64) : Bool</source>
          <target state="translated">&lt;strong&gt;＃&amp;gt; =&lt;/strong&gt;（other：Int64）：布尔</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
