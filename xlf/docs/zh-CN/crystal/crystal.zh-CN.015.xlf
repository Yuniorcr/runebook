<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="crystal">
    <body>
      <group id="crystal">
        <trans-unit id="ef05b62ca2096a82ab11c65985c96e3536e7aa77" translate="yes" xml:space="preserve">
          <source>Gzip::Writer#sync_close?</source>
          <target state="translated">Gzip::Writer#sync_close?</target>
        </trans-unit>
        <trans-unit id="b4ed4b242f65e4b1567504f8aa9fe17900b9fc59" translate="yes" xml:space="preserve">
          <source>Gzip::Writer#write</source>
          <target state="translated">Gzip::Writer#write</target>
        </trans-unit>
        <trans-unit id="9f4d47380e82d9fd60534d291c9f4e9f78bcee35" translate="yes" xml:space="preserve">
          <source>Gzip::Writer.new</source>
          <target state="translated">Gzip::Writer.new</target>
        </trans-unit>
        <trans-unit id="1f1436c3fd374298cc4a46e9436290b5c785a7b5" translate="yes" xml:space="preserve">
          <source>Gzip::Writer.open</source>
          <target state="translated">Gzip::Writer.open</target>
        </trans-unit>
        <trans-unit id="d549e0beea6a9d4f727d1681bf983b28128c2aa9" translate="yes" xml:space="preserve">
          <source>HMAC can be used to verify the integrity of a message as well as the authenticity.</source>
          <target state="translated">HMAC可以用来验证信息的完整性以及真实性。</target>
        </trans-unit>
        <trans-unit id="545ab765be89bc6dd54ebd8dec3217867f3fddb0" translate="yes" xml:space="preserve">
          <source>HMAC.digest</source>
          <target state="translated">HMAC.digest</target>
        </trans-unit>
        <trans-unit id="f7a9c9335e2585595e888eb72c1c5ffe10203199" translate="yes" xml:space="preserve">
          <source>HMAC.hexdigest</source>
          <target state="translated">HMAC.hexdigest</target>
        </trans-unit>
        <trans-unit id="9f738ce8457f291b18ee47e665e96baa84f38fcd" translate="yes" xml:space="preserve">
          <source>HTML</source>
          <target state="translated">HTML</target>
        </trans-unit>
        <trans-unit id="3a6bbc88c1626bc721ac2e648f079a6a74c449fe" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions</source>
          <target state="translated">HTMLParserOptions</target>
        </trans-unit>
        <trans-unit id="6984b12448eb8041c43c6d4bbcdd6682226e6c4d" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions#compact?</source>
          <target state="translated">HTMLParserOptions#compact?</target>
        </trans-unit>
        <trans-unit id="0caace75227e00730fe0e1ade97608e532db5b2e" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions#ignore_enc?</source>
          <target state="translated">HTMLParserOptions#ignore_enc?</target>
        </trans-unit>
        <trans-unit id="de14dfda6c2bb8154d45de0c70afbb9cbdd632a3" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions#noblanks?</source>
          <target state="translated">HTMLParserOptions#noblanks?</target>
        </trans-unit>
        <trans-unit id="7eb03dcbe3dbc39cfce9b90333c698ee75a7fd98" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions#nodefdtd?</source>
          <target state="translated">HTMLParserOptions#nodefdtd?</target>
        </trans-unit>
        <trans-unit id="ea130e078664e0e824cb4eb3b906543dd4b7666e" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions#noerror?</source>
          <target state="translated">HTMLParserOptions#noerror?</target>
        </trans-unit>
        <trans-unit id="36dab5279c2d56a653502290dae7fe72d4deb634" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions#noimplied?</source>
          <target state="translated">HTMLParserOptions#noimplied?</target>
        </trans-unit>
        <trans-unit id="7c18915ca399188f45ad3d433ab3cc5e11632b70" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions#none?</source>
          <target state="translated">HTMLParserOptions#none?</target>
        </trans-unit>
        <trans-unit id="04b8cf50218cbdb03ff4af77e3ea2ad7f6960c50" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions#nonet?</source>
          <target state="translated">HTMLParserOptions#nonet?</target>
        </trans-unit>
        <trans-unit id="9a107427ad34d4346f0ac4633bf67818a3ffb577" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions#nowarning?</source>
          <target state="translated">HTMLParserOptions#nowarning?</target>
        </trans-unit>
        <trans-unit id="bd40a18890f803792954dbbc515b5a8b9063cbcf" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions#pedantic?</source>
          <target state="translated">HTMLParserOptions#pedantic?</target>
        </trans-unit>
        <trans-unit id="dc5bc9af2c9919c87e14c46438a3d95822e64a99" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions#recover?</source>
          <target state="translated">HTMLParserOptions#recover?</target>
        </trans-unit>
        <trans-unit id="6b724866fa0811faeeaafe581052a9f65bbd03ec" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions.default</source>
          <target state="translated">HTMLParserOptions.default</target>
        </trans-unit>
        <trans-unit id="f40b27d6b8b9a4fc3827264c1da16a04ecf4d094" translate="yes" xml:space="preserve">
          <source>HTTP</source>
          <target state="translated">HTTP</target>
        </trans-unit>
        <trans-unit id="18dd8e4843e11485d6e5e349126f0c85a871b12d" translate="yes" xml:space="preserve">
          <source>HTTP Server</source>
          <target state="translated">HTTP服务器</target>
        </trans-unit>
        <trans-unit id="5eed6f34049b3da6943fb18707aee1351156a50d" translate="yes" xml:space="preserve">
          <source>HTTP params builder.</source>
          <target state="translated">HTTP参数构建器。</target>
        </trans-unit>
        <trans-unit id="8531bc6e6faa0640b6ec26d96cfca4a62079c31e" translate="yes" xml:space="preserve">
          <source>HTTP::Client</source>
          <target state="translated">HTTP::Client</target>
        </trans-unit>
        <trans-unit id="0ee4e74d1c2518d9c0eb62c5b194147fe03ce2f6" translate="yes" xml:space="preserve">
          <source>HTTP::Client::Response</source>
          <target state="translated">HTTP::Client::Response</target>
        </trans-unit>
        <trans-unit id="ca270fc3f09ad0d489097275ee98a60786b9659b" translate="yes" xml:space="preserve">
          <source>HTTP::CompressHandler</source>
          <target state="translated">HTTP::CompressHandler</target>
        </trans-unit>
        <trans-unit id="30759471096e09d6a3d210d12f56c20d5ef35615" translate="yes" xml:space="preserve">
          <source>HTTP::Cookie</source>
          <target state="translated">HTTP::Cookie</target>
        </trans-unit>
        <trans-unit id="e8b9ab8f14b0a8cc310db20845a7e261262f938b" translate="yes" xml:space="preserve">
          <source>HTTP::Cookies</source>
          <target state="translated">HTTP::Cookies</target>
        </trans-unit>
        <trans-unit id="b9925ba64799bd0a4cbc315e868046af68b04307" translate="yes" xml:space="preserve">
          <source>HTTP::ErrorHandler</source>
          <target state="translated">HTTP::ErrorHandler</target>
        </trans-unit>
        <trans-unit id="c1894ff0f5ddc0b2ac0f924e9d32aacf591d6d0c" translate="yes" xml:space="preserve">
          <source>HTTP::FormData::Builder</source>
          <target state="translated">HTTP::FormData::Builder</target>
        </trans-unit>
        <trans-unit id="1cdf7dc2289d761ee91fbc347ac5fe392b520dc9" translate="yes" xml:space="preserve">
          <source>HTTP::FormData::Error</source>
          <target state="translated">HTTP::FormData::Error</target>
        </trans-unit>
        <trans-unit id="a0173cfb23ab24dce798a13a21f475b42a3ccf30" translate="yes" xml:space="preserve">
          <source>HTTP::FormData::FileMetadata</source>
          <target state="translated">HTTP::FormData::FileMetadata</target>
        </trans-unit>
        <trans-unit id="b3aa0ae732dc07877744a0406b7074539b2cd306" translate="yes" xml:space="preserve">
          <source>HTTP::FormData::Parser</source>
          <target state="translated">HTTP::FormData::Parser</target>
        </trans-unit>
        <trans-unit id="3f82ecd62f625263e7e51fb752225c11717bc51f" translate="yes" xml:space="preserve">
          <source>HTTP::FormData::Part</source>
          <target state="translated">HTTP::FormData::Part</target>
        </trans-unit>
        <trans-unit id="d1aa9c26d3bb500b12b7d65e95bd1abe1bda58c0" translate="yes" xml:space="preserve">
          <source>HTTP::Handler</source>
          <target state="translated">HTTP::Handler</target>
        </trans-unit>
        <trans-unit id="406233beee0713493ee7c9a9930a38e0bbab63b3" translate="yes" xml:space="preserve">
          <source>HTTP::Headers</source>
          <target state="translated">HTTP::Headers</target>
        </trans-unit>
        <trans-unit id="b53cd6f0648d6079df3ba3bc449ff73675331057" translate="yes" xml:space="preserve">
          <source>HTTP::LogHandler</source>
          <target state="translated">HTTP::LogHandler</target>
        </trans-unit>
        <trans-unit id="d39b7d70fe2838835c27f635661b4ab50397dda9" translate="yes" xml:space="preserve">
          <source>HTTP::Params</source>
          <target state="translated">HTTP::Params</target>
        </trans-unit>
        <trans-unit id="04ac4bb7a83f8d3e2943f4d1d7478aa75501311f" translate="yes" xml:space="preserve">
          <source>HTTP::Params::Builder</source>
          <target state="translated">HTTP::Params::Builder</target>
        </trans-unit>
        <trans-unit id="31b12f4beb9f43f4f74a069c54f1528b9a809c38" translate="yes" xml:space="preserve">
          <source>HTTP::Request</source>
          <target state="translated">HTTP::Request</target>
        </trans-unit>
        <trans-unit id="560ab9c8b4f4b5692d0f58bbc85ac044313a38e4" translate="yes" xml:space="preserve">
          <source>HTTP::Server</source>
          <target state="translated">HTTP::Server</target>
        </trans-unit>
        <trans-unit id="eee1eb096bbf676c5df713aa98621fe5d9567128" translate="yes" xml:space="preserve">
          <source>HTTP::Server::ClientError</source>
          <target state="translated">HTTP::Server::ClientError</target>
        </trans-unit>
        <trans-unit id="11b9ab086d84d0de0421a5a306a8ce48fad2204e" translate="yes" xml:space="preserve">
          <source>HTTP::Server::Context</source>
          <target state="translated">HTTP::Server::Context</target>
        </trans-unit>
        <trans-unit id="061bb2f3d554abd68f08ef984cccbccaa14dde3c" translate="yes" xml:space="preserve">
          <source>HTTP::Server::RequestProcessor</source>
          <target state="translated">HTTP::Server::RequestProcessor</target>
        </trans-unit>
        <trans-unit id="50da75a2feb4ae51ec8c94215b024bd2ca6aeedf" translate="yes" xml:space="preserve">
          <source>HTTP::Server::Response</source>
          <target state="translated">HTTP::Server::Response</target>
        </trans-unit>
        <trans-unit id="bc55cabc1f381e1824d630f8e8629caa5b59b8c0" translate="yes" xml:space="preserve">
          <source>HTTP::StaticFileHandler</source>
          <target state="translated">HTTP::StaticFileHandler</target>
        </trans-unit>
        <trans-unit id="19a5213bed2b831aa8abda12c6df9de104ead231" translate="yes" xml:space="preserve">
          <source>HTTP::StaticFileHandler::DirectoryListing</source>
          <target state="translated">HTTP::StaticFileHandler::DirectoryListing</target>
        </trans-unit>
        <trans-unit id="a656ea4ec962e11dbf0a36f3191cd460491fb006" translate="yes" xml:space="preserve">
          <source>HTTP::WebSocket</source>
          <target state="translated">HTTP::WebSocket</target>
        </trans-unit>
        <trans-unit id="0258eb53c4f9d702ded65a51dab081dd28892586" translate="yes" xml:space="preserve">
          <source>HTTP::WebSocket::Protocol::PacketInfo</source>
          <target state="translated">HTTP::WebSocket::Protocol::PacketInfo</target>
        </trans-unit>
        <trans-unit id="ee3ebc5213a7e01c8fd8d0273622f72b42535541" translate="yes" xml:space="preserve">
          <source>HTTP::WebSocket::Protocol::StreamIO</source>
          <target state="translated">HTTP::WebSocket::Protocol::StreamIO</target>
        </trans-unit>
        <trans-unit id="0256d58e4db6b2bbbcd689cc0761f824affd4d46" translate="yes" xml:space="preserve">
          <source>HTTP::WebSocketHandler</source>
          <target state="translated">HTTP::WebSocketHandler</target>
        </trans-unit>
        <trans-unit id="be0212bf33313087973171061ef96d564becfb55" translate="yes" xml:space="preserve">
          <source>Handler</source>
          <target state="translated">Handler</target>
        </trans-unit>
        <trans-unit id="90b9ffac2daa6fce2f90baec485eefcb8d192089" translate="yes" xml:space="preserve">
          <source>Handler chain</source>
          <target state="translated">处理链</target>
        </trans-unit>
        <trans-unit id="c1d8bf2d107568a22ae86f01decc355206ccc115" translate="yes" xml:space="preserve">
          <source>Handler#call</source>
          <target state="translated">Handler#call</target>
        </trans-unit>
        <trans-unit id="e6290d2c64c7e9d6f0be374dc007e496d78bf20a" translate="yes" xml:space="preserve">
          <source>Handler#call_next</source>
          <target state="translated">Handler#call_next</target>
        </trans-unit>
        <trans-unit id="f79baed716280a95ca7c626de69992fccda52d68" translate="yes" xml:space="preserve">
          <source>Handler#next</source>
          <target state="translated">Handler#next</target>
        </trans-unit>
        <trans-unit id="91050df6cafe95ae3d76a6675dd8aeafa1bcc695" translate="yes" xml:space="preserve">
          <source>Handler#next=</source>
          <target state="translated">Handler#next=</target>
        </trans-unit>
        <trans-unit id="f72e16cc6c896cea3f15d11e6764ba916bacb2d6" translate="yes" xml:space="preserve">
          <source>Handler::HandlerProc</source>
          <target state="translated">Handler::HandlerProc</target>
        </trans-unit>
        <trans-unit id="ba2129f9ab38c4e790bb059ad0b666a2058d8a9c" translate="yes" xml:space="preserve">
          <source>Handles unhandled exceptions</source>
          <target state="translated">处理未处理的异常</target>
        </trans-unit>
        <trans-unit id="baabe04c8ddddf592485f739f6defd8c0e0d9cd7" translate="yes" xml:space="preserve">
          <source>Has no effect if &lt;em&gt;count&lt;/em&gt; is zero or negative.</source>
          <target state="translated">如果&lt;em&gt;count&lt;/em&gt;为零或负数，则无效。</target>
        </trans-unit>
        <trans-unit id="9bbaa2995b04bedc7df9c6ff56afa97e3875c96f" translate="yes" xml:space="preserve">
          <source>Has the &lt;code&gt;&lt;a href=&quot;encodingoptions#name:String-instance-method&quot;&gt;#name&lt;/a&gt;&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;encodingoptions#invalid:Symbol?-instance-method&quot;&gt;#invalid&lt;/a&gt;&lt;/code&gt; option.</source>
          <target state="translated">具有 &lt;code&gt;&lt;a href=&quot;encodingoptions#name:String-instance-method&quot;&gt;#name&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;encodingoptions#invalid:Symbol?-instance-method&quot;&gt;#invalid&lt;/a&gt;&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="873507a022b58de26a88deae87268cbd8d6af5b1" translate="yes" xml:space="preserve">
          <source>Hash</source>
          <target state="translated">Hash</target>
        </trans-unit>
        <trans-unit id="93b801fba2111be8ccbb089d9214c250693dc035" translate="yes" xml:space="preserve">
          <source>Hash#==</source>
          <target state="translated">Hash#==</target>
        </trans-unit>
        <trans-unit id="5a6fa79771123268744228cdf4258ff84a1eda13" translate="yes" xml:space="preserve">
          <source>Hash#[]</source>
          <target state="translated">Hash#[]</target>
        </trans-unit>
        <trans-unit id="07e45ae0598f7495619d79e68e804784f6d30f3a" translate="yes" xml:space="preserve">
          <source>Hash#[]=</source>
          <target state="translated">Hash#[]=</target>
        </trans-unit>
        <trans-unit id="036db11a100433b880eb2758037effaea2780f3d" translate="yes" xml:space="preserve">
          <source>Hash#[]?</source>
          <target state="translated">Hash#[]?</target>
        </trans-unit>
        <trans-unit id="f29010467d5779e1b6e8494c4682c7db1d08fa68" translate="yes" xml:space="preserve">
          <source>Hash#dig</source>
          <target state="translated">Hash#dig</target>
        </trans-unit>
        <trans-unit id="594e74d465ef6da116668c39440bd56ecfdba7a5" translate="yes" xml:space="preserve">
          <source>Hash#dig?</source>
          <target state="translated">Hash#dig?</target>
        </trans-unit>
        <trans-unit id="7c9d9f11e2fbd80554c648413862326e1455f1b4" translate="yes" xml:space="preserve">
          <source>Hash#dup</source>
          <target state="translated">Hash#dup</target>
        </trans-unit>
        <trans-unit id="54bf770bb146a0c8a179e773a8b419949c6166f7" translate="yes" xml:space="preserve">
          <source>Hash#each</source>
          <target state="translated">Hash#each</target>
        </trans-unit>
        <trans-unit id="da40684411ccc4d3dd825051039a0b200ea8f38c" translate="yes" xml:space="preserve">
          <source>Hash#hash</source>
          <target state="translated">Hash#hash</target>
        </trans-unit>
        <trans-unit id="2bbad7df40418a3d06b45f3ac307cb80d6261b1c" translate="yes" xml:space="preserve">
          <source>Hash#keys</source>
          <target state="translated">Hash#keys</target>
        </trans-unit>
        <trans-unit id="fd6b8d91f6f3f5ef393e449b77f8a570c370f97f" translate="yes" xml:space="preserve">
          <source>Hash#put</source>
          <target state="translated">Hash#put</target>
        </trans-unit>
        <trans-unit id="c8d8e494db4d6a06b525e3c89aac986971bd6af1" translate="yes" xml:space="preserve">
          <source>Hash#size</source>
          <target state="translated">Hash#size</target>
        </trans-unit>
        <trans-unit id="557a3f8d83a74e0888fd0979371510d431525e69" translate="yes" xml:space="preserve">
          <source>Hash#to_a</source>
          <target state="translated">Hash#to_a</target>
        </trans-unit>
        <trans-unit id="5db4a70e3cc2a56a8fac3d5b5850832d6a6a9765" translate="yes" xml:space="preserve">
          <source>Hash#to_h</source>
          <target state="translated">Hash#to_h</target>
        </trans-unit>
        <trans-unit id="9801139d746d454c9df9d3a74220c377e4405674" translate="yes" xml:space="preserve">
          <source>Hash#to_s</source>
          <target state="translated">Hash#to_s</target>
        </trans-unit>
        <trans-unit id="908a362ce333128051a5476739681f064e12584a" translate="yes" xml:space="preserve">
          <source>Hash(K, V)</source>
          <target state="translated">Hash(K,V)</target>
        </trans-unit>
        <trans-unit id="93d86cc5155b6ceed71fbe5fed0cd2e578a7cf81" translate="yes" xml:space="preserve">
          <source>Hash-like</source>
          <target state="translated">Hash-like</target>
        </trans-unit>
        <trans-unit id="2f53ad4c1c9699116021dc3b0f09cdf2d63e1ed0" translate="yes" xml:space="preserve">
          <source>Hash-like Type Literal</source>
          <target state="translated">类似哈希的类型 字面意义</target>
        </trans-unit>
        <trans-unit id="8b5cbb097e856fbd170dca25c3cd05b141e1779a" translate="yes" xml:space="preserve">
          <source>Hash.new</source>
          <target state="translated">Hash.new</target>
        </trans-unit>
        <trans-unit id="c60d8d19295931fd0a096bc2089d59d0fff65a0b" translate="yes" xml:space="preserve">
          <source>Hash.zip</source>
          <target state="translated">Hash.zip</target>
        </trans-unit>
        <trans-unit id="907770c8afbe58a25a664731fd0f385884692d56" translate="yes" xml:space="preserve">
          <source>Hash::Entry</source>
          <target state="translated">Hash::Entry</target>
        </trans-unit>
        <trans-unit id="34eff1db7ac1a03ace84a7e85fd4aa4c847be375" translate="yes" xml:space="preserve">
          <source>Hash::Entry(K, V)</source>
          <target state="translated">Hash::Entry(K,V)</target>
        </trans-unit>
        <trans-unit id="4f419ccc82fa6879f689852e64f87b9ac88c0b82" translate="yes" xml:space="preserve">
          <source>HashValueConverter</source>
          <target state="translated">HashValueConverter</target>
        </trans-unit>
        <trans-unit id="767e2ee46ba84c76844b8ed7bd652adeafb2eb70" translate="yes" xml:space="preserve">
          <source>HashValueConverter.from_json</source>
          <target state="translated">HashValueConverter.from_json</target>
        </trans-unit>
        <trans-unit id="b2ba5b1eb59e6af9e14d98384470e9215108f24a" translate="yes" xml:space="preserve">
          <source>HashValueConverter.to_json</source>
          <target state="translated">HashValueConverter.to_json</target>
        </trans-unit>
        <trans-unit id="e27a3b12c1ed9c1c65fe771c32fc4d39d1e3e1c3" translate="yes" xml:space="preserve">
          <source>Hashes a password.</source>
          <target state="translated">对密码进行哈希处理。</target>
        </trans-unit>
        <trans-unit id="0c57a34d22aec2ff1dd787b0e9a09a214ef2e057" translate="yes" xml:space="preserve">
          <source>Hashes are typically created with a hash literal denoted by curly braces (&lt;code&gt;{ }&lt;/code&gt;) enclosing a list of pairs using &lt;code&gt;=&amp;gt;&lt;/code&gt; as delimiter between key and value and separated by commas &lt;code&gt;,&lt;/code&gt;.</source>
          <target state="translated">哈希通常是使用由花括号（ &lt;code&gt;{ }&lt;/code&gt; ）表示的哈希字面量创建的，该花括号用 &lt;code&gt;=&amp;gt;&lt;/code&gt; 作为键和值之间的定界符并用逗号 &lt;code&gt;,&lt;/code&gt; 。分隔成对的列表。</target>
        </trans-unit>
        <trans-unit id="c34e6e8b8e8f83b9030ee3a86cae16c3f14d6f4e" translate="yes" xml:space="preserve">
          <source>Hashes data incrementally.</source>
          <target state="translated">以增量方式对数据进行哈希处理。</target>
        </trans-unit>
        <trans-unit id="39a3bb1667d623182b5f5222fba148ee40ddfe7c" translate="yes" xml:space="preserve">
          <source>Have a syntax similar to Ruby (but compatibility with it is not a goal)</source>
          <target state="translated">有一个类似于Ruby的语法(但与Ruby的兼容性不是目标)。</target>
        </trans-unit>
        <trans-unit id="a1d3b8f4548ffb54c5e442e8b57f91b8eebb5176" translate="yes" xml:space="preserve">
          <source>Have a syntax similar to Ruby (but compatibility with it is not a goal).</source>
          <target state="translated">有一个类似于Ruby的语法(但与Ruby的兼容性不是目标)。</target>
        </trans-unit>
        <trans-unit id="b7e62b981be984047553e73ff51046494db49526" translate="yes" xml:space="preserve">
          <source>Have an annotation that when applied to an instance variable determines if that instance variable should be serialized, or with what key. Crystal's &lt;a href=&quot;https://crystal-lang.org/api/JSON/Serializable.html&quot;&gt;&lt;code&gt;JSON::Serializable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://crystal-lang.org/api/YAML/Serializable.html&quot;&gt;&lt;code&gt;YAML::Serializable&lt;/code&gt;&lt;/a&gt; are examples of this.</source>
          <target state="translated">有一个注释，当将其应用于实例变量时，可以确定该实例变量是否应该序列化或使用什么键。Crystal的&lt;a href=&quot;https://crystal-lang.org/api/JSON/Serializable.html&quot;&gt; &lt;code&gt;JSON::Serializable&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://crystal-lang.org/api/YAML/Serializable.html&quot;&gt; &lt;code&gt;YAML::Serializable&lt;/code&gt; &lt;/a&gt;是此示例。</target>
        </trans-unit>
        <trans-unit id="937c9c8ff098bf3e8bc525476385ab90fa10c2c1" translate="yes" xml:space="preserve">
          <source>Have compile-time evaluation and generation of code, to avoid boilerplate code.</source>
          <target state="translated">有编译时评估和生成代码,以避免模板代码。</target>
        </trans-unit>
        <trans-unit id="a06d5405179f1da6e7350ced79d305285aeb6ac9" translate="yes" xml:space="preserve">
          <source>Have no fear using blocks for readability or code reuse, it won't affect the resulting executable performance.</source>
          <target state="translated">不用担心为了可读性或代码重用而使用区块,它不会影响由此产生的可执行性能。</target>
        </trans-unit>
        <trans-unit id="31341c6f0c7af677ffb8fadcb92038e8ac2b6193" translate="yes" xml:space="preserve">
          <source>Header</source>
          <target state="translated">Header</target>
        </trans-unit>
        <trans-unit id="051a9db7d2a9bef7cf131e42300214bd0da05d76" translate="yes" xml:space="preserve">
          <source>Header#comment</source>
          <target state="translated">Header#comment</target>
        </trans-unit>
        <trans-unit id="761e8f275b50c6471992b57e6b738d995bdc9e71" translate="yes" xml:space="preserve">
          <source>Header#comment=</source>
          <target state="translated">Header#comment=</target>
        </trans-unit>
        <trans-unit id="0c513bd0cda343eb72f2c8d0697bfa82896bcbb3" translate="yes" xml:space="preserve">
          <source>Header#extra</source>
          <target state="translated">Header#extra</target>
        </trans-unit>
        <trans-unit id="437a09e93729a13635a502dd95e488af639499f5" translate="yes" xml:space="preserve">
          <source>Header#extra=</source>
          <target state="translated">Header#extra=</target>
        </trans-unit>
        <trans-unit id="78aec10d26ea1ebfcbb81c8d28a6d884c184a872" translate="yes" xml:space="preserve">
          <source>Header#modification_time</source>
          <target state="translated">Header#modification_time</target>
        </trans-unit>
        <trans-unit id="bce0beea51e50581648a33e0129cd477186aea1c" translate="yes" xml:space="preserve">
          <source>Header#modification_time=</source>
          <target state="translated">Header#modification_time=</target>
        </trans-unit>
        <trans-unit id="46232efc88b82e2745dec7d409f098e5a829c9c5" translate="yes" xml:space="preserve">
          <source>Header#name</source>
          <target state="translated">Header#name</target>
        </trans-unit>
        <trans-unit id="e765b80ab5e7d9326ca72f2c969dedfd5ac07331" translate="yes" xml:space="preserve">
          <source>Header#name=</source>
          <target state="translated">Header#name=</target>
        </trans-unit>
        <trans-unit id="4229f1f1fc31b9e8f8b386b34376f2d55e981c7e" translate="yes" xml:space="preserve">
          <source>Header#os</source>
          <target state="translated">Header#os</target>
        </trans-unit>
        <trans-unit id="9d5e463f06c09e73c9ec498f2f0d9efb1f4e5884" translate="yes" xml:space="preserve">
          <source>Header#os=</source>
          <target state="translated">Header#os=</target>
        </trans-unit>
        <trans-unit id="520de7443d00d6ff4dc3ababbbf6cfbe0b74f4ec" translate="yes" xml:space="preserve">
          <source>Headers</source>
          <target state="translated">Headers</target>
        </trans-unit>
        <trans-unit id="5dbc8279476f56b16f623ae1e928c6655bbc0efc" translate="yes" xml:space="preserve">
          <source>Headers method_missing</source>
          <target state="translated">标题方法_缺失</target>
        </trans-unit>
        <trans-unit id="3bdd201b6d5a378ed85ee5586e400d02a31b7b27" translate="yes" xml:space="preserve">
          <source>Headers#==</source>
          <target state="translated">Headers#==</target>
        </trans-unit>
        <trans-unit id="e2454e1a2adec4c4abce57e9d316c30599cefcc1" translate="yes" xml:space="preserve">
          <source>Headers#[]</source>
          <target state="translated">Headers#[]</target>
        </trans-unit>
        <trans-unit id="dcc8344bc32ccfbf4489f0f0432cfe514a247c70" translate="yes" xml:space="preserve">
          <source>Headers#[]=</source>
          <target state="translated">Headers#[]=</target>
        </trans-unit>
        <trans-unit id="21b3fc0102338474d9ab6e45175c197f156e953a" translate="yes" xml:space="preserve">
          <source>Headers#[]?</source>
          <target state="translated">Headers#[]?</target>
        </trans-unit>
        <trans-unit id="3c209b759fee993bc05201f94b3572e5c24afef3" translate="yes" xml:space="preserve">
          <source>Headers#add</source>
          <target state="translated">Headers#add</target>
        </trans-unit>
        <trans-unit id="4fa736ca236bcba03df9382e7c3bc39bf507f8ef" translate="yes" xml:space="preserve">
          <source>Headers#add?</source>
          <target state="translated">Headers#add?</target>
        </trans-unit>
        <trans-unit id="8e9e7c829c52d85e2d0a6fad6c077a234ecadcea" translate="yes" xml:space="preserve">
          <source>Headers#clone</source>
          <target state="translated">Headers#clone</target>
        </trans-unit>
        <trans-unit id="919f05fab2cdc2d9ac3fd125dd4ee077fc40c0b6" translate="yes" xml:space="preserve">
          <source>Headers#delete</source>
          <target state="translated">Headers#delete</target>
        </trans-unit>
        <trans-unit id="5c0851b57a17e97a14fe58383fd71fc9150aa285" translate="yes" xml:space="preserve">
          <source>Headers#dup</source>
          <target state="translated">Headers#dup</target>
        </trans-unit>
        <trans-unit id="a7abd60e1c7bfb5f8d1f9ca3f212807f515ffc9e" translate="yes" xml:space="preserve">
          <source>Headers#each</source>
          <target state="translated">Headers#each</target>
        </trans-unit>
        <trans-unit id="132fe3906deb7ad5b136a2d55e6ee01c91b554ce" translate="yes" xml:space="preserve">
          <source>Headers#empty?</source>
          <target state="translated">Headers#empty?</target>
        </trans-unit>
        <trans-unit id="d91fa6c0b375331417a67e8550ab974559707c4f" translate="yes" xml:space="preserve">
          <source>Headers#fetch</source>
          <target state="translated">Headers#fetch</target>
        </trans-unit>
        <trans-unit id="5a723ae21779e04a99a6f50d938c0347fa187b3b" translate="yes" xml:space="preserve">
          <source>Headers#get</source>
          <target state="translated">Headers#get</target>
        </trans-unit>
        <trans-unit id="202678bd81460ced28e15771d51c30dd78625e71" translate="yes" xml:space="preserve">
          <source>Headers#get?</source>
          <target state="translated">Headers#get?</target>
        </trans-unit>
        <trans-unit id="800d94dc63b20b7f29861e3a0160a06471f009b1" translate="yes" xml:space="preserve">
          <source>Headers#has_key?</source>
          <target state="translated">Headers#has_key?</target>
        </trans-unit>
        <trans-unit id="2b3eca4da4d17c1ff75227db3a4d9140db56ddb5" translate="yes" xml:space="preserve">
          <source>Headers#includes_word?</source>
          <target state="translated">Headers#includes_word?</target>
        </trans-unit>
        <trans-unit id="09106d17dccce21c0fcc26f3e0828954e7b1e43c" translate="yes" xml:space="preserve">
          <source>Headers#inspect</source>
          <target state="translated">Headers#inspect</target>
        </trans-unit>
        <trans-unit id="4500103e68ac1af6e421eb085d7f84a10430303e" translate="yes" xml:space="preserve">
          <source>Headers#merge!</source>
          <target state="translated">Headers#merge!</target>
        </trans-unit>
        <trans-unit id="395e373b743f49fe17bafc3e749b05c15b1248e8" translate="yes" xml:space="preserve">
          <source>Headers#pretty_print</source>
          <target state="translated">Headers#pretty_print</target>
        </trans-unit>
        <trans-unit id="5c9142190a4b6693bd9bb99c976f4ea1a1faef20" translate="yes" xml:space="preserve">
          <source>Headers#same?</source>
          <target state="translated">Headers#same?</target>
        </trans-unit>
        <trans-unit id="711c3766bd68d25186e6c869be56117a72266c78" translate="yes" xml:space="preserve">
          <source>Headers#to_s</source>
          <target state="translated">Headers#to_s</target>
        </trans-unit>
        <trans-unit id="e5a411595dbd9bb72b3a4ce6a62ee0834c3d00a1" translate="yes" xml:space="preserve">
          <source>Headers#valid_value?</source>
          <target state="translated">Headers#valid_value?</target>
        </trans-unit>
        <trans-unit id="14a8bd037ef7b52bc95e83523180fe03a50f36bf" translate="yes" xml:space="preserve">
          <source>Headers.new</source>
          <target state="translated">Headers.new</target>
        </trans-unit>
        <trans-unit id="eefe9851770f512e80ee651b7755471b0cd6db44" translate="yes" xml:space="preserve">
          <source>Hello Crystal</source>
          <target state="translated">你好,水晶</target>
        </trans-unit>
        <trans-unit id="2ef7bde608ce5404e97d5f042f95f89f1c232871" translate="yes" xml:space="preserve">
          <source>Hello World!</source>
          <target state="translated">你好,世界!</target>
        </trans-unit>
        <trans-unit id="07c83249c9dbef3c97618592cb70882535487498" translate="yes" xml:space="preserve">
          <source>Helper DSL module for emitting log entries with data.</source>
          <target state="translated">辅助DSL模块,用于发送带有数据的日志条目。</target>
        </trans-unit>
        <trans-unit id="4df1a9b69e1c2b1ae743303fdd119f9fec23b1b2" translate="yes" xml:space="preserve">
          <source>Helper method to use colorize with &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 一起使用colorize的辅助方法。</target>
        </trans-unit>
        <trans-unit id="a8d02feabc0878176f8623dd2a0a45bcff2814aa" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;&quot;haystack&quot;&lt;/code&gt; contains the pattern &lt;code&gt;/hay/&lt;/code&gt;, so it matches:</source>
          <target state="translated">这里的 &lt;code&gt;&quot;haystack&quot;&lt;/code&gt; 包含模式 &lt;code&gt;/hay/&lt;/code&gt; ，因此它匹配：</target>
        </trans-unit>
        <trans-unit id="64b11dd9b570744de1c495e829ead08fa8ac4026" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;&quot;haystack&quot;&lt;/code&gt; does not contain the pattern &lt;code&gt;/needle/&lt;/code&gt;, so it doesn't match:</source>
          <target state="translated">这里的 &lt;code&gt;&quot;haystack&quot;&lt;/code&gt; 不包含模式 &lt;code&gt;/needle/&lt;/code&gt; ，因此不匹配：</target>
        </trans-unit>
        <trans-unit id="dc4803158de8582311848d52873f94aee5800f48" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;channel.send&lt;/code&gt; is executed first, but since there's no one waiting for a value (yet), execution continues in other fibers. The second fiber is executed, there's a value on the channel, it's obtained, and execution continues, first with the first fiber, then with the main fiber, because &lt;code&gt;Fiber.yield&lt;/code&gt; puts a fiber at the end of the execution queue.</source>
          <target state="translated">这里先执行 &lt;code&gt;channel.send&lt;/code&gt; ，但是由于没有人在等待值（尚未），因此在其他光纤中继续执行。执行第二条光纤，在通道上获得一个值，然后执行，首先执行第一条光纤，然后执行主光纤，因为 &lt;code&gt;Fiber.yield&lt;/code&gt; 将光纤放在执行队列的末尾。</target>
        </trans-unit>
        <trans-unit id="3cfdf1d2ea720c414da50bb4c701cb11852af2c4" translate="yes" xml:space="preserve">
          <source>Here is a first example installing the &lt;code&gt;libsqlite3&lt;/code&gt; development package using the &lt;a href=&quot;https://docs.travis-ci.com/user/installing-dependencies/#installing-packages-with-the-apt-addon&quot;&gt;APT addon&lt;/a&gt;:</source>
          <target state="translated">这是使用&lt;a href=&quot;https://docs.travis-ci.com/user/installing-dependencies/#installing-packages-with-the-apt-addon&quot;&gt;APT插件&lt;/a&gt;安装 &lt;code&gt;libsqlite3&lt;/code&gt; 开发包的第一个示例：</target>
        </trans-unit>
        <trans-unit id="6fff5ed1ca4cdfd2d06699f9d3524d1264939a54" translate="yes" xml:space="preserve">
          <source>Here is an example installing the &lt;code&gt;libsqlite3&lt;/code&gt; development package:</source>
          <target state="translated">这是安装 &lt;code&gt;libsqlite3&lt;/code&gt; 开发包的示例：</target>
        </trans-unit>
        <trans-unit id="927f883723bbe204a16d65975684ef91abcdc775" translate="yes" xml:space="preserve">
          <source>Here is an example of such an invalid macro:</source>
          <target state="translated">下面是这样一个无效宏的例子。</target>
        </trans-unit>
        <trans-unit id="791d940bf7e69e4aabd0f851e5fe73d3822b0f3f" translate="yes" xml:space="preserve">
          <source>Here is the example:</source>
          <target state="translated">下面就是这个例子。</target>
        </trans-unit>
        <trans-unit id="c1d1177271d462a31930b23608f48344767667fa" translate="yes" xml:space="preserve">
          <source>Here is the new test file for testing against the database:</source>
          <target state="translated">这里是新的测试文件,用于对数据库进行测试。</target>
        </trans-unit>
        <trans-unit id="ca704d600b4c9241812692970cb74dedb269ff38" translate="yes" xml:space="preserve">
          <source>Here rule 5 (argument's default value) is used, and because the constant resolves to an integer literal, &lt;code&gt;@lucky_number&lt;/code&gt; is inferred to be &lt;code&gt;Int32&lt;/code&gt;.</source>
          <target state="translated">这里使用规则5（参数的默认值），并且由于常量解析为整数文字，因此 &lt;code&gt;@lucky_number&lt;/code&gt; 推断为 &lt;code&gt;Int32&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8b25f33ee1217fe67cd933566c920032175c409f" translate="yes" xml:space="preserve">
          <source>Here we are sending literal values, but the spawned fiber might compute this value by, for example, reading a file, or getting it from a socket. When this fiber will have to wait for I/O, other fibers will be able to continue executing code until I/O is ready, and finally when the value is ready and sent through the channel, the main fiber will receive it. For example:</source>
          <target state="translated">这里我们发送的是文字值,但是被产卵的光纤可能会通过比如读取文件,或者从socket中获取这个值来计算。当这个光纤将不得不等待I/O时,其他光纤将可以继续执行代码,直到I/O准备好,最后当值准备好并通过通道发送时,主光纤将收到它。比如说</target>
        </trans-unit>
        <trans-unit id="c40193c279e2f7ec9bd68f81f2e6a8a7ce17f69e" translate="yes" xml:space="preserve">
          <source>Here we have two fibers: one reads from a socket and the other does a &lt;code&gt;sleep&lt;/code&gt;. When the first fiber reaches the &lt;code&gt;socket.gets&lt;/code&gt; line, it gets suspended, the Event Loop is told to continue executing this fiber when there's data in the socket, and the program continues with the second fiber. This fiber wants to sleep for 5 seconds, so the Event Loop is told to continue with this fiber in 5 seconds. If there aren't other fibers to execute, the Event Loop will wait until either of these events happen, without consuming CPU time.</source>
          <target state="translated">在这里，我们有两种光纤：一种从套接字读取，另一种进行 &lt;code&gt;sleep&lt;/code&gt; 。当第一个光纤到达 &lt;code&gt;socket.gets&lt;/code&gt; 行时，它被挂起，当套接字中有数据时，事件循环被告知继续执行该光纤，程序继续使用第二个光纤。该光纤要睡眠5秒钟，因此被告知事件循环在5秒钟内继续使用该光纤。如果没有其他要执行的光纤，则事件循环将等待直到这些事件中的任何一个发生，而不会占用CPU时间。</target>
        </trans-unit>
        <trans-unit id="d866e046ae404ea87d8cf2035ce4163fa0ecec1e" translate="yes" xml:space="preserve">
          <source>Here we have two more examples to continue our first steps in Crystal:</source>
          <target state="translated">这里我们还有两个例子来继续我们在Crystal中的第一步。</target>
        </trans-unit>
        <trans-unit id="778d70bb36e337f938dd2c5941061e5107080462" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the final result, with invalid/missing options handling, plus other new options:</source>
          <target state="translated">这是最终结果，其中包含无效/缺失选项处理以及其他新选项：</target>
        </trans-unit>
        <trans-unit id="8064817ba593748e0cd1b51ba80518f2cf685dc3" translate="yes" xml:space="preserve">
          <source>Here's the list of items we want to achieve:</source>
          <target state="translated">这是我们想要实现的项目清单。</target>
        </trans-unit>
        <trans-unit id="a273a1e65183e7e2253338ddbf57d97e85ad1de6" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;person&lt;/code&gt; is an instance of &lt;code&gt;Person&lt;/code&gt;.</source>
          <target state="translated">在这里， &lt;code&gt;person&lt;/code&gt; 是 &lt;code&gt;Person&lt;/code&gt; 的一个实例。</target>
        </trans-unit>
        <trans-unit id="8fa3cfb029c24c2b9ed74872be0c73919fd60a4f" translate="yes" xml:space="preserve">
          <source>Here, the right-hand side of the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; expression is also guaranteed to have &lt;code&gt;a&lt;/code&gt; as not &lt;code&gt;Nil&lt;/code&gt;.</source>
          <target state="translated">在这里， &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 表达式的右侧也保证有 &lt;code&gt;a&lt;/code&gt; as not &lt;code&gt;Nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0576dafa3a6d78002d0ec77bd8c59311af63412a" translate="yes" xml:space="preserve">
          <source>Heredoc</source>
          <target state="translated">Heredoc</target>
        </trans-unit>
        <trans-unit id="7c55511090f1089e293a93e8d898f24f687884b5" translate="yes" xml:space="preserve">
          <source>Hexadecimal number conversion</source>
          <target state="translated">十六进制数转换</target>
        </trans-unit>
        <trans-unit id="6545a66293ad097bd78a4eb79c30cc399e147b98" translate="yes" xml:space="preserve">
          <source>Hexadecimal number conversion:</source>
          <target state="translated">十六进制数转换。</target>
        </trans-unit>
        <trans-unit id="603a8106c52c2dbf7c9614f1ce6e95d9d79a5eb7" translate="yes" xml:space="preserve">
          <source>Hexadecimal numbers start with &lt;code&gt;0x&lt;/code&gt;:</source>
          <target state="translated">十六进制数字以 &lt;code&gt;0x&lt;/code&gt; 开头：</target>
        </trans-unit>
        <trans-unit id="fe6afcbcf1e0df0d7250ec4a085cd52d5d029c9d" translate="yes" xml:space="preserve">
          <source>Hexdump</source>
          <target state="translated">Hexdump</target>
        </trans-unit>
        <trans-unit id="da5a74a209d870c306d59b65492d0a8b9435247e" translate="yes" xml:space="preserve">
          <source>Hexdump#close</source>
          <target state="translated">Hexdump#close</target>
        </trans-unit>
        <trans-unit id="7b85a0aa8132959bc660e70693c40cd50ef0f62c" translate="yes" xml:space="preserve">
          <source>Hexdump#closed?</source>
          <target state="translated">Hexdump#closed?</target>
        </trans-unit>
        <trans-unit id="219d5a7b7b51877ef091c550c9a10cef983b4c92" translate="yes" xml:space="preserve">
          <source>Hexdump#flush</source>
          <target state="translated">Hexdump#flush</target>
        </trans-unit>
        <trans-unit id="44705432250670e992222330972a059724cf8c9b" translate="yes" xml:space="preserve">
          <source>Hexdump#peek</source>
          <target state="translated">Hexdump#peek</target>
        </trans-unit>
        <trans-unit id="bf0f934e385b16308966ecd9d36b6beb162de9fd" translate="yes" xml:space="preserve">
          <source>Hexdump#pos</source>
          <target state="translated">Hexdump#pos</target>
        </trans-unit>
        <trans-unit id="c28e283aefb9d2ad3e1f9a7f7dd2f09cd09f3f46" translate="yes" xml:space="preserve">
          <source>Hexdump#pos=</source>
          <target state="translated">Hexdump#pos=</target>
        </trans-unit>
        <trans-unit id="1f404e8cd923acc800891b1495436bdf6f9b3705" translate="yes" xml:space="preserve">
          <source>Hexdump#read</source>
          <target state="translated">Hexdump#read</target>
        </trans-unit>
        <trans-unit id="4c3dcb1581f3910e185b3d9c0e2afe7f6ed4efc7" translate="yes" xml:space="preserve">
          <source>Hexdump#seek</source>
          <target state="translated">Hexdump#seek</target>
        </trans-unit>
        <trans-unit id="c7672dcab8125622f6b85a1d54c6268303359642" translate="yes" xml:space="preserve">
          <source>Hexdump#tty?</source>
          <target state="translated">Hexdump#tty?</target>
        </trans-unit>
        <trans-unit id="fbffdd9db25916feac91bd53be09ba993d403976" translate="yes" xml:space="preserve">
          <source>Hexdump#write</source>
          <target state="translated">Hexdump#write</target>
        </trans-unit>
        <trans-unit id="d7cc49c0e4bec681b0f067cceaef085f6075e003" translate="yes" xml:space="preserve">
          <source>Hexdump.new</source>
          <target state="translated">Hexdump.new</target>
        </trans-unit>
        <trans-unit id="f573ad3ac7fc86286d023b12c5fea40870af7bef" translate="yes" xml:space="preserve">
          <source>Hi and welcome to Crystal's Reference Book!</source>
          <target state="translated">你好,欢迎来到水晶的参考书!</target>
        </trans-unit>
        <trans-unit id="46a30dfff438dd7f0069657801938d02fdc101c4" translate="yes" xml:space="preserve">
          <source>Holds a binary representation of an IP address, either translated from a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, or directly received from an opened connection (e.g. &lt;code&gt;Socket#local_address&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../socket#receive(max_message_size=512):Tuple(String,Address)-instance-method&quot;&gt;Socket#receive&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">持有IP地址的二进制表示形式，可以从 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 转换，也可以直接从打开的连接中接收（例如 &lt;code&gt;Socket#local_address&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../socket#receive(max_message_size=512):Tuple(String,Address)-instance-method&quot;&gt;Socket#receive&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="eb0e27d131b0fb1bb1f1bd7eab4602c60be2e15d" translate="yes" xml:space="preserve">
          <source>Holds the local path of an UNIX address, usually coming from an opened connection (e.g. &lt;code&gt;Socket#local_address&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../socket#receive(max_message_size=512):Tuple(String,Address)-instance-method&quot;&gt;Socket#receive&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">存放UNIX地址的本地路径，通常来自打开的连接（例如 &lt;code&gt;Socket#local_address&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../socket#receive(max_message_size=512):Tuple(String,Address)-instance-method&quot;&gt;Socket#receive&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="eaff8022f26233772f4537f350a881de3ba45171" translate="yes" xml:space="preserve">
          <source>Hooks are defined here due to load order problems.</source>
          <target state="translated">由于加载顺序问题,这里定义了钩子。</target>
        </trans-unit>
        <trans-unit id="a5a7e131a5cb8762553101bda765297974113fa2" translate="yes" xml:space="preserve">
          <source>Host is down</source>
          <target state="translated">主机故障</target>
        </trans-unit>
        <trans-unit id="8766cde612147dd786d60bb7dcf31734d856c751" translate="yes" xml:space="preserve">
          <source>Hosting</source>
          <target state="translated">Hosting</target>
        </trans-unit>
        <trans-unit id="2df682f4b02b09385ba149d6befba013d6d9e4fe" translate="yes" xml:space="preserve">
          <source>Hosting on GitHub</source>
          <target state="translated">在GitHub上托管</target>
        </trans-unit>
        <trans-unit id="8642f07780421b0d3170c056f1f8c7cbd916dc28" translate="yes" xml:space="preserve">
          <source>Hosting on GitLab</source>
          <target state="translated">托管在GitLab上</target>
        </trans-unit>
        <trans-unit id="9e77be24e1d9f9a6429fa6d7b1acd7b51eaccf82" translate="yes" xml:space="preserve">
          <source>Hosting your &lt;code&gt;docs&lt;/code&gt; on GitHub-Pages</source>
          <target state="translated">将您的 &lt;code&gt;docs&lt;/code&gt; 托管在GitHub-Pages上</target>
        </trans-unit>
        <trans-unit id="1eb744033fe4560751f29c39db95a0df2b9d2fee" translate="yes" xml:space="preserve">
          <source>How call arguments are matched to method arguments</source>
          <target state="translated">调用参数如何与方法参数匹配?</target>
        </trans-unit>
        <trans-unit id="47f4b754bd1c140f2cc2c9137f70310a8ea91174" translate="yes" xml:space="preserve">
          <source>How do we use a connection from the &lt;code&gt;database&lt;/code&gt; object? For this, we could ask the database for a connection using the method &lt;code&gt;Database#checkout&lt;/code&gt;. But, doing this will require to explicitly return the connection to the pool using &lt;code&gt;Connection#release&lt;/code&gt;. Here is an example:</source>
          <target state="translated">我们如何使用来自 &lt;code&gt;database&lt;/code&gt; 对象的连接？为此，我们可以使用 &lt;code&gt;Database#checkout&lt;/code&gt; 方法向数据库请求连接。但是，这样做将需要使用 &lt;code&gt;Connection#release&lt;/code&gt; 将连接显式返回到池中。这是一个例子：</target>
        </trans-unit>
        <trans-unit id="e371f986aec612c968c497a3937bf4fb676656ac" translate="yes" xml:space="preserve">
          <source>How to redirect the standard input, output and error IO of a process.</source>
          <target state="translated">如何对进程的标准输入、输出和错误IO进行重定向。</target>
        </trans-unit>
        <trans-unit id="e13e18f3a4a56aeb9973b0c1bdfe43af2d3c3e20" translate="yes" xml:space="preserve">
          <source>How to use it</source>
          <target state="translated">如何使用</target>
        </trans-unit>
        <trans-unit id="ac8ed596ec4132a0adc4a8e0f97e1224bbc61518" translate="yes" xml:space="preserve">
          <source>How to write and release Crystal Shards.</source>
          <target state="translated">如何撰写和发布水晶碎片。</target>
        </trans-unit>
        <trans-unit id="fd74bb3935a3003d7a2963e09eb3bb855887c76a" translate="yes" xml:space="preserve">
          <source>However, if &lt;code&gt;x&lt;/code&gt; is closured by a proc, the type is always the mixed type of all assignments to it:</source>
          <target state="translated">但是，如果 &lt;code&gt;x&lt;/code&gt; 被proc封闭，则该类型始终是它所有分配的混合类型：</target>
        </trans-unit>
        <trans-unit id="f35bd7dddf28cf69b02ca56b241fe0738f8b2a62" translate="yes" xml:space="preserve">
          <source>However, if the programmer makes a typo, say &lt;code&gt;:reed&lt;/code&gt;, the error will only be caught at runtime, while attempting to use &lt;code&gt;Color::Reed&lt;/code&gt; will result in a compile-time error.</source>
          <target state="translated">但是，如果程序员输入错误，例如 &lt;code&gt;:reed&lt;/code&gt; ，则该错误将仅在运行时捕获，而尝试使用 &lt;code&gt;Color::Reed&lt;/code&gt; 则会导致编译时错误。</target>
        </trans-unit>
        <trans-unit id="ffa5c9f6d035a54423deeb161b811eff44fa5d5f" translate="yes" xml:space="preserve">
          <source>However, if you are writing a program and you realize that writing a semantically equivalent, faster version involves just minor changes, you shouldn't miss that opportunity.</source>
          <target state="translated">然而,如果你正在编写一个程序,并且你意识到编写一个语义等同、速度更快的版本只涉及到微小的改动,你就不应该错过这个机会。</target>
        </trans-unit>
        <trans-unit id="dcd0c8d34eda6de7b6020677f4f478d4cc1b7814" translate="yes" xml:space="preserve">
          <source>However, if you need to define a special main C function, you can redefine main and invoke &lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; from it:</source>
          <target state="translated">但是，如果需要定义特殊的main C函数，则可以重新定义main并 &lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; 调用Crystal.main：</target>
        </trans-unit>
        <trans-unit id="5d6957cdeb6d005f85c0e6800fa91696e04ce669" translate="yes" xml:space="preserve">
          <source>However, if you need to define a special main C function, you can redefine main and invoke &lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;block)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; from it:</source>
          <target state="translated">但是，如果需要定义特殊的main C函数，则可以重新定义main并 &lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;block)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; 调用Crystal.main：</target>
        </trans-unit>
        <trans-unit id="95df589eb012dfeb83f9f75716a6024ed36f80ea" translate="yes" xml:space="preserve">
          <source>However, regular code usually never involves pointer manipulation or uninitialized variables. And C bindings are usually wrapped in safe wrappers that include null pointers and bounds checks.</source>
          <target state="translated">然而,常规代码通常从不涉及指针操作或未初始化的变量。而C语言的绑定通常被包装在安全的包装器中,其中包括空指针和边界检查。</target>
        </trans-unit>
        <trans-unit id="8b76d8d52f1865e0b036a6b81ccef3542eef7b58" translate="yes" xml:space="preserve">
          <source>However, some C functions accept callbacks to be executed by other C functions. For example, suppose a fictitious library:</source>
          <target state="translated">然而,有些C函数接受回调,以便被其他C函数执行。例如,假设一个虚构的库。</target>
        </trans-unit>
        <trans-unit id="8b7f6f61db4cffcfc40af4c731fa331d5dca2ce5" translate="yes" xml:space="preserve">
          <source>However, the compiler cannot always figure out the order because there isn't always a total ordering, so it's always better to put less restrictive methods at the end.</source>
          <target state="translated">但是,编译器不可能总是搞清楚顺序,因为并不总是有一个总的排序,所以总是把限制较少的方法放在最后比较好。</target>
        </trans-unit>
        <trans-unit id="38a4bdb40af442e7e74a86fa577e8408da50a983" translate="yes" xml:space="preserve">
          <source>However, you can change this default type:</source>
          <target state="translated">但是,你可以改变这个默认类型。</target>
        </trans-unit>
        <trans-unit id="3c340af4d2168e057117e243b06e715ad8dc2e6c" translate="yes" xml:space="preserve">
          <source>Html output will be in &lt;code&gt;_book&lt;/code&gt; folder (some links won't work if opening the files locally). There is also a docker environment to avoid installing dependencies globally:</source>
          <target state="translated">HTML输出将位于 &lt;code&gt;_book&lt;/code&gt; 文件夹中（如果在本地打开文件，则某些链接将不起作用）。还有一个docker环境可以避免全局安装依赖项：</target>
        </trans-unit>
        <trans-unit id="02342873892967fe32540d86bc32dd82a38485c0" translate="yes" xml:space="preserve">
          <source>I want to use &lt;a href=&quot;ci/circleci&quot;&gt;CircleCI&lt;/a&gt;</source>
          <target state="translated">我想使用&lt;a href=&quot;ci/circleci&quot;&gt;CircleCI&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd1714835d6bb9cb205af10f267a1f90fb156bc8" translate="yes" xml:space="preserve">
          <source>I want to use &lt;a href=&quot;ci/travis&quot;&gt;Travis CI&lt;/a&gt;</source>
          <target state="translated">我想使用&lt;a href=&quot;ci/travis&quot;&gt;Travis CI&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ebbb4168ae41092fa1e5acdd9525dbb76efe7843" translate="yes" xml:space="preserve">
          <source>I.e. This method returns &lt;code&gt;ceil(log2(self &amp;lt; 0 ? -self : self + 1))&lt;/code&gt;.</source>
          <target state="translated">即，此方法返回 &lt;code&gt;ceil(log2(self &amp;lt; 0 ? -self : self + 1))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cfb8efb0ed2a0e843062bd494febb53b03f95265" translate="yes" xml:space="preserve">
          <source>IE 11 on Windows 7</source>
          <target state="translated">Windows 7上的IE 11</target>
        </trans-unit>
        <trans-unit id="6969542799be4f3a836d0ff1c8e7f05eee2ed94d" translate="yes" xml:space="preserve">
          <source>IE8 on Windows XP</source>
          <target state="translated">Windows XP上的IE8</target>
        </trans-unit>
        <trans-unit id="6bd2d044f529b888aa92832232e1060e3cde18a1" translate="yes" xml:space="preserve">
          <source>IIS date format</source>
          <target state="translated">IIS日期格式</target>
        </trans-unit>
        <trans-unit id="e7eb1f3fa97480d0a00295acb4acc566a473a87d" translate="yes" xml:space="preserve">
          <source>INI</source>
          <target state="translated">INI</target>
        </trans-unit>
        <trans-unit id="65d5be4140c13b9f503e89562431940c3b4bc0b0" translate="yes" xml:space="preserve">
          <source>INI::ParseException</source>
          <target state="translated">INI::ParseException</target>
        </trans-unit>
        <trans-unit id="e407745dc4da76300d463243d1a952838b027c7c" translate="yes" xml:space="preserve">
          <source>INI::ParseException#column_number</source>
          <target state="translated">INI::ParseException#column_number</target>
        </trans-unit>
        <trans-unit id="3a2e48ddb307c94937c4d59c28c00ad2af7f2fcf" translate="yes" xml:space="preserve">
          <source>INI::ParseException#line_number</source>
          <target state="translated">INI::ParseException#line_number</target>
        </trans-unit>
        <trans-unit id="50d9b7a39e7f505f02b85cbc33b04759d49da3c7" translate="yes" xml:space="preserve">
          <source>INI::ParseException#location</source>
          <target state="translated">INI::ParseException#location</target>
        </trans-unit>
        <trans-unit id="9c0cbe1c5ec5f64712786bf65345241d335843e8" translate="yes" xml:space="preserve">
          <source>INI::ParseException.new</source>
          <target state="translated">INI::ParseException.new</target>
        </trans-unit>
        <trans-unit id="9d8fb39373007c2c84580d473e2a6e10a1f4c15d" translate="yes" xml:space="preserve">
          <source>IO</source>
          <target state="translated">IO</target>
        </trans-unit>
        <trans-unit id="566a670e61a8e4d1e7efd6c23a278bfde47594e4" translate="yes" xml:space="preserve">
          <source>IO object that prints an hexadecimal dump of all transferred data.</source>
          <target state="translated">打印所有传输数据的十六进制转储的IO对象。</target>
        </trans-unit>
        <trans-unit id="a0ebc553c0950444335888850c35bc5b45771325" translate="yes" xml:space="preserve">
          <source>IO returns &lt;code&gt;false&lt;/code&gt;, but including types may override.</source>
          <target state="translated">IO返回 &lt;code&gt;false&lt;/code&gt; ，但包括类型可能会覆盖。</target>
        </trans-unit>
        <trans-unit id="7b3e934523e5e4c5624e48558e159f8018d99fc6" translate="yes" xml:space="preserve">
          <source>IO#gets</source>
          <target state="translated">IO#gets</target>
        </trans-unit>
        <trans-unit id="423eb4a376ec712f40c7e1408db4ff6669560264" translate="yes" xml:space="preserve">
          <source>IO#peek</source>
          <target state="translated">IO#peek</target>
        </trans-unit>
        <trans-unit id="954a624f78bfa13a5a43dd6b7e5c884fd29c7c34" translate="yes" xml:space="preserve">
          <source>IO#pos</source>
          <target state="translated">IO#pos</target>
        </trans-unit>
        <trans-unit id="58aa9f7c224480ddf10a3a8c4d95eea27bfd49c7" translate="yes" xml:space="preserve">
          <source>IO#pos=</source>
          <target state="translated">IO#pos=</target>
        </trans-unit>
        <trans-unit id="64e6ee169eecef39a002bf2d04d707d5fefd7206" translate="yes" xml:space="preserve">
          <source>IO#puts</source>
          <target state="translated">IO#puts</target>
        </trans-unit>
        <trans-unit id="b8d5b753485372e43ef8ab3728b6602a027f9c10" translate="yes" xml:space="preserve">
          <source>IO#read</source>
          <target state="translated">IO#read</target>
        </trans-unit>
        <trans-unit id="0f93e29eaa1f0a1508bd05d5499b79652e99f70f" translate="yes" xml:space="preserve">
          <source>IO#seek</source>
          <target state="translated">IO#seek</target>
        </trans-unit>
        <trans-unit id="4d3e8f80b93fab222b9a665b89cf260a1df3515f" translate="yes" xml:space="preserve">
          <source>IO#skip</source>
          <target state="translated">IO#skip</target>
        </trans-unit>
        <trans-unit id="4830578fcb01624f1856c33ede245bb67a18506b" translate="yes" xml:space="preserve">
          <source>IO#tell</source>
          <target state="translated">IO#tell</target>
        </trans-unit>
        <trans-unit id="87820103dae801e709ff0bd27dc4c15b9c916495" translate="yes" xml:space="preserve">
          <source>IO#tty?</source>
          <target state="translated">IO#tty?</target>
        </trans-unit>
        <trans-unit id="7a35965f2eee33ad6fee8ef156ec97a0d062675d" translate="yes" xml:space="preserve">
          <source>IO.copy</source>
          <target state="translated">IO.copy</target>
        </trans-unit>
        <trans-unit id="b2c9083534e83ccaf77b01fd67845c0794c627bb" translate="yes" xml:space="preserve">
          <source>IO.pipe</source>
          <target state="translated">IO.pipe</target>
        </trans-unit>
        <trans-unit id="01c59c2ffab19b9e3d2cd09ae7382ebb4c7d93fd" translate="yes" xml:space="preserve">
          <source>IO::Buffered</source>
          <target state="translated">IO::Buffered</target>
        </trans-unit>
        <trans-unit id="21372f0faca58d77b3760d8e20d82058c3a3add7" translate="yes" xml:space="preserve">
          <source>IO::ByteFormat</source>
          <target state="translated">IO::ByteFormat</target>
        </trans-unit>
        <trans-unit id="1f83187aff6da4492c71736db0994d22f5ab761a" translate="yes" xml:space="preserve">
          <source>IO::Delimited</source>
          <target state="translated">IO::Delimited</target>
        </trans-unit>
        <trans-unit id="660b803bc10a1456374b44f202aca0ae510119be" translate="yes" xml:space="preserve">
          <source>IO::EOFError</source>
          <target state="translated">IO::EOFError</target>
        </trans-unit>
        <trans-unit id="e76d1c22ca830f1b5152f3c5940ba3ee970dce00" translate="yes" xml:space="preserve">
          <source>IO::EOFError.new</source>
          <target state="translated">IO::EOFError.new</target>
        </trans-unit>
        <trans-unit id="fc63595f77c7ad1c4a87b4946062e09109228e68" translate="yes" xml:space="preserve">
          <source>IO::EncodingOptions</source>
          <target state="translated">IO::EncodingOptions</target>
        </trans-unit>
        <trans-unit id="20cab7e58a4e883b7238720cefc2352e4ba554db" translate="yes" xml:space="preserve">
          <source>IO::Error</source>
          <target state="translated">IO::Error</target>
        </trans-unit>
        <trans-unit id="a0bd78bb2c694b3fe4fd3dc98a9e578e90af0ea9" translate="yes" xml:space="preserve">
          <source>IO::Evented</source>
          <target state="translated">IO::Evented</target>
        </trans-unit>
        <trans-unit id="5e2d31a604cbc6cf47d3adc4391b38121479004c" translate="yes" xml:space="preserve">
          <source>IO::FileDescriptor</source>
          <target state="translated">IO::FileDescriptor</target>
        </trans-unit>
        <trans-unit id="ea027f90d536fb5e480dabc212b039c72ea5f8fb" translate="yes" xml:space="preserve">
          <source>IO::Hexdump</source>
          <target state="translated">IO::Hexdump</target>
        </trans-unit>
        <trans-unit id="f2e43aec5630fd2afdf4c6087c2e5b71959c78ac" translate="yes" xml:space="preserve">
          <source>IO::Memory</source>
          <target state="translated">IO::Memory</target>
        </trans-unit>
        <trans-unit id="56d5aeb5c5671555b689dccef8134c28c4bcdf1f" translate="yes" xml:space="preserve">
          <source>IO::MultiWriter</source>
          <target state="translated">IO::MultiWriter</target>
        </trans-unit>
        <trans-unit id="f9da106e13aabf1b761fca029eb2d9b11645aca6" translate="yes" xml:space="preserve">
          <source>IO::Seek</source>
          <target state="translated">IO::Seek</target>
        </trans-unit>
        <trans-unit id="0228e622c1deebc8786bc6eb1f5e15485eea47b8" translate="yes" xml:space="preserve">
          <source>IO::Sized</source>
          <target state="translated">IO::Sized</target>
        </trans-unit>
        <trans-unit id="2bf6f5a0af49d19225382797be0e98d2947ade2d" translate="yes" xml:space="preserve">
          <source>IO::Stapled</source>
          <target state="translated">IO::Stapled</target>
        </trans-unit>
        <trans-unit id="3a3240210832c6f780d752d4db09983165bfc504" translate="yes" xml:space="preserve">
          <source>IO::Timeout</source>
          <target state="translated">IO::Timeout</target>
        </trans-unit>
        <trans-unit id="ba990ce438ed234c5d33812d3d62d9da0c776982" translate="yes" xml:space="preserve">
          <source>IO::TimeoutError</source>
          <target state="translated">IO::TimeoutError</target>
        </trans-unit>
        <trans-unit id="482dfdc8812701af27fb84d3cc5a94cd408b6ee0" translate="yes" xml:space="preserve">
          <source>IOBackend</source>
          <target state="translated">IOBackend</target>
        </trans-unit>
        <trans-unit id="72b05a379b1e0bd2b557e431954dbeadccfe91d8" translate="yes" xml:space="preserve">
          <source>IOBackend#format</source>
          <target state="translated">IOBackend#format</target>
        </trans-unit>
        <trans-unit id="117d34748acb4627526074ce8a371af45c51e9dc" translate="yes" xml:space="preserve">
          <source>IOBackend#formatter</source>
          <target state="translated">IOBackend#formatter</target>
        </trans-unit>
        <trans-unit id="fbcf2161931679beccf2d2ca7fca2338a5d42eca" translate="yes" xml:space="preserve">
          <source>IOBackend#formatter=</source>
          <target state="translated">IOBackend#formatter=</target>
        </trans-unit>
        <trans-unit id="09d800eda63beed75491826efd13679351220593" translate="yes" xml:space="preserve">
          <source>IOBackend#io</source>
          <target state="translated">IOBackend#io</target>
        </trans-unit>
        <trans-unit id="282a4aa489218815963fb59f42f8a7bc45dc5b27" translate="yes" xml:space="preserve">
          <source>IOBackend#io=</source>
          <target state="translated">IOBackend#io=</target>
        </trans-unit>
        <trans-unit id="b95ff91ca3bf425bca0f1e71450c03ed487b45f3" translate="yes" xml:space="preserve">
          <source>IOBackend#write</source>
          <target state="translated">IOBackend#write</target>
        </trans-unit>
        <trans-unit id="d203e533d69cf2bb0d3478bcf986326ebb668df2" translate="yes" xml:space="preserve">
          <source>IOBackend.new</source>
          <target state="translated">IOBackend.new</target>
        </trans-unit>
        <trans-unit id="53d460bd6d289b3cc74a6a3560cd60cca1d1c118" translate="yes" xml:space="preserve">
          <source>IP address representation.</source>
          <target state="translated">IP地址表示。</target>
        </trans-unit>
        <trans-unit id="bd07fb46e99cb2fe8d13d04faa7e9fca91c4a40b" translate="yes" xml:space="preserve">
          <source>IPAddress</source>
          <target state="translated">IPAddress</target>
        </trans-unit>
        <trans-unit id="ff943fedcc139bc9c0d34034e597b1c2e5b8bb89" translate="yes" xml:space="preserve">
          <source>IPAddress#==</source>
          <target state="translated">IPAddress#==</target>
        </trans-unit>
        <trans-unit id="91b3280f2b9b55985f5d83c0a95721c83d0abf88" translate="yes" xml:space="preserve">
          <source>IPAddress#address</source>
          <target state="translated">IPAddress#address</target>
        </trans-unit>
        <trans-unit id="9b20017a26654d7631c1a96c2ef7062b19a5d437" translate="yes" xml:space="preserve">
          <source>IPAddress#inspect</source>
          <target state="translated">IPAddress#inspect</target>
        </trans-unit>
        <trans-unit id="30eec978c47a5d4457cee5fb6c1c5dc2196fe6e2" translate="yes" xml:space="preserve">
          <source>IPAddress#loopback?</source>
          <target state="translated">IPAddress#loopback?</target>
        </trans-unit>
        <trans-unit id="99f74bacacdd372aae0d3868d541ebeaec8a2392" translate="yes" xml:space="preserve">
          <source>IPAddress#port</source>
          <target state="translated">IPAddress#port</target>
        </trans-unit>
        <trans-unit id="0d1ee1efe44f2a0b2ea8b4d806eec6caafd2d123" translate="yes" xml:space="preserve">
          <source>IPAddress#pretty_print</source>
          <target state="translated">IPAddress#pretty_print</target>
        </trans-unit>
        <trans-unit id="e9aec66cdca49eaa51b0dd5f0a4b99f56e87f3b7" translate="yes" xml:space="preserve">
          <source>IPAddress#to_s</source>
          <target state="translated">IPAddress#to_s</target>
        </trans-unit>
        <trans-unit id="d2993a51a2825bdfdc71445bb22215c30648314e" translate="yes" xml:space="preserve">
          <source>IPAddress#to_unsafe</source>
          <target state="translated">IPAddress#to_unsafe</target>
        </trans-unit>
        <trans-unit id="3635a6e2db5f7c152b2118e59154e14cebbfaf18" translate="yes" xml:space="preserve">
          <source>IPAddress#unspecified?</source>
          <target state="translated">IPAddress#unspecified?</target>
        </trans-unit>
        <trans-unit id="8beb7de16738c3111b39fb73b14862ccb25e5bfb" translate="yes" xml:space="preserve">
          <source>IPAddress.from</source>
          <target state="translated">IPAddress.from</target>
        </trans-unit>
        <trans-unit id="18e1aaffd534cd31d310e4314838add13ea3c7fd" translate="yes" xml:space="preserve">
          <source>IPAddress.new</source>
          <target state="translated">IPAddress.new</target>
        </trans-unit>
        <trans-unit id="12846dc8d01982baf0e3baf0d88ec66a1ed6c819" translate="yes" xml:space="preserve">
          <source>IPAddress.parse</source>
          <target state="translated">IPAddress.parse</target>
        </trans-unit>
        <trans-unit id="187e8ad927a0dc4f33b57ce0c2a1bd751d5005fd" translate="yes" xml:space="preserve">
          <source>IPS::Entry</source>
          <target state="translated">IPS::Entry</target>
        </trans-unit>
        <trans-unit id="5cd3524fe4042a9ad5cb73dc1aa09456d7866021" translate="yes" xml:space="preserve">
          <source>IPS::Entry#action</source>
          <target state="translated">IPS::Entry#action</target>
        </trans-unit>
        <trans-unit id="32a7c63dbb5eab4e734b33d11b9d03a4a91ec822" translate="yes" xml:space="preserve">
          <source>IPS::Entry#action=</source>
          <target state="translated">IPS::Entry#action=</target>
        </trans-unit>
        <trans-unit id="8507578a118008eecab0c86186a54633814fe558" translate="yes" xml:space="preserve">
          <source>IPS::Entry#bytes_per_op</source>
          <target state="translated">IPS::Entry#bytes_per_op</target>
        </trans-unit>
        <trans-unit id="9abed2cfad8bed6df2d7b3d3f8b022ee2ed924ee" translate="yes" xml:space="preserve">
          <source>IPS::Entry#bytes_per_op=</source>
          <target state="translated">IPS::Entry#bytes_per_op=</target>
        </trans-unit>
        <trans-unit id="94bd22db3f9fe284caaefaf976caef57f82811bd" translate="yes" xml:space="preserve">
          <source>IPS::Entry#bytes_per_op?</source>
          <target state="translated">IPS::Entry#bytes_per_op?</target>
        </trans-unit>
        <trans-unit id="0acd3517fbe6494ebd8b46d14b597145046164fe" translate="yes" xml:space="preserve">
          <source>IPS::Entry#calculate_stats</source>
          <target state="translated">IPS::Entry#calculate_stats</target>
        </trans-unit>
        <trans-unit id="c712ff5406aae0fab5950549e5fdf92dfd3ef785" translate="yes" xml:space="preserve">
          <source>IPS::Entry#call</source>
          <target state="translated">IPS::Entry#call</target>
        </trans-unit>
        <trans-unit id="3208d85d06f4b6c9274cb539def26afd57cc542d" translate="yes" xml:space="preserve">
          <source>IPS::Entry#call_for_100ms</source>
          <target state="translated">IPS::Entry#call_for_100ms</target>
        </trans-unit>
        <trans-unit id="3ad7bdb026e97e404bafe71c5a80b7b69ef2c4ca" translate="yes" xml:space="preserve">
          <source>IPS::Entry#cycles</source>
          <target state="translated">IPS::Entry#cycles</target>
        </trans-unit>
        <trans-unit id="3af1ef1f3189b14da9283ba7ec7a445bed76e008" translate="yes" xml:space="preserve">
          <source>IPS::Entry#cycles=</source>
          <target state="translated">IPS::Entry#cycles=</target>
        </trans-unit>
        <trans-unit id="3a74a3f49bad5e1798e47c13ea71a9fd89d8c19d" translate="yes" xml:space="preserve">
          <source>IPS::Entry#cycles?</source>
          <target state="translated">IPS::Entry#cycles?</target>
        </trans-unit>
        <trans-unit id="7da7bedc7960e7afbed27a7061797a1f3d17a5ba" translate="yes" xml:space="preserve">
          <source>IPS::Entry#human_compare</source>
          <target state="translated">IPS::Entry#human_compare</target>
        </trans-unit>
        <trans-unit id="967a16fbbe84e14ee6276ccd6e2d96d11f6bdbcc" translate="yes" xml:space="preserve">
          <source>IPS::Entry#human_iteration_time</source>
          <target state="translated">IPS::Entry#human_iteration_time</target>
        </trans-unit>
        <trans-unit id="205c42faef28fed689dc6450bb1131a195c2b6c0" translate="yes" xml:space="preserve">
          <source>IPS::Entry#human_mean</source>
          <target state="translated">IPS::Entry#human_mean</target>
        </trans-unit>
        <trans-unit id="f0fb2461d5bb91aa88104601418e57094b1a8e20" translate="yes" xml:space="preserve">
          <source>IPS::Entry#label</source>
          <target state="translated">IPS::Entry#label</target>
        </trans-unit>
        <trans-unit id="24d603d16095977bf379517f14a48b3506080e57" translate="yes" xml:space="preserve">
          <source>IPS::Entry#label=</source>
          <target state="translated">IPS::Entry#label=</target>
        </trans-unit>
        <trans-unit id="c1be7e35357fd1554a50661f13d2c4ef033b9e7a" translate="yes" xml:space="preserve">
          <source>IPS::Entry#mean</source>
          <target state="translated">IPS::Entry#mean</target>
        </trans-unit>
        <trans-unit id="36a86a454f3ed41d1d6c7635f61a6c183441c101" translate="yes" xml:space="preserve">
          <source>IPS::Entry#mean=</source>
          <target state="translated">IPS::Entry#mean=</target>
        </trans-unit>
        <trans-unit id="813602f114068048be1ec0dc015cbe2dd673b204" translate="yes" xml:space="preserve">
          <source>IPS::Entry#mean?</source>
          <target state="translated">IPS::Entry#mean?</target>
        </trans-unit>
        <trans-unit id="ed38b4527e036a975379b8a6a72ac69a55a83487" translate="yes" xml:space="preserve">
          <source>IPS::Entry#ran?</source>
          <target state="translated">IPS::Entry#ran?</target>
        </trans-unit>
        <trans-unit id="9907f36b9ee723d962153ae268f130acfb2e85f7" translate="yes" xml:space="preserve">
          <source>IPS::Entry#relative_stddev</source>
          <target state="translated">IPS::Entry#relative_stddev</target>
        </trans-unit>
        <trans-unit id="01d6a92304e0614a9e8d57db664bf1e6796dd770" translate="yes" xml:space="preserve">
          <source>IPS::Entry#relative_stddev=</source>
          <target state="translated">IPS::Entry#relative_stddev=</target>
        </trans-unit>
        <trans-unit id="2b03cafaa10d9c66c85b9efe3975e9fa3701657f" translate="yes" xml:space="preserve">
          <source>IPS::Entry#relative_stddev?</source>
          <target state="translated">IPS::Entry#relative_stddev?</target>
        </trans-unit>
        <trans-unit id="6e74a828ed1512f7a1c005602a955eb22f220660" translate="yes" xml:space="preserve">
          <source>IPS::Entry#set_cycles</source>
          <target state="translated">IPS::Entry#set_cycles</target>
        </trans-unit>
        <trans-unit id="a0f048f1bd755deba238cc1d7ff06313256ff862" translate="yes" xml:space="preserve">
          <source>IPS::Entry#size</source>
          <target state="translated">IPS::Entry#size</target>
        </trans-unit>
        <trans-unit id="7dfe2b5f7c8495c06b202f0c9f75134f17787910" translate="yes" xml:space="preserve">
          <source>IPS::Entry#size=</source>
          <target state="translated">IPS::Entry#size=</target>
        </trans-unit>
        <trans-unit id="ebd3f04b36ba7b722464f34e3ed28b8530652e53" translate="yes" xml:space="preserve">
          <source>IPS::Entry#size?</source>
          <target state="translated">IPS::Entry#size?</target>
        </trans-unit>
        <trans-unit id="5706783e76346cc79d4d7881d1c879e1deb85ef9" translate="yes" xml:space="preserve">
          <source>IPS::Entry#slower</source>
          <target state="translated">IPS::Entry#slower</target>
        </trans-unit>
        <trans-unit id="f9157a117e07322ccbfda6cdb723aff3a5177e2c" translate="yes" xml:space="preserve">
          <source>IPS::Entry#slower=</source>
          <target state="translated">IPS::Entry#slower=</target>
        </trans-unit>
        <trans-unit id="c3a7062e78b6bc62ee92b074d9a991f8d4267462" translate="yes" xml:space="preserve">
          <source>IPS::Entry#slower?</source>
          <target state="translated">IPS::Entry#slower?</target>
        </trans-unit>
        <trans-unit id="c4c74149071433ee1e367907d082be98d2ba6e3f" translate="yes" xml:space="preserve">
          <source>IPS::Entry#stddev</source>
          <target state="translated">IPS::Entry#stddev</target>
        </trans-unit>
        <trans-unit id="651157a8768893bf91474e1aecb5d32fc628e130" translate="yes" xml:space="preserve">
          <source>IPS::Entry#stddev=</source>
          <target state="translated">IPS::Entry#stddev=</target>
        </trans-unit>
        <trans-unit id="fb6e7f806bb8ee40beb341537753a660b0731146" translate="yes" xml:space="preserve">
          <source>IPS::Entry#stddev?</source>
          <target state="translated">IPS::Entry#stddev?</target>
        </trans-unit>
        <trans-unit id="85cf8c7ddb90481b6a70e9ed16a068ea144f13ce" translate="yes" xml:space="preserve">
          <source>IPS::Entry#variance</source>
          <target state="translated">IPS::Entry#variance</target>
        </trans-unit>
        <trans-unit id="7d23d788bdb6b5ee607ef5f3968cf6bae85381ca" translate="yes" xml:space="preserve">
          <source>IPS::Entry#variance=</source>
          <target state="translated">IPS::Entry#variance=</target>
        </trans-unit>
        <trans-unit id="81162b3d4f15be4379ee8465a237d9d9675a27ae" translate="yes" xml:space="preserve">
          <source>IPS::Entry#variance?</source>
          <target state="translated">IPS::Entry#variance?</target>
        </trans-unit>
        <trans-unit id="cd0fe766412b54b23f12e39e383a9b38467b4f72" translate="yes" xml:space="preserve">
          <source>IPS::Entry.new</source>
          <target state="translated">IPS::Entry.new</target>
        </trans-unit>
        <trans-unit id="fc0a4ec4acf9d51175d4caad6e38cdff26432fc9" translate="yes" xml:space="preserve">
          <source>IPS::Job</source>
          <target state="translated">IPS::Job</target>
        </trans-unit>
        <trans-unit id="282111bedc015dbc0cb7c222dda43e7939d7c57f" translate="yes" xml:space="preserve">
          <source>IPS::Job#execute</source>
          <target state="translated">IPS::Job#execute</target>
        </trans-unit>
        <trans-unit id="b3c06c73790bdbcf40a653656912db2e3df6c35e" translate="yes" xml:space="preserve">
          <source>IPS::Job#items</source>
          <target state="translated">IPS::Job#items</target>
        </trans-unit>
        <trans-unit id="c74c7fdfcf49c63dbc1d5e3aa1ebee583d5907d9" translate="yes" xml:space="preserve">
          <source>IPS::Job#items=</source>
          <target state="translated">IPS::Job#items=</target>
        </trans-unit>
        <trans-unit id="ae1a8d67c2220c0e54ff9551a1b1a7ce0e3a3d5a" translate="yes" xml:space="preserve">
          <source>IPS::Job#report</source>
          <target state="translated">IPS::Job#report</target>
        </trans-unit>
        <trans-unit id="8d5953a348176d3e57606b464bb265aac10b6d03" translate="yes" xml:space="preserve">
          <source>IPS::Job.new</source>
          <target state="translated">IPS::Job.new</target>
        </trans-unit>
        <trans-unit id="f4f73036f2160743e22e15df55aaacea0c9c24bd" translate="yes" xml:space="preserve">
          <source>IPSocket</source>
          <target state="translated">IPSocket</target>
        </trans-unit>
        <trans-unit id="1e4121d0729d3383b3e475d56a3cb1ea70f85743" translate="yes" xml:space="preserve">
          <source>ISAAC#new_seed</source>
          <target state="translated">ISAAC#new_seed</target>
        </trans-unit>
        <trans-unit id="d35cbb0b70fd21bccd8d8f868f4b0f174d7e355d" translate="yes" xml:space="preserve">
          <source>ISAAC#next_u</source>
          <target state="translated">ISAAC#next_u</target>
        </trans-unit>
        <trans-unit id="acc8af541fff3394a1e9faef770cd91730b0aba8" translate="yes" xml:space="preserve">
          <source>ISAAC.new</source>
          <target state="translated">ISAAC.new</target>
        </trans-unit>
        <trans-unit id="aba22a08c3d8f577a02d3f2eee47803c962e2bb7" translate="yes" xml:space="preserve">
          <source>ISO 8601 allows some freedom over the syntax and RFC 3339 exercises that freedom to rigidly define a fixed format intended for use in internet protocols and standards.</source>
          <target state="translated">ISO 8601允许在语法上有一定的自由度,而RFC 3339则行使了这种自由度,严格地定义了一个固定的格式,用于互联网协议和标准。</target>
        </trans-unit>
        <trans-unit id="7c1a745105ff9b6c357cf50bdd91090ffef6ae55" translate="yes" xml:space="preserve">
          <source>Identifier removed</source>
          <target state="translated">标识符已删除</target>
        </trans-unit>
        <trans-unit id="1e93e317f014b06d6be17bf1cbc4a58a08ff9299" translate="yes" xml:space="preserve">
          <source>Identifiers may contain any unicode characters. Individual symbols are separated by a single space character () which must be escaped to use it as a part of an identifier.</source>
          <target state="translated">标识符可以包含任何unicode字符。单个符号之间用一个空格字符()隔开,必须转义后才能作为标识符的一部分使用。</target>
        </trans-unit>
        <trans-unit id="696f8d0b72d4a63b474ef8b387292cf251a3b628" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;../env&quot;&gt;ENV&lt;/a&gt;[&quot;TZ&quot;]&lt;/code&gt; is not set, the system's local time zone data will be used (&lt;code&gt;/etc/localtime&lt;/code&gt; on unix-based systems).</source>
          <target state="translated">如果未设置 &lt;code&gt;&lt;a href=&quot;../env&quot;&gt;ENV&lt;/a&gt;[&quot;TZ&quot;]&lt;/code&gt; ，将使用系统的本地时区数据（在基于unix的系统上为 &lt;code&gt;/etc/localtime&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6309788fd36df3106e50e46ec0bb407990ddd58f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;delimited#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, closing this &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; will close the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;&lt;a href=&quot;delimited#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; 确实 &lt;code&gt;true&lt;/code&gt; ，关闭此 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 将关闭基础 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df565692580464904b72cc05c4672d4618cfed50" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;multiwriter#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, closing this &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; will close all of the underlying IOs.</source>
          <target state="translated">如果 &lt;code&gt;&lt;a href=&quot;multiwriter#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; ，关闭此 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 将关闭所有底层IO的。</target>
        </trans-unit>
        <trans-unit id="0e2dcb097408e4145c1763e9539ef0671c1c6ac0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;reader#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, closing this IO will close the underlying IO.</source>
          <target state="translated">如果 &lt;code&gt;&lt;a href=&quot;reader#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 时，关闭此IO将关闭基础IO。</target>
        </trans-unit>
        <trans-unit id="19bdc7a23cb0ddbbc370614aeb44bb709db2be01" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;server#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, closing this server will close the wrapped server.</source>
          <target state="translated">如果 &lt;code&gt;&lt;a href=&quot;server#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; ，关闭此服务器将关闭包装的服务器。</target>
        </trans-unit>
        <trans-unit id="176c57a5f3d2f30907b441f29f06fc87152a4b1a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;sized#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, closing this &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; will close the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;&lt;a href=&quot;sized#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; 确实 &lt;code&gt;true&lt;/code&gt; ，关闭此 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 将关闭基础 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90c86068c82d52746191a17ebb946efaecbcb07a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;socket#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, closing this socket will close the underlying IO.</source>
          <target state="translated">如果 &lt;code&gt;&lt;a href=&quot;socket#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; ，关闭此套接字将关闭基础IO。</target>
        </trans-unit>
        <trans-unit id="aabeb33ab5cf2649b99f1d81e9d3f97f7785ffa9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;stapled#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, closing this &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; will close the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">如果 &lt;code&gt;&lt;a href=&quot;stapled#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 时，关闭此 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 将关闭基础 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="faa9fe823f5e8f053665595e8e5f2e1b8653c5c6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;stapled#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, it will also close the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">如果 &lt;code&gt;&lt;a href=&quot;stapled#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; ，它也将关闭底层 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 秒。</target>
        </trans-unit>
        <trans-unit id="d84a8acd3481dbcb7d432a5cda140a291b0b58fd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;status#normal_exit?-instance-method&quot;&gt;#normal_exit?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, returns the exit code of the process.</source>
          <target state="translated">如果 &lt;code&gt;&lt;a href=&quot;status#normal_exit?-instance-method&quot;&gt;#normal_exit?&lt;/a&gt;&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，返回进程的退出代码。</target>
        </trans-unit>
        <trans-unit id="404a5472fbbe7159062d4a079a2ec107013e58b1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;status#normal_exit?:Bool-instance-method&quot;&gt;#normal_exit?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, returns the exit code of the process.</source>
          <target state="translated">如果 &lt;code&gt;&lt;a href=&quot;status#normal_exit?:Bool-instance-method&quot;&gt;#normal_exit?&lt;/a&gt;&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，返回进程的退出代码。</target>
        </trans-unit>
        <trans-unit id="9ce56af18819ea8ae30de92f63e36238ef03660b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;status#signal_exit?-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, returns the &lt;em&gt;Signal&lt;/em&gt; the process received and didn't handle.</source>
          <target state="translated">如果 &lt;code&gt;&lt;a href=&quot;status#signal_exit?-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，返回已收到但未处理的&lt;em&gt;信号&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="d4b1bd00aa116410f238d2ab34e3736aaea21704" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;status#signal_exit?-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, returns the &lt;em&gt;Signal&lt;/em&gt; the process received and didn't handle. Will raise if &lt;code&gt;&lt;a href=&quot;status#signal_exit?-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;&lt;a href=&quot;status#signal_exit?-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，返回已收到但未处理的&lt;em&gt;信号&lt;/em&gt;。如果 &lt;code&gt;&lt;a href=&quot;status#signal_exit?-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; 会加价？是 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a18990c52011352748357760211345dc8685ce0d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;status#signal_exit?:Bool-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, returns the &lt;em&gt;Signal&lt;/em&gt; the process received and didn't handle.</source>
          <target state="translated">如果 &lt;code&gt;&lt;a href=&quot;status#signal_exit?:Bool-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，返回已收到但未处理的&lt;em&gt;信号&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="54629c120bb9f2431571a5b1bd503b1e86baa7f5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;status#signal_exit?:Bool-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, returns the &lt;em&gt;Signal&lt;/em&gt; the process received and didn't handle. Will raise if &lt;code&gt;&lt;a href=&quot;status#signal_exit?:Bool-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;&lt;a href=&quot;status#signal_exit?:Bool-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，返回已收到但未处理的&lt;em&gt;信号&lt;/em&gt;。如果 &lt;code&gt;&lt;a href=&quot;status#signal_exit?:Bool-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; 会加价？是 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="118b99c87b9f334fe135ea24ea60ca095da620a2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;writer#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, closing this IO will close the underlying IO.</source>
          <target state="translated">如果 &lt;code&gt;&lt;a href=&quot;writer#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 时，关闭此IO将关闭基础IO。</target>
        </trans-unit>
        <trans-unit id="6f5c618cd8069294c00c33511ad14e5f66c57dc7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;zone#name:String-instance-method&quot;&gt;#name&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, the formatted &lt;code&gt;&lt;a href=&quot;zone#offset:Int32-instance-method&quot;&gt;#offset&lt;/a&gt;&lt;/code&gt; will be used as &lt;code&gt;&lt;a href=&quot;zone#name:String-instance-method&quot;&gt;#name&lt;/a&gt;&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;zone#format(io:IO,with_colon=true,with_seconds=:auto)-instance-method&quot;&gt;#format&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">如果 &lt;code&gt;&lt;a href=&quot;zone#name:String-instance-method&quot;&gt;#name&lt;/a&gt;&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则格式化的 &lt;code&gt;&lt;a href=&quot;zone#offset:Int32-instance-method&quot;&gt;#offset&lt;/a&gt;&lt;/code&gt; 将用作 &lt;code&gt;&lt;a href=&quot;zone#name:String-instance-method&quot;&gt;#name&lt;/a&gt;&lt;/code&gt; （请参阅 &lt;code&gt;&lt;a href=&quot;zone#format(io:IO,with_colon=true,with_seconds=:auto)-instance-method&quot;&gt;#format&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ed14ae205e8b50ac900092813bf7c57bc5a54db2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;MyHash&lt;/code&gt; is generic, the above is equivalent to this:</source>
          <target state="translated">如果 &lt;code&gt;MyHash&lt;/code&gt; 是通用的，则以上等效于此：</target>
        </trans-unit>
        <trans-unit id="a9633387b451b3f09cffe8b4c0728a615bf78682" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Point&lt;/code&gt; is inherited, an array of such type should also account for the fact that other types can be inside it, so the size of each element should grow to accommodate that. That is certainly unexpected. So, non-abstract structs can't be inherited from. Abstract structs, on the other hand, will have descendants, so it is expected that an array of them will account for the possibility of having multiple types inside it.</source>
          <target state="translated">如果 &lt;code&gt;Point&lt;/code&gt; 是继承的，则此类型的数组还应考虑到其他类型可以在其中的事实，因此每个元素的大小应增加以容纳该类型。这当然是出乎意料的。因此，不能继承非抽象结构。另一方面，抽象结构将具有后代，因此可以预期，它们的数组将说明内部具有多个类型的可能性。</target>
        </trans-unit>
        <trans-unit id="001824d6a11cb5f87430d46237946d9fcfe13e12" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;T1&lt;/code&gt; and &lt;code&gt;T2&lt;/code&gt; are under the same hierarchy, and their nearest common ancestor &lt;code&gt;Parent&lt;/code&gt; is not &lt;code&gt;Reference&lt;/code&gt;, &lt;code&gt;Struct&lt;/code&gt;, &lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt; nor &lt;code&gt;Value&lt;/code&gt;, the resulting type is &lt;code&gt;Parent+&lt;/code&gt;. This is called a virtual type, which basically means the compiler will now see the type as being &lt;code&gt;Parent&lt;/code&gt; or any of its subtypes.</source>
          <target state="translated">如果 &lt;code&gt;T1&lt;/code&gt; 和 &lt;code&gt;T2&lt;/code&gt; 在同一层次结构中，并且它们的最接近的共同祖先 &lt;code&gt;Parent&lt;/code&gt; 不是 &lt;code&gt;Reference&lt;/code&gt; ， &lt;code&gt;Struct&lt;/code&gt; ， &lt;code&gt;Int&lt;/code&gt; ， &lt;code&gt;Float&lt;/code&gt; 或 &lt;code&gt;Value&lt;/code&gt; ，则结果类型为 &lt;code&gt;Parent+&lt;/code&gt; 。这称为虚拟类型，基本上是指编译器现在将类型视为 &lt;code&gt;Parent&lt;/code&gt; 类型或其任何子类型。</target>
        </trans-unit>
        <trans-unit id="cfcde4d4b19cac8e803c09f648ae18a646571057" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;T&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;&lt;/code&gt; then this is equivalent to &lt;code&gt;&lt;a href=&quot;number#slice(*nums,read_only=false)-macro&quot;&gt;Number.slice&lt;/a&gt;&lt;/code&gt; (numbers will be coerced to the type &lt;code&gt;T&lt;/code&gt;)</source>
          <target state="translated">如果 &lt;code&gt;T&lt;/code&gt; 是一个 &lt;code&gt;&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;&lt;/code&gt; ,那么它等效于 &lt;code&gt;&lt;a href=&quot;number#slice(*nums,read_only=false)-macro&quot;&gt;Number.slice&lt;/a&gt;&lt;/code&gt; （数字将被强制转换为 &lt;code&gt;T&lt;/code&gt; 类型）</target>
        </trans-unit>
        <trans-unit id="c508a87dc0d0dfb6bbb2a994f5702cb16978cb67" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;compress&lt;/code&gt; isn't set to &lt;code&gt;false&lt;/code&gt;, and no &lt;code&gt;Accept-Encoding&lt;/code&gt; header is explicitly specified, an HTTP::Client will add an &lt;code&gt;&quot;Accept-Encoding&quot;: &quot;gzip, deflate&quot;&lt;/code&gt; header, and automatically decompress the response body/body_io.</source>
          <target state="translated">如果 &lt;code&gt;compress&lt;/code&gt; 的设置未设置为 &lt;code&gt;false&lt;/code&gt; ，并且未明确指定 &lt;code&gt;Accept-Encoding&lt;/code&gt; 头，则HTTP :: Client将添加 &lt;code&gt;&quot;Accept-Encoding&quot;: &quot;gzip, deflate&quot;&lt;/code&gt; 头，并自动解压缩响应主体/ body_io。</target>
        </trans-unit>
        <trans-unit id="c9443900999907e25a9a3699f28e5a935063e785" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;focus&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, only this &lt;code&gt;&lt;a href=&quot;methods#context(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;#context&lt;/a&gt;&lt;/code&gt;, and others marked with &lt;code&gt;focus: true&lt;/code&gt;, will run.</source>
          <target state="translated">如果 &lt;code&gt;focus&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，则仅此 &lt;code&gt;&lt;a href=&quot;methods#context(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;#context&lt;/a&gt;&lt;/code&gt; 以及其他带有 &lt;code&gt;focus: true&lt;/code&gt; 标记将运行。</target>
        </trans-unit>
        <trans-unit id="9b6e440c50d9b5a5b10130dd64bb721bd20927fb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;focus&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, only this &lt;code&gt;&lt;a href=&quot;methods#context(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;#context&lt;/a&gt;&lt;/code&gt;, and others marked with &lt;code&gt;focus: true&lt;/code&gt;, will run.</source>
          <target state="translated">如果 &lt;code&gt;focus&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，则仅此 &lt;code&gt;&lt;a href=&quot;methods#context(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;#context&lt;/a&gt;&lt;/code&gt; 以及其他带有 &lt;code&gt;focus: true&lt;/code&gt; 标记将运行。</target>
        </trans-unit>
        <trans-unit id="c43cbb0cd26e2eaac009a678d114ac2ec97686ba" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;focus&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, only this &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt;, and others marked with &lt;code&gt;focus: true&lt;/code&gt;, will run.</source>
          <target state="translated">如果 &lt;code&gt;focus&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，则仅此 &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt; 以及其他带有 &lt;code&gt;focus: true&lt;/code&gt; 标记将运行。</target>
        </trans-unit>
        <trans-unit id="d13b463286ea732bbaa1d0ec1b05709a9f8c5451" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;focus&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, only this &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt;, and others marked with &lt;code&gt;focus: true&lt;/code&gt;, will run.</source>
          <target state="translated">如果 &lt;code&gt;focus&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，则只会运行此 &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt; 和其他标记为 &lt;code&gt;focus: true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6d7ded0d009f0c6ff76df23628f806a0c4bd196" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;focus&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, only this test, and others marked with &lt;code&gt;focus: true&lt;/code&gt;, will run.</source>
          <target state="translated">如果 &lt;code&gt;focus&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，则仅运行此测试以及其他带有 &lt;code&gt;focus: true&lt;/code&gt; 标记的测试。</target>
        </trans-unit>
        <trans-unit id="40b8f4fc8c1858269ed8034bc4b0514d2f9963f7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;host&lt;/code&gt; is not empty, it will be prepended to &lt;code&gt;&lt;a href=&quot;unixaddress#path:String-instance-method&quot;&gt;#path&lt;/a&gt;&lt;/code&gt; to form a relative path.</source>
          <target state="translated">如果 &lt;code&gt;host&lt;/code&gt; 不为空，它将被添加到 &lt;code&gt;&lt;a href=&quot;unixaddress#path:String-instance-method&quot;&gt;#path&lt;/a&gt;&lt;/code&gt; 之前以形成相对路径。</target>
        </trans-unit>
        <trans-unit id="0afcb2d5562ff7693e73d94564b16c12cae0354d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;node&lt;/code&gt; parses to a null value, returns &lt;code&gt;nil&lt;/code&gt;, otherwise invokes the given block.</source>
          <target state="translated">如果 &lt;code&gt;node&lt;/code&gt; 解析为null值，则返回 &lt;code&gt;nil&lt;/code&gt; ，否则调用给定的块。</target>
        </trans-unit>
        <trans-unit id="bf531f12e26b5c03372773ce0a2f9504bd05586c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;self&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; range, it provides O(1) implementation, otherwise it is same as &lt;code&gt;&lt;a href=&quot;enumerable#sum-instance-method&quot;&gt;Enumerable#sum&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;self&lt;/code&gt; 是一个 &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 范围，则它提供O（1）实现，否则与 &lt;code&gt;&lt;a href=&quot;enumerable#sum-instance-method&quot;&gt;Enumerable#sum&lt;/a&gt;&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="31a9e43c95323f0200030968fdd2b35a8560a9f2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;self&lt;/code&gt;'s size is the same as &lt;em&gt;other&lt;/em&gt;'s size, this method yields elements from &lt;code&gt;self&lt;/code&gt; and &lt;em&gt;other&lt;/em&gt; in tandem: if the block returns true for all of them, this method returns &lt;code&gt;true&lt;/code&gt;. Otherwise it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;self&lt;/code&gt; 的大小与&lt;em&gt;other&lt;/em&gt;的大小相同，则此方法串联地从 &lt;code&gt;self&lt;/code&gt; 和&lt;em&gt;other&lt;/em&gt;产生元素：如果块对所有元素的返回均为true，则此方法返回 &lt;code&gt;true&lt;/code&gt; 。否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf2489b31bd4768233dc45aa6e65c3c8b215192c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;x&lt;/code&gt; is assigned something else after the block, the compiler knows the type changed:</source>
          <target state="translated">如果在块之后给 &lt;code&gt;x&lt;/code&gt; 分配了其他内容，则编译器知道类型已更改：</target>
        </trans-unit>
        <trans-unit id="a5b062925c845396eae106827a0314b752e9836c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;backreferences&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt; (the default value), &lt;em&gt;replacement&lt;/em&gt; can include backreferences:</source>
          <target state="translated">如果&lt;em&gt;反向引用&lt;/em&gt;为 &lt;code&gt;true&lt;/code&gt; （默认值），则&lt;em&gt;替换&lt;/em&gt;可以包括反向引用：</target>
        </trans-unit>
        <trans-unit id="f648955f6dd8544bc8a2903673e1f4e3e9b8dc88" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;command&lt;/em&gt; contains no spaces and &lt;em&gt;args&lt;/em&gt; is given, it will become its argument list.</source>
          <target state="translated">如果&lt;em&gt;command不&lt;/em&gt;包含空格并且给出了&lt;em&gt;args&lt;/em&gt;，它将成为其参数列表。</target>
        </trans-unit>
        <trans-unit id="ce1e70f9c6dc375c5f06cd46945845804bc1450b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;command&lt;/em&gt; contains spaces and &lt;em&gt;args&lt;/em&gt; is given, &lt;em&gt;command&lt;/em&gt; must include &lt;code&gt;&quot;${@}&quot;&lt;/code&gt; (including the quotes) to receive the argument list.</source>
          <target state="translated">如果&lt;em&gt;命令&lt;/em&gt;包含空格并且给出了&lt;em&gt;args&lt;/em&gt;，则&lt;em&gt;命令&lt;/em&gt;必须包含 &lt;code&gt;&quot;${@}&quot;&lt;/code&gt; （包括引号）以接收参数列表。</target>
        </trans-unit>
        <trans-unit id="45c3de480bb4db74776b8b33618c1c66da449ce4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;count&lt;/em&gt; is bigger than the number of elements in the array, returns an empty array.</source>
          <target state="translated">如果&lt;em&gt;count&lt;/em&gt;大于数组中的元素数，则返回一个空数组。</target>
        </trans-unit>
        <trans-unit id="fe0e995399fcadb3f8c8f91b22de715523c4592b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;count&lt;/em&gt; is bigger than the number of elements in the collection, returns an empty array.</source>
          <target state="translated">如果&lt;em&gt;count&lt;/em&gt;大于集合中的元素数，则返回一个空数组。</target>
        </trans-unit>
        <trans-unit id="3cff5feb6241c1079b517e48db098f878df765f6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;count&lt;/em&gt; is bigger than the number of elements in the collection, returns as many as possible. This include the case of calling it over an empty collection, in which case it returns an empty array.</source>
          <target state="translated">如果&lt;em&gt;count&lt;/em&gt;大于集合中的元素数，则返回尽可能多的元素。这包括通过空集合调用它的情况，在这种情况下，它返回一个空数组。</target>
        </trans-unit>
        <trans-unit id="4b341eeb963983de41f3ef55fc807427c76167f2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;count&lt;/em&gt; is greater than the number of bits of this integer, returns 0</source>
          <target state="translated">如果&lt;em&gt;count&lt;/em&gt;大于此整数的位数，则返回0</target>
        </trans-unit>
        <trans-unit id="31d16d63e314d6f981adf805cb2d0e19621bea1d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;count&lt;/em&gt; is negative, a left shift is performed</source>
          <target state="translated">如果&lt;em&gt;计数&lt;/em&gt;为负，则执行左移</target>
        </trans-unit>
        <trans-unit id="b1b0da30675a7f8de5eef3d0b1990a5608f449d1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;count&lt;/em&gt; is negative, a right shift is performed</source>
          <target state="translated">如果&lt;em&gt;计数&lt;/em&gt;为负，则执行右移</target>
        </trans-unit>
        <trans-unit id="5905bfba811efd936414e9db6f91154ff1bcb612" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;count&lt;/em&gt; is zero, &lt;em&gt;value&lt;/em&gt; is inserted at &lt;em&gt;index&lt;/em&gt;.</source>
          <target state="translated">如果&lt;em&gt;count&lt;/em&gt;为零，则将&lt;em&gt;value&lt;/em&gt;插入&lt;em&gt;index&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ce2f1b6b72d1830f1bec3b922c6517174b82ef04" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;decimal_places&lt;/em&gt; is &lt;code&gt;nil&lt;/code&gt;, all significant decimal places are printed (similar to &lt;code&gt;#to_s&lt;/code&gt;). If the argument has a numeric value, the number of visible decimal places will be fixed to that amount.</source>
          <target state="translated">如果&lt;em&gt;decimal_places&lt;/em&gt;为 &lt;code&gt;nil&lt;/code&gt; ，则打印所有有效的小数位（类似于 &lt;code&gt;#to_s&lt;/code&gt; ）。如果参数具有数字值，则可见的小数位数将固定为该数值。</target>
        </trans-unit>
        <trans-unit id="115a61602aeae7203aae7dece9983de6574631fd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;denominator&lt;/em&gt; is 0, this will raise an exception.</source>
          <target state="translated">如果&lt;em&gt;分母&lt;/em&gt;为0，将引发异常。</target>
        </trans-unit>
        <trans-unit id="4f36629bbf6c3d4cef6f46ab2b338c6c05c0d2fd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;dest_dir&lt;/em&gt; is not a directory, raises an &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果&lt;em&gt;dest_dir&lt;/em&gt;不是目录，则引发 &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bfee9e01c7a4bff75c159a7d05cc10d525bd9cbf" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;directory_listing&lt;/em&gt; is &lt;code&gt;false&lt;/code&gt;, directory listing is disabled. This means that paths matching directories are ignored and next handler is called.</source>
          <target state="translated">如果&lt;em&gt;directory_listing&lt;/em&gt;为 &lt;code&gt;false&lt;/code&gt; ，则禁用目录列表。这意味着将忽略与目录匹配的路径，并调用下一个处理程序。</target>
        </trans-unit>
        <trans-unit id="c8b5d853bd93e12cea13f5afd52f21eb1556e369" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;expand_base&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, &lt;em&gt;base&lt;/em&gt; itself will be expanded in &lt;code&gt;&lt;a href=&quot;dir#current:String-class-method&quot;&gt;Dir.current&lt;/a&gt;&lt;/code&gt; if it is not an absolute path. This guarantees the method returns an absolute path (assuming that &lt;code&gt;&lt;a href=&quot;dir#current:String-class-method&quot;&gt;Dir.current&lt;/a&gt;&lt;/code&gt; is absolute).</source>
          <target state="translated">如果&lt;em&gt;expand_base&lt;/em&gt;为 &lt;code&gt;true&lt;/code&gt; ，则如果不是绝对路径，&lt;em&gt;base&lt;/em&gt;本身也会在 &lt;code&gt;&lt;a href=&quot;dir#current:String-class-method&quot;&gt;Dir.current&lt;/a&gt;&lt;/code&gt; 中扩展。这样可以保证该方法返回绝对路径（假设 &lt;code&gt;&lt;a href=&quot;dir#current:String-class-method&quot;&gt;Dir.current&lt;/a&gt;&lt;/code&gt; 是绝对路径）。</target>
        </trans-unit>
        <trans-unit id="dfff6100ca8880d8ae619d927854f24108d530ed" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;fallthrough&lt;/em&gt; is &lt;code&gt;false&lt;/code&gt;, this handler does not call next handler when request method is neither GET or HEAD, then serves &lt;code&gt;405 Method Not Allowed&lt;/code&gt;. Otherwise, it calls next handler.</source>
          <target state="translated">如果&lt;em&gt;fallthrough&lt;/em&gt;为 &lt;code&gt;false&lt;/code&gt; ，则当请求方法既不是GET也不是HEAD时，此处理程序不调用下一个处理程序，然后提供 &lt;code&gt;405 Method Not Allowed&lt;/code&gt; 。否则，它将调用下一个处理程序。</target>
        </trans-unit>
        <trans-unit id="f526ba3b4eb326f43ba94631830b6fa9dd84bd42" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;follow_symlinks&lt;/em&gt; is set (the default), symbolic links are followed. Otherwise, symbolic links return information on the symlink itself.</source>
          <target state="translated">如果设置了&lt;em&gt;follow_symlinks&lt;/em&gt;（默认设置），则遵循符号链接。否则，符号链接将返回有关符号链接本身的信息。</target>
        </trans-unit>
        <trans-unit id="d22c7ebe10fe7967f687cd9177e44841ed9f8838" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;headers&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, row values can be accessed with header names or patterns. Headers are always stripped.</source>
          <target state="translated">如果&lt;em&gt;headers&lt;/em&gt;为 &lt;code&gt;true&lt;/code&gt; ，则可以使用标题名称或模式访问行值。标题始终被剥夺。</target>
        </trans-unit>
        <trans-unit id="e2eb1afe7020efb6c3e7594c8335ccd697d415c6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;key&lt;/em&gt; or &lt;em&gt;value&lt;/em&gt; contains a null-byte an &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; is raised.</source>
          <target state="translated">如果&lt;em&gt;键&lt;/em&gt;或&lt;em&gt;值&lt;/em&gt;包含一个空字节，则会引发 &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e65be4b66c30ae73f6229f7368512720e9da983" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;limit&lt;/em&gt; is present, the array will be limited to &lt;em&gt;limit&lt;/em&gt; items and the final item will contain the remainder of the string.</source>
          <target state="translated">如果存在&lt;em&gt;限制&lt;/em&gt;，则数组将限制为&lt;em&gt;限制&lt;/em&gt;项目，而最终项目将包含字符串的其余部分。</target>
        </trans-unit>
        <trans-unit id="05d991cbb1a6f148364ea70b4bea463f4cfdb90b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;limit&lt;/em&gt; is present, up to &lt;em&gt;limit&lt;/em&gt; new strings will be created, with the entire remainder added to the last string.</source>
          <target state="translated">如果&lt;em&gt;极限&lt;/em&gt;存在，达到&lt;em&gt;极限&lt;/em&gt;新的字符串将被创建，与添加到最后一个字符串的全部剩余部分。</target>
        </trans-unit>
        <trans-unit id="956488a99c627f88b0b8d1646f6f57b3fc4ac483" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;lower&lt;/em&gt; is true, lower camelcase will be returned (the first letter is downcased).</source>
          <target state="translated">如果&lt;em&gt;lower&lt;/em&gt;为true，则返回小写的驼峰字母（首字母大写）。</target>
        </trans-unit>
        <trans-unit id="bffa5477730573d263536395079bc63220191087" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;lower&lt;/em&gt; is true, lower camelcase will be written (the first letter is downcased).</source>
          <target state="translated">如果&lt;em&gt;lower&lt;/em&gt;为true，则将写入小写的大写字母（首字母大写）。</target>
        </trans-unit>
        <trans-unit id="fff52173390ecb60674a8bd8d76db9e1610faa2d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;match_hidden&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt; the pattern will match hidden files and folders.</source>
          <target state="translated">如果&lt;em&gt;match_hidden&lt;/em&gt;为 &lt;code&gt;true&lt;/code&gt; ,则模式将匹配隐藏的文件和文件夹。</target>
        </trans-unit>
        <trans-unit id="fccf4f6039a3be2aa91638eedd6a9ca9828b1e86" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;message&lt;/em&gt; is &lt;code&gt;nil&lt;/code&gt;, the default message for &lt;em&gt;status&lt;/em&gt; is used provided by &lt;code&gt;&lt;a href=&quot;../status#description:String?-instance-method&quot;&gt;HTTP::Status#description&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果&lt;em&gt;message&lt;/em&gt;为 &lt;code&gt;nil&lt;/code&gt; ，则使用 &lt;code&gt;&lt;a href=&quot;../status#description:String?-instance-method&quot;&gt;HTTP::Status#description&lt;/a&gt;&lt;/code&gt; 提供的默认&lt;em&gt;状态&lt;/em&gt;消息。</target>
        </trans-unit>
        <trans-unit id="2d67ea054e60e53ff93b07e22b356d281d0ab5c0" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;message&lt;/em&gt; is a string, it matches if the exception's error message contains that string. If &lt;em&gt;message&lt;/em&gt; is a regular expression, it is used to match the error message.</source>
          <target state="translated">如果&lt;em&gt;message&lt;/em&gt;是字符串，则异常错误消息中包含该字符串，则匹配。如果&lt;em&gt;message&lt;/em&gt;是正则表达式，则用于匹配错误消息。</target>
        </trans-unit>
        <trans-unit id="0331c9ca7f98fa42634ea6fc79272138a5f13ea9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;n&lt;/em&gt; is greater than the size of &lt;code&gt;self&lt;/code&gt;, all values will be removed from &lt;code&gt;self&lt;/code&gt; without raising an error.</source>
          <target state="translated">如果&lt;em&gt;n&lt;/em&gt;大于 &lt;code&gt;self&lt;/code&gt; 的大小，则将所有值从 &lt;code&gt;self&lt;/code&gt; 中删除，而不会引发错误。</target>
        </trans-unit>
        <trans-unit id="ffda41aba9f04619155715dd2271140da5a593c6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offset&lt;/em&gt; is given, it defines the position to &lt;em&gt;end&lt;/em&gt; the search (elements beyond this point are ignored).</source>
          <target state="translated">如果指定了&lt;em&gt;offset&lt;/em&gt;，则它将定义&lt;em&gt;结束&lt;/em&gt;搜索的位置（超出此点的元素将被忽略）。</target>
        </trans-unit>
        <trans-unit id="60d078df7bf0aab4171defe954eb11b9c30cc61f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offset&lt;/em&gt; is given, the search starts from that index towards the first elements in &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">如果给出&lt;em&gt;offset&lt;/em&gt;，则搜索从该索引开始，直到 &lt;code&gt;self&lt;/code&gt; 的第一个元素。</target>
        </trans-unit>
        <trans-unit id="0238d61b41d5a362f7256c1e2c2a3ce19c122c25" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;port&lt;/em&gt; is &lt;code&gt;nil&lt;/code&gt;, the existing default port for the &lt;em&gt;scheme&lt;/em&gt;, if any, will be unregistered.</source>
          <target state="translated">如果&lt;em&gt;port&lt;/em&gt;为 &lt;code&gt;nil&lt;/code&gt; ，则该&lt;em&gt;方案&lt;/em&gt;的现有默认端口（如果有）将被取消注册。</target>
        </trans-unit>
        <trans-unit id="6977acf4283ba5a98a2bfca0a1ce4cc9efabf12d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;remove_empty&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, any empty strings are not yielded.</source>
          <target state="translated">如果&lt;em&gt;remove_empty&lt;/em&gt;为 &lt;code&gt;true&lt;/code&gt; ，则不产生任何空字符串。</target>
        </trans-unit>
        <trans-unit id="ef8dc17fa9384b73c535ec7ba87f83d9e1b27d9f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;remove_empty&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, any empty strings are removed from the result.</source>
          <target state="translated">如果&lt;em&gt;remove_empty&lt;/em&gt;为 &lt;code&gt;true&lt;/code&gt; ，则从结果中删除所有空字符串。</target>
        </trans-unit>
        <trans-unit id="1684a4928ad6ac9568e1e053c3911624c9b10319" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;reuse&lt;/em&gt; is &lt;code&gt;false&lt;/code&gt;, the method will create a new array for each chunk</source>
          <target state="translated">如果&lt;em&gt;重用&lt;/em&gt;为 &lt;code&gt;false&lt;/code&gt; ，则该方法将为每个块创建一个新数组</target>
        </trans-unit>
        <trans-unit id="c451a834de5ed8b3bf6ff443447ee0473649b5ea" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;reuse&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, the method will create a new array and reuse it.</source>
          <target state="translated">如果&lt;em&gt;重用&lt;/em&gt;为 &lt;code&gt;true&lt;/code&gt; ，则该方法将创建一个新数组并重用它。</target>
        </trans-unit>
        <trans-unit id="43891ffe4967f64ff183af8a6d31446ec93dd6a5" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;reuse&lt;/em&gt; is an &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;, that array will be reused</source>
          <target state="translated">如果&lt;em&gt;复用&lt;/em&gt;是一个 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; ，则该数组将被复用</target>
        </trans-unit>
        <trans-unit id="37cfe537d2c94bf7215651550e0d45d92d7ac877" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;reuse&lt;/em&gt; is an &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;, this array will be reused</source>
          <target state="translated">如果&lt;em&gt;重用&lt;/em&gt;是一个 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; ，则此数组将被重用</target>
        </trans-unit>
        <trans-unit id="73bc52c555d7d08614f2ad6e46dbec1869f702c1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;reuse&lt;/em&gt; is an instance of &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;deque&quot;&gt;Deque&lt;/a&gt;&lt;/code&gt; or a similar collection type (implementing &lt;code&gt;#&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;#shift&lt;/code&gt; and &lt;code&gt;#size&lt;/code&gt;) it will be used.</source>
          <target state="translated">如果&lt;em&gt;重用&lt;/em&gt;是 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;deque&quot;&gt;Deque&lt;/a&gt;&lt;/code&gt; 或类似的集合类型（实现 &lt;code&gt;#&amp;lt;&amp;lt;&lt;/code&gt; ，# &lt;code&gt;#shift&lt;/code&gt; 和 &lt;code&gt;#size&lt;/code&gt; ）的实例，则将使用它。</target>
        </trans-unit>
        <trans-unit id="5c7ecad99943e84db09dee5580ed37e4213eca24" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;reuse&lt;/em&gt; is an instance of &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;deque&quot;&gt;Deque&lt;/a&gt;&lt;/code&gt; or a similar collection type (implementing &lt;code&gt;#&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;#shift&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;enumerable#size-instance-method&quot;&gt;#size&lt;/a&gt;&lt;/code&gt;) it will be used.</source>
          <target state="translated">如果&lt;em&gt;重用&lt;/em&gt;是 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;deque&quot;&gt;Deque&lt;/a&gt;&lt;/code&gt; 或类似的集合类型（实现 &lt;code&gt;#&amp;lt;&amp;lt;&lt;/code&gt; ，# &lt;code&gt;#shift&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;enumerable#size-instance-method&quot;&gt;#size&lt;/a&gt;&lt;/code&gt; ）的实例，则将使用它。</target>
        </trans-unit>
        <trans-unit id="272a2b66d32510445ff1cbbc6b1ac09996322b98" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;reuse&lt;/em&gt; is falsey, the array will not be reused.</source>
          <target state="translated">如果&lt;em&gt;重用&lt;/em&gt;是错误的，则该阵列将不会被重用。</target>
        </trans-unit>
        <trans-unit id="71c7aaa7bf4894847f2d8855c4c82b407a5d57f4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;reuse&lt;/em&gt; is given, the array can be reused</source>
          <target state="translated">如果给出了&lt;em&gt;重用&lt;/em&gt;，则该数组可以被重用</target>
        </trans-unit>
        <trans-unit id="acdb08315081f9f2abf430f088329a2ad5ed8b73" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;reuse&lt;/em&gt; is truthy, the method will create a new array and reuse it.</source>
          <target state="translated">如果&lt;em&gt;重用&lt;/em&gt;是正确的，则该方法将创建一个新数组并重用它。</target>
        </trans-unit>
        <trans-unit id="a0f8a943e7ebf91fc52658b99bb50526423627e4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;reuse_port&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, it enables the &lt;code&gt;SO_REUSEPORT&lt;/code&gt; socket option, which allows multiple processes to bind to the same port.</source>
          <target state="translated">如果&lt;em&gt;redirect_port&lt;/em&gt;为 &lt;code&gt;true&lt;/code&gt; ，则启用 &lt;code&gt;SO_REUSEPORT&lt;/code&gt; 套接字选项，该选项允许多个进程绑定到同一端口。</target>
        </trans-unit>
        <trans-unit id="460e68d8ef01e52ccd847c95228ab1a81ae0f55f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;separator&lt;/em&gt; is an empty regex (&lt;code&gt;//&lt;/code&gt;), the string will be separated into one-character strings.</source>
          <target state="translated">如果&lt;em&gt;分隔符&lt;/em&gt;为空的正则表达式（ &lt;code&gt;//&lt;/code&gt; ），则该字符串将被分隔为一个字符的字符串。</target>
        </trans-unit>
        <trans-unit id="6c5f8cbaee524f2c4f2334388b72c4f46b8e6a02" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;separator&lt;/em&gt; is an empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;), the string will be separated into one-character strings.</source>
          <target state="translated">如果&lt;em&gt;分隔符&lt;/em&gt;为空字符串（ &lt;code&gt;&quot;&quot;&lt;/code&gt; ），则该字符串将被分隔为一个字符的字符串。</target>
        </trans-unit>
        <trans-unit id="1d3e1bca9ef7687283745e998a999eac4b830638" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;shell&lt;/em&gt; is false, the &lt;em&gt;command&lt;/em&gt; is the path to the executable to run, along with a list of &lt;em&gt;args&lt;/em&gt;.</source>
          <target state="translated">如果&lt;em&gt;shell&lt;/em&gt;为false，则该&lt;em&gt;命令&lt;/em&gt;是要运行的可执行文件的路径，以及&lt;em&gt;args&lt;/em&gt;列表。</target>
        </trans-unit>
        <trans-unit id="f5dfd84ce3fd8c08742503259661e81a01e56d3b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;shell&lt;/em&gt; is true, the &lt;em&gt;command&lt;/em&gt; should be the full command line including space-separated args.</source>
          <target state="translated">如果&lt;em&gt;shell&lt;/em&gt;为true，则&lt;em&gt;命令&lt;/em&gt;应为完整的命令行，包括以空格分隔的args。</target>
        </trans-unit>
        <trans-unit id="725538d905b838905f9ab875e612f31912c2adb2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;significant&lt;/em&gt; is &lt;code&gt;false&lt;/code&gt;, the number of &lt;em&gt;precision&lt;/em&gt; digits is preserved after the decimal separator.</source>
          <target state="translated">如果&lt;em&gt;有效&lt;/em&gt;为 &lt;code&gt;false&lt;/code&gt; ，则&lt;em&gt;精度&lt;/em&gt;数字的位数将保留在小数点分隔符之后。</target>
        </trans-unit>
        <trans-unit id="c96afdc56d5b9a96d63e0d74761eb1df8876ce12" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;strict&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, unknown properties in the JSON document will raise a parse exception. The default is &lt;code&gt;false&lt;/code&gt;, so unknown properties are silently ignored.</source>
          <target state="translated">如果&lt;em&gt;strict&lt;/em&gt;为 &lt;code&gt;true&lt;/code&gt; ，则JSON文档中的未知属性将引发解析异常。默认值为 &lt;code&gt;false&lt;/code&gt; ，因此未知属性将被静默忽略。</target>
        </trans-unit>
        <trans-unit id="0fefb1581a602a24a51452e46da58e4e30b5563c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;strip&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, row values are stripped with &lt;code&gt;&lt;a href=&quot;string#strip(&amp;amp;block:Char-%3E_)-instance-method&quot;&gt;String#strip&lt;/a&gt;&lt;/code&gt; before being returned from methods.</source>
          <target state="translated">如果&lt;em&gt;strip&lt;/em&gt;为 &lt;code&gt;true&lt;/code&gt; ，则在从方法返回之前，使用 &lt;code&gt;&lt;a href=&quot;string#strip(&amp;amp;block:Char-%3E_)-instance-method&quot;&gt;String#strip&lt;/a&gt;&lt;/code&gt; 剥离行值。</target>
        </trans-unit>
        <trans-unit id="7f5619350cd94ed727536b115906de1cf65f9f36" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;strip&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, row values are stripped with &lt;code&gt;&lt;a href=&quot;string#strip-instance-method&quot;&gt;String#strip&lt;/a&gt;&lt;/code&gt; before being returned from methods.</source>
          <target state="translated">如果&lt;em&gt;strip&lt;/em&gt;是 &lt;code&gt;true&lt;/code&gt; ，则在从方法返回之前，使用 &lt;code&gt;&lt;a href=&quot;string#strip-instance-method&quot;&gt;String#strip&lt;/a&gt;&lt;/code&gt; 剥离行值。</target>
        </trans-unit>
        <trans-unit id="00da179e0cf5508f54b883ae8b4b41f80e78faa5" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;suffix&lt;/em&gt; is given, it is stripped from the end.</source>
          <target state="translated">如果给出了&lt;em&gt;后缀&lt;/em&gt;，则将其从末尾剥离。</target>
        </trans-unit>
        <trans-unit id="57b9dd1a18c0f04acbb6bd1d460d97e4ee61da98" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;suffix&lt;/em&gt; is present at the end of &lt;em&gt;path&lt;/em&gt;, it is removed.</source>
          <target state="translated">如果&lt;em&gt;路径&lt;/em&gt;的末尾存在&lt;em&gt;后缀&lt;/em&gt;，则将其删除。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8fd6c4ea1183c6cb703cc6142ce080e7dea54752" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;tls&lt;/em&gt; is given it will be used, if not a new TLS context will be created. If &lt;em&gt;tls&lt;/em&gt; is given and &lt;em&gt;uri&lt;/em&gt; is a HTTP URI, &lt;code&gt;&lt;a href=&quot;../argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; is raised. In any case the active context can be accessed through &lt;code&gt;&lt;a href=&quot;client#tls-instance-method&quot;&gt;#tls&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果给定&lt;em&gt;tls&lt;/em&gt;，将使用它，否则将创建新的TLS上下文。如果给定&lt;em&gt;tls&lt;/em&gt;且&lt;em&gt;uri&lt;/em&gt;是HTTP URI，则会引发 &lt;code&gt;&lt;a href=&quot;../argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; 。无论如何，都可以通过 &lt;code&gt;&lt;a href=&quot;client#tls-instance-method&quot;&gt;#tls&lt;/a&gt;&lt;/code&gt; 访问活动上下文。</target>
        </trans-unit>
        <trans-unit id="3c379043ff3594986fc6183b2c9a437092428c69" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;tls&lt;/em&gt; is given it will be used, if not a new TLS context will be created. If &lt;em&gt;tls&lt;/em&gt; is given and &lt;em&gt;uri&lt;/em&gt; is a HTTP URI, &lt;code&gt;&lt;a href=&quot;../argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; is raised. In any case the active context can be accessed through &lt;code&gt;&lt;a href=&quot;client#tls:OpenSSL::SSL::Context::Client-instance-method&quot;&gt;#tls&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果给定&lt;em&gt;tls&lt;/em&gt;，将使用它，否则将创建新的TLS上下文。如果给定&lt;em&gt;tls&lt;/em&gt;且&lt;em&gt;uri&lt;/em&gt;是HTTP URI，则会引发 &lt;code&gt;&lt;a href=&quot;../argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; 。无论如何，都可以通过 &lt;code&gt;&lt;a href=&quot;client#tls:OpenSSL::SSL::Context::Client-instance-method&quot;&gt;#tls&lt;/a&gt;&lt;/code&gt; 访问活动上下文。</target>
        </trans-unit>
        <trans-unit id="bd458694ffcc4a1f6a690d5aea29ba6ff5b7d49a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;trailing_string&lt;/em&gt; is given, it will be appended to the result unless this array is empty. This lets you splat an array and optionally write a trailing comma if needed.</source>
          <target state="translated">如果&lt;em&gt;trailing_string&lt;/em&gt;给出，它将被添加到结果，除非此数组为空。这样，您就可以使用一个数组，并在需要时可选地写一个逗号结尾。</target>
        </trans-unit>
        <trans-unit id="7ea19159934dac81ccdfd55dbbd27fab3e0d80b2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;trailing_string&lt;/em&gt; is given, it will be appended to the result unless this hash is empty. This lets you splat a hash and optionally write a trailing comma if needed.</source>
          <target state="translated">如果&lt;em&gt;trailing_string&lt;/em&gt;给出，它会被追加到结果，除非该哈希为空。这使您可以散列一个散列，并在需要时根据需要编写逗号。</target>
        </trans-unit>
        <trans-unit id="4eb308eca6bac920389452dc48babc78692dae13" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;type&lt;/em&gt; is not a valid restriction for the expression type, it is a compile-time error. If &lt;em&gt;type&lt;/em&gt; is a valid restriction for the expression, but &lt;code&gt;self&lt;/code&gt; can't be restricted to &lt;em&gt;type&lt;/em&gt;, it raises at runtime. &lt;em&gt;type&lt;/em&gt; may be a wider restriction than the expression type, the resulting type is narrowed to the minimal restriction.</source>
          <target state="translated">如果&lt;em&gt;类型&lt;/em&gt;不是表达式类型的有效限制，则为编译时错误。如果&lt;em&gt;type&lt;/em&gt;是表达式的有效限制，但 &lt;code&gt;self&lt;/code&gt; 不能限于&lt;em&gt;type&lt;/em&gt;，则它将在运行时引发。&lt;em&gt;类型&lt;/em&gt;可能比表达式类型更宽泛的限制，结果类型被缩小到最小限制。</target>
        </trans-unit>
        <trans-unit id="0a4f47777321239bbad1144e63dabb61454f1c71" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;uri&lt;/em&gt; is &lt;code&gt;&lt;a href=&quot;uri#absolute?:Bool-instance-method&quot;&gt;#absolute?&lt;/a&gt;&lt;/code&gt;, or if this URI is &lt;code&gt;&lt;a href=&quot;uri#opaque?:Bool-instance-method&quot;&gt;#opaque?&lt;/a&gt;&lt;/code&gt;, then an exact copy of &lt;em&gt;uri&lt;/em&gt; is returned.</source>
          <target state="translated">如果&lt;em&gt;uri&lt;/em&gt;是 &lt;code&gt;&lt;a href=&quot;uri#absolute?:Bool-instance-method&quot;&gt;#absolute?&lt;/a&gt;&lt;/code&gt; ，或者此URI是否为 &lt;code&gt;&lt;a href=&quot;uri#opaque?:Bool-instance-method&quot;&gt;#opaque?&lt;/a&gt;&lt;/code&gt; ，然后返回&lt;em&gt;uri&lt;/em&gt;的精确副本。</target>
        </trans-unit>
        <trans-unit id="ec201bb966188105c8ad4c91c6479a116e74e6f5" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;break&lt;/code&gt; receives many arguments, they are automatically transformed to a &lt;a href=&quot;http://crystal-lang.org/api/Tuple.html&quot;&gt;Tuple&lt;/a&gt;:</source>
          <target state="translated">如果 &lt;code&gt;break&lt;/code&gt; 收到许多参数，它们将自动转换为&lt;a href=&quot;http://crystal-lang.org/api/Tuple.html&quot;&gt;元组&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="0b24d2ecb05952057f3291d41e23ff7d03e2a1ac" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;break&lt;/code&gt; receives no arguments, it's the same as receiving a single &lt;code&gt;nil&lt;/code&gt; argument:</source>
          <target state="translated">如果 &lt;code&gt;break&lt;/code&gt; 不接收任何参数，则与接收单个 &lt;code&gt;nil&lt;/code&gt; 参数相同：</target>
        </trans-unit>
        <trans-unit id="86ad0bae85f62fbd9b3784141c15526304a7c805" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;next&lt;/code&gt; receives many arguments, they are automatically transformed to a &lt;a href=&quot;http://crystal-lang.org/api/Tuple.html&quot;&gt;Tuple&lt;/a&gt;. If it receives no arguments it's the same as receiving a single &lt;code&gt;nil&lt;/code&gt; argument.</source>
          <target state="translated">如果 &lt;code&gt;next&lt;/code&gt; 接收到许多参数，则它们将自动转换为&lt;a href=&quot;http://crystal-lang.org/api/Tuple.html&quot;&gt;Tuple&lt;/a&gt;。如果不接收任何参数，则与接收单个 &lt;code&gt;nil&lt;/code&gt; 参数相同。</target>
        </trans-unit>
        <trans-unit id="d90deef2f1796c81473a99bc04948113b105bcea" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;when&lt;/code&gt;'s expression is a type, &lt;code&gt;is_a?&lt;/code&gt; is used. Additionally, if the case expression is a variable or a variable assignment the type of the variable is restricted:</source>
          <target state="translated">如果 &lt;code&gt;when&lt;/code&gt; 的表达式是类型，则 &lt;code&gt;is_a?&lt;/code&gt; 用来。此外，如果case表达式是变量或变量赋值，则变量的类型受到限制：</target>
        </trans-unit>
        <trans-unit id="1275db804d6f688817d997747002010d07281288" translate="yes" xml:space="preserve">
          <source>If a C function executes a user-provided callback that might raise, it must be annotated with the &lt;code&gt;@[Raises]&lt;/code&gt; attribute.</source>
          <target state="translated">如果C函数执行用户提供的可能引发的回调，则必须使用 &lt;code&gt;@[Raises]&lt;/code&gt; 属性对其进行注释。</target>
        </trans-unit>
        <trans-unit id="4624e5f4350d5bfe950e64b9d775049af83af268" translate="yes" xml:space="preserve">
          <source>If a block has a single argument and invokes a method on it, the block can be replaced with the short syntax argument.</source>
          <target state="translated">如果一个块的参数只有一个,并在其上调用一个方法,则可以用短句法参数代替该块。</target>
        </trans-unit>
        <trans-unit id="bda02f6332b9a517b76784d07383f35c533591d2" translate="yes" xml:space="preserve">
          <source>If a block is given to the macro, a getter is generated with a variable that is lazily initialized with the block's contents, for examples see &lt;code&gt;&lt;a href=&quot;object#class_getter(*names,&amp;amp;block)-macro&quot;&gt;#class_getter&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果将块提供给宏，则会生成一个使用该块内容懒惰地初始化的变量的getter，例如，请参见 &lt;code&gt;&lt;a href=&quot;object#class_getter(*names,&amp;amp;block)-macro&quot;&gt;#class_getter&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f3255356325e21f103994e0f204ebb59138c35ca" translate="yes" xml:space="preserve">
          <source>If a block is given to the macro, a getter is generated with a variable that is lazily initialized with the block's contents, for examples see &lt;code&gt;&lt;a href=&quot;object#getter(*names,&amp;amp;block)-macro&quot;&gt;#getter&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果将块提供给宏，则会生成一个使用该块内容懒惰地初始化的变量的getter，例如，请参阅 &lt;code&gt;&lt;a href=&quot;object#getter(*names,&amp;amp;block)-macro&quot;&gt;#getter&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a5e92ae62fb761acc8ca32626109f7bbce4d456" translate="yes" xml:space="preserve">
          <source>If a block is given to the macro, a getter is generated with a variable that is lazily initialized with the block's contents:</source>
          <target state="translated">如果给宏提供一个块,就会生成一个getter,这个getter会用块的内容懒惰地初始化一个变量。</target>
        </trans-unit>
        <trans-unit id="968e2064a6b9d129f86af5ba7c53fb91181908a3" translate="yes" xml:space="preserve">
          <source>If a block is given to the macro, a property is generated with a variable that is lazily initialized with the block's contents, for examples see &lt;code&gt;&lt;a href=&quot;object#class_property(*names,&amp;amp;block)-macro&quot;&gt;#class_property&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果将块提供给宏，则将生成一个属性，该变量将使用该块的内容进行延迟初始化，例如，请参阅 &lt;code&gt;&lt;a href=&quot;object#class_property(*names,&amp;amp;block)-macro&quot;&gt;#class_property&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="773fb2a94f5c917726e3e308539d9daddbb11923" translate="yes" xml:space="preserve">
          <source>If a block is given to the macro, a property is generated with a variable that is lazily initialized with the block's contents, for examples see &lt;code&gt;&lt;a href=&quot;object#property(*names,&amp;amp;block)-macro&quot;&gt;#property&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果将块提供给宏，则将生成一个属性，该变量将使用该块的内容进行延迟初始化，例如，请参阅 &lt;code&gt;&lt;a href=&quot;object#property(*names,&amp;amp;block)-macro&quot;&gt;#property&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9fcf39e23eb0d908c8c0b74559ca49c69c448fab" translate="yes" xml:space="preserve">
          <source>If a block is given to the macro, a property is generated with a variable that is lazily initialized with the block's contents:</source>
          <target state="translated">如果给宏提供了一个块,就会生成一个属性,这个属性会用块的内容懒惰地初始化。</target>
        </trans-unit>
        <trans-unit id="d25cbfd0418113ef3d1669d23d04affb698639e4" translate="yes" xml:space="preserve">
          <source>If a class defines a &lt;code&gt;finalize&lt;/code&gt; method, when an instance of that class is garbage-collected that method will be invoked:</source>
          <target state="translated">如果一个类定义了一个 &lt;code&gt;finalize&lt;/code&gt; 方法，则当该类的实例被垃圾回收时，该方法将被调用：</target>
        </trans-unit>
        <trans-unit id="4dc3832dd2ff2b1092aedb57ee07ac8681f721d9" translate="yes" xml:space="preserve">
          <source>If a class defines a &lt;code&gt;new&lt;/code&gt; or &lt;code&gt;initialize&lt;/code&gt; then its superclass constructors are not inherited:</source>
          <target state="translated">如果一个类定义了一个 &lt;code&gt;new&lt;/code&gt; 或 &lt;code&gt;initialize&lt;/code&gt; 那么它的超类构造函数不会被继承：</target>
        </trans-unit>
        <trans-unit id="2c53a94921a12c91801261440bc9e9867c6f7338" translate="yes" xml:space="preserve">
          <source>If a connection can't be created, or if a connection loss occurs while the statement is performed the above process is repeated.</source>
          <target state="translated">如果不能创建连接,或者在执行语句时发生连接丢失,则重复上述过程。</target>
        </trans-unit>
        <trans-unit id="309d0203d542b54f01020c65e0417a449527233b" translate="yes" xml:space="preserve">
          <source>If a connection is lost or can't be established retry at most &lt;code&gt;retry_attempts&lt;/code&gt; times waiting &lt;code&gt;retry_delay&lt;/code&gt; seconds between each try.</source>
          <target state="translated">如果连接丢失或无法建立，请重试最多 &lt;code&gt;retry_attempts&lt;/code&gt; 次，每次尝试之间等待 &lt;code&gt;retry_delay&lt;/code&gt; 秒。</target>
        </trans-unit>
        <trans-unit id="b8a982b21b46b69125af765ff5d3d1dae7ce6efe" translate="yes" xml:space="preserve">
          <source>If a directory named &quot;filename&quot; is found and it contains a file named &quot;filename.cr&quot; directly underneath it, it is required.</source>
          <target state="translated">如果发现一个名为 &quot;filename &quot;的目录,并且该目录下直接包含一个名为 &quot;filename.cr &quot;的文件,则需要。</target>
        </trans-unit>
        <trans-unit id="5e11533df20d53af351c31a9f8d7e6aa4d799230" translate="yes" xml:space="preserve">
          <source>If a directory named &quot;filename&quot; is found with a directory &quot;src&quot; in it and it contains a directory named &quot;filename&quot; directly underneath it with a &quot;filename.cr&quot; file inside it, it is required.</source>
          <target state="translated">如果发现一个名为 &quot;filename &quot;的目录里有一个目录 &quot;src&quot;,并且它的下面直接包含一个名为 &quot;filename &quot;的目录,里面有一个 &quot;filename.cr &quot;的文件,则需要。</target>
        </trans-unit>
        <trans-unit id="73ffab83dfb6539dbe52609e3cf715bc11b94d67" translate="yes" xml:space="preserve">
          <source>If a directory named &quot;filename&quot; is found with a directory &quot;src&quot; in it and it contains a file named &quot;filename.cr&quot; directly underneath it, it is required.</source>
          <target state="translated">如果发现一个名为 &quot;filename &quot;的目录里有一个目录 &quot;src&quot;,并且它的下面直接包含一个名为 &quot;filename.cr &quot;的文件,则需要。</target>
        </trans-unit>
        <trans-unit id="20c7979eadf699837e62443808e4d73ebef44e38" translate="yes" xml:space="preserve">
          <source>If a file named &quot;filename.cr&quot; is found in the require path, it is required.</source>
          <target state="translated">如果在require路径中发现一个名为 &quot;filename.cr &quot;的文件,那么它就是必需的。</target>
        </trans-unit>
        <trans-unit id="28468817fe8e7e6797b5ba70b2570b89887a4ff0" translate="yes" xml:space="preserve">
          <source>If a file named &quot;filename.cr&quot; is found relative to the current file, it is required.</source>
          <target state="translated">如果发现相对于当前文件有一个名为 &quot;filename.cr &quot;的文件,则需要。</target>
        </trans-unit>
        <trans-unit id="32f9561c964634c2d022a4372cad8b4a126620bd" translate="yes" xml:space="preserve">
          <source>If a location has only one offset (such as &lt;code&gt;&lt;a href=&quot;location#UTC&quot;&gt;UTC&lt;/a&gt;&lt;/code&gt;) it is considered &lt;em&gt;fixed&lt;/em&gt;.</source>
          <target state="translated">如果一个位置只有一个偏移量（例如 &lt;code&gt;&lt;a href=&quot;location#UTC&quot;&gt;UTC&lt;/a&gt;&lt;/code&gt; ），则认为该位置是&lt;em&gt;固定的&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3b311403f23440df1393607caac90911054301e0" translate="yes" xml:space="preserve">
          <source>If a response has a &lt;code&gt;Content-Type&lt;/code&gt; header with a charset, that charset is set as the encoding of the returned IO (or used for creating a String for the body). Invalid bytes in the given encoding are silently ignored when reading text content.</source>
          <target state="translated">如果响应的 &lt;code&gt;Content-Type&lt;/code&gt; 标头带有字符集，则将该字符集设置为返回IO的编码（或用于为主体创建String）。读取文本内容时，将以静默方式忽略给定编码中的无效字节。</target>
        </trans-unit>
        <trans-unit id="29c0c6d5033d8a26831d04bff23deaba4617edb5" translate="yes" xml:space="preserve">
          <source>If a set starts with a ^, it is negated. The sequence c1-c2 means all characters between and including c1 and c2 and is known as a range.</source>
          <target state="translated">如果一个集合以^开头,它就被否定了。序列c1-c2是指c1和c2之间的所有字符,称为范围。</target>
        </trans-unit>
        <trans-unit id="29bc19ca9733034c745ef2a08e6efcada1bf810b" translate="yes" xml:space="preserve">
          <source>If a string with those contents was already present in the pool, that one is returned. Otherwise a new string is created, put in the pool and returned.</source>
          <target state="translated">如果池中已经有一个包含这些内容的字符串,则返回该字符串。否则将创建一个新的字符串,放入池中并返回。</target>
        </trans-unit>
        <trans-unit id="296d5c6ea451381e09f3824461d839430ce28726" translate="yes" xml:space="preserve">
          <source>If a type declaration is given, a variable with that name is declared with that type, as nilable.</source>
          <target state="translated">如果给定了一个类型声明,则用该类型声明一个具有该名称的变量,因为是nilable。</target>
        </trans-unit>
        <trans-unit id="0528e9deaae7ee8b5857c66327d14eef4f1934f3" translate="yes" xml:space="preserve">
          <source>If a type declaration is given, a variable with that name is declared with that type.</source>
          <target state="translated">如果给定了类型声明,则用该类型声明具有该名称的变量。</target>
        </trans-unit>
        <trans-unit id="0c0b544a5bb8f8f33b23206e23d5af2b7a55431b" translate="yes" xml:space="preserve">
          <source>If a type defines a &lt;code&gt;to_unsafe&lt;/code&gt; method, when passing it to C the value returned by this method will be passed. For example:</source>
          <target state="translated">如果类型定义了 &lt;code&gt;to_unsafe&lt;/code&gt; 方法，则将其传递给C时，将传递此方法返回的值。例如：</target>
        </trans-unit>
        <trans-unit id="7de33be1a14369f4655c08c0d8e3fc92e9cfa818" translate="yes" xml:space="preserve">
          <source>If a value already exists for &lt;code&gt;key&lt;/code&gt;, that (old) value is returned. Otherwise the given block is invoked with &lt;em&gt;key&lt;/em&gt; and its value is returned.</source>
          <target state="translated">如果 &lt;code&gt;key&lt;/code&gt; 的值已经存在，则返回该（旧）值。否则，将使用&lt;em&gt;key&lt;/em&gt;调用给定的块，并返回其值。</target>
        </trans-unit>
        <trans-unit id="7ca2fb4c2d48f906ba4e7129cead6edd36b249b1" translate="yes" xml:space="preserve">
          <source>If a variable is the condition of an &lt;code&gt;if&lt;/code&gt;, inside the &lt;code&gt;then&lt;/code&gt; branch the variable will be considered as not having the &lt;code&gt;Nil&lt;/code&gt; type:</source>
          <target state="translated">如果变量是 &lt;code&gt;if&lt;/code&gt; 的条件，则在 &lt;code&gt;then&lt;/code&gt; 分支内，该变量将被视为不具有 &lt;code&gt;Nil&lt;/code&gt; 类型：</target>
        </trans-unit>
        <trans-unit id="cd7a8c3abdcbe456f939bef9243b80fa3fb882bb" translate="yes" xml:space="preserve">
          <source>If all elements are equal, the comparison is based on the size of the arrays.</source>
          <target state="translated">如果所有元素都相等,则根据数组的大小进行比较。</target>
        </trans-unit>
        <trans-unit id="a7fdcd001c33b216adca2d93b3602f5b1a19e4ce" translate="yes" xml:space="preserve">
          <source>If all the elements are equal, then the result is based on a comparison of the tuple sizes. Thus, two tuples are &quot;equal&quot; according to &lt;code&gt;&lt;a href=&quot;tuple#(other:self)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; if, and only if, they have the same size and the value of each element is equal to the value of the corresponding element in the other tuple.</source>
          <target state="translated">如果所有元素都相等，则结果基于元组大小的比较。因此，当且仅当两个元组具有相同的大小并且每个元素的值等于另一个元组中相应元素的值时，两个元组才根据 &lt;code&gt;&lt;a href=&quot;tuple#(other:self)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; 是&amp;ldquo;相等的&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="28238e464f82ac83594452ad3d15d6ee8311283e" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;if&lt;/code&gt; branch is empty, or it&amp;rsquo;s missing, it&amp;rsquo;s considered as if it had &lt;code&gt;nil&lt;/code&gt; in it:</source>
          <target state="translated">如果 &lt;code&gt;if&lt;/code&gt; 分支为空，或者缺少它，则认为它中没有 &lt;code&gt;nil&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7bca3ea9dbbaacf32811461e40b613efa549724b" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;if&lt;/code&gt;'s condition is &lt;code&gt;var.nil?&lt;/code&gt; then the type of &lt;code&gt;var&lt;/code&gt; in the &lt;code&gt;then&lt;/code&gt; branch is known by the compiler to be &lt;code&gt;Nil&lt;/code&gt;, and to be known as non-&lt;code&gt;Nil&lt;/code&gt; in the &lt;code&gt;else&lt;/code&gt; branch:</source>
          <target state="translated">如果 &lt;code&gt;if&lt;/code&gt; 的条件是 &lt;code&gt;var.nil?&lt;/code&gt; 则编译器将 &lt;code&gt;then&lt;/code&gt; 分支中的 &lt;code&gt;var&lt;/code&gt; 类型称为 &lt;code&gt;Nil&lt;/code&gt; ，并在 &lt;code&gt;else&lt;/code&gt; 分支中将其称为non- &lt;code&gt;Nil&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e3e5a233d577ff732f4c518211068ebd91019d57" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;if&lt;/code&gt;'s condition is a &lt;code&gt;responds_to?&lt;/code&gt; test, in the &lt;code&gt;then&lt;/code&gt; branch the type of a variable is guaranteed to be restricted to the types that respond to that method:</source>
          <target state="translated">如果 &lt;code&gt;if&lt;/code&gt; 的条件是 &lt;code&gt;responds_to?&lt;/code&gt; 测试， &lt;code&gt;then&lt;/code&gt; 在then分支中，确保将变量的类型限制为响应该方法的类型：</target>
        </trans-unit>
        <trans-unit id="a2eb49eced4ef35afb79545782ff0d82f0e21965" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;if&lt;/code&gt;'s condition is an &lt;code&gt;is_a?&lt;/code&gt; test, the type of a variable is guaranteed to be restricted by that type in the &lt;code&gt;then&lt;/code&gt; branch.</source>
          <target state="translated">如果 &lt;code&gt;if&lt;/code&gt; 的条件是 &lt;code&gt;is_a?&lt;/code&gt; 测试中，保证变量的类型在 &lt;code&gt;then&lt;/code&gt; 分支中受该类型限制。</target>
        </trans-unit>
        <trans-unit id="972a3ca3d3cfcb7795698193335367b6ccbb24d9" translate="yes" xml:space="preserve">
          <source>If an encoding is not set, the default one is UTF-8.</source>
          <target state="translated">如果没有设置编码,默认为UTF-8。</target>
        </trans-unit>
        <trans-unit id="93fdb6d64dcc5bc9608ffe1ffa361a0151e5ce5c" translate="yes" xml:space="preserve">
          <source>If an enum's value doesn't match a member's value, the raw value is returned as a string.</source>
          <target state="translated">如果一个枚举的值与一个成员的值不匹配,原始值将以字符串形式返回。</target>
        </trans-unit>
        <trans-unit id="a0a438805c1dbc6915edc3c31e83678fe2bbd339" translate="yes" xml:space="preserve">
          <source>If any configurations or choices in Crystal regarding SSL settings and security are found to be lacking or need improvement please &lt;a href=&quot;https://github.com/crystal-lang/crystal/issues/new&quot;&gt;open an issue&lt;/a&gt; and let us know.</source>
          <target state="translated">如果发现Crystal中缺少有关SSL设置和安全性的任何配置或选择，或者需要改进，请提出&lt;a href=&quot;https://github.com/crystal-lang/crystal/issues/new&quot;&gt;一个问题&lt;/a&gt;并通知我们。</target>
        </trans-unit>
        <trans-unit id="7fc4a06e0c9b4cb3f0d3cd847a9ce5405b06999c" translate="yes" xml:space="preserve">
          <source>If any such thing is marked with &lt;code&gt;focus: true&lt;/code&gt; then only those examples will run.</source>
          <target state="translated">如果有这样的事情标记为 &lt;code&gt;focus: true&lt;/code&gt; 那么仅这些示例将运行。</target>
        </trans-unit>
        <trans-unit id="4469f519d20cfd1b7cdd7fde6f9ad62038fcb4e0" translate="yes" xml:space="preserve">
          <source>If for any reason you can't or don't want to use one of the previous installation methods, you can still download Crystal in a standalone .tar.gz file with everything you need to get started.</source>
          <target state="translated">如果由于任何原因您不能或不想使用前面的安装方法,您仍然可以下载一个独立的.tar.gz文件中的Crystal,其中包含您需要开始使用的所有内容。</target>
        </trans-unit>
        <trans-unit id="385688564b637f21d4357f4e0ce387a98a4f7e8e" translate="yes" xml:space="preserve">
          <source>If in the handler chain this header is overridden to &lt;code&gt;Connection: close&lt;/code&gt;, then the connection will not be reused after the request has been processed.</source>
          <target state="translated">如果在处理程序链中此标头重写为 &lt;code&gt;Connection: close&lt;/code&gt; ，则在处理请求之后，将不会重用该连接。</target>
        </trans-unit>
        <trans-unit id="cea8a35cdabe9e52a13baf969fcdd1c8c87adbee" translate="yes" xml:space="preserve">
          <source>If it is impossible for a type to be restricted by another type, a compile-time error is issued:</source>
          <target state="translated">如果一个类型不可能被另一个类型限制,就会发出一个编译时错误。</target>
        </trans-unit>
        <trans-unit id="0946538feb79690729e16e7903db8a75f9865387" translate="yes" xml:space="preserve">
          <source>If it passes, then the pipeline will move onto the second job we defined here which &lt;a href=&quot;https://docs.gitlab.com/ee/ci/yaml/#pages&quot;&gt;we must name&lt;/a&gt; &quot;pages&quot;. This is a special job just for deploying content to your gitlab pages site! This one is executed after tests have passed because we specified that it should occur in the &quot;deploy&quot; stage. It again runs the commands in &lt;code&gt;script&lt;/code&gt; (this time building the docs), but this time we tell it to preserve the path &lt;code&gt;public&lt;/code&gt; (where we stashed the docs) as an artifact of the job.</source>
          <target state="translated">如果通过，则管道将移至我们在此处定义的第二个作业，&lt;a href=&quot;https://docs.gitlab.com/ee/ci/yaml/#pages&quot;&gt;我们必须将其命名为&lt;/a&gt;&amp;ldquo; pages&amp;rdquo;。这是一项仅用于将内容部署到gitlab页面站点的特殊工作！在测试通过后执行此操作，因为我们指定应在&amp;ldquo;部署&amp;rdquo;阶段进行。它再次在 &lt;code&gt;script&lt;/code&gt; 运行命令（这次构建文档），但是这次我们告诉它将 &lt;code&gt;public&lt;/code&gt; 路径（存放文档的位置）保留为作业的工件。</target>
        </trans-unit>
        <trans-unit id="e3a93e8b288ee4de32903b58922b5bfa5b952de6" translate="yes" xml:space="preserve">
          <source>If logging to multiple locations is required, an &lt;code&gt;&lt;a href=&quot;io/multiwriter&quot;&gt;IO::MultiWriter&lt;/a&gt;&lt;/code&gt; can be used.</source>
          <target state="translated">如果需要记录到多个位置，则可以使用 &lt;code&gt;&lt;a href=&quot;io/multiwriter&quot;&gt;IO::MultiWriter&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e8c217a922f6fc129df64f00228e51d2a7f58788" translate="yes" xml:space="preserve">
          <source>If multiple blocks are registered for the same spec, the blocks defined in the outermost context go first. Blocks on the same context are executed in order of definition.</source>
          <target state="translated">如果为同一规格注册了多个块,则最外层上下文中定义的块将优先执行。同一上下文的块按定义顺序执行。</target>
        </trans-unit>
        <trans-unit id="6e6ff6ccc20eb475828f6f2b95538575d0e04599" translate="yes" xml:space="preserve">
          <source>If multiple blocks are registered on the same context, they are executed in order of definition.</source>
          <target state="translated">如果在同一上下文中注册了多个块,则按定义顺序执行。</target>
        </trans-unit>
        <trans-unit id="7e6f22de11e26a8e1484dda50c08d119ab0085ce" translate="yes" xml:space="preserve">
          <source>If multiple blocks are registered they run in the order that they are given.</source>
          <target state="translated">如果注册了多个区块,则按照给定的顺序运行。</target>
        </trans-unit>
        <trans-unit id="8c6fef3d734fecba44a536270e0b9dd6cab28d13" translate="yes" xml:space="preserve">
          <source>If multiple blocks are registered they run in the reversed order that they are given.</source>
          <target state="translated">如果注册了多个区块,则按给定的相反顺序运行。</target>
        </trans-unit>
        <trans-unit id="dad73e78278f9484f7b0fbf6bb49ebecd32051ac" translate="yes" xml:space="preserve">
          <source>If necessary a variable can be defined as a union type at compile time</source>
          <target state="translated">如果有必要,可以在编译时将一个变量定义为联合类型。</target>
        </trans-unit>
        <trans-unit id="58e98a80654eceeb65aba067e72ab9c54378da31" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;source&lt;/code&gt; argument is provided, the Crystal source is read from standard input. The binary executable is stored in a temporary location between compiling and running.</source>
          <target state="translated">如果未提供 &lt;code&gt;source&lt;/code&gt; 参数，则从标准输入中读取Crystal源。二进制可执行文件存储在编译和运行之间的临时位置。</target>
        </trans-unit>
        <trans-unit id="4e5c36032086e8d25d1ee94fc16efdd9aa72ba1c" translate="yes" xml:space="preserve">
          <source>If no command is given, &lt;code&gt;install&lt;/code&gt; will be run by default.</source>
          <target state="translated">如果未给出命令，则默认情况下将运行 &lt;code&gt;install&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d65837f03ca6eb16967c172d8f011101ae9ec2e8" translate="yes" xml:space="preserve">
          <source>If no encoding is set, this is the same as &lt;code&gt;&lt;a href=&quot;io#read(slice:Bytes)-instance-method&quot;&gt;#read(slice)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果未设置编码，则与 &lt;code&gt;&lt;a href=&quot;io#read(slice:Bytes)-instance-method&quot;&gt;#read(slice)&lt;/a&gt;&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="f634a6142d7788c2424463a1543fcd14444cc918" translate="yes" xml:space="preserve">
          <source>If no encoding is set, this is the same as &lt;code&gt;&lt;a href=&quot;io#read_byte:UInt8?-instance-method&quot;&gt;#read_byte&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果未设置编码，则与 &lt;code&gt;&lt;a href=&quot;io#read_byte:UInt8?-instance-method&quot;&gt;#read_byte&lt;/a&gt;&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="68c3ae19aa60292eaffd48e18f07b0724f82ad31" translate="yes" xml:space="preserve">
          <source>If no set is given, all characters are matched.</source>
          <target state="translated">如果没有给定集,则所有字符都匹配。</target>
        </trans-unit>
        <trans-unit id="d6eb809c04bae729e529facf3e683320653a4155" translate="yes" xml:space="preserve">
          <source>If no time zone data could be found (i.e. the previous methods failed), &lt;code&gt;&lt;a href=&quot;location#UTC&quot;&gt;Location::UTC&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">如果找不到时区数据（即以前的方法失败），则返回 &lt;code&gt;&lt;a href=&quot;location#UTC&quot;&gt;Location::UTC&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb03fa512ad66ec4676da7b846b3c82347188876" translate="yes" xml:space="preserve">
          <source>If one of the branches never reaches past the end of an &lt;code&gt;if&lt;/code&gt;, like in the case of a &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;raise&lt;/code&gt;, that type is not considered at the end of the &lt;code&gt;if&lt;/code&gt;:</source>
          <target state="translated">如果分支之一从未到达过 &lt;code&gt;if&lt;/code&gt; 的末尾，例如在 &lt;code&gt;return&lt;/code&gt; ， &lt;code&gt;next&lt;/code&gt; ， &lt;code&gt;break&lt;/code&gt; 或 &lt;code&gt;raise&lt;/code&gt; 的情况下，则在 &lt;code&gt;if&lt;/code&gt; 的末尾不考虑该类型：</target>
        </trans-unit>
        <trans-unit id="66926c43b273615d7a07ef1bd9e1558cc0e8b4eb" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;a href=&quot;serializable/strict&quot;&gt;JSON::Serializable::Strict&lt;/a&gt;&lt;/code&gt; module is included, unknown properties in the JSON document will raise a parse exception. By default the unknown properties are silently ignored. If the &lt;code&gt;&lt;a href=&quot;serializable/unmapped&quot;&gt;JSON::Serializable::Unmapped&lt;/a&gt;&lt;/code&gt; module is included, unknown properties in the JSON document will be stored in a &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;any&quot;&gt;JSON::Any&lt;/a&gt;)&lt;/code&gt;. On serialization, any keys inside json_unmapped will be serialized and appended to the current json object.</source>
          <target state="translated">如果包含 &lt;code&gt;&lt;a href=&quot;serializable/strict&quot;&gt;JSON::Serializable::Strict&lt;/a&gt;&lt;/code&gt; 模块，则JSON文档中的未知属性将引发解析异常。默认情况下，未知属性将被静默忽略。如果包括 &lt;code&gt;&lt;a href=&quot;serializable/unmapped&quot;&gt;JSON::Serializable::Unmapped&lt;/a&gt;&lt;/code&gt; 模块，则JSON文档中的未知属性将存储在 &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;any&quot;&gt;JSON::Any&lt;/a&gt;)&lt;/code&gt; 。在序列化时，json_unmapped内部的任何键都将被序列化并附加到当前json对象。</target>
        </trans-unit>
        <trans-unit id="47f1cee8780d6c7edf11074277c01476f2a7365f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;a href=&quot;serializable/strict&quot;&gt;YAML::Serializable::Strict&lt;/a&gt;&lt;/code&gt; module is included, unknown properties in the YAML document will raise a parse exception. By default the unknown properties are silently ignored. If the &lt;code&gt;&lt;a href=&quot;serializable/unmapped&quot;&gt;YAML::Serializable::Unmapped&lt;/a&gt;&lt;/code&gt; module is included, unknown properties in the YAML document will be stored in a &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;any&quot;&gt;YAML::Any&lt;/a&gt;)&lt;/code&gt;. On serialization, any keys inside yaml_unmapped will be serialized appended to the current yaml object.</source>
          <target state="translated">如果包括 &lt;code&gt;&lt;a href=&quot;serializable/strict&quot;&gt;YAML::Serializable::Strict&lt;/a&gt;&lt;/code&gt; 模块，则YAML文档中的未知属性将引发解析异常。默认情况下，未知属性将被静默忽略。如果包含 &lt;code&gt;&lt;a href=&quot;serializable/unmapped&quot;&gt;YAML::Serializable::Unmapped&lt;/a&gt;&lt;/code&gt; 模块，则YAML文档中的未知属性将存储在 &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;any&quot;&gt;YAML::Any&lt;/a&gt;)&lt;/code&gt; 。序列化时，yaml_unmapped内部的任何键都会序列化，并附加到当前yaml对象中。</target>
        </trans-unit>
        <trans-unit id="ffc4a520fc094d5fd531e4e77712649f865a0072" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;max_pool_size&lt;/code&gt; was reached and a connection is needed, wait up to &lt;code&gt;checkout_timeout&lt;/code&gt; seconds for an existing connection to become available.</source>
          <target state="translated">如果已达到 &lt;code&gt;max_pool_size&lt;/code&gt; 且需要连接，请等待 &lt;code&gt;checkout_timeout&lt;/code&gt; 秒以使现有连接可用。</target>
        </trans-unit>
        <trans-unit id="11b7b0af5326f18bb1872eb5e8f05ff255ad4d26" translate="yes" xml:space="preserve">
          <source>If the &lt;strong&gt;rollback is fired by an exception at the inner_tx block&lt;/strong&gt; all the changes including the ones in the &lt;code&gt;outer_tx&lt;/code&gt; are rollbacked.</source>
          <target state="translated">如果&lt;strong&gt;在inner_tx块中异常触发&lt;/strong&gt;了&lt;strong&gt;回滚，那么&lt;/strong&gt;所有更改（包括&lt;strong&gt;external_tx中&lt;/strong&gt;的更改） &lt;code&gt;outer_tx&lt;/code&gt; 回滚。</target>
        </trans-unit>
        <trans-unit id="130a17de1aedbe126b0430113f1a68cdc36e9bac" translate="yes" xml:space="preserve">
          <source>If the DEFLATED compression method is used, crc32, compressed size and uncompressed size will be computed from the data written to the yielded IO.</source>
          <target state="translated">如果使用了DEFLATED压缩方法,则将从写入产生的IO的数据中计算出crc32、压缩大小和未压缩大小。</target>
        </trans-unit>
        <trans-unit id="c7b106f99ea5122124ed7ab1952f8e77059625b4" translate="yes" xml:space="preserve">
          <source>If the STORED compression method is used, its crc32, compressed size and uncompressed size &lt;strong&gt;must&lt;/strong&gt; be set and be correct with respect to the data that will be written to the yielded &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果使用STORED压缩方法，则&lt;strong&gt;必须&lt;/strong&gt;设置其crc32，压缩大小和未压缩大小，并且相对于将要写入产生的 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 的数据而言是正确的。</target>
        </trans-unit>
        <trans-unit id="b012656f1ef204b001b3d2401194b36c0ab9b117" translate="yes" xml:space="preserve">
          <source>If the STORED compression method is used, its crc32, compressed size and uncompressed size &lt;strong&gt;must&lt;/strong&gt; be set and be correct with respect to the data that will be written to the yielded &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果使用STORED压缩方法，则&lt;strong&gt;必须&lt;/strong&gt;设置其crc32，压缩大小和未压缩大小，并且相对于将要写入产生的 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 的数据而言是正确的。</target>
        </trans-unit>
        <trans-unit id="a846a71dadd41428c0cc438a00dd0c50422272fc" translate="yes" xml:space="preserve">
          <source>If the argument isn't a &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt;, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果参数不是正则 &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; ，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="96c2f93592018b614d681ec9dd7d75a024d0606b" translate="yes" xml:space="preserve">
          <source>If the assigned value is not exactly the same as the property's type, &lt;a href=&quot;to_unsafe&quot;&gt;to_unsafe&lt;/a&gt; will be tried.</source>
          <target state="translated">如果分配的值与属性的类型不完全相同，则将尝试&lt;a href=&quot;to_unsafe&quot;&gt;to_unsafe&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c9e7b14b1420dbb9f2775057dc24c158bd3146f2" translate="yes" xml:space="preserve">
          <source>If the block returns &lt;code&gt;false&lt;/code&gt;, the finding element exists behind. If the block returns &lt;code&gt;true&lt;/code&gt;, the finding element is itself or exists infront.</source>
          <target state="translated">如果该块返回 &lt;code&gt;false&lt;/code&gt; ，则发现元素位于后面。如果该块返回 &lt;code&gt;true&lt;/code&gt; ，则find元素本身或位于最前面。</target>
        </trans-unit>
        <trans-unit id="19408c12d6284c35f83ff55e7ad0ba021cc768e1" translate="yes" xml:space="preserve">
          <source>If the block returns &lt;code&gt;false&lt;/code&gt;, the finding value exists behind. If the block returns &lt;code&gt;true&lt;/code&gt;, the finding value is itself or exists infront.</source>
          <target state="translated">如果该块返回 &lt;code&gt;false&lt;/code&gt; ，则发现值存在于后面。如果该块返回 &lt;code&gt;true&lt;/code&gt; ，则发现值本身就是该值或位于其前面。</target>
        </trans-unit>
        <trans-unit id="4a257cbcb34af22097b1346a0e71359fd1d43a60" translate="yes" xml:space="preserve">
          <source>If the callback passed to &lt;code&gt;store_callback&lt;/code&gt; raises, then &lt;code&gt;execute_callback&lt;/code&gt; will raise. However, the compiler doesn't know that &lt;code&gt;execute_callback&lt;/code&gt; can potentially raise because it is not marked as &lt;code&gt;@[Raises]&lt;/code&gt; and the compiler has no way to figure this out. In these cases you have to manually mark such functions:</source>
          <target state="translated">如果传递给 &lt;code&gt;store_callback&lt;/code&gt; 的回调引发，那么 &lt;code&gt;execute_callback&lt;/code&gt; 将引发。但是，编译器不知道 &lt;code&gt;execute_callback&lt;/code&gt; 可能会引发，因为它未标记为 &lt;code&gt;@[Raises]&lt;/code&gt; ，并且编译器无法解决此问题。在这些情况下，您必须手动标记以下功能：</target>
        </trans-unit>
        <trans-unit id="3c6966c5ccc56a7b6009eeb0d1fe5004d7b58966" translate="yes" xml:space="preserve">
          <source>If the collection is empty, returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">如果集合为空，则返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9fdab30020c44d65432e3de9fb25291e29e70a07" translate="yes" xml:space="preserve">
          <source>If the collection is empty, returns &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">如果集合为空，则返回 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ddbbd6708cd876e1976bbc4db04349abb5431214" translate="yes" xml:space="preserve">
          <source>If the collection is empty, returns &lt;em&gt;initial&lt;/em&gt;.</source>
          <target state="translated">如果集合为空，则返回&lt;em&gt;initial&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="cf1d385502513194a04c3ebe890af4cc82dac31e" translate="yes" xml:space="preserve">
          <source>If the compiler can't detect this at compile-time, an exception will be raised at runtime.</source>
          <target state="translated">如果编译器在编译时不能检测到这一点,则会在运行时引发异常。</target>
        </trans-unit>
        <trans-unit id="18e22bb4c0c2d9d6a34e081434fea3fdbbde88c4" translate="yes" xml:space="preserve">
          <source>If the constant denotes a type, you get back a &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/TypeNode.html&quot;&gt;&lt;code&gt;TypeNode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果常量表示类型，则返回&lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/TypeNode.html&quot;&gt; &lt;code&gt;TypeNode&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d29a8f505f3d2aab85079cf352a0708db2499686" translate="yes" xml:space="preserve">
          <source>If the constant is a constant (like &lt;code&gt;A = 1&lt;/code&gt;), then its value as an &lt;code&gt;&lt;a href=&quot;astnode&quot;&gt;ASTNode&lt;/a&gt;&lt;/code&gt; is returned. If the constant is a type, the type is returned as a &lt;code&gt;&lt;a href=&quot;typenode&quot;&gt;TypeNode&lt;/a&gt;&lt;/code&gt;. Otherwise, &lt;code&gt;&lt;a href=&quot;nilliteral&quot;&gt;NilLiteral&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">如果常量是常量（例如 &lt;code&gt;A = 1&lt;/code&gt; ），则返回其值作为 &lt;code&gt;&lt;a href=&quot;astnode&quot;&gt;ASTNode&lt;/a&gt;&lt;/code&gt; 。如果常量是类型，则该类型作为 &lt;code&gt;&lt;a href=&quot;typenode&quot;&gt;TypeNode&lt;/a&gt;&lt;/code&gt; 返回。否则，将返回 &lt;code&gt;&lt;a href=&quot;nilliteral&quot;&gt;NilLiteral&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1482446c286f9dccb86600e7bd3b41f453a1d003" translate="yes" xml:space="preserve">
          <source>If the day-of-month resulting from shifting by &lt;em&gt;years&lt;/em&gt; and &lt;em&gt;months&lt;/em&gt; would be invalid, the date is adjusted to the last valid day of the month. For example, adding one month to &lt;code&gt;2018-08-31&lt;/code&gt; would result in the invalid date &lt;code&gt;2018-09-31&lt;/code&gt; which will be adjusted to &lt;code&gt;2018-09-30&lt;/code&gt;:</source>
          <target state="translated">如果因&lt;em&gt;年份&lt;/em&gt;和&lt;em&gt;月份的&lt;/em&gt;移动而导致的&lt;em&gt;月中&lt;/em&gt;日期无效，那么日期将调整为该月的最后一个有效日期。例如，将一个月添加到 &lt;code&gt;2018-08-31&lt;/code&gt; 将导致无效日期 &lt;code&gt;2018-09-31&lt;/code&gt; ，该日期将被调整为 &lt;code&gt;2018-09-30&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b38825a3829588a49956f7e617fd75538df14905" translate="yes" xml:space="preserve">
          <source>If the file does not exist, it will be created.</source>
          <target state="translated">如果文件不存在,就会被创建。</target>
        </trans-unit>
        <trans-unit id="d98f3fcc4efdea14c860a494d11a0e16af437e20" translate="yes" xml:space="preserve">
          <source>If the given size is zero, the amount of UTF-8 codepoints will be lazily computed when needed.</source>
          <target state="translated">如果给定的大小为零,那么在需要的时候会懒得计算UTF-8码点的数量。</target>
        </trans-unit>
        <trans-unit id="c916d3697b63ccd18cd4c4eaa521f835428adb24" translate="yes" xml:space="preserve">
          <source>If the increment generates a &quot;carry&quot;, the character to the left of it is incremented. This process repeats until there is no carry, adding an additional character if necessary.</source>
          <target state="translated">如果增量产生 &quot;携带&quot;,则将其左侧的字符进行增量。这个过程重复进行,直到没有 &quot;带 &quot;字,必要时再增加一个字符。</target>
        </trans-unit>
        <trans-unit id="432445db70e7576655c3d4952ad03213490208fe" translate="yes" xml:space="preserve">
          <source>If the location name cannot be found, &lt;code&gt;&lt;a href=&quot;location/invalidlocationnameerror&quot;&gt;InvalidLocationNameError&lt;/a&gt;&lt;/code&gt; is raised. If the loader encounters a format error in the time zone database, &lt;code&gt;&lt;a href=&quot;location/invalidtzdataerror&quot;&gt;InvalidTZDataError&lt;/a&gt;&lt;/code&gt; is raised.</source>
          <target state="translated">如果找不到位置名称，则会引发 &lt;code&gt;&lt;a href=&quot;location/invalidlocationnameerror&quot;&gt;InvalidLocationNameError&lt;/a&gt;&lt;/code&gt; 。如果加载程序在时区数据库中遇到格式错误，则会引发 &lt;code&gt;&lt;a href=&quot;location/invalidtzdataerror&quot;&gt;InvalidTZDataError&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3116c00c05640f85cb3dad876cae435f6fb6b9e" translate="yes" xml:space="preserve">
          <source>If the method has arguments, you must specify their types:</source>
          <target state="translated">如果方法有参数,你必须指定它们的类型。</target>
        </trans-unit>
        <trans-unit id="f72b0ddbe2378832f2b36cca43b523e5bb6bd7ef" translate="yes" xml:space="preserve">
          <source>If the method has other required parameters, the short syntax argument should also be supplied in the method's argument list.</source>
          <target state="translated">如果该方法有其他需要的参数,那么在该方法的参数列表中也应提供短语法参数。</target>
        </trans-unit>
        <trans-unit id="effd214f7ab2ff0c70af0dcbdd8d59302f827e61" translate="yes" xml:space="preserve">
          <source>If the path is empty or &lt;code&gt;&quot;.&quot;&lt;/code&gt;, it returns &lt;code&gt;&quot;.&quot;&lt;/code&gt;. If the path is rooted and in the top-most hierarchy, the root path is returned.</source>
          <target state="translated">如果路径为空或 &lt;code&gt;&quot;.&quot;&lt;/code&gt; ，它返回 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 。如果该路径是根目录且位于最顶层，则返回根路径。</target>
        </trans-unit>
        <trans-unit id="221d2f4974b514fa2008b059ee0504bf10881c70" translate="yes" xml:space="preserve">
          <source>If the path is empty, it returns &lt;code&gt;&quot;.&quot;&lt;/code&gt;. If the path is rooted and in the top-most hierarchy, the root path is returned.</source>
          <target state="translated">如果路径为空，则返回 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 。如果该路径是根目录且位于最顶层，则返回根路径。</target>
        </trans-unit>
        <trans-unit id="c7b02d9326a2b21752830927a6e250f2888effd8" translate="yes" xml:space="preserve">
          <source>If the path turns to be empty, the current directory (&lt;code&gt;&quot;.&quot;&lt;/code&gt;) is returned.</source>
          <target state="translated">如果路径变为空，则返回当前目录（ &lt;code&gt;&quot;.&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f4ff4dd28574680ae9433784f3952e8ae72b4963" translate="yes" xml:space="preserve">
          <source>If the pool is not allowed to create a new connection, wait a for a connection to become available.</source>
          <target state="translated">如果池不允许创建新的连接,请等待一个连接可用。</target>
        </trans-unit>
        <trans-unit id="27c842a9518f899eae31205ecdf0b9890d26cce7" translate="yes" xml:space="preserve">
          <source>If the ports collection is not already installed, it can be downloaded using &lt;code&gt;portsnap fetch&lt;/code&gt; or &lt;code&gt;git clone https://github.com/freebsd/freebsd-ports&lt;/code&gt;.</source>
          <target state="translated">如果还没有安装ports集合，则可以使用 &lt;code&gt;portsnap fetch&lt;/code&gt; 或 &lt;code&gt;git clone https://github.com/freebsd/freebsd-ports&lt;/code&gt; 下载。</target>
        </trans-unit>
        <trans-unit id="80ab6ab1ba149af1866bc07b0ade3208abefa72a" translate="yes" xml:space="preserve">
          <source>If the resulting date-time is ambiguous due to time zone transitions, a correct time will be returned, but it does not guarantee which.</source>
          <target state="translated">如果由于时区转换而产生的日期-时间不明确,将返回一个正确的时间,但不保证是哪个时间。</target>
        </trans-unit>
        <trans-unit id="32deab680675f255674ae2216b5571519f29d1e6" translate="yes" xml:space="preserve">
          <source>If the return type is void you can omit it:</source>
          <target state="translated">如果返回类型是void,你可以省略它。</target>
        </trans-unit>
        <trans-unit id="23145595903fc2e398483b41a77943f18f2f8ea0" translate="yes" xml:space="preserve">
          <source>If the right-hand side contains just one expression, the type is indexed for each variable on the left-hand side like so:</source>
          <target state="translated">如果右侧只包含一个表达式,那么左侧的每个变量的类型都会像这样进行索引。</target>
        </trans-unit>
        <trans-unit id="1a1615eef18d7467f6b12e6fafb540dc8e47c72c" translate="yes" xml:space="preserve">
          <source>If the server is closed after invoking this method, an &lt;code&gt;&lt;a href=&quot;../io/error&quot;&gt;IO::Error&lt;/a&gt;&lt;/code&gt; (closed stream) exception must be raised.</source>
          <target state="translated">如果在调用此方法后关闭服务器，则必须引发 &lt;code&gt;&lt;a href=&quot;../io/error&quot;&gt;IO::Error&lt;/a&gt;&lt;/code&gt; （关闭的流）异常。</target>
        </trans-unit>
        <trans-unit id="17220bbdcc986124d2db207f05fdfcfc10cffda3" translate="yes" xml:space="preserve">
          <source>If the specified line is the beginning of a &lt;code&gt;describe&lt;/code&gt; or &lt;code&gt;context&lt;/code&gt; section, all specs inside that group are run.</source>
          <target state="translated">如果指定的行是 &lt;code&gt;describe&lt;/code&gt; 或 &lt;code&gt;context&lt;/code&gt; 部分的开头，则将运行该组内的所有规范。</target>
        </trans-unit>
        <trans-unit id="310af15d1c29c31cd75e4cd3e20b1ccb4c4c344e" translate="yes" xml:space="preserve">
          <source>If the string representation of an object ends with a newline, no additional newline is printed for that object.</source>
          <target state="translated">如果一个对象的字符串表示以换行结束,则不会为该对象打印额外的换行。</target>
        </trans-unit>
        <trans-unit id="6bd8e040f4bdc958e54c848037c1287f76dfe1df" translate="yes" xml:space="preserve">
          <source>If the strings are of different lengths, and the strings are equal when compared up to the shortest length, then the longer string is considered greater than the shorter one.</source>
          <target state="translated">如果弦的长短不一,当比较到最短时,弦的长度相等,则认为长的弦大于短的弦。</target>
        </trans-unit>
        <trans-unit id="8663c7a4de5671e97b7aafc659817ea16c4d0c42" translate="yes" xml:space="preserve">
          <source>If there are conditional breaks, the call's return value type will be a union of the type of the block's value and the type of the many &lt;code&gt;break&lt;/code&gt;s:</source>
          <target state="translated">如果有条件的中断，则调用的返回值类型将是块值的类型与多个 &lt;code&gt;break&lt;/code&gt; 的类型的并集：</target>
        </trans-unit>
        <trans-unit id="f741ac83e90685ec4d575b72b74860aa6a511d7b" translate="yes" xml:space="preserve">
          <source>If there are multiple annotations of the same type applied to the same instance variable/method/type, the &lt;code&gt;.annotations(type : TypeNode)&lt;/code&gt; method can be used. This will work on anything that &lt;code&gt;.annotation(type : TypeNode)&lt;/code&gt; would, but instead returns an &lt;code&gt;ArrayLiteral(Annotation)&lt;/code&gt;.</source>
          <target state="translated">如果将多个相同类型的注释应用于相同的实例变量/方法/类型，则可以使用 &lt;code&gt;.annotations(type : TypeNode)&lt;/code&gt; 方法。这将适用于 &lt;code&gt;.annotation(type : TypeNode)&lt;/code&gt; 可以执行的任何操作，但会返回 &lt;code&gt;ArrayLiteral(Annotation)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d818234a1ae7fa56c9771266ecf90c17f9f46093" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;DB::ResultSet&lt;/code&gt; yielded, return the connection to the pool. Otherwise, the connection will be returned to the pool when the ResultSet is closed.</source>
          <target state="translated">如果没有产生 &lt;code&gt;DB::ResultSet&lt;/code&gt; ，则将连接返回到池。否则，当ResultSet关闭时，连接将返回到池中。</target>
        </trans-unit>
        <trans-unit id="4a93ba56cc5b74f39d96d3f5dfc76165f0f0f51d" translate="yes" xml:space="preserve">
          <source>If there is no time zone information in the formatted time, &lt;em&gt;location&lt;/em&gt; will be assumed. When &lt;em&gt;location&lt;/em&gt; is &lt;code&gt;nil&lt;/code&gt;, in such a case the parser will raise &lt;code&gt;&lt;a href=&quot;time/format/error&quot;&gt;Time::Format::Error&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果在格式化的时间中没有时区信息，将假定&lt;em&gt;位置&lt;/em&gt;。当&lt;em&gt;location&lt;/em&gt;为 &lt;code&gt;nil&lt;/code&gt; 时，在这种情况下，解析器将引发 &lt;code&gt;&lt;a href=&quot;time/format/error&quot;&gt;Time::Format::Error&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a01d1818bbb7a8a9bc8b63b52ab1c1fe4c2e683" translate="yes" xml:space="preserve">
          <source>If there is no time zone information in the formatted time, the parser will raise &lt;code&gt;&lt;a href=&quot;time/format/error&quot;&gt;Time::Format::Error&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果格式化后的时间中没有时区信息，则解析器将引发 &lt;code&gt;&lt;a href=&quot;time/format/error&quot;&gt;Time::Format::Error&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a024e2ef7b2e827498e91756e32eacfa1a13315" translate="yes" xml:space="preserve">
          <source>If there is not a valid number at the start of this string, or if the resulting integer doesn't fit an &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;, an &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; is raised.</source>
          <target state="translated">如果此字符串的开头没有有效数字，或者所得的整数不适合 &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; ，则会 &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46f6f65bddde630c02d1f85d21fdd9be267c2643" translate="yes" xml:space="preserve">
          <source>If there was an error decoding the current char because of an invalid UTF-8 byte sequence, returns the byte that produced the invalid encoding.</source>
          <target state="translated">如果因为无效的UTF-8字节序列而导致当前char解码错误,返回产生无效编码的字节。</target>
        </trans-unit>
        <trans-unit id="2e3d294487015981ed52691e8078049c2fe4e25e" translate="yes" xml:space="preserve">
          <source>If there was an error decoding the current char because of an invalid UTF-8 byte sequence, returns the byte that produced the invalid encoding. Returns &lt;code&gt;0&lt;/code&gt; if the char would've been out of bounds. Otherwise returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果由于无效的UTF-8字节序列而导致解码当前char时出错，则返回产生无效编码的字节。如果char超出范围，则返回 &lt;code&gt;0&lt;/code&gt; 。否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5613446b53d266ad630c4d08a8e7171a0064b9f6" translate="yes" xml:space="preserve">
          <source>If there's a match, the scanner advances the scan offset, the last match is saved, and it returns the size of the skip. Otherwise it returns &lt;code&gt;nil&lt;/code&gt; and does not advance the offset.</source>
          <target state="translated">如果存在匹配项，则扫描仪将前进扫描偏移量，保存最后一个匹配项，并返回跳过的大小。否则，它返回 &lt;code&gt;nil&lt;/code&gt; 并且不提前偏移量。</target>
        </trans-unit>
        <trans-unit id="454cb822e207c8c8cf1e19d8344909cc77a4fb69" translate="yes" xml:space="preserve">
          <source>If there's a match, the scanner advances the scan offset, the last match is saved, and it returns the size of the skipped match. Otherwise it returns &lt;code&gt;nil&lt;/code&gt; and does not advance the offset.</source>
          <target state="translated">如果存在匹配项，则扫描程序将前进扫描偏移量，保存最后一个匹配项，并返回跳过的匹配项的大小。否则，它返回 &lt;code&gt;nil&lt;/code&gt; 并且不提前偏移量。</target>
        </trans-unit>
        <trans-unit id="38616dfa48ed0248b98643665b1e0b8cf8dffcc0" translate="yes" xml:space="preserve">
          <source>If this value is &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Colorize::Object&lt;/a&gt;&lt;/code&gt; is enabled by default.</source>
          <target state="translated">如果该值为 &lt;code&gt;true&lt;/code&gt; ，则默认情况下启用 &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Colorize::Object&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35575ed49a091bc12d7e1c0bbd8827ace030b455" translate="yes" xml:space="preserve">
          <source>If this value is &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Colorize::Object&lt;/a&gt;&lt;/code&gt; is enabled by default. But if this value is &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Colorize::Object&lt;/a&gt;&lt;/code&gt; is disabled.</source>
          <target state="translated">如果该值为 &lt;code&gt;true&lt;/code&gt; ，则默认情况下启用 &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Colorize::Object&lt;/a&gt;&lt;/code&gt; 。但是，如果该值为 &lt;code&gt;false&lt;/code&gt; ，则将禁用 &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Colorize::Object&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e0eb8b0ab697add0a4d8d83b45749ec3d21b24b0" translate="yes" xml:space="preserve">
          <source>If we define two modules with names &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;:</source>
          <target state="translated">如果我们定义两个名称分别为 &lt;code&gt;A&lt;/code&gt; 和 &lt;code&gt;B&lt;/code&gt; 的模块：</target>
        </trans-unit>
        <trans-unit id="044b28684b72ceaa1d72ef53c31f8adb0e20c8d4" translate="yes" xml:space="preserve">
          <source>If we hand't use &lt;code&gt;&lt;a href=&quot;macroid#id:MacroId-instance-method&quot;&gt;#id&lt;/a&gt;&lt;/code&gt;, the generated code would have been this:</source>
          <target state="translated">如果我们不使用 &lt;code&gt;&lt;a href=&quot;macroid#id:MacroId-instance-method&quot;&gt;#id&lt;/a&gt;&lt;/code&gt; ，则生成的代码将是这样的：</target>
        </trans-unit>
        <trans-unit id="7aed342b224e23ce6746d8a74445928b5115e54b" translate="yes" xml:space="preserve">
          <source>If we read Travis CI job log, we will find that every time the job runs, Travis CI needs to fetch the libraries needed to run the application:</source>
          <target state="translated">如果我们阅读Travis CI的工作日志,我们会发现,每次工作运行时,Travis CI都需要获取运行应用程序所需的库。</target>
        </trans-unit>
        <trans-unit id="cfc038e00b2204b168d33c626192675a2517e2aa" translate="yes" xml:space="preserve">
          <source>If we want to execute the spawned fiber for ever, we can use &lt;code&gt;sleep&lt;/code&gt; without arguments:</source>
          <target state="translated">如果我们想永远执行衍生的光纤，可以使用不带参数的 &lt;code&gt;sleep&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e472ade7f51ebc623e4e6a83cde28efdb269e3e3" translate="yes" xml:space="preserve">
          <source>If you commit the above file to your project and push, you'll trigger your first run of the new pipeline.</source>
          <target state="translated">如果你把上面的文件提交到你的项目并推送,你将触发新管道的第一次运行。</target>
        </trans-unit>
        <trans-unit id="6844a6a8a18710d78630335246bf6cb26d11be1c" translate="yes" xml:space="preserve">
          <source>If you compile the above program with the &lt;code&gt;tool hierarchy&lt;/code&gt; command you will see this for &lt;code&gt;Person&lt;/code&gt;:</source>
          <target state="translated">如果使用 &lt;code&gt;tool hierarchy&lt;/code&gt; 命令编译以上程序，则 &lt;code&gt;Person&lt;/code&gt; 会看到以下内容：</target>
        </trans-unit>
        <trans-unit id="5a5d9509f2e3cc93a293efb11c650a6eea9e41e6" translate="yes" xml:space="preserve">
          <source>If you declare your type as a &lt;strong&gt;struct&lt;/strong&gt; instead of a &lt;strong&gt;class&lt;/strong&gt;, creating an instance of it will use stack memory, which is much cheaper than heap memory and doesn't put pressure on the GC.</source>
          <target state="translated">如果将类型声明为&lt;strong&gt;结构&lt;/strong&gt;而不是&lt;strong&gt;类&lt;/strong&gt;，则创建其实例将使用堆栈内存，该内存比堆内存便宜得多，并且不会对GC造成压力。</target>
        </trans-unit>
        <trans-unit id="fc4b9d71eeb3fef7f237163eb09797ef2f7941d5" translate="yes" xml:space="preserve">
          <source>If you define the function inline in the same call you can omit the argument types, the compiler will add the types for you based on the &lt;code&gt;fun&lt;/code&gt; signature:</source>
          <target state="translated">如果在同一调用中内联定义函数，则可以省略参数类型，编译器将根据 &lt;code&gt;fun&lt;/code&gt; 签名为您添加类型：</target>
        </trans-unit>
        <trans-unit id="d67bb5d71d0e06a738efd339fa7554f58881d74a" translate="yes" xml:space="preserve">
          <source>If you don't mark them, &lt;code&gt;begin/rescue&lt;/code&gt; blocks that surround this function's calls won't work as expected.</source>
          <target state="translated">如果您未标记它们，则围绕此函数调用的 &lt;code&gt;begin/rescue&lt;/code&gt; 块将无法按预期工作。</target>
        </trans-unit>
        <trans-unit id="3db8912b4d9e5567c619bc268526af5712d19120" translate="yes" xml:space="preserve">
          <source>If you get an error like:</source>
          <target state="translated">如果你得到一个错误,如。</target>
        </trans-unit>
        <trans-unit id="aeeea1ef3b64a8f67465b1f2348da76bcc1837f8" translate="yes" xml:space="preserve">
          <source>If you haven't already, &lt;a href=&quot;https://travis-ci.org/&quot;&gt;sign up for Travis CI&lt;/a&gt;.</source>
          <target state="translated">如果尚未&lt;a href=&quot;https://travis-ci.org/&quot;&gt;注册&lt;/a&gt;，请注册Travis CI。</target>
        </trans-unit>
        <trans-unit id="3bb93ed7816b90ae167ea57614085e15d43c2026" translate="yes" xml:space="preserve">
          <source>If you need to build a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; where the maximum capacity is unknown, use &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;):self-class-method&quot;&gt;String#build&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果你需要建立一个 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; ，其中最大容量是未知的，使用 &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;):self-class-method&quot;&gt;String#build&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a515903a331c7adf2a4850ada40f94faf4622500" translate="yes" xml:space="preserve">
          <source>If you need to build a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; where the maximum capacity is unknown, use &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;block):self-class-method&quot;&gt;String#build&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果你需要建立一个 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; ，其中最大容量是未知的，使用 &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;block):self-class-method&quot;&gt;String#build&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12a923702bc9ca4c96af26a508dad9123fb36bd3" translate="yes" xml:space="preserve">
          <source>If you need to change the default level, backend or sources call &lt;code&gt;&lt;a href=&quot;log#setup(*,builder:Log::Builder=Log.builder,&amp;amp;)-class-method&quot;&gt;Log.setup&lt;/a&gt;&lt;/code&gt; upon startup.</source>
          <target state="translated">如果需要更改默认级别，则后端或源在启动时会调用 &lt;code&gt;&lt;a href=&quot;log#setup(*,builder:Log::Builder=Log.builder,&amp;amp;)-class-method&quot;&gt;Log.setup&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a2ebf0251c708c2036534da99067a903ab91a8e0" translate="yes" xml:space="preserve">
          <source>If you need to dynamically build a string, use &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;):self-class-method&quot;&gt;String#build&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果需要动态生成字符串，请使用 &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;):self-class-method&quot;&gt;String#build&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="24a4231ffd3145a2e17ccd826fc00864537ec792" translate="yes" xml:space="preserve">
          <source>If you need to dynamically build a string, use &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;block):self-class-method&quot;&gt;String#build&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果需要动态生成字符串，请使用 &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;block):self-class-method&quot;&gt;String#build&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="19e33e349997459fbeb1a2aa3c48d52562ec234a" translate="yes" xml:space="preserve">
          <source>If you need to execute the body at least once and then check for a breaking condition, you can do this:</source>
          <target state="translated">如果你需要至少执行一次身体,然后检查是否有破损情况,你可以这样做。</target>
        </trans-unit>
        <trans-unit id="e9b91cffcb640dd04b3df67370094008cc11ca90" translate="yes" xml:space="preserve">
          <source>If you need to set any compile-time flags not set implicitly through &lt;code&gt;--target&lt;/code&gt;, you can use the &lt;code&gt;-D&lt;/code&gt; command line flag.</source>
          <target state="translated">如果需要设置不是通过 &lt;code&gt;--target&lt;/code&gt; 隐式设置的任何编译时标志，则可以使用 &lt;code&gt;-D&lt;/code&gt; 命令行标志。</target>
        </trans-unit>
        <trans-unit id="632f7f303044a9bffe7b52f89142e5036a1cbcce" translate="yes" xml:space="preserve">
          <source>If you need to write a string that has many double quotes, parentheses, or similar characters, you can use alternative literals:</source>
          <target state="translated">如果你需要写一个有许多双引号、圆括号或类似字符的字符串,你可以使用替代字元。</target>
        </trans-unit>
        <trans-unit id="356d8adc679d48604a349e3a8b9ddc0c9ee281c9" translate="yes" xml:space="preserve">
          <source>If you omit an explicit type restriction, the compiler will try to infer the type of instance and class variables using a bunch of syntactic rules.</source>
          <target state="translated">如果省略了显式的类型限制,编译器会尝试使用一堆语法规则来推断实例和类变量的类型。</target>
        </trans-unit>
        <trans-unit id="412e16a2d2db6af9b1f9b8f07b27f452be9f7cdf" translate="yes" xml:space="preserve">
          <source>If you redefine a method, the last definition will take precedence.</source>
          <target state="translated">如果你重新定义一个方法,最后一个定义将优先。</target>
        </trans-unit>
        <trans-unit id="410a8318180bd09eff41e8cc0b660bd1142155fb" translate="yes" xml:space="preserve">
          <source>If you run the compiler from somewhere else, say the &lt;code&gt;src&lt;/code&gt; folder, &lt;code&gt;lib&lt;/code&gt; will not be in the path and &lt;code&gt;require &quot;foo&quot;&lt;/code&gt; can't be resolved.</source>
          <target state="translated">如果从其他地方运行编译器，例如 &lt;code&gt;src&lt;/code&gt; 文件夹，则 &lt;code&gt;lib&lt;/code&gt; 将不在路径中，并且 &lt;code&gt;require &quot;foo&quot;&lt;/code&gt; 无法解决&amp;ldquo; foo&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="46635aca929eb0dc9cdfc2bcf0aeea8a0a18975a" translate="yes" xml:space="preserve">
          <source>If you want a method to only accept the type Int32 (not instances of it), you use &lt;code&gt;.class&lt;/code&gt;:</source>
          <target state="translated">如果您想让一个方法只接受Int32类型（而不是它的实例），请使用 &lt;code&gt;.class&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="df566aa68ecfbf6dfa5f7b5378bc80293d2d6ebb" translate="yes" xml:space="preserve">
          <source>If you want to contribute then you might want to install Crystal from sources.</source>
          <target state="translated">如果你想做出贡献,那么你可能想从源头安装Crystal。</target>
        </trans-unit>
        <trans-unit id="5f59918ff367bc32efced5deba138d5dc0263842" translate="yes" xml:space="preserve">
          <source>If you want to invoke the program's method, even though the current type defines a method with the same name, prefix the call with &lt;code&gt;::&lt;/code&gt;:</source>
          <target state="translated">如果你想调用的程序的方法，尽管当前类型定义具有相同的名称，前缀与呼叫的方法 &lt;code&gt;::&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="9020343752a86deb77b79cd68b3d8b90dd55555d" translate="yes" xml:space="preserve">
          <source>If you want to log an exception, you can indicate it in the &lt;code&gt;exception:&lt;/code&gt; named argument.</source>
          <target state="translated">如果要记录异常，则可以在 &lt;code&gt;exception:&lt;/code&gt; 指定它： named参数。</target>
        </trans-unit>
        <trans-unit id="35c586a9a5f5e8f10a1de56e853440af82e8a1e4" translate="yes" xml:space="preserve">
          <source>If you want to pass &lt;code&gt;NULL&lt;/code&gt; instead of a callback, just pass &lt;code&gt;nil&lt;/code&gt;:</source>
          <target state="translated">如果要传递 &lt;code&gt;NULL&lt;/code&gt; 而不是回调，只需传递 &lt;code&gt;nil&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="95ba118065f124836ada1dae1c7d7a1c2f20798b" translate="yes" xml:space="preserve">
          <source>If you want to verify that all your code has been formatted with &lt;code&gt;crystal tool format&lt;/code&gt;, add a script for &lt;code&gt;crystal tool format --check&lt;/code&gt;. If the code is not formatted correctly, this will &lt;a href=&quot;https://docs.travis-ci.com/user/for-beginners/#breaking-the-build&quot;&gt;break the build&lt;/a&gt; just as failing tests would.</source>
          <target state="translated">如果要验证是否已使用 &lt;code&gt;crystal tool format&lt;/code&gt; 对所有代码进行了格式化，请添加 &lt;code&gt;crystal tool format --check&lt;/code&gt; 的脚本。如果代码格式不正确，这将像失败的测试一样&lt;a href=&quot;https://docs.travis-ci.com/user/for-beginners/#breaking-the-build&quot;&gt;破坏构建&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cf4aef3252cad6456eca00eb1161df1deafc2382" translate="yes" xml:space="preserve">
          <source>If you would like more information about &lt;code&gt;bin/crystal&lt;/code&gt;, check out the &lt;a href=&quot;../using_the_compiler/index&quot;&gt;using the compiler&lt;/a&gt; documentation.</source>
          <target state="translated">如果您想了解有关 &lt;code&gt;bin/crystal&lt;/code&gt; 的更多信息，请查阅&lt;a href=&quot;../using_the_compiler/index&quot;&gt;使用编译器&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="fb82b7bc70519f4f2db16a6ca379e6c49c78895f" translate="yes" xml:space="preserve">
          <source>If you'd like you can also add a &lt;code&gt;shields.io&lt;/code&gt; badge for the release. GitLab doesn't have full support for this kind of thing, and until someone adds a &lt;a href=&quot;https://github.com/badges/shields/blob/master/doc/TUTORIAL.md&quot;&gt;version badge for gitlab&lt;/a&gt; to shields.io, we'll have to just code in the version number in the URLs directly.</source>
          <target state="translated">如果您愿意，还可以为该发行版添加 &lt;code&gt;shields.io&lt;/code&gt; 徽章。GitLab并没有完全支持这种事情，除非有人将&lt;a href=&quot;https://github.com/badges/shields/blob/master/doc/TUTORIAL.md&quot;&gt;gitlab&lt;/a&gt;的版本标记添加到shields.io，否则我们只需要直接在URL中输入版本号即可。</target>
        </trans-unit>
        <trans-unit id="cc2b9dfcd7352fe0bb387189e0d5ab88b584c912" translate="yes" xml:space="preserve">
          <source>If you're on a &lt;code&gt;-RELEASE&lt;/code&gt; version of FreeBSD, by default &lt;code&gt;pkg&lt;/code&gt; is configured for the &lt;code&gt;quarterly&lt;/code&gt; package set, which is updated every quarter (except for security patches, which are included ASAP).</source>
          <target state="translated">如果您使用的是 &lt;code&gt;-RELEASE&lt;/code&gt; 版本的FreeBSD，则默认情况下，为 &lt;code&gt;quarterly&lt;/code&gt; 软件包集配置 &lt;code&gt;pkg&lt;/code&gt; ，该软件包集每季度更新一次（安全补丁除外，该补丁已尽快包含在内）。</target>
        </trans-unit>
        <trans-unit id="5e759f241669f8bab60848fe61cabfe006f9ba86" translate="yes" xml:space="preserve">
          <source>If you're planning to contribute to the language itself you might find useful to install LLVM as well. So replace the last line with:</source>
          <target state="translated">如果你打算为语言本身做贡献,你可能会发现安装LLVM也很有用。因此,将最后一行替换为</target>
        </trans-unit>
        <trans-unit id="6618bc7455279890292923d513388ccc28194ee3" translate="yes" xml:space="preserve">
          <source>If you've been following along, your &lt;code&gt;.travis.yml&lt;/code&gt; file should look something like this:</source>
          <target state="translated">如果您一直在关注，则 &lt;code&gt;.travis.yml&lt;/code&gt; 文件应如下所示：</target>
        </trans-unit>
        <trans-unit id="081a86d8835d5147ede55f7c5f68848f67509bf5" translate="yes" xml:space="preserve">
          <source>If your shard builds an application, both &lt;code&gt;shard.yml&lt;/code&gt; and &lt;code&gt;shard.lock&lt;/code&gt; should be checked into version control to provide reproducible dependency installs. If it is only a library for other shards to depend on, &lt;code&gt;shard.lock&lt;/code&gt; should &lt;em&gt;not&lt;/em&gt; be checked in, only &lt;code&gt;shard.yml&lt;/code&gt;. It's good advice to add it to &lt;code&gt;.gitignore&lt;/code&gt; (the &lt;a href=&quot;../using_the_compiler/index#crystal-init&quot;&gt;&lt;code&gt;crystal init&lt;/code&gt;&lt;/a&gt; does this automatically when initializing a &lt;code&gt;lib&lt;/code&gt; repository).</source>
          <target state="translated">如果您的分片构建应用程序，则应将 &lt;code&gt;shard.yml&lt;/code&gt; 和 &lt;code&gt;shard.lock&lt;/code&gt; 都检入版本控制中，以提供可复制的依赖项安装。如果它只是一个库，其他碎片依赖， &lt;code&gt;shard.lock&lt;/code&gt; 应该&lt;em&gt;不&lt;/em&gt;被在，只有检查 &lt;code&gt;shard.yml&lt;/code&gt; 。最好将其添加到 &lt;code&gt;.gitignore&lt;/code&gt; （初始化 &lt;code&gt;lib&lt;/code&gt; 存储库时，&lt;a href=&quot;../using_the_compiler/index#crystal-init&quot;&gt; &lt;code&gt;crystal init&lt;/code&gt; &lt;/a&gt;会自动执行此操作）。</target>
        </trans-unit>
        <trans-unit id="f704f1f4341c2e007c25bf130f73a86589aaf7f3" translate="yes" xml:space="preserve">
          <source>Ignore internal document encoding hint</source>
          <target state="translated">忽略内部文档编码提示</target>
        </trans-unit>
        <trans-unit id="9f18df8db617aed015b3aee7008f1bc14e64ec36" translate="yes" xml:space="preserve">
          <source>Ignore white space and &lt;code&gt;#&lt;/code&gt; comments.</source>
          <target state="translated">忽略空格和 &lt;code&gt;#&lt;/code&gt; 注释。</target>
        </trans-unit>
        <trans-unit id="e769494ea641bd01735c8978b12dae80bc631fc2" translate="yes" xml:space="preserve">
          <source>Illegal byte sequence</source>
          <target state="translated">不合法的字节序列</target>
        </trans-unit>
        <trans-unit id="3176fdb344f7026fb9cd9da003d83547cd35fc12" translate="yes" xml:space="preserve">
          <source>Illegal seek</source>
          <target state="translated">非法寻衅滋事</target>
        </trans-unit>
        <trans-unit id="baba298a8e3227dae43870b3d2918fa910e82d50" translate="yes" xml:space="preserve">
          <source>Image: &lt;code&gt;https://img.shields.io/badge/docs-available-brightgreen.svg&lt;/code&gt;</source>
          <target state="translated">图片： &lt;code&gt;https://img.shields.io/badge/docs-available-brightgreen.svg&lt;/code&gt; ：//img.shields.io/badge/docs-available-brightgreen.svg</target>
        </trans-unit>
        <trans-unit id="88424dd93bbaf80447a4c645f9560b90b2285a0f" translate="yes" xml:space="preserve">
          <source>Image: &lt;code&gt;https://img.shields.io/badge/release-&amp;lt;VERSION&amp;gt;-brightgreen.svg&lt;/code&gt;</source>
          <target state="translated">图片： &lt;code&gt;https://img.shields.io/badge/release-&amp;lt;VERSION&amp;gt;-brightgreen.svg&lt;/code&gt; : //img.shields.io/badge/release- &amp;lt;版本&amp;gt; -brightgreen.svg</target>
        </trans-unit>
        <trans-unit id="12ec9ca858442888f051cfcf01d2d10b2f0cf875" translate="yes" xml:space="preserve">
          <source>Immediately resumes execution of this fiber.</source>
          <target state="translated">立即恢复执行此光纤。</target>
        </trans-unit>
        <trans-unit id="9bb823f2686162658d58ba28d762df95e581159c" translate="yes" xml:space="preserve">
          <source>Immutable structured metadata information for logging.</source>
          <target state="translated">不可更改的结构化元数据信息,用于记录。</target>
        </trans-unit>
        <trans-unit id="b78785e84488212efeb2df817e6c0811fde489e5" translate="yes" xml:space="preserve">
          <source>Implement XInclude substitution</source>
          <target state="translated">实现XInclude替换</target>
        </trans-unit>
        <trans-unit id="aa3d0e1b2fa62620ef593c210a94d8c687db07c1" translate="yes" xml:space="preserve">
          <source>Implementation based on Mathias Bynens' &lt;a href=&quot;https://github.com/bestiejs/punycode.js&quot;&gt;punnycode.js&lt;/a&gt; project.</source>
          <target state="translated">基于Mathias Bynens的&lt;a href=&quot;https://github.com/bestiejs/punycode.js&quot;&gt;punnycode.js&lt;/a&gt;项目的实现。</target>
        </trans-unit>
        <trans-unit id="b7193857d3b73c5303f625327d016375cad6c9bd" translate="yes" xml:space="preserve">
          <source>Implementation is based on an open hash table. Two objects refer to the same hash key when their hash value (&lt;code&gt;&lt;a href=&quot;object#hash-instance-method&quot;&gt;Object#hash&lt;/a&gt;&lt;/code&gt;) is identical and both objects are equal to each other (&lt;code&gt;&lt;a href=&quot;object#==(other)-instance-method&quot;&gt;Object#==&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">实现基于开放的哈希表。当两个对象的哈希值（ &lt;code&gt;&lt;a href=&quot;object#hash-instance-method&quot;&gt;Object#hash&lt;/a&gt;&lt;/code&gt; ）相同且两个对象彼此相等（ &lt;code&gt;&lt;a href=&quot;object#==(other)-instance-method&quot;&gt;Object#==&lt;/a&gt;&lt;/code&gt; ）时，它们引用相同的哈希键。</target>
        </trans-unit>
        <trans-unit id="7ca53fef26c6216135423574d73f480c1c3ce1dc" translate="yes" xml:space="preserve">
          <source>Implementation of string interpolation of a char and a string.</source>
          <target state="translated">实现一个char和一个字符串的字符串插值。</target>
        </trans-unit>
        <trans-unit id="804771dc966ccb9578ced5c9bbbaa9d8c9b44561" translate="yes" xml:space="preserve">
          <source>Implementation of string interpolation of a single non-string value.</source>
          <target state="translated">实现单个非字符串值的字符串插值。</target>
        </trans-unit>
        <trans-unit id="7bcf16ecba3652e5eb6eaec31b49c78673d34506" translate="yes" xml:space="preserve">
          <source>Implementation of string interpolation of a single string.</source>
          <target state="translated">单一字符串插值的实现。</target>
        </trans-unit>
        <trans-unit id="3f7545dceab2eb0fe1c696018b9d94838a025a5b" translate="yes" xml:space="preserve">
          <source>Implementation of string interpolation of a string and a char.</source>
          <target state="translated">实现字符串和char的字符串插值。</target>
        </trans-unit>
        <trans-unit id="3aa5c022db189a15e98bb1512edd10acfe6df38f" translate="yes" xml:space="preserve">
          <source>Implementation of string interpolation of multiple string values.</source>
          <target state="translated">实现多个字符串值的字符串插值。</target>
        </trans-unit>
        <trans-unit id="9bcc47eeb4dca96f58981e24b921fd1c2924b349" translate="yes" xml:space="preserve">
          <source>Implementation of string interpolation of multiple, possibly non-string values.</source>
          <target state="translated">实现多个可能是非字符串值的字符串插值。</target>
        </trans-unit>
        <trans-unit id="f88a8bea59b1255ab1ee0d9099c85cd391463728" translate="yes" xml:space="preserve">
          <source>Implementor that returns &lt;code&gt;&lt;a href=&quot;usedefault&quot;&gt;Channel::UseDefault&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;selectaction#execute:DeliveryState-instance-method&quot;&gt;#execute&lt;/a&gt;&lt;/code&gt; must redefine &lt;code&gt;&lt;a href=&quot;selectaction#default_result-instance-method&quot;&gt;#default_result&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">实施者是返回 &lt;code&gt;&lt;a href=&quot;usedefault&quot;&gt;Channel::UseDefault&lt;/a&gt;&lt;/code&gt; 在 &lt;code&gt;&lt;a href=&quot;selectaction#execute:DeliveryState-instance-method&quot;&gt;#execute&lt;/a&gt;&lt;/code&gt; 必须重新定义 &lt;code&gt;&lt;a href=&quot;selectaction#default_result-instance-method&quot;&gt;#default_result&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a13cf35486afca7a9a49f42ce8dd25245bef7d4" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;&lt;a href=&quot;../../socket/server&quot;&gt;::Socket::Server&lt;/a&gt;&lt;a href=&quot;server#accept:OpenSSL::SSL::Socket::Server-instance-method&quot;&gt;#accept&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;&lt;a href=&quot;../../socket/server&quot;&gt;::Socket::Server&lt;/a&gt;&lt;a href=&quot;server#accept:OpenSSL::SSL::Socket::Server-instance-method&quot;&gt;#accept&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6febf3423b5a2fd5d708d0cafafae45278263e8d" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;&lt;a href=&quot;../../socket/server&quot;&gt;::Socket::Server&lt;/a&gt;&lt;a href=&quot;server#accept?:OpenSSL::SSL::Socket::Server?-instance-method&quot;&gt;#accept?&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;&lt;a href=&quot;../../socket/server&quot;&gt;::Socket::Server&lt;/a&gt;&lt;a href=&quot;server#accept?:OpenSSL::SSL::Socket::Server?-instance-method&quot;&gt;#accept?&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="771d136be14b58d53e398f9de37fd2c088f2aed5" translate="yes" xml:space="preserve">
          <source>Implements the Adler32 checksum algorithm.</source>
          <target state="translated">实施Adler32校验算法。</target>
        </trans-unit>
        <trans-unit id="28275372538968891a6e160064b912d23ba38d2c" translate="yes" xml:space="preserve">
          <source>Implements the CRC32 checksum algorithm.</source>
          <target state="translated">执行CRC32校验算法。</target>
        </trans-unit>
        <trans-unit id="522d7f2bf78da2c71f62f15e7ea93767f964798c" translate="yes" xml:space="preserve">
          <source>Implements the MD5 digest algorithm.</source>
          <target state="translated">实施MD5摘要算法。</target>
        </trans-unit>
        <trans-unit id="6e6517a6b07ad2994f4db48b1a5fca25d96b5794" translate="yes" xml:space="preserve">
          <source>Implements the SHA1 digest algorithm.</source>
          <target state="translated">实施SHA1摘要算法。</target>
        </trans-unit>
        <trans-unit id="20c33c1d5f4fa18cbeb1939fec24c2dc189e85fc" translate="yes" xml:space="preserve">
          <source>Implicit constants, &lt;code&gt;None&lt;/code&gt; and &lt;code&gt;All&lt;/code&gt;, are automatically added to these enums, where &lt;code&gt;None&lt;/code&gt; has the value &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;All&lt;/code&gt; has the &quot;or&quot;ed value of all constants.</source>
          <target state="translated">隐式常量 &lt;code&gt;None&lt;/code&gt; 和 &lt;code&gt;All&lt;/code&gt; 会自动添加到这些枚举中，其中 &lt;code&gt;None&lt;/code&gt; 的值为 &lt;code&gt;0&lt;/code&gt; ,而 &lt;code&gt;All&lt;/code&gt; 的值为所有常量的&amp;ldquo;或&amp;rdquo;值。</target>
        </trans-unit>
        <trans-unit id="6e67fca40f0865559decb7988447ee1a5d8afa90" translate="yes" xml:space="preserve">
          <source>Implicit-object allowed</source>
          <target state="translated">隐含对象允许</target>
        </trans-unit>
        <trans-unit id="9097990aa250d8f26c2cfe005b8d4cc9d881781d" translate="yes" xml:space="preserve">
          <source>In Crystal everything is an object. The definition of an object boils down to these points:</source>
          <target state="translated">在Crystal中,所有的东西都是一个对象。对象的定义归结为以下几点。</target>
        </trans-unit>
        <trans-unit id="bbbbe6b64b087c3c38ecd283503cbc87993ea670" translate="yes" xml:space="preserve">
          <source>In Crystal we have two ways of building this connection. And so, coming up next, we are going to present examples with some advice on when to use each one.</source>
          <target state="translated">在Crystal中,我们有两种方法来建立这种连接。因此,接下来,我们将介绍一些例子,并就何时使用每种方法提出一些建议。</target>
        </trans-unit>
        <trans-unit id="5adb3016af8e6fb7aa092ef4f2cbea0f28a08306" translate="yes" xml:space="preserve">
          <source>In Crystal, &lt;code&gt;puts&lt;/code&gt; will invoke &lt;code&gt;to_s(io)&lt;/code&gt; on the object, passing it the IO to which the string representation should be written.</source>
          <target state="translated">在Crystal中， &lt;code&gt;puts&lt;/code&gt; 将在对象上调用 &lt;code&gt;to_s(io)&lt;/code&gt; ，并将应将字符串表示形式写入的IO传递给该对象。</target>
        </trans-unit>
        <trans-unit id="ba9466fcc2a8dc340d36e807c6fd6035b41d1e3d" translate="yes" xml:space="preserve">
          <source>In Debian derived distributions, you can use the official Crystal repository.</source>
          <target state="translated">在Debian衍生的发行版中,你可以使用官方的Crystal仓库。</target>
        </trans-unit>
        <trans-unit id="3420906df7a8098222f85752d96256b7fae157a9" translate="yes" xml:space="preserve">
          <source>In RedHat derived distributions, you can use the official Crystal repository.</source>
          <target state="translated">在RedHat衍生的发行版中,你可以使用官方的Crystal仓库。</target>
        </trans-unit>
        <trans-unit id="bc0b7757f3880ee62287025aecd965f943f82021" translate="yes" xml:space="preserve">
          <source>In a Docker-based &lt;em&gt;runner&lt;/em&gt; we need to run &lt;code&gt;shards install&lt;/code&gt; explicitly, like this:</source>
          <target state="translated">在基于多克，&lt;em&gt;亚军&lt;/em&gt;，我们需要运行 &lt;code&gt;shards install&lt;/code&gt; 明确的，就像这样：</target>
        </trans-unit>
        <trans-unit id="b20d35e011fcff7c9bfba4fa9e8f1fd220651dd6" translate="yes" xml:space="preserve">
          <source>In all of these cases you can use the special &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;**&lt;/code&gt; suffixes:</source>
          <target state="translated">在所有这些情况下，您都可以使用特殊的 &lt;code&gt;*&lt;/code&gt; 和 &lt;code&gt;**&lt;/code&gt; 后缀：</target>
        </trans-unit>
        <trans-unit id="3933f8aefcde5fa10556fdc0355de356ee6b2888" translate="yes" xml:space="preserve">
          <source>In all the previous examples, the rolling back is &lt;strong&gt;implicit&lt;/strong&gt;, but we can also tell the transaction to rollback:</source>
          <target state="translated">在前面的所有示例中，回滚都是&lt;strong&gt;隐式的&lt;/strong&gt;，但是我们还可以告诉事务回滚：</target>
        </trans-unit>
        <trans-unit id="4dd338898fb2109e29819cb3d608e19399d6e3c9" translate="yes" xml:space="preserve">
          <source>In binary file mode, line endings are not converted to CRLF on Windows.</source>
          <target state="translated">在二进制文件模式下,Windows上的行尾不转换为CRLF。</target>
        </trans-unit>
        <trans-unit id="1f057cf08f3968ab6ed1ba375b21b72ec05df09e" translate="yes" xml:space="preserve">
          <source>In both cases you can use nested names and they will be looked up in nested directories:</source>
          <target state="translated">在这两种情况下,你都可以使用嵌套的名称,它们将在嵌套的目录中被查找。</target>
        </trans-unit>
        <trans-unit id="63c06fabb66d59476ecdf33963fba52384551264" translate="yes" xml:space="preserve">
          <source>In case we are wondering what the job &lt;a href=&quot;https://circleci.com/orbs/registry/orb/manastech/crystal#jobs-test&quot;&gt;crystal/test&lt;/a&gt; does, we always may see the source code.</source>
          <target state="translated">如果我们想知道作业&lt;a href=&quot;https://circleci.com/orbs/registry/orb/manastech/crystal#jobs-test&quot;&gt;晶体/测试的&lt;/a&gt;功能，我们总是可以看到源代码。</target>
        </trans-unit>
        <trans-unit id="caaf8b4d9afa41bb58f840ef379bc2c3ad6329f7" translate="yes" xml:space="preserve">
          <source>In case we want to build richer CLI applications, there are libraries that can help us. Here we will name two well-known libraries: &lt;code&gt;Readline&lt;/code&gt; and &lt;code&gt;NCurses&lt;/code&gt;.</source>
          <target state="translated">如果我们要构建更丰富的CLI应用程序，则可以使用一些库来帮助我们。在这里，我们将命名两个著名的库： &lt;code&gt;Readline&lt;/code&gt; 和 &lt;code&gt;NCurses&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af5f6851b0dc51557521b3f2a040fcad95429166" translate="yes" xml:space="preserve">
          <source>In class names, acronyms are &lt;em&gt;all-uppercase&lt;/em&gt;. For example, &lt;code&gt;HTTP&lt;/code&gt;, and &lt;code&gt;LibXML&lt;/code&gt;.</source>
          <target state="translated">在类名中，首字母缩写词&lt;em&gt;全部为大写&lt;/em&gt;。例如， &lt;code&gt;HTTP&lt;/code&gt; 和 &lt;code&gt;LibXML&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="92b90c702b82602a8ad11637852efc2a0a14c17d" translate="yes" xml:space="preserve">
          <source>In code examples, the comment &lt;code&gt;#=&amp;gt;&lt;/code&gt; is used to show the value of an expression. For example:</source>
          <target state="translated">在代码示例中，注释 &lt;code&gt;#=&amp;gt;&lt;/code&gt; 用于显示表达式的值。例如：</target>
        </trans-unit>
        <trans-unit id="dd8e35bbf336b39b920f37a26849fc466895e2d6" translate="yes" xml:space="preserve">
          <source>In contrast, &lt;code&gt;&lt;a href=&quot;time#to_local_in(location:Location)-instance-method&quot;&gt;#to_local_in&lt;/a&gt;&lt;/code&gt; changes to a different location while preserving the same wall time, which results in different instants on the time line.</source>
          <target state="translated">相反， &lt;code&gt;&lt;a href=&quot;time#to_local_in(location:Location)-instance-method&quot;&gt;#to_local_in&lt;/a&gt;&lt;/code&gt; 更改为其他位置，同时保留相同的时间，这会导致时间轴上的不同时刻。</target>
        </trans-unit>
        <trans-unit id="91252187c9622577b97522e09b6689e3975ee758" translate="yes" xml:space="preserve">
          <source>In either case, &lt;code&gt;&amp;amp;.some_method&lt;/code&gt; is an argument passed to &lt;code&gt;method&lt;/code&gt;. This argument is syntactically equivalent to the block variants. It is only syntactic sugar and does not have any performance penalty.</source>
          <target state="translated">无论哪种情况， &lt;code&gt;&amp;amp;.some_method&lt;/code&gt; 都是传递给 &lt;code&gt;method&lt;/code&gt; 的参数。该参数在语法上等同于block变体。它只是语法糖，没有任何性能损失。</target>
        </trans-unit>
        <trans-unit id="baabc5553f8c1404a113ef41725f49489e618aa7" translate="yes" xml:space="preserve">
          <source>In fact, the above code doesn't need the return type restriction in &lt;code&gt;self.unknown&lt;/code&gt;. The reason is that the compiler will also look at a class method's body and if it can apply one of the previous rules (it's a &lt;code&gt;new&lt;/code&gt; method, or it's a literal, etc.) it will infer the type from that expression. So, the above can be simply written like this:</source>
          <target state="translated">实际上，以上代码在 &lt;code&gt;self.unknown&lt;/code&gt; 中不需要返回类型限制。原因是编译器还将查看类方法的主体，并且如果它可以应用以前的规则之一（它是一个 &lt;code&gt;new&lt;/code&gt; 方法，或者它是一个文字等），它将从该表达式中推断类型。因此，以上内容可以简单地写成这样：</target>
        </trans-unit>
        <trans-unit id="f5e98a764080798c366f229c0388793139f23457" translate="yes" xml:space="preserve">
          <source>In floored division, given two integers x and y:</source>
          <target state="translated">在浮动除法中,给定两个整数x和y。</target>
        </trans-unit>
        <trans-unit id="6c7bdc1551e860e2537e62a30de5df863b4efb84" translate="yes" xml:space="preserve">
          <source>In generated documentation the dummy &lt;code&gt;&amp;amp;block&lt;/code&gt; method will always appear, regardless of you writing it or not.</source>
          <target state="translated">无论生成与否，在生成的文档中，dummy &lt;code&gt;&amp;amp;block&lt;/code&gt; 方法将始终出现。</target>
        </trans-unit>
        <trans-unit id="5c0d97ace8f4764818f14af7c2827d661b52d173" translate="yes" xml:space="preserve">
          <source>In its basic form, it allows matching a value against other values:</source>
          <target state="translated">在其基本形式中,它允许将一个值与其他值进行匹配。</target>
        </trans-unit>
        <trans-unit id="ba3d240203a8b6c79f2e44535d1881beb0aa8f5e" translate="yes" xml:space="preserve">
          <source>In macro definitions, arguments are passed as their AST nodes, giving you access to them in macro expansions (&lt;code&gt;{{some_macro_argument}}&lt;/code&gt;). However that is not true for macro defs. Here the argument list is that of the method generated by the macro def. You cannot access their compile-time value.</source>
          <target state="translated">在宏定义中，参数作为AST节点传递，使您可以在宏扩展（ &lt;code&gt;{{some_macro_argument}}&lt;/code&gt; 中访问它们。但是，对于宏定义而言并非如此。这里的参数列表是由宏def生成的方法的参数列表。您无法访问它们的编译时值。</target>
        </trans-unit>
        <trans-unit id="efdf26967d789974e8d26a48672ad46762c3b391" translate="yes" xml:space="preserve">
          <source>In many programming languages what will happen is that &lt;code&gt;to_s&lt;/code&gt;, or a similar method for converting the object to its string representation, will be invoked, and then that string will be written to the standard output. This works, but it has a flaw: it creates an intermediate string, in heap memory, only to write it and then discard it. This, involves a heap memory allocation and gives a bit of work to the GC.</source>
          <target state="translated">在许多编程语言中，将发生的是调用 &lt;code&gt;to_s&lt;/code&gt; 或将对象转换为字符串表示形式的类似方法，然后将该字符串写入标准输出。这行得通，但有一个缺陷：它在堆内存中创建一个中间字符串，仅将其写入然后丢弃。这涉及到堆内存分配，并给GC带来了一些工作。</target>
        </trans-unit>
        <trans-unit id="d6fcf1095841b67382c241734de7c6c3270ef129" translate="yes" xml:space="preserve">
          <source>In method names, acronyms are &lt;em&gt;all-lowercase&lt;/em&gt;. For example &lt;code&gt;#from_json&lt;/code&gt;, &lt;code&gt;#to_io&lt;/code&gt;.</source>
          <target state="translated">在方法名称中，首字母缩写词&lt;em&gt;全部为小写&lt;/em&gt;。例如 &lt;code&gt;#from_json&lt;/code&gt; ， &lt;code&gt;#to_io&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3a360bf63eddcf8c579e6470067ffcccdad8911d" translate="yes" xml:space="preserve">
          <source>In native &lt;em&gt;runners&lt;/em&gt; (&lt;code&gt;language: crystal&lt;/code&gt;), Travis CI already automatically installs shards dependencies using &lt;code&gt;shards install&lt;/code&gt;. To improve build performance we may add &lt;a href=&quot;#caching&quot;&gt;caching&lt;/a&gt; on top of that.</source>
          <target state="translated">在本地&lt;em&gt;运动员&lt;/em&gt;（ &lt;code&gt;language: crystal&lt;/code&gt; ），特拉维斯CI已经使用自动安装碎片依赖 &lt;code&gt;shards install&lt;/code&gt; 。为了提高构建性能，我们可以在其上添加&lt;a href=&quot;#caching&quot;&gt;缓存&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="abef0c25fad769d15456af4cd758bf852ce49066" translate="yes" xml:space="preserve">
          <source>In one moment a transfer is made from one account to the other. For example, &lt;em&gt;John transfers $50 to Sarah&lt;/em&gt;</source>
          <target state="translated">在一瞬间，从一个帐户转到另一个帐户。例如，&lt;em&gt;约翰将$ 50美元转帐给莎拉&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b9b20353fa4a607cc54a9a084e3781b0d325118f" translate="yes" xml:space="preserve">
          <source>In order to achieve this, the compiler executable provides two flags:</source>
          <target state="translated">为了实现这一点,编译器可执行文件提供了两个标志。</target>
        </trans-unit>
        <trans-unit id="5fca536d6d8a121e64fa8a24226d59515e156fc8" translate="yes" xml:space="preserve">
          <source>In order to release a Crystal Shard, and follow along with this tutorial, you will need the following:</source>
          <target state="translated">为了释放水晶碎片,并跟随本教程,你将需要以下内容。</target>
        </trans-unit>
        <trans-unit id="c4ec4613d00ad33e166ff9c24337bc30ce5d64f2" translate="yes" xml:space="preserve">
          <source>In our case, we are going to use &lt;a href=&quot;https://circleci.com/orbs/registry/orb/manastech/crystal&quot;&gt;Crystal&amp;rsquo;s Orb&lt;/a&gt;</source>
          <target state="translated">在我们的例子中，我们将使用&lt;a href=&quot;https://circleci.com/orbs/registry/orb/manastech/crystal&quot;&gt;水晶的宝珠&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45845528a893d7f07d0dcb0adb6bf6678c74e3ff" translate="yes" xml:space="preserve">
          <source>In regular code &lt;code&gt;Int32 -&amp;gt; String&lt;/code&gt; is a syntax error.</source>
          <target state="translated">在常规代码中， &lt;code&gt;Int32 -&amp;gt; String&lt;/code&gt; 是语法错误。</target>
        </trans-unit>
        <trans-unit id="43c7a4d4741aa6515f174c290b51cd5a14d9ddd0" translate="yes" xml:space="preserve">
          <source>In regular code, &lt;code&gt;Int32*&lt;/code&gt; means invoking the &lt;code&gt;*&lt;/code&gt; method on &lt;code&gt;Int32&lt;/code&gt;.</source>
          <target state="translated">在常规代码中， &lt;code&gt;Int32*&lt;/code&gt; 表示在 &lt;code&gt;Int32&lt;/code&gt; 上调用 &lt;code&gt;*&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="e3f6356268a6e30bf06632cfbb11e2a11cbb4d50" translate="yes" xml:space="preserve">
          <source>In regular code, &lt;code&gt;Int32?&lt;/code&gt; is a syntax error.</source>
          <target state="translated">在常规代码中，是 &lt;code&gt;Int32?&lt;/code&gt; 是语法错误。</target>
        </trans-unit>
        <trans-unit id="9b8f7507152673e1002b12bbe28c9c0d23bcc529" translate="yes" xml:space="preserve">
          <source>In regular code, &lt;code&gt;Int32?&lt;/code&gt; is an &lt;code&gt;Int32 | ::Nil&lt;/code&gt; union type itself.</source>
          <target state="translated">在常规代码中，是 &lt;code&gt;Int32?&lt;/code&gt; 是 &lt;code&gt;Int32 | ::Nil&lt;/code&gt; 联合类型本身。</target>
        </trans-unit>
        <trans-unit id="492f078cffe16fb68d2167d03739db05308b94af" translate="yes" xml:space="preserve">
          <source>In regular code, &lt;code&gt;Int32[8]&lt;/code&gt; means invoking the &lt;code&gt;[]&lt;/code&gt; method on &lt;code&gt;Int32&lt;/code&gt; with &lt;code&gt;8&lt;/code&gt; as an argument.</source>
          <target state="translated">在常规代码中， &lt;code&gt;Int32[8]&lt;/code&gt; 表示以 &lt;code&gt;8&lt;/code&gt; 作为参数调用 &lt;code&gt;Int32&lt;/code&gt; 上的 &lt;code&gt;[]&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="526586a834f1acd181071ee8a67839e86c895c7f" translate="yes" xml:space="preserve">
          <source>In regular code, &lt;code&gt;{Int32, String}&lt;/code&gt; is a tuple instance containing &lt;code&gt;Int32&lt;/code&gt; and &lt;code&gt;String&lt;/code&gt; as its elements. This is different than the above tuple &lt;strong&gt;type&lt;/strong&gt;.</source>
          <target state="translated">在常规代码中， &lt;code&gt;{Int32, String}&lt;/code&gt; 是一个包含 &lt;code&gt;Int32&lt;/code&gt; 和 &lt;code&gt;String&lt;/code&gt; 作为其元素的元组实例。这与上面的元组&lt;strong&gt;类型不同&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="95a61b2f88a6519db2174b4c0fd81ab4104e656f" translate="yes" xml:space="preserve">
          <source>In regular code, &lt;code&gt;{x: Int32, y: String}&lt;/code&gt; is a named tuple instance containing &lt;code&gt;Int32&lt;/code&gt; and &lt;code&gt;String&lt;/code&gt; for &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. This is different than the above named tuple &lt;strong&gt;type&lt;/strong&gt;.</source>
          <target state="translated">在常规代码， &lt;code&gt;{x: Int32, y: String}&lt;/code&gt; 是包含命名元组实例 &lt;code&gt;Int32&lt;/code&gt; 和 &lt;code&gt;String&lt;/code&gt; 为 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 。这与上面命名的元组&lt;strong&gt;类型不同&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="9197929b078049f3d920b613864a5137ba83476e" translate="yes" xml:space="preserve">
          <source>In short, avoid &lt;code&gt;&amp;amp;block&lt;/code&gt; forwarding when &lt;code&gt;yield&lt;/code&gt; is involved.</source>
          <target state="translated">简而言之，当涉及 &lt;code&gt;yield&lt;/code&gt; 时，请避免 &lt;code&gt;&amp;amp;block&lt;/code&gt; 转发。</target>
        </trans-unit>
        <trans-unit id="20ff5b78c5e6b747a3030301d6331afba01439db" translate="yes" xml:space="preserve">
          <source>In such cases, the choice of time zone, and therefore the time, is not well-defined. This method returns a time that is correct in one of the two zones involved in the transition, but it does not guarantee which.</source>
          <target state="translated">在这种情况下,时区的选择,以及时间的选择,都不是很明确。本方法返回的时间在两个过渡时区中的一个是正确的,但并不保证是哪个时区。</target>
        </trans-unit>
        <trans-unit id="3a0c05f42e0f0e35e6860c2aa34f779c5ad03453" translate="yes" xml:space="preserve">
          <source>In test files, specs are structured by example groups which are defined by &lt;code&gt;describe&lt;/code&gt; and &lt;code&gt;context&lt;/code&gt; sections. Typically a top level &lt;code&gt;describe&lt;/code&gt; defines the outer unit (such as a class) to be tested by the spec. Further &lt;code&gt;describe&lt;/code&gt; sections can be nested within the outer unit to specify smaller units under test (such as individual methods).</source>
          <target state="translated">在测试文件中，规范由示例组构成，示例组由 &lt;code&gt;describe&lt;/code&gt; 和 &lt;code&gt;context&lt;/code&gt; 部分定义。通常，顶层 &lt;code&gt;describe&lt;/code&gt; 定义要由规范测试的外部单元（例如类）。可以在外部单元中嵌套进一步 &lt;code&gt;describe&lt;/code&gt; 部分，以指定要测试的较小单元（例如单个方法）。</target>
        </trans-unit>
        <trans-unit id="70bbec41f3009635d972183771280ceb207e601f" translate="yes" xml:space="preserve">
          <source>In the &lt;em&gt;Badges&lt;/em&gt; section of the &lt;em&gt;General&lt;/em&gt; settings, we'll first add a release badge. The link is: &lt;code&gt;https://gitlab.com/&amp;lt;YOUR-GITLAB-USERNAME&amp;gt;/&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;/pipelines&lt;/code&gt; and the &lt;em&gt;Badge Image URL&lt;/em&gt; is: &lt;code&gt;https://gitlab.com/&amp;lt;YOUR-GITLAB-USERNAME&amp;gt;/&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;/badges/master/pipeline.svg&lt;/code&gt;.</source>
          <target state="translated">在&amp;ldquo;&lt;em&gt;常规&amp;rdquo;&lt;/em&gt;设置的&amp;ldquo;&lt;em&gt;徽章&amp;rdquo;&lt;/em&gt;部分中，我们将首先添加发布徽章。链接为： &lt;code&gt;https://gitlab.com/&amp;lt;YOUR-GITLAB-USERNAME&amp;gt;/&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;/pipelines&lt;/code&gt; : //gitlab.com/ &amp;lt; &lt;em&gt;YOUR-GITLAB-USERNAME&amp;gt;/&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;/pipelines，徽章图像URL&lt;/em&gt;为： &lt;code&gt;https://gitlab.com/&amp;lt;YOUR-GITLAB-USERNAME&amp;gt;/&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;/badges/master/pipeline.svg&lt;/code&gt; : //gitlab.com/ &amp;lt; &lt;em&gt;YOUR-GITLAB-USERNAME &lt;/em&gt;&amp;gt; / &amp;lt;您的存储库名称&amp;gt; /badges/master/pipeline.svg。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="df7797ad4b749b9838697b2454d45f1289a82261" translate="yes" xml:space="preserve">
          <source>In the IPv4 family, loopback addresses are all addresses in the subnet &lt;code&gt;127.0.0.0/24&lt;/code&gt;. In IPv6 &lt;code&gt;::1&lt;/code&gt; is the loopback address.</source>
          <target state="translated">在IPv4家族中，回送地址是子网 &lt;code&gt;127.0.0.0/24&lt;/code&gt; 中的所有地址。在IPv6中， &lt;code&gt;::1&lt;/code&gt; 是回送地址。</target>
        </trans-unit>
        <trans-unit id="5571ff15655a22733fe5015d3a6e2b504b7002f6" translate="yes" xml:space="preserve">
          <source>In the above case, &lt;code&gt;@lucky_number&lt;/code&gt; will be inferred to be &lt;code&gt;Int32 | Nil&lt;/code&gt;: &lt;code&gt;Int32&lt;/code&gt; because 42 was assigned to it, and &lt;code&gt;Nil&lt;/code&gt; because it wasn't assigned in all of the class' initialize methods.</source>
          <target state="translated">在上述情况下， &lt;code&gt;@lucky_number&lt;/code&gt; 将被推断为 &lt;code&gt;Int32 | Nil&lt;/code&gt; ： &lt;code&gt;Int32&lt;/code&gt; ,因为分配了42，而 &lt;code&gt;Nil&lt;/code&gt; ,因为没有在所有类的initialize方法中分配。</target>
        </trans-unit>
        <trans-unit id="8efa502e913abbc79dcda531f8a0990c2a080c79" translate="yes" xml:space="preserve">
          <source>In the above case, the compiler will still infer &lt;code&gt;@name&lt;/code&gt; to be &lt;code&gt;String&lt;/code&gt;, and later will give a compile time error, when fully typing that method, saying that &lt;code&gt;Int32&lt;/code&gt; can't be assigned to a variable of type &lt;code&gt;String&lt;/code&gt;. Use an explicit type restriction if &lt;code&gt;@name&lt;/code&gt; isn't supposed to be a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">在上述情况下，编译器仍将 &lt;code&gt;@name&lt;/code&gt; 推断为 &lt;code&gt;String&lt;/code&gt; ，稍后在完全键入该方法时将给出编译时错误，表示无法将 &lt;code&gt;Int32&lt;/code&gt; 分配给 &lt;code&gt;String&lt;/code&gt; 类型的变量。如果 &lt;code&gt;@name&lt;/code&gt; 不应该为 &lt;code&gt;String&lt;/code&gt; ,则使用显式类型限制。</target>
        </trans-unit>
        <trans-unit id="48ed7572b4d153af5a9de9d9ab6e906482e280b1" translate="yes" xml:space="preserve">
          <source>In the above code we didn't have to specify the type arguments of &lt;code&gt;MyBox&lt;/code&gt;, the compiler inferred them following this process:</source>
          <target state="translated">在上面的代码中，我们不必指定 &lt;code&gt;MyBox&lt;/code&gt; 的类型参数，编译器可以通过以下过程推断出它们：</target>
        </trans-unit>
        <trans-unit id="a818a2bc286641ec8480d71d3ba85299f97abeb4" translate="yes" xml:space="preserve">
          <source>In the above code, &lt;code&gt;a&lt;/code&gt; is a union of &lt;code&gt;Int32 | String&lt;/code&gt;. If for some reason we are sure &lt;code&gt;a&lt;/code&gt; is an &lt;code&gt;Int32&lt;/code&gt; after the &lt;code&gt;if&lt;/code&gt;, we can force the compiler to treat it like one:</source>
          <target state="translated">在上面的代码中， &lt;code&gt;a&lt;/code&gt; 是 &lt;code&gt;Int32 | String&lt;/code&gt; 的联合。字串。如果由于某种原因，我们确定 &lt;code&gt;a&lt;/code&gt; 是在 &lt;code&gt;if&lt;/code&gt; 之后的 &lt;code&gt;Int32&lt;/code&gt; ，则可以强制编译器将其视为一个：</target>
        </trans-unit>
        <trans-unit id="3b85f665ae6c92e2a3db22fa56a75e055c972b04" translate="yes" xml:space="preserve">
          <source>In the above example &lt;code&gt;@lucky_number&lt;/code&gt; will be inferred to be &lt;code&gt;Int32 | Nil&lt;/code&gt;. This is very useful for lazily initialized variables.</source>
          <target state="translated">在上面的示例中， &lt;code&gt;@lucky_number&lt;/code&gt; 将被推断为 &lt;code&gt;Int32 | Nil&lt;/code&gt; 。这对于延迟初始化的变量非常有用。</target>
        </trans-unit>
        <trans-unit id="124ada8309146e0f4c168bc700ffa0393754b23e" translate="yes" xml:space="preserve">
          <source>In the above example the type of &lt;code&gt;&amp;amp;block&lt;/code&gt; wasn't specified: this just means that the captured block doesn't have arguments and doesn't return anything.</source>
          <target state="translated">在上面的示例中，未指定 &lt;code&gt;&amp;amp;block&lt;/code&gt; 的类型：这仅意味着捕获的块没有参数，也不返回任何内容。</target>
        </trans-unit>
        <trans-unit id="31a7642382c651738fddc7f605477138fd4fcf59" translate="yes" xml:space="preserve">
          <source>In the above example we used &lt;code&gt;nil&lt;/code&gt; just to communicate that the fiber ended. We can also use channels to communicate values between fibers:</source>
          <target state="translated">在上面的示例中，我们仅使用 &lt;code&gt;nil&lt;/code&gt; 来传达光纤已结束。我们还可以使用通道在光纤之间传递值：</target>
        </trans-unit>
        <trans-unit id="3d75092753e0f0d0e7a607d9814119db70549412" translate="yes" xml:space="preserve">
          <source>In the above example, &lt;code&gt;invoke&lt;/code&gt; receives a block. We can't pass &lt;code&gt;proc&lt;/code&gt; directly to it because &lt;code&gt;invoke&lt;/code&gt; doesn't receive regular arguments, just a block argument. We use &lt;code&gt;&amp;amp;&lt;/code&gt; to specify that we really want to pass &lt;code&gt;proc&lt;/code&gt; as the block argument. Otherwise:</source>
          <target state="translated">在上面的示例中， &lt;code&gt;invoke&lt;/code&gt; 接收一个块。我们无法将 &lt;code&gt;proc&lt;/code&gt; 直接传递给它，因为 &lt;code&gt;invoke&lt;/code&gt; 不会接收常规参数，而只会接收块参数。我们使用 &lt;code&gt;&amp;amp;&lt;/code&gt; 来指定我们确实要传递 &lt;code&gt;proc&lt;/code&gt; 作为block参数。除此以外：</target>
        </trans-unit>
        <trans-unit id="d3dbe0c0ea2d5e5cc5ba04c9b70d7366c234db59" translate="yes" xml:space="preserve">
          <source>In the above example, even though &lt;code&gt;x&lt;/code&gt; is a local variable, it was captured by the proc literal. In this case the compiler allocates &lt;code&gt;x&lt;/code&gt; on the heap and uses it as the context data of the proc to make it work, because normally local variables live in the stack and are gone after a method returns.</source>
          <target state="translated">在上面的示例中，即使 &lt;code&gt;x&lt;/code&gt; 是局部变量，它也被proc文字捕获。在这种情况下，编译器会在堆上分配 &lt;code&gt;x&lt;/code&gt; 并将其用作proc的上下文数据以使其正常工作，因为通常局部变量位于堆栈中，并且在方法返回后消失。</target>
        </trans-unit>
        <trans-unit id="a91f1497e93bf47302926f3080552ab1b7bead36" translate="yes" xml:space="preserve">
          <source>In the above example, it is as if we pasted the &lt;code&gt;size&lt;/code&gt; method from the module into the &lt;code&gt;Items&lt;/code&gt; class. The way this really works is by making each type have a list of ancestors, or parents. By default this list starts with the superclass. As modules are included they are &lt;strong&gt;prepended&lt;/strong&gt; to this list. When a method is not found in a type it is looked up in this list. When you invoke &lt;code&gt;super&lt;/code&gt;, the first type in this ancestors list is used.</source>
          <target state="translated">在上面的示例中，好像我们将来自模块的 &lt;code&gt;size&lt;/code&gt; 方法粘贴到 &lt;code&gt;Items&lt;/code&gt; 类中一样。真正的工作方式是使每种类型都有一个祖先或父母的列表。默认情况下，此列表以超类开头。由于包含模块，因此它们位于此列表的&lt;strong&gt;前面&lt;/strong&gt;。如果未在类型中找到方法，则在此列表中查找该方法。当您调用 &lt;code&gt;super&lt;/code&gt; 时，将使用此祖先列表中的第一个类型。</target>
        </trans-unit>
        <trans-unit id="87c6bc18e6c0d45245b059a944b3bf024ed56dae" translate="yes" xml:space="preserve">
          <source>In the above example, three indexed variables are declared, assigned values, and then printed, displaying their corresponding indices.</source>
          <target state="translated">在上面的例子中,声明了三个索引变量,分配了值,然后打印出来,显示了它们相应的索引。</target>
        </trans-unit>
        <trans-unit id="d122c215033c5da6e1628b04dc3f3c56c303fd64" translate="yes" xml:space="preserve">
          <source>In the above example, trying to invoke a method on the returned value will give a compile time error unless both &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; define that method:</source>
          <target state="translated">在上面的示例中，除非 &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; 都定义了该方法，否则尝试在返回的值上调用方法将产生编译时错误：</target>
        </trans-unit>
        <trans-unit id="51415e1d10034628d167c7a1b19bbc3f9d76ff9c" translate="yes" xml:space="preserve">
          <source>In the above example, we start a transaction simply by calling the method &lt;code&gt;Database#transaction&lt;/code&gt; (how we get the &lt;code&gt;database&lt;/code&gt; object is encapsulated in the method &lt;code&gt;get_bank_db&lt;/code&gt; and is out of the scope of this document). The &lt;code&gt;block&lt;/code&gt; is the body of the transaction. When the &lt;code&gt;block&lt;/code&gt; gets executed (without any error) then an &lt;strong&gt;implicit commit&lt;/strong&gt; is finally executed to persist the changes in the database. If an exception is raised by one of the operations, then an &lt;strong&gt;implicit rollback&lt;/strong&gt; is executed, bringing the database to the state before the transaction started.</source>
          <target state="translated">在以上示例中，我们仅通过调用方法 &lt;code&gt;Database#transaction&lt;/code&gt; （如何获取 &lt;code&gt;database&lt;/code&gt; 对象封装在方法 &lt;code&gt;get_bank_db&lt;/code&gt; 中，并且不在本文的讨论范围内）来启动事务。该 &lt;code&gt;block&lt;/code&gt; 是该交易的主体。当执行该 &lt;code&gt;block&lt;/code&gt; 时（没有任何错误），最后将执行&lt;strong&gt;隐式提交&lt;/strong&gt;以将更改保留在数据库中。如果操作之一引发异常，那么将执行&lt;strong&gt;隐式回滚&lt;/strong&gt;，使数据库处于事务开始之前的状态。</target>
        </trans-unit>
        <trans-unit id="fcef7a51e128206daec27d6a7e4f9aa89371cab0" translate="yes" xml:space="preserve">
          <source>In the case of flags enums, this invokes &lt;code&gt;&lt;a href=&quot;enum#includes?(other:self)-instance-method&quot;&gt;#includes?&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果是标志枚举，则调用 &lt;code&gt;&lt;a href=&quot;enum#includes?(other:self)-instance-method&quot;&gt;#includes?&lt;/a&gt;&lt;/code&gt; 。。</target>
        </trans-unit>
        <trans-unit id="2a7dd16b5b05f743bcfad7a9a5465ff9f7a7ddad" translate="yes" xml:space="preserve">
          <source>In the case of regular enums, this compares by equality (&lt;code&gt;&lt;a href=&quot;enum#==(other:self)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">在常规枚举的情况下，按相等进行比较（ &lt;code&gt;&lt;a href=&quot;enum#==(other:self)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="2bcd9f4e856948e8a3be2a8f5fb09b0eb29b464e" translate="yes" xml:space="preserve">
          <source>In the following example &lt;code&gt;@age&lt;/code&gt; is inferred to be &lt;code&gt;Int32&lt;/code&gt;.</source>
          <target state="translated">在下面的示例中， &lt;code&gt;@age&lt;/code&gt; 推断为 &lt;code&gt;Int32&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a5b0626fee0a18d632f9443ed431c26862140e0" translate="yes" xml:space="preserve">
          <source>In the following example &lt;code&gt;@name&lt;/code&gt; is inferred to be &lt;code&gt;String&lt;/code&gt; because the method argument &lt;code&gt;name&lt;/code&gt; has a type restriction of type &lt;code&gt;String&lt;/code&gt;, and that argument is assigned to &lt;code&gt;@name&lt;/code&gt;.</source>
          <target state="translated">在下面的示例中，将 &lt;code&gt;@name&lt;/code&gt; 推断为 &lt;code&gt;String&lt;/code&gt; ,因为方法参数 &lt;code&gt;name&lt;/code&gt; 具有类型 &lt;code&gt;String&lt;/code&gt; 的类型限制，并且该参数已分配给 &lt;code&gt;@name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7313dce0ee84b164076b56b4581f51dde5ec706" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;@address&lt;/code&gt; is inferred to be &lt;code&gt;Address&lt;/code&gt;, because the class method &lt;code&gt;Address.unknown&lt;/code&gt; has a return type restriction of &lt;code&gt;Address&lt;/code&gt;.</source>
          <target state="translated">在下面的示例中，将 &lt;code&gt;@address&lt;/code&gt; 推断为 &lt;code&gt;Address&lt;/code&gt; ，因为类方法 &lt;code&gt;Address.unknown&lt;/code&gt; 具有 &lt;code&gt;Address&lt;/code&gt; 的返回类型限制。</target>
        </trans-unit>
        <trans-unit id="a49029b9c2bcaa1c2e4dd77cea777c2e41fb65b4" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;@address&lt;/code&gt; is inferred to be &lt;code&gt;Address&lt;/code&gt;.</source>
          <target state="translated">在下面的示例中，@ &lt;code&gt;@address&lt;/code&gt; 推断为 &lt;code&gt;Address&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d3ca8f892e668e16502b6aaabe088f879f063a50" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;@name&lt;/code&gt; is inferred to be &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;@age&lt;/code&gt; to be &lt;code&gt;Int32&lt;/code&gt;.</source>
          <target state="translated">在以下示例中， &lt;code&gt;@name&lt;/code&gt; 被推断为 &lt;code&gt;String&lt;/code&gt; 和 &lt;code&gt;@age&lt;/code&gt; 要 &lt;code&gt;Int32&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9df5a618b3865cffd7845a48b17f694f112e9529" translate="yes" xml:space="preserve">
          <source>In the following example, because the default value of &lt;code&gt;name&lt;/code&gt; is a string literal, and it's later assigned to &lt;code&gt;@name&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt; will be added to the set of inferred types.</source>
          <target state="translated">在下面的示例中，由于 &lt;code&gt;name&lt;/code&gt; 的默认值是字符串文字，并且随后将其分配给 &lt;code&gt;@name&lt;/code&gt; ，因此 &lt;code&gt;String&lt;/code&gt; 将添加到推断类型的集合中。</target>
        </trans-unit>
        <trans-unit id="a0b5af7a3b99d804b6630e30b044d9107e3bfa8b" translate="yes" xml:space="preserve">
          <source>In the general case, when two types &lt;code&gt;T1&lt;/code&gt; and &lt;code&gt;T2&lt;/code&gt; are combined, the result is a union &lt;code&gt;T1 | T2&lt;/code&gt;. However, there are a few cases where the resulting type is a different type.</source>
          <target state="translated">通常，将两种类型的 &lt;code&gt;T1&lt;/code&gt; 和 &lt;code&gt;T2&lt;/code&gt; 合并时，结果为并集 &lt;code&gt;T1 | T2&lt;/code&gt; 。但是，在某些情况下，结果类型是其他类型。</target>
        </trans-unit>
        <trans-unit id="41bd7d3571e98f2aabd047cdca17487d0bc0458d" translate="yes" xml:space="preserve">
          <source>In the next example we will let the &lt;code&gt;database&lt;/code&gt; object &lt;em&gt;to manage the connections by itself&lt;/em&gt;, like this:</source>
          <target state="translated">在下一个示例中，我们将让 &lt;code&gt;database&lt;/code&gt; 对象&lt;em&gt;自己管理连接&lt;/em&gt;，如下所示：</target>
        </trans-unit>
        <trans-unit id="ce0574c23dbe80e313faea3ea12ecec94b14f2eb" translate="yes" xml:space="preserve">
          <source>In the next subsections, we are going to present 2 continuous integration tools: &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt; and &lt;a href=&quot;https://circleci.com/&quot;&gt;Circle CI&lt;/a&gt; and use them with a Crystal example application.</source>
          <target state="translated">在接下来的小节中，我们将介绍两个连续的集成工具：&lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt;和&lt;a href=&quot;https://circleci.com/&quot;&gt;Circle CI&lt;/a&gt;，并将它们与Crystal示例应用程序一起使用。</target>
        </trans-unit>
        <trans-unit id="68060a64d5ca9a24e2d3d6068708a62ef681950d" translate="yes" xml:space="preserve">
          <source>In the previous example &lt;code&gt;self&lt;/code&gt; is the same as writing &lt;code&gt;Person&lt;/code&gt;. But, in general, &lt;code&gt;self&lt;/code&gt; is the same as writing the type that will finally own that method, which, when modules are involved, becomes more useful.</source>
          <target state="translated">在前面的示例中， &lt;code&gt;self&lt;/code&gt; 与编写 &lt;code&gt;Person&lt;/code&gt; 相同。但是，通常， &lt;code&gt;self&lt;/code&gt; 与编写最终拥有该方法的类型相同，当涉及模块时，self会变得更加有用。</target>
        </trans-unit>
        <trans-unit id="9aa883f457852d8bf98bb91416c402f814326240" translate="yes" xml:space="preserve">
          <source>In this case the implementation can pre-compute the needed string bytesize and so it's a bit more performant than interpolating non-string values.</source>
          <target state="translated">在这种情况下,实现可以预先计算所需的字符串字节大小,因此它的性能比插值非字符串值要高一些。</target>
        </trans-unit>
        <trans-unit id="2f54375bbc65672792f9802cbb3ea684975e5eb3" translate="yes" xml:space="preserve">
          <source>In this case the implementation just does &lt;code&gt;char + value&lt;/code&gt;.</source>
          <target state="translated">在这种情况下，实现只执行 &lt;code&gt;char + value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="307c91e8acff393270feb3e4d95f94d3af69419a" translate="yes" xml:space="preserve">
          <source>In this case the implementation just does &lt;code&gt;value + char&lt;/code&gt;.</source>
          <target state="translated">在这种情况下，实现只执行 &lt;code&gt;value + char&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="81ef2a6c682e1903f787b9168f40e0c66a6a5535" translate="yes" xml:space="preserve">
          <source>In this case the implementation just returns the result of calling &lt;code&gt;value&lt;a href=&quot;string#to_s:String-instance-method&quot;&gt;.to_s&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">在这种情况下，实现仅返回调用 &lt;code&gt;value&lt;a href=&quot;string#to_s:String-instance-method&quot;&gt;.to_s&lt;/a&gt;&lt;/code&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="df8b0ef75fdb17df030881f8958c1f3bf6d87fa8" translate="yes" xml:space="preserve">
          <source>In this case the implementation just returns the same string.</source>
          <target state="translated">在这种情况下,实现只是返回相同的字符串。</target>
        </trans-unit>
        <trans-unit id="4386753354e6ccd734cdcefc2e3c9a530b2d1415" translate="yes" xml:space="preserve">
          <source>In this case the implementation will call &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;):self-class-method&quot;&gt;String.build&lt;/a&gt;&lt;/code&gt; with the given values.</source>
          <target state="translated">在这种情况下，实现将使用给定的值调用 &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;):self-class-method&quot;&gt;String.build&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="514e6fa2040cfbd7a473f42da2776658c65cb65d" translate="yes" xml:space="preserve">
          <source>In this case, leading whitespace is not included in the resulting string.</source>
          <target state="translated">在这种情况下,结果的字符串中不包含前导空格。</target>
        </trans-unit>
        <trans-unit id="7fd23cc1df5b309a251dda223a31fb375d169840" translate="yes" xml:space="preserve">
          <source>In this case, no runtime checks are done: pointers are unsafe and this type of casting is usually only needed in C bindings and low-level code.</source>
          <target state="translated">在这种情况下,不做运行时检查:指针是不安全的,这种类型的铸造通常只在C绑定和低级代码中需要。</target>
        </trans-unit>
        <trans-unit id="ecc6b01e1f0b852bb60481077333828a0cfca72f" translate="yes" xml:space="preserve">
          <source>In this case, the block receives a parameter that represents the parameter passed to the option.</source>
          <target state="translated">在这种情况下,块接收一个参数,该参数代表传递给选项的参数。</target>
        </trans-unit>
        <trans-unit id="58cd2acc0f451b15658845bd31b1dcd0ff9563dc" translate="yes" xml:space="preserve">
          <source>In this section we are going to present some configuration examples to see how CircleCI implements some &lt;a href=&quot;https://circleci.com/docs/2.0/concepts/&quot;&gt;continuous integration concepts&lt;/a&gt;.</source>
          <target state="translated">在本节中，我们将提供一些配置示例，以了解CircleCI如何实现一些&lt;a href=&quot;https://circleci.com/docs/2.0/concepts/&quot;&gt;连续集成概念&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ea2499982ba0ec5f98ffa6abd04f63800ca33fcb" translate="yes" xml:space="preserve">
          <source>In this section we are going to use &lt;a href=&quot;https://circleci.com/&quot;&gt;CircleCI&lt;/a&gt; as our continuous-integration service. In a &lt;a href=&quot;https://circleci.com/docs/2.0/about-circleci/#section=welcome&quot;&gt;few words&lt;/a&gt; CircleCI automates your software builds, tests, and deployments. It supports &lt;a href=&quot;https://circleci.com/docs/2.0/demo-apps/#section=welcome&quot;&gt;different programming languages&lt;/a&gt; and for our particular case, it supports the &lt;a href=&quot;https://circleci.com/docs/2.0/language-crystal/&quot;&gt;Crystal language&lt;/a&gt;.</source>
          <target state="translated">在本节中，我们将使用&lt;a href=&quot;https://circleci.com/&quot;&gt;CircleCI&lt;/a&gt;作为我们的持续集成服务。在&lt;a href=&quot;https://circleci.com/docs/2.0/about-circleci/#section=welcome&quot;&gt;几句话&lt;/a&gt;CircleCI自动化软件构建，测试和部署。它支持&lt;a href=&quot;https://circleci.com/docs/2.0/demo-apps/#section=welcome&quot;&gt;不同的编程语言&lt;/a&gt;，对于我们的特殊情况，它支持&lt;a href=&quot;https://circleci.com/docs/2.0/language-crystal/&quot;&gt;Crystal语言&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b268c510de8c14bbd5befa833dc45236404d1b0" translate="yes" xml:space="preserve">
          <source>In this section we are going to use &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt; as our continuous-integration service. Travis CI is &lt;a href=&quot;https://docs.travis-ci.com/user/tutorial/#more-than-running-tests&quot;&gt;mostly used&lt;/a&gt; for building and running tests for projects hosted at GitHub. It supports &lt;a href=&quot;https://docs.travis-ci.com/user/tutorial/#selecting-a-different-programming-language&quot;&gt;different programming languages&lt;/a&gt; and for our particular case, it supports the &lt;a href=&quot;https://docs.travis-ci.com/user/languages/crystal/&quot;&gt;Crystal language&lt;/a&gt;.</source>
          <target state="translated">在本节中，我们将使用&lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt;作为我们的持续集成服务。Travis CI&lt;a href=&quot;https://docs.travis-ci.com/user/tutorial/#more-than-running-tests&quot;&gt;主要用于&lt;/a&gt;为托管在GitHub上的项目构建和运行测试。它支持&lt;a href=&quot;https://docs.travis-ci.com/user/tutorial/#selecting-a-different-programming-language&quot;&gt;不同的编程语言&lt;/a&gt;，对于我们的特殊情况，它支持&lt;a href=&quot;https://docs.travis-ci.com/user/languages/crystal/&quot;&gt;Crystal语言&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c25af0a6ae35089113e88ba9d5bc7c35374c0be7" translate="yes" xml:space="preserve">
          <source>In this tutorial, we'll be making a Crystal library called &lt;em&gt;palindrome-example&lt;/em&gt;.</source>
          <target state="translated">在本教程中，我们将制作一个名为&lt;em&gt;palindrome-example&lt;/em&gt;的Crystal库。</target>
        </trans-unit>
        <trans-unit id="111a36bf8332a4163ec695bc63042943efe48fc1" translate="yes" xml:space="preserve">
          <source>In this way a block can be saved as a callback:</source>
          <target state="translated">这样一来,一个区块可以作为回调保存。</target>
        </trans-unit>
        <trans-unit id="5b7dad6455dba565c9aa636279b2b42b57e655e4" translate="yes" xml:space="preserve">
          <source>In this way a module can be used as a namespace:</source>
          <target state="translated">这样,一个模块就可以作为一个命名空间使用。</target>
        </trans-unit>
        <trans-unit id="40f3ad3b83ad9ee22a604db1b623b84c7bb74df7" translate="yes" xml:space="preserve">
          <source>In this way generic types are less tedious to work with.</source>
          <target state="translated">这样一来,通用类型的工作就不那么繁琐了。</target>
        </trans-unit>
        <trans-unit id="c7104d6ead642bbdcc16e9c61e87c72cd9a230e5" translate="yes" xml:space="preserve">
          <source>In this way we pass a pointer of &lt;code&gt;status_ptr&lt;/code&gt; to the function for it to fill its value.</source>
          <target state="translated">这样，我们将 &lt;code&gt;status_ptr&lt;/code&gt; 的指针传递给函数以使其填充其值。</target>
        </trans-unit>
        <trans-unit id="93de36436727da023b0275426c9ce5fcb0b002ae" translate="yes" xml:space="preserve">
          <source>In truncated division, given two integers x and y:</source>
          <target state="translated">在截断除法中,给定两个整数x和y。</target>
        </trans-unit>
        <trans-unit id="eb4753ffe674feb5c9e2bb5af076e1e8c15a4c5a" translate="yes" xml:space="preserve">
          <source>In type restrictions, generic type arguments and other places where a type is expected, you can use a shorter syntax, as explained in the &lt;a href=&quot;../type_grammar&quot;&gt;type grammar&lt;/a&gt;:</source>
          <target state="translated">在类型限制，通用类型参数和其他需要使用类型的地方，可以使用较短的语法，如&lt;a href=&quot;../type_grammar&quot;&gt;类型语法中所述&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="af93d6778e838a9db8bbbb9727cb630672bebd9b" translate="yes" xml:space="preserve">
          <source>In type restrictions, generic type arguments and other places where a type is expected, you can use a shorter syntax, as explained in the &lt;a href=&quot;../type_grammar&quot;&gt;type&lt;/a&gt;:</source>
          <target state="translated">在类型限制，通用类型参数和其他需要使用类型的地方，可以使用较短的语法，如&lt;a href=&quot;../type_grammar&quot;&gt;type&lt;/a&gt;中所述：</target>
        </trans-unit>
        <trans-unit id="81d1db0ef06261c321c2ce9f91cd5a1a34aca9de" translate="yes" xml:space="preserve">
          <source>In verbose mode prints the exception with its backtrace to the response, else a generic error message is returned to the client. Use the &lt;code&gt;&lt;a href=&quot;loghandler&quot;&gt;HTTP::LogHandler&lt;/a&gt;&lt;/code&gt; before this to log the exception on the server side.</source>
          <target state="translated">在详细模式下，将异常及其回溯记录打印到响应中，否则将向客户端返回通用错误消息。在此之前使用 &lt;code&gt;&lt;a href=&quot;loghandler&quot;&gt;HTTP::LogHandler&lt;/a&gt;&lt;/code&gt; 在服务器端记录异常。</target>
        </trans-unit>
        <trans-unit id="ef5582041da47fc0ca7c272b426adebeda6b6760" translate="yes" xml:space="preserve">
          <source>In verbose mode prints the exception with its backtrace to the response. Otherwise a generic error message is returned to the client.</source>
          <target state="translated">在verbose模式下,打印异常和它的回溯到响应。否则,将向客户端返回一个通用的错误信息。</target>
        </trans-unit>
        <trans-unit id="462205bf0a89cdc74a3011f60c8b25f7f515c495" translate="yes" xml:space="preserve">
          <source>In your terminal: &lt;code&gt;crystal init lib &amp;lt;YOUR-SHARD-NAME&amp;gt;&lt;/code&gt;</source>
          <target state="translated">在您的终端中： &lt;code&gt;crystal init lib &amp;lt;YOUR-SHARD-NAME&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb4f7828c46ac4c3d9f95d485eb13b699f135c25" translate="yes" xml:space="preserve">
          <source>Inappropriate ioctl for device</source>
          <target state="translated">设备的ioctl不合适。</target>
        </trans-unit>
        <trans-unit id="f9ea7c6310c5a06fef902644d25893b4d79e0078" translate="yes" xml:space="preserve">
          <source>Include the following line to allow configuration from environment variables.</source>
          <target state="translated">包括以下一行,允许通过环境变量进行配置。</target>
        </trans-unit>
        <trans-unit id="da1d01d8cbbdaafc58904654ab11eedc627a6259" translate="yes" xml:space="preserve">
          <source>Included Modules</source>
          <target state="translated">包括的模块</target>
        </trans-unit>
        <trans-unit id="21cab9a496932542bfe0aaa92041e8f1bf57af88" translate="yes" xml:space="preserve">
          <source>Includes the current position of the offset, the total size of the string, and five characters near the current position.</source>
          <target state="translated">包括偏移量的当前位置,字符串的总大小,以及当前位置附近的五个字符。</target>
        </trans-unit>
        <trans-unit id="26fe5bd7005257d25d665a6cd555f50ace814b67" translate="yes" xml:space="preserve">
          <source>Including &lt;code&gt;&lt;a href=&quot;serializable&quot;&gt;JSON::Serializable&lt;/a&gt;&lt;/code&gt; will create &lt;code&gt;&lt;a href=&quot;serializable#to_json(json:JSON::Builder)-instance-method&quot;&gt;#to_json&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;self.from_json&lt;/code&gt; methods on the current class, and a constructor which takes a &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;JSON::PullParser&lt;/a&gt;&lt;/code&gt;. By default, these methods serialize into a json object containing the value of every instance variable, the keys being the instance variable name. Most primitives and collections supported as instance variable values (string, integer, array, hash, etc.), along with objects which define to_json and a constructor taking a &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;JSON::PullParser&lt;/a&gt;&lt;/code&gt;. Union types are also supported, including unions with nil. If multiple types in a union parse correctly, it is undefined which one will be chosen.</source>
          <target state="translated">包括 &lt;code&gt;&lt;a href=&quot;serializable&quot;&gt;JSON::Serializable&lt;/a&gt;&lt;/code&gt; 将在当前类上创建 &lt;code&gt;&lt;a href=&quot;serializable#to_json(json:JSON::Builder)-instance-method&quot;&gt;#to_json&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;self.from_json&lt;/code&gt; 方法，以及一个采用 &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;JSON::PullParser&lt;/a&gt;&lt;/code&gt; 的构造函数。默认情况下，这些方法序列化为包含每个实例变量值的json对象，键为实例变量名称。大多数原语和集合都支持作为实例变量值（字符串，整数，数组，哈希等），以及定义to_json的对象和采用 &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;JSON::PullParser&lt;/a&gt;&lt;/code&gt; 的构造函数。还支持联合类型，包括nil联合。如果联合中的多个类型正确解析，则将选择哪个类型，这是不确定的。</target>
        </trans-unit>
        <trans-unit id="dddcc5b735eadc1af1b2a356449896a4f8df55ef" translate="yes" xml:space="preserve">
          <source>Including &lt;code&gt;&lt;a href=&quot;serializable&quot;&gt;YAML::Serializable&lt;/a&gt;&lt;/code&gt; will create &lt;code&gt;&lt;a href=&quot;serializable#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt;#to_yaml&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;self.from_yaml&lt;/code&gt; methods on the current class, and a constructor which takes a &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;YAML::PullParser&lt;/a&gt;&lt;/code&gt;. By default, these methods serialize into a yaml object containing the value of every instance variable, the keys being the instance variable name. Most primitives and collections supported as instance variable values (string, integer, array, hash, etc.), along with objects which define to_yaml and a constructor taking a &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;YAML::PullParser&lt;/a&gt;&lt;/code&gt;. Union types are also supported, including unions with nil. If multiple types in a union parse correctly, it is undefined which one will be chosen.</source>
          <target state="translated">包括 &lt;code&gt;&lt;a href=&quot;serializable&quot;&gt;YAML::Serializable&lt;/a&gt;&lt;/code&gt; 将在当前类上创建 &lt;code&gt;&lt;a href=&quot;serializable#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt;#to_yaml&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;self.from_yaml&lt;/code&gt; 方法，以及一个采用 &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;YAML::PullParser&lt;/a&gt;&lt;/code&gt; 的构造函数。默认情况下，这些方法序列化为包含每个实例变量值的yaml对象，键为实例变量名称。大多数原语和集合都支持作为实例变量值（字符串，整数，数组，哈希等），以及定义to_yaml的对象和采用 &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;YAML::PullParser&lt;/a&gt;&lt;/code&gt; 的构造函数。还支持联合类型，包括nil联合。如果联合中的多个类型正确解析，则将选择哪个类型，这是不确定的。</target>
        </trans-unit>
        <trans-unit id="ab464ce8f134afcd16e7505da7fc547187588711" translate="yes" xml:space="preserve">
          <source>Including types must provide an &lt;code&gt;&lt;a href=&quot;comparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; method, which compares the receiver against another object, returning:</source>
          <target state="translated">包含类型必须提供一个 &lt;code&gt;&lt;a href=&quot;comparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; 方法，该方法将接收方与另一个对象进行比较，并返回：</target>
        </trans-unit>
        <trans-unit id="43fae64fc81923761b8ca1bdb4a3828cf6c92bf1" translate="yes" xml:space="preserve">
          <source>Including types must provide an &lt;code&gt;&lt;a href=&quot;enumerable#each(&amp;amp;block:T-%3EUNDERSCORE)-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; method, which yields successive members of the collection.</source>
          <target state="translated">包含类型必须提供 &lt;code&gt;&lt;a href=&quot;enumerable#each(&amp;amp;block:T-%3EUNDERSCORE)-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; 方法，该方法可以产生集合的连续成员。</target>
        </trans-unit>
        <trans-unit id="29224445152eac3f72a08a9a33b8cba43f3d267a" translate="yes" xml:space="preserve">
          <source>Including types must provide an &lt;code&gt;&lt;a href=&quot;enumerable#each(&amp;amp;block:T-%3E_)-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; method, which yields successive members of the collection.</source>
          <target state="translated">包含类型必须提供一个 &lt;code&gt;&lt;a href=&quot;enumerable#each(&amp;amp;block:T-%3E_)-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; 方法，该方法可以产生集合的连续成员。</target>
        </trans-unit>
        <trans-unit id="1aa2788cdc8e7cfe875775088a98530e243656f1" translate="yes" xml:space="preserve">
          <source>Including types must provide an &lt;code&gt;&lt;a href=&quot;partialcomparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; method, which compares the receiver against another object, returning a negative number, &lt;code&gt;0&lt;/code&gt;, a positive number or &lt;code&gt;nil&lt;/code&gt; depending on whether the receiver is less than, equal to, greater than the other object, or no order can be established.</source>
          <target state="translated">包含类型必须提供一个 &lt;code&gt;&lt;a href=&quot;partialcomparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; 方法，该方法将接收方与另一个对象进行比较，根据接收方是否小于，等于或大于另一个对象，返回一个负数， &lt;code&gt;0&lt;/code&gt; ，一个正数或 &lt;code&gt;nil&lt;/code&gt; 。无法建立订单。</target>
        </trans-unit>
        <trans-unit id="6a14219f8778db41eddc5fe7f7e4da01bbbd1253" translate="yes" xml:space="preserve">
          <source>Increases the indentation for breakables inside the current group.</source>
          <target state="translated">增加当前组内易损件的缩进。</target>
        </trans-unit>
        <trans-unit id="7f3ff4432c3a065ae2f44aff2a4430dfb6e9133b" translate="yes" xml:space="preserve">
          <source>Index Accessors</source>
          <target state="translated">索引配件</target>
        </trans-unit>
        <trans-unit id="b5f75282b6cff2071f4955c844b900068b106883" translate="yes" xml:space="preserve">
          <source>Index accessors</source>
          <target state="translated">索引存取器</target>
        </trans-unit>
        <trans-unit id="d7bcf5defb30f792a057878148025a6c7e500c0d" translate="yes" xml:space="preserve">
          <source>Index accessors are used to query a value by index or key, for example an array item or map entry. The nilable variant &lt;code&gt;[]?&lt;/code&gt; is supposed to return &lt;code&gt;nil&lt;/code&gt; when the index is not found, while the non-nilable variant raises in that case. Implementations in the standard-library usually raise &lt;a href=&quot;https://crystal-lang.org/api/latest/KeyError.html&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://crystal-lang.org/api/latest/IndexError.html&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">索引访问器用于按索引或键查询值，例如数组项或映射条目。可变量 &lt;code&gt;[]?&lt;/code&gt; 当找不到索引时，应该返回 &lt;code&gt;nil&lt;/code&gt; ，而在这种情况下，non-nilable变体会提高。在标准库中的实现通常会引发&lt;a href=&quot;https://crystal-lang.org/api/latest/KeyError.html&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://crystal-lang.org/api/latest/IndexError.html&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d6dc6f3198e1ab65580dfebac35a07a14e7e38f6" translate="yes" xml:space="preserve">
          <source>Index: Crystal Programming Language</source>
          <target state="translated">索引。晶体编程语言</target>
        </trans-unit>
        <trans-unit id="383b324a3291b51f1e54ef9c0d763010fbc5e171" translate="yes" xml:space="preserve">
          <source>IndexError</source>
          <target state="translated">IndexError</target>
        </trans-unit>
        <trans-unit id="19de3299a3897fa0771a50182b11e1e8be821894" translate="yes" xml:space="preserve">
          <source>IndexError.new</source>
          <target state="translated">IndexError.new</target>
        </trans-unit>
        <trans-unit id="d8b6addd60debc77c2c9b03c90e8b626de36d170" translate="yes" xml:space="preserve">
          <source>Indexable</source>
          <target state="translated">Indexable</target>
        </trans-unit>
        <trans-unit id="c79cefe685814aa2f049a41f6ffc4e30d84b145c" translate="yes" xml:space="preserve">
          <source>Indexable#[]</source>
          <target state="translated">Indexable#[]</target>
        </trans-unit>
        <trans-unit id="df7babee602f0988fd98bb2f1d95a43bfac7caa9" translate="yes" xml:space="preserve">
          <source>Indexable#[]?</source>
          <target state="translated">Indexable#[]?</target>
        </trans-unit>
        <trans-unit id="05db1f01edfbc59515f166e88d4fd5b24f07c8e7" translate="yes" xml:space="preserve">
          <source>Indexable#dig</source>
          <target state="translated">Indexable#dig</target>
        </trans-unit>
        <trans-unit id="7af3718bc62736c3dfedac8bdc3d7da673715ce9" translate="yes" xml:space="preserve">
          <source>Indexable#dig?</source>
          <target state="translated">Indexable#dig?</target>
        </trans-unit>
        <trans-unit id="32b96fcd989302177599a91423fda4968c15acb5" translate="yes" xml:space="preserve">
          <source>Indexable#each</source>
          <target state="translated">Indexable#each</target>
        </trans-unit>
        <trans-unit id="7630382d1564302d2e2a8a2c487c20cb9b1b28b2" translate="yes" xml:space="preserve">
          <source>Indexable#hash</source>
          <target state="translated">Indexable#hash</target>
        </trans-unit>
        <trans-unit id="5723cc35dcf1bfe6bbb83dbe157b2d8b7b86b9a4" translate="yes" xml:space="preserve">
          <source>Indexable#join</source>
          <target state="translated">Indexable#join</target>
        </trans-unit>
        <trans-unit id="f1c21620b0bd8bdc033ef481e54e15c2d9fde8b0" translate="yes" xml:space="preserve">
          <source>Indexable#last</source>
          <target state="translated">Indexable#last</target>
        </trans-unit>
        <trans-unit id="4df56a7f87f1d712659a55c82d479f1c99939c9d" translate="yes" xml:space="preserve">
          <source>Indexable#size</source>
          <target state="translated">Indexable#size</target>
        </trans-unit>
        <trans-unit id="238e9f22f6c210dabfb3a95cc042e94e4ad66efe" translate="yes" xml:space="preserve">
          <source>Indexable#to_a</source>
          <target state="translated">Indexable#to_a</target>
        </trans-unit>
        <trans-unit id="ee0e2d3a57fd1cf7ddedb21fd52f835db33214e5" translate="yes" xml:space="preserve">
          <source>Indexable(T)</source>
          <target state="translated">Indexable(T)</target>
        </trans-unit>
        <trans-unit id="9d93b049bf4950dbec2b7d9c03737e03e1882b07" translate="yes" xml:space="preserve">
          <source>Indexable(Union(*T))</source>
          <target state="translated">Indexable(Union(*T))</target>
        </trans-unit>
        <trans-unit id="9951861c21df18489a5872209655d6f9039b5e2a" translate="yes" xml:space="preserve">
          <source>Indexing</source>
          <target state="translated">Indexing</target>
        </trans-unit>
        <trans-unit id="0416c4a1d681a8fdc755037de993bdd49fa79545" translate="yes" xml:space="preserve">
          <source>Indexing starts at &lt;code&gt;0&lt;/code&gt;. A negative index is assumed to be relative to the end of the container: &lt;code&gt;-1&lt;/code&gt; indicates the last element, &lt;code&gt;-2&lt;/code&gt; is the next to last element, and so on.</source>
          <target state="translated">索引从 &lt;code&gt;0&lt;/code&gt; 开始。假定负索引相对于容器的末尾： &lt;code&gt;-1&lt;/code&gt; 表示最后一个元素， &lt;code&gt;-2&lt;/code&gt; 表示最后一个元素，以此类推。</target>
        </trans-unit>
        <trans-unit id="ff4eafbd37e7902b944d838c2cde789f85ab1f7f" translate="yes" xml:space="preserve">
          <source>Indexing with a symbol that is only known at runtime will return a value whose type is the union of all the types in the named tuple, and might raise &lt;code&gt;&lt;a href=&quot;keyerror&quot;&gt;KeyError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用仅在运行时才知道的符号建立索引将返回一个值，该值的类型为命名元组中所有类型的并集，并可能引发 &lt;code&gt;&lt;a href=&quot;keyerror&quot;&gt;KeyError&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2caf89b3f9c705f50f90dbbb42966840fe3ba4c9" translate="yes" xml:space="preserve">
          <source>Indexing with an integer value that is only known at runtime will return a value whose type is the union of all the types in the tuple, and might raise &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用仅在运行时已知的整数值进行索引将返回一个值，该值的类型为元组中所有类型的并集，并可能引发 &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22ff70971870dbb59096c430e7b50b74e869044a" translate="yes" xml:space="preserve">
          <source>Indicates the call convention of a &lt;a href=&quot;../c_bindings/fun&quot;&gt;lib fun&lt;/a&gt;. For example:</source>
          <target state="translated">指示&lt;a href=&quot;../c_bindings/fun&quot;&gt;lib fun&lt;/a&gt;的调用约定。例如：</target>
        </trans-unit>
        <trans-unit id="fe205a81f47d8626e156d49fd481c57d8bb84c94" translate="yes" xml:space="preserve">
          <source>Indicates the possible hash algorithms for &lt;code&gt;&lt;a href=&quot;../openssl&quot;&gt;OpenSSL&lt;/a&gt;&lt;/code&gt; digest operations.</source>
          <target state="translated">指示 &lt;code&gt;&lt;a href=&quot;../openssl&quot;&gt;OpenSSL&lt;/a&gt;&lt;/code&gt; 摘要操作可能使用的哈希算法。</target>
        </trans-unit>
        <trans-unit id="c9b3891cb26f0afc8f7ff60705c05c1d74b7dcb4" translate="yes" xml:space="preserve">
          <source>Info that &lt;code&gt;describe&lt;/code&gt;, &lt;code&gt;context&lt;/code&gt; and &lt;code&gt;it&lt;/code&gt; all have in common.</source>
          <target state="translated">信息是 &lt;code&gt;describe&lt;/code&gt; ， &lt;code&gt;context&lt;/code&gt; 和 &lt;code&gt;it&lt;/code&gt; 的共同点。</target>
        </trans-unit>
        <trans-unit id="211f828d6f28bcc064ab08a81d3eea6343094a2a" translate="yes" xml:space="preserve">
          <source>Info#directory?</source>
          <target state="translated">Info#directory?</target>
        </trans-unit>
        <trans-unit id="555f919b4df3de254a8116361968e47b73856f7e" translate="yes" xml:space="preserve">
          <source>Info#file?</source>
          <target state="translated">Info#file?</target>
        </trans-unit>
        <trans-unit id="c19de402a865facf8738f953f5b3cea929ac9070" translate="yes" xml:space="preserve">
          <source>Info#flags</source>
          <target state="translated">Info#flags</target>
        </trans-unit>
        <trans-unit id="f74f97b45c200e1a01e4223bf1a54bf53d7e3800" translate="yes" xml:space="preserve">
          <source>Info#group</source>
          <target state="translated">Info#group</target>
        </trans-unit>
        <trans-unit id="d95b51d0127ae694191c0cee6c3d001768e04ca8" translate="yes" xml:space="preserve">
          <source>Info#group_id</source>
          <target state="translated">Info#group_id</target>
        </trans-unit>
        <trans-unit id="c557ef53f8bf8c3d8b352f500bfa9c605ff912d1" translate="yes" xml:space="preserve">
          <source>Info#modification_time</source>
          <target state="translated">Info#modification_time</target>
        </trans-unit>
        <trans-unit id="abbb4b0e1f640dfdfc8cb04ffa078cec69437063" translate="yes" xml:space="preserve">
          <source>Info#owner</source>
          <target state="translated">Info#owner</target>
        </trans-unit>
        <trans-unit id="7686462e432ff523e94a65c84705cc753f67de17" translate="yes" xml:space="preserve">
          <source>Info#owner_id</source>
          <target state="translated">Info#owner_id</target>
        </trans-unit>
        <trans-unit id="2cbcbed738d550b11fc7f09535150b157ff0bd78" translate="yes" xml:space="preserve">
          <source>Info#permissions</source>
          <target state="translated">Info#permissions</target>
        </trans-unit>
        <trans-unit id="bbfbc280aca1bd08275922fcf5683a9bff351752" translate="yes" xml:space="preserve">
          <source>Info#same_file?</source>
          <target state="translated">Info#same_file?</target>
        </trans-unit>
        <trans-unit id="8f76514c8d7427a911d17937ee22793264048637" translate="yes" xml:space="preserve">
          <source>Info#size</source>
          <target state="translated">Info#size</target>
        </trans-unit>
        <trans-unit id="1069ce11cd747c58056412e13320fc85bdd1c62b" translate="yes" xml:space="preserve">
          <source>Info#symlink?</source>
          <target state="translated">Info#symlink?</target>
        </trans-unit>
        <trans-unit id="131f0f2ef479d04720650444b3026d8bff5acb48" translate="yes" xml:space="preserve">
          <source>Info#type</source>
          <target state="translated">Info#type</target>
        </trans-unit>
        <trans-unit id="fd9e1e8fb8993dc0d9e9eeef8c93cc0189fa0b6d" translate="yes" xml:space="preserve">
          <source>Info.new</source>
          <target state="translated">Info.new</target>
        </trans-unit>
        <trans-unit id="3919f37f92b72d7d934c42faeef036bec6d07752" translate="yes" xml:space="preserve">
          <source>Informative</source>
          <target state="translated">Informative</target>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="5a9a718dd3cec7e2db3f95ddec3dcd166bff098e" translate="yes" xml:space="preserve">
          <source>Inheriting Documentation</source>
          <target state="translated">继承文件</target>
        </trans-unit>
        <trans-unit id="73aa49eaa4b825dc0db4ce8945a56681d937f402" translate="yes" xml:space="preserve">
          <source>Initializes a shard folder and creates a &lt;code&gt;shard.yml&lt;/code&gt;.</source>
          <target state="translated">初始化一个shard文件夹并创建一个 &lt;code&gt;shard.yml&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="079cd7451c2f33776e2d43a15299490325b9d402" translate="yes" xml:space="preserve">
          <source>Initializes an instance seeded from a system source.</source>
          <target state="translated">初始化一个来自系统源的实例。</target>
        </trans-unit>
        <trans-unit id="e3feee74bdbd58050136cbaaf33ab5797560f65d" translate="yes" xml:space="preserve">
          <source>Initializes an instance with the given &lt;em&gt;seed&lt;/em&gt; and &lt;em&gt;sequence&lt;/em&gt;.</source>
          <target state="translated">使用给定的&lt;em&gt;种子&lt;/em&gt;和&lt;em&gt;序列&lt;/em&gt;初始化实例。</target>
        </trans-unit>
        <trans-unit id="a02f1240730d62d775f24cef4c75c62f97f3d2a2" translate="yes" xml:space="preserve">
          <source>Initializes the GC</source>
          <target state="translated">初始化GC</target>
        </trans-unit>
        <trans-unit id="cc218c2e160f72aaf4bd66baecf606176dbdfee8" translate="yes" xml:space="preserve">
          <source>Initializes the MIME database loading contents from a file.</source>
          <target state="translated">初始化MIME数据库从文件中加载内容。</target>
        </trans-unit>
        <trans-unit id="6c2631e1bd6441c38f62d38f6c5e2eda71db2b45" translate="yes" xml:space="preserve">
          <source>Initializes the MIME database.</source>
          <target state="translated">初始化MIME数据库。</target>
        </trans-unit>
        <trans-unit id="67704b2a377775925196685fd1c04cfb5a7c685c" translate="yes" xml:space="preserve">
          <source>Initializes this handler to log to the given &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">初始化此处理程序以登录到给定的 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b568d47f2e244743b1fd7472db836ef9769c21f8" translate="yes" xml:space="preserve">
          <source>Input</source>
          <target state="translated">Input</target>
        </trans-unit>
        <trans-unit id="a6f41200b6d51a2b0a4e22a2949eb0f878c8d407" translate="yes" xml:space="preserve">
          <source>Input/output error</source>
          <target state="translated">输入/输出错误</target>
        </trans-unit>
        <trans-unit id="48a10ed30072d4eb54080a4b477ad2480832a17b" translate="yes" xml:space="preserve">
          <source>InputMode</source>
          <target state="translated">InputMode</target>
        </trans-unit>
        <trans-unit id="ea9cbaf61598ef8489f9448debe9d96258545178" translate="yes" xml:space="preserve">
          <source>InputMode#brkint?</source>
          <target state="translated">InputMode#brkint?</target>
        </trans-unit>
        <trans-unit id="f5b1e9eb8d41546c9c0bc12ee611b836d18b045d" translate="yes" xml:space="preserve">
          <source>InputMode#icrnl?</source>
          <target state="translated">InputMode#icrnl?</target>
        </trans-unit>
        <trans-unit id="7fe14c0807d2e2119a097ab2c65d048ff6c3d2e8" translate="yes" xml:space="preserve">
          <source>InputMode#ignbrk?</source>
          <target state="translated">InputMode#ignbrk?</target>
        </trans-unit>
        <trans-unit id="07bc9f299a0b4597d4e7d9fd3f01eb09387ed1ea" translate="yes" xml:space="preserve">
          <source>InputMode#igncr?</source>
          <target state="translated">InputMode#igncr?</target>
        </trans-unit>
        <trans-unit id="8e6342c1809c583298f0e791e4aa19c85c9665eb" translate="yes" xml:space="preserve">
          <source>InputMode#ignpar?</source>
          <target state="translated">InputMode#ignpar?</target>
        </trans-unit>
        <trans-unit id="c70c126727f7464b259080460db08e721d2acc50" translate="yes" xml:space="preserve">
          <source>InputMode#inlcr?</source>
          <target state="translated">InputMode#inlcr?</target>
        </trans-unit>
        <trans-unit id="63b9e5c743fc33b9576b58396eb4a7ce77b3a4e1" translate="yes" xml:space="preserve">
          <source>InputMode#inpck?</source>
          <target state="translated">InputMode#inpck?</target>
        </trans-unit>
        <trans-unit id="0b208d03058a4ba2584d967881a3dd1fc49fa09b" translate="yes" xml:space="preserve">
          <source>InputMode#istrip?</source>
          <target state="translated">InputMode#istrip?</target>
        </trans-unit>
        <trans-unit id="52f8cf6cc1e5d5fab19e1de801849f67a48bf5c0" translate="yes" xml:space="preserve">
          <source>InputMode#ixany?</source>
          <target state="translated">InputMode#ixany?</target>
        </trans-unit>
        <trans-unit id="4393acb3d3e23d05e8ab73b5e6e0d9d9df6bde5a" translate="yes" xml:space="preserve">
          <source>InputMode#ixoff?</source>
          <target state="translated">InputMode#ixoff?</target>
        </trans-unit>
        <trans-unit id="6047be95a8a78ddb1ec7a95ed048207f63dcdfef" translate="yes" xml:space="preserve">
          <source>InputMode#ixon?</source>
          <target state="translated">InputMode#ixon?</target>
        </trans-unit>
        <trans-unit id="53cd219e3fcfca10ea5a789e3faf2a8a0729e539" translate="yes" xml:space="preserve">
          <source>InputMode#none?</source>
          <target state="translated">InputMode#none?</target>
        </trans-unit>
        <trans-unit id="ea136f1aa1cdcfd24aae5df9fa61e76957e3edbd" translate="yes" xml:space="preserve">
          <source>InputMode#parmrk?</source>
          <target state="translated">InputMode#parmrk?</target>
        </trans-unit>
        <trans-unit id="1424ec1956956356c2428404a376c4ef7da02718" translate="yes" xml:space="preserve">
          <source>Insert &lt;em&gt;object&lt;/em&gt; before the element at &lt;em&gt;index&lt;/em&gt; and shifting successive elements, if any.</source>
          <target state="translated">将&lt;em&gt;对象&lt;/em&gt;插入&lt;em&gt;索引&lt;/em&gt;处的元素之前，并转移连续的元素（如果有）。</target>
        </trans-unit>
        <trans-unit id="641353f1acbc86a3146b793a84b36357f2a9c579" translate="yes" xml:space="preserve">
          <source>Insert &lt;em&gt;object&lt;/em&gt; before the element at &lt;em&gt;index&lt;/em&gt; and shifting successive elements, if any. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">将&lt;em&gt;对象&lt;/em&gt;插入&lt;em&gt;索引&lt;/em&gt;处的元素之前，并转移连续的元素（如果有）。返回 &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="669b482fd3443d0e4b555121d0836c3c77953668" translate="yes" xml:space="preserve">
          <source>Insert a new item before the item at &lt;em&gt;index&lt;/em&gt;.</source>
          <target state="translated">在&lt;em&gt;index&lt;/em&gt;处的项目之前插入一个新项目。</target>
        </trans-unit>
        <trans-unit id="6c30453bac2b40ed5569d54efb87eaafda2c1766" translate="yes" xml:space="preserve">
          <source>Insert a new item before the item at &lt;em&gt;index&lt;/em&gt;. Items to the right of this one will have their indices incremented.</source>
          <target state="translated">在&lt;em&gt;index&lt;/em&gt;处的项目之前插入一个新项目。此项目右边的项目将增加其索引。</target>
        </trans-unit>
        <trans-unit id="5dfcdce8e330cf70f09d335158de3344bf482eca" translate="yes" xml:space="preserve">
          <source>Insert the following markdown build badge below the description in your README.md: (be sure to replace &lt;code&gt;&amp;lt;YOUR-GITHUB-USERNAME&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/code&gt; accordingly)</source>
          <target state="translated">在README.md中的描述下方插入以下markdown构建标记：（请确保相应地替换 &lt;code&gt;&amp;lt;YOUR-GITHUB-USERNAME&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="79bfe8293c52165db712b7851720a089934100fb" translate="yes" xml:space="preserve">
          <source>Inside an &lt;code&gt;if&lt;/code&gt;'s branch the type of a variable is the one it got assigned in that branch, or the one that it had before the branch if it was not reassigned:</source>
          <target state="translated">在 &lt;code&gt;if&lt;/code&gt; 分支中，变量的类型是在该分支中分配的变量的类型，或者如果未重新分配，则该变量在分支之前的类型：</target>
        </trans-unit>
        <trans-unit id="48347e1765f4c25d196f4770862b167229fc6698" translate="yes" xml:space="preserve">
          <source>Inspection:</source>
          <target state="translated">Inspection:</target>
        </trans-unit>
        <trans-unit id="8794287335edc08cb0e7d9595e1c2caef264d686" translate="yes" xml:space="preserve">
          <source>Inspects &lt;em&gt;object&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; followed by a newline.</source>
          <target state="translated">检查&lt;em&gt;对象&lt;/em&gt;到 &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; 后跟换行符。</target>
        </trans-unit>
        <trans-unit id="8dd0e034a31cabd0dd6dfefaa78c95b41d73e8be" translate="yes" xml:space="preserve">
          <source>Inspects &lt;em&gt;object&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; followed by a newline. Returns &lt;em&gt;object&lt;/em&gt;.</source>
          <target state="translated">检查&lt;em&gt;对象&lt;/em&gt;到 &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; 后跟换行符。返回&lt;em&gt;object&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="82b9fbcf2cd1acbe12c532ec73e34d1049da7f3e" translate="yes" xml:space="preserve">
          <source>Inspects &lt;em&gt;objects&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, followed by a newline.</source>
          <target state="translated">检查&lt;em&gt;对象&lt;/em&gt;到 &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; ，后跟换行符。</target>
        </trans-unit>
        <trans-unit id="a9cccf2ce48c034cb15c334694329c222e943f12" translate="yes" xml:space="preserve">
          <source>Inspects &lt;em&gt;objects&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, followed by a newline. Returns &lt;em&gt;objects&lt;/em&gt;.</source>
          <target state="translated">检查&lt;em&gt;对象&lt;/em&gt;到 &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; ，后跟换行符。返回&lt;em&gt;对象&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b00edb8f50cfaab32f5ce41ac4dcdfa3ba22100a" translate="yes" xml:space="preserve">
          <source>Inspects each object in &lt;em&gt;objects&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, followed by a newline.</source>
          <target state="translated">检查中的每个对象&lt;em&gt;的对象&lt;/em&gt;到 &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; ，跟着一个新行。</target>
        </trans-unit>
        <trans-unit id="15165d65c21e0a5e31e84fa1d4957edb3cae8c6d" translate="yes" xml:space="preserve">
          <source>Inspects each object in &lt;em&gt;objects&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, followed by a newline. Returns &lt;em&gt;objects&lt;/em&gt;.</source>
          <target state="translated">检查中的每个对象&lt;em&gt;的对象&lt;/em&gt;到 &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; ，跟着一个新行。返回&lt;em&gt;对象&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2466e6c5910e6bf74df9f4f82d2332639c23c538" translate="yes" xml:space="preserve">
          <source>Inspects this path to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">检查这条通往&lt;em&gt;io的&lt;/em&gt;道路。</target>
        </trans-unit>
        <trans-unit id="e0e303864f9f232d82cce74c2cbb80e5eb573e15" translate="yes" xml:space="preserve">
          <source>Inspired by &lt;a href=&quot;http://rspec.info/&quot;&gt;Rspec&lt;/a&gt;, it includes a domain specific language (DSL) that allows you to write examples in a way similar to plain english.</source>
          <target state="translated">受&lt;a href=&quot;http://rspec.info/&quot;&gt;Rspec的&lt;/a&gt;启发，它包括一种域特定语言（DSL），使您可以以类似于普通英语的方式编写示例。</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">Install</target>
        </trans-unit>
        <trans-unit id="026a10d33b98158b23aa84e14be00d4a7535b2fb" translate="yes" xml:space="preserve">
          <source>Install Package</source>
          <target state="translated">安装包</target>
        </trans-unit>
        <trans-unit id="a5c63974011e21c8a3854d4404ae4c847f419401" translate="yes" xml:space="preserve">
          <source>Install Port</source>
          <target state="translated">安装端口</target>
        </trans-unit>
        <trans-unit id="ecb676bc1d527af4bf1d1e60b4dbcf29dff3682b" translate="yes" xml:space="preserve">
          <source>Install binary dependencies</source>
          <target state="translated">安装二进制依赖关系</target>
        </trans-unit>
        <trans-unit id="64a770b567d94e5af17d2b38d7fc2930e48e28d6" translate="yes" xml:space="preserve">
          <source>Install shards packages</source>
          <target state="translated">安装shards软件包</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="93299bfceb205192aa4908d74e536163a4f60bd1" translate="yes" xml:space="preserve">
          <source>Installation: From a tar.gz</source>
          <target state="translated">安装。从tar.gz文件中</target>
        </trans-unit>
        <trans-unit id="31ea18871fd5bb7a83a164ee47bbaabaf473e8fb" translate="yes" xml:space="preserve">
          <source>Installation: From sources</source>
          <target state="translated">安装。来源:</target>
        </trans-unit>
        <trans-unit id="ae3b811b3acefcd0e3787d7d0a5b02df7721ec9c" translate="yes" xml:space="preserve">
          <source>Installation: On Alpine Linux</source>
          <target state="translated">安装。在Alpine Linux上</target>
        </trans-unit>
        <trans-unit id="84621496885b87cf395a2b7fc3f5c707aed94b60" translate="yes" xml:space="preserve">
          <source>Installation: On Arch Linux</source>
          <target state="translated">安装。在Arch Linux上</target>
        </trans-unit>
        <trans-unit id="14b146755e997311386480108139d6e7d3e3ceff" translate="yes" xml:space="preserve">
          <source>Installation: On Debian and Ubuntu</source>
          <target state="translated">安装。在Debian和Ubuntu上</target>
        </trans-unit>
        <trans-unit id="02843fcfc91d316cb947685c4aad3101d85c0fe5" translate="yes" xml:space="preserve">
          <source>Installation: On FreeBSD</source>
          <target state="translated">安装。FreeBSD上</target>
        </trans-unit>
        <trans-unit id="2b6827c56ecea00ab98538167517bde8641b4f53" translate="yes" xml:space="preserve">
          <source>Installation: On Gentoo Linux</source>
          <target state="translated">安装。安装:在Gentoo Linux上</target>
        </trans-unit>
        <trans-unit id="ca83100367cd95451e2cdb129b748615d4e17ea5" translate="yes" xml:space="preserve">
          <source>Installation: On Linux using Linuxbrew</source>
          <target state="translated">安装:在Linux上使用Linuxbrew。在Linux上使用Linuxbrew</target>
        </trans-unit>
        <trans-unit id="aac7c0cdba93b9e7f203765ffffb49b1b2eb9b3c" translate="yes" xml:space="preserve">
          <source>Installation: On Linux using Snap</source>
          <target state="translated">安装。在Linux上使用Snap</target>
        </trans-unit>
        <trans-unit id="5b8307a549d8a17ee93295fb77c3ef8198ede888" translate="yes" xml:space="preserve">
          <source>Installation: On OpenSUSE</source>
          <target state="translated">安装。在OpenSUSE上</target>
        </trans-unit>
        <trans-unit id="977a24e5a96063c232ee2bf38a77622f04ae8831" translate="yes" xml:space="preserve">
          <source>Installation: On RedHat and CentOS</source>
          <target state="translated">安装。在RedHat和CentOS上</target>
        </trans-unit>
        <trans-unit id="b9c9b45d7f36185f544fe4b2106ed0ca8a1af51d" translate="yes" xml:space="preserve">
          <source>Installation: On macOS using Homebrew</source>
          <target state="translated">安装方法:在macOS上使用Homebrew。在macOS上使用Homebrew</target>
        </trans-unit>
        <trans-unit id="2a989538e88bba588f01f4b9d2d7226c2e1adeb5" translate="yes" xml:space="preserve">
          <source>Installation: Windows Subsystem for Linux</source>
          <target state="translated">安装。Windows Subsystem for Linux</target>
        </trans-unit>
        <trans-unit id="e38432618ce4d39079fc324e614d4d92a2815160" translate="yes" xml:space="preserve">
          <source>Installing</source>
          <target state="translated">Installing</target>
        </trans-unit>
        <trans-unit id="2b75e0ebdeabdcdf1e0dd0005d36c6d27323a6c3" translate="yes" xml:space="preserve">
          <source>Installing binary dependencies</source>
          <target state="translated">安装二进制依赖关系</target>
        </trans-unit>
        <trans-unit id="560516499f15e40cd28d0ae743e0a74d14626dde" translate="yes" xml:space="preserve">
          <source>Installing shards packages</source>
          <target state="translated">安装shards软件包</target>
        </trans-unit>
        <trans-unit id="c0d0c0b27a5607a7a13affdba23a3f796628e001" translate="yes" xml:space="preserve">
          <source>Installing the shard</source>
          <target state="translated">安装碎片</target>
        </trans-unit>
        <trans-unit id="29920c295454d02c33c602160a9238a8af27099a" translate="yes" xml:space="preserve">
          <source>Instance Method Detail</source>
          <target state="translated">实例方法详情</target>
        </trans-unit>
        <trans-unit id="95ec3ffd8dc53a1d99d736ad3933ef452d4ad2e9" translate="yes" xml:space="preserve">
          <source>Instance Method Summary</source>
          <target state="translated">实例方法总结</target>
        </trans-unit>
        <trans-unit id="7e668b525c2f1215b004e6856abf44b1d38d3384" translate="yes" xml:space="preserve">
          <source>Instance and class methods</source>
          <target state="translated">实例和类方法</target>
        </trans-unit>
        <trans-unit id="625ad1613b53ad4be00259e6cb712cf9bd80fe98" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;../../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="779c3bbdafc342613b070ca3ebd350a5ca45a805" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../../../object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;../../../object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="495386fae8728da628e10ba3a1f4ca8927dad678" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../../../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;../../../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="e271f85116eb91729a7311f905499fc67d59a9b0" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../../exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;../../exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="dc54bcc13746373ebce84768c3360d5b952bacf5" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="7de513b46c2d258a82234d55cf0fed4f87b22a46" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../../object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;../../object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="8b5ad0022bca9c10a82bd2fffc0f4a588e8ee18f" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;../../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="b955ebe67b3313bb658feacd5e9b8966d8a36a03" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../abi&quot;&gt;LLVM::ABI&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;../abi&quot;&gt;LLVM::ABI&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="76df7a846356daf25378fd3f2a31782fbbc75775" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../accesstoken&quot;&gt;OAuth2::AccessToken&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;../accesstoken&quot;&gt;OAuth2::AccessToken&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="d472670d7e231672d035a16e5399209ac632bd01" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../context&quot;&gt;OpenSSL::SSL::Context&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;../context&quot;&gt;OpenSSL::SSL::Context&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="cd2090310805dfad76c53e0c4e51617b1fea7eef" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../digest/base&quot;&gt;Digest::Base&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;../digest/base&quot;&gt;Digest::Base&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="a72b5063f6bf807b810b9d813c086cce18ab649a" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../error&quot;&gt;OpenSSL::Error&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;../error&quot;&gt;OpenSSL::Error&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="d3193f43864977bd8a126845f1b32d028e2da268" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;../exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="d9a21025e00e8a6bfa6fd188fdf7e00e88d25999" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="af43034df2a7db3fa5db0296cf9604db98eff03e" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;../object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="f78d09fd15ef4505c7df21c705ff186d5d5896f4" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="595723d4cdf205de378899f2c04433910d60b241" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../socket&quot;&gt;OpenSSL::SSL::Socket&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;../socket&quot;&gt;OpenSSL::SSL::Socket&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="902a04107a176049bcdb5a6a6821bdbd93838591" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;astnode&quot;&gt;Crystal::Macros::ASTNode&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;astnode&quot;&gt;Crystal::Macros::ASTNode&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="fb7a5d13bab606ab9a668bf9fadeceb8f6be741d" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;backend&quot;&gt;Log::Backend&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;backend&quot;&gt;Log::Backend&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="c6b53340d25780935441e456b7fefb921af56c15" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;base&quot;&gt;Digest::Base&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;base&quot;&gt;Digest::Base&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="f12f325e35239d1d4ac651641d8eba69d54b03ba" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;binaryop&quot;&gt;Crystal::Macros::BinaryOp&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;binaryop&quot;&gt;Crystal::Macros::BinaryOp&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="37b484e4bd032119ce29dff68cfc389ba2eefd83" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;context&quot;&gt;Spec::Context&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;context&quot;&gt;Spec::Context&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="c0ef9c86432b4eaf19770de2e4b10f425cf806e4" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;error&quot;&gt;File::Error&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;error&quot;&gt;File::Error&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="8adcab79aad39ccd4ad1fa22b8031281765f9876" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="58889bc238f3f9243128c75d384acd6d96355aa7" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="bd639e78d199d451a642528d5f1b499810aab90c" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;io/filedescriptor&quot;&gt;IO::FileDescriptor&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;io/filedescriptor&quot;&gt;IO::FileDescriptor&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="549f4aa52a2f99158653e49dcd2be2a4ceb74955" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;ipsocket&quot;&gt;IPSocket&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;ipsocket&quot;&gt;IPSocket&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="922b7ec525116ba2b6f9744547ce8137d96b6e17" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="504f9b81ae5086cf927f532a9913f5682856629d" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="e9e34b3b2e38bd897a768504f5edb3a3a25bdef9" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;parseexception&quot;&gt;JSON::ParseException&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;parseexception&quot;&gt;JSON::ParseException&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="03d5dfbac341191fc15752140322f90293951972" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="f91efe764607d03b3ef4de866bc882e5c4508b04" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;socket&quot;&gt;Socket&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;socket&quot;&gt;Socket&lt;/a&gt;&lt;/code&gt; 类继承的实例方法</target>
        </trans-unit>
        <trans-unit id="f6654b3bf70076fb6ae098c1603c233a43588c29" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;tcpsocket&quot;&gt;TCPSocket&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;tcpsocket&quot;&gt;TCPSocket&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="13d063324b14232dbcf382db359e6a5647c6eb12" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;unaryexpression&quot;&gt;Crystal::Macros::UnaryExpression&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;unaryexpression&quot;&gt;Crystal::Macros::UnaryExpression&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="a1b614fe3d8b250a81a9c6fc997ac78b5b335d27" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;unixsocket&quot;&gt;UNIXSocket&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;unixsocket&quot;&gt;UNIXSocket&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="2b07d582b15cc6bc994385bc8a839f48b8cc2163" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;x86&quot;&gt;LLVM::ABI::X86&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从类 &lt;code&gt;&lt;a href=&quot;x86&quot;&gt;LLVM::ABI::X86&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="07a8acace28ea36366dfd45a2a0aba0756fc0332" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../../../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;../../../enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../../../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;../../../enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;../../../enum&quot;&gt;Enum&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="a2ed540ea434b65c8276d053321d121427881bb0" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../../../io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../../../io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="8e234cd72db496d0e0b23779af06cbe1e7606679" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;../../enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;../../enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;../../enum&quot;&gt;Enum&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="2edd9ce4b71b7fa0fb68833358f0d39aa4d9124c" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;node&quot;&gt;YAML :: Nodes :: Node&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="19f077ce0ba9a600a23cdef15a484fd65e7aded1" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../../io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../../io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="1ce20134551a90d41c9dd992163ea84e49f82e5a" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../../socket/server&quot;&gt;Socket::Server&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../../socket/server&quot;&gt;Socket::Server&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="176de805f58e1ddeda315cfce34628cbd1025577" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../../systemerror&quot;&gt;SystemError&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../../systemerror&quot;&gt;SystemError&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="d11548c1616a9cad4dd53b0f119d6c7682dfe51a" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="8b2d4d04ef9f939712716d72d20f5a4a02b9514f" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;prerelease&quot;&gt;SemanticVersion::Prerelease&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;prerelease&quot;&gt;SemanticVersion::Prerelease&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;prerelease&quot;&gt;SemanticVersion :: Prerelease&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="ce89da18135892a4e78b6a6501866f08e2bed7b3" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;span&quot;&gt;Time::Span&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;span&quot;&gt;Time::Span&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;span&quot;&gt;Time :: Span&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="b3f482136cdbc0a4a7962b03e6b2d57246dfa835" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;../char&quot;&gt;Char&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;../char&quot;&gt;Char&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;../char&quot;&gt;Char&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="5dcea3a3bac179e9b675b41bdbc8f91ce9a48620" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;basicblock&quot;&gt;LLVM::BasicBlock&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;basicblock&quot;&gt;LLVM::BasicBlock&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;basicblock&quot;&gt;LLVM :: BasicBlock&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="34b0ddb90a6b4232644256bc68eb8ab60f31da70" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;cookie&quot;&gt;HTTP::Cookie&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;cookie&quot;&gt;HTTP::Cookie&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;cookie&quot;&gt;HTTP :: Cookie&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="54b0adde0c8a9ecc78cc9749536aa4abdde688d8" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;node&quot;&gt;XML::Node&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;node&quot;&gt;XML::Node&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;node&quot;&gt;XML :: Node&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="843f8b20707d49e0489d41c7af1b8a524329a67c" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;value&quot;&gt;LLVM :: Value&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="bea7f333ade27e3b4fe49b6f15b7131f0f3863f8" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;)})&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;)})&lt;/code&gt; （{ &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;，&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;（&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt; }}）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="64138db181683ef3f4efc8d0ff8f8b75a0f09105" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;})&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;})&lt;/code&gt; （{ &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;，&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt; }）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="caf4af3a1c2edb69d9acb5d9768a8fd824ae5a6b" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../symbol&quot;&gt;Symbol&lt;/a&gt;, &lt;a href=&quot;metadata/value&quot;&gt;Log::Metadata::Value&lt;/a&gt;})&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../symbol&quot;&gt;Symbol&lt;/a&gt;, &lt;a href=&quot;metadata/value&quot;&gt;Log::Metadata::Value&lt;/a&gt;})&lt;/code&gt; （{ &lt;a href=&quot;../symbol&quot;&gt;Symbol&lt;/a&gt;，&lt;a href=&quot;metadata/value&quot;&gt;Log :: Metadata :: Value&lt;/a&gt; }继承的实例方法</target>
        </trans-unit>
        <trans-unit id="5fed9eeaedfce68f0bc3a21a257e72335f0d02f3" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../fileinfo&quot;&gt;Compress::Zip::FileInfo&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../fileinfo&quot;&gt;Compress::Zip::FileInfo&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="ec9ee768bf2e0e991886622325536634609e0fea" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../fileinfo&quot;&gt;Zip::FileInfo&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../fileinfo&quot;&gt;Zip::FileInfo&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="7f43d471a0ee157f5c9e550cd5f6ae083e9db6f8" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../indexable&quot;&gt;Indexable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../indexable&quot;&gt;Indexable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;value&quot;&gt;LLVM :: Value&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="2508026a5b4ad63a2b63d43b5b58182478a99593" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="382d6b3d67cbde7a87dcfe9b892d553b1e0179cf" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../iterable&quot;&gt;Iterable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../iterable&quot;&gt;Iterable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;value&quot;&gt;LLVM :: Value&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="1697a7f62c96941f72b1ae1a1e51efed46b5ad11" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="ada2e6d483a5a9aa8bd26bdd22069162436fbf73" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../systemerror&quot;&gt;SystemError&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;../systemerror&quot;&gt;SystemError&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="6104b557931f550106bfaef0ba7b87b0618d1950" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="763447b55c2378aa9bb7188392e64701e6c87db7" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;colorize/objectextensions&quot;&gt;Colorize::ObjectExtensions&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;colorize/objectextensions&quot;&gt;Colorize::ObjectExtensions&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="a3c09eab66b8fcbc1296c2a743be2313ed71fe6a" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;array&quot;&gt;Array(T)&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;array&quot;&gt;Array(T)&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;array&quot;&gt;Array（T）&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="60696d81504a878b276cd154e86985cf39592652" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigdecimal&quot;&gt;BigDecimal&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigdecimal&quot;&gt;BigDecimal&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;bigdecimal&quot;&gt;BigDecimal&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="f693e93b23fb60614fae8915331e9a46c9767a9b" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigfloat&quot;&gt;BigFloat&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigfloat&quot;&gt;BigFloat&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;bigfloat&quot;&gt;BigFloat&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="f59d7437e715d1fd88063417f5ff8a57e5b5a5e6" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigint&quot;&gt;BigInt&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigint&quot;&gt;BigInt&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;bigint&quot;&gt;BigInt&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="966e8f4216ed7f57ddc41a054effb5be8b30b319" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigrational&quot;&gt;BigRational&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigrational&quot;&gt;BigRational&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;bigrational&quot;&gt;BigRational&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="172ab3d22a92c4c6cb60a69518c1cd873998bb45" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;char&quot;&gt;Char&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;char&quot;&gt;Char&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;char&quot;&gt;Char&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="16670e88ef001e42b5e4866e2e9cc7884cdfc82d" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="69b4ab7d9c3aa6666b642abef9abb0fcb4397dcb" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="d0093445e65ceb4ed874ac618ce508121d00a863" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="f0c34bc6bdc658dc7efe4410dd9b8631c04047a8" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;int128&quot;&gt;Int128&lt;/a&gt; | &lt;a href=&quot;int16&quot;&gt;Int16&lt;/a&gt; | &lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt; | &lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt; | &lt;a href=&quot;int8&quot;&gt;Int8&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;int128&quot;&gt;Int128&lt;/a&gt; | &lt;a href=&quot;int16&quot;&gt;Int16&lt;/a&gt; | &lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt; | &lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt; | &lt;a href=&quot;int8&quot;&gt;Int8&lt;/a&gt;)&lt;/code&gt; 继承的实例方法（&lt;a href=&quot;int128&quot;&gt;Int128&lt;/a&gt; | &lt;a href=&quot;int16&quot;&gt;Int16&lt;/a&gt; | &lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt; | &lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt; | &lt;a href=&quot;int8&quot;&gt;Int8&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="918a356c1cd630c5ccfeeee027da8b326301528f" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="6904031db5a94884fd6ce9cc3d8a48bdec9b103a" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;path&quot;&gt;Path&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;path&quot;&gt;Path&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;path&quot;&gt;Path&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="df2d69a3f1c794c9e047c3ea546e2bf6a053de32" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;pointer&quot;&gt;Pointer(T)&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;pointer&quot;&gt;Pointer(T)&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;pointer&quot;&gt;Pointer（T）&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="b87287803c89561dddaea6106b0f4e44ea3e06ce" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;semanticversion&quot;&gt;SemanticVersion&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;semanticversion&quot;&gt;SemanticVersion&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;semanticversion&quot;&gt;SemanticVersion&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="f19feadd87570b6ce794943af3a82cf30bc03a83" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;slice&quot;&gt;Slice(T)&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;slice&quot;&gt;Slice(T)&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;slice&quot;&gt;Slice（T）&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="58896b1fca39ca27d30559b2e1b530b6a07a245e" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="7edb5b38a0e022b285be0ba79123f36dc1285703" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="4c7204115b26fd9dcabbccaefd9ebb2981b576f4" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="ab44b2220d4fac863ac3c629acdfaf6ab9c422a8" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;tuple&quot;&gt;Tuple(*T)&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;tuple&quot;&gt;Tuple(*T)&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;tuple&quot;&gt;Tuple（* T）&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="adcb6edfc39d721d5978a401737c4f2823827ec8" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;uint128&quot;&gt;UInt128&lt;/a&gt; | &lt;a href=&quot;uint16&quot;&gt;UInt16&lt;/a&gt; | &lt;a href=&quot;uint32&quot;&gt;UInt32&lt;/a&gt; | &lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt; | &lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;uint128&quot;&gt;UInt128&lt;/a&gt; | &lt;a href=&quot;uint16&quot;&gt;UInt16&lt;/a&gt; | &lt;a href=&quot;uint32&quot;&gt;UInt32&lt;/a&gt; | &lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt; | &lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;uint128&quot;&gt;UInt128&lt;/a&gt; | &lt;a href=&quot;uint16&quot;&gt;UInt16&lt;/a&gt; | &lt;a href=&quot;uint32&quot;&gt;UInt32&lt;/a&gt; | &lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt; | &lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="52592ff5c9270879c50529d8f34ded1452fbbf46" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;configuration&quot;&gt;Log::Configuration&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;configuration&quot;&gt;Log::Configuration&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="a2a15a713d0246dc5a56f0fb318bee674782aeeb" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;digestbase&quot;&gt;OpenSSL::DigestBase&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;digestbase&quot;&gt;OpenSSL::DigestBase&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="01b5447df39ccb2a1331ad2caa39b6e2e8040fa3" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable(B)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable(B)&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="26801ea74bcce4fa50803d16f05a123f68ef282c" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable(T)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable(T)&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="8e190b9658c707564fdb7568e97ee93403bddb1e" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable(Union(*T))&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable(Union(*T))&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="6f1deafbd488c9638b0ef185b18965877f2e8e0f" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable({K, V})&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable({K, V})&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="a036f831ce2c4ef2871580edf77ea91edc24ea8d" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="bf6acbca2831b860e8a2d113f3b3863142cbe2c4" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="11126c8993ceb2fedad5b98f3569e326ed320495" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;evented&quot;&gt;IO::Evented&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;evented&quot;&gt;IO::Evented&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="d81707053aef30e815cdfcd70b77c517639ef03b" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;handler&quot;&gt;HTTP::Handler&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;handler&quot;&gt;HTTP::Handler&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="19c334872a4b8191880c20c5e11d5c466de3e189" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable(T)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable(T)&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="ed56f4609ce42aec0bd5f0f4388236f30d7f049f" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable(Union(*T))&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable(Union(*T))&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="e180e274d409a47b9c4de49b979ecdb6b772ddab" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;(&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;(&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="5e3629b4f97532cfc945381c519877a4e39ee4fb" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="2f785ecc4d0cbda96e34ea756b8cd693e9a78b56" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;io/evented&quot;&gt;IO::Evented&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;io/evented&quot;&gt;IO::Evented&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="6939fd73835944e54e120b7ef84da10198cfb61e" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;item&quot;&gt;Spec::Item&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;item&quot;&gt;Spec::Item&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="08c5b58c69f36ce6a880552e8a8f5a2399bee7bc" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable(B)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable(B)&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="387a0827abec2164a5c8e409494666a8f4d9f65b" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable(T)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable(T)&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="284ea93b21422c1844ad76bc2f946067818d25f3" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable(Union(*T))&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable(Union(*T))&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="9db72ef176f33f82127711118bf20ba5e5f71ec3" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable({K, V})&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable({K, V})&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="50eb67acdc7e8315fa8537f937c808b4cb593275" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;(&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;(&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="8bd94e9cceea37cd2a1f0c6372adff5d60e254d4" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;）继承的实例方法</target>
        </trans-unit>
        <trans-unit id="e0ad2ae8c740fcbf03ded02e3980a0b3d18da51b" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;socket/server&quot;&gt;Socket::Server&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;socket/server&quot;&gt;Socket::Server&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="f0255d48df50033a5c08288854202c8d1e281ff1" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;spec/expectations&quot;&gt;Spec::Expectations&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;spec/expectations&quot;&gt;Spec::Expectations&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="42798e60708f25559436f78375082afd9ce75e5e" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;spec/methods&quot;&gt;Spec::Methods&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;spec/methods&quot;&gt;Spec::Methods&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="94116eac0714ebe5c05ac72d9bcf9316127dd5f7" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;spec/objectextensions&quot;&gt;Spec::ObjectExtensions&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;spec/objectextensions&quot;&gt;Spec::ObjectExtensions&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="c6b2fc96c213aeacdaf3a28e0d584c60ab716699" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;systemerror&quot;&gt;SystemError&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;systemerror&quot;&gt;SystemError&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="2bd902ebd90c947a05ed362303944a9b69cbb8f1" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;valuemethods&quot;&gt;LLVM::ValueMethods&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;&lt;a href=&quot;valuemethods&quot;&gt;LLVM::ValueMethods&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="e5012ba8f5fe9dfe226fa3cd955fe32147cdcfa6" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;Crystal::System::FileDescriptor&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;Crystal::System::FileDescriptor&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="8ccf7f6da732198e30eab3e0580f002c36ac0d1a" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;Spec::Item&lt;/code&gt;</source>
          <target state="translated">从模块 &lt;code&gt;Spec::Item&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="b88cce42690ad0f5f76343c477168535a131fbe6" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../../../enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从struct &lt;code&gt;&lt;a href=&quot;../../../enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="4ff438d3401a260d7ce9eb30def0d7baff2cd0a9" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../../../value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从结构 &lt;code&gt;&lt;a href=&quot;../../../value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="9d05c77e3d09c739427b5f89392f4952f24d7709" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../../enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从struct &lt;code&gt;&lt;a href=&quot;../../enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="ef63b4a729b6e6df8cd557cd417e5409a3541cce" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../../struct&quot;&gt;Struct&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从struct &lt;code&gt;&lt;a href=&quot;../../struct&quot;&gt;Struct&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="d36d1647ad771953e663750241ff94128dfa757e" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../../value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从结构 &lt;code&gt;&lt;a href=&quot;../../value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="638b5d4647bb4fbe2c338746fff2fb9dc2ad83bb" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从struct &lt;code&gt;&lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="1fca12ff7f28f5b966a2ba2a61c10a2439c0cf6c" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../struct&quot;&gt;Struct&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从struct &lt;code&gt;&lt;a href=&quot;../struct&quot;&gt;Struct&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="c711cc6273df85f8080896391e6ce93972754dd7" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从结构 &lt;code&gt;&lt;a href=&quot;../value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="aa6282d77aaeda0f7354735036dffa1dddeba68c" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;address&quot;&gt;Socket::Address&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从struct &lt;code&gt;&lt;a href=&quot;address&quot;&gt;Socket::Address&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="f419c143cfa7f7b9440dba7a9007059e7a8ff490" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从struct &lt;code&gt;&lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="414cfcce8f945f8be68a800e2b7bee693375d55e" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从struct &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="3c91c5467521d8d79f59e290aef53a2d47a1cdd8" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从struct &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="776889a99f5efbde8af0b0831e059b4b4aa9279f" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从struct &lt;code&gt;&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="668b9755f9042fe08fc8b737c9c9d824a05936bd" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;staticformatter&quot;&gt;Log::StaticFormatter&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从结构 &lt;code&gt;&lt;a href=&quot;staticformatter&quot;&gt;Log::StaticFormatter&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="99520548a5b6fa1368fc225b4b330725766f4adb" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;struct&quot;&gt;Struct&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从struct &lt;code&gt;&lt;a href=&quot;struct&quot;&gt;Struct&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="7fd122fc7b8952ccaa5aa25eefe74cb5db77fa2a" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从结构 &lt;code&gt;&lt;a href=&quot;value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; 继承的实例方法</target>
        </trans-unit>
        <trans-unit id="22f04c4ba964874db6809362b1a8926b072c78c2" translate="yes" xml:space="preserve">
          <source>Instance variables</source>
          <target state="translated">实例变量</target>
        </trans-unit>
        <trans-unit id="6ea55c865bf1db46d6a04d21a747577b7c0d892a" translate="yes" xml:space="preserve">
          <source>Instance variables can also be initialized outside &lt;code&gt;initialize&lt;/code&gt; methods:</source>
          <target state="translated">实例变量也可以在 &lt;code&gt;initialize&lt;/code&gt; 方法之外进行初始化：</target>
        </trans-unit>
        <trans-unit id="787f100278103ea55c1573c04de928c8d31f8940" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; are focused on telling time &amp;ndash; using a &quot;wall clock&quot;. When &lt;code&gt;&lt;a href=&quot;time#local(year:Int32,month:Int32,day:Int32,hour:Int32=0,minute:Int32=0,second:Int32=0,*,nanosecond:Int32=0,location:Location=Location.local):Time-class-method&quot;&gt;Time.local&lt;/a&gt;&lt;/code&gt; is called multiple times, the difference between the returned instances is not guaranteed to equal to the time elapsed between making the calls; even the order of the returned &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; instances might not reflect invocation order.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 实例的重点是使用&amp;ldquo;挂钟&amp;rdquo;告诉时间。如果 &lt;code&gt;&lt;a href=&quot;time#local(year:Int32,month:Int32,day:Int32,hour:Int32=0,minute:Int32=0,second:Int32=0,*,nanosecond:Int32=0,location:Location=Location.local):Time-class-method&quot;&gt;Time.local&lt;/a&gt;&lt;/code&gt; 调用Time.local，则不能保证返回的实例之间的差等于两次调用之间所经过的时间。即使返回的 &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 实例的顺序也可能不反映调用顺序。</target>
        </trans-unit>
        <trans-unit id="5e1e9e6b7c9ad5f0cd5bd359d068c9fe5d7ea585" translate="yes" xml:space="preserve">
          <source>Instances of this class are passed to an &lt;code&gt;&lt;a href=&quot;../server&quot;&gt;HTTP::Server&lt;/a&gt;&lt;/code&gt; handler.</source>
          <target state="translated">此类的实例传递到 &lt;code&gt;&lt;a href=&quot;../server&quot;&gt;HTTP::Server&lt;/a&gt;&lt;/code&gt; 处理程序。</target>
        </trans-unit>
        <trans-unit id="730c339a7cd2a34beae6a3ce5d3f2837c7778306" translate="yes" xml:space="preserve">
          <source>Instances of this class wrap another &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object. When you write to this instance, it compresses the data and writes it to the underlying &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">此类的实例包装另一个 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 对象。写入此实例时，它将压缩数据并将其写入基础 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6218b9f36ba046e184c7444708b6484cebc0c566" translate="yes" xml:space="preserve">
          <source>Instances of this class wrap another &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object. When you write to this instance, it compresses the data and writes it to the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">此类的实例包装另一个 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 对象。写入此实例时，它将压缩数据并将其写入基础 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b34aab868c8ca2315f30dfd86b2b8df252f0586c" translate="yes" xml:space="preserve">
          <source>Instances of this class wrap another IO object. When you read from this instance instance, it reads data from the underlying IO, decompresses it, and returns it to the caller.</source>
          <target state="translated">这个类的实例包裹着另一个IO对象。当你从这个实例的实例中读取数据时,它从底层IO中读取数据,解压,然后返回给调用者。</target>
        </trans-unit>
        <trans-unit id="13c9cd759c1f241349f73a04fdb9c2476486f765" translate="yes" xml:space="preserve">
          <source>Instances of this class wrap another IO object. When you write to this instance, it compresses the data and writes it to the underlying IO.</source>
          <target state="translated">这个类的实例包裹着另一个IO对象。当你向这个实例写入数据时,它会压缩数据并将其写入底层IO。</target>
        </trans-unit>
        <trans-unit id="ca033777d8c3f289a99184f1752669c350d26b63" translate="yes" xml:space="preserve">
          <source>Instantiations of this static array type:</source>
          <target state="translated">该静态数组类型的实例化。</target>
        </trans-unit>
        <trans-unit id="c76f8cee37fc229387acc13bf2f685b115ed1ea8" translate="yes" xml:space="preserve">
          <source>Instead of defining a type with &lt;code&gt;class&lt;/code&gt; you can do so with &lt;code&gt;struct&lt;/code&gt;:</source>
          <target state="translated">可以使用 &lt;code&gt;struct&lt;/code&gt; 来代替使用 &lt;code&gt;class&lt;/code&gt; 定义类型：</target>
        </trans-unit>
        <trans-unit id="2ffda3100c78567eeeb1e2dc7fef014e52e11c6e" translate="yes" xml:space="preserve">
          <source>Instead of overriding you can define specialized methods by using type restrictions:</source>
          <target state="translated">你可以通过使用类型限制来定义专门的方法,而不是覆盖。</target>
        </trans-unit>
        <trans-unit id="b11719da4548e1706888bad4b177eb045d8911db" translate="yes" xml:space="preserve">
          <source>Instruction per second interface of the &lt;code&gt;&lt;a href=&quot;benchmark&quot;&gt;Benchmark&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;benchmark&quot;&gt;Benchmark&lt;/a&gt;&lt;/code&gt; 模块的每秒指令数。</target>
        </trans-unit>
        <trans-unit id="0144aee16de362b8548a5809ab084131370d5d14" translate="yes" xml:space="preserve">
          <source>Instruction per second interface of the &lt;code&gt;&lt;a href=&quot;benchmark&quot;&gt;Benchmark&lt;/a&gt;&lt;/code&gt; module. Yields a &lt;code&gt;Job&lt;/code&gt; to which one can report the benchmarks. See the module's description.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;benchmark&quot;&gt;Benchmark&lt;/a&gt;&lt;/code&gt; 模块的每秒指令数。产生一个 &lt;code&gt;Job&lt;/code&gt; 到一个可以报告的基准。请参阅模块说明。</target>
        </trans-unit>
        <trans-unit id="9641d1ce9a478b6f9da69bf971baae267dbf6f60" translate="yes" xml:space="preserve">
          <source>InstructionCollection</source>
          <target state="translated">InstructionCollection</target>
        </trans-unit>
        <trans-unit id="325d1a8404f78d8f05362a503ff4609ff4d5505a" translate="yes" xml:space="preserve">
          <source>InstructionCollection#each</source>
          <target state="translated">InstructionCollection#each</target>
        </trans-unit>
        <trans-unit id="8092c85b13a9e74beafe3a848690f6673f837906" translate="yes" xml:space="preserve">
          <source>InstructionCollection#empty?</source>
          <target state="translated">InstructionCollection#empty?</target>
        </trans-unit>
        <trans-unit id="3b011d60b7a501a710d14dd573a9a3f63a12909c" translate="yes" xml:space="preserve">
          <source>InstructionCollection#first</source>
          <target state="translated">InstructionCollection#first</target>
        </trans-unit>
        <trans-unit id="3af946580a8862571557ab4997a650a90ba5fbe4" translate="yes" xml:space="preserve">
          <source>InstructionCollection#first?</source>
          <target state="translated">InstructionCollection#first?</target>
        </trans-unit>
        <trans-unit id="921e48132d33f22227fb915723ea5df6dc38f0ca" translate="yes" xml:space="preserve">
          <source>InstructionCollection.new</source>
          <target state="translated">InstructionCollection.new</target>
        </trans-unit>
        <trans-unit id="9e15ffe9f019f86fb538eafeda4b4d81fe289d37" translate="yes" xml:space="preserve">
          <source>Instructs the spec runner to execute the given block after each spec spec in the spec suite.</source>
          <target state="translated">指示规格运行器在规格套件的每个规格后执行给定的块。</target>
        </trans-unit>
        <trans-unit id="2cc75473bf4efca67b9902a5e4b992bb68e8c345" translate="yes" xml:space="preserve">
          <source>Instructs the spec runner to execute the given block after each spec, regardless of where this method is invoked.</source>
          <target state="translated">指示规范运行器在每个规范后执行给定的块,无论本方法在哪里被调用。</target>
        </trans-unit>
        <trans-unit id="4db3e37585fe9a67dde7dfd3fc884bded980ccaa" translate="yes" xml:space="preserve">
          <source>Instructs the spec runner to execute the given block after the entire spec suite.</source>
          <target state="translated">指示规范运行器在整个规范套件之后执行给定的块。</target>
        </trans-unit>
        <trans-unit id="d07b257a57c2eb91f93758c12ff49b64a9f419a1" translate="yes" xml:space="preserve">
          <source>Instructs the spec runner to execute the given block before each spec in the spec suite.</source>
          <target state="translated">指示规格运行器在规格套件的每个规格之前执行给定的块。</target>
        </trans-unit>
        <trans-unit id="cd6ad32d2a805084d6088d0982fd833061948213" translate="yes" xml:space="preserve">
          <source>Instructs the spec runner to execute the given block before each spec, regardless of where this method is invoked.</source>
          <target state="translated">指示规范运行器在每个规范之前执行给定的块,无论在哪里调用这个方法。</target>
        </trans-unit>
        <trans-unit id="85d8afa840bdd7bdc4d583b2aabe1d99e4de6439" translate="yes" xml:space="preserve">
          <source>Instructs the spec runner to execute the given block before the entire spec suite.</source>
          <target state="translated">指示规范运行器在整个规范套件之前执行给定的块。</target>
        </trans-unit>
        <trans-unit id="84f6f555d0b79687c61b705b4f99f50fce51012f" translate="yes" xml:space="preserve">
          <source>Instructs the spec runner to execute the given block when each spec in the spec suite runs.</source>
          <target state="translated">当规格套件中的每个规格运行时,指示规格运行器执行给定的块。</target>
        </trans-unit>
        <trans-unit id="5c89edcac2811a6a9e8072517cae7f3cbfd5049d" translate="yes" xml:space="preserve">
          <source>Int</source>
          <target state="translated">Int</target>
        </trans-unit>
        <trans-unit id="ff9f1f4210ebddbaf6813b6ad77c222fe4a2a1ae" translate="yes" xml:space="preserve">
          <source>Int is the base type of all integer types.</source>
          <target state="translated">Int是所有整数类型的基本类型。</target>
        </trans-unit>
        <trans-unit id="d8a5fb226a10b6ab88f7d8bc1dd047605ceef5dc" translate="yes" xml:space="preserve">
          <source>Int#%</source>
          <target state="translated">Int#%</target>
        </trans-unit>
        <trans-unit id="030862b9ab0152efff5681b2a892117029e77594" translate="yes" xml:space="preserve">
          <source>Int#*</source>
          <target state="translated">Int#*</target>
        </trans-unit>
        <trans-unit id="ce9bb39ae6c471aac3a456621e3e5bc0408430a2" translate="yes" xml:space="preserve">
          <source>Int#**</source>
          <target state="translated">Int#**</target>
        </trans-unit>
        <trans-unit id="53752164d6689a371fd3d1255693b2b1355445e8" translate="yes" xml:space="preserve">
          <source>Int#+</source>
          <target state="translated">Int#+</target>
        </trans-unit>
        <trans-unit id="cc697fa100544136830a160ba9658473d1053f87" translate="yes" xml:space="preserve">
          <source>Int#-</source>
          <target state="translated">Int#-</target>
        </trans-unit>
        <trans-unit id="9485f1697e12c0b60fdeb597a7fe963f9ddbf62f" translate="yes" xml:space="preserve">
          <source>Int#/</source>
          <target state="translated">Int#/</target>
        </trans-unit>
        <trans-unit id="fd242c10d71f110b986bfbeef6b93c15a01f415d" translate="yes" xml:space="preserve">
          <source>Int#//</source>
          <target state="translated">Int#//</target>
        </trans-unit>
        <trans-unit id="cbb892a132e098c7b5e734082146c4b95686224d" translate="yes" xml:space="preserve">
          <source>Int#===</source>
          <target state="translated">Int#===</target>
        </trans-unit>
        <trans-unit id="a0c5ed31c675d0ef11dc689b7c4930883e00af85" translate="yes" xml:space="preserve">
          <source>Int#abs</source>
          <target state="translated">Int#abs</target>
        </trans-unit>
        <trans-unit id="b75df43afa268bc06119d7183ea5268dff7d58db" translate="yes" xml:space="preserve">
          <source>Int#bit</source>
          <target state="translated">Int#bit</target>
        </trans-unit>
        <trans-unit id="ea27b1e20b29ea10caffa83614ed792169e3cd1b" translate="yes" xml:space="preserve">
          <source>Int#bits</source>
          <target state="translated">Int#bits</target>
        </trans-unit>
        <trans-unit id="6c14ccf5584ba617995ce53c082d7280a8f01f1b" translate="yes" xml:space="preserve">
          <source>Int#ceil</source>
          <target state="translated">Int#ceil</target>
        </trans-unit>
        <trans-unit id="922c8d382d2d804ab2140efe9b3b792025929e7e" translate="yes" xml:space="preserve">
          <source>Int#chr</source>
          <target state="translated">Int#chr</target>
        </trans-unit>
        <trans-unit id="3d4aa190c2012d69cc4b9b7012d406eac5e79e2b" translate="yes" xml:space="preserve">
          <source>Int#day</source>
          <target state="translated">Int#day</target>
        </trans-unit>
        <trans-unit id="edfade1d972ea942990e3162fc8191ec1a6b7527" translate="yes" xml:space="preserve">
          <source>Int#days</source>
          <target state="translated">Int#days</target>
        </trans-unit>
        <trans-unit id="09fb2858cc149035de46bf4c65a0242a2d4fe273" translate="yes" xml:space="preserve">
          <source>Int#fdiv</source>
          <target state="translated">Int#fdiv</target>
        </trans-unit>
        <trans-unit id="40e130c1b1298c9ee0dfeec15ec725ec8c734338" translate="yes" xml:space="preserve">
          <source>Int#gcd</source>
          <target state="translated">Int#gcd</target>
        </trans-unit>
        <trans-unit id="9922096f3bb77c14935c8af38769d5b755d6c394" translate="yes" xml:space="preserve">
          <source>Int#gcm</source>
          <target state="translated">Int#gcm</target>
        </trans-unit>
        <trans-unit id="766410356bd81ee7b7388104fad9c2a289431782" translate="yes" xml:space="preserve">
          <source>Int#hash</source>
          <target state="translated">Int#hash</target>
        </trans-unit>
        <trans-unit id="614a071fece4caa7fc27664e760c1e1281d91d50" translate="yes" xml:space="preserve">
          <source>Int#hour</source>
          <target state="translated">Int#hour</target>
        </trans-unit>
        <trans-unit id="a38ef96d87696d7445a98fa08f72a823f861ecb5" translate="yes" xml:space="preserve">
          <source>Int#lcm</source>
          <target state="translated">Int#lcm</target>
        </trans-unit>
        <trans-unit id="449d5b1614b9c1e455dd45da75e9aee37cb8fe43" translate="yes" xml:space="preserve">
          <source>Int#odd?</source>
          <target state="translated">Int#odd?</target>
        </trans-unit>
        <trans-unit id="8d603910a50b5f6e47e6566f66f87884aab64272" translate="yes" xml:space="preserve">
          <source>Int#pred</source>
          <target state="translated">Int#pred</target>
        </trans-unit>
        <trans-unit id="8820592ff885e1cd4c61f4f10403d36e4d56c049" translate="yes" xml:space="preserve">
          <source>Int#succ</source>
          <target state="translated">Int#succ</target>
        </trans-unit>
        <trans-unit id="116d767faee502f87f93b6068fb1db6a1a7d35e0" translate="yes" xml:space="preserve">
          <source>Int#tdiv</source>
          <target state="translated">Int#tdiv</target>
        </trans-unit>
        <trans-unit id="57f4523513a63275b1ae650f5a8f018a138579c2" translate="yes" xml:space="preserve">
          <source>Int#to</source>
          <target state="translated">Int#to</target>
        </trans-unit>
        <trans-unit id="040a925af57573c3896a745a984fe8031cce7ab0" translate="yes" xml:space="preserve">
          <source>Int#to_s</source>
          <target state="translated">Int#to_s</target>
        </trans-unit>
        <trans-unit id="b480ebfd49e625f00cd377222e7ec6c727fd5b9b" translate="yes" xml:space="preserve">
          <source>Int#upto</source>
          <target state="translated">Int#upto</target>
        </trans-unit>
        <trans-unit id="800ef8abdcdf618d3043dc01bbda27c9e8346b1b" translate="yes" xml:space="preserve">
          <source>Int#week</source>
          <target state="translated">Int#week</target>
        </trans-unit>
        <trans-unit id="ae143499c2fb4ce7f956070c135c7c063b1fa6a7" translate="yes" xml:space="preserve">
          <source>Int#year</source>
          <target state="translated">Int#year</target>
        </trans-unit>
        <trans-unit id="11ff3e382b1e55c47deedc59ec85fa9e5152f578" translate="yes" xml:space="preserve">
          <source>Int#~</source>
          <target state="translated">Int#~</target>
        </trans-unit>
        <trans-unit id="de86a870104fb0a5a2a80ba8c78d8f536c9c7510" translate="yes" xml:space="preserve">
          <source>Int128</source>
          <target state="translated">Int128</target>
        </trans-unit>
        <trans-unit id="16e6160662f3625a557b8630a33bd5a5ede2d481" translate="yes" xml:space="preserve">
          <source>Int128#*</source>
          <target state="translated">Int128#*</target>
        </trans-unit>
        <trans-unit id="c0ed7ccbece559f519bf04bf9c53fdba2f96b707" translate="yes" xml:space="preserve">
          <source>Int128#+</source>
          <target state="translated">Int128#+</target>
        </trans-unit>
        <trans-unit id="7f8b82278b1ec306e8b8443702fdca81f2e0f27b" translate="yes" xml:space="preserve">
          <source>Int128#-</source>
          <target state="translated">Int128#-</target>
        </trans-unit>
        <trans-unit id="9a480060666d575974093cba6371099473558123" translate="yes" xml:space="preserve">
          <source>Int128#/</source>
          <target state="translated">Int128#/</target>
        </trans-unit>
        <trans-unit id="e68470d4e9ddc057231b69763257f485fa5eec41" translate="yes" xml:space="preserve">
          <source>Int128#^</source>
          <target state="translated">Int128#^</target>
        </trans-unit>
        <trans-unit id="70fdbfdadef595acb25ded1cd7ebcd61b5beb7c8" translate="yes" xml:space="preserve">
          <source>Int128#|</source>
          <target state="translated">Int128#|</target>
        </trans-unit>
        <trans-unit id="7982e8c08d84551a97dde8c3cc98e03fc2d6082c" translate="yes" xml:space="preserve">
          <source>Int16</source>
          <target state="translated">Int16</target>
        </trans-unit>
        <trans-unit id="7c42afdeb337ac1a816b9ed6c735e4b98846051c" translate="yes" xml:space="preserve">
          <source>Int16#!=</source>
          <target state="translated">Int16#!=</target>
        </trans-unit>
        <trans-unit id="8942b9c26ebc108847ae383238e48ed5ac0fbbf0" translate="yes" xml:space="preserve">
          <source>Int16#*</source>
          <target state="translated">Int16#*</target>
        </trans-unit>
        <trans-unit id="b41a557cd79ebd8a73f46143ae944c6c36dcb177" translate="yes" xml:space="preserve">
          <source>Int16#+</source>
          <target state="translated">Int16#+</target>
        </trans-unit>
        <trans-unit id="5a204510b2f347ae701f9b47cd6a270455ea13b0" translate="yes" xml:space="preserve">
          <source>Int16#-</source>
          <target state="translated">Int16#-</target>
        </trans-unit>
        <trans-unit id="239eaf4148edf3d42b490a8d52793ee6e0910ece" translate="yes" xml:space="preserve">
          <source>Int16#/</source>
          <target state="translated">Int16#/</target>
        </trans-unit>
        <trans-unit id="b59142ef94839a8df88b043de57cd2e4231509cb" translate="yes" xml:space="preserve">
          <source>Int16#==</source>
          <target state="translated">Int16#==</target>
        </trans-unit>
        <trans-unit id="210c7377b582fa4c57278392d983745c92757801" translate="yes" xml:space="preserve">
          <source>Int16#^</source>
          <target state="translated">Int16#^</target>
        </trans-unit>
        <trans-unit id="6aee87e56fc310b8f710f28870cc99908bcd3a08" translate="yes" xml:space="preserve">
          <source>Int16#|</source>
          <target state="translated">Int16#|</target>
        </trans-unit>
        <trans-unit id="f4753a4dee54ee10a75b28c6d04eb9ea0d19acce" translate="yes" xml:space="preserve">
          <source>Int32</source>
          <target state="translated">Int32</target>
        </trans-unit>
        <trans-unit id="617053928b45f497d709580b805e0be1b6e42569" translate="yes" xml:space="preserve">
          <source>Int32#!=</source>
          <target state="translated">Int32#!=</target>
        </trans-unit>
        <trans-unit id="4075c7476cd1608c8c7f384fae9b08651d18a4c9" translate="yes" xml:space="preserve">
          <source>Int32#*</source>
          <target state="translated">Int32#*</target>
        </trans-unit>
        <trans-unit id="40d72d7dfd3185c69ea1b4adb363a7d043adf1fe" translate="yes" xml:space="preserve">
          <source>Int32#+</source>
          <target state="translated">Int32#+</target>
        </trans-unit>
        <trans-unit id="63db2e9e5eb63c386b3e9886304db6ae0185df01" translate="yes" xml:space="preserve">
          <source>Int32#-</source>
          <target state="translated">Int32#-</target>
        </trans-unit>
        <trans-unit id="a790f68105b37d6bec879910a2724484fb2873f8" translate="yes" xml:space="preserve">
          <source>Int32#/</source>
          <target state="translated">Int32#/</target>
        </trans-unit>
        <trans-unit id="edd4164714d97c02fa9a5b30f9dc7f436507a173" translate="yes" xml:space="preserve">
          <source>Int32#==</source>
          <target state="translated">Int32#==</target>
        </trans-unit>
        <trans-unit id="80c9b3dbb330728f8fb842c5187b6b44f255afe9" translate="yes" xml:space="preserve">
          <source>Int32#^</source>
          <target state="translated">Int32#^</target>
        </trans-unit>
        <trans-unit id="8d9f882f40be19cbfa275d6465c7a2cd1d4143d3" translate="yes" xml:space="preserve">
          <source>Int32#|</source>
          <target state="translated">Int32#|</target>
        </trans-unit>
        <trans-unit id="180fcbe698d0f2c44101a06215c472930bbd0a01" translate="yes" xml:space="preserve">
          <source>Int64</source>
          <target state="translated">Int64</target>
        </trans-unit>
        <trans-unit id="f22f5c57f3f28f66388d1a1bb671743594d00962" translate="yes" xml:space="preserve">
          <source>Int64#!=</source>
          <target state="translated">Int64#!=</target>
        </trans-unit>
        <trans-unit id="aeb615a96ff19fc2e417afeb7d8f1e5389c0ed58" translate="yes" xml:space="preserve">
          <source>Int64#*</source>
          <target state="translated">Int64#*</target>
        </trans-unit>
        <trans-unit id="c0f4200d7139d47ee4267ba8a1f111611fd68a06" translate="yes" xml:space="preserve">
          <source>Int64#+</source>
          <target state="translated">Int64#+</target>
        </trans-unit>
        <trans-unit id="a048bf109a15b2fef5e3a443b44ce6df44443713" translate="yes" xml:space="preserve">
          <source>Int64#-</source>
          <target state="translated">Int64#-</target>
        </trans-unit>
        <trans-unit id="d286f33385d9c7c16d334e089349476618bfaa1e" translate="yes" xml:space="preserve">
          <source>Int64#/</source>
          <target state="translated">Int64#/</target>
        </trans-unit>
        <trans-unit id="f459af14f4da2a906631902aef19498e8631f1b3" translate="yes" xml:space="preserve">
          <source>Int64#==</source>
          <target state="translated">Int64#==</target>
        </trans-unit>
        <trans-unit id="83d37ed4a289e28472fa2950b09c01844d3f6a48" translate="yes" xml:space="preserve">
          <source>Int64#^</source>
          <target state="translated">Int64#^</target>
        </trans-unit>
        <trans-unit id="ff68b73826f573b3bc2380fa09a6d04ad3788de0" translate="yes" xml:space="preserve">
          <source>Int64#|</source>
          <target state="translated">Int64#|</target>
        </trans-unit>
        <trans-unit id="a96d87d7c8b3dcfbd0b1d669a1f16d6b32c2a364" translate="yes" xml:space="preserve">
          <source>Int8</source>
          <target state="translated">Int8</target>
        </trans-unit>
        <trans-unit id="aa9139bedef204c2cb0b32f8500378365a93f127" translate="yes" xml:space="preserve">
          <source>Int8#!=</source>
          <target state="translated">Int8#!=</target>
        </trans-unit>
        <trans-unit id="4f5649e931ffb56d92314ee734400dd3f6ad2a0b" translate="yes" xml:space="preserve">
          <source>Int8#*</source>
          <target state="translated">Int8#*</target>
        </trans-unit>
        <trans-unit id="9e23c5bf945549ee7b8d7f358f305d157268fde0" translate="yes" xml:space="preserve">
          <source>Int8#+</source>
          <target state="translated">Int8#+</target>
        </trans-unit>
        <trans-unit id="05c5e2d7be02b316e49148b15f0f9604bf958315" translate="yes" xml:space="preserve">
          <source>Int8#-</source>
          <target state="translated">Int8#-</target>
        </trans-unit>
        <trans-unit id="cb8e144c20f228163b38065ffa493736438150c7" translate="yes" xml:space="preserve">
          <source>Int8#/</source>
          <target state="translated">Int8#/</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
