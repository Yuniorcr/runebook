<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="crystal">
    <body>
      <group id="crystal">
        <trans-unit id="641449ac1ebe02fdee57ceec95b4ee272d50045e" translate="yes" xml:space="preserve">
          <source>Accepts an incoming connection and yields the client socket to the block. Eventually closes the connection when the block returns.</source>
          <target state="translated">接受一个传入的连接,并将客户端套接字交给该块。最终在块返回时关闭连接。</target>
        </trans-unit>
        <trans-unit id="29ea8f061fa8c06d8a31be9b596433350c25021b" translate="yes" xml:space="preserve">
          <source>Accepts an incoming connection.</source>
          <target state="translated">接受一个传入的连接。</target>
        </trans-unit>
        <trans-unit id="73c2edfe949560c8794bcb10f9efe165bba1d149" translate="yes" xml:space="preserve">
          <source>Accepts an optional &lt;em&gt;offset&lt;/em&gt; parameter, which tells it to start counting from there.</source>
          <target state="translated">接受一个可选的&lt;em&gt;offset&lt;/em&gt;参数，该参数告诉它从那里开始计数。</target>
        </trans-unit>
        <trans-unit id="45d344a6edf29f16a8a29db75abd6f1c6a140784" translate="yes" xml:space="preserve">
          <source>Accepts an optional &lt;em&gt;offset&lt;/em&gt; parameter, which tells it to start counting from there. So, a more human friendly version of the previous snippet would be:</source>
          <target state="translated">接受一个可选的&lt;em&gt;offset&lt;/em&gt;参数，该参数告诉它从那里开始计数。因此，先前片段的更人性化版本是：</target>
        </trans-unit>
        <trans-unit id="4e8c830173e4905d0b4247b14c93113df2a74486" translate="yes" xml:space="preserve">
          <source>Accepts an optional parameter &lt;em&gt;if_none&lt;/em&gt;, to set what gets returned if no element is found (defaults to &lt;code&gt;nil&lt;/code&gt;).</source>
          <target state="translated">接受可选参数&lt;em&gt;if_none&lt;/em&gt;，以设置在未找到任何元素的情况下返回的内容（默认为 &lt;code&gt;nil&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="13633ec8234dee401ddb9a029a1e7c6b3c0caf78" translate="yes" xml:space="preserve">
          <source>Access to an instance variable, e.g. &lt;code&gt;obj.@var&lt;/code&gt;.</source>
          <target state="translated">访问实例变量，例如 &lt;code&gt;obj.@var&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d1d234f5fde713a94454f268833adcd39835fe8" translate="yes" xml:space="preserve">
          <source>AccessToken</source>
          <target state="translated">AccessToken</target>
        </trans-unit>
        <trans-unit id="4d7d0c4f68db61873a9eb533547b52b1ff8293d2" translate="yes" xml:space="preserve">
          <source>AccessToken#access_token</source>
          <target state="translated">AccessToken#access_token</target>
        </trans-unit>
        <trans-unit id="d9ac497ca5ad23527b6b926375597e38d2aaf6c1" translate="yes" xml:space="preserve">
          <source>AccessToken#access_token=</source>
          <target state="translated">AccessToken#access_token=</target>
        </trans-unit>
        <trans-unit id="93fb5dc735eb68c7a68b9bd67f1769178a38018b" translate="yes" xml:space="preserve">
          <source>AccessToken#authenticate</source>
          <target state="translated">AccessToken#authenticate</target>
        </trans-unit>
        <trans-unit id="aa820cfe7845b6e83c3c67f43a1af04868d4e350" translate="yes" xml:space="preserve">
          <source>AccessToken#expires_in</source>
          <target state="translated">AccessToken#expires_in</target>
        </trans-unit>
        <trans-unit id="719f76c6e1d64d5bd8589e5745ae0432343c202f" translate="yes" xml:space="preserve">
          <source>AccessToken#expires_in=</source>
          <target state="translated">AccessToken#expires_in=</target>
        </trans-unit>
        <trans-unit id="dc27213cb2effcfd73a7243993d53695b48756e6" translate="yes" xml:space="preserve">
          <source>AccessToken#extra</source>
          <target state="translated">AccessToken#extra</target>
        </trans-unit>
        <trans-unit id="4616e0a27ced8bb580e8c1137625f9ae105a816c" translate="yes" xml:space="preserve">
          <source>AccessToken#extra=</source>
          <target state="translated">AccessToken#extra=</target>
        </trans-unit>
        <trans-unit id="a5d2e19c428deab36f5b767a5a58d89221496210" translate="yes" xml:space="preserve">
          <source>AccessToken#refresh_token</source>
          <target state="translated">AccessToken#refresh_token</target>
        </trans-unit>
        <trans-unit id="3d2d2f312123136e4c64b4200945cf5719468163" translate="yes" xml:space="preserve">
          <source>AccessToken#refresh_token=</source>
          <target state="translated">AccessToken#refresh_token=</target>
        </trans-unit>
        <trans-unit id="436366d5945e01e55d3fa918115ca09bfbb99f86" translate="yes" xml:space="preserve">
          <source>AccessToken#scope</source>
          <target state="translated">AccessToken#scope</target>
        </trans-unit>
        <trans-unit id="49ad10142a58360bc5aae4fb7977bbe9d26b15a3" translate="yes" xml:space="preserve">
          <source>AccessToken#scope=</source>
          <target state="translated">AccessToken#scope=</target>
        </trans-unit>
        <trans-unit id="b778af9bde6fc110f77d3fcf9d67eff009e753a6" translate="yes" xml:space="preserve">
          <source>AccessToken#secret</source>
          <target state="translated">AccessToken#secret</target>
        </trans-unit>
        <trans-unit id="ab5d26c93ba240b9f299bd570b84c30b5eb169c5" translate="yes" xml:space="preserve">
          <source>AccessToken#to_json</source>
          <target state="translated">AccessToken#to_json</target>
        </trans-unit>
        <trans-unit id="742071248d8cbf6c72b4cdcaf2da43e6ff8d55ab" translate="yes" xml:space="preserve">
          <source>AccessToken#token</source>
          <target state="translated">AccessToken#token</target>
        </trans-unit>
        <trans-unit id="7603906a360325a06a4f2a56e5eaabb6e4068e17" translate="yes" xml:space="preserve">
          <source>AccessToken.from_response</source>
          <target state="translated">AccessToken.from_response</target>
        </trans-unit>
        <trans-unit id="cd9680366f3d8ae3773300b0b07a5148bae55c67" translate="yes" xml:space="preserve">
          <source>AccessToken.new</source>
          <target state="translated">AccessToken.new</target>
        </trans-unit>
        <trans-unit id="367e378047504f0f39a9641f9467bccef22f60f4" translate="yes" xml:space="preserve">
          <source>AccessToken::Bearer</source>
          <target state="translated">AccessToken::Bearer</target>
        </trans-unit>
        <trans-unit id="57c085ec479e6b755290d4cc34ac43eb55064ec2" translate="yes" xml:space="preserve">
          <source>AccessToken::Bearer#==</source>
          <target state="translated">AccessToken::Bearer#==</target>
        </trans-unit>
        <trans-unit id="88d3b43cfae9fce1d3ecfab8b061792a353a819d" translate="yes" xml:space="preserve">
          <source>AccessToken::Bearer#authenticate</source>
          <target state="translated">AccessToken::Bearer#authenticate</target>
        </trans-unit>
        <trans-unit id="a4fe66ed035ef33f65266b667a8ca13bbb7d1012" translate="yes" xml:space="preserve">
          <source>AccessToken::Bearer#hash</source>
          <target state="translated">AccessToken::Bearer#hash</target>
        </trans-unit>
        <trans-unit id="2e22e0ddf808d5255820cf7138700ac79e9b2397" translate="yes" xml:space="preserve">
          <source>AccessToken::Bearer#to_json</source>
          <target state="translated">AccessToken::Bearer#to_json</target>
        </trans-unit>
        <trans-unit id="1271a475e32d46af73d5b7a99f9dc998ea4f7205" translate="yes" xml:space="preserve">
          <source>AccessToken::Bearer#token_type</source>
          <target state="translated">AccessToken::Bearer#token_type</target>
        </trans-unit>
        <trans-unit id="8adb828eaa01c01694810e20eaaec554bba7ad02" translate="yes" xml:space="preserve">
          <source>AccessToken::Bearer.new</source>
          <target state="translated">AccessToken::Bearer.new</target>
        </trans-unit>
        <trans-unit id="142f03e3c6df892dc51f6af3077f915764d571ac" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac</source>
          <target state="translated">AccessToken::Mac</target>
        </trans-unit>
        <trans-unit id="0e4d845b10465b0e5c7b4272afbeafd94881a824" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac#==</source>
          <target state="translated">AccessToken::Mac#==</target>
        </trans-unit>
        <trans-unit id="b30f699cbedf0a4cacde993cde84d015828cf324" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac#authenticate</source>
          <target state="translated">AccessToken::Mac#authenticate</target>
        </trans-unit>
        <trans-unit id="d18199918b3f67c6f09e1bab6d020bbb938d9881" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac#hash</source>
          <target state="translated">AccessToken::Mac#hash</target>
        </trans-unit>
        <trans-unit id="b80ade4b421874cbd457eb379b4d8f1fa8e7e461" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac#issued_at</source>
          <target state="translated">AccessToken::Mac#issued_at</target>
        </trans-unit>
        <trans-unit id="a859a95c8b7b1bf8d4c06970836b9ee8f8fa5104" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac#issued_at=</source>
          <target state="translated">AccessToken::Mac#issued_at=</target>
        </trans-unit>
        <trans-unit id="1f863abbd8969dbff5e80100eab883f374c91f8c" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac#mac_algorithm</source>
          <target state="translated">AccessToken::Mac#mac_algorithm</target>
        </trans-unit>
        <trans-unit id="2d1a4535cdc7b99bd50d1fc853d8381a7b3141ce" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac#mac_algorithm=</source>
          <target state="translated">AccessToken::Mac#mac_algorithm=</target>
        </trans-unit>
        <trans-unit id="ec7489252dfb77332dc51e1d9b554459e1a18bb9" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac#mac_key</source>
          <target state="translated">AccessToken::Mac#mac_key</target>
        </trans-unit>
        <trans-unit id="51162e878d3c8a46feb1b909101942a80fe442ec" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac#mac_key=</source>
          <target state="translated">AccessToken::Mac#mac_key=</target>
        </trans-unit>
        <trans-unit id="263751d981dfda38bcbbd45085b1a11319bd26ad" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac#to_json</source>
          <target state="translated">AccessToken::Mac#to_json</target>
        </trans-unit>
        <trans-unit id="d610d4e42edf24c0fc03f53f8cf14b04c3188f05" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac#token_type</source>
          <target state="translated">AccessToken::Mac#token_type</target>
        </trans-unit>
        <trans-unit id="e1bfc7249ae800303f17365d30d554c4b686ddbc" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac.new</source>
          <target state="translated">AccessToken::Mac.new</target>
        </trans-unit>
        <trans-unit id="fd01ba05464708f5462bba3876a680ad00de0ccc" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac.signature</source>
          <target state="translated">AccessToken::Mac.signature</target>
        </trans-unit>
        <trans-unit id="164e57f1785cf77edc9aa5db8c5a2e98c1fd9634" translate="yes" xml:space="preserve">
          <source>According to &lt;a href=&quot;https://github.com/crystal-lang/shards/blob/master/README.md&quot;&gt;the Crystal Shards README&lt;/a&gt;,</source>
          <target state="translated">根据&lt;a href=&quot;https://github.com/crystal-lang/shards/blob/master/README.md&quot;&gt;《水晶碎片自述》&lt;/a&gt;，</target>
        </trans-unit>
        <trans-unit id="d59173b5354a790d2ca2a18d024a371b313771ed" translate="yes" xml:space="preserve">
          <source>According to https://tools.ietf.org/html/rfc6749#section-2.3.1:</source>
          <target state="translated">据https://tools.ietf.org/html/rfc6749#section-2.3.1。</target>
        </trans-unit>
        <trans-unit id="daa5a20600dfa18d97895e2bf6b12a8dba40f8c2" translate="yes" xml:space="preserve">
          <source>Accordingly, in the input that says &lt;code&gt;tag version&lt;/code&gt;, type &lt;code&gt;v0.1.0&lt;/code&gt;. Make sure this matches the &lt;code&gt;version&lt;/code&gt; in &lt;code&gt;shard.yml&lt;/code&gt;. Title it &lt;code&gt;v0.1.0&lt;/code&gt; and write a short description for the release.</source>
          <target state="translated">因此，在表示 &lt;code&gt;tag version&lt;/code&gt; 的输入中，输入 &lt;code&gt;v0.1.0&lt;/code&gt; 。确保这比赛 &lt;code&gt;version&lt;/code&gt; 中 &lt;code&gt;shard.yml&lt;/code&gt; 。将其 &lt;code&gt;v0.1.0&lt;/code&gt; 并为该发行版编写简短说明。</target>
        </trans-unit>
        <trans-unit id="116672ae6ceb211b89b5cc24d53045f44bb76b12" translate="yes" xml:space="preserve">
          <source>Acronyms</source>
          <target state="translated">Acronyms</target>
        </trans-unit>
        <trans-unit id="40bf7bf6cfb0a8b6fcf22d67a590b153132b18a1" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;description&lt;/code&gt; to your &lt;code&gt;shard.yml&lt;/code&gt;.</source>
          <target state="translated">在您的 &lt;code&gt;shard.yml&lt;/code&gt; 中添加 &lt;code&gt;description&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="663c1c655cf310ee4fbe9eef114d25c2d8b6507e" translate="yes" xml:space="preserve">
          <source>Add and commit everything:</source>
          <target state="translated">添加并提交一切。</target>
        </trans-unit>
        <trans-unit id="aafac0104ae814f8d0ea977883bf403e89e4673f" translate="yes" xml:space="preserve">
          <source>Add the following &lt;code&gt;script&lt;/code&gt; to your &lt;code&gt;.travis.yml&lt;/code&gt;:</source>
          <target state="translated">将以下 &lt;code&gt;script&lt;/code&gt; 添加到您的 &lt;code&gt;.travis.yml&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="b6355c5980f16856486284bfb00b8e9c31c366c9" translate="yes" xml:space="preserve">
          <source>Add the following lines to your &lt;code&gt;.travis.yml&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;.travis.yml&lt;/code&gt; 添加到.travis.yml中：</target>
        </trans-unit>
        <trans-unit id="ce9d987d91453d896e3121d6dea7076a523cb502" translate="yes" xml:space="preserve">
          <source>Add the following markdown build badge below the description in your README to inform users what the most current release is: (Be sure to replace &lt;code&gt;&amp;lt;YOUR-GITHUB-USERNAME&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/code&gt; accordingly)</source>
          <target state="translated">在自述文件中的说明下方添加以下markdown构建 &lt;code&gt;&amp;lt;YOUR-GITHUB-USERNAME&amp;gt;&lt;/code&gt; 以告知用户最新版本：（请确保分别替换&amp;lt;YOUR-GITHUB-USERNAME&amp;gt;和 &lt;code&gt;&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a5d5e6d1d69842e31b66ed7a9c41787aea4c5c77" translate="yes" xml:space="preserve">
          <source>Add the remote: (Be sure to replace &lt;code&gt;&amp;lt;YOUR-GITHUB-USERNAME&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/code&gt; accordingly)</source>
          <target state="translated">添加遥控器：（确保相应地替换 &lt;code&gt;&amp;lt;YOUR-GITHUB-USERNAME&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="64f52129681eb9776d5a95dfdc1e544dc86922e5" translate="yes" xml:space="preserve">
          <source>Add the remote: (Be sure to replace &lt;code&gt;&amp;lt;YOUR-GITLAB-USERNAME&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/code&gt; accordingly)</source>
          <target state="translated">添加遥控器：（确保相应地替换 &lt;code&gt;&amp;lt;YOUR-GITLAB-USERNAME&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="95ee7d10571430d0e9ad15dd8fba1c4b4959a36e" translate="yes" xml:space="preserve">
          <source>Adding a page</source>
          <target state="translated">增加一个页面</target>
        </trans-unit>
        <trans-unit id="e6c70d69ea8e44f4e898c8f66e171cdf5a057546" translate="yes" xml:space="preserve">
          <source>Addition: returns a new set containing the unique elements from both sets.</source>
          <target state="translated">加法:返回一个包含两个集合中唯一元素的新集合。</target>
        </trans-unit>
        <trans-unit id="219ef57240c3407a75d176dec39e4b747e5ef6cf" translate="yes" xml:space="preserve">
          <source>Additional examples:</source>
          <target state="translated">其他例子:</target>
        </trans-unit>
        <trans-unit id="45092b388a42ed354fd88abaa8a6103d711016c2" translate="yes" xml:space="preserve">
          <source>Additionally, a &lt;code&gt;&lt;a href=&quot;csv/row&quot;&gt;Row&lt;/a&gt;&lt;/code&gt; object can be obtained with the &lt;code&gt;&lt;a href=&quot;csv#row:Row-instance-method&quot;&gt;#row&lt;/a&gt;&lt;/code&gt; method which provides similar methods and can be converted to an &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">另外，可以使用提供类似方法的 &lt;code&gt;&lt;a href=&quot;csv#row:Row-instance-method&quot;&gt;#row&lt;/a&gt;&lt;/code&gt; 方法获得 &lt;code&gt;&lt;a href=&quot;csv/row&quot;&gt;Row&lt;/a&gt;&lt;/code&gt; 对象，并且可以将其转换为 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="add876ac86d789b9a751c04b427677fb97819cbd" translate="yes" xml:space="preserve">
          <source>Additionally, a call argument can have a splat (&lt;code&gt;*&lt;/code&gt;) or double splat (&lt;code&gt;**&lt;/code&gt;). A splat expands a &lt;a href=&quot;literals/tuple&quot;&gt;Tuple&lt;/a&gt; into positional arguments, while a double splat expands a &lt;a href=&quot;literals/named_tuple&quot;&gt;NamedTuple&lt;/a&gt; into named arguments. Multiple argument splats and double splats are allowed.</source>
          <target state="translated">此外，call参数可以具有splat（ &lt;code&gt;*&lt;/code&gt; ）或double splat（ &lt;code&gt;**&lt;/code&gt; ）。splat将&lt;a href=&quot;literals/tuple&quot;&gt;Tuple&lt;/a&gt;扩展为位置参数，而double splat将&lt;a href=&quot;literals/named_tuple&quot;&gt;NamedTuple&lt;/a&gt;扩展为命名参数。允许使用多个参数splat和双splat。</target>
        </trans-unit>
        <trans-unit id="21925137817ad47244f4db97302a672bcd5743fa" translate="yes" xml:space="preserve">
          <source>Additionally, fresh variables with respect to some other AST node can be declared with &lt;code&gt;%var{key1, key2, ..., keyN}&lt;/code&gt;. For example:</source>
          <target state="translated">此外，可以使用 &lt;code&gt;%var{key1, key2, ..., keyN}&lt;/code&gt; 声明有关其他AST节点的新鲜变量。例如：</target>
        </trans-unit>
        <trans-unit id="a51d462ae90a9de196ff1da187d7aa5b69603595" translate="yes" xml:space="preserve">
          <source>Additionally, if a program is compiled with &lt;code&gt;--release&lt;/code&gt;, the &lt;code&gt;release&lt;/code&gt; flag will be set.</source>
          <target state="translated">另外，如果使用 &lt;code&gt;--release&lt;/code&gt; 编译程序，则会设置 &lt;code&gt;release&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="2d62f6a45de00933beae11017da5cddf920c1abc" translate="yes" xml:space="preserve">
          <source>Additionally, in the &lt;code&gt;else&lt;/code&gt; branch the type of the variable is guaranteed to be restricted to the types that don&amp;rsquo;t respond to that method:</source>
          <target state="translated">此外，在 &lt;code&gt;else&lt;/code&gt; 分支中，确保将变量的类型限制为不响应该方法的类型：</target>
        </trans-unit>
        <trans-unit id="2661f9ee6b5db0ac955786f0d707a146fb27f849" translate="yes" xml:space="preserve">
          <source>Additionally, in the &lt;code&gt;else&lt;/code&gt; branch the type of the variable is guaranteed to not be restricted by that type:</source>
          <target state="translated">此外，在 &lt;code&gt;else&lt;/code&gt; 分支中，保证变量的类型不受该类型的限制：</target>
        </trans-unit>
        <trans-unit id="9a548f32f0760d30d8107a491b59791f798e4dd4" translate="yes" xml:space="preserve">
          <source>Additionally, it provides some conveniences like &lt;code&gt;out&lt;/code&gt; and &lt;code&gt;to_unsafe&lt;/code&gt; so writing bindings is as painless as possible.</source>
          <target state="translated">另外，它提供了 &lt;code&gt;out&lt;/code&gt; 和 &lt;code&gt;to_unsafe&lt;/code&gt; 之类的便利，因此编写绑定尽可能轻松。</target>
        </trans-unit>
        <trans-unit id="430069b9f09c41c6fa22db949b609445a2eb34a3" translate="yes" xml:space="preserve">
          <source>Additionally, several methods, like &lt;code&gt;#gets&lt;/code&gt;, are implemented in a more efficient way.</source>
          <target state="translated">另外，以更有效的方式实现了 &lt;code&gt;#gets&lt;/code&gt; 之类的几种方法。</target>
        </trans-unit>
        <trans-unit id="82fab41a104aefc18b0376bcac7ccaba5b55b1de" translate="yes" xml:space="preserve">
          <source>Additionally, some &lt;code&gt;Enum&lt;/code&gt; methods check the &lt;code&gt;@[Flags]&lt;/code&gt; annotation. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36bea00f7d52315f11bd6288ff8d91abf5f24cce" translate="yes" xml:space="preserve">
          <source>Additionally, some &lt;code&gt;Enum&lt;/code&gt; methods check the &lt;code&gt;@[Flags]&lt;/code&gt; attribute. For example:</source>
          <target state="translated">此外，一些 &lt;code&gt;Enum&lt;/code&gt; 方法检查 &lt;code&gt;@[Flags]&lt;/code&gt; 属性。例如：</target>
        </trans-unit>
        <trans-unit id="f98b0777da6e8f32c83093bbc040eb1852ed4d3e" translate="yes" xml:space="preserve">
          <source>Additionally, some methods change their behaviour.</source>
          <target state="translated">此外,有些方法会改变其行为。</target>
        </trans-unit>
        <trans-unit id="52c9363cca5dab9646cb60533aabc07d446a3aeb" translate="yes" xml:space="preserve">
          <source>Additionally, using &lt;code&gt;*&lt;/code&gt; when interpolating a &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/TupleLiteral.html&quot;&gt;&lt;code&gt;TupleLiteral&lt;/code&gt;&lt;/a&gt; interpolates the elements separated by commas:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de8cd497abe19bf72ddd61f36f91ca1a73f1401" translate="yes" xml:space="preserve">
          <source>Additionally, using &lt;code&gt;*&lt;/code&gt; when interpolating an &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/ArrayLiteral.html&quot;&gt;&lt;code&gt;ArrayLiteral&lt;/code&gt;&lt;/a&gt; interpolates the elements separated by commas:</source>
          <target state="translated">另外，在对&lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/ArrayLiteral.html&quot;&gt; &lt;code&gt;ArrayLiteral&lt;/code&gt; 进行&lt;/a&gt;插值时使用 &lt;code&gt;*&lt;/code&gt; 可以对用逗号分隔的元素进行插值：</target>
        </trans-unit>
        <trans-unit id="2aa983ad06fdb2dac09d7b6232814da70747e9ee" translate="yes" xml:space="preserve">
          <source>Additive</source>
          <target state="translated">Additive</target>
        </trans-unit>
        <trans-unit id="d70f93df5e8f9b55be44fbeee9d203972e3383d4" translate="yes" xml:space="preserve">
          <source>Address</source>
          <target state="translated">Address</target>
        </trans-unit>
        <trans-unit id="53cce0631f5ba4546493e150cc5ef970434eef7f" translate="yes" xml:space="preserve">
          <source>Address already in use</source>
          <target state="translated">已使用的地址</target>
        </trans-unit>
        <trans-unit id="cf3745f20c2bcb9c33dec185e795a8e5bec761e0" translate="yes" xml:space="preserve">
          <source>Address family not supported by protocol family</source>
          <target state="translated">协议族不支持的地址族</target>
        </trans-unit>
        <trans-unit id="b15ad68e328b19604a79b65bad88d125e6933493" translate="yes" xml:space="preserve">
          <source>Address#==</source>
          <target state="translated">Address#==</target>
        </trans-unit>
        <trans-unit id="ead9d213b9ffa86135837647c803efbfa1183013" translate="yes" xml:space="preserve">
          <source>Address#family</source>
          <target state="translated">Address#family</target>
        </trans-unit>
        <trans-unit id="22e8491153dca828c976eb0200daf3fb673c4af9" translate="yes" xml:space="preserve">
          <source>Address#size</source>
          <target state="translated">Address#size</target>
        </trans-unit>
        <trans-unit id="d6af19a70813afd13d3310a629337600b4ac538a" translate="yes" xml:space="preserve">
          <source>Address#to_unsafe</source>
          <target state="translated">Address#to_unsafe</target>
        </trans-unit>
        <trans-unit id="dc791b4653b5a3907345f7321010770722782648" translate="yes" xml:space="preserve">
          <source>Address.from</source>
          <target state="translated">Address.from</target>
        </trans-unit>
        <trans-unit id="e7697e73fc5b026b7937958d2054304b1e93c6d6" translate="yes" xml:space="preserve">
          <source>Address.new</source>
          <target state="translated">Address.new</target>
        </trans-unit>
        <trans-unit id="055cb406d1d67aba06ddd7890251a64eef68fbd4" translate="yes" xml:space="preserve">
          <source>Address.parse</source>
          <target state="translated">Address.parse</target>
        </trans-unit>
        <trans-unit id="f6ad0e65ce9cac6f040675d094861848e31d4535" translate="yes" xml:space="preserve">
          <source>Addrinfo</source>
          <target state="translated">Addrinfo</target>
        </trans-unit>
        <trans-unit id="73d757cbe9f0c8063218f863eec3b0c38b4baeec" translate="yes" xml:space="preserve">
          <source>Addrinfo#family</source>
          <target state="translated">Addrinfo#family</target>
        </trans-unit>
        <trans-unit id="ac81fbad86e4c530d33461ef1bbc7915744df138" translate="yes" xml:space="preserve">
          <source>Addrinfo#ip_address</source>
          <target state="translated">Addrinfo#ip_address</target>
        </trans-unit>
        <trans-unit id="d4b7d00b42438ccdfac67c0572cb6c5a408b53f7" translate="yes" xml:space="preserve">
          <source>Addrinfo#protocol</source>
          <target state="translated">Addrinfo#protocol</target>
        </trans-unit>
        <trans-unit id="458557fd4b51ba5a3ae858540f77c027533b86a9" translate="yes" xml:space="preserve">
          <source>Addrinfo#size</source>
          <target state="translated">Addrinfo#size</target>
        </trans-unit>
        <trans-unit id="20866b49fd56bdba1365ea63e4ac9a2fc569be3e" translate="yes" xml:space="preserve">
          <source>Addrinfo#to_unsafe</source>
          <target state="translated">Addrinfo#to_unsafe</target>
        </trans-unit>
        <trans-unit id="d47e1aedcb0d3cbf5e09968698290591315cb4cc" translate="yes" xml:space="preserve">
          <source>Addrinfo#type</source>
          <target state="translated">Addrinfo#type</target>
        </trans-unit>
        <trans-unit id="3162154fda79a1a00ec8d83800770ec2a7a35b40" translate="yes" xml:space="preserve">
          <source>Addrinfo.resolve</source>
          <target state="translated">Addrinfo.resolve</target>
        </trans-unit>
        <trans-unit id="d885ae884501e1bdbadb0d36b8d2c8ad5e51c5f4" translate="yes" xml:space="preserve">
          <source>Addrinfo.tcp</source>
          <target state="translated">Addrinfo.tcp</target>
        </trans-unit>
        <trans-unit id="fe05fbc0742884c07b95b99140eb5429458875be" translate="yes" xml:space="preserve">
          <source>Addrinfo.udp</source>
          <target state="translated">Addrinfo.udp</target>
        </trans-unit>
        <trans-unit id="b60fc52e4f45111bf9dbac624aba010fecbc4b70" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;Set&lt;/a&gt;-&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; headers for the cookies in this collection to the given &lt;code&gt;&lt;a href=&quot;headers&quot;&gt;HTTP::Headers&lt;/a&gt;&lt;/code&gt; instance and returns it.</source>
          <target state="translated">将此集合中cookie的 &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;Set&lt;/a&gt;-&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; 头添加到给定的 &lt;code&gt;&lt;a href=&quot;headers&quot;&gt;HTTP::Headers&lt;/a&gt;&lt;/code&gt; 实例并返回它。</target>
        </trans-unit>
        <trans-unit id="25aa786715c33df73be73a1a044c927ebf7054ee" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;Set&lt;/a&gt;-&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; headers for the cookies in this collection to the given &lt;code&gt;&lt;a href=&quot;headers&quot;&gt;HTTP::Headers&lt;/a&gt;&lt;/code&gt; instance and returns it. Removes any existing &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;Set&lt;/a&gt;-&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; headers in it.</source>
          <target state="translated">将此集合中cookie的 &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;Set&lt;/a&gt;-&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; 头添加到给定的 &lt;code&gt;&lt;a href=&quot;headers&quot;&gt;HTTP::Headers&lt;/a&gt;&lt;/code&gt; 实例并返回它。删除其中任何现有的 &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;Set&lt;/a&gt;-&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; 标头。</target>
        </trans-unit>
        <trans-unit id="fa25e31e276262832d0e80ea6c11e1ef7fd4c6cc" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;Set&lt;/a&gt;-&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; headers for the cookies in this collection to the given &lt;code&gt;HTTP::Header&lt;/code&gt; instance and returns it.</source>
          <target state="translated">将此集合中cookie的 &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;Set&lt;/a&gt;-&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; 头添加到给定的 &lt;code&gt;HTTP::Header&lt;/code&gt; 实例，并将其返回。</target>
        </trans-unit>
        <trans-unit id="b76a531a7d8295e429c48b4832f0a6f1d6a49383" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;Set&lt;/a&gt;-&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; headers for the cookies in this collection to the given &lt;code&gt;HTTP::Header&lt;/code&gt; instance and returns it. Removes any existing &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;Set&lt;/a&gt;-&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; headers in it.</source>
          <target state="translated">将此集合中cookie的 &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;Set&lt;/a&gt;-&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; 头添加到给定的 &lt;code&gt;HTTP::Header&lt;/code&gt; 实例，并将其返回。删除其中任何现有的 &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;Set&lt;/a&gt;-&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; 标头。</target>
        </trans-unit>
        <trans-unit id="9c06b59703f08d8136ae20cc559b73f9ca9cb7e2" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; headers for the cookies in this collection to the given &lt;code&gt;&lt;a href=&quot;headers&quot;&gt;HTTP::Headers&lt;/a&gt;&lt;/code&gt; instance and returns it.</source>
          <target state="translated">将此集合中 &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; 的标头添加到给定的 &lt;code&gt;&lt;a href=&quot;headers&quot;&gt;HTTP::Headers&lt;/a&gt;&lt;/code&gt; 实例并返回它。</target>
        </trans-unit>
        <trans-unit id="403681ba64ec505cdbbcd63bf6a4e28c8d07aaa5" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; headers for the cookies in this collection to the given &lt;code&gt;&lt;a href=&quot;headers&quot;&gt;HTTP::Headers&lt;/a&gt;&lt;/code&gt; instance and returns it. Removes any existing &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; headers in it.</source>
          <target state="translated">将此集合中 &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; 的标头添加到给定的 &lt;code&gt;&lt;a href=&quot;headers&quot;&gt;HTTP::Headers&lt;/a&gt;&lt;/code&gt; 实例并返回它。删除其中任何现有的 &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; 标头。</target>
        </trans-unit>
        <trans-unit id="91fffbff52dbd7a20cd88af437ad30205257d40c" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; headers for the cookies in this collection to the given &lt;code&gt;HTTP::Header&lt;/code&gt; instance and returns it.</source>
          <target state="translated">将此集合中 &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; 的标头添加到给定的 &lt;code&gt;HTTP::Header&lt;/code&gt; 实例并返回它。</target>
        </trans-unit>
        <trans-unit id="4d783e150b3c217c69e7df1895c63784d6e4c4ce" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; headers for the cookies in this collection to the given &lt;code&gt;HTTP::Header&lt;/code&gt; instance and returns it. Removes any existing &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; headers in it.</source>
          <target state="translated">将此集合中 &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; 的标头添加到给定的 &lt;code&gt;HTTP::Header&lt;/code&gt; 实例并返回它。删除其中任何现有的 &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; 标头。</target>
        </trans-unit>
        <trans-unit id="c4c1568e0a5b583dc1773886b8b2a5d7dbaca22a" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;&lt;a href=&quot;set#each(&amp;amp;block)-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; element of &lt;em&gt;elems&lt;/em&gt; to the set and returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">将&lt;em&gt;elems的&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;set#each(&amp;amp;block)-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; 元素添加到集合中并返回 &lt;code&gt;self&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fba24d02e6c3d9442cc925eb4cb26439f369ffeb" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;&lt;a href=&quot;set#each-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; element of &lt;em&gt;elems&lt;/em&gt; to the set and returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">将&lt;em&gt;elems的&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;set#each-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; 元素添加到集合中并返回 &lt;code&gt;self&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9e360ddab03d37a841d5ab4f28c8bdd59714a444" translate="yes" xml:space="preserve">
          <source>Adds &lt;em&gt;initial&lt;/em&gt; and all results of the passed block for each element in the collection.</source>
          <target state="translated">为集合中的每个元素添加传递的块的&lt;em&gt;初始&lt;/em&gt;结果和所有结果。</target>
        </trans-unit>
        <trans-unit id="41c3f6de2b122b7479a5f2c51748e58ac7340956" translate="yes" xml:space="preserve">
          <source>Adds &lt;em&gt;initial&lt;/em&gt; and all the elements in the collection together.</source>
          <target state="translated">将&lt;em&gt;初始&lt;/em&gt;元素和集合中的所有元素加在一起。</target>
        </trans-unit>
        <trans-unit id="b6227744b2750239b3f87f2a527ce2b4d145ed78" translate="yes" xml:space="preserve">
          <source>Adds &lt;em&gt;initial&lt;/em&gt; and all the elements in the collection together. The type of &lt;em&gt;initial&lt;/em&gt; will be the type of the sum, so use this if (for instance) you need to specify a large enough type to avoid overflow.</source>
          <target state="translated">将&lt;em&gt;初始&lt;/em&gt;元素和集合中的所有元素加在一起。该类型的&lt;em&gt;初始&lt;/em&gt;将会和的类型，所以用这个，如果（例如），你需要指定一个足够大的类型，以避免溢出。</target>
        </trans-unit>
        <trans-unit id="dec355527a302fc0bd89dda8ae3c9b5c17ea2e30" translate="yes" xml:space="preserve">
          <source>Adds &lt;em&gt;object&lt;/em&gt; to the set and returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">将&lt;em&gt;对象&lt;/em&gt;添加到集合中并返回 &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d2d0995ccb49c94a2428f7667e8810a33074f532" translate="yes" xml:space="preserve">
          <source>Adds &lt;em&gt;object&lt;/em&gt; to the set and returns &lt;code&gt;true&lt;/code&gt; on success and &lt;code&gt;false&lt;/code&gt; if the value was already in the set.</source>
          <target state="translated">将&lt;em&gt;对象&lt;/em&gt;添加到集合中，并在成功时返回 &lt;code&gt;true&lt;/code&gt; ；如果该值已在集合中，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ab5b4bde9d8b6addc1c802478b54860d5ec2ce7" translate="yes" xml:space="preserve">
          <source>Adds JSON support to &lt;code&gt;&lt;a href=&quot;uuid&quot;&gt;UUID&lt;/a&gt;&lt;/code&gt; for use in a JSON mapping.</source>
          <target state="translated">向 &lt;code&gt;&lt;a href=&quot;uuid&quot;&gt;UUID&lt;/a&gt;&lt;/code&gt; 添加JSON支持以在JSON映射中使用。</target>
        </trans-unit>
        <trans-unit id="82a5fba306ff7bbc646c427a6b45392aa092155d" translate="yes" xml:space="preserve">
          <source>Adds a &lt;code&gt;&lt;a href=&quot;../socket/server&quot;&gt;Socket::Server&lt;/a&gt;&lt;/code&gt;&lt;em&gt;socket&lt;/em&gt; to this server.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;../socket/server&quot;&gt;Socket::Server&lt;/a&gt;&lt;/code&gt; &lt;em&gt;套接字&lt;/em&gt;添加到此服务器。</target>
        </trans-unit>
        <trans-unit id="47f54f50d80809d5bee8fadbacc25554c3b71426" translate="yes" xml:space="preserve">
          <source>Adds a callback to execute before each request.</source>
          <target state="translated">在每次请求前添加一个回调执行。</target>
        </trans-unit>
        <trans-unit id="15437fe8b32967e595f0dd5ba34000a17d382d37" translate="yes" xml:space="preserve">
          <source>Adds a callback to execute before each request. This is usually used to set an authorization header. Any number of callbacks can be added.</source>
          <target state="translated">在每个请求之前添加一个回调来执行。这通常用于设置授权头。可以添加任意数量的回调。</target>
        </trans-unit>
        <trans-unit id="870968f6f752c1fa08cce73e14a403db0d45d3db" translate="yes" xml:space="preserve">
          <source>Adds a directory entry that will have the given &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="translated">添加将具有给定&lt;em&gt;名称&lt;/em&gt;的目录条目。</target>
        </trans-unit>
        <trans-unit id="473657f6f540cfeb4de6a5dcd13b99d657625276" translate="yes" xml:space="preserve">
          <source>Adds a form part called &lt;em&gt;name&lt;/em&gt;, with data from &lt;em&gt;io&lt;/em&gt; as the value.</source>
          <target state="translated">添加一个名为&lt;em&gt;name&lt;/em&gt;的表单部件，并将&lt;em&gt;io&lt;/em&gt;中的数据作为值。</target>
        </trans-unit>
        <trans-unit id="f842f79e5d2c634b68586d37fc8bd207885dfb47" translate="yes" xml:space="preserve">
          <source>Adds a form part called &lt;em&gt;name&lt;/em&gt;, with data from &lt;em&gt;io&lt;/em&gt; as the value. &lt;em&gt;Metadata&lt;/em&gt; can be provided to add extra metadata about the file to the Content-Disposition header for the form part. Other headers can be added using &lt;em&gt;headers&lt;/em&gt;.</source>
          <target state="translated">添加一个名为&lt;em&gt;name&lt;/em&gt;的表单部件，并将&lt;em&gt;io&lt;/em&gt;中的数据作为值。&lt;em&gt;元数据&lt;/em&gt;可以提供给添加有关文件的内容处理标头的组成部分额外的元数据。可以使用&lt;em&gt;headers&lt;/em&gt;添加其他&lt;em&gt;标题&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="47e06a9c78876f6c1cbca8192afa5deaed108e85" translate="yes" xml:space="preserve">
          <source>Adds a form part with the given &lt;em&gt;name&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">添加具有给定&lt;em&gt;名称&lt;/em&gt;和&lt;em&gt;值&lt;/em&gt;的表单部件。</target>
        </trans-unit>
        <trans-unit id="dcd2e9e3df4e0d99f403570c73489dfb8469a2c1" translate="yes" xml:space="preserve">
          <source>Adds a form part with the given &lt;em&gt;name&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt;. &lt;em&gt;Headers&lt;/em&gt; can optionally be provided for the form part.</source>
          <target state="translated">添加具有给定&lt;em&gt;名称&lt;/em&gt;和&lt;em&gt;值&lt;/em&gt;的表单部件。可以为表单部分提供&lt;em&gt;标题&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="db81710d3c6f41b93a0c57b485239ede24510e74" translate="yes" xml:space="preserve">
          <source>Adds a key-value pair to the params being built.</source>
          <target state="translated">为正在建立的参数添加键值对。</target>
        </trans-unit>
        <trans-unit id="a537c0b80c92783bfcf2801c4c2f8ac39783c012" translate="yes" xml:space="preserve">
          <source>Adds a separator, with an optional header message, that will be used to print the help.</source>
          <target state="translated">添加一个分隔符,带有一个可选的头信息,用于打印帮助。</target>
        </trans-unit>
        <trans-unit id="74d6fb873ec110cb05202e6e687dd0ee4c0c0121" translate="yes" xml:space="preserve">
          <source>Adds a separator, with an optional header message, that will be used to print the help. The separator is placed between the flags registered (&lt;code&gt;&lt;a href=&quot;optionparser#on(short_flag:String,long_flag:String,description:String,&amp;amp;block:String-%3E)-instance-method&quot;&gt;#on&lt;/a&gt;&lt;/code&gt;) before, and the flags registered after the call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a9dcf7c66b4d107eafe56eefaa690e9cfc9c0f" translate="yes" xml:space="preserve">
          <source>Adds a separator, with an optional header message, that will be used to print the help. The seperator is placed between the flags registered (&lt;code&gt;&lt;a href=&quot;optionparser#on(short_flag:String,long_flag:String,description:String,&amp;amp;block:String-%3E)-instance-method&quot;&gt;#on&lt;/a&gt;&lt;/code&gt;) before, and the flags registered after the call.</source>
          <target state="translated">添加一个带有可选标题消息的分隔符，该分隔符将用于打印帮助。分隔符位于 &lt;code&gt;&lt;a href=&quot;optionparser#on(short_flag:String,long_flag:String,description:String,&amp;amp;block:String-%3E)-instance-method&quot;&gt;#on&lt;/a&gt;&lt;/code&gt; 之前注册的标志（#on）和调用之后注册的标志之间。</target>
        </trans-unit>
        <trans-unit id="901103f61dabee539e9f0e5120c408f494d294cc" translate="yes" xml:space="preserve">
          <source>Adds a temporary ECDH key curve to the TLS context.</source>
          <target state="translated">为TLS上下文添加一个临时的ECDH密钥曲线。</target>
        </trans-unit>
        <trans-unit id="018abadec4aba8a2af804a968ee16459f6a95f34" translate="yes" xml:space="preserve">
          <source>Adds a temporary ECDH key curve to the TLS context. This is required to enable the EECDH cipher suites. By default the prime256 curve will be used.</source>
          <target state="translated">在TLS上下文中添加一个临时的ECDH密钥曲线。这是启用ECDH加密套件所必需的。默认情况下,会使用 prime256 曲线。</target>
        </trans-unit>
        <trans-unit id="ff111c813e05bbce43214f568bb9041aaf59e25f" translate="yes" xml:space="preserve">
          <source>Adds all of the given &lt;em&gt;values&lt;/em&gt; as key-value pairs to the params being built.</source>
          <target state="translated">将所有给定&lt;em&gt;值&lt;/em&gt;作为键值对添加到要构建的参数中。</target>
        </trans-unit>
        <trans-unit id="693b3697255ff02fcd1c0e850a87362f4dd9196b" translate="yes" xml:space="preserve">
          <source>Adds all results of the passed block for each element in the collection.</source>
          <target state="translated">为集合中的每个元素添加所传递的块的所有结果。</target>
        </trans-unit>
        <trans-unit id="e184d976c847d1c787e6a1daac38ff6851607acc" translate="yes" xml:space="preserve">
          <source>Adds all the elements in the collection together.</source>
          <target state="translated">将集合中的所有元素加在一起。</target>
        </trans-unit>
        <trans-unit id="034d96a3550e70d4e980e64ed449d7df856ac452" translate="yes" xml:space="preserve">
          <source>Adds an entry and yields &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to write that entry's contents.</source>
          <target state="translated">添加一个条目并产生 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 以写入该条目的内容。</target>
        </trans-unit>
        <trans-unit id="d95d3b1254f479e05599544274812f706d9d4ca8" translate="yes" xml:space="preserve">
          <source>Adds an entry and yields &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to write that entry's contents.</source>
          <target state="translated">添加一个条目并产生 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 以写入该条目的内容。</target>
        </trans-unit>
        <trans-unit id="01e34b0797aa5748b17b912557a1cde8c1a455af" translate="yes" xml:space="preserve">
          <source>Adds an entry that will have &lt;em&gt;bytes&lt;/em&gt; as its contents.</source>
          <target state="translated">添加一个条目，该条目将以&lt;em&gt;字节&lt;/em&gt;为内容。</target>
        </trans-unit>
        <trans-unit id="bc0ef49094b215deec3cc52408b126807dc0bbd2" translate="yes" xml:space="preserve">
          <source>Adds an entry that will have &lt;em&gt;string&lt;/em&gt; as its contents.</source>
          <target state="translated">添加一个将&lt;em&gt;字符串&lt;/em&gt;作为其内容的条目。</target>
        </trans-unit>
        <trans-unit id="5cea71f7c67569bacd42bb3d67eee2842efd9e32" translate="yes" xml:space="preserve">
          <source>Adds an entry that will have its data copied from the given &lt;em&gt;data&lt;/em&gt;.</source>
          <target state="translated">添加一个条目，该条目将从给定&lt;em&gt;数据中&lt;/em&gt;复制其&lt;em&gt;数据&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a7c4157fdd3445881927fcae7436435d397b5633" translate="yes" xml:space="preserve">
          <source>Adds an entry that will have its data copied from the given &lt;em&gt;data&lt;/em&gt;. If the given &lt;em&gt;data&lt;/em&gt; is a &lt;code&gt;&lt;a href=&quot;../../file&quot;&gt;::File&lt;/a&gt;&lt;/code&gt;, it is automatically closed after data is copied from it.</source>
          <target state="translated">添加一个条目，该条目将从给定&lt;em&gt;数据中&lt;/em&gt;复制其&lt;em&gt;数据&lt;/em&gt;。如果给定的&lt;em&gt;数据&lt;/em&gt;是 &lt;code&gt;&lt;a href=&quot;../../file&quot;&gt;::File&lt;/a&gt;&lt;/code&gt; ，则从中复制数据后它将自动关闭。</target>
        </trans-unit>
        <trans-unit id="0fc220a2b0450e33386560fcbaa578c4eb818b5d" translate="yes" xml:space="preserve">
          <source>Adds an entry that will have its data copied from the given &lt;em&gt;data&lt;/em&gt;. If the given &lt;em&gt;data&lt;/em&gt; is a &lt;code&gt;&lt;a href=&quot;../file&quot;&gt;::File&lt;/a&gt;&lt;/code&gt;, it is automatically closed after data is copied from it.</source>
          <target state="translated">添加一个条目，该条目将从给定&lt;em&gt;数据中&lt;/em&gt;复制其&lt;em&gt;数据&lt;/em&gt;。如果给定的&lt;em&gt;数据&lt;/em&gt;是 &lt;code&gt;&lt;a href=&quot;../file&quot;&gt;::File&lt;/a&gt;&lt;/code&gt; ，则从中复制数据后它将自动关闭。</target>
        </trans-unit>
        <trans-unit id="f246133ae9dcd9c3ce16ed1a29d11067182d5ca4" translate="yes" xml:space="preserve">
          <source>Adds an entry that will have the given &lt;em&gt;filename&lt;/em&gt; and current time (&lt;code&gt;&lt;a href=&quot;../../time#utc:Time-class-method&quot;&gt;Time.utc&lt;/a&gt;&lt;/code&gt;) and yields an &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to write that entry's contents.</source>
          <target state="translated">添加具有给定&lt;em&gt;文件名&lt;/em&gt;和当前时间（ &lt;code&gt;&lt;a href=&quot;../../time#utc:Time-class-method&quot;&gt;Time.utc&lt;/a&gt;&lt;/code&gt; ）的条目，并产生一个 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 以写入该条目的内容。</target>
        </trans-unit>
        <trans-unit id="4b5b684cb763866a93371db2eb599d6fff22d2f7" translate="yes" xml:space="preserve">
          <source>Adds an entry that will have the given &lt;em&gt;filename&lt;/em&gt; and current time (&lt;code&gt;&lt;a href=&quot;../time#utc:Time-class-method&quot;&gt;Time.utc&lt;/a&gt;&lt;/code&gt;) and yields an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to write that entry's contents.</source>
          <target state="translated">添加具有给定&lt;em&gt;文件名&lt;/em&gt;和当前时间（ &lt;code&gt;&lt;a href=&quot;../time#utc:Time-class-method&quot;&gt;Time.utc&lt;/a&gt;&lt;/code&gt; ）的条目，并产生一个 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 以写入该条目的内容。</target>
        </trans-unit>
        <trans-unit id="01643e4428b9393982f4d7194b8861725e827b9d" translate="yes" xml:space="preserve">
          <source>Adds an item to the beginning of the deque.</source>
          <target state="translated">在deque的开头添加一个项目。</target>
        </trans-unit>
        <trans-unit id="d9ffba15c256997925ce4a918f654b6276fcf2ca" translate="yes" xml:space="preserve">
          <source>Adds an item to the end of the deque.</source>
          <target state="translated">在deque的末尾添加一个项目。</target>
        </trans-unit>
        <trans-unit id="8067a23c99d370d02058359e6ed00c5ca184a68a" translate="yes" xml:space="preserve">
          <source>Adds code to be benchmarked</source>
          <target state="translated">添加基准代码</target>
        </trans-unit>
        <trans-unit id="a311fb2053fe630bef7ef857f627ca101ebdbf6f" translate="yes" xml:space="preserve">
          <source>Adds instances of &lt;em&gt;char&lt;/em&gt; to left and right of the string until it is at least size of &lt;em&gt;len&lt;/em&gt;, then appends the result to the given IO.</source>
          <target state="translated">将&lt;em&gt;char&lt;/em&gt;实例添加到字符串的左右，直到其大小至少为&lt;em&gt;len&lt;/em&gt;，然后将结果附加到给定的IO。</target>
        </trans-unit>
        <trans-unit id="d983cdbf6e6206217526c19e3f2383483ff362dd" translate="yes" xml:space="preserve">
          <source>Adds instances of &lt;em&gt;char&lt;/em&gt; to left and right of the string until it is at least size of &lt;em&gt;len&lt;/em&gt;.</source>
          <target state="translated">将&lt;em&gt;char&lt;/em&gt;实例添加到字符串的左右，直到其大小至少为&lt;em&gt;len&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="8f8c6c234c49b2897c414279ae7491afab7ab956" translate="yes" xml:space="preserve">
          <source>Adds instances of &lt;em&gt;char&lt;/em&gt; to left of the string until it is at least size of &lt;em&gt;len&lt;/em&gt;, and then appends the result to the given IO.</source>
          <target state="translated">将&lt;em&gt;char&lt;/em&gt;实例添加到字符串的左侧，直到其大小至少为&lt;em&gt;len&lt;/em&gt;，然后将结果附加到给定的IO。</target>
        </trans-unit>
        <trans-unit id="e45778df2f6d4a3af80097e904d2d389f747059c" translate="yes" xml:space="preserve">
          <source>Adds instances of &lt;em&gt;char&lt;/em&gt; to left of the string until it is at least size of &lt;em&gt;len&lt;/em&gt;.</source>
          <target state="translated">将&lt;em&gt;char&lt;/em&gt;实例添加到字符串的左侧，直到其大小至少为&lt;em&gt;len&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e4224fd44487766f1cf14deae226e6612f20641c" translate="yes" xml:space="preserve">
          <source>Adds instances of &lt;em&gt;char&lt;/em&gt; to left ond right of the string until it is at least size of &lt;em&gt;len&lt;/em&gt;, then appends the result to the given IO.</source>
          <target state="translated">将&lt;em&gt;char&lt;/em&gt;实例添加到字符串的左至右，直到其大小至少为&lt;em&gt;len&lt;/em&gt;，然后将结果附加到给定的IO。</target>
        </trans-unit>
        <trans-unit id="c76b19d547304ff3618b8fd45cb3da4776834448" translate="yes" xml:space="preserve">
          <source>Adds instances of &lt;em&gt;char&lt;/em&gt; to right of the string until it is at least size of &lt;em&gt;len&lt;/em&gt;, and then appends the result to the given IO.</source>
          <target state="translated">将&lt;em&gt;char&lt;/em&gt;实例添加到字符串的右边，直到其大小至少为&lt;em&gt;len&lt;/em&gt;，然后将结果附加到给定的IO。</target>
        </trans-unit>
        <trans-unit id="b8d4805444379ae71e34a50807eecdd919b1c64b" translate="yes" xml:space="preserve">
          <source>Adds instances of &lt;em&gt;char&lt;/em&gt; to right of the string until it is at least size of &lt;em&gt;len&lt;/em&gt;.</source>
          <target state="translated">将&lt;em&gt;char&lt;/em&gt;实例添加到字符串的右边，直到其大小至少为&lt;em&gt;len&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="8bde8316220f187a646ab14e619c9a8424824ba9" translate="yes" xml:space="preserve">
          <source>Adds modes to the TLS context.</source>
          <target state="translated">为TLS上下文添加模式。</target>
        </trans-unit>
        <trans-unit id="7fa766820c32b1024ee3657014a4edfaa1ea07aa" translate="yes" xml:space="preserve">
          <source>Adds options to the TLS context.</source>
          <target state="translated">为TLS上下文添加选项。</target>
        </trans-unit>
        <trans-unit id="ea52fa6fe6d4cbd2cb037eeaeb401e8398993fd2" translate="yes" xml:space="preserve">
          <source>Adds or replaces a key.</source>
          <target state="translated">添加或更换钥匙。</target>
        </trans-unit>
        <trans-unit id="51d54ac72461a8dcd15b0c0356ec659ecc143be2" translate="yes" xml:space="preserve">
          <source>Adds spaces to left and right of the string until it is at least size of &lt;em&gt;len&lt;/em&gt;, then appends the result to the given IO.</source>
          <target state="translated">在字符串的左侧和右侧添加空格，直到其大小至少为&lt;em&gt;len&lt;/em&gt;，然后将结果附加到给定的IO。</target>
        </trans-unit>
        <trans-unit id="e119d14f1eb7a9d9a31efc80f839866130ae2b72" translate="yes" xml:space="preserve">
          <source>Adds spaces to left of the string until it is at least size of &lt;em&gt;len&lt;/em&gt;, and then appends the result to the given IO.</source>
          <target state="translated">在字符串的左侧添加空格，直到其大小至少为&lt;em&gt;len&lt;/em&gt;，然后将结果附加到给定的IO。</target>
        </trans-unit>
        <trans-unit id="a3f6eb1782e0f7b5913e080e461b051d671d1bfc" translate="yes" xml:space="preserve">
          <source>Adds spaces to right of the string until it is at least size of &lt;em&gt;len&lt;/em&gt;, and then appends the result to the given IO.</source>
          <target state="translated">在字符串的右边添加空格，直到其大小至少为&lt;em&gt;len&lt;/em&gt;，然后将结果附加到给定的IO。</target>
        </trans-unit>
        <trans-unit id="6855f7e9996a888610a9b1ac3bc082e87b7534cc" translate="yes" xml:space="preserve">
          <source>Adds the contents of &lt;em&gt;other&lt;/em&gt; to this hash.</source>
          <target state="translated">将&lt;em&gt;其他&lt;/em&gt;的内容添加到此哈希中。</target>
        </trans-unit>
        <trans-unit id="8263aa4cd495c14ea138e70dea06c5ad2caf001f" translate="yes" xml:space="preserve">
          <source>Adds the contents of &lt;em&gt;other&lt;/em&gt; to this hash. If a key exists in both hashes, the given block is called to determine the value to be used. The block arguments are the key, the value in &lt;code&gt;self&lt;/code&gt; and the value in &lt;em&gt;other&lt;/em&gt;.</source>
          <target state="translated">将&lt;em&gt;其他&lt;/em&gt;的内容添加到此哈希中。如果两个哈希中都存在键，则调用给定的块来确定要使用的值。块参数是键， &lt;code&gt;self&lt;/code&gt; 中的值和&lt;em&gt;other中&lt;/em&gt;的值。</target>
        </trans-unit>
        <trans-unit id="fcb106d887035e9402f207d331c5671d345ebe00" translate="yes" xml:space="preserve">
          <source>Adds the given &lt;em&gt;cookie&lt;/em&gt; to this collection, overrides an existing cookie with the same name if present.</source>
          <target state="translated">将给定的&lt;em&gt;cookie&lt;/em&gt;添加到此集合中，并覆盖具有相同名称的现有cookie（如果存在）。</target>
        </trans-unit>
        <trans-unit id="a92142c11fb7ff7fbed13a72d98c23d2e4912952" translate="yes" xml:space="preserve">
          <source>Adds the value of &lt;code&gt;self&lt;/code&gt; to &lt;em&gt;other&lt;/em&gt;.</source>
          <target state="translated">将 &lt;code&gt;self&lt;/code&gt; 的价值加到&lt;em&gt;他人&lt;/em&gt;身上。</target>
        </trans-unit>
        <trans-unit id="1a8d0f1b23f6d0ff7d9534804956dd9a0935bfb4" translate="yes" xml:space="preserve">
          <source>Adds this fiber to the scheduler's runnables queue for the current thread.</source>
          <target state="translated">将此光纤添加到当前线程的调度器可运行队列中。</target>
        </trans-unit>
        <trans-unit id="15916ea228038978ff5e724cafbd80324fd51736" translate="yes" xml:space="preserve">
          <source>Adler32</source>
          <target state="translated">Adler32</target>
        </trans-unit>
        <trans-unit id="e71d2531eb91cb5e337846e6a84bba8b0ff185cf" translate="yes" xml:space="preserve">
          <source>Adler32.checksum</source>
          <target state="translated">Adler32.checksum</target>
        </trans-unit>
        <trans-unit id="b5336673c1953a249daa3811ccab80fbb81501bc" translate="yes" xml:space="preserve">
          <source>Adler32.combine</source>
          <target state="translated">Adler32.combine</target>
        </trans-unit>
        <trans-unit id="b6db2690c2efffaf25ae9e3fe856247f60787039" translate="yes" xml:space="preserve">
          <source>Adler32.initial</source>
          <target state="translated">Adler32.initial</target>
        </trans-unit>
        <trans-unit id="0500977f0ed01a05bbe55ed97584f352577c552c" translate="yes" xml:space="preserve">
          <source>Adler32.update</source>
          <target state="translated">Adler32.update</target>
        </trans-unit>
        <trans-unit id="4fc1fe471571043082f5d462ba8ff3d264b415b7" translate="yes" xml:space="preserve">
          <source>Advanced the cursor to the next row.</source>
          <target state="translated">将光标推进到下一行。</target>
        </trans-unit>
        <trans-unit id="080980327c1286649958fbdedbd4d8d6fdafeb07" translate="yes" xml:space="preserve">
          <source>Advanced the cursor to the next row. Must be called once to position the cursor in the first row. Returns &lt;code&gt;true&lt;/code&gt; if a next row was found, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">将光标前进到下一行。必须被调用一次才能将光标定位在第一行。如果找到下一行，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="107f0d8c314c4e16d0fa72d66886ef5a170ef00d" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;commit&lt;/code&gt; or &lt;code&gt;rollback&lt;/code&gt; are used, the transaction is no longer usable. The connection is still open but any statement will be performed outside the context of the terminated transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f5415b1fb7be631b467a986eaba1158f241d60" translate="yes" xml:space="preserve">
          <source>After a file from &lt;code&gt;&lt;a href=&quot;toplevel#ARGV&quot;&gt;ARGV&lt;/a&gt;&lt;/code&gt; has been read, it's removed from &lt;code&gt;&lt;a href=&quot;toplevel#ARGV&quot;&gt;ARGV&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">读取 &lt;code&gt;&lt;a href=&quot;toplevel#ARGV&quot;&gt;ARGV&lt;/a&gt;&lt;/code&gt; 中的文件后，会将其从 &lt;code&gt;&lt;a href=&quot;toplevel#ARGV&quot;&gt;ARGV&lt;/a&gt;&lt;/code&gt; 中删除。</target>
        </trans-unit>
        <trans-unit id="7ada52a363361796458f62d6500a608f177e10c0" translate="yes" xml:space="preserve">
          <source>After an &lt;code&gt;if&lt;/code&gt;, a variable&amp;rsquo;s type depends on the type of the expressions used in both branches.</source>
          <target state="translated">在 &lt;code&gt;if&lt;/code&gt; 之后，变量的类型取决于两个分支中使用的表达式的类型。</target>
        </trans-unit>
        <trans-unit id="76a1a524879c90d98cccf859c86a05101364e13f" translate="yes" xml:space="preserve">
          <source>After defining all server sockets to listen to, the server can be started by calling &lt;code&gt;&lt;a href=&quot;server#listen-instance-method&quot;&gt;#listen&lt;/a&gt;&lt;/code&gt;. This call blocks until the server is closed.</source>
          <target state="translated">定义所有要监听的服务器套接字后，可以通过调用 &lt;code&gt;&lt;a href=&quot;server#listen-instance-method&quot;&gt;#listen&lt;/a&gt;&lt;/code&gt; 来启动服务器。该调用将阻塞，直到服务器关闭。</target>
        </trans-unit>
        <trans-unit id="456ebce51f188a175dd39dcf531587d1e4d15e11" translate="yes" xml:space="preserve">
          <source>After executing this, whenever the current process receives the corresponding signal, the passed function will be called (instead of the OS default). The handler will run in a signal-safe fiber thought the event loop; there is no limit to what functions can be called, unlike raw signals that run on the sigaltstack.</source>
          <target state="translated">执行此操作后,每当当前进程接收到相应的信号,就会调用所传递的函数(而不是操作系统默认的)。处理程序将在一个信号安全的光纤以为事件循环中运行;与运行在sigaltstack上的原始信号不同,对可以调用的函数没有限制。</target>
        </trans-unit>
        <trans-unit id="5efc4f099b41763341b378f490f1b69e8800a0aa" translate="yes" xml:space="preserve">
          <source>After reading a next entry, previous entries can no longer be read (their &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; will be closed.)</source>
          <target state="translated">读取下一个条目后，将无法再读取以前的条目（它们的 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 将关闭）。</target>
        </trans-unit>
        <trans-unit id="cfe962cfba01b8b0290927eddfc10ddc59ef7db9" translate="yes" xml:space="preserve">
          <source>After reading a next entry, previous entries can no longer be read (their &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; will be closed.)</source>
          <target state="translated">读取下一个条目后，将无法再读取以前的条目（它们的 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 将被关闭。）</target>
        </trans-unit>
        <trans-unit id="2c8c3190651c333c9f0e111e1830d4d7d35a246d" translate="yes" xml:space="preserve">
          <source>After returning from the block the builder is closed.</source>
          <target state="translated">从区块返回后,建造者被关闭。</target>
        </trans-unit>
        <trans-unit id="c67b74e67fad7fb932a59a3406ea19d4c87b7342" translate="yes" xml:space="preserve">
          <source>After the heredoc identifier, and in that same line, anything that follows continues the original expression that came before the heredoc. It's as if the end of the starting heredoc identifier is the end of the string. However, the string contents come in subsequent lines until the ending heredoc idenfitier which must be on its own line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644f5434d333830616c753afb304d49e6cc6e5c8" translate="yes" xml:space="preserve">
          <source>Ah! We should have known better: the type of the user input is the &lt;a href=&quot;../syntax_and_semantics/type_grammar&quot;&gt;union type&lt;/a&gt;&lt;code&gt;String | Nil&lt;/code&gt;. So, we have to test for &lt;code&gt;Nil&lt;/code&gt; and for &lt;code&gt;empty&lt;/code&gt; and act naturally for each case:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f529b1960a043cc6711a552db447cda6e3e80ce6" translate="yes" xml:space="preserve">
          <source>Ah! We should have known better: the type of the user input is the &lt;a href=&quot;https://crystal-lang.org/reference/syntax_and_semantics/type_grammar.html&quot;&gt;union type&lt;/a&gt;&lt;code&gt;String | Nil&lt;/code&gt;. So, we have to test for &lt;code&gt;Nil&lt;/code&gt; and for &lt;code&gt;empty&lt;/code&gt; and act naturally for each case:</source>
          <target state="translated">啊! 我们应该更好地了解：用户输入的&lt;a href=&quot;https://crystal-lang.org/reference/syntax_and_semantics/type_grammar.html&quot;&gt;类型&lt;/a&gt;是联合类型 &lt;code&gt;String | Nil&lt;/code&gt; 。因此，我们必须测试 &lt;code&gt;Nil&lt;/code&gt; 和是否为 &lt;code&gt;empty&lt;/code&gt; 并针对每种情况自然采取行动：</target>
        </trans-unit>
        <trans-unit id="02f02485ab679a9031f461bdbd3edab48ea42a79" translate="yes" xml:space="preserve">
          <source>Algorithm</source>
          <target state="translated">Algorithm</target>
        </trans-unit>
        <trans-unit id="c5ca6b8852e8e949362173f34c02d1cc72c8a08e" translate="yes" xml:space="preserve">
          <source>Algorithm#md4?</source>
          <target state="translated">Algorithm#md4?</target>
        </trans-unit>
        <trans-unit id="eb358e5c2ea58e9b72a8892cb893d10e88824fdc" translate="yes" xml:space="preserve">
          <source>Algorithm#md5?</source>
          <target state="translated">Algorithm#md5?</target>
        </trans-unit>
        <trans-unit id="fc55fd3c0ed3fd9b9be0124d6d110a60ed783a57" translate="yes" xml:space="preserve">
          <source>Algorithm#ripemd160?</source>
          <target state="translated">Algorithm#ripemd160?</target>
        </trans-unit>
        <trans-unit id="8fd08606e8a22e8cd5c35560317d04efcd637904" translate="yes" xml:space="preserve">
          <source>Algorithm#sha1?</source>
          <target state="translated">Algorithm#sha1?</target>
        </trans-unit>
        <trans-unit id="7ee86ef55787f0edec0476b77ee03ef91d15b3d8" translate="yes" xml:space="preserve">
          <source>Algorithm#sha224?</source>
          <target state="translated">Algorithm#sha224?</target>
        </trans-unit>
        <trans-unit id="2e9152e688f25664b7644d5c782ae8dfcf8f40a1" translate="yes" xml:space="preserve">
          <source>Algorithm#sha256?</source>
          <target state="translated">Algorithm#sha256?</target>
        </trans-unit>
        <trans-unit id="4ee02bae4327ee5051e01562d9c2a51e6fcef88a" translate="yes" xml:space="preserve">
          <source>Algorithm#sha384?</source>
          <target state="translated">Algorithm#sha384?</target>
        </trans-unit>
        <trans-unit id="02b5846a9f8a96ab736c2838fdbcb0130f4169b8" translate="yes" xml:space="preserve">
          <source>Algorithm#sha512?</source>
          <target state="translated">Algorithm#sha512?</target>
        </trans-unit>
        <trans-unit id="5d1449c162d387e37dd0da2c4ca887903d7fadf7" translate="yes" xml:space="preserve">
          <source>Algorithm#to_evp</source>
          <target state="translated">Algorithm#to_evp</target>
        </trans-unit>
        <trans-unit id="36de75e90e74736595f32f9b45c1bc89f6b64db7" translate="yes" xml:space="preserve">
          <source>Alias Definition</source>
          <target state="translated">别名定义</target>
        </trans-unit>
        <trans-unit id="5554774377a2bceb2be81fa0e4a1db1cc76a4ffd" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;&lt;a href=&quot;deque#push(value:T)-instance-method&quot;&gt;#push&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;deque#push(value:T)-instance-method&quot;&gt;#push&lt;/a&gt;&lt;/code&gt; 的别名。</target>
        </trans-unit>
        <trans-unit id="4ba64c38d09841505e86a4e534f3786690c02d4e" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;&lt;a href=&quot;dir#new(path)-class-method&quot;&gt;.new(path)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;dir#new(path)-class-method&quot;&gt;.new(path)&lt;/a&gt;&lt;/code&gt; 别名</target>
        </trans-unit>
        <trans-unit id="38885b9fca0bfdddecc26a751fe157e0e5c55048" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;&lt;a href=&quot;dir#new(path:Path%7CString)-class-method&quot;&gt;.new(path)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;dir#new(path:Path%7CString)-class-method&quot;&gt;.new(path)&lt;/a&gt;&lt;/code&gt; 别名</target>
        </trans-unit>
        <trans-unit id="881afbbe1bf94a918d577d8b10f3703a35216ed0" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;&lt;a href=&quot;set#add(object:T)-instance-method&quot;&gt;#add&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;set#add(object:T)-instance-method&quot;&gt;#add&lt;/a&gt;&lt;/code&gt; 的别名</target>
        </trans-unit>
        <trans-unit id="c54cc3d003cd569fb9a4f9b894a013c93ba015b6" translate="yes" xml:space="preserve">
          <source>Alias of &lt;code&gt;&lt;a href=&quot;iterator#each_slice(n,reuse=false)-instance-method&quot;&gt;#each_slice&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;iterator#each_slice(n,reuse=false)-instance-method&quot;&gt;#each_slice&lt;/a&gt;&lt;/code&gt; 的别名。</target>
        </trans-unit>
        <trans-unit id="561bfd549530fe95f6336c6d13be1dbb9b694a2e" translate="yes" xml:space="preserve">
          <source>Alias of &lt;code&gt;&lt;a href=&quot;set#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;set#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; 的别名。</target>
        </trans-unit>
        <trans-unit id="26d019919a51bd05d800bef4ce0b4346e7e2ba89" translate="yes" xml:space="preserve">
          <source>Alias of &lt;code&gt;&lt;a href=&quot;span#abs:Time::Span-instance-method&quot;&gt;#abs&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;span#abs:Time::Span-instance-method&quot;&gt;#abs&lt;/a&gt;&lt;/code&gt; 的别名。</target>
        </trans-unit>
        <trans-unit id="ab6c4cc1f9c142f328fe3457a8ca15f079749348" translate="yes" xml:space="preserve">
          <source>Alias of &lt;code&gt;&lt;a href=&quot;span#total_seconds:Float64-instance-method&quot;&gt;#total_seconds&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;span#total_seconds:Float64-instance-method&quot;&gt;#total_seconds&lt;/a&gt;&lt;/code&gt; 的别名。</target>
        </trans-unit>
        <trans-unit id="c9ef9d5993ccf1df02b48435c3895d21ddf8607c" translate="yes" xml:space="preserve">
          <source>Aliases are useful to avoid writing long type names, but also to be able to talk about recursive types:</source>
          <target state="translated">别名是有用的,可以避免写长类型名,也可以谈论递归类型。</target>
        </trans-unit>
        <trans-unit id="5b79de3b5277bd7c674bda8bb07677ff281eb536" translate="yes" xml:space="preserve">
          <source>All &quot;emitting&quot; methods support specifying a &quot;reference&quot; object that will be associated to the emitted object, so that when that reference object is emitted again an anchor and an alias will be created. This generates both more compact documents and allows handling recursive data structures.</source>
          <target state="translated">所有的 &quot;发射 &quot;方法都支持指定一个 &quot;引用 &quot;对象,该对象将与发射对象相关联,因此当该引用对象再次被发射时,将创建一个锚和一个别名。这样既能生成更紧凑的文档,又能处理递归的数据结构。</target>
        </trans-unit>
        <trans-unit id="1b5d4892d7a84ca2fc2f6db42011b2bcae1bdef7" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../operators&quot;&gt;Crystal operators&lt;/a&gt; can be used as symbol names unquoted:</source>
          <target state="translated">所有&lt;a href=&quot;../operators&quot;&gt;Crystal运算符&lt;/a&gt;都可以用作未引用的符号名称：</target>
        </trans-unit>
        <trans-unit id="7d2bb16d4fc86fd3ba3cf30ad270e37eec4bd5d3" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;files&lt;/code&gt; arguments are concatenated into a single Crystal source. If an argument points to a folder, all spec files inside that folder are appended. If no &lt;code&gt;files&lt;/code&gt; argument is provided, the default is &lt;code&gt;./spec&lt;/code&gt;. A filename can be suffixed by &lt;code&gt;:&lt;/code&gt; and a line number, providing this location to the &lt;code&gt;--location&lt;/code&gt; runner option (see below).</source>
          <target state="translated">所有 &lt;code&gt;files&lt;/code&gt; 参数都串联到单个Crystal源中。如果参数指向一个文件夹，则将附加该文件夹内的所有规范文件。如果未提供 &lt;code&gt;files&lt;/code&gt; 参数，则默认值为 &lt;code&gt;./spec&lt;/code&gt; 。文件名可以以 &lt;code&gt;:&lt;/code&gt; 和行号作为后缀，将此位置提供给 &lt;code&gt;--location&lt;/code&gt; Runner选项（请参见下文）。</target>
        </trans-unit>
        <trans-unit id="147132909f87e37fee2ac58b103ae59adbed2a64" translate="yes" xml:space="preserve">
          <source>All My CLI: The complete application!</source>
          <target state="translated">我所有的CLI:完整的应用</target>
        </trans-unit>
        <trans-unit id="67f6116292328f74371e84d7c7df2bdc08649f4a" translate="yes" xml:space="preserve">
          <source>All arguments can also be specified, in addition to their position, by their name. For example:</source>
          <target state="translated">所有的参数除了位置外,还可以通过名称来指定。例如:</target>
        </trans-unit>
        <trans-unit id="3f29e64b69bc02399ec156ed9f73c73f3838890c" translate="yes" xml:space="preserve">
          <source>All available methods to perform statements in a database are defined in &lt;code&gt;DB::QueryMethods&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;DB::QueryMethods&lt;/code&gt; 中定义了在数据库中执行语句的所有可用方法。</target>
        </trans-unit>
        <trans-unit id="6b7afe9da79758753126f06d6a17c3742190bf58" translate="yes" xml:space="preserve">
          <source>All capture groups in the patterns after the first one will have their indexes offset.</source>
          <target state="translated">在第一个图案之后的所有捕捉组都会有其索引的偏移。</target>
        </trans-unit>
        <trans-unit id="b0f6bb156f1c69a27f6b520d1cae954ab6dea71a" translate="yes" xml:space="preserve">
          <source>All capture groups in the second operand will have their indexes offset.</source>
          <target state="translated">第二个操作数中的所有捕获组都会有它们的索引偏移。</target>
        </trans-unit>
        <trans-unit id="798d3f9fc024b57f612dfb0b22080ea85ad43e25" translate="yes" xml:space="preserve">
          <source>All elements in &lt;code&gt;self&lt;/code&gt; are returned in the Array. If matching elements in &lt;em&gt;others&lt;/em&gt; are missing (because they don't have that many elements) &lt;code&gt;nil&lt;/code&gt; is returned inside that tuple index.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 中的所有元素都将在Array中返回。如果缺少&lt;em&gt;其他&lt;/em&gt;元素中的匹配元素（因为它们没有太多元素），则在该元组索引内返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e854558d081a3c00feefe4bce3c02398e982abf1" translate="yes" xml:space="preserve">
          <source>All enums inherit from &lt;a href=&quot;http://crystal-lang.org/api/Enum.html&quot;&gt;Enum&lt;/a&gt;.</source>
          <target state="translated">所有枚举都继承自&lt;a href=&quot;http://crystal-lang.org/api/Enum.html&quot;&gt;Enum&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="06d5b5079d41a14aedd696bf9c886ce1774fe6fc" translate="yes" xml:space="preserve">
          <source>All of the above macro calls work because we invoked &lt;code&gt;&lt;a href=&quot;macroid#id:MacroId-instance-method&quot;&gt;#id&lt;/a&gt;&lt;/code&gt;, and the generated code looks like this:</source>
          <target state="translated">上面的所有宏调用均有效，因为我们调用了 &lt;code&gt;&lt;a href=&quot;macroid#id:MacroId-instance-method&quot;&gt;#id&lt;/a&gt;&lt;/code&gt; ，并且生成的代码如下所示：</target>
        </trans-unit>
        <trans-unit id="ac497d2444a21830bb415d65149d4e4653dcda94" translate="yes" xml:space="preserve">
          <source>All of the elements in &lt;code&gt;self&lt;/code&gt; will be yielded: if &lt;em&gt;others&lt;/em&gt; don't have that many elements they will be returned as &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 中的所有元素都会被屈服：如果&lt;em&gt;其他&lt;/em&gt;元素没有那么多元素，它们将被返回为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="86c33a013a38503d180dc530e1d4c9e41181e785" translate="yes" xml:space="preserve">
          <source>All options following the command are delegated to &lt;code&gt;crystal build&lt;/code&gt;.</source>
          <target state="translated">命令之后的所有选项都委托给 &lt;code&gt;crystal build&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="194ffce81d913e0a566bf3059ee003225e5d6a92" translate="yes" xml:space="preserve">
          <source>All possible &lt;code&gt;&lt;a href=&quot;../value&quot;&gt;Log::Metadata::Value&lt;/a&gt;&lt;/code&gt; types.</source>
          <target state="translated">所有可能的 &lt;code&gt;&lt;a href=&quot;../value&quot;&gt;Log::Metadata::Value&lt;/a&gt;&lt;/code&gt; 类型。</target>
        </trans-unit>
        <trans-unit id="3f2cfd65cbfd1faf677d949bc828a8ef1bb77188" translate="yes" xml:space="preserve">
          <source>All possible JSON types.</source>
          <target state="translated">所有可能的JSON类型。</target>
        </trans-unit>
        <trans-unit id="77075eee9ec76735b54b70081dc9d0e704e51651" translate="yes" xml:space="preserve">
          <source>All the children, which can be &lt;code&gt;describe&lt;/code&gt;/&lt;code&gt;context&lt;/code&gt; or &lt;code&gt;it&lt;/code&gt;</source>
          <target state="translated">所有的孩子，可以 &lt;code&gt;describe&lt;/code&gt; / &lt;code&gt;context&lt;/code&gt; 或 &lt;code&gt;it&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ee63a6d12abfaf8de9d49dcebba298586126ea4" translate="yes" xml:space="preserve">
          <source>All the other object keys are skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19dd47d07b264e76cbaa4bdb100d28ce6f17142" translate="yes" xml:space="preserve">
          <source>All transformations assume the receiver (&lt;code&gt;a&lt;/code&gt;) is a variable. If it is a call, the replacements are semantically equivalent but the implementation is a bit more complex (introducing an anonymous temporary variable) and expects &lt;code&gt;a=&lt;/code&gt; to be callable.</source>
          <target state="translated">所有转换均假设接收方（ &lt;code&gt;a&lt;/code&gt; ）是变量。如果是调用，则替换在语义上是等效的，但实现有点复杂（引入了匿名临时变量），并期望 &lt;code&gt;a=&lt;/code&gt; 是可调用的。</target>
        </trans-unit>
        <trans-unit id="52353774126be868b80022f03c558bbd5cdc0d78" translate="yes" xml:space="preserve">
          <source>All valid YAML core schema types.</source>
          <target state="translated">所有有效的YAML核心模式类型。</target>
        </trans-unit>
        <trans-unit id="55676b525f360c6bd3c024ef63960a1a1481d331" translate="yes" xml:space="preserve">
          <source>Allocates &lt;code&gt;size * sizeof(T)&lt;/code&gt; bytes from the system's heap initialized to &lt;em&gt;value&lt;/em&gt; and returns a pointer to the first byte from that memory.</source>
          <target state="translated">从系统堆中分配 &lt;code&gt;size * sizeof(T)&lt;/code&gt; 个字节，并将其初始化为&lt;em&gt;value，&lt;/em&gt;并返回指向该内存中第一个字节的指针。</target>
        </trans-unit>
        <trans-unit id="815858c07d60bc4a1508b7d27ce8a80c12ab0148" translate="yes" xml:space="preserve">
          <source>Allocates &lt;code&gt;size * sizeof(T)&lt;/code&gt; bytes from the system's heap initialized to &lt;em&gt;value&lt;/em&gt; and returns a pointer to the first byte from that memory. The memory is allocated by the &lt;code&gt;&lt;a href=&quot;gc&quot;&gt;GC&lt;/a&gt;&lt;/code&gt;, so when there are no pointers to this memory, it will be automatically freed.</source>
          <target state="translated">从系统堆中分配 &lt;code&gt;size * sizeof(T)&lt;/code&gt; 个字节，并将其初始化为&lt;em&gt;value，&lt;/em&gt;并返回指向该内存中第一个字节的指针。内存是由 &lt;code&gt;&lt;a href=&quot;gc&quot;&gt;GC&lt;/a&gt;&lt;/code&gt; 分配的，因此当没有指向该内存的指针时，它将自动释放。</target>
        </trans-unit>
        <trans-unit id="7525763b89938d45cd37b2d1519974d2a960980c" translate="yes" xml:space="preserve">
          <source>Allocates &lt;code&gt;size * sizeof(T)&lt;/code&gt; bytes from the system's heap initialized to the value returned by the block (which is invoked once with each index in the range &lt;code&gt;0...size&lt;/code&gt;) and returns a pointer to the first byte from that memory.</source>
          <target state="translated">从系统堆中分配 &lt;code&gt;size * sizeof(T)&lt;/code&gt; 字节，该字节初始化为该块返回的值（该索引每次在 &lt;code&gt;0...size&lt;/code&gt; 范围内被调用一次），并返回指向该内存中第一个字节的指针。</target>
        </trans-unit>
        <trans-unit id="e81cced5423b4cd2ed1a36bdb1c46ba80f8753a1" translate="yes" xml:space="preserve">
          <source>Allocates &lt;code&gt;size * sizeof(T)&lt;/code&gt; bytes from the system's heap initialized to the value returned by the block (which is invoked once with each index in the range &lt;code&gt;0...size&lt;/code&gt;) and returns a pointer to the first byte from that memory. The memory is allocated by the &lt;code&gt;&lt;a href=&quot;gc&quot;&gt;GC&lt;/a&gt;&lt;/code&gt;, so when there are no pointers to this memory, it will be automatically freed.</source>
          <target state="translated">从系统堆中分配 &lt;code&gt;size * sizeof(T)&lt;/code&gt; 字节，该字节初始化为该块返回的值（该索引每次在 &lt;code&gt;0...size&lt;/code&gt; 范围内被调用一次），并返回指向该内存中第一个字节的指针。内存是由 &lt;code&gt;&lt;a href=&quot;gc&quot;&gt;GC&lt;/a&gt;&lt;/code&gt; 分配的，因此当没有指向该内存的指针时，它将自动释放。</target>
        </trans-unit>
        <trans-unit id="42243fbe3d724a885ad57ecb0f99cbb4a6002eb4" translate="yes" xml:space="preserve">
          <source>Allocates &lt;code&gt;size * sizeof(T)&lt;/code&gt; bytes from the system's heap initialized to zero and returns a pointer to the first byte from that memory.</source>
          <target state="translated">从系统堆中分配 &lt;code&gt;size * sizeof(T)&lt;/code&gt; 字节，并将其初始化为零，并返回指向该内存中第一个字节的指针。</target>
        </trans-unit>
        <trans-unit id="6d7e1fe6a5ee4277b6a952f6b897cdcc59156430" translate="yes" xml:space="preserve">
          <source>Allocates &lt;code&gt;size * sizeof(T)&lt;/code&gt; bytes from the system's heap initialized to zero and returns a pointer to the first byte from that memory. The memory is allocated by the &lt;code&gt;&lt;a href=&quot;gc&quot;&gt;GC&lt;/a&gt;&lt;/code&gt;, so when there are no pointers to this memory, it will be automatically freed.</source>
          <target state="translated">从系统堆中分配 &lt;code&gt;size * sizeof(T)&lt;/code&gt; 字节，并将其初始化为零，并返回指向该内存中第一个字节的指针。内存是由 &lt;code&gt;&lt;a href=&quot;gc&quot;&gt;GC&lt;/a&gt;&lt;/code&gt; 分配的，因此当没有指向该内存的指针时，它将自动释放。</target>
        </trans-unit>
        <trans-unit id="84607e75ebcf2ee71dccd01f9be35cbf641e2e18" translate="yes" xml:space="preserve">
          <source>Allocates &lt;code&gt;size * sizeof(T)&lt;/code&gt; bytes of heap memory initialized to &lt;em&gt;value&lt;/em&gt; and returns a slice pointing to that memory.</source>
          <target state="translated">分配堆内存的 &lt;code&gt;size * sizeof(T)&lt;/code&gt; 个字节，并将其初始化为&lt;em&gt;value&lt;/em&gt;并返回指向该内存的切片。</target>
        </trans-unit>
        <trans-unit id="3b6e491d09a9451e62b010ab3851330018e5f3d9" translate="yes" xml:space="preserve">
          <source>Allocates &lt;code&gt;size * sizeof(T)&lt;/code&gt; bytes of heap memory initialized to the value returned by the block (which is invoked once with each index in the range &lt;code&gt;0..&lt;a href=&quot;slice#size:Int32-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt;) and returns a slice pointing to that memory.</source>
          <target state="translated">分配 &lt;code&gt;size * sizeof(T)&lt;/code&gt; 初始化为块（其与每个索引的范围内调用一次返回的值堆存储器的字节 &lt;code&gt;0..&lt;a href=&quot;slice#size:Int32-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt; ），并返回一个切片指向该内存。</target>
        </trans-unit>
        <trans-unit id="cdb49b992b624d31c0bb94d7f481cb01e8ea9d43" translate="yes" xml:space="preserve">
          <source>Allocates &lt;code&gt;size * sizeof(T)&lt;/code&gt; bytes of heap memory initialized to zero and returns a slice pointing to that memory.</source>
          <target state="translated">分配堆内存的 &lt;code&gt;size * sizeof(T)&lt;/code&gt; 个字节，并将其初始化为零，并返回一个指向该内存的切片。</target>
        </trans-unit>
        <trans-unit id="76f8e1af8ff2f3754d3830e85e8cbac17a977b5e" translate="yes" xml:space="preserve">
          <source>Allocating any new object instances during garbage-collection might result in undefined behavior and most likely crashing your program.</source>
          <target state="translated">在垃圾回收过程中分配任何新的对象实例可能会导致未定义的行为,并很可能使程序崩溃。</target>
        </trans-unit>
        <trans-unit id="b57f3f8196cb75396f7e010b1b01268cd6ce9bb9" translate="yes" xml:space="preserve">
          <source>Allocating heap memory is slow, and it puts more pressure on the Garbage Collector (GC) as it will later have to free that memory.</source>
          <target state="translated">分配堆内存的速度很慢,而且会给垃圾收集器(GC)带来更大的压力,因为它以后要释放这些内存。</target>
        </trans-unit>
        <trans-unit id="b873a37d86010dc0409af11fe6e5f33086a4aaa8" translate="yes" xml:space="preserve">
          <source>Allows computing Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">允许计算基于哈希的消息验证码(HMAC)。</target>
        </trans-unit>
        <trans-unit id="4b5a94e0e6b6ecb3f548cb64adce75c230873496" translate="yes" xml:space="preserve">
          <source>Allows only valid number strings with an optional negative sign.</source>
          <target state="translated">只允许带负号的有效数字字符串。</target>
        </trans-unit>
        <trans-unit id="d9706c08760d7040c46bae5dacf9634182873fa4" translate="yes" xml:space="preserve">
          <source>Allows the cookie to be sent by the browser during top-level navigations that use a &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.1&quot;&gt;safe&lt;/a&gt; HTTP method.</source>
          <target state="translated">允许Cookie在使用&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.1&quot;&gt;安全&lt;/a&gt; HTTP方法的顶级导航期间由浏览器发送。</target>
        </trans-unit>
        <trans-unit id="c4c11aacaa21cb2a020746d4fdd48ff108e52631" translate="yes" xml:space="preserve">
          <source>Allows to iterate over all name-value pairs.</source>
          <target state="translated">允许对所有的名称-值对进行迭代。</target>
        </trans-unit>
        <trans-unit id="e6bf9d81ea21ed2c1b76096a6e487f0f8187f6fb" translate="yes" xml:space="preserve">
          <source>Alpine Linux includes the Crystal compiler in the community repository, starting from version Alpine 3.7.</source>
          <target state="translated">Alpine Linux从Alpine 3.7版本开始,在社区资源库中加入了Crystal编译器。</target>
        </trans-unit>
        <trans-unit id="37e83a9932919a7362e53705155e8f8e06b88e38" translate="yes" xml:space="preserve">
          <source>Also note that because &lt;code&gt;&lt;a href=&quot;object#unsafe_as(type:T.class)forallT-instance-method&quot;&gt;#unsafe_as&lt;/a&gt;&lt;/code&gt; is a regular method, unlike the pseudo-method &lt;code&gt;&lt;a href=&quot;object#as(type:Class)-instance-method&quot;&gt;#as&lt;/a&gt;&lt;/code&gt;, you can't specify some types in the type grammar using a short notation, so specifying a static array must always be done as &lt;code&gt;&lt;a href=&quot;staticarray&quot;&gt;StaticArray&lt;/a&gt;(T, N)&lt;/code&gt;, a tuple as &lt;code&gt;&lt;a href=&quot;tuple&quot;&gt;Tuple&lt;/a&gt;(...)&lt;/code&gt; and so on, never as &lt;code&gt;&lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;[4]&lt;/code&gt; or &lt;code&gt;{&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;, &lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;}&lt;/code&gt;.</source>
          <target state="translated">还要注意，由于 &lt;code&gt;&lt;a href=&quot;object#unsafe_as(type:T.class)forallT-instance-method&quot;&gt;#unsafe_as&lt;/a&gt;&lt;/code&gt; 是常规方法，与伪方法 &lt;code&gt;&lt;a href=&quot;object#as(type:Class)-instance-method&quot;&gt;#as&lt;/a&gt;&lt;/code&gt; 不同，您不能使用短符号在类型语法中指定某些类型，因此指定静态数组必须始终作为 &lt;code&gt;&lt;a href=&quot;staticarray&quot;&gt;StaticArray&lt;/a&gt;(T, N)&lt;/code&gt; ，元 &lt;code&gt;&lt;a href=&quot;tuple&quot;&gt;Tuple&lt;/a&gt;(...)&lt;/code&gt; 等元组，而不是 &lt;code&gt;&lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;[4]&lt;/code&gt; 或 &lt;code&gt;{&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;, &lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="33e15dd1e55a6281b3f01ed1859f204c34db6bb4" translate="yes" xml:space="preserve">
          <source>Also note that because &lt;code&gt;&lt;a href=&quot;object#unsafe_as(type:T.class)forallT-instance-method&quot;&gt;#unsafe_as&lt;/a&gt;&lt;/code&gt; is a regular method, unlike the pseudo-method &lt;code&gt;as&lt;/code&gt;, you can't specify some types in the type grammar using a short notation, so specifying a static array must always be done as &lt;code&gt;&lt;a href=&quot;staticarray&quot;&gt;StaticArray&lt;/a&gt;(T, N)&lt;/code&gt;, a tuple as &lt;code&gt;&lt;a href=&quot;tuple&quot;&gt;Tuple&lt;/a&gt;(...)&lt;/code&gt; and so on, never as &lt;code&gt;&lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;[4]&lt;/code&gt; or &lt;code&gt;{&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;, &lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;}&lt;/code&gt;.</source>
          <target state="translated">另请注意，由于 &lt;code&gt;&lt;a href=&quot;object#unsafe_as(type:T.class)forallT-instance-method&quot;&gt;#unsafe_as&lt;/a&gt;&lt;/code&gt; 是常规方法，与伪方法 &lt;code&gt;as&lt;/code&gt; 不同，您不能使用短符号指定类型语法中的某些类型，因此指定静态数组必须始终作为 &lt;code&gt;&lt;a href=&quot;staticarray&quot;&gt;StaticArray&lt;/a&gt;(T, N)&lt;/code&gt; ，元 &lt;code&gt;&lt;a href=&quot;tuple&quot;&gt;Tuple&lt;/a&gt;(...)&lt;/code&gt; 等元组，而不是 &lt;code&gt;&lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;[4]&lt;/code&gt; 或 &lt;code&gt;{&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;, &lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b6fada26ca731b1c8917c2f76dc1eff3860f366f" translate="yes" xml:space="preserve">
          <source>Also note that sometimes the output of &lt;code&gt;&lt;a href=&quot;bigrational#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; will look like a Crystal expression that will compile, but this isn't always the case, nor is it necessary. Notably, &lt;code&gt;&lt;a href=&quot;reference#inspect(io:IO):Nil-instance-method&quot;&gt;Reference#inspect&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;struct#inspect(io:IO):Nil-instance-method&quot;&gt;Struct#inspect&lt;/a&gt;&lt;/code&gt; return values that don't compile.</source>
          <target state="translated">还要注意，有时 &lt;code&gt;&lt;a href=&quot;bigrational#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; 的输出看起来像可以编译的Crystal表达式，但这并非总是如此，也没有必要。值得注意的是， &lt;code&gt;&lt;a href=&quot;reference#inspect(io:IO):Nil-instance-method&quot;&gt;Reference#inspect&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;struct#inspect(io:IO):Nil-instance-method&quot;&gt;Struct#inspect&lt;/a&gt;&lt;/code&gt; 返回的值不会编译。</target>
        </trans-unit>
        <trans-unit id="724bc2fbf20ff7f320b6df3d286c4dc74f380d93" translate="yes" xml:space="preserve">
          <source>Also note that sometimes the output of &lt;code&gt;&lt;a href=&quot;object#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; will look like a Crystal expression that will compile, but this isn't always the case, nor is it necessary. Notably, &lt;code&gt;&lt;a href=&quot;reference#inspect(io:IO):Nil-instance-method&quot;&gt;Reference#inspect&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;struct#inspect(io:IO):Nil-instance-method&quot;&gt;Struct#inspect&lt;/a&gt;&lt;/code&gt; return values that don't compile.</source>
          <target state="translated">还要注意，有时 &lt;code&gt;&lt;a href=&quot;object#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; 的输出看起来像可以编译的Crystal表达式，但这并非总是如此，也没有必要。值得注意的是， &lt;code&gt;&lt;a href=&quot;reference#inspect(io:IO):Nil-instance-method&quot;&gt;Reference#inspect&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;struct#inspect(io:IO):Nil-instance-method&quot;&gt;Struct#inspect&lt;/a&gt;&lt;/code&gt; 返回的值不会编译。</target>
        </trans-unit>
        <trans-unit id="77cff585754248eda4c6778c90e805f6d31f9c83" translate="yes" xml:space="preserve">
          <source>Also note that the compiler doesn't check whether a method argument is reassigned a different value:</source>
          <target state="translated">另外要注意的是,编译器不会检查一个方法参数是否被重新分配了不同的值。</target>
        </trans-unit>
        <trans-unit id="8ad0722bc2c3667ab10dca75a34012e22d872393" translate="yes" xml:space="preserve">
          <source>Also note that the compiler doesn't check whether a method parameter is reassigned a different value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1705473d931bfc802bafae041665030b4e6cd60" translate="yes" xml:space="preserve">
          <source>Also returns &lt;code&gt;true&lt;/code&gt; if this and &lt;em&gt;other&lt;/em&gt; are the same object.</source>
          <target state="translated">如果this和&lt;em&gt;other&lt;/em&gt;是同一对象，则还返回 &lt;code&gt;true&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8198198e56d1b2b0fe6c060612d3120c9b3f6a11" translate="yes" xml:space="preserve">
          <source>Also some drivers may offer additional functionality like postgres &lt;code&gt;LISTEN&lt;/code&gt;/&lt;code&gt;NOTIFY&lt;/code&gt;.</source>
          <target state="translated">另外，某些驱动程序可能会提供其他功能，例如postgres &lt;code&gt;LISTEN&lt;/code&gt; / &lt;code&gt;NOTIFY&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="006396db126789a5caf639146a2b6d3e3edd1500" translate="yes" xml:space="preserve">
          <source>Alternative ways to do error handling</source>
          <target state="translated">处理错误的其他方法</target>
        </trans-unit>
        <trans-unit id="5c330948d0dae4539dc73d680b1aae16cdf27d5c" translate="yes" xml:space="preserve">
          <source>Alternatively you can use a non yielding &lt;code&gt;DB.open&lt;/code&gt; method as long as &lt;code&gt;Database#close&lt;/code&gt; is called at the end.</source>
          <target state="translated">另外，只要在最后调用 &lt;code&gt;Database#close&lt;/code&gt; ,就可以使用非屈服的 &lt;code&gt;DB.open&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="b0050dcb909faa19099b4bc05ca51bfda72717fd" translate="yes" xml:space="preserve">
          <source>Alternatively, a backslash followed by a newline can be inserted inside the string literal:</source>
          <target state="translated">另外,也可以在字符串文字中插入反斜杠和换行。</target>
        </trans-unit>
        <trans-unit id="c12e7360e9a201c76f7f0f9e52a60c80082164cb" translate="yes" xml:space="preserve">
          <source>Alternatively, use a smart port builder like &lt;a href=&quot;https://github.com/jrmarino/synth&quot;&gt;Synth&lt;/a&gt;, which automatically decides to download dependencies as binary packages when there's no reason to rebuild them.</source>
          <target state="translated">或者，使用像&lt;a href=&quot;https://github.com/jrmarino/synth&quot;&gt;Synth&lt;/a&gt;这样的智能端口生成器，当没有理由重建依赖时，它会自动决定将依赖项下载为二进制包。</target>
        </trans-unit>
        <trans-unit id="af63c3b8d4bd4679c90d5dab9527a47e78236b6d" translate="yes" xml:space="preserve">
          <source>Alternatively, you can create an &lt;code&gt;&lt;a href=&quot;oauth/consumer&quot;&gt;OAuth::Consumer&lt;/a&gt;&lt;/code&gt; and then invoke its &lt;code&gt;&lt;a href=&quot;oauth/consumer#authenticate(client:HTTP::Client,token:AccessToken):Nil-instance-method&quot;&gt;OAuth::Consumer#authenticate&lt;/a&gt;&lt;/code&gt; method, or create an &lt;code&gt;&lt;a href=&quot;oauth/accesstoken&quot;&gt;OAuth::AccessToken&lt;/a&gt;&lt;/code&gt; and invoke its &lt;code&gt;&lt;a href=&quot;oauth/accesstoken#authenticate(client,consumer_key,consumer_secret,extra_params=nil)-instance-method&quot;&gt;OAuth::AccessToken#authenticate&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">另外，您可以创建一个 &lt;code&gt;&lt;a href=&quot;oauth/consumer&quot;&gt;OAuth::Consumer&lt;/a&gt;&lt;/code&gt; ，然后调用其 &lt;code&gt;&lt;a href=&quot;oauth/consumer#authenticate(client:HTTP::Client,token:AccessToken):Nil-instance-method&quot;&gt;OAuth::Consumer#authenticate&lt;/a&gt;&lt;/code&gt; 方法，或者创建一个 &lt;code&gt;&lt;a href=&quot;oauth/accesstoken&quot;&gt;OAuth::AccessToken&lt;/a&gt;&lt;/code&gt; 然后调用其 &lt;code&gt;&lt;a href=&quot;oauth/accesstoken#authenticate(client,consumer_key,consumer_secret,extra_params=nil)-instance-method&quot;&gt;OAuth::AccessToken#authenticate&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b4f3ab7d307a33f22bc49854c52fbaceb7efda2" translate="yes" xml:space="preserve">
          <source>Alternatives can be separated using a &lt;a href=&quot;http://www.pcre.org/original/doc/html/pcrepattern.html#SEC12&quot;&gt;vertical bar&lt;/a&gt; (&lt;code&gt;|&lt;/code&gt;). Any single character can be represented by &lt;a href=&quot;http://www.pcre.org/original/doc/html/pcrepattern.html#SEC7&quot;&gt;dot&lt;/a&gt; (&lt;code&gt;.&lt;/code&gt;). When matching only one character, specific alternatives can be expressed as a &lt;a href=&quot;http://www.pcre.org/original/doc/html/pcrepattern.html#SEC9&quot;&gt;character class&lt;/a&gt;, enclosed in square brackets (&lt;code&gt;[]&lt;/code&gt;):</source>
          <target state="translated">可以使用&lt;a href=&quot;http://www.pcre.org/original/doc/html/pcrepattern.html#SEC12&quot;&gt;竖线&lt;/a&gt;（ &lt;code&gt;|&lt;/code&gt; ）分隔其他选项。任何单个字符都可以由&lt;a href=&quot;http://www.pcre.org/original/doc/html/pcrepattern.html#SEC7&quot;&gt;点&lt;/a&gt;（ &lt;code&gt;.&lt;/code&gt; ）表示。当仅匹配一个字符时，特定的替代项可以表示为&lt;a href=&quot;http://www.pcre.org/original/doc/html/pcrepattern.html#SEC9&quot;&gt;字符类&lt;/a&gt;，并用方括号（ &lt;code&gt;[]&lt;/code&gt; ）括起来：</target>
        </trans-unit>
        <trans-unit id="12bf45e012bec13b28c68bf5e8cc8b5dbbda6e65" translate="yes" xml:space="preserve">
          <source>Although exceptions are available as one of the mechanisms for handling errors, they are not your only choice. Raising an exception involves allocating memory, and executing an exception handler is generally slow.</source>
          <target state="translated">虽然异常作为处理错误的机制之一,但它们并不是你唯一的选择。引起异常涉及到分配内存,而执行异常处理程序通常很慢。</target>
        </trans-unit>
        <trans-unit id="092092ba8084ac391272057dcc87be9cd3a75fee" translate="yes" xml:space="preserve">
          <source>Although it is obvious that &lt;code&gt;a&lt;/code&gt; will always be assigned a value, the compiler will still think &lt;code&gt;a&lt;/code&gt; might never had a chance to be initialized. Even though this logic might improve in the future, right now it forces you to keep your exception handlers to their necessary minimum, making the code's intention more clear:</source>
          <target state="translated">虽然很明显， &lt;code&gt;a&lt;/code&gt; 总是被分配一个值，编译器将仍然认为 &lt;code&gt;a&lt;/code&gt; 可能永远不会有被初始化的机会。即使此逻辑将来可能会改进，但现在它迫使您将异常处理程序保持在必要的最低限度，从而使代码的意图更加明确：</target>
        </trans-unit>
        <trans-unit id="6523499aaa42434f357d3872515873e47e6d1ab6" translate="yes" xml:space="preserve">
          <source>Although not enforced by the compiler, a &lt;code&gt;lib&lt;/code&gt;'s name usually starts with &lt;code&gt;Lib&lt;/code&gt;.</source>
          <target state="translated">尽管没有由编译器强制执行，但 &lt;code&gt;lib&lt;/code&gt; 的名称通常以 &lt;code&gt;Lib&lt;/code&gt; 开头。</target>
        </trans-unit>
        <trans-unit id="76f88240a9fcee64c3a99f61350c598fa0caa0b4" translate="yes" xml:space="preserve">
          <source>Although not enforced by the compiler, constants are usually named with all capital letters and underscores to separate words.</source>
          <target state="translated">虽然编译器没有强制执行,但常量通常用所有的大写字母和下划线来分隔单词。</target>
        </trans-unit>
        <trans-unit id="bac5cbdfb4a286356ebbac010147f45f18f3fe7a" translate="yes" xml:space="preserve">
          <source>Although the imaginary number is defined as i = sqrt(-1), calling &lt;code&gt;&lt;a href=&quot;math#sqrt(value)-instance-method&quot;&gt;Math.sqrt&lt;/a&gt;&lt;/code&gt; with a negative number will return &lt;code&gt;-NaN&lt;/code&gt;. To obtain the result in the complex plane, &lt;code&gt;&lt;a href=&quot;math#sqrt(value)-instance-method&quot;&gt;Math.sqrt&lt;/a&gt;&lt;/code&gt; must be called with a complex number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165f717b57e31acedb1b33c3109877752a477410" translate="yes" xml:space="preserve">
          <source>Always deletes any existing filesystam pathname first, in order to cleanup any leftover socket file.</source>
          <target state="translated">总是先删除任何现有的 filesystam 路径名,以便清理任何剩余的 socket 文件。</target>
        </trans-unit>
        <trans-unit id="5dead87dff59a58246d1ec9f33b2ae33910620b4" translate="yes" xml:space="preserve">
          <source>Always deletes any existing filesystem pathname first, in order to cleanup any leftover socket file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece6d2b8d25f7e32d8add83d8c774dd15929c5ea" translate="yes" xml:space="preserve">
          <source>Always quote</source>
          <target state="translated">总是引用</target>
        </trans-unit>
        <trans-unit id="a00bf023b2cd0beca2be5d115aeeb9e67ac9761d" translate="yes" xml:space="preserve">
          <source>Always raises &lt;code&gt;&lt;a href=&quot;../../io/error&quot;&gt;IO::Error&lt;/a&gt;&lt;/code&gt; because this is a read-only &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">始终引发 &lt;code&gt;&lt;a href=&quot;../../io/error&quot;&gt;IO::Error&lt;/a&gt;&lt;/code&gt; 因为这是只读 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1f0c991543fe2d03fab29efa931b426c51e27dd9" translate="yes" xml:space="preserve">
          <source>Always raises &lt;code&gt;&lt;a href=&quot;../../io/error&quot;&gt;IO::Error&lt;/a&gt;&lt;/code&gt; because this is a write-only &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">始终引发 &lt;code&gt;&lt;a href=&quot;../../io/error&quot;&gt;IO::Error&lt;/a&gt;&lt;/code&gt; 因为这是只写 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71b305814b607b7e0466e1bcabfde35d6b6172f7" translate="yes" xml:space="preserve">
          <source>Always raises &lt;code&gt;&lt;a href=&quot;../io/error&quot;&gt;IO::Error&lt;/a&gt;&lt;/code&gt; because this is a read-only &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">始终引发 &lt;code&gt;&lt;a href=&quot;../io/error&quot;&gt;IO::Error&lt;/a&gt;&lt;/code&gt; 因为这是只读 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4562c4ff5008c32beff245ac5315a043e680da10" translate="yes" xml:space="preserve">
          <source>Always raises &lt;code&gt;&lt;a href=&quot;../io/error&quot;&gt;IO::Error&lt;/a&gt;&lt;/code&gt; because this is a write-only &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">始终引发 &lt;code&gt;&lt;a href=&quot;../io/error&quot;&gt;IO::Error&lt;/a&gt;&lt;/code&gt; 因为这是只写 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="707d334f0320c5b4b6ec5d296b9b6020e09a7f70" translate="yes" xml:space="preserve">
          <source>Always remember that it's not just the time that has improved: memory usage is also decreased.</source>
          <target state="translated">要时刻记住,不仅仅是时间提高了:内存使用率也降低了。</target>
        </trans-unit>
        <trans-unit id="e0b181a7de79130a3609477b5e07c35fc316f7ce" translate="yes" xml:space="preserve">
          <source>AlwaysInline</source>
          <target state="translated">AlwaysInline</target>
        </trans-unit>
        <trans-unit id="e47cc0ecab796473873ab114c8725da3ae72e102" translate="yes" xml:space="preserve">
          <source>Ambiguous time zone transitions such as gaps and overlaps have no effect on the result because it retains the same instant.</source>
          <target state="translated">模糊的时区转换,如空白和重叠,对结果没有影响,因为它保留了相同的瞬间。</target>
        </trans-unit>
        <trans-unit id="0fb44ea8e8a1b668a05a6766b0a7a038757a776d" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;http://crystal-lang.org/api/Array.html&quot;&gt;Array&lt;/a&gt; is an ordered and integer-indexed generic collection of elements of a specific type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;http://crystal-lang.org/api/Array.html&quot;&gt;阵列&lt;/a&gt;是一种特定类型的元素的有序和整数索引泛型集合 &lt;code&gt;T&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2722ae696b0330b116f753f9b9f2da8572c0b62f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; (and) evaluates its left hand side. If it's &lt;em&gt;truthy&lt;/em&gt;, it evaluates its right hand side and has that value. Otherwise it has the value of the left hand side. Its type is the union of the types of both sides.</source>
          <target state="translated">一个 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; （和）计算它的左手侧。如果是&lt;em&gt;事实&lt;/em&gt;，它将评估其右侧并具有该值。否则，它具有左侧的值。它的类型是双方类型的并集。</target>
        </trans-unit>
        <trans-unit id="678447df7444e4fdc73de11f540f52551da2ae68" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; (and) expression</source>
          <target state="translated">一个 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; （和）表达</target>
        </trans-unit>
        <trans-unit id="6ebafa9aa964d92f391974c69f7f5dc0a31c770c" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;.is_a?&lt;/code&gt; or &lt;code&gt;.nil?&lt;/code&gt; call.</source>
          <target state="translated">一个 &lt;code&gt;.is_a?&lt;/code&gt; 或 &lt;code&gt;.nil?&lt;/code&gt; 呼叫。</target>
        </trans-unit>
        <trans-unit id="b1f212ad29c85f080023674243f9ec74e4f9e658" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; over a file descriptor.</source>
          <target state="translated">文件描述符上的 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf283d32146e1e15d15cdea0ff2f8807d8ae167e" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; that reads and writes from a buffer in memory.</source>
          <target state="translated">从内存中的缓冲区读取和写入的 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a06ecd17f43a76aa4898d4f11f3401d541ac4d0a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; that wraps another &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, and only reads up to the beginning of a specified delimiter.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 是包装另一个 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; ，并且只读取到一个指定的分隔符的开始。</target>
        </trans-unit>
        <trans-unit id="bb4dfe5a4a1ae975a3a82d968c4d66898e733e18" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; that wraps another &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, setting a limit for the number of bytes that can be read.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; ，它包装另一个 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; ，设置限制为可读取的字节数。</target>
        </trans-unit>
        <trans-unit id="7bf76bff278302ff8c9be8870f132430ff915876" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; which writes to a number of underlying writer IOs.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 其写入到数底层作家IO的。</target>
        </trans-unit>
        <trans-unit id="fd606610b3ae2e1fb24bcd73d88e531fe9dbf05f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; can be created using the usual &lt;code&gt;&lt;a href=&quot;array#new-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; method (several are provided), or with an array literal:</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 可以使用通常被创建 &lt;code&gt;&lt;a href=&quot;array#new-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; 方法（设置多个），或与阵列字面：</target>
        </trans-unit>
        <trans-unit id="183a5cfe5b83458a3ea4cdc142f656d462046cff" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; can have mixed types, meaning T will be a union of types, but these are determined when the array is created, either by specifying T or by using an array literal. In the latter case, T will be set to the union of the array literal elements' types.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 可以具有混合型，这意味着T将一个类型的结合，而是通过指定T或通过使用数组文本创建阵列当这些被确定。在后一种情况下，将T设置为数组文字元素类型的并集。</target>
        </trans-unit>
        <trans-unit id="ab4cec228e0c6a9956399e1750684e1423473e09" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; is an ordered, integer-indexed collection of objects of type T.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 是类型T的对象的有序，整数索引的集合</target>
        </trans-unit>
        <trans-unit id="4d4da7169d251096c9550eaf5c34e5231954a3f2" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; is implemented using an internal buffer of some capacity and is reallocated when elements are pushed to it when more capacity is needed. This is normally known as a &lt;a href=&quot;http://en.wikipedia.org/wiki/Dynamic_array&quot;&gt;dynamic array&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 是使用一些容量的内部缓冲区实现的，当需要更多容量时，将元素压入该数组时可以重新分配该数组。这通常称为&lt;a href=&quot;http://en.wikipedia.org/wiki/Dynamic_array&quot;&gt;动态数组&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b1dbfb96008d8f10451b3992f791e26a2d53fba7" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; is implemented using an internal buffer of some capacity and is reallocated when elements are pushed to it when more capacity is needed. This is normally known as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Dynamic_array&quot;&gt;dynamic array&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ad76956f2140612aada917655b89d2a6c04ffd" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;context&quot;&gt;SSL::Context&lt;/a&gt;&lt;/code&gt; represents a generic secure socket protocol configuration.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;context&quot;&gt;SSL::Context&lt;/a&gt;&lt;/code&gt; 表示一般的安全套接字协议配置。</target>
        </trans-unit>
        <trans-unit id="618b3a9867e50d7141831d98cb91b9d948e589c3" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;&lt;/code&gt; object can be converted to &lt;code&gt;&lt;a href=&quot;set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; using the &lt;code&gt;#to_set&lt;/code&gt; method.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;&lt;/code&gt; 对象可以被转换为 &lt;code&gt;&lt;a href=&quot;set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; 使用 &lt;code&gt;#to_set&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="86c81e00cb615c05824fa11dce4a78e30e77110d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;error&quot;&gt;XML::Error&lt;/a&gt;&lt;/code&gt; is raised if attempting to generate an invalid XML (for example, if invoking &lt;code&gt;&lt;a href=&quot;builder#end_element:Nil-instance-method&quot;&gt;#end_element&lt;/a&gt;&lt;/code&gt; without a matching &lt;code&gt;&lt;a href=&quot;builder#start_element(name:String):Nil-instance-method&quot;&gt;#start_element&lt;/a&gt;&lt;/code&gt;, or trying to use a non-string value as an object's field name)</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;error&quot;&gt;XML::Error&lt;/a&gt;&lt;/code&gt; ，那么就会抛出试图生成无效的XML（例如，如果调用 &lt;code&gt;&lt;a href=&quot;builder#end_element:Nil-instance-method&quot;&gt;#end_element&lt;/a&gt;&lt;/code&gt; 不匹配 &lt;code&gt;&lt;a href=&quot;builder#start_element(name:String):Nil-instance-method&quot;&gt;#start_element&lt;/a&gt;&lt;/code&gt; ，或试图用一个非字符串值作为对象的字段名）</target>
        </trans-unit>
        <trans-unit id="77e25c52d2a33af8f2bf6e0bda0cb44c3d8acd66" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; can be set an encoding with the &lt;code&gt;&lt;a href=&quot;io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt;#set_encoding&lt;/a&gt;&lt;/code&gt; method. When this is set, all string operations (&lt;code&gt;&lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;#gets&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#gets_to_end:String-instance-method&quot;&gt;#gets_to_end&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#read_char:Char?-instance-method&quot;&gt;#read_char&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#self-instance-method&quot;&gt;#&amp;lt;&amp;lt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;#print&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#puts:Nil-instance-method&quot;&gt;#puts&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;io#printf(format_string,*args):Nil-instance-method&quot;&gt;#printf&lt;/a&gt;&lt;/code&gt;) will write in the given encoding, and read from the given encoding. Byte operations (&lt;code&gt;&lt;a href=&quot;io#read(slice:Bytes)-instance-method&quot;&gt;#read&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#write(slice:Bytes):Nil-instance-method&quot;&gt;#write&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#read_byte:UInt8?-instance-method&quot;&gt;#read_byte&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#write_byte(byte:UInt8)-instance-method&quot;&gt;#write_byte&lt;/a&gt;&lt;/code&gt;) never do encoding/decoding operations.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 可以设置与所述的编码 &lt;code&gt;&lt;a href=&quot;io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt;#set_encoding&lt;/a&gt;&lt;/code&gt; 方法。当此设置，所有的字符串操作（ &lt;code&gt;&lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;#gets&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;io#gets_to_end:String-instance-method&quot;&gt;#gets_to_end&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;io#read_char:Char?-instance-method&quot;&gt;#read_char&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;io#self-instance-method&quot;&gt;#&amp;lt;&amp;lt;&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;#print&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;io#puts:Nil-instance-method&quot;&gt;#puts&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;io#printf(format_string,*args):Nil-instance-method&quot;&gt;#printf&lt;/a&gt;&lt;/code&gt; ）将在给定的编码写的，从规定的编码读取。字节操作（ &lt;code&gt;&lt;a href=&quot;io#read(slice:Bytes)-instance-method&quot;&gt;#read&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;io#write(slice:Bytes):Nil-instance-method&quot;&gt;#write&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;io#read_byte:UInt8?-instance-method&quot;&gt;#read_byte&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;io#write_byte(byte:UInt8)-instance-method&quot;&gt;#write_byte&lt;/a&gt;&lt;/code&gt; ）从不执行编码/解码操作。</target>
        </trans-unit>
        <trans-unit id="fc8b59436f6124771be2a1d209427f0ea0f6910b" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; can be set an encoding with the &lt;code&gt;&lt;a href=&quot;io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt;#set_encoding&lt;/a&gt;&lt;/code&gt; method. When this is set, all string operations (&lt;code&gt;&lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;#gets&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#gets_to_end:String-instance-method&quot;&gt;#gets_to_end&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#read_char:Char?-instance-method&quot;&gt;#read_char&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#self-instance-method&quot;&gt;#&amp;lt;&amp;lt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#print(*objects:_):Nil-instance-method&quot;&gt;#print&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#puts:Nil-instance-method&quot;&gt;#puts&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;io#printf(format_string,*args):Nil-instance-method&quot;&gt;#printf&lt;/a&gt;&lt;/code&gt;) will write in the given encoding, and read from the given encoding. Byte operations (&lt;code&gt;&lt;a href=&quot;io#read(slice:Bytes)-instance-method&quot;&gt;#read&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#write(slice:Bytes):Nil-instance-method&quot;&gt;#write&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#read_byte:UInt8?-instance-method&quot;&gt;#read_byte&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#write_byte(byte:UInt8)-instance-method&quot;&gt;#write_byte&lt;/a&gt;&lt;/code&gt;) never do encoding/decoding operations.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 可以设置与所述的编码 &lt;code&gt;&lt;a href=&quot;io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt;#set_encoding&lt;/a&gt;&lt;/code&gt; 方法。当此设置，所有的字符串操作（ &lt;code&gt;&lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;#gets&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;io#gets_to_end:String-instance-method&quot;&gt;#gets_to_end&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;io#read_char:Char?-instance-method&quot;&gt;#read_char&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;io#self-instance-method&quot;&gt;#&amp;lt;&amp;lt;&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;io#print(*objects:_):Nil-instance-method&quot;&gt;#print&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;io#puts:Nil-instance-method&quot;&gt;#puts&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;io#printf(format_string,*args):Nil-instance-method&quot;&gt;#printf&lt;/a&gt;&lt;/code&gt; ）将在给定的编码写的，从规定的编码读取。字节操作（ &lt;code&gt;&lt;a href=&quot;io#read(slice:Bytes)-instance-method&quot;&gt;#read&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;io#write(slice:Bytes):Nil-instance-method&quot;&gt;#write&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;io#read_byte:UInt8?-instance-method&quot;&gt;#read_byte&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;io#write_byte(byte:UInt8)-instance-method&quot;&gt;#write_byte&lt;/a&gt;&lt;/code&gt; ）从不执行编码/解码操作。</target>
        </trans-unit>
        <trans-unit id="96ab58e110ca9fda9d8d6dcac2f06dbb685c2633" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; for reading files from &lt;code&gt;&lt;a href=&quot;toplevel#ARGV&quot;&gt;ARGV&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">用于从 &lt;code&gt;&lt;a href=&quot;toplevel#ARGV&quot;&gt;ARGV&lt;/a&gt;&lt;/code&gt; 读取文件的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17812698fab60ed495e8bb990a3891a690141227" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; allows processing sequences lazily, as opposed to &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;&lt;/code&gt; which processes sequences eagerly and produces an &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; in most of its methods.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; 允许懒惰地处理序列，而不是 &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;&lt;/code&gt; 该热切处理序列，并产生一个 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 在大多数的它的方法。</target>
        </trans-unit>
        <trans-unit id="913eb0e8924d8928ab2d18c1a2ae72a0cdb67f04" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;alias&lt;/code&gt; declaration inside a &lt;code&gt;lib&lt;/code&gt; declares a C &lt;code&gt;typedef&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;lib&lt;/code&gt; 中的 &lt;code&gt;alias&lt;/code&gt; 声明声明了C &lt;code&gt;typedef&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d0c5fdfa1eb815f109debdc185369c8bd49ffdb6" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;alias&lt;/code&gt; is most useful to avoid writing long types over and over, but also to declare a type based on compile-time flags:</source>
          <target state="translated">一个 &lt;code&gt;alias&lt;/code&gt; 是最有用的，以避免一遍又一遍地写长的类型，但也宣布基于编译时标志类型：</target>
        </trans-unit>
        <trans-unit id="0a9fa015ad8c1430ff73b9b07f0bd498c7ec19ff" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;else&lt;/code&gt; clause can only be specified if at least one &lt;code&gt;rescue&lt;/code&gt; clause is specified.</source>
          <target state="translated">一个 &lt;code&gt;else&lt;/code&gt; 如果至少有一个子句只能指定 &lt;code&gt;rescue&lt;/code&gt; 指定WHERE子句。</target>
        </trans-unit>
        <trans-unit id="0a734e35c29a03192e77bff9fa1f8df519d3307a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;else&lt;/code&gt; clause is executed only if no exceptions were rescued:</source>
          <target state="translated">的 &lt;code&gt;else&lt;/code&gt; 条款时，才会执行，如果没有异常获救：</target>
        </trans-unit>
        <trans-unit id="e82a82f48241376dc9a18328e8584a080cbbaa46" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ensure&lt;/code&gt; clause is executed at the end of a &lt;code&gt;begin ... end&lt;/code&gt; or &lt;code&gt;begin ... rescue ... end&lt;/code&gt; expression regardless of whether an exception was raised or not:</source>
          <target state="translated">一个 &lt;code&gt;ensure&lt;/code&gt; 条款在的结束时执行 &lt;code&gt;begin ... end&lt;/code&gt; 或 &lt;code&gt;begin ... rescue ... end&lt;/code&gt; ，无论一个异常是否提高或不表达：</target>
        </trans-unit>
        <trans-unit id="7417a2f5d3557e64a52cec6ac7b1c8c30ee55b21" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;enum&lt;/code&gt; declaration inside a &lt;code&gt;lib&lt;/code&gt; declares a C enum:</source>
          <target state="translated">&lt;code&gt;lib&lt;/code&gt; 内的一个 &lt;code&gt;enum&lt;/code&gt; 声明声明一个C枚举：</target>
        </trans-unit>
        <trans-unit id="512db505028c6348f135ce09856fd68af8d0dc7d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;extend&lt;/code&gt; makes a type include methods defined in that module as class methods:</source>
          <target state="translated">一个 &lt;code&gt;extend&lt;/code&gt; 品牌类型包括模块作为类方法中定义的方法：</target>
        </trans-unit>
        <trans-unit id="1154aad7617a46c04d9d6b288fff88656bd371d9" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;if&lt;/code&gt; can be written as an expression&amp;rsquo;s suffix:</source>
          <target state="translated">一个 &lt;code&gt;if&lt;/code&gt; 可以写成一个表达式的后缀：</target>
        </trans-unit>
        <trans-unit id="ee99ee8f7145a50808f502c3ca383fa938dbb375" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;if&lt;/code&gt; evaluates the given branch if its condition is &lt;em&gt;truthy&lt;/em&gt;. Otherwise, it evaluates the &lt;code&gt;else&lt;/code&gt; branch if present.</source>
          <target state="translated">一 &lt;code&gt;if&lt;/code&gt; 求值，如果它的条件是给定的分支&lt;em&gt;truthy&lt;/em&gt;。否则，它将评估 &lt;code&gt;else&lt;/code&gt; 分支（如果存在）。</target>
        </trans-unit>
        <trans-unit id="9a264ebbcf0da4f95d814d1a5467b2d3461ec1ef" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;include&lt;/code&gt; makes a type include methods defined in that module as instance methods:</source>
          <target state="translated">一个 &lt;code&gt;include&lt;/code&gt; 使一个类型包括模块作为实例方法中定义的方法：</target>
        </trans-unit>
        <trans-unit id="b77aefe858970d60d4dec2c253350d2e375a6660" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;instance_sizeof&lt;/code&gt; expression.</source>
          <target state="translated">一个 &lt;code&gt;instance_sizeof&lt;/code&gt; 表达。</target>
        </trans-unit>
        <trans-unit id="9073bb8fa31001f13f5911ee7bcb5ffc571b1d6f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;it&lt;/code&gt; block contains an example that should invoke the code to be tested and define what is expected of it. Each example can contain multiple expectations, but it should test only one specific behaviour.</source>
          <target state="translated">一个 &lt;code&gt;it&lt;/code&gt; 块包含应该调用要测试的代码和限定所预期它的一个例子。每个示例都可以包含多个期望，但是它只能测试一种特定的行为。</target>
        </trans-unit>
        <trans-unit id="df4a9796cdd365507410ecd5e905363e2288704b" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;offsetof&lt;/code&gt; expression returns the byte offset of an instance variable in a struct or class type. It accepts the type as first argument and the instance variable name prefixed by an &lt;code&gt;@&lt;/code&gt; as second argument:</source>
          <target state="translated">一个 &lt;code&gt;offsetof&lt;/code&gt; 表达式返回字节中结构或类型实例变量的偏移量。它接受类型作为第一个参数，并以 &lt;code&gt;@&lt;/code&gt; 作为前缀的实例变量名称作为第二个参数：</target>
        </trans-unit>
        <trans-unit id="7cc3bea98f4fa16f25109f500b3b1bf92e905d97" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;offsetof&lt;/code&gt; expression.</source>
          <target state="translated">一个 &lt;code&gt;offsetof&lt;/code&gt; 表达式。</target>
        </trans-unit>
        <trans-unit id="785b35135df43a31749cd66082354779546dd218" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;out&lt;/code&gt; expression.</source>
          <target state="translated">一个 &lt;code&gt;out&lt;/code&gt; 表达式。</target>
        </trans-unit>
        <trans-unit id="23bd64288a461fb83f2dfb32c9eb5c6e5c9c0942" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;unless&lt;/code&gt; evaluates the then branch if its condition is &lt;em&gt;falsey&lt;/em&gt;, and evaluates the &lt;code&gt;else branch&lt;/code&gt;, if there&amp;rsquo;s any, otherwise. That is, it behaves in the opposite way of an &lt;code&gt;if&lt;/code&gt;:</source>
          <target state="translated">一 &lt;code&gt;unless&lt;/code&gt; 求值，如果其条件是当时的分支&lt;em&gt;falsey&lt;/em&gt;，并评估 &lt;code&gt;else branch&lt;/code&gt; ，如果有任何，否则。也就是说，它的行为与 &lt;code&gt;if&lt;/code&gt; 的行为相反：</target>
        </trans-unit>
        <trans-unit id="b5f851261ca2a35497954c436f85f509dfcf76e3" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;until&lt;/code&gt; executes its body until its condition is &lt;em&gt;truthy&lt;/em&gt;. An &lt;code&gt;until&lt;/code&gt; is just syntax sugar for a &lt;code&gt;while&lt;/code&gt; with the condition negated:</source>
          <target state="translated">一个 &lt;code&gt;until&lt;/code&gt; 它的状态&lt;em&gt;成立时&lt;/em&gt;才会执行它的身体。一个 &lt;code&gt;until&lt;/code&gt; 仅仅是一个语法糖 &lt;code&gt;while&lt;/code&gt; 用否定的条件：</target>
        </trans-unit>
        <trans-unit id="f9a0afa3bc53e673c9dd776119215f5ba1a03537" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;||&lt;/code&gt; (or) evaluates its left hand side. If it's &lt;em&gt;falsey&lt;/em&gt;, it evaluates its right hand side and has that value. Otherwise it has the value of the left hand side. Its type is the union of the types of both sides.</source>
          <target state="translated">一个 &lt;code&gt;||&lt;/code&gt; （或）评估其左侧。如果它是&lt;em&gt;false&lt;/em&gt;，它将评估其右侧并具有该值。否则，它具有左侧的值。它的类型是双方类型的并集。</target>
        </trans-unit>
        <trans-unit id="360a7956916ccbe4a45debf5988288f18c23e876" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;||&lt;/code&gt; (or) expression</source>
          <target state="translated">一个 &lt;code&gt;||&lt;/code&gt; （或）表达</target>
        </trans-unit>
        <trans-unit id="50a661b076108661cc84572bc1cbd39786d3698b" translate="yes" xml:space="preserve">
          <source>An HTTP Client.</source>
          <target state="translated">一个HTTP客户端。</target>
        </trans-unit>
        <trans-unit id="46c2f239a5fafa75ffb1b504a9266ac49d11315c" translate="yes" xml:space="preserve">
          <source>An HTTP request.</source>
          <target state="translated">一个HTTP请求。</target>
        </trans-unit>
        <trans-unit id="fbe6e9119d0af544f7e338d044cdd2d955942a48" translate="yes" xml:space="preserve">
          <source>An OAuth consumer.</source>
          <target state="translated">一个OAuth消费者。</target>
        </trans-unit>
        <trans-unit id="a7fb4326b9912d8c7cd63b326e770bbcfc1c5cf4" translate="yes" xml:space="preserve">
          <source>An OAuth2 client.</source>
          <target state="translated">一个OAuth2客户端。</target>
        </trans-unit>
        <trans-unit id="7873b59bef86b6db6dc2acbc6c84fddb4be1fefa" translate="yes" xml:space="preserve">
          <source>An OAuth2 session makes it easy to implement APIs that need to refresh an access token once its expired before executing an HTTP request.</source>
          <target state="translated">OAuth2会话可以轻松实现在执行HTTP请求之前,一旦访问令牌过期就需要刷新的API。</target>
        </trans-unit>
        <trans-unit id="e8bd3602b5edda3fe108cf045bc458272ab4bd2a" translate="yes" xml:space="preserve">
          <source>An XML builder generates valid XML.</source>
          <target state="translated">一个XML生成器可以生成有效的XML。</target>
        </trans-unit>
        <trans-unit id="edd2faf0eb05cde4bd6c39d95298f3cefee91838" translate="yes" xml:space="preserve">
          <source>An alias.</source>
          <target state="translated">一个别名。</target>
        </trans-unit>
        <trans-unit id="895a78400639094f60f1593feea330a032b644c8" translate="yes" xml:space="preserve">
          <source>An annotation could be used to designate a property as an ORM column. The name and type of the instance variable can be read off the &lt;code&gt;TypeNode&lt;/code&gt; in addition to the annotation; removing the need for any ORM specific macro. The annotation itself could also be used to store metadata about the column, such as if it is nullable, the name of the column, or if it is the primary key.</source>
          <target state="translated">注释可用于将属性指定为ORM列。除了注释，还可以从 &lt;code&gt;TypeNode&lt;/code&gt; 读取实例变量的名称和类型。消除了对任何ORM特定宏的需求。注释本身也可以用于存储有关列的元数据，例如它是否可为空，列的名称或它是否为主键。</target>
        </trans-unit>
        <trans-unit id="cec8fd37191a71e5ed4978129ff6e45947795db4" translate="yes" xml:space="preserve">
          <source>An annotation on top of a type or variable.</source>
          <target state="translated">在类型或变量之上的注解。</target>
        </trans-unit>
        <trans-unit id="f6c51937f73de1a68841a4c8c89f13ec2ca26635" translate="yes" xml:space="preserve">
          <source>An array literal.</source>
          <target state="translated">一个数组文字。</target>
        </trans-unit>
        <trans-unit id="1fc0801c6bd7fa8491d41426ddeb2af0ba6ae04a" translate="yes" xml:space="preserve">
          <source>An array of arguments passed to the program.</source>
          <target state="translated">传递给程序的参数数组。</target>
        </trans-unit>
        <trans-unit id="930d822d135f71dfcb5a68f6ee1b6bd541a84082" translate="yes" xml:space="preserve">
          <source>An assignment can be passed too, but in this case the type of the variable must be easily inferable from the initial value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ac29ab3ad8784f78b7e5fbdf424dd9e98003e0" translate="yes" xml:space="preserve">
          <source>An assignment can be passed too, but in this case the type of the variable must be easily inferrable from the initial value:</source>
          <target state="translated">也可以传递一个赋值,但在这种情况下,变量的类型必须可以很容易地从初始值中推断出来。</target>
        </trans-unit>
        <trans-unit id="c062f63bf34455f4aaa5250dfb3160cdd3c26bdf" translate="yes" xml:space="preserve">
          <source>An atomic flag, that can be set or not.</source>
          <target state="translated">一个原子标志,可以设置或不设置。</target>
        </trans-unit>
        <trans-unit id="ae27d006cda6af0546c17fa303559f1252464b72" translate="yes" xml:space="preserve">
          <source>An easy way to remember which one is inclusive and which one is exclusive it to think of the extra dot as if it pushes &lt;em&gt;y&lt;/em&gt; further away, thus leaving it outside of the range.</source>
          <target state="translated">一种简单的方法来记住哪个是包容性的，哪个是独占性的，它就可以想到多余的点，好像它会将&lt;em&gt;y&lt;/em&gt;推得更远，从而使它超出范围。</target>
        </trans-unit>
        <trans-unit id="f39c66b1d4d9222dbb665d49a69856c4b32d2ca8" translate="yes" xml:space="preserve">
          <source>An entry inside a &lt;code&gt;&lt;a href=&quot;../file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; 内部的条目。</target>
        </trans-unit>
        <trans-unit id="44291848e90ac29ea60c573edd6de553343736f0" translate="yes" xml:space="preserve">
          <source>An entry to write into a &lt;code&gt;&lt;a href=&quot;../writer&quot;&gt;Zip::Writer&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">写入 &lt;code&gt;&lt;a href=&quot;../writer&quot;&gt;Zip::Writer&lt;/a&gt;&lt;/code&gt; 的条目。</target>
        </trans-unit>
        <trans-unit id="271ab7c7ba0be6bcda121183fe6e9f5f91acd537" translate="yes" xml:space="preserve">
          <source>An enum automatically defines question methods for each member, using &lt;code&gt;&lt;a href=&quot;string#underscore(io:IO,options:Unicode::CaseOptions=:none):Nil-instance-method&quot;&gt;String#underscore&lt;/a&gt;&lt;/code&gt; for the method name.</source>
          <target state="translated">枚举使用 &lt;code&gt;&lt;a href=&quot;string#underscore(io:IO,options:Unicode::CaseOptions=:none):Nil-instance-method&quot;&gt;String#underscore&lt;/a&gt;&lt;/code&gt; 作为方法名称，自动为每个成员定义问题方法。</target>
        </trans-unit>
        <trans-unit id="28e5d6c740329c41307dfce01d5fa13fe0523add" translate="yes" xml:space="preserve">
          <source>An enum automatically defines question methods for each member, using &lt;code&gt;&lt;a href=&quot;string#underscore(options:Unicode::CaseOptions=Unicode::CaseOptions::None)-instance-method&quot;&gt;String#underscore&lt;/a&gt;&lt;/code&gt; for the method name.</source>
          <target state="translated">枚举会使用 &lt;code&gt;&lt;a href=&quot;string#underscore(options:Unicode::CaseOptions=Unicode::CaseOptions::None)-instance-method&quot;&gt;String#underscore&lt;/a&gt;&lt;/code&gt; 作为方法名称，自动为每个成员定义问题方法。</target>
        </trans-unit>
        <trans-unit id="92a46ea4b3e5248f13585594048fab72c16f8f59" translate="yes" xml:space="preserve">
          <source>An enum can be created from an integer:</source>
          <target state="translated">可以从一个整数创建一个枚举。</target>
        </trans-unit>
        <trans-unit id="8188e5451f1191462f35966374076751d1e2906a" translate="yes" xml:space="preserve">
          <source>An enum can be marked with &lt;code&gt;@[&lt;a href=&quot;flags&quot;&gt;Flags&lt;/a&gt;]&lt;/code&gt;. This changes the default values. The first constant's value is 1, and successive constants are multiplied by 2.</source>
          <target state="translated">枚举可以用 &lt;code&gt;@[&lt;a href=&quot;flags&quot;&gt;Flags&lt;/a&gt;]&lt;/code&gt; 标记。这将更改默认值。第一个常数的值为1，并且后续常数乘以2。</target>
        </trans-unit>
        <trans-unit id="d8a650288c1c6fe67b30bcd3d664548722caf0fd" translate="yes" xml:space="preserve">
          <source>An enum can be marked with the &lt;code&gt;@[&lt;a href=&quot;flags&quot;&gt;Flags&lt;/a&gt;]&lt;/code&gt; annotation. This changes the default values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e084aeebea9608635b12dc976e369d5fa3640e" translate="yes" xml:space="preserve">
          <source>An enum can be marked with the &lt;code&gt;@[&lt;a href=&quot;flags&quot;&gt;Flags&lt;/a&gt;]&lt;/code&gt; attribute. This changes the default values:</source>
          <target state="translated">枚举可以用 &lt;code&gt;@[&lt;a href=&quot;flags&quot;&gt;Flags&lt;/a&gt;]&lt;/code&gt; 属性标记。这将更改默认值：</target>
        </trans-unit>
        <trans-unit id="433e50c16dae8dd69c4223dac5c03d45f0c88c7a" translate="yes" xml:space="preserve">
          <source>An enum can be marked with the &lt;code&gt;@[Flags]&lt;/code&gt; annotation. This changes the default values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e306195c394a6d99149848c58a94cbd34d298c0" translate="yes" xml:space="preserve">
          <source>An enum can be marked with the &lt;code&gt;@[Flags]&lt;/code&gt; attribute. This changes the default values:</source>
          <target state="translated">枚举可以用 &lt;code&gt;@[Flags]&lt;/code&gt; 属性标记。这将更改默认值：</target>
        </trans-unit>
        <trans-unit id="ba5f3e512776c44c5a89f0c69007f2ca595bed8c" translate="yes" xml:space="preserve">
          <source>An enum is a set of integer values, where each value has an associated name. For example:</source>
          <target state="translated">枚举是一组整数值,其中每个值都有一个相关的名称。例如:</target>
        </trans-unit>
        <trans-unit id="b1417c72c57bf950e767879de2693b1bfc9efb89" translate="yes" xml:space="preserve">
          <source>An enum is defined with the &lt;code&gt;enum&lt;/code&gt; keyword, followed by its name. The enum's body contains the values. Values start with the value &lt;code&gt;0&lt;/code&gt; and are incremented by one. The default value can be overwritten:</source>
          <target state="translated">用 &lt;code&gt;enum&lt;/code&gt; 关键字定义枚举，后跟名称。枚举的主体包含值。值以值 &lt;code&gt;0&lt;/code&gt; 开头，并递增1。可以覆盖默认值：</target>
        </trans-unit>
        <trans-unit id="1077bc9444e7cda257b662b88aa57d078df699c8" translate="yes" xml:space="preserve">
          <source>An enum that provides additional support around HTTP status codes.</source>
          <target state="translated">一个围绕HTTP状态码提供额外支持的枚举。</target>
        </trans-unit>
        <trans-unit id="b35c9503399fbbac17582175d4880f3025415694" translate="yes" xml:space="preserve">
          <source>An exact copy of &lt;em&gt;uri&lt;/em&gt; is returned if</source>
          <target state="translated">如果返回&lt;em&gt;uri&lt;/em&gt;的确切副本，</target>
        </trans-unit>
        <trans-unit id="1f5cd982d6e3ec3aa9cf8e31fe9632e00c6f7a5a" translate="yes" xml:space="preserve">
          <source>An example of a module as a namespace:</source>
          <target state="translated">一个模块作为命名空间的例子。</target>
        </trans-unit>
        <trans-unit id="cc8381009158943e2b3e2e4c44605fc324bd2f27" translate="yes" xml:space="preserve">
          <source>An example of using &lt;code&gt;Xs&lt;/code&gt; to construct a range:</source>
          <target state="translated">使用 &lt;code&gt;Xs&lt;/code&gt; 构造范围的示例：</target>
        </trans-unit>
        <trans-unit id="3b8202f5bf9e604fa29617cbf17864ff2b7318ed" translate="yes" xml:space="preserve">
          <source>An example with a variable:</source>
          <target state="translated">一个带有变量的例子。</target>
        </trans-unit>
        <trans-unit id="27fadfc45341514f1857dfb1c3d37412e1ce6355" translate="yes" xml:space="preserve">
          <source>An example with an instance variable:</source>
          <target state="translated">一个带有实例变量的例子。</target>
        </trans-unit>
        <trans-unit id="3c4fc68e5d04c88120a62f4402fc89bfe8844b7e" translate="yes" xml:space="preserve">
          <source>An example with assignments (in this case the compiler must be able to infer the types from the default values):</source>
          <target state="translated">一个带有赋值的例子(在这种情况下,编译器必须能够从默认值中推断出类型)。</target>
        </trans-unit>
        <trans-unit id="c6201f25f663ca0b5e026b8bfde2e90f6f745020" translate="yes" xml:space="preserve">
          <source>An example with multiple arguments:</source>
          <target state="translated">一个有多个参数的例子。</target>
        </trans-unit>
        <trans-unit id="8bc2c4ce726e1ea98ca0ea8fdcfbc7d169377f7c" translate="yes" xml:space="preserve">
          <source>An example with the block version:</source>
          <target state="translated">块版的例子。</target>
        </trans-unit>
        <trans-unit id="be2652a458915ebaed2f6e05b1a84696584d3d24" translate="yes" xml:space="preserve">
          <source>An example with type declarations and default values:</source>
          <target state="translated">一个带有类型声明和默认值的例子。</target>
        </trans-unit>
        <trans-unit id="3df4748a95659eef070e4293c8e0a59ba6546ae1" translate="yes" xml:space="preserve">
          <source>An explicit type can be specified by immediately following the closing bracket with &lt;code&gt;of&lt;/code&gt; and a type, each separated by whitespace. This overwrites the inferred type and can be used for example to create an array that holds only some types initially but can accept other types later.</source>
          <target state="translated">可以在紧跟方括号之后的 &lt;code&gt;of&lt;/code&gt; 和type（由空格分隔）中指定显式类型。这将覆盖推断的类型，并且可用于例如创建一个数组，该数组最初仅包含某些类型，但以后可以接受其他类型。</target>
        </trans-unit>
        <trans-unit id="89ca8cc0079183d6490a91cd74fccbe83eb2906e" translate="yes" xml:space="preserve">
          <source>An external name can be specified for a method argument. The external name is the one used when passing an argument as a named argument, and the internal name is the one used inside the method definition:</source>
          <target state="translated">可以为一个方法参数指定一个外部名称。外部名称是作为命名参数传递参数时使用的名称,内部名称是在方法定义中使用的名称。</target>
        </trans-unit>
        <trans-unit id="d1cb8e56007a1947ed698742f0c56101572f2e72" translate="yes" xml:space="preserve">
          <source>An external name can be specified for a method parameter. The external name is the one used when passing an argument as a named argument, and the internal name is the one used to refer to the parameter inside the method definition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67a0ce71ff9efdefd540e50e1ca2b074fe31d7d" translate="yes" xml:space="preserve">
          <source>An if expression.</source>
          <target state="translated">一个if表达式。</target>
        </trans-unit>
        <trans-unit id="6b544e651b307c8253d2daf051a47ad8c80c51d9" translate="yes" xml:space="preserve">
          <source>An initial capacity can be specified, and it will be set as the initial capacity of the internal &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">可以指定初始容量，并将其设置为内部 &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; 的初始容量。</target>
        </trans-unit>
        <trans-unit id="94385e9457589c01dc355afd09343fcde7d1b1fa" translate="yes" xml:space="preserve">
          <source>An instance of each class that includes &lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; is a random number generator with its own state. Usually such RNGs can be initialized with a seed, which defines their initial state. It is guaranteed that after initializing two different instances with the same seed, and then executing the same calls on both of them, you will get the same results. This allows exactly reproducing the same seemingly random events by just keeping the seed.</source>
          <target state="translated">每个包含 &lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; 的类的实例都是具有自己状态的随机数生成器。通常，此类RNG可以使用定义其初始状态的种子进行初始化。确保使用相同的种子初始化两个不同的实例，然后在两个实例上执行相同的调用，您将获得相同的结果。这样可以仅保留种子即可完全重现相同的看似随机事件。</target>
        </trans-unit>
        <trans-unit id="24d2314f6d77a7609715e686b02384c79a8c583a" translate="yes" xml:space="preserve">
          <source>An instance variable.</source>
          <target state="translated">一个实例变量。</target>
        </trans-unit>
        <trans-unit id="9588885a572ce94d393fe3605d7b3371f28b5284" translate="yes" xml:space="preserve">
          <source>An integer literal is an optional &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; sign, followed by a sequence of digits and underscores, optionally followed by a suffix. If no suffix is present, the literal's type is the lowest between &lt;code&gt;Int32&lt;/code&gt;, &lt;code&gt;Int64&lt;/code&gt; and &lt;code&gt;UInt64&lt;/code&gt; in which the number fits:</source>
          <target state="translated">整数文字是一个可选的 &lt;code&gt;+&lt;/code&gt; 或 &lt;code&gt;-&lt;/code&gt; 号，后跟一系列数字和下划线，并可选地后跟一个后缀。如果不存在后缀，则文字的类型是 &lt;code&gt;Int32&lt;/code&gt; ， &lt;code&gt;Int64&lt;/code&gt; 和 &lt;code&gt;UInt64&lt;/code&gt; 之间的最小数字，其中数字适合：</target>
        </trans-unit>
        <trans-unit id="85d6a78149fd6fb501c2625f845bbe4056675702" translate="yes" xml:space="preserve">
          <source>An integer literal is an optional &lt;code&gt;&lt;a href=&quot;int#+(other:BigDecimal)-instance-method&quot;&gt;#+&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;int#-(other:BigDecimal)-instance-method&quot;&gt;#-&lt;/a&gt;&lt;/code&gt; sign, followed by a sequence of digits and underscores, optionally followed by a suffix. If no suffix is present, the literal's type is the lowest between &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt;&lt;/code&gt; in which the number fits:</source>
          <target state="translated">整数文字是可选的 &lt;code&gt;&lt;a href=&quot;int#+(other:BigDecimal)-instance-method&quot;&gt;#+&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;int#-(other:BigDecimal)-instance-method&quot;&gt;#-&lt;/a&gt;&lt;/code&gt; 符号，后跟一系列数字和下划线，并可选地后跟一个后缀。如果不存在后缀，则文字的类型是 &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt;&lt;/code&gt; 之间的最小数字，其中数字适合：</target>
        </trans-unit>
        <trans-unit id="d504e57226e2d5bc6d0405dc9073fd91915f8af3" translate="yes" xml:space="preserve">
          <source>An integer literal is an optional &lt;code&gt;&lt;a href=&quot;int#+(other:BigDecimal)-instance-method&quot;&gt;#+&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;int#-(other:BigInt):BigInt-instance-method&quot;&gt;#-&lt;/a&gt;&lt;/code&gt; sign, followed by a sequence of digits and underscores, optionally followed by a suffix. If no suffix is present, the literal's type is the lowest between &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt;&lt;/code&gt; in which the number fits:</source>
          <target state="translated">整数文字是可选的 &lt;code&gt;&lt;a href=&quot;int#+(other:BigDecimal)-instance-method&quot;&gt;#+&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;int#-(other:BigInt):BigInt-instance-method&quot;&gt;#-&lt;/a&gt;&lt;/code&gt; 符号，后跟一系列数字和下划线，并可选地后跟一个后缀。如果不存在后缀，则文字的类型是 &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt;&lt;/code&gt; 之间数字最小的类型，数字适合以下类型：</target>
        </trans-unit>
        <trans-unit id="ddb51bf3856ec42fe3001169af6f6cc5bb279eab" translate="yes" xml:space="preserve">
          <source>An interpolated string like &lt;code&gt;&quot;Hello, #{name}!&quot;&lt;/code&gt;.</source>
          <target state="translated">插补字符串，例如 &lt;code&gt;&quot;Hello, #{name}!&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e2e828664a243bd3db58c10742685469a22506d" translate="yes" xml:space="preserve">
          <source>An object must never append itself to the io argument, as this will in turn call &lt;code&gt;&lt;a href=&quot;bigdecimal#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; on it.</source>
          <target state="translated">对象绝不能将自己附加到io参数上，因为这反过来会在其上调用 &lt;code&gt;&lt;a href=&quot;bigdecimal#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fff87f29954508e84f1a12771315b4e5545d5fd0" translate="yes" xml:space="preserve">
          <source>An object must never append itself to the io argument, as this will in turn call &lt;code&gt;&lt;a href=&quot;bigfloat#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; on it.</source>
          <target state="translated">对象绝不能将自己附加到io参数上，因为这反过来会在其上调用 &lt;code&gt;&lt;a href=&quot;bigfloat#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2cfb16fb4d101f2f7670c3e8fdb8296989b2ed84" translate="yes" xml:space="preserve">
          <source>An object must never append itself to the io argument, as this will in turn call &lt;code&gt;&lt;a href=&quot;bigrational#to_s(base:Int=10):String-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; on it.</source>
          <target state="translated">对象绝不能将自己附加到io参数上，因为这反过来会在其上调用 &lt;code&gt;&lt;a href=&quot;bigrational#to_s(base:Int=10):String-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="264fab578b1f404979f89965a820cc9b25982baa" translate="yes" xml:space="preserve">
          <source>An object must never append itself to the io argument, as this will in turn call &lt;code&gt;&lt;a href=&quot;class#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; on it.</source>
          <target state="translated">对象绝不能将自己附加到io参数上，因为这反过来会在其上调用 &lt;code&gt;&lt;a href=&quot;class#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8228970d9d31004b46ccefd0276b057dd48d287" translate="yes" xml:space="preserve">
          <source>An object must never append itself to the io argument, as this will in turn call &lt;code&gt;&lt;a href=&quot;float32#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; on it.</source>
          <target state="translated">对象绝不能将自己附加到io参数上，因为这反过来会在其上调用 &lt;code&gt;&lt;a href=&quot;float32#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d04cfbdd0635cd45447e8d770af48fd5f21aeb46" translate="yes" xml:space="preserve">
          <source>An object must never append itself to the io argument, as this will in turn call &lt;code&gt;&lt;a href=&quot;float64#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; on it.</source>
          <target state="translated">对象绝不能将自己附加到io参数上，因为这反过来会在其上调用 &lt;code&gt;&lt;a href=&quot;float64#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48c31f67b2c862b79714f61b4aa470765baebfe5" translate="yes" xml:space="preserve">
          <source>An object must never append itself to the io argument, as this will in turn call &lt;code&gt;&lt;a href=&quot;int#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; on it.</source>
          <target state="translated">对象绝不能将自己附加到io参数上，因为这反过来会在其上调用 &lt;code&gt;&lt;a href=&quot;int#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44a17b8f5ea400e9ad197597feaa484e0f3a35bc" translate="yes" xml:space="preserve">
          <source>An object must never append itself to the io argument, as this will in turn call &lt;code&gt;&lt;a href=&quot;object#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; on it.</source>
          <target state="translated">对象绝不能将自己附加到io参数上，因为这反过来会在其上调用 &lt;code&gt;&lt;a href=&quot;object#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c48589b2fd5be2ea8df0b54930ae4c07548d374a" translate="yes" xml:space="preserve">
          <source>An object must never append itself to the io argument, as this will in turn call &lt;code&gt;&lt;a href=&quot;proc#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; on it.</source>
          <target state="translated">对象绝不能将自己附加到io参数上，因为这反过来会在其上调用 &lt;code&gt;&lt;a href=&quot;proc#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="02486a860941c5250817f7a9ff8f06be671cd3d3" translate="yes" xml:space="preserve">
          <source>An object's internal state, if any, can only be queried by invoking methods.</source>
          <target state="translated">对象的内部状态,如果有的话,只能通过调用方法来查询。</target>
        </trans-unit>
        <trans-unit id="efde326ceec598070e7c56a1af339be1d8d64444" translate="yes" xml:space="preserve">
          <source>An ordered multi-value mapped collection representing generic URI parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4e6af94edf5ec2a1e798e0113708f1b60aa1be" translate="yes" xml:space="preserve">
          <source>An unary &lt;code&gt;not&lt;/code&gt; (&lt;code&gt;!&lt;/code&gt;).</source>
          <target state="translated">一元 &lt;code&gt;not&lt;/code&gt; （ &lt;code&gt;!&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a3251bf30c3e005833a433ee7c3270597d377d35" translate="yes" xml:space="preserve">
          <source>An unary expression</source>
          <target state="translated">一元表达式</target>
        </trans-unit>
        <trans-unit id="923c53fd069939335bc92ab77aca21d1699ee194" translate="yes" xml:space="preserve">
          <source>An uncaught exception in a signal handler is a fatal error.</source>
          <target state="translated">在信号处理程序中未捕获的异常是一个致命的错误。</target>
        </trans-unit>
        <trans-unit id="0d88b833e43ee4c49735bee3a0173290719aa336" translate="yes" xml:space="preserve">
          <source>An underscore is allowed in type restrictions. It matches anything:</source>
          <target state="translated">在类型限制中允许使用下划线。它与任何东西相匹配。</target>
        </trans-unit>
        <trans-unit id="98f34b692868705fd4fe03ef4c5bed5d8a585478" translate="yes" xml:space="preserve">
          <source>An unhandleable error that results in a program crash</source>
          <target state="translated">一个无法处理的错误,导致程序崩溃。</target>
        </trans-unit>
        <trans-unit id="0e9ef7e7c861c701a95f02cbefd0b4851ee26b62" translate="yes" xml:space="preserve">
          <source>An uninitialized variable declaration: &lt;code&gt;a = uninitialized &lt;a href=&quot;../../int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">未初始化的变量声明： &lt;code&gt;a = uninitialized &lt;a href=&quot;../../int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d3ba05c548c54172c25e6da416c6084032c790e8" translate="yes" xml:space="preserve">
          <source>Anatomy of a spec file</source>
          <target state="translated">规范文件的解剖</target>
        </trans-unit>
        <trans-unit id="0ece06fe3852a1e8cbe11058ea48cf833de001e9" translate="yes" xml:space="preserve">
          <source>And always be sure to profile your program to learn what its bottlenecks are. For profiling, on macOS you can use &lt;a href=&quot;https://developer.apple.com/library/prerelease/content/documentation/DeveloperTools/Conceptual/InstrumentsUserGuide/Instrument-TimeProfiler.html&quot;&gt;Instruments Time Profiler&lt;/a&gt;, which comes with XCode, or one of the &lt;a href=&quot;https://stackoverflow.com/questions/11445619/profiling-c-on-mac-os-x&quot;&gt;sampling profilers&lt;/a&gt;. On Linux, any program that can profile C/C++ programs, like &lt;a href=&quot;https://perf.wiki.kernel.org/index.php/Main_Page&quot;&gt;perf&lt;/a&gt; or &lt;a href=&quot;http://valgrind.org/docs/manual/cl-manual.html&quot;&gt;Callgrind&lt;/a&gt;, should work. For both Linux and OS X, you can detect most hotspots by running your program within a debugger then hitting &quot;ctrl+c&quot; to interrupt it occasionally and issuing a gdb &lt;code&gt;backtrace&lt;/code&gt; command to look for patterns in backtraces (or use the &lt;a href=&quot;https://poormansprofiler.org/&quot;&gt;gdb poor man's profiler&lt;/a&gt; which does the same thing for you, or OS X &lt;code&gt;sample&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033d51a4c227593e67138f290835a1951b23db5f" translate="yes" xml:space="preserve">
          <source>And always be sure to profile your program to learn what its bottlenecks are. For profiling, on macOS you can use &lt;a href=&quot;https://developer.apple.com/library/prerelease/content/documentation/DeveloperTools/Conceptual/InstrumentsUserGuide/Instrument-TimeProfiler.html&quot;&gt;Instruments Time Profiler&lt;/a&gt;, which comes with XCode. On Linux, any program that can profile C/C++ programs, like &lt;a href=&quot;https://perf.wiki.kernel.org/index.php/Main_Page&quot;&gt;perf&lt;/a&gt; or &lt;a href=&quot;http://valgrind.org/docs/manual/cl-manual.html&quot;&gt;Callgrind&lt;/a&gt;, should work.</source>
          <target state="translated">并且始终确保对您的程序进行概要分析，以了解其瓶颈所在。要进行分析，可以在macOS上使用XCode随附的&lt;a href=&quot;https://developer.apple.com/library/prerelease/content/documentation/DeveloperTools/Conceptual/InstrumentsUserGuide/Instrument-TimeProfiler.html&quot;&gt;Instruments Time Profiler&lt;/a&gt;。在Linux上，任何可以分析C / C ++程序的程序（例如&lt;a href=&quot;https://perf.wiki.kernel.org/index.php/Main_Page&quot;&gt;perf&lt;/a&gt;或&lt;a href=&quot;http://valgrind.org/docs/manual/cl-manual.html&quot;&gt;Callgrind&lt;/a&gt;）都应该可以工作。</target>
        </trans-unit>
        <trans-unit id="18b5d1bd30ed5b204e257f9bf646e1f6efbdbdf9" translate="yes" xml:space="preserve">
          <source>And here is the Travis CI configuration file:</source>
          <target state="translated">这里是Travis CI配置文件。</target>
        </trans-unit>
        <trans-unit id="a9e347cc35a86c844703546781250a4f743b8fa4" translate="yes" xml:space="preserve">
          <source>And here's the implementation:</source>
          <target state="translated">而这里的实现。</target>
        </trans-unit>
        <trans-unit id="8a5f4a7374cc6fba0ad194dfc93c875dc76dcd8d" translate="yes" xml:space="preserve">
          <source>And it is also available to &lt;a href=&quot;operators#assignments&quot;&gt;index assignments&lt;/a&gt; (&lt;code&gt;[]=&lt;/code&gt;):</source>
          <target state="translated">它也可用于&lt;a href=&quot;operators#assignments&quot;&gt;索引分配&lt;/a&gt;（ &lt;code&gt;[]=&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="5e63fe6a09d81545aa581fcc549d2bb5d224ff6d" translate="yes" xml:space="preserve">
          <source>And it is also available to &lt;a href=&quot;operators#indexing&quot;&gt;indexers&lt;/a&gt; (&lt;code&gt;[]=&lt;/code&gt;):</source>
          <target state="translated">并且它也可用于&lt;a href=&quot;operators#indexing&quot;&gt;索引器&lt;/a&gt;（ &lt;code&gt;[]=&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="befd66b1255e480d97d1d856da6142a9cdec31b8" translate="yes" xml:space="preserve">
          <source>And now if the pipleline has finished we'll have docs and we can link to them with a generic badge from &lt;code&gt;shields.io&lt;/code&gt;.</source>
          <target state="translated">现在，如果管线完成了，我们将获得文档，并可以使用 &lt;code&gt;shields.io&lt;/code&gt; 中的通用徽章链接到它们。</target>
        </trans-unit>
        <trans-unit id="68a26fed3aa30a9aad2d2e83c1da1eec7e9c7764" translate="yes" xml:space="preserve">
          <source>And so we have reached The End 😎🎶</source>
          <target state="translated">我们已经到了终点 😎🎶</target>
        </trans-unit>
        <trans-unit id="a84c61018e4fc1f5fad066f4add9a8443487bb24" translate="yes" xml:space="preserve">
          <source>And the specs:</source>
          <target state="translated">还有规格。</target>
        </trans-unit>
        <trans-unit id="a1b6526ba4ccc7f0742a9a3705eaa3666d79dad5" translate="yes" xml:space="preserve">
          <source>And this is all we need for our continuous integration examples! Let's start!</source>
          <target state="translated">这就是我们持续集成实例所需要的全部内容! 让我们开始吧!</target>
        </trans-unit>
        <trans-unit id="cee022f2c721cb36f2b54286d3bb49dd4ee1ef0c" translate="yes" xml:space="preserve">
          <source>And to access it, use a syntax similar to type restrictions:</source>
          <target state="translated">而要访问它,使用类似于类型限制的语法。</target>
        </trans-unit>
        <trans-unit id="616ae9dda30677b4e368fd094fb6371e30d83956" translate="yes" xml:space="preserve">
          <source>And to accomplish this, we will be using the &lt;a href=&quot;https://crystal-lang.org/api/latest/Colorize.html&quot;&gt;&lt;code&gt;Colorize&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">为此，我们将使用&lt;a href=&quot;https://crystal-lang.org/api/latest/Colorize.html&quot;&gt; &lt;code&gt;Colorize&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="1b0ae47054bef67d9f0a65235f1b5d69bf3afbee" translate="yes" xml:space="preserve">
          <source>And we can also use the &lt;code&gt;commit&lt;/code&gt; method:</source>
          <target state="translated">我们还可以使用 &lt;code&gt;commit&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="b84d91101b6408124d3534ff2eca62f2d48b9461" translate="yes" xml:space="preserve">
          <source>And we want a &lt;em&gt;safe&lt;/em&gt; way (i.e. no need for us to release the connection) to request and use a connection from the &lt;code&gt;database&lt;/code&gt;, we could use &lt;code&gt;Database#using_connection&lt;/code&gt;:</source>
          <target state="translated">而且我们想要一种&lt;em&gt;安全的&lt;/em&gt;方式（即无需我们释放连接）来请求和使用 &lt;code&gt;database&lt;/code&gt; 的连接，我们可以使用 &lt;code&gt;Database#using_connection&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="13074a21c761f8c2e18dbd0487b69e0b1f687b80" translate="yes" xml:space="preserve">
          <source>Android 10.0</source>
          <target state="translated">安卓10.0</target>
        </trans-unit>
        <trans-unit id="bced9cc08c3939a0e0d679456c7b2c96155e69fa" translate="yes" xml:space="preserve">
          <source>Android 2.3</source>
          <target state="translated">Android 2.3</target>
        </trans-unit>
        <trans-unit id="8ab464014c26dbdf5f702390fa9ab23c39f0578d" translate="yes" xml:space="preserve">
          <source>Android 4.4.2</source>
          <target state="translated">Android 4.4.2</target>
        </trans-unit>
        <trans-unit id="74dc68d72e7c6f05cb32f3c5f38a50a1624e1e2a" translate="yes" xml:space="preserve">
          <source>Annotations</source>
          <target state="translated">Annotations</target>
        </trans-unit>
        <trans-unit id="d85c2f6e974f674ccf4a5b9e51922d8fa7d53b82" translate="yes" xml:space="preserve">
          <source>Annotations are best used to store metadata about a given instance variable, type, or method so that it can be read at compile time using macros. One of the main benefits of annotations is that they are applied directly to instance variables/methods, which causes classes to look more natural since a standard macro is not needed to create these properties/methods.</source>
          <target state="translated">注释最好用于存储关于给定实例变量、类型或方法的元数据,以便在编译时使用宏读取。注释的主要好处之一是它们直接应用于实例变量/方法,这使得类看起来更自然,因为不需要标准宏来创建这些属性/方法。</target>
        </trans-unit>
        <trans-unit id="d3a17018c6074aa912149e471576e9c719fde828" translate="yes" xml:space="preserve">
          <source>Annotations can be read off of a &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/TypeNode.html&quot;&gt;&lt;code&gt;TypeNode&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/Def.html&quot;&gt;&lt;code&gt;Def&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/MetaVar.html&quot;&gt;&lt;code&gt;MetaVar&lt;/code&gt;&lt;/a&gt; using the &lt;code&gt;.annotation(type : TypeNode)&lt;/code&gt; method. This method return an &lt;a href=&quot;https://crystal-lang.org/api/master/Crystal/Macros/Annotation.html&quot;&gt;&lt;code&gt;Annotation&lt;/code&gt;&lt;/a&gt; object representing the applied annotation of the supplied type.</source>
          <target state="translated">可以使用 &lt;code&gt;.annotation(type : TypeNode)&lt;/code&gt; 方法从&lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/TypeNode.html&quot;&gt; &lt;code&gt;TypeNode&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/Def.html&quot;&gt; &lt;code&gt;Def&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/MetaVar.html&quot;&gt; &lt;code&gt;MetaVar&lt;/code&gt; 中&lt;/a&gt;读取注释。此方法返回一个&lt;a href=&quot;https://crystal-lang.org/api/master/Crystal/Macros/Annotation.html&quot;&gt; &lt;code&gt;Annotation&lt;/code&gt; &lt;/a&gt;对象，该对象表示所提供类型的已应用注释。</target>
        </trans-unit>
        <trans-unit id="431d5a5a5cc2b02ee1ab27e7894831136e38fd5d" translate="yes" xml:space="preserve">
          <source>Annotations can be used to add metadata to certain features in the source code. Types, methods and instance variables may be annotated. User-defined annotations, such as the standard library's &lt;a href=&quot;https://crystal-lang.org/api/JSON/Field.html&quot;&gt;JSON::Field&lt;/a&gt;, are defined using the &lt;code&gt;annotation&lt;/code&gt; keyword. A number of &lt;a href=&quot;annotations/built_in_annotations&quot;&gt;built-in annotations&lt;/a&gt; are provided by the compiler.</source>
          <target state="translated">注释可用于将元数据添加到源代码中的某些功能。类型，方法和实例变量可以被注释。用户定义的注释（例如，标准库的&lt;a href=&quot;https://crystal-lang.org/api/JSON/Field.html&quot;&gt;JSON :: Field&lt;/a&gt;）是使用 &lt;code&gt;annotation&lt;/code&gt; 关键字定义的。编译器提供了许多&lt;a href=&quot;annotations/built_in_annotations&quot;&gt;内置注释&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ce4fbb4f2f01a59b8f7a517d1344f3321215cb6" translate="yes" xml:space="preserve">
          <source>Annotations can be used to add metadata to certain features in the source code. Types, methods and instance variables may be annotated. User-defined annotations, such as the standard library's &lt;a href=&quot;https://crystal-lang.org/api/JSON/Field.html&quot;&gt;JSON::Field&lt;/a&gt;, are defined using the &lt;code&gt;annotation&lt;/code&gt; keyword. A number of &lt;a href=&quot;built_in_annotations&quot;&gt;built-in annotations&lt;/a&gt; are provided by the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569ef2fad303e8f94b492ff7a4d052e1b9a6eaf7" translate="yes" xml:space="preserve">
          <source>Annotations: results matching &amp;quot;&amp;quot;</source>
          <target state="translated">注释：与&amp;ldquo;&amp;rdquo;匹配的结果</target>
        </trans-unit>
        <trans-unit id="315c40ed33cde3e03335cd5dcaa44eda4b8f50d3" translate="yes" xml:space="preserve">
          <source>Another case is &lt;code&gt;||&lt;/code&gt; and &lt;code&gt;||=&lt;/code&gt;:</source>
          <target state="translated">另一个情况是 &lt;code&gt;||&lt;/code&gt; 和 &lt;code&gt;||=&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7eb62c8dd69782e6a03889b68780fcf6091c35b5" translate="yes" xml:space="preserve">
          <source>Another common case is sending formdata to a server using HTTP::Client. Here is an example showing how to upload a file to the server above in crystal.</source>
          <target state="translated">另一种常见的情况是使用HTTP::Client向服务器发送formdata。下面是一个例子,展示了如何在crystal中上传一个文件到上面的服务器。</target>
        </trans-unit>
        <trans-unit id="b5c8bdb3b14fe8020b84c74276c32ef0cc722ecf" translate="yes" xml:space="preserve">
          <source>Another example reading the same object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c9f22661124df0836ce57abb7c6a798027c051" translate="yes" xml:space="preserve">
          <source>Another important thing to mention is that we are using &lt;code&gt;crystal init&lt;/code&gt; to &lt;a href=&quot;../using_the_compiler#creating-a-crystal-project&quot;&gt;create the application&lt;/a&gt;.</source>
          <target state="translated">值得一提的另一件事是，我们正在使用 &lt;code&gt;crystal init&lt;/code&gt; 来&lt;a href=&quot;../using_the_compiler#creating-a-crystal-project&quot;&gt;创建应用程序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e7ab504f30b6e452657a49b32563f8dc92fbd395" translate="yes" xml:space="preserve">
          <source>Another important thing to mention is that we are using &lt;code&gt;crystal init&lt;/code&gt; to &lt;a href=&quot;../using_the_compiler/index#creating-a-crystal-project&quot;&gt;create the application&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb41237f8d89052c0c930aef528f43193f9cd61c" translate="yes" xml:space="preserve">
          <source>Another option is to use &lt;a href=&quot;https://crystal-lang.org/api/Object.html#try%28%26block%29-instance-method&quot;&gt;&lt;code&gt;Object#try&lt;/code&gt;&lt;/a&gt; found in the standard library which only executes the block if the value is not &lt;code&gt;nil&lt;/code&gt;:</source>
          <target state="translated">另一种选择是使用在标准库中找到的&lt;a href=&quot;https://crystal-lang.org/api/Object.html#try%28%26block%29-instance-method&quot;&gt; &lt;code&gt;Object#try&lt;/code&gt; &lt;/a&gt;，该库仅在值不为 &lt;code&gt;nil&lt;/code&gt; 时才执行该块：</target>
        </trans-unit>
        <trans-unit id="fcd4814a072177046a402c751bad6680ec0f0981" translate="yes" xml:space="preserve">
          <source>Another way is this:</source>
          <target state="translated">另一种方式是这样的。</target>
        </trans-unit>
        <trans-unit id="022539c1fffa58f3ba026992ba9a23c3c0ad2575" translate="yes" xml:space="preserve">
          <source>Another way to create a &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; is by capturing a block:</source>
          <target state="translated">创建 &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; 的另一种方法是捕获一个块：</target>
        </trans-unit>
        <trans-unit id="db6ef6cad016afc1f0f1616254deb59bb10eeae8" translate="yes" xml:space="preserve">
          <source>Another way to define a nested macro is by using the special &lt;code&gt;verbatim&lt;/code&gt; call. Using this you will not be able to use any variable interpolation but will not need to escape the inner macro characters.</source>
          <target state="translated">定义嵌套宏的另一种方法是使用特殊 &lt;code&gt;verbatim&lt;/code&gt; 调用。使用此功能，您将无法使用任何变量插值，但无需转义内部宏字符。</target>
        </trans-unit>
        <trans-unit id="b745281231994348fe065946b8753457f19dc5d8" translate="yes" xml:space="preserve">
          <source>Any comma separated combination of the above</source>
          <target state="translated">以上任何逗号分隔的组合</target>
        </trans-unit>
        <trans-unit id="bc71bee09348307b6ec909dfda94aee4980369f1" translate="yes" xml:space="preserve">
          <source>Any expression may be placed inside the interpolated section, but it&amp;rsquo;s best to keep the expression small for readability.</source>
          <target state="translated">任何表达式都可以放置在插值部分内，但是为了便于阅读，最好使表达式较小。</target>
        </trans-unit>
        <trans-unit id="409b054f573564b96c63724128f29ec5e6ee93c4" translate="yes" xml:space="preserve">
          <source>Any name can be used for type arguments:</source>
          <target state="translated">任何名称都可以用于类型参数。</target>
        </trans-unit>
        <trans-unit id="65693a0de09798f968530ace7442bd0adb31fc11" translate="yes" xml:space="preserve">
          <source>Any name can be used for type parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd047716d7d1bc2cc48d76fe5d512ba3634ceb90" translate="yes" xml:space="preserve">
          <source>Any number literal.</source>
          <target state="translated">任何数字的文字。</target>
        </trans-unit>
        <trans-unit id="e0f170770c0017b3b4d0b3d56f65b8ae991b2651" translate="yes" xml:space="preserve">
          <source>Any or all of the customizable URIs &lt;em&gt;authorize_uri&lt;/em&gt; and &lt;em&gt;token_uri&lt;/em&gt; can be relative or absolute. If they are relative, the given &lt;em&gt;host&lt;/em&gt;, &lt;em&gt;port&lt;/em&gt; and &lt;em&gt;scheme&lt;/em&gt; will be used. If they are absolute, the absolute URL will be used.</source>
          <target state="translated">任何或所有可定制URI的&lt;em&gt;authorize_uri&lt;/em&gt;和&lt;em&gt;token_uri&lt;/em&gt;可以是相对的或绝对的。如果它们是相对的，则将使用给定的&lt;em&gt;host&lt;/em&gt;，&lt;em&gt;port&lt;/em&gt;和&lt;em&gt;scheme&lt;/em&gt;。如果它们是绝对的，则将使用绝对URL。</target>
        </trans-unit>
        <trans-unit id="0585ed80862d5f79c644d57f70a6529688d1f8f4" translate="yes" xml:space="preserve">
          <source>Any or all of the customizable URIs &lt;em&gt;request_token_uri&lt;/em&gt;, &lt;em&gt;authorize_uri&lt;/em&gt; and &lt;em&gt;access_token_uri&lt;/em&gt; can be relative or absolute. If they are relative, the given &lt;em&gt;host&lt;/em&gt;, &lt;em&gt;port&lt;/em&gt; and &lt;em&gt;scheme&lt;/em&gt; will be used. If they are absolute, the absolute URL will be used.</source>
          <target state="translated">任何或所有可自定义的URI &lt;em&gt;request_token_uri&lt;/em&gt;，&lt;em&gt;authorize_uri&lt;/em&gt;和&lt;em&gt;access_token_uri&lt;/em&gt;可以是相对的或绝对的。如果它们是相对的，则将使用给定的&lt;em&gt;host&lt;/em&gt;，&lt;em&gt;port&lt;/em&gt;和&lt;em&gt;scheme&lt;/em&gt;。如果它们是绝对的，则将使用绝对URL。</target>
        </trans-unit>
        <trans-unit id="8a775da44db16b03e32fefcc04471d9b17fcc105" translate="yes" xml:space="preserve">
          <source>Any other character following a backslash is interpreted as the character itself.</source>
          <target state="translated">反斜杠后的任何其他字符都被解释为字符本身。</target>
        </trans-unit>
        <trans-unit id="4d028b419d64baf25c9652fc104f3f4a2a66ba3b" translate="yes" xml:space="preserve">
          <source>Any other value (such as &lt;code&gt;&quot;Europe/Berlin&quot;&lt;/code&gt;) is tried to be resolved using &lt;code&gt;&lt;a href=&quot;location#load(name:String):Location-class-method&quot;&gt;Location.load&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">尝试使用 &lt;code&gt;&lt;a href=&quot;location#load(name:String):Location-class-method&quot;&gt;Location.load&lt;/a&gt;&lt;/code&gt; 解析任何其他值（例如 &lt;code&gt;&quot;Europe/Berlin&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="82a6614beab8db0704c5921429c49797ce9b7526" translate="yes" xml:space="preserve">
          <source>Any string literal can span multiple lines:</source>
          <target state="translated">任何字符串文字都可以跨越多行。</target>
        </trans-unit>
        <trans-unit id="3646646c50577c549d7b31885375be627256816f" translate="yes" xml:space="preserve">
          <source>Any time unit can be omitted.</source>
          <target state="translated">可以省略任何时间单位。</target>
        </trans-unit>
        <trans-unit id="b53adfd856de94019d99f82c9716e65e6bfb4e02" translate="yes" xml:space="preserve">
          <source>Any#==</source>
          <target state="translated">Any#==</target>
        </trans-unit>
        <trans-unit id="112be8d2e694b06d66a10f9996a4e37e8b66e945" translate="yes" xml:space="preserve">
          <source>Any#[]</source>
          <target state="translated">Any#[]</target>
        </trans-unit>
        <trans-unit id="2742a2605e85b20760c4d9ac3ad994fd0b8cbc6a" translate="yes" xml:space="preserve">
          <source>Any#[]?</source>
          <target state="translated">Any#[]?</target>
        </trans-unit>
        <trans-unit id="b80a9b62d9a284fc265fbe6bf21401ba994f5b3e" translate="yes" xml:space="preserve">
          <source>Any#as_a</source>
          <target state="translated">Any#as_a</target>
        </trans-unit>
        <trans-unit id="3b416a12c830c961447306b6b6f1538ccdd42076" translate="yes" xml:space="preserve">
          <source>Any#as_a?</source>
          <target state="translated">Any#as_a?</target>
        </trans-unit>
        <trans-unit id="b0ff173bff52757ea3d720e7d51e7ad444ccd9bb" translate="yes" xml:space="preserve">
          <source>Any#as_bool</source>
          <target state="translated">Any#as_bool</target>
        </trans-unit>
        <trans-unit id="3cdb2993a7a061448e7b8e50d8af802187d16547" translate="yes" xml:space="preserve">
          <source>Any#as_bool?</source>
          <target state="translated">Any#as_bool?</target>
        </trans-unit>
        <trans-unit id="17151558929070e626e1f5bef45d60f9c60cd029" translate="yes" xml:space="preserve">
          <source>Any#as_bytes</source>
          <target state="translated">Any#as_bytes</target>
        </trans-unit>
        <trans-unit id="5ff3e0aaa65b9b16ff6ffe2cfdf4c4127207c54f" translate="yes" xml:space="preserve">
          <source>Any#as_bytes?</source>
          <target state="translated">Any#as_bytes?</target>
        </trans-unit>
        <trans-unit id="14b2d773f0b84e04b68f0c0a98a50167a97108bc" translate="yes" xml:space="preserve">
          <source>Any#as_f</source>
          <target state="translated">Any#as_f</target>
        </trans-unit>
        <trans-unit id="6bfa982dfc4e74bfe6099dfcd914f79b5fac6ea3" translate="yes" xml:space="preserve">
          <source>Any#as_f32</source>
          <target state="translated">Any#as_f32</target>
        </trans-unit>
        <trans-unit id="dde8780445185469240d66a9d3001b1a16a53321" translate="yes" xml:space="preserve">
          <source>Any#as_f32?</source>
          <target state="translated">Any#as_f32?</target>
        </trans-unit>
        <trans-unit id="744e2a549a2989ed3566935c771d8d54e7e9810a" translate="yes" xml:space="preserve">
          <source>Any#as_f?</source>
          <target state="translated">Any#as_f?</target>
        </trans-unit>
        <trans-unit id="dc7a5ce21b265fe51a266bc851be9171386c37c6" translate="yes" xml:space="preserve">
          <source>Any#as_h</source>
          <target state="translated">Any#as_h</target>
        </trans-unit>
        <trans-unit id="a7196aeef5ab7e8831e48e4ab4cf3694decb494f" translate="yes" xml:space="preserve">
          <source>Any#as_h?</source>
          <target state="translated">Any#as_h?</target>
        </trans-unit>
        <trans-unit id="3f29c0c82ccd02bb34a053f94c18ca492983f0a7" translate="yes" xml:space="preserve">
          <source>Any#as_i</source>
          <target state="translated">Any#as_i</target>
        </trans-unit>
        <trans-unit id="5e3902ec3d0b0790d519ec70adeb33bbc21d4c1a" translate="yes" xml:space="preserve">
          <source>Any#as_i64</source>
          <target state="translated">Any#as_i64</target>
        </trans-unit>
        <trans-unit id="47fb00eb47cd001f491200f0fed7e54e96dbf4a2" translate="yes" xml:space="preserve">
          <source>Any#as_i64?</source>
          <target state="translated">Any#as_i64?</target>
        </trans-unit>
        <trans-unit id="7ad8ab24654b8494e79cad1649e3820006f7315d" translate="yes" xml:space="preserve">
          <source>Any#as_i?</source>
          <target state="translated">Any#as_i?</target>
        </trans-unit>
        <trans-unit id="c68a855320f34cc17839e663a6f7633144278828" translate="yes" xml:space="preserve">
          <source>Any#as_nil</source>
          <target state="translated">Any#as_nil</target>
        </trans-unit>
        <trans-unit id="24ec8d83a22602574a5fc59f14a4545da35496bc" translate="yes" xml:space="preserve">
          <source>Any#as_s</source>
          <target state="translated">Any#as_s</target>
        </trans-unit>
        <trans-unit id="7f43772dd3a2b76ed6f9d438460297b62b8b75ec" translate="yes" xml:space="preserve">
          <source>Any#as_s?</source>
          <target state="translated">Any#as_s?</target>
        </trans-unit>
        <trans-unit id="6c7d30ae17ce5bcf5179d81e2e8cd7960e9b232f" translate="yes" xml:space="preserve">
          <source>Any#as_time</source>
          <target state="translated">Any#as_time</target>
        </trans-unit>
        <trans-unit id="a618127480801f9d14e335b1dc63892716bdbbcd" translate="yes" xml:space="preserve">
          <source>Any#as_time?</source>
          <target state="translated">Any#as_time?</target>
        </trans-unit>
        <trans-unit id="af3bb0e14cb0fd6c4bbeb2fe405fe90292555eef" translate="yes" xml:space="preserve">
          <source>Any#clone</source>
          <target state="translated">Any#clone</target>
        </trans-unit>
        <trans-unit id="af44ff023e07f0470366251b8a75d66744f2bd28" translate="yes" xml:space="preserve">
          <source>Any#dig</source>
          <target state="translated">Any#dig</target>
        </trans-unit>
        <trans-unit id="2f9352508f82ccd1a330cdf87d6b94c2a13a26d5" translate="yes" xml:space="preserve">
          <source>Any#dig?</source>
          <target state="translated">Any#dig?</target>
        </trans-unit>
        <trans-unit id="e9f4b3c3f720fa501a2d3ee0e61f5ae9dc815428" translate="yes" xml:space="preserve">
          <source>Any#dup</source>
          <target state="translated">Any#dup</target>
        </trans-unit>
        <trans-unit id="1947dd36a291ad18be24199eff7bb8228fac82b2" translate="yes" xml:space="preserve">
          <source>Any#hash</source>
          <target state="translated">Any#hash</target>
        </trans-unit>
        <trans-unit id="5c3a005ce5acce304d259cb3f0d75abbc8f44c84" translate="yes" xml:space="preserve">
          <source>Any#raw</source>
          <target state="translated">Any#raw</target>
        </trans-unit>
        <trans-unit id="07856cc55486767a3c85c459d50f87d176de7307" translate="yes" xml:space="preserve">
          <source>Any#size</source>
          <target state="translated">Any#size</target>
        </trans-unit>
        <trans-unit id="20d75ac63a2430d01743d0cf19221b66524a94d7" translate="yes" xml:space="preserve">
          <source>Any#to_json</source>
          <target state="translated">Any#to_json</target>
        </trans-unit>
        <trans-unit id="c37d721df435818cb7293215c8d2b53c9b5a5c44" translate="yes" xml:space="preserve">
          <source>Any#to_json_object_key</source>
          <target state="translated">Any#to_json_object_key</target>
        </trans-unit>
        <trans-unit id="aa5d26e44dccfafe66fef1d8a693668fc86cd29c" translate="yes" xml:space="preserve">
          <source>Any#to_yaml</source>
          <target state="translated">Any#to_yaml</target>
        </trans-unit>
        <trans-unit id="a6a64c2dd9923f8abb7c1930fbcb4de95d5b0a45" translate="yes" xml:space="preserve">
          <source>Any.new</source>
          <target state="translated">Any.new</target>
        </trans-unit>
        <trans-unit id="2cf58f2aa1c66ab402bad4b706f85f1102d473ca" translate="yes" xml:space="preserve">
          <source>Any::Type</source>
          <target state="translated">Any::Type</target>
        </trans-unit>
        <trans-unit id="e8b5fa63ab59f20902f4c5cbd86a02c71b02b62f" translate="yes" xml:space="preserve">
          <source>AnyReg</source>
          <target state="translated">AnyReg</target>
        </trans-unit>
        <trans-unit id="92c2c4c622b24d471fa6fc9a135e660924288ceb" translate="yes" xml:space="preserve">
          <source>Append multiple values.</source>
          <target state="translated">附加多个值。</target>
        </trans-unit>
        <trans-unit id="da0eec5b8078fe752e5371f21106392f3c6acd44" translate="yes" xml:space="preserve">
          <source>Append multiple values. The same as &lt;code&gt;&lt;a href=&quot;array#push(*values:T)-instance-method&quot;&gt;#push&lt;/a&gt;&lt;/code&gt;, but takes an arbitrary number of values to push into &lt;code&gt;self&lt;/code&gt;. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7e135e6bea97de4153d3dedc5673190f7bcce4" translate="yes" xml:space="preserve">
          <source>Append multiple values. The same as &lt;code&gt;&lt;a href=&quot;array#push(value:T)-instance-method&quot;&gt;#push&lt;/a&gt;&lt;/code&gt;, but takes an arbitrary number of values to push into &lt;code&gt;self&lt;/code&gt;. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">附加多个值。与 &lt;code&gt;&lt;a href=&quot;array#push(value:T)-instance-method&quot;&gt;#push&lt;/a&gt;&lt;/code&gt; 相同，但需要任意数量的值才能将其压入 &lt;code&gt;self&lt;/code&gt; 。返回 &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f2903e2088270b463902676f3d83c206c4baacf4" translate="yes" xml:space="preserve">
          <source>Append.</source>
          <target state="translated">Append.</target>
        </trans-unit>
        <trans-unit id="420a94f6164667022591e9c3e128fe3474ffec50" translate="yes" xml:space="preserve">
          <source>Append. Alias for &lt;code&gt;&lt;a href=&quot;array#push(*values:T)-instance-method&quot;&gt;#push&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="005a0d6972449dc5bcf15172db99029728c54ba3" translate="yes" xml:space="preserve">
          <source>Append. Alias for &lt;code&gt;&lt;a href=&quot;array#push(value:T)-instance-method&quot;&gt;#push&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">附加。 &lt;code&gt;&lt;a href=&quot;array#push(value:T)-instance-method&quot;&gt;#push&lt;/a&gt;&lt;/code&gt; 的别名。</target>
        </trans-unit>
        <trans-unit id="b3c065a62be2f329fd672eba8e1c1c1f3a10406e" translate="yes" xml:space="preserve">
          <source>Append. Pushes one value to the end of &lt;code&gt;self&lt;/code&gt;, given that the type of the value is &lt;em&gt;T&lt;/em&gt; (which might be a single type or a union of types). This method returns &lt;code&gt;self&lt;/code&gt;, so several calls can be chained. See &lt;code&gt;&lt;a href=&quot;array#pop(&amp;amp;)-instance-method&quot;&gt;#pop&lt;/a&gt;&lt;/code&gt; for the opposite effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134a93ccaa1599893a808030a1d7b5e8488d8c82" translate="yes" xml:space="preserve">
          <source>Append. Pushes one value to the end of &lt;code&gt;self&lt;/code&gt;, given that the type of the value is &lt;em&gt;T&lt;/em&gt; (which might be a single type or a union of types). This method returns &lt;code&gt;self&lt;/code&gt;, so several calls can be chained. See &lt;code&gt;&lt;a href=&quot;array#pop-instance-method&quot;&gt;#pop&lt;/a&gt;&lt;/code&gt; for the opposite effect.</source>
          <target state="translated">附加。假设值的类型为&lt;em&gt;T&lt;/em&gt;（可以是单个类型或类型的并集），则将一个值推到 &lt;code&gt;self&lt;/code&gt; 的末尾。此方法返回 &lt;code&gt;self&lt;/code&gt; ，因此可以链接多个调用。相反的效果，请参见 &lt;code&gt;&lt;a href=&quot;array#pop-instance-method&quot;&gt;#pop&lt;/a&gt;&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5e65ceb80602a8b1c9b2d8842430f00d11d5ac17" translate="yes" xml:space="preserve">
          <source>Appender</source>
          <target state="translated">Appender</target>
        </trans-unit>
        <trans-unit id="fe4e86aaa99a6f1a24c0ba6249c9bb44d6753df3" translate="yes" xml:space="preserve">
          <source>Appender#&amp;lt;&amp;lt;</source>
          <target state="translated">Appender#&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="623b7c7711e9c06bf7a4d64decafb4b67cbc0ed4" translate="yes" xml:space="preserve">
          <source>Appender#pointer</source>
          <target state="translated">Appender#pointer</target>
        </trans-unit>
        <trans-unit id="52bd064b58f9b297b6be8625057e0b3a600501b7" translate="yes" xml:space="preserve">
          <source>Appender#size</source>
          <target state="translated">Appender#size</target>
        </trans-unit>
        <trans-unit id="21a0ec48cdf30fb7a9bc90eb42f3656b9d11ccbc" translate="yes" xml:space="preserve">
          <source>Appender.new</source>
          <target state="translated">Appender.new</target>
        </trans-unit>
        <trans-unit id="aff95d2e1ec32e966d2138494495653618e53ea3" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;&quot;true&quot;&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;&quot;false&quot;&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; to the given IO.</source>
          <target state="translated">给定IO 附加 &lt;code&gt;&quot;true&quot;&lt;/code&gt; （ &lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;&quot;false&quot;&lt;/code&gt; （ &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bbb9e0cf0427527790bb4a4065962144fb5c78a5" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;self&lt;/code&gt; to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">将 &lt;code&gt;self&lt;/code&gt; 附加到&lt;em&gt;io&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="9d73534333da9c50324001b25d28799c92b77914" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;self&lt;/code&gt; to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object using character escapes for special characters and and non-ascii characters (unicode codepoints &amp;gt; 128), but not wrapped in quotes.</source>
          <target state="translated">使用特殊字符和非ASCII字符（Unicode代码点&amp;gt; 128）的字符转义符将 &lt;code&gt;self&lt;/code&gt; 附加到给定的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 对象，但不使用引号引起来。</target>
        </trans-unit>
        <trans-unit id="41d500ab7b0cae6434b10d00b5ce86a50fdd3e44" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;self&lt;/code&gt; to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object using character escapes for special characters and and non-ascii characters (unicode codepoints &amp;gt; 128), wrapped in quotes.</source>
          <target state="translated">使用特殊字符和非ASCII字符（Unicode代码点&amp;gt; 128）的字符转义符将 &lt;code&gt;self&lt;/code&gt; 附加到给定的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 对象中，并用引号引起来。</target>
        </trans-unit>
        <trans-unit id="b789e50e47cc7c7469567c838a9d7de90c5130c0" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;self&lt;/code&gt; to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object using character escapes for special characters and non-ascii characters (unicode codepoints &amp;gt; 128), but not wrapped in quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9df2ad86e4fff4139c40288055b645aabbd458" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;self&lt;/code&gt; to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object using character escapes for special characters and non-ascii characters (unicode codepoints &amp;gt; 128), wrapped in quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f3e2c8c36fc0fbc5cf841bbd0773492a04821e" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;self&lt;/code&gt; to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object using character escapes for special characters and wrapped in double quotes.</source>
          <target state="translated">使用特殊字符的字符转义符将 &lt;code&gt;self&lt;/code&gt; 附加到给定的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 对象，并用双引号引起来。</target>
        </trans-unit>
        <trans-unit id="eb7739696c9409dc2c5e484c2efa5d0d96044361" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;self&lt;/code&gt; to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object using character escapes for special characters but not wrapped in quotes.</source>
          <target state="translated">使用特殊字符的字符转义符将 &lt;code&gt;self&lt;/code&gt; 附加到给定的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 对象，而不用引号引起来。</target>
        </trans-unit>
        <trans-unit id="457e0c4fed14010ecbbb69ae458c8a59751f780c" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;data&lt;/em&gt; to the epilogue segment of the multipart message.</source>
          <target state="translated">将&lt;em&gt;数据&lt;/em&gt;追加到多部分消息的结尾段。</target>
        </trans-unit>
        <trans-unit id="44cc102b5bc5cd8f705980099e232f6198039be0" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;data&lt;/em&gt; to the epilogue segment of the multipart message. Throws if &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; is called before this method, or no body parts have been appended.</source>
          <target state="translated">将&lt;em&gt;数据&lt;/em&gt;追加到多部分消息的结尾段。如果在此方法之前调用 &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; 或没有附加身体部位，则抛出该异常。</target>
        </trans-unit>
        <trans-unit id="78f90369b8c5420ad970cbfe696fbee67ea8a5e3" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;data&lt;/em&gt; to the preamble segment of the multipart message.</source>
          <target state="translated">将&lt;em&gt;数据&lt;/em&gt;追加到多部分消息的前导段。</target>
        </trans-unit>
        <trans-unit id="0a1337c8c3ebd1c2cf260a904c3fafa754e08c16" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;data&lt;/em&gt; to the preamble segment of the multipart message. Throws if &lt;code&gt;&lt;a href=&quot;builder#body_part(headers:HTTP::Headers,string:String)-instance-method&quot;&gt;#body_part&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">将&lt;em&gt;数据&lt;/em&gt;追加到多部分消息的前导段。如果在此方法之前调用 &lt;code&gt;&lt;a href=&quot;builder#body_part(headers:HTTP::Headers,string:String)-instance-method&quot;&gt;#body_part&lt;/a&gt;&lt;/code&gt; ,则抛出该异常。</target>
        </trans-unit>
        <trans-unit id="30f276db325e66f9cd6cfac4ab1d88687df77acd" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;preamble_io&lt;/em&gt; to the epilogue segment of the multipart message.</source>
          <target state="translated">将&lt;em&gt;preamble_io&lt;/em&gt;追加到多部分消息的结尾段。</target>
        </trans-unit>
        <trans-unit id="a02a6dfa1a8f042099ec4a87180892a8ea40cb6c" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;preamble_io&lt;/em&gt; to the epilogue segment of the multipart message. Throws if &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; is called before this method, or no body parts have been appended.</source>
          <target state="translated">将&lt;em&gt;preamble_io&lt;/em&gt;追加到多部分消息的结尾段。如果在此方法之前调用 &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; 或没有附加身体部位，则抛出该异常。</target>
        </trans-unit>
        <trans-unit id="f964d943264f7923c8e29ad38876483c48cede2d" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;preamble_io&lt;/em&gt; to the preamble segment of the multipart message.</source>
          <target state="translated">追加&lt;em&gt;preamble_io&lt;/em&gt;到多部分消息的前同步码段。</target>
        </trans-unit>
        <trans-unit id="74b71f2249c8915bc38b3d5dcae0de01bd6bfbe4" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;preamble_io&lt;/em&gt; to the preamble segment of the multipart message. Throws if &lt;code&gt;&lt;a href=&quot;builder#body_part(headers:HTTP::Headers,string:String)-instance-method&quot;&gt;#body_part&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">追加&lt;em&gt;preamble_io&lt;/em&gt;到多部分消息的前同步码段。如果在此方法之前调用 &lt;code&gt;&lt;a href=&quot;builder#body_part(headers:HTTP::Headers,string:String)-instance-method&quot;&gt;#body_part&lt;/a&gt;&lt;/code&gt; ,则抛出该异常。</target>
        </trans-unit>
        <trans-unit id="7806b57316694aacc46c7893a01ecd70930c2957" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;string&lt;/em&gt; to the epilogue segment of the multipart message.</source>
          <target state="translated">将&lt;em&gt;字符串&lt;/em&gt;追加到多部分消息的结尾段。</target>
        </trans-unit>
        <trans-unit id="51f0e9f004d8b2c217afbae0699b9e7079013f04" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;string&lt;/em&gt; to the epilogue segment of the multipart message. Throws if &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; is called before this method, or no body parts have been appended.</source>
          <target state="translated">将&lt;em&gt;字符串&lt;/em&gt;追加到多部分消息的结尾段。如果在此方法之前调用 &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; 或没有附加身体部位，则抛出该异常。</target>
        </trans-unit>
        <trans-unit id="8ed0dd98c035102c2c156e6fe2874c3271b08296" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;string&lt;/em&gt; to the preamble segment of the multipart message.</source>
          <target state="translated">将&lt;em&gt;字符串&lt;/em&gt;追加到多部分消息的前导段。</target>
        </trans-unit>
        <trans-unit id="9814f620f53c8ee5a66b8ce6795469b9c1e890e1" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;string&lt;/em&gt; to the preamble segment of the multipart message. Throws if &lt;code&gt;&lt;a href=&quot;builder#body_part(headers:HTTP::Headers,string:String)-instance-method&quot;&gt;#body_part&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">将&lt;em&gt;字符串&lt;/em&gt;追加到多部分消息的前导段。如果在此方法之前调用 &lt;code&gt;&lt;a href=&quot;builder#body_part(headers:HTTP::Headers,string:String)-instance-method&quot;&gt;#body_part&lt;/a&gt;&lt;/code&gt; ,则抛出该异常。</target>
        </trans-unit>
        <trans-unit id="acd218d9a394df3689d7144841d1453101e3e8f9" translate="yes" xml:space="preserve">
          <source>Appends CSV data to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将CSV数据附加到给定的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c2b5d55ed7554d5a9053d1b36b2cb8538197ff71" translate="yes" xml:space="preserve">
          <source>Appends CSV data to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. This yields a &lt;code&gt;&lt;a href=&quot;csv/builder&quot;&gt;CSV::Builder&lt;/a&gt;&lt;/code&gt; that writes to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将CSV数据附加到给定的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。这产生了一个 &lt;code&gt;&lt;a href=&quot;csv/builder&quot;&gt;CSV::Builder&lt;/a&gt;&lt;/code&gt; ，它写入给定的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a4e654def14db1066b5e839fefff084adf99c0c" translate="yes" xml:space="preserve">
          <source>Appends INI data to the given IO.</source>
          <target state="translated">将INI数据添加到给定的IO中。</target>
        </trans-unit>
        <trans-unit id="0ffad84072f327dcd0bb9b3bfbb8ecb227033462" translate="yes" xml:space="preserve">
          <source>Appends a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; representation of this enum member to the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">将此枚举成员的 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 表示形式追加到给定的&lt;em&gt;io上&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="665feebec7de57a20695da119ecf59a29a905d18" translate="yes" xml:space="preserve">
          <source>Appends a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; representation of this enum member to the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">将此枚举成员的 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 表示形式追加到给定的&lt;em&gt;io上&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="94e8123b44a0dd1a1cb9b96d894f13e71239fdfd" translate="yes" xml:space="preserve">
          <source>Appends a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; representation of this object to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="translated">将此对象的 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 表示形式追加到给定的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="ad0e7acdb8c39c61440e7b6b422629366e77be8e" translate="yes" xml:space="preserve">
          <source>Appends a String representation of this object which includes its class name, its object address and the values of all instance variables.</source>
          <target state="translated">添加此对象的一个字符串表示,其中包括它的类名、对象地址和所有实例变量的值。</target>
        </trans-unit>
        <trans-unit id="a81991a4b4e09219cb3d8e4b0faa3f1e6e99b57e" translate="yes" xml:space="preserve">
          <source>Appends a body part to the multipart message with the given &lt;em&gt;headers&lt;/em&gt; and &lt;em&gt;data&lt;/em&gt;.</source>
          <target state="translated">使用给定的&lt;em&gt;标头&lt;/em&gt;和&lt;em&gt;数据&lt;/em&gt;将正文部分追加到多部分消息中。</target>
        </trans-unit>
        <trans-unit id="d1a9f4c849450fb24fcc4f7a5dcc1a93bd7a7517" translate="yes" xml:space="preserve">
          <source>Appends a body part to the multipart message with the given &lt;em&gt;headers&lt;/em&gt; and &lt;em&gt;data&lt;/em&gt;. Throws if &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">使用给定的&lt;em&gt;标头&lt;/em&gt;和&lt;em&gt;数据&lt;/em&gt;将正文部分追加到多部分消息中。在此方法之前调用 &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; 引发。</target>
        </trans-unit>
        <trans-unit id="b4b451d4dd49a6ad6009a92cbfc4574f4023fb07" translate="yes" xml:space="preserve">
          <source>Appends a body part to the multipart message with the given &lt;em&gt;headers&lt;/em&gt; and &lt;em&gt;data&lt;/em&gt;. Throws if &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;block)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">使用给定的&lt;em&gt;标头&lt;/em&gt;和&lt;em&gt;数据&lt;/em&gt;将正文部分追加到多部分消息中。如果在此方法之前调用 &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;block)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; ,则抛出该异常。</target>
        </trans-unit>
        <trans-unit id="f609808259c9fa31e53131d5400024c71146f41c" translate="yes" xml:space="preserve">
          <source>Appends a body part to the multipart message with the given &lt;em&gt;headers&lt;/em&gt; and &lt;em&gt;string&lt;/em&gt;.</source>
          <target state="translated">使用给定的&lt;em&gt;标头&lt;/em&gt;和&lt;em&gt;字符串&lt;/em&gt;将正文部分追加到多部分消息中。</target>
        </trans-unit>
        <trans-unit id="cfc77e51cdde7e246cdcdfb29dd2e56f2b6f85d1" translate="yes" xml:space="preserve">
          <source>Appends a body part to the multipart message with the given &lt;em&gt;headers&lt;/em&gt; and &lt;em&gt;string&lt;/em&gt;. Throws if &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">使用给定的&lt;em&gt;标头&lt;/em&gt;和&lt;em&gt;字符串&lt;/em&gt;将正文部分追加到多部分消息中。在此方法之前调用 &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; 引发。</target>
        </trans-unit>
        <trans-unit id="9efe12770137bda7378ca598492e682d634c11a7" translate="yes" xml:space="preserve">
          <source>Appends a body part to the multipart message with the given &lt;em&gt;headers&lt;/em&gt; and &lt;em&gt;string&lt;/em&gt;. Throws if &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;block)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">使用给定的&lt;em&gt;标头&lt;/em&gt;和&lt;em&gt;字符串&lt;/em&gt;将正文部分追加到多部分消息中。如果在此方法之前调用 &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;block)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; ,则抛出该异常。</target>
        </trans-unit>
        <trans-unit id="5a60858c3d54d890f2c552b84e66c52547e76af4" translate="yes" xml:space="preserve">
          <source>Appends a body part to the multipart message with the given &lt;em&gt;headers&lt;/em&gt; and data from &lt;em&gt;body_io&lt;/em&gt;.</source>
          <target state="translated">使用&lt;em&gt;body_io中&lt;/em&gt;给定的&lt;em&gt;标头&lt;/em&gt;和数据将正文部分追加到多部分消息中。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d184b0ab847823e174a7c9edeee95b768bcb2708" translate="yes" xml:space="preserve">
          <source>Appends a body part to the multipart message with the given &lt;em&gt;headers&lt;/em&gt; and data from &lt;em&gt;body_io&lt;/em&gt;. Throws if &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">使用&lt;em&gt;body_io中&lt;/em&gt;给定的&lt;em&gt;标头&lt;/em&gt;和数据将正文部分追加到多部分消息中。在此方法之前调用 &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; 引发。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="806f205151429bc35c277fa7081b5c2c3cd6e58a" translate="yes" xml:space="preserve">
          <source>Appends a body part to the multipart message with the given &lt;em&gt;headers&lt;/em&gt; and data from &lt;em&gt;body_io&lt;/em&gt;. Throws if &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;block)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">使用&lt;em&gt;body_io中&lt;/em&gt;给定的&lt;em&gt;标头&lt;/em&gt;和数据将正文部分追加到多部分消息中。如果在此方法之前调用 &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;block)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; ,则抛出该异常。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="55f56912e267dc2e39a7ab4b88cf156505a7eba0" translate="yes" xml:space="preserve">
          <source>Appends a body part to the multipart message with the given &lt;em&gt;headers&lt;/em&gt; and no body data.</source>
          <target state="translated">将正文部分附加到具有给定&lt;em&gt;标头&lt;/em&gt;且没有正文数据的多部分消息中。</target>
        </trans-unit>
        <trans-unit id="d58b80d04ed22820b01da6343b0fe93a66d87b93" translate="yes" xml:space="preserve">
          <source>Appends a body part to the multipart message with the given &lt;em&gt;headers&lt;/em&gt; and no body data. Throws is &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">将正文部分附加到具有给定&lt;em&gt;标头&lt;/em&gt;且没有正文数据的多部分消息中。在此方法之前，抛出 &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d200a2ec9c3b70846470daa5b6ca18f212504768" translate="yes" xml:space="preserve">
          <source>Appends a body part to the multipart message with the given &lt;em&gt;headers&lt;/em&gt; and no body data. Throws is &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;block)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">将正文部分附加到具有给定&lt;em&gt;标头&lt;/em&gt;且没有正文数据的多部分消息中。在此方法之前，抛出 &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;block)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6efd05e602694d5d0b36eb7ca5bb614ff69e5cad" translate="yes" xml:space="preserve">
          <source>Appends a comma, thus skipping a cell.</source>
          <target state="translated">附加一个逗号,从而跳过一个单元格。</target>
        </trans-unit>
        <trans-unit id="9a41e64f8b68525fed37b2a432f9676a10970dd0" translate="yes" xml:space="preserve">
          <source>Appends a group that is surrounded by the given &lt;em&gt;left&lt;/em&gt; and &lt;em&gt;right&lt;/em&gt; objects, and optionally is surrounded by the given breakable objects.</source>
          <target state="translated">追加到由给定包围一组&lt;em&gt;左&lt;/em&gt;和&lt;em&gt;右&lt;/em&gt;对象，以及任选地由给定易碎的物体所包围。</target>
        </trans-unit>
        <trans-unit id="80c8dcd3257e892778cb5dd19c7b12e832f9bf2c" translate="yes" xml:space="preserve">
          <source>Appends a list of elements surrounded by &lt;em&gt;left&lt;/em&gt; and &lt;em&gt;right&lt;/em&gt; and separated by commas, yielding each element to the given block.</source>
          <target state="translated">追加一个元素列表，该元素列表由&lt;em&gt;左&lt;/em&gt;，&lt;em&gt;右&lt;/em&gt;包围，并用逗号分隔，将每个元素生成给定的块。</target>
        </trans-unit>
        <trans-unit id="9ad8ea88b265ee81117ea71bea554a972b19b51b" translate="yes" xml:space="preserve">
          <source>Appends a list of elements surrounded by &lt;em&gt;left&lt;/em&gt; and &lt;em&gt;right&lt;/em&gt; and separated by commas.</source>
          <target state="translated">追加元素列表，这些元素由&lt;em&gt;左&lt;/em&gt;，&lt;em&gt;右&lt;/em&gt;包围，并以逗号分隔。</target>
        </trans-unit>
        <trans-unit id="0718a5d08e2a7bfb845cf1f8d69b624832240597" translate="yes" xml:space="preserve">
          <source>Appends a node into this sequence.</source>
          <target state="translated">将一个节点添加到这个序列中。</target>
        </trans-unit>
        <trans-unit id="e2d97093528e4e88227e5cb407cffa30f0be5649" translate="yes" xml:space="preserve">
          <source>Appends a node to this document.</source>
          <target state="translated">将一个节点添加到此文档中。</target>
        </trans-unit>
        <trans-unit id="ce3c378a5d56996069f33bd055706f85318cb1a9" translate="yes" xml:space="preserve">
          <source>Appends a node to this document. Raises if more than one node is appended.</source>
          <target state="translated">将一个节点添加到这个文档中。如果有多个节点被附加,则发出警报。</target>
        </trans-unit>
        <trans-unit id="9e6d7e4ad933058d4726228e09167ebc7e8861b7" translate="yes" xml:space="preserve">
          <source>Appends a short String representation of this object which includes its class name and its object address.</source>
          <target state="translated">附加一个简短的字符串表示这个对象,其中包括它的类名和对象地址。</target>
        </trans-unit>
        <trans-unit id="5989ca8ea660e9d375a8c02a916c78b3dde9de41" translate="yes" xml:space="preserve">
          <source>Appends a single node into this mapping.</source>
          <target state="translated">将单个节点添加到这个映射中。</target>
        </trans-unit>
        <trans-unit id="5bfa3eb5eba3b9dd2ce94b86fdab7b84c5d12341" translate="yes" xml:space="preserve">
          <source>Appends a string representation of this named tuple to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将此命名元组的字符串表示形式追加到给定的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="124d73b62aa9d04eba8daa976701121d959b56f7" translate="yes" xml:space="preserve">
          <source>Appends a string representation of this object to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="translated">将此对象的字符串表示形式附加到给定的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="f5dc9652918bbfdd3f4278de95bb3f576c97ff3c" translate="yes" xml:space="preserve">
          <source>Appends a string representation of this pointer to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, including its type and address in hexadecimal.</source>
          <target state="translated">将此指针的字符串表示形式附加到给定的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; ，包括其类型和地址（十六进制）。</target>
        </trans-unit>
        <trans-unit id="fc16f73fb863173d6d226af5198ce782e37eb5c6" translate="yes" xml:space="preserve">
          <source>Appends a string representation of this static array to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将此静态数组的字符串表示形式追加到给定的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae46e03ba9bf87fccc1bc34952fb6b3e0cbe384b" translate="yes" xml:space="preserve">
          <source>Appends a string representation of this tuple to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将这个元组的字符串表示形式附加到给定的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="144ce172a84be3ade2c4fae0d86bfe4c8aa75801" translate="yes" xml:space="preserve">
          <source>Appends a text element.</source>
          <target state="translated">添加一个文本元素。</target>
        </trans-unit>
        <trans-unit id="bd2926a2016b6bf1b0cdfdeb0b1d06be672f3764" translate="yes" xml:space="preserve">
          <source>Appends an element that can turn into a newline if necessary.</source>
          <target state="translated">添加一个元素,必要时可以变成一个新行。</target>
        </trans-unit>
        <trans-unit id="bb1b6da32738fbb41e8062bc71f0b1d9f9034fe0" translate="yes" xml:space="preserve">
          <source>Appends new value for specified param &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="translated">为指定的参数&lt;em&gt;名称&lt;/em&gt;附加新值。</target>
        </trans-unit>
        <trans-unit id="2ab281dc79fd23f51a4b1aa21a78125867c194bf" translate="yes" xml:space="preserve">
          <source>Appends new value for specified param &lt;em&gt;name&lt;/em&gt;. Creates param when there was no such param.</source>
          <target state="translated">为指定的参数&lt;em&gt;名称&lt;/em&gt;附加新值。没有参数时创建参数。</target>
        </trans-unit>
        <trans-unit id="d946c2ea232f7ad9b22b6c894d37165bfd69a2d0" translate="yes" xml:space="preserve">
          <source>Appends the elements of &lt;em&gt;other&lt;/em&gt; to &lt;code&gt;self&lt;/code&gt;, and returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">附加的元素&lt;em&gt;等&lt;/em&gt;，以 &lt;code&gt;self&lt;/code&gt; ，并返回 &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fcb7b70c039e7acfd8e091fb0672fef6c7bf010c" translate="yes" xml:space="preserve">
          <source>Appends the given &lt;em&gt;part&lt;/em&gt; to this path and returns the joined path.</source>
          <target state="translated">将给定的&lt;em&gt;零件&lt;/em&gt;追加到此路径并返回连接的路径。</target>
        </trans-unit>
        <trans-unit id="bcfcbb890b444766ace338d569eeffc7fb664285" translate="yes" xml:space="preserve">
          <source>Appends the given &lt;em&gt;parts&lt;/em&gt; to this path and returns the joined path.</source>
          <target state="translated">将给定的&lt;em&gt;零件&lt;/em&gt;追加到此路径并返回合并的路径。</target>
        </trans-unit>
        <trans-unit id="b6005704a74a8f9d727a785770b63e83d8896adb" translate="yes" xml:space="preserve">
          <source>Appends the given value to this row.</source>
          <target state="translated">将给定值添加到这一行。</target>
        </trans-unit>
        <trans-unit id="8256bb5d40f8db47bc2bef824ad74d98a6e15766" translate="yes" xml:space="preserve">
          <source>Appends the given values as a single row, and then a newline.</source>
          <target state="translated">将给定的值作为单行添加,然后添加一个新行。</target>
        </trans-unit>
        <trans-unit id="7de5d3b6ef8254a2d25dfdb9363aae0c60f36acf" translate="yes" xml:space="preserve">
          <source>Appends the given values to this row.</source>
          <target state="translated">将给定的值添加到这一行。</target>
        </trans-unit>
        <trans-unit id="0f0a8f63b5085aaa9da78d6d5614e7c0f4df424c" translate="yes" xml:space="preserve">
          <source>Appends the string representation of this path to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">将此路径的字符串表示形式追加到&lt;em&gt;io&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b853e3b724db8955cde01c9bfd78a38028091e9b" translate="yes" xml:space="preserve">
          <source>Appends the symbol's name to the passed &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将符号名称附加到传递的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 上。</target>
        </trans-unit>
        <trans-unit id="c760dd13d0ce9834c4bda6fc09c5950a5450cb4d" translate="yes" xml:space="preserve">
          <source>Appends this char as a string that contains a char literal to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将此char附加为包含给定 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 的char文字的字符串。</target>
        </trans-unit>
        <trans-unit id="73ab35b0f8334036af3397b091c0036c3ce09aaf" translate="yes" xml:space="preserve">
          <source>Appends this char to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将此字符追加到给定的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75097835ad9fb30d356ef76ab6c36f1b93592276" translate="yes" xml:space="preserve">
          <source>Appends this internal buffer to the given &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将此内部缓冲区附加到给定的 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82fe76247c9152f7930a7060b48bb3ff3b82a29c" translate="yes" xml:space="preserve">
          <source>Appends this object's value to &lt;em&gt;hasher&lt;/em&gt;, and returns the modified &lt;em&gt;hasher&lt;/em&gt;.</source>
          <target state="translated">将此对象的值附加到&lt;em&gt;hasher&lt;/em&gt;，然后返回修改后的&lt;em&gt;hasher&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="87e0e9b01b206deeaf70a312bb96d884b75d0b2b" translate="yes" xml:space="preserve">
          <source>Appends this struct's name and instance variables names and values to the given IO.</source>
          <target state="translated">将这个结构的名称和实例变量的名称和值附加到给定的IO中。</target>
        </trans-unit>
        <trans-unit id="8325d305f1ce076fc5296c566d5a5f98c39faaf2" translate="yes" xml:space="preserve">
          <source>Appends two nodes into this mapping.</source>
          <target state="translated">将两个节点添加到这个映射中。</target>
        </trans-unit>
        <trans-unit id="76c74bd071dd73f01696fddbbffc77712a479faf" translate="yes" xml:space="preserve">
          <source>Applications</source>
          <target state="translated">Applications</target>
        </trans-unit>
        <trans-unit id="8ae72dd6ea2df06a6f9d70adf5823a7dea3c82dc" translate="yes" xml:space="preserve">
          <source>Applications can register their own MIME types:</source>
          <target state="translated">应用程序可以注册自己的MIME类型。</target>
        </trans-unit>
        <trans-unit id="c028748c87e468f24334767c05321d4f4b66b6c8" translate="yes" xml:space="preserve">
          <source>Arch Linux includes the Crystal compiler in the Community repository. You should also install &lt;code&gt;shards&lt;/code&gt;, Crystal's dependency manager (see &lt;a href=&quot;../the_shards_command/index&quot;&gt;The Shards command&lt;/a&gt;).</source>
          <target state="translated">Arch Linux在社区存储库中包含Crystal编译器。您还应该安装 &lt;code&gt;shards&lt;/code&gt; ，这是Crystal的依赖项管理器（请参见&lt;a href=&quot;../the_shards_command/index&quot;&gt;The Shards命令&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ee329d69ca304901cbe7cf136db09a25d7c200fa" translate="yes" xml:space="preserve">
          <source>Archimedes</source>
          <target state="translated">Archimedes</target>
        </trans-unit>
        <trans-unit id="93c997b8c05c51820940268618bc24c93ca04844" translate="yes" xml:space="preserve">
          <source>Archimedes' constant (&amp;pi;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8bc95515466bfd1d5820bfea495f62a49211b2b" translate="yes" xml:space="preserve">
          <source>Argument list too long</source>
          <target state="translated">争论列表太长</target>
        </trans-unit>
        <trans-unit id="649115d22398e9eb64f88197e12ca82333fec41a" translate="yes" xml:space="preserve">
          <source>Argument to a &lt;code&gt;seek&lt;/code&gt; operation.</source>
          <target state="translated">&lt;code&gt;seek&lt;/code&gt; 操作的争论。</target>
        </trans-unit>
        <trans-unit id="41ed7b8f7c8e97d4eaa49d91cf5d985f2894e409" translate="yes" xml:space="preserve">
          <source>ArgumentError</source>
          <target state="translated">ArgumentError</target>
        </trans-unit>
        <trans-unit id="4b795f1ce004d075dc998de340641e9a28d98a44" translate="yes" xml:space="preserve">
          <source>ArgumentError.new</source>
          <target state="translated">ArgumentError.new</target>
        </trans-unit>
        <trans-unit id="86dc099c2338cad0373a484db74ee0fe2995cea6" translate="yes" xml:space="preserve">
          <source>Arguments can be used with the short syntax argument as well:</source>
          <target state="translated">参数也可以使用短句法参数。</target>
        </trans-unit>
        <trans-unit id="7909716542d098c134fd8c368c6311dab8b15f98" translate="yes" xml:space="preserve">
          <source>Arguments past the splat argument can only be passed as named arguments:</source>
          <target state="translated">溅射参数过去的参数只能作为命名参数传递。</target>
        </trans-unit>
        <trans-unit id="b367ecd9479b1856bb17884792fb945cf8fa508a" translate="yes" xml:space="preserve">
          <source>Arguments past the splat method without a default value are required named arguments:</source>
          <target state="translated">没有默认值的split方法过去的参数是必须的命名参数。</target>
        </trans-unit>
        <trans-unit id="ff25da05313f22094e530db841f3df617a629472" translate="yes" xml:space="preserve">
          <source>Arguments past the splat parameter can only be passed as named arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a97ef56659bbf08382be611dfb8413b463a8d229" translate="yes" xml:space="preserve">
          <source>Arguments past the star can also have default values. It means: they must be passed as named arguments, but they aren't required (so: optional named arguments):</source>
          <target state="translated">过了星号的参数也可以有默认值。这意味着:它们必须作为命名参数传递,但它们不是必需的(所以:可选的命名参数)。</target>
        </trans-unit>
        <trans-unit id="75c93d2d0d36a86a6a5968dd32c9a7425673e6b5" translate="yes" xml:space="preserve">
          <source>Arguments to the compiled binary can be separated with double dash &lt;code&gt;--&lt;/code&gt; from the compiler arguments. The binary executable is stored in a temporary location between compiling and running.</source>
          <target state="translated">参数编译的二进制可以用双横线分开 &lt;code&gt;--&lt;/code&gt; 从编译器的参数。二进制可执行文件存储在编译和运行之间的临时位置。</target>
        </trans-unit>
        <trans-unit id="d077356b7b5076ff62409f2fbd19527762e29c71" translate="yes" xml:space="preserve">
          <source>Arithmetic operators</source>
          <target state="translated">算术运算符</target>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="translated">Array</target>
        </trans-unit>
        <trans-unit id="1eeb49b3a75511a08d74fc3fed7bd03947af7c01" translate="yes" xml:space="preserve">
          <source>Array indexing starts at 0. A negative index is assumed to be relative to the end of the array: -1 indicates the last element, -2 is the next to last element, and so on.</source>
          <target state="translated">阵列的索引从0开始,负的索引被认为是相对于数组的末端。-1表示最后一个元素,-2表示下一个到最后一个元素,以此类推。</target>
        </trans-unit>
        <trans-unit id="fee1d9e7ef796491ad0939b5b4a5591ba90792d1" translate="yes" xml:space="preserve">
          <source>Array of identifiers that make up the pre-release metadata</source>
          <target state="translated">构成发布前元数据的标识符数组。</target>
        </trans-unit>
        <trans-unit id="1785a7e99e8839406357ffe12c789a0f237512c0" translate="yes" xml:space="preserve">
          <source>Array#*</source>
          <target state="translated">Array#*</target>
        </trans-unit>
        <trans-unit id="ea7e6f1c2900c2be00538af11ed47629427abba0" translate="yes" xml:space="preserve">
          <source>Array#+</source>
          <target state="translated">Array#+</target>
        </trans-unit>
        <trans-unit id="901304a54ce0e672b893a92a421f35d0c440dba1" translate="yes" xml:space="preserve">
          <source>Array#-</source>
          <target state="translated">Array#-</target>
        </trans-unit>
        <trans-unit id="ee80898c450589a7b87c42bc6555be8956d47998" translate="yes" xml:space="preserve">
          <source>Array#==</source>
          <target state="translated">Array#==</target>
        </trans-unit>
        <trans-unit id="537adfb1ac511931919e578fb668dced0b56cbc3" translate="yes" xml:space="preserve">
          <source>Array#[]</source>
          <target state="translated">Array#[]</target>
        </trans-unit>
        <trans-unit id="b5b21b1c6ed710113553c78a8526fb62c11004cb" translate="yes" xml:space="preserve">
          <source>Array#[]=</source>
          <target state="translated">Array#[]=</target>
        </trans-unit>
        <trans-unit id="959f570123175290e02739723446fc0ab3bcc404" translate="yes" xml:space="preserve">
          <source>Array#[]?</source>
          <target state="translated">Array#[]?</target>
        </trans-unit>
        <trans-unit id="caf4a4fc6b725191d3189fcce46b6ac06407bfa1" translate="yes" xml:space="preserve">
          <source>Array#dup</source>
          <target state="translated">Array#dup</target>
        </trans-unit>
        <trans-unit id="0680b137333feab141da2d7a4c115e299b15337f" translate="yes" xml:space="preserve">
          <source>Array#fill</source>
          <target state="translated">Array#fill</target>
        </trans-unit>
        <trans-unit id="d4ad52a28381c34966d5024f426c89abad59a5d4" translate="yes" xml:space="preserve">
          <source>Array#last</source>
          <target state="translated">Array#last</target>
        </trans-unit>
        <trans-unit id="5f4422479c15beec2a25b4fda17b3fc5b4ebd3c3" translate="yes" xml:space="preserve">
          <source>Array#map</source>
          <target state="translated">Array#map</target>
        </trans-unit>
        <trans-unit id="e9a90cc86d79d60d4ba722b7872bdbfd463d9e25" translate="yes" xml:space="preserve">
          <source>Array#map!</source>
          <target state="translated">Array#map!</target>
        </trans-unit>
        <trans-unit id="82a5a3ac60cbcda423120b8ee0d822738f3ceb95" translate="yes" xml:space="preserve">
          <source>Array#pop</source>
          <target state="translated">Array#pop</target>
        </trans-unit>
        <trans-unit id="9a6c1483abc00764438323b54d649a90c456c879" translate="yes" xml:space="preserve">
          <source>Array#pop?</source>
          <target state="translated">Array#pop?</target>
        </trans-unit>
        <trans-unit id="16f95d333f21d5a163bac8dc7da84b8b8a96cd72" translate="yes" xml:space="preserve">
          <source>Array#push</source>
          <target state="translated">Array#push</target>
        </trans-unit>
        <trans-unit id="9fdfe2f638917be044f74524c71d0c876723c783" translate="yes" xml:space="preserve">
          <source>Array#size</source>
          <target state="translated">Array#size</target>
        </trans-unit>
        <trans-unit id="a040c7fab49290c01f97abf694ad3a53bbfe9dec" translate="yes" xml:space="preserve">
          <source>Array#skip</source>
          <target state="translated">Array#skip</target>
        </trans-unit>
        <trans-unit id="4d05f2f7061e600f46c2e357e0b02f98c78e4dcd" translate="yes" xml:space="preserve">
          <source>Array#sort</source>
          <target state="translated">Array#sort</target>
        </trans-unit>
        <trans-unit id="a7c35a4364c2586430a18808d79ff1401da65553" translate="yes" xml:space="preserve">
          <source>Array#swap</source>
          <target state="translated">Array#swap</target>
        </trans-unit>
        <trans-unit id="d874da5efc43b2ef59715d5f3af71371b4abdda3" translate="yes" xml:space="preserve">
          <source>Array#to_a</source>
          <target state="translated">Array#to_a</target>
        </trans-unit>
        <trans-unit id="974c5cd21a18eeebb9fe7afa2db481bcf8e21ede" translate="yes" xml:space="preserve">
          <source>Array#to_s</source>
          <target state="translated">Array#to_s</target>
        </trans-unit>
        <trans-unit id="bdb54ed6419560b12aa4d7defa46baa5a833689c" translate="yes" xml:space="preserve">
          <source>Array#uniq</source>
          <target state="translated">Array#uniq</target>
        </trans-unit>
        <trans-unit id="de7c0d4c7c2c504a6f77a3c0be2f80bae1939952" translate="yes" xml:space="preserve">
          <source>Array#|</source>
          <target state="translated">Array#|</target>
        </trans-unit>
        <trans-unit id="283ac17e267aadeb5fd61fc1fa3cb8c5f09ddd97" translate="yes" xml:space="preserve">
          <source>Array(T)</source>
          <target state="translated">Array(T)</target>
        </trans-unit>
        <trans-unit id="5d876c0d5f0c5a520e254ab916ad4f5565c42809" translate="yes" xml:space="preserve">
          <source>Array-like</source>
          <target state="translated">Array-like</target>
        </trans-unit>
        <trans-unit id="0cf51a42a3c152f255420f900ac5c671c76b77ff" translate="yes" xml:space="preserve">
          <source>Array-like Type Literal</source>
          <target state="translated">阵列式文字</target>
        </trans-unit>
        <trans-unit id="9a6f20b74ec7e4421211751a8fe57a1eb813fb65" translate="yes" xml:space="preserve">
          <source>Array.new</source>
          <target state="translated">Array.new</target>
        </trans-unit>
        <trans-unit id="e8fbe2910a85ec2bd5512b075e94ca38028fdeb3" translate="yes" xml:space="preserve">
          <source>ArrayConverter</source>
          <target state="translated">ArrayConverter</target>
        </trans-unit>
        <trans-unit id="a31520c12cd8c1d24a5434850113eb0f07e77986" translate="yes" xml:space="preserve">
          <source>ArrayConverter.from_json</source>
          <target state="translated">ArrayConverter.from_json</target>
        </trans-unit>
        <trans-unit id="6256be5a30512c855b6dbb579ae8eebf9f146492" translate="yes" xml:space="preserve">
          <source>ArrayConverter.from_yaml</source>
          <target state="translated">ArrayConverter.from_yaml</target>
        </trans-unit>
        <trans-unit id="8439f0c4474895a0022bacebdac88a6ab714e764" translate="yes" xml:space="preserve">
          <source>ArrayConverter.to_json</source>
          <target state="translated">ArrayConverter.to_json</target>
        </trans-unit>
        <trans-unit id="fbf1ea428ddeae85b7feb8efce720174c94dca58" translate="yes" xml:space="preserve">
          <source>ArrayConverter.to_yaml</source>
          <target state="translated">ArrayConverter.to_yaml</target>
        </trans-unit>
        <trans-unit id="758a976b0f2ec4cb53890fd320651c326047ea0d" translate="yes" xml:space="preserve">
          <source>Arrays are typically created with an array literal denoted by square brackets (&lt;code&gt;[]&lt;/code&gt;) and individual elements separated by a comma (&lt;code&gt;,&lt;/code&gt;).</source>
          <target state="translated">阵列通常与由方括号（表示数组文本创建 &lt;code&gt;[]&lt;/code&gt; ）和个别元件分离用逗号（ &lt;code&gt;,&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="78b34c74922da2efeeca753c16b621861507c038" translate="yes" xml:space="preserve">
          <source>As a code base grows, these issues gain more relevance: understanding a project becomes harder, and compile times become unbearable.</source>
          <target state="translated">随着代码库的增长,这些问题的意义越来越大:理解一个项目变得更加困难,编译时间变得难以忍受。</target>
        </trans-unit>
        <trans-unit id="31ce8338bbc6d8f37ce8c02e16fee017dc58d6ae" translate="yes" xml:space="preserve">
          <source>As a convention, &lt;code&gt;clone&lt;/code&gt; is the method used to create a deep copy of an object, but this logic isn't defined generically for every type because cycles could be involved, and the clone logic might not need to clone everything.</source>
          <target state="translated">按照惯例， &lt;code&gt;clone&lt;/code&gt; 是用于创建对象的深层副本的方法，但是并不是针对每种类型都通用地定义此逻辑，因为可能涉及循环，并且克隆逻辑可能不需要克隆所有内容。</target>
        </trans-unit>
        <trans-unit id="140273463944d3fc8f438fd6146b0afcbddad756" translate="yes" xml:space="preserve">
          <source>As a side note, since &lt;code&gt;Person&lt;/code&gt; inherits &lt;code&gt;Reference&lt;/code&gt; the second definition of &lt;code&gt;==&lt;/code&gt; is not needed, since it's already defined in &lt;code&gt;Reference&lt;/code&gt;.</source>
          <target state="translated">附带说明一下，由于 &lt;code&gt;Person&lt;/code&gt; 继承了 &lt;code&gt;Reference&lt;/code&gt; ，因此 &lt;code&gt;==&lt;/code&gt; 的第二个定义是不需要的，因为它已经在 &lt;code&gt;Reference&lt;/code&gt; 中定义了。</target>
        </trans-unit>
        <trans-unit id="4d013bd7460e28ba3bb985476569521c8dd5e410" translate="yes" xml:space="preserve">
          <source>As a side note, we can define &lt;code&gt;become_older&lt;/code&gt; inside the original &lt;code&gt;Person&lt;/code&gt; definition, or in a separate definition: Crystal combines all definitions into a single class. The following works just fine:</source>
          <target state="translated">附带说明一下，我们可以在原始 &lt;code&gt;Person&lt;/code&gt; 定义内或在单独的定义中定义 &lt;code&gt;become_older&lt;/code&gt; ：Crystal将所有定义组合到一个类中。以下工作正常：</target>
        </trans-unit>
        <trans-unit id="8e1613095510b95d985ce9ce0fae4a4212e07769" translate="yes" xml:space="preserve">
          <source>As a suffix</source>
          <target state="translated">作为后缀</target>
        </trans-unit>
        <trans-unit id="52010cb742973e6b63990653d4aa24b7c35a5b08" translate="yes" xml:space="preserve">
          <source>As an additional note, Ruby's Psych YAML parser also implements a custom time parser, probably for this same reason.</source>
          <target state="translated">作为额外的说明,Ruby的Psych YAML解析器也实现了一个自定义的时间解析器,可能也是这个原因。</target>
        </trans-unit>
        <trans-unit id="a1b0356443fd94e17ce249202a6b727019e2e75d" translate="yes" xml:space="preserve">
          <source>As an alternative, the operating system also provides a monotonic clock. Its time-line has no specfied starting point but is strictly linearly increasing.</source>
          <target state="translated">作为一种选择,操作系统还提供了一个单调的时钟。它的时间线没有指定的起点,而是严格地线性增加。</target>
        </trans-unit>
        <trans-unit id="9352d6c68f89393446a84696ffb4b7245bb74eb4" translate="yes" xml:space="preserve">
          <source>As an alternative, the operating system also provides a monotonic clock. Its time-line has no specified starting point but is strictly linearly increasing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b80a626240b719a78010722dd798df2ca4cb6e8" translate="yes" xml:space="preserve">
          <source>As an example, let's compute the first three numbers in the range &lt;code&gt;1..10_000_000&lt;/code&gt; that are even, multiplied by three. One way to do this is:</source>
          <target state="translated">例如，让我们计算范围为 &lt;code&gt;1..10_000_000&lt;/code&gt; 的偶数乘以3 的前三个数字。一种方法是：</target>
        </trans-unit>
        <trans-unit id="c6b380834f62517f2eee569325795e3c405fa78f" translate="yes" xml:space="preserve">
          <source>As an expression</source>
          <target state="translated">作为一种表达方式</target>
        </trans-unit>
        <trans-unit id="ced979163cc221436372e0006be3e61bca467dab" translate="yes" xml:space="preserve">
          <source>As explained in the &lt;a href=&quot;literals/proc&quot;&gt;proc literals&lt;/a&gt; section, a Proc can also be created from existing methods:</source>
          <target state="translated">如&lt;a href=&quot;literals/proc&quot;&gt;proc文字&lt;/a&gt;部分所述，也可以从现有方法创建Proc：</target>
        </trans-unit>
        <trans-unit id="08121242023b2430f9d5263e9cf09b5775566024" translate="yes" xml:space="preserve">
          <source>As in C, the first member of the enum has a value of zero and each successive value is incremented by one.</source>
          <target state="translated">和C语言一样,枚举的第一个成员的值为0,每一个连续的值递增一个。</target>
        </trans-unit>
        <trans-unit id="fd49984c09e2cb5aee3139958c9848a44e79d380" translate="yes" xml:space="preserve">
          <source>As per https://tools.ietf.org/html/rfc6749#section-2.3.1, &lt;code&gt;&lt;a href=&quot;authscheme#HTTPBasic&quot;&gt;AuthScheme::HTTPBasic&lt;/a&gt;&lt;/code&gt; is the default &lt;em&gt;auth_scheme&lt;/em&gt; (the mechanism used to transmit the client credentials to the server). &lt;code&gt;&lt;a href=&quot;authscheme#RequestBody&quot;&gt;AuthScheme::RequestBody&lt;/a&gt;&lt;/code&gt; should only be used if the server does not support HTTP Basic.</source>
          <target state="translated">根据https://tools.ietf.org/html/rfc6749#section-2.3.1，AuthScheme &lt;code&gt;&lt;a href=&quot;authscheme#HTTPBasic&quot;&gt;AuthScheme::HTTPBasic&lt;/a&gt;&lt;/code&gt; 是默认的&lt;em&gt;auth_scheme&lt;/em&gt;（用于将客户端凭据传输到服务器的机制）。仅当服务器不支持HTTP Basic时才应使用 &lt;code&gt;&lt;a href=&quot;authscheme#RequestBody&quot;&gt;AuthScheme::RequestBody&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9158f7670382b2baa8f45e68c98b8669456c65ba" translate="yes" xml:space="preserve">
          <source>As soon as you instantiate a &lt;code&gt;&lt;a href=&quot;reader&quot;&gt;Char::Reader&lt;/a&gt;&lt;/code&gt; it will decode the first char in the &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, which can be accessed by invoking &lt;code&gt;&lt;a href=&quot;reader#current_char:Char-instance-method&quot;&gt;#current_char&lt;/a&gt;&lt;/code&gt;. At this point &lt;code&gt;&lt;a href=&quot;reader#pos:Int32-instance-method&quot;&gt;#pos&lt;/a&gt;&lt;/code&gt;, the current position in the string, will equal zero. Successive calls to &lt;code&gt;&lt;a href=&quot;reader#next_char-instance-method&quot;&gt;#next_char&lt;/a&gt;&lt;/code&gt; return the next chars in the string, advancing &lt;code&gt;&lt;a href=&quot;reader#pos:Int32-instance-method&quot;&gt;#pos&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">实例化 &lt;code&gt;&lt;a href=&quot;reader&quot;&gt;Char::Reader&lt;/a&gt;&lt;/code&gt; ，它将立即解码 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 中的第一个char ，可以通过调用 &lt;code&gt;&lt;a href=&quot;reader#current_char:Char-instance-method&quot;&gt;#current_char&lt;/a&gt;&lt;/code&gt; 进行访问。此时，字符串中的当前位置 &lt;code&gt;&lt;a href=&quot;reader#pos:Int32-instance-method&quot;&gt;#pos&lt;/a&gt;&lt;/code&gt; 将等于零。连续调用 &lt;code&gt;&lt;a href=&quot;reader#next_char-instance-method&quot;&gt;#next_char&lt;/a&gt;&lt;/code&gt; 返回字符串中的下一个字符，前进 &lt;code&gt;&lt;a href=&quot;reader#pos:Int32-instance-method&quot;&gt;#pos&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d543c6275a54834a0f4c598a63ccfd67ab7250c" translate="yes" xml:space="preserve">
          <source>As stated in the documentation for the &lt;a href=&quot;http://www.gnu.org/software/readline/&quot;&gt;GNU Readline Library&lt;/a&gt;, &lt;code&gt;Readline&lt;/code&gt; is a library that provides a set of functions for use by applications that allow users to edit command lines as they are typed in. &lt;code&gt;Readline&lt;/code&gt; has some great features: filename autocompletion out of the box; custom autocompletion method; keybinding, just to mention a few. If we want to try it then the &lt;a href=&quot;https://github.com/crystal-lang/crystal-readline&quot;&gt;crystal-lang/crystal-readline&lt;/a&gt; shard will give us an easy API to use &lt;code&gt;Readline&lt;/code&gt;.</source>
          <target state="translated">如&lt;a href=&quot;http://www.gnu.org/software/readline/&quot;&gt;GNU Readline库&lt;/a&gt;的文档中所述， &lt;code&gt;Readline&lt;/code&gt; 是一个库，提供了一组供应用程序使用的功能，这些功能使用户可以在键入时编辑命令行 &lt;code&gt;Readline&lt;/code&gt; 具有一些出色的功能：可以自动完成文件名;自定义自动完成方法；键绑定，仅举几例。如果我们想尝试一下，那么&lt;a href=&quot;https://github.com/crystal-lang/crystal-readline&quot;&gt;crystal-lang / crystal-readline分片&lt;/a&gt;将为我们提供一个易于使用 &lt;code&gt;Readline&lt;/code&gt; 的API 。</target>
        </trans-unit>
        <trans-unit id="fb33d4993b7843c79885b46af55eaa15afec6066" translate="yes" xml:space="preserve">
          <source>As stated in the documentation for the &lt;a href=&quot;https://www.gnu.org/software/readline/&quot;&gt;GNU Readline Library&lt;/a&gt;, &lt;code&gt;Readline&lt;/code&gt; is a library that provides a set of functions for use by applications that allow users to edit command lines as they are typed in. &lt;code&gt;Readline&lt;/code&gt; has some great features: filename autocompletion out of the box; custom autocompletion method; keybinding, just to mention a few. If we want to try it then the &lt;a href=&quot;https://github.com/crystal-lang/crystal-readline&quot;&gt;crystal-lang/crystal-readline&lt;/a&gt; shard will give us an easy API to use &lt;code&gt;Readline&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bfdba98e0da5c141b82ef9ddad6ba3b7afcefe7" translate="yes" xml:space="preserve">
          <source>As the name suggests, a nested transaction is a transaction created inside the scope of another transaction. Here is an example:</source>
          <target state="translated">顾名思义,嵌套事务是在另一个事务的范围内创建的事务。下面是一个例子。</target>
        </trans-unit>
        <trans-unit id="704056d533f4633744a9709905a47e4734036196" translate="yes" xml:space="preserve">
          <source>As the previous example, the exception cause the transaction to rollback and then is rescued by us.</source>
          <target state="translated">就像前面的例子一样,异常导致事务回滚,然后被我们拯救。</target>
        </trans-unit>
        <trans-unit id="de18849fe60250bd65658861a14eed7a1528a241" translate="yes" xml:space="preserve">
          <source>As we may notice, the &lt;code&gt;database&lt;/code&gt; is polymorphic with a &lt;code&gt;connection&lt;/code&gt; object with regard to the &lt;code&gt;#exec&lt;/code&gt; / &lt;code&gt;#query&lt;/code&gt; / &lt;code&gt;#transaction&lt;/code&gt; methods. The database is responsible for the use of the connections. Great!</source>
          <target state="translated">我们可能会注意到，关于 &lt;code&gt;#exec&lt;/code&gt; / &lt;code&gt;#query&lt;/code&gt; / &lt;code&gt;#transaction&lt;/code&gt; 方法， &lt;code&gt;database&lt;/code&gt; 具有 &lt;code&gt;connection&lt;/code&gt; 对象的多态性。数据库负责连接的使用。大！</target>
        </trans-unit>
        <trans-unit id="5f9c7c9de783ff9c2f81a7fef14922a74549e5f4" translate="yes" xml:space="preserve">
          <source>As we mentioned early, an &lt;strong&gt;implicit rollback&lt;/strong&gt; gets executed when an exception is raised, and it&amp;rsquo;s worth mentioning that the exception may be rescued by us.</source>
          <target state="translated">如前所述，&lt;strong&gt;隐式回滚&lt;/strong&gt;是在引发异常时执行的，值得一提的是，异常可以由我们挽救。</target>
        </trans-unit>
        <trans-unit id="008dae11b419896f056bb3d748317712b679bdbd" translate="yes" xml:space="preserve">
          <source>As we&amp;rsquo;ve already seen, a rollback may be fired at any time (by an exception or by sending the message &lt;code&gt;rollback&lt;/code&gt; explicitly)</source>
          <target state="translated">正如我们已经看到的，回滚可能会随时触发（通过异常或通过显式发送消息 &lt;code&gt;rollback&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a4b9c06995bd476251b59b7144558e4d7358a423" translate="yes" xml:space="preserve">
          <source>As with a connection, we should close the database once we don't need it anymore. Or instead, we could use a block and let Crystal close the database for us!</source>
          <target state="translated">和连接一样,一旦我们不再需要数据库,我们就应该关闭它。或者,我们也可以使用一个块,让Crystal为我们关闭数据库</target>
        </trans-unit>
        <trans-unit id="f6745f78b35334eb97b1211d6619f76f4f90d3dd" translate="yes" xml:space="preserve">
          <source>As with any other application, at some point we would like to &lt;a href=&quot;../guides/testing&quot;&gt;write tests&lt;/a&gt; for the different features.</source>
          <target state="translated">与任何其他应用程序一样，我们有时希望针对不同的功能&lt;a href=&quot;../guides/testing&quot;&gt;编写测试&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9703c7166e2940d5315d025f31cf22ee620867b6" translate="yes" xml:space="preserve">
          <source>As with other keg-only formulas there are some caveats shown in &lt;code&gt;brew info &amp;lt;formula&amp;gt;&lt;/code&gt; that shows how to link pkg-config with this library.</source>
          <target state="translated">与其他仅用于桶的公式一样， &lt;code&gt;brew info &amp;lt;formula&amp;gt;&lt;/code&gt; 中显示了一些警告，这些警告显示了如何将pkg-config与该库链接。</target>
        </trans-unit>
        <trans-unit id="0580b0813cf801f13e30d0279973172221f46496" translate="yes" xml:space="preserve">
          <source>As you can see, some basic math is allowed for a member value: &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;%&lt;/code&gt;.</source>
          <target state="translated">正如你所看到的，一些基本的数学被允许的成员值： &lt;code&gt;+&lt;/code&gt; ， &lt;code&gt;-&lt;/code&gt; ， &lt;code&gt;*&lt;/code&gt; ， &lt;code&gt;/&lt;/code&gt; ， &lt;code&gt;&amp;amp;&lt;/code&gt; ， &lt;code&gt;|&lt;/code&gt; ， &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; 和 &lt;code&gt;%&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98b1e92378c221f5e98951e3cfbbd6a4a02be081" translate="yes" xml:space="preserve">
          <source>As you'll see from the &lt;a href=&quot;https://docs.gitlab.com/ee/workflow/releases.html&quot;&gt;releases docs&lt;/a&gt;, you can either create an &lt;em&gt;annotated&lt;/em&gt; tag along with release notes/files in the UI:</source>
          <target state="translated">正如您从&lt;a href=&quot;https://docs.gitlab.com/ee/workflow/releases.html&quot;&gt;发行版文档中&lt;/a&gt;看到的那样，您可以在UI中创建带&lt;em&gt;注释的&lt;/em&gt;标记以及发行说明/文件：</target>
        </trans-unit>
        <trans-unit id="bfa6b3f50a0c0db83d732ff5dad209c317944fc3" translate="yes" xml:space="preserve">
          <source>Asks this process to terminate gracefully</source>
          <target state="translated">要求该进程优雅地终止</target>
        </trans-unit>
        <trans-unit id="4b297a1ec5aaaf02a6906c39dcffc3716089b1cc" translate="yes" xml:space="preserve">
          <source>Assign expression.</source>
          <target state="translated">指定表达。</target>
        </trans-unit>
        <trans-unit id="e55df441e8955746182110c3946288f381520e83" translate="yes" xml:space="preserve">
          <source>Assignment</source>
          <target state="translated">Assignment</target>
        </trans-unit>
        <trans-unit id="25fb925e5b5c356b1470420023e9456187e294da" translate="yes" xml:space="preserve">
          <source>Assignment is done using the equals sign (&lt;code&gt;=&lt;/code&gt;).</source>
          <target state="translated">使用等号（ &lt;code&gt;=&lt;/code&gt; ）完成分配。</target>
        </trans-unit>
        <trans-unit id="057d58c74d80136578cabbeee1b89206c3250bd4" translate="yes" xml:space="preserve">
          <source>Assignments</source>
          <target state="translated">Assignments</target>
        </trans-unit>
        <trans-unit id="971c50d0d52c5e9547946ecfcddfb432e0e5b232" translate="yes" xml:space="preserve">
          <source>Associates an object with an anchor.</source>
          <target state="translated">将一个对象与一个锚联系起来。</target>
        </trans-unit>
        <trans-unit id="643b89aaf0f576c41e794835981cda219cbec716" translate="yes" xml:space="preserve">
          <source>Assumes that &lt;code&gt;self&lt;/code&gt; is an array of arrays and transposes the rows and columns.</source>
          <target state="translated">假设 &lt;code&gt;self&lt;/code&gt; 是一个数组数组，并且转置了行和列。</target>
        </trans-unit>
        <trans-unit id="b44ff3357019a1b63c2122e6245fe17e189202c1" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is a &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; and returns the element with the given key, or &lt;code&gt;nil&lt;/code&gt; if the key is not present.</source>
          <target state="translated">假定基础值为 &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; 并返回具有给定键的元素；如果不存在键，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="68fa29f2a0c6e65a6c2929a02b6e1717ce830534" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is a &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; and returns the element with the given key, or &lt;code&gt;nil&lt;/code&gt; if the key is not present. Raises if the underlying value is not a &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">假定基础值为 &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; 并返回具有给定键的元素；如果不存在键，则返回 &lt;code&gt;nil&lt;/code&gt; 。如果基础值不是 &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; ,则引发。</target>
        </trans-unit>
        <trans-unit id="e7004fee6e676bd26421c4ae09ad5a7bed641fe0" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is a &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; and returns the element with the given key.</source>
          <target state="translated">假定基础值为 &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; 并返回具有给定键的元素。</target>
        </trans-unit>
        <trans-unit id="91584523709af54bcbe5523a0f5dbe13dff57510" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is a &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; and returns the element with the given key. Raises if the underlying value is not a &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">假定基础值为 &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; 并返回具有给定键的元素。如果基础值不是 &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; ,则引发。</target>
        </trans-unit>
        <trans-unit id="fa64cf27b85d33a257a63035d8abda91803c7cfd" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is an &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; and returns its size.</source>
          <target state="translated">假定基础值为 &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; 值，并返回其大小。</target>
        </trans-unit>
        <trans-unit id="deae0da4625fc85c734907d7c91a064e566590c3" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is an &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; and returns the element at the given &lt;em&gt;index_or_key&lt;/em&gt;, or &lt;code&gt;nil&lt;/code&gt; if out of bounds or the key is missing.</source>
          <target state="translated">假定基础值是 &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; 并返回在给定的元件&lt;em&gt;index_or_key&lt;/em&gt;，或 &lt;code&gt;nil&lt;/code&gt; 如果出界或密钥丢失。</target>
        </trans-unit>
        <trans-unit id="c0f7b6c8a8c88aac760a10b472ecc0d7fa6e16bb" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is an &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; and returns the element at the given &lt;em&gt;index_or_key&lt;/em&gt;.</source>
          <target state="translated">假定基础值为 &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; 并返回给定&lt;em&gt;index_or_key&lt;/em&gt;处的元素。</target>
        </trans-unit>
        <trans-unit id="13b3b79ff5110c92978e1ba3d0305865f46751dc" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; and returns the element at the given index, or &lt;code&gt;nil&lt;/code&gt; if out of bounds.</source>
          <target state="translated">假定基础值是一个 &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; ,并返回给定索引处的元素，如果超出范围则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e9c53b6de3deab3cbdbfbbcaf9a24d229c40261" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; and returns the element at the given index, or &lt;code&gt;nil&lt;/code&gt; if out of bounds. Raises if the underlying value is not an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">假定基础值是一个 &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; ,并返回给定索引处的元素，如果超出范围则返回 &lt;code&gt;nil&lt;/code&gt; 。如果基础值不是 &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; ,则引发。</target>
        </trans-unit>
        <trans-unit id="adaeab0f2b2da410e312ddd3e167f31b4f40fc6e" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; and returns the element at the given index.</source>
          <target state="translated">假设基础值是一个 &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 并返回给定索引处的元素。</target>
        </trans-unit>
        <trans-unit id="b4f3af8e2425df111f3ab3bc124f2ec900d2cb5d" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; and returns the element at the given index. Raises if the underlying value is not an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">假设基础值是一个 &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 并返回给定索引处的元素。如果基础值不是 &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; ,则引发。</target>
        </trans-unit>
        <trans-unit id="20ffe630a874ca69711398ba8063a182a71d5fec" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; and returns its size.</source>
          <target state="translated">假设基础值为 &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; 值，并返回其大小。</target>
        </trans-unit>
        <trans-unit id="38fb9774774b2f264223605eab4ac746e4a2523f" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; and returns its size. Raises if the underlying value is not an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">假设基础值为 &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; 值，并返回其大小。如果基础值不是 &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; ,则引发。</target>
        </trans-unit>
        <trans-unit id="cece227c545b34cf71e3c4a4fff7f074a9e9fb15" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; and returns the element at the given &lt;em&gt;index_or_key&lt;/em&gt;, or &lt;code&gt;nil&lt;/code&gt; if out of bounds or the key is missing.</source>
          <target state="translated">假定基础值是 &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; 并返回在给定的元件&lt;em&gt;index_or_key&lt;/em&gt;，或 &lt;code&gt;nil&lt;/code&gt; 如果出界或密钥丢失。</target>
        </trans-unit>
        <trans-unit id="3d7ae6cebf8533b313bb9c4db20db80b9793c309" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; and returns the element at the given &lt;em&gt;index_or_key&lt;/em&gt;.</source>
          <target state="translated">假定基础值为 &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; 并返回给定&lt;em&gt;index_or_key&lt;/em&gt;处的元素。</target>
        </trans-unit>
        <trans-unit id="35d1515a869e4c20cbc5deb54f76c8d8f37be2bd" translate="yes" xml:space="preserve">
          <source>Assuming the &lt;em&gt;pull_parser&lt;/em&gt; is positioned in a scalar, parses it according to the core schema, taking the scalar's style and tag into account, then advances the pull parser.</source>
          <target state="translated">假设&lt;em&gt;pull_parser放置&lt;/em&gt;在标量中，并根据核心架构对其进行分析，并考虑标量的样式和标记，然后推进pull解析器。</target>
        </trans-unit>
        <trans-unit id="57cd82f7fc8e7e6576c38a8ae533c579d3c7a7ca" translate="yes" xml:space="preserve">
          <source>Assuming this type is a struct, returns its name.</source>
          <target state="translated">假设该类型是一个结构体,返回其名称。</target>
        </trans-unit>
        <trans-unit id="22bfe05792ecee4fefe07ca0df98b1917d42def5" translate="yes" xml:space="preserve">
          <source>Assuming this type is a struct, returns its name. The name can be &lt;code&gt;nil&lt;/code&gt; if the struct is anonymous. Raises if this type is not a struct.</source>
          <target state="translated">假设此类型为结构，则返回其名称。如果该结构是匿名的，则名称可以为 &lt;code&gt;nil&lt;/code&gt; 。如果此类型不是结构，则引发。</target>
        </trans-unit>
        <trans-unit id="c6c8f4138847fdf439ce3a740614a7fce2bc726f" translate="yes" xml:space="preserve">
          <source>Assuming you have an access token, its secret, the consumer key and the consumer secret, you can setup an &lt;code&gt;&lt;a href=&quot;http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; to be authenticated with OAuth using this code:</source>
          <target state="translated">假设您具有访问令牌，其密钥，使用者密钥和使用者密钥，则可以使用以下代码设置要通过OAuth进行身份验证的 &lt;code&gt;&lt;a href=&quot;http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="6d99ea65d72d7abc54332a422ebd374b9e8a9c69" translate="yes" xml:space="preserve">
          <source>Assuming you have an access token, you can setup an &lt;code&gt;&lt;a href=&quot;http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; to be authenticated with OAuth2 using this code:</source>
          <target state="translated">假设您具有访问令牌，则可以使用以下代码设置要通过OAuth2进行身份验证的 &lt;code&gt;&lt;a href=&quot;http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="4474831c1b67e20384c436bc499297382c831d85" translate="yes" xml:space="preserve">
          <source>At least one of the &lt;em&gt;lib&lt;/em&gt;, &lt;em&gt;ldflags&lt;/em&gt;, &lt;em&gt;framework&lt;/em&gt; arguments needs to be specified.</source>
          <target state="translated">需要至少指定&lt;em&gt;lib&lt;/em&gt;，&lt;em&gt;ldflags&lt;/em&gt;和&lt;em&gt;框架&lt;/em&gt;参数之一。</target>
        </trans-unit>
        <trans-unit id="d2a9eba64fb97a196cabd086dff0400270a28b78" translate="yes" xml:space="preserve">
          <source>At start our CLI application will have two options:</source>
          <target state="translated">在启动时,我们的CLI应用程序将有两个选项。</target>
        </trans-unit>
        <trans-unit id="2230a0510ec31ee33f44f9da888bda26572f60b5" translate="yes" xml:space="preserve">
          <source>At the end of the call chain we get back a new iterator: we need to consume it, either using &lt;code&gt;&lt;a href=&quot;iterator#each-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;enumerable#to_a-instance-method&quot;&gt;Enumerable#to_a&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">在调用链的最后，我们返回一个新的迭代器：我们需要使用 &lt;code&gt;&lt;a href=&quot;iterator#each-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;enumerable#to_a-instance-method&quot;&gt;Enumerable#to_a&lt;/a&gt;&lt;/code&gt; 来使用它：</target>
        </trans-unit>
        <trans-unit id="c7d6e3d2fe3527e143eccaa3c56c67fc94d2770d" translate="yes" xml:space="preserve">
          <source>At the end of the if, &lt;code&gt;a&lt;/code&gt; will have the &lt;code&gt;Int32 | String&lt;/code&gt; type, read &quot;the union of Int32 and String&quot;. This union type is created automatically by the compiler. At runtime, &lt;code&gt;a&lt;/code&gt; will of course be of one type only. This can be seen by invoking the &lt;code&gt;class&lt;/code&gt; method:</source>
          <target state="translated">如果结束，则 &lt;code&gt;a&lt;/code&gt; 将具有 &lt;code&gt;Int32 | String&lt;/code&gt; 类型，请阅读&amp;ldquo; Int32和String的并集&amp;rdquo;。此联合类型由编译器自动创建。在运行时， &lt;code&gt;a&lt;/code&gt; 当然会只有一种类型的。可以通过调用 &lt;code&gt;class&lt;/code&gt; 方法来看到：</target>
        </trans-unit>
        <trans-unit id="ca3b5ed1b251d5bfeabd7cb367761f53a2ed928d" translate="yes" xml:space="preserve">
          <source>At the moment of this writing, Crystal has concurrency support but not parallelism: several tasks can be executed, and a bit of time will be spent on each of these, but two code paths are never executed at the same exact time.</source>
          <target state="translated">在写这篇文章的时候,Crystal支持并发性,但不支持并行性:可以执行多个任务,每个任务都会花费一点时间,但两条代码路径永远不会在同一时间完全执行。</target>
        </trans-unit>
        <trans-unit id="eab5fb9d38b31ceeeb60ef566a7dfb8cf1c4e13f" translate="yes" xml:space="preserve">
          <source>At the moment, crystalshards.xyz only uses the GitHub API, so if you want your library to be indexed on that service you can set up a &quot;push mirror&quot; from GitLab to GitHub.</source>
          <target state="translated">目前,crystalshards.xyz只使用GitHub API,所以如果你想让你的库在该服务上被索引,你可以设置一个从GitLab到GitHub的 &quot;推送镜像&quot;。</target>
        </trans-unit>
        <trans-unit id="4118a19456584c567fffee4fdf047b9b1b2bbdc9" translate="yes" xml:space="preserve">
          <source>At the start of the program STDERR is configured like this:</source>
          <target state="translated">在程序开始时,STDERR的配置是这样的。</target>
        </trans-unit>
        <trans-unit id="00f98f1e041aef743a0994bc0d9b06e5c9da912f" translate="yes" xml:space="preserve">
          <source>At the start of the program STDOUT is configured like this:</source>
          <target state="translated">在程序开始时,STDOUT是这样配置的。</target>
        </trans-unit>
        <trans-unit id="f3023cb8188912c321e51f84008e15af7ab75428" translate="yes" xml:space="preserve">
          <source>Atomic</source>
          <target state="translated">Atomic</target>
        </trans-unit>
        <trans-unit id="cfc98260892eb13ada6ed33db5bc607e42a77267" translate="yes" xml:space="preserve">
          <source>Atomic#add</source>
          <target state="translated">Atomic#add</target>
        </trans-unit>
        <trans-unit id="ad0cc79200d90a652bd955d9e4a760f77df291f6" translate="yes" xml:space="preserve">
          <source>Atomic#and</source>
          <target state="translated">Atomic#and</target>
        </trans-unit>
        <trans-unit id="7411cc5b54cd7f4f6b39c8379f4a4d9bbdf63130" translate="yes" xml:space="preserve">
          <source>Atomic#get</source>
          <target state="translated">Atomic#get</target>
        </trans-unit>
        <trans-unit id="3fefa7590a02534c63a3f3f60602a473ba7202ba" translate="yes" xml:space="preserve">
          <source>Atomic#max</source>
          <target state="translated">Atomic#max</target>
        </trans-unit>
        <trans-unit id="b7f283d2b7efc9bbf647c6389494a2fc8a602b35" translate="yes" xml:space="preserve">
          <source>Atomic#min</source>
          <target state="translated">Atomic#min</target>
        </trans-unit>
        <trans-unit id="31559545d4449322c41f993f26da15fdadb8124d" translate="yes" xml:space="preserve">
          <source>Atomic#nand</source>
          <target state="translated">Atomic#nand</target>
        </trans-unit>
        <trans-unit id="9e1cd3bb3b8d0bf33f6c245b5e76aecd9803599c" translate="yes" xml:space="preserve">
          <source>Atomic#or</source>
          <target state="translated">Atomic#or</target>
        </trans-unit>
        <trans-unit id="ca192c6441c573832235c39fc426871bf9d3c1f5" translate="yes" xml:space="preserve">
          <source>Atomic#set</source>
          <target state="translated">Atomic#set</target>
        </trans-unit>
        <trans-unit id="4456eeb1b7b00ab6a87d419326d31242c3da8ebe" translate="yes" xml:space="preserve">
          <source>Atomic#sub</source>
          <target state="translated">Atomic#sub</target>
        </trans-unit>
        <trans-unit id="1ed4e8ff8a46e3454ab001567a857a36739340fb" translate="yes" xml:space="preserve">
          <source>Atomic#swap</source>
          <target state="translated">Atomic#swap</target>
        </trans-unit>
        <trans-unit id="e5b6cf37ea954824631d98e82baa3bb6c25e81f8" translate="yes" xml:space="preserve">
          <source>Atomic#xor</source>
          <target state="translated">Atomic#xor</target>
        </trans-unit>
        <trans-unit id="1f7c3f39a931759db59b3885da0c81379d654b30" translate="yes" xml:space="preserve">
          <source>Atomic(T)</source>
          <target state="translated">Atomic(T)</target>
        </trans-unit>
        <trans-unit id="0790c4a154eab13c9e5a291e2ef20b8d57b52a63" translate="yes" xml:space="preserve">
          <source>Atomic.new</source>
          <target state="translated">Atomic.new</target>
        </trans-unit>
        <trans-unit id="84789144f52483edd031559eb143aab824c9ef28" translate="yes" xml:space="preserve">
          <source>Atomic::Flag</source>
          <target state="translated">Atomic::Flag</target>
        </trans-unit>
        <trans-unit id="71b1b66065a978162488537afccd2f9d704bb3ac" translate="yes" xml:space="preserve">
          <source>AtomicOrdering</source>
          <target state="translated">AtomicOrdering</target>
        </trans-unit>
        <trans-unit id="67e16d2f146ee1278b0b919272c54c393ee631cc" translate="yes" xml:space="preserve">
          <source>AtomicOrdering#acquire?</source>
          <target state="translated">AtomicOrdering#acquire?</target>
        </trans-unit>
        <trans-unit id="8793ae1bc7164da7630b8545ab1f4dbabdeb68a6" translate="yes" xml:space="preserve">
          <source>AtomicOrdering#acquire_release?</source>
          <target state="translated">AtomicOrdering#acquire_release?</target>
        </trans-unit>
        <trans-unit id="0099e6994df9e5b8912d03fb639462687766f18b" translate="yes" xml:space="preserve">
          <source>AtomicOrdering#monotonic?</source>
          <target state="translated">AtomicOrdering#monotonic?</target>
        </trans-unit>
        <trans-unit id="544691302ac69836b491c044ef9b04e1168c3721" translate="yes" xml:space="preserve">
          <source>AtomicOrdering#not_atomic?</source>
          <target state="translated">AtomicOrdering#not_atomic?</target>
        </trans-unit>
        <trans-unit id="6382d0df7ffff6fb0230a41c78f94a1ce12ef9a1" translate="yes" xml:space="preserve">
          <source>AtomicOrdering#release?</source>
          <target state="translated">AtomicOrdering#release?</target>
        </trans-unit>
        <trans-unit id="4cbca18dc8f480aae06ab5e7367a1a0546c18cc2" translate="yes" xml:space="preserve">
          <source>AtomicOrdering#sequentially_consistent?</source>
          <target state="translated">AtomicOrdering#sequentially_consistent?</target>
        </trans-unit>
        <trans-unit id="c33255da377b645adaf0e66d6796712e937b5435" translate="yes" xml:space="preserve">
          <source>AtomicOrdering#unordered?</source>
          <target state="translated">AtomicOrdering#unordered?</target>
        </trans-unit>
        <trans-unit id="8b2e3bb39ed25e693b01aa2369916bb2e2317b81" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp</source>
          <target state="translated">AtomicRMWBinOp</target>
        </trans-unit>
        <trans-unit id="e4fe5629957941732f0ebd5b0f98293bd00abe64" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp#add?</source>
          <target state="translated">AtomicRMWBinOp#add?</target>
        </trans-unit>
        <trans-unit id="6c9ad13128bb62fc3fa935cf346ab15e49bf5583" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp#and?</source>
          <target state="translated">AtomicRMWBinOp#and?</target>
        </trans-unit>
        <trans-unit id="27d83954bbf8479c056385751d16382ff60cd0e9" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp#max?</source>
          <target state="translated">AtomicRMWBinOp#max?</target>
        </trans-unit>
        <trans-unit id="8546d023ca38c6007e6a35750fa57d87adaf702b" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp#min?</source>
          <target state="translated">AtomicRMWBinOp#min?</target>
        </trans-unit>
        <trans-unit id="a3382cefccb59ff50e476137d54a3d5e32ccfa75" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp#nand?</source>
          <target state="translated">AtomicRMWBinOp#nand?</target>
        </trans-unit>
        <trans-unit id="8d1793971f35f670d3589149023264473aa6d84b" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp#or?</source>
          <target state="translated">AtomicRMWBinOp#or?</target>
        </trans-unit>
        <trans-unit id="135472bc32537731f9c3bc4677a620a53a5545db" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp#sub?</source>
          <target state="translated">AtomicRMWBinOp#sub?</target>
        </trans-unit>
        <trans-unit id="c28dcecf18216ec5681ad53851a95b16c5777e6c" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp#u_max?</source>
          <target state="translated">AtomicRMWBinOp#u_max?</target>
        </trans-unit>
        <trans-unit id="7723875a186a0ac1b854a4249c951fcd841608c5" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp#u_min?</source>
          <target state="translated">AtomicRMWBinOp#u_min?</target>
        </trans-unit>
        <trans-unit id="07005c274285101c2c19b31d73167f7c8486c5bc" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp#xchg?</source>
          <target state="translated">AtomicRMWBinOp#xchg?</target>
        </trans-unit>
        <trans-unit id="3f6f5ab41c2fadff77625dee9d8741b895e97cc9" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp#xor?</source>
          <target state="translated">AtomicRMWBinOp#xor?</target>
        </trans-unit>
        <trans-unit id="93074833abc0ea4c62437c6eb1433b692172674f" translate="yes" xml:space="preserve">
          <source>Atomically clears the flag.</source>
          <target state="translated">原子上清除标志。</target>
        </trans-unit>
        <trans-unit id="25df4d6d68ad0f1c79a56181b86475826050f37b" translate="yes" xml:space="preserve">
          <source>Atomically returns this atomic's value.</source>
          <target state="translated">原子化地返回这个原子的值。</target>
        </trans-unit>
        <trans-unit id="836c3abbefa6cf452da9098d7b0740c22a6c58f5" translate="yes" xml:space="preserve">
          <source>Atomically sets this atomic's value to &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">以原子方式将此原子的值设置为&lt;em&gt;value&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0460d29e81b5f80b6c7c63547861c197a40b834b" translate="yes" xml:space="preserve">
          <source>Atomically sets this atomic's value to &lt;em&gt;value&lt;/em&gt;. Returns the &lt;strong&gt;new&lt;/strong&gt; value.</source>
          <target state="translated">以原子方式将此原子的值设置为&lt;em&gt;value&lt;/em&gt;。返回&lt;strong&gt;新&lt;/strong&gt;值。</target>
        </trans-unit>
        <trans-unit id="aaaf5579d5b3a16bdc94efa6b22abc3c83a18a93" translate="yes" xml:space="preserve">
          <source>Atomically sets this atomic's value to &lt;em&gt;value&lt;/em&gt;. Returns the &lt;strong&gt;old&lt;/strong&gt; value.</source>
          <target state="translated">以原子方式将此原子的值设置为&lt;em&gt;value&lt;/em&gt;。返回&lt;strong&gt;旧&lt;/strong&gt;值。</target>
        </trans-unit>
        <trans-unit id="5d7d6ee5222533c4bd843605fbd89dae3cfd7c77" translate="yes" xml:space="preserve">
          <source>Atomically tries to set the flag.</source>
          <target state="translated">原子上尝试设置标志。</target>
        </trans-unit>
        <trans-unit id="de31806784e941c742fb9f4e4c8eb3615a840d90" translate="yes" xml:space="preserve">
          <source>Atomically tries to set the flag. Only succeeds and returns &lt;code&gt;true&lt;/code&gt; if the flag wasn't previously set; returns &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">以原子方式尝试设置标志。仅在先前未设置标志的情况下成功并返回 &lt;code&gt;true&lt;/code&gt; ;否则，返回true。否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="411e8ebedad7889453dfa421b4c2b0fb2c775e96" translate="yes" xml:space="preserve">
          <source>Attempts to set the access and modification times of each file given in the &lt;em&gt;paths&lt;/em&gt; parameter to the value given in &lt;em&gt;time&lt;/em&gt;.</source>
          <target state="translated">尝试设置在给定的每个文件的访问和修改时间&lt;em&gt;路径&lt;/em&gt;参数中给定的值&lt;em&gt;的时间&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="939705c976928a81912b609e5a688e0ddd019d6a" translate="yes" xml:space="preserve">
          <source>Attempts to set the access and modification times of the file named in the &lt;em&gt;filename&lt;/em&gt; parameter to the value given in &lt;em&gt;time&lt;/em&gt;.</source>
          <target state="translated">尝试将&lt;em&gt;filename&lt;/em&gt;参数中命名的文件的访问和修改时间设置为&lt;em&gt;time&lt;/em&gt;给定的值。</target>
        </trans-unit>
        <trans-unit id="1e5f3a20b3e34ab7d841486daa6a08a42b141652" translate="yes" xml:space="preserve">
          <source>Attempts to set the access and modification times of the file named in the &lt;em&gt;path&lt;/em&gt; parameter to the value given in &lt;em&gt;time&lt;/em&gt;.</source>
          <target state="translated">尝试将&lt;em&gt;path&lt;/em&gt;参数中命名的文件的访问和修改时间设置为&lt;em&gt;time&lt;/em&gt;给定的值。</target>
        </trans-unit>
        <trans-unit id="d06f3bccd2ffe8ae97c73c752094adbd6a306e7f" translate="yes" xml:space="preserve">
          <source>Attempts to skip &lt;em&gt;until&lt;/em&gt; the given &lt;em&gt;pattern&lt;/em&gt; is found after the scan offset.</source>
          <target state="translated">尝试跳过&lt;em&gt;直到&lt;/em&gt;在扫描偏移量之后找到给定的&lt;em&gt;图案&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e46a8ab9f9b9800b20cccd1c336a287337a5ffa9" translate="yes" xml:space="preserve">
          <source>Attempts to skip &lt;em&gt;until&lt;/em&gt; the given &lt;em&gt;pattern&lt;/em&gt; is found after the scan offset. In other words, the pattern is not anchored to the current scan offset.</source>
          <target state="translated">尝试跳过&lt;em&gt;直到&lt;/em&gt;在扫描偏移量之后找到给定的&lt;em&gt;图案&lt;/em&gt;。换句话说，该图案未锚定到当前扫描偏移量。</target>
        </trans-unit>
        <trans-unit id="55be175ea7278cc7f0f571d824bc0cf0509f95e2" translate="yes" xml:space="preserve">
          <source>Attempts to skip over the given &lt;em&gt;pattern&lt;/em&gt; beginning with the scan offset.</source>
          <target state="translated">尝试从扫描偏移开始跳过给定的&lt;em&gt;模式&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="5d6d92da5c4d5c8cba214ddb252d2122f5caf133" translate="yes" xml:space="preserve">
          <source>Attempts to skip over the given &lt;em&gt;pattern&lt;/em&gt; beginning with the scan offset. In other words, the pattern is not anchored to the current scan offset.</source>
          <target state="translated">尝试从扫描偏移开始跳过给定的&lt;em&gt;模式&lt;/em&gt;。换句话说，该图案未锚定到当前扫描偏移量。</target>
        </trans-unit>
        <trans-unit id="a086d942884a301b827479029ba19c2746237425" translate="yes" xml:space="preserve">
          <source>Attribute</source>
          <target state="translated">Attribute</target>
        </trans-unit>
        <trans-unit id="4f4fb01b0206dcf9bb882d27e1af10c8bfc7b88e" translate="yes" xml:space="preserve">
          <source>Attribute index are either ReturnIndex (0), FunctionIndex (-1) or a parameter number ranging from 1 to N.</source>
          <target state="translated">属性索引为ReturnIndex(0)、FunctionIndex(-1)或1到N的参数号。</target>
        </trans-unit>
        <trans-unit id="306fa98ef1537e448cd2e036e40df4e7452ca59a" translate="yes" xml:space="preserve">
          <source>Attribute#alignment?</source>
          <target state="translated">Attribute#alignment?</target>
        </trans-unit>
        <trans-unit id="cad359dafe5821c76d8603a486257357dee9754a" translate="yes" xml:space="preserve">
          <source>Attribute#alloc_size?</source>
          <target state="translated">Attribute#alloc_size?</target>
        </trans-unit>
        <trans-unit id="94985e5d19468dcbf3c3ba7756970415faa68807" translate="yes" xml:space="preserve">
          <source>Attribute#always_inline?</source>
          <target state="translated">Attribute#always_inline?</target>
        </trans-unit>
        <trans-unit id="2f66fb58014a76e3df41907ad4d9114205dea4a5" translate="yes" xml:space="preserve">
          <source>Attribute#arg_mem_only?</source>
          <target state="translated">Attribute#arg_mem_only?</target>
        </trans-unit>
        <trans-unit id="981fe2e29d9404343650b1b888701d0105984f1b" translate="yes" xml:space="preserve">
          <source>Attribute#builtin?</source>
          <target state="translated">Attribute#builtin?</target>
        </trans-unit>
        <trans-unit id="a5d0331023efc883e993977f5dafe1bb210f28cc" translate="yes" xml:space="preserve">
          <source>Attribute#by_val?</source>
          <target state="translated">Attribute#by_val?</target>
        </trans-unit>
        <trans-unit id="695b3b813d200304f29e3f0eddd5509c96a5f3bf" translate="yes" xml:space="preserve">
          <source>Attribute#cold?</source>
          <target state="translated">Attribute#cold?</target>
        </trans-unit>
        <trans-unit id="65e744cb64d2bb9cd450d8bedd9aeea90d9cc220" translate="yes" xml:space="preserve">
          <source>Attribute#convergent?</source>
          <target state="translated">Attribute#convergent?</target>
        </trans-unit>
        <trans-unit id="3ab416f0d24d2d49ccff198033e00246849d40c6" translate="yes" xml:space="preserve">
          <source>Attribute#dereferenceable?</source>
          <target state="translated">Attribute#dereferenceable?</target>
        </trans-unit>
        <trans-unit id="e07337e21f925f79e2506494cea105b1506d05be" translate="yes" xml:space="preserve">
          <source>Attribute#dereferenceable_or_null?</source>
          <target state="translated">Attribute#dereferenceable_or_null?</target>
        </trans-unit>
        <trans-unit id="04dbec3533424e1a7f3491437b336281ed4d285f" translate="yes" xml:space="preserve">
          <source>Attribute#each_kind</source>
          <target state="translated">Attribute#each_kind</target>
        </trans-unit>
        <trans-unit id="1a112e948c1667e3610564e1f2490aa65b858062" translate="yes" xml:space="preserve">
          <source>Attribute#imm_arg?</source>
          <target state="translated">Attribute#imm_arg?</target>
        </trans-unit>
        <trans-unit id="9bc544d15fc2282a704c9272d8662871bf6b9675" translate="yes" xml:space="preserve">
          <source>Attribute#in_alloca?</source>
          <target state="translated">Attribute#in_alloca?</target>
        </trans-unit>
        <trans-unit id="4acb0c5533d362e90699de5aced65543f1948031" translate="yes" xml:space="preserve">
          <source>Attribute#in_reg?</source>
          <target state="translated">Attribute#in_reg?</target>
        </trans-unit>
        <trans-unit id="a85362e49ffe151c432cb2848f23d30d7766cb06" translate="yes" xml:space="preserve">
          <source>Attribute#inaccessible_mem_only?</source>
          <target state="translated">Attribute#inaccessible_mem_only?</target>
        </trans-unit>
        <trans-unit id="3fc61c416ca94b4be251a8b1b38128274a91919c" translate="yes" xml:space="preserve">
          <source>Attribute#inaccessible_mem_or_arg_mem_only?</source>
          <target state="translated">Attribute#inaccessible_mem_or_arg_mem_only?</target>
        </trans-unit>
        <trans-unit id="bb137c46e640ccaed20f78a3bd68ac5fa88060f4" translate="yes" xml:space="preserve">
          <source>Attribute#inline_hint?</source>
          <target state="translated">Attribute#inline_hint?</target>
        </trans-unit>
        <trans-unit id="dba4e3017681f1db9ac14afe6363cc4f9cd29c34" translate="yes" xml:space="preserve">
          <source>Attribute#jump_table?</source>
          <target state="translated">Attribute#jump_table?</target>
        </trans-unit>
        <trans-unit id="af6634252d4a4c71aab580faf4e5af29ae5913e1" translate="yes" xml:space="preserve">
          <source>Attribute#min_size?</source>
          <target state="translated">Attribute#min_size?</target>
        </trans-unit>
        <trans-unit id="279541a0b3b6dd3ef83b00b41a0701a57c9251c7" translate="yes" xml:space="preserve">
          <source>Attribute#naked?</source>
          <target state="translated">Attribute#naked?</target>
        </trans-unit>
        <trans-unit id="ce2e83024a370ead4354b8492ac3eecd6335d9e7" translate="yes" xml:space="preserve">
          <source>Attribute#nest?</source>
          <target state="translated">Attribute#nest?</target>
        </trans-unit>
        <trans-unit id="daaa8f488811d607e42147a7106de80a2bb53dc5" translate="yes" xml:space="preserve">
          <source>Attribute#no_alias?</source>
          <target state="translated">Attribute#no_alias?</target>
        </trans-unit>
        <trans-unit id="5fe0d731fed1cea56756bac6d1c723c81e927931" translate="yes" xml:space="preserve">
          <source>Attribute#no_builtin?</source>
          <target state="translated">Attribute#no_builtin?</target>
        </trans-unit>
        <trans-unit id="bd6f6a99adb4564a6004ad3de44a425f6c244920" translate="yes" xml:space="preserve">
          <source>Attribute#no_capture?</source>
          <target state="translated">Attribute#no_capture?</target>
        </trans-unit>
        <trans-unit id="a0ee8b4373d8dc088dd99ba3e17df83c846d7af7" translate="yes" xml:space="preserve">
          <source>Attribute#no_duplicate?</source>
          <target state="translated">Attribute#no_duplicate?</target>
        </trans-unit>
        <trans-unit id="f2244a4971177d36f4e3cc56aafbf34a441936ca" translate="yes" xml:space="preserve">
          <source>Attribute#no_free?</source>
          <target state="translated">Attribute#no_free?</target>
        </trans-unit>
        <trans-unit id="1069992bfa0f14452fda9adc57101a290525bed4" translate="yes" xml:space="preserve">
          <source>Attribute#no_implicit_float?</source>
          <target state="translated">Attribute#no_implicit_float?</target>
        </trans-unit>
        <trans-unit id="44c3c3efb8a5fa05002b85aac7e09f3f83f056bc" translate="yes" xml:space="preserve">
          <source>Attribute#no_inline?</source>
          <target state="translated">Attribute#no_inline?</target>
        </trans-unit>
        <trans-unit id="ad6a33e7844ffc3d28ceeb7dfe90bdeb7869b672" translate="yes" xml:space="preserve">
          <source>Attribute#no_recurse?</source>
          <target state="translated">Attribute#no_recurse?</target>
        </trans-unit>
        <trans-unit id="0bf6060b8b9947ff53c0b3352c4a2f5ed2e0723f" translate="yes" xml:space="preserve">
          <source>Attribute#no_red_zone?</source>
          <target state="translated">Attribute#no_red_zone?</target>
        </trans-unit>
        <trans-unit id="e567de8ab85e7b64618ac9c701728ba52bf45fc9" translate="yes" xml:space="preserve">
          <source>Attribute#no_return?</source>
          <target state="translated">Attribute#no_return?</target>
        </trans-unit>
        <trans-unit id="63fb22368257e2d293c5a85de36e841bdd36aff1" translate="yes" xml:space="preserve">
          <source>Attribute#no_sync?</source>
          <target state="translated">Attribute#no_sync?</target>
        </trans-unit>
        <trans-unit id="3bd210021913a313c405fac4d93efb15af46b988" translate="yes" xml:space="preserve">
          <source>Attribute#no_unwind?</source>
          <target state="translated">Attribute#no_unwind?</target>
        </trans-unit>
        <trans-unit id="35ab635d4f314303b3dc46ad809de6159efcf0b7" translate="yes" xml:space="preserve">
          <source>Attribute#non_lazy_bind?</source>
          <target state="translated">Attribute#non_lazy_bind?</target>
        </trans-unit>
        <trans-unit id="a732ac3514fd857c00b58fc162427d488a135b46" translate="yes" xml:space="preserve">
          <source>Attribute#non_null?</source>
          <target state="translated">Attribute#non_null?</target>
        </trans-unit>
        <trans-unit id="5bafe477bd54b0825facc0d3a4398540c4ded542" translate="yes" xml:space="preserve">
          <source>Attribute#none?</source>
          <target state="translated">Attribute#none?</target>
        </trans-unit>
        <trans-unit id="6995ca569ed1348d64dc9eee730bf32163771337" translate="yes" xml:space="preserve">
          <source>Attribute#optimize_for_size?</source>
          <target state="translated">Attribute#optimize_for_size?</target>
        </trans-unit>
        <trans-unit id="90fea523b4700b921956a82cd4fa2ef7fa99a84c" translate="yes" xml:space="preserve">
          <source>Attribute#optimize_none?</source>
          <target state="translated">Attribute#optimize_none?</target>
        </trans-unit>
        <trans-unit id="ce45b13c9f500dd29ce3c99c0bb1969762d4b0a8" translate="yes" xml:space="preserve">
          <source>Attribute#read_none?</source>
          <target state="translated">Attribute#read_none?</target>
        </trans-unit>
        <trans-unit id="8b9b3b9a7e25820713f7658ee666c8eb87f72bf4" translate="yes" xml:space="preserve">
          <source>Attribute#read_only?</source>
          <target state="translated">Attribute#read_only?</target>
        </trans-unit>
        <trans-unit id="a43d28331436f1a0dcef19235a56af676fcb5695" translate="yes" xml:space="preserve">
          <source>Attribute#returned?</source>
          <target state="translated">Attribute#returned?</target>
        </trans-unit>
        <trans-unit id="9fa5c35978e931f72752ba1e3c9f9da4add39baf" translate="yes" xml:space="preserve">
          <source>Attribute#returns_twice?</source>
          <target state="translated">Attribute#returns_twice?</target>
        </trans-unit>
        <trans-unit id="46c8e9cda3d6cb072eb22187affa7a5d0bd5e686" translate="yes" xml:space="preserve">
          <source>Attribute#s_ext?</source>
          <target state="translated">Attribute#s_ext?</target>
        </trans-unit>
        <trans-unit id="a9c989a7782ff0883a0cd0cc518e20ed58962421" translate="yes" xml:space="preserve">
          <source>Attribute#safe_stack?</source>
          <target state="translated">Attribute#safe_stack?</target>
        </trans-unit>
        <trans-unit id="7dc0e96a61cad5d57fa69c44f28198001a76cbeb" translate="yes" xml:space="preserve">
          <source>Attribute#sanitize_address?</source>
          <target state="translated">Attribute#sanitize_address?</target>
        </trans-unit>
        <trans-unit id="8b30d55b001900ffc2c4f8fe99e06cc3c864e4cc" translate="yes" xml:space="preserve">
          <source>Attribute#sanitize_memory?</source>
          <target state="translated">Attribute#sanitize_memory?</target>
        </trans-unit>
        <trans-unit id="c340fd1add45ddc541f4354a31a86657f422fc61" translate="yes" xml:space="preserve">
          <source>Attribute#sanitize_thread?</source>
          <target state="translated">Attribute#sanitize_thread?</target>
        </trans-unit>
        <trans-unit id="4e77c67e89ffadc34d03cbabbf6528974c01627d" translate="yes" xml:space="preserve">
          <source>Attribute#stack_alignment?</source>
          <target state="translated">Attribute#stack_alignment?</target>
        </trans-unit>
        <trans-unit id="ff426aedd4b6017f850bed7014fe821d568d664c" translate="yes" xml:space="preserve">
          <source>Attribute#stack_protect?</source>
          <target state="translated">Attribute#stack_protect?</target>
        </trans-unit>
        <trans-unit id="b58c55729faee0e4d199ee01e0ef519d7a9af9d9" translate="yes" xml:space="preserve">
          <source>Attribute#stack_protect_req?</source>
          <target state="translated">Attribute#stack_protect_req?</target>
        </trans-unit>
        <trans-unit id="b272bf92befbdebaa24df6a1ea5581ef0b979bab" translate="yes" xml:space="preserve">
          <source>Attribute#stack_protect_strong?</source>
          <target state="translated">Attribute#stack_protect_strong?</target>
        </trans-unit>
        <trans-unit id="4f3d23fbdb199321d909ae925d2cdc3aa2b782c7" translate="yes" xml:space="preserve">
          <source>Attribute#struct_ret?</source>
          <target state="translated">Attribute#struct_ret?</target>
        </trans-unit>
        <trans-unit id="acf5e20301c8ca3433b771f323220d2e847e777a" translate="yes" xml:space="preserve">
          <source>Attribute#swift_error?</source>
          <target state="translated">Attribute#swift_error?</target>
        </trans-unit>
        <trans-unit id="4503e1aa905ff2b6e9f9b70ff40a36297264745b" translate="yes" xml:space="preserve">
          <source>Attribute#swift_self?</source>
          <target state="translated">Attribute#swift_self?</target>
        </trans-unit>
        <trans-unit id="798c3d5c8e17eaf884b37fc1ca05dcb9146b6677" translate="yes" xml:space="preserve">
          <source>Attribute#uw_table?</source>
          <target state="translated">Attribute#uw_table?</target>
        </trans-unit>
        <trans-unit id="66237b7e1761e0ad9d8cd26bd4d9ba5bd8a8fa3e" translate="yes" xml:space="preserve">
          <source>Attribute#will_return?</source>
          <target state="translated">Attribute#will_return?</target>
        </trans-unit>
        <trans-unit id="4e743d81ce608b377384f91100849adb82d28cce" translate="yes" xml:space="preserve">
          <source>Attribute#write_only?</source>
          <target state="translated">Attribute#write_only?</target>
        </trans-unit>
        <trans-unit id="d2667019a149c28c4059b8d5785ad4b03020fc00" translate="yes" xml:space="preserve">
          <source>Attribute#z_ext?</source>
          <target state="translated">Attribute#z_ext?</target>
        </trans-unit>
        <trans-unit id="897f7cbff2b25236f61dabf6a55513e105c66ea7" translate="yes" xml:space="preserve">
          <source>Attribute.from_kind</source>
          <target state="translated">Attribute.from_kind</target>
        </trans-unit>
        <trans-unit id="9d072985e372e3de8b219d112123a597483efd92" translate="yes" xml:space="preserve">
          <source>Attribute.kind_for</source>
          <target state="translated">Attribute.kind_for</target>
        </trans-unit>
        <trans-unit id="bb96d311bdb39254752217d9768a3f7e49d39e7a" translate="yes" xml:space="preserve">
          <source>AttributeIndex</source>
          <target state="translated">AttributeIndex</target>
        </trans-unit>
        <trans-unit id="51d048cf4b60b4aef01cac576e248004d59aac52" translate="yes" xml:space="preserve">
          <source>AttributeIndex#function_index?</source>
          <target state="translated">AttributeIndex#function_index?</target>
        </trans-unit>
        <trans-unit id="c957367f0c1018cb8d0caa380659012b0a54e807" translate="yes" xml:space="preserve">
          <source>AttributeIndex#return_index?</source>
          <target state="translated">AttributeIndex#return_index?</target>
        </trans-unit>
        <trans-unit id="7a09241d1f2113554d6dcff668039946b30f4377" translate="yes" xml:space="preserve">
          <source>AttributeSelection</source>
          <target state="translated">AttributeSelection</target>
        </trans-unit>
        <trans-unit id="b8cac5b0a0dff16d655103264f9f7a9390ae185e" translate="yes" xml:space="preserve">
          <source>AttributeSelection#none?</source>
          <target state="translated">AttributeSelection#none?</target>
        </trans-unit>
        <trans-unit id="3d50e5ca7d19c09181a16da908b5e83f27700a61" translate="yes" xml:space="preserve">
          <source>AttributeSelection#tcsadrain?</source>
          <target state="translated">AttributeSelection#tcsadrain?</target>
        </trans-unit>
        <trans-unit id="201507b6b3649da52d4c9a6e2beb3f1898b031b8" translate="yes" xml:space="preserve">
          <source>AttributeSelection#tcsaflush?</source>
          <target state="translated">AttributeSelection#tcsaflush?</target>
        </trans-unit>
        <trans-unit id="dc8b2b9d510f6337421fafaec1ba0d6e0258dda6" translate="yes" xml:space="preserve">
          <source>AttributeSelection#tcsanow?</source>
          <target state="translated">AttributeSelection#tcsanow?</target>
        </trans-unit>
        <trans-unit id="34398a9fad64ccc257cc8c434dc943dcf739d657" translate="yes" xml:space="preserve">
          <source>AttributeType</source>
          <target state="translated">AttributeType</target>
        </trans-unit>
        <trans-unit id="d191d762e62323755a7d036f4123f72d2345f1df" translate="yes" xml:space="preserve">
          <source>AttributeType#cdata?</source>
          <target state="translated">AttributeType#cdata?</target>
        </trans-unit>
        <trans-unit id="53eabbcc73fb2f6d1893d02b89e7a3674af5651d" translate="yes" xml:space="preserve">
          <source>AttributeType#entities?</source>
          <target state="translated">AttributeType#entities?</target>
        </trans-unit>
        <trans-unit id="a3cbbee2218b8c6502b97e62ef0ab8f8cac225b5" translate="yes" xml:space="preserve">
          <source>AttributeType#entity?</source>
          <target state="translated">AttributeType#entity?</target>
        </trans-unit>
        <trans-unit id="35e68fa92088767f27581a0f9f907cd9c8b25f49" translate="yes" xml:space="preserve">
          <source>AttributeType#enumeration?</source>
          <target state="translated">AttributeType#enumeration?</target>
        </trans-unit>
        <trans-unit id="813bf256b1dc179a95c2d806b23b8972a2cde383" translate="yes" xml:space="preserve">
          <source>AttributeType#id?</source>
          <target state="translated">AttributeType#id?</target>
        </trans-unit>
        <trans-unit id="9c2df037916f5a1b7fb76d7d25774cd697dc3570" translate="yes" xml:space="preserve">
          <source>AttributeType#idref?</source>
          <target state="translated">AttributeType#idref?</target>
        </trans-unit>
        <trans-unit id="bbad2e586428a9eef4f95329ec095f1c084c5d8b" translate="yes" xml:space="preserve">
          <source>AttributeType#idrefs?</source>
          <target state="translated">AttributeType#idrefs?</target>
        </trans-unit>
        <trans-unit id="10883ec370ef265cf5d134b68d96b33168c07c04" translate="yes" xml:space="preserve">
          <source>AttributeType#nmtoken?</source>
          <target state="translated">AttributeType#nmtoken?</target>
        </trans-unit>
        <trans-unit id="0c7448cb938e1c7a36f198750f12182cb9e32d0a" translate="yes" xml:space="preserve">
          <source>AttributeType#nmtokens?</source>
          <target state="translated">AttributeType#nmtokens?</target>
        </trans-unit>
        <trans-unit id="29aad82602a91f53c9e3024201a563f8e7c6e744" translate="yes" xml:space="preserve">
          <source>AttributeType#notation?</source>
          <target state="translated">AttributeType#notation?</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="59d45d5ba71453a1a8d9a708e16e372c4673d7f9" translate="yes" xml:space="preserve">
          <source>Attributes are used to pass flags to the linker to find external libraries:</source>
          <target state="translated">属性用于向链接器传递标志,以查找外部库。</target>
        </trans-unit>
        <trans-unit id="374e212e372c04987fc8f206f92aa3e3db9565f2" translate="yes" xml:space="preserve">
          <source>Attributes can be omitted if the library is implicitly linked, as in the case of libc.</source>
          <target state="translated">如果库是隐式链接的,就像libc一样,可以省略属性。</target>
        </trans-unit>
        <trans-unit id="0887f1453dcf1a030d57a0fb7c4a0fe3744b49bf" translate="yes" xml:space="preserve">
          <source>Attributes not mapped with &lt;code&gt;&lt;a href=&quot;yaml#mapping(**_properties_)-macro&quot;&gt;YAML.mapping&lt;/a&gt;&lt;/code&gt; are not defined as properties. Also, missing attributes raise a &lt;code&gt;&lt;a href=&quot;yaml/parseexception&quot;&gt;ParseException&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">未使用 &lt;code&gt;&lt;a href=&quot;yaml#mapping(**_properties_)-macro&quot;&gt;YAML.mapping&lt;/a&gt;&lt;/code&gt; 映射的属性未定义为属性。另外，缺少属性会引发 &lt;code&gt;&lt;a href=&quot;yaml/parseexception&quot;&gt;ParseException&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c1eb37c0f8c6acc81b5da5608481befc3b7c768" translate="yes" xml:space="preserve">
          <source>Attributes#[]</source>
          <target state="translated">Attributes#[]</target>
        </trans-unit>
        <trans-unit id="ec2c9c992c0857679d42fc3fd3b59a648ec9e596" translate="yes" xml:space="preserve">
          <source>Attributes#[]=</source>
          <target state="translated">Attributes#[]=</target>
        </trans-unit>
        <trans-unit id="a0cf68da8e86865304ffccc8283a5f83b8a7a06e" translate="yes" xml:space="preserve">
          <source>Attributes#[]?</source>
          <target state="translated">Attributes#[]?</target>
        </trans-unit>
        <trans-unit id="395bb8dd91a0032ae13ca48d96e73eedf4bd5993" translate="yes" xml:space="preserve">
          <source>Attributes#delete</source>
          <target state="translated">Attributes#delete</target>
        </trans-unit>
        <trans-unit id="8162fd98481ddedcd97714b77f8141677742d5bd" translate="yes" xml:space="preserve">
          <source>Attributes#each</source>
          <target state="translated">Attributes#each</target>
        </trans-unit>
        <trans-unit id="39e750490cc594ddbcae3425d26a45bfaca83dfb" translate="yes" xml:space="preserve">
          <source>Attributes#empty?</source>
          <target state="translated">Attributes#empty?</target>
        </trans-unit>
        <trans-unit id="c474e0417f2eea1b9857c5ed56dbc1ea2ed906b0" translate="yes" xml:space="preserve">
          <source>Attributes#inspect</source>
          <target state="translated">Attributes#inspect</target>
        </trans-unit>
        <trans-unit id="4a26a16334a604a555622b43b4ee71a7e1cedc5d" translate="yes" xml:space="preserve">
          <source>Attributes#to_s</source>
          <target state="translated">Attributes#to_s</target>
        </trans-unit>
        <trans-unit id="834b3bb5992ab33a69fe12c6f754ba95912b9a0c" translate="yes" xml:space="preserve">
          <source>Attributes.new</source>
          <target state="translated">Attributes.new</target>
        </trans-unit>
        <trans-unit id="3e225383a82f6ff6bb62a279c1d5679980e521d6" translate="yes" xml:space="preserve">
          <source>AuthScheme</source>
          <target state="translated">AuthScheme</target>
        </trans-unit>
        <trans-unit id="cfbc22e8fcadec825f2980793ce1668385458ac0" translate="yes" xml:space="preserve">
          <source>AuthScheme#http_basic?</source>
          <target state="translated">AuthScheme#http_basic?</target>
        </trans-unit>
        <trans-unit id="c7b27183b6f83b53cbcc275eec8a07e6f3f7f4d5" translate="yes" xml:space="preserve">
          <source>AuthScheme#request_body?</source>
          <target state="translated">AuthScheme#request_body?</target>
        </trans-unit>
        <trans-unit id="7f461cd3cb2e38d4a2fc4123a090ae80687b05b2" translate="yes" xml:space="preserve">
          <source>Authenticated an &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; to add an OAuth authorization header, as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc5849#section-3&quot;&gt;RFC 5849, Section 3&lt;/a&gt;.</source>
          <target state="translated">对 &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; 进行身份验证以添加OAuth授权标头，如&lt;a href=&quot;https://tools.ietf.org/html/rfc5849#section-3&quot;&gt;RFC 5849第3节&lt;/a&gt;所指定。</target>
        </trans-unit>
        <trans-unit id="84d75701d51e872fe66f74da2dbbdd941b941d42" translate="yes" xml:space="preserve">
          <source>Authenticates an &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt;, refreshing the access token if it is expired.</source>
          <target state="translated">验证 &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; ，如果访问令牌已过期，则刷新该访问令牌。</target>
        </trans-unit>
        <trans-unit id="08cb9c816d5ad644dea4db76b2c187cbefa3eaf2" translate="yes" xml:space="preserve">
          <source>Automatic help message generation</source>
          <target state="translated">自动生成帮助信息</target>
        </trans-unit>
        <trans-unit id="cd35d07b7e4ae39178d33dae2e788398a09873b9" translate="yes" xml:space="preserve">
          <source>Available attributes:</source>
          <target state="translated">可用属性:</target>
        </trans-unit>
        <trans-unit id="38b706eb5faeca0fb6279722259f6ee315060a46" translate="yes" xml:space="preserve">
          <source>Available colors are:</source>
          <target state="translated">可用的颜色有:</target>
        </trans-unit>
        <trans-unit id="c1483ce79645846dc8ecfc27708f8a6a5d2ddac8" translate="yes" xml:space="preserve">
          <source>Available escape sequences:</source>
          <target state="translated">可用的逃逸序列。</target>
        </trans-unit>
        <trans-unit id="a4c38d6a1f3e373daabd32e76e59298741718f85" translate="yes" xml:space="preserve">
          <source>Available only on Unix-like operating systems.</source>
          <target state="translated">仅在类似Unix的操作系统上可用。</target>
        </trans-unit>
        <trans-unit id="81202d31cdf5601b25e22206e429ebcd25c9cb31" translate="yes" xml:space="preserve">
          <source>Available operators are whitelisted in the compiler (see &lt;a href=&quot;#list-of-operators&quot;&gt;List of Operators&lt;/a&gt; below) which allows symbol-only method names and treats them as operators, including their precedence rules.</source>
          <target state="translated">可用的运算符在编译器中列入白名单（请参见下面&lt;a href=&quot;#list-of-operators&quot;&gt;的运算符列表&lt;/a&gt;），该列表允许仅使用符号的方法名称，并将它们视为运算符，包括其优先级规则。</target>
        </trans-unit>
        <trans-unit id="510940ae6a95c230df0a58e0acc519bf6e164458" translate="yes" xml:space="preserve">
          <source>Available text decorations are:</source>
          <target state="translated">可用的文字装饰有:</target>
        </trans-unit>
        <trans-unit id="67c34c16c0b55f14373af1b9db90b32ae76c6d3b" translate="yes" xml:space="preserve">
          <source>Avoid IO allocation for string building</source>
          <target state="translated">避免为建立字符串分配IO</target>
        </trans-unit>
        <trans-unit id="d5633977ad69841a03be941e65b29a0c8c0389ef" translate="yes" xml:space="preserve">
          <source>Avoid creating temporary objects over and over</source>
          <target state="translated">避免重复创建临时对象</target>
        </trans-unit>
        <trans-unit id="48de5e3e76f3a0feee823933f7390eba854e79bd" translate="yes" xml:space="preserve">
          <source>Avoiding memory allocations</source>
          <target state="translated">避免内存分配</target>
        </trans-unit>
        <trans-unit id="f66b522860ee19e89aad8dc329d6c7af31f96db3" translate="yes" xml:space="preserve">
          <source>BM::Job</source>
          <target state="translated">BM::Job</target>
        </trans-unit>
        <trans-unit id="07e2e45d34288bec03896864642fb10c3e75ae8a" translate="yes" xml:space="preserve">
          <source>BM::Job#report</source>
          <target state="translated">BM::Job#report</target>
        </trans-unit>
        <trans-unit id="89c45fba18bf6a7b2c0503d3185ada6e2f5c0b63" translate="yes" xml:space="preserve">
          <source>BM::Tms</source>
          <target state="translated">BM::Tms</target>
        </trans-unit>
        <trans-unit id="8af1d5cee09fb0d19fc07b40f6c354fb732306b1" translate="yes" xml:space="preserve">
          <source>BM::Tms#cstime</source>
          <target state="translated">BM::Tms#cstime</target>
        </trans-unit>
        <trans-unit id="10424edb14d0c533b9e77c374eccffc262127e41" translate="yes" xml:space="preserve">
          <source>BM::Tms#cutime</source>
          <target state="translated">BM::Tms#cutime</target>
        </trans-unit>
        <trans-unit id="7db7b39f36d1c910d03e4eb05af73ecc94315e8d" translate="yes" xml:space="preserve">
          <source>BM::Tms#label</source>
          <target state="translated">BM::Tms#label</target>
        </trans-unit>
        <trans-unit id="588420bcfeb6492e7c079847894a5969c0d81e27" translate="yes" xml:space="preserve">
          <source>BM::Tms#real</source>
          <target state="translated">BM::Tms#real</target>
        </trans-unit>
        <trans-unit id="ae606437d5109ce5be44a685979d9964bc6715b8" translate="yes" xml:space="preserve">
          <source>BM::Tms#stime</source>
          <target state="translated">BM::Tms#stime</target>
        </trans-unit>
        <trans-unit id="f09692c7b114274f0cf2b0eefbee206ee0060766" translate="yes" xml:space="preserve">
          <source>BM::Tms#to_s</source>
          <target state="translated">BM::Tms#to_s</target>
        </trans-unit>
        <trans-unit id="de79ad274ddb5544179ac7533293cf524f59af61" translate="yes" xml:space="preserve">
          <source>BM::Tms#total</source>
          <target state="translated">BM::Tms#total</target>
        </trans-unit>
        <trans-unit id="c4a68344eeeb847d94f1e04a3598dc9688291619" translate="yes" xml:space="preserve">
          <source>BM::Tms#utime</source>
          <target state="translated">BM::Tms#utime</target>
        </trans-unit>
        <trans-unit id="80c6687f13ab05888939e7155d6af9471b9185d4" translate="yes" xml:space="preserve">
          <source>BUG</source>
          <target state="translated">BUG</target>
        </trans-unit>
        <trans-unit id="e758ca64563fdd62965a2b97b76d555b1a70d938" translate="yes" xml:space="preserve">
          <source>Backend</source>
          <target state="translated">Backend</target>
        </trans-unit>
        <trans-unit id="0c20370ee3f0a68ae3299992a8d4f5e0e0601fea" translate="yes" xml:space="preserve">
          <source>Backend#close</source>
          <target state="translated">Backend#close</target>
        </trans-unit>
        <trans-unit id="4e0b2380b5b984647cd039318f5100ca2ea348bd" translate="yes" xml:space="preserve">
          <source>Backend#write</source>
          <target state="translated">Backend#write</target>
        </trans-unit>
        <trans-unit id="74e25ae462f4d620f38c196422fe42c88f8cef4e" translate="yes" xml:space="preserve">
          <source>Backreferences are expressed in the form &lt;code&gt;&quot;\\d&quot;&lt;/code&gt;, where &lt;em&gt;d&lt;/em&gt; is a group number, or &lt;code&gt;&quot;\\k&amp;lt;name&amp;gt;&quot;&lt;/code&gt; where &lt;em&gt;name&lt;/em&gt; is the name of a named capture group. A sequence of literal characters resembling a backreference can be expressed by placing &lt;code&gt;&quot;\\&quot;&lt;/code&gt; before the sequence.</source>
          <target state="translated">反向引用被的形式表达 &lt;code&gt;&quot;\\d&quot;&lt;/code&gt; ，其中&lt;em&gt;d&lt;/em&gt;是一组数，或 &lt;code&gt;&quot;\\k&amp;lt;name&amp;gt;&quot;&lt;/code&gt; ，其中&lt;em&gt;名称&lt;/em&gt;是命名捕获组的名称。可以通过在序列之前放置 &lt;code&gt;&quot;\\&quot;&lt;/code&gt; 来表示类似于后向引用的文字字符序列。</target>
        </trans-unit>
        <trans-unit id="d6315d3a8cf9ea02353d1b7701638e937744fb3f" translate="yes" xml:space="preserve">
          <source>Backreferences are expressed in the form &lt;code&gt;&quot;\\d&quot;&lt;/code&gt;, where &lt;em&gt;d&lt;/em&gt; is a group number, or &lt;code&gt;&quot;\\k&lt;name&gt;&quot;&lt;/name&gt;&lt;/code&gt; where &lt;em&gt;name&lt;/em&gt; is the name of a named capture group. A sequence of literal characters resembling a backreference can be expressed by placing &lt;code&gt;&quot;\\&quot;&lt;/code&gt; before the sequence.</source>
          <target state="translated">反向引用以 &lt;code&gt;&quot;\\d&quot;&lt;/code&gt; 的形式表示，其中&lt;em&gt;d&lt;/em&gt;是组号或 &lt;code&gt;&quot;\\k&lt;name&gt;&quot;&lt;/name&gt;&lt;/code&gt; 其中，&lt;em&gt;name&lt;/em&gt;是命名捕获组的名称。可以通过在序列之前放置 &lt;code&gt;&quot;\\&quot;&lt;/code&gt; 来表示类似于后向引用的文字字符序列。</target>
        </trans-unit>
        <trans-unit id="1afefdad8f394c65ed6d000a865d699a38489c6f" translate="yes" xml:space="preserve">
          <source>Bad address</source>
          <target state="translated">地址错误</target>
        </trans-unit>
        <trans-unit id="100269e198b12a051ab659ff66bd324a08031278" translate="yes" xml:space="preserve">
          <source>Bad file descriptor</source>
          <target state="translated">文件描述符错误</target>
        </trans-unit>
        <trans-unit id="551cd91c11cd1216214e9eb9e26d84be076f8948" translate="yes" xml:space="preserve">
          <source>Bad message</source>
          <target state="translated">坏消息</target>
        </trans-unit>
        <trans-unit id="b5c9213525d127d4652ef2a59216a99a46a9f056" translate="yes" xml:space="preserve">
          <source>Base can be from 0 to 36 with digits from '0' to '9' and 'a' to 'z' or 'A' to 'Z'.</source>
          <target state="translated">基数可以从0到36,数字从'0'到'9','a'到'z'或'A'到'Z'。</target>
        </trans-unit>
        <trans-unit id="ece1300ed3987bdec913777c1c732a8e415b9758" translate="yes" xml:space="preserve">
          <source>Base class for all backends.</source>
          <target state="translated">所有后端的基础类。</target>
        </trans-unit>
        <trans-unit id="c09ad5daf4b380564a8d548ff2c9c42198db49f4" translate="yes" xml:space="preserve">
          <source>Base class for the two possible access tokens: Bearer and Mac.</source>
          <target state="translated">两个可能的访问令牌的基础类。Bearer和Mac.</target>
        </trans-unit>
        <trans-unit id="2222c0822690a76b68f5bab57c3091a75e62d4ff" translate="yes" xml:space="preserve">
          <source>Base implementation of &lt;code&gt;&lt;a href=&quot;formatter&quot;&gt;Log::Formatter&lt;/a&gt;&lt;/code&gt; to convert log entries into text representation</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formatter&quot;&gt;Log::Formatter&lt;/a&gt;&lt;/code&gt; 基本实现，可将日志条目转换为文本表示形式</target>
        </trans-unit>
        <trans-unit id="a6d0d7ce07c01225083a91686d46c289e455ede8" translate="yes" xml:space="preserve">
          <source>Base interface implemented by log entry dispatchers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff6d5d20d976aecca69e6e7314f8638c3ef9e9a" translate="yes" xml:space="preserve">
          <source>Base interface to convert log entries and write them to an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">用于转换日志条目并将其写入 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 的基本接口</target>
        </trans-unit>
        <trans-unit id="d2279140bd45b301d46bcb204e2af6a21fbd332a" translate="yes" xml:space="preserve">
          <source>Base type for &lt;code&gt;&lt;a href=&quot;examplegroup&quot;&gt;ExampleGroup&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;examplegroup&quot;&gt;ExampleGroup&lt;/a&gt;&lt;/code&gt; 的基本类型。</target>
        </trans-unit>
        <trans-unit id="58457c881f4d9df35dcce1f98a24ba7aa7e6e8f7" translate="yes" xml:space="preserve">
          <source>Base type for file information related to zip entries.</source>
          <target state="translated">与zip条目相关的文件信息的基础类型。</target>
        </trans-unit>
        <trans-unit id="250286ab1299be12f2533a3853e21eb5bd6c331b" translate="yes" xml:space="preserve">
          <source>Base#digest</source>
          <target state="translated">Base#digest</target>
        </trans-unit>
        <trans-unit id="1ce91fd0f35772c2afb439066c8176bc1c5bf9c0" translate="yes" xml:space="preserve">
          <source>Base#digest_size</source>
          <target state="translated">Base#digest_size</target>
        </trans-unit>
        <trans-unit id="53c5fdc9f3bb8b238635001e4dd8bc9fac756d49" translate="yes" xml:space="preserve">
          <source>Base#final</source>
          <target state="translated">Base#final</target>
        </trans-unit>
        <trans-unit id="2572df66ab2c440b181f7a2c371bdd2c65bad36e" translate="yes" xml:space="preserve">
          <source>Base#final_impl</source>
          <target state="translated">Base#final_impl</target>
        </trans-unit>
        <trans-unit id="3aae8592ebd82fe1db1f98890ac8f053cb6563ea" translate="yes" xml:space="preserve">
          <source>Base#hexdigest</source>
          <target state="translated">Base#hexdigest</target>
        </trans-unit>
        <trans-unit id="7132e04edb3bc4f2b95842e09aa441adc792cd9d" translate="yes" xml:space="preserve">
          <source>Base#reset</source>
          <target state="translated">Base#reset</target>
        </trans-unit>
        <trans-unit id="d41274fd2c1f6773871f618cac35dc92deafa380" translate="yes" xml:space="preserve">
          <source>Base#reset_impl</source>
          <target state="translated">Base#reset_impl</target>
        </trans-unit>
        <trans-unit id="4bac6ec4c65502c30c8f66a867dc2a97dcf18466" translate="yes" xml:space="preserve">
          <source>Base#update</source>
          <target state="translated">Base#update</target>
        </trans-unit>
        <trans-unit id="da273530cf27a048fdb3926eeb4e76b8fabbaf65" translate="yes" xml:space="preserve">
          <source>Base#update_impl</source>
          <target state="translated">Base#update_impl</target>
        </trans-unit>
        <trans-unit id="8d5ef8cec8af042cde447b3c6fe5996edf361a46" translate="yes" xml:space="preserve">
          <source>Base.base64digest</source>
          <target state="translated">Base.base64digest</target>
        </trans-unit>
        <trans-unit id="416604d9d96b9661dced94d8074544ed95d977f8" translate="yes" xml:space="preserve">
          <source>Base.digest</source>
          <target state="translated">Base.digest</target>
        </trans-unit>
        <trans-unit id="5448f0d471ec7d5def242d101bee31535ec1bdb2" translate="yes" xml:space="preserve">
          <source>Base.hexdigest</source>
          <target state="translated">Base.hexdigest</target>
        </trans-unit>
        <trans-unit id="895c330ff6166a7f13701f8d9b78f313787269c8" translate="yes" xml:space="preserve">
          <source>Base64</source>
          <target state="translated">Base64</target>
        </trans-unit>
        <trans-unit id="00a424dffa81e1994005f900ea670e0b2850f976" translate="yes" xml:space="preserve">
          <source>Base64::Error</source>
          <target state="translated">Base64::Error</target>
        </trans-unit>
        <trans-unit id="bbbc7d63521d385aeb5d6034a5c294f209b9aa6d" translate="yes" xml:space="preserve">
          <source>Based on &lt;a href=&quot;https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml&quot;&gt;Hypertext Transfer Protocol (HTTP) Status Code Registry&lt;/a&gt;</source>
          <target state="translated">基于&lt;a href=&quot;https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml&quot;&gt;超文本传输​​协议（HTTP）状态代码注册表&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f711f1b4bf6b3fc47236f2fce6ebcfb1953df29b" translate="yes" xml:space="preserve">
          <source>Based on https://github.com/rust-lang/rust/blob/29ac04402d53d358a1f6200bea45a301ff05b2d1/src/librustc_trans/trans/cabi.rs</source>
          <target state="translated">根据https://github.com/rust-lang/rust/blob/29ac04402d53d358a1f6200bea45a301ff05b2d1/src/librustc_trans/trans/cabi.rs</target>
        </trans-unit>
        <trans-unit id="e43d4d2c3acfdc7448b7d88d02647dfbc54bb7c0" translate="yes" xml:space="preserve">
          <source>Based on https://github.com/rust-lang/rust/blob/29ac04402d53d358a1f6200bea45a301ff05b2d1/src/librustc_trans/trans/cabi_x86.rs</source>
          <target state="translated">根据https://github.com/rust-lang/rust/blob/29ac04402d53d358a1f6200bea45a301ff05b2d1/src/librustc_trans/trans/cabi_x86.rs</target>
        </trans-unit>
        <trans-unit id="bf2fb05a216598764cef66c41725d2a46f51e1e6" translate="yes" xml:space="preserve">
          <source>Based on https://github.com/rust-lang/rust/blob/29ac04402d53d358a1f6200bea45a301ff05b2d1/src/librustc_trans/trans/cabi_x86_64.rs</source>
          <target state="translated">根据https://github.com/rust-lang/rust/blob/29ac04402d53d358a1f6200bea45a301ff05b2d1/src/librustc_trans/trans/cabi_x86_64.rs</target>
        </trans-unit>
        <trans-unit id="5e7d26b948876cef989cee64d09be306603ea929" translate="yes" xml:space="preserve">
          <source>Based on https://github.com/rust-lang/rust/blob/29ac04402d53d358a1f6200bea45a301ff05b2d1/src/librustc_trans/trans/cabi_x86_win64.rs</source>
          <target state="translated">根据https://github.com/rust-lang/rust/blob/29ac04402d53d358a1f6200bea45a301ff05b2d1/src/librustc_trans/trans/cabi_x86_win64.rs</target>
        </trans-unit>
        <trans-unit id="f0b4f365cf94cf7330e4b0d3b8ab3d25cfd39857" translate="yes" xml:space="preserve">
          <source>Based on https://github.com/rust-lang/rust/blob/dfe8bd10fe6763e0a1d5d55fa2574ecba27d3e2e/src/librustc_trans/cabi_arm.rs</source>
          <target state="translated">根据https://github.com/rust-lang/rust/blob/dfe8bd10fe6763e0a1d5d55fa2574ecba27d3e2e/src/librustc_trans/cabi_arm.rs</target>
        </trans-unit>
        <trans-unit id="27bb7bc4f469d35acc89d0e29c0cf3bde05a7fa2" translate="yes" xml:space="preserve">
          <source>Based on https://github.com/rust-lang/rust/blob/master/src/librustc_trans/cabi_aarch64.rs</source>
          <target state="translated">根据https://github.com/rust-lang/rust/blob/master/src/librustc_trans/cabi_aarch64.rs</target>
        </trans-unit>
        <trans-unit id="de4170e8d22bb2e0912d3b03aba91a32b185c2d0" translate="yes" xml:space="preserve">
          <source>Basic example:</source>
          <target state="translated">基本的例子。</target>
        </trans-unit>
        <trans-unit id="5dd696704b278e1b2f99e9bb77dd05d6ce9727bd" translate="yes" xml:space="preserve">
          <source>BasicBlock</source>
          <target state="translated">BasicBlock</target>
        </trans-unit>
        <trans-unit id="31d8312ab5ff9afb1d89520ba26aab4040581537" translate="yes" xml:space="preserve">
          <source>BasicBlock#delete</source>
          <target state="translated">BasicBlock#delete</target>
        </trans-unit>
        <trans-unit id="313b181622cd7c7bcfb2e63f00f1d842a96e1e24" translate="yes" xml:space="preserve">
          <source>BasicBlock#instructions</source>
          <target state="translated">BasicBlock#instructions</target>
        </trans-unit>
        <trans-unit id="a3f6ada50ecb125ff5f7262c8e79e08d586c2921" translate="yes" xml:space="preserve">
          <source>BasicBlock#name</source>
          <target state="translated">BasicBlock#name</target>
        </trans-unit>
        <trans-unit id="4ce7dd7b641030d3b21213b6ba47b05856bbeaa0" translate="yes" xml:space="preserve">
          <source>BasicBlock#to_unsafe</source>
          <target state="translated">BasicBlock#to_unsafe</target>
        </trans-unit>
        <trans-unit id="d697f1b5297bc21b2b16aac609e7dbf428a9ebec" translate="yes" xml:space="preserve">
          <source>BasicBlock.new</source>
          <target state="translated">BasicBlock.new</target>
        </trans-unit>
        <trans-unit id="3970c967a7fba3c961ac684c1d745f98938c69b6" translate="yes" xml:space="preserve">
          <source>BasicBlock.null</source>
          <target state="translated">BasicBlock.null</target>
        </trans-unit>
        <trans-unit id="6a58b6da8858b3e1ab6eded8b6e2771aa3e9b220" translate="yes" xml:space="preserve">
          <source>BasicBlockCollection</source>
          <target state="translated">BasicBlockCollection</target>
        </trans-unit>
        <trans-unit id="f14e2b277e042e6463cca4836d0d7f33d1c67c4a" translate="yes" xml:space="preserve">
          <source>BasicBlockCollection#[]</source>
          <target state="translated">BasicBlockCollection#[]</target>
        </trans-unit>
        <trans-unit id="5261091d3c2ecf55d6d26289c32ea73c66b2407c" translate="yes" xml:space="preserve">
          <source>BasicBlockCollection#[]?</source>
          <target state="translated">BasicBlockCollection#[]?</target>
        </trans-unit>
        <trans-unit id="5a2d5a3e2968388f968dd6d79cf5157dacb388f1" translate="yes" xml:space="preserve">
          <source>BasicBlockCollection#append</source>
          <target state="translated">BasicBlockCollection#append</target>
        </trans-unit>
        <trans-unit id="61056688dac909d7b0d2d5790bffae8e0f72a7f2" translate="yes" xml:space="preserve">
          <source>BasicBlockCollection#each</source>
          <target state="translated">BasicBlockCollection#each</target>
        </trans-unit>
        <trans-unit id="b1e1b9e10c409e81b7068377f48fee3a71c58858" translate="yes" xml:space="preserve">
          <source>BasicBlockCollection#last?</source>
          <target state="translated">BasicBlockCollection#last?</target>
        </trans-unit>
        <trans-unit id="4b154d0c5a428cd20206cecbc1caeff7f18ac967" translate="yes" xml:space="preserve">
          <source>BasicBlockCollection.new</source>
          <target state="translated">BasicBlockCollection.new</target>
        </trans-unit>
        <trans-unit id="edd76f36427e0be6ee4ea72fcc2b48f9dc5f829a" translate="yes" xml:space="preserve">
          <source>BaudRate</source>
          <target state="translated">BaudRate</target>
        </trans-unit>
        <trans-unit id="49723ef7be0862576e9b22d13f9a5c40d70a5822" translate="yes" xml:space="preserve">
          <source>BaudRate#b0?</source>
          <target state="translated">BaudRate#b0?</target>
        </trans-unit>
        <trans-unit id="ca2680cb88c65e01efa2e8d5a01d9fbfd32d01a6" translate="yes" xml:space="preserve">
          <source>BaudRate#b110?</source>
          <target state="translated">BaudRate#b110?</target>
        </trans-unit>
        <trans-unit id="c0ce28374b5434d8b6f30bcc06ea74bd3cc08872" translate="yes" xml:space="preserve">
          <source>BaudRate#b1200?</source>
          <target state="translated">BaudRate#b1200?</target>
        </trans-unit>
        <trans-unit id="7d158bdc6c79fa6a3f2c9c9577850e1cae436522" translate="yes" xml:space="preserve">
          <source>BaudRate#b134?</source>
          <target state="translated">BaudRate#b134?</target>
        </trans-unit>
        <trans-unit id="32f854570d66ba8d175bac1eb0502ebcedfb376b" translate="yes" xml:space="preserve">
          <source>BaudRate#b150?</source>
          <target state="translated">BaudRate#b150?</target>
        </trans-unit>
        <trans-unit id="11f58437ca3b4b951f43c3b76734a5ce95a50c5f" translate="yes" xml:space="preserve">
          <source>BaudRate#b1800?</source>
          <target state="translated">BaudRate#b1800?</target>
        </trans-unit>
        <trans-unit id="532da2e6cad370112a92c23060753f9f4f2a0cc0" translate="yes" xml:space="preserve">
          <source>BaudRate#b19200?</source>
          <target state="translated">BaudRate#b19200?</target>
        </trans-unit>
        <trans-unit id="e1283708e3f8fa9414eae57c5aea87745244a82d" translate="yes" xml:space="preserve">
          <source>BaudRate#b200?</source>
          <target state="translated">BaudRate#b200?</target>
        </trans-unit>
        <trans-unit id="5dd9d07f421d749f7cff0515a9de26e027489470" translate="yes" xml:space="preserve">
          <source>BaudRate#b2400?</source>
          <target state="translated">BaudRate#b2400?</target>
        </trans-unit>
        <trans-unit id="22b1a4572b1dad0fd22829a1eee8858d60fc1ae4" translate="yes" xml:space="preserve">
          <source>BaudRate#b300?</source>
          <target state="translated">BaudRate#b300?</target>
        </trans-unit>
        <trans-unit id="6433fbc2a9c351f75854a57a551d716c28574ad7" translate="yes" xml:space="preserve">
          <source>BaudRate#b38400?</source>
          <target state="translated">BaudRate#b38400?</target>
        </trans-unit>
        <trans-unit id="dad59d45df96c215ff50918faa7f89db889e1f7c" translate="yes" xml:space="preserve">
          <source>BaudRate#b4800?</source>
          <target state="translated">BaudRate#b4800?</target>
        </trans-unit>
        <trans-unit id="329f261f86c680c4d48d6bde16ca05ab699bcf77" translate="yes" xml:space="preserve">
          <source>BaudRate#b50?</source>
          <target state="translated">BaudRate#b50?</target>
        </trans-unit>
        <trans-unit id="6d7c9f11d63102da04ac90c6eadac614cdddb1a4" translate="yes" xml:space="preserve">
          <source>BaudRate#b600?</source>
          <target state="translated">BaudRate#b600?</target>
        </trans-unit>
        <trans-unit id="616f7cedb61529af38a2fa2438920889d16d3c9a" translate="yes" xml:space="preserve">
          <source>BaudRate#b75?</source>
          <target state="translated">BaudRate#b75?</target>
        </trans-unit>
        <trans-unit id="63a355a61b48f4e3591d106f59d5e1e63f12fa24" translate="yes" xml:space="preserve">
          <source>BaudRate#b9600?</source>
          <target state="translated">BaudRate#b9600?</target>
        </trans-unit>
        <trans-unit id="1dc0ac2ecd092b6f470147f86e773062202f7070" translate="yes" xml:space="preserve">
          <source>Bcrypt</source>
          <target state="translated">Bcrypt</target>
        </trans-unit>
        <trans-unit id="741645e3c64ddf2deebeafbb49af2f2bff3a8aa3" translate="yes" xml:space="preserve">
          <source>Bcrypt#cost</source>
          <target state="translated">Bcrypt#cost</target>
        </trans-unit>
        <trans-unit id="0e7addf388566074bd161e6a6c614d4196795a9f" translate="yes" xml:space="preserve">
          <source>Bcrypt#digest</source>
          <target state="translated">Bcrypt#digest</target>
        </trans-unit>
        <trans-unit id="1e6a5d11b100693fccdeb3bce48ac82591293663" translate="yes" xml:space="preserve">
          <source>Bcrypt#inspect</source>
          <target state="translated">Bcrypt#inspect</target>
        </trans-unit>
        <trans-unit id="fb708adade66bdaf49c672dd8b49062858b4cd65" translate="yes" xml:space="preserve">
          <source>Bcrypt#password</source>
          <target state="translated">Bcrypt#password</target>
        </trans-unit>
        <trans-unit id="0f5ed2597549273a8582090313e2c712e6af86db" translate="yes" xml:space="preserve">
          <source>Bcrypt#salt</source>
          <target state="translated">Bcrypt#salt</target>
        </trans-unit>
        <trans-unit id="81980903ef7ed8d755c4e1e0451484d8e23461c0" translate="yes" xml:space="preserve">
          <source>Bcrypt#to_s</source>
          <target state="translated">Bcrypt#to_s</target>
        </trans-unit>
        <trans-unit id="0eaae7269dde88ef7b96d1de7581718e0c8f4503" translate="yes" xml:space="preserve">
          <source>Bcrypt#to_slice</source>
          <target state="translated">Bcrypt#to_slice</target>
        </trans-unit>
        <trans-unit id="b72fb354c2a3c397b8ed69e4cfc57791b6c36cd7" translate="yes" xml:space="preserve">
          <source>Bcrypt, like the PBKDF2 or scrypt ciphers, are designed to be slow, so generating rainbow tables or cracking passwords is nearly impossible. Yet, computers are always getting faster and faster, so the actual cost must be incremented every once in a while. Always use the maximum cost that is tolerable, performance wise, for your application. Be sure to test and select this based on your server, not your home computer.</source>
          <target state="translated">Bcrypt和PBKDF2或scrypt密码一样,设计得很慢,所以生成彩虹表或破解密码几乎不可能。然而,计算机的速度总是越来越快,所以实际成本必须每隔一段时间就递增一次。一定要使用对你的应用来说,性能上可以容忍的最大成本。一定要根据你的服务器,而不是你的家用电脑来测试和选择。</target>
        </trans-unit>
        <trans-unit id="b8934490debcafa8fa47af1b53fcd092dcbc16bd" translate="yes" xml:space="preserve">
          <source>Bcrypt.hash_secret</source>
          <target state="translated">Bcrypt.hash_secret</target>
        </trans-unit>
        <trans-unit id="618e8499a99a27b550edbcf73fed4e4ad0ed62cc" translate="yes" xml:space="preserve">
          <source>Bcrypt.new</source>
          <target state="translated">Bcrypt.new</target>
        </trans-unit>
        <trans-unit id="fb3b8e8c48892752f07c78c7bbd6de108a7ab1a2" translate="yes" xml:space="preserve">
          <source>Bcrypt::Password</source>
          <target state="translated">Bcrypt::Password</target>
        </trans-unit>
        <trans-unit id="82714737fa95b08d4c1e1415807d116fc2174375" translate="yes" xml:space="preserve">
          <source>Bcrypt::Password#==</source>
          <target state="translated">Bcrypt::Password#==</target>
        </trans-unit>
        <trans-unit id="33cc66f5b6a589ca7f8fd1a4fc09fa6b083bdc0d" translate="yes" xml:space="preserve">
          <source>Bcrypt::Password#cost</source>
          <target state="translated">Bcrypt::Password#cost</target>
        </trans-unit>
        <trans-unit id="4da11aeb87d85219aed0b791c5b4bd52a22469e8" translate="yes" xml:space="preserve">
          <source>Bcrypt::Password#digest</source>
          <target state="translated">Bcrypt::Password#digest</target>
        </trans-unit>
        <trans-unit id="987257fb4389fc6b90cde966bd0f232b8ea4cab4" translate="yes" xml:space="preserve">
          <source>Bcrypt::Password#inspect</source>
          <target state="translated">Bcrypt::Password#inspect</target>
        </trans-unit>
        <trans-unit id="69e23534b36b159277835ef7ada405ac9e82c75e" translate="yes" xml:space="preserve">
          <source>Bcrypt::Password#salt</source>
          <target state="translated">Bcrypt::Password#salt</target>
        </trans-unit>
        <trans-unit id="0ec4be09798f482b25786433624821e61f5dad13" translate="yes" xml:space="preserve">
          <source>Bcrypt::Password#to_s</source>
          <target state="translated">Bcrypt::Password#to_s</target>
        </trans-unit>
        <trans-unit id="41d1649028890056b4ccdd80ed7d9cd2966fa2de" translate="yes" xml:space="preserve">
          <source>Bcrypt::Password#verify</source>
          <target state="translated">Bcrypt::Password#verify</target>
        </trans-unit>
        <trans-unit id="23ef9f9e4d7237474c0a222d8dd15ac35cc87ae7" translate="yes" xml:space="preserve">
          <source>Bcrypt::Password#version</source>
          <target state="translated">Bcrypt::Password#version</target>
        </trans-unit>
        <trans-unit id="818191efa739be50ea22ff52392ba065b6e0b83c" translate="yes" xml:space="preserve">
          <source>Bcrypt::Password.create</source>
          <target state="translated">Bcrypt::Password.create</target>
        </trans-unit>
        <trans-unit id="83f404721ed17a170499ebdef05d6318d21fd1ba" translate="yes" xml:space="preserve">
          <source>Bcrypt::Password.new</source>
          <target state="translated">Bcrypt::Password.new</target>
        </trans-unit>
        <trans-unit id="bfc60b49c35f5c2d2a8a956c2545e88c6457b71e" translate="yes" xml:space="preserve">
          <source>Be able to call C code by writing bindings to it in Crystal.</source>
          <target state="translated">能够在Crystal中通过编写绑定来调用C代码。</target>
        </trans-unit>
        <trans-unit id="c78216f5e0514574ee7c370588648afd283f0b05" translate="yes" xml:space="preserve">
          <source>Be statically type-checked, but without having to specify the type of variables or method arguments.</source>
          <target state="translated">要进行静态类型检查,但不必指定变量或方法参数的类型。</target>
        </trans-unit>
        <trans-unit id="e8e676a0bb2e58e7193aea4ff8c83864d02ce4ad" translate="yes" xml:space="preserve">
          <source>Be statically type-checked, but without having to specify the type of variables or method parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a26f7843c5b3207ed40d2bb8ac289f19c238318" translate="yes" xml:space="preserve">
          <source>Be sure to replace all instances of &lt;code&gt;[your-github-name]&lt;/code&gt; in the Crystal-generated README template with your GitHub/GitLab username. If you're using GitLab, you'll also want to change all instances of &lt;code&gt;github&lt;/code&gt; with &lt;code&gt;gitlab&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08cd956c043cf088f588507538c30ab592b39880" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;&lt;a href=&quot;../value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; is a value type, this method returns &lt;code&gt;self&lt;/code&gt;, which already involves a shallow copy of this object because value types are passed by value.</source>
          <target state="translated">因为 &lt;code&gt;&lt;a href=&quot;../value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; 是一种值类型，所以此方法返回 &lt;code&gt;self&lt;/code&gt; ，因为值类型是通过值传递的，所以此方法已经涉及此对象的浅表副本。</target>
        </trans-unit>
        <trans-unit id="40b5d90db64ddca5fdd90378866d4fa5a36841a8" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;&lt;a href=&quot;value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; is a value type, this method returns &lt;code&gt;self&lt;/code&gt;, which already involves a shallow copy of this object because value types are passed by value.</source>
          <target state="translated">因为 &lt;code&gt;&lt;a href=&quot;value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; 是一种值类型，所以此方法返回 &lt;code&gt;self&lt;/code&gt; ，因为值类型是通过值传递的，所以此方法已经涉及此对象的浅表副本。</target>
        </trans-unit>
        <trans-unit id="81f3218c26bb4a76ff138b655f3f4e120981447b" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;pointerof&lt;/code&gt; involves pointers, it is considered &lt;a href=&quot;unsafe&quot;&gt;unsafe&lt;/a&gt;.</source>
          <target state="translated">由于 &lt;code&gt;pointerof&lt;/code&gt; 涉及指针，因此认为它是&lt;a href=&quot;unsafe&quot;&gt;不安全的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6fdb2f110109caeeb73b7940d32410813c2b510" translate="yes" xml:space="preserve">
          <source>Because a &lt;a href=&quot;c_bindings/fun&quot;&gt;lib function&lt;/a&gt; must have explicit types, the compiler can use the &lt;code&gt;out&lt;/code&gt; argument's type, which should be a pointer type, and use the dereferenced type as a guess.</source>
          <target state="translated">因为&lt;a href=&quot;c_bindings/fun&quot;&gt;lib函数&lt;/a&gt;必须具有显式类型，所以编译器可以使用 &lt;code&gt;out&lt;/code&gt; 参数的类型（应为指针类型），并使用解引用的类型作为猜测。</target>
        </trans-unit>
        <trans-unit id="04e424258d866cea3f4f84a83041934bd45ff52f" translate="yes" xml:space="preserve">
          <source>Because a &lt;a href=&quot;c_bindings/fun&quot;&gt;lib function&lt;/a&gt; must have explicit types, the compiler can use the return type when assigning it to an instance variable.</source>
          <target state="translated">因为&lt;a href=&quot;c_bindings/fun&quot;&gt;lib函数&lt;/a&gt;必须具有显式类型，所以编译器在将其分配给实例变量时可以使用返回类型。</target>
        </trans-unit>
        <trans-unit id="e04e9bc23f8fc762f424676f71d24bb5578e157a" translate="yes" xml:space="preserve">
          <source>Because a non-captured block is always inlined, the above method invocation is &lt;strong&gt;exactly the same&lt;/strong&gt; as writing this:</source>
          <target state="translated">由于总是捕获未捕获的块，因此上述方法调用&lt;strong&gt;与&lt;/strong&gt;编写此代码&lt;strong&gt;完全相同&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="2bc523746212c713c54dbf2f930f58b6494bf529" translate="yes" xml:space="preserve">
          <source>Because arguments (without a default value) after the splat method argument must be passed by name, two methods with different required named arguments overload:</source>
          <target state="translated">因为splat方法参数后面的参数(没有默认值)必须通过名字传递,所以两个不同要求的命名参数的方法会重载。</target>
        </trans-unit>
        <trans-unit id="aad76c021209d184f66249e56317940ef5c0b84f" translate="yes" xml:space="preserve">
          <source>Because at this moment there's only a single thread executing your code, accessing and modifying a class variable in different fibers will work just fine. However, once multiple threads (parallelism) is introduced in the language, it might break. That's why the recommended mechanism to communicate data is using channels and sending messages between them. Internally, a channel implements all the locking mechanisms to avoid data races, but from the outside you use them as communication primitives, so you (the user) don't have to use locks.</source>
          <target state="translated">因为目前只有一个线程在执行你的代码,所以在不同的纤维中访问和修改一个类变量就可以了。但是,一旦在语言中引入多线程(并行),就可能会崩溃。这就是为什么推荐的数据通信机制是使用通道并在它们之间发送消息。在内部,通道实现了所有的锁机制,以避免数据竞赛,但从外部来看,你把它们作为通信基元,所以你(用户)不必使用锁。</target>
        </trans-unit>
        <trans-unit id="f4ac9c288fe9812655b9f8954b09eb3833284a6d" translate="yes" xml:space="preserve">
          <source>Because iterators only go forward, when using methods that consume it entirely or partially &amp;ndash; &lt;code&gt;to_a&lt;/code&gt;, &lt;code&gt;any?&lt;/code&gt;, &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;none?&lt;/code&gt;, &lt;code&gt;one?&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; &amp;ndash; subsequent calls will give a different result as there will be less elements to consume.</source>
          <target state="translated">因为迭代器只能前进，使用时全部或部分地使用它的方法- &lt;code&gt;to_a&lt;/code&gt; ， &lt;code&gt;any?&lt;/code&gt; ， &lt;code&gt;count&lt;/code&gt; ， &lt;code&gt;none?&lt;/code&gt; ， &lt;code&gt;one?&lt;/code&gt; 和 &lt;code&gt;size&lt;/code&gt; -后续调用将产生不同的结果，因为将消耗更少的元素。</target>
        </trans-unit>
        <trans-unit id="92e91e9e9d74fe262adf41af525260ae42a338a8" translate="yes" xml:space="preserve">
          <source>Because parameters (without a default value) after the splat parameter must be passed by name, two methods with different required named parameters overload:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa002d25e89dd1cebdbdaf68bcafd51dc2b9092" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;if&lt;/code&gt; above (well, technically a ternary operator, but it's similar to an &lt;code&gt;if&lt;/code&gt;) has integer literals, &lt;code&gt;@age&lt;/code&gt; is successfully inferred to be &lt;code&gt;Int32&lt;/code&gt; without requiring a redundant type restriction.</source>
          <target state="translated">因为上面的 &lt;code&gt;if&lt;/code&gt; （从技术上讲，是一个三元运算符，但是它与 &lt;code&gt;if&lt;/code&gt; 相似）具有整数文字，因此 &lt;code&gt;@age&lt;/code&gt; 可成功推断为 &lt;code&gt;Int32&lt;/code&gt; ,而无需冗余类型限制。</target>
        </trans-unit>
        <trans-unit id="f2b24dfd152a09670a6f57d3973824a2736d1164" translate="yes" xml:space="preserve">
          <source>Before showing some examples, it&amp;rsquo;s worth mentioning &lt;a href=&quot;https://circleci.com/orbs/&quot;&gt;CircleCI orbs&lt;/a&gt;. As defined in the official docs:</source>
          <target state="translated">在显示一些示例之前，值得一提的是&lt;a href=&quot;https://circleci.com/orbs/&quot;&gt;CircleCI orbs&lt;/a&gt;。根据官方文档中的定义：</target>
        </trans-unit>
        <trans-unit id="7ebe6163e922a5e9bce5147d1c58f3b9d11bdea9" translate="yes" xml:space="preserve">
          <source>Before talking about control expressions we need to know what &lt;em&gt;truthy&lt;/em&gt; and &lt;em&gt;falsey&lt;/em&gt; values are.</source>
          <target state="translated">谈到控制表达式之前，我们需要知道什么&lt;em&gt;truthy&lt;/em&gt;和&lt;em&gt;falsey&lt;/em&gt;值。</target>
        </trans-unit>
        <trans-unit id="42be5304287d63674490b7c3b804842de63fc2f5" translate="yes" xml:space="preserve">
          <source>Begin by using &lt;a href=&quot;../using_the_compiler/index&quot;&gt;the Crystal compiler&lt;/a&gt;'s &lt;code&gt;init lib&lt;/code&gt; command to create a Crystal library with the standard directory structure.</source>
          <target state="translated">首先使用&lt;a href=&quot;../using_the_compiler/index&quot;&gt;Crystal编译器&lt;/a&gt;的 &lt;code&gt;init lib&lt;/code&gt; 命令创建具有标准目录结构的Crystal库。</target>
        </trans-unit>
        <trans-unit id="9ed99e75a9b04f273de29c9fef2bd3fb53d2e2de" translate="yes" xml:space="preserve">
          <source>Benchmark</source>
          <target state="translated">Benchmark</target>
        </trans-unit>
        <trans-unit id="a321fae7b018910d0189d321faf838b4fa6d8fac" translate="yes" xml:space="preserve">
          <source>Benchmark IPS calculates the number of iterations per second for a given block of code. The strategy is to use two stages: a warmup stage and a calculation stage.</source>
          <target state="translated">Benchmark IPS计算给定代码块每秒的迭代次数。其策略是使用两个阶段:热身阶段和计算阶段。</target>
        </trans-unit>
        <trans-unit id="8364d9a5c108b61b125f1a6dcb27cc5d8ef5886f" translate="yes" xml:space="preserve">
          <source>Benchmark#bm</source>
          <target state="translated">Benchmark#bm</target>
        </trans-unit>
        <trans-unit id="9a476bff203c1e45b59b4127b29616f47da023dd" translate="yes" xml:space="preserve">
          <source>Benchmark#ips</source>
          <target state="translated">Benchmark#ips</target>
        </trans-unit>
        <trans-unit id="07efec7d3b4fab53d630bb92e0853fd078987c4e" translate="yes" xml:space="preserve">
          <source>Benchmark::BM</source>
          <target state="translated">Benchmark::BM</target>
        </trans-unit>
        <trans-unit id="848a1049e213183aaf6c747234a2270bdb737275" translate="yes" xml:space="preserve">
          <source>Benchmark::BM::Job</source>
          <target state="translated">Benchmark::BM::Job</target>
        </trans-unit>
        <trans-unit id="218f487ca1e693b53de901b987fce59217a4f95a" translate="yes" xml:space="preserve">
          <source>Benchmark::BM::Tms</source>
          <target state="translated">Benchmark::BM::Tms</target>
        </trans-unit>
        <trans-unit id="eb79f3851dbd81594192efdf097da561769ae8c6" translate="yes" xml:space="preserve">
          <source>Benchmark::IPS</source>
          <target state="translated">Benchmark::IPS</target>
        </trans-unit>
        <trans-unit id="e34803b1805b294a600840aa3bff408ae2b4ad53" translate="yes" xml:space="preserve">
          <source>Benchmark::IPS::Entry</source>
          <target state="translated">Benchmark::IPS::Entry</target>
        </trans-unit>
        <trans-unit id="2c92977c90cbf9cebb6c4e16084c1e3c9c672228" translate="yes" xml:space="preserve">
          <source>Benchmark::IPS::Job</source>
          <target state="translated">Benchmark::IPS::Job</target>
        </trans-unit>
        <trans-unit id="8cbf01713b700bc330bea64a882af1f0da7490ef" translate="yes" xml:space="preserve">
          <source>Besides double-quotes strings, Crystal also supports string literals indicated by a percent sign (&lt;code&gt;%&lt;/code&gt;) and a pair of delimiters. Valid delimiters are parentheses &lt;code&gt;()&lt;/code&gt;, square brackets &lt;code&gt;[]&lt;/code&gt;, curly braces &lt;code&gt;{}&lt;/code&gt;, angles &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; and pipes &lt;code&gt;||&lt;/code&gt;. Except for the pipes, all delimiters can be nested meaning a start delimiter inside the string escapes the next end delimiter.</source>
          <target state="translated">除双引号字符串外，Crystal还支持以百分号（ &lt;code&gt;%&lt;/code&gt; ）和一对定界符表示的字符串文字。有效的分隔符是括号 &lt;code&gt;()&lt;/code&gt; ，方括号 &lt;code&gt;[]&lt;/code&gt; ，大括号 &lt;code&gt;{}&lt;/code&gt; ，尖括号 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 和竖线 &lt;code&gt;||&lt;/code&gt; 。。除管道外，所有定界符都可以嵌套，这意味着字符串中的起始定界符会逸出下一个结束定界符。</target>
        </trans-unit>
        <trans-unit id="ecaa8ecbaa06b622a1bf13768dd48ee20a156deb" translate="yes" xml:space="preserve">
          <source>Besides slash-delimited literals, regular expressions may also be expressed as a percent literal indicated by &lt;code&gt;%r&lt;/code&gt; and a pair of delimiters. Valid delimiters are parentheses &lt;code&gt;()&lt;/code&gt;, square brackets &lt;code&gt;[]&lt;/code&gt;, curly braces &lt;code&gt;{}&lt;/code&gt;, angles &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; and pipes &lt;code&gt;||&lt;/code&gt;. Except for the pipes, all delimiters can be nested; meaning a start delimiter inside the literal escapes the next end delimiter.</source>
          <target state="translated">除了以斜杠分隔的文字外，正则表达式也可以表示为 &lt;code&gt;%r&lt;/code&gt; 和一对定界符表示的百分比文字。有效的分隔符是括号 &lt;code&gt;()&lt;/code&gt; ，方括号 &lt;code&gt;[]&lt;/code&gt; ，大括号 &lt;code&gt;{}&lt;/code&gt; ，尖括号 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 和竖线 &lt;code&gt;||&lt;/code&gt; 。。除管道外，所有分隔符都可以嵌套；意思是字面量内的开始定界符转义下一个结束定界符。</target>
        </trans-unit>
        <trans-unit id="d904ebd65175b557d7a553ff09bf552643ce07ed" translate="yes" xml:space="preserve">
          <source>Besides the single string literal, there is also a percent literal to create an &lt;a href=&quot;https://crystal-lang.org/api/Array.html&quot;&gt;Array&lt;/a&gt; of strings. It is indicated by &lt;code&gt;%w&lt;/code&gt; and a pair of delimiters. Valid delimiters are as same as &lt;a href=&quot;#percent-string-literals&quot;&gt;percent string literals&lt;/a&gt;.</source>
          <target state="translated">除了单个字符串文字外，还有一个百分比文字来创建字符串&lt;a href=&quot;https://crystal-lang.org/api/Array.html&quot;&gt;数组&lt;/a&gt;。用 &lt;code&gt;%w&lt;/code&gt; 和一对定界符表示。有效的定界符与&lt;a href=&quot;#percent-string-literals&quot;&gt;百分比字符串文字&lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="ab1e0b5748b92516123bbc78f5976a2129271982" translate="yes" xml:space="preserve">
          <source>Besides the single symbol literal, there is also a percent literal to create an &lt;a href=&quot;https://crystal-lang.org/api/Array.html&quot;&gt;Array&lt;/a&gt; of symbols. It is indicated by &lt;code&gt;%i&lt;/code&gt; and a pair of delimiters. Valid delimiters are parentheses &lt;code&gt;()&lt;/code&gt;, square brackets &lt;code&gt;[]&lt;/code&gt;, curly braces &lt;code&gt;{}&lt;/code&gt;, angles &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; and pipes &lt;code&gt;||&lt;/code&gt;. Except for the pipes, all delimiters can be nested; meaning a start delimiter inside the string escapes the next end delimiter.</source>
          <target state="translated">除了单个符号文字，还有一个百分比文字可以创建符号&lt;a href=&quot;https://crystal-lang.org/api/Array.html&quot;&gt;数组&lt;/a&gt;。由 &lt;code&gt;%i&lt;/code&gt; 和一对定界符指示。有效的分隔符是括号 &lt;code&gt;()&lt;/code&gt; ，方括号 &lt;code&gt;[]&lt;/code&gt; ，大括号 &lt;code&gt;{}&lt;/code&gt; ，尖括号 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 和竖线 &lt;code&gt;||&lt;/code&gt; 。。除管道外，所有分隔符都可以嵌套；表示字符串中的开始定界符转义下一个结束定界符。</target>
        </trans-unit>
        <trans-unit id="3ab0be3f93d8d722278121e74cf7b35c0bf4473f" translate="yes" xml:space="preserve">
          <source>BigDecimal</source>
          <target state="translated">BigDecimal</target>
        </trans-unit>
        <trans-unit id="6aa15d7a5a3f72caa6de1eb6147b849df0ee1529" translate="yes" xml:space="preserve">
          <source>BigDecimal#*</source>
          <target state="translated">BigDecimal#*</target>
        </trans-unit>
        <trans-unit id="e088c01a9a4d359dda6d869713792182c1ce82ac" translate="yes" xml:space="preserve">
          <source>BigDecimal#**</source>
          <target state="translated">BigDecimal#**</target>
        </trans-unit>
        <trans-unit id="fc2afbd6280721e4fdf432d34e31d33bd74762f6" translate="yes" xml:space="preserve">
          <source>BigDecimal#+</source>
          <target state="translated">BigDecimal#+</target>
        </trans-unit>
        <trans-unit id="a3ea42f99e67cb878af84a2fe427262134f2fe48" translate="yes" xml:space="preserve">
          <source>BigDecimal#-</source>
          <target state="translated">BigDecimal#-</target>
        </trans-unit>
        <trans-unit id="19436b733f68543ea9ce9cdda14d7d82ce395238" translate="yes" xml:space="preserve">
          <source>BigDecimal#/</source>
          <target state="translated">BigDecimal#/</target>
        </trans-unit>
        <trans-unit id="4198b8846475985140031b6094919e3bbd67b88f" translate="yes" xml:space="preserve">
          <source>BigDecimal#==</source>
          <target state="translated">BigDecimal#==</target>
        </trans-unit>
        <trans-unit id="aaca63f77a35ed2925b5b00132007d8ba6624638" translate="yes" xml:space="preserve">
          <source>BigDecimal#ceil</source>
          <target state="translated">BigDecimal#ceil</target>
        </trans-unit>
        <trans-unit id="679748685b0a0da08d7f34f3c6276d355e988c53" translate="yes" xml:space="preserve">
          <source>BigDecimal#div</source>
          <target state="translated">BigDecimal#div</target>
        </trans-unit>
        <trans-unit id="b6d4d9614aa3366eb1755e0e9201bfef378c15a8" translate="yes" xml:space="preserve">
          <source>BigDecimal#hash</source>
          <target state="translated">BigDecimal#hash</target>
        </trans-unit>
        <trans-unit id="5756178e61ccc555b83afd3314a42bd4bf7d025c" translate="yes" xml:space="preserve">
          <source>BigDecimal#to_f</source>
          <target state="translated">BigDecimal#to_f</target>
        </trans-unit>
        <trans-unit id="66de9ba6a1c68e36a9605f92589970d29c8a4a79" translate="yes" xml:space="preserve">
          <source>BigDecimal#to_i</source>
          <target state="translated">BigDecimal#to_i</target>
        </trans-unit>
        <trans-unit id="537f53aae931225e4ca0948f4c913c01271a48a1" translate="yes" xml:space="preserve">
          <source>BigDecimal#to_s</source>
          <target state="translated">BigDecimal#to_s</target>
        </trans-unit>
        <trans-unit id="97686113969ba8c93ff542eb3ce99acf92bcd3cf" translate="yes" xml:space="preserve">
          <source>BigDecimal#to_u</source>
          <target state="translated">BigDecimal#to_u</target>
        </trans-unit>
        <trans-unit id="14b577dfd5b5cfe02eae9f5e1df21c2a9078df2a" translate="yes" xml:space="preserve">
          <source>BigDecimal.new</source>
          <target state="translated">BigDecimal.new</target>
        </trans-unit>
        <trans-unit id="7c2689d3a02fe5d98837abdadf145389a443a460" translate="yes" xml:space="preserve">
          <source>BigFloat</source>
          <target state="translated">BigFloat</target>
        </trans-unit>
        <trans-unit id="33cbe28f969091ad1f5a6d299dd9725e1ef472fe" translate="yes" xml:space="preserve">
          <source>BigFloat#*</source>
          <target state="translated">BigFloat#*</target>
        </trans-unit>
        <trans-unit id="9db61e69472e348434207877a76b0a96e15d90a7" translate="yes" xml:space="preserve">
          <source>BigFloat#**</source>
          <target state="translated">BigFloat#**</target>
        </trans-unit>
        <trans-unit id="0890908f9fc64814a4d6df3cd47828100c80d2ab" translate="yes" xml:space="preserve">
          <source>BigFloat#+</source>
          <target state="translated">BigFloat#+</target>
        </trans-unit>
        <trans-unit id="21bbc8aa89a8ed308647296c81c4886c3656822f" translate="yes" xml:space="preserve">
          <source>BigFloat#-</source>
          <target state="translated">BigFloat#-</target>
        </trans-unit>
        <trans-unit id="a17216103fc71d6036d2ebfa0904efdbf2965e98" translate="yes" xml:space="preserve">
          <source>BigFloat#/</source>
          <target state="translated">BigFloat#/</target>
        </trans-unit>
        <trans-unit id="e1bf95fe87b381bd14196173e277c385c03d0240" translate="yes" xml:space="preserve">
          <source>BigFloat#abs</source>
          <target state="translated">BigFloat#abs</target>
        </trans-unit>
        <trans-unit id="ed3ac0b26098c05b56313319f0dcd48233f8ee01" translate="yes" xml:space="preserve">
          <source>BigFloat#ceil</source>
          <target state="translated">BigFloat#ceil</target>
        </trans-unit>
        <trans-unit id="84446d9dcbb4a05b6150b71c9ba9c7980e981351" translate="yes" xml:space="preserve">
          <source>BigFloat#fdiv</source>
          <target state="translated">BigFloat#fdiv</target>
        </trans-unit>
        <trans-unit id="94c3fd31bb7fdc52ee3e4202aa4e19bcc0fa9107" translate="yes" xml:space="preserve">
          <source>BigFloat#hash</source>
          <target state="translated">BigFloat#hash</target>
        </trans-unit>
        <trans-unit id="66d93f8767b2e841803d4a49d8d3bf740706f0f9" translate="yes" xml:space="preserve">
          <source>BigFloat#to_f</source>
          <target state="translated">BigFloat#to_f</target>
        </trans-unit>
        <trans-unit id="97d7e210f29cc31d2bd2cece6eb5038277f4343d" translate="yes" xml:space="preserve">
          <source>BigFloat#to_i</source>
          <target state="translated">BigFloat#to_i</target>
        </trans-unit>
        <trans-unit id="df422aeb18ac3b5c62119fc498923efd374b4052" translate="yes" xml:space="preserve">
          <source>BigFloat#to_s</source>
          <target state="translated">BigFloat#to_s</target>
        </trans-unit>
        <trans-unit id="9a46a211f89cccc796695d73e962d01b9de90052" translate="yes" xml:space="preserve">
          <source>BigFloat#to_u</source>
          <target state="translated">BigFloat#to_u</target>
        </trans-unit>
        <trans-unit id="8e4b6919ce1fc0000e7df339830c0bb979d87dbe" translate="yes" xml:space="preserve">
          <source>BigFloat.new</source>
          <target state="translated">BigFloat.new</target>
        </trans-unit>
        <trans-unit id="948f70e8d9053f46439ba57d043632fa6e5a5de4" translate="yes" xml:space="preserve">
          <source>BigInt</source>
          <target state="translated">BigInt</target>
        </trans-unit>
        <trans-unit id="4997866855c2231441e044630bd6ad8f74bf3717" translate="yes" xml:space="preserve">
          <source>BigInt#%</source>
          <target state="translated">BigInt#%</target>
        </trans-unit>
        <trans-unit id="028c9dcc64e5bd9c38cb268c2a364ef668ccdf19" translate="yes" xml:space="preserve">
          <source>BigInt#*</source>
          <target state="translated">BigInt#*</target>
        </trans-unit>
        <trans-unit id="f8478d045fe0c71939c7c40770964fa56c03f64f" translate="yes" xml:space="preserve">
          <source>BigInt#**</source>
          <target state="translated">BigInt#**</target>
        </trans-unit>
        <trans-unit id="1c4ec8c349472044f1e44edaa98045f7541afc93" translate="yes" xml:space="preserve">
          <source>BigInt#+</source>
          <target state="translated">BigInt#+</target>
        </trans-unit>
        <trans-unit id="350dc006dfa4db75f715e63e956e56e6d96b5d24" translate="yes" xml:space="preserve">
          <source>BigInt#-</source>
          <target state="translated">BigInt#-</target>
        </trans-unit>
        <trans-unit id="7d30b9f477ed47e9cfc7cd91cc7b3544fceaa39b" translate="yes" xml:space="preserve">
          <source>BigInt#/</source>
          <target state="translated">BigInt#/</target>
        </trans-unit>
        <trans-unit id="3a821d346b370116a003897497d82ba0865de28a" translate="yes" xml:space="preserve">
          <source>BigInt#//</source>
          <target state="translated">BigInt#//</target>
        </trans-unit>
        <trans-unit id="7e3424d271fe4ab92420dc2926651df4713be9b7" translate="yes" xml:space="preserve">
          <source>BigInt#^</source>
          <target state="translated">BigInt#^</target>
        </trans-unit>
        <trans-unit id="c098edbeccced2aa88ee89185065c2f2c8f947b2" translate="yes" xml:space="preserve">
          <source>BigInt#abs</source>
          <target state="translated">BigInt#abs</target>
        </trans-unit>
        <trans-unit id="8f9c8fc43f45b4cfa03ff47a685ce1bf99b0fdf4" translate="yes" xml:space="preserve">
          <source>BigInt#gcd</source>
          <target state="translated">BigInt#gcd</target>
        </trans-unit>
        <trans-unit id="45e1b1d7eafaea3cac02f24506e8a351b5004184" translate="yes" xml:space="preserve">
          <source>BigInt#hash</source>
          <target state="translated">BigInt#hash</target>
        </trans-unit>
        <trans-unit id="149eefd5dfad37ac717b8475a871098d6a6ae5fc" translate="yes" xml:space="preserve">
          <source>BigInt#lcm</source>
          <target state="translated">BigInt#lcm</target>
        </trans-unit>
        <trans-unit id="3f8863cf1e4d1af82b8b3fb8cb187c322000c5aa" translate="yes" xml:space="preserve">
          <source>BigInt#tdiv</source>
          <target state="translated">BigInt#tdiv</target>
        </trans-unit>
        <trans-unit id="1d38da3f30ff58e76e4931e5d5a74af28d7363fb" translate="yes" xml:space="preserve">
          <source>BigInt#to_f</source>
          <target state="translated">BigInt#to_f</target>
        </trans-unit>
        <trans-unit id="9cca341fe8b94e44d8395c3482bb274f79cb71a1" translate="yes" xml:space="preserve">
          <source>BigInt#to_i</source>
          <target state="translated">BigInt#to_i</target>
        </trans-unit>
        <trans-unit id="f58902c6c9236fd65ade8cddce07a472dc67576a" translate="yes" xml:space="preserve">
          <source>BigInt#to_s</source>
          <target state="translated">BigInt#to_s</target>
        </trans-unit>
        <trans-unit id="ca631d1d3f4eee76de25426320ca690eb3d9b582" translate="yes" xml:space="preserve">
          <source>BigInt#to_u</source>
          <target state="translated">BigInt#to_u</target>
        </trans-unit>
        <trans-unit id="fbfcdbe2651ca5eb7c118d8e4c66887b5a7ad8a9" translate="yes" xml:space="preserve">
          <source>BigInt#|</source>
          <target state="translated">BigInt#|</target>
        </trans-unit>
        <trans-unit id="b1d2ce1c4f596b54c49ad49ad8f5078b9cd72ead" translate="yes" xml:space="preserve">
          <source>BigInt#~</source>
          <target state="translated">BigInt#~</target>
        </trans-unit>
        <trans-unit id="857982da0ae886ec694385257c63e06d42776df4" translate="yes" xml:space="preserve">
          <source>BigInt.new</source>
          <target state="translated">BigInt.new</target>
        </trans-unit>
        <trans-unit id="b9fa17bc2fa9726a9ea6089f9d1c1179dc4917e2" translate="yes" xml:space="preserve">
          <source>BigRational</source>
          <target state="translated">BigRational</target>
        </trans-unit>
        <trans-unit id="748e3248bbab90a16209aa31f511df332a9fa25f" translate="yes" xml:space="preserve">
          <source>BigRational#*</source>
          <target state="translated">BigRational#*</target>
        </trans-unit>
        <trans-unit id="6d2756928f401cf5f4c997aee3633cde2680beac" translate="yes" xml:space="preserve">
          <source>BigRational#**</source>
          <target state="translated">BigRational#**</target>
        </trans-unit>
        <trans-unit id="139f57bf88723ec53207ffd0c7bd75c02ff0cf6c" translate="yes" xml:space="preserve">
          <source>BigRational#+</source>
          <target state="translated">BigRational#+</target>
        </trans-unit>
        <trans-unit id="d2a9cc28eb367a948bd63165b4fae245e43b7ac9" translate="yes" xml:space="preserve">
          <source>BigRational#-</source>
          <target state="translated">BigRational#-</target>
        </trans-unit>
        <trans-unit id="f255a7623e9c79c8cedc2e288fb3fe77bb844942" translate="yes" xml:space="preserve">
          <source>BigRational#/</source>
          <target state="translated">BigRational#/</target>
        </trans-unit>
        <trans-unit id="6fcecd68f43b36b22cf8866b34b8ac16f1709225" translate="yes" xml:space="preserve">
          <source>BigRational#abs</source>
          <target state="translated">BigRational#abs</target>
        </trans-unit>
        <trans-unit id="23238c434e153438f500e8766f5d4533b1f5efd2" translate="yes" xml:space="preserve">
          <source>BigRational#ceil</source>
          <target state="translated">BigRational#ceil</target>
        </trans-unit>
        <trans-unit id="c80f27fbf901958881d583ca93bb8c371c1f1fa4" translate="yes" xml:space="preserve">
          <source>BigRational#hash</source>
          <target state="translated">BigRational#hash</target>
        </trans-unit>
        <trans-unit id="ff708f6d56dab0edb836f616754b6d9c9061ab4b" translate="yes" xml:space="preserve">
          <source>BigRational#inv</source>
          <target state="translated">BigRational#inv</target>
        </trans-unit>
        <trans-unit id="67167595ad36f1cce73afe7d8d21de6b9c3d3c7f" translate="yes" xml:space="preserve">
          <source>BigRational#to_f</source>
          <target state="translated">BigRational#to_f</target>
        </trans-unit>
        <trans-unit id="f3505700123e651fea2a5b9538bda6684eff715d" translate="yes" xml:space="preserve">
          <source>BigRational#to_s</source>
          <target state="translated">BigRational#to_s</target>
        </trans-unit>
        <trans-unit id="ec8acbbbeae70d840fe235642998f12c81ee0a16" translate="yes" xml:space="preserve">
          <source>BigRational.new</source>
          <target state="translated">BigRational.new</target>
        </trans-unit>
        <trans-unit id="66639f7d455dd71faa9147f5d69e5ce885d8bebd" translate="yes" xml:space="preserve">
          <source>Binary</source>
          <target state="translated">Binary</target>
        </trans-unit>
        <trans-unit id="ef9eb90573719bfacc4bc538bd5a6a79b94a4518" translate="yes" xml:space="preserve">
          <source>Binary AND</source>
          <target state="translated">二进制 AND</target>
        </trans-unit>
        <trans-unit id="81ddd419d9f25a1e7dfbdc093b307b5cad2f0e63" translate="yes" xml:space="preserve">
          <source>Binary OR/XOR</source>
          <target state="translated">二进制OR/XOR</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
