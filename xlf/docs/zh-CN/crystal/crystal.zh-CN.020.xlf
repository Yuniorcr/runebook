<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="crystal">
    <body>
      <group id="crystal">
        <trans-unit id="1f1fc201d67828ee118804a7a2df0b1190afecfc" translate="yes" xml:space="preserve">
          <source>UInt128#|</source>
          <target state="translated">UInt128#|</target>
        </trans-unit>
        <trans-unit id="70b4bb2684c3f8969e2fe9e14b470906fd4cf3c6" translate="yes" xml:space="preserve">
          <source>UInt16</source>
          <target state="translated">UInt16</target>
        </trans-unit>
        <trans-unit id="7464f9a3cf3367a2ca467618ead3df7f41f78b8c" translate="yes" xml:space="preserve">
          <source>UInt16#!=</source>
          <target state="translated">UInt16#!=</target>
        </trans-unit>
        <trans-unit id="88b7a696e677ae150be51c578bf85a311da9d698" translate="yes" xml:space="preserve">
          <source>UInt16#*</source>
          <target state="translated">UInt16#*</target>
        </trans-unit>
        <trans-unit id="eaee4409ccc86e61d7faae114d9fc6afe5190c41" translate="yes" xml:space="preserve">
          <source>UInt16#+</source>
          <target state="translated">UInt16#+</target>
        </trans-unit>
        <trans-unit id="3266ed174ea98f271b517744c2e3e00e10dcfb01" translate="yes" xml:space="preserve">
          <source>UInt16#-</source>
          <target state="translated">UInt16#-</target>
        </trans-unit>
        <trans-unit id="02e9057db1c859cea096e0f2cf4c791392ab61b8" translate="yes" xml:space="preserve">
          <source>UInt16#/</source>
          <target state="translated">UInt16#/</target>
        </trans-unit>
        <trans-unit id="dc270cfddbd80e3f7872be46aa919dfb27485cb8" translate="yes" xml:space="preserve">
          <source>UInt16#==</source>
          <target state="translated">UInt16#==</target>
        </trans-unit>
        <trans-unit id="01b3293eae532a0d76f3de44ad24a95da00d7347" translate="yes" xml:space="preserve">
          <source>UInt16#^</source>
          <target state="translated">UInt16#^</target>
        </trans-unit>
        <trans-unit id="3030e740d02dc41894ea06bd45f4b30c69b4c9fd" translate="yes" xml:space="preserve">
          <source>UInt16#|</source>
          <target state="translated">UInt16#|</target>
        </trans-unit>
        <trans-unit id="e71e7bc3fe9e9f3c39e46b53ffff0c83d9cc9a36" translate="yes" xml:space="preserve">
          <source>UInt32</source>
          <target state="translated">UInt32</target>
        </trans-unit>
        <trans-unit id="c5deecfd8684d9650f6f9e7bc785bd85cef67b84" translate="yes" xml:space="preserve">
          <source>UInt32#!=</source>
          <target state="translated">UInt32#!=</target>
        </trans-unit>
        <trans-unit id="a2ebaf5bca0e294891e02e5b87c60193db5e5a29" translate="yes" xml:space="preserve">
          <source>UInt32#*</source>
          <target state="translated">UInt32#*</target>
        </trans-unit>
        <trans-unit id="9d6cc1bbff58aab692c936696658e08f43fc908d" translate="yes" xml:space="preserve">
          <source>UInt32#+</source>
          <target state="translated">UInt32#+</target>
        </trans-unit>
        <trans-unit id="c7e119fc51c678e2e7ee7a027fab2ace1338be4a" translate="yes" xml:space="preserve">
          <source>UInt32#-</source>
          <target state="translated">UInt32#-</target>
        </trans-unit>
        <trans-unit id="b1d4f40221ec1aae06d944929c6245f4d16fcc3a" translate="yes" xml:space="preserve">
          <source>UInt32#/</source>
          <target state="translated">UInt32#/</target>
        </trans-unit>
        <trans-unit id="6300a6b03125623c9fc3d13fc920563df1dd2ec9" translate="yes" xml:space="preserve">
          <source>UInt32#==</source>
          <target state="translated">UInt32#==</target>
        </trans-unit>
        <trans-unit id="c4dbb56c05ce54d820854b6c568aafad2f4af0f4" translate="yes" xml:space="preserve">
          <source>UInt32#^</source>
          <target state="translated">UInt32#^</target>
        </trans-unit>
        <trans-unit id="0bc0d910444f9253b052ecd13c1890eac3a26bc3" translate="yes" xml:space="preserve">
          <source>UInt32#|</source>
          <target state="translated">UInt32#|</target>
        </trans-unit>
        <trans-unit id="69a99906f5a06ea1bdbfc02e6132d35de781d3f1" translate="yes" xml:space="preserve">
          <source>UInt64</source>
          <target state="translated">UInt64</target>
        </trans-unit>
        <trans-unit id="76385bbfbac2776677510a78b1648089bc742e74" translate="yes" xml:space="preserve">
          <source>UInt64#!=</source>
          <target state="translated">UInt64#!=</target>
        </trans-unit>
        <trans-unit id="6d31100e7b885275f05788519fb1921e41f0463e" translate="yes" xml:space="preserve">
          <source>UInt64#*</source>
          <target state="translated">UInt64#*</target>
        </trans-unit>
        <trans-unit id="8e5186367715df15576b679b3a47dacd0f2791e8" translate="yes" xml:space="preserve">
          <source>UInt64#+</source>
          <target state="translated">UInt64#+</target>
        </trans-unit>
        <trans-unit id="28593062edde44050aa8bf32efac3029788014b8" translate="yes" xml:space="preserve">
          <source>UInt64#-</source>
          <target state="translated">UInt64#-</target>
        </trans-unit>
        <trans-unit id="505bfee6f654b9e9587b2bc72b43cbd9f841f899" translate="yes" xml:space="preserve">
          <source>UInt64#/</source>
          <target state="translated">UInt64#/</target>
        </trans-unit>
        <trans-unit id="f9b934b87dd4cb073ac7e3e490b25d688398ac38" translate="yes" xml:space="preserve">
          <source>UInt64#==</source>
          <target state="translated">UInt64#==</target>
        </trans-unit>
        <trans-unit id="e2c411052ac24075d088e198fd7d5d2e5c4fc978" translate="yes" xml:space="preserve">
          <source>UInt64#^</source>
          <target state="translated">UInt64#^</target>
        </trans-unit>
        <trans-unit id="aa57215a4e79b090bc8127c4b8465ade5d2f3ac2" translate="yes" xml:space="preserve">
          <source>UInt64#|</source>
          <target state="translated">UInt64#|</target>
        </trans-unit>
        <trans-unit id="cf31903898d0642673b124c8602786b0ea8bf234" translate="yes" xml:space="preserve">
          <source>UInt8</source>
          <target state="translated">UInt8</target>
        </trans-unit>
        <trans-unit id="1fe52b7a7589c779faa390ea20ec628df4212011" translate="yes" xml:space="preserve">
          <source>UInt8#!=</source>
          <target state="translated">UInt8#!=</target>
        </trans-unit>
        <trans-unit id="b4d37ee5c19aec2e2f873454d362396cb8a8cd78" translate="yes" xml:space="preserve">
          <source>UInt8#*</source>
          <target state="translated">UInt8#*</target>
        </trans-unit>
        <trans-unit id="a8745dac8a71b0c18aa968e9837a0b7e4b217de0" translate="yes" xml:space="preserve">
          <source>UInt8#+</source>
          <target state="translated">UInt8#+</target>
        </trans-unit>
        <trans-unit id="5858392a6768c215a9beed3053f5887fa9977c4b" translate="yes" xml:space="preserve">
          <source>UInt8#-</source>
          <target state="translated">UInt8#-</target>
        </trans-unit>
        <trans-unit id="1543e3c2aa6de0cc39f308a5b504bee37cf403ef" translate="yes" xml:space="preserve">
          <source>UInt8#/</source>
          <target state="translated">UInt8#/</target>
        </trans-unit>
        <trans-unit id="90afb55cb08b5acb9e62f83be17db5d56d16909a" translate="yes" xml:space="preserve">
          <source>UInt8#==</source>
          <target state="translated">UInt8#==</target>
        </trans-unit>
        <trans-unit id="f6cb3d33890f96f32960d17d53dd0a7558ab2325" translate="yes" xml:space="preserve">
          <source>UInt8#^</source>
          <target state="translated">UInt8#^</target>
        </trans-unit>
        <trans-unit id="d29104e24b464874dfa312cd07a660a9ebe3be30" translate="yes" xml:space="preserve">
          <source>UInt8#abs</source>
          <target state="translated">UInt8#abs</target>
        </trans-unit>
        <trans-unit id="33fd8a7ca720a4d7401de6c9a97e28815867a1ac" translate="yes" xml:space="preserve">
          <source>UInt8#|</source>
          <target state="translated">UInt8#|</target>
        </trans-unit>
        <trans-unit id="bf01c58bde50794e84b61532daa82b49c3c1aa06" translate="yes" xml:space="preserve">
          <source>UInt8.new</source>
          <target state="translated">UInt8.new</target>
        </trans-unit>
        <trans-unit id="9f20bbbb2b7deaeb82a57d7bcc498ea20c3e1a5a" translate="yes" xml:space="preserve">
          <source>UNIX address representation.</source>
          <target state="translated">UNIX地址表示。</target>
        </trans-unit>
        <trans-unit id="3553b3d3b3a2386f6b4e54c8b3a864b5cf23309d" translate="yes" xml:space="preserve">
          <source>UNIXAddress</source>
          <target state="translated">UNIXAddress</target>
        </trans-unit>
        <trans-unit id="c14ab757ec1c9f0cfb0f6b9a84c21eabd1a3d4b3" translate="yes" xml:space="preserve">
          <source>UNIXAddress#==</source>
          <target state="translated">UNIXAddress#==</target>
        </trans-unit>
        <trans-unit id="b8a081a6c0b920b02d2fe745f09e84a6d825bce5" translate="yes" xml:space="preserve">
          <source>UNIXAddress#path</source>
          <target state="translated">UNIXAddress#path</target>
        </trans-unit>
        <trans-unit id="3ff7cc184efd6a14bc584c030d28cc14c8f76e19" translate="yes" xml:space="preserve">
          <source>UNIXAddress#to_s</source>
          <target state="translated">UNIXAddress#to_s</target>
        </trans-unit>
        <trans-unit id="9434370b42f9f176bf4d0dcb0c3a7efa40f73f21" translate="yes" xml:space="preserve">
          <source>UNIXAddress#to_unsafe</source>
          <target state="translated">UNIXAddress#to_unsafe</target>
        </trans-unit>
        <trans-unit id="bfc034672f1b6b98fd5a5e7e73cb90bc73269046" translate="yes" xml:space="preserve">
          <source>UNIXAddress.from</source>
          <target state="translated">UNIXAddress.from</target>
        </trans-unit>
        <trans-unit id="4ea9e51ce8439ab643a123f84d4fd025eb5c86a7" translate="yes" xml:space="preserve">
          <source>UNIXAddress.new</source>
          <target state="translated">UNIXAddress.new</target>
        </trans-unit>
        <trans-unit id="51e808725ca49dc956368bdf060f5b61ed21f1ab" translate="yes" xml:space="preserve">
          <source>UNIXAddress.parse</source>
          <target state="translated">UNIXAddress.parse</target>
        </trans-unit>
        <trans-unit id="da2c7b6da0de3b107c73279b08ff0b4db8127a0b" translate="yes" xml:space="preserve">
          <source>UNIXServer</source>
          <target state="translated">UNIXServer</target>
        </trans-unit>
        <trans-unit id="4ca01d88a801cac5ad6ea93f221de9778a8ab12b" translate="yes" xml:space="preserve">
          <source>UNIXServer.new</source>
          <target state="translated">UNIXServer.new</target>
        </trans-unit>
        <trans-unit id="0ecbaf7638370fbba84f6f1a26202df7ce7670b8" translate="yes" xml:space="preserve">
          <source>UNIXServer.open</source>
          <target state="translated">UNIXServer.open</target>
        </trans-unit>
        <trans-unit id="1f67d7929f1e87e01f133849eb5c863f94e89c6e" translate="yes" xml:space="preserve">
          <source>UNIXSocket</source>
          <target state="translated">UNIXSocket</target>
        </trans-unit>
        <trans-unit id="d81a07717e0ae0b359a505e47d3ab59e6ee8531e" translate="yes" xml:space="preserve">
          <source>UNIXSocket#path</source>
          <target state="translated">UNIXSocket#path</target>
        </trans-unit>
        <trans-unit id="a282e411344bc5b1b4b49530025ce36b0acdc19e" translate="yes" xml:space="preserve">
          <source>UNIXSocket.new</source>
          <target state="translated">UNIXSocket.new</target>
        </trans-unit>
        <trans-unit id="6ab3fc02b6d95bd42a4ae4afb90b02b3587640bc" translate="yes" xml:space="preserve">
          <source>UNIXSocket.open</source>
          <target state="translated">UNIXSocket.open</target>
        </trans-unit>
        <trans-unit id="0760861552d4c03e3284acfefa6b37c9b9716cb1" translate="yes" xml:space="preserve">
          <source>UNIXSocket.pair</source>
          <target state="translated">UNIXSocket.pair</target>
        </trans-unit>
        <trans-unit id="cb371c93c5aa0e62198efd303ae2c17474416d1a" translate="yes" xml:space="preserve">
          <source>URI</source>
          <target state="translated">URI</target>
        </trans-unit>
        <trans-unit id="7f3559b21e51b2e5303f7ac571c6a6aca2dc8095" translate="yes" xml:space="preserve">
          <source>URI#==</source>
          <target state="translated">URI#==</target>
        </trans-unit>
        <trans-unit id="f10eaabca3d6588bfadca06615625295c1e4c9e1" translate="yes" xml:space="preserve">
          <source>URI#hash</source>
          <target state="translated">URI#hash</target>
        </trans-unit>
        <trans-unit id="41f5a7e3ffddbaecb17169cd91d1b27c2557b53c" translate="yes" xml:space="preserve">
          <source>URI#host</source>
          <target state="translated">URI#host</target>
        </trans-unit>
        <trans-unit id="df3746bda92af99ae6142d5826661527cd3e4c4c" translate="yes" xml:space="preserve">
          <source>URI#path</source>
          <target state="translated">URI#path</target>
        </trans-unit>
        <trans-unit id="9472d1ae26f283b8ae7f81ae04fedc393871a121" translate="yes" xml:space="preserve">
          <source>URI#port</source>
          <target state="translated">URI#port</target>
        </trans-unit>
        <trans-unit id="3e16517599367a8aa1912e8ee0e524c91da71427" translate="yes" xml:space="preserve">
          <source>URI#to_s</source>
          <target state="translated">URI#to_s</target>
        </trans-unit>
        <trans-unit id="e3a947e0e83b74ce0731bf52e261a299248e6852" translate="yes" xml:space="preserve">
          <source>URI#user</source>
          <target state="translated">URI#user</target>
        </trans-unit>
        <trans-unit id="8e63c0a93c353417ce8f2c29e3d776c3080fecf9" translate="yes" xml:space="preserve">
          <source>URI.new</source>
          <target state="translated">URI.new</target>
        </trans-unit>
        <trans-unit id="b3d917e0846c14449766ccf009d492898a625484" translate="yes" xml:space="preserve">
          <source>URI::Error</source>
          <target state="translated">URI::Error</target>
        </trans-unit>
        <trans-unit id="9ced0ec8d1a9aef2147053b598f6d364a5db8f41" translate="yes" xml:space="preserve">
          <source>URI::Punycode</source>
          <target state="translated">URI::Punycode</target>
        </trans-unit>
        <trans-unit id="45be10951674a3123971f36b8b830d97fe857c8f" translate="yes" xml:space="preserve">
          <source>URL Encoding</source>
          <target state="translated">URL编码</target>
        </trans-unit>
        <trans-unit id="85bbdf5186e7ac90f98a65f56c6e5d72ba3e59e7" translate="yes" xml:space="preserve">
          <source>URL-decodes &lt;em&gt;string&lt;/em&gt; and writes the result to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">URL解码&lt;em&gt;字符串&lt;/em&gt;并将结果写入&lt;em&gt;io&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2aae4b0a8666571530d8b64fed0596d933c272b6" translate="yes" xml:space="preserve">
          <source>URL-decodes &lt;em&gt;string&lt;/em&gt; as &lt;a href=&quot;https://url.spec.whatwg.org/#urlencoded-serializing&quot;&gt;&lt;code&gt;x-www-form-urlencoded&lt;/code&gt;&lt;/a&gt; and writes the result to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">URL将&lt;em&gt;字符串&lt;/em&gt;解码为&lt;a href=&quot;https://url.spec.whatwg.org/#urlencoded-serializing&quot;&gt; &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; &lt;/a&gt;并将结果写入&lt;em&gt;io&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="cbac0c254f530d1536e5d9c7badc0d228eb0e77f" translate="yes" xml:space="preserve">
          <source>URL-decodes &lt;em&gt;string&lt;/em&gt; as &lt;a href=&quot;https://url.spec.whatwg.org/#urlencoded-serializing&quot;&gt;&lt;code&gt;x-www-form-urlencoded&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">URL将&lt;em&gt;字符串&lt;/em&gt;解码为&lt;a href=&quot;https://url.spec.whatwg.org/#urlencoded-serializing&quot;&gt; &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c8dc3d6db6d002b06031b7b463893cb146305abb" translate="yes" xml:space="preserve">
          <source>URL-decodes &lt;em&gt;string&lt;/em&gt;.</source>
          <target state="translated">URL解码&lt;em&gt;字符串&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="22a1945f3dc89a195cda7803ab4830822c268a48" translate="yes" xml:space="preserve">
          <source>URL-decodes a string and writes the result to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">URL解码一个字符串并将结果写入&lt;em&gt;io&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b0fa88deb79e899bb4e00fcb3e2d919136b3db16" translate="yes" xml:space="preserve">
          <source>URL-encodes &lt;em&gt;string&lt;/em&gt; and writes the result to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">URL编码&lt;em&gt;字符串&lt;/em&gt;并将结果写入&lt;em&gt;io&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2fa97e49c23f3bf2d14ace84a095b1d39f758574" translate="yes" xml:space="preserve">
          <source>URL-encodes &lt;em&gt;string&lt;/em&gt; and writes the result to an &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">URL编码&lt;em&gt;字符串&lt;/em&gt;，并将结果写入 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d43c32d350e78968140f62decd9a8406e6078ca9" translate="yes" xml:space="preserve">
          <source>URL-encodes &lt;em&gt;string&lt;/em&gt; as &lt;a href=&quot;https://url.spec.whatwg.org/#urlencoded-serializing&quot;&gt;&lt;code&gt;x-www-form-urlencoded&lt;/code&gt;&lt;/a&gt; and writes the result to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">URL将&lt;em&gt;字符串&lt;/em&gt;编码为&lt;a href=&quot;https://url.spec.whatwg.org/#urlencoded-serializing&quot;&gt; &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; &lt;/a&gt;并将结果写入&lt;em&gt;io&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1f96b98641d4bd820e6d4022430fa28bbba3e35b" translate="yes" xml:space="preserve">
          <source>URL-encodes &lt;em&gt;string&lt;/em&gt; as &lt;a href=&quot;https://url.spec.whatwg.org/#urlencoded-serializing&quot;&gt;&lt;code&gt;x-www-form-urlencoded&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">URL将&lt;em&gt;字符串&lt;/em&gt;编码为&lt;a href=&quot;https://url.spec.whatwg.org/#urlencoded-serializing&quot;&gt; &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b9054c84476a16156b8ca337626254e108980bf" translate="yes" xml:space="preserve">
          <source>URL-encodes &lt;em&gt;string&lt;/em&gt;.</source>
          <target state="translated">URL编码&lt;em&gt;string&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="22a03a207c191fca4dc8c4297fac22c137514db6" translate="yes" xml:space="preserve">
          <source>URL-safe variant of &lt;code&gt;&lt;a href=&quot;random#base64(n:Int=16):String-instance-method&quot;&gt;#base64&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;random#base64(n:Int=16):String-instance-method&quot;&gt;#base64&lt;/a&gt;&lt;/code&gt; 的网址安全变体。</target>
        </trans-unit>
        <trans-unit id="21bf75a5255af008f6315cb6aca4bb3bdccee521" translate="yes" xml:space="preserve">
          <source>UUID</source>
          <target state="translated">UUID</target>
        </trans-unit>
        <trans-unit id="23df7970466bd0437a7b1fa9effbcf17ffbd516f" translate="yes" xml:space="preserve">
          <source>UUID#==</source>
          <target state="translated">UUID#==</target>
        </trans-unit>
        <trans-unit id="a20a00f0127785f8e03da11fecccf07d06c4dec5" translate="yes" xml:space="preserve">
          <source>UUID#to_s</source>
          <target state="translated">UUID#to_s</target>
        </trans-unit>
        <trans-unit id="cb771de13ed76df201900d689a7b5d53f0e31a31" translate="yes" xml:space="preserve">
          <source>UUID#urn</source>
          <target state="translated">UUID#urn</target>
        </trans-unit>
        <trans-unit id="e766352a8efa206af345c82b9a9bc54449b06fe0" translate="yes" xml:space="preserve">
          <source>UUID#v1!</source>
          <target state="translated">UUID#v1!</target>
        </trans-unit>
        <trans-unit id="007158b7b7ca6732cafe5e74e0ea2cc4ec35163d" translate="yes" xml:space="preserve">
          <source>UUID#v1?</source>
          <target state="translated">UUID#v1?</target>
        </trans-unit>
        <trans-unit id="eeb3a5d9c7452deb1e644e185b31ea0900bdaf6c" translate="yes" xml:space="preserve">
          <source>UUID#v2!</source>
          <target state="translated">UUID#v2!</target>
        </trans-unit>
        <trans-unit id="fc74a066d2e25db85ca95d390751e08f36bf6df4" translate="yes" xml:space="preserve">
          <source>UUID#v2?</source>
          <target state="translated">UUID#v2?</target>
        </trans-unit>
        <trans-unit id="dc262c3c01fda6a80918be19723d8b929b2d17df" translate="yes" xml:space="preserve">
          <source>UUID#v3!</source>
          <target state="translated">UUID#v3!</target>
        </trans-unit>
        <trans-unit id="5ce2fe59d844a6344e53d7817ee99b070c9b964d" translate="yes" xml:space="preserve">
          <source>UUID#v3?</source>
          <target state="translated">UUID#v3?</target>
        </trans-unit>
        <trans-unit id="bb831ea4603c83bf3f793784702cba595162f664" translate="yes" xml:space="preserve">
          <source>UUID#v4!</source>
          <target state="translated">UUID#v4!</target>
        </trans-unit>
        <trans-unit id="0ec31e2651864560071a47844393e0b80cbf7d8c" translate="yes" xml:space="preserve">
          <source>UUID#v4?</source>
          <target state="translated">UUID#v4?</target>
        </trans-unit>
        <trans-unit id="994068e9ec2ac8ab36e3a191d3d5356d416e0f43" translate="yes" xml:space="preserve">
          <source>UUID#v5!</source>
          <target state="translated">UUID#v5!</target>
        </trans-unit>
        <trans-unit id="a42801f7cceddc82ea62f748739236d06ea20f08" translate="yes" xml:space="preserve">
          <source>UUID#v5?</source>
          <target state="translated">UUID#v5?</target>
        </trans-unit>
        <trans-unit id="b269ce44f83e4a60eef032d09e7befe068fede56" translate="yes" xml:space="preserve">
          <source>UUID.new</source>
          <target state="translated">UUID.new</target>
        </trans-unit>
        <trans-unit id="53f2ec77ef3a77806001d83d8f3fff939fb87803" translate="yes" xml:space="preserve">
          <source>UUID::Error</source>
          <target state="translated">UUID::Error</target>
        </trans-unit>
        <trans-unit id="ca09f5dbf89ea3eafb5ab27f217efe0b06a097c4" translate="yes" xml:space="preserve">
          <source>Unary operators</source>
          <target state="translated">单利运算符</target>
        </trans-unit>
        <trans-unit id="1de5f2b7ae5117888cf5beac0df6ad92e6ec655e" translate="yes" xml:space="preserve">
          <source>Unboxes a &lt;code&gt;Void*&lt;/code&gt; into an object of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;Void*&lt;/code&gt; 到类型 &lt;code&gt;T&lt;/code&gt; 的对象中。</target>
        </trans-unit>
        <trans-unit id="d173d1547b61a8e6acc7af983318b98eebbd6d57" translate="yes" xml:space="preserve">
          <source>Unboxes a &lt;code&gt;Void*&lt;/code&gt; into an object of type &lt;code&gt;T&lt;/code&gt;. Note that for this you must specify T: &lt;code&gt;&lt;a href=&quot;box&quot;&gt;Box&lt;/a&gt;(T)&lt;a href=&quot;box#unbox(pointer:Pointer(Void)):T-class-method&quot;&gt;.unbox(data)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;Void*&lt;/code&gt; 到类型 &lt;code&gt;T&lt;/code&gt; 的对象中。请注意，为此，您必须指定T： &lt;code&gt;&lt;a href=&quot;box&quot;&gt;Box&lt;/a&gt;(T)&lt;a href=&quot;box#unbox(pointer:Pointer(Void)):T-class-method&quot;&gt;.unbox(data)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5b80ab03a9adb0b785fa65bc37a745a2b903f9e" translate="yes" xml:space="preserve">
          <source>Underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;s might have a different status.</source>
          <target state="translated">底层 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 可能具有不同的状态。</target>
        </trans-unit>
        <trans-unit id="ca035a5ce4c3df59c37ddda21e0189a6380e3b1f" translate="yes" xml:space="preserve">
          <source>Underscore</source>
          <target state="translated">Underscore</target>
        </trans-unit>
        <trans-unit id="83919d7d04e16d2bb31f76cd70fd65ec3b7eec9b" translate="yes" xml:space="preserve">
          <source>Underscore allowed</source>
          <target state="translated">允许下划线</target>
        </trans-unit>
        <trans-unit id="bae6ebc3e4f7c306642bd3750721ff2db0319313" translate="yes" xml:space="preserve">
          <source>Underscores are allowed at the beginning of a variable name, but these names are reserved for the compiler, so their use is not recommended (and it also makes the code uglier to read).</source>
          <target state="translated">变量名称的开头允许使用下划线,但这些名称是为编译器保留的,所以不推荐使用(而且还会使代码更难读)。</target>
        </trans-unit>
        <trans-unit id="e995413cdff7b2090165321fb9b962169614e6a4" translate="yes" xml:space="preserve">
          <source>Underscores can be used to make some numbers more readable:</source>
          <target state="translated">下划线可以用来使一些数字更易读。</target>
        </trans-unit>
        <trans-unit id="9ab0bd9a6126ee4b9d7538d5c6cba7aa587f31ed" translate="yes" xml:space="preserve">
          <source>Unicode</source>
          <target state="translated">Unicode</target>
        </trans-unit>
        <trans-unit id="281339b28244a6d0c549fb74e445824dfdbf95bd" translate="yes" xml:space="preserve">
          <source>Unicode case folding, which is more far-reaching than Unicode case mapping.</source>
          <target state="translated">Unicode大小写折叠,比Unicode大小写映射影响更深远。</target>
        </trans-unit>
        <trans-unit id="ab8dd58536ca90398d101cf76abe3cf1e251e514" translate="yes" xml:space="preserve">
          <source>Uninitialized variable declaration</source>
          <target state="translated">未初始化的变量声明</target>
        </trans-unit>
        <trans-unit id="72d1bc1786787b9f5cf6f8701a1fb442f4f59285" translate="yes" xml:space="preserve">
          <source>Union</source>
          <target state="translated">Union</target>
        </trans-unit>
        <trans-unit id="ad2c6ec9387b88fa473c66c469cbe4de08ffd0e6" translate="yes" xml:space="preserve">
          <source>Union is special in that it is a generic type but instantiating it might not return a union type:</source>
          <target state="translated">Union的特殊之处在于它是一个通用类型,但实例化它可能不会返回一个union类型。</target>
        </trans-unit>
        <trans-unit id="e96e24dd00d7582c0ef230636057fa8235546ff9" translate="yes" xml:space="preserve">
          <source>Union of classes and structs under the same hierarchy</source>
          <target state="translated">同一层次结构下的类和结构的联合。</target>
        </trans-unit>
        <trans-unit id="88a7c1ba78c10939e036e65772bf7989733a2553" translate="yes" xml:space="preserve">
          <source>Union of named tuples with the same keys</source>
          <target state="translated">具有相同键的命名元组的联合</target>
        </trans-unit>
        <trans-unit id="68ed82c77e42d2275f353f68a974cc29356f1daa" translate="yes" xml:space="preserve">
          <source>Union of tuples of the same size</source>
          <target state="translated">相同大小的元组的联合</target>
        </trans-unit>
        <trans-unit id="2697f04d1c34bc0fd003a5d4f2f248be3c9842cb" translate="yes" xml:space="preserve">
          <source>Union types</source>
          <target state="translated">联盟类型</target>
        </trans-unit>
        <trans-unit id="ebff087632b16b8ff77cadf6107842b88e58cdf4" translate="yes" xml:space="preserve">
          <source>Union types rules</source>
          <target state="translated">联盟类型规则</target>
        </trans-unit>
        <trans-unit id="15d2c7da9b5addef7c793564ef91a99402f8bdac" translate="yes" xml:space="preserve">
          <source>Union(*T)</source>
          <target state="translated">Union(*T)</target>
        </trans-unit>
        <trans-unit id="8ac81596ab6fc68af3a4dcd3d930f23b6c8bf464" translate="yes" xml:space="preserve">
          <source>Union.</source>
          <target state="translated">Union.</target>
        </trans-unit>
        <trans-unit id="48bb3cc4cfa2bbd6c10b5224a15215e9bc43d151" translate="yes" xml:space="preserve">
          <source>Union. Returns a &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; that matches any of &lt;em&gt;patterns&lt;/em&gt;.</source>
          <target state="translated">联盟。返回与任何&lt;em&gt;模式&lt;/em&gt;匹配的正则 &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd93fcbad3884b9ed616d68c85261d532cfccd2e" translate="yes" xml:space="preserve">
          <source>Union. Returns a &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; that matches either of the operands.</source>
          <target state="translated">联盟。返回与两个操作数均匹配的正则 &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d9a78f6c868ff07a420bf6eb1f4e5d142760bee" translate="yes" xml:space="preserve">
          <source>Union.new</source>
          <target state="translated">Union.new</target>
        </trans-unit>
        <trans-unit id="b514e15c5e81517a2222da09d70ec8061916a429" translate="yes" xml:space="preserve">
          <source>Union: returns a new set containing all unique elements from both sets.</source>
          <target state="translated">Union:返回一个新的集合,包含两个集合中的所有唯一元素。</target>
        </trans-unit>
        <trans-unit id="a37a7b8f6cef680785b13588a8ab8234991c28f2" translate="yes" xml:space="preserve">
          <source>Unix socket &lt;code&gt;&lt;a href=&quot;server#bind_unix(path:String):Socket::UNIXAddress-instance-method&quot;&gt;#bind_unix&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Unix套接字 &lt;code&gt;&lt;a href=&quot;server#bind_unix(path:String):Socket::UNIXAddress-instance-method&quot;&gt;#bind_unix&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="afd6634a3d36e753b03e5469af0d052e14e165d5" translate="yes" xml:space="preserve">
          <source>Unknown (i.e. custom, your own).</source>
          <target state="translated">未知(即定制、自己的)。</target>
        </trans-unit>
        <trans-unit id="67e6e03c7dc0872d1b172a2f6397b9688cbbc755" translate="yes" xml:space="preserve">
          <source>Unknown version.</source>
          <target state="translated">未知版本。</target>
        </trans-unit>
        <trans-unit id="146aca99c91362499d18f472e19350623e3ec249" translate="yes" xml:space="preserve">
          <source>Unless &lt;em&gt;follow_symlinks&lt;/em&gt; is set to &lt;code&gt;true&lt;/code&gt;, then the owner symlink itself will be changed, otherwise the owner of the symlink destination file will be changed. For example, assuming symlinks as &lt;code&gt;foo -&amp;gt; bar -&amp;gt; baz&lt;/code&gt;:</source>
          <target state="translated">除非&lt;em&gt;follow_symlinks&lt;/em&gt;设置为 &lt;code&gt;true&lt;/code&gt; ，否则将更改所有者符号链接本身，否则将更改符号链接目标文件的所有者。例如，假设符号链接为 &lt;code&gt;foo -&amp;gt; bar -&amp;gt; baz&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="30e133577a0b680dedb286394551a52748a0a22b" translate="yes" xml:space="preserve">
          <source>Unless specified, the resuling binary will have the same name as the source file minus the extension &lt;code&gt;.cr&lt;/code&gt;.</source>
          <target state="translated">除非指定，否则重新压缩的二进制文件将具有与源文件相同的名称，减去扩展名 &lt;code&gt;.cr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61781da554926f44d767b9f2041feee5e05d9e78" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;&lt;a href=&quot;time#in(location:Location):Time-instance-method&quot;&gt;#in&lt;/a&gt;&lt;/code&gt;, which always preserves the same instant in time, &lt;code&gt;&lt;a href=&quot;time#to_local_in(location:Location)-instance-method&quot;&gt;#to_local_in&lt;/a&gt;&lt;/code&gt; adjusts the instant such that it results in the same local date-time representation. Both instants are apart from each other by the difference in zone offsets.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;time#in(location:Location):Time-instance-method&quot;&gt;#in&lt;/a&gt;&lt;/code&gt; 始终保留相同的时间点不同， &lt;code&gt;&lt;a href=&quot;time#to_local_in(location:Location)-instance-method&quot;&gt;#to_local_in&lt;/a&gt;&lt;/code&gt; 调整该时间点，使其产生相同的本地日期时间表示。两个时刻彼此之间因区域偏移量的差异而分开。</target>
        </trans-unit>
        <trans-unit id="df0588773525370fba8665cd28e3cede67b892d6" translate="yes" xml:space="preserve">
          <source>Unlike C, &lt;code&gt;Int32&lt;/code&gt; and &lt;code&gt;MyInt&lt;/code&gt; are not interchangeable:</source>
          <target state="translated">与C不同， &lt;code&gt;Int32&lt;/code&gt; 和 &lt;code&gt;MyInt&lt;/code&gt; 不可互换：</target>
        </trans-unit>
        <trans-unit id="0a5507cce93f0081ee0d19bafa3aba2e0e1cbe60" translate="yes" xml:space="preserve">
          <source>Unpacking block arguments</source>
          <target state="translated">解压块参数</target>
        </trans-unit>
        <trans-unit id="0d0d4fd9f47ed4c60cd8063002bf739a89b1ece9" translate="yes" xml:space="preserve">
          <source>Unreserved characters are ASCII letters, ASCII digits, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt; and &lt;code&gt;~&lt;/code&gt;.</source>
          <target state="translated">未保留的字符是ASCII字母，ASCII数字， &lt;code&gt;_&lt;/code&gt; ， &lt;code&gt;.&lt;/code&gt; ， &lt;code&gt;-&lt;/code&gt; 和 &lt;code&gt;~&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6448aef3b898478feae6070ba042dd3153108155" translate="yes" xml:space="preserve">
          <source>Unsafe code</source>
          <target state="translated">不安全代码</target>
        </trans-unit>
        <trans-unit id="4790aa4aa8e73a702fe1f85cd34db97e90a21de8" translate="yes" xml:space="preserve">
          <source>Unsafe wrapper around a &lt;code&gt;&lt;a href=&quot;../pointer&quot;&gt;Pointer&lt;/a&gt;&lt;/code&gt; that allows to write values to it while advancing the location and keeping track of how many elements were written.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../pointer&quot;&gt;Pointer&lt;/a&gt;&lt;/code&gt; 周围的不安全包装，它会在前进位置并跟踪已写入的元素的同时向其写入值。</target>
        </trans-unit>
        <trans-unit id="ef70d4a0b45c14713113af9e3743e4d49b4e9a21" translate="yes" xml:space="preserve">
          <source>Unsafely reinterprets the bytes of an object as being of another &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">不安全地将对象的字节重新解释为其他 &lt;code&gt;type&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e91344ea16120944c87d0e0635826ca2b1e1956c" translate="yes" xml:space="preserve">
          <source>Unsigned</source>
          <target state="translated">Unsigned</target>
        </trans-unit>
        <trans-unit id="a6f47e00e036c5589eb12e237894b37fb015d365" translate="yes" xml:space="preserve">
          <source>Upgrade</source>
          <target state="translated">Upgrade</target>
        </trans-unit>
        <trans-unit id="e33eb471470fc844ac1b7296556865e5cfb26674" translate="yes" xml:space="preserve">
          <source>Upgrades this response, writing headers and yieling the connection &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; (a socket) to the given block.</source>
          <target state="translated">升级此响应，写入标头，然后将连接 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; （套接字）添加到给定的块。</target>
        </trans-unit>
        <trans-unit id="ac9bb235f444f766f563324c50fb6a822d795e7f" translate="yes" xml:space="preserve">
          <source>Upgrades this response, writing headers and yieling the connection &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; (a socket) to the given block. The block must invoke &lt;code&gt;&lt;a href=&quot;response#close-instance-method&quot;&gt;#close&lt;/a&gt;&lt;/code&gt; afterwards, the server won't do it in this case. This is useful to implement protocol upgrades, such as websockets.</source>
          <target state="translated">升级此响应，写入标头，然后将连接 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; （套接字）添加到给定的块。该块必须随后调用 &lt;code&gt;&lt;a href=&quot;response#close-instance-method&quot;&gt;#close&lt;/a&gt;&lt;/code&gt; ，在这种情况下服务器不会执行该操作。这对于实现协议升级（例如websocket）很有用。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="342c659777997bec12f413246e5e24d6a8317e2a" translate="yes" xml:space="preserve">
          <source>Usage Example</source>
          <target state="translated">使用实例</target>
        </trans-unit>
        <trans-unit id="fec43ce445f974147bd0eb223a50147e7fb7202d" translate="yes" xml:space="preserve">
          <source>Usage example:</source>
          <target state="translated">用例。</target>
        </trans-unit>
        <trans-unit id="d6b31ffefa15017554abaae7ae48f75d07bddc79" translate="yes" xml:space="preserve">
          <source>Usage for casting to a bigger type</source>
          <target state="translated">铸成大字的用法</target>
        </trans-unit>
        <trans-unit id="a594436c1b6f14dd1853e99e1dda75abfd108065" translate="yes" xml:space="preserve">
          <source>Usage for when the compiler can't infer the type of a block</source>
          <target state="translated">当编译器无法推断块的类型时使用。</target>
        </trans-unit>
        <trans-unit id="fa6aab9b79e7f6a3cad2ad6e1c5c045d2df7e961" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;coding_style&quot;&gt;standard coding style&lt;/a&gt; so your project will be navigable and readable to others.</source>
          <target state="translated">使用&lt;a href=&quot;coding_style&quot;&gt;标准的编码样式，&lt;/a&gt;这样您的项目就可以被他人浏览和阅读。</target>
        </trans-unit>
        <trans-unit id="aee33e9155544e28e2f91c721691ca70718bcc0e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;:nodoc:&lt;/code&gt; to hide public declarations from the generated documentation. Private and protected methods are always hidden.</source>
          <target state="translated">使用 &lt;code&gt;:nodoc:&lt;/code&gt; 从生成的文档中隐藏公共声明。私有和受保护的方法总是隐藏的。</target>
        </trans-unit>
        <trans-unit id="cfc797cb2e95c1786e994415f78fe8fe12dba4e3" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;accesstoken#authenticate(request:HTTP::Request,tls)-instance-method&quot;&gt;#authenticate&lt;/a&gt;&lt;/code&gt; to authenticate an &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;accesstoken#authenticate(request:HTTP::Request,tls)-instance-method&quot;&gt;#authenticate&lt;/a&gt;&lt;/code&gt; 验证 &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9344b67cd18d1ec433b806c69c5fb5307f69a56" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;array#clone-instance-method&quot;&gt;#clone&lt;/a&gt;&lt;/code&gt; if you want a deep copy.</source>
          <target state="translated">如果要深层复制，请使用 &lt;code&gt;&lt;a href=&quot;array#clone-instance-method&quot;&gt;#clone&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c1550826895624df5269db62f12804e5067342f" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;array#dup-instance-method&quot;&gt;#dup&lt;/a&gt;&lt;/code&gt; if you want a shallow copy.</source>
          <target state="translated">如果要浅拷贝，请使用 &lt;code&gt;&lt;a href=&quot;array#dup-instance-method&quot;&gt;#dup&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd368a3c65645c2af92baab1ee2cf2df6be2b1fe" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;deque#dup-instance-method&quot;&gt;#dup&lt;/a&gt;&lt;/code&gt; if you want a shallow copy.</source>
          <target state="translated">如果要浅拷贝，请使用 &lt;code&gt;&lt;a href=&quot;deque#dup-instance-method&quot;&gt;#dup&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a68b8ca8058cf46c189c5cab6da254e0b285134d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;json#build(io:IO,indent=nil,&amp;amp;block)-class-method&quot;&gt;JSON.build&lt;/a&gt;&lt;/code&gt;, which uses &lt;code&gt;&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;&lt;/code&gt;, to generate JSON by emitting scalars, arrays and objects:</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;json#build(io:IO,indent=nil,&amp;amp;block)-class-method&quot;&gt;JSON.build&lt;/a&gt;&lt;/code&gt; （它使用 &lt;code&gt;&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;&lt;/code&gt; 通过发出标量，数组和对象来生成JSON：</target>
        </trans-unit>
        <trans-unit id="062b57e8c151131bf8fc9dd9ba658b52203b5038" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt; to define how an object is mapped to JSON, making it the recommended easy, type-safe and efficient option for parsing and generating JSON. Refer to that module's documentation to learn about it.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt; 定义如何将对象映射到JSON，从而使其成为用于分析和生成JSON的推荐的简单，类型安全且高效的选项。请参阅该模块的文档以了解有关信息。</target>
        </trans-unit>
        <trans-unit id="2ba7b110fd82b770658a226c3930aaf08466e691" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;time#to_rfc3339-instance-method&quot;&gt;#to_rfc3339&lt;/a&gt;&lt;/code&gt; to format a &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; according to .</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;time#to_rfc3339-instance-method&quot;&gt;#to_rfc3339&lt;/a&gt;&lt;/code&gt; 根据格式化 &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c1201f6c47f4a48dbbba02fddc0c0264cf045cb9" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;xml#build(version:String?=nil,encoding:String?=nil,indent=nil,quote_char=nil,&amp;amp;block)-class-method&quot;&gt;XML.build&lt;/a&gt;&lt;/code&gt;, which uses an &lt;code&gt;&lt;a href=&quot;xml/builder&quot;&gt;XML::Builder&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;xml#build(version:String?=nil,encoding:String?=nil,indent=nil,quote_char=nil,&amp;amp;block)-class-method&quot;&gt;XML.build&lt;/a&gt;&lt;/code&gt; ，它使用 &lt;code&gt;&lt;a href=&quot;xml/builder&quot;&gt;XML::Builder&lt;/a&gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a2a28a5dc0dc7d426eb071cb75d7472c74bb6aed" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;zip/writer&quot;&gt;Zip::Writer&lt;/a&gt;&lt;/code&gt;, which writes zip entries sequentially to any &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;zip/writer&quot;&gt;Zip::Writer&lt;/a&gt;&lt;/code&gt; ，它将zip条目顺序写入任何 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="736b7d21e1a6cc849f4b2e56911386ce90ac4b68" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;bin/crystal&lt;/code&gt; to run your crystal files.</source>
          <target state="translated">使用 &lt;code&gt;bin/crystal&lt;/code&gt; 运行您的Crystal文件。</target>
        </trans-unit>
        <trans-unit id="901fe3779a48d18af45a26eb800cb6504cd26b6a" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;ditto&lt;/code&gt; to use the same comment as in the previous declaration.</source>
          <target state="translated">使用 &lt;code&gt;ditto&lt;/code&gt; 可以使用与先前声明相同的注释。</target>
        </trans-unit>
        <trans-unit id="bcda62d6362fbb4b5098ce4a9dc3fc5ae25c4152" translate="yes" xml:space="preserve">
          <source>Use &lt;strong&gt;two spaces&lt;/strong&gt; to indent code inside namespaces, methods, blocks or other nested contexts. For example:</source>
          <target state="translated">使用&lt;strong&gt;两个空格&lt;/strong&gt;来缩进名称空间，方法，块或其他嵌套上下文中的代码。例如：</target>
        </trans-unit>
        <trans-unit id="b13bf11b2f6364ced7900c2133a1f378d91f03a6" translate="yes" xml:space="preserve">
          <source>Use Crystal's code formatter</source>
          <target state="translated">使用Crystal的代码格式器</target>
        </trans-unit>
        <trans-unit id="94f590ce6e14a2752544158bda68bf23f9bcf9f5" translate="yes" xml:space="preserve">
          <source>Use Turkic case rules:</source>
          <target state="translated">使用突厥语的大小写规则。</target>
        </trans-unit>
        <trans-unit id="7a2e3d9d33e39aae9360e8d5512b726786d7e69c" translate="yes" xml:space="preserve">
          <source>Use a tuple. If you use &lt;code&gt;{&quot;crystal&quot;, &quot;ruby&quot;, &quot;java&quot;}&lt;/code&gt; in the above program it will work the same way, but since a tuple doesn't involve heap memory it will be faster, consume less memory, and give more chances for the compiler to optimize the program.</source>
          <target state="translated">使用元组。如果在上面的程序中使用 &lt;code&gt;{&quot;crystal&quot;, &quot;ruby&quot;, &quot;java&quot;}&lt;/code&gt; ，它将以相同的方式工作，但是由于tuple不涉及堆内存，它将更快，消耗更少的内存并提供更多的机会供编译器优化程序。</target>
        </trans-unit>
        <trans-unit id="95ab9bc070a0d32b7fd1e84e35e5092ec538fdc4" translate="yes" xml:space="preserve">
          <source>Use string interpolation instead of concatenation</source>
          <target state="translated">使用字符串插值而不是连接。</target>
        </trans-unit>
        <trans-unit id="90d42857ab86572dcf0d421a8998222796a57cf0" translate="yes" xml:space="preserve">
          <source>Use structs when possible</source>
          <target state="translated">尽可能使用结构</target>
        </trans-unit>
        <trans-unit id="ec9047636a4052fa7b6ceaf74d56cb4108d46227" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&lt;a href=&quot;entry#io:IO-instance-method&quot;&gt;#io&lt;/a&gt;&lt;/code&gt; method to read from it.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;entry#io:IO-instance-method&quot;&gt;#io&lt;/a&gt;&lt;/code&gt; 方法进行读取。</target>
        </trans-unit>
        <trans-unit id="dbe7e6b1201ab9ec04c12735a845304b6d7559b2" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&lt;a href=&quot;entry#open(&amp;amp;block)-instance-method&quot;&gt;#open&lt;/a&gt;&lt;/code&gt; method to read from it.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;entry#open(&amp;amp;block)-instance-method&quot;&gt;#open&lt;/a&gt;&lt;/code&gt; 方法进行读取。</target>
        </trans-unit>
        <trans-unit id="2cdc38daa2c39b1cca4cfd186cbc493675f51de3" translate="yes" xml:space="preserve">
          <source>Use the IO of the parent process.</source>
          <target state="translated">使用父进程的IO。</target>
        </trans-unit>
        <trans-unit id="c532df89dff23be55f6291da160d64d4fb8404d0" translate="yes" xml:space="preserve">
          <source>Use the SAX1 interface internally</source>
          <target state="translated">内部使用SAX1接口</target>
        </trans-unit>
        <trans-unit id="b6fc8b1666e97f066b076a5f9260e6a08fe11451" translate="yes" xml:space="preserve">
          <source>Use the third person: &lt;code&gt;Returns the number of horns this unicorn has&lt;/code&gt; instead of &lt;code&gt;Return the number of horns this unicorn has&lt;/code&gt;.</source>
          <target state="translated">使用第三人称： &lt;code&gt;Returns the number of horns this unicorn has&lt;/code&gt; 而不是 &lt;code&gt;Return the number of horns this unicorn has&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="042db7bf50c7773d7d471f8bdda05b087a6a8311" translate="yes" xml:space="preserve">
          <source>Use this method to release resources allocated by external libraries that are not directly managed by Crystal garbage collector.</source>
          <target state="translated">使用此方法释放不由Crystal垃圾收集器直接管理的外部库分配的资源。</target>
        </trans-unit>
        <trans-unit id="59649ad0677a0da9688ee80c2b56bb46f164597c" translate="yes" xml:space="preserve">
          <source>Use this setter to provide a custom formatter. The &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt; will invoke it with the following arguments:</source>
          <target state="translated">使用此设置器提供自定义格式器。该 &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt; 将会以以下的参数来调用它：</target>
        </trans-unit>
        <trans-unit id="4650bdbf37b4eff5f86f55ccd3c3ef42c67642f0" translate="yes" xml:space="preserve">
          <source>Use this tool to unify code styles and to submit documentation improvements to Crystal itself.</source>
          <target state="translated">使用这个工具来统一代码样式,并向Crystal本身提交文档改进。</target>
        </trans-unit>
        <trans-unit id="dd5d304d23232f892e43f148ee02f64c01733d36" translate="yes" xml:space="preserve">
          <source>User CPU time</source>
          <target state="translated">用户CPU时间</target>
        </trans-unit>
        <trans-unit id="ef50ee923f3e65cbc931270d94f8f0d5672f9897" translate="yes" xml:space="preserve">
          <source>User CPU time of children</source>
          <target state="translated">子女的用户CPU时间</target>
        </trans-unit>
        <trans-unit id="04fd67b62dd92fbe1383d36dd5ac2eb73dad8b79" translate="yes" xml:space="preserve">
          <source>User#==</source>
          <target state="translated">User#==</target>
        </trans-unit>
        <trans-unit id="4d47675622ad24100dbe30618f0c8a00a1856976" translate="yes" xml:space="preserve">
          <source>User#group_id</source>
          <target state="translated">User#group_id</target>
        </trans-unit>
        <trans-unit id="25ee08ef5e1c87c87500230053e8dd681aefe8bf" translate="yes" xml:space="preserve">
          <source>User#hash</source>
          <target state="translated">User#hash</target>
        </trans-unit>
        <trans-unit id="5f616482728b8672951f29fb0710f808175bbec0" translate="yes" xml:space="preserve">
          <source>User#home_directory</source>
          <target state="translated">User#home_directory</target>
        </trans-unit>
        <trans-unit id="5fb647e92030d15c1341ee6f3c021ea8ff1cd415" translate="yes" xml:space="preserve">
          <source>User#id</source>
          <target state="translated">User#id</target>
        </trans-unit>
        <trans-unit id="f189fddc43401cc333bf1791b69b9ee4e1c4eb95" translate="yes" xml:space="preserve">
          <source>User#name</source>
          <target state="translated">User#name</target>
        </trans-unit>
        <trans-unit id="681f9274e907a8fc12e61e58f6c5d500ee78696d" translate="yes" xml:space="preserve">
          <source>User#shell</source>
          <target state="translated">User#shell</target>
        </trans-unit>
        <trans-unit id="d623d5934f47373890c4e3f41907907180dca06f" translate="yes" xml:space="preserve">
          <source>User#to_s</source>
          <target state="translated">User#to_s</target>
        </trans-unit>
        <trans-unit id="962c4f358985518a89362f5e98e7a7c257237a8d" translate="yes" xml:space="preserve">
          <source>User#username</source>
          <target state="translated">User#username</target>
        </trans-unit>
        <trans-unit id="387dc3601c20ac2c21772c6a50fb5126a16d6893" translate="yes" xml:space="preserve">
          <source>User.find_by</source>
          <target state="translated">User.find_by</target>
        </trans-unit>
        <trans-unit id="eaaa805614eba9fdabd4883ab6c9340ec0902589" translate="yes" xml:space="preserve">
          <source>User.find_by?</source>
          <target state="translated">User.find_by?</target>
        </trans-unit>
        <trans-unit id="a5680a266e5f966389b0a9376dcc619b53a9c6de" translate="yes" xml:space="preserve">
          <source>Users can be retrieved by either username or their user ID:</source>
          <target state="translated">用户可以通过用户名或其用户ID进行检索。</target>
        </trans-unit>
        <trans-unit id="461d3a4bdbf00a29756f9df770b98aed5839d756" translate="yes" xml:space="preserve">
          <source>Users can define their own annotations using the &lt;code&gt;annotation&lt;/code&gt; keyword, which works similarly to defining a &lt;code&gt;class&lt;/code&gt; or &lt;code&gt;struct&lt;/code&gt;.</source>
          <target state="translated">用户可以使用 &lt;code&gt;annotation&lt;/code&gt; 关键字定义自己的注释，该关键字的作用类似于定义 &lt;code&gt;class&lt;/code&gt; 或 &lt;code&gt;struct&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7f7eff0769ab459964f4c6eedcf1fde41224839a" translate="yes" xml:space="preserve">
          <source>Uses &lt;code&gt;&lt;a href=&quot;time/format/http_date&quot;&gt;Time::Format::HTTP_DATE&lt;/a&gt;&lt;/code&gt; as formatter.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;time/format/http_date&quot;&gt;Time::Format::HTTP_DATE&lt;/a&gt;&lt;/code&gt; 作为格式化程序。</target>
        </trans-unit>
        <trans-unit id="4e34432db2330f9c19723c854fdd1be30f0e28c5" translate="yes" xml:space="preserve">
          <source>Uses &lt;code&gt;&lt;a href=&quot;time/format/http_date&quot;&gt;Time::Format::HTTP_DATE&lt;/a&gt;&lt;/code&gt; as parser.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;time/format/http_date&quot;&gt;Time::Format::HTTP_DATE&lt;/a&gt;&lt;/code&gt; 作为解析器。</target>
        </trans-unit>
        <trans-unit id="1bdfb47219332ece87f955440e73abb1a0dee9ec" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;%x&lt;/code&gt; in the above example, we declare a variable whose name is guaranteed not to conflict with local variables in the current scope.</source>
          <target state="translated">在上面的示例中使用 &lt;code&gt;%x&lt;/code&gt; ，我们声明一个变量，其名称保证不会与当前范围内的局部变量冲突。</target>
        </trans-unit>
        <trans-unit id="eb0e52fd637eb7172c5d7e51090534b6ccb7bf6b" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;&lt;a href=&quot;time#utc:Time-class-method&quot;&gt;.utc&lt;/a&gt;&lt;/code&gt;, the location is &lt;code&gt;&lt;a href=&quot;time/location#UTC&quot;&gt;Time::Location::UTC&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;time#utc:Time-class-method&quot;&gt;.utc&lt;/a&gt;&lt;/code&gt; ，位置为 &lt;code&gt;&lt;a href=&quot;time/location#UTC&quot;&gt;Time::Location::UTC&lt;/a&gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b24b9f242342b5146cbccbf153f287f18f948fff" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;Void&lt;/code&gt; is the same, but &lt;code&gt;Nil&lt;/code&gt; is more idiomatic: &lt;code&gt;Void&lt;/code&gt; is preferred in C bindings.</source>
          <target state="translated">使用 &lt;code&gt;Void&lt;/code&gt; 是相同的，但 &lt;code&gt;Nil&lt;/code&gt; 更惯用：C绑定中首选 &lt;code&gt;Void&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c0c5b189ef34d754d5048bfcfa9d4862f4491a5" translate="yes" xml:space="preserve">
          <source>Using a dash inside &lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt; either eliminates previous indentation or removes the next newline:</source>
          <target state="translated">在 &lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt; 中使用破折号可以消除以前的缩进或除去下一个换行符：</target>
        </trans-unit>
        <trans-unit id="7e4bec1ce59f54bd2d1ec52aa68d3105dedcd5f8" translate="yes" xml:space="preserve">
          <source>Using logical statements:</source>
          <target state="translated">使用逻辑语句。</target>
        </trans-unit>
        <trans-unit id="67917562fb8e736888fd962b0a6163999f52a330" translate="yes" xml:space="preserve">
          <source>Using loops:</source>
          <target state="translated">使用循环。</target>
        </trans-unit>
        <trans-unit id="4d26eb83133a393dfd81986722bff8e459b7ee16" translate="yes" xml:space="preserve">
          <source>Using the compiler</source>
          <target state="translated">使用编译器</target>
        </trans-unit>
        <trans-unit id="65442bd37030b175d31500634304e30cfdceb109" translate="yes" xml:space="preserve">
          <source>Using the shorter syntax to assign an instance variable from a method argument has the same effect:</source>
          <target state="translated">使用较短的语法从方法参数中分配一个实例变量也有同样的效果。</target>
        </trans-unit>
        <trans-unit id="25b2b7223c23dc52736440949be196dde2e7e99f" translate="yes" xml:space="preserve">
          <source>Using these two, we can compile a program in a Mac that will run on that Linux like this:</source>
          <target state="translated">利用这两个,我们可以在Mac中编译一个程序,像这样在该Linux上运行。</target>
        </trans-unit>
        <trans-unit id="2d707c11c0ca83853ad15d39f6c1e1072d83679b" translate="yes" xml:space="preserve">
          <source>Using tuples is the preferred way.</source>
          <target state="translated">使用元组是首选方式。</target>
        </trans-unit>
        <trans-unit id="16834c07cbdfb70cd532f7a1974fba74895d3ff4" translate="yes" xml:space="preserve">
          <source>Using, for example, &lt;code&gt;Int32&lt;/code&gt; as a type restriction makes the method only accept instances of &lt;code&gt;Int32&lt;/code&gt;:</source>
          <target state="translated">例如，使用 &lt;code&gt;Int32&lt;/code&gt; 作为类型限制，使该方法仅接受 &lt;code&gt;Int32&lt;/code&gt; 的实例：</target>
        </trans-unit>
        <trans-unit id="1432fd526ae46a4b43fa7de2d09e879ce6f7179e" translate="yes" xml:space="preserve">
          <source>Usually the macro &lt;code&gt;&lt;a href=&quot;object#def_hash(*fields)-macro&quot;&gt;def_hash&lt;/a&gt;&lt;/code&gt; can be used to generate this method. Otherwise, invoke &lt;code&gt;&lt;a href=&quot;object#hash(hasher)-instance-method&quot;&gt;#hash(hasher)&lt;/a&gt;&lt;/code&gt; on each object's instance variables to accumulate the result:</source>
          <target state="translated">通常，宏 &lt;code&gt;&lt;a href=&quot;object#def_hash(*fields)-macro&quot;&gt;def_hash&lt;/a&gt;&lt;/code&gt; 可用于生成此方法。否则，对每个对象的实例变量调用 &lt;code&gt;&lt;a href=&quot;object#hash(hasher)-instance-method&quot;&gt;#hash(hasher)&lt;/a&gt;&lt;/code&gt; 以累积结果：</target>
        </trans-unit>
        <trans-unit id="7fe083fed839e632edf8b8f84c7b5b4d75427522" translate="yes" xml:space="preserve">
          <source>Usually the macro &lt;code&gt;def_hash&lt;/code&gt; can be used to generate this method. Otherwise, invoke &lt;code&gt;&lt;a href=&quot;bigdecimal#hash(hasher)-instance-method&quot;&gt;#hash(hasher)&lt;/a&gt;&lt;/code&gt; on each object's instance variables to accumulate the result:</source>
          <target state="translated">通常，宏 &lt;code&gt;def_hash&lt;/code&gt; 可用于生成此方法。否则，对每个对象的实例变量调用 &lt;code&gt;&lt;a href=&quot;bigdecimal#hash(hasher)-instance-method&quot;&gt;#hash(hasher)&lt;/a&gt;&lt;/code&gt; 以累积结果：</target>
        </trans-unit>
        <trans-unit id="9816e661a3c38913f6c4bd57a715fad6894999c7" translate="yes" xml:space="preserve">
          <source>Utilize Crystal's &lt;a href=&quot;../conventions/documenting_code&quot;&gt;built-in code formatter&lt;/a&gt; to automatically format all &lt;code&gt;.cr&lt;/code&gt; files in a directory.</source>
          <target state="translated">利用Crystal的&lt;a href=&quot;../conventions/documenting_code&quot;&gt;内置代码格式化程序&lt;/a&gt;自动格式化目录中的所有 &lt;code&gt;.cr&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="2a62ae9e6e10d5b4d844ad431e3d12dd6181892a" translate="yes" xml:space="preserve">
          <source>VaList</source>
          <target state="translated">VaList</target>
        </trans-unit>
        <trans-unit id="56f5da3e7dca217bd1f012edfa5e787d678e30b1" translate="yes" xml:space="preserve">
          <source>VaList.open</source>
          <target state="translated">VaList.open</target>
        </trans-unit>
        <trans-unit id="5ab09e7092d476c63953866007807a7b3d21c4e2" translate="yes" xml:space="preserve">
          <source>Valid range for &lt;em&gt;seconds&lt;/em&gt; is &lt;code&gt;0..315_537_897_599&lt;/code&gt;. For &lt;em&gt;nanoseconds&lt;/em&gt; it is &lt;code&gt;0..999_999_999&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;秒的&lt;/em&gt;有效范围是 &lt;code&gt;0..315_537_897_599&lt;/code&gt; 。对于&lt;em&gt;纳秒，&lt;/em&gt;它是 &lt;code&gt;0..999_999_999&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0ae7b81ca8c60d136b7d54cbca761d942b6ad47" translate="yes" xml:space="preserve">
          <source>Valid value ranges for the individual fields:</source>
          <target state="translated">各字段的有效值范围。</target>
        </trans-unit>
        <trans-unit id="2543dd3846f7d98ae455475c434d47dba0a277e8" translate="yes" xml:space="preserve">
          <source>Validate with the DTD</source>
          <target state="translated">用DTD验证</target>
        </trans-unit>
        <trans-unit id="eb75fed9d0b8507635356bf213941d5bedf7751c" translate="yes" xml:space="preserve">
          <source>Validates an expectation and fails the example if it does not match.</source>
          <target state="translated">验证一个期望值,如果它不匹配,则失败的例子。</target>
        </trans-unit>
        <trans-unit id="49e0803c9d46f472b92e16b3db0440f2742958cc" translate="yes" xml:space="preserve">
          <source>Validates an expectation and fails the example if it matches.</source>
          <target state="translated">验证一个期望值,如果它匹配,则失败的例子。</target>
        </trans-unit>
        <trans-unit id="8dce170de238b1feda2ecd9674ea3ca0d068fbcb" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">Value</target>
        </trans-unit>
        <trans-unit id="51127d011c590cc06c1287343706272a08f0dc2d" translate="yes" xml:space="preserve">
          <source>Value too large to be stored in data type</source>
          <target state="translated">值太大,无法存储在数据类型中</target>
        </trans-unit>
        <trans-unit id="3b503226549f3c35a9bfd3914ffd46e29cd5c45d" translate="yes" xml:space="preserve">
          <source>Value#==</source>
          <target state="translated">Value#==</target>
        </trans-unit>
        <trans-unit id="67de86c918c08183d07a42faa39ecd62090a4896" translate="yes" xml:space="preserve">
          <source>Value#dup</source>
          <target state="translated">Value#dup</target>
        </trans-unit>
        <trans-unit id="b31085c44e67d411598800723b960d52db36a9e3" translate="yes" xml:space="preserve">
          <source>Value#to_value</source>
          <target state="translated">Value#to_value</target>
        </trans-unit>
        <trans-unit id="fab5f9ff4f9615d94351b560809a6a573c20b2a1" translate="yes" xml:space="preserve">
          <source>Value.null</source>
          <target state="translated">Value.null</target>
        </trans-unit>
        <trans-unit id="6bd27c866147957d82d418c9ca5a3b4e1e98ab8f" translate="yes" xml:space="preserve">
          <source>Value::Kind</source>
          <target state="translated">Value::Kind</target>
        </trans-unit>
        <trans-unit id="07c23e85a4fbcd625c3cbae813c00759c98ee40d" translate="yes" xml:space="preserve">
          <source>Value::Kind#argument?</source>
          <target state="translated">Value::Kind#argument?</target>
        </trans-unit>
        <trans-unit id="18584d61e5eb9e44495cf23a5814481775d5922f" translate="yes" xml:space="preserve">
          <source>Value::Kind#basic_block?</source>
          <target state="translated">Value::Kind#basic_block?</target>
        </trans-unit>
        <trans-unit id="a4175ed479870aba2d600b66eb85f574b1547eb5" translate="yes" xml:space="preserve">
          <source>Value::Kind#block_address?</source>
          <target state="translated">Value::Kind#block_address?</target>
        </trans-unit>
        <trans-unit id="78ada0e26b95fe03f428bf48c0e4182bfa0ab90f" translate="yes" xml:space="preserve">
          <source>Value::Kind#constant_aggregate_zero?</source>
          <target state="translated">Value::Kind#constant_aggregate_zero?</target>
        </trans-unit>
        <trans-unit id="7dc6d1b21c7160f6527e42fd102b1d2f8d71d79b" translate="yes" xml:space="preserve">
          <source>Value::Kind#constant_array?</source>
          <target state="translated">Value::Kind#constant_array?</target>
        </trans-unit>
        <trans-unit id="2d9a71fed9f99ce13b8089458b2fdaa25381000f" translate="yes" xml:space="preserve">
          <source>Value::Kind#constant_data_array?</source>
          <target state="translated">Value::Kind#constant_data_array?</target>
        </trans-unit>
        <trans-unit id="384628768b88c2dc5a4b65e8a74484f1d414c646" translate="yes" xml:space="preserve">
          <source>Value::Kind#constant_data_vector?</source>
          <target state="translated">Value::Kind#constant_data_vector?</target>
        </trans-unit>
        <trans-unit id="4225e8fa1512c2dc7a948c0eae3105ee56dbeaef" translate="yes" xml:space="preserve">
          <source>Value::Kind#constant_expr?</source>
          <target state="translated">Value::Kind#constant_expr?</target>
        </trans-unit>
        <trans-unit id="6a926b1e4681900b2e55318e51094f1a4dcda62f" translate="yes" xml:space="preserve">
          <source>Value::Kind#constant_fp?</source>
          <target state="translated">Value::Kind#constant_fp?</target>
        </trans-unit>
        <trans-unit id="01bceecac0e67c9d353117f0576d53f7d714475f" translate="yes" xml:space="preserve">
          <source>Value::Kind#constant_int?</source>
          <target state="translated">Value::Kind#constant_int?</target>
        </trans-unit>
        <trans-unit id="424a5cf9c7131f28ebed7589d1f14be7c8dd39d6" translate="yes" xml:space="preserve">
          <source>Value::Kind#constant_pointer_null?</source>
          <target state="translated">Value::Kind#constant_pointer_null?</target>
        </trans-unit>
        <trans-unit id="3080dfd7d475ff65fd25883abbaf1386b161853b" translate="yes" xml:space="preserve">
          <source>Value::Kind#constant_struct?</source>
          <target state="translated">Value::Kind#constant_struct?</target>
        </trans-unit>
        <trans-unit id="59d87c6eb9849108c553b03ed95ca662963b5e2b" translate="yes" xml:space="preserve">
          <source>Value::Kind#constant_token_none?</source>
          <target state="translated">Value::Kind#constant_token_none?</target>
        </trans-unit>
        <trans-unit id="5815ec29ba6a1f207fcb0d5652b7e610b5ce6622" translate="yes" xml:space="preserve">
          <source>Value::Kind#constant_vector?</source>
          <target state="translated">Value::Kind#constant_vector?</target>
        </trans-unit>
        <trans-unit id="d64529a48280c31ccaca6fddb11465bb63716730" translate="yes" xml:space="preserve">
          <source>Value::Kind#function?</source>
          <target state="translated">Value::Kind#function?</target>
        </trans-unit>
        <trans-unit id="b4f21e64ad1560bb0cd63b7c5e341e7d7339e12b" translate="yes" xml:space="preserve">
          <source>Value::Kind#global_alias?</source>
          <target state="translated">Value::Kind#global_alias?</target>
        </trans-unit>
        <trans-unit id="cdf7bca506d77832e5cf26c1f997a66142c5d33d" translate="yes" xml:space="preserve">
          <source>Value::Kind#global_i_func?</source>
          <target state="translated">Value::Kind#global_i_func?</target>
        </trans-unit>
        <trans-unit id="4d38b76c96c8aa7f0477410286fec1e26bc5f128" translate="yes" xml:space="preserve">
          <source>Value::Kind#global_variable?</source>
          <target state="translated">Value::Kind#global_variable?</target>
        </trans-unit>
        <trans-unit id="4fe349b9bfacb8a6dd5187c0ee9e7092c90b48cd" translate="yes" xml:space="preserve">
          <source>Value::Kind#inline_asm?</source>
          <target state="translated">Value::Kind#inline_asm?</target>
        </trans-unit>
        <trans-unit id="68fbce5cdf1fa3519d948e09f4818c58878dcc08" translate="yes" xml:space="preserve">
          <source>Value::Kind#instruction?</source>
          <target state="translated">Value::Kind#instruction?</target>
        </trans-unit>
        <trans-unit id="fedf6fdcf0389479fa348094c60b53fa98b38eb7" translate="yes" xml:space="preserve">
          <source>Value::Kind#memory_def?</source>
          <target state="translated">Value::Kind#memory_def?</target>
        </trans-unit>
        <trans-unit id="a8ba08f8119f8375c9d37dfe9d2d5d62dd18dea5" translate="yes" xml:space="preserve">
          <source>Value::Kind#memory_phi?</source>
          <target state="translated">Value::Kind#memory_phi?</target>
        </trans-unit>
        <trans-unit id="881dc3ac30f3bbe761352de2b91e7a92c132279c" translate="yes" xml:space="preserve">
          <source>Value::Kind#memory_use?</source>
          <target state="translated">Value::Kind#memory_use?</target>
        </trans-unit>
        <trans-unit id="873371eef5b7620a9f441f0dab15cf7666c75046" translate="yes" xml:space="preserve">
          <source>Value::Kind#metadata_as_value?</source>
          <target state="translated">Value::Kind#metadata_as_value?</target>
        </trans-unit>
        <trans-unit id="8664adc2a7840f84f3f28fa8a6f77f0c186db5d6" translate="yes" xml:space="preserve">
          <source>Value::Kind#undef_value?</source>
          <target state="translated">Value::Kind#undef_value?</target>
        </trans-unit>
        <trans-unit id="08a39035af77fbb1c71a69223a6a1b5145763f20" translate="yes" xml:space="preserve">
          <source>ValueMethods</source>
          <target state="translated">ValueMethods</target>
        </trans-unit>
        <trans-unit id="fe64082042d3014ffe46be16251d79b8301885ba" translate="yes" xml:space="preserve">
          <source>ValueMethods#add_instruction_attribute</source>
          <target state="translated">ValueMethods#add_instruction_attribute</target>
        </trans-unit>
        <trans-unit id="c10bba2cfcdfacac69bb0774403ba69b8a797a5b" translate="yes" xml:space="preserve">
          <source>ValueMethods#alignment=</source>
          <target state="translated">ValueMethods#alignment=</target>
        </trans-unit>
        <trans-unit id="cf12caa521b309452e29f8097ff750c6a19ff736" translate="yes" xml:space="preserve">
          <source>ValueMethods#call_convention</source>
          <target state="translated">ValueMethods#call_convention</target>
        </trans-unit>
        <trans-unit id="479ebf3f3ca52bc79d0094dd4aae3567e4794f2e" translate="yes" xml:space="preserve">
          <source>ValueMethods#call_convention=</source>
          <target state="translated">ValueMethods#call_convention=</target>
        </trans-unit>
        <trans-unit id="c0ea014e49de83e1e7f9802d6706a35f7677a645" translate="yes" xml:space="preserve">
          <source>ValueMethods#const_int_get_sext_value</source>
          <target state="translated">ValueMethods#const_int_get_sext_value</target>
        </trans-unit>
        <trans-unit id="fd6566e97db80b0a61960c15f0ee2fbddfbf5b8f" translate="yes" xml:space="preserve">
          <source>ValueMethods#const_int_get_zext_value</source>
          <target state="translated">ValueMethods#const_int_get_zext_value</target>
        </trans-unit>
        <trans-unit id="3457c902e068b6e05c3cc3765873162989c714cc" translate="yes" xml:space="preserve">
          <source>ValueMethods#constant?</source>
          <target state="translated">ValueMethods#constant?</target>
        </trans-unit>
        <trans-unit id="837ebf499f0441baeca2ebf5bfc358908214e4db" translate="yes" xml:space="preserve">
          <source>ValueMethods#dump</source>
          <target state="translated">ValueMethods#dump</target>
        </trans-unit>
        <trans-unit id="16cab2781885ecc56320ae14e3a4ea7ab342842a" translate="yes" xml:space="preserve">
          <source>ValueMethods#global_constant=</source>
          <target state="translated">ValueMethods#global_constant=</target>
        </trans-unit>
        <trans-unit id="cd1d6dc211033af07c6adccf89e37b43fbc384f7" translate="yes" xml:space="preserve">
          <source>ValueMethods#global_constant?</source>
          <target state="translated">ValueMethods#global_constant?</target>
        </trans-unit>
        <trans-unit id="4231e5c7438f226ae1fb00015337e3ae41833eee" translate="yes" xml:space="preserve">
          <source>ValueMethods#initializer</source>
          <target state="translated">ValueMethods#initializer</target>
        </trans-unit>
        <trans-unit id="1adf170285831c3ec6815fe113c240c5f5bc3e9f" translate="yes" xml:space="preserve">
          <source>ValueMethods#initializer=</source>
          <target state="translated">ValueMethods#initializer=</target>
        </trans-unit>
        <trans-unit id="8804953509bdccb2204997e01e3cbb27a27f9795" translate="yes" xml:space="preserve">
          <source>ValueMethods#inspect</source>
          <target state="translated">ValueMethods#inspect</target>
        </trans-unit>
        <trans-unit id="32fbee02004e0c79d5d5f3f4fddf86d7bc071a8e" translate="yes" xml:space="preserve">
          <source>ValueMethods#kind</source>
          <target state="translated">ValueMethods#kind</target>
        </trans-unit>
        <trans-unit id="e79311356eaee9b01e3d6c6b2d970d7c2a9457ea" translate="yes" xml:space="preserve">
          <source>ValueMethods#linkage</source>
          <target state="translated">ValueMethods#linkage</target>
        </trans-unit>
        <trans-unit id="fc440c2813ecc125d6037c9e8c12bf96d423f16e" translate="yes" xml:space="preserve">
          <source>ValueMethods#linkage=</source>
          <target state="translated">ValueMethods#linkage=</target>
        </trans-unit>
        <trans-unit id="32b965013e30ae6980ed4881e7a345055637da7e" translate="yes" xml:space="preserve">
          <source>ValueMethods#name</source>
          <target state="translated">ValueMethods#name</target>
        </trans-unit>
        <trans-unit id="9b7d3739018f53660fcea8bcc4da4dfa27988c3d" translate="yes" xml:space="preserve">
          <source>ValueMethods#name=</source>
          <target state="translated">ValueMethods#name=</target>
        </trans-unit>
        <trans-unit id="2fae34b5562c167c8f8f33827b343f3397d2226c" translate="yes" xml:space="preserve">
          <source>ValueMethods#ordering=</source>
          <target state="translated">ValueMethods#ordering=</target>
        </trans-unit>
        <trans-unit id="3d3510fe5eeda2c4988f0e558d2c2a49110dac27" translate="yes" xml:space="preserve">
          <source>ValueMethods#thread_local=</source>
          <target state="translated">ValueMethods#thread_local=</target>
        </trans-unit>
        <trans-unit id="09f61fe2812dfd14fa61d2a08205db065cd80622" translate="yes" xml:space="preserve">
          <source>ValueMethods#thread_local?</source>
          <target state="translated">ValueMethods#thread_local?</target>
        </trans-unit>
        <trans-unit id="d866a00fbe722779aeca0e9ba956121763aa8d9a" translate="yes" xml:space="preserve">
          <source>ValueMethods#to_unsafe</source>
          <target state="translated">ValueMethods#to_unsafe</target>
        </trans-unit>
        <trans-unit id="340eed6ee8cd9f8ae327cbf331687ace0f853892" translate="yes" xml:space="preserve">
          <source>ValueMethods#to_value</source>
          <target state="translated">ValueMethods#to_value</target>
        </trans-unit>
        <trans-unit id="66a1cdc9f42ef0e7fd116939af414d79706a220f" translate="yes" xml:space="preserve">
          <source>ValueMethods#type</source>
          <target state="translated">ValueMethods#type</target>
        </trans-unit>
        <trans-unit id="1c074c11e0c70ee1cfb9fc09ae1de2007f2849e3" translate="yes" xml:space="preserve">
          <source>ValueMethods#volatile=</source>
          <target state="translated">ValueMethods#volatile=</target>
        </trans-unit>
        <trans-unit id="e2b1c23f3008dc58f7eaeb970e7fe4324a520e55" translate="yes" xml:space="preserve">
          <source>ValueMethods.new</source>
          <target state="translated">ValueMethods.new</target>
        </trans-unit>
        <trans-unit id="f90ae5e183665038fec03cea4663cbb68c6c3a61" translate="yes" xml:space="preserve">
          <source>Values are parsed using the regular &lt;code&gt;&lt;a href=&quot;hash#new(pull:JSON::PullParser)-class-method&quot;&gt;.new(pull : JSON::PullParser)&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">使用常规 &lt;code&gt;&lt;a href=&quot;hash#new(pull:JSON::PullParser)-class-method&quot;&gt;.new(pull : JSON::PullParser)&lt;/a&gt;&lt;/code&gt; 方法来解析值。</target>
        </trans-unit>
        <trans-unit id="7da165e3130a2a1237e52c285f8d456ebaa03912" translate="yes" xml:space="preserve">
          <source>Values from the monotonic clock and wall clock are not comparable. This method does not return a &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; instance but a &lt;code&gt;&lt;a href=&quot;time/span&quot;&gt;Time::Span&lt;/a&gt;&lt;/code&gt; amounting to the number of nanoseconds elapsed since the unspecified starting point of the monotonic clock. The returned values are strictly linearly increasing.</source>
          <target state="translated">单调时钟和挂钟的值不可比较。此方法不返回 &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 实例，而是一个 &lt;code&gt;&lt;a href=&quot;time/span&quot;&gt;Time::Span&lt;/a&gt;&lt;/code&gt; ，该时间等于自单调时钟的未指定起点以来经过的纳秒数。返回值严格线性增加。</target>
        </trans-unit>
        <trans-unit id="184e69bf8177d364bef3a759076b72121c954ccd" translate="yes" xml:space="preserve">
          <source>Values start with the value &lt;code&gt;0&lt;/code&gt; and are incremented by one, but can be overwritten.</source>
          <target state="translated">值以值 &lt;code&gt;0&lt;/code&gt; 开头，并递增1，但可以覆盖。</target>
        </trans-unit>
        <trans-unit id="78c01642353c1e217da8eaac74ede745c44a5763" translate="yes" xml:space="preserve">
          <source>Values that don't correspond to an enum's constants are allowed: the value will still be of type &lt;code&gt;Color&lt;/code&gt;, but when printed you will get the underlying value:</source>
          <target state="translated">允许使用与枚举常量不对应的值：该值仍为 &lt;code&gt;Color&lt;/code&gt; 类型，但是在打印时，您将获得基础值：</target>
        </trans-unit>
        <trans-unit id="2cba2d2992ed7e1106b338c042545587712cb2c7" translate="yes" xml:space="preserve">
          <source>Values that don't correspond to an enum's constants are allowed: the value will still be of type Color, but when printed you will get the underlying value:</source>
          <target state="translated">允许使用与枚举常量不对应的值:该值仍然是Color类型,但当打印时,你将得到底层值。</target>
        </trans-unit>
        <trans-unit id="3de327872336ae3a23452c859578eec86f13f2cd" translate="yes" xml:space="preserve">
          <source>Values with binary measurements such as computer storage (e.g. RAM size) are typically expressed using unit prefixes based on 1024 (instead of multiples of 1000 as per SI standard). This method by default uses the IEC standard prefixes (&lt;code&gt;Ki&lt;/code&gt;, &lt;code&gt;Mi&lt;/code&gt;, &lt;code&gt;Gi&lt;/code&gt;, &lt;code&gt;Ti&lt;/code&gt;, &lt;code&gt;Pi&lt;/code&gt;, &lt;code&gt;Ei&lt;/code&gt;, &lt;code&gt;Zi&lt;/code&gt;, &lt;code&gt;Yi&lt;/code&gt;) based on powers of 1000 (see &lt;code&gt;&lt;a href=&quot;int/binaryprefixformat#IEC&quot;&gt;BinaryPrefixFormat::IEC&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">通常使用基于1024的单位前缀（而不是根据SI标准的1000的倍数）来表示诸如计算机存储之类的二进制测量值（例如RAM大小）。默认情况下，此方法基于1000的 &lt;code&gt;Mi&lt;/code&gt; 使用IEC标准前缀（ &lt;code&gt;Ki&lt;/code&gt; ，Mi， &lt;code&gt;Gi&lt;/code&gt; ， &lt;code&gt;Ti&lt;/code&gt; ， &lt;code&gt;Pi&lt;/code&gt; ， &lt;code&gt;Ei&lt;/code&gt; ， &lt;code&gt;Zi&lt;/code&gt; ， &lt;code&gt;Yi&lt;/code&gt; ）（请参见 &lt;code&gt;&lt;a href=&quot;int/binaryprefixformat#IEC&quot;&gt;BinaryPrefixFormat::IEC&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="f876ad5f6a6ae1786f2660e6a99bc7a0edfd59c5" translate="yes" xml:space="preserve">
          <source>Variables declared in a program are not visible inside methods:</source>
          <target state="translated">程序中声明的变量在方法内部是不可见的。</target>
        </trans-unit>
        <trans-unit id="553163ac0ba45472fecca7931c4bb63d2b8131c2" translate="yes" xml:space="preserve">
          <source>Variables declared inside the &lt;code&gt;begin&lt;/code&gt; part of an exception handler also get the &lt;code&gt;Nil&lt;/code&gt; type when considered inside a &lt;code&gt;rescue&lt;/code&gt; or &lt;code&gt;ensure&lt;/code&gt; body. For example:</source>
          <target state="translated">在 &lt;code&gt;rescue&lt;/code&gt; 或 &lt;code&gt;ensure&lt;/code&gt; 主体内考虑时，在异常处理程序的 &lt;code&gt;begin&lt;/code&gt; 部分内声明的变量也将获得 &lt;code&gt;Nil&lt;/code&gt; 类型。例如：</target>
        </trans-unit>
        <trans-unit id="30d28aeb998290ab9302053c0b8d851faecfc008" translate="yes" xml:space="preserve">
          <source>Variables exposed by a C library can be declared inside a &lt;code&gt;lib&lt;/code&gt; declaration using a global-variable-like declaration:</source>
          <target state="translated">可以使用类似全局变量的声明在 &lt;code&gt;lib&lt;/code&gt; 声明中声明C库公开的变量：</target>
        </trans-unit>
        <trans-unit id="7c89f0f59784e8694fbf57199ac3a1d33643e489" translate="yes" xml:space="preserve">
          <source>Variadic arguments and splatting</source>
          <target state="translated">变量论证和溅射</target>
        </trans-unit>
        <trans-unit id="cc91b1ea2c16519ab22614ae2929960a271dbb5c" translate="yes" xml:space="preserve">
          <source>Variant</source>
          <target state="translated">Variant</target>
        </trans-unit>
        <trans-unit id="38ebd05272845c69a660caf78147397c23bfcb06" translate="yes" xml:space="preserve">
          <source>Variant#future?</source>
          <target state="translated">Variant#future?</target>
        </trans-unit>
        <trans-unit id="aeefdc2d65504d2950d1a46ae046b87554bd9f0b" translate="yes" xml:space="preserve">
          <source>Variant#microsoft?</source>
          <target state="translated">Variant#microsoft?</target>
        </trans-unit>
        <trans-unit id="3a44d2f0855d79a6bf41445d28cb77e563b605d9" translate="yes" xml:space="preserve">
          <source>Variant#ncs?</source>
          <target state="translated">Variant#ncs?</target>
        </trans-unit>
        <trans-unit id="021a9313cfc653fe31605a5e62193678c15d26e5" translate="yes" xml:space="preserve">
          <source>Variant#rfc4122?</source>
          <target state="translated">Variant#rfc4122?</target>
        </trans-unit>
        <trans-unit id="f1052040f177f2e535e806e3a27f11514a832ccb" translate="yes" xml:space="preserve">
          <source>Variant#unknown?</source>
          <target state="translated">Variant#unknown?</target>
        </trans-unit>
        <trans-unit id="d42918ce428b4c143009c414fe3bf9eed340de49" translate="yes" xml:space="preserve">
          <source>Variants with 16 bytes.</source>
          <target state="translated">16个字节的变体。</target>
        </trans-unit>
        <trans-unit id="2b6b10af9f64d3ac018b92b33452f2b1165dfc5b" translate="yes" xml:space="preserve">
          <source>Various bug workarounds that should be rather harmless. This used to be &lt;code&gt;0x000FFFFF&lt;/code&gt; before 0.9.7</source>
          <target state="translated">各种错误解决方法，应该无害。这曾经是 &lt;code&gt;0x000FFFFF&lt;/code&gt; 0.9.7之前</target>
        </trans-unit>
        <trans-unit id="34032bb7f0474baf76f4d5849a722375afc4ae7b" translate="yes" xml:space="preserve">
          <source>VerifierFailureAction</source>
          <target state="translated">VerifierFailureAction</target>
        </trans-unit>
        <trans-unit id="cd8b4a6de6b2727677b2de13084eb835b765bbc1" translate="yes" xml:space="preserve">
          <source>VerifierFailureAction#abort_process_action?</source>
          <target state="translated">VerifierFailureAction#abort_process_action?</target>
        </trans-unit>
        <trans-unit id="860e6ce13867b39ce2b9898ff70ae4ec772f8394" translate="yes" xml:space="preserve">
          <source>VerifierFailureAction#print_message_action?</source>
          <target state="translated">VerifierFailureAction#print_message_action?</target>
        </trans-unit>
        <trans-unit id="b436d1c2778b2470053b5ee79e5874e82ec33bd8" translate="yes" xml:space="preserve">
          <source>VerifierFailureAction#return_status_action?</source>
          <target state="translated">VerifierFailureAction#return_status_action?</target>
        </trans-unit>
        <trans-unit id="3cb4e61dcfa6ae617107e8a634dbda1f136af052" translate="yes" xml:space="preserve">
          <source>Verifies a password against the hash.</source>
          <target state="translated">根据哈希值验证密码。</target>
        </trans-unit>
        <trans-unit id="d507471de08421db83c09e4b55aff0dedb5b8c12" translate="yes" xml:space="preserve">
          <source>Verifies that all dependencies are installed and requirements are satisfied.</source>
          <target state="translated">核实所有的依赖关系是否已经安装,是否满足要求。</target>
        </trans-unit>
        <trans-unit id="2da600bf9404843107a9531694f654e5662959e0" translate="yes" xml:space="preserve">
          <source>Version</source>
          <target state="translated">Version</target>
        </trans-unit>
        <trans-unit id="7a322470960913707094891c1cdd0834380429df" translate="yes" xml:space="preserve">
          <source>Version#unknown?</source>
          <target state="translated">Version#unknown?</target>
        </trans-unit>
        <trans-unit id="b9d4f5fce52f22ab07c6c9c2618beeff87e2aa4c" translate="yes" xml:space="preserve">
          <source>Version#v1?</source>
          <target state="translated">Version#v1?</target>
        </trans-unit>
        <trans-unit id="8011fcc94cf6f1dad048c2f91e96a83eb7d48f24" translate="yes" xml:space="preserve">
          <source>Version#v2?</source>
          <target state="translated">Version#v2?</target>
        </trans-unit>
        <trans-unit id="5bb7a452eaf17106d7b3759e2af614a180636414" translate="yes" xml:space="preserve">
          <source>Version#v3?</source>
          <target state="translated">Version#v3?</target>
        </trans-unit>
        <trans-unit id="ac46e0036ea3335977995521eb3017a46620b474" translate="yes" xml:space="preserve">
          <source>Version#v4?</source>
          <target state="translated">Version#v4?</target>
        </trans-unit>
        <trans-unit id="dfe471f5e891fe75f60a901c84b606f65a1957af" translate="yes" xml:space="preserve">
          <source>Version#v5?</source>
          <target state="translated">Version#v5?</target>
        </trans-unit>
        <trans-unit id="9219f93e105fdc218fe765e0074ab87f4926c6bf" translate="yes" xml:space="preserve">
          <source>Virtual and abstract types</source>
          <target state="translated">虚拟和抽象类型</target>
        </trans-unit>
        <trans-unit id="7d9ff4f0de398581c4640bcbb6e536c355a391be" translate="yes" xml:space="preserve">
          <source>Visibility</source>
          <target state="translated">Visibility</target>
        </trans-unit>
        <trans-unit id="32c10a900ebb07d5216531c43d3ba2e9306a531e" translate="yes" xml:space="preserve">
          <source>WARNING: The behavior of &lt;code&gt;SO_LINGER&lt;/code&gt; is platform specific.</source>
          <target state="translated">警告： &lt;code&gt;SO_LINGER&lt;/code&gt; 的行为是特定于平台的。</target>
        </trans-unit>
        <trans-unit id="53fe01c1c7087e9f9dc20b8e9c80c7b70b6ed83a" translate="yes" xml:space="preserve">
          <source>WARNING: The behavior of &lt;code&gt;SO_LINGER&lt;/code&gt; is platform specific. Bad things may happen especially with nonblocking sockets. See &lt;a href=&quot;https://www.nybek.com/blog/2015/04/29/so_linger-on-non-blocking-sockets/&quot;&gt;Cross-Platform Testing of SO_LINGER by Nybek&lt;/a&gt; for more information.</source>
          <target state="translated">警告： &lt;code&gt;SO_LINGER&lt;/code&gt; 的行为是特定于平台的。不好的事情可能会发生，尤其是在无阻塞套接字的情况下。有关更多信息，请参见&lt;a href=&quot;https://www.nybek.com/blog/2015/04/29/so_linger-on-non-blocking-sockets/&quot;&gt;Nybek的SO_LINGER跨平台测试&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5602943a63eb4c1f8d9b90b7891d2e7ef218b9fe" translate="yes" xml:space="preserve">
          <source>Waits for this process to complete and closes any pipes.</source>
          <target state="translated">等待这个过程完成并关闭所有管道。</target>
        </trans-unit>
        <trans-unit id="08b6e5ef3f5d77c31ddfe59c39cdba7340dc1119" translate="yes" xml:space="preserve">
          <source>Warning: MD5 is no longer a cryptographically secure hash, and should not be used in security-related components, like password hashing. For passwords, see &lt;code&gt;&lt;a href=&quot;../crypto/bcrypt/password&quot;&gt;Crypto::Bcrypt::Password&lt;/a&gt;&lt;/code&gt;. For a generic cryptographic hash, use SHA-256 via &lt;code&gt;&lt;a href=&quot;../openssl/digest#new(name)-class-method&quot;&gt;OpenSSL::Digest.new(&quot;SHA256&quot;)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">警告：MD5不再是加密安全的哈希，并且不应在与安全相关的组件（例如密码哈希）中使用。有关密码，请参见 &lt;code&gt;&lt;a href=&quot;../crypto/bcrypt/password&quot;&gt;Crypto::Bcrypt::Password&lt;/a&gt;&lt;/code&gt; 。对于通用加密哈希，请通过 &lt;code&gt;&lt;a href=&quot;../openssl/digest#new(name)-class-method&quot;&gt;OpenSSL::Digest.new(&quot;SHA256&quot;)&lt;/a&gt;&lt;/code&gt; 使用SHA-256 。</target>
        </trans-unit>
        <trans-unit id="b2cfa86e4b580c7d84934c8bc5a645c4c5634773" translate="yes" xml:space="preserve">
          <source>Warning: MD5 is no longer a cryptographically secure hash, and should not be used in security-related components, like password hashing. For passwords, see &lt;code&gt;&lt;a href=&quot;../crypto/bcrypt/password&quot;&gt;Crypto::Bcrypt::Password&lt;/a&gt;&lt;/code&gt;. For a generic cryptographic hash, use SHA-256 via &lt;code&gt;&lt;a href=&quot;digest#new(name)-class-method&quot;&gt;OpenSSL::Digest.new(&quot;SHA256&quot;)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">警告：MD5不再是加密安全的哈希，并且不应在与安全相关的组件（例如密码哈希）中使用。有关密码，请参见 &lt;code&gt;&lt;a href=&quot;../crypto/bcrypt/password&quot;&gt;Crypto::Bcrypt::Password&lt;/a&gt;&lt;/code&gt; 。对于通用加密哈希，请通过 &lt;code&gt;&lt;a href=&quot;digest#new(name)-class-method&quot;&gt;OpenSSL::Digest.new(&quot;SHA256&quot;)&lt;/a&gt;&lt;/code&gt; 使用SHA-256 。</target>
        </trans-unit>
        <trans-unit id="0170c0a5583746bc4e5fc590eefd1b3f682c07d9" translate="yes" xml:space="preserve">
          <source>Warning: SHA1 is no longer a cryptographically secure hash, and should not be used in security-related components, like password hashing. For passwords, see &lt;code&gt;&lt;a href=&quot;../crypto/bcrypt/password&quot;&gt;Crypto::Bcrypt::Password&lt;/a&gt;&lt;/code&gt;. For a generic cryptographic hash, use SHA-256 via &lt;code&gt;&lt;a href=&quot;../openssl/digest#new(name)-class-method&quot;&gt;OpenSSL::Digest.new(&quot;SHA256&quot;)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">警告：SHA1不再是加密安全的哈希，并且不应在与安全相关的组件（例如密码哈希）中使用。有关密码，请参见 &lt;code&gt;&lt;a href=&quot;../crypto/bcrypt/password&quot;&gt;Crypto::Bcrypt::Password&lt;/a&gt;&lt;/code&gt; 。对于通用加密哈希，请通过 &lt;code&gt;&lt;a href=&quot;../openssl/digest#new(name)-class-method&quot;&gt;OpenSSL::Digest.new(&quot;SHA256&quot;)&lt;/a&gt;&lt;/code&gt; 使用SHA-256 。</target>
        </trans-unit>
        <trans-unit id="edd9e35a09d886245acb79c05d69196c36b6866e" translate="yes" xml:space="preserve">
          <source>Warning: SHA1 is no longer a cryptographically secure hash, and should not be used in security-related components, like password hashing. For passwords, see &lt;code&gt;&lt;a href=&quot;../crypto/bcrypt/password&quot;&gt;Crypto::Bcrypt::Password&lt;/a&gt;&lt;/code&gt;. For a generic cryptographic hash, use SHA-256 via &lt;code&gt;&lt;a href=&quot;digest#new(name)-class-method&quot;&gt;OpenSSL::Digest.new(&quot;SHA256&quot;)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">警告：SHA1不再是加密安全的哈希，并且不应在与安全相关的组件（例如密码哈希）中使用。有关密码，请参见 &lt;code&gt;&lt;a href=&quot;../crypto/bcrypt/password&quot;&gt;Crypto::Bcrypt::Password&lt;/a&gt;&lt;/code&gt; 。对于通用加密哈希，请通过 &lt;code&gt;&lt;a href=&quot;digest#new(name)-class-method&quot;&gt;OpenSSL::Digest.new(&quot;SHA256&quot;)&lt;/a&gt;&lt;/code&gt; 使用SHA-256 。</target>
        </trans-unit>
        <trans-unit id="b134c725209eb25378ec1421fdf7e07008e33490" translate="yes" xml:space="preserve">
          <source>We can define a &lt;code&gt;become_older&lt;/code&gt; method that accepts a number indicating the years to grow:</source>
          <target state="translated">我们可以定义一个 &lt;code&gt;become_older&lt;/code&gt; 方法，该方法接受一个表示增长年份的数字：</target>
        </trans-unit>
        <trans-unit id="45c840de59a674362c4ba12d4ec444b4bcdb1101" translate="yes" xml:space="preserve">
          <source>We can quickly see that &lt;code&gt;@age&lt;/code&gt; is an integer, but we don't know the type of &lt;code&gt;@name&lt;/code&gt;. The compiler could infer its type from all uses of the &lt;code&gt;Person&lt;/code&gt; class. However, doing so has a few issues:</source>
          <target state="translated">我们可以很快看到 &lt;code&gt;@age&lt;/code&gt; 是一个整数，但是我们不知道 &lt;code&gt;@name&lt;/code&gt; 的类型。编译器可以根据 &lt;code&gt;Person&lt;/code&gt; 类的所有使用来推断其类型。但是，这样做有几个问题：</target>
        </trans-unit>
        <trans-unit id="5aa65ab657dcf168082628d88b24320680a7b4f1" translate="yes" xml:space="preserve">
          <source>We can simplify our constructor by using a shorter syntax for assigning a method argument to an instance variable:</source>
          <target state="translated">我们可以通过使用更短的语法将方法参数分配给实例变量来简化我们的构造函数。</target>
        </trans-unit>
        <trans-unit id="7c6949dcf58bcd44b63b4efa8a90af0747781771" translate="yes" xml:space="preserve">
          <source>We can then type check against instances of these classes with not only their class, but the included modules as well:</source>
          <target state="translated">然后,我们可以针对这些类的实例进行类型检查,不仅可以检查它们的类,还可以检查包括的模块。</target>
        </trans-unit>
        <trans-unit id="61fde9ec4a6e09078ca88d22360ac2d29b72e227" translate="yes" xml:space="preserve">
          <source>We can use a channel for this:</source>
          <target state="translated">我们可以用一个渠道来解决这个问题。</target>
        </trans-unit>
        <trans-unit id="b48e9bd24090cc4fb3d3a559423d768813c2cee0" translate="yes" xml:space="preserve">
          <source>We can use this function like this:</source>
          <target state="translated">我们可以这样使用这个函数。</target>
        </trans-unit>
        <trans-unit id="8cb58a1cbcdc151dd9f70f9a144b3e08119ecd84" translate="yes" xml:space="preserve">
          <source>We can't do much with &lt;code&gt;person&lt;/code&gt;, so let's add some concepts to it. A &lt;code&gt;Person&lt;/code&gt; has a name and an age. In the &quot;Everything is an object&quot; section we said that an object has a type and responds to some methods, which is the only way to interact with objects, so we'll need both &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;age&lt;/code&gt; methods. We will store this information in instance variables, which are always prefixed with an &lt;em&gt;at&lt;/em&gt; (&lt;code&gt;@&lt;/code&gt;) character. We also want a Person to come into existence with a name of our choice and an age of zero. We code the &quot;come into existence&quot; part with a special &lt;code&gt;initialize&lt;/code&gt; method, which is normally called a &lt;em&gt;constructor&lt;/em&gt;:</source>
          <target state="translated">我们对 &lt;code&gt;person&lt;/code&gt; 不能做太多事情，所以让我们添加一些概念。一个 &lt;code&gt;Person&lt;/code&gt; 有名字和年龄。在&amp;ldquo;一切都是对象&amp;rdquo;部分中，我们说过对象具有类型并响应某些方法，这是与对象进行交互的唯一方法，因此我们需要 &lt;code&gt;name&lt;/code&gt; 方法和 &lt;code&gt;age&lt;/code&gt; 方法。我们会将这些信息存储在实例变量中，该变量始终以&lt;em&gt;at&lt;/em&gt;（ &lt;code&gt;@&lt;/code&gt; ）字符为前缀。我们还希望一个人以我们选择的名称和零年龄出现。我们使用特殊的 &lt;code&gt;initialize&lt;/code&gt; 方法（通常称为&lt;em&gt;构造函数）&lt;/em&gt;对&amp;ldquo;开始存在&amp;rdquo;部分进行编码：</target>
        </trans-unit>
        <trans-unit id="f5d8d253fd22bd9ac264f10a34bea5f4d66aaea3" translate="yes" xml:space="preserve">
          <source>We checkout the latest version of the compiler written in Ruby, and from that compiler we compile the next versions until the current one.</source>
          <target state="translated">我们检查用Ruby编写的编译器的最新版本,并从该编译器编译下一个版本,直到当前的版本。</target>
        </trans-unit>
        <trans-unit id="3dc139749eb1483831557987e05f6698de496c8a" translate="yes" xml:space="preserve">
          <source>We create a &lt;code&gt;.o&lt;/code&gt; file in the target system and from that file we create a compiler.</source>
          <target state="translated">我们在目标系统中创建一个 &lt;code&gt;.o&lt;/code&gt; 文件，然后根据该文件创建一个编译器。</target>
        </trans-unit>
        <trans-unit id="86f7f62caf9bcf0b33a4acac9812c2f578c15d45" translate="yes" xml:space="preserve">
          <source>We get an error because the compiler now treats &lt;code&gt;@pet&lt;/code&gt; as an &lt;code&gt;Animal+&lt;/code&gt;, which includes &lt;code&gt;Animal&lt;/code&gt;. And since it can't find a &lt;code&gt;talk&lt;/code&gt; method on it, it errors.</source>
          <target state="translated">我们收到一个错误，因为编译器现在将 &lt;code&gt;@pet&lt;/code&gt; 视为 &lt;code&gt;Animal+&lt;/code&gt; ，其中包括 &lt;code&gt;Animal&lt;/code&gt; 。而且由于无法在其上找到 &lt;code&gt;talk&lt;/code&gt; 方法，因此会出错。</target>
        </trans-unit>
        <trans-unit id="e4032ce7ea86befe6e19583c3b01c4565dd06b39" translate="yes" xml:space="preserve">
          <source>We have two accounts (each represented by a name and an amount of money).</source>
          <target state="translated">我们有两个账户(每个账户由一个名字和一个金额代表)。</target>
        </trans-unit>
        <trans-unit id="e5997a39351e58289366ade4f88c3d9574ee55f7" translate="yes" xml:space="preserve">
          <source>We love C's efficiency for running code.</source>
          <target state="translated">我们喜欢C语言运行代码的效率。</target>
        </trans-unit>
        <trans-unit id="5593bc3352ca86f03c8ef474f2b3a1576b9d39b8" translate="yes" xml:space="preserve">
          <source>We love Ruby's efficiency for writing code.</source>
          <target state="translated">我们喜欢Ruby写代码的效率。</target>
        </trans-unit>
        <trans-unit id="4fcb9856b3c411af9811d7992e8a6f5e590b5999" translate="yes" xml:space="preserve">
          <source>We may also raise an exception in the body of the transaction:</source>
          <target state="translated">我们也可以在交易的主体中提出异常。</target>
        </trans-unit>
        <trans-unit id="ee18972e04e40afb01735282184846f0359b3010" translate="yes" xml:space="preserve">
          <source>We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil. Yet we should not pass up our opportunities in that critical 3%.</source>
          <target state="translated">我们应该忘掉小效率,说97%左右:过早的优化是万恶之源。然而,我们不应该错过这关键的3%的机会。</target>
        </trans-unit>
        <trans-unit id="5c5f268ddd2d752ba2cec5b907b60823ba090761" translate="yes" xml:space="preserve">
          <source>We want full OOP.</source>
          <target state="translated">我们要的是完整的OOP。</target>
        </trans-unit>
        <trans-unit id="1b65a8befeb48668c450e0f17f1b8eb02c201996" translate="yes" xml:space="preserve">
          <source>We want the best of both worlds.</source>
          <target state="translated">我们希望两全其美。</target>
        </trans-unit>
        <trans-unit id="a9c5328d89237a2c3c457ad8e4e977a176571ada" translate="yes" xml:space="preserve">
          <source>We want the compiler to understand what we mean without having to specify types everywhere.</source>
          <target state="translated">我们希望编译器能够理解我们的意思,而不必到处指定类型。</target>
        </trans-unit>
        <trans-unit id="307357fe6fc4f9470827602f901c41c3dce308b7" translate="yes" xml:space="preserve">
          <source>Weak Reference class that allows a referenced object to be garbage-collected.</source>
          <target state="translated">弱引用类,允许引用对象被垃圾回收。</target>
        </trans-unit>
        <trans-unit id="a1335ba4027315f62ada8c5f58c30da36f666133" translate="yes" xml:space="preserve">
          <source>WeakRef</source>
          <target state="translated">WeakRef</target>
        </trans-unit>
        <trans-unit id="67b1c360c07381b1defd46f130e2b4729da206ed" translate="yes" xml:space="preserve">
          <source>WeakRef(T)</source>
          <target state="translated">WeakRef(T)</target>
        </trans-unit>
        <trans-unit id="d207595dcb5ae40d3a8c8d1db4b44717a7bc8977" translate="yes" xml:space="preserve">
          <source>WeakRef.new</source>
          <target state="translated">WeakRef.new</target>
        </trans-unit>
        <trans-unit id="9dcdedd5d9500a97f73300c80c5f0c0eb60db1da" translate="yes" xml:space="preserve">
          <source>WebKit_JS</source>
          <target state="translated">WebKit_JS</target>
        </trans-unit>
        <trans-unit id="fd2fe2179b44fad347e37ec201d26ab520f15318" translate="yes" xml:space="preserve">
          <source>WebSocket</source>
          <target state="translated">WebSocket</target>
        </trans-unit>
        <trans-unit id="fb44d32e5a22132eea174610234100046bfbfb76" translate="yes" xml:space="preserve">
          <source>WebSocket#close</source>
          <target state="translated">WebSocket#close</target>
        </trans-unit>
        <trans-unit id="46d06505ebbcdd2d2454963da2d45c4398e886de" translate="yes" xml:space="preserve">
          <source>WebSocket#closed?</source>
          <target state="translated">WebSocket#closed?</target>
        </trans-unit>
        <trans-unit id="bb86574522d97d43a43fab4092c3cc10c75f4243" translate="yes" xml:space="preserve">
          <source>WebSocket#on_binary</source>
          <target state="translated">WebSocket#on_binary</target>
        </trans-unit>
        <trans-unit id="3c8237612bc71c981ce6d392f28b3907cbda76f7" translate="yes" xml:space="preserve">
          <source>WebSocket#on_close</source>
          <target state="translated">WebSocket#on_close</target>
        </trans-unit>
        <trans-unit id="4dd5e59e59d689298f119a4eb058875703f5f345" translate="yes" xml:space="preserve">
          <source>WebSocket#on_message</source>
          <target state="translated">WebSocket#on_message</target>
        </trans-unit>
        <trans-unit id="cd0ef28a099853052f323b6d52b02bfebd96e937" translate="yes" xml:space="preserve">
          <source>WebSocket#on_ping</source>
          <target state="translated">WebSocket#on_ping</target>
        </trans-unit>
        <trans-unit id="aa291aa6f629d32c0aaacf2f58acfb1d490d5e5d" translate="yes" xml:space="preserve">
          <source>WebSocket#on_pong</source>
          <target state="translated">WebSocket#on_pong</target>
        </trans-unit>
        <trans-unit id="835dc61987500f71f31994da37afa856d17f502c" translate="yes" xml:space="preserve">
          <source>WebSocket#ping</source>
          <target state="translated">WebSocket#ping</target>
        </trans-unit>
        <trans-unit id="2f6ce1d2b22ca25d640eda1c2e9a9561e2b34f96" translate="yes" xml:space="preserve">
          <source>WebSocket#pong</source>
          <target state="translated">WebSocket#pong</target>
        </trans-unit>
        <trans-unit id="d7485c41e11ba05100698e08d97bfc815148835b" translate="yes" xml:space="preserve">
          <source>WebSocket#run</source>
          <target state="translated">WebSocket#run</target>
        </trans-unit>
        <trans-unit id="693dfb5a684081434932bbb89de66478e5d4f967" translate="yes" xml:space="preserve">
          <source>WebSocket#send</source>
          <target state="translated">WebSocket#send</target>
        </trans-unit>
        <trans-unit id="a44f1a86f0c7c9db8c77c27267c03bf1b953f054" translate="yes" xml:space="preserve">
          <source>WebSocket#stream</source>
          <target state="translated">WebSocket#stream</target>
        </trans-unit>
        <trans-unit id="e87a2a0ebd3d61ec5f9fa3b8235f18ed861db74a" translate="yes" xml:space="preserve">
          <source>WebSocket.new</source>
          <target state="translated">WebSocket.new</target>
        </trans-unit>
        <trans-unit id="cc7e8debb7b4a47973df44f7700f4dd22d89edde" translate="yes" xml:space="preserve">
          <source>WebSocketHandler</source>
          <target state="translated">WebSocketHandler</target>
        </trans-unit>
        <trans-unit id="025b0268c0240d33aca5bc07a81a682b8194fe2c" translate="yes" xml:space="preserve">
          <source>WebSocketHandler#call</source>
          <target state="translated">WebSocketHandler#call</target>
        </trans-unit>
        <trans-unit id="fa7f4dc9b2523edb774e7fb2cd3561b8e8b4c70b" translate="yes" xml:space="preserve">
          <source>WebSocketHandler.new</source>
          <target state="translated">WebSocketHandler.new</target>
        </trans-unit>
        <trans-unit id="fb09b9240d0db0be4af8e00eb400903d5df908cf" translate="yes" xml:space="preserve">
          <source>What happens with the &lt;code&gt;strukt&lt;/code&gt; here:</source>
          <target state="translated">这里的 &lt;code&gt;strukt&lt;/code&gt; 会发生什么：</target>
        </trans-unit>
        <trans-unit id="ca032b5844df22ede2117e0697547ac14af77ed3" translate="yes" xml:space="preserve">
          <source>What it does</source>
          <target state="translated">它的作用</target>
        </trans-unit>
        <trans-unit id="ba605194eda0d47e7928365f4c48c32923ef0b1d" translate="yes" xml:space="preserve">
          <source>What the compiler doesn't know is that for us, &lt;code&gt;Animal&lt;/code&gt; will never be instantiated as it doesn't make sense to instantiate one. We have a way to tell the compiler so by marking the class as &lt;code&gt;abstract&lt;/code&gt;:</source>
          <target state="translated">编译器不知道的是，对于我们来说， &lt;code&gt;Animal&lt;/code&gt; 永远不会被实例化，因为实例化一个动物没有意义。我们可以通过将类标记为 &lt;code&gt;abstract&lt;/code&gt; 来告诉编译器：</target>
        </trans-unit>
        <trans-unit id="92b7005dedd914727695a3f264e6df2f41b90cef" translate="yes" xml:space="preserve">
          <source>What your library is</source>
          <target state="translated">您的图书馆是什么</target>
        </trans-unit>
        <trans-unit id="1e93158776e9f89c0654ba898a7273a72783272d" translate="yes" xml:space="preserve">
          <source>What's the right way to do this? Change the expression so that it &lt;em&gt;is&lt;/em&gt; of the right type: &lt;code&gt;Array(Foo)&lt;/code&gt; (see example above).</source>
          <target state="translated">什么是正确的方法？更改表达式，使其&lt;em&gt;具有&lt;/em&gt;正确的类型： &lt;code&gt;Array(Foo)&lt;/code&gt; （请参见上面的示例）。</target>
        </trans-unit>
        <trans-unit id="f887438e8ba27c57fa5cf50d0566b18508e3184d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;DB::Database&lt;/code&gt; is opened an initial number of &lt;code&gt;initial_pool_size&lt;/code&gt; connections will be created. The pool will never hold more than &lt;code&gt;max_pool_size&lt;/code&gt; connections. When returning/releasing a connection to the pool it will be closed if there are already &lt;code&gt;max_idle_pool_size&lt;/code&gt; idle connections.</source>
          <target state="translated">当 &lt;code&gt;DB::Database&lt;/code&gt; 被打开的初始数量 &lt;code&gt;initial_pool_size&lt;/code&gt; 连接将被创建。该池永远不会容纳超过 &lt;code&gt;max_pool_size&lt;/code&gt; 个连接。返回/释放到池的连接时，如果已经有 &lt;code&gt;max_idle_pool_size&lt;/code&gt; 空闲连接，它将关闭。</target>
        </trans-unit>
        <trans-unit id="40dcecb5e974fc046a2478a840e7206675791927" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;spec&lt;/code&gt; is included, every object has the instance methods &lt;code&gt;#should&lt;/code&gt; and &lt;code&gt;#should_not&lt;/code&gt;. These methods are invoked on the value being tested with an expectation as argument. If the expectation is met, code execution continues. Otherwise the example has &lt;em&gt;failed&lt;/em&gt; and other code in this block will not be executed.</source>
          <target state="translated">当 &lt;code&gt;spec&lt;/code&gt; 包括，每个对象都有方法实例 &lt;code&gt;#should&lt;/code&gt; 和 &lt;code&gt;#should_not&lt;/code&gt; 。这些方法在以期望值作为参数的测试值上调用。如果满足期望，则代码执行将继续。否则，示例将&lt;em&gt;失败，&lt;/em&gt;并且该块中的其他代码将不会执行。</target>
        </trans-unit>
        <trans-unit id="c193eb90deca27e2df6bd7cd71a13eadedf1d042" translate="yes" xml:space="preserve">
          <source>When &lt;em&gt;n&lt;/em&gt; is &lt;code&gt;0&lt;/code&gt; or not given, uses the match of the entire &lt;code&gt;&lt;a href=&quot;../regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt;. Otherwise, uses the match of the &lt;em&gt;n&lt;/em&gt;th capture group.</source>
          <target state="translated">当&lt;em&gt;n&lt;/em&gt;为 &lt;code&gt;0&lt;/code&gt; 或未指定时，使用整个 &lt;code&gt;&lt;a href=&quot;../regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; 的匹配项。否则，使用第&lt;em&gt;n&lt;/em&gt;个捕获组的匹配项。</target>
        </trans-unit>
        <trans-unit id="6c54f3e1c07d2a04544cef58cb4c0fc4ce50df77" translate="yes" xml:space="preserve">
          <source>When &lt;em&gt;n&lt;/em&gt; is &lt;code&gt;0&lt;/code&gt;, returns the match for the entire &lt;code&gt;&lt;a href=&quot;../regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">当&lt;em&gt;n&lt;/em&gt;为 &lt;code&gt;0&lt;/code&gt; 时，返回整个正则 &lt;code&gt;&lt;a href=&quot;../regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; 的匹配项。</target>
        </trans-unit>
        <trans-unit id="bb1485d38cd224aacd86238f495c0e293aa1a132" translate="yes" xml:space="preserve">
          <source>When &lt;em&gt;with_seconds&lt;/em&gt; is &lt;code&gt;false&lt;/code&gt;, seconds are omitted; when &lt;code&gt;:auto&lt;/code&gt;, seconds are omitted if &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">如果&lt;em&gt;with_seconds&lt;/em&gt;为 &lt;code&gt;false&lt;/code&gt; ，则省略秒；when &lt;code&gt;:auto&lt;/code&gt; ，如果为 &lt;code&gt;0&lt;/code&gt; ，则省略秒。</target>
        </trans-unit>
        <trans-unit id="ebea2505add00bc5ae488f74eacca432efaa73a3" translate="yes" xml:space="preserve">
          <source>When a case expression is a tuple literal there are a few semantic differences if a when condition is also a tuple literal.</source>
          <target state="translated">当一个case表达式是一个元组文字时,如果一个when条件也是一个元组文字,就会有一些语义上的差异。</target>
        </trans-unit>
        <trans-unit id="b6d0b072bdca6505ae76af9c0cf62402b1c73278" translate="yes" xml:space="preserve">
          <source>When a connection is established it usually means opening a TCP connection or Socket. The socket will handle one statement at a time. If a program needs to perform many queries simultaneously, or if it handles concurrent requests that aim to use a database, it will need more than one active connection.</source>
          <target state="translated">当一个连接建立时,通常意味着打开一个TCP连接或Socket。Socket一次只处理一条语句。如果一个程序需要同时执行许多查询,或者处理以使用数据库为目的的并发请求,它将需要一个以上的活动连接。</target>
        </trans-unit>
        <trans-unit id="a9be2a49f2ad0d758e00d464347b5f26d16fec34" translate="yes" xml:space="preserve">
          <source>When a database is opened with &lt;code&gt;crystal-db&lt;/code&gt; there is already a connection pool working. &lt;code&gt;DB.open&lt;/code&gt; returns a &lt;code&gt;DB::Database&lt;/code&gt; object which manages the whole connection pool and not just a single connection.</source>
          <target state="translated">使用 &lt;code&gt;crystal-db&lt;/code&gt; 打开数据库时，已经有一个连接池在工作。 &lt;code&gt;DB.open&lt;/code&gt; 返回一个 &lt;code&gt;DB::Database&lt;/code&gt; 对象，该对象管理整个连接池，而不仅仅是一个连接。</target>
        </trans-unit>
        <trans-unit id="33208839931cc76b48214f51b6675a633f40f7e4" translate="yes" xml:space="preserve">
          <source>When a literal is assigned to an instance variable, the literal's type is added to the set. All &lt;a href=&quot;literals&quot;&gt;literals&lt;/a&gt; have an associated type.</source>
          <target state="translated">将文字分配给实例变量后，文字的类型将添加到集合中。所有&lt;a href=&quot;literals&quot;&gt;文字&lt;/a&gt;都有关联的类型。</target>
        </trans-unit>
        <trans-unit id="58120a60789e863ee418e387ab28f96759e556c2" translate="yes" xml:space="preserve">
          <source>When a macro is invoked you can access the current scope, or type, with a special instance variable: &lt;code&gt;@type&lt;/code&gt;. The type of this variable is &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/TypeNode.html&quot;&gt;&lt;code&gt;TypeNode&lt;/code&gt;&lt;/a&gt;, which gives you access to type information at compile time.</source>
          <target state="translated">调用宏时，您可以使用特殊的实例变量 &lt;code&gt;@type&lt;/code&gt; 访问当前作用域或类型。此变量的类型为&lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/TypeNode.html&quot;&gt; &lt;code&gt;TypeNode&lt;/code&gt; &lt;/a&gt;，它使您可以在编译时访问类型信息。</target>
        </trans-unit>
        <trans-unit id="7b5db0049e2058fe2ce71a9ffb795d3a82e55024" translate="yes" xml:space="preserve">
          <source>When a macro is invoked you can access the method, the macro is in with a special instance variable: &lt;code&gt;@def&lt;/code&gt;. The type of this variable is &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/Def.html&quot;&gt;&lt;code&gt;Def&lt;/code&gt;&lt;/a&gt; unless the macro is outside of a method, in this case it's &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/NilLiteral.html&quot;&gt;&lt;code&gt;NilLiteral&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">调用宏时，您可以访问该方法，该宏带有特殊的实例变量： &lt;code&gt;@def&lt;/code&gt; 。除非宏在方法外部，否则此变量的类型为&lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/Def.html&quot;&gt; &lt;code&gt;Def&lt;/code&gt; &lt;/a&gt;，在这种情况下为&lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/NilLiteral.html&quot;&gt; &lt;code&gt;NilLiteral&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4ca6188983cf386529a4120b737d93d31b74befd" translate="yes" xml:space="preserve">
          <source>When a method specifies a splat (explained in the next section), named arguments can't be used. The reason is that understanding how arguments are matched becomes very difficult; positional arguments are easier to reason about in this case.</source>
          <target state="translated">当一个方法指定了一个溅射(在下一节解释),不能使用命名的参数。原因是理解如何匹配参数变得非常困难;在这种情况下,位置参数更容易推理。</target>
        </trans-unit>
        <trans-unit id="d4dcb169064ada9807c82159304a6534417318dc" translate="yes" xml:space="preserve">
          <source>When a new Crystal version is released you can upgrade Crystal using:</source>
          <target state="translated">当新的Crystal版本发布后,您可以使用以下方法升级Crystal。</target>
        </trans-unit>
        <trans-unit id="703410034382b89aab940ae19f3dfa82f17f1438" translate="yes" xml:space="preserve">
          <source>When a new Crystal version is released you can upgrade your system using:</source>
          <target state="translated">当新的Crystal版本发布时,您可以使用以下方法升级您的系统。</target>
        </trans-unit>
        <trans-unit id="11e735ef005de08009428fe15c6d46163b187cf4" translate="yes" xml:space="preserve">
          <source>When a program starts, it fires up a main fiber that will execute your top-level code. There, one can spawn many other fibers. The components of a program are:</source>
          <target state="translated">当一个程序启动时,它会启动一个主光纤,执行你的顶层代码。在那里,可以衍生出许多其他光纤。一个程序的组成部分是:</target>
        </trans-unit>
        <trans-unit id="3a3d6249ba8bb5aaa537616f437f7c2a8df14487" translate="yes" xml:space="preserve">
          <source>When a splat method argument has no name, it means no more positional arguments can be passed, and next arguments must be passed as named arguments. For example:</source>
          <target state="translated">当splat方法的参数没有名字时,意味着不能再传递位置参数,接下来的参数必须以命名参数的方式传递。比如说</target>
        </trans-unit>
        <trans-unit id="527819fee338ce682807f32d6920183ee347f8e4" translate="yes" xml:space="preserve">
          <source>When a variable's type combines different types under the same class hierarchy, its type becomes a &lt;strong&gt;virtual type&lt;/strong&gt;. This applies to every class and struct except for &lt;code&gt;Reference&lt;/code&gt;, &lt;code&gt;Value&lt;/code&gt;, &lt;code&gt;Int&lt;/code&gt; and &lt;code&gt;Float&lt;/code&gt;. An example:</source>
          <target state="translated">当变量的类型在相同的类层次结构下合并不同的类型时，其类型将成为&lt;strong&gt;虚拟类型&lt;/strong&gt;。这适用于除 &lt;code&gt;Reference&lt;/code&gt; ， &lt;code&gt;Value&lt;/code&gt; ， &lt;code&gt;Int&lt;/code&gt; 和 &lt;code&gt;Float&lt;/code&gt; 之外的每个类和结构。一个例子：</target>
        </trans-unit>
        <trans-unit id="e2ffe07db14f1ef5fc26e312057d75c7d334c945" translate="yes" xml:space="preserve">
          <source>When an &lt;code&gt;-l&lt;/code&gt; option is passed to the linker, it will lookup the libraries in paths passed with the &lt;code&gt;-L&lt;/code&gt; option. &lt;code&gt;CRYSTAL_LIBRARY_PATH&lt;/code&gt;, &lt;code&gt;/usr/lib&lt;/code&gt;, and &lt;code&gt;/usr/local/lib&lt;/code&gt; are added by default. Custom paths can be passed using &lt;code&gt;ldflags&lt;/code&gt;: &lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(ldflags: &quot;-Lvendor/bin&quot;)]&lt;/code&gt;.</source>
          <target state="translated">当 &lt;code&gt;-l&lt;/code&gt; 选项传递给链接器时，它将在通过 &lt;code&gt;-L&lt;/code&gt; 选项传递的路径中查找库。默认情况下添加 &lt;code&gt;CRYSTAL_LIBRARY_PATH&lt;/code&gt; ， &lt;code&gt;/usr/lib&lt;/code&gt; 和 &lt;code&gt;/usr/local/lib&lt;/code&gt; 。可以使用 &lt;code&gt;ldflags&lt;/code&gt; ： &lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(ldflags: &quot;-Lvendor/bin&quot;)]&lt;/code&gt; 传递自定义路径。</target>
        </trans-unit>
        <trans-unit id="0ed60c1fe277ee8379691cd665ad16d336602b34" translate="yes" xml:space="preserve">
          <source>When an expression like &lt;code&gt;Type.new(...)&lt;/code&gt; is assigned to an instance variable, the type &lt;code&gt;Type&lt;/code&gt; is added to the set.</source>
          <target state="translated">当将 &lt;code&gt;Type.new(...)&lt;/code&gt; 之类的表达式分配给实例变量时，会将 &lt;code&gt;Type&lt;/code&gt; 类型添加到集合中。</target>
        </trans-unit>
        <trans-unit id="fe0bc15ba7f318d5f2047677737c9ceea0125a8f" translate="yes" xml:space="preserve">
          <source>When building Crystal code with the &lt;code&gt;--release&lt;/code&gt; flag on FreeBSD, the &lt;code&gt;--no-debug&lt;/code&gt; flag should be added too in order to avoid LLVM assertion errors.</source>
          <target state="translated">在FreeBSD上使用 &lt;code&gt;--release&lt;/code&gt; 标志构建Crystal代码时，也应添加 &lt;code&gt;--no-debug&lt;/code&gt; 标志，以避免LLVM声明错误。</target>
        </trans-unit>
        <trans-unit id="36010cb3483e8a44deef2a0dce51a10502c6510f" translate="yes" xml:space="preserve">
          <source>When calling a C function that expects a pointer you can also pass &lt;code&gt;nil&lt;/code&gt; instead of using &lt;code&gt;&lt;a href=&quot;pointer#null-class-method&quot;&gt;Pointer.null&lt;/a&gt;&lt;/code&gt; to construct a null pointer.</source>
          <target state="translated">当调用需要指针的C函数时，您也可以传递 &lt;code&gt;nil&lt;/code&gt; 而不是使用 &lt;code&gt;&lt;a href=&quot;pointer#null-class-method&quot;&gt;Pointer.null&lt;/a&gt;&lt;/code&gt; 构造一个空指针。</target>
        </trans-unit>
        <trans-unit id="217c67e10b0faa41f914aa07764807c52c136533" translate="yes" xml:space="preserve">
          <source>When calling a C function you can also pass &lt;code&gt;nil&lt;/code&gt; instead of constructing a null pointer with this method.</source>
          <target state="translated">调用C函数时，也可以传递 &lt;code&gt;nil&lt;/code&gt; 而不是使用此方法构造空指针。</target>
        </trans-unit>
        <trans-unit id="13cae290e34fb2e03ac20513002a75bdaedf3d41" translate="yes" xml:space="preserve">
          <source>When capturing blocks, the type of the arguments and return type must be specified in the capturing method block signature.</source>
          <target state="translated">当捕获块时,必须在捕获方法块签名中指定参数类型和返回类型。</target>
        </trans-unit>
        <trans-unit id="41502e000448d76bbf7f8b89bb622dbb173ce16a" translate="yes" xml:space="preserve">
          <source>When compiling for a windows target, this is equal to &lt;code&gt;Path.windows()&lt;/code&gt;, otherwise &lt;code&gt;Path.posix&lt;/code&gt; is used.</source>
          <target state="translated">编译Windows目标时，它等于 &lt;code&gt;Path.windows()&lt;/code&gt; ，否则使用 &lt;code&gt;Path.posix&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3478cc7c16bd5a184c4053a59b6aa5d0c576dcec" translate="yes" xml:space="preserve">
          <source>When creating an empty array you must always specify T:</source>
          <target state="translated">当创建一个空数组时,你必须始终指定T。</target>
        </trans-unit>
        <trans-unit id="85459da6d2529d9de8cf529e3732a46c90b4b80b" translate="yes" xml:space="preserve">
          <source>When creating an instance, the parser is positioned in the first event. To get the event kind invoke &lt;code&gt;&lt;a href=&quot;pullparser#kind:EventKind-instance-method&quot;&gt;#kind&lt;/a&gt;&lt;/code&gt;. If the event is a scalar you can invoke &lt;code&gt;&lt;a href=&quot;pullparser#value:String-instance-method&quot;&gt;#value&lt;/a&gt;&lt;/code&gt; to get its &lt;strong&gt;string&lt;/strong&gt; value. Other methods like &lt;code&gt;&lt;a href=&quot;pullparser#tag:String?-instance-method&quot;&gt;#tag&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;pullparser#anchor-instance-method&quot;&gt;#anchor&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;pullparser#scalar_style:ScalarStyle-instance-method&quot;&gt;#scalar_style&lt;/a&gt;&lt;/code&gt; let you inspect other information from events.</source>
          <target state="translated">创建实例时，解析器位于第一个事件中。要获取事件种类，请调用 &lt;code&gt;&lt;a href=&quot;pullparser#kind:EventKind-instance-method&quot;&gt;#kind&lt;/a&gt;&lt;/code&gt; 。如果事件是标量，则可以调用 &lt;code&gt;&lt;a href=&quot;pullparser#value:String-instance-method&quot;&gt;#value&lt;/a&gt;&lt;/code&gt; 以获取其&lt;strong&gt;字符串&lt;/strong&gt;值。 &lt;code&gt;&lt;a href=&quot;pullparser#tag:String?-instance-method&quot;&gt;#tag&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;pullparser#anchor-instance-method&quot;&gt;#anchor&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;pullparser#scalar_style:ScalarStyle-instance-method&quot;&gt;#scalar_style&lt;/a&gt;&lt;/code&gt; 等其他方法可让您检查事件中的其他信息。</target>
        </trans-unit>
        <trans-unit id="32d24ba1f5352b3650b62220ecff7caa54a169b7" translate="yes" xml:space="preserve">
          <source>When data is read from &lt;em&gt;io&lt;/em&gt; it will print something akin to the following on STDERR:</source>
          <target state="translated">从&lt;em&gt;io&lt;/em&gt;读取数据时，它将在STDERR上打印类似于以下内容的内容：</target>
        </trans-unit>
        <trans-unit id="5da2a041eda9cfc188f4b42080f6d45ac478909a" translate="yes" xml:space="preserve">
          <source>When executing statements using &lt;code&gt;db.query&lt;/code&gt;, &lt;code&gt;db.exec&lt;/code&gt;, &lt;code&gt;db.scalar&lt;/code&gt;, etc. the algorithm goes:</source>
          <target state="translated">当使用 &lt;code&gt;db.query&lt;/code&gt; ， &lt;code&gt;db.exec&lt;/code&gt; ， &lt;code&gt;db.scalar&lt;/code&gt; 等执行语句时，算法执行：</target>
        </trans-unit>
        <trans-unit id="68d75bbf3cfb6ffd114021e1361f91966736c381" translate="yes" xml:space="preserve">
          <source>When implementing &lt;code&gt;new(ctx : &lt;a href=&quot;parsecontext&quot;&gt;YAML::ParseContext&lt;/a&gt;, node : &lt;a href=&quot;nodes/node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;)&lt;/code&gt; to deserialize an object from a node, &lt;code&gt;&lt;a href=&quot;../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; types must invoke both &lt;code&gt;&lt;a href=&quot;parsecontext#read_alias(node,type:T.class,&amp;amp;block)forallT-instance-method&quot;&gt;#read_alias&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;parsecontext#record_anchor(node,object:T):NilforallT-instance-method&quot;&gt;#record_anchor&lt;/a&gt;&lt;/code&gt; in order to support parsing recursive data structures.</source>
          <target state="translated">在实现 &lt;code&gt;new(ctx : &lt;a href=&quot;parsecontext&quot;&gt;YAML::ParseContext&lt;/a&gt;, node : &lt;a href=&quot;nodes/node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;)&lt;/code&gt; 以从节点反序列化对象时， &lt;code&gt;&lt;a href=&quot;../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; 类型必须同时调用 &lt;code&gt;&lt;a href=&quot;parsecontext#read_alias(node,type:T.class,&amp;amp;block)forallT-instance-method&quot;&gt;#read_alias&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;parsecontext#record_anchor(node,object:T):NilforallT-instance-method&quot;&gt;#record_anchor&lt;/a&gt;&lt;/code&gt; 才能支持解析递归数据结构。</target>
        </trans-unit>
        <trans-unit id="2c7cad6a77f75eb2b87d1a862a75c214a2d6c251" translate="yes" xml:space="preserve">
          <source>When invoking a method on a union type, the language checks that the method exists and can be resolved (typed) for each type in the union. For this reason, adding instance methods to &lt;code&gt;&lt;a href=&quot;union&quot;&gt;Union&lt;/a&gt;&lt;/code&gt; makes no sense and has no effect. However, adding class method to &lt;code&gt;&lt;a href=&quot;union&quot;&gt;Union&lt;/a&gt;&lt;/code&gt; is possible and can be useful. One example is parsing &lt;code&gt;&lt;a href=&quot;json&quot;&gt;JSON&lt;/a&gt;&lt;/code&gt; into one of many possible types.</source>
          <target state="translated">在联合类型上调用方法时，语言会检查该方法是否存在，并且可以为联合中的每种类型解析（键入）该方法。因此，将实例方法添加到 &lt;code&gt;&lt;a href=&quot;union&quot;&gt;Union&lt;/a&gt;&lt;/code&gt; 毫无意义，也没有效果。但是，可以将类方法添加到 &lt;code&gt;&lt;a href=&quot;union&quot;&gt;Union&lt;/a&gt;&lt;/code&gt; 中,并且可能很有用。一个示例是将 &lt;code&gt;&lt;a href=&quot;json&quot;&gt;JSON&lt;/a&gt;&lt;/code&gt; 解析为许多可能的类型之一。</target>
        </trans-unit>
        <trans-unit id="cb68d79bb3b9be46f43a1d5372ef2ef2e6a92833" translate="yes" xml:space="preserve">
          <source>When invoking a method without a receiver, like &lt;code&gt;add(1, 2)&lt;/code&gt;, it will be searched for in the program if not found in the current type or any of its ancestors.</source>
          <target state="translated">当调用没有接收方的方法 &lt;code&gt;add(1, 2)&lt;/code&gt; 如add（1，2））时，如果未在当前类型或其任何祖先中找到该方法，则将在程序中搜索该方法。</target>
        </trans-unit>
        <trans-unit id="e0b0d8828c8b8efd522bcf4f0738e2b6c626db99" translate="yes" xml:space="preserve">
          <source>When invoking a method, the algorithm to match call arguments to method arguments is:</source>
          <target state="translated">在调用方法时,将调用参数与方法参数匹配的算法是:。</target>
        </trans-unit>
        <trans-unit id="6fb93956316ec61219fec86bdb2bbcdf11ccd45d" translate="yes" xml:space="preserve">
          <source>When libraries are installed from Git repositories, the repository is expected to have version tags following a semver-like format, prefixed with a &lt;code&gt;v&lt;/code&gt;. Examples: v1.2.3, v2.0.0-rc1 or v2017.04.1</source>
          <target state="translated">当从Git仓库安装库时，该仓库应具有遵循类似semver格式的版本标签，并带有 &lt;code&gt;v&lt;/code&gt; 前缀。示例：v1.2.3，v2.0.0-rc1或v2017.04.1</target>
        </trans-unit>
        <trans-unit id="338dcf33d4029261e864e9e5fc05d23706ddcf0e" translate="yes" xml:space="preserve">
          <source>When matching a regular expression using &lt;code&gt;&lt;a href=&quot;regex#=~(other:String)-instance-method&quot;&gt;#=~&lt;/a&gt;&lt;/code&gt; (either &lt;code&gt;&lt;a href=&quot;string#=~(other)-instance-method&quot;&gt;String#=~&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;regex#=~(other:String)-instance-method&quot;&gt;Regex#=~&lt;/a&gt;&lt;/code&gt;), the returned value will be the index of the first match in the string if the expression matched, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;regex#=~(other:String)-instance-method&quot;&gt;#=~&lt;/a&gt;&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;string#=~(other)-instance-method&quot;&gt;String#=~&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;regex#=~(other:String)-instance-method&quot;&gt;Regex#=~&lt;/a&gt;&lt;/code&gt; ）匹配正则表达式时，如果表达式匹配，则返回值将是字符串中第一个匹配项的索引，否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="999551b29abc9653910bfa9bba8b5af881e3d867" translate="yes" xml:space="preserve">
          <source>When matching a regular expression using &lt;code&gt;&lt;a href=&quot;regex#match(str,pos=0,options=Regex::Options::None):MatchData?-instance-method&quot;&gt;#match&lt;/a&gt;&lt;/code&gt; (either &lt;code&gt;&lt;a href=&quot;string#match(regex:Regex,pos=0):Regex::MatchData?-instance-method&quot;&gt;String#match&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;regex#match(str,pos=0,options=Regex::Options::None):MatchData?-instance-method&quot;&gt;Regex#match&lt;/a&gt;&lt;/code&gt;), the returned value will be a &lt;code&gt;&lt;a href=&quot;regex/matchdata&quot;&gt;Regex::MatchData&lt;/a&gt;&lt;/code&gt; if the expression matched, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">当使用 &lt;code&gt;&lt;a href=&quot;regex#match(str,pos=0,options=Regex::Options::None):MatchData?-instance-method&quot;&gt;#match&lt;/a&gt;&lt;/code&gt; 匹配正则表达式时（ &lt;code&gt;&lt;a href=&quot;string#match(regex:Regex,pos=0):Regex::MatchData?-instance-method&quot;&gt;String#match&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;regex#match(str,pos=0,options=Regex::Options::None):MatchData?-instance-method&quot;&gt;Regex#match&lt;/a&gt;&lt;/code&gt; ），如果表达式匹配，则返回值将是 &lt;code&gt;&lt;a href=&quot;regex/matchdata&quot;&gt;Regex::MatchData&lt;/a&gt;&lt;/code&gt; ，否则为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="617859181ed838f09a5630f80b06c69f1a7381cb" translate="yes" xml:space="preserve">
          <source>When parsing a request, the server keeps track of the amount of total bytes consumed for all headers (including line breaks). If combined byte size of all headers is larger than the permitted size, the server responds with the status code &lt;code&gt;432 &lt;a href=&quot;request&quot;&gt;Request&lt;/a&gt; Header Fields Too Large&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;status#REQUEST_HEADER_FIELDS_TOO_LARGE&quot;&gt;HTTP::Status::REQUEST_HEADER_FIELDS_TOO_LARGE&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">解析请求时，服务器会跟踪所有标头（包括换行符）消耗的总字节数。如果所有标头的总字节大小大于允许的大小，则服务器将以状态码 &lt;code&gt;432 &lt;a href=&quot;request&quot;&gt;Request&lt;/a&gt; Header Fields Too Large&lt;/code&gt; （请参阅 &lt;code&gt;&lt;a href=&quot;status#REQUEST_HEADER_FIELDS_TOO_LARGE&quot;&gt;HTTP::Status::REQUEST_HEADER_FIELDS_TOO_LARGE&lt;/a&gt;&lt;/code&gt; ）进行响应。</target>
        </trans-unit>
        <trans-unit id="33e8f3f1aba28c1e996141945e9a89f49e39aeb6" translate="yes" xml:space="preserve">
          <source>When reading values from the database there is no type information during compile time that crystal can use. You will need to call &lt;code&gt;rs.read(T)&lt;/code&gt; with the type &lt;code&gt;T&lt;/code&gt; you expect to get from the database.</source>
          <target state="translated">从数据库读取值时，在编译期间没有Crystal可以使用的类型信息。您将需要使用期望从数据库中获取的类型 &lt;code&gt;T&lt;/code&gt; 来调用 &lt;code&gt;rs.read(T)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e06d724d46b4cfa945e728f651d80f4c622137ee" translate="yes" xml:space="preserve">
          <source>When reading zip files, CRC32 checksum values are automatically verified when finishing reading an entry, and &lt;code&gt;&lt;a href=&quot;zip/error&quot;&gt;Zip::Error&lt;/a&gt;&lt;/code&gt; will be raised if the computed CRC32 checksum does not match.</source>
          <target state="translated">读取zip文件时，在完成读取条目后会自动验证CRC32校验和值，如果计算出的CRC32校验和不匹配，则会引发 &lt;code&gt;&lt;a href=&quot;zip/error&quot;&gt;Zip::Error&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7de5ccadaf816f318fd75b70c13191137e7d171e" translate="yes" xml:space="preserve">
          <source>When specifying a type, all elements in a tuple must match that type. Additionally, the empty-tuple doesn't match any of the above cases. If you want to support the empty-tuple case, add another overload:</source>
          <target state="translated">当指定一个类型时,元组中的所有元素必须与该类型相匹配。此外,空元组不符合上述任何一种情况。如果你想支持空元组的情况,可以再添加一个重载。</target>
        </trans-unit>
        <trans-unit id="1f8ad720854ad3c6ad1ac8641ed9579ddfb212cd" translate="yes" xml:space="preserve">
          <source>When substitution is performed, any backreferences found in &lt;em&gt;replacement&lt;/em&gt; will be replaced with the contents of the corresponding capture group in &lt;em&gt;pattern&lt;/em&gt;. Backreferences to capture groups that were not present in &lt;em&gt;pattern&lt;/em&gt; or that did not match will be skipped. See &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; for information about capture groups.</source>
          <target state="translated">执行&lt;em&gt;替换&lt;/em&gt;时，&lt;em&gt;替换中&lt;/em&gt;发现的任何反向引用都将被&lt;em&gt;pattern中&lt;/em&gt;相应捕获组的内容替换。捕获&lt;em&gt;模式&lt;/em&gt;中不存在或不匹配的捕获组的反向引用将被跳过。有关捕获组的信息，请参见正则 &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3021d5d4ec6152b0b310d0086218e942797ce3d9" translate="yes" xml:space="preserve">
          <source>When there are capture groups having same name, it returns the last matched capture group.</source>
          <target state="translated">当有相同名称的捕获组时,返回最后一个匹配的捕获组。</target>
        </trans-unit>
        <trans-unit id="0ae90f5899566ff8ad6cb3e5b61ed2d03f801ea2" translate="yes" xml:space="preserve">
          <source>When there are many arguments, the order of the names in the invocation doesn't matter, as long as all required arguments are covered:</source>
          <target state="translated">当有很多参数时,调用中名称的顺序并不重要,只要覆盖所有需要的参数即可。</target>
        </trans-unit>
        <trans-unit id="5adf61457b779c1252aad7263b244bd333ab7d8f" translate="yes" xml:space="preserve">
          <source>When they're defined inside a class or module scope it is easier to use &lt;code&gt;self&lt;/code&gt; instead of the class name.</source>
          <target state="translated">在类或模块范围内定义它们时，使用 &lt;code&gt;self&lt;/code&gt; 而不是类名会更容易。</target>
        </trans-unit>
        <trans-unit id="001e140cdacafc1f36be1b408f56a036b7e679f9" translate="yes" xml:space="preserve">
          <source>When this device is opened using &lt;code&gt;File.open&lt;/code&gt;, read operations will always return EOF, and any data written will be immediately discarded.</source>
          <target state="translated">使用 &lt;code&gt;File.open&lt;/code&gt; 打开此设备时，读取操作将始终返回EOF，并且写入的任何数据将立即被丢弃。</target>
        </trans-unit>
        <trans-unit id="73daf9e200faa8215cd8558e8ab7817540123704" translate="yes" xml:space="preserve">
          <source>When this is a TTY device, &lt;code&gt;sync&lt;/code&gt; will be true for it at the start of the program.</source>
          <target state="translated">如果是TTY设备，则在程序启动时对其进行 &lt;code&gt;sync&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b7b7089d2d9bb760d564e78d1a543f979ffa356b" translate="yes" xml:space="preserve">
          <source>When used in an &lt;code&gt;if&lt;/code&gt; in conjunction with a variable, &lt;code&gt;is_a?&lt;/code&gt;, &lt;code&gt;responds_to?&lt;/code&gt; or &lt;code&gt;nil?&lt;/code&gt; the compiler will restrict the types accordingly:</source>
          <target state="translated">当在一个用于 &lt;code&gt;if&lt;/code&gt; 结合的变量， &lt;code&gt;is_a?&lt;/code&gt; ， &lt;code&gt;responds_to?&lt;/code&gt; 还是 &lt;code&gt;nil?&lt;/code&gt; 编译器将相应地限制类型：</target>
        </trans-unit>
        <trans-unit id="7c4cc4371210a836e0f413c784a85f323d5a33db" translate="yes" xml:space="preserve">
          <source>When using blocks with &lt;code&gt;yield&lt;/code&gt;, the blocks are &lt;strong&gt;always&lt;/strong&gt; inlined: no closures, calls or function pointers are involved. This means that this:</source>
          <target state="translated">当使用带有 &lt;code&gt;yield&lt;/code&gt; 的块时，这些块&lt;strong&gt;总是&lt;/strong&gt;内联的：不涉及闭包，调用或函数指针。这意味着：</target>
        </trans-unit>
        <trans-unit id="26656e1a4a0a6c6113ce3763c3c7a26f6b411f63" translate="yes" xml:space="preserve">
          <source>When using mutable data types as keys, changing the value of a key after it was inserted into the &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; may lead to undefined behaviour. This method re-indexes the hash using the current key values.</source>
          <target state="translated">当使用可变数据类型作为键时，在将键插 &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; 后更改键的值可能会导致不确定的行为。此方法使用当前键值重新索引哈希。</target>
        </trans-unit>
        <trans-unit id="d5e4ab926d78e833a0a698c1ef89fa9d0696f1c5" translate="yes" xml:space="preserve">
          <source>When we check to see if a particular regular expression describes a string, we can say that we are performing a match or matching one against the other. If we find that a regular expression does describe a string, we say that it matches, and we can refer to a part of the string that was described as a match.</source>
          <target state="translated">当我们检查一个特定的正则表达式是否描述了一个字符串时,我们可以说我们是在进行匹配,或者是将一个字符串与另一个字符串进行匹配。如果我们发现一个正则表达式确实描述了一个字符串,我们就说它是匹配的,我们可以把字符串中被描述为匹配的一部分引用出来。</target>
        </trans-unit>
        <trans-unit id="39a7b0c65bad919834280a470ae341609b4cd66c" translate="yes" xml:space="preserve">
          <source>When working with databases, it is common to need to group operations in such a way that if one fails, then we can go back to the latest safe state. This solution is described in the &lt;strong&gt;transaction paradigm&lt;/strong&gt;, and is implemented by most database engines as it is necessary to meet ACID properties (Atomicity, Consistency, Isolation, Durability) &lt;sup&gt;&lt;a href=&quot;#fn_ACID&quot; id=&quot;reffn_ACID&quot;&gt;ACID&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">在使用数据库时，通常需要以某种方式对操作进行分组，如果操作失败，则可以返回到最新的安全状态。此溶液在中描述了&lt;strong&gt;交易范式&lt;/strong&gt;，并且通过大多数数据库引擎实现，因为它是要满足ACID属性（原子性，一致性，隔离性和持久性）&lt;sup&gt;&lt;a href=&quot;#fn_ACID&quot; id=&quot;reffn_ACID&quot;&gt;ACID&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="ce264c4cbf58c67357b4bd48c84ba8ce75aa7f04" translate="yes" xml:space="preserve">
          <source>When writing custom types, always be sure to override &lt;code&gt;to_s(io)&lt;/code&gt;, not &lt;code&gt;to_s&lt;/code&gt;, and avoid creating intermediate strings in that method. For example:</source>
          <target state="translated">编写自定义类型时，请始终确保覆盖 &lt;code&gt;to_s(io)&lt;/code&gt; 而不是 &lt;code&gt;to_s&lt;/code&gt; ，并避免在该方法中创建中间字符串。例如：</target>
        </trans-unit>
        <trans-unit id="634b9ff31c6e75d9e4e53f9b0e416dc6ba0cc0f9" translate="yes" xml:space="preserve">
          <source>When writing macros (especially outside of a macro definition) it is important to remember that the generated code from the macro must be valid Crystal code by itself even before it is merged into the main program's code. This means, for example, a macro cannot generate a one or more &lt;code&gt;when&lt;/code&gt; expressions of a &lt;code&gt;case&lt;/code&gt; statement unless &lt;code&gt;case&lt;/code&gt; was a part of the generated code.</source>
          <target state="translated">在编写宏时（尤其是在宏定义之外），重要的是要记住从宏生成的代码本身必须是有效的Crystal代码，即使在将其合并到主程序的代码之前也是如此。这意味着，例如， &lt;code&gt;when&lt;/code&gt; &lt;code&gt;case&lt;/code&gt; 语句的表达式时，宏不能生成一个或多个，除非 &lt;code&gt;case&lt;/code&gt; 是所生成代码的一部分。</target>
        </trans-unit>
        <trans-unit id="4a2ff1337f892c7263b4813735bcd04bc80f2255" translate="yes" xml:space="preserve">
          <source>When:</source>
          <target state="translated">When:</target>
        </trans-unit>
        <trans-unit id="b25158335aa115664cbb55e163735aa8751fd904" translate="yes" xml:space="preserve">
          <source>Whether automatic compression/decompression is enabled.</source>
          <target state="translated">是否启用自动压缩/解压缩。</target>
        </trans-unit>
        <trans-unit id="263c2f35370bd9753b96e40211b6be44dd7c7d23" translate="yes" xml:space="preserve">
          <source>Whether the collection contains any cookies.</source>
          <target state="translated">该集合是否包含任何cookies。</target>
        </trans-unit>
        <trans-unit id="8a9c53a171c75cc2f14fdcd43389db27d6c4009c" translate="yes" xml:space="preserve">
          <source>Whether the method accepts a &lt;a href=&quot;blocks_and_procs&quot;&gt;block&lt;/a&gt; or not</source>
          <target state="translated">无论方法接受&lt;a href=&quot;blocks_and_procs&quot;&gt;块&lt;/a&gt;或不</target>
        </trans-unit>
        <trans-unit id="fd17691cf13d1588973f92c5297c06f6ac7994a9" translate="yes" xml:space="preserve">
          <source>Whether the process is still registered in the system.</source>
          <target state="translated">进程是否还在系统中登记。</target>
        </trans-unit>
        <trans-unit id="b8b10987810de4336f0dfccf6fda68a9995c9d85" translate="yes" xml:space="preserve">
          <source>Whether the process is still registered in the system. Note that this returns &lt;code&gt;true&lt;/code&gt; for processes in the zombie or similar state.</source>
          <target state="translated">该进程是否仍在系统中注册。请注意，对于处于僵尸或类似状态的进程，此方法返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="56d5e876e5af496c53fed2ae3d6073cabf0a18ba" translate="yes" xml:space="preserve">
          <source>Whether this process is already terminated.</source>
          <target state="translated">这个过程是否已经终止。</target>
        </trans-unit>
        <trans-unit id="efbdb31e09cb5a959bccdcfd1274113db2fdc306" translate="yes" xml:space="preserve">
          <source>Whether to close the enclosed &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; when closing this reader.</source>
          <target state="translated">关闭此阅读器时是否关闭随附的 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be40a64b37f0a2356d5d95cff70d2b729d1f3eac" translate="yes" xml:space="preserve">
          <source>Whether to close the enclosed &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; when closing this writer.</source>
          <target state="translated">关闭此 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 时是否关闭封闭的IO。</target>
        </trans-unit>
        <trans-unit id="bd0212975e2426e443c25e9d729a9ee28488d4f2" translate="yes" xml:space="preserve">
          <source>Which would print:</source>
          <target state="translated">这将打印。</target>
        </trans-unit>
        <trans-unit id="81de44b5227f9f0f324415c473553d0f44b2cbb3" translate="yes" xml:space="preserve">
          <source>While a pointer is unsafe because no bound checks are performed when reading from and writing to it, reading from and writing to a slice involve bound checks. In this way, a slice is a safe alternative to &lt;code&gt;&lt;a href=&quot;pointer&quot;&gt;Pointer&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">虽然指针是不安全的，因为在读取和写入切片时未执行任何边界检查，但是从切片进行读取和写入涉及边界检查。这样，切片是 &lt;code&gt;&lt;a href=&quot;pointer&quot;&gt;Pointer&lt;/a&gt;&lt;/code&gt; 的安全替代方法。</target>
        </trans-unit>
        <trans-unit id="e0dfc9e110b3e75ac57c141d946404aa67a34e4c" translate="yes" xml:space="preserve">
          <source>While command literals may prove useful for simple script-like tools, special caution is advised when interpolating user input because it may easily lead to command injection.</source>
          <target state="translated">虽然命令符可能被证明对简单的脚本类工具很有用,但在插入用户输入时,建议特别小心,因为它可能很容易导致命令注入。</target>
        </trans-unit>
        <trans-unit id="e68b71d8931db3b922a296e9d3d25004aaec85cd" translate="yes" xml:space="preserve">
          <source>While this fiber is waiting this time, other ready-to-execute fibers might start their execution.</source>
          <target state="translated">在这个光纤等待的这段时间,其他准备执行的光纤可能会开始执行。</target>
        </trans-unit>
        <trans-unit id="47b13cdb0607925057b8e9d36b0386d1a11eb54c" translate="yes" xml:space="preserve">
          <source>Whitespace</source>
          <target state="translated">Whitespace</target>
        </trans-unit>
        <trans-unit id="d77989c1e3c0e0ace735631597dc367ffdfa6f32" translate="yes" xml:space="preserve">
          <source>Why?</source>
          <target state="translated">Why?</target>
        </trans-unit>
        <trans-unit id="f583a7541c164157a8654112300b059486bd5afd" translate="yes" xml:space="preserve">
          <source>Windows Subsystem for Linux</source>
          <target state="translated">Linux的Windows子系统</target>
        </trans-unit>
        <trans-unit id="fb6c9d03e86d9be86fc4457ee316d6cbed8acb5f" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;alias&lt;/code&gt; you can give a type a different name:</source>
          <target state="translated">使用 &lt;code&gt;alias&lt;/code&gt; 您可以为类型指定其他名称：</target>
        </trans-unit>
        <trans-unit id="9b7d5aebe67be7ddd84d833a5be6936fbaa1d16c" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;ensure&lt;/code&gt;:</source>
          <target state="translated">与 &lt;code&gt;ensure&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c4ff18e82ca0e1149302f2d28afc6551c92e050a" translate="yes" xml:space="preserve">
          <source>With Colorize you can change the fore- and background colors and text decorations when rendering text on terminals supporting ANSI escape codes. It adds the &lt;code&gt;colorize&lt;/code&gt; method to &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; and thus all classes as its main interface, which calls &lt;code&gt;to_s&lt;/code&gt; and surrounds it with the necessary escape codes when it comes to obtaining a string representation of the object.</source>
          <target state="translated">使用Colorize，可以在支持ANSI转义码的终端上渲染文本时更改前景色和背景色以及文字装饰。它将 &lt;code&gt;colorize&lt;/code&gt; 方法添加到 &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; 并因此将所有类添加为其对象的主接口，该方法调用 &lt;code&gt;to_s&lt;/code&gt; 并在获取对象的字符串表示形式时将其用必要的转义代码包围。</target>
        </trans-unit>
        <trans-unit id="0fd21e2e5baf3b7c8c60d8be46e5cd501754d48a" translate="yes" xml:space="preserve">
          <source>With a block, an &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; body is returned and the response's body is available as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; by invoking &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用一个块，将返回 &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; 主体，并且通过调用 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 可以将响应的主体作为 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 使用。</target>
        </trans-unit>
        <trans-unit id="2472a8a9f4056a0d2570b39f6d8fa4378a9f5a86" translate="yes" xml:space="preserve">
          <source>With a buffered channel, invoking &lt;code&gt;send&lt;/code&gt; won't switch to another fiber unless the buffer is full:</source>
          <target state="translated">使用缓冲通道时，除非缓冲区已满，调用 &lt;code&gt;send&lt;/code&gt; 不会切换到另一根光纤：</target>
        </trans-unit>
        <trans-unit id="fc47ad57935a23706e182e1fc2680912076c554b" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;toggle&lt;/code&gt; method you can temporarily disable adding the escape codes. Settings of the instance are preserved however and can be turned back on later:</source>
          <target state="translated">使用 &lt;code&gt;toggle&lt;/code&gt; 方法，您可以暂时禁用添加转义码。但是，实例的设置会保留下来，以后可以重新打开：</target>
        </trans-unit>
        <trans-unit id="b1d438120e8e429ac1681bae07d8260388a11318" translate="yes" xml:space="preserve">
          <source>With this in mind, we present the following example:</source>
          <target state="translated">考虑到这一点,我们提出以下的例子。</target>
        </trans-unit>
        <trans-unit id="3a797eb8697a5df49a6f8a648a3ce53245062c17" translate="yes" xml:space="preserve">
          <source>With type restrictions</source>
          <target state="translated">有类型限制</target>
        </trans-unit>
        <trans-unit id="3de8fad554a89baa6f0efa10b103df6e113caa42" translate="yes" xml:space="preserve">
          <source>Within &lt;em&gt;replacement&lt;/em&gt;, the special match variable &lt;code&gt;$~&lt;/code&gt; will not refer to the current match.</source>
          <target state="translated">在&lt;em&gt;replace中&lt;/em&gt;，特殊匹配变量 &lt;code&gt;$~&lt;/code&gt; 将不引用当前匹配项。</target>
        </trans-unit>
        <trans-unit id="6af64754a32146d98455ef6bbb8f403ebc27eb4e" translate="yes" xml:space="preserve">
          <source>Within a &lt;code&gt;describe&lt;/code&gt; block, concrete test cases are defined with &lt;code&gt;it&lt;/code&gt; . A descriptive string is supplied to &lt;code&gt;it&lt;/code&gt; describing what the test case tests specifically.</source>
          <target state="translated">在 &lt;code&gt;describe&lt;/code&gt; 块中，用 &lt;code&gt;it&lt;/code&gt; 定义了具体的测试用例。提供给 &lt;code&gt;it&lt;/code&gt; 一个描述性字符串，描述测试用例的具体测试内容。</target>
        </trans-unit>
        <trans-unit id="4f462993d17edb380326f5e139a69e55a9d027a6" translate="yes" xml:space="preserve">
          <source>Within a class, separate method definitions, constants and inner class definitions with &lt;strong&gt;one newline&lt;/strong&gt;. For example:</source>
          <target state="translated">在一个类中，使用&lt;strong&gt;一个newline&lt;/strong&gt;分隔单独的方法定义，常量和内部类定义。例如：</target>
        </trans-unit>
        <trans-unit id="42f27f114cc575cf0b2a662c3c1856a0ca4435e1" translate="yes" xml:space="preserve">
          <source>Within a project:</source>
          <target state="translated">在一个项目内。</target>
        </trans-unit>
        <trans-unit id="a53de957a76fa1e56f353ccce1baf1447eebdd09" translate="yes" xml:space="preserve">
          <source>Within the format string, any characters other than format specifiers (specifiers beginning with &lt;code&gt;%&lt;/code&gt;) are copied to the result.</source>
          <target state="translated">在格式字符串中，格式说明符（以 &lt;code&gt;%&lt;/code&gt; 开头的说明符）以外的任何其他字符都将复制到结果中。</target>
        </trans-unit>
        <trans-unit id="c05ab0bf2aac1c91eae67999b0515c7d18e17eae" translate="yes" xml:space="preserve">
          <source>Without a block, an &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; is returned and the response's body is available as a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; by invoking &lt;code&gt;&lt;a href=&quot;client/response#body-instance-method&quot;&gt;HTTP::Client::Response#body&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果没有块，则返回 &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; ，并且通过调用 &lt;code&gt;&lt;a href=&quot;client/response#body-instance-method&quot;&gt;HTTP::Client::Response#body&lt;/a&gt;&lt;/code&gt; 可以将响应的主体用作 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17315f4fae1ec0bc32c55f510976225cf525d782" translate="yes" xml:space="preserve">
          <source>Without arguments or parentheses, &lt;code&gt;previous_def&lt;/code&gt; receives the same arguments as the method's arguments. Otherwise, it receives the arguments you pass to it.</source>
          <target state="translated">没有参数或括号的情况下， &lt;code&gt;previous_def&lt;/code&gt; 会收到与方法的参数相同的参数。否则，它将接收您传递给它的参数。</target>
        </trans-unit>
        <trans-unit id="c45858bb66ba36a38e72384ae52ea7e3aec4a151" translate="yes" xml:space="preserve">
          <source>Without arguments or parentheses, &lt;code&gt;super&lt;/code&gt; receives the same arguments as the method's arguments. Otherwise, it receives the arguments you pass to it.</source>
          <target state="translated">如果没有参数或括号，则 &lt;code&gt;super&lt;/code&gt; 接收与方法的参数相同的参数。否则，它将接收您传递给它的参数。</target>
        </trans-unit>
        <trans-unit id="5bd9eee344a3184486d9c3fc5faf0ab423990cec" translate="yes" xml:space="preserve">
          <source>Without type restrictions</source>
          <target state="translated">无类型限制</target>
        </trans-unit>
        <trans-unit id="85b7e36173f0d027de5570ab6ac3320244cc2ce6" translate="yes" xml:space="preserve">
          <source>Wraps an IO by calculating a specified digest on read or write operations.</source>
          <target state="translated">通过在读或写操作中计算指定的摘要来包装一个IO。</target>
        </trans-unit>
        <trans-unit id="25f5fc9dff1ee900512076ea6485ef1156fe323b" translate="yes" xml:space="preserve">
          <source>Wraps around exceptions re-raised from concurrent calls. The original exception can be accessed via &lt;code&gt;#cause&lt;/code&gt;.</source>
          <target state="translated">从并发调用引发的异常包装。原始异常可以通过 &lt;code&gt;#cause&lt;/code&gt; 访问。</target>
        </trans-unit>
        <trans-unit id="66e8f769e9839f5ed8a9120a4e4b603bad4b319a" translate="yes" xml:space="preserve">
          <source>Write &lt;a href=&quot;documenting_code&quot;&gt;documentation&lt;/a&gt; to express the purpose of your code and support the &lt;code&gt;crystal docs&lt;/code&gt; generator.</source>
          <target state="translated">编写&lt;a href=&quot;documenting_code&quot;&gt;文档&lt;/a&gt;来表达代码的目的并支持 &lt;code&gt;crystal docs&lt;/code&gt; generator。</target>
        </trans-unit>
        <trans-unit id="5f435830a7c07f19c4072a88821b38028c3f69e6" translate="yes" xml:space="preserve">
          <source>Writer</source>
          <target state="translated">Writer</target>
        </trans-unit>
        <trans-unit id="3e027fba7b7e02a1cbb86a1299bb839b38953346" translate="yes" xml:space="preserve">
          <source>Writer zip files</source>
          <target state="translated">编写器压缩文件</target>
        </trans-unit>
        <trans-unit id="f16a74322b8c295cc62484b7b2435ad5c5ac9f52" translate="yes" xml:space="preserve">
          <source>Writer#add</source>
          <target state="translated">Writer#add</target>
        </trans-unit>
        <trans-unit id="514633d6687b9e2aafc037175131638304a1d721" translate="yes" xml:space="preserve">
          <source>Writer#add_dir</source>
          <target state="translated">Writer#add_dir</target>
        </trans-unit>
        <trans-unit id="24c04f4db2fce04982046c9a63270ee3e144b0ff" translate="yes" xml:space="preserve">
          <source>Writer#close</source>
          <target state="translated">Writer#close</target>
        </trans-unit>
        <trans-unit id="7a0fc1b8c0d66d0f47f0e22bc8633ad362018aea" translate="yes" xml:space="preserve">
          <source>Writer#closed?</source>
          <target state="translated">Writer#closed?</target>
        </trans-unit>
        <trans-unit id="180e71699aeb7efc2ab07bc40eca9d3a625c62bb" translate="yes" xml:space="preserve">
          <source>Writer#comment=</source>
          <target state="translated">Writer#comment=</target>
        </trans-unit>
        <trans-unit id="a76227bb1e9f735f0ea903bbd93e4403cce3f12c" translate="yes" xml:space="preserve">
          <source>Writer#flush</source>
          <target state="translated">Writer#flush</target>
        </trans-unit>
        <trans-unit id="1783d6d7cdedf83ef03dee082e6911625034cf91" translate="yes" xml:space="preserve">
          <source>Writer#header</source>
          <target state="translated">Writer#header</target>
        </trans-unit>
        <trans-unit id="e9e1f3e11dc6e4770fd226744bc8454a682db2b2" translate="yes" xml:space="preserve">
          <source>Writer#read</source>
          <target state="translated">Writer#read</target>
        </trans-unit>
        <trans-unit id="96325ec91e5a2ff7f6829ef9f7e7491e4d0f6b76" translate="yes" xml:space="preserve">
          <source>Writer#sync_close=</source>
          <target state="translated">Writer#sync_close=</target>
        </trans-unit>
        <trans-unit id="a1afec2482550863fbdc19bb5a43c49d0fa65c1a" translate="yes" xml:space="preserve">
          <source>Writer#sync_close?</source>
          <target state="translated">Writer#sync_close?</target>
        </trans-unit>
        <trans-unit id="65c602b2061cd2ffe94354722a01c8f0e8497fd3" translate="yes" xml:space="preserve">
          <source>Writer#write</source>
          <target state="translated">Writer#write</target>
        </trans-unit>
        <trans-unit id="e6c1e352e13c0816a1cf726241b92a2243d7e2ad" translate="yes" xml:space="preserve">
          <source>Writer.new</source>
          <target state="translated">Writer.new</target>
        </trans-unit>
        <trans-unit id="5d73cd2332828de9ed803ccc91628075bd96182f" translate="yes" xml:space="preserve">
          <source>Writer.open</source>
          <target state="translated">Writer.open</target>
        </trans-unit>
        <trans-unit id="12826c57d97f938320d9c16815ed378824c497f2" translate="yes" xml:space="preserve">
          <source>Writer::Entry</source>
          <target state="translated">Writer::Entry</target>
        </trans-unit>
        <trans-unit id="8415a033e8953bf71c48b0761ff7d7d4dad72fad" translate="yes" xml:space="preserve">
          <source>Writes (streams) zip entries to an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将zip条目写入（流式）到 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb64dcc46c7407a52e9c31a2051611ef35b5ea3c" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;&quot;nil&quot;&lt;/code&gt; to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;&quot;nil&quot;&lt;/code&gt; 写入给定的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fdb3636a4a8e2f592ed3860e6b30a0e599d2a09c" translate="yes" xml:space="preserve">
          <source>Writes JSON into the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将JSON写入给定的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="cb2fa80e4b8531d76c33c27ffb05f5fbe64d072f" translate="yes" xml:space="preserve">
          <source>Writes JSON into the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. A &lt;code&gt;&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;&lt;/code&gt; is yielded to the block.</source>
          <target state="translated">将JSON写入给定的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 中。一个 &lt;code&gt;&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;&lt;/code&gt; 是顺水推舟块。</target>
        </trans-unit>
        <trans-unit id="17265cccd9dc2ba6ddbcf61ffd1f8ca20bd0068d" translate="yes" xml:space="preserve">
          <source>Writes XML into the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将XML写入给定的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="b76b0f938841e8b4de072223ea1a25584d25c582" translate="yes" xml:space="preserve">
          <source>Writes XML into the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. An &lt;code&gt;&lt;a href=&quot;xml/builder&quot;&gt;XML::Builder&lt;/a&gt;&lt;/code&gt; is yielded to the block.</source>
          <target state="translated">将XML写入给定的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 中。一个 &lt;code&gt;&lt;a href=&quot;xml/builder&quot;&gt;XML::Builder&lt;/a&gt;&lt;/code&gt; 是顺水推舟块。</target>
        </trans-unit>
        <trans-unit id="fa14b7621b3a70dff2d2f3a105d979def8e0c451" translate="yes" xml:space="preserve">
          <source>Writes YAML into the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将YAML写入给定的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="089f3ade65fd7f6c0d400e808d5100e10fcc82e5" translate="yes" xml:space="preserve">
          <source>Writes YAML into the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. A &lt;code&gt;&lt;a href=&quot;yaml/builder&quot;&gt;YAML::Builder&lt;/a&gt;&lt;/code&gt; is yielded to the block.</source>
          <target state="translated">将YAML写入给定的 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 中。一个 &lt;code&gt;&lt;a href=&quot;yaml/builder&quot;&gt;YAML::Builder&lt;/a&gt;&lt;/code&gt; 是顺水推舟块。</target>
        </trans-unit>
        <trans-unit id="bbde4e46ec8d184f0d2a9fbc7c3f8c31c7cd24a8" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;&lt;a href=&quot;builder#null-instance-method&quot;&gt;#null&lt;/a&gt;&lt;/code&gt; value.</source>
          <target state="translated">写入 &lt;code&gt;&lt;a href=&quot;builder#null-instance-method&quot;&gt;#null&lt;/a&gt;&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="0cb44b18ab7a868d83da8614106d44d08414598b" translate="yes" xml:space="preserve">
          <source>Writes a boolean value.</source>
          <target state="translated">写一个布尔值。</target>
        </trans-unit>
        <trans-unit id="ad6f303de67f6f64391dcffd1997c880e0b48ec8" translate="yes" xml:space="preserve">
          <source>Writes a byte to &lt;code&gt;writer&lt;/code&gt;.</source>
          <target state="translated">向 &lt;code&gt;writer&lt;/code&gt; 写一个字节。</target>
        </trans-unit>
        <trans-unit id="df016762d86774ad6f136183d5eadccc68d018b1" translate="yes" xml:space="preserve">
          <source>Writes a float.</source>
          <target state="translated">写一个浮动。</target>
        </trans-unit>
        <trans-unit id="d08b2bd68b87a87f182815a85244973218c05865" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this IO.</source>
          <target state="translated">将一个格式化的字符串写入该IO。</target>
        </trans-unit>
        <trans-unit id="b52f29a1311b8994824b724c4d09d1ee4e7c939b" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this IO. For details on the format string, see &lt;code&gt;Kernel::sprintf&lt;/code&gt;.</source>
          <target state="translated">将格式化的字符串写入此IO。有关格式字符串的详细信息，请参见 &lt;code&gt;Kernel::sprintf&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb18b1353d53796c65bfab0bce5e3151631b33c0" translate="yes" xml:space="preserve">
          <source>Writes a newline character.</source>
          <target state="translated">写一个新行字符。</target>
        </trans-unit>
        <trans-unit id="83a71725897433436fe7ae0e8b66bf5cff32246e" translate="yes" xml:space="preserve">
          <source>Writes a raw value, considered a scalar, directly into the IO without processing.</source>
          <target state="translated">将一个原始值(被认为是一个标量)不经处理直接写入IO中。</target>
        </trans-unit>
        <trans-unit id="b446e682af61abec2fcf131c2263333f26f47eb6" translate="yes" xml:space="preserve">
          <source>Writes a raw value, considered a scalar, directly into the IO without processing. This is the only method that might lead to invalid JSON being generated, so you must be sure that &lt;em&gt;string&lt;/em&gt; contains a valid JSON string.</source>
          <target state="translated">将未经处理的原始值（标量）直接写入IO。这是唯一可能导致生成无效JSON的方法，因此必须确保该&lt;em&gt;字符串&lt;/em&gt;包含有效的JSON字符串。</target>
        </trans-unit>
        <trans-unit id="a2520f397db6fa11afd7bdee497222864a2a686b" translate="yes" xml:space="preserve">
          <source>Writes a representation of the scanner.</source>
          <target state="translated">写出扫描仪的表示。</target>
        </trans-unit>
        <trans-unit id="f8c2edeb7c5515c64d8c52a72d5c5570307c3daf" translate="yes" xml:space="preserve">
          <source>Writes a scalar value.</source>
          <target state="translated">写一个标量值。</target>
        </trans-unit>
        <trans-unit id="e2d6d491c598edca8b168483f90d3d7539121f38" translate="yes" xml:space="preserve">
          <source>Writes a single byte into this &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将单个字节写入此 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="4f4bff845fc335bacbc3b8352a46ee2a318ee6b5" translate="yes" xml:space="preserve">
          <source>Writes a single byte into this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将单个字节写入此 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="31ef2b98c987d14bbddd2b6cbcce499fedfdec98" translate="yes" xml:space="preserve">
          <source>Writes a slice of UTF-8 encoded bytes to this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, using the current encoding.</source>
          <target state="translated">使用当前编码将UTF-8编码字节的一部分写入此 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e07711fc44b1797fb2990548bad2b9486a7406f" translate="yes" xml:space="preserve">
          <source>Writes a slice to &lt;code&gt;writer&lt;/code&gt;.</source>
          <target state="translated">给 &lt;code&gt;writer&lt;/code&gt; 写一片。</target>
        </trans-unit>
        <trans-unit id="74ec57c2fb535f20d2209585efa908df34898e94" translate="yes" xml:space="preserve">
          <source>Writes a string representation of the set to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">将集合的字符串表示形式写入&lt;em&gt;io&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="11a73af4769d2fa84714761c91018f9161b700b9" translate="yes" xml:space="preserve">
          <source>Writes a string.</source>
          <target state="translated">写一个字符串。</target>
        </trans-unit>
        <trans-unit id="f5f813d46cfce4ab9ae3e7b39707ce6714f5c679" translate="yes" xml:space="preserve">
          <source>Writes a string. The given &lt;em&gt;value&lt;/em&gt; is first converted to a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; by invoking &lt;code&gt;to_s&lt;/code&gt; on it.</source>
          <target state="translated">写一个字符串。给定&lt;em&gt;值&lt;/em&gt;首先通过调用 &lt;code&gt;to_s&lt;/code&gt; 转换为 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0758ed5a71a3cb23d2919a124b14cae694726e2" translate="yes" xml:space="preserve">
          <source>Writes an integer.</source>
          <target state="translated">写一个整数。</target>
        </trans-unit>
        <trans-unit id="c9bba8148d7a0b4fa812df04beca10f9ba15d19e" translate="yes" xml:space="preserve">
          <source>Writes an object's field and then invokes the block.</source>
          <target state="translated">写一个对象的字段,然后调用块。</target>
        </trans-unit>
        <trans-unit id="f509c4a70a38e537587b9a5c949113342211a415" translate="yes" xml:space="preserve">
          <source>Writes an object's field and then invokes the block. This is equivalent of invoking &lt;code&gt;&lt;a href=&quot;builder#string(value)-instance-method&quot;&gt;#string(value)&lt;/a&gt;&lt;/code&gt; and then invoking the block.</source>
          <target state="translated">写入对象的字段，然后调用该块。这等效于调用 &lt;code&gt;&lt;a href=&quot;builder#string(value)-instance-method&quot;&gt;#string(value)&lt;/a&gt;&lt;/code&gt; 然后调用块。</target>
        </trans-unit>
        <trans-unit id="3f1dde75164fa79f0d037ed2251bc1f864f01c0e" translate="yes" xml:space="preserve">
          <source>Writes an object's field and value.</source>
          <target state="translated">写入对象的字段和值。</target>
        </trans-unit>
        <trans-unit id="a46aeffe0621112d7786c85886e044f0893bcd1a" translate="yes" xml:space="preserve">
          <source>Writes an object's field and value. The field's name is first converted to a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; by invoking &lt;code&gt;to_s&lt;/code&gt; on it.</source>
          <target state="translated">写入对象的字段和值。首先通过在字段名上调用 &lt;code&gt;to_s&lt;/code&gt; 将其转换为 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1127c3de82653485d37eebad52d573da0e48f040" translate="yes" xml:space="preserve">
          <source>Writes at most &lt;em&gt;slice.size&lt;/em&gt; bytes from &lt;em&gt;slice&lt;/em&gt; into the wrapped &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将&lt;em&gt;slice中的&lt;/em&gt;&lt;em&gt;slice.size&lt;/em&gt;字节最多写入包装的 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 中。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="807eb1c62f92974ce9b54dfae2d8417b19fb952d" translate="yes" xml:space="preserve">
          <source>Writes at most &lt;em&gt;slice.size&lt;/em&gt; bytes from &lt;em&gt;slice&lt;/em&gt; into the wrapped &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. Returns the number of bytes written.</source>
          <target state="translated">将&lt;em&gt;slice中的&lt;/em&gt;&lt;em&gt;slice.size&lt;/em&gt;字节最多写入包装的 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 中。返回写入的字节数。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ed3b964b21c88113e0abfe845eca448171eb703c" translate="yes" xml:space="preserve">
          <source>Writes at most &lt;em&gt;slice.size&lt;/em&gt; bytes from &lt;em&gt;slice&lt;/em&gt; into the wrapped &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将&lt;em&gt;slice中的&lt;/em&gt;&lt;em&gt;slice.size&lt;/em&gt;字节最多写入包装的 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 中。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e5408a020b7d4cee4d94c6c87047eb33122a788f" translate="yes" xml:space="preserve">
          <source>Writes at most &lt;em&gt;slice.size&lt;/em&gt; bytes from &lt;em&gt;slice&lt;/em&gt; into the wrapped &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. Returns the number of bytes written.</source>
          <target state="translated">将&lt;em&gt;slice中的&lt;/em&gt;&lt;em&gt;slice.size&lt;/em&gt;字节最多写入包装的 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 中。返回写入的字节数。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9df75f432134a4e5e207622f87b6dac969886478" translate="yes" xml:space="preserve">
          <source>Writes the base64-decoded version of &lt;em&gt;data&lt;/em&gt; to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">写的基于64位解码版本&lt;em&gt;数据&lt;/em&gt;到&lt;em&gt;io的&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="66ce002d1708046ead4db0ed9f555abe7f317aa0" translate="yes" xml:space="preserve">
          <source>Writes the base64-decoded version of &lt;em&gt;data&lt;/em&gt; to &lt;em&gt;io&lt;/em&gt;. This will decode either the normal or urlsafe alphabets.</source>
          <target state="translated">写的基于64位解码版本&lt;em&gt;数据&lt;/em&gt;到&lt;em&gt;io的&lt;/em&gt;。这将解码普通或urlsafe字母。</target>
        </trans-unit>
        <trans-unit id="fa727f035638530ac8c934c2cb24ca5e37766938" translate="yes" xml:space="preserve">
          <source>Writes the base64-encoded version of &lt;em&gt;data&lt;/em&gt; to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">写的base64编码版本&lt;em&gt;的数据&lt;/em&gt;到&lt;em&gt;IO&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="927c8456975e8f0808c1bd38648f55026e7ffd6c" translate="yes" xml:space="preserve">
          <source>Writes the base64-encoded version of &lt;em&gt;data&lt;/em&gt; to &lt;em&gt;io&lt;/em&gt;. This method complies with &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC 2045&lt;/a&gt;. Line feeds are added to every 60 encoded characters.</source>
          <target state="translated">写的base64编码版本&lt;em&gt;的数据&lt;/em&gt;到&lt;em&gt;IO&lt;/em&gt;。此方法符合&lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC 2045&lt;/a&gt;。将换行符添加到每60个编码字符中。</target>
        </trans-unit>
        <trans-unit id="b2e28847db31cb84e25fcbca4b7e0e5ec5822f44" translate="yes" xml:space="preserve">
          <source>Writes the base64-encoded version of &lt;em&gt;data&lt;/em&gt; using a urlsafe alphabet to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">使用urlsafe字母将base64编码的&lt;em&gt;数据&lt;/em&gt;写入&lt;em&gt;io&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="099168c2656ee14eae53c296d9c97c5b329c30f9" translate="yes" xml:space="preserve">
          <source>Writes the base64-encoded version of &lt;em&gt;data&lt;/em&gt; using a urlsafe alphabet to &lt;em&gt;io&lt;/em&gt;. This method complies with &quot;Base 64 Encoding with URL and Filename Safe Alphabet&quot; in &lt;a href=&quot;https://tools.ietf.org/html/rfc4648&quot;&gt;RFC 4648&lt;/a&gt;.</source>
          <target state="translated">使用urlsafe字母将base64编码的&lt;em&gt;数据&lt;/em&gt;写入&lt;em&gt;io&lt;/em&gt;。此方法符合&lt;a href=&quot;https://tools.ietf.org/html/rfc4648&quot;&gt;RFC 4648中的&lt;/a&gt; &amp;ldquo;使用URL和文件名安全字母进行Base 64编码&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="c8c683f4bf8ee772349aef4fa9d01df911ea9380" translate="yes" xml:space="preserve">
          <source>Writes the base64-encoded version of &lt;em&gt;data&lt;/em&gt; with no newlines to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">将没有换行符的base64编码版本的&lt;em&gt;数据&lt;/em&gt;写入&lt;em&gt;io&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2b4401eb6ae8f21b5a528af64cf9b263cce1a3dc" translate="yes" xml:space="preserve">
          <source>Writes the base64-encoded version of &lt;em&gt;data&lt;/em&gt; with no newlines to &lt;em&gt;io&lt;/em&gt;. This method complies with &lt;a href=&quot;https://tools.ietf.org/html/rfc4648&quot;&gt;RFC 4648&lt;/a&gt;.</source>
          <target state="translated">将没有换行符的base64编码版本的&lt;em&gt;数据&lt;/em&gt;写入&lt;em&gt;io&lt;/em&gt;。此方法符合&lt;a href=&quot;https://tools.ietf.org/html/rfc4648&quot;&gt;RFC 4648&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d40e4c6a167f7e1eb8876c485e1d8a265777c2e5" translate="yes" xml:space="preserve">
          <source>Writes the contents of &lt;em&gt;slice&lt;/em&gt; into this &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将&lt;em&gt;slice&lt;/em&gt;的内容写入此 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="a66395a529daedcde4de56635df754977012f500" translate="yes" xml:space="preserve">
          <source>Writes the contents of &lt;em&gt;slice&lt;/em&gt; into this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将&lt;em&gt;slice&lt;/em&gt;的内容写入此 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="48b26dc3c36781a1e23545de22e108d94f0f53ff" translate="yes" xml:space="preserve">
          <source>Writes the contents of the environment to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">将环境的内容写入&lt;em&gt;io&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0b722ec17722d90b799e2943f8c2b9f6f356c648" translate="yes" xml:space="preserve">
          <source>Writes the end of an array.</source>
          <target state="translated">写一个数组的结束。</target>
        </trans-unit>
        <trans-unit id="ac61dc9847a926e7e9291e3154057a98a1190fb6" translate="yes" xml:space="preserve">
          <source>Writes the end of an object.</source>
          <target state="translated">写出一个对象的结束。</target>
        </trans-unit>
        <trans-unit id="7ad6c71bac590012904fecf0d8370d34b86895d5" translate="yes" xml:space="preserve">
          <source>Writes the given &lt;em&gt;content&lt;/em&gt; to &lt;em&gt;filename&lt;/em&gt;.</source>
          <target state="translated">将给定&lt;em&gt;内容&lt;/em&gt;以&lt;em&gt;文件名&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="15d94e4d453d3eac257ccd3e02b775df641a4424" translate="yes" xml:space="preserve">
          <source>Writes the given object into this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将给定对象写入此 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb77cb83635fe114f8fb11d594d1cb4f2c0867f9" translate="yes" xml:space="preserve">
          <source>Writes the given object into this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. This ends up calling &lt;code&gt;to_s(io)&lt;/code&gt; on the object.</source>
          <target state="translated">将给定对象写入此 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。最终在对象上调用 &lt;code&gt;to_s(io)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="503254e0c03685be9136567b7b97a7fea06820f1" translate="yes" xml:space="preserve">
          <source>Writes the given object to this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; followed by a newline character.</source>
          <target state="translated">将给定对象写入此 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; ,后跟换行符。</target>
        </trans-unit>
        <trans-unit id="f6789b1caaa6c677e43431ba6e39cfb9bd084364" translate="yes" xml:space="preserve">
          <source>Writes the given object to this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; using the specified &lt;em&gt;format&lt;/em&gt;.</source>
          <target state="translated">使用指定的&lt;em&gt;格式&lt;/em&gt;将给定对象写入此 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cb3b0f3c5570f58500fffaf1483440d0a843f18e" translate="yes" xml:space="preserve">
          <source>Writes the given objects into this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; by invoking &lt;code&gt;to_s(io)&lt;/code&gt; on each of the objects.</source>
          <target state="translated">通过在每个对象上调用 &lt;code&gt;to_s(io)&lt;/code&gt; 将给定对象写入此 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dab1ae7926ff3b3c0396049cfb64ebdf2796bd0b" translate="yes" xml:space="preserve">
          <source>Writes the given objects, each followed by a newline character.</source>
          <target state="translated">写入给定的对象,每个对象后面都有一个换行符。</target>
        </trans-unit>
        <trans-unit id="59cd8f0179239c61539dec3b54eb01434af7f92b" translate="yes" xml:space="preserve">
          <source>Writes the given string to this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; followed by a newline character unless the string already ends with one.</source>
          <target state="translated">除非给定的字符串已经以1结尾，否则将给定的字符串写入此 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; ,后跟换行符。</target>
        </trans-unit>
        <trans-unit id="a699feebf27558edf4cf2782b184939d54e72574" translate="yes" xml:space="preserve">
          <source>Writes the start of an array, invokes the block, and the writes the end of it.</source>
          <target state="translated">写入一个数组的开始,调用块,并写出它的结束。</target>
        </trans-unit>
        <trans-unit id="b33a94beb5d0544f3ecf2c52ab51f396578456b2" translate="yes" xml:space="preserve">
          <source>Writes the start of an array.</source>
          <target state="translated">写一个数组的开始。</target>
        </trans-unit>
        <trans-unit id="0f346edab55d6c12a11edbe5e99692209fb68940" translate="yes" xml:space="preserve">
          <source>Writes the start of an object, invokes the block, and the writes the end of it.</source>
          <target state="translated">写出一个对象的开始,调用块,并写出它的结束。</target>
        </trans-unit>
        <trans-unit id="c58148e62f06fc83036e5e7f85cd08a47af253e8" translate="yes" xml:space="preserve">
          <source>Writes the start of an object.</source>
          <target state="translated">写一个对象的开始。</target>
        </trans-unit>
        <trans-unit id="ba2cac3727ce67d31f93e9ca991fac8d13630a6e" translate="yes" xml:space="preserve">
          <source>Writes this complex object to an &lt;em&gt;io&lt;/em&gt;, surrounded by parentheses.</source>
          <target state="translated">将此复杂对象写入&lt;em&gt;io并&lt;/em&gt;用括号括起来。</target>
        </trans-unit>
        <trans-unit id="88bd60efb2b2ed25c062f263bd59b21f3c1db8eb" translate="yes" xml:space="preserve">
          <source>Writes this complex object to an &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">将此复杂对象写入&lt;em&gt;io&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="7baa820c652d2e91479fe8f5a597980a69c276bf" translate="yes" xml:space="preserve">
          <source>Writes this float to the given &lt;em&gt;io&lt;/em&gt; in the given &lt;em&gt;format&lt;/em&gt;.</source>
          <target state="translated">以给定&lt;em&gt;格式&lt;/em&gt;将此float写入给定&lt;em&gt;io&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="10a10cd04bd1c66e1382510f2a8b887204b4330f" translate="yes" xml:space="preserve">
          <source>Writes this float to the given &lt;em&gt;io&lt;/em&gt; in the given &lt;em&gt;format&lt;/em&gt;. See also: &lt;code&gt;&lt;a href=&quot;io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;IO#write_bytes&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">以给定&lt;em&gt;格式&lt;/em&gt;将此float写入给定&lt;em&gt;io&lt;/em&gt;。另请参见： &lt;code&gt;&lt;a href=&quot;io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;IO#write_bytes&lt;/a&gt;&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="76dfe7017c3e70b75da0518bea7363388b514d3f" translate="yes" xml:space="preserve">
          <source>Writes this integer to the given &lt;em&gt;io&lt;/em&gt; in the given &lt;em&gt;format&lt;/em&gt;.</source>
          <target state="translated">以给定&lt;em&gt;格式&lt;/em&gt;将此整数写入给定&lt;em&gt;io&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="972d7da0bba6b4454919328dc42a08143d7c4747" translate="yes" xml:space="preserve">
          <source>Writing Shards</source>
          <target state="translated">书写碎片</target>
        </trans-unit>
        <trans-unit id="8cc32ed79abfe55aa35fa9e35754741801c27148" translate="yes" xml:space="preserve">
          <source>Writing a &lt;code&gt;shard.yml&lt;/code&gt;</source>
          <target state="translated">编写一个 &lt;code&gt;shard.yml&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da1fa564bef3efeff39c1e45a9ed19fc14f8855d" translate="yes" xml:space="preserve">
          <source>Writing a README</source>
          <target state="translated">编写README</target>
        </trans-unit>
        <trans-unit id="c821e42375a670a4bc781478fa473b0fc57ff583" translate="yes" xml:space="preserve">
          <source>Writing a program in a single file is OK for little snippets and small benchmark code. Big programs are better maintained and understood when split across different files.</source>
          <target state="translated">在一个文件中写程序,对于小片段和小基准代码是可以的。大的程序分在不同的文件中,会更好维护和理解。</target>
        </trans-unit>
        <trans-unit id="f9dee0249af03911723455d5b554202517ccd7e2" translate="yes" xml:space="preserve">
          <source>Writing the Code</source>
          <target state="translated">编写代码</target>
        </trans-unit>
        <trans-unit id="03a5ca10c325053e0fb69317de7e2f0d6eb7b1d1" translate="yes" xml:space="preserve">
          <source>Writing:</source>
          <target state="translated">Writing:</target>
        </trans-unit>
        <trans-unit id="5ea7bec8a215209fb7c56a88b99bdd969db8ab9d" translate="yes" xml:space="preserve">
          <source>X86_FastCall</source>
          <target state="translated">X86_FastCall</target>
        </trans-unit>
        <trans-unit id="436faa61dfda3d3668daa44b7f04fc86d44a7f08" translate="yes" xml:space="preserve">
          <source>X86_StdCall</source>
          <target state="translated">X86_StdCall</target>
        </trans-unit>
        <trans-unit id="c0aa9ef764d832b80428d756a731a94251b0e3a1" translate="yes" xml:space="preserve">
          <source>XML</source>
          <target state="translated">XML</target>
        </trans-unit>
        <trans-unit id="eb73598da5fb4744c782bee1964781ab5dbf13c5" translate="yes" xml:space="preserve">
          <source>XML::Attributes</source>
          <target state="translated">XML::Attributes</target>
        </trans-unit>
        <trans-unit id="4ea4147ebc01565f7e040cbcc60560ec794beb5d" translate="yes" xml:space="preserve">
          <source>XML::Builder</source>
          <target state="translated">XML::Builder</target>
        </trans-unit>
        <trans-unit id="8682d0043d6c7d97e4131e4cda241607932fd9b0" translate="yes" xml:space="preserve">
          <source>XML::Error</source>
          <target state="translated">XML::Error</target>
        </trans-unit>
        <trans-unit id="8b766ace3016a5c263e0426618cdc3bff4e3feb9" translate="yes" xml:space="preserve">
          <source>XML::Error#line_number</source>
          <target state="translated">XML::Error#line_number</target>
        </trans-unit>
        <trans-unit id="1462c36a83db30d09f6f47382cc4b269fa32561e" translate="yes" xml:space="preserve">
          <source>XML::Error.errors</source>
          <target state="translated">XML::Error.errors</target>
        </trans-unit>
        <trans-unit id="7f9c1efc7b5a264d403336b1df8485fd3c59626d" translate="yes" xml:space="preserve">
          <source>XML::Error.new</source>
          <target state="translated">XML::Error.new</target>
        </trans-unit>
        <trans-unit id="bf0f23806090b1f0f180f25441c2d6f798170d80" translate="yes" xml:space="preserve">
          <source>XML::Namespace</source>
          <target state="translated">XML::Namespace</target>
        </trans-unit>
        <trans-unit id="fff53db563294df93dde9929471dd47392daff0d" translate="yes" xml:space="preserve">
          <source>XML::Node</source>
          <target state="translated">XML::Node</target>
        </trans-unit>
        <trans-unit id="3fa335e7402194248078e9578ed34753090fe47b" translate="yes" xml:space="preserve">
          <source>XML::NodeSet</source>
          <target state="translated">XML::NodeSet</target>
        </trans-unit>
        <trans-unit id="b6b6ef7fba17f5a9d805521e64893b1a7321909b" translate="yes" xml:space="preserve">
          <source>XML::Reader</source>
          <target state="translated">XML::Reader</target>
        </trans-unit>
        <trans-unit id="045a04aea4dc548b65817325fe68fe6c76aba8f4" translate="yes" xml:space="preserve">
          <source>XML::XPathContext</source>
          <target state="translated">XML::XPathContext</target>
        </trans-unit>
        <trans-unit id="d8e495b812b9dd73d4d51307cfb9189f9f906953" translate="yes" xml:space="preserve">
          <source>XPathContext</source>
          <target state="translated">XPathContext</target>
        </trans-unit>
        <trans-unit id="10ed97b6912dcb363597d7af0d9816d4dc21b71b" translate="yes" xml:space="preserve">
          <source>XPathContext#evaluate</source>
          <target state="translated">XPathContext#evaluate</target>
        </trans-unit>
        <trans-unit id="584205d3d6ac90f487272da76ddb1e0e6a51575d" translate="yes" xml:space="preserve">
          <source>XPathContext#register_namespace</source>
          <target state="translated">XPathContext#register_namespace</target>
        </trans-unit>
        <trans-unit id="2654653f8d720daf7a56c6e6c42e4c7677faf439" translate="yes" xml:space="preserve">
          <source>XPathContext#register_namespaces</source>
          <target state="translated">XPathContext#register_namespaces</target>
        </trans-unit>
        <trans-unit id="2f1f2fc8f5660054a3543291b427d6a55232c588" translate="yes" xml:space="preserve">
          <source>XPathContext#register_variable</source>
          <target state="translated">XPathContext#register_variable</target>
        </trans-unit>
        <trans-unit id="c7fbac7279c9c532610ef5680913595db3f72106" translate="yes" xml:space="preserve">
          <source>XPathContext#register_variables</source>
          <target state="translated">XPathContext#register_variables</target>
        </trans-unit>
        <trans-unit id="8410d282be043f9ed71f0f200d40e01db7ea7234" translate="yes" xml:space="preserve">
          <source>XPathContext#to_unsafe</source>
          <target state="translated">XPathContext#to_unsafe</target>
        </trans-unit>
        <trans-unit id="72e7352811b2bd5ba0c6415fa4e7d9abb31a459e" translate="yes" xml:space="preserve">
          <source>XPathContext.new</source>
          <target state="translated">XPathContext.new</target>
        </trans-unit>
        <trans-unit id="ffbcb202b09db426bae56cf2ffb88f18594f2258" translate="yes" xml:space="preserve">
          <source>YAML</source>
          <target state="translated">YAML</target>
        </trans-unit>
        <trans-unit id="eb419c0f8f423947b2fd271a2789f27ea866358e" translate="yes" xml:space="preserve">
          <source>YAML.dump</source>
          <target state="translated">YAML.dump</target>
        </trans-unit>
        <trans-unit id="5054dcf2fd3c4e067fa105a8266c92af14d1aeed" translate="yes" xml:space="preserve">
          <source>YAML::Any</source>
          <target state="translated">YAML::Any</target>
        </trans-unit>
        <trans-unit id="b3158e18c2213e68ad6ab55b79192dacc43d6405" translate="yes" xml:space="preserve">
          <source>YAML::Builder</source>
          <target state="translated">YAML::Builder</target>
        </trans-unit>
        <trans-unit id="31fc2eede6201174fa45d2c63512975e5fcae2e0" translate="yes" xml:space="preserve">
          <source>YAML::Error</source>
          <target state="translated">YAML::Error</target>
        </trans-unit>
        <trans-unit id="fa32533d0a2aee8c1a44c2bee576095be2e48c6b" translate="yes" xml:space="preserve">
          <source>YAML::Field</source>
          <target state="translated">YAML::Field</target>
        </trans-unit>
        <trans-unit id="6e7fe10f5a3cc6801b33e3dd2b536bbf4dc7fe30" translate="yes" xml:space="preserve">
          <source>YAML::Nodes</source>
          <target state="translated">YAML::Nodes</target>
        </trans-unit>
        <trans-unit id="44874e122becca0d79005a63befbbb37e0b5ec74" translate="yes" xml:space="preserve">
          <source>YAML::Nodes::Alias</source>
          <target state="translated">YAML::Nodes::Alias</target>
        </trans-unit>
        <trans-unit id="746d8930a5dc2b1cee07b0ce566d5db219e06030" translate="yes" xml:space="preserve">
          <source>YAML::Nodes::Builder</source>
          <target state="translated">YAML::Nodes::Builder</target>
        </trans-unit>
        <trans-unit id="175ca53afc9483cdcbaa3cc1c4ff25c84e8a1799" translate="yes" xml:space="preserve">
          <source>YAML::Nodes::Document</source>
          <target state="translated">YAML::Nodes::Document</target>
        </trans-unit>
        <trans-unit id="652c0320be1ac50a3c639f53f1fe3a5020f1108e" translate="yes" xml:space="preserve">
          <source>YAML::Nodes::Mapping</source>
          <target state="translated">YAML::Nodes::Mapping</target>
        </trans-unit>
        <trans-unit id="bddca8a339670008c9a35c48322d3524d81df03c" translate="yes" xml:space="preserve">
          <source>YAML::Nodes::Node</source>
          <target state="translated">YAML::Nodes::Node</target>
        </trans-unit>
        <trans-unit id="79592a66e30fa1cad694d728df33acd973be02d2" translate="yes" xml:space="preserve">
          <source>YAML::Nodes::Scalar</source>
          <target state="translated">YAML::Nodes::Scalar</target>
        </trans-unit>
        <trans-unit id="cf265c0254fd677880a56f4cf180d021b650eb3c" translate="yes" xml:space="preserve">
          <source>YAML::Nodes::Sequence</source>
          <target state="translated">YAML::Nodes::Sequence</target>
        </trans-unit>
        <trans-unit id="d50d91a124046a36f31e713c9c42f13701ac4bc4" translate="yes" xml:space="preserve">
          <source>YAML::ParseContext</source>
          <target state="translated">YAML::ParseContext</target>
        </trans-unit>
        <trans-unit id="13b6c33bc00deddb7812ab236a2cdd25e14052ae" translate="yes" xml:space="preserve">
          <source>YAML::ParseException</source>
          <target state="translated">YAML::ParseException</target>
        </trans-unit>
        <trans-unit id="179f402395ef33a0212eb503f4cbfd2cd5061856" translate="yes" xml:space="preserve">
          <source>YAML::ParseException#column_number</source>
          <target state="translated">YAML::ParseException#column_number</target>
        </trans-unit>
        <trans-unit id="5a74a02d857bd3494b3f46f50bab723b63dbd05d" translate="yes" xml:space="preserve">
          <source>YAML::ParseException#line_number</source>
          <target state="translated">YAML::ParseException#line_number</target>
        </trans-unit>
        <trans-unit id="556f87b4a568eb7a46a5234ff387466cc3d2f0a1" translate="yes" xml:space="preserve">
          <source>YAML::ParseException#location</source>
          <target state="translated">YAML::ParseException#location</target>
        </trans-unit>
        <trans-unit id="aa82ab7e614548bfde840cd3f6a7b25fef6f1710" translate="yes" xml:space="preserve">
          <source>YAML::ParseException.new</source>
          <target state="translated">YAML::ParseException.new</target>
        </trans-unit>
        <trans-unit id="77029a3cb7d1dca5ee67d325ba7056ea7fa398a2" translate="yes" xml:space="preserve">
          <source>YAML::PullParser</source>
          <target state="translated">YAML::PullParser</target>
        </trans-unit>
        <trans-unit id="bc01c0ab4955c6adf693fad59fc069117f5a858b" translate="yes" xml:space="preserve">
          <source>Yield arguments</source>
          <target state="translated">产量参数</target>
        </trans-unit>
        <trans-unit id="f268b514180a5018b99183c7c4b6e899a7327407" translate="yes" xml:space="preserve">
          <source>Yielded by &lt;code&gt;&lt;a href=&quot;../../benchmark#bm(&amp;amp;block)-instance-method&quot;&gt;Benchmark#bm&lt;/a&gt;&lt;/code&gt;, use &lt;code&gt;#report&lt;/code&gt; to report benchmarks.</source>
          <target state="translated">由 &lt;code&gt;&lt;a href=&quot;../../benchmark#bm(&amp;amp;block)-instance-method&quot;&gt;Benchmark#bm&lt;/a&gt;&lt;/code&gt; 产生，使用 &lt;code&gt;#report&lt;/code&gt; 报告基准。</target>
        </trans-unit>
        <trans-unit id="13944defe93d1747e7033b229ba0a2eddf5aa079" translate="yes" xml:space="preserve">
          <source>Yields &lt;code&gt;self&lt;/code&gt; to the block, and then returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;self&lt;/code&gt; 屈服于块，然后返回 &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f19f262cd7c50757c319da7317c8617f0fe239d4" translate="yes" xml:space="preserve">
          <source>Yields &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">产生 &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17c0d4cfc26ca896ddb2fc7414f41c04d733e951" translate="yes" xml:space="preserve">
          <source>Yields &lt;code&gt;self&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; overrides this method and doesn't yield.</source>
          <target state="translated">产生 &lt;code&gt;self&lt;/code&gt; 。 &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; 会覆盖此方法，并且不会屈服。</target>
        </trans-unit>
        <trans-unit id="01a379c55b70f7e9e99dc8e3cef9138edab5215d" translate="yes" xml:space="preserve">
          <source>Yields a &lt;code&gt;&lt;a href=&quot;multipart/builder&quot;&gt;Multipart::Builder&lt;/a&gt;&lt;/code&gt; to the given block, returning the generated message as a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;multipart/builder&quot;&gt;Multipart::Builder&lt;/a&gt;&lt;/code&gt; 给定的块，将生成的消息作为 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="80db921a4bfbb705780fb82f81d741d445f3bab1" translate="yes" xml:space="preserve">
          <source>Yields a &lt;code&gt;&lt;a href=&quot;row&quot;&gt;CSV::Row&lt;/a&gt;&lt;/code&gt; to append a row.</source>
          <target state="translated">产生 &lt;code&gt;&lt;a href=&quot;row&quot;&gt;CSV::Row&lt;/a&gt;&lt;/code&gt; 以追加一行。</target>
        </trans-unit>
        <trans-unit id="2777197e945368bf4ed54bc0e482580c0d409280" translate="yes" xml:space="preserve">
          <source>Yields a &lt;code&gt;&lt;a href=&quot;row&quot;&gt;CSV::Row&lt;/a&gt;&lt;/code&gt; to append a row. A newline is appended to &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; after the block exits.</source>
          <target state="translated">产生 &lt;code&gt;&lt;a href=&quot;row&quot;&gt;CSV::Row&lt;/a&gt;&lt;/code&gt; 以追加一行。块退出后，在 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 上添加一个换行符。</target>
        </trans-unit>
        <trans-unit id="899a8860051cf991498780d393b79590055612b6" translate="yes" xml:space="preserve">
          <source>Yields a block with the chunks in the given size.</source>
          <target state="translated">产生一个包含给定大小的块的块。</target>
        </trans-unit>
        <trans-unit id="e03612458041860d0a9db4ff238f16acb17c832f" translate="yes" xml:space="preserve">
          <source>Yields a context object with an &lt;code&gt;#update(data : String | Bytes)&lt;/code&gt; method available.</source>
          <target state="translated">使用可用的 &lt;code&gt;#update(data : String | Bytes)&lt;/code&gt; 方法产生上下文对象。</target>
        </trans-unit>
        <trans-unit id="9c265dfdb0955c7491201fca4432ab80cd8e5fd9" translate="yes" xml:space="preserve">
          <source>Yields a context object with an &lt;code&gt;#update(data : String | Bytes)&lt;/code&gt; method available. Returns the resulting digest afterwards.</source>
          <target state="translated">使用可用的 &lt;code&gt;#update(data : String | Bytes)&lt;/code&gt; 方法产生上下文对象。之后返回结果摘要。</target>
        </trans-unit>
        <trans-unit id="00c58d031c5cec4ac64f5db8aac7762e4fd97c7a" translate="yes" xml:space="preserve">
          <source>Yields a context object with an &lt;code&gt;#update(data : String | Bytes)&lt;/code&gt; method available. Returns the resulting digest in hexadecimal representation afterwards.</source>
          <target state="translated">使用可用的 &lt;code&gt;#update(data : String | Bytes)&lt;/code&gt; 方法产生上下文对象。之后以十六进制表示形式返回结果摘要。</target>
        </trans-unit>
        <trans-unit id="79c8243a81cf26a1cef092af5feb1961af6bbefe" translate="yes" xml:space="preserve">
          <source>Yields all files that match against any of &lt;em&gt;patterns&lt;/em&gt;.</source>
          <target state="translated">产生与任何&lt;em&gt;模式&lt;/em&gt;匹配的所有文件。</target>
        </trans-unit>
        <trans-unit id="c6d9560885ee443c4dc0c0889a90dd767a7b82ef" translate="yes" xml:space="preserve">
          <source>Yields an &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to read this entry's contents.</source>
          <target state="translated">产生一个 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 以读取此条目的内容。</target>
        </trans-unit>
        <trans-unit id="ad9013dd32816b5871c21f63c25b03ab31446d47" translate="yes" xml:space="preserve">
          <source>Yields an &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to read this entry's contents. Multiple entries can be opened and read concurrently.</source>
          <target state="translated">产生一个 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 以读取此条目的内容。可以同时打开和读取多个条目。</target>
        </trans-unit>
        <trans-unit id="d50260fa44cdbcc73feeca4f3d84de55e88029ef" translate="yes" xml:space="preserve">
          <source>Yields an &lt;code&gt;&lt;a href=&quot;../http/params/builder&quot;&gt;HTTP::Params::Builder&lt;/a&gt;&lt;/code&gt; to add extra parameters other than those defined by the standard.</source>
          <target state="translated">产生 &lt;code&gt;&lt;a href=&quot;../http/params/builder&quot;&gt;HTTP::Params::Builder&lt;/a&gt;&lt;/code&gt; 以添加除标准定义的参数以外的其他参数。</target>
        </trans-unit>
        <trans-unit id="6d0dce55f678cb8775dd6545d912d9fb4c17c840" translate="yes" xml:space="preserve">
          <source>Yields an &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to read a section inside this IO.</source>
          <target state="translated">产生一个 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 以读取此IO中的某个部分。</target>
        </trans-unit>
        <trans-unit id="3f5b57db10ccdf1fe6a906634ea8fbfd38569a3c" translate="yes" xml:space="preserve">
          <source>Yields an &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to read a section inside this file.</source>
          <target state="translated">产生一个 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 以读取此文件中的一部分。</target>
        </trans-unit>
        <trans-unit id="187685610a6fd9500a8face2dd66da1b26c1b9bf" translate="yes" xml:space="preserve">
          <source>Yields an &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to read a section inside this file. Multiple sections can be read concurrently.</source>
          <target state="translated">产生一个 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 以读取此文件中的一部分。可以同时读取多个部分。</target>
        </trans-unit>
        <trans-unit id="7002c1e93308de591c68e6600e20c5a062b8f66e" translate="yes" xml:space="preserve">
          <source>Yields an &lt;code&gt;&lt;a href=&quot;memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; to read a section of this &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;'s buffer.</source>
          <target state="translated">产生一个 &lt;code&gt;&lt;a href=&quot;memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; 以读取此 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 缓冲区的一部分。</target>
        </trans-unit>
        <trans-unit id="e67335ba80ac1b0e11bc9782ac651b9bbb8b58d6" translate="yes" xml:space="preserve">
          <source>Yields an IO that can be used to append to the epilogue of the multipart message.</source>
          <target state="translated">产生一个IO,可以用来附加到多部分信息的尾声。</target>
        </trans-unit>
        <trans-unit id="63be575825551b544e1c8cc760947819109c2c4a" translate="yes" xml:space="preserve">
          <source>Yields an IO that can be used to append to the epilogue of the multipart message. Throws if &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; is called before this method, or no body parts have been appended.</source>
          <target state="translated">产生一个可用于附加到多部分消息的结尾的IO。如果在此方法之前调用 &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; 或没有附加身体部位，则抛出该异常。</target>
        </trans-unit>
        <trans-unit id="f0b751cf91145618f23bedeeba57fb6ebac306a1" translate="yes" xml:space="preserve">
          <source>Yields an IO that can be used to append to the preamble of the multipart message.</source>
          <target state="translated">产生一个IO,可以用来附加到多部分消息的序言中。</target>
        </trans-unit>
        <trans-unit id="b9d26f52488dc656dddc46229a2184b2cc59785b" translate="yes" xml:space="preserve">
          <source>Yields an IO that can be used to append to the preamble of the multipart message. Throws if &lt;code&gt;&lt;a href=&quot;builder#body_part(headers:HTTP::Headers,string:String)-instance-method&quot;&gt;#body_part&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">产生一个可用于附加到多部分消息的前同步码的IO。如果在此方法之前调用 &lt;code&gt;&lt;a href=&quot;builder#body_part(headers:HTTP::Headers,string:String)-instance-method&quot;&gt;#body_part&lt;/a&gt;&lt;/code&gt; ,则抛出该异常。</target>
        </trans-unit>
        <trans-unit id="64e8472e7beda1548c8644bca429a1d257e34d13" translate="yes" xml:space="preserve">
          <source>Yields an IO that can be used to write to a body part which is appended to the multipart message with the given &lt;em&gt;headers&lt;/em&gt;.</source>
          <target state="translated">产生一个IO，可用于写入主体部分，该主体部分使用给定的&lt;em&gt;标头&lt;/em&gt;附加到多部分消息中。</target>
        </trans-unit>
        <trans-unit id="4626950d60c6e217e050647870ecb3612e8e72d7" translate="yes" xml:space="preserve">
          <source>Yields an IO that can be used to write to a body part which is appended to the multipart message with the given &lt;em&gt;headers&lt;/em&gt;. Throws if &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;block)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">产生一个IO，可用于写入主体部分，该主体部分使用给定的&lt;em&gt;标头&lt;/em&gt;附加到多部分消息中。如果在此方法之前调用 &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;block)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; ,则抛出该异常。</target>
        </trans-unit>
        <trans-unit id="d267873e2e3cba6d0b1586730a140eb18e6e188e" translate="yes" xml:space="preserve">
          <source>Yields each &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;HTTP::Cookie&lt;/a&gt;&lt;/code&gt; in the collection.</source>
          <target state="translated">产生集合中的每个 &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;HTTP::Cookie&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4bd3987507a2e1d27b3101128be175f8dfee47c4" translate="yes" xml:space="preserve">
          <source>Yields each byte in the string to the block.</source>
          <target state="translated">将字符串中的每个字节输出到块中。</target>
        </trans-unit>
        <trans-unit id="457f275d733551424273a7aa7803681155673baf" translate="yes" xml:space="preserve">
          <source>Yields each char for the downcase equivalent of this char.</source>
          <target state="translated">产生每个字符的降序等值的这个字符。</target>
        </trans-unit>
        <trans-unit id="b9f47c03b57b4c498a937082a354595a6d2fe422" translate="yes" xml:space="preserve">
          <source>Yields each char for the upcase equivalent of this char.</source>
          <target state="translated">产生每个字符的大写等价物。</target>
        </trans-unit>
        <trans-unit id="772b56fe329159859d7debc9971163b2c4aa1b97" translate="yes" xml:space="preserve">
          <source>Yields each char in this string to the block, returns the number of times the block returned a truthy value.</source>
          <target state="translated">将这个字符串中的每一个char交给块,返回块返回truthhy值的次数。</target>
        </trans-unit>
        <trans-unit id="f98a4c6582be3beb6971cfd238fe1ee4b6cd467b" translate="yes" xml:space="preserve">
          <source>Yields each char in this string to the block.</source>
          <target state="translated">将此字符串中的每一个字符交给块。</target>
        </trans-unit>
        <trans-unit id="d36fbfefede04220924f5d529b8dc936e79bc311" translate="yes" xml:space="preserve">
          <source>Yields each char in this string to the block. Returns a new &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; with all characters for which the block returned a truthy value removed.</source>
          <target state="translated">将此字符串中的每个字符输出到块。返回一个新的 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; ，其中删除了该块返回真值的所有字符。</target>
        </trans-unit>
        <trans-unit id="78729f3fdbac68c418ce6db2c4ca9dac41a36da9" translate="yes" xml:space="preserve">
          <source>Yields each char in this string to the block. Returns a new &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, that has all characters removed, that were the same as the previous one and for which the given block returned a truthy value.</source>
          <target state="translated">将此字符串中的每个字符输出到块。返回一个新的 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; ，该字符串删除了所有与上一个字符相同的字符，并且给定的块返回了真实值。</target>
        </trans-unit>
        <trans-unit id="e2dc7d8bd5a7770d36bacb695c52728e3d561897" translate="yes" xml:space="preserve">
          <source>Yields each character and its index in the string to the block.</source>
          <target state="translated">将字符串中的每个字符和它的索引提供给块。</target>
        </trans-unit>
        <trans-unit id="525155a220e7fd518e3de2c2346f0b4e78397f1e" translate="yes" xml:space="preserve">
          <source>Yields each character in the string to the block.</source>
          <target state="translated">将字符串中的每一个字符交给块。</target>
        </trans-unit>
        <trans-unit id="7a1c11fc65113015bd54f1ece5d5f610fb8cff4f" translate="yes" xml:space="preserve">
          <source>Yields each codepoint to the block.</source>
          <target state="translated">将每个代码点让给该块。</target>
        </trans-unit>
        <trans-unit id="1b598aa5d91928c10c5abd6b30b7c226305beee5" translate="yes" xml:space="preserve">
          <source>Yields each component of this path as a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将此路径的每个组件生成为 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7459345ca26cab1f86f990c34c2cf61002de24fb" translate="yes" xml:space="preserve">
          <source>Yields each element in this iterator together with its index.</source>
          <target state="translated">产生迭代器中的每个元素及其索引。</target>
        </trans-unit>
        <trans-unit id="14759f3a863234dcccdabfe732860384db166807" translate="yes" xml:space="preserve">
          <source>Yields each element of the set, and returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">产生集合的每个元素，并返回 &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16c8fd06f2831cec63b41114dba004b196eafc1d" translate="yes" xml:space="preserve">
          <source>Yields each entry in the zip to the given block.</source>
          <target state="translated">将压缩包中的每一个条目转为给定区块。</target>
        </trans-unit>
        <trans-unit id="d0ceef87e966868c6aed9d79641d750f1b5e9177" translate="yes" xml:space="preserve">
          <source>Yields each index of &lt;code&gt;self&lt;/code&gt; to the given block and then assigns the block's value in that position.</source>
          <target state="translated">将 &lt;code&gt;self&lt;/code&gt; 每个索引产生到给定的块，然后在该位置分配块的值。</target>
        </trans-unit>
        <trans-unit id="9899f01dd7d14a2033fad0f47f5aad446ca2696f" translate="yes" xml:space="preserve">
          <source>Yields each index of &lt;code&gt;self&lt;/code&gt; to the given block and then assigns the block's value in that position. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;self&lt;/code&gt; 每个索引产生到给定的块，然后在该位置分配块的值。返回 &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d110db349b7b398bb6415cbc5c434eb820659080" translate="yes" xml:space="preserve">
          <source>Yields each index of &lt;code&gt;self&lt;/code&gt;, in the given &lt;em&gt;range&lt;/em&gt;, to the given block and then assigns the block's value in that position.</source>
          <target state="translated">将给定&lt;em&gt;范围内&lt;/em&gt;的 &lt;code&gt;self&lt;/code&gt; 的每个索引生成到给定的块，然后在该位置分配该块的值。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bbf7b2c2d123cd7f34660a75ed95bd90bedcbffc" translate="yes" xml:space="preserve">
          <source>Yields each index of &lt;code&gt;self&lt;/code&gt;, in the given &lt;em&gt;range&lt;/em&gt;, to the given block and then assigns the block's value in that position. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">将给定&lt;em&gt;范围内&lt;/em&gt;的 &lt;code&gt;self&lt;/code&gt; 的每个索引生成到给定的块，然后在该位置分配该块的值。返回 &lt;code&gt;self&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c74779832c5e4f5223f88f835b46cbb092555c15" translate="yes" xml:space="preserve">
          <source>Yields each index of &lt;code&gt;self&lt;/code&gt;, starting at &lt;em&gt;from&lt;/em&gt; and just &lt;em&gt;count&lt;/em&gt; times, to the given block and then assigns the block's value in that position.</source>
          <target state="translated">&lt;em&gt;从&lt;/em&gt;给定的块开始（仅从&lt;em&gt;计数&lt;/em&gt;开始）就&lt;em&gt;得出&lt;/em&gt; &lt;code&gt;self&lt;/code&gt; 的每个索引，然后在该位置分配该块的值。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd7a22724abf373413ee102096381179d17a9a68" translate="yes" xml:space="preserve">
          <source>Yields each index of &lt;code&gt;self&lt;/code&gt;, starting at &lt;em&gt;from&lt;/em&gt; and just &lt;em&gt;count&lt;/em&gt; times, to the given block and then assigns the block's value in that position. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;从&lt;/em&gt;给定的块开始（仅从&lt;em&gt;计数&lt;/em&gt;开始）就&lt;em&gt;得出&lt;/em&gt; &lt;code&gt;self&lt;/code&gt; 的每个索引，然后在该位置分配该块的值。返回 &lt;code&gt;self&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="12bf487c11f5e31306a18a0d9beef657dc7d1bbe" translate="yes" xml:space="preserve">
          <source>Yields each index of &lt;code&gt;self&lt;/code&gt;, starting at &lt;em&gt;from&lt;/em&gt;, to the given block and then assigns the block's value in that position.</source>
          <target state="translated">得到的每个索引 &lt;code&gt;self&lt;/code&gt; ，开始于&lt;em&gt;从&lt;/em&gt;，为给定的块，然后在该位置分配块的值。</target>
        </trans-unit>
        <trans-unit id="dca16d7e3005e6100724c21ae861b3ca86e084dc" translate="yes" xml:space="preserve">
          <source>Yields each index of &lt;code&gt;self&lt;/code&gt;, starting at &lt;em&gt;from&lt;/em&gt;, to the given block and then assigns the block's value in that position. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">得到的每个索引 &lt;code&gt;self&lt;/code&gt; ，开始于&lt;em&gt;从&lt;/em&gt;，为给定的块，然后在该位置分配块的值。返回 &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d0874c1d65798c410c9fb3b79204316ed3edb69e" translate="yes" xml:space="preserve">
          <source>Yields each item in this deque, from first to last.</source>
          <target state="translated">从第一个到最后一个,产生这个deque中的每个项目。</target>
        </trans-unit>
        <trans-unit id="41627050ac800a8c74e2678d89b562faf692fde0" translate="yes" xml:space="preserve">
          <source>Yields each key and value in this named tuple.</source>
          <target state="translated">产生这个命名元组中的每个键和值。</target>
        </trans-unit>
        <trans-unit id="8c52b27fdf97fe9c460989c9c5826da05c92b790" translate="yes" xml:space="preserve">
          <source>Yields each key and value, together with an index starting at &lt;em&gt;offset&lt;/em&gt;, in this named tuple.</source>
          <target state="translated">在此命名元组中，产生每个键和值以及从&lt;em&gt;offset&lt;/em&gt;开始的索引。</target>
        </trans-unit>
        <trans-unit id="54e84e7b1689b66951925d9e9805cec5be27c61d" translate="yes" xml:space="preserve">
          <source>Yields each key in this named tuple.</source>
          <target state="translated">产生这个命名元组中的每个键。</target>
        </trans-unit>
        <trans-unit id="032b579d2f147cda0e0bacec526ee7a30a29b811" translate="yes" xml:space="preserve">
          <source>Yields each key-value pair in this mapping.</source>
          <target state="translated">产生该映射中的每个键值对。</target>
        </trans-unit>
        <trans-unit id="1221901bbfd3e99a251123a80c688e9b63815eca" translate="yes" xml:space="preserve">
          <source>Yields each line in &lt;em&gt;filename&lt;/em&gt; to the given block.</source>
          <target state="translated">将&lt;em&gt;文件名&lt;/em&gt;中的每一行输出到给定的块。</target>
        </trans-unit>
        <trans-unit id="14028a886a4467928ea5eeb585b6ed6b424ca949" translate="yes" xml:space="preserve">
          <source>Yields each of a CSV's rows as an &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt;.</source>
          <target state="translated">将CSV的每一行作为 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1553bb4c5d7801827011638fcc6ac4318be2b9d6" translate="yes" xml:space="preserve">
          <source>Yields each of the bytes of this char as encoded by UTF-8.</source>
          <target state="translated">产生这个字符的每一个字节,用UTF-8编码。</target>
        </trans-unit>
        <trans-unit id="5666986afc3eba8451bc2738ab173f719ba46af7" translate="yes" xml:space="preserve">
          <source>Yields each of the elements in this tuple in reverse order.</source>
          <target state="translated">按相反的顺序产生这个元组中的每个元素。</target>
        </trans-unit>
        <trans-unit id="b59836d9f03cb59caf7085085c1e603f5904a7c2" translate="yes" xml:space="preserve">
          <source>Yields each of the elements in this tuple.</source>
          <target state="translated">产生这个元组中的每个元素。</target>
        </trans-unit>
        <trans-unit id="2b0cff11af51e8c49fccf2d6528bfdb42c299d1a" translate="yes" xml:space="preserve">
          <source>Yields each of the remaining rows as an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt;.</source>
          <target state="translated">将其余各行作为 &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b07820fd27bce5fcf5a2f1c6843476fa1aea469" translate="yes" xml:space="preserve">
          <source>Yields each parent of this path beginning with the topmost parent.</source>
          <target state="translated">产生这个路径的每个父节点,从最上面的父节点开始。</target>
        </trans-unit>
        <trans-unit id="3d8ad2d47d0c6ec81ae10dbc78cce1e239d24aa4" translate="yes" xml:space="preserve">
          <source>Yields each possible &lt;code&gt;&lt;a href=&quot;addrinfo&quot;&gt;Addrinfo&lt;/a&gt;&lt;/code&gt; resolution since a domain may resolve to many IP. Implementations are supposed to try all the addresses until the socket is connected (or bound) or there are no addresses to try anymore.</source>
          <target state="translated">由于域可以解析为多个IP，因此会产生每种可能的 &lt;code&gt;&lt;a href=&quot;addrinfo&quot;&gt;Addrinfo&lt;/a&gt;&lt;/code&gt; 分辨率。实现应该尝试所有地址，直到套接字已连接（或绑定）或没有地址可以尝试为止。</target>
        </trans-unit>
        <trans-unit id="8b027717cf9f6e64993157eebe8a2697edab5d9f" translate="yes" xml:space="preserve">
          <source>Yields each possible permutation of &lt;em&gt;size&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">产生 &lt;code&gt;self&lt;/code&gt; &lt;em&gt;大小&lt;/em&gt;的每个可能排列。</target>
        </trans-unit>
        <trans-unit id="5f4527fb60ea80dff2f48f4bab06a400313daf7f" translate="yes" xml:space="preserve">
          <source>Yields each value in this named tuple.</source>
          <target state="translated">产生这个命名元组中的每个值。</target>
        </trans-unit>
        <trans-unit id="af1b9b6d201643742e9058db06b4a78f2b043c74" translate="yes" xml:space="preserve">
          <source>Yields elements of &lt;code&gt;self&lt;/code&gt; and &lt;em&gt;others&lt;/em&gt; in tandem to the given block.</source>
          <target state="translated">将 &lt;code&gt;self&lt;/code&gt; 和&lt;em&gt;他人的&lt;/em&gt;要素串联到给定的区块中。</target>
        </trans-unit>
        <trans-unit id="c2714881fc2a5302f8c803e28f379595c8f17eff" translate="yes" xml:space="preserve">
          <source>Yields successive characters from &lt;code&gt;&lt;a href=&quot;reader#string:String-instance-method&quot;&gt;#string&lt;/a&gt;&lt;/code&gt; starting from &lt;code&gt;&lt;a href=&quot;reader#pos:Int32-instance-method&quot;&gt;#pos&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;reader#string:String-instance-method&quot;&gt;#string&lt;/a&gt;&lt;/code&gt; 开始，从 &lt;code&gt;&lt;a href=&quot;reader#pos:Int32-instance-method&quot;&gt;#pos&lt;/a&gt;&lt;/code&gt; 产生连续字符。</target>
        </trans-unit>
        <trans-unit id="18ef4220aace778571682ea275278a499721c4b7" translate="yes" xml:space="preserve">
          <source>Yields the current element at the given index and updates the value at the given &lt;em&gt;index&lt;/em&gt; with the block's value.</source>
          <target state="translated">在给定索引处屈服当前元素，并使用块的值更新给定&lt;em&gt;索引处&lt;/em&gt;的值。</target>
        </trans-unit>
        <trans-unit id="dc429b20ecbd7ecde9831364a3d39d52611502ce" translate="yes" xml:space="preserve">
          <source>Yields the current element at the given index and updates the value at the given &lt;em&gt;index&lt;/em&gt; with the block's value. Raises &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; if trying to set an element outside the array's range.</source>
          <target state="translated">在给定索引处屈服当前元素，并使用块的值更新给定&lt;em&gt;索引处&lt;/em&gt;的值。如果尝试设置超出数组范围的元素，则引发 &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3abc0729b8ad5830513f678227e58ef48cf578c4" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;../syntax_and_semantics/requiring_files&quot;&gt;require&lt;/a&gt; code defined in other files:</source>
          <target state="translated">您可以&lt;a href=&quot;../syntax_and_semantics/requiring_files&quot;&gt;要求&lt;/a&gt;在其他文件中定义的代码：</target>
        </trans-unit>
        <trans-unit id="ef9f95bea36de63b16728115d894edd8898013c1" translate="yes" xml:space="preserve">
          <source>You can &lt;code&gt;yield&lt;/code&gt; many values:</source>
          <target state="translated">您可以 &lt;code&gt;yield&lt;/code&gt; 许多值：</target>
        </trans-unit>
        <trans-unit id="2d29bf63dd69de8f6121a8476b6b87ae109906c7" translate="yes" xml:space="preserve">
          <source>You can actually pass a proc to a method that yields:</source>
          <target state="translated">实际上,你可以将一个proc传递给一个方法,产生。</target>
        </trans-unit>
        <trans-unit id="13974c28bf1b72e87f17875d1e72ddddb6814834" translate="yes" xml:space="preserve">
          <source>You can also declare constants inside a &lt;code&gt;lib&lt;/code&gt; declaration:</source>
          <target state="translated">您还可以在 &lt;code&gt;lib&lt;/code&gt; 声明中声明常量：</target>
        </trans-unit>
        <trans-unit id="4f18f57fa02df0bede750af227ea83765816d429" translate="yes" xml:space="preserve">
          <source>You can also define attributes for each property.</source>
          <target state="translated">您还可以为每个属性定义属性。</target>
        </trans-unit>
        <trans-unit id="21f4885203aa01b13676ea4e29462ea9b4bcf2be" translate="yes" xml:space="preserve">
          <source>You can also initialize some fields with a syntax similar to &lt;a href=&quot;../default_and_named_arguments&quot;&gt;named arguments&lt;/a&gt;:</source>
          <target state="translated">您还可以使用类似于&lt;a href=&quot;../default_and_named_arguments&quot;&gt;命名参数&lt;/a&gt;的语法来初始化某些字段：</target>
        </trans-unit>
        <trans-unit id="ceb2614bde9bc685fc0d48231a9de45b8647db65" translate="yes" xml:space="preserve">
          <source>You can also install the latest nightly build by using the &lt;code&gt;edge&lt;/code&gt; channel.</source>
          <target state="translated">您还可以使用 &lt;code&gt;edge&lt;/code&gt; 通道安装最新的夜间版本。</target>
        </trans-unit>
        <trans-unit id="7dd92aa299d993181e31af14051fcf4a274bfb1b" translate="yes" xml:space="preserve">
          <source>You can also make a struct behave like a C union (this can be pretty unsafe):</source>
          <target state="translated">你也可以让一个结构表现得像一个C联盟(这可能很不安全)。</target>
        </trans-unit>
        <trans-unit id="f8f71dc2f96dbfa5413cb7cea134ed78567bda6f" translate="yes" xml:space="preserve">
          <source>You can also pass an RGB color to &lt;code&gt;colorize&lt;/code&gt;:</source>
          <target state="translated">您还可以传递RGB颜色进行 &lt;code&gt;colorize&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="915afeda106b488e84ddf6a78d8756509f9667b3" translate="yes" xml:space="preserve">
          <source>You can also rescue multiple exception types at once by specifying a union type:</source>
          <target state="translated">您也可以通过指定一个联合类型来同时拯救多个异常类型。</target>
        </trans-unit>
        <trans-unit id="147582c34aaf43aaf8790de3cb3894622c239158" translate="yes" xml:space="preserve">
          <source>You can also set the Entry's time (which is &lt;code&gt;&lt;a href=&quot;../time#utc:Time-class-method&quot;&gt;Time.utc&lt;/a&gt;&lt;/code&gt; by default) and extra data before adding it to the zip stream.</source>
          <target state="translated">您还可以设置条目的时间（默认情况下为 &lt;code&gt;&lt;a href=&quot;../time#utc:Time-class-method&quot;&gt;Time.utc&lt;/a&gt;&lt;/code&gt; ）和其他数据，然后再将其添加到zip流中。</target>
        </trans-unit>
        <trans-unit id="4e99c52a7ac0074067e2502fea22254d9a6204cc" translate="yes" xml:space="preserve">
          <source>You can also spawn by passing a method call instead of a block. To understand why this is useful, let's look at this example:</source>
          <target state="translated">你也可以通过传递一个方法调用而不是一个块来产生。为了理解为什么这很有用,让我们看看这个例子。</target>
        </trans-unit>
        <trans-unit id="eb656fedd13f10be6de9c2ee62f09589e2f88977" translate="yes" xml:space="preserve">
          <source>You can also specify many fields of the same type:</source>
          <target state="translated">您也可以指定同一类型的多个字段。</target>
        </trans-unit>
        <trans-unit id="1080e7bfc21d97f76141e7de75eeaee590b4a73f" translate="yes" xml:space="preserve">
          <source>You can also use &quot;../&quot; to access parent directories relative to the current file, so &lt;code&gt;require &quot;../../foo/bar&quot;&lt;/code&gt; works as well.</source>
          <target state="translated">您还可以使用&amp;ldquo; ../&amp;rdquo;来访问相对于当前文件的父目录，因此 &lt;code&gt;require &quot;../../foo/bar&quot;&lt;/code&gt; 正常工作。</target>
        </trans-unit>
        <trans-unit id="a2d2447db12457488458d0e12c49bfa75582516e" translate="yes" xml:space="preserve">
          <source>You can also use an &lt;code&gt;&lt;a href=&quot;session&quot;&gt;OAuth2::Session&lt;/a&gt;&lt;/code&gt; to automatically refresh expired tokens before each request.</source>
          <target state="translated">您还可以使用 &lt;code&gt;&lt;a href=&quot;session&quot;&gt;OAuth2::Session&lt;/a&gt;&lt;/code&gt; 在每个请求之前自动刷新过期的令牌。</target>
        </trans-unit>
        <trans-unit id="b7b2691b0528d31b6464093c65b3f7774b18dc7a" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;&amp;amp;block&lt;/code&gt; syntax to forward blocks, but then you have to at least specify the input types, and the generated code will involve closures and will be slower:</source>
          <target state="translated">您还可以使用 &lt;code&gt;&amp;amp;block&lt;/code&gt; 语法来转发块，但随后至少必须指定输入类型，并且生成的代码将涉及闭包，并且速度较慢：</target>
        </trans-unit>
        <trans-unit id="98b46a0db3302810f9318cdc6797ecdf5ff80c27" translate="yes" xml:space="preserve">
          <source>You can assign the same value to multiple variables using chained assignment:</source>
          <target state="translated">您可以使用链式赋值将同一个值赋给多个变量。</target>
        </trans-unit>
        <trans-unit id="f9503478fc02ce9f093165d13f359bfa478d7813" translate="yes" xml:space="preserve">
          <source>You can bind to variadic functions:</source>
          <target state="translated">你可以绑定变量函数。</target>
        </trans-unit>
        <trans-unit id="564eb7e28db5225b2ca05e24f0a3a37262fa5c4b" translate="yes" xml:space="preserve">
          <source>You can check if a flag is defined with the &lt;code&gt;flag?&lt;/code&gt; macro method:</source>
          <target state="translated">您可以检查是否用标志定义了 &lt;code&gt;flag?&lt;/code&gt; 宏方法：</target>
        </trans-unit>
        <trans-unit id="25ad3b601bfae1e97573ce88a50e819c1d889edf" translate="yes" xml:space="preserve">
          <source>You can choose the Entry's compression method before adding it.</source>
          <target state="translated">在添加之前,你可以选择条目的压缩方式。</target>
        </trans-unit>
        <trans-unit id="af767ca6e24a4e3d471d01bd83776fe5e0c21849" translate="yes" xml:space="preserve">
          <source>You can compile and run specs from folder trees, individual files or specific lines in a file.</source>
          <target state="translated">您可以从文件夹树、单个文件或文件中的特定行编译和运行规格。</target>
        </trans-unit>
        <trans-unit id="df5bbf4ae5893394384baf160e032d19f83ac456" translate="yes" xml:space="preserve">
          <source>You can declare/assign multiple variables at the same time by separating expressions with a comma (&lt;code&gt;,&lt;/code&gt;):</source>
          <target state="translated">您可以通过用逗号（ &lt;code&gt;,&lt;/code&gt; ）分隔表达式来同时声明/分配多个变量：</target>
        </trans-unit>
        <trans-unit id="c2de6ffbb050ca76eb7aa766b3c4ccbf3f88bf27" translate="yes" xml:space="preserve">
          <source>You can define &lt;a href=&quot;../syntax_and_semantics/local_variables&quot;&gt;local variables&lt;/a&gt; without the need to specify their type:</source>
          <target state="translated">您可以定义&lt;a href=&quot;../syntax_and_semantics/local_variables&quot;&gt;局部变量，&lt;/a&gt;而无需指定其类型：</target>
        </trans-unit>
        <trans-unit id="d5e994cf5f59c409c8890d15cc4cc863fcf49276" translate="yes" xml:space="preserve">
          <source>You can define an operator for a type like this:</source>
          <target state="translated">你可以为一个类型定义一个像这样的操作符。</target>
        </trans-unit>
        <trans-unit id="f5115543192024094ab19434e0dbd0ef643e338c" translate="yes" xml:space="preserve">
          <source>You can easily create strings with embedded content, known as string interpolation. The language comes with other &lt;a href=&quot;../syntax_and_semantics/literals&quot;&gt;syntax&lt;/a&gt; as well to create arrays, hashes, ranges, tuples and more:</source>
          <target state="translated">您可以轻松地创建具有嵌入内容的字符串，称为字符串插值。该语言还附带其他&lt;a href=&quot;../syntax_and_semantics/literals&quot;&gt;语法&lt;/a&gt;来创建数组，哈希，范围，元组等等：</target>
        </trans-unit>
        <trans-unit id="887c6987fc352de4ca73c4a43de5f57d506cf3c6" translate="yes" xml:space="preserve">
          <source>You can invoke a &lt;strong&gt;fixed subset&lt;/strong&gt; of methods on AST nodes at compile-time. These methods are documented in a fictitious &lt;a href=&quot;http://crystal-lang.org/api/Crystal/Macros.html&quot;&gt;Crystal::Macros&lt;/a&gt; module.</source>
          <target state="translated">您可以在编译时在AST节点上调用方法的&lt;strong&gt;固定子集&lt;/strong&gt;。这些方法记录在虚拟的&lt;a href=&quot;http://crystal-lang.org/api/Crystal/Macros.html&quot;&gt;Crystal :: Macros&lt;/a&gt;模块中。</target>
        </trans-unit>
        <trans-unit id="81a3eb965c60e9d300a76b59b61650fa7950b982" translate="yes" xml:space="preserve">
          <source>You can invoke a &lt;strong&gt;fixed subset&lt;/strong&gt; of methods on AST nodes at compile-time. These methods are documented on the classes in this module. Additionally, methods of the &lt;code&gt;&lt;a href=&quot;macros&quot;&gt;Macros&lt;/a&gt;&lt;/code&gt; module are top-level methods that you can invoke, like &lt;code&gt;&lt;a href=&quot;macros#puts(*expressions):Nop-instance-method&quot;&gt;#puts&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;macros#run(filename,*args):MacroId-instance-method&quot;&gt;#run&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">您可以在编译时在AST节点上调用方法的&lt;strong&gt;固定子集&lt;/strong&gt;。这些方法记录在此模块的类中。此外，&amp;ldquo; &lt;code&gt;&lt;a href=&quot;macros&quot;&gt;Macros&lt;/a&gt;&lt;/code&gt; 模块的方法是可以调用的顶级方法，例如 &lt;code&gt;&lt;a href=&quot;macros#puts(*expressions):Nop-instance-method&quot;&gt;#puts&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;macros#run(filename,*args):MacroId-instance-method&quot;&gt;#run&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="314d9cd435c53edcce3d5b0eca9a3a2750faa5f8" translate="yes" xml:space="preserve">
          <source>You can invoke a method on the &lt;code&gt;case&lt;/code&gt;'s expression in a &lt;code&gt;when&lt;/code&gt; by using the implicit-object syntax:</source>
          <target state="translated">可以调用在一个方法 &lt;code&gt;case&lt;/code&gt; 的表达在 &lt;code&gt;when&lt;/code&gt; 通过使用隐式对象语法：</target>
        </trans-unit>
        <trans-unit id="571016a835bd16f63698317173fcf34949b2987d" translate="yes" xml:space="preserve">
          <source>You can invoke a superclass' method using &lt;code&gt;super&lt;/code&gt;:</source>
          <target state="translated">您可以使用 &lt;code&gt;super&lt;/code&gt; 调用超类的方法：</target>
        </trans-unit>
        <trans-unit id="a6c7968656b0284b42e0f96ff18bfe8afdef2aa7" translate="yes" xml:space="preserve">
          <source>You can invoke the previously redefined method with &lt;code&gt;previous_def&lt;/code&gt;:</source>
          <target state="translated">您可以调用与之前重新定义方法 &lt;code&gt;previous_def&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="38b14512985f99537c617be88d951fed887a97cd" translate="yes" xml:space="preserve">
          <source>You can iterate a finite amount of times:</source>
          <target state="translated">你可以进行有限次数的迭代。</target>
        </trans-unit>
        <trans-unit id="b945caa74f9f664b98c0c6c9f5102486d1e5bad7" translate="yes" xml:space="preserve">
          <source>You can make a type restriction take the type of an argument, or part of the type of an argument, using &lt;code&gt;forall&lt;/code&gt;:</source>
          <target state="translated">您可以使用 &lt;code&gt;forall&lt;/code&gt; 来使类型限制采用参数的类型或参数的一部分：</target>
        </trans-unit>
        <trans-unit id="bf607e56658b54fa67870138cc5b7eb04c43d9a8" translate="yes" xml:space="preserve">
          <source>You can manipulate &lt;code&gt;&lt;a href=&quot;toplevel#ARGV&quot;&gt;ARGV&lt;/a&gt;&lt;/code&gt; yourself to control what &lt;code&gt;&lt;a href=&quot;toplevel#ARGF&quot;&gt;ARGF&lt;/a&gt;&lt;/code&gt; operates on. If you remove a file from &lt;code&gt;&lt;a href=&quot;toplevel#ARGV&quot;&gt;ARGV&lt;/a&gt;&lt;/code&gt;, it is ignored by &lt;code&gt;&lt;a href=&quot;toplevel#ARGF&quot;&gt;ARGF&lt;/a&gt;&lt;/code&gt;; if you add files to &lt;code&gt;&lt;a href=&quot;toplevel#ARGV&quot;&gt;ARGV&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;toplevel#ARGF&quot;&gt;ARGF&lt;/a&gt;&lt;/code&gt; will read from it.</source>
          <target state="translated">您可以自己操纵 &lt;code&gt;&lt;a href=&quot;toplevel#ARGV&quot;&gt;ARGV&lt;/a&gt;&lt;/code&gt; 来控制 &lt;code&gt;&lt;a href=&quot;toplevel#ARGF&quot;&gt;ARGF&lt;/a&gt;&lt;/code&gt; 的操作。如果从 &lt;code&gt;&lt;a href=&quot;toplevel#ARGV&quot;&gt;ARGV&lt;/a&gt;&lt;/code&gt; 删除文件， &lt;code&gt;&lt;a href=&quot;toplevel#ARGF&quot;&gt;ARGF&lt;/a&gt;&lt;/code&gt; 将忽略该文件；如果将文件添加到 &lt;code&gt;&lt;a href=&quot;toplevel#ARGV&quot;&gt;ARGV&lt;/a&gt;&lt;/code&gt; ，则 &lt;code&gt;&lt;a href=&quot;toplevel#ARGF&quot;&gt;ARGF&lt;/a&gt;&lt;/code&gt; 将从中读取文件。</target>
        </trans-unit>
        <trans-unit id="8d14a8a7e6dcb3d8c62086c9d738a053a6c12def" translate="yes" xml:space="preserve">
          <source>You can obtain pointers in four ways: &lt;code&gt;&lt;a href=&quot;pointer#new-class-method&quot;&gt;#new&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;pointer#malloc(size:Int,value:T)-class-method&quot;&gt;#malloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;pointerof&lt;/code&gt; and by calling a C function that returns a pointer.</source>
          <target state="translated">您可以通过四种方式获取指针： &lt;code&gt;&lt;a href=&quot;pointer#new-class-method&quot;&gt;#new&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;pointer#malloc(size:Int,value:T)-class-method&quot;&gt;#malloc&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;pointerof&lt;/code&gt; 和通过调用返回指针的C函数。</target>
        </trans-unit>
        <trans-unit id="50831be84290e49c64d467f486f73d33f464c952" translate="yes" xml:space="preserve">
          <source>You can omit the parentheses if the function doesn't have arguments (and omit them in the call as well):</source>
          <target state="translated">如果函数没有参数,你可以省略括号(在调用中也可以省略)。</target>
        </trans-unit>
        <trans-unit id="49983f1cb3b4d87a53b05e95bc46267b8d9c5b70" translate="yes" xml:space="preserve">
          <source>You can override methods in a derived class:</source>
          <target state="translated">你可以覆盖派生类中的方法。</target>
        </trans-unit>
        <trans-unit id="75980f44e36be78446150a5b1975885b8194d531" translate="yes" xml:space="preserve">
          <source>You can pass a block to this macro, that will be inserted inside the struct definition.</source>
          <target state="translated">你可以向这个宏传递一个块,它将被插入到结构体定义中。</target>
        </trans-unit>
        <trans-unit id="55047557fe7e35d41b7ba32909f90903de791b04" translate="yes" xml:space="preserve">
          <source>You can read multiple columns at once:</source>
          <target state="translated">你可以同时阅读多列。</target>
        </trans-unit>
        <trans-unit id="7d31f77dfecfc2284790982e3ce585731cdbaa49" translate="yes" xml:space="preserve">
          <source>You can read this document from top to bottom, but it&amp;rsquo;s advisable to jump through sections because some concepts are interrelated and can&amp;rsquo;t be explained in isolation.</source>
          <target state="translated">您可以从上至下阅读本文档，但建议您跳过各个部分，因为某些概念是相互关联的，因此不能单独解释。</target>
        </trans-unit>
        <trans-unit id="a7db90255e4cdb4a5db83967a8b00f85efc40404" translate="yes" xml:space="preserve">
          <source>You can see that &lt;code&gt;@pet&lt;/code&gt; is &lt;code&gt;Animal+&lt;/code&gt;. The &lt;code&gt;+&lt;/code&gt; means it's a virtual type, meaning &quot;any class that inherits from &lt;code&gt;Animal&lt;/code&gt;, including &lt;code&gt;Animal&lt;/code&gt;&quot;.</source>
          <target state="translated">您会看到 &lt;code&gt;@pet&lt;/code&gt; 是 &lt;code&gt;Animal+&lt;/code&gt; 。的 &lt;code&gt;+&lt;/code&gt; 意味着它是一个虚拟型，意为&amp;ldquo;任何类继承自 &lt;code&gt;Animal&lt;/code&gt; ，包括 &lt;code&gt;Animal&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="c47baa0aa0e2637ff421f2828a11a393c3deae43" translate="yes" xml:space="preserve">
          <source>You can set and get its properties:</source>
          <target state="translated">你可以设置和获取它的属性。</target>
        </trans-unit>
        <trans-unit id="78788cf0974913c9aa589302d32f555742f6e919" translate="yes" xml:space="preserve">
          <source>You can specify the value of a member:</source>
          <target state="translated">你可以指定一个成员的值。</target>
        </trans-unit>
        <trans-unit id="cd3926c94528dead111f239e82ee35abf5e374a7" translate="yes" xml:space="preserve">
          <source>You can specify type restrictions in splats:</source>
          <target state="translated">你可以在splats中指定类型限制。</target>
        </trans-unit>
        <trans-unit id="2b0dd797230b8982699f84f71a0795f831dd6d61" translate="yes" xml:space="preserve">
          <source>You can think an &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; as syntax sugar of an &lt;code&gt;if&lt;/code&gt;:</source>
          <target state="translated">您可以将 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 视为 &lt;code&gt;if&lt;/code&gt; 的语法糖：</target>
        </trans-unit>
        <trans-unit id="d7591ce8b9cce9c70dd4334642376a4c57e09b32" translate="yes" xml:space="preserve">
          <source>You can think an &lt;code&gt;||&lt;/code&gt; as syntax sugar of an &lt;code&gt;if&lt;/code&gt;:</source>
          <target state="translated">您可以认为 &lt;code&gt;||&lt;/code&gt; 作为 &lt;code&gt;if&lt;/code&gt; 的语法糖：</target>
        </trans-unit>
        <trans-unit id="737f583d079c9508411a3fc19969a61ecf15c47c" translate="yes" xml:space="preserve">
          <source>You can think of a &lt;code&gt;&lt;a href=&quot;namedtuple&quot;&gt;NamedTuple&lt;/a&gt;&lt;/code&gt; as an immutable &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; whose keys (which are of type &lt;code&gt;&lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/code&gt;), and the types for each key, are known at compile time.</source>
          <target state="translated">您可以将 &lt;code&gt;&lt;a href=&quot;namedtuple&quot;&gt;NamedTuple&lt;/a&gt;&lt;/code&gt; 视为一个不可变的 &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; ,其键（类型为 &lt;code&gt;&lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/code&gt; ）以及每个键的类型在编译时是已知的。</target>
        </trans-unit>
        <trans-unit id="9e1fe4c0242af1661e59ea65b6d749085cfacc1f" translate="yes" xml:space="preserve">
          <source>You can think of a &lt;code&gt;&lt;a href=&quot;tuple&quot;&gt;Tuple&lt;/a&gt;&lt;/code&gt; as an immutable &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; whose types for each position are known at compile time.</source>
          <target state="translated">您可以将 &lt;code&gt;&lt;a href=&quot;tuple&quot;&gt;Tuple&lt;/a&gt;&lt;/code&gt; 视为一个不变的 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 其每个位置的类型在编译时都是已知的。</target>
        </trans-unit>
        <trans-unit id="35eafc0b41b9e57e3f33c8ce1cee481b600f318b" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;break&lt;/code&gt; to break out of a &lt;code&gt;while&lt;/code&gt; loop:</source>
          <target state="translated">您可以使用 &lt;code&gt;break&lt;/code&gt; 来打破 &lt;code&gt;while&lt;/code&gt; 循环：</target>
        </trans-unit>
        <trans-unit id="14b8ac9011ce51a99d50407a729e48b26e8b97ef" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;next&lt;/code&gt; to try to execute the next iteration of a &lt;code&gt;while&lt;/code&gt; loop. After executing &lt;code&gt;next&lt;/code&gt;, the &lt;code&gt;while&lt;/code&gt;'s condition is checked and, if &lt;em&gt;truthy&lt;/em&gt;, the body will be executed.</source>
          <target state="translated">您可以使用 &lt;code&gt;next&lt;/code&gt; 尝试执行 &lt;code&gt;while&lt;/code&gt; 循环的下一个迭代。在执行 &lt;code&gt;next&lt;/code&gt; 之后，将检查 &lt;code&gt;while&lt;/code&gt; 的条件，如果为&lt;em&gt;真&lt;/em&gt;，将执行主体。</target>
        </trans-unit>
        <trans-unit id="821096b2de0c94b5e23d0f499b9f000256020a09" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;self.class&lt;/code&gt; to restrict to the Person type. The next section talks about the &lt;code&gt;.class&lt;/code&gt; suffix in type restrictions.</source>
          <target state="translated">您可以使用 &lt;code&gt;self.class&lt;/code&gt; 限制为Person类型。下一节将讨论类型限制中的 &lt;code&gt;.class&lt;/code&gt; 后缀。</target>
        </trans-unit>
        <trans-unit id="5dd0c13eda39ab8c91e057f96d9077024ece2604" translate="yes" xml:space="preserve">
          <source>You can use a backslash followed by an &lt;em&gt;u&lt;/em&gt; and four hexadecimal characters to denote a unicode codepoint written:</source>
          <target state="translated">您可以使用反斜杠后跟一个&lt;em&gt;u&lt;/em&gt;和四个十六进制字符来表示编写的unicode代码点：</target>
        </trans-unit>
        <trans-unit id="57596b9bf63c6b3c04a8859dc473a7dc1ad0091f" translate="yes" xml:space="preserve">
          <source>You can use a backslash to denote some characters:</source>
          <target state="translated">你可以用反斜杠来表示一些字符。</target>
        </trans-unit>
        <trans-unit id="4c4d0ffece215fa85c4c3c0f3a6929a0361e7604" translate="yes" xml:space="preserve">
          <source>You can use a special array literal syntax with other types too, as long as they define an argless &lt;code&gt;&lt;a href=&quot;array#new-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; method and a &lt;code&gt;&lt;a href=&quot;array#%3C%3C(value:T)-instance-method&quot;&gt;#&amp;lt;&amp;lt;&lt;/a&gt;&lt;/code&gt; method. &lt;code&gt;&lt;a href=&quot;set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; is one such type:</source>
          <target state="translated">您还可以将特殊的数组文字语法与其他类型一起使用，只要它们定义了argless &lt;code&gt;&lt;a href=&quot;array#new-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; 方法和 &lt;code&gt;&lt;a href=&quot;array#%3C%3C(value:T)-instance-method&quot;&gt;#&amp;lt;&amp;lt;&lt;/a&gt;&lt;/code&gt; 方法即可。 &lt;code&gt;&lt;a href=&quot;set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; 是这样的一种类型：</target>
        </trans-unit>
        <trans-unit id="52a71df1840dc0a56b6c04e3e8d65ba32286d1e9" translate="yes" xml:space="preserve">
          <source>You can use an enum as a type in a &lt;code&gt;fun&lt;/code&gt; argument or &lt;code&gt;struct&lt;/code&gt; or &lt;code&gt;union&lt;/code&gt; members:</source>
          <target state="translated">您可以在 &lt;code&gt;fun&lt;/code&gt; 参数或 &lt;code&gt;struct&lt;/code&gt; 或 &lt;code&gt;union&lt;/code&gt; 成员中将枚举用作类型：</target>
        </trans-unit>
        <trans-unit id="ef3fd329e29207153a1052bb34c6574c3f75b298" translate="yes" xml:space="preserve">
          <source>You can use code blocks, or simply &lt;a href=&quot;../syntax_and_semantics/blocks_and_procs&quot;&gt;blocks&lt;/a&gt;, which are a very convenient way to reuse code and get some features from the functional world:</source>
          <target state="translated">您可以使用代码块，也可以简单地使用&lt;a href=&quot;../syntax_and_semantics/blocks_and_procs&quot;&gt;block&lt;/a&gt;，这是重用代码并从功能世界中获取某些功能的非常方便的方法：</target>
        </trans-unit>
        <trans-unit id="039a9b69c5761722743c89e76161b822786236ba" translate="yes" xml:space="preserve">
          <source>You can use function types in C declarations:</source>
          <target state="translated">你可以在C语言声明中使用函数类型。</target>
        </trans-unit>
        <trans-unit id="3ae9498abba05973c97a9529ef9edd8bdd8be23b" translate="yes" xml:space="preserve">
          <source>You can't dynamically create symbols. When you compile your program, each symbol gets assigned a unique number.</source>
          <target state="translated">你不能动态地创建符号。当你编译程序时,每个符号会被分配一个唯一的编号。</target>
        </trans-unit>
        <trans-unit id="f4f757c1f364935fc445b0db98e042262c3bb794" translate="yes" xml:space="preserve">
          <source>You can, as always, define a constructor for your exception or just use the default one.</source>
          <target state="translated">你可以像往常一样,为你的异常定义一个构造函数,或者直接使用默认的构造函数。</target>
        </trans-unit>
        <trans-unit id="c8faebe26accb93ccab3682c2e6470202175e6d4" translate="yes" xml:space="preserve">
          <source>You can, of course, use &lt;code&gt;receive&lt;/code&gt; inside a spawned fiber:</source>
          <target state="translated">当然，您可以在生成的光纤中使用 &lt;code&gt;receive&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b350b33dbe50cce994c89db353306cc2193552bc" translate="yes" xml:space="preserve">
          <source>You create an instance of a class by invoking &lt;code&gt;new&lt;/code&gt; on that class:</source>
          <target state="translated">您可以通过在该类上调用 &lt;code&gt;new&lt;/code&gt; 来创建该类的实例：</target>
        </trans-unit>
        <trans-unit id="52c03c4442161f99e1a370223b1a1e1523d6c145" translate="yes" xml:space="preserve">
          <source>You may limit the DNS resolution time with &lt;code&gt;dns_timeout&lt;/code&gt; and limit the connection time to the remote server with &lt;code&gt;connect_timeout&lt;/code&gt;. Both values must be in seconds (integers or floats).</source>
          <target state="translated">您可以使用 &lt;code&gt;dns_timeout&lt;/code&gt; 限制DNS解析时间，并使用 &lt;code&gt;connect_timeout&lt;/code&gt; 限制到远程服务器的连接时间。两个值都必须以秒为单位（整数或浮点数）。</target>
        </trans-unit>
        <trans-unit id="5c1c6e9a164989922ed53a6f89949019a386ccc9" translate="yes" xml:space="preserve">
          <source>You may use &lt;code&gt;then&lt;/code&gt; after the &lt;code&gt;when&lt;/code&gt; condition to place the body on a single line.</source>
          <target state="translated">您可以在 &lt;code&gt;when&lt;/code&gt; 条件之后使用 &lt;code&gt;then&lt;/code&gt; 来将主体放置在一行上。</target>
        </trans-unit>
        <trans-unit id="c29ee1abae6389b6d23fb28d183cda0f1489f558" translate="yes" xml:space="preserve">
          <source>You might want to take a look at the available configuration flags first:</source>
          <target state="translated">你可能想先看看可用的配置标志。</target>
        </trans-unit>
        <trans-unit id="c6abe042a8787b9b1bc9ca1b09f4419ff9408ea1" translate="yes" xml:space="preserve">
          <source>You must copy this &lt;code&gt;.o&lt;/code&gt; file to that system and execute those commands. Once you do this the executable will be available in that target system.</source>
          <target state="translated">您必须将此 &lt;code&gt;.o&lt;/code&gt; 文件复制到该系统并执行这些命令。完成此操作后，可执行文件将在该目标系统中可用。</target>
        </trans-unit>
        <trans-unit id="34bf5e3ee8e85d4993af37ec3e9f12f95d748348" translate="yes" xml:space="preserve">
          <source>You program by invoking &lt;a href=&quot;../syntax_and_semantics/classes_and_methods&quot;&gt;methods&lt;/a&gt; (or sending messages) to objects.</source>
          <target state="translated">您可以通过对对象调用&lt;a href=&quot;../syntax_and_semantics/classes_and_methods&quot;&gt;方法&lt;/a&gt;（或发送消息）来进行编程。</target>
        </trans-unit>
        <trans-unit id="b84ee5652c0c388166ca2b3a41039137f69654a6" translate="yes" xml:space="preserve">
          <source>You raise exceptions by invoking a top-level &lt;code&gt;raise&lt;/code&gt; method. Unlike other keywords, &lt;code&gt;raise&lt;/code&gt; is a regular method with two overloads: &lt;a href=&quot;https://crystal-lang.org/api/toplevel.html#raise%28exception%3AException%29%3ANoReturn-class-method&quot;&gt;one accepting a String&lt;/a&gt; and another &lt;a href=&quot;https://crystal-lang.org/api/toplevel.html#raise%28message%3AString%29%3ANoReturn-class-method&quot;&gt;accepting an Exception instance&lt;/a&gt;:</source>
          <target state="translated">您可以通过调用顶级 &lt;code&gt;raise&lt;/code&gt; 方法来引发异常。与其他关键字不同， &lt;code&gt;raise&lt;/code&gt; 是一个常规方法，具有两个重载：&lt;a href=&quot;https://crystal-lang.org/api/toplevel.html#raise%28exception%3AException%29%3ANoReturn-class-method&quot;&gt;一个接受一个String&lt;/a&gt;，另一个&lt;a href=&quot;https://crystal-lang.org/api/toplevel.html#raise%28message%3AString%29%3ANoReturn-class-method&quot;&gt;接受一个Exception实例&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="4cdd4f58e9a42b962a7f2476a575549bbc82e3ec" translate="yes" xml:space="preserve">
          <source>You should also be careful when working on mutable types inside of the struct:</source>
          <target state="translated">当你在结构内部处理可突变类型时也应该小心。</target>
        </trans-unit>
        <trans-unit id="17df3d185ae5b8e25b1092217d011206bd4865ff" translate="yes" xml:space="preserve">
          <source>You should never have to deal with this class. Instead, use &lt;code&gt;&lt;a href=&quot;../string#build(capacity=64,&amp;amp;block):self-class-method&quot;&gt;String.build&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">您永远不必处理此类。而是使用 &lt;code&gt;&lt;a href=&quot;../string#build(capacity=64,&amp;amp;block):self-class-method&quot;&gt;String.build&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5537ad2f762c3eecc7ce061e2b77815c64fe74c4" translate="yes" xml:space="preserve">
          <source>You should never invoke this method unless you need to redefine C's main function. See &lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;block)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">除非需要重新定义C的main函数，否则永远不要调用此方法。有关更多详细信息，请参见 &lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;block)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ddf30130238e03bdf21e6b2aeee6d6cda325d1e8" translate="yes" xml:space="preserve">
          <source>You should never use this method unless &lt;code&gt;chr&lt;/code&gt; turns out to be a bottleneck.</source>
          <target state="translated">除非 &lt;code&gt;chr&lt;/code&gt; 成为瓶颈，否则永远不要使用此方法。</target>
        </trans-unit>
        <trans-unit id="d288598211844f8d7533fdc2f6e2993673ac6074" translate="yes" xml:space="preserve">
          <source>You shouldn't always use a struct, though. Structs are passed by value, so if you pass one to a method and the method makes changes to it, the caller won't see those changes, so they can be bug-prone. The best thing to do is to only use structs with immutable objects, especially if they are small.</source>
          <target state="translated">不过,你不应该总是使用结构体。结构体是通过值来传递的,所以如果你把一个结构体传递给一个方法,而这个方法又对它进行了修改,那么调用者就不会看到这些修改,所以它们可能会出现错误。最好的办法是只使用结构体与不可变的对象,特别是当它们很小的时候。</target>
        </trans-unit>
        <trans-unit id="e66f625e15aeb6d4daa7c202ba0b1673dbd03674" translate="yes" xml:space="preserve">
          <source>You typically use this to display a help message. The default raises &lt;code&gt;&lt;a href=&quot;optionparser/invalidoption&quot;&gt;InvalidOption&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">您通常使用它来显示帮助消息。默认值引发 &lt;code&gt;&lt;a href=&quot;optionparser/invalidoption&quot;&gt;InvalidOption&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1da6430a5d0d929e23884d0b9ae605b66e137f16" translate="yes" xml:space="preserve">
          <source>You typically use this to display a help message. The default raises &lt;code&gt;&lt;a href=&quot;optionparser/missingoption&quot;&gt;MissingOption&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">您通常使用它来显示帮助消息。默认引发 &lt;code&gt;&lt;a href=&quot;optionparser/missingoption&quot;&gt;MissingOption&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="24baa3897e31ae92a43dd206359349c0e2ed684b" translate="yes" xml:space="preserve">
          <source>You typically use this to get the main arguments (not modifiers) that your program expects (for example, filenames)</source>
          <target state="translated">你通常用它来获取你的程序所期望的主要参数(不是修饰符)(例如,文件名)。</target>
        </trans-unit>
        <trans-unit id="c2c4dd2adcaa617fc92ac5a53e965f6af733be79" translate="yes" xml:space="preserve">
          <source>You use &lt;code&gt;{% if condition %}&lt;/code&gt; ... &lt;code&gt;{% end %}&lt;/code&gt; to conditionally generate code:</source>
          <target state="translated">您可以使用 &lt;code&gt;{% if condition %}&lt;/code&gt; ... &lt;code&gt;{% end %}&lt;/code&gt; 有条件地生成代码：</target>
        </trans-unit>
        <trans-unit id="ba98e3a8b17e805cda90e356592d9669240f63df" translate="yes" xml:space="preserve">
          <source>You use &lt;code&gt;{{...}}&lt;/code&gt; to paste, or interpolate, an AST node, as in the above example.</source>
          <target state="translated">如上例所示，您可以使用 &lt;code&gt;{{...}}&lt;/code&gt; 粘贴或插值AST节点。</target>
        </trans-unit>
        <trans-unit id="e15cf5c1c9d58526ce07536afb1f4f5069f687db" translate="yes" xml:space="preserve">
          <source>You wouldn't want the above to be:</source>
          <target state="translated">你不会希望上面的人是。</target>
        </trans-unit>
        <trans-unit id="13142e4850f808e55887dfd54321c73187a1a183" translate="yes" xml:space="preserve">
          <source>You'll now notice that the GitHub Release badge has updated in your README.</source>
          <target state="translated">现在你会发现你的README中的GitHub发布徽章已经更新了。</target>
        </trans-unit>
        <trans-unit id="bdf24b03584715b37238e6dff9e2ec5d6cd4e374" translate="yes" xml:space="preserve">
          <source>Your &lt;code&gt;shard.yml&lt;/code&gt;'s &lt;code&gt;name&lt;/code&gt; property should be concise and descriptive.</source>
          <target state="translated">您 &lt;code&gt;shard.yml&lt;/code&gt; 的 &lt;code&gt;name&lt;/code&gt; 属性应该简洁明了。</target>
        </trans-unit>
        <trans-unit id="aec742c8cd57ac5fee0ad76b17e91c6d76608cb3" translate="yes" xml:space="preserve">
          <source>Zip</source>
          <target state="translated">Zip</target>
        </trans-unit>
        <trans-unit id="afbf032c6b675fb4b567437a88d92354e42b2368" translate="yes" xml:space="preserve">
          <source>Zip::Error</source>
          <target state="translated">Zip::Error</target>
        </trans-unit>
        <trans-unit id="f14354de44af8db8021269712104878ec63ef377" translate="yes" xml:space="preserve">
          <source>Zip::File</source>
          <target state="translated">Zip::File</target>
        </trans-unit>
        <trans-unit id="1687582e9759524c3bbacd6bd7d58acf13d3ffeb" translate="yes" xml:space="preserve">
          <source>Zip::File::Entry</source>
          <target state="translated">Zip::File::Entry</target>
        </trans-unit>
        <trans-unit id="e26feb9f886fe4349725ddfe955730f6da4f87d1" translate="yes" xml:space="preserve">
          <source>Zip::FileInfo</source>
          <target state="translated">Zip::FileInfo</target>
        </trans-unit>
        <trans-unit id="4dd83265bf4767237825f4ee22b6b7d1fac5c0be" translate="yes" xml:space="preserve">
          <source>Zip::Reader</source>
          <target state="translated">Zip::Reader</target>
        </trans-unit>
        <trans-unit id="2814451c9f214210d28b69fe7f179929cff5ba8d" translate="yes" xml:space="preserve">
          <source>Zip::Reader::Entry</source>
          <target state="translated">Zip::Reader::Entry</target>
        </trans-unit>
        <trans-unit id="17bdf8900b8248a45e609b4ebbf9976a48683d15" translate="yes" xml:space="preserve">
          <source>Zip::Writer</source>
          <target state="translated">Zip::Writer</target>
        </trans-unit>
        <trans-unit id="600c05a606a82f67767946c42c0f8d9b37d14072" translate="yes" xml:space="preserve">
          <source>Zip::Writer::Entry</source>
          <target state="translated">Zip::Writer::Entry</target>
        </trans-unit>
        <trans-unit id="39756722017f3d80cc18b0746f31b445b8fad9e1" translate="yes" xml:space="preserve">
          <source>Zips two arrays into a &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt;, taking keys from &lt;em&gt;ary1&lt;/em&gt; and values from &lt;em&gt;ary2&lt;/em&gt;.</source>
          <target state="translated">将两个数组&lt;em&gt;压缩&lt;/em&gt;为 &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; ，分别从&lt;em&gt;ary1&lt;/em&gt;和&lt;em&gt;ary2&lt;/em&gt;获取键。</target>
        </trans-unit>
        <trans-unit id="11bb391f0b17e28b6022b1e54849a09b53bb2edb" translate="yes" xml:space="preserve">
          <source>Zlib</source>
          <target state="translated">Zlib</target>
        </trans-unit>
        <trans-unit id="c3264249d2ef7925fee4867250a0fb5dc15d9b46" translate="yes" xml:space="preserve">
          <source>Zlib::Error</source>
          <target state="translated">Zlib::Error</target>
        </trans-unit>
        <trans-unit id="1894bf46a7ff65df4e27aeaaa12d78d24f1d67b9" translate="yes" xml:space="preserve">
          <source>Zlib::Reader</source>
          <target state="translated">Zlib::Reader</target>
        </trans-unit>
        <trans-unit id="40c9a14eb88fd6dd76418b650c2899fc313007e9" translate="yes" xml:space="preserve">
          <source>Zlib::Writer</source>
          <target state="translated">Zlib::Writer</target>
        </trans-unit>
        <trans-unit id="38d8021bfb70d096c51a9672b442c320274440cb" translate="yes" xml:space="preserve">
          <source>__crystal_once</source>
          <target state="translated">__crystal_once</target>
        </trans-unit>
        <trans-unit id="e40daff04ba561843372450795f7537ea1e5d0c3" translate="yes" xml:space="preserve">
          <source>__crystal_once_init</source>
          <target state="translated">__crystal_once_init</target>
        </trans-unit>
        <trans-unit id="7a5b0c4abb88b83cf17c957e272c1ed52e30826f" translate="yes" xml:space="preserve">
          <source>__mulodi4</source>
          <target state="translated">__mulodi4</target>
        </trans-unit>
        <trans-unit id="7e15bb5c01e7dd56499e37c634cf791d3a519aee" translate="yes" xml:space="preserve">
          <source>`</source>
          <target state="translated">`</target>
        </trans-unit>
        <trans-unit id="b1a549239e25bab706a2976e36a290a8062dd7cf" translate="yes" xml:space="preserve">
          <source>a convenient syntax is provided for some common types. These are especially useful when writing &lt;a href=&quot;c_bindings/index&quot;&gt;C bindings&lt;/a&gt;, but can be used in any of the above locations.</source>
          <target state="translated">为某些常见类型提供了一种方便的语法。这些在编写&lt;a href=&quot;c_bindings/index&quot;&gt;C绑定&lt;/a&gt;时特别有用，但可以在上述任何位置使用。</target>
        </trans-unit>
        <trans-unit id="b66bb14b9f859af28c92a17ba31a7b1350b3af04" translate="yes" xml:space="preserve">
          <source>a method's &lt;a href=&quot;return_types&quot;&gt;return type&lt;/a&gt;</source>
          <target state="translated">方法的&lt;a href=&quot;return_types&quot;&gt;返回类型&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94557d1c3d4ccbcab9586569ccfbc60bde258419" translate="yes" xml:space="preserve">
          <source>a negative number if &lt;code&gt;self&lt;/code&gt; is less than the other object</source>
          <target state="translated">如果 &lt;code&gt;self&lt;/code&gt; 小于另一个对象，则为负数</target>
        </trans-unit>
        <trans-unit id="c61909496bf663ac38bfb2dbc5fef2924506062b" translate="yes" xml:space="preserve">
          <source>a non-empty slice if some data can be peeked</source>
          <target state="translated">如果一些数据可以被窥视,则为非空片。</target>
        </trans-unit>
        <trans-unit id="0ef0cdacfc83e90d6ef3c4d9a05b3572e1fcca69" translate="yes" xml:space="preserve">
          <source>a positive number if &lt;code&gt;self&lt;/code&gt; is greater than the other object</source>
          <target state="translated">如果 &lt;code&gt;self&lt;/code&gt; 大于另一个对象，则为正数</target>
        </trans-unit>
        <trans-unit id="b61646f016483b318b49a910668a966b6ce09ede" translate="yes" xml:space="preserve">
          <source>abort</source>
          <target state="translated">abort</target>
        </trans-unit>
        <trans-unit id="1a3fca2b3f2cd5914d43586cfac807ecdb75b609" translate="yes" xml:space="preserve">
          <source>abstract class CSV::Lexer</source>
          <target state="translated">abstract class CSV::Lexer</target>
        </trans-unit>
        <trans-unit id="6309298759f3a0fb2ebc1520b06a3af55347fec8" translate="yes" xml:space="preserve">
          <source>abstract class Class</source>
          <target state="translated">抽象类</target>
        </trans-unit>
        <trans-unit id="c8f8983a816ed437f9327dc448979fd2ca7cc31d" translate="yes" xml:space="preserve">
          <source>abstract class Crystal::Macros::ASTNode</source>
          <target state="translated">abstract class Crystal::Macros::ASTNode</target>
        </trans-unit>
        <trans-unit id="50d55bf31ed4f6a45041f36abab97d54ff49b70c" translate="yes" xml:space="preserve">
          <source>abstract class Crystal::Macros::BinaryOp</source>
          <target state="translated">抽象类Crystal::Macros::BinaryOp</target>
        </trans-unit>
        <trans-unit id="a754fbcebe1f321545d2d047a1740014d1b5cfc7" translate="yes" xml:space="preserve">
          <source>abstract class Crystal::Macros::UnaryExpression</source>
          <target state="translated">抽象类Crystal::Macros::UnaryExpression</target>
        </trans-unit>
        <trans-unit id="eac705781289b3d89e70b0ce46b7a14abc0c794c" translate="yes" xml:space="preserve">
          <source>abstract class Digest::Base</source>
          <target state="translated">abstract class Digest::Base</target>
        </trans-unit>
        <trans-unit id="21b628ab8e557749240213a2b3c49b2df52fde0a" translate="yes" xml:space="preserve">
          <source>abstract class IO</source>
          <target state="translated">抽象类IO</target>
        </trans-unit>
        <trans-unit id="409a9aa7a2538a1413b0e0a535d34d8c89a4926d" translate="yes" xml:space="preserve">
          <source>abstract class JSON::Lexer</source>
          <target state="translated">abstract class JSON::Lexer</target>
        </trans-unit>
        <trans-unit id="fcade5d096ef980c3292e5ff623a3ac60d97139c" translate="yes" xml:space="preserve">
          <source>abstract class LLVM::ABI</source>
          <target state="translated">abstract class LLVM::ABI</target>
        </trans-unit>
        <trans-unit id="ca1ae229b4c9c2c1307cb7e798d7b500c26f6a7f" translate="yes" xml:space="preserve">
          <source>abstract class OAuth2::AccessToken</source>
          <target state="translated">摘要类 OAuth2::AccessToken</target>
        </trans-unit>
        <trans-unit id="be3e54ee59342da724707f1179b659404b1cd760" translate="yes" xml:space="preserve">
          <source>abstract class Object</source>
          <target state="translated">抽象类对象</target>
        </trans-unit>
        <trans-unit id="1935276ba720317bc93d8358d5cf83e4ff900977" translate="yes" xml:space="preserve">
          <source>abstract class OpenSSL::SSL::Context</source>
          <target state="translated">abstract class OpenSSL::SSL::Context</target>
        </trans-unit>
        <trans-unit id="1ef4291f9262a4b370413a2919da1993f5bfcf01" translate="yes" xml:space="preserve">
          <source>abstract class OpenSSL::SSL::Socket</source>
          <target state="translated">abstract class OpenSSL::SSL::Socket</target>
        </trans-unit>
        <trans-unit id="a61a19192ce47e424be56e492cf0f75d694a8543" translate="yes" xml:space="preserve">
          <source>abstract class YAML::Nodes::Node</source>
          <target state="translated">abstract class YAML::Nodes::Node</target>
        </trans-unit>
        <trans-unit id="5a6c37a99966f0cfc33fe9256c4811f94cf0fff8" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;&amp;lt;=&amp;gt;&lt;/strong&gt;(other : T)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/comparable.cr#L83&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;&amp;lt;=&amp;gt;&lt;/strong&gt;（其他：T）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/comparable.cr#L83&quot;&gt;来源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a481c8eec78dac0b38bec8184a43b32f599e5ab" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;&amp;lt;=&amp;gt;&lt;/strong&gt;(other : T)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/partial_comparable.cr#L77&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;&amp;lt;=&amp;gt;&lt;/strong&gt;（其他：T）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/partial_comparable.cr#L77&quot;&gt;来源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d75f82c4e90da8cdbd2710479e563d049bf17aad" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;==&lt;/strong&gt;(other)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/object.cr#L6&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;==&lt;/strong&gt;（其他）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/object.cr#L6&quot;&gt;来源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b163dff05838323a4f08abb0d4c9cd1a46f2cda3" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;abi_info&lt;/strong&gt;(atys : &lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;(&lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;), rty : &lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;, ret_def : &lt;a href=&quot;../bool&quot;&gt;Bool&lt;/a&gt;, context : &lt;a href=&quot;context&quot;&gt;Context&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/llvm/abi.cr#L13&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象DEF &lt;strong&gt;abi_info&lt;/strong&gt;（ATYS：&lt;a href=&quot;../array&quot;&gt;阵列&lt;/a&gt;（&lt;a href=&quot;type&quot;&gt;类型&lt;/a&gt;），RTY：&lt;a href=&quot;type&quot;&gt;类型&lt;/a&gt;，ret_def：&lt;a href=&quot;../bool&quot;&gt;布尔&lt;/a&gt;，上下文：&lt;a href=&quot;context&quot;&gt;上下文&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/llvm/abi.cr#L13&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b1d0dae228590d4a4fcaa5f4d470444d4fb6ef3" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;accept&lt;/strong&gt; : &lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/socket/server.cr#L17&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;接受&lt;/strong&gt;：&lt;a href=&quot;../io&quot;&gt;IO &lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/socket/server.cr#L17&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="276fc897ce1d909d2036c7183b5c6dd4b5971b86" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;accept?&lt;/strong&gt; : &lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;?&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/socket/server.cr#L32&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;接受吗？&lt;/strong&gt;：&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;？&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/socket/server.cr#L32&quot;&gt;资源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10b51a60a2dc417b04fb115cfa8388b7253af8ec" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;align&lt;/strong&gt;(type : &lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/llvm/abi.cr#L15&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;align&lt;/strong&gt;（type：&lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/llvm/abi.cr#L15&quot;&gt;来源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e6dc33a5ace27bef0349c6a93ab566761876e55" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;authenticate&lt;/strong&gt;(request : &lt;a href=&quot;../http/request&quot;&gt;HTTP::Request&lt;/a&gt;, tls)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/oauth2/access_token/access_token.cr#L61&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;身份验证&lt;/strong&gt;（请求：&lt;a href=&quot;../http/request&quot;&gt;HTTP :: Request&lt;/a&gt;，tls）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/oauth2/access_token/access_token.cr#L61&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="193850bf106e27a348e7514cfed56813664436c9" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;call&lt;/strong&gt;(context : &lt;a href=&quot;server/context&quot;&gt;HTTP::Server::Context&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/http/server/handler.cr#L22&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;调用&lt;/strong&gt;（上下文：&lt;a href=&quot;server/context&quot;&gt;HTTP :: Server :: Context&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/http/server/handler.cr#L22&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1419e2bd3125bf9e10e598f3646b6ed929801bf2" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;decode&lt;/strong&gt;(int : Int128.class, bytes : &lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L83&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;解码&lt;/strong&gt;（int：Int128.class，bytes：&lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L83&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2e4fd28d863bedc1ab76b9e094b8ee1572fed5c" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;decode&lt;/strong&gt;(int : Int128.class, io : &lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L70&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;解码&lt;/strong&gt;（int：Int128.class，io：&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L70&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94372f2872659e281b6b9f8427ecafca67fcaa33" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;decode&lt;/strong&gt;(int : Int16.class, bytes : &lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L77&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;解码&lt;/strong&gt;（int：Int16.class，bytes：&lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L77&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="31a17619be53d8558d1071ca7e590f568a264b62" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;decode&lt;/strong&gt;(int : Int16.class, io : &lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L64&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;解码&lt;/strong&gt;（int：Int16.class，io：&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L64&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6007da3e7980432b410e4de20a39585aa4dfe2f6" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;decode&lt;/strong&gt;(int : Int32.class, bytes : &lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L79&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;解码&lt;/strong&gt;（int：Int32.class，bytes：&lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L79&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f8496baf46ca72116d6ad3a707e50deca5cbdfc" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;decode&lt;/strong&gt;(int : Int32.class, io : &lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L66&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;解码&lt;/strong&gt;（int：Int32.class，io：&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L66&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09ca1277e11a77f3401c9f232a329347dbd7a476" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;decode&lt;/strong&gt;(int : Int64.class, bytes : &lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L81&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;解码&lt;/strong&gt;（int：Int64.class，bytes：&lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L81&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd551db220b20679b9b58be8ac4e93b9b5af3c7c" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;decode&lt;/strong&gt;(int : Int64.class, io : &lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L68&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;解码&lt;/strong&gt;（int：Int64.class，io：&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L68&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0fb2154883e6193d5f7f61a8cfa8f1d87bf94d3c" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;decode&lt;/strong&gt;(int : Int8.class, bytes : &lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L75&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;解码&lt;/strong&gt;（int：Int8.class，bytes：&lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L75&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0049faaa3c2e2d5591ae479e8732a805871ba8b6" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;decode&lt;/strong&gt;(int : Int8.class, io : &lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L62&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;解码&lt;/strong&gt;（int：Int8.class，io：&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L62&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e104245abe9ea5a50520831a77a1de7ea452ecde" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;decode&lt;/strong&gt;(int : UInt128.class, bytes : &lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L84&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;解码&lt;/strong&gt;（int：UInt128.class，bytes：&lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L84&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5cdec6b78a5d3f2651ea42bb6778157ef0807075" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;decode&lt;/strong&gt;(int : UInt128.class, io : &lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L71&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;解码&lt;/strong&gt;（int：UInt128.class，io：&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L71&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa3b170ace3603bebdeedfc847dc4866b22bc293" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;decode&lt;/strong&gt;(int : UInt16.class, bytes : &lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L78&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;解码&lt;/strong&gt;（int：UInt16.class，bytes：&lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L78&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8557e5e88e3a81fa514383fe57a5d182a1b0c47e" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;decode&lt;/strong&gt;(int : UInt16.class, io : &lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L65&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;解码&lt;/strong&gt;（int：UInt16.class，io：&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L65&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f35d9f24577331ef8736e3e9762a94c772d74070" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;decode&lt;/strong&gt;(int : UInt32.class, bytes : &lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L80&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;解码&lt;/strong&gt;（int：UInt32.class，bytes：&lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L80&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e910454b0472a1e7040d8951a39903e221e9a21" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;decode&lt;/strong&gt;(int : UInt32.class, io : &lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L67&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;解码&lt;/strong&gt;（int：UInt32.class，io：&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L67&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="41ffe56c0b91d0d6ad5140c0ff5545760eb9ad9c" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;decode&lt;/strong&gt;(int : UInt64.class, bytes : &lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L82&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象DEF &lt;strong&gt;解码&lt;/strong&gt;（INT：UInt64.class，字节：&lt;a href=&quot;../bytes&quot;&gt;字节&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L82&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd38485f89cdb1c3cdea30ca6ce034dc406c8cc1" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;decode&lt;/strong&gt;(int : UInt64.class, io : &lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L69&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;解码&lt;/strong&gt;（int：UInt64.class，io：&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L69&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50ba0855ba9d994ef93b0d1a42455591cb4e1e05" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;decode&lt;/strong&gt;(int : UInt8.class, bytes : &lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L76&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;解码&lt;/strong&gt;（int：UInt8.class，bytes：&lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L76&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d17009af2f9479c0b0f4b797c17d306f71203753" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;decode&lt;/strong&gt;(int : UInt8.class, io : &lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L63&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;解码&lt;/strong&gt;（int：UInt8.class，io：&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L63&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3bc65af908f1a78a9463a2409fcf1cbe4921a2d" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;dup&lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/object.cr#L229&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象高清&lt;strong&gt;DUP &lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/object.cr#L229&quot;&gt;来源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab4eb2b6f69be0b9563e2279b422cdada345079e" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;each&lt;/strong&gt;(&amp;amp;block : T -&amp;gt; UNDERSCORE)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/enumerable.cr#L37&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;每个&lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/enumerable.cr#L37&quot;&gt;源的&lt;/a&gt;抽象定义（＆block：T-&amp;gt; UNDERSCORE）来源</target>
        </trans-unit>
        <trans-unit id="a8cef9debc64804bfd2f012cda57091d3f79f234" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;each&lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/iterable.cr#L5&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;每个&lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/iterable.cr#L5&quot;&gt;源的&lt;/a&gt;抽象定义</target>
        </trans-unit>
        <trans-unit id="df254c34d0eeade326f5219b6f2fbc25dc6d79e3" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;encode&lt;/strong&gt;(int : &lt;a href=&quot;../int128&quot;&gt;Int128&lt;/a&gt;, bytes : &lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L57&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;编码&lt;/strong&gt;（int：&lt;a href=&quot;../int128&quot;&gt;Int128&lt;/a&gt;，bytes：&lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L57&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96f66564ca1d5071be4e04f1aefd14efedef3370" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;encode&lt;/strong&gt;(int : &lt;a href=&quot;../int128&quot;&gt;Int128&lt;/a&gt;, io : &lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L44&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;编码&lt;/strong&gt;（int：&lt;a href=&quot;../int128&quot;&gt;Int128&lt;/a&gt;，io：&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L44&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="349fda1f059b0f30e77e1309ffa56794708afaf9" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;encode&lt;/strong&gt;(int : &lt;a href=&quot;../int16&quot;&gt;Int16&lt;/a&gt;, bytes : &lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L51&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;编码&lt;/strong&gt;（int：&lt;a href=&quot;../int16&quot;&gt;Int16&lt;/a&gt;，bytes：&lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L51&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f374e13e532305e08101b88eea2536c4fbd98c4" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;encode&lt;/strong&gt;(int : &lt;a href=&quot;../int16&quot;&gt;Int16&lt;/a&gt;, io : &lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L38&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;编码&lt;/strong&gt;（int：&lt;a href=&quot;../int16&quot;&gt;Int16&lt;/a&gt;，io：&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L38&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e141f08a3bbc96253e68467a83b9dd250bc43c3" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;encode&lt;/strong&gt;(int : &lt;a href=&quot;../int32&quot;&gt;Int32&lt;/a&gt;, bytes : &lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L53&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;编码&lt;/strong&gt;（int：&lt;a href=&quot;../int32&quot;&gt;Int32&lt;/a&gt;，bytes：&lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L53&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b17f7514ee44db03ef889ba85bf5c42a46272e55" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;encode&lt;/strong&gt;(int : &lt;a href=&quot;../int32&quot;&gt;Int32&lt;/a&gt;, io : &lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L40&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;编码&lt;/strong&gt;（int：&lt;a href=&quot;../int32&quot;&gt;Int32&lt;/a&gt;，io：&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L40&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="542b10d6d9454484a417a8f52984da36b6d5f168" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;encode&lt;/strong&gt;(int : &lt;a href=&quot;../int64&quot;&gt;Int64&lt;/a&gt;, bytes : &lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L55&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;编码&lt;/strong&gt;（int：&lt;a href=&quot;../int64&quot;&gt;Int64&lt;/a&gt;，bytes：&lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L55&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff539ccd6688287affc2eeff5295c701ae1a9b86" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;encode&lt;/strong&gt;(int : &lt;a href=&quot;../int64&quot;&gt;Int64&lt;/a&gt;, io : &lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L42&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;编码&lt;/strong&gt;（int：&lt;a href=&quot;../int64&quot;&gt;Int64&lt;/a&gt;，io：&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L42&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5bd3221bbaa9c5e7d31c8d8bf1d70a2041c72ff2" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;encode&lt;/strong&gt;(int : &lt;a href=&quot;../int8&quot;&gt;Int8&lt;/a&gt;, bytes : &lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L49&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;编码&lt;/strong&gt;（int：&lt;a href=&quot;../int8&quot;&gt;Int8&lt;/a&gt;，bytes：&lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L49&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec4f9dc9b6005c04aef86ccfccef0b56b8f85529" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;encode&lt;/strong&gt;(int : &lt;a href=&quot;../int8&quot;&gt;Int8&lt;/a&gt;, io : &lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L36&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;编码&lt;/strong&gt;（int：&lt;a href=&quot;../int8&quot;&gt;Int8&lt;/a&gt;，io：&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L36&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5554e2867730add0123f4ae7bba491fcea3dd25e" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;encode&lt;/strong&gt;(int : &lt;a href=&quot;../uint128&quot;&gt;UInt128&lt;/a&gt;, bytes : &lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L58&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象DEF &lt;strong&gt;编码&lt;/strong&gt;（INT：&lt;a href=&quot;../uint128&quot;&gt;UInt128&lt;/a&gt;，字节：&lt;a href=&quot;../bytes&quot;&gt;字节&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L58&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c7388b62442d2fcd68aa745d3d5c484d0e54486" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;encode&lt;/strong&gt;(int : &lt;a href=&quot;../uint128&quot;&gt;UInt128&lt;/a&gt;, io : &lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L45&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;编码&lt;/strong&gt;（int：&lt;a href=&quot;../uint128&quot;&gt;UInt128&lt;/a&gt;，io：&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L45&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="017366d7778b7bcf43c004982572cde0a2ec85e0" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;encode&lt;/strong&gt;(int : &lt;a href=&quot;../uint16&quot;&gt;UInt16&lt;/a&gt;, bytes : &lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L52&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;编码&lt;/strong&gt;（int：&lt;a href=&quot;../uint16&quot;&gt;UInt16&lt;/a&gt;，bytes：&lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L52&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1f793970cfcebee22fe6b41f07e8a4cd622fc6b0" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;encode&lt;/strong&gt;(int : &lt;a href=&quot;../uint16&quot;&gt;UInt16&lt;/a&gt;, io : &lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L39&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;编码&lt;/strong&gt;（int：&lt;a href=&quot;../uint16&quot;&gt;UInt16&lt;/a&gt;，io：&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L39&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1d2df95efb84ca8daf10f56bb3ce37b90ce0c9c" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;encode&lt;/strong&gt;(int : &lt;a href=&quot;../uint32&quot;&gt;UInt32&lt;/a&gt;, bytes : &lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L54&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;编码&lt;/strong&gt;（int：&lt;a href=&quot;../uint32&quot;&gt;UInt32&lt;/a&gt;，bytes：&lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L54&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c69fefd1d2a802433e78e8646a8cafa1b01e51d8" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;encode&lt;/strong&gt;(int : &lt;a href=&quot;../uint32&quot;&gt;UInt32&lt;/a&gt;, io : &lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L41&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;编码&lt;/strong&gt;（int：&lt;a href=&quot;../uint32&quot;&gt;UInt32&lt;/a&gt;，io：&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L41&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5334d26a6eb0627ed2e9ce81973bd09aa2113033" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;encode&lt;/strong&gt;(int : &lt;a href=&quot;../uint64&quot;&gt;UInt64&lt;/a&gt;, bytes : &lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L56&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;编码&lt;/strong&gt;（int：&lt;a href=&quot;../uint64&quot;&gt;UInt64&lt;/a&gt;，bytes：&lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L56&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ad7fb364ca1c000d5a74063067b4036a44ec94e8" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;encode&lt;/strong&gt;(int : &lt;a href=&quot;../uint64&quot;&gt;UInt64&lt;/a&gt;, io : &lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L43&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;编码&lt;/strong&gt;（int：&lt;a href=&quot;../uint64&quot;&gt;UInt64&lt;/a&gt;，io：&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L43&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="888e9ade639ff4adac04301adc09ab0937793bb9" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;encode&lt;/strong&gt;(int : &lt;a href=&quot;../uint8&quot;&gt;UInt8&lt;/a&gt;, bytes : &lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L50&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象DEF &lt;strong&gt;编码&lt;/strong&gt;（INT：&lt;a href=&quot;../uint8&quot;&gt;UINT8&lt;/a&gt;，字节：&lt;a href=&quot;../bytes&quot;&gt;字节&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L50&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="93f41c735fa28a76b68f802adb804a0c60f8ebba" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;encode&lt;/strong&gt;(int : &lt;a href=&quot;../uint8&quot;&gt;UInt8&lt;/a&gt;, io : &lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L37&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;编码&lt;/strong&gt;（int：&lt;a href=&quot;../uint8&quot;&gt;UInt8&lt;/a&gt;，io：&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/byte_format.cr#L37&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e95f57b0727261e3cc3e5eb9b29d13a26c1b7026" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;execute&lt;/strong&gt; : S | &lt;a href=&quot;notready&quot;&gt;NotReady&lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/channel.cr#L28&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;执行&lt;/strong&gt;：S | &lt;a href=&quot;notready&quot;&gt;未就绪&lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/channel.cr#L28&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f8bff49074b3d6b83fdeca3f2a7eeddbddd09f82" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;flags&lt;/strong&gt; : &lt;a href=&quot;flags&quot;&gt;Flags&lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/file/info.cr#L91&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;标志&lt;/strong&gt;：&lt;a href=&quot;flags&quot;&gt;标志&lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/file/info.cr#L91&quot;&gt;来源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ad172f851f9c9a742dc7c3f3f88bc12ad3a72497" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;group&lt;/strong&gt; : &lt;a href=&quot;../uint32&quot;&gt;UInt32&lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/file/info.cr#L100&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;组&lt;/strong&gt;：&lt;a href=&quot;../uint32&quot;&gt;UInt32 &lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/file/info.cr#L100&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6dac81b6d27a74b6c9d00376b01155209610aaa8" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;hash&lt;/strong&gt;(hasher)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/object.cr#L74&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;哈希&lt;/strong&gt;（哈希）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/object.cr#L74&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94e76b938038f593caac3ce560a09fe281f365eb" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;lock&lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/channel.cr#L33&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;锁&lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/channel.cr#L33&quot;&gt;来源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75f13a689689186097b980d9d84af6e13bac4f32" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;lock_object_id&lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/channel.cr#L32&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;lock_object_id &lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/channel.cr#L32&quot;&gt;来源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9517ba96e3f6055d85fd45048b22fbc369eca8c" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;modification_time&lt;/strong&gt; : &lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/file/info.cr#L94&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象高清&lt;strong&gt;MODIFICATION_TIME&lt;/strong&gt;：&lt;a href=&quot;../time&quot;&gt;时间&lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/file/info.cr#L94&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed6a2cddb6b04ec46984fe4b56f1306d058494a3" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;next&lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/iterator.cr#L145&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;next &lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/iterator.cr#L145&quot;&gt;来源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d7f2022a713b2038c850ae7f8c3c5728c3f0afc" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;next_u&lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/random.cr#L69&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;next_u &lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/random.cr#L69&quot;&gt;来源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="288b65885cd13822117bcd809ad73a16f277d49c" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;owner&lt;/strong&gt; : &lt;a href=&quot;../uint32&quot;&gt;UInt32&lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/file/info.cr#L97&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象的def &lt;strong&gt;所有者&lt;/strong&gt;：&lt;a href=&quot;../uint32&quot;&gt;UInt32 &lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/file/info.cr#L97&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="229db78aa87ee29f6e403341a89b41adf4b33c80" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;permissions&lt;/strong&gt; : &lt;a href=&quot;permissions&quot;&gt;Permissions&lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/file/info.cr#L85&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;权限&lt;/strong&gt;：&lt;a href=&quot;permissions&quot;&gt;权限&lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/file/info.cr#L85&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="538fb3182612d68f399d65962bbe6613f21cc687" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;popcount&lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/int.cr#L529&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;popcount &lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/int.cr#L529&quot;&gt;来源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1a6cf68f791aae4f288d03755e9e6a1768fdf3aa" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;read&lt;/strong&gt;(slice : &lt;a href=&quot;bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io.cr#L102&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;读取&lt;/strong&gt;（slice：&lt;a href=&quot;bytes&quot;&gt;Bytes&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io.cr#L102&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c898902bf75d3fb8cb701f4b4f11bda463210a6" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;result&lt;/strong&gt; : S&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/channel.cr#L31&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;结果&lt;/strong&gt;：S &lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/channel.cr#L31&quot;&gt;来源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c78a253a3c917648b758ac55b844d8e5b9ff3b58" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;same_file?&lt;/strong&gt;(other : &lt;a href=&quot;info&quot;&gt;File::Info&lt;/a&gt;) : &lt;a href=&quot;../bool&quot;&gt;Bool&lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/file/info.cr#L106&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象的def &lt;strong&gt;same_file？&lt;/strong&gt;（其他：&lt;a href=&quot;info&quot;&gt;File :: Info&lt;/a&gt;）：&lt;a href=&quot;../bool&quot;&gt;Bool &lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/file/info.cr#L106&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66964195c4f16209b2f3a5f874485ed8e33e8e66" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;size&lt;/strong&gt; : &lt;a href=&quot;../uint64&quot;&gt;UInt64&lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/file/info.cr#L82&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;大小&lt;/strong&gt;：&lt;a href=&quot;../uint64&quot;&gt;UInt64 &lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/file/info.cr#L82&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="031f730e729bcd273c91945884fe379bd314769c" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;size&lt;/strong&gt;(type : &lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/llvm/abi.cr#L14&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;大小&lt;/strong&gt;（类型：&lt;a href=&quot;type&quot;&gt;类型&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/llvm/abi.cr#L14&quot;&gt;来源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5cb8078ca580302671520f44733ce204d80a4527" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;size&lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/indexable.cr#L13&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;大小&lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/indexable.cr#L13&quot;&gt;来源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d59200a9d773f70c86c961fc6a538aed2a1e7ff7" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;to_s&lt;/strong&gt;(io : &lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;) : &lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/object.cr#L105&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象DEF &lt;strong&gt;to_s&lt;/strong&gt;（IO：&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;）：&lt;a href=&quot;nil&quot;&gt;无&lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/object.cr#L105&quot;&gt;来源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3728b76ff001e04fe78c7bf2e0e2123416a212f" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;to_unsafe&lt;/strong&gt; : &lt;a href=&quot;../pointer&quot;&gt;Pointer&lt;/a&gt;(LibC::Sockaddr)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/socket/address.cr#L52&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;to_unsafe&lt;/strong&gt;：&lt;a href=&quot;../pointer&quot;&gt;指针&lt;/a&gt;（LibC :: Sockaddr）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/socket/address.cr#L52&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39cd532152ec5df14fd2c7171df6727dfd7fc703" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;trailing_zeros_count&lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/int.cr#L532&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;Trailing_zeros_count &lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/int.cr#L532&quot;&gt;来源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f5ce1a35a4d2151dc966170f92702bf4fd1851c3" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;type&lt;/strong&gt; : &lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/file/info.cr#L88&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;类型&lt;/strong&gt;：&lt;a href=&quot;type&quot;&gt;类型&lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/file/info.cr#L88&quot;&gt;来源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e69a7372d625e123495dcf7b6487512dd5a79beb" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;unbuffered_close&lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/buffered.cr#L27&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;unbuffered_close &lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/buffered.cr#L27&quot;&gt;来源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ad5f9532f33a8fbcc6f723189e14975d4d28d6e" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;unbuffered_flush&lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/buffered.cr#L24&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;unbuffered_flush &lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/buffered.cr#L24&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f1612b9d9cf31cc36430faea40c24633548f97e" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;unbuffered_read&lt;/strong&gt;(slice : &lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/buffered.cr#L17&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;unbuffered_read&lt;/strong&gt;（切片：&lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/buffered.cr#L17&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a48e5194f5d7826ad76a2d7b382bd1b000d85c46" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;unbuffered_rewind&lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/buffered.cr#L30&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;unbuffered_rewind &lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/buffered.cr#L30&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="97bca31d6cc430505ccaa6d4a84b0a1353a14eda" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;unbuffered_write&lt;/strong&gt;(slice : &lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/buffered.cr#L21&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;unbuffered_write&lt;/strong&gt;（slice：&lt;a href=&quot;../bytes&quot;&gt;Bytes&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io/buffered.cr#L21&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5bb7997558a781711597b0e1f4db6cf9c59477c8" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;unlock&lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/channel.cr#L34&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;解锁&lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/channel.cr#L34&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc2dfa312139ff65c3348b47ef1174ac42170ec5" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;unsafe_fetch&lt;/strong&gt;(index : &lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;)&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/indexable.cr#L26&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;unsafe_fetch&lt;/strong&gt;（index：&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;）&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/indexable.cr#L26&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f2582f0b0902384750417ee29a6c1b10d55f23f" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;unwait&lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/channel.cr#L30&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def不&lt;strong&gt;等待&lt;/strong&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/channel.cr#L30&quot;&gt;来源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10c53c8b0e7774a4be460439b34ceb228ed07904" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;wait&lt;/strong&gt;(context : SelectContext(S))&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/channel.cr#L29&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象def &lt;strong&gt;等待&lt;/strong&gt;（上下文：SelectContext（S））&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/channel.cr#L29&quot;&gt;源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c90b33672aec595fcf3b1a5b0d00ce7b1e3570c2" translate="yes" xml:space="preserve">
          <source>abstract def &lt;strong&gt;write&lt;/strong&gt;(slice : &lt;a href=&quot;bytes&quot;&gt;Bytes&lt;/a&gt;) : &lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io.cr#L112&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">抽象高清&lt;strong&gt;写&lt;/strong&gt;（片：&lt;a href=&quot;bytes&quot;&gt;字节&lt;/a&gt;）：&lt;a href=&quot;nil&quot;&gt;无&lt;/a&gt;&lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/0e2e1d067af09e7b1e4573a7258c433e3cf8fa17/src/io.cr#L112&quot;&gt;来源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e6a3942e29090b26be58b77a9cb84ea52763e8f9" translate="yes" xml:space="preserve">
          <source>abstract struct Enum</source>
          <target state="translated">抽象结构Enum</target>
        </trans-unit>
        <trans-unit id="8a73a74d6a63fa2332620d36264c75380b416975" translate="yes" xml:space="preserve">
          <source>abstract struct File::Info</source>
          <target state="translated">抽象结构 File::Info</target>
        </trans-unit>
        <trans-unit id="0baea011cbb307a561af964a888575ecb3287009" translate="yes" xml:space="preserve">
          <source>abstract struct Float</source>
          <target state="translated">抽象结构 Float</target>
        </trans-unit>
        <trans-unit id="6e66bb5fcc2a041d56c3fba587d74e4d028ba842" translate="yes" xml:space="preserve">
          <source>abstract struct Int</source>
          <target state="translated">抽象结构Int</target>
        </trans-unit>
        <trans-unit id="ed967a79827f0989dc5499e3851c169f02fb1cdd" translate="yes" xml:space="preserve">
          <source>abstract struct Number</source>
          <target state="translated">抽象结构Number</target>
        </trans-unit>
        <trans-unit id="9af50af8d018e93a4dc7f0d6e640bf17c6f9bb6c" translate="yes" xml:space="preserve">
          <source>abstract struct Socket::Address</source>
          <target state="translated">抽象结构Socket::Address</target>
        </trans-unit>
        <trans-unit id="cb1ca79ad3c89e8806ac6edfbf3d09029b03a2ff" translate="yes" xml:space="preserve">
          <source>abstract struct Struct</source>
          <target state="translated">抽象的结构</target>
        </trans-unit>
        <trans-unit id="efdb437b275fddb616533886eba27b33af21d419" translate="yes" xml:space="preserve">
          <source>abstract struct Value</source>
          <target state="translated">抽象结构值</target>
        </trans-unit>
        <trans-unit id="6227fae17fc95c975d5f8808f6d5514b5fd02ea7" translate="yes" xml:space="preserve">
          <source>adler32/adler32.cr</source>
          <target state="translated">adler32/adler32.cr</target>
        </trans-unit>
        <trans-unit id="cdb6fdbe91faa53a7c573c80b7c18108c73c0480" translate="yes" xml:space="preserve">
          <source>alias</source>
          <target state="translated">alias</target>
        </trans-unit>
        <trans-unit id="268eadd8e470e41f577b3fc16cf1449ff75d78c1" translate="yes" xml:space="preserve">
          <source>alias Bytes</source>
          <target state="translated">别名 字节数</target>
        </trans-unit>
        <trans-unit id="d4739947a789902d96ad18964ee5dc2ded5ffb5f" translate="yes" xml:space="preserve">
          <source>alias Colorize::Color</source>
          <target state="translated">别名Colorize::Color</target>
        </trans-unit>
        <trans-unit id="2d4983c3cb5033fe8337e271e890f7555f80f6a9" translate="yes" xml:space="preserve">
          <source>alias Float::Primitive</source>
          <target state="translated">又名Float::Primitive</target>
        </trans-unit>
        <trans-unit id="7ab800b8a56946b0979034b4a0f10c928847f974" translate="yes" xml:space="preserve">
          <source>alias HTTP::Client::BodyType</source>
          <target state="translated">别名HTTP::Client::BodyType。</target>
        </trans-unit>
        <trans-unit id="4f80f82dbac406180c76dade93046497debdfaea" translate="yes" xml:space="preserve">
          <source>alias HTTP::Handler::HandlerProc</source>
          <target state="translated">别名HTTP::Handler::HandlerProc。</target>
        </trans-unit>
        <trans-unit id="22d52c1e12061ef9d2759eceaa0ab4f5196782f2" translate="yes" xml:space="preserve">
          <source>alias IO::ByteFormat::NetworkEndian</source>
          <target state="translated">别名 IO::ByteFormat::NetworkEndian。</target>
        </trans-unit>
        <trans-unit id="f20e31babb58b745bbfdc7b09ac9499094e7b6c2" translate="yes" xml:space="preserve">
          <source>alias IO::ByteFormat::SystemEndian</source>
          <target state="translated">别名 IO::ByteFormat::SystemEndian。</target>
        </trans-unit>
        <trans-unit id="bcb69d6defe40e2ea83478d3229eb118c4dc588a" translate="yes" xml:space="preserve">
          <source>alias Int::Primitive</source>
          <target state="translated">又名Int::Primitive</target>
        </trans-unit>
        <trans-unit id="7b594a6d4f1f2e2a63463106fbc20961aeac0f30" translate="yes" xml:space="preserve">
          <source>alias Int::Signed</source>
          <target state="translated">别名 Int::Signed</target>
        </trans-unit>
        <trans-unit id="99498effd2c040a4e63c0137ac302be1474911ce" translate="yes" xml:space="preserve">
          <source>alias Int::Unsigned</source>
          <target state="translated">别名 Int::Unsigned</target>
        </trans-unit>
        <trans-unit id="b1cef2cad36b4d894ac984e95cc15f4e5959167e" translate="yes" xml:space="preserve">
          <source>alias JSON::Any::Type</source>
          <target state="translated">别名JSON::Any::Type</target>
        </trans-unit>
        <trans-unit id="e7b16704467709d204141cb85d6d66c6028b1120" translate="yes" xml:space="preserve">
          <source>alias JSON::Builder::State</source>
          <target state="translated">别名JSON::Builder::State。</target>
        </trans-unit>
        <trans-unit id="9292363d28ddaced0b7effdb613c349ee17b3aa9" translate="yes" xml:space="preserve">
          <source>alias Logger::Formatter</source>
          <target state="translated">别名:记录仪::格式化</target>
        </trans-unit>
        <trans-unit id="39c43f0a96c5078c8ff21d37b3e6823d3702816b" translate="yes" xml:space="preserve">
          <source>alias Number::Primitive</source>
          <target state="translated">别名Number::Primitive</target>
        </trans-unit>
        <trans-unit id="93f1789ed329cb907972fd8bf7d500a0d17e83fb" translate="yes" xml:space="preserve">
          <source>alias OpenSSL::SSL::ErrorType</source>
          <target state="translated">别名OpenSSL::SSL::错误类型。</target>
        </trans-unit>
        <trans-unit id="707396ddbec52ccd496e3d2bec9985ea3acfc738" translate="yes" xml:space="preserve">
          <source>alias OpenSSL::SSL::Modes</source>
          <target state="translated">别名 OpenSSL::SSL::Modes</target>
        </trans-unit>
        <trans-unit id="0876f0988b223e026dda6502d902493b217326dc" translate="yes" xml:space="preserve">
          <source>alias OpenSSL::SSL::Options</source>
          <target state="translated">别名 OpenSSL::SSL::选项</target>
        </trans-unit>
        <trans-unit id="1b8891c43f261ca4e06228a301cd200cd656adb9" translate="yes" xml:space="preserve">
          <source>alias OpenSSL::SSL::VerifyMode</source>
          <target state="translated">别名 OpenSSL::SSL::VerifyMode。</target>
        </trans-unit>
        <trans-unit id="a92afcbb4015232edb99f495c69f62d2766fb7eb" translate="yes" xml:space="preserve">
          <source>alias OpenSSL::SSL::X509VerifyFlags</source>
          <target state="translated">别名 OpenSSL::SSL::X509VerifyFlags。</target>
        </trans-unit>
        <trans-unit id="ff78554236c73308c3339db1b09265e32d8f097b" translate="yes" xml:space="preserve">
          <source>alias Process::Env</source>
          <target state="translated">别名 Process::Env</target>
        </trans-unit>
        <trans-unit id="f5d81da65b0047e95c02100ae306da5bfd6e5aec" translate="yes" xml:space="preserve">
          <source>alias Process::ExecStdio</source>
          <target state="translated">别名 Process::ExecStdio</target>
        </trans-unit>
        <trans-unit id="cc7fa31a825836b4da2df400485e333f70576078" translate="yes" xml:space="preserve">
          <source>alias Process::Stdio</source>
          <target state="translated">别名 Process::Stdio</target>
        </trans-unit>
        <trans-unit id="9bdd5149833b3feb97026db6ac65348d14a003c2" translate="yes" xml:space="preserve">
          <source>alias Readline::CompletionProc</source>
          <target state="translated">别名Readline::ContinuousProc</target>
        </trans-unit>
        <trans-unit id="4ed4ebf44f119fc61a2fea4f97d33fa14c0b3e13" translate="yes" xml:space="preserve">
          <source>alias Readline::KeyBindingProc</source>
          <target state="translated">别名Readline::KeyBindingProc。</target>
        </trans-unit>
        <trans-unit id="db624b8ebcddbec0486788b6b40ba21cebdbc290" translate="yes" xml:space="preserve">
          <source>alias YAML::Any::Type</source>
          <target state="translated">别名YAML::Any::Type</target>
        </trans-unit>
        <trans-unit id="683e8e1712ac4491864e772a533e5badbcde7173" translate="yes" xml:space="preserve">
          <source>all copyright and related or neighboring rights to this workby associating CC0 with it.</source>
          <target state="translated">将CC0与本作品的所有版权和相关或邻接权联系起来。</target>
        </trans-unit>
        <trans-unit id="0e3d93159476afafe5898bf139ce1cf888f1c764" translate="yes" xml:space="preserve">
          <source>an empty slice if it is, but EOF was reached</source>
          <target state="translated">一个空的片断,如果它是空的,但达到了 EOF</target>
        </trans-unit>
        <trans-unit id="dae45b6ab20e063e7d0760d5ce07d87b4277310e" translate="yes" xml:space="preserve">
          <source>an optional double splat argument</source>
          <target state="translated">一个可选的双击参数</target>
        </trans-unit>
        <trans-unit id="1e287677765929d4a83dc238f06d3d71c430d32f" translate="yes" xml:space="preserve">
          <source>an optional splat argument, whose name can be empty</source>
          <target state="translated">一个可选的spat参数,其名称可以是空的。</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="54b98c130a0d005e9d9a139f1b7005bf3679fe31" translate="yes" xml:space="preserve">
          <source>and then use it like so with the &lt;code&gt;&lt;a href=&quot;ecr#def_to_s(filename)-macro&quot;&gt;#def_to_s&lt;/a&gt;&lt;/code&gt; macro:</source>
          <target state="translated">然后将其与 &lt;code&gt;&lt;a href=&quot;ecr#def_to_s(filename)-macro&quot;&gt;#def_to_s&lt;/a&gt;&lt;/code&gt; 宏一起使用：</target>
        </trans-unit>
        <trans-unit id="4592df21f6a42f715a74940582f48da74c761197" translate="yes" xml:space="preserve">
          <source>annotation Deprecated</source>
          <target state="translated">注释 弃用</target>
        </trans-unit>
        <trans-unit id="68d87fff49e98991406953a7740271e7a76429ea" translate="yes" xml:space="preserve">
          <source>annotation Flags</source>
          <target state="translated">注释标志</target>
        </trans-unit>
        <trans-unit id="3706741f8545f82933854708ab7ba16110f761d7" translate="yes" xml:space="preserve">
          <source>annotation JSON::Field</source>
          <target state="translated">注释 JSON::Field</target>
        </trans-unit>
        <trans-unit id="8b940a7e405aece0f69554d3039c0317aaf64e40" translate="yes" xml:space="preserve">
          <source>annotation JSON::Serializable::Options</source>
          <target state="translated">注释 JSON::Serializable::Options)。</target>
        </trans-unit>
        <trans-unit id="63bbc8db19ae3e68c70fb73384987538f1e18c05" translate="yes" xml:space="preserve">
          <source>annotation Link</source>
          <target state="translated">注释链接</target>
        </trans-unit>
        <trans-unit id="3629a19feb1648c00a664ead57ffec9bdcf8d447" translate="yes" xml:space="preserve">
          <source>annotation YAML::Field</source>
          <target state="translated">注释 YAML::Field</target>
        </trans-unit>
        <trans-unit id="809487572105c9615a4af485ddf077411e5cc0de" translate="yes" xml:space="preserve">
          <source>annotation YAML::Serializable::Options</source>
          <target state="translated">注释 YAML::Serializable::Options</target>
        </trans-unit>
        <trans-unit id="873acf0ebffb71e5a6b3178c0886316ccd3a5aee" translate="yes" xml:space="preserve">
          <source>annotations.cr</source>
          <target state="translated">annotations.cr</target>
        </trans-unit>
        <trans-unit id="72977202db1e3e78c1a0d89727eeed77dff6e936" translate="yes" xml:space="preserve">
          <source>array.cr</source>
          <target state="translated">array.cr</target>
        </trans-unit>
        <trans-unit id="df211ccdd94a63e0bcb9e6ae427a249484a49d60" translate="yes" xml:space="preserve">
          <source>as</source>
          <target state="translated">as</target>
        </trans-unit>
        <trans-unit id="66cead63c51a454faef06b0fb865ba56ada47a69" translate="yes" xml:space="preserve">
          <source>as it will create an intermediate string. Always append an object directly to an IO.</source>
          <target state="translated">因为它会创建一个中间字符串。总是直接将一个对象追加到一个IO上。</target>
        </trans-unit>
        <trans-unit id="3c75e4fb5f540ca0899447406b6ebee1df8e63f2" translate="yes" xml:space="preserve">
          <source>as namespaces for defining other types, methods and constants</source>
          <target state="translated">作为定义其他类型、方法和常量的命名空间。</target>
        </trans-unit>
        <trans-unit id="c303c4acbaf7c210c8e7cd74cace5f6ad3860e14" translate="yes" xml:space="preserve">
          <source>as partial types that can be mixed in other types</source>
          <target state="translated">作为部分类型,可以混合在其他类型中。</target>
        </trans-unit>
        <trans-unit id="0d02b6040143745153d8c3e1b33b995f95d802a1" translate="yes" xml:space="preserve">
          <source>as?</source>
          <target state="translated">as?</target>
        </trans-unit>
        <trans-unit id="d25fa281a64c10f8fc9b121f25ff1a1d91fd6d3b" translate="yes" xml:space="preserve">
          <source>asctime</source>
          <target state="translated">asctime</target>
        </trans-unit>
        <trans-unit id="24e3e47053397f23366a12790bb662d166ae88e1" translate="yes" xml:space="preserve">
          <source>assert_responds_to</source>
          <target state="translated">assert_responds_to</target>
        </trans-unit>
        <trans-unit id="595f408b32987537d8ec59a3343a4c5532e7ae39" translate="yes" xml:space="preserve">
          <source>at_exit</source>
          <target state="translated">at_exit</target>
        </trans-unit>
        <trans-unit id="4a0ffb03a153fcab6cd4c4bb36a858d0c6a70296" translate="yes" xml:space="preserve">
          <source>atomic.cr</source>
          <target state="translated">atomic.cr</target>
        </trans-unit>
        <trans-unit id="1b03faa88a5580cb4013ed8a48bf96ca5e3a4d64" translate="yes" xml:space="preserve">
          <source>base64.cr</source>
          <target state="translated">base64.cr</target>
        </trans-unit>
        <trans-unit id="06103837fed7fd3773370d2c1b4c54a6a36c2ae9" translate="yes" xml:space="preserve">
          <source>benchmark.cr</source>
          <target state="translated">benchmark.cr</target>
        </trans-unit>
        <trans-unit id="f9943486453dd3743ad0554da6b9f617540b8e9c" translate="yes" xml:space="preserve">
          <source>benchmark/bm.cr</source>
          <target state="translated">benchmark/bm.cr</target>
        </trans-unit>
        <trans-unit id="e6d67856ba7cc43f6fcab809778a2b2b7690fb4d" translate="yes" xml:space="preserve">
          <source>benchmark/ips.cr</source>
          <target state="translated">benchmark/ips.cr</target>
        </trans-unit>
        <trans-unit id="a3d309d49c2146c97675dd7d8ee596d88e300c41" translate="yes" xml:space="preserve">
          <source>big.cr</source>
          <target state="translated">big.cr</target>
        </trans-unit>
        <trans-unit id="ef739cc29600649ce65fda1a2f1ddc0a9ad89ab4" translate="yes" xml:space="preserve">
          <source>big/big_decimal.cr</source>
          <target state="translated">big/big_decimal.cr</target>
        </trans-unit>
        <trans-unit id="6f49468c2754c0c91ba789d574cbf1417e637a5a" translate="yes" xml:space="preserve">
          <source>big/big_float.cr</source>
          <target state="translated">big/big_float.cr</target>
        </trans-unit>
        <trans-unit id="8fd8be069fe8a92f94a223e29e934dfeb7f9dded" translate="yes" xml:space="preserve">
          <source>big/big_int.cr</source>
          <target state="translated">big/big_int.cr</target>
        </trans-unit>
        <trans-unit id="a483d7848a7097d795a97e71739b6ab19f9aebc1" translate="yes" xml:space="preserve">
          <source>big/big_rational.cr</source>
          <target state="translated">big/big_rational.cr</target>
        </trans-unit>
        <trans-unit id="ffba2db3018db0e8db9f76ea807700ab4c2cebb5" translate="yes" xml:space="preserve">
          <source>big/number.cr</source>
          <target state="translated">big/number.cr</target>
        </trans-unit>
        <trans-unit id="4549ed11be3a206e7d04787d1cbf20935c37c95f" translate="yes" xml:space="preserve">
          <source>bit_array.cr</source>
          <target state="translated">bit_array.cr</target>
        </trans-unit>
        <trans-unit id="5c92cd85bd3fce8d0b2712780197884296e00dfc" translate="yes" xml:space="preserve">
          <source>bool.cr</source>
          <target state="translated">bool.cr</target>
        </trans-unit>
        <trans-unit id="5a7ec92850dba006fcce4a4e227e9bc50ac2affd" translate="yes" xml:space="preserve">
          <source>box.cr</source>
          <target state="translated">box.cr</target>
        </trans-unit>
        <trans-unit id="4f9cac8dbc4c67a388b8379dcc126c90c7c5e72a" translate="yes" xml:space="preserve">
          <source>break</source>
          <target state="translated">break</target>
        </trans-unit>
        <trans-unit id="04125ba1b7fb5abadae026b4ad8e7147e519557d" translate="yes" xml:space="preserve">
          <source>break and next</source>
          <target state="translated">歇后语</target>
        </trans-unit>
        <trans-unit id="14dc69de2a1e6087529f02b62fd2888c90d741d3" translate="yes" xml:space="preserve">
          <source>caller</source>
          <target state="translated">caller</target>
        </trans-unit>
        <trans-unit id="9e2d96b572ab04809cc57a34899da9f96a2a5dd9" translate="yes" xml:space="preserve">
          <source>can both be written as:</source>
          <target state="translated">都可以写成:</target>
        </trans-unit>
        <trans-unit id="6406510c31e0c9925733c7f21414bf6428333ed2" translate="yes" xml:space="preserve">
          <source>case</source>
          <target state="translated">case</target>
        </trans-unit>
        <trans-unit id="7b1c3287b5eafb65422b91683e69d8789e50b9fe" translate="yes" xml:space="preserve">
          <source>channel.cr</source>
          <target state="translated">channel.cr</target>
        </trans-unit>
        <trans-unit id="8942d5a8d4f48c9eb449a6cc651a704f5bfdb29a" translate="yes" xml:space="preserve">
          <source>char.cr</source>
          <target state="translated">char.cr</target>
        </trans-unit>
        <trans-unit id="668df5d98e46201fa2faa6e3a258aa0ad831d936" translate="yes" xml:space="preserve">
          <source>char/reader.cr</source>
          <target state="translated">char/reader.cr</target>
        </trans-unit>
        <trans-unit id="d5924e8a82014115ea72a8b1476b4b3493f61810" translate="yes" xml:space="preserve">
          <source>character sets:</source>
          <target state="translated">字符集。</target>
        </trans-unit>
        <trans-unit id="b3b6804ee1fd8fd5e049cb6a5bb31f67c5974c47" translate="yes" xml:space="preserve">
          <source>checkout_timeout</source>
          <target state="translated">checkout_timeout</target>
        </trans-unit>
        <trans-unit id="8d767bf5b72373d12f0efd4406677e9ed076f592" translate="yes" xml:space="preserve">
          <source>class</source>
          <target state="translated">class</target>
        </trans-unit>
        <trans-unit id="21066fb0e7995763975c52df093b5a8ecc44eec5" translate="yes" xml:space="preserve">
          <source>class ArgumentError</source>
          <target state="translated">类ArgumentError</target>
        </trans-unit>
        <trans-unit id="094fd53446a76a77362351899003bcd321dc9cc7" translate="yes" xml:space="preserve">
          <source>class Array(T)</source>
          <target state="translated">Class Array(T)</target>
        </trans-unit>
        <trans-unit id="1c57fdc566a2644f694926d974e577c579e8bf3d" translate="yes" xml:space="preserve">
          <source>class Base64::Error</source>
          <target state="translated">class Base64::Error</target>
        </trans-unit>
        <trans-unit id="453df4a349a785c7f6be016bb75dae7bbe933ef8" translate="yes" xml:space="preserve">
          <source>class Benchmark::BM::Job</source>
          <target state="translated">Class Benchmark::BM::Job</target>
        </trans-unit>
        <trans-unit id="d62fc7334cafc7936d58771c1c88a371e18ce216" translate="yes" xml:space="preserve">
          <source>class Benchmark::BM::Tms</source>
          <target state="translated">类 Benchmark::BM::Tms</target>
        </trans-unit>
        <trans-unit id="8266d56d410c5e836875fd321bdcf057d65b850f" translate="yes" xml:space="preserve">
          <source>class Benchmark::IPS::Entry</source>
          <target state="translated">类 Benchmark::IPS::条目</target>
        </trans-unit>
        <trans-unit id="77032b144baa1f3cf4e486076d1a2642c175048b" translate="yes" xml:space="preserve">
          <source>class Benchmark::IPS::Job</source>
          <target state="translated">类 Benchmark::IPS::Job</target>
        </trans-unit>
        <trans-unit id="3b04f988afa653d7fa2ebc652b183911b602e732" translate="yes" xml:space="preserve">
          <source>class Box(T)</source>
          <target state="translated">Class Box(T)</target>
        </trans-unit>
        <trans-unit id="6a3be3b98429589c987bd2ef28866483bac5e8a3" translate="yes" xml:space="preserve">
          <source>class CSV</source>
          <target state="translated">类CSV</target>
        </trans-unit>
        <trans-unit id="491feb5485671b070cfd8d7a37cd2ce229fe1db2" translate="yes" xml:space="preserve">
          <source>class CSV::Builder</source>
          <target state="translated">类CSV::Builder</target>
        </trans-unit>
        <trans-unit id="03355970c2c0533f4ac7ca1774d89cc413aa6922" translate="yes" xml:space="preserve">
          <source>class CSV::Error</source>
          <target state="translated">类CSV::Error</target>
        </trans-unit>
        <trans-unit id="a9241c93e59fcfc19cb528a04e4cfb8990a734b5" translate="yes" xml:space="preserve">
          <source>class CSV::MalformedCSVError</source>
          <target state="translated">类CSV::MalformedCSVError</target>
        </trans-unit>
        <trans-unit id="cc9089dfe353c93dc335d1469df5daf7c9daa53b" translate="yes" xml:space="preserve">
          <source>class CSV::Parser</source>
          <target state="translated">类CSV::Parser</target>
        </trans-unit>
        <trans-unit id="57103694c47a856c65d9c89792eba7cdae206e17" translate="yes" xml:space="preserve">
          <source>class Channel(T)</source>
          <target state="translated">Class Channel(T)</target>
        </trans-unit>
        <trans-unit id="1097a301114ff143fd220cbb11753c5c988dbe22" translate="yes" xml:space="preserve">
          <source>class Channel::ClosedError</source>
          <target state="translated">类 Channel::ClosedError</target>
        </trans-unit>
        <trans-unit id="dd59541bb7dff3dbcb66f170c1d14eaf52b368c3" translate="yes" xml:space="preserve">
          <source>class Concurrent::CanceledError</source>
          <target state="translated">class Concurrent::CanceledError</target>
        </trans-unit>
        <trans-unit id="b70243d37e1acea060570b19eb36ba1ad1433bef" translate="yes" xml:space="preserve">
          <source>class ConcurrentExecutionException</source>
          <target state="translated">class ConcurrentExecutionException</target>
        </trans-unit>
        <trans-unit id="95262dafff34217062d89ac60c25dc63c13e12f5" translate="yes" xml:space="preserve">
          <source>class Crypto::Bcrypt</source>
          <target state="translated">类 Crypto::Bcrypt</target>
        </trans-unit>
        <trans-unit id="437af853b6e2a60b124cef268191e6f5643435aa" translate="yes" xml:space="preserve">
          <source>class Crypto::Bcrypt::Error</source>
          <target state="translated">类 Crypto::Bcrypt::Error</target>
        </trans-unit>
        <trans-unit id="40ae2eebd4e210df8651f08f63e0a66a570f3305" translate="yes" xml:space="preserve">
          <source>class Crypto::Bcrypt::Password</source>
          <target state="translated">类 Crypto::Bcrypt::Password</target>
        </trans-unit>
        <trans-unit id="a451d488dd53a4ad80d574939a6165bfaa4319ee" translate="yes" xml:space="preserve">
          <source>class Crypto::Blowfish</source>
          <target state="translated">类 Crypto::Blowfish</target>
        </trans-unit>
        <trans-unit id="70408437d7dcde0516163c7e6da3eabf231e155a" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::And</source>
          <target state="translated">类 Crystal::Macros::And</target>
        </trans-unit>
        <trans-unit id="eb71f5d5a8dc1f38d3e295e1f1e988d483aa5ae4" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::Annotation</source>
          <target state="translated">类 Crystal::Macros::Annotation</target>
        </trans-unit>
        <trans-unit id="6d8aac7ee54b0bf7ff21bbe2fa51ef7221fb0a94" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::Arg</source>
          <target state="translated">类 Crystal::Macros::Arg</target>
        </trans-unit>
        <trans-unit id="ba03a3682cbe07e50831b734a9de9c20200440f3" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::ArrayLiteral</source>
          <target state="translated">类 Crystal::Macros::ArrayLiteral</target>
        </trans-unit>
        <trans-unit id="d5acfa7a405ad9214bdafa95c5721089f59ba4cc" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::Assign</source>
          <target state="translated">类 Crystal::Macros::Assign</target>
        </trans-unit>
        <trans-unit id="14d87d2ce9955b306766a7d95b0627ca698b9301" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::Block</source>
          <target state="translated">类 Crystal::Macros::Block</target>
        </trans-unit>
        <trans-unit id="114c427ae16563062e95cd3582f33fd859b4dcf7" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::BoolLiteral</source>
          <target state="translated">类 Crystal::Macros::BoolLiteral</target>
        </trans-unit>
        <trans-unit id="a343bbbc6c373b4b8f3884f04ce16aad839ed5e9" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::Call</source>
          <target state="translated">类 Crystal::Macros::Call</target>
        </trans-unit>
        <trans-unit id="dcee995f4b9aeef214b78ddb055a9f2691e0ef16" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::Case</source>
          <target state="translated">类 Crystal::Macros::Case</target>
        </trans-unit>
        <trans-unit id="c7df4f7f27492251023d9cf8ca4501eb5727356b" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::Cast</source>
          <target state="translated">类 Crystal::Macros::Cast</target>
        </trans-unit>
        <trans-unit id="9edf264bd5c5c697686f5dbe2ed6473a98967cf9" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::CharLiteral</source>
          <target state="translated">类 Crystal::Macros::CharLiteral</target>
        </trans-unit>
        <trans-unit id="7105ec34016c6d9f2f3699d92fd6a322ab1a17e5" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::ClassDef</source>
          <target state="translated">类 Crystal::Macros::ClassDef</target>
        </trans-unit>
        <trans-unit id="f418c55fef69160ab19bcb4fc290a6d495d8bb14" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::ClassVar</source>
          <target state="translated">类 Crystal::Macros::ClassVar</target>
        </trans-unit>
        <trans-unit id="ba6f4a85e598bbe116c227c763def1d5d1decf14" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::Def</source>
          <target state="translated">类 Crystal::Macros::Def</target>
        </trans-unit>
        <trans-unit id="1593aa913399cd93a5231fc9e9a8694c6c985c07" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::Expressions</source>
          <target state="translated">类 Crystal::Macros::Expressions</target>
        </trans-unit>
        <trans-unit id="c1bd58a7a90b2ae1a25a4438a9212c21d3d8ee4a" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::Generic</source>
          <target state="translated">类 Crystal::Macros::Generic</target>
        </trans-unit>
        <trans-unit id="1dfd6cab59a723b44c225fa4cc919ada9fd05dbd" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::Global</source>
          <target state="translated">类 Crystal::Macros::Global</target>
        </trans-unit>
        <trans-unit id="5d41fa30a024b3e376f71185e608d3ba7caed9bf" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::HashLiteral</source>
          <target state="translated">类 Crystal::Macros::HashLiteral</target>
        </trans-unit>
        <trans-unit id="d6c26bae2c4559ecf4d94ec7eb78d7c963b250d8" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::If</source>
          <target state="translated">类 Crystal::Macros::If</target>
        </trans-unit>
        <trans-unit id="70757bfb6634b8279b532aee7c28f9e82f32cedc" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::ImplicitObj</source>
          <target state="translated">类 Crystal::Macros::ImplicitObj</target>
        </trans-unit>
        <trans-unit id="380b3cd48b7c6f2fc3f8bc5c6a89dd4fa0d731bf" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::InstanceSizeOf</source>
          <target state="translated">类 Crystal::Macros::InstanceSizeOf</target>
        </trans-unit>
        <trans-unit id="2836f259889fd99c9adb6adba924ad99311515c8" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::InstanceVar</source>
          <target state="translated">类 Crystal::Macros::InstanceVar</target>
        </trans-unit>
        <trans-unit id="61bf110b7a58dd46b75c841e5b50f9cde2d5a4e7" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::IsA</source>
          <target state="translated">类 Crystal::Macros::IsA</target>
        </trans-unit>
        <trans-unit id="8877dde65c65f8b4c944cb3600aee984391db888" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::Macro</source>
          <target state="translated">类 Crystal::Macros::Macro</target>
        </trans-unit>
        <trans-unit id="72981a6893266c90712ac1cf9e944572bcb0c227" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::MacroId</source>
          <target state="translated">类 Crystal::Macros::MacroId</target>
        </trans-unit>
        <trans-unit id="65c312eebc0467de5771deb352dd5bda8f694a79" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::MetaVar</source>
          <target state="translated">类 Crystal::Macros::MetaVar</target>
        </trans-unit>
        <trans-unit id="b503a6970ec03933e53e4632465a864eb66be0bd" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::MultiAssign</source>
          <target state="translated">类 Crystal::Macros::MultiAssign</target>
        </trans-unit>
        <trans-unit id="9db7d8512eadaeddb41168f19c3f1cf0351435bd" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::NamedArgument</source>
          <target state="translated">类 Crystal::Macros::NamedArgument</target>
        </trans-unit>
        <trans-unit id="6ea080522f1e0f92578f768b60692abbb0fa035f" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::NamedTupleLiteral</source>
          <target state="translated">类 Crystal::Macros::NamedTupleLiteral</target>
        </trans-unit>
        <trans-unit id="1d99eae95ad2b80ebc85ef49955db6dd46ac9cfa" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::NilLiteral</source>
          <target state="translated">类 Crystal::Macros::NilLiteral</target>
        </trans-unit>
        <trans-unit id="df1503b57f3c9de92027dfd3f8f771f04a030422" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::NilableCast</source>
          <target state="translated">类 Crystal::Macros::NilableCast</target>
        </trans-unit>
        <trans-unit id="78d13eeac81d55fc6482a2a0ac1a6263e02e18dd" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::Nop</source>
          <target state="translated">类 Crystal::Macros::Nop</target>
        </trans-unit>
        <trans-unit id="65ec65c6be93cc63f86db72abc12272e8c52cd03" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::Not</source>
          <target state="translated">类 Crystal::Macros::Not</target>
        </trans-unit>
        <trans-unit id="364210fb33f3e3e87ffe17fa62f9ca819d6a4120" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::NumberLiteral</source>
          <target state="translated">类 Crystal::Macros::NumberLiteral</target>
        </trans-unit>
        <trans-unit id="7275dbf467b9e6d7d2cefb643cc6f760338b78d8" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::OffsetOf</source>
          <target state="translated">类 Crystal::Macros::OffsetOf</target>
        </trans-unit>
        <trans-unit id="83cd469bc7c11805818f534d1021bd1540cd07d4" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::Or</source>
          <target state="translated">类 Crystal::Macros::Or</target>
        </trans-unit>
        <trans-unit id="50355dc6f349ff53b006b56d639360548101e88a" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::Out</source>
          <target state="translated">类 Crystal::Macros::Out</target>
        </trans-unit>
        <trans-unit id="7209e6c932acaf7cf52c70ff6758cf1b54610b36" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::Path</source>
          <target state="translated">类 Crystal::Macros::Path</target>
        </trans-unit>
        <trans-unit id="8ee6a10bf1d8827019b2e39f0e7bf6f66f2086c7" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::PointerOf</source>
          <target state="translated">类 Crystal::Macros::PointerOf</target>
        </trans-unit>
        <trans-unit id="2fa09924e7bb8ec942ae43b27a3e3c677bf7f7a4" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::ProcLiteral</source>
          <target state="translated">类 Crystal::Macros::ProcLiteral</target>
        </trans-unit>
        <trans-unit id="bb70ccdba84a47a819690081bbdb0ba12004e644" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::ProcNotation</source>
          <target state="translated">类 Crystal::Macros::ProcNotation</target>
        </trans-unit>
        <trans-unit id="c18780faca406dadc4ed619921e797d36dc1b934" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::ProcPointer</source>
          <target state="translated">类 Crystal::Macros::ProcPointer</target>
        </trans-unit>
        <trans-unit id="1bdfff7dad4db7fd3b81f02478725d521acf9e71" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::RangeLiteral</source>
          <target state="translated">类 Crystal::Macros::RangeLiteral</target>
        </trans-unit>
        <trans-unit id="e5f04387b4fd2935d37f8fd48c66b4a9ac71edb7" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::ReadInstanceVar</source>
          <target state="translated">类 Crystal::Macros::ReadInstanceVar</target>
        </trans-unit>
        <trans-unit id="1b4054c1285d083e5fd704cda2fa8cdf6b9ccb18" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::RegexLiteral</source>
          <target state="translated">类 Crystal::Macros::RegexLiteral</target>
        </trans-unit>
        <trans-unit id="6a89fc51edb1a107df8734d4f2ded3abc5f75d2c" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::Require</source>
          <target state="translated">类 Crystal::Macros::Require</target>
        </trans-unit>
        <trans-unit id="12125d36d0727daf969143a32c98e8d95a867d01" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::RespondsTo</source>
          <target state="translated">类 Crystal::Macros::RespondsTo</target>
        </trans-unit>
        <trans-unit id="6a54ac509caef3ef62467d49044e806758050471" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::SizeOf</source>
          <target state="translated">类 Crystal::Macros::SizeOf</target>
        </trans-unit>
        <trans-unit id="9164c6b1e0eabdb84323fbac938abdcf9b487b03" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::Splat</source>
          <target state="translated">类Crystal::Macros::Splat</target>
        </trans-unit>
        <trans-unit id="52c3906ee1f64d566aeb6108dbf6347d9130ed24" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::StringInterpolation</source>
          <target state="translated">类 Crystal::Macros::StringInterpolation</target>
        </trans-unit>
        <trans-unit id="a2a496c8456e15dbaf2c37eee481bca2b993c822" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::StringLiteral</source>
          <target state="translated">类 Crystal::Macros::StringLiteral</target>
        </trans-unit>
        <trans-unit id="5af2c6f87e742059f98dd5e6fd421ab654a03ad6" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::SymbolLiteral</source>
          <target state="translated">类 Crystal::Macros::SymbolLiteral</target>
        </trans-unit>
        <trans-unit id="2a27a875266eb380e04f78caf46fe77396456134" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::TupleLiteral</source>
          <target state="translated">类 Crystal::Macros::TupleLiteral</target>
        </trans-unit>
        <trans-unit id="fbb4b5d895b14c13c203ecb3e620e1a630c9c842" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::TypeDeclaration</source>
          <target state="translated">类 Crystal::Macros::TypeDeclaration</target>
        </trans-unit>
        <trans-unit id="433ada89da78ae75dead30f4a44e30aea6a5f237" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::TypeNode</source>
          <target state="translated">类 Crystal::Macros::TypeNode</target>
        </trans-unit>
        <trans-unit id="50143af117e6f799ad1a34e3491b6839354ad601" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::UninitializedVar</source>
          <target state="translated">类 Crystal::Macros::UninitializedVar</target>
        </trans-unit>
        <trans-unit id="10ce59823e3d65b751933f8f7a3a555aa409b516" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::Union</source>
          <target state="translated">类 Crystal::Macros::Union</target>
        </trans-unit>
        <trans-unit id="9838e38f0ea631907dee01e9c0aca15e85fc8b14" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::Var</source>
          <target state="translated">类 Crystal::Macros::Var</target>
        </trans-unit>
        <trans-unit id="84080bc78f37fae962fdb3b99ff183f1d231cb4a" translate="yes" xml:space="preserve">
          <source>class Crystal::Macros::VisibilityModifier</source>
          <target state="translated">类 Crystal::Macros::VisibilityModifier</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
