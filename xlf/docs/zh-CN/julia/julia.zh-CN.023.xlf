<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="julia">
    <body>
      <group id="julia">
        <trans-unit id="593b23ffbb5606d7b2b5b0d244176b21c1543864" translate="yes" xml:space="preserve">
          <source>big()</source>
          <target state="translated">big()</target>
        </trans-unit>
        <trans-unit id="390c05c2e4284515b8dc7e0079450eb285d0c16d" translate="yes" xml:space="preserve">
          <source>binary exponent of &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 的二进制指数</target>
        </trans-unit>
        <trans-unit id="9661781b473e58cb6d8cb2ccbadedaf00fa42501" translate="yes" xml:space="preserve">
          <source>binary minus</source>
          <target state="translated">二进制减法</target>
        </trans-unit>
        <trans-unit id="853e0d732de0ef72e37bda27ef8377f1de6ce68a" translate="yes" xml:space="preserve">
          <source>binary plus</source>
          <target state="translated">二进制加法</target>
        </trans-unit>
        <trans-unit id="1723a4c68c1cb83e6a4344d8889a96b1a71a9eeb" translate="yes" xml:space="preserve">
          <source>binary significand (a.k.a. mantissa) of a floating-point number &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">浮点数 &lt;code&gt;x&lt;/code&gt; 的二进制有效位（即尾数）</target>
        </trans-unit>
        <trans-unit id="2c9af50c484007aed3fa2dcccac7364dcbaa2c89" translate="yes" xml:space="preserve">
          <source>bind()</source>
          <target state="translated">bind()</target>
        </trans-unit>
        <trans-unit id="19b2a549497718461419d5be4453d573ec4c4dbf" translate="yes" xml:space="preserve">
          <source>binomial()</source>
          <target state="translated">binomial()</target>
        </trans-unit>
        <trans-unit id="66874271f01824d27788d830b56fd73a5b8d013c" translate="yes" xml:space="preserve">
          <source>bits 0-1: endianness: 0 = little, 1 = big</source>
          <target state="translated">位0-1:endianness:0=小,1=大。</target>
        </trans-unit>
        <trans-unit id="f812c4d54c2165064c611482440c4ce865f09bd9" translate="yes" xml:space="preserve">
          <source>bits 2-3: platform: 0 = 32-bit, 1 = 64-bit</source>
          <target state="translated">比特2-3:平台,0=32位,1=64位。0=32位,1=64位</target>
        </trans-unit>
        <trans-unit id="ed6e809421a212a0f18b8080aa909745b20f46f9" translate="yes" xml:space="preserve">
          <source>bitstring()</source>
          <target state="translated">bitstring()</target>
        </trans-unit>
        <trans-unit id="58fa9fa3278b2361be05277d5e9dd98593c3df2b" translate="yes" xml:space="preserve">
          <source>bitwise and</source>
          <target state="translated">位面和</target>
        </trans-unit>
        <trans-unit id="77e9f4f76fd8becb2b7bce865b6eb9a8515c9629" translate="yes" xml:space="preserve">
          <source>bitwise not</source>
          <target state="translated">无位面</target>
        </trans-unit>
        <trans-unit id="a8901d087222ba9a4a17d9cbfc11068633417a6c" translate="yes" xml:space="preserve">
          <source>bitwise not operator</source>
          <target state="translated">位非运算符</target>
        </trans-unit>
        <trans-unit id="f0faffaa3b66bcdae910f95bcb520a7ec69bc284" translate="yes" xml:space="preserve">
          <source>bitwise or</source>
          <target state="translated">比特</target>
        </trans-unit>
        <trans-unit id="13cb978e68bba9dd418a464cf07bddd93bae54a0" translate="yes" xml:space="preserve">
          <source>bitwise xor (exclusive or)</source>
          <target state="translated">比特异口同声</target>
        </trans-unit>
        <trans-unit id="391dda28c50ab689a23d6726f556a446416c56ad" translate="yes" xml:space="preserve">
          <source>bitwise xor operator</source>
          <target state="translated">位Xor运算符</target>
        </trans-unit>
        <trans-unit id="ceb52f8bc117b1c9127ac6c0351d582115393626" translate="yes" xml:space="preserve">
          <source>blksize</source>
          <target state="translated">blksize</target>
        </trans-unit>
        <trans-unit id="f7d5b2b95861daea9933ef0a243f733bbc79235e" translate="yes" xml:space="preserve">
          <source>blocks</source>
          <target state="translated">blocks</target>
        </trans-unit>
        <trans-unit id="4f9cac8dbc4c67a388b8379dcc126c90c7c5e72a" translate="yes" xml:space="preserve">
          <source>break</source>
          <target state="translated">break</target>
        </trans-unit>
        <trans-unit id="f683de6a057fa34a3592ad2ce8793440be061d4f" translate="yes" xml:space="preserve">
          <source>bswap()</source>
          <target state="translated">bswap()</target>
        </trans-unit>
        <trans-unit id="786e97b3ee9fc4b292d5852c2c5943153c4ce91a" translate="yes" xml:space="preserve">
          <source>but</source>
          <target state="translated">but</target>
        </trans-unit>
        <trans-unit id="dbf642257c8b164d1215ecc5d908d2381b4dfa9a" translate="yes" xml:space="preserve">
          <source>but that for now the program is still working.</source>
          <target state="translated">但目前该程序仍在工作。</target>
        </trans-unit>
        <trans-unit id="08f59f2a90ceb1df987af2ccf6c75eeb6f50fdce" translate="yes" xml:space="preserve">
          <source>but this will:</source>
          <target state="translated">但这将。</target>
        </trans-unit>
        <trans-unit id="8b1462a5c4d784580079a0a4f1cecff825de8352" translate="yes" xml:space="preserve">
          <source>by default (via &lt;code&gt;Base.load_julia_startup()&lt;/code&gt;).</source>
          <target state="translated">默认情况下（通过 &lt;code&gt;Base.load_julia_startup()&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8d9ba88e967a7906c92bbcf1d94603a06d499b23" translate="yes" xml:space="preserve">
          <source>by default.</source>
          <target state="translated">默认情况下。</target>
        </trans-unit>
        <trans-unit id="ef0618fa03df64894678dd1a81b6d54970dfd9a7" translate="yes" xml:space="preserve">
          <source>by defining a method</source>
          <target state="translated">通过定义方法</target>
        </trans-unit>
        <trans-unit id="f7e8a89a9750f6f343b800d6ee7b5cad6e322d79" translate="yes" xml:space="preserve">
          <source>bytes2hex()</source>
          <target state="translated">bytes2hex()</target>
        </trans-unit>
        <trans-unit id="9c8ead7c353c6753a04d15af30a780ccee6b28f4" translate="yes" xml:space="preserve">
          <source>bytesavailable()</source>
          <target state="translated">bytesavailable()</target>
        </trans-unit>
        <trans-unit id="96940fa7f6fef66a0adf1bed63332ef2ea45d799" translate="yes" xml:space="preserve">
          <source>can be called via the following Julia code, where the lengths are appended</source>
          <target state="translated">可以通过以下Julia代码调用,其中长度是附加的</target>
        </trans-unit>
        <trans-unit id="1c42c5c9a2ddc6691884677c3b3368132016d2a1" translate="yes" xml:space="preserve">
          <source>can be called via the following Julia code:</source>
          <target state="translated">可以通过以下Julia代码调用。</target>
        </trans-unit>
        <trans-unit id="4c5b34eaba454b0fab02cd7065a26ca4ee49cc08" translate="yes" xml:space="preserve">
          <source>can be different when compared to other languages like Matlab or R.</source>
          <target state="translated">与Matlab或R等其他语言相比,可以有所不同。</target>
        </trans-unit>
        <trans-unit id="6ae277a801356c61cc8195479841d7732e7455e3" translate="yes" xml:space="preserve">
          <source>can be shortened to:</source>
          <target state="translated">可以简称为:</target>
        </trans-unit>
        <trans-unit id="98c10b789cb5ae6f63d07c45c3118e477761a9b8" translate="yes" xml:space="preserve">
          <source>can be written in Julia as</source>
          <target state="translated">在Julia中可以写成</target>
        </trans-unit>
        <trans-unit id="10da51dad389f8f57e5bdb28e28d2293c04c8705" translate="yes" xml:space="preserve">
          <source>cat()</source>
          <target state="translated">cat()</target>
        </trans-unit>
        <trans-unit id="ca4c1cf12556ecba7723d2011b667aa33d0cd533" translate="yes" xml:space="preserve">
          <source>catch_backtrace()</source>
          <target state="translated">catch_backtrace()</target>
        </trans-unit>
        <trans-unit id="6eae9b02f3f211c6adcbf2b5134dc75d04a386e7" translate="yes" xml:space="preserve">
          <source>catch_stack()</source>
          <target state="translated">catch_stack()</target>
        </trans-unit>
        <trans-unit id="804fda998ec6601c505ff4a0b73672b497aff6f0" translate="yes" xml:space="preserve">
          <source>ccall</source>
          <target state="translated">ccall</target>
        </trans-unit>
        <trans-unit id="5a953e666439b6fb0be7e336f931a42a0d906418" translate="yes" xml:space="preserve">
          <source>ccall using a threadpool (Experimental)</source>
          <target state="translated">使用线程池的cc调用(实验)</target>
        </trans-unit>
        <trans-unit id="6c6ebb8fc4e19727d7105dd7085a41625227b34c" translate="yes" xml:space="preserve">
          <source>cconvert()</source>
          <target state="translated">cconvert()</target>
        </trans-unit>
        <trans-unit id="233db03fd3b4529187995dd7ceb514910b4095be" translate="yes" xml:space="preserve">
          <source>ceil()</source>
          <target state="translated">ceil()</target>
        </trans-unit>
        <trans-unit id="2440f45c5f0e4ec6b74573f5c4354e1c87cfa639" translate="yes" xml:space="preserve">
          <source>ceiling division; quotient rounded towards &lt;code&gt;+Inf&lt;/code&gt;</source>
          <target state="translated">天花板划分 商四舍五入为 &lt;code&gt;+Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6e9bec9f085c6ad14791b55073f4a67e92297b6" translate="yes" xml:space="preserve">
          <source>changes &lt;code&gt;true&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; and vice versa</source>
          <target state="translated">将 &lt;code&gt;true&lt;/code&gt; 更改为 &lt;code&gt;false&lt;/code&gt; ，反之亦然</target>
        </trans-unit>
        <trans-unit id="5d88aa4cb8afb1730f29a9650c153c0007962a75" translate="yes" xml:space="preserve">
          <source>checkbounds()</source>
          <target state="translated">checkbounds()</target>
        </trans-unit>
        <trans-unit id="16e31edf12261dc36e57679ef4d7be943cbc76a4" translate="yes" xml:space="preserve">
          <source>checkindex()</source>
          <target state="translated">checkindex()</target>
        </trans-unit>
        <trans-unit id="4961ba7bb800857611022d5f76b36f518c160444" translate="yes" xml:space="preserve">
          <source>chomp()</source>
          <target state="translated">chomp()</target>
        </trans-unit>
        <trans-unit id="d0d461e33cd0f5b53198c646c4dc543aeb1c5f0a" translate="yes" xml:space="preserve">
          <source>chop()</source>
          <target state="translated">chop()</target>
        </trans-unit>
        <trans-unit id="ce924fd4ba28470cd47797f0359a1b1c335d0834" translate="yes" xml:space="preserve">
          <source>circcopy!()</source>
          <target state="translated">circcopy!()</target>
        </trans-unit>
        <trans-unit id="0cfc43147d576f12315439de609ee78649d17373" translate="yes" xml:space="preserve">
          <source>circshift!()</source>
          <target state="translated">circshift!()</target>
        </trans-unit>
        <trans-unit id="3d12d1d8533fb28f469e1b4995a13c089a91c638" translate="yes" xml:space="preserve">
          <source>circshift()</source>
          <target state="translated">circshift()</target>
        </trans-unit>
        <trans-unit id="40475e344ae5b3be82d15e7845b9ebcbb64de7ed" translate="yes" xml:space="preserve">
          <source>cis()</source>
          <target state="translated">cis()</target>
        </trans-unit>
        <trans-unit id="d1724c3841b6a8b94480561452c8679e8d4402ac" translate="yes" xml:space="preserve">
          <source>cld()</source>
          <target state="translated">cld()</target>
        </trans-unit>
        <trans-unit id="2553a9bd0bdcd6eb0bf6c9b17385b6c5a9a5420a" translate="yes" xml:space="preserve">
          <source>close()</source>
          <target state="translated">close()</target>
        </trans-unit>
        <trans-unit id="2971883a617260908cbf7c91ff541f8b39339ec3" translate="yes" xml:space="preserve">
          <source>cmp()</source>
          <target state="translated">cmp()</target>
        </trans-unit>
        <trans-unit id="5b7f180eecc039ae376c82c59e5ee1dcfe7d898c" translate="yes" xml:space="preserve">
          <source>coalesce()</source>
          <target state="translated">coalesce()</target>
        </trans-unit>
        <trans-unit id="47c0c3fb3987fc413ee865db0aadc3de92661b9e" translate="yes" xml:space="preserve">
          <source>code_lowered()</source>
          <target state="translated">code_lowered()</target>
        </trans-unit>
        <trans-unit id="486ccb373b9c808d4703f8b26dcbc4f33a0898ce" translate="yes" xml:space="preserve">
          <source>code_typed()</source>
          <target state="translated">code_typed()</target>
        </trans-unit>
        <trans-unit id="efaff14494d5a7a6c75b8dc39649bcdb57a77e86" translate="yes" xml:space="preserve">
          <source>codepoint()</source>
          <target state="translated">codepoint()</target>
        </trans-unit>
        <trans-unit id="13dab2ad81172a679019c13c4d46ebb7c9d2cbf6" translate="yes" xml:space="preserve">
          <source>codeunit()</source>
          <target state="translated">codeunit()</target>
        </trans-unit>
        <trans-unit id="4ffa83f64d3e195d9af8023e6739a594ad5f73a7" translate="yes" xml:space="preserve">
          <source>codeunits()</source>
          <target state="translated">codeunits()</target>
        </trans-unit>
        <trans-unit id="5b1dabd2e88969f5cd6ef195adeb2068f22807fc" translate="yes" xml:space="preserve">
          <source>collect()</source>
          <target state="translated">collect()</target>
        </trans-unit>
        <trans-unit id="dc7e24c66e060b93fcbd593e0a4df67cad88e3cd" translate="yes" xml:space="preserve">
          <source>colons (&lt;a href=&quot;../math/index#Base.::&quot;&gt;&lt;code&gt;:&lt;/code&gt;&lt;/a&gt;) used as a binary infix operator construct a range from &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;b&lt;/code&gt; (inclusive) with fixed step size &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">冒号（&lt;a href=&quot;../math/index#Base.::&quot;&gt; &lt;code&gt;:&lt;/code&gt; &lt;/a&gt;）用作二进制缀运算符构造一个范围从 &lt;code&gt;a&lt;/code&gt; 到 &lt;code&gt;b&lt;/code&gt; （含）以固定步长 &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="79a54492bf468e528815c73bfb386703b6bf7f2b" translate="yes" xml:space="preserve">
          <source>colons (&lt;a href=&quot;../math/index#Base.::&quot;&gt;&lt;code&gt;:&lt;/code&gt;&lt;/a&gt;) used as a ternary infix operator construct a range from &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;b&lt;/code&gt; (inclusive) with step size &lt;code&gt;s&lt;/code&gt;</source>
          <target state="translated">冒号（&lt;a href=&quot;../math/index#Base.::&quot;&gt; &lt;code&gt;:&lt;/code&gt; &lt;/a&gt;）用作三元缀运算符构造一个范围从 &lt;code&gt;a&lt;/code&gt; 到 &lt;code&gt;b&lt;/code&gt; （含），步长为 &lt;code&gt;s&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ac8b53078352c02c90a5fff02e39ff933cf4b88" translate="yes" xml:space="preserve">
          <source>commas separate function arguments or tuple or array components</source>
          <target state="translated">逗号分隔函数参数、元组或数组组件</target>
        </trans-unit>
        <trans-unit id="dc4aebad5e4318b14ea2559e57835f2c35a1ed0b" translate="yes" xml:space="preserve">
          <source>compilecache()</source>
          <target state="translated">compilecache()</target>
        </trans-unit>
        <trans-unit id="2664e98dc029aa1ff6b598913f21d71a716261cd" translate="yes" xml:space="preserve">
          <source>complex transpose operator Aᴴ</source>
          <target state="translated">复数转置运算符Aᴴ。</target>
        </trans-unit>
        <trans-unit id="141c251a090c368f2064668178cdae6400d66023" translate="yes" xml:space="preserve">
          <source>complex()</source>
          <target state="translated">complex()</target>
        </trans-unit>
        <trans-unit id="1b0890ec87a5ed4639f43f4ec7946b04246d6588" translate="yes" xml:space="preserve">
          <source>comprehensions, broadcast-fusing</source>
          <target state="translated">理解力、广播融合</target>
        </trans-unit>
        <trans-unit id="241044970038bf5392f16d4bc2bdc21a435d76a5" translate="yes" xml:space="preserve">
          <source>concatenate input arrays along dimension(s) &lt;code&gt;k&lt;/code&gt;</source>
          <target state="translated">沿着维度 &lt;code&gt;k&lt;/code&gt; 连接输入数组</target>
        </trans-unit>
        <trans-unit id="56425e2421a7ac0ffeb657a009297d826826987f" translate="yes" xml:space="preserve">
          <source>conciseness is valued, but avoid abbreviation (&lt;a href=&quot;../../base/collections/index#Base.indexin&quot;&gt;&lt;code&gt;indexin&lt;/code&gt;&lt;/a&gt; rather than &lt;code&gt;indxin&lt;/code&gt;) as it becomes difficult to remember whether and how particular words are abbreviated.</source>
          <target state="translated">简洁是很重要的，但是要避免缩写（用&lt;a href=&quot;../../base/collections/index#Base.indexin&quot;&gt; &lt;code&gt;indexin&lt;/code&gt; &lt;/a&gt;而不是 &lt;code&gt;indxin&lt;/code&gt; ），因为很难记住是否以及如何缩写特定单词。</target>
        </trans-unit>
        <trans-unit id="4fac2263f7ae7c8fb31964b21056eb73121734c8" translate="yes" xml:space="preserve">
          <source>conj!()</source>
          <target state="translated">conj!()</target>
        </trans-unit>
        <trans-unit id="95acd76d4d3207fd96fc5de03eef6595669fd8d8" translate="yes" xml:space="preserve">
          <source>conj()</source>
          <target state="translated">conj()</target>
        </trans-unit>
        <trans-unit id="b42f3f6f796fa3cfcb6b1b8d49c7bcccc3a7164c" translate="yes" xml:space="preserve">
          <source>const</source>
          <target state="translated">const</target>
        </trans-unit>
        <trans-unit id="eee0bbba4ff92adbeb038a77df0466d660f15716" translate="yes" xml:space="preserve">
          <source>continue</source>
          <target state="translated">continue</target>
        </trans-unit>
        <trans-unit id="86579bbe15be29a02cb8dc2da247309d97e543d2" translate="yes" xml:space="preserve">
          <source>convert()</source>
          <target state="translated">convert()</target>
        </trans-unit>
        <trans-unit id="77c36ee3f773307abfa3d6d6efed54311795567c" translate="yes" xml:space="preserve">
          <source>copy &lt;code&gt;A&lt;/code&gt;</source>
          <target state="translated">复制 &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="561932200be5fc41f0bc2480aa525bf78dbbb17f" translate="yes" xml:space="preserve">
          <source>copy &lt;code&gt;A&lt;/code&gt;, recursively copying its elements</source>
          <target state="translated">复制 &lt;code&gt;A&lt;/code&gt; ，以递归方式复制其元素</target>
        </trans-unit>
        <trans-unit id="2b2ed0922e5c552c1298785802c663d39da798ea" translate="yes" xml:space="preserve">
          <source>copy()</source>
          <target state="translated">copy()</target>
        </trans-unit>
        <trans-unit id="4cdf1e4abcadece46b31e58afff4949340d9b2ec" translate="yes" xml:space="preserve">
          <source>copysign()</source>
          <target state="translated">copysign()</target>
        </trans-unit>
        <trans-unit id="91e72475338becf900bfaee470f0e5cbf27ef5d6" translate="yes" xml:space="preserve">
          <source>copyto!()</source>
          <target state="translated">copyto!()</target>
        </trans-unit>
        <trans-unit id="8ee8cabe8ef448cf4d736ca72f9a27488a5006b5" translate="yes" xml:space="preserve">
          <source>cos()</source>
          <target state="translated">cos()</target>
        </trans-unit>
        <trans-unit id="fcf5380ea3d868bb099baf36d0697e4ee0ae93ca" translate="yes" xml:space="preserve">
          <source>cosh()</source>
          <target state="translated">cosh()</target>
        </trans-unit>
        <trans-unit id="a6322bb6f6a5b21b94f321bb5d77d71893647eb3" translate="yes" xml:space="preserve">
          <source>count()</source>
          <target state="translated">count()</target>
        </trans-unit>
        <trans-unit id="707e41e60f70d0ee215b53822d8b4b6fc6410ba0" translate="yes" xml:space="preserve">
          <source>count_ones()</source>
          <target state="translated">count_ones()</target>
        </trans-unit>
        <trans-unit id="c3bbbe3b7094f3358ca7f21721f34f775b5c097f" translate="yes" xml:space="preserve">
          <source>count_zeros()</source>
          <target state="translated">count_zeros()</target>
        </trans-unit>
        <trans-unit id="22539799605ea9efcd718291379f0f946fd3224b" translate="yes" xml:space="preserve">
          <source>countlines()</source>
          <target state="translated">countlines()</target>
        </trans-unit>
        <trans-unit id="bfd0df8394ce3f3da138d91ef09c9be5c2d6ce2b" translate="yes" xml:space="preserve">
          <source>create if non-existent</source>
          <target state="translated">虚设</target>
        </trans-unit>
        <trans-unit id="d92eb5f6d2c2289929236f7dba6df0eaf5d1a50e" translate="yes" xml:space="preserve">
          <source>creates a &lt;code&gt;m&lt;/code&gt;-by-&lt;code&gt;n&lt;/code&gt;&lt;code&gt;Matrix{Int}&lt;/code&gt;, linked to the file associated with stream &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">创建一个 &lt;code&gt;m&lt;/code&gt; &amp;times; &lt;code&gt;n&lt;/code&gt; &lt;code&gt;Matrix{Int}&lt;/code&gt; ，链接到与流 &lt;code&gt;s&lt;/code&gt; 关联的文件。</target>
        </trans-unit>
        <trans-unit id="bbbaa38aee15d5f8b3bc9a4943fa2d0de63b8a18" translate="yes" xml:space="preserve">
          <source>creates an array that &quot;acts like&quot; an &lt;code&gt;Array{Int}&lt;/code&gt; (and might indeed be backed by one), but which is indexed identically to &lt;code&gt;A&lt;/code&gt;. If &lt;code&gt;A&lt;/code&gt; has conventional indexing, this will be identical to &lt;code&gt;Array{Int}(undef, size(A))&lt;/code&gt;, but if &lt;code&gt;A&lt;/code&gt; has unconventional indexing then the indices of the result will match &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">创建一个数组，其行为类似于 &lt;code&gt;Array{Int}&lt;/code&gt; （并且可能确实由一个数组支持），但其索引与 &lt;code&gt;A&lt;/code&gt; 相同。如果 &lt;code&gt;A&lt;/code&gt; 具有常规索引，这将是相同的 &lt;code&gt;Array{Int}(undef, size(A))&lt;/code&gt; ，但是，如果 &lt;code&gt;A&lt;/code&gt; 具有非常规的索引，则结果的索引将匹配 &lt;code&gt;A&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67a7dfdbedbc0710267686672950d9529ab37f15" translate="yes" xml:space="preserve">
          <source>creating new generators</source>
          <target state="translated">创建新的发电机</target>
        </trans-unit>
        <trans-unit id="f1900952e8b88f93bfc8fbd3cc439f624e3936b8" translate="yes" xml:space="preserve">
          <source>ctime</source>
          <target state="translated">ctime</target>
        </trans-unit>
        <trans-unit id="ac476a94b804e4a5abb808ae0fad36e89e6d0512" translate="yes" xml:space="preserve">
          <source>ctrl-Left, &lt;code&gt;meta-B&lt;/code&gt;</source>
          <target state="translated">ctrl-左， &lt;code&gt;meta-B&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c3effc5b7281f4b48b96623688183d51777a00ad" translate="yes" xml:space="preserve">
          <source>ctrl-Right, &lt;code&gt;meta-F&lt;/code&gt;</source>
          <target state="translated">Ctrl右移， &lt;code&gt;meta-F&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ef17152748f0d12fdf8399472b1ef5a9a8b3da7" translate="yes" xml:space="preserve">
          <source>cube root of &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 的立方根</target>
        </trans-unit>
        <trans-unit id="068fd35c01d9295bf0544756748c369a95705222" translate="yes" xml:space="preserve">
          <source>cumprod!()</source>
          <target state="translated">cumprod!()</target>
        </trans-unit>
        <trans-unit id="37186e0b9b96ce343892ae5db94d4263c328060e" translate="yes" xml:space="preserve">
          <source>cumprod()</source>
          <target state="translated">cumprod()</target>
        </trans-unit>
        <trans-unit id="f764901603e5acab9d9144f3d5cdfdf4c102de70" translate="yes" xml:space="preserve">
          <source>cumsum!()</source>
          <target state="translated">cumsum!()</target>
        </trans-unit>
        <trans-unit id="93fc0d66b742bebf68b5e2a9342b5ebad8b8d87f" translate="yes" xml:space="preserve">
          <source>cumsum()</source>
          <target state="translated">cumsum()</target>
        </trans-unit>
        <trans-unit id="5abe8abc26de95c9792598d21566acc895c90308" translate="yes" xml:space="preserve">
          <source>curly braces can also be used to group multiple &lt;a href=&quot;../base/index#where&quot;&gt;&lt;code&gt;where&lt;/code&gt;&lt;/a&gt; expressions in function declarations</source>
          <target state="translated">花括号还可以用于将函数声明中的多个&lt;a href=&quot;../base/index#where&quot;&gt; &lt;code&gt;where&lt;/code&gt; &lt;/a&gt;表达式分组</target>
        </trans-unit>
        <trans-unit id="40432e44938028d2ec04dfd3a07a3f4b3be2eb52" translate="yes" xml:space="preserve">
          <source>curly braces following a type list that type's &lt;a href=&quot;../../manual/types/index#Parametric-Types&quot;&gt;parameters&lt;/a&gt;</source>
          <target state="translated">类型&lt;a href=&quot;../../manual/types/index#Parametric-Types&quot;&gt;参数&lt;/a&gt;后面的类型列表后面的花括号</target>
        </trans-unit>
        <trans-unit id="09e6b715ac0dc95c5dd88e71bfb21697f8fef3fd" translate="yes" xml:space="preserve">
          <source>current_task()</source>
          <target state="translated">current_task()</target>
        </trans-unit>
        <trans-unit id="7ddb4b970645de8313d9d5857502f0c2fa8cc1cb" translate="yes" xml:space="preserve">
          <source>currently unsupported by &lt;code&gt;@cfunction&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@cfunction&lt;/code&gt; 目前不支持</target>
        </trans-unit>
        <trans-unit id="f3e4ea1eb714d977b60394de8e65d3e71c2ba453" translate="yes" xml:space="preserve">
          <source>datatype_alignment()</source>
          <target state="translated">datatype_alignment()</target>
        </trans-unit>
        <trans-unit id="68ddfe0014eab22870bf711572cabf8eccf97f9c" translate="yes" xml:space="preserve">
          <source>datatype_haspadding()</source>
          <target state="translated">datatype_haspadding()</target>
        </trans-unit>
        <trans-unit id="0782b17b4b48bd2e88f628411a3be99643286bfb" translate="yes" xml:space="preserve">
          <source>datatype_pointerfree()</source>
          <target state="translated">datatype_pointerfree()</target>
        </trans-unit>
        <trans-unit id="ec4cad10d37dfab711648117a668753da773836e" translate="yes" xml:space="preserve">
          <source>deepcopy()</source>
          <target state="translated">deepcopy()</target>
        </trans-unit>
        <trans-unit id="6ad229e997f81425fb8da894a5765d6f9b4656f2" translate="yes" xml:space="preserve">
          <source>defined in terms of scalar &lt;code&gt;getindex&lt;/code&gt;</source>
          <target state="translated">根据标量 &lt;code&gt;getindex&lt;/code&gt; 定义</target>
        </trans-unit>
        <trans-unit id="ed0470e09a1f473b5771842f69c09bb87e1d2315" translate="yes" xml:space="preserve">
          <source>defined in terms of scalar &lt;code&gt;setindex!&lt;/code&gt;</source>
          <target state="translated">根据标量 &lt;code&gt;setindex!&lt;/code&gt; 定义！</target>
        </trans-unit>
        <trans-unit id="393f07d73ab8da5347a283ea60efbe6c6f7a11f7" translate="yes" xml:space="preserve">
          <source>delete!()</source>
          <target state="translated">delete!()</target>
        </trans-unit>
        <trans-unit id="9a68f1e31d80b5f6b514e06d54ebd34e25a4d8eb" translate="yes" xml:space="preserve">
          <source>deleteat!()</source>
          <target state="translated">deleteat!()</target>
        </trans-unit>
        <trans-unit id="278ddb8b12ebb1ca7f859f2bece1cd6701bc6569" translate="yes" xml:space="preserve">
          <source>delimit character literals</source>
          <target state="translated">定界字</target>
        </trans-unit>
        <trans-unit id="c1ebdd9ee9814fbe6282a395fd9cf65b0884ea3b" translate="yes" xml:space="preserve">
          <source>delimit external process (command) specifications</source>
          <target state="translated">划定外部流程(命令)规格</target>
        </trans-unit>
        <trans-unit id="608fcd2454df58b843c13acf8b87034217109685" translate="yes" xml:space="preserve">
          <source>delimit string literals</source>
          <target state="translated">限定字串的字数</target>
        </trans-unit>
        <trans-unit id="7d366ddffd98a94e0fad4674e24018e19acfdbdb" translate="yes" xml:space="preserve">
          <source>denominator()</source>
          <target state="translated">denominator()</target>
        </trans-unit>
        <trans-unit id="f255f40ff6e83966f2058fb6f6a683a866b52b62" translate="yes" xml:space="preserve">
          <source>depends on how this parameter is used, first translate this to the intended pointer type, then determine the Julia equivalent using the remaining rules in this list</source>
          <target state="translated">取决于如何使用这个参数,首先将其翻译成预期的指针类型,然后使用这个列表中的其余规则确定Julia的等价物。</target>
        </trans-unit>
        <trans-unit id="e4c428d363f7c0edae62a5126a94cde247558c8e" translate="yes" xml:space="preserve">
          <source>detach()</source>
          <target state="translated">detach()</target>
        </trans-unit>
        <trans-unit id="4ac6d80469c53c40c421167573af330a9b8443e2" translate="yes" xml:space="preserve">
          <source>determines the directory in which Julia initially searches for source files (via &lt;code&gt;Base.find_source_file()&lt;/code&gt;).</source>
          <target state="translated">确定Julia最初在其中搜索源文件的目录（通过 &lt;code&gt;Base.find_source_file()&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f3a929b3364b471a481f4f7cda0b4559ecde9aba" translate="yes" xml:space="preserve">
          <source>device</source>
          <target state="translated">device</target>
        </trans-unit>
        <trans-unit id="caf903eb3da59fd49de57746f9e5c2a7f039d1ff" translate="yes" xml:space="preserve">
          <source>devnull</source>
          <target state="translated">devnull</target>
        </trans-unit>
        <trans-unit id="a8192d09ca57648a638ee5c0d74eb5a1f3beb43a" translate="yes" xml:space="preserve">
          <source>diagonal values of &lt;code&gt;D&lt;/code&gt; as a &lt;code&gt;Vector&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;D&lt;/code&gt; 作为 &lt;code&gt;Vector&lt;/code&gt; 对角线值</target>
        </trans-unit>
        <trans-unit id="50b8462baee24e314ce2ea302d6738d66a086f3f" translate="yes" xml:space="preserve">
          <source>diff()</source>
          <target state="translated">diff()</target>
        </trans-unit>
        <trans-unit id="d2d86dda6170d02151b20baadde45ee5fbaba483" translate="yes" xml:space="preserve">
          <source>differs in several aspects from the behavior in various shells, Perl, or Ruby:</source>
          <target state="translated">在一些方面与各种shell、Perl或Ruby中的行为不同。</target>
        </trans-unit>
        <trans-unit id="ddaba848cd30ba0dfee29427fe1519919884644e" translate="yes" xml:space="preserve">
          <source>digits!()</source>
          <target state="translated">digits!()</target>
        </trans-unit>
        <trans-unit id="dcb3476a5e3bc1a4e82d73711cbe17ec3707e677" translate="yes" xml:space="preserve">
          <source>digits()</source>
          <target state="translated">digits()</target>
        </trans-unit>
        <trans-unit id="c4004df9487b518c7c0260afba69bbf7406ef856" translate="yes" xml:space="preserve">
          <source>disable_sigint()</source>
          <target state="translated">disable_sigint()</target>
        </trans-unit>
        <trans-unit id="4ca339aa2b0b45a1740c1b08b44c44f864f800af" translate="yes" xml:space="preserve">
          <source>displaysize()</source>
          <target state="translated">displaysize()</target>
        </trans-unit>
        <trans-unit id="08e339d45d610e0e71d01142871c78afe51fe092" translate="yes" xml:space="preserve">
          <source>div()</source>
          <target state="translated">div()</target>
        </trans-unit>
        <trans-unit id="c4da7b6033f205b1948f7a2ef2868da706adfea9" translate="yes" xml:space="preserve">
          <source>divide</source>
          <target state="translated">divide</target>
        </trans-unit>
        <trans-unit id="fe7876ab1cdd4f9833fea1d7b5a6d493ec694a09" translate="yes" xml:space="preserve">
          <source>divrem()</source>
          <target state="translated">divrem()</target>
        </trans-unit>
        <trans-unit id="eadcd9bd2a09c75aef04954e6799e50278ee124a" translate="yes" xml:space="preserve">
          <source>do</source>
          <target state="translated">do</target>
        </trans-unit>
        <trans-unit id="1d39a1d245cf1c55633afed987418b6713d8c13b" translate="yes" xml:space="preserve">
          <source>does not hinder performance (but does not help either) since the compiler can determine the type of &lt;code&gt;c&lt;/code&gt; at the time &lt;code&gt;k&lt;/code&gt; is compiled.</source>
          <target state="translated">并不妨碍性能（但也没有帮助），因为编译器可以判断的类型 &lt;code&gt;c&lt;/code&gt; 当时 &lt;code&gt;k&lt;/code&gt; 编译。</target>
        </trans-unit>
        <trans-unit id="442cefa62fb588301b16d9cc3903aabcd6b874c4" translate="yes" xml:space="preserve">
          <source>don't write definitions like the following:</source>
          <target state="translated">不要写下面这样的定义。</target>
        </trans-unit>
        <trans-unit id="bdb36bb22deb169275b3094ba9005a29eeddd195" translate="yes" xml:space="preserve">
          <source>double</source>
          <target state="translated">double</target>
        </trans-unit>
        <trans-unit id="bad0bbc442541a1f26bbf0802465ebd9c4b90433" translate="yes" xml:space="preserve">
          <source>double ampersands is short-circuiting boolean and</source>
          <target state="translated">双安培符号是短路布尔和</target>
        </trans-unit>
        <trans-unit id="f9e14ec7d65b4fd5d649e06fde33464815e5daab" translate="yes" xml:space="preserve">
          <source>double equals sign is value equality comparison</source>
          <target state="translated">双等号是价值平等比较</target>
        </trans-unit>
        <trans-unit id="a85d1e43f4e45a5e9c57c992b78b95a44a840e1e" translate="yes" xml:space="preserve">
          <source>double pipe characters is short-circuiting boolean or</source>
          <target state="translated">双管字符是短路布尔值或...。</target>
        </trans-unit>
        <trans-unit id="8dc67c9e4d366aec023c4552c2b2ffe135229380" translate="yes" xml:space="preserve">
          <source>double-colons represent a type annotation or &lt;a href=&quot;../base/index#Core.typeassert&quot;&gt;&lt;code&gt;typeassert&lt;/code&gt;&lt;/a&gt;, depending on context, frequently used when declaring function arguments</source>
          <target state="translated">双&lt;a href=&quot;../base/index#Core.typeassert&quot;&gt; &lt;code&gt;typeassert&lt;/code&gt; &lt;/a&gt;表示类型注释或typeassert，具体取决于上下文，在声明函数参数时经常使用</target>
        </trans-unit>
        <trans-unit id="f7f0661f92a282177367538fb8828cb747b3c372" translate="yes" xml:space="preserve">
          <source>download()</source>
          <target state="translated">download()</target>
        </trans-unit>
        <trans-unit id="538088be1eefc3445e07a8fd55bc96a89bbfa547" translate="yes" xml:space="preserve">
          <source>dropdims()</source>
          <target state="translated">dropdims()</target>
        </trans-unit>
        <trans-unit id="2bd0d27aef77b029cc1eb620dc4e34c52131c8aa" translate="yes" xml:space="preserve">
          <source>dump()</source>
          <target state="translated">dump()</target>
        </trans-unit>
        <trans-unit id="58e6b3a414a1e090dfc6029add0f3555ccba127f" translate="yes" xml:space="preserve">
          <source>e</source>
          <target state="translated">e</target>
        </trans-unit>
        <trans-unit id="2cb8eb2bf55ecfff46170a06208bc9a63f230cea" translate="yes" xml:space="preserve">
          <source>e.g. &lt;code&gt;eigvals(M)&lt;/code&gt;</source>
          <target state="translated">例如 &lt;code&gt;eigvals(M)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4cb2425c64d74c8fe9c369c1afc551b11ea45d4a" translate="yes" xml:space="preserve">
          <source>eachindex()</source>
          <target state="translated">eachindex()</target>
        </trans-unit>
        <trans-unit id="04a952be193b6764e2632c57e93cde20ae150eee" translate="yes" xml:space="preserve">
          <source>eachline()</source>
          <target state="translated">eachline()</target>
        </trans-unit>
        <trans-unit id="e2554b8475ab2b54b60a56da1f4ef81c3e32fbb9" translate="yes" xml:space="preserve">
          <source>eachmatch()</source>
          <target state="translated">eachmatch()</target>
        </trans-unit>
        <trans-unit id="258adad1110b22f2c44c06dd5017dd2f805d37d2" translate="yes" xml:space="preserve">
          <source>eltype()</source>
          <target state="translated">eltype()</target>
        </trans-unit>
        <trans-unit id="4bb0566de8ca4848075d64ca6dd14fea11761eb1" translate="yes" xml:space="preserve">
          <source>emacs</source>
          <target state="translated">emacs</target>
        </trans-unit>
        <trans-unit id="21a247519f36d781bd86222ec2f835177e0f0ca4" translate="yes" xml:space="preserve">
          <source>emacsclient</source>
          <target state="translated">emacsclient</target>
        </trans-unit>
        <trans-unit id="aa79d924616501f585415217c5b0d140efd4a624" translate="yes" xml:space="preserve">
          <source>empty!()</source>
          <target state="translated">empty!()</target>
        </trans-unit>
        <trans-unit id="7a92f3d26362d6557d5701de77a63a01df61e57f" translate="yes" xml:space="preserve">
          <source>end</source>
          <target state="translated">end</target>
        </trans-unit>
        <trans-unit id="e97cb28a99c0b11c0852d7d215ddcb799ab70f15" translate="yes" xml:space="preserve">
          <source>end a multi-line comment by immediately preceding the number sign with an equals sign</source>
          <target state="translated">在多行注释前用等号结束数字符号</target>
        </trans-unit>
        <trans-unit id="c3abe8cea88159f79f1a2b7eb68c04eba45ac113" translate="yes" xml:space="preserve">
          <source>end multi-line comment</source>
          <target state="translated">批注</target>
        </trans-unit>
        <trans-unit id="a0975681dff05e7422934d57bb67a308a3934b0a" translate="yes" xml:space="preserve">
          <source>endswith()</source>
          <target state="translated">endswith()</target>
        </trans-unit>
        <trans-unit id="ceb4ac9e2afb44371ead091deb185e73cbc7ccfe" translate="yes" xml:space="preserve">
          <source>eof()</source>
          <target state="translated">eof()</target>
        </trans-unit>
        <trans-unit id="7cb01e85d0feb7872c802203d7ae44373d648524" translate="yes" xml:space="preserve">
          <source>eps()</source>
          <target state="translated">eps()</target>
        </trans-unit>
        <trans-unit id="d252f0eecd7650ba1c914a5bd18fb5346eab0d82" translate="yes" xml:space="preserve">
          <source>equality</source>
          <target state="translated">equality</target>
        </trans-unit>
        <trans-unit id="a4a65ccad96be75e501f259fc69c6ac3d975b624" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;code&gt;--code-coverage=user&lt;/code&gt;</source>
          <target state="translated">等效于 &lt;code&gt;--code-coverage=user&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b52cf661b3362b5367309a73640cb3eb4855a4e8" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;code&gt;--track-allocation=user&lt;/code&gt;</source>
          <target state="translated">等效于 &lt;code&gt;--track-allocation=user&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f5b3d58ae3cefecbe0b20fb8ec282665961e8fca" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;code&gt;rem(x,y)&lt;/code&gt;</source>
          <target state="translated">等效于 &lt;code&gt;rem(x,y)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f9f8c9deec14b47b8bc379c18c846e0b94d4a88" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;code&gt;y / x&lt;/code&gt;</source>
          <target state="translated">相当于 &lt;code&gt;y / x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aca90d914519fdb9825352bdc0befb59f7c8510f" translate="yes" xml:space="preserve">
          <source>error()</source>
          <target state="translated">error()</target>
        </trans-unit>
        <trans-unit id="56d36865ebf4c552cef6aaed71debf9552ec9273" translate="yes" xml:space="preserve">
          <source>esc()</source>
          <target state="translated">esc()</target>
        </trans-unit>
        <trans-unit id="c4ddad7fd86eb507ef1f888b53d22087c2c81582" translate="yes" xml:space="preserve">
          <source>escape_string()</source>
          <target state="translated">escape_string()</target>
        </trans-unit>
        <trans-unit id="126fcbf067df4e8c89b261ef4220e7b5fef99c16" translate="yes" xml:space="preserve">
          <source>evalfile()</source>
          <target state="translated">evalfile()</target>
        </trans-unit>
        <trans-unit id="892b0685697f05179c7f28be2c4f71f8511b473b" translate="yes" xml:space="preserve">
          <source>evaluation stops there, but if it got to &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;@isdefined(t)&lt;/code&gt;, it would return &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">评估在那里停止，但是如果到达 &lt;code&gt;s&lt;/code&gt; 和 &lt;code&gt;@isdefined(t)&lt;/code&gt; ，它将返回 &lt;code&gt;0&lt;/code&gt; 和 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21c24aa266866adb2332323487e5d531ad14a92c" translate="yes" xml:space="preserve">
          <source>execution continues, making &lt;code&gt;s&lt;/code&gt; local to the &lt;code&gt;for&lt;/code&gt; loop body</source>
          <target state="translated">执行继续，使 &lt;code&gt;s&lt;/code&gt; 成为 &lt;code&gt;for&lt;/code&gt; 循环主体</target>
        </trans-unit>
        <trans-unit id="bc6b03d36749751faa3b31f4b8e7b5c078aa026a" translate="yes" xml:space="preserve">
          <source>exit()</source>
          <target state="translated">exit()</target>
        </trans-unit>
        <trans-unit id="9a24648fda524fc379cf61c33409df445eca1b15" translate="yes" xml:space="preserve">
          <source>exp()</source>
          <target state="translated">exp()</target>
        </trans-unit>
        <trans-unit id="15f7f3200279519bff82d38b28a89c076fbef5f3" translate="yes" xml:space="preserve">
          <source>exp10()</source>
          <target state="translated">exp10()</target>
        </trans-unit>
        <trans-unit id="1d0db7bd782284dac6e823fd65990c08ce34156a" translate="yes" xml:space="preserve">
          <source>exp2()</source>
          <target state="translated">exp2()</target>
        </trans-unit>
        <trans-unit id="05b99699db7c7814132cb3f24fb0d494c01c3a1b" translate="yes" xml:space="preserve">
          <source>expands with respect to the module in which it is called. This is best seen in the following example:</source>
          <target state="translated">在调用它的模块中进行扩展。这一点在下面的例子中得到了最好的体现。</target>
        </trans-unit>
        <trans-unit id="68e8fea58332f15080999d795b35a8efb6ec19b6" translate="yes" xml:space="preserve">
          <source>expm1()</source>
          <target state="translated">expm1()</target>
        </trans-unit>
        <trans-unit id="40700807f2037fc05ddd23c69c1973393f00556f" translate="yes" xml:space="preserve">
          <source>exponent operator</source>
          <target state="translated">指数运算符</target>
        </trans-unit>
        <trans-unit id="51713409935576d63d066e104eb1ad0e37137da7" translate="yes" xml:space="preserve">
          <source>export</source>
          <target state="translated">export</target>
        </trans-unit>
        <trans-unit id="3fa1085e0435c3506c119c4b1e9be9734c0c722d" translate="yes" xml:space="preserve">
          <source>extrema()</source>
          <target state="translated">extrema()</target>
        </trans-unit>
        <trans-unit id="c769faadfb40b05b3849ae0e94489d475144bce7" translate="yes" xml:space="preserve">
          <source>factorial()</source>
          <target state="translated">factorial()</target>
        </trans-unit>
        <trans-unit id="590475f96a4787ad14dcbd03755a0dee11246caf" translate="yes" xml:space="preserve">
          <source>falses()</source>
          <target state="translated">falses()</target>
        </trans-unit>
        <trans-unit id="c8396ccb19078d56015f97d41bebd88083f24a65" translate="yes" xml:space="preserve">
          <source>fd()</source>
          <target state="translated">fd()</target>
        </trans-unit>
        <trans-unit id="1f15b86c5bdf7f66ce173cc5c70a618bfa4925ae" translate="yes" xml:space="preserve">
          <source>fdio()</source>
          <target state="translated">fdio()</target>
        </trans-unit>
        <trans-unit id="642b8491c15b4c20a91526f17d4631a5091e4888" translate="yes" xml:space="preserve">
          <source>fetch()</source>
          <target state="translated">fetch()</target>
        </trans-unit>
        <trans-unit id="0940b37a9b2ac810168d7b3bce637671bf712a3a" translate="yes" xml:space="preserve">
          <source>fieldcount()</source>
          <target state="translated">fieldcount()</target>
        </trans-unit>
        <trans-unit id="b6b110581b48a632d6d3c739a60b893f16ed3a7c" translate="yes" xml:space="preserve">
          <source>fieldname()</source>
          <target state="translated">fieldname()</target>
        </trans-unit>
        <trans-unit id="2c26ad3f4ac3ab41e282a36b54d0da83bf73fcb1" translate="yes" xml:space="preserve">
          <source>fieldnames()</source>
          <target state="translated">fieldnames()</target>
        </trans-unit>
        <trans-unit id="6d3dcb9cda26c9c30e787ec2a88eac93db005915" translate="yes" xml:space="preserve">
          <source>fieldoffset()</source>
          <target state="translated">fieldoffset()</target>
        </trans-unit>
        <trans-unit id="b5905b6f2880465a05ba97fe20f85a993b6f7cee" translate="yes" xml:space="preserve">
          <source>fieldtypes()</source>
          <target state="translated">fieldtypes()</target>
        </trans-unit>
        <trans-unit id="53f625df40033f95c63e354509568cc2091892f0" translate="yes" xml:space="preserve">
          <source>fill the array &lt;code&gt;A&lt;/code&gt; with the value &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">用值 &lt;code&gt;x&lt;/code&gt; 填充数组 &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7d357cb495638b9e30bbc0f611154d7b93bd22c" translate="yes" xml:space="preserve">
          <source>fill!()</source>
          <target state="translated">fill!()</target>
        </trans-unit>
        <trans-unit id="b10ef848ebbad89fe9348318d14a018b5aa082fb" translate="yes" xml:space="preserve">
          <source>fill()</source>
          <target state="translated">fill()</target>
        </trans-unit>
        <trans-unit id="775c632056b3dd147952ed491fdab4e6e6cde751" translate="yes" xml:space="preserve">
          <source>filter!()</source>
          <target state="translated">filter!()</target>
        </trans-unit>
        <trans-unit id="0e01e8b9a6d1e6bc3a8eac6e3c34f38603a0061c" translate="yes" xml:space="preserve">
          <source>filter()</source>
          <target state="translated">filter()</target>
        </trans-unit>
        <trans-unit id="123d5c91733d55ec9c590ad7219a23d2ea90d44e" translate="yes" xml:space="preserve">
          <source>finalize()</source>
          <target state="translated">finalize()</target>
        </trans-unit>
        <trans-unit id="53e06ef716db294e8380623ff1d6b08e1834f73d" translate="yes" xml:space="preserve">
          <source>finalizer()</source>
          <target state="translated">finalizer()</target>
        </trans-unit>
        <trans-unit id="8f4e3e3c24bac71b4ffdf2bc0f73246d601766d4" translate="yes" xml:space="preserve">
          <source>finally</source>
          <target state="translated">finally</target>
        </trans-unit>
        <trans-unit id="447eefd8ae275daee5cadb680036581b2085652b" translate="yes" xml:space="preserve">
          <source>findall()</source>
          <target state="translated">findall()</target>
        </trans-unit>
        <trans-unit id="d5808bd15d866bad0ddb65c2a35dbbe2ea62fda3" translate="yes" xml:space="preserve">
          <source>findfirst()</source>
          <target state="translated">findfirst()</target>
        </trans-unit>
        <trans-unit id="250a8fe316df8ff4f441b7ffc8ce0b8e93c47a2c" translate="yes" xml:space="preserve">
          <source>findlast()</source>
          <target state="translated">findlast()</target>
        </trans-unit>
        <trans-unit id="7757c9cabfea70680f29ee44ae8f339383651268" translate="yes" xml:space="preserve">
          <source>findmax!()</source>
          <target state="translated">findmax!()</target>
        </trans-unit>
        <trans-unit id="d177b67386324dc3c3a9d72bfd202078b7a7ad9e" translate="yes" xml:space="preserve">
          <source>findmax()</source>
          <target state="translated">findmax()</target>
        </trans-unit>
        <trans-unit id="1f3c251827bbad3ff2d753c0b99c4f0efe11ed60" translate="yes" xml:space="preserve">
          <source>findmin!()</source>
          <target state="translated">findmin!()</target>
        </trans-unit>
        <trans-unit id="bab7560cdb9c375ffeae268a801f4f7a19eb1aa3" translate="yes" xml:space="preserve">
          <source>findmin()</source>
          <target state="translated">findmin()</target>
        </trans-unit>
        <trans-unit id="33b20adc020e330bc8a2c1266aaceb19452f2b4e" translate="yes" xml:space="preserve">
          <source>findnext()</source>
          <target state="translated">findnext()</target>
        </trans-unit>
        <trans-unit id="c68032ab8f5d12cff972ca0abc1fb12ea4fed3e4" translate="yes" xml:space="preserve">
          <source>findprev()</source>
          <target state="translated">findprev()</target>
        </trans-unit>
        <trans-unit id="e4fc5535775c5f3e04a8421eb2e2a08a1a3faeee" translate="yes" xml:space="preserve">
          <source>first()</source>
          <target state="translated">first()</target>
        </trans-unit>
        <trans-unit id="ffdaa312f7f7fb82fc2638fb90dda3cda47199d6" translate="yes" xml:space="preserve">
          <source>firstindex()</source>
          <target state="translated">firstindex()</target>
        </trans-unit>
        <trans-unit id="666b6cfe38894aa2b52187b373d9ba04070d937c" translate="yes" xml:space="preserve">
          <source>fld()</source>
          <target state="translated">fld()</target>
        </trans-unit>
        <trans-unit id="58e92ff87ca15efe8f3766cdac0c877582b49716" translate="yes" xml:space="preserve">
          <source>fld1()</source>
          <target state="translated">fld1()</target>
        </trans-unit>
        <trans-unit id="7606991e6f276f83e4afd8167f96d68e73a9014c" translate="yes" xml:space="preserve">
          <source>fldmod()</source>
          <target state="translated">fldmod()</target>
        </trans-unit>
        <trans-unit id="75f03d5691287bdd47519b7e8d2008dccb0b405a" translate="yes" xml:space="preserve">
          <source>fldmod1()</source>
          <target state="translated">fldmod1()</target>
        </trans-unit>
        <trans-unit id="b93fa03b99f4b25e3e0f7750e737ca51b698873d" translate="yes" xml:space="preserve">
          <source>flipsign()</source>
          <target state="translated">flipsign()</target>
        </trans-unit>
        <trans-unit id="1c2fa7e102c84d121c7216f892567df44e04fc7a" translate="yes" xml:space="preserve">
          <source>float()</source>
          <target state="translated">float()</target>
        </trans-unit>
        <trans-unit id="2147b1803a5e389d588a8a43bc715afa1e648e34" translate="yes" xml:space="preserve">
          <source>floatmax()</source>
          <target state="translated">floatmax()</target>
        </trans-unit>
        <trans-unit id="257003b8975b4c1aa82635c4aff95453c44da594" translate="yes" xml:space="preserve">
          <source>floatmin()</source>
          <target state="translated">floatmin()</target>
        </trans-unit>
        <trans-unit id="cca5381adecfa38ea3c5cb118a7366bb7b362cf4" translate="yes" xml:space="preserve">
          <source>floor()</source>
          <target state="translated">floor()</target>
        </trans-unit>
        <trans-unit id="6ae25a5c034c5f4841403ca7b40955ad88881f7f" translate="yes" xml:space="preserve">
          <source>floored division; quotient rounded towards &lt;code&gt;-Inf&lt;/code&gt;</source>
          <target state="translated">地板师 商四舍五入为 &lt;code&gt;-Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="403501eefc882c64f009f4c854129a92af05289d" translate="yes" xml:space="preserve">
          <source>flush()</source>
          <target state="translated">flush()</target>
        </trans-unit>
        <trans-unit id="fcb41792f2726b53326f7c5b3a72b068b88f9853" translate="yes" xml:space="preserve">
          <source>fma()</source>
          <target state="translated">fma()</target>
        </trans-unit>
        <trans-unit id="3667f0cd04657f9d66a41bf019d24d39a22f17a5" translate="yes" xml:space="preserve">
          <source>foldl()</source>
          <target state="translated">foldl()</target>
        </trans-unit>
        <trans-unit id="2c834c5fcd8138e285a0f535ca83505ba56bbf51" translate="yes" xml:space="preserve">
          <source>foldr()</source>
          <target state="translated">foldr()</target>
        </trans-unit>
        <trans-unit id="43eef9a62abb8b1e1654f8a890aae054abffa82b" translate="yes" xml:space="preserve">
          <source>for</source>
          <target state="translated">for</target>
        </trans-unit>
        <trans-unit id="990156c49d697c0f4d43f608eb847db102e2bdd3" translate="yes" xml:space="preserve">
          <source>for bare repositories, this is the location of the &quot;git&quot; files.</source>
          <target state="translated">对于裸仓库,这是 &quot;git &quot;文件的位置。</target>
        </trans-unit>
        <trans-unit id="2675c4cd40a869de9f77f720b76f930c2bbc5800" translate="yes" xml:space="preserve">
          <source>for bare repositories, this is the location of the repository itself.</source>
          <target state="translated">对于裸仓库,这是仓库本身的位置。</target>
        </trans-unit>
        <trans-unit id="6ea06527c8401152cf289da7eea7bb570a893388" translate="yes" xml:space="preserve">
          <source>for normal repositories, this is the location of the &lt;code&gt;.git&lt;/code&gt; folder.</source>
          <target state="translated">对于普通存储库，这是 &lt;code&gt;.git&lt;/code&gt; 文件夹的位置。</target>
        </trans-unit>
        <trans-unit id="1dbdf5645f42b7da187142b49a785f150a8c0f39" translate="yes" xml:space="preserve">
          <source>for normal repositories, this will typically be the parent directory of the &quot;.git&quot; directory (note: this may be different than the working directory, see &lt;code&gt;workdir&lt;/code&gt; for more details).</source>
          <target state="translated">对于普通存储库，这通常是&amp;ldquo; .git&amp;rdquo;目录的父目录（注意：这可能与工作目录不同，有关更多详细信息，请参见 &lt;code&gt;workdir&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="2d74d4ad748b789399f645b2e9f0568718ff4692" translate="yes" xml:space="preserve">
          <source>for the particular &lt;code&gt;sampler&lt;/code&gt; returned by &lt;code&gt;Sampler(rng, X, repetition)&lt;/code&gt;.</source>
          <target state="translated">对于由 &lt;code&gt;Sampler(rng, X, repetition)&lt;/code&gt; 返回的特定 &lt;code&gt;sampler&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="165d7206a7f9fc6f73775a66492056418240c22b" translate="yes" xml:space="preserve">
          <source>for which we want to add a number of methods to. We can do this programmatically in the following loop:</source>
          <target state="translated">我们想为其添加一些方法。我们可以在下面的循环中以编程的方式进行。</target>
        </trans-unit>
        <trans-unit id="9454ce9651d66b6cca067198611ee56be3fbcfd5" translate="yes" xml:space="preserve">
          <source>foreach()</source>
          <target state="translated">foreach()</target>
        </trans-unit>
        <trans-unit id="50e93b4a42130d1dfed4ac849969c9618de26c7d" translate="yes" xml:space="preserve">
          <source>forward slash divides the argument on its left by the one on its right</source>
          <target state="translated">斜杠杠</target>
        </trans-unit>
        <trans-unit id="baa124207640dec1755bf966b6e8fbfe40c3b8c2" translate="yes" xml:space="preserve">
          <source>front()</source>
          <target state="translated">front()</target>
        </trans-unit>
        <trans-unit id="0c6cc2eeaaac8a164c46d05455ec439c9a34c47b" translate="yes" xml:space="preserve">
          <source>fullname()</source>
          <target state="translated">fullname()</target>
        </trans-unit>
        <trans-unit id="c218e39efa2e1aae69f39d2054528369ce1e1f46" translate="yes" xml:space="preserve">
          <source>function</source>
          <target state="translated">function</target>
        </trans-unit>
        <trans-unit id="5f008ea647603fce9b3cbfed7927df000fce146b" translate="yes" xml:space="preserve">
          <source>function names that end with an exclamation mark modify one or more of their arguments by convention</source>
          <target state="translated">以感叹号结尾的函数名按照惯例修改一个或多个参数。</target>
        </trans-unit>
        <trans-unit id="f9efa9681dfd0ae3e6af3c5e35b2b62fc857acd6" translate="yes" xml:space="preserve">
          <source>functionloc()</source>
          <target state="translated">functionloc()</target>
        </trans-unit>
        <trans-unit id="446f359ddd2cb945c397aff66cc61e7489b1b713" translate="yes" xml:space="preserve">
          <source>functions (either syntax, anonymous &amp;amp; do-blocks)</source>
          <target state="translated">函数（语法，匿名和do-blocks）</target>
        </trans-unit>
        <trans-unit id="f8e94bdaa92f1ab4cc49bb9323a091891f7a5192" translate="yes" xml:space="preserve">
          <source>functions are lowercase (&lt;a href=&quot;../../base/collections/index#Base.maximum&quot;&gt;&lt;code&gt;maximum&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../base/base/index#Base.convert&quot;&gt;&lt;code&gt;convert&lt;/code&gt;&lt;/a&gt;) and, when readable, with multiple words squashed together (&lt;a href=&quot;../../base/base/index#Base.isequal&quot;&gt;&lt;code&gt;isequal&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../base/collections/index#Base.haskey&quot;&gt;&lt;code&gt;haskey&lt;/code&gt;&lt;/a&gt;). When necessary, use underscores as word separators. Underscores are also used to indicate a combination of concepts (&lt;code&gt;remotecall_fetch&lt;/code&gt; as a more efficient implementation of &lt;code&gt;fetch(remotecall(...))&lt;/code&gt;) or as modifiers.</source>
          <target state="translated">函数是小写的（&lt;a href=&quot;../../base/collections/index#Base.maximum&quot;&gt; &lt;code&gt;maximum&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../base/base/index#Base.convert&quot;&gt; &lt;code&gt;convert&lt;/code&gt; &lt;/a&gt;），并且在可读时将多个单词压在一起（&lt;a href=&quot;../../base/base/index#Base.isequal&quot;&gt; &lt;code&gt;isequal&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../base/collections/index#Base.haskey&quot;&gt; &lt;code&gt;haskey&lt;/code&gt; &lt;/a&gt;）。必要时，使用下划线作为单词分隔符。下划线还用来指示的概念的结合（ &lt;code&gt;remotecall_fetch&lt;/code&gt; 作为更有效的实现的 &lt;code&gt;fetch(remotecall(...))&lt;/code&gt; ），或作为改性剂。</target>
        </trans-unit>
        <trans-unit id="74ca015f06ee0c3bce6fa197360722520d1d0a99" translate="yes" xml:space="preserve">
          <source>gcd()</source>
          <target state="translated">gcd()</target>
        </trans-unit>
        <trans-unit id="c99c6f3b40d56bc7adf7acbae469d680ed192823" translate="yes" xml:space="preserve">
          <source>gcdx()</source>
          <target state="translated">gcdx()</target>
        </trans-unit>
        <trans-unit id="1636cfebc994ba147164b64bbdc76985cfe103a5" translate="yes" xml:space="preserve">
          <source>generates ambiguities for anyone who defines a method</source>
          <target state="translated">对于任何定义方法的人来说,都会产生歧义。</target>
        </trans-unit>
        <trans-unit id="14b379e2c742073506757c3399144ea047185a73" translate="yes" xml:space="preserve">
          <source>generating random values of custom types</source>
          <target state="translated">生成自定义类型的随机值</target>
        </trans-unit>
        <trans-unit id="27ded28f5e11058e654ff29448c61e09e09a995f" translate="yes" xml:space="preserve">
          <source>gensym()</source>
          <target state="translated">gensym()</target>
        </trans-unit>
        <trans-unit id="fc0bed9ef7724b9820e188939ed15d0530b83d25" translate="yes" xml:space="preserve">
          <source>get!()</source>
          <target state="translated">get!()</target>
        </trans-unit>
        <trans-unit id="4a79533a2233d37071096ed5d29c1e9ac6cf66e6" translate="yes" xml:space="preserve">
          <source>get()</source>
          <target state="translated">get()</target>
        </trans-unit>
        <trans-unit id="ea2d7ada13ede709eb5a478cc3e4a8e6cd3ae229" translate="yes" xml:space="preserve">
          <source>getindex()</source>
          <target state="translated">getindex()</target>
        </trans-unit>
        <trans-unit id="758623b6ecf2d0e3ba775e5710879e0595d87c8d" translate="yes" xml:space="preserve">
          <source>getkey()</source>
          <target state="translated">getkey()</target>
        </trans-unit>
        <trans-unit id="960a109e6ef7adb5b541fa5087ef84521b9b7774" translate="yes" xml:space="preserve">
          <source>getproperty()</source>
          <target state="translated">getproperty()</target>
        </trans-unit>
        <trans-unit id="4e80c01e75cf1655038813521698f23953c93e16" translate="yes" xml:space="preserve">
          <source>gid</source>
          <target state="translated">gid</target>
        </trans-unit>
        <trans-unit id="1098e5c8d4297a38aecd3978d27f326626697208" translate="yes" xml:space="preserve">
          <source>git reset [&amp;lt;committish&amp;gt;] [&amp;ndash;] &amp;lt;pathspecs&amp;gt;...</source>
          <target state="translated">git reset [&amp;lt;committish&amp;gt;] [&amp;ndash;] &amp;lt;pathspecs&amp;gt; ...</target>
        </trans-unit>
        <trans-unit id="9027cc5a2c1321de60a2d71ccde6229d1152d6d3" translate="yes" xml:space="preserve">
          <source>global</source>
          <target state="translated">global</target>
        </trans-unit>
        <trans-unit id="3912dd9d8ff861bff202eeb93c7723c681f90e0a" translate="yes" xml:space="preserve">
          <source>global &lt;code&gt;s&lt;/code&gt; is defined with the value &lt;code&gt;0&lt;/code&gt; before the loop is evaluated</source>
          <target state="translated">评估循环之前，全局 &lt;code&gt;s&lt;/code&gt; 的值定义为 &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b539d84374038b8f6c6cfe6c088c76078ba0a2d9" translate="yes" xml:space="preserve">
          <source>global or local</source>
          <target state="translated">全球性</target>
        </trans-unit>
        <trans-unit id="2fa709f02b0516ccfdcfe5e3158bedc23fbc69c5" translate="yes" xml:space="preserve">
          <source>greater than</source>
          <target state="translated">大于</target>
        </trans-unit>
        <trans-unit id="65bc30c904c711751bb0c0f744b001ef044bdfa1" translate="yes" xml:space="preserve">
          <source>greater than or equal to</source>
          <target state="translated">大于或等于</target>
        </trans-unit>
        <trans-unit id="190a43af35a7f073563d04b99f43fedd3f5e7dbf" translate="yes" xml:space="preserve">
          <source>greatest positive common divisor of &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;,...</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;y&lt;/code&gt; ，...的最大正公约数</target>
        </trans-unit>
        <trans-unit id="6dbdd59ab542c91f19905b4d8672b5320dcba285" translate="yes" xml:space="preserve">
          <source>half</source>
          <target state="translated">half</target>
        </trans-unit>
        <trans-unit id="724ff903cec855f6116ab1ba2442fc447383052d" translate="yes" xml:space="preserve">
          <source>has the property that</source>
          <target state="translated">具有以下特性</target>
        </trans-unit>
        <trans-unit id="e071057e2b89f96bef77810fb48f9dfce9eae056" translate="yes" xml:space="preserve">
          <source>hasfield()</source>
          <target state="translated">hasfield()</target>
        </trans-unit>
        <trans-unit id="7f9b91084a526487346a2e5418f8bb5e1c44a4a8" translate="yes" xml:space="preserve">
          <source>hash()</source>
          <target state="translated">hash()</target>
        </trans-unit>
        <trans-unit id="176fd729cdb9ae65933ffb50dce3cda69b400b1d" translate="yes" xml:space="preserve">
          <source>haskey()</source>
          <target state="translated">haskey()</target>
        </trans-unit>
        <trans-unit id="eb91e678fcbaca5070850b45a38a62a29614d87e" translate="yes" xml:space="preserve">
          <source>hasmethod()</source>
          <target state="translated">hasmethod()</target>
        </trans-unit>
        <trans-unit id="830682cfe621360f6e27c877f3637441a477a04e" translate="yes" xml:space="preserve">
          <source>hasproperty()</source>
          <target state="translated">hasproperty()</target>
        </trans-unit>
        <trans-unit id="794daa5801fd456cd139be7b3b8f9068b41381a1" translate="yes" xml:space="preserve">
          <source>hcat()</source>
          <target state="translated">hcat()</target>
        </trans-unit>
        <trans-unit id="7b24f76b1906ddde4c3a2493eaf377e3099fd911" translate="yes" xml:space="preserve">
          <source>hex2bytes!()</source>
          <target state="translated">hex2bytes!()</target>
        </trans-unit>
        <trans-unit id="5a367dcb2f5d76ec44f70b33c6216f0caf868990" translate="yes" xml:space="preserve">
          <source>hex2bytes()</source>
          <target state="translated">hex2bytes()</target>
        </trans-unit>
        <trans-unit id="112254457c4dc77313979033e8b21106b11c30ee" translate="yes" xml:space="preserve">
          <source>host:port information is written to stream &lt;code&gt;out&lt;/code&gt; (defaults to stdout).</source>
          <target state="translated">主机：端口的信息被写入到流 &lt;code&gt;out&lt;/code&gt; （默认为标准输出）。</target>
        </trans-unit>
        <trans-unit id="5881490fe364dfc1f054095702412f2038e0e269" translate="yes" xml:space="preserve">
          <source>htol()</source>
          <target state="translated">htol()</target>
        </trans-unit>
        <trans-unit id="67cd5ddd9d0867e6b550f803ad7d581433a4b6d0" translate="yes" xml:space="preserve">
          <source>hton()</source>
          <target state="translated">hton()</target>
        </trans-unit>
        <trans-unit id="f4c40a4cbdf9885e050747d42cb0a9380ba788e2" translate="yes" xml:space="preserve">
          <source>hvcat()</source>
          <target state="translated">hvcat()</target>
        </trans-unit>
        <trans-unit id="e0f89ab4a3b6bbdb9a767a9a28e92e9d8eae0fed" translate="yes" xml:space="preserve">
          <source>hypotenuse of right-angled triangle with other sides of length &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;</source>
          <target state="translated">直角三角形的斜边与另一边的长度分别为 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="99012a110641febc35316f4cce0355ddbb05fb05" translate="yes" xml:space="preserve">
          <source>identity()</source>
          <target state="translated">identity()</target>
        </trans-unit>
        <trans-unit id="958f57f57d72a30f329ee5538f21b0257a49a46e" translate="yes" xml:space="preserve">
          <source>if</source>
          <target state="translated">if</target>
        </trans-unit>
        <trans-unit id="e7caf0c3301b18af6203630e33965eb0751d4f66" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;T&lt;/code&gt; is an &lt;code&gt;enum&lt;/code&gt;, the argument type should be equivalent to &lt;code&gt;Cint&lt;/code&gt; or &lt;code&gt;Cuint&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;T&lt;/code&gt; 是一个 &lt;code&gt;enum&lt;/code&gt; ，则参数类型应等效于 &lt;code&gt;Cint&lt;/code&gt; 或 &lt;code&gt;Cuint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d25c4057c6190eb834847a2bf680cc028e993af6" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;pivot == Val(true)&lt;/code&gt; then &lt;code&gt;F&lt;/code&gt; is a &lt;a href=&quot;#LinearAlgebra.QRPivoted&quot;&gt;&lt;code&gt;QRPivoted&lt;/code&gt;&lt;/a&gt; object,</source>
          <target state="translated">如果 &lt;code&gt;pivot == Val(true)&lt;/code&gt; 则 &lt;code&gt;F&lt;/code&gt; 是&lt;a href=&quot;#LinearAlgebra.QRPivoted&quot;&gt; &lt;code&gt;QRPivoted&lt;/code&gt; &lt;/a&gt;对象，</target>
        </trans-unit>
        <trans-unit id="dd2beb015442865d0b20b7496cd52d871f3b48af" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;r == RoundDown&lt;/code&gt;, then the result is in the interval $[0, 2&amp;pi;]$. See also &lt;a href=&quot;#Base.Rounding.RoundDown&quot;&gt;&lt;code&gt;RoundDown&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;r == RoundDown&lt;/code&gt; ，则结果在区间$ [0，2&amp;pi;] $中。另请参见&lt;a href=&quot;#Base.Rounding.RoundDown&quot;&gt; &lt;code&gt;RoundDown&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="87cf36194e03c12603725ce85e49ab4f49ce1e93" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;r == RoundNearest&lt;/code&gt;, then the result is in the interval $[-&amp;pi;, &amp;pi;]$. This will generally be the most accurate result. See also &lt;a href=&quot;#Base.Rounding.RoundNearest&quot;&gt;&lt;code&gt;RoundNearest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;r == RoundNearest&lt;/code&gt; ，则结果在区间$ [-&amp;pi;，&amp;pi;] $中。通常，这将是最准确的结果。另请参见&lt;a href=&quot;#Base.Rounding.RoundNearest&quot;&gt; &lt;code&gt;RoundNearest&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bdb73362cb6451c057c5a94a2709481224919f0c" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;r == RoundToZero&lt;/code&gt;, then the result is in the interval $[0, 2&amp;pi;]$ if &lt;code&gt;x&lt;/code&gt; is positive,. or $[-2&amp;pi;, 0]$ otherwise. See also &lt;a href=&quot;#Base.Rounding.RoundToZero&quot;&gt;&lt;code&gt;RoundToZero&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;r == RoundToZero&lt;/code&gt; ，则如果 &lt;code&gt;x&lt;/code&gt; 为正，则结果在区间$ [0，2&amp;pi;] $中。否则$ [-2&amp;pi;，0] $。另请参见&lt;a href=&quot;#Base.Rounding.RoundToZero&quot;&gt; &lt;code&gt;RoundToZero&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8a8481c47639fbf87dfd8c1429e9ae7834d28fb" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;r == RoundUp&lt;/code&gt;, then the result is in the interval $[-2&amp;pi;, 0]$. See also &lt;a href=&quot;#Base.Rounding.RoundUp&quot;&gt;&lt;code&gt;RoundUp&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;r == RoundUp&lt;/code&gt; ，则结果在区间$ [-2&amp;pi;，0] $中。另请参见&lt;a href=&quot;#Base.Rounding.RoundUp&quot;&gt; &lt;code&gt;RoundUp&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7afd064a23f8f30562be57f55b9f53a7907b1a60" translate="yes" xml:space="preserve">
          <source>if a new value has a different type than the type of the constant then an error is thrown:</source>
          <target state="translated">如果一个新值的类型与常量的类型不同,那么就会抛出一个错误。</target>
        </trans-unit>
        <trans-unit id="f7de3adec49c33677d8f191e7267724cffa4c8b1" translate="yes" xml:space="preserve">
          <source>if a new value has the same type as the constant then a warning is printed:</source>
          <target state="translated">如果一个新的值与常量的类型相同,那么将打印一个警告。</target>
        </trans-unit>
        <trans-unit id="88762f7edbea2402020056cff22bca364859540b" translate="yes" xml:space="preserve">
          <source>if an assignment would not result in the change of variable value no message is given:</source>
          <target state="translated">如果一个赋值不会导致变量值的改变,则不会给出任何信息。</target>
        </trans-unit>
        <trans-unit id="8f82e658c795671f54a129be1f6a1f57bfe9f927" translate="yes" xml:space="preserve">
          <source>if global &lt;code&gt;x&lt;/code&gt; is &lt;em&gt;defined&lt;/em&gt;, the assignment is considered ambiguous:</source>
          <target state="translated">如果全球 &lt;code&gt;x&lt;/code&gt; 的&lt;em&gt;定义&lt;/em&gt;，分配被认为是不明确的：</target>
        </trans-unit>
        <trans-unit id="56f972cae5b3dea27a82cdb62790201ad37fe1bc" translate="yes" xml:space="preserve">
          <source>if global &lt;code&gt;x&lt;/code&gt; is &lt;em&gt;undefined&lt;/em&gt;, a new local named &lt;code&gt;x&lt;/code&gt; is created in the scope of the assignment;</source>
          <target state="translated">如果&lt;em&gt;未定义&lt;/em&gt;global &lt;code&gt;x&lt;/code&gt; ,则会在分配范围内创建一个名为 &lt;code&gt;x&lt;/code&gt; 的新本地；&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9940935ffb718d63bb83802b8a4df467eb4ca3bc" translate="yes" xml:space="preserve">
          <source>ignorestatus()</source>
          <target state="translated">ignorestatus()</target>
        </trans-unit>
        <trans-unit id="42a0d3068dfe7945d084813fd66eb69745020815" translate="yes" xml:space="preserve">
          <source>im</source>
          <target state="translated">im</target>
        </trans-unit>
        <trans-unit id="18d7b60c3bd12f565b432877db3958c25a4de28a" translate="yes" xml:space="preserve">
          <source>imag()</source>
          <target state="translated">imag()</target>
        </trans-unit>
        <trans-unit id="5fc2dfd50f0d4c9a9ae6bac7ca82df6ff6e617f9" translate="yes" xml:space="preserve">
          <source>implement &lt;a href=&quot;../../stdlib/distributed/index#Distributed.launch&quot;&gt;&lt;code&gt;launch&lt;/code&gt;&lt;/a&gt;, a method responsible for launching new workers</source>
          <target state="translated">实施&lt;a href=&quot;../../stdlib/distributed/index#Distributed.launch&quot;&gt; &lt;code&gt;launch&lt;/code&gt; &lt;/a&gt;，一种负责发射新工人的方法。</target>
        </trans-unit>
        <trans-unit id="6fd13d5b570f05ec7761aef3bed45db80c363741" translate="yes" xml:space="preserve">
          <source>implement &lt;a href=&quot;../../stdlib/distributed/index#Distributed.manage&quot;&gt;&lt;code&gt;manage&lt;/code&gt;&lt;/a&gt;, which is called at various events during a worker's lifetime (for example, sending an interrupt signal)</source>
          <target state="translated">实现&lt;a href=&quot;../../stdlib/distributed/index#Distributed.manage&quot;&gt; &lt;code&gt;manage&lt;/code&gt; &lt;/a&gt;，在工人的生命周期中发生各种事件时调用（例如，发送中断信号）</target>
        </trans-unit>
        <trans-unit id="62fdfbd55d19b2a4671102ad7bca17d875f8207a" translate="yes" xml:space="preserve">
          <source>import</source>
          <target state="translated">import</target>
        </trans-unit>
        <trans-unit id="6d16473b37dc980cdc7bfcbf95f3994315397f39" translate="yes" xml:space="preserve">
          <source>in &lt;em&gt;interactive&lt;/em&gt; contexts (REPL, notebooks), the global variable &lt;code&gt;x&lt;/code&gt; is assigned.</source>
          <target state="translated">在&lt;em&gt;交互式&lt;/em&gt;环境（REPL，笔记本）中，分配了全局变量 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17f07ab2efc1ea4a25386d18a02b701d7914f810" translate="yes" xml:space="preserve">
          <source>in &lt;em&gt;non-interactive&lt;/em&gt; contexts (files, eval), an ambiguity warning is printed and a new local is created;</source>
          <target state="translated">在&lt;em&gt;非交互式&lt;/em&gt;上下文（文件，评估）中，会打印出歧义警告并创建新的本地；</target>
        </trans-unit>
        <trans-unit id="18fd5ec6463d3dae9adc0a4899e74df3aecb6f04" translate="yes" xml:space="preserve">
          <source>in C:</source>
          <target state="translated">在C。</target>
        </trans-unit>
        <trans-unit id="e398199ef23f54649349fe1cc6358ad8e439dcc9" translate="yes" xml:space="preserve">
          <source>in Julia:</source>
          <target state="translated">在朱莉娅。</target>
        </trans-unit>
        <trans-unit id="93de9daa32475742cf31746643dba3e18c8be4d5" translate="yes" xml:space="preserve">
          <source>in()</source>
          <target state="translated">in()</target>
        </trans-unit>
        <trans-unit id="86c2d513f250be3984b3ac5733cf9c5b817cc800" translate="yes" xml:space="preserve">
          <source>include()</source>
          <target state="translated">include()</target>
        </trans-unit>
        <trans-unit id="3fd87494853b6f159587d0ef783ef59b051b972f" translate="yes" xml:space="preserve">
          <source>include_dependency()</source>
          <target state="translated">include_dependency()</target>
        </trans-unit>
        <trans-unit id="94e1cc62b741e68f1fcc296370281ebdd074683e" translate="yes" xml:space="preserve">
          <source>include_string()</source>
          <target state="translated">include_string()</target>
        </trans-unit>
        <trans-unit id="d36c42eba54ad5cea0adb52c1a93e199215f2342" translate="yes" xml:space="preserve">
          <source>indent the current line on the left</source>
          <target state="translated">将当前行缩进左边</target>
        </trans-unit>
        <trans-unit id="62ad198c72a78a481599285e78216d6bc3c92849" translate="yes" xml:space="preserve">
          <source>indent the current line on the right</source>
          <target state="translated">将当前行缩进右边</target>
        </trans-unit>
        <trans-unit id="e8a5df20668d3daa195d9e1bcb43770e449ed22d" translate="yes" xml:space="preserve">
          <source>index an entire dimension (firstindex:lastindex), see &lt;a href=&quot;../arrays/index#Base.Colon&quot;&gt;&lt;code&gt;Colon&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">索引整个维度（firstindex：lastindex），请参见&lt;a href=&quot;../arrays/index#Base.Colon&quot;&gt; &lt;code&gt;Colon&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="19799944790dc729264727dcfeb639cb55117099" translate="yes" xml:space="preserve">
          <source>indexin()</source>
          <target state="translated">indexin()</target>
        </trans-unit>
        <trans-unit id="3deba63de536e5ab24845e4994208abf43b807bd" translate="yes" xml:space="preserve">
          <source>indicates that &lt;code&gt;Tuple&lt;/code&gt; &quot;wins&quot; over zero-dimensional arrays (the output container will be a tuple). It is worth noting that you do not need to (and should not) define both argument orders of this call; defining one is sufficient no matter what order the user supplies the arguments in.</source>
          <target state="translated">表示 &lt;code&gt;Tuple&lt;/code&gt; &amp;ldquo;赢得&amp;rdquo;零维数组（输出容器将是元组）。值得注意的是，您不需要（也不应该）定义此调用的两个参数顺序。无论用户以什么顺序提供参数，定义一个就足够了。</target>
        </trans-unit>
        <trans-unit id="0e4e99d2a2ffc78149943fd8081f29204707c6d4" translate="yes" xml:space="preserve">
          <source>indicates the sign of &lt;code&gt;x&lt;/code&gt;, returning -1, 0, or +1</source>
          <target state="translated">指示 &lt;code&gt;x&lt;/code&gt; 的符号，返回-1、0或+1</target>
        </trans-unit>
        <trans-unit id="93896bbd212e84e5f037bdbd8871dfe3588c53c4" translate="yes" xml:space="preserve">
          <source>indicates whether the sign bit is on (true) or off (false)</source>
          <target state="translated">表示符号位是开启(真)还是关闭(假)。</target>
        </trans-unit>
        <trans-unit id="9d5452c9cd006d18b681cb51924aa99094f3cd90" translate="yes" xml:space="preserve">
          <source>inequality</source>
          <target state="translated">inequality</target>
        </trans-unit>
        <trans-unit id="b4274ecb94b8d2f5e6a338c84f58f03e0c3c08f7" translate="yes" xml:space="preserve">
          <source>inode</source>
          <target state="translated">inode</target>
        </trans-unit>
        <trans-unit id="c355e90bda1dd2c94676e4eb0d0240d488dbc828" translate="yes" xml:space="preserve">
          <source>insert last word from previous history entry</source>
          <target state="translated">遗言</target>
        </trans-unit>
        <trans-unit id="351e696ce4976efcefecff02bb199b3a71049487" translate="yes" xml:space="preserve">
          <source>insert!()</source>
          <target state="translated">insert!()</target>
        </trans-unit>
        <trans-unit id="b4dcaddb0e5c415aad4d89764fea3f2c347e6f7d" translate="yes" xml:space="preserve">
          <source>instances()</source>
          <target state="translated">instances()</target>
        </trans-unit>
        <trans-unit id="a45bde61ef4baf29b47fac6b1077599565436a80" translate="yes" xml:space="preserve">
          <source>instead of only calling &lt;code&gt;schedule&lt;/code&gt;, you will see a five second pause before the next input prompt appears. That is because the REPL is waiting for &lt;code&gt;t&lt;/code&gt; to finish before proceeding.</source>
          <target state="translated">您将看到一个五秒钟的停顿，而不是仅调用 &lt;code&gt;schedule&lt;/code&gt; ，在出现下一个输入提示之前。这是因为REPL在继续之前等待 &lt;code&gt;t&lt;/code&gt; 完成。</target>
        </trans-unit>
        <trans-unit id="6c8457cd65849bf5a9285f8b862e990e1a44ac09" translate="yes" xml:space="preserve">
          <source>instead of:</source>
          <target state="translated">而不是:</target>
        </trans-unit>
        <trans-unit id="9cbc70be6304207ee52f532a9a25e80dacb8778d" translate="yes" xml:space="preserve">
          <source>instead, especially if &lt;code&gt;T&lt;/code&gt; is not used in the function body. Even if &lt;code&gt;T&lt;/code&gt; is used, it can be replaced with &lt;a href=&quot;../../base/base/index#Core.typeof&quot;&gt;&lt;code&gt;typeof(x)&lt;/code&gt;&lt;/a&gt; if convenient. There is no performance difference. Note that this is not a general caution against static parameters, just against uses where they are not needed.</source>
          <target state="translated">相反，尤其是如果在函数体中未使用 &lt;code&gt;T&lt;/code&gt; 的情况下。即使使用了 &lt;code&gt;T&lt;/code&gt; ，如果方便，也可以将其替换为&lt;a href=&quot;../../base/base/index#Core.typeof&quot;&gt; &lt;code&gt;typeof(x)&lt;/code&gt; &lt;/a&gt;。没有性能差异。请注意，这并不是针对静态参数的一般警告，只是针对不需要使用静态参数的情况。</target>
        </trans-unit>
        <trans-unit id="8213fb140eedd02c41d008cfabfdf9c6ed6adaf0" translate="yes" xml:space="preserve">
          <source>instead. Note that with this strategy &lt;a href=&quot;../../base/constants/index#Base.PROGRAM_FILE&quot;&gt;&lt;code&gt;PROGRAM_FILE&lt;/code&gt;&lt;/a&gt; will not be set.</source>
          <target state="translated">反而。请注意，使用此策略将不会设置&lt;a href=&quot;../../base/constants/index#Base.PROGRAM_FILE&quot;&gt; &lt;code&gt;PROGRAM_FILE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b91dfcf14690fcff0e4529139cbb6ebbedfbbcc6" translate="yes" xml:space="preserve">
          <source>integer divide</source>
          <target state="translated">整数除法</target>
        </trans-unit>
        <trans-unit id="c5df753f5e8efd7f7cb76ea61431509a994bce9f" translate="yes" xml:space="preserve">
          <source>interactive prompt (REPL)</source>
          <target state="translated">交互式提示器(REPL)</target>
        </trans-unit>
        <trans-unit id="52414136c101d2f137cb185ba5a213cdd17c7781" translate="yes" xml:space="preserve">
          <source>intersect!()</source>
          <target state="translated">intersect!()</target>
        </trans-unit>
        <trans-unit id="b09f5de5d3937c77d1cb36bd3af0d57e7f26f844" translate="yes" xml:space="preserve">
          <source>intersect()</source>
          <target state="translated">intersect()</target>
        </trans-unit>
        <trans-unit id="f434964e4d59caa7c9655d81a3bf5c19468de0be" translate="yes" xml:space="preserve">
          <source>inv()</source>
          <target state="translated">inv()</target>
        </trans-unit>
        <trans-unit id="9bbe9ff4b40bb17cea073a0f96c874a1a2890b8c" translate="yes" xml:space="preserve">
          <source>inverse divide</source>
          <target state="translated">反分</target>
        </trans-unit>
        <trans-unit id="a0d9db29b1bb3110c18ab0bdd3cc888148a77c42" translate="yes" xml:space="preserve">
          <source>invmod()</source>
          <target state="translated">invmod()</target>
        </trans-unit>
        <trans-unit id="97ffab2e25f85be9c67b5132fd91137d33bd126d" translate="yes" xml:space="preserve">
          <source>invoke macro &lt;code&gt;m&lt;/code&gt;; followed by space-separated expressions</source>
          <target state="translated">调用宏 &lt;code&gt;m&lt;/code&gt; ; 后跟以空格分隔的表达式</target>
        </trans-unit>
        <trans-unit id="a6c79b712a4f6c799f306fbfa31decc99ef23ed6" translate="yes" xml:space="preserve">
          <source>invokelatest()</source>
          <target state="translated">invokelatest()</target>
        </trans-unit>
        <trans-unit id="72d872ce37797fcb87144b52933775994a66a4b7" translate="yes" xml:space="preserve">
          <source>invperm()</source>
          <target state="translated">invperm()</target>
        </trans-unit>
        <trans-unit id="d768ecba33f8f5029c26f45eba430faea4ea5bf4" translate="yes" xml:space="preserve">
          <source>invpermute!()</source>
          <target state="translated">invpermute!()</target>
        </trans-unit>
        <trans-unit id="8e3ef4476f9bb05246885107c9307999f19cfd16" translate="yes" xml:space="preserve">
          <source>is always recursive. For a non recursive macro version, see &lt;a href=&quot;#Base.@macroexpand1&quot;&gt;&lt;code&gt;@macroexpand1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">总是递归的。有关非递归宏版本，请参见&lt;a href=&quot;#Base.@macroexpand1&quot;&gt; &lt;code&gt;@macroexpand1&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1ec285792f84b2006557cfe7a76ef03e4dffbd46" translate="yes" xml:space="preserve">
          <source>is equivalent to</source>
          <target state="translated">相当于</target>
        </trans-unit>
        <trans-unit id="91d0849c8785bafdf89ab5c842bbfd48f9a63332" translate="yes" xml:space="preserve">
          <source>is equivalent to &lt;code&gt;map(x-&amp;gt;2x, 1:10)&lt;/code&gt;.</source>
          <target state="translated">等效于 &lt;code&gt;map(x-&amp;gt;2x, 1:10)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18ab6ac7001b131bc4dc74bd619c612205dff372" translate="yes" xml:space="preserve">
          <source>is equivalent to:</source>
          <target state="translated">相当于:</target>
        </trans-unit>
        <trans-unit id="1e8a6c8487b53a26a521c040d506bfa3fd0090cb" translate="yes" xml:space="preserve">
          <source>is faster than:</source>
          <target state="translated">是快于:</target>
        </trans-unit>
        <trans-unit id="decefe8bc332aded74d097e6dd5eda511a723e0c" translate="yes" xml:space="preserve">
          <source>is preferred over</source>
          <target state="translated">是优于</target>
        </trans-unit>
        <trans-unit id="f47651713bff6579349bba86d266bf44a8131d9c" translate="yes" xml:space="preserve">
          <source>is translated into:</source>
          <target state="translated">被翻译成:</target>
        </trans-unit>
        <trans-unit id="a21ca55d4cd5b0946792553a0bbfd25d20e64ab0" translate="yes" xml:space="preserve">
          <source>isabstracttype()</source>
          <target state="translated">isabstracttype()</target>
        </trans-unit>
        <trans-unit id="d408dab49659e73c8e89061bc4a7ec9daa982ae4" translate="yes" xml:space="preserve">
          <source>isapprox()</source>
          <target state="translated">isapprox()</target>
        </trans-unit>
        <trans-unit id="cfff5b78ef17bdf9b4afa4d1ef70e2006f04dc34" translate="yes" xml:space="preserve">
          <source>isascii()</source>
          <target state="translated">isascii()</target>
        </trans-unit>
        <trans-unit id="e76f92bb851b11001cba03c4efb1df035ae90063" translate="yes" xml:space="preserve">
          <source>isassigned()</source>
          <target state="translated">isassigned()</target>
        </trans-unit>
        <trans-unit id="8af61fb8fe0f99bd972d0850424c30a9aafeb51c" translate="yes" xml:space="preserve">
          <source>isbits()</source>
          <target state="translated">isbits()</target>
        </trans-unit>
        <trans-unit id="0348845c4bdc8914b840cb74a0c429c1209baad2" translate="yes" xml:space="preserve">
          <source>isbitstype()</source>
          <target state="translated">isbitstype()</target>
        </trans-unit>
        <trans-unit id="534cefb7966965eef836fa657fde8a1f50eb9fe4" translate="yes" xml:space="preserve">
          <source>isconcretetype()</source>
          <target state="translated">isconcretetype()</target>
        </trans-unit>
        <trans-unit id="3ed47e9691c0ab29af3c6c6f8d8179cc12a0d45e" translate="yes" xml:space="preserve">
          <source>isconst()</source>
          <target state="translated">isconst()</target>
        </trans-unit>
        <trans-unit id="94a71a7df25cc0133b8278a60bf4f9f641488336" translate="yes" xml:space="preserve">
          <source>isdispatchtuple()</source>
          <target state="translated">isdispatchtuple()</target>
        </trans-unit>
        <trans-unit id="2c5d5085bfd558681ffc039daae1c6727c92ad08" translate="yes" xml:space="preserve">
          <source>isempty()</source>
          <target state="translated">isempty()</target>
        </trans-unit>
        <trans-unit id="93bedd88513933f5389f306938a0322c4a4bfc6b" translate="yes" xml:space="preserve">
          <source>isequal()</source>
          <target state="translated">isequal()</target>
        </trans-unit>
        <trans-unit id="c16415f072ad82761ff09d4256b1e709ef3b6f95" translate="yes" xml:space="preserve">
          <source>iseven()</source>
          <target state="translated">iseven()</target>
        </trans-unit>
        <trans-unit id="e8378352b6188aa946bffc68303a51a65a173fce" translate="yes" xml:space="preserve">
          <source>isfinite()</source>
          <target state="translated">isfinite()</target>
        </trans-unit>
        <trans-unit id="4283975ac5715a6c530d99154a628959b2f12a04" translate="yes" xml:space="preserve">
          <source>isimmutable()</source>
          <target state="translated">isimmutable()</target>
        </trans-unit>
        <trans-unit id="27064c90e2af21aa0235d85cbebb5867cb35aa87" translate="yes" xml:space="preserve">
          <source>isinf()</source>
          <target state="translated">isinf()</target>
        </trans-unit>
        <trans-unit id="bdd59641b3fb0f9e79d5570c21e7a57841b8dd12" translate="yes" xml:space="preserve">
          <source>isinteger()</source>
          <target state="translated">isinteger()</target>
        </trans-unit>
        <trans-unit id="089f1826d4c030ccfca8106be374396cadaa427f" translate="yes" xml:space="preserve">
          <source>isinteractive()</source>
          <target state="translated">isinteractive()</target>
        </trans-unit>
        <trans-unit id="315a5544807f12325a96550904a6020e1d49fc8a" translate="yes" xml:space="preserve">
          <source>isless()</source>
          <target state="translated">isless()</target>
        </trans-unit>
        <trans-unit id="5e4ab0ff4aec4addd6f9b7e54c3a9bc8ce6bde6f" translate="yes" xml:space="preserve">
          <source>islocked()</source>
          <target state="translated">islocked()</target>
        </trans-unit>
        <trans-unit id="3e3e432372bf9e3cc249fbcae9caae5859723c3e" translate="yes" xml:space="preserve">
          <source>ismarked()</source>
          <target state="translated">ismarked()</target>
        </trans-unit>
        <trans-unit id="a0dbfb008000c85f1ad38dab021b4db5573fea14" translate="yes" xml:space="preserve">
          <source>ismissing()</source>
          <target state="translated">ismissing()</target>
        </trans-unit>
        <trans-unit id="113c9022412b01a493a9113ebbed7ce2103fef30" translate="yes" xml:space="preserve">
          <source>isnan()</source>
          <target state="translated">isnan()</target>
        </trans-unit>
        <trans-unit id="ec5ecbb952a6a961376fcffdf6063828cfa1f693" translate="yes" xml:space="preserve">
          <source>isnothing()</source>
          <target state="translated">isnothing()</target>
        </trans-unit>
        <trans-unit id="29e96ef514fa623dab75efcc116f2cdd9fdc56c0" translate="yes" xml:space="preserve">
          <source>isodd()</source>
          <target state="translated">isodd()</target>
        </trans-unit>
        <trans-unit id="2d008e2a213d8e1fc9a4d60bfe333fcb8401f8d7" translate="yes" xml:space="preserve">
          <source>isone()</source>
          <target state="translated">isone()</target>
        </trans-unit>
        <trans-unit id="4d3556fe373fbb166c7625f852f8b3f524ddb6cb" translate="yes" xml:space="preserve">
          <source>isopen()</source>
          <target state="translated">isopen()</target>
        </trans-unit>
        <trans-unit id="635c97b26a0f7ba27432899e7b1b584807bebff5" translate="yes" xml:space="preserve">
          <source>isperm()</source>
          <target state="translated">isperm()</target>
        </trans-unit>
        <trans-unit id="e0ecd57ad991da02458411f70f0517a07ca943c3" translate="yes" xml:space="preserve">
          <source>ispow2()</source>
          <target state="translated">ispow2()</target>
        </trans-unit>
        <trans-unit id="4a28fcbcc01cece3e734655608ee5f2a2c7fde45" translate="yes" xml:space="preserve">
          <source>isprimitivetype()</source>
          <target state="translated">isprimitivetype()</target>
        </trans-unit>
        <trans-unit id="dcfffe7f3e18f7e83986f64eabd805cdbd20ea26" translate="yes" xml:space="preserve">
          <source>isqrt()</source>
          <target state="translated">isqrt()</target>
        </trans-unit>
        <trans-unit id="205c6de6c1039eb31d6e4fb7cf27d8b22f385f4d" translate="yes" xml:space="preserve">
          <source>isreadable()</source>
          <target state="translated">isreadable()</target>
        </trans-unit>
        <trans-unit id="51eb386f3cb466029d603031648f335ab367c701" translate="yes" xml:space="preserve">
          <source>isreadonly()</source>
          <target state="translated">isreadonly()</target>
        </trans-unit>
        <trans-unit id="863283caf11449a2ed4abed5d4ec6c2f2db16deb" translate="yes" xml:space="preserve">
          <source>isready()</source>
          <target state="translated">isready()</target>
        </trans-unit>
        <trans-unit id="f2a2b41b9a025956e41afcbfaa4aec61ff60af30" translate="yes" xml:space="preserve">
          <source>isreal()</source>
          <target state="translated">isreal()</target>
        </trans-unit>
        <trans-unit id="15fcfffe668a2fd204f1f3c025d49f564113295e" translate="yes" xml:space="preserve">
          <source>issetequal()</source>
          <target state="translated">issetequal()</target>
        </trans-unit>
        <trans-unit id="c27465698e202ae7e5693541a8d80fd3163bd8a7" translate="yes" xml:space="preserve">
          <source>issorted()</source>
          <target state="translated">issorted()</target>
        </trans-unit>
        <trans-unit id="45db74e9bd37470a766f45a1dc0ef1c3b02420aa" translate="yes" xml:space="preserve">
          <source>isstructtype()</source>
          <target state="translated">isstructtype()</target>
        </trans-unit>
        <trans-unit id="d5c2f313a0b82e6d052f06709c51b9498b6ce1dd" translate="yes" xml:space="preserve">
          <source>issubnormal()</source>
          <target state="translated">issubnormal()</target>
        </trans-unit>
        <trans-unit id="ac912cf78b8dfa941f4c73e01319efdd9ffc6966" translate="yes" xml:space="preserve">
          <source>issubset()</source>
          <target state="translated">issubset()</target>
        </trans-unit>
        <trans-unit id="3e4607f6cf991b667fb50038bb1d504b794a9334" translate="yes" xml:space="preserve">
          <source>istaskdone()</source>
          <target state="translated">istaskdone()</target>
        </trans-unit>
        <trans-unit id="47b0a7ba1c138e64e365976cb551171671f81499" translate="yes" xml:space="preserve">
          <source>istaskstarted()</source>
          <target state="translated">istaskstarted()</target>
        </trans-unit>
        <trans-unit id="87c21169297a84470c8db63f8cbd64abf241e6b4" translate="yes" xml:space="preserve">
          <source>isvalid()</source>
          <target state="translated">isvalid()</target>
        </trans-unit>
        <trans-unit id="3701a19886cd59d1e84bb839a73c74225e0197bf" translate="yes" xml:space="preserve">
          <source>iswritable()</source>
          <target state="translated">iswritable()</target>
        </trans-unit>
        <trans-unit id="9923835a9b9509766b0b898edfc8adaed6bfb33b" translate="yes" xml:space="preserve">
          <source>iszero()</source>
          <target state="translated">iszero()</target>
        </trans-unit>
        <trans-unit id="afdecb15069e19ca329c5a2393411dafe7319f0e" translate="yes" xml:space="preserve">
          <source>it's better to use available generic functions:</source>
          <target state="translated">最好使用现有的通用函数。</target>
        </trans-unit>
        <trans-unit id="cd31a0680b70291b71cfbef007b7361e449e40a1" translate="yes" xml:space="preserve">
          <source>iterate()</source>
          <target state="translated">iterate()</target>
        </trans-unit>
        <trans-unit id="4c6aa8df8108df84b6910dc386655e9d513ea923" translate="yes" xml:space="preserve">
          <source>join()</source>
          <target state="translated">join()</target>
        </trans-unit>
        <trans-unit id="22ab78a626dbe93471802dadfc4aa10617208722" translate="yes" xml:space="preserve">
          <source>julia&amp;gt; isless(&quot;Red&quot;, &quot;Blue&quot;) false ```</source>
          <target state="translated">朱莉娅&amp;gt; isless（&amp;ldquo; Red&amp;rdquo;，&amp;ldquo; Blue&amp;rdquo;）false```</target>
        </trans-unit>
        <trans-unit id="fdc70847f217cc60e2011164ef83d568e60ef426" translate="yes" xml:space="preserve">
          <source>julia&amp;gt; map!(v -&amp;gt; v-1, values(d)) Dict{Symbol,Int64} with 2 entries: :a =&amp;gt; 0 :b =&amp;gt; 1 ```</source>
          <target state="translated">julia&amp;gt; map！（v-&amp;gt; v-1，values（d））Dict {Symbol，Int64}有2个条目：：a =&amp;gt; 0：b =&amp;gt; 1`''</target>
        </trans-unit>
        <trans-unit id="44844b8aa9d746a5d4c101a588644394115d190f" translate="yes" xml:space="preserve">
          <source>kate</source>
          <target state="translated">kate</target>
        </trans-unit>
        <trans-unit id="02c5870c446f2d6370d3611295dcf86df5b32cea" translate="yes" xml:space="preserve">
          <source>keys()</source>
          <target state="translated">keys()</target>
        </trans-unit>
        <trans-unit id="aa74f3c1b4d5fad40d84f5dcc6506422af0811cd" translate="yes" xml:space="preserve">
          <source>keytype()</source>
          <target state="translated">keytype()</target>
        </trans-unit>
        <trans-unit id="e29f2c163499322b409b7d20f5c249c3d72179ce" translate="yes" xml:space="preserve">
          <source>kill()</source>
          <target state="translated">kill()</target>
        </trans-unit>
        <trans-unit id="9dfcf9d7aa8c7d1ea2bac384b5d269ad6b3a5daf" translate="yes" xml:space="preserve">
          <source>kron()</source>
          <target state="translated">kron()</target>
        </trans-unit>
        <trans-unit id="c4be3ef52092871f14807595b498a34fb1b63134" translate="yes" xml:space="preserve">
          <source>last()</source>
          <target state="translated">last()</target>
        </trans-unit>
        <trans-unit id="cd38db9d4157fa3aa934f9e7504d2863b95fd251" translate="yes" xml:space="preserve">
          <source>lastindex()</source>
          <target state="translated">lastindex()</target>
        </trans-unit>
        <trans-unit id="cf18cebb077dc7117de2a2f47ead57b5aba0012d" translate="yes" xml:space="preserve">
          <source>launching worker processes in a cluster environment</source>
          <target state="translated">在集群环境中启动工作进程</target>
        </trans-unit>
        <trans-unit id="c79f3bac0cbca7ca5639e6cc7ebd3fb412b3a359" translate="yes" xml:space="preserve">
          <source>lcm()</source>
          <target state="translated">lcm()</target>
        </trans-unit>
        <trans-unit id="bef50cf38facec9180350a415035852e578b5acf" translate="yes" xml:space="preserve">
          <source>leading_ones()</source>
          <target state="translated">leading_ones()</target>
        </trans-unit>
        <trans-unit id="a2f8926e3877aa7cad236c11ccd3ab9f3c051bec" translate="yes" xml:space="preserve">
          <source>leading_zeros()</source>
          <target state="translated">leading_zeros()</target>
        </trans-unit>
        <trans-unit id="b6660dd8548d808deb0f4b77f72e0f4b27fc95b3" translate="yes" xml:space="preserve">
          <source>least positive common multiple of &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;,...</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;y&lt;/code&gt; ，...的最小正公倍数</target>
        </trans-unit>
        <trans-unit id="12126f713e2c6e2b378ad7286a6bc4fa4da0d2f3" translate="yes" xml:space="preserve">
          <source>length()</source>
          <target state="translated">length()</target>
        </trans-unit>
        <trans-unit id="6bb2aa987a1cdc7525f5672334ed54a5cee446c5" translate="yes" xml:space="preserve">
          <source>less than</source>
          <target state="translated">少于</target>
        </trans-unit>
        <trans-unit id="1b709205d85df56c7a244034c07e09a1af509871" translate="yes" xml:space="preserve">
          <source>less than or equal to</source>
          <target state="translated">小于或等于</target>
        </trans-unit>
        <trans-unit id="0262f9bb6ecbef4efbae97193c08ec335698a205" translate="yes" xml:space="preserve">
          <source>let</source>
          <target state="translated">let</target>
        </trans-unit>
        <trans-unit id="939bb46a04c3640c8c427e92b1b557e882e2d2a0" translate="yes" xml:space="preserve">
          <source>local</source>
          <target state="translated">local</target>
        </trans-unit>
        <trans-unit id="b912a5ed267f3302c5d0f1c051dfe431011e50ac" translate="yes" xml:space="preserve">
          <source>local (hard)</source>
          <target state="translated">本地</target>
        </trans-unit>
        <trans-unit id="ea61cc5dd0c686bca75868825ef2ca4aaf03dd70" translate="yes" xml:space="preserve">
          <source>local (soft)</source>
          <target state="translated">局部</target>
        </trans-unit>
        <trans-unit id="07cbe20abd79dd94f906c947f5fe4d9c18a7507a" translate="yes" xml:space="preserve">
          <source>lock()</source>
          <target state="translated">lock()</target>
        </trans-unit>
        <trans-unit id="c8b2576f2263d9aa15be0b307c058770b8769ab3" translate="yes" xml:space="preserve">
          <source>log()</source>
          <target state="translated">log()</target>
        </trans-unit>
        <trans-unit id="80a5327ef8ad775cd52a33fd54f5ffb19a33e6d6" translate="yes" xml:space="preserve">
          <source>log10()</source>
          <target state="translated">log10()</target>
        </trans-unit>
        <trans-unit id="843b4682fb9c778121c7d40114b882ae4137237d" translate="yes" xml:space="preserve">
          <source>log1p()</source>
          <target state="translated">log1p()</target>
        </trans-unit>
        <trans-unit id="76b275965a2528fccc2c2dafd2d1328999b5e4fa" translate="yes" xml:space="preserve">
          <source>log2()</source>
          <target state="translated">log2()</target>
        </trans-unit>
        <trans-unit id="8900a76173f2f47cd794f4fdcf7618260a4125e5" translate="yes" xml:space="preserve">
          <source>logical/arithmetic shift left</source>
          <target state="translated">逻辑/算术左移</target>
        </trans-unit>
        <trans-unit id="0328000785d6fe4489370eaf65c2e64ceb1f770a" translate="yes" xml:space="preserve">
          <source>lpad()</source>
          <target state="translated">lpad()</target>
        </trans-unit>
        <trans-unit id="806fcb9360cf1ef5bb43feba968d972bfc6f6b5d" translate="yes" xml:space="preserve">
          <source>lstrip()</source>
          <target state="translated">lstrip()</target>
        </trans-unit>
        <trans-unit id="186d9e65bbfc72eca4af24b48109f537fec743d4" translate="yes" xml:space="preserve">
          <source>ltoh()</source>
          <target state="translated">ltoh()</target>
        </trans-unit>
        <trans-unit id="78f3a3d9d6e4d907a7d12e475d0a751d6b7e256b" translate="yes" xml:space="preserve">
          <source>macro</source>
          <target state="translated">macro</target>
        </trans-unit>
        <trans-unit id="13e9b1c5b7b970ee2252c894c7c769fbb82fad7d" translate="yes" xml:space="preserve">
          <source>macroexpand()</source>
          <target state="translated">macroexpand()</target>
        </trans-unit>
        <trans-unit id="f4cf532d456961a72c8bf8449cdf50cad4bd6666" translate="yes" xml:space="preserve">
          <source>managing events during the lifetime of each worker</source>
          <target state="translated">在每个工人的一生中管理事件</target>
        </trans-unit>
        <trans-unit id="53a103abfaed1cd6d91403e44014eab1440ab841" translate="yes" xml:space="preserve">
          <source>map!()</source>
          <target state="translated">map!()</target>
        </trans-unit>
        <trans-unit id="63931ac28a1466150a780334eb33725ff190c35f" translate="yes" xml:space="preserve">
          <source>map()</source>
          <target state="translated">map()</target>
        </trans-unit>
        <trans-unit id="daf75449ecf0fe651ab2c3a28e2512094598ef31" translate="yes" xml:space="preserve">
          <source>mapfoldl()</source>
          <target state="translated">mapfoldl()</target>
        </trans-unit>
        <trans-unit id="bffaa5ddb02f5167267fc14148cfc1b9fc1061e8" translate="yes" xml:space="preserve">
          <source>mapfoldr()</source>
          <target state="translated">mapfoldr()</target>
        </trans-unit>
        <trans-unit id="e76f57b3354ccfe22d876f38522d98c4d4e09238" translate="yes" xml:space="preserve">
          <source>mapreduce()</source>
          <target state="translated">mapreduce()</target>
        </trans-unit>
        <trans-unit id="0aef9f89b53168b6b8ec2cdf3f415721d7d16d19" translate="yes" xml:space="preserve">
          <source>maps values to their additive inverses</source>
          <target state="translated">将数值映射到它们的加法反向</target>
        </trans-unit>
        <trans-unit id="90bbf84bd7d5574a3d6fe732dd93e4f56e3fb4f7" translate="yes" xml:space="preserve">
          <source>mapslices()</source>
          <target state="translated">mapslices()</target>
        </trans-unit>
        <trans-unit id="d5062a8f61ec3d7c77176457469a6c52e0e84da3" translate="yes" xml:space="preserve">
          <source>mark()</source>
          <target state="translated">mark()</target>
        </trans-unit>
        <trans-unit id="f743d4858548a263762a36939a95c6da7ebf0d4d" translate="yes" xml:space="preserve">
          <source>match()</source>
          <target state="translated">match()</target>
        </trans-unit>
        <trans-unit id="e1a465e4d3e649d94aafd48152f08885a10bb6cd" translate="yes" xml:space="preserve">
          <source>mate</source>
          <target state="translated">mate</target>
        </trans-unit>
        <trans-unit id="62713d5dc9285d37232038fc367992f3b960c971" translate="yes" xml:space="preserve">
          <source>max()</source>
          <target state="translated">max()</target>
        </trans-unit>
        <trans-unit id="ffab9f97283c9b3f1570bfeaa83a53f0ab387897" translate="yes" xml:space="preserve">
          <source>maximum!()</source>
          <target state="translated">maximum!()</target>
        </trans-unit>
        <trans-unit id="d87b2db8f1c72b31e0e35968f400ca65c325d2b9" translate="yes" xml:space="preserve">
          <source>maximum()</source>
          <target state="translated">maximum()</target>
        </trans-unit>
        <trans-unit id="1acb5644ab2b47c8a265c19319aa4db844ca3af2" translate="yes" xml:space="preserve">
          <source>maxintfloat()</source>
          <target state="translated">maxintfloat()</target>
        </trans-unit>
        <trans-unit id="2a9079f50339e361c20112f0f11ece3d5b257564" translate="yes" xml:space="preserve">
          <source>meaning</source>
          <target state="translated">meaning</target>
        </trans-unit>
        <trans-unit id="f3949dfdf58ed2665da180d4447254541394e21c" translate="yes" xml:space="preserve">
          <source>merge!()</source>
          <target state="translated">merge!()</target>
        </trans-unit>
        <trans-unit id="e1bf946a063ef8e959e3af0f7f6cf197dd1ee98a" translate="yes" xml:space="preserve">
          <source>merge()</source>
          <target state="translated">merge()</target>
        </trans-unit>
        <trans-unit id="550d23149d500bcfb91496de575e88d34d56c63c" translate="yes" xml:space="preserve">
          <source>meta-Backspace</source>
          <target state="translated">meta-Backspace</target>
        </trans-unit>
        <trans-unit id="0292580f8385f7fe90d96f62bbcd980fc742dfff" translate="yes" xml:space="preserve">
          <source>meta-Return/Enter</source>
          <target state="translated">meta-Return/Enter</target>
        </trans-unit>
        <trans-unit id="f544333660b6aacbdcc3383411901c4443028c13" translate="yes" xml:space="preserve">
          <source>methods()</source>
          <target state="translated">methods()</target>
        </trans-unit>
        <trans-unit id="8963ffc3b407d548a6af0609f5c355469208f5e9" translate="yes" xml:space="preserve">
          <source>min()</source>
          <target state="translated">min()</target>
        </trans-unit>
        <trans-unit id="d24c881866381b886a6f9c76318562ed906bded9" translate="yes" xml:space="preserve">
          <source>minimum!()</source>
          <target state="translated">minimum!()</target>
        </trans-unit>
        <trans-unit id="5a7f22b83546aa0f637be70cc35eb71ff2476f97" translate="yes" xml:space="preserve">
          <source>minimum()</source>
          <target state="translated">minimum()</target>
        </trans-unit>
        <trans-unit id="0489eaf8d55ef7cb104492c439bc9bb07444b010" translate="yes" xml:space="preserve">
          <source>minmax()</source>
          <target state="translated">minmax()</target>
        </trans-unit>
        <trans-unit id="5a013c49508291c6816ac388f93a2c11973086ed" translate="yes" xml:space="preserve">
          <source>missing</source>
          <target state="translated">missing</target>
        </trans-unit>
        <trans-unit id="0356e3972a102cd76d6bdce38b1884d14d186f19" translate="yes" xml:space="preserve">
          <source>mod()</source>
          <target state="translated">mod()</target>
        </trans-unit>
        <trans-unit id="5ea73e6446f87bda3904b72ffaea29729ffcacd8" translate="yes" xml:space="preserve">
          <source>mod1()</source>
          <target state="translated">mod1()</target>
        </trans-unit>
        <trans-unit id="e78fe7049341b36116d8054f5a3e00d01f245fcc" translate="yes" xml:space="preserve">
          <source>mode</source>
          <target state="translated">mode</target>
        </trans-unit>
        <trans-unit id="fbd34a2b6e6a9fe8161f97dc435642609ac0bc29" translate="yes" xml:space="preserve">
          <source>module</source>
          <target state="translated">module</target>
        </trans-unit>
        <trans-unit id="db6cdd6f454a785628d818188a1d62321670b2b1" translate="yes" xml:space="preserve">
          <source>moduleroot()</source>
          <target state="translated">moduleroot()</target>
        </trans-unit>
        <trans-unit id="f61f5b30ce504b6c72bb4c0e26a4922108eee8dd" translate="yes" xml:space="preserve">
          <source>modules and type names use capitalization and camel case: &lt;code&gt;module SparseArrays&lt;/code&gt;, &lt;code&gt;struct UnitRange&lt;/code&gt;.</source>
          <target state="translated">模块和类型名称使用大小写和驼峰式大小写： &lt;code&gt;module SparseArrays&lt;/code&gt; ， &lt;code&gt;struct UnitRange&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b9ef906e8e35ba0a7ce83fc33ec05c1775274e9" translate="yes" xml:space="preserve">
          <source>modulus with respect to 2pi; &lt;code&gt;0 &amp;lt;= mod2pi(x) &amp;nbsp;  &amp;lt; 2pi&lt;/code&gt;</source>
          <target state="translated">相对于2pi的模量; &lt;code&gt;0 &amp;lt;= mod2pi(x) &amp;nbsp; &amp;lt; 2pi&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7e25d5937ceac03b7c9e87ba632d9f160b3ae7a" translate="yes" xml:space="preserve">
          <source>modulus; satisfies &lt;code&gt;x == fld(x,y)*y + mod(x,y)&lt;/code&gt;; sign matches &lt;code&gt;y&lt;/code&gt;</source>
          <target state="translated">模量 满足 &lt;code&gt;x == fld(x,y)*y + mod(x,y)&lt;/code&gt; ; 符号匹配 &lt;code&gt;y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="89ff7fee00baf247735f2e0ae120cb65e442bcf3" translate="yes" xml:space="preserve">
          <source>mtime</source>
          <target state="translated">mtime</target>
        </trans-unit>
        <trans-unit id="0eb800bebcce6aec924cb11f14dee09fbddc0b57" translate="yes" xml:space="preserve">
          <source>muladd()</source>
          <target state="translated">muladd()</target>
        </trans-unit>
        <trans-unit id="9e7f5b4d865572dced7fc25e62d6b0b52c719d6a" translate="yes" xml:space="preserve">
          <source>multiply, or matrix multiply</source>
          <target state="translated">乘法</target>
        </trans-unit>
        <trans-unit id="bd8a6ec95bdad4f576d47bc433dce964de22b03a" translate="yes" xml:space="preserve">
          <source>mutable struct</source>
          <target state="translated">可变结构</target>
        </trans-unit>
        <trans-unit id="5fa41ae2ee98d9b5f730168c15be8128479a1422" translate="yes" xml:space="preserve">
          <source>nameof()</source>
          <target state="translated">nameof()</target>
        </trans-unit>
        <trans-unit id="3ca6601f37e8c2e6f5cfce135f92e781cb900408" translate="yes" xml:space="preserve">
          <source>names()</source>
          <target state="translated">names()</target>
        </trans-unit>
        <trans-unit id="e6efbd8aed7a6a63e6ec49365245a32bdc913b43" translate="yes" xml:space="preserve">
          <source>nano</source>
          <target state="translated">nano</target>
        </trans-unit>
        <trans-unit id="6372e8dda3575fe49b8eb9f0027b69a1da59bcd0" translate="yes" xml:space="preserve">
          <source>natural exponential function at &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 处的自然指数函数</target>
        </trans-unit>
        <trans-unit id="654c4e3a260fd66f131b3b3a39e2990ee78941ac" translate="yes" xml:space="preserve">
          <source>natural logarithm of &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 的自然对数</target>
        </trans-unit>
        <trans-unit id="448642a7d9eb405a15042b989a448d2baca2a2c5" translate="yes" xml:space="preserve">
          <source>ncodeunits()</source>
          <target state="translated">ncodeunits()</target>
        </trans-unit>
        <trans-unit id="6e455c83dc06bc6ee6ea6e3696a84376b82eaaed" translate="yes" xml:space="preserve">
          <source>ndigits()</source>
          <target state="translated">ndigits()</target>
        </trans-unit>
        <trans-unit id="6b78d93a933913ac7cbfdc7bad56d4a3da78b4b4" translate="yes" xml:space="preserve">
          <source>ndims()</source>
          <target state="translated">ndims()</target>
        </trans-unit>
        <trans-unit id="faf504d6fc8ff2da7d7e8957dc744fbb1d027ee5" translate="yes" xml:space="preserve">
          <source>negation</source>
          <target state="translated">negation</target>
        </trans-unit>
        <trans-unit id="09d0ecb5a32f556cb2687e32649b5a410375e004" translate="yes" xml:space="preserve">
          <source>negative infinity</source>
          <target state="translated">负无穷</target>
        </trans-unit>
        <trans-unit id="c2a6b03f190dfb2b4aa91f8af8d477a9bc3401dc" translate="yes" xml:space="preserve">
          <source>new</source>
          <target state="translated">new</target>
        </trans-unit>
        <trans-unit id="92f259e73385a432b299569dc893a85ede582035" translate="yes" xml:space="preserve">
          <source>nextfloat()</source>
          <target state="translated">nextfloat()</target>
        </trans-unit>
        <trans-unit id="414e7553693f156ca5d466462775b28c4285dff2" translate="yes" xml:space="preserve">
          <source>nextind()</source>
          <target state="translated">nextind()</target>
        </trans-unit>
        <trans-unit id="afe9cd38f5862a919c017c906e8beff2301a7694" translate="yes" xml:space="preserve">
          <source>nextpow()</source>
          <target state="translated">nextpow()</target>
        </trans-unit>
        <trans-unit id="9c357118524e7f275f00205792e7d7ab7efa8d6f" translate="yes" xml:space="preserve">
          <source>nextprod()</source>
          <target state="translated">nextprod()</target>
        </trans-unit>
        <trans-unit id="ccb7fec536262ca24471def4c6864e058e14a28d" translate="yes" xml:space="preserve">
          <source>nlink</source>
          <target state="translated">nlink</target>
        </trans-unit>
        <trans-unit id="71f8e7976e4cbc4561c9d62fb283e7f788202acb" translate="yes" xml:space="preserve">
          <source>none</source>
          <target state="translated">none</target>
        </trans-unit>
        <trans-unit id="8e1c89e8284b8685fc1e4e787abc53dcd8642cc3" translate="yes" xml:space="preserve">
          <source>not a number</source>
          <target state="translated">不是数字</target>
        </trans-unit>
        <trans-unit id="97579126bd5a724776933de121d4e5b352424b2a" translate="yes" xml:space="preserve">
          <source>not supported by &lt;code&gt;ccall&lt;/code&gt; or &lt;code&gt;@cfunction&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ccall&lt;/code&gt; 或 &lt;code&gt;@cfunction&lt;/code&gt; 不支持</target>
        </trans-unit>
        <trans-unit id="c8e6d961c02fc20ebe83d78adc14d1e258b4db7d" translate="yes" xml:space="preserve">
          <source>notepad++</source>
          <target state="translated">notepad++</target>
        </trans-unit>
        <trans-unit id="b7908f4de94f9c5f30f62bdcd4f9719eaa937d65" translate="yes" xml:space="preserve">
          <source>notify()</source>
          <target state="translated">notify()</target>
        </trans-unit>
        <trans-unit id="44c31e3c011e8526ec43ca804b369e2cda441484" translate="yes" xml:space="preserve">
          <source>ntoh()</source>
          <target state="translated">ntoh()</target>
        </trans-unit>
        <trans-unit id="132276fcccc9845c3aba8dfcc6c0ac9c92560b76" translate="yes" xml:space="preserve">
          <source>ntuple()</source>
          <target state="translated">ntuple()</target>
        </trans-unit>
        <trans-unit id="a227fcd06aedc1ccaaa7e85fb3fb2ebba151421c" translate="yes" xml:space="preserve">
          <source>numerator()</source>
          <target state="translated">numerator()</target>
        </trans-unit>
        <trans-unit id="e3c99d2756cc0a96a44627458102434ec04318f5" translate="yes" xml:space="preserve">
          <source>nvim</source>
          <target state="translated">nvim</target>
        </trans-unit>
        <trans-unit id="9f6db2c6f6fa2ddf2a6607f2a9f44d5052f6ab53" translate="yes" xml:space="preserve">
          <source>objectid()</source>
          <target state="translated">objectid()</target>
        </trans-unit>
        <trans-unit id="78b731635485757bb2495f8b9b7c56dc9f81d311" translate="yes" xml:space="preserve">
          <source>occursin()</source>
          <target state="translated">occursin()</target>
        </trans-unit>
        <trans-unit id="daa250b81cc072637dd2e2a51751a7eedb08177e" translate="yes" xml:space="preserve">
          <source>oftype()</source>
          <target state="translated">oftype()</target>
        </trans-unit>
        <trans-unit id="4a469190f6c67092a06872b0ce49a09977f168a8" translate="yes" xml:space="preserve">
          <source>one declares that when 64-bit and 32-bit floating-point values are promoted together, they should be promoted to 64-bit floating-point. The promotion type does not need to be one of the argument types, however; the following promotion rules both occur in Julia Base:</source>
          <target state="translated">one声明,当64位和32位浮点值一起晋升时,它们应该被晋升为64位浮点值。但是,推广类型不需要是参数类型之一,下面的推广规则都出现在Julia Base中。</target>
        </trans-unit>
        <trans-unit id="206979dd3bb0649ee70955b9f5a1e43d6c397ce8" translate="yes" xml:space="preserve">
          <source>one declares that when 64-bit and 32-bit floating-point values are promoted together, they should be promoted to 64-bit floating-point. The promotion type does not need to be one of the argument types. For example, the following promotion rules both occur in Julia Base:</source>
          <target state="translated">one声明,当64位和32位浮点值一起推广时,它们应该被推广为64位浮点。晋升类型不需要是参数类型之一。例如,在Julia Base中出现了以下两种推广规则。</target>
        </trans-unit>
        <trans-unit id="ba8058b6305cbba5eca60db40d7aff691d114d3e" translate="yes" xml:space="preserve">
          <source>one that uses &lt;a href=&quot;../../stdlib/distributed/index#Distributed.@distributed&quot;&gt;&lt;code&gt;@distributed&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">使用&lt;a href=&quot;../../stdlib/distributed/index#Distributed.@distributed&quot;&gt; &lt;code&gt;@distributed&lt;/code&gt; 的一种&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="bc90a91c8bb3726dd38a85d14594388b7cc3d588" translate="yes" xml:space="preserve">
          <source>one()</source>
          <target state="translated">one()</target>
        </trans-unit>
        <trans-unit id="5eff9bba35c97ab99e602a861c183ff0244b1648" translate="yes" xml:space="preserve">
          <source>ones()</source>
          <target state="translated">ones()</target>
        </trans-unit>
        <trans-unit id="210a1863b83173e26807646851f50d8cddc7134d" translate="yes" xml:space="preserve">
          <source>oneunit()</source>
          <target state="translated">oneunit()</target>
        </trans-unit>
        <trans-unit id="5fc7e38bffe00ca46add89145464a2eaf759d5c2" translate="yes" xml:space="preserve">
          <source>open</source>
          <target state="translated">open</target>
        </trans-unit>
        <trans-unit id="f533b961b2385751ae142b484ba3f9c579dd6891" translate="yes" xml:space="preserve">
          <source>open for reading</source>
          <target state="translated">开放阅读</target>
        </trans-unit>
        <trans-unit id="3b3e0b96dcf0ed835f9a277b12d5f353d6dc2019" translate="yes" xml:space="preserve">
          <source>open for writing</source>
          <target state="translated">待写</target>
        </trans-unit>
        <trans-unit id="e992062244e810656d62642f92d74743a0c9d66f" translate="yes" xml:space="preserve">
          <source>open()</source>
          <target state="translated">open()</target>
        </trans-unit>
        <trans-unit id="24e7f70c58621f0bc783f8a13a4b6378cd14e303" translate="yes" xml:space="preserve">
          <source>optionally, providing data transport</source>
          <target state="translated">可选地,提供数据传输</target>
        </trans-unit>
        <trans-unit id="30e2315cb9fd34f504cd220e7f15842326b4e716" translate="yes" xml:space="preserve">
          <source>or &lt;a href=&quot;../../base/io-network/index#Base.read&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; if you wanted to read by character instead:</source>
          <target state="translated">或&lt;a href=&quot;../../base/io-network/index#Base.read&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;如果您想按字符阅读：</target>
        </trans-unit>
        <trans-unit id="78516bdcf04efc52cd4ced9299020934e7f4f853" translate="yes" xml:space="preserve">
          <source>or if we had wanted to read the entire line instead:</source>
          <target state="translated">或者说,如果我们想改读整行。</target>
        </trans-unit>
        <trans-unit id="40c1dbaaabf8497837cff2978bf388c35b904dfa" translate="yes" xml:space="preserve">
          <source>or, when the file cannot be read into a variable:</source>
          <target state="translated">或者,当文件不能被读入变量时。</target>
        </trans-unit>
        <trans-unit id="b47eaee940e5e07699732234b08752e01a0c3cdf" translate="yes" xml:space="preserve">
          <source>other documented &lt;code&gt;rand&lt;/code&gt; methods accepting an &lt;code&gt;AbstractRNG&lt;/code&gt; should work out of the box, (provided the methods from 1) what are relied on are implemented), but can of course be specialized for this RNG if there is room for optimization.</source>
          <target state="translated">接受 &lt;code&gt;AbstractRNG&lt;/code&gt; 的其他已记录的 &lt;code&gt;rand&lt;/code&gt; 方法应该开箱即用（（从1开始提供的方法）实现了所依赖的方法），但是如果有优化的余地，当然可以专门针对该RNG。</target>
        </trans-unit>
        <trans-unit id="4943aadeb972fc1483467d58609bdf21efd30a32" translate="yes" xml:space="preserve">
          <source>other documented &lt;code&gt;rand&lt;/code&gt; methods accepting an &lt;code&gt;AbstractRNG&lt;/code&gt; should work out of the box, (provided the methods from 1) what are relied on are implemented), but can of course be specialized for this RNG if there is room for optimization;</source>
          <target state="translated">接受 &lt;code&gt;AbstractRNG&lt;/code&gt; 的其他已记录的 &lt;code&gt;rand&lt;/code&gt; 方法应该开箱即用（（从1开始提供的方法）实现了所依赖的方法），但是如果有优化的余地，当然可以专门用于该RNG；</target>
        </trans-unit>
        <trans-unit id="23ce9b8e2348f2117bc4a635db58184f81b99044" translate="yes" xml:space="preserve">
          <source>otherwise &lt;code&gt;F&lt;/code&gt; is a &lt;a href=&quot;#LinearAlgebra.QR&quot;&gt;&lt;code&gt;QR&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">否则 &lt;code&gt;F&lt;/code&gt; 是&lt;a href=&quot;#LinearAlgebra.QR&quot;&gt; &lt;code&gt;QR&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="bf71882ee8104240bc612b03d3da477db0635592" translate="yes" xml:space="preserve">
          <source>otherwise if the element type of &lt;code&gt;A&lt;/code&gt; is a BLAS type (&lt;a href=&quot;../../base/numbers/index#Core.Float32&quot;&gt;&lt;code&gt;Float32&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../base/numbers/index#Core.Float64&quot;&gt;&lt;code&gt;Float64&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;ComplexF32&lt;/code&gt; or &lt;code&gt;ComplexF64&lt;/code&gt;), then &lt;code&gt;F&lt;/code&gt; is a &lt;a href=&quot;#LinearAlgebra.QRCompactWY&quot;&gt;&lt;code&gt;QRCompactWY&lt;/code&gt;&lt;/a&gt; object,</source>
          <target state="translated">否则，如果 &lt;code&gt;A&lt;/code&gt; 的元素类型是BLAS类型（&lt;a href=&quot;../../base/numbers/index#Core.Float32&quot;&gt; &lt;code&gt;Float32&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../base/numbers/index#Core.Float64&quot;&gt; &lt;code&gt;Float64&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;ComplexF32&lt;/code&gt; 或 &lt;code&gt;ComplexF64&lt;/code&gt; ），则 &lt;code&gt;F&lt;/code&gt; 是&lt;a href=&quot;#LinearAlgebra.QRCompactWY&quot;&gt; &lt;code&gt;QRCompactWY&lt;/code&gt; &lt;/a&gt;对象，</target>
        </trans-unit>
        <trans-unit id="b9b4cc59dc3aeca62636a97763e2b62a1e1f5ac3" translate="yes" xml:space="preserve">
          <source>pairs()</source>
          <target state="translated">pairs()</target>
        </trans-unit>
        <trans-unit id="8cd2b211a36ee8c9fffd6344dfd0bb7b8e4a210b" translate="yes" xml:space="preserve">
          <source>parametric type instantiation</source>
          <target state="translated">参数类型实例化</target>
        </trans-unit>
        <trans-unit id="3bd4850475d463ffaf026b53d8dba1db69313d2e" translate="yes" xml:space="preserve">
          <source>parent()</source>
          <target state="translated">parent()</target>
        </trans-unit>
        <trans-unit id="eb696f022795c3d41c8638e6e12426715e3ca546" translate="yes" xml:space="preserve">
          <source>parentheses can also be used to group one or more semicolon separated expressions</source>
          <target state="translated">圆括号也可以用来分组一个或多个分号分隔的表达式。</target>
        </trans-unit>
        <trans-unit id="09bfc53915133129a56479f5185fcc81444229d6" translate="yes" xml:space="preserve">
          <source>parentheses with comma-separated arguments constructs a tuple containing its arguments</source>
          <target state="translated">用逗号分隔的参数在括号中构造一个包含其参数的元组。</target>
        </trans-unit>
        <trans-unit id="d23acff5ad0657ab0641ad8b4b1c4fd87c3e6e23" translate="yes" xml:space="preserve">
          <source>parentheses with comma-separated assignments constructs a &lt;a href=&quot;../base/index#Core.NamedTuple&quot;&gt;&lt;code&gt;NamedTuple&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">用逗号分隔的括号组成一个&lt;a href=&quot;../base/index#Core.NamedTuple&quot;&gt; &lt;code&gt;NamedTuple&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b0c8ab03ced68b81f363c18e64e93ac0421bc5b" translate="yes" xml:space="preserve">
          <source>parentheses with no arguments constructs an empty &lt;a href=&quot;../base/index#Core.Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">不带参数的括号构造一个空的&lt;a href=&quot;../base/index#Core.Tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f1ae8e76b1c0ad935fd52c786913f3846be3177b" translate="yes" xml:space="preserve">
          <source>parentindices()</source>
          <target state="translated">parentindices()</target>
        </trans-unit>
        <trans-unit id="059cca532dfc88ff12389e59e4137d5dcea439ee" translate="yes" xml:space="preserve">
          <source>parentmodule()</source>
          <target state="translated">parentmodule()</target>
        </trans-unit>
        <trans-unit id="eab4b24bce7104ca7e65d1066bc83747b7b834b3" translate="yes" xml:space="preserve">
          <source>parse()</source>
          <target state="translated">parse()</target>
        </trans-unit>
        <trans-unit id="3961f4265add103ff2e4069989254eba6a45ef66" translate="yes" xml:space="preserve">
          <source>pathof()</source>
          <target state="translated">pathof()</target>
        </trans-unit>
        <trans-unit id="39bd5498eaff228622802784094a0f52b78fce25" translate="yes" xml:space="preserve">
          <source>performs addition</source>
          <target state="translated">做加法</target>
        </trans-unit>
        <trans-unit id="6b59bef85871e67732284ded1ce2fb1444a217b5" translate="yes" xml:space="preserve">
          <source>performs division</source>
          <target state="translated">进行分割</target>
        </trans-unit>
        <trans-unit id="e4d200621bb754d2fee200f1f2fe74f554a75883" translate="yes" xml:space="preserve">
          <source>performs multiplication</source>
          <target state="translated">执行乘法</target>
        </trans-unit>
        <trans-unit id="3457cdb93cce24f9cb37bc003d9136fdf2191ac9" translate="yes" xml:space="preserve">
          <source>performs subtraction</source>
          <target state="translated">做减法</target>
        </trans-unit>
        <trans-unit id="ae87805b991df341dd55fc47d6ce52c6d7faf78f" translate="yes" xml:space="preserve">
          <source>periods may also prefix parentheses (like &lt;code&gt;f.(...)&lt;/code&gt;) or infix operators (like &lt;code&gt;.+&lt;/code&gt;) to perform the function element-wise (calling &lt;a href=&quot;../arrays/index#Base.Broadcast.broadcast&quot;&gt;&lt;code&gt;broadcast&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">句点还可以在括号（如 &lt;code&gt;f.(...)&lt;/code&gt; ）或前缀运算符（如 &lt;code&gt;.+&lt;/code&gt; ）之前加上前缀，以逐元素地执行功能（调用&lt;a href=&quot;../arrays/index#Base.Broadcast.broadcast&quot;&gt; &lt;code&gt;broadcast&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="46ff15375d05546d5e6edce0e4b98802ec91b898" translate="yes" xml:space="preserve">
          <source>permute!()</source>
          <target state="translated">permute!()</target>
        </trans-unit>
        <trans-unit id="f9046504bbc12bfe9b0c9d0dc5da3caef0c82696" translate="yes" xml:space="preserve">
          <source>permutedims!()</source>
          <target state="translated">permutedims!()</target>
        </trans-unit>
        <trans-unit id="f3777dfdadd9290649a2a6873b11fb17397d03fd" translate="yes" xml:space="preserve">
          <source>permutedims()</source>
          <target state="translated">permutedims()</target>
        </trans-unit>
        <trans-unit id="b228744cda2974597e829916edcfebac7c6a779b" translate="yes" xml:space="preserve">
          <source>pipeline()</source>
          <target state="translated">pipeline()</target>
        </trans-unit>
        <trans-unit id="ab756e0168466b6ed76459f2796ca32c6350484e" translate="yes" xml:space="preserve">
          <source>pointer()</source>
          <target state="translated">pointer()</target>
        </trans-unit>
        <trans-unit id="6efa013d66b071babbadfc401a69f4c6c40cd33e" translate="yes" xml:space="preserve">
          <source>pointer_from_objref()</source>
          <target state="translated">pointer_from_objref()</target>
        </trans-unit>
        <trans-unit id="2a2496cf0495b7892ccd1e7218e3420b224b5f6d" translate="yes" xml:space="preserve">
          <source>pop!()</source>
          <target state="translated">pop!()</target>
        </trans-unit>
        <trans-unit id="4ff17f3e75f11a678f7421cc642a06d316af6cc8" translate="yes" xml:space="preserve">
          <source>popfirst!()</source>
          <target state="translated">popfirst!()</target>
        </trans-unit>
        <trans-unit id="429e021a6550991898a52c9b2ba6c323810661e1" translate="yes" xml:space="preserve">
          <source>position()</source>
          <target state="translated">position()</target>
        </trans-unit>
        <trans-unit id="298f5a64cc7cc95c8257a8427c158cad3800f1ab" translate="yes" xml:space="preserve">
          <source>positive infinity</source>
          <target state="translated">正无穷大</target>
        </trans-unit>
        <trans-unit id="b573f24e55d6b7547cb53bd67b8f50a5256006ff" translate="yes" xml:space="preserve">
          <source>power</source>
          <target state="translated">power</target>
        </trans-unit>
        <trans-unit id="41909c7d541a2762422688ce636b0426c3fb5b51" translate="yes" xml:space="preserve">
          <source>powermod()</source>
          <target state="translated">powermod()</target>
        </trans-unit>
        <trans-unit id="aa484239070ebe0393ed35dc097cfc1ee11dbd46" translate="yes" xml:space="preserve">
          <source>precision()</source>
          <target state="translated">precision()</target>
        </trans-unit>
        <trans-unit id="ee68be31256555da62a6819866f28f2630591182" translate="yes" xml:space="preserve">
          <source>precompile()</source>
          <target state="translated">precompile()</target>
        </trans-unit>
        <trans-unit id="be1f15606d0b36cd7cad3604e22b6124061199f0" translate="yes" xml:space="preserve">
          <source>prefix &quot;not&quot; (logical negation) operator</source>
          <target state="translated">不字头</target>
        </trans-unit>
        <trans-unit id="97dbb602148bd1a8d0d3c9889a1d028061f1deec" translate="yes" xml:space="preserve">
          <source>prepend!()</source>
          <target state="translated">prepend!()</target>
        </trans-unit>
        <trans-unit id="ac7c2a8d8c7bc070a20c7f0326de5b5ce1faaedb" translate="yes" xml:space="preserve">
          <source>prevfloat()</source>
          <target state="translated">prevfloat()</target>
        </trans-unit>
        <trans-unit id="30d3985e1be96a16092563af38a7c51c4f5d96b4" translate="yes" xml:space="preserve">
          <source>prevind()</source>
          <target state="translated">prevind()</target>
        </trans-unit>
        <trans-unit id="5a4de4dea6ee879cc8f43fb84cf7db890d16f2b3" translate="yes" xml:space="preserve">
          <source>prevpow()</source>
          <target state="translated">prevpow()</target>
        </trans-unit>
        <trans-unit id="7eabf10f55a9fdfb051838426986cab310c5ec7c" translate="yes" xml:space="preserve">
          <source>primitive type</source>
          <target state="translated">基本型</target>
        </trans-unit>
        <trans-unit id="19c8a5cdef0f37df1bfbc1c66d27412754169588" translate="yes" xml:space="preserve">
          <source>print()</source>
          <target state="translated">print()</target>
        </trans-unit>
        <trans-unit id="cad1ff561173d394b00a49d1e560957407f7e67e" translate="yes" xml:space="preserve">
          <source>println()</source>
          <target state="translated">println()</target>
        </trans-unit>
        <trans-unit id="871493a648f490d87c6a707d613f61bcd1ee2133" translate="yes" xml:space="preserve">
          <source>printstyled()</source>
          <target state="translated">printstyled()</target>
        </trans-unit>
        <trans-unit id="fe1bece3edaa7fd1cb6d3c8884e856b3ef50bab7" translate="yes" xml:space="preserve">
          <source>process_exited()</source>
          <target state="translated">process_exited()</target>
        </trans-unit>
        <trans-unit id="661d15ccc2cf69949476b806758125265e05b059" translate="yes" xml:space="preserve">
          <source>process_running()</source>
          <target state="translated">process_running()</target>
        </trans-unit>
        <trans-unit id="b5aabad4b12fdc8604679278957e1560d782c2d4" translate="yes" xml:space="preserve">
          <source>prod!()</source>
          <target state="translated">prod!()</target>
        </trans-unit>
        <trans-unit id="822ea58fad49d86db152051c5ff2f71154d87037" translate="yes" xml:space="preserve">
          <source>prod()</source>
          <target state="translated">prod()</target>
        </trans-unit>
        <trans-unit id="d4bae08149a109f118c7324aaf989d347be4e9a3" translate="yes" xml:space="preserve">
          <source>promote()</source>
          <target state="translated">promote()</target>
        </trans-unit>
        <trans-unit id="4b163ce44333a592b6c6675ebf8c4b906b9ad130" translate="yes" xml:space="preserve">
          <source>promote_rule()</source>
          <target state="translated">promote_rule()</target>
        </trans-unit>
        <trans-unit id="dd82707d142351c491824500e4c1e22402964495" translate="yes" xml:space="preserve">
          <source>promote_shape()</source>
          <target state="translated">promote_shape()</target>
        </trans-unit>
        <trans-unit id="bcd1f3737229a9098f014438995d6ad1da13ff3c" translate="yes" xml:space="preserve">
          <source>promote_type()</source>
          <target state="translated">promote_type()</target>
        </trans-unit>
        <trans-unit id="3941fc094548f10f49ee50b261b2697c12298bcb" translate="yes" xml:space="preserve">
          <source>propertynames()</source>
          <target state="translated">propertynames()</target>
        </trans-unit>
        <trans-unit id="7a6afab812e152ddc9759e7896efc4db93475da4" translate="yes" xml:space="preserve">
          <source>protocol version</source>
          <target state="translated">协议版本</target>
        </trans-unit>
        <trans-unit id="fd8df2ee3cb4d361ab7338b2407e180781c285f1" translate="yes" xml:space="preserve">
          <source>push!()</source>
          <target state="translated">push!()</target>
        </trans-unit>
        <trans-unit id="1a5875735446b4556ed3346b2c9bafcfabcf4a58" translate="yes" xml:space="preserve">
          <source>pushfirst!()</source>
          <target state="translated">pushfirst!()</target>
        </trans-unit>
        <trans-unit id="3986d9e4d58826bebf062bf284378d1b4f52c55a" translate="yes" xml:space="preserve">
          <source>put!()</source>
          <target state="translated">put!()</target>
        </trans-unit>
        <trans-unit id="1de5fc45d3102adc42b6558c2808db473b3b28f0" translate="yes" xml:space="preserve">
          <source>pycharm</source>
          <target state="translated">pycharm</target>
        </trans-unit>
        <trans-unit id="f5d98dda084d28a169608dd73ae890b09c93e84f" translate="yes" xml:space="preserve">
          <source>quote</source>
          <target state="translated">quote</target>
        </trans-unit>
        <trans-unit id="cab91752736f85053065411fd4d9a9e81e8a1ad3" translate="yes" xml:space="preserve">
          <source>quoted expression</source>
          <target state="translated">引语</target>
        </trans-unit>
        <trans-unit id="79f75a3d6f3c1c53c055a5d2cd7947b72bde50cf" translate="yes" xml:space="preserve">
          <source>raises &lt;code&gt;x&lt;/code&gt; to the &lt;code&gt;y&lt;/code&gt;th power</source>
          <target state="translated">将 &lt;code&gt;x&lt;/code&gt; 提高到 &lt;code&gt;y&lt;/code&gt; 次方</target>
        </trans-unit>
        <trans-unit id="b4853c72356e641f2e3c1466d99ad124fd29496b" translate="yes" xml:space="preserve">
          <source>rand()</source>
          <target state="translated">rand()</target>
        </trans-unit>
        <trans-unit id="1080ca171fc62eb83b8d55a9b809c55ab4057b5f" translate="yes" xml:space="preserve">
          <source>randn()</source>
          <target state="translated">randn()</target>
        </trans-unit>
        <trans-unit id="d24e5c736198124f773913a130caf84cbde98f37" translate="yes" xml:space="preserve">
          <source>range a, a+1, a+2, ..., b</source>
          <target state="translated">范围a,a+1,a+2,......,b</target>
        </trans-unit>
        <trans-unit id="f1bf59516ab94a6249a1105f6ede8ebd1708218d" translate="yes" xml:space="preserve">
          <source>range a, a+s, a+2s, ..., b</source>
          <target state="translated">范围a,a+s,a+2s,...,b</target>
        </trans-unit>
        <trans-unit id="dee90a905ee7b40fb4ce87b56744b3d9b5b60908" translate="yes" xml:space="preserve">
          <source>range of &lt;code&gt;n&lt;/code&gt; linearly spaced elements from &lt;code&gt;start&lt;/code&gt; to &lt;code&gt;stop&lt;/code&gt;</source>
          <target state="translated">的范围 &lt;code&gt;n&lt;/code&gt; 线性间隔元件从 &lt;code&gt;start&lt;/code&gt; 到 &lt;code&gt;stop&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="661399393d5d7f87c7412716d839dba1c5214560" translate="yes" xml:space="preserve">
          <source>range()</source>
          <target state="translated">range()</target>
        </trans-unit>
        <trans-unit id="37d5c49086004debdd4153a04c92cac5277b2fec" translate="yes" xml:space="preserve">
          <source>rather than</source>
          <target state="translated">而非</target>
        </trans-unit>
        <trans-unit id="82b524d90dbcf160ddb4a560d1503123520ae7c4" translate="yes" xml:space="preserve">
          <source>rather than:</source>
          <target state="translated">而不是:</target>
        </trans-unit>
        <trans-unit id="359ead2736a801bfc927857c131859e69b5ee259" translate="yes" xml:space="preserve">
          <source>rationalize()</source>
          <target state="translated">rationalize()</target>
        </trans-unit>
        <trans-unit id="7af186869a0b2c6eff8521c4066d62e198e92ee1" translate="yes" xml:space="preserve">
          <source>rdev</source>
          <target state="translated">rdev</target>
        </trans-unit>
        <trans-unit id="a7afddb68260a60f86c02a021efba7f216c2e7cf" translate="yes" xml:space="preserve">
          <source>read</source>
          <target state="translated">read</target>
        </trans-unit>
        <trans-unit id="660615c7d4370f4f0fcdf98f8257b5c7ba42d79c" translate="yes" xml:space="preserve">
          <source>read!()</source>
          <target state="translated">read!()</target>
        </trans-unit>
        <trans-unit id="b192c6fde2678c434c8dca2f6a0a576b7790094c" translate="yes" xml:space="preserve">
          <source>read()</source>
          <target state="translated">read()</target>
        </trans-unit>
        <trans-unit id="1d198f0656b5fe7c4b0e764e2d86132998d4d51d" translate="yes" xml:space="preserve">
          <source>read, write</source>
          <target state="translated">读写</target>
        </trans-unit>
        <trans-unit id="7f4d07fb0ea3956086182ee5f039076538e90f84" translate="yes" xml:space="preserve">
          <source>read, write, create, append</source>
          <target state="translated">读、写、创建、追加</target>
        </trans-unit>
        <trans-unit id="7b4e0f637ace587c81eaa6f4a055ebfea14dbece" translate="yes" xml:space="preserve">
          <source>read, write, create, truncate</source>
          <target state="translated">读、写、创建、截断。</target>
        </trans-unit>
        <trans-unit id="6d128f7fc050ded1218fe48a194a3bf2c5f68b2d" translate="yes" xml:space="preserve">
          <source>readavailable()</source>
          <target state="translated">readavailable()</target>
        </trans-unit>
        <trans-unit id="9c4e59b8d3dc2fd017bf3e1a7802344a68bae376" translate="yes" xml:space="preserve">
          <source>readbytes!()</source>
          <target state="translated">readbytes!()</target>
        </trans-unit>
        <trans-unit id="3569444fe73486faaf8da5e5e4733480a0e5e465" translate="yes" xml:space="preserve">
          <source>readchomp()</source>
          <target state="translated">readchomp()</target>
        </trans-unit>
        <trans-unit id="57ff0525b8e760d86eba0ef2e98909f7906bade4" translate="yes" xml:space="preserve">
          <source>readline()</source>
          <target state="translated">readline()</target>
        </trans-unit>
        <trans-unit id="8337c3fd5f38aa22ba2e30e153f5d49bcba78c89" translate="yes" xml:space="preserve">
          <source>readlines()</source>
          <target state="translated">readlines()</target>
        </trans-unit>
        <trans-unit id="a36ff4d94e342221d4df4612b724a762766d45ad" translate="yes" xml:space="preserve">
          <source>readuntil()</source>
          <target state="translated">readuntil()</target>
        </trans-unit>
        <trans-unit id="75e7409851f2900a54c3a5982b2c42f27aefe0c7" translate="yes" xml:space="preserve">
          <source>real()</source>
          <target state="translated">real()</target>
        </trans-unit>
        <trans-unit id="98f7c4e1e1eb409c10bfe7c58a76818a17456140" translate="yes" xml:space="preserve">
          <source>redirect_stderr()</source>
          <target state="translated">redirect_stderr()</target>
        </trans-unit>
        <trans-unit id="a187939ef25d7c58e58406e06c08e84d5a746a65" translate="yes" xml:space="preserve">
          <source>redirect_stdin()</source>
          <target state="translated">redirect_stdin()</target>
        </trans-unit>
        <trans-unit id="b41fb1f23fccc7f8ee9fb0bc5231fa1685717f60" translate="yes" xml:space="preserve">
          <source>redirect_stdout()</source>
          <target state="translated">redirect_stdout()</target>
        </trans-unit>
        <trans-unit id="7bb26e745a27a0f4d584a4ff27941c8ca0ef8979" translate="yes" xml:space="preserve">
          <source>reduce()</source>
          <target state="translated">reduce()</target>
        </trans-unit>
        <trans-unit id="7a67f817de595b7f4f44e6a952e4934b9d9685a5" translate="yes" xml:space="preserve">
          <source>reenable_sigint()</source>
          <target state="translated">reenable_sigint()</target>
        </trans-unit>
        <trans-unit id="4f8ae325538b18916249dba3cc116db03db0b621" translate="yes" xml:space="preserve">
          <source>reim()</source>
          <target state="translated">reim()</target>
        </trans-unit>
        <trans-unit id="dd4b3d28ef466e9615459bcac1fc4cd92aa08def" translate="yes" xml:space="preserve">
          <source>reinterpret()</source>
          <target state="translated">reinterpret()</target>
        </trans-unit>
        <trans-unit id="66a2a3e3b628ae1a7a7ccec41c332746568d096c" translate="yes" xml:space="preserve">
          <source>release()</source>
          <target state="translated">release()</target>
        </trans-unit>
        <trans-unit id="9abf97753bd17eaac22d6ed999fe4bea59f2eec5" translate="yes" xml:space="preserve">
          <source>rem()</source>
          <target state="translated">rem()</target>
        </trans-unit>
        <trans-unit id="d89d955d2f093ddbb85b7cc6d1026c324f244490" translate="yes" xml:space="preserve">
          <source>remainder</source>
          <target state="translated">remainder</target>
        </trans-unit>
        <trans-unit id="446ff7c174eabf456c48a677ccb1cc4fe55dafb9" translate="yes" xml:space="preserve">
          <source>remainder operator</source>
          <target state="translated">余数运算符</target>
        </trans-unit>
        <trans-unit id="a7bb47767b98c22e0d38c50090eaf8553a9ed663" translate="yes" xml:space="preserve">
          <source>remainder; satisfies &lt;code&gt;x == div(x,y)*y + rem(x,y)&lt;/code&gt;; sign matches &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">余; 满足 &lt;code&gt;x == div(x,y)*y + rem(x,y)&lt;/code&gt; ; 标志匹配 &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc7f6f8169c77d6a9ea5f0efa2cca69e861aa1b1" translate="yes" xml:space="preserve">
          <source>repeat()</source>
          <target state="translated">repeat()</target>
        </trans-unit>
        <trans-unit id="7ab20956eaf52834945a9ff9cc1ab4dad464faf3" translate="yes" xml:space="preserve">
          <source>replace!()</source>
          <target state="translated">replace!()</target>
        </trans-unit>
        <trans-unit id="b2043171a4223ded1a5e5a3b28823098f69f81db" translate="yes" xml:space="preserve">
          <source>replace()</source>
          <target state="translated">replace()</target>
        </trans-unit>
        <trans-unit id="f644b7f7c3513bd8118b5fdb1b3b09e20b03d49e" translate="yes" xml:space="preserve">
          <source>repr()</source>
          <target state="translated">repr()</target>
        </trans-unit>
        <trans-unit id="634b96c5c5c53297222823e53e126b5e4b24f441" translate="yes" xml:space="preserve">
          <source>require()</source>
          <target state="translated">require()</target>
        </trans-unit>
        <trans-unit id="c3fed1dae28105416889eb25d33d7d24c7a20450" translate="yes" xml:space="preserve">
          <source>reserved</source>
          <target state="translated">reserved</target>
        </trans-unit>
        <trans-unit id="c164b7b4a612e7761b3ee9584a7d8a34968b728c" translate="yes" xml:space="preserve">
          <source>reset()</source>
          <target state="translated">reset()</target>
        </trans-unit>
        <trans-unit id="a83b0455f25739000f2b10451386d951ad16dc55" translate="yes" xml:space="preserve">
          <source>reshape()</source>
          <target state="translated">reshape()</target>
        </trans-unit>
        <trans-unit id="19e28d7599feffc9a633c4f35041ad206511f231" translate="yes" xml:space="preserve">
          <source>resize!()</source>
          <target state="translated">resize!()</target>
        </trans-unit>
        <trans-unit id="4fdd19e288027b7e431ab46bf6a35400d8535e38" translate="yes" xml:space="preserve">
          <source>rethrow()</source>
          <target state="translated">rethrow()</target>
        </trans-unit>
        <trans-unit id="186cd1b47f8fd5641a09ecc8b5f4ef69e1b4a14d" translate="yes" xml:space="preserve">
          <source>retry()</source>
          <target state="translated">retry()</target>
        </trans-unit>
        <trans-unit id="63143b6f8007b98c53ca2149822777b3566f9241" translate="yes" xml:space="preserve">
          <source>return</source>
          <target state="translated">return</target>
        </trans-unit>
        <trans-unit id="4fc31f600ab9ec09c338a46971962e186e2dfa9e" translate="yes" xml:space="preserve">
          <source>returns &lt;code&gt;(div(x,y),rem(x,y))&lt;/code&gt;</source>
          <target state="translated">返回 &lt;code&gt;(div(x,y),rem(x,y))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3801df50fc7a68c005dd44258f5c4af85a7271b" translate="yes" xml:space="preserve">
          <source>returns &lt;code&gt;(fld(x,y),mod(x,y))&lt;/code&gt;</source>
          <target state="translated">返回 &lt;code&gt;(fld(x,y),mod(x,y))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a5511d12cab684a9e12810bae2207cf2cca31842" translate="yes" xml:space="preserve">
          <source>reverse!()</source>
          <target state="translated">reverse!()</target>
        </trans-unit>
        <trans-unit id="88d3afbc0436f79204d03bb79525b95272b4efc4" translate="yes" xml:space="preserve">
          <source>reverse()</source>
          <target state="translated">reverse()</target>
        </trans-unit>
        <trans-unit id="9eea767bdca8a724094fca253fb5e99865721970" translate="yes" xml:space="preserve">
          <source>reverseind()</source>
          <target state="translated">reverseind()</target>
        </trans-unit>
        <trans-unit id="f5bd2a9af80eaf966421e2ad781db1b21589c381" translate="yes" xml:space="preserve">
          <source>rot180()</source>
          <target state="translated">rot180()</target>
        </trans-unit>
        <trans-unit id="b4b73be32c688f91eb756561650e8dc0d31ee18e" translate="yes" xml:space="preserve">
          <source>rotl90()</source>
          <target state="translated">rotl90()</target>
        </trans-unit>
        <trans-unit id="0b5d80f5238301f905bd9154d572ce422050f1d3" translate="yes" xml:space="preserve">
          <source>rotr90()</source>
          <target state="translated">rotr90()</target>
        </trans-unit>
        <trans-unit id="6f022a1bd26d268092658ba19eeeb35350f9d7df" translate="yes" xml:space="preserve">
          <source>round &lt;code&gt;x&lt;/code&gt; to the nearest integer</source>
          <target state="translated">将 &lt;code&gt;x&lt;/code&gt; 舍入到最接近的整数</target>
        </trans-unit>
        <trans-unit id="ced1897d2a9b75ae6369ee7c54e5ce456039b4ee" translate="yes" xml:space="preserve">
          <source>round &lt;code&gt;x&lt;/code&gt; towards &lt;code&gt;+Inf&lt;/code&gt;</source>
          <target state="translated">将 &lt;code&gt;x&lt;/code&gt; 朝 &lt;code&gt;+Inf&lt;/code&gt; 舍入</target>
        </trans-unit>
        <trans-unit id="b549350b8f6cd6dcbcdac9337626b9ff46044513" translate="yes" xml:space="preserve">
          <source>round &lt;code&gt;x&lt;/code&gt; towards &lt;code&gt;-Inf&lt;/code&gt;</source>
          <target state="translated">将 &lt;code&gt;x&lt;/code&gt; 朝 &lt;code&gt;-Inf&lt;/code&gt; 取整</target>
        </trans-unit>
        <trans-unit id="35193774b1e36ef6d2902abe2c9cd030a799b106" translate="yes" xml:space="preserve">
          <source>round &lt;code&gt;x&lt;/code&gt; towards zero</source>
          <target state="translated">将 &lt;code&gt;x&lt;/code&gt; 舍入为零</target>
        </trans-unit>
        <trans-unit id="f641a6e31f9712519753751a00ca021ef445cf05" translate="yes" xml:space="preserve">
          <source>round()</source>
          <target state="translated">round()</target>
        </trans-unit>
        <trans-unit id="6ca1b3bbb5562ce14506ff2295f3cc3181f76dc3" translate="yes" xml:space="preserve">
          <source>rpad()</source>
          <target state="translated">rpad()</target>
        </trans-unit>
        <trans-unit id="b4cc3a643e73e674d2ae6e4687d5364b08762f1b" translate="yes" xml:space="preserve">
          <source>rsplit()</source>
          <target state="translated">rsplit()</target>
        </trans-unit>
        <trans-unit id="0db5d63f6322a8821e62af98ff4d7236c4f68f2c" translate="yes" xml:space="preserve">
          <source>rstrip()</source>
          <target state="translated">rstrip()</target>
        </trans-unit>
        <trans-unit id="f805aaf52532959faf0be97c80abde3c8ae5e849" translate="yes" xml:space="preserve">
          <source>run()</source>
          <target state="translated">run()</target>
        </trans-unit>
        <trans-unit id="09629f12340d112a4b1aee5f5027b38d82877e27" translate="yes" xml:space="preserve">
          <source>runtests()</source>
          <target state="translated">runtests()</target>
        </trans-unit>
        <trans-unit id="94c5e54de18e99a5c9ea30c957c3547f9d501a3e" translate="yes" xml:space="preserve">
          <source>schedule()</source>
          <target state="translated">schedule()</target>
        </trans-unit>
        <trans-unit id="ed50899ee7dde6f05d14e50bd8d17d11df88b753" translate="yes" xml:space="preserve">
          <source>seek to end</source>
          <target state="translated">力图结束</target>
        </trans-unit>
        <trans-unit id="fb0755f3a4c1f42c817cb7d9ed0499ffffbd2bd2" translate="yes" xml:space="preserve">
          <source>seek()</source>
          <target state="translated">seek()</target>
        </trans-unit>
        <trans-unit id="19c281061f39d296557b8b680f071757d46ce5dd" translate="yes" xml:space="preserve">
          <source>seekend()</source>
          <target state="translated">seekend()</target>
        </trans-unit>
        <trans-unit id="985cd736de97d1cd61a0c1366ede2e07060796ec" translate="yes" xml:space="preserve">
          <source>seekstart()</source>
          <target state="translated">seekstart()</target>
        </trans-unit>
        <trans-unit id="2b65f28926a559486671e61cbbe5c8eb5cc2525c" translate="yes" xml:space="preserve">
          <source>selectdim()</source>
          <target state="translated">selectdim()</target>
        </trans-unit>
        <trans-unit id="44e4e4e6449b2017d04baf3130e3044b7a2aed07" translate="yes" xml:space="preserve">
          <source>semicolons separate statements, begin a list of keyword arguments in function declarations or calls, or are used to separate array literals for vertical concatenation</source>
          <target state="translated">分号用于分隔语句,在函数声明或调用中作为关键字参数列表的开始,或用于分隔数组字元以进行垂直连接。</target>
        </trans-unit>
        <trans-unit id="3aca953965c9d7bc4d1e9c1b983616882955f90d" translate="yes" xml:space="preserve">
          <source>separate function arguments or tuple components</source>
          <target state="translated">单独的函数参数或元组组件</target>
        </trans-unit>
        <trans-unit id="410c3e79ae89801f1eec9ee6ab461bf139376825" translate="yes" xml:space="preserve">
          <source>setdiff!()</source>
          <target state="translated">setdiff!()</target>
        </trans-unit>
        <trans-unit id="f8ef97af70069325b8bfcd8326e31da9f75410f3" translate="yes" xml:space="preserve">
          <source>setdiff()</source>
          <target state="translated">setdiff()</target>
        </trans-unit>
        <trans-unit id="ccf4c6eab0852f37b33556d6ca10c485b77c54c5" translate="yes" xml:space="preserve">
          <source>setenv()</source>
          <target state="translated">setenv()</target>
        </trans-unit>
        <trans-unit id="aef5e113001ea0ca0febed3d79a13575cf5df45d" translate="yes" xml:space="preserve">
          <source>setindex!()</source>
          <target state="translated">setindex!()</target>
        </trans-unit>
        <trans-unit id="8ecc8d7dd0c9c8bea853780d3159bf3618d29804" translate="yes" xml:space="preserve">
          <source>setproperty!()</source>
          <target state="translated">setproperty!()</target>
        </trans-unit>
        <trans-unit id="9f8425e91dff308e0277acecc255b39fb7404f56" translate="yes" xml:space="preserve">
          <source>short-circuiting boolean and</source>
          <target state="translated">短路布尔值和</target>
        </trans-unit>
        <trans-unit id="8e728d8826f0736248a73dc4d05dbcb64fa803ff" translate="yes" xml:space="preserve">
          <source>short-circuiting boolean or</source>
          <target state="translated">短路布尔值或</target>
        </trans-unit>
        <trans-unit id="6bf0e8ac948555b3ec2beb6e6ae148c6672becd1" translate="yes" xml:space="preserve">
          <source>shorthand for &lt;code&gt;cat(A...; dims=1)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cat(A...; dims=1)&lt;/code&gt; 简写</target>
        </trans-unit>
        <trans-unit id="846635d4f98d35a26fc37c91dc4f96221b8ff75a" translate="yes" xml:space="preserve">
          <source>shorthand for &lt;code&gt;cat(A...; dims=2)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cat(A...; dims=2)&lt;/code&gt; 简写</target>
        </trans-unit>
        <trans-unit id="1623ec8b9b5fc5341c1caa28a23e999a5f3d4355" translate="yes" xml:space="preserve">
          <source>shorthand for `cat(A...; dims=1)</source>
          <target state="translated">`cat(A...;dims=1)的速记。</target>
        </trans-unit>
        <trans-unit id="82e0dbe7e6b5450c96ed7d47165ccd2f86dcf4e9" translate="yes" xml:space="preserve">
          <source>shorthand for `cat(A...; dims=2)</source>
          <target state="translated">`cat(A...;dims=2)的速记。</target>
        </trans-unit>
        <trans-unit id="7eef26daaa8030975f6e403f01e29cb971de26f0" translate="yes" xml:space="preserve">
          <source>should be defined to return a sampler with pre-computed data, then</source>
          <target state="translated">应该定义为返回一个带有预计算数据的取样器,那么就可以用</target>
        </trans-unit>
        <trans-unit id="0217764a717fe75116d71bf4b5cded1e41cd6830" translate="yes" xml:space="preserve">
          <source>should be written as:</source>
          <target state="translated">应写成:</target>
        </trans-unit>
        <trans-unit id="e478bed5d52093c00ac370affcc03ebd77203ca6" translate="yes" xml:space="preserve">
          <source>show()</source>
          <target state="translated">show()</target>
        </trans-unit>
        <trans-unit id="0833041b27acc65e3ef7b81f067d6ee885f42ed7" translate="yes" xml:space="preserve">
          <source>showerror()</source>
          <target state="translated">showerror()</target>
        </trans-unit>
        <trans-unit id="c5262f244da7973beb1f0d3d08c34b1d2c455a06" translate="yes" xml:space="preserve">
          <source>sign()</source>
          <target state="translated">sign()</target>
        </trans-unit>
        <trans-unit id="4fc7aadbf0080d52270936bc82d512d8e0d8ff44" translate="yes" xml:space="preserve">
          <source>signature bytes &quot;JL&quot;</source>
          <target state="translated">签名字节 &quot;JL&quot;</target>
        </trans-unit>
        <trans-unit id="576656a4881867345aca23bede1ad705374e327a" translate="yes" xml:space="preserve">
          <source>signbit()</source>
          <target state="translated">signbit()</target>
        </trans-unit>
        <trans-unit id="ad9c6810ff85827682bfe51bd056f394c27e1cde" translate="yes" xml:space="preserve">
          <source>signed()</source>
          <target state="translated">signed()</target>
        </trans-unit>
        <trans-unit id="8d4a74cf30fc4cc5168b5e248c7bb6f497692c99" translate="yes" xml:space="preserve">
          <source>similar()</source>
          <target state="translated">similar()</target>
        </trans-unit>
        <trans-unit id="9a9313b161d0cfd83d56d6c784a30e5eb82ea309" translate="yes" xml:space="preserve">
          <source>simultaneous vertical and horizontal concatenation</source>
          <target state="translated">纵横交错</target>
        </trans-unit>
        <trans-unit id="640a88be71cfb984e8337bff814dae5174168271" translate="yes" xml:space="preserve">
          <source>sin()</source>
          <target state="translated">sin()</target>
        </trans-unit>
        <trans-unit id="51b69144fcd2ef3dc65e0700305b75911ed6f084" translate="yes" xml:space="preserve">
          <source>since &lt;code&gt;s&lt;/code&gt; is local to the &lt;code&gt;for&lt;/code&gt; loop, it is undefined when &lt;code&gt;t = s + i&lt;/code&gt; is evaluated, causing an error</source>
          <target state="translated">由于 &lt;code&gt;s&lt;/code&gt; 是 &lt;code&gt;for&lt;/code&gt; 循环的局部变量，因此在评估 &lt;code&gt;t = s + i&lt;/code&gt; 时它是不确定的，从而导致错误</target>
        </trans-unit>
        <trans-unit id="ce0b1612aa711b78a720295d271a33894e2b72bf" translate="yes" xml:space="preserve">
          <source>single</source>
          <target state="translated">single</target>
        </trans-unit>
        <trans-unit id="524c0570579e45a72121e9452310e5368e4fa3f3" translate="yes" xml:space="preserve">
          <source>single ampersand is bitwise and</source>
          <target state="translated">单个安培符是位的,而</target>
        </trans-unit>
        <trans-unit id="347678cfa2f105728a385ac225f2b31f1032d039" translate="yes" xml:space="preserve">
          <source>single equals sign is &lt;a href=&quot;../../manual/variables/index#man-variables&quot;&gt;assignment&lt;/a&gt;</source>
          <target state="translated">单等号是&lt;a href=&quot;../../manual/variables/index#man-variables&quot;&gt;赋值&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2eef3f5b2cc24126d58ebf64df56bda48460b820" translate="yes" xml:space="preserve">
          <source>single periods access named fields in objects/modules (calling &lt;a href=&quot;../base/index#Base.getproperty&quot;&gt;&lt;code&gt;getproperty&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../base/index#Base.setproperty!&quot;&gt;&lt;code&gt;setproperty!&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">单周期访问对象/模块中的命名字段（调用&lt;a href=&quot;../base/index#Base.getproperty&quot;&gt; &lt;code&gt;getproperty&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../base/index#Base.setproperty!&quot;&gt; &lt;code&gt;setproperty!&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="04e29baaca56c75b21c51ea833f775403fad05ec" translate="yes" xml:space="preserve">
          <source>single pipe character is bitwise or</source>
          <target state="translated">单管字符是位或</target>
        </trans-unit>
        <trans-unit id="9a888fa77df6f8ee7ebf52528aa5ef1830b9e1f7" translate="yes" xml:space="preserve">
          <source>sinh()</source>
          <target state="translated">sinh()</target>
        </trans-unit>
        <trans-unit id="89368e1d68015693ab48ee189d0632cb5d6edfb3" translate="yes" xml:space="preserve">
          <source>size</source>
          <target state="translated">size</target>
        </trans-unit>
        <trans-unit id="29a0d8611cfc6ca1cbf91fa8a23a5527f7db386c" translate="yes" xml:space="preserve">
          <source>size()</source>
          <target state="translated">size()</target>
        </trans-unit>
        <trans-unit id="358fc49de277f1094d7b0f439b91e00630b8bb29" translate="yes" xml:space="preserve">
          <source>sizehint!()</source>
          <target state="translated">sizehint!()</target>
        </trans-unit>
        <trans-unit id="b0aa21a1df214b62fe1f17c3e3ac6fbf915dc63e" translate="yes" xml:space="preserve">
          <source>sizeof()</source>
          <target state="translated">sizeof()</target>
        </trans-unit>
        <trans-unit id="1c32fed0b0a4ddd34877f85ef98fc80b6eef760b" translate="yes" xml:space="preserve">
          <source>skip()</source>
          <target state="translated">skip()</target>
        </trans-unit>
        <trans-unit id="1585103a35fa0df8150b01b50cb110c446f6687a" translate="yes" xml:space="preserve">
          <source>skipchars()</source>
          <target state="translated">skipchars()</target>
        </trans-unit>
        <trans-unit id="718fb4634bc63a40e36503e59de6c1e6a3c770b6" translate="yes" xml:space="preserve">
          <source>skipmissing()</source>
          <target state="translated">skipmissing()</target>
        </trans-unit>
        <trans-unit id="65ebc585d9eb5c609ab744c1c265c3a8828cf743" translate="yes" xml:space="preserve">
          <source>sleep()</source>
          <target state="translated">sleep()</target>
        </trans-unit>
        <trans-unit id="d48e3a27badda6c3a081920644933e02048c6b27" translate="yes" xml:space="preserve">
          <source>so all the performance issues discussed previously apply.</source>
          <target state="translated">所以之前讨论的所有性能问题都适用。</target>
        </trans-unit>
        <trans-unit id="b568351d3368ba2ecc1f2206e5e2ca5e3e02361e" translate="yes" xml:space="preserve">
          <source>something()</source>
          <target state="translated">something()</target>
        </trans-unit>
        <trans-unit id="60ea148be479d6d490e46022eb1f1f3f27a216f2" translate="yes" xml:space="preserve">
          <source>sort!()</source>
          <target state="translated">sort!()</target>
        </trans-unit>
        <trans-unit id="8f4edb36a18b9689517e0482c28c688b02b27095" translate="yes" xml:space="preserve">
          <source>sort()</source>
          <target state="translated">sort()</target>
        </trans-unit>
        <trans-unit id="e48da700d777fcffe9f82f9a8543ecb4471ff493" translate="yes" xml:space="preserve">
          <source>sortperm()</source>
          <target state="translated">sortperm()</target>
        </trans-unit>
        <trans-unit id="2a0512b35a3908ab87f943157d82f548a83ed5cf" translate="yes" xml:space="preserve">
          <source>sortslices()</source>
          <target state="translated">sortslices()</target>
        </trans-unit>
        <trans-unit id="828d338a9b04221c9cbe286f50cd389f68de4ecf" translate="yes" xml:space="preserve">
          <source>source</source>
          <target state="translated">source</target>
        </trans-unit>
        <trans-unit id="eac43755b7aee0f3c9d8fc06d88a6effe4135cd6" translate="yes" xml:space="preserve">
          <source>splice arguments into a function call or declare a varargs function</source>
          <target state="translated">将参数拼接到函数调用中或声明一个varargs函数。</target>
        </trans-unit>
        <trans-unit id="e6fc7fc571c32f581182c6302172eb883143dd50" translate="yes" xml:space="preserve">
          <source>splice!()</source>
          <target state="translated">splice!()</target>
        </trans-unit>
        <trans-unit id="981f46d5734d35e82cb0ffc7f45ab9db94fe7aa2" translate="yes" xml:space="preserve">
          <source>split()</source>
          <target state="translated">split()</target>
        </trans-unit>
        <trans-unit id="39b1ae7fc6d51cea448406efb0839668e93fa6a8" translate="yes" xml:space="preserve">
          <source>sprint()</source>
          <target state="translated">sprint()</target>
        </trans-unit>
        <trans-unit id="aac12b3163e653bfe042abb4c6aa5e150f5eea0f" translate="yes" xml:space="preserve">
          <source>sqrt()</source>
          <target state="translated">sqrt()</target>
        </trans-unit>
        <trans-unit id="358d3a0357ef156d97d87dff627dd9ae59dcb596" translate="yes" xml:space="preserve">
          <source>square root of &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 的平方根</target>
        </trans-unit>
        <trans-unit id="26bcbb5b5d446b1de89741fa7f339c9f3069a566" translate="yes" xml:space="preserve">
          <source>startswith()</source>
          <target state="translated">startswith()</target>
        </trans-unit>
        <trans-unit id="e2b6a72eca8f7861a7c302a5fa3605d7eff6a906" translate="yes" xml:space="preserve">
          <source>stat()</source>
          <target state="translated">stat()</target>
        </trans-unit>
        <trans-unit id="2487565d5095bd752b41915e88b543ae5730a993" translate="yes" xml:space="preserve">
          <source>statement separator</source>
          <target state="translated">语句分隔符</target>
        </trans-unit>
        <trans-unit id="351eb7019c1640acf10c265cc31c377fd68443b5" translate="yes" xml:space="preserve">
          <source>stderr</source>
          <target state="translated">stderr</target>
        </trans-unit>
        <trans-unit id="de71957adadbc39a6c55ae1d2d2d362c9e89c2f9" translate="yes" xml:space="preserve">
          <source>stdin</source>
          <target state="translated">stdin</target>
        </trans-unit>
        <trans-unit id="476d9ec701e2de6a6c37ab5211117a7cb8333a27" translate="yes" xml:space="preserve">
          <source>stdout</source>
          <target state="translated">stdout</target>
        </trans-unit>
        <trans-unit id="404816b6c5c80ce056db226907b98ffe92480a63" translate="yes" xml:space="preserve">
          <source>step()</source>
          <target state="translated">step()</target>
        </trans-unit>
        <trans-unit id="df90bf29e76b02f23fbe0ab3a9c69cea9a02626e" translate="yes" xml:space="preserve">
          <source>stride()</source>
          <target state="translated">stride()</target>
        </trans-unit>
        <trans-unit id="05753c4bf98491a2204a3e2cd3b6281c2001d3cf" translate="yes" xml:space="preserve">
          <source>strides()</source>
          <target state="translated">strides()</target>
        </trans-unit>
        <trans-unit id="d9cb63c8975efd9ea6cd0b3d6475c5b178053143" translate="yes" xml:space="preserve">
          <source>string and expression interpolation</source>
          <target state="translated">字符串和表达式插值</target>
        </trans-unit>
        <trans-unit id="eb7866628f6ef8bf4a3e57ce0b37db6be5c30b89" translate="yes" xml:space="preserve">
          <source>string()</source>
          <target state="translated">string()</target>
        </trans-unit>
        <trans-unit id="f36c87380b38089f028d98110bdbafc2df87a427" translate="yes" xml:space="preserve">
          <source>strip()</source>
          <target state="translated">strip()</target>
        </trans-unit>
        <trans-unit id="d118e5a3cc15b182d1286373a60c787e58d3166f" translate="yes" xml:space="preserve">
          <source>struct</source>
          <target state="translated">struct</target>
        </trans-unit>
        <trans-unit id="83538dd06e49363df3ed4168fde6eb78059cd4c1" translate="yes" xml:space="preserve">
          <source>subl</source>
          <target state="translated">subl</target>
        </trans-unit>
        <trans-unit id="98e8ad064f869750f9bc2918b4e9d821597dfbf1" translate="yes" xml:space="preserve">
          <source>subtype operator</source>
          <target state="translated">亚型运算符</target>
        </trans-unit>
        <trans-unit id="3196958744ab07b11deaebf2fecf35aa6d9e0001" translate="yes" xml:space="preserve">
          <source>success()</source>
          <target state="translated">success()</target>
        </trans-unit>
        <trans-unit id="14f9caeeccc13702e48f583e5469ab0c12e735e3" translate="yes" xml:space="preserve">
          <source>such that $v_i$ is the $i$th column of $V$, $\tau_i$ is the $i$th element of &lt;code&gt;[diag(T_1); diag(T_2); &amp;hellip;; diag(T_b)]&lt;/code&gt;, and $(V_1 \; V_2 \; ... \; V_b)$ is the left &lt;code&gt;m&lt;/code&gt;&amp;times;&lt;code&gt;min(m, n)&lt;/code&gt; block of $V$. When constructed using &lt;a href=&quot;#LinearAlgebra.qr&quot;&gt;&lt;code&gt;qr&lt;/code&gt;&lt;/a&gt;, the block size is given by $n_b = \min(m, n, 36)$.</source>
          <target state="translated">这样$ v_i $是$ V $的第$ i $列，$ \ tau_i $是 &lt;code&gt;[diag(T_1); diag(T_2); &amp;hellip;; diag(T_b)]&lt;/code&gt; 的$ i $ th元素。diag（T_2）; &amp;hellip;；diag（T_b）]和$（V_1 \; V_2 \; ... \; V_b）$是$ V $的左 &lt;code&gt;m&lt;/code&gt; &amp;times; &lt;code&gt;min(m, n)&lt;/code&gt; 块。使用&lt;a href=&quot;#LinearAlgebra.qr&quot;&gt; &lt;code&gt;qr&lt;/code&gt; &lt;/a&gt;构造时，块大小由$ n_b = \ min（m，n，36）$给出。</target>
        </trans-unit>
        <trans-unit id="6dcb91146c7ec2d23b90ee96a0e0655dca441648" translate="yes" xml:space="preserve">
          <source>such that $v_i$ is the $i$th column of $V$, and $au_i$ is the $i$th diagonal element of $T$.</source>
          <target state="translated">令$v_i$是$V$的第i$列,$au_i$是$T$的第i$对角线元素。</target>
        </trans-unit>
        <trans-unit id="99ffa7346d648ecbb462a8e95e34cda464b9fca0" translate="yes" xml:space="preserve">
          <source>sum!()</source>
          <target state="translated">sum!()</target>
        </trans-unit>
        <trans-unit id="fec7a8014d78a44bcd692b35f8b00ed7ee13391a" translate="yes" xml:space="preserve">
          <source>sum()</source>
          <target state="translated">sum()</target>
        </trans-unit>
        <trans-unit id="87ef92bfb73e0867a9f775641e359e68433e4117" translate="yes" xml:space="preserve">
          <source>summary()</source>
          <target state="translated">summary()</target>
        </trans-unit>
        <trans-unit id="2c7463b7b8acd8565d40475091ca706723ae913c" translate="yes" xml:space="preserve">
          <source>summarysize()</source>
          <target state="translated">summarysize()</target>
        </trans-unit>
        <trans-unit id="760cf5be07734d94cc69a205f10434c9cb995b5f" translate="yes" xml:space="preserve">
          <source>supertype operator (reverse of subtype operator)</source>
          <target state="translated">超类型操作符</target>
        </trans-unit>
        <trans-unit id="94ba97f8aefe57276a655aec54fe726d0c42c120" translate="yes" xml:space="preserve">
          <source>supertype()</source>
          <target state="translated">supertype()</target>
        </trans-unit>
        <trans-unit id="810a25d76c31e495cc070bdf42e076f7c9b0a1cd" translate="yes" xml:space="preserve">
          <source>symbol</source>
          <target state="translated">symbol</target>
        </trans-unit>
        <trans-unit id="96c6dbc034d5d1234fa649fd865c6fc194fb67c4" translate="yes" xml:space="preserve">
          <source>symbol a</source>
          <target state="translated">符号a</target>
        </trans-unit>
        <trans-unit id="274a0d0cded91f1b50624ab047895ffcb7e38f59" translate="yes" xml:space="preserve">
          <source>symdiff!()</source>
          <target state="translated">symdiff!()</target>
        </trans-unit>
        <trans-unit id="b64b88da234dae7f2c63af236e591d6a0784b3aa" translate="yes" xml:space="preserve">
          <source>symdiff()</source>
          <target state="translated">symdiff()</target>
        </trans-unit>
        <trans-unit id="147c3412a225cce27591575cfee3963b02faa1da" translate="yes" xml:space="preserve">
          <source>systemerror()</source>
          <target state="translated">systemerror()</target>
        </trans-unit>
        <trans-unit id="4b838b7b298dcea9cda8eeecde2864da5ab2c7ba" translate="yes" xml:space="preserve">
          <source>tag byte (0x37)</source>
          <target state="translated">标签字节(0x37)</target>
        </trans-unit>
        <trans-unit id="a06facb2e17d30ef2785f172add5056c63d682c9" translate="yes" xml:space="preserve">
          <source>tail()</source>
          <target state="translated">tail()</target>
        </trans-unit>
        <trans-unit id="21a8e9f67dd77619f3862f6bdfc3655857ff8ded" translate="yes" xml:space="preserve">
          <source>take!()</source>
          <target state="translated">take!()</target>
        </trans-unit>
        <trans-unit id="b6be7f7ba0da191e0d25b19afa45114cf1af5a99" translate="yes" xml:space="preserve">
          <source>tan()</source>
          <target state="translated">tan()</target>
        </trans-unit>
        <trans-unit id="c0b788813cf7d9564663203729dc34d224fdcb1d" translate="yes" xml:space="preserve">
          <source>tanh()</source>
          <target state="translated">tanh()</target>
        </trans-unit>
        <trans-unit id="ddde6a56bb08fa4280a0e538ebae6ae0a717934b" translate="yes" xml:space="preserve">
          <source>task_local_storage()</source>
          <target state="translated">task_local_storage()</target>
        </trans-unit>
        <trans-unit id="e4b5733b24aedfca5906bc193509bd165a3b78c5" translate="yes" xml:space="preserve">
          <source>textmate</source>
          <target state="translated">textmate</target>
        </trans-unit>
        <trans-unit id="dbeecb86a5d533d386a6db0ab26ef5c91d15b85f" translate="yes" xml:space="preserve">
          <source>that resolves the ambiguity by brute force.</source>
          <target state="translated">以蛮力解决歧义的。</target>
        </trans-unit>
        <trans-unit id="191a40600565d5e99bf8e18c3131e2eed32d28cf" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;b&lt;/code&gt; in &lt;code&gt;a=b&lt;/code&gt; refers to a &lt;code&gt;b&lt;/code&gt; in an outer scope, not the subsequent argument &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;b&lt;/code&gt; 在 &lt;code&gt;a=b&lt;/code&gt; 指的是 &lt;code&gt;b&lt;/code&gt; 中的外范围，而不是随后的参数 &lt;code&gt;b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="717a14852045d2771dd735cbd966853e98e6a4ee" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;bar&lt;/code&gt; function solves a problem that is better solved with multiple dispatch - defining &lt;code&gt;bar(x) = x&lt;/code&gt; and &lt;code&gt;bar(x::Integer) = x ^ 2&lt;/code&gt; will do the same thing, but it is both simpler and faster.</source>
          <target state="translated">该 &lt;code&gt;bar&lt;/code&gt; 的功能，解决了被更好地与多个调度解决的问题-定义 &lt;code&gt;bar(x) = x&lt;/code&gt; 和 &lt;code&gt;bar(x::Integer) = x ^ 2&lt;/code&gt; 将做同样的事情，但它是更简单，更快。</target>
        </trans-unit>
        <trans-unit id="b55c3897a5f0b28173281ba444704b7d62ac13ed" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;baz&lt;/code&gt; function is pathological</source>
          <target state="translated">在 &lt;code&gt;baz&lt;/code&gt; 功能是病理性</target>
        </trans-unit>
        <trans-unit id="2c6654789eb91a797819fe332866e88593ab662f" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;foo&lt;/code&gt; function has side-effects (the call to &lt;code&gt;Core.println&lt;/code&gt;), and it is undefined exactly when, how often or how many times these side-effects will occur</source>
          <target state="translated">该 &lt;code&gt;foo&lt;/code&gt; 函数有副作用（调用 &lt;code&gt;Core.println&lt;/code&gt; ），它是不确定什么时候，或者有多少次会出现这些副作用多久</target>
        </trans-unit>
        <trans-unit id="3e2537f7e306c51f66354c3265d54da267166416" translate="yes" xml:space="preserve">
          <source>the BLAS library each language is using,</source>
          <target state="translated">每个语言使用的BLAS库。</target>
        </trans-unit>
        <trans-unit id="7a2bcf644d46934cc6a04ebca79b621aef5e6be6" translate="yes" xml:space="preserve">
          <source>the annotation of &lt;code&gt;c&lt;/code&gt; harms performance. To write performant code involving types constructed at run-time, use the &lt;a href=&quot;#kernel-functions&quot;&gt;function-barrier technique&lt;/a&gt; discussed below, and ensure that the constructed type appears among the argument types of the kernel function so that the kernel operations are properly specialized by the compiler. For example, in the above snippet, as soon as &lt;code&gt;b&lt;/code&gt; is constructed, it can be passed to another function &lt;code&gt;k&lt;/code&gt;, the kernel. If, for example, function &lt;code&gt;k&lt;/code&gt; declares &lt;code&gt;b&lt;/code&gt; as an argument of type &lt;code&gt;Complex{T}&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; is a type parameter, then a type annotation appearing in an assignment statement within &lt;code&gt;k&lt;/code&gt; of the form:</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; 的注释会损害性能。要编写涉及在运行时构造的类型的性能代码，请使用下面讨论的&lt;a href=&quot;#kernel-functions&quot;&gt;功能屏障技术&lt;/a&gt;，并确保构造的类型出现在内核函数的参数类型中，以便编译器可以正确地对内核操作进行专门化。例如，在上面的代码段中，一旦 &lt;code&gt;b&lt;/code&gt; 被构造，就可以将其传递给另一个函数 &lt;code&gt;k&lt;/code&gt; ，即内核。例如，如果函数 &lt;code&gt;k&lt;/code&gt; 将 &lt;code&gt;b&lt;/code&gt; 声明为 &lt;code&gt;Complex{T}&lt;/code&gt; 类型的参数，其中 &lt;code&gt;T&lt;/code&gt; 是类型参数，则类型注释将出现在 &lt;code&gt;k&lt;/code&gt; 中的赋值语句中 形式：</target>
        </trans-unit>
        <trans-unit id="2658eb07377f73f67624c7c016872ab24c66927a" translate="yes" xml:space="preserve">
          <source>the annotation of &lt;code&gt;c&lt;/code&gt; harms performance. To write performant code involving types constructed at run-time, use the &lt;a href=&quot;#kernel-functions-1&quot;&gt;function-barrier technique&lt;/a&gt; discussed below, and ensure that the constructed type appears among the argument types of the kernel function so that the kernel operations are properly specialized by the compiler. For example, in the above snippet, as soon as &lt;code&gt;b&lt;/code&gt; is constructed, it can be passed to another function &lt;code&gt;k&lt;/code&gt;, the kernel. If, for example, function &lt;code&gt;k&lt;/code&gt; declares &lt;code&gt;b&lt;/code&gt; as an argument of type &lt;code&gt;Complex{T}&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; is a type parameter, then a type annotation appearing in an assignment statement within &lt;code&gt;k&lt;/code&gt; of the form:</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; 的注释会损害性能。要编写涉及在运行时构造的类型的性能代码，请使用下面讨论的&lt;a href=&quot;#kernel-functions-1&quot;&gt;功能屏障技术&lt;/a&gt;，并确保构造的类型出现在内核函数的参数类型中，以便编译器可以正确地对内核操作进行专门化。例如，在上面的代码段中，一旦 &lt;code&gt;b&lt;/code&gt; 被构造，就可以将其传递给另一个函数 &lt;code&gt;k&lt;/code&gt; ，即内核。例如，如果函数 &lt;code&gt;k&lt;/code&gt; 将 &lt;code&gt;b&lt;/code&gt; 声明为 &lt;code&gt;Complex{T}&lt;/code&gt; 类型的参数，其中 &lt;code&gt;T&lt;/code&gt; 是类型参数，则类型注释出现在 &lt;code&gt;k&lt;/code&gt; 的赋值语句中 形式：</target>
        </trans-unit>
        <trans-unit id="988ad18077e0862dcb64563f205890fd07e5b9de" translate="yes" xml:space="preserve">
          <source>the assignment &lt;code&gt;s = t&lt;/code&gt; occurs in a soft scope&amp;mdash;a &lt;code&gt;for&lt;/code&gt; loop outside of any function body or other hard scope construct</source>
          <target state="translated">赋值 &lt;code&gt;s = t&lt;/code&gt; 发生在软作用域中-任何函数体或其他硬作用域构造外部的 &lt;code&gt;for&lt;/code&gt; 循环</target>
        </trans-unit>
        <trans-unit id="436595594f7b3ba678ef4ceb45745da4b9fa5c11" translate="yes" xml:space="preserve">
          <source>the asterisk is used for multiplication, including matrix multiplication and &lt;a href=&quot;../../manual/strings/index#man-concatenation&quot;&gt;string concatenation&lt;/a&gt;</source>
          <target state="translated">星号用于乘法，包括矩阵乘法和&lt;a href=&quot;../../manual/strings/index#man-concatenation&quot;&gt;字符串连接&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="faebd07fe1d95b672f5f7ece7ed10c11353a52c7" translate="yes" xml:space="preserve">
          <source>the at-symbol invokes &lt;a href=&quot;../../manual/metaprogramming/index#man-macros&quot;&gt;macro&lt;/a&gt;&lt;code&gt;m&lt;/code&gt;; followed by space-separated expressions or a function-call-like argument list</source>
          <target state="translated">at符号将调用&lt;a href=&quot;../../manual/metaprogramming/index#man-macros&quot;&gt;宏&lt;/a&gt; &lt;code&gt;m&lt;/code&gt; ；后跟以空格分隔的表达式或类似函数调用的参数列表</target>
        </trans-unit>
        <trans-unit id="d90bcb816926429f9c46a77492a35be23e7258b1" translate="yes" xml:space="preserve">
          <source>the backtick character delimits &lt;a href=&quot;../../manual/running-external-programs/index#Running-External-Programs&quot;&gt;external process&lt;/a&gt; (&lt;a href=&quot;../base/index#Base.Cmd&quot;&gt;&lt;code&gt;Cmd&lt;/code&gt;&lt;/a&gt;) literals</source>
          <target state="translated">反引号字符分隔&lt;a href=&quot;../../manual/running-external-programs/index#Running-External-Programs&quot;&gt;外部进程&lt;/a&gt;（&lt;a href=&quot;../base/index#Base.Cmd&quot;&gt; &lt;code&gt;Cmd&lt;/code&gt; &lt;/a&gt;）文字</target>
        </trans-unit>
        <trans-unit id="01819c52d2573974dc3e26c573bf60f2bdc4a500" translate="yes" xml:space="preserve">
          <source>the captured substrings as an array of strings: &lt;code&gt;m.captures&lt;/code&gt;</source>
          <target state="translated">捕获的子字符串作为字符串数组： &lt;code&gt;m.captures&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a605ed62b7287f5b253f48b2d1fa4738f8aec4f" translate="yes" xml:space="preserve">
          <source>the caret is the exponentiation operator.</source>
          <target state="translated">小括号是指数运算符。</target>
        </trans-unit>
        <trans-unit id="7806a89d60927fcfbb7636188f084d780993c54b" translate="yes" xml:space="preserve">
          <source>the dollar sign is used for &lt;a href=&quot;../../manual/strings/index#string-interpolation&quot;&gt;string&lt;/a&gt; and &lt;a href=&quot;../../manual/metaprogramming/index#man-expression-interpolation&quot;&gt;expression&lt;/a&gt; interpolation</source>
          <target state="translated">美元符号用于&lt;a href=&quot;../../manual/strings/index#string-interpolation&quot;&gt;字符串&lt;/a&gt;和&lt;a href=&quot;../../manual/metaprogramming/index#man-expression-interpolation&quot;&gt;表达式&lt;/a&gt;插值</target>
        </trans-unit>
        <trans-unit id="c25857422238c45a73d0c481953ad4a58dfb9165" translate="yes" xml:space="preserve">
          <source>the empty tuple</source>
          <target state="translated">空元组</target>
        </trans-unit>
        <trans-unit id="ceb00341a5c9b97dd580525f8e85791819acb942" translate="yes" xml:space="preserve">
          <source>the entire substring matched: &lt;code&gt;m.match&lt;/code&gt;</source>
          <target state="translated">整个子串都匹配： &lt;code&gt;m.match&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4737c5485a5aff7b9d10d7972a6bed9e84642f57" translate="yes" xml:space="preserve">
          <source>the expression arguments, which may be symbols, other expressions, or literal values:</source>
          <target state="translated">表达式参数,可以是符号、其他表达式或文字值。</target>
        </trans-unit>
        <trans-unit id="020acaa24e728391c499a9bd03bfb711003dfda3" translate="yes" xml:space="preserve">
          <source>the identity operation</source>
          <target state="translated">身份运算</target>
        </trans-unit>
        <trans-unit id="48bea7937454a6fedb904f3d95adf75ba4924bff" translate="yes" xml:space="preserve">
          <source>the number of concurrent threads.</source>
          <target state="translated">并发线程的数量。</target>
        </trans-unit>
        <trans-unit id="d16073b1ce330ad61fe6cdd529c58b84932f2a9f" translate="yes" xml:space="preserve">
          <source>the number of dimensions of &lt;code&gt;A&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; 的维数</target>
        </trans-unit>
        <trans-unit id="7f53e6367fe97a43be0e0e3caec2fa169999a9e8" translate="yes" xml:space="preserve">
          <source>the number of elements in &lt;code&gt;A&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; 中的元素数</target>
        </trans-unit>
        <trans-unit id="eb64b345495c05b31138a2fde4bfeca6f62a1f95" translate="yes" xml:space="preserve">
          <source>the number of iterations between decimation steps is &lt;code&gt;10*n&lt;/code&gt;, and</source>
          <target state="translated">抽取步骤之间的迭代次数为 &lt;code&gt;10*n&lt;/code&gt; ，并且</target>
        </trans-unit>
        <trans-unit id="a55bdd4a5038a072a82bc6f67ecfc8fa511c9ce9" translate="yes" xml:space="preserve">
          <source>the number of pre-decimation iterations is &lt;code&gt;20*n&lt;/code&gt;,</source>
          <target state="translated">预抽取迭代次数为 &lt;code&gt;20*n&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="f7497afcdc9acd61139501d5285f87f97aabf12e" translate="yes" xml:space="preserve">
          <source>the number sign (or hash or pound) character begins single line comments</source>
          <target state="translated">数号字开头的单行注释</target>
        </trans-unit>
        <trans-unit id="731b624dd202dbba0b76bd6a3ef5db10085c6085" translate="yes" xml:space="preserve">
          <source>the offset at which the whole match begins: &lt;code&gt;m.offset&lt;/code&gt;</source>
          <target state="translated">整个比赛开始的偏移量： &lt;code&gt;m.offset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="11195647832b784d63a46af1e83c8672f91d9daa" translate="yes" xml:space="preserve">
          <source>the offsets of the captured substrings as a vector: &lt;code&gt;m.offsets&lt;/code&gt;</source>
          <target state="translated">捕获的子字符串的偏移量作为矢量： &lt;code&gt;m.offsets&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="00e2a7003109b2de10e5bcaab600a3ecc1d5326d" translate="yes" xml:space="preserve">
          <source>the percent symbol is the remainder operator</source>
          <target state="translated">百分号是余数运算符</target>
        </trans-unit>
        <trans-unit id="63e35143d1a5928de71acd5222648c8fb399914c" translate="yes" xml:space="preserve">
          <source>the question mark delimits the ternary conditional operator (used like: &lt;code&gt;conditional ? if_true : if_false&lt;/code&gt;)</source>
          <target state="translated">问号定界了三元条件运算符（用于： &lt;code&gt;conditional ? if_true : if_false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="04cfdd376c6df7321bbb4d51cbba924f2e95f7d4" translate="yes" xml:space="preserve">
          <source>the result of the multiplication</source>
          <target state="translated">乘法结果</target>
        </trans-unit>
        <trans-unit id="e6019de350470d81bd45c99e886accc3b6066ad4" translate="yes" xml:space="preserve">
          <source>the single double-quote character delimits &lt;code&gt;String&lt;/code&gt; literals</source>
          <target state="translated">单个双引号字符分隔 &lt;code&gt;String&lt;/code&gt; 文字</target>
        </trans-unit>
        <trans-unit id="35f9c97e6f33b04c34e0690c387606b7a2e4127f" translate="yes" xml:space="preserve">
          <source>the single-quote character delimits &lt;a href=&quot;../strings/index#Core.Char&quot;&gt;&lt;code&gt;Char&lt;/code&gt;&lt;/a&gt; (that is, character) literals</source>
          <target state="translated">单引号字符分隔&lt;a href=&quot;../strings/index#Core.Char&quot;&gt; &lt;code&gt;Char&lt;/code&gt; &lt;/a&gt;（即字符）文字</target>
        </trans-unit>
        <trans-unit id="fafb5fc0e92cdc1c75136a7dd5786fded074a53a" translate="yes" xml:space="preserve">
          <source>the size of &lt;code&gt;A&lt;/code&gt; along dimension &lt;code&gt;n&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; 沿尺寸 &lt;code&gt;n&lt;/code&gt; 的大小</target>
        </trans-unit>
        <trans-unit id="5ae08c3c77a227670a8214da7281d1d47bee320a" translate="yes" xml:space="preserve">
          <source>the squared magnitude of &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 的平方大小</target>
        </trans-unit>
        <trans-unit id="d2586b0c15fb6ca27d1f853e9eefb6877918f530" translate="yes" xml:space="preserve">
          <source>the stride (linear index distance between adjacent elements) along dimension &lt;code&gt;k&lt;/code&gt;</source>
          <target state="translated">沿尺寸 &lt;code&gt;k&lt;/code&gt; 的步幅（相邻元素之间的线性索引距离）</target>
        </trans-unit>
        <trans-unit id="098da2c5642bbc49db0a947bb8a2929d17070bba" translate="yes" xml:space="preserve">
          <source>the tilde is an operator for bitwise not</source>
          <target state="translated">斜线是位上不的运算符。</target>
        </trans-unit>
        <trans-unit id="18e22b3f918edcc0bbc24ee68a1aa1c1e713f527" translate="yes" xml:space="preserve">
          <source>the type of the elements contained in &lt;code&gt;A&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; 中包含的元素的类型</target>
        </trans-unit>
        <trans-unit id="859ca5a66e46ec125fa81af659f48e2ea46fa85c" translate="yes" xml:space="preserve">
          <source>the unicode xor character is bitwise exclusive or</source>
          <target state="translated">单码xor字符是位独占的或</target>
        </trans-unit>
        <trans-unit id="fe6a0b5a1f3803ee83a6c893ef6eee6a45bd8055" translate="yes" xml:space="preserve">
          <source>then the result of both &lt;code&gt;f()&lt;/code&gt; and &lt;code&gt;f(1,2)&lt;/code&gt; is &lt;code&gt;-3&lt;/code&gt;. In other words, optional arguments are tied to a function, not to any specific method of that function. It depends on the types of the optional arguments which method is invoked. When optional arguments are defined in terms of a global variable, the type of the optional argument may even change at run-time.</source>
          <target state="translated">那么 &lt;code&gt;f()&lt;/code&gt; 和 &lt;code&gt;f(1,2)&lt;/code&gt; 的结果都是 &lt;code&gt;-3&lt;/code&gt; 。换句话说，可选参数绑定到一个函数，而不是该函数的任何特定方法。它取决于调用哪个方法的可选参数的类型。当根据全局变量定义可选参数时，可选参数的类型甚至可能在运行时更改。</target>
        </trans-unit>
        <trans-unit id="d3fb5866d0475ec4a9756fa6dd1f32495b0a6e48" translate="yes" xml:space="preserve">
          <source>therefore the second clause of the soft scope rule applies, and the assignment is ambiguous so a warning is emitted</source>
          <target state="translated">因此,软范围规则的第二个子句适用,并且该赋值是模棱两可的,因此发出警告</target>
        </trans-unit>
        <trans-unit id="1dcd621dc2bcae0ca2c5088924d0e2cbc6cacc9c" translate="yes" xml:space="preserve">
          <source>this argument may be declared as &lt;code&gt;Ptr{Cvoid}&lt;/code&gt;, if it really is just an unknown pointer</source>
          <target state="translated">如果该参数确实只是一个未知的指针，则可以将其声明为 &lt;code&gt;Ptr{Cvoid}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a195d09941d0ae068a489c8e4e5a045ff8beeee" translate="yes" xml:space="preserve">
          <source>thisind()</source>
          <target state="translated">thisind()</target>
        </trans-unit>
        <trans-unit id="5b92b385647abb40b80ad6715394b5526c8f4cae" translate="yes" xml:space="preserve">
          <source>three double-quote characters delimits string literals that may contain &lt;code&gt;&quot;&lt;/code&gt; and ignore leading indentation</source>
          <target state="translated">三个双引号字符分隔可能包含 &lt;code&gt;&quot;&lt;/code&gt; 字符串文字，并忽略前导缩进</target>
        </trans-unit>
        <trans-unit id="3e871d614155403445e3c23063c3064b464b3ae7" translate="yes" xml:space="preserve">
          <source>time_ns()</source>
          <target state="translated">time_ns()</target>
        </trans-unit>
        <trans-unit id="4a4cf63e9a3827b405a25e7a6fd8e2ba63a4896f" translate="yes" xml:space="preserve">
          <source>timedwait()</source>
          <target state="translated">timedwait()</target>
        </trans-unit>
        <trans-unit id="7196b5875f713c826bd279dbda843c897e2a60c2" translate="yes" xml:space="preserve">
          <source>times</source>
          <target state="translated">times</target>
        </trans-unit>
        <trans-unit id="9ee74b06d98f4df74ff9a1966edad73891635060" translate="yes" xml:space="preserve">
          <source>to control whether additional optimizations, such as inlining, are also applied.</source>
          <target state="translated">来控制是否也应用了额外的优化,如内联。</target>
        </trans-unit>
        <trans-unit id="7cd14a5b0eb884cf15dcee18098409ecafa0740e" translate="yes" xml:space="preserve">
          <source>to let &lt;code&gt;InterruptException&lt;/code&gt; be thrown by CTRL+C during the execution.</source>
          <target state="translated">在执行过程中让CTRL + C引发 &lt;code&gt;InterruptException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bba1fcd8d1f0ae5acba7569b22cc1dbf033808c4" translate="yes" xml:space="preserve">
          <source>to open &lt;code&gt;hello.txt&lt;/code&gt;, call &lt;code&gt;read_and_capitalize&lt;/code&gt; on it, close &lt;code&gt;hello.txt&lt;/code&gt; and return the capitalized contents.</source>
          <target state="translated">打开 &lt;code&gt;hello.txt&lt;/code&gt; ，对其调用 &lt;code&gt;read_and_capitalize&lt;/code&gt; ，关闭 &lt;code&gt;hello.txt&lt;/code&gt; 并返回大写的内容。</target>
        </trans-unit>
        <trans-unit id="13759a9deb1a661c076c98b909644ec30075918e" translate="yes" xml:space="preserve">
          <source>to_indices()</source>
          <target state="translated">to_indices()</target>
        </trans-unit>
        <trans-unit id="7788e2e58767ac7e47aa7cbe2832dae49bc22301" translate="yes" xml:space="preserve">
          <source>trailing_ones()</source>
          <target state="translated">trailing_ones()</target>
        </trans-unit>
        <trans-unit id="c831ee95c7881c3685c0ab3dc75558210849f125" translate="yes" xml:space="preserve">
          <source>trailing_zeros()</source>
          <target state="translated">trailing_zeros()</target>
        </trans-unit>
        <trans-unit id="7c0c1f749450029eda0f551aecb3637cc7c0859f" translate="yes" xml:space="preserve">
          <source>transcode()</source>
          <target state="translated">transcode()</target>
        </trans-unit>
        <trans-unit id="a1dc34fe0df04524fc788cd6c40f56c5f21d75b9" translate="yes" xml:space="preserve">
          <source>translates to the following three methods:</source>
          <target state="translated">翻译成以下三种方法。</target>
        </trans-unit>
        <trans-unit id="77199886e52b61c5d1ccbb30d0279ed65e4462f8" translate="yes" xml:space="preserve">
          <source>transpose()</source>
          <target state="translated">transpose()</target>
        </trans-unit>
        <trans-unit id="f99db702b62d5e1c53906b9f72b4c49a434618b7" translate="yes" xml:space="preserve">
          <source>triple equals sign is programmatically identical equality comparison.</source>
          <target state="translated">三等号是程序上相同的平等比较。</target>
        </trans-unit>
        <trans-unit id="d7d16efca7210757397ffc6da7cc650ca8ab34e9" translate="yes" xml:space="preserve">
          <source>triple periods are a postfix operator that &quot;splat&quot; their arguments' contents into many arguments of a function call or declare a varargs function that &quot;slurps&quot; up many arguments into a single tuple</source>
          <target state="translated">triple periods是一个后缀操作符,它将自己的参数内容 &quot;拼接 &quot;到一个函数调用的许多参数中,或者声明一个varargs函数,将许多参数 &quot;拼接 &quot;成一个元组</target>
        </trans-unit>
        <trans-unit id="7a9b8415dc4e2cc70f6451918328231cec9d5a4a" translate="yes" xml:space="preserve">
          <source>trues()</source>
          <target state="translated">trues()</target>
        </trans-unit>
        <trans-unit id="47c5490a8d16f837e4ce254e3dc4c796cfe8df46" translate="yes" xml:space="preserve">
          <source>trunc()</source>
          <target state="translated">trunc()</target>
        </trans-unit>
        <trans-unit id="9ec92b29764982c40cfa79ff2db5456eb84a6dda" translate="yes" xml:space="preserve">
          <source>truncate to zero size</source>
          <target state="translated">截断为零</target>
        </trans-unit>
        <trans-unit id="5e2d60a263a2e00568df060496284b2b5e854280" translate="yes" xml:space="preserve">
          <source>truncate()</source>
          <target state="translated">truncate()</target>
        </trans-unit>
        <trans-unit id="a481aa41e2caf72d654ae1dd73133c9e52053d62" translate="yes" xml:space="preserve">
          <source>truncated division; quotient rounded towards zero</source>
          <target state="translated">四舍五入</target>
        </trans-unit>
        <trans-unit id="3240aa0fe3ca15051680641a59e8d7b61c286b23" translate="yes" xml:space="preserve">
          <source>try</source>
          <target state="translated">try</target>
        </trans-unit>
        <trans-unit id="7278a0415952220ca017b3d335042233736cce0a" translate="yes" xml:space="preserve">
          <source>trylock()</source>
          <target state="translated">trylock()</target>
        </trans-unit>
        <trans-unit id="41c43ee5d53850593a94dd76017fa90370f9c102" translate="yes" xml:space="preserve">
          <source>tryparse()</source>
          <target state="translated">tryparse()</target>
        </trans-unit>
        <trans-unit id="2f7b93c0386c631641f8f92257bd529fe872ecaa" translate="yes" xml:space="preserve">
          <source>type annotation or &lt;a href=&quot;../base/index#Core.typeassert&quot;&gt;&lt;code&gt;typeassert&lt;/code&gt;&lt;/a&gt;, depending on context</source>
          <target state="translated">类型注解或&lt;a href=&quot;../base/index#Core.typeassert&quot;&gt; &lt;code&gt;typeassert&lt;/code&gt; &lt;/a&gt;，取决于上下文</target>
        </trans-unit>
        <trans-unit id="cd51e01913753f2fb03ffbbabcdc6033bf3a6bd8" translate="yes" xml:space="preserve">
          <source>type of factorization</source>
          <target state="translated">因式分解</target>
        </trans-unit>
        <trans-unit id="cb182e160c0e90271959d1f994e0bb1284713939" translate="yes" xml:space="preserve">
          <source>typeintersect()</source>
          <target state="translated">typeintersect()</target>
        </trans-unit>
        <trans-unit id="7b13356535ad16de419b3afda138f6679daccff5" translate="yes" xml:space="preserve">
          <source>typejoin()</source>
          <target state="translated">typejoin()</target>
        </trans-unit>
        <trans-unit id="5536167b693bea3ebde9f64dab417b4020c752b3" translate="yes" xml:space="preserve">
          <source>typemax()</source>
          <target state="translated">typemax()</target>
        </trans-unit>
        <trans-unit id="eec3342de313b527b3fcc326b91e3eeebe5f85a9" translate="yes" xml:space="preserve">
          <source>typemin()</source>
          <target state="translated">typemin()</target>
        </trans-unit>
        <trans-unit id="e2577dd78b54fe28c65ee56ffbc8bb73058e08c0" translate="yes" xml:space="preserve">
          <source>uid</source>
          <target state="translated">uid</target>
        </trans-unit>
        <trans-unit id="758c496d534277408b682dc8b9c08c8a825413e7" translate="yes" xml:space="preserve">
          <source>unary minus</source>
          <target state="translated">单元减法</target>
        </trans-unit>
        <trans-unit id="18130f1c3863f5bed8e2f9f254b2a9f47674720e" translate="yes" xml:space="preserve">
          <source>unary plus</source>
          <target state="translated">单数加</target>
        </trans-unit>
        <trans-unit id="677d22571fca287bf5ef4fe60796fd4c927ca753" translate="yes" xml:space="preserve">
          <source>unescape_string()</source>
          <target state="translated">unescape_string()</target>
        </trans-unit>
        <trans-unit id="136ec8b273cf128aebdc5db926403114782bef5c" translate="yes" xml:space="preserve">
          <source>union!()</source>
          <target state="translated">union!()</target>
        </trans-unit>
        <trans-unit id="2e8908b3cdee33b534d127186598475d50ce186e" translate="yes" xml:space="preserve">
          <source>union()</source>
          <target state="translated">union()</target>
        </trans-unit>
        <trans-unit id="cfaeaa40c1243b5a1e8db00278a2637584b78787" translate="yes" xml:space="preserve">
          <source>unique!()</source>
          <target state="translated">unique!()</target>
        </trans-unit>
        <trans-unit id="ae34f349ec58d253d92368dbb29ae0efcd294126" translate="yes" xml:space="preserve">
          <source>unique()</source>
          <target state="translated">unique()</target>
        </trans-unit>
        <trans-unit id="7e68b3e55f3a6d9469a5f8e6a5d75546b7ad77ad" translate="yes" xml:space="preserve">
          <source>unlock()</source>
          <target state="translated">unlock()</target>
        </trans-unit>
        <trans-unit id="fcf914babeb6b2a0e6bb452fcf35bbd55c6192ed" translate="yes" xml:space="preserve">
          <source>unmark()</source>
          <target state="translated">unmark()</target>
        </trans-unit>
        <trans-unit id="b0da1a5c342bd0f3a9386e254493e0b2fd1d3af5" translate="yes" xml:space="preserve">
          <source>unsafe_convert()</source>
          <target state="translated">unsafe_convert()</target>
        </trans-unit>
        <trans-unit id="04794056fabb705194bb1cc292a1658b33c2a3c2" translate="yes" xml:space="preserve">
          <source>unsafe_copyto!()</source>
          <target state="translated">unsafe_copyto!()</target>
        </trans-unit>
        <trans-unit id="e623bb12adfd13cfcc7a61b76fdd2e28a152e84a" translate="yes" xml:space="preserve">
          <source>unsafe_load()</source>
          <target state="translated">unsafe_load()</target>
        </trans-unit>
        <trans-unit id="8ed884aac607517a17d4c5f54f67370502868849" translate="yes" xml:space="preserve">
          <source>unsafe_pointer_to_objref()</source>
          <target state="translated">unsafe_pointer_to_objref()</target>
        </trans-unit>
        <trans-unit id="1b6923256bd63c2f08153ee3050b67ec6f3288bd" translate="yes" xml:space="preserve">
          <source>unsafe_read()</source>
          <target state="translated">unsafe_read()</target>
        </trans-unit>
        <trans-unit id="eeb79e86ed80aabdb9c4c09ab540d05426553432" translate="yes" xml:space="preserve">
          <source>unsafe_store!()</source>
          <target state="translated">unsafe_store!()</target>
        </trans-unit>
        <trans-unit id="5d32c5e23cee843dd920a5bbd0d8cd5b9409108a" translate="yes" xml:space="preserve">
          <source>unsafe_string()</source>
          <target state="translated">unsafe_string()</target>
        </trans-unit>
        <trans-unit id="6d8b0d61a411aa97f972aeaa486f8a15aa414b2f" translate="yes" xml:space="preserve">
          <source>unsafe_trunc()</source>
          <target state="translated">unsafe_trunc()</target>
        </trans-unit>
        <trans-unit id="12944b8ae3a4470946963ba6ba222a11ac1c073f" translate="yes" xml:space="preserve">
          <source>unsafe_wrap()</source>
          <target state="translated">unsafe_wrap()</target>
        </trans-unit>
        <trans-unit id="753c9b1d9843750b91b6e60c30700b15fd76a04c" translate="yes" xml:space="preserve">
          <source>unsafe_write()</source>
          <target state="translated">unsafe_write()</target>
        </trans-unit>
        <trans-unit id="20e9798119dc97581ef037ec4e4a2b9df666511d" translate="yes" xml:space="preserve">
          <source>unsigned()</source>
          <target state="translated">unsigned()</target>
        </trans-unit>
        <trans-unit id="22a9162614678a3c513de681b3cd5ae493372369" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;(key =&amp;gt; value) in dict&lt;/code&gt; to see if this particular combination is in the properties set</source>
          <target state="translated">&lt;code&gt;(key =&amp;gt; value) in dict&lt;/code&gt; 使用（key =&amp;gt; value）来查看此特定组合是否在属性集中</target>
        </trans-unit>
        <trans-unit id="2a3768f6d89a8e751bd221364d14351a0e004dfc" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;(key =&amp;gt; value) in io&lt;/code&gt; to see if this particular combination is in the properties set</source>
          <target state="translated">&lt;code&gt;(key =&amp;gt; value) in io&lt;/code&gt; 使用（key =&amp;gt; value）来查看此特定组合是否在属性集中</target>
        </trans-unit>
        <trans-unit id="f5de890b4c2434373683fcfb16ebb84070f0167e" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;get(dict, key, default)&lt;/code&gt; to retrieve the most recent value for a particular key</source>
          <target state="translated">使用 &lt;code&gt;get(dict, key, default)&lt;/code&gt; 检索特定键的最新值</target>
        </trans-unit>
        <trans-unit id="7cdc1e6b2bfb955ef0e39af907125bae23d94faa" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;get(io, key, default)&lt;/code&gt; to retrieve the most recent value for a particular key</source>
          <target state="translated">使用 &lt;code&gt;get(io, key, default)&lt;/code&gt; 检索特定键的最新值</target>
        </trans-unit>
        <trans-unit id="0d57c3cb335cbcd6be4a00d2b3759c640eb0d722" translate="yes" xml:space="preserve">
          <source>use:</source>
          <target state="translated">use:</target>
        </trans-unit>
        <trans-unit id="92bd75ebd8fd2b0179172217b15350cc6d4002f0" translate="yes" xml:space="preserve">
          <source>using</source>
          <target state="translated">using</target>
        </trans-unit>
        <trans-unit id="bdde25acdf3b143559de245d7f0b016ac269efd9" translate="yes" xml:space="preserve">
          <source>using so-called triangular dispatch. Note that if &lt;code&gt;T&lt;/code&gt; is a &lt;code&gt;UnionAll&lt;/code&gt; type, as e.g. &lt;code&gt;eltype(Array{T} where T &amp;lt;: Integer)&lt;/code&gt;, then &lt;code&gt;Any&lt;/code&gt; is returned (as does the the version of &lt;code&gt;eltype&lt;/code&gt; in &lt;code&gt;Base&lt;/code&gt;).</source>
          <target state="translated">使用所谓的三角调度。注意，如果 &lt;code&gt;T&lt;/code&gt; 是 &lt;code&gt;UnionAll&lt;/code&gt; 类型，如例如 &lt;code&gt;eltype(Array{T} where T &amp;lt;: Integer)&lt;/code&gt; ，则 &lt;code&gt;Any&lt;/code&gt; 被返回（如确实的所述的版本 &lt;code&gt;eltype&lt;/code&gt; 在 &lt;code&gt;Base&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d112982a0859b09b84eb1276f515a5503450a007" translate="yes" xml:space="preserve">
          <source>using so-called triangular dispatch. Note that if &lt;code&gt;T&lt;/code&gt; is a &lt;code&gt;UnionAll&lt;/code&gt; type, as e.g. &lt;code&gt;eltype(Array{T} where T &amp;lt;: Integer)&lt;/code&gt;, then &lt;code&gt;Any&lt;/code&gt; is returned (as does the version of &lt;code&gt;eltype&lt;/code&gt; in &lt;code&gt;Base&lt;/code&gt;).</source>
          <target state="translated">使用所谓的三角调度。注意，如果 &lt;code&gt;T&lt;/code&gt; 是 &lt;code&gt;UnionAll&lt;/code&gt; 类型，如例如 &lt;code&gt;eltype(Array{T} where T &amp;lt;: Integer)&lt;/code&gt; ，则 &lt;code&gt;Any&lt;/code&gt; 被返回（如确实的版本 &lt;code&gt;eltype&lt;/code&gt; 在 &lt;code&gt;Base&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="db8216295e19f73a12e1cbcea3f4f1726b6027ea" translate="yes" xml:space="preserve">
          <source>valtype()</source>
          <target state="translated">valtype()</target>
        </trans-unit>
        <trans-unit id="e28357700f15fb0774e5a47c6c8abe8eac68b036" translate="yes" xml:space="preserve">
          <source>values()</source>
          <target state="translated">values()</target>
        </trans-unit>
        <trans-unit id="4aed5af63973c7b914bc59d95579570b589cbab1" translate="yes" xml:space="preserve">
          <source>vcat()</source>
          <target state="translated">vcat()</target>
        </trans-unit>
        <trans-unit id="124161ba296060b3e40682494a6d237a735e6ae4" translate="yes" xml:space="preserve">
          <source>vec()</source>
          <target state="translated">vec()</target>
        </trans-unit>
        <trans-unit id="9dd5e88a5f7c4eca666838cb52b1040289f471a4" translate="yes" xml:space="preserve">
          <source>vect()</source>
          <target state="translated">vect()</target>
        </trans-unit>
        <trans-unit id="340f66d6e4f65de3c6d1cf8c35141a3ce50b072b" translate="yes" xml:space="preserve">
          <source>vector literal constructor (calling &lt;a href=&quot;../arrays/index#Base.vect&quot;&gt;&lt;code&gt;vect&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">向量文字构造函数（调用&lt;a href=&quot;../arrays/index#Base.vect&quot;&gt; &lt;code&gt;vect&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="d1add0059bf8e9b747aba843af8d9a92c234489d" translate="yes" xml:space="preserve">
          <source>versus:</source>
          <target state="translated">versus:</target>
        </trans-unit>
        <trans-unit id="01f7cd315d21a0633301e03c1840b62cfc3aead0" translate="yes" xml:space="preserve">
          <source>vertical concatenation (calling &lt;a href=&quot;../arrays/index#Base.vcat&quot;&gt;&lt;code&gt;vcat&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../arrays/index#Base.hvcat&quot;&gt;&lt;code&gt;hvcat&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">垂直串联（调用&lt;a href=&quot;../arrays/index#Base.vcat&quot;&gt; &lt;code&gt;vcat&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../arrays/index#Base.hvcat&quot;&gt; &lt;code&gt;hvcat&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="2540eae99824b579af30b949d544a727b977425b" translate="yes" xml:space="preserve">
          <source>view()</source>
          <target state="translated">view()</target>
        </trans-unit>
        <trans-unit id="e1a58852a14e3a9968e89097ccb1fc37f2deba01" translate="yes" xml:space="preserve">
          <source>vim</source>
          <target state="translated">vim</target>
        </trans-unit>
        <trans-unit id="9e93ac058e1980d1215570ce1313bbdabed8e756" translate="yes" xml:space="preserve">
          <source>wait()</source>
          <target state="translated">wait()</target>
        </trans-unit>
        <trans-unit id="22fdd9dbe2a80515f7175db2051a2a772fe1b782" translate="yes" xml:space="preserve">
          <source>when followed by an equals sign, it begins a multi-line comment (these are nestable)</source>
          <target state="translated">当后面跟着等号时,它开始一个多行注释(这些都是可以嵌套的)。</target>
        </trans-unit>
        <trans-unit id="776a0715b5ab9a5376704158cc88fa6270227233" translate="yes" xml:space="preserve">
          <source>when used by themselves, &lt;a href=&quot;../arrays/index#Base.Colon&quot;&gt;&lt;code&gt;Colon&lt;/code&gt;&lt;/a&gt;s represent all indices within a dimension, frequently combined with &lt;a href=&quot;../../manual/arrays/index#man-array-indexing&quot;&gt;indexing&lt;/a&gt;</source>
          <target state="translated">单独使用时，&lt;a href=&quot;../arrays/index#Base.Colon&quot;&gt; &lt;code&gt;Colon&lt;/code&gt; &lt;/a&gt;表示一个维度内的所有索引，通常与&lt;a href=&quot;../../manual/arrays/index#man-array-indexing&quot;&gt;索引&lt;/a&gt;结合使用</target>
        </trans-unit>
        <trans-unit id="46148cc3b4d2b3ac8073f14b0cba7f25ffff54bd" translate="yes" xml:space="preserve">
          <source>where</source>
          <target state="translated">where</target>
        </trans-unit>
        <trans-unit id="34fb9ba9d8fac98ea09e572c3340e096bf2cc8d6" translate="yes" xml:space="preserve">
          <source>where $P$ is a permutation matrix, $Q$ is an orthogonal/unitary matrix and $R$ is upper triangular. The matrix $Q$ is stored as a sequence of Householder reflectors:</source>
          <target state="translated">其中$P$为换元矩阵,$Q$为正交/统一矩阵,$R$为上三角矩阵。矩阵$Q$被存储为Householder反射器序列。</target>
        </trans-unit>
        <trans-unit id="137c60ddb142aab3fec70959ba85d8153b3bf521" translate="yes" xml:space="preserve">
          <source>where $Q$ is an orthogonal/unitary matrix and $R$ is upper triangular. It is similar to the &lt;a href=&quot;#LinearAlgebra.QR&quot;&gt;&lt;code&gt;QR&lt;/code&gt;&lt;/a&gt; format except that the orthogonal/unitary matrix $Q$ is stored in &lt;em&gt;Compact WY&lt;/em&gt; format &lt;a href=&quot;#footnote-Schreiber1989&quot;&gt;[Schreiber1989]&lt;/a&gt;, as a lower trapezoidal matrix $V$ and an upper triangular matrix $T$ where</source>
          <target state="translated">其中$ Q $是正交/ unit矩阵，而$ R $是上三角。它与&lt;a href=&quot;#LinearAlgebra.QR&quot;&gt; &lt;code&gt;QR&lt;/code&gt; &lt;/a&gt;格式相似，不同之处在于正交/ matrix矩阵$ Q $以&lt;em&gt;紧凑WY&lt;/em&gt;格式&lt;a href=&quot;#footnote-Schreiber1989&quot;&gt;[Schreiber1989]&lt;/a&gt;存储为下梯形矩阵$ V $和上三角矩阵$ T $，其中</target>
        </trans-unit>
        <trans-unit id="6723b465f6ca8d66ff2fbba4c92042596f4e6fa5" translate="yes" xml:space="preserve">
          <source>where $Q$ is an orthogonal/unitary matrix and $R$ is upper triangular. It is similar to the &lt;a href=&quot;#LinearAlgebra.QR&quot;&gt;&lt;code&gt;QR&lt;/code&gt;&lt;/a&gt; format except that the orthogonal/unitary matrix $Q$ is stored in &lt;em&gt;Compact WY&lt;/em&gt; format &lt;sup&gt;&lt;a href=&quot;#footnote-Schreiber1989&quot; id=&quot;citeref-Schreiber1989&quot;&gt;[Schreiber1989]&lt;/a&gt;&lt;/sup&gt;. For the block size $n_b$, it is stored as a &lt;code&gt;m&lt;/code&gt;&amp;times;&lt;code&gt;n&lt;/code&gt; lower trapezoidal matrix $V$ and a matrix $T = (T_1 \; T_2 \; ... \; T_{b-1} \; T_b')$ composed of $b = \lceil \min(m,n) / n_b \rceil$ upper triangular matrices $T_j$ of size $n_b$&amp;times;$n_b$ ($j = 1, ..., b-1$) and an upper trapezoidal $n_b$&amp;times;$\min(m,n) - (b-1) n_b$ matrix $T_b'$ ($j=b$) whose upper square part denoted with $T_b$ satisfying</source>
          <target state="translated">其中$ Q $是正交/ unit矩阵，而$ R $是上三角。除了将正交/ format矩阵$ Q $存储为&lt;em&gt;Compact WY&lt;/em&gt;格式&lt;sup&gt;&lt;a href=&quot;#footnote-Schreiber1989&quot; id=&quot;citeref-Schreiber1989&quot;&gt;[Schreiber1989]&lt;/a&gt;&lt;/sup&gt;外，它与&lt;a href=&quot;#LinearAlgebra.QR&quot;&gt; &lt;code&gt;QR&lt;/code&gt; &lt;/a&gt;格式相似。对于块大小$ n_b $，将其存储为 &lt;code&gt;m&lt;/code&gt; &amp;times; &lt;code&gt;n&lt;/code&gt; 下梯形矩阵$ V $和矩阵$ T =（T_1 \; T_2 \; ... \; T_ {b-1} \; T_b' ）$由$ b = \ lceil \ min（m，n）/ n_b \ rceil $组成的上三角矩阵$ T_j $大小为$ n_b $&amp;times;$ n_b $（$ j = 1，...，b-1 $ ）和上梯形$ n_b $&amp;times;$ \ min（m，n）-（b-1）n_b $矩阵$ T_b'$（$ j = b $），其上方形部分用$ T_b $表示&lt;em&gt;&lt;/em&gt;&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="271b48427e6205ef07892138c063438cb11ed204" translate="yes" xml:space="preserve">
          <source>where $Q$ is an orthogonal/unitary matrix and $R$ is upper triangular. The matrix $Q$ is stored as a sequence of Householder reflectors $v_i$ and coefficients $\tau_i$ where:</source>
          <target state="translated">其中$Q$为正交/统一矩阵,$R$为上三角矩阵。矩阵$Q$被存储为Householder反射器$v_i$和系数$tau_i$的序列,其中:</target>
        </trans-unit>
        <trans-unit id="8355b735636a304572ad86122287ef87f63b294d" translate="yes" xml:space="preserve">
          <source>where $n!$ is the &lt;a href=&quot;#Base.factorial&quot;&gt;&lt;code&gt;factorial&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">其中$ n！$是&lt;a href=&quot;#Base.factorial&quot;&gt; &lt;code&gt;factorial&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="855325c120c56936b38921fd53ddb9a4d5849144" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;Style12&lt;/code&gt; is the &lt;code&gt;BroadcastStyle&lt;/code&gt; you want to choose for outputs involving arguments of &lt;code&gt;Style1&lt;/code&gt; and &lt;code&gt;Style2&lt;/code&gt;. For example,</source>
          <target state="translated">其中， &lt;code&gt;Style12&lt;/code&gt; 是要为涉及 &lt;code&gt;Style1&lt;/code&gt; 和 &lt;code&gt;Style2&lt;/code&gt; 的参数的输出选择的 &lt;code&gt;BroadcastStyle&lt;/code&gt; 。例如，</target>
        </trans-unit>
        <trans-unit id="dd436a68bc4b8b94b90c7900a0e752ea732ba502" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;channel&lt;/code&gt; contains free worker pids and &lt;code&gt;workers&lt;/code&gt; is the set of all workers associated with this pool.</source>
          <target state="translated">其中 &lt;code&gt;channel&lt;/code&gt; 包含免费的worker pid，而 &lt;code&gt;workers&lt;/code&gt; 是与此池关联的所有worker的集合。</target>
        </trans-unit>
        <trans-unit id="c70d2a0f59da10b096022394f7a5e4792ab558bc" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;g&lt;/code&gt; converts the argument to type &lt;code&gt;A&lt;/code&gt;. This is a very specific example of the more general principle of &lt;a href=&quot;https://en.wikipedia.org/wiki/Orthogonality_(programming)&quot;&gt;orthogonal design&lt;/a&gt;, in which separate concepts are assigned to separate methods. Here, &lt;code&gt;g&lt;/code&gt; will most likely need a fallback definition</source>
          <target state="translated">其中 &lt;code&gt;g&lt;/code&gt; 将参数转换为 &lt;code&gt;A&lt;/code&gt; 类型。这是&lt;a href=&quot;https://en.wikipedia.org/wiki/Orthogonality_(programming)&quot;&gt;正交设计&lt;/a&gt;更一般原理的一个非常具体的示例，其中将单独的概念分配给单独的方法。在这里， &lt;code&gt;g&lt;/code&gt; 很可能需要后备定义</target>
        </trans-unit>
        <trans-unit id="9417cbae16d955617f8601e64303e7fe7d136bbf" translate="yes" xml:space="preserve">
          <source>where each &lt;code&gt;I_k&lt;/code&gt; may be a scalar integer, an array of integers, or any other &lt;a href=&quot;#man-supported-index-types&quot;&gt;supported index&lt;/a&gt;. This includes &lt;a href=&quot;../../base/arrays/index#Base.Colon&quot;&gt;&lt;code&gt;Colon&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;:&lt;/code&gt;) to select all indices within the entire dimension, ranges of the form &lt;code&gt;a:c&lt;/code&gt; or &lt;code&gt;a:b:c&lt;/code&gt; to select contiguous or strided subsections, and arrays of booleans to select elements at their &lt;code&gt;true&lt;/code&gt; indices.</source>
          <target state="translated">其中每个 &lt;code&gt;I_k&lt;/code&gt; 可以是标量整数，整数数组或任何其他&lt;a href=&quot;#man-supported-index-types&quot;&gt;受支持的index&lt;/a&gt;。这包括&lt;a href=&quot;../../base/arrays/index#Base.Colon&quot;&gt; &lt;code&gt;Colon&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;:&lt;/code&gt; ）来选择整个尺寸内的所有指数，形式的范围 &lt;code&gt;a:c&lt;/code&gt; 或 &lt;code&gt;a:b:c&lt;/code&gt; 选择连续的或跨距小节，和布尔值的数组来选择在它们的元素 &lt;code&gt;true&lt;/code&gt; 指数。</target>
        </trans-unit>
        <trans-unit id="cdae2ef96323fc6c78a050482307af52736d7e10" translate="yes" xml:space="preserve">
          <source>where each &lt;code&gt;I_k&lt;/code&gt; may be a scalar integer, an array of integers, or any other &lt;a href=&quot;#man-supported-index-types-1&quot;&gt;supported index&lt;/a&gt;. This includes &lt;a href=&quot;../../base/arrays/index#Base.Colon&quot;&gt;&lt;code&gt;Colon&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;:&lt;/code&gt;) to select all indices within the entire dimension, ranges of the form &lt;code&gt;a:c&lt;/code&gt; or &lt;code&gt;a:b:c&lt;/code&gt; to select contiguous or strided subsections, and arrays of booleans to select elements at their &lt;code&gt;true&lt;/code&gt; indices.</source>
          <target state="translated">其中每个 &lt;code&gt;I_k&lt;/code&gt; 可以是标量整数，整数数组或任何其他&lt;a href=&quot;#man-supported-index-types-1&quot;&gt;受支持的index&lt;/a&gt;。这包括&lt;a href=&quot;../../base/arrays/index#Base.Colon&quot;&gt; &lt;code&gt;Colon&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;:&lt;/code&gt; ）来选择整个尺寸内的所有指数，形式的范围 &lt;code&gt;a:c&lt;/code&gt; 或 &lt;code&gt;a:b:c&lt;/code&gt; 选择连续的或跨距小节，和布尔值的数组来选择在它们的元素 &lt;code&gt;true&lt;/code&gt; 指数。</target>
        </trans-unit>
        <trans-unit id="177f9426726633817d84506fce6903d99bd17e13" translate="yes" xml:space="preserve">
          <source>where in this example &lt;code&gt;x&lt;/code&gt; is assumed to be an integer.</source>
          <target state="translated">在此示例中， &lt;code&gt;x&lt;/code&gt; 假定为整数。</target>
        </trans-unit>
        <trans-unit id="3ead2d5c23b0fdb65e4340d1008980c4f65ff264" translate="yes" xml:space="preserve">
          <source>where the single-line &lt;code&gt;show(io, z)&lt;/code&gt; form is still used for an array of &lt;code&gt;Polar&lt;/code&gt; values. Technically, the REPL calls &lt;code&gt;display(z)&lt;/code&gt; to display the result of executing a line, which defaults to &lt;code&gt;show(stdout, MIME(&quot;text/plain&quot;), z)&lt;/code&gt;, which in turn defaults to &lt;code&gt;show(stdout, z)&lt;/code&gt;, but you should &lt;em&gt;not&lt;/em&gt; define new &lt;a href=&quot;../../base/io-network/index#Base.Multimedia.display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; methods unless you are defining a new multimedia display handler (see &lt;a href=&quot;../../base/io-network/index#Multimedia-I/O&quot;&gt;Multimedia I/O&lt;/a&gt;).</source>
          <target state="translated">单行 &lt;code&gt;show(io, z)&lt;/code&gt; 形式仍用于 &lt;code&gt;Polar&lt;/code&gt; 值数组。从技术上讲，REPL调用 &lt;code&gt;display(z)&lt;/code&gt; 来显示执行一行的结果，该行默认为 &lt;code&gt;show(stdout, MIME(&quot;text/plain&quot;), z)&lt;/code&gt; ，而该行又默认为 &lt;code&gt;show(stdout, z)&lt;/code&gt; ，但是你应该&lt;em&gt;不&lt;/em&gt;定义新的&lt;a href=&quot;../../base/io-network/index#Base.Multimedia.display&quot;&gt; &lt;code&gt;display&lt;/code&gt; &lt;/a&gt;，除非你要定义一个新的多媒体显示处理器（参见方法&lt;a href=&quot;../../base/io-network/index#Multimedia-I/O&quot;&gt;多媒体I / O&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0af1a34a13c2285f49317a51d95a48c7a2aa4bcf" translate="yes" xml:space="preserve">
          <source>where the single-line &lt;code&gt;show(io, z)&lt;/code&gt; form is still used for an array of &lt;code&gt;Polar&lt;/code&gt; values. Technically, the REPL calls &lt;code&gt;display(z)&lt;/code&gt; to display the result of executing a line, which defaults to &lt;code&gt;show(stdout, MIME(&quot;text/plain&quot;), z)&lt;/code&gt;, which in turn defaults to &lt;code&gt;show(stdout, z)&lt;/code&gt;, but you should &lt;em&gt;not&lt;/em&gt; define new &lt;a href=&quot;../../base/io-network/index#Base.Multimedia.display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; methods unless you are defining a new multimedia display handler (see &lt;a href=&quot;../../base/io-network/index#Multimedia-I/O-1&quot;&gt;Multimedia I/O&lt;/a&gt;).</source>
          <target state="translated">单行 &lt;code&gt;show(io, z)&lt;/code&gt; 形式仍用于 &lt;code&gt;Polar&lt;/code&gt; 值数组。从技术上讲，REPL调用 &lt;code&gt;display(z)&lt;/code&gt; 来显示执行一行的结果，该行默认为 &lt;code&gt;show(stdout, MIME(&quot;text/plain&quot;), z)&lt;/code&gt; ，而该行又默认为 &lt;code&gt;show(stdout, z)&lt;/code&gt; ，但是你应该&lt;em&gt;不&lt;/em&gt;定义新的&lt;a href=&quot;../../base/io-network/index#Base.Multimedia.display&quot;&gt; &lt;code&gt;display&lt;/code&gt; &lt;/a&gt;，除非你要定义一个新的多媒体显示处理器（参见方法&lt;a href=&quot;../../base/io-network/index#Multimedia-I/O-1&quot;&gt;多媒体I / O&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="9c3df251180b11fdf0c9f86de18b55c8a6fdf3c2" translate="yes" xml:space="preserve">
          <source>where the user would like to enforce that the third type parameter is always the second plus one. This can be implemented with an explicit type parameter that is checked by an &lt;a href=&quot;../constructors/index#man-inner-constructor-methods&quot;&gt;inner constructor method&lt;/a&gt; (where it can be combined with other checks):</source>
          <target state="translated">用户希望强制第三个类型参数始终是第二个加一个。这可以通过&lt;a href=&quot;../constructors/index#man-inner-constructor-methods&quot;&gt;内部构造函数方法&lt;/a&gt;检查的显式类型参数来实现（可以与其他检查结合使用）：</target>
        </trans-unit>
        <trans-unit id="7f4501e8498edba57fc348e9d80207c08af61177" translate="yes" xml:space="preserve">
          <source>which creates an &lt;code&gt;N&lt;/code&gt;-dimensional shared array of a bits type &lt;code&gt;T&lt;/code&gt; and size &lt;code&gt;dims&lt;/code&gt; across the processes specified by &lt;code&gt;pids&lt;/code&gt;. Unlike distributed arrays, a shared array is accessible only from those participating workers specified by the &lt;code&gt;pids&lt;/code&gt; named argument (and the creating process too, if it is on the same host).</source>
          <target state="translated">它创建一个 &lt;code&gt;N&lt;/code&gt; 一个比特的维共享数组类型 &lt;code&gt;T&lt;/code&gt; 和尺寸 &lt;code&gt;dims&lt;/code&gt; 横跨由指定的过程 &lt;code&gt;pids&lt;/code&gt; 。与分布式阵列不同，共享阵列只能由 &lt;code&gt;pids&lt;/code&gt; 命名参数指定的参与工作人员访问（如果位于同一主机上，则创建过程也是如此）。</target>
        </trans-unit>
        <trans-unit id="f987f4a9e19b8f678f1aef0bf49d4ffd6c4c2854" translate="yes" xml:space="preserve">
          <source>which creates an &lt;code&gt;N&lt;/code&gt;-dimensional shared array of a bits type &lt;code&gt;T&lt;/code&gt; and size &lt;code&gt;dims&lt;/code&gt; across the processes specified by &lt;code&gt;pids&lt;/code&gt;. Unlike distributed arrays, a shared array is accessible only from those participating workers specified by the &lt;code&gt;pids&lt;/code&gt; named argument (and the creating process too, if it is on the same host). Note that only elements that are &lt;a href=&quot;../../base/base/index#Base.isbits&quot;&gt;&lt;code&gt;isbits&lt;/code&gt;&lt;/a&gt; are supported in a SharedArray.</source>
          <target state="translated">它创建一个 &lt;code&gt;N&lt;/code&gt; 维的共享数组，该数组的类型为 &lt;code&gt;T&lt;/code&gt; ,并且在 &lt;code&gt;pids&lt;/code&gt; 指定的进程中大小为 &lt;code&gt;dims&lt;/code&gt; 。与分布式阵列不同，共享阵列只能由 &lt;code&gt;pids&lt;/code&gt; 命名参数指定的参与工作人员访问（如果位于同一主机上，则创建过程也是如此）。请注意，&lt;a href=&quot;../../base/base/index#Base.isbits&quot;&gt; &lt;code&gt;isbits&lt;/code&gt; &lt;/a&gt;仅支持isbits元素。</target>
        </trans-unit>
        <trans-unit id="06197b097d460035a7421f22ae0edf1273ad442a" translate="yes" xml:space="preserve">
          <source>which shows that &lt;code&gt;f&lt;/code&gt; has two methods, one taking two &lt;code&gt;Float64&lt;/code&gt; arguments and one taking arguments of type &lt;code&gt;Number&lt;/code&gt;. It also indicates the file and line number where the methods were defined: because these methods were defined at the REPL, we get the apparent line number &lt;code&gt;none:1&lt;/code&gt;.</source>
          <target state="translated">这表明 &lt;code&gt;f&lt;/code&gt; 有两种方法，一种采用两个 &lt;code&gt;Float64&lt;/code&gt; 参数，另一种采用 &lt;code&gt;Number&lt;/code&gt; 类型的参数。它还指出了定义方法的文件和行号：由于这些方法是在REPL上定义的，因此我们得到的表观行号 &lt;code&gt;none:1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="384dc2245204ebe009b11b92a50317c5564f59bb" translate="yes" xml:space="preserve">
          <source>which()</source>
          <target state="translated">which()</target>
        </trans-unit>
        <trans-unit id="6517f89c46c3f0d6db9cb009b8c7d1f98c371fa0" translate="yes" xml:space="preserve">
          <source>while</source>
          <target state="translated">while</target>
        </trans-unit>
        <trans-unit id="83bd8cc777d3f72dac7b7db05de6bc0ee27de51a" translate="yes" xml:space="preserve">
          <source>while the intent of this code was to give every instance a unique id, the counter value is recorded at the end of compilation. All subsequent usages of this incrementally compiled module will start from that same counter value.</source>
          <target state="translated">虽然这段代码的目的是给每个实例一个唯一的id,但计数器的值是在编译结束时记录的。这个增量编译模块的所有后续使用将从同一个计数器值开始。</target>
        </trans-unit>
        <trans-unit id="823a97466ac43dd2db67512d3b69cc44723c399f" translate="yes" xml:space="preserve">
          <source>while this will return after reading all data:</source>
          <target state="translated">而这将在读取所有数据后返回。</target>
        </trans-unit>
        <trans-unit id="c2d9b68e9160d2897aabc374abe1bd3482a68397" translate="yes" xml:space="preserve">
          <source>widemul()</source>
          <target state="translated">widemul()</target>
        </trans-unit>
        <trans-unit id="6e7d42e89f4f7892e0ce75a579725b8e137ed9d4" translate="yes" xml:space="preserve">
          <source>widen()</source>
          <target state="translated">widen()</target>
        </trans-unit>
        <trans-unit id="fc96e7108ecfd46919583c9217ce0ff278f3cbe3" translate="yes" xml:space="preserve">
          <source>will add documentation to &lt;code&gt;f(x)&lt;/code&gt; when &lt;code&gt;condition()&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;. Note that even if &lt;code&gt;f(x)&lt;/code&gt; goes out of scope at the end of the block, its documentation will remain.</source>
          <target state="translated">当 &lt;code&gt;condition()&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 时，将向 &lt;code&gt;f(x)&lt;/code&gt; 添加文档。请注意，即使 &lt;code&gt;f(x)&lt;/code&gt; 在块末尾超出范围，其文档仍将保留。</target>
        </trans-unit>
        <trans-unit id="c3684e4e7a7b8f6918ab5912b8e42df007242749" translate="yes" xml:space="preserve">
          <source>will be used to draw the values.</source>
          <target state="translated">将用于绘制数值。</target>
        </trans-unit>
        <trans-unit id="a10f9127d2a0125e7ec792df26ef4562e1fff1c3" translate="yes" xml:space="preserve">
          <source>will behave as if it were written like this:</source>
          <target state="translated">会像这样写。</target>
        </trans-unit>
        <trans-unit id="dee75a48d0fcdb32606d8735b8e702be25df89bd" translate="yes" xml:space="preserve">
          <source>will behave as if the following were written:</source>
          <target state="translated">将会像下面写的那样。</target>
        </trans-unit>
        <trans-unit id="9834b5627c0bafa92bfdec2b0dbdd3c92ace5566" translate="yes" xml:space="preserve">
          <source>will bring up docs for the relevant function, macro or string macro respectively. In &lt;a href=&quot;http://junolab.org&quot;&gt;Juno&lt;/a&gt; using &lt;code&gt;Ctrl-J, Ctrl-D&lt;/code&gt; will bring up documentation for the object under the cursor.</source>
          <target state="translated">将分别针对相关功能（宏或字符串宏）显示文档。在使用 &lt;code&gt;Ctrl-J, Ctrl-D&lt;/code&gt; &lt;a href=&quot;http://junolab.org&quot;&gt;Juno中&lt;/a&gt;，Ctrl-D将调出光标下方对象的文档。</target>
        </trans-unit>
        <trans-unit id="0ac7db3037e3a12214a49a925618eddf06e1149c" translate="yes" xml:space="preserve">
          <source>will contain a literal newline at the beginning.</source>
          <target state="translated">将在开头包含一个新行。</target>
        </trans-unit>
        <trans-unit id="f8fba9318c6c5b1be2f94f8449a3379be7407511" translate="yes" xml:space="preserve">
          <source>will define &lt;code&gt;Main.bar&lt;/code&gt; on all current processes. Any processes added later (say with &lt;a href=&quot;#Distributed.addprocs&quot;&gt;&lt;code&gt;addprocs()&lt;/code&gt;&lt;/a&gt;) will not have the expression defined.</source>
          <target state="translated">将在所有当前进程上定义 &lt;code&gt;Main.bar&lt;/code&gt; 。以后添加的任何进程（例如，使用&lt;a href=&quot;#Distributed.addprocs&quot;&gt; &lt;code&gt;addprocs()&lt;/code&gt; &lt;/a&gt;）都不会定义该表达式。</target>
        </trans-unit>
        <trans-unit id="69a371f57470b06bb202ab7e22caf42c862f8178" translate="yes" xml:space="preserve">
          <source>will define &lt;code&gt;Main.bar&lt;/code&gt; on all processes.</source>
          <target state="translated">将在所有进程上定义 &lt;code&gt;Main.bar&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8808b97c2d9b51b588bd1d0c41fff5ceb0df66b6" translate="yes" xml:space="preserve">
          <source>will produce no output by default. Furthermore, it's very cheap to leave debug statements like this in the source code because the system avoids evaluating the message if it would later be ignored. In this case &lt;code&gt;sum(rand(100))&lt;/code&gt; and the associated string processing will never be executed unless debug logging is enabled.</source>
          <target state="translated">默认情况下不会产生任何输出。此外，在源代码中保留这样的调试语句非常便宜，因为如果以后将其忽略，系统将避免评估该消息。在这种情况下，除非启用调试日志记录，否则将永远不会执行 &lt;code&gt;sum(rand(100))&lt;/code&gt; 和关联的字符串处理。</target>
        </trans-unit>
        <trans-unit id="c07b56fc7623497c040a3998cea81fbcb7b0c786" translate="yes" xml:space="preserve">
          <source>will show documentation for the relevant function, macro or string macro respectively. In &lt;a href=&quot;http://junolab.org&quot;&gt;Juno&lt;/a&gt; using &lt;code&gt;Ctrl-J, Ctrl-D&lt;/code&gt; will show the documentation for the object under the cursor.</source>
          <target state="translated">将分别显示有关函数，宏或字符串宏的文档。在使用 &lt;code&gt;Ctrl-J, Ctrl-D&lt;/code&gt; &lt;a href=&quot;http://junolab.org&quot;&gt;Juno中&lt;/a&gt;，Ctrl-D将显示光标下方对象的文档。</target>
        </trans-unit>
        <trans-unit id="8fcd25a39d2037183044a8897e9a5333d727fded" translate="yes" xml:space="preserve">
          <source>with</source>
          <target state="translated">with</target>
        </trans-unit>
        <trans-unit id="3e768a3608de2d5007cc4d6ec545f0838a3d1575" translate="yes" xml:space="preserve">
          <source>with $a_i$ the entries of $A$, $| a_i |$ the &lt;a href=&quot;#LinearAlgebra.norm&quot;&gt;&lt;code&gt;norm&lt;/code&gt;&lt;/a&gt; of $a_i$, and $n$ the length of $A$. Since the &lt;code&gt;p&lt;/code&gt;-norm is computed using the &lt;a href=&quot;#LinearAlgebra.norm&quot;&gt;&lt;code&gt;norm&lt;/code&gt;&lt;/a&gt;s of the entries of &lt;code&gt;A&lt;/code&gt;, the &lt;code&gt;p&lt;/code&gt;-norm of a vector of vectors is not compatible with the interpretation of it as a block vector in general if &lt;code&gt;p != 2&lt;/code&gt;.</source>
          <target state="translated">$ a_i $中的$ A $，$ | a_i | $ &lt;a href=&quot;#LinearAlgebra.norm&quot;&gt; &lt;code&gt;norm&lt;/code&gt; &lt;/a&gt;为$ a_i $，$ n $为$ A $的长度。由于 &lt;code&gt;p&lt;/code&gt; &lt;a href=&quot;#LinearAlgebra.norm&quot;&gt; &lt;code&gt;norm&lt;/code&gt; &lt;/a&gt;是使用 &lt;code&gt;A&lt;/code&gt; 的条目的范数 s 计算的，因此，如果 &lt;code&gt;p != 2&lt;/code&gt; ，则向量的 &lt;code&gt;p&lt;/code&gt; 范数通常与将其解释为块矢量不兼容。</target>
        </trans-unit>
        <trans-unit id="bb5db82c589404cb5826c44547be1e512d284cc2" translate="yes" xml:space="preserve">
          <source>with $a_{ij}$ the entries of $A$, and $m$ and $n$ its dimensions.</source>
          <target state="translated">与$a_{ij}$为$A$的条目,$m$和$n$为其维度。</target>
        </trans-unit>
        <trans-unit id="dd997c206d4a358bcb5c54d59d3b2a1a080b2b2f" translate="yes" xml:space="preserve">
          <source>with &lt;code&gt;:finalize&lt;/code&gt; for cleanup purposes.</source>
          <target state="translated">用 &lt;code&gt;:finalize&lt;/code&gt; 进行清理。</target>
        </trans-unit>
        <trans-unit id="8c2e17dd0844f7de42207483b2aa5ba00116738b" translate="yes" xml:space="preserve">
          <source>with &lt;code&gt;:interrupt&lt;/code&gt; when &lt;code&gt;interrupt(workers)&lt;/code&gt; is called. The &lt;code&gt;ClusterManager&lt;/code&gt; should signal the appropriate worker with an interrupt signal.</source>
          <target state="translated">当调用 &lt;code&gt;interrupt(workers)&lt;/code&gt; 时使用 &lt;code&gt;:interrupt&lt;/code&gt; 。该 &lt;code&gt;ClusterManager&lt;/code&gt; 应发出适当的工人与一个中断信号。</target>
        </trans-unit>
        <trans-unit id="bff89dc6928dea23c6df7046cf0d8972a6eba71d" translate="yes" xml:space="preserve">
          <source>with &lt;code&gt;:register&lt;/code&gt;/&lt;code&gt;:deregister&lt;/code&gt; when a worker is added / removed from the Julia worker pool.</source>
          <target state="translated">当从Julia工作池中添加/删除工作时，使用 &lt;code&gt;:register&lt;/code&gt; / &lt;code&gt;:deregister&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4a3a980b5b133718ef60a9d188936f7f92bcc05" translate="yes" xml:space="preserve">
          <source>with a Julia variable named &lt;code&gt;s&lt;/code&gt;. See also &lt;code&gt;ccall&lt;/code&gt;.</source>
          <target state="translated">带有一个名为 &lt;code&gt;s&lt;/code&gt; 的Julia变量。另请参阅 &lt;code&gt;ccall&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3088d32d944d8dafc299d08016e355e35574bb8" translate="yes" xml:space="preserve">
          <source>with space-separated expressions, &lt;a href=&quot;../../manual/strings/index#man-concatenation&quot;&gt;horizontal concatenation&lt;/a&gt; (calling &lt;a href=&quot;../arrays/index#Base.hcat&quot;&gt;&lt;code&gt;hcat&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../arrays/index#Base.hvcat&quot;&gt;&lt;code&gt;hvcat&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">用空格分隔的表达式，&lt;a href=&quot;../../manual/strings/index#man-concatenation&quot;&gt;水平串联&lt;/a&gt;（调用&lt;a href=&quot;../arrays/index#Base.hcat&quot;&gt; &lt;code&gt;hcat&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../arrays/index#Base.hvcat&quot;&gt; &lt;code&gt;hvcat&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="78ad80b8134ad4a30ebd3e1930c3b677aeb8ad18" translate="yes" xml:space="preserve">
          <source>with space-separated expressions, horizontal concatenation (calling &lt;a href=&quot;../arrays/index#Base.hcat&quot;&gt;&lt;code&gt;hcat&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../arrays/index#Base.hvcat&quot;&gt;&lt;code&gt;hvcat&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">用空格分隔的表达式，水平并置（调用&lt;a href=&quot;../arrays/index#Base.hcat&quot;&gt; &lt;code&gt;hcat&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../arrays/index#Base.hvcat&quot;&gt; &lt;code&gt;hvcat&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="222d955f99f198b29958fbc5aef2609abf2158d1" translate="yes" xml:space="preserve">
          <source>withenv()</source>
          <target state="translated">withenv()</target>
        </trans-unit>
        <trans-unit id="6099266d825c6c162132606d75f3dd9d3faa1ed5" translate="yes" xml:space="preserve">
          <source>without any intermediate rounding. This internally uses a high precision approximation of 2&amp;pi;, and so will give a more accurate result than &lt;code&gt;rem(x,2&amp;pi;,r)&lt;/code&gt;</source>
          <target state="translated">没有任何中间舍入。这在内部使用2&amp;pi;的高精度近似值，因此比 &lt;code&gt;rem(x,2&amp;pi;,r)&lt;/code&gt; 给出的结果更准确。</target>
        </trans-unit>
        <trans-unit id="2f110eccce96d55e8d248c96993b01db23fec5e8" translate="yes" xml:space="preserve">
          <source>would be called only when the number of &lt;code&gt;indices&lt;/code&gt; matches the dimensionality of the array.</source>
          <target state="translated">仅当 &lt;code&gt;indices&lt;/code&gt; 数与数组的维数匹配时才调用。</target>
        </trans-unit>
        <trans-unit id="5fc38453777c1e9863ca470c8d830a8ddfbee742" translate="yes" xml:space="preserve">
          <source>would create a 1-dimensional logical array whose indices match those of the columns of &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">将创建一维逻辑数组，其索引与 &lt;code&gt;A&lt;/code&gt; 的列的索引匹配。</target>
        </trans-unit>
        <trans-unit id="39e3eb719df88bb6f160975d5c920004c42891d1" translate="yes" xml:space="preserve">
          <source>would result in undefined behavior. Because each process fills the &lt;em&gt;entire&lt;/em&gt; array with its own &lt;code&gt;pid&lt;/code&gt;, whichever process is the last to execute (for any particular element of &lt;code&gt;S&lt;/code&gt;) will have its &lt;code&gt;pid&lt;/code&gt; retained.</source>
          <target state="translated">会导致不确定的行为。因为每个进程都用自己的 &lt;code&gt;pid&lt;/code&gt; 填充&lt;em&gt;整个&lt;/em&gt;数组，所以最后一个要执行的进程（对于 &lt;code&gt;S&lt;/code&gt; 的任何特定元素）都将保留其 &lt;code&gt;pid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e1d0c6c1c29e6ad5164072a5b21340dca7fcb052" translate="yes" xml:space="preserve">
          <source>write</source>
          <target state="translated">write</target>
        </trans-unit>
        <trans-unit id="5de411b2dda339b0ce1a755f5330ad3016d850f9" translate="yes" xml:space="preserve">
          <source>write()</source>
          <target state="translated">write()</target>
        </trans-unit>
        <trans-unit id="13eb4030829828610421254be5b100a6b61a9327" translate="yes" xml:space="preserve">
          <source>write, create, append</source>
          <target state="translated">撰、创、附</target>
        </trans-unit>
        <trans-unit id="cfba454c7b4e21a0a04ece068decbb58a702171c" translate="yes" xml:space="preserve">
          <source>write, create, truncate</source>
          <target state="translated">编写、创建、截断</target>
        </trans-unit>
        <trans-unit id="aca26504177be1b0c1aaeeaa4475996b3d42d09a" translate="yes" xml:space="preserve">
          <source>x / y, truncated to an integer</source>
          <target state="translated">x/y,截断为一个整数。</target>
        </trans-unit>
        <trans-unit id="f2f74ca895be673bfc57d3858976ee6559234751" translate="yes" xml:space="preserve">
          <source>xor()</source>
          <target state="translated">xor()</target>
        </trans-unit>
        <trans-unit id="012e2bcef67005516d5db65fb07bb62eba1888a5" translate="yes" xml:space="preserve">
          <source>yield()</source>
          <target state="translated">yield()</target>
        </trans-unit>
        <trans-unit id="d1e41170a6218f407429ed81f732ecae6a85b294" translate="yes" xml:space="preserve">
          <source>yieldto()</source>
          <target state="translated">yieldto()</target>
        </trans-unit>
        <trans-unit id="4c16dfac187ad24d14839c3f1b64e15f695394ab" translate="yes" xml:space="preserve">
          <source>you might consider defining</source>
          <target state="translated">你可以考虑定义</target>
        </trans-unit>
        <trans-unit id="baa731d4399c567b16a22499653f008af0c5435c" translate="yes" xml:space="preserve">
          <source>zero()</source>
          <target state="translated">zero()</target>
        </trans-unit>
        <trans-unit id="79d235be83a5d4f98d5b49d6f1182f8ced20d050" translate="yes" xml:space="preserve">
          <source>zeros()</source>
          <target state="translated">zeros()</target>
        </trans-unit>
        <trans-unit id="22dbbc7ac593d2d2a04b9a6544bfda7b717eb884" translate="yes" xml:space="preserve">
          <source>|&amp;gt;()</source>
          <target state="translated">|&amp;gt;()</target>
        </trans-unit>
        <trans-unit id="afa7365a0055813e19fa92757db1e415d3592773" translate="yes" xml:space="preserve">
          <source>|()</source>
          <target state="translated">|()</target>
        </trans-unit>
        <trans-unit id="c65f37b2cb1ae26c89e9b4f26e2ca9e9cde4ae5b" translate="yes" xml:space="preserve">
          <source>||</source>
          <target state="translated">||</target>
        </trans-unit>
        <trans-unit id="45eb824075dd5fa38d66fc13168e009c5b986b9c" translate="yes" xml:space="preserve">
          <source>~()</source>
          <target state="translated">~()</target>
        </trans-unit>
        <trans-unit id="e1191b5206ebba999100013c567b352ad98083a2" translate="yes" xml:space="preserve">
          <source>Đ</source>
          <target state="translated">Đ</target>
        </trans-unit>
        <trans-unit id="c5f95801dfa6112ef38d7c6db4c7c5c71d021f57" translate="yes" xml:space="preserve">
          <source>đ</source>
          <target state="translated">đ</target>
        </trans-unit>
        <trans-unit id="ffb63bca89157732100fcdc015e85805b3b5620f" translate="yes" xml:space="preserve">
          <source>ħ</source>
          <target state="translated">ħ</target>
        </trans-unit>
        <trans-unit id="d44c997953a510d72d50e873ff273de2f5e4cf77" translate="yes" xml:space="preserve">
          <source>ı</source>
          <target state="translated">ı</target>
        </trans-unit>
        <trans-unit id="91ab76893a9954572453fee00f2161fbc1b3f9ca" translate="yes" xml:space="preserve">
          <source>Ł</source>
          <target state="translated">Ł</target>
        </trans-unit>
        <trans-unit id="d8d824647b9ebeea3ede7cf0f9f5d2405881bf20" translate="yes" xml:space="preserve">
          <source>ł</source>
          <target state="translated">ł</target>
        </trans-unit>
        <trans-unit id="3cee499ae346dbda4134783c2a2f290a673f3ab0" translate="yes" xml:space="preserve">
          <source>Ŋ</source>
          <target state="translated">Ŋ</target>
        </trans-unit>
        <trans-unit id="0a7f9417062a74a4877e03e7bedacdc16a4901de" translate="yes" xml:space="preserve">
          <source>ŋ</source>
          <target state="translated">ŋ</target>
        </trans-unit>
        <trans-unit id="7e70aadb54aef74ab97bf2931befa2729c3ff390" translate="yes" xml:space="preserve">
          <source>ƕ</source>
          <target state="translated">ƕ</target>
        </trans-unit>
        <trans-unit id="272badf63be1d07838830695e6e94cef64a0797c" translate="yes" xml:space="preserve">
          <source>ƞ</source>
          <target state="translated">ƞ</target>
        </trans-unit>
        <trans-unit id="e3ebbe0e3bb2263f0ce6df2a6fe03721f4ddfc2e" translate="yes" xml:space="preserve">
          <source>Ƶ</source>
          <target state="translated">Ƶ</target>
        </trans-unit>
        <trans-unit id="e1ea0b51d6b02eb546710216ab0a5bf917f1afae" translate="yes" xml:space="preserve">
          <source>ǂ</source>
          <target state="translated">ǂ</target>
        </trans-unit>
        <trans-unit id="b8143d2c9e5ff22e05415e0f48cc68cfc199049b" translate="yes" xml:space="preserve">
          <source>ȷ</source>
          <target state="translated">ȷ</target>
        </trans-unit>
        <trans-unit id="b95a6c6f39702608e3384661653a2a330406b667" translate="yes" xml:space="preserve">
          <source>ɐ</source>
          <target state="translated">ɐ</target>
        </trans-unit>
        <trans-unit id="e68f656296091e06672e00acd47b876925a8bec2" translate="yes" xml:space="preserve">
          <source>ɒ</source>
          <target state="translated">ɒ</target>
        </trans-unit>
        <trans-unit id="988b6afcbcc021156127d5c4c9bdffe5e98e2b70" translate="yes" xml:space="preserve">
          <source>ɔ</source>
          <target state="translated">ɔ</target>
        </trans-unit>
        <trans-unit id="abb18c91c6de38c3e312042261ce2c4670ccb199" translate="yes" xml:space="preserve">
          <source>ɖ</source>
          <target state="translated">ɖ</target>
        </trans-unit>
        <trans-unit id="21764b9984b917e8675160b387863d044154cd4b" translate="yes" xml:space="preserve">
          <source>ə</source>
          <target state="translated">ə</target>
        </trans-unit>
        <trans-unit id="2f2572674fc9146bfbba98c802b12dc033a8e4a3" translate="yes" xml:space="preserve">
          <source>ɣ</source>
          <target state="translated">ɣ</target>
        </trans-unit>
        <trans-unit id="b77269ae1d54c39e080e7d9183c991284bafcf95" translate="yes" xml:space="preserve">
          <source>ɤ</source>
          <target state="translated">ɤ</target>
        </trans-unit>
        <trans-unit id="52bb711beffddd24256500e12629c5a41ffb714c" translate="yes" xml:space="preserve">
          <source>ɥ</source>
          <target state="translated">ɥ</target>
        </trans-unit>
        <trans-unit id="27a52805284e75cc2dc150f91dc2d511f13f212e" translate="yes" xml:space="preserve">
          <source>ɬ</source>
          <target state="translated">ɬ</target>
        </trans-unit>
        <trans-unit id="d843f1f7f36d79df57e10d3752a7ba847da4efc1" translate="yes" xml:space="preserve">
          <source>ɭ</source>
          <target state="translated">ɭ</target>
        </trans-unit>
        <trans-unit id="f89b871af47d617920100c81e9fed0cc57581297" translate="yes" xml:space="preserve">
          <source>ɯ</source>
          <target state="translated">ɯ</target>
        </trans-unit>
        <trans-unit id="0fb7f81a54d0e3ba6b9ced493dcc00e6d51859f2" translate="yes" xml:space="preserve">
          <source>ɰ</source>
          <target state="translated">ɰ</target>
        </trans-unit>
        <trans-unit id="4328a458bc7493df9f42d3ac2e35dbafbbb0d364" translate="yes" xml:space="preserve">
          <source>ɱ</source>
          <target state="translated">ɱ</target>
        </trans-unit>
        <trans-unit id="86358cd139780191db08d1b76224815f59d8f6d3" translate="yes" xml:space="preserve">
          <source>ɲ</source>
          <target state="translated">ɲ</target>
        </trans-unit>
        <trans-unit id="cebe66b26d5db90abedad71d95aad8b8bd26e696" translate="yes" xml:space="preserve">
          <source>ɳ</source>
          <target state="translated">ɳ</target>
        </trans-unit>
        <trans-unit id="158243bb6fbe50f401c41a7dddf5553de78c7ca3" translate="yes" xml:space="preserve">
          <source>ɷ</source>
          <target state="translated">ɷ</target>
        </trans-unit>
        <trans-unit id="97ea28a832b2b50e33f4045951e1aecd31afc31f" translate="yes" xml:space="preserve">
          <source>ɸ</source>
          <target state="translated">ɸ</target>
        </trans-unit>
        <trans-unit id="49c31a08447dccac6431c75ebf49c5fd6b0206ea" translate="yes" xml:space="preserve">
          <source>ɹ</source>
          <target state="translated">ɹ</target>
        </trans-unit>
        <trans-unit id="70f94386093d0e8552101b5eef0eea3c8b7e1aa1" translate="yes" xml:space="preserve">
          <source>ɺ</source>
          <target state="translated">ɺ</target>
        </trans-unit>
        <trans-unit id="75cd50660f948c30e6d536a654a3079c8a7c18ab" translate="yes" xml:space="preserve">
          <source>ɻ</source>
          <target state="translated">ɻ</target>
        </trans-unit>
        <trans-unit id="7f927afbc94abb84e5075bb4e40675eaf5337aef" translate="yes" xml:space="preserve">
          <source>ɼ</source>
          <target state="translated">ɼ</target>
        </trans-unit>
        <trans-unit id="58c580e3cfd158b13184d1bb92ec5e1db84473e8" translate="yes" xml:space="preserve">
          <source>ɽ</source>
          <target state="translated">ɽ</target>
        </trans-unit>
        <trans-unit id="10b35048cf4838a005220fcb125f9f94acf96115" translate="yes" xml:space="preserve">
          <source>ɾ</source>
          <target state="translated">ɾ</target>
        </trans-unit>
        <trans-unit id="6740a17390d66472ba28b21e987197e989a09a04" translate="yes" xml:space="preserve">
          <source>ʂ</source>
          <target state="translated">ʂ</target>
        </trans-unit>
        <trans-unit id="e9bf95eaf9eb902c50a834efb3086f226dbdf2f4" translate="yes" xml:space="preserve">
          <source>ʃ</source>
          <target state="translated">ʃ</target>
        </trans-unit>
        <trans-unit id="24e8b9eab357859d09e1a245e220279dd06dc889" translate="yes" xml:space="preserve">
          <source>ʇ</source>
          <target state="translated">ʇ</target>
        </trans-unit>
        <trans-unit id="f74da9badf2d3bba971ed60073dbd2da6ce8b917" translate="yes" xml:space="preserve">
          <source>ʈ</source>
          <target state="translated">ʈ</target>
        </trans-unit>
        <trans-unit id="ab68230804dd38eda8d56643fa0aa44735ef9c63" translate="yes" xml:space="preserve">
          <source>ʊ</source>
          <target state="translated">ʊ</target>
        </trans-unit>
        <trans-unit id="1ba1330ba29664adb44ecfc5eabfc6e3bb743894" translate="yes" xml:space="preserve">
          <source>ʋ</source>
          <target state="translated">ʋ</target>
        </trans-unit>
        <trans-unit id="2a9516f7abb5a917cebd59259bebb21d23a89b6e" translate="yes" xml:space="preserve">
          <source>ʌ</source>
          <target state="translated">ʌ</target>
        </trans-unit>
        <trans-unit id="43396494eda2c185360c1bee3525764e663c4da3" translate="yes" xml:space="preserve">
          <source>ʍ</source>
          <target state="translated">ʍ</target>
        </trans-unit>
        <trans-unit id="7b4dbc0b083cb1d9d223165bb5d2a43a81048278" translate="yes" xml:space="preserve">
          <source>ʎ</source>
          <target state="translated">ʎ</target>
        </trans-unit>
        <trans-unit id="dc0da2429933e0b33def135316212b229e7ec2ca" translate="yes" xml:space="preserve">
          <source>ʐ</source>
          <target state="translated">ʐ</target>
        </trans-unit>
        <trans-unit id="3fadbe7e8762635016797a4cbc90c129a315cba3" translate="yes" xml:space="preserve">
          <source>ʒ</source>
          <target state="translated">ʒ</target>
        </trans-unit>
        <trans-unit id="c58653dacd6ccabe588e5708a8893f021dd1959a" translate="yes" xml:space="preserve">
          <source>ʔ</source>
          <target state="translated">ʔ</target>
        </trans-unit>
        <trans-unit id="03a4b26c05c47fb2806234cb3f3b91100e2aa667" translate="yes" xml:space="preserve">
          <source>ʕ</source>
          <target state="translated">ʕ</target>
        </trans-unit>
        <trans-unit id="4df3eddb4817e269496c50f999734d73ec2a2d06" translate="yes" xml:space="preserve">
          <source>ʖ</source>
          <target state="translated">ʖ</target>
        </trans-unit>
        <trans-unit id="79e75b69d1eda38d3b5c04def578ef3d3e91029c" translate="yes" xml:space="preserve">
          <source>ʞ</source>
          <target state="translated">ʞ</target>
        </trans-unit>
        <trans-unit id="420cab64d29cdb38987cbdea5f82f3602880c1d1" translate="yes" xml:space="preserve">
          <source>ʤ</source>
          <target state="translated">ʤ</target>
        </trans-unit>
        <trans-unit id="32d82310f121c7b69b7589bb06632caa1c345eff" translate="yes" xml:space="preserve">
          <source>ʧ</source>
          <target state="translated">ʧ</target>
        </trans-unit>
        <trans-unit id="a0ff7a5ee1ca27e9030228c36bb91945efa96a41" translate="yes" xml:space="preserve">
          <source>ʰ</source>
          <target state="translated">ʰ</target>
        </trans-unit>
        <trans-unit id="2ec05fb829612e44f26ddcfc7368750b7144cd38" translate="yes" xml:space="preserve">
          <source>ʲ</source>
          <target state="translated">ʲ</target>
        </trans-unit>
        <trans-unit id="7f28568530281d85dd98eb64bc022adaed3fcda7" translate="yes" xml:space="preserve">
          <source>ʳ</source>
          <target state="translated">ʳ</target>
        </trans-unit>
        <trans-unit id="544b2cb294511bc954130827748625f8686b8212" translate="yes" xml:space="preserve">
          <source>ʷ</source>
          <target state="translated">ʷ</target>
        </trans-unit>
        <trans-unit id="fcf45722b39c2b10eb5ba23075b579a0322ddef5" translate="yes" xml:space="preserve">
          <source>ʸ</source>
          <target state="translated">ʸ</target>
        </trans-unit>
        <trans-unit id="e5833a60f2285d3db4cd84db00c8fa5061e4f3df" translate="yes" xml:space="preserve">
          <source>ʼ</source>
          <target state="translated">ʼ</target>
        </trans-unit>
        <trans-unit id="bdcbe2efb7306180be27a5db9525124c1ecf9768" translate="yes" xml:space="preserve">
          <source>ˈ</source>
          <target state="translated">ˈ</target>
        </trans-unit>
        <trans-unit id="549733e16053d5d344d7d3b3ce26e923e37c94eb" translate="yes" xml:space="preserve">
          <source>ˌ</source>
          <target state="translated">ˌ</target>
        </trans-unit>
        <trans-unit id="ff567497ec79d965247f1c9dd0df4f1f7ddd53d5" translate="yes" xml:space="preserve">
          <source>ː</source>
          <target state="translated">ː</target>
        </trans-unit>
        <trans-unit id="0e9a0dd2f18ea2083de4925df3414cad3933068c" translate="yes" xml:space="preserve">
          <source>ˑ</source>
          <target state="translated">ˑ</target>
        </trans-unit>
        <trans-unit id="2c16c750ef4271d16dff516de9c5270bcfb8ffbe" translate="yes" xml:space="preserve">
          <source>˒</source>
          <target state="translated">˒</target>
        </trans-unit>
        <trans-unit id="1b8fc2fee622658116bb0a2f71b3efa4c3c238e7" translate="yes" xml:space="preserve">
          <source>˓</source>
          <target state="translated">˓</target>
        </trans-unit>
        <trans-unit id="78affa956fa58e9f010497f40121ac5aa5649679" translate="yes" xml:space="preserve">
          <source>˔</source>
          <target state="translated">˔</target>
        </trans-unit>
        <trans-unit id="8692a472556173cd7a863aaefc76047320d75ad6" translate="yes" xml:space="preserve">
          <source>˕</source>
          <target state="translated">˕</target>
        </trans-unit>
        <trans-unit id="6c007379fbab54ef5ea527a427606a7b5b9079d4" translate="yes" xml:space="preserve">
          <source>˘</source>
          <target state="translated">˘</target>
        </trans-unit>
        <trans-unit id="2701b77d3057b68d7870a622d759ed03e8d35463" translate="yes" xml:space="preserve">
          <source>ˡ</source>
          <target state="translated">ˡ</target>
        </trans-unit>
        <trans-unit id="33f3e550871f839764e8b8529cbde5bf2dc50e48" translate="yes" xml:space="preserve">
          <source>ˢ</source>
          <target state="translated">ˢ</target>
        </trans-unit>
        <trans-unit id="93e77b23776d3ec6e1f99e8298c808a823f1e96f" translate="yes" xml:space="preserve">
          <source>ˣ</source>
          <target state="translated">ˣ</target>
        </trans-unit>
        <trans-unit id="e9c560e47ae25d1eb624f3a58bdaae9637d2fc56" translate="yes" xml:space="preserve">
          <source>̀</source>
          <target state="translated">̀</target>
        </trans-unit>
        <trans-unit id="8ceb984a7a74b7d97837de704b0189f965d415f9" translate="yes" xml:space="preserve">
          <source>́</source>
          <target state="translated">́</target>
        </trans-unit>
        <trans-unit id="393cdcdc2e24c03bdd06bec2aa3736eb3c73ddf3" translate="yes" xml:space="preserve">
          <source>̂</source>
          <target state="translated">̂</target>
        </trans-unit>
        <trans-unit id="42dc9d3093cc7df5b6d4f489acf63680fb1a9fb1" translate="yes" xml:space="preserve">
          <source>̃</source>
          <target state="translated">̃</target>
        </trans-unit>
        <trans-unit id="3a0ad486951d448e3ac9fe2b5c7239d83b2d4cb4" translate="yes" xml:space="preserve">
          <source>̄</source>
          <target state="translated">̄</target>
        </trans-unit>
        <trans-unit id="c08c56c5e596e3d9d0080468b8007ec48c48b704" translate="yes" xml:space="preserve">
          <source>̅</source>
          <target state="translated">̅</target>
        </trans-unit>
        <trans-unit id="79993e5f1cf6acd71048144e721f812ca05cc505" translate="yes" xml:space="preserve">
          <source>̆</source>
          <target state="translated">̆</target>
        </trans-unit>
        <trans-unit id="8b3d5507a167d874ab4377126cae2eef68eeb713" translate="yes" xml:space="preserve">
          <source>̇</source>
          <target state="translated">̇</target>
        </trans-unit>
        <trans-unit id="346f07969008331435b3b2e661026fcb35f2bb56" translate="yes" xml:space="preserve">
          <source>̈</source>
          <target state="translated">̈</target>
        </trans-unit>
        <trans-unit id="7a1b8c66e30c781a4d21371c02366058a01d38ab" translate="yes" xml:space="preserve">
          <source>̉</source>
          <target state="translated">̉</target>
        </trans-unit>
        <trans-unit id="41872a5ab6579d2324975fc984be8a0c329c27ee" translate="yes" xml:space="preserve">
          <source>̊</source>
          <target state="translated">̊</target>
        </trans-unit>
        <trans-unit id="4067c22cdb5504e8c289c18a46b82e3684f96784" translate="yes" xml:space="preserve">
          <source>̋</source>
          <target state="translated">̋</target>
        </trans-unit>
        <trans-unit id="9251f3567687f42222fc720b2da41811f754a052" translate="yes" xml:space="preserve">
          <source>̌</source>
          <target state="translated">̌</target>
        </trans-unit>
        <trans-unit id="01fb82b5d08b2f134d4964eb8544f2d0881b89fd" translate="yes" xml:space="preserve">
          <source>̐</source>
          <target state="translated">̐</target>
        </trans-unit>
        <trans-unit id="43477181a1a7f6fff7ce67415c45654abf87ad7b" translate="yes" xml:space="preserve">
          <source>̒</source>
          <target state="translated">̒</target>
        </trans-unit>
        <trans-unit id="7f96aac3b9d12a1ad359b1bb0704d6004cff73f5" translate="yes" xml:space="preserve">
          <source>̕</source>
          <target state="translated">̕</target>
        </trans-unit>
        <trans-unit id="5e926bed0071b0535b75cc4c2b46ae4f37cedac5" translate="yes" xml:space="preserve">
          <source>̚</source>
          <target state="translated">̚</target>
        </trans-unit>
        <trans-unit id="9247b3c2e9509410ff00c4917c3ead03ae3294ac" translate="yes" xml:space="preserve">
          <source>̡</source>
          <target state="translated">̡</target>
        </trans-unit>
        <trans-unit id="59d81e7c58eb89518bdba304bedc956068234249" translate="yes" xml:space="preserve">
          <source>̢</source>
          <target state="translated">̢</target>
        </trans-unit>
        <trans-unit id="a217dbac5cf2e59821c0e5f090c60ea0e839f09a" translate="yes" xml:space="preserve">
          <source>̧</source>
          <target state="translated">̧</target>
        </trans-unit>
        <trans-unit id="cc38c1ff200c2bc0adfa7660e6c4bb2fc572bf60" translate="yes" xml:space="preserve">
          <source>̨</source>
          <target state="translated">̨</target>
        </trans-unit>
        <trans-unit id="6c783b950454d1bf7cb520c63141c86e2ef92ba2" translate="yes" xml:space="preserve">
          <source>̪</source>
          <target state="translated">̪</target>
        </trans-unit>
        <trans-unit id="8916ee3588e4f188f0711c8e357b9f51c23f25de" translate="yes" xml:space="preserve">
          <source>̰</source>
          <target state="translated">̰</target>
        </trans-unit>
        <trans-unit id="5f8751be82f1969230549d550972a09fffd1949c" translate="yes" xml:space="preserve">
          <source>̲</source>
          <target state="translated">̲</target>
        </trans-unit>
        <trans-unit id="d8699d8937a97955c38d55aa3f93ea8454c90ae3" translate="yes" xml:space="preserve">
          <source>̶</source>
          <target state="translated">̶</target>
        </trans-unit>
        <trans-unit id="879a552b1ff296d2c376da3d97ca56efd1b33e43" translate="yes" xml:space="preserve">
          <source≯</source>
          <target state="translated"≯</target>
        </trans-unit>
        <trans-unit id="2d6fb4b74574f9616986fe51883a9bbac777d55f" translate="yes" xml:space="preserve">
          <source>͍</source>
          <target state="translated">͍</target>
        </trans-unit>
        <trans-unit id="2ca2740294454cb59763231be6a9c92f0665bb0e" translate="yes" xml:space="preserve">
          <source>ϐ</source>
          <target state="translated">ϐ</target>
        </trans-unit>
        <trans-unit id="bf88d7a10e343616c02fedf11c4baa7163846b91" translate="yes" xml:space="preserve">
          <source>ϕ</source>
          <target state="translated">ϕ</target>
        </trans-unit>
        <trans-unit id="59d1a65a2558886280196f6761993889db762be5" translate="yes" xml:space="preserve">
          <source>Ϙ</source>
          <target state="translated">Ϙ</target>
        </trans-unit>
        <trans-unit id="58dfd48dab445a4d3ce6213b92faceb115c0ace7" translate="yes" xml:space="preserve">
          <source>ϙ</source>
          <target state="translated">ϙ</target>
        </trans-unit>
        <trans-unit id="f8204a04c299d18187c02c79252f45110ef0ccda" translate="yes" xml:space="preserve">
          <source>Ϛ</source>
          <target state="translated">Ϛ</target>
        </trans-unit>
        <trans-unit id="807d27a64c9f68b2b238319e945d52d72c0f3919" translate="yes" xml:space="preserve">
          <source>ϛ</source>
          <target state="translated">ϛ</target>
        </trans-unit>
        <trans-unit id="7bb58953aa94a2682694be1a8e72807f214dc679" translate="yes" xml:space="preserve">
          <source>Ϝ</source>
          <target state="translated">Ϝ</target>
        </trans-unit>
        <trans-unit id="22fb7128b4896c18fbb94b36b0db709acbdec789" translate="yes" xml:space="preserve">
          <source>ϝ</source>
          <target state="translated">ϝ</target>
        </trans-unit>
        <trans-unit id="0761d378370555555553c0ba6879fc32154389a6" translate="yes" xml:space="preserve">
          <source>Ϟ</source>
          <target state="translated">Ϟ</target>
        </trans-unit>
        <trans-unit id="8abfe5b5c9cddd1349c1f7230c6abb3c705de6b2" translate="yes" xml:space="preserve">
          <source>ϟ</source>
          <target state="translated">ϟ</target>
        </trans-unit>
        <trans-unit id="ffa9a9a857aab18cba15a48fbf9c93dbb995e762" translate="yes" xml:space="preserve">
          <source>Ϡ</source>
          <target state="translated">Ϡ</target>
        </trans-unit>
        <trans-unit id="5e84f7e2cbd19953803a19fd5ef18aa8a83edeb4" translate="yes" xml:space="preserve">
          <source>ϡ</source>
          <target state="translated">ϡ</target>
        </trans-unit>
        <trans-unit id="aa3bd3039459cbd662e8a32564150ec5b6869a91" translate="yes" xml:space="preserve">
          <source>ϰ</source>
          <target state="translated">ϰ</target>
        </trans-unit>
        <trans-unit id="9cedbbbd09b147d080c5c4ed5c5a614f78c4ba79" translate="yes" xml:space="preserve">
          <source>ϱ</source>
          <target state="translated">ϱ</target>
        </trans-unit>
        <trans-unit id="f89c61ec744627a14e7db319f08194836d0eb4b1" translate="yes" xml:space="preserve">
          <source>ϴ</source>
          <target state="translated">ϴ</target>
        </trans-unit>
        <trans-unit id="f3f0af09e0a8234533dca00fe03547e6abcd36c4" translate="yes" xml:space="preserve">
          <source>ϵ</source>
          <target state="translated">ϵ</target>
        </trans-unit>
        <trans-unit id="6d3b712a33ced3c1790976a3588726f81ea1cfe7" translate="yes" xml:space="preserve">
          <source>϶</source>
          <target state="translated">϶</target>
        </trans-unit>
        <trans-unit id="65d5dbc9c78ded05eca03c5686149498f1f81d68" translate="yes" xml:space="preserve">
          <source>ᴬ</source>
          <target state="translated">ᴬ</target>
        </trans-unit>
        <trans-unit id="0b41606dc93777c86bf670d9a19b04eca1da44f1" translate="yes" xml:space="preserve">
          <source>ᴮ</source>
          <target state="translated">ᴮ</target>
        </trans-unit>
        <trans-unit id="9584e01ba963c399d6dd94ea475f32007d437661" translate="yes" xml:space="preserve">
          <source>ᴰ</source>
          <target state="translated">ᴰ</target>
        </trans-unit>
        <trans-unit id="4abc73871c859251cf21231f11db176f9ed4f8a3" translate="yes" xml:space="preserve">
          <source>ᴱ</source>
          <target state="translated">ᴱ</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
