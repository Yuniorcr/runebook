<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="jekyll">
    <body>
      <group id="jekyll">
        <trans-unit id="51ec816b81fe45eabe5985c6e5949f02c4715433" translate="yes" xml:space="preserve">
          <source>Front Matter Variables Are Optional</source>
          <target state="translated">前端物质变量是可选的</target>
        </trans-unit>
        <trans-unit id="fe601000d1934a854a60fca8d0cc33ca18d5d81a" translate="yes" xml:space="preserve">
          <source>Front Matter defaults</source>
          <target state="translated">前面的内容默认为</target>
        </trans-unit>
        <trans-unit id="01503e4d79f20a1c22bfc4ed9c7fec93699ce001" translate="yes" xml:space="preserve">
          <source>Front matter defaults</source>
          <target state="translated">前面的内容默认为</target>
        </trans-unit>
        <trans-unit id="d0d415a3116cf5a7575b7864ef687cc71df1f621" translate="yes" xml:space="preserve">
          <source>Front matter is a snippet of &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; which sits between two triple-dashed lines at the top of a file. Front matter is used to set variables for the page, for example:</source>
          <target state="translated">最重要的是&lt;a href=&quot;http://yaml.org/&quot;&gt;YAML的&lt;/a&gt;一个片段，它位于文件顶部的两个三点划线之间。前物用于设置页面变量，例如：</target>
        </trans-unit>
        <trans-unit id="e2ec54f1f86e1badd859a3e4cc0572b1e8ee044a" translate="yes" xml:space="preserve">
          <source>Front matter variables are available in Liquid under the &lt;code&gt;page&lt;/code&gt; variable. For example to output the variable above you would use:</source>
          <target state="translated">前质变量在&amp;ldquo; &lt;code&gt;page&lt;/code&gt; 变量下的&amp;ldquo;液体&amp;rdquo;中可用。例如，要输出上面的变量，可以使用：</target>
        </trans-unit>
        <trans-unit id="ab6514ccd95d0a3694260898a6491b71ac4e2ad0" translate="yes" xml:space="preserve">
          <source>Full month name, e.g. &amp;ldquo;January&amp;rdquo;.</source>
          <target state="translated">月份的全名，例如&amp;ldquo; January&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="51c3dde9660d6cbb07190cefd51f56cc0ce6c526" translate="yes" xml:space="preserve">
          <source>Future Posts on GitHub Pages</source>
          <target state="translated">未来在 GitHub 页面上的文章</target>
        </trans-unit>
        <trans-unit id="40d7b46212b2ab893d9587ebff38115301a638c1" translate="yes" xml:space="preserve">
          <source>Future posts</source>
          <target state="translated">今后的员额</target>
        </trans-unit>
        <trans-unit id="ff365eb91f2650983c39f1843d03aa6295de6aa2" translate="yes" xml:space="preserve">
          <source>GCC and Make</source>
          <target state="translated">GCC和Make</target>
        </trans-unit>
        <trans-unit id="918bcf288e603e68c119aca1cac51aae9732d438" translate="yes" xml:space="preserve">
          <source>GNU/Linux, Unix, or macOS</source>
          <target state="translated">GNU/Linux、Unix或macOS。</target>
        </trans-unit>
        <trans-unit id="ae79844dff816caaafe6ba7c88f54fc43aef628a" translate="yes" xml:space="preserve">
          <source>GUI apps can modify the &lt;code&gt;$PATH&lt;/code&gt; as follows:</source>
          <target state="translated">GUI应用程序可以如下修改 &lt;code&gt;$PATH&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="cb48d06fcaddb6f310478dca6ed659a7b7a5e884" translate="yes" xml:space="preserve">
          <source>Gather your collections3.7.0</source>
          <target state="translated">收集你的收藏3.7.0</target>
        </trans-unit>
        <trans-unit id="c25415e46110699c34b6585c6cef73ec2f91be99" translate="yes" xml:space="preserve">
          <source>Gem-based themes make it easier for theme developers to make updates available to anyone who has the theme gem. When there&amp;rsquo;s an update, theme developers push the update to RubyGems.</source>
          <target state="translated">基于宝石的主题使主题开发人员更容易将更新提供给拥有主题宝石的任何人。有更新时，主题开发人员会将更新推送到RubyGems。</target>
        </trans-unit>
        <trans-unit id="ba77b18ed6db40820a6e35edf257f239368af603" translate="yes" xml:space="preserve">
          <source>Gem-based themes make it easy for theme developers to make updates available to anyone who has the theme gem. When there&amp;rsquo;s an update, theme developers push the update to RubyGems.</source>
          <target state="translated">基于宝石的主题使主题开发人员可以轻松地将更新提供给拥有主题宝石的任何人。有更新时，主题开发人员会将更新推送到RubyGems。</target>
        </trans-unit>
        <trans-unit id="de3150c01c3a946a6168173c4116741379fe3579" translate="yes" xml:space="preserve">
          <source>Gemfile</source>
          <target state="translated">Gemfile</target>
        </trans-unit>
        <trans-unit id="029041565efb4ea6cac7f3107af122065735a299" translate="yes" xml:space="preserve">
          <source>Gems</source>
          <target state="translated">Gems</target>
        </trans-unit>
        <trans-unit id="39a3d98c0f2d259f8da7300bfbb7a92f3c1a83c6" translate="yes" xml:space="preserve">
          <source>Gems are code you can include in Ruby projects. Gems package specific functionality. You can share gems across multiple projects or with other people. Gems can perform actions like:</source>
          <target state="translated">Gems是你可以包含在Ruby项目中的代码。Gems是特定功能的包。你可以在多个项目中或与其他人共享gems。Gems可以执行以下操作。</target>
        </trans-unit>
        <trans-unit id="e311c24103da57e6affccfd589d2d5c9cd0965c9" translate="yes" xml:space="preserve">
          <source>Gems included in the &lt;code&gt;:jekyll-plugins&lt;/code&gt; group are activated regardless of the &lt;code&gt;--safe&lt;/code&gt; mode setting. Be aware of what gems are included under this group!</source>
          <target state="translated">不管 &lt;code&gt;--safe&lt;/code&gt; 模式设置如何，：jekyll &lt;code&gt;:jekyll-plugins&lt;/code&gt; 组中包含的宝石都会被激活。请注意该组中包含哪些宝石！</target>
        </trans-unit>
        <trans-unit id="7cc39f8834815d2ea36d46868afdb32921a87e8a" translate="yes" xml:space="preserve">
          <source>Gems included in the &lt;code&gt;:jekyll-plugins&lt;/code&gt; group are activated regardless of the &lt;code&gt;--safe&lt;/code&gt; mode setting. Be aware of which gems are included under this group!</source>
          <target state="translated">不管 &lt;code&gt;--safe&lt;/code&gt; 模式设置如何，：jekyll &lt;code&gt;:jekyll-plugins&lt;/code&gt; 组中包含的宝石都会被激活。请注意该组中包括哪些宝石！</target>
        </trans-unit>
        <trans-unit id="8676228e396aba7fb75b0dd1994d8b4014133ced" translate="yes" xml:space="preserve">
          <source>Generally in Liquid you output content using two curly braces e.g. &lt;code&gt;{{ variable }}&lt;/code&gt; and perform logic statements by surrounding them in a curly brace percentage sign e.g. &lt;code&gt;{% if statement %}&lt;/code&gt;. To learn more about Liquid, check out the &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;official Liquid Documentation&lt;/a&gt;.</source>
          <target state="translated">通常，在Liquid中，您使用两个大括号（例如 &lt;code&gt;{{ variable }}&lt;/code&gt; 输出内容，并通过将它们括在大括号百分号（例如 &lt;code&gt;{% if statement %}&lt;/code&gt; 执行逻辑语句。要了解有关Liquid的更多信息，请查阅&lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;官方Liquid文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aedb09bb110586431e8db01fe06a38658fabd92e" translate="yes" xml:space="preserve">
          <source>Generate a Liquid rendering profile to help you identify performance bottlenecks.</source>
          <target state="translated">生成Liquid渲染配置文件,帮助您识别性能瓶颈。</target>
        </trans-unit>
        <trans-unit id="0b1e0bd34bb388ae7f402d63987e9dc2d1a7095f" translate="yes" xml:space="preserve">
          <source>Generates content as a side-effect.</source>
          <target state="translated">产生内容作为副产品。</target>
        </trans-unit>
        <trans-unit id="a3e705cc61a19f33d7c9c030f107a70569966485" translate="yes" xml:space="preserve">
          <source>Generators</source>
          <target state="translated">Generators</target>
        </trans-unit>
        <trans-unit id="5f4d84cfe96fb18f5daa733a7aebc64574619567" translate="yes" xml:space="preserve">
          <source>Generators are only required to implement one method:</source>
          <target state="translated">生成器只需要实现一种方法。</target>
        </trans-unit>
        <trans-unit id="fd981652111640e1af8328f3462038888b278a32" translate="yes" xml:space="preserve">
          <source>Generators need to implement only one method:</source>
          <target state="translated">生成器只需要实现一种方法。</target>
        </trans-unit>
        <trans-unit id="9254a5380fd0a402863d61054b4a46973f389a2e" translate="yes" xml:space="preserve">
          <source>Generators run after Jekyll has made an inventory of the existing content, and before the site is generated. Pages with YAML Front Matters are stored as instances of &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/page.rb&quot;&gt;&lt;code&gt;Jekyll::Page&lt;/code&gt;&lt;/a&gt; and are available via &lt;code&gt;site.pages&lt;/code&gt;. Static files become instances of &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/static_file.rb&quot;&gt;&lt;code&gt;Jekyll::StaticFile&lt;/code&gt;&lt;/a&gt; and are available via &lt;code&gt;site.static_files&lt;/code&gt;. See &lt;a href=&quot;../variables/index&quot;&gt;the Variables documentation page&lt;/a&gt; and &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/site.rb&quot;&gt;&lt;code&gt;Jekyll::Site&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">生成器在Jekyll对现有内容进行清点之后且在生成站点之前运行。带有YAML重要事项的页面存储为&lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/page.rb&quot;&gt; &lt;code&gt;Jekyll::Page&lt;/code&gt; &lt;/a&gt;实例，并可以通过 &lt;code&gt;site.pages&lt;/code&gt; 进行访问。静态文件成为&lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/static_file.rb&quot;&gt; &lt;code&gt;Jekyll::StaticFile&lt;/code&gt; &lt;/a&gt;实例，可以通过 &lt;code&gt;site.static_files&lt;/code&gt; 获得。有关更多详细信息，请参见&lt;a href=&quot;../variables/index&quot;&gt;变量文档页面&lt;/a&gt;和&lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/site.rb&quot;&gt; &lt;code&gt;Jekyll::Site&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e127bbb3a0bbbfd1ff126280056a9179479e821e" translate="yes" xml:space="preserve">
          <source>Generators run after Jekyll has made an inventory of the existing content, and before the site is generated. Pages with front matter are stored as instances of &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/page.rb&quot;&gt;&lt;code&gt;Jekyll::Page&lt;/code&gt;&lt;/a&gt; and are available via &lt;code&gt;site.pages&lt;/code&gt;. Static files become instances of &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/static_file.rb&quot;&gt;&lt;code&gt;Jekyll::StaticFile&lt;/code&gt;&lt;/a&gt; and are available via &lt;code&gt;site.static_files&lt;/code&gt;. See &lt;a href=&quot;../../variables/index&quot;&gt;the Variables documentation page&lt;/a&gt; and &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/site.rb&quot;&gt;&lt;code&gt;Jekyll::Site&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">生成器在Jekyll对现有内容进行清点之后且在生成站点之前运行。具有首页事项的页面存储为&lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/page.rb&quot;&gt; &lt;code&gt;Jekyll::Page&lt;/code&gt; &lt;/a&gt;实例，并且可以通过 &lt;code&gt;site.pages&lt;/code&gt; 进行访问。静态文件成为&lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/static_file.rb&quot;&gt; &lt;code&gt;Jekyll::StaticFile&lt;/code&gt; &lt;/a&gt;实例，可以通过 &lt;code&gt;site.static_files&lt;/code&gt; 获得。有关详细信息，请参见&lt;a href=&quot;../../variables/index&quot;&gt;变量文档页面&lt;/a&gt;和&lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/site.rb&quot;&gt; &lt;code&gt;Jekyll::Site&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6b44987fa3307256a0f5d4bcfa6dabc741a557cc" translate="yes" xml:space="preserve">
          <source>Gentoo</source>
          <target state="translated">Gentoo</target>
        </trans-unit>
        <trans-unit id="779fb227a172506ee3120bd5cd3808861aaf1330" translate="yes" xml:space="preserve">
          <source>Get your Ruby version:</source>
          <target state="translated">获取你的Ruby版本。</target>
        </trans-unit>
        <trans-unit id="d0910b6b5cbd00abec4d6696bf678c03c28ef9dd" translate="yes" xml:space="preserve">
          <source>Getting Jekyll installed and ready-to-go should only take a few minutes. If it ever becomes a pain, please &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;file an issue&lt;/a&gt; (or submit a pull request) describing the issue you encountered and how we might make the process easier.</source>
          <target state="translated">安装Jekyll并准备就绪只需几分钟。如果遇到麻烦，请&lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;提出问题&lt;/a&gt;（或提交拉取请求），以描述您遇到的问题以及我们如何使该过程更轻松。</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">入门</target>
        </trans-unit>
        <trans-unit id="7ce495ff56808a96f0836329550514077a883f75" translate="yes" xml:space="preserve">
          <source>Git post-receive hook</source>
          <target state="translated">Git后接收钩子</target>
        </trans-unit>
        <trans-unit id="510b9e89e8d4923873a42628e3ef914aa7972a29" translate="yes" xml:space="preserve">
          <source>Git post-update hook</source>
          <target state="translated">Git 后期更新钩子</target>
        </trans-unit>
        <trans-unit id="39540900bbfc1f3ea7b080c0579b9c08789f8f23" translate="yes" xml:space="preserve">
          <source>GitHub Actions</source>
          <target state="translated">GitHub行动</target>
        </trans-unit>
        <trans-unit id="10ac4b07493a49944092e978ba7f3cbc7372eabd" translate="yes" xml:space="preserve">
          <source>GitHub Actions are registered for a repository by using a YAML file inside the directory path &lt;code&gt;.github/workflows&lt;/code&gt; (note the dot at the start). Here we shall employ &lt;a href=&quot;https://github.com/marketplace/actions/jekyll-actions&quot;&gt;Jekyll Actions&lt;/a&gt; from the Marketplace for its simplicity.</source>
          <target state="translated">通过使用目录路径 &lt;code&gt;.github/workflows&lt;/code&gt; 中的YAML文件为存储库注册GitHub Actions （请注意开头的点）。在这里，为了简单起见，我们将使用来自市场的&lt;a href=&quot;https://github.com/marketplace/actions/jekyll-actions&quot;&gt;Jekyll Actions&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b50aad9dd12f191663725265afb261bb6f3a7fa" translate="yes" xml:space="preserve">
          <source>GitHub Pages</source>
          <target state="translated">GitHub页面</target>
        </trans-unit>
        <trans-unit id="e8f9d4f0de446dbec106e8aea66779e22a927f8b" translate="yes" xml:space="preserve">
          <source>GitHub Pages &lt;a href=&quot;https://help.github.com/articles/troubleshooting-github-pages-build-failures#source-setting&quot;&gt;overrides&lt;/a&gt; the &lt;a href=&quot;../configuration/index#global-configuration&quot;&gt;&amp;ldquo;Site Source&amp;rdquo;&lt;/a&gt; configuration value, so if you locate your files anywhere other than the root directory, your site may not build correctly.</source>
          <target state="translated">GitHub的页面&lt;a href=&quot;https://help.github.com/articles/troubleshooting-github-pages-build-failures#source-setting&quot;&gt;覆盖&lt;/a&gt;的&lt;a href=&quot;../configuration/index#global-configuration&quot;&gt;&amp;ldquo;网站源&amp;rdquo;&lt;/a&gt;的配置价值，因此，如果您找到的任何地方而不是根目录以外的文件，您的网站可能无法正确生成。</target>
        </trans-unit>
        <trans-unit id="eb69cae0b9c25c396bc4937c58f4573fb81a0a1d" translate="yes" xml:space="preserve">
          <source>GitHub Pages &lt;a href=&quot;https://help.github.com/en/github/working-with-github-pages/troubleshooting-jekyll-build-errors-for-github-pages-sites&quot;&gt;overrides&lt;/a&gt; the &lt;a href=&quot;../configuration/options/index&quot;&gt;&amp;ldquo;Site Source&amp;rdquo;&lt;/a&gt; configuration value, so if you locate your files anywhere other than the root directory, your site may not build correctly.</source>
          <target state="translated">GitHub的页面&lt;a href=&quot;https://help.github.com/en/github/working-with-github-pages/troubleshooting-jekyll-build-errors-for-github-pages-sites&quot;&gt;覆盖&lt;/a&gt;的&lt;a href=&quot;../configuration/options/index&quot;&gt;&amp;ldquo;网站源&amp;rdquo;&lt;/a&gt;的配置价值，因此，如果您找到的任何地方而不是根目录以外的文件，您的网站可能无法正确生成。</target>
        </trans-unit>
        <trans-unit id="8dacc5464f8b2d2bed3eff5cbf3a194b0cf27c4d" translate="yes" xml:space="preserve">
          <source>GitHub Pages Documentation, Help, and Support</source>
          <target state="translated">GitHub页面 文档、帮助和支持</target>
        </trans-unit>
        <trans-unit id="468a579a5c3c13e321704773694dd48709f82722" translate="yes" xml:space="preserve">
          <source>GitHub Pages are initially configured to live under the &lt;code&gt;username.github.io&lt;/code&gt; subdomain, which is why repositories must be named this way &lt;strong&gt;even if a custom domain is being used&lt;/strong&gt;.</source>
          <target state="translated">最初将GitHub Pages配置为位于 &lt;code&gt;username.github.io&lt;/code&gt; 子域下，这就是为什么&lt;strong&gt;即使使用自定义域也&lt;/strong&gt;必须以这种方式命名存储库的原因。</target>
        </trans-unit>
        <trans-unit id="b9482e6772ed38f0e07d48251101b37ac4d3e564" translate="yes" xml:space="preserve">
          <source>GitHub Pages are powered by Jekyll behind the scenes, so if you&amp;rsquo;re looking for a zero-hassle, zero-cost solution, GitHub Pages are a great way to &lt;a href=&quot;../github-pages/index&quot;&gt;host your Jekyll-powered website for free&lt;/a&gt;.</source>
          <target state="translated">GitHub Pages由Jekyll在后台提供支持，因此，如果您正在寻找零麻烦，零成本的解决方案，则GitHub Pages是&lt;a href=&quot;../github-pages/index&quot;&gt;免费托管基于Jekyll的网站&lt;/a&gt;的绝佳方法。</target>
        </trans-unit>
        <trans-unit id="98b49c3a0a79daea9a9ac9224c6cade9bea31346" translate="yes" xml:space="preserve">
          <source>GitHub Pages work by looking at certain branches of repositories on GitHub. There are two basic types available: &lt;a href=&quot;https://help.github.com/articles/user-organization-and-project-pages/&quot;&gt;user/organization and project pages&lt;/a&gt;. The way to deploy these two types of sites are nearly identical, except for a few minor details.</source>
          <target state="translated">GitHub Pages通过查看GitHub上存储库的某些分支来工作。有两种基本类型可用：&lt;a href=&quot;https://help.github.com/articles/user-organization-and-project-pages/&quot;&gt;用户/组织和项目页面&lt;/a&gt;。部署这两种类型的站点的方法几乎相同，除了一些小细节。</target>
        </trans-unit>
        <trans-unit id="4ff625d7c16407bb7037fa87e12e8bd55c2058cb" translate="yes" xml:space="preserve">
          <source>GitHub.com #jekyll-theme repos</source>
          <target state="translated">GitHub.com #Jekyll主题仓库</target>
        </trans-unit>
        <trans-unit id="a4d4c058d2416f068da6a5a2a38dd085d44bb01c" translate="yes" xml:space="preserve">
          <source>GitLab Pages</source>
          <target state="translated">GitLab页面</target>
        </trans-unit>
        <trans-unit id="23d0b319e364d2bd5ece7b9f4e4b5526a736744a" translate="yes" xml:space="preserve">
          <source>Given a post named: &lt;code&gt;/2009-04-29-slap-chop.md&lt;/code&gt;</source>
          <target state="translated">给定一个帖子： &lt;code&gt;/2009-04-29-slap-chop.md&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="10e41e603882ff3e6f001e759b2e5ae1f12eaf4a" translate="yes" xml:space="preserve">
          <source>Glob patterns in Front Matter defaults</source>
          <target state="translated">Front Matter默认的Glob模式</target>
        </trans-unit>
        <trans-unit id="5f1184f7df96c5928092ad9c6b550699bf887826" translate="yes" xml:space="preserve">
          <source>Global</source>
          <target state="translated">Global</target>
        </trans-unit>
        <trans-unit id="602d92b2e14ac385c7289a85d36ef682a9e44c22" translate="yes" xml:space="preserve">
          <source>Global Configuration</source>
          <target state="translated">全局配置</target>
        </trans-unit>
        <trans-unit id="c2a69aff614a63e743988330166603e3abc3bf38" translate="yes" xml:space="preserve">
          <source>Global Install</source>
          <target state="translated">全球安装</target>
        </trans-unit>
        <trans-unit id="2ff4e53e2b802e1ec127c83da80fa5fc4b5333fa" translate="yes" xml:space="preserve">
          <source>Global Variables</source>
          <target state="translated">全局变量</target>
        </trans-unit>
        <trans-unit id="2d35e11f4c78b7b3b3ca87764462e37d39f55eca" translate="yes" xml:space="preserve">
          <source>Globbing and Performance</source>
          <target state="translated">Globbing和性能</target>
        </trans-unit>
        <trans-unit id="55b991eab112303d31743e18931429e53b8f2990" translate="yes" xml:space="preserve">
          <source>Go to the &lt;strong&gt;environment&lt;/strong&gt; tab on your repository.</source>
          <target state="translated">转到存储库上的&lt;strong&gt;环境&lt;/strong&gt;选项卡。</target>
        </trans-unit>
        <trans-unit id="7a842f6d5fbbe8841aaf282f75d723b464fdc715" translate="yes" xml:space="preserve">
          <source>Go to the repository level view in GitHub. Under the most recent commit (near the top) you&amp;rsquo;ll see a &lt;strong&gt;status symbol&lt;/strong&gt; next to the commit message as a tick or &lt;em&gt;X&lt;/em&gt;. Hover over it and click the &lt;strong&gt;details&lt;/strong&gt; link.</source>
          <target state="translated">转到GitHub中的存储库级别视图。在最近提交（靠近顶部），你会看到一个&lt;strong&gt;身份的象征&lt;/strong&gt;旁提交消息打勾或&lt;em&gt;X&lt;/em&gt;。将鼠标悬停在它上面，然后单击&lt;strong&gt;详细信息&lt;/strong&gt;链接。</target>
        </trans-unit>
        <trans-unit id="2cbb8951bd9cf0840bb24a86d4d4799e5ae9ac6b" translate="yes" xml:space="preserve">
          <source>Go to the repository&amp;rsquo;s Actions tab. Click on the &lt;code&gt;jekyll&lt;/code&gt; workflow tab.</source>
          <target state="translated">转到存储库的&amp;ldquo;操作&amp;rdquo;选项卡。单击 &lt;code&gt;jekyll&lt;/code&gt; 工作流程选项卡。</target>
        </trans-unit>
        <trans-unit id="4531c718af3ab7d3ca98c4637f49630a6cb064e8" translate="yes" xml:space="preserve">
          <source>Go to your profile on travis-ci.org: https://travis-ci.org/profile/username</source>
          <target state="translated">在Travis-ci.org上查看你的个人资料:https://travis-ci.org/profile/username。</target>
        </trans-unit>
        <trans-unit id="0427219d52acb0b8523719cb4caf006ac547e4e2" translate="yes" xml:space="preserve">
          <source>Go to your repository&amp;rsquo;s &lt;strong&gt;Settings&lt;/strong&gt; and then the &lt;strong&gt;Secrets&lt;/strong&gt; tab.</source>
          <target state="translated">转到存储库的&lt;strong&gt;&amp;ldquo;设置&amp;rdquo;&lt;/strong&gt;，然后转到&lt;strong&gt;&amp;ldquo;&lt;/strong&gt;&lt;strong&gt;秘密&amp;rdquo;&lt;/strong&gt;选项卡。</target>
        </trans-unit>
        <trans-unit id="7178adec52e5c5f4838341c5b3d24d7925f54213" translate="yes" xml:space="preserve">
          <source>Group an array's items by a given property.</source>
          <target state="translated">根据给定的属性对数组中的项目进行分组。</target>
        </trans-unit>
        <trans-unit id="f2a45e739a29c8415f8d916d28f65eb54a2d112d" translate="yes" xml:space="preserve">
          <source>Group an array's items using a Liquid expression.</source>
          <target state="translated">使用Liquid表达式对一个数组的项目进行分组。</target>
        </trans-unit>
        <trans-unit id="45b78e0bd2914a69c41320d9ebf22a9927dd3f37" translate="yes" xml:space="preserve">
          <source>Group an array's items using a Liquid expression. 3.4.0</source>
          <target state="translated">使用Liquid表达式对一个数组的项目进行分组。3.4.0</target>
        </trans-unit>
        <trans-unit id="ea95f76ea8d8243729f8be3feef2b40d89076685" translate="yes" xml:space="preserve">
          <source>Guide for maintaining Jekyll</source>
          <target state="translated">维护Jekyll的指南</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="66d79524f4d0506a9a1af19b96aee758f2b790d6" translate="yes" xml:space="preserve">
          <source>HTML Proofer</source>
          <target state="translated">HTML演示器</target>
        </trans-unit>
        <trans-unit id="63fc790cccc18500b0c573bedc101d0ac60d5586" translate="yes" xml:space="preserve">
          <source>Help us make Jekyll better by &lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;contributing&lt;/a&gt;</source>
          <target state="translated">通过&lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;贡献来&lt;/a&gt;帮助我们使Jekyll更好</target>
        </trans-unit>
        <trans-unit id="6c4d623e42153c15b2453aef249170c8234877cc" translate="yes" xml:space="preserve">
          <source>Helpful Hints</source>
          <target state="translated">有用的提示</target>
        </trans-unit>
        <trans-unit id="9aac2ff9f6900ddaeac45839db4be8f1ca90c72f" translate="yes" xml:space="preserve">
          <source>Here are a few examples to clarify how permalink styles get applied with posts.</source>
          <target state="translated">这里有几个例子来说明如何将permalink样式应用到文章中。</target>
        </trans-unit>
        <trans-unit id="a5c03f3ec1a401705963307c231dad7cdab1e16c" translate="yes" xml:space="preserve">
          <source>Here are some of the most common commands:</source>
          <target state="translated">以下是一些最常见的命令。</target>
        </trans-unit>
        <trans-unit id="831526769d35b12d09459b16086b073d0d812e97" translate="yes" xml:space="preserve">
          <source>Here is a basic example of using Data Files to avoid copy-pasting large chunks of code in your Jekyll templates:</source>
          <target state="translated">这里是一个使用数据文件的基本例子,以避免在Jekyll模板中复制粘贴大块代码。</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">下面是一个例子。</target>
        </trans-unit>
        <trans-unit id="8c978a5694093a90f577b797656397da9e5aaa18" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of outputting a list of blog posts with an excerpt:</source>
          <target state="translated">这是输出带有摘录的博客文章列表的示例：</target>
        </trans-unit>
        <trans-unit id="83640d7e910a9e55e31b51dd8861c25fe6e8116f" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that passes all the parameters to this include (the include file is named &lt;code&gt;image.html&lt;/code&gt;):</source>
          <target state="translated">这是一个将所有参数传递到此include的示例（include文件名为 &lt;code&gt;image.html&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="abf948b4bceb5e369d172f337195e37748f36726" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example. In the &lt;code&gt;_data&lt;/code&gt; folder, suppose you have a YAML file called &lt;code&gt;profiles.yml&lt;/code&gt;. Its content looks like this:</source>
          <target state="translated">这是一个例子。在 &lt;code&gt;_data&lt;/code&gt; 文件夹，假设你有一个名为YAML文件 &lt;code&gt;profiles.yml&lt;/code&gt; 。其内容如下所示：</target>
        </trans-unit>
        <trans-unit id="79a379c34c53ce83d07e71356345ea69136a74d1" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example:</source>
          <target state="translated">这是一个例子：</target>
        </trans-unit>
        <trans-unit id="963fe3b6d5f32924be79190582ecb01f34a36218" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the full list of placeholders available:</source>
          <target state="translated">以下是可用的占位符的完整列表：</target>
        </trans-unit>
        <trans-unit id="c26aeecbcca5072b431a5382ae6ba27176ef977c" translate="yes" xml:space="preserve">
          <source>Here, we are scoping the &lt;code&gt;values&lt;/code&gt; to any file that exists in the path &lt;code&gt;scope&lt;/code&gt;. Since the path is set as an empty string, it will apply to &lt;strong&gt;all files&lt;/strong&gt; in your project. You probably don&amp;rsquo;t want to set a layout on every file in your project - like css files, for example - so you can also specify a &lt;code&gt;type&lt;/code&gt; value under the &lt;code&gt;scope&lt;/code&gt; key.</source>
          <target state="translated">在这里，我们将 &lt;code&gt;values&lt;/code&gt; 范围限定到path &lt;code&gt;scope&lt;/code&gt; 中存在的任何文件。由于该路径设置为空字符串，因此它将应用于您项目中的&lt;strong&gt;所有文件&lt;/strong&gt;。您可能不想在项目中的每个文件上都设置布局（例如css文件），因此也可以在 &lt;code&gt;scope&lt;/code&gt; 键下指定 &lt;code&gt;type&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="f67ca0046b6f7d123003b1d0cfb9b27a13c9adf6" translate="yes" xml:space="preserve">
          <source>Hey, that&amp;rsquo;s pretty neat, but what about showing just some of your posts that are related to each other? For that you can use any of the &lt;a href=&quot;../frontmatter/index&quot;&gt;variables definable in Front Matter&lt;/a&gt;. In the &amp;ldquo;typical post&amp;rdquo; section you can see how to define categories. Simply add the categories to your Front Matter as a &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;yaml list&lt;/a&gt;.</source>
          <target state="translated">嘿，这很整洁，但是只显示彼此相关的一些帖子呢？为此，您可以使用&lt;a href=&quot;../frontmatter/index&quot;&gt;Front Matter中可定义的&lt;/a&gt;任何变量。在&amp;ldquo;典型文章&amp;rdquo;部分中，您可以查看如何定义类别。只需将类别作为&lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;yaml列表&lt;/a&gt;添加到&amp;ldquo;前务&amp;rdquo;即可。</target>
        </trans-unit>
        <trans-unit id="45836a888498c251d1391be7619c510e1b094a79" translate="yes" xml:space="preserve">
          <source>Highlighting code snippets</source>
          <target state="translated">突出显示代码片段</target>
        </trans-unit>
        <trans-unit id="ac066591edb7d47406e88eed7ba536040a82daf4" translate="yes" xml:space="preserve">
          <source>Homepage</source>
          <target state="translated">Homepage</target>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="3c3d2c6f4afae2bd1dd22fa5ecd616951d8fd75a" translate="yes" xml:space="preserve">
          <source>Hooks are registered to a container and an event name. To register one, you call Jekyll::Hooks.register, and pass the container, event name, and code to call whenever the hook is triggered. For example, if you want to execute some custom functionality every time Jekyll renders a post, you could register a hook like this:</source>
          <target state="translated">钩子被注册到一个容器和一个事件名上,要注册一个钩子,需要调用Jekyll::Hooks.register,并传递给容器、事件名和代码,以便在触发时调用。要注册一个钩子,你可以调用 Jekyll::Hooks.register,并传递容器、事件名称和代码,以便在钩子被触发时调用。例如,如果你想在每次 Jekyll 渲染一个帖子时执行一些自定义功能,你可以注册一个这样的钩子。</target>
        </trans-unit>
        <trans-unit id="8e47e0b033171698511eb98255ea2c5ea9bc873f" translate="yes" xml:space="preserve">
          <source>Hooks are registered to an owner and an event name. To register one, you call &lt;code&gt;Jekyll::Hooks.register&lt;/code&gt;, and pass the hook owner, event name, and code to call whenever the hook is triggered. For example, if you want to execute some custom functionality every time Jekyll renders a page, you could register a hook like this:</source>
          <target state="translated">挂钩被注册到所有者和事件名称。要注册一个，您可以调用 &lt;code&gt;Jekyll::Hooks.register&lt;/code&gt; ，并传递钩子所有者，事件名称和代码，以在每次钩子被触发时进行调用。例如，如果您想在每次Jekyll渲染页面时执行一些自定义功能，则可以注册一个如下所示的钩子：</target>
        </trans-unit>
        <trans-unit id="52a6bd52dd8761d529cd931ac21db2628083f1bb" translate="yes" xml:space="preserve">
          <source>Hooks for custom Jekyll objects</source>
          <target state="translated">用于自定义Jekyll对象的钩子</target>
        </trans-unit>
        <trans-unit id="a2416f84594d038f1f6e52aa6cd5d7d79145d052" translate="yes" xml:space="preserve">
          <source>Hour of the day, 24-hour clock, zero-padded from the post&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter. (00..23)</source>
          <target state="translated">一天中的小时，24小时制，从帖子的 &lt;code&gt;date&lt;/code&gt; 前起零补齐。（00..23）</target>
        </trans-unit>
        <trans-unit id="c4ca57faecef53b5cde020963e025ccad78ed174" translate="yes" xml:space="preserve">
          <source>Hour of the day, 24-hour clock, zero-padded from the post's &lt;code&gt;date&lt;/code&gt; front matter. (00..23)</source>
          <target state="translated">一天中的小时，24小时制，从帖子的 &lt;code&gt;date&lt;/code&gt; 前起零补齐。（00..23）</target>
        </trans-unit>
        <trans-unit id="ee6a4883cb5b0b2ebbd4b69d7e1663e3a14e6653" translate="yes" xml:space="preserve">
          <source>How I&amp;rsquo;m using Jekyll in 2016</source>
          <target state="translated">我在2016年如何使用Jekyll</target>
        </trans-unit>
        <trans-unit id="95885b1160ade6b19f2fc26175b00e5522fc969a" translate="yes" xml:space="preserve">
          <source>How to Contribute</source>
          <target state="translated">如何捐款</target>
        </trans-unit>
        <trans-unit id="9ba94163904d5ef671e393d069e9994bb2d8366f" translate="yes" xml:space="preserve">
          <source>How to file a bug</source>
          <target state="translated">如何提交一个错误</target>
        </trans-unit>
        <trans-unit id="50e17c2b0d1c4cebe485ddc4e68acd8d6c190831" translate="yes" xml:space="preserve">
          <source>If a post has multiple categories, Jekyll will create a hierarchy (e.g. &lt;code&gt;/work-2-progress/category2&lt;/code&gt;). Also Jekyll automatically parses out double slashes in the URLs, so if no categories are present, it will ignore this.</source>
          <target state="translated">如果帖子具有多个类别，Jekyll将创建一个层次结构（例如 &lt;code&gt;/work-2-progress/category2&lt;/code&gt; ）。Jekyll还会自动解析URL中的双斜杠，因此，如果不存在任何类别，它将忽略此内容。</target>
        </trans-unit>
        <trans-unit id="291d7409a971d7df4abbe39550e6a05f09698835" translate="yes" xml:space="preserve">
          <source>If a site has 12 posts and specifies &lt;code&gt;paginate: 5&lt;/code&gt;, Jekyll will write &lt;code&gt;blog/index.html&lt;/code&gt; with the first 5 posts, &lt;code&gt;blog/page2/index.html&lt;/code&gt; with the next 5 posts and &lt;code&gt;blog/page3/index.html&lt;/code&gt; with the last 2 posts into the destination directory.</source>
          <target state="translated">如果网站有12个帖子并指定 &lt;code&gt;paginate: 5&lt;/code&gt; ，Jekyll将用前5个帖子写 &lt;code&gt;blog/index.html&lt;/code&gt; ,用后5个帖子写blog &lt;code&gt;blog/page2/index.html&lt;/code&gt; 用后2个帖子 &lt;code&gt;blog/page3/index.html&lt;/code&gt; 。发布到目标目录。</target>
        </trans-unit>
        <trans-unit id="753f258bd8b49faefa62db5054137276faf7fdae" translate="yes" xml:space="preserve">
          <source>If all goes well, all steps will be green and the built assets will now exist on the &lt;code&gt;gh-pages&lt;/code&gt; branch.</source>
          <target state="translated">如果一切顺利，所有步骤将变为绿色，并且建成的资产现在将存在于 &lt;code&gt;gh-pages&lt;/code&gt; 分支上。</target>
        </trans-unit>
        <trans-unit id="e839bd7b237c4e2b6a6edc7b40c67990c8dbadf4" translate="yes" xml:space="preserve">
          <source>If both metadata keys have been defined properly, &lt;code&gt;order&lt;/code&gt; list takes precedence.</source>
          <target state="translated">如果两个元数据键均已正确定义，则 &lt;code&gt;order&lt;/code&gt; 列表优先。</target>
        </trans-unit>
        <trans-unit id="7bf549bc2141e74e473c727a38f9ea61933e2f5c" translate="yes" xml:space="preserve">
          <source>If it is not already installed by your host, you can do it yourself:</source>
          <target state="translated">如果你的主机还没有安装,你可以自己安装。</target>
        </trans-unit>
        <trans-unit id="6bfd9b131d8fbc9ebadd0174814fa75131d24f89" translate="yes" xml:space="preserve">
          <source>If set, this specifies the layout file to use. Use the layout file name without the file extension. Layout files must be placed in the &lt;code&gt;_layouts&lt;/code&gt; directory.</source>
          <target state="translated">如果设置，则指定要使用的布局文件。使用不带文件扩展名的布局文件名。布局文件必须放置在 &lt;code&gt;_layouts&lt;/code&gt; 目录中。</target>
        </trans-unit>
        <trans-unit id="16e5f3a38e925cad6f35c5b5ac5bc1f29a9cb6c1" translate="yes" xml:space="preserve">
          <source>If the `jekyll new` command prints the error &quot;Your user account isn't allowed to install to the system RubyGems&quot;, see the &quot;Running Jekyll as Non-Superuser&quot; instructions in &lt;a href=&quot;../../troubleshooting/index#no-sudo&quot;&gt;Troubleshooting&lt;/a&gt;.</source>
          <target state="translated">如果`jekyll new`命令显示错误&amp;ldquo;不允许将您的用户帐户安装到系统RubyGems&amp;rdquo;，请参阅&amp;ldquo;&lt;a href=&quot;../../troubleshooting/index#no-sudo&quot;&gt;疑难解答&lt;/a&gt;&amp;rdquo;中的&amp;ldquo;以非超级用户身份运行Jekyll&amp;rdquo;说明。</target>
        </trans-unit>
        <trans-unit id="9238236f6534e05493e0318455680c7da2a905f1" translate="yes" xml:space="preserve">
          <source>If the file does not have YAML front matter, it will simply be copied over into the resulting site.</source>
          <target state="translated">如果文件中没有YAML前面的内容,它将被简单地复制到生成的网站中。</target>
        </trans-unit>
        <trans-unit id="dc84747683fe22b5b1a638bef3a4246c6fff3644" translate="yes" xml:space="preserve">
          <source>If the file does not have front matter, it will simply be copied over into the resulting site.</source>
          <target state="translated">如果文件没有前面的内容,它将简单地复制到结果的网站。</target>
        </trans-unit>
        <trans-unit id="b47324bc5709f19cd71b92fd22bdfb47be6f6ed7" translate="yes" xml:space="preserve">
          <source>If the file has &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt; at the top, it will be rendered.</source>
          <target state="translated">如果文件中有&lt;a href=&quot;../front-matter/index&quot;&gt;前事&lt;/a&gt;在顶部，它会被渲染。</target>
        </trans-unit>
        <trans-unit id="52f8569e79b956dbe48e729796e8f13c33d30812" translate="yes" xml:space="preserve">
          <source>If the file has &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML front matter&lt;/a&gt; at the top, it will be rendered.</source>
          <target state="translated">如果文件的顶部是&lt;a href=&quot;../frontmatter/index&quot;&gt;YAML优先事项&lt;/a&gt;，则将呈现该文件。</target>
        </trans-unit>
        <trans-unit id="6f2f94ff051b156124d9bbb1c67ff42cbd835af7" translate="yes" xml:space="preserve">
          <source>If the page being processed is a Post, this contains a list of up to ten related Posts. By default, these are the ten most recent posts. For high quality but slow to compute results, run the &lt;code&gt;jekyll&lt;/code&gt; command with the &lt;code&gt;--lsi&lt;/code&gt; (&lt;a href=&quot;https://en.wikipedia.org/wiki/Latent_semantic_analysis#Latent_semantic_indexing&quot;&gt;latent semantic indexing&lt;/a&gt;) option. Also note GitHub Pages does not support the &lt;code&gt;lsi&lt;/code&gt; option when generating sites.</source>
          <target state="translated">如果正在处理的页面是一个帖子，则包含最多十个相关帖子的列表。默认情况下，这些是十个最新帖子。对于高品质的，但是进展缓慢计算结果，运行 &lt;code&gt;jekyll&lt;/code&gt; 用命令 &lt;code&gt;--lsi&lt;/code&gt; （&lt;a href=&quot;https://en.wikipedia.org/wiki/Latent_semantic_analysis#Latent_semantic_indexing&quot;&gt;潜在语义索引&lt;/a&gt;）选项。另请注意，在生成站点时，GitHub Pages不支持 &lt;code&gt;lsi&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="d641f21c96839fd713c161d3c90256c3c5ff7da7" translate="yes" xml:space="preserve">
          <source>If you already have a full &lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot;&gt;Ruby&lt;/a&gt; development environment with all headers and &lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGems&lt;/a&gt; installed (see Jekyll&amp;rsquo;s &lt;a href=&quot;../installation/index#requirements&quot;&gt;requirements&lt;/a&gt;), you can create a new Jekyll site by doing the following:</source>
          <target state="translated">如果您已经具有完整的&lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot;&gt;Ruby&lt;/a&gt;开发环境，并且安装了所有标头和&lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGems&lt;/a&gt;（请参见Jekyll的&lt;a href=&quot;../installation/index#requirements&quot;&gt;要求&lt;/a&gt;），则可以执行以下操作来创建新的Jekyll站点：</target>
        </trans-unit>
        <trans-unit id="08ef134f574dec2a4a371ee77d3cc3d6d4b33a08" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;https://mustache.github.io&quot;&gt;Mustache&lt;/a&gt; or another JavaScript templating language that conflicts with the &lt;a href=&quot;../liquid/index&quot;&gt;Liquid template syntax&lt;/a&gt;, you will need to place &lt;code&gt;{% raw %}&lt;/code&gt; and &lt;code&gt;{% endraw %}&lt;/code&gt; tags around your code.</source>
          <target state="translated">如果您使用的是&lt;a href=&quot;https://mustache.github.io&quot;&gt;Mustust&lt;/a&gt;或其他与&lt;a href=&quot;../liquid/index&quot;&gt;Liquid模板语法&lt;/a&gt;冲突的JavaScript模板语言，则需要在代码周围放置 &lt;code&gt;{% raw %}&lt;/code&gt; 和 &lt;code&gt;{% endraw %}&lt;/code&gt; 标签。</target>
        </trans-unit>
        <trans-unit id="1c3e668ae49129238e3243fbe784aef06c65fe75" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;https://mustache.github.io&quot;&gt;Mustache&lt;/a&gt; or another JavaScript templating language that conflicts with the &lt;a href=&quot;../templates/index&quot;&gt;Liquid template syntax&lt;/a&gt;, you will need to place &lt;code&gt;{% raw %}&lt;/code&gt; and &lt;code&gt;{% endraw %}&lt;/code&gt; tags around your code.</source>
          <target state="translated">如果您使用的是&lt;a href=&quot;https://mustache.github.io&quot;&gt;Mustust&lt;/a&gt;或另一种与&lt;a href=&quot;../templates/index&quot;&gt;Liquid模板语法&lt;/a&gt;冲突的JavaScript模板语言，则需要在代码周围放置 &lt;code&gt;{% raw %}&lt;/code&gt; 和 &lt;code&gt;{% endraw %}&lt;/code&gt; 标签。</target>
        </trans-unit>
        <trans-unit id="0ed1e0d2a9dbfbe50531ee5b5a5b6ba715d0f7eb" translate="yes" xml:space="preserve">
          <source>If you are using Sass &lt;code&gt;@import&lt;/code&gt; statements, you&amp;rsquo;ll need to ensure that your &lt;code&gt;sass_dir&lt;/code&gt; is set to the base directory that contains your Sass files. You can do that thusly:</source>
          <target state="translated">如果使用Sass &lt;code&gt;@import&lt;/code&gt; 语句，则需要确保将 &lt;code&gt;sass_dir&lt;/code&gt; 设置为包含Sass文件的基本目录。您可以这样进行：</target>
        </trans-unit>
        <trans-unit id="bb5e4a12cfe3aacf0a4395c36e1bdfec8fdf450f" translate="yes" xml:space="preserve">
          <source>If you are using Sass &lt;code&gt;@import&lt;/code&gt; statements, you&amp;rsquo;ll need to ensure that your &lt;code&gt;sass_dir&lt;/code&gt; is set to the base directory that contains your Sass files:</source>
          <target state="translated">如果使用的是Sass &lt;code&gt;@import&lt;/code&gt; 语句，则需要确保将 &lt;code&gt;sass_dir&lt;/code&gt; 设置为包含Sass文件的基本目录：</target>
        </trans-unit>
        <trans-unit id="28a432b4772235d9fdcee272275536f400244d55" translate="yes" xml:space="preserve">
          <source>If you are using Windows 10 Anniversary Update, the easiest way to run Jekyll is by &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/install_guide&quot;&gt;installing&lt;/a&gt; the new Bash on Ubuntu on Windows.</source>
          <target state="translated">如果您使用的是Windows 10周年更新，则运行Jekyll的最简单方法是在Windows的Ubuntu上&lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/install_guide&quot;&gt;安装&lt;/a&gt;新的Bash。</target>
        </trans-unit>
        <trans-unit id="2a81cb095a8d568b4ef014280b4015ce988fdab9" translate="yes" xml:space="preserve">
          <source>If you are using Windows 10 version 1607 or later, another option to run Jekyll is by &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/install_guide&quot;&gt;installing&lt;/a&gt; the Windows Subsystem for Linux.</source>
          <target state="translated">如果您使用的是Windows 10版本1607或更高版本，则运行Jekyll的另一种方法是&lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/install_guide&quot;&gt;安装&lt;/a&gt;用于Linux的Windows子系统。</target>
        </trans-unit>
        <trans-unit id="2a4c58b5be6464946cbf57593a4dc9dc48e866b2" translate="yes" xml:space="preserve">
          <source>If you are using a language that contains curly braces, you will likely need to place &lt;code&gt;{% raw %}&lt;/code&gt; and &lt;code&gt;{% endraw %}&lt;/code&gt; tags around your code.</source>
          <target state="translated">如果您使用的花括号包含大括号，则可能需要在代码周围放置 &lt;code&gt;{% raw %}&lt;/code&gt; 和 &lt;code&gt;{% endraw %}&lt;/code&gt; 标签。</target>
        </trans-unit>
        <trans-unit id="43280c8d089211df31d449a663b503e07e058bb0" translate="yes" xml:space="preserve">
          <source>If you are using a language that contains curly braces, you will likely need to place &lt;code&gt;{% raw %}&lt;/code&gt; and &lt;code&gt;{% endraw %}&lt;/code&gt; tags around your code. Since Jekyll 4.0 , you can add &lt;code&gt;render_with_liquid: false&lt;/code&gt; in your front matter to disable Liquid entirely for a particular document.</source>
          <target state="translated">如果您使用包含花括号的语言，则可能需要在代码周围放置 &lt;code&gt;{% raw %}&lt;/code&gt; 和 &lt;code&gt;{% endraw %}&lt;/code&gt; 标签。从Jekyll 4.0开始，您可以在前端添加 &lt;code&gt;render_with_liquid: false&lt;/code&gt; 以完全禁用特定文档的Liquid。</target>
        </trans-unit>
        <trans-unit id="213db0da911c55c4f2731ecd97c211b394f06562" translate="yes" xml:space="preserve">
          <source>If you are using base-url option like:</source>
          <target state="translated">如果你使用的是base-url选项,比如。</target>
        </trans-unit>
        <trans-unit id="d35638d8ed6e8b486e57c45fbf52ce1a8ba65712" translate="yes" xml:space="preserve">
          <source>If you come across a bug, please &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;create an issue&lt;/a&gt; on GitHub describing the problem and any work-arounds you find so we can document it here for others.</source>
          <target state="translated">如果遇到错误，请在GitHub上&lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;创建一个问题，&lt;/a&gt;以描述问题和找到的任何变通办法，以便我们在此处为其他人员提供文档。</target>
        </trans-unit>
        <trans-unit id="8703fee3ae2012b8a53fc6cc2adddae7042dfc8d" translate="yes" xml:space="preserve">
          <source>If you come across anything along the way that we haven&amp;rsquo;t covered, or if you know of a tip you think others would find handy, please &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;file an issue&lt;/a&gt; and we&amp;rsquo;ll see about including it in this guide.</source>
          <target state="translated">如果您遇到了我们未涵盖的任何内容，或者您​​知道其他人会觉得有用的提示，请&lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;提出问题&lt;/a&gt;，我们将在本指南中予以介绍。</target>
        </trans-unit>
        <trans-unit id="1b5ec381e23f973cc13dece96999c3131002c2bf" translate="yes" xml:space="preserve">
          <source>If you do preview your theme locally, be sure to add &lt;code&gt;/_site&lt;/code&gt; to your theme&amp;rsquo;s &lt;code&gt;.gitignore&lt;/code&gt; file to prevent the compiled site from also being included when you distribute your theme.</source>
          <target state="translated">如果您确实在本地预览主题，请确保将 &lt;code&gt;/_site&lt;/code&gt; 添加到主题的 &lt;code&gt;.gitignore&lt;/code&gt; 文件中，以防止在分发主题时也包含编译后的站点。</target>
        </trans-unit>
        <trans-unit id="f284c06984fce66f7dd57a7b4b5f2ec076b195fe" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t like the automatically-generated post excerpt, it can be explicitly overridden by adding an &lt;code&gt;excerpt&lt;/code&gt; value to your post&amp;rsquo;s YAML Front Matter. Alternatively, you can choose to define a custom &lt;code&gt;excerpt_separator&lt;/code&gt; in the post&amp;rsquo;s YAML front matter:</source>
          <target state="translated">如果您不喜欢自动生成的帖子摘录，则可以通过将 &lt;code&gt;excerpt&lt;/code&gt; 值添加到帖子的YAML Front Matter中来显式覆盖它。或者，您可以选择在该帖子的YAML前端问题中定义自定义 &lt;code&gt;excerpt_separator&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d8dcbea52725084b044622cd5f2ef094e993b82b" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t specify any permalink setting, Jekyll uses the above pattern as the default.</source>
          <target state="translated">如果您未指定任何永久链接设置，Jekyll将使用上述模式作为默认模式。</target>
        </trans-unit>
        <trans-unit id="dcb9485c8b5e90e3f365ed37424df30d5e0be640" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want file extensions (&lt;code&gt;.html&lt;/code&gt;) to appear in your page URLs (file extensions are the default), you can choose a &lt;a href=&quot;../permalinks/index#builtinpermalinkstyles&quot;&gt;permalink style&lt;/a&gt; that has a trailing slash instead of a file extension.</source>
          <target state="translated">如果您不希望文件扩展名（ &lt;code&gt;.html&lt;/code&gt; ）出现在页面URL中（默认文件扩展名），则可以选择带有尾部斜杠的&lt;a href=&quot;../permalinks/index#builtinpermalinkstyles&quot;&gt;永久链接样式&lt;/a&gt;而不是文件扩展名。</target>
        </trans-unit>
        <trans-unit id="691e1ac95cea8ad1bfd352b94e199cf2238e92d8" translate="yes" xml:space="preserve">
          <source>If you don't want to repeat your frequently used front matter variables over and over, define &lt;a href=&quot;../configuration/front-matter-defaults/index&quot;&gt;defaults&lt;/a&gt; for them and only override them where necessary (or not at all). This works both for predefined and custom variables.</source>
          <target state="translated">如果您不想一遍又一遍地重复使用您经常使用的前事变量，请为它们定义&lt;a href=&quot;../configuration/front-matter-defaults/index&quot;&gt;默认值&lt;/a&gt;，并仅在必要时覆盖它们（或根本不覆盖它们）。这适用于预定义和自定义变量。</target>
        </trans-unit>
        <trans-unit id="53dcae4af8a7270750576a8ee8bba86266df85af" translate="yes" xml:space="preserve">
          <source>If you don't want to repeat your frequently used front matter variables over and over, just define &lt;a href=&quot;../configuration/index#front-matter-defaults&quot;&gt;defaults&lt;/a&gt; for them and only override them where necessary (or not at all). This works both for predefined and custom variables.</source>
          <target state="translated">如果您不想一遍又一遍地重复使用您经常使用的前事变量，只需为其定义&lt;a href=&quot;../configuration/index#front-matter-defaults&quot;&gt;默认值&lt;/a&gt;，然后仅在必要时覆盖它们（或根本不覆盖它们）。这适用于预定义和自定义变量。</target>
        </trans-unit>
        <trans-unit id="695dbec8f8c7d62ab7d2637fbd3d02db37fa7dca" translate="yes" xml:space="preserve">
          <source>If you elect to use one of the above methods to install Ruby, it might be necessary to modify your &lt;code&gt;$PATH&lt;/code&gt; variable using the following command:</source>
          <target state="translated">如果选择使用上述方法之一来安装Ruby，则可能有必要使用以下命令来修改 &lt;code&gt;$PATH&lt;/code&gt; 变量：</target>
        </trans-unit>
        <trans-unit id="d0daf76ccc8900e401691ef193ac3cfdb207f8ba" translate="yes" xml:space="preserve">
          <source>If you encounter any errors during this process, check that you have installed all the prerequisites in &lt;a href=&quot;installation/index#requirements&quot;&gt;Requirements&lt;/a&gt;. If you still have issues, see &lt;a href=&quot;troubleshooting/index#configuration-problems&quot;&gt;Troubleshooting&lt;/a&gt;.</source>
          <target state="translated">如果在此过程中遇到任何错误，请检查是否已安装&amp;ldquo;&lt;a href=&quot;installation/index#requirements&quot;&gt;需求&amp;rdquo;中的&lt;/a&gt;所有先决条件。如果仍有问题，请参阅&amp;ldquo;&lt;a href=&quot;troubleshooting/index#configuration-problems&quot;&gt;故障排除&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78ac4df433e508538f8c91dafb01e421b709b72f" translate="yes" xml:space="preserve">
          <source>If you encounter any unexpected errors during the above, please refer to the &lt;a href=&quot;../troubleshooting/index#configuration-problems&quot;&gt;troubleshooting&lt;/a&gt; page or the already-mentioned &lt;a href=&quot;../installation/index#requirements&quot;&gt;requirements&lt;/a&gt; page, as you might be missing development headers or other prerequisites.</source>
          <target state="translated">如果在上述过程中遇到任何意外错误，请参阅&lt;a href=&quot;../troubleshooting/index#configuration-problems&quot;&gt;故障排除&lt;/a&gt;页面或已经提到的&lt;a href=&quot;../installation/index#requirements&quot;&gt;需求&lt;/a&gt;页面，因为您可能缺少开发标头或其他先决条件。</target>
        </trans-unit>
        <trans-unit id="419149f36b3a43f81bd8852b1793187c1d0de326" translate="yes" xml:space="preserve">
          <source>If you encounter errors during gem installation, you may need to install the header files for compiling extension modules for Ruby 2.x This can be done on Ubuntu or Debian by running:</source>
          <target state="translated">如果您在安装 gem 的过程中遇到错误,您可能需要安装用于编译 Ruby 2.x 扩展模块的头文件,这可以在 Ubuntu 或 Debian 上通过运行。</target>
        </trans-unit>
        <trans-unit id="bc681b212f4599ce7e31a75ab7408667783b5d07" translate="yes" xml:space="preserve">
          <source>If you ever run into problems installing or using Jekyll, here are a few tips that might be of help. If the problem you&amp;rsquo;re experiencing isn&amp;rsquo;t covered below, &lt;strong&gt;please &lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;check out our other help resources&lt;/a&gt;&lt;/strong&gt; as well.</source>
          <target state="translated">如果您在安装或使用Jekyll时遇到问题，这里有一些技巧可能会有所帮助。如果下面没有解决您遇到的问题，&lt;strong&gt;请同时&lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;查看我们的其他帮助资源&lt;/a&gt;&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="bcaae47dde1bccae46283be925cd88f5bb4ac8bc" translate="yes" xml:space="preserve">
          <source>If you have a Jekyll plugin that you would like to see added to this list, you should &lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;read the contributing page&lt;/a&gt; to find out how to make that happen.</source>
          <target state="translated">如果您希望将Jekyll插件添加到此列表中，则应&lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;阅读该页面&lt;/a&gt;以了解如何实现此目的。</target>
        </trans-unit>
        <trans-unit id="83baaab7df26fe688de694edde9457dbded438f4" translate="yes" xml:space="preserve">
          <source>If you have a lot of pages, you can organize them into subfolders. The same subfolders that are used to group your pages in your project&amp;rsquo;s source will then exist in the &lt;code&gt;_site&lt;/code&gt; folder when your site builds. However, when a page has a &lt;em&gt;different&lt;/em&gt; permalink set in the front matter, the subfolder at &lt;code&gt;_site&lt;/code&gt; changes accordingly.</source>
          <target state="translated">如果页面很多，可以将它们组织到子文件夹中。当您构建网站时，用于在项目源中对页面进行分组的相同子文件夹将存在于 &lt;code&gt;_site&lt;/code&gt; 文件夹中。但是，如果在页面的首页设置了&lt;em&gt;不同的&lt;/em&gt;永久链接，则 &lt;code&gt;_site&lt;/code&gt; 的子文件夹会相应更改。</target>
        </trans-unit>
        <trans-unit id="ae769a5e5cf97ef3147fb61d183e310b175222ef" translate="yes" xml:space="preserve">
          <source>If you have a lot of pages, you can organize those pages into subfolders. The same subfolders that are used to group your pages in our project&amp;rsquo;s source will exist in the &lt;code&gt;_site&lt;/code&gt; folder when your site builds.</source>
          <target state="translated">如果页面很多，可以将这些页面组织到子文件夹中。网站构建时， &lt;code&gt;_site&lt;/code&gt; 文件夹中将存在用于在我们项目源中将页面分组的相同子文件夹。</target>
        </trans-unit>
        <trans-unit id="5bad37a14e75aa6498e803b19d46fb965756f922" translate="yes" xml:space="preserve">
          <source>If you have a new markup language you&amp;rsquo;d like to use with your site, you can include it by implementing your own converter. Both the Markdown and &lt;a href=&quot;https://github.com/jekyll/jekyll-textile-converter&quot;&gt;Textile&lt;/a&gt; markup languages are implemented using this method.</source>
          <target state="translated">如果您要在网站上使用新的标记语言，则可以通过实现自己的转换器将其包括在内。Markdown和&lt;a href=&quot;https://github.com/jekyll/jekyll-textile-converter&quot;&gt;Textile&lt;/a&gt;标记语言都是使用此方法实现的。</target>
        </trans-unit>
        <trans-unit id="5df5d74f07c47f2eb7598f9ac1144208de07b108" translate="yes" xml:space="preserve">
          <source>If you have a question about using Jekyll, start a discussion on the &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Forum&lt;/a&gt; or &lt;a href=&quot;https://stackoverflow.com/questions/tagged/jekyll&quot;&gt;StackOverflow&lt;/a&gt;</source>
          <target state="translated">如果您对使用Jekyll有疑问，请在&lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll论坛&lt;/a&gt;或&lt;a href=&quot;https://stackoverflow.com/questions/tagged/jekyll&quot;&gt;StackOverflow&lt;/a&gt;上开始讨论。</target>
        </trans-unit>
        <trans-unit id="11e684240f96bf103554d83d8af061e74dfe3c4d" translate="yes" xml:space="preserve">
          <source>If you have direct access to the deployment web server, the process is essentially the same, except you might have other methods available to you (such as &lt;code&gt;scp&lt;/code&gt;, or even direct filesystem access) for transferring the files. Just remember to make sure the contents of the generated &lt;code&gt;_site&lt;/code&gt; folder get placed in the appropriate web root directory for your web server.</source>
          <target state="translated">如果您可以直接访问部署Web服务器，则过程基本相同，只是您可能还可以使用其他方法（例如 &lt;code&gt;scp&lt;/code&gt; 或直接文件系统访问）来传输文件。只要记住确保将生成的 &lt;code&gt;_site&lt;/code&gt; 文件夹的内容放置在Web服务器的相应Web根目录中即可。</target>
        </trans-unit>
        <trans-unit id="637cf5bb125e71dc601be35ffda20c19e2ee577a" translate="yes" xml:space="preserve">
          <source>If you have direct access to the deployment web server, the process is essentially the same, except you might have other methods available to you (such as &lt;code&gt;scp&lt;/code&gt;, or even direct filesystem access) for transferring the files. Remember to make sure the contents of the generated &lt;code&gt;_site&lt;/code&gt; folder get placed in the appropriate web root directory for your web server.</source>
          <target state="translated">如果您可以直接访问部署Web服务器，则过程基本上是相同的，除了您可能还可以使用其他方法（例如 &lt;code&gt;scp&lt;/code&gt; ，甚至直接文件系统访问）来传输文件。切记确保将生成的 &lt;code&gt;_site&lt;/code&gt; 文件夹的内容放置在Web服务器的相应Web根目录中。</target>
        </trans-unit>
        <trans-unit id="fe535a62e54177c3a383406390df61e1e1cc7866" translate="yes" xml:space="preserve">
          <source>If you have page snippets that you use repeatedly across your site, an &lt;a href=&quot;../../includes/index&quot;&gt;include&lt;/a&gt; is the perfect way to make this more maintainable.</source>
          <target state="translated">如果您有在网站上重复使用的网页摘要，则&lt;a href=&quot;../../includes/index&quot;&gt;包含&lt;/a&gt;是使此摘要更具可维护性的理想方法。</target>
        </trans-unit>
        <trans-unit id="5eb091944ffc4551a59bb8692f2615682ca2403a" translate="yes" xml:space="preserve">
          <source>If you have pages organized into subfolders in your source folder and want to flatten them in the root folder on build, you must add the &lt;a href=&quot;../permalinks/index&quot;&gt;permalink&lt;/a&gt; property directly in your page&amp;rsquo;s front matter like this:</source>
          <target state="translated">如果您在源文件夹中将页面组织成子文件夹，并且想要在构建时将其平放在根文件夹中，则必须将&lt;a href=&quot;../permalinks/index&quot;&gt;permalink&lt;/a&gt;属性直接添加到页面的前端，如下所示：</target>
        </trans-unit>
        <trans-unit id="0577f8860296868fa98d8d8f4df1bfbc54574ecc" translate="yes" xml:space="preserve">
          <source>If you have small page snippets that you want to include in multiple places on your site, save the snippets as &lt;em&gt;include files&lt;/em&gt; and insert them where required, by using the &lt;code&gt;include&lt;/code&gt; tag:</source>
          <target state="translated">如果您要在网站的多个位置包含小页面片段，请将片段保存为&lt;em&gt;包含文件，&lt;/em&gt;并使用 &lt;code&gt;include&lt;/code&gt; 标记将其插入到需要的位置：</target>
        </trans-unit>
        <trans-unit id="e4dcbf97134ec15dac093fc5587622568f5e7a06" translate="yes" xml:space="preserve">
          <source>If you have the theme gem, you can (if you desire) run &lt;code&gt;bundle update&lt;/code&gt; to update all gems in your project. Or you can run &lt;code&gt;bundle update &amp;lt;THEME&amp;gt;&lt;/code&gt;, replacing &lt;code&gt;&amp;lt;THEME&amp;gt;&lt;/code&gt; with the theme name, such as &lt;code&gt;minima&lt;/code&gt;, to just update the theme gem. Any new files or updates the theme developer has made (such as to stylesheets or includes) will be pulled into your project automatically.</source>
          <target state="translated">如果您有主题gem，则可以（如果需要）运行 &lt;code&gt;bundle update&lt;/code&gt; 以更新项目中的所有gem。或者，您可以运行 &lt;code&gt;bundle update &amp;lt;THEME&amp;gt;&lt;/code&gt; ，将 &lt;code&gt;&amp;lt;THEME&amp;gt;&lt;/code&gt; 替换为主题名称（例如 &lt;code&gt;minima&lt;/code&gt; )，以仅更新主题gem。主题开发人员进行的任何新文件或更新（例如样式表或包含）将被自动拉入您的项目。</target>
        </trans-unit>
        <trans-unit id="2af9aac0e83cca3a7b6edb3afed5cb21b5ce923a" translate="yes" xml:space="preserve">
          <source>If you installed the above - specifically on Fedora 23 - but the extensions would still not compile, you are probably running a Fedora image that misses the &lt;code&gt;redhat-rpm-config&lt;/code&gt; package. To solve this, simply run:</source>
          <target state="translated">如果您是在Fedora 23上专门安装了以上版本，但扩展名仍然无法编译，则可能是运行的Fedora映像缺少 &lt;code&gt;redhat-rpm-config&lt;/code&gt; 软件包。要解决这个问题，只需运行：</target>
        </trans-unit>
        <trans-unit id="7d5ca65d123a97afb7c4de424400cec844b7cc8b" translate="yes" xml:space="preserve">
          <source>If you need your processed blog post URLs to be something other than the site-wide style (default &lt;code&gt;/year/month/day/title.html&lt;/code&gt;), then you can set this variable and it will be used as the final URL.</source>
          <target state="translated">如果您需要将处理后的博客文章URL设置为网站范围以外的样式（默认为 &lt;code&gt;/year/month/day/title.html&lt;/code&gt; ），则可以设置此变量并将其用作最终URL。</target>
        </trans-unit>
        <trans-unit id="1a6d4a67cd0be1ed8225a589b96384dc4dc87421" translate="yes" xml:space="preserve">
          <source>If you organize your posts in subdirectories, you need to include subdirectory path to the post:</source>
          <target state="translated">如果你用子目录组织你的帖子,你需要包括帖子的子目录路径。</target>
        </trans-unit>
        <trans-unit id="59644a3bec6611d4bbfb69658dbc3ec13b376b50" translate="yes" xml:space="preserve">
          <source>If you organized your categories as &lt;code&gt;/_posts/code/2008-12-24-closures.md&lt;/code&gt;, you will need to restructure your directories to put the categories &lt;em&gt;above&lt;/em&gt; the &lt;code&gt;_posts&lt;/code&gt; directories, as follows: &lt;code&gt;/code/_posts/2008-12-24-closures.md&lt;/code&gt;.</source>
          <target state="translated">如果您的组织类别， &lt;code&gt;/_posts/code/2008-12-24-closures.md&lt;/code&gt; ，你将需要重组的目录，把类&lt;em&gt;以上&lt;/em&gt;的 &lt;code&gt;_posts&lt;/code&gt; 目录，如下所示： &lt;code&gt;/code/_posts/2008-12-24-closures.md&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15e7da8c7232d666a600ffd29e96790343ccd0c8" translate="yes" xml:space="preserve">
          <source>If you prefer configuration as code over GUI, you can generate a &lt;code&gt;buddy.yml&lt;/code&gt; that will create a pipeline with the Jekyll action once you push it to the target branch:</source>
          <target state="translated">如果您更喜欢将配置作为代码而不是GUI，则可以生成 &lt;code&gt;buddy.yml&lt;/code&gt; ，一旦将其推到目标分支，它将使用Jekyll操作创建管道：</target>
        </trans-unit>
        <trans-unit id="2c5ed4bc716636bfe873be9c1845bd719868a4d7" translate="yes" xml:space="preserve">
          <source>If you run into an issue that a static file can&amp;rsquo;t be found in your production environment during build since v3.2.0 you should set your &lt;a href=&quot;../configuration/environments/index&quot;&gt;environment to &lt;code&gt;production&lt;/code&gt;&lt;/a&gt;. The issue is caused by trying to copy a non-existing symlink.</source>
          <target state="translated">如果从v3.2.0版本开始在构建过程中遇到无法在生产环境中找到静态文件的问题，则应将&lt;a href=&quot;../configuration/environments/index&quot;&gt;环境 &lt;code&gt;production&lt;/code&gt; &lt;/a&gt;设置为生产。该问题是由于尝试复制不存在的符号链接引起的。</target>
        </trans-unit>
        <trans-unit id="d87bce7a50eafecc7cde1bce304d6aef1a746a27" translate="yes" xml:space="preserve">
          <source>If you run into an issue that a static file can&amp;rsquo;t be found in your production environment during build since v3.2.0 you should set your &lt;a href=&quot;../configuration/index#specifying-a-jekyll-environment-at-build-time&quot;&gt;environment to &lt;code&gt;production&lt;/code&gt;&lt;/a&gt;. The issue is caused by trying to copy a non-existing symlink.</source>
          <target state="translated">如果从v3.2.0版本开始在构建过程中遇到在生产环境中找不到静态文件的问题，则应将&lt;a href=&quot;../configuration/index#specifying-a-jekyll-environment-at-build-time&quot;&gt;环境 &lt;code&gt;production&lt;/code&gt; &lt;/a&gt;设置为生产。该问题是由于尝试复制不存在的符号链接引起的。</target>
        </trans-unit>
        <trans-unit id="8a24692597a6a916d6932c56c3b3699b4da36b10" translate="yes" xml:space="preserve">
          <source>If you run into issues installing Jekyll's dependencies which make use of native extensions and are using macOS, you will need to install Xcode and the Command-Line Tools it ships with. Download them in &lt;code&gt;Preferences &amp;rarr; Downloads &amp;rarr; Components&lt;/code&gt;.</source>
          <target state="translated">如果您在安装使用本机扩展且使用macOS的Jekyll依赖项时遇到问题，则需要安装Xcode及其附带的命令行工具。在 &lt;code&gt;Preferences &amp;rarr; Downloads &amp;rarr; Components&lt;/code&gt; 下载它们。</target>
        </trans-unit>
        <trans-unit id="63f6ac72947ee61e3701e918efc95d21e22b41e4" translate="yes" xml:space="preserve">
          <source>If you see the following error when running the &lt;code&gt;jekyll new&lt;/code&gt; command, you can solve it by using the above-described procedure:</source>
          <target state="translated">如果在运行 &lt;code&gt;jekyll new&lt;/code&gt; 命令时看到以下错误，则可以使用上述过程解决它：</target>
        </trans-unit>
        <trans-unit id="870ad99aca29d304fc24ad3ab294442ef63a802d" translate="yes" xml:space="preserve">
          <source>If you specify a directory to store all your collections in the same place with &lt;code&gt;collections_dir: my_collections&lt;/code&gt;, then you will need to move your &lt;code&gt;_drafts&lt;/code&gt; and &lt;code&gt;_posts&lt;/code&gt; directory to &lt;code&gt;my_collections/_drafts&lt;/code&gt; and &lt;code&gt;my_collections/_posts&lt;/code&gt;. Note that, the name of your collections directory cannot start with an underscore (`_`).</source>
          <target state="translated">如果您指定一个目录来将所有集合与 &lt;code&gt;collections_dir: my_collections&lt;/code&gt; 存储在同一位置，则需要将 &lt;code&gt;_drafts&lt;/code&gt; 和 &lt;code&gt;_posts&lt;/code&gt; 目录移动到 &lt;code&gt;my_collections/_drafts&lt;/code&gt; 和 &lt;code&gt;my_collections/_posts&lt;/code&gt; 。请注意，您的collections目录的名称不能以下划线（_）开头。</target>
        </trans-unit>
        <trans-unit id="203d28453b3da20875b1b4f55216eb8f66ab1182" translate="yes" xml:space="preserve">
          <source>If you specify a directory to store all your collections in the same place with &lt;code&gt;collections_dir: my_collections&lt;/code&gt;, then you will need to move your &lt;code&gt;_posts&lt;/code&gt; directory to &lt;code&gt;my_collections/_posts&lt;/code&gt;. Note that, the name of your collections directory cannot start with an underscore (`_`).</source>
          <target state="translated">如果您指定一个目录，以将所有集合与 &lt;code&gt;collections_dir: my_collections&lt;/code&gt; 存储在同一位置，则需要将 &lt;code&gt;_posts&lt;/code&gt; 目录移动到 &lt;code&gt;my_collections/_posts&lt;/code&gt; 。请注意，收藏夹目录的名称不能以下划线（_）开头。</target>
        </trans-unit>
        <trans-unit id="152a6851ec832106f1870e82fa9510155e162df2" translate="yes" xml:space="preserve">
          <source>If you specify front matter in a layout, access that via &lt;code&gt;layout&lt;/code&gt;. For example, if you specify &lt;code&gt;class: full_page&lt;/code&gt; in a layout&amp;rsquo;s front matter, that value will be available as &lt;code&gt;layout.class&lt;/code&gt; in the layout and its parents.</source>
          <target state="translated">如果您在布局中指定前件，请通过 &lt;code&gt;layout&lt;/code&gt; 进行访问。例如，如果在布局的最前面指定 &lt;code&gt;class: full_page&lt;/code&gt; ，则该值将在布局及其父级中用作 &lt;code&gt;layout.class&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc758ea2a58bbed0770047b054fc5a31a9910319" translate="yes" xml:space="preserve">
          <source>If you still have issues, you can download and install new Command Line Tools (such as &lt;code&gt;gcc&lt;/code&gt;) using the following command:</source>
          <target state="translated">如果仍然有问题，可以使用以下命令下载并安装新的命令行工具（例如 &lt;code&gt;gcc&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="3f40408167848ab5e0ef03799fbc3e4838fc4b88" translate="yes" xml:space="preserve">
          <source>If you store your Jekyll site in &lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt; (you are using version control, right?), it&amp;rsquo;s pretty easy to automate the deployment process by setting up a post-update hook in your Git repository, &lt;a href=&quot;http://web.archive.org/web/20091223025644/http://www.taknado.com/en/2009/03/26/deploying-a-jekyll-generated-site/&quot;&gt;like this&lt;/a&gt;.</source>
          <target state="translated">如果您将Jekyll站点存储在&lt;a href=&quot;https://git-scm.com/&quot;&gt;Git中&lt;/a&gt;（正在使用版本控制，对吗？），通过在Git存储库中设置更新后的挂钩（&lt;a href=&quot;http://web.archive.org/web/20091223025644/http://www.taknado.com/en/2009/03/26/deploying-a-jekyll-generated-site/&quot;&gt;例如&lt;/a&gt;），可以很容易地自动化部署过程。</target>
        </trans-unit>
        <trans-unit id="9540f36c3037240d8cea90995f2c2a76090e644d" translate="yes" xml:space="preserve">
          <source>If you think you&amp;rsquo;ve found a bug within Jekyll itself, &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;open an issue&lt;/a&gt;.</source>
          <target state="translated">如果您认为自己在Jekyll内发现了一个错误，请&lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;打开一个问题&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e92ecdb1ed9493dd4eabcd57a2204713ec491365" translate="yes" xml:space="preserve">
          <source>If you think you&amp;rsquo;ve found a bug within a Jekyll plugin, open an issue in that plugin&amp;rsquo;s repository &amp;mdash; First &lt;a href=&quot;https://rubygems.org/&quot;&gt;look for the plugin on rubygems&lt;/a&gt; then click on the &lt;code&gt;Homepage&lt;/code&gt; link to access the plugin repository.</source>
          <target state="translated">如果您认为在Jekyll插件中发现了错误，请在该插件的存储库中打开一个问题-首先&lt;a href=&quot;https://rubygems.org/&quot;&gt;在rubygems上查找该插件，&lt;/a&gt;然后单击&amp;ldquo; &lt;code&gt;Homepage&lt;/code&gt; 链接以访问该插件存储库。</target>
        </trans-unit>
        <trans-unit id="12a48184851539ccef251a9fea32dc2a0dd1273a" translate="yes" xml:space="preserve">
          <source>If you use UTF-8 encoding, make sure that no &lt;code&gt;BOM&lt;/code&gt; header characters exist in your files or very, very bad things will happen to Jekyll. This is especially relevant if you&amp;rsquo;re running &lt;a href=&quot;../installation/windows/index&quot;&gt;Jekyll on Windows&lt;/a&gt;.</source>
          <target state="translated">如果使用UTF-8编码，请确保文件中不存在 &lt;code&gt;BOM&lt;/code&gt; 表头字符，否则Jekyll会发生非常非常糟糕的事情。如果您&lt;a href=&quot;../installation/windows/index&quot;&gt;在Windows上&lt;/a&gt;运行Jekyll，则这一点尤其重要。</target>
        </trans-unit>
        <trans-unit id="9c5c7747d5156ac128a683ae71080c529b562e3a" translate="yes" xml:space="preserve">
          <source>If you use UTF-8 encoding, make sure that no &lt;code&gt;BOM&lt;/code&gt; header characters exist in your files or very, very bad things will happen to Jekyll. This is especially relevant if you&amp;rsquo;re running &lt;a href=&quot;../windows/index&quot;&gt;Jekyll on Windows&lt;/a&gt;.</source>
          <target state="translated">如果使用UTF-8编码，请确保文件中不存在 &lt;code&gt;BOM&lt;/code&gt; 表头字符，否则Jekyll会发生非常非常糟糕的事情。如果您&lt;a href=&quot;../windows/index&quot;&gt;在Windows上&lt;/a&gt;运行Jekyll，则这尤其重要。</target>
        </trans-unit>
        <trans-unit id="513a6a109d9f46f3d1d111d65d91f74ea48f6618" translate="yes" xml:space="preserve">
          <source>If you use UTF-8 encoding, make sure that no &lt;code&gt;BOM&lt;/code&gt; header characters exist in your files or very, very bad things will happen to Jekyll. This is especially relevant when you&amp;rsquo;re running Jekyll on Windows.</source>
          <target state="translated">如果使用UTF-8编码，请确保文件中不存在 &lt;code&gt;BOM&lt;/code&gt; 表头字符，否则Jekyll会发生非常非常糟糕的事情。当您在Windows上运行Jekyll时，这一点尤其重要。</target>
        </trans-unit>
        <trans-unit id="7519b21e43136b2c3303f52f1442a4bc5f55ca7c" translate="yes" xml:space="preserve">
          <source>If you use UTF-8 encoding, make sure that no &lt;code&gt;BOM&lt;/code&gt; header characters exist in your files. If they don&amp;rsquo;t, Jekyll will break. This is especially relevant when you&amp;rsquo;re running Jekyll on Windows.</source>
          <target state="translated">如果使用UTF-8编码，请确保文件中不存在 &lt;code&gt;BOM&lt;/code&gt; 表头字符。如果他们不这样做，Jekyll会破产。当您在Windows上运行Jekyll时，这一点尤其重要。</target>
        </trans-unit>
        <trans-unit id="ac6a31955e7bb198829c3348c36e9744d447c4d5" translate="yes" xml:space="preserve">
          <source>If you use a permalink style that omits the &lt;code&gt;.html&lt;/code&gt; file extension, each post is rendered as an &lt;code&gt;index.html&lt;/code&gt; file inside a folder with the post&amp;rsquo;s name (for example, &lt;code&gt;categoryname/2016/12/01/mypostname/index.html&lt;/code&gt;).</source>
          <target state="translated">如果您使用的永久链接样式忽略了 &lt;code&gt;.html&lt;/code&gt; 文件扩展名，则每个帖子都将以 &lt;code&gt;index.html&lt;/code&gt; 文件的形式呈现在带有该帖子名称的文件夹内（例如， &lt;code&gt;categoryname/2016/12/01/mypostname/index.html&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c60bfc7d9e4f2630fffc6a2784feb3b63c67af79" translate="yes" xml:space="preserve">
          <source>If you use the &lt;code&gt;--config&lt;/code&gt; flag, Jekyll will ignore your &lt;code&gt;_config.yml&lt;/code&gt; file. Want to merge a custom configuration with the normal configuration? No problem. Jekyll will accept more than one custom config file via the command line. Config files cascade from right to left, such that if I run &lt;code&gt;jekyll serve --config _config.yml,_config-dev.yml&lt;/code&gt;, the values in the config files on the right (&lt;code&gt;_config-dev.yml&lt;/code&gt;) overwrite those on the left (&lt;code&gt;_config.yml&lt;/code&gt;) when both contain the same key.</source>
          <target state="translated">如果使用 &lt;code&gt;--config&lt;/code&gt; 标志，Jekyll将忽略 &lt;code&gt;_config.yml&lt;/code&gt; 文件。是否要将自定义配置与常规配置合并？没问题。 Jekyll将通过命令行接受多个自定义配置文件。配置文件从右到左级联，因此，如果我运行 &lt;code&gt;jekyll serve --config _config.yml,_config-dev.yml&lt;/code&gt; ，则右侧配置文件（ &lt;code&gt;_config-dev.yml&lt;/code&gt; ）中的值将覆盖左侧的配置文件（（ &lt;code&gt;_config.yml&lt;/code&gt; ）（两者都包含相同的密钥）。</target>
        </trans-unit>
        <trans-unit id="093409bc16fd6da356b69f3cf640249f766ed8ff" translate="yes" xml:space="preserve">
          <source>If you use the method described above, please remember that the URLs for all posts and pages contain a leading slash. Therefore, concatenating the site baseurl and the post/page url where &lt;code&gt;site.baseurl = /&lt;/code&gt; and &lt;code&gt;post.url = /2013/06/05/my-fun-post/&lt;/code&gt; will result in two leading slashes, which will break links. It is thus suggested that prefixing with &lt;code&gt;site.baseurl&lt;/code&gt; only be used when the &lt;code&gt;baseurl&lt;/code&gt; is something other than the default of &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">如果您使用上述方法，请记住所有文章和页面的URL都包含一个斜杠。因此，在 &lt;code&gt;site.baseurl = /&lt;/code&gt; 和 &lt;code&gt;post.url = /2013/06/05/my-fun-post/&lt;/code&gt; 将网站baseurl和post / page url连接起来将导致两个斜杠，这将断开链接。因此建议仅当 &lt;code&gt;baseurl&lt;/code&gt; 不是默认值 &lt;code&gt;/&lt;/code&gt; 时，才使用 &lt;code&gt;site.baseurl&lt;/code&gt; 作为前缀。</target>
        </trans-unit>
        <trans-unit id="27f3b5a86ae85eb00dfec776f201d29c0a6d0425" translate="yes" xml:space="preserve">
          <source>If you want to build for your production environment:</source>
          <target state="translated">如果你想为你的生产环境构建。</target>
        </trans-unit>
        <trans-unit id="54d25f7a99e4ca948852dc14d5de687e3b1584af" translate="yes" xml:space="preserve">
          <source>If you want to flatten your pages (pull them out of subfolders) in the &lt;code&gt;_site&lt;/code&gt; directory when your site builds (similar to posts), add the &lt;code&gt;permalink&lt;/code&gt; property to the front matter of each page, with no path specified:</source>
          <target state="translated">如果要在网站构建时（类似于帖子）在 &lt;code&gt;_site&lt;/code&gt; 目录中展平页面（将它们从子文件夹中拉出），请将 &lt;code&gt;permalink&lt;/code&gt; 属性添加到每个页面的开头，而无需指定路径：</target>
        </trans-unit>
        <trans-unit id="f4fd5fc834be5433029f508f385d4d410e8fef47" translate="yes" xml:space="preserve">
          <source>If you want to host your site in Amazon S3, you can do so by using the &lt;a href=&quot;https://github.com/laurilehmijoki/s3_website&quot;&gt;s3_website&lt;/a&gt; application. It will push your site to Amazon S3 where it can be served like any web server, dynamically scaling to almost unlimited traffic. This approach has the benefit of being about the cheapest hosting option available for low-volume blogs as you only pay for what you use.</source>
          <target state="translated">如果您想在Amazon S3中托管您的网站，则可以使用&lt;a href=&quot;https://github.com/laurilehmijoki/s3_website&quot;&gt;s3_website&lt;/a&gt;应用程序来托管。它将您的站点推送到Amazon S3，可以像在任何Web服务器上一样对其进行服务，并动态扩展到几乎无限的流量。这种方法的优势在于，它是低容量博客可用的最便宜的托管选项，因为您只需为使用的内容付费。</target>
        </trans-unit>
        <trans-unit id="0f193a2d48bc477f05170ef8b36607112f513e30" translate="yes" xml:space="preserve">
          <source>If you want to include a link to a post on your site, the &lt;code&gt;post_url&lt;/code&gt; tag will generate the correct permalink URL for the post you specify.</source>
          <target state="translated">如果要在您的网站上包含指向帖子的链接，则 &lt;code&gt;post_url&lt;/code&gt; 标记将为您指定的帖子生成正确的永久链接URL。</target>
        </trans-unit>
        <trans-unit id="3de0868d95be5eca5b95fed7d8f738ea01895123" translate="yes" xml:space="preserve">
          <source>If you want to include this variable in your parameter that you pass to an include, you need to store the entire parameter as a variable before passing it to the include. You can use &lt;code&gt;capture&lt;/code&gt; tags to create the variable:</source>
          <target state="translated">如果要在传递给包含的参数中包含此变量，则需要在将整个参数传递给包含之前将其存储为变量。您可以使用 &lt;code&gt;capture&lt;/code&gt; 标签来创建变量：</target>
        </trans-unit>
        <trans-unit id="a658dae7dbd88f8c356e9279323636361d819861" translate="yes" xml:space="preserve">
          <source>If you want to maintain Jekyll inside your existing Rails app, &lt;a href=&quot;https://github.com/zkarpinski/Jekyll-Admin&quot;&gt;Jekyll-Admin&lt;/a&gt; contains drop in code to make this possible. See Jekyll-Admin&amp;rsquo;s &lt;a href=&quot;https://github.com/zkarpinski/Jekyll-Admin/blob/master/README&quot;&gt;README&lt;/a&gt; for more details.</source>
          <target state="translated">如果您想在现有的Rails应用程序中维护Jekyll，&lt;a href=&quot;https://github.com/zkarpinski/Jekyll-Admin&quot;&gt;Jekyll-Admin&lt;/a&gt;包含用于实现此目的的代码。有关更多详细信息，请参见Jekyll-Admin的&lt;a href=&quot;https://github.com/zkarpinski/Jekyll-Admin/blob/master/README&quot;&gt;自述文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ec215e282a9ad8aecb2e4fc28cabe6ff27440918" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;a href=&quot;../variables/index&quot;&gt;Liquid tags and variables&lt;/a&gt; but don&amp;rsquo;t need anything in your front matter, just leave it empty! The set of triple-dashed lines with nothing in between will still get Jekyll to process your file. (This is useful for things like CSS and RSS feeds!)</source>
          <target state="translated">如果您想使用&lt;a href=&quot;../variables/index&quot;&gt;Liquid标签和变量，&lt;/a&gt;但是不需要任何东西，那就把它留空！中间没有任何东西的三点虚线组仍然可以使Jekyll处理您的文件。（这对于CSS和RSS提要非常有用！）</target>
        </trans-unit>
        <trans-unit id="d1fe99f58a90cab317379dfefe13b26122c4bcda" translate="yes" xml:space="preserve">
          <source>If you wish a specific page to be shown when accessing &lt;code&gt;/my_collection/&lt;/code&gt;, simply add &lt;code&gt;permalink: /my_collection/index.html&lt;/code&gt; to a page. To list items from the collection, on that page or any other, you can use:</source>
          <target state="translated">如果您希望在访问 &lt;code&gt;/my_collection/&lt;/code&gt; 时显示特定页面，只需将 &lt;code&gt;permalink: /my_collection/index.html&lt;/code&gt; 添加到页面中。要在该页面或其他页面上列出集合中的项目，可以使用：</target>
        </trans-unit>
        <trans-unit id="6e19cb6a37691f8463f62bacf36c8b8270dac01f" translate="yes" xml:space="preserve">
          <source>If you wish to specify a custom pattern for the URLs where your Collection pages will reside, you may do so with the &lt;a href=&quot;../permalinks/index&quot;&gt;&lt;code&gt;permalink&lt;/code&gt; property&lt;/a&gt;:</source>
          <target state="translated">如果您希望为&amp;ldquo;收藏&amp;rdquo;页面所驻留的URL指定自定义模式，则可以使用&lt;a href=&quot;../permalinks/index&quot;&gt; &lt;code&gt;permalink&lt;/code&gt; 属性&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="92960387c493deb76d50d5b4ca39fda778849568" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like Jekyll to create a public-facing, rendered version of each document in your collection, set the &lt;code&gt;output&lt;/code&gt; key to &lt;code&gt;true&lt;/code&gt; in your collection metadata in your &lt;code&gt;_config.yml&lt;/code&gt;:</source>
          <target state="translated">如果您希望Jekyll为集合中的每个文档创建一个面向公众的呈现版本，请在 &lt;code&gt;_config.yml&lt;/code&gt; 的集合元数据中将 &lt;code&gt;output&lt;/code&gt; 键设置为 &lt;code&gt;true&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="9118d1b292cfe3be8e42ad850895b79508bc287e" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like Jekyll to create a rendered page for each document in your collection, you can set the &lt;code&gt;output&lt;/code&gt; key to &lt;code&gt;true&lt;/code&gt; in your collection metadata in &lt;code&gt;_config.yml&lt;/code&gt;:</source>
          <target state="translated">如果您希望Jekyll为集合中的每个文档创建一个呈现页面，则可以在 &lt;code&gt;_config.yml&lt;/code&gt; 的集合元数据中将 &lt;code&gt;output&lt;/code&gt; 键设置为 &lt;code&gt;true&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c98ec53237b3b221ccdc7703ba591ac8f244e25b" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to deploy your site to an OpenShift gear, there&amp;rsquo;s &lt;a href=&quot;https://github.com/openshift-quickstart/jekyll-openshift&quot;&gt;a cartridge for that&lt;/a&gt;.</source>
          <target state="translated">如果您想将网站部署到OpenShift设备上，则&lt;a href=&quot;https://github.com/openshift-quickstart/jekyll-openshift&quot;&gt;可以使用它&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="998a11f086dc4bb30ed94b741a45b756ab41c2bb" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to include custom liquid tags in your site, you can do so by hooking into the tagging system. Built-in examples added by Jekyll include the &lt;code&gt;highlight&lt;/code&gt; and &lt;code&gt;include&lt;/code&gt; tags. Below is an example of a custom liquid tag that will output the time the page was rendered:</source>
          <target state="translated">如果您想在网站中添加自定义液体标签，可以通过插入标签系统来实现。内置的化身加例子包括 &lt;code&gt;highlight&lt;/code&gt; 和 &lt;code&gt;include&lt;/code&gt; 标签。以下是一个自定义液体标签的示例，该标签将输出呈现页面的时间：</target>
        </trans-unit>
        <trans-unit id="017dd07e8fc43764c8236ec7941cbc62c51810e3" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to install a development version of Jekyll, the process is a bit more involved. This gives you the advantage of having the latest and greatest, but may be unstable.</source>
          <target state="translated">如果您想安装Jekyll的开发版本，则过程会更加复杂。这样可以为您提供最新和最大功能的优点，但是可能会不稳定。</target>
        </trans-unit>
        <trans-unit id="25ac5c2a33ff747013ef49ea1c32a4b47edaa529" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re a Jekyll theme developer (rather than a consumer of themes), you can package up your theme in RubyGems and allow users to install it through Bundler.</source>
          <target state="translated">如果您是Jekyll主题开发人员（而不是主题使用者），则可以将您的主题打包在RubyGems中，并允许用户通过Bundler安装。</target>
        </trans-unit>
        <trans-unit id="aebf85f03c89a29b9d5ef73ebb61bde1f568e228" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re a Jekyll theme developer (rather than just a consumer of themes), you can package up your theme in RubyGems and allow users to install it through Bundler.</source>
          <target state="translated">如果您是Jekyll主题开发人员（而不仅仅是主题的使用者），则可以将主题打包在RubyGems中，并允许用户通过Bundler安装。</target>
        </trans-unit>
        <trans-unit id="30853f9ea7df330ef27f58c631ba94376ecf0fa1" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re feeling adventurous, you can also initialize a Git repository here. One of the great things about Jekyll is there&amp;rsquo;s no database. All content and site structure are files which a Git repository can version. Using a repository is completely optional but it&amp;rsquo;s a great habit to get into. You can learn more about using Git by reading through the &lt;a href=&quot;https://guides.github.com/introduction/git-handbook/&quot;&gt;Git Handbook&lt;/a&gt;.</source>
          <target state="translated">如果您喜欢冒险，也可以在此处初始化Git存储库。Jekyll的一大优点是没有数据库。所有内容和站点结构都是Git存储库可以版本的文件。使用存储库是完全可选的，但这是一个很好的习惯。通过阅读《&lt;a href=&quot;https://guides.github.com/introduction/git-handbook/&quot;&gt;Git手册》，&lt;/a&gt;您可以了解有关使用Git的更多信息。</target>
        </trans-unit>
        <trans-unit id="05442461ae0760b9acad9cfe9447bcf050ac0078" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re interested in browsing these docs on-the-go, install the &lt;code&gt;jekyll-docs&lt;/code&gt; gem and run &lt;code&gt;jekyll docs&lt;/code&gt; in your terminal.</source>
          <target state="translated">如果您有兴趣随时随地浏览这些文档，请安装 &lt;code&gt;jekyll-docs&lt;/code&gt; gem并在终端中运行 &lt;code&gt;jekyll docs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cc2998d4b75650b0973db36fe0764de9a0198df0" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re interested in creating a custom markdown processor, you&amp;rsquo;re in luck! Create a new class in the &lt;code&gt;Jekyll::Converters::Markdown&lt;/code&gt; namespace:</source>
          <target state="translated">如果您有兴趣创建自定义减价处理器，那么您很幸运！在 &lt;code&gt;Jekyll::Converters::Markdown&lt;/code&gt; 命名空间中创建一个新类：</target>
        </trans-unit>
        <trans-unit id="22d9269680b724ba017e2778c42901a3d9aa4938" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re looking for support for Jekyll, there are a lot of options:</source>
          <target state="translated">如果您正在寻求对Jekyll的支持，则有很多选择：</target>
        </trans-unit>
        <trans-unit id="ae542f5575c43a0353a14137a2590f1b7d433422" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re publishing on GitHub Pages you should update only your &lt;code&gt;_config.yml&lt;/code&gt; as GitHub Pages doesn&amp;rsquo;t load plugins via Bundler.</source>
          <target state="translated">如果您要在GitHub Pages上发布，则应仅更新 &lt;code&gt;_config.yml&lt;/code&gt; ,因为GitHub Pages不会通过Bundler加载插件。</target>
        </trans-unit>
        <trans-unit id="1f3bba13a5e3f222ddefb021448a6a69c6eef520" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re publishing your Jekyll site on &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;, note that GitHub Pages supports only &lt;a href=&quot;https://pages.github.com/themes/&quot;&gt;some gem-based themes&lt;/a&gt;. GitHub Pages also supports &lt;a href=&quot;https://help.github.com/articles/adding-a-jekyll-theme-to-your-github-pages-site/#adding-a-jekyll-theme-in-your-sites-_configyml-file&quot;&gt;using any theme hosted on GitHub&lt;/a&gt; using the &lt;code&gt;remote_theme&lt;/code&gt; configuration as if it were a gem-based theme.</source>
          <target state="translated">如果您要在&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;上发布Jekyll网站，请注意GitHub Pages仅支持&lt;a href=&quot;https://pages.github.com/themes/&quot;&gt;某些基于gem的主题&lt;/a&gt;。GitHub Pages还支持&lt;a href=&quot;https://help.github.com/articles/adding-a-jekyll-theme-to-your-github-pages-site/#adding-a-jekyll-theme-in-your-sites-_configyml-file&quot;&gt;使用&lt;/a&gt; &lt;code&gt;remote_theme&lt;/code&gt; 配置使用GitHub上托管的任何主题，就好像它是基于gem的主题一样。</target>
        </trans-unit>
        <trans-unit id="fed2ec52185b236d6b0616d0f7b48112da62f321" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re publishing your Jekyll site on &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;, note that GitHub Pages supports only some gem-based themes. See &lt;a href=&quot;https://pages.github.com/themes/&quot;&gt;Supported Themes&lt;/a&gt; in GitHub&amp;rsquo;s documentation to see which themes are supported.</source>
          <target state="translated">如果要在&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;上发布Jekyll网站，请注意GitHub Pages仅支持某些基于gem的主题。请参阅GitHub文档中的&lt;a href=&quot;https://pages.github.com/themes/&quot;&gt;Supported Themes&lt;/a&gt;，以了解支持哪些主题。</target>
        </trans-unit>
        <trans-unit id="2a243859f76e0d599054d8aa3505651f9b800539" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re running a previous version of macOS, you&amp;rsquo;ll have to install a newer version of Ruby.</source>
          <target state="translated">如果您运行的是先前版本的macOS，则必须安装较新版本的Ruby。</target>
        </trans-unit>
        <trans-unit id="48f80dce2fb4e338ea62c4227bb0b96d4641ecf1" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re switching to Jekyll from another blogging system, Jekyll&amp;rsquo;s importers can help you with the move. To learn more about importing your site to Jekyll, visit our &lt;a href=&quot;https://import.jekyllrb.com/docs/home/&quot;&gt;&lt;code&gt;jekyll-import&lt;/code&gt; docs site&lt;/a&gt;.</source>
          <target state="translated">如果您要从另一个博客系统切换到Jekyll，Jekyll的进口商可以帮助您进行此操作。要了解有关将您的网站导入Jekyll的更多信息，请访问我们的&lt;a href=&quot;https://import.jekyllrb.com/docs/home/&quot;&gt; &lt;code&gt;jekyll-import&lt;/code&gt; docs site&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e9b8cf204b37c543bd6f902a9912dc1bc10fb847" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re the kind of person who is using Jekyll, then chances are you&amp;rsquo;ll want to enable syntax highlighting using &lt;a href=&quot;http://pygments.org/&quot;&gt;Pygments&lt;/a&gt; or &lt;a href=&quot;https://github.com/jayferd/rouge&quot;&gt;Rouge&lt;/a&gt;. You should really &lt;a href=&quot;../templates/index#code-snippet-highlighting&quot;&gt;check out how to do that&lt;/a&gt; before you go any farther.</source>
          <target state="translated">如果您是使用Jekyll的人，那么您很可能希望使用&lt;a href=&quot;http://pygments.org/&quot;&gt;Pygments&lt;/a&gt;或&lt;a href=&quot;https://github.com/jayferd/rouge&quot;&gt;Rouge&lt;/a&gt;启用语法突出显示。在您走得更远之前，您应该真正&lt;a href=&quot;../templates/index#code-snippet-highlighting&quot;&gt;查看如何做&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2c45a730de0f4a66c90fb58a381c30517e30ab21" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re unfamiliar with creating Ruby gems, don&amp;rsquo;t worry. Jekyll will help you scaffold a new theme with the &lt;code&gt;new-theme&lt;/code&gt; command. Run &lt;code&gt;jekyll new-theme&lt;/code&gt; with the theme name as an argument.</source>
          <target state="translated">如果您不熟悉创建Ruby gem，请不要担心。Jekyll将使用 &lt;code&gt;new-theme&lt;/code&gt; 命令帮助您搭建一个新主题。使用主题名称作为参数运行 &lt;code&gt;jekyll new-theme&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e2f1fd80e1acac73721bceb69b6432074f20f49a" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re unsure of the path, add &lt;code&gt;{{ page.path }}&lt;/code&gt; to the page and it will display the path.</source>
          <target state="translated">如果不确定路径，请在页面上添加 &lt;code&gt;{{ page.path }}&lt;/code&gt; ，它将显示路径。</target>
        </trans-unit>
        <trans-unit id="6d0e68810885667c178f7be4a18662c57e20c8df" translate="yes" xml:space="preserve">
          <source>If your Jekyll site has a lot of pages, such as with documentation websites, see the detailed examples in &lt;a href=&quot;https://jekyllrb.com/tutorials/navigation/&quot;&gt;how to build robust navigation for your site&lt;/a&gt;.</source>
          <target state="translated">如果您的Jekyll网站上有很多页面，例如文档网站，请参阅有关&lt;a href=&quot;https://jekyllrb.com/tutorials/navigation/&quot;&gt;如何为网站构建可靠导航&lt;/a&gt;的详细示例。</target>
        </trans-unit>
        <trans-unit id="15ad6a68d50f8303e340eccb97ce2ef611de1aca" translate="yes" xml:space="preserve">
          <source>If your generator is contained within a single file, it can be named whatever you want but it should have an &lt;code&gt;.rb&lt;/code&gt; extension. If your generator is split across multiple files, it should be packaged as a Rubygem to be published at https://rubygems.org/. In this case, the name of the gem depends on the availability of the name at that site because no two gems can have the same name.</source>
          <target state="translated">如果您的生成器包含在单个文件中，则可以使用任意名称对其进行命名，但扩展名应为 &lt;code&gt;.rb&lt;/code&gt; 。如果您的生成器分散在多个文件中，则应将其打包为Rubygem，以在https://rubygems.org/上发布。在这种情况下，宝石的名称取决于该站点名称的可用性，因为任何两个宝石都不能具有相同的名称。</target>
        </trans-unit>
        <trans-unit id="6f07552e08d7e7eb8c68907cfa9ca67e5186c921" translate="yes" xml:space="preserve">
          <source>In 2.x, your iterations over &lt;code&gt;site.collections&lt;/code&gt; yielded an array with the collection label and the collection object as the first and second items, respectively. In 3.x, this complication has been removed and iterations now yield simply the collection object. A simple conversion must be made in your templates:</source>
          <target state="translated">在2.x中，您对 &lt;code&gt;site.collections&lt;/code&gt; 的迭代产生了一个数组，该数组分别具有collection标签和collection对象作为第一和第二项。在3.x中，此复杂性已被删除，现在迭代仅产生collection对象。必须在模板中进行简单的转换：</target>
        </trans-unit>
        <trans-unit id="45281f936e80f86f5e93c43c758e8a1f19af601f" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;_data/members.yml&lt;/code&gt;:</source>
          <target state="translated">在 &lt;code&gt;_data/members.yml&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="cde842ba78bff9c9b8124ebd1559825b3bc94132" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;_data/orgs/doeorg.yml&lt;/code&gt;:</source>
          <target state="translated">在 &lt;code&gt;_data/orgs/doeorg.yml&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="cd43046023d9729d0551bd15c18ada04dde39f32" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;_data/orgs/jekyll.yml&lt;/code&gt;:</source>
          <target state="translated">在 &lt;code&gt;_data/orgs/jekyll.yml&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="8048d2cbef7239f500f42954c2da2f843c49740b" translate="yes" xml:space="preserve">
          <source>In Jekyll 2, any URL constructed from the &lt;code&gt;permalink:&lt;/code&gt; field had a trailing slash (&lt;code&gt;/&lt;/code&gt;) added to it automatically. Jekyll 3 no longer adds a trailing slash automatically to &lt;code&gt;permalink:&lt;/code&gt; URLs. This can potentially result in old links to pages returning a 404 error. For example, suppose a page previously contained the YAML &lt;code&gt;permalink: /:year-:month-:day-:title&lt;/code&gt; that resulted in the URL &lt;code&gt;example.com/2016-02-01-test/&lt;/code&gt; (notice the trailing slash), Jekyll internally generates a folder named &lt;code&gt;2016-02-01-test&lt;/code&gt;. In Jekyll 3, the same &lt;code&gt;permalink:&lt;/code&gt; generate the file &lt;code&gt;2016-02-01-test.html&lt;/code&gt; and the URL for the same page will be &lt;code&gt;example.com/2016-02-01-test&lt;/code&gt;, and consequently any links to the old URL will result in a 404 error. In order to maintain the same URLs and avoid this problem, a trailing slash should be added to the &lt;code&gt;permalink:&lt;/code&gt; field, for example &lt;code&gt;permalink: /:year-:month-:day-:title/&lt;/code&gt;.</source>
          <target state="translated">在Jekyll 2中，从 &lt;code&gt;permalink:&lt;/code&gt; 字段构造的任何URL 都自动添加了斜杠（ &lt;code&gt;/&lt;/code&gt; ）。 Jekyll 3不再自动在 &lt;code&gt;permalink:&lt;/code&gt; URL 后面添加斜杠。这可能会导致指向页面的旧链接返回404错误。例如，假设一个页面先前包含YAML &lt;code&gt;permalink: /:year-:month-:day-:title&lt;/code&gt; 导致URL &lt;code&gt;example.com/2016-02-01-test/&lt;/code&gt; （请注意后跟斜线），内部是Jekyll生成一个名为 &lt;code&gt;2016-02-01-test&lt;/code&gt; 的文件夹。在Jekyll 3中，相同的 &lt;code&gt;permalink:&lt;/code&gt; 生成文件 &lt;code&gt;2016-02-01-test.html&lt;/code&gt; ，同一页面的URL将为 &lt;code&gt;example.com/2016-02-01-test&lt;/code&gt; ，因此任何指向旧URL的链接都将导致404错误。为了维护相同的URL并避免出现此问题，应在 &lt;code&gt;permalink:&lt;/code&gt; 字段中添加斜杠，例如 &lt;code&gt;permalink: /:year-:month-:day-:title/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3873159b8f4d7abf52a0f7525978c8fb359bcf37" translate="yes" xml:space="preserve">
          <source>In Jekyll 3 and above, relative permalinks have been deprecated. If you created your site using Jekyll 2 and below, you may receive the following error when trying to &lt;strong&gt;serve&lt;/strong&gt; or &lt;strong&gt;build&lt;/strong&gt;:</source>
          <target state="translated">在Jekyll 3及更高版本中，相对永久链接已被弃用。如果您是使用Jekyll 2及以下版本创建的网站，则尝试&lt;strong&gt;提供&lt;/strong&gt;或&lt;strong&gt;构建&lt;/strong&gt;时可能会收到以下错误消息：</target>
        </trans-unit>
        <trans-unit id="9da76fc9ddd240122475ed3606ddf4d269bd399e" translate="yes" xml:space="preserve">
          <source>In Jekyll v1.0, we introduced absolute permalinks for pages in subdirectories. Starting with v2.0, absolute permalinks are opt-out, meaning Jekyll will default to using absolute permalinks instead of relative permalinks. Relative permalink backwards-compatibility was removed in v3.0.</source>
          <target state="translated">在 Jekyll v1.0 中,我们为子目录中的页面引入了绝对permalinks。从v2.0开始,绝对permalinks是选择退出的,这意味着Jekyll将默认使用绝对permalinks而不是相对permalinks。相对永久链接的向后兼容性在v3.0版本中被移除。</target>
        </trans-unit>
        <trans-unit id="137a2c8a22c797957aaba3d668b93f39e0a4e360" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;../posts/index&quot;&gt;writing posts&lt;/a&gt;, you might also want to add static pages (content that isn&amp;rsquo;t date-based) to your Jekyll site. By taking advantage of the way Jekyll copies files and directories, this is easy to do.</source>
          <target state="translated">除了&lt;a href=&quot;../posts/index&quot;&gt;撰写文章外&lt;/a&gt;，您可能还希望将静态页面（不基于日期的内容）添加到Jekyll网站。通过利用Jekyll复制文件和目录的方式，这很容易做到。</target>
        </trans-unit>
        <trans-unit id="b5977b91adc8950e114e57ba6fd1cc290bbd8445" translate="yes" xml:space="preserve">
          <source>In addition to any YAML Front Matter provided in the document&amp;rsquo;s corresponding file, each document has the following attributes:</source>
          <target state="translated">除了文档的相应文件中提供的任何YAML前端事项外，每个文档还具有以下属性：</target>
        </trans-unit>
        <trans-unit id="ddd733ae4dd13a946b75f3e6f10913d5e7486d8c" translate="yes" xml:space="preserve">
          <source>In addition to any collections you create yourself, the &lt;code&gt;posts&lt;/code&gt; collection is hard-coded into Jekyll. It exists whether you have a &lt;code&gt;_posts&lt;/code&gt; directory or not. This is something to note when iterating through &lt;code&gt;site.collections&lt;/code&gt; as you may need to filter it out.</source>
          <target state="translated">除了您自己创建的任何收藏集之外， &lt;code&gt;posts&lt;/code&gt; 集合还被硬编码到Jekyll中。无论您是否具有 &lt;code&gt;_posts&lt;/code&gt; 目录，它都存在。在迭代 &lt;code&gt;site.collections&lt;/code&gt; 时要注意这一点，因为您可能需要将其过滤掉。</target>
        </trans-unit>
        <trans-unit id="47a65d70b5bdab95550918bb769be600907b2d0e" translate="yes" xml:space="preserve">
          <source>In addition to any front matter provided in the document&amp;rsquo;s corresponding file, each document has the following attributes:</source>
          <target state="translated">除了文档的相应文件中提供的任何重要事项外，每个文档还具有以下属性：</target>
        </trans-unit>
        <trans-unit id="de4614543299930d373fbc0c3668decb1e5afec5" translate="yes" xml:space="preserve">
          <source>In addition to renderable and convertible content, we also have &lt;strong&gt;static files&lt;/strong&gt;.</source>
          <target state="translated">除了可渲染和可转换的内容外，我们还有&lt;strong&gt;静态文件&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="435d29a8ad07e278761987f5b8da37b578e41b58" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;a href=&quot;../variables/index&quot;&gt;built-in variables&lt;/a&gt; available from Jekyll, you can specify your own custom data that can be accessed via the &lt;a href=&quot;https://github.com/Shopify/liquid/wiki/Liquid-for-Designers&quot;&gt;Liquid templating system&lt;/a&gt;.</source>
          <target state="translated">除了Jekyll提供的&lt;a href=&quot;../variables/index&quot;&gt;内置变量外&lt;/a&gt;，您还可以指定自己的自定义数据，这些数据可以通过&lt;a href=&quot;https://github.com/Shopify/liquid/wiki/Liquid-for-Designers&quot;&gt;Liquid模板系统&lt;/a&gt;进行访问。</target>
        </trans-unit>
        <trans-unit id="262a4460ff960783349ae1c3141344919035643d" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;a href=&quot;../variables/index&quot;&gt;built-in variables&lt;/a&gt; available from Jekyll, you can specify your own custom data that can be accessed via the &lt;a href=&quot;https://wiki.github.com/shopify/liquid/liquid-for-designers&quot;&gt;Liquid templating system&lt;/a&gt;.</source>
          <target state="translated">除了Jekyll提供的&lt;a href=&quot;../variables/index&quot;&gt;内置变量之外&lt;/a&gt;，您还可以指定自己的自定义数据，这些数据可以通过&lt;a href=&quot;https://wiki.github.com/shopify/liquid/liquid-for-designers&quot;&gt;Liquid模板系统&lt;/a&gt;进行访问。</target>
        </trans-unit>
        <trans-unit id="5fa3779ef0ef87de347d1b02e40eb5d39f49bc9b" translate="yes" xml:space="preserve">
          <source>In addition to the options below, the &lt;code&gt;serve&lt;/code&gt; sub-command can accept any of the options for the &lt;code&gt;build&lt;/code&gt; sub-command, which are then applied to the site build which occurs right before your site is served.</source>
          <target state="translated">除了下面的选项之外， &lt;code&gt;serve&lt;/code&gt; 子命令还可以接受 &lt;code&gt;build&lt;/code&gt; 子命令的任何选项，然后将这些选项应用于站点构建，该构建在服务站点之前就发生了。</target>
        </trans-unit>
        <trans-unit id="ad77db62fe2f7780d8731931072d4d92705aa9c7" translate="yes" xml:space="preserve">
          <source>In general, plugins you make will fall broadly into one of five categories:</source>
          <target state="translated">一般来说,你做的插件大致会分为五类。</target>
        </trans-unit>
        <trans-unit id="92cb54b26fce6f64d865299e23f532b7347aa7e1" translate="yes" xml:space="preserve">
          <source>In layout files, the rendered content of the Post or Page being wrapped. Not defined in Post or Page files.</source>
          <target state="translated">在布局文件中,被包装的帖子或页面的渲染内容。在Post或Page文件中没有定义。</target>
        </trans-unit>
        <trans-unit id="10a02d40410ecbb6dd7a79cb832a7b1bd9921423" translate="yes" xml:space="preserve">
          <source>In order for the highlighting to show up, you&amp;rsquo;ll need to include a highlighting stylesheet. For Pygments or Rouge you can use a stylesheet for Pygments, you can find an example gallery &lt;a href=&quot;https://jwarby.github.io/jekyll-pygments-themes/languages/ruby.html&quot;&gt;here&lt;/a&gt; or from &lt;a href=&quot;https://github.com/jwarby/jekyll-pygments-themes&quot;&gt;its repository&lt;/a&gt;.</source>
          <target state="translated">为了显示突出显示，您需要包含突出显示样式表。对于Pygments或Rouge，您可以使用Pygments的样式表，可以&lt;a href=&quot;https://jwarby.github.io/jekyll-pygments-themes/languages/ruby.html&quot;&gt;在此处&lt;/a&gt;或&lt;a href=&quot;https://github.com/jwarby/jekyll-pygments-themes&quot;&gt;从其存储库中&lt;/a&gt;找到示例库。</target>
        </trans-unit>
        <trans-unit id="8a11123a4885bc93a6c358a7052dbadb25f2ae33" translate="yes" xml:space="preserve">
          <source>In order for the highlighting to show up, you&amp;rsquo;ll need to include a highlighting stylesheet. For an example stylesheet you can look at &lt;a href=&quot;https://github.com/mojombo/tpw/tree/master/css/syntax.css&quot;&gt;syntax.css&lt;/a&gt;. These are the same styles as used by GitHub and you are free to use them for your own site. If you use &lt;code&gt;linenos&lt;/code&gt;, you might want to include an additional CSS class definition for the &lt;code&gt;.lineno&lt;/code&gt; class in &lt;code&gt;syntax.css&lt;/code&gt; to distinguish the line numbers from the highlighted code.</source>
          <target state="translated">为了显示突出显示，您需要包括突出显示样式表。对于样式表示例，您可以查看&lt;a href=&quot;https://github.com/mojombo/tpw/tree/master/css/syntax.css&quot;&gt;语法.css&lt;/a&gt;。这些样式与GitHub使用的样式相同，您可以在自己的网站上自由使用它们。如果使用 &lt;code&gt;linenos&lt;/code&gt; ，则可能要在 &lt;code&gt;syntax.css&lt;/code&gt; 包括 &lt;code&gt;.lineno&lt;/code&gt; 类的其他CSS类定义，以将行号与突出显示的代码区分开。</target>
        </trans-unit>
        <trans-unit id="92921e0c63f70f1ce180d6a3e7cb4c97a0eb950e" translate="yes" xml:space="preserve">
          <source>In order to install a pre-release, make sure you have all the requirements installed properly and run:</source>
          <target state="translated">为了安装预发行版,请确保你已经正确安装了所有的需求并运行。</target>
        </trans-unit>
        <trans-unit id="0d246ea4d51517f082eb63012fe12dc6c7d54061" translate="yes" xml:space="preserve">
          <source>In order to see the changes from &lt;code&gt;downcase&lt;/code&gt; Liquid filter, we will need to add front matter.</source>
          <target state="translated">为了查看 &lt;code&gt;downcase&lt;/code&gt; Liquid过滤器的变化，我们需要添加前部内容。</target>
        </trans-unit>
        <trans-unit id="f0a99e23efade4197b1e52469682f0f893a21ad9" translate="yes" xml:space="preserve">
          <source>In our example, &lt;code&gt;UpcaseConverter#matches&lt;/code&gt; checks if our filename extension is &lt;code&gt;.upcase&lt;/code&gt;, and will render using the converter if it is. It will call &lt;code&gt;UpcaseConverter#convert&lt;/code&gt; to process the content. In our simple converter we&amp;rsquo;re simply uppercasing the entire content string. Finally, when it saves the page, it will do so with a &lt;code&gt;.html&lt;/code&gt; extension.</source>
          <target state="translated">在我们的示例中， &lt;code&gt;UpcaseConverter#matches&lt;/code&gt; 检查文件扩展名是否为 &lt;code&gt;.upcase&lt;/code&gt; ，如果是，则将使用转换器进行渲染。它将调用 &lt;code&gt;UpcaseConverter#convert&lt;/code&gt; 来处理内容。在我们的简单转换器中，我们只是大写整个内容字符串。最后，当保存页面时，它将以 &lt;code&gt;.html&lt;/code&gt; 扩展名保存。</target>
        </trans-unit>
        <trans-unit id="589e3464f6983f476e200524c86fa956e44336f7" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;_includes&lt;/code&gt; folder, assume you have a file called &lt;code&gt;spotlight.html&lt;/code&gt; with this code:</source>
          <target state="translated">在 &lt;code&gt;_includes&lt;/code&gt; 文件夹中，假设您有一个名为 &lt;code&gt;spotlight.html&lt;/code&gt; 的文件，其代码如下：</target>
        </trans-unit>
        <trans-unit id="023c2b6b85b5f06f702673e8551f26b707f19528" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;build&lt;/code&gt; (or &lt;code&gt;serve&lt;/code&gt;) arguments, you can specify a Jekyll environment and value. The build will then apply this value in any conditional statements in your content.</source>
          <target state="translated">在 &lt;code&gt;build&lt;/code&gt; （或 &lt;code&gt;serve&lt;/code&gt; ）参数中，您可以指定Jekyll环境和值。然后，该版本将在您内容中的任何条件语句中应用此值。</target>
        </trans-unit>
        <trans-unit id="35cf41f6a0818d8a0497f3813e18dc14ef52b043" translate="yes" xml:space="preserve">
          <source>In the above example, the tag block and the tag are both registered with the name &lt;code&gt;render_time&lt;/code&gt;, but to register a tag and a tag block using the same name in the same project is not recommended as this may lead to conflicts.</source>
          <target state="translated">在上面的示例中，标记块和标记都注册了名称 &lt;code&gt;render_time&lt;/code&gt; ，但是不建议在同一项目中使用相同名称注册标记和标记块，因为这可能会导致冲突。</target>
        </trans-unit>
        <trans-unit id="82b5ec249103fb1fdb876d5bf56bb5b373e62ac9" translate="yes" xml:space="preserve">
          <source>In the build (or serve) arguments, you can specify a Jekyll environment and value. The build will then apply this value in any conditional statements in your content.</source>
          <target state="translated">在构建(或服务)参数中,你可以指定一个Jekyll环境和值。然后,构建将在你的内容中的任何条件语句中应用这个值。</target>
        </trans-unit>
        <trans-unit id="ca17f2fe3994021e071c92453baa97e708f63fbf" translate="yes" xml:space="preserve">
          <source>In the case of Minima, you see only the following files in your Jekyll site directory:</source>
          <target state="translated">在Minima的情况下,你在Jekyll站点目录下只看到以下文件。</target>
        </trans-unit>
        <trans-unit id="73aa65e9152847600349b0332ad25629dcd365c5" translate="yes" xml:space="preserve">
          <source>In the example above, we can place the following tag anywhere in one of our pages:</source>
          <target state="translated">在上面的例子中,我们可以在页面的任何地方放置以下标签。</target>
        </trans-unit>
        <trans-unit id="fbcc71f1f3f382fa9da32fabfcae01c9258fd9ed" translate="yes" xml:space="preserve">
          <source>In the future the installation process of the github-pages should be as simple as the setup of the blog. But as long as the new version of the Nokogiri (&lt;a href=&quot;https://github.com/sparklemotion/nokogiri/releases&quot;&gt;v1.6.8&lt;/a&gt;) is not stable and referenced, it is work to get it up and running on Windows.</source>
          <target state="translated">将来，github-pages的安装过程应该与博客的设置一样简单。但是，只要新版本的Nokogiri（&lt;a href=&quot;https://github.com/sparklemotion/nokogiri/releases&quot;&gt;v1.6.8&lt;/a&gt;）不稳定并没有被引用，就可以在Windows上启动并运行它。</target>
        </trans-unit>
        <trans-unit id="6f3f1e4da3442eb9f6d8e473c90f421c25f9d3d4" translate="yes" xml:space="preserve">
          <source>In the next and final step of this tutorial, we&amp;rsquo;ll add polish to the site and get it ready for a production deployment.</source>
          <target state="translated">在本教程的下一个也是最后一个步骤中，我们将在网站上添加修饰符，并准备将其用于生产部署。</target>
        </trans-unit>
        <trans-unit id="b8d4dbdc143106549a6378e4e1fcc3c6ac082b5d" translate="yes" xml:space="preserve">
          <source>In this case &lt;code&gt;collections&lt;/code&gt; is defined as a sequence (i.e array) with no additional metadata defined for each collection. You can optionally specify metadata for your collection by defining &lt;code&gt;collections&lt;/code&gt; as a mapping (i.e hashmap) instead of sequence, and then defining additional fields in it:</source>
          <target state="translated">在这种情况下， &lt;code&gt;collections&lt;/code&gt; 被定义为一个序列（即数组），而没有为每个集合定义其他元数据。您可以通过定义选择指定为您收集的元数据 &lt;code&gt;collections&lt;/code&gt; 作为一个映射（即HashMap中），而不是序列，然后确定它的附加字段：</target>
        </trans-unit>
        <trans-unit id="f5f641e52e69872bdaff7c469dcb92b54266d954" translate="yes" xml:space="preserve">
          <source>In this case, the listing pages will be accessible at &lt;code&gt;{baseurl}/category/blog.html&lt;/code&gt;</source>
          <target state="translated">在这种情况下，可以在 &lt;code&gt;{baseurl}/category/blog.html&lt;/code&gt; 上访问列表页面。</target>
        </trans-unit>
        <trans-unit id="a8c7970f2ab1be04e8c7c366c84315f5db51e4c7" translate="yes" xml:space="preserve">
          <source>In this example, our generator will create a series of files under the &lt;code&gt;categories&lt;/code&gt; directory for each category, listing the posts in each category using the &lt;code&gt;category_index.html&lt;/code&gt; layout.</source>
          <target state="translated">在此示例中，我们的生成器将在每个类别的 &lt;code&gt;categories&lt;/code&gt; 目录下创建一系列文件，并使用 &lt;code&gt;category_index.html&lt;/code&gt; 布局列出每个类别中的帖子。</target>
        </trans-unit>
        <trans-unit id="23e30b1c526f4005a7187f21ba17da5891b7c9b9" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;layout&lt;/code&gt; is set to &lt;code&gt;default&lt;/code&gt; inside the &lt;a href=&quot;../../collections/index&quot;&gt;collection&lt;/a&gt; with the name &lt;code&gt;my_collection&lt;/code&gt;.</source>
          <target state="translated">在此示例中， &lt;code&gt;layout&lt;/code&gt; 在名称为 &lt;code&gt;my_collection&lt;/code&gt; 的&lt;a href=&quot;../../collections/index&quot;&gt;集合&lt;/a&gt;内设置为 &lt;code&gt;default&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2cf773ac04f813b0e294961a92d744e2c3408b9b" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;layout&lt;/code&gt; is set to &lt;code&gt;default&lt;/code&gt; inside the &lt;a href=&quot;../collections/index&quot;&gt;collection&lt;/a&gt; with the name &lt;code&gt;my_collection&lt;/code&gt;.</source>
          <target state="translated">在此示例中， &lt;code&gt;layout&lt;/code&gt; 在名称为 &lt;code&gt;my_collection&lt;/code&gt; 的&lt;a href=&quot;../collections/index&quot;&gt;集合&lt;/a&gt;内设置为 &lt;code&gt;default&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a1332aa08f1a9433eb0f51a71818cafd5c254ef" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;link&lt;/code&gt; tag would render a link to the file &lt;code&gt;footer_company_a.html&lt;/code&gt;.</source>
          <target state="translated">在此示例中， &lt;code&gt;link&lt;/code&gt; 标记将呈现到文件 &lt;code&gt;footer_company_a.html&lt;/code&gt; 的链接。</target>
        </trans-unit>
        <trans-unit id="eb94263d3a4b7b2763922a8c12799d8a35026a62" translate="yes" xml:space="preserve">
          <source>In this example, the include would insert the file &lt;code&gt;footer_company_a.html&lt;/code&gt; from the &lt;code&gt;_includes/footer_company_a.html&lt;/code&gt; directory.</source>
          <target state="translated">在这个例子中，包括将插入的文件 &lt;code&gt;footer_company_a.html&lt;/code&gt; 从 &lt;code&gt;_includes/footer_company_a.html&lt;/code&gt; 目录。</target>
        </trans-unit>
        <trans-unit id="19c6ba6ccd61f7698e3b2bbaa305c0a978c6c9a8" translate="yes" xml:space="preserve">
          <source>In this final step we&amp;rsquo;ll get the site ready for production.</source>
          <target state="translated">在最后一步中，我们将准备好该站点的生产。</target>
        </trans-unit>
        <trans-unit id="9b31a618d0810733e64d193638c5aab33882dde7" translate="yes" xml:space="preserve">
          <source>In this instance, &lt;code&gt;site.data.profiles&lt;/code&gt; gets inserted in place of &lt;code&gt;include.participants&lt;/code&gt; in the include file, and the Liquid logic processes. The result will be &lt;code&gt;Jane Doe&lt;/code&gt;.</source>
          <target state="translated">在这种情况下，将在包括文件和Liquid逻辑过程中插入 &lt;code&gt;site.data.profiles&lt;/code&gt; 来代替 &lt;code&gt;include.participants&lt;/code&gt; 。结果将是 &lt;code&gt;Jane Doe&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="63056e6ee26a5a0b1d5fe24b0d81f5d2cc4aaf7e" translate="yes" xml:space="preserve">
          <source>In this step you&amp;rsquo;ll store the contents of the navigation in a data file and then iterate over it in the navigation include.</source>
          <target state="translated">在此步骤中，您将导航的内容存储在数据文件中，然后在导航包含中对其进行迭代。</target>
        </trans-unit>
        <trans-unit id="5a7ef22adc478c9a3b0bb4fef7119f7a4c2ee61f" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;_config.yml&lt;/code&gt; file, add a new array with the key &lt;code&gt;plugins&lt;/code&gt; (or &lt;code&gt;gems&lt;/code&gt; for Jekyll &amp;lt; &lt;code&gt;3.5.0&lt;/code&gt;) and the values of the gem names of the plugins you&amp;rsquo;d like to use. An example:</source>
          <target state="translated">在 &lt;code&gt;_config.yml&lt;/code&gt; 文件中，添加一个包含关键 &lt;code&gt;plugins&lt;/code&gt; （或Jekyll &amp;lt; &lt;code&gt;3.5.0&lt;/code&gt; 的 &lt;code&gt;gems&lt;/code&gt; ）和您要使用的插件的gem名称值的新数组。一个例子：</target>
        </trans-unit>
        <trans-unit id="bf9dc7a2954e8514613c982dd81fe474933609f8" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;_config.yml&lt;/code&gt; file, add the following values to the &lt;code&gt;defaults&lt;/code&gt; property:</source>
          <target state="translated">在 &lt;code&gt;_config.yml&lt;/code&gt; 文件中，将以下值添加到 &lt;code&gt;defaults&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="bdf1d4e7b2a9d82aac6f15504c1b8e025275caf8" translate="yes" xml:space="preserve">
          <source>In your site source root, make a &lt;code&gt;_plugins&lt;/code&gt; directory. Place your plugins here. Any file ending in &lt;code&gt;*.rb&lt;/code&gt; inside this directory will be loaded before Jekyll generates your site.</source>
          <target state="translated">在站点源根目录中，创建 &lt;code&gt;_plugins&lt;/code&gt; 目录。将您的插件放在这里。在Jekyll生成您的站点之前，将加载此目录中所有 &lt;code&gt;*.rb&lt;/code&gt; 结尾的文件。</target>
        </trans-unit>
        <trans-unit id="0a19851e7bd98d3da24e5124d3f2ce9e766bbcd2" translate="yes" xml:space="preserve">
          <source>Include tag</source>
          <target state="translated">包括标签</target>
        </trans-unit>
        <trans-unit id="b0428b33222836fce1a4254f9b076221f0220f42" translate="yes" xml:space="preserve">
          <source>Include usage</source>
          <target state="translated">包括用途</target>
        </trans-unit>
        <trans-unit id="db54974f7f0ad531e35648ba85b9388029b4d7ef" translate="yes" xml:space="preserve">
          <source>Includes</source>
          <target state="translated">Includes</target>
        </trans-unit>
        <trans-unit id="525d443047f688fa21fd3dd9c8ff2eedab7dad54" translate="yes" xml:space="preserve">
          <source>Including an image asset in a post:</source>
          <target state="translated">在帖子中加入图像资产。</target>
        </trans-unit>
        <trans-unit id="1f7a1fcdd2514ccdb830db698078bc93bc2c326b" translate="yes" xml:space="preserve">
          <source>Including files relative to another file</source>
          <target state="translated">包括相对于另一个文件的文件</target>
        </trans-unit>
        <trans-unit id="9a05788a2e9ad3ef56f62e0f130e8cd0346e51c4" translate="yes" xml:space="preserve">
          <source>Including images and resources</source>
          <target state="translated">包括图像和资源</target>
        </trans-unit>
        <trans-unit id="b91689a4ea776c083cae7da24e7822db50feb47d" translate="yes" xml:space="preserve">
          <source>Incremental Regeneration</source>
          <target state="translated">递增式再生</target>
        </trans-unit>
        <trans-unit id="f81c2e0ac93fe966e8a36a74b91ba62aa5863009" translate="yes" xml:space="preserve">
          <source>Incremental regeneration can be enabled via the &lt;code&gt;--incremental&lt;/code&gt; flag (&lt;code&gt;-I&lt;/code&gt; for short) from the command-line or by setting &lt;code&gt;incremental: true&lt;/code&gt; in your configuration file.</source>
          <target state="translated">可以通过命令行中的 &lt;code&gt;--incremental&lt;/code&gt; 标志（简称 &lt;code&gt;-I&lt;/code&gt; ）或通过在配置文件中设置 &lt;code&gt;incremental: true&lt;/code&gt; 来启用增量再生。</target>
        </trans-unit>
        <trans-unit id="6006efa32ed1ccb24da40c6fab9a1c8038d7a743" translate="yes" xml:space="preserve">
          <source>Incremental regeneration helps shorten build times by only generating documents and pages that were updated since the previous build. It does this by keeping track of both file modification times and inter-document dependencies in the &lt;code&gt;.jekyll-metadata&lt;/code&gt; file.</source>
          <target state="translated">增量重新生成仅生成自上次构建以来已更新的文档和页面，从而有助于缩短构建时间。它通过跟踪 &lt;code&gt;.jekyll-metadata&lt;/code&gt; 文件中的文件修改时间和文档间依赖关系来做到这一点。</target>
        </trans-unit>
        <trans-unit id="1bd191c875e05fc6998e389343b41b60f6eec5c0" translate="yes" xml:space="preserve">
          <source>Incremental regeneration is still an experimental feature</source>
          <target state="translated">渐进式再生仍然是一个实验性的功能</target>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="7e46c7c411bc9146c968ebec74f6f162b28226fb" translate="yes" xml:space="preserve">
          <source>Inlining the styles used in &lt;code&gt;_includes/navigation.html&lt;/code&gt;(adding or configuring within the same file) is not a best practice. Instead, let&amp;rsquo;s style the current page by defining our first class in a new css file instead.</source>
          <target state="translated">内联 &lt;code&gt;_includes/navigation.html&lt;/code&gt; 中使用的样式（在同一文件中添加或配置）不是最佳实践。相反，让我们通过在新的CSS文件中定义我们的第一类来为当前页面设置样式。</target>
        </trans-unit>
        <trans-unit id="2f3930f1815574bf50a6aaad23301e80251a41a5" translate="yes" xml:space="preserve">
          <source>Install Bundler using &lt;code&gt;gem install bundler&lt;/code&gt;. You only need to install it once, not every time you create a new Jekyll project.</source>
          <target state="translated">使用 &lt;code&gt;gem install bundler&lt;/code&gt; 安装Bundler 。您只需要安装一次，而不是每次创建新的Jekyll项目时都需要安装。</target>
        </trans-unit>
        <trans-unit id="0b928fe3ed14e12e0563aa197c077a70503326b4" translate="yes" xml:space="preserve">
          <source>Install Command Line Tools</source>
          <target state="translated">安装命令行工具</target>
        </trans-unit>
        <trans-unit id="626209e441fa77a6250d6ff717fa171d3e1e22a9" translate="yes" xml:space="preserve">
          <source>Install Jekyll</source>
          <target state="translated">安装Jekyll</target>
        </trans-unit>
        <trans-unit id="2754588b37fe5f3d6e0bcb568f9e52a57bd3ad5a" translate="yes" xml:space="preserve">
          <source>Install Jekyll and Bundler via a command prompt window: &lt;code&gt;gem install jekyll bundler&lt;/code&gt;</source>
          <target state="translated">通过命令提示符窗口安装Jekyll和Bundler： &lt;code&gt;gem install jekyll bundler&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8e4da4ca2d699db57664814f9bdebf2536741d08" translate="yes" xml:space="preserve">
          <source>Install Jekyll:</source>
          <target state="translated">安装Jekyll。</target>
        </trans-unit>
        <trans-unit id="deef52c209d94ab1ae7e1c1d8e71259c5cf9cff0" translate="yes" xml:space="preserve">
          <source>Install Ruby</source>
          <target state="translated">安装Ruby</target>
        </trans-unit>
        <trans-unit id="a7599704444a72a5825e2212231a365f0e3752da" translate="yes" xml:space="preserve">
          <source>Install Ruby and Ruby development kit</source>
          <target state="translated">安装Ruby和Ruby开发包</target>
        </trans-unit>
        <trans-unit id="7a61f957c592547a8d464d892b45beff7809598b" translate="yes" xml:space="preserve">
          <source>Install Ruby and other &lt;a href=&quot;../index#requirements&quot;&gt;prerequisites&lt;/a&gt;:</source>
          <target state="translated">安装Ruby和其他&lt;a href=&quot;../index#requirements&quot;&gt;先决条件&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="2b487a9122ff8e426803cc72375725e97f9e6a44" translate="yes" xml:space="preserve">
          <source>Install Ruby via Chocolatey: &lt;code&gt;choco install ruby -y&lt;/code&gt;</source>
          <target state="translated">通过Chocolatey安装Ruby： &lt;code&gt;choco install ruby -y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2cdce4c177bc9e007f528a3235e08a88a41c6662" translate="yes" xml:space="preserve">
          <source>Install a package manager for Windows called &lt;a href=&quot;https://chocolatey.org/install&quot;&gt;Chocolatey&lt;/a&gt;</source>
          <target state="translated">为Windows安装名为&lt;a href=&quot;https://chocolatey.org/install&quot;&gt;Chocolatey&lt;/a&gt;的软件包管理器</target>
        </trans-unit>
        <trans-unit id="90158753795f90b73c7c95bd6fe6ca962b18b017" translate="yes" xml:space="preserve">
          <source>Install all &lt;a href=&quot;installation/index&quot;&gt;prerequisites&lt;/a&gt;.</source>
          <target state="translated">安装所有&lt;a href=&quot;installation/index&quot;&gt;先决条件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="803ad44a9a99a3110e2564249e4d54c10559a3c0" translate="yes" xml:space="preserve">
          <source>Install dependencies</source>
          <target state="translated">安装依赖性</target>
        </trans-unit>
        <trans-unit id="22c8d123bf73db1aacc59d30555b734cd07b4e2a" translate="yes" xml:space="preserve">
          <source>Install github-pages</source>
          <target state="translated">安装github-pages</target>
        </trans-unit>
        <trans-unit id="a4c4c8cbad45b21666d3cbf92bb79984cab89804" translate="yes" xml:space="preserve">
          <source>Install prerequisites</source>
          <target state="translated">安装先决条件</target>
        </trans-unit>
        <trans-unit id="abb88c8dd2461e34977887fddc50a42e89837700" translate="yes" xml:space="preserve">
          <source>Install the &lt;code&gt;jekyll-coffeescript&lt;/code&gt; gem</source>
          <target state="translated">安装 &lt;code&gt;jekyll-coffeescript&lt;/code&gt; gem</target>
        </trans-unit>
        <trans-unit id="d6718f667e0e357a2a865da83dab46a8145917a9" translate="yes" xml:space="preserve">
          <source>Install the Kickster gem and you are good to go. More documentation can here found &lt;a href=&quot;https://github.com/nielsenramon/kickster#kickster&quot;&gt;here&lt;/a&gt;. If you do not want to use the gem or start a new project you can just copy paste the deployment scripts for &lt;a href=&quot;https://github.com/nielsenramon/kickster/tree/master/snippets/travis&quot;&gt;Travis CI&lt;/a&gt; or &lt;a href=&quot;https://github.com/nielsenramon/kickster#automated-deployment-with-circle-ci&quot;&gt;Circle CI&lt;/a&gt;.</source>
          <target state="translated">安装Kickster gem，您就可以开始了。在&lt;a href=&quot;https://github.com/nielsenramon/kickster#kickster&quot;&gt;这里&lt;/a&gt;可以找到更多文档。如果您不想使用gem或启动新项目，则只需复制粘贴&lt;a href=&quot;https://github.com/nielsenramon/kickster/tree/master/snippets/travis&quot;&gt;Travis CI&lt;/a&gt;或&lt;a href=&quot;https://github.com/nielsenramon/kickster#automated-deployment-with-circle-ci&quot;&gt;Circle CI&lt;/a&gt;的部署脚本即可。</target>
        </trans-unit>
        <trans-unit id="0a08d347a940a1b0810010f98fe813f778b88d90" translate="yes" xml:space="preserve">
          <source>Install the bundler and jekyll gems:</source>
          <target state="translated">安装bundler和jekyll gems。</target>
        </trans-unit>
        <trans-unit id="0f78fc1a483118f983a249b1c27929f25f72f4e2" translate="yes" xml:space="preserve">
          <source>Install the jekyll and bundler &lt;a href=&quot;ruby-101/index#gems&quot;&gt;gems&lt;/a&gt;.</source>
          <target state="translated">安装jekyll和bundler &lt;a href=&quot;ruby-101/index#gems&quot;&gt;gems&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d885f2ed59243070a4543bf4c623700512e83b3a" translate="yes" xml:space="preserve">
          <source>Install the theme:</source>
          <target state="translated">安装主题。</target>
        </trans-unit>
        <trans-unit id="cdc7600640f4488a302a9ef8db6eee3b7770c1b0" translate="yes" xml:space="preserve">
          <source>Install with RubyGems</source>
          <target state="translated">用RubyGems安装</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="1061e24b97b7e7926c0e75ef8fe1d7b8635a2b45" translate="yes" xml:space="preserve">
          <source>Installation Problems</source>
          <target state="translated">安装问题</target>
        </trans-unit>
        <trans-unit id="55b35fe3138034fd97e680624e4fc32ce98e0207" translate="yes" xml:space="preserve">
          <source>Installation on other Linux distributions works similarly to installing on &lt;a href=&quot;../ubuntu/index&quot;&gt;Ubuntu&lt;/a&gt;.</source>
          <target state="translated">在其他Linux发行版上的安装与在&lt;a href=&quot;../ubuntu/index&quot;&gt;Ubuntu&lt;/a&gt;上的安装类似。</target>
        </trans-unit>
        <trans-unit id="88f28bc9a8bf110104a02b1d85d694cc8c6a5e2b" translate="yes" xml:space="preserve">
          <source>Installation varies based on your operating system. See our &lt;a href=&quot;installation/index#guides&quot;&gt;guides&lt;/a&gt; for OS-specific instructions.</source>
          <target state="translated">安装因操作系统而异。有关特定于操作系统的说明，请参见我们的&lt;a href=&quot;installation/index#guides&quot;&gt;指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="88b0adc28bc5d4d887cf429678890733427ab340" translate="yes" xml:space="preserve">
          <source>Installation via Bash on Windows 10</source>
          <target state="translated">在Windows 10上通过Bash安装</target>
        </trans-unit>
        <trans-unit id="bc6998ee1c084273d3edf04ac27342ad34f6ef8b" translate="yes" xml:space="preserve">
          <source>Installation via Chocolatey</source>
          <target state="translated">安装通过Chocolatey</target>
        </trans-unit>
        <trans-unit id="80bed0dbfe9f2de055f7876c597ff5e0c712f2fb" translate="yes" xml:space="preserve">
          <source>Installation via RubyInstaller</source>
          <target state="translated">通过RubyInstaller安装</target>
        </trans-unit>
        <trans-unit id="b11767c5d2200d2d16fad18e12fb1be2d82b4099" translate="yes" xml:space="preserve">
          <source>Installing &lt;em&gt;github-pages&lt;/em&gt; via Chocolatey</source>
          <target state="translated">通过Chocolatey 安装&lt;em&gt;github-pages&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c8b250df74e66657f762c2190066ce6c1ec127af" translate="yes" xml:space="preserve">
          <source>Installing Jekyll</source>
          <target state="translated">安装Jekyll</target>
        </trans-unit>
        <trans-unit id="16ceab49469f52919f2e03463175e71ec859efb7" translate="yes" xml:space="preserve">
          <source>Installing Jekyll should be straight-forward if all requirements are met. Before you start, make sure your system has the following:</source>
          <target state="translated">如果满足所有要求,安装Jekyll应该是很简单的。在开始安装之前,请确保你的系统具备以下条件。</target>
        </trans-unit>
        <trans-unit id="65d6a81387a2e4460efe3c5dba8f3ee02752d40a" translate="yes" xml:space="preserve">
          <source>Installing Ruby and Jekyll</source>
          <target state="translated">安装Ruby和Jekyll</target>
        </trans-unit>
        <trans-unit id="03c137f5733905fa449ce5034c5f2765d4312bde" translate="yes" xml:space="preserve">
          <source>Installing Xcode Command-Line Tools</source>
          <target state="translated">安装Xcode命令行工具</target>
        </trans-unit>
        <trans-unit id="60859f03534086c3888d74149a033deec834b0c6" translate="yes" xml:space="preserve">
          <source>Installing a gem-based theme</source>
          <target state="translated">安装一个基于宝石的主题</target>
        </trans-unit>
        <trans-unit id="7c207b93b2af1157f5c75bb99e15b47da86e9f24" translate="yes" xml:space="preserve">
          <source>Installing a plugin</source>
          <target state="translated">安装插件</target>
        </trans-unit>
        <trans-unit id="0301ff786666998ae5d98dbed80c43208cf8c71d" translate="yes" xml:space="preserve">
          <source>Installing the &lt;code&gt;github-pages&lt;/code&gt; gem on Windows</source>
          <target state="translated">在Windows上安装 &lt;code&gt;github-pages&lt;/code&gt; gem</target>
        </trans-unit>
        <trans-unit id="7d65c34ad93e14c54fac65d045196e17931d2197" translate="yes" xml:space="preserve">
          <source>Instead of passing string variables to the include, you can pass a reference to a YAML data file stored in the &lt;code&gt;_data&lt;/code&gt; folder.</source>
          <target state="translated">除了将字符串变量传递给include之外，您还可以传递对存储在 &lt;code&gt;_data&lt;/code&gt; 文件夹中的YAML数据文件的引用。</target>
        </trans-unit>
        <trans-unit id="dbf704fb9a12a09c9c216c64b83c654387d7129d" translate="yes" xml:space="preserve">
          <source>Instead of placing posts inside of folders, you can specify one or more categories that the post belongs to. When the site is generated the post will act as though it had been set with these categories normally. Categories (plural key) can be specified as a &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;YAML list&lt;/a&gt; or a space-separated string.</source>
          <target state="translated">您可以指定帖子所属的一个或多个类别，而不是将帖子放置在文件夹内。生成网站后，该职位将像正常情况下使用这些类别进行设置一样。类别（复数键）可以指定为&lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;YAML列表&lt;/a&gt;或以空格分隔的字符串。</target>
        </trans-unit>
        <trans-unit id="5fbf5118bef5dc635d77ae841cc2e5808c17240f" translate="yes" xml:space="preserve">
          <source>Instead of repeating this configuration each time you create a new post or page, Jekyll provides a way to set these defaults in the site configuration. To do this, you can specify site-wide defaults using the &lt;code&gt;defaults&lt;/code&gt; key in the &lt;code&gt;_config.yml&lt;/code&gt; file in your project&amp;rsquo;s root directory.</source>
          <target state="translated">Jekyll提供了一种在站点配置中设置这些默认值的方法，而不是每次创建新帖子或页面时都重复此配置。为此，您可以使用项目根目录中 &lt;code&gt;_config.yml&lt;/code&gt; 文件中的 &lt;code&gt;defaults&lt;/code&gt; 键来指定站点范围的默认值。</target>
        </trans-unit>
        <trans-unit id="459b517bf3026b848c54e53ae4ce12df2cc3a212" translate="yes" xml:space="preserve">
          <source>Instead of using the &lt;strong&gt;on.push&lt;/strong&gt; condition, you could trigger your build on a &lt;strong&gt;schedule&lt;/strong&gt; by using the &lt;a href=&quot;https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#onschedule&quot;&gt;on.schedule&lt;/a&gt; parameter. For example, here we build daily at midnight by specifying &lt;strong&gt;cron&lt;/strong&gt; syntax, which can be tested at the &lt;a href=&quot;https://crontab.guru/&quot;&gt;crontab guru&lt;/a&gt; site.</source>
          <target state="translated">除了使用&lt;strong&gt;on.push&lt;/strong&gt;条件，您还可以使用&lt;a href=&quot;https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#onschedule&quot;&gt;on.schedule&lt;/a&gt;参数&lt;strong&gt;按计划&lt;/strong&gt;触发构建。例如，这里我们每天午夜通过指定&lt;strong&gt;cron&lt;/strong&gt;语法进行构建，可以在&lt;a href=&quot;https://crontab.guru/&quot;&gt;crontab guru&lt;/a&gt;站点上对其进行测试。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed58f29743f8e14b9c8e13d41e070a1cc1d1c9f5" translate="yes" xml:space="preserve">
          <source>Instructions</source>
          <target state="translated">Instructions</target>
        </trans-unit>
        <trans-unit id="a7881cac6e64abca5eafd172df6eb31fe0b84c88" translate="yes" xml:space="preserve">
          <source>Integrations</source>
          <target state="translated">Integrations</target>
        </trans-unit>
        <trans-unit id="b8751caf9cf0c78b9fafba5c2439e946ebd1dfe1" translate="yes" xml:space="preserve">
          <source>Interacting with APIs such as GitHub</source>
          <target state="translated">与GitHub等API进行交互。</target>
        </trans-unit>
        <trans-unit id="2f66ca1047f5a0b56e9843da678570cdb99652f4" translate="yes" xml:space="preserve">
          <source>Introducing: &lt;code&gt;layout&lt;/code&gt;. In Jekyll 2 and below, any metadata in the layout was merged onto the &lt;code&gt;page&lt;/code&gt; variable in Liquid. This caused a lot of confusion in the way the data was merged and some unexpected behaviour. In Jekyll 3, all layout data is accessible via &lt;code&gt;layout&lt;/code&gt; in Liquid. For example, if your layout has &lt;code&gt;class: my-layout&lt;/code&gt; in its YAML front matter, then the layout can access that via &lt;code&gt;{{ layout.class }}&lt;/code&gt;.</source>
          <target state="translated">简介： &lt;code&gt;layout&lt;/code&gt; 。在Jekyll 2及更低版本中，布局中的所有元数据都已合并到Liquid中的 &lt;code&gt;page&lt;/code&gt; 变量中。这在数据合并方式和一些意外行为方面引起了很多混乱。在Jekyll 3中，可以通过Liquid中的 &lt;code&gt;layout&lt;/code&gt; 访问所有布局数据。例如，如果您 &lt;code&gt;class: my-layout&lt;/code&gt; 在其YAML主题中具有class：my-layout，则该布局可以通过 &lt;code&gt;{{ layout.class }}&lt;/code&gt; 访问它。</target>
        </trans-unit>
        <trans-unit id="489ed6253549f720a11bc5140a4e207e40c898c3" translate="yes" xml:space="preserve">
          <source>Irrespective of the front matter key chosen, Jekyll stores the metadata mapped to the plural key which is exposed to Liquid templates.</source>
          <target state="translated">无论选择哪种前置事项键,Jekyll都会存储映射到复数键的元数据,该元数据暴露在Liquid模板中。</target>
        </trans-unit>
        <trans-unit id="0e59ed77d839555912e7610e1d04e3e952572778" translate="yes" xml:space="preserve">
          <source>It comes in two flavors: basic CommonMark with &lt;a href=&quot;https://github.com/jekyll/jekyll-commonmark&quot;&gt;jekyll-commonmark&lt;/a&gt; plugin and &lt;a href=&quot;https://github.com/github/jekyll-commonmark-ghpages&quot;&gt;GitHub Flavored Markdown supported by GitHub Pages&lt;/a&gt;.</source>
          <target state="translated">它有两种风格：带有jekyll &lt;a href=&quot;https://github.com/jekyll/jekyll-commonmark&quot;&gt;-commonmark&lt;/a&gt;插件的基本CommonMark和&lt;a href=&quot;https://github.com/github/jekyll-commonmark-ghpages&quot;&gt;受GitHub Pages支持的GitHub &lt;/a&gt;Flavored Markdown。</target>
        </trans-unit>
        <trans-unit id="9020d8fc0d60807df15ba6caea583e3777c08e00" translate="yes" xml:space="preserve">
          <source>It is also possible to use glob patterns (currently limited to patterns that contain &lt;code&gt;*&lt;/code&gt;) when matching defaults. For example, it is possible to set specific layout for each &lt;code&gt;special-page.html&lt;/code&gt; in any subfolder of &lt;code&gt;section&lt;/code&gt; folder.3.7.0</source>
          <target state="translated">匹配默认值时，也可以使用全局模式（当前仅限于包含 &lt;code&gt;*&lt;/code&gt; 的模式）。例如，可以在 &lt;code&gt;section&lt;/code&gt; 文件夹3.7.0的任何子文件夹中为每个 &lt;code&gt;special-page.html&lt;/code&gt; 设置特定的布局。</target>
        </trans-unit>
        <trans-unit id="addf7a9272c9812a657c4d3a6d67fec14532a1ac" translate="yes" xml:space="preserve">
          <source>It may not seem like it now, but much of Jekyll&amp;rsquo;s power comes from combining Liquid with other features.</source>
          <target state="translated">现在看来似乎不是这样，但是Jekyll的大部分功能来自将Liquid与其他功能结合在一起。</target>
        </trans-unit>
        <trans-unit id="bbb0445c18b13db0d9e8a3fe9643f439bc5cc215" translate="yes" xml:space="preserve">
          <source>It won&amp;rsquo;t work to just access:</source>
          <target state="translated">仅访问以下内容是行不通的：</target>
        </trans-unit>
        <trans-unit id="dcc1048dbd502084f74e4517e9ae0cef3067fa5f" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s all well and good to have posts in a folder, but a blog is no use unless you have a list of posts somewhere. Creating an index of posts on another page (or in a &lt;a href=&quot;../templates/index&quot;&gt;template&lt;/a&gt;) is easy, thanks to the &lt;a href=&quot;https://docs.shopify.com/themes/liquid/basics&quot;&gt;Liquid template language&lt;/a&gt; and its tags. Here&amp;rsquo;s a basic example of how to create a list of links to your blog posts:</source>
          <target state="translated">文件夹中有帖子很好，但是博客是没有用的，除非您在某处有帖子列表。借助&lt;a href=&quot;https://docs.shopify.com/themes/liquid/basics&quot;&gt;Liquid模板语言&lt;/a&gt;及其标签，在其他页面（或&lt;a href=&quot;../templates/index&quot;&gt;模板&lt;/a&gt;）中创建文章索引很容易。这是有关如何创建博客文章链接列表的基本示例：</target>
        </trans-unit>
        <trans-unit id="a5bc9f1bd092e992f491fd4ee789d06068edc94b" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s good practice to have a &lt;a href=&quot;../../ruby-101/index#gemfile&quot;&gt;Gemfile&lt;/a&gt; for your site. This ensures the version of Jekyll and other gems remains consistent across different environments.</source>
          <target state="translated">&lt;a href=&quot;../../ruby-101/index#gemfile&quot;&gt;最好&lt;/a&gt;为您的网站创建一个Gemfile。这样可以确保Jekyll和其他gem的版本在不同环境中保持一致。</target>
        </trans-unit>
        <trans-unit id="06511dcc6617b5566a69ef0ca85fef625542eea4" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s time to create a site! Create a new directory for your site, you can name it whatever you&amp;rsquo;d like. Through the rest of this tutorial we&amp;rsquo;ll refer to this directory as &amp;ldquo;root&amp;rdquo;.</source>
          <target state="translated">是时候创建一个网站了！为您的网站创建一个新目录，您可以随意命名。在本教程的其余部分中，我们将这个目录称为&amp;ldquo;根&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="94e7298320324aa122bda14ac5033651c06b8526" translate="yes" xml:space="preserve">
          <source>Iterate over this filtered list in &lt;code&gt;_layouts/author.html&lt;/code&gt; to output the author&amp;rsquo;s posts:</source>
          <target state="translated">&lt;code&gt;_layouts/author.html&lt;/code&gt; 此过滤列表，以输出作者的帖子：</target>
        </trans-unit>
        <trans-unit id="a513c9de137d83a7609a8bb13bdbeb5834ec76bd" translate="yes" xml:space="preserve">
          <source>Jekyll</source>
          <target state="translated">Jekyll</target>
        </trans-unit>
        <trans-unit id="808c67fa4e431d5699a6613bd573f08cc162cac0" translate="yes" xml:space="preserve">
          <source>Jekyll &amp;amp; Mac OS X 10.11</source>
          <target state="translated">Jekyll和Mac OS X 10.11</target>
        </trans-unit>
        <trans-unit id="42d44d38eb2ee5033d3fa25ce2ee70b00815734a" translate="yes" xml:space="preserve">
          <source>Jekyll &amp;amp; macOS</source>
          <target state="translated">Jekyll和macOS</target>
        </trans-unit>
        <trans-unit id="205b18c33b3c10f3254a98f57a2a0c9d4d658afa" translate="yes" xml:space="preserve">
          <source>Jekyll 1.0 introduced several new config file options. Before you upgrade, you should check to see if any of these are present in your pre-1.0 config file, and if so, make sure that you&amp;rsquo;re using them properly:</source>
          <target state="translated">Jekyll 1.0引入了几个新的配置文件选项。升级之前，应检查1.0之前的配置文件中是否存在以下任何内容；如果有，请确保正确使用了它们：</target>
        </trans-unit>
        <trans-unit id="aebdcc36a1ed7b3f59a70e00c56c89d470eddae0" translate="yes" xml:space="preserve">
          <source>Jekyll 4.0 started allowing themes to bundle a &lt;code&gt;_config.yml&lt;/code&gt; to simplify theme-onboarding for new users. In the unfortunate situation that importing a bundled theme configuration messes up the merged site-configuration, the user can configure Jekyll to not import the theme-config entirely.</source>
          <target state="translated">Jekyll 4.0开始允许主题捆绑 &lt;code&gt;_config.yml&lt;/code&gt; ,以简化新用户的主题入门。在不幸的情况下，导入捆绑的主题配置会破坏合并的站点配置，用户可以将Jekyll配置为不完全导入主题配置。</target>
        </trans-unit>
        <trans-unit id="c5fbaceceae97f7b63177a421596fd01c4f53d0b" translate="yes" xml:space="preserve">
          <source>Jekyll Contributor Code of Conduct</source>
          <target state="translated">Jekyll贡献者行为准则</target>
        </trans-unit>
        <trans-unit id="9324efe9664b58f2dd291b099f41ed59223057e4" translate="yes" xml:space="preserve">
          <source>Jekyll Plugins Wanted</source>
          <target state="translated">Jekyll插件想要</target>
        </trans-unit>
        <trans-unit id="7d8fadf2d825e12ec8771d9cdf8e6df407e1fedf" translate="yes" xml:space="preserve">
          <source>Jekyll allows you to concoct your sites in any way you can dream up, and it&amp;rsquo;s thanks to the powerful and flexible configuration options that this is possible. These options can either be specified in a &lt;code&gt;_config.yml&lt;/code&gt; file placed in your site&amp;rsquo;s root directory, or can be specified as flags for the &lt;code&gt;jekyll&lt;/code&gt; executable in the terminal.</source>
          <target state="translated">Jekyll允许您以自己梦dream以求的方式来构架网站，这要归功于强大而灵活的配置选项。这些选项可以在站点根目录中的 &lt;code&gt;_config.yml&lt;/code&gt; 文件中指定，也可以在终端中指定为 &lt;code&gt;jekyll&lt;/code&gt; 可执行文件的标志。</target>
        </trans-unit>
        <trans-unit id="4097b74ac38435b11aa3b17fad4cd1447bc26ea5" translate="yes" xml:space="preserve">
          <source>Jekyll allows you to customize your Sass conversion in certain ways.</source>
          <target state="translated">Jekyll允许你以某些方式定制你的Sass转换。</target>
        </trans-unit>
        <trans-unit id="5a06ba36e9af56403d57bad46108a8d760e07012" translate="yes" xml:space="preserve">
          <source>Jekyll also comes with a built-in development server that will allow you to preview what the generated site will look like in your browser locally.</source>
          <target state="translated">Jekyll还内置了一个开发服务器,可以让你在本地的浏览器中预览生成的网站的样子。</target>
        </trans-unit>
        <trans-unit id="5a89ce5f5b58a0ca4e12ac806869bef329c65e94" translate="yes" xml:space="preserve">
          <source>Jekyll also has built-in support for syntax highlighting of code snippets using either Pygments or Rouge, and including a code snippet in any post is easy. Just use the dedicated Liquid tag as follows:</source>
          <target state="translated">Jekyll还内置支持使用Pygments或Rouge对代码片段进行语法高亮显示,在任何帖子中包含代码片段都很容易。只需使用专用的Liquid标签,如下所示。</target>
        </trans-unit>
        <trans-unit id="c75f08d618f8d6918cce6239d9eabbc6fbb20362" translate="yes" xml:space="preserve">
          <source>Jekyll can handle many different iterations of the idea you might associate with a &amp;ldquo;post,&amp;rdquo; however a standard blog style post, including a Title, Layout, Publishing Date, and Categories might look like this:</source>
          <target state="translated">Jekyll可以处理您可能与&amp;ldquo;帖子&amp;rdquo;相关联的想法的许多不同迭代，但是标准的博客样式帖子（包括标题，布局，发布日期和类别）可能如下所示：</target>
        </trans-unit>
        <trans-unit id="84f7b0bcb2763398d2709655311c727de99f72c4" translate="yes" xml:space="preserve">
          <source>Jekyll does not generate a &amp;lsquo;page1&amp;rsquo; folder, so the above code will not work when a &lt;code&gt;/page1&lt;/code&gt; link is produced. See below for a way to handle this if it&amp;rsquo;s a problem for you.</source>
          <target state="translated">Jekyll不会生成&amp;ldquo; page1&amp;rdquo;文件夹，因此，在生成 &lt;code&gt;/page1&lt;/code&gt; 链接时，以上代码将不起作用。如果您遇到问题，请参见下面的解决方法。</target>
        </trans-unit>
        <trans-unit id="623989c9f30f91c5701a5467a4c6c7f7a8c5f576" translate="yes" xml:space="preserve">
          <source>Jekyll expects all &lt;em&gt;include files&lt;/em&gt; to be placed in an &lt;code&gt;_includes&lt;/code&gt; directory at the root of your source directory. In the above example, this will embed the contents of &lt;code&gt;_includes/footer.html&lt;/code&gt; into the calling file.</source>
          <target state="translated">Jekyll希望所有&lt;em&gt;包含文件&lt;/em&gt;都放在源目录根目录下的 &lt;code&gt;_includes&lt;/code&gt; 目录中。在上面的示例中，这会将 &lt;code&gt;_includes/footer.html&lt;/code&gt; 的内容嵌入到调用文件中。</target>
        </trans-unit>
        <trans-unit id="eaad9cda13255d782ecc3798d5ba55c078f88d41" translate="yes" xml:space="preserve">
          <source>Jekyll generates your static site to the &lt;code&gt;_site&lt;/code&gt; directory by default. You can transfer the contents of this directory to almost any hosting provider to get your site live. Here are some manual ways of achieving this:</source>
          <target state="translated">默认情况下，Jekyll将您的静态站点生成到 &lt;code&gt;_site&lt;/code&gt; 目录。您可以将该目录的内容传输给几乎所有托管服务提供商，以使您的网站正常运行。以下是一些实现此目的的手动方法：</target>
        </trans-unit>
        <trans-unit id="f823e2478049f311b334a187f8c8c8ce996d032e" translate="yes" xml:space="preserve">
          <source>Jekyll gives this particular group of gems in your &lt;code&gt;Gemfile&lt;/code&gt; a different treatment. Any gem included in this group is loaded before Jekyll starts processing the rest of your source directory.</source>
          <target state="translated">Jekyll对 &lt;code&gt;Gemfile&lt;/code&gt; 中的这组特殊宝石进行了不同的处理。Jekyll开始处理源目录的其余部分之前，将加载此组中包含的所有gem。</target>
        </trans-unit>
        <trans-unit id="a6c0da7b0268e18dbdfe89e5f60e7b2d019abe26" translate="yes" xml:space="preserve">
          <source>Jekyll gives you a lot of flexibility to customize how it builds your site. These options can either be specified in a &lt;code&gt;_config.yml&lt;/code&gt; or &lt;code&gt;_config.toml&lt;/code&gt; file placed in your site&amp;rsquo;s root directory, or can be specified as flags for the &lt;code&gt;jekyll&lt;/code&gt; executable in the terminal.</source>
          <target state="translated">Jekyll为您提供了很大的灵活性，可以自定义网站的构建方式。这些选项可以在站点根目录中的 &lt;code&gt;_config.yml&lt;/code&gt; 或 &lt;code&gt;_config.toml&lt;/code&gt; 文件中指定，也可以在终端中指定为 &lt;code&gt;jekyll&lt;/code&gt; 可执行文件的标志。</target>
        </trans-unit>
        <trans-unit id="9779f5873de87b96de9d0b2e2560ee55da48ea40" translate="yes" xml:space="preserve">
          <source>Jekyll handles two special Redcarpet extensions:</source>
          <target state="translated">Jekyll处理两个特殊的Redcarpet扩展。</target>
        </trans-unit>
        <trans-unit id="2b368cd086c4cf9c3da1721dc215c046acd3cc22" translate="yes" xml:space="preserve">
          <source>Jekyll has a plugin system with hooks that allow you to create custom generated content specific to your site. You can run custom code for your site without having to modify the Jekyll source itself.</source>
          <target state="translated">Jekyll有一个带有钩子的插件系统,允许你创建特定于你的网站的自定义生成内容。你可以为你的网站运行自定义代码,而无需修改Jekyll源码本身。</target>
        </trans-unit>
        <trans-unit id="e59cffaea8e7dd210f0672d747ee169ae5e28a92" translate="yes" xml:space="preserve">
          <source>Jekyll has an extensive theme system that allows you to leverage community-maintained templates and styles to customize your site&amp;rsquo;s presentation. Jekyll themes package up layouts, includes, and stylesheets in a way that can be overridden by your site&amp;rsquo;s content.</source>
          <target state="translated">Jekyll具有广泛的主题系统，使您可以利用社区维护的模板和样式来自定义网站的演示。Jekyll主题以可以被您的网站内容覆盖的方式打包布局，包含和样式表。</target>
        </trans-unit>
        <trans-unit id="a1c53e13db7d0a28e24bacad75dd1c5690f478da" translate="yes" xml:space="preserve">
          <source>Jekyll has an extensive theme system that allows you to leverage community-maintained templates and styles to customize your site&amp;rsquo;s presentation. Jekyll themes specify plugins and package up assets, layouts, includes, and stylesheets in a way that can be overridden by your site&amp;rsquo;s content.</source>
          <target state="translated">Jekyll具有广泛的主题系统，使您可以利用社区维护的模板和样式来自定义网站的演示文稿。Jekyll主题指定了插件，并以一种可以被您的网站内容覆盖的方式打包资产，布局，包含和样式表。</target>
        </trans-unit>
        <trans-unit id="7962a348f79756dc69e793015cfcc73ab94df544" translate="yes" xml:space="preserve">
          <source>Jekyll has built in support for syntax highlighting of over 100 languages thanks to &lt;a href=&quot;http://rouge.jneen.net&quot;&gt;Rouge&lt;/a&gt;. Rouge is the default highlighter in Jekyll 3 and above.</source>
          <target state="translated">借助&lt;a href=&quot;http://rouge.jneen.net&quot;&gt;Rouge，&lt;/a&gt; Jekyll内置了对超过100种语言的语法突出显示的支持。胭脂是Jekyll 3及更高版本中的默认荧光笔。</target>
        </trans-unit>
        <trans-unit id="796a53df1f3443b9e298618111b14017b66fb383" translate="yes" xml:space="preserve">
          <source>Jekyll has built in support for syntax highlighting of over 60 languages thanks to &lt;a href=&quot;http://rouge.jneen.net&quot;&gt;Rouge&lt;/a&gt;. Rouge is the default highlighter in Jekyll 3 and above. To use it in Jekyll 2, set &lt;code&gt;highlighter&lt;/code&gt; to &lt;code&gt;rouge&lt;/code&gt; and ensure the &lt;code&gt;rouge&lt;/code&gt; gem is installed properly.</source>
          <target state="translated">借助&lt;a href=&quot;http://rouge.jneen.net&quot;&gt;Rouge，&lt;/a&gt; Jekyll内置了对60多种语言的语法突出显示的支持。胭脂是Jekyll 3及更高版本中的默认荧光笔。要在Jekyll 2中使用它，请将 &lt;code&gt;highlighter&lt;/code&gt; 设置为 &lt;code&gt;rouge&lt;/code&gt; 并确保 &lt;code&gt;rouge&lt;/code&gt; 宝石正确安装。</target>
        </trans-unit>
        <trans-unit id="0892635cf7504b3e5483cf4a0443e903aca70ce7" translate="yes" xml:space="preserve">
          <source>Jekyll has first class support for &lt;em&gt;tags&lt;/em&gt; and &lt;em&gt;categories&lt;/em&gt; in blog posts.</source>
          <target state="translated">Jekyll对博客文章中的&lt;em&gt;标签&lt;/em&gt;和&lt;em&gt;类别提供&lt;/em&gt;一流的支持。</target>
        </trans-unit>
        <trans-unit id="caa9b48afeeada7fcf9b5c8191de86955ffe80fc" translate="yes" xml:space="preserve">
          <source>Jekyll is a &lt;a href=&quot;../ruby-101/index#gems&quot;&gt;Ruby Gem&lt;/a&gt; that can be installed on most systems.</source>
          <target state="translated">Jekyll是可以在大多数系统上安装的&lt;a href=&quot;../ruby-101/index#gems&quot;&gt;Ruby Gem&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="072465ea7eb6881bb95253fc752079dadd1fd275" translate="yes" xml:space="preserve">
          <source>Jekyll is a Ruby program so you need to install Ruby on your machine to begin with. Head over to the &lt;a href=&quot;../../installation/index&quot;&gt;install guide&lt;/a&gt; and follow the instructions for your operating system.</source>
          <target state="translated">Jekyll是Ruby程序，因此首先需要在计算机上安装Ruby。转至&lt;a href=&quot;../../installation/index&quot;&gt;安装指南，&lt;/a&gt;并按照您的操作系统的说明进行操作。</target>
        </trans-unit>
        <trans-unit id="2458c344061b15cf37f18b7f901cfd2423a81e1c" translate="yes" xml:space="preserve">
          <source>Jekyll is a gem. Many Jekyll &lt;a href=&quot;../plugins/index&quot;&gt;plugins&lt;/a&gt; are also gems, including &lt;a href=&quot;https://github.com/jekyll/jekyll-feed&quot;&gt;jekyll-feed&lt;/a&gt;, &lt;a href=&quot;https://github.com/jekyll/jekyll-seo-tag&quot;&gt;jekyll-seo-tag&lt;/a&gt; and &lt;a href=&quot;https://github.com/jekyll/jekyll-archives&quot;&gt;jekyll-archives&lt;/a&gt;.</source>
          <target state="translated">Jekyll是一颗宝石。许多Jekyll&lt;a href=&quot;../plugins/index&quot;&gt;插件&lt;/a&gt;也是宝石，包括&lt;a href=&quot;https://github.com/jekyll/jekyll-feed&quot;&gt;jekyll-feed&lt;/a&gt;，&lt;a href=&quot;https://github.com/jekyll/jekyll-seo-tag&quot;&gt;jekyll-seo-tag&lt;/a&gt;和&lt;a href=&quot;https://github.com/jekyll/jekyll-archives&quot;&gt;jekyll-archives&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f07f9ec0a1524d864b1fec9586093e957570d58c" translate="yes" xml:space="preserve">
          <source>Jekyll is a simple, blog-aware, static site generator. It takes a template directory containing raw text files in various formats, runs it through a converter (like &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;) and our &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt; renderer, and spits out a complete, ready-to-publish static website suitable for serving with your favorite web server. Jekyll also happens to be the engine behind &lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt;, which means you can use Jekyll to host your project&amp;rsquo;s page, blog, or website from GitHub&amp;rsquo;s servers &lt;strong&gt;for free&lt;/strong&gt;.</source>
          <target state="translated">Jekyll是一个简单的，可识别博客的静态网站生成器。它获取一个包含各种格式的原始文本文件的模板目录，通过转换器（例如&lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;）和我们的&lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt;渲染器运行它，并吐出一个完整的，随时可发布的静态网站，以适合您喜欢的Web服务器。 Jekyll也恰好是&lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt;的引擎，这意味着您可以使用Jekyll从GitHub的服务器&lt;strong&gt;上免费&lt;/strong&gt;托管项目的页面，博客或网站。</target>
        </trans-unit>
        <trans-unit id="d3dd2cd2cbdfe4ae20dd71967ec180dae63373da" translate="yes" xml:space="preserve">
          <source>Jekyll is a static site generator so we need Jekyll to build the site before we can view it. There are two commands you can run in the root of your site to build it:</source>
          <target state="translated">Jekyll是一个静态网站生成器,所以我们需要Jekyll来建立网站,然后才能查看它。你可以在网站的根目录下运行两个命令来建立网站。</target>
        </trans-unit>
        <trans-unit id="31d88f5d67f19f36eb7649186dbed9f15e4c7771" translate="yes" xml:space="preserve">
          <source>Jekyll is a static site generator. It takes text written in your favorite markup language and uses layouts to create a static website. You can tweak the site&amp;rsquo;s look and feel, URLs, the data displayed on the page, and more.</source>
          <target state="translated">Jekyll是静态站点生成器。它采用您喜欢的标记语言编写的文本，并使用布局创建静态网站。您可以调整网站的外观，URL，页面上显示的数据等。</target>
        </trans-unit>
        <trans-unit id="79c036ffff671c2109909b1d044da4eba4d477c1" translate="yes" xml:space="preserve">
          <source>Jekyll is written in Ruby. If you&amp;rsquo;re new to Ruby, this page helps you learn some of the terminology.</source>
          <target state="translated">Jekyll用Ruby编写。如果您是Ruby的新手，此页面可帮助您学习一些术语。</target>
        </trans-unit>
        <trans-unit id="e779c5f9969a3932787d2f57008cd6dbcd7b4559" translate="yes" xml:space="preserve">
          <source>Jekyll is, at its core, a text transformation engine. The concept behind the system is this: you give it text written in your favorite markup language, be that Markdown, Textile, or just plain HTML, and it churns that through a layout or a series of layout files. Throughout that process you can tweak how you want the site URLs to look, what data gets displayed in the layout, and more. This is all done through editing text files; the static web site is the final product.</source>
          <target state="translated">Jekyll的核心是一个文本转换引擎。系统背后的概念是这样的:你把用你最喜欢的标记语言写的文本交给它,无论是Markdown、Textile,还是普通的HTML,它就会把这些文本通过一个布局或一系列布局文件进行转换。在整个过程中,你可以调整你想要的网站URLs的外观,什么数据会显示在布局中,等等。这些都是通过编辑文本文件来完成的;静态网站是最终产品。</target>
        </trans-unit>
        <trans-unit id="e3bf1359d968bddfda521ff08e5d2b20c445a054" translate="yes" xml:space="preserve">
          <source>Jekyll lets you access the &lt;code&gt;site&lt;/code&gt; object through the &lt;code&gt;@context.registers&lt;/code&gt; feature of Liquid at &lt;code&gt;@context.registers[:site]&lt;/code&gt;. For example, you can access the global configuration file &lt;code&gt;_config.yml&lt;/code&gt; using &lt;code&gt;@context.registers[:site].config&lt;/code&gt;.</source>
          <target state="translated">Jekyll允许您通过 &lt;code&gt;@context.registers[:site]&lt;/code&gt; 的Liquid的 &lt;code&gt;@context.registers&lt;/code&gt; 功能访问 &lt;code&gt;site&lt;/code&gt; 对象。例如，您可以使用 &lt;code&gt;@context.registers[:site].config&lt;/code&gt; 访问全局配置文件 &lt;code&gt;_config.yml&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fbc354ba340e745916a498948c20a2e8b128cc74" translate="yes" xml:space="preserve">
          <source>Jekyll lets you access the &lt;code&gt;site&lt;/code&gt; object through the &lt;code&gt;context.registers&lt;/code&gt; feature of Liquid at &lt;code&gt;context.registers[:site]&lt;/code&gt;. For example, you can access the global configuration file &lt;code&gt;_config.yml&lt;/code&gt; using &lt;code&gt;context.registers[:site].config&lt;/code&gt;.</source>
          <target state="translated">Jekyll允许您通过 &lt;code&gt;context.registers[:site]&lt;/code&gt; 的Liquid 的 &lt;code&gt;context.registers&lt;/code&gt; 功能访问 &lt;code&gt;site&lt;/code&gt; 对象。例如，您可以使用 &lt;code&gt;context.registers[:site].config&lt;/code&gt; 访问全局配置文件 &lt;code&gt;_config.yml&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b5db8cfbe3fba167a0a2e8a885be9432181f655" translate="yes" xml:space="preserve">
          <source>Jekyll looks for the &lt;code&gt;_layouts&lt;/code&gt; directory either at the root of your site's &lt;code&gt;source&lt;/code&gt; or at the root of your theme.</source>
          <target state="translated">Jekyll在站点 &lt;code&gt;source&lt;/code&gt; 的根目录或主题的根目录中查找 &lt;code&gt;_layouts&lt;/code&gt; 目录。</target>
        </trans-unit>
        <trans-unit id="2c0656f7a345abf21e2147e2a0fcb89e0933f64f" translate="yes" xml:space="preserve">
          <source>Jekyll makes posts available at &lt;code&gt;site.posts&lt;/code&gt;.</source>
          <target state="translated">Jekyll在 &lt;code&gt;site.posts&lt;/code&gt; 上提供帖子。</target>
        </trans-unit>
        <trans-unit id="636d48ced345024e256998d5677894ebcd469745" translate="yes" xml:space="preserve">
          <source>Jekyll makes this data file available to you at &lt;code&gt;site.data.navigation&lt;/code&gt;. Instead of outputting each link in &lt;code&gt;_includes/navigation.html&lt;/code&gt;, now you can iterate over the data file instead:</source>
          <target state="translated">Jekyll可以在 &lt;code&gt;site.data.navigation&lt;/code&gt; 上向您提供此数据文件。现在，您无需遍历 &lt;code&gt;_includes/navigation.html&lt;/code&gt; 中的每个链接，而是可以遍历数据文件：</target>
        </trans-unit>
        <trans-unit id="91ded4d9bcfd892aece0c6969de6ac9f3b2af1b8" translate="yes" xml:space="preserve">
          <source>Jekyll now lets you write draft posts, and allows you to easily preview how they will look prior to publishing. To start a draft, simply create a folder called &lt;code&gt;_drafts&lt;/code&gt; in your site&amp;rsquo;s source directory (e.g., alongside &lt;code&gt;_posts&lt;/code&gt;), and add a new markdown file to it. To preview your new post, simply run the &lt;code&gt;jekyll serve&lt;/code&gt; command with the &lt;code&gt;--drafts&lt;/code&gt; flag.</source>
          <target state="translated">Jekyll现在允许您编写草稿，并允许您轻松预览发布前的外观。要开始草稿，只需在站点的源目录中创建一个名为 &lt;code&gt;_drafts&lt;/code&gt; 的文件夹（例如 &lt;code&gt;_posts&lt;/code&gt; 旁边），然后向其中添加一个新的markdown文件。要预览您的新帖子，只需运行带有 &lt;code&gt;--drafts&lt;/code&gt; 标志的jekyll &lt;code&gt;jekyll serve&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="158e07ed483c3a91f97e15f45172243ece02f69d" translate="yes" xml:space="preserve">
          <source>Jekyll now uses a rubygem to internally configure Timezone based on established &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;IANA Timezone Database&lt;/a&gt;.</source>
          <target state="translated">Jekyll现在使用rubygem根据已建立的&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;IANA时区数据库&lt;/a&gt;在内部配置时区。</target>
        </trans-unit>
        <trans-unit id="0ee102bf04dc72cf649ca51cdf3be64db665ed5b" translate="yes" xml:space="preserve">
          <source>Jekyll now uses a rubygem to internally configure Timezone based on established &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;IANA Timezone Database&lt;/a&gt;. While &amp;lsquo;new&amp;rsquo; blogs created with Jekyll v3.4 and greater, will have the following added to their &amp;lsquo;Gemfile&amp;rsquo; by default, existing sites &lt;em&gt;will&lt;/em&gt; have to update their &amp;lsquo;Gemfile&amp;rsquo; (and installed) to enable development on Windows:</source>
          <target state="translated">Jekyll现在使用rubygem基于已建立的&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;IANA时区数据库&lt;/a&gt;在内部配置时区。虽然使用Jekyll v3.4或更高版本创建的&amp;ldquo;新&amp;rdquo;博客默认情况下会将以下内容添加到其&amp;ldquo; Gemfile&amp;rdquo;中，但现有站点&lt;em&gt;将&lt;/em&gt;必须更新（并安装）其&amp;ldquo; Gemfile&amp;rdquo;才能在Windows上进行开发：</target>
        </trans-unit>
        <trans-unit id="b5417244e089ca9b88be0d8d04080295b358c06b" translate="yes" xml:space="preserve">
          <source>Jekyll on Linux</source>
          <target state="translated">Linux上的Jekyll</target>
        </trans-unit>
        <trans-unit id="ac4d51a2cd8689b1cd95bcd8bca8baa71494548f" translate="yes" xml:space="preserve">
          <source>Jekyll on Twitter</source>
          <target state="translated">Jekyll在Twitter上</target>
        </trans-unit>
        <trans-unit id="47e4a47081791075195441945d68467332c7e594" translate="yes" xml:space="preserve">
          <source>Jekyll on Ubuntu</source>
          <target state="translated">Ubuntu上的Jekyll</target>
        </trans-unit>
        <trans-unit id="9db167acaa9239338db11bc4db579948bb8bcd54" translate="yes" xml:space="preserve">
          <source>Jekyll on Windows</source>
          <target state="translated">Jekyll on Windows</target>
        </trans-unit>
        <trans-unit id="f6f82c018dd7047302fec182aa54abfeee7089dc" translate="yes" xml:space="preserve">
          <source>Jekyll on macOS</source>
          <target state="translated">MacOS上的Jekyll</target>
        </trans-unit>
        <trans-unit id="f3802f7ca4dd2fd55ddff8cc084c2e669cf03918" translate="yes" xml:space="preserve">
          <source>Jekyll plugins allow you to create custom generated content specific to your site. There&amp;rsquo;s many &lt;a href=&quot;../../plugins/index&quot;&gt;plugins&lt;/a&gt; available or you can even write your own.</source>
          <target state="translated">Jekyll插件使您可以创建特定于站点的定制生成的内容。有很多可用的&lt;a href=&quot;../../plugins/index&quot;&gt;插件&lt;/a&gt;，或者您甚至可以编写自己的插件。</target>
        </trans-unit>
        <trans-unit id="5ea510d5fc4795cd9f40638b7de1ca1bcbf30ce4" translate="yes" xml:space="preserve">
          <source>Jekyll processes all Liquid filters and tags in asset files</source>
          <target state="translated">Jekyll处理资产文件中的所有液体过滤器和标签。</target>
        </trans-unit>
        <trans-unit id="802e65a087d4160c667727cfbcb1a534752ec8b7" translate="yes" xml:space="preserve">
          <source>Jekyll processes all Liquid filters in code blocks</source>
          <target state="translated">Jekyll在代码块中处理所有液体过滤器。</target>
        </trans-unit>
        <trans-unit id="da747496c9a65f0a8c00ec6f4f3531565cafab9d" translate="yes" xml:space="preserve">
          <source>Jekyll provides a number of useful Liquid additions to help you build your site:</source>
          <target state="translated">Jekyll提供了许多有用的Liquid添加物来帮助你建立你的网站。</target>
        </trans-unit>
        <trans-unit id="a49d25367b1e6670095bcbe7ed5adcff5094f19b" translate="yes" xml:space="preserve">
          <source>Jekyll provides built-in support for &lt;a href=&quot;https://sass-lang.com/&quot;&gt;Sass&lt;/a&gt; and can work with &lt;a href=&quot;https://coffeescript.org/&quot;&gt;CoffeeScript&lt;/a&gt; via a Ruby gem. In order to use them, you must first create a file with the proper extension name (one of &lt;code&gt;.sass&lt;/code&gt;, &lt;code&gt;.scss&lt;/code&gt;, or &lt;code&gt;.coffee&lt;/code&gt;) and &lt;strong&gt;&lt;em&gt;start the file with two lines of triple dashes&lt;/em&gt;&lt;/strong&gt;, like this:</source>
          <target state="translated">Jekyll提供对&lt;a href=&quot;https://sass-lang.com/&quot;&gt;Sass的&lt;/a&gt;内置支持，并且可以通过Ruby gem与&lt;a href=&quot;https://coffeescript.org/&quot;&gt;CoffeeScript一起&lt;/a&gt;使用。为了使用它们，你必须首先创建一个适当的扩展名（一个文件 &lt;code&gt;.sass&lt;/code&gt; ， &lt;code&gt;.scss&lt;/code&gt; ，或 &lt;code&gt;.coffee&lt;/code&gt; ），并&lt;strong&gt;&lt;em&gt;与两行三重破折号的启动文件&lt;/em&gt;&lt;/strong&gt;，如下所示：</target>
        </trans-unit>
        <trans-unit id="edba0ddab22968e6856800e9e202c01271877d09" translate="yes" xml:space="preserve">
          <source>Jekyll provides built-in support for Sass and can work with CoffeeScript via a Ruby gem. In order to use them, you must first create a file with the proper extension name (one of &lt;code&gt;.sass&lt;/code&gt;, &lt;code&gt;.scss&lt;/code&gt;, or &lt;code&gt;.coffee&lt;/code&gt;) and &lt;strong&gt;&lt;em&gt;start the file with two lines of triple dashes&lt;/em&gt;&lt;/strong&gt;, like this:</source>
          <target state="translated">Jekyll提供对Sass的内置支持，并且可以通过Ruby gem与CoffeeScript一起使用。为了使用它们，你必须首先创建一个适当的扩展名（一个文件 &lt;code&gt;.sass&lt;/code&gt; ， &lt;code&gt;.scss&lt;/code&gt; ，或 &lt;code&gt;.coffee&lt;/code&gt; ），并&lt;strong&gt;&lt;em&gt;与两行三重破折号的启动文件&lt;/em&gt;&lt;/strong&gt;，如下所示：</target>
        </trans-unit>
        <trans-unit id="46359c83174cdcd8c267384987a54331c82e82ce" translate="yes" xml:space="preserve">
          <source>Jekyll provides by default &lt;code&gt;Content-Type&lt;/code&gt; and &lt;code&gt;Cache-Control&lt;/code&gt; response headers: one dynamic in order to specify the nature of the data being served, the other static in order to disable caching so that you don&amp;rsquo;t have to fight with Chrome&amp;rsquo;s aggressive caching when you are in development mode.</source>
          <target state="translated">Jekyll默认情况下提供 &lt;code&gt;Content-Type&lt;/code&gt; 和 &lt;code&gt;Cache-Control&lt;/code&gt; 响应标头：一个动态以指定要提供的数据的性质，另一个静态以禁用缓存，这样您就不必在使用Chrome的主动式缓存时遇到麻烦了您处于开发模式。</target>
        </trans-unit>
        <trans-unit id="430b6448029a060479d76de3740d1c9e2f3d5809" translate="yes" xml:space="preserve">
          <source>Jekyll provides hooks for &lt;code&gt;:site&lt;/code&gt;, &lt;code&gt;:pages&lt;/code&gt;, &lt;code&gt;:posts&lt;/code&gt;, and &lt;code&gt;:documents&lt;/code&gt;. In all cases, Jekyll calls your hooks with the container object as the first callback parameter. However, all &lt;code&gt;:pre_render&lt;/code&gt; hooks and the&lt;code&gt;:site, :post_render&lt;/code&gt; hook will also provide a payload hash as a second parameter. In the case of &lt;code&gt;:pre_render&lt;/code&gt;, the payload gives you full control over the variables that are available while rendering. In the case of &lt;code&gt;:site, :post_render&lt;/code&gt;, the payload contains final values after rendering all the site (useful for sitemaps, feeds, etc).</source>
          <target state="translated">Jekyll为 &lt;code&gt;:site&lt;/code&gt; ， &lt;code&gt;:pages&lt;/code&gt; ， &lt;code&gt;:posts&lt;/code&gt; 和 &lt;code&gt;:documents&lt;/code&gt; 提供了钩子。在所有情况下，Jekyll都将容器对象作为第一个回调参数来调用钩子。但是，所有 &lt;code&gt;:pre_render&lt;/code&gt; 挂钩和 &lt;code&gt;:site, :post_render&lt;/code&gt; 挂钩还将提供有效负载哈希作为第二个参数。对于 &lt;code&gt;:pre_render&lt;/code&gt; ，有效负载使您可以完全控制渲染时可用的变量。对于 &lt;code&gt;:site, :post_render&lt;/code&gt; ，有效负载包含渲染所有站点后的最终值（对站点地图，提要等有用）。</target>
        </trans-unit>
        <trans-unit id="c30cbac395c5ac11e64e43dea9f5bb8fd6d017c5" translate="yes" xml:space="preserve">
          <source>Jekyll requires &lt;strong&gt;Ruby v2.4.0&lt;/strong&gt; or higher. macOS Catalina 10.15 ships with Ruby 2.6.3. Check your Ruby version using &lt;code&gt;ruby -v&lt;/code&gt;.</source>
          <target state="translated">Jekyll需要&lt;strong&gt;Ruby v2.4.0&lt;/strong&gt;或更高版本。macOS Catalina 10.15随Ruby 2.6.3一起提供。使用 &lt;code&gt;ruby -v&lt;/code&gt; 检查您的Ruby版本。</target>
        </trans-unit>
        <trans-unit id="0644ee5a4a42d81d51373b99fc8751efc1a9daa3" translate="yes" xml:space="preserve">
          <source>Jekyll requires &lt;strong&gt;Ruby v2.5.0&lt;/strong&gt; or higher. macOS Catalina 10.15 ships with Ruby 2.6.3. Check your Ruby version using &lt;code&gt;ruby -v&lt;/code&gt;.</source>
          <target state="translated">Jekyll需要&lt;strong&gt;Ruby v2.5.0&lt;/strong&gt;或更高版本。macOS Catalina 10.15随Ruby 2.6.3一起提供。使用 &lt;code&gt;ruby -v&lt;/code&gt; 检查您的Ruby版本。</target>
        </trans-unit>
        <trans-unit id="f002d6623841c1892ef574e9c828b235a3d3d05d" translate="yes" xml:space="preserve">
          <source>Jekyll requires the following:</source>
          <target state="translated">Jekyll需要以下条件:</target>
        </trans-unit>
        <trans-unit id="2b4be10fd436b4843092922a4363eca9671b242f" translate="yes" xml:space="preserve">
          <source>Jekyll runs with the following configuration options by default. Alternative settings for these options can be explicitly specified in the configuration file or on the command-line.</source>
          <target state="translated">Jekyll 运行时默认使用以下配置选项。这些选项的其他设置可以在配置文件或命令行中明确指定。</target>
        </trans-unit>
        <trans-unit id="af0e25e85629fe7795f30ef93965300c01ea8040" translate="yes" xml:space="preserve">
          <source>Jekyll sites often use this structure to keep assets organized:</source>
          <target state="translated">Jekyll网站经常使用这种结构来组织资产。</target>
        </trans-unit>
        <trans-unit id="7b56f4c7875b9222396502bc638c4eaec78060f6" translate="yes" xml:space="preserve">
          <source>Jekyll supports &lt;a href=&quot;https://daringfireball.net/projects/markdown/syntax&quot;&gt;Markdown&lt;/a&gt; as well as HTML for pages. Markdown is a great choice for pages with a simple content structure (just paragraphs, headings and images), as it&amp;rsquo;s less verbose than raw HTML. Let&amp;rsquo;s try it out on the next page.</source>
          <target state="translated">Jekyll支持&lt;a href=&quot;https://daringfireball.net/projects/markdown/syntax&quot;&gt;Markdown&lt;/a&gt;以及页面的HTML。对于具有简单内容结构（只是段落，标题和图像）的页面，Markdown是一个不错的选择，因为它不像原始HTML那样冗长。让我们在下一页上尝试一下。</target>
        </trans-unit>
        <trans-unit id="4d86edd2aa624b27088d705b31d4b2dde59375a7" translate="yes" xml:space="preserve">
          <source>Jekyll supports loading data from &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt;, &lt;a href=&quot;http://www.json.org/&quot;&gt;JSON&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Tab-separated_values&quot;&gt;TSV&lt;/a&gt; files located in the &lt;code&gt;_data&lt;/code&gt; directory. Note that CSV and TSV files &lt;em&gt;must&lt;/em&gt; contain a header row.</source>
          <target state="translated">Jekyll支持从 &lt;code&gt;_data&lt;/code&gt; 目录中的&lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt;，&lt;a href=&quot;http://www.json.org/&quot;&gt;JSON&lt;/a&gt;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt;和&lt;a href=&quot;https://en.wikipedia.org/wiki/Tab-separated_values&quot;&gt;TSV&lt;/a&gt;文件加载数据。请注意，CSV和TSV文件&lt;em&gt;必须&lt;/em&gt;包含标题行。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5a88d78d1f9899a437aa358de44fe1d1d38bcfd3" translate="yes" xml:space="preserve">
          <source>Jekyll supports loading data from &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt;, &lt;a href=&quot;http://www.json.org/&quot;&gt;JSON&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt; files located in the &lt;code&gt;_data&lt;/code&gt; directory. Note that CSV files &lt;em&gt;must&lt;/em&gt; contain a header row.</source>
          <target state="translated">Jekyll支持从 &lt;code&gt;_data&lt;/code&gt; 目录中的&lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt;，&lt;a href=&quot;http://www.json.org/&quot;&gt;JSON&lt;/a&gt;和&lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt;文件加载数据。请注意，CSV文件&lt;em&gt;必须&lt;/em&gt;包含标题行。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e6c268442124238afa24c27de4237a71c08275fe" translate="yes" xml:space="preserve">
          <source>Jekyll supports loading data from &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt;, &lt;a href=&quot;https://www.json.org/&quot;&gt;JSON&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Tab-separated_values&quot;&gt;TSV&lt;/a&gt; files located in the &lt;code&gt;_data&lt;/code&gt; directory. Note that CSV and TSV files &lt;em&gt;must&lt;/em&gt; contain a header row.</source>
          <target state="translated">Jekyll支持从 &lt;code&gt;_data&lt;/code&gt; 目录中的&lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt;，&lt;a href=&quot;https://www.json.org/&quot;&gt;JSON&lt;/a&gt;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt;和&lt;a href=&quot;https://en.wikipedia.org/wiki/Tab-separated_values&quot;&gt;TSV&lt;/a&gt;文件加载数据。请注意，CSV和TSV文件&lt;em&gt;必须&lt;/em&gt;包含标题行。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e1ce9132b7073ec4bd890475c43d39d722bbf7c5" translate="yes" xml:space="preserve">
          <source>Jekyll supports loading data from YAML, JSON, and CSV files located in a &lt;code&gt;_data&lt;/code&gt; directory. Data files are a great way to separate content from source code to make the site easier to maintain.</source>
          <target state="translated">Jekyll支持从 &lt;code&gt;_data&lt;/code&gt; 目录中的YAML，JSON和CSV文件加载数据。数据文件是一种将内容与源代码分开以使站点易于维护的好方法。</target>
        </trans-unit>
        <trans-unit id="cb6c67edc0dab202898b18be5c476739c32221f1" translate="yes" xml:space="preserve">
          <source>Jekyll supports permalinks that contain neither a trailing slash nor a file extension, but this requires additional support from the web server to properly serve. When using these types of permalinks, output files written to disk will still have the proper file extension (typically &lt;code&gt;.html&lt;/code&gt;), so the web server must be able to map requests without file extensions to these files.</source>
          <target state="translated">Jekyll支持永久链接，永久链接既不包含斜杠也不包含文件扩展名，但这需要Web服务器提供额外的支持才能正常使用。使用这些类型的永久链接时，写入磁盘的输出文件仍将具有正确的文件扩展名（通常是 &lt;code&gt;.html&lt;/code&gt; ），因此Web服务器必须能够将不带文件扩展名的请求映射到这些文件。</target>
        </trans-unit>
        <trans-unit id="b0613f7e22216b0d97a46cb92e154dce22ac1ff0" translate="yes" xml:space="preserve">
          <source>Jekyll themes set default layouts, includes, and stylesheets. However, you can override any of the theme defaults with your own site content.</source>
          <target state="translated">Jekyll主题设置了默认的布局,包括,和样式表。然而,你可以用你自己的网站内容覆盖任何主题的默认设置。</target>
        </trans-unit>
        <trans-unit id="c767e23f5a22319259cb447f562ce0826acbd058" translate="yes" xml:space="preserve">
          <source>Jekyll traverses your site looking for files to process. Any files with &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt; are subject to processing. For each of these files, Jekyll makes a variety of data available via &lt;a href=&quot;../liquid/index&quot;&gt;Liquid&lt;/a&gt;. The following is a reference of the available data.</source>
          <target state="translated">Jekyll遍历您的站点以查找要处理的文件。任何带有&lt;a href=&quot;../front-matter/index&quot;&gt;正面问题的&lt;/a&gt;文件都将受到处理。对于这些文件中的每一个，Jekyll均可通过&lt;a href=&quot;../liquid/index&quot;&gt;Liquid&lt;/a&gt;获得各种数据。以下是可用数据的参考。</target>
        </trans-unit>
        <trans-unit id="b14d294b4a5a02070c4e47c5f1097b5b051410ba" translate="yes" xml:space="preserve">
          <source>Jekyll traverses your site looking for files to process. Any files with &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML front matter&lt;/a&gt; are subject to processing. For each of these files, Jekyll makes a variety of data available via the &lt;a href=&quot;https://github.com/Shopify/liquid/wiki&quot;&gt;Liquid templating system&lt;/a&gt;. The following is a reference of the available data.</source>
          <target state="translated">Jekyll遍历您的站点以查找要处理的文件。具有&lt;a href=&quot;../frontmatter/index&quot;&gt;YAML优先事项的&lt;/a&gt;任何文件都将受到处理。对于这些文件中的每一个，Jekyll都可以通过&lt;a href=&quot;https://github.com/Shopify/liquid/wiki&quot;&gt;Liquid模板系统&lt;/a&gt;获得各种数据。以下是可用数据的参考。</target>
        </trans-unit>
        <trans-unit id="7b80e53a19b7c75cad65aedd5f21d9647b0b06f4" translate="yes" xml:space="preserve">
          <source>Jekyll treats these files the same as a regular page, in that the output file will be placed in the same directory that it came from. For instance, if you have a file named &lt;code&gt;css/styles.scss&lt;/code&gt; in your site&amp;rsquo;s source folder, Jekyll will process it and put it in your site&amp;rsquo;s destination folder under &lt;code&gt;css/styles.css&lt;/code&gt;.</source>
          <target state="translated">Jekyll将这些文件与常规页面一样对待，因为输出文件将放置在与原始文件相同的目录中。例如，如果您的站点的源文件夹中有一个名为 &lt;code&gt;css/styles.scss&lt;/code&gt; 的文件，Jekyll将对其进行处理并将其放在站点的目标文件夹中 &lt;code&gt;css/styles.css&lt;/code&gt; 下。</target>
        </trans-unit>
        <trans-unit id="f73d83df7e9a0ece6ec12b1b50556d49a27f48ff" translate="yes" xml:space="preserve">
          <source>Jekyll uses the &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt; templating language to process templates.</source>
          <target state="translated">Jekyll使用&lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt;模板语言来处理模板。</target>
        </trans-unit>
        <trans-unit id="8bc77ad887f5021280263c947d7e9ba538afd6ac" translate="yes" xml:space="preserve">
          <source>Jekyll uses the &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt; templating language to process templates. All of the standard Liquid &lt;a href=&quot;https://shopify.github.io/liquid/tags/control-flow/&quot;&gt;tags&lt;/a&gt; and &lt;a href=&quot;https://shopify.github.io/liquid/filters/abs/&quot;&gt;filters&lt;/a&gt; are supported. To make common tasks easier, Jekyll even adds a few handy filters and tags of its own, all of which you can find on this page. Jekyll even lets you come up with your own tags via plugins.</source>
          <target state="translated">Jekyll使用&lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt;模板语言来处理模板。支持所有标准的Liquid &lt;a href=&quot;https://shopify.github.io/liquid/tags/control-flow/&quot;&gt;标签&lt;/a&gt;和&lt;a href=&quot;https://shopify.github.io/liquid/filters/abs/&quot;&gt;过滤器&lt;/a&gt;。为了简化常见任务，Jekyll甚至添加了一些方便的过滤器和标签，您可以在此页面上找到所有这些过滤器和标签。Jekyll甚至允许您通过插件提出自己的标签。</target>
        </trans-unit>
        <trans-unit id="98c1feeb240ca9f85a5898de8492c75acc86d3be" translate="yes" xml:space="preserve">
          <source>Jekyll uses the &lt;code&gt;listen&lt;/code&gt; gem to watch for changes when the &lt;code&gt;--watch&lt;/code&gt; switch is specified during a build or serve. While &lt;code&gt;listen&lt;/code&gt; has built-in support for UNIX systems, it may require an extra gem for compatibility with Windows.</source>
          <target state="translated">当在构建或服务期间指定 &lt;code&gt;--watch&lt;/code&gt; 开关时，Jekyll使用 &lt;code&gt;listen&lt;/code&gt; gem监视更改。尽管 &lt;code&gt;listen&lt;/code&gt; 具有对UNIX系统的内置支持，但可能需要额外的gem才能与Windows兼容。</target>
        </trans-unit>
        <trans-unit id="9dc8584b9d061d2a48af50a6e913d9bc51afb984" translate="yes" xml:space="preserve">
          <source>Jekyll will apply all of the configuration settings you specify in the &lt;code&gt;defaults&lt;/code&gt; section of your &lt;code&gt;_config.yml&lt;/code&gt; file. However, you can choose to override settings from other scope/values pair by specifying a more specific path for the scope.</source>
          <target state="translated">Jekyll将应用您在 &lt;code&gt;_config.yml&lt;/code&gt; 文件的 &lt;code&gt;defaults&lt;/code&gt; 部分中指定的所有配置设置。但是，您可以通过为范围指定更具体的路径来选择从其他范围/值对中覆盖设置。</target>
        </trans-unit>
        <trans-unit id="a11450ec20fa2068858e6fb5a90eb196fc059da5" translate="yes" xml:space="preserve">
          <source>Jekyll will apply all of the configuration settings you specify in the &lt;code&gt;defaults&lt;/code&gt; section of your &lt;code&gt;_config.yml&lt;/code&gt; file. You can choose to override settings from other scope/values pair by specifying a more specific path for the scope.</source>
          <target state="translated">Jekyll将应用您在 &lt;code&gt;_config.yml&lt;/code&gt; 文件的 &lt;code&gt;defaults&lt;/code&gt; 部分中指定的所有配置设置。您可以通过为范围指定更具体的路径来选择从其他范围/值对中覆盖设置。</target>
        </trans-unit>
        <trans-unit id="ec5df39ca8b217af9fdeedd6a19aae0269168d48" translate="yes" xml:space="preserve">
          <source>Jekyll will automatically require all whitelisted &lt;code&gt;runtime_dependencies&lt;/code&gt; of your theme-gem even if they&amp;rsquo;re not explicitly included under the &lt;code&gt;plugins&lt;/code&gt; array in the site&amp;rsquo;s config file. (Note: whitelisting is only required when building or serving with the &lt;code&gt;--safe&lt;/code&gt; option.)</source>
          <target state="translated">Jekyll将自动要求您主题数据库中所有列入白名单的 &lt;code&gt;runtime_dependencies&lt;/code&gt; ，即使它们未明确包含在站点的配置文件中的 &lt;code&gt;plugins&lt;/code&gt; 数组下也是如此。（注意：仅当使用 &lt;code&gt;--safe&lt;/code&gt; 选项进行构建或使用时，才需要白名单。）</target>
        </trans-unit>
        <trans-unit id="cf1948f6a6c35c37faab5e8a2daf5dafc8a832c4" translate="yes" xml:space="preserve">
          <source>Jekyll will look first to your site&amp;rsquo;s content before looking to the theme&amp;rsquo;s defaults for any requested file in the following folders:</source>
          <target state="translated">Jekyll将首先查看您网站的内容，然后查看以下文件夹中任何请求的文件的主题默认值：</target>
        </trans-unit>
        <trans-unit id="15cdb1085a422b73cafd0b3daa9e2568ffd30a22" translate="yes" xml:space="preserve">
          <source>Jekyll will look for the referenced file (in this case, &lt;code&gt;footer.html&lt;/code&gt;) in the &lt;code&gt;_includes&lt;/code&gt; directory at the root of your source directory and insert its contents.</source>
          <target state="translated">Jekyll将在源目录根目录的 &lt;code&gt;_includes&lt;/code&gt; 目录中查找引用的文件（在本例中为 &lt;code&gt;footer.html&lt;/code&gt; ），然后插入其内容。</target>
        </trans-unit>
        <trans-unit id="cbb8af1f0a6b9e0a078358fca37d17f598256363" translate="yes" xml:space="preserve">
          <source>Jekyll will only convert files that have a YAML header at the top, even for converters you add using a plugin.</source>
          <target state="translated">Jekyll只会转换顶部有YAML头的文件,即使是你使用插件添加的转换器。</target>
        </trans-unit>
        <trans-unit id="6e07a9c1e541edebe0ee5b20ad852eafd9ece454" translate="yes" xml:space="preserve">
          <source>Jekyll will read-in a &lt;code&gt;_config.yml&lt;/code&gt; at the root of the theme-gem and merge its data into the site&amp;rsquo;s existing configuration data.</source>
          <target state="translated">Jekyll将在theme-gem的根目录中读取 &lt;code&gt;_config.yml&lt;/code&gt; ，并将其数据合并到站点的现有配置数据中。</target>
        </trans-unit>
        <trans-unit id="3765b73abf718ce5256390fa98fe5c83c8d821ec" translate="yes" xml:space="preserve">
          <source>Jekyll&amp;rsquo;s default settings cannot be overridden by a theme-config. That &lt;em&gt;ball is still in the user&amp;rsquo;s court.&lt;/em&gt;</source>
          <target state="translated">Jekyll的默认设置不能被主题配置覆盖。那个&lt;em&gt;球仍然在使用者的球场上。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c27dc79dfcd97a956c12f99f1262ad706cbd59b" translate="yes" xml:space="preserve">
          <source>Jekyll&amp;rsquo;s growing use is producing a wide variety of tutorials, frameworks, extensions, examples, and other resources that can be very helpful. Below is a collection of links to some of the most popular Jekyll resources.</source>
          <target state="translated">Jekyll的使用越来越广泛，正在产生各种各样的教程，框架，扩展，示例以及其他非常有用的资源。以下是一些最受欢迎的Jekyll资源链接的集合。</target>
        </trans-unit>
        <trans-unit id="87040c2c2ca8dd7dd1f199bb3b01450f1fd6e925" translate="yes" xml:space="preserve">
          <source>Jekyll-Admin for Rails</source>
          <target state="translated">Jekyll-Admin for Rails</target>
        </trans-unit>
        <trans-unit id="2d83d9002b08fdc2cc164e439677e784c1a043ff" translate="yes" xml:space="preserve">
          <source>Jekyllconf</source>
          <target state="translated">Jekyllconf</target>
        </trans-unit>
        <trans-unit id="6bdf1cf399ad963e0a54c8aa9b93779421ed5621" translate="yes" xml:space="preserve">
          <source>Just about any traditional web hosting provider will let you upload files to their servers over FTP. To upload a Jekyll site to a web host using FTP, simply run the &lt;code&gt;jekyll build&lt;/code&gt; command and copy the contents of the generated &lt;code&gt;_site&lt;/code&gt; folder to the root folder of your hosting account. This is most likely to be the &lt;code&gt;httpdocs&lt;/code&gt; or &lt;code&gt;public_html&lt;/code&gt; folder on most hosting providers.</source>
          <target state="translated">几乎所有传统的Web托管提供商都将允许您通过FTP将文件上传到其服务器。要使用FTP将Jekyll站点上传到Web主机，只需运行 &lt;code&gt;jekyll build&lt;/code&gt; 命令并将生成的 &lt;code&gt;_site&lt;/code&gt; 文件夹的内容复制到托管帐户的根文件夹。在大多数托管服务提供商上，这很可能是 &lt;code&gt;httpdocs&lt;/code&gt; 或 &lt;code&gt;public_html&lt;/code&gt; 文件夹。</target>
        </trans-unit>
        <trans-unit id="2ed5147f04a311fb5f5d747f6b09941b7fc9a782" translate="yes" xml:space="preserve">
          <source>Just about every web server configuration you come across will look for an HTML file called &lt;code&gt;index.html&lt;/code&gt; (by convention) in the site&amp;rsquo;s root folder and display that as the homepage. Unless the web server you&amp;rsquo;re using is configured to look for some different filename as the default, this file will turn into the homepage of your Jekyll-generated site.</source>
          <target state="translated">您遇到的几乎每种Web服务器配置都将在站点的根文件夹中查找一个名为 &lt;code&gt;index.html&lt;/code&gt; （按惯例）的HTML文件，并将其显示为主页。除非将您正在使用的Web服务器配置为寻找其他不同的文件名作为默认文件名，否则该文件将成为Jekyll生成的网站的主页。</target>
        </trans-unit>
        <trans-unit id="42cb84d3edc32b5b2f4400649263390331b44d18" translate="yes" xml:space="preserve">
          <source>Just add the following line:</source>
          <target state="translated">只需添加以下一行。</target>
        </trans-unit>
        <trans-unit id="0402a4371d48c94d8742dfa8a73a7366e817e0d9" translate="yes" xml:space="preserve">
          <source>Just after site reset</source>
          <target state="translated">就在网站重置后</target>
        </trans-unit>
        <trans-unit id="433a432fd1262d35a30183d9f6075570af8bc954" translate="yes" xml:space="preserve">
          <source>Just after the site initializes, but before setup &amp;amp; render. Good for modifying the configuration of the site.</source>
          <target state="translated">在网站初始化之后，但在设置和渲染之前。适用于修改站点的配置。</target>
        </trans-unit>
        <trans-unit id="c9895275f3f5f6ebb98bbd5981f6e9aa63e7fc27" translate="yes" xml:space="preserve">
          <source>Just after the site initializes. Good for modifying the configuration of the site. Triggered once per build / serve session</source>
          <target state="translated">就在网站初始化后。适用于修改网站的配置。每次构建/服务会话触发一次</target>
        </trans-unit>
        <trans-unit id="322810c9c79065292b6a1f1ff44477b5d9415eb1" translate="yes" xml:space="preserve">
          <source>Just after the site resets during regeneration</source>
          <target state="translated">就在网站重设后的再生过程中</target>
        </trans-unit>
        <trans-unit id="ebb6b1e30faadd702ac129f2183d1aa471da18d8" translate="yes" xml:space="preserve">
          <source>Just before rendering a document</source>
          <target state="translated">就在渲染文档之前</target>
        </trans-unit>
        <trans-unit id="1a8117dd57c47c84d1c161dd2ea8fdef67df5f30" translate="yes" xml:space="preserve">
          <source>Just before rendering a page</source>
          <target state="translated">就在渲染一个页面之前</target>
        </trans-unit>
        <trans-unit id="832cf101757761bef14d4d8fdba336cebe396b37" translate="yes" xml:space="preserve">
          <source>Just before rendering a post</source>
          <target state="translated">就在渲染一个职位之前</target>
        </trans-unit>
        <trans-unit id="46e54c34b1deecaf4f770c41a5ff5f0dec8680f3" translate="yes" xml:space="preserve">
          <source>Just before rendering the whole site</source>
          <target state="translated">就在渲染整个网站之前</target>
        </trans-unit>
        <trans-unit id="dc920374c836b8aaf27b60247c0c070b7b18bb10" translate="yes" xml:space="preserve">
          <source>Just like posts you&amp;rsquo;ll need to create a layout for authors.</source>
          <target state="translated">就像帖子一样，您需要为作者创建一个布局。</target>
        </trans-unit>
        <trans-unit id="5c6dc8d54be2031b84b4dead0478976ff80780cc" translate="yes" xml:space="preserve">
          <source>Keep building Jekyll sites!</source>
          <target state="translated">继续建设Jekyll网站!</target>
        </trans-unit>
        <trans-unit id="385ea57ce0708a624c199f8c292a3b2a72577a09" translate="yes" xml:space="preserve">
          <source>KeyCDN</source>
          <target state="translated">KeyCDN</target>
        </trans-unit>
        <trans-unit id="01af7c46420acf792e3b43039584478ec7774e5b" translate="yes" xml:space="preserve">
          <source>Kickster</source>
          <target state="translated">Kickster</target>
        </trans-unit>
        <trans-unit id="2918c8c92bc729b976aacffa8804fee11f217d81" translate="yes" xml:space="preserve">
          <source>Kickster provides a basic Jekyll project setup packed with web best practises and useful optimization tools increasing your overall project quality. Kickster ships with automated and worry-free deployment scripts for GitHub Pages.</source>
          <target state="translated">Kickster 提供了一个基本的 Jekyll 项目设置,其中包含了网络最佳实践和有用的优化工具,提高了您的整体项目质量。Kickster为GitHub页面提供了自动和无忧的部署脚本。</target>
        </trans-unit>
        <trans-unit id="c39fcedccb3db769e93cb4895114218594eb06bd" translate="yes" xml:space="preserve">
          <source>Kramdown</source>
          <target state="translated">Kramdown</target>
        </trans-unit>
        <trans-unit id="67169c9661e2d73dbf62f40570b382c8e40debd7" translate="yes" xml:space="preserve">
          <source>Kramdown comes with optional support for LaTeX to PNG rendering via &lt;a href=&quot;https://www.mathjax.org&quot;&gt;MathJax&lt;/a&gt; within math blocks. See the Kramdown documentation on &lt;a href=&quot;http://kramdown.gettalong.org/syntax.html#math-blocks&quot;&gt;math blocks&lt;/a&gt; and &lt;a href=&quot;http://kramdown.gettalong.org/converter/html.html#math-support&quot;&gt;math support&lt;/a&gt; for more details. MathJax requires you to include JavaScript or CSS to render the LaTeX, e.g.</source>
          <target state="translated">Kramdown附带通过Math 块中的&lt;a href=&quot;https://www.mathjax.org&quot;&gt;MathJax&lt;/a&gt;对LaTeX到PNG渲染的可选支持。有关更多详细信息，请参见有关&lt;a href=&quot;http://kramdown.gettalong.org/syntax.html#math-blocks&quot;&gt;数学块&lt;/a&gt;和&lt;a href=&quot;http://kramdown.gettalong.org/converter/html.html#math-support&quot;&gt;数学支持&lt;/a&gt;的Kramdown文档。MathJax要求您包含JavaScript或CSS来呈现LaTeX，例如</target>
        </trans-unit>
        <trans-unit id="9532190afe41c9d105961ea33c3b4e933a4c2659" translate="yes" xml:space="preserve">
          <source>Kramdown is the default Markdown renderer for Jekyll. Below is a list of the currently supported options:</source>
          <target state="translated">Kramdown 是 Jekyll 的默认 Markdown 渲染器。以下是当前支持的选项列表。</target>
        </trans-unit>
        <trans-unit id="93824e5ca2f8079177705f22fa746e46881b0c07" translate="yes" xml:space="preserve">
          <source>Label of the containing collection.</source>
          <target state="translated">包含收藏品的标签。</target>
        </trans-unit>
        <trans-unit id="972ad8d8a50397ba8c02433ed8f048eeb4074b85" translate="yes" xml:space="preserve">
          <source>Layout</source>
          <target state="translated">Layout</target>
        </trans-unit>
        <trans-unit id="73f83dd05a0b36c11a75d68e21be4555e7a6894c" translate="yes" xml:space="preserve">
          <source>Layout inheritance is useful when you want to add something to an existing layout for a portion of documents on your site. A common example of this is blog posts, you might want a post to display the date and author but otherwise be identical to your base layout.</source>
          <target state="translated">当您想为网站上的部分文档添加一些现有布局时,布局继承是非常有用的。一个常见的例子是博客文章,你可能想让一篇文章显示日期和作者,但其他方面与你的基本布局相同。</target>
        </trans-unit>
        <trans-unit id="77918f5f64d8b83f4bc213c3624d8dabb59f643a" translate="yes" xml:space="preserve">
          <source>Layout metadata</source>
          <target state="translated">布局元数据</target>
        </trans-unit>
        <trans-unit id="8faba99c8261229414474311be76d70eda70ff99" translate="yes" xml:space="preserve">
          <source>Layout specific information + the &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt;. Custom variables set via front matter in layouts will be available here.</source>
          <target state="translated">布置具体的信息+&lt;a href=&quot;../front-matter/index&quot;&gt;头等问题&lt;/a&gt;。通过布局中的前端问题设置的自定义变量将在此处提供。</target>
        </trans-unit>
        <trans-unit id="93d4f5bc1ef1791e5c42ae89bfcf3a70ede43c95" translate="yes" xml:space="preserve">
          <source>Layout specific information + the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML front matter&lt;/a&gt;. Custom variables set via the YAML Front Matter in layouts will be available here.</source>
          <target state="translated">布局特定的信息+ &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML的前题&lt;/a&gt;。通过YAML前端布局中的布局设置的自定义变量将在此处提供。</target>
        </trans-unit>
        <trans-unit id="28e6f54e33a1151bfd4c7cc4affd14df3525f2db" translate="yes" xml:space="preserve">
          <source>Layouts</source>
          <target state="translated">Layouts</target>
        </trans-unit>
        <trans-unit id="dd51e21ca720f36618c7c70041ff580637c16e54" translate="yes" xml:space="preserve">
          <source>Layouts Directory</source>
          <target state="translated">布局目录</target>
        </trans-unit>
        <trans-unit id="f97f89c886ff0080aba4f2ac74175d1a7897953a" translate="yes" xml:space="preserve">
          <source>Layouts and includes</source>
          <target state="translated">布局和包括</target>
        </trans-unit>
        <trans-unit id="5ee30430e49e94fd3d54e1f824556844e59ca308" translate="yes" xml:space="preserve">
          <source>Layouts are templates that wrap around your content. They allow you to have the source code for your template in one place so you don&amp;rsquo;t have to repeat things like your navigation and footer on every page.</source>
          <target state="translated">布局是环绕您的内容的模板。它们使您可以将模板的源代码放在一个位置，因此您不必在每个页面上都重复导航和页脚之类的内容。</target>
        </trans-unit>
        <trans-unit id="77c006d93ddb7079eb7692fe36938e82d947f258" translate="yes" xml:space="preserve">
          <source>Layouts live in the &lt;code&gt;_layouts&lt;/code&gt; directory. The convention is to have a base template called &lt;code&gt;default.html&lt;/code&gt; and have other layouts &lt;a href=&quot;#inheritance&quot;&gt;inherit&lt;/a&gt; from this as needed.</source>
          <target state="translated">布局位于 &lt;code&gt;_layouts&lt;/code&gt; 目录中。约定是要有一个名为 &lt;code&gt;default.html&lt;/code&gt; 的基本模板，并根据需要从该模板&lt;a href=&quot;#inheritance&quot;&gt;继承&lt;/a&gt;其他布局。</target>
        </trans-unit>
        <trans-unit id="90cd4ba453bd97cb192e5581bdc2c56b6e0edc1c" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s add a page which lists all the authors on the site. Jekyll makes the collection available at &lt;code&gt;site.authors&lt;/code&gt;.</source>
          <target state="translated">让我们添加一个页面，其中列出了网站上的所有作者。Jekyll在 &lt;code&gt;site.authors&lt;/code&gt; 上提供了该收藏集。</target>
        </trans-unit>
        <trans-unit id="30f3bfbb611eb84ffdf89a3fdbe9fd14107cd1dc" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s add your first file. Create &lt;code&gt;index.html&lt;/code&gt; in the root with the following content:</source>
          <target state="translated">让我们添加您的第一个文件。在根目录中创建具有以下内容的 &lt;code&gt;index.html&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ff687a0fcd51d31c0ccfaa5ecb055e83268a23b3" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s change the &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; on your site to populate using front matter:</source>
          <target state="translated">让我们将您网站上的 &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; 更改为使用前置内容填充：</target>
        </trans-unit>
        <trans-unit id="2384fd15aa145052f5176535d4f9d2bd6d0ba561" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s list the posts an author has published on their page. To do this you need to match the author &lt;code&gt;short_name&lt;/code&gt; to the post &lt;code&gt;author&lt;/code&gt;. You use this to filter the posts by author.</source>
          <target state="translated">让我们列出作者在其页面上发布的帖子。为此，您需要将作者 &lt;code&gt;short_name&lt;/code&gt; 与帖子 &lt;code&gt;author&lt;/code&gt; 匹配。您可以使用它按作者过滤帖子。</target>
        </trans-unit>
        <trans-unit id="aac0e752d8e90d8b9ab73d572393414c2c492535" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at fleshing out authors so each author has their own page with a blurb and the posts they&amp;rsquo;ve published.</source>
          <target state="translated">让我们看一下充实的作者，以便每个作者都有自己的带有简介的页​​面和他们发表的帖子。</target>
        </trans-unit>
        <trans-unit id="3d59965152acf6883cee252b37209236be3cceb2" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say that you want to add a default layout to all pages and posts in your site. You would add this to your &lt;code&gt;_config.yml&lt;/code&gt; file:</source>
          <target state="translated">假设您要向网站中的所有页面和帖子添加默认布局。您可以将其添加到 &lt;code&gt;_config.yml&lt;/code&gt; 文件中：</target>
        </trans-unit>
        <trans-unit id="70555ee6c1f592b66362f61436939844b36c5e63" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say, for a second example, you want to override Minima&amp;rsquo;s footer. In your Jekyll site, create an &lt;code&gt;_includes&lt;/code&gt; folder and add a file in it called &lt;code&gt;footer.html&lt;/code&gt;. Jekyll will now use your site&amp;rsquo;s &lt;code&gt;footer.html&lt;/code&gt; file instead of the &lt;code&gt;footer.html&lt;/code&gt; file from the Minima theme gem.</source>
          <target state="translated">假设有第二个示例，您想覆盖Minima的页脚。在您的Jekyll网站上，创建 &lt;code&gt;_includes&lt;/code&gt; 文件夹并在其中添加名为 &lt;code&gt;footer.html&lt;/code&gt; 的文件。Jekyll现在将使用您站点的 &lt;code&gt;footer.html&lt;/code&gt; 文件，而不是Minima主题gem 中的 &lt;code&gt;footer.html&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="b11ef11b9735a85f062e52730ac1e7b73da06a98" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take this a step further and highlight the current page in the navigation.</source>
          <target state="translated">让我们更进一步，并在导航中突出显示当前页面。</target>
        </trans-unit>
        <trans-unit id="c58bd40e95aef48eee67a645bb4f78e1797cdf10" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT license.</source>
          <target state="translated">根据麻省理工学院许可证授权。</target>
        </trans-unit>
        <trans-unit id="670ce9fa318e5a320760111541faff1035dbfbff" translate="yes" xml:space="preserve">
          <source>Limit the number of posts to parse and publish.</source>
          <target state="translated">限制解析和发布的帖子数量。</target>
        </trans-unit>
        <trans-unit id="d08aaa54e89dc5b36c7da4c9d528008df5d04f3b" translate="yes" xml:space="preserve">
          <source>Line numbers</source>
          <target state="translated">行数</target>
        </trans-unit>
        <trans-unit id="c996994da4b864e5a31a81359f1f093458f633aa" translate="yes" xml:space="preserve">
          <source>Link to authors page</source>
          <target state="translated">链接到作者页面</target>
        </trans-unit>
        <trans-unit id="a8482def1ff83728e1fb9a6d899311c4dbb6cd11" translate="yes" xml:space="preserve">
          <source>Linking to a PDF for readers to download:</source>
          <target state="translated">链接到PDF格式,供读者下载。</target>
        </trans-unit>
        <trans-unit id="d20b0cfa02620cff8357fb318e9cd62b00fd373f" translate="yes" xml:space="preserve">
          <source>Linking to pages</source>
          <target state="translated">链接到网页</target>
        </trans-unit>
        <trans-unit id="afd2dc5f7c324f512f99a7734c0386d9016751a1" translate="yes" xml:space="preserve">
          <source>Linking to pages, collections and posts (the new and improved way)</source>
          <target state="translated">链接到页面、收藏和帖子(新的改进方式)。</target>
        </trans-unit>
        <trans-unit id="8da831e8f499f7d7a56c6d3446756c24c1fc9859" translate="yes" xml:space="preserve">
          <source>Linking to posts</source>
          <target state="translated">与员额的链接</target>
        </trans-unit>
        <trans-unit id="3def7d920e411866077e94461efbacc52f7aeb8e" translate="yes" xml:space="preserve">
          <source>Linking to posts (the old way)</source>
          <target state="translated">链接到帖子(老办法</target>
        </trans-unit>
        <trans-unit id="6379e034bab2e3be9e7c39a0b85a6898660412a9" translate="yes" xml:space="preserve">
          <source>Linking without regard to permalink styles</source>
          <target state="translated">不考虑permalink风格的链接</target>
        </trans-unit>
        <trans-unit id="014bcd654c60d5250fad2123b073b9c0ac3340f6" translate="yes" xml:space="preserve">
          <source>Links</source>
          <target state="translated">Links</target>
        </trans-unit>
        <trans-unit id="4ad3e2141b2afe3691f32c2af3fc5cc3653cd453" translate="yes" xml:space="preserve">
          <source>Liquid</source>
          <target state="translated">Liquid</target>
        </trans-unit>
        <trans-unit id="7f26ed43583414deba0ddd1befb4adadedbfeb84" translate="yes" xml:space="preserve">
          <source>Liquid Attributes</source>
          <target state="translated">液体属性</target>
        </trans-unit>
        <trans-unit id="5ad177e08ab39d6276f0d8860a328284e1ffcfa3" translate="yes" xml:space="preserve">
          <source>Liquid Attributes Available</source>
          <target state="translated">可用的液体属性</target>
        </trans-unit>
        <trans-unit id="3ed0d7e900ff05c6937befa127ec4d2eb3452cab" translate="yes" xml:space="preserve">
          <source>Liquid Filters</source>
          <target state="translated">液体过滤器</target>
        </trans-unit>
        <trans-unit id="e0745becb677ab37dbf8043a9a47294186d7f108" translate="yes" xml:space="preserve">
          <source>Liquid Options</source>
          <target state="translated">液体期权</target>
        </trans-unit>
        <trans-unit id="ad13a6aea2f060b03c1bbfcd3acb3de84c4ad8ef" translate="yes" xml:space="preserve">
          <source>Liquid filters</source>
          <target state="translated">液体过滤器</target>
        </trans-unit>
        <trans-unit id="dffe002b068673f77763dea3bb55e93cecb9293e" translate="yes" xml:space="preserve">
          <source>Liquid is where Jekyll starts to get more interesting. Liquid is a templating language which has three main parts: &lt;a href=&quot;#objects&quot;&gt;objects&lt;/a&gt;, &lt;a href=&quot;#tags&quot;&gt;tags&lt;/a&gt; and &lt;a href=&quot;#filters&quot;&gt;filters&lt;/a&gt;.</source>
          <target state="translated">液体是Jekyll开始变得更加有趣的地方。Liquid是一种模板语言，它包含三个主要部分：&lt;a href=&quot;#objects&quot;&gt;对象&lt;/a&gt;，&lt;a href=&quot;#tags&quot;&gt;标签&lt;/a&gt;和&lt;a href=&quot;#filters&quot;&gt;过滤器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5798e1e1a9a90ea8817c634157e8841ea70633e3" translate="yes" xml:space="preserve">
          <source>Liquid version 2.0 seems to break the use of &lt;code&gt;{{&lt;/code&gt; in templates. Unlike previous versions, using &lt;code&gt;{{&lt;/code&gt; in 2.0 triggers the following error:</source>
          <target state="translated">Liquid版本2.0似乎打破了模板中 &lt;code&gt;{{&lt;/code&gt; 的使用。与以前的版本不同，在2.0中使用 &lt;code&gt;{{&lt;/code&gt; 会触发以下错误：</target>
        </trans-unit>
        <trans-unit id="e0802e62c8890a9ef2c3f7f7bbff3ab1245c9e20" translate="yes" xml:space="preserve">
          <source>Liquid&amp;rsquo;s response to errors can be configured by setting &lt;code&gt;error_mode&lt;/code&gt;. The options are</source>
          <target state="translated">可以通过设置 &lt;code&gt;error_mode&lt;/code&gt; 来配置Liquid对错误的响应。选项是</target>
        </trans-unit>
        <trans-unit id="d7fe2c462dac24551a2cf9d6f5b82f81667cd59f" translate="yes" xml:space="preserve">
          <source>List author&amp;rsquo;s posts</source>
          <target state="translated">列出作者的帖子</target>
        </trans-unit>
        <trans-unit id="f055c3d931530bd151bf3ebea25d48d45d55d6d2" translate="yes" xml:space="preserve">
          <source>List posts</source>
          <target state="translated">员额清单</target>
        </trans-unit>
        <trans-unit id="eeb4bd88aaf858f919bb23f92e4f32533740b378" translate="yes" xml:space="preserve">
          <source>Listen at the given hostname.</source>
          <target state="translated">在给定的主机名处进行监听。</target>
        </trans-unit>
        <trans-unit id="b067bb7eddee644f3059b4dfb835e57469c1fc50" translate="yes" xml:space="preserve">
          <source>Listen on the given port.</source>
          <target state="translated">在给定的端口上进行监听。</target>
        </trans-unit>
        <trans-unit id="ebf07c506e526cbf87dcd9a845f15f84fbf346f2" translate="yes" xml:space="preserve">
          <source>Load up &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; and check that the active link in the navigation is green.</source>
          <target state="translated">加载&lt;a href=&quot;http://localhost:4000&quot;&gt;http：// localhost：4000&lt;/a&gt;并检查导航中的活动链接是否为绿色。</target>
        </trans-unit>
        <trans-unit id="6846bc143055702bf80aaffbe9d2e5ab222ed854" translate="yes" xml:space="preserve">
          <source>Local Install</source>
          <target state="translated">本地安装</target>
        </trans-unit>
        <trans-unit id="4406a849f645af35a2c07cd3e59f1514029789e7" translate="yes" xml:space="preserve">
          <source>Log in at &lt;a href=&quot;https://buddy.works&quot;&gt;https://buddy.works&lt;/a&gt; with your GitHub/Bitbucket account or email</source>
          <target state="translated">使用您的GitHub / Bitbucket帐户或电子邮件登录&lt;a href=&quot;https://buddy.works&quot;&gt;https://buddy.works&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c25dfe9b505b96331b509d1f1094d7a8bbbc7da" translate="yes" xml:space="preserve">
          <source>Logic to do the content conversion. Takes one argument: the raw content of the file (without YAML Front Matter). Must return a String.</source>
          <target state="translated">做内容转换的逻辑。需要一个参数:文件的原始内容(不含YAML前缀)。必须返回一个字符串。</target>
        </trans-unit>
        <trans-unit id="4f5283eb1f5b01265dfd539e401f6ed9ad13e131" translate="yes" xml:space="preserve">
          <source>Logic to do the content conversion. Takes one argument: the raw content of the file (without front matter). Must return a String.</source>
          <target state="translated">逻辑来做内容转换。需要一个参数:文件的原始内容(不含前面的内容)。必须返回一个字符串。</target>
        </trans-unit>
        <trans-unit id="2f416e634be06ac21d4b27f348175e29f30c0a9a" translate="yes" xml:space="preserve">
          <source>Make directory path values in configuration keys like `plugins_dir` relative to the current working directory, not the site source.</source>
          <target state="translated">使配置键中的目录路径值如`plugins_dir`相对于当前的工作目录,而不是站点源。</target>
        </trans-unit>
        <trans-unit id="0d1f3dd0db67be21ebd2eb0848251f87de05b382" translate="yes" xml:space="preserve">
          <source>Make it executable (&lt;code&gt;chmod +x&lt;/code&gt;)</source>
          <target state="translated">使其可执行（ &lt;code&gt;chmod +x&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="fbe74d6559d84810cabb4523111374acebd2a489" translate="yes" xml:space="preserve">
          <source>Make sure all your packages and repositories are up to date. Open a new Command Prompt or Powershell window and type &lt;code&gt;bash&lt;/code&gt;.</source>
          <target state="translated">确保所有软件包和存储库都是最新的。打开一个新的命令提示符或Powershell窗口，然后键入 &lt;code&gt;bash&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98ed2e07c71b746bf0180e8aa24d5bd3d3c109b3" translate="yes" xml:space="preserve">
          <source>Manual Deployment</source>
          <target state="translated">手动部署</target>
        </trans-unit>
        <trans-unit id="07845da9bbd18384477ef867d7458a8ae623a38e" translate="yes" xml:space="preserve">
          <source>Manually</source>
          <target state="translated">Manually</target>
        </trans-unit>
        <trans-unit id="a5c619ea526efa335655e8e040b494049726275d" translate="yes" xml:space="preserve">
          <source>Manually Ordering Documents</source>
          <target state="translated">手动订购文件</target>
        </trans-unit>
        <trans-unit id="642c11c1d6e1b6df7dad686b9cc288e67e12904c" translate="yes" xml:space="preserve">
          <source>Markdown Options</source>
          <target state="translated">标记选项</target>
        </trans-unit>
        <trans-unit id="b09e94d8992bb71ef39f1a828432c25aaf743e21" translate="yes" xml:space="preserve">
          <source>Markup Problems</source>
          <target state="translated">标记问题</target>
        </trans-unit>
        <trans-unit id="28d6fb2c35c1d1c6a33c9e84a06a5d0a46922b5c" translate="yes" xml:space="preserve">
          <source>Math Support</source>
          <target state="translated">数学支持</target>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="2adf3b7e76213053550011d5190ced3aeb722895" translate="yes" xml:space="preserve">
          <source>Minimum/Maximum delay before automatically reloading page.</source>
          <target state="translated">自动重新加载页面前的最小/最大延迟。</target>
        </trans-unit>
        <trans-unit id="0b71350dd34e7bd8df3677854774845adbf253c5" translate="yes" xml:space="preserve">
          <source>Minute of the hour from the post&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter. (00..59)</source>
          <target state="translated">从发布 &lt;code&gt;date&lt;/code&gt; 的小时数。（00..59）</target>
        </trans-unit>
        <trans-unit id="cebaf24652aa816860b5113dfe9dc8588aa3ae90" translate="yes" xml:space="preserve">
          <source>Minute of the hour from the post's &lt;code&gt;date&lt;/code&gt; front matter. (00..59)</source>
          <target state="translated">从发布 &lt;code&gt;date&lt;/code&gt; 的小时数。（00..59）</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="89597b1d1e65f5625f359ebced3060dec2d5c149" translate="yes" xml:space="preserve">
          <source>Month from the post&amp;rsquo;s filename. (01..12) May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter.</source>
          <target state="translated">帖子名称中的月份。（01..12）可以通过文档的 &lt;code&gt;date&lt;/code&gt; 前期事项覆盖。</target>
        </trans-unit>
        <trans-unit id="ef9455fcbf8b2c60f67ca82fa6632a99edee00cb" translate="yes" xml:space="preserve">
          <source>Month from the post's filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; YAML front matter</source>
          <target state="translated">帖子名称中的月份。可以通过文档的 &lt;code&gt;date&lt;/code&gt; YAML优先事项覆盖</target>
        </trans-unit>
        <trans-unit id="7bc1785779e50c8f50c295d478904fe761c00108" translate="yes" xml:space="preserve">
          <source>Month without leading zeros from the post&amp;rsquo;s filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter.</source>
          <target state="translated">帖子文件名中不带前导零的月份。可以通过文档的 &lt;code&gt;date&lt;/code&gt; 前值覆盖。</target>
        </trans-unit>
        <trans-unit id="8de2bd51313c9e801e45ac73bea8a590465b26c8" translate="yes" xml:space="preserve">
          <source>Month without leading zeros from the post's filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; YAML front matter</source>
          <target state="translated">帖子文件名中不带前导零的月份。可以通过文档的 &lt;code&gt;date&lt;/code&gt; YAML优先事项覆盖</target>
        </trans-unit>
        <trans-unit id="f7fd190a4337f66473d351957f69ce547933ce36" translate="yes" xml:space="preserve">
          <source>More fine-grained control over documents being written to disk can be exercised by setting &lt;code&gt;published: false&lt;/code&gt; (&lt;em&gt;&lt;code&gt;true&lt;/code&gt; by default&lt;/em&gt;) in the document's front matter.</source>
          <target state="translated">可以&lt;em&gt;通过&lt;/em&gt;在文档的最前面设置 &lt;code&gt;published: false&lt;/code&gt; （&lt;em&gt;默认为&lt;/em&gt;&lt;em&gt; &lt;code&gt;true&lt;/code&gt; &lt;/em&gt;）来对写入磁盘的文档进行更细粒度的控制。</target>
        </trans-unit>
        <trans-unit id="84c391f84e07bbc0730b8f14896da52d1928b519" translate="yes" xml:space="preserve">
          <source>More posts</source>
          <target state="translated">更多员额</target>
        </trans-unit>
        <trans-unit id="20dfd39965d8d6de67925026c214817e26a391a6" translate="yes" xml:space="preserve">
          <source>Most traditional web hosting provider let you upload files to their servers over FTP. To upload a Jekyll site to a web host using FTP, run the &lt;code&gt;jekyll build&lt;/code&gt; command and copy the contents of the generated &lt;code&gt;_site&lt;/code&gt; folder to the root folder of your hosting account. This is most likely to be the &lt;code&gt;httpdocs&lt;/code&gt; or &lt;code&gt;public_html&lt;/code&gt; folder on most hosting providers.</source>
          <target state="translated">大多数传统的Web托管提供商都允许您通过FTP将文件上传到其服务器。要使用FTP将Jekyll站点上传到Web主机，请运行 &lt;code&gt;jekyll build&lt;/code&gt; 命令并将生成的 &lt;code&gt;_site&lt;/code&gt; 文件夹的内容复制到托管帐户的根文件夹。在大多数托管服务提供商上，这很可能是 &lt;code&gt;httpdocs&lt;/code&gt; 或 &lt;code&gt;public_html&lt;/code&gt; 文件夹。</target>
        </trans-unit>
        <trans-unit id="d0bf0bf1fc26755d6dd3d0cd4f591fb0c8223d56" translate="yes" xml:space="preserve">
          <source>My categories have stopped working!</source>
          <target state="translated">我的分类已经停止工作了!</target>
        </trans-unit>
        <trans-unit id="409210cf5eca11f949b896395f0df153fb608809" translate="yes" xml:space="preserve">
          <source>Named HTML files</source>
          <target state="translated">已命名的HTML文件</target>
        </trans-unit>
        <trans-unit id="af6c6c60032b6347c216bd80b55f736adf9ba8ed" translate="yes" xml:space="preserve">
          <source>Named folders containing index HTML files</source>
          <target state="translated">包含索引HTML文件的命名文件夹</target>
        </trans-unit>
        <trans-unit id="a2c418f0923ad11cb2b3d108b0307de3bec5a403" translate="yes" xml:space="preserve">
          <source>Navigation should be on every page so adding it to your layout is the correct place to do this. Instead of adding it directly to the layout, let&amp;rsquo;s use this as an opportunity to learn about includes.</source>
          <target state="translated">导航应该在每个页面上，因此将其添加到布局中是正确的位置。与其直接将其添加到布局中，不如将其作为学习包含的机会。</target>
        </trans-unit>
        <trans-unit id="b3c42dc846bdaebd8d91e72204aff8bea8445cef" translate="yes" xml:space="preserve">
          <source>Navigation source code can get complex, so sometimes it&amp;rsquo;s nice to move it into an include.</source>
          <target state="translated">导航源代码可能会变得很复杂，因此有时最好将其移入包含内容。</target>
        </trans-unit>
        <trans-unit id="1bd711a21d476e6fe66700859fd27013606d0d82" translate="yes" xml:space="preserve">
          <source>Netlify</source>
          <target state="translated">Netlify</target>
        </trans-unit>
        <trans-unit id="811ac39da5d9fbe02fcbbb846376b672d3d31860" translate="yes" xml:space="preserve">
          <source>Netlify provides Global CDN, Continuous Deployment, one click HTTPS and &lt;a href=&quot;https://www.netlify.com/features/&quot;&gt;much more&lt;/a&gt;, providing developers a robust toolset for modern web projects, without added complexity. Netlify supports custom plugins for Jekyll and has a free plan for open source projects.</source>
          <target state="translated">Netlify提供全球CDN，持续部署，点击HTTPS和&lt;a href=&quot;https://www.netlify.com/features/&quot;&gt;更多&lt;/a&gt;，为开发者提供了现代化的网络项目强大的工具集，不增加复杂性。Netlify支持Jekyll的自定义插件，并为开源项目提供免费计划。</target>
        </trans-unit>
        <trans-unit id="e77e169ad6256bcd88fdf89a438584da538db3ad" translate="yes" xml:space="preserve">
          <source>Netlify provides Global CDN, Continuous Deployment, one click HTTPS and &lt;a href=&quot;https://www.netlify.com/features/&quot;&gt;much more&lt;/a&gt;, providing developers the most robust toolset available for modern web projects, without added complexity. Netlify supports custom plugins for Jekyll and has a free plan for open source projects.</source>
          <target state="translated">Netlify提供全球CDN，持续部署，点击HTTPS和&lt;a href=&quot;https://www.netlify.com/features/&quot;&gt;更多&lt;/a&gt;，为开发者提供适用于现代Web项目中最强大的工具集，不增加复杂性。Netlify支持Jekyll的自定义插件，并且对开源项目有免费计划。</target>
        </trans-unit>
        <trans-unit id="1f0a6fb6f3c8ce017ef991f62d064dc029d34205" translate="yes" xml:space="preserve">
          <source>Never built a website with GitHub Pages before? &lt;a href=&quot;http://jmcglone.com/guides/github-pages/&quot;&gt;See this marvelous guide by Jonathan McGlone&lt;/a&gt; to get you up and running. This guide will teach you what you need to know about Git, GitHub, and Jekyll to create your very own website on GitHub Pages.</source>
          <target state="translated">以前从未使用GitHub Pages建立网站吗？&lt;a href=&quot;http://jmcglone.com/guides/github-pages/&quot;&gt;请参阅乔纳森&amp;middot;麦格隆（Jonathan McGlone）出色的指南，&lt;/a&gt;以使您起步并运行。本指南将教您关于Git，GitHub和Jekyll的知识，以便在GitHub Pages上创建自己的网站。</target>
        </trans-unit>
        <trans-unit id="bc4548b725bed832ca525597a79aaa19443571c5" translate="yes" xml:space="preserve">
          <source>New Config File Options</source>
          <target state="translated">新配置文件选项</target>
        </trans-unit>
        <trans-unit id="c1d497448ff591968a3b7a1dcf651a30c7319f8d" translate="yes" xml:space="preserve">
          <source>Next let&amp;rsquo;s update our Ruby gems:</source>
          <target state="translated">接下来，让我们更新我们的Ruby gem：</target>
        </trans-unit>
        <trans-unit id="11fc14203dd0f4441645a9c34d5dd022905f56e4" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="translated">今后的步骤</target>
        </trans-unit>
        <trans-unit id="7c050c2c9a950271002405d5cee0f31db431d475" translate="yes" xml:space="preserve">
          <source>Next we&amp;rsquo;ll focus on creating a page for each post author.</source>
          <target state="translated">接下来，我们将专注于为每个帖子作者创建一个页面。</target>
        </trans-unit>
        <trans-unit id="4515148521e70239a1aa2232db5cc5405d1bc75f" translate="yes" xml:space="preserve">
          <source>Next we&amp;rsquo;re looking at one of Jekyll&amp;rsquo;s most popular features, blogging.</source>
          <target state="translated">接下来，我们来看Jekyll最受欢迎的功能之一，即博客。</target>
        </trans-unit>
        <trans-unit id="4178e535dc29299aea5c6b70f8744aff3fb4ca53" translate="yes" xml:space="preserve">
          <source>Next you need to specify what layout you&amp;rsquo;re using in your page&amp;rsquo;s front matter. You can also use &lt;a href=&quot;../configuration/front-matter-defaults/index&quot;&gt;front matter defaults&lt;/a&gt; to save you from having to set this on every page.</source>
          <target state="translated">接下来，您需要指定页面首页中使用的布局。您还可以使用&lt;a href=&quot;../configuration/front-matter-defaults/index&quot;&gt;前事默认设置&lt;/a&gt;，以免于不必在每个页面上都进行设置。</target>
        </trans-unit>
        <trans-unit id="f312fe6f79e90daa529f37ccafdfa02243a77286" translate="yes" xml:space="preserve">
          <source>Next, add the following lines to hooks/post-receive and be sure Jekyll is installed on the server:</source>
          <target state="translated">接下来,在hooks/post-receive中添加以下几行,并确保Jekyll已经安装在服务器上。</target>
        </trans-unit>
        <trans-unit id="5ff888289816dd3074a50bcf27e501021fdb8da3" translate="yes" xml:space="preserve">
          <source>Next, in the root directory of your Jekyll install, create a new directory called &lt;code&gt;category&lt;/code&gt; and then create a file for each category you want to list. For example, if you have a category &lt;code&gt;blog&lt;/code&gt; then create a file in the new directory called &lt;code&gt;blog.html&lt;/code&gt; with at least</source>
          <target state="translated">接下来，在Jekyll安装的根目录中，创建一个名为 &lt;code&gt;category&lt;/code&gt; 的新目录，然后为要列出的每个类别创建一个文件。例如，如果您有一个类别 &lt;code&gt;blog&lt;/code&gt; 则在新目录中创建一个名为 &lt;code&gt;blog.html&lt;/code&gt; 的文件，至少包含</target>
        </trans-unit>
        <trans-unit id="6f549129e2b42e6dba2456cd485a9a4febc44fba" translate="yes" xml:space="preserve">
          <source>Next, install Ruby. To do this, let&amp;rsquo;s use a repository from &lt;a href=&quot;https://www.brightbox.com/docs/ruby/ubuntu/&quot;&gt;BrightBox&lt;/a&gt;, which hosts optimized versions of Ruby for Ubuntu.</source>
          <target state="translated">接下来，安装Ruby。为此，我们使用&lt;a href=&quot;https://www.brightbox.com/docs/ruby/ubuntu/&quot;&gt;BrightBox&lt;/a&gt;的存储库，该存储库托管了针对Ubuntu的Ruby优化版本。</target>
        </trans-unit>
        <trans-unit id="708f2d3f4930982fbd401cfff5d9860647b92d77" translate="yes" xml:space="preserve">
          <source>Next, package your theme, by running the following command, replacing &lt;code&gt;jekyll-theme-awesome&lt;/code&gt; with the name of your theme:</source>
          <target state="translated">接下来，通过运行以下命令，将主题打包，将 &lt;code&gt;jekyll-theme-awesome&lt;/code&gt; 替换为主题名称：</target>
        </trans-unit>
        <trans-unit id="eeec6f21009462a4477d38f2189390d3d32c084f" translate="yes" xml:space="preserve">
          <source>Next, update your Ruby gems:</source>
          <target state="translated">接下来,更新你的Ruby宝石。</target>
        </trans-unit>
        <trans-unit id="f2560cbce63028d4ce27fdd2ae2588b9ae69ca1e" translate="yes" xml:space="preserve">
          <source>Nginx</source>
          <target state="translated">Nginx</target>
        </trans-unit>
        <trans-unit id="965e5ee2920d9cad862646c9da2c93c1d7eb66c5" translate="yes" xml:space="preserve">
          <source>No &lt;code&gt;sudo&lt;/code&gt; here.</source>
          <target state="translated">这里没有 &lt;code&gt;sudo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3b2398012127ac20dafee0de7defdb7dbfdffaec" translate="yes" xml:space="preserve">
          <source>Nokogiri gem installation</source>
          <target state="translated">Nokogiri宝石安装</target>
        </trans-unit>
        <trans-unit id="6b0067aa0486b565105c43272d7e3127918f1a98" translate="yes" xml:space="preserve">
          <source>Non-superuser account issues</source>
          <target state="translated">非超级用户账户问题</target>
        </trans-unit>
        <trans-unit id="8f1ffabf169574519e202a4e9b88f25390f0b416" translate="yes" xml:space="preserve">
          <source>None specified, or &lt;code&gt;permalink: date&lt;/code&gt;</source>
          <target state="translated">未指定，或 &lt;code&gt;permalink: date&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c35cfb9d2d2387ed94bc43758ede05d15c18fe4" translate="yes" xml:space="preserve">
          <source>Not everything is a post or a page. Maybe you want to document the various methods in your open source project, members of a team, or talks at a conference. Collections allow you to define a new type of document that behave like Pages or Posts do normally, but also have their own unique properties and namespace.</source>
          <target state="translated">并不是所有的东西都是一个帖子或一个页面。也许你想记录你的开源项目中的各种方法、团队成员或会议上的演讲。集合允许你定义一种新的文档类型,它们的行为就像通常的Pages或Post一样,但也有自己独特的属性和命名空间。</target>
        </trans-unit>
        <trans-unit id="18321e6d33bf8fed8f4e031615a5c61cfd4eadbf" translate="yes" xml:space="preserve">
          <source>Note &lt;a href=&quot;../../datafiles/index&quot;&gt;Data Files&lt;/a&gt; are included and reloaded during automatic regeneration.</source>
          <target state="translated">注意包含&lt;a href=&quot;../../datafiles/index&quot;&gt;数据文件&lt;/a&gt;，并在自动再生期间重新加载了数据文件。</target>
        </trans-unit>
        <trans-unit id="8f87a0cc1b107cfc3130ca883eee78891ca87928" translate="yes" xml:space="preserve">
          <source>Note &lt;a href=&quot;../datafiles/index&quot;&gt;Data Files&lt;/a&gt; are included and reloaded during automatic regeneration.</source>
          <target state="translated">注意包含&lt;a href=&quot;../datafiles/index&quot;&gt;数据文件&lt;/a&gt;并在自动再生期间重新加载。</target>
        </trans-unit>
        <trans-unit id="9cf697214d3ea8369efc9d5989737c5221f12ef5" translate="yes" xml:space="preserve">
          <source>Note if you want to view your site offline &lt;em&gt;without the Jekyll preview server&lt;/em&gt;, your browser will need the file extension to display the page, and all assets will need to be relative links that function without the server baseurl.</source>
          <target state="translated">请注意，如果要在&lt;em&gt;没有Jekyll预览服务器的情况&lt;/em&gt;下离线查看站点，则浏览器将需要文件扩展名来显示页面，并且所有资产都需要是相对链接，而无需服务器baseurl即可起作用。</target>
        </trans-unit>
        <trans-unit id="6be0285681791712626e61c0e940a29611df075c" translate="yes" xml:space="preserve">
          <source>Note that GitHub Pages runs in &lt;code&gt;safe&lt;/code&gt; mode and only allows &lt;a href=&quot;https://help.github.com/articles/configuring-jekyll-plugins/#default-plugins&quot;&gt;a set of whitelisted plugins&lt;/a&gt;.</source>
          <target state="translated">请注意，GitHub Pages在 &lt;code&gt;safe&lt;/code&gt; 模式下运行，并且仅允许&lt;a href=&quot;https://help.github.com/articles/configuring-jekyll-plugins/#default-plugins&quot;&gt;一组列入白名单的插件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d90bbde8e029c7aaf55ae7cc6107674786ac2ea" translate="yes" xml:space="preserve">
          <source>Note that all template variables relating to time or categories are available to posts only.</source>
          <target state="translated">请注意,所有与时间或类别有关的模板变量仅适用于帖子。</target>
        </trans-unit>
        <trans-unit id="403cef00bcb7eca57f3a8a3a90c242e787157e04" translate="yes" xml:space="preserve">
          <source>Note that in order for Jekyll to process any liquid tags on your page, you &lt;em&gt;must&lt;/em&gt; include front matter on it. The most minimal snippet of front matter you can include is:</source>
          <target state="translated">请注意，为了让Jekyll处理您页面上的所有液体标签，您&lt;em&gt;必须&lt;/em&gt;在其上包含正面内容。您可以包括的最简单的前件代码片段是：</target>
        </trans-unit>
        <trans-unit id="af0e26741b1c3ebdf00805474f87a1d9243e7832" translate="yes" xml:space="preserve">
          <source>Note that in the above table, &lt;code&gt;file&lt;/code&gt; can be anything. It&amp;rsquo;s an arbitrarily set variable used in your own logic (such as in a for loop). It isn&amp;rsquo;t a global site or page variable.</source>
          <target state="translated">请注意，在上表中， &lt;code&gt;file&lt;/code&gt; 可以是任何东西。它是在您自己的逻辑中（例如，在for循环中）使用的任意设置的变量。它不是全局站点或页面变量。</target>
        </trans-unit>
        <trans-unit id="0eb4bdc4e781e7d84143f4441f9136f655537cba" translate="yes" xml:space="preserve">
          <source>Note that in the above table, &lt;code&gt;file&lt;/code&gt; can be anything. It&amp;rsquo;s simply an arbitrarily set variable used in your own logic (such as in a for loop). It isn&amp;rsquo;t a global site or page variable.</source>
          <target state="translated">请注意，在上表中， &lt;code&gt;file&lt;/code&gt; 可以是任何东西。它只是在您自己的逻辑（例如for循环）中使用的任意设置的变量。它不是全局站点或页面变量。</target>
        </trans-unit>
        <trans-unit id="1efdb94e4f50bf0983fdc1d308e7ee4efc93198d" translate="yes" xml:space="preserve">
          <source>Note that making copies of theme files will prevent you from receiving any theme updates on those files. An alternative, to continue getting theme updates on all stylesheets, is to use higher specificity CSS selectors in your own additional, originally named CSS files.</source>
          <target state="translated">需要注意的是,复制主题文件将阻止你在这些文件上接收任何主题更新。另一种方法是在你自己的额外的、最初命名的CSS文件中使用更高的CSS选择器,以继续在所有样式表上获得主题更新。</target>
        </trans-unit>
        <trans-unit id="84079dcab6977c592d28e1390b0cdd647e2c55a1" translate="yes" xml:space="preserve">
          <source>Note that pages and collections (excluding &lt;code&gt;posts&lt;/code&gt; and &lt;code&gt;drafts&lt;/code&gt;) don&amp;rsquo;t have time and categories (for pages, the above &lt;code&gt;:title&lt;/code&gt; is equivalent to &lt;code&gt;:basename&lt;/code&gt;), these aspects of the permalink style are ignored for the output.</source>
          <target state="translated">请注意，页面和集合（不包括 &lt;code&gt;posts&lt;/code&gt; 和 &lt;code&gt;drafts&lt;/code&gt; ）没有时间和类别（对于页面，上述 &lt;code&gt;:title&lt;/code&gt; 等效于 &lt;code&gt;:basename&lt;/code&gt; ），永久链接样式的这些方面将被忽略。</target>
        </trans-unit>
        <trans-unit id="fb1100df32e7377e196c98a1d1e30c86170cf4a9" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;post&lt;/code&gt; variable only exists inside the &lt;code&gt;for&lt;/code&gt; loop above. If you wish to access the currently-rendering page/posts&amp;rsquo;s variables (the variables of the post/page that has the &lt;code&gt;for&lt;/code&gt; loop in it), use the &lt;code&gt;page&lt;/code&gt; variable instead.</source>
          <target state="translated">请注意， &lt;code&gt;post&lt;/code&gt; 变量仅存在于上述 &lt;code&gt;for&lt;/code&gt; 循环内。如果要访问当前呈现的页面/帖子的变量（其中包含 &lt;code&gt;for&lt;/code&gt; 循环的帖子/页面的变量），请改用 &lt;code&gt;page&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="8cf6c6835a876660d4c76838462f49a571751f8c" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;sass_dir&lt;/code&gt; becomes the load path for Sass imports, nothing more. This means that Jekyll does not know about these files directly, so any files here should not contain the YAML Front Matter as described above nor will they be transformed as described above. This folder should only contain imports.</source>
          <target state="translated">注意， &lt;code&gt;sass_dir&lt;/code&gt; 成为Sass导入的加载路径，仅此而已。这意味着Jekyll不直接了解这些文件，因此此处的任何文件都不应包含如上所述的YAML前题，也不应如上所述对其进行转换。此文件夹应仅包含导入。</target>
        </trans-unit>
        <trans-unit id="2e41ebfde97fa300cd317db4d704d7b958968931" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;sass_dir&lt;/code&gt; becomes the load path for Sass imports, nothing more. This means that Jekyll does not know about these files directly. Any files here should not contain the empty front matter as described above. If they do, they'll not be transformed as described above. This folder should only contain imports.</source>
          <target state="translated">请注意， &lt;code&gt;sass_dir&lt;/code&gt; 成为Sass导入的加载路径，仅此而已。这意味着Jekyll不直接了解这些文件。此处的任何文件都不应包含如上所述的空白内容。如果是这样，则不会如上所述进行转换。此文件夹应仅包含导入。</target>
        </trans-unit>
        <trans-unit id="5d2c061eab8c4b566be13e9d16af1507ebc396fb" translate="yes" xml:space="preserve">
          <source>Note that this string must be quoted to prevent the asterisks from being evaluated incorrectly.</source>
          <target state="translated">请注意,这个字符串必须加引号,以防止星号被错误地计算。</target>
        </trans-unit>
        <trans-unit id="365263babcade15a29bd49c083aff113ac6dc6fa" translate="yes" xml:space="preserve">
          <source>Note that upgrading macOS does not automatically upgrade Xcode itself (that can be done separately via the App Store), and having an out-of-date Xcode.app can interfere with the command line tools downloaded above. If you run into this issue, upgrade Xcode and install the upgraded Command Line Tools.</source>
          <target state="translated">需要注意的是,升级macOS并不会自动升级Xcode本身(可以通过App Store单独升级),而且拥有一个过时的Xcode.app会干扰上面下载的命令行工具。如果遇到这个问题,请升级Xcode并安装升级后的命令行工具。</target>
        </trans-unit>
        <trans-unit id="e0cedf9e1146b83059f235f1658469f30f0dfa6f" translate="yes" xml:space="preserve">
          <source>Note that you can also specify a language for highlighting after the first delimiter:</source>
          <target state="translated">请注意,您也可以在第一个定界符后指定高亮显示的语言。</target>
        </trans-unit>
        <trans-unit id="538035dc55ccf0f41b931e516134c7709bbd5954" translate="yes" xml:space="preserve">
          <source>Note that you cannot use the &lt;code&gt;../&lt;/code&gt; syntax to specify an include location that refers to a higher-level directory.</source>
          <target state="translated">请注意，不能使用 &lt;code&gt;../&lt;/code&gt; 语法指定引用更高级别目录的包含位置。</target>
        </trans-unit>
        <trans-unit id="e23bfe7b417b5e844018628a3a9e7b0a66ac8d09" translate="yes" xml:space="preserve">
          <source>Note you cannot add filters to &lt;code&gt;link&lt;/code&gt; tags. For example, you cannot append a string using Liquid filters, such as &lt;code&gt;{% link mypage.html | append: &quot;#section1&quot; %} &lt;/code&gt;. To link to sections on a page, you will need to use regular HTML or Markdown linking techniques.</source>
          <target state="translated">请注意，您无法将过滤器添加到 &lt;code&gt;link&lt;/code&gt; 标签。例如，您不能使用Liquid过滤器附加字符串，例如 &lt;code&gt;{% link mypage.html | append: &quot;#section1&quot; %} &lt;/code&gt; 。要链接到页面上的各个部分，您将需要使用常规的HTML或Markdown链接技术。</target>
        </trans-unit>
        <trans-unit id="90636d898b92948434f74cbb27ef82c175a68fcc" translate="yes" xml:space="preserve">
          <source>Note you cannot add filters to &lt;code&gt;link&lt;/code&gt; tags. For example, you cannot append a string using Liquid filters, such as &lt;code&gt;{% link mypage.html | append: &quot;#section1&quot; %}&lt;/code&gt;. To link to sections on a page, you will need to use regular HTML or Markdown linking techniques.</source>
          <target state="translated">请注意，您无法将过滤器添加到 &lt;code&gt;link&lt;/code&gt; 标签。例如，您不能使用Liquid过滤器附加字符串，例如 &lt;code&gt;{% link mypage.html | append: &quot;#section1&quot; %}&lt;/code&gt; 。要链接到页面的各个部分，您将需要使用常规的HTML或Markdown链接技术。</target>
        </trans-unit>
        <trans-unit id="ef2620ba5b8650000c4392a80911f4c3e3b5aae7" translate="yes" xml:space="preserve">
          <source>Notes are handy pieces of information</source>
          <target state="translated">笔记是方便的信息</target>
        </trans-unit>
        <trans-unit id="019763ab6a53f0c0a37aac5bce59026db4857488" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;bundle update&lt;/code&gt; will no longer get updates for the theme gem.</source>
          <target state="translated">现在， &lt;code&gt;bundle update&lt;/code&gt; 将不再获取主题gem的更新。</target>
        </trans-unit>
        <trans-unit id="f5db484a6b8a6ae2c46d9feb727ea7060997ae39" translate="yes" xml:space="preserve">
          <source>Now all that is left to do is install Jekyll.</source>
          <target state="translated">现在剩下的就是安装Jekyll了。</target>
        </trans-unit>
        <trans-unit id="e80e88643d10496c04026953abbd1fce833876a2" translate="yes" xml:space="preserve">
          <source>Now edit the &lt;code&gt;Gemfile&lt;/code&gt; and add jekyll as a dependency:</source>
          <target state="translated">现在编辑 &lt;code&gt;Gemfile&lt;/code&gt; 并将jekyll添加为依赖项：</target>
        </trans-unit>
        <trans-unit id="010964b53143eacf07b672c4e142050729ab50fa" translate="yes" xml:space="preserve">
          <source>Now install them by running a &lt;code&gt;bundle update&lt;/code&gt;.</source>
          <target state="translated">现在，通过运行 &lt;code&gt;bundle update&lt;/code&gt; 安装它们。</target>
        </trans-unit>
        <trans-unit id="d16d4716fcec7c0d58d5adb7bf41d53959f85499" translate="yes" xml:space="preserve">
          <source>Now it&amp;rsquo;s possible to publish your website simply by running the &lt;code&gt;deploy&lt;/code&gt; script. If your SSH certificate is &lt;a href=&quot;https://martin.kleppmann.com/2013/05/24/improving-security-of-ssh-private-keys.html&quot;&gt;passphrase-protected&lt;/a&gt;, you will be asked to enter it when the script executes.</source>
          <target state="translated">现在，只需运行 &lt;code&gt;deploy&lt;/code&gt; 脚本即可发布网站。如果您的SSH证书&lt;a href=&quot;https://martin.kleppmann.com/2013/05/24/improving-security-of-ssh-private-keys.html&quot;&gt;受密码保护&lt;/a&gt;，则在脚本执行时会要求您输入它。</target>
        </trans-unit>
        <trans-unit id="3e19654e1e418cd2f541f4770ec0b52df6442f1a" translate="yes" xml:space="preserve">
          <source>Now it&amp;rsquo;s your turn, change the Hello World! on your page to output as lowercase:</source>
          <target state="translated">现在轮到您了，更改Hello World！在页面上以小写形式输出：</target>
        </trans-unit>
        <trans-unit id="a648139b6baf40fe30744d8e528aae7b96c3bd46" translate="yes" xml:space="preserve">
          <source>Now posts can use this layout while the rest of the pages use the default.</source>
          <target state="translated">现在帖子可以使用这种布局,而其他页面则使用默认布局。</target>
        </trans-unit>
        <trans-unit id="a6cf1e4cb312d48ffd4a9ed682f1ece2bf915b2f" translate="yes" xml:space="preserve">
          <source>Now that you&amp;rsquo;ve got everything up-to-date and installed, let&amp;rsquo;s get to work!</source>
          <target state="translated">现在，您已经拥有了所有最新信息并已安装，让我们开始工作吧！</target>
        </trans-unit>
        <trans-unit id="34ee5ef663d912be8e2724397d00a3a6157ccfc8" translate="yes" xml:space="preserve">
          <source>Now that your posts have a category or multiple categories, you can make a page or a template displaying just the posts in those categories you specify. Here&amp;rsquo;s a basic example of how to create a list of posts from a specific category.</source>
          <target state="translated">现在您的帖子具有一个类别或多个类别，您可以创建一个页面或模板，仅显示您指定的那些类别中的帖子。这是一个如何从特定类别创建帖子列表的基本示例。</target>
        </trans-unit>
        <trans-unit id="54eae58039538d3de78c88b9ca2dea358415c6b6" translate="yes" xml:space="preserve">
          <source>Now we can install Ruby. To do this we will use a repository from &lt;a href=&quot;https://www.brightbox.com/docs/ruby/ubuntu/&quot;&gt;BrightBox&lt;/a&gt;, which hosts optimized versions of Ruby for Ubuntu.</source>
          <target state="translated">现在我们可以安装Ruby。为此，我们将使用&lt;a href=&quot;https://www.brightbox.com/docs/ruby/ubuntu/&quot;&gt;BrightBox&lt;/a&gt;的存储库，该存储库托管针对Ubuntu的Ruby优化版本。</target>
        </trans-unit>
        <trans-unit id="f1db2122410ebc1a9c0f607f53505113fc23cafa" translate="yes" xml:space="preserve">
          <source>Now when you insert the &lt;code&gt;spotlight.html&lt;/code&gt; include file, you can submit the YAML file as a parameter:</source>
          <target state="translated">现在，当您插入 &lt;code&gt;spotlight.html&lt;/code&gt; 包含文件时，可以提交YAML文件作为参数：</target>
        </trans-unit>
        <trans-unit id="e551c16358f853ea0260de2a3494bd4f323cc098" translate="yes" xml:space="preserve">
          <source>Now you can iterate over &lt;code&gt;site.staff_members&lt;/code&gt; on a page and output the content for each staff member. Similar to posts, the body of the document is accessed using the &lt;code&gt;content&lt;/code&gt; variable:</source>
          <target state="translated">现在，您可以遍历页面上的 &lt;code&gt;site.staff_members&lt;/code&gt; 并输出每个工作人员的内容。与帖子类似，可以使用 &lt;code&gt;content&lt;/code&gt; 变量访问文档的正文：</target>
        </trans-unit>
        <trans-unit id="2d94007a0c96c53817af595ff17b5d5f21118610" translate="yes" xml:space="preserve">
          <source>Now you can remove layout from the front matter of all pages and posts. Note that any time you update &lt;code&gt;_config.yml&lt;/code&gt; you&amp;rsquo;ll need to restart Jekyll for the changes to take effect.</source>
          <target state="translated">现在，您可以从所有页面和帖子的开头删除布局。请注意，每次更新 &lt;code&gt;_config.yml&lt;/code&gt; 时，都需要重新启动Jekyll才能使更改生效。</target>
        </trans-unit>
        <trans-unit id="b1ee720b8a30d5856aa33722ba59d2ea13b8b63f" translate="yes" xml:space="preserve">
          <source>Now you need to configure the author documents to use the &lt;code&gt;author&lt;/code&gt; layout. You could do this in the front matter like we have previously but that&amp;rsquo;s getting repetitive.</source>
          <target state="translated">现在，您需要配置作者文档以使用 &lt;code&gt;author&lt;/code&gt; 布局。您可以像我们以前一样在最前面的事情上执行此操作，但是这种情况正在变得重复。</target>
        </trans-unit>
        <trans-unit id="da26a269dc579ccddc35c61159479c24d604f361" translate="yes" xml:space="preserve">
          <source>Now you need to install all plugins from your Bundler group by running single command &lt;code&gt;bundle install&lt;/code&gt;.</source>
          <target state="translated">现在，您需要通过运行单个命令 &lt;code&gt;bundle install&lt;/code&gt; 来安装Bundler组中的所有插件。</target>
        </trans-unit>
        <trans-unit id="0aa3bc63f1e4c333878815ea88bcf06ae43e27ea" translate="yes" xml:space="preserve">
          <source>Now, this will only set the layout for files where the type is &lt;code&gt;posts&lt;/code&gt;. The different types that are available to you are &lt;code&gt;pages&lt;/code&gt;, &lt;code&gt;posts&lt;/code&gt;, &lt;code&gt;drafts&lt;/code&gt; or any collection in your site. While &lt;code&gt;type&lt;/code&gt; is optional, you must specify a value for &lt;code&gt;path&lt;/code&gt; when creating a &lt;code&gt;scope/values&lt;/code&gt; pair.</source>
          <target state="translated">现在，这只会设置类型为 &lt;code&gt;posts&lt;/code&gt; 的文件的布局。您可以使用的不同类型是 &lt;code&gt;pages&lt;/code&gt; ， &lt;code&gt;posts&lt;/code&gt; ， &lt;code&gt;drafts&lt;/code&gt; 或站点中的任何集合。尽管 &lt;code&gt;type&lt;/code&gt; 是可选的，但是在创建 &lt;code&gt;scope/values&lt;/code&gt; 对时必须为 &lt;code&gt;path&lt;/code&gt; 指定一个值。</target>
        </trans-unit>
        <trans-unit id="18829b882e10c5f58e54b3c8f9c9dc17ea3b6d03" translate="yes" xml:space="preserve">
          <source>Number of Posts per page.</source>
          <target state="translated">每页员额数:</target>
        </trans-unit>
        <trans-unit id="7eb968dbb7c9f134e521753fb30967e0c536dd90" translate="yes" xml:space="preserve">
          <source>Number of posts per page</source>
          <target state="translated">每页员额数</target>
        </trans-unit>
        <trans-unit id="72a83add2c5ede877c10d23f302d3e17accbadab" translate="yes" xml:space="preserve">
          <source>Objects</source>
          <target state="translated">Objects</target>
        </trans-unit>
        <trans-unit id="7b7eb6f4a4e3cf3c6cb02d7d38ee36ad964e75cb" translate="yes" xml:space="preserve">
          <source>Objects tell Liquid where to output content. They&amp;rsquo;re denoted by double curly braces: &lt;code&gt;{{&lt;/code&gt; and &lt;code&gt;}}&lt;/code&gt;. For example:</source>
          <target state="translated">对象告诉Liquid在哪里输出内容。用双花括号 &lt;code&gt;{{&lt;/code&gt; 和 &lt;code&gt;}}&lt;/code&gt; 表示它们。例如：</target>
        </trans-unit>
        <trans-unit id="96dde92cd814d365b60ea8afd3bf1ff8d531ae72" translate="yes" xml:space="preserve">
          <source>Of course, you have full control over how (and where) you display your posts, and how you structure your site. You should read more about &lt;a href=&quot;../templates/index&quot;&gt;how templates work&lt;/a&gt; with Jekyll if you want to know more.</source>
          <target state="translated">当然，您完全可以控制显示帖子的方式（和位置）以及网站的结构。如果您想了解更多信息，则应该阅读有关&lt;a href=&quot;../templates/index&quot;&gt;模板如何&lt;/a&gt;与Jekyll一起使用的更多信息。</target>
        </trans-unit>
        <trans-unit id="7906d9dd10da83c4dc9e9cc059ee3607b107572f" translate="yes" xml:space="preserve">
          <source>Often times, you will find that you are repeating a lot of configuration options. Setting the same layout in each file, adding the same category - or categories - to a post, etc. You can even add custom variables like author names, which might be the same for the majority of posts on your blog.</source>
          <target state="translated">很多时候,你会发现你在重复很多配置选项。在每个文件中设置相同的布局,在一篇文章中添加相同的类别--或类别--等等。您甚至可以添加自定义变量,如作者姓名,这可能对您的博客上的大多数帖子是相同的。</target>
        </trans-unit>
        <trans-unit id="dd7a7fc492a1910ffb2d5a05efad918a16494e6e" translate="yes" xml:space="preserve">
          <source>Often, you&amp;rsquo;ll want the ability to run a Jekyll site in multiple places, such as previewing locally before pushing to GitHub Pages. Jekyll 1.0 makes that easier with the new &lt;code&gt;--baseurl&lt;/code&gt; flag. To take advantage of this feature, first add the production &lt;code&gt;baseurl&lt;/code&gt; to your site&amp;rsquo;s &lt;code&gt;_config.yml&lt;/code&gt; file. Then, throughout the site, simply prefix relative URLs with &lt;code&gt;{{ site.baseurl }}&lt;/code&gt;. When you&amp;rsquo;re ready to preview your site locally, pass along the &lt;code&gt;--baseurl&lt;/code&gt; flag with your local baseurl (most likely &lt;code&gt;/&lt;/code&gt;) to &lt;code&gt;jekyll serve&lt;/code&gt; and Jekyll will swap in whatever you&amp;rsquo;ve passed along, ensuring all your links work as you&amp;rsquo;d expect in both environments.</source>
          <target state="translated">通常，您希望能够在多个地方运行Jekyll网站，例如在推送到GitHub Pages之前在本地预览。 Jekyll 1.0通过新的 &lt;code&gt;--baseurl&lt;/code&gt; 标志使此操作变得更加容易。要利用此功能，请首先将生产基本 &lt;code&gt;baseurl&lt;/code&gt; 添加到站点的 &lt;code&gt;_config.yml&lt;/code&gt; 文件中。然后，在整个站点中，只需在相对URL &lt;code&gt;{{ site.baseurl }}&lt;/code&gt; 加上{{site.baseurl}}即可。当您准备好在本地预览站点时，请将 &lt;code&gt;--baseurl&lt;/code&gt; 标志与本地baseurl（最可能是 &lt;code&gt;/&lt;/code&gt; ）一起传递给jekyll &lt;code&gt;jekyll serve&lt;/code&gt; ，Jekyll将交换您传递的所有内容，确保所有链接都可以正常工作d在两种环境中都期望。</target>
        </trans-unit>
        <trans-unit id="d30b145b4bde5fa638fe23ec4ef06976a5bbbe21" translate="yes" xml:space="preserve">
          <source>Ok, now for an explanation of each line:</source>
          <target state="translated">好了,现在对每一行进行解释。</target>
        </trans-unit>
        <trans-unit id="6e28fd75868e57365d52c976d9e5c95ac3f14096" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;https://www.nearlyfreespeech.net/&quot;&gt;NearlyFreeSpeech&lt;/a&gt; you need to run the following commands before installing Jekyll:</source>
          <target state="translated">在&lt;a href=&quot;https://www.nearlyfreespeech.net/&quot;&gt;NearlyFreeSpeech上，&lt;/a&gt;您需要在安装Jekyll之前运行以下命令：</target>
        </trans-unit>
        <trans-unit id="9c3597264393bddf95c610836b50fcadbbee4990" translate="yes" xml:space="preserve">
          <source>On Android (with Termux) you can install all requirements by running:</source>
          <target state="translated">在安卓系统上(使用Termux),你可以通过运行来安装所有要求。</target>
        </trans-unit>
        <trans-unit id="c2b8265c91a43410d21f3e0315a81135254de4f1" translate="yes" xml:space="preserve">
          <source>On Arch Linux you need to run:</source>
          <target state="translated">在Arch Linux上,你需要运行。</target>
        </trans-unit>
        <trans-unit id="b9fb4f0f510e3218e417720a10ad1d07d4892cbf" translate="yes" xml:space="preserve">
          <source>On Debian or Ubuntu, you may need to add &lt;code&gt;/var/lib/gems/1.8/bin/&lt;/code&gt; to your path in order to have the &lt;code&gt;jekyll&lt;/code&gt; executable be available in your Terminal.</source>
          <target state="translated">在Debian或Ubuntu上，您可能需要将 &lt;code&gt;/var/lib/gems/1.8/bin/&lt;/code&gt; 添加到您的路径中，以使 &lt;code&gt;jekyll&lt;/code&gt; 可执行文件在您的终端中可用。</target>
        </trans-unit>
        <trans-unit id="adb1f21e91bc41853dfd2b9766358ecb21806591" translate="yes" xml:space="preserve">
          <source>On Mojave (10.14)</source>
          <target state="translated">关于Mojave(10.14)</target>
        </trans-unit>
        <trans-unit id="1c531262063904dc6bee40ddd0b7cf0a9d8411f4" translate="yes" xml:space="preserve">
          <source>On Red Hat, CentOS, and Fedora systems you can do this by running:</source>
          <target state="translated">在Red Hat、CentOS和Fedora系统上,你可以通过运行。</target>
        </trans-unit>
        <trans-unit id="fa115f95060aeec4e3e2d8c7325ac6dc5e8eb616" translate="yes" xml:space="preserve">
          <source>On Ubuntu if you get stuck after &lt;code&gt;bundle exec jekyll serve&lt;/code&gt; and see error messages like &lt;code&gt;Could not locate Gemfile&lt;/code&gt; or &lt;code&gt;.bundle/ directory&lt;/code&gt;, it&amp;rsquo;s likely because all requirements have not been fully met. Recent stock Ubuntu distributions require the installation of both the &lt;code&gt;ruby&lt;/code&gt; and &lt;code&gt;ruby-all-dev&lt;/code&gt; packages:</source>
          <target state="translated">在Ubuntu上，如果您在 &lt;code&gt;bundle exec jekyll serve&lt;/code&gt; 后卡住，并看到诸如 &lt;code&gt;Could not locate Gemfile&lt;/code&gt; 或 &lt;code&gt;.bundle/ directory&lt;/code&gt; 类的错误消息，则可能是因为未完全满足所有要求。最新的Ubuntu发行版本需要同时安装 &lt;code&gt;ruby&lt;/code&gt; 和 &lt;code&gt;ruby-all-dev&lt;/code&gt; 软件包：</target>
        </trans-unit>
        <trans-unit id="b5a43e36150386712212d9f5b9c9c1a6f0c1c9d5" translate="yes" xml:space="preserve">
          <source>On Windows, you may need to install &lt;a href=&quot;https://wiki.github.com/oneclick/rubyinstaller/development-kit&quot;&gt;RubyInstaller DevKit&lt;/a&gt;.</source>
          <target state="translated">在Windows上，您可能需要安装&lt;a href=&quot;https://wiki.github.com/oneclick/rubyinstaller/development-kit&quot;&gt;RubyInstaller DevKit&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="62a8a2639b56b993d6229a9e24e09038459a6c02" translate="yes" xml:space="preserve">
          <source>On a successful build, GitHub Pages will &lt;strong&gt;publish&lt;/strong&gt; the site stored on the repository &lt;code&gt;gh-pages&lt;/code&gt; branches. Note that you do not need to setup a &lt;code&gt;gh-pages&lt;/code&gt; branch or enable GitHub Pages, as the action will take care of this for you. (For private repositories, you&amp;rsquo;ll have to upgrade to a paid plan).</source>
          <target state="translated">在成功构建后，GitHub Pages将&lt;strong&gt;发布&lt;/strong&gt;存储在存储库 &lt;code&gt;gh-pages&lt;/code&gt; 分支中的站点。请注意，您无需设置 &lt;code&gt;gh-pages&lt;/code&gt; 分支或启用GitHub Pages，因为该操作将为您解决这一问题。（对于私人存储库，您必须升级到付费计划）。</target>
        </trans-unit>
        <trans-unit id="bc528da50fbf0444b3fec13f95a3705a7abf12e9" translate="yes" xml:space="preserve">
          <source>On macOS, you may need to update RubyGems (using &lt;code&gt;sudo&lt;/code&gt; only if necessary):</source>
          <target state="translated">在macOS上，您可能需要更新RubyGems（仅在必要时使用 &lt;code&gt;sudo&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="959f86315a5074f1457f947e180c6bb688c12e6f" translate="yes" xml:space="preserve">
          <source>On most flavors of Linux, macOS, and Bash on Ubuntu on Windows, it is possible to run Jekyll as a non-superuser and without having to install gems to system-wide locations by adding the following lines to the end of your &lt;code&gt;.bashrc&lt;/code&gt; file:</source>
          <target state="translated">在Windows的Ubuntu上的大多数Linux，macOS和Bash版本上，可以通过将以下行添加到 &lt;code&gt;.bashrc&lt;/code&gt; 文件末尾来以非超级用户身份运行Jekyll，而不必将gems安装到系统范围内的位置：</target>
        </trans-unit>
        <trans-unit id="6ee683f0eac74dad663fd8c72bb3a6766618ec83" translate="yes" xml:space="preserve">
          <source>On pushing any local changes onto &lt;code&gt;master&lt;/code&gt;, the action will be triggered and the build will &lt;strong&gt;start&lt;/strong&gt;.</source>
          <target state="translated">在将任何本地更改推送到 &lt;code&gt;master&lt;/code&gt; 时，将触发操作并&lt;strong&gt;开始&lt;/strong&gt;构建。</target>
        </trans-unit>
        <trans-unit id="c38fa39b3c1205684f8e1cde55e5bc01aa13427c" translate="yes" xml:space="preserve">
          <source>On your GitHub profile, under &lt;strong&gt;Developer Settings&lt;/strong&gt;, go to the &lt;a href=&quot;https://github.com/settings/tokens&quot;&gt;Personal Access Tokens&lt;/a&gt; section.</source>
          <target state="translated">在GitHub个人资料的&amp;ldquo;&lt;strong&gt;开发人员设置&amp;rdquo;下&lt;/strong&gt;，转到&amp;ldquo;&lt;a href=&quot;https://github.com/settings/tokens&quot;&gt;个人访问令牌&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="3d800c5c38947e2742dca8b913a5dcc9a8c572f5" translate="yes" xml:space="preserve">
          <source>Once Homebrew is installed, the second step is easy:</source>
          <target state="translated">安装好Homebrew后,第二步就简单了。</target>
        </trans-unit>
        <trans-unit id="f0a9005e2dc37ed0efc5042fa378c9f94d57a3ac" translate="yes" xml:space="preserve">
          <source>Once Homebrew is installed, the second step is to run:</source>
          <target state="translated">安装好Homebrew后,第二步就是运行。</target>
        </trans-unit>
        <trans-unit id="e740d0d84e268e668f10901581cbbf11a4eb4e11" translate="yes" xml:space="preserve">
          <source>Once this is done, the &lt;code&gt;jekyll new&lt;/code&gt; command should work properly for your user account.</source>
          <target state="translated">完成此操作后， &lt;code&gt;jekyll new&lt;/code&gt; 命令应对您的用户帐户正常运行。</target>
        </trans-unit>
        <trans-unit id="1d48bb207556e12c4176a8e5b62edee99682ac0f" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve created your class and have it properly set up either as a plugin in the &lt;code&gt;_plugins&lt;/code&gt; folder or as a gem, specify it in your &lt;code&gt;_config.yml&lt;/code&gt;:</source>
          <target state="translated">创建好类并正确设置它后，可以将其设置为 &lt;code&gt;_plugins&lt;/code&gt; 文件夹中的插件或gem，然后在 &lt;code&gt;_config.yml&lt;/code&gt; 中进行指定：</target>
        </trans-unit>
        <trans-unit id="7764f5c760737cd6cf299480bea632afe6568e67" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve generated the &lt;code&gt;_site&lt;/code&gt; directory, you can easily rsync its content using a &lt;code&gt;tasks/deploy&lt;/code&gt; shell script similar to &lt;a href=&quot;https://github.com/vitalyrepin/vrepinblog/blob/master/transfer.sh&quot;&gt;this deploy script here&lt;/a&gt;. You&amp;rsquo;d obviously need to change the values to reflect your site&amp;rsquo;s details.</source>
          <target state="translated">生成 &lt;code&gt;_site&lt;/code&gt; 目录后，您可以使用类似于&lt;a href=&quot;https://github.com/vitalyrepin/vrepinblog/blob/master/transfer.sh&quot;&gt;这里的deploy脚本&lt;/a&gt;的 &lt;code&gt;tasks/deploy&lt;/code&gt; shell脚本轻松地同步其内容。显然，您需要更改这些值以反映站点的详细信息。</target>
        </trans-unit>
        <trans-unit id="f383d31d4e5cb6939c261af3b2784a812fa3a19e" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve generated the &lt;code&gt;_site&lt;/code&gt; directory, you can easily scp its content using a &lt;code&gt;tasks/deploy&lt;/code&gt; shell script similar to &lt;a href=&quot;https://github.com/henrik/henrik.nyh.se/blob/master/script/deploy&quot;&gt;this deploy script&lt;/a&gt;. You&amp;rsquo;d obviously need to change the values to reflect your site&amp;rsquo;s details. There is even &lt;a href=&quot;https://gist.github.com/henrik/214959&quot;&gt;a matching TextMate command&lt;/a&gt; that will help you run this script.</source>
          <target state="translated">生成 &lt;code&gt;_site&lt;/code&gt; 目录后，您可以使用类似于&lt;a href=&quot;https://github.com/henrik/henrik.nyh.se/blob/master/script/deploy&quot;&gt;此deploy脚本&lt;/a&gt;的 &lt;code&gt;tasks/deploy&lt;/code&gt; shell脚本轻松地对其内容进行scp 更改。显然，您需要更改这些值以反映站点的详细信息。甚至还有&lt;a href=&quot;https://gist.github.com/henrik/214959&quot;&gt;一个匹配的TextMate命令&lt;/a&gt;将帮助您运行此脚本。</target>
        </trans-unit>
        <trans-unit id="2fa1c2d47a36a61344e21d4725d8dd4dcfb7be93" translate="yes" xml:space="preserve">
          <source>One major benefit of using the &lt;code&gt;link&lt;/code&gt; or &lt;code&gt;post_url&lt;/code&gt; tag is link validation. If the link doesn&amp;rsquo;t exist, Jekyll won&amp;rsquo;t build your site. This is a good thing, as it will alert you to a broken link so you can fix it (rather than allowing you to build and deploy a site with broken links).</source>
          <target state="translated">使用 &lt;code&gt;link&lt;/code&gt; 或 &lt;code&gt;post_url&lt;/code&gt; 标记的一个主要好处是链接验证。如果该链接不存在，Jekyll将不会建立您的网站。这是一件好事，因为它会提醒您链接断开，因此您可以对其进行修复（而不是允许您使用断开的链接来构建和部署网站）。</target>
        </trans-unit>
        <trans-unit id="e8f3b981456dcf42d600fd7bd3fac055adb5786c" translate="yes" xml:space="preserve">
          <source>One of Jekyll&amp;rsquo;s best aspects is that it is &amp;ldquo;blog aware&amp;rdquo;. What does this mean, exactly? Well, simply put, it means that blogging is baked into Jekyll&amp;rsquo;s functionality. If you write articles and publish them online, you can publish and maintain a blog simply by managing a folder of text-files on your computer. Compared to the hassle of configuring and maintaining databases and web-based CMS systems, this will be a welcome change!</source>
          <target state="translated">Jekyll最好的方面之一是它&amp;ldquo;了解博客&amp;rdquo;。这到底是什么意思？简而言之，这意味着博客已融入Jekyll的功能中。如果您撰写文章并在线发布，则只需管理计算机上的文本文件文件夹即可发布和维护博客。与配置和维护数据库以及基于Web的CMS系统的麻烦相比，这将是一个可喜的变化！</target>
        </trans-unit>
        <trans-unit id="ab9b149b95c4f61f4cd94577cd916546a6169919" translate="yes" xml:space="preserve">
          <source>One of the easiest ways to set up an automated deployment flow is by using a CI.</source>
          <target state="translated">设置自动化部署流程最简单的方法之一就是使用CI。</target>
        </trans-unit>
        <trans-unit id="30a3e463c7dc187565378bd24f47049278af4422" translate="yes" xml:space="preserve">
          <source>Open &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; and have a look through your blog posts.</source>
          <target state="translated">打开&lt;a href=&quot;http://localhost:4000&quot;&gt;http：// localhost：4000&lt;/a&gt;并浏览您的博客文章。</target>
        </trans-unit>
        <trans-unit id="e38b57442e04a7aa5921e97a2289243af76ae220" translate="yes" xml:space="preserve">
          <source>Open &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; in your browser and try switching between the pages.</source>
          <target state="translated">在浏览器中打开&lt;a href=&quot;http://localhost:4000&quot;&gt;http：// localhost：4000&lt;/a&gt;，然后尝试在页面之间切换。</target>
        </trans-unit>
        <trans-unit id="60c09721dc084c6669c5ed93e36d3e7518281a30" translate="yes" xml:space="preserve">
          <source>Open &lt;a href=&quot;http://localhost:4000/about.html&quot;&gt;http://localhost:4000/about.html&lt;/a&gt; in your browser and view your new page.</source>
          <target state="translated">在浏览器中打开&lt;a href=&quot;http://localhost:4000/about.html&quot;&gt;http：// localhost：4000 / about.html&lt;/a&gt;并查看新页面。</target>
        </trans-unit>
        <trans-unit id="6c36368b930f23a8cae7edd1498894a4e3f706e2" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;Gemfile&lt;/code&gt; and remove &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt;.</source>
          <target state="translated">打开 &lt;code&gt;Gemfile&lt;/code&gt; 并删除 &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c90137c068be3506ba00bf2b6ab95d4273bec85" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;Gemfile&lt;/code&gt; and remove &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.5&quot;&lt;/code&gt;.</source>
          <target state="translated">打开 &lt;code&gt;Gemfile&lt;/code&gt; 并删除 &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.5&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="56ec55f05a8ffd5722560cf6783c854b858181a6" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;_config.yml&lt;/code&gt; and add &lt;code&gt;output: true&lt;/code&gt; to the author collection configuration:</source>
          <target state="translated">打开 &lt;code&gt;_config.yml&lt;/code&gt; 并将 &lt;code&gt;output: true&lt;/code&gt; 添加到作者集合配置：</target>
        </trans-unit>
        <trans-unit id="f6880880ea71672000d6b0fc05e219906fdfa14f" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;_config.yml&lt;/code&gt; and remove &lt;code&gt;theme: minima&lt;/code&gt;.</source>
          <target state="translated">打开 &lt;code&gt;_config.yml&lt;/code&gt; 并删除 &lt;code&gt;theme: minima&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e087e692eb3171c18a08a7065d9f5e7ca5f7ecf" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;_layouts/default.html&lt;/code&gt; and add the stylesheet to the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">打开 &lt;code&gt;_layouts/default.html&lt;/code&gt; 并将样式表添加到 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b6f92283b488ad8b56842b85e322ec4b81a37568" translate="yes" xml:space="preserve">
          <source>Open a command prompt and execute the following commands:</source>
          <target state="translated">打开命令提示符,执行以下命令。</target>
        </trans-unit>
        <trans-unit id="004ceb479a659b160d5534bfd7d1947dc40b5925" translate="yes" xml:space="preserve">
          <source>Open a command prompt, target your local blog repository root, and install github-pages: &lt;code&gt;bundle install&lt;/code&gt;</source>
          <target state="translated">打开命令提示符，定位本地博客存储库的根目录，然后安装github-pages： &lt;code&gt;bundle install&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b22453097b93b2df3d24add77a4309d80de41c8" translate="yes" xml:space="preserve">
          <source>Open a new command prompt window from the start menu, so that changes to the &lt;code&gt;PATH&lt;/code&gt; environment variable becomes effective. Install Jekyll and Bundler using &lt;code&gt;gem install jekyll bundler&lt;/code&gt;</source>
          <target state="translated">从开始菜单中打开一个新的命令提示符窗口，以使对 &lt;code&gt;PATH&lt;/code&gt; 环境变量的更改生效。使用 &lt;code&gt;gem install jekyll bundler&lt;/code&gt; 安装Jekyll和Bundler</target>
        </trans-unit>
        <trans-unit id="7583cd72c5014d4ac4731c7aa0e930cf31931a3c" translate="yes" xml:space="preserve">
          <source>Open command prompt and install &lt;a href=&quot;http://bundler.io/&quot;&gt;Bundler&lt;/a&gt;: &lt;code&gt;gem install bundler&lt;/code&gt;</source>
          <target state="translated">打开命令提示符并安装&lt;a href=&quot;http://bundler.io/&quot;&gt;Bundler&lt;/a&gt;： &lt;code&gt;gem install bundler&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8ab8db786d60c2545688e62a58c67b60caca1ae" translate="yes" xml:space="preserve">
          <source>Open command prompt in &lt;code&gt;C:\tools\DevKit2&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;C:\tools\DevKit2&lt;/code&gt; 打开命令提示符</target>
        </trans-unit>
        <trans-unit id="9eff37a1745d89ee3e2ad92eb1deb2f390943a42" translate="yes" xml:space="preserve">
          <source>Open the site's URL in the browser.</source>
          <target state="translated">在浏览器中打开该网站的URL。</target>
        </trans-unit>
        <trans-unit id="73152d15b9a1ec78d263f7c6b2b461568506e6bf" translate="yes" xml:space="preserve">
          <source>Open the theme&amp;rsquo;s directory in Finder or Explorer:</source>
          <target state="translated">在Finder或Explorer中打开主题的目录：</target>
        </trans-unit>
        <trans-unit id="4c82412df53adc6ae3295495ca687ae178bc5842" translate="yes" xml:space="preserve">
          <source>Open up &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; and have a look at the staff page and the author links on posts to check everything is linked together correctly.</source>
          <target state="translated">打开&lt;a href=&quot;http://localhost:4000&quot;&gt;http：// localhost：4000，&lt;/a&gt;然后查看人员页面和帖子上的作者链接，以检查所有链接是否正确链接。</target>
        </trans-unit>
        <trans-unit id="400d9fe9935df0662d74728de48ec67404e8f455" translate="yes" xml:space="preserve">
          <source>OpenSUSE</source>
          <target state="translated">OpenSUSE</target>
        </trans-unit>
        <trans-unit id="70a99ba8a9ffb445b428e39680492a883a85000b" translate="yes" xml:space="preserve">
          <source>OpenShift</source>
          <target state="translated">OpenShift</target>
        </trans-unit>
        <trans-unit id="d32fab14202ae0097389d61ed54dc7ccca3287f0" translate="yes" xml:space="preserve">
          <source>Optional Extras</source>
          <target state="translated">可选附件</target>
        </trans-unit>
        <trans-unit id="b55d7c386e1750235ffddf85b281073b275e3780" translate="yes" xml:space="preserve">
          <source>Optionally &lt;strong&gt;add&lt;/strong&gt; this URL to your repository&amp;rsquo;s main page and to your &lt;code&gt;README.md&lt;/code&gt;, to make it easy for people to find.</source>
          <target state="translated">（可选）将此URL&lt;strong&gt;添加&lt;/strong&gt;到资源库的主页和 &lt;code&gt;README.md&lt;/code&gt; 中，以方便人们查找。</target>
        </trans-unit>
        <trans-unit id="2730df1840876b27ba50ea3c9e4fcd46e32a5273" translate="yes" xml:space="preserve">
          <source>Optionally configure the build by clicking on the gear icon. Further configuration happens via your &lt;code&gt;.travis.yml&lt;/code&gt; file. More details below.</source>
          <target state="translated">（可选）通过点击齿轮图标来配置构建。进一步的配置通过您的 &lt;code&gt;.travis.yml&lt;/code&gt; 文件进行。下面有更多详细信息。</target>
        </trans-unit>
        <trans-unit id="60e7611132055753c9b1041f69b1f74d642f7ec9" translate="yes" xml:space="preserve">
          <source>Optionally you can use &lt;a href=&quot;https://github.com/KeJunMao/fastjekyll#autoinstall-jekyll-for-windows&quot;&gt;Autoinstall Jekyll for Windows&lt;/a&gt;.</source>
          <target state="translated">（可选）您可以使用&lt;a href=&quot;https://github.com/KeJunMao/fastjekyll#autoinstall-jekyll-for-windows&quot;&gt;Windows自动安装Jekyll&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e62613f989a67d7593b94141f928dd4b6e5043aa" translate="yes" xml:space="preserve">
          <source>Optionally, if you are not interested in the build email notifications you can disable them with this configuration. Travis supports a wide array of notification services, you may find &lt;a href=&quot;https://docs.travis-ci.com/user/notifications/&quot;&gt;another one more useful (e.g. slack)&lt;/a&gt;.</source>
          <target state="translated">或者，如果您对构建电子邮件通知不感兴趣，则可以使用此配置禁用它们。Travis支持各种各样的通知服务，您可能会发现&lt;a href=&quot;https://docs.travis-ci.com/user/notifications/&quot;&gt;另外一个有用的功能（例如slack）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="135a1bcda4b25a5f404e15dc6baa60da6e5b1c5b" translate="yes" xml:space="preserve">
          <source>Options and Flags</source>
          <target state="translated">选项和标志</target>
        </trans-unit>
        <trans-unit id="c3041924699f7386336b1c03e46950d1ce22be2c" translate="yes" xml:space="preserve">
          <source>Options are given as a second argument to &lt;code&gt;.new&lt;/code&gt;, and are encoded in a symbol-keyed Ruby Hash. For more information about the configuration options, check out &lt;code&gt;html-proofer&lt;/code&gt;&amp;rsquo;s README file.</source>
          <target state="translated">选项作为 &lt;code&gt;.new&lt;/code&gt; 的第二个参数提供，并以符号键的Ruby Hash编码。有关配置选项的更多信息，请查看 &lt;code&gt;html-proofer&lt;/code&gt; 的README文件。</target>
        </trans-unit>
        <trans-unit id="35a22db1ee88115b121ce6b7c4afd8072e9a235c" translate="yes" xml:space="preserve">
          <source>Options for creating a new site with Jekyll</source>
          <target state="translated">用Jekyll创建新网站的选项</target>
        </trans-unit>
        <trans-unit id="560143653190c35a839a512a853005f840e8708e" translate="yes" xml:space="preserve">
          <source>Options for the &lt;code&gt;slugify&lt;/code&gt; filter</source>
          <target state="translated">&lt;code&gt;slugify&lt;/code&gt; 过滤器的选项</target>
        </trans-unit>
        <trans-unit id="fd32301500d284cdb5c29f7af6f284e0ab343b55" translate="yes" xml:space="preserve">
          <source>Or &lt;code&gt;_data/members.csv&lt;/code&gt;:</source>
          <target state="translated">或 &lt;code&gt;_data/members.csv&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="645b758bd607fe4dff04534c57b0a1063c23e424" translate="yes" xml:space="preserve">
          <source>Or if you&amp;rsquo;ve started with the &lt;code&gt;jekyll new&lt;/code&gt; command, replace &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt; with the gem you want, e.g:</source>
          <target state="translated">或者，如果您从 &lt;code&gt;jekyll new&lt;/code&gt; 命令开始，则用所需的 &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt; 替换gem&amp;ldquo; minima&amp;rdquo;，&amp;ldquo;〜&amp;gt; 2.0&amp;rdquo;，例如：</target>
        </trans-unit>
        <trans-unit id="d172be3fe8bc618fcc6602af3e4c76c0aae31310" translate="yes" xml:space="preserve">
          <source>Or if you&amp;rsquo;ve started with the &lt;code&gt;jekyll new&lt;/code&gt; command, replace &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt; with your theme-gem:</source>
          <target state="translated">或者，如果您已开始使用 &lt;code&gt;jekyll new&lt;/code&gt; 命令，则用您的theme-gem 替换 &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ac2db100d3d942904c2131a1e10be5199910241f" translate="yes" xml:space="preserve">
          <source>Or to get a list of comic-book based movies, one may use the following:</source>
          <target state="translated">或者要获得基于漫画书的电影列表,可以使用以下方法。</target>
        </trans-unit>
        <trans-unit id="b802ce2068737656985509e4c57384fa3a56405b" translate="yes" xml:space="preserve">
          <source>Or you could list them explicitly as Jekyll plugins in your Gemfile, and not update &lt;code&gt;_config.yml&lt;/code&gt;, like this:</source>
          <target state="translated">或者，您可以将它们明确列为Gemfile中的Jekyll插件，而不更新 &lt;code&gt;_config.yml&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="7575764b5d7e5d6dcfc8a0556d9ed2c9c2ba8934" translate="yes" xml:space="preserve">
          <source>Ordinal day of the year from the post&amp;rsquo;s filename, with leading zeros. (001..366)</source>
          <target state="translated">帖子文件名中的一年中的第几天，前导零。（001..366）</target>
        </trans-unit>
        <trans-unit id="6e6a6f2086bb5fe5dbfd17d8d5f502d48759834b" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="translated">Other</target>
        </trans-unit>
        <trans-unit id="0c6615de6943228411f3ad7e04655686aac16eb4" translate="yes" xml:space="preserve">
          <source>Other Files/Folders</source>
          <target state="translated">其他文件/文件夹</target>
        </trans-unit>
        <trans-unit id="06c3ba4ba77c459e0a61b4bf2611d961ae796ff4" translate="yes" xml:space="preserve">
          <source>Other Linux</source>
          <target state="translated">其他Linux</target>
        </trans-unit>
        <trans-unit id="16450a48eba70ad54ff1ad9ff818734f44629c84" translate="yes" xml:space="preserve">
          <source>Other commentary</source>
          <target state="translated">其他评论</target>
        </trans-unit>
        <trans-unit id="c94c404ecea36e47c969182a93bd2aa77150d4fd" translate="yes" xml:space="preserve">
          <source>Our &amp;ldquo;Hello World!&amp;rdquo; will now be downcased on render.</source>
          <target state="translated">我们的&amp;ldquo; Hello World！&amp;rdquo; 现在将在渲染时缩小大小写。</target>
        </trans-unit>
        <trans-unit id="fca1c1ad83bd5de1fb6c5a8fa7489884ec896f2e" translate="yes" xml:space="preserve">
          <source>Our friends at GitHub have provided the &lt;a href=&quot;https://github.com/github/pages-gem&quot;&gt;github-pages&lt;/a&gt; gem which is used to manage &lt;a href=&quot;https://pages.github.com/versions/&quot;&gt;Jekyll and its dependencies on GitHub Pages&lt;/a&gt;. Using it in your projects means that when you deploy your site to GitHub Pages, you will not be caught by unexpected differences between various versions of the gems.</source>
          <target state="translated">我们在GitHub上的朋友提供了&lt;a href=&quot;https://github.com/github/pages-gem&quot;&gt;github-pages&lt;/a&gt; gem，用于管理&lt;a href=&quot;https://pages.github.com/versions/&quot;&gt;Jekyll及其对GitHub Pages的依赖关系&lt;/a&gt;。在项目中使用它意味着将站点部署到GitHub Pages时，各种版本的gem之间不会出现意料之外的差异。</target>
        </trans-unit>
        <trans-unit id="a5e38335dad03154bf1d809c715aea741faeb396" translate="yes" xml:space="preserve">
          <source>Out of the box, Jekyll has pre-defined hook points for owners &lt;code&gt;:site&lt;/code&gt;, &lt;code&gt;:pages&lt;/code&gt;, &lt;code&gt;:documents&lt;/code&gt; and &lt;code&gt;:clean&lt;/code&gt;. Additionally, the hook points defined for &lt;code&gt;:documents&lt;/code&gt; can be utilized for individual collections only by invoking the collection type instead. i.e. &lt;code&gt;:posts&lt;/code&gt; for documents in collection &lt;code&gt;_posts&lt;/code&gt; and &lt;code&gt;:movies&lt;/code&gt; for documents in collection &lt;code&gt;_movies&lt;/code&gt;. In all cases, Jekyll calls your hooks with the owner object as the first callback parameter.</source>
          <target state="translated">开箱即用，Jekyll为所有者 &lt;code&gt;:site&lt;/code&gt; ， &lt;code&gt;:pages&lt;/code&gt; ， &lt;code&gt;:documents&lt;/code&gt; 和 &lt;code&gt;:clean&lt;/code&gt; 提供了预定义的挂钩点。此外，为 &lt;code&gt;:documents&lt;/code&gt; 定义的挂钩点仅可通过调用集合类型而用于单个集合。即 &lt;code&gt;:posts&lt;/code&gt; 用于集合 &lt;code&gt;_posts&lt;/code&gt; 中的文档和 &lt;code&gt;:movies&lt;/code&gt; 用于集合 &lt;code&gt;_movies&lt;/code&gt; 中的文档。在所有情况下，Jekyll都将拥有者对象作为第一个回调参数调用您的钩子。</target>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="b7d382ed311b02ac2102668a077e890a7bee6077" translate="yes" xml:space="preserve">
          <source>Output a page</source>
          <target state="translated">输出页面</target>
        </trans-unit>
        <trans-unit id="8fd9c8201ce2fca2a9eb4af0a121d222b9a70f9a" translate="yes" xml:space="preserve">
          <source>Outputs &lt;code&gt;Hi&lt;/code&gt;. You can learn more about the filters available to Jekyll &lt;a href=&quot;../../liquid/filters/index&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">输出 &lt;code&gt;Hi&lt;/code&gt; 。您可以&lt;a href=&quot;../../liquid/filters/index&quot;&gt;在此处&lt;/a&gt;了解更多有关Jekyll可用的过滤器的信息。</target>
        </trans-unit>
        <trans-unit id="2291581dfc2cc48d0726a6393fdad0c7cf40c195" translate="yes" xml:space="preserve">
          <source>Outputs a variable called &lt;code&gt;page.title&lt;/code&gt; on the page.</source>
          <target state="translated">在页面上输出一个名为 &lt;code&gt;page.title&lt;/code&gt; 的变量。</target>
        </trans-unit>
        <trans-unit id="552f0311af4ab97f91dc8653580124d0fb276057" translate="yes" xml:space="preserve">
          <source>Outputs the content of the tag.</source>
          <target state="translated">输出标签的内容。</target>
        </trans-unit>
        <trans-unit id="50df6f9a4168a759d9e89d4c2def5bf696afd82e" translate="yes" xml:space="preserve">
          <source>Outputs the sidebar if &lt;code&gt;page.show_sidebar&lt;/code&gt; is true. You can learn more about the tags available to Jekyll &lt;a href=&quot;../../liquid/tags/index&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;page.show_sidebar&lt;/code&gt; 为true，则输出边栏。您可以&lt;a href=&quot;../../liquid/tags/index&quot;&gt;在此处&lt;/a&gt;了解更多有关Jekyll可用标签的信息。</target>
        </trans-unit>
        <trans-unit id="37dc9012ef71231741cb1e581f85142964b548d7" translate="yes" xml:space="preserve">
          <source>Overall, you can create includes that act as templates for a variety of uses &amp;mdash; inserting audio or video clips, alerts, special formatting, and more. However, note that you should avoid using too many includes, as this will slow down the build time of your site. For example, don&amp;rsquo;t use includes every time you insert an image. (The above technique shows a use case for special images.)</source>
          <target state="translated">总体而言，您可以创建充当各种用途的模板的包含-插入音频或视频剪辑，警报，特殊格式等。但是，请注意，应避免使用过多的包含，因为这会减慢网站的构建时间。例如，每次插入图像时不要使用包含。（以上技术显示了特殊图像的用例。）</target>
        </trans-unit>
        <trans-unit id="627a4cb25b349ef246f8579404f67f42035a2c83" translate="yes" xml:space="preserve">
          <source>Overall, you can create includes that act as templates for a variety of uses &amp;mdash; inserting audio or video clips, alerts, special formatting, and more. Note that you should avoid using too many includes, as this will slow down the build time of your site. For example, don&amp;rsquo;t use includes every time you insert an image. (The above technique shows a use case for special images.)</source>
          <target state="translated">总体而言，您可以创建包含这些内容的模板，以用作多种用途-插入音频或视频剪辑，警报，特殊格式等。请注意，您应避免使用过多的包含，因为这会减慢您网站的构建时间。例如，每次插入图像时都不要使用include。（以上技术显示了特殊图像的用例。）</target>
        </trans-unit>
        <trans-unit id="a407aa60450670a092614d3725b0bf7a57789eec" translate="yes" xml:space="preserve">
          <source>Override default development settings</source>
          <target state="translated">覆盖默认开发设置</target>
        </trans-unit>
        <trans-unit id="1fa8317388f8659e5d80c07bb57f00ba667fc7e7" translate="yes" xml:space="preserve">
          <source>Overriding theme defaults</source>
          <target state="translated">覆盖主题默认值</target>
        </trans-unit>
        <trans-unit id="89ff31225c5f042fff61e92ec8cf80e417a7140c" translate="yes" xml:space="preserve">
          <source>Owner</source>
          <target state="translated">Owner</target>
        </trans-unit>
        <trans-unit id="fb727ea90883481adad9143766fed7cf0c61d139" translate="yes" xml:space="preserve">
          <source>Page Variables</source>
          <target state="translated">页面变量</target>
        </trans-unit>
        <trans-unit id="6c30ca069285c1ec29e909ff7ad7abae0aa1027d" translate="yes" xml:space="preserve">
          <source>Page specific information + the &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt;. Custom variables set via the front matter will be available here. See below for details.</source>
          <target state="translated">页面特定信息+最&lt;a href=&quot;../front-matter/index&quot;&gt;重要的问题&lt;/a&gt;。通过前件设置的自定义变量将在此处提供。有关详情，请参见下文。</target>
        </trans-unit>
        <trans-unit id="b2edf287ea254dc5eefc4ac30424fb7a0fabecf3" translate="yes" xml:space="preserve">
          <source>Page specific information + the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML front matter&lt;/a&gt;. Custom variables set via the YAML Front Matter will be available here. See below for details.</source>
          <target state="translated">特定于页面的信息+ &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML前沿问题&lt;/a&gt;。通过YAML前端事项设置的自定义变量将在此处提供。有关详情，请参见下文。</target>
        </trans-unit>
        <trans-unit id="600584c2d5ccb97c0c0c424d9f32d6b102fcb040" translate="yes" xml:space="preserve">
          <source>Pages</source>
          <target state="translated">Pages</target>
        </trans-unit>
        <trans-unit id="1731a84a0ac0bb83b8947e3dc93bd2eedd07c402" translate="yes" xml:space="preserve">
          <source>Pages and posts can also access a specific data item. The example below shows how to access a specific item:</source>
          <target state="translated">页面和帖子也可以访问一个特定的数据项。下面的例子显示了如何访问一个特定的项目。</target>
        </trans-unit>
        <trans-unit id="8d7d8d1b2a29d690c9a2f23d15035cc21ad5509c" translate="yes" xml:space="preserve">
          <source>Pages are the most basic building block for content. They&amp;rsquo;re useful for standalone content (content which is not date based or is not a group of content such as staff members or recipes).</source>
          <target state="translated">页面是内容的最基本构建块。它们对于独立内容（不是基于日期的内容或不是一组内容的内容，例如工作人员或食谱）很有用。</target>
        </trans-unit>
        <trans-unit id="93b9546c42784bd93f39c345a78ee775a824f706" translate="yes" xml:space="preserve">
          <source>Pages have the following placeholders available:</source>
          <target state="translated">页面有以下占位符可用。</target>
        </trans-unit>
        <trans-unit id="100325b8d6de92dc6ff09cd2c078133755bf274f" translate="yes" xml:space="preserve">
          <source>Pagination</source>
          <target state="translated">Pagination</target>
        </trans-unit>
        <trans-unit id="099f26d22f2eab450a9f8e4641df844a9fd35b39" translate="yes" xml:space="preserve">
          <source>Pagination does not support tags or categories</source>
          <target state="translated">分页不支持标签或类别</target>
        </trans-unit>
        <trans-unit id="8d1188b7a9bf945de310de44fa2e4fda7a93a1ea" translate="yes" xml:space="preserve">
          <source>Pagination does not work from within Markdown files from your Jekyll site. Pagination works when called from within the HTML file, named &lt;code&gt;index.html&lt;/code&gt;, which optionally may reside in and produce pagination from within a subdirectory, via the &lt;code&gt;paginate_path&lt;/code&gt; configuration value.</source>
          <target state="translated">无法从Jekyll站点的Markdown文件中进行分页。当从名为 &lt;code&gt;index.html&lt;/code&gt; 的HTML文件中调用分页时，分页有效，该文件可以选择通过 &lt;code&gt;paginate_path&lt;/code&gt; 配置值驻留在子目录中并从子目录中产生分页。</target>
        </trans-unit>
        <trans-unit id="665ed12f6912f493c693116c0d4595a8fceedf76" translate="yes" xml:space="preserve">
          <source>Pagination does not work from within Markdown or Textile files from your Jekyll site. Pagination works when called from within the HTML file, named &lt;code&gt;index.html&lt;/code&gt;, which optionally may reside in and produce pagination from within a subdirectory, via the &lt;code&gt;paginate_path&lt;/code&gt; configuration value.</source>
          <target state="translated">无法从Jekyll网站的Markdown或Textile文件中进行分页。当从名为 &lt;code&gt;index.html&lt;/code&gt; 的HTML文件中调用分页时，该 &lt;code&gt;paginate_path&lt;/code&gt; 可以通过paginate_path配置值驻留在子目录中并从该子目录中产生分页。</target>
        </trans-unit>
        <trans-unit id="28eb844982985dc922c656b73584b243a8ef4a58" translate="yes" xml:space="preserve">
          <source>Pagination for categories, tags and collections</source>
          <target state="translated">分类、标签和收藏的分页</target>
        </trans-unit>
        <trans-unit id="bc21578e87f661e49f1a43a46e87bbd3f4931c48" translate="yes" xml:space="preserve">
          <source>Pagination only works within HTML files</source>
          <target state="translated">分页只在HTML文件中工作</target>
        </trans-unit>
        <trans-unit id="a5e90cc1ce791d5b1a24484acb57915c8ea30726" translate="yes" xml:space="preserve">
          <source>Pagination pages through every post in the &lt;code&gt;posts&lt;/code&gt; variable unless a post has &lt;code&gt;hidden: true&lt;/code&gt; in its YAML Front Matter. It does not currently allow paging over groups of posts linked by a common tag or category. It cannot include any collection of documents because it is restricted to posts.</source>
          <target state="translated">除非帖子已 &lt;code&gt;hidden: true&lt;/code&gt; 否则将通过 &lt;code&gt;posts&lt;/code&gt; 变量中的每个帖子进行分页：在其YAML前端问题中为true。当前，它不允许分页按通用标签或类别链接的帖子组。它不能包含任何文档集合，因为它仅限于帖子。</target>
        </trans-unit>
        <trans-unit id="f30fe0bd3f86903a82b9d6f2de1da1477d0da18f" translate="yes" xml:space="preserve">
          <source>Pagination pages through every post in the &lt;code&gt;posts&lt;/code&gt; variable unless a post has &lt;code&gt;hidden: true&lt;/code&gt; in its front matter. It does not currently allow paging over groups of posts linked by a common tag or category. It cannot include any collection of documents because it is restricted to posts.</source>
          <target state="translated">除非帖子已 &lt;code&gt;hidden: true&lt;/code&gt; 否则页面将遍历 &lt;code&gt;posts&lt;/code&gt; 变量中的每个帖子。当前，它不允许分页按通用标签或类别链接的帖子组。它不能包含任何文档集合，因为它仅限于帖子。</target>
        </trans-unit>
        <trans-unit id="24533236e88c1d36ff37cc521374f5302ab40560" translate="yes" xml:space="preserve">
          <source>Paginator</source>
          <target state="translated">Paginator</target>
        </trans-unit>
        <trans-unit id="84e974ec86fb92f41c07299c2cf6c5412ae6f050" translate="yes" xml:space="preserve">
          <source>Paginator variable availability</source>
          <target state="translated">分页器可变的可用性</target>
        </trans-unit>
        <trans-unit id="1fc3796d3af4ab08534459a95040dbdc741f4ec6" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;--livereload&lt;/code&gt; option to &lt;code&gt;serve&lt;/code&gt; to automatically refresh the page with each change you make to the source files: &lt;code&gt;bundle exec jekyll serve --livereload&lt;/code&gt;</source>
          <target state="translated">传递 &lt;code&gt;--livereload&lt;/code&gt; 选项 &lt;code&gt;serve&lt;/code&gt; 自动刷新你对源文件中的每个变化页： &lt;code&gt;bundle exec jekyll serve --livereload&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c2edadd9ff3015cde4c2171a3a54ce96932f4e1" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;'auto'&lt;/code&gt; (auto-detect) works similar to &lt;code&gt;'cjk'&lt;/code&gt; but is more performant if the filter is used on a variable string that may or may not contain CJK chars.</source>
          <target state="translated">传递 &lt;code&gt;'auto'&lt;/code&gt; （自动检测）的工作方式类似于 &lt;code&gt;'cjk'&lt;/code&gt; 但如果将过滤器用于可能包含或不包含CJK字符的可变字符串，性能会更高。</target>
        </trans-unit>
        <trans-unit id="b72f1dd7f64d80ff83eef93fab8c047bdaf13324" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;'cjk'&lt;/code&gt; as the argument will count every CJK character detected as one word irrespective of being separated by whitespace.</source>
          <target state="translated">传递 &lt;code&gt;'cjk'&lt;/code&gt; 作为参数将把检测到的每个CJK字符都视为一个单词，而与用空格隔开无关。</target>
        </trans-unit>
        <trans-unit id="92b3f43aee0fed327790633811b3b180ccc11c8a" translate="yes" xml:space="preserve">
          <source>Passing parameter variables to includes</source>
          <target state="translated">将参数变量传递给包括</target>
        </trans-unit>
        <trans-unit id="b1948833b08ddb3d596c60fadb3e50a706082bf2" translate="yes" xml:space="preserve">
          <source>Passing parameters to includes</source>
          <target state="translated">传递参数到包括</target>
        </trans-unit>
        <trans-unit id="d09b5f991f332dcef768215c7f896fd32593e3ab" translate="yes" xml:space="preserve">
          <source>Passing parameters to includes is especially helpful when you want to hide away complex formatting from your Markdown content.</source>
          <target state="translated">当你想从你的Markdown内容中隐藏复杂的格式时,将参数传递给includes是特别有用的。</target>
        </trans-unit>
        <trans-unit id="d4e60c27a532f36e8d9eb0fc03f0bd6d8dea3a72" translate="yes" xml:space="preserve">
          <source>Passing references to YAML files as parameter values</source>
          <target state="translated">传递对YAML文件的引用作为参数值。</target>
        </trans-unit>
        <trans-unit id="c6e96759e0f6dc5232b961c30408375dd13359d1" translate="yes" xml:space="preserve">
          <source>Path to the document relative to the collection's directory, including base filename of the document.</source>
          <target state="translated">文档相对于集合目录的路径,包括文档的基本文件名。</target>
        </trans-unit>
        <trans-unit id="2cc477e2aea081f0ff295affd369bd1d6c54ab84" translate="yes" xml:space="preserve">
          <source>Path to the document relative to the collection's directory.</source>
          <target state="translated">文档相对于集合目录的路径。</target>
        </trans-unit>
        <trans-unit id="ba557b22b3669a781a4f3803c3c434ddd4aba78a" translate="yes" xml:space="preserve">
          <source>Path to the page relative to the site's source directory, excluding base filename of the page.</source>
          <target state="translated">相对于网站源目录的页面路径,不包括页面的基本文件名。</target>
        </trans-unit>
        <trans-unit id="84e9675ad3e50543cbc04858a3c2d72d19a3e52f" translate="yes" xml:space="preserve">
          <source>People often use &lt;a href=&quot;https://github.com/rbenv/rbenv&quot;&gt;rbenv&lt;/a&gt; to manage multiple Ruby versions. This is very useful when you need to be able to run a given Ruby version on a project.</source>
          <target state="translated">人们经常使用&lt;a href=&quot;https://github.com/rbenv/rbenv&quot;&gt;rbenv&lt;/a&gt;来管理多个Ruby版本。当您需要能够在项目上运行给定的Ruby版本时，这非常有用。</target>
        </trans-unit>
        <trans-unit id="7127bd847805300c5c2ebdef3287652a44a839e2" translate="yes" xml:space="preserve">
          <source>Percent encodes any special characters in a URI. URI escape normally replaces a space with &lt;code&gt;%20&lt;/code&gt;. &lt;a href=&quot;https://en.wikipedia.org/wiki/Percent-encoding#Types_of_URI_characters&quot;&gt;Reserved characters&lt;/a&gt; will not be escaped.</source>
          <target state="translated">百分比对URI中的任何特殊字符进行编码。URI转义通常用 &lt;code&gt;%20&lt;/code&gt; 替换空格。&lt;a href=&quot;https://en.wikipedia.org/wiki/Percent-encoding#Types_of_URI_characters&quot;&gt;保留字符&lt;/a&gt;将不被转义。</target>
        </trans-unit>
        <trans-unit id="88973c8fae2719fe8ac2f36fc3841aa776c29088" translate="yes" xml:space="preserve">
          <source>Permalink Style</source>
          <target state="translated">Permalink风格</target>
        </trans-unit>
        <trans-unit id="4a6598c061feabe730c00f48fbba63aeeb8cad94" translate="yes" xml:space="preserve">
          <source>Permalink settings for pages and collections</source>
          <target state="translated">页面和收藏的链接设置</target>
        </trans-unit>
        <trans-unit id="722b6f6fa174c5db2506367d3abe2fca3616ead6" translate="yes" xml:space="preserve">
          <source>Permalink style examples with posts</source>
          <target state="translated">带帖子的Permalink风格示例</target>
        </trans-unit>
        <trans-unit id="dbd403fe181f92e05bc517db25b4ae6314e2582e" translate="yes" xml:space="preserve">
          <source>Permalinks</source>
          <target state="translated">Permalinks</target>
        </trans-unit>
        <trans-unit id="45205b32aac7d14c5f63a3d55000c4404bdd71fc" translate="yes" xml:space="preserve">
          <source>Permalinks and default paths</source>
          <target state="translated">Permalinks和默认路径</target>
        </trans-unit>
        <trans-unit id="8841b244eb807db2e75566d7e14c56fe4958c327" translate="yes" xml:space="preserve">
          <source>Permalinks are the output path for your pages, posts, or collections. They allow you to structure the directories of your source code different from the directories in your output.</source>
          <target state="translated">Permalinks是你的页面、帖子或集合的输出路径。它们允许你将你的源代码的目录与你的输出目录进行不同的结构。</target>
        </trans-unit>
        <trans-unit id="f47de5ff111161d18fad9e57a6f9bb229ff5fc35" translate="yes" xml:space="preserve">
          <source>Permalinks no longer automatically add a trailing slash</source>
          <target state="translated">Permalinks不再自动添加尾部的斜杠。</target>
        </trans-unit>
        <trans-unit id="70a8fc9a8a667f813cf50a26ea70b8d3e322e9c0" translate="yes" xml:space="preserve">
          <source>Permalinks refer to the URLs (excluding the domain name or directory folder) for your pages, posts, or collections. Jekyll supports a flexible way to build permalinks, allowing you to leverage various template variables or choose built-in permalink styles (such as &lt;code&gt;date&lt;/code&gt;) that automatically use a template-variable pattern.</source>
          <target state="translated">永久链接是指页面，帖子或集合的URL（不包括域名或目录文件夹）。Jekyll支持构建永久链接的灵活方法，允许您利用各种模板变量或选择自动使用模板变量模式的内置永久链接样式（例如 &lt;code&gt;date&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="60720f5c5a4a72182a2e32579d5ff97bb9804d3c" translate="yes" xml:space="preserve">
          <source>Pick a random value from an array. Optional: pick multiple values.</source>
          <target state="translated">从一个数组中随机抽取一个值。可选:选择多个值。</target>
        </trans-unit>
        <trans-unit id="59e55e94ff0cf531532aab03ff3c79f6012d21ce" translate="yes" xml:space="preserve">
          <source>Pick a random value from an array. Optionally, pick multiple values.</source>
          <target state="translated">从一个数组中随机抽取一个值。也可以从一个数组中随机抽取一个值。</target>
        </trans-unit>
        <trans-unit id="a435a570c653de6428021d4190d9d6afa881d5c0" translate="yes" xml:space="preserve">
          <source>Pick up a theme</source>
          <target state="translated">挑选一个主题</target>
        </trans-unit>
        <trans-unit id="6724700fe82140ed81667d9e1970f59962831ee1" translate="yes" xml:space="preserve">
          <source>Place all your partials in your &lt;code&gt;sass_dir&lt;/code&gt;, which defaults to &lt;code&gt;&amp;lt;source&amp;gt;/_sass&lt;/code&gt;. Place your main SCSS or Sass files in the place you want them to be in the output file, such as &lt;code&gt;&amp;lt;source&amp;gt;/css&lt;/code&gt;. For an example, take a look at &lt;a href=&quot;https://github.com/jekyll/jekyll-sass-converter/tree/master/docs&quot;&gt;this example site using Sass support in Jekyll&lt;/a&gt;.</source>
          <target state="translated">将您所有的partials放在 &lt;code&gt;sass_dir&lt;/code&gt; 中，默认为 &lt;code&gt;&amp;lt;source&amp;gt;/_sass&lt;/code&gt; 。将主要的SCSS或Sass文件放置在您希望它们位于输出文件中的位置，例如 &lt;code&gt;&amp;lt;source&amp;gt;/css&lt;/code&gt; 。例如，&lt;a href=&quot;https://github.com/jekyll/jekyll-sass-converter/tree/master/docs&quot;&gt;使用Jekyll中的Sass支持来&lt;/a&gt;查看此示例站点。</target>
        </trans-unit>
        <trans-unit id="b9d011d9a69638626708513d5be1a1045790a7ed" translate="yes" xml:space="preserve">
          <source>Place it in the &lt;code&gt;bin&lt;/code&gt; subdirectory of your home folder (&lt;code&gt;~/bin&lt;/code&gt;)</source>
          <target state="translated">将其放在主文件夹的 &lt;code&gt;bin&lt;/code&gt; 子目录中（ &lt;code&gt;~/bin&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="1fc60b48edacdcff0774ec0c923e2a01de2bba2a" translate="yes" xml:space="preserve">
          <source>Place named HTML or &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; files for each page in your site&amp;rsquo;s root folder.</source>
          <target state="translated">将每个页面的命名HTML或&lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;文件放置在站点的根文件夹中。</target>
        </trans-unit>
        <trans-unit id="7c9271c31bc7a38b8983172ef056e0b18258c168" translate="yes" xml:space="preserve">
          <source>Place pages inside folders and subfolders named whatever you want.</source>
          <target state="translated">将页面放置在文件夹和子文件夹内,你想怎么命名就怎么命名。</target>
        </trans-unit>
        <trans-unit id="b62930d0710de4268cfd1b4505b2a2ad7a57660d" translate="yes" xml:space="preserve">
          <source>Placeholders</source>
          <target state="translated">Placeholders</target>
        </trans-unit>
        <trans-unit id="a5c540254fd3b4936f9e041d2134f4f59504ea17" translate="yes" xml:space="preserve">
          <source>Placement into layouts work similar to how Russian dolls encase the smaller ones within itself or how an oyster generates a pearl &amp;mdash; the converted output from the preceding stage forms the core and layout(s) are successively &lt;em&gt;rendered&lt;/em&gt; separately onto the core.</source>
          <target state="translated">放置到版面中的工作方式类似于俄罗斯娃娃如何将较小的娃娃包裹在其内部或牡蛎如何产生珍珠-前一阶段转换后的输出形成了核心，并依次&lt;em&gt;将&lt;/em&gt;布局分别&lt;em&gt;渲染&lt;/em&gt;到了核心上。</target>
        </trans-unit>
        <trans-unit id="e6d5bbc4f1c87296e2a7ea566d1bfd5a5169afdf" translate="yes" xml:space="preserve">
          <source>Please note that both &lt;code&gt;remove_block_html_tags&lt;/code&gt; and &lt;code&gt;remove_span_html_tags&lt;/code&gt; are currently unsupported in Jekyll due to the fact that they are not included within the kramdown HTML converter.</source>
          <target state="translated">请注意，Jekyll当前不支持 &lt;code&gt;remove_block_html_tags&lt;/code&gt; 和 &lt;code&gt;remove_span_html_tags&lt;/code&gt; ，因为它们不包含在kramdown HTML转换器中。</target>
        </trans-unit>
        <trans-unit id="650509eedfbfae3803f781c1708f1c1fc918b11b" translate="yes" xml:space="preserve">
          <source>Please note that globbing a path is known to have a negative effect on performance and is currently not optimized, especially on Windows. Globbing a path will increase your build times in proportion to the size of the associated collection directory.</source>
          <target state="translated">请注意,globbing路径会对性能产生负面影响,目前还没有进行优化,尤其是在Windows上。Globbing一个路径会使你的构建时间与相关集合目录的大小成正比。</target>
        </trans-unit>
        <trans-unit id="3e7053ca3819821374d48c6e7c191b321fed7641" translate="yes" xml:space="preserve">
          <source>Please refer to GitHub official documentation on &lt;a href=&quot;https://help.github.com/articles/user-organization-and-project-pages/&quot;&gt;user, organization and project pages&lt;/a&gt; to see more detailed examples.</source>
          <target state="translated">请参阅&lt;a href=&quot;https://help.github.com/articles/user-organization-and-project-pages/&quot;&gt;用户，组织和项目页面&lt;/a&gt;上的GitHub官方文档以查看更多详细示例。</target>
        </trans-unit>
        <trans-unit id="1837db6abc417517a9f8ed078c5f32ee6063cb9b" translate="yes" xml:space="preserve">
          <source>Please refer to our &lt;a href=&quot;https://jekyllrb.com/docs/upgrading/&quot;&gt;upgrading section&lt;/a&gt; for major updates detailed instructions.</source>
          <target state="translated">请参阅我们的&lt;a href=&quot;https://jekyllrb.com/docs/upgrading/&quot;&gt;升级部分&lt;/a&gt;以获取主要更新的详细说明。</target>
        </trans-unit>
        <trans-unit id="5b05c8bfba1866fa9160e033fa61d16d7fb42a9d" translate="yes" xml:space="preserve">
          <source>Please report issues you encounter!</source>
          <target state="translated">遇到问题请报告!</target>
        </trans-unit>
        <trans-unit id="c3708d29157821517e37a79459a3140546e30b5a" translate="yes" xml:space="preserve">
          <source>Please stop and rerun `jekyll serve` command.</source>
          <target state="translated">请停止并重新运行 &quot;杰基尔服务 &quot;命令。</target>
        </trans-unit>
        <trans-unit id="ab2e26dd8b8868a3969cb3321e0c983c0d9d67d4" translate="yes" xml:space="preserve">
          <source>Plugins</source>
          <target state="translated">Plugins</target>
        </trans-unit>
        <trans-unit id="a9879fb675982db2f3432f7a47d5e774a955dcf5" translate="yes" xml:space="preserve">
          <source>Plugins allow you to extend Jekyll&amp;rsquo;s behavior to fit your needs. There are six types of plugins in Jekyll.</source>
          <target state="translated">插件使您可以扩展Jekyll的行为以适合您的需求。Jekyll中有六种类型的插件。</target>
        </trans-unit>
        <trans-unit id="cbca525c651606d32aa2cd9d29a443e374188b86" translate="yes" xml:space="preserve">
          <source>Plugins on GitHub Pages</source>
          <target state="translated">GitHub页面上的插件</target>
        </trans-unit>
        <trans-unit id="375ed3fbdc9976dcc468b1c1ba32b1ffb19c53bd" translate="yes" xml:space="preserve">
          <source>Plugins/themes can also leverage Data Files to set configuration variables.</source>
          <target state="translated">插件/主题也可以利用数据文件来设置配置变量。</target>
        </trans-unit>
        <trans-unit id="531647990f4b25a57b01632a99f5d6ca1762bab5" translate="yes" xml:space="preserve">
          <source>Port for LiveReload to listen on.</source>
          <target state="translated">LiveReload的收听端口。</target>
        </trans-unit>
        <trans-unit id="a85f761779816bf8dd03436d22df275b06b2dd24" translate="yes" xml:space="preserve">
          <source>Post excerpts</source>
          <target state="translated">发表摘录</target>
        </trans-unit>
        <trans-unit id="a0ca0c3198947ded7419101f3e83d48a9cb41f2a" translate="yes" xml:space="preserve">
          <source>Posts</source>
          <target state="translated">Posts</target>
        </trans-unit>
        <trans-unit id="5957559cf2bc0a4b768a12ae4fb1f9e36e15312f" translate="yes" xml:space="preserve">
          <source>Posts available for that page.</source>
          <target state="translated">该页有员额。</target>
        </trans-unit>
        <trans-unit id="19fb462921217a31066f1e100f09af5906e907e0" translate="yes" xml:space="preserve">
          <source>Posts available for the current page</source>
          <target state="translated">当前页可用的员额</target>
        </trans-unit>
        <trans-unit id="c1427edf4141184bf946c2e6be97a75ead52f520" translate="yes" xml:space="preserve">
          <source>Pre-configuring Theme-gems4.0</source>
          <target state="translated">预先配置Theme-gems4.0。</target>
        </trans-unit>
        <trans-unit id="f903aefffca964e59bae5902fdb1e7726250998a" translate="yes" xml:space="preserve">
          <source>Pre-releases</source>
          <target state="translated">Pre-releases</target>
        </trans-unit>
        <trans-unit id="ab86fb82a986460447b29bbb55ca5b9bf867bad6" translate="yes" xml:space="preserve">
          <source>Precedence</source>
          <target state="translated">Precedence</target>
        </trans-unit>
        <trans-unit id="1c4906dcef85048abb9eb583ebf5283b131efdb6" translate="yes" xml:space="preserve">
          <source>Predefined Global Variables</source>
          <target state="translated">预定义全局变量</target>
        </trans-unit>
        <trans-unit id="3d2381d3ce17502f9b5cd6e96843c14d10cb7fcb" translate="yes" xml:space="preserve">
          <source>Predefined Variables for Posts</source>
          <target state="translated">员额的预定义变量</target>
        </trans-unit>
        <trans-unit id="26ba43519e040aa1b9b90878aca34bb3b54255d2" translate="yes" xml:space="preserve">
          <source>Prepend the &lt;code&gt;baseurl&lt;/code&gt; value to the input. Useful if your site is hosted at a subpath rather than the root of the domain.</source>
          <target state="translated">将 &lt;code&gt;baseurl&lt;/code&gt; 值添加到输入之前。如果您的站点托管在子路径而非域的根目录，则很有用。</target>
        </trans-unit>
        <trans-unit id="9dc057d4d4274fe0084085e47f8ab7b0849795a9" translate="yes" xml:space="preserve">
          <source>Prepend the &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;baseurl&lt;/code&gt; value to the input.</source>
          <target state="translated">将 &lt;code&gt;url&lt;/code&gt; 和 &lt;code&gt;baseurl&lt;/code&gt; 值添加到输入之前。</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="1d538a43faed87f85cebbc6100a1b9ccf9957db3" translate="yes" xml:space="preserve">
          <source>Previewing your theme</source>
          <target state="translated">预览您的主题</target>
        </trans-unit>
        <trans-unit id="2154f26d808dc1c91b9a1a53f37bd4a9568f4cb5" translate="yes" xml:space="preserve">
          <source>Print verbose output.</source>
          <target state="translated">打印啰嗦的输出。</target>
        </trans-unit>
        <trans-unit id="7b0546431f16f831257149f91717df7dca1edc54" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Access the site object using Liquid</source>
          <target state="translated">ProTip&amp;trade;：使用Liquid访问站点对象</target>
        </trans-unit>
        <trans-unit id="3265c92a3b4fb0a61b66fdd29aad666715eaf588" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Don't repeat yourself</source>
          <target state="translated">ProTip&amp;trade;：不要重复自己</target>
        </trans-unit>
        <trans-unit id="de67579ec50727aa178d3fe02d3566f4ac49a47e" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Enable Syntax Highlighting</source>
          <target state="translated">ProTip&amp;trade;：启用语法突出显示</target>
        </trans-unit>
        <trans-unit id="9446cafc3be6fdaecb79928bdb5b239f317a9eee" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Front Matter Variables Are Optional</source>
          <target state="translated">ProTip&amp;trade;：前项变量是可选的</target>
        </trans-unit>
        <trans-unit id="cb3a1d73b062d32f0f1b5eae3047cabc40ebf0c0" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Link to other posts</source>
          <target state="translated">ProTip&amp;trade;：链接到其他帖子</target>
        </trans-unit>
        <trans-unit id="da7d4be0b76a4aa0b81c7842c6357ff95bac3ac4" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Render Posts Marked As Unpublished</source>
          <target state="translated">ProTip&amp;trade;：渲染标记为未发布的帖子</target>
        </trans-unit>
        <trans-unit id="15cee3e14e9d0d4d1e113328a457f8ab8391e83a" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Show line numbers</source>
          <target state="translated">ProTip&amp;trade;：显示行号</target>
        </trans-unit>
        <trans-unit id="fc6f2dc1893a7a027e119eba27c9d2c116153006" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Use Custom Front Matter</source>
          <target state="translated">ProTip&amp;trade;：使用自定义前件</target>
        </trans-unit>
        <trans-unit id="10cef24c138180517ee4ad5cb91f235256dd02d5" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Use GitHub Pages for zero-hassle Jekyll hosting</source>
          <target state="translated">ProTip&amp;trade;：使用GitHub Pages进行零麻烦的Jekyll托管</target>
        </trans-unit>
        <trans-unit id="afaaef5ab1edf9c741a9f2886bb79aed97e05d22" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Use layouts on your homepage</source>
          <target state="translated">ProTip&amp;trade;：在主页上使用布局</target>
        </trans-unit>
        <trans-unit id="d827c1b33f443ecc681c04af8ce64c5d2004abc0" translate="yes" xml:space="preserve">
          <source>ProTips&amp;trade; help you get more from Jekyll</source>
          <target state="translated">ProTips&amp;trade;帮助您从Jekyll获得更多</target>
        </trans-unit>
        <trans-unit id="c032a343ae0db68178586838c17d01f7b8c422f7" translate="yes" xml:space="preserve">
          <source>Problems installing Jekyll?</source>
          <target state="translated">安装Jekyll有问题?</target>
        </trans-unit>
        <trans-unit id="cc329a8ee3d1b68c463fded001694148653fd1e8" translate="yes" xml:space="preserve">
          <source>Problems running Jekyll</source>
          <target state="translated">运行Jekyll的问题</target>
        </trans-unit>
        <trans-unit id="d74e7b85b7e0f35a8f31e48f3f367816f7b91635" translate="yes" xml:space="preserve">
          <source>Process and render draft posts.</source>
          <target state="translated">处理和提出员额草案。</target>
        </trans-unit>
        <trans-unit id="8d79aa660a969e338fe721754211cc16d44e41b2" translate="yes" xml:space="preserve">
          <source>Produce an index for related posts. Requires the &lt;a href=&quot;http://www.classifier-reborn.com/&quot;&gt;classifier-reborn&lt;/a&gt; plugin.</source>
          <target state="translated">产生相关职位的索引。需要&lt;a href=&quot;http://www.classifier-reborn.com/&quot;&gt;分类器重生&lt;/a&gt;插件。</target>
        </trans-unit>
        <trans-unit id="6e76f8303253a28fdaf837549d37efade2e6a28f" translate="yes" xml:space="preserve">
          <source>Produce an index for related posts. Requires the &lt;a href=&quot;https://jekyll.github.io/classifier-reborn/&quot;&gt;classifier-reborn&lt;/a&gt; plugin.</source>
          <target state="translated">产生相关职位的索引。需要&lt;a href=&quot;https://jekyll.github.io/classifier-reborn/&quot;&gt;分类器重生&lt;/a&gt;插件。</target>
        </trans-unit>
        <trans-unit id="2fe389b04fca211aac6d4aedea7a19bb13c6c893" translate="yes" xml:space="preserve">
          <source>Production Problems</source>
          <target state="translated">生产问题</target>
        </trans-unit>
        <trans-unit id="f7a01690b389c7251b3fc63190bd4c14a215d52e" translate="yes" xml:space="preserve">
          <source>Project Page URL Structure</source>
          <target state="translated">项目页面URL结构</target>
        </trans-unit>
        <trans-unit id="dc5067ca2ef47522f33e05bdaf9f555d40d0b771" translate="yes" xml:space="preserve">
          <source>Project Pages</source>
          <target state="translated">项目页面</target>
        </trans-unit>
        <trans-unit id="fcd617dd71499b60ca9f17be875d6e0be2c51988" translate="yes" xml:space="preserve">
          <source>Provided that the file has a &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt; section, it will be transformed by Jekyll. The same will happen for any &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.markdown&lt;/code&gt;, &lt;code&gt;.md&lt;/code&gt;, or &lt;code&gt;.textile&lt;/code&gt; file in your site&amp;rsquo;s root directory or directories not listed above.</source>
          <target state="translated">如果文件具有最&lt;a href=&quot;../front-matter/index&quot;&gt;重要的&lt;/a&gt;部分，它将由Jekyll进行转换。网站根目录或上面未列出的目录中的任何 &lt;code&gt;.html&lt;/code&gt; ， &lt;code&gt;.markdown&lt;/code&gt; ， &lt;code&gt;.md&lt;/code&gt; 或 &lt;code&gt;.textile&lt;/code&gt; 文件都将发生同样的情况。</target>
        </trans-unit>
        <trans-unit id="3c154d4bdff400f5e6b72eaeb22deac7b3dc0862" translate="yes" xml:space="preserve">
          <source>Provided that the file has a &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt; section, it will be transformed by Jekyll. The same will happen for any &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.markdown&lt;/code&gt;, &lt;code&gt;.md&lt;/code&gt;, or &lt;code&gt;.textile&lt;/code&gt; file in your site&amp;rsquo;s root directory or directories not listed above.</source>
          <target state="translated">前提是该文件具有&amp;ldquo; &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML重要事项&amp;rdquo;&lt;/a&gt;部分，它将由Jekyll进行转换。网站根目录或上面未列出的目录中的任何 &lt;code&gt;.html&lt;/code&gt; ， &lt;code&gt;.markdown&lt;/code&gt; ， &lt;code&gt;.md&lt;/code&gt; 或 &lt;code&gt;.textile&lt;/code&gt; 文件都将发生同样的情况。</target>
        </trans-unit>
        <trans-unit id="3a18cc9761b1e8102294f9e8dc7e4aa4ba031264" translate="yes" xml:space="preserve">
          <source>Providing permissions</source>
          <target state="translated">提供权限</target>
        </trans-unit>
        <trans-unit id="72be0277c49f7726d31c1d905434c0eea552f97f" translate="yes" xml:space="preserve">
          <source>Publish posts or collection documents with a future date.</source>
          <target state="translated">发布有未来日期的帖子或收藏文件。</target>
        </trans-unit>
        <trans-unit id="93655b49b00a36f5094483f0c66df8a777df09bf" translate="yes" xml:space="preserve">
          <source>Publishing to GitHub Pages? &lt;a href=&quot;../github-pages/index&quot;&gt;Check out our documentation page for just that purpose&lt;/a&gt;.</source>
          <target state="translated">发布到GitHub Pages？&lt;a href=&quot;../github-pages/index&quot;&gt;为此，请查看我们的文档页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c80ee6e060aa94453a1957194269b1eac9d50756" translate="yes" xml:space="preserve">
          <source>Publishing your theme</source>
          <target state="translated">发布您的主题</target>
        </trans-unit>
        <trans-unit id="056fba88002903e5d56a79d693886d8358679885" translate="yes" xml:space="preserve">
          <source>Push, pop, shift, and unshift elements from an Array.</source>
          <target state="translated">从一个数组中推送、弹出、移动和取消移动元素。</target>
        </trans-unit>
        <trans-unit id="ceaff83322cbcd1e49c2b1b4070eb8936ff84043" translate="yes" xml:space="preserve">
          <source>Push, pop, shift, and unshift elements from an Array. These are &lt;strong&gt;NON-DESTRUCTIVE&lt;/strong&gt;, i.e. they do not mutate the array, but rather make a copy and mutate that.</source>
          <target state="translated">从数组中推入，弹出，移位和取消移位元素。这些是&lt;strong&gt;NON-DESTRUCTIVE的&lt;/strong&gt;，即它们不使数组变异，而是进行复制和变异。</target>
        </trans-unit>
        <trans-unit id="1ec7041a18430566cd7bb1e7d19b5678584ab214" translate="yes" xml:space="preserve">
          <source>Questions?</source>
          <target state="translated">Questions?</target>
        </trans-unit>
        <trans-unit id="417820f1bade4496f4525989f3a39679097e4256" translate="yes" xml:space="preserve">
          <source>Quick-start guide</source>
          <target state="translated">快速入门指南</target>
        </trans-unit>
        <trans-unit id="8f41d8cd3e40c56b21fcde708ec849b3d204df60" translate="yes" xml:space="preserve">
          <source>RHEL8/CentOS8</source>
          <target state="translated">RHEL8/CentOS8</target>
        </trans-unit>
        <trans-unit id="e832f5c7e96b274627824d8bff3aeeeaccfef01b" translate="yes" xml:space="preserve">
          <source>RVM is a popular Ruby Version Manager (like rbenv, chruby, etc). This directive tells Travis the Ruby version to use when running your test script.</source>
          <target state="translated">RVM是一个流行的Ruby版本管理器(如rbenv、chruby等)。这条指令告诉Travis在运行测试脚本时要使用的Ruby版本。</target>
        </trans-unit>
        <trans-unit id="f61b7ffac55507f1e8f7322fcceed1fbcd1afb9e" translate="yes" xml:space="preserve">
          <source>RVM is a popular Ruby Version Manager (like rbenv, chruby, etc). This directive tells Travis the Ruby version to use when running your test script. Use a &lt;a href=&quot;https://docs.travis-ci.com/user/languages/ruby/#Specifying-Ruby-versions-and-implementations&quot;&gt;version which is pre-installed on the Travis build docker&lt;/a&gt; image to speed up the build.</source>
          <target state="translated">RVM是流行的Ruby版本管理器（如rbenv，chruby等）。该指令告诉Travis运行测试脚本时要使用的Ruby版本。使用&lt;a href=&quot;https://docs.travis-ci.com/user/languages/ruby/#Specifying-Ruby-versions-and-implementations&quot;&gt;预先安装在Travis构建docker&lt;/a&gt;映像上的版本来加快构建速度。</target>
        </trans-unit>
        <trans-unit id="3d020480fdb4c067a8ed1f783c83aa65284c204a" translate="yes" xml:space="preserve">
          <source>Rack-Jekyll</source>
          <target state="translated">Rack-Jekyll</target>
        </trans-unit>
        <trans-unit id="ccb3b7cf53d9645b5536605277c7731117c1a9e3" translate="yes" xml:space="preserve">
          <source>Rake</source>
          <target state="translated">Rake</target>
        </trans-unit>
        <trans-unit id="2d9be644c6f66a11135d7c8cbbb137cee962d2b7" translate="yes" xml:space="preserve">
          <source>Rather than passing individual flags via the command line, you can now pass an entire custom Jekyll config file. This helps to distinguish between environments, or lets you programmatically override user-specified defaults. Simply add the &lt;code&gt;--config&lt;/code&gt; flag to the &lt;code&gt;jekyll&lt;/code&gt; command, followed by the path to one or more config files (comma-delimited, no spaces).</source>
          <target state="translated">现在，您可以通过整个定制的Jekyll配置文件，而不必通过命令行传递各个标志。这有助于区分环境，或使您以编程方式覆盖用户指定的默认值。只需在 &lt;code&gt;jekyll&lt;/code&gt; 命令中添加 &lt;code&gt;--config&lt;/code&gt; 标志，然后添加一个或多个配置文件的路径即可（以逗号分隔，没有空格）。</target>
        </trans-unit>
        <trans-unit id="169488557f80f487b9a8d96107d18ddd44b3dd38" translate="yes" xml:space="preserve">
          <source>Rather than typing &lt;code&gt;permalink: /:categories/:year/:month/:day/:title/&lt;/code&gt;, you can just type &lt;code&gt;permalink: pretty&lt;/code&gt;.</source>
          <target state="translated">除了输入 &lt;code&gt;permalink: /:categories/:year/:month/:day/:title/&lt;/code&gt; ，您还可以输入 &lt;code&gt;permalink: pretty&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="439540dc1f179dff59fb01db013c30acaaa99734" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;http://andycroll.com/ruby/serving-a-jekyll-blog-using-heroku/&quot;&gt;this post&lt;/a&gt; on how to deploy to Heroku using Rack-Jekyll.</source>
          <target state="translated">阅读&lt;a href=&quot;http://andycroll.com/ruby/serving-a-jekyll-blog-using-heroku/&quot;&gt;这篇文章&lt;/a&gt;对如何使用机架杰基尔部署到Heroku的。</target>
        </trans-unit>
        <trans-unit id="1503cda8e6c8f59a76329fc13ec7d6f3fb2a5a80" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;Jekyll Documentation&lt;/a&gt;</source>
          <target state="translated">阅读&lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;Jekyll文档&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9d270ccf38c4d6afc19eb9c3b5fd3e453667df8" translate="yes" xml:space="preserve">
          <source>Read the full &lt;a href=&quot;https://jekyllrb.com/docs/conduct/&quot;&gt;code of conduct&lt;/a&gt;</source>
          <target state="translated">阅读完整&lt;a href=&quot;https://jekyllrb.com/docs/conduct/&quot;&gt;的行为准则&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae9872ae617c714e6747d2ca6c2e15fde2f82cfd" translate="yes" xml:space="preserve">
          <source>Read this &lt;a href=&quot;https://medium.com/@jameshamann/deploy-your-jekyll-site-using-aws-amplify-with-only-a-few-clicks-8f3dd8f26112&quot;&gt;step-by-step guide&lt;/a&gt; to deploy and host your Jekyll site on AWS Amplify.</source>
          <target state="translated">阅读此&lt;a href=&quot;https://medium.com/@jameshamann/deploy-your-jekyll-site-using-aws-amplify-with-only-a-few-clicks-8f3dd8f26112&quot;&gt;分步指南，&lt;/a&gt;以在AWS Amplify上部署和托管您的Jekyll网站。</target>
        </trans-unit>
        <trans-unit id="c3824afe52578fcc0be477b0bcd0fe9ee558faca" translate="yes" xml:space="preserve">
          <source>Read this &lt;a href=&quot;https://www.21yunbox.com/docs/#/deploy-jekyll&quot;&gt;Jekyll step-by-step guide&lt;/a&gt; to deploy your Jekyll site on 21YunBox.</source>
          <target state="translated">阅读此&lt;a href=&quot;https://www.21yunbox.com/docs/#/deploy-jekyll&quot;&gt;Jekyll分步指南，&lt;/a&gt;以在21YunBox上部署您的Jekyll网站。</target>
        </trans-unit>
        <trans-unit id="da32500dfd70b8f86508eb38e0d732d6716b8578" translate="yes" xml:space="preserve">
          <source>Read this &lt;a href=&quot;https://www.21yunbox.com/docs/v2/static.html#jekyll&quot;&gt;Jekyll step-by-step guide&lt;/a&gt; to deploy your Jekyll site on 21YunBox.</source>
          <target state="translated">阅读此&lt;a href=&quot;https://www.21yunbox.com/docs/v2/static.html#jekyll&quot;&gt;Jekyll分步指南，&lt;/a&gt;以在21YunBox上部署您的Jekyll网站。</target>
        </trans-unit>
        <trans-unit id="6f2d22f1682d1726666dee549b405108d4fc37c5" translate="yes" xml:space="preserve">
          <source>Read this &lt;a href=&quot;https://www.netlify.com/blog/2015/10/28/a-step-by-step-guide-jekyll-3.0-on-netlify/&quot;&gt;Jekyll step-by-step guide&lt;/a&gt; to setup your Jekyll site on Netlify.</source>
          <target state="translated">阅读此&lt;a href=&quot;https://www.netlify.com/blog/2015/10/28/a-step-by-step-guide-jekyll-3.0-on-netlify/&quot;&gt;Jekyll分步指南，&lt;/a&gt;以在Netlify上设置Jekyll网站。</target>
        </trans-unit>
        <trans-unit id="fb94c75b1c474d655ecd0a671085e85b8917cf80" translate="yes" xml:space="preserve">
          <source>Read this &lt;a href=&quot;https://www.netlify.com/blog/2020/04/02/a-step-by-step-guide-jekyll-4.0-on-netlify/&quot;&gt;Jekyll step-by-step guide&lt;/a&gt; to setup your Jekyll site on Netlify.</source>
          <target state="translated">阅读此&lt;a href=&quot;https://www.netlify.com/blog/2020/04/02/a-step-by-step-guide-jekyll-4.0-on-netlify/&quot;&gt;Jekyll分步指南，&lt;/a&gt;以在Netlify上设置您的Jekyll网站。</target>
        </trans-unit>
        <trans-unit id="5f631ff0302c32d82d8b231bc317b0beda2e0d40" translate="yes" xml:space="preserve">
          <source>Redcarpet</source>
          <target state="translated">Redcarpet</target>
        </trans-unit>
        <trans-unit id="8ea1404223d116c60a3e42d509dd79effe38a523" translate="yes" xml:space="preserve">
          <source>Redcarpet can be configured by providing an &lt;code&gt;extensions&lt;/code&gt; sub-setting, whose value should be an array of strings. Each string should be the name of one of the &lt;code&gt;Redcarpet::Markdown&lt;/code&gt; class&amp;rsquo;s extensions; if present in the array, it will set the corresponding extension to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">可以通过提供 &lt;code&gt;extensions&lt;/code&gt; 子设置来配置Redcarpet，扩展子设置的值应为字符串数组。每个字符串应为 &lt;code&gt;Redcarpet::Markdown&lt;/code&gt; 类扩展名之一的名称。如果存在于数组中，则会将相应的扩展名设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44a0d505e17f14f7f69264e5a53841a1965456a3" translate="yes" xml:space="preserve">
          <source>Refer to your selected theme&amp;rsquo;s documentation and source repository for more information on what files you can override.</source>
          <target state="translated">有关可以覆盖哪些文件的更多信息，请参考所选主题的文档和源存储库。</target>
        </trans-unit>
        <trans-unit id="64ad1dbd8a0a36c745e78866510d4581eab08f26" translate="yes" xml:space="preserve">
          <source>Refer to your selected theme&amp;rsquo;s documentation and source repository for more information on which files you can override.</source>
          <target state="translated">有关可以覆盖哪些文件的更多信息，请参考所选主题的文档和源存储库。</target>
        </trans-unit>
        <trans-unit id="5690d22eef073c74520c67bbd0417f07498d99fd" translate="yes" xml:space="preserve">
          <source>Regardless of whether front matter exists or not, Jekyll will write to the destination directory (e.g. &lt;code&gt;_site&lt;/code&gt;) only if &lt;code&gt;output: true&lt;/code&gt; has been set in the collection&amp;rsquo;s metadata.</source>
          <target state="translated">无论前端问题是否存在，只有在集合的元数据中设置了 &lt;code&gt;output: true&lt;/code&gt; ，Jekyll才会写入目标目录（例如 &lt;code&gt;_site&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="9e3f0522a636e26135d7d509614f66498b8abc2a" translate="yes" xml:space="preserve">
          <source>Register your site with &lt;a href=&quot;https://txtpen.com&quot;&gt;txtpen&lt;/a&gt;. Then append</source>
          <target state="translated">使用&lt;a href=&quot;https://txtpen.com&quot;&gt;txtpen&lt;/a&gt;注册您的网站。然后追加</target>
        </trans-unit>
        <trans-unit id="98d06420fb393fe8733fe61191716a188d2ba8e5" translate="yes" xml:space="preserve">
          <source>Relative Permalink support removed</source>
          <target state="translated">移除相对的Permalink支持</target>
        </trans-unit>
        <trans-unit id="5d951f35618ebcfce051fbdea98d0c5c4b54d6b9" translate="yes" xml:space="preserve">
          <source>Relaunch your terminal and check your Ruby setup:</source>
          <target state="translated">重新启动终端并检查你的Ruby设置。</target>
        </trans-unit>
        <trans-unit id="ad17e9991796ce5863f1422f5c6017d940c7e221" translate="yes" xml:space="preserve">
          <source>Reload a page automatically on the browser when its content is edited.</source>
          <target state="translated">当一个页面的内容被编辑后,会自动在浏览器上重新加载该页面。</target>
        </trans-unit>
        <trans-unit id="d914f2ea35b0f2553e85af7c921666e44d9c331b" translate="yes" xml:space="preserve">
          <source>Remember your Front Matter</source>
          <target state="translated">记住你的 &quot;前言&quot;(Front Matter)。</target>
        </trans-unit>
        <trans-unit id="a3f0dac9020b7b6694ab2e8c67f500ae69fdc14c" translate="yes" xml:space="preserve">
          <source>Remember your YAML Front Matter</source>
          <target state="translated">请记住你的YAML前言</target>
        </trans-unit>
        <trans-unit id="b2e402b4da01a2a43c98d68b263f9ea2e8503ccf" translate="yes" xml:space="preserve">
          <source>Render</source>
          <target state="translated">Render</target>
        </trans-unit>
        <trans-unit id="778537c15e1c8b15c7eda63f03cd9cc34813448f" translate="yes" xml:space="preserve">
          <source>Render Posts Marked As Unpublished</source>
          <target state="translated">渲染标记为未发表的帖子。</target>
        </trans-unit>
        <trans-unit id="15ee34a232891ee351147169143c5723051c59d3" translate="yes" xml:space="preserve">
          <source>Render posts that were marked as unpublished.</source>
          <target state="translated">渲染被标记为未发表的帖子。</target>
        </trans-unit>
        <trans-unit id="7e42b24dd20317b1267d14a20e3861bf6fba8de4" translate="yes" xml:space="preserve">
          <source>Render the paginated Posts</source>
          <target state="translated">渲染分页的帖子</target>
        </trans-unit>
        <trans-unit id="708071d198f236e19dabcecc6380eda33cd08a88" translate="yes" xml:space="preserve">
          <source>Rendering Process</source>
          <target state="translated">渲染过程</target>
        </trans-unit>
        <trans-unit id="2c506d6e4657df828ea482c052d68020f0442ebe" translate="yes" xml:space="preserve">
          <source>Reopen a command prompt and install Jekyll: &lt;code&gt;gem install jekyll&lt;/code&gt;</source>
          <target state="translated">重新打开命令提示符并安装Jekyll： &lt;code&gt;gem install jekyll&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="57758714a115c28dae7e9b64388dc90b41a10abf" translate="yes" xml:space="preserve">
          <source>Replace any occurrence of whitespace with a single space.</source>
          <target state="translated">用一个空格代替任何空格。</target>
        </trans-unit>
        <trans-unit id="fbb446a61a4468f5ad96947bdc0040fe036d44ee" translate="yes" xml:space="preserve">
          <source>Report a bug</source>
          <target state="translated">报告错误</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">Requirements</target>
        </trans-unit>
        <trans-unit id="87df60de337fb58864343e396696d74611e0d403" translate="yes" xml:space="preserve">
          <source>Resources</source>
          <target state="translated">Resources</target>
        </trans-unit>
        <trans-unit id="234d49f9f38f1e1fd41a86a7ef7b54117ba20258" translate="yes" xml:space="preserve">
          <source>Restart the jekyll server once more for the configuration changes to take effect.</source>
          <target state="translated">再次重启jekyll服务器以使配置更改生效。</target>
        </trans-unit>
        <trans-unit id="c5240e5a9f7a771a0223e39ab2cb2c828e2791aa" translate="yes" xml:space="preserve">
          <source>Restart your Jekyll server and check these tags are added to the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">重新启动您的Jekyll服务器，并检查这些标记是否已添加到 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="9d109ba303d84558994353980506a93c0a6fa42b" translate="yes" xml:space="preserve">
          <source>Restart your terminal to apply your changes. Next, you can install the Ruby version you want. Let&amp;rsquo;s install the latest stable version:</source>
          <target state="translated">重新启动终端以应用您的更改。接下来，您可以安装所需的Ruby版本。让我们安装最新的稳定版本：</target>
        </trans-unit>
        <trans-unit id="923c13dfdb01db0d8d459f4097e5f218f81132eb" translate="yes" xml:space="preserve">
          <source>Resulting Permalink URL</source>
          <target state="translated">结果的Permalink URL</target>
        </trans-unit>
        <trans-unit id="9b8b4aa7396147c97e09b74b6be8158c0f9b4bc0" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;the first object&lt;/strong&gt; in an array for which the given expression evaluates to true or return &lt;code&gt;nil&lt;/code&gt; if no item in the array satisfies the evaluated expression. 4.1.0</source>
          <target state="translated">返回给定表达式为真的数组中&lt;strong&gt;的第一个对象&lt;/strong&gt;，如果数组中没有项满足所求表达式，则返回 &lt;code&gt;nil&lt;/code&gt; 。4.1.0</target>
        </trans-unit>
        <trans-unit id="dff42825f661946e67099b96f24920f31680578e" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;the first object&lt;/strong&gt; in an array for which the queried attribute has the given value or return &lt;code&gt;nil&lt;/code&gt; if no item in the array satisfies the given criteria. 4.1.0</source>
          <target state="translated">返回其查询属性具有给定值的数组中&lt;strong&gt;的第一个对象&lt;/strong&gt;，如果数组中没有项满足给定条件，则返回 &lt;code&gt;nil&lt;/code&gt; 。4.1.0</target>
        </trans-unit>
        <trans-unit id="527956f387317b7b80266ebb8593d4e1db18df21" translate="yes" xml:space="preserve">
          <source>Rsync is similar to scp except it can be faster as it will only send changed parts of files as opposed to the entire file. You can learn more about using rsync in the &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-use-rsync-to-sync-local-and-remote-directories-on-a-vps&quot;&gt;Digital Ocean tutorial&lt;/a&gt;.</source>
          <target state="translated">Rsync与scp相似，不同之处在于Rsync可以更快，因为它仅发送文件的更改部分而不是整个文件。您可以在&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-use-rsync-to-sync-local-and-remote-directories-on-a-vps&quot;&gt;Digital Ocean教程中&lt;/a&gt;了解有关使用rsync的更多信息。</target>
        </trans-unit>
        <trans-unit id="5f08fff91831ea6f0172019f874d4040c849e866" translate="yes" xml:space="preserve">
          <source>Ruby 101</source>
          <target state="translated">Ruby 101</target>
        </trans-unit>
        <trans-unit id="5898ae2f1d23782ebd27452a9411246e96dfd540" translate="yes" xml:space="preserve">
          <source>Ruby version &lt;strong&gt;2.4.0&lt;/strong&gt; or higher</source>
          <target state="translated">Ruby &lt;strong&gt;2.4.0&lt;/strong&gt;或更高版本</target>
        </trans-unit>
        <trans-unit id="06549232577315309549578ede081abf3b92fb09" translate="yes" xml:space="preserve">
          <source>Ruby version &lt;strong&gt;2.5.0&lt;/strong&gt; or higher</source>
          <target state="translated">Ruby &lt;strong&gt;2.5.0&lt;/strong&gt;或更高版本</target>
        </trans-unit>
        <trans-unit id="37714db0a3a1e5a5a39df62af011f7a7c779fbe0" translate="yes" xml:space="preserve">
          <source>RubyGems</source>
          <target state="translated">RubyGems</target>
        </trans-unit>
        <trans-unit id="f57ce1ac70130fc065fda9a1c25fbb12c704f24f" translate="yes" xml:space="preserve">
          <source>RubyInstaller is a self-contained Windows-based installer that includes the Ruby language, an execution environment, important documentation, and more.</source>
          <target state="translated">RubyInstaller是一个独立的基于Windows的安装程序,它包括Ruby语言、执行环境、重要文档等。</target>
        </trans-unit>
        <trans-unit id="42dd9b3596a741398732c30d4508cf29afde284f" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;JEKYLL_ENV=production bundle exec jekyll build&lt;/code&gt;.</source>
          <target state="translated">运行 &lt;code&gt;JEKYLL_ENV=production bundle exec jekyll build&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="515abd7adc56dcc3c2a557f7699a671fde0d385c" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;bundle info --path&lt;/code&gt; followed by the name of the theme&amp;rsquo;s gem, e.g., &lt;code&gt;bundle info --path minima&lt;/code&gt; for Jekyll&amp;rsquo;s default theme.</source>
          <target state="translated">运行 &lt;code&gt;bundle info --path&lt;/code&gt; ,后跟主题gem的名称，例如，Jekyll默认主题的 &lt;code&gt;bundle info --path minima&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cdf9c1263cd6f0e3fa45f26660812dfd4d4cf1a0" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;bundle show&lt;/code&gt; followed by the name of the theme&amp;rsquo;s gem, e.g., &lt;code&gt;bundle show minima&lt;/code&gt; for Jekyll&amp;rsquo;s default theme.</source>
          <target state="translated">运行 &lt;code&gt;bundle show&lt;/code&gt; 然后输入主题宝石的名称，例如，Jekyll默认主题的 &lt;code&gt;bundle show minima&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f37277863bf7ecbf5e4771d071b77d1c408284ba" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;jekyll serve&lt;/code&gt; and go to &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; in your browser. You should see &amp;ldquo;Hello World!&amp;rdquo;.</source>
          <target state="translated">运行 &lt;code&gt;jekyll serve&lt;/code&gt; ，然后在浏览器中转到&lt;a href=&quot;http://localhost:4000&quot;&gt;http：// localhost：4000&lt;/a&gt;。您应该看到&amp;ldquo; Hello World！&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a37a37795eb163ad64218878025b423e3ddeb562" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;ridk install&lt;/code&gt; step on the last stage of the installation wizard. This is needed for installing gems with native extensions. You can find additional information regarding this in the &lt;a href=&quot;https://github.com/oneclick/rubyinstaller2#using-the-installer-on-a-target-system&quot;&gt;RubyInstaller Documentation&lt;/a&gt;</source>
          <target state="translated">在安装向导的最后阶段运行 &lt;code&gt;ridk install&lt;/code&gt; 步骤。这是安装具有本地扩展名的gem所必需的。您可以在&lt;a href=&quot;https://github.com/oneclick/rubyinstaller2#using-the-installer-on-a-target-system&quot;&gt;RubyInstaller文档中&lt;/a&gt;找到与此有关的其他信息。</target>
        </trans-unit>
        <trans-unit id="247f6e4943c76c92b5c6c8d51b7623da37673dc0" translate="yes" xml:space="preserve">
          <source>Run:</source>
          <target state="translated">Run:</target>
        </trans-unit>
        <trans-unit id="317fe2ae2325d58fcdafd22991bff0a74c5d694e" translate="yes" xml:space="preserve">
          <source>Running Jekyll as Non-Superuser (no sudo!)</source>
          <target state="translated">以非超级用户的身份运行Jekyll(没有sudo!)。</target>
        </trans-unit>
        <trans-unit id="beff04c64d0f6b81d8fe8635f88e6d58d26d3b7e" translate="yes" xml:space="preserve">
          <source>Running Jekyll on Windows</source>
          <target state="translated">在Windows上运行Jekyll</target>
        </trans-unit>
        <trans-unit id="1917a1b7c57442b0abec6c6d3635a1784c44075e" translate="yes" xml:space="preserve">
          <source>SSL Private Key, stored or symlinked in the site source.</source>
          <target state="translated">SSL私钥,存储在网站源码中,或有符号链接。</target>
        </trans-unit>
        <trans-unit id="fd6893c5df8321462d97d7ab4d7ffb44371f653f" translate="yes" xml:space="preserve">
          <source>SSL Private Key.</source>
          <target state="translated">SSL私钥。</target>
        </trans-unit>
        <trans-unit id="49428deaf3b1c7537a4f13085019a70e4f7a2774" translate="yes" xml:space="preserve">
          <source>SSL Public certificate, stored or symlinked in the site source.</source>
          <target state="translated">SSL 公共证书,存储在网站源码中或有符号链接。</target>
        </trans-unit>
        <trans-unit id="69593d32c8bd589fe3bdfdfcc8f82e007508a15d" translate="yes" xml:space="preserve">
          <source>SSL Public certificate.</source>
          <target state="translated">SSL公共证书。</target>
        </trans-unit>
        <trans-unit id="b6eeeb3abd2a7bc179a6b6d5c56488b5f8c903a7" translate="yes" xml:space="preserve">
          <source>Sass</source>
          <target state="translated">Sass</target>
        </trans-unit>
        <trans-unit id="403818fcda992599fe7e358f0111951e6b7990f3" translate="yes" xml:space="preserve">
          <source>Sass/SCSS</source>
          <target state="translated">Sass/SCSS</target>
        </trans-unit>
        <trans-unit id="03e3e4e01b772344104f35b3b89ee3d97d138085" translate="yes" xml:space="preserve">
          <source>Save the commands you want to run and succeed in a file: &lt;code&gt;./script/cibuild&lt;/code&gt;</source>
          <target state="translated">将要运行的命令保存并在文件中成功： &lt;code&gt;./script/cibuild&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="334d78d442abb00a5b6eb0f19ae76079d1b2d11e" translate="yes" xml:space="preserve">
          <source>Second of the minute from the post&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter. (00..59)</source>
          <target state="translated">帖子 &lt;code&gt;date&lt;/code&gt; 前的第二分钟。（00..59）</target>
        </trans-unit>
        <trans-unit id="b3bf564e18f6ba1be5df476d386f16a478d2fdaf" translate="yes" xml:space="preserve">
          <source>Second of the minute from the post's &lt;code&gt;date&lt;/code&gt; front matter. (00..59)</source>
          <target state="translated">帖子 &lt;code&gt;date&lt;/code&gt; 前的第二分钟。（00..59）</target>
        </trans-unit>
        <trans-unit id="fc6eef192c265c5fbe372bcc71e29649ae2d0162" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#extensionless-permalinks&quot;&gt;Extensionless permalinks with no trailing slashes&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;#extensionless-permalinks&quot;&gt;不带斜杠的无扩展名永久链接&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="51d52269689be5e8da217cb94564ce864e00b526" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../troubleshooting/index&quot;&gt;Troubleshooting&lt;/a&gt; or &lt;a href=&quot;https://talk.jekyllrb.com&quot;&gt;ask for help on our forum&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;../../troubleshooting/index&quot;&gt;故障排除&lt;/a&gt;或&lt;a href=&quot;https://talk.jekyllrb.com&quot;&gt;在我们的论坛上寻求帮助&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f696e9e49f78c4279d1e807100203c937410e91f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://jekyllrb.com/tutorials/using-jekyll-with-bundler/&quot;&gt;Using Jekyll with Bundler&lt;/a&gt; for more information about Bundler in Jekyll and for instructions to get up and running quickly.</source>
          <target state="translated">有关在&lt;a href=&quot;https://jekyllrb.com/tutorials/using-jekyll-with-bundler/&quot;&gt;Jekyll中使用Bundler&lt;/a&gt;的更多信息，以及如何快速启动和运行的说明，请参阅与Bundler一起使用Jekyll。</target>
        </trans-unit>
        <trans-unit id="e152d461c73cd4bb89297d29631b4e47f8c798e6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;installation/index#requirements&quot;&gt;Requirements&lt;/a&gt; for guides and details.</source>
          <target state="translated">有关指南和详细信息，请参见&lt;a href=&quot;installation/index#requirements&quot;&gt;要求&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d7eea797b5b5fde14868225b445a5e810676d882" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;https://jekyllrb.com/resources/&quot;&gt;resources&lt;/a&gt;.</source>
          <target state="translated">另请参阅：&lt;a href=&quot;https://jekyllrb.com/resources/&quot;&gt;资源&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d0ed49f1b1bfb0227d18ee3709c5bada3c413cb2" translate="yes" xml:space="preserve">
          <source>See the Markdown section on the &lt;a href=&quot;../configuration/index#markdown-options&quot;&gt;configuration page&lt;/a&gt; for instructions on how to use and configure alternative Markdown processors, as well as how to create &lt;a href=&quot;../configuration/index#custom-markdown-processors&quot;&gt;custom processors&lt;/a&gt;.</source>
          <target state="translated">有关如何使用和配置备用Markdown处理器以及如何创建&lt;a href=&quot;../configuration/index#custom-markdown-processors&quot;&gt;自定义处理器的&lt;/a&gt;说明，请参见&lt;a href=&quot;../configuration/index#markdown-options&quot;&gt;配置页面&lt;/a&gt;上的Markdown部分。</target>
        </trans-unit>
        <trans-unit id="407b2742f09d00df370600915619012740c16c28" translate="yes" xml:space="preserve">
          <source>See the bottom of the page for a &lt;a href=&quot;#available-plugins&quot;&gt;list of available plugins&lt;/a&gt;</source>
          <target state="translated">请参阅页面底部&lt;a href=&quot;#available-plugins&quot;&gt;以获取可用插件列表&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53035dc8dfea2f8f41cca4298269e254fb5e0e1e" translate="yes" xml:space="preserve">
          <source>Select all the objects in an array where the expression is true. 3.2.0</source>
          <target state="translated">选择数组中表达式为真的所有对象。3.2.0</target>
        </trans-unit>
        <trans-unit id="5fb9e19dcae18c354f279dfca194fb7e744d9c04" translate="yes" xml:space="preserve">
          <source>Select all the objects in an array where the expression is true. Jekyll v3.2.0 &amp;amp; later.</source>
          <target state="translated">选择表达式为真的数组中的所有对象。Jekyll v3.2.0及更高版本。</target>
        </trans-unit>
        <trans-unit id="e891926616342130195a7bfdb38be815b06f2efc" translate="yes" xml:space="preserve">
          <source>Select all the objects in an array where the key has the given value.</source>
          <target state="translated">选择数组中键值为给定值的所有对象。</target>
        </trans-unit>
        <trans-unit id="3d815a597f6d668bf34e59ed4ebae5e997991203" translate="yes" xml:space="preserve">
          <source>Self-managed web server</source>
          <target state="translated">自我管理的网络服务器</target>
        </trans-unit>
        <trans-unit id="a55557d1c98bb9f9498deb01f8e31c77291e6c39" translate="yes" xml:space="preserve">
          <source>Serve Command Options</source>
          <target state="translated">服务命令选项</target>
        </trans-unit>
        <trans-unit id="151827014ed21e518e47c1dd2a1e084435edc564" translate="yes" xml:space="preserve">
          <source>Serve the website from the given base URL</source>
          <target state="translated">从给定的基础URL中为网站提供服务</target>
        </trans-unit>
        <trans-unit id="10c65177b9457f21492b30d74ecd3fa029ff4282" translate="yes" xml:space="preserve">
          <source>Serve the website from the given base URL.</source>
          <target state="translated">从给定的基础URL中为网站提供服务。</target>
        </trans-unit>
        <trans-unit id="fe836fe66a8def4677b55312b9d11c2ab2519a3f" translate="yes" xml:space="preserve">
          <source>Set defaults for &lt;a href=&quot;../../front-matter/index&quot;&gt;front matter&lt;/a&gt; variables.</source>
          <target state="translated">设置&lt;a href=&quot;../../front-matter/index&quot;&gt;前项&lt;/a&gt;变量的默认值。</target>
        </trans-unit>
        <trans-unit id="ddd9fcb8b5f6b9210f6b261a822acb9326466b09" translate="yes" xml:space="preserve">
          <source>Set defaults for &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt; variables.</source>
          <target state="translated">设置&lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;变量的默认值。</target>
        </trans-unit>
        <trans-unit id="5d6059aac8e4da20dbf9808420e1330fbe575e19" translate="yes" xml:space="preserve">
          <source>Set the encoding of files by name (only available for Ruby 1.9 or later). The default value is &lt;code&gt;utf-8&lt;/code&gt; starting in 2.0.0, and &lt;code&gt;nil&lt;/code&gt; before 2.0.0, which will yield the Ruby default of &lt;code&gt;ASCII-8BIT&lt;/code&gt;. Available encodings can be shown by the command &lt;code&gt;ruby -e 'puts Encoding::list.join(&quot;\n&quot;)'&lt;/code&gt;.</source>
          <target state="translated">按名称设置文件的编码（仅适用于Ruby 1.9或更高版本）。默认值是 &lt;code&gt;utf-8&lt;/code&gt; ,从2.0.0开始，而 &lt;code&gt;nil&lt;/code&gt; 在2.0.0之前，这将产生Ruby默认值 &lt;code&gt;ASCII-8BIT&lt;/code&gt; 。可用的编码可以通过命令 &lt;code&gt;ruby -e 'puts Encoding::list.join(&quot;\n&quot;)'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad2e00718f76e97a0b0faf2b6b523e7f331b76b2" translate="yes" xml:space="preserve">
          <source>Set the time zone for site generation. This sets the &lt;code&gt;TZ&lt;/code&gt; environment variable, which Ruby uses to handle time and date creation and manipulation. Any entry from the &lt;a href=&quot;https://en.wikipedia.org/wiki/Tz_database&quot;&gt;IANA Time Zone Database&lt;/a&gt; is valid, e.g. &lt;code&gt;America/New_York&lt;/code&gt;. A list of all available values can be found &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt; here&lt;/a&gt;. When serving on a local machine, the default time zone is set by your operating system. But when served on a remote host/server, the default time zone depends on the server's setting or location.</source>
          <target state="translated">设置网站生成的时区。这将设置 &lt;code&gt;TZ&lt;/code&gt; 环境变量，Ruby使用它来处理时间和日期的创建和操作。&lt;a href=&quot;https://en.wikipedia.org/wiki/Tz_database&quot;&gt;IANA时区数据库中的&lt;/a&gt;任何条目都是有效的，例如 &lt;code&gt;America/New_York&lt;/code&gt; 。可在&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;此处&lt;/a&gt;找到所有可用值的列表。在本地计算机上服务时，默认时区由您的操作系统设置。但是，当在远程主机/服务器上提供服务时，默认时区取决于服务器的设置或位置。</target>
        </trans-unit>
        <trans-unit id="397402a9c35e59ca7d02dc0b5c6391349ef8fd3e" translate="yes" xml:space="preserve">
          <source>Set to false if you don&amp;rsquo;t want a specific post to show up when the site is generated.</source>
          <target state="translated">如果您不希望在生成网站时显示特定帖子，则设置为false。</target>
        </trans-unit>
        <trans-unit id="aabe9cc67d26e20183256e1ecf388980a51be9a2" translate="yes" xml:space="preserve">
          <source>Set your production URL in &lt;code&gt;_config.yml&lt;/code&gt; e.g. &lt;code&gt;url: https://example.com&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;_config.yml&lt;/code&gt; 中设置您的生产URL，例如 &lt;code&gt;url: https://example.com&lt;/code&gt; //example.com。</target>
        </trans-unit>
        <trans-unit id="fb449f71834cd30ec14d00c9d50ba85c232186d3" translate="yes" xml:space="preserve">
          <source>Setting</source>
          <target state="translated">Setting</target>
        </trans-unit>
        <trans-unit id="a6d2c27ce53f80ffa0bc57f5fba0fa8750a55150" translate="yes" xml:space="preserve">
          <source>Setting a permalink in front matter for every page on your site is no fun. Luckily, Jekyll lets you set the permalink structure globally in your &lt;code&gt;_config.yml&lt;/code&gt;.</source>
          <target state="translated">在您网站上每个页面的最前面设置一个永久链接是没有意思的。幸运的是，Jekyll允许您在 &lt;code&gt;_config.yml&lt;/code&gt; 中全局设置永久链接结构。</target>
        </trans-unit>
        <trans-unit id="2c7a32ce81e15370a8e65448d08bcb2735e4aae2" translate="yes" xml:space="preserve">
          <source>Setting a permalink in the front matter of your blog page will cause pagination to break. Just omit the permalink.</source>
          <target state="translated">在博客页面的前部设置永久地址会导致分页中断。只需省略永久地址即可。</target>
        </trans-unit>
        <trans-unit id="992e693339c0d4ef08f55b83204c30110f4168dc" translate="yes" xml:space="preserve">
          <source>Setting permalink styles in your configuration file applies the setting globally in your project. You configure permalinks in your &lt;code&gt;_config.yml&lt;/code&gt; file like this:</source>
          <target state="translated">在配置文件中设置永久链接样式会在您的项目中全局应用该设置。您可以在 &lt;code&gt;_config.yml&lt;/code&gt; 文件中配置永久链接，如下所示：</target>
        </trans-unit>
        <trans-unit id="18a051fab47eef17a471bd5c9de81afafe2c1156" translate="yes" xml:space="preserve">
          <source>Setting the permalink in your post, page, or collection&amp;rsquo;s front matter overrides any global settings. Here&amp;rsquo;s an example:</source>
          <target state="translated">在帖子，页面或收藏集的首页中设置永久链接会覆盖所有全局设置。这是一个例子：</target>
        </trans-unit>
        <trans-unit id="b428a34c4ccaf643d1aeff837a4dce1c96cf704b" translate="yes" xml:space="preserve">
          <source>Setting up Kickster is very easy, just install the gem and you are good to go. More documentation can here found &lt;a href=&quot;https://github.com/nielsenramon/kickster#kickster&quot;&gt;here&lt;/a&gt;. If you do not want to use the gem or start a new project you can just copy paste the deployment scripts for &lt;a href=&quot;https://github.com/nielsenramon/kickster/tree/master/snippets/travis&quot;&gt;Travis CI&lt;/a&gt; or &lt;a href=&quot;https://github.com/nielsenramon/kickster#automated-deployment-with-circle-ci&quot;&gt;Circle CI&lt;/a&gt;.</source>
          <target state="translated">设置Kickster非常容易，只需安装gem即可。在&lt;a href=&quot;https://github.com/nielsenramon/kickster#kickster&quot;&gt;这里&lt;/a&gt;可以找到更多文档。如果您不想使用gem或启动新项目，则只需复制粘贴&lt;a href=&quot;https://github.com/nielsenramon/kickster/tree/master/snippets/travis&quot;&gt;Travis CI&lt;/a&gt;或&lt;a href=&quot;https://github.com/nielsenramon/kickster#automated-deployment-with-circle-ci&quot;&gt;Circle CI&lt;/a&gt;的部署脚本即可。</target>
        </trans-unit>
        <trans-unit id="79cff9dae81675db3f02a4f885ef68b6810fccaa" translate="yes" xml:space="preserve">
          <source>Setting up the Action</source>
          <target state="translated">设置行动</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">Setup</target>
        </trans-unit>
        <trans-unit id="d1d6ac7e4a569a5bc600abd6c2fca28a540d604d" translate="yes" xml:space="preserve">
          <source>Show a directory listing instead of loading your index file.</source>
          <target state="translated">显示一个目录列表,而不是加载你的索引文件。</target>
        </trans-unit>
        <trans-unit id="cf9864c8b1966bf3bea36185057597999467de9e" translate="yes" xml:space="preserve">
          <source>Show the full backtrace when an error occurs.</source>
          <target state="translated">当发生错误时,显示完整的回溯。</target>
        </trans-unit>
        <trans-unit id="e94fb23c5bf40b730ab355584794c83b05cb43c8" translate="yes" xml:space="preserve">
          <source>Silence the normal output from Jekyll during a build</source>
          <target state="translated">在构建过程中屏蔽Jekyll的正常输出。</target>
        </trans-unit>
        <trans-unit id="d7e1e1aecc3faa80daf33fd4b97cf5d12eb4d564" translate="yes" xml:space="preserve">
          <source>Silence the normal output from Jekyll during a build.</source>
          <target state="translated">在构建过程中,沉默Jekyll的正常输出。</target>
        </trans-unit>
        <trans-unit id="28aeb1618225d767e4382b29ab4dde547b848b72" translate="yes" xml:space="preserve">
          <source>Similar to categories, one or multiple tags can be added to a post. Also like categories, tags can be specified as a &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;YAML list&lt;/a&gt; or a space-separated string.</source>
          <target state="translated">与类别相似，可以将一个或多个标签添加到帖子中。与类别一样，标签也可以指定为&lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;YAML列表&lt;/a&gt;或以空格分隔的字符串。</target>
        </trans-unit>
        <trans-unit id="14d825cf30342e6bc78ecc4d3eef9e9271ed41f8" translate="yes" xml:space="preserve">
          <source>Simple Form</source>
          <target state="translated">简单表格</target>
        </trans-unit>
        <trans-unit id="3e1cdd67641592c294ce605e4b3f32a11b2d0d6e" translate="yes" xml:space="preserve">
          <source>Simply adding &lt;code&gt;vendor/bundle&lt;/code&gt; to the &lt;code&gt;exclude:&lt;/code&gt; list will solve this problem but will lead to having other sub-directories under &lt;code&gt;/vendor/&lt;/code&gt; (and also &lt;code&gt;/node_modules/&lt;/code&gt;, if present) be processed to the destination folder &lt;code&gt;_site&lt;/code&gt;.</source>
          <target state="translated">只需将 &lt;code&gt;vendor/bundle&lt;/code&gt; 添加到 &lt;code&gt;exclude:&lt;/code&gt; 列表即可解决此问题，但会导致将 &lt;code&gt;/vendor/&lt;/code&gt; 下的其他子目录（以及 &lt;code&gt;/node_modules/&lt;/code&gt; ，如果存在）处理到目标文件夹 &lt;code&gt;_site&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3a1d430b34fa1ad3689dc38703f6f20b93023caa" translate="yes" xml:space="preserve">
          <source>Since Jekyll 4.0 , you don&amp;rsquo;t need to prepend &lt;code&gt;link&lt;/code&gt; and &lt;code&gt;post_url&lt;/code&gt; tags with &lt;code&gt;site.baseurl&lt;/code&gt;.</source>
          <target state="translated">从Jekyll 4.0开始，您无需在 &lt;code&gt;link&lt;/code&gt; 和 &lt;code&gt;post_url&lt;/code&gt; 标记之前添加 &lt;code&gt;site.baseurl&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46ffe064aad40f271e5c35fab046c885357149dd" translate="yes" xml:space="preserve">
          <source>Since Jekyll expects multiple items mapped to the key &lt;code&gt;tags&lt;/code&gt;, it will automatically &lt;em&gt;split&lt;/em&gt; a string entry if it contains whitespace. For example, while front matter &lt;code&gt;tag: classic hollywood&lt;/code&gt; will be processed into a singular entity &lt;code&gt;&quot;classic hollywood&quot;&lt;/code&gt;, front matter &lt;code&gt;tags: classic hollywood&lt;/code&gt; will be processed into an array of entries &lt;code&gt;[&quot;classic&quot;, &quot;hollywood&quot;]&lt;/code&gt;.</source>
          <target state="translated">由于Jekyll希望将多个项目映射到键 &lt;code&gt;tags&lt;/code&gt; ，因此如果包含空格，它将自动&lt;em&gt;拆分&lt;/em&gt;一个字符串条目。例如，当前物 &lt;code&gt;tag: classic hollywood&lt;/code&gt; 将被处理成单个实体 &lt;code&gt;&quot;classic hollywood&quot;&lt;/code&gt; ，前物 &lt;code&gt;tags: classic hollywood&lt;/code&gt; 将被处理成一系列条目 &lt;code&gt;[&quot;classic&quot;, &quot;hollywood&quot;]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="872175047ef192c97b7383240a99a200caa37c6e" translate="yes" xml:space="preserve">
          <source>Since Windows doesn&amp;rsquo;t have a native source of zoneinfo data, the Ruby Interpreter doesn&amp;rsquo;t understand IANA Timezones. Using them had the &lt;code&gt;TZ&lt;/code&gt; environment variable default to UTC/GMT 00:00.</source>
          <target state="translated">由于Windows没有zoneinfo数据的本地来源，因此Ruby Interpreter无法理解IANA时区。使用它们时， &lt;code&gt;TZ&lt;/code&gt; 环境变量默认为UTC / GMT 00:00。</target>
        </trans-unit>
        <trans-unit id="e94c1b03ed8322a8a017fbe30f42fca0a9fcc07b" translate="yes" xml:space="preserve">
          <source>Since Windows doesn&amp;rsquo;t have a native source of zoneinfo data, the Ruby Interpreter would not understand IANA Timezones and hence using them had the &lt;code&gt;TZ&lt;/code&gt; environment variable default to UTC/GMT 00:00. Though Windows users could alternatively define their blog&amp;rsquo;s timezone by setting the key to use POSIX format of defining timezones, it wasn&amp;rsquo;t as user-friendly when it came to having the clock altered to changing DST-rules.</source>
          <target state="translated">由于Windows没有区域信息数据的本地来源，因此Ruby解释器将无法理解IANA时区，因此使用它们时， &lt;code&gt;TZ&lt;/code&gt; 环境变量的默认值是UTC / GMT 00:00。尽管Windows用户可以通过设置键来使用定义时区的POSIX格式来定义博客的时区，但是在将时钟更改为更改DST规则时，它并不友好。</target>
        </trans-unit>
        <trans-unit id="9f1707e621eb2440dca25f767a53b48da55a9bc7" translate="yes" xml:space="preserve">
          <source>Since the content is markdown, you need to run it through the &lt;code&gt;markdownify&lt;/code&gt; filter. This happens automatically when outputting using &lt;code&gt;{{ content }}&lt;/code&gt; in a layout.</source>
          <target state="translated">由于内容是markdown，因此您需要通过 &lt;code&gt;markdownify&lt;/code&gt; 过滤器运行它。在布局中使用 &lt;code&gt;{{ content }}&lt;/code&gt; 输出时，会自动发生这种情况。</target>
        </trans-unit>
        <trans-unit id="9d35bf67ea68dbdbbea589d77108d31fe53bc64f" translate="yes" xml:space="preserve">
          <source>Since v1.0.0, Jekyll has had automatically-generated post excerpts. Since v1.1.0, Jekyll also passes these excerpts through Liquid, which can cause strange errors where references don&amp;rsquo;t exist or a tag hasn&amp;rsquo;t been closed. If you run into these errors, try setting &lt;code&gt;excerpt_separator: &quot;&quot;&lt;/code&gt; in your &lt;code&gt;_config.yml&lt;/code&gt;, or set it to some nonsense string.</source>
          <target state="translated">从v1.0.0开始，Jekyll拥有自动生成的摘录。从v1.1.0版本开始，Jekyll还将这些摘录通过Liquid传递，这会在不存在引用或未关闭标签的地方引起奇怪的错误。如果遇到这些错误，请尝试在 &lt;code&gt;_config.yml&lt;/code&gt; 中设置 &lt;code&gt;excerpt_separator: &quot;&quot;&lt;/code&gt; 或将其设置为一些无意义的字符串。</target>
        </trans-unit>
        <trans-unit id="83b609e0c4a8f295e18671ed4efd059732715ca7" translate="yes" xml:space="preserve">
          <source>Since v2, CircleCI is a Docker-based system. The example &lt;code&gt;circle.yml&lt;/code&gt; below demonstrates how to deploy your Jekyll project to AWS. In order for this to work you would first have to set the &lt;code&gt;S3_BUCKET_NAME&lt;/code&gt;&lt;a href=&quot;https://circleci.com/docs/2.0/env-vars/&quot;&gt;environment variable&lt;/a&gt;.</source>
          <target state="translated">从v2开始，CircleCI是基于Docker的系统。下面的示例 &lt;code&gt;circle.yml&lt;/code&gt; 演示了如何将Jekyll项目部署到AWS。为了 &lt;code&gt;S3_BUCKET_NAME&lt;/code&gt; 起作用，您首先必须设置S3_BUCKET_NAME&lt;a href=&quot;https://circleci.com/docs/2.0/env-vars/&quot;&gt;环境变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8dd9deeb3171ac9f02e0bf5dc4f51cefd4afffb4" translate="yes" xml:space="preserve">
          <source>Since v3.2 Jekyll requires Ruby version &amp;gt;= 2.1</source>
          <target state="translated">由于v3.2 Jekyll需要Ruby版本&amp;gt; = 2.1</target>
        </trans-unit>
        <trans-unit id="0f162d4e1a4087f93e51361e86d1b20bf4f12854" translate="yes" xml:space="preserve">
          <source>Since version 3.2 , a new Jekyll project bootstrapped with &lt;code&gt;jekyll new&lt;/code&gt; uses &lt;a href=&quot;../themes/index&quot;&gt;gem-based themes&lt;/a&gt; to define the look of the site. This results in a lighter default directory structure: &lt;code&gt;_layouts&lt;/code&gt;, &lt;code&gt;_includes&lt;/code&gt; and &lt;code&gt;_sass&lt;/code&gt; are stored in the theme-gem, by default.</source>
          <target state="translated">从3.2版开始，使用 &lt;code&gt;jekyll new&lt;/code&gt; 引导的新Jekyll项目使用&lt;a href=&quot;../themes/index&quot;&gt;基于gem的主题&lt;/a&gt;来定义站点的外观。这导致了一个打火机默认目录结构： &lt;code&gt;_layouts&lt;/code&gt; ， &lt;code&gt;_includes&lt;/code&gt; 和 &lt;code&gt;_sass&lt;/code&gt; 存储在主题宝石，默认情况下。</target>
        </trans-unit>
        <trans-unit id="221272afe50657f534be4008a80964851eabf9c2" translate="yes" xml:space="preserve">
          <source>Site Structure</source>
          <target state="translated">场地结构</target>
        </trans-unit>
        <trans-unit id="06f588e3316d35a20373813bbf802b855ffd9ff8" translate="yes" xml:space="preserve">
          <source>Site Variables</source>
          <target state="translated">站点变量</target>
        </trans-unit>
        <trans-unit id="9d9b9c2238600c4e1cb925df1d00bd97477e8165" translate="yes" xml:space="preserve">
          <source>Site wide information + configuration settings from &lt;code&gt;_config.yml&lt;/code&gt;. See below for details.</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; 中的站点范围信息和配置设置。有关详情，请参见下文。</target>
        </trans-unit>
        <trans-unit id="d59f859ae693e44288b2fd0d29b0027af35a8e59" translate="yes" xml:space="preserve">
          <source>Sites built using Jekyll can be deployed in a large number of ways due to the static nature of the generated output. A few of the most common deployment techniques are described below.</source>
          <target state="translated">由于生成的输出是静态的,因此使用Jekyll建立的网站可以以多种方式进行部署。下面介绍几种最常见的部署技术。</target>
        </trans-unit>
        <trans-unit id="46785df6728cd439e3e0c7233138c94947e55a98" translate="yes" xml:space="preserve">
          <source>Sites built using Jekyll can be deployed in a large number of ways due to the static nature of the generated output. Here&amp;rsquo;s some of the most common ways:</source>
          <target state="translated">由于生成的输出具有静态特性，因此可以以多种方式部署使用Jekyll构建的站点。以下是一些最常见的方法：</target>
        </trans-unit>
        <trans-unit id="1f216d432619708fd99198012efacb408b4177b0" translate="yes" xml:space="preserve">
          <source>Sites on GitHub Pages are powered by Jekyll behind the scenes, so if you&amp;rsquo;re looking for a zero-hassle, zero-cost solution, GitHub Pages are a great way to &lt;a href=&quot;../../github-pages/index&quot;&gt;host your Jekyll-powered website for free&lt;/a&gt;.</source>
          <target state="translated">GitHub Pages上的站点由Jekyll在后台提供支持，因此，如果您正在寻找零麻烦，零成本的解决方案，则GitHub Pages是&lt;a href=&quot;../../github-pages/index&quot;&gt;免费托管基于Jekyll的网站&lt;/a&gt;的绝佳方法。</target>
        </trans-unit>
        <trans-unit id="25ab26fb20316eb0822bfb7c45427c236f62eb29" translate="yes" xml:space="preserve">
          <source>Sitewide information + configuration settings from &lt;code&gt;_config.yml&lt;/code&gt;. See below for details.</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; 中的站点范围信息和配置设置。有关详情，请参见下文。</target>
        </trans-unit>
        <trans-unit id="5dee56420e4fd48148e2139c320ed1f3befc909b" translate="yes" xml:space="preserve">
          <source>Skips the initial site build which occurs before the server is started.</source>
          <target state="translated">跳过服务器启动前发生的初始站点构建。</target>
        </trans-unit>
        <trans-unit id="79d09d3aa3ef2b829995125702ca303ae5d1fc89" translate="yes" xml:space="preserve">
          <source>Slugified title from the document&amp;rsquo;s filename (any character except numbers and letters is replaced as hyphen). May be overridden via the document&amp;rsquo;s &lt;code&gt;slug&lt;/code&gt; YAML front matter.</source>
          <target state="translated">文档文件名中的标题标题（数字和字母以外的任何字符均替换为连字符）。通过文档可能会被改写 &lt;code&gt;slug&lt;/code&gt; YAML前面的问题。</target>
        </trans-unit>
        <trans-unit id="5814edc81458d0fc07b197bd3a59987bfb5e3e8b" translate="yes" xml:space="preserve">
          <source>Slugified title from the document&amp;rsquo;s filename (any character except numbers and letters is replaced as hyphen). May be overridden via the document&amp;rsquo;s &lt;code&gt;slug&lt;/code&gt; front matter.</source>
          <target state="translated">文档文件名中的标题标题（数字和字母以外的任何字符均替换为连字符）。通过文档可能会被改写 &lt;code&gt;slug&lt;/code&gt; 前的事。</target>
        </trans-unit>
        <trans-unit id="08eb389c8842b3829ba25ab6f0a7e93b06883e03" translate="yes" xml:space="preserve">
          <source>So what is Jekyll, exactly?</source>
          <target state="translated">那么,Jekyll到底是什么?</target>
        </trans-unit>
        <trans-unit id="959902ab7eab3b5bc6560f8469e059707c56b409" translate="yes" xml:space="preserve">
          <source>So, from your assets folder, create folders called css, images and js. Additionally, directly under the root create another folder called &amp;lsquo;_sass&amp;rsquo;, which you will need shortly.</source>
          <target state="translated">因此，在您的资产文件夹中，创建名为css，images和js的文件夹。此外，直接在根目录下创建另一个名为&amp;ldquo; _sass&amp;rdquo;的文件夹，您很快将需要它。</target>
        </trans-unit>
        <trans-unit id="4172abb34224416683b49d016ababcfd7a9c09f7" translate="yes" xml:space="preserve">
          <source>Some options can be specified via command-line switches. Check out the &lt;code&gt;html-proofer&lt;/code&gt; README for more information about these switches, or run &lt;code&gt;htmlproofer --help&lt;/code&gt; locally.</source>
          <target state="translated">可以通过命令行开关指定某些选项。查看 &lt;code&gt;html-proofer&lt;/code&gt; 自述文件以获取有关这些开关的更多信息，或在本地运行 &lt;code&gt;htmlproofer --help&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c35f843892fcc99c411038c0eb0d44c906167b1a" translate="yes" xml:space="preserve">
          <source>Some pieces of this website are for future versions of Jekyll that are not yet released.</source>
          <target state="translated">本网站的部分作品是针对未来尚未发布的Jekyll版本。</target>
        </trans-unit>
        <trans-unit id="3a6cd910baa7cd095835fa8f94b70ab93e3fbd2d" translate="yes" xml:space="preserve">
          <source>Sometimes it&amp;rsquo;s nice to preview your Jekyll site before you push your &lt;code&gt;gh-pages&lt;/code&gt; branch to GitHub. However, the subdirectory-like URL structure GitHub uses for Project Pages complicates the proper resolution of URLs. In order to assure your site builds properly, use the handy &lt;a href=&quot;../templates/index#filters&quot;&gt;URL filters&lt;/a&gt;:</source>
          <target state="translated">有时候，在将 &lt;code&gt;gh-pages&lt;/code&gt; 分支推送到GitHub 之前，预览Jekyll网站是很好的选择。但是，GitHub用于项目页面的类似子目录的URL结构使URL的正确解析变得复杂。为了确保您的网站正确构建，请使用方便的&lt;a href=&quot;../templates/index#filters&quot;&gt;URL过滤器&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="c6e6a5236a2dc5a15d6b1356d88c122fd80a09d5" translate="yes" xml:space="preserve">
          <source>Sometimes it&amp;rsquo;s nice to preview your Jekyll site before you push your &lt;code&gt;gh-pages&lt;/code&gt; branch to GitHub. The subdirectory-like URL structure GitHub uses for Project Pages complicates the proper resolution of URLs. In order to assure your site builds properly, use the handy &lt;a href=&quot;../liquid/filters/index&quot;&gt;URL filters&lt;/a&gt;:</source>
          <target state="translated">有时候，在将 &lt;code&gt;gh-pages&lt;/code&gt; 分支推送到GitHub之前，预览Jekyll网站是很好的选择。GitHub用于项目页面的类似子目录的URL结构使URL的正确解析变得复杂。为了确保您的网站正确构建，请使用方便的&lt;a href=&quot;../liquid/filters/index&quot;&gt;URL过滤器&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="412ca9c290aa7d6de372a28b66548fa3477351c0" translate="yes" xml:space="preserve">
          <source>Sometimes you might want to output something in production but not in development. Analytics scripts are the most common example of this.</source>
          <target state="translated">有时你可能想在生产中输出一些东西,但在开发中不输出。分析脚本是最常见的例子。</target>
        </trans-unit>
        <trans-unit id="c002e956f2fe54ce5a1cc79d677f63d3a84d4607" translate="yes" xml:space="preserve">
          <source>Sort By Front Matter Key</source>
          <target state="translated">按前面的事项键排序</target>
        </trans-unit>
        <trans-unit id="0bf165524f11b75caefcab9fd93f2fced0386918" translate="yes" xml:space="preserve">
          <source>Sort an array. Optional arguments for hashes 1. property name 2. nils order (&lt;em&gt;first&lt;/em&gt; or &lt;em&gt;last&lt;/em&gt;).</source>
          <target state="translated">对数组进行排序。哈希的可选参数1.属性名称2. nils顺序（&lt;em&gt;first&lt;/em&gt;或&lt;em&gt;last&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="e1a35dfc74cd04625df2be72ead1705c96cb4340" translate="yes" xml:space="preserve">
          <source>Sort an array. Optional arguments for hashes: 1. property name 2. nils order (&lt;em&gt;first&lt;/em&gt; or &lt;em&gt;last&lt;/em&gt;).</source>
          <target state="translated">对数组进行排序。哈希的可选参数：1.属性名称2. nils顺序（&lt;em&gt;first&lt;/em&gt;或&lt;em&gt;last&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="721ef5802b7fd0123251918306122ba391be88b2" translate="yes" xml:space="preserve">
          <source>Source files must be in the root directory</source>
          <target state="translated">源文件必须在根目录下</target>
        </trans-unit>
        <trans-unit id="ebf232555e2d95e42ef7c0e153994a358d649b31" translate="yes" xml:space="preserve">
          <source>Specify config files instead of using &lt;code&gt;_config.yml&lt;/code&gt; automatically. Settings in later files override settings in earlier files.</source>
          <target state="translated">指定配置文件，而不是自动使用 &lt;code&gt;_config.yml&lt;/code&gt; 。较新文件中的设置将覆盖较早文件中的设置。</target>
        </trans-unit>
        <trans-unit id="bcdffbe305cb4d5d7ea796d6e287a7bc8d7a0116" translate="yes" xml:space="preserve">
          <source>Specify layout directory instead of using &lt;code&gt;_layouts/&lt;/code&gt; automatically.</source>
          <target state="translated">指定布局目录，而不是自动使用 &lt;code&gt;_layouts/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d5a31871f9d077967971601fd20c9db9acc9a3a" translate="yes" xml:space="preserve">
          <source>Specify plugin directories instead of using &lt;code&gt;_plugins/&lt;/code&gt; automatically.</source>
          <target state="translated">指定插件目录，而不是自动使用 &lt;code&gt;_plugins/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="543a19444848c9302e9291afe8e96f0019592a64" translate="yes" xml:space="preserve">
          <source>Specifying a Jekyll environment at build time</source>
          <target state="translated">在构建时指定Jekyll环境。</target>
        </trans-unit>
        <trans-unit id="1d23e1629ece47d647a39c0d87fdcebaf66f9cee" translate="yes" xml:space="preserve">
          <source>Specifying an environment value allows you to make certain content available only within specific environments.</source>
          <target state="translated">通过指定环境值,您可以使某些内容仅在特定环境中可用。</target>
        </trans-unit>
        <trans-unit id="f5e265cb8bebf47d8d0462cb2fe90e34d28e8d53" translate="yes" xml:space="preserve">
          <source>Specifying permalinks through the YAML Front Matter</source>
          <target state="translated">通过YAML前台事务来指定permalink。</target>
        </trans-unit>
        <trans-unit id="fadb672fc3877cff0d7847dc912cbe268c93b01d" translate="yes" xml:space="preserve">
          <source>Specifying permalinks through the front matter</source>
          <target state="translated">通过前端内容指定permalinks</target>
        </trans-unit>
        <trans-unit id="e75b6d1f85d0377b8c0e0430f17df4f07482f060" translate="yes" xml:space="preserve">
          <source>Staff page</source>
          <target state="translated">职员页</target>
        </trans-unit>
        <trans-unit id="2656a9332091e8034c5569e15573e7522648fc29" translate="yes" xml:space="preserve">
          <source>Standard Liquid Filters</source>
          <target state="translated">标准液体过滤器</target>
        </trans-unit>
        <trans-unit id="3d7885c513450d548fab07ffa79ca9b64b10eea0" translate="yes" xml:space="preserve">
          <source>Starting &lt;strong&gt;Jekyll 3.2&lt;/strong&gt;, a new Jekyll project bootstrapped with &lt;code&gt;jekyll new&lt;/code&gt; uses &lt;a href=&quot;../themes/index&quot;&gt;gem-based themes&lt;/a&gt; to define the look of the site. This results in a lighter default directory structure : &lt;code&gt;_layouts&lt;/code&gt;, &lt;code&gt;_includes&lt;/code&gt; and &lt;code&gt;_sass&lt;/code&gt; are stored in the theme-gem, by default.</source>
          <target state="translated">从&lt;strong&gt;Jekyll 3.2&lt;/strong&gt;开始，使用 &lt;code&gt;jekyll new&lt;/code&gt; 引导的新Jekyll项目使用&lt;a href=&quot;../themes/index&quot;&gt;基于gem的主题&lt;/a&gt;来定义网站的外观。这导致了一个打火机默认目录结构： &lt;code&gt;_layouts&lt;/code&gt; ， &lt;code&gt;_includes&lt;/code&gt; 和 &lt;code&gt;_sass&lt;/code&gt; 存储在主题宝石，默认情况下。</target>
        </trans-unit>
        <trans-unit id="c4533baaac02eff0b038864c85c524fb56799a07" translate="yes" xml:space="preserve">
          <source>Starting from version 3.5.0, using &lt;code&gt;none&lt;/code&gt; in a post/document will produce a file without using a layout file regardless of front matter defaults. Using &lt;code&gt;none&lt;/code&gt; in a page will cause Jekyll to attempt to use a layout named &quot;none&quot;.</source>
          <target state="translated">从3.5.0版本开始，使用 &lt;code&gt;none&lt;/code&gt; 在后/文件会产生一个文件，而无需使用布局文件，而不管前面的问题的默认值。在页面中 &lt;code&gt;none&lt;/code&gt; 使用任何内容都将导致Jekyll尝试使用名为&amp;ldquo; none&amp;rdquo;的布局。</target>
        </trans-unit>
        <trans-unit id="8363d11750d7f59eccf988ecb4d15d10a1f9a95e" translate="yes" xml:space="preserve">
          <source>Starting from version 3.5.0, using &lt;code&gt;none&lt;/code&gt; in a post/document will produce a file without using a layout file regardless of frontmatter defaults. Using &lt;code&gt;none&lt;/code&gt; in a page, however, will cause Jekyll to attempt to use a layout named &quot;none&quot;.</source>
          <target state="translated">从3.5.0版本开始，使用 &lt;code&gt;none&lt;/code&gt; 在后/文件会产生一个文件，而无需使用布局文件，而不管frontmatter默认值。但是，在页面中 &lt;code&gt;none&lt;/code&gt; 使用任何内容，将导致Jekyll尝试使用名为&amp;ldquo; none&amp;rdquo;的布局。</target>
        </trans-unit>
        <trans-unit id="689ffd2b6c659713306bc1b82c35e8c3c2b3fd11" translate="yes" xml:space="preserve">
          <source>Starting with Jekyll v3.0, relative permalinks functionality will be removed and thus unavailable for use.</source>
          <target state="translated">从Jekyll v3.0开始,相对permalinks功能将被删除,因此无法使用。</target>
        </trans-unit>
        <trans-unit id="c2ad94ea6253b4b6a6065e3716da384186683b3c" translate="yes" xml:space="preserve">
          <source>Static Comments with Jekyll &amp;amp; Staticman</source>
          <target state="translated">与Jekyll和Staticman的静态评论</target>
        </trans-unit>
        <trans-unit id="a1c031153c642e8130ab037b056c28c991496c45" translate="yes" xml:space="preserve">
          <source>Static Files</source>
          <target state="translated">静态文件</target>
        </trans-unit>
        <trans-unit id="2c55f6a69fe795f38091b036344a6ecd7d37d2f7" translate="yes" xml:space="preserve">
          <source>Static Publisher</source>
          <target state="translated">静态出版商</target>
        </trans-unit>
        <trans-unit id="f41c29383080e690250ef667c06c5fd9bfa50de3" translate="yes" xml:space="preserve">
          <source>Step 1: Install rrsync to your home folder (server-side)</source>
          <target state="translated">步骤1:安装rrsync到你的主文件夹(服务器端</target>
        </trans-unit>
        <trans-unit id="acb1f7279f38bf9b0a45bc0f35a26a88d02097fb" translate="yes" xml:space="preserve">
          <source>Step 1: Tell Jekyll to read in your collection</source>
          <target state="translated">第一步:告诉Jekyll在你的收藏中阅读</target>
        </trans-unit>
        <trans-unit id="3ae76cb71c530e99823dbc2db566a6ad925baa9b" translate="yes" xml:space="preserve">
          <source>Step 2: Add your content</source>
          <target state="translated">第二步:添加您的内容</target>
        </trans-unit>
        <trans-unit id="983bcdbf9f3d414aa3345d5eeabfd641e4c7ae61" translate="yes" xml:space="preserve">
          <source>Step 2: Set up certificate-based SSH access (server side)</source>
          <target state="translated">第二步:设置基于证书的SSH访问(服务器端)</target>
        </trans-unit>
        <trans-unit id="64c59dc288ce9e8f1c6fe120ae7d9d3c9551f394" translate="yes" xml:space="preserve">
          <source>Step 3: Optionally render your collection&amp;rsquo;s documents into independent files</source>
          <target state="translated">步骤3 ：（可选）将收藏集的文档渲染为独立文件</target>
        </trans-unit>
        <trans-unit id="ee22489d18965248c7a1345a3434a08c9adadf6b" translate="yes" xml:space="preserve">
          <source>Step 3: Rsync (client-side)</source>
          <target state="translated">第3步:Rsync(客户机端</target>
        </trans-unit>
        <trans-unit id="7d7f7542c2ddb5278d71a339c55fed6a950021e9" translate="yes" xml:space="preserve">
          <source>Step 4 (Optional): Exclude the transfer script from being copied to the output folder.</source>
          <target state="translated">步骤4(可选)。将传输脚本从复制到输出文件夹中排除。</target>
        </trans-unit>
        <trans-unit id="0a5cbd7bd6e140ea3b65d967ef5248c8dbb97a1f" translate="yes" xml:space="preserve">
          <source>Step by Step Tutorial</source>
          <target state="translated">一步一步的教程</target>
        </trans-unit>
        <trans-unit id="bfcefdc3d62cf0235d29e6d41fa6c2187ec9fc83" translate="yes" xml:space="preserve">
          <source>Stop and rerun `jekyll serve` command.</source>
          <target state="translated">停止并重新运行 &quot;杰基尔服务 &quot;命令。</target>
        </trans-unit>
        <trans-unit id="7532628acb10d3f74335ed474f1b263c9667e5e0" translate="yes" xml:space="preserve">
          <source>Stores &lt;a href=&quot;../configuration/index&quot;&gt;configuration&lt;/a&gt; data. Many of these options can be specified from the command line executable but it&amp;rsquo;s easier to specify them here so you don&amp;rsquo;t have to remember them.</source>
          <target state="translated">存储&lt;a href=&quot;../configuration/index&quot;&gt;配置&lt;/a&gt;数据。这些选项中的许多选项都可以从命令行可执行文件中指定，但是在此处指定它们更容易，因此您不必记住它们。</target>
        </trans-unit>
        <trans-unit id="688931069f0df1b7dcf0babe5808ec7762322394" translate="yes" xml:space="preserve">
          <source>Stylesheets</source>
          <target state="translated">Stylesheets</target>
        </trans-unit>
        <trans-unit id="32e9c03f491a3d6219d0af41a20f44ab2a1708e6" translate="yes" xml:space="preserve">
          <source>Stylesheets for syntax highlighting</source>
          <target state="translated">语法高亮的样式表</target>
        </trans-unit>
        <trans-unit id="3847bbe56426426b18e97e82869e1adc46a23fcf" translate="yes" xml:space="preserve">
          <source>Subfolders</source>
          <target state="translated">Subfolders</target>
        </trans-unit>
        <trans-unit id="c17754d5a1317dde8d1389c0d21b829385b637ac" translate="yes" xml:space="preserve">
          <source>Suppose the parameter you want to pass to the include is a variable rather than a string. For example, you might be using &lt;code&gt;{{ site.product_name }}&lt;/code&gt; to refer to every instance of your product rather than the actual hard-coded name. (In this case, your &lt;code&gt;_config.yml&lt;/code&gt; file would have a key called &lt;code&gt;product_name&lt;/code&gt; with a value of your product&amp;rsquo;s name.)</source>
          <target state="translated">假设要传递给include的参数是变量而不是字符串。例如，您可能使用 &lt;code&gt;{{ site.product_name }}&lt;/code&gt; 来引用产品的每个实例，而不是实际的硬编码名称。（在这种情况下，您的 &lt;code&gt;_config.yml&lt;/code&gt; 文件将具有一个名为 &lt;code&gt;product_name&lt;/code&gt; 的键，其值是您的产品名称。）</target>
        </trans-unit>
        <trans-unit id="de0da891a584c423631fe15e6996173bc2e4ef95" translate="yes" xml:space="preserve">
          <source>Suppose you want to get rid of the gem-based theme and convert it to a regular theme, where all files are present in your Jekyll site directory, with nothing stored in the theme gem.</source>
          <target state="translated">假设你想摆脱基于宝石的主题,并将其转换为一个普通的主题,其中所有的文件都存在于你的Jekyll网站目录,没有任何存储在主题宝石。</target>
        </trans-unit>
        <trans-unit id="2a9948bd0352018869fcd226a91788c362048f0e" translate="yes" xml:space="preserve">
          <source>Suppose you want to list all your image assets as contained in &lt;code&gt;assets/img&lt;/code&gt;. You could use this for loop to look in the &lt;code&gt;static_files&lt;/code&gt; object and get all static files that have this front matter property:</source>
          <target state="translated">假设您要列出 &lt;code&gt;assets/img&lt;/code&gt; 包含的所有图像资产。您可以使用此for循环来查找 &lt;code&gt;static_files&lt;/code&gt; 对象，并获取具有此front属性属性的所有静态文件：</target>
        </trans-unit>
        <trans-unit id="49a5924de30537d0fd99ef0abd41a365ec703124" translate="yes" xml:space="preserve">
          <source>Syntax highlighter changed</source>
          <target state="translated">语法高亮显示器改变了</target>
        </trans-unit>
        <trans-unit id="374b87b00ba52a7058776886331a437d0ccf6408" translate="yes" xml:space="preserve">
          <source>TZInfo 2.0 incompatibility</source>
          <target state="translated">TZInfo 2.0不兼容</target>
        </trans-unit>
        <trans-unit id="d9d769cb03843c979fe9ce2f237c081ebdcb9e6e" translate="yes" xml:space="preserve">
          <source>Tag Blocks</source>
          <target state="translated">标签块</target>
        </trans-unit>
        <trans-unit id="848eed0fbd5429f556b2982dec3ea87136e33e44" translate="yes" xml:space="preserve">
          <source>Tags</source>
          <target state="translated">Tags</target>
        </trans-unit>
        <trans-unit id="ad2eeda2d22a7c89497c0be9c33914c5662c9f33" translate="yes" xml:space="preserve">
          <source>Tags Filters</source>
          <target state="translated">标签 过滤器</target>
        </trans-unit>
        <trans-unit id="ea90392f321ee89c8fa1055615f595ff1dc3bf58" translate="yes" xml:space="preserve">
          <source>Tags and Categories</source>
          <target state="translated">标签和分类</target>
        </trans-unit>
        <trans-unit id="0db85fe46c9924138eaf21c26a5b7b70b64633b5" translate="yes" xml:space="preserve">
          <source>Tags create the logic and control flow for templates. They are denoted by curly braces and percent signs: &lt;code&gt;{%&lt;/code&gt; and &lt;code&gt;%}&lt;/code&gt;. For example:</source>
          <target state="translated">标签为模板创建逻辑和控制流。它们用花括号和百分号表示： &lt;code&gt;{%&lt;/code&gt; 和 &lt;code&gt;%}&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="e9064e60417951d90fb2007ccee3afabab3af297" translate="yes" xml:space="preserve">
          <source>Tags for a post are defined in the post&amp;rsquo;s front matter using either the key &lt;code&gt;tag&lt;/code&gt; for a single entry or &lt;code&gt;tags&lt;/code&gt; for multiple entries.</source>
          <target state="translated">帖子的标签是在帖子的开头定义的，使用单个条目的关键 &lt;code&gt;tag&lt;/code&gt; 或多个条目的 &lt;code&gt;tags&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f2538f4a76331f99cf2d8240550cd5d99a3f12da" translate="yes" xml:space="preserve">
          <source>Take a look at &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; and see your red link for the current page.</source>
          <target state="translated">看一下&lt;a href=&quot;http://localhost:4000&quot;&gt;http：// localhost：4000&lt;/a&gt;并看到当前页面的红色链接。</target>
        </trans-unit>
        <trans-unit id="e7c9bcdeb3826f2a1efe477c86c883dae3af6389" translate="yes" xml:space="preserve">
          <source>Template Variables</source>
          <target state="translated">模板变量</target>
        </trans-unit>
        <trans-unit id="9d777943ea77791c8c797167aaf1ffeca5f05350" translate="yes" xml:space="preserve">
          <source>Template variables for permalinks</source>
          <target state="translated">模板变量的permalinks</target>
        </trans-unit>
        <trans-unit id="f25b700ed9f092123a43acb205a6869342cf9dd6" translate="yes" xml:space="preserve">
          <source>Templates</source>
          <target state="translated">Templates</target>
        </trans-unit>
        <trans-unit id="aec32b88e26f43c563c3cb564cc9a4e12a743a4c" translate="yes" xml:space="preserve">
          <source>That brings us to the end of this step-by-step tutorial and the beginning of your Jekyll journey!</source>
          <target state="translated">这一步步的教程就到此结束了,你的Jekyll之旅开始了!</target>
        </trans-unit>
        <trans-unit id="75e9de090e114025ad1428fb576025165b6a0358" translate="yes" xml:space="preserve">
          <source>That is: defaults are overridden by options specified in &lt;code&gt;_config.yml&lt;/code&gt;, and flags specified at the command-line will override all other settings specified elsewhere.</source>
          <target state="translated">即： &lt;code&gt;_config.yml&lt;/code&gt; 中指定的选项将覆盖默认值，而命令行中指定的标志将覆盖其他位置指定的所有其他设置。</target>
        </trans-unit>
        <trans-unit id="31e26364535ee708208d36110b351e48d76e9d3b" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it! Head over to &lt;a href=&quot;https://github.com/rbenv/rbenv#command-reference&quot;&gt;rbenv command references&lt;/a&gt; to learn how to use different versions of Ruby in your projects.</source>
          <target state="translated">而已！转至&lt;a href=&quot;https://github.com/rbenv/rbenv#command-reference&quot;&gt;rbenv命令参考&lt;/a&gt;以了解如何在项目中使用不同版本的Ruby。</target>
        </trans-unit>
        <trans-unit id="3420af8913b823b74b688aea4be041a4291a489f" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it! You&amp;rsquo;re ready to start using Jekyll.</source>
          <target state="translated">而已！您已经准备好开始使用Jekyll。</target>
        </trans-unit>
        <trans-unit id="1ee36422ccc27808dce84a590233680e25afa5a2" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it, you&amp;rsquo;re ready to use Jekyll!</source>
          <target state="translated">就是这样，您已经准备好使用Jekyll！</target>
        </trans-unit>
        <trans-unit id="57b6e3ea12042140d99aebfec66c4d2fd21ad47f" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s next. Let&amp;rsquo;s keep going.</source>
          <target state="translated">那是下一个。我们继续吧。</target>
        </trans-unit>
        <trans-unit id="1c7ae6e9344b75aa2a92435038dc2d5c06c27826" translate="yes" xml:space="preserve">
          <source>The (unrendered) content of the document. If no YAML Front Matter is provided, Jekyll will not generate the file in your collection. If YAML Front Matter is used, then this is all the contents of the file after the terminating `---` of the front matter.</source>
          <target state="translated">文件的(未渲染的)内容。如果没有提供YAML Front Matter,Jekyll将不会在你的集合中生成文件。如果使用了YAML前端事项,那么这就是前端事项的&quot;----&quot;之后的所有文件内容。</target>
        </trans-unit>
        <trans-unit id="dff9e727f022ff1d34d5e686eede29e28e00f977" translate="yes" xml:space="preserve">
          <source>The (unrendered) content of the document. If no front matter is provided, Jekyll will not generate the file in your collection. If front matter is used, then this is all the contents of the file after the terminating `---` of the front matter.</source>
          <target state="translated">文件的(未渲染的)内容。如果没有提供front matter,Jekyll将不会在你的集合中生成文件。如果使用了前面的内容,那么这就是前面的结束语`---`之后的所有文件内容。</target>
        </trans-unit>
        <trans-unit id="03a2268eb0b29718f228699fbbe75966ada707f6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_core_module.html#try_files&quot;&gt;try_files&lt;/a&gt; directive allows you to specify a list of files to search for to process a request. The following configuration will instruct nginx to search for a file with an &lt;code&gt;.html&lt;/code&gt; extension if an exact match for the requested URI is not found.</source>
          <target state="translated">该&lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_core_module.html#try_files&quot;&gt;try_files&lt;/a&gt;指令允许您指定的文件列表搜索处理请求。如果找不到与所请求URI完全匹配的文件，则以下配置将指示nginx搜索扩展名为 &lt;code&gt;.html&lt;/code&gt; 的文件。</target>
        </trans-unit>
        <trans-unit id="4bc38b6be6281a9888e8f3fce6c32c39f23469c0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://console.amplify.aws&quot;&gt;AWS Amplify Console&lt;/a&gt; provides continuous deployment and hosting for modern web apps (single page apps and static site generators). Continuous deployment allows developers to deploy updates to their web app on every code commit to their Git repository. Hosting includes features such as globally available CDNs, 1-click custom domain setup + HTTPS, feature branch deployments, redirects, trailing slashes, and password protection.</source>
          <target state="translated">在&lt;a href=&quot;https://console.amplify.aws&quot;&gt;AWS控制台中扩增&lt;/a&gt;为现代Web应用程序持续部署和托管（单页的应用程序和静态网站生成器）。持续部署允许开发人员在每次提交到其Git存储库的代码时，将更新部署到其Web应用程序。托管功能包括全球可用的CDN，一键式自定义域设置+ HTTPS，功能分支部署，重定向，斜杠和密码保护。</target>
        </trans-unit>
        <trans-unit id="4f115da54b9393792ea4dff150c2787abe86526f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://twitter.com/jekyllrb&quot;&gt;official Jekyll Twitter account&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;https://twitter.com/jekyllrb&quot;&gt;化身的Twitter官方账号&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="29a0415fc20550787fcea206149e7d0290f0d8c4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.keycdn.com/support/jekyll-hosting&quot;&gt;Jekyll hosting tutorial&lt;/a&gt; provides various options to supercharge Jekyll sites with just a few steps. It combines best flexibility and excellent performance.</source>
          <target state="translated">该&lt;a href=&quot;https://www.keycdn.com/support/jekyll-hosting&quot;&gt;化身托管教程&lt;/a&gt;提供了各种选项，以增压杰基尔场所仅几步之遥。它结合了最佳的灵活性和出色的性能。</target>
        </trans-unit>
        <trans-unit id="a08d96a906788824a4d183e11431ffeee3dd4f0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:title&lt;/code&gt; template variable will take the &lt;code&gt;slug&lt;/code&gt;&lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt; variable value if any is present in the document; if none is defined then &lt;code&gt;:title&lt;/code&gt; will be equivalent to &lt;code&gt;:name&lt;/code&gt;, aka the slug generated from the filename.</source>
          <target state="translated">的 &lt;code&gt;:title&lt;/code&gt; 模板变量将采取 &lt;code&gt;slug&lt;/code&gt; &lt;a href=&quot;../front-matter/index&quot;&gt;前物质&lt;/a&gt;变量值，如果任何存在于文件中; 如果未定义，则 &lt;code&gt;:title&lt;/code&gt; 将等效于 &lt;code&gt;:name&lt;/code&gt; ，也就是从文件名生成的段名。</target>
        </trans-unit>
        <trans-unit id="86718a9d1272d70d30b11f6c4bbf03f59f232c82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:title&lt;/code&gt; template variable will take the &lt;code&gt;slug&lt;/code&gt;&lt;a href=&quot;../frontmatter/index&quot;&gt;front matter&lt;/a&gt; variable value if any is present in the document; if none is defined then &lt;code&gt;:title&lt;/code&gt; will be equivalent to &lt;code&gt;:name&lt;/code&gt;, aka the slug generated from the filename.</source>
          <target state="translated">的 &lt;code&gt;:title&lt;/code&gt; 模板变量将采取 &lt;code&gt;slug&lt;/code&gt; &lt;a href=&quot;../frontmatter/index&quot;&gt;前物质&lt;/a&gt;变量值，如果任何存在于文件中; 如果未定义，则 &lt;code&gt;:title&lt;/code&gt; 将等效于 &lt;code&gt;:name&lt;/code&gt; ，即从文件名生成的段名。</target>
        </trans-unit>
        <trans-unit id="9ea004d919e32ec2a322ac05fe4515ce8ba65e43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;Gemfile.lock&lt;/code&gt; files are used by Bundler to keep track of the required gems and gem versions you need to build your Jekyll site.</source>
          <target state="translated">该 &lt;code&gt;Gemfile&lt;/code&gt; 和 &lt;code&gt;Gemfile.lock&lt;/code&gt; 的文件用于捆扎机跟踪，你需要建立你的哲基尔网站所需要的宝石和宝石版本。</target>
        </trans-unit>
        <trans-unit id="c6c2579db93e220c78bc31b32ca43918a2dcc6b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;Gemfile.lock&lt;/code&gt; files inform Bundler about the gem requirements in your site. If your site doesn&amp;rsquo;t have these Gemfiles, you can omit &lt;code&gt;bundle exec&lt;/code&gt; and just run &lt;code&gt;jekyll serve&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Gemfile&lt;/code&gt; 和 &lt;code&gt;Gemfile.lock&lt;/code&gt; 的文件通知捆扎机关于你的网站创业板的要求。如果您的站点没有这些Gemfile，则可以省略 &lt;code&gt;bundle exec&lt;/code&gt; 并仅运行 &lt;code&gt;jekyll serve&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="015871f3cca2e404aac8ff736d807ca780ce4540" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;_config.yml&lt;/code&gt; master configuration file contains global configurations and variable definitions that are read once at execution time. Changes made to &lt;code&gt;_config.yml&lt;/code&gt; during automatic regeneration are not loaded until the next execution.</source>
          <target state="translated">该 &lt;code&gt;_config.yml&lt;/code&gt; 主配置文件包含全局配置以及在执行时读取一次变量定义。在自动再生期间对 &lt;code&gt;_config.yml&lt;/code&gt; 所做的更改要等到下一次执行时才加载。</target>
        </trans-unit>
        <trans-unit id="4e41fe8194cc18257de1f89cee9f4498d2e6fc24" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;_data&lt;/code&gt; folder is where you can store additional data for Jekyll to use when generating your site. These files must be YAML, JSON, or CSV files (using either the &lt;code&gt;.yml&lt;/code&gt;, &lt;code&gt;.yaml&lt;/code&gt;, &lt;code&gt;.json&lt;/code&gt; or &lt;code&gt;.csv&lt;/code&gt; extension), and they will be accessible via &lt;code&gt;site.data&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;_data&lt;/code&gt; 文件夹中，您可以存储其他数据，供Jekyll在生成站点时使用。这些文件必须是YAML，JSON或CSV文件（使用的 &lt;code&gt;.yml&lt;/code&gt; ， &lt;code&gt;.yaml&lt;/code&gt; ， &lt;code&gt;.json&lt;/code&gt; 或 &lt;code&gt;.csv&lt;/code&gt; 扩展名），他们将访问通过 &lt;code&gt;site.data&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d0b3420ea4f5642027479a0f45aa23361e1069dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;_posts&lt;/code&gt; folder is where your blog posts live. You typically write posts in &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;, HTML is also supported.</source>
          <target state="translated">该 &lt;code&gt;_posts&lt;/code&gt; 文件夹是您的博客帖子住的地方。您通常在&lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown中&lt;/a&gt;撰写文章，也支持HTML。</target>
        </trans-unit>
        <trans-unit id="c66c5f86a437b947ed0ce736975e36e6e9c63046" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;branches&lt;/code&gt; directive is completely optional. Travis will build from every push to any branch of your repo if leave it out.</source>
          <target state="translated">该 &lt;code&gt;branches&lt;/code&gt; 指令是完全可选的。如果不做任何处理，Travis会从每次推送到仓库的任何分支进行构建。</target>
        </trans-unit>
        <trans-unit id="b805bb53409f023024aea30697c9e7121d0d7b8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;defaults&lt;/code&gt; key holds an array of scope/values pairs that define what defaults should be set for a particular file path, and optionally, a file type in that path.</source>
          <target state="translated">的 &lt;code&gt;defaults&lt;/code&gt; 密钥保存定义什么默认值应该为特定的文件路径被设置，并且任选地，在该路径中的文件类型范围/值对的数组。</target>
        </trans-unit>
        <trans-unit id="9872e1f45f37fadbe9c5e5c67d4324984eff4052" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;help&lt;/code&gt; command is always here to remind you of all available options and usage, and also works with the &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;serve&lt;/code&gt; and &lt;code&gt;new&lt;/code&gt; subcommands, e.g &lt;code&gt;jekyll help new&lt;/code&gt; or &lt;code&gt;jekyll help build&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;help&lt;/code&gt; 命令总是在这里要提醒大家的所有可用选项和使用，同时还与工程 &lt;code&gt;build&lt;/code&gt; ， &lt;code&gt;serve&lt;/code&gt; 和 &lt;code&gt;new&lt;/code&gt; 子命令，如 &lt;code&gt;jekyll help new&lt;/code&gt; 或 &lt;code&gt;jekyll help build&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21cae873b11fc6869aa1c2ebe6e7767215a8ed64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;include&lt;/code&gt; tag allows you to include content from another file stored in an &lt;code&gt;_includes&lt;/code&gt; folder. Includes are useful for having a single source for source code that repeats around the site or for improving the readability.</source>
          <target state="translated">在 &lt;code&gt;include&lt;/code&gt; 标签，您可以包括存储在另一个文件中的内容 &lt;code&gt;_includes&lt;/code&gt; 文件夹。Includes对于使源代码在站点周围重复存在单一来源或提高可读性很有用。</target>
        </trans-unit>
        <trans-unit id="4abdc0f63faca27dc0d13cf9f4ae0f88d56557db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;include&lt;/code&gt; tag allows you to include the content from another file stored in the &lt;code&gt;_includes&lt;/code&gt; folder:</source>
          <target state="translated">在 &lt;code&gt;include&lt;/code&gt; 标签，您可以包括从存储在另一个文件中的内容 &lt;code&gt;_includes&lt;/code&gt; 文件夹：</target>
        </trans-unit>
        <trans-unit id="be0f39689236690a99ed44aabb835d82bae4ec9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jekyll new &amp;lt;PATH&amp;gt;&lt;/code&gt; command isn&amp;rsquo;t the only way to create a new Jekyll site with a gem-based theme. You can also find gem-based themes online and incorporate them into your Jekyll project.</source>
          <target state="translated">该 &lt;code&gt;jekyll new &amp;lt;PATH&amp;gt;&lt;/code&gt; 命令不是创建一个新的杰基尔网站与基于创业板主题的唯一途径。您还可以在线找到基于宝石的主题，并将其纳入您的Jekyll项目。</target>
        </trans-unit>
        <trans-unit id="490fa66ce202e97df6ee8b29417170e17bab61bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jekyll&lt;/code&gt; program has several commands but the structure is always:</source>
          <target state="translated">该 &lt;code&gt;jekyll&lt;/code&gt; 程序有几个命令，但结构都为：</target>
        </trans-unit>
        <trans-unit id="3a22f5e9830e79d5bffeada0bdc4c8fb7b8e615d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;post&lt;/code&gt; layout doesn&amp;rsquo;t exist so you&amp;rsquo;ll need to create it at &lt;code&gt;_layouts/post.html&lt;/code&gt; with the following content:</source>
          <target state="translated">该 &lt;code&gt;post&lt;/code&gt; 的布局不存在，所以你需要在创建它 &lt;code&gt;_layouts/post.html&lt;/code&gt; ，内容如下：</target>
        </trans-unit>
        <trans-unit id="b647252c78f55c6ca901fe959de1c8cb94b0ceb7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;projects/foo_project.md&lt;/code&gt; would have the &lt;code&gt;layout&lt;/code&gt; set to &lt;code&gt;foobar&lt;/code&gt; instead of &lt;code&gt;project&lt;/code&gt; and the &lt;code&gt;author&lt;/code&gt; set to &lt;code&gt;John Smith&lt;/code&gt; instead of &lt;code&gt;Mr. Hyde&lt;/code&gt; when the site is built.</source>
          <target state="translated">&lt;code&gt;projects/foo_project.md&lt;/code&gt; 网站时，projects / foo_project.md的 &lt;code&gt;layout&lt;/code&gt; 将设置为 &lt;code&gt;foobar&lt;/code&gt; 而不是 &lt;code&gt;project&lt;/code&gt; ，而 &lt;code&gt;author&lt;/code&gt; 将设置为 &lt;code&gt;John Smith&lt;/code&gt; 而不是 &lt;code&gt;Mr. Hyde&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed5f3129400a57d68f48a537a7d6292450e00443" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;render_time&lt;/code&gt; tag seen above can also be rewritten as a tag block by inheriting the &lt;code&gt;Liquid::Block&lt;/code&gt; class. Look at the example below:</source>
          <target state="translated">通过继承 &lt;code&gt;Liquid::Block&lt;/code&gt; 类，也可以将上面看到的 &lt;code&gt;render_time&lt;/code&gt; 标签重写为标签块。看下面的例子：</target>
        </trans-unit>
        <trans-unit id="57f93099e236e22bad0fc609681110fd7c36137b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sass_dir&lt;/code&gt; is only used by Sass</source>
          <target state="translated">该 &lt;code&gt;sass_dir&lt;/code&gt; 仅由萨斯</target>
        </trans-unit>
        <trans-unit id="a0b0548836c5da47246c8e1f3d0079d6eea8c431" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;script&lt;/code&gt; directive can be absolutely any valid shell command.</source>
          <target state="translated">该 &lt;code&gt;script&lt;/code&gt; 指令可以绝对任何有效的shell命令。</target>
        </trans-unit>
        <trans-unit id="f9517da8df41947654f87606ca04f61c9fbfb66a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;slugify&lt;/code&gt; filter accepts an option, each specifying what to filter. The default is &lt;code&gt;default&lt;/code&gt;. They are as follows (with what they filter):</source>
          <target state="translated">该 &lt;code&gt;slugify&lt;/code&gt; 过滤器接受一个选项，每个指定哪些过滤器。默认设置为 &lt;code&gt;default&lt;/code&gt; 。它们如下（使用过滤器）：</target>
        </trans-unit>
        <trans-unit id="f8c33390f66d336ebefdb3c6cc90c26c89c1a377" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;styles.css&lt;/code&gt; referenced here is generated by Jekyll from the &lt;code&gt;styles.scss&lt;/code&gt; you created earlier in &lt;code&gt;assets/css/&lt;/code&gt;.</source>
          <target state="translated">此处引用的 &lt;code&gt;styles.css&lt;/code&gt; 由Jekyll根据您先前在 &lt;code&gt;assets/css/&lt;/code&gt; 创建的 &lt;code&gt;styles.scss&lt;/code&gt; 生成。</target>
        </trans-unit>
        <trans-unit id="6f49562587f52eeca7faec6ae393a9187d870396" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{ include.content }}&lt;/code&gt; is a parameter that gets populated when you call the include and specify a value for that parameter, like this:</source>
          <target state="translated">该 &lt;code&gt;{{ include.content }}&lt;/code&gt; 是当你调用包括和该参数指定值，像这样被填充的参数：</target>
        </trans-unit>
        <trans-unit id="b00a4fc83d428b8b611209d4e9806a736b0ab610" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;checkout&lt;/strong&gt; action takes care of cloning your repository.</source>
          <target state="translated">在&lt;strong&gt;结账&lt;/strong&gt;的行动需要克隆版本库的照顾。</target>
        </trans-unit>
        <trans-unit id="add532a620fbaee53195cee698d498b6cad90818" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;name&lt;/strong&gt; of the job matches our YAML filename: &lt;code&gt;github-pages&lt;/code&gt;.</source>
          <target state="translated">作业的&lt;strong&gt;名称&lt;/strong&gt;与我们的YAML文件名相匹配： &lt;code&gt;github-pages&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bcf4a02bedfa2bc6c9855a66aab578d0d31a600a" translate="yes" xml:space="preserve">
          <source>The Action we&amp;rsquo;re using here will create (or reset an existing) &lt;code&gt;gh-pages&lt;/code&gt; branch on every successful deploy. So, if you have an existing &lt;code&gt;gh-pages&lt;/code&gt; branch that is used to deploy your production build, ensure to make a backup of the contents into a different branch so that you can rollback easily if necessary.</source>
          <target state="translated">我们在此处使用的Action将在每次成功部署时创建（或重置现有的） &lt;code&gt;gh-pages&lt;/code&gt; 分支。因此，如果您有一个现有的 &lt;code&gt;gh-pages&lt;/code&gt; 分支用于部署生产版本，请确保将内容备份到另一个分支，以便在必要时可以轻松回滚。</target>
        </trans-unit>
        <trans-unit id="453d11f1f372eeba4245b42949b067b786f0d50d" translate="yes" xml:space="preserve">
          <source>The Apache web server has extensive support for content negotiation and can handle extensionless URLs by setting the &lt;a href=&quot;https://httpd.apache.org/docs/current/content-negotiation.html#multiviews&quot;&gt;multiviews&lt;/a&gt; option in your &lt;code&gt;httpd.conf&lt;/code&gt; or &lt;code&gt;.htaccess&lt;/code&gt; file:</source>
          <target state="translated">Apache Web服务器对内容协商具有广泛的支持，并且可以通过在 &lt;code&gt;httpd.conf&lt;/code&gt; 或 &lt;code&gt;.htaccess&lt;/code&gt; 文件中设置&lt;a href=&quot;https://httpd.apache.org/docs/current/content-negotiation.html#multiviews&quot;&gt;multiviews&lt;/a&gt;选项来处理无扩展名的URL ：</target>
        </trans-unit>
        <trans-unit id="6f60db029a5dafe35fdca83898ba43c4e3290223" translate="yes" xml:space="preserve">
          <source>The Data Folder</source>
          <target state="translated">数据文件夹</target>
        </trans-unit>
        <trans-unit id="4f65a794b94efa066f90c880f3c46026c77e594e" translate="yes" xml:space="preserve">
          <source>The Date assigned to the Post. This can be overridden in a Post&amp;rsquo;s front matter by specifying a new date/time in the format &lt;code&gt;YYYY-MM-DD HH:MM:SS&lt;/code&gt; (assuming UTC), or &lt;code&gt;YYYY-MM-DD HH:MM:SS +/-TTTT&lt;/code&gt; (to specify a time zone using an offset from UTC. e.g. &lt;code&gt;2008-12-14 10:30:00 +0900&lt;/code&gt;).</source>
          <target state="translated">分配给过帐的日期。通过以 &lt;code&gt;YYYY-MM-DD HH:MM:SS&lt;/code&gt; （假设UTC）或 &lt;code&gt;YYYY-MM-DD HH:MM:SS +/-TTTT&lt;/code&gt; （以使用UTC的偏移量来指定时区（例如 &lt;code&gt;2008-12-14 10:30:00 +0900&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a8bbe3d9099df1f1edc385ef16c79952cca8b1ee" translate="yes" xml:space="preserve">
          <source>The HTML Proofer Executable</source>
          <target state="translated">HTML Proofer可执行文件</target>
        </trans-unit>
        <trans-unit id="b5c2a258e001242549577b3975b1a4eff528efd8" translate="yes" xml:space="preserve">
          <source>The HTML Proofer Library</source>
          <target state="translated">HTML演示库</target>
        </trans-unit>
        <trans-unit id="bc05cd9f65558d68bd3f3f4ae9643c32c6c421e8" translate="yes" xml:space="preserve">
          <source>The Jekyll Command</source>
          <target state="translated">Jekyll指挥部</target>
        </trans-unit>
        <trans-unit id="5a12749cf3b9b4208ca23848a2980ed3511bb09d" translate="yes" xml:space="preserve">
          <source>The Jekyll gem makes a &lt;code&gt;jekyll&lt;/code&gt; executable available to you in your Terminal window. You can use this command in a number of ways:</source>
          <target state="translated">Jekyll gem 在&amp;ldquo;终端&amp;rdquo;窗口中为您提供了 &lt;code&gt;jekyll&lt;/code&gt; 可执行文件。您可以通过多种方式使用此命令：</target>
        </trans-unit>
        <trans-unit id="4ca9c9f48b5e93e97d411fd5b6ff1bd56da6dca0" translate="yes" xml:space="preserve">
          <source>The Jekyll gem makes a &lt;code&gt;jekyll&lt;/code&gt; executable available to you in your terminal.</source>
          <target state="translated">Jekyll gem在您的终端 &lt;code&gt;jekyll&lt;/code&gt; 您可以使用jekyll可执行文件。</target>
        </trans-unit>
        <trans-unit id="e4ae3b66f42418ec34e5b727643d2151d3a4e786" translate="yes" xml:space="preserve">
          <source>The Jekyll project repository itself is a perfect example of this branch structure&amp;mdash;the &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;master branch&lt;/a&gt; contains the actual software project for Jekyll, and the Jekyll website that you&amp;rsquo;re looking at right now is contained in the &lt;a href=&quot;https://github.com/jekyll/jekyll/tree/master/docs&quot;&gt;docs folder&lt;/a&gt; of the same repository.</source>
          <target state="translated">Jekyll项目存储库本身就是该分支结构的完美示例- &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;主分支&lt;/a&gt;包含Jekyll的实际软件项目，而您现在正在查看的Jekyll网站包含在同一存储库的&lt;a href=&quot;https://github.com/jekyll/jekyll/tree/master/docs&quot;&gt;docs文件夹&lt;/a&gt;中。</target>
        </trans-unit>
        <trans-unit id="883abcc631b039dcc2e7dd273ebc23da68c2d88d" translate="yes" xml:space="preserve">
          <source>The Jekyll site we&amp;rsquo;ll be using for the rest of this page initially consists of just a &lt;code&gt;_config.yml&lt;/code&gt;, an &lt;code&gt;index.md&lt;/code&gt; page and a &lt;code&gt;Gemfile&lt;/code&gt;. The contents are respectively:</source>
          <target state="translated">我们将在本页面其余部分使用的Jekyll站点最初仅由 &lt;code&gt;_config.yml&lt;/code&gt; ， &lt;code&gt;index.md&lt;/code&gt; 页面和 &lt;code&gt;Gemfile&lt;/code&gt; 组成。内容分别是：</target>
        </trans-unit>
        <trans-unit id="9f7b363d7bb8629580831520270146fdabd9d747" translate="yes" xml:space="preserve">
          <source>The Posts Folder</source>
          <target state="translated">帖子文件夹</target>
        </trans-unit>
        <trans-unit id="b4f586a6f482917778790b090fab3a1b33e8d3fe" translate="yes" xml:space="preserve">
          <source>The Sass converter will default the &lt;code&gt;sass_dir&lt;/code&gt; configuration option to &lt;code&gt;_sass&lt;/code&gt;.</source>
          <target state="translated">Sass转换器会将 &lt;code&gt;sass_dir&lt;/code&gt; 配置选项默认为 &lt;code&gt;_sass&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a29073bd4807ee992ba4e2f23e3f1865e57d71a" translate="yes" xml:space="preserve">
          <source>The URL of the Post without the domain, but with a leading slash, e.g. &lt;code&gt;/2008/12/14/my-post.html&lt;/code&gt;</source>
          <target state="translated">不带域但带斜杠的帖子的URL，例如 &lt;code&gt;/2008/12/14/my-post.html&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f17187466f6ecc4c73161aa2ab9f1af86b2a36cd" translate="yes" xml:space="preserve">
          <source>The URL of the rendered collection. The file is only written to the destination when the collection to which it belongs has &lt;code&gt;output: true&lt;/code&gt; in the site's configuration.</source>
          <target state="translated">呈现的集合的URL。仅当文件所属的集合具有 &lt;code&gt;output: true&lt;/code&gt; 时才将文件写入目标：在站点配置中为true。</target>
        </trans-unit>
        <trans-unit id="c60bd519de2c1efae2e2361782ce6ba4bc064f9c" translate="yes" xml:space="preserve">
          <source>The `Time` the file was last modified, e.g. &lt;code&gt;2016-04-01 16:35:26 +0200&lt;/code&gt;</source>
          <target state="translated">文件的&amp;ldquo;时间&amp;rdquo;上次修改时间，例如 &lt;code&gt;2016-04-01 16:35:26 +0200&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="95816e3e6b937460e49d18e3369071d799c5f9fc" translate="yes" xml:space="preserve">
          <source>The above example depicts the &amp;ldquo;warn&amp;rdquo; value, which is already set by default- &lt;code&gt;error_mode: warn&lt;/code&gt;. This results in any issues being called out during the build process however will continue to build if possible.</source>
          <target state="translated">上面的示例描述了&amp;ldquo; warn&amp;rdquo;值，该值已 &lt;code&gt;error_mode: warn&lt;/code&gt; 设置为error_mode：warn。这将导致在构建过程中发现任何问题，但是如果可能的话，将继续构建。</target>
        </trans-unit>
        <trans-unit id="d948940dd2596a3cab1e1a093d41c70c44f3f75e" translate="yes" xml:space="preserve">
          <source>The above workflow can be explained as the following:</source>
          <target state="translated">上述工作流程可以解释为:?</target>
        </trans-unit>
        <trans-unit id="3c95e94b845ee32f7d98f7caea42801a64174689" translate="yes" xml:space="preserve">
          <source>The action needs permissions to push to your &lt;code&gt;gh-pages&lt;/code&gt; branch. So you need to create a GitHub &lt;strong&gt;authentication token&lt;/strong&gt; on your GitHub profile, then set it as an environment variable in your build using &lt;em&gt;Secrets&lt;/em&gt;:</source>
          <target state="translated">该操作需要权限才能推送到 &lt;code&gt;gh-pages&lt;/code&gt; 分支。因此，您需要在GitHub个人资料上创建GitHub&lt;strong&gt;身份验证令牌&lt;/strong&gt;，然后使用&lt;em&gt;Secrets&lt;/em&gt;在构建中将其设置为环境变量：</target>
        </trans-unit>
        <trans-unit id="f75f038d27f3676e1e2fe7cc72f7bfb6b448d956" translate="yes" xml:space="preserve">
          <source>The action we&amp;rsquo;re using takes care of installing the Ruby gems and dependencies. While that keeps the setup simple for the user, one may encounter issues if they also check-in &lt;code&gt;Gemfile.lock&lt;/code&gt; if it was generated with an old version of Bundler.</source>
          <target state="translated">我们正在使用的操作负责安装Ruby gem和依赖项。尽管这样可以简化用户设置，但如果他们也签入 &lt;code&gt;Gemfile.lock&lt;/code&gt; (如果它是由旧版本的Bundler生成的），则可能会遇到问题。</target>
        </trans-unit>
        <trans-unit id="2397f25be69740f387eb075765b96597329f7893" translate="yes" xml:space="preserve">
          <source>The argument to the &lt;code&gt;highlight&lt;/code&gt; tag (&lt;code&gt;ruby&lt;/code&gt; in the example above) is the language identifier. To find the appropriate identifier to use for the language you want to highlight, look for the &amp;ldquo;short name&amp;rdquo; on the &lt;a href=&quot;https://github.com/jayferd/rouge/wiki/List-of-supported-languages-and-lexers&quot;&gt;Rouge wiki&lt;/a&gt; or the &lt;a href=&quot;http://pygments.org/docs/lexers/&quot;&gt;Pygments&amp;rsquo; Lexers page&lt;/a&gt;.</source>
          <target state="translated">到的参数 &lt;code&gt;highlight&lt;/code&gt; 标记（ &lt;code&gt;ruby&lt;/code&gt; 在上面的例子）是语言标识符。要找到要突出显示的语言的合适标识符，请在&lt;a href=&quot;https://github.com/jayferd/rouge/wiki/List-of-supported-languages-and-lexers&quot;&gt;Rouge Wiki&lt;/a&gt;或&lt;a href=&quot;http://pygments.org/docs/lexers/&quot;&gt;Pygments的Lexers页面&lt;/a&gt;上查找&amp;ldquo;短名称&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="63c48e46e2dd74954f7115b56f60300f97270f85" translate="yes" xml:space="preserve">
          <source>The argument to the &lt;code&gt;highlight&lt;/code&gt; tag (&lt;code&gt;ruby&lt;/code&gt; in the example above) is the language identifier. To find the appropriate identifier to use for the language you want to highlight, look for the &amp;ldquo;short name&amp;rdquo; on the &lt;a href=&quot;https://github.com/jayferd/rouge/wiki/List-of-supported-languages-and-lexers&quot;&gt;Rouge wiki&lt;/a&gt;.</source>
          <target state="translated">到的参数 &lt;code&gt;highlight&lt;/code&gt; 标记（ &lt;code&gt;ruby&lt;/code&gt; 在上面的例子）是语言标识符。要找到要突出显示的语言的适当标识符，请在&lt;a href=&quot;https://github.com/jayferd/rouge/wiki/List-of-supported-languages-and-lexers&quot;&gt;Rouge Wiki&lt;/a&gt;上查找&amp;ldquo;短名称&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="e142e7d922bb00ee7ccafb06638b76b84605d746" translate="yes" xml:space="preserve">
          <source>The author can then be specified as a page variable in a post&amp;rsquo;s front matter:</source>
          <target state="translated">然后可以将作者指定为帖子前端的页面变量：</target>
        </trans-unit>
        <trans-unit id="de3699015c539ff487998ff6eafb1f53089592c2" translate="yes" xml:space="preserve">
          <source>The author can then be specified as a page variable in a post&amp;rsquo;s frontmatter:</source>
          <target state="translated">然后可以将作者指定为帖子前题中的页面变量：</target>
        </trans-unit>
        <trans-unit id="6a94f37fadd7da4c6b1ad9595de211831c917d18" translate="yes" xml:space="preserve">
          <source>The best way to install Jekyll is via &lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGems&lt;/a&gt;. At the terminal prompt, simply run the following command to install Jekyll:</source>
          <target state="translated">最好的安装Jekyll的方法是通过&lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGems&lt;/a&gt;。在终端提示符下，只需运行以下命令即可安装Jekyll：</target>
        </trans-unit>
        <trans-unit id="7e1bc14a58f9132372733aab2f3c315cdce4526c" translate="yes" xml:space="preserve">
          <source>The build script file needs to have the &lt;em&gt;executable&lt;/em&gt; attribute set or Travis will fail with a permission denied error. You can also run this locally and commit the permissions directly, thus rendering this step irrelevant.</source>
          <target state="translated">构建脚本文件需要设置&lt;em&gt;可执行&lt;/em&gt;属性，否则Travis将失败，并显示权限被拒绝错误。您还可以在本地运行此命令并直接提交权限，因此使此步骤无关紧要。</target>
        </trans-unit>
        <trans-unit id="9a28e5b5ecc753f02df3722d44be4cc111642c27" translate="yes" xml:space="preserve">
          <source>The collections are also available under &lt;code&gt;site.collections&lt;/code&gt;, with the metadata you specified in your &lt;code&gt;_config.yml&lt;/code&gt; (if present) and the following information:</source>
          <target state="translated">这些集合还可以在 &lt;code&gt;site.collections&lt;/code&gt; 下获得，其中包含您在 &lt;code&gt;_config.yml&lt;/code&gt; 中指定的元数据（如果存在）以及以下信息：</target>
        </trans-unit>
        <trans-unit id="4922c5c33c00d746b65dd822422c6021bc3632c8" translate="yes" xml:space="preserve">
          <source>The complete list of available hooks is below:</source>
          <target state="translated">完整的可用钩子列表如下。</target>
        </trans-unit>
        <trans-unit id="aec9c027612411df4fccea6e5474c3b76d899c16" translate="yes" xml:space="preserve">
          <source>The complete list of available hooks:</source>
          <target state="translated">可用钩子的完整列表。</target>
        </trans-unit>
        <trans-unit id="e127986025eeef41ee36416b8aa30c4c328c3bb6" translate="yes" xml:space="preserve">
          <source>The config flag explicitly specifies your configuration file(s)</source>
          <target state="translated">config标志明确指定了你的配置文件。</target>
        </trans-unit>
        <trans-unit id="cd1f5fe794b0d7a1e3592860f1795f4726f9ed63" translate="yes" xml:space="preserve">
          <source>The content of the Page, rendered or un-rendered depending upon what Liquid is being processed and what &lt;code&gt;page&lt;/code&gt; is.</source>
          <target state="translated">页面的内容，呈现还是未呈现，取决于正在处理的液体和 &lt;code&gt;page&lt;/code&gt; 类型。</target>
        </trans-unit>
        <trans-unit id="0ad84f221f09a5cca8473177feb743d0286dfc3a" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; are automatically cleaned, by default, when the site is built. Files or folders that are not created by your site will be removed. Files and folders you wish to retain in &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; may be specified within the &lt;code&gt;&amp;lt;keep_files&amp;gt;&lt;/code&gt; configuration directive.</source>
          <target state="translated">默认情况下，在构建站点时， &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; 的内容会自动清除。您的站点未创建的文件或文件夹将被删除。您希望保留在 &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; 文件和文件夹可以在 &lt;code&gt;&amp;lt;keep_files&amp;gt;&lt;/code&gt; 配置指令中指定。</target>
        </trans-unit>
        <trans-unit id="ced790b62fc4d3512128b154b5dad8c8dd6b59d5" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; are automatically cleaned, by default, when the site is built. Files or folders that are not created by your site will be removed. Some files could be retained by specifying them within the &lt;code&gt;&amp;lt;keep_files&amp;gt;&lt;/code&gt; configuration directive.</source>
          <target state="translated">默认情况下，在构建站点时， &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; 的内容会自动清除。您的站点未创建的文件或文件夹将被删除。通过在 &lt;code&gt;&amp;lt;keep_files&amp;gt;&lt;/code&gt; 配置指令中指定它们，可以保留某些文件。</target>
        </trans-unit>
        <trans-unit id="b8e9c8d15bd8417fab41ce40cea38519f11b5ec7" translate="yes" xml:space="preserve">
          <source>The current time (when you run the &lt;code&gt;jekyll&lt;/code&gt; command).</source>
          <target state="translated">当前时间（运行 &lt;code&gt;jekyll&lt;/code&gt; 命令时）。</target>
        </trans-unit>
        <trans-unit id="81333770209a28d4fb803c7b6d048bd62c30f009" translate="yes" xml:space="preserve">
          <source>The date of the document's collection.</source>
          <target state="translated">文件的收集日期;</target>
        </trans-unit>
        <trans-unit id="461cca207b53f8ae0b009479df21150c362e5974" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;JEKYLL_ENV&lt;/code&gt; is &lt;code&gt;development&lt;/code&gt;. Therefore if you omit &lt;code&gt;JEKYLL_ENV&lt;/code&gt; from the build arguments, the default value will be &lt;code&gt;JEKYLL_ENV=development&lt;/code&gt;. Any content inside &lt;code&gt;{% if jekyll.environment == &quot;development&quot; %}&lt;/code&gt; tags will automatically appear in the build.</source>
          <target state="translated">为默认值 &lt;code&gt;JEKYLL_ENV&lt;/code&gt; 是 &lt;code&gt;development&lt;/code&gt; 。因此，如果您从构建参数中省略了 &lt;code&gt;JEKYLL_ENV&lt;/code&gt; ，则默认值为 &lt;code&gt;JEKYLL_ENV=development&lt;/code&gt; 。 &lt;code&gt;{% if jekyll.environment == &quot;development&quot; %}&lt;/code&gt; 标记内的任何内容将自动显示在构建中。</target>
        </trans-unit>
        <trans-unit id="e78a26f993e07d954fb2ad1739f3350189468235" translate="yes" xml:space="preserve">
          <source>The demo site uses Jekyll 4 and a &lt;a href=&quot;https://rubygems.org/gems/jekyll-timeago&quot;&gt;third-party plugin&lt;/a&gt;, both of which are currently not whitelisted for use on GitHub pages. The plugin will allow us to describe how far back a date was from today. e.g. If we give a date as &lt;code&gt;2016-03-23T10:20:00Z&lt;/code&gt; and the current date is &lt;code&gt;2020-04-13T10:20:00Z&lt;/code&gt;, then the output would be &lt;code&gt;4 years and 3 weeks ago&lt;/code&gt;.</source>
          <target state="translated">该演示站点使用Jekyll 4和一个&lt;a href=&quot;https://rubygems.org/gems/jekyll-timeago&quot;&gt;第三方插件&lt;/a&gt;，这两个插件当前都未列入白名单，无法在GitHub页面上使用。该插件将使我们能够描述距今天有多远的日期。例如，如果我们给定日期为 &lt;code&gt;2016-03-23T10:20:00Z&lt;/code&gt; 并且当前日期为 &lt;code&gt;2020-04-13T10:20:00Z&lt;/code&gt; ，那么输出将是 &lt;code&gt;4 years and 3 weeks ago&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e759d725ab2be77e845b1fa546ac2b78b7b883c" translate="yes" xml:space="preserve">
          <source>The development kit did not set the environment path for Ruby so we need to do it.</source>
          <target state="translated">开发包没有为Ruby设置环境路径,所以我们需要这样做。</target>
        </trans-unit>
        <trans-unit id="1e43b15fe09c46cb3865b18a7f6be65df324e7bd" translate="yes" xml:space="preserve">
          <source>The document's base filename, with every sequence of spaces and non-alphanumeric characters replaced by a hyphen.</source>
          <target state="translated">文件的基本文件名,每一个空格和非字母数字字符序列都用连字符代替。</target>
        </trans-unit>
        <trans-unit id="fe7deb3bf2cfd08af171741db823159d78e35205" translate="yes" xml:space="preserve">
          <source>The documents are arranged in the increasing order of the key&amp;rsquo;s value. If a document does not have the front matter key defined then that document is placed immediately after sorted documents. When multiple documents do not have the front matter key defined, those documents are sorted by their dates or paths and then placed immediately after the sorted documents.</source>
          <target state="translated">文件以密钥值的升序排列。如果文档没有定义首要事项关键字，则该文档将立即放置在已排序的文档之后。当多个文档没有定义优先事项关键字时，这些文档将按其日期或路径进行排序，然后立即放置在排序后的文档之后。</target>
        </trans-unit>
        <trans-unit id="a9b329c139f1f25ac882ad0bf22d4dd7639f01a9" translate="yes" xml:space="preserve">
          <source>The easiest way to install Ruby and Jekyll is by using the &lt;a href=&quot;https://rubyinstaller.org/&quot;&gt;RubyInstaller&lt;/a&gt; for Windows.</source>
          <target state="translated">安装Ruby和Jekyll的最简单方法是使用Windows的&lt;a href=&quot;https://rubyinstaller.org/&quot;&gt;RubyInstaller&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a4d641be53fc4ded82073ab18060fbbaf5b40f1" translate="yes" xml:space="preserve">
          <source>The easiest way to manage dependencies for a Jekyll project (with or without CircleCI) is via a &lt;a href=&quot;http://bundler.io/gemfile.html&quot;&gt;Gemfile&lt;/a&gt;. You&amp;rsquo;d want to have Jekyll, any Jekyll plugins, &lt;a href=&quot;#html-proofer&quot;&gt;HTML Proofer&lt;/a&gt;, and any other gems that you are using in the &lt;code&gt;Gemfile&lt;/code&gt;. Don&amp;rsquo;t forget to version &lt;code&gt;Gemfile.lock&lt;/code&gt; as well. Here&amp;rsquo;s an example &lt;code&gt;Gemfile&lt;/code&gt;:</source>
          <target state="translated">管理Jekyll项目（具有或不具有CircleCI）的依赖项的最简单方法是通过&lt;a href=&quot;http://bundler.io/gemfile.html&quot;&gt;Gemfile&lt;/a&gt;。您想要在 &lt;code&gt;Gemfile&lt;/code&gt; 中使用Jekyll，任何Jekyll插件，&lt;a href=&quot;#html-proofer&quot;&gt;HTML Proofer&lt;/a&gt;以及任何其他gem 。别忘了也要版本 &lt;code&gt;Gemfile.lock&lt;/code&gt; 。这是一个 &lt;code&gt;Gemfile&lt;/code&gt; 示例：</target>
        </trans-unit>
        <trans-unit id="57264cdb7d974ba0caa6e6dcaa5ce5463ae218d1" translate="yes" xml:space="preserve">
          <source>The easiest way to manage dependencies for a Jekyll project (with or without CircleCI) is via a &lt;a href=&quot;https://bundler.io/gemfile.html&quot;&gt;Gemfile&lt;/a&gt;. You&amp;rsquo;d want to have Jekyll, any Jekyll plugins, &lt;a href=&quot;#html-proofer&quot;&gt;HTML Proofer&lt;/a&gt;, and any other gems that you are using in the &lt;code&gt;Gemfile&lt;/code&gt;. Don&amp;rsquo;t forget to version &lt;code&gt;Gemfile.lock&lt;/code&gt; as well. Here&amp;rsquo;s an example &lt;code&gt;Gemfile&lt;/code&gt;:</source>
          <target state="translated">管理Jekyll项目（具有或不具有CircleCI）的依赖项的最简单方法是通过&lt;a href=&quot;https://bundler.io/gemfile.html&quot;&gt;Gemfile&lt;/a&gt;。您想要在 &lt;code&gt;Gemfile&lt;/code&gt; 中使用Jekyll，任何Jekyll插件，&lt;a href=&quot;#html-proofer&quot;&gt;HTML Proofer&lt;/a&gt;以及任何其他gem 。别忘了也要版本 &lt;code&gt;Gemfile.lock&lt;/code&gt; 。这是 &lt;code&gt;Gemfile&lt;/code&gt; 的示例：</target>
        </trans-unit>
        <trans-unit id="d748830d1eb6c7bc2bc355bff36530957ac67d4c" translate="yes" xml:space="preserve">
          <source>The empty front matter at the top tells Jekyll it needs to process the file. The &lt;code&gt;@import &quot;main&quot;&lt;/code&gt; tells Sass to look for a file called &lt;code&gt;main.scss&lt;/code&gt; in the sass directory (&lt;code&gt;_sass/&lt;/code&gt;) by default which you already created directly under the root folder of your website).</source>
          <target state="translated">顶部的空白处告诉Jekyll需要处理该文件。该 &lt;code&gt;@import &quot;main&quot;&lt;/code&gt; 告诉萨斯寻找一个名为 &lt;code&gt;main.scss&lt;/code&gt; 在SASS目录（ &lt;code&gt;_sass/&lt;/code&gt; 默认情况下，你已经在你的网站的根文件夹）下直接创建）。</target>
        </trans-unit>
        <trans-unit id="73a3dd4503e0c749b6e314c596e455e7cdb6d627" translate="yes" xml:space="preserve">
          <source>The extension name for the file, e.g. &lt;code&gt;.jpg&lt;/code&gt; for &lt;code&gt;image.jpg&lt;/code&gt;</source>
          <target state="translated">文件的扩展名，例如， &lt;code&gt;.jpg&lt;/code&gt; 为 &lt;code&gt;image.jpg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="074f8f593ef85509bc81e5b846efb4fe5391555d" translate="yes" xml:space="preserve">
          <source>The extension to be given to the output file (including the dot). Usually this will be &lt;code&gt;&quot;.html&quot;&lt;/code&gt;.</source>
          <target state="translated">给输出文件的扩展名（包括点）。通常这将是 &lt;code&gt;&quot;.html&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1985dd167b56297205d3d8d895be5c175a2217a6" translate="yes" xml:space="preserve">
          <source>The filename of the post or page, e.g. &lt;code&gt;about.md&lt;/code&gt;</source>
          <target state="translated">帖子或页面的文件名，例如 &lt;code&gt;about.md&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49c7d9ace7eb773ad1a036f9015c39577b414641" translate="yes" xml:space="preserve">
          <source>The final step is to get the site onto a production server. The most basic way to do this is to run a production build:</source>
          <target state="translated">最后一步是把网站放到生产服务器上。最基本的方法是运行一个生产构建。</target>
        </trans-unit>
        <trans-unit id="96110bb5efbc0ba512f16b2645a5d7eeef72767f" translate="yes" xml:space="preserve">
          <source>The first and foremost requirement is a Jekyll project hosted at GitHub. Choose an existing Jekyll project or follow the &lt;a href=&quot;https://jekyllrb.com/docs&quot;&gt;Quickstart&lt;/a&gt; and push the repository to GitHub if it is not hosted there already.</source>
          <target state="translated">首先，最重要的要求是托管在GitHub上的Jekyll项目。选择一个现有的Jekyll项目，或按照&lt;a href=&quot;https://jekyllrb.com/docs&quot;&gt;快速入门&lt;/a&gt;将存储库推送到GitHub（如果尚未托管在该库中）。</target>
        </trans-unit>
        <trans-unit id="071a0f8feb31149cc4a872234934c640bd832437" translate="yes" xml:space="preserve">
          <source>The first build will start on its own. You can start telling CircleCI how to build your project by creating a &lt;a href=&quot;https://circleci.com/docs/configuration/&quot;&gt;circle.yml&lt;/a&gt; file in the root of your repository.</source>
          <target state="translated">第一次构建将自行开始。您可以通过在资源库的根目录中创建一个&lt;a href=&quot;https://circleci.com/docs/configuration/&quot;&gt;circle.yml&lt;/a&gt;文件，开始告诉CircleCI如何构建项目。</target>
        </trans-unit>
        <trans-unit id="ff0f0dd2cb7653fe7cfb0aedeb6d8b5e84edc946" translate="yes" xml:space="preserve">
          <source>The first step is to put the template source code in &lt;code&gt;default.html&lt;/code&gt;. &lt;code&gt;content&lt;/code&gt; is a special variable, the value is the rendered content of the post or page being wrapped.</source>
          <target state="translated">第一步是将模板源代码放在 &lt;code&gt;default.html&lt;/code&gt; 中。 &lt;code&gt;content&lt;/code&gt; 是一个特殊变量，值是要包装的帖子或页面的呈现内容。</target>
        </trans-unit>
        <trans-unit id="ff2aa84f0f847a851c69fbeaf082aacd65aeaef6" translate="yes" xml:space="preserve">
          <source>The folder must be named identically to the collection you defined in your &lt;code&gt;_config.yml&lt;/code&gt; file, with the addition of the preceding &lt;code&gt;_&lt;/code&gt; character.</source>
          <target state="translated">该文件夹的名称必须与您在 &lt;code&gt;_config.yml&lt;/code&gt; 文件中定义的集合相同，并带有前面的 &lt;code&gt;_&lt;/code&gt; 字符。</target>
        </trans-unit>
        <trans-unit id="20918523f72d93ec13db1517cbfc8928a940fdd9" translate="yes" xml:space="preserve">
          <source>The following HTML snippet should handle page one, and render a list of each page with links to all but the current page.</source>
          <target state="translated">下面的HTML代码段应该处理第1页,并呈现出每个页面的列表,其中包含除当前页面以外的所有链接。</target>
        </trans-unit>
        <trans-unit id="43bca52f5fc1e96c32524336aa4c0754f14b8073" translate="yes" xml:space="preserve">
          <source>The following example is a more complex generator that generates new pages. In this example, the generator will create a series of files under the &lt;code&gt;categories&lt;/code&gt; directory for each category, listing the posts in each category using the &lt;code&gt;category_index.html&lt;/code&gt; layout.</source>
          <target state="translated">以下示例是一个更复杂的生成器，用于生成新页面。在此示例中，生成器将在每个类别的 &lt;code&gt;categories&lt;/code&gt; 目录下创建一系列文件，并使用 &lt;code&gt;category_index.html&lt;/code&gt; 布局列出每个类别中的帖子。</target>
        </trans-unit>
        <trans-unit id="4ac3a4ea2bb7dfab17f62ce20dcfbf21480b1e99" translate="yes" xml:space="preserve">
          <source>The following table lists the template variables available for permalinks. You can use these variables in the &lt;code&gt;permalink&lt;/code&gt; property in your config file.</source>
          <target state="translated">下表列出了可用于永久链接的模板变量。您可以在配置文件的 &lt;code&gt;permalink&lt;/code&gt; 属性中使用这些变量。</target>
        </trans-unit>
        <trans-unit id="e06fe39e9c6aaf398c3c9b66746e0b4503b012f7" translate="yes" xml:space="preserve">
          <source>The front matter is where Jekyll starts to get really cool. Any file that contains a &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; front matter block will be processed by Jekyll as a special file. The front matter must be the first thing in the file and must take the form of valid YAML set between triple-dashed lines. Here is a basic example:</source>
          <target state="translated">最重要的是Jekyll在哪里开始变得非常酷。Jekyll将任何包含&lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt;前事块的文件作为特殊文件进行处理。最重要的事情必须是文件中的第一件事，并且必须采取在三点划线之间设置的有效YAML的形式。这是一个基本示例：</target>
        </trans-unit>
        <trans-unit id="380fc13db84b5364759de2687c000b05b1341582" translate="yes" xml:space="preserve">
          <source>The full path to the collections's source directory.</source>
          <target state="translated">收藏品的源目录的完整路径。</target>
        </trans-unit>
        <trans-unit id="24556f0780c34a4c2474ed19003cf32c035058f9" translate="yes" xml:space="preserve">
          <source>The full path to the document's source file.</source>
          <target state="translated">文档源文件的完整路径。</target>
        </trans-unit>
        <trans-unit id="38e774c2af112b48879984a6533c3733a5089ba7" translate="yes" xml:space="preserve">
          <source>The github-pages gem</source>
          <target state="translated">github-pages gem</target>
        </trans-unit>
        <trans-unit id="7db87227ddc536101f77023bb4d1038bdb0393ca" translate="yes" xml:space="preserve">
          <source>The goal of gem-based themes is to allow you to get all the benefits of a robust, continually updated theme without having all the theme&amp;rsquo;s files getting in your way and over-complicating what might be your primary focus: creating content.</source>
          <target state="translated">基于gem的主题的目标是使您能够获得强大，不断更新的主题的所有好处，而不会妨碍所有主题的文件，并且不会使您可能主要关注的主题（创建内容）过于复杂。</target>
        </trans-unit>
        <trans-unit id="203a2b909550365bbb6d53accdabeea16b65b367" translate="yes" xml:space="preserve">
          <source>The guides help you with the specifics of creating plugins. We also have some recommended best practices to help structure your plugin.</source>
          <target state="translated">指南帮助你了解创建插件的具体内容。我们也有一些推荐的最佳实践来帮助你的插件结构。</target>
        </trans-unit>
        <trans-unit id="9832241531a86fed69af41be4e9f8dbcd51ecac4" translate="yes" xml:space="preserve">
          <source>The hallmark difference between categories and tags is that categories of a post may be incorporated into &lt;a href=&quot;../permalinks/index#global&quot;&gt;the generated URL&lt;/a&gt; for the post, while tags cannot be.</source>
          <target state="translated">类别和标签之间的标志性区别在于，帖子的类别可以合并到该帖子&lt;a href=&quot;../permalinks/index#global&quot;&gt;的生成的URL&lt;/a&gt;中，而标签则不能。</target>
        </trans-unit>
        <trans-unit id="4b034ea59382f65d6ad92ab4829d189f89dc9a99" translate="yes" xml:space="preserve">
          <source>The jekyll_plugins group</source>
          <target state="translated">jekyll_plugins组。</target>
        </trans-unit>
        <trans-unit id="295cc9d2d2c4dc6d40154ebf181cd8dc4e96fa12" translate="yes" xml:space="preserve">
          <source>The label of the collection to which this document belongs. e.g. &lt;code&gt;posts&lt;/code&gt; for a post, or &lt;code&gt;puppies&lt;/code&gt; for a document at path &lt;code&gt;_puppies/rover.md&lt;/code&gt;. If not part of a collection, an empty string is returned.</source>
          <target state="translated">该文档所属集合的标签。例如， &lt;code&gt;posts&lt;/code&gt; 的帖子，或路径 &lt;code&gt;_puppies/rover.md&lt;/code&gt; 上的文档的 &lt;code&gt;puppies&lt;/code&gt; 。如果不是集合的一部分，则返回一个空字符串。</target>
        </trans-unit>
        <trans-unit id="ba4e1bc24ab615d4e3a3cd73fc2b8010a19b5f73" translate="yes" xml:space="preserve">
          <source>The latest version, version 2.0, seems to break the use of &lt;code&gt;{{&lt;/code&gt; in templates. Unlike previous versions, using &lt;code&gt;{{&lt;/code&gt; in 2.0 triggers the following error:</source>
          <target state="translated">最新版本2.0版似乎打破了模板中 &lt;code&gt;{{&lt;/code&gt; 的使用。与以前的版本不同，在2.0中使用 &lt;code&gt;{{&lt;/code&gt; 会触发以下错误：</target>
        </trans-unit>
        <trans-unit id="90196f7c2d9516518127e48bf65c6d41d8b18d87" translate="yes" xml:space="preserve">
          <source>The list of all Posts in category &lt;code&gt;CATEGORY&lt;/code&gt;.</source>
          <target state="translated">类别 &lt;code&gt;CATEGORY&lt;/code&gt; 中的所有帖子列表。</target>
        </trans-unit>
        <trans-unit id="8716ce1782221a8588f08b35fcce746c10a765e8" translate="yes" xml:space="preserve">
          <source>The list of all Posts with tag &lt;code&gt;TAG&lt;/code&gt;.</source>
          <target state="translated">标记为 &lt;code&gt;TAG&lt;/code&gt; 的所有帖子的列表。</target>
        </trans-unit>
        <trans-unit id="7838fafade831ac99f6250201b69db3111bad0f8" translate="yes" xml:space="preserve">
          <source>The list of categories to which this post belongs. Categories are derived from the directory structure above the &lt;code&gt;_posts&lt;/code&gt; directory. For example, a post at &lt;code&gt;/work/code/_posts/2008-12-24-closures.md&lt;/code&gt; would have this field set to &lt;code&gt;['work', 'code']&lt;/code&gt;. These can also be specified in the &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt;.</source>
          <target state="translated">帖子所属类别的列表。类别是从 &lt;code&gt;_posts&lt;/code&gt; 目录上方的目录结构派生的。例如，在 &lt;code&gt;/work/code/_posts/2008-12-24-closures.md&lt;/code&gt; 上的帖子会将此字段设置为 &lt;code&gt;['work', 'code']&lt;/code&gt; 。这些也可以在&lt;a href=&quot;../front-matter/index&quot;&gt;前面&lt;/a&gt;指定。</target>
        </trans-unit>
        <trans-unit id="e4f5bdfcd4df4e1a7077ef5853c19979f9ff4920" translate="yes" xml:space="preserve">
          <source>The list of categories to which this post belongs. Categories are derived from the directory structure above the &lt;code&gt;_posts&lt;/code&gt; directory. For example, a post at &lt;code&gt;/work/code/_posts/2008-12-24-closures.md&lt;/code&gt; would have this field set to &lt;code&gt;['work', 'code']&lt;/code&gt;. These can also be specified in the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;.</source>
          <target state="translated">帖子所属类别的列表。类别是从 &lt;code&gt;_posts&lt;/code&gt; 目录上方的目录结构派生的。例如，在 &lt;code&gt;/work/code/_posts/2008-12-24-closures.md&lt;/code&gt; 上的帖子会将此字段设置为 &lt;code&gt;['work', 'code']&lt;/code&gt; 。这些也可以在&lt;a href=&quot;../frontmatter/index&quot;&gt;YAML前端事项中&lt;/a&gt;指定。</target>
        </trans-unit>
        <trans-unit id="4c465fb09eb1d8ac0dab23ef069770ba6a0ecc7b" translate="yes" xml:space="preserve">
          <source>The list of tags to which this post belongs. These can be specified in the &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt;.</source>
          <target state="translated">帖子所属标签的列表。这些可以在&lt;a href=&quot;../front-matter/index&quot;&gt;前面&lt;/a&gt;指定。</target>
        </trans-unit>
        <trans-unit id="adc5aae74460c5b14cd23fd61101e4fb8e785167" translate="yes" xml:space="preserve">
          <source>The list of tags to which this post belongs. These can be specified in the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;.</source>
          <target state="translated">帖子所属标签的列表。这些可以在&lt;a href=&quot;../frontmatter/index&quot;&gt;YAML前端事项中&lt;/a&gt;指定。</target>
        </trans-unit>
        <trans-unit id="4ce8024977bedd11a6c5a842fd35ca7707b4eb63" translate="yes" xml:space="preserve">
          <source>The more recent &lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2&quot;&gt; jekyll-paginate-v2&lt;/a&gt; plugin supports more features. See the &lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2/tree/master/examples&quot;&gt; pagination examples&lt;/a&gt; in the repository. &lt;strong&gt;This plugin is not supported by GitHub Pages&lt;/strong&gt;.</source>
          <target state="translated">最新的&lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2&quot;&gt;jekyll-paginate-v2&lt;/a&gt;插件支持更多功能。请参见存储库中的&lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2/tree/master/examples&quot;&gt;分页示例&lt;/a&gt;。&lt;strong&gt;GitHub Pages不支持此插件&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="68a0bf74880922f66f4f16c3a505afcb88896f79" translate="yes" xml:space="preserve">
          <source>The more recent &lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2&quot;&gt;jekyll-paginate-v2&lt;/a&gt; plugin supports more features. See the &lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2/tree/master/examples&quot;&gt;pagination examples&lt;/a&gt; in the repository. &lt;strong&gt;This plugin is not supported by GitHub Pages&lt;/strong&gt;.</source>
          <target state="translated">最新的&lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2&quot;&gt;jekyll-paginate-v2&lt;/a&gt;插件支持更多功能。请参阅存储库中的&lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2/tree/master/examples&quot;&gt;分页示例&lt;/a&gt;。&lt;strong&gt;GitHub Pages不支持此插件&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="db0b9456f3f33ef7469d41931327971227302f8c" translate="yes" xml:space="preserve">
          <source>The most basic test that can be run is seeing if &lt;code&gt;jekyll build&lt;/code&gt; actually works. This is a blocker, a dependency if you will, for other tests you might run on the generate site. So we&amp;rsquo;ll run Jekyll, via Bundler, in the &lt;code&gt;dependencies&lt;/code&gt; phase.</source>
          <target state="translated">可以运行的最基本的测试是查看 &lt;code&gt;jekyll build&lt;/code&gt; 是否真正起作用。对于其他测试，您可以在生成站点上运行，这是一个阻止程序，如果您愿意的话，则为依赖项。因此，我们将在 &lt;code&gt;dependencies&lt;/code&gt; 阶段通过Bundler运行Jekyll 。</target>
        </trans-unit>
        <trans-unit id="ed7f4dd6b02c011a4ed405a56ff2fd9197108944" translate="yes" xml:space="preserve">
          <source>The most basic test that can be run is simply seeing if &lt;code&gt;jekyll build&lt;/code&gt; actually works. This is a blocker, a dependency if you will, for other tests you might run on the generate site. So we&amp;rsquo;ll run Jekyll, via Bundler, in the &lt;code&gt;dependencies&lt;/code&gt; phase.</source>
          <target state="translated">可以运行的最基本的测试只是查看 &lt;code&gt;jekyll build&lt;/code&gt; 是否真正起作用。对于您可能会在生成站点上运行的其他测试，这是一个阻止程序，如果您愿意的话，则为依赖性。因此，我们将在 &lt;code&gt;dependencies&lt;/code&gt; 阶段通过Bundler运行Jekyll 。</target>
        </trans-unit>
        <trans-unit id="b571265a0d4e05dc04f235fc6b1b262f5c011343" translate="yes" xml:space="preserve">
          <source>The name of the document's collection.</source>
          <target state="translated">文件的收藏名称。</target>
        </trans-unit>
        <trans-unit id="9340a47214628fecb21babe390b9bd99998d17d5" translate="yes" xml:space="preserve">
          <source>The name of the file you want to embed can be specified as a variable instead of an actual file name. For example, suppose you defined a variable in your page&amp;rsquo;s front matter like this:</source>
          <target state="translated">您可以将要嵌入的文件名指定为变量，而不是实际的文件名。例如，假设您在页面的前端定义了一个变量，如下所示：</target>
        </trans-unit>
        <trans-unit id="bee5b4727758530c5035785a048601721f38ff4a" translate="yes" xml:space="preserve">
          <source>The name of the file you want to link can be specified as a variable instead of an actual file name. For example, suppose you defined a variable in your page&amp;rsquo;s front matter like this:</source>
          <target state="translated">您可以将要链接的文件名指定为变量，而不是实际的文件名。例如，假设您在页面的前端定义了一个变量，如下所示：</target>
        </trans-unit>
        <trans-unit id="3e080fa25d64b3e0504153f78ce57cb3f2864d4c" translate="yes" xml:space="preserve">
          <source>The name of your collection, e.g. &lt;code&gt;my_collection&lt;/code&gt;.</source>
          <target state="translated">集合的名称，例如 &lt;code&gt;my_collection&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="26fa8a47f18a5a1edb636fe3e1835c1b2c6b35a3" translate="yes" xml:space="preserve">
          <source>The next post relative to the position of the current post in &lt;code&gt;site.posts&lt;/code&gt;. Returns &lt;code&gt;nil&lt;/code&gt; for the last entry.</source>
          <target state="translated">相对于当前帖子在 &lt;code&gt;site.posts&lt;/code&gt; 中的位置的下一个帖子。返回 &lt;code&gt;nil&lt;/code&gt; 作为最后一个条目。</target>
        </trans-unit>
        <trans-unit id="21900e42947b8a2188d47b9d4010bbf898418dee" translate="yes" xml:space="preserve">
          <source>The next thing you need to do is to actually display your posts in a list using the &lt;code&gt;paginator&lt;/code&gt; variable that will now be available to you. You&amp;rsquo;ll probably want to do this in one of the main pages of your site. Here&amp;rsquo;s one example of a simple way of rendering paginated Posts in a HTML file:</source>
          <target state="translated">接下来需要做的是使用现在可以使用的 &lt;code&gt;paginator&lt;/code&gt; 变量在列表中实际显示您的帖子。您可能需要在网站的主页之一中执行此操作。这是在HTML文件中呈现分页帖子的一种简单方法的示例：</target>
        </trans-unit>
        <trans-unit id="d2c0f63533ca859945d2209a7b7adccdfde0ae94" translate="yes" xml:space="preserve">
          <source>The number of the current page</source>
          <target state="translated">当前页面的编号</target>
        </trans-unit>
        <trans-unit id="5b68914dfdf4b44fa4d895c69f68bdc935729d17" translate="yes" xml:space="preserve">
          <source>The number of the current page.</source>
          <target state="translated">当前页面的编号。</target>
        </trans-unit>
        <trans-unit id="a98ce2d82bebf4d945184fa1945d1763c51ebb14" translate="yes" xml:space="preserve">
          <source>The number of the next page, or &lt;code&gt;nil&lt;/code&gt; if no subsequent page exists</source>
          <target state="translated">下一页的编号；如果不存在下一页，则为 &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="22c82db2fbfe3347ab67d10c4e1c7501e79e9e2f" translate="yes" xml:space="preserve">
          <source>The number of the next page.</source>
          <target state="translated">下一页的编号。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
