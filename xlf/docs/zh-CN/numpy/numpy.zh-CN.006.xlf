<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="numpy">
    <body>
      <group id="numpy">
        <trans-unit id="9b6bde107d0c3c8164f2b3ab1e4164dad1766298" translate="yes" xml:space="preserve">
          <source>BitGenerator to use as the core generator.</source>
          <target state="translated">BitGenerator作为核心生成器使用。</target>
        </trans-unit>
        <trans-unit id="dbbe08f6d74daba648b1cd173a6a41449071b1bf" translate="yes" xml:space="preserve">
          <source>BitGenerator.random_raw()</source>
          <target state="translated">BitGenerator.random_raw()</target>
        </trans-unit>
        <trans-unit id="ade67fe752c31c985cb01482e4ad03f16cfe18bb" translate="yes" xml:space="preserve">
          <source>BitGenerators: Objects that generate random numbers. These are typically unsigned integer words filled with sequences of either 32 or 64 random bits.</source>
          <target state="translated">BitGenerators。产生随机数的对象。这些通常是无符号整数字,充满了32或64个随机位的序列。</target>
        </trans-unit>
        <trans-unit id="a36a25a1cccb68c7c87fcd879bbb216973e2de75" translate="yes" xml:space="preserve">
          <source>Bits</source>
          <target state="translated">Bits</target>
        </trans-unit>
        <trans-unit id="02f4859e8970806328996752f2ca5818252436db" translate="yes" xml:space="preserve">
          <source>Bits are shifted to the left by appending &lt;code&gt;x2&lt;/code&gt; 0s at the right of &lt;code&gt;x1&lt;/code&gt;. Since the internal representation of numbers is in binary format, this operation is equivalent to multiplying &lt;code&gt;x1&lt;/code&gt; by &lt;code&gt;2**x2&lt;/code&gt;.</source>
          <target state="translated">通过在 &lt;code&gt;x1&lt;/code&gt; 的右边附加 &lt;code&gt;x2&lt;/code&gt; 0，将位向左移动。因为数字的内部表示为二进制格式，这种操作相当于乘以 &lt;code&gt;x1&lt;/code&gt; 由 &lt;code&gt;2**x2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d9f79b7b35bc256a0d1b6d4ab01f312eace24eb" translate="yes" xml:space="preserve">
          <source>Bits are shifted to the right &lt;code&gt;x2&lt;/code&gt;. Because the internal representation of numbers is in binary format, this operation is equivalent to dividing &lt;code&gt;x1&lt;/code&gt; by &lt;code&gt;2**x2&lt;/code&gt;.</source>
          <target state="translated">位向右移 &lt;code&gt;x2&lt;/code&gt; 。因为数字的内部表示是二进制格式，所以此操作等效于将 &lt;code&gt;x1&lt;/code&gt; 除以 &lt;code&gt;2**x2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="117a063b0a577c59c490f864292bca239247279f" translate="yes" xml:space="preserve">
          <source>Bits set for the object data-type: ( &lt;a href=&quot;#c.NPY_LIST_PICKLE&quot;&gt;&lt;code&gt;NPY_LIST_PICKLE&lt;/code&gt;&lt;/a&gt; | &lt;a href=&quot;#c.NPY_USE_GETITEM&quot;&gt;&lt;code&gt;NPY_USE_GETITEM&lt;/code&gt;&lt;/a&gt; | &lt;a href=&quot;#c.NPY_ITEM_IS_POINTER&quot;&gt;&lt;code&gt;NPY_ITEM_IS_POINTER&lt;/code&gt;&lt;/a&gt; | &lt;code&gt;NPY_REFCOUNT&lt;/code&gt; | &lt;a href=&quot;#c.NPY_NEEDS_INIT&quot;&gt;&lt;code&gt;NPY_NEEDS_INIT&lt;/code&gt;&lt;/a&gt; | &lt;a href=&quot;#c.NPY_NEEDS_PYAPI&quot;&gt;&lt;code&gt;NPY_NEEDS_PYAPI&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">为对象数据类型设置的位：（&lt;a href=&quot;#c.NPY_LIST_PICKLE&quot;&gt; &lt;code&gt;NPY_LIST_PICKLE&lt;/code&gt; &lt;/a&gt; | &lt;a href=&quot;#c.NPY_USE_GETITEM&quot;&gt; &lt;code&gt;NPY_USE_GETITEM&lt;/code&gt; &lt;/a&gt; | &lt;a href=&quot;#c.NPY_ITEM_IS_POINTER&quot;&gt; &lt;code&gt;NPY_ITEM_IS_POINTER&lt;/code&gt; &lt;/a&gt; | &lt;code&gt;NPY_REFCOUNT&lt;/code&gt; | &lt;a href=&quot;#c.NPY_NEEDS_INIT&quot;&gt; &lt;code&gt;NPY_NEEDS_INIT&lt;/code&gt; &lt;/a&gt; | &lt;a href=&quot;#c.NPY_NEEDS_PYAPI&quot;&gt; &lt;code&gt;NPY_NEEDS_PYAPI&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="13031923c83ade827195c6241750d4615a698b51" translate="yes" xml:space="preserve">
          <source>Blackman, R.B. and Tukey, J.W., (1958) The measurement of power spectra, Dover Publications, New York.</source>
          <target state="translated">Blackman,R.B.and Tukey,J.W.,(1958)The measurement of power spectra,Dover Publications,New York.</target>
        </trans-unit>
        <trans-unit id="348cdf7ff3c8eec7d1cd1aa8880558948fba2435" translate="yes" xml:space="preserve">
          <source>Blocks can be of any dimension, but will not be broadcasted using the normal rules. Instead, leading axes of size 1 are inserted, to make &lt;code&gt;block.ndim&lt;/code&gt; the same for all blocks. This is primarily useful for working with scalars, and means that code like &lt;code&gt;np.block([v, 1])&lt;/code&gt; is valid, where &lt;code&gt;v.ndim == 1&lt;/code&gt;.</source>
          <target state="translated">块可以是任何尺寸，但不会使用常规规则进行广播。而是插入大小为1的引导轴，以使 &lt;code&gt;block.ndim&lt;/code&gt; 对于所有块均相同。这对于处理标量主要有用，并且意味着像 &lt;code&gt;np.block([v, 1])&lt;/code&gt; 这样的代码是有效的，其中 &lt;code&gt;v.ndim == 1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8994034796d9ec39a7933eb34371fad5f6ce9920" translate="yes" xml:space="preserve">
          <source>Blocks in the innermost lists are concatenated (see &lt;a href=&quot;numpy.concatenate#numpy.concatenate&quot;&gt;&lt;code&gt;concatenate&lt;/code&gt;&lt;/a&gt;) along the last dimension (-1), then these are concatenated along the second-last dimension (-2), and so on until the outermost list is reached.</source>
          <target state="translated">最里面的列表中的块沿最后一个维度（-1）串联（请参阅&lt;a href=&quot;numpy.concatenate#numpy.concatenate&quot;&gt; &lt;code&gt;concatenate&lt;/code&gt; &lt;/a&gt;），然后沿着倒数第二个维度（-2）进行串联，依此类推，直到到达最外面的列表。</target>
        </trans-unit>
        <trans-unit id="b76ff4906f33c2dd97ddd929b9662ba8cac6174c" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="translated">Boolean</target>
        </trans-unit>
        <trans-unit id="71383121b53c1c9facdaaabc47b0de18549c5c80" translate="yes" xml:space="preserve">
          <source>Boolean (integer type where all values are only True or False)</source>
          <target state="translated">布尔型(整数型,所有值只有真或假)</target>
        </trans-unit>
        <trans-unit id="c7a0fd639a6581c56ba10f492adee6f212cd45b8" translate="yes" xml:space="preserve">
          <source>Boolean 1-d array selecting which entries to return. If len(condition) is less than the size of a along the axis, then output is truncated to length of condition array.</source>
          <target state="translated">布尔型1-d数组,选择要返回的条目。如果len(condition)沿轴线小于a的大小,那么输出将被截断到condition数组的长度。</target>
        </trans-unit>
        <trans-unit id="87962449a461c8ec49f5151d2bbb30e7a462a28e" translate="yes" xml:space="preserve">
          <source>Boolean array indexing</source>
          <target state="translated">布尔阵列索引</target>
        </trans-unit>
        <trans-unit id="c1aefe73a2b6727a0e572007771ddec686a6bb1f" translate="yes" xml:space="preserve">
          <source>Boolean array of same shape as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;x&lt;/code&gt; 形状相同的布尔数组。</target>
        </trans-unit>
        <trans-unit id="639386fbce5315b91a1c655018a3b9643e9bcfef" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether the byte order of this dtype is native to the platform.</source>
          <target state="translated">表示该dtype的字节顺序是否为平台本地的布尔值。</target>
        </trans-unit>
        <trans-unit id="0c76417c3c3c65ffeed61396388e3db4b8c19de6" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether the dtype is a struct which maintains field alignment.</source>
          <target state="translated">表示dtype是否为保持字段对齐的结构的布尔值。</target>
        </trans-unit>
        <trans-unit id="dad1680b2705f6d7f6eeec97cbb513a4e1699f09" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether the dtype is a struct which maintains field alignment. This flag is sticky, so when combining multiple structs together, it is preserved and produces new dtypes which are also aligned.</source>
          <target state="translated">表示dtype是否是一个保持字段对齐的结构的布尔值。这个标志是粘性的,所以当把多个结构组合在一起时,它将被保留,并产生同样对齐的新dtype。</target>
        </trans-unit>
        <trans-unit id="36f2224ace3c78a988e50bdc966ac649a4d3fc0b" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether this dtype contains any reference-counted objects in any fields or sub-dtypes.</source>
          <target state="translated">表示该dtype是否在任何字段或子类型中包含任何引用计数对象的布尔值。</target>
        </trans-unit>
        <trans-unit id="398d7e2271209225ea68a985a7b2fa72caeee3a6" translate="yes" xml:space="preserve">
          <source>Boolean mask array. It has to be the same shape as &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">布尔掩码数组。它必须是相同的形状作为 &lt;code&gt;a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59815579c0e1a982c330b63fe4d4075e4fd81815" translate="yes" xml:space="preserve">
          <source>Boolean mask array. Must have the same size as &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">布尔掩码数组。必须有大小相同的 &lt;code&gt;a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30d9ef559552bdd87313d89c8796d8136275e739" translate="yes" xml:space="preserve">
          <source>Boolean operations</source>
          <target state="translated">布尔运算</target>
        </trans-unit>
        <trans-unit id="dd5ec2e25bdf5818c59dcd317ab96e5a1ea9111e" translate="yes" xml:space="preserve">
          <source>Boolean result of check whether &lt;code&gt;rep&lt;/code&gt; is a scalar dtype.</source>
          <target state="translated">检查 &lt;code&gt;rep&lt;/code&gt; 是否为标量dtype的布尔结果。</target>
        </trans-unit>
        <trans-unit id="80129c87ec19d7266b12fa62c898f1de8e697318" translate="yes" xml:space="preserve">
          <source>Boolean result of the logical OR operation applied to the elements of &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt;; the shape is determined by broadcasting. This is a scalar if both &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt; are scalars.</source>
          <target state="translated">应用于 &lt;code&gt;x1&lt;/code&gt; 和 &lt;code&gt;x2&lt;/code&gt; 元素的逻辑或运算的布尔结果; 形状由广播决定。如果 &lt;code&gt;x1&lt;/code&gt; 和 &lt;code&gt;x2&lt;/code&gt; 均为标量，则为标量。</target>
        </trans-unit>
        <trans-unit id="efce76e1529f243bc75f6c85e1cb168b94a21ce6" translate="yes" xml:space="preserve">
          <source>Boolean result of the logical XOR operation applied to the elements of &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt;; the shape is determined by broadcasting. This is a scalar if both &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt; are scalars.</source>
          <target state="translated">逻辑xor运算的布尔结果应用于 &lt;code&gt;x1&lt;/code&gt; 和 &lt;code&gt;x2&lt;/code&gt; 的元素; 形状由广播决定。如果 &lt;code&gt;x1&lt;/code&gt; 和 &lt;code&gt;x2&lt;/code&gt; 均为标量，则为标量。</target>
        </trans-unit>
        <trans-unit id="e598e8b30eff8ac988c047694ee54841654f4531" translate="yes" xml:space="preserve">
          <source>Boolean result with the same shape as &lt;code&gt;x&lt;/code&gt; of the NOT operation on elements of &lt;code&gt;x&lt;/code&gt;. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">与 &lt;code&gt;x&lt;/code&gt; 元素上的NOT运算的 &lt;code&gt;x&lt;/code&gt; 形状相同的布尔结果。如果 &lt;code&gt;x&lt;/code&gt; 是标量，则这是标量。</target>
        </trans-unit>
        <trans-unit id="4cfb7a503c91815ccbf2f35210fcd3eadc71e7eb" translate="yes" xml:space="preserve">
          <source>Booleans are accepted as well:</source>
          <target state="translated">布尔汉也是可以接受的。</target>
        </trans-unit>
        <trans-unit id="fff8683eb97daf0f7f34cfbaabaadf811d8b8133" translate="yes" xml:space="preserve">
          <source>Booleans:</source>
          <target state="translated">Booleans:</target>
        </trans-unit>
        <trans-unit id="6a6c7de0b010d58cd0f9cb5716158db428b24bc0" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;v&lt;/code&gt; must be 0-d or 1-d (ndim = 0 or 1), but &lt;code&gt;u.ndim&lt;/code&gt; need not equal &lt;code&gt;v.ndim&lt;/code&gt;. In other words, all four possible combinations - &lt;code&gt;u.ndim = v.ndim = 0&lt;/code&gt;, &lt;code&gt;u.ndim = v.ndim = 1&lt;/code&gt;, &lt;code&gt;u.ndim = 1, v.ndim = 0&lt;/code&gt;, and &lt;code&gt;u.ndim = 0, v.ndim = 1&lt;/code&gt; - work.</source>
          <target state="translated">既 &lt;code&gt;u&lt;/code&gt; 和 &lt;code&gt;v&lt;/code&gt; 必须是0-d或1-d（NDIM = 0或1），但 &lt;code&gt;u.ndim&lt;/code&gt; 需要不等于 &lt;code&gt;v.ndim&lt;/code&gt; 。换句话说，所有四个可能的组合 &lt;code&gt;u.ndim = v.ndim = 0&lt;/code&gt; ， &lt;code&gt;u.ndim = v.ndim = 1&lt;/code&gt; ， &lt;code&gt;u.ndim = 1, v.ndim = 0&lt;/code&gt; 和 &lt;code&gt;u.ndim = 0, v.ndim = 1&lt;/code&gt; 工作。</target>
        </trans-unit>
        <trans-unit id="88f65d9e2d112f1a7a284a45eccfdccc621dc60d" translate="yes" xml:space="preserve">
          <source>Both C-ordering (&amp;ldquo;last dimension fastest&amp;rdquo;) or Fortran-ordering (&amp;ldquo;first dimension fastest&amp;rdquo;) support for 2D, 3D and 4D arrays.</source>
          <target state="translated">C排序（&amp;ldquo;最后一维最快&amp;rdquo;）或Fortran排序（&amp;ldquo;第一维最快&amp;rdquo;）都支持2D，3D和4D阵列。</target>
        </trans-unit>
        <trans-unit id="6876b038e6598420047feff6385d214f7a9456e4" translate="yes" xml:space="preserve">
          <source>Both CTypes and CFFI allow the more complicated distributions to be used directly in Numba after compiling the file distributions.c into a DLL or so. An example showing the use of a more complicated distribution is in the examples folder.</source>
          <target state="translated">CTypes和CFFI都允许在将distributions.c文件编译成DLL之类的文件后,直接在Numba中使用更复杂的分布式。在examples文件夹中,有一个例子展示了如何使用更复杂的分布式。</target>
        </trans-unit>
        <trans-unit id="9b2e6b498660f219d33da75fb672071ec22d0de1" translate="yes" xml:space="preserve">
          <source>Both arguments must be convertible to data-type objects with the same total size.</source>
          <target state="translated">两个参数都必须可以转换为总大小相同的数据类型对象。</target>
        </trans-unit>
        <trans-unit id="25024cfe43b48611add0d26f273e9fb8f30c82d0" translate="yes" xml:space="preserve">
          <source>Both for indexing:</source>
          <target state="translated">既为索引。</target>
        </trans-unit>
        <trans-unit id="9c58adbe49cf294225a6b4d010fdfff04815b05a" translate="yes" xml:space="preserve">
          <source>Both of these routines multiply an &lt;em&gt;n&lt;/em&gt; -length array, &lt;em&gt;seq&lt;/em&gt;, of integers and return the result. No overflow checking is performed.</source>
          <target state="translated">这两个例程都将一个&lt;em&gt;n&lt;/em&gt;长度的整数&lt;em&gt;seq&lt;/em&gt;乘以整数并返回结果。不执行溢出检查。</target>
        </trans-unit>
        <trans-unit id="6a9d7b7663daf24925c25758270cb4610491dfdf" translate="yes" xml:space="preserve">
          <source>Both the C and Fortran orders are &lt;a href=&quot;https://docs.python.org/dev/glossary.html#term-contiguous&quot;&gt;contiguous&lt;/a&gt;, &lt;em&gt;i.e.,&lt;/em&gt; single-segment, memory layouts, in which every part of the memory block can be accessed by some combination of the indices.</source>
          <target state="translated">C和Fortran顺序都是&lt;a href=&quot;https://docs.python.org/dev/glossary.html#term-contiguous&quot;&gt;连续的&lt;/a&gt;，&lt;em&gt;即&lt;/em&gt;单段内存布局，其中可以通过索引的某种组合来访问内存块的每个部分。</target>
        </trans-unit>
        <trans-unit id="ffea5bc12b4c544392f03bcbcae76a932ec7e9d3" translate="yes" xml:space="preserve">
          <source>Both vectors with dimension 2.</source>
          <target state="translated">都是维度为2的向量。</target>
        </trans-unit>
        <trans-unit id="bd6b304289af9581af2ffeee2445279337f31f30" translate="yes" xml:space="preserve">
          <source>Brighton Webs Ltd., &amp;ldquo;Rayleigh Distribution,&amp;rdquo; &lt;a href=&quot;https://web.archive.org/web/20090514091424/http://brighton-webs.co.uk:80/distributions/rayleigh.asp&quot;&gt;https://web.archive.org/web/20090514091424/http://brighton-webs.co.uk:80/distributions/rayleigh.asp&lt;/a&gt;</source>
          <target state="translated">Brighton Webs Ltd。，&amp;ldquo; Rayleigh Distribution&amp;rdquo;，&lt;a href=&quot;https://web.archive.org/web/20090514091424/http://brighton-webs.co.uk:80/distributions/rayleigh.asp&quot;&gt;https：&lt;/a&gt; //web.archive.org/web/20090514091424/http：//brighton-webs.co.uk：80 / distributions / rayleigh.asp</target>
        </trans-unit>
        <trans-unit id="f95280aadb50a5d76ebefb36fbe813c4a9ec99eb" translate="yes" xml:space="preserve">
          <source>Brighton Webs Ltd., Wald Distribution, &lt;a href=&quot;https://web.archive.org/web/20090423014010/http://www.brighton-webs.co.uk:80/distributions/wald.asp&quot;&gt;https://web.archive.org/web/20090423014010/http://www.brighton-webs.co.uk:80/distributions/wald.asp&lt;/a&gt;</source>
          <target state="translated">Brighton Webs Ltd.，Wald Distribution，&lt;a href=&quot;https://web.archive.org/web/20090423014010/http://www.brighton-webs.co.uk:80/distributions/wald.asp&quot;&gt;https:&lt;/a&gt; //web.archive.org/web/20090423014010/http://www.brighton-webs.co.uk:80/distributions/wald.asp</target>
        </trans-unit>
        <trans-unit id="8d469ff5df319fd73b1f4431adc89a3cb7f9bc26" translate="yes" xml:space="preserve">
          <source>Broadcast an array to a new shape</source>
          <target state="translated">将一个数组广播成一个新的形状</target>
        </trans-unit>
        <trans-unit id="73facd5bb35116bed91fa4d11828ee34122a7818" translate="yes" xml:space="preserve">
          <source>Broadcast an array to a new shape.</source>
          <target state="translated">将一个数组广播成一个新的形状。</target>
        </trans-unit>
        <trans-unit id="335cb5d296e07dc61fd4677d50111abd1712ceae" translate="yes" xml:space="preserve">
          <source>Broadcast any number of arrays against each other.</source>
          <target state="translated">互相广播任意数量的数组。</target>
        </trans-unit>
        <trans-unit id="98d4c99349e07c3606d8247f67b6a69bf991b037" translate="yes" xml:space="preserve">
          <source>Broadcast the input parameters against one another, and return an object that encapsulates the result. Amongst others, it has &lt;code&gt;shape&lt;/code&gt; and &lt;code&gt;nd&lt;/code&gt; properties, and may be used as an iterator.</source>
          <target state="translated">相互广播输入参数，并返回一个封装结果的对象。其中，它具有 &lt;code&gt;shape&lt;/code&gt; 和 &lt;code&gt;nd&lt;/code&gt; 属性，可以用作迭代器。</target>
        </trans-unit>
        <trans-unit id="ba459229366746c447e3cdf752eb917433152cfe" translate="yes" xml:space="preserve">
          <source>Broadcasting</source>
          <target state="translated">Broadcasting</target>
        </trans-unit>
        <trans-unit id="2d4bd5e0675f1aedc285134fe7e6bea24d68a36e" translate="yes" xml:space="preserve">
          <source>Broadcasting (multi-iterators)</source>
          <target state="translated">广播(多中继器)</target>
        </trans-unit>
        <trans-unit id="5e308728b0383411510cb3c77af8cc43a178e5fc" translate="yes" xml:space="preserve">
          <source>Broadcasting Array Iteration</source>
          <target state="translated">广播阵列迭代</target>
        </trans-unit>
        <trans-unit id="3f1a8f806c9ec4c20408d10522361491e36b1938" translate="yes" xml:space="preserve">
          <source>Broadcasting and scalar multiplication:</source>
          <target state="translated">广播和标量乘法。</target>
        </trans-unit>
        <trans-unit id="3086582d38372be76fcd6867986780678b3bdbd6" translate="yes" xml:space="preserve">
          <source>Broadcasting is conventional for stacks of arrays</source>
          <target state="translated">广播是传统的堆栈阵列。</target>
        </trans-unit>
        <trans-unit id="c8a22fa6f76158c02a615ce1e41377e5e327d96b" translate="yes" xml:space="preserve">
          <source>Broadcasting is used throughout NumPy to decide how to handle disparately shaped arrays; for example, all arithmetic operations (&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &amp;hellip;) between &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarrays&lt;/code&gt;&lt;/a&gt; broadcast the arrays before operation.</source>
          <target state="translated">在整个NumPy中都使用广播来决定如何处理形状各异的数组。例如，&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarrays&lt;/code&gt; &lt;/a&gt;之间的所有算术运算（ &lt;code&gt;+&lt;/code&gt; ， &lt;code&gt;-&lt;/code&gt; ， &lt;code&gt;*&lt;/code&gt; ，&amp;hellip;）都会在运算之前广播数组。</target>
        </trans-unit>
        <trans-unit id="d8a2b5b45365993f46ca0dedffba4cb7be1f878c" translate="yes" xml:space="preserve">
          <source>Broadcasting rules apply, see the &lt;a href=&quot;../routines.linalg#module-numpy.linalg&quot;&gt;&lt;code&gt;numpy.linalg&lt;/code&gt;&lt;/a&gt; documentation for details.</source>
          <target state="translated">广播规则适用，有关详细信息，请参见&lt;a href=&quot;../routines.linalg#module-numpy.linalg&quot;&gt; &lt;code&gt;numpy.linalg&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="d885a1b2d5577844b42f9c37b9817de5d134c079" translate="yes" xml:space="preserve">
          <source>Broadcasting was always implemented in Numeric using 0-valued strides for the extended dimensions. It is done in exactly the same way in NumPy. The big difference is that now the array of strides is kept track of in a &lt;a href=&quot;c-api.types-and-structures#c.PyArrayIterObject&quot;&gt;&lt;code&gt;PyArrayIterObject&lt;/code&gt;&lt;/a&gt;, the iterators involved in a broadcast result are kept track of in a &lt;a href=&quot;c-api.types-and-structures#c.PyArrayMultiIterObject&quot;&gt;&lt;code&gt;PyArrayMultiIterObject&lt;/code&gt;&lt;/a&gt;, and the &lt;code&gt;PyArray_BroadCast&lt;/code&gt; call implements the broad-casting rules.</source>
          <target state="translated">广播始终以数字形式使用扩展值的0值跨度实现。它在NumPy中以完全相同的方式完成。最大的区别是，在现在进步的阵列保持跟踪&lt;a href=&quot;c-api.types-and-structures#c.PyArrayIterObject&quot;&gt; &lt;code&gt;PyArrayIterObject&lt;/code&gt; &lt;/a&gt;，参与广播结果的迭代器保持轨道的一个&lt;a href=&quot;c-api.types-and-structures#c.PyArrayMultiIterObject&quot;&gt; &lt;code&gt;PyArrayMultiIterObject&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;PyArray_BroadCast&lt;/code&gt; 呼叫实现了广泛的铸造规则。</target>
        </trans-unit>
        <trans-unit id="6cc8d02b192349a4f1b4b7f860e5e3a1c421ecb8" translate="yes" xml:space="preserve">
          <source>Broadcasting, element-wise and scalar multiplication, &lt;a href=&quot;numpy.multiply#numpy.multiply&quot;&gt;&lt;code&gt;numpy.multiply&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">广播，逐元素和标量乘法，&lt;a href=&quot;numpy.multiply#numpy.multiply&quot;&gt; &lt;code&gt;numpy.multiply&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="90812c9e094ac5522eea3d57aa754d6964a1cdf2" translate="yes" xml:space="preserve">
          <source>Buffer (&lt;code&gt;buf&lt;/code&gt;) is interpreted according to these strides (strides define how many bytes each array element, row, column, etc. occupy in memory).</source>
          <target state="translated">缓冲区（ &lt;code&gt;buf&lt;/code&gt; ）根据这些步幅进行解释（步幅定义每个数组元素，行，列等在内存中占用多少字节）。</target>
        </trans-unit>
        <trans-unit id="27cb2ff0185bcfdbaec6ac70d0f611c9c03b02a8" translate="yes" xml:space="preserve">
          <source>Buffered Loop</source>
          <target state="translated">缓冲环路</target>
        </trans-unit>
        <trans-unit id="3aa9875f6199e297bab60e3e7102191f0ce73af1" translate="yes" xml:space="preserve">
          <source>Buffered iterator for big arrays.</source>
          <target state="translated">大数组的缓冲迭代器。</target>
        </trans-unit>
        <trans-unit id="6d37057306b02ade5a2d41571a0c0e632337fc5c" translate="yes" xml:space="preserve">
          <source>Buffering mode mitigates the memory usage issue and is more cache-friendly than making temporary copies. Except for special cases, where the whole array is needed at once outside the iterator, buffering is recommended over temporary copying. Within NumPy, buffering is used by the ufuncs and other functions to support flexible inputs with minimal memory overhead.</source>
          <target state="translated">缓冲模式可以缓解内存使用问题,比做临时拷贝更有利于缓存。除了特殊情况下,在迭代器外需要一次性完成整个数组的时候,建议采用缓冲模式,而不是临时复制。在NumPy中,缓冲被ufuncs和其他函数使用,以最小的内存开销支持灵活的输入。</target>
        </trans-unit>
        <trans-unit id="aff21481cc1c0abc2cbd1fe3d4ce255d0403752e" translate="yes" xml:space="preserve">
          <source>Buffering the Array Elements</source>
          <target state="translated">阵列元素的缓冲</target>
        </trans-unit>
        <trans-unit id="041e1aac6c7d1e7294bc5d8fa3967aabcde7a325" translate="yes" xml:space="preserve">
          <source>Build a matrix object from a string, nested sequence, or array.</source>
          <target state="translated">从字符串、嵌套序列或数组中建立一个矩阵对象。</target>
        </trans-unit>
        <trans-unit id="d0fa723cff6db05fe0f943d3ba65530fea4a58d8" translate="yes" xml:space="preserve">
          <source>Building Installable C libraries</source>
          <target state="translated">构建可安装的C库</target>
        </trans-unit>
        <trans-unit id="e1f8c7d7fa78c6eb31ad5ca785a393676894e731" translate="yes" xml:space="preserve">
          <source>Building matrices</source>
          <target state="translated">建立矩阵</target>
        </trans-unit>
        <trans-unit id="fe2db8e7c7c6c32ba1fc4b4a6634f60ac081da44" translate="yes" xml:space="preserve">
          <source>Builds a set of strides which are the same as the strides of an output array created using the &lt;a href=&quot;#c.NPY_ITER_ALLOCATE&quot;&gt;&lt;code&gt;NPY_ITER_ALLOCATE&lt;/code&gt;&lt;/a&gt; flag, where NULL was passed for op_axes. This is for data packed contiguously, but not necessarily in C or Fortran order. This should be used together with &lt;a href=&quot;#c.NpyIter_GetShape&quot;&gt;&lt;code&gt;NpyIter_GetShape&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#c.NpyIter_GetNDim&quot;&gt;&lt;code&gt;NpyIter_GetNDim&lt;/code&gt;&lt;/a&gt; with the flag &lt;a href=&quot;#c.NPY_ITER_MULTI_INDEX&quot;&gt;&lt;code&gt;NPY_ITER_MULTI_INDEX&lt;/code&gt;&lt;/a&gt; passed into the constructor.</source>
          <target state="translated">构建一组&lt;a href=&quot;#c.NPY_ITER_ALLOCATE&quot;&gt; &lt;code&gt;NPY_ITER_ALLOCATE&lt;/code&gt; &lt;/a&gt;，这些跨步与使用NPY_ITER_ALLOCATE标志创建的输出数组的跨步相同，其中为op_axes传递了NULL。这用于连续打包的数据，但不一定按C或Fortran顺序打包。这应该与&lt;a href=&quot;#c.NpyIter_GetShape&quot;&gt; &lt;code&gt;NpyIter_GetShape&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#c.NpyIter_GetNDim&quot;&gt; &lt;code&gt;NpyIter_GetNDim&lt;/code&gt; &lt;/a&gt;一起使用，并将标志&lt;a href=&quot;#c.NPY_ITER_MULTI_INDEX&quot;&gt; &lt;code&gt;NPY_ITER_MULTI_INDEX&lt;/code&gt; &lt;/a&gt;传递到构造函数中。</target>
        </trans-unit>
        <trans-unit id="8b40e55c8fd12c110479c1a8e453add933b9c6e8" translate="yes" xml:space="preserve">
          <source>Built-in Python types</source>
          <target state="translated">内置Python类型</target>
        </trans-unit>
        <trans-unit id="b858e075ef402953578da270159a51f6ad1575b6" translate="yes" xml:space="preserve">
          <source>Built-in scalar types</source>
          <target state="translated">内置标量类型</target>
        </trans-unit>
        <trans-unit id="f0300972b4a8f0b0074aec4f6903cf3e57d597c8" translate="yes" xml:space="preserve">
          <source>Business Day Functionality</source>
          <target state="translated">工作日功能</target>
        </trans-unit>
        <trans-unit id="3cbeeffaaa46e0b3d6b0ea56538a20f899791f42" translate="yes" xml:space="preserve">
          <source>Business Day Functions</source>
          <target state="translated">工作日功能</target>
        </trans-unit>
        <trans-unit id="a4da80602eb90228591a52fa43450b5af3478d27" translate="yes" xml:space="preserve">
          <source>But different types can be used for substitution. In fact, this is how conversion of Polynomial classes among themselves is done for type, domain, and window casting:</source>
          <target state="translated">但是不同的类型可以用来进行替换。事实上,多项式类之间的转换就是这样进行类型、域和窗口的铸造。</target>
        </trans-unit>
        <trans-unit id="bd8c2ef60d42745d2cdc473c152c1f9687c4dcc2" translate="yes" xml:space="preserve">
          <source>But if &lt;code&gt;rowsum&lt;/code&gt; would have two dimensions as well:</source>
          <target state="translated">但是，如果 &lt;code&gt;rowsum&lt;/code&gt; 也具有两个维度：</target>
        </trans-unit>
        <trans-unit id="b4df18df25d280603f202e60c13a7a8f66254798" translate="yes" xml:space="preserve">
          <source>But is also allowed to produce, for some &lt;code&gt;a, b, c, d&lt;/code&gt;:</source>
          <target state="translated">但也可以产生一些 &lt;code&gt;a, b, c, d&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="6646b6ecbc06bc26898d3bc8dfd20372b9b785ad" translate="yes" xml:space="preserve">
          <source>But that&amp;rsquo;s not the only way to look at it. Suppose one has large two-dimensional arrays (images or matrices) stored in data files. Suppose the data are stored by rows rather than by columns. If we are to preserve our index convention (whether matrix or image) that means that depending on the language we use, we may be forced to reorder the data if it is read into memory to preserve our indexing convention. For example if we read row-ordered data into memory without reordering, it will match the matrix indexing convention for C, but not for Fortran. Conversely, it will match the image indexing convention for Fortran, but not for C. For C, if one is using data stored in row order, and one wants to preserve the image index convention, the data must be reordered when reading into memory.</source>
          <target state="translated">但这不是观察它的唯一方法。假设其中一个具有存储在数据文件中的大型二维数组（图像或矩阵）。假设数据是按行而不是按列存储的。如果我们要保留索引约定（无论是矩阵还是图像），这意味着根据我们使用的语言，如果将数据读入内存以保留索引约定，我们可能会被迫对数据进行重新排序。例如，如果我们将按行排序的数据读入内存而不进行重新排序，则它将匹配C的矩阵索引约定，但不匹配Fortran的矩阵索引约定。相反，它将与Fortran的图像索引约定匹配，但与C不匹配。对于C，如果使用的是按行顺序存储的数据，并且希望保留图像索引约定，则在读入内存时必须对数据重新排序。</target>
        </trans-unit>
        <trans-unit id="6e0bd4df436692919faeb191ed09cf810cb22035" translate="yes" xml:space="preserve">
          <source>But there are cross-platform considerations, such as library file extensions, plus the fact Windows will just load the first library it finds with that name. NumPy supplies the load_library function as a convenience.</source>
          <target state="translated">但是有跨平台的考虑,比如库文件的扩展名,再加上Windows只会加载它找到的第一个以该名称命名的库,所以NumPy提供了load_library函数作为方便。NumPy提供了load_library函数作为方便。</target>
        </trans-unit>
        <trans-unit id="ec781290ccbee49bdd7da500afd06d4ca2f948bf" translate="yes" xml:space="preserve">
          <source>But this omits some subtleties. Here is a fully general summary:</source>
          <target state="translated">但这省略了一些细微的地方。下面是一个完全概括性的总结。</target>
        </trans-unit>
        <trans-unit id="9d33835f4b0ffd7a417785ade1f5f4a66909b7f6" translate="yes" xml:space="preserve">
          <source>But we can also specify the axis over which to multiply:</source>
          <target state="translated">但我们也可以指定乘法的轴。</target>
        </trans-unit>
        <trans-unit id="e13f0fd9c0e50a5064cf51cb50663812feb86a8e" translate="yes" xml:space="preserve">
          <source>Buzas, Martin A.; Culver, Stephen J., Understanding regional species diversity through the log series distribution of occurrences: BIODIVERSITY RESEARCH Diversity &amp;amp; Distributions, Volume 5, Number 5, September 1999 , pp. 187-195(9).</source>
          <target state="translated">布萨斯（Martin A.）；Culver，Stephen J.，通过事件的对数序列分布了解区域物种多样性：生物多样性研究多样性与分布，第5卷，第5期，1999年9月，第187-195（9）页。</target>
        </trans-unit>
        <trans-unit id="66360bf7fbf8657df2c1591ab899dd54476a182c" translate="yes" xml:space="preserve">
          <source>By choosing an offset of 8 bytes we can select the complex part of the array for our view:</source>
          <target state="translated">通过选择一个8字节的偏移量,我们可以选择数组中复杂的部分作为我们的视图。</target>
        </trans-unit>
        <trans-unit id="6503cfb311994e99b18c321cb4370162b665063d" translate="yes" xml:space="preserve">
          <source>By convention, the negative sign represents cash flow out (i.e. money not available today). Thus, saving $100 a month at 5% annual interest leads to $15,692.93 available to spend in 10 years.</source>
          <target state="translated">按照惯例,负号代表现金流出(即今天不能用的钱)。因此,每月以5%的年息存100元,10年后就有15,692.93元可供使用。</target>
        </trans-unit>
        <trans-unit id="7f5fbe94c54051531f7d898251f9826df16e5720" translate="yes" xml:space="preserve">
          <source>By convention, the negative sign represents cash flow out (i.e., money not available today). Thus, to end up with $15,692.93 in 10 years saving $100 a month at 5% annual interest, one&amp;rsquo;s initial deposit should also be $100.</source>
          <target state="translated">按照惯例，负号表示现金流出（即，今天没有钱）。因此，要想在10年后得到$ 15,692.93，每月以$ 5％的年利率存入$ 100，一个人的初始存款也应该是$ 100。</target>
        </trans-unit>
        <trans-unit id="52bf606add02bda44e68afd9558117218dd1b2cb" translate="yes" xml:space="preserve">
          <source>By default &lt;a href=&quot;#numpy.testing.rundocs&quot;&gt;&lt;code&gt;rundocs&lt;/code&gt;&lt;/a&gt; raises an AssertionError on failure.</source>
          <target state="translated">默认情况下，&lt;a href=&quot;#numpy.testing.rundocs&quot;&gt; &lt;code&gt;rundocs&lt;/code&gt; &lt;/a&gt;在失败时引发AssertionError。</target>
        </trans-unit>
        <trans-unit id="0791e549c9e1c0c68c18f4046427ddfd65fee6cf" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;generator#numpy.random.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; uses bits provided by &lt;a href=&quot;bit_generators/pcg64#numpy.random.pcg64.PCG64&quot;&gt;&lt;code&gt;PCG64&lt;/code&gt;&lt;/a&gt; which has better statistical properties than the legacy mt19937 random number generator in &lt;a href=&quot;legacy#numpy.random.mtrand.RandomState&quot;&gt;&lt;code&gt;RandomState&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">默认情况下，&lt;a href=&quot;generator#numpy.random.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;使用提供比特&lt;a href=&quot;bit_generators/pcg64#numpy.random.pcg64.PCG64&quot;&gt; &lt;code&gt;PCG64&lt;/code&gt; &lt;/a&gt;具有比传统mt19937随机数生成更好的统计特性&lt;a href=&quot;legacy#numpy.random.mtrand.RandomState&quot;&gt; &lt;code&gt;RandomState&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2eb2435c3e98faf455297cd059d456431f056aed" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;float16&lt;/code&gt; results are computed using &lt;code&gt;float32&lt;/code&gt; intermediates for extra precision.</source>
          <target state="translated">默认情况下，使用 &lt;code&gt;float32&lt;/code&gt; 中间体计算 &lt;code&gt;float16&lt;/code&gt; 结果可获得更高的精度。</target>
        </trans-unit>
        <trans-unit id="509cc82d7b395ceb5fa528a542a3fa0619544044" translate="yes" xml:space="preserve">
          <source>By default, a new array is created of the given shape and data-type. If &lt;code&gt;buf&lt;/code&gt; is specified and is an object exposing the buffer interface, the array will use the memory from the existing buffer. In this case, the &lt;code&gt;offset&lt;/code&gt; and &lt;a href=&quot;numpy.recarray.strides#numpy.recarray.strides&quot;&gt;&lt;code&gt;strides&lt;/code&gt;&lt;/a&gt; keywords are available.</source>
          <target state="translated">默认情况下，将创建具有给定形状和数据类型的新数组。如果指定了 &lt;code&gt;buf&lt;/code&gt; 并且它是暴露缓冲区接口的对象，则阵列将使用现有缓冲区中的内存。在这种情况下，可以使用 &lt;code&gt;offset&lt;/code&gt; 和&lt;a href=&quot;numpy.recarray.strides#numpy.recarray.strides&quot;&gt; &lt;code&gt;strides&lt;/code&gt; &lt;/a&gt;关键字。</target>
        </trans-unit>
        <trans-unit id="5c0614e39713a118bc2e830f1f54b096ac814bb1" translate="yes" xml:space="preserve">
          <source>By default, astype always returns a newly allocated array. If this is set to false, and the &lt;a href=&quot;numpy.char.chararray.dtype#numpy.char.chararray.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;order&lt;/code&gt;, and &lt;code&gt;subok&lt;/code&gt; requirements are satisfied, the input array is returned instead of a copy.</source>
          <target state="translated">默认情况下，astype始终返回新分配的数组。如果设置为false，和&lt;a href=&quot;numpy.char.chararray.dtype#numpy.char.chararray.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;order&lt;/code&gt; 和 &lt;code&gt;subok&lt;/code&gt; 的要求得到满足，输入数组返回而不是复制。</target>
        </trans-unit>
        <trans-unit id="65020739d65de234914c6eca7148d91943920302" translate="yes" xml:space="preserve">
          <source>By default, astype always returns a newly allocated array. If this is set to false, and the &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;order&lt;/code&gt;, and &lt;code&gt;subok&lt;/code&gt; requirements are satisfied, the input array is returned instead of a copy.</source>
          <target state="translated">默认情况下，astype始终返回新分配的数组。如果设置为false，和&lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;order&lt;/code&gt; 和 &lt;code&gt;subok&lt;/code&gt; 的要求得到满足，输入数组返回而不是复制。</target>
        </trans-unit>
        <trans-unit id="33a91516197cac2d79884383700e7cb303d84acc" translate="yes" xml:space="preserve">
          <source>By default, astype always returns a newly allocated array. If this is set to false, and the &lt;a href=&quot;numpy.ma.maskedarray.dtype#numpy.ma.MaskedArray.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;order&lt;/code&gt;, and &lt;code&gt;subok&lt;/code&gt; requirements are satisfied, the input array is returned instead of a copy.</source>
          <target state="translated">默认情况下，astype始终返回新分配的数组。如果设置为false，和&lt;a href=&quot;numpy.ma.maskedarray.dtype#numpy.ma.MaskedArray.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;order&lt;/code&gt; 和 &lt;code&gt;subok&lt;/code&gt; 的要求得到满足，输入数组返回而不是复制。</target>
        </trans-unit>
        <trans-unit id="18abc4afb5a03b89f3bcee3c191658826915b7e7" translate="yes" xml:space="preserve">
          <source>By default, calculate the product of all elements:</source>
          <target state="translated">默认情况下,计算所有元素的乘积。</target>
        </trans-unit>
        <trans-unit id="29592fecd779ff823d8494d78a32e4c6bef17a8b" translate="yes" xml:space="preserve">
          <source>By default, masked values are recognized as such. If &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; have the same shape, a common mask is allocated: if &lt;code&gt;x[i,j]&lt;/code&gt; is masked, then &lt;code&gt;y[i,j]&lt;/code&gt; will also be masked. Setting &lt;code&gt;allow_masked&lt;/code&gt; to False will raise an exception if values are missing in either of the input arrays.</source>
          <target state="translated">默认情况下，屏蔽值将被识别为原样。如果 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的形状相同，则分配一个公共掩码：如果 &lt;code&gt;x[i,j]&lt;/code&gt; 被掩码，则 &lt;code&gt;y[i,j]&lt;/code&gt; 也将被掩码。如果任一输入数组中缺少值，则将 &lt;code&gt;allow_masked&lt;/code&gt; 设置为False将引发异常。</target>
        </trans-unit>
        <trans-unit id="72d47f0b8465ed8e3b2a5736c0d1dfec28a91237" translate="yes" xml:space="preserve">
          <source>By default, mode is &amp;lsquo;full&amp;rsquo;. This returns the convolution at each point of overlap, with an output shape of (N+M-1,). At the end-points of the convolution, the signals do not overlap completely, and boundary effects may be seen.</source>
          <target state="translated">默认情况下，模式为&amp;ldquo;完整&amp;rdquo;。这将在每个重叠点返回卷积，输出形状为（N + M-1，）。在卷积的端点，信号没有完全重叠，并且可以看到边界效应。</target>
        </trans-unit>
        <trans-unit id="6971450c7aa549483b5389a69fedb16eaf066171" translate="yes" xml:space="preserve">
          <source>By default, reverse the dimensions, otherwise permute the axes according to the values given.</source>
          <target state="translated">默认情况下,将尺寸反转,否则根据给定的值对轴进行细分。</target>
        </trans-unit>
        <trans-unit id="f55a7b395485c3988f5bccbb6f9eaebb26dfc947" translate="yes" xml:space="preserve">
          <source>By default, the &lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt;&lt;code&gt;nditer&lt;/code&gt;&lt;/a&gt; treats the input operand as a read-only object. To be able to modify the array elements, you must specify either read-write or write-only mode using the &lt;code&gt;&amp;lsquo;readwrite&amp;rsquo;&lt;/code&gt; or &lt;code&gt;&amp;lsquo;writeonly&amp;rsquo;&lt;/code&gt; per-operand flags.</source>
          <target state="translated">默认情况下，&lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt; &lt;code&gt;nditer&lt;/code&gt; &lt;/a&gt;将输入操作数视为只读对象。为了能够修改数组元素，必须使用每个操作数标志 &lt;code&gt;&amp;lsquo;readwrite&amp;rsquo;&lt;/code&gt; 或 &lt;code&gt;&amp;lsquo;writeonly&amp;rsquo;&lt;/code&gt; 指定读写模式或只写模式。</target>
        </trans-unit>
        <trans-unit id="174daf14dced474235661dc4a8a7f2c4b87b4b7c" translate="yes" xml:space="preserve">
          <source>By default, the &lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt;&lt;code&gt;nditer&lt;/code&gt;&lt;/a&gt; uses the flags &amp;lsquo;allocate&amp;rsquo; and &amp;lsquo;writeonly&amp;rsquo; for operands that are passed in as None. This means we were able to provide just the two operands to the iterator, and it handled the rest.</source>
          <target state="translated">默认情况下，&lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt; &lt;code&gt;nditer&lt;/code&gt; &lt;/a&gt;将标志&amp;ldquo; allocate&amp;rdquo;和&amp;ldquo; writeonly&amp;rdquo;用于作为None传入的操作数。这意味着我们能够仅将两个操作数提供给迭代器，然后它处理其余的操作。</target>
        </trans-unit>
        <trans-unit id="17e308c1f2a6481942287f2519e364f482dd5128" translate="yes" xml:space="preserve">
          <source>By default, the data-type is inferred from the input data.</source>
          <target state="translated">默认情况下,数据类型是由输入数据推断出来的。</target>
        </trans-unit>
        <trans-unit id="d105f45ad87599a046dab97b11d0171a9dd2c47e" translate="yes" xml:space="preserve">
          <source>By default, the index is into the flattened array, otherwise along the specified axis.</source>
          <target state="translated">默认情况下,索引是进入扁平化的数组,否则沿着指定的轴。</target>
        </trans-unit>
        <trans-unit id="e68b2ebbdaa7d8bde52807398926b542381f9c7b" translate="yes" xml:space="preserve">
          <source>By default, the iterator produces pointers into the arrays provided, which may be aligned or unaligned, and with any byte order. If copying or buffering is not enabled and the operand data doesn&amp;rsquo;t satisfy the constraints, an error will be raised.</source>
          <target state="translated">默认情况下，迭代器将指针生成到所提供的数组中，这些数组可以是对齐的或不对齐的，并且具有任何字节顺序。如果未启用复制或缓冲并且操作数数据不满足约束条件，则会引发错误。</target>
        </trans-unit>
        <trans-unit id="a90e6d5076b3318d5438106f6aec8b51a30f2edc" translate="yes" xml:space="preserve">
          <source>By eliminating the inner loop in the description above, and using &lt;a href=&quot;numpy.s_#numpy.s_&quot;&gt;&lt;code&gt;s_&lt;/code&gt;&lt;/a&gt; to build simple slice objects, &lt;a href=&quot;#numpy.take&quot;&gt;&lt;code&gt;take&lt;/code&gt;&lt;/a&gt; can be expressed in terms of applying fancy indexing to each 1-d slice:</source>
          <target state="translated">通过消除上面描述中的内部循环，并使用&lt;a href=&quot;numpy.s_#numpy.s_&quot;&gt; &lt;code&gt;s_&lt;/code&gt; &lt;/a&gt;来构建简单的切片对象，&lt;a href=&quot;#numpy.take&quot;&gt; &lt;code&gt;take&lt;/code&gt; &lt;/a&gt;可以表示为对每个1-d切片应用花式索引：</target>
        </trans-unit>
        <trans-unit id="f5e127dadff417279256627201011a26eddd8177" translate="yes" xml:space="preserve">
          <source>By enabling buffering mode, the chunks provided by the iterator to the inner loop can be made larger, significantly reducing the overhead of the Python interpreter. In the example forcing Fortran iteration order, the inner loop gets to see all the elements in one go when buffering is enabled.</source>
          <target state="translated">通过启用缓冲模式,可以使迭代器提供给内循环的分块变大,大大降低Python解释器的开销。在强制Fortran迭代顺序的例子中,当启用缓冲时,内循环可以一次性看到所有元素。</target>
        </trans-unit>
        <trans-unit id="842fa81b602f5ee9d6e48f92f8610cb23e1b4b1b" translate="yes" xml:space="preserve">
          <source>By examining the coefficients, we see that the line should have a gradient of roughly 1 and cut the y-axis at, more or less, -1.</source>
          <target state="translated">通过研究系数,我们发现,这条线的梯度应该大致为1,并在-1处或多或少地切断y轴。</target>
        </trans-unit>
        <trans-unit id="4b0026b5caaf6e12c9b18e1ac7ccb5e7684a2b52" translate="yes" xml:space="preserve">
          <source>By far the most complex case is advanced indexing, which may or may not be combined with typical view based indexing. Here integer indices are interpreted as view based. Before trying to understand this, you may want to make yourself familiar with its subtleties. The advanced indexing code has three different branches and one special case:</source>
          <target state="translated">到目前为止,最复杂的情况是高级索引,它可能与典型的基于视图的索引相结合,也可能不相结合。在这里,整数索引被解释为基于视图的索引。在试图理解这一点之前,你可能需要熟悉它的微妙之处。高级索引代码有三个不同的分支和一个特殊情况。</target>
        </trans-unit>
        <trans-unit id="eb83a5c83addee3a887cb831a30aba85bb504443" translate="yes" xml:space="preserve">
          <source>By substituting</source>
          <target state="translated">代以</target>
        </trans-unit>
        <trans-unit id="5cf0a6a61d5c04a9d920300ad8c8de64a060c650" translate="yes" xml:space="preserve">
          <source>By the above description, the casting rules are essentially implemented by the question of when a data type can be cast &amp;ldquo;safely&amp;rdquo; to another data type. The answer to this question can be determined in Python with a function call: &lt;a href=&quot;generated/numpy.can_cast#numpy.can_cast&quot;&gt;&lt;code&gt;can_cast(fromtype, totype)&lt;/code&gt;&lt;/a&gt;. The Figure below shows the results of this call for the 24 internally supported types on the author&amp;rsquo;s 64-bit system. You can generate this table for your system with the code given in the Figure.</source>
          <target state="translated">通过以上描述，强制转换规则实质上是通过何时可以将数据类型&amp;ldquo;安全&amp;rdquo;转换为另一种数据的问题来实现的。这个问题的答案可以在Python中通过以下函数调用确定：&lt;a href=&quot;generated/numpy.can_cast#numpy.can_cast&quot;&gt; &lt;code&gt;can_cast(fromtype, totype)&lt;/code&gt; &lt;/a&gt;。下图显示了对作者的64位系统上的24种内部支持的类型进行此调用的结果。您可以使用图中给出的代码为您的系统生成该表。</target>
        </trans-unit>
        <trans-unit id="c3ee543ea3c911ca70be24ca50be4966bfc9d11e" translate="yes" xml:space="preserve">
          <source>Byte order of the data (&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-little-endian&quot;&gt;little-endian&lt;/a&gt; or &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-big-endian&quot;&gt;big-endian&lt;/a&gt;)</source>
          <target state="translated">数据的字节顺序（&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-little-endian&quot;&gt;little-endian&lt;/a&gt;或&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-big-endian&quot;&gt;big-endian&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="4fa7dfbdbb33fd63c061542164ead10c6ea66cdb" translate="yes" xml:space="preserve">
          <source>Byte order to force; a value from the byte order specifications above. The default value (&amp;lsquo;S&amp;rsquo;) results in swapping the current byte order. The code does a case-insensitive check on the first letter of &lt;code&gt;new_order&lt;/code&gt; for the alternatives above. For example, any of &amp;lsquo;B&amp;rsquo; or &amp;lsquo;b&amp;rsquo; or &amp;lsquo;biggish&amp;rsquo; are valid to specify big-endian.</source>
          <target state="translated">字节顺序强制；来自上述字节顺序规范的值。默认值（'S'）导致交换当前字节顺序。对于上述替代方案，代码对 &lt;code&gt;new_order&lt;/code&gt; 的第一个字母进行不区分大小写的检查。例如，&amp;ldquo; B&amp;rdquo;或&amp;ldquo; b&amp;rdquo;或&amp;ldquo; biggish&amp;rdquo;中的任何一个都可以有效地指定big-endian。</target>
        </trans-unit>
        <trans-unit id="d891a9572e92fd87112849b433aa9d82773e6323" translate="yes" xml:space="preserve">
          <source>Byte order to force; a value from the byte order specifications below. &lt;code&gt;new_order&lt;/code&gt; codes can be any of:</source>
          <target state="translated">字节顺序强制；来自以下字节顺序规范的值。 &lt;code&gt;new_order&lt;/code&gt; 代码可以是以下任意一种：</target>
        </trans-unit>
        <trans-unit id="925da9e3660113afb959c492e32c0df4c8fba9ab" translate="yes" xml:space="preserve">
          <source>Byte order to force; a value from the byte order specifications below. The default value (&amp;lsquo;S&amp;rsquo;) results in swapping the current byte order. &lt;code&gt;new_order&lt;/code&gt; codes can be any of:</source>
          <target state="translated">字节顺序强制；来自以下字节顺序规范的值。默认值（'S'）导致交换当前字节顺序。 &lt;code&gt;new_order&lt;/code&gt; 代码可以是以下任意一种：</target>
        </trans-unit>
        <trans-unit id="208a9d70c2ceb4cad845268b3793f06f24736861" translate="yes" xml:space="preserve">
          <source>Byte-order for all fields.</source>
          <target state="translated">所有字段的字节顺序。</target>
        </trans-unit>
        <trans-unit id="90c2059501661b20579455b452bcdf7917e96a74" translate="yes" xml:space="preserve">
          <source>C API Deprecations</source>
          <target state="translated">C API 废止</target>
        </trans-unit>
        <trans-unit id="62988a5cc34cb2d480ad455963d13a5b50fea224" translate="yes" xml:space="preserve">
          <source>C order</source>
          <target state="translated">C命令</target>
        </trans-unit>
        <trans-unit id="4d3779622c7ddb81083220abbfe17022ee213c7f" translate="yes" xml:space="preserve">
          <source>C order.</source>
          <target state="translated">C令。</target>
        </trans-unit>
        <trans-unit id="c77824df8f5b9b7ad0f95af7e88364d494112e7e" translate="yes" xml:space="preserve">
          <source>C-API for implementing Elementary Functions</source>
          <target state="translated">用于实现基本函数的C-API</target>
        </trans-unit>
        <trans-unit id="39aa49db7f4958819165d85870c4e3056a314158" translate="yes" xml:space="preserve">
          <source>C-Types Foreign Function Interface (&lt;code&gt;numpy.ctypeslib&lt;/code&gt;)</source>
          <target state="translated">C类型外部函数接口（ &lt;code&gt;numpy.ctypeslib&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="1ee13877e6105fd56e4080481ca6046e3bea7c13" translate="yes" xml:space="preserve">
          <source>C-Types Foreign Function Interface (numpy.ctypeslib)</source>
          <target state="translated">C类型外函数接口(numpy.ctypeslib)</target>
        </trans-unit>
        <trans-unit id="8bbf8c25cb421fee0bffcb1218c14c15435923a5" translate="yes" xml:space="preserve">
          <source>C-ordered arrays evaluate as False even if they are also FORTRAN-ordered.</source>
          <target state="translated">C-ordered数组即使是FORTRAN-ordered数组也会显示为False。</target>
        </trans-unit>
        <trans-unit id="18f7fb2659bfefae5fe403809093ff794847eddb" translate="yes" xml:space="preserve">
          <source>C-series coefficients of the integral.</source>
          <target state="translated">积分的C系列系数。</target>
        </trans-unit>
        <trans-unit id="aa3b96b2dd6cb469f06816ec7d846596063a8314" translate="yes" xml:space="preserve">
          <source>C-side of the array interface</source>
          <target state="translated">阵列接口的C端</target>
        </trans-unit>
        <trans-unit id="6e0b67185c9289cda6113607f367a9d9edf7fee3" translate="yes" xml:space="preserve">
          <source>C-struct access</source>
          <target state="translated">C型结构访问</target>
        </trans-unit>
        <trans-unit id="bd0b363c8100c3e0002d75837308df33fee89719" translate="yes" xml:space="preserve">
          <source>C-type names</source>
          <target state="translated">C型名称</target>
        </trans-unit>
        <trans-unit id="af48e472b36161e129dd7edb2b2bd61998b64144" translate="yes" xml:space="preserve">
          <source>C. W. Clenshaw, &amp;ldquo;Chebyshev series for mathematical functions&amp;rdquo;, in &lt;em&gt;National Physical Laboratory Mathematical Tables&lt;/em&gt;, vol. 5, London: Her Majesty&amp;rsquo;s Stationery Office, 1962.</source>
          <target state="translated">CW Clenshaw，&amp;ldquo; Chebyshev数学函数系列&amp;rdquo;，在&lt;em&gt;国家物理实验室数学表中&lt;/em&gt;，第1卷。5，伦敦：英国女王Her下办公室，1962年。</target>
        </trans-unit>
        <trans-unit id="43beb2dca45ea5b86cf6e2c78e1df08bb1062e1a" translate="yes" xml:space="preserve">
          <source>C99-like complex functions have been added. Those can be used if you wish to implement portable C extensions. Since we still support platforms without C99 complex type, you need to restrict to C90-compatible syntax, e.g.:</source>
          <target state="translated">增加了类似于C99的复杂函数,如果你想实现可移植的C语言扩展,可以使用这些函数。如果你想实现可移植的C扩展,可以使用这些函数。由于我们仍然支持没有C99复合类型的平台,所以你需要限制在C90兼容的语法上,例如:。</target>
        </trans-unit>
        <trans-unit id="ebba6dc140f09bcbb9638f5bf4b3df884108c2f7" translate="yes" xml:space="preserve">
          <source>CFFI interface</source>
          <target state="translated">CFFI接口</target>
        </trans-unit>
        <trans-unit id="1ade62840c85639fb7384a1d18b950f273e9fb48" translate="yes" xml:space="preserve">
          <source>CPU architecture of the platform; only one of the above is defined.</source>
          <target state="translated">平台的CPU架构;以上只定义了一个。</target>
        </trans-unit>
        <trans-unit id="c9cddb0fc26555bd7e44c82c30b8dd03f9efdf7e" translate="yes" xml:space="preserve">
          <source>C_CONTIGUOUS / C / CONTIGUOUS</source>
          <target state="translated">C_CONTIGUOUS/C/CONTIGUOUS</target>
        </trans-unit>
        <trans-unit id="f3d5846dd99b124383ff0d457d07594b45e6712e" translate="yes" xml:space="preserve">
          <source>Calculate &lt;code&gt;2**p&lt;/code&gt; for all &lt;code&gt;p&lt;/code&gt; in the input array.</source>
          <target state="translated">为输入数组中的所有 &lt;code&gt;p&lt;/code&gt; 计算 &lt;code&gt;2**p&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="250bbdf8f96508ded0e2419aede1c85ce8e60f69" translate="yes" xml:space="preserve">
          <source>Calculate &lt;code&gt;2**x&lt;/code&gt; for all elements in the array.</source>
          <target state="translated">为数组中的所有元素计算 &lt;code&gt;2**x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="80c054468bb32b1733a38bd9e500e3c7e2410c60" translate="yes" xml:space="preserve">
          <source>Calculate &lt;code&gt;exp(x) - 1&lt;/code&gt; for all elements in the array.</source>
          <target state="translated">为数组中的所有元素计算 &lt;code&gt;exp(x) - 1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="897a0bcc51e675340eb8de452d794c61bbe86ad4" translate="yes" xml:space="preserve">
          <source>Calculate the absolute value element-wise.</source>
          <target state="translated">按元素计算绝对值。</target>
        </trans-unit>
        <trans-unit id="52d855325ad8b8ba2e5f03ed06faa393dd2b3c5d" translate="yes" xml:space="preserve">
          <source>Calculate the exponential of all elements in the input array.</source>
          <target state="translated">计算输入数组中所有元素的指数。</target>
        </trans-unit>
        <trans-unit id="a3dc7bdd6edd5fbaf2d2ff0fab2c5a4b13186ce0" translate="yes" xml:space="preserve">
          <source>Calculate the generalized inverse of a matrix using its singular-value decomposition (SVD) and including all &lt;em&gt;large&lt;/em&gt; singular values.</source>
          <target state="translated">使用其奇异值分解（SVD）并包括所有&lt;em&gt;大&lt;/em&gt;奇异值来计算矩阵的广义逆。</target>
        </trans-unit>
        <trans-unit id="4b25208e5ebec1248ee411c25859b5c2fd7bb09b" translate="yes" xml:space="preserve">
          <source>Calculate the n-th discrete difference along given axis.</source>
          <target state="translated">计算沿给定轴的第n次离散差。</target>
        </trans-unit>
        <trans-unit id="42cb44e98b4304fa793f5c2a54298181fdecfa02" translate="yes" xml:space="preserve">
          <source>Calculate the n-th discrete difference along the given axis.</source>
          <target state="translated">计算沿给定轴的第n次离散差。</target>
        </trans-unit>
        <trans-unit id="1c03f8fb0f5af1d1f5a42484860a4bc9ada64002" translate="yes" xml:space="preserve">
          <source>Calculate the standard deviation of the non-NaN values.</source>
          <target state="translated">计算非纳米值的标准差。</target>
        </trans-unit>
        <trans-unit id="f8c757cfbde7655c0c48030d0cc0f2a47e05c8b1" translate="yes" xml:space="preserve">
          <source>Calculate the standard deviation of these values.</source>
          <target state="translated">计算这些数值的标准差。</target>
        </trans-unit>
        <trans-unit id="7c1b58f3d94fc67cd514e1570aa6b12719e32b56" translate="yes" xml:space="preserve">
          <source>Calculate the t statistic, setting the ddof parameter to the unbiased value so the divisor in the standard deviation will be degrees of freedom, N-1.</source>
          <target state="translated">计算t统计量,设置ddof参数为无偏值,所以标准差中的除数将是自由度,N-1。</target>
        </trans-unit>
        <trans-unit id="a8acd54a675004438176e793d314e80390eec770" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;1/x&lt;/code&gt;.</source>
          <target state="translated">计算 &lt;code&gt;1/x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5f90663e28e9982e7de271dda336040dea8f7aa" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;element in test_elements&lt;/code&gt;, broadcasting over &lt;code&gt;element&lt;/code&gt; only.</source>
          <target state="translated">计算 &lt;code&gt;element in test_elements&lt;/code&gt; &lt;code&gt;element&lt;/code&gt; 仅在元素上广播。</target>
        </trans-unit>
        <trans-unit id="c2efd3cd9b667cce814af0fcbaac60b64cdcdb35" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;element in test_elements&lt;/code&gt;, broadcasting over &lt;code&gt;element&lt;/code&gt; only. Returns a boolean array of the same shape as &lt;code&gt;element&lt;/code&gt; that is True where an element of &lt;code&gt;element&lt;/code&gt; is in &lt;code&gt;test_elements&lt;/code&gt; and False otherwise.</source>
          <target state="translated">计算 &lt;code&gt;element in test_elements&lt;/code&gt; &lt;code&gt;element&lt;/code&gt; 仅在元素上广播。返回与 &lt;code&gt;element&lt;/code&gt; 具有相同形状的布尔数组，如果元素的 &lt;code&gt;element&lt;/code&gt; 在 &lt;code&gt;test_elements&lt;/code&gt; 中，则返回True，否则返回 False。</target>
        </trans-unit>
        <trans-unit id="74b05ed646884364ea61a52a0d97dd5553fc5db3" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;log(1 + x)&lt;/code&gt;.</source>
          <target state="translated">计算 &lt;code&gt;log(1 + x)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="793634569b16ddadf09c84f21826d340c4bb186b" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;log(exp(x1) + exp(x2))&lt;/code&gt;. This function is useful in statistics where the calculated probabilities of events may be so small as to exceed the range of normal floating point numbers. In such cases the logarithm of the calculated probability is stored. This function allows adding probabilities stored in such a fashion.</source>
          <target state="translated">计算 &lt;code&gt;log(exp(x1) + exp(x2))&lt;/code&gt; 。此函数在统计中非常有用，在统计中，事件的计算概率可能很小，以至于超出了正常浮点数的范围。在这种情况下，将存储计算出的概率的对数。该功能允许以这种方式添加存储的概率。</target>
        </trans-unit>
        <trans-unit id="55306f441c10b288ef594152ca5bc10ba426774f" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;log2(2**x1 + 2**x2)&lt;/code&gt;. This function is useful in machine learning when the calculated probabilities of events may be so small as to exceed the range of normal floating point numbers. In such cases the base-2 logarithm of the calculated probability can be used instead. This function allows adding probabilities stored in such a fashion.</source>
          <target state="translated">计算 &lt;code&gt;log2(2**x1 + 2**x2)&lt;/code&gt; 。当计算的事件概率可能很小以至于超过正常浮点数的范围时，此功能在机器学习中很有用。在这种情况下，可以代替使用计算出的概率的以2为底的对数。该功能允许以这种方式添加存储的概率。</target>
        </trans-unit>
        <trans-unit id="79b6b61d48a464831755d05e96c5b24edef1de03" translate="yes" xml:space="preserve">
          <source>Calculates which of the given dates are valid days, and which are not.</source>
          <target state="translated">计算给定日期中哪些是有效日期,哪些是无效日期。</target>
        </trans-unit>
        <trans-unit id="dc6751bd6532a841494c31d2cb271a6c23434bcc" translate="yes" xml:space="preserve">
          <source>Calculation</source>
          <target state="translated">Calculation</target>
        </trans-unit>
        <trans-unit id="05d27dcc239bf9ea22989ad95d110b65fd4d9edb" translate="yes" xml:space="preserve">
          <source>Calculations</source>
          <target state="translated">Calculations</target>
        </trans-unit>
        <trans-unit id="c0b95ddbd1bbdb09cd17ce1c430a7adeedcc6050" translate="yes" xml:space="preserve">
          <source>Calculus</source>
          <target state="translated">Calculus</target>
        </trans-unit>
        <trans-unit id="bdf175380f108b91b68b35d6cba860e239285fd3" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;str.istitle&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.istitle&lt;/code&gt; 调用str.istitle。</target>
        </trans-unit>
        <trans-unit id="d5bbdd4afe52a03da69e768bb6350617fd2c2fe8" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;str.isupper&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.isupper&lt;/code&gt; 调用str.isupper。</target>
        </trans-unit>
        <trans-unit id="204bec18a0c758d4b92300d3ccfda2d8f2d41215" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;str.lower&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.lower&lt;/code&gt; 元素调用str.lower。</target>
        </trans-unit>
        <trans-unit id="eef266f410d282365eeaef6f6541415ad4d67585" translate="yes" xml:space="preserve">
          <source>Call self as a function.</source>
          <target state="translated">将self作为函数调用。</target>
        </trans-unit>
        <trans-unit id="8829f8e417cdbefc80e5f0018c56210ff40f16e6" translate="yes" xml:space="preserve">
          <source>Callback upon error:</source>
          <target state="translated">错误时回调。</target>
        </trans-unit>
        <trans-unit id="f76a0fdbe900eef0f77fc7210a232c0754707b8b" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#str.encode&quot;&gt;&lt;code&gt;str.encode&lt;/code&gt;&lt;/a&gt; element-wise.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#str.encode&quot;&gt; &lt;code&gt;str.encode&lt;/code&gt; &lt;/a&gt;元素调用str.encode。</target>
        </trans-unit>
        <trans-unit id="5ddbcf21043a5f353f23ca4baba1595ba4a4c298" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.capitalize&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.capitalize&lt;/code&gt; 元素调用str.capitalize。</target>
        </trans-unit>
        <trans-unit id="fac61b23fdecfba854b4b4efab7777fd152b2cd6" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.center&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.center&lt;/code&gt; 调用str.center。</target>
        </trans-unit>
        <trans-unit id="1314c79da136d136fb6bbb829ea41b9418ad141a" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.count&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.count&lt;/code&gt; 元素调用str.count。</target>
        </trans-unit>
        <trans-unit id="4bdc60efe7fe548bd722d4044bc214b413e9d4dd" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.decode&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.decode&lt;/code&gt; 元素调用str.decode。</target>
        </trans-unit>
        <trans-unit id="065d9a82f4f8e8be749e189a1fda4fbbe3abbe4a" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.encode&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.encode&lt;/code&gt; 元素调用str.encode。</target>
        </trans-unit>
        <trans-unit id="c1788f723cdc513a1b82d19f6d756a8fad670e36" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.endswith&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.endswith&lt;/code&gt; 元素调用str.endswith。</target>
        </trans-unit>
        <trans-unit id="1506c8828926db71b8ee1e63d0d49604826d93cb" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.expandtabs&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.expandtabs&lt;/code&gt; 元素调用str.expandtabs。</target>
        </trans-unit>
        <trans-unit id="3c7293ade2e69f10fa46947bf34f0b6e9553dda9" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.find&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.find&lt;/code&gt; 元素调用str.find。</target>
        </trans-unit>
        <trans-unit id="467102d858ecdef3b85b56bdb57ad38edb734308" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.index&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.index&lt;/code&gt; 元素调用str.index。</target>
        </trans-unit>
        <trans-unit id="9028b020672a2d11380a1f6acfdb2435aab492c0" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.isalnum&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.isalnum&lt;/code&gt; 元素调用str.isalnum。</target>
        </trans-unit>
        <trans-unit id="fd4a785af6221c540650fb70b847d1cefb209fda" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.isalpha&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.isalpha&lt;/code&gt; 元素调用str.isalpha。</target>
        </trans-unit>
        <trans-unit id="656252d18256f4f02da62d1b2291d93d00dda7e4" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.isdigit&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.isdigit&lt;/code&gt; 元素调用str.isdigit。</target>
        </trans-unit>
        <trans-unit id="2a85e1b04f3860c701786f2c9eabf6a753b661de" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.islower&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.islower&lt;/code&gt; 元素调用str.islower。</target>
        </trans-unit>
        <trans-unit id="2bb68da644aa463ff4c1c36c7d9b40bf8b8f64bc" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.isspace&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.isspace&lt;/code&gt; 元素调用str.isspace。</target>
        </trans-unit>
        <trans-unit id="741c3bea47e11f849d26dfea4d3d3a40eab3c129" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.join&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.join&lt;/code&gt; 调用str.join。</target>
        </trans-unit>
        <trans-unit id="a819deb9a44d524ac6731b6be53354ba9f42a375" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.ljust&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.ljust&lt;/code&gt; 元素调用str.ljust。</target>
        </trans-unit>
        <trans-unit id="be80be96a9f5d678d3f84ce0ae913fd30691c166" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.lstrip&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.lstrip&lt;/code&gt; 元素调用str.lstrip。</target>
        </trans-unit>
        <trans-unit id="3a06e70f258111f5ace799d0136012a728b9986f" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.partition&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.partition&lt;/code&gt; 元素调用str.partition。</target>
        </trans-unit>
        <trans-unit id="887a34caef57804ead86c1cf188ead795251b5a4" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.replace&lt;/code&gt; element-wise.</source>
          <target state="translated">按元素调用 &lt;code&gt;str.replace&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="05d90debebac8c8e525b11c833af03b1809c3595" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.rfind&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.rfind&lt;/code&gt; 元素调用str.rfind。</target>
        </trans-unit>
        <trans-unit id="89bfa6c81f923111ab3ece5d1065bb7a8b18172a" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.rindex&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.rindex&lt;/code&gt; 元素调用str.rindex。</target>
        </trans-unit>
        <trans-unit id="55188dcc2c20e117f83220adcd9445f8940213ba" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.rjust&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.rjust&lt;/code&gt; 元素调用str.rjust。</target>
        </trans-unit>
        <trans-unit id="19291c82bbc252e358dcd5efe30bebd4ce3f47fc" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.rpartition&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.rpartition&lt;/code&gt; 元素调用str.rpartition。</target>
        </trans-unit>
        <trans-unit id="e30544ad22292a0898136208de2fa5fc236f97f4" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.rsplit&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.rsplit&lt;/code&gt; 元素调用str.rsplit。</target>
        </trans-unit>
        <trans-unit id="bf3f027903bcb2fa17e73f1d36c8446f531dbe5a" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.rstrip&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.rstrip&lt;/code&gt; 元素调用str.rstrip。</target>
        </trans-unit>
        <trans-unit id="739adfdb756eef5e48a6b103e3600e5bc999cb7a" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.split&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.split&lt;/code&gt; 元素调用str.split。</target>
        </trans-unit>
        <trans-unit id="b5e51ab4b44c03ea14d792300213b602772f9ea6" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.splitlines&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.splitlines&lt;/code&gt; 元素调用str.splitlines。</target>
        </trans-unit>
        <trans-unit id="6c953fe5d272055ef6fdc5b65d12465c629e73e4" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.startswith&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.startswith&lt;/code&gt; 调用str.startswith。</target>
        </trans-unit>
        <trans-unit id="1827eeaf19d2fb7a578c669a1d5307476f133fcd" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.strip&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.strip&lt;/code&gt; 元素调用str.strip。</target>
        </trans-unit>
        <trans-unit id="274bbb89ddefdfebcf8c0b98e05e899bc5eb9615" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.swapcase&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.swapcase&lt;/code&gt; 元素调用str.swapcase。</target>
        </trans-unit>
        <trans-unit id="2bc28d6c4e67250d03ac5f9ac2fcd548d24d6297" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.title&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.title&lt;/code&gt; 元素调用str.title。</target>
        </trans-unit>
        <trans-unit id="91315156a48280f48729eabe9ec7862779adc8d2" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.translate&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.translate&lt;/code&gt; 元素调用str.translate。</target>
        </trans-unit>
        <trans-unit id="2440d757fee8b2705315ead5568e7af63f8335a3" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.upper&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.upper&lt;/code&gt; 调用str.upper。</target>
        </trans-unit>
        <trans-unit id="691e1fcbb97130e6abfe067256904d840bcc927b" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;str.zfill&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;str.zfill&lt;/code&gt; 元素调用str.zfill。</target>
        </trans-unit>
        <trans-unit id="9c60fe9461b9d2c89f3c3e872dadf8ad18517837" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;unicode.isdecimal&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;unicode.isdecimal&lt;/code&gt; 元素调用unicode.isdecimal。</target>
        </trans-unit>
        <trans-unit id="c6e0a82d42fca087f606e832d63a055b7b362137" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;unicode.isnumeric&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;code&gt;unicode.isnumeric&lt;/code&gt; 元素调用unicode.isnumeric。</target>
        </trans-unit>
        <trans-unit id="79ab673318d7c81b7f76879d7f7e6d0f3ff543f1" translate="yes" xml:space="preserve">
          <source>Can be a local file or a remote URL.</source>
          <target state="translated">可以是本地文件或远程URL。</target>
        </trans-unit>
        <trans-unit id="a90e6085e13ad6ee060ad3eac04d655f92454003" translate="yes" xml:space="preserve">
          <source>Can be read from a filelike stream object instead of an actual file.</source>
          <target state="translated">可以从一个类似文件的流对象中读取,而不是实际的文件。</target>
        </trans-unit>
        <trans-unit id="07932047b9de074a44eece379f541bd670890cdd" translate="yes" xml:space="preserve">
          <source>Can be used, for example, to add broadcasting to a built-in Python function (see Examples section).</source>
          <target state="translated">例如,可以用来将广播添加到一个内置的Python函数中 (参见示例部分)。</target>
        </trans-unit>
        <trans-unit id="7139132bf88ca6d9cbbfb32a613254727892bf7e" translate="yes" xml:space="preserve">
          <source>Can represent all NumPy arrays including nested record arrays and object arrays.</source>
          <target state="translated">可以表示所有NumPy数组,包括嵌套的记录数组和对象数组。</target>
        </trans-unit>
        <trans-unit id="ca09c54bff74a82bae543ebe259f7452ee8c5293" translate="yes" xml:space="preserve">
          <source>Capabilities</source>
          <target state="translated">Capabilities</target>
        </trans-unit>
        <trans-unit id="a058457334819b9647916ad868c25fa88bc97117" translate="yes" xml:space="preserve">
          <source>Cartesian (&amp;lsquo;xy&amp;rsquo;, default) or matrix (&amp;lsquo;ij&amp;rsquo;) indexing of output. See Notes for more details.</source>
          <target state="translated">输出的笛卡尔（默认为&amp;ldquo; xy&amp;rdquo;）或矩阵（&amp;ldquo; ij&amp;rdquo;）索引。有关更多详细信息，请参见注释。</target>
        </trans-unit>
        <trans-unit id="b5599547be57585d8ed9f9e6e56fb372b94bf366" translate="yes" xml:space="preserve">
          <source>Cash flows (must contain at least one positive and one negative value) or nan is returned. The first value is considered a sunk cost at time zero.</source>
          <target state="translated">现金流(必须包含至少一个正值和一个负值)或nan被返回。第一个值被认为是零时的沉没成本。</target>
        </trans-unit>
        <trans-unit id="4819b90bf3135701e4238f100f5eccaffb4cf77a" translate="yes" xml:space="preserve">
          <source>Cast &lt;code&gt;input&lt;/code&gt; to a &lt;code&gt;PyArrayObject*&lt;/code&gt; if legal, and ensure that it is of type &lt;code&gt;typecode&lt;/code&gt;. If &lt;code&gt;input&lt;/code&gt; cannot be cast, or the &lt;code&gt;typecode&lt;/code&gt; is wrong, set a Python error and return &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">如果合法，将 &lt;code&gt;input&lt;/code&gt; &lt;code&gt;PyArrayObject*&lt;/code&gt; 转换为PyArrayObject *，并确保其类型为 &lt;code&gt;typecode&lt;/code&gt; 。如果无法转换 &lt;code&gt;input&lt;/code&gt; 或 &lt;code&gt;typecode&lt;/code&gt; 错误，请设置Python错误并返回 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5da405e72e65e85b0a6ff9fb710530d444100461" translate="yes" xml:space="preserve">
          <source>Cast code: This checks for &amp;ldquo;true&amp;rdquo; alignment, as it does &lt;code&gt;*dst = CASTFUNC(*src)&lt;/code&gt; if aligned. Otherwise, it does &lt;code&gt;memmove(srcval, src); dstval = CASTFUNC(srcval); memmove(dst, dstval)&lt;/code&gt; where dstval/srcval are aligned.</source>
          <target state="translated">强制转换代码：这将检查&amp;ldquo;真&amp;rdquo;对齐，因为 &lt;code&gt;*dst = CASTFUNC(*src)&lt;/code&gt; 如果对齐）也会这样做。否则，它会执行 &lt;code&gt;memmove(srcval, src); dstval = CASTFUNC(srcval); memmove(dst, dstval)&lt;/code&gt; ，其中dstval / srcval对齐。</target>
        </trans-unit>
        <trans-unit id="4dbf7f264927d9ee6c0c9230f88c1b227f370d7c" translate="yes" xml:space="preserve">
          <source>Cast the elements of the array &lt;em&gt;in&lt;/em&gt; into the array &lt;em&gt;out&lt;/em&gt;. The output array should be writeable, have an integer-multiple of the number of elements in the input array (more than one copy can be placed in out), and have a data type that is one of the builtin types. Returns 0 on success and -1 if an error occurs.</source>
          <target state="translated">铸阵列的元件&lt;em&gt;中&lt;/em&gt;到阵列&lt;em&gt;出来&lt;/em&gt;。输出数组应该是可写的，输入数组中元素的数量为整数倍（可以放入多个副本），并且数据类型是内置类型之一。成功返回0，如果发生错误则返回-1。</target>
        </trans-unit>
        <trans-unit id="e6a8277578137a1b27ee47f6d99dc6ac5a6c8df7" translate="yes" xml:space="preserve">
          <source>Cast to the desired type, even if it can&amp;rsquo;t be done without losing information.</source>
          <target state="translated">强制转换为所需的类型，即使不丢失信息也无法完成。</target>
        </trans-unit>
        <trans-unit id="a945bfddda4f16646c0e1e8cf16a394a39e915e6" translate="yes" xml:space="preserve">
          <source>Casting Rules</source>
          <target state="translated">选角规则</target>
        </trans-unit>
        <trans-unit id="0e43fbb5b95b8e028055445bd4f061de51dc4a06" translate="yes" xml:space="preserve">
          <source>Casting must be done on one or more of the inputs whenever the ufunc does not have a core loop implementation for the input types provided. If an implementation for the input types cannot be found, then the algorithm searches for an implementation with a type signature to which all of the inputs can be cast &amp;ldquo;safely.&amp;rdquo; The first one it finds in its internal list of loops is selected and performed, after all necessary type casting. Recall that internal copies during ufuncs (even for casting) are limited to the size of an internal buffer (which is user settable).</source>
          <target state="translated">每当ufunc对提供的输入类型没有核心循环实现时，必须对一个或多个输入进行转换。如果找不到输入类型的实现，则该算法搜索带有类型签名的实现，所有输入都可以&amp;ldquo;安全地&amp;rdquo;投射到该实现。在所有必要的类型转换之后，选择并执行它在其内部循环列表中找到的第一个循环。回想一下，在ufunc期间（甚至用于转换）的内部副本仅限于内部缓冲区的大小（用户可设置）。</target>
        </trans-unit>
        <trans-unit id="8748cec5513dc9c01c715b723dcb4b372a11fea9" translate="yes" xml:space="preserve">
          <source>Casting scalars</source>
          <target state="translated">铸造标量</target>
        </trans-unit>
        <trans-unit id="cbb26092630998f6b4ebb2584d7e63c1ad783481" translate="yes" xml:space="preserve">
          <source>Casting the set to a list gives the expected result:</source>
          <target state="translated">将该集合投向一个列表,会得到预期的结果。</target>
        </trans-unit>
        <trans-unit id="3b9cb47a9c04d9f04e8fb247efea4728b9f0825f" translate="yes" xml:space="preserve">
          <source>Casting to allow when changing between datetime units.</source>
          <target state="translated">允许在不同的日期时间单位之间转换时进行铸造。</target>
        </trans-unit>
        <trans-unit id="1b7e02730ebfcc85f5732a8be223fd80563fe083" translate="yes" xml:space="preserve">
          <source>Categories are determined by first checking which of boolean, integer (int/uint), or floating point (float/complex) the maximum kind of all the arrays and the scalars are.</source>
          <target state="translated">分类是通过首先检查所有数组和标量的最大种类是布尔、整数(int/uint)还是浮点(float/complex)来确定的。</target>
        </trans-unit>
        <trans-unit id="3325b57bdda8f0731fcea923488b3e46095663f1" translate="yes" xml:space="preserve">
          <source>Causes the iterator to convert all the operands to a common data type, calculated based on the ufunc type promotion rules. Copying or buffering must be enabled.</source>
          <target state="translated">使迭代器将所有操作数转换为基于ufunc类型推广规则计算的通用数据类型。必须启用复制或缓冲功能。</target>
        </trans-unit>
        <trans-unit id="f6e47e97b987638e04e1741c9188448c0cda9575" translate="yes" xml:space="preserve">
          <source>Causes the iterator to provide data for &lt;code&gt;op[i]&lt;/code&gt; that is in native byte order, aligned according to the dtype requirements, contiguous, or any combination.</source>
          <target state="translated">使迭代器为 &lt;code&gt;op[i]&lt;/code&gt; 提供本机字节顺序的数据，该数据根据dtype要求对齐，连续或任意组合。</target>
        </trans-unit>
        <trans-unit id="78cd28e519e06a8be731a725d2ee50a3144a0620" translate="yes" xml:space="preserve">
          <source>Causes the iterator to skip iteration of the innermost loop, requiring the user of the iterator to handle it.</source>
          <target state="translated">导致迭代器跳过最内层循环的迭代,需要迭代器的用户来处理。</target>
        </trans-unit>
        <trans-unit id="d748728383297b4bba46340904d34590fd3f0e6c" translate="yes" xml:space="preserve">
          <source>Causes the iterator to store buffering data, and use buffering to satisfy data type, alignment, and byte-order requirements. To buffer an operand, do not specify the &lt;a href=&quot;#c.NPY_ITER_COPY&quot;&gt;&lt;code&gt;NPY_ITER_COPY&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#c.NPY_ITER_UPDATEIFCOPY&quot;&gt;&lt;code&gt;NPY_ITER_UPDATEIFCOPY&lt;/code&gt;&lt;/a&gt; flags, because they will override buffering. Buffering is especially useful for Python code using the iterator, allowing for larger chunks of data at once to amortize the Python interpreter overhead.</source>
          <target state="translated">使迭代器存储缓冲数据，并使用缓冲来满足数据类型，对齐方式和字节顺序要求。要缓冲操作数，请不要指定&lt;a href=&quot;#c.NPY_ITER_COPY&quot;&gt; &lt;code&gt;NPY_ITER_COPY&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#c.NPY_ITER_UPDATEIFCOPY&quot;&gt; &lt;code&gt;NPY_ITER_UPDATEIFCOPY&lt;/code&gt; &lt;/a&gt;标志，因为它们会覆盖缓冲。缓冲对于使用迭代器的Python代码特别有用，它可以一次允许更大的数据块以摊销Python解释器的开销。</target>
        </trans-unit>
        <trans-unit id="cbe86966ee1567b8621995982683f047543e592a" translate="yes" xml:space="preserve">
          <source>Causes the iterator to track a multi-index. This prevents the iterator from coalescing axes to produce bigger inner loops. If the loop is also not buffered and no index is being tracked (&lt;code&gt;NpyIter_RemoveAxis&lt;/code&gt; can be called), then the iterator size can be &lt;code&gt;-1&lt;/code&gt; to indicate that the iterator is too large. This can happen due to complex broadcasting and will result in errors being created when the setting the iterator range, removing the multi index, or getting the next function. However, it is possible to remove axes again and use the iterator normally if the size is small enough after removal.</source>
          <target state="translated">使迭代器跟踪多索引。这样可以防止迭代器合并轴以产生更大的内部循环。如果循环也未缓冲且没有索引被跟踪（可以调用 &lt;code&gt;NpyIter_RemoveAxis&lt;/code&gt; ），则迭代器大小可以为 &lt;code&gt;-1&lt;/code&gt; ,以指示迭代器太大。这可能是由于复杂的广播而发生的，并且会导致在设置迭代器范围，删除多重索引或获取下一个功能时创建错误。但是，如果移除后尺寸足够小，则可以再次移除轴并正常使用迭代器。</target>
        </trans-unit>
        <trans-unit id="a78370684072181888bd07868c0ae200011c6b51" translate="yes" xml:space="preserve">
          <source>Causes the iterator to track a raveled flat index matching C order. This option cannot be used with &lt;a href=&quot;#c.NPY_ITER_F_INDEX&quot;&gt;&lt;code&gt;NPY_ITER_F_INDEX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使迭代器跟踪与C顺序匹配的零散平面索引。该选项不能与&lt;a href=&quot;#c.NPY_ITER_F_INDEX&quot;&gt; &lt;code&gt;NPY_ITER_F_INDEX&lt;/code&gt; &lt;/a&gt;一起使用。</target>
        </trans-unit>
        <trans-unit id="d09f5eb17dd94e9b8185491d29ffd82541173b9e" translate="yes" xml:space="preserve">
          <source>Causes the iterator to track a raveled flat index matching Fortran order. This option cannot be used with &lt;a href=&quot;#c.NPY_ITER_C_INDEX&quot;&gt;&lt;code&gt;NPY_ITER_C_INDEX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使迭代器跟踪与Fortran顺序匹配的混乱平面索引。该选项不能与&lt;a href=&quot;#c.NPY_ITER_C_INDEX&quot;&gt; &lt;code&gt;NPY_ITER_C_INDEX&lt;/code&gt; &lt;/a&gt;一起使用。</target>
        </trans-unit>
        <trans-unit id="c0df50e511723d6385d81becfe6c98c0ca2c5dad" translate="yes" xml:space="preserve">
          <source>Chained array operations, in efficient calculation order, &lt;a href=&quot;numpy.einsum_path#numpy.einsum_path&quot;&gt;&lt;code&gt;numpy.einsum_path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">链式数组操作，按有效的计算顺序&lt;a href=&quot;numpy.einsum_path#numpy.einsum_path&quot;&gt; &lt;code&gt;numpy.einsum_path&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d9f53c2498e2f3ad3fca9000468a403dc1def6c7" translate="yes" xml:space="preserve">
          <source>Chained array operations. For more complicated contractions, speed ups might be achieved by repeatedly computing a &amp;lsquo;greedy&amp;rsquo; path or pre-computing the &amp;lsquo;optimal&amp;rsquo; path and repeatedly applying it, using an &lt;a href=&quot;numpy.einsum_path#numpy.einsum_path&quot;&gt;&lt;code&gt;einsum_path&lt;/code&gt;&lt;/a&gt; insertion (since version 1.12.0). Performance improvements can be particularly significant with larger arrays:</source>
          <target state="translated">链式数组操作。对于更复杂的收缩，可以通过重复计算&amp;ldquo;贪婪&amp;rdquo;路径或预先计算&amp;ldquo;最佳&amp;rdquo;路径并使用&lt;a href=&quot;numpy.einsum_path#numpy.einsum_path&quot;&gt; &lt;code&gt;einsum_path&lt;/code&gt; &lt;/a&gt;插入（自版本1.12.0起）重复应用来实现加速。对于较大的阵列，性能改进尤其重要：</target>
        </trans-unit>
        <trans-unit id="4b14b1641c23a3ee01fb58fe8633eb893f1634ef" translate="yes" xml:space="preserve">
          <source>Change elements of an array based on conditional and input values.</source>
          <target state="translated">根据条件和输入值改变数组的元素。</target>
        </trans-unit>
        <trans-unit id="03e304dc68ffb07e8cb055b859df002401eafba4" translate="yes" xml:space="preserve">
          <source>Change shape and size of array in-place.</source>
          <target state="translated">就地改变阵列的形状和大小。</target>
        </trans-unit>
        <trans-unit id="1baf38892b5a38369da2ab3d5066a1bc5faa26e9" translate="yes" xml:space="preserve">
          <source>Change the shape of an array without changing its data.</source>
          <target state="translated">改变一个数组的形状而不改变其数据。</target>
        </trans-unit>
        <trans-unit id="57cca933dc4ae8712cc751b049a24d49a1cbe977" translate="yes" xml:space="preserve">
          <source>Change the sign of x1 to that of x2, element-wise.</source>
          <target state="translated">把x1的符号改成x2的符号,元素式。</target>
        </trans-unit>
        <trans-unit id="f1fd8269d290cf6173d8944feb182f6867a500ae" translate="yes" xml:space="preserve">
          <source>Change the vector definition of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; using &lt;code&gt;axisa&lt;/code&gt; and &lt;code&gt;axisb&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;axisa&lt;/code&gt; 和 &lt;code&gt;axisb&lt;/code&gt; 更改 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的向量定义。</target>
        </trans-unit>
        <trans-unit id="0e76bac75a93f40062500cfe4d6d4594aea2a414" translate="yes" xml:space="preserve">
          <source>Changed in version 1.10.0: Earlier NumPy versions required dfnum &amp;gt; 1.</source>
          <target state="translated">在1.10.0版中进行了更改：较早的NumPy版本要求dfnum&amp;gt; 1。</target>
        </trans-unit>
        <trans-unit id="9e03441147d9c9bca84c6633efe853d678690f6f" translate="yes" xml:space="preserve">
          <source>Changed in version 1.11.0: When a single column has to be read it is possible to use an integer instead of a tuple. E.g &lt;code&gt;usecols = 3&lt;/code&gt; reads the fourth column the same way as &lt;code&gt;usecols = (3,)&lt;/code&gt; would.</source>
          <target state="translated">在1.11.0版中进行了更改：当必须读取单个列时，可以使用整数而不是元组。例如， &lt;code&gt;usecols = 3&lt;/code&gt; 读取第四列的方式与 &lt;code&gt;usecols = (3,)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4240cc617a1809505e609f22132a15e64d1b8364" translate="yes" xml:space="preserve">
          <source>Changed in version 1.13.0: Previously, the default was documented to be -1, but that was in error. At some future date, the default will change to -1, as originally intended. Until then, the axis should be given explicitly when &lt;code&gt;arr.ndim &amp;gt; 1&lt;/code&gt;, to avoid a FutureWarning.</source>
          <target state="translated">在版本1.13.0中进行了更改：以前，默认记录为-1，但这是错误的。在将来的某个日期，默认值将更改为-1，如最初预期的那样。在此之前，应在 &lt;code&gt;arr.ndim &amp;gt; 1&lt;/code&gt; 时明确指定轴，以避免FutureWarning。</target>
        </trans-unit>
        <trans-unit id="7cf5dc6a75318b20c4a1e296708ff3954da61899" translate="yes" xml:space="preserve">
          <source>Changed in version 1.13.0: Tuples are allowed for keyword argument.</source>
          <target state="translated">在1.13.0版本中有所改变。允许用Tuple作为关键字参数。</target>
        </trans-unit>
        <trans-unit id="8369be3972dcfca939d8870350211ef461655917" translate="yes" xml:space="preserve">
          <source>Changed in version 1.14.0: Earlier NumPy versions required dfnum &amp;gt; 1.</source>
          <target state="translated">在1.14.0版中进行了更改：较早的NumPy版本要求dfnum&amp;gt; 1。</target>
        </trans-unit>
        <trans-unit id="90df01afcc61c5a576cbe17f8aa7128ba6554b30" translate="yes" xml:space="preserve">
          <source>Changed in version 1.14.0: If not set, a FutureWarning is given. The previous default of &lt;code&gt;-1&lt;/code&gt; will use the machine precision as &lt;code&gt;rcond&lt;/code&gt; parameter, the new default will use the machine precision times &lt;code&gt;max(M, N)&lt;/code&gt;. To silence the warning and use the new default, use &lt;code&gt;rcond=None&lt;/code&gt;, to keep using the old behavior, use &lt;code&gt;rcond=-1&lt;/code&gt;.</source>
          <target state="translated">在版本1.14.0中更改：如果未设置，则给出FutureWarning。先前的默认值 &lt;code&gt;-1&lt;/code&gt; 将机器精度用作 &lt;code&gt;rcond&lt;/code&gt; 参数，新的默认值将机器精度乘以 &lt;code&gt;max(M, N)&lt;/code&gt; 。要使警告静音并使用新的默认值，请使用 &lt;code&gt;rcond=None&lt;/code&gt; ，以继续使用旧的行为，请使用 &lt;code&gt;rcond=-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d2839d7d3bf87e0e23f5c67fc8d1ab0fe0551fd" translate="yes" xml:space="preserve">
          <source>Changed in version 1.14: Broadcasted against the stack of matrices</source>
          <target state="translated">在1.14版本中的变化:对矩阵堆栈进行广播。</target>
        </trans-unit>
        <trans-unit id="348ee8de383634f48f0728f5bfaf909f0982c324" translate="yes" xml:space="preserve">
          <source>Changed in version 1.14: Can now operate on stacks of matrices</source>
          <target state="translated">1.14版本的变化:现在可以对矩阵堆栈进行操作。</target>
        </trans-unit>
        <trans-unit id="05cf1c5d8f1269a7f5fa5c6cc3fc095bf8055509" translate="yes" xml:space="preserve">
          <source>Changed in version 1.15.0.: The &amp;lsquo;stable&amp;rsquo; option was added.</source>
          <target state="translated">在1.15.0版中更改。：添加了&amp;ldquo;稳定&amp;rdquo;选项。</target>
        </trans-unit>
        <trans-unit id="0e6fb4664107937e52dcdbc13917b49d6b44f05c" translate="yes" xml:space="preserve">
          <source>Changed in version 1.15.0: DeprecationWarnings are actually emitted.</source>
          <target state="translated">在1.15.0版本中有所改变。实际发出了DeprecationWarnings。</target>
        </trans-unit>
        <trans-unit id="5e3b221df91333bee6b9f5792109b32e7e70567b" translate="yes" xml:space="preserve">
          <source>Changed in version 1.15.0: None and tuples of axes are supported</source>
          <target state="translated">在1.15.0版本中有所改变。无,支持轴的元组</target>
        </trans-unit>
        <trans-unit id="83d75b7f177288265577e6765abc146d2cecb0e7" translate="yes" xml:space="preserve">
          <source>Changed in version 1.16.0: Non-scalar &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;stop&lt;/code&gt; are now supported.</source>
          <target state="translated">在版本1.16.0中更改：现在支持非标量 &lt;code&gt;start&lt;/code&gt; 和 &lt;code&gt;stop&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="25985fe044545f9478af4af504ffd04c8801c6e6" translate="yes" xml:space="preserve">
          <source>Changed in version 1.16.0: Renamed from &lt;code&gt;dims&lt;/code&gt; to &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="translated">在1.16.0版本中更改：从更名 &lt;code&gt;dims&lt;/code&gt; 来 &lt;code&gt;shape&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eef53483993b5fb29b126ef19278ead520adb6f9" translate="yes" xml:space="preserve">
          <source>Changed in version 1.16.3: Made default False in response to CVE-2019-6446.</source>
          <target state="translated">在1.16.3版本中更改:针对CVE-2019-6446,将默认为False。</target>
        </trans-unit>
        <trans-unit id="ff4dc328009aefab6de678232e1061e9bf30fb2d" translate="yes" xml:space="preserve">
          <source>Changed in version 1.17.0: &lt;a href=&quot;#numpy.errstate&quot;&gt;&lt;code&gt;errstate&lt;/code&gt;&lt;/a&gt; is also usable as a function decorator, saving a level of indentation if an entire function is wrapped. See &lt;a href=&quot;https://docs.python.org/dev/library/contextlib.html#contextlib.ContextDecorator&quot;&gt;&lt;code&gt;contextlib.ContextDecorator&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">在1.17.0版中进行了更改：&lt;a href=&quot;#numpy.errstate&quot;&gt; &lt;code&gt;errstate&lt;/code&gt; &lt;/a&gt;也可用作函数装饰器，如果包装了整个函数，则可以保存缩进级别。有关更多信息，请参见&lt;a href=&quot;https://docs.python.org/dev/library/contextlib.html#contextlib.ContextDecorator&quot;&gt; &lt;code&gt;contextlib.ContextDecorator&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="af2d1032fe2cc2a8c7b8fc21250999bf723a2b20" translate="yes" xml:space="preserve">
          <source>Changed in version 1.17.0: &lt;a href=&quot;https://docs.python.org/dev/library/pathlib.html#pathlib.Path&quot;&gt;&lt;code&gt;pathlib.Path&lt;/code&gt;&lt;/a&gt; objects are now accepted.</source>
          <target state="translated">在1.17.0版中进行了更改：现在接受&lt;a href=&quot;https://docs.python.org/dev/library/pathlib.html#pathlib.Path&quot;&gt; &lt;code&gt;pathlib.Path&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="61efb6f136dc51708e975673488296290e1e421b" translate="yes" xml:space="preserve">
          <source>Changed in version 1.17.0: Casting between a simple data type and a structured one is possible only for &amp;ldquo;unsafe&amp;rdquo; casting. Casting to multiple fields is allowed, but casting from multiple fields is not.</source>
          <target state="translated">在1.17.0版中进行了更改：在简单数据类型和结构化数据类型之间进行转换仅适用于&amp;ldquo;不安全&amp;rdquo;转换。允许强制转换为多个字段，但不允许强制多个字段进行强制转换。</target>
        </trans-unit>
        <trans-unit id="7c9406124c2f89ed955f1ed4fdf79269cd807fab" translate="yes" xml:space="preserve">
          <source>Changed in version 1.8.0: Broadcasting rules apply, see the &lt;a href=&quot;../routines.linalg#module-numpy.linalg&quot;&gt;&lt;code&gt;numpy.linalg&lt;/code&gt;&lt;/a&gt; documentation for details.</source>
          <target state="translated">在版本1.8.0中更改：适用广播规则，有关详细信息，请参见&lt;a href=&quot;../routines.linalg#module-numpy.linalg&quot;&gt; &lt;code&gt;numpy.linalg&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="442c1fd3d41745a2d4ec1e84a3657676ca62838e" translate="yes" xml:space="preserve">
          <source>Changed in version 1.9.0: A tuple of axes is supported</source>
          <target state="translated">1.9.0版本的变化:支持轴的元组。</target>
        </trans-unit>
        <trans-unit id="73bab6415b0560ad9f839326ef0b98ed7906af98" translate="yes" xml:space="preserve">
          <source>Changed in version 1.9.0: Casting from numeric to string types in &amp;lsquo;safe&amp;rsquo; casting mode requires that the string dtype length is long enough to store the max integer/float value converted.</source>
          <target state="translated">在版本1.9.0中更改：在&amp;ldquo;安全&amp;rdquo;转换模式下从数字类型转换为字符串类型要求字符串dtype长度足够长，以存储转换的最大整数/浮点值。</target>
        </trans-unit>
        <trans-unit id="8adc0d706675beb5229fbd846a1b85c2cfcca190" translate="yes" xml:space="preserve">
          <source>Changed in version 1.9.0: Casting from numeric to string types in &amp;lsquo;safe&amp;rsquo; casting mode requires that the string dtype length is long enough to store the maximum integer/float value converted.</source>
          <target state="translated">在版本1.9.0中更改：在&amp;ldquo;安全&amp;rdquo;转换模式下从数字类型转换为字符串类型要求字符串dtype长度足够长，以存储转换的最大整数/浮点值。</target>
        </trans-unit>
        <trans-unit id="5a255433707dd5f70c7a4be8e1821141fe49e182" translate="yes" xml:space="preserve">
          <source>Changed in version 1.9: 1-D and 0-D cases are allowed.</source>
          <target state="translated">1.9版本的变化:允许1-D和0-D的情况。</target>
        </trans-unit>
        <trans-unit id="d447e3c0af8f91b0b6d56c2803ffc2d885c25ac6" translate="yes" xml:space="preserve">
          <source>Changes are also made in all fields and sub-arrays of the array data type.</source>
          <target state="translated">数组数据类型的所有字段和子数组也会发生变化。</target>
        </trans-unit>
        <trans-unit id="d5c8653ebb3c65244702565331c9f825090ef108" translate="yes" xml:space="preserve">
          <source>Changes are also made in all fields and sub-arrays of the data type.</source>
          <target state="translated">数据类型的所有字段和子数组也会发生变化。</target>
        </trans-unit>
        <trans-unit id="988d6dcf1558a60cf9e3df8c88bfbf9aa6476a76" translate="yes" xml:space="preserve">
          <source>Changes elements of an array based on conditional and input values.</source>
          <target state="translated">根据条件和输入值改变数组的元素。</target>
        </trans-unit>
        <trans-unit id="11f7d423e4a6c5aafe601b11f0668f2b9c2f00fa" translate="yes" xml:space="preserve">
          <source>Changes the variable used when printing &lt;code&gt;p&lt;/code&gt; from &lt;code&gt;x&lt;/code&gt; to &lt;a href=&quot;numpy.poly1d.variable#numpy.poly1d.variable&quot;&gt;&lt;code&gt;variable&lt;/code&gt;&lt;/a&gt; (see Examples).</source>
          <target state="translated">将打印 &lt;code&gt;p&lt;/code&gt; 时使用的变量从 &lt;code&gt;x&lt;/code&gt; 更改为&lt;a href=&quot;numpy.poly1d.variable#numpy.poly1d.variable&quot;&gt; &lt;code&gt;variable&lt;/code&gt; &lt;/a&gt;（请参见示例）。</target>
        </trans-unit>
        <trans-unit id="a6b7a5b4726b415eac4533ff4c785ffd43ff58e3" translate="yes" xml:space="preserve">
          <source>Changes with NumPy 1.11</source>
          <target state="translated">NumPy 1.11的变化</target>
        </trans-unit>
        <trans-unit id="f88e590a9d42082459bee2897052e8478444520a" translate="yes" xml:space="preserve">
          <source>Changing array shape</source>
          <target state="translated">改变阵列形状</target>
        </trans-unit>
        <trans-unit id="bb5d57bb97464b7a41e90965a34fd558225f91df" translate="yes" xml:space="preserve">
          <source>Changing kind of array</source>
          <target state="translated">改变阵列的种类</target>
        </trans-unit>
        <trans-unit id="4dac00a1fdb9bc9e870465fcb8ac48e7a6f41092" translate="yes" xml:space="preserve">
          <source>Changing number of dimensions</source>
          <target state="translated">改变尺寸的数量</target>
        </trans-unit>
        <trans-unit id="26a89ebf1c1d895edaaec0f680290afde6188baf" translate="yes" xml:space="preserve">
          <source>Changing the number of dimensions</source>
          <target state="translated">改变尺寸的数量</target>
        </trans-unit>
        <trans-unit id="659708d4116763fca54f546304717111fc0dcdbc" translate="yes" xml:space="preserve">
          <source>Changing the shape</source>
          <target state="translated">改变形状</target>
        </trans-unit>
        <trans-unit id="472ea4d678f10230e80354665e55d5162f57e4eb" translate="yes" xml:space="preserve">
          <source>Character arrays (&lt;code&gt;numpy.char&lt;/code&gt;)</source>
          <target state="translated">字符数组（ &lt;code&gt;numpy.char&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c77510e827185d4da42fdcbd8730a318064afdff" translate="yes" xml:space="preserve">
          <source>Character arrays (numpy.char)</source>
          <target state="translated">字符数组(numpy.char)</target>
        </trans-unit>
        <trans-unit id="92c1e393951a713a4c1c2df5523a5b76ef600358" translate="yes" xml:space="preserve">
          <source>Character code</source>
          <target state="translated">字符代码</target>
        </trans-unit>
        <trans-unit id="ba3973797ea212e06b4bd3f28ecf46f8274e1229" translate="yes" xml:space="preserve">
          <source>Character(s) used in replacement of white spaces in the variables names. By default, use a &amp;lsquo;_&amp;rsquo;.</source>
          <target state="translated">用于替换变量名称中空格的字符。默认情况下，使用&amp;ldquo; _&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="faf08e2ed05138df0c2fc73c7cd9c35b89b1b4ee" translate="yes" xml:space="preserve">
          <source>Chebyshev</source>
          <target state="translated">Chebyshev</target>
        </trans-unit>
        <trans-unit id="b08808430b344bf934ff595f268dd7b3c9767d8c" translate="yes" xml:space="preserve">
          <source>Chebyshev Class</source>
          <target state="translated">切比雪夫级</target>
        </trans-unit>
        <trans-unit id="c805e26af7ca174190c79364ad41f4463c143779" translate="yes" xml:space="preserve">
          <source>Chebyshev Module (&lt;code&gt;numpy.polynomial.chebyshev&lt;/code&gt;)</source>
          <target state="translated">Chebyshev模块（ &lt;code&gt;numpy.polynomial.chebyshev&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="43b2dcb73cb4875580862bf8c8dd1ada4c4da4c6" translate="yes" xml:space="preserve">
          <source>Chebyshev Module (numpy.polynomial.chebyshev)</source>
          <target state="translated">切比雪夫模块 (numpy.polynomial.chebyshev)</target>
        </trans-unit>
        <trans-unit id="0efbe54789bc84b8d4e58d69167610bd2675854f" translate="yes" xml:space="preserve">
          <source>Chebyshev coefficients in order of increasing degree, i.e., &lt;code&gt;(1, 2, 3)&lt;/code&gt; gives &lt;code&gt;1*T_0(x) + 2*T_1(x) + 3*T_2(x)&lt;/code&gt;.</source>
          <target state="translated">切比雪夫系数按递增的顺序排列，即 &lt;code&gt;(1, 2, 3)&lt;/code&gt; 给出 &lt;code&gt;1*T_0(x) + 2*T_1(x) + 3*T_2(x)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="96032d11ffc294810d816c812b7d22b436c23b79" translate="yes" xml:space="preserve">
          <source>Chebyshev coefficients ordered from low to high. If &lt;code&gt;y&lt;/code&gt; was 2-D, the coefficients for the data in column k of &lt;code&gt;y&lt;/code&gt; are in column &lt;code&gt;k&lt;/code&gt;.</source>
          <target state="translated">切比雪夫系数从低到高排序。如果 &lt;code&gt;y&lt;/code&gt; 为2-d，在的k列中的数据的系数 &lt;code&gt;y&lt;/code&gt; 在柱 &lt;code&gt;k&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e63eba3c512c100441a580822bf3dee3fdc84ed" translate="yes" xml:space="preserve">
          <source>Chebyshev series</source>
          <target state="translated">切比雪夫系列</target>
        </trans-unit>
        <trans-unit id="f8c02252eba6ff12458afafb159b20cecff7478a" translate="yes" xml:space="preserve">
          <source>Chebyshev series of power.</source>
          <target state="translated">切比雪夫系列电。</target>
        </trans-unit>
        <trans-unit id="8a0ba9e6152e6c1500bb9491398112d62215acf4" translate="yes" xml:space="preserve">
          <source>Chebyshev series of the derivative.</source>
          <target state="translated">Chebyshev系列的导数。</target>
        </trans-unit>
        <trans-unit id="4f2d57204da6b30aece47fb6efed1a7b8e11e6b0" translate="yes" xml:space="preserve">
          <source>Chebyshev series whose graph is a straight line.</source>
          <target state="translated">切比雪夫数列的图形是一条直线。</target>
        </trans-unit>
        <trans-unit id="95aa0918943d1236cc6d32e54d1344d9d0be39c1" translate="yes" xml:space="preserve">
          <source>Chebyshev weight function.</source>
          <target state="translated">Chebyshev重量函数。</target>
        </trans-unit>
        <trans-unit id="b18292f75bb94b7b116770748f5215372e100826" translate="yes" xml:space="preserve">
          <source>Chebyshev.__call__()</source>
          <target state="translated">Chebyshev.__call__()</target>
        </trans-unit>
        <trans-unit id="1bacc9adbf511d1e41a349b356ba0145d6ee7946" translate="yes" xml:space="preserve">
          <source>Chebyshev.basis()</source>
          <target state="translated">Chebyshev.basis()</target>
        </trans-unit>
        <trans-unit id="188210acd7ec982c8646fa316466c45a976f83f2" translate="yes" xml:space="preserve">
          <source>Chebyshev.cast()</source>
          <target state="translated">Chebyshev.cast()</target>
        </trans-unit>
        <trans-unit id="639e56acd1352c9b5b503ed1496fdb9a5d07c0c0" translate="yes" xml:space="preserve">
          <source>Chebyshev.convert()</source>
          <target state="translated">Chebyshev.convert()</target>
        </trans-unit>
        <trans-unit id="11392591347c8480770728aa505b563eccfa5f1d" translate="yes" xml:space="preserve">
          <source>Chebyshev.copy()</source>
          <target state="translated">Chebyshev.copy()</target>
        </trans-unit>
        <trans-unit id="41611d32208cae6870074acedaa6fe221b1b3446" translate="yes" xml:space="preserve">
          <source>Chebyshev.cutdeg()</source>
          <target state="translated">Chebyshev.cutdeg()</target>
        </trans-unit>
        <trans-unit id="8789ce0a4c5068fdfe534918cc2e90fdad042cd3" translate="yes" xml:space="preserve">
          <source>Chebyshev.degree()</source>
          <target state="translated">Chebyshev.degree()</target>
        </trans-unit>
        <trans-unit id="c6481905857e646a6d9c66a8532da7a6334a6377" translate="yes" xml:space="preserve">
          <source>Chebyshev.deriv()</source>
          <target state="translated">Chebyshev.deriv()</target>
        </trans-unit>
        <trans-unit id="6291088b6f8cbfecdb12bf2bdad126fa6f8f1e75" translate="yes" xml:space="preserve">
          <source>Chebyshev.domain</source>
          <target state="translated">Chebyshev.domain</target>
        </trans-unit>
        <trans-unit id="dd41304fdf8df9e37b5816500b41e22e66c61815" translate="yes" xml:space="preserve">
          <source>Chebyshev.fit()</source>
          <target state="translated">Chebyshev.fit()</target>
        </trans-unit>
        <trans-unit id="e4926f0eed8819f61f1604cce384a57795e1eabf" translate="yes" xml:space="preserve">
          <source>Chebyshev.fromroots()</source>
          <target state="translated">Chebyshev.fromroots()</target>
        </trans-unit>
        <trans-unit id="70d84e9f4f420d528a16ab4c0ba4755a5af5e65c" translate="yes" xml:space="preserve">
          <source>Chebyshev.has_samecoef()</source>
          <target state="translated">Chebyshev.has_samecoef()</target>
        </trans-unit>
        <trans-unit id="119c3a01c7179401c8123c868c9643da34d59174" translate="yes" xml:space="preserve">
          <source>Chebyshev.has_samedomain()</source>
          <target state="translated">Chebyshev.has_samedomain()</target>
        </trans-unit>
        <trans-unit id="1d9bea3b85c40da6ce150efb52fc340072577178" translate="yes" xml:space="preserve">
          <source>Chebyshev.has_sametype()</source>
          <target state="translated">Chebyshev.has_sametype()</target>
        </trans-unit>
        <trans-unit id="21b9443d56e25c8c9434c2048384c54825cbad75" translate="yes" xml:space="preserve">
          <source>Chebyshev.has_samewindow()</source>
          <target state="translated">Chebyshev.has_samewindow()</target>
        </trans-unit>
        <trans-unit id="f72f56cc281db3fc06403b01e30cee59ef5f1b34" translate="yes" xml:space="preserve">
          <source>Chebyshev.identity()</source>
          <target state="translated">Chebyshev.identity()</target>
        </trans-unit>
        <trans-unit id="4320540c12f7d006eb6f49d8596f1304f5f9b17f" translate="yes" xml:space="preserve">
          <source>Chebyshev.integ()</source>
          <target state="translated">Chebyshev.integ()</target>
        </trans-unit>
        <trans-unit id="c6cc890aac4433ddc758056a7a1ec57ab680d9dd" translate="yes" xml:space="preserve">
          <source>Chebyshev.interpolate()</source>
          <target state="translated">Chebyshev.interpolate()</target>
        </trans-unit>
        <trans-unit id="7c5cc657b6a0749c5b79e78f062d99b7bfa79e2e" translate="yes" xml:space="preserve">
          <source>Chebyshev.linspace()</source>
          <target state="translated">Chebyshev.linspace()</target>
        </trans-unit>
        <trans-unit id="318403bb4b0c9579e1e22548291a889f9ceb1ac1" translate="yes" xml:space="preserve">
          <source>Chebyshev.mapparms()</source>
          <target state="translated">Chebyshev.mapparms()</target>
        </trans-unit>
        <trans-unit id="e3d230253c27dda3445e4aef41453767831a496b" translate="yes" xml:space="preserve">
          <source>Chebyshev.roots()</source>
          <target state="translated">Chebyshev.roots()</target>
        </trans-unit>
        <trans-unit id="a90771ff29f5d5fd6c72cd284a6221aaeee66dbc" translate="yes" xml:space="preserve">
          <source>Chebyshev.trim()</source>
          <target state="translated">Chebyshev.trim()</target>
        </trans-unit>
        <trans-unit id="5b40364d3cb3cca7f44236a76dfee86aa086098b" translate="yes" xml:space="preserve">
          <source>Chebyshev.truncate()</source>
          <target state="translated">Chebyshev.truncate()</target>
        </trans-unit>
        <trans-unit id="68b29a44de315b426add922aecd8f169abef4bb9" translate="yes" xml:space="preserve">
          <source>Check for a complex type or an array of complex numbers.</source>
          <target state="translated">检查复数类型或复数数组。</target>
        </trans-unit>
        <trans-unit id="4bce08324cf028acd33defa95adda2d8f712ca10" translate="yes" xml:space="preserve">
          <source>Check for availability of Fortran 77 compiler.</source>
          <target state="translated">检查Fortran 77编译器的可用性。</target>
        </trans-unit>
        <trans-unit id="8dfb4b491ef798ee13273ce6b905820e38be579c" translate="yes" xml:space="preserve">
          <source>Check for availability of Fortran 90 compiler.</source>
          <target state="translated">检查是否有Fortran 90编译器。</target>
        </trans-unit>
        <trans-unit id="fc680846edbe0485cdd86c89e2d8ba596476a1dd" translate="yes" xml:space="preserve">
          <source>Check if coefficients match.</source>
          <target state="translated">检查系数是否匹配。</target>
        </trans-unit>
        <trans-unit id="d9700aa50368965f26007e9ef6dc12172f836968" translate="yes" xml:space="preserve">
          <source>Check if domains match.</source>
          <target state="translated">检查域名是否匹配。</target>
        </trans-unit>
        <trans-unit id="7cda7e0160467a48240d75643f9aa9dd2aa8c3ec" translate="yes" xml:space="preserve">
          <source>Check if the array is Fortran contiguous but &lt;em&gt;not&lt;/em&gt; C contiguous.</source>
          <target state="translated">检查数组是否是Fortran连续的，而&lt;em&gt;不是&lt;/em&gt; C连续的。</target>
        </trans-unit>
        <trans-unit id="e7a996762c75a9633231bd44ab99dd3f19880ea7" translate="yes" xml:space="preserve">
          <source>Check if types match.</source>
          <target state="translated">检查类型是否匹配。</target>
        </trans-unit>
        <trans-unit id="8d606aa3664f58aff3cd51e12c1f4292532053db" translate="yes" xml:space="preserve">
          <source>Check if windows match.</source>
          <target state="translated">检查窗户是否匹配。</target>
        </trans-unit>
        <trans-unit id="2fb7aaaa0fefc98b63923082fcb9b881a92a1f09" translate="yes" xml:space="preserve">
          <source>Check that all items of arrays differ in at most N Units in the Last Place.</source>
          <target state="translated">检查数组的所有项目最多相差N个单位在最后的地方。</target>
        </trans-unit>
        <trans-unit id="7eaa6b9db4d409e9c0e745dc239854957e8b786b" translate="yes" xml:space="preserve">
          <source>Check that the solution is correct:</source>
          <target state="translated">检查解法是否正确。</target>
        </trans-unit>
        <trans-unit id="abd3adad63a405998bb8027f9dd962bdd792cf51" translate="yes" xml:space="preserve">
          <source>Check to see if &lt;code&gt;ary&lt;/code&gt; is Fortran contiguous. If so, return the input pointer and flag it as not a new object. If it is not Fortran contiguous, create a new &lt;code&gt;PyArrayObject*&lt;/code&gt; using the original data, flag it as a new object and return the pointer.</source>
          <target state="translated">检查 &lt;code&gt;ary&lt;/code&gt; 是否是Fortran连续的。如果是这样，则返回输入指针并将其标记为不是新对象。如果不连续，则使用原始数据创建一个新的 &lt;code&gt;PyArrayObject*&lt;/code&gt; 将其标记为新对象并返回指针。</target>
        </trans-unit>
        <trans-unit id="6deabec9ba29d971d99676bd19f94bb36aab8ebd" translate="yes" xml:space="preserve">
          <source>Check to see if &lt;code&gt;ary&lt;/code&gt; is contiguous. If so, return the input pointer and flag it as not a new object. If it is not contiguous, create a new &lt;code&gt;PyArrayObject*&lt;/code&gt; using the original data, flag it as a new object and return the pointer.</source>
          <target state="translated">检查 &lt;code&gt;ary&lt;/code&gt; 是否连续。如果是这样，则返回输入指针并将其标记为不是新对象。如果不连续，则使用原始数据创建一个新的 &lt;code&gt;PyArrayObject*&lt;/code&gt; 将其标记为新对象并返回指针。</target>
        </trans-unit>
        <trans-unit id="7093331a27bd647ef152d8be9e2ae4a45e799c24" translate="yes" xml:space="preserve">
          <source>Check whether iterations are left, and perform a single internal iteration without returning the result.</source>
          <target state="translated">检查是否剩余迭代,执行一次内部迭代,不返回结果。</target>
        </trans-unit>
        <trans-unit id="4144c2e0e789ff4e5b95e42eba75f165eee47a48" translate="yes" xml:space="preserve">
          <source>Check whether iterations are left, and perform a single internal iteration without returning the result. Used in the C-style pattern do-while pattern. For an example, see &lt;a href=&quot;numpy.nditer#numpy.nditer&quot;&gt;&lt;code&gt;nditer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">检查是否还保留迭代，并执行一次内部迭代，而不返回结果。在C样式模式的do-while模式中使用。有关示例，请参见&lt;a href=&quot;numpy.nditer#numpy.nditer&quot;&gt; &lt;code&gt;nditer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ed69b345e7c215832e51813de9d917baa4aa81d3" translate="yes" xml:space="preserve">
          <source>Check whether other does not equal self elementwise.</source>
          <target state="translated">检查其他是否不等于自己元素。</target>
        </trans-unit>
        <trans-unit id="a3d82cd61f57b9f18ee0eb4fb316060ba43247d8" translate="yes" xml:space="preserve">
          <source>Check whether other equals self elementwise.</source>
          <target state="translated">检查其他是否等于自己元素。</target>
        </trans-unit>
        <trans-unit id="434cdb1d625c09ab1050578e35a57522602ea24b" translate="yes" xml:space="preserve">
          <source>Checking the API Version</source>
          <target state="translated">检查API版本</target>
        </trans-unit>
        <trans-unit id="283049748626c9020e205907bb7476f70c9b37e7" translate="yes" xml:space="preserve">
          <source>Checks to see whether this is the first time the elements of the specified reduction operand which the iterator points at are being seen for the first time. The function returns a reasonable answer for reduction operands and when buffering is disabled. The answer may be incorrect for buffered non-reduction operands.</source>
          <target state="translated">检查迭代器指向的指定还原操作数的元素是否是第一次被看到。对于还原操作数和禁用缓冲的情况,函数返回合理的答案,对于有缓冲的非还原操作数,答案可能是错误的。对于缓冲的非还原操作数,答案可能不正确。</target>
        </trans-unit>
        <trans-unit id="aa157d59451a76fbaaa96b55717e70ff4070a919" translate="yes" xml:space="preserve">
          <source>Chhikara, Raj S., and Folks, J. Leroy, &amp;ldquo;The Inverse Gaussian Distribution: Theory : Methodology, and Applications&amp;rdquo;, CRC Press, 1988.</source>
          <target state="translated">Chhikara，Raj S.和Folks，J。Leroy，&amp;ldquo;高斯逆​​分布：理论：方法和应用&amp;rdquo;，CRC出版社，1988年。</target>
        </trans-unit>
        <trans-unit id="fdf0f4fddeb5edfe094f89b612af6bf23fbbf5d9" translate="yes" xml:space="preserve">
          <source>Child &lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; objects can also spawn to make grandchildren, and so on. Each &lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; has its position in the tree of spawned &lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; objects mixed in with the user-provided seed to generate independent (with very high probability) streams.</source>
          <target state="translated">子&lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt;对象也可以生成孙子对象，依此类推。每个&lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt;在生成的&lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt;对象树中的位置与用户提供的种子混合在一起，以生成独立的（很有可能）流。</target>
        </trans-unit>
        <trans-unit id="3a10cdc107364498984b83536b7e81520a19b878" translate="yes" xml:space="preserve">
          <source>Choice arrays. &lt;code&gt;a&lt;/code&gt; and all of the choices must be broadcastable to the same shape. If &lt;code&gt;choices&lt;/code&gt; is itself an array (not recommended), then its outermost dimension (i.e., the one corresponding to &lt;code&gt;choices.shape[0]&lt;/code&gt;) is taken as defining the &amp;ldquo;sequence&amp;rdquo;.</source>
          <target state="translated">选择数组。 &lt;code&gt;a&lt;/code&gt; 和所有的选择都必须broadcastable相同的形状。如果 &lt;code&gt;choices&lt;/code&gt; 本身是一个数组（不建议使用），则将其最外面的维度（即与 &lt;code&gt;choices.shape[0]&lt;/code&gt; 相对应的维度）定义为&amp;ldquo;序列&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="5ad7147824c2ea94d6560122c459caa4f4c34051" translate="yes" xml:space="preserve">
          <source>Choice arrays. The index array and all of the choices should be broadcastable to the same shape.</source>
          <target state="translated">选择数组。索引数组和所有的选择数组应该是可以广播到相同的形状。</target>
        </trans-unit>
        <trans-unit id="3423d9c2caf056a50af1e5e388fbc351b162a74e" translate="yes" xml:space="preserve">
          <source>Cholesky decomposition.</source>
          <target state="translated">Cholesky分解。</target>
        </trans-unit>
        <trans-unit id="2ca2864418456f81d23c002bcfa240f2d8fca295" translate="yes" xml:space="preserve">
          <source>Choose five random numbers from the set of five evenly-spaced numbers between 0 and 2.5, inclusive (&lt;em&gt;i.e.&lt;/em&gt;, from the set</source>
          <target state="translated">从0到2.5（含）之间的五个均匀间隔的数字集中选择五个随机数（&lt;em&gt;即&lt;/em&gt;，从该集合中</target>
        </trans-unit>
        <trans-unit id="35c9a25e2ab923acd6164ad4d06282c1e090295d" translate="yes" xml:space="preserve">
          <source>Choose the type of path. If a tuple is provided, the second argument is assumed to be the maximum intermediate size created. If only a single argument is provided the largest input or output array size is used as a maximum intermediate size.</source>
          <target state="translated">选择路径的类型。如果提供的是元组,则假设第二个参数是创建的最大中间值。如果只提供一个参数,则使用最大的输入或输出数组大小作为最大中间值。</target>
        </trans-unit>
        <trans-unit id="6410e1ff6dea4bdf660fd03e09261c2e8c92a4a7" translate="yes" xml:space="preserve">
          <source>Christian Kleiber, Samuel Kotz, &amp;ldquo;Statistical size distributions in economics and actuarial sciences&amp;rdquo;, Wiley, 2003.</source>
          <target state="translated">克里斯蒂安&amp;middot;克莱伯（Christian Kleiber），塞缪尔&amp;middot;科茨（Samuel Kotz），&amp;ldquo;经济学和精算科学中的统计规模分布&amp;rdquo;，威利，2003年。</target>
        </trans-unit>
        <trans-unit id="e799166bb71b4dde11ab28b58f6eff13ee75f067" translate="yes" xml:space="preserve">
          <source>Class for one-dimensional polynomials.</source>
          <target state="translated">一维多项式的类。</target>
        </trans-unit>
        <trans-unit id="141f83ee32f213c3c3e30b940039c0256ca45642" translate="yes" xml:space="preserve">
          <source>Class from which most (all?) numpy scalar types are derived. For consistency, exposes the same API as &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt;, despite many consequent attributes being either &amp;ldquo;get-only,&amp;rdquo; or completely irrelevant. This is the class from which it is strongly suggested users should derive custom scalar types.</source>
          <target state="translated">派生大多数（全部？）numpy标量类型的类。为了保持一致性，尽管许多后续属性是&amp;ldquo;仅获取&amp;rdquo;或完全不相关的，但公开了与&lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;相同的API 。强烈建议用户从该类中派生自定义标量类型。</target>
        </trans-unit>
        <trans-unit id="f3a9c0c7155c7f2627130b00e8664e0c47570c98" translate="yes" xml:space="preserve">
          <source>Class generic exists solely to derive numpy scalars from, and possesses, albeit unimplemented, all the attributes of the ndarray class so as to provide a uniform API.</source>
          <target state="translated">类generic的存在仅仅是为了推导出numpy标量,尽管没有实现,但它拥有ndarray类的所有属性,从而提供一个统一的API。</target>
        </trans-unit>
        <trans-unit id="50af8b2f53e369e6ce37192f4f707fa498a94b5e" translate="yes" xml:space="preserve">
          <source>Class instance.</source>
          <target state="translated">类实例。</target>
        </trans-unit>
        <trans-unit id="2785358c74196dd17652dd76c2cb1f0e3a27dcf4" translate="yes" xml:space="preserve">
          <source>Class of the underlying data (read-only).</source>
          <target state="translated">基础数据的类别(只读)。</target>
        </trans-unit>
        <trans-unit id="631eda8579e2970ff77106029d682f1124ccd882" translate="yes" xml:space="preserve">
          <source>Class to convert formats, names, titles description to a dtype.</source>
          <target state="translated">将格式、名称、标题描述转换为dtype的类。</target>
        </trans-unit>
        <trans-unit id="70956031e8aba40d5608418084c786b47da059e0" translate="yes" xml:space="preserve">
          <source>Class whose methods to decorate.</source>
          <target state="translated">类,其方法来装饰。</target>
        </trans-unit>
        <trans-unit id="94a0e1eeea610589ba223c0aebbf56c35a8d5343" translate="yes" xml:space="preserve">
          <source>Classes (including ndarray subclasses) can override how ufuncs act on them by defining certain special methods. For details, see &lt;a href=&quot;arrays.classes#arrays-classes&quot;&gt;Standard array subclasses&lt;/a&gt;.</source>
          <target state="translated">类（包括ndarray子类）可以通过定义某些特殊方法来覆盖ufunc对它们的作用。有关详细信息，请参见&lt;a href=&quot;arrays.classes#arrays-classes&quot;&gt;Standard数组子类&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0716551020b700fbc40d6da11a6a973469d6550e" translate="yes" xml:space="preserve">
          <source>Clear the IEEE error flags.</source>
          <target state="translated">清除IEEE错误标志。</target>
        </trans-unit>
        <trans-unit id="69cde09c8e5adab6b0a10f29c8e8089827660cd3" translate="yes" xml:space="preserve">
          <source>Clears the floating point status. A pointer to a local variable is passed in to prevent aggressive compiler optimizations from reodering this function call. Returns the previous status mask.</source>
          <target state="translated">清除浮点状态。传递一个指向本地变量的指针,以防止编译器的激进优化对该函数调用进行重写。返回之前的状态掩码。</target>
        </trans-unit>
        <trans-unit id="85631dab84756553305933ab9884fa05e7033c9b" translate="yes" xml:space="preserve">
          <source>Clears the floating point status. Returns the previous status mask.</source>
          <target state="translated">清除浮点状态。返回之前的状态掩码。</target>
        </trans-unit>
        <trans-unit id="95fd8bb886c035e55cfc935aa6369ec4437d9dba" translate="yes" xml:space="preserve">
          <source>Clears the specified array flags. This function does no validation, and assumes that you know what you&amp;rsquo;re doing.</source>
          <target state="translated">清除指定的数组标志。该函数不进行验证，并假定您知道自己在做什么。</target>
        </trans-unit>
        <trans-unit id="0259cd63a54e3479014d0b233265a7cb8a0c929d" translate="yes" xml:space="preserve">
          <source>Clip (limit) the values in an array.</source>
          <target state="translated">限制数组中的数值。</target>
        </trans-unit>
        <trans-unit id="10b5f7285e869f556c319cd6389b16c1806e6590" translate="yes" xml:space="preserve">
          <source>Clipping and rounding</source>
          <target state="translated">剪裁和四舍五入</target>
        </trans-unit>
        <trans-unit id="01110fe45ef307b0f0fc59a0a0494616ad2d9d3c" translate="yes" xml:space="preserve">
          <source>Clips an index to the valid range if it is out of bounds.</source>
          <target state="translated">如果索引超出界线,则将其夹到有效范围内。</target>
        </trans-unit>
        <trans-unit id="adac69379a626c2436948a4ef1792c7d719ef929" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="translated">Code</target>
        </trans-unit>
        <trans-unit id="4c6d56aa06140201b957d61e514a687a45637be2" translate="yes" xml:space="preserve">
          <source>Code segment showing the &amp;ldquo;can cast safely&amp;rdquo; table for a 32-bit system.</source>
          <target state="translated">代码段显示了32位系统的&amp;ldquo;可以安全投射&amp;rdquo;表。</target>
        </trans-unit>
        <trans-unit id="4880c50f2ea2d547641da09b4c0bf604cbaad4e6" translate="yes" xml:space="preserve">
          <source>Coefficient array of the integral.</source>
          <target state="translated">积分的系数数组。</target>
        </trans-unit>
        <trans-unit id="90095bbe595b4717b5f28520d7191bc7b67d082b" translate="yes" xml:space="preserve">
          <source>Coefficient matrix.</source>
          <target state="translated">系数矩阵。</target>
        </trans-unit>
        <trans-unit id="7ff4e0921ad16edc7282af8e661233be9efdef85" translate="yes" xml:space="preserve">
          <source>Coefficient tensor, of shape &lt;code&gt;b.shape + Q&lt;/code&gt;. &lt;code&gt;Q&lt;/code&gt;, a tuple, equals the shape of that sub-tensor of &lt;code&gt;a&lt;/code&gt; consisting of the appropriate number of its rightmost indices, and must be such that &lt;code&gt;prod(Q) == prod(b.shape)&lt;/code&gt; (in which sense &lt;code&gt;a&lt;/code&gt; is said to be &amp;lsquo;square&amp;rsquo;).</source>
          <target state="translated">系数张量的形状， &lt;code&gt;b.shape + Q&lt;/code&gt; 。 &lt;code&gt;Q&lt;/code&gt; ，一个元组，等于该子张量的形状 &lt;code&gt;a&lt;/code&gt; 由它的最右边的索引的适当数量的，并且必须使得 &lt;code&gt;prod(Q) == prod(b.shape)&lt;/code&gt; （其中感测 &lt;code&gt;a&lt;/code&gt; 是与所述是&amp;ldquo;正方形&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="6f7d7eca3d654d7516012e0321be8d2b34b3af6d" translate="yes" xml:space="preserve">
          <source>Coefficients, including those equal to zero, of the quotient.</source>
          <target state="translated">商数的系数,包括等于零的系数。</target>
        </trans-unit>
        <trans-unit id="b57ec6a0b2d77f8f2ef4d5e927f014b094bd79db" translate="yes" xml:space="preserve">
          <source>Coefficients, including those equal to zero, of the remainder.</source>
          <target state="translated">余的系数,包括等于零的系数。</target>
        </trans-unit>
        <trans-unit id="3a433dc0365548604b9b44d97f7bfbf6e88d77aa" translate="yes" xml:space="preserve">
          <source>Combination of &lt;a href=&quot;#c.PyArray_FROM_OF&quot;&gt;&lt;code&gt;PyArray_FROM_OF&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#c.PyArray_FROM_OT&quot;&gt;&lt;code&gt;PyArray_FROM_OT&lt;/code&gt;&lt;/a&gt; allowing both a &lt;em&gt;typenum&lt;/em&gt; and a &lt;em&gt;flags&lt;/em&gt; argument to be provided.</source>
          <target state="translated">&lt;a href=&quot;#c.PyArray_FROM_OF&quot;&gt; &lt;code&gt;PyArray_FROM_OF&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#c.PyArray_FROM_OT&quot;&gt; &lt;code&gt;PyArray_FROM_OT&lt;/code&gt; 的&lt;/a&gt;组合允许同时提供&lt;em&gt;typenum&lt;/em&gt;和&lt;em&gt;flags&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="1825a72b8523c42869f6ed18e25b4d98c6db9809" translate="yes" xml:space="preserve">
          <source>Combinations of array flags</source>
          <target state="translated">阵列标志的组合</target>
        </trans-unit>
        <trans-unit id="04f619e0125978268f6037fab0f4bee54fa7538a" translate="yes" xml:space="preserve">
          <source>Combine two masks with the &lt;code&gt;logical_or&lt;/code&gt; operator.</source>
          <target state="translated">将两个掩码与 &lt;code&gt;logical_or&lt;/code&gt; 运算符结合使用。</target>
        </trans-unit>
        <trans-unit id="ac4e580a3225536b502c2bf6b739b38d8c6dc235" translate="yes" xml:space="preserve">
          <source>Combining advanced and basic indexing</source>
          <target state="translated">结合先进和基本的索引编制</target>
        </trans-unit>
        <trans-unit id="6db9979c1fe0813b3eb2ee3a9a6ae24f7e5faea6" translate="yes" xml:space="preserve">
          <source>Combining multiple Boolean indexing arrays or a Boolean with an integer indexing array can best be understood with the &lt;a href=&quot;generated/numpy.ndarray.nonzero#numpy.ndarray.nonzero&quot;&gt;&lt;code&gt;obj.nonzero()&lt;/code&gt;&lt;/a&gt; analogy. The function &lt;a href=&quot;generated/numpy.ix_#numpy.ix_&quot;&gt;&lt;code&gt;ix_&lt;/code&gt;&lt;/a&gt; also supports boolean arrays and will work without any surprises.</source>
          <target state="translated">使用&lt;a href=&quot;generated/numpy.ndarray.nonzero#numpy.ndarray.nonzero&quot;&gt; &lt;code&gt;obj.nonzero()&lt;/code&gt; &lt;/a&gt;类比可以最好地理解将多个布尔索引数组或布尔值与整数索引数组组合在一起的方法。&lt;a href=&quot;generated/numpy.ix_#numpy.ix_&quot;&gt; &lt;code&gt;ix_&lt;/code&gt; &lt;/a&gt;函数还支持布尔数组，并且可以正常工作。</target>
        </trans-unit>
        <trans-unit id="39a64d591310ffe84aa9b684771a7d278ba716a5" translate="yes" xml:space="preserve">
          <source>Comma delimited file with mixed dtype</source>
          <target state="translated">以逗号分隔的混合类型文件</target>
        </trans-unit>
        <trans-unit id="39a95105f6ae1d2c8ab5b77d2df7fa0bdc43b7b9" translate="yes" xml:space="preserve">
          <source>Common test support for all numpy test scripts.</source>
          <target state="translated">支持所有numpy测试脚本的通用测试。</target>
        </trans-unit>
        <trans-unit id="c2a68a63dc41f356e6d15c8c535eea2cf026660b" translate="yes" xml:space="preserve">
          <source>Companion matrix of dimensions (deg, deg).</source>
          <target state="translated">维度的伴生矩阵(deg,deg)。</target>
        </trans-unit>
        <trans-unit id="38428edac9ae2355adbd42053821bdf711ded835" translate="yes" xml:space="preserve">
          <source>Compare against built-in broadcasting:</source>
          <target state="translated">对比一下内置广播。</target>
        </trans-unit>
        <trans-unit id="b5977dbb9726befd30db9317959bca3faeb91b26" translate="yes" xml:space="preserve">
          <source>Compare the power function distribution to the inverse of the Pareto.</source>
          <target state="translated">将幂函数分布与帕累托的反比。</target>
        </trans-unit>
        <trans-unit id="abbe4b051440d5c3941fb5ca3a1c58883bee0b7d" translate="yes" xml:space="preserve">
          <source>Compare two array_like objects for equality with desired relative and/or absolute precision.</source>
          <target state="translated">比较两个类似数组的对象是否具有所需的相对或绝对精度。</target>
        </trans-unit>
        <trans-unit id="6e9c538fcc856b4c5b41ccf954d897e3fba11150" translate="yes" xml:space="preserve">
          <source>Compare two arrays and returns a new array containing the element-wise maxima. If one of the elements being compared is a NaN, then that element is returned. If both elements are NaNs then the first is returned. The latter distinction is important for complex NaNs, which are defined as at least one of the real or imaginary parts being a NaN. The net effect is that NaNs are propagated.</source>
          <target state="translated">比较两个数组,并返回一个新的数组,其中包含元素的最大值。如果被比较的元素之一是NaN,则返回该元素。如果两个元素都是NaN,那么返回第一个元素。后面的区别对于复杂的NaNs很重要,它被定义为至少有一个实部或虚部是NaN。净效果是NaNs被传播。</target>
        </trans-unit>
        <trans-unit id="52e468afc192be1b2f72e0bc9d7f9f138350a871" translate="yes" xml:space="preserve">
          <source>Compare two arrays and returns a new array containing the element-wise maxima. If one of the elements being compared is a NaN, then the non-nan element is returned. If both elements are NaNs then the first is returned. The latter distinction is important for complex NaNs, which are defined as at least one of the real or imaginary parts being a NaN. The net effect is that NaNs are ignored when possible.</source>
          <target state="translated">比较两个数组,并返回一个新的数组,其中包含元素的最大值。如果被比较的元素之一是NaN,那么返回非纳米元素。如果两个元素都是NaN,则返回第一个元素。后者的区别对于复杂的NaNs很重要,它被定义为至少有一个实部或虚部是NaN。最终的效果是NaNs被尽可能地忽略。</target>
        </trans-unit>
        <trans-unit id="ace9cb4b9063e509209a97ac371136964f6f7819" translate="yes" xml:space="preserve">
          <source>Compare two arrays and returns a new array containing the element-wise minima. If one of the elements being compared is a NaN, then that element is returned. If both elements are NaNs then the first is returned. The latter distinction is important for complex NaNs, which are defined as at least one of the real or imaginary parts being a NaN. The net effect is that NaNs are propagated.</source>
          <target state="translated">比较两个数组,并返回一个新数组,其中包含元素的最小值。如果被比较的元素之一是NaN,则返回该元素。如果两个元素都是NaN,那么返回第一个元素。后面的区别对于复杂的NaNs很重要,它被定义为至少有一个实部或虚部是NaN。净效果是NaNs被传播。</target>
        </trans-unit>
        <trans-unit id="89c593ddd4725e7eb3064d75c349a4174bbacd17" translate="yes" xml:space="preserve">
          <source>Compare two arrays and returns a new array containing the element-wise minima. If one of the elements being compared is a NaN, then the non-nan element is returned. If both elements are NaNs then the first is returned. The latter distinction is important for complex NaNs, which are defined as at least one of the real or imaginary parts being a NaN. The net effect is that NaNs are ignored when possible.</source>
          <target state="translated">比较两个数组,并返回一个新数组,其中包含元素的最小值。如果被比较的元素之一是NaN,则返回非纳米元素。如果两个元素都是NaN,则返回第一个元素。后者的区别对于复杂的NaNs很重要,它被定义为至少有一个实部或虚部是NaN。最终的效果是NaNs被尽可能地忽略。</target>
        </trans-unit>
        <trans-unit id="bc6a4145f838627dea20878218beb3ec59a9a475" translate="yes" xml:space="preserve">
          <source>Compare two arrays relatively to their spacing.</source>
          <target state="translated">比较两个数组的相对间距。</target>
        </trans-unit>
        <trans-unit id="38460977eefc5ad076607c73457ab20f90eef5d2" translate="yes" xml:space="preserve">
          <source>Compared to indexing syntax, &lt;a href=&quot;#numpy.matrix.itemset&quot;&gt;&lt;code&gt;itemset&lt;/code&gt;&lt;/a&gt; provides some speed increase for placing a scalar into a particular location in an &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt;, if you must do this. However, generally this is discouraged: among other problems, it complicates the appearance of the code. Also, when using &lt;a href=&quot;#numpy.matrix.itemset&quot;&gt;&lt;code&gt;itemset&lt;/code&gt;&lt;/a&gt; (and &lt;a href=&quot;numpy.matrix.item#numpy.matrix.item&quot;&gt;&lt;code&gt;item&lt;/code&gt;&lt;/a&gt;) inside a loop, be sure to assign the methods to a local variable to avoid the attribute look-up at each loop iteration.</source>
          <target state="translated">相比于索引语法，&lt;a href=&quot;#numpy.matrix.itemset&quot;&gt; &lt;code&gt;itemset&lt;/code&gt; &lt;/a&gt;提供用于放置标到特定位置，在一些速度增加&lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;，如果你必须这样做。但是，通常不鼓励这样做：除其他问题外，它使代码的外观复杂化。另外，在循环内使用&lt;a href=&quot;#numpy.matrix.itemset&quot;&gt; &lt;code&gt;itemset&lt;/code&gt; &lt;/a&gt;（和&lt;a href=&quot;numpy.matrix.item#numpy.matrix.item&quot;&gt; &lt;code&gt;item&lt;/code&gt; &lt;/a&gt;）时，请确保将方法分配给局部变量，以避免在每次循环迭代时查找属性。</target>
        </trans-unit>
        <trans-unit id="37a1ac805be872bfc7e003c20b71f2f1bbbc823c" translate="yes" xml:space="preserve">
          <source>Compared to indexing syntax, &lt;a href=&quot;#numpy.ndarray.itemset&quot;&gt;&lt;code&gt;itemset&lt;/code&gt;&lt;/a&gt; provides some speed increase for placing a scalar into a particular location in an &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt;, if you must do this. However, generally this is discouraged: among other problems, it complicates the appearance of the code. Also, when using &lt;a href=&quot;#numpy.ndarray.itemset&quot;&gt;&lt;code&gt;itemset&lt;/code&gt;&lt;/a&gt; (and &lt;a href=&quot;numpy.ndarray.item#numpy.ndarray.item&quot;&gt;&lt;code&gt;item&lt;/code&gt;&lt;/a&gt;) inside a loop, be sure to assign the methods to a local variable to avoid the attribute look-up at each loop iteration.</source>
          <target state="translated">相比于索引语法，&lt;a href=&quot;#numpy.ndarray.itemset&quot;&gt; &lt;code&gt;itemset&lt;/code&gt; &lt;/a&gt;提供用于放置标到特定位置，在一些速度增加&lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;，如果你必须这样做。但是，通常不鼓励这样做：除其他问题外，它使代码的外观复杂化。另外，在循环内使用&lt;a href=&quot;#numpy.ndarray.itemset&quot;&gt; &lt;code&gt;itemset&lt;/code&gt; &lt;/a&gt;（和&lt;a href=&quot;numpy.ndarray.item#numpy.ndarray.item&quot;&gt; &lt;code&gt;item&lt;/code&gt; &lt;/a&gt;）时，请确保将方法分配给局部变量，以避免在每次循环迭代时查找属性。</target>
        </trans-unit>
        <trans-unit id="d83995123f5ea98603e646a9178fcfffebb1958a" translate="yes" xml:space="preserve">
          <source>Compared to indexing syntax, &lt;a href=&quot;#numpy.recarray.itemset&quot;&gt;&lt;code&gt;itemset&lt;/code&gt;&lt;/a&gt; provides some speed increase for placing a scalar into a particular location in an &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt;, if you must do this. However, generally this is discouraged: among other problems, it complicates the appearance of the code. Also, when using &lt;a href=&quot;#numpy.recarray.itemset&quot;&gt;&lt;code&gt;itemset&lt;/code&gt;&lt;/a&gt; (and &lt;a href=&quot;numpy.recarray.item#numpy.recarray.item&quot;&gt;&lt;code&gt;item&lt;/code&gt;&lt;/a&gt;) inside a loop, be sure to assign the methods to a local variable to avoid the attribute look-up at each loop iteration.</source>
          <target state="translated">相比于索引语法，&lt;a href=&quot;#numpy.recarray.itemset&quot;&gt; &lt;code&gt;itemset&lt;/code&gt; &lt;/a&gt;提供用于放置标到特定位置，在一些速度增加&lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;，如果你必须这样做。但是，通常不鼓励这样做：除其他问题外，它使代码的外观复杂化。另外，在循环内使用&lt;a href=&quot;#numpy.recarray.itemset&quot;&gt; &lt;code&gt;itemset&lt;/code&gt; &lt;/a&gt;（和&lt;a href=&quot;numpy.recarray.item#numpy.recarray.item&quot;&gt; &lt;code&gt;item&lt;/code&gt; &lt;/a&gt;）时，请确保将方法分配给局部变量，以避免在每次循环迭代时查找属性。</target>
        </trans-unit>
        <trans-unit id="c659be692ea2a97bb2ad6d27d767ba11002c5a0f" translate="yes" xml:space="preserve">
          <source>Compares two half-precision floats (h1 != h2).</source>
          <target state="translated">比较两个半精度浮点数(h1 !=h2)。</target>
        </trans-unit>
        <trans-unit id="a8531600ccd3e5208344582224d725dc6447d471" translate="yes" xml:space="preserve">
          <source>Compares two half-precision floats (h1 &amp;gt; h2).</source>
          <target state="translated">比较两个半精度浮点数（h1&amp;gt; h2）。</target>
        </trans-unit>
        <trans-unit id="1fe54d41d33ca7b444169273c69fa5061d6e3f69" translate="yes" xml:space="preserve">
          <source>Compares two half-precision floats (h1 &amp;gt;= h2).</source>
          <target state="translated">比较两个半精度浮点数（h1&amp;gt; = h2）。</target>
        </trans-unit>
        <trans-unit id="09c74964a2a76ed9d39c659abab42ad8913ca62f" translate="yes" xml:space="preserve">
          <source>Compares two half-precision floats (h1 &amp;lt; h2).</source>
          <target state="translated">比较两个半精度浮点数（h1 &amp;lt;h2）。</target>
        </trans-unit>
        <trans-unit id="09ca56b6c4b7cdb0aacabc3d8ecbb1eef0726cc8" translate="yes" xml:space="preserve">
          <source>Compares two half-precision floats (h1 &amp;lt;= h2).</source>
          <target state="translated">比较两个半精度浮点数（h1 &amp;lt;= h2）。</target>
        </trans-unit>
        <trans-unit id="2a372af75f04fe5db91b2eb992a65a4b830bbcda" translate="yes" xml:space="preserve">
          <source>Compares two half-precision floats (h1 == h2).</source>
          <target state="translated">比较两个半精度的浮点数(h1==h2)。</target>
        </trans-unit>
        <trans-unit id="6569476619ffc6f6e8942d6f762781ba11246ce3" translate="yes" xml:space="preserve">
          <source>Compares two half-precision floats that are known to not be NaN (h1 &amp;lt; h2). If a value is NaN, the result is undefined.</source>
          <target state="translated">比较两个已知不是NaN（h1 &amp;lt;h2）的半精度浮点数。如果值为NaN，则结果不确定。</target>
        </trans-unit>
        <trans-unit id="6caa81fd2bc3f158b7e80b5e938442169d219755" translate="yes" xml:space="preserve">
          <source>Compares two half-precision floats that are known to not be NaN (h1 &amp;lt;= h2). If a value is NaN, the result is undefined.</source>
          <target state="translated">比较两个已知不是NaN（h1 &amp;lt;= h2）的半精度浮点数。如果值为NaN，则结果不确定。</target>
        </trans-unit>
        <trans-unit id="2488158fc090106e7c705b17853d535c32a0c590" translate="yes" xml:space="preserve">
          <source>Compares two half-precision floats that are known to not be NaN (h1 == h2). If a value is NaN, the result is undefined.</source>
          <target state="translated">比较两个已知不是NaN的半精度浮点数(h1==h2)。如果一个值是NaN,则结果未定义。</target>
        </trans-unit>
        <trans-unit id="dff584999fbb6cd5911aa30f1590245afbbe3b17" translate="yes" xml:space="preserve">
          <source>Comparing Performance</source>
          <target state="translated">性能比较</target>
        </trans-unit>
        <trans-unit id="eea251154fb167c3cc620efaacead79a92ce4964" translate="yes" xml:space="preserve">
          <source>Comparing needs to be done against a valid version string or other &lt;a href=&quot;#numpy.lib.NumpyVersion&quot;&gt;&lt;code&gt;NumpyVersion&lt;/code&gt;&lt;/a&gt; instance. Note that all development versions of the same (pre-)release compare equal.</source>
          <target state="translated">需要与有效的版本字符串或其他&lt;a href=&quot;#numpy.lib.NumpyVersion&quot;&gt; &lt;code&gt;NumpyVersion&lt;/code&gt; &lt;/a&gt;实例进行比较。请注意，相同（预）发行版的所有开发版本比较都相等。</target>
        </trans-unit>
        <trans-unit id="2dfcf898a3bd4e011123eee87384ecb67d0919d4" translate="yes" xml:space="preserve">
          <source>Comparison</source>
          <target state="translated">Comparison</target>
        </trans-unit>
        <trans-unit id="b25204cbd4bfc02484e2851632d991b06eb495ce" translate="yes" xml:space="preserve">
          <source>Comparison functions</source>
          <target state="translated">比较功能</target>
        </trans-unit>
        <trans-unit id="a7de33d110c915ab8e665813e77fafb72e84afb2" translate="yes" xml:space="preserve">
          <source>Comparison operators:</source>
          <target state="translated">比较运算符。</target>
        </trans-unit>
        <trans-unit id="2f12ca1e5a55a63736464971fc76ee35d3a18342" translate="yes" xml:space="preserve">
          <source>Comparison value</source>
          <target state="translated">比较值</target>
        </trans-unit>
        <trans-unit id="7f4c99d898504a4d469f2c56fcd16f51caf889ab" translate="yes" xml:space="preserve">
          <source>Compatible with &lt;a href=&quot;https://docs.python.org/dev/library/random.html#random.random&quot;&gt;&lt;code&gt;random.random&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">与&lt;a href=&quot;https://docs.python.org/dev/library/random.html#random.random&quot;&gt; &lt;code&gt;random.random&lt;/code&gt; &lt;/a&gt;兼容</target>
        </trans-unit>
        <trans-unit id="9674cbe94fc34b0813752dbf21ea3ff49c519ffa" translate="yes" xml:space="preserve">
          <source>Compiler directives</source>
          <target state="translated">编译器指令</target>
        </trans-unit>
        <trans-unit id="ff834855dd2cb771e7308c2c45e567479f89e7e7" translate="yes" xml:space="preserve">
          <source>Complete path, including the &lt;a href=&quot;numpy.datasource#numpy.DataSource&quot;&gt;&lt;code&gt;DataSource&lt;/code&gt;&lt;/a&gt; destination directory.</source>
          <target state="translated">完整路径，包括&lt;a href=&quot;numpy.datasource#numpy.DataSource&quot;&gt; &lt;code&gt;DataSource&lt;/code&gt; &lt;/a&gt;目标目录。</target>
        </trans-unit>
        <trans-unit id="de68f54a7ada83b34c3c594c6d6dc315f2d1dff5" translate="yes" xml:space="preserve">
          <source>Complex dtypes are not supported, they will raise a TypeError.</source>
          <target state="translated">不支持复杂的dtypes,它们会引发TypeError。</target>
        </trans-unit>
        <trans-unit id="aa65be528af88fb5c8a75d1c112c51079bcd9e1b" translate="yes" xml:space="preserve">
          <source>Complex floating point</source>
          <target state="translated">复杂的浮点数</target>
        </trans-unit>
        <trans-unit id="50b56f643c3c403eee6bc18311217c2110cfc3d1" translate="yes" xml:space="preserve">
          <source>Complex floating-point numbers:</source>
          <target state="translated">复杂的浮点数。</target>
        </trans-unit>
        <trans-unit id="5b80d64d624d4f3ca65bbe7239e385812c1d03ee" translate="yes" xml:space="preserve">
          <source>Complex functions</source>
          <target state="translated">复杂功能</target>
        </trans-unit>
        <trans-unit id="0fa9ea03df83d22c3ed69e97864b69f2e7260411" translate="yes" xml:space="preserve">
          <source>Complex interpolation:</source>
          <target state="translated">复式插值。</target>
        </trans-unit>
        <trans-unit id="a65b5b7a1200ae7ef93272975b6c56910310c564" translate="yes" xml:space="preserve">
          <source>Complex is of a different type, so it up-casts the float in the &lt;code&gt;array_types&lt;/code&gt; argument:</source>
          <target state="translated">Complex是另一种类型，因此它在 &lt;code&gt;array_types&lt;/code&gt; 参数中向上转换了浮点数：</target>
        </trans-unit>
        <trans-unit id="44fc04a3b7819c72bdc8be8966689f3ecd87dbfd" translate="yes" xml:space="preserve">
          <source>Complex-conjugate all elements.</source>
          <target state="translated">複合所有元素。</target>
        </trans-unit>
        <trans-unit id="3ff5cadccad2941be3aad490dcbf596e9e2f1f26" translate="yes" xml:space="preserve">
          <source>Complex-conjugating dot product.</source>
          <target state="translated">络合点积。</target>
        </trans-unit>
        <trans-unit id="f14b349bf9b6f0598bc456bea6a626f511dd720b" translate="yes" xml:space="preserve">
          <source>Complex-valued matrix with real e-values (but complex-valued e-vectors); note that &lt;code&gt;a.conj().T == a&lt;/code&gt;, i.e., &lt;code&gt;a&lt;/code&gt; is Hermitian.</source>
          <target state="translated">具有实数电子值的复数值矩阵（但复数电子矢量）；注意 &lt;code&gt;a.conj().T == a&lt;/code&gt; ，即 &lt;code&gt;a&lt;/code&gt; 是Hermitian。</target>
        </trans-unit>
        <trans-unit id="4745229c055fca9c55de4f5e19158b64c4e46c7f" translate="yes" xml:space="preserve">
          <source>Complex: [R + Rj, R + nanj, nan + Rj, nan + nanj]</source>
          <target state="translated">复合物:[R+Rj,R+nanj,nan+Rj,nan+nanj]</target>
        </trans-unit>
        <trans-unit id="07214e21bcf968861459229df35bdc3eb2301560" translate="yes" xml:space="preserve">
          <source>Components of the first vector(s).</source>
          <target state="translated">第一个向量的组成部分:</target>
        </trans-unit>
        <trans-unit id="034a68a3b46b5f19a8396a79ba6059edc518f621" translate="yes" xml:space="preserve">
          <source>Components of the second vector(s).</source>
          <target state="translated">第二个向量的组成部分:</target>
        </trans-unit>
        <trans-unit id="45f45d1eb6794f5e653fdc744d97f27b67ca97c3" translate="yes" xml:space="preserve">
          <source>Compute &lt;code&gt;y = x1 * 2**x2&lt;/code&gt;, the inverse of &lt;a href=&quot;#numpy.frexp&quot;&gt;&lt;code&gt;frexp&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">计算 &lt;code&gt;y = x1 * 2**x2&lt;/code&gt; ，即&lt;a href=&quot;#numpy.frexp&quot;&gt; &lt;code&gt;frexp&lt;/code&gt; &lt;/a&gt;的倒数。</target>
        </trans-unit>
        <trans-unit id="0c64182221e47c35867a7af81c848c36fa6d8bc1" translate="yes" xml:space="preserve">
          <source>Compute a matrix transpose, or reorder any number of axes:</source>
          <target state="translated">计算矩阵转置,或重新排列任意数量的轴。</target>
        </trans-unit>
        <trans-unit id="13e5ab403f3a3a2b71e3a1b4880046ec10502553" translate="yes" xml:space="preserve">
          <source>Compute a product-sum over the last dimension of &lt;em&gt;obj1&lt;/em&gt; and the second-to-last dimension of &lt;em&gt;obj2&lt;/em&gt;. For 2-d arrays this is a matrix-product. Neither array is conjugated.</source>
          <target state="translated">计算&lt;em&gt;obj1&lt;/em&gt;的最后一个维度和&lt;em&gt;obj2&lt;/em&gt;的倒数第二个维度的乘积和。对于二维阵列，这是一个矩阵乘积。两个阵列都不共轭。</target>
        </trans-unit>
        <trans-unit id="056b92ccdbc0e24b6f67de04cffc75083bf356ab" translate="yes" xml:space="preserve">
          <source>Compute a product-sum over the last dimensions of &lt;em&gt;obj1&lt;/em&gt; and &lt;em&gt;obj2&lt;/em&gt;. Neither array is conjugated.</source>
          <target state="translated">计算&lt;em&gt;obj1&lt;/em&gt;和&lt;em&gt;obj2&lt;/em&gt;的最后一个维度的乘积和。两个阵列都不共轭。</target>
        </trans-unit>
        <trans-unit id="5d7a1e013a739673e66d447edae1fe867b62d357" translate="yes" xml:space="preserve">
          <source>Compute an array where the subarrays contain index values 0, 1, &amp;hellip; varying only along the corresponding axis.</source>
          <target state="translated">计算一个数组，其中子数组包含仅沿相应轴变化的索引值0、1，&amp;hellip;。</target>
        </trans-unit>
        <trans-unit id="947fc265208178db651870062fcd800d2541aa5f" translate="yes" xml:space="preserve">
          <source>Compute bit-wise inversion, or bit-wise NOT, element-wise.</source>
          <target state="translated">计算位元反转,或位元NOT,位元反转。</target>
        </trans-unit>
        <trans-unit id="4fa591d9d9af402206493fb5fda8248cb6f1c024" translate="yes" xml:space="preserve">
          <source>Compute hyperbolic tangent element-wise.</source>
          <target state="translated">按双曲正切元素计算。</target>
        </trans-unit>
        <trans-unit id="a87a1fe24ae7fbea279764c44fdccdccf954c207" translate="yes" xml:space="preserve">
          <source>Compute polynomial values.</source>
          <target state="translated">计算多项式数值。</target>
        </trans-unit>
        <trans-unit id="068ac2c1a4127e2fed43429a48f36264cc85457c" translate="yes" xml:space="preserve">
          <source>Compute tangent element-wise.</source>
          <target state="translated">按切线元素计算。</target>
        </trans-unit>
        <trans-unit id="d300b4bcd09d963652013deebe8168c3c89562c2" translate="yes" xml:space="preserve">
          <source>Compute tensor dot product along specified axes.</source>
          <target state="translated">沿着指定的轴计算张量点积。</target>
        </trans-unit>
        <trans-unit id="fa371bab50ec7f5949bcd135ca6f29870a08c615" translate="yes" xml:space="preserve">
          <source>Compute the &amp;lsquo;inverse&amp;rsquo; of an N-dimensional array.</source>
          <target state="translated">计算N维数组的&amp;ldquo;逆&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="fc5bbebd14e559d5af2472fcb7cd8cae4c38dfea" translate="yes" xml:space="preserve">
          <source>Compute the (Moore-Penrose) pseudo-inverse of a matrix.</source>
          <target state="translated">计算矩阵的(Moore-Penrose)伪逆。</target>
        </trans-unit>
        <trans-unit id="7a0d3b8cffb38e55193b71b10895c89358380d6f" translate="yes" xml:space="preserve">
          <source>Compute the (multiplicative) inverse of a matrix.</source>
          <target state="translated">计算矩阵的(乘法)逆。</target>
        </trans-unit>
        <trans-unit id="ce317ec0f3a7246ebde3c56c949a94474c644f2c" translate="yes" xml:space="preserve">
          <source>Compute the 1-d correlation of the 1-d arrays &lt;em&gt;op1&lt;/em&gt; and &lt;em&gt;op2&lt;/em&gt; . The correlation is computed at each output point by multiplying &lt;em&gt;op1&lt;/em&gt; by a shifted version of &lt;em&gt;op2&lt;/em&gt; and summing the result. As a result of the shift, needed values outside of the defined range of &lt;em&gt;op1&lt;/em&gt; and &lt;em&gt;op2&lt;/em&gt; are interpreted as zero. The mode determines how many shifts to return: 0 - return only shifts that did not need to assume zero- values; 1 - return an object that is the same size as &lt;em&gt;op1&lt;/em&gt;, 2 - return all possible shifts (any overlap at all is accepted).</source>
          <target state="translated">计算一维数组&lt;em&gt;op1&lt;/em&gt;和&lt;em&gt;op2&lt;/em&gt;的一维相关性。通过将&lt;em&gt;op1&lt;/em&gt;乘以&lt;em&gt;op2&lt;/em&gt;的移位版本并求和，可以在每个输出点计算相关性。移位的结果是，超出&lt;em&gt;op1&lt;/em&gt;和&lt;em&gt;op2&lt;/em&gt;定义范围的所需值被解释为零。该模式确定要返回的班次：0-仅返回不需要采用零值的班次；否则，返回0。1-返回与&lt;em&gt;op1&lt;/em&gt;大小相同的对象，2-返回所有可能的移位（任何重叠都被接受）。</target>
        </trans-unit>
        <trans-unit id="c0d44872f577915a6980faf8dd21743d44adf9e2" translate="yes" xml:space="preserve">
          <source>Compute the 2-dimensional FFT of a real array.</source>
          <target state="translated">计算实数组的二维FFT。</target>
        </trans-unit>
        <trans-unit id="d178e7eb58c146939d28cee1561c739e0e5a7a6e" translate="yes" xml:space="preserve">
          <source>Compute the 2-dimensional discrete Fourier Transform</source>
          <target state="translated">计算二维离散傅立叶变换。</target>
        </trans-unit>
        <trans-unit id="67a3a6e456306d80e1a85f7bd3abf35885e3417f" translate="yes" xml:space="preserve">
          <source>Compute the 2-dimensional inverse FFT of a real array.</source>
          <target state="translated">计算实数组的二维反FFT。</target>
        </trans-unit>
        <trans-unit id="5dab8bf12f8acb88adf197e9679d392f9686e8f0" translate="yes" xml:space="preserve">
          <source>Compute the 2-dimensional inverse discrete Fourier Transform.</source>
          <target state="translated">计算二维反离散傅里叶变换。</target>
        </trans-unit>
        <trans-unit id="e520eedb99a35ab7b8e9d96c9ee884bd6396de95" translate="yes" xml:space="preserve">
          <source>Compute the FFT of a signal that has Hermitian symmetry, i.e., a real spectrum.</source>
          <target state="translated">计算具有赫米特对称性的信号的FFT,即实谱。</target>
        </trans-unit>
        <trans-unit id="8d0c346e5e8eee0d8b840c557de8c1fb49e608f2" translate="yes" xml:space="preserve">
          <source>Compute the Heaviside step function.</source>
          <target state="translated">计算Heaviside阶梯函数。</target>
        </trans-unit>
        <trans-unit id="0af5dc6ec4bce95c7deeb2e22d43be085363a3c4" translate="yes" xml:space="preserve">
          <source>Compute the N-dimensional discrete Fourier Transform for real input.</source>
          <target state="translated">计算实际输入的N维离散傅里叶变换。</target>
        </trans-unit>
        <trans-unit id="618a9fedeaaa9d126c314769627bca84416583fd" translate="yes" xml:space="preserve">
          <source>Compute the N-dimensional discrete Fourier Transform.</source>
          <target state="translated">计算N维离散傅立叶变换。</target>
        </trans-unit>
        <trans-unit id="e7cb154cbbc3ce37f25f7537fe58a126b7946394" translate="yes" xml:space="preserve">
          <source>Compute the N-dimensional inverse discrete Fourier Transform.</source>
          <target state="translated">计算N维反离散傅里叶变换。</target>
        </trans-unit>
        <trans-unit id="fdada9bbbb0e0feab597366ef4af60a51ac07565" translate="yes" xml:space="preserve">
          <source>Compute the absolute values element-wise.</source>
          <target state="translated">按元素计算绝对值。</target>
        </trans-unit>
        <trans-unit id="854c7a30aceed6c65bd1930d3f73b4435d8fefe0" translate="yes" xml:space="preserve">
          <source>Compute the anomalies (deviations from the arithmetic mean) along the given axis.</source>
          <target state="translated">计算沿给定轴线的异常值(与算术平均值的偏差)。</target>
        </trans-unit>
        <trans-unit id="032bf5a750caf3fcc37d976c4abec0978e892339" translate="yes" xml:space="preserve">
          <source>Compute the arithmetic mean along the specified axis, ignoring NaNs.</source>
          <target state="translated">沿着指定的轴计算算术平均值,忽略NaNs。</target>
        </trans-unit>
        <trans-unit id="c27697f73833b9f50c1ae272faa6ca6a07b48429" translate="yes" xml:space="preserve">
          <source>Compute the arithmetic mean along the specified axis.</source>
          <target state="translated">计算沿指定轴的算术平均值。</target>
        </trans-unit>
        <trans-unit id="d2a56a9fc18ac2ca14dd4e52739d766778e94a9f" translate="yes" xml:space="preserve">
          <source>Compute the bi-dimensional histogram of two data samples.</source>
          <target state="translated">计算两个数据样本的二维直方图。</target>
        </trans-unit>
        <trans-unit id="8d0e71a5459a34a1c578cae96fc1cfe3bd566fe6" translate="yes" xml:space="preserve">
          <source>Compute the bit-wise AND of two arrays element-wise.</source>
          <target state="translated">计算两个数组元素的位宽和。</target>
        </trans-unit>
        <trans-unit id="e7eb6c1c60d6349cc90d5c8c4320d954c000c524" translate="yes" xml:space="preserve">
          <source>Compute the bit-wise OR of two arrays element-wise.</source>
          <target state="translated">计算两个数组的位元OR。</target>
        </trans-unit>
        <trans-unit id="55b35d5464c0530c89b3ec03e495b9078bf4cf47" translate="yes" xml:space="preserve">
          <source>Compute the bit-wise XOR of two arrays element-wise.</source>
          <target state="translated">计算两个数组的位元XOR。</target>
        </trans-unit>
        <trans-unit id="f5acd6ba924e2efb344c13dbed92e0c329da8c41" translate="yes" xml:space="preserve">
          <source>Compute the condition number of a matrix.</source>
          <target state="translated">计算矩阵的条件数。</target>
        </trans-unit>
        <trans-unit id="b1c67fc04779c3f2a70b86099aedfddb41f66c14" translate="yes" xml:space="preserve">
          <source>Compute the determinant of an array.</source>
          <target state="translated">计算一个数组的行列式。</target>
        </trans-unit>
        <trans-unit id="b702821ff84d14c559452b05bb97c2de7fb25e9d" translate="yes" xml:space="preserve">
          <source>Compute the differences between consecutive elements of an array.</source>
          <target state="translated">计算一个数组中连续元素之间的差异。</target>
        </trans-unit>
        <trans-unit id="951e81c96daf183677546cd31bf58f658274b345" translate="yes" xml:space="preserve">
          <source>Compute the dot product of two or more arrays in a single function call, while automatically selecting the fastest evaluation order.</source>
          <target state="translated">在一次函数调用中计算两个或多个数组的点积,同时自动选择最快的评估顺序。</target>
        </trans-unit>
        <trans-unit id="6d2ef25b4e32887cf6b0d4b62f770b736c0bf3b1" translate="yes" xml:space="preserve">
          <source>Compute the eigenvalues and right eigenvectors of a square array.</source>
          <target state="translated">计算一个方阵的特征值和右特征向量。</target>
        </trans-unit>
        <trans-unit id="7972ade8ee96398f7c3dca6dc7f1e5fbe1dee9f0" translate="yes" xml:space="preserve">
          <source>Compute the eigenvalues of a complex Hermitian or real symmetric matrix.</source>
          <target state="translated">计算复数赫米特或实对称矩阵的特征值。</target>
        </trans-unit>
        <trans-unit id="df2018ad5cc925c4bd2d8d45424431e34663700a" translate="yes" xml:space="preserve">
          <source>Compute the eigenvalues of a general matrix.</source>
          <target state="translated">计算一般矩阵的特征值。</target>
        </trans-unit>
        <trans-unit id="e2e2b6e6567897f80498047d4b073da0348b1fe0" translate="yes" xml:space="preserve">
          <source>Compute the future value.</source>
          <target state="translated">计算未来价值。</target>
        </trans-unit>
        <trans-unit id="ca53316c69a9d7dff355b503668c1872713b22a1" translate="yes" xml:space="preserve">
          <source>Compute the histogram of a set of data.</source>
          <target state="translated">计算一组数据的直方图。</target>
        </trans-unit>
        <trans-unit id="089040bb2e30a76919dc623b5c63558c7963e5b8" translate="yes" xml:space="preserve">
          <source>Compute the interest portion of a payment.</source>
          <target state="translated">计算付款的利息部分。</target>
        </trans-unit>
        <trans-unit id="deed0637d0888d671ccf558d5297ba636b52a784" translate="yes" xml:space="preserve">
          <source>Compute the inverse FFT of a signal that has Hermitian symmetry.</source>
          <target state="translated">计算具有赫米特对称性的信号的反FFT。</target>
        </trans-unit>
        <trans-unit id="5919808f0861ce5e5c6edd192558abd6cdeed04d" translate="yes" xml:space="preserve">
          <source>Compute the inverse of the N-dimensional FFT of real input.</source>
          <target state="translated">计算实输入的N维FFT的反。</target>
        </trans-unit>
        <trans-unit id="ce30e6918f57933fede9b196ab6208b5d99d43fe" translate="yes" xml:space="preserve">
          <source>Compute the inverse of the n-point DFT for real input.</source>
          <target state="translated">计算实输入的n点DFT的逆。</target>
        </trans-unit>
        <trans-unit id="146d4119420125716eb9e5162a664c6e708ec171" translate="yes" xml:space="preserve">
          <source>Compute the mean of the array.</source>
          <target state="translated">计算阵列的平均值。</target>
        </trans-unit>
        <trans-unit id="75b405fa34c2293f176a80e9455e345d4ea00995" translate="yes" xml:space="preserve">
          <source>Compute the median along the specified axis, while ignoring NaNs.</source>
          <target state="translated">计算沿指定轴线的中值,同时忽略NaNs。</target>
        </trans-unit>
        <trans-unit id="5f2fe82c20077c9d0997165620b7b7093677b74f" translate="yes" xml:space="preserve">
          <source>Compute the median along the specified axis.</source>
          <target state="translated">计算沿指定轴的中位数。</target>
        </trans-unit>
        <trans-unit id="f49f4e3eff991416a03a71efdb176b02ad137665" translate="yes" xml:space="preserve">
          <source>Compute the multidimensional histogram of some data.</source>
          <target state="translated">计算一些数据的多维直方图。</target>
        </trans-unit>
        <trans-unit id="9f985f7023c691b407ddd9c38fd8d56c7f36cce8" translate="yes" xml:space="preserve">
          <source>Compute the number of periodic payments.</source>
          <target state="translated">计算定期付款的次数。</target>
        </trans-unit>
        <trans-unit id="733b57cc1709b7cf6a9c1de104182ed36cee85e6" translate="yes" xml:space="preserve">
          <source>Compute the one-dimensional FFT for real input.</source>
          <target state="translated">计算实输入的一维FFT。</target>
        </trans-unit>
        <trans-unit id="8f2e370b04711ab583709ac47d198ba4e79cbadd" translate="yes" xml:space="preserve">
          <source>Compute the one-dimensional discrete Fourier Transform for real input.</source>
          <target state="translated">计算实际输入的一维离散傅里叶变换。</target>
        </trans-unit>
        <trans-unit id="e5e7857b86fdf420c15fe37d2645a15e124e2351" translate="yes" xml:space="preserve">
          <source>Compute the one-dimensional discrete Fourier Transform.</source>
          <target state="translated">计算一维离散傅里叶变换。</target>
        </trans-unit>
        <trans-unit id="76b7badeb6481641dd13f6eaf394bb9c18c8cab1" translate="yes" xml:space="preserve">
          <source>Compute the one-dimensional inverse discrete Fourier Transform.</source>
          <target state="translated">计算一维反离散傅里叶变换。</target>
        </trans-unit>
        <trans-unit id="9381b1752cc6a461f7e91077cdb6db7fe5a48f4d" translate="yes" xml:space="preserve">
          <source>Compute the outer product of two vectors.</source>
          <target state="translated">计算两个向量的外积。</target>
        </trans-unit>
        <trans-unit id="cbc3ab7d3f6c89e7688a1bd6e4393422aa4c3b90" translate="yes" xml:space="preserve">
          <source>Compute the payment against loan principal plus interest.</source>
          <target state="translated">计算贷款本金加利息的还款额。</target>
        </trans-unit>
        <trans-unit id="46ed86386ad333de82eb1b7762aabfed9c76dfaf" translate="yes" xml:space="preserve">
          <source>Compute the payment against loan principal.</source>
          <target state="translated">用贷款本金计算还款额。</target>
        </trans-unit>
        <trans-unit id="5b94637940b6e09f6a444aac566b5cffb0ef7cc5" translate="yes" xml:space="preserve">
          <source>Compute the present value.</source>
          <target state="translated">计算现值。</target>
        </trans-unit>
        <trans-unit id="ed2028550f82331ecb48f833083f7734128a7f0c" translate="yes" xml:space="preserve">
          <source>Compute the q-th percentile of the data along the specified axis.</source>
          <target state="translated">沿着指定的轴计算数据的q-th百分位数。</target>
        </trans-unit>
        <trans-unit id="c6ed1091760ac01a76bb052045201b29d9012406" translate="yes" xml:space="preserve">
          <source>Compute the q-th quantile of the data along the specified axis.</source>
          <target state="translated">沿着指定的轴计算数据的q-th分位数。</target>
        </trans-unit>
        <trans-unit id="a016c465eb4d3dc5939f0bdcc8907e529c903c76" translate="yes" xml:space="preserve">
          <source>Compute the qr factorization of a matrix.</source>
          <target state="translated">计算矩阵的qr因子化。</target>
        </trans-unit>
        <trans-unit id="83309b8de9d230170ad49f73fb6a722aacbf72a8" translate="yes" xml:space="preserve">
          <source>Compute the qth percentile of the data along the specified axis, while ignoring nan values.</source>
          <target state="translated">沿着指定的轴计算数据的第q百分位数,同时忽略nan值。</target>
        </trans-unit>
        <trans-unit id="4fe3d325fd56452aa7f5ecbc4f8b7dad9aae46d0" translate="yes" xml:space="preserve">
          <source>Compute the qth quantile of the data along the specified axis, while ignoring nan values.</source>
          <target state="translated">沿着指定的轴计算数据的第q次分位数,同时忽略nan值。</target>
        </trans-unit>
        <trans-unit id="de4cace71ddfe52eb9bc3f9b565cdbec00b48884" translate="yes" xml:space="preserve">
          <source>Compute the qth quantile of the data along the specified axis, while ignoring nan values. Returns the qth quantile(s) of the array elements.</source>
          <target state="translated">沿着指定轴计算数据的第q个分位数,同时忽略nan值。返回数组元素的第q个分位数。</target>
        </trans-unit>
        <trans-unit id="5ed535359eae3077289b82f9fc67b3ffd54128d9" translate="yes" xml:space="preserve">
          <source>Compute the rate of interest per period.</source>
          <target state="translated">计算每期利息率。</target>
        </trans-unit>
        <trans-unit id="4a5f1b7538c28d59530b835e6055fa30abb75407" translate="yes" xml:space="preserve">
          <source>Compute the roots for the series. Note that the accuracy of the roots decrease the further outside the domain they lie.</source>
          <target state="translated">计算系列的根。请注意,根的精度在其所在的域外越远越低。</target>
        </trans-unit>
        <trans-unit id="5c8b9d5cf9d0408e56b56c50cb4c4ea45a908e79" translate="yes" xml:space="preserve">
          <source>Compute the roots of a Chebyshev series.</source>
          <target state="translated">计算切比雪夫数列的根。</target>
        </trans-unit>
        <trans-unit id="2d641d9e2bcefe116338c34e7e9f40f95aa74cff" translate="yes" xml:space="preserve">
          <source>Compute the roots of a Hermite series.</source>
          <target state="translated">计算赫米特数列的根。</target>
        </trans-unit>
        <trans-unit id="ae57b133f1570844585065d9e9104c93e1cbeadb" translate="yes" xml:space="preserve">
          <source>Compute the roots of a HermiteE series.</source>
          <target state="translated">计算HermiteE系列的根。</target>
        </trans-unit>
        <trans-unit id="43f37ce85ee2223f1cd749d722bfe6cde31f8d3f" translate="yes" xml:space="preserve">
          <source>Compute the roots of a Laguerre series.</source>
          <target state="translated">计算Laguerre数列的根。</target>
        </trans-unit>
        <trans-unit id="d296ea609a31255dd2dbb79a4294986988e4db61" translate="yes" xml:space="preserve">
          <source>Compute the roots of a Legendre series.</source>
          <target state="translated">计算Legendre数列的根。</target>
        </trans-unit>
        <trans-unit id="19abb563bbb5b6ab6c8e5baeecc0592cab5fb3b0" translate="yes" xml:space="preserve">
          <source>Compute the roots of a polynomial.</source>
          <target state="translated">计算多项式的根。</target>
        </trans-unit>
        <trans-unit id="5d39f1a875851670d9065e685e3c7e7e93824abb" translate="yes" xml:space="preserve">
          <source>Compute the sign and (natural) logarithm of the determinant of an array.</source>
          <target state="translated">计算一个数组的行列式的符号和(自然)对数。</target>
        </trans-unit>
        <trans-unit id="f10d7331dd9b2505d01acc79b5a5c28111413dab" translate="yes" xml:space="preserve">
          <source>Compute the standard deviation along the specified axis, while ignoring NaNs.</source>
          <target state="translated">计算沿指定轴线的标准偏差,同时忽略NaNs。</target>
        </trans-unit>
        <trans-unit id="66e310f2ac7182b1b997c8f29f43f4edc06f8e2a" translate="yes" xml:space="preserve">
          <source>Compute the standard deviation along the specified axis.</source>
          <target state="translated">计算沿指定轴的标准偏差。</target>
        </trans-unit>
        <trans-unit id="88f78cc6a5ad581dc5a8fb410e447c660bd9fa8f" translate="yes" xml:space="preserve">
          <source>Compute the truth value of NOT x element-wise.</source>
          <target state="translated">计算NOT x元素的真值。</target>
        </trans-unit>
        <trans-unit id="bea68d81fc2eb04da18ba084a78837621cebec88" translate="yes" xml:space="preserve">
          <source>Compute the truth value of x1 AND x2 element-wise.</source>
          <target state="translated">按元素计算x1和x2的真值。</target>
        </trans-unit>
        <trans-unit id="a79688781ca1781bce152cb44a9b15f66b72bfb1" translate="yes" xml:space="preserve">
          <source>Compute the truth value of x1 OR x2 element-wise.</source>
          <target state="translated">按元素计算x1 OR x2的真值。</target>
        </trans-unit>
        <trans-unit id="96e23b531f96b54840021483947c41a098b2ed1b" translate="yes" xml:space="preserve">
          <source>Compute the truth value of x1 XOR x2, element-wise.</source>
          <target state="translated">逐元素计算x1 XOR x2的真值。</target>
        </trans-unit>
        <trans-unit id="6a8a6092543ea859a93955c068e3715cc92a71ca" translate="yes" xml:space="preserve">
          <source>Compute the variance along the specified axis, while ignoring NaNs.</source>
          <target state="translated">计算沿指定轴的方差,同时忽略NaNs。</target>
        </trans-unit>
        <trans-unit id="ab67fb4895d59fdba2f3312d3f97f40d39b32dc1" translate="yes" xml:space="preserve">
          <source>Compute the variance along the specified axis.</source>
          <target state="translated">计算沿指定轴的方差。</target>
        </trans-unit>
        <trans-unit id="8ad00c6a1c7489e8566fc76ef273931215436611" translate="yes" xml:space="preserve">
          <source>Compute the weighted average along the specified axis.</source>
          <target state="translated">计算沿指定轴的加权平均值。</target>
        </trans-unit>
        <trans-unit id="79af5daa38dbf74799da93dffa5ef6f8fba6dccf" translate="yes" xml:space="preserve">
          <source>Compute two different sets of indices to access 4x4 arrays, one for the lower triangular part starting at the main diagonal, and one starting two diagonals further right:</source>
          <target state="translated">计算两组不同的指数来访问4x4数组,一组从主对角线开始的下三角部分,另一组从更右边的两个对角线开始。</target>
        </trans-unit>
        <trans-unit id="471eda8864ca36b1868976a6ed358ad1c7812441" translate="yes" xml:space="preserve">
          <source>Compute two different sets of indices to access 4x4 arrays, one for the upper triangular part starting at the main diagonal, and one starting two diagonals further right:</source>
          <target state="translated">计算两组不同的指数来访问4x4数组,一组是从主对角线开始的上三角部分,另一组是从更右边的两个对角线开始。</target>
        </trans-unit>
        <trans-unit id="197392cccae8af7bf76b914db915fad3a803ed5b" translate="yes" xml:space="preserve">
          <source>Compute z as follows:</source>
          <target state="translated">计算z的方法如下:</target>
        </trans-unit>
        <trans-unit id="e5847ac2ac3c001c3a2cac8771b53202e9193405" translate="yes" xml:space="preserve">
          <source>Computes a least-squares fit from the matrix.</source>
          <target state="translated">计算矩阵的最小二乘拟合。</target>
        </trans-unit>
        <trans-unit id="d8ae02c2a1f37ef602fe9635ca3deb7ae7eff320" translate="yes" xml:space="preserve">
          <source>Computes a least-squares fit.</source>
          <target state="translated">计算最小二乘法拟合。</target>
        </trans-unit>
        <trans-unit id="fca5c893d0dd0095c803730ae984c8a5d1f22fbb" translate="yes" xml:space="preserve">
          <source>Computes spline fits.</source>
          <target state="translated">计算花键配合。</target>
        </trans-unit>
        <trans-unit id="39bd0877aee14479f84fa968669682d5f4bb55d6" translate="yes" xml:space="preserve">
          <source>Computes the &amp;ldquo;exact&amp;rdquo; solution, &lt;code&gt;x&lt;/code&gt;, of the well-determined, i.e., full rank, linear matrix equation &lt;code&gt;ax = b&lt;/code&gt;.</source>
          <target state="translated">计算确定的（即满秩的）线性矩阵方程 &lt;code&gt;ax = b&lt;/code&gt; 的&amp;ldquo;精确&amp;rdquo;解 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="650917c230f0e3e59e23869cdea9804dfbb8e6f0" translate="yes" xml:space="preserve">
          <source>Computes the Kronecker product, a composite array made of blocks of the second array scaled by the first.</source>
          <target state="translated">计算Kronecker乘积,即由第二个数组的块经第一个数组缩放后组成的复合数组。</target>
        </trans-unit>
        <trans-unit id="10cbc0814b0dd9715e5abe01e8dbaaa33fe8ad59" translate="yes" xml:space="preserve">
          <source>Computes the bit-wise AND of the underlying binary representation of the integers in the input arrays. This ufunc implements the C/Python operator &lt;code&gt;&amp;amp;&lt;/code&gt;.</source>
          <target state="translated">计算输入数组中整数的基础二进制表示的按位与。此ufunc实现C / Python运算符 &lt;code&gt;&amp;amp;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="60c3fbdfba7bb7378090a32d8c51b3e9fca09817" translate="yes" xml:space="preserve">
          <source>Computes the bit-wise NOT of the underlying binary representation of the integers in the input arrays. This ufunc implements the C/Python operator &lt;code&gt;~&lt;/code&gt;.</source>
          <target state="translated">计算输入数组中整数的基础二进制表示的按位非。该ufunc实现C / Python运算符 &lt;code&gt;~&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="42722e323632d4f5d01bc926af28a1c22d5e0f95" translate="yes" xml:space="preserve">
          <source>Computes the bit-wise OR of the underlying binary representation of the integers in the input arrays. This ufunc implements the C/Python operator &lt;code&gt;|&lt;/code&gt;.</source>
          <target state="translated">计算输入数组中整数的基础二进制表示形式的按位或。这个ufunc实现了C / Python运算符 &lt;code&gt;|&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67adfae8fffe1baa14f71537d861b7b2e85f7e48" translate="yes" xml:space="preserve">
          <source>Computes the bit-wise XOR of the underlying binary representation of the integers in the input arrays. This ufunc implements the C/Python operator &lt;code&gt;^&lt;/code&gt;.</source>
          <target state="translated">计算输入数组中整数的基础二进制表示形式的按位XOR。该ufunc实现C / Python运算符 &lt;code&gt;^&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7810254747fb57737310252a83ed1ecfa7ac7de1" translate="yes" xml:space="preserve">
          <source>Computes the remainder complementary to the &lt;a href=&quot;numpy.floor_divide#numpy.floor_divide&quot;&gt;&lt;code&gt;floor_divide&lt;/code&gt;&lt;/a&gt; function. It is equivalent to the Python modulus operator``x1 % x2`` and has the same sign as the divisor &lt;code&gt;x2&lt;/code&gt;. The MATLAB function equivalent to &lt;code&gt;np.remainder&lt;/code&gt; is &lt;code&gt;mod&lt;/code&gt;.</source>
          <target state="translated">计算与&lt;a href=&quot;numpy.floor_divide#numpy.floor_divide&quot;&gt; &lt;code&gt;floor_divide&lt;/code&gt; &lt;/a&gt;函数互补的余数。它等效于Python模运算符``x1％x2''，并且与除数 &lt;code&gt;x2&lt;/code&gt; 相同。与 &lt;code&gt;np.remainder&lt;/code&gt; 等效的MATLAB函数为 &lt;code&gt;mod&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="531dbc47f0c42b16e91bc06f7934ffc0eee90d21" translate="yes" xml:space="preserve">
          <source>Computes the sample points and weights for Gauss-Chebyshev quadrature. These sample points and weights will correctly integrate polynomials of degree</source>
          <target state="translated">计算Gauss-Chebyshev正交的样点和权重。这些采样点和权重将正确地整合度数为0的多项式。</target>
        </trans-unit>
        <trans-unit id="d0825c93bd67fcabe34143f70ae3cf80cb8738d0" translate="yes" xml:space="preserve">
          <source>Computes the sample points and weights for Gauss-Hermite quadrature. These sample points and weights will correctly integrate polynomials of degree</source>
          <target state="translated">计算高斯-赫米特正交的样点和权重。这些采样点和权重将正确地整合度数的多项式。</target>
        </trans-unit>
        <trans-unit id="9e720112e13fbc925fc36348970ddc09e09d43c8" translate="yes" xml:space="preserve">
          <source>Computes the sample points and weights for Gauss-HermiteE quadrature. These sample points and weights will correctly integrate polynomials of degree</source>
          <target state="translated">计算Gauss-HermiteE正交的样本点和权重。这些采样点和权重将正确地整合度数为0的多项式。</target>
        </trans-unit>
        <trans-unit id="01551c6580e6c7cd7da039752c76647a860146e9" translate="yes" xml:space="preserve">
          <source>Computes the sample points and weights for Gauss-Laguerre quadrature. These sample points and weights will correctly integrate polynomials of degree</source>
          <target state="translated">计算Gauss-Laguerre正交的样本点和权重。这些采样点和权重将正确地整合度数为0的多项式。</target>
        </trans-unit>
        <trans-unit id="a1676ee2351ddea298864c94b5761c72628c1745" translate="yes" xml:space="preserve">
          <source>Computes the sample points and weights for Gauss-Legendre quadrature. These sample points and weights will correctly integrate polynomials of degree</source>
          <target state="translated">计算Gauss-Legendre正交的样本点和权重。这些采样点和权重将正确地整合度数为0的多项式。</target>
        </trans-unit>
        <trans-unit id="54ad29fb2a5fef5a2e2b0f26f16821ff1f58a836" translate="yes" xml:space="preserve">
          <source>Computing determinants for a stack of matrices:</source>
          <target state="translated">计算矩阵堆的行列式。</target>
        </trans-unit>
        <trans-unit id="5ffa5ce5ed5560b7502b21e2214468e10166aa18" translate="yes" xml:space="preserve">
          <source>Computing log-determinants for a stack of matrices:</source>
          <target state="translated">计算矩阵堆的对数决定因素。</target>
        </trans-unit>
        <trans-unit id="0fe14fa20a118f97b78bbb776b8e138eb54dc0e1" translate="yes" xml:space="preserve">
          <source>Computing the mean in float64 is more accurate:</source>
          <target state="translated">用float64计算平均值更准确。</target>
        </trans-unit>
        <trans-unit id="0a9983d1df747790eaf4d763cc8f1c4f963a34f1" translate="yes" xml:space="preserve">
          <source>Computing the standard deviation in float64 is more accurate:</source>
          <target state="translated">用float64计算标准差更准确。</target>
        </trans-unit>
        <trans-unit id="0d25e4fdfb9f10d7770a29a84aa8fcf9d6cb64d3" translate="yes" xml:space="preserve">
          <source>Computing the variance in float64 is more accurate:</source>
          <target state="translated">用float64计算方差更准确。</target>
        </trans-unit>
        <trans-unit id="750f4a65465f4b9d86986bbaa22fd86a632eb891" translate="yes" xml:space="preserve">
          <source>Concatenate a sequence of arrays along the given axis.</source>
          <target state="translated">沿着给定的轴连接一个数组序列。</target>
        </trans-unit>
        <trans-unit id="69f1f5039a9914b263cf71649e1821ac86e01220" translate="yes" xml:space="preserve">
          <source>Concatenate function that preserves input masks.</source>
          <target state="translated">保留输入掩码的连接函数。</target>
        </trans-unit>
        <trans-unit id="6f58d263f33944384921df8405fd4a36e06175e2" translate="yes" xml:space="preserve">
          <source>Concepts</source>
          <target state="translated">Concepts</target>
        </trans-unit>
        <trans-unit id="da18f43cbda77c14c1135f5d6d7534517acba1bc" translate="yes" xml:space="preserve">
          <source>Consequences of alignment</source>
          <target state="translated">调整的后果</target>
        </trans-unit>
        <trans-unit id="e539f73473510ee53613700e677295e3dfb96cf9" translate="yes" xml:space="preserve">
          <source>Consider a reasonable prototype for a dot product function:</source>
          <target state="translated">考虑点产品功能的合理原型。</target>
        </trans-unit>
        <trans-unit id="cdfd5c5d52fe64ca5fe219ac6749930b18bf023b" translate="yes" xml:space="preserve">
          <source>Consider an urn with black and white marbles in it, &lt;code&gt;ngood&lt;/code&gt; of them are black and &lt;code&gt;nbad&lt;/code&gt; are white. If you draw &lt;code&gt;nsample&lt;/code&gt; balls without replacement, then the hypergeometric distribution describes the distribution of black balls in the drawn sample.</source>
          <target state="translated">考虑一个装有黑色和白色大理石的 &lt;code&gt;ngood&lt;/code&gt; ，其中的ngood是黑色的， &lt;code&gt;nbad&lt;/code&gt; 是白色的。如果您绘制 &lt;code&gt;nsample&lt;/code&gt; 球而不进行替换，则超几何分布将描述绘制的样品中黑球的分布。</target>
        </trans-unit>
        <trans-unit id="0d56e4e8e5205e5f0b9d856e7027774cced155ea" translate="yes" xml:space="preserve">
          <source>Consider four points in different quadrants:</source>
          <target state="translated">考虑不同象限的四个点。</target>
        </trans-unit>
        <trans-unit id="ed0667d145092c432f907df7626ac668935a1be1" translate="yes" xml:space="preserve">
          <source>Consider two variables,</source>
          <target state="translated">考虑两个变量。</target>
        </trans-unit>
        <trans-unit id="0f386d7e7881b32fa39cb7b62bdb15c0f3a4c0e1" translate="yes" xml:space="preserve">
          <source>Constants</source>
          <target state="translated">Constants</target>
        </trans-unit>
        <trans-unit id="40c1f81a4e69db7cd9d45c11cd781d9ad71dd11a" translate="yes" xml:space="preserve">
          <source>Constants of the &lt;code&gt;numpy.ma&lt;/code&gt; module</source>
          <target state="translated">&lt;code&gt;numpy.ma&lt;/code&gt; 模块的常量</target>
        </trans-unit>
        <trans-unit id="416f6fe7840ff98cc53cadbb77344b8df8be8efe" translate="yes" xml:space="preserve">
          <source>Constants of the numpy.ma module</source>
          <target state="translated">numpy.ma模块的常量。</target>
        </trans-unit>
        <trans-unit id="ff100071278ebc0dce3b27374571a0b6214de453" translate="yes" xml:space="preserve">
          <source>Construct Python bytes containing the raw data bytes in the array.</source>
          <target state="translated">构造包含数组中原始数据字节的Python字节。</target>
        </trans-unit>
        <trans-unit id="2a92c9e90e58234afd363951b811ae566d58dd4a" translate="yes" xml:space="preserve">
          <source>Construct a 2-D histogram with variable bin width. First define the bin edges:</source>
          <target state="translated">构建一个具有可变bin宽度的二维直方图。首先定义bin边缘。</target>
        </trans-unit>
        <trans-unit id="b11f0a82e16bcae98f2244ba4878813b908a4c4a" translate="yes" xml:space="preserve">
          <source>Construct a configuration instance for the given package name. If &lt;em&gt;parent_name&lt;/em&gt; is not None, then construct the package as a sub-package of the &lt;em&gt;parent_name&lt;/em&gt; package. If &lt;em&gt;top_path&lt;/em&gt; and &lt;em&gt;package_path&lt;/em&gt; are None then they are assumed equal to the path of the file this instance was created in. The setup.py files in the numpy distribution are good examples of how to use the &lt;a href=&quot;#numpy.distutils.misc_util.Configuration&quot;&gt;&lt;code&gt;Configuration&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">为给定的包名称构造一个配置实例。如果&lt;em&gt;parent_name&lt;/em&gt;不为None，则将程序包构造为&lt;em&gt;parent_name&lt;/em&gt;程序包的&lt;em&gt;子程序&lt;/em&gt;包。如果&lt;em&gt;top_path&lt;/em&gt;和&lt;em&gt;package_path&lt;/em&gt;为None，则假定它们等于在其中创建该实例的文件的路径&lt;em&gt;。numpy&lt;/em&gt;分发中的setup.py文件是如何使用&lt;a href=&quot;#numpy.distutils.misc_util.Configuration&quot;&gt; &lt;code&gt;Configuration&lt;/code&gt; &lt;/a&gt;实例的良好示例。</target>
        </trans-unit>
        <trans-unit id="433d0814f344913efe3de8118404c8ba5f5d7e7f" translate="yes" xml:space="preserve">
          <source>Construct a dtype description list from a given dtype.</source>
          <target state="translated">从给定的dtype构建一个dtype描述列表。</target>
        </trans-unit>
        <trans-unit id="699e78314482350bc4ad52e8b449dfd4bedbe2f6" translate="yes" xml:space="preserve">
          <source>Construct a multi-dimensional &amp;ldquo;meshgrid&amp;rdquo; using indexing notation.</source>
          <target state="translated">使用索引符号构造一个多维&amp;ldquo;网格&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="5f1a333c2b137d94f4c46546de94da2e32f2f8d9" translate="yes" xml:space="preserve">
          <source>Construct a new 1-dimensional array of data-type determined by &lt;code&gt;descr&lt;/code&gt;, that ranges from &lt;code&gt;start&lt;/code&gt; to &lt;code&gt;stop&lt;/code&gt; (exclusive) in increments of &lt;code&gt;step&lt;/code&gt;. Equivalent to arange( &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt;, &lt;code&gt;step&lt;/code&gt;, &lt;code&gt;typenum&lt;/code&gt; ).</source>
          <target state="translated">构造一个新的由 &lt;code&gt;descr&lt;/code&gt; 确定的数据类型的一维数组，其范围是从 &lt;code&gt;start&lt;/code&gt; 到 &lt;code&gt;stop&lt;/code&gt; （不包括），以 &lt;code&gt;step&lt;/code&gt; 为增量。等效于arange（ &lt;code&gt;start&lt;/code&gt; ， &lt;code&gt;stop&lt;/code&gt; ， &lt;code&gt;step&lt;/code&gt; ， &lt;code&gt;typenum&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="fec9966593ee1edd10cbcd21d0622b1f630d401d" translate="yes" xml:space="preserve">
          <source>Construct a new 1-dimensional array of data-type, &lt;em&gt;typenum&lt;/em&gt;, that ranges from &lt;em&gt;start&lt;/em&gt; to &lt;em&gt;stop&lt;/em&gt; (exclusive) in increments of &lt;em&gt;step&lt;/em&gt; . Equivalent to &lt;strong&gt;arange&lt;/strong&gt; (&lt;em&gt;start&lt;/em&gt;, &lt;em&gt;stop&lt;/em&gt;, &lt;em&gt;step&lt;/em&gt;, dtype).</source>
          <target state="translated">构造一个新的一维数据类型为&lt;em&gt;typenum的数组&lt;/em&gt;，其范围是从&lt;em&gt;start&lt;/em&gt;到&lt;em&gt;stop&lt;/em&gt;（不包括），以&lt;em&gt;step&lt;/em&gt;为增量。等效于&lt;strong&gt;arange&lt;/strong&gt;（&lt;em&gt;start&lt;/em&gt;，&lt;em&gt;stop&lt;/em&gt;，&lt;em&gt;step&lt;/em&gt;，dtype）。</target>
        </trans-unit>
        <trans-unit id="8a706c57cd0f57f685f10a9b48082253d3c7f348" translate="yes" xml:space="preserve">
          <source>Construct a new &lt;em&gt;nd&lt;/em&gt; -dimensional array with shape given by &lt;em&gt;dims&lt;/em&gt; and data type given by &lt;em&gt;dtype&lt;/em&gt;. If &lt;em&gt;fortran&lt;/em&gt; is non-zero, then a Fortran-order array is created, otherwise a C-order array is created. Fill the memory with zeros (or the 0 object if &lt;em&gt;dtype&lt;/em&gt; corresponds to &lt;a href=&quot;c-api.dtype#c.NPY_OBJECT&quot;&gt;&lt;code&gt;NPY_OBJECT&lt;/code&gt;&lt;/a&gt; ).</source>
          <target state="translated">构造一个新的&lt;em&gt;nd&lt;/em&gt;维数组，其形状由&lt;em&gt;dims&lt;/em&gt;给出，数据类型由&lt;em&gt;dtype&lt;/em&gt;给出。如果&lt;em&gt;fortran&lt;/em&gt;不为零，则创建一个Fortran顺序数组，否则创建一个C顺序数组。用零填充存储器（或0对象，如果&lt;em&gt;D型&lt;/em&gt;对应于&lt;a href=&quot;c-api.dtype#c.NPY_OBJECT&quot;&gt; &lt;code&gt;NPY_OBJECT&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="8e79348d2a80859159fd1349201ec8444a12864b" translate="yes" xml:space="preserve">
          <source>Construct a new &lt;em&gt;nd&lt;/em&gt; -dimensional array with shape given by &lt;em&gt;dims&lt;/em&gt; and data type given by &lt;em&gt;dtype&lt;/em&gt;. If &lt;em&gt;fortran&lt;/em&gt; is non-zero, then a Fortran-order array is created, otherwise a C-order array is created. The array is uninitialized unless the data type corresponds to &lt;a href=&quot;c-api.dtype#c.NPY_OBJECT&quot;&gt;&lt;code&gt;NPY_OBJECT&lt;/code&gt;&lt;/a&gt; in which case the array is filled with &lt;a href=&quot;https://docs.python.org/dev/c-api/none.html#c.Py_None&quot;&gt;&lt;code&gt;Py_None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">构造一个新的&lt;em&gt;nd&lt;/em&gt;维数组，其形状由&lt;em&gt;dims&lt;/em&gt;给出，数据类型由&lt;em&gt;dtype&lt;/em&gt;给出。如果&lt;em&gt;fortran&lt;/em&gt;不为零，则创建一个Fortran顺序数组，否则创建一个C顺序数组。除非数据类型对应于&lt;a href=&quot;c-api.dtype#c.NPY_OBJECT&quot;&gt; &lt;code&gt;NPY_OBJECT&lt;/code&gt; &lt;/a&gt;，否则数组未初始化。在这种情况下，数组将被&lt;a href=&quot;https://docs.python.org/dev/c-api/none.html#c.Py_None&quot;&gt; &lt;code&gt;Py_None&lt;/code&gt; &lt;/a&gt;填充。</target>
        </trans-unit>
        <trans-unit id="dd48627fbdfc02f6cd5a744335a7b8a3ec7e74ff" translate="yes" xml:space="preserve">
          <source>Construct a new Generator with the default BitGenerator (PCG64).</source>
          <target state="translated">用默认的 BitGenerator (PCG64)构建一个新的生成器。</target>
        </trans-unit>
        <trans-unit id="2293ee6e243af707ad818c946eb5f54c18c43217" translate="yes" xml:space="preserve">
          <source>Construct a one-dimensional ndarray of a single type from a binary or (ASCII) text &lt;code&gt;string&lt;/code&gt; of length &lt;code&gt;slen&lt;/code&gt;. The data-type of the array to-be-created is given by &lt;code&gt;dtype&lt;/code&gt;. If num is -1, then &lt;strong&gt;copy&lt;/strong&gt; the entire string and return an appropriately sized array, otherwise, &lt;code&gt;num&lt;/code&gt; is the number of items to &lt;strong&gt;copy&lt;/strong&gt; from the string. If &lt;code&gt;sep&lt;/code&gt; is NULL (or &amp;ldquo;&amp;rdquo;), then interpret the string as bytes of binary data, otherwise convert the sub-strings separated by &lt;code&gt;sep&lt;/code&gt; to items of data-type &lt;code&gt;dtype&lt;/code&gt;. Some data-types may not be readable in text mode and an error will be raised if that occurs. All errors return NULL.</source>
          <target state="translated">从长度为 &lt;code&gt;slen&lt;/code&gt; 的二进制或（ASCII）文本 &lt;code&gt;string&lt;/code&gt; 构造单一类型的一维ndarray。待创建数组的数据类型由 &lt;code&gt;dtype&lt;/code&gt; 给出。如果num为-1，则&lt;strong&gt;复制&lt;/strong&gt;整个字符串并返回适当大小的数组，否则 &lt;code&gt;num&lt;/code&gt; 是要从字符串&lt;strong&gt;复制&lt;/strong&gt;的项目数。如果 &lt;code&gt;sep&lt;/code&gt; 为NULL（或&amp;ldquo;&amp;rdquo;），则将该字符串解释为二进制数据的字节，否则将由 &lt;code&gt;sep&lt;/code&gt; 分隔的子字符串转换为data-type &lt;code&gt;dtype&lt;/code&gt; 的项。某些数据类型在文本模式下可能不可读，如果发生这种情况，将引发错误。所有错误均返回NULL。</target>
        </trans-unit>
        <trans-unit id="5251a91820bd97dd4c2975d82383f312ad4f99bf" translate="yes" xml:space="preserve">
          <source>Construct a one-dimensional ndarray of a single type from a binary or text file. The open file pointer is &lt;code&gt;fp&lt;/code&gt;, the data-type of the array to be created is given by &lt;code&gt;dtype&lt;/code&gt;. This must match the data in the file. If &lt;code&gt;num&lt;/code&gt; is -1, then read until the end of the file and return an appropriately sized array, otherwise, &lt;code&gt;num&lt;/code&gt; is the number of items to read. If &lt;code&gt;sep&lt;/code&gt; is NULL (or &amp;ldquo;&amp;rdquo;), then read from the file in binary mode, otherwise read from the file in text mode with &lt;code&gt;sep&lt;/code&gt; providing the item separator. Some array types cannot be read in text mode in which case an error is raised.</source>
          <target state="translated">从二进制或文本文件构造单一类型的一维ndarray。打开文件指针为 &lt;code&gt;fp&lt;/code&gt; ，要创建的数组的数据类型由 &lt;code&gt;dtype&lt;/code&gt; 给出。这必须与文件中的数据匹配。如果 &lt;code&gt;num&lt;/code&gt; 是-1，则读取直到文件末尾并返回适当大小的数组，否则 &lt;code&gt;num&lt;/code&gt; 是要读取的项目数。如果 &lt;code&gt;sep&lt;/code&gt; 为NULL（或&amp;ldquo;&amp;rdquo;），则以二进制模式从文件中读取，否则以 &lt;code&gt;sep&lt;/code&gt; 模式提供项目分隔符，以文本模式从文件中读取。在文本模式下无法读取某些数组类型，在这种情况下会引发错误。</target>
        </trans-unit>
        <trans-unit id="5dade1b4bc430d7a08d1e500dc891669be329c17" translate="yes" xml:space="preserve">
          <source>Construct a one-dimensional ndarray of a single type from an object, &lt;code&gt;buf&lt;/code&gt;, that exports the (single-segment) buffer protocol (or has an attribute __buffer__ that returns an object that exports the buffer protocol). A writeable buffer will be tried first followed by a read- only buffer. The &lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt;&lt;/a&gt; flag of the returned array will reflect which one was successful. The data is assumed to start at &lt;code&gt;offset&lt;/code&gt; bytes from the start of the memory location for the object. The type of the data in the buffer will be interpreted depending on the data- type descriptor, &lt;code&gt;dtype.&lt;/code&gt; If &lt;code&gt;count&lt;/code&gt; is negative then it will be determined from the size of the buffer and the requested itemsize, otherwise, &lt;code&gt;count&lt;/code&gt; represents how many elements should be converted from the buffer.</source>
          <target state="translated">从对象 &lt;code&gt;buf&lt;/code&gt; 构造一个单一类型的一维ndarray，该对象输出（单段）缓冲协议（或具有__buffer__属性，该属性返回导出缓冲协议的对象）。首先将尝试可写缓冲区，然后是只读缓冲区。返回数组的&lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt; &lt;/a&gt;标志将反映哪一个成功。假定数据从对象的存储位置开始的 &lt;code&gt;offset&lt;/code&gt; 字节开始。缓冲区中数据的类型将根据数据类型描述符 &lt;code&gt;dtype.&lt;/code&gt; 进行解释。如果 &lt;code&gt;count&lt;/code&gt; 为负，则将根据缓冲区的大小和请求的项目大小确定，否则， &lt;code&gt;count&lt;/code&gt; 表示应从缓冲区转换多少个元素。</target>
        </trans-unit>
        <trans-unit id="e92de9d29a116aa0b6d137e92f4fcc4342111c10" translate="yes" xml:space="preserve">
          <source>Construct a polynomial from its roots:</source>
          <target state="translated">从其根部构造一个多项式。</target>
        </trans-unit>
        <trans-unit id="54108fca709f2e6aae97ceda0d8c265646c4b46b" translate="yes" xml:space="preserve">
          <source>Construct a record array from a wide-variety of objects.</source>
          <target state="translated">从各种各样的对象中构建一个记录阵列。</target>
        </trans-unit>
        <trans-unit id="dddc1fb766bf2c0701978de30cc0096077f1469c" translate="yes" xml:space="preserve">
          <source>Construct a record array from data.</source>
          <target state="translated">从数据中构建一个记录数组。</target>
        </trans-unit>
        <trans-unit id="d4864a011f7d33f5af39ef59a61e350cf80e6b72" translate="yes" xml:space="preserve">
          <source>Construct an array by executing a function on grid positions.</source>
          <target state="translated">通过在网格位置上执行一个函数来构造一个数组。</target>
        </trans-unit>
        <trans-unit id="eb2f5ef9eabc5b7b4a11f36c9da5468304049228" translate="yes" xml:space="preserve">
          <source>Construct an array by executing a function over each coordinate.</source>
          <target state="translated">通过在每个坐标上执行一个函数来构建一个数组。</target>
        </trans-unit>
        <trans-unit id="b8c37852e1d20c54f490e5d55d35d32a2e77d1a3" translate="yes" xml:space="preserve">
          <source>Construct an array by repeating A the number of times given by reps.</source>
          <target state="translated">通过重复A给定的次数来构造一个数组。</target>
        </trans-unit>
        <trans-unit id="dbd2833638747627f536392fa321860afd1ae4eb" translate="yes" xml:space="preserve">
          <source>Construct an array from a text file, using regular expression parsing.</source>
          <target state="translated">使用正则表达式解析,从文本文件中构建一个数组。</target>
        </trans-unit>
        <trans-unit id="001455fa868d0d982a84f3e1e1c5e71cab1576c5" translate="yes" xml:space="preserve">
          <source>Construct an array from an index array and a set of arrays to choose from.</source>
          <target state="translated">从一个索引数组和一组数组中选择构建一个数组。</target>
        </trans-unit>
        <trans-unit id="bc43ce79bb40c8126c3a27887892f4214024c494" translate="yes" xml:space="preserve">
          <source>Construct an array from data in a text or binary file.</source>
          <target state="translated">从文本或二进制文件中的数据构建一个数组。</target>
        </trans-unit>
        <trans-unit id="899756aeb93d1b6aa9bd7c93436b76c0a22fadb6" translate="yes" xml:space="preserve">
          <source>Construct an array.</source>
          <target state="translated">构建一个数组。</target>
        </trans-unit>
        <trans-unit id="46ee020e3e38edbb070e9ee58f67dfe44037398b" translate="yes" xml:space="preserve">
          <source>Construct an ndarray that allows field access using attributes.</source>
          <target state="translated">构造一个ndarray,允许使用属性访问字段。</target>
        </trans-unit>
        <trans-unit id="fb44631c7aa67652764b1577b600ec14bbff21bf" translate="yes" xml:space="preserve">
          <source>Construct an ndarray:</source>
          <target state="translated">构建一个ndarray。</target>
        </trans-unit>
        <trans-unit id="1836b53e3c198fe2973be15630e978884dacc6c1" translate="yes" xml:space="preserve">
          <source>Construct an open mesh from multiple sequences.</source>
          <target state="translated">从多个序列构建一个开放的网格。</target>
        </trans-unit>
        <trans-unit id="d3f16aad1976f8f22c5c798dc38d30d79a5e094c" translate="yes" xml:space="preserve">
          <source>Construct an open multi-dimensional &amp;ldquo;meshgrid&amp;rdquo; using indexing notation.</source>
          <target state="translated">使用索引符号构造一个开放的多维&amp;ldquo;网格&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="55ed2507cc0269a472eaaccd89421410ab758bab" translate="yes" xml:space="preserve">
          <source>Construct index arrays.</source>
          <target state="translated">构造索引数组。</target>
        </trans-unit>
        <trans-unit id="5a0c11bbbca8e4a4ea9ed0b83b66214ccecaa653" translate="yes" xml:space="preserve">
          <source>Construct the polynomial</source>
          <target state="translated">构造多项式</target>
        </trans-unit>
        <trans-unit id="192cbc084f005ca610c67957b0697275db236d0b" translate="yes" xml:space="preserve">
          <source>Constructing arrays</source>
          <target state="translated">构建数组</target>
        </trans-unit>
        <trans-unit id="892df0306b57e168d52112a1ac784f3daa7382c7" translate="yes" xml:space="preserve">
          <source>Constructing masked arrays</source>
          <target state="translated">构建掩码数组</target>
        </trans-unit>
        <trans-unit id="3b2acad01b35b6a4b590dd72299d537e83394aa4" translate="yes" xml:space="preserve">
          <source>Constructing polynomials by specifying coefficients is just one way of obtaining a polynomial instance, they may also be created by specifying their roots, by conversion from other polynomial types, and by least squares fits. Fitting is discussed in its own section, the other methods are demonstrated below:</source>
          <target state="translated">通过指定系数构造多项式只是获得多项式实例的一种方法,它们也可以通过指定其根、从其他多项式类型转换以及最小二乘拟合来创建。拟合将在单独的章节中讨论,其他方法将在下面演示。</target>
        </trans-unit>
        <trans-unit id="5e3bd2707e230a54a78bfb480ed5e48501ad49b7" translate="yes" xml:space="preserve">
          <source>Construction and Destruction</source>
          <target state="translated">建造和销毁</target>
        </trans-unit>
        <trans-unit id="94e201ee9bbe86594c4ceb5d0adfb75c739dc4ae" translate="yes" xml:space="preserve">
          <source>Construction:</source>
          <target state="translated">Construction:</target>
        </trans-unit>
        <trans-unit id="38e2be5fd7d5e892898904110f6fb600a6f2fc5e" translate="yes" xml:space="preserve">
          <source>Constructs Python bytes showing a copy of the raw contents of data memory. The bytes object can be produced in either &amp;lsquo;C&amp;rsquo; or &amp;lsquo;Fortran&amp;rsquo;, or &amp;lsquo;Any&amp;rsquo; order (the default is &amp;lsquo;C&amp;rsquo;-order). &amp;lsquo;Any&amp;rsquo; order means C-order unless the F_CONTIGUOUS flag in the array is set, in which case it means &amp;lsquo;Fortran&amp;rsquo; order.</source>
          <target state="translated">构造Python字节，显示数据存储器原始内容的副本。bytes对象可以按&amp;ldquo; C&amp;rdquo;或&amp;ldquo; Fortran&amp;rdquo;或&amp;ldquo;任何&amp;rdquo;顺序生成（默认为&amp;ldquo; C&amp;rdquo;顺序）。除非设置数组中的F_CONTIGUOUS标志，否则&amp;ldquo;任何&amp;rdquo;顺序都表示C顺序，在这种情况下，它表示&amp;ldquo; Fortran&amp;rdquo;顺序。</target>
        </trans-unit>
        <trans-unit id="ced0c9c71d4ab448d256e9755d975eecac83dca4" translate="yes" xml:space="preserve">
          <source>Container customization: (see &lt;a href=&quot;arrays.indexing#arrays-indexing&quot;&gt;Indexing&lt;/a&gt;)</source>
          <target state="translated">容器定制：（请参阅&lt;a href=&quot;arrays.indexing#arrays-indexing&quot;&gt;索引&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="945b5909351c614284e294687fc5eed8d30bdfa8" translate="yes" xml:space="preserve">
          <source>Container for the BitGenerators.</source>
          <target state="translated">BitGenerators的容器。</target>
        </trans-unit>
        <trans-unit id="9518c0118e2383159ff89f0d3a6a9dc8b35e9445" translate="yes" xml:space="preserve">
          <source>Container for the Mersenne Twister pseudo-random number generator.</source>
          <target state="translated">Mersenne Twister伪随机数发生器的容器。</target>
        </trans-unit>
        <trans-unit id="d5e682207eece98b359f1e232839589a5bb83513" translate="yes" xml:space="preserve">
          <source>Container for the Philox (4x64) pseudo-random number generator.</source>
          <target state="translated">Philox (4x64)伪随机数发生器的容器。</target>
        </trans-unit>
        <trans-unit id="a3a1e2e5587dcb37af6a475783aa40a7e9e982e2" translate="yes" xml:space="preserve">
          <source>Container for the slow Mersenne Twister pseudo-random number generator. Consider using a different BitGenerator with the Generator container instead.</source>
          <target state="translated">缓慢的 Mersenne Twister 伪随机数生成器的容器。考虑使用不同的BitGenerator来代替Generator容器。</target>
        </trans-unit>
        <trans-unit id="d6d56c0715bcae84fdc288fbfdbc42c1f40a6702" translate="yes" xml:space="preserve">
          <source>Contains the new set of coefficients.</source>
          <target state="translated">包含新的系数集。</target>
        </trans-unit>
        <trans-unit id="28ea8c81849521c495649532e08b0b593de2159c" translate="yes" xml:space="preserve">
          <source>Context manager and decorator doing much the same as &lt;code&gt;warnings.catch_warnings&lt;/code&gt;.</source>
          <target state="translated">上下文管理器和装饰器的作用与 &lt;code&gt;warnings.catch_warnings&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="5df86c4c3ee2b6d151a9b289e9fec5a79fd29c69" translate="yes" xml:space="preserve">
          <source>Context manager for floating-point error handling.</source>
          <target state="translated">用于浮点错误处理的上下文管理器。</target>
        </trans-unit>
        <trans-unit id="bd35c159334bf5d6e2fa5b1e59c4a7083dc1dc6f" translate="yes" xml:space="preserve">
          <source>Context manager for setting print options.</source>
          <target state="translated">用于设置打印选项的上下文管理器。</target>
        </trans-unit>
        <trans-unit id="e74eade6a152d46f1eb9b2b5ababc0f77f6bb16e" translate="yes" xml:space="preserve">
          <source>Contiguous array of same shape and content as &lt;code&gt;a&lt;/code&gt;, with type &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; if specified.</source>
          <target state="translated">相同的形状和含量的连续数组 &lt;code&gt;a&lt;/code&gt; ，与类型&lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;如果指定。</target>
        </trans-unit>
        <trans-unit id="053873361447a3f60bca70c8480df2214f748216" translate="yes" xml:space="preserve">
          <source>Contrary to &lt;a href=&quot;numpy.asanyarray#numpy.asanyarray&quot;&gt;&lt;code&gt;asanyarray&lt;/code&gt;&lt;/a&gt;, ndarray subclasses are not passed through:</source>
          <target state="translated">与&lt;a href=&quot;numpy.asanyarray#numpy.asanyarray&quot;&gt; &lt;code&gt;asanyarray&lt;/code&gt; &lt;/a&gt;相反，ndarray子类未通过：</target>
        </trans-unit>
        <trans-unit id="1fb6ba6e1303f6e5416d2c67796f8de91feba760" translate="yes" xml:space="preserve">
          <source>Controlling Iteration Order</source>
          <target state="translated">控制迭代顺序</target>
        </trans-unit>
        <trans-unit id="3381fbfd7109d41fe7b80cebebf3f59427289be0" translate="yes" xml:space="preserve">
          <source>Controls if intermediate optimization should occur. No optimization will occur if False and True will default to the &amp;lsquo;greedy&amp;rsquo; algorithm. Also accepts an explicit contraction list from the &lt;code&gt;np.einsum_path&lt;/code&gt; function. See &lt;code&gt;np.einsum_path&lt;/code&gt; for more details. Defaults to False.</source>
          <target state="translated">控制是否应进行中间优化。如果False和True将默认设置为&amp;ldquo;贪婪&amp;rdquo;算法，则不会进行优化。还接受 &lt;code&gt;np.einsum_path&lt;/code&gt; 函数的显式收缩列表。有关更多详细信息，请参见 &lt;code&gt;np.einsum_path&lt;/code&gt; 。默认为False。</target>
        </trans-unit>
        <trans-unit id="962dce34fa4c991d8761b74453473e2047eb1a3f" translate="yes" xml:space="preserve">
          <source>Controls post-processing trimming of trailing digits, as follows:</source>
          <target state="translated">控制后处理对尾数的修剪,具体如下:</target>
        </trans-unit>
        <trans-unit id="d93cc903a5f85a76e394a8f4bb04305a43ea383d" translate="yes" xml:space="preserve">
          <source>Controls printing of the sign of floating-point types. If &amp;lsquo;+&amp;rsquo;, always print the sign of positive values. If &amp;lsquo; &amp;lsquo;, always prints a space (whitespace character) in the sign position of positive values. If &amp;lsquo;-&amp;lsquo;, omit the sign character of positive values. (default &amp;lsquo;-&amp;lsquo;)</source>
          <target state="translated">控制浮点类型符号的打印。如果为&amp;ldquo; +&amp;rdquo;，则始终打印正值的符号。如果为''，则始终在正值的符号位置打印空格（空白字符）。如果为&amp;ldquo;-&amp;rdquo;，则省略正值的符号字符。（默认为&amp;ldquo;-&amp;rdquo;）</target>
        </trans-unit>
        <trans-unit id="7e4e4469d00d85c02bbeabd4c04ac5324f9efb77" translate="yes" xml:space="preserve">
          <source>Controls printing of the sign of floating-point types. If &amp;lsquo;+&amp;rsquo;, always print the sign of positive values. If &amp;lsquo; &amp;lsquo;, always prints a space (whitespace character) in the sign position of positive values. If &amp;lsquo;-&amp;lsquo;, omit the sign character of positive values. Defaults to &lt;code&gt;numpy.get_printoptions()['sign']&lt;/code&gt;.</source>
          <target state="translated">控制浮点类型符号的打印。如果为&amp;ldquo; +&amp;rdquo;，则始终打印正值的符号。如果为''，则始终在正值的符号位置打印空格（空白字符）。如果为&amp;ldquo;-&amp;rdquo;，则省略正值的符号字符。默认为 &lt;code&gt;numpy.get_printoptions()['sign']&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="841208ff2e453a067133b334501582310ba65939" translate="yes" xml:space="preserve">
          <source>Controls the interpretation of the &lt;code&gt;precision&lt;/code&gt; option for floating-point types. Can take the following values (default maxprec_equal):</source>
          <target state="translated">控制浮点类型的 &lt;code&gt;precision&lt;/code&gt; 选项的解释。可以采用以下值（默认为maxprec_equal）：</target>
        </trans-unit>
        <trans-unit id="bd5b6d8587399226c1239e4675c6dc1ac5b81996" translate="yes" xml:space="preserve">
          <source>Controls the interpretation of the &lt;code&gt;precision&lt;/code&gt; option for floating-point types. Defaults to &lt;code&gt;numpy.get_printoptions()['floatmode']&lt;/code&gt;. Can take the following values:</source>
          <target state="translated">控制浮点类型的 &lt;code&gt;precision&lt;/code&gt; 选项的解释。默认为 &lt;code&gt;numpy.get_printoptions()['floatmode']&lt;/code&gt; 。可以采用以下值：</target>
        </trans-unit>
        <trans-unit id="053fc22cde7115d581a6dae5bcdbdffe93e520ff" translate="yes" xml:space="preserve">
          <source>Controls the iteration order. &amp;lsquo;C&amp;rsquo; means C order, &amp;lsquo;F&amp;rsquo; means Fortran order, &amp;lsquo;A&amp;rsquo; means &amp;lsquo;F&amp;rsquo; order if all the arrays are Fortran contiguous, &amp;lsquo;C&amp;rsquo; order otherwise, and &amp;lsquo;K&amp;rsquo; means as close to the order the array elements appear in memory as possible. This also affects the element memory order of &lt;code&gt;allocate&lt;/code&gt; operands, as they are allocated to be compatible with iteration order. Default is &amp;lsquo;K&amp;rsquo;.</source>
          <target state="translated">控制迭代顺序。'C'表示C顺序，'F'表示Fortran顺序，'A'表示'F'顺序（如果所有数组都是连续的），否则'C'顺序，'K'表示与数组元素出现的顺序接近在内存中。这也影响 &lt;code&gt;allocate&lt;/code&gt; 操作数的元素存储顺序，因为它们被分配为与迭代顺序兼容。默认值为&amp;ldquo; K&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="e9576b535389b3dbd06f435cca5164180f9065da" translate="yes" xml:space="preserve">
          <source>Controls the memory layout of the copy. &amp;lsquo;C&amp;rsquo; means C-order, &amp;lsquo;F&amp;rsquo; means F-order, &amp;lsquo;A&amp;rsquo; means &amp;lsquo;F&amp;rsquo; if &lt;code&gt;a&lt;/code&gt; is Fortran contiguous, &amp;lsquo;C&amp;rsquo; otherwise. &amp;lsquo;K&amp;rsquo; means match the layout of &lt;code&gt;a&lt;/code&gt; as closely as possible. (Note that this function and &lt;a href=&quot;numpy.copy#numpy.copy&quot;&gt;&lt;code&gt;numpy.copy&lt;/code&gt;&lt;/a&gt; are very similar, but have different default values for their order= arguments.)</source>
          <target state="translated">控制副本的内存布局。&amp;ldquo; C&amp;rdquo;表示C阶，&amp;ldquo; F&amp;rdquo;表示F阶，&amp;ldquo; a&amp;rdquo;表示&amp;ldquo; F&amp;rdquo;（如果 &lt;code&gt;a&lt;/code&gt; 是Fortran连续的），否则为&amp;ldquo; C&amp;rdquo;。&amp;ldquo;K&amp;rdquo;的装置的布局匹配 &lt;code&gt;a&lt;/code&gt; 尽可能接近。（请注意，此函数和&lt;a href=&quot;numpy.copy#numpy.copy&quot;&gt; &lt;code&gt;numpy.copy&lt;/code&gt; &lt;/a&gt;非常相似，但是它们的order =参数具有不同的默认值。）</target>
        </trans-unit>
        <trans-unit id="0444f926d86651cc3dd5611e09e50dadc271143c" translate="yes" xml:space="preserve">
          <source>Controls the memory layout of the copy. &amp;lsquo;C&amp;rsquo; means C-order, &amp;lsquo;F&amp;rsquo; means F-order, &amp;lsquo;A&amp;rsquo; means &amp;lsquo;F&amp;rsquo; if &lt;code&gt;a&lt;/code&gt; is Fortran contiguous, &amp;lsquo;C&amp;rsquo; otherwise. &amp;lsquo;K&amp;rsquo; means match the layout of &lt;code&gt;a&lt;/code&gt; as closely as possible. (Note that this function and &lt;a href=&quot;numpy.ndarray.copy#numpy.ndarray.copy&quot;&gt;&lt;code&gt;ndarray.copy&lt;/code&gt;&lt;/a&gt; are very similar, but have different default values for their order= arguments.)</source>
          <target state="translated">控制副本的内存布局。&amp;ldquo; C&amp;rdquo;表示C阶，&amp;ldquo; F&amp;rdquo;表示F阶，&amp;ldquo; a&amp;rdquo;表示&amp;ldquo; F&amp;rdquo;（如果 &lt;code&gt;a&lt;/code&gt; 是Fortran连续的），否则为&amp;ldquo; C&amp;rdquo;。&amp;ldquo;K&amp;rdquo;的装置的布局匹配 &lt;code&gt;a&lt;/code&gt; 尽可能接近。（请注意，此函数和&lt;a href=&quot;numpy.ndarray.copy#numpy.ndarray.copy&quot;&gt; &lt;code&gt;ndarray.copy&lt;/code&gt; &lt;/a&gt;非常相似，但是它们的order =参数具有不同的默认值。）</target>
        </trans-unit>
        <trans-unit id="87b34e8b0f8ba396e7a4855d6f683c663aa9e3a5" translate="yes" xml:space="preserve">
          <source>Controls the memory layout of the output. &amp;lsquo;C&amp;rsquo; means it should be C contiguous. &amp;lsquo;F&amp;rsquo; means it should be Fortran contiguous, &amp;lsquo;A&amp;rsquo; means it should be &amp;lsquo;F&amp;rsquo; if the inputs are all &amp;lsquo;F&amp;rsquo;, &amp;lsquo;C&amp;rsquo; otherwise. &amp;lsquo;K&amp;rsquo; means it should be as close to the layout as the inputs as is possible, including arbitrarily permuted axes. Default is &amp;lsquo;K&amp;rsquo;.</source>
          <target state="translated">控制输出的内存布局。&amp;ldquo; C&amp;rdquo;表示它应该是连续的。'F'表示它应该是Fortran连续的，'A'表示如果输入都是'F'的话它应该是'F'，否则是'C'。&amp;ldquo; K&amp;rdquo;表示它应尽可能靠近输入，包括任意排列的轴。默认值为&amp;ldquo; K&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="914761ad3f3f74151dc575c678b27db7c8a59e79" translate="yes" xml:space="preserve">
          <source>Controls the memory layout order of the result. &amp;lsquo;C&amp;rsquo; means C order, &amp;lsquo;F&amp;rsquo; means Fortran order, &amp;lsquo;A&amp;rsquo; means &amp;lsquo;F&amp;rsquo; order if all the arrays are Fortran contiguous, &amp;lsquo;C&amp;rsquo; order otherwise, and &amp;lsquo;K&amp;rsquo; means as close to the order the array elements appear in memory as possible. Default is &amp;lsquo;K&amp;rsquo;.</source>
          <target state="translated">控制结果的内存布局顺序。'C'表示C顺序，'F'表示Fortran顺序，'A'表示'F'顺序（如果所有数组都是连续的），否则'C'顺序，'K'表示与数组元素出现的顺序接近在内存中。默认值为&amp;ldquo; K&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="2bd2cad71e7b306729d33e9e77734a57f4c762bf" translate="yes" xml:space="preserve">
          <source>Controls what kind of data casting may occur when copying.</source>
          <target state="translated">控制复制时可能发生的数据转换。</target>
        </trans-unit>
        <trans-unit id="5ffcf55707605cdac52bac56460f15163fa86687" translate="yes" xml:space="preserve">
          <source>Controls what kind of data casting may occur when making a copy or buffering. Setting this to &amp;lsquo;unsafe&amp;rsquo; is not recommended, as it can adversely affect accumulations.</source>
          <target state="translated">控制在进行复制或缓冲时可能发生的数据类型转换。不建议将其设置为&amp;ldquo;不安全&amp;rdquo;，因为这可能会对累积产生不利影响。</target>
        </trans-unit>
        <trans-unit id="fdeee7c21c5f079b8cf1347957a464129f951cd7" translate="yes" xml:space="preserve">
          <source>Controls what kind of data casting may occur.</source>
          <target state="translated">控制可能发生的数据转换。</target>
        </trans-unit>
        <trans-unit id="b10dae3006bf56317c0969243da6568e60665a36" translate="yes" xml:space="preserve">
          <source>Controls what kind of data casting may occur. Defaults to &amp;lsquo;unsafe&amp;rsquo; for backwards compatibility.</source>
          <target state="translated">控制可能发生的数据类型转换。为了向后兼容，默认为&amp;ldquo;不安全&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="ef9a6184cd0365349f0a3f3a85fd00227eeb5110" translate="yes" xml:space="preserve">
          <source>Controls what kind of data casting may occur. Setting this to &amp;lsquo;unsafe&amp;rsquo; is not recommended, as it can adversely affect accumulations.</source>
          <target state="translated">控制可能发生的数据类型转换。不建议将其设置为&amp;ldquo;不安全&amp;rdquo;，因为这可能会对累积产生不利影响。</target>
        </trans-unit>
        <trans-unit id="22a76f139a596a6451b3c663e17254b67d893014" translate="yes" xml:space="preserve">
          <source>Convenience class</source>
          <target state="translated">便利类</target>
        </trans-unit>
        <trans-unit id="d2fb0b32a197b1bc1c3268b6ce70b10c60d0e61b" translate="yes" xml:space="preserve">
          <source>Convenience function that accepts dimensions as input, e.g., &lt;code&gt;rand(2,2)&lt;/code&gt; would generate a 2-by-2 array of floats, uniformly distributed over &lt;code&gt;[0, 1)&lt;/code&gt;.</source>
          <target state="translated">接受维作为输入的便利函数，例如 &lt;code&gt;rand(2,2)&lt;/code&gt; 会生成2&amp;times;2的浮点数组，均匀分布在 &lt;code&gt;[0, 1)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a01257e80e28e1d2f9b1bc8f0a212e62ad583d28" translate="yes" xml:space="preserve">
          <source>Conventional C libraries (installed through &lt;code&gt;add_library&lt;/code&gt;) are not installed, and are just used during the build (they are statically linked). An installable C library is a pure C library, which does not depend on the python C runtime, and is installed such that it may be used by third-party packages. To build and install the C library, you just use the method &lt;code&gt;add_installed_library&lt;/code&gt; instead of &lt;code&gt;add_library&lt;/code&gt;, which takes the same arguments except for an additional &lt;code&gt;install_dir&lt;/code&gt; argument:</source>
          <target state="translated">常规的C库（通过 &lt;code&gt;add_library&lt;/code&gt; 安装）未安装，仅在构建过程中使用（它们是静态链接的）。可安装的C库是一个纯C库，它不依赖于python C运行时，并且已安装为可被第三方程序包使用。要构建和安装C库，只需使用方法 &lt;code&gt;add_installed_library&lt;/code&gt; 而不是 &lt;code&gt;add_library&lt;/code&gt; 即可，该方法采用相同的参数，只是附加的 &lt;code&gt;install_dir&lt;/code&gt; 参数为：</target>
        </trans-unit>
        <trans-unit id="9151f8433f795cb0f0b5b6743aeb7de77ec49f00" translate="yes" xml:space="preserve">
          <source>Conversion</source>
          <target state="translated">Conversion</target>
        </trans-unit>
        <trans-unit id="a17fb47b245c5cba5d75f315922fb16fc043d307" translate="yes" xml:space="preserve">
          <source>Conversion Utilities</source>
          <target state="translated">转换工具</target>
        </trans-unit>
        <trans-unit id="2ca5120be678740ebd6b346bd8c35bf444fe811c" translate="yes" xml:space="preserve">
          <source>Conversion between domains and class types can result in numerically ill defined series.</source>
          <target state="translated">域和类类型之间的转换会导致数值上定义不清的系列。</target>
        </trans-unit>
        <trans-unit id="164fb2dcb28e63dc48fff2c40f2e5257de488afc" translate="yes" xml:space="preserve">
          <source>Conversion of &lt;code&gt;.src&lt;/code&gt; files</source>
          <target state="translated">&lt;code&gt;.src&lt;/code&gt; 文件的转换</target>
        </trans-unit>
        <trans-unit id="e986bec62e3e7ecaf96128a9c0f40c8e67846882" translate="yes" xml:space="preserve">
          <source>Conversion of &lt;code&gt;.src&lt;/code&gt; files using Templates</source>
          <target state="translated">使用模板转换 &lt;code&gt;.src&lt;/code&gt; 文件</target>
        </trans-unit>
        <trans-unit id="da46a4c4a17ed3ea61b3092dc001141780833a19" translate="yes" xml:space="preserve">
          <source>Conversion operations</source>
          <target state="translated">转换业务</target>
        </trans-unit>
        <trans-unit id="10a7c46d2fe217029ff23b380edb9248c804a468" translate="yes" xml:space="preserve">
          <source>Conversion; the operations &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt; and &lt;code&gt;complex&lt;/code&gt;. . They work only on arrays that have one element in them and return the appropriate scalar.</source>
          <target state="translated">转换；操作 &lt;code&gt;int&lt;/code&gt; ， &lt;code&gt;float&lt;/code&gt; 和 &lt;code&gt;complex&lt;/code&gt; 。。它们仅对其中具有一个元素并返回适当标量的数组起作用。</target>
        </trans-unit>
        <trans-unit id="e5714517e2db28d492b0b79b54a5ada5c2a1521f" translate="yes" xml:space="preserve">
          <source>Conversions between types can be useful, but it is &lt;em&gt;not&lt;/em&gt; recommended for routine use. The loss of numerical precision in passing from a Chebyshev series of degree 50 to a Polynomial series of the same degree can make the results of numerical evaluation essentially random.</source>
          <target state="translated">类型之间的转换可能很有用，但&lt;em&gt;不&lt;/em&gt;建议日常使用。从Chebyshev阶数为50的级数到相同阶数的多项式级数的损失会导致数值评估的结果基本上是随机的。</target>
        </trans-unit>
        <trans-unit id="03825a0528753ecd6c491dd8eedf420a0d9f4294" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;bytes&lt;/code&gt; in the encoding used by a subprocess into a filesystem-appropriate &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">将子进程使用的编码中的 &lt;code&gt;bytes&lt;/code&gt; 转换为适合文件系统的 &lt;code&gt;str&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c7bd2e378946ee0f1c802ac20f6bf36a9ba9143" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;input&lt;/code&gt; to a Fortran contiguous &lt;code&gt;PyArrayObject*&lt;/code&gt; of the specified type. If the input object is not a Fortran contiguous &lt;code&gt;PyArrayObject*&lt;/code&gt;, a new one will be created and the new object flag will be set.</source>
          <target state="translated">将 &lt;code&gt;input&lt;/code&gt; 转换为指定类型的Fortran连续 &lt;code&gt;PyArrayObject*&lt;/code&gt; 。如果输入对象不是Fortran连续 &lt;code&gt;PyArrayObject*&lt;/code&gt; ，则将创建一个新对象并设置新对象标志。</target>
        </trans-unit>
        <trans-unit id="df4f3ea05c4d5f97fc6c549144dbe49c3b958747" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;input&lt;/code&gt; to a NumPy array with the given &lt;code&gt;typecode&lt;/code&gt;. On success, return a valid &lt;code&gt;PyArrayObject*&lt;/code&gt; with the correct type. On failure, the Python error string will be set and the routine returns &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">使用给定的 &lt;code&gt;typecode&lt;/code&gt; 将 &lt;code&gt;input&lt;/code&gt; 转换为NumPy数组。成功后，返回具有正确类型的有效 &lt;code&gt;PyArrayObject*&lt;/code&gt; 。失败时，将设置Python错误字符串，并且例程返回 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57614032e1d034b46eca1c59ddd0f6d15bf36d4e" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;input&lt;/code&gt; to a contiguous &lt;code&gt;PyArrayObject*&lt;/code&gt; of the specified type. If the input object is not a contiguous &lt;code&gt;PyArrayObject*&lt;/code&gt;, a new one will be created and the new object flag will be set.</source>
          <target state="translated">将 &lt;code&gt;input&lt;/code&gt; 转换为指定类型的连续 &lt;code&gt;PyArrayObject*&lt;/code&gt; 。如果输入对象不是连续的 &lt;code&gt;PyArrayObject*&lt;/code&gt; ，则将创建一个新对象，并将设置新对象标志。</target>
        </trans-unit>
        <trans-unit id="23cf93d55636e18fb2785cd6878809bff7d65f4b" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;number&lt;/code&gt; to the &lt;code&gt;base&lt;/code&gt; number system. The valid range is 2-36, the default value is 2.</source>
          <target state="translated">将 &lt;code&gt;number&lt;/code&gt; 转换为 &lt;code&gt;base&lt;/code&gt; 系统。有效范围是2-36，默认值是2。</target>
        </trans-unit>
        <trans-unit id="f55fe4032611ab151ac35085a484ba4bedcc1c10" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;obj&lt;/code&gt; to an ndarray. The argument can be any nested sequence or object that exports the array interface. This is a macro form of &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt; using &lt;code&gt;NULL&lt;/code&gt;, 0, 0, 0 for the other arguments. Your code must be able to handle any data-type descriptor and any combination of data-flags to use this macro.</source>
          <target state="translated">将 &lt;code&gt;obj&lt;/code&gt; 转换为ndarray。参数可以是导出数组接口的任何嵌套序列或对象。这是&lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; &lt;/a&gt;的宏形式，对其他参数使用 &lt;code&gt;NULL&lt;/code&gt; ，0，0，0。您的代码必须能够处理任何数据类型描述符和数据标志的任何组合才能使用此宏。</target>
        </trans-unit>
        <trans-unit id="e59da10540b8b045df108e94cbefc0a270a68b5c" translate="yes" xml:space="preserve">
          <source>Convert Python strings into one of &lt;code&gt;NPY_QUICKSORT&lt;/code&gt; (starts with &amp;lsquo;q&amp;rsquo; or &amp;lsquo;Q&amp;rsquo;), &lt;code&gt;NPY_HEAPSORT&lt;/code&gt; (starts with &amp;lsquo;h&amp;rsquo; or &amp;lsquo;H&amp;rsquo;), &lt;code&gt;NPY_MERGESORT&lt;/code&gt; (starts with &amp;lsquo;m&amp;rsquo; or &amp;lsquo;M&amp;rsquo;) or &lt;code&gt;NPY_STABLESORT&lt;/code&gt; (starts with &amp;lsquo;t&amp;rsquo; or &amp;lsquo;T&amp;rsquo;). &lt;code&gt;NPY_MERGESORT&lt;/code&gt; and &lt;code&gt;NPY_STABLESORT&lt;/code&gt; are aliased to each other for backwards compatibility and may refer to one of several stable sorting algorithms depending on the data type.</source>
          <target state="translated">将Python字符串转换为 &lt;code&gt;NPY_QUICKSORT&lt;/code&gt; （以&amp;ldquo; q&amp;rdquo;或&amp;ldquo; Q&amp;rdquo; 开头）， &lt;code&gt;NPY_HEAPSORT&lt;/code&gt; （以&amp;ldquo; h&amp;rdquo;或&amp;ldquo; H&amp;rdquo; 开头）， &lt;code&gt;NPY_MERGESORT&lt;/code&gt; （以&amp;ldquo; m&amp;rdquo;或&amp;ldquo; M&amp;rdquo; 开头）或 &lt;code&gt;NPY_STABLESORT&lt;/code&gt; （以&amp;ldquo; t&amp;rdquo;或&amp;ldquo; T&amp;rdquo;）。 &lt;code&gt;NPY_MERGESORT&lt;/code&gt; 和 &lt;code&gt;NPY_STABLESORT&lt;/code&gt; 为彼此向后兼容而互为别名，并可能根据数据类型引用几种稳定的排序算法之一。</target>
        </trans-unit>
        <trans-unit id="3306f9c5860e043187dbc26b17cfa1986c3541ca" translate="yes" xml:space="preserve">
          <source>Convert Python strings into one of &lt;code&gt;NPY_SEARCHLEFT&lt;/code&gt; (starts with &amp;lsquo;l&amp;rsquo; or &amp;lsquo;L&amp;rsquo;), or &lt;code&gt;NPY_SEARCHRIGHT&lt;/code&gt; (starts with &amp;lsquo;r&amp;rsquo; or &amp;lsquo;R&amp;rsquo;).</source>
          <target state="translated">将Python字符串转换为 &lt;code&gt;NPY_SEARCHLEFT&lt;/code&gt; （以'l'或'L' 开头）或 &lt;code&gt;NPY_SEARCHRIGHT&lt;/code&gt; （以'r'或'R'开头）之一。</target>
        </trans-unit>
        <trans-unit id="9665692749eb5f8271a8ef2c2766c29e0fe1a31a" translate="yes" xml:space="preserve">
          <source>Convert Python strings into the corresponding byte-order character: &amp;lsquo;&amp;gt;&amp;rsquo;, &amp;lsquo;&amp;lt;&amp;rsquo;, &amp;lsquo;s&amp;rsquo;, &amp;lsquo;=&amp;rsquo;, or &amp;lsquo;|&amp;rsquo;.</source>
          <target state="translated">将Python字符串转换为相应的字节顺序字符：&amp;ldquo;&amp;gt;&amp;rdquo;，&amp;ldquo; &amp;lt;&amp;rdquo;，&amp;ldquo; s&amp;rdquo;，&amp;ldquo; =&amp;rdquo;或&amp;ldquo; |&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="0249cb69b2094a04bbecaea9fed7d306da9e809a" translate="yes" xml:space="preserve">
          <source>Convert a /-separated pathname to one using the OS&amp;rsquo;s path separator.</source>
          <target state="translated">使用操作系统的路径分隔符将/分隔的路径名转换为一个。</target>
        </trans-unit>
        <trans-unit id="bbbde2984253b6c19463182f3ab3e49eacf0add1" translate="yes" xml:space="preserve">
          <source>Convert a Chebyshev series to a polynomial.</source>
          <target state="translated">将切比雪夫数列转换为多项式。</target>
        </trans-unit>
        <trans-unit id="3b725963ae7233b84da188095a5261995f877a10" translate="yes" xml:space="preserve">
          <source>Convert a Hermite series to a polynomial.</source>
          <target state="translated">将赫尔米特数列转换为多项式。</target>
        </trans-unit>
        <trans-unit id="c5774d379d320ad666e23c93d53c895b9282a781" translate="yes" xml:space="preserve">
          <source>Convert a Laguerre series to a polynomial.</source>
          <target state="translated">将Laguerre数列转换为多项式。</target>
        </trans-unit>
        <trans-unit id="c0cba427e743f4d7f6bd18952bc7a604ed734f1a" translate="yes" xml:space="preserve">
          <source>Convert a Legendre series to a polynomial.</source>
          <target state="translated">将Legendre数列转换为多项式。</target>
        </trans-unit>
        <trans-unit id="7303080b96152a0bf0712c8711af50deecda280f" translate="yes" xml:space="preserve">
          <source>Convert a Python object, &lt;em&gt;obj&lt;/em&gt;, representing an axis argument to the proper value for passing to the functions that take an integer axis. Specifically, if &lt;em&gt;obj&lt;/em&gt; is None, &lt;em&gt;axis&lt;/em&gt; is set to &lt;a href=&quot;#c.NPY_MAXDIMS&quot;&gt;&lt;code&gt;NPY_MAXDIMS&lt;/code&gt;&lt;/a&gt; which is interpreted correctly by the C-API functions that take axis arguments.</source>
          <target state="translated">将代表轴参数的Python对象&lt;em&gt;obj&lt;/em&gt;转换为适当的值，以传递给采用整数轴的函数。具体来说，如果&lt;em&gt;obj&lt;/em&gt;为None ，则将&lt;em&gt;axis&lt;/em&gt;设置为&lt;a href=&quot;#c.NPY_MAXDIMS&quot;&gt; &lt;code&gt;NPY_MAXDIMS&lt;/code&gt; &lt;/a&gt;，该值可以由采用轴参数的C-API函数正确解释。</target>
        </trans-unit>
        <trans-unit id="cb9724a7e14228c2698abcf68b1a251a0ae3b8f5" translate="yes" xml:space="preserve">
          <source>Convert a degree array to radians</source>
          <target state="translated">将一个度数组转换为弧度</target>
        </trans-unit>
        <trans-unit id="a5c1e0427139c907d167379333f020dfcf76dbc2" translate="yes" xml:space="preserve">
          <source>Convert a dtype into a ctypes type.</source>
          <target state="translated">将dtype转换为ctypes类型。</target>
        </trans-unit>
        <trans-unit id="04cea7e04fb2eca83318942c92f1c07b960f13bf" translate="yes" xml:space="preserve">
          <source>Convert a flat index into an index tuple.</source>
          <target state="translated">将一个平面索引转换成一个索引元组。</target>
        </trans-unit>
        <trans-unit id="608694c52c4ebed3a5e39984190479f5e8a306e1" translate="yes" xml:space="preserve">
          <source>Convert a list into an array. If all elements are finite &lt;code&gt;asarray_chkfinite&lt;/code&gt; is identical to &lt;code&gt;asarray&lt;/code&gt;.</source>
          <target state="translated">将列表转换为数组。如果所有元素都是有限的，则 &lt;code&gt;asarray_chkfinite&lt;/code&gt; 与 &lt;code&gt;asarray&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="c03ed6ac231e004466351d76fc80aa6d480fc3b7" translate="yes" xml:space="preserve">
          <source>Convert a list into an array:</source>
          <target state="translated">将一个列表转换为一个数组。</target>
        </trans-unit>
        <trans-unit id="9c374ac29e69d14674f6d6142f266b0eef36664b" translate="yes" xml:space="preserve">
          <source>Convert a polynomial to a Chebyshev series.</source>
          <target state="translated">将多项式转换为切比雪夫数列。</target>
        </trans-unit>
        <trans-unit id="b5c9ed7a8b3e04ef89c09d23b7d0d8b444f0ef50" translate="yes" xml:space="preserve">
          <source>Convert a polynomial to a Hermite series.</source>
          <target state="translated">将多项式转换为赫尔米特数列。</target>
        </trans-unit>
        <trans-unit id="4e3ec08396dbbd66882318c251a298df01079281" translate="yes" xml:space="preserve">
          <source>Convert a polynomial to a Laguerre series.</source>
          <target state="translated">将多项式转换为Laguerre数列。</target>
        </trans-unit>
        <trans-unit id="04c048566837ee3c2a27ff8795d4c53f80b84281" translate="yes" xml:space="preserve">
          <source>Convert a polynomial to a Legendre series.</source>
          <target state="translated">将多项式转换为Legendre数列。</target>
        </trans-unit>
        <trans-unit id="030db426d65b1085bdfe94fd49af9bb5148d5b11" translate="yes" xml:space="preserve">
          <source>Convert a radian array to degrees</source>
          <target state="translated">将弧度数组转换为度数</target>
        </trans-unit>
        <trans-unit id="1fe8f7480d0d47cc60a5977befc1bf0fb1c97374" translate="yes" xml:space="preserve">
          <source>Convert a sequence of Python objects contained in &lt;em&gt;op&lt;/em&gt; to an array of ndarrays each having the same data type. The type is selected based on the typenumber (larger type number is chosen over a smaller one) ignoring objects that are only scalars. The length of the sequence is returned in &lt;em&gt;n&lt;/em&gt;, and an &lt;em&gt;n&lt;/em&gt; -length array of &lt;a href=&quot;c-api.types-and-structures#c.PyArrayObject&quot;&gt;&lt;code&gt;PyArrayObject&lt;/code&gt;&lt;/a&gt; pointers is the return value (or &lt;code&gt;NULL&lt;/code&gt; if an error occurs). The returned array must be freed by the caller of this routine (using &lt;a href=&quot;#c.PyDataMem_FREE&quot;&gt;&lt;code&gt;PyDataMem_FREE&lt;/code&gt;&lt;/a&gt; ) and all the array objects in it &lt;code&gt;DECREF&lt;/code&gt; &amp;lsquo;d or a memory-leak will occur. The example template-code below shows a typically usage:</source>
          <target state="translated">将&lt;em&gt;op中&lt;/em&gt;包含的一系列Python对象转换为每个具有相同数据类型的ndarrays数组。根据类型编号选择类型（较大的类型编号选择较小的类型），而忽略仅是标量的对象。序列的长度以&lt;em&gt;n&lt;/em&gt;返回，并且&lt;a href=&quot;c-api.types-and-structures#c.PyArrayObject&quot;&gt; &lt;code&gt;PyArrayObject&lt;/code&gt; &lt;/a&gt;指针的&lt;em&gt;n&lt;/em&gt;长度数组是返回值（如果发生错误，则为 &lt;code&gt;NULL&lt;/code&gt; ）。返回的数组必须由此例程的调用者释放（使用&lt;a href=&quot;#c.PyDataMem_FREE&quot;&gt; &lt;code&gt;PyDataMem_FREE&lt;/code&gt; &lt;/a&gt;），并且其中的所有数组对象 &lt;code&gt;DECREF&lt;/code&gt; 'd都将发生，否则将发生内存泄漏。下面的示例模板代码显示了一种典型用法：</target>
        </trans-unit>
        <trans-unit id="e101ec3d7ab1b665f48ac2d543089565c86aa54e" translate="yes" xml:space="preserve">
          <source>Convert all kinds of Python objects (including arrays and array scalars) to a (platform-pointer-sized) integer. On error, -1 is returned and an exception set.</source>
          <target state="translated">将所有类型的Python对象 (包括数组和数组标量)转换为一个 (平台指针大小的)整数。出错时,返回-1并设置一个异常。</target>
        </trans-unit>
        <trans-unit id="1af2928a63dcb1e8b49b18ef5eb4581fbe6b1379" translate="yes" xml:space="preserve">
          <source>Convert all kinds of Python objects (including arrays and array scalars) to a standard integer. On error, -1 is returned and an exception set. You may find useful the macro:</source>
          <target state="translated">将所有类型的Python对象(包括数组和数组标量)转换为标准整数。出错时,返回-1并设置一个异常。你可能会发现这个宏很有用。</target>
        </trans-unit>
        <trans-unit id="ffbc378826f57347e9c8260b31120c1a5833498c" translate="yes" xml:space="preserve">
          <source>Convert an array of datetimes into an array of strings.</source>
          <target state="translated">将日期数组转换为字符串数组。</target>
        </trans-unit>
        <trans-unit id="037f70609a1c007309e108da24f60e5d131632f5" translate="yes" xml:space="preserve">
          <source>Convert an array of size 1 to its scalar equivalent.</source>
          <target state="translated">将一个大小为1的数组转换为等价的标量。</target>
        </trans-unit>
        <trans-unit id="53df29e4ff05ae420cc48926e99a3b9e70512010" translate="yes" xml:space="preserve">
          <source>Convert an array representing the coefficients of a Chebyshev series, ordered from lowest degree to highest, to an array of the coefficients of the equivalent polynomial (relative to the &amp;ldquo;standard&amp;rdquo; basis) ordered from lowest to highest degree.</source>
          <target state="translated">将代表从最低阶到最高阶的Chebyshev系列系数的数组转换为从最低阶到最高阶的等效多项式（相对于&amp;ldquo;标准&amp;rdquo;基础）的系数数组。</target>
        </trans-unit>
        <trans-unit id="6e39db716cf38d73c2e1474b5348e35ad5d45d64" translate="yes" xml:space="preserve">
          <source>Convert an array representing the coefficients of a Hermite series, ordered from lowest degree to highest, to an array of the coefficients of the equivalent polynomial (relative to the &amp;ldquo;standard&amp;rdquo; basis) ordered from lowest to highest degree.</source>
          <target state="translated">将代表从最低阶到最高阶的Hermite系列系数的数组转换为从最低阶到最高阶的等效多项式（相对于&amp;ldquo;标准&amp;rdquo;基础）的系数数组。</target>
        </trans-unit>
        <trans-unit id="8d92a2c5d4792677ccffae0416bcb9beb6eb167c" translate="yes" xml:space="preserve">
          <source>Convert an array representing the coefficients of a Laguerre series, ordered from lowest degree to highest, to an array of the coefficients of the equivalent polynomial (relative to the &amp;ldquo;standard&amp;rdquo; basis) ordered from lowest to highest degree.</source>
          <target state="translated">将代表从最低阶到最高阶的Laguerre级数的系数的数组转换为从最低阶到最高阶的等效多项式（相对于&amp;ldquo;标准&amp;rdquo;基础）的系数的数组。</target>
        </trans-unit>
        <trans-unit id="a288bed0f35723755d6a37566e44ab92c6ecb769" translate="yes" xml:space="preserve">
          <source>Convert an array representing the coefficients of a Legendre series, ordered from lowest degree to highest, to an array of the coefficients of the equivalent polynomial (relative to the &amp;ldquo;standard&amp;rdquo; basis) ordered from lowest to highest degree.</source>
          <target state="translated">将代表勒让德级数的系数的数组（从最低阶到最高阶）转换为从最低阶到最高阶的等效多项式（相对于&amp;ldquo;标准&amp;rdquo;基础）的系数数组。</target>
        </trans-unit>
        <trans-unit id="8f863e3ceaa930790565bf1f263428f91f82dc05" translate="yes" xml:space="preserve">
          <source>Convert an array representing the coefficients of a polynomial (relative to the &amp;ldquo;standard&amp;rdquo; basis) ordered from lowest degree to highest, to an array of the coefficients of the equivalent Chebyshev series, ordered from lowest to highest degree.</source>
          <target state="translated">将代表从最低阶到最高阶的多项式（相对于&amp;ldquo;标准&amp;rdquo;基础）的系数的数组转换为从最低阶到最高阶的等效Chebyshev级数的系数的数组。</target>
        </trans-unit>
        <trans-unit id="77ebeb329b7c408d6e1a1754f29dec3917a76884" translate="yes" xml:space="preserve">
          <source>Convert an array representing the coefficients of a polynomial (relative to the &amp;ldquo;standard&amp;rdquo; basis) ordered from lowest degree to highest, to an array of the coefficients of the equivalent Hermite series, ordered from lowest to highest degree.</source>
          <target state="translated">将表示从最低阶到最高阶的多项式（相对于&amp;ldquo;标准&amp;rdquo;基础）的系数的数组转换为从最低阶到最高阶的等效Hermite级数的系数的数组。</target>
        </trans-unit>
        <trans-unit id="5d3f4ebc3ae40ac476278051222e82a2168385fe" translate="yes" xml:space="preserve">
          <source>Convert an array representing the coefficients of a polynomial (relative to the &amp;ldquo;standard&amp;rdquo; basis) ordered from lowest degree to highest, to an array of the coefficients of the equivalent Laguerre series, ordered from lowest to highest degree.</source>
          <target state="translated">将表示从最低阶到最高阶的多项式（相对于&amp;ldquo;标准&amp;rdquo;基础）的系数的数组转换为从最低阶到最高阶的等效Laguerre级数的系数的数组。</target>
        </trans-unit>
        <trans-unit id="cec81c86dbe89e8d496cab1ec6207291b41341cd" translate="yes" xml:space="preserve">
          <source>Convert an array representing the coefficients of a polynomial (relative to the &amp;ldquo;standard&amp;rdquo; basis) ordered from lowest degree to highest, to an array of the coefficients of the equivalent Legendre series, ordered from lowest to highest degree.</source>
          <target state="translated">将表示从最低阶到最高阶的多项式（相对于&amp;ldquo;标准&amp;rdquo;基础）的系数的数组转换为从最低阶到最高阶的等效Legendre级数的系数的数组。</target>
        </trans-unit>
        <trans-unit id="4b17b279b5dccfd644af2817f95777400cf1861d" translate="yes" xml:space="preserve">
          <source>Convert angles from degrees to radians.</source>
          <target state="translated">将角度从度数转换为弧度。</target>
        </trans-unit>
        <trans-unit id="7b990b4a48262db5915c35fe0989adfb1e63af66" translate="yes" xml:space="preserve">
          <source>Convert angles from radians to degrees.</source>
          <target state="translated">将角度从弧度转换为度数。</target>
        </trans-unit>
        <trans-unit id="45815db69ac2df469f002b3c383b11df15d3fe0f" translate="yes" xml:space="preserve">
          <source>Convert any Python object to a &lt;a href=&quot;c-api.types-and-structures#c.PyArrayObject&quot;&gt;&lt;code&gt;PyArrayObject&lt;/code&gt;&lt;/a&gt;. If &lt;a href=&quot;#c.PyArray_Check&quot;&gt;&lt;code&gt;PyArray_Check&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;obj&lt;/em&gt;) is TRUE then its reference count is incremented and a reference placed in &lt;em&gt;address&lt;/em&gt;. If &lt;em&gt;obj&lt;/em&gt; is not an array, then convert it to an array using &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt; . No matter what is returned, you must DECREF the object returned by this routine in &lt;em&gt;address&lt;/em&gt; when you are done with it.</source>
          <target state="translated">将任何Python对象转换为&lt;a href=&quot;c-api.types-and-structures#c.PyArrayObject&quot;&gt; &lt;code&gt;PyArrayObject&lt;/code&gt; &lt;/a&gt;。如果&lt;a href=&quot;#c.PyArray_Check&quot;&gt; &lt;code&gt;PyArray_Check&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;obj&lt;/em&gt;）为TRUE，则其引用计数将递增，并且引用将放置在&lt;em&gt;地址中&lt;/em&gt;。如果&lt;em&gt;obj&lt;/em&gt;不是数组，则使用&lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; &lt;/a&gt;将其转换为数组。无论返回什么，完成该例程后，都必须在&lt;em&gt;地址中&lt;/em&gt;对该例程返回的对象进行DECREF 。</target>
        </trans-unit>
        <trans-unit id="2c520cfad3eae214eac5cb30701aacd3d0256a7c" translate="yes" xml:space="preserve">
          <source>Convert any Python object, &lt;em&gt;obj&lt;/em&gt;, to &lt;a href=&quot;#c.NPY_TRUE&quot;&gt;&lt;code&gt;NPY_TRUE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#c.NPY_FALSE&quot;&gt;&lt;code&gt;NPY_FALSE&lt;/code&gt;&lt;/a&gt;, and place the result in &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">将任何Python对象&lt;em&gt;obj&lt;/em&gt;转换为&lt;a href=&quot;#c.NPY_TRUE&quot;&gt; &lt;code&gt;NPY_TRUE&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#c.NPY_FALSE&quot;&gt; &lt;code&gt;NPY_FALSE&lt;/code&gt; &lt;/a&gt;，并将结果放入&lt;em&gt;value中&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1f11d66b7da05915fa0d0dcb369cc6d4a2e56d6e" translate="yes" xml:space="preserve">
          <source>Convert any Python object, &lt;em&gt;obj&lt;/em&gt;, with a (single-segment) buffer interface to a variable with members that detail the object&amp;rsquo;s use of its chunk of memory. The &lt;em&gt;buf&lt;/em&gt; variable is a pointer to a structure with base, ptr, len, and flags members. The &lt;a href=&quot;c-api.types-and-structures#c.PyArray_Chunk&quot;&gt;&lt;code&gt;PyArray_Chunk&lt;/code&gt;&lt;/a&gt; structure is binary compatible with the Python&amp;rsquo;s buffer object (through its len member on 32-bit platforms and its ptr member on 64-bit platforms or in Python 2.5). On return, the base member is set to &lt;em&gt;obj&lt;/em&gt; (or its base if &lt;em&gt;obj&lt;/em&gt; is already a buffer object pointing to another object). If you need to hold on to the memory be sure to INCREF the base member. The chunk of memory is pointed to by &lt;em&gt;buf&lt;/em&gt; -&amp;gt;ptr member and has length &lt;em&gt;buf&lt;/em&gt; -&amp;gt;len. The flags member of &lt;em&gt;buf&lt;/em&gt; is &lt;code&gt;NPY_BEHAVED_RO&lt;/code&gt; with the &lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt;&lt;/a&gt; flag set if &lt;em&gt;obj&lt;/em&gt; has a writeable buffer interface.</source>
          <target state="translated">将具有（单段）缓冲区接口的任何Python对象&lt;em&gt;obj&lt;/em&gt;转换为具有成员的变量，这些成员详细说明对象对内存块的使用。的&lt;em&gt;BUF&lt;/em&gt;变量是指向与碱，PTR，LEN，和标志构件的结构。该&lt;a href=&quot;c-api.types-and-structures#c.PyArray_Chunk&quot;&gt; &lt;code&gt;PyArray_Chunk&lt;/code&gt; &lt;/a&gt;结构是二进制与Python的缓冲器兼容对象（通过在32位的平台其len成员和在64位平台或在Python 2.5其PTR部件）。返回时，将基成员设置为&lt;em&gt;obj&lt;/em&gt;（如果&lt;em&gt;obj&lt;/em&gt;已经是指向另一个对象的缓冲区对象，则将该基成员设置为&lt;em&gt;obj&lt;/em&gt;）。如果您需要保留内存，请确保将基本成员INCREF。内存块由&lt;em&gt;buf-&lt;/em&gt; &amp;gt; ptr成员&lt;em&gt;指向&lt;/em&gt;并具有长度&lt;em&gt;buf-&lt;/em&gt; &amp;gt; len。如果&lt;em&gt;obj&lt;/em&gt;具有可写缓冲区接口，则&lt;em&gt;buf&lt;/em&gt;的标志成员为 &lt;code&gt;NPY_BEHAVED_RO&lt;/code&gt; ，并设置&lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt; &lt;/a&gt;标志。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c75a292870c1a62f954752682b5e4d2572c8fb49" translate="yes" xml:space="preserve">
          <source>Convert any Python sequence (or single Python number) passed in as &lt;em&gt;seq&lt;/em&gt; to (up to) &lt;em&gt;maxvals&lt;/em&gt; pointer-sized integers and place them in the &lt;em&gt;vals&lt;/em&gt; array. The sequence can be smaller then &lt;em&gt;maxvals&lt;/em&gt; as the number of converted objects is returned.</source>
          <target state="translated">将作为&lt;em&gt;seq&lt;/em&gt;传递的任何Python序列（或单个Python数字）转换为（最多）&lt;em&gt;maxvals&lt;/em&gt;指针大小的整数，并将其放置在&lt;em&gt;vals&lt;/em&gt;数组中。当返回转换后的对象数时，序列可以小于&lt;em&gt;maxvals&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="fa9c12af167e2e17ab265f1ff4c7ad781660a664" translate="yes" xml:space="preserve">
          <source>Convert any Python sequence, &lt;em&gt;obj&lt;/em&gt;, smaller than &lt;a href=&quot;#c.NPY_MAXDIMS&quot;&gt;&lt;code&gt;NPY_MAXDIMS&lt;/code&gt;&lt;/a&gt; to a C-array of &lt;a href=&quot;c-api.dtype#c.npy_intp&quot;&gt;&lt;code&gt;npy_intp&lt;/code&gt;&lt;/a&gt;. The Python object could also be a single number. The &lt;em&gt;seq&lt;/em&gt; variable is a pointer to a structure with members ptr and len. On successful return, &lt;em&gt;seq&lt;/em&gt; -&amp;gt;ptr contains a pointer to memory that must be freed, by calling &lt;a href=&quot;#c.PyDimMem_FREE&quot;&gt;&lt;code&gt;PyDimMem_FREE&lt;/code&gt;&lt;/a&gt;, to avoid a memory leak. The restriction on memory size allows this converter to be conveniently used for sequences intended to be interpreted as array shapes.</source>
          <target state="translated">转换任何的Python序列，&lt;em&gt;OBJ&lt;/em&gt;，小于&lt;a href=&quot;#c.NPY_MAXDIMS&quot;&gt; &lt;code&gt;NPY_MAXDIMS&lt;/code&gt; &lt;/a&gt;到的C-阵列&lt;a href=&quot;c-api.dtype#c.npy_intp&quot;&gt; &lt;code&gt;npy_intp&lt;/code&gt; &lt;/a&gt;。 Python对象也可以是一个数字。的&lt;em&gt;SEQ&lt;/em&gt;变量是一个指向结构与构件的ptr和LEN。在成功返回，&lt;em&gt;SEQ&lt;/em&gt; - &amp;gt; PTR包含一个指向内存必须通过调用释放，&lt;a href=&quot;#c.PyDimMem_FREE&quot;&gt; &lt;code&gt;PyDimMem_FREE&lt;/code&gt; &lt;/a&gt;，以避免内存泄漏。内存大小的限制使此转换器可以方便地用于打算解释为数组形状的序列。</target>
        </trans-unit>
        <trans-unit id="69da68263fbc339b854ebcf71b991e1eb9b1a25a" translate="yes" xml:space="preserve">
          <source>Convert any compatible Python object, &lt;em&gt;obj&lt;/em&gt;, to a data-type object in &lt;em&gt;dtype&lt;/em&gt;. A large number of Python objects can be converted to data-type objects. See &lt;a href=&quot;arrays.dtypes#arrays-dtypes&quot;&gt;Data type objects (dtype)&lt;/a&gt; for a complete description. This version of the converter converts None objects to a &lt;a href=&quot;c-api.dtype#c.NPY_DEFAULT_TYPE&quot;&gt;&lt;code&gt;NPY_DEFAULT_TYPE&lt;/code&gt;&lt;/a&gt; data-type object. This function can be used with the &amp;ldquo;O&amp;amp;&amp;rdquo; character code in &lt;a href=&quot;https://docs.python.org/dev/c-api/arg.html#c.PyArg_ParseTuple&quot;&gt;&lt;code&gt;PyArg_ParseTuple&lt;/code&gt;&lt;/a&gt; processing.</source>
          <target state="translated">将所有兼容的Python对象&lt;em&gt;obj&lt;/em&gt;转换为&lt;em&gt;dtype中&lt;/em&gt;的数据类型对象。大量的Python对象可以转换为数据类型的对象。有关完整说明，请参见&lt;a href=&quot;arrays.dtypes#arrays-dtypes&quot;&gt;数据类型对象（dtype）&lt;/a&gt;。此版本的转换器将None对象转换为&lt;a href=&quot;c-api.dtype#c.NPY_DEFAULT_TYPE&quot;&gt; &lt;code&gt;NPY_DEFAULT_TYPE&lt;/code&gt; &lt;/a&gt;数据类型对象。此函数可以与&lt;a href=&quot;https://docs.python.org/dev/c-api/arg.html#c.PyArg_ParseTuple&quot;&gt; &lt;code&gt;PyArg_ParseTuple&lt;/code&gt; &lt;/a&gt;处理中的&amp;ldquo; O＆&amp;rdquo;字符代码一起使用。</target>
        </trans-unit>
        <trans-unit id="76aa53d3435e68fd8a448322e838d44b487cd7d8" translate="yes" xml:space="preserve">
          <source>Convert any compatible Python object, &lt;em&gt;obj&lt;/em&gt;, to a data-type object in &lt;em&gt;dtype&lt;/em&gt;. This version of the converter converts None objects so that the returned data-type is &lt;code&gt;NULL&lt;/code&gt;. This function can also be used with the &amp;ldquo;O&amp;amp;&amp;rdquo; character in PyArg_ParseTuple processing.</source>
          <target state="translated">将所有兼容的Python对象&lt;em&gt;obj&lt;/em&gt;转换为&lt;em&gt;dtype中&lt;/em&gt;的数据类型对象。此版本的转换器将转换None对象，以便返回的数据类型为 &lt;code&gt;NULL&lt;/code&gt; 。此函数也可以与PyArg_ParseTuple处理中的&amp;ldquo; O＆&amp;rdquo;字符一起使用。</target>
        </trans-unit>
        <trans-unit id="e9aec6c9ded5002efcbad399df89142237d7cc00" translate="yes" xml:space="preserve">
          <source>Convert input to a contiguous (C order) array.</source>
          <target state="translated">将输入转换为一个连续的(C阶)数组。</target>
        </trans-unit>
        <trans-unit id="420fb690c0edc53e8debde6a0ec4d275687ce3ce" translate="yes" xml:space="preserve">
          <source>Convert input to a contiguous array.</source>
          <target state="translated">将输入转换为一个连续的数组。</target>
        </trans-unit>
        <trans-unit id="33c1cb2e227b9bd61de344d0e7fbaab99233af47" translate="yes" xml:space="preserve">
          <source>Convert input to a floating point ndarray.</source>
          <target state="translated">将输入转换为浮点ndarray。</target>
        </trans-unit>
        <trans-unit id="a5f5c7c34bf3d8463c0f5b22aa43e1fd52fac998" translate="yes" xml:space="preserve">
          <source>Convert input to an ndarray with column-major memory order.</source>
          <target state="translated">将输入转换为具有列-大内存顺序的ndarray。</target>
        </trans-unit>
        <trans-unit id="045aaccfe763e323c93890206739ec75aade7286" translate="yes" xml:space="preserve">
          <source>Convert input to an ndarray with either row or column-major memory order.</source>
          <target state="translated">将输入转换为一个ndarray,可以是行,也可以是列-主内存顺序。</target>
        </trans-unit>
        <trans-unit id="a4ef171cc954b4a91951ba1a6dda729099545ddf" translate="yes" xml:space="preserve">
          <source>Convert input to an ndarray.</source>
          <target state="translated">将输入转换为ndarray。</target>
        </trans-unit>
        <trans-unit id="ccd7aa35d1ae2b4dc3b90cbbf72ce01559391330" translate="yes" xml:space="preserve">
          <source>Convert inputs to arrays with at least one dimension.</source>
          <target state="translated">将输入转换为至少一个维度的数组。</target>
        </trans-unit>
        <trans-unit id="a6f15509196d96b84e75e30f612e180331511cb6" translate="yes" xml:space="preserve">
          <source>Convert obj and place it in the ndarray, &lt;em&gt;arr&lt;/em&gt;, at the place pointed to by itemptr. Return -1 if an error occurs or 0 on success.</source>
          <target state="translated">转换OBJ，并将其放置在ndarray，&lt;em&gt;ARR&lt;/em&gt;，在地方指向itemptr。如果发生错误，则返回-1；如果成功，则返回0。</target>
        </trans-unit>
        <trans-unit id="576d85a9ac7f4bb463bcd686151b14889c6fa48b" translate="yes" xml:space="preserve">
          <source>Convert series to a different kind and/or domain and/or window.</source>
          <target state="translated">将系列转换为不同种类和/或领域和/或窗口。</target>
        </trans-unit>
        <trans-unit id="3f437b5b2be6d379bf2552ef729b64b4968647ed" translate="yes" xml:space="preserve">
          <source>Convert series to series of this class.</source>
          <target state="translated">将系列转换为本类的系列。</target>
        </trans-unit>
        <trans-unit id="11dd67ff4e76c78a832c4fe82ad1fa604de8aae0" translate="yes" xml:space="preserve">
          <source>Convert the Python strings &amp;lsquo;C&amp;rsquo;, &amp;lsquo;F&amp;rsquo;, &amp;lsquo;A&amp;rsquo;, and &amp;lsquo;K&amp;rsquo; into the &lt;a href=&quot;#c.NPY_ORDER&quot;&gt;&lt;code&gt;NPY_ORDER&lt;/code&gt;&lt;/a&gt; enumeration &lt;a href=&quot;#c.NPY_CORDER&quot;&gt;&lt;code&gt;NPY_CORDER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_FORTRANORDER&quot;&gt;&lt;code&gt;NPY_FORTRANORDER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_ANYORDER&quot;&gt;&lt;code&gt;NPY_ANYORDER&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#c.NPY_KEEPORDER&quot;&gt;&lt;code&gt;NPY_KEEPORDER&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将Python字符串'C'，'F'，'A'和'K'转换为&lt;a href=&quot;#c.NPY_ORDER&quot;&gt; &lt;code&gt;NPY_ORDER&lt;/code&gt; &lt;/a&gt;枚举&lt;a href=&quot;#c.NPY_CORDER&quot;&gt; &lt;code&gt;NPY_CORDER&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#c.NPY_FORTRANORDER&quot;&gt; &lt;code&gt;NPY_FORTRANORDER&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#c.NPY_ANYORDER&quot;&gt; &lt;code&gt;NPY_ANYORDER&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#c.NPY_KEEPORDER&quot;&gt; &lt;code&gt;NPY_KEEPORDER&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e537ead60d0d43e6e588d78323ccc29eca3c8343" translate="yes" xml:space="preserve">
          <source>Convert the Python strings &amp;lsquo;clip&amp;rsquo;, &amp;lsquo;wrap&amp;rsquo;, and &amp;lsquo;raise&amp;rsquo; into the &lt;a href=&quot;#c.NPY_CLIPMODE&quot;&gt;&lt;code&gt;NPY_CLIPMODE&lt;/code&gt;&lt;/a&gt; enumeration &lt;a href=&quot;#c.NPY_CLIP&quot;&gt;&lt;code&gt;NPY_CLIP&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_WRAP&quot;&gt;&lt;code&gt;NPY_WRAP&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#c.NPY_RAISE&quot;&gt;&lt;code&gt;NPY_RAISE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将Python字符串'clip'，'wrap'和'raise'转换为&lt;a href=&quot;#c.NPY_CLIPMODE&quot;&gt; &lt;code&gt;NPY_CLIPMODE&lt;/code&gt; &lt;/a&gt;枚举&lt;a href=&quot;#c.NPY_CLIP&quot;&gt; &lt;code&gt;NPY_CLIP&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#c.NPY_WRAP&quot;&gt; &lt;code&gt;NPY_WRAP&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#c.NPY_RAISE&quot;&gt; &lt;code&gt;NPY_RAISE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc37cf0719273a042d912bf17405514329ce06ef" translate="yes" xml:space="preserve">
          <source>Convert the Python strings &amp;lsquo;no&amp;rsquo;, &amp;lsquo;equiv&amp;rsquo;, &amp;lsquo;safe&amp;rsquo;, &amp;lsquo;same_kind&amp;rsquo;, and &amp;lsquo;unsafe&amp;rsquo; into the &lt;a href=&quot;#c.NPY_CASTING&quot;&gt;&lt;code&gt;NPY_CASTING&lt;/code&gt;&lt;/a&gt; enumeration &lt;a href=&quot;#c.NPY_NO_CASTING&quot;&gt;&lt;code&gt;NPY_NO_CASTING&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_EQUIV_CASTING&quot;&gt;&lt;code&gt;NPY_EQUIV_CASTING&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_SAFE_CASTING&quot;&gt;&lt;code&gt;NPY_SAFE_CASTING&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_SAME_KIND_CASTING&quot;&gt;&lt;code&gt;NPY_SAME_KIND_CASTING&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#c.NPY_UNSAFE_CASTING&quot;&gt;&lt;code&gt;NPY_UNSAFE_CASTING&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将Python字符串'no'，'equiv'，'safe'，'same_kind'和'unsafe'转换为&lt;a href=&quot;#c.NPY_CASTING&quot;&gt; &lt;code&gt;NPY_CASTING&lt;/code&gt; &lt;/a&gt;枚举&lt;a href=&quot;#c.NPY_NO_CASTING&quot;&gt; &lt;code&gt;NPY_NO_CASTING&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#c.NPY_EQUIV_CASTING&quot;&gt; &lt;code&gt;NPY_EQUIV_CASTING&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#c.NPY_SAFE_CASTING&quot;&gt; &lt;code&gt;NPY_SAFE_CASTING&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#c.NPY_SAME_KIND_CASTING&quot;&gt; &lt;code&gt;NPY_SAME_KIND_CASTING&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#c.NPY_UNSAFE_CASTING&quot;&gt; &lt;code&gt;NPY_UNSAFE_CASTING&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="815ebb3363dd660001d42495eb8ae85f74f839e8" translate="yes" xml:space="preserve">
          <source>Convert the input to a &lt;a href=&quot;generated/numpy.char.chararray#numpy.char.chararray&quot;&gt;&lt;code&gt;chararray&lt;/code&gt;&lt;/a&gt;, copying the data only if necessary.</source>
          <target state="translated">将输入转换为&lt;a href=&quot;generated/numpy.char.chararray#numpy.char.chararray&quot;&gt; &lt;code&gt;chararray&lt;/code&gt; &lt;/a&gt;，仅在必要时才复制数据。</target>
        </trans-unit>
        <trans-unit id="89dd3b39429f0c57adb052e020bf83426fade26c" translate="yes" xml:space="preserve">
          <source>Convert the input to a &lt;a href=&quot;generated/numpy.chararray#numpy.chararray&quot;&gt;&lt;code&gt;chararray&lt;/code&gt;&lt;/a&gt;, copying the data only if necessary.</source>
          <target state="translated">将输入转换为&lt;a href=&quot;generated/numpy.chararray#numpy.chararray&quot;&gt; &lt;code&gt;chararray&lt;/code&gt; &lt;/a&gt;，仅在必要时才复制数据。</target>
        </trans-unit>
        <trans-unit id="0806bab1a140533a0bd7db5d9d14e0735040e429" translate="yes" xml:space="preserve">
          <source>Convert the input to a &lt;a href=&quot;numpy.char.chararray#numpy.char.chararray&quot;&gt;&lt;code&gt;chararray&lt;/code&gt;&lt;/a&gt;, copying the data only if necessary.</source>
          <target state="translated">将输入转换为&lt;a href=&quot;numpy.char.chararray#numpy.char.chararray&quot;&gt; &lt;code&gt;chararray&lt;/code&gt; &lt;/a&gt;，仅在必要时才复制数据。</target>
        </trans-unit>
        <trans-unit id="d7f61cec71e421e2035c68b35503551782f13e38" translate="yes" xml:space="preserve">
          <source>Convert the input to a &lt;code&gt;chararray&lt;/code&gt;, copying the data only if necessary.</source>
          <target state="translated">将输入转换为 &lt;code&gt;chararray&lt;/code&gt; ，仅在必要时才复制数据。</target>
        </trans-unit>
        <trans-unit id="98730b39eb982a451cdb3b14184177191517f090" translate="yes" xml:space="preserve">
          <source>Convert the input to a masked array of the given data-type.</source>
          <target state="translated">将输入转换为给定数据类型的掩码数组。</target>
        </trans-unit>
        <trans-unit id="049b0255d3e880a109ec0e5f8d964f2db189e876" translate="yes" xml:space="preserve">
          <source>Convert the input to a masked array, conserving subclasses.</source>
          <target state="translated">将输入转换为屏蔽数组,保存子类。</target>
        </trans-unit>
        <trans-unit id="ff8828938f9435e62b42845c72c1f7535705ef18" translate="yes" xml:space="preserve">
          <source>Convert the input to an array, checking for NaNs or Infs.</source>
          <target state="translated">将输入转换为数组,检查是否有NaNs或Infs。</target>
        </trans-unit>
        <trans-unit id="a3dfbf8e7020f742fa20a33d892353893c53d156" translate="yes" xml:space="preserve">
          <source>Convert the input to an array.</source>
          <target state="translated">将输入转换为一个数组。</target>
        </trans-unit>
        <trans-unit id="a8a1ee418db1bf6815f8924edb3f1ae12bdde4d6" translate="yes" xml:space="preserve">
          <source>Convert the input to an ndarray, but pass ndarray subclasses through.</source>
          <target state="translated">将输入转换为ndarray,但通过ndarray子类。</target>
        </trans-unit>
        <trans-unit id="7e4e1bb160f7f12732c4b9f9c2fff13135191fc1" translate="yes" xml:space="preserve">
          <source>Convert to an ndarray, but pass through ndarray subclasses.</source>
          <target state="translated">转换为ndarray,但要通过ndarray子类。</target>
        </trans-unit>
        <trans-unit id="0bf45673533df66645f8a1830f766ff21a3245ff" translate="yes" xml:space="preserve">
          <source>Convert to float.</source>
          <target state="translated">转换为浮点数。</target>
        </trans-unit>
        <trans-unit id="4d25fc1fde9972ce3ca1a8543e86c1eba0e323da" translate="yes" xml:space="preserve">
          <source>Convert to int.</source>
          <target state="translated">转换为int。</target>
        </trans-unit>
        <trans-unit id="7cc45909f5c77c707373cc2714501a4d53754e23" translate="yes" xml:space="preserve">
          <source>Convert to long.</source>
          <target state="translated">转换为长。</target>
        </trans-unit>
        <trans-unit id="3ae1f71abfac0c88927feea8e530f4f046de5146" translate="yes" xml:space="preserve">
          <source>Convert typestring characters (with &lt;em&gt;itemsize&lt;/em&gt;) to basic enumerated data types. The typestring character corresponding to signed and unsigned integers, floating point numbers, and complex-floating point numbers are recognized and converted. Other values of gentype are returned. This function can be used to convert, for example, the string &amp;lsquo;f4&amp;rsquo; to &lt;a href=&quot;c-api.dtype#c.NPY_FLOAT32&quot;&gt;&lt;code&gt;NPY_FLOAT32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将typestring字符（带有&lt;em&gt;itemsize&lt;/em&gt;）转换为基本的枚举数据类型。识别并转换与带符号和无符号整数，浮点数和复数浮点数相对应的typestring字符。返回基因型的其他值。该函数可用于将字符串'f4'转换为&lt;a href=&quot;c-api.dtype#c.NPY_FLOAT32&quot;&gt; &lt;code&gt;NPY_FLOAT32&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e546d48fddfc2b2309057fe0163a99c4890872bf" translate="yes" xml:space="preserve">
          <source>Converting data types</source>
          <target state="translated">转换数据类型</target>
        </trans-unit>
        <trans-unit id="7742f5240e1d4873e47ef6d80ce8f9d7eed5d915" translate="yes" xml:space="preserve">
          <source>Converting from Previous NumPy Iterators</source>
          <target state="translated">从以前的NumPy迭代器转换而来</target>
        </trans-unit>
        <trans-unit id="39ce420f01e01a6e4767054eb7e780c8c56e6e83" translate="yes" xml:space="preserve">
          <source>Converts a double-precision float to a half-precision float. The value is rounded to the nearest representable half, with ties going to the nearest even. If the value is too small or too big, the system&amp;rsquo;s floating point underflow or overflow bit will be set.</source>
          <target state="translated">将双精度浮点数转换为半精度浮点数。该值将四舍五入到最接近的可表示一半，并把关系四舍五入到最接近的偶数。如果该值太小或太大，将设置系统的浮点下溢或溢出位。</target>
        </trans-unit>
        <trans-unit id="e78be2704a6f40b5c4f51bfc40fd50007ac5b7c1" translate="yes" xml:space="preserve">
          <source>Converts a flat index or array of flat indices into a tuple of coordinate arrays.</source>
          <target state="translated">将一个平面索引或平面索引数组转换为一个坐标数组的元组。</target>
        </trans-unit>
        <trans-unit id="ff19be80738f9cb33fa734371385cb9e202a0fe3" translate="yes" xml:space="preserve">
          <source>Converts a half-precision float to a double-precision float.</source>
          <target state="translated">将半精度的浮点数转换为双精度的浮点数。</target>
        </trans-unit>
        <trans-unit id="225d72d1ef1fe464a60bf24f2bcd8995f6d8fb0b" translate="yes" xml:space="preserve">
          <source>Converts a half-precision float to a single-precision float.</source>
          <target state="translated">将半精度的浮点数转换为单精度的浮点数。</target>
        </trans-unit>
        <trans-unit id="b56df4d4b865c9ec05a120e856faf6520f962717" translate="yes" xml:space="preserve">
          <source>Converts a single-precision float to a half-precision float. The value is rounded to the nearest representable half, with ties going to the nearest even. If the value is too small or too big, the system&amp;rsquo;s floating point underflow or overflow bit will be set.</source>
          <target state="translated">将单精度浮点数转换为半精度浮点数。该值将四舍五入到最接近的可表示一半，并把关系四舍五入到最接近的偶数。如果该值太小或太大，将设置系统的浮点下溢或溢出位。</target>
        </trans-unit>
        <trans-unit id="5a3ee1fe16ee1828b519f490c6bae9191c320478" translate="yes" xml:space="preserve">
          <source>Converts a tuple of index arrays into an array of flat indices, applying boundary modes to the multi-index.</source>
          <target state="translated">将一个索引数组的元组转换为一个平面索引数组,对多索引应用边界模式。</target>
        </trans-unit>
        <trans-unit id="4d7fdb170c1f22bd4d4e265e352eb1cd10b68118" translate="yes" xml:space="preserve">
          <source>Converts either a sequence of clipmodes or a single clipmode into a C array of &lt;a href=&quot;#c.NPY_CLIPMODE&quot;&gt;&lt;code&gt;NPY_CLIPMODE&lt;/code&gt;&lt;/a&gt; values. The number of clipmodes &lt;em&gt;n&lt;/em&gt; must be known before calling this function. This function is provided to help functions allow a different clipmode for each dimension.</source>
          <target state="translated">将剪辑模式序列或单个剪辑模式转换为&lt;a href=&quot;#c.NPY_CLIPMODE&quot;&gt; &lt;code&gt;NPY_CLIPMODE&lt;/code&gt; &lt;/a&gt;值的C数组。调用此函数之前，必须知道clipmodes的数量&lt;em&gt;n&lt;/em&gt;。提供此功能是为了帮助功能允许每个尺寸使用不同的裁剪模式。</target>
        </trans-unit>
        <trans-unit id="250dc78cc5a9ee71a58ec6ac7dd196d5163a36c3" translate="yes" xml:space="preserve">
          <source>Convolve two arrays using the Fast Fourier Transform.</source>
          <target state="translated">使用快速傅里叶变换对两个数组进行卷积。</target>
        </trans-unit>
        <trans-unit id="576bd4ebce16db77995374ff7c034483bd0ae542" translate="yes" xml:space="preserve">
          <source>Cooley, James W., and John W. Tukey, 1965, &amp;ldquo;An algorithm for the machine calculation of complex Fourier series,&amp;rdquo; &lt;em&gt;Math. Comput.&lt;/em&gt; 19: 297-301.</source>
          <target state="translated">Cooley，James W.和John W. Tukey，1965年，&amp;ldquo;一种用于复杂傅里叶级数机器计算的算法&amp;rdquo;，&lt;em&gt;数学。计算 &lt;/em&gt;19：297-301。</target>
        </trans-unit>
        <trans-unit id="6c00b1c278cb1ce0a4df76e32fd03a9e07108220" translate="yes" xml:space="preserve">
          <source>Copies values from one array to another, broadcasting as necessary.</source>
          <target state="translated">将数值从一个数组复制到另一个数组,必要时进行广播。</target>
        </trans-unit>
        <trans-unit id="c60275d5c5be7a657ffd107291e98055ec17c0e9" translate="yes" xml:space="preserve">
          <source>Copy an element of an array to a standard Python scalar and return it.</source>
          <target state="translated">将数组中的一个元素复制到一个标准的Python标量中并返回。</target>
        </trans-unit>
        <trans-unit id="da203dab271c623df22148990806ffd79128f7db" translate="yes" xml:space="preserve">
          <source>Copy from the source array, &lt;code&gt;src&lt;/code&gt;, into the destination array, &lt;code&gt;dest&lt;/code&gt;, performing a data-type conversion if necessary. If an error occurs return -1 (otherwise 0). The shape of &lt;code&gt;src&lt;/code&gt; must be broadcastable to the shape of &lt;code&gt;dest&lt;/code&gt;. The data areas of dest and src must not overlap.</source>
          <target state="translated">从源数组 &lt;code&gt;src&lt;/code&gt; 复制到目标数组 &lt;code&gt;dest&lt;/code&gt; ，如有必要，执行数据类型转换。如果发生错误，则返回-1（否则为0）。 &lt;code&gt;src&lt;/code&gt; 的形状必须可以广播为 &lt;code&gt;dest&lt;/code&gt; 的形状。dest和src的数据区域不得重叠。</target>
        </trans-unit>
        <trans-unit id="9cf4b88f8aea8dc3032e39289c48a6f6e4000cca" translate="yes" xml:space="preserve">
          <source>Copy of self.</source>
          <target state="translated">自我的副本。</target>
        </trans-unit>
        <trans-unit id="0f7a2502580eeb2a37c3da78f6d85e2d28d19dcb" translate="yes" xml:space="preserve">
          <source>Copy of the array, cast to a specified type.</source>
          <target state="translated">数组的副本,投向指定的类型。</target>
        </trans-unit>
        <trans-unit id="1855ebfecee0e89a08817f0c462727dd9e51acd0" translate="yes" xml:space="preserve">
          <source>Copy the mask and set the sharedmask flag to False.</source>
          <target state="translated">复制掩码并将sharedmask标志设置为False。</target>
        </trans-unit>
        <trans-unit id="eda7f5e21aefc109d198cff2108b69be2a88ea2f" translate="yes" xml:space="preserve">
          <source>Copy-on-write memmap:</source>
          <target state="translated">写入时复制记忆图。</target>
        </trans-unit>
        <trans-unit id="9efdf61f90e514f177252ac8197d7a3fecad778b" translate="yes" xml:space="preserve">
          <source>Copy-on-write: assignments affect data in memory, but changes are not saved to disk. The file on disk is read-only.</source>
          <target state="translated">写入时复制:分配会影响内存中的数据,但更改不会保存到磁盘上。磁盘上的文件是只读的。</target>
        </trans-unit>
        <trans-unit id="5b33d787803ee72e85555afb13ca15c7e8e68b1e" translate="yes" xml:space="preserve">
          <source>Core Dimension</source>
          <target state="translated">核心尺寸</target>
        </trans-unit>
        <trans-unit id="a935f62f1a313ebc5f0b4349a182f187ea660c8d" translate="yes" xml:space="preserve">
          <source>Core dimensions assigned to the same label in the signature (e.g. the &lt;code&gt;i&lt;/code&gt; in &lt;code&gt;inner1d&lt;/code&gt;&amp;rsquo;s &lt;code&gt;(i),(i)-&amp;gt;()&lt;/code&gt;) must have exactly matching sizes, no broadcasting is performed.</source>
          <target state="translated">在签名分配给相同的标签芯尺寸（例如在 &lt;code&gt;i&lt;/code&gt; 在 &lt;code&gt;inner1d&lt;/code&gt; 的 &lt;code&gt;(i),(i)-&amp;gt;()&lt;/code&gt; ）必须具有精确匹配的大小，则不执行广播。</target>
        </trans-unit>
        <trans-unit id="a85e68f4d74fe8012fbcc947dee9e830301ccda9" translate="yes" xml:space="preserve">
          <source>Core dimensions assigned to the same label in the signature must have exactly matching sizes, no broadcasting is performed.</source>
          <target state="translated">签名中分配给同一标签的核心尺寸必须有完全匹配的尺寸,不进行广播。</target>
        </trans-unit>
        <trans-unit id="77d90b4a2e78538417c275f69722b0ac5a0a99f5" translate="yes" xml:space="preserve">
          <source>Core dimensions of each input or output array are represented by a list of dimension names in parentheses, &lt;code&gt;(i_1,...,i_N)&lt;/code&gt;; a scalar input/output is denoted by &lt;code&gt;()&lt;/code&gt;. Instead of &lt;code&gt;i_1&lt;/code&gt;, &lt;code&gt;i_2&lt;/code&gt;, etc, one can use any valid Python variable name.</source>
          <target state="translated">每个输入或输出数组的核心尺寸由括号中的尺寸名称列表 &lt;code&gt;(i_1,...,i_N)&lt;/code&gt; 表示；标量输入/输出由 &lt;code&gt;()&lt;/code&gt; 表示。可以使用任何有效的Python变量名称代替 &lt;code&gt;i_1&lt;/code&gt; ， &lt;code&gt;i_2&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="74fda43cf5b94de17f1701a1daa8838cd689d1ac" translate="yes" xml:space="preserve">
          <source>Core signature string</source>
          <target state="translated">核心签名字符串</target>
        </trans-unit>
        <trans-unit id="9a73d7eeec664afb4494a9c7d06291968be1807f" translate="yes" xml:space="preserve">
          <source>Cormen, &amp;ldquo;Introduction to Algorithms&amp;rdquo;, Chapter 15.2, p. 370-378</source>
          <target state="translated">Cormen，&amp;ldquo;算法简介&amp;rdquo;，第15.2章，第1页。370-378</target>
        </trans-unit>
        <trans-unit id="e09f45c90809a295b044ca045b6666387613a15c" translate="yes" xml:space="preserve">
          <source>Correlating</source>
          <target state="translated">Correlating</target>
        </trans-unit>
        <trans-unit id="c3ffb59304cd35f5989ecead23c1e787437b571d" translate="yes" xml:space="preserve">
          <source>Correspondingly, when the spectrum is purely real, the signal is Hermitian. The &lt;a href=&quot;generated/numpy.fft.hfft#numpy.fft.hfft&quot;&gt;&lt;code&gt;hfft&lt;/code&gt;&lt;/a&gt; family of functions exploits this symmetry by using &lt;code&gt;n/2+1&lt;/code&gt; complex points in the input (time) domain for &lt;code&gt;n&lt;/code&gt; real points in the frequency domain.</source>
          <target state="translated">相应地，当频谱是纯实数时，信号就是厄米（Hermitian）。所述&lt;a href=&quot;generated/numpy.fft.hfft#numpy.fft.hfft&quot;&gt; &lt;code&gt;hfft&lt;/code&gt; &lt;/a&gt;系列函数通过使用利用这种对称 &lt;code&gt;n/2+1&lt;/code&gt; 中的输入（时间）域复杂点 &lt;code&gt;n&lt;/code&gt; 在频域中实际点。</target>
        </trans-unit>
        <trans-unit id="ef15bde640af7d5282d372b3668304d3b57605b8" translate="yes" xml:space="preserve">
          <source>Cosine element-wise.</source>
          <target state="translated">余弦元素方面。</target>
        </trans-unit>
        <trans-unit id="f85bd4ac12155f7ab384c763ede09ca77aca792b" translate="yes" xml:space="preserve">
          <source>Count masked elements in array or along a given axis.</source>
          <target state="translated">在数组中或沿着给定的轴计算被掩码的元素。</target>
        </trans-unit>
        <trans-unit id="dc43a8e6604d12ce95e869b8a107c8a135d37cfb" translate="yes" xml:space="preserve">
          <source>Count non-masked elements.</source>
          <target state="translated">计算非屏蔽元素。</target>
        </trans-unit>
        <trans-unit id="fcd7647bccacf473f6f7538a24a5d644b1446db8" translate="yes" xml:space="preserve">
          <source>Count number of occurrences of each value in array of non-negative ints.</source>
          <target state="translated">统计非负数英特数组中每个值的出现次数。</target>
        </trans-unit>
        <trans-unit id="32c1e63927fc36a57080f439614d4f3a9e9a4010" translate="yes" xml:space="preserve">
          <source>Count the non-masked elements of the array along the given axis.</source>
          <target state="translated">沿着给定的轴计算数组中的非屏蔽元素。</target>
        </trans-unit>
        <trans-unit id="f478aa803be450d56ad50466a52a872cccc5840c" translate="yes" xml:space="preserve">
          <source>Count the number of masked elements along the given axis.</source>
          <target state="translated">沿着给定的轴计算被掩盖的元素数量。</target>
        </trans-unit>
        <trans-unit id="78bd22c42b14c011a02df9e7d1c6c3966b587ac6" translate="yes" xml:space="preserve">
          <source>Counter to use in the Philox state. Can be either a Python int (long in 2.x) in [0, 2**256) or a 4-element uint64 array. If not provided, the RNG is initialized at 0.</source>
          <target state="translated">在Philox状态下使用的计数器。可以是一个Python int (2.x中的long),在[0,2**256)或一个4元素的uint64数组。如果没有提供,RNG初始化为0。</target>
        </trans-unit>
        <trans-unit id="7810ca2eec9994e430b34bfbe7314516c25672d5" translate="yes" xml:space="preserve">
          <source>Counting</source>
          <target state="translated">Counting</target>
        </trans-unit>
        <trans-unit id="341d54df06a257a5db8eb7bb0f7914e4712491fe" translate="yes" xml:space="preserve">
          <source>Counting the missing elements</source>
          <target state="translated">计算缺失的元素</target>
        </trans-unit>
        <trans-unit id="e51f7ebad6498090d852d60e0437352e55df1b6d" translate="yes" xml:space="preserve">
          <source>Counts how many valid days are in a half-open date range.</source>
          <target state="translated">计算半开放日期范围内的有效天数。</target>
        </trans-unit>
        <trans-unit id="ab06dd416d9201cfa1a776030c3073f0f296ef5c" translate="yes" xml:space="preserve">
          <source>Counts the number of non-zero elements in the array object &lt;em&gt;self&lt;/em&gt;.</source>
          <target state="translated">计算数组对象&lt;em&gt;self中&lt;/em&gt;非零元素的数量。</target>
        </trans-unit>
        <trans-unit id="35b1783f22a005e4a0e9aa8326071116370e26da" translate="yes" xml:space="preserve">
          <source>Counts the number of non-zero elements in the input array.</source>
          <target state="translated">计算输入数组中非零元素的数量。</target>
        </trans-unit>
        <trans-unit id="c93aeb4f5df8b4c7a7489b48cdc9da95b95d9241" translate="yes" xml:space="preserve">
          <source>Counts the number of non-zero values in the array &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">计算数组 &lt;code&gt;a&lt;/code&gt; 中非零值的数量。</target>
        </trans-unit>
        <trans-unit id="a82b9a1216f695b2de1af812d1dbbca1ab80309a" translate="yes" xml:space="preserve">
          <source>Counts the number of valid days between &lt;code&gt;begindates&lt;/code&gt; and &lt;code&gt;enddates&lt;/code&gt;, not including the day of &lt;code&gt;enddates&lt;/code&gt;.</source>
          <target state="translated">计算开始 &lt;code&gt;begindates&lt;/code&gt; 和 &lt;code&gt;enddates&lt;/code&gt; 日期之间的有效天数，不包括结束 &lt;code&gt;enddates&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0acc19acc7d5ef1e19db778f62f9ff93707d13fa" translate="yes" xml:space="preserve">
          <source>Covariance indicates the level to which two variables vary together. From the multivariate normal distribution, we draw N-dimensional samples,</source>
          <target state="translated">协方差表示两个变量共同变化的程度。从多元正态分布中,我们抽取N维样本。</target>
        </trans-unit>
        <trans-unit id="146d5410def5b1425b9181e3a3d6c9a98ceaffcd" translate="yes" xml:space="preserve">
          <source>Covariance indicates the level to which two variables vary together. If we examine N-dimensional samples,</source>
          <target state="translated">协方差表示两个变量共同变化的程度。如果我们研究N维样本。</target>
        </trans-unit>
        <trans-unit id="7e3640f844cf3cff392814080ea6e4fc7ebf5942" translate="yes" xml:space="preserve">
          <source>Covariance matrix</source>
          <target state="translated">协方差矩阵</target>
        </trans-unit>
        <trans-unit id="ba1dce691b3dd8e45383b40c4c84fa04284a8fb4" translate="yes" xml:space="preserve">
          <source>Covariance matrix of the distribution. It must be symmetric and positive-semidefinite for proper sampling.</source>
          <target state="translated">分布的协方差矩阵。它必须是对称的,而且是正-精确定位的,以便进行适当的抽样。</target>
        </trans-unit>
        <trans-unit id="e198169e22830014df6d95b3cbbb568dc11dce1f" translate="yes" xml:space="preserve">
          <source>Create a 2-D array with the flattened input as a diagonal.</source>
          <target state="translated">创建一个以扁平化输入为对角线的二维数组。</target>
        </trans-unit>
        <trans-unit id="a59869cacd92085b66bb144f1578d32820c3bbe9" translate="yes" xml:space="preserve">
          <source>Create a &lt;a href=&quot;generated/numpy.char.chararray#numpy.char.chararray&quot;&gt;&lt;code&gt;chararray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">创建一个&lt;a href=&quot;generated/numpy.char.chararray#numpy.char.chararray&quot;&gt; &lt;code&gt;chararray&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e8c7020003f7473689a082f3999dbe024d7d290f" translate="yes" xml:space="preserve">
          <source>Create a &lt;a href=&quot;generated/numpy.chararray#numpy.chararray&quot;&gt;&lt;code&gt;chararray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">创建一个&lt;a href=&quot;generated/numpy.chararray#numpy.chararray&quot;&gt; &lt;code&gt;chararray&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cf1fd6b11165877b30f8adf628ec7e27985f2765" translate="yes" xml:space="preserve">
          <source>Create a &lt;a href=&quot;numpy.char.chararray#numpy.char.chararray&quot;&gt;&lt;code&gt;chararray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">创建一个&lt;a href=&quot;numpy.char.chararray#numpy.char.chararray&quot;&gt; &lt;code&gt;chararray&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c66092d36950339cb427dfcbe2dfba19b7f580ca" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;chararray&lt;/code&gt;.</source>
          <target state="translated">创建一个 &lt;code&gt;chararray&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="053bb3dd5cd61ee6d9da229f972809abcee13ee6" translate="yes" xml:space="preserve">
          <source>Create a boolean mask from an array.</source>
          <target state="translated">从一个数组中创建一个布尔掩码。</target>
        </trans-unit>
        <trans-unit id="d93c678b3ed0b4d36476f41968f0182b90056627" translate="yes" xml:space="preserve">
          <source>Create a data type object.</source>
          <target state="translated">创建一个数据类型对象。</target>
        </trans-unit>
        <trans-unit id="a87756a536e33363736738458832ff08b923fefb" translate="yes" xml:space="preserve">
          <source>Create a data-type.</source>
          <target state="translated">创建一个数据类型。</target>
        </trans-unit>
        <trans-unit id="93eb0ae31609f0ed48c3c5dfd8b5a3cb8402ac97" translate="yes" xml:space="preserve">
          <source>Create a matrix of the given shape and propagate it with random samples from a uniform distribution over &lt;code&gt;[0, 1)&lt;/code&gt;.</source>
          <target state="translated">创建给定形状的矩阵，并将其与 &lt;code&gt;[0, 1)&lt;/code&gt; 均匀分布的随机样本一起传播。</target>
        </trans-unit>
        <trans-unit id="c295b748c8517694492f48fd31f9b376f9c645c8" translate="yes" xml:space="preserve">
          <source>Create a memmap with dtype and shape that matches our data:</source>
          <target state="translated">创建一个与我们的数据相匹配的dtype和形状的memmap。</target>
        </trans-unit>
        <trans-unit id="19e2c3798e7032d352bdeb16a194e1b2b2271bab" translate="yes" xml:space="preserve">
          <source>Create a memory-map to an array stored in a &lt;em&gt;binary&lt;/em&gt; file on disk.</source>
          <target state="translated">创建到存储在磁盘上的&lt;em&gt;二进制&lt;/em&gt;文件中的数组的内存映射。</target>
        </trans-unit>
        <trans-unit id="8a87bd8b7d3a950e18b45a000e101dc7d4817b57" translate="yes" xml:space="preserve">
          <source>Create a memory-map to an array stored in a binary file on disk.</source>
          <target state="translated">为存储在磁盘上的二进制文件中的阵列创建一个内存映射。</target>
        </trans-unit>
        <trans-unit id="177322a71483684c72dfc2b3215cca2baa8b7843" translate="yes" xml:space="preserve">
          <source>Create a memory-map to an array stored in a file on disk.</source>
          <target state="translated">为存储在磁盘文件中的阵列创建一个内存映射。</target>
        </trans-unit>
        <trans-unit id="dd122b2ab92f93dade4d0598cccec22c13f3cc51" translate="yes" xml:space="preserve">
          <source>Create a new 1-dimensional array from an iterable object.</source>
          <target state="translated">从一个可迭代对象创建一个新的一维数组。</target>
        </trans-unit>
        <trans-unit id="da0150ead372af08b1b57e37f89fc0a11de82d56" translate="yes" xml:space="preserve">
          <source>Create a new array with the provided data-type descriptor, &lt;em&gt;descr&lt;/em&gt;, of the shape determined by &lt;em&gt;nd&lt;/em&gt; and &lt;em&gt;dims&lt;/em&gt;.</source>
          <target state="translated">使用提供的数据类型描述符&lt;em&gt;descr&lt;/em&gt;创建一个新数组，该描述符的形状由&lt;em&gt;nd&lt;/em&gt;和&lt;em&gt;dims&lt;/em&gt;确定。</target>
        </trans-unit>
        <trans-unit id="66aa9bc65510d6c47313fc8c574666e0fb6ecdf0" translate="yes" xml:space="preserve">
          <source>Create a new broadcasting universal function from required variables. Each ufunc builds around the notion of an element-by-element operation. Each ufunc object contains pointers to 1-d loops implementing the basic functionality for each supported type.</source>
          <target state="translated">从所需变量创建一个新的广播通用函数。每个ufunc都是围绕着逐个元素操作的概念建立的。每个ufunc对象都包含指向实现每个支持类型的基本功能的1-d循环的指针。</target>
        </trans-unit>
        <trans-unit id="4a2f526f17ce7c95e1ecc2546f61cdc127fd9387" translate="yes" xml:space="preserve">
          <source>Create a new data-type object from the built-in (or user-registered) data-type indicated by &lt;em&gt;typenum&lt;/em&gt;. All builtin types should not have any of their fields changed. This creates a new copy of the &lt;a href=&quot;c-api.types-and-structures#c.PyArray_Descr&quot;&gt;&lt;code&gt;PyArray_Descr&lt;/code&gt;&lt;/a&gt; structure so that you can fill it in as appropriate. This function is especially needed for flexible data-types which need to have a new elsize member in order to be meaningful in array construction.</source>
          <target state="translated">根据&lt;em&gt;typenum&lt;/em&gt;指示的内置（或用户注册）数据类型创建一个新的数据类型对象。所有内置类型都不应更改其任何字段。这将创建&lt;a href=&quot;c-api.types-and-structures#c.PyArray_Descr&quot;&gt; &lt;code&gt;PyArray_Descr&lt;/code&gt; &lt;/a&gt;结构的新副本，以便您可以适当地填写它。对于需要具有新的elsize成员才能在数组构造中有意义的灵活数据类型，尤其需要此功能。</target>
        </trans-unit>
        <trans-unit id="2566b193178a539463843e8aa80394649f42e4a2" translate="yes" xml:space="preserve">
          <source>Create a new data-type object with the byteorder set according to &lt;em&gt;newendian&lt;/em&gt;. All referenced data-type objects (in subdescr and fields members of the data-type object) are also changed (recursively). If a byteorder of &lt;code&gt;NPY_IGNORE&lt;/code&gt; is encountered it is left alone. If newendian is &lt;code&gt;NPY_SWAP&lt;/code&gt;, then all byte-orders are swapped. Other valid newendian values are &lt;code&gt;NPY_NATIVE&lt;/code&gt;, &lt;code&gt;NPY_LITTLE&lt;/code&gt;, and &lt;code&gt;NPY_BIG&lt;/code&gt; which all cause the returned data-typed descriptor (and all it&amp;rsquo;s referenced data-type descriptors) to have the corresponding byte- order.</source>
          <target state="translated">创建具有根据字节顺序集的新数据类型对象&lt;em&gt;newendian&lt;/em&gt;。所有引用的数据类型对象（在数据类型对象的subdescr和field成员中）也都进行了更改（递归）。如果遇到NPY_IGNORE的 &lt;code&gt;NPY_IGNORE&lt;/code&gt; 顺序，则将其保留。如果newendian为 &lt;code&gt;NPY_SWAP&lt;/code&gt; ，则所有字节顺序都将交换。其他有效的newendian值是 &lt;code&gt;NPY_NATIVE&lt;/code&gt; ， &lt;code&gt;NPY_LITTLE&lt;/code&gt; 和 &lt;code&gt;NPY_BIG&lt;/code&gt; ，它们都使返回的数据类型的描述符（及其所有引用的数据类型的描述符）具有相应的字节顺序。</target>
        </trans-unit>
        <trans-unit id="f6986303dc6f9f6f31cfc3c9b4f4566a4e6fb42d" translate="yes" xml:space="preserve">
          <source>Create a new masked array from scratch.</source>
          <target state="translated">从头创建一个新的掩码数组。</target>
        </trans-unit>
        <trans-unit id="db4af2ef3a8605462d0c80d1288e39839d7838af" translate="yes" xml:space="preserve">
          <source>Create a new uninitialized array of type, &lt;em&gt;typenum&lt;/em&gt;, whose size in each of &lt;em&gt;nd&lt;/em&gt; dimensions is given by the integer array, &lt;em&gt;dims&lt;/em&gt;.The memory for the array is uninitialized (unless typenum is &lt;a href=&quot;c-api.dtype#c.NPY_OBJECT&quot;&gt;&lt;code&gt;NPY_OBJECT&lt;/code&gt;&lt;/a&gt; in which case each element in the array is set to NULL). The &lt;em&gt;typenum&lt;/em&gt; argument allows specification of any of the builtin data-types such as &lt;a href=&quot;c-api.dtype#c.NPY_FLOAT&quot;&gt;&lt;code&gt;NPY_FLOAT&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;c-api.dtype#c.NPY_LONG&quot;&gt;&lt;code&gt;NPY_LONG&lt;/code&gt;&lt;/a&gt;. The memory for the array can be set to zero if desired using &lt;a href=&quot;#c.PyArray_FILLWBYTE&quot;&gt;&lt;code&gt;PyArray_FILLWBYTE&lt;/code&gt;&lt;/a&gt; (return_object, 0).This function cannot be used to create a flexible-type array (no itemsize given).</source>
          <target state="translated">创建类型，一个新的未初始化数组&lt;em&gt;typenum&lt;/em&gt;，其大小在每个&lt;em&gt;ND&lt;/em&gt;尺寸由整数数组给定，&lt;em&gt;变暗&lt;/em&gt;用于阵列.The存储器时不被初始化（除非typenum是&lt;a href=&quot;c-api.dtype#c.NPY_OBJECT&quot;&gt; &lt;code&gt;NPY_OBJECT&lt;/code&gt; &lt;/a&gt;在这种情况下，阵列中的每个元素被设置为NULL ）。所述&lt;em&gt;typenum&lt;/em&gt;参数允许的任何内建的数据类型，如规范&lt;a href=&quot;c-api.dtype#c.NPY_FLOAT&quot;&gt; &lt;code&gt;NPY_FLOAT&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;c-api.dtype#c.NPY_LONG&quot;&gt; &lt;code&gt;NPY_LONG&lt;/code&gt; &lt;/a&gt;。如果需要，可以使用&lt;a href=&quot;#c.PyArray_FILLWBYTE&quot;&gt; &lt;code&gt;PyArray_FILLWBYTE&lt;/code&gt; &lt;/a&gt;（return_object，0）将数组的内存设置为零。此函数不能用于创建灵活类型的数组（未提供项大小）。</target>
        </trans-unit>
        <trans-unit id="6c0c8b6de66490941ae490fc29850f004942457f" translate="yes" xml:space="preserve">
          <source>Create a new, empty record array:</source>
          <target state="translated">创建一个新的、空的记录数组。</target>
        </trans-unit>
        <trans-unit id="12be6a102aebbe485e0f4ef96e897bf893ee3bfe" translate="yes" xml:space="preserve">
          <source>Create a numpy array from a ctypes array or POINTER.</source>
          <target state="translated">从ctypes数组或POINTER创建一个numpy数组。</target>
        </trans-unit>
        <trans-unit id="00bebe7beba9d200b07101646c92c66e5cd00025" translate="yes" xml:space="preserve">
          <source>Create a set of indices to access the diagonal of a (4, 4) array:</source>
          <target state="translated">创建一组索引来访问(4,4)数组的对角线。</target>
        </trans-unit>
        <trans-unit id="108a4b49ad391d95a892bf9a02c53f664759b30e" translate="yes" xml:space="preserve">
          <source>Create a standard ndarray and convert it to a record array, using &lt;code&gt;arr.view(np.recarray)&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;arr.view(np.recarray)&lt;/code&gt; 创建一个标准ndarray并将其转换为记录数组</target>
        </trans-unit>
        <trans-unit id="c5cd4653ebf1e7a39dd1a7fde57d136d86e370ff" translate="yes" xml:space="preserve">
          <source>Create a tuple of &lt;a href=&quot;numpy.nditer#numpy.nditer&quot;&gt;&lt;code&gt;nditer&lt;/code&gt;&lt;/a&gt; objects which iterate in nested loops over different axes of the op argument. The first iterator is used in the outermost loop, the last in the innermost loop. Advancing one will change the subsequent iterators to point at its new element.</source>
          <target state="translated">创建一个&lt;a href=&quot;numpy.nditer#numpy.nditer&quot;&gt; &lt;code&gt;nditer&lt;/code&gt; &lt;/a&gt;对象元组，该对象在op参数的不同轴上的嵌套循环中进行迭代。第一个迭代器在最外层循环中使用，最后一个在最内层循环中使用。前进一个将更改后续的迭代器以指向其新元素。</target>
        </trans-unit>
        <trans-unit id="0fc61fbee0ed5e8baf16ecef1179e57ba0313e61" translate="yes" xml:space="preserve">
          <source>Create a two-dimensional array with the flattened input as a diagonal.</source>
          <target state="translated">创建一个以扁平化输入为对角线的二维数组。</target>
        </trans-unit>
        <trans-unit id="137fea567dac73b2d57dd9dfb89ded4439c13d56" translate="yes" xml:space="preserve">
          <source>Create a view into the array with the given shape and strides.</source>
          <target state="translated">用给定的形状和步幅在数组中创建一个视图。</target>
        </trans-unit>
        <trans-unit id="81d0dc00ee9f15e21759f9f0bec711bb9bd505df" translate="yes" xml:space="preserve">
          <source>Create an array from an iterator.</source>
          <target state="translated">从迭代器中创建一个数组。</target>
        </trans-unit>
        <trans-unit id="925f773d387b010ea0e8a6321db588428ffb283e" translate="yes" xml:space="preserve">
          <source>Create an array from binary file data</source>
          <target state="translated">从二进制文件数据中创建一个数组</target>
        </trans-unit>
        <trans-unit id="d2e4e179d70e58136861749bef7d847f8a1e83ea" translate="yes" xml:space="preserve">
          <source>Create an array of the given shape and populate it with random samples from a uniform distribution over &lt;code&gt;[0, 1)&lt;/code&gt;.</source>
          <target state="translated">创建给定形状的数组，并使用 &lt;code&gt;[0, 1)&lt;/code&gt; 均匀分布的随机样本填充它。</target>
        </trans-unit>
        <trans-unit id="8ef83bcd085ae088871cf8b9cc78b6a1d61e3207" translate="yes" xml:space="preserve">
          <source>Create an array with two fields, &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;:</source>
          <target state="translated">创建一个具有两个字段 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的数组：</target>
        </trans-unit>
        <trans-unit id="1a31fd94f016f355d7832212f15cccc2bc9c1da3" translate="yes" xml:space="preserve">
          <source>Create an array wrapper around &lt;em&gt;data&lt;/em&gt; pointed to by the given pointer. The array flags will have a default that the data area is well-behaved and C-style contiguous. The shape of the array is given by the &lt;em&gt;dims&lt;/em&gt; c-array of length &lt;em&gt;nd&lt;/em&gt;. The data-type of the array is indicated by &lt;em&gt;typenum&lt;/em&gt;. If data comes from another reference-counted Python object, the reference count on this object should be increased after the pointer is passed in, and the base member of the returned ndarray should point to the Python object that owns the data. This will ensure that the provided memory is not freed while the returned array is in existence. To free memory as soon as the ndarray is deallocated, set the OWNDATA flag on the returned ndarray.</source>
          <target state="translated">创建围绕给定指针指向的&lt;em&gt;数据&lt;/em&gt;的数组包装器。数组标志的默认值是数据区域行为良好且C样式连续。数组的形状由长度为&lt;em&gt;nd&lt;/em&gt;的&lt;em&gt;dims&lt;/em&gt; c-array给出。数组的数据类型由&lt;em&gt;typenum&lt;/em&gt;表示。如果数据来自另一个引用计数的Python对象，则在传入指针后应增加此对象的引用计数，并且返回的ndarray的基本成员应指向拥有该数据的Python对象。这将确保在返回的数组存在时不会释放提供的内存。要释放ndarray后立即释放内存，请在返回的ndarray上设置OWNDATA标志。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="47d4d6e775fe88f4b80d5ea4c370f0f98678742c" translate="yes" xml:space="preserve">
          <source>Create an array x, with a reference y and a copy z:</source>
          <target state="translated">创建一个数组x,有一个参考值y和一个副本z。</target>
        </trans-unit>
        <trans-unit id="edf37af870193c853e5704f79fa46afda7f8ab49" translate="yes" xml:space="preserve">
          <source>Create an array, but leave its allocated memory unchanged (i.e., it contains &amp;ldquo;garbage&amp;rdquo;).</source>
          <target state="translated">创建一个数组，但保留其分配的内存不变（即，它包含&amp;ldquo;垃圾&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="f8c0528bb084a014ea88bd25616f60c460edbaf2" translate="yes" xml:space="preserve">
          <source>Create an array, each element of which is zero.</source>
          <target state="translated">创建一个数组,每个元素为零。</target>
        </trans-unit>
        <trans-unit id="415b3ad3f5d5fec6811715fcb43c61600d019de3" translate="yes" xml:space="preserve">
          <source>Create an array.</source>
          <target state="translated">创建一个数组。</target>
        </trans-unit>
        <trans-unit id="efc38388dbd54fefe6577db0dc2a6d52f3139f02" translate="yes" xml:space="preserve">
          <source>Create and add an Extension instance to the ext_modules list. This method also takes the following optional keyword arguments that are passed on to the Extension constructor.</source>
          <target state="translated">在ext_modules列表中创建并添加一个Extension实例。本方法还接受以下可选的关键字参数,这些参数会传递给Extension构造函数。</target>
        </trans-unit>
        <trans-unit id="2ce4b69bed16e520597783987ce2ba31407bbf8f" translate="yes" xml:space="preserve">
          <source>Create and array.</source>
          <target state="translated">创建和阵列。</target>
        </trans-unit>
        <trans-unit id="47f0f6dfd19f6638cbffe16ed61164856442a40f" translate="yes" xml:space="preserve">
          <source>Create and plot a band-limited signal with random phases:</source>
          <target state="translated">创建并绘制随机相位的带限信号。</target>
        </trans-unit>
        <trans-unit id="655209fbd053b66333cb2ad561c140174943d616" translate="yes" xml:space="preserve">
          <source>Create and plot an image with band-limited frequency content:</source>
          <target state="translated">创建并绘制带限制频率内容的图像。</target>
        </trans-unit>
        <trans-unit id="383101a807508f28ca3ca4eeb51cf4c39ba642f6" translate="yes" xml:space="preserve">
          <source>Create and return a ctypes object from a numpy array. Actually anything that exposes the __array_interface__ is accepted.</source>
          <target state="translated">从一个numpy数组中创建并返回一个ctypes对象。实际上任何暴露了__array_interface__的东西都是可以接受的。</target>
        </trans-unit>
        <trans-unit id="a48e85aeb37d4861d852029c32e85348705a141a" translate="yes" xml:space="preserve">
          <source>Create and return a new object.</source>
          <target state="translated">创建并返回一个新对象。</target>
        </trans-unit>
        <trans-unit id="4624b630f46c030fc80adec33ba7cfd098ce660b" translate="yes" xml:space="preserve">
          <source>Create and return a new object. See help(type) for accurate signature.</source>
          <target state="translated">创建并返回一个新对象。准确的签名请参见 help(type)。</target>
        </trans-unit>
        <trans-unit id="0f91b98f5452e2c2460f51aa523deeb885a2d07f" translate="yes" xml:space="preserve">
          <source>Create diagonal arrays.</source>
          <target state="translated">创建对角线数组。</target>
        </trans-unit>
        <trans-unit id="391f555392e014f93bf9364fc1af0a11257ae60d" translate="yes" xml:space="preserve">
          <source>Create nditers for use in nested loops</source>
          <target state="translated">创建用于嵌套循环的nditers。</target>
        </trans-unit>
        <trans-unit id="cae0d44191595c4c5d6b5d99613364849c4f295d" translate="yes" xml:space="preserve">
          <source>Create or load a memory-mapped &lt;code&gt;.npy&lt;/code&gt; file.</source>
          <target state="translated">创建或加载内存映射的 &lt;code&gt;.npy&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="9040f175bb70c201bfb2817bf6bea6562fe6e4f5" translate="yes" xml:space="preserve">
          <source>Create or overwrite existing file for reading and writing.</source>
          <target state="translated">创建或覆盖现有文件进行读写。</target>
        </trans-unit>
        <trans-unit id="58d0f155eb04fd57d6905d8542d41ea23a2730f2" translate="yes" xml:space="preserve">
          <source>Creates a copy of the array with its elements rearranged in such a way that the value of the element in k-th position is in the position it would be in a sorted array. All elements smaller than the k-th element are moved before this element and all equal or greater are moved behind it. The ordering of the elements in the two partitions is undefined.</source>
          <target state="translated">创建一个数组的副本,将其元素重新排列,使第k个位置的元素的值在排序数组中的位置。所有小于k-th元素的元素都被移到这个元素之前,所有等于或大于k-th元素的元素都被移到它的后面。两个分区中元素的排序是没有定义的。</target>
        </trans-unit>
        <trans-unit id="f7413e806f1e7017ca021144131a6ec01d636c42" translate="yes" xml:space="preserve">
          <source>Creates an iterator for broadcasting the &lt;code&gt;nop&lt;/code&gt; array objects provided in &lt;code&gt;op&lt;/code&gt;, using regular NumPy broadcasting rules.</source>
          <target state="translated">创建用于广播的迭代器 &lt;code&gt;nop&lt;/code&gt; 阵列中提供的对象 &lt;code&gt;op&lt;/code&gt; ，使用常规NumPy的广播规则。</target>
        </trans-unit>
        <trans-unit id="a06033694dc7625f6a25df5e7e99097ece139dbb" translate="yes" xml:space="preserve">
          <source>Creates an iterator for the given numpy array object &lt;code&gt;op&lt;/code&gt;.</source>
          <target state="translated">为给定的numpy数组对象 &lt;code&gt;op&lt;/code&gt; 创建一个迭代器。</target>
        </trans-unit>
        <trans-unit id="820c06a933939c73d0a9ac20d7eebafd53283b18" translate="yes" xml:space="preserve">
          <source>Creating a mask</source>
          <target state="translated">创建一个面具</target>
        </trans-unit>
        <trans-unit id="021b57ac73287317d5590d713033a11127224262" translate="yes" xml:space="preserve">
          <source>Creating a view on a structured array so it can be used in calculations</source>
          <target state="translated">在结构化数组上创建一个视图,以便在计算中使用。</target>
        </trans-unit>
        <trans-unit id="98d1b3c0571161e2acd40362a47356cdc1716fa1" translate="yes" xml:space="preserve">
          <source>Creating aligned structs: In order to know how to offset a field when &lt;code&gt;align=True&lt;/code&gt;, numpy looks up &lt;code&gt;field.dtype.alignment&lt;/code&gt;. This includes fields which are nested structured arrays.</source>
          <target state="translated">创建对齐的结构：为了知道如何在 &lt;code&gt;align=True&lt;/code&gt; 时偏移字段，numpy查找 &lt;code&gt;field.dtype.alignment&lt;/code&gt; 。这包括嵌套结构化数组的字段。</target>
        </trans-unit>
        <trans-unit id="d41cf53fbab96d2f7a854a59cb350d9b2f249330" translate="yes" xml:space="preserve">
          <source>Creating an array from sub-classes:</source>
          <target state="translated">从子类创建一个数组。</target>
        </trans-unit>
        <trans-unit id="8c75c1be94407cd0140876081367297865708e3a" translate="yes" xml:space="preserve">
          <source>Creating arrays</source>
          <target state="translated">创建数组</target>
        </trans-unit>
        <trans-unit id="b0ac33e8f2407adfe99099892032a5786f48a98d" translate="yes" xml:space="preserve">
          <source>Creating character arrays (&lt;code&gt;numpy.char&lt;/code&gt;)</source>
          <target state="translated">创建字符数组（ &lt;code&gt;numpy.char&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="46432ea81a249419eb894b0e722ae04982146aa4" translate="yes" xml:space="preserve">
          <source>Creating character arrays (numpy.char)</source>
          <target state="translated">创建字符数组 (numpy.char)</target>
        </trans-unit>
        <trans-unit id="a79124329baf0d3880f6e8bd974face711ed90d3" translate="yes" xml:space="preserve">
          <source>Creating data types</source>
          <target state="translated">创建数据类型</target>
        </trans-unit>
        <trans-unit id="3623ceac932f771e89eb47270eaee4ca0c39adaa" translate="yes" xml:space="preserve">
          <source>Creating iterators for nested iteration requires some care. All the iterator operands must match exactly, or the calls to &lt;a href=&quot;#c.NpyIter_ResetBasePointers&quot;&gt;&lt;code&gt;NpyIter_ResetBasePointers&lt;/code&gt;&lt;/a&gt; will be invalid. This means that automatic copies and output allocation should not be used haphazardly. It is possible to still use the automatic data conversion and casting features of the iterator by creating one of the iterators with all the conversion parameters enabled, then grabbing the allocated operands with the &lt;a href=&quot;#c.NpyIter_GetOperandArray&quot;&gt;&lt;code&gt;NpyIter_GetOperandArray&lt;/code&gt;&lt;/a&gt; function and passing them into the constructors for the rest of the iterators.</source>
          <target state="translated">为嵌套迭代创建迭代器需要一定注意。所有迭代器操作数必须完全匹配，否则对&lt;a href=&quot;#c.NpyIter_ResetBasePointers&quot;&gt; &lt;code&gt;NpyIter_ResetBasePointers&lt;/code&gt; &lt;/a&gt;的调用将无效。这意味着不应随意使用自动复制和输出分配。通过创建启用了所有转换参数的迭代器之一，然后使用&lt;a href=&quot;#c.NpyIter_GetOperandArray&quot;&gt; &lt;code&gt;NpyIter_GetOperandArray&lt;/code&gt; &lt;/a&gt;函数获取分配的操作数，并将其传递给其余迭代器的构造函数，仍然可以使用迭代器的自动数据转换和转换功能。</target>
        </trans-unit>
        <trans-unit id="c5120a7c7085b0117ed81c3444ff1fdacef6c111" translate="yes" xml:space="preserve">
          <source>Creating many similar tests</source>
          <target state="translated">创建许多类似的测试</target>
        </trans-unit>
        <trans-unit id="1dcddc1ce5a75de776531479edb4473eaa2354c5" translate="yes" xml:space="preserve">
          <source>Creating record arrays (&lt;code&gt;numpy.rec&lt;/code&gt;)</source>
          <target state="translated">创建记录数组（ &lt;code&gt;numpy.rec&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="63696d372e0aaf637bc994c371bc42b8f6e4087e" translate="yes" xml:space="preserve">
          <source>Creating structured datatypes with fields aligned like in a C-struct.</source>
          <target state="translated">创建结构化的数据类型,其字段像C结构一样排列。</target>
        </trans-unit>
        <trans-unit id="e13e0554f557ba882751e261b5a60777b337bea6" translate="yes" xml:space="preserve">
          <source>Creation</source>
          <target state="translated">Creation</target>
        </trans-unit>
        <trans-unit id="5f939e5434d3a238da77ef47c3189ac69e40c937" translate="yes" xml:space="preserve">
          <source>Cross-correlation of two 1-dimensional sequences.</source>
          <target state="translated">两个一维序列的交叉相关。</target>
        </trans-unit>
        <trans-unit id="ce4fe4b7616cb7e3999589959d2a7bacb5e2b9bf" translate="yes" xml:space="preserve">
          <source>Cube each element in a list.</source>
          <target state="translated">列表中的每个元素都是立方体。</target>
        </trans-unit>
        <trans-unit id="cef7283ebb85e8146a8a72c4b6a145c8d059da03" translate="yes" xml:space="preserve">
          <source>Cumulative product across array propagating NaNs.</source>
          <target state="translated">跨阵列传播NaNs的累积积。</target>
        </trans-unit>
        <trans-unit id="5e3b67811bb5290b6df8dbec735818173117ec67" translate="yes" xml:space="preserve">
          <source>Cumulative sum across array propagating NaNs.</source>
          <target state="translated">跨阵列传播NaNs的累计和。</target>
        </trans-unit>
        <trans-unit id="7f04d49b0ca659708fb8cdf77308d17fd7ecaa88" translate="yes" xml:space="preserve">
          <source>Cumulative sum of array elements.</source>
          <target state="translated">阵列元素的累计和。</target>
        </trans-unit>
        <trans-unit id="140e87163ac45492f58df33d7f85da346c418f4c" translate="yes" xml:space="preserve">
          <source>Current flat index into the array.</source>
          <target state="translated">当前进入数组的平面索引。</target>
        </trans-unit>
        <trans-unit id="ac8d8307cb5f245348dc52bf7e74dacfa1f5d300" translate="yes" xml:space="preserve">
          <source>Current mask.</source>
          <target state="translated">当前的面具。</target>
        </trans-unit>
        <trans-unit id="df3e2af3c9d9f82f00a46adce3db218a6d9d7bd8" translate="yes" xml:space="preserve">
          <source>Currently SciPy project consists of two packages:</source>
          <target state="translated">目前SciPy项目由两个软件包组成。</target>
        </trans-unit>
        <trans-unit id="4c8eba10595ddae0a34a9053064e392f6c153817" translate="yes" xml:space="preserve">
          <source>Currently unused. Reserved for future use in caching hash values.</source>
          <target state="translated">目前未使用。保留给将来用于缓存哈希值。</target>
        </trans-unit>
        <trans-unit id="06783a663f807b884b2eb6d800592782869e00d8" translate="yes" xml:space="preserve">
          <source>Custom Weekmasks</source>
          <target state="translated">定制面膜</target>
        </trans-unit>
        <trans-unit id="5794c902f31f869d8d4450d4791299177dd6f5bf" translate="yes" xml:space="preserve">
          <source>Cut-off ratio for small singular values of &lt;code&gt;a&lt;/code&gt;. For the purposes of rank determination, singular values are treated as zero if they are smaller than &lt;code&gt;rcond&lt;/code&gt; times the largest singular value of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 的小奇异值的截止比。对于等级确定的目的，如果是小于的奇异值被视为零 &lt;code&gt;rcond&lt;/code&gt; 倍的最大奇异值 &lt;code&gt;a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="963e5a96bd3d87f0909e596539f6dfa7d84581ea" translate="yes" xml:space="preserve">
          <source>Cutoff for small singular values. Singular values less than or equal to &lt;code&gt;rcond * largest_singular_value&lt;/code&gt; are set to zero. Broadcasts against the stack of matrices.</source>
          <target state="translated">较小的奇异值的截止值。小于或等于 &lt;code&gt;rcond * largest_singular_value&lt;/code&gt; 奇异值设置为零。针对矩阵堆栈进行广播。</target>
        </trans-unit>
        <trans-unit id="55b3718b804d3ea7ee851e585782dfffc4ddaa91" translate="yes" xml:space="preserve">
          <source>Cygwin 98-4.10, Python 2.1.1(MSC) - echo tests fail i.e. redefining environment variables may not work. FIXED: don&amp;rsquo;t use cygwin echo! Comment: also &lt;code&gt;cmd /c echo&lt;/code&gt; will not work but redefining environment variables do work.</source>
          <target state="translated">Cygwin 98-4.10，Python 2.1.1（MSC）-回声测试失败，即重新定义环境变量可能无效。修正：不要使用cygwin echo！注释： &lt;code&gt;cmd /c echo&lt;/code&gt; 也将不起作用，但重新定义环境变量将起作用。</target>
        </trans-unit>
        <trans-unit id="a512b3fa69c6f1d48fcf3a95fedda64e98719115" translate="yes" xml:space="preserve">
          <source>Cygwin 98-4.10, Python 2.3.3(cygming special)</source>
          <target state="translated">Cygwin 98-4.10,Python 2.3.3(cygming special)</target>
        </trans-unit>
        <trans-unit id="39b8f070b55c1bb2bcdf01997cdd384c00db9971" translate="yes" xml:space="preserve">
          <source>Cython</source>
          <target state="translated">Cython</target>
        </trans-unit>
        <trans-unit id="3b507900d710138d9fc14b9bf7ca033f1876815b" translate="yes" xml:space="preserve">
          <source>Cython can be used to unpack the &lt;code&gt;PyCapsule&lt;/code&gt; provided by a BitGenerator. This example uses &lt;a href=&quot;bit_generators/pcg64#numpy.random.pcg64.PCG64&quot;&gt;&lt;code&gt;PCG64&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;random_gauss_zig&lt;/code&gt;, the Ziggurat-based generator for normals, to fill an array. The usual caveats for writing high-performance code using Cython &amp;ndash; removing bounds checks and wrap around, providing array alignment information &amp;ndash; still apply.</source>
          <target state="translated">Cython可用于解包 &lt;code&gt;PyCapsule&lt;/code&gt; 提供的PyCapsule。此示例使用&lt;a href=&quot;bit_generators/pcg64#numpy.random.pcg64.PCG64&quot;&gt; &lt;code&gt;PCG64&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;random_gauss_zig&lt;/code&gt; （基于Ziggurat的法线生成器）填充数组。使用Cython编写高性能代码的通常警告-删除边界检查并环绕，提供数组对齐信息-仍然适用。</target>
        </trans-unit>
        <trans-unit id="50c9e8d5fc98727b4bbc93cf5d64a68db647f04f" translate="yes" xml:space="preserve">
          <source>D</source>
          <target state="translated">D</target>
        </trans-unit>
        <trans-unit id="9c77f3b5da6a716c0c8711c7937fc207582f88d6" translate="yes" xml:space="preserve">
          <source>D. J. Hand, F. Daly, D. Lunn, E. Ostrowski, A Handbook of Small Data Sets, CRC Press, 1994.</source>
          <target state="translated">D.J.Hand,F.Daly,D.Lunn,E.Ostrowski,《小数据集手册》,CRC出版社,1994年。</target>
        </trans-unit>
        <trans-unit id="9e1a42a64a9db004ac248d750b3e5535fe6705bf" translate="yes" xml:space="preserve">
          <source>DECREF&amp;rsquo;s an array object which may have the (deprecated) &lt;a href=&quot;#c.NPY_ARRAY_UPDATEIFCOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_UPDATEIFCOPY&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt;&lt;/a&gt; flag set without causing the contents to be copied back into the original array. Resets the &lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt;&lt;/a&gt; flag on the base object. This is useful for recovering from an error condition when writeback semantics are used, but will lead to wrong results.</source>
          <target state="translated">DECREF是一个数组对象，可以设置（不建议使用）&lt;a href=&quot;#c.NPY_ARRAY_UPDATEIFCOPY&quot;&gt; &lt;code&gt;NPY_ARRAY_UPDATEIFCOPY&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt; &lt;/a&gt;标志，而不会导致将内容复制回原始数组。重置基础对象上的&lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt; &lt;/a&gt;标志。使用写回语义时，这对于从错误条件中恢复非常有用，但会导致错误的结果。</target>
        </trans-unit>
        <trans-unit id="62c4f5e8f3e17d3ec22760be4806239a479b50bf" translate="yes" xml:space="preserve">
          <source>Dalgaard, Peter, &amp;ldquo;Introductory Statistics With R&amp;rdquo;, Springer, 2002.</source>
          <target state="translated">彼得&amp;middot;达加德（Dalgaard），&amp;ldquo;带R的入门统计&amp;rdquo;，施普林格，2002年。</target>
        </trans-unit>
        <trans-unit id="5101f6a6ee46d3f6405ba78646fba174a0c2beec" translate="yes" xml:space="preserve">
          <source>Dalgaard, Peter, &amp;ldquo;Introductory Statistics with R&amp;rdquo;, Springer-Verlag, 2002.</source>
          <target state="translated">彼得&amp;middot;达加德（Dalgaard），&amp;ldquo;带R的入门统计&amp;rdquo;，Springer-Verlag，2002年。</target>
        </trans-unit>
        <trans-unit id="4553061944cf001ceb7836359a71ad75f6dced22" translate="yes" xml:space="preserve">
          <source>Daniel Lemire., &amp;ldquo;Fast Random Integer Generation in an Interval&amp;rdquo;, ACM Transactions on Modeling and Computer Simulation 29 (1), 2019, &lt;a href=&quot;http://arxiv.org/abs/1805.10941&quot;&gt;http://arxiv.org/abs/1805.10941&lt;/a&gt;.</source>
          <target state="translated">Daniel Lemire。&amp;ldquo;区间内的快速随机整数生成&amp;rdquo;，ACM Transactions on Modeling and Computer Simulation 29（1），2019，&lt;a href=&quot;http://arxiv.org/abs/1805.10941&quot;&gt;http：//arxiv.org/abs/1805.10941&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4caaaf9cb8047a53fc77dfac273916c0e02f27d3" translate="yes" xml:space="preserve">
          <source>Darwin 7.2.0, Python 2.3</source>
          <target state="translated">达尔文7.2.0,Python 2.3。</target>
        </trans-unit>
        <trans-unit id="5022178af7e5aff72e419a94ea0af31d5816c478" translate="yes" xml:space="preserve">
          <source>Data Type API</source>
          <target state="translated">数据类型API</target>
        </trans-unit>
        <trans-unit id="d173cb51d3ffa8369ddc5c7d9051236f920814da" translate="yes" xml:space="preserve">
          <source>Data access</source>
          <target state="translated">数据访问</target>
        </trans-unit>
        <trans-unit id="a459c7310b8e7648c0f1c03ad2fe7505060e920c" translate="yes" xml:space="preserve">
          <source>Data attribute containing the identity element for the ufunc, if it has one. If it does not, the attribute value is None.</source>
          <target state="translated">数据属性,包含ufunc的身份元素,如果有的话。如果没有,属性值为None。</target>
        </trans-unit>
        <trans-unit id="e78e721c9c235ccee8159d0be9160af82084ef4c" translate="yes" xml:space="preserve">
          <source>Data attribute containing the number of arguments the ufunc takes, including optional ones.</source>
          <target state="translated">数据属性,包含ufunc的参数数,包括可选参数。</target>
        </trans-unit>
        <trans-unit id="03fe7a08b0b586a0b8eaaf0cdad9fc9b9cc9f6e6" translate="yes" xml:space="preserve">
          <source>Data attribute containing the number of arguments the ufunc treats as input.</source>
          <target state="translated">数据属性,包含ufunc作为输入的参数数量。</target>
        </trans-unit>
        <trans-unit id="adfa3ffdeaf44e2dd6067b0132906bd6eef47e97" translate="yes" xml:space="preserve">
          <source>Data attribute containing the number of arguments the ufunc treats as output.</source>
          <target state="translated">数据属性,包含ufunc作为输出的参数数量。</target>
        </trans-unit>
        <trans-unit id="692287ce05c432ce06118a7f5a56e29867abb305" translate="yes" xml:space="preserve">
          <source>Data attribute listing the data-type &amp;ldquo;Domain-Range&amp;rdquo; groupings the ufunc can deliver. The data-types are given using the character codes.</source>
          <target state="translated">列出ufunc可以传递的数据类型&amp;ldquo;域范围&amp;rdquo;分组的数据属性。数据类型使用字符代码给出。</target>
        </trans-unit>
        <trans-unit id="c0385a2191da01cdd85357b1f30dbba96a61452a" translate="yes" xml:space="preserve">
          <source>Data in new &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarrays&lt;/code&gt;&lt;/a&gt; is in the &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-row-major&quot;&gt;row-major&lt;/a&gt; (C) order, unless otherwise specified, but, for example, &lt;a href=&quot;arrays.indexing#arrays-indexing&quot;&gt;basic array slicing&lt;/a&gt; often produces &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-view&quot;&gt;views&lt;/a&gt; in a different scheme.</source>
          <target state="translated">除非另有说明，否则新&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarrays&lt;/code&gt; &lt;/a&gt;中的数据按&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-row-major&quot;&gt;行&lt;/a&gt;优先（C）顺序排列，但是例如，&lt;a href=&quot;arrays.indexing#arrays-indexing&quot;&gt;基本数组切片&lt;/a&gt;通常会以不同的方案生成&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-view&quot;&gt;视图&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d84a810e9789b8179eb08002b6e519db8fa8ce7" translate="yes" xml:space="preserve">
          <source>Data is always written in &amp;lsquo;C&amp;rsquo; order, independent of the order of &lt;code&gt;a&lt;/code&gt;. The data produced by this method can be recovered using the function fromfile().</source>
          <target state="translated">数据始终以&amp;ldquo; C&amp;rdquo;顺序写入，与 &lt;code&gt;a&lt;/code&gt; 的顺序无关。可以使用fromfile（）函数恢复通过此方法生成的数据。</target>
        </trans-unit>
        <trans-unit id="9e53167df8cb2fa7234110a0a44d40ca2cbd6313" translate="yes" xml:space="preserve">
          <source>Data items are converted to the nearest compatible Python type. Masked values are converted to &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.fill_value&quot;&gt;&lt;code&gt;fill_value&lt;/code&gt;&lt;/a&gt;. If &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.fill_value&quot;&gt;&lt;code&gt;fill_value&lt;/code&gt;&lt;/a&gt; is None, the corresponding entries in the output list will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">数据项将转换为最接近的兼容Python类型。屏蔽的值将转换为&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.fill_value&quot;&gt; &lt;code&gt;fill_value&lt;/code&gt; &lt;/a&gt;。如果&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.fill_value&quot;&gt; &lt;code&gt;fill_value&lt;/code&gt; &lt;/a&gt;为None，则输出列表中的相应条目将为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4ac7e83183cb23b5999f887680eaa647e636fdc" translate="yes" xml:space="preserve">
          <source>Data read from the text file.</source>
          <target state="translated">从文本文件中读取数据。</target>
        </trans-unit>
        <trans-unit id="ab4616f27eff8ec482bc1f61a6613379d5019665" translate="yes" xml:space="preserve">
          <source>Data read from the text file. If &lt;code&gt;usemask&lt;/code&gt; is True, this is a masked array.</source>
          <target state="translated">从文本文件读取数据。如果 &lt;code&gt;usemask&lt;/code&gt; 为True，则为掩码数组。</target>
        </trans-unit>
        <trans-unit id="dadd6ac5ba02e2f7843ee180c516331cbdcd6a9f" translate="yes" xml:space="preserve">
          <source>Data sources</source>
          <target state="translated">数据来源</target>
        </trans-unit>
        <trans-unit id="c3c77ecb1755c1a69e821e1aaac71fd5ec5e7ec0" translate="yes" xml:space="preserve">
          <source>Data stored in the file. For &lt;code&gt;.npz&lt;/code&gt; files, the returned instance of NpzFile class must be closed to avoid leaking file descriptors.</source>
          <target state="translated">数据存储在文件中。对于 &lt;code&gt;.npz&lt;/code&gt; 文件，必须关闭NpzFile类的返回实例，以避免泄漏文件描述符。</target>
        </trans-unit>
        <trans-unit id="b9d279299816a7c139a097762a532d3c7e26f292" translate="yes" xml:space="preserve">
          <source>Data to be averaged. Masked entries are not taken into account in the computation.</source>
          <target state="translated">要平均的数据。计算时不考虑被掩盖的条目。</target>
        </trans-unit>
        <trans-unit id="e03c72d9dcd23e4e11ad5552205bb89141629001" translate="yes" xml:space="preserve">
          <source>Data to be saved to a text file.</source>
          <target state="translated">要保存到文本文件的数据。</target>
        </trans-unit>
        <trans-unit id="ee503fe5765b8d9456bf21def7f9e06d2b12ebb6" translate="yes" xml:space="preserve">
          <source>Data type</source>
          <target state="translated">数据类型</target>
        </trans-unit>
        <trans-unit id="76ebf87ff7259b3fa1470e7263b48576e422cbfd" translate="yes" xml:space="preserve">
          <source>Data type code.</source>
          <target state="translated">数据类型代码:</target>
        </trans-unit>
        <trans-unit id="5c6b1bdaee5cd22bebfa68fe22da8ae17ee32ebc" translate="yes" xml:space="preserve">
          <source>Data type containing field &lt;code&gt;col1&lt;/code&gt; (10-character string at byte position 0), &lt;code&gt;col2&lt;/code&gt; (32-bit float at byte position 10), and &lt;code&gt;col3&lt;/code&gt; (integers at byte position 14):</source>
          <target state="translated">包含字段 &lt;code&gt;col1&lt;/code&gt; （字节位置0处的10个字符的字符串）， &lt;code&gt;col2&lt;/code&gt; （字节位置10处的32位浮点数）和 &lt;code&gt;col3&lt;/code&gt; （字节位置14的整数）的数据类型：</target>
        </trans-unit>
        <trans-unit id="5323524ee17f1362827313c3d97940b4505408ab" translate="yes" xml:space="preserve">
          <source>Data type information</source>
          <target state="translated">数据类型信息</target>
        </trans-unit>
        <trans-unit id="7f7a69abb16912ba94ab887a9c10ebbd9bc5371f" translate="yes" xml:space="preserve">
          <source>Data type objects</source>
          <target state="translated">数据类型对象</target>
        </trans-unit>
        <trans-unit id="b653b6102e06af89505274160891e8ac6c604d2a" translate="yes" xml:space="preserve">
          <source>Data type objects (&lt;code&gt;dtype&lt;/code&gt;)</source>
          <target state="translated">数据类型对象（ &lt;code&gt;dtype&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ac3315e5339816f58a1895e052b1e8c043da3b3c" translate="yes" xml:space="preserve">
          <source>Data type objects (dtype)</source>
          <target state="translated">数据类型对象(dtype)</target>
        </trans-unit>
        <trans-unit id="6823842611ba946501e490386387306a34e9ab02" translate="yes" xml:space="preserve">
          <source>Data type of the output.</source>
          <target state="translated">输出的数据类型。</target>
        </trans-unit>
        <trans-unit id="eae3a99bdeb47b16f78d7fea21224392e5ca6e46" translate="yes" xml:space="preserve">
          <source>Data type of the output. If &lt;code&gt;dtype&lt;/code&gt; is None, the type of the data argument (&lt;code&gt;data.dtype&lt;/code&gt;) is used. If &lt;code&gt;dtype&lt;/code&gt; is not None and different from &lt;code&gt;data.dtype&lt;/code&gt;, a copy is performed.</source>
          <target state="translated">输出的数据类型。如果 &lt;code&gt;dtype&lt;/code&gt; 为None，则使用数据参数的类型（ &lt;code&gt;data.dtype&lt;/code&gt; ）。如果 &lt;code&gt;dtype&lt;/code&gt; 是不无和不同 &lt;code&gt;data.dtype&lt;/code&gt; ，进行复制。</target>
        </trans-unit>
        <trans-unit id="9a65ce3721c38edabce27611aa8f46d66f3904ff" translate="yes" xml:space="preserve">
          <source>Data type of the result.</source>
          <target state="translated">结果的数据类型。</target>
        </trans-unit>
        <trans-unit id="4ed14787943fa351395f0ee27e0b0514b81bf28b" translate="yes" xml:space="preserve">
          <source>Data type of the resulting array. If None, the dtypes will be determined by the contents of each column, individually.</source>
          <target state="translated">生成的数组的数据类型,如果无,则dtypes将由每一列的内容决定。如果为None,dtypes将由每一列的内容单独决定。</target>
        </trans-unit>
        <trans-unit id="339d59d85f01f8cdcf6fd821645f37195e30ec02" translate="yes" xml:space="preserve">
          <source>Data type of the returned array. For binary files, it is used to determine the size and byte-order of the items in the file.</source>
          <target state="translated">返回数组的数据类型。对于二进制文件,它用于确定文件中各项目的大小和字节顺序。</target>
        </trans-unit>
        <trans-unit id="7f9f4851300f70d5dc3cf562fa3240960b4dbf05" translate="yes" xml:space="preserve">
          <source>Data type of the returned array. The default is float.</source>
          <target state="translated">返回数组的数据类型。默认为float。</target>
        </trans-unit>
        <trans-unit id="ed2ace0ed658145111b32dfd15ea87700b2f229e" translate="yes" xml:space="preserve">
          <source>Data type routines</source>
          <target state="translated">数据类型例程</target>
        </trans-unit>
        <trans-unit id="594095b790071c2f98aec2dbd65de7709d74433d" translate="yes" xml:space="preserve">
          <source>Data type sizes</source>
          <target state="translated">数据类型大小</target>
        </trans-unit>
        <trans-unit id="2adf3e418cb1c78b65b7a000ba430a45647a5ca7" translate="yes" xml:space="preserve">
          <source>Data type testing</source>
          <target state="translated">数据类型测试</target>
        </trans-unit>
        <trans-unit id="98a34d678f5229fc5eec78849854a56a627dd1d1" translate="yes" xml:space="preserve">
          <source>Data type to cast to.</source>
          <target state="translated">要投向的数据类型。</target>
        </trans-unit>
        <trans-unit id="182df8c2af2c2944401a368243e72ff53aba919b" translate="yes" xml:space="preserve">
          <source>Data type with fields &lt;code&gt;r&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; (with the given titles), both being 8-bit unsigned integers, the first at byte position 0 from the start of the field and the second at position 2:</source>
          <target state="translated">带有字段 &lt;code&gt;r&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; （具有给定标题）的数据类型，均为8位无符号整数，第一个位于字段开头的字节位置0，第二个位于位置2：</target>
        </trans-unit>
        <trans-unit id="b44a74dfbd4c8cbced718e34ed1777e530392fab" translate="yes" xml:space="preserve">
          <source>Data type with fields &lt;code&gt;r&lt;/code&gt;, &lt;code&gt;g&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, each being an 8-bit unsigned integer:</source>
          <target state="translated">字段 &lt;code&gt;r&lt;/code&gt; ， &lt;code&gt;g&lt;/code&gt; ， &lt;code&gt;b&lt;/code&gt; ， &lt;code&gt;a&lt;/code&gt; 分别为8位无符号整数的数据类型：</target>
        </trans-unit>
        <trans-unit id="dce22c316f82e72fe3ef7972975de030981baa7a" translate="yes" xml:space="preserve">
          <source>Data type, scalar, or array to cast from.</source>
          <target state="translated">要投射的数据类型、标量或数组。</target>
        </trans-unit>
        <trans-unit id="555f1cb511a7fc830b4f9270140d6d7d6b86fdc6" translate="yes" xml:space="preserve">
          <source>Data types have the following method for changing the byte order:</source>
          <target state="translated">数据类型有以下方法可以改变字节顺序。</target>
        </trans-unit>
        <trans-unit id="ddbd1fc6e1311002ff40414585d42fb972fc1c73" translate="yes" xml:space="preserve">
          <source>Data with a given value representing missing data</source>
          <target state="translated">给定值代表缺失数据的数据</target>
        </trans-unit>
        <trans-unit id="fd4e634077f484849d79c425f4661ed26b88a935" translate="yes" xml:space="preserve">
          <source>Data-type checking</source>
          <target state="translated">数据类型检查</target>
        </trans-unit>
        <trans-unit id="391d43bd010ab4fe13de7cc4c6ed3a95e700d762" translate="yes" xml:space="preserve">
          <source>Data-type consisting of more than one element:</source>
          <target state="translated">由一个以上的元素组成的数据类型。</target>
        </trans-unit>
        <trans-unit id="2bc09131fee35a52a645be0fa4f4e07fdb68a652" translate="yes" xml:space="preserve">
          <source>Data-type descriptor of the returned view, e.g., float32 or int16. The default, None, results in the view having the same data-type as &lt;code&gt;a&lt;/code&gt;. This argument can also be specified as an ndarray sub-class, which then specifies the type of the returned object (this is equivalent to setting the &lt;code&gt;type&lt;/code&gt; parameter).</source>
          <target state="translated">返回视图的数据类型描述符，例如float32或int16。默认，无，结果在具有数据类型为相同的视图 &lt;code&gt;a&lt;/code&gt; 。此参数也可以指定为ndarray子类，然后指定返回对象的类型（这等效于设置 &lt;code&gt;type&lt;/code&gt; 参数）。</target>
        </trans-unit>
        <trans-unit id="22f7dd2234bee3f3f18b97392a6490d3ba873dee" translate="yes" xml:space="preserve">
          <source>Data-type descriptors</source>
          <target state="translated">数据类型描述符</target>
        </trans-unit>
        <trans-unit id="5047a1b21f308ef4a4edd9ded69fea90920bfe2e" translate="yes" xml:space="preserve">
          <source>Data-type encapsulation</source>
          <target state="translated">数据类型封装</target>
        </trans-unit>
        <trans-unit id="2507f1a7f55fba205d86cdd75b7ab0cf6f6fbdd9" translate="yes" xml:space="preserve">
          <source>Data-type objects must be reference counted so be aware of the action on the data-type reference of different C-API calls. The standard rule is that when a data-type object is returned it is a new reference. Functions that take &lt;a href=&quot;c-api.types-and-structures#c.PyArray_Descr&quot;&gt;&lt;code&gt;PyArray_Descr *&lt;/code&gt;&lt;/a&gt; objects and return arrays steal references to the data-type their inputs unless otherwise noted. Therefore, you must own a reference to any data-type object used as input to such a function.</source>
          <target state="translated">数据类型对象必须进行引用计数，因此请注意对不同C-API调用的数据类型引用的操作。标准规则是，当返回数据类型对象时，它是一个新引用。除非另有说明，否则采用&lt;a href=&quot;c-api.types-and-structures#c.PyArray_Descr&quot;&gt; &lt;code&gt;PyArray_Descr *&lt;/code&gt; &lt;/a&gt;对象并返回数组的函数会窃取对其输入数据类型的引用。因此，您必须拥有对用作该函数输入的任何数据类型对象的引用。</target>
        </trans-unit>
        <trans-unit id="b15d5f87e12104d07e12104f29fa0201983c667c" translate="yes" xml:space="preserve">
          <source>Data-type of returned array.</source>
          <target state="translated">返回数组的数据类型。</target>
        </trans-unit>
        <trans-unit id="175ad74f523c9673c9dc38454591d4eb74c4d08a" translate="yes" xml:space="preserve">
          <source>Data-type of the array&amp;rsquo;s elements.</source>
          <target state="translated">数组元素的数据类型。</target>
        </trans-unit>
        <trans-unit id="083ed855a488906eb5ff7c9039d435f48aa3b852" translate="yes" xml:space="preserve">
          <source>Data-type of the coordinate arrays passed to &lt;code&gt;function&lt;/code&gt;. By default, &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; is float.</source>
          <target state="translated">传递给 &lt;code&gt;function&lt;/code&gt; 的坐标数组的数据类型。默认情况下，&lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;为float。</target>
        </trans-unit>
        <trans-unit id="dea8e2a1f7fb1db9b7e34231c5e0957886ee508e" translate="yes" xml:space="preserve">
          <source>Data-type of the coordinate arrays passed to &lt;code&gt;function&lt;/code&gt;. By default, &lt;code&gt;dtype&lt;/code&gt; is float.</source>
          <target state="translated">传递给 &lt;code&gt;function&lt;/code&gt; 的坐标数组的数据类型。默认情况下， &lt;code&gt;dtype&lt;/code&gt; 为float。</target>
        </trans-unit>
        <trans-unit id="4e15c31196d8acf582467b65de7e2dab92710470" translate="yes" xml:space="preserve">
          <source>Data-type of the field in which to place &lt;code&gt;val&lt;/code&gt;.</source>
          <target state="translated">放置 &lt;code&gt;val&lt;/code&gt; 的字段的数据类型。</target>
        </trans-unit>
        <trans-unit id="39073b2fd3057c7b3b9a07d35e36e49c334d3ebb" translate="yes" xml:space="preserve">
          <source>Data-type of the output mask. By default, the output mask has a dtype of MaskType (bool). If the dtype is flexible, each field has a boolean dtype. This is ignored when &lt;code&gt;m&lt;/code&gt; is &lt;code&gt;nomask&lt;/code&gt;, in which case &lt;code&gt;nomask&lt;/code&gt; is always returned.</source>
          <target state="translated">输出掩码的数据类型。默认情况下，输出遮罩的dtype为MaskType（布尔）。如果dtype是flexible，则每个字段都有一个布尔dtype。当 &lt;code&gt;m&lt;/code&gt; 为 &lt;code&gt;nomask&lt;/code&gt; 时，将忽略此情况，在这种情况下，始终返回 &lt;code&gt;nomask&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51e15f46df8957d190b0e9a32edbef5e443c1138" translate="yes" xml:space="preserve">
          <source>Data-type of the output matrix.</source>
          <target state="translated">输出矩阵的数据类型。</target>
        </trans-unit>
        <trans-unit id="6c5a46bdf3d87da37dab2e1edc7254de947ac4c8" translate="yes" xml:space="preserve">
          <source>Data-type of the output. Defaults to &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">输出的数据类型。默认为 &lt;code&gt;float&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dae41e8d6682b39b1719c5f729cf4403ad9808e2" translate="yes" xml:space="preserve">
          <source>Data-type of the resulting array; default: float. If this is a structured data-type, the resulting array will be 1-dimensional, and each row will be interpreted as an element of the array. In this case, the number of columns used must match the number of fields in the data-type.</source>
          <target state="translated">生成的数组的数据类型,默认为:float,如果是结构化的数据类型,生成的数组将是一维的,每一行将被解释为数组的元素。如果这是一个结构化的数据类型,生成的数组将是一维的,每一行将被解释为数组的一个元素。在这种情况下,使用的列数必须与数据类型中的字段数相匹配。</target>
        </trans-unit>
        <trans-unit id="b505071c887042075c861cc8fc2d25f1ea672dda" translate="yes" xml:space="preserve">
          <source>Data-type of the returned array.</source>
          <target state="translated">返回数组的数据类型。</target>
        </trans-unit>
        <trans-unit id="620d631e802c6625ade1eba3753c9c102dd738c0" translate="yes" xml:space="preserve">
          <source>Data-type of the returned array; default: float.</source>
          <target state="translated">返回数组的数据类型,默认:float。</target>
        </trans-unit>
        <trans-unit id="b76cac3ce27a94ef1f707a3ae326b952d9ea72b6" translate="yes" xml:space="preserve">
          <source>Data-type of the returned matrix.</source>
          <target state="translated">返回矩阵的数据类型。</target>
        </trans-unit>
        <trans-unit id="83e3321d6d9c1b02b3af684537a3f17f48f92529" translate="yes" xml:space="preserve">
          <source>Data-type to convert &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to if given. Default is None.</source>
          <target state="translated">给定 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 的数据类型。默认为无。</target>
        </trans-unit>
        <trans-unit id="98198bc475e33e539f57bb5d611ce0c46719fda9" translate="yes" xml:space="preserve">
          <source>Data-type with fields &lt;code&gt;R&lt;/code&gt;, &lt;code&gt;G&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt;, each being an unsigned 8-bit integer:</source>
          <target state="translated">具有 &lt;code&gt;R&lt;/code&gt; ， &lt;code&gt;G&lt;/code&gt; ， &lt;code&gt;B&lt;/code&gt; ， &lt;code&gt;A&lt;/code&gt; 字段的数据类型，每个字段都是无符号的8位整数：</target>
        </trans-unit>
        <trans-unit id="97d945f72df62bf65abebd32ec6eeec836638f9c" translate="yes" xml:space="preserve">
          <source>Data-type with fields &lt;code&gt;big&lt;/code&gt; (big-endian 32-bit integer) and &lt;code&gt;little&lt;/code&gt; (little-endian 32-bit integer):</source>
          <target state="translated">具有 &lt;code&gt;big&lt;/code&gt; （大尾数32位整数）和 &lt;code&gt;little&lt;/code&gt; （小尾数32位整数）字段的数据类型：</target>
        </trans-unit>
        <trans-unit id="f9892dceaf4c393849b8298d0123d5d5f05ba0c0" translate="yes" xml:space="preserve">
          <source>Data-types.</source>
          <target state="translated">Data-types.</target>
        </trans-unit>
        <trans-unit id="63d0f9bc2a331816b54d90289e0564cae9cab711" translate="yes" xml:space="preserve">
          <source>DataSource.abspath()</source>
          <target state="translated">DataSource.abspath()</target>
        </trans-unit>
        <trans-unit id="a75e29b5cace0f330a36c9eb65db62d75aa42186" translate="yes" xml:space="preserve">
          <source>DataSource.exists()</source>
          <target state="translated">DataSource.exists()</target>
        </trans-unit>
        <trans-unit id="bd4a229fdbfe009b3be26b6043f0184701a0533b" translate="yes" xml:space="preserve">
          <source>DataSource.open()</source>
          <target state="translated">DataSource.open()</target>
        </trans-unit>
        <trans-unit id="9406f9d63729835268647100d60fa6dda91bf0bf" translate="yes" xml:space="preserve">
          <source>DataSources can be local files or remote files/URLs. The files may also be compressed or uncompressed. DataSource hides some of the low-level details of downloading the file, allowing you to simply pass in a valid file path (or URL) and obtain a file object.</source>
          <target state="translated">数据源可以是本地文件或远程文件/URL。文件也可以是压缩的或未压缩的。DataSource隐藏了下载文件的一些低级细节,允许你简单地传入一个有效的文件路径(或URL)并获得一个文件对象。</target>
        </trans-unit>
        <trans-unit id="81b7d2ea42df2f5da13026da9e2cb57a3aabc441" translate="yes" xml:space="preserve">
          <source>Date:</source>
          <target state="translated">Date:</target>
        </trans-unit>
        <trans-unit id="3a634fe6b2da8d8d4c344bc698f77cf69c809b5f" translate="yes" xml:space="preserve">
          <source>Datetime</source>
          <target state="translated">Datetime</target>
        </trans-unit>
        <trans-unit id="bb7bfb490786a995bfa9e2a5b6823f17a1a216ef" translate="yes" xml:space="preserve">
          <source>Datetime Arithmetic</source>
          <target state="translated">日期算术</target>
        </trans-unit>
        <trans-unit id="26757f51523448884cb35f7c2e7a9d830a1f0706" translate="yes" xml:space="preserve">
          <source>Datetime Support Functions</source>
          <target state="translated">日期支持功能</target>
        </trans-unit>
        <trans-unit id="e00cad3edede5f768d55ef060cdd96323a7571ad" translate="yes" xml:space="preserve">
          <source>Datetime Units</source>
          <target state="translated">日期单位</target>
        </trans-unit>
        <trans-unit id="38b428bb26c8af0c4b0fd0c5793ec1f2bdae7051" translate="yes" xml:space="preserve">
          <source>Datetime and Timedelta Arithmetic</source>
          <target state="translated">数据时间和时间德尔塔算术。</target>
        </trans-unit>
        <trans-unit id="48d6aa44d4ca3cc7a3a4b06f69e541ecb8ebd93c" translate="yes" xml:space="preserve">
          <source>Datetime support functions</source>
          <target state="translated">日期支持功能</target>
        </trans-unit>
        <trans-unit id="45540e9d36b6a636a7d3f2083fde0b3cb45e0a66" translate="yes" xml:space="preserve">
          <source>Datetimes and Timedeltas</source>
          <target state="translated">日期和时间</target>
        </trans-unit>
        <trans-unit id="d5889493937e34467174cb169e91b981059850e9" translate="yes" xml:space="preserve">
          <source>Datetimes and Timedeltas work together to provide ways for simple datetime calculations.</source>
          <target state="translated">Datetimes和Timedeltas一起工作,为简单的日期时间计算提供了方法。</target>
        </trans-unit>
        <trans-unit id="51531cc702406b6c9763cc42d8bdd8ad26a43c0f" translate="yes" xml:space="preserve">
          <source>Datetimes are always stored based on POSIX time (though having a TAI mode which allows for accounting of leap-seconds is proposed), with an epoch of 1970-01-01T00:00Z. This means the supported dates are always a symmetric interval around the epoch, called &amp;ldquo;time span&amp;rdquo; in the table below.</source>
          <target state="translated">日期时间始终基于POSIX时间进行存储（尽管建议使用TAI模式来考虑leap秒），其纪元为1970-01-01T00：00Z。这意味着支持的日期始终是每个时期的对称间隔，在下表中称为&amp;ldquo;时间跨度&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="122763cb7427afdd4c15e276fdc1c80b3815094a" translate="yes" xml:space="preserve">
          <source>David McKay, &amp;ldquo;Information Theory, Inference and Learning Algorithms,&amp;rdquo; chapter 23, &lt;a href=&quot;http://www.inference.org.uk/mackay/itila/&quot;&gt;http://www.inference.org.uk/mackay/itila/&lt;/a&gt;</source>
          <target state="translated">David McKay，&amp;ldquo;信息论，推理和学习算法&amp;rdquo;，第23章，&lt;a href=&quot;http://www.inference.org.uk/mackay/itila/&quot;&gt;http：//www.inference.org.uk/mackay/itila/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="812d36d79a90e882bd2e8eae368ea14f78ae3b09" translate="yes" xml:space="preserve">
          <source>Dealing with types</source>
          <target state="translated">处理类型</target>
        </trans-unit>
        <trans-unit id="a8f5a30a4cb8786cd322dd6dbfd8f1d482955120" translate="yes" xml:space="preserve">
          <source>Deallocates the iterator object and resolves any needed writebacks.</source>
          <target state="translated">重新定位迭代器对象并解析任何需要的回写。</target>
        </trans-unit>
        <trans-unit id="ad9c7cd74dc2bd34e8b8c600c07899c84dcc04dd" translate="yes" xml:space="preserve">
          <source>Debian (sid) Linux, Python 2.1.3+, 2.2.3+, 2.3.3 PyCrust 0.9.3, Idle 1.0.2</source>
          <target state="translated">Debian (side)Linux,Python 2.1.3+,2.2.3+,2.3.3 PyCrust 0.9.3,Idle 1.0.2。</target>
        </trans-unit>
        <trans-unit id="1111acbc77e1b6bc2fd9153a83aaaa3e388ca65d" translate="yes" xml:space="preserve">
          <source>Deciding what case applies, checking broadcasting, and determining the kind of transposition needed are all done in &lt;code&gt;PyArray_MapIterNew&lt;/code&gt;. After setting up, there are two cases. If there is no subarray or it only has one element, no subarray iteration is necessary and an iterator is prepared which iterates all indexing arrays &lt;em&gt;as well as&lt;/em&gt; the result or value array. If there is a subarray, there are three iterators prepared. One for the indexing arrays, one for the result or value array (minus its subarray), and one for the subarrays of the original and the result/assignment array. The first two iterators give (or allow calculation) of the pointers into the start of the subarray, which then allows to restart the subarray iteration.</source>
          <target state="translated">确定适用的情况，检查广播并确定所需的转置类型都在 &lt;code&gt;PyArray_MapIterNew&lt;/code&gt; 中完成。设置后，有两种情况。如果没有子数组或只有一个元素，则不需要子数组迭代，并且准备一个迭代器，该迭代器将迭代所有索引数组&lt;em&gt;以及&lt;/em&gt;结果或值数组。如果有子数组，则准备三个迭代器。一种用于索引数组，一种用于结果或值数组（减去其子数组），另一种用于原始数组和结果/赋值数组的子数组。前两个迭代器将指针分配（或允许计算）到子数组的开头，然后允许重新启动子数组迭代。</target>
        </trans-unit>
        <trans-unit id="d9516fdc9c7eef205e499da4e7ec3cede5ceb388" translate="yes" xml:space="preserve">
          <source>Decimal characters include digit characters, and all characters that that can be used to form decimal-radix numbers, e.g. &lt;code&gt;U+0660, ARABIC-INDIC DIGIT ZERO&lt;/code&gt;.</source>
          <target state="translated">十进制字符包括数字字符，以及可用于形成十进制基数的所有字符，例如 &lt;code&gt;U+0660, ARABIC-INDIC DIGIT ZERO&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e660781fd8b95b64d64b6f05b5f17d8ea5d1d96c" translate="yes" xml:space="preserve">
          <source>Decompose the elements of x into mantissa and twos exponent.</source>
          <target state="translated">将x的元素分解为万字符和二指数。</target>
        </trans-unit>
        <trans-unit id="c0a2aa6456fc6630ef3dc6620f0cbae61a88fe6c" translate="yes" xml:space="preserve">
          <source>Decompositions</source>
          <target state="translated">Decompositions</target>
        </trans-unit>
        <trans-unit id="ffe4e593056575686068099d6790448db4206386" translate="yes" xml:space="preserve">
          <source>Decorator to apply to methods</source>
          <target state="translated">应用于方法的装饰器</target>
        </trans-unit>
        <trans-unit id="e07b2c2e1e25e79a86c68698117e4cba4b32238d" translate="yes" xml:space="preserve">
          <source>Decorator which, when applied to a function, causes SkipTest to be raised when &lt;code&gt;skip_condition&lt;/code&gt; is True, and the function to be called normally otherwise.</source>
          <target state="translated">装饰器，当将其应用于函数时，当 &lt;code&gt;skip_condition&lt;/code&gt; 为True时，将引发SkipTest，否则将正常调用该函数。</target>
        </trans-unit>
        <trans-unit id="adc746be3b00936c8c3a3472b3e3078c3a4656a5" translate="yes" xml:space="preserve">
          <source>Decorator, which, when applied to a function, causes KnownFailureException to be raised when &lt;code&gt;fail_condition&lt;/code&gt; is True, and the function to be called normally otherwise.</source>
          <target state="translated">装饰器，当应用于函数时，当 &lt;code&gt;fail_condition&lt;/code&gt; 为True时，将引发KnownFailureException异常，否则将正常调用该函数。</target>
        </trans-unit>
        <trans-unit id="a2e23b650a15e5c693ca1445133d5ee60d9d20b4" translate="yes" xml:space="preserve">
          <source>Decorators</source>
          <target state="translated">Decorators</target>
        </trans-unit>
        <trans-unit id="34692108afca567d865d43e42370d7e1925cff06" translate="yes" xml:space="preserve">
          <source>Default buffers</source>
          <target state="translated">默认缓冲器</target>
        </trans-unit>
        <trans-unit id="2335a11535e98158d8ca1e7070652f1e66fd9c56" translate="yes" xml:space="preserve">
          <source>Default is &amp;lsquo;greedy&amp;rsquo;.</source>
          <target state="translated">默认值为&amp;ldquo;贪心&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="c17e4da3ff3b0f9f748a4d6acc1f8640afd0a462" translate="yes" xml:space="preserve">
          <source>Default is &amp;lsquo;r+&amp;rsquo;.</source>
          <target state="translated">默认值为&amp;ldquo; r +&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="d6fc6505a7468b1eb07e232276a1a144ed108cc4" translate="yes" xml:space="preserve">
          <source>Default is &amp;lsquo;safe&amp;rsquo;.</source>
          <target state="translated">默认为&amp;ldquo;安全&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="ffe4ea797d5b8a7f8cfde90ab339db72e2e542a2" translate="yes" xml:space="preserve">
          <source>Default is 0.</source>
          <target state="translated">默认为0。</target>
        </trans-unit>
        <trans-unit id="b9ce70b65cf5b4dc82412d7768f94d53c38cac38" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;False&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, the tuple (&lt;a href=&quot;#numpy.average&quot;&gt;&lt;code&gt;average&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;sum_of_weights&lt;/code&gt;) is returned, otherwise only the average is returned. If &lt;code&gt;weights=None&lt;/code&gt;, &lt;code&gt;sum_of_weights&lt;/code&gt; is equivalent to the number of elements over which the average is taken.</source>
          <target state="translated">默认值为 &lt;code&gt;False&lt;/code&gt; 。如果为 &lt;code&gt;True&lt;/code&gt; ，则返回元组（&lt;a href=&quot;#numpy.average&quot;&gt; &lt;code&gt;average&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;sum_of_weights&lt;/code&gt; ），否则仅返回平均值。如果 &lt;code&gt;weights=None&lt;/code&gt; ， &lt;code&gt;sum_of_weights&lt;/code&gt; 等于求平均值的元素数。</target>
        </trans-unit>
        <trans-unit id="6fafe55b73fa98b695385282c370b435d27e1633" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;None&lt;/code&gt;, to use the entire axis.</source>
          <target state="translated">默认值为 &lt;code&gt;None&lt;/code&gt; ，以使用整个轴。</target>
        </trans-unit>
        <trans-unit id="28951177af990d02d67504338ec510505f905759" translate="yes" xml:space="preserve">
          <source>Default iteration</source>
          <target state="translated">默认迭代</target>
        </trans-unit>
        <trans-unit id="966299221cc27c9aaada9018f864b33036434b1d" translate="yes" xml:space="preserve">
          <source>Default normalization (False) is by &lt;code&gt;(N - 1)&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is the number of observations given (unbiased estimate). If &lt;code&gt;bias&lt;/code&gt; is True, then normalization is by &lt;code&gt;N&lt;/code&gt;. These values can be overridden by using the keyword &lt;code&gt;ddof&lt;/code&gt; in numpy versions &amp;gt;= 1.5.</source>
          <target state="translated">默认归一化（False）为 &lt;code&gt;(N - 1)&lt;/code&gt; ，其中 &lt;code&gt;N&lt;/code&gt; 为给出的观察数（无偏估计）。如果 &lt;code&gt;bias&lt;/code&gt; 是True，则归一化是通过 &lt;code&gt;N&lt;/code&gt; 。在numpy版本&amp;gt; = 1.5中，可以使用关键字 &lt;code&gt;ddof&lt;/code&gt; 覆盖这些值。</target>
        </trans-unit>
        <trans-unit id="90d359fa1c07cc7df5b917d7e3f5d34c57ec0aae" translate="yes" xml:space="preserve">
          <source>Default normalization (False) is by &lt;code&gt;(N-1)&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is the number of observations given (unbiased estimate). If &lt;code&gt;bias&lt;/code&gt; is True, then normalization is by &lt;code&gt;N&lt;/code&gt;. This keyword can be overridden by the keyword &lt;code&gt;ddof&lt;/code&gt; in numpy versions &amp;gt;= 1.5.</source>
          <target state="translated">默认归一化（False）为 &lt;code&gt;(N-1)&lt;/code&gt; ，其中 &lt;code&gt;N&lt;/code&gt; 为给出的观察数（无偏估计）。如果 &lt;code&gt;bias&lt;/code&gt; 是True，则归一化是通过 &lt;code&gt;N&lt;/code&gt; 。在numpy版本&amp;gt; = 1.5中，此关键字可以被关键字 &lt;code&gt;ddof&lt;/code&gt; 覆盖。</target>
        </trans-unit>
        <trans-unit id="719f3db22853f6f54f02e96c26a2311da39af743" translate="yes" xml:space="preserve">
          <source>Default priority for arrays.</source>
          <target state="translated">数组的默认优先级。</target>
        </trans-unit>
        <trans-unit id="6716ba557871317c5fd2c10ccc1e593c8f19cb74" translate="yes" xml:space="preserve">
          <source>Default scalar priority (very small)</source>
          <target state="translated">默认标量优先级(非常小</target>
        </trans-unit>
        <trans-unit id="e641966d275ad425b62fc62d9745e763b1f6dd59" translate="yes" xml:space="preserve">
          <source>Default size of the user-settable internal buffers.</source>
          <target state="translated">用户可设置内部缓冲区的默认大小。</target>
        </trans-unit>
        <trans-unit id="5d1efc3a1f02c0ec5b61bbb0c9ab7a02738e94d3" translate="yes" xml:space="preserve">
          <source>Default subtype priority.</source>
          <target state="translated">默认的子类型优先级。</target>
        </trans-unit>
        <trans-unit id="16a99af14cd742b7888548aa51fb6ac7d09e8605" translate="yes" xml:space="preserve">
          <source>Defaults to true. If set to false, the output will always be a strict array, not a subtype.</source>
          <target state="translated">默认值为true。如果设置为false,则输出将始终是一个严格的数组,而不是子类型。</target>
        </trans-unit>
        <trans-unit id="2b3e0f5011c5a7820f042e8646d3807526feef63" translate="yes" xml:space="preserve">
          <source>Define a vectorized function which takes a nested sequence of objects or numpy arrays as inputs and returns a single numpy array or a tuple of numpy arrays. The vectorized function evaluates &lt;code&gt;pyfunc&lt;/code&gt; over successive tuples of the input arrays like the python map function, except it uses the broadcasting rules of numpy.</source>
          <target state="translated">定义一个矢量化函数，该函数将对象或numpy数组的嵌套序列作为输入，并返回单个numpy数组或numpy数组的元组。像python map函数一样，矢量化函数在输入数组的连续元组上评估 &lt;code&gt;pyfunc&lt;/code&gt; ，除了它使用numpy的广播规则。</target>
        </trans-unit>
        <trans-unit id="61505cbdb5cf52ffbc6a8bf8b8f8af1217631a20" translate="yes" xml:space="preserve">
          <source>Define the absolute value, which is &lt;code&gt;-x&lt;/code&gt; for &lt;code&gt;x &amp;lt;0&lt;/code&gt; and &lt;code&gt;x&lt;/code&gt; for &lt;code&gt;x &amp;gt;= 0&lt;/code&gt;.</source>
          <target state="translated">定义的绝对值，这是 &lt;code&gt;-x&lt;/code&gt; 对于 &lt;code&gt;x &amp;lt;0&lt;/code&gt; 的和 &lt;code&gt;x&lt;/code&gt; 为 &lt;code&gt;x &amp;gt;= 0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="60c3116e72bd6db8e3267fc1ab9d7cb6e083f5e7" translate="yes" xml:space="preserve">
          <source>Define the sigma function, which is -1 for &lt;code&gt;x &amp;lt; 0&lt;/code&gt; and +1 for &lt;code&gt;x &amp;gt;= 0&lt;/code&gt;.</source>
          <target state="translated">定义sigma函数，对于 &lt;code&gt;x &amp;lt; 0&lt;/code&gt; 为-1，对于 &lt;code&gt;x &amp;gt;= 0&lt;/code&gt; 为+1 。</target>
        </trans-unit>
        <trans-unit id="f5471ada09dfcde67297a0ac30990ba21a16931a" translate="yes" xml:space="preserve">
          <source>Defined as 0 for use with Bool.</source>
          <target state="translated">定义为0,与Bool一起使用。</target>
        </trans-unit>
        <trans-unit id="139ca190227fe964dc3838ddb050be0a20c65202" translate="yes" xml:space="preserve">
          <source>Defined as 1 for use with Bool.</source>
          <target state="translated">定义为1,与Bool一起使用。</target>
        </trans-unit>
        <trans-unit id="670d6eec1e9ea50b484d7c17bdc447c52fe95496" translate="yes" xml:space="preserve">
          <source>Defined in &lt;code&gt;numpy/npy_cpu.h&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;numpy/npy_cpu.h&lt;/code&gt; 中定义</target>
        </trans-unit>
        <trans-unit id="8b1b72675b98643cbdd56a0a279d2ae2f68589c9" translate="yes" xml:space="preserve">
          <source>Defined in &lt;code&gt;numpy/npy_endian.h&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;numpy/npy_endian.h&lt;/code&gt; 中定义。</target>
        </trans-unit>
        <trans-unit id="26a40d9f0ef7f2215f8cc29e1f71feface330732" translate="yes" xml:space="preserve">
          <source>Defined to be the number of scalar kinds (not including &lt;code&gt;NPY_NOSCALAR&lt;/code&gt;).</source>
          <target state="translated">定义为标量种类的数量（不包括 &lt;code&gt;NPY_NOSCALAR&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ba198b982dcf4bd0cea8ecc26bd1efeae5fde285" translate="yes" xml:space="preserve">
          <source>Defined to be the number of sorts. It is fixed at three by the need for backwards compatibility, and consequently &lt;code&gt;NPY_MERGESORT&lt;/code&gt; and &lt;code&gt;NPY_STABLESORT&lt;/code&gt; are aliased to each other and may refer to one of several stable sorting algorithms depending on the data type.</source>
          <target state="translated">定义为排序数。由于需要向后兼容，因此将其固定为三个，因此 &lt;code&gt;NPY_MERGESORT&lt;/code&gt; 和 &lt;code&gt;NPY_STABLESORT&lt;/code&gt; 互为别名，并且可以根据数据类型引用几种稳定的排序算法之一。</target>
        </trans-unit>
        <trans-unit id="0c2126c80b6518c66a9593fe462e64cc5a15f601" translate="yes" xml:space="preserve">
          <source>Defines</source>
          <target state="translated">Defines</target>
        </trans-unit>
        <trans-unit id="6e49bf7d4a54a21945d1908234ab12cc2626625b" translate="yes" xml:space="preserve">
          <source>Defining a more complex dtype.</source>
          <target state="translated">定义一个更复杂的dtype。</target>
        </trans-unit>
        <trans-unit id="45bcbf15eef8b7f89c50a8bf22d703e07ba3a825" translate="yes" xml:space="preserve">
          <source>Defining an &lt;a href=&quot;#c.NpyAuxData&quot;&gt;&lt;code&gt;NpyAuxData&lt;/code&gt;&lt;/a&gt; is similar to defining a class in C++, but the object semantics have to be tracked manually since the API is in C. Here&amp;rsquo;s an example for a function which doubles up an element using an element copier function as a primitive.:</source>
          <target state="translated">定义&lt;a href=&quot;#c.NpyAuxData&quot;&gt; &lt;code&gt;NpyAuxData&lt;/code&gt; &lt;/a&gt;类似于在C ++中定义一个类，但是由于API是C语言，因此必须手动跟踪对象的语义。这是一个函数示例，该函数使用元素复制器功能作为原语来将元素加倍。</target>
        </trans-unit>
        <trans-unit id="8834c54a1246a67dbc0ecb790c071b10a7e3b66b" translate="yes" xml:space="preserve">
          <source>Defining new types</source>
          <target state="translated">定义新类型</target>
        </trans-unit>
        <trans-unit id="adaa548fb9106ef1144d20b8ae04cecae72c8510" translate="yes" xml:space="preserve">
          <source>Definite integral as approximated by trapezoidal rule.</source>
          <target state="translated">梯形规则近似的定积分。</target>
        </trans-unit>
        <trans-unit id="3332194d546c6c7cc86b5b84d7cd68baf0e623cb" translate="yes" xml:space="preserve">
          <source>Definition of the core elements a generalized ufunc operates on.</source>
          <target state="translated">广义的ufunc操作的核心元素的定义。</target>
        </trans-unit>
        <trans-unit id="15225baac48fc3d689cb2b0f74b936eff4339ff7" translate="yes" xml:space="preserve">
          <source>Definitions</source>
          <target state="translated">Definitions</target>
        </trans-unit>
        <trans-unit id="9184d3e4687563972d72b163e489c6c843a31654" translate="yes" xml:space="preserve">
          <source>Degree of the basis polynomial for the series. Must be &amp;gt;= 0.</source>
          <target state="translated">该系列的基础多项式的次数。必须&amp;gt; = 0。</target>
        </trans-unit>
        <trans-unit id="16c78a8e8f95308316ca05a4c6f57586f7f58e4d" translate="yes" xml:space="preserve">
          <source>Degree of the fitting polynomial</source>
          <target state="translated">拟合多项式的程度</target>
        </trans-unit>
        <trans-unit id="b8722a2887db9363ae0b8c5a5c30ec99ff352e3d" translate="yes" xml:space="preserve">
          <source>Degree of the interpolating polynomial.</source>
          <target state="translated">内插多项式的度。</target>
        </trans-unit>
        <trans-unit id="214ea8bba1ed183b7e097241368f077a3cd144a1" translate="yes" xml:space="preserve">
          <source>Degree of the resulting matrix.</source>
          <target state="translated">所得矩阵的度数。</target>
        </trans-unit>
        <trans-unit id="80d0e0a542e906c0db420181650b3b792573e76e" translate="yes" xml:space="preserve">
          <source>Degree of the series, one less than the number of coefficients.</source>
          <target state="translated">系列的度,比系数数少一个。</target>
        </trans-unit>
        <trans-unit id="a6aec0c27c1647ddafe05683c8d4b8074b12d8ab" translate="yes" xml:space="preserve">
          <source>Degree(s) of the fitting polynomials. If &lt;code&gt;deg&lt;/code&gt; is a single integer all terms up to and including the &lt;code&gt;deg&lt;/code&gt;&amp;rsquo;th term are included in the fit. For NumPy versions &amp;gt;= 1.11.0 a list of integers specifying the degrees of the terms to include may be used instead.</source>
          <target state="translated">拟合多项式的次数。如果 &lt;code&gt;deg&lt;/code&gt; 是一个整数直至并包括所有术语 &lt;code&gt;deg&lt;/code&gt; &amp;ldquo;个术语被包括在配合。对于NumPy版本&amp;gt; = 1.11.0，可以使用整数列表来指定要包含的术语的程度。</target>
        </trans-unit>
        <trans-unit id="4678dad6fdcb23005370fe1fca044a896edcd5e9" translate="yes" xml:space="preserve">
          <source>Degree(s) of the fitting polynomials. If &lt;code&gt;deg&lt;/code&gt; is a single integer, all terms up to and including the &lt;code&gt;deg&lt;/code&gt;&amp;rsquo;th term are included in the fit. For NumPy versions &amp;gt;= 1.11.0 a list of integers specifying the degrees of the terms to include may be used instead.</source>
          <target state="translated">拟合多项式的次数。如果 &lt;code&gt;deg&lt;/code&gt; 是一个整数，至多并包括所有术语 &lt;code&gt;deg&lt;/code&gt; &amp;ldquo;个术语被包括在配合。对于NumPy版本&amp;gt; = 1.11.0，可以使用整数列表来指定要包含的术语的程度。</target>
        </trans-unit>
        <trans-unit id="2de0696584be15bbb43013a1abc8390fb59e0b4c" translate="yes" xml:space="preserve">
          <source>Degrees of freedom in denominator, must be &amp;gt; 0.</source>
          <target state="translated">分母的自由度必须&amp;gt; 0。</target>
        </trans-unit>
        <trans-unit id="d447133a9630e193dc9b4895034fdb7a2d5656cf" translate="yes" xml:space="preserve">
          <source>Degrees of freedom in numerator, must be &amp;gt; 0.</source>
          <target state="translated">分子的自由度必须大于0。</target>
        </trans-unit>
        <trans-unit id="2fc860f3319e43352dfab21d263879520eed366e" translate="yes" xml:space="preserve">
          <source>Degrees of freedom, must be &amp;gt; 0.</source>
          <target state="translated">自由度必须&amp;gt; 0。</target>
        </trans-unit>
        <trans-unit id="efdf5c52531831e38290d369a2fc1a1d6c2f3ab4" translate="yes" xml:space="preserve">
          <source>Delete elements from an array.</source>
          <target state="translated">从数组中删除元素。</target>
        </trans-unit>
        <trans-unit id="09e1a4ac558262087ade7474a27905ea0753215f" translate="yes" xml:space="preserve">
          <source>Delete self[key].</source>
          <target state="translated">删除self[key]。</target>
        </trans-unit>
        <trans-unit id="826d5fa4cd77081924ffa3247bc7e1144ad995c4" translate="yes" xml:space="preserve">
          <source>Delete the memmap instance to close the memmap file.</source>
          <target state="translated">删除memmap实例,关闭memmap文件。</target>
        </trans-unit>
        <trans-unit id="1b1ea38145f80e657023804a5a2fb9968cec7261" translate="yes" xml:space="preserve">
          <source>Deletion flushes memory changes to disk before removing the object:</source>
          <target state="translated">在删除对象之前,删除将内存变化刷新到磁盘。</target>
        </trans-unit>
        <trans-unit id="51de9c21719e1ebba2842f93455553ec20fd0114" translate="yes" xml:space="preserve">
          <source>Demonstrate how large values of non-centrality lead to a more symmetric distribution.</source>
          <target state="translated">证明大的非中心值如何导致更对称的分布。</target>
        </trans-unit>
        <trans-unit id="c9afd5880fd0526ff9d73beb159ef27c30006c77" translate="yes" xml:space="preserve">
          <source>Demonstrate that taking the products of random samples from a uniform distribution can be fit well by a log-normal probability density function.</source>
          <target state="translated">证明从均匀分布中取随机样本的乘积可以用对数正态概率密度函数很好地拟合。</target>
        </trans-unit>
        <trans-unit id="7d7f05c3b413d3520059a47e99ca5537a68001e7" translate="yes" xml:space="preserve">
          <source>Denominator degrees of freedom, must be &amp;gt; 0.</source>
          <target state="translated">分母的自由度必须&amp;gt; 0。</target>
        </trans-unit>
        <trans-unit id="ac772a011193bb984a652b0f5e9cfc8b6b3f2d87" translate="yes" xml:space="preserve">
          <source>Denominator. If &lt;code&gt;x1.shape != x2.shape&lt;/code&gt;, they must be broadcastable to a common shape (which becomes the shape of the output).</source>
          <target state="translated">分母。如果 &lt;code&gt;x1.shape != x2.shape&lt;/code&gt; ，则必须将它们广播为通用形状（成为输出的形状）。</target>
        </trans-unit>
        <trans-unit id="b42515ab1d65352ed70392656cd1eb8f0df21091" translate="yes" xml:space="preserve">
          <source>Deprecated in 1.14, use &lt;a href=&quot;#c.PyArray_DiscardWritebackIfCopy&quot;&gt;&lt;code&gt;PyArray_DiscardWritebackIfCopy&lt;/code&gt;&lt;/a&gt; followed by &lt;code&gt;Py_XDECREF&lt;/code&gt;</source>
          <target state="translated">在1.14中已弃用，请使用&lt;a href=&quot;#c.PyArray_DiscardWritebackIfCopy&quot;&gt; &lt;code&gt;PyArray_DiscardWritebackIfCopy&lt;/code&gt; ,&lt;/a&gt;然后再使用 &lt;code&gt;Py_XDECREF&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="75510f16f2c885973d68ca6976d07c5d06c5ddae" translate="yes" xml:space="preserve">
          <source>Deprecated in numpy 1.9.0, use the abstract ABCPolyBase class instead. Note that the latter requires a number of virtual functions to be implemented.</source>
          <target state="translated">在numpy 1.9.0中已经废弃,请使用抽象的ABCPolyBase类代替。请注意,后者需要一些虚拟函数来实现。</target>
        </trans-unit>
        <trans-unit id="90fbb082fd2714c0f36df6a60a4e4c93fb36448f" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.10.0.</source>
          <target state="translated">自1.10.0版本起,已不再使用。</target>
        </trans-unit>
        <trans-unit id="a505e56c3c318c866f582620a893576d41513eec" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.11.0.</source>
          <target state="translated">自1.11.0版本起,已不再使用。</target>
        </trans-unit>
        <trans-unit id="94443fd2ced7d37ea3bb33b7fb41ae4c59135a80" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.12.0.</source>
          <target state="translated">自1.12.0版本起,已不再使用。</target>
        </trans-unit>
        <trans-unit id="a9a59ff61f9445930ed15b411b507cb3a3190092" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.14.0.</source>
          <target state="translated">自1.14.0版本起,已不再使用。</target>
        </trans-unit>
        <trans-unit id="229727d5d807915b35e3a79a88f55c01627e95f0" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.14: Passing &lt;code&gt;sep=''&lt;/code&gt;, the default, is deprecated since it will trigger the deprecated binary mode of this function. This mode interprets &lt;a href=&quot;https://docs.python.org/dev/library/string.html#module-string&quot;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt; as binary bytes, rather than ASCII text with decimal numbers, an operation which is better spelt &lt;code&gt;frombuffer(string, dtype, count)&lt;/code&gt;. If &lt;a href=&quot;https://docs.python.org/dev/library/string.html#module-string&quot;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt; contains unicode text, the binary mode of &lt;a href=&quot;#numpy.fromstring&quot;&gt;&lt;code&gt;fromstring&lt;/code&gt;&lt;/a&gt; will first encode it into bytes using either utf-8 (python 3) or the default encoding (python 2), neither of which produce sane results.</source>
          <target state="translated">自版本1.14起不推荐使用：默认情况下，不建议传递 &lt;code&gt;sep=''&lt;/code&gt; ，因为它将触发此功能的不推荐二进制模式。此模式将&lt;a href=&quot;https://docs.python.org/dev/library/string.html#module-string&quot;&gt; &lt;code&gt;string&lt;/code&gt; &lt;/a&gt;解释为二进制字节，而不是使用带十进制数字的ASCII文本，此操作最好由 &lt;code&gt;frombuffer(string, dtype, count)&lt;/code&gt; 拼写。如果&lt;a href=&quot;https://docs.python.org/dev/library/string.html#module-string&quot;&gt; &lt;code&gt;string&lt;/code&gt; &lt;/a&gt;包含unicode文本，则&lt;a href=&quot;#numpy.fromstring&quot;&gt; &lt;code&gt;fromstring&lt;/code&gt; &lt;/a&gt;的二进制模式将首先使用utf-8（python 3）或默认编码（python 2）将其编码为字节，这两种方法均不会产生合理的结果。</target>
        </trans-unit>
        <trans-unit id="dca5b7419ce0c6a33ee759ad9e3594c329bce938" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.15.0: In order to remain backward compatible with a common usage in Numeric, basic slicing is also initiated if the selection object is any non-ndarray and non-tuple sequence (such as a &lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;) containing &lt;a href=&quot;https://docs.python.org/dev/library/functions.html#slice&quot;&gt;&lt;code&gt;slice&lt;/code&gt;&lt;/a&gt; objects, the &lt;code&gt;Ellipsis&lt;/code&gt; object, or the &lt;a href=&quot;constants#numpy.newaxis&quot;&gt;&lt;code&gt;newaxis&lt;/code&gt;&lt;/a&gt; object, but not for integer arrays or other embedded sequences.</source>
          <target state="translated">从1.15.0版开始不推荐使用：为了保持与Numeric中的常用用法向后兼容，如果选择对象是包含&lt;a href=&quot;https://docs.python.org/dev/library/functions.html#slice&quot;&gt; &lt;code&gt;slice&lt;/code&gt; &lt;/a&gt;对象的任何非ndarray和非元组序列（例如&lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;），则还会启动基本切片。 &lt;code&gt;Ellipsis&lt;/code&gt; 对象或&lt;a href=&quot;constants#numpy.newaxis&quot;&gt; &lt;code&gt;newaxis&lt;/code&gt; &lt;/a&gt;对象，但不适用于整数数组或其他嵌入式序列。</target>
        </trans-unit>
        <trans-unit id="c18d46be05f158f4a9f48a23fcafd55bc8ee7952" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.16.</source>
          <target state="translated">自1.16版本起,已不再使用。</target>
        </trans-unit>
        <trans-unit id="f6151f894a8e79cde423047d76e0abe9518b5d32" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.16: Deprecated, use &lt;code&gt;numpy.ndarray.item()&lt;/code&gt; instead.</source>
          <target state="translated">从版本1.16开始不推荐使用：不推荐使用 &lt;code&gt;numpy.ndarray.item()&lt;/code&gt; 代替。</target>
        </trans-unit>
        <trans-unit id="f3fc485c4dc97b2ed8df47cb88214775178f80c1" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.17: The output is currently marked so that if written to, a deprecation warning will be emitted. A future version will set the &lt;code&gt;writable&lt;/code&gt; flag False so writing to it will raise an error.</source>
          <target state="translated">从版本1.17开始不推荐使用：当前已标记输出，因此如果写入该信息，则将发出不推荐使用的警告。将来的版本会将 &lt;code&gt;writable&lt;/code&gt; 标志设置为False，因此对其进行写入将引发错误。</target>
        </trans-unit>
        <trans-unit id="26689b58bf759fcfedfe480ee292230f1eae7e85" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.6.0.</source>
          <target state="translated">自1.6.0版本起,已不再使用。</target>
        </trans-unit>
        <trans-unit id="b5ebd48a05d1197ffab8d82861190636acfcb48f" translate="yes" xml:space="preserve">
          <source>Deprecated. Use &lt;a href=&quot;#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt;&lt;/a&gt;, which is similar. This flag &amp;ldquo;automatically&amp;rdquo; copies the data back when the returned array is deallocated, which is not supported in all python implementations.</source>
          <target state="translated">不推荐使用。使用&lt;a href=&quot;#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt; &lt;/a&gt;，这是相似的。当释放返回的数组时，此标志&amp;ldquo;自动&amp;rdquo;将数据复制回去，这在所有python实现中均不受支持。</target>
        </trans-unit>
        <trans-unit id="141e039b9533a98c94309e5719dbf35ad8e170ab" translate="yes" xml:space="preserve">
          <source>Deprecated: use npy_clear_floatstatus from npy_math.h instead.</source>
          <target state="translated">废弃:使用npy_math.h中的npy_clear_floatstatus代替。</target>
        </trans-unit>
        <trans-unit id="5cf6f463ce56314bce23e2b79281c112c8d5ef7b" translate="yes" xml:space="preserve">
          <source>Deprecation Mechanism NPY_NO_DEPRECATED_API</source>
          <target state="translated">废弃机制 NPY_NO_DEPRECATED_API</target>
        </trans-unit>
        <trans-unit id="6735a66773b194a7ae390d1ca4d06ddff66cb19d" translate="yes" xml:space="preserve">
          <source>Describes partition algorithms used.</source>
          <target state="translated">描述了使用的分区算法。</target>
        </trans-unit>
        <trans-unit id="a4cf5c2fa78a781f3bab283524a5720dd26e5a08" translate="yes" xml:space="preserve">
          <source>Describes sorting algorithms used.</source>
          <target state="translated">描述了所使用的排序算法。</target>
        </trans-unit>
        <trans-unit id="555c5d2cb07e18fc50ac305ad3849cdbe6160644" translate="yes" xml:space="preserve">
          <source>Describes whether or not &lt;code&gt;a&lt;/code&gt; can be written to.</source>
          <target state="translated">描述是否可以写入 &lt;code&gt;a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="424441bbf87af33c47ad0cfb1f7fa3b9fa63955e" translate="yes" xml:space="preserve">
          <source>Describes whether or not &lt;code&gt;a&lt;/code&gt; is a copy of another &amp;ldquo;base&amp;rdquo; array.</source>
          <target state="translated">描述是否 &lt;code&gt;a&lt;/code&gt; 是另一个&amp;ldquo;基地&amp;rdquo;数组的一个副本。</target>
        </trans-unit>
        <trans-unit id="65d8e7f90a58b5a5ee1060f1f22a86aed35beae6" translate="yes" xml:space="preserve">
          <source>Describes whether or not &lt;code&gt;a&lt;/code&gt; is aligned properly for its type.</source>
          <target state="translated">描述 &lt;code&gt;a&lt;/code&gt; 是否针对其类型正确对齐。</target>
        </trans-unit>
        <trans-unit id="3fcfa113d41636118b9fc7438de0f310d710e2cc" translate="yes" xml:space="preserve">
          <source>Description of the input data type code.</source>
          <target state="translated">输入数据类型代码的说明。</target>
        </trans-unit>
        <trans-unit id="9829bed50f31ac25ea870651c23dc5ce8171f8e6" translate="yes" xml:space="preserve">
          <source>Desired dtype of the result, either &amp;lsquo;d&amp;rsquo; (or &amp;lsquo;float64&amp;rsquo;) or &amp;lsquo;f&amp;rsquo; (or &amp;lsquo;float32&amp;rsquo;). All dtypes are determined by their name. The default value is &amp;lsquo;d&amp;rsquo;.</source>
          <target state="translated">结果的所需dtype，即'd'（或'float64'）或'f'（或'float32'）。所有dtypes由它们的名称确定。默认值为&amp;ldquo; d&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="f21ac6e26595def622d7f71a3b4db5b0d1d28b7c" translate="yes" xml:space="preserve">
          <source>Desired dtype of the result. All dtypes are determined by their name, i.e., &amp;lsquo;int64&amp;rsquo;, &amp;lsquo;int&amp;rsquo;, etc, so byteorder is not available and a specific precision may have different C types depending on the platform. The default value is &amp;lsquo;np.int&amp;rsquo;.</source>
          <target state="translated">结果的所需dtype。所有dtype均由其名称（即'int64'，'int'等）确定，因此字节序不可用，并且特定精度可能会因平台而异。默认值为&amp;ldquo; np.int&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="d121e78f3074bde690535b07325dfb836a0267ba" translate="yes" xml:space="preserve">
          <source>Desired output data-type for the array, e.g, &lt;code&gt;numpy.int8&lt;/code&gt;. Default is &lt;code&gt;numpy.float64&lt;/code&gt;.</source>
          <target state="translated">数组的所需输出数据类型，例如 &lt;code&gt;numpy.int8&lt;/code&gt; 。默认值为 &lt;code&gt;numpy.float64&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b152ee224a01e68e60fe4dbd7092f5aa497fbc8" translate="yes" xml:space="preserve">
          <source>Desired output data-type.</source>
          <target state="translated">希望的输出数据类型:</target>
        </trans-unit>
        <trans-unit id="d92d689242f2299b4475be6532f6b4c69b49753f" translate="yes" xml:space="preserve">
          <source>Desired precision, default is 6.</source>
          <target state="translated">所需精度,默认为6。</target>
        </trans-unit>
        <trans-unit id="57f388f8b04810bebe2800d826bdcb39eda4bd12" translate="yes" xml:space="preserve">
          <source>Desired precision, default is 7.</source>
          <target state="translated">所需精度,默认为7。</target>
        </trans-unit>
        <trans-unit id="cde9d9b4e0b9af3dfaaddd342aedc25e93ab8375" translate="yes" xml:space="preserve">
          <source>Destination array.</source>
          <target state="translated">目的地阵列:</target>
        </trans-unit>
        <trans-unit id="e7808a0714f80da97918a2e4274a40d30bcdd7a7" translate="yes" xml:space="preserve">
          <source>Destination positions for each of the original axes. These must also be unique.</source>
          <target state="translated">每个原始轴的目标位置。这些位置也必须是唯一的。</target>
        </trans-unit>
        <trans-unit id="21ef51d75c614a51c95b2672f954fdc6c7fae2d1" translate="yes" xml:space="preserve">
          <source>Detailed notes</source>
          <target state="translated">详细说明</target>
        </trans-unit>
        <trans-unit id="7d40f5113e5a0be345c6e8da2b15397b86e772db" translate="yes" xml:space="preserve">
          <source>Details of Signature</source>
          <target state="translated">签名的细节</target>
        </trans-unit>
        <trans-unit id="600eeccd7db308f4a989eda843209f6bc5c9f6d7" translate="yes" xml:space="preserve">
          <source>Determinant of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">行列式 &lt;code&gt;a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="706fbd5a75b61eb7b1941f3576619d3b0a2e0ad0" translate="yes" xml:space="preserve">
          <source>Determine an appropriate data-type object from the object &lt;em&gt;op&lt;/em&gt; (which should be a &amp;ldquo;nested&amp;rdquo; sequence object) and the minimum data-type descriptor mintype (which can be &lt;code&gt;NULL&lt;/code&gt; ). Similar in behavior to array(&lt;em&gt;op&lt;/em&gt;).dtype. Don&amp;rsquo;t confuse this function with &lt;a href=&quot;#c.PyArray_DescrConverter&quot;&gt;&lt;code&gt;PyArray_DescrConverter&lt;/code&gt;&lt;/a&gt;. This function essentially looks at all the objects in the (nested) sequence and determines the data-type from the elements it finds.</source>
          <target state="translated">从对象&lt;em&gt;op&lt;/em&gt;（应该是&amp;ldquo;嵌套&amp;rdquo;序列对象）和最小数据类型描述符mintype（可以为 &lt;code&gt;NULL&lt;/code&gt; ）中确定适当的数据类型对象。行为类似于array（&lt;em&gt;op&lt;/em&gt;）.dtype。不要将此函数与&lt;a href=&quot;#c.PyArray_DescrConverter&quot;&gt; &lt;code&gt;PyArray_DescrConverter&lt;/code&gt; &lt;/a&gt;混淆。此函数实质上查看（嵌套的）序列中的所有对象，并根据找到的元素确定数据类型。</target>
        </trans-unit>
        <trans-unit id="898483c19901b499900035a5195202d8244c4b8f" translate="yes" xml:space="preserve">
          <source>Determine common type following standard coercion rules.</source>
          <target state="translated">按照标准胁迫规则确定共同类型。</target>
        </trans-unit>
        <trans-unit id="f493f90604c24e63ef3589f15cfb3213ad17edc7" translate="yes" xml:space="preserve">
          <source>Determine if &lt;em&gt;newstrides&lt;/em&gt; is a strides array consistent with the memory of an &lt;em&gt;nd&lt;/em&gt; -dimensional array with shape &lt;code&gt;dims&lt;/code&gt; and element-size, &lt;em&gt;elsize&lt;/em&gt;. The &lt;em&gt;newstrides&lt;/em&gt; array is checked to see if jumping by the provided number of bytes in each direction will ever mean jumping more than &lt;em&gt;numbytes&lt;/em&gt; which is the assumed size of the available memory segment. If &lt;em&gt;numbytes&lt;/em&gt; is 0, then an equivalent &lt;em&gt;numbytes&lt;/em&gt; is computed assuming &lt;em&gt;nd&lt;/em&gt;, &lt;em&gt;dims&lt;/em&gt;, and &lt;em&gt;elsize&lt;/em&gt; refer to a single-segment array. Return &lt;a href=&quot;#c.NPY_TRUE&quot;&gt;&lt;code&gt;NPY_TRUE&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;newstrides&lt;/em&gt; is acceptable, otherwise return &lt;a href=&quot;#c.NPY_FALSE&quot;&gt;&lt;code&gt;NPY_FALSE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">确定&lt;em&gt;newstrides&lt;/em&gt;是否为与形状为 &lt;code&gt;dims&lt;/code&gt; 且元素大小为&lt;em&gt;elsize&lt;/em&gt;的&lt;em&gt;nd&lt;/em&gt;维数组的内存一致的&lt;em&gt;strides&lt;/em&gt;数组。所述&lt;em&gt;newstrides&lt;/em&gt;阵列被检查，看看是否通过跳跃的字节的数量设置在每个方向将永远平均跳跃超过&lt;em&gt;的numBytes&lt;/em&gt;其是可用的内存段的假定大小。如果&lt;em&gt;numbytes&lt;/em&gt;为0，则假定&lt;em&gt;nd&lt;/em&gt;，&lt;em&gt;dims&lt;/em&gt;和&lt;em&gt;elsize&lt;/em&gt;引用单段数组，则计算等效的&lt;em&gt;bytebytes&lt;/em&gt;。如果有&lt;em&gt;新&lt;/em&gt;&lt;a href=&quot;#c.NPY_TRUE&quot;&gt; &lt;code&gt;NPY_TRUE&lt;/code&gt; &lt;/a&gt;则返回&lt;em&gt;NPY_TRUE&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;是可以接受的，否则返回&lt;a href=&quot;#c.NPY_FALSE&quot;&gt; &lt;code&gt;NPY_FALSE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da40e84ab5bf1317a201c92d2f871ba0d2269134" translate="yes" xml:space="preserve">
          <source>Determine if a class is a subclass of a second class.</source>
          <target state="translated">确定一个类是否是第二个类的子类。</target>
        </trans-unit>
        <trans-unit id="497b024471b22505be0452cda6ffd1b787cf7f0a" translate="yes" xml:space="preserve">
          <source>Determine if the first argument is a subclass of the second argument.</source>
          <target state="translated">确定第一个参数是否是第二个参数的子类。</target>
        </trans-unit>
        <trans-unit id="e06c23b59abd9e583829ad68cbb8b3a58d4c4624" translate="yes" xml:space="preserve">
          <source>Determine if two arrays might share memory</source>
          <target state="translated">确定两个数组是否可以共享内存。</target>
        </trans-unit>
        <trans-unit id="13f31601af111fc0a9613647f0e8d82f16d06a6c" translate="yes" xml:space="preserve">
          <source>Determine if two arrays share memory</source>
          <target state="translated">确定两个数组是否共享内存。</target>
        </trans-unit>
        <trans-unit id="4fb1ffd013fbdd2899c42f65451c7410c495fa36" translate="yes" xml:space="preserve">
          <source>Determine whether input has masked values.</source>
          <target state="translated">确定输入是否有屏蔽值。</target>
        </trans-unit>
        <trans-unit id="6da721475fcf2ac096aa56aec4327be0c131e55d" translate="yes" xml:space="preserve">
          <source>Determines the data-type of the returned array and of the accumulator where the elements are summed. If dtype has the value None and &lt;code&gt;a&lt;/code&gt; is of integer type of precision less than the default integer precision, then the default integer precision is used. Otherwise, the precision is the same as that of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">确定将元素求和的返回数组和累加器的数据类型。如果dtype的值为None且 &lt;code&gt;a&lt;/code&gt; 为精度小于默认整数精度的整数类型，则使用默认整数精度。否则，精度是相同的 &lt;code&gt;a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4f0165b0ce28795b6a5c6c8a8e2bfad91d293d9b" translate="yes" xml:space="preserve">
          <source>Determines whether the array data should be viewed as in C (row-major) or FORTRAN (column-major) order.</source>
          <target state="translated">确定数组数据是以C语言(行为主)还是FORTRAN语言(列为主)的顺序浏览。</target>
        </trans-unit>
        <trans-unit id="62fef4817f86a662507fdd128bbc1b9cb8b3cd5a" translate="yes" xml:space="preserve">
          <source>Determines whether the given object represents a scalar data-type.</source>
          <target state="translated">确定给定对象是否代表一个标量数据类型。</target>
        </trans-unit>
        <trans-unit id="5f0e0492ec52021d3c5b8cdeeb35e0f95d3b1d72" translate="yes" xml:space="preserve">
          <source>Determines whether the indices should be viewed as indexing in row-major (C-style) or column-major (Fortran-style) order.</source>
          <target state="translated">确定索引是按行大(C-style)还是列大(Fortran-style)的顺序进行索引。</target>
        </trans-unit>
        <trans-unit id="d8ccfefbbecb3816295b6b2447f684f6ceabb4bd" translate="yes" xml:space="preserve">
          <source>Determines whether the multi-index should be viewed as indexing in row-major (C-style) or column-major (Fortran-style) order.</source>
          <target state="translated">确定多索引是按行大(C-style)还是列大(Fortran-style)的顺序进行索引。</target>
        </trans-unit>
        <trans-unit id="66e7dd4c526a5148a42bbca5f07010c8a652ad99" translate="yes" xml:space="preserve">
          <source>Development versions (no git hash available): &amp;lsquo;1.8.0.dev-Unknown&amp;rsquo;</source>
          <target state="translated">开发版本（无可用的git hash）：'1.8.0.dev-Unknown'</target>
        </trans-unit>
        <trans-unit id="d0fdf3b26f9c530f928d171827b0d01a3adcb222" translate="yes" xml:space="preserve">
          <source>Development versions after a1: &amp;lsquo;1.8.0a1.dev-f1234afa&amp;rsquo;,</source>
          <target state="translated">a1之后的开发版本：&amp;ldquo; 1.8.0a1.dev-f1234afa&amp;rdquo;，</target>
        </trans-unit>
        <trans-unit id="5fcf12e6d8e4b52c92d8112af85cd4e8de564860" translate="yes" xml:space="preserve">
          <source>Development versions: &amp;lsquo;1.8.0.dev-f1234afa&amp;rsquo; (git commit hash appended)</source>
          <target state="translated">开发版本：&amp;ldquo; 1.8.0.dev-f1234afa&amp;rdquo;（附加了git commit hash）</target>
        </trans-unit>
        <trans-unit id="2587e018673361fa809647d0df3794abbf90b626" translate="yes" xml:space="preserve">
          <source>Diagnosing machine parameters.</source>
          <target state="translated">诊断机器参数。</target>
        </trans-unit>
        <trans-unit id="571a1b4f25ce9e3bf2b1d858d49e854688780a04" translate="yes" xml:space="preserve">
          <source>Diagonal above which to zero elements. &lt;code&gt;k = 0&lt;/code&gt; (the default) is the main diagonal, &lt;code&gt;k &amp;lt; 0&lt;/code&gt; is below it and &lt;code&gt;k &amp;gt; 0&lt;/code&gt; is above.</source>
          <target state="translated">对角线上方为零元素。 &lt;code&gt;k = 0&lt;/code&gt; （默认值）是主对角线， &lt;code&gt;k &amp;lt; 0&lt;/code&gt; 在其下方， &lt;code&gt;k &amp;gt; 0&lt;/code&gt; 在其上方。</target>
        </trans-unit>
        <trans-unit id="55837b5795b6970f83dccf9cc6ed178e395491c1" translate="yes" xml:space="preserve">
          <source>Diagonal covariance (&lt;code&gt;cov&lt;/code&gt; has non-negative elements, and only on the diagonal)</source>
          <target state="translated">对角协方差（ &lt;code&gt;cov&lt;/code&gt; 具有非负元素，并且仅在对角线上）</target>
        </trans-unit>
        <trans-unit id="997674fd629a0b4695b89afdafe7066dd8688712" translate="yes" xml:space="preserve">
          <source>Diagonal covariance means that points are oriented along x or y-axis:</source>
          <target state="translated">对角线协方差是指点沿x轴或y轴方向。</target>
        </trans-unit>
        <trans-unit id="8b13398d28ad559216c01627144dceb31c001c77" translate="yes" xml:space="preserve">
          <source>Diagonal in question. The default is 0. Use &lt;code&gt;k&amp;gt;0&lt;/code&gt; for diagonals above the main diagonal, and &lt;code&gt;k&amp;lt;0&lt;/code&gt; for diagonals below the main diagonal.</source>
          <target state="translated">对角线问题。默认值为0。对于主对角线上方的对角线，请使用 &lt;code&gt;k&amp;gt;0&lt;/code&gt; ,对于主对角线下方的对角线，请使用 &lt;code&gt;k&amp;lt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2272a7d3ef4499c2fba3286512459f06b9b8c4bb" translate="yes" xml:space="preserve">
          <source>Diagonal offset (see &lt;a href=&quot;numpy.tril#numpy.tril&quot;&gt;&lt;code&gt;tril&lt;/code&gt;&lt;/a&gt; for details).</source>
          <target state="translated">对角偏移（有关详细信息，请参见&lt;a href=&quot;numpy.tril#numpy.tril&quot;&gt; &lt;code&gt;tril&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="bdb7019564c135f875fc4c3e6f917c80e9b077c0" translate="yes" xml:space="preserve">
          <source>Diagonal offset (see &lt;a href=&quot;numpy.triu#numpy.triu&quot;&gt;&lt;code&gt;triu&lt;/code&gt;&lt;/a&gt; for details).</source>
          <target state="translated">对角偏移（有关详细信息，请参见&lt;a href=&quot;numpy.triu#numpy.triu&quot;&gt; &lt;code&gt;triu&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="03d8dd8b377b7d9a317ab567d850a967ff187884" translate="yes" xml:space="preserve">
          <source>Diagonal to set; 0, the default, corresponds to the &amp;ldquo;main&amp;rdquo; diagonal, a positive (negative) &lt;code&gt;k&lt;/code&gt; giving the number of the diagonal above (below) the main.</source>
          <target state="translated">对角线设置；默认值0对应于&amp;ldquo;主&amp;rdquo;对角线，为正（负） &lt;code&gt;k&lt;/code&gt; ，表示主线以上（以下）的对角线编号。</target>
        </trans-unit>
        <trans-unit id="01b9cc7bface7de40b225d1e08bfd9974c80817b" translate="yes" xml:space="preserve">
          <source>Dictionary containing the information required to describe the state of the PRNG</source>
          <target state="translated">包含描述PRNG状态所需的信息的字典。</target>
        </trans-unit>
        <trans-unit id="465ece096e63883c4adc1473d9e883a01beef81f" translate="yes" xml:space="preserve">
          <source>Dictionary containing the old settings.</source>
          <target state="translated">包含旧设置的词典。</target>
        </trans-unit>
        <trans-unit id="a302338cc77d36ca6ca6a444397d206bd6ba38d8" translate="yes" xml:space="preserve">
          <source>Dictionary of current print options with keys</source>
          <target state="translated">带键的当前打印选项词典</target>
        </trans-unit>
        <trans-unit id="9e2413069148ff06bfc90db576c632870eaad55e" translate="yes" xml:space="preserve">
          <source>Dictionary of named fields defined for this data type, or &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">为此数据类型定义的命名字段的字典，或 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b18fcf6662ee91bcc267021a433a9c47b4716fe9" translate="yes" xml:space="preserve">
          <source>Difference (subtraction) of two polynomials.</source>
          <target state="translated">两个多项式的差(减)。</target>
        </trans-unit>
        <trans-unit id="825117b1f5072a690e7d5d35fccadef88b068aef" translate="yes" xml:space="preserve">
          <source>Difference between sequence and scalars:</source>
          <target state="translated">序列和标量的区别。</target>
        </trans-unit>
        <trans-unit id="44ae6a3aab38641659dd21a2dd5a0126482da74d" translate="yes" xml:space="preserve">
          <source>Differences Between 1.6 and 1.7 Datetimes</source>
          <target state="translated">1.6和1.7日期的区别</target>
        </trans-unit>
        <trans-unit id="b75fd672a5cf256c07308370a04454e14a79f629" translate="yes" xml:space="preserve">
          <source>Differences with Array interface (Version 2)</source>
          <target state="translated">与阵列接口的区别(第二版</target>
        </trans-unit>
        <trans-unit id="4300cd91f693489c6a5674ec8ec61a6dee25b189" translate="yes" xml:space="preserve">
          <source>Different &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarrays&lt;/code&gt;&lt;/a&gt; can share the same data, so that changes made in one &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; may be visible in another. That is, an ndarray can be a &lt;em&gt;&amp;ldquo;view&amp;rdquo;&lt;/em&gt; to another ndarray, and the data it is referring to is taken care of by the &lt;em&gt;&amp;ldquo;base&amp;rdquo;&lt;/em&gt; ndarray. ndarrays can also be views to memory owned by Python &lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#str&quot;&gt;&lt;code&gt;strings&lt;/code&gt;&lt;/a&gt; or objects implementing the &lt;code&gt;buffer&lt;/code&gt; or &lt;a href=&quot;arrays.interface#arrays-interface&quot;&gt;array&lt;/a&gt; interfaces.</source>
          <target state="translated">不同的&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarrays&lt;/code&gt; &lt;/a&gt;可以共享相同的数据，因此在一个&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; 中&lt;/a&gt;所做的更改可能在另一ndarray中可见。也就是说，一个ndarray可以是另一个ndarray 的&lt;em&gt;&amp;ldquo;视图&amp;rdquo;&lt;/em&gt;，并且它所引用的数据由&lt;em&gt;&amp;ldquo;基本&amp;rdquo;&lt;/em&gt; ndarray处理。ndarrays也可以是实现 &lt;code&gt;buffer&lt;/code&gt; 或&lt;a href=&quot;arrays.interface#arrays-interface&quot;&gt;数组&lt;/a&gt;接口的Python &lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#str&quot;&gt; &lt;code&gt;strings&lt;/code&gt; &lt;/a&gt;或对象所拥有的内存的视图。</target>
        </trans-unit>
        <trans-unit id="2d1293c185e75af6d69f6c98a33e894acc7589c9" translate="yes" xml:space="preserve">
          <source>Differentiate a Chebyshev series.</source>
          <target state="translated">区分出一个切比雪夫系列。</target>
        </trans-unit>
        <trans-unit id="8d839ccd2dfc63fbf3d7f72d0c5a816686c1455a" translate="yes" xml:space="preserve">
          <source>Differentiate a Hermite series.</source>
          <target state="translated">区分出一个赫米特系列。</target>
        </trans-unit>
        <trans-unit id="350467ef2f75b4100fac9eb332f8dbf9310f3098" translate="yes" xml:space="preserve">
          <source>Differentiate a Hermite_e series.</source>
          <target state="translated">区分出一个Hermite_e系列。</target>
        </trans-unit>
        <trans-unit id="7ecd2cf570222711a1cc1ae4380637a814f82362" translate="yes" xml:space="preserve">
          <source>Differentiate a Laguerre series.</source>
          <target state="translated">对拉格列进行微分。</target>
        </trans-unit>
        <trans-unit id="320f56f9077471825e8d1549eab31dc00557c694" translate="yes" xml:space="preserve">
          <source>Differentiate a Legendre series.</source>
          <target state="translated">区分出一个传奇系列。</target>
        </trans-unit>
        <trans-unit id="7bfc33e1228b29a88933a8f29aae49636b3414cf" translate="yes" xml:space="preserve">
          <source>Differentiate a polynomial.</source>
          <target state="translated">微分一个多项式。</target>
        </trans-unit>
        <trans-unit id="844fa0e757902457e0da48c9d9d537e645b1a135" translate="yes" xml:space="preserve">
          <source>Differentiate.</source>
          <target state="translated">Differentiate.</target>
        </trans-unit>
        <trans-unit id="5fbe5e498b5af2c25aac251fb6bb0a2c7a4ee208" translate="yes" xml:space="preserve">
          <source>Dimension Index</source>
          <target state="translated">尺寸指数</target>
        </trans-unit>
        <trans-unit id="604ffcf9d27fb4fb0162fdca0045216d08973bc5" translate="yes" xml:space="preserve">
          <source>Dimension Name</source>
          <target state="translated">尺寸名称</target>
        </trans-unit>
        <trans-unit id="16b40f0ccd35ed9bc1f597c1b6ca359ab12da9c4" translate="yes" xml:space="preserve">
          <source>Dimension indices in a flattened form; indices of argument &lt;code&gt;k&lt;/code&gt; are stored in &lt;code&gt;core_dim_ixs[core_offsets[k] : core_offsets[k] +
core_numdims[k]]&lt;/code&gt;</source>
          <target state="translated">展平的尺寸索引；参数 &lt;code&gt;k&lt;/code&gt; 的索引存储在 &lt;code&gt;core_dim_ixs[core_offsets[k] : core_offsets[k] + core_numdims[k]]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4720f96f0dc9b13a80d3150f6ee99efe7a2bf618" translate="yes" xml:space="preserve">
          <source>Dimension lists for different arguments are separated by &lt;code&gt;&quot;,&quot;&lt;/code&gt;. Input/output arguments are separated by &lt;code&gt;&quot;-&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">不同参数的维列表以 &lt;code&gt;&quot;,&quot;&lt;/code&gt; 分隔。输入/输出参数由 &lt;code&gt;&quot;-&amp;gt;&quot;&lt;/code&gt; 分隔。</target>
        </trans-unit>
        <trans-unit id="37cc6b0f7bb3682386878d1b4327551ac2b2f9c6" translate="yes" xml:space="preserve">
          <source>Discrete Fourier Transform (&lt;code&gt;numpy.fft&lt;/code&gt;)</source>
          <target state="translated">离散傅立叶变换（ &lt;code&gt;numpy.fft&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="0599eda60b4e9fea359c989e15306fa6ba42641a" translate="yes" xml:space="preserve">
          <source>Discrete Fourier Transform (numpy.fft)</source>
          <target state="translated">离散傅立叶变换(numpy.fft)</target>
        </trans-unit>
        <trans-unit id="7e09c6be62e60a24d79a9a2519a544283d5d6191" translate="yes" xml:space="preserve">
          <source>Discrete cross-correlation of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;v&lt;/code&gt; 的离散互相关。</target>
        </trans-unit>
        <trans-unit id="e53e1928d52ad6e33b46c1b8035d3e51b89bc405" translate="yes" xml:space="preserve">
          <source>Discrete fourier transform</source>
          <target state="translated">离散傅立叶变换</target>
        </trans-unit>
        <trans-unit id="d506f48e956cd0fc595f2d760c2568b2ecab8f30" translate="yes" xml:space="preserve">
          <source>Discrete uniform distribution over the closed interval &lt;code&gt;[low, high]&lt;/code&gt;.</source>
          <target state="translated">闭合间隔 &lt;code&gt;[low, high]&lt;/code&gt; 离散均匀分布。</target>
        </trans-unit>
        <trans-unit id="581725b9ae0b1aa5fab3c6862adf5b089aedf3b7" translate="yes" xml:space="preserve">
          <source>Discrete uniform distribution, yielding integers.</source>
          <target state="translated">离散均匀分布,产生整数。</target>
        </trans-unit>
        <trans-unit id="e9cbd8c39929bc0b483e8db9cb22ad66356f9dd1" translate="yes" xml:space="preserve">
          <source>Discrete, linear convolution of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;v&lt;/code&gt; 的离散线性卷积。</target>
        </trans-unit>
        <trans-unit id="2f1bd27e525549ac4c15b3721fa99d1b05468878" translate="yes" xml:space="preserve">
          <source>Discrete, linear convolution of two one-dimensional sequences.</source>
          <target state="translated">两个一维序列的离散、线性卷积。</target>
        </trans-unit>
        <trans-unit id="820f5171bb026c33497c51bf6408edd94f4c7574" translate="yes" xml:space="preserve">
          <source>Dispersion of the distribution, has to be &amp;gt;=0.</source>
          <target state="translated">分布的色散必须&amp;gt; = 0。</target>
        </trans-unit>
        <trans-unit id="b40bb754403d167b3c047ebbae91fd8d8cb0914f" translate="yes" xml:space="preserve">
          <source>Display histogram of the sample:</source>
          <target state="translated">显示样本的直方图。</target>
        </trans-unit>
        <trans-unit id="188801f0d5b3d1b7349810d9fd7ff8a72e496879" translate="yes" xml:space="preserve">
          <source>Display results as a histogram:</source>
          <target state="translated">以直方图形式显示结果。</target>
        </trans-unit>
        <trans-unit id="8a9edcfc295cbbba0c31cafd95aee17d95c83756" translate="yes" xml:space="preserve">
          <source>Display the histogram of the samples, along with the probability density function:</source>
          <target state="translated">显示样本的直方图,以及概率密度函数。</target>
        </trans-unit>
        <trans-unit id="1e318b4b3e84c3dbcd35ba51c8d38616480afa39" translate="yes" xml:space="preserve">
          <source>Display the order (the leading zero-coefficients are removed):</source>
          <target state="translated">显示顺序(去掉前面的零系数)。</target>
        </trans-unit>
        <trans-unit id="1d3c457cbe3e35739086346e0a4048653efa42e7" translate="yes" xml:space="preserve">
          <source>Distribution</source>
          <target state="translated">Distribution</target>
        </trans-unit>
        <trans-unit id="1908a0e50cf9cf44d92392e9f5f89a3166d12095" translate="yes" xml:space="preserve">
          <source>Distribution mean, must be &amp;gt; 0.</source>
          <target state="translated">分布平均值，必须&amp;gt; 0。</target>
        </trans-unit>
        <trans-unit id="955961355de913bb9e7fa3e948b32a11d7c7c64d" translate="yes" xml:space="preserve">
          <source>Distribution parameter. Must be greater than 1.</source>
          <target state="translated">分配参数。必须大于1。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
