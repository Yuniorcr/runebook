<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="numpy">
    <body>
      <group id="numpy">
        <trans-unit id="86d8d5f0414d9a23442dad9a8767153d6dc63973" translate="yes" xml:space="preserve">
          <source>F2PY has basic support for Fortran 90 module allocatable arrays.</source>
          <target state="translated">F2PY对Fortran 90模块可分配数组有基本支持。</target>
        </trans-unit>
        <trans-unit id="70ca3b53756dbec8defd4dadba9010e32a75e058" translate="yes" xml:space="preserve">
          <source>F2PY implements basic compatibility checks between related arguments in order to avoid any unexpected crashes.</source>
          <target state="translated">F2PY实现了相关参数之间的基本兼容性检查,以避免任何意外的崩溃。</target>
        </trans-unit>
        <trans-unit id="d254f0a276a232e34acfb47e3326523f334f058d" translate="yes" xml:space="preserve">
          <source>F2PY may lower cases also in C expressions when scanning Fortran codes (see &lt;code&gt;--[no]-lower&lt;/code&gt; option).</source>
          <target state="translated">扫描Fortran代码时，F2PY在C表达式中也可以小写（请参阅 &lt;code&gt;--[no]-lower&lt;/code&gt; 选项）。</target>
        </trans-unit>
        <trans-unit id="ec756cae82276f06410c3a4d2b35a06f369bcafa" translate="yes" xml:space="preserve">
          <source>F2PY provides &lt;code&gt;intent(inplace)&lt;/code&gt; attribute that would modify the attributes of an input array so that any changes made by Fortran routine will be effective also in input argument. For example, if one specifies &lt;code&gt;intent(inplace) a&lt;/code&gt; (see below, how), then the example above would read:</source>
          <target state="translated">F2PY提供了 &lt;code&gt;intent(inplace)&lt;/code&gt; inplace ）属性，该属性将修改输入数组的属性，以便Fortran例程所做的任何更改在输入参数中也将有效。例如，如果指定一个 &lt;code&gt;intent(inplace) a&lt;/code&gt; （请参见下文，方法），那么上面的示例将显示为：</target>
        </trans-unit>
        <trans-unit id="fca2006682a608b9e1b2b53bb3bb49e7143a70f2" translate="yes" xml:space="preserve">
          <source>F2PY reads a signature file and writes a Python C/API module containing Fortran/C/Python bindings.</source>
          <target state="translated">F2PY读取一个签名文件,并写入一个包含Fortran/C/python绑定的Python C/API模块。</target>
        </trans-unit>
        <trans-unit id="33d34cb52e571436cd929620cb006187918c3090" translate="yes" xml:space="preserve">
          <source>F2PY supports calling Python functions from Fortran or C codes.</source>
          <target state="translated">F2PY 支持从 Fortran 或 C 代码中调用 Python 函数。</target>
        </trans-unit>
        <trans-unit id="a50f97135d3a00f9c97ae354c1ab19960a6943cf" translate="yes" xml:space="preserve">
          <source>F2Py Guide</source>
          <target state="translated">F2Py指南</target>
        </trans-unit>
        <trans-unit id="780b1e049709bc720bf18c99d71f2cd4235c8e49" translate="yes" xml:space="preserve">
          <source>F2Py guide</source>
          <target state="translated">F2Py指南</target>
        </trans-unit>
        <trans-unit id="db0e0f2556443edbd8b7072d8289833837b00763" translate="yes" xml:space="preserve">
          <source>F2py allows you to automatically construct an extension module that interfaces to routines in Fortran 77/90/95 code. It has the ability to parse Fortran 77/90/95 code and automatically generate Python signatures for the subroutines it encounters, or you can guide how the subroutine interfaces with Python by constructing an interface-definition-file (or modifying the f2py-produced one).</source>
          <target state="translated">F2py允许你自动构造一个扩展模块,与Fortran 77/90/95代码中的例程接口。它能够解析Fortran 77/90/95代码,并为遇到的子程序自动生成Python签名,或者你可以通过构造一个接口定义文件(或修改f2py生成的文件)来指导子程序如何与Python接口。</target>
        </trans-unit>
        <trans-unit id="bf8300dc1be4d8761c3816eeb71051b6b621dd6e" translate="yes" xml:space="preserve">
          <source>FFT</source>
          <target state="translated">FFT</target>
        </trans-unit>
        <trans-unit id="ca600c25350318c92a93eef893cdd109ac18c10d" translate="yes" xml:space="preserve">
          <source>FFT (Fast Fourier Transform) refers to a way the discrete Fourier Transform (DFT) can be calculated efficiently, by using symmetries in the calculated terms. The symmetry is highest when &lt;code&gt;n&lt;/code&gt; is a power of 2, and the transform is therefore most efficient for these sizes.</source>
          <target state="translated">FFT（快速傅立叶变换）是指通过在计算项中使用对称性可以有效地计算离散傅立叶变换（DFT）的方法。当 &lt;code&gt;n&lt;/code&gt; 为2的幂时，对称性最高，因此，对于这些大小，变换效率最高。</target>
        </trans-unit>
        <trans-unit id="1e904f6af52956913c4ff703c15d71d4683c8dd0" translate="yes" xml:space="preserve">
          <source>F_CONTIGUOUS / F / FORTRAN</source>
          <target state="translated">F_CONTIGUOUS/F/FORTRAN.</target>
        </trans-unit>
        <trans-unit id="10ba031202732234b30a39bc920cbaa6d821ef6b" translate="yes" xml:space="preserve">
          <source>F_CONTIGUOUS and not C_CONTIGUOUS.</source>
          <target state="translated">F_CONTIGUOUS而不是C_CONTIGUOUS。</target>
        </trans-unit>
        <trans-unit id="542219cc1d690d05adfbb2e51a8b3ccb1985fddc" translate="yes" xml:space="preserve">
          <source>F_CONTIGUOUS or C_CONTIGUOUS (one-segment test).</source>
          <target state="translated">F_CONTIGUOUS或C_CONTIGUOUS(单段测试)。</target>
        </trans-unit>
        <trans-unit id="85c6c271be69ba94867c22f54f57654f454c41b4" translate="yes" xml:space="preserve">
          <source>Factor the matrix &lt;code&gt;a&lt;/code&gt; as &lt;em&gt;qr&lt;/em&gt;, where &lt;code&gt;q&lt;/code&gt; is orthonormal and &lt;code&gt;r&lt;/code&gt; is upper-triangular.</source>
          <target state="translated">将矩阵 &lt;code&gt;a&lt;/code&gt; 分解为&lt;em&gt;qr&lt;/em&gt;，其中 &lt;code&gt;q&lt;/code&gt; 是正交的， &lt;code&gt;r&lt;/code&gt; 是上三角的。</target>
        </trans-unit>
        <trans-unit id="fb318cde14ee94b6e5d32ac7d527c0788644b0e1" translate="yes" xml:space="preserve">
          <source>Fail unless an exception of class exception_class and with message that matches expected_regexp is thrown by callable when invoked with arguments args and keyword arguments kwargs.</source>
          <target state="translated">失败,除非当调用参数args和关键字参数kwargs时,callable会抛出一个类exception_class的异常,并带有与expected_regexp匹配的消息。</target>
        </trans-unit>
        <trans-unit id="021d84299e2248496708e7d1e546ad6c2c18b0ba" translate="yes" xml:space="preserve">
          <source>Fail unless an exception of class exception_class is thrown by callable when invoked with arguments args and keyword arguments kwargs.</source>
          <target state="translated">失败,除非用参数args和关键字参数kwargs调用时,callable会抛出一个类exception_class的异常。</target>
        </trans-unit>
        <trans-unit id="88591071684d50acd16039be01f0c08d81ea457a" translate="yes" xml:space="preserve">
          <source>Fail unless an exception of class exception_class is thrown by callable when invoked with arguments args and keyword arguments kwargs. If a different type of exception is thrown, it will not be caught, and the test case will be deemed to have suffered an error, exactly as for an unexpected exception.</source>
          <target state="translated">失败,除非当调用 arguments args 和关键字 arguments kwargs 时,callable 抛出类 exception_class 的异常。如果抛出了不同类型的异常,则不会被捕获,测试用例将被视为发生了错误,这与意外异常完全相同。</target>
        </trans-unit>
        <trans-unit id="719788786f4bf9fa2ee26b39d5371d0a438935c3" translate="yes" xml:space="preserve">
          <source>Fail unless the given callable throws the specified warning.</source>
          <target state="translated">失败,除非给定的callable抛出指定的警告。</target>
        </trans-unit>
        <trans-unit id="552c13b4b3257ae89f519cb962e935c59da9aa88" translate="yes" xml:space="preserve">
          <source>Fanaticism consists of redoubling your efforts when you have forgotten your aim. &amp;mdash; &lt;em&gt;George Santayana&lt;/em&gt;</source>
          <target state="translated">狂热主义包括忘记目标时加倍努力。&amp;mdash; &lt;em&gt;乔治&amp;middot;桑塔亚娜&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c67baf5f0ace8714e24d83b916518b08cd541740" translate="yes" xml:space="preserve">
          <source>Fast element-wise operations, called a &lt;a href=&quot;#term-ufunc&quot;&gt;ufunc&lt;/a&gt;, operate on arrays.</source>
          <target state="translated">快速的按元素操作（称为&lt;a href=&quot;#term-ufunc&quot;&gt;ufunc&lt;/a&gt;）对数组进行操作。</target>
        </trans-unit>
        <trans-unit id="a35d6e8cdee3fab38ad9c3056a80a39fdb1d90ea" translate="yes" xml:space="preserve">
          <source>Faster version of &lt;a href=&quot;#numpy.base_repr&quot;&gt;&lt;code&gt;base_repr&lt;/code&gt;&lt;/a&gt; for base 2.</source>
          <target state="translated">base 2 的&lt;a href=&quot;#numpy.base_repr&quot;&gt; &lt;code&gt;base_repr&lt;/code&gt; &lt;/a&gt;更快版本。</target>
        </trans-unit>
        <trans-unit id="450b0ab74bf6b08b6fed235cfac5fd255dd761eb" translate="yes" xml:space="preserve">
          <source>Fasttake and fastputmask slots are deprecated and NULL&amp;rsquo;ed</source>
          <target state="translated">Fasttake和fastputmask插槽已弃用并为NULL</target>
        </trans-unit>
        <trans-unit id="ad565d9d01d0e0bf91fd6a8532f6d81613338901" translate="yes" xml:space="preserve">
          <source>Feature</source>
          <target state="translated">Feature</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="cba8e75130f021ad02ee54a4acd20b3b023d217d" translate="yes" xml:space="preserve">
          <source>Fernando Perez&amp;rsquo; git page - &lt;a href=&quot;http://www.fperez.org/py4science/git.html&quot;&gt;Fernando&amp;rsquo;s git page&lt;/a&gt; - many links and tips</source>
          <target state="translated">费尔南多&amp;middot;佩雷斯的git页面-&lt;a href=&quot;http://www.fperez.org/py4science/git.html&quot;&gt;费尔南多的git页面&lt;/a&gt;-许多链接和提示</target>
        </trans-unit>
        <trans-unit id="5c6f34280b7f890c09c370b6ae106bab782a8ea7" translate="yes" xml:space="preserve">
          <source>Field Access</source>
          <target state="translated">外地访问</target>
        </trans-unit>
        <trans-unit id="783edc3ed85699bf943ebb957a288a27bf6fa548" translate="yes" xml:space="preserve">
          <source>Field Titles</source>
          <target state="translated">字段标题</target>
        </trans-unit>
        <trans-unit id="1f20e66b17a6eb7c2baf1ab68337d91eaf6f4f80" translate="yes" xml:space="preserve">
          <source>Figure</source>
          <target state="translated">Figure</target>
        </trans-unit>
        <trans-unit id="6810ab68c484c234e459c4fd42ee6ddebf48e9df" translate="yes" xml:space="preserve">
          <source>File bug reports or feature requests, and make contributions (e.g. code patches), by opening a &amp;ldquo;new issue&amp;rdquo; on GitHub:</source>
          <target state="translated">通过在GitHub上打开&amp;ldquo;新问题&amp;rdquo;，提交错误报告或功能请求，并做出贡献（例如，代码补丁）：</target>
        </trans-unit>
        <trans-unit id="373ecfdf236324d2c0d2c0966daa4376bd84ecc7" translate="yes" xml:space="preserve">
          <source>File extensions</source>
          <target state="translated">文件扩展名</target>
        </trans-unit>
        <trans-unit id="d09479e812c08194a796ba5cf0534018f31d75df" translate="yes" xml:space="preserve">
          <source>File like object that the output is written to, default is &lt;code&gt;stdout&lt;/code&gt;. The object has to be opened in &amp;lsquo;w&amp;rsquo; or &amp;lsquo;a&amp;rsquo; mode.</source>
          <target state="translated">写入输出的对象之类的文件，默认为 &lt;code&gt;stdout&lt;/code&gt; 。必须以&amp;ldquo; w&amp;rdquo;或&amp;ldquo; a&amp;rdquo;模式打开对象。</target>
        </trans-unit>
        <trans-unit id="87eae4c8fed58e613f33763392061f9f060bfb3a" translate="yes" xml:space="preserve">
          <source>File mode.</source>
          <target state="translated">文件模式:</target>
        </trans-unit>
        <trans-unit id="fd757708817417e6d160c4d854e159b642dde015" translate="yes" xml:space="preserve">
          <source>File name or file object to read.</source>
          <target state="translated">文件名或要读取的文件对象。</target>
        </trans-unit>
        <trans-unit id="a9cb7966c21c4ba3f863696ad8ce671f4f627493" translate="yes" xml:space="preserve">
          <source>File object.</source>
          <target state="translated">文件对象。</target>
        </trans-unit>
        <trans-unit id="4a94520c92dda87c31025fbdcee94cc740835e3c" translate="yes" xml:space="preserve">
          <source>File on disk is unchanged:</source>
          <target state="translated">磁盘上的文件没有变化。</target>
        </trans-unit>
        <trans-unit id="0031f1b0b3ec78263f049edb5bf2d9bd62cb7daa" translate="yes" xml:space="preserve">
          <source>File or filename to which the data is saved. If file is a file-object, then the filename is unchanged. If file is a string or Path, a &lt;code&gt;.npy&lt;/code&gt; extension will be appended to the file name if it does not already have one.</source>
          <target state="translated">将数据保存到的文件或文件名。如果file是文件对象，则文件名不变。如果文件是字符串或路径，则 &lt;code&gt;.npy&lt;/code&gt; 扩展名将附加到文件名（如果尚无扩展名）。</target>
        </trans-unit>
        <trans-unit id="1eb6e34596962a0a844dec399c9d41368523ad02" translate="yes" xml:space="preserve">
          <source>File or filename to which the data is saved. If file is a file-object, then the filename is unchanged. If file is a string or Path, a &lt;code&gt;.npy&lt;/code&gt; extension will be appended to the filename if it does not already have one.</source>
          <target state="translated">将数据保存到的文件或文件名。如果file是文件对象，则文件名不变。如果文件是字符串或路径，则 &lt;code&gt;.npy&lt;/code&gt; 扩展名将附加到文件名（如果尚无扩展名）。</target>
        </trans-unit>
        <trans-unit id="e820f26629f1b163437a25da45907f2a0bdeef89" translate="yes" xml:space="preserve">
          <source>File, filename, list, or generator to read. If the filename extension is &lt;code&gt;gz&lt;/code&gt; or &lt;a href=&quot;https://docs.python.org/dev/library/bz2.html#module-bz2&quot;&gt;&lt;code&gt;bz2&lt;/code&gt;&lt;/a&gt;, the file is first decompressed. Note that generators must return byte strings in Python 3k. The strings in a list or produced by a generator are treated as lines.</source>
          <target state="translated">要读取的文件，文件名，列表或生成器。如果文件扩展名是 &lt;code&gt;gz&lt;/code&gt; 或&lt;a href=&quot;https://docs.python.org/dev/library/bz2.html#module-bz2&quot;&gt; &lt;code&gt;bz2&lt;/code&gt; &lt;/a&gt;，则首先将文件解压缩。请注意，生成器必须在Python 3k中返回字节字符串。列表中或由生成器生成的字符串被视为行。</target>
        </trans-unit>
        <trans-unit id="fab43e32c1dfae0973539d24c1436cb574228947" translate="yes" xml:space="preserve">
          <source>File, filename, list, or generator to read. If the filename extension is &lt;code&gt;gz&lt;/code&gt; or &lt;a href=&quot;https://docs.python.org/dev/library/bz2.html#module-bz2&quot;&gt;&lt;code&gt;bz2&lt;/code&gt;&lt;/a&gt;, the file is first decompressed. Note that generators must return byte strings. The strings in a list or produced by a generator are treated as lines.</source>
          <target state="translated">要读取的文件，文件名，列表或生成器。如果文件扩展名是 &lt;code&gt;gz&lt;/code&gt; 或&lt;a href=&quot;https://docs.python.org/dev/library/bz2.html#module-bz2&quot;&gt; &lt;code&gt;bz2&lt;/code&gt; &lt;/a&gt;，则首先将文件解压缩。请注意，生成器必须返回字节字符串。列表中或由生成器生成的字符串被视为行。</target>
        </trans-unit>
        <trans-unit id="822b222e1d15e367e3952f91b983db03e9a7813a" translate="yes" xml:space="preserve">
          <source>File, filename, or generator to read. If the filename extension is &lt;code&gt;.gz&lt;/code&gt; or &lt;code&gt;.bz2&lt;/code&gt;, the file is first decompressed. Note that generators should return byte strings for Python 3k.</source>
          <target state="translated">要读取的文件，文件名或生成器。如果文件扩展名是 &lt;code&gt;.gz&lt;/code&gt; 或 &lt;code&gt;.bz2&lt;/code&gt; ，则首先将文件解压缩。请注意，生成器应返回Python 3k的字节字符串。</target>
        </trans-unit>
        <trans-unit id="7c2d62ffff5fbd690a9400522b7a8e17b68bb40c" translate="yes" xml:space="preserve">
          <source>File, filename, or generator to read. If the filename extension is &lt;code&gt;.gz&lt;/code&gt; or &lt;code&gt;.bz2&lt;/code&gt;, the file is first decompressed. Note that generators should return byte strings.</source>
          <target state="translated">要读取的文件，文件名或生成器。如果文件扩展名是 &lt;code&gt;.gz&lt;/code&gt; 或 &lt;code&gt;.bz2&lt;/code&gt; ，则首先将文件解压缩。请注意，生成器应返回字节字符串。</target>
        </trans-unit>
        <trans-unit id="c13aad6dcb77e8786c02dc6c8f0cc3a100a87f10" translate="yes" xml:space="preserve">
          <source>File-like object to write the output to. If omitted, use a pager.</source>
          <target state="translated">要将输出写到类似文件的对象。如果省略,则使用寻呼机。</target>
        </trans-unit>
        <trans-unit id="3b5057522ae1af734e89a0b5dfbff160729789a2" translate="yes" xml:space="preserve">
          <source>Filename extension if &lt;code&gt;source_fn&lt;/code&gt; is not provided. The extension tells which fortran standard is used. The default is &lt;code&gt;f&lt;/code&gt;, which implies F77 standard.</source>
          <target state="translated">如果未提供 &lt;code&gt;source_fn&lt;/code&gt; ,则文件扩展名。该扩展告知使用哪种fortran标准。默认值为 &lt;code&gt;f&lt;/code&gt; ，表示F77标准。</target>
        </trans-unit>
        <trans-unit id="529e452aa227b660fcf372199a15e8d7d5c2906a" translate="yes" xml:space="preserve">
          <source>Filename or file object to read.</source>
          <target state="translated">文件名或要读取的文件对象。</target>
        </trans-unit>
        <trans-unit id="441bea0f99295363abddd57e69579a4d7e166597" translate="yes" xml:space="preserve">
          <source>Files output by &lt;a href=&quot;../reference/generated/numpy.save#numpy.save&quot;&gt;&lt;code&gt;numpy.save&lt;/code&gt;&lt;/a&gt; (that is, using the numpy format) can be read using &lt;a href=&quot;../reference/generated/numpy.load#numpy.load&quot;&gt;&lt;code&gt;numpy.load&lt;/code&gt;&lt;/a&gt; with the &lt;code&gt;mmap_mode&lt;/code&gt; keyword argument:</source>
          <target state="translated">可以使用&lt;a href=&quot;../reference/generated/numpy.load#numpy.load&quot;&gt; &lt;code&gt;numpy.load&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;mmap_mode&lt;/code&gt; 关键字参数来读取numpy.save输出的&lt;a href=&quot;../reference/generated/numpy.save#numpy.save&quot;&gt; &lt;code&gt;numpy.save&lt;/code&gt; &lt;/a&gt;（即使用numpy格式）：</target>
        </trans-unit>
        <trans-unit id="cafc76c090d17de83480422080a28bd0d7fd39f0" translate="yes" xml:space="preserve">
          <source>Fill a newly created array with a single value obj at all locations in the structure with object data-types. No checking is performed but &lt;em&gt;arr&lt;/em&gt; must be of data-type &lt;a href=&quot;c-api.dtype#c.NPY_OBJECT&quot;&gt;&lt;code&gt;NPY_OBJECT&lt;/code&gt;&lt;/a&gt; and be single-segment and uninitialized (no previous objects in position). Use &lt;code&gt;PyArray_DECREF&lt;/code&gt; (&lt;em&gt;arr&lt;/em&gt;) if you need to decrement all the items in the object array prior to calling this function.</source>
          <target state="translated">使用对象数据类型在结构中的所有位置用单个值obj填充新创建的数组。不执行任何检查，但是&lt;em&gt;arr&lt;/em&gt;必须为数据类型&lt;a href=&quot;c-api.dtype#c.NPY_OBJECT&quot;&gt; &lt;code&gt;NPY_OBJECT&lt;/code&gt; &lt;/a&gt;且为单段且未初始化（位置中没有先前的对象）。如果需要在调用此函数之前减少对象数组中的所有项目，请使用 &lt;code&gt;PyArray_DECREF&lt;/code&gt; （&lt;em&gt;arr&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="612fab5ef5d07ab4ae826c3e92e57f0933c1a153" translate="yes" xml:space="preserve">
          <source>Fill a newly created array with a single value obj at all locations in the structure with object data-types. No checking is performed but &lt;em&gt;arr&lt;/em&gt; must be of data-type &lt;a href=&quot;dtype#c.NPY_OBJECT&quot;&gt;&lt;code&gt;NPY_OBJECT&lt;/code&gt;&lt;/a&gt; and be single-segment and uninitialized (no previous objects in position). Use &lt;a href=&quot;#c.PyArray_XDECREF&quot;&gt;&lt;code&gt;PyArray_XDECREF&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;arr&lt;/em&gt;) if you need to decrement all the items in the object array prior to calling this function.</source>
          <target state="translated">使用对象数据类型在结构中的所有位置用单个值obj填充新创建的数组。不执行任何检查，但是&lt;em&gt;arr&lt;/em&gt;必须为数据类型&lt;a href=&quot;dtype#c.NPY_OBJECT&quot;&gt; &lt;code&gt;NPY_OBJECT&lt;/code&gt; &lt;/a&gt;且为单段且未初始化（位置中没有先前的对象）。如果需要在调用此函数之前减少对象数组中的所有项目，请使用&lt;a href=&quot;#c.PyArray_XDECREF&quot;&gt; &lt;code&gt;PyArray_XDECREF&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;arr&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="bb9c4c9e7ee887e06f557b25790d19437a193098" translate="yes" xml:space="preserve">
          <source>Fill a newly created array with a single value obj at all locations in the structure with object data-types. No checking is performed but &lt;em&gt;arr&lt;/em&gt; must be of data-type &lt;a href=&quot;dtype#c.NPY_OBJECT&quot;&gt;&lt;code&gt;NPY_OBJECT&lt;/code&gt;&lt;/a&gt; and be single-segment and uninitialized (no previous objects in position). Use &lt;code&gt;PyArray_DECREF&lt;/code&gt; (&lt;em&gt;arr&lt;/em&gt;) if you need to decrement all the items in the object array prior to calling this function.</source>
          <target state="translated">使用对象数据类型在结构中的所有位置用单个值obj填充新创建的数组。不执行任何检查，但是&lt;em&gt;arr&lt;/em&gt;必须为数据类型&lt;a href=&quot;dtype#c.NPY_OBJECT&quot;&gt; &lt;code&gt;NPY_OBJECT&lt;/code&gt; &lt;/a&gt;且为单段且未初始化（位置中没有先前的对象）。如果需要在调用此函数之前减少对象数组中的所有项目，请使用 &lt;code&gt;PyArray_DECREF&lt;/code&gt; （&lt;em&gt;arr&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="2dddc689c840b0f704b5fbfeacd8ef3c5403555f" translate="yes" xml:space="preserve">
          <source>Fill in a new Python type-object structure with pointers to new functions that will over-ride the default behavior while leaving any function that should remain the same unfilled (or NULL). The tp_name element should be different.</source>
          <target state="translated">在一个新的 Python 类型对象结构中填充新函数的指针,这些新函数将覆盖默认行为,同时留下任何应该保持不变的函数未填充 (或 NULL)。tp_name元素应该是不同的。</target>
        </trans-unit>
        <trans-unit id="522f873213d8106cc0a4bcd37cf77275093b44ed" translate="yes" xml:space="preserve">
          <source>Fill in the tp_base member of the new type-object structure with a pointer to the (main) parent type object. For multiple-inheritance, also fill in the tp_bases member with a tuple containing all of the parent objects in the order they should be used to define inheritance. Remember, all parent-types must have the same C-structure for multiple inheritance to work properly.</source>
          <target state="translated">在新类型对象结构的tp_base成员中填入指向(主)父类型对象的指针。对于多重继承,也要在tp_bases成员中填入包含所有父对象的元组,其顺序应该是用来定义继承的。记住,所有的父类型必须有相同的C结构,这样多重继承才能正常工作。</target>
        </trans-unit>
        <trans-unit id="b5a170286ef4b261aa8d713f55afdd2bfdd31a79" translate="yes" xml:space="preserve">
          <source>Fill out the release note &lt;code&gt;doc/release/1.14.5-notes.rst&lt;/code&gt; calling out significant changes.</source>
          <target state="translated">填写发行说明 &lt;code&gt;doc/release/1.14.5-notes.rst&lt;/code&gt; ,以进行重大更改。</target>
        </trans-unit>
        <trans-unit id="7b1b896be57d746740e7bb01641621fc3fcf97bb" translate="yes" xml:space="preserve">
          <source>Fill out the release note &lt;code&gt;doc/release/1.19.0-notes.rst&lt;/code&gt; calling out significant changes.</source>
          <target state="translated">填写发行说明 &lt;code&gt;doc/release/1.19.0-notes.rst&lt;/code&gt; ,以进行重大更改。</target>
        </trans-unit>
        <trans-unit id="260366fdf73d36b977576943b4aedf90420566c3" translate="yes" xml:space="preserve">
          <source>Fill the array pointed to by &lt;em&gt;obj&lt;/em&gt; &amp;mdash;which must be a (subclass of) ndarray&amp;mdash;with the contents of &lt;em&gt;val&lt;/em&gt; (evaluated as a byte). This macro calls memset, so obj must be contiguous.</source>
          <target state="translated">用&lt;em&gt;val&lt;/em&gt;的内容（以字节为单位）填充&lt;em&gt;obj所&lt;/em&gt;指向的数组（该数组必须是ndarray的子​​类）。此宏调用memset，因此obj必须是连续的。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1cc72d434ca66ec2855e95222b47cf34ee62d6a9" translate="yes" xml:space="preserve">
          <source>Fill the array with a scalar value.</source>
          <target state="translated">用一个标量值填充数组。</target>
        </trans-unit>
        <trans-unit id="a5d5966e608173a9667b1c1fac892e66538c72e9" translate="yes" xml:space="preserve">
          <source>Fill the array, &lt;em&gt;arr&lt;/em&gt;, with the given scalar object, &lt;em&gt;obj&lt;/em&gt;. The object is first converted to the data type of &lt;em&gt;arr&lt;/em&gt;, and then copied into every location. A -1 is returned if an error occurs, otherwise 0 is returned.</source>
          <target state="translated">用给定的标量对象&lt;em&gt;obj&lt;/em&gt;填充数组&lt;em&gt;arr&lt;/em&gt;。首先将对象转换为&lt;em&gt;arr&lt;/em&gt;的数据类型，然后将其复制到每个位置。如果发生错误，则返回-1，否则返回0。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7bee882405d3a5e1e28b315ab4a7baab2498c486" translate="yes" xml:space="preserve">
          <source>Fill the main diagonal of the given array of any dimensionality.</source>
          <target state="translated">填充任意维度的给定数组的主对角线。</target>
        </trans-unit>
        <trans-unit id="b0054199bd21115b17143e2277b55874769f1942" translate="yes" xml:space="preserve">
          <source>Fill value.</source>
          <target state="translated">填充值。</target>
        </trans-unit>
        <trans-unit id="b3edc087fa7c92433208963d028502658cb11c3c" translate="yes" xml:space="preserve">
          <source>Filling a masked array</source>
          <target state="translated">填充蒙版数组</target>
        </trans-unit>
        <trans-unit id="b16b1c014bc041df050e0baec2b30b9a58147141" translate="yes" xml:space="preserve">
          <source>Filling in the missing data</source>
          <target state="translated">填补缺失的数据</target>
        </trans-unit>
        <trans-unit id="f534a9943c59ee88bfbaa91a174f38f23a434db7" translate="yes" xml:space="preserve">
          <source>Filling value used to pad missing data on the shorter arrays.</source>
          <target state="translated">填充值用于填充较短数组上的缺失数据。</target>
        </trans-unit>
        <trans-unit id="4473d8b6f530a08d5d328b58cdecfd819be6ec67" translate="yes" xml:space="preserve">
          <source>Filling value. A consistency test is performed to make sure the value is compatible with the dtype of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">填充值。进行一致性测试，以确保该值是用的D型兼容的 &lt;code&gt;a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="13227282778cd8d20999d32a512e651e3ee07193" translate="yes" xml:space="preserve">
          <source>Filling value. Default is None.</source>
          <target state="translated">填充值。默认为无。</target>
        </trans-unit>
        <trans-unit id="6c1d42d50fc7e4074f490614ad1bcf00ba471b76" translate="yes" xml:space="preserve">
          <source>Fills &lt;code&gt;nop&lt;/code&gt; flags. Sets &lt;code&gt;outreadflags[i]&lt;/code&gt; to 1 if &lt;code&gt;op[i]&lt;/code&gt; can be read from, and to 0 if not.</source>
          <target state="translated">填充 &lt;code&gt;nop&lt;/code&gt; 标志。如果可以读取 &lt;code&gt;op[i]&lt;/code&gt; 则将 &lt;code&gt;outreadflags[i]&lt;/code&gt; 设置为1，否则将其设置为0。</target>
        </trans-unit>
        <trans-unit id="749d04ce696c047f8e1f31d9e0905d115c8ee6f7" translate="yes" xml:space="preserve">
          <source>Fills &lt;code&gt;nop&lt;/code&gt; flags. Sets &lt;code&gt;outwriteflags[i]&lt;/code&gt; to 1 if &lt;code&gt;op[i]&lt;/code&gt; can be written to, and to 0 if not.</source>
          <target state="translated">填充 &lt;code&gt;nop&lt;/code&gt; 标志。如果可以写入 &lt;code&gt;op[i]&lt;/code&gt; 则将 &lt;code&gt;outwriteflags[i]&lt;/code&gt; 设置为1，否则将其设置为0。</target>
        </trans-unit>
        <trans-unit id="488079b1696f7e1612a42c6bc0389bc81283467e" translate="yes" xml:space="preserve">
          <source>Fills fields from output with fields from input, with support for nested structures.</source>
          <target state="translated">用输入的字段填充输出的字段,支持嵌套结构。</target>
        </trans-unit>
        <trans-unit id="8d3ad1e9024ff38aba4d75bcdff8761b89757502" translate="yes" xml:space="preserve">
          <source>Filter deprecation warnings while running the test suite.</source>
          <target state="translated">在运行测试套件时过滤弃用警告。</target>
        </trans-unit>
        <trans-unit id="53d64090d55b3e9e6c51d2a5eb3eec10a8e6734d" translate="yes" xml:space="preserve">
          <source>Filters added inside the context manager will be discarded again when leaving it. Upon entering all filters defined outside a context will be applied automatically.</source>
          <target state="translated">在上下文管理器中添加的过滤器将在离开时再次被丢弃。进入后,所有在上下文之外定义的过滤器将被自动应用。</target>
        </trans-unit>
        <trans-unit id="1f7718a6ac69fd3c4dc296189cd48158349007af" translate="yes" xml:space="preserve">
          <source>Final output manipulation</source>
          <target state="translated">最后的输出操作</target>
        </trans-unit>
        <trans-unit id="e9f53f9791e6b436e0f9b0c9184addd1c942785e" translate="yes" xml:space="preserve">
          <source>Final words</source>
          <target state="translated">最后一句话</target>
        </trans-unit>
        <trans-unit id="00438430543507877599066cb88e3248f61081f4" translate="yes" xml:space="preserve">
          <source>Finally if we use the option &lt;code&gt;rowvar=False&lt;/code&gt;, the columns are now being treated as the variables and we will find the column-wise Pearson correlation coefficients between variables in &lt;code&gt;xarr&lt;/code&gt; and &lt;code&gt;yarr&lt;/code&gt;.</source>
          <target state="translated">最后，如果我们使用选项 &lt;code&gt;rowvar=False&lt;/code&gt; ，则将列视为变量，然后将在 &lt;code&gt;xarr&lt;/code&gt; 和 &lt;code&gt;yarr&lt;/code&gt; 中的变量之间找到按列的Pearson相关系数。</target>
        </trans-unit>
        <trans-unit id="f8cf825450130b603f61a294cd870952ff541ac0" translate="yes" xml:space="preserve">
          <source>Finally make a pull request using Github. Make sure it is against the maintenance branch and not master, Github will usually suggest you make the pull request against master.</source>
          <target state="translated">最后用Github做一个pull request,确保是针对维护分支而不是master,Github通常会建议你针对master做pull请求。确保是针对维护分支而不是master,Github通常会建议你针对master进行拉取请求。</target>
        </trans-unit>
        <trans-unit id="ba468d0ce6c90f05fb67a4c2a63c164ebea004bd" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;Configuration&lt;/code&gt; has &lt;code&gt;.todict()&lt;/code&gt; method that returns all the configuration data as a dictionary suitable for passing on to the &lt;code&gt;setup(..)&lt;/code&gt; function.</source>
          <target state="translated">最后， &lt;code&gt;Configuration&lt;/code&gt; 具有 &lt;code&gt;.todict()&lt;/code&gt; 方法，该方法返回所有配置数据作为适合传递给 &lt;code&gt;setup(..)&lt;/code&gt; 函数的字典。</target>
        </trans-unit>
        <trans-unit id="889c8c42cccc1d124561a48d8ca41abb6ac29d7b" translate="yes" xml:space="preserve">
          <source>Finally, a data type can describe items that are themselves arrays of items of another data type. These sub-arrays must, however, be of a fixed size.</source>
          <target state="translated">最后,一个数据类型可以描述本身就是另一个数据类型的项目数组的项目。但是,这些子数组必须是固定大小的。</target>
        </trans-unit>
        <trans-unit id="aa9d6cc4ce78cfcc5632e894bf62475be204d2f2" translate="yes" xml:space="preserve">
          <source>Finally, build an extension module using &lt;code&gt;f2py -c -m foo calculate.f&lt;/code&gt;</source>
          <target state="translated">最后，使用 &lt;code&gt;f2py -c -m foo calculate.f&lt;/code&gt; 构建扩展模块。</target>
        </trans-unit>
        <trans-unit id="8c4822ed4109421c2e3621bdd61e51416dfd1386" translate="yes" xml:space="preserve">
          <source>Finally, build the extension module using &lt;code&gt;f2py -c callback2.pyf callback.f&lt;/code&gt;.</source>
          <target state="translated">最后，使用 &lt;code&gt;f2py -c callback2.pyf callback.f&lt;/code&gt; 构建扩展模块。</target>
        </trans-unit>
        <trans-unit id="a4dd8d197deae557aaf37f23e5e903c7287b1045" translate="yes" xml:space="preserve">
          <source>Finally, if you are only interested in testing a subset of NumPy, for example, the &lt;code&gt;core&lt;/code&gt; module, use the following:</source>
          <target state="translated">最后，如果您仅对测试NumPy的子集（例如 &lt;code&gt;core&lt;/code&gt; 模块）感兴趣，请使用以下命令：</target>
        </trans-unit>
        <trans-unit id="591676022a4d7afed7631e7209e11f88a0c70ca2" translate="yes" xml:space="preserve">
          <source>Finally, if you are only interested in testing a subset of SciPy, for example, the &lt;code&gt;integrate&lt;/code&gt; module, use the following:</source>
          <target state="translated">最后，如果您仅对测试SciPy的子集（例如， &lt;code&gt;integrate&lt;/code&gt; 模块）感兴趣，请使用以下命令：</target>
        </trans-unit>
        <trans-unit id="7ffdd7c64bfdacea7dacfdba32a5f08b8fc22860" translate="yes" xml:space="preserve">
          <source>Finally, if you detect a typo or an error in the documentation, or would like to suggest a different approach, you can also open an issue or submit a pull request with your suggestion. Keep in mind that changes fixing grammatical/spelling errors are welcome but not necessarily the highest priority. &amp;ldquo;Grammatical correctness&amp;rdquo; often gets confused with &amp;ldquo;style&amp;rdquo; which can result in unfruitful discussions that don&amp;rsquo;t necessarily improve anything. Changes that modify wording or rearrange phrasing without changing the technical content are discouraged. If you think that a different wording improves clarity, you should open an issue as noted above, but again, changes along these lines very often tend to be highly subjective and not necessarily do much to improve the quality of the documentation.</source>
          <target state="translated">最后，如果您发现文档中有错别字或错误，或者想提出其他建议，您还可以提出一个问题或提出带有建议的拉动请求。请记住，欢迎修正语法/拼写错误的更改，但不一定是最高优先级。 &amp;ldquo;语法正确性&amp;rdquo;常常与&amp;ldquo;风格&amp;rdquo;相混淆，这可能导致徒劳的讨论，并不一定能改善任何事情。不建议在不更改技术内容的情况下进行更改措辞或重新安排措词的更改。如果您认为使用不同的措词可以提高清晰度，则应如上所述提出一个问题，但同样，沿着这些思路进行的更改通常往往具有很高的主观性，并不一定会对提高文档质量起到很大作用。</target>
        </trans-unit>
        <trans-unit id="3cd9ab198daaf3fb255075968e2a8d87bc37a3b9" translate="yes" xml:space="preserve">
          <source>Finally, it is emphasized that &lt;code&gt;v&lt;/code&gt; consists of the &lt;em&gt;right&lt;/em&gt; (as in right-hand side) eigenvectors of &lt;code&gt;a&lt;/code&gt;. A vector &lt;code&gt;y&lt;/code&gt; satisfying &lt;code&gt;dot(y.T, a) = z * y.T&lt;/code&gt; for some number &lt;code&gt;z&lt;/code&gt; is called a &lt;em&gt;left&lt;/em&gt; eigenvector of &lt;code&gt;a&lt;/code&gt;, and, in general, the left and right eigenvectors of a matrix are not necessarily the (perhaps conjugate) transposes of each other.</source>
          <target state="translated">最后，需要强调的是 &lt;code&gt;v&lt;/code&gt; 组成的&lt;em&gt;右侧&lt;/em&gt;（如右侧）的特征向量 &lt;code&gt;a&lt;/code&gt; 。载体 &lt;code&gt;y&lt;/code&gt; 满足 &lt;code&gt;dot(y.T, a) = z * y.T&lt;/code&gt; 一段数 &lt;code&gt;z&lt;/code&gt; 被称为&lt;em&gt;左侧&lt;/em&gt;的特征向量 &lt;code&gt;a&lt;/code&gt; 每个，并且，在一般情况下，矩阵的左和右本征向量不必是（可能共轭）转置其他。</target>
        </trans-unit>
        <trans-unit id="d65f378e68ed6a19a18dfdea402e5e3481327cbe" translate="yes" xml:space="preserve">
          <source>Finally, it is emphasized that &lt;code&gt;v&lt;/code&gt; consists of the &lt;em&gt;right&lt;/em&gt; (as in right-hand side) eigenvectors of &lt;code&gt;a&lt;/code&gt;. A vector &lt;code&gt;y&lt;/code&gt; satisfying &lt;code&gt;y.T @ a = z * y.T&lt;/code&gt; for some number &lt;code&gt;z&lt;/code&gt; is called a &lt;em&gt;left&lt;/em&gt; eigenvector of &lt;code&gt;a&lt;/code&gt;, and, in general, the left and right eigenvectors of a matrix are not necessarily the (perhaps conjugate) transposes of each other.</source>
          <target state="translated">最后，需要强调的是 &lt;code&gt;v&lt;/code&gt; 组成的&lt;em&gt;右侧&lt;/em&gt;（如右侧）的特征向量 &lt;code&gt;a&lt;/code&gt; 。载体 &lt;code&gt;y&lt;/code&gt; 满足 &lt;code&gt;y.T @ a = z * y.T&lt;/code&gt; 一段数 &lt;code&gt;z&lt;/code&gt; 被称为&lt;em&gt;左侧&lt;/em&gt;的特征向量 &lt;code&gt;a&lt;/code&gt; ，并且，在一般情况下，矩阵的左和右本征向量不一定彼此的（可能共轭）转置。</target>
        </trans-unit>
        <trans-unit id="7cc16b6bd7f60859052f3d3e721d3a31f9f6a180" translate="yes" xml:space="preserve">
          <source>Finally, now you are confident this tag correctly defines the source code that you released you can push the tag and release commit up to github:</source>
          <target state="translated">最后,现在你确信这个标签正确地定义了你发布的源代码,你可以将这个标签和发布提交推送到github。</target>
        </trans-unit>
        <trans-unit id="6153981fb1186c6a6c180fa5791ae775d104d070" translate="yes" xml:space="preserve">
          <source>Finally, remove the backup branch upon a successful rebase:</source>
          <target state="translated">最后,重垒成功后删除备份分支。</target>
        </trans-unit>
        <trans-unit id="98d9a64e4784c058720be52ad39c03d39a9fcbd1" translate="yes" xml:space="preserve">
          <source>Finally, specific entries can be masked and/or unmasked by assigning to the mask a sequence of booleans:</source>
          <target state="translated">最后,可以通过给掩码分配一连串的booleans来掩码和/或取消掩码特定的条目。</target>
        </trans-unit>
        <trans-unit id="4d63661f6815f6c84ea80e3487b297638030ca91" translate="yes" xml:space="preserve">
          <source>Finally, the committee will make a report to the NumPy Steering Council (as well as the NumPy core team in the event of an ongoing resolution, such as a ban).</source>
          <target state="translated">最后,委员会将向NumPy指导委员会(以及NumPy核心团队在持续解决的情况下,如禁令)提出报告。</target>
        </trans-unit>
        <trans-unit id="d4ee797bc2c97cc8f17d94ef802f458cb35c39bc" translate="yes" xml:space="preserve">
          <source>Finally, the decision is made about how to execute the looping mechanism to ensure that all elements of the input arrays are combined to produce the output arrays of the correct type. The options for loop execution are one-loop (for contiguous, aligned, and correct data type), strided-loop (for non-contiguous but still aligned and correct data type), and a buffered loop (for mis-aligned or incorrect data type situations). Depending on which execution method is called for, the loop is then setup and computed.</source>
          <target state="translated">最后,决定如何执行循环机制,以确保输入数组的所有元素都能组合成正确类型的输出数组。循环执行的选项有单循环(适用于连续、对齐和正确的数据类型)、strided-loop(适用于非连续但仍对齐和正确的数据类型)和缓冲循环(适用于错误对齐或不正确的数据类型情况)。根据调用哪种执行方法,再对循环进行设置和计算。</target>
        </trans-unit>
        <trans-unit id="75d671d62eb366ddccfcb1e2724191d1a472b131" translate="yes" xml:space="preserve">
          <source>Finally, the two functions to be exported by the interface can be written simply as:</source>
          <target state="translated">最后,接口要输出的两个函数可以简单的写成。</target>
        </trans-unit>
        <trans-unit id="f06dcc2f32047bb203bf95d18ff9fb7501e8c9e4" translate="yes" xml:space="preserve">
          <source>Finally, to obtain the full approximated image, we need to reassemble these matrices into the approximation. Now, note that</source>
          <target state="translated">最后,为了得到完整的近似图像,我们需要将这些矩阵重新组合成近似。现在,请注意</target>
        </trans-unit>
        <trans-unit id="9c273592d00189e2853888104625c36c4333a6db" translate="yes" xml:space="preserve">
          <source>Finally, we can use the &lt;a href=&quot;../reference/generated/numpy.polyfit#numpy.polyfit&quot;&gt;&lt;code&gt;numpy.polyfit&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../reference/generated/numpy.polyval#numpy.polyval&quot;&gt;&lt;code&gt;numpy.polyval&lt;/code&gt;&lt;/a&gt; functions to create a cubic polynomial that fits the data as best as possible:</source>
          <target state="translated">最后，我们可以使用&lt;a href=&quot;../reference/generated/numpy.polyfit#numpy.polyfit&quot;&gt; &lt;code&gt;numpy.polyfit&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../reference/generated/numpy.polyval#numpy.polyval&quot;&gt; &lt;code&gt;numpy.polyval&lt;/code&gt; &lt;/a&gt;函数来创建三次多项式，以尽可能地拟合数据：</target>
        </trans-unit>
        <trans-unit id="3616e9f1dcf861efd823c12b4478a31e6b82b402" translate="yes" xml:space="preserve">
          <source>Financial functions</source>
          <target state="translated">财务职能</target>
        </trans-unit>
        <trans-unit id="53f4aed5ee4b6d593eda026d381266350f216eeb" translate="yes" xml:space="preserve">
          <source>Financial functions removed</source>
          <target state="translated">取消财务职能</target>
        </trans-unit>
        <trans-unit id="e6c50d99742741634b01369176b77e9bcc5af665" translate="yes" xml:space="preserve">
          <source>Financial interests, such as investments, employment or contracting work, outside of The Project that may influence their work on The Project.</source>
          <target state="translated">(b)可能影响其在项目中的工作的项目外的财务利益,如投资、就业或合同工作;</target>
        </trans-unit>
        <trans-unit id="eddebdeca9f674c3a8bdff9147a750bce04b0b48" translate="yes" xml:space="preserve">
          <source>Find a candidate who can serve as a mediator.</source>
          <target state="translated">找到一个可以担任调解员的候选人。</target>
        </trans-unit>
        <trans-unit id="75334f040026f76d3eebb8839bcb303508014551" translate="yes" xml:space="preserve">
          <source>Find a domain suitable for a polynomial or Chebyshev series defined at the values supplied.</source>
          <target state="translated">找出一个适合于在所提供的值上定义的多项式或切比雪夫数列的域。</target>
        </trans-unit>
        <trans-unit id="ed86545ba6a43e29b3c6f7f80bac3bf11a762f81" translate="yes" xml:space="preserve">
          <source>Find city hall</source>
          <target state="translated">寻找市政厅</target>
        </trans-unit>
        <trans-unit id="c2a6e9c15d888c380a37d1831fa7891adeb9bb51" translate="yes" xml:space="preserve">
          <source>Find contiguous unmasked data in a masked array along the given axis.</source>
          <target state="translated">沿着给定的轴,在掩码阵列中找到连续的非掩码数据。</target>
        </trans-unit>
        <trans-unit id="a4ea5a445ce3dee9c559f1f1b3b7f52dca61477d" translate="yes" xml:space="preserve">
          <source>Find elements in a sorted array.</source>
          <target state="translated">在一个排序的数组中查找元素。</target>
        </trans-unit>
        <trans-unit id="48cd38efe59f33f3a5f798ed6a4cf4880d549aa4" translate="yes" xml:space="preserve">
          <source>Find elements in sorted array.</source>
          <target state="translated">在排序数组中查找元素。</target>
        </trans-unit>
        <trans-unit id="849cceaee0015c567cd2b639a437c51378f0d9cf" translate="yes" xml:space="preserve">
          <source>Find historic buildings</source>
          <target state="translated">寻找历史建筑</target>
        </trans-unit>
        <trans-unit id="f6a5d00a32b708a9fb964c2d1da18b0ebb9fba20" translate="yes" xml:space="preserve">
          <source>Find indices where elements of v should be inserted in a to maintain order.</source>
          <target state="translated">找出v的元素应该插入a中的索引,以保持顺序。</target>
        </trans-unit>
        <trans-unit id="18d914d41d09d92c97e462c896bc6019f8705e89" translate="yes" xml:space="preserve">
          <source>Find indices where elements should be inserted to maintain order.</source>
          <target state="translated">找出应插入元素的索引,以保持顺序。</target>
        </trans-unit>
        <trans-unit id="9f16fd78492b0e655d9646c090e0277fb4bab8b3" translate="yes" xml:space="preserve">
          <source>Find more information about &lt;a href=&quot;../reference/arrays.indexing#arrays-indexing&quot;&gt;newaxis here&lt;/a&gt; and &lt;code&gt;expand_dims&lt;/code&gt; at &lt;a href=&quot;../reference/generated/numpy.expand_dims#numpy.expand_dims&quot;&gt;&lt;code&gt;expand_dims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">查找有关更多信息，&lt;a href=&quot;../reference/arrays.indexing#arrays-indexing&quot;&gt;这里newaxis&lt;/a&gt;和 &lt;code&gt;expand_dims&lt;/code&gt; 在&lt;a href=&quot;../reference/generated/numpy.expand_dims#numpy.expand_dims&quot;&gt; &lt;code&gt;expand_dims&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bffc9a9c895a2c22f043f2185910781b7e64c839" translate="yes" xml:space="preserve">
          <source>Find scenic lookouts</source>
          <target state="translated">寻找观景台</target>
        </trans-unit>
        <trans-unit id="4372485b0452a2bbbc2898c490d8eaeffc724caf" translate="yes" xml:space="preserve">
          <source>Find the coefficients of a polynomial with a given sequence of roots.</source>
          <target state="translated">找出给定根序列的多项式的系数。</target>
        </trans-unit>
        <trans-unit id="faa2e8dff7b7635f67ecf147d005df15f99ba737" translate="yes" xml:space="preserve">
          <source>Find the coefficients of a polynomial with the given sequence of roots.</source>
          <target state="translated">找出给定根序列的多项式的系数。</target>
        </trans-unit>
        <trans-unit id="026efa8f3fd4dbc6fed13cabe723d18d76b4e840" translate="yes" xml:space="preserve">
          <source>Find the court house</source>
          <target state="translated">找到法院的房子</target>
        </trans-unit>
        <trans-unit id="4eb3d9e0549601789e7c859dc2344bd2a9cd19fd" translate="yes" xml:space="preserve">
          <source>Find the derivative of order &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">找到阶 &lt;code&gt;m&lt;/code&gt; 的导数。</target>
        </trans-unit>
        <trans-unit id="d4ef9328264dc057bcc77daf8eddd203dc0e44a3" translate="yes" xml:space="preserve">
          <source>Find the duplicates in a structured array along a given key</source>
          <target state="translated">沿着给定的键在结构化数组中查找重复的内容。</target>
        </trans-unit>
        <trans-unit id="8b2e68d5137b01880925e686f099633be3e06dde" translate="yes" xml:space="preserve">
          <source>Find the indices into a sorted array &lt;code&gt;a&lt;/code&gt; such that, if the corresponding elements in &lt;code&gt;v&lt;/code&gt; were inserted before the indices, the order of &lt;code&gt;a&lt;/code&gt; would be preserved.</source>
          <target state="translated">将索引查找到排序数组 &lt;code&gt;a&lt;/code&gt; 中,这样，如果 &lt;code&gt;v&lt;/code&gt; 中的相应元素在索引之前插入，则将保留 &lt;code&gt;a&lt;/code&gt; 的顺序。</target>
        </trans-unit>
        <trans-unit id="7a9d95dd2166bd57167eb2521a394d4c2313d8ed" translate="yes" xml:space="preserve">
          <source>Find the indices of array elements that are non-zero, grouped by element.</source>
          <target state="translated">找出非零的数组元素的索引,按元素分组。</target>
        </trans-unit>
        <trans-unit id="2515b150e246a2efffb14706325a36534baa7e52" translate="yes" xml:space="preserve">
          <source>Find the indices of the first and last unmasked values along an axis.</source>
          <target state="translated">沿着一个轴找到第一个和最后一个未屏蔽的值的指数。</target>
        </trans-unit>
        <trans-unit id="696f121ac590832370778adcb2254fdcf409cf46" translate="yes" xml:space="preserve">
          <source>Find the indices of the first and last unmasked values.</source>
          <target state="translated">找到第一个和最后一个未屏蔽的值的指数。</target>
        </trans-unit>
        <trans-unit id="8c77cbf79b427711a4234d92c8cd55031f045a5a" translate="yes" xml:space="preserve">
          <source>Find the intersection of two arrays.</source>
          <target state="translated">找出两个数组的交点。</target>
        </trans-unit>
        <trans-unit id="1d747b61a4dca9ab1a6c9357e1706a93f4e98f6e" translate="yes" xml:space="preserve">
          <source>Find the product of two polynomials.</source>
          <target state="translated">求两个多项式的乘积。</target>
        </trans-unit>
        <trans-unit id="f141aa841d4a25a7614625f7b95555f03b44cb1f" translate="yes" xml:space="preserve">
          <source>Find the roots:</source>
          <target state="translated">找到根。</target>
        </trans-unit>
        <trans-unit id="e641c4ed98de6b655c0148c1b174236bccd25db9" translate="yes" xml:space="preserve">
          <source>Find the set difference of two arrays.</source>
          <target state="translated">求两个数组的集合差。</target>
        </trans-unit>
        <trans-unit id="1d47458289ee93eb8b76d9bd5fb051fb0ed38ef9" translate="yes" xml:space="preserve">
          <source>Find the set exclusive-or of two arrays.</source>
          <target state="translated">找出两个数组的集合独占或。</target>
        </trans-unit>
        <trans-unit id="40c6faf7e08f7eff45fa7f2fb510420c1dd0653b" translate="yes" xml:space="preserve">
          <source>Find the sum of two polynomials.</source>
          <target state="translated">求两个多项式的和。</target>
        </trans-unit>
        <trans-unit id="d221aaf14e3a3bbc1bc2f14e135dc72373d17a12" translate="yes" xml:space="preserve">
          <source>Find the town center</source>
          <target state="translated">找到镇中心</target>
        </trans-unit>
        <trans-unit id="bc296de5854442d0290915421679a6d44da683c5" translate="yes" xml:space="preserve">
          <source>Find the union of two arrays.</source>
          <target state="translated">找出两个数组的联合。</target>
        </trans-unit>
        <trans-unit id="1c2a1d48695ed18506cd6bf1d2bc59c3cfb89875" translate="yes" xml:space="preserve">
          <source>Find the unique elements of an array.</source>
          <target state="translated">查找数组中的唯一元素。</target>
        </trans-unit>
        <trans-unit id="3c5a640c918941c9e6a6ecbfe984c3f4bfbed0d7" translate="yes" xml:space="preserve">
          <source>Finding help</source>
          <target state="translated">寻找帮助</target>
        </trans-unit>
        <trans-unit id="5b7033e44afb091d2adc537dc898dc007a565a8f" translate="yes" xml:space="preserve">
          <source>Finding masked data</source>
          <target state="translated">寻找被屏蔽的数据</target>
        </trans-unit>
        <trans-unit id="3f98684f09d3dc8ddcf467b643533c39f6675211" translate="yes" xml:space="preserve">
          <source>Finds the data type of smallest size and kind to which &lt;em&gt;type1&lt;/em&gt; and &lt;em&gt;type2&lt;/em&gt; may be safely converted. This function is symmetric and associative. A string or unicode result will be the proper size for storing the max value of the input types converted to a string or unicode.</source>
          <target state="translated">查找可以将&lt;em&gt;type1&lt;/em&gt;和&lt;em&gt;type2&lt;/em&gt;安全地转换为最小大小和种类的数据类型。此功能是对称且关联的。字符串或unicode结果将是适当的大小，用于存储转换为字符串或unicode的输入类型的最大值。</target>
        </trans-unit>
        <trans-unit id="ce819b28621d52328ceb9faf1bacb0b89098499a" translate="yes" xml:space="preserve">
          <source>Finds the polynomial resulting from the multiplication of the two input polynomials. Each input must be either a poly1d object or a 1D sequence of polynomial coefficients, from highest to lowest degree.</source>
          <target state="translated">找出两个输入多项式相乘后的多项式。每个输入必须是一个 poly1d 对象或多项式系数的 1D 序列,从高到低。</target>
        </trans-unit>
        <trans-unit id="1b46b96bf59323c910259f84d4d30f9baf994f09" translate="yes" xml:space="preserve">
          <source>Finish the Release Note</source>
          <target state="translated">完成发行说明</target>
        </trans-unit>
        <trans-unit id="7f34df28a801d8ac2bf79f8d990420b3ba51454a" translate="yes" xml:space="preserve">
          <source>First adjusts the date to fall on a valid day according to the &lt;code&gt;roll&lt;/code&gt; rule, then applies offsets to the given dates counted in valid days.</source>
          <target state="translated">首先根据 &lt;code&gt;roll&lt;/code&gt; 规则将日期调整为属于有效日期，然后将偏移量应用于在有效日期中计算的给定日期。</target>
        </trans-unit>
        <trans-unit id="3d783583ca6eea2b3fefbcfe238ea095a9cef1e3" translate="yes" xml:space="preserve">
          <source>First argument.</source>
          <target state="translated">第一个论点:</target>
        </trans-unit>
        <trans-unit id="b0d88798d2f2c8c94dabdac74a6e61e0c6a796bf" translate="yes" xml:space="preserve">
          <source>First array</source>
          <target state="translated">第一个阵列</target>
        </trans-unit>
        <trans-unit id="6ac9adbced8bb3d28582fadcfc79411667f91541" translate="yes" xml:space="preserve">
          <source>First array elements raised to powers from second array, element-wise.</source>
          <target state="translated">第一个数组元素从第二个数组中提升到幂,逐个元素。</target>
        </trans-unit>
        <trans-unit id="2e663054d84a3a5ee1c34a1c08db3c0840bbd3a5" translate="yes" xml:space="preserve">
          <source>First axis.</source>
          <target state="translated">第一轴:</target>
        </trans-unit>
        <trans-unit id="683b791e072100a372b3bb52b18b0195b72f135d" translate="yes" xml:space="preserve">
          <source>First data type.</source>
          <target state="translated">第一个数据类型:</target>
        </trans-unit>
        <trans-unit id="2f5593286aa09632868779a76ded4fea07d63a2f" translate="yes" xml:space="preserve">
          <source>First fork NumPy into your account, as from &lt;a href=&quot;gitwash/development_setup#forking&quot;&gt;Create a NumPy fork&lt;/a&gt;.</source>
          <target state="translated">首先，&lt;a href=&quot;gitwash/development_setup#forking&quot;&gt;将NumPy派生&lt;/a&gt;到您的帐户中，如创建NumPy派生所示。</target>
        </trans-unit>
        <trans-unit id="380b7446c9b92904f875ef654f53dbe5211d262c" translate="yes" xml:space="preserve">
          <source>First fork NumPy into your account, as from &lt;a href=&quot;gitwash/development_setup#forking&quot;&gt;Making your own copy (fork) of NumPy&lt;/a&gt;.</source>
          <target state="translated">首先，从&lt;a href=&quot;gitwash/development_setup#forking&quot;&gt;制作您自己的NumPy副本（分叉）开始，将NumPy&lt;/a&gt;拨入您的帐户。</target>
        </trans-unit>
        <trans-unit id="c696689a14b681bedf220e6fcb537947492362e7" translate="yes" xml:space="preserve">
          <source>First input vector. Input is flattened if not already 1-dimensional.</source>
          <target state="translated">第一个输入向量。如果还不是一维的,则对输入进行扁平化处理。</target>
        </trans-unit>
        <trans-unit id="4da5db5b8e385a1ee882571360fd0091e5988af4" translate="yes" xml:space="preserve">
          <source>First mode, &lt;code&gt;buffer&lt;/code&gt; is None:</source>
          <target state="translated">第一种模式， &lt;code&gt;buffer&lt;/code&gt; 为None：</target>
        </trans-unit>
        <trans-unit id="79fb79c693534cb9180b2dc2b3dd92f6526ad678" translate="yes" xml:space="preserve">
          <source>First of all, if confused or uncertain, definitely look at the Examples - in its full generality, this function is less simple than it might seem from the following code description (below ndi = &lt;code&gt;numpy.lib.index_tricks&lt;/code&gt;):</source>
          <target state="translated">首先，如果感到困惑或不确定，一定要看一下示例-完全具有通用性，此函数不如下面的代码描述（在ndi = &lt;code&gt;numpy.lib.index_tricks&lt;/code&gt; 之下）看起来的那么简单：</target>
        </trans-unit>
        <trans-unit id="9433246b482b8fe4fa411d4c3c0f41d069086c3e" translate="yes" xml:space="preserve">
          <source>First of all, we can plot the whole set of data we have and see what it looks like. In order to get a readable plot, we select only a few of the dates to show in our &lt;a href=&quot;https://matplotlib.org/api/_as_gen/matplotlib.pyplot.xticks.html#matplotlib.pyplot.xticks&quot;&gt;&lt;code&gt;x-axis ticks&lt;/code&gt;&lt;/a&gt;. Note also that in our plot command, we use &lt;code&gt;nbcases.T&lt;/code&gt; (the transpose of the &lt;code&gt;nbcases&lt;/code&gt; array) since this means we will plot each row of the file as a separate line. We choose to plot a dashed line (using the &lt;code&gt;'--'&lt;/code&gt; line style). See the &lt;a href=&quot;https://matplotlib.org/&quot;&gt;matplotlib&lt;/a&gt; documentation for more info on this.</source>
          <target state="translated">首先，我们可以绘制所拥有的全部数据并查看其外观。为了获得清晰的图，我们只选择了一些要在&lt;a href=&quot;https://matplotlib.org/api/_as_gen/matplotlib.pyplot.xticks.html#matplotlib.pyplot.xticks&quot;&gt; &lt;code&gt;x-axis ticks&lt;/code&gt; &lt;/a&gt;显示的日期。还要注意，在我们的plot命令中，我们使用 &lt;code&gt;nbcases.T&lt;/code&gt; （ &lt;code&gt;nbcases&lt;/code&gt; 数组的转置），因为这意味着我们将文件的每一行绘制为单独的一行。我们选择绘制一条虚线（使用 &lt;code&gt;'--'&lt;/code&gt; 线样式）。有关更多信息，请参见&lt;a href=&quot;https://matplotlib.org/&quot;&gt;matplotlib&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="9507aadaef3c19b4ad781014173284bb4bf64a4d" translate="yes" xml:space="preserve">
          <source>First one-dimensional input array.</source>
          <target state="translated">第一个一维输入阵列。</target>
        </trans-unit>
        <trans-unit id="563237e589c4b3a10445b43e30dbcdf140e6cad9" translate="yes" xml:space="preserve">
          <source>First we need a polynomial class and a polynomial instance to play with. The classes can be imported directly from the polynomial package or from the module of the relevant type. Here we import from the package and use the conventional Polynomial class because of its familiarity:</source>
          <target state="translated">首先我们需要一个多项式类和一个多项式实例来玩。这些类可以直接从多项式包中导入,也可以从相关类型的模块中导入。这里我们从包中导入,因为熟悉,所以使用常规的多项式类。</target>
        </trans-unit>
        <trans-unit id="b0f42fa2b5b73e0d242583740b22144cb029b3bc" translate="yes" xml:space="preserve">
          <source>First you follow the instructions for &lt;a href=&quot;#forking&quot;&gt;Making your own copy (fork) of NumPy&lt;/a&gt;.</source>
          <target state="translated">首先，您要遵循&lt;a href=&quot;#forking&quot;&gt;制作NumPy的副本（分叉）的说明&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a78e460dd4b928f74942152fb57a017ad1190035" translate="yes" xml:space="preserve">
          <source>First, change/check the following variables in &lt;code&gt;pavement.py&lt;/code&gt; depending on the release version:</source>
          <target state="translated">首先，根据发行版本更改/检查 &lt;code&gt;pavement.py&lt;/code&gt; 中的以下变量：</target>
        </trans-unit>
        <trans-unit id="5de2ca0c3525a19f6ce453df437f39312ae63f64" translate="yes" xml:space="preserve">
          <source>First, fetch new commits from the &lt;code&gt;upstream&lt;/code&gt; repository:</source>
          <target state="translated">首先，从 &lt;code&gt;upstream&lt;/code&gt; 存储库中获取新的提交：</target>
        </trans-unit>
        <trans-unit id="cb7560a3397ca22e9994a5b8700ca3649fe54f4e" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s check for the shape of the data in our array. Since this image is two-dimensional (the pixels in the image form a rectangle), we might expect a two-dimensional array to represent it (a matrix). However, using the &lt;code&gt;shape&lt;/code&gt; property of this NumPy array gives us a different result:</source>
          <target state="translated">首先，让我们检查数组中数据的形状。由于此图像是二维的（图像中的像素形成一个矩形），我们可能期望用二维数组来表示它（矩阵）。但是，使用此NumPy数组的 &lt;code&gt;shape&lt;/code&gt; 属性会给我们带来不同的结果：</target>
        </trans-unit>
        <trans-unit id="e842f4efdaf87bde11917dd06d4d96aa743693a2" translate="yes" xml:space="preserve">
          <source>First, merge or rebase on the target branch.</source>
          <target state="translated">首先,在目标分支上进行合并或重垒。</target>
        </trans-unit>
        <trans-unit id="3d50e07ef0974f6c61f9887836f0cd195c4b8ffe" translate="yes" xml:space="preserve">
          <source>First, we create a signature file from &lt;code&gt;fib1.f&lt;/code&gt; by running</source>
          <target state="translated">首先，我们通过运行以下命令从 &lt;code&gt;fib1.f&lt;/code&gt; 创建一个签名文件</target>
        </trans-unit>
        <trans-unit id="0b5747b08f0749ca8d3f849c4ccb46feb2a535fd" translate="yes" xml:space="preserve">
          <source>First, we solve for</source>
          <target state="translated">首先,我们求解</target>
        </trans-unit>
        <trans-unit id="e249ead6928b839ca62de533f2a7083c8c2ba345" translate="yes" xml:space="preserve">
          <source>First, we&amp;rsquo;ll identify the indices of locations in mainland China:</source>
          <target state="translated">首先，我们将确定中国大陆地区的位置指数：</target>
        </trans-unit>
        <trans-unit id="2db03d669f6d38f72ba0afd2d06c9fa6852bb990" translate="yes" xml:space="preserve">
          <source>First, you need to make the branch you will work on. This needs to be based on the older version of NumPy (not master):</source>
          <target state="translated">首先,你需要制作你要工作的分支。这需要基于NumPy的旧版本(不是master)。</target>
        </trans-unit>
        <trans-unit id="2b876747d103212266850792bf08c2d985fdb7ec" translate="yes" xml:space="preserve">
          <source>Fisher, R.A,, A.S. Corbet, and C.B. Williams. 1943. The relation between the number of species and the number of individuals in a random sample of an animal population. Journal of Animal Ecology, 12:42-58.</source>
          <target state="translated">Fisher,R.A,A.S.Corbet,和C.B.Williams。1943.动物种群随机抽样中物种数量和个体数量之间的关系。动物生态学杂志,12:42-58。</target>
        </trans-unit>
        <trans-unit id="1c009756385026adf817423fdf3347327b7bcadd" translate="yes" xml:space="preserve">
          <source>Fit a line, &lt;code&gt;y = mx + c&lt;/code&gt;, through some noisy data-points:</source>
          <target state="translated">通过一些嘈杂的数据点拟合一条线 &lt;code&gt;y = mx + c&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="04b6a58e5360946679575e2105b73e661e63702d" translate="yes" xml:space="preserve">
          <source>Fit a polynomial &lt;code&gt;p(x) = p[0] * x**deg + ... + p[deg]&lt;/code&gt; of degree &lt;code&gt;deg&lt;/code&gt; to points &lt;code&gt;(x, y)&lt;/code&gt;. Returns a vector of coefficients &lt;code&gt;p&lt;/code&gt; that minimises the squared error in the order &lt;code&gt;deg&lt;/code&gt;, &lt;code&gt;deg-1&lt;/code&gt;, &amp;hellip; &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">适合的多项式 &lt;code&gt;p(x) = p[0] * x**deg + ... + p[deg]&lt;/code&gt; 度的 &lt;code&gt;deg&lt;/code&gt; 来分 &lt;code&gt;(x, y)&lt;/code&gt; 。返回系数 &lt;code&gt;p&lt;/code&gt; 的向量，该向量使 &lt;code&gt;deg&lt;/code&gt; ， &lt;code&gt;deg-1&lt;/code&gt; ，&amp;hellip; &lt;code&gt;0&lt;/code&gt; 阶的平方误差最小。</target>
        </trans-unit>
        <trans-unit id="c63bb8e80d7458f568a44355aa0204375070cb16" translate="yes" xml:space="preserve">
          <source>Fits using Chebyshev series are usually better conditioned than fits using power series, but much can depend on the distribution of the sample points and the smoothness of the data. If the quality of the fit is inadequate splines may be a good alternative.</source>
          <target state="translated">使用切比雪夫序列的拟合通常比使用功率序列的拟合条件要好,但这很大程度上取决于样本点的分布和数据的平滑度。如果拟合的质量不够,花键可能是一个很好的选择。</target>
        </trans-unit>
        <trans-unit id="aed614e2e664ebb51dcf5d13afb77c7acb23c65a" translate="yes" xml:space="preserve">
          <source>Fits using Hermite series are probably most useful when the data can be approximated by &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt;, where &lt;code&gt;w(x)&lt;/code&gt; is the Hermite weight. In that case the weight &lt;code&gt;sqrt(w(x[i]))&lt;/code&gt; should be used together with data values &lt;code&gt;y[i]/sqrt(w(x[i]))&lt;/code&gt;. The weight function is available as &lt;a href=&quot;numpy.polynomial.hermite.hermweight#numpy.polynomial.hermite.hermweight&quot;&gt;&lt;code&gt;hermweight&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当可以通过 &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt; 近似数据时，使用Hermite系列拟合可能最有用，其中 &lt;code&gt;w(x)&lt;/code&gt; 是Hermite权重。在那种情况下，权重 &lt;code&gt;sqrt(w(x[i]))&lt;/code&gt; 应该与数据值 &lt;code&gt;y[i]/sqrt(w(x[i]))&lt;/code&gt; 。权重函数可以作为&lt;a href=&quot;numpy.polynomial.hermite.hermweight#numpy.polynomial.hermite.hermweight&quot;&gt; &lt;code&gt;hermweight&lt;/code&gt; 来使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ac350719f356e32b4a5aa08bc22f253d0d0c702" translate="yes" xml:space="preserve">
          <source>Fits using Hermite series are probably most useful when the data can be approximated by &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt;, where &lt;code&gt;w(x)&lt;/code&gt; is the Hermite weight. In that case the weight &lt;code&gt;sqrt(w(x[i])&lt;/code&gt; should be used together with data values &lt;code&gt;y[i]/sqrt(w(x[i])&lt;/code&gt;. The weight function is available as &lt;a href=&quot;numpy.polynomial.hermite.hermweight#numpy.polynomial.hermite.hermweight&quot;&gt;&lt;code&gt;hermweight&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当可以通过 &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt; 近似数据时，使用Hermite系列拟合可能最有用，其中 &lt;code&gt;w(x)&lt;/code&gt; 是Hermite权重。在这种情况下，应将权重 &lt;code&gt;sqrt(w(x[i])&lt;/code&gt; 与数据值 &lt;code&gt;y[i]/sqrt(w(x[i])&lt;/code&gt; 。权重函数可用作&lt;a href=&quot;numpy.polynomial.hermite.hermweight#numpy.polynomial.hermite.hermweight&quot;&gt; &lt;code&gt;hermweight&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2a56ae26ef02f4f89e7f11d94ca2c9c2304108b1" translate="yes" xml:space="preserve">
          <source>Fits using HermiteE series are probably most useful when the data can be approximated by &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt;, where &lt;code&gt;w(x)&lt;/code&gt; is the HermiteE weight. In that case the weight &lt;code&gt;sqrt(w(x[i]))&lt;/code&gt; should be used together with data values &lt;code&gt;y[i]/sqrt(w(x[i]))&lt;/code&gt;. The weight function is available as &lt;a href=&quot;numpy.polynomial.hermite_e.hermeweight#numpy.polynomial.hermite_e.hermeweight&quot;&gt;&lt;code&gt;hermeweight&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当可以通过 &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt; 近似数据时，使用HermiteE系列拟合可能是最有用的，其中 &lt;code&gt;w(x)&lt;/code&gt; 是HermiteE权重。在那种情况下，权重 &lt;code&gt;sqrt(w(x[i]))&lt;/code&gt; 应该与数据值 &lt;code&gt;y[i]/sqrt(w(x[i]))&lt;/code&gt; 。权重函数可以作为&amp;ldquo;&lt;a href=&quot;numpy.polynomial.hermite_e.hermeweight#numpy.polynomial.hermite_e.hermeweight&quot;&gt; &lt;code&gt;hermeweight&lt;/code&gt; &lt;/a&gt;权重&amp;rdquo;使用。</target>
        </trans-unit>
        <trans-unit id="676d43f6371871e1abab21b58a8b9ef9e5c444e9" translate="yes" xml:space="preserve">
          <source>Fits using HermiteE series are probably most useful when the data can be approximated by &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt;, where &lt;code&gt;w(x)&lt;/code&gt; is the HermiteE weight. In that case the weight &lt;code&gt;sqrt(w(x[i])&lt;/code&gt; should be used together with data values &lt;code&gt;y[i]/sqrt(w(x[i])&lt;/code&gt;. The weight function is available as &lt;a href=&quot;numpy.polynomial.hermite_e.hermeweight#numpy.polynomial.hermite_e.hermeweight&quot;&gt;&lt;code&gt;hermeweight&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当可以通过 &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt; 近似数据时，使用HermiteE系列拟合可能是最有用的，其中 &lt;code&gt;w(x)&lt;/code&gt; 是HermiteE权重。在这种情况下，应将权重 &lt;code&gt;sqrt(w(x[i])&lt;/code&gt; 与数据值 &lt;code&gt;y[i]/sqrt(w(x[i])&lt;/code&gt; 。权重函数可用作&lt;a href=&quot;numpy.polynomial.hermite_e.hermeweight#numpy.polynomial.hermite_e.hermeweight&quot;&gt; &lt;code&gt;hermeweight&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ce120ffeca412ba96243f730c358ebc5c1bfbf99" translate="yes" xml:space="preserve">
          <source>Fits using Laguerre series are probably most useful when the data can be approximated by &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt;, where &lt;code&gt;w(x)&lt;/code&gt; is the Laguerre weight. In that case the weight &lt;code&gt;sqrt(w(x[i]))&lt;/code&gt; should be used together with data values &lt;code&gt;y[i]/sqrt(w(x[i]))&lt;/code&gt;. The weight function is available as &lt;a href=&quot;numpy.polynomial.laguerre.lagweight#numpy.polynomial.laguerre.lagweight&quot;&gt;&lt;code&gt;lagweight&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当可以通过 &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt; 近似数据时，使用Laguerre级数拟合可能是最有用的，其中 &lt;code&gt;w(x)&lt;/code&gt; 是Laguerre权重。在那种情况下，权重 &lt;code&gt;sqrt(w(x[i]))&lt;/code&gt; 应该与数据值 &lt;code&gt;y[i]/sqrt(w(x[i]))&lt;/code&gt; 。权重函数可以作为&lt;a href=&quot;numpy.polynomial.laguerre.lagweight#numpy.polynomial.laguerre.lagweight&quot;&gt; &lt;code&gt;lagweight&lt;/code&gt; 获得&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a6ad2d45b7ba84d02856af83a31db48500b6c521" translate="yes" xml:space="preserve">
          <source>Fits using Laguerre series are probably most useful when the data can be approximated by &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt;, where &lt;code&gt;w(x)&lt;/code&gt; is the Laguerre weight. In that case the weight &lt;code&gt;sqrt(w(x[i])&lt;/code&gt; should be used together with data values &lt;code&gt;y[i]/sqrt(w(x[i])&lt;/code&gt;. The weight function is available as &lt;a href=&quot;numpy.polynomial.laguerre.lagweight#numpy.polynomial.laguerre.lagweight&quot;&gt;&lt;code&gt;lagweight&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当可以通过 &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt; 近似数据时，使用Laguerre级数拟合可能最有用，其中 &lt;code&gt;w(x)&lt;/code&gt; 是Laguerre权重。在这种情况下，应该将权重 &lt;code&gt;sqrt(w(x[i])&lt;/code&gt; 与数据值 &lt;code&gt;y[i]/sqrt(w(x[i])&lt;/code&gt; 。权重函数可以作为&lt;a href=&quot;numpy.polynomial.laguerre.lagweight#numpy.polynomial.laguerre.lagweight&quot;&gt; &lt;code&gt;lagweight&lt;/code&gt; 来使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a49cebd2c0a64b6ed696a25d8e9c66d10c8d54a0" translate="yes" xml:space="preserve">
          <source>Fits using Legendre series are usually better conditioned than fits using power series, but much can depend on the distribution of the sample points and the smoothness of the data. If the quality of the fit is inadequate splines may be a good alternative.</source>
          <target state="translated">使用Legendre数列的拟合通常比使用幂数列的拟合条件更好,但这很大程度上取决于样本点的分布和数据的平稳性。如果拟合的质量不够,花键可能是一个很好的选择。</target>
        </trans-unit>
        <trans-unit id="5165daf49b08b1322899a60f534d050a344807b1" translate="yes" xml:space="preserve">
          <source>Fitting</source>
          <target state="translated">Fitting</target>
        </trans-unit>
        <trans-unit id="64c14ba9774170afd08838cb0f853f190269a6cb" translate="yes" xml:space="preserve">
          <source>Fitting Data</source>
          <target state="translated">拟合数据</target>
        </trans-unit>
        <trans-unit id="5e51f96db68dc8fabd62d003884216322595fc6f" translate="yes" xml:space="preserve">
          <source>Fitting is the reason that the &lt;code&gt;domain&lt;/code&gt; and &lt;code&gt;window&lt;/code&gt; attributes are part of the convenience classes. To illustrate the problem, the values of the Chebyshev polynomials up to degree 5 are plotted below.</source>
          <target state="translated">拟合是 &lt;code&gt;domain&lt;/code&gt; 和 &lt;code&gt;window&lt;/code&gt; 属性属于便捷类的一部分的原因。为了说明此问题，下面绘制了直至5级的Chebyshev多项式的值。</target>
        </trans-unit>
        <trans-unit id="a882b40f9b004c60f42b6ed77cd0d0cb856640fe" translate="yes" xml:space="preserve">
          <source>Fix for PPC long double floating point information</source>
          <target state="translated">修正PPC长双浮点信息的问题</target>
        </trans-unit>
        <trans-unit id="919c4e1e9eb76e3cc1d2c2a8e361176acc1a9a4a" translate="yes" xml:space="preserve">
          <source>Fix regression in matmul (&lt;code&gt;@&lt;/code&gt; operator) for boolean types</source>
          <target state="translated">修复matmul（ &lt;code&gt;@&lt;/code&gt; 运算符）中布尔类型的回归</target>
        </trans-unit>
        <trans-unit id="0f0d59fd522286a2d4031174470931df04c244c1" translate="yes" xml:space="preserve">
          <source>Fix swig bug in &lt;code&gt;numpy.i&lt;/code&gt;</source>
          <target state="translated">修复 &lt;code&gt;numpy.i&lt;/code&gt; 中的Swig错误</target>
        </trans-unit>
        <trans-unit id="f95e31f1005ee116c93848080ddafc6a63474e8a" translate="yes" xml:space="preserve">
          <source>Fix to financial.npv</source>
          <target state="translated">修正为financial.npv</target>
        </trans-unit>
        <trans-unit id="fe4ad4288a37cfec787d6b9ab856b537a200ab81" translate="yes" xml:space="preserve">
          <source>Fixed &lt;code&gt;eigh&lt;/code&gt; and &lt;code&gt;cholesky&lt;/code&gt; methods in &lt;code&gt;numpy.random.multivariate_normal&lt;/code&gt;</source>
          <target state="translated">固定 &lt;code&gt;eigh&lt;/code&gt; 和 &lt;code&gt;cholesky&lt;/code&gt; 的方法 &lt;code&gt;numpy.random.multivariate_normal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4fa2ab2730080c4d8658ad57247e52d05152019e" translate="yes" xml:space="preserve">
          <source>Fixed stride displacement from the beginning of an axis? Default is 0. Needs to be &amp;gt;=0.</source>
          <target state="translated">从轴的起点开始固定的步幅位移？默认值为0。需要&amp;gt; = 0。</target>
        </trans-unit>
        <trans-unit id="cb2453cbdd88f7c5dbf744844c92b0eb5d9399b7" translate="yes" xml:space="preserve">
          <source>Fixed the jumping implementation in &lt;code&gt;MT19937.jumped&lt;/code&gt;</source>
          <target state="translated">修复了 &lt;code&gt;MT19937.jumped&lt;/code&gt; 的跳跃实现。</target>
        </trans-unit>
        <trans-unit id="8028cdac733fedf53d18c62ba8dde19dd4874832" translate="yes" xml:space="preserve">
          <source>Fixes Merged</source>
          <target state="translated">修正合并的问题</target>
        </trans-unit>
        <trans-unit id="988fef1858095167d23aba7f3c43fc27915118e8" translate="yes" xml:space="preserve">
          <source>Fixing Warnings</source>
          <target state="translated">修正警告</target>
        </trans-unit>
        <trans-unit id="35076585aaced59b92c591cb61ebdef18acdfe9a" translate="yes" xml:space="preserve">
          <source>Flag checking</source>
          <target state="translated">旗帜检查</target>
        </trans-unit>
        <trans-unit id="a59933a6089d6095752a4cce71d3ac903e7e62ac" translate="yes" xml:space="preserve">
          <source>Flag indicating the return a legacy tuple state when the BitGenerator is MT19937.</source>
          <target state="translated">标志表示当BitGenerator为MT19937时,返回一个遗留元组状态。</target>
        </trans-unit>
        <trans-unit id="ed451b4de2e9f4e89792baf70b0beefe2ddce512" translate="yes" xml:space="preserve">
          <source>Flag indicating to return a legacy tuple state when the BitGenerator is MT19937, instead of a dict.</source>
          <target state="translated">标志表示当BitGenerator是MT19937而不是dict时,要返回一个遗留元组状态。</target>
        </trans-unit>
        <trans-unit id="9eae779d408b29132a4d17f05274c96311b19164" translate="yes" xml:space="preserve">
          <source>Flag indicating whether a tuple &lt;code&gt;(result, sum of weights)&lt;/code&gt; should be returned as output (True), or just the result (False). Default is False.</source>
          <target state="translated">指示应将元组 &lt;code&gt;(result, sum of weights)&lt;/code&gt; 作为输出（真）还是仅作为结果（假）返回的标志。默认值为False。</target>
        </trans-unit>
        <trans-unit id="cba3c052d7e9a9fd1a29828876ef83802ed53ad9" translate="yes" xml:space="preserve">
          <source>Flag to determine whether to mark test as deprecated or not. If the condition is a callable, it is used at runtime to dynamically make the decision. Default is True.</source>
          <target state="translated">用于决定是否将测试标记为废弃的标志。如果条件是可调用的,则在运行时使用它来动态地做出决定。默认为True。</target>
        </trans-unit>
        <trans-unit id="fc63716a41208b1dbc0ebbf61137c2d0ff0fbfd4" translate="yes" xml:space="preserve">
          <source>Flag to determine whether to mark the decorated test as a known failure (if True) or not (if False).</source>
          <target state="translated">标志,以确定是否将装饰测试标记为已知失败(如果为真)或不标记(如果为假)。</target>
        </trans-unit>
        <trans-unit id="3a36aef11ecfbbf2d82d57b5084b3ab96e773b04" translate="yes" xml:space="preserve">
          <source>Flag to determine whether to skip the decorated test.</source>
          <target state="translated">确定是否跳过装饰测试的标志。</target>
        </trans-unit>
        <trans-unit id="75e57359674e825c88bcaaa1bf354a5ba42abc10" translate="yes" xml:space="preserve">
          <source>Flag-like constants</source>
          <target state="translated">旗状常数</target>
        </trans-unit>
        <trans-unit id="684f757afc22b26a0ad180a11e58599da12d805b" translate="yes" xml:space="preserve">
          <source>Flags indicating how the memory pointed to by data is to be interpreted. Possible flags are &lt;a href=&quot;c-api.array#c.NPY_ARRAY_C_CONTIGUOUS&quot;&gt;&lt;code&gt;NPY_ARRAY_C_CONTIGUOUS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;c-api.array#c.NPY_ARRAY_F_CONTIGUOUS&quot;&gt;&lt;code&gt;NPY_ARRAY_F_CONTIGUOUS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;c-api.array#c.NPY_ARRAY_OWNDATA&quot;&gt;&lt;code&gt;NPY_ARRAY_OWNDATA&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;c-api.array#c.NPY_ARRAY_ALIGNED&quot;&gt;&lt;code&gt;NPY_ARRAY_ALIGNED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;c-api.array#c.NPY_ARRAY_WRITEABLE&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;c-api.array#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;c-api.array#c.NPY_ARRAY_UPDATEIFCOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_UPDATEIFCOPY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指示如何解释数据指向的存储器的标志。可能的标志是&lt;a href=&quot;c-api.array#c.NPY_ARRAY_C_CONTIGUOUS&quot;&gt; &lt;code&gt;NPY_ARRAY_C_CONTIGUOUS&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;c-api.array#c.NPY_ARRAY_F_CONTIGUOUS&quot;&gt; &lt;code&gt;NPY_ARRAY_F_CONTIGUOUS&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;c-api.array#c.NPY_ARRAY_OWNDATA&quot;&gt; &lt;code&gt;NPY_ARRAY_OWNDATA&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;c-api.array#c.NPY_ARRAY_ALIGNED&quot;&gt; &lt;code&gt;NPY_ARRAY_ALIGNED&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;c-api.array#c.NPY_ARRAY_WRITEABLE&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;c-api.array#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;c-api.array#c.NPY_ARRAY_UPDATEIFCOPY&quot;&gt; &lt;code&gt;NPY_ARRAY_UPDATEIFCOPY&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a25e18657a4cd94e4091eda9ea0dfb9fbc2878ec" translate="yes" xml:space="preserve">
          <source>Flags that may be passed in &lt;code&gt;flags&lt;/code&gt; are any combination of the global and per-operand flags documented in &lt;a href=&quot;#c.NpyIter_MultiNew&quot;&gt;&lt;code&gt;NpyIter_MultiNew&lt;/code&gt;&lt;/a&gt;, except for &lt;a href=&quot;#c.NPY_ITER_ALLOCATE&quot;&gt;&lt;code&gt;NPY_ITER_ALLOCATE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以传递的 &lt;code&gt;flags&lt;/code&gt; 是&lt;a href=&quot;#c.NpyIter_MultiNew&quot;&gt; &lt;code&gt;NpyIter_MultiNew&lt;/code&gt; 中&lt;/a&gt;记录的global和per-operand标志的任何组合，除了&lt;a href=&quot;#c.NPY_ITER_ALLOCATE&quot;&gt; &lt;code&gt;NPY_ITER_ALLOCATE&lt;/code&gt; &lt;/a&gt;之外。</target>
        </trans-unit>
        <trans-unit id="edc811e4e9d890d1a74c59122b943f93451db31b" translate="yes" xml:space="preserve">
          <source>Flags that may be passed in &lt;code&gt;flags&lt;/code&gt;, applying to the whole iterator, are:</source>
          <target state="translated">可以在 &lt;code&gt;flags&lt;/code&gt; 中传递的标志（适用于整个迭代器）是：</target>
        </trans-unit>
        <trans-unit id="e576896ed3787e8ae91c02c3fee7275b55ae4f5d" translate="yes" xml:space="preserve">
          <source>Flags that may be passed in &lt;code&gt;op_flags[i]&lt;/code&gt;, where &lt;code&gt;0 &amp;lt;= i &amp;lt; nop&lt;/code&gt;:</source>
          <target state="translated">可以在 &lt;code&gt;op_flags[i]&lt;/code&gt; 传递的标志，其中 &lt;code&gt;0 &amp;lt;= i &amp;lt; nop&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0902dde9b75159ba7b0f6af69bd12aa3aed3ab46" translate="yes" xml:space="preserve">
          <source>Flags to control the behavior of the iterator.</source>
          <target state="translated">控制迭代器行为的标志。</target>
        </trans-unit>
        <trans-unit id="1bbaad527fcacc3d77ae0f546c2f20b2e4ef2d71" translate="yes" xml:space="preserve">
          <source>Flat Iterator indexing</source>
          <target state="translated">扁平迭代器索引</target>
        </trans-unit>
        <trans-unit id="ca0541280577eeacfb45501ad1950007e690905f" translate="yes" xml:space="preserve">
          <source>Flat array iterator.</source>
          <target state="translated">扁平数组迭代器。</target>
        </trans-unit>
        <trans-unit id="3f8292fdeb383ecef90303832ffb1117799af185" translate="yes" xml:space="preserve">
          <source>Flat iteration</source>
          <target state="translated">扁平化迭代</target>
        </trans-unit>
        <trans-unit id="666002e8705384831180e281fa74a843e3206b27" translate="yes" xml:space="preserve">
          <source>Flat iterator object to iterate over arrays.</source>
          <target state="translated">扁平迭代器对象,用于迭代数组。</target>
        </trans-unit>
        <trans-unit id="7d04e81220d975aa709532a3862f6c1a6f4a3f05" translate="yes" xml:space="preserve">
          <source>Flatten a structured data-type description.</source>
          <target state="translated">扁平化的结构化数据类型描述。</target>
        </trans-unit>
        <trans-unit id="ec4ad130c0f4e03f5e84c5e86d9264a95dc6c3f6" translate="yes" xml:space="preserve">
          <source>Flattened version of this function.</source>
          <target state="translated">该函数的扁平化版本。</target>
        </trans-unit>
        <trans-unit id="7b96969ab0c9b27da6b409485f5b0236b7c2a6ed" translate="yes" xml:space="preserve">
          <source>Flattening collapses a multimdimensional array to a single dimension; details of how this is done (for instance, whether &lt;code&gt;a[n+1]&lt;/code&gt; should be the next row or next column) are parameters.</source>
          <target state="translated">展平将多维数组折叠为一个维；参数的详细信息（例如， &lt;code&gt;a[n+1]&lt;/code&gt; 应该是下一行还是下一列）是参数。</target>
        </trans-unit>
        <trans-unit id="21fe615f2b66ecf8096308ee67f646d6664a1077" translate="yes" xml:space="preserve">
          <source>Flip an array horizontally (axis=1).</source>
          <target state="translated">水平翻转一个数组(axis=1)。</target>
        </trans-unit>
        <trans-unit id="7849c3ad46cd56097aefd350ce5a24872c1a9619" translate="yes" xml:space="preserve">
          <source>Flip an array horizontally.</source>
          <target state="translated">水平翻转一个阵列。</target>
        </trans-unit>
        <trans-unit id="a25cec9261711d7c64f4f0328d27630ff4251008" translate="yes" xml:space="preserve">
          <source>Flip an array vertically (axis=0).</source>
          <target state="translated">垂直翻转一个数组(轴=0)。</target>
        </trans-unit>
        <trans-unit id="58f1196dc69384b1c0ff7122abf54115c6fe24e6" translate="yes" xml:space="preserve">
          <source>Flip an array vertically.</source>
          <target state="translated">垂直翻转一个阵列。</target>
        </trans-unit>
        <trans-unit id="054ba7b0cd3f0b3aa1e4b17f975a52c4e03f8b87" translate="yes" xml:space="preserve">
          <source>Flip array in the left/right direction.</source>
          <target state="translated">在左/右方向翻转阵列。</target>
        </trans-unit>
        <trans-unit id="a71aa214a7a981c7e5292f4c8603043e9a55d042" translate="yes" xml:space="preserve">
          <source>Flip array in the up/down direction.</source>
          <target state="translated">在上/下方向翻转阵列。</target>
        </trans-unit>
        <trans-unit id="d6b601389a5cfb7f115ef7332083ae3431e4e4e3" translate="yes" xml:space="preserve">
          <source>Flip the entries in each column in the up/down direction. Rows are preserved, but appear in a different order than before.</source>
          <target state="translated">按上/下方向翻转每列中的条目。行被保留,但显示顺序与之前不同。</target>
        </trans-unit>
        <trans-unit id="f14bb6de935d5a8cea7f1dc6e4323a38f4e11462" translate="yes" xml:space="preserve">
          <source>Flip the entries in each row in the left/right direction. Columns are preserved, but appear in a different order than before.</source>
          <target state="translated">将每行的条目向左/右方向翻转。列被保留,但出现的顺序与之前不同。</target>
        </trans-unit>
        <trans-unit id="a806413f7b898c72fd5e92970c2a0a0a31830c28" translate="yes" xml:space="preserve">
          <source>Float printing now uses &amp;ldquo;dragon4&amp;rdquo; algorithm for shortest decimal representation</source>
          <target state="translated">浮动印刷现在使用&amp;ldquo; dragon4&amp;rdquo;算法实现最短的十进制表示</target>
        </trans-unit>
        <trans-unit id="3a7d4f9efa22847d513f86cb336f4d917bb3ff00" translate="yes" xml:space="preserve">
          <source>Float type code to coerce input array &lt;code&gt;a&lt;/code&gt;. If &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; is one of the &amp;lsquo;int&amp;rsquo; dtypes, it is replaced with float64.</source>
          <target state="translated">浮点类型代码强制输入数组 &lt;code&gt;a&lt;/code&gt; 。如果&lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;是&amp;ldquo;廉政&amp;rdquo; dtypes之一，它被替换为float64。</target>
        </trans-unit>
        <trans-unit id="01625a6e71519a2c19afcda12e2e9da94df799dc" translate="yes" xml:space="preserve">
          <source>Floating functions</source>
          <target state="translated">浮动功能</target>
        </trans-unit>
        <trans-unit id="0c47a1b436ef0cc135c28b0dd8fa381311e23c7a" translate="yes" xml:space="preserve">
          <source>Floating point</source>
          <target state="translated">浮点</target>
        </trans-unit>
        <trans-unit id="1229245ed91cf5c1f6662011b64e640e64679fd2" translate="yes" xml:space="preserve">
          <source>Floating point classification</source>
          <target state="translated">浮点分类</target>
        </trans-unit>
        <trans-unit id="82951541de1b33acb443a62a7f1b908de9e19ba0" translate="yes" xml:space="preserve">
          <source>Floating point error handling</source>
          <target state="translated">浮点错误处理</target>
        </trans-unit>
        <trans-unit id="dbe05d916add7aed11140c3ac753c505841f4681" translate="yes" xml:space="preserve">
          <source>Floating point number &lt;code&gt;beta**minexp&lt;/code&gt; (the smallest [in magnitude] usable floating value).</source>
          <target state="translated">浮点数 &lt;code&gt;beta**minexp&lt;/code&gt; （可用的最小浮点值）。</target>
        </trans-unit>
        <trans-unit id="1fd86bfd9f81a559ed8b4c9674c5d1f9e823b143" translate="yes" xml:space="preserve">
          <source>Floating point precision can be set:</source>
          <target state="translated">可设置浮点精度。</target>
        </trans-unit>
        <trans-unit id="481d82b2ccb68e7d8e1fe5eda973bb77f53833f0" translate="yes" xml:space="preserve">
          <source>Floating point precision. Defaults to &lt;code&gt;numpy.get_printoptions()['precision']&lt;/code&gt;.</source>
          <target state="translated">浮点精度。默认为 &lt;code&gt;numpy.get_printoptions()['precision']&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6770ad9e8703a79e53fa3beb7d8e8f53215f921c" translate="yes" xml:space="preserve">
          <source>Floating point routines</source>
          <target state="translated">浮点程序</target>
        </trans-unit>
        <trans-unit id="a8d35036268d7e5fa8b38b4abd4d049aeafa51d6" translate="yes" xml:space="preserve">
          <source>Floating point scalars implement &lt;code&gt;as_integer_ratio&lt;/code&gt; to match the builtin float</source>
          <target state="translated">浮点标量实现 &lt;code&gt;as_integer_ratio&lt;/code&gt; 以匹配内置浮点</target>
        </trans-unit>
        <trans-unit id="bbb20a81d8b5780d9de2483bc5cafd120d0cd965" translate="yes" xml:space="preserve">
          <source>Floating point values are not demoted to integers, and complex values are not demoted to floats.</source>
          <target state="translated">浮点值不降级为整数,复数值不降级为浮点数。</target>
        </trans-unit>
        <trans-unit id="2a6aa48e3a6c80756547c7551fe79b07bb4f3a1c" translate="yes" xml:space="preserve">
          <source>Floating values between -1 and 1. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">浮点值介于-1和1之间。如果 &lt;code&gt;x&lt;/code&gt; 是标量，则为标量。</target>
        </trans-unit>
        <trans-unit id="e6f0281f3f5728d7cb1a3465fbf569e0196bf3cd" translate="yes" xml:space="preserve">
          <source>Floating-point number &lt;code&gt;beta**machep&lt;/code&gt; (floating point precision)</source>
          <target state="translated">浮点数 &lt;code&gt;beta**machep&lt;/code&gt; （浮点精度）</target>
        </trans-unit>
        <trans-unit id="8c170a74ff7bf0743ef67475a7fd14e3feeea278" translate="yes" xml:space="preserve">
          <source>Floating-point number &lt;code&gt;beta**minexp&lt;/code&gt; (the smallest [in magnitude] positive floating point number with full precision).</source>
          <target state="translated">浮点数 &lt;code&gt;beta**minexp&lt;/code&gt; （具有全精度的最小[幅度]正浮点数）。</target>
        </trans-unit>
        <trans-unit id="f8899b4f72c4b482d21d27616c70625d6596dd90" translate="yes" xml:space="preserve">
          <source>Floating-point number &lt;code&gt;beta**negep&lt;/code&gt;.</source>
          <target state="translated">浮点数 &lt;code&gt;beta**negep&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2eae9dc4dc291f4562016bea57ea67a7a3b1f88f" translate="yes" xml:space="preserve">
          <source>Floating-point numbers:</source>
          <target state="translated">浮点数。</target>
        </trans-unit>
        <trans-unit id="2a9bb411b345b451f4de56294a2e04b8bb44acd7" translate="yes" xml:space="preserve">
          <source>Floating-point types</source>
          <target state="translated">浮点类型</target>
        </trans-unit>
        <trans-unit id="55734ad7ec5ec7776c0a844d3df4e815b482074b" translate="yes" xml:space="preserve">
          <source>Floats uniformly distributed over &lt;code&gt;[0, 1)&lt;/code&gt;.</source>
          <target state="translated">浮点在 &lt;code&gt;[0, 1)&lt;/code&gt; 均匀分布。</target>
        </trans-unit>
        <trans-unit id="9c505c67e9b4dbb54495e1dc42c80f1a7a1c454f" translate="yes" xml:space="preserve">
          <source>Floor divide self by other in-place.</source>
          <target state="translated">楼层将自己除以其他原地。</target>
        </trans-unit>
        <trans-unit id="1ddc7d58e45f89f16199c2075dcd43275a50c059" translate="yes" xml:space="preserve">
          <source>Floor division, &amp;lsquo;//&amp;rsquo;, is the division operator for the polynomial classes, polynomials are treated like integers in this regard. For Python versions &amp;lt; 3.x the &amp;lsquo;/&amp;rsquo; operator maps to &amp;lsquo;//&amp;rsquo;, as it does for Python, for later versions the &amp;lsquo;/&amp;rsquo; will only work for division by scalars. At some point it will be deprecated:</source>
          <target state="translated">地板除法&amp;ldquo; //&amp;rdquo;是多项式类别的除法运算符，在这方面，多项式被视为整数。对于版本低于3.x的Python，&amp;ldquo; /&amp;rdquo;运算符映射为&amp;ldquo; //&amp;rdquo;，对于Python而言，对于更高版本，&amp;ldquo; /&amp;rdquo;仅适用于标量除法。在某些时候，它会被弃用：</target>
        </trans-unit>
        <trans-unit id="79e1726f42029777852db20a843c6cc2473daaca" translate="yes" xml:space="preserve">
          <source>Flush the memmap instance to write the changes to the file. Currently there is no API to close the underlying &lt;code&gt;mmap&lt;/code&gt;. It is tricky to ensure the resource is actually closed, since it may be shared between different memmap instances.</source>
          <target state="translated">刷新memmap实例以将更改写入文件。当前没有用于关闭基础 &lt;code&gt;mmap&lt;/code&gt; 的API 。确保资源实际上是关闭的，因为在不同的memmap实例之间可能会共享资源，因此这很棘手。</target>
        </trans-unit>
        <trans-unit id="da34386f35923e2e352d15ed19fcb86185028b70" translate="yes" xml:space="preserve">
          <source>Flushes memory changes to disk in order to read them back</source>
          <target state="translated">将内存变化刷新到磁盘上,以便将其读回。</target>
        </trans-unit>
        <trans-unit id="977e7ae24b1ce53baf0769e85a5d553c0c1ba1a9" translate="yes" xml:space="preserve">
          <source>Following each integration the result is &lt;em&gt;multiplied&lt;/em&gt; by &lt;code&gt;scl&lt;/code&gt; before the integration constant is added. (Default: 1)</source>
          <target state="translated">继每个积分结果&lt;em&gt;乘以&lt;/em&gt;通过 &lt;code&gt;scl&lt;/code&gt; 加入积分常数之前。（默认值：1）</target>
        </trans-unit>
        <trans-unit id="0edda5efdca0ba777ab89777b73ae8abb0ac8170" translate="yes" xml:space="preserve">
          <source>Following the header comes the array data. If the dtype contains Python objects (i.e. &lt;code&gt;dtype.hasobject is True&lt;/code&gt;), then the data is a Python pickle of the array. Otherwise the data is the contiguous (either C- or Fortran-, depending on &lt;code&gt;fortran_order&lt;/code&gt;) bytes of the array. Consumers can figure out the number of bytes by multiplying the number of elements given by the shape (noting that &lt;code&gt;shape=()&lt;/code&gt; means there is 1 element) by &lt;code&gt;dtype.itemsize&lt;/code&gt;.</source>
          <target state="translated">头之后是数组数据。如果 &lt;code&gt;dtype.hasobject is True&lt;/code&gt; 包含Python对象（即dtype.hasobject为True），则数据为数组的Python泡菜。否则，数据是数组的连续字节（C或Fortran-，取决于 &lt;code&gt;fortran_order&lt;/code&gt; ）。消费者可以通过将形状给定的元素数量乘以 &lt;code&gt;dtype.itemsize&lt;/code&gt; 来计算字节数（注意 &lt;code&gt;shape=()&lt;/code&gt; 表示有1个元素）。</target>
        </trans-unit>
        <trans-unit id="ec0c3b76630fd745381cc215a284820af75a683a" translate="yes" xml:space="preserve">
          <source>Footnotes</source>
          <target state="translated">Footnotes</target>
        </trans-unit>
        <trans-unit id="1e3737ce90be5e40d3542337b2a16d0ddfea15fe" translate="yes" xml:space="preserve">
          <source>For 18 of the 21 types this number is fixed by the data-type. For the flexible data-types, this number can be anything.</source>
          <target state="translated">对于21种类型中的18种,这个数字由数据类型固定。对于灵活的数据类型,这个数字可以是任何东西。</target>
        </trans-unit>
        <trans-unit id="6fe31cdcb6c6646809088d5903655d52a55d450e" translate="yes" xml:space="preserve">
          <source>For 2-D arrays it is the matrix product:</source>
          <target state="translated">对于二维数组来说,它是矩阵积。</target>
        </trans-unit>
        <trans-unit id="3f962aedbf83ef9d65d44b9e69490919cc79f9a0" translate="yes" xml:space="preserve">
          <source>For 2-D mixed with 1-D, the result is the usual.</source>
          <target state="translated">对于二维与一维的混合,结果是通常的。</target>
        </trans-unit>
        <trans-unit id="249d7389fa64403ab6c1fc03103e6db107907e49" translate="yes" xml:space="preserve">
          <source>For 8-bit strings, this method is locale-dependent.</source>
          <target state="translated">对于8位的字符串,这个方法是依赖于本地的。</target>
        </trans-unit>
        <trans-unit id="e9823fecc87a84ebddb341139f0bf48490868833" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#how-to-io-pickle-file&quot;&gt;security and portability&lt;/a&gt;, set &lt;code&gt;allow_pickle=False&lt;/code&gt; unless the dtype contains Python objects, which requires pickling.</source>
          <target state="translated">为了&lt;a href=&quot;#how-to-io-pickle-file&quot;&gt;安全和可移植性&lt;/a&gt;，请设置 &lt;code&gt;allow_pickle=False&lt;/code&gt; ,除非dtype包含需要腌制的Python对象。</target>
        </trans-unit>
        <trans-unit id="e34d3054bfe352b99ce08082d1411334b317ca53" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; one-dimensional, this is equivalent to:</source>
          <target state="translated">对于 &lt;code&gt;A&lt;/code&gt; 和 &lt;code&gt;B&lt;/code&gt; 一维，这等效于：</target>
        </trans-unit>
        <trans-unit id="a6fa074fdf944e6525f90fb53e3868628cc3a171" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;a.view(some_dtype)&lt;/code&gt;, if &lt;code&gt;some_dtype&lt;/code&gt; has a different number of bytes per entry than the previous dtype (for example, converting a regular array to a structured array), then the behavior of the view cannot be predicted just from the superficial appearance of &lt;code&gt;a&lt;/code&gt; (shown by &lt;code&gt;print(a)&lt;/code&gt;). It also depends on exactly how &lt;code&gt;a&lt;/code&gt; is stored in memory. Therefore if &lt;code&gt;a&lt;/code&gt; is C-ordered versus fortran-ordered, versus defined as a slice or transpose, etc., the view may give different results.</source>
          <target state="translated">对于 &lt;code&gt;a.view(some_dtype)&lt;/code&gt; ，如果 &lt;code&gt;some_dtype&lt;/code&gt; 每个条目的字节数与以前的dtype不同（例如，将常规数组转换为结构化数组），则无法仅从表面外观预测视图的行为的 &lt;code&gt;a&lt;/code&gt; （通过示出 &lt;code&gt;print(a)&lt;/code&gt; ）。这也完全取决于 &lt;code&gt;a&lt;/code&gt; 在内存中的存储方式。因此，如果 &lt;code&gt;a&lt;/code&gt; 是C顺序相对于fortran顺序，相对于定义为切片或转置等，则视图可能会给出不同的结果。</target>
        </trans-unit>
        <trans-unit id="915d1e6dbac63dd7367ad9288b59958e7383b198" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;array&lt;/code&gt;, &lt;strong&gt;``*`` means element-wise multiplication&lt;/strong&gt;, while &lt;strong&gt;``@`` means matrix multiplication&lt;/strong&gt;; they have associated functions &lt;code&gt;multiply()&lt;/code&gt; and &lt;code&gt;dot()&lt;/code&gt;. (Before Python 3.5, &lt;code&gt;@&lt;/code&gt; did not exist and one had to use &lt;code&gt;dot()&lt;/code&gt; for matrix multiplication).</source>
          <target state="translated">对于 &lt;code&gt;array&lt;/code&gt; ，&lt;strong&gt;``*''表示元素乘法&lt;/strong&gt;，而&lt;strong&gt;``@``表示矩阵乘法&lt;/strong&gt;; 它们具有关联的功能 &lt;code&gt;multiply()&lt;/code&gt; 和 &lt;code&gt;dot()&lt;/code&gt; 。（在Python 3.5之前， &lt;code&gt;@&lt;/code&gt; 不存在，因此必须使用 &lt;code&gt;dot()&lt;/code&gt; 进行矩阵乘法）。</target>
        </trans-unit>
        <trans-unit id="e46f2d6f5fe5e7ec999c5f95aef2596fb69e222c" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;array&lt;/code&gt;, &lt;strong&gt;``*`` means element-wise multiplication&lt;/strong&gt;, while &lt;strong&gt;``@`` means matrix multiplication&lt;/strong&gt;; they have associated functions &lt;code&gt;multiply()&lt;/code&gt; and &lt;code&gt;dot()&lt;/code&gt;. (Before python 3.5, &lt;code&gt;@&lt;/code&gt; did not exist and one had to use &lt;code&gt;dot()&lt;/code&gt; for matrix multiplication).</source>
          <target state="translated">对于 &lt;code&gt;array&lt;/code&gt; ，&lt;strong&gt;``*''表示元素乘法&lt;/strong&gt;，而&lt;strong&gt;``@``表示矩阵乘法&lt;/strong&gt;; 它们具有关联的功能 &lt;code&gt;multiply()&lt;/code&gt; 和 &lt;code&gt;dot()&lt;/code&gt; 。（在python 3.5之前， &lt;code&gt;@&lt;/code&gt; 不存在，因此必须使用 &lt;code&gt;dot()&lt;/code&gt; 进行矩阵乘法）。</target>
        </trans-unit>
        <trans-unit id="3105b82282a4b74064eec805ba7d2c290a53d304" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;array&lt;/code&gt;, the &lt;strong&gt;vector shapes 1xN, Nx1, and N are all different things&lt;/strong&gt;. Operations like &lt;code&gt;A[:,1]&lt;/code&gt; return a one-dimensional array of shape N, not a two-dimensional array of shape Nx1. Transpose on a one-dimensional &lt;code&gt;array&lt;/code&gt; does nothing.</source>
          <target state="translated">对于 &lt;code&gt;array&lt;/code&gt; ，&lt;strong&gt;矢量形状1xN，Nx1和N都是不同的东西&lt;/strong&gt;。像 &lt;code&gt;A[:,1]&lt;/code&gt; 这样的运算会传回形状为N的一维数组，而不是形状为Nx1的二维数组。转置到一维 &lt;code&gt;array&lt;/code&gt; 不会执行任何操作。</target>
        </trans-unit>
        <trans-unit id="272593adff1434bde1d4cd33b0346e0c6d20e042" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;e, E&lt;/code&gt; and &lt;code&gt;f&lt;/code&gt; specifiers, the number of digits to print after the decimal point.</source>
          <target state="translated">对于 &lt;code&gt;e, E&lt;/code&gt; 和 &lt;code&gt;f&lt;/code&gt; 指示符，小数点后要打印的位数。</target>
        </trans-unit>
        <trans-unit id="a8b87fa4bee96c31297a2faf4474562d50259437" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;g&lt;/code&gt; and &lt;code&gt;G&lt;/code&gt;, the maximum number of significant digits.</source>
          <target state="translated">对于 &lt;code&gt;g&lt;/code&gt; 和 &lt;code&gt;G&lt;/code&gt; ，最大有效位数。</target>
        </trans-unit>
        <trans-unit id="d98628f7394ff0daa3811e58311c01f9a29ca826" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;matrix&lt;/code&gt;, &lt;strong&gt;``*`` means matrix multiplication&lt;/strong&gt;, and for element-wise multiplication one has to use the &lt;code&gt;multiply()&lt;/code&gt; function.</source>
          <target state="translated">对于 &lt;code&gt;matrix&lt;/code&gt; ，&lt;strong&gt;&amp;ldquo; *&amp;rdquo;表示矩阵乘法&lt;/strong&gt;，而对于逐元素&lt;strong&gt;乘法&lt;/strong&gt;，则必须使用 &lt;code&gt;multiply()&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="637ce924b991228068be8a9a9fc01722cca48f39" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;matrix&lt;/code&gt;, &lt;strong&gt;one-dimensional arrays are always upconverted to 1xN or Nx1 matrices&lt;/strong&gt; (row or column vectors). &lt;code&gt;A[:,1]&lt;/code&gt; returns a two-dimensional matrix of shape Nx1.</source>
          <target state="translated">对于 &lt;code&gt;matrix&lt;/code&gt; ，&lt;strong&gt;一维数组始终上转换为1xN或Nx1矩阵&lt;/strong&gt;（行向量或列向量）。 &lt;code&gt;A[:,1]&lt;/code&gt; 返回形状为Nx1的二维矩阵。</target>
        </trans-unit>
        <trans-unit id="2f16f572df2de5dbe71ab6b482a26aade3788153" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;s&lt;/code&gt;, the maximum number of characters.</source>
          <target state="translated">对于 &lt;code&gt;s&lt;/code&gt; ，最大字符数。</target>
        </trans-unit>
        <trans-unit id="aa1840d454c362488b42bf5829f92b6d701a9c1e" translate="yes" xml:space="preserve">
          <source>For Arch</source>
          <target state="translated">拱门</target>
        </trans-unit>
        <trans-unit id="1fe382b5886c1f7f86eb9563a948b171f688012e" translate="yes" xml:space="preserve">
          <source>For C code, see &lt;a href=&quot;https://numpy.org/neps/nep-0045-c_style_guide.html#nep45&quot;&gt;NEP 45&lt;/a&gt;.</source>
          <target state="translated">有关C代码，请参阅&lt;a href=&quot;https://numpy.org/neps/nep-0045-c_style_guide.html#nep45&quot;&gt;NEP 45&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="99d20f637f3a6e1d55b90d0390d938da13e44f35" translate="yes" xml:space="preserve">
          <source>For C code, see the &lt;a href=&quot;style_guide#style-guide&quot;&gt;numpy-c-style-guide&lt;/a&gt;</source>
          <target state="translated">有关C代码，请参见&lt;a href=&quot;style_guide#style-guide&quot;&gt;numpy-c-style-guide&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96de2b474663e4b27c100d387c234e173e9360ba" translate="yes" xml:space="preserve">
          <source>For NumPy &amp;gt;= 1.10.0 a view of &lt;code&gt;a&lt;/code&gt; is always returned. For earlier NumPy versions a view of &lt;code&gt;a&lt;/code&gt; is returned only if the order of the axes is changed, otherwise the input array is returned.</source>
          <target state="translated">对于NumPy的&amp;gt; = 1.10.0一个的视图 &lt;code&gt;a&lt;/code&gt; 总是返回。对于较早版本NumPy的的视图 &lt;code&gt;a&lt;/code&gt; ，如果轴的顺序被改变仅返回，否则返回输入数组。</target>
        </trans-unit>
        <trans-unit id="187181bc029dad6f61070b7f6592eecd79b97aa5" translate="yes" xml:space="preserve">
          <source>For NumPy &amp;gt;= 1.10.0, if &lt;code&gt;a&lt;/code&gt; is an ndarray, then a view of &lt;code&gt;a&lt;/code&gt; is returned; otherwise a new array is created. For earlier NumPy versions a view of &lt;code&gt;a&lt;/code&gt; is returned only if the order of the axes is changed, otherwise the input array is returned.</source>
          <target state="translated">对于NumPy的&amp;gt; = 1.10.0，如果 &lt;code&gt;a&lt;/code&gt; 是ndarray，然后的视图 &lt;code&gt;a&lt;/code&gt; 被返回; 否则，将创建一个新数组。对于较早版本NumPy的的视图 &lt;code&gt;a&lt;/code&gt; ，如果轴的顺序被改变仅返回，否则返回输入数组。</target>
        </trans-unit>
        <trans-unit id="0a5eeed134b0ceb1a540af21c6c13d1f0f7c9d88" translate="yes" xml:space="preserve">
          <source>For PRs that add new features or are in some way complex, wait at least a day or two before merging it. That way, others get a chance to comment before the code goes in. Consider adding it to the release notes.</source>
          <target state="translated">对于增加了新功能或在某种程度上很复杂的PR,至少要等一两天再合并。这样一来,其他人就有机会在代码进入之前发表评论。可以考虑将其添加到发布说明中。</target>
        </trans-unit>
        <trans-unit id="54f70af9beed617bc137c199798e6f21c9093a8c" translate="yes" xml:space="preserve">
          <source>For Python, the preferred way of handling contiguous (or technically, &lt;em&gt;strided&lt;/em&gt;) blocks of homogeneous data is with NumPy, which provides full object-oriented access to multidimensial arrays of data. Therefore, the most logical Python interface for the &lt;code&gt;rms&lt;/code&gt; function would be (including doc string):</source>
          <target state="translated">对于Python，处理连续（或技术上为&lt;em&gt;跨步&lt;/em&gt;）同类数据块的首选方法是使用NumPy，它提供对多维数据数组的完全面向对象的访问。因此，用于 &lt;code&gt;rms&lt;/code&gt; 函数的最合乎逻辑的Python接口是（包括doc字符串）：</target>
        </trans-unit>
        <trans-unit id="55f9e5f045d92376c7d38dda0f2622f9b6352be6" translate="yes" xml:space="preserve">
          <source>For a 1-D array this has no effect, as a transposed vector is simply the same vector. To convert a 1-D array into a 2D column vector, an additional dimension must be added. &lt;code&gt;np.atleast2d(a).T&lt;/code&gt; achieves this, as does &lt;code&gt;a[:, np.newaxis]&lt;/code&gt;. For a 2-D array, this is a standard matrix transpose. For an n-D array, if axes are given, their order indicates how the axes are permuted (see Examples). If axes are not provided and &lt;code&gt;a.shape = (i[0], i[1], ... i[n-2], i[n-1])&lt;/code&gt;, then &lt;code&gt;a.transpose().shape = (i[n-1], i[n-2], ... i[1], i[0])&lt;/code&gt;.</source>
          <target state="translated">对于一维数组，这没有任何作用，因为转置向量只是同一向量。要将一维数组转换为二维列向量，必须添加一个附加维。 &lt;code&gt;np.atleast2d(a).T&lt;/code&gt; 实现了这一点， &lt;code&gt;a[:, np.newaxis]&lt;/code&gt; 。对于二维阵列，这是标准矩阵转置。对于nD数组，如果指定了轴，则其顺序指示如何排列轴（请参见示例）。如果未提供轴并且 &lt;code&gt;a.shape = (i[0], i[1], ... i[n-2], i[n-1])&lt;/code&gt; ，则 &lt;code&gt;a.transpose().shape = (i[n-1], i[n-2], ... i[1], i[0])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c37103fe1630ecb51bfbc7a903129e1d60dd7ed" translate="yes" xml:space="preserve">
          <source>For a 1D array, &lt;code&gt;a.tolist()&lt;/code&gt; is almost the same as &lt;code&gt;list(a)&lt;/code&gt;, except that &lt;code&gt;tolist&lt;/code&gt; changes numpy scalars to Python scalars:</source>
          <target state="translated">对于一维数组， &lt;code&gt;a.tolist()&lt;/code&gt; 与 &lt;code&gt;list(a)&lt;/code&gt; 几乎相同，不同之处在于 &lt;code&gt;tolist&lt;/code&gt; 将numpy标量更改为Python标量：</target>
        </trans-unit>
        <trans-unit id="d3f2a60e0b01b84231d8024aebcc5e084e0ba27d" translate="yes" xml:space="preserve">
          <source>For a 1D array, &lt;code&gt;a.tolist()&lt;/code&gt; is almost the same as &lt;code&gt;list(a)&lt;/code&gt;:</source>
          <target state="translated">对于一维数组， &lt;code&gt;a.tolist()&lt;/code&gt; 与 &lt;code&gt;list(a)&lt;/code&gt; 几乎相同：</target>
        </trans-unit>
        <trans-unit id="cf0f7c81098fcc87863f3be5d59395a987825914" translate="yes" xml:space="preserve">
          <source>For a complete discussion of creation methods for masked arrays please see section &lt;a href=&quot;#maskedarray-generic-constructing&quot;&gt;Constructing masked arrays&lt;/a&gt;.</source>
          <target state="translated">有关掩码数组的创建方法的完整讨论，请参见&amp;ldquo; &lt;a href=&quot;#maskedarray-generic-constructing&quot;&gt;构造掩码数组&amp;rdquo;&lt;/a&gt;一节。</target>
        </trans-unit>
        <trans-unit id="0bdfc3356f177e5d7773cb796069c781e6c3ff20" translate="yes" xml:space="preserve">
          <source>For a description of the &lt;code&gt;.npy&lt;/code&gt; format, see &lt;a href=&quot;numpy.lib.format#module-numpy.lib.format&quot;&gt;&lt;code&gt;numpy.lib.format&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关 &lt;code&gt;.npy&lt;/code&gt; 格式的说明，请参见&lt;a href=&quot;numpy.lib.format#module-numpy.lib.format&quot;&gt; &lt;code&gt;numpy.lib.format&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="197692467968599b779c0574e1302cadc5d30a4f" translate="yes" xml:space="preserve">
          <source>For a full description of these options, see &lt;a href=&quot;numpy.set_printoptions#numpy.set_printoptions&quot;&gt;&lt;code&gt;set_printoptions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关这些选项的完整说明，请参见&lt;a href=&quot;numpy.set_printoptions#numpy.set_printoptions&quot;&gt; &lt;code&gt;set_printoptions&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b040ed436e354a6dfab8e28023d68c6eed7a06c2" translate="yes" xml:space="preserve">
          <source>For a function that returns a 1D array, the number of dimensions in &lt;code&gt;outarr&lt;/code&gt; is the same as &lt;code&gt;arr&lt;/code&gt;.</source>
          <target state="translated">对于返回一维数组的函数， &lt;code&gt;outarr&lt;/code&gt; 中的维数与 &lt;code&gt;arr&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="9409ae5300d15907687b38139959611e06963f16" translate="yes" xml:space="preserve">
          <source>For a function that returns a higher dimensional array, those dimensions are inserted in place of the &lt;code&gt;axis&lt;/code&gt; dimension.</source>
          <target state="translated">对于返回高维数组的函数，将插入这些维来代替 &lt;code&gt;axis&lt;/code&gt; 维。</target>
        </trans-unit>
        <trans-unit id="6bc58e9722ab208094239d52118be4b4466da131" translate="yes" xml:space="preserve">
          <source>For a log() that returns &lt;code&gt;NAN&lt;/code&gt; when real &lt;code&gt;x &amp;lt; 0&lt;/code&gt;, use &lt;a href=&quot;numpy.log#numpy.log&quot;&gt;&lt;code&gt;numpy.log&lt;/code&gt;&lt;/a&gt; (note, however, that otherwise &lt;a href=&quot;numpy.log#numpy.log&quot;&gt;&lt;code&gt;numpy.log&lt;/code&gt;&lt;/a&gt; and this &lt;a href=&quot;numpy.log#numpy.log&quot;&gt;&lt;code&gt;log&lt;/code&gt;&lt;/a&gt; are identical, i.e., both return &lt;code&gt;-inf&lt;/code&gt; for &lt;code&gt;x = 0&lt;/code&gt;, &lt;code&gt;inf&lt;/code&gt; for &lt;code&gt;x = inf&lt;/code&gt;, and, notably, the complex principle value if &lt;code&gt;x.imag != 0&lt;/code&gt;).</source>
          <target state="translated">对于一个日志（）的返回 &lt;code&gt;NAN&lt;/code&gt; 当真实 &lt;code&gt;x &amp;lt; 0&lt;/code&gt; ，使用&lt;a href=&quot;numpy.log#numpy.log&quot;&gt; &lt;code&gt;numpy.log&lt;/code&gt; &lt;/a&gt;（注意，然而，否则&lt;a href=&quot;numpy.log#numpy.log&quot;&gt; &lt;code&gt;numpy.log&lt;/code&gt; &lt;/a&gt;和这个&lt;a href=&quot;numpy.log#numpy.log&quot;&gt; &lt;code&gt;log&lt;/code&gt; &lt;/a&gt;是相同的，即，两个返回 &lt;code&gt;-inf&lt;/code&gt; 为 &lt;code&gt;x = 0&lt;/code&gt; ， &lt;code&gt;inf&lt;/code&gt; 为 &lt;code&gt;x = inf&lt;/code&gt; ，尤其是 &lt;code&gt;x.imag != 0&lt;/code&gt; 的复数原理值。</target>
        </trans-unit>
        <trans-unit id="7fb6c973e282321a695eebb55d28fd847e02e71f" translate="yes" xml:space="preserve">
          <source>For a log10() that returns &lt;code&gt;NAN&lt;/code&gt; when real &lt;code&gt;x &amp;lt; 0&lt;/code&gt;, use &lt;a href=&quot;numpy.log10#numpy.log10&quot;&gt;&lt;code&gt;numpy.log10&lt;/code&gt;&lt;/a&gt; (note, however, that otherwise &lt;a href=&quot;numpy.log10#numpy.log10&quot;&gt;&lt;code&gt;numpy.log10&lt;/code&gt;&lt;/a&gt; and this &lt;a href=&quot;numpy.log10#numpy.log10&quot;&gt;&lt;code&gt;log10&lt;/code&gt;&lt;/a&gt; are identical, i.e., both return &lt;code&gt;-inf&lt;/code&gt; for &lt;code&gt;x = 0&lt;/code&gt;, &lt;code&gt;inf&lt;/code&gt; for &lt;code&gt;x = inf&lt;/code&gt;, and, notably, the complex principle value if &lt;code&gt;x.imag != 0&lt;/code&gt;).</source>
          <target state="translated">对于日志10（下），返回 &lt;code&gt;NAN&lt;/code&gt; 当真实 &lt;code&gt;x &amp;lt; 0&lt;/code&gt; ，使用&lt;a href=&quot;numpy.log10#numpy.log10&quot;&gt; &lt;code&gt;numpy.log10&lt;/code&gt; &lt;/a&gt;（注意，然而，否则&lt;a href=&quot;numpy.log10#numpy.log10&quot;&gt; &lt;code&gt;numpy.log10&lt;/code&gt; &lt;/a&gt;和这个&lt;a href=&quot;numpy.log10#numpy.log10&quot;&gt; &lt;code&gt;log10&lt;/code&gt; &lt;/a&gt;是相同的，即，两个返回 &lt;code&gt;-inf&lt;/code&gt; 为 &lt;code&gt;x = 0&lt;/code&gt; ， &lt;code&gt;inf&lt;/code&gt; 为 &lt;code&gt;x = inf&lt;/code&gt; ，尤其是 &lt;code&gt;x.imag != 0&lt;/code&gt; 的复数原理值。</target>
        </trans-unit>
        <trans-unit id="3d2c7a157db6f37c8448fa48835b35d5b5709f3a" translate="yes" xml:space="preserve">
          <source>For a log2() that returns &lt;code&gt;NAN&lt;/code&gt; when real &lt;code&gt;x &amp;lt; 0&lt;/code&gt;, use &lt;a href=&quot;numpy.log2#numpy.log2&quot;&gt;&lt;code&gt;numpy.log2&lt;/code&gt;&lt;/a&gt; (note, however, that otherwise &lt;a href=&quot;numpy.log2#numpy.log2&quot;&gt;&lt;code&gt;numpy.log2&lt;/code&gt;&lt;/a&gt; and this &lt;a href=&quot;numpy.log2#numpy.log2&quot;&gt;&lt;code&gt;log2&lt;/code&gt;&lt;/a&gt; are identical, i.e., both return &lt;code&gt;-inf&lt;/code&gt; for &lt;code&gt;x = 0&lt;/code&gt;, &lt;code&gt;inf&lt;/code&gt; for &lt;code&gt;x = inf&lt;/code&gt;, and, notably, the complex principle value if &lt;code&gt;x.imag != 0&lt;/code&gt;).</source>
          <target state="translated">对于LOG2（）的返回 &lt;code&gt;NAN&lt;/code&gt; 当真实 &lt;code&gt;x &amp;lt; 0&lt;/code&gt; ，使用&lt;a href=&quot;numpy.log2#numpy.log2&quot;&gt; &lt;code&gt;numpy.log2&lt;/code&gt; &lt;/a&gt;（注意，然而，否则&lt;a href=&quot;numpy.log2#numpy.log2&quot;&gt; &lt;code&gt;numpy.log2&lt;/code&gt; &lt;/a&gt;和这个&lt;a href=&quot;numpy.log2#numpy.log2&quot;&gt; &lt;code&gt;log2&lt;/code&gt; &lt;/a&gt;是相同的，即，两个返回 &lt;code&gt;-inf&lt;/code&gt; 为 &lt;code&gt;x = 0&lt;/code&gt; ， &lt;code&gt;inf&lt;/code&gt; 为 &lt;code&gt;x = inf&lt;/code&gt; ，尤其是 &lt;code&gt;x.imag != 0&lt;/code&gt; 的复数原理值。</target>
        </trans-unit>
        <trans-unit id="17b694669442e700bd635063d9a03b4ef4365eec" translate="yes" xml:space="preserve">
          <source>For a more detailed discussion, read on and follow the links at the bottom of this page.</source>
          <target state="translated">更详细的讨论,请继续阅读并关注本页底部的链接。</target>
        </trans-unit>
        <trans-unit id="7adc015d596be980abdfb7f52ddd54b20d9ed4e4" translate="yes" xml:space="preserve">
          <source>For a multi-dimensional array, accumulate is applied along only one axis (axis zero by default; see Examples below) so repeated use is necessary if one wants to accumulate over multiple axes.</source>
          <target state="translated">对于一个多维数组,累加只沿着一个轴(默认是零轴,见下面的例子),所以如果想在多个轴上累加,就必须重复使用。</target>
        </trans-unit>
        <trans-unit id="4a70a58adc76a39cce5a267ab70438cf75b9572e" translate="yes" xml:space="preserve">
          <source>For a non-trivial signature, &lt;code&gt;dimensions&lt;/code&gt; will also contain the sizes of the core dimensions as well, starting at the second entry. Only one size is provided for each unique dimension name and the sizes are given according to the first occurrence of a dimension name in the signature.</source>
          <target state="translated">对于非平凡的签名， &lt;code&gt;dimensions&lt;/code&gt; 也将从第二个条目开始也包含核心尺寸的尺寸。每个唯一的尺寸名称仅提供一个尺寸，并且尺寸是根据签名中尺寸名称的首次出现给出的。</target>
        </trans-unit>
        <trans-unit id="8218bd5d7a6649aa63226e5b622d4b8efad4dc34" translate="yes" xml:space="preserve">
          <source>For a one-dimensional array, accumulate produces results equivalent to:</source>
          <target state="translated">对于一维数组,累加产生的结果等同于。</target>
        </trans-unit>
        <trans-unit id="0424b9224931152a35a50c93d8cc0ece880de71a" translate="yes" xml:space="preserve">
          <source>For a one-sided t-test, how far out in the distribution does the t statistic appear?</source>
          <target state="translated">对于单边t检验,t统计量出现在分布的多远处?</target>
        </trans-unit>
        <trans-unit id="3911c3b2407712ae47f85ee3fb1ac557138ff00b" translate="yes" xml:space="preserve">
          <source>For a possible future loop selector with a different signature.</source>
          <target state="translated">对于未来可能出现的具有不同签名的循环选择器。</target>
        </trans-unit>
        <trans-unit id="c991a419f14da45f93fac679b2b79a552dc6a583" translate="yes" xml:space="preserve">
          <source>For a simple example, consider taking the sum of all elements in an array.</source>
          <target state="translated">举个简单的例子,考虑取一个数组中所有元素的和。</target>
        </trans-unit>
        <trans-unit id="65b58d63b284139c1918d1c4f188a0cdc07b3bf2" translate="yes" xml:space="preserve">
          <source>For advanced assignments, there is in general no guarantee for the iteration order. This means that if an element is set more than once, it is not possible to predict the final result.</source>
          <target state="translated">对于高级赋值,一般来说,迭代顺序是没有保证的。这意味着,如果一个元素被设置了不止一次,就不可能预测最终结果。</target>
        </trans-unit>
        <trans-unit id="d08105fb315fdfa97977e494fc0f07ee6275d676" translate="yes" xml:space="preserve">
          <source>For all of these macros &lt;em&gt;arr&lt;/em&gt; must be an instance of a (subclass of) &lt;a href=&quot;c-api.types-and-structures#c.PyArray_Type&quot;&gt;&lt;code&gt;PyArray_Type&lt;/code&gt;&lt;/a&gt;, but no checking is done.</source>
          <target state="translated">对于所有这些宏，&lt;em&gt;arr&lt;/em&gt;必须是&lt;a href=&quot;c-api.types-and-structures#c.PyArray_Type&quot;&gt; &lt;code&gt;PyArray_Type&lt;/code&gt; &lt;/a&gt;（的子类）的实例，但不进行检查。</target>
        </trans-unit>
        <trans-unit id="e1f0a94de943c1efcc57e0ced39bb6353a416723" translate="yes" xml:space="preserve">
          <source>For all of these macros &lt;em&gt;arr&lt;/em&gt; must be an instance of a (subclass of) &lt;a href=&quot;types-and-structures#c.PyArray_Type&quot;&gt;&lt;code&gt;PyArray_Type&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于所有这些宏，&lt;em&gt;arr&lt;/em&gt;必须是&lt;a href=&quot;types-and-structures#c.PyArray_Type&quot;&gt; &lt;code&gt;PyArray_Type&lt;/code&gt; &lt;/a&gt;（的子类）的实例。</target>
        </trans-unit>
        <trans-unit id="24c98e7efdd0450f6d403ff7e88bf2f5b1a932b5" translate="yes" xml:space="preserve">
          <source>For all-NaN slices or slices with zero degrees of freedom, NaN is returned and a &lt;code&gt;RuntimeWarning&lt;/code&gt; is raised.</source>
          <target state="translated">对于全NaN切片或自由度为零的切片，将返回NaN并引发 &lt;code&gt;RuntimeWarning&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b523336c8d394d1599c127fd9600cfe28ac8e406" translate="yes" xml:space="preserve">
          <source>For all-NaN slices, NaN is returned and a &lt;code&gt;RuntimeWarning&lt;/code&gt; is raised.</source>
          <target state="translated">对于所有NaN片，将返回NaN并引发 &lt;code&gt;RuntimeWarning&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cdcb9c3fa272c68c7dc5e676247f2291a44c1673" translate="yes" xml:space="preserve">
          <source>For an accompanying example, see &lt;a href=&quot;#example&quot;&gt;example.py&lt;/a&gt;.</source>
          <target state="translated">有关示例，请参见&lt;a href=&quot;#example&quot;&gt;example.py&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b1bbf030efb52ebb2db7a903c9ad2ca87ea6a57" translate="yes" xml:space="preserve">
          <source>For an arccos() that returns &lt;code&gt;NAN&lt;/code&gt; when real &lt;code&gt;x&lt;/code&gt; is not in the interval &lt;code&gt;[-1,1]&lt;/code&gt;, use &lt;a href=&quot;numpy.arccos#numpy.arccos&quot;&gt;&lt;code&gt;numpy.arccos&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于当实数 &lt;code&gt;x&lt;/code&gt; 不在 &lt;code&gt;[-1,1]&lt;/code&gt; 区间时返回 &lt;code&gt;NAN&lt;/code&gt; 的arccos（），请使用&lt;a href=&quot;numpy.arccos#numpy.arccos&quot;&gt; &lt;code&gt;numpy.arccos&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="28dbf3891d965be0dd027e5198aef3d68b36d0eb" translate="yes" xml:space="preserve">
          <source>For an arcsin() that returns &lt;code&gt;NAN&lt;/code&gt; when real &lt;code&gt;x&lt;/code&gt; is not in the interval &lt;code&gt;[-1,1]&lt;/code&gt;, use &lt;a href=&quot;numpy.arcsin#numpy.arcsin&quot;&gt;&lt;code&gt;numpy.arcsin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于当实数 &lt;code&gt;x&lt;/code&gt; 不在 &lt;code&gt;[-1,1]&lt;/code&gt; 区间时返回 &lt;code&gt;NAN&lt;/code&gt; 的arcsin（），请使用&lt;a href=&quot;numpy.arcsin#numpy.arcsin&quot;&gt; &lt;code&gt;numpy.arcsin&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="715a39a94a66dfb176679504297f4cbe2940279b" translate="yes" xml:space="preserve">
          <source>For an arctanh() that returns &lt;code&gt;NAN&lt;/code&gt; when real &lt;code&gt;x&lt;/code&gt; is not in the interval &lt;code&gt;(-1,1)&lt;/code&gt;, use &lt;a href=&quot;numpy.arctanh#numpy.arctanh&quot;&gt;&lt;code&gt;numpy.arctanh&lt;/code&gt;&lt;/a&gt; (this latter, however, does return +/-inf for &lt;code&gt;x = +/-1&lt;/code&gt;).</source>
          <target state="translated">对于当实数 &lt;code&gt;x&lt;/code&gt; 不在区间 &lt;code&gt;(-1,1)&lt;/code&gt; 中时返回 &lt;code&gt;NAN&lt;/code&gt; 的arctanh（），请使用&lt;a href=&quot;numpy.arctanh#numpy.arctanh&quot;&gt; &lt;code&gt;numpy.arctanh&lt;/code&gt; &lt;/a&gt;（但是，后者确实会在 &lt;code&gt;x = +/-1&lt;/code&gt; 返回+/- inf ）。</target>
        </trans-unit>
        <trans-unit id="f544bc19358af783f5828a5e5053cd2cf057f05c" translate="yes" xml:space="preserve">
          <source>For an array &lt;code&gt;a&lt;/code&gt; with &lt;code&gt;a.ndim &amp;gt;= 2&lt;/code&gt;, the diagonal is the list of locations with indices &lt;code&gt;a[i, ..., i]&lt;/code&gt; all identical. This function modifies the input array in-place, it does not return a value.</source>
          <target state="translated">用于阵列 &lt;code&gt;a&lt;/code&gt; 与 &lt;code&gt;a.ndim &amp;gt;= 2&lt;/code&gt; ，对角是与索引位置列表 &lt;code&gt;a[i, ..., i]&lt;/code&gt; 全部相同。此函数就地修改输入数组，但不返回值。</target>
        </trans-unit>
        <trans-unit id="3aca4d8fb9611bde95449f6380639b52b005e231" translate="yes" xml:space="preserve">
          <source>For an array a with two axes, transpose(a) gives the matrix transpose.</source>
          <target state="translated">对于一个有两个轴的数组a,transpose(a)给出矩阵的转置。</target>
        </trans-unit>
        <trans-unit id="836b756b5d814f029c077f0578ba6c0e58a3c672" translate="yes" xml:space="preserve">
          <source>For an array with rank greater than 1, some of the padding of later axes is calculated from padding of previous axes. This is easiest to think about with a rank 2 array where the corners of the padded array are calculated by using padded values from the first axis.</source>
          <target state="translated">对于一个等级大于1的数组,后面轴的一些填充是由前面轴的填充计算的。这对于一个等级为2的数组来说是最容易想到的,在这个数组中,填充数组的角是通过使用第一个轴的填充值来计算的。</target>
        </trans-unit>
        <trans-unit id="6e96c6b0d98bc68cbd820a41e54b4b8abe37a921" translate="yes" xml:space="preserve">
          <source>For an even number of input points, &lt;code&gt;A[n//2]&lt;/code&gt; represents the sum of the values at the positive and negative Nyquist frequencies, as the two are aliased together. See &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt;&lt;code&gt;numpy.fft&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">对于偶数个输入点， &lt;code&gt;A[n//2]&lt;/code&gt; 代表正和负奈奎斯特频率下的值之和，因为两者是混叠的。有关详细信息，请参见&lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt; &lt;code&gt;numpy.fft&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="57743d92673c43f581b946774bebcebd154a8f73" translate="yes" xml:space="preserve">
          <source>For an example, see &lt;a href=&quot;numpy.lib.arrayterator#numpy.lib.Arrayterator&quot;&gt;&lt;code&gt;Arrayterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关示例，请参见&lt;a href=&quot;numpy.lib.arrayterator#numpy.lib.Arrayterator&quot;&gt; &lt;code&gt;Arrayterator&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c782854d522cc47b6ef0aa24c79c91b4278be4a" translate="yes" xml:space="preserve">
          <source>For an optional array argument, all its dimensions must be bounded.</source>
          <target state="translated">对于一个可选的数组参数,它的所有维度必须是有界的。</target>
        </trans-unit>
        <trans-unit id="6fe48c8702effa07c62fb464257e567d9ddc8002" translate="yes" xml:space="preserve">
          <source>For any index combination, including slicing and axis insertion, &lt;code&gt;a[indices]&lt;/code&gt; is the same as &lt;code&gt;a[np.index_exp[indices]]&lt;/code&gt; for any array &lt;code&gt;a&lt;/code&gt;. However, &lt;code&gt;np.index_exp[indices]&lt;/code&gt; can be used anywhere in Python code and returns a tuple of slice objects that can be used in the construction of complex index expressions.</source>
          <target state="translated">对于任何索引组合（包括切片和轴插入）， &lt;code&gt;a[indices]&lt;/code&gt; 与任何数组 &lt;code&gt;a&lt;/code&gt; 的 &lt;code&gt;a[np.index_exp[indices]]&lt;/code&gt; 相同。但是， &lt;code&gt;np.index_exp[indices]&lt;/code&gt; 可以在Python代码中的任何地方使用，并返回一个切片对象的元组，可用于构造复杂的索引表达式。</target>
        </trans-unit>
        <trans-unit id="befc2c9b3e9174a0e95946cae12589b779a18421" translate="yes" xml:space="preserve">
          <source>For array methods that take an &lt;code&gt;axis&lt;/code&gt; keyword, it defaults to None. If axis is None, then the array is treated as a 1-D array. Any other value for &lt;code&gt;axis&lt;/code&gt; represents the dimension along which the operation should proceed.</source>
          <target state="translated">对于采用 &lt;code&gt;axis&lt;/code&gt; 关键字的数组方法，默认为None。如果axis为None，则将该数组视为一维数组。 &lt;code&gt;axis&lt;/code&gt; 任何其他值都表示应该进行操作的尺寸。</target>
        </trans-unit>
        <trans-unit id="ec5bdb26c08f7af1b31abb9fd2aadbeeef092f4f" translate="yes" xml:space="preserve">
          <source>For array methods that take an &lt;em&gt;axis&lt;/em&gt; keyword, it defaults to &lt;code&gt;None&lt;/code&gt;. If axis is &lt;em&gt;None&lt;/em&gt;, then the array is treated as a 1-D array. Any other value for &lt;em&gt;axis&lt;/em&gt; represents the dimension along which the operation should proceed.</source>
          <target state="translated">对于采用&lt;em&gt;axis&lt;/em&gt;关键字的数组方法，默认为 &lt;code&gt;None&lt;/code&gt; 。如果axis为&lt;em&gt;None&lt;/em&gt;，则将该数组视为一维数组。&lt;em&gt;轴的&lt;/em&gt;任何其他值都表示应该进行操作的尺寸。</target>
        </trans-unit>
        <trans-unit id="d57067c37de796c57ab86aba446833670680acd2" translate="yes" xml:space="preserve">
          <source>For array methods that take an &lt;em&gt;axis&lt;/em&gt; keyword, it defaults to &lt;em&gt;None&lt;/em&gt;. If axis is &lt;em&gt;None&lt;/em&gt;, then the array is treated as a 1-D array. Any other value for &lt;em&gt;axis&lt;/em&gt; represents the dimension along which the operation should proceed.</source>
          <target state="translated">对于采用&lt;em&gt;axis&lt;/em&gt;关键字的数组方法，默认为&lt;em&gt;None&lt;/em&gt;。如果axis为&lt;em&gt;None&lt;/em&gt;，则将该数组视为一维数组。&lt;em&gt;轴的&lt;/em&gt;任何其他值都表示应该进行操作的尺寸。</target>
        </trans-unit>
        <trans-unit id="dcba10981a70013794c3901be17ecdedebc27a1a" translate="yes" xml:space="preserve">
          <source>For backward compatibility and as a standard &amp;ldquo;container &amp;ldquo;class, the UserArray from Numeric has been brought over to NumPy and named &lt;a href=&quot;generated/numpy.lib.user_array.container#numpy.lib.user_array.container&quot;&gt;&lt;code&gt;numpy.lib.user_array.container&lt;/code&gt;&lt;/a&gt; The container class is a Python class whose self.array attribute is an ndarray. Multiple inheritance is probably easier with numpy.lib.user_array.container than with the ndarray itself and so it is included by default. It is not documented here beyond mentioning its existence because you are encouraged to use the ndarray class directly if you can.</source>
          <target state="translated">为了向后兼容并作为标准的&amp;ldquo;容器&amp;rdquo;类，已将Numeric的UserArray转移到NumPy，并将其命名为&lt;a href=&quot;generated/numpy.lib.user_array.container#numpy.lib.user_array.container&quot;&gt; &lt;code&gt;numpy.lib.user_array.container&lt;/code&gt; &lt;/a&gt;。容器类是Python类，其self.array属性是ndarray。使用numpy.lib.user_array.container可能比使用ndarray本身更容易进行多重继承，因此默认情况下将其包括在内。这里没有提及它的存在，因此没有记录在文档中，因为如果可以的话，建议您直接使用ndarray类。</target>
        </trans-unit>
        <trans-unit id="744029ca149005a975825793a2c75c6e9d0e08e3" translate="yes" xml:space="preserve">
          <source>For backward compatibility with Python 2 the &lt;code&gt;S&lt;/code&gt; and &lt;code&gt;a&lt;/code&gt; typestrings remain zero-terminated bytes and &lt;a href=&quot;arrays.scalars#numpy.string_&quot;&gt;&lt;code&gt;numpy.string_&lt;/code&gt;&lt;/a&gt; continues to alias &lt;a href=&quot;arrays.scalars#numpy.bytes_&quot;&gt;&lt;code&gt;numpy.bytes_&lt;/code&gt;&lt;/a&gt;. To use actual strings in Python 3 use &lt;code&gt;U&lt;/code&gt; or &lt;a href=&quot;arrays.scalars#numpy.str_&quot;&gt;&lt;code&gt;numpy.str_&lt;/code&gt;&lt;/a&gt;. For signed bytes that do not need zero-termination &lt;code&gt;b&lt;/code&gt; or &lt;code&gt;i1&lt;/code&gt; can be used.</source>
          <target state="translated">对于与Python 2的向后兼容性的 &lt;code&gt;S&lt;/code&gt; 和 &lt;code&gt;a&lt;/code&gt; typestrings保持零结尾字节和&lt;a href=&quot;arrays.scalars#numpy.string_&quot;&gt; &lt;code&gt;numpy.string_&lt;/code&gt; &lt;/a&gt;继续别名&lt;a href=&quot;arrays.scalars#numpy.bytes_&quot;&gt; &lt;code&gt;numpy.bytes_&lt;/code&gt; &lt;/a&gt;。要在Python 3中使用实际的字符串，请使用 &lt;code&gt;U&lt;/code&gt; 或&lt;a href=&quot;arrays.scalars#numpy.str_&quot;&gt; &lt;code&gt;numpy.str_&lt;/code&gt; &lt;/a&gt;。对于不需要零终止的带符号字节，可以使用 &lt;code&gt;b&lt;/code&gt; 或 &lt;code&gt;i1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1756e23a025872fd532e8ba6c08bb9a4085acd5e" translate="yes" xml:space="preserve">
          <source>For backward compatibility with Python 2 the &lt;code&gt;S&lt;/code&gt; and &lt;code&gt;a&lt;/code&gt; typestrings remain zero-terminated bytes and &lt;code&gt;np.string_&lt;/code&gt; continues to map to &lt;code&gt;np.bytes_&lt;/code&gt;. To use actual strings in Python 3 use &lt;code&gt;U&lt;/code&gt; or &lt;code&gt;np.unicode_&lt;/code&gt;. For signed bytes that do not need zero-termination &lt;code&gt;b&lt;/code&gt; or &lt;code&gt;i1&lt;/code&gt; can be used.</source>
          <target state="translated">对于与Python 2的向后兼容性 &lt;code&gt;S&lt;/code&gt; 和 &lt;code&gt;a&lt;/code&gt; typestrings保持零结尾字节和 &lt;code&gt;np.string_&lt;/code&gt; 继续映射到 &lt;code&gt;np.bytes_&lt;/code&gt; 。要在Python 3中使用实际的字符串，请使用 &lt;code&gt;U&lt;/code&gt; 或 &lt;code&gt;np.unicode_&lt;/code&gt; 。对于不需要零终止的带符号字节，可以使用 &lt;code&gt;b&lt;/code&gt; 或 &lt;code&gt;i1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0671395c42986a8a806aaa184ebf9d547a0731c6" translate="yes" xml:space="preserve">
          <source>For backward compatible legacy reasons, we cannot change this. See &lt;a href=&quot;index#random-quick-start&quot;&gt;Quick Start&lt;/a&gt;.</source>
          <target state="translated">出于向后兼容的遗留原因，我们无法更改此设置。请参阅&lt;a href=&quot;index#random-quick-start&quot;&gt;快速入门&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2f4c86851229c177d560fbdf1b8fb4dd2c3ff306" translate="yes" xml:space="preserve">
          <source>For backward compatible legacy reasons, we cannot change this. See &lt;code&gt;random-quick-start&lt;/code&gt;.</source>
          <target state="translated">出于向后兼容的遗留原因，我们无法更改此设置。请参阅 &lt;code&gt;random-quick-start&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c77dfb74768b5914a720e322bd9c4f4d3188beb4" translate="yes" xml:space="preserve">
          <source>For backwards compatibility, datetime64 still parses timezone offsets, which it handles by converting to UTC. However, the resulting datetime is timezone naive:</source>
          <target state="translated">为了向后兼容,datetime64仍然解析时区偏移,它通过转换为UTC来处理。然而,生成的日期时间是时区的。</target>
        </trans-unit>
        <trans-unit id="1c64f15e60882d9539499a036901b91bc24bc19f" translate="yes" xml:space="preserve">
          <source>For backwards compatibility, the form (str, array of 624 uints, int) is also accepted although it is missing some information about the cached Gaussian value: &lt;code&gt;state = ('MT19937', keys, pos)&lt;/code&gt;.</source>
          <target state="translated">为了向后兼容，尽管缺少有关缓存的高斯值的某些信息： &lt;code&gt;state = ('MT19937', keys, pos)&lt;/code&gt; 也可以接受格式（str，624 uints，int数组）。</target>
        </trans-unit>
        <trans-unit id="4eb2208bc27c7545536cb93635c9264ced09a6ad" translate="yes" xml:space="preserve">
          <source>For bandlimited interpolation of discrete-time signals, the ideal interpolation kernel is proportional to the sinc function.</source>
          <target state="translated">对于离散时间信号的带限插值,理想的插值核与sinc函数成正比。</target>
        </trans-unit>
        <trans-unit id="0640d05a7ef317b56adcd70bde409c84daf4b12d" translate="yes" xml:space="preserve">
          <source>For buffered loops, care must be taken to copy and cast data before the loop function is called because the underlying loop expects aligned data of the correct data-type (including byte-order). The buffered loop must handle this copying and casting prior to calling the loop function on chunks no greater than the user-specified bufsize.</source>
          <target state="translated">对于缓冲循环,在调用循环函数之前,必须注意复制和转换数据,因为底层循环需要正确数据类型(包括字节顺序)的对齐数据。缓冲循环必须在调用循环函数之前处理好数据的复制和投射,其块数不能大于用户指定的bufsize。</target>
        </trans-unit>
        <trans-unit id="cb4713bd95be47f513cc79d1a6764009b9a70f10" translate="yes" xml:space="preserve">
          <source>For building NumPy, you&amp;rsquo;ll need a recent version of Cython.</source>
          <target state="translated">为了构建NumPy，您需要最新版本的Cython。</target>
        </trans-unit>
        <trans-unit id="78ea569e34a0a0f36b8d0d5224e34f847b3cf085" translate="yes" xml:space="preserve">
          <source>For clarity it is useful to provide some examples of the type description and corresponding &lt;a href=&quot;#__array_interface__&quot;&gt;&lt;code&gt;__array_interface__&lt;/code&gt;&lt;/a&gt; &amp;lsquo;descr&amp;rsquo; entries. Thanks to Scott Gilbert for these examples:</source>
          <target state="translated">为了清楚起见，提供一些类型描述示例和相应的&lt;a href=&quot;#__array_interface__&quot;&gt; &lt;code&gt;__array_interface__&lt;/code&gt; &lt;/a&gt; 'descr'条目非常有用。感谢Scott Gilbert提供了以下示例：</target>
        </trans-unit>
        <trans-unit id="59d48df0acbcb87d68438ff4bcf04c859beab44c" translate="yes" xml:space="preserve">
          <source>For clarity it is useful to provide some examples of the type description and corresponding &lt;a href=&quot;#object.__array_interface__&quot;&gt;&lt;code&gt;__array_interface__&lt;/code&gt;&lt;/a&gt; &amp;lsquo;descr&amp;rsquo; entries. Thanks to Scott Gilbert for these examples:</source>
          <target state="translated">为了清楚起见，提供一些类型描述示例和相应的&lt;a href=&quot;#object.__array_interface__&quot;&gt; &lt;code&gt;__array_interface__&lt;/code&gt; &lt;/a&gt; 'descr'条目非常有用。感谢Scott Gilbert提供了以下示例：</target>
        </trans-unit>
        <trans-unit id="cf57e9a465ef336bb9e191a7bcc71c622dd7e36c" translate="yes" xml:space="preserve">
          <source>For clearly intentional breaches, report those to the Code of Conduct committee (see below). For possibly unintentional breaches, you may reply to the person and point out this code of conduct (either in public or in private, whatever is most appropriate). If you would prefer not to do that, please feel free to report to the Code of Conduct Committee directly, or ask the Committee for advice, in confidence.</source>
          <target state="translated">对于明显的故意违规行为,应向行为守则委员会报告(见下文)。对于可能是无意的违反行为,你可以回复此人,并指出本行为守则(可以公开或私下,无论哪种方式最合适)。如果你不愿意这样做,请随时直接向行为守则委员会报告,或向委员会秘密咨询。</target>
        </trans-unit>
        <trans-unit id="fa38704d039a01dbf3beb91b9abfe39ad94c5927" translate="yes" xml:space="preserve">
          <source>For code changes, at least one maintainer (i.e. someone with commit rights) should review and approve a pull request. If you are the first to review a PR and approve of the changes use the GitHub &lt;a href=&quot;https://help.github.com/articles/reviewing-changes-in-pull-requests/&quot;&gt;approve review&lt;/a&gt; tool to mark it as such. If a PR is straightforward, for example it&amp;rsquo;s a clearly correct bug fix, it can be merged straight away. If it&amp;rsquo;s more complex or changes public API, please leave it open for at least a couple of days so other maintainers get a chance to review.</source>
          <target state="translated">对于代码更改，至少一个维护者（即具有提交权限的人）应查看并批准请求请求。如果您是第一个审阅PR并批准更改的人，请使用GitHub&lt;a href=&quot;https://help.github.com/articles/reviewing-changes-in-pull-requests/&quot;&gt;审阅&lt;/a&gt;工具将其标记为。如果PR很简单，例如它是很明显的错误修复，则可以立即将其合并。如果它比较复杂或更改了公共API，请至少开放几天，以便其他维护者有机会进行审查。</target>
        </trans-unit>
        <trans-unit id="f79e4e860ac02f7665b97a2330e074b2889f9891" translate="yes" xml:space="preserve">
          <source>For comparison and general edification of the reader we provide a simple implementation of a C extension of logit that uses no numpy.</source>
          <target state="translated">为了便于比较和启发读者,我们提供了一个不使用numpy的logit的C语言扩展的简单实现。</target>
        </trans-unit>
        <trans-unit id="90d52548b7d82f8c08562b9cefe270c672ec6067" translate="yes" xml:space="preserve">
          <source>For comparison with the other methods to be discussed. Here is another example of a function that filters a two-dimensional array of double precision floating-point numbers using a fixed averaging filter. The advantage of using Fortran to index into multi-dimensional arrays should be clear from this example.</source>
          <target state="translated">用于与将要讨论的其他方法进行比较。下面是另一个使用固定平均过滤器过滤二维双精度浮点数组的函数的例子。从这个例子中可以看出使用Fortran向多维数组索引的优势。</target>
        </trans-unit>
        <trans-unit id="aefcdcec95bb0a9f49c3ea43d81c147b480f4a1a" translate="yes" xml:space="preserve">
          <source>For complete documentation of the types of floating-point exceptions and treatment options, see &lt;a href=&quot;numpy.seterr#numpy.seterr&quot;&gt;&lt;code&gt;seterr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关浮点异常类型和处理选项的完整文档，请参见&lt;a href=&quot;numpy.seterr#numpy.seterr&quot;&gt; &lt;code&gt;seterr&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f6638e7aa649639c70b61a262d3fcb528e530dcc" translate="yes" xml:space="preserve">
          <source>For completeness, we&amp;rsquo;ll also add the &amp;lsquo;external_loop&amp;rsquo; and &amp;lsquo;buffered&amp;rsquo; flags, as these are what you will typically want for performance reasons.</source>
          <target state="translated">为了完整起见，我们还将添加&amp;ldquo; external_loop&amp;rdquo;和&amp;ldquo; buffered&amp;rdquo;标志，因为出于性能原因通常需要这些标志。</target>
        </trans-unit>
        <trans-unit id="823eefe35591ae1ef0928dcf4115410e8d28b81a" translate="yes" xml:space="preserve">
          <source>For complex arguments, &lt;code&gt;x = a + ib&lt;/code&gt;, we can write</source>
          <target state="translated">对于复杂的参数 &lt;code&gt;x = a + ib&lt;/code&gt; ，我们可以写</target>
        </trans-unit>
        <trans-unit id="00d19b01697a76f9042f9abe787cb066622b4409" translate="yes" xml:space="preserve">
          <source>For complex dtypes, the above is applied to each of the real and imaginary components of &lt;code&gt;x&lt;/code&gt; separately.</source>
          <target state="translated">对于复杂的dtype，以上内容分别应用于 &lt;code&gt;x&lt;/code&gt; 的每个实部和虚部。</target>
        </trans-unit>
        <trans-unit id="7aabc240767fa8c38770aded9994dbfb9309fc85" translate="yes" xml:space="preserve">
          <source>For complex inputs, the &lt;a href=&quot;#numpy.sign&quot;&gt;&lt;code&gt;sign&lt;/code&gt;&lt;/a&gt; function returns &lt;code&gt;sign(x.real) + 0j if x.real != 0 else sign(x.imag) + 0j&lt;/code&gt;.</source>
          <target state="translated">对于复杂输入， &lt;code&gt;sign(x.real) + 0j if x.real != 0 else sign(x.imag) + 0j&lt;/code&gt; ，则&lt;a href=&quot;#numpy.sign&quot;&gt; &lt;code&gt;sign&lt;/code&gt; &lt;/a&gt;函数返回sign（x.real）+ 0j，否则sign（x.imag）+ 0j。</target>
        </trans-unit>
        <trans-unit id="37a57514466afa09fc7538317ff0a405ada2d56e" translate="yes" xml:space="preserve">
          <source>For complex-valued input, &lt;a href=&quot;#numpy.arccos&quot;&gt;&lt;code&gt;arccos&lt;/code&gt;&lt;/a&gt; is a complex analytic function that has branch cuts &lt;code&gt;[-inf, -1]&lt;/code&gt; and &lt;code&gt;[1, inf]&lt;/code&gt; and is continuous from above on the former and from below on the latter.</source>
          <target state="translated">对于复值输入，&lt;a href=&quot;#numpy.arccos&quot;&gt; &lt;code&gt;arccos&lt;/code&gt; &lt;/a&gt;是一个复杂的分析函数，具有分支切割 &lt;code&gt;[-inf, -1]&lt;/code&gt; 和 &lt;code&gt;[1, inf]&lt;/code&gt; 并且在前者上从上到下都是连续的。</target>
        </trans-unit>
        <trans-unit id="ff44215d073bf2342406439d430f9b3eb5cc308c" translate="yes" xml:space="preserve">
          <source>For complex-valued input, &lt;a href=&quot;#numpy.arccosh&quot;&gt;&lt;code&gt;arccosh&lt;/code&gt;&lt;/a&gt; is a complex analytical function that has a branch cut &lt;code&gt;[-inf, 1]&lt;/code&gt; and is continuous from above on it.</source>
          <target state="translated">对于复数值输入，&lt;a href=&quot;#numpy.arccosh&quot;&gt; &lt;code&gt;arccosh&lt;/code&gt; &lt;/a&gt;是一个复杂的分析函数，具有分支切割 &lt;code&gt;[-inf, 1]&lt;/code&gt; 并从上方连续。</target>
        </trans-unit>
        <trans-unit id="64f377fde8ecd4efebbb4d5831dcc8bc678877a9" translate="yes" xml:space="preserve">
          <source>For complex-valued input, &lt;a href=&quot;#numpy.arcsin&quot;&gt;&lt;code&gt;arcsin&lt;/code&gt;&lt;/a&gt; is a complex analytic function that has, by convention, the branch cuts [-inf, -1] and [1, inf] and is continuous from above on the former and from below on the latter.</source>
          <target state="translated">对于复值输入，&lt;a href=&quot;#numpy.arcsin&quot;&gt; &lt;code&gt;arcsin&lt;/code&gt; &lt;/a&gt;是一个复杂的分析函数，按照惯例，该分支具有[-inf，-1]和[1，inf]分支，并且在前者上从上到下都是连续的。</target>
        </trans-unit>
        <trans-unit id="57038706eece9d133e1f92cf4c0e30653094f94f" translate="yes" xml:space="preserve">
          <source>For complex-valued input, &lt;a href=&quot;#numpy.arctan&quot;&gt;&lt;code&gt;arctan&lt;/code&gt;&lt;/a&gt; is a complex analytic function that has [&lt;code&gt;1j, infj&lt;/code&gt;] and [&lt;code&gt;-1j, -infj&lt;/code&gt;] as branch cuts, and is continuous from the left on the former and from the right on the latter.</source>
          <target state="translated">对于复数值输入，&lt;a href=&quot;#numpy.arctan&quot;&gt; &lt;code&gt;arctan&lt;/code&gt; &lt;/a&gt;是一个复杂分析函数，具有[ &lt;code&gt;1j, infj&lt;/code&gt; ]和[ &lt;code&gt;-1j, -infj&lt;/code&gt; ]作为分支切口，并且从左开始在前者和从右开始在后者连续。</target>
        </trans-unit>
        <trans-unit id="4c701e0e2c7136fbf8b3d11659944481b8208402" translate="yes" xml:space="preserve">
          <source>For complex-valued input, &lt;a href=&quot;#numpy.arctanh&quot;&gt;&lt;code&gt;arctanh&lt;/code&gt;&lt;/a&gt; is a complex analytical function that has branch cuts &lt;code&gt;[-1, -inf]&lt;/code&gt; and &lt;code&gt;[1, inf]&lt;/code&gt; and is continuous from above on the former and from below on the latter.</source>
          <target state="translated">对于复数值输入，&lt;a href=&quot;#numpy.arctanh&quot;&gt; &lt;code&gt;arctanh&lt;/code&gt; &lt;/a&gt;是一个复杂的分析函数，具有分支切割 &lt;code&gt;[-1, -inf]&lt;/code&gt; 和 &lt;code&gt;[1, inf]&lt;/code&gt; 并且在前者上从上到下都是连续的。</target>
        </trans-unit>
        <trans-unit id="159e5638a9f1467d3dd2785cf39347fd2d548d9f" translate="yes" xml:space="preserve">
          <source>For complex-valued input, &lt;a href=&quot;#numpy.log&quot;&gt;&lt;code&gt;log&lt;/code&gt;&lt;/a&gt; is a complex analytical function that has a branch cut &lt;code&gt;[-inf, 0]&lt;/code&gt; and is continuous from above on it. &lt;a href=&quot;#numpy.log&quot;&gt;&lt;code&gt;log&lt;/code&gt;&lt;/a&gt; handles the floating-point negative zero as an infinitesimal negative number, conforming to the C99 standard.</source>
          <target state="translated">对于复数值输入，&lt;a href=&quot;#numpy.log&quot;&gt; &lt;code&gt;log&lt;/code&gt; &lt;/a&gt;是一个复杂的分析函数，具有分支剪切 &lt;code&gt;[-inf, 0]&lt;/code&gt; 并从上方连续。&lt;a href=&quot;#numpy.log&quot;&gt; &lt;code&gt;log&lt;/code&gt; &lt;/a&gt;将浮点负零作为无穷小负数处理，符合C99标准。</target>
        </trans-unit>
        <trans-unit id="5ba7031abf7f62c036d84ca3e657ff0bbe63c9b4" translate="yes" xml:space="preserve">
          <source>For complex-valued input, &lt;a href=&quot;#numpy.log10&quot;&gt;&lt;code&gt;log10&lt;/code&gt;&lt;/a&gt; is a complex analytical function that has a branch cut &lt;code&gt;[-inf, 0]&lt;/code&gt; and is continuous from above on it. &lt;a href=&quot;#numpy.log10&quot;&gt;&lt;code&gt;log10&lt;/code&gt;&lt;/a&gt; handles the floating-point negative zero as an infinitesimal negative number, conforming to the C99 standard.</source>
          <target state="translated">对于复数值输入，&lt;a href=&quot;#numpy.log10&quot;&gt; &lt;code&gt;log10&lt;/code&gt; &lt;/a&gt;是一个复杂的分析函数，具有分支剪切 &lt;code&gt;[-inf, 0]&lt;/code&gt; 并从上方连续。&lt;a href=&quot;#numpy.log10&quot;&gt; &lt;code&gt;log10&lt;/code&gt; &lt;/a&gt;将浮点负零作为无穷负数处理，符合C99标准。</target>
        </trans-unit>
        <trans-unit id="1d03218ffbd2a27086f21639f1e5d2c57e1fdb96" translate="yes" xml:space="preserve">
          <source>For complex-valued input, &lt;a href=&quot;#numpy.log1p&quot;&gt;&lt;code&gt;log1p&lt;/code&gt;&lt;/a&gt; is a complex analytical function that has a branch cut &lt;code&gt;[-inf, -1]&lt;/code&gt; and is continuous from above on it. &lt;a href=&quot;#numpy.log1p&quot;&gt;&lt;code&gt;log1p&lt;/code&gt;&lt;/a&gt; handles the floating-point negative zero as an infinitesimal negative number, conforming to the C99 standard.</source>
          <target state="translated">对于复数值输入，&lt;a href=&quot;#numpy.log1p&quot;&gt; &lt;code&gt;log1p&lt;/code&gt; &lt;/a&gt;是一个复杂的分析函数，具有分支剪切 &lt;code&gt;[-inf, -1]&lt;/code&gt; 并从上方连续。&lt;a href=&quot;#numpy.log1p&quot;&gt; &lt;code&gt;log1p&lt;/code&gt; &lt;/a&gt;将浮点负零处理为无穷小负数，符合C99标准。</target>
        </trans-unit>
        <trans-unit id="714b21ba8fb7b3f93db097558f921f5a3cc7d7e7" translate="yes" xml:space="preserve">
          <source>For complex-valued input, &lt;a href=&quot;#numpy.log2&quot;&gt;&lt;code&gt;log2&lt;/code&gt;&lt;/a&gt; is a complex analytical function that has a branch cut &lt;code&gt;[-inf, 0]&lt;/code&gt; and is continuous from above on it. &lt;a href=&quot;#numpy.log2&quot;&gt;&lt;code&gt;log2&lt;/code&gt;&lt;/a&gt; handles the floating-point negative zero as an infinitesimal negative number, conforming to the C99 standard.</source>
          <target state="translated">对于复数值输入，&lt;a href=&quot;#numpy.log2&quot;&gt; &lt;code&gt;log2&lt;/code&gt; &lt;/a&gt;是一个复杂的分析函数，具有分支剪切 &lt;code&gt;[-inf, 0]&lt;/code&gt; 并从上方连续。&lt;a href=&quot;#numpy.log2&quot;&gt; &lt;code&gt;log2&lt;/code&gt; &lt;/a&gt;将浮点负零作为无穷小负数处理，符合C99标准。</target>
        </trans-unit>
        <trans-unit id="a557bc2da4dcaaf761d30f4619e8e0d4a2f4e8f4" translate="yes" xml:space="preserve">
          <source>For complex-valued input, &lt;a href=&quot;numpy.arccos#numpy.arccos&quot;&gt;&lt;code&gt;arccos&lt;/code&gt;&lt;/a&gt; is a complex analytical function that has branch cuts &lt;code&gt;[1j, infj]&lt;/code&gt; and &lt;code&gt;[-1j, -infj]&lt;/code&gt; and is continuous from the right on the former and from the left on the latter.</source>
          <target state="translated">对于复数值输入，&lt;a href=&quot;numpy.arccos#numpy.arccos&quot;&gt; &lt;code&gt;arccos&lt;/code&gt; &lt;/a&gt;是一个复杂的分析函数，具有分支切割 &lt;code&gt;[1j, infj]&lt;/code&gt; 和 &lt;code&gt;[-1j, -infj]&lt;/code&gt; 并且在右上连续，在左上连续。</target>
        </trans-unit>
        <trans-unit id="3c5f909f0d078490d8b615f107e16ec3bc3a188b" translate="yes" xml:space="preserve">
          <source>For computing the ULP difference, this API does not differentiate between various representations of NAN (ULP difference between 0x7fc00000 and 0xffc00000 is zero).</source>
          <target state="translated">对于计算ULP差值,该API不区分NAN的各种表示方式(0x7fc00000和0xffc00000之间的ULP差值为零)。</target>
        </trans-unit>
        <trans-unit id="a35bd636b338ea1ca16af81a4f3e7ff1a1051ba2" translate="yes" xml:space="preserve">
          <source>For consistency we also pluralize &lt;em&gt;matrix&lt;/em&gt; as &lt;em&gt;matrices&lt;/em&gt;.</source>
          <target state="translated">为了保持一致性，我们还将&lt;em&gt;矩阵&lt;/em&gt;复数为&lt;em&gt;矩阵&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e81428e8e562739a6cb03d81d7a49ece97991e48" translate="yes" xml:space="preserve">
          <source>For consistency with histogram, an array of pre-computed bins is passed through unmodified:</source>
          <target state="translated">为了与直方图保持一致,一个预先计算的仓数组不加修改地通过。</target>
        </trans-unit>
        <trans-unit id="67034429080fa2a52e171f0ea36b0dba67f26dbe" translate="yes" xml:space="preserve">
          <source>For convenience and backward compatibility, a single &lt;a href=&quot;legacy#numpy.random.RandomState&quot;&gt;&lt;code&gt;RandomState&lt;/code&gt;&lt;/a&gt; instance&amp;rsquo;s methods are imported into the numpy.random namespace, see &lt;a href=&quot;legacy#legacy&quot;&gt;Legacy Random Generation&lt;/a&gt; for the complete list.</source>
          <target state="translated">为了方便和向后兼容，将单个&lt;a href=&quot;legacy#numpy.random.RandomState&quot;&gt; &lt;code&gt;RandomState&lt;/code&gt; &lt;/a&gt;实例的方法导入numpy.random命名空间，有关完整列表，请参见&lt;a href=&quot;legacy#legacy&quot;&gt;旧式随机生成&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eed4c585fafb6282979d170d7fc49312f2240470" translate="yes" xml:space="preserve">
          <source>For convenience and backward compatibility, a single &lt;a href=&quot;legacy#numpy.random.mtrand.RandomState&quot;&gt;&lt;code&gt;RandomState&lt;/code&gt;&lt;/a&gt; instance&amp;rsquo;s methods are imported into the numpy.random namespace, see &lt;a href=&quot;legacy#legacy&quot;&gt;Legacy Random Generation&lt;/a&gt; for the complete list.</source>
          <target state="translated">为了方便和向后兼容，将单个&lt;a href=&quot;legacy#numpy.random.mtrand.RandomState&quot;&gt; &lt;code&gt;RandomState&lt;/code&gt; &lt;/a&gt;实例的方法导入numpy.random命名空间，有关完整列表，请参见&lt;a href=&quot;legacy#legacy&quot;&gt;传统随机生成&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c5ee4a5df11f7bfc54cc9624f04508c5055fa329" translate="yes" xml:space="preserve">
          <source>For convenience, dtype-like objects are allowed too:</source>
          <target state="translated">为了方便起见,也允许使用dtype类对象。</target>
        </trans-unit>
        <trans-unit id="d4b499147b3255a0848424ec58891503672c9043" translate="yes" xml:space="preserve">
          <source>For convenience, viewing an ndarray as type &lt;a href=&quot;../reference/generated/numpy.recarray#numpy.recarray&quot;&gt;&lt;code&gt;numpy.recarray&lt;/code&gt;&lt;/a&gt; will automatically convert to &lt;a href=&quot;../reference/generated/numpy.record#numpy.record&quot;&gt;&lt;code&gt;numpy.record&lt;/code&gt;&lt;/a&gt; datatype, so the dtype can be left out of the view:</source>
          <target state="translated">为了方便起见，在查看ndarray类型&lt;a href=&quot;../reference/generated/numpy.recarray#numpy.recarray&quot;&gt; &lt;code&gt;numpy.recarray&lt;/code&gt; &lt;/a&gt;将自动转换到&lt;a href=&quot;../reference/generated/numpy.record#numpy.record&quot;&gt; &lt;code&gt;numpy.record&lt;/code&gt; &lt;/a&gt;数据类型，因此，D型细胞可在视图的被排除在外：</target>
        </trans-unit>
        <trans-unit id="5d0d8cd3e47bac7d4c34c5ffeca248e53bd90070" translate="yes" xml:space="preserve">
          <source>For convenience, viewing an ndarray as type &lt;code&gt;np.recarray&lt;/code&gt; will automatically convert to &lt;code&gt;np.record&lt;/code&gt; datatype, so the dtype can be left out of the view:</source>
          <target state="translated">为了方便起见，在查看ndarray类型 &lt;code&gt;np.recarray&lt;/code&gt; 将自动转换到 &lt;code&gt;np.record&lt;/code&gt; 数据类型，因此，D型细胞可在视图的被排除在外：</target>
        </trans-unit>
        <trans-unit id="96d19661d614c330e3a9e7e16801d7b1d4abdea7" translate="yes" xml:space="preserve">
          <source>For data types that are always the same size (such as long), this holds the size of the data type. For flexible data types where different arrays can have a different elementsize, this should be 0.</source>
          <target state="translated">对于那些总是相同大小的数据类型(如long),这个值是数据类型的大小,对于灵活的数据类型,不同的数组可以有不同的元素大小,这个值应该是0。对于灵活的数据类型,不同的数组可以有不同的元素大小,这个值应该是0。</target>
        </trans-unit>
        <trans-unit id="88871b72e212455bd0a3305f24c658a9086cd65b" translate="yes" xml:space="preserve">
          <source>For data types that describe sub-arrays:</source>
          <target state="translated">对于描述子数组的数据类型。</target>
        </trans-unit>
        <trans-unit id="665e908efd043172f3a61d4025a859ec2c83aba8" translate="yes" xml:space="preserve">
          <source>For definition of the DFT and conventions used.</source>
          <target state="translated">对于DFT的定义和使用的惯例。</target>
        </trans-unit>
        <trans-unit id="ab3224da37c952c7ee78825693d56ab41a6cbfcf" translate="yes" xml:space="preserve">
          <source>For detailed info on testing, see &lt;a href=&quot;../dev/development_environment#testing-builds&quot;&gt;Testing builds&lt;/a&gt;</source>
          <target state="translated">有关测试的详细信息，请参阅&lt;a href=&quot;../dev/development_environment#testing-builds&quot;&gt;测试版本&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec4950c0b9d4572d83c373887e2dc02d9903faa1" translate="yes" xml:space="preserve">
          <source>For detailed info on testing, see &lt;a href=&quot;../dev/development_environment#testing-builds&quot;&gt;Testing builds&lt;/a&gt;.</source>
          <target state="translated">有关测试的详细信息，请参阅&lt;a href=&quot;../dev/development_environment#testing-builds&quot;&gt;测试版本&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a502ff1fedca44e300edcd6fc726294bd80e3a6" translate="yes" xml:space="preserve">
          <source>For details, see &lt;a href=&quot;reference/arrays.indexing#combining-advanced-and-basic-indexing&quot;&gt;Combining advanced and basic indexing&lt;/a&gt;.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;reference/arrays.indexing#combining-advanced-and-basic-indexing&quot;&gt;结合高级索引和基本索引&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6701df0a65502fea701e9eaccf014eb1fd8330e1" translate="yes" xml:space="preserve">
          <source>For details, see &lt;a href=&quot;reference/generated/numpy.ndarray.strides&quot;&gt;numpy.ndarray.strides&lt;/a&gt;.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;reference/generated/numpy.ndarray.strides&quot;&gt;numpy.ndarray.strides&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ee181d2e905ec980587d0f6f8baa5bee416075ef" translate="yes" xml:space="preserve">
          <source>For details, see &lt;a href=&quot;reference/maskedarray&quot;&gt;Masked arrays.&lt;/a&gt;</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;reference/maskedarray&quot;&gt;蒙版数组。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb5f8bb3afe673736236ecca5864cdc9f7fc37e1" translate="yes" xml:space="preserve">
          <source>For developers of NumPy: do not instantiate this at the module level. The initial calculation of these parameters is expensive and negatively impacts import times. These objects are cached, so calling &lt;code&gt;finfo()&lt;/code&gt; repeatedly inside your functions is not a problem.</source>
          <target state="translated">对于NumPy的开发人员：不要在模块级别实例化此代码。这些参数的初始计算非常昂贵，并且会对导入时间产生负面影响。这些对象已缓存，因此在函数内重复调用 &lt;code&gt;finfo()&lt;/code&gt; 不会有问题。</target>
        </trans-unit>
        <trans-unit id="83549bc3ff37e9fd5f340310941a033ae7a10e48" translate="yes" xml:space="preserve">
          <source>For development, you can set up an in-place build so that changes made to &lt;code&gt;.py&lt;/code&gt; files have effect without rebuild. First, run:</source>
          <target state="translated">对于开发，您可以设置就地构建，以便对 &lt;code&gt;.py&lt;/code&gt; 文件所做的更改无需重新构建即可生效。第一次运行：</target>
        </trans-unit>
        <trans-unit id="c58f9c7b61fa3d8a2763dc4a797daee41cc03eb8" translate="yes" xml:space="preserve">
          <source>For each distinct core dimension, a set of &lt;code&gt;UFUNC_CORE_DIM*&lt;/code&gt; flags</source>
          <target state="translated">对于每个不同的核心维度，一组 &lt;code&gt;UFUNC_CORE_DIM*&lt;/code&gt; 标志</target>
        </trans-unit>
        <trans-unit id="396b05c439db2438a9382de672b6fa8e95c31893" translate="yes" xml:space="preserve">
          <source>For each distinct core dimension, the possible &lt;a href=&quot;c-api.generalized-ufuncs#frozen&quot;&gt;frozen&lt;/a&gt; size if &lt;code&gt;UFUNC_CORE_DIM_SIZE_INFERRED&lt;/code&gt; is 0</source>
          <target state="translated">对于每个不同的核心尺寸，如果 &lt;code&gt;UFUNC_CORE_DIM_SIZE_INFERRED&lt;/code&gt; 为0 ，则可能的&lt;a href=&quot;c-api.generalized-ufuncs#frozen&quot;&gt;冻结&lt;/a&gt;大小为0</target>
        </trans-unit>
        <trans-unit id="8b65708e0333bae4a0da4450d76b725e5999f9f5" translate="yes" xml:space="preserve">
          <source>For each distinct core dimension, the possible &lt;a href=&quot;generalized-ufuncs#frozen&quot;&gt;frozen&lt;/a&gt; size if &lt;a href=&quot;#c.UFUNC_CORE_DIM_SIZE_INFERRED&quot;&gt;&lt;code&gt;UFUNC_CORE_DIM_SIZE_INFERRED&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">对于每个不同的核心尺寸，如果&lt;a href=&quot;#c.UFUNC_CORE_DIM_SIZE_INFERRED&quot;&gt; &lt;code&gt;UFUNC_CORE_DIM_SIZE_INFERRED&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;0&lt;/code&gt; ，则可能的&lt;a href=&quot;generalized-ufuncs#frozen&quot;&gt;冻结&lt;/a&gt;大小为0</target>
        </trans-unit>
        <trans-unit id="69d98b78325a9c10a5d66de529392752b9338931" translate="yes" xml:space="preserve">
          <source>For each distinct core dimension, the possible &lt;a href=&quot;generalized-ufuncs#frozen&quot;&gt;frozen&lt;/a&gt; size if &lt;code&gt;UFUNC_CORE_DIM_SIZE_INFERRED&lt;/code&gt; is 0</source>
          <target state="translated">对于每个不同的核心尺寸，如果 &lt;code&gt;UFUNC_CORE_DIM_SIZE_INFERRED&lt;/code&gt; 为0 ，则可能的&lt;a href=&quot;generalized-ufuncs#frozen&quot;&gt;冻结&lt;/a&gt;大小为0</target>
        </trans-unit>
        <trans-unit id="eb98f2bacd6f2ddd2321b31d6e02518d57ef1a01" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;a&lt;/code&gt;, return a copy of the string where all characters occurring in the optional argument &lt;code&gt;deletechars&lt;/code&gt; are removed, and the remaining characters have been mapped through the given translation table.</source>
          <target state="translated">对于每一个元素 &lt;code&gt;a&lt;/code&gt; ，返回其中可选的参数中出现的所有字符的字符串拷贝 &lt;code&gt;deletechars&lt;/code&gt; 被删除，而剩余的字符已经通过给定的转换表映射。</target>
        </trans-unit>
        <trans-unit id="6fd82d55a1666ac371b70f835404bd2254f11112" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;a&lt;/code&gt;, return a copy of the string with all occurrences of substring &lt;code&gt;old&lt;/code&gt; replaced by &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="translated">对于每一个元素 &lt;code&gt;a&lt;/code&gt; ，返回字符串的副本串中出现的所有 &lt;code&gt;old&lt;/code&gt; 换成 &lt;code&gt;new&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a0072392849c4a29d135980cb1732127fb7c8293" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;a&lt;/code&gt;, return a copy with the leading and trailing characters removed.</source>
          <target state="translated">在每个元件 &lt;code&gt;a&lt;/code&gt; ，返回与该前缘和后字符的副本中删除。</target>
        </trans-unit>
        <trans-unit id="ce017fa2090bd21769500e23616f51df45b2cf16" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;a&lt;/code&gt;, return a copy with the leading characters removed.</source>
          <target state="translated">对于每一个元素 &lt;code&gt;a&lt;/code&gt; ，去除了主角返回副本。</target>
        </trans-unit>
        <trans-unit id="bcc8c5cf0a4ab8429da79ab635d524c5cd68a8b9" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;a&lt;/code&gt;, return a copy with the trailing characters removed.</source>
          <target state="translated">在每个元件 &lt;code&gt;a&lt;/code&gt; ，返回与除去尾部字符的副本。</target>
        </trans-unit>
        <trans-unit id="b48d2d67a82f24a073bc0fd48d1c7c812f1f1bea" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;a&lt;/code&gt;, return a list of the lines in the element, breaking at line boundaries.</source>
          <target state="translated">在每个元件 &lt;code&gt;a&lt;/code&gt; ，返回行的列表中的元素，在断裂线边界。</target>
        </trans-unit>
        <trans-unit id="d96129628d06f13e5afb8f18fe53cee0a045c865" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;a&lt;/code&gt;, return a list of the words in the string, using &lt;code&gt;sep&lt;/code&gt; as the delimiter string.</source>
          <target state="translated">在每个元件 &lt;code&gt;a&lt;/code&gt; ，返回的词的列表字符串中，使用 &lt;code&gt;sep&lt;/code&gt; 作为分隔符串。</target>
        </trans-unit>
        <trans-unit id="53321b75d28930691a06237aff36907b43cca790" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;a&lt;/code&gt;, return the highest index in the string where substring &lt;code&gt;sub&lt;/code&gt; is found, such that &lt;code&gt;sub&lt;/code&gt; is contained within [&lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;].</source>
          <target state="translated">在每个元件 &lt;code&gt;a&lt;/code&gt; ，在字符串中返回指数最高，其中子串 &lt;code&gt;sub&lt;/code&gt; 被发现，使得 &lt;code&gt;sub&lt;/code&gt; 包含[内 &lt;code&gt;start&lt;/code&gt; ， &lt;code&gt;end&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e01fe9cacbc57867bf7b4b4ec2f69fefe5c4a037" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;a&lt;/code&gt;, split the element as the first occurrence of &lt;code&gt;sep&lt;/code&gt;, and return 3 strings containing the part before the separator, the separator itself, and the part after the separator. If the separator is not found, return 3 strings containing the string itself, followed by two empty strings.</source>
          <target state="translated">在每个元件 &lt;code&gt;a&lt;/code&gt; ，分割元素作为第一次出现的 &lt;code&gt;sep&lt;/code&gt; ，和隔板，隔板本身，和隔板后的部分之前返回包含部分3个字符串。如果找不到分隔符，则返回3个包含字符串本身的字符串，然后返回两个空字符串。</target>
        </trans-unit>
        <trans-unit id="7288d8c0ac4641f453c7b03f986690cbb92d91ab" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;a&lt;/code&gt;, split the element as the last occurrence of &lt;code&gt;sep&lt;/code&gt;, and return 3 strings containing the part before the separator, the separator itself, and the part after the separator. If the separator is not found, return 3 strings containing the string itself, followed by two empty strings.</source>
          <target state="translated">在每个元件 &lt;code&gt;a&lt;/code&gt; ，分割元素作为最后一次出现 &lt;code&gt;sep&lt;/code&gt; ，和隔板，隔板本身，和隔板后的部分之前返回包含部分3个字符串。如果找不到分隔符，则返回3个包含字符串本身的字符串，然后返回两个空字符串。</target>
        </trans-unit>
        <trans-unit id="b2be6980f0e55faed04690c7996e6d49756d7224" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return True if there are only decimal characters in the element.</source>
          <target state="translated">对于 &lt;code&gt;self&lt;/code&gt; 中的每个元素，如果元素中只有十进制字符，则返回True。</target>
        </trans-unit>
        <trans-unit id="b59ff6bcceb7225ac9cadb07484ec0465abb9c2a" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return True if there are only numeric characters in the element.</source>
          <target state="translated">对于 &lt;code&gt;self&lt;/code&gt; 中的每个元素，如果元素中仅包含数字字符，则返回True。</target>
        </trans-unit>
        <trans-unit id="9058afe727e5f02cb1c2a82daba2773477e47ab5" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return a copy of the string where all characters occurring in the optional argument &lt;code&gt;deletechars&lt;/code&gt; are removed, and the remaining characters have been mapped through the given translation table.</source>
          <target state="translated">对于 &lt;code&gt;self&lt;/code&gt; 中的每个元素，返回字符串的副本，其中删除了在可选参数 &lt;code&gt;deletechars&lt;/code&gt; 中出现的所有字符，并且其余字符已通过给定的转换表进行映射。</target>
        </trans-unit>
        <trans-unit id="ef526a1c4bb908663ee9a7ed64b48415ce75d7c1" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return a copy of the string with all occurrences of substring &lt;code&gt;old&lt;/code&gt; replaced by &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="translated">对于每一个元素 &lt;code&gt;self&lt;/code&gt; ，返回字符串的副本串中出现的所有 &lt;code&gt;old&lt;/code&gt; 换成 &lt;code&gt;new&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e51c79c7e0159f28fc2312e8504acece61be2e0" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return a copy of the string with uppercase characters converted to lowercase and vice versa.</source>
          <target state="translated">对于 &lt;code&gt;self&lt;/code&gt; 中的每个元素，返回字符串的副本，将大写字符转换为小写，反之亦然。</target>
        </trans-unit>
        <trans-unit id="563e89160eca98fee13c4e654d4638943cb7ede0" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return a copy with the leading and trailing characters removed.</source>
          <target state="translated">对于 &lt;code&gt;self&lt;/code&gt; 中的每个元素，返回一个删除前导和尾随字符的副本。</target>
        </trans-unit>
        <trans-unit id="a46f8951acf83f33ee77a16371dbcf5fcea54c99" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return a copy with the leading characters removed.</source>
          <target state="translated">对于 &lt;code&gt;self&lt;/code&gt; 中的每个元素，返回一个删除了前导字符的副本。</target>
        </trans-unit>
        <trans-unit id="c528552cf6666391ba164c6c98e3136c037ac0d0" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return a copy with the trailing characters removed.</source>
          <target state="translated">对于 &lt;code&gt;self&lt;/code&gt; 中的每个元素，返回一个删除了结尾字符的副本。</target>
        </trans-unit>
        <trans-unit id="f3c87a7be827172789e8630db0faa9be334e4260" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return a list of the lines in the element, breaking at line boundaries.</source>
          <target state="translated">对于 &lt;code&gt;self&lt;/code&gt; 中的每个元素，返回该元素中的行的列表，并在行边界处中断。</target>
        </trans-unit>
        <trans-unit id="3ca0a78fe28a9ed4242353e9fcde6e632b8bffa9" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return a list of the words in the string, using &lt;code&gt;sep&lt;/code&gt; as the delimiter string.</source>
          <target state="translated">对于 &lt;code&gt;self&lt;/code&gt; 中的每个元素，使用 &lt;code&gt;sep&lt;/code&gt; 作为分隔符字符串，返回字符串中单词的列表。</target>
        </trans-unit>
        <trans-unit id="41b923cc154e9a0efebee6038be59b5d66a9e904" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return a titlecased version of the string: words start with uppercase characters, all remaining cased characters are lowercase.</source>
          <target state="translated">对于 &lt;code&gt;self&lt;/code&gt; 中的每个元素，返回字符串的带标题大写的版本：单词以大写字母开头，所有其余的大写字母均为小写。</target>
        </trans-unit>
        <trans-unit id="a4fdbaa4039cefb583d1742ab7a44dc37da553da" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return the highest index in the string where substring &lt;code&gt;sub&lt;/code&gt; is found, such that &lt;code&gt;sub&lt;/code&gt; is contained within [&lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;].</source>
          <target state="translated">对于 &lt;code&gt;self&lt;/code&gt; 中的每个元素，返回在找到substring &lt;code&gt;sub&lt;/code&gt; 的字符串中的最高索引，这样 &lt;code&gt;sub&lt;/code&gt; 包含在[ &lt;code&gt;start&lt;/code&gt; ， &lt;code&gt;end&lt;/code&gt; ]中。</target>
        </trans-unit>
        <trans-unit id="66977f41b0aa64aabf235a79a75dcf6b6472f8b1" translate="yes" xml:space="preserve">
          <source>For each element, return True if there are only decimal characters in the element.</source>
          <target state="translated">对于每个元素,如果元素中只有十进制字符,则返回True。</target>
        </trans-unit>
        <trans-unit id="b1bf891f44f7ba1a69d9acfd1c67a586b04384f4" translate="yes" xml:space="preserve">
          <source>For each element, return True if there are only numeric characters in the element.</source>
          <target state="translated">对于每个元素,如果元素中只有数字字符,则返回True。</target>
        </trans-unit>
        <trans-unit id="de1f34aa0e69ee353932bddbc1b5178f2575078b" translate="yes" xml:space="preserve">
          <source>For each element, return the lowest index in the string where substring &lt;code&gt;sub&lt;/code&gt; is found, such that &lt;code&gt;sub&lt;/code&gt; is contained in the range [&lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;].</source>
          <target state="translated">对于每个元素，返回找到子字符串 &lt;code&gt;sub&lt;/code&gt; 的字符串中的最低索引，以使 &lt;code&gt;sub&lt;/code&gt; 包含在[ &lt;code&gt;start&lt;/code&gt; ， &lt;code&gt;end&lt;/code&gt; ] 范围内。</target>
        </trans-unit>
        <trans-unit id="2d0516f761ea835ae249621609400fab8f420640" translate="yes" xml:space="preserve">
          <source>For each element, return the lowest index in the string where substring &lt;code&gt;sub&lt;/code&gt; is found.</source>
          <target state="translated">对于每个元素，返回找到子字符串 &lt;code&gt;sub&lt;/code&gt; 的字符串中的最低索引。</target>
        </trans-unit>
        <trans-unit id="1a1da4bbdbc0f0985083d16493c494b0cdbca1db" translate="yes" xml:space="preserve">
          <source>For efficient memory alignment, &lt;code&gt;np.longdouble&lt;/code&gt; is usually stored padded with zero bits, either to 96 or 128 bits. Which is more efficient depends on hardware and development environment; typically on 32-bit systems they are padded to 96 bits, while on 64-bit systems they are typically padded to 128 bits. &lt;code&gt;np.longdouble&lt;/code&gt; is padded to the system default; &lt;code&gt;np.float96&lt;/code&gt; and &lt;code&gt;np.float128&lt;/code&gt; are provided for users who want specific padding. In spite of the names, &lt;code&gt;np.float96&lt;/code&gt; and &lt;code&gt;np.float128&lt;/code&gt; provide only as much precision as &lt;code&gt;np.longdouble&lt;/code&gt;, that is, 80 bits on most x86 machines and 64 bits in standard Windows builds.</source>
          <target state="translated">为了有效地进行内存对齐，通常将 &lt;code&gt;np.longdouble&lt;/code&gt; 填充为零或96位或128位。哪个更有效取决于硬件和开发环境；通常在32位系统上，它们被填充为96位，而在64位系统上，它们通常被填充为128位。 &lt;code&gt;np.longdouble&lt;/code&gt; 被填充为系统默认值；为需要特定填充的用户提供了 &lt;code&gt;np.float96&lt;/code&gt; 和 &lt;code&gt;np.float128&lt;/code&gt; 。尽管有名称， &lt;code&gt;np.float96&lt;/code&gt; 和 &lt;code&gt;np.float128&lt;/code&gt; 的精度仅与 &lt;code&gt;np.longdouble&lt;/code&gt; 相同，即，大多数x86机器上为80位，标准Windows版本中为64位。</target>
        </trans-unit>
        <trans-unit id="42afabee0f54dc6a738be8285f1c8adb1a389c2c" translate="yes" xml:space="preserve">
          <source>For events with an expected separation</source>
          <target state="translated">对于预期离职的事件</target>
        </trans-unit>
        <trans-unit id="69f5ea3c2094e2e0d29f615dbd5f1be3db9e9635" translate="yes" xml:space="preserve">
          <source>For example &lt;a href=&quot;arrays.indexing#arrays-indexing&quot;&gt;slicing&lt;/a&gt; can produce views of the array:</source>
          <target state="translated">例如，&lt;a href=&quot;arrays.indexing#arrays-indexing&quot;&gt;切片&lt;/a&gt;可以产生数组的视图：</target>
        </trans-unit>
        <trans-unit id="6ba61c52342c8ca357f9b025f520786b1e36f952" translate="yes" xml:space="preserve">
          <source>For example suppose the source directory contains fun/foo.dat and fun/bar/car.dat:</source>
          <target state="translated">例如,假设源目录中包含fun/foo.dat和fun/bar/car.dat。</target>
        </trans-unit>
        <trans-unit id="1b62eba4a89119c28458eb16bfa619aca8aa8969" translate="yes" xml:space="preserve">
          <source>For example you might make a startup script that looks like this (Note: this is just an example, not a statement of &amp;ldquo;best practices&amp;rdquo;):</source>
          <target state="translated">例如，您可以制作一个如下所示的启动脚本（注意：这仅是示例，并非对&amp;ldquo;最佳实践&amp;rdquo;的陈述）：</target>
        </trans-unit>
        <trans-unit id="290de80d5fc36b01dd67ceeb09359da7bf8e0291" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;bit_generators/mt19937#numpy.random.MT19937&quot;&gt;&lt;code&gt;MT19937&lt;/code&gt;&lt;/a&gt; has a state consisting of 624 &lt;code&gt;uint32&lt;/code&gt; integers. A naive way to take a 32-bit integer seed would be to just set the last element of the state to the 32-bit seed and leave the rest 0s. This is a valid state for &lt;a href=&quot;bit_generators/mt19937#numpy.random.MT19937&quot;&gt;&lt;code&gt;MT19937&lt;/code&gt;&lt;/a&gt;, but not a good one. The Mersenne Twister algorithm &lt;a href=&quot;http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/emt19937ar.html&quot;&gt;suffers if there are too many 0s&lt;/a&gt;. Similarly, two adjacent 32-bit integer seeds (i.e. &lt;code&gt;12345&lt;/code&gt; and &lt;code&gt;12346&lt;/code&gt;) would produce very similar streams.</source>
          <target state="translated">例如，&lt;a href=&quot;bit_generators/mt19937#numpy.random.MT19937&quot;&gt; &lt;code&gt;MT19937&lt;/code&gt; &lt;/a&gt;的状态由624个 &lt;code&gt;uint32&lt;/code&gt; 整数组成。一种简单的获取32位整数种子的方法是将状态的最后一个元素设置为32位种子，其余的保留为0。这是&lt;a href=&quot;bit_generators/mt19937#numpy.random.MT19937&quot;&gt; &lt;code&gt;MT19937&lt;/code&gt; &lt;/a&gt;的有效状态，但不是很好的状态。&lt;a href=&quot;http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/emt19937ar.html&quot;&gt;如果0太多，则&lt;/a&gt;Mersenne Twister算法会受苦。类似地，两个相邻的32位整数种子（即 &lt;code&gt;12345&lt;/code&gt; 和 &lt;code&gt;12346&lt;/code&gt; ）将产生非常相似的流。</target>
        </trans-unit>
        <trans-unit id="c528a73750dc2b0ea8c9a4908a64744d7d47416a" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;bit_generators/mt19937#numpy.random.mt19937.MT19937&quot;&gt;&lt;code&gt;MT19937&lt;/code&gt;&lt;/a&gt; has a state consisting of 624 &lt;code&gt;uint32&lt;/code&gt; integers. A naive way to take a 32-bit integer seed would be to just set the last element of the state to the 32-bit seed and leave the rest 0s. This is a valid state for &lt;a href=&quot;bit_generators/mt19937#numpy.random.mt19937.MT19937&quot;&gt;&lt;code&gt;MT19937&lt;/code&gt;&lt;/a&gt;, but not a good one. The Mersenne Twister algorithm &lt;a href=&quot;http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/emt19937ar.html&quot;&gt;suffers if there are too many 0s&lt;/a&gt;. Similarly, two adjacent 32-bit integer seeds (i.e. &lt;code&gt;12345&lt;/code&gt; and &lt;code&gt;12346&lt;/code&gt;) would produce very similar streams.</source>
          <target state="translated">例如，&lt;a href=&quot;bit_generators/mt19937#numpy.random.mt19937.MT19937&quot;&gt; &lt;code&gt;MT19937&lt;/code&gt; &lt;/a&gt;的状态由624个 &lt;code&gt;uint32&lt;/code&gt; 整数组成。一种简单的获取32位整数种子的方法是将状态的最后一个元素设置为32位种子，其余的保留为0。这是&lt;a href=&quot;bit_generators/mt19937#numpy.random.mt19937.MT19937&quot;&gt; &lt;code&gt;MT19937&lt;/code&gt; &lt;/a&gt;的有效状态，但不是好状态。&lt;a href=&quot;http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/emt19937ar.html&quot;&gt;如果0太多，则&lt;/a&gt; Mersenne Twister算法会受苦。类似地，两个相邻的32位整数种子（即 &lt;code&gt;12345&lt;/code&gt; 和 &lt;code&gt;12346&lt;/code&gt; ）将产生非常相似的流。</target>
        </trans-unit>
        <trans-unit id="c92ea12ee3f0aa3697d45f7df6d6af24fc7fd6b1" translate="yes" xml:space="preserve">
          <source>For example, F2PY generates from</source>
          <target state="translated">例如,F2PY从</target>
        </trans-unit>
        <trans-unit id="30f8823abb19bf71600d2b51cdc69b652a8cdb6f" translate="yes" xml:space="preserve">
          <source>For example, I might be working on a computer with a little-endian CPU - such as an Intel Pentium, but I have loaded some data from a file written by a computer that is big-endian. Let&amp;rsquo;s say I have loaded 4 bytes from a file written by a Sun (big-endian) computer. I know that these 4 bytes represent two 16-bit integers. On a big-endian machine, a two-byte integer is stored with the Most Significant Byte (MSB) first, and then the Least Significant Byte (LSB). Thus the bytes are, in memory order:</source>
          <target state="translated">例如，我可能正在使用低端CPU的计算机（例如Intel Pentium），但是我已经从由大端计算机编写的文件中加载了一些数据。假设我已经从Sun（big-endian）计算机编写的文件中加载了4个字节。我知道这4个字节代表两个16位整数。在big-endian计算机上，先存储两个字节的整数，然后再存储最高有效字节（MSB），然后存储最低有效字节（LSB）。因此，字节按存储顺序排列：</target>
        </trans-unit>
        <trans-unit id="214075869a9c515ee07024b57bc4ea923a1819de" translate="yes" xml:space="preserve">
          <source>For example, a 2x2 array &lt;code&gt;A&lt;/code&gt; is Fortran-contiguous if its elements are stored in memory in the following order:</source>
          <target state="translated">例如，如果2x2数组 &lt;code&gt;A&lt;/code&gt; 的元素按以下顺序存储在内存中，则它是Fortran连续的：</target>
        </trans-unit>
        <trans-unit id="e8f7cf41730b21d0b9a823684d400d6bc79bd0dc" translate="yes" xml:space="preserve">
          <source>For example, a function &lt;code&gt;myrange(n)&lt;/code&gt; generated from the following signature</source>
          <target state="translated">例如，从以下签名生成的函数 &lt;code&gt;myrange(n)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="32bc5e66732d4344162eb54fb50c625865f9eafb" translate="yes" xml:space="preserve">
          <source>For example, add.accumulate() is equivalent to np.cumsum().</source>
          <target state="translated">例如,add.accumulate()相当于np.cumsum()。</target>
        </trans-unit>
        <trans-unit id="9a8d227d278d37b6250f8f06b0e4ddba59ee6707" translate="yes" xml:space="preserve">
          <source>For example, add.reduce() is equivalent to sum().</source>
          <target state="translated">例如,add.reduce()相当于sum()。</target>
        </trans-unit>
        <trans-unit id="10dea8dee68a389bd052fd52669dfbae04bf6a1e" translate="yes" xml:space="preserve">
          <source>For example, calculating 3*a, where a is an array of 32-bit floats, intuitively should result in a 32-bit float output. If the 3 is a 32-bit integer, the NumPy rules indicate it can&amp;rsquo;t convert losslessly into a 32-bit float, so a 64-bit float should be the result type. By examining the value of the constant, &amp;lsquo;3&amp;rsquo;, we see that it fits in an 8-bit integer, which can be cast losslessly into the 32-bit float.</source>
          <target state="translated">例如，计算3 * a，其中a是32位浮点数的数组，直观上应该会得出32位浮点数的输出。如果3是32位整数，则NumPy规则表明它不能无损地转换为32位浮点数，因此结果类型应为64位浮点数。通过检查常数&amp;ldquo; 3&amp;rdquo;的值，我们看到它适合一个8位整数，可以无损地转换为32位浮点型。</target>
        </trans-unit>
        <trans-unit id="e896d341feb39ad2e94789a2fa3a61f98c1ab6de" translate="yes" xml:space="preserve">
          <source>For example, consider a ufunc with signature &lt;code&gt;(i,j),(i)-&amp;gt;()&lt;/code&gt;. In this case, &lt;code&gt;args&lt;/code&gt; will contain three pointers to the data of the input/output arrays &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt;. Furthermore, &lt;code&gt;dimensions&lt;/code&gt; will be &lt;code&gt;[N, I, J]&lt;/code&gt; to define the size of &lt;code&gt;N&lt;/code&gt; of the loop and the sizes &lt;code&gt;I&lt;/code&gt; and &lt;code&gt;J&lt;/code&gt; for the core dimensions &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt;. Finally, &lt;code&gt;steps&lt;/code&gt; will be &lt;code&gt;[a_N, b_N, c_N, a_i, a_j, b_i]&lt;/code&gt;, containing all necessary strides.</source>
          <target state="translated">例如，考虑签名为 &lt;code&gt;(i,j),(i)-&amp;gt;()&lt;/code&gt; 的ufunc 。在这种情况下， &lt;code&gt;args&lt;/code&gt; 将包含三个指向输入/输出数组 &lt;code&gt;a&lt;/code&gt; ， &lt;code&gt;b&lt;/code&gt; ， &lt;code&gt;c&lt;/code&gt; 的数据的指针。此外， &lt;code&gt;dimensions&lt;/code&gt; 将是 &lt;code&gt;[N, I, J]&lt;/code&gt; 来定义大小 &lt;code&gt;N&lt;/code&gt; 循环和尺寸 &lt;code&gt;I&lt;/code&gt; 和 &lt;code&gt;J&lt;/code&gt; 用于芯尺寸 &lt;code&gt;i&lt;/code&gt; 和 &lt;code&gt;j&lt;/code&gt; 。最后， &lt;code&gt;steps&lt;/code&gt; 将是 &lt;code&gt;[a_N, b_N, c_N, a_i, a_j, b_i]&lt;/code&gt; ，其中包含所有必要的步幅。</target>
        </trans-unit>
        <trans-unit id="dcfa362f844d8235742ab06beea7b0f26a111d9a" translate="yes" xml:space="preserve">
          <source>For example, consider the following Python code:</source>
          <target state="translated">例如,考虑以下Python代码。</target>
        </trans-unit>
        <trans-unit id="fd012d2c6f8f118e1400f5580ac6116fd761a668" translate="yes" xml:space="preserve">
          <source>For example, for functions like &lt;a href=&quot;generated/numpy.lib.scimath.log#numpy.lib.scimath.log&quot;&gt;&lt;code&gt;log&lt;/code&gt;&lt;/a&gt; with branch cuts, the versions in this module provide the mathematically valid answers in the complex plane:</source>
          <target state="translated">例如，对于像功能&lt;a href=&quot;generated/numpy.lib.scimath.log#numpy.lib.scimath.log&quot;&gt; &lt;code&gt;log&lt;/code&gt; &lt;/a&gt;与分行的削减，在此模块中的版本提供在复平面上的数学有效的答案：</target>
        </trans-unit>
        <trans-unit id="65c761c5136870def0974489fd65a1f38ad92d78" translate="yes" xml:space="preserve">
          <source>For example, for functions like &lt;code&gt;log&lt;/code&gt; with branch cuts, the versions in this module provide the mathematically valid answers in the complex plane:</source>
          <target state="translated">例如，对于带分支切割的 &lt;code&gt;log&lt;/code&gt; 功能，此模块中的版本在复杂平面中提供数学上有效的答案：</target>
        </trans-unit>
        <trans-unit id="1ae012c1a0fdd5d83c39490663637fce0836fd8c" translate="yes" xml:space="preserve">
          <source>For example, here is a typical source generator function:</source>
          <target state="translated">例如,这里是一个典型的源发生器函数。</target>
        </trans-unit>
        <trans-unit id="8b8fb16e550a85407367bfc6afd6fdca65ea7296" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;a&lt;/code&gt; is a 3 x &lt;code&gt;N&lt;/code&gt; array, an operation along axis 0 behaves as if its argument were an array containing slices of each row:</source>
          <target state="translated">例如，如果 &lt;code&gt;a&lt;/code&gt; 是一个3 x &lt;code&gt;N&lt;/code&gt; 的数组，则沿轴0的操作的行为就好像其参数是一个包含每一行的切片的数组：</target>
        </trans-unit>
        <trans-unit id="5f16b11fb1616884a1f7f0284cf2a3ad3bd24f37" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;a&lt;/code&gt; is a 3x3 array:</source>
          <target state="translated">例如，如果 &lt;code&gt;a&lt;/code&gt; 是3x3数组：</target>
        </trans-unit>
        <trans-unit id="7e1eba6b832e945c1e4ddb165d50f426b3bfee26" translate="yes" xml:space="preserve">
          <source>For example, if an iterator was created with a single array as its input, and it was possible to rearrange all its axes and then collapse it into a single strided iteration, this would return a view that is a one-dimensional array.</source>
          <target state="translated">例如,如果以单个数组作为输入创建一个迭代器,并且可以重新排列它的所有轴,然后将其折叠成一个单一的跨步迭代,这将返回一个是一维数组的视图。</target>
        </trans-unit>
        <trans-unit id="a7f0071af46179382458b34ec09b89b95e091389" translate="yes" xml:space="preserve">
          <source>For example, if we choose</source>
          <target state="translated">例如,如果我们选择</target>
        </trans-unit>
        <trans-unit id="2ff87dba0f6e77925be276fcef4c7c831b8ea504" translate="yes" xml:space="preserve">
          <source>For example, if we want to import only the first and the last columns, we can use &lt;code&gt;usecols=(0, -1)&lt;/code&gt;:</source>
          <target state="translated">例如，如果我们只想导入第一列和最后一列，则可以使用 &lt;code&gt;usecols=(0, -1)&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="cd3d9bd14f229a7eb91aaf840c6ac1f84467537b" translate="yes" xml:space="preserve">
          <source>For example, if you create this array:</source>
          <target state="translated">例如,如果你创建这个数组。</target>
        </trans-unit>
        <trans-unit id="16f1b7e404a82b7d866b4be0ca94013f93955314" translate="yes" xml:space="preserve">
          <source>For example, if you create this function:</source>
          <target state="translated">例如,如果你创建这个函数。</target>
        </trans-unit>
        <trans-unit id="d4336a303ad0f6a2b1bcee09892c8545dcc3ff9f" translate="yes" xml:space="preserve">
          <source>For example, if you start with this array:</source>
          <target state="translated">例如,如果你从这个数组开始。</target>
        </trans-unit>
        <trans-unit id="302f8b44862add9c44dd094ba5ef88c857733962" translate="yes" xml:space="preserve">
          <source>For example, if you want your sub-class or duck-type to be compatible with numpy&amp;rsquo;s &lt;code&gt;sum&lt;/code&gt; function, the method signature for this object&amp;rsquo;s &lt;code&gt;sum&lt;/code&gt; method should be the following:</source>
          <target state="translated">例如，如果希望子类或鸭子类型与numpy的 &lt;code&gt;sum&lt;/code&gt; 函数兼容，则此对象的 &lt;code&gt;sum&lt;/code&gt; 方法的方法签名应为以下内容：</target>
        </trans-unit>
        <trans-unit id="77b454223ff8bed8a9b0c67509f246c5fba091e9" translate="yes" xml:space="preserve">
          <source>For example, on a (typical linux x64 gcc) system, the numpy &lt;code&gt;complex64&lt;/code&gt; datatype is implemented as &lt;code&gt;struct { float real, imag; }&lt;/code&gt;. This has &amp;ldquo;true&amp;rdquo; alignment of 4 and &amp;ldquo;uint&amp;rdquo; alignment of 8 (equal to the true alignment of &lt;code&gt;uint64&lt;/code&gt;).</source>
          <target state="translated">例如，在一个（典型的Linux x64 gcc）系统上，numpy &lt;code&gt;complex64&lt;/code&gt; 数据类型被实现为 &lt;code&gt;struct { float real, imag; }&lt;/code&gt; 。这具有4的&amp;ldquo; true&amp;rdquo;对齐和8的&amp;ldquo; uint&amp;rdquo;对齐（等于 &lt;code&gt;uint64&lt;/code&gt; 的真实对齐）。</target>
        </trans-unit>
        <trans-unit id="4ae14922ef64a97a2775a05d3077ba74da55d933" translate="yes" xml:space="preserve">
          <source>For example, the coordinates of a point in 3D space &lt;code&gt;[1,&amp;nbsp;2,&amp;nbsp;1]&lt;/code&gt; has one axis. That axis has 3 elements in it, so we say it has a length of 3. In the example pictured below, the array has 2 axes. The first axis has a length of 2, the second axis has a length of 3.</source>
          <target state="translated">例如，在3D空间 &lt;code&gt;[1,&amp;nbsp;2,&amp;nbsp;1]&lt;/code&gt; 1、2、1]中的点的坐标只有一个轴。该轴上有3个元素，所以我们说它的长度为3。在下图所示的示例中，数组有2个轴。第一轴的长度为2，第二轴的长度为3。</target>
        </trans-unit>
        <trans-unit id="a172b13cb31313d38b209503a58e68588770858e" translate="yes" xml:space="preserve">
          <source>For example, this is the mean square error formula (a central formula used in supervised machine learning models that deal with regression):</source>
          <target state="translated">例如,这是均方误差公式(监督机器学习模型中处理回归的核心公式)。</target>
        </trans-unit>
        <trans-unit id="0368fcdf7406da31a66eddfd11e72598360ada41" translate="yes" xml:space="preserve">
          <source>For example, using a 2-D boolean array of shape (2,3) with four True elements to select rows from a 3-D array of shape (2,3,5) results in a 2-D result of shape (4,5):</source>
          <target state="translated">例如,使用具有4个True元素的2-D形状布尔数组(2,3)从3-D形状数组(2,3,5)中选择行,结果是形状(4,5)的2-D结果。</target>
        </trans-unit>
        <trans-unit id="54b9b1c9d703092f2621c55a5b2cd1e1eddf85b5" translate="yes" xml:space="preserve">
          <source>For example, you can create an array from a regular Python list or tuple using the &lt;code&gt;array&lt;/code&gt; function. The type of the resulting array is deduced from the type of the elements in the sequences.</source>
          <target state="translated">例如，您可以使用 &lt;code&gt;array&lt;/code&gt; 函数从常规Python列表或元组创建数组。根据序列中元素的类型推导所得数组的类型。</target>
        </trans-unit>
        <trans-unit id="3fad2cb39c870a9de4b9e44ed99144a88481e6ec" translate="yes" xml:space="preserve">
          <source>For example, you can plot a 1D array like this:</source>
          <target state="translated">例如,你可以像这样绘制一个一维数组。</target>
        </trans-unit>
        <trans-unit id="390c0f644804c3940d2b75b4dff6f12c284b252d" translate="yes" xml:space="preserve">
          <source>For example, you may have an array like this one:</source>
          <target state="translated">例如,你可能有一个像这样的数组。</target>
        </trans-unit>
        <trans-unit id="d24b595e5b1e7c226dfee05c7297047fa32fe9c1" translate="yes" xml:space="preserve">
          <source>For example, you might well want to be able to shorten &lt;code&gt;git checkout&lt;/code&gt; to &lt;code&gt;git co&lt;/code&gt;. Or you may want to alias &lt;code&gt;git diff --color-words&lt;/code&gt; (which gives a nicely formatted output of the diff) to &lt;code&gt;git wdiff&lt;/code&gt;</source>
          <target state="translated">例如，您可能希望能够将 &lt;code&gt;git checkout&lt;/code&gt; 缩短为 &lt;code&gt;git co&lt;/code&gt; 。或者，您可能想将 &lt;code&gt;git diff --color-words&lt;/code&gt; （为diff提供格式正确的输出）别名为 &lt;code&gt;git wdiff&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="8b82f8996b94b3076d2602f80a0b8a902b3a3586" translate="yes" xml:space="preserve">
          <source>For examples, see the various functions.</source>
          <target state="translated">例如,请看各种功能。</target>
        </trans-unit>
        <trans-unit id="13b2e9c534395e7c5f78b138c5b0b5d135b327e2" translate="yes" xml:space="preserve">
          <source>For finite values, isclose uses the following equation to test whether two floating point values are equivalent.</source>
          <target state="translated">对于有限值,isclose使用以下公式来测试两个浮点值是否相等。</target>
        </trans-unit>
        <trans-unit id="e9eda33d9c06cab528c6194c742df4404b1ba711" translate="yes" xml:space="preserve">
          <source>For fixed format Fortran codes, &lt;code&gt;&amp;lt;comment char&amp;gt;&lt;/code&gt; must be at the first column of a file, of course. For free format Fortran codes, F2PY directives can appear anywhere in a file.</source>
          <target state="translated">对于固定格式的Fortran代码， &lt;code&gt;&amp;lt;comment char&amp;gt;&lt;/code&gt; 当然必须在文件的第一列。对于自由格式的Fortran代码，F2PY指令可以出现在文件中的任何位置。</target>
        </trans-unit>
        <trans-unit id="d62c0e35a11ece55b5adf0e9c849759b322d0ed9" translate="yes" xml:space="preserve">
          <source>For floating point arguments, the length of the result is &lt;code&gt;ceil((stop - start)/step)&lt;/code&gt;. Because of floating point overflow, this rule may result in the last element of &lt;code&gt;out&lt;/code&gt; being greater than &lt;code&gt;stop&lt;/code&gt;.</source>
          <target state="translated">对于浮点参数，结果的长度为 &lt;code&gt;ceil((stop - start)/step)&lt;/code&gt; 。由于浮点溢出，此规则可能导致 &lt;code&gt;out&lt;/code&gt; 的最后一个元素大于 &lt;code&gt;stop&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e732260153a191a109ea04ea332dadcf16bcef7" translate="yes" xml:space="preserve">
          <source>For floating point arrays, inaccurate results may appear due to usual round-off and floating point comparison issues.</source>
          <target state="translated">对于浮点数组,由于通常的舍入和浮点比较问题,可能会出现不准确的结果。</target>
        </trans-unit>
        <trans-unit id="e9208c67472507d398cb8a93a13859f9ce375088" translate="yes" xml:space="preserve">
          <source>For floating point numbers the numerical precision of sum (and &lt;code&gt;np.add.reduce&lt;/code&gt;) is in general limited by directly adding each number individually to the result causing rounding errors in every step. However, often numpy will use a numerically better approach (partial pairwise summation) leading to improved precision in many use-cases. This improved precision is always provided when no &lt;code&gt;axis&lt;/code&gt; is given. When &lt;code&gt;axis&lt;/code&gt; is given, it will depend on which axis is summed. Technically, to provide the best speed possible, the improved precision is only used when the summation is along the fast axis in memory. Note that the exact precision may vary depending on other parameters. In contrast to NumPy, Python&amp;rsquo;s &lt;code&gt;math.fsum&lt;/code&gt; function uses a slower but more precise approach to summation. Especially when summing a large number of lower precision floating point numbers, such as &lt;code&gt;float32&lt;/code&gt;, numerical errors can become significant. In such cases it can be advisable to use &lt;code&gt;dtype=&amp;rdquo;float64&amp;rdquo;&lt;/code&gt; to use a higher precision for the output.</source>
          <target state="translated">对于浮点数，总和（和 &lt;code&gt;np.add.reduce&lt;/code&gt; ）的数值精度通常受到限制，方法是将每个数字直接直接加到结果中，从而在每个步骤中产生舍入误差。但是，通常numpy将使用数值上更好的方法（部分对和），从而在许多用例中提高精度。当没有 &lt;code&gt;axis&lt;/code&gt; 时，总是提供提高的精度。当 &lt;code&gt;axis&lt;/code&gt; 被给出的，这将取决于其轴线被求和。从技术上讲，为了提供可能的最佳速度，仅当累加沿内存中的快轴时才使用提高的精度。请注意，确切的精度可能会因其他参数而异。与NumPy相反，Python的 &lt;code&gt;math.fsum&lt;/code&gt; 函数使用较慢但更精确的求和方法。尤其是在对大量较低精度的浮点数求和时，例如 &lt;code&gt;float32&lt;/code&gt; ，数值误差会变得很明显。在这种情况下，建议使用 &lt;code&gt;dtype=&amp;rdquo;float64&amp;rdquo;&lt;/code&gt; 对输出使用更高的精度。</target>
        </trans-unit>
        <trans-unit id="f41c623cdcb4a0e7f4eb2e6a140ca19a3b6cef7a" translate="yes" xml:space="preserve">
          <source>For floating-point input, the &lt;em&gt;std&lt;/em&gt; is computed using the same precision the input has. Depending on the input data, this can cause the results to be inaccurate, especially for float32 (see example below). Specifying a higher-accuracy accumulator using the &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; keyword can alleviate this issue.</source>
          <target state="translated">对于浮点输入，将使用与输入相同的精度来计算&lt;em&gt;std&lt;/em&gt;。根据输入数据，这可能导致结果不准确，尤其是对于float32（请参见下面的示例）。使用&lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;关键字指定精度更高的累加器可以缓解此问题。</target>
        </trans-unit>
        <trans-unit id="ef01297e4ccbe941536586d94ab8ef1e22c230bf" translate="yes" xml:space="preserve">
          <source>For floating-point input, the variance is computed using the same precision the input has. Depending on the input data, this can cause the results to be inaccurate, especially for &lt;a href=&quot;../arrays.scalars#numpy.float32&quot;&gt;&lt;code&gt;float32&lt;/code&gt;&lt;/a&gt; (see example below). Specifying a higher-accuracy accumulator using the &lt;code&gt;dtype&lt;/code&gt; keyword can alleviate this issue.</source>
          <target state="translated">对于浮点输入，使用与输入相同的精度来计算方差。根据输入数据，这可能导致结果不准确，尤其是对于&lt;a href=&quot;../arrays.scalars#numpy.float32&quot;&gt; &lt;code&gt;float32&lt;/code&gt; &lt;/a&gt;（请参见下面的示例）。使用 &lt;code&gt;dtype&lt;/code&gt; 关键字指定精度更高的累加器可以缓解此问题。</target>
        </trans-unit>
        <trans-unit id="effdce45ed2fe7c4c7447e7c5d6ed579806ca2bd" translate="yes" xml:space="preserve">
          <source>For floating-point input, the variance is computed using the same precision the input has. Depending on the input data, this can cause the results to be inaccurate, especially for &lt;code&gt;float32&lt;/code&gt; (see example below). Specifying a higher-accuracy accumulator using the &lt;code&gt;dtype&lt;/code&gt; keyword can alleviate this issue.</source>
          <target state="translated">对于浮点输入，使用与输入相同的精度来计算方差。根据输入数据，这可能导致结果不准确，尤其是对于 &lt;code&gt;float32&lt;/code&gt; （请参见下面的示例）。使用 &lt;code&gt;dtype&lt;/code&gt; 关键字指定精度更高的累加器可以缓解此问题。</target>
        </trans-unit>
        <trans-unit id="d9b2341f620f885d0f8ab294ce3abbf3b1a90c60" translate="yes" xml:space="preserve">
          <source>For full documentation, see &lt;a href=&quot;numpy.searchsorted#numpy.searchsorted&quot;&gt;&lt;code&gt;numpy.searchsorted&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">有关完整文档，请参见&lt;a href=&quot;numpy.searchsorted#numpy.searchsorted&quot;&gt; &lt;code&gt;numpy.searchsorted&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8407df90b73fe86cd7253f98195431a6f813b267" translate="yes" xml:space="preserve">
          <source>For further details, consult the numpy reference documentation on array indexing.</source>
          <target state="translated">更多细节,请参考numpy参考文档中关于数组索引的内容。</target>
        </trans-unit>
        <trans-unit id="77c711733607bfc1bae041078b86f27ea8766c29" translate="yes" xml:space="preserve">
          <source>For further information, see &lt;a href=&quot;numpy.memmap#numpy.memmap&quot;&gt;&lt;code&gt;memmap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;numpy.memmap#numpy.memmap&quot;&gt; &lt;code&gt;memmap&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e11475a277ae3113deb33326346ecfc8620fa4bf" translate="yes" xml:space="preserve">
          <source>For general resources for learning &lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt; see &lt;a href=&quot;git_resources#git-resources&quot;&gt;Additional Git Resources&lt;/a&gt;.</source>
          <target state="translated">有关学习&lt;a href=&quot;https://git-scm.com/&quot;&gt;git的&lt;/a&gt;一般资源，请参阅&lt;a href=&quot;git_resources#git-resources&quot;&gt;其他Git资源&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8e32d40cffc64e1d0297c17e549d89391273d13d" translate="yes" xml:space="preserve">
          <source>For help in printing, the following strings are defined as the correct format specifier in printf and related commands.</source>
          <target state="translated">为了帮助打印,以下字符串被定义为printf和相关命令中的正确格式指定符。</target>
        </trans-unit>
        <trans-unit id="489d6f9ad36355f45e025471f49df88064ca87ee" translate="yes" xml:space="preserve">
          <source>For higher dimensional arrays summing a single axis can be done with ellipsis:</source>
          <target state="translated">对于高维数组,单轴求和可以用省略号来完成。</target>
        </trans-unit>
        <trans-unit id="6a424dcac51ca8b201228fd393c244dbeb8c5216" translate="yes" xml:space="preserve">
          <source>For i in &lt;code&gt;range(len(indices))&lt;/code&gt;, &lt;a href=&quot;#numpy.ufunc.reduceat&quot;&gt;&lt;code&gt;reduceat&lt;/code&gt;&lt;/a&gt; computes &lt;code&gt;ufunc.reduce(a[indices[i]:indices[i+1]])&lt;/code&gt;, which becomes the i-th generalized &amp;ldquo;row&amp;rdquo; parallel to &lt;code&gt;axis&lt;/code&gt; in the final result (i.e., in a 2-D array, for example, if &lt;code&gt;axis = 0&lt;/code&gt;, it becomes the i-th row, but if &lt;code&gt;axis = 1&lt;/code&gt;, it becomes the i-th column). There are three exceptions to this:</source>
          <target state="translated">对于 &lt;code&gt;range(len(indices))&lt;/code&gt; i ，&lt;a href=&quot;#numpy.ufunc.reduceat&quot;&gt; &lt;code&gt;reduceat&lt;/code&gt; &lt;/a&gt;计算 &lt;code&gt;ufunc.reduce(a[indices[i]:indices[i+1]])&lt;/code&gt; ，它成为最终结果中与 &lt;code&gt;axis&lt;/code&gt; 平行的第i个广义&amp;ldquo;行&amp;rdquo; （例如，在二维数组中，如果 &lt;code&gt;axis = 0&lt;/code&gt; ，它将成为第i行，但是如果 &lt;code&gt;axis = 1&lt;/code&gt; ，它将成为第i行）。对此有三个例外：</target>
        </trans-unit>
        <trans-unit id="a335acbc4ceafdd98dc502fc47e116da880da129" translate="yes" xml:space="preserve">
          <source>For i in &lt;code&gt;range(len(indices))&lt;/code&gt;, &lt;a href=&quot;#numpy.ufunc.reduceat&quot;&gt;&lt;code&gt;reduceat&lt;/code&gt;&lt;/a&gt; computes &lt;code&gt;ufunc.reduce(array[indices[i]:indices[i+1]])&lt;/code&gt;, which becomes the i-th generalized &amp;ldquo;row&amp;rdquo; parallel to &lt;code&gt;axis&lt;/code&gt; in the final result (i.e., in a 2-D array, for example, if &lt;code&gt;axis = 0&lt;/code&gt;, it becomes the i-th row, but if &lt;code&gt;axis = 1&lt;/code&gt;, it becomes the i-th column). There are three exceptions to this:</source>
          <target state="translated">对于位于 &lt;code&gt;range(len(indices))&lt;/code&gt; 中的i ，&lt;a href=&quot;#numpy.ufunc.reduceat&quot;&gt; &lt;code&gt;reduceat&lt;/code&gt; &lt;/a&gt;计算 &lt;code&gt;ufunc.reduce(array[indices[i]:indices[i+1]])&lt;/code&gt; ，它成为最终结果中与 &lt;code&gt;axis&lt;/code&gt; 平行的第i个广义&amp;ldquo;行&amp;rdquo; （例如，在二维数组中，如果 &lt;code&gt;axis = 0&lt;/code&gt; ，它将成为第i行，但是如果 &lt;code&gt;axis = 1&lt;/code&gt; ，它将成为第i行）。对此有三个例外：</target>
        </trans-unit>
        <trans-unit id="3e2d688963af310435591977ab9e45596586b894" translate="yes" xml:space="preserve">
          <source>For initializing an array &lt;code&gt;&amp;lt;array name&amp;gt;&lt;/code&gt;, F2PY generates a loop over all indices and dimensions that executes the following pseudo-statement:</source>
          <target state="translated">为了初始化数组 &lt;code&gt;&amp;lt;array name&amp;gt;&lt;/code&gt; ，F2PY在所有索引和维度上生成一个循环，该循环执行以下伪语句：</target>
        </trans-unit>
        <trans-unit id="05f651225304ab9158ee3f9e677f8c577d092edf" translate="yes" xml:space="preserve">
          <source>For input arrays that are smaller than the specified buffer size, copies are made of all non-contiguous, mis-aligned, or out-of- byteorder arrays to ensure that for small arrays, a single loop is used. Then, array iterators are created for all the input arrays and the resulting collection of iterators is broadcast to a single shape.</source>
          <target state="translated">对于小于指定缓冲区大小的输入数组,会对所有不连续、错位、或超出字节顺序的数组进行复制,以确保对于小数组,只使用一个循环。然后,为所有的输入数组创建数组迭代器,并将产生的迭代器集合广播到一个形状。</target>
        </trans-unit>
        <trans-unit id="0c7b69e69466d27c81eb277802b5fd2ba93ef1f2" translate="yes" xml:space="preserve">
          <source>For instructions on building for source package, see &lt;a href=&quot;building&quot;&gt;Building from source&lt;/a&gt;. This information is useful mainly for advanced users.</source>
          <target state="translated">有关为源程序包构建的说明，请参阅&lt;a href=&quot;building&quot;&gt;从源程序构建&lt;/a&gt;。此信息主要对高级用户有用。</target>
        </trans-unit>
        <trans-unit id="37dbe6dc0691b61b379d0a2afb8134a45871395a" translate="yes" xml:space="preserve">
          <source>For integer arguments with absolute value larger than 1 the result is always zero because of the way Python handles integer division. For integer zero the result is an overflow.</source>
          <target state="translated">对于绝对值大于 1 的整数参数,由于 Python 处理整数除法的方式,结果总是零。对于整数零,结果是溢出。</target>
        </trans-unit>
        <trans-unit id="117e2f99abde5ef34211f008976cf994cee261a9" translate="yes" xml:space="preserve">
          <source>For integer input the return values are floats.</source>
          <target state="translated">对于整数输入,返回值为浮动值。</target>
        </trans-unit>
        <trans-unit id="51f2302ae3afa42e90f16f1c35bbd2af61213570" translate="yes" xml:space="preserve">
          <source>For integer specifiers (eg. &lt;code&gt;d,i,o,x&lt;/code&gt;), the minimum number of digits.</source>
          <target state="translated">对于整数说明符（例如 &lt;code&gt;d,i,o,x&lt;/code&gt; ），最小位数。</target>
        </trans-unit>
        <trans-unit id="7401aba5507b33d4914d20070660b9faa95209c3" translate="yes" xml:space="preserve">
          <source>For integer types, exact equality is used, in the same way as &lt;a href=&quot;numpy.ma.masked_equal#numpy.ma.masked_equal&quot;&gt;&lt;code&gt;masked_equal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于整数类型，使用完全相等的方式，与&lt;a href=&quot;numpy.ma.masked_equal#numpy.ma.masked_equal&quot;&gt; &lt;code&gt;masked_equal&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="1e54c6af26706ff283ff28256c72b54eb26fbc6b" translate="yes" xml:space="preserve">
          <source>For integers, the fill value will be different in general to the result of &lt;code&gt;masked_equal&lt;/code&gt;.</source>
          <target state="translated">对于整数，填充值通常将与 &lt;code&gt;masked_equal&lt;/code&gt; 的结果不同。</target>
        </trans-unit>
        <trans-unit id="7781ca86f57d2a847663467143f9629dfc0e85e1" translate="yes" xml:space="preserve">
          <source>For maintainers</source>
          <target state="translated">对于维护者</target>
        </trans-unit>
        <trans-unit id="975c748e73022344a91bd2ac6e7a0ad355e993bc" translate="yes" xml:space="preserve">
          <source>For many applications using a sliding window view can be convenient, but potentially very slow. Often specialized solutions exist, for example:</source>
          <target state="translated">对于许多应用来说,使用滑动窗口视图可以很方便,但可能会很慢。通常存在专门的解决方案,例如:</target>
        </trans-unit>
        <trans-unit id="7d049cee37488c14a6b5c65b1da77ab9e42f2daa" translate="yes" xml:space="preserve">
          <source>For matrices that are not square or that (for negative powers) cannot be inverted numerically.</source>
          <target state="translated">对于非正方形或(负数幂)不能进行数值反演的矩阵。</target>
        </trans-unit>
        <trans-unit id="582e5fdc5986730f5cfb2129f1c085cdd20f4ef0" translate="yes" xml:space="preserve">
          <source>For monotonically _increasing_ &lt;code&gt;bins&lt;/code&gt;, the following are equivalent:</source>
          <target state="translated">对于单调_increasing_ &lt;code&gt;bins&lt;/code&gt; ，以下是等效的：</target>
        </trans-unit>
        <trans-unit id="83fdf15871a7264e4f60e9ab78a977dea92e1a03" translate="yes" xml:space="preserve">
          <source>For more detailed documentation.</source>
          <target state="translated">对于更详细的文件。</target>
        </trans-unit>
        <trans-unit id="3e4c0a1cf85610ffab772dbfe49c64f181ea813e" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;numpy.linalg.lstsq#numpy.linalg.lstsq&quot;&gt;&lt;code&gt;linalg.lstsq&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;numpy.linalg.lstsq#numpy.linalg.lstsq&quot;&gt; &lt;code&gt;linalg.lstsq&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="be083226b3be888a488ff117c61816dc72280048" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;numpy.linalg.lstsq#numpy.linalg.lstsq&quot;&gt;&lt;code&gt;numpy.linalg.lstsq&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;numpy.linalg.lstsq#numpy.linalg.lstsq&quot;&gt; &lt;code&gt;numpy.linalg.lstsq&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="37ae37abcab4e25dbfe5d8b108d91993462a8cf5" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;numpy.random.mtrand.randomstate.set_state#numpy.random.mtrand.RandomState.set_state&quot;&gt;&lt;code&gt;set_state&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;numpy.random.mtrand.randomstate.set_state#numpy.random.mtrand.RandomState.set_state&quot;&gt; &lt;code&gt;set_state&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e9028a5b9ca3eb796d7014cf44685275c5239e16" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;numpy.random.randomstate.set_state#numpy.random.RandomState.set_state&quot;&gt;&lt;code&gt;set_state&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;numpy.random.randomstate.set_state#numpy.random.RandomState.set_state&quot;&gt; &lt;code&gt;set_state&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="51a8eedb7d395c27948e4922d0fabc18aafcf5ff" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;numpy.random.set_state#numpy.random.set_state&quot;&gt;&lt;code&gt;set_state&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;numpy.random.set_state#numpy.random.set_state&quot;&gt; &lt;code&gt;set_state&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8f7f38b00189236c28757faab4aba491a5544afa" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;code&gt;linalg.lstsq&lt;/code&gt;.</source>
          <target state="translated">有关更多详细信息，请参见 &lt;code&gt;linalg.lstsq&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e8a8f4e50fa887cbbddc19a83dfdf91655b33341" translate="yes" xml:space="preserve">
          <source>For more extensive information, see &lt;a href=&quot;../reference/testing#testing-guidelines&quot;&gt;Testing Guidelines&lt;/a&gt;</source>
          <target state="translated">有关更多信息，请参阅&lt;a href=&quot;../reference/testing#testing-guidelines&quot;&gt;测试准则。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="95cf6089ff82991425d6efdc0504169843591543" translate="yes" xml:space="preserve">
          <source>For more help on this function please see section 1.8 (Keyword Parameters for Extension Functions) of the Extending and Embedding tutorial in the Python documentation.</source>
          <target state="translated">有关该函数的更多帮助,请参见 Python 文档中的扩展和嵌入教程的第 1.8 节 (扩展函数的关键字参数)。</target>
        </trans-unit>
        <trans-unit id="61db67fed17b10d2110b06ec89aa13d261ade260" translate="yes" xml:space="preserve">
          <source>For more information on dictionaries, read the &lt;a href=&quot;https://docs.python.org/tutorial/&quot;&gt;Python tutorial&lt;/a&gt;.</source>
          <target state="translated">有关字典的更多信息，请阅读&lt;a href=&quot;https://docs.python.org/tutorial/&quot;&gt;Python教程&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="03f4a148b39366545cf97da19167eb00139c5efc" translate="yes" xml:space="preserve">
          <source>For more information on the qr factorization, see for example: &lt;a href=&quot;https://en.wikipedia.org/wiki/QR_factorization&quot;&gt;https://en.wikipedia.org/wiki/QR_factorization&lt;/a&gt;</source>
          <target state="translated">有关qr因式分解的更多信息，请参见例如：&lt;a href=&quot;https://en.wikipedia.org/wiki/QR_factorization&quot;&gt;https&lt;/a&gt; : //en.wikipedia.org/wiki/QR_factorization</target>
        </trans-unit>
        <trans-unit id="17921f717812e3320e8a7f42f4f17f79981316f9" translate="yes" xml:space="preserve">
          <source>For more information see:</source>
          <target state="translated">更多信息见:</target>
        </trans-unit>
        <trans-unit id="3985651be63157e0b3fd0f006d48347a4d4ad484" translate="yes" xml:space="preserve">
          <source>For more information, a way to suppress the warning, and an example of &lt;a href=&quot;#numpy.RankWarning&quot;&gt;&lt;code&gt;RankWarning&lt;/code&gt;&lt;/a&gt; being issued, see &lt;a href=&quot;numpy.polyfit#numpy.polyfit&quot;&gt;&lt;code&gt;polyfit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;numpy.polyfit#numpy.polyfit&quot;&gt; &lt;code&gt;polyfit&lt;/code&gt; &lt;/a&gt;，它提供了抑制警告的方法以及发出&lt;a href=&quot;#numpy.RankWarning&quot;&gt; &lt;code&gt;RankWarning&lt;/code&gt; &lt;/a&gt;的示例。</target>
        </trans-unit>
        <trans-unit id="8581f2666047bb23a92c8e690d1acad362013f23" translate="yes" xml:space="preserve">
          <source>For more information, read the section on lists in the &lt;a href=&quot;https://docs.python.org/tutorial/&quot;&gt;Python tutorial&lt;/a&gt;. For a mapping type (key-value), see &lt;em&gt;dictionary&lt;/em&gt;.</source>
          <target state="translated">有关更多信息，请阅读&lt;a href=&quot;https://docs.python.org/tutorial/&quot;&gt;Python教程中&lt;/a&gt;有关列表的部分。有关映射类型（键值），请参见&lt;em&gt;dictionary&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="6c4cae020b6b04928ab8186f1d73c1c26eba4002" translate="yes" xml:space="preserve">
          <source>For more information, refer to the &lt;a href=&quot;../index#module-numpy&quot;&gt;&lt;code&gt;numpy&lt;/code&gt;&lt;/a&gt; module and examine the methods and attributes of an array.</source>
          <target state="translated">有关更多信息，请参考&lt;a href=&quot;../index#module-numpy&quot;&gt; &lt;code&gt;numpy&lt;/code&gt; &lt;/a&gt;模块并检查数组的方法和属性。</target>
        </trans-unit>
        <trans-unit id="d0fe83d89b7a0207c98cafeb4a0d87c2838e97b1" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://docs.python.org/3/extending/building.html&quot;&gt;Building C and C++ Extensions&lt;/a&gt; Python documentation for details.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;https://docs.python.org/3/extending/building.html&quot;&gt;Building C and C ++ Extensions&lt;/a&gt; Python文档以获取详细信息。</target>
        </trans-unit>
        <trans-unit id="fa1433baa3f08eec4628310de483f3180d604e64" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-push.html&quot;&gt;git push&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-push.html&quot;&gt;git push&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b974edc2834bd1e574341abd9ce885d0e7a2979b" translate="yes" xml:space="preserve">
          <source>For more information, see F2Py source code &lt;code&gt;numpy/f2py/capi_maps.py&lt;/code&gt;.</source>
          <target state="translated">有关更多信息，请参见F2Py源代码 &lt;code&gt;numpy/f2py/capi_maps.py&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8acef7e82b687b4dec2e9998b5824ee5ddcb0de" translate="yes" xml:space="preserve">
          <source>For more on tutorials, see the &lt;a href=&quot;https://github.com/numpy/numpy-tutorials/blob/master/tutorial_style.ipynb&quot;&gt;tutorial how-to&lt;/a&gt;.</source>
          <target state="translated">有关教程的更多信息，请参见&lt;a href=&quot;https://github.com/numpy/numpy-tutorials/blob/master/tutorial_style.ipynb&quot;&gt;教程方法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e76406825a4b6cfa9648b9c913c853786d5a9103" translate="yes" xml:space="preserve">
          <source>For negative input elements, a complex value is returned (unlike &lt;a href=&quot;numpy.sqrt#numpy.sqrt&quot;&gt;&lt;code&gt;numpy.sqrt&lt;/code&gt;&lt;/a&gt; which returns NaN).</source>
          <target state="translated">对于负输入元素，将返回一个复数值（与返回NaN的&lt;a href=&quot;numpy.sqrt#numpy.sqrt&quot;&gt; &lt;code&gt;numpy.sqrt&lt;/code&gt; &lt;/a&gt;不同）。</target>
        </trans-unit>
        <trans-unit id="b32b573b8f00ce30b3419ec834d75448d214948d" translate="yes" xml:space="preserve">
          <source>For negative numbers, if width is not given, a minus sign is added to the front. If width is given, the two&amp;rsquo;s complement of the number is returned, with respect to that width.</source>
          <target state="translated">对于负数，如果未指定宽度，则会在前面添加减号。如果给定宽度，则返回该宽度的数字的二进制补码。</target>
        </trans-unit>
        <trans-unit id="5fc06ff1428a67551e7039c42cd5b569afbb759c" translate="yes" xml:space="preserve">
          <source>For non-Hermitian normal matrices the SciPy function &lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/generated/scipy.linalg.schur.html#scipy.linalg.schur&quot;&gt;&lt;code&gt;scipy.linalg.schur&lt;/code&gt;&lt;/a&gt; is preferred because the matrix &lt;code&gt;v&lt;/code&gt; is guaranteed to be unitary, which is not the case when using &lt;a href=&quot;#numpy.linalg.eig&quot;&gt;&lt;code&gt;eig&lt;/code&gt;&lt;/a&gt;. The Schur factorization produces an upper triangular matrix rather than a diagonal matrix, but for normal matrices only the diagonal of the upper triangular matrix is needed, the rest is roundoff error.</source>
          <target state="translated">对于非Hermitian正常矩阵，首选SciPy函数&lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/generated/scipy.linalg.schur.html#scipy.linalg.schur&quot;&gt; &lt;code&gt;scipy.linalg.schur&lt;/code&gt; &lt;/a&gt;，因为可以保证矩阵 &lt;code&gt;v&lt;/code&gt; 是单一的，而使用&lt;a href=&quot;#numpy.linalg.eig&quot;&gt; &lt;code&gt;eig&lt;/code&gt; &lt;/a&gt;则不是这种情况。Schur分解产生一个上三角矩阵而不是对角矩阵，但是对于法线矩阵，只需要上三角矩阵的对角线，其余就是舍入误差。</target>
        </trans-unit>
        <trans-unit id="e980d1d5cc881398767c8c741a7e8066463af6ac" translate="yes" xml:space="preserve">
          <source>For now, the only data formats accepted by NumPy are those also used by other Python scientific libraries like pandas, SciPy, or Matplotlib. We&amp;rsquo;re developing a package to accept more formats; contact us for details.</source>
          <target state="translated">目前，NumPy接受的唯一数据格式是其他Python科学图书馆（例如pandas，SciPy或Matplotlib）也使用的数据格式。我们正在开发一个程序包，以接受更多格式；请与我们联系以获取详细信息。</target>
        </trans-unit>
        <trans-unit id="1e6d9fefb02ae78e90327bf08c7741fd4d7aad3c" translate="yes" xml:space="preserve">
          <source>For one-dimensional arrays these notions coincide.</source>
          <target state="translated">对于一维数组来说,这些概念是吻合的。</target>
        </trans-unit>
        <trans-unit id="6a2721282deb17b4500d92138a510cdb4754bcd3" translate="yes" xml:space="preserve">
          <source>For operations which are either not commutative or not associative, doing a reduction over multiple axes is not well-defined. The ufuncs do not currently raise an exception in this case, but will likely do so in the future.</source>
          <target state="translated">对于那些不是换算型的操作,或者不是关联型的操作,在多轴上做还原并没有很好的定义。ufuncs目前没有在这种情况下提出异常,但将来可能会这样做。</target>
        </trans-unit>
        <trans-unit id="cce08ac0d595dc1fc36977f113db0494cd013706" translate="yes" xml:space="preserve">
          <source>For other keyword-only arguments, see the &lt;a href=&quot;../ufuncs#ufuncs-kwargs&quot;&gt;ufunc docs&lt;/a&gt;.</source>
          <target state="translated">有关其他仅关键字的参数，请参见&lt;a href=&quot;../ufuncs#ufuncs-kwargs&quot;&gt;ufunc docs&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0c08ef249ec6e440d6a8f4e999cc7fb84e271c54" translate="yes" xml:space="preserve">
          <source>For our example, we&amp;rsquo;ll create a sum of squares function. To start, let&amp;rsquo;s implement this function in straightforward Python. We want to support an &amp;lsquo;axis&amp;rsquo; parameter similar to the numpy &lt;a href=&quot;generated/numpy.sum#numpy.sum&quot;&gt;&lt;code&gt;sum&lt;/code&gt;&lt;/a&gt; function, so we will need to construct a list for the &lt;code&gt;op_axes&lt;/code&gt; parameter. Here&amp;rsquo;s how this looks.</source>
          <target state="translated">对于我们的示例，我们将创建平方和函数。首先，让我们在简单的Python中实现此功能。我们要支持类似于numpy &lt;a href=&quot;generated/numpy.sum#numpy.sum&quot;&gt; &lt;code&gt;sum&lt;/code&gt; &lt;/a&gt;函数的'axis'参数，因此我们需要为 &lt;code&gt;op_axes&lt;/code&gt; 参数构造一个列表。这是它的外观。</target>
        </trans-unit>
        <trans-unit id="1bfec23fd3b5a8e4feecb9f5b43f562b252ee813" translate="yes" xml:space="preserve">
          <source>For paragraphs, indentation is significant and indicates indentation in the output. New paragraphs are marked with a blank line.</source>
          <target state="translated">对于段落,缩进是重要的,表示在输出中缩进。新的段落用空行标记。</target>
        </trans-unit>
        <trans-unit id="f8e34004cd49470f698985ea088603e79d6737af" translate="yes" xml:space="preserve">
          <source>For pickling.</source>
          <target state="translated">用于腌制。</target>
        </trans-unit>
        <trans-unit id="45d056f2d6dc25af69ffd36f748681cb1b37bcb7" translate="yes" xml:space="preserve">
          <source>For positive integers &lt;code&gt;n&lt;/code&gt;, the power is computed by repeated matrix squarings and matrix multiplications. If &lt;code&gt;n == 0&lt;/code&gt;, the identity matrix of the same shape as M is returned. If &lt;code&gt;n &amp;lt; 0&lt;/code&gt;, the inverse is computed and then raised to the &lt;code&gt;abs(n)&lt;/code&gt;.</source>
          <target state="translated">对于正整数 &lt;code&gt;n&lt;/code&gt; ，乘方是通过重复的矩阵平方和矩阵乘法来计算的。如果 &lt;code&gt;n == 0&lt;/code&gt; ，则返回与M形状相同的单位矩阵。如果 &lt;code&gt;n &amp;lt; 0&lt;/code&gt; ，则计算逆，然后提高到 &lt;code&gt;abs(n)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2868f608509a0fb880318bfa1ea537e24b697cca" translate="yes" xml:space="preserve">
          <source>For private use, NumPy also constructs a &lt;code&gt;config.h&lt;/code&gt; in the NumPy include directory, which is not exported by NumPy (that is a python extension which use the numpy C API will not see those symbols), to avoid namespace pollution.</source>
          <target state="translated">为了供私人使用，NumPy还在NumPy包含目录中构造了一个 &lt;code&gt;config.h&lt;/code&gt; ，该目录不是由NumPy导出的（这是使用numpy C API的python扩展将看不到那些符号），以避免命名空间污染。</target>
        </trans-unit>
        <trans-unit id="3cba0cef0ecc3bf15466cf0b613737ac43d7cf46" translate="yes" xml:space="preserve">
          <source>For random samples from</source>
          <target state="translated">对于随机样本,从</target>
        </trans-unit>
        <trans-unit id="b2439f993cba90b7273c04e2cb2a757ef0e179bf" translate="yes" xml:space="preserve">
          <source>For real, non-negative inputs this works just like &lt;a href=&quot;numpy.sqrt#numpy.sqrt&quot;&gt;&lt;code&gt;numpy.sqrt&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">对于真实的非负输入，它的作用就像&lt;a href=&quot;numpy.sqrt#numpy.sqrt&quot;&gt; &lt;code&gt;numpy.sqrt&lt;/code&gt; &lt;/a&gt;一样：</target>
        </trans-unit>
        <trans-unit id="3b14ea0275a3817032fbdd7fbc1e7bdb06b2af67" translate="yes" xml:space="preserve">
          <source>For real-valued input data types, &lt;a href=&quot;#numpy.arccos&quot;&gt;&lt;code&gt;arccos&lt;/code&gt;&lt;/a&gt; always returns real output. For each value that cannot be expressed as a real number or infinity, it yields &lt;code&gt;nan&lt;/code&gt; and sets the &lt;code&gt;invalid&lt;/code&gt; floating point error flag.</source>
          <target state="translated">对于实值输入数据类型，&lt;a href=&quot;#numpy.arccos&quot;&gt; &lt;code&gt;arccos&lt;/code&gt; &lt;/a&gt;始终返回实输出。对于每个不能表示为实数或无穷大的值，它将产生 &lt;code&gt;nan&lt;/code&gt; 并设置 &lt;code&gt;invalid&lt;/code&gt; 浮点错误标志。</target>
        </trans-unit>
        <trans-unit id="f985096374044eb3c8f423921e1ca43a25a0a64a" translate="yes" xml:space="preserve">
          <source>For real-valued input data types, &lt;a href=&quot;#numpy.arccosh&quot;&gt;&lt;code&gt;arccosh&lt;/code&gt;&lt;/a&gt; always returns real output. For each value that cannot be expressed as a real number or infinity, it yields &lt;code&gt;nan&lt;/code&gt; and sets the &lt;code&gt;invalid&lt;/code&gt; floating point error flag.</source>
          <target state="translated">对于实值输入数据类型，&lt;a href=&quot;#numpy.arccosh&quot;&gt; &lt;code&gt;arccosh&lt;/code&gt; &lt;/a&gt;始终返回实输出。对于每个不能表示为实数或无穷大的值，它将产生 &lt;code&gt;nan&lt;/code&gt; 并设置 &lt;code&gt;invalid&lt;/code&gt; 浮点错误标志。</target>
        </trans-unit>
        <trans-unit id="1bd6dae91050b378f422d64d0fd3d06caee7dc76" translate="yes" xml:space="preserve">
          <source>For real-valued input data types, &lt;a href=&quot;#numpy.arcsinh&quot;&gt;&lt;code&gt;arcsinh&lt;/code&gt;&lt;/a&gt; always returns real output. For each value that cannot be expressed as a real number or infinity, it returns &lt;code&gt;nan&lt;/code&gt; and sets the &lt;code&gt;invalid&lt;/code&gt; floating point error flag.</source>
          <target state="translated">对于实值输入数据类型，&lt;a href=&quot;#numpy.arcsinh&quot;&gt; &lt;code&gt;arcsinh&lt;/code&gt; &lt;/a&gt;始终返回实输出。对于每个不能表示为实数或无穷大的值，它将返回 &lt;code&gt;nan&lt;/code&gt; 并设置 &lt;code&gt;invalid&lt;/code&gt; 浮点错误标志。</target>
        </trans-unit>
        <trans-unit id="f1a3e2a79ac88302cd49ced01b5ae36cb593f786" translate="yes" xml:space="preserve">
          <source>For real-valued input data types, &lt;a href=&quot;#numpy.arctan&quot;&gt;&lt;code&gt;arctan&lt;/code&gt;&lt;/a&gt; always returns real output. For each value that cannot be expressed as a real number or infinity, it yields &lt;code&gt;nan&lt;/code&gt; and sets the &lt;code&gt;invalid&lt;/code&gt; floating point error flag.</source>
          <target state="translated">对于实值输入数据类型，&lt;a href=&quot;#numpy.arctan&quot;&gt; &lt;code&gt;arctan&lt;/code&gt; &lt;/a&gt;始终返回实输出。对于每个不能表示为实数或无穷大的值，它将产生 &lt;code&gt;nan&lt;/code&gt; 并设置 &lt;code&gt;invalid&lt;/code&gt; 浮点错误标志。</target>
        </trans-unit>
        <trans-unit id="4e59a4a7e10620a1dcf06247438f5e136a0933eb" translate="yes" xml:space="preserve">
          <source>For real-valued input data types, &lt;a href=&quot;#numpy.arctanh&quot;&gt;&lt;code&gt;arctanh&lt;/code&gt;&lt;/a&gt; always returns real output. For each value that cannot be expressed as a real number or infinity, it yields &lt;code&gt;nan&lt;/code&gt; and sets the &lt;code&gt;invalid&lt;/code&gt; floating point error flag.</source>
          <target state="translated">对于实值输入数据类型，&lt;a href=&quot;#numpy.arctanh&quot;&gt; &lt;code&gt;arctanh&lt;/code&gt; &lt;/a&gt;始终返回实输出。对于每个不能表示为实数或无穷大的值，它将产生 &lt;code&gt;nan&lt;/code&gt; 并设置 &lt;code&gt;invalid&lt;/code&gt; 浮点错误标志。</target>
        </trans-unit>
        <trans-unit id="00463e3d9bf72a8660310a707c972e6c6b2f2a87" translate="yes" xml:space="preserve">
          <source>For real-valued input data types, &lt;a href=&quot;#numpy.log&quot;&gt;&lt;code&gt;log&lt;/code&gt;&lt;/a&gt; always returns real output. For each value that cannot be expressed as a real number or infinity, it yields &lt;code&gt;nan&lt;/code&gt; and sets the &lt;code&gt;invalid&lt;/code&gt; floating point error flag.</source>
          <target state="translated">对于实值输入数据类型，&lt;a href=&quot;#numpy.log&quot;&gt; &lt;code&gt;log&lt;/code&gt; &lt;/a&gt;始终返回实输出。对于每个不能表示为实数或无穷大的值，它将产生 &lt;code&gt;nan&lt;/code&gt; 并设置 &lt;code&gt;invalid&lt;/code&gt; 浮点错误标志。</target>
        </trans-unit>
        <trans-unit id="1dd401d005377ef79add082427bec36bd76d7d40" translate="yes" xml:space="preserve">
          <source>For real-valued input data types, &lt;a href=&quot;#numpy.log10&quot;&gt;&lt;code&gt;log10&lt;/code&gt;&lt;/a&gt; always returns real output. For each value that cannot be expressed as a real number or infinity, it yields &lt;code&gt;nan&lt;/code&gt; and sets the &lt;code&gt;invalid&lt;/code&gt; floating point error flag.</source>
          <target state="translated">对于实值输入数据类型，&lt;a href=&quot;#numpy.log10&quot;&gt; &lt;code&gt;log10&lt;/code&gt; &lt;/a&gt;始终返回实输出。对于每个不能表示为实数或无穷大的值，它将产生 &lt;code&gt;nan&lt;/code&gt; 并设置 &lt;code&gt;invalid&lt;/code&gt; 浮点错误标志。</target>
        </trans-unit>
        <trans-unit id="18c562bcbaf668e2b82c801663121e7d15eaaa37" translate="yes" xml:space="preserve">
          <source>For real-valued input data types, &lt;a href=&quot;#numpy.log1p&quot;&gt;&lt;code&gt;log1p&lt;/code&gt;&lt;/a&gt; always returns real output. For each value that cannot be expressed as a real number or infinity, it yields &lt;code&gt;nan&lt;/code&gt; and sets the &lt;code&gt;invalid&lt;/code&gt; floating point error flag.</source>
          <target state="translated">对于实值输入数据类型，&lt;a href=&quot;#numpy.log1p&quot;&gt; &lt;code&gt;log1p&lt;/code&gt; &lt;/a&gt;始终返回实输出。对于每个不能表示为实数或无穷大的值，它将产生 &lt;code&gt;nan&lt;/code&gt; 并设置 &lt;code&gt;invalid&lt;/code&gt; 浮点错误标志。</target>
        </trans-unit>
        <trans-unit id="cb65926ba3df7c570cfbf88879b3b9d563294100" translate="yes" xml:space="preserve">
          <source>For real-valued input data types, &lt;a href=&quot;#numpy.log2&quot;&gt;&lt;code&gt;log2&lt;/code&gt;&lt;/a&gt; always returns real output. For each value that cannot be expressed as a real number or infinity, it yields &lt;code&gt;nan&lt;/code&gt; and sets the &lt;code&gt;invalid&lt;/code&gt; floating point error flag.</source>
          <target state="translated">对于实值输入数据类型，&lt;a href=&quot;#numpy.log2&quot;&gt; &lt;code&gt;log2&lt;/code&gt; &lt;/a&gt;始终返回实输出。对于每个不能表示为实数或无穷大的值，它将产生 &lt;code&gt;nan&lt;/code&gt; 并设置 &lt;code&gt;invalid&lt;/code&gt; 浮点错误标志。</target>
        </trans-unit>
        <trans-unit id="5a691d6f039d37de2f424c2292fd24a2e8849ab5" translate="yes" xml:space="preserve">
          <source>For real-valued input data types, &lt;em&gt;arcsin&lt;/em&gt; always returns real output. For each value that cannot be expressed as a real number or infinity, it yields &lt;code&gt;nan&lt;/code&gt; and sets the &lt;code&gt;invalid&lt;/code&gt; floating point error flag.</source>
          <target state="translated">对于实值输入数据类型，&lt;em&gt;arcsin&lt;/em&gt;始终返回实输出。对于每个不能表示为实数或无穷大的值，它将产生 &lt;code&gt;nan&lt;/code&gt; 并设置 &lt;code&gt;invalid&lt;/code&gt; 浮点错误标志。</target>
        </trans-unit>
        <trans-unit id="ac8dda629e47802177efe000a2d093f5e016a0cb" translate="yes" xml:space="preserve">
          <source>For real-valued input, &lt;a href=&quot;#numpy.log1p&quot;&gt;&lt;code&gt;log1p&lt;/code&gt;&lt;/a&gt; is accurate also for &lt;code&gt;x&lt;/code&gt; so small that &lt;code&gt;1 + x == 1&lt;/code&gt; in floating-point accuracy.</source>
          <target state="translated">对于实值输入，&lt;a href=&quot;#numpy.log1p&quot;&gt; &lt;code&gt;log1p&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;x&lt;/code&gt; 精度也非常小，以至于浮点精度为 &lt;code&gt;1 + x == 1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8718e777159adb99e6030aa86f73aaa6419d14ea" translate="yes" xml:space="preserve">
          <source>For repeatability and readability, the dictionary keys are sorted in alphabetic order. This is for convenience only. A writer SHOULD implement this if possible. A reader MUST NOT depend on this.</source>
          <target state="translated">为了重复性和可读性,字典键按字母顺序排列。这只是为了方便。如果可能的话,作者应该实现这一点。读者一定不要依赖这个。</target>
        </trans-unit>
        <trans-unit id="6bd239911d468099089301c7ec88d5d1667469b6" translate="yes" xml:space="preserve">
          <source>For reshape, resize, and transpose, the single tuple argument may be replaced with &lt;code&gt;n&lt;/code&gt; integers which will be interpreted as an n-tuple.</source>
          <target state="translated">对于整形，调整大小和转置，可以用 &lt;code&gt;n&lt;/code&gt; 个整数替换单个元组参数，这将被解释为n个元组。</target>
        </trans-unit>
        <trans-unit id="6fe957d6ccb5cf28dddb483265ed8d862961930a" translate="yes" xml:space="preserve">
          <source>For scalar &lt;code&gt;a&lt;/code&gt;, returns the data type with the smallest size and smallest scalar kind which can hold its value.</source>
          <target state="translated">对于标量 &lt;code&gt;a&lt;/code&gt; ，返回可以保留其值的最小大小和最小标量类型的数据类型。</target>
        </trans-unit>
        <trans-unit id="22863dbfbfce9a1b2c0c06d8e441eed6ee432e4b" translate="yes" xml:space="preserve">
          <source>For scalar &lt;code&gt;a&lt;/code&gt;, returns the data type with the smallest size and smallest scalar kind which can hold its value. For non-scalar array &lt;code&gt;a&lt;/code&gt;, returns the vector&amp;rsquo;s dtype unmodified.</source>
          <target state="translated">对于标量 &lt;code&gt;a&lt;/code&gt; ，返回可以保留其值的最小大小和最小标量类型的数据类型。对于非标量数组 &lt;code&gt;a&lt;/code&gt; ，返回未经修改的向量的dtype。</target>
        </trans-unit>
        <trans-unit id="5642e4133974cc82494c6e2e1a04d4f6b4435c53" translate="yes" xml:space="preserve">
          <source>For several methods, an optional &lt;em&gt;out&lt;/em&gt; argument can also be provided and the result will be placed into the output array given. The &lt;em&gt;out&lt;/em&gt; argument must be an &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; and have the same number of elements. It can have a different data type in which case casting will be performed.</source>
          <target state="translated">对于几种方法，还可以提供可选的&lt;em&gt;out&lt;/em&gt;参数，并将结果放入给定的输出数组中。该&lt;em&gt;出&lt;/em&gt;参数必须是&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;且具有相同数目的元素。它可以具有不同的数据类型，在这种情况下将执行强制转换。</target>
        </trans-unit>
        <trans-unit id="b0753b0fcbeca94ce7630240e047138c854a65dd" translate="yes" xml:space="preserve">
          <source>For signed integer inputs, the two&amp;rsquo;s complement is returned. In a two&amp;rsquo;s-complement system negative numbers are represented by the two&amp;rsquo;s complement of the absolute value. This is the most common method of representing signed integers on computers &lt;a href=&quot;#rde927b304c4f-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. A N-bit two&amp;rsquo;s-complement system can represent every integer in the range</source>
          <target state="translated">对于有符号整数输入，将返回二进制补码。在二进制补码系统中，负数由绝对值的二进制补码表示。这是在计算机上表示有符号整数的最常见方法&lt;a href=&quot;#rde927b304c4f-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;。N位二进制补码系统可以表示范围内的每个整数</target>
        </trans-unit>
        <trans-unit id="8a7f873acfba66a72d1ce69253d776c71ca10e17" translate="yes" xml:space="preserve">
          <source>For simplicity we give a ufunc for a single dtype, the &amp;lsquo;f8&amp;rsquo; double. As in the previous section, we first give the .c file and then the setup.py file used to create the module containing the ufunc.</source>
          <target state="translated">为简单起见，我们为单个dtype（&amp;ldquo; f8&amp;rdquo;双精度）提供ufunc。如上一节所述，我们首先提供.c文件，然后提供用于创建包含ufunc的模块的setup.py文件。</target>
        </trans-unit>
        <trans-unit id="1790f111eccdfcb9badd8e72bbfbae78adf5ee18" translate="yes" xml:space="preserve">
          <source>For standard library functions:</source>
          <target state="translated">对于标准库函数。</target>
        </trans-unit>
        <trans-unit id="e58c1a1b97b83acb57ac2ac307ed0d7c16b3baf7" translate="yes" xml:space="preserve">
          <source>For structured arrays, all fields are combined, with masked values ignored. The result is masked if all fields were masked, with self and other considered equal only if both were fully masked.</source>
          <target state="translated">对于结构化数组,所有的字段都被合并,而屏蔽的值被忽略。如果所有字段都被掩码,则结果被掩码,只有当self和other都被完全掩码时,才会被认为是相等的。</target>
        </trans-unit>
        <trans-unit id="60753f45a63d90af610aa65f98fdd4ce690bf30a" translate="yes" xml:space="preserve">
          <source>For structured datatypes with no fields this function now returns False.</source>
          <target state="translated">对于没有字段的结构化数据类型,这个函数现在返回False。</target>
        </trans-unit>
        <trans-unit id="54b403ec15e745ce9b0d408a4253b0a3db036c37" translate="yes" xml:space="preserve">
          <source>For structured types, a structured scalar is returned, with each field the default fill value for its type.</source>
          <target state="translated">对于结构化类型,返回一个结构化标量,每个字段都是其类型的默认填充值。</target>
        </trans-unit>
        <trans-unit id="7c0b7d9c35a991bbf7b4be3304607a91761fd2e6" translate="yes" xml:space="preserve">
          <source>For subarray types, the fill value is an array of the same size containing the default scalar fill value.</source>
          <target state="translated">对于子数组类型,填充值是一个包含默认标量填充值的相同大小的数组。</target>
        </trans-unit>
        <trans-unit id="fa1668cc4f1ad2127afa574513a965e4f8de0bd1" translate="yes" xml:space="preserve">
          <source>For tall matrices in NumPy version up to 1.6.2, the diagonal &amp;ldquo;wrapped&amp;rdquo; after N columns. You can have this behavior with this option. This affects only tall matrices.</source>
          <target state="translated">对于NumPy版本高达1.6.2的高矩阵，对角线在N列后&amp;ldquo;包裹&amp;rdquo;。使用此选项，您可以具有这种行为。这仅影响高矩阵。</target>
        </trans-unit>
        <trans-unit id="15797574f39fa9a94e6a6ba0f1322211577809c1" translate="yes" xml:space="preserve">
          <source>For tests with a result that is random or platform-dependent, mark the output as such:</source>
          <target state="translated">对于结果是随机的或依赖于平台的测试,将输出标记为随机。</target>
        </trans-unit>
        <trans-unit id="571561584fb9de04ee089fbe39a5ff6d6bc01c7a" translate="yes" xml:space="preserve">
          <source>For the explicit constructor call, our subclass will need to create a new ndarray instance of its own class. In practice this means that we, the authors of the code, will need to make a call to &lt;code&gt;ndarray.__new__(MySubClass,...)&lt;/code&gt;, a class-hierarchy prepared call to &lt;code&gt;super(MySubClass, cls).__new__(cls, ...)&lt;/code&gt;, or do view casting of an existing array (see below)</source>
          <target state="translated">对于显式构造函数调用，我们的子类将需要创建其自己的类的新ndarray实例。实际上，这意味着我们作为代码的作者，需要对 &lt;code&gt;ndarray.__new__(MySubClass,...)&lt;/code&gt; 进行调用，这是对类类结构的 &lt;code&gt;super(MySubClass, cls).__new__(cls, ...)&lt;/code&gt; ，或查看现有数组的转换（请参见下文）</target>
        </trans-unit>
        <trans-unit id="18e3d7bba1f8f57e3e3d0698a1673d2f7dbd0218" translate="yes" xml:space="preserve">
          <source>For the first run, we threw 3 times 1, 4 times 2, etc. For the second, we threw 2 times 1, 4 times 2, etc.</source>
          <target state="translated">第一次,我们投了3次1,4次2等。第二次,我们投了2次1,4次2,等等。</target>
        </trans-unit>
        <trans-unit id="72f9e5e8e38fa061436e99d12c2a915135e47ac9" translate="yes" xml:space="preserve">
          <source>For the following methods there are also corresponding functions in &lt;a href=&quot;index#module-numpy&quot;&gt;&lt;code&gt;numpy&lt;/code&gt;&lt;/a&gt;: &lt;a href=&quot;generated/numpy.all#numpy.all&quot;&gt;&lt;code&gt;all&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.any#numpy.any&quot;&gt;&lt;code&gt;any&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.argmax#numpy.argmax&quot;&gt;&lt;code&gt;argmax&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.argmin#numpy.argmin&quot;&gt;&lt;code&gt;argmin&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.argpartition#numpy.argpartition&quot;&gt;&lt;code&gt;argpartition&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.argsort#numpy.argsort&quot;&gt;&lt;code&gt;argsort&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.choose#numpy.choose&quot;&gt;&lt;code&gt;choose&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.clip#numpy.clip&quot;&gt;&lt;code&gt;clip&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.compress#numpy.compress&quot;&gt;&lt;code&gt;compress&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.copy#numpy.copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.cumprod#numpy.cumprod&quot;&gt;&lt;code&gt;cumprod&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.cumsum#numpy.cumsum&quot;&gt;&lt;code&gt;cumsum&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.diagonal#numpy.diagonal&quot;&gt;&lt;code&gt;diagonal&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.imag#numpy.imag&quot;&gt;&lt;code&gt;imag&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.amax#numpy.amax&quot;&gt;&lt;code&gt;max&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.mean#numpy.mean&quot;&gt;&lt;code&gt;mean&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.amin#numpy.amin&quot;&gt;&lt;code&gt;min&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.nonzero#numpy.nonzero&quot;&gt;&lt;code&gt;nonzero&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.partition#numpy.partition&quot;&gt;&lt;code&gt;partition&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.prod#numpy.prod&quot;&gt;&lt;code&gt;prod&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.ptp#numpy.ptp&quot;&gt;&lt;code&gt;ptp&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.put#numpy.put&quot;&gt;&lt;code&gt;put&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.ravel#numpy.ravel&quot;&gt;&lt;code&gt;ravel&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.real#numpy.real&quot;&gt;&lt;code&gt;real&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.repeat#numpy.repeat&quot;&gt;&lt;code&gt;repeat&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.reshape#numpy.reshape&quot;&gt;&lt;code&gt;reshape&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.around#numpy.around&quot;&gt;&lt;code&gt;round&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.searchsorted#numpy.searchsorted&quot;&gt;&lt;code&gt;searchsorted&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.sort#numpy.sort&quot;&gt;&lt;code&gt;sort&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.squeeze#numpy.squeeze&quot;&gt;&lt;code&gt;squeeze&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.std#numpy.std&quot;&gt;&lt;code&gt;std&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.sum#numpy.sum&quot;&gt;&lt;code&gt;sum&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.swapaxes#numpy.swapaxes&quot;&gt;&lt;code&gt;swapaxes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.take#numpy.take&quot;&gt;&lt;code&gt;take&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.trace#numpy.trace&quot;&gt;&lt;code&gt;trace&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.transpose#numpy.transpose&quot;&gt;&lt;code&gt;transpose&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.var#numpy.var&quot;&gt;&lt;code&gt;var&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于下面的方法，也有相应的功能&lt;a href=&quot;index#module-numpy&quot;&gt; &lt;code&gt;numpy&lt;/code&gt; 的&lt;/a&gt;：&lt;a href=&quot;generated/numpy.all#numpy.all&quot;&gt; &lt;code&gt;all&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.any#numpy.any&quot;&gt; &lt;code&gt;any&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.argmax#numpy.argmax&quot;&gt; &lt;code&gt;argmax&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.argmin#numpy.argmin&quot;&gt; &lt;code&gt;argmin&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.argpartition#numpy.argpartition&quot;&gt; &lt;code&gt;argpartition&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.argsort#numpy.argsort&quot;&gt; &lt;code&gt;argsort&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.choose#numpy.choose&quot;&gt; &lt;code&gt;choose&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.clip#numpy.clip&quot;&gt; &lt;code&gt;clip&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.compress#numpy.compress&quot;&gt; &lt;code&gt;compress&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.copy#numpy.copy&quot;&gt; &lt;code&gt;copy&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.cumprod#numpy.cumprod&quot;&gt; &lt;code&gt;cumprod&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.cumsum#numpy.cumsum&quot;&gt; &lt;code&gt;cumsum&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.diagonal#numpy.diagonal&quot;&gt; &lt;code&gt;diagonal&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.imag#numpy.imag&quot;&gt; &lt;code&gt;imag&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.amax#numpy.amax&quot;&gt; &lt;code&gt;max&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.mean#numpy.mean&quot;&gt; &lt;code&gt;mean&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.amin#numpy.amin&quot;&gt; &lt;code&gt;min&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.nonzero#numpy.nonzero&quot;&gt; &lt;code&gt;nonzero&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.partition#numpy.partition&quot;&gt; &lt;code&gt;partition&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.prod#numpy.prod&quot;&gt; &lt;code&gt;prod&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.ptp#numpy.ptp&quot;&gt; &lt;code&gt;ptp&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.put#numpy.put&quot;&gt; &lt;code&gt;put&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.ravel#numpy.ravel&quot;&gt; &lt;code&gt;ravel&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.real#numpy.real&quot;&gt; &lt;code&gt;real&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.repeat#numpy.repeat&quot;&gt; &lt;code&gt;repeat&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.reshape#numpy.reshape&quot;&gt; &lt;code&gt;reshape&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.around#numpy.around&quot;&gt; &lt;code&gt;round&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.searchsorted#numpy.searchsorted&quot;&gt; &lt;code&gt;searchsorted&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.sort#numpy.sort&quot;&gt; &lt;code&gt;sort&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.squeeze#numpy.squeeze&quot;&gt; &lt;code&gt;squeeze&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.std#numpy.std&quot;&gt; &lt;code&gt;std&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.sum#numpy.sum&quot;&gt; &lt;code&gt;sum&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.swapaxes#numpy.swapaxes&quot;&gt; &lt;code&gt;swapaxes&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.take#numpy.take&quot;&gt; &lt;code&gt;take&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.trace#numpy.trace&quot;&gt; &lt;code&gt;trace&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.transpose#numpy.transpose&quot;&gt; &lt;code&gt;transpose&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/numpy.var#numpy.var&quot;&gt; &lt;code&gt;var&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f398fd04d9f322afdba477002ec5cde7b5d2d1b" translate="yes" xml:space="preserve">
          <source>For the general case, the iteration works by keeping track of a list of coordinate counters in the iterator object. At each iteration, the last coordinate counter is increased (starting from 0). If this counter is smaller than one less than the size of the array in that dimension (a pre-computed and stored value), then the counter is increased and the dataptr member is increased by the strides in that dimension and the macro ends. If the end of a dimension is reached, the counter for the last dimension is reset to zero and the dataptr is moved back to the beginning of that dimension by subtracting the strides value times one less than the number of elements in that dimension (this is also pre-computed and stored in the backstrides member of the iterator object). In this case, the macro does not end, but a local dimension counter is decremented so that the next-to-last dimension replaces the role that the last dimension played and the previously-described tests are executed again on the next-to-last dimension. In this way, the dataptr is adjusted appropriately for arbitrary striding.</source>
          <target state="translated">对于一般情况,迭代的工作方式是在迭代对象中跟踪坐标计数器的列表。在每次迭代时,最后一个坐标计数器都会增加(从0开始)。如果这个计数器小于一小于该维度中数组的大小(一个预先计算和存储的值),那么计数器就会增加,dataptr成员就会增加该维度中的步长,宏结束。如果到达一个维度的结束,最后一个维度的计数器被重置为零,并且dataptr通过减去strides值乘以该维度中元素数量的1来移动回该维度的开始(这也是预先计算并存储在迭代器对象的backstrides成员中)。在这种情况下,宏并没有结束,而是局部维度计数器被递减,这样下一个到最后一个维度就取代了上一个维度所起的作用,并且之前描述的测试会在下一个到最后一个维度上再次执行。这样一来,dataptr的任意跨度就会得到适当的调整。</target>
        </trans-unit>
        <trans-unit id="a106ff191577f5e49df4ba4a5b92a5dff872216c" translate="yes" xml:space="preserve">
          <source>For the most part, the rules for dispatch with &lt;code&gt;__array_function__&lt;/code&gt; match those for &lt;code&gt;__array_ufunc__&lt;/code&gt;. In particular:</source>
          <target state="translated">在大多数情况下，与调度规则 &lt;code&gt;__array_function__&lt;/code&gt; 匹配那些 &lt;code&gt;__array_ufunc__&lt;/code&gt; 。特别是：</target>
        </trans-unit>
        <trans-unit id="4180b0d2e31dfed11719fe695b4c67afcfef466f" translate="yes" xml:space="preserve">
          <source>For the parameter types, be as precise as possible. Below are a few examples of parameters and their types.</source>
          <target state="translated">对于参数类型,要尽可能精确。下面是几个参数及其类型的例子。</target>
        </trans-unit>
        <trans-unit id="5aabe002787ac5ab3c2a4862f3aa6c788cd300e2" translate="yes" xml:space="preserve">
          <source>For the typenum macros, the argument is an integer representing an enumerated array data type. For the array type checking macros the argument must be a &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt; that can be directly interpreted as a &lt;a href=&quot;c-api.types-and-structures#c.PyArrayObject&quot;&gt;&lt;code&gt;PyArrayObject *&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于typenum宏，参数是代表枚举数组数据类型的整数。对于数组类型检查宏，参数必须是&lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject *&lt;/code&gt; &lt;/a&gt;，可以直接解释为&lt;a href=&quot;c-api.types-and-structures#c.PyArrayObject&quot;&gt; &lt;code&gt;PyArrayObject *&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="62fce29176d606bc6dce1d1603810532e05edeb2" translate="yes" xml:space="preserve">
          <source>For the typenum macros, the argument is an integer representing an enumerated array data type. For the array type checking macros the argument must be a &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt; that can be directly interpreted as a &lt;a href=&quot;types-and-structures#c.PyArrayObject&quot;&gt;&lt;code&gt;PyArrayObject *&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于typenum宏，参数是表示枚举数组数据类型的整数。对于数组类型检查宏，参数必须是&lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject *&lt;/code&gt; &lt;/a&gt;，可以直接解释为&lt;a href=&quot;types-and-structures#c.PyArrayObject&quot;&gt; &lt;code&gt;PyArrayObject *&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5d3c40fa5c98be8aa15b70b390891bf28a170212" translate="yes" xml:space="preserve">
          <source>For these reasons it is advisable to avoid &lt;code&gt;as_strided&lt;/code&gt; when possible.</source>
          <target state="translated">由于这些原因，建议尽可能避免 &lt;code&gt;as_strided&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb33fc8c29e1bd562bffb815c2697c66a036bae2" translate="yes" xml:space="preserve">
          <source>For these reasons, NumPy provides an API to work with npy_half values accessible by including &amp;lt;numpy/halffloat.h&amp;gt; and linking to &amp;lsquo;npymath&amp;rsquo;. For functions that are not provided directly, such as the arithmetic operations, the preferred method is to convert to float or double and back again, as in the following example.</source>
          <target state="translated">由于这些原因，NumPy提供了一个API，用于通过包含&amp;lt;numpy / halffloat.h&amp;gt;并链接到'npymath'来访问npy_half值。对于不直接提供的功能（例如算术运算），首选方法是将其转换为float或double，然后再次返回，如以下示例所示。</target>
        </trans-unit>
        <trans-unit id="104d0cf2eb8de1110539af70bd2855adaa34b9c0" translate="yes" xml:space="preserve">
          <source>For this example we will only handle the method &lt;code&gt;__call__&lt;/code&gt;</source>
          <target state="translated">对于此示例，我们将仅处理方法 &lt;code&gt;__call__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="684c1e70d951c1d84a7330eb5d5d620e2e0f3ef5" translate="yes" xml:space="preserve">
          <source>For this example we will only handle the method &lt;code&gt;__call__&lt;/code&gt;.</source>
          <target state="translated">对于此示例，我们将仅处理方法 &lt;code&gt;__call__&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c5b0d8b34011752e4113aaa6a6fce2b3c78d19e5" translate="yes" xml:space="preserve">
          <source>For this function to work on sub-classes of ndarray, they must define &lt;a href=&quot;numpy.sum#numpy.sum&quot;&gt;&lt;code&gt;sum&lt;/code&gt;&lt;/a&gt; with the kwarg &lt;code&gt;keepdims&lt;/code&gt;</source>
          <target state="translated">为了使此函数能够对ndarray的子​​类起作用，它们必须使用kwarg &lt;code&gt;keepdims&lt;/code&gt; 定义&lt;a href=&quot;numpy.sum#numpy.sum&quot;&gt; &lt;code&gt;sum&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bffe6d0d22813c5a9e09a6444b12ab5f734f3a30" translate="yes" xml:space="preserve">
          <source>For this reason it is possible to use the output from the np.nonzero() function directly as an index since it always returns a tuple of index arrays.</source>
          <target state="translated">为此,可以直接使用np.nonzero()函数的输出作为索引,因为它总是返回一个索引数组的元组。</target>
        </trans-unit>
        <trans-unit id="c7b38cff3c38a7296ea244a6f149ab3fa89299cb" translate="yes" xml:space="preserve">
          <source>For this reason, it is equivalent to (but faster than) the following use of &lt;a href=&quot;numpy.apply_along_axis#numpy.apply_along_axis&quot;&gt;&lt;code&gt;apply_along_axis&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">因此，它等同于（但比以下速度）&lt;a href=&quot;numpy.apply_along_axis#numpy.apply_along_axis&quot;&gt; &lt;code&gt;apply_along_axis&lt;/code&gt; &lt;/a&gt;的以下用法：</target>
        </trans-unit>
        <trans-unit id="77bbee921f7bbec73ea6da64c3957049942fe48c" translate="yes" xml:space="preserve">
          <source>For this sample array</source>
          <target state="translated">对于这个样本数组</target>
        </trans-unit>
        <trans-unit id="445c5367719257e79fe070e306aba792eba52dd0" translate="yes" xml:space="preserve">
          <source>For tradeoffs among memmap, Zarr, and HDF5, see &lt;a href=&quot;https://pythonspeed.com/articles/mmap-vs-zarr-hdf5/&quot;&gt;pythonspeed.com&lt;/a&gt;.</source>
          <target state="translated">要在memmap，Zarr和HDF5之间进行权衡，请参阅&lt;a href=&quot;https://pythonspeed.com/articles/mmap-vs-zarr-hdf5/&quot;&gt;pythonspeed.com&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ef360ecaea0bceb4141bc860c62269adcea43126" translate="yes" xml:space="preserve">
          <source>For two dimensional arrays, the return will be two arrays ordered by axis. In this example the first array stands for the gradient in rows and the second one in columns direction:</source>
          <target state="translated">对于二维数组,返回的将是两个按轴排序的数组。在这个例子中,第一个数组代表行的梯度,第二个数组代表列的方向。</target>
        </trans-unit>
        <trans-unit id="5688be18895d1ed44e4e4ac9ea5a009f3d8f644d" translate="yes" xml:space="preserve">
          <source>For ufuncs dynamically created from python functions, this member holds a reference to the underlying Python function.</source>
          <target state="translated">对于从python函数动态创建的ufuncs,该成员持有对底层Python函数的引用。</target>
        </trans-unit>
        <trans-unit id="f51d3a13e3a61d2cfd5f82478bfc77249b90c3e8" translate="yes" xml:space="preserve">
          <source>For ufuncs, it is hoped to eventually deprecate this method in favour of &lt;a href=&quot;#numpy.class.__array_ufunc__&quot;&gt;&lt;code&gt;__array_ufunc__&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于ufuncs，希望最终弃用赞成这种方法&lt;a href=&quot;#numpy.class.__array_ufunc__&quot;&gt; &lt;code&gt;__array_ufunc__&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1700b828b7fc4fece4693f8692514304a9ff235c" translate="yes" xml:space="preserve">
          <source>For uniformity in handling operands, NumPy treats a &lt;a href=&quot;reference/arrays.scalars&quot;&gt;scalar&lt;/a&gt; as an array of zero dimension.</source>
          <target state="translated">为了统一处理操作数，NumPy将&lt;a href=&quot;reference/arrays.scalars&quot;&gt;标量&lt;/a&gt;视为零维数组。</target>
        </trans-unit>
        <trans-unit id="3fec4c12c09d2caf632487f32e741d15fde50a70" translate="yes" xml:space="preserve">
          <source>For unpickling.</source>
          <target state="translated">用于解腌。</target>
        </trans-unit>
        <trans-unit id="f5a617d92aada34c5b1b91d32c80426c8f059f29" translate="yes" xml:space="preserve">
          <source>For unsigned integer arrays, the results will also be unsigned. This should not be surprising, as the result is consistent with calculating the difference directly:</source>
          <target state="translated">对于无符号整数数组,结果也将是无符号的。这并不奇怪,因为结果与直接计算差值是一致的。</target>
        </trans-unit>
        <trans-unit id="6e4eba9645d784baff280ba41b2a35d0eb68b9c9" translate="yes" xml:space="preserve">
          <source>For us, what consensus means is that we entrust &lt;em&gt;everyone&lt;/em&gt; with the right to veto any change if they feel it necessary. While this may sound like a recipe for obstruction and pain, this is not what happens. Instead, we find that most people take this responsibility seriously, and only invoke their veto when they judge that a serious problem is being ignored, and that their veto is necessary to protect the project. And in practice, it turns out that such vetoes are almost never formally invoked, because their mere possibility ensures that Contributors are motivated from the start to find some solution that everyone can live with &amp;ndash; thus accomplishing our goal of ensuring that all interested perspectives are taken into account.</source>
          <target state="translated">对我们来说，共识意味着，我们委托&lt;em&gt;所有人&lt;/em&gt;，如果他们认为有必要，则有权否决任何变更。虽然这听起来像是阻塞和疼痛的秘诀，但事实并非如此。取而代之的是，我们发现大多数人都认真对待这一责任，只有在他们认为严重的问题正在被忽略并且他们的否决权对于保护该项目是必要的时候才使用否决权。在实践中，事实证明，这种否决权几乎从来没有被正式引用过，因为它们的可能性只是确保捐助者从一开始就有动力找到每个人都可以接受的解决方案，从而实现了确保所有感兴趣的观点都得到采纳的目标。考虑在内。</target>
        </trans-unit>
        <trans-unit id="4b61801e49c04aeb574dfd6c0384db9e70e2d05c" translate="yes" xml:space="preserve">
          <source>For use if one has reason to manually (re-)set the internal state of the bit generator used by the RandomState instance. By default, RandomState uses the &amp;ldquo;Mersenne Twister&amp;rdquo;&lt;a href=&quot;#r0933ec43c7c9-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; pseudo-random number generating algorithm.</source>
          <target state="translated">如果有理由手动（重新）设置RandomState实例使用的位生成器的内部状态，则可以使用。默认情况下，RandomState使用&amp;ldquo; Mersenne Twister&amp;rdquo; &lt;a href=&quot;#r0933ec43c7c9-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;伪随机数生成算法。</target>
        </trans-unit>
        <trans-unit id="897febe53ee6bd5d25313858b98b8601f29d1bc3" translate="yes" xml:space="preserve">
          <source>For use if one has reason to manually (re-)set the internal state of the bit generator used by the RandomState instance. By default, RandomState uses the &amp;ldquo;Mersenne Twister&amp;rdquo;&lt;a href=&quot;#rd62dfb5ffa26-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; pseudo-random number generating algorithm.</source>
          <target state="translated">如果有理由手动（重新）设置RandomState实例使用的位生成器的内部状态，则可以使用。默认情况下，RandomState使用&amp;ldquo; Mersenne Twister&amp;rdquo; &lt;a href=&quot;#rd62dfb5ffa26-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;伪随机数生成算法。</target>
        </trans-unit>
        <trans-unit id="ea29248ff311f62cfdcca5534fc099ca5bcc6b8e" translate="yes" xml:space="preserve">
          <source>For use if one has reason to manually (re-)set the internal state of the bit generator used by the RandomState instance. By default, RandomState uses the &amp;ldquo;Mersenne Twister&amp;rdquo;&lt;a href=&quot;#rf0f3f75f485b-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; pseudo-random number generating algorithm.</source>
          <target state="translated">如果有理由手动（重新）设置RandomState实例使用的位生成器的内部状态，则可以使用。默认情况下，RandomState使用&amp;ldquo; Mersenne Twister&amp;rdquo; &lt;a href=&quot;#rf0f3f75f485b-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;伪随机数生成算法。</target>
        </trans-unit>
        <trans-unit id="23f7c1942ce335813533514ab6d97be522e99c17" translate="yes" xml:space="preserve">
          <source>For use with &lt;a href=&quot;#c.NPY_ITER_ALLOCATE&quot;&gt;&lt;code&gt;NPY_ITER_ALLOCATE&lt;/code&gt;&lt;/a&gt;, this flag disables allocating an array subtype for the output, forcing it to be a straight ndarray.</source>
          <target state="translated">与&lt;a href=&quot;#c.NPY_ITER_ALLOCATE&quot;&gt; &lt;code&gt;NPY_ITER_ALLOCATE&lt;/code&gt; 一起&lt;/a&gt;使用时，此标志将禁用为输出分配数组子类型，从而将其强制为纯正ndarray。</target>
        </trans-unit>
        <trans-unit id="4f63cfae8856e0c1b4c745d806a5044a1d2050ad" translate="yes" xml:space="preserve">
          <source>For use with &lt;a href=&quot;https://docs.python.org/dev/c-api/arg.html#c.PyArg_ParseTuple&quot;&gt;&lt;code&gt;PyArg_ParseTuple&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">与&lt;a href=&quot;https://docs.python.org/dev/c-api/arg.html#c.PyArg_ParseTuple&quot;&gt; &lt;code&gt;PyArg_ParseTuple&lt;/code&gt; 一起&lt;/a&gt;使用</target>
        </trans-unit>
        <trans-unit id="703ab6c203bc4f7c082f6639ec9949c363231487" translate="yes" xml:space="preserve">
          <source>For use with &lt;code&gt;PyArg_ParseTuple&lt;/code&gt;</source>
          <target state="translated">与 &lt;code&gt;PyArg_ParseTuple&lt;/code&gt; 一起使用</target>
        </trans-unit>
        <trans-unit id="8cb254f53813d4f5ed5d47fcd78786e6b4efd30e" translate="yes" xml:space="preserve">
          <source>For values exactly halfway between rounded decimal values, NumPy rounds to the nearest even value. Thus 1.5 and 2.5 round to 2.0, -0.5 and 0.5 round to 0.0, etc.</source>
          <target state="translated">对于四舍五入的小数点之间正好有一半的值,NumPy会四舍五入到最接近的偶数。因此,1.5和2.5四舍五入到2.0,-0.5和0.5四舍五入到0.0,等等。</target>
        </trans-unit>
        <trans-unit id="30f0a5ecb33fee954cb51300dbd6244641e9062e" translate="yes" xml:space="preserve">
          <source>For values exactly halfway between rounded decimal values, NumPy rounds to the nearest even value. Thus 1.5 and 2.5 round to 2.0, -0.5 and 0.5 round to 0.0, etc. Results may also be surprising due to the inexact representation of decimal fractions in the IEEE floating point standard &lt;a href=&quot;#r907366b089c1-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; and errors introduced when scaling by powers of ten.</source>
          <target state="translated">对于恰好介于四舍五入的十进制值之间的值，NumPy会四舍五入为最接近的偶数。因此，将1.5和2.5舍入为2.0，将-0.5和0.5舍入为0.0，等等。由于IEEE浮点标准&lt;a href=&quot;#r907366b089c1-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;中小数部分的不精确表示以及以10的幂进行缩放时引入的误差，结果也可能令人惊讶。</target>
        </trans-unit>
        <trans-unit id="a7513a1115d30c3b715a3ca9a5ba6b73db8ad275" translate="yes" xml:space="preserve">
          <source>For values of &lt;code&gt;ord &amp;lt; 1&lt;/code&gt;, the result is, strictly speaking, not a mathematical &amp;lsquo;norm&amp;rsquo;, but it may still be useful for various numerical purposes.</source>
          <target state="translated">对于 &lt;code&gt;ord &amp;lt; 1&lt;/code&gt; 值，严格来说，结果不是数学上的&amp;ldquo;范数&amp;rdquo;，但是对于各种数值目的，它仍然可能有用。</target>
        </trans-unit>
        <trans-unit id="4b8df8eb2541671de725aa87916abd483ac03487" translate="yes" xml:space="preserve">
          <source>For values of &lt;code&gt;ord &amp;lt;= 0&lt;/code&gt;, the result is, strictly speaking, not a mathematical &amp;lsquo;norm&amp;rsquo;, but it may still be useful for various numerical purposes.</source>
          <target state="translated">对于 &lt;code&gt;ord &amp;lt;= 0&lt;/code&gt; 的值，严格来说，结果不是数学上的&amp;ldquo;范数&amp;rdquo;，但是对于各种数值目的，它仍然可能有用。</target>
        </trans-unit>
        <trans-unit id="d6c5fe59c42bb96e8794f338a14a9afba25af3e6" translate="yes" xml:space="preserve">
          <source>For vectors (1-D arrays) it computes the ordinary inner-product:</source>
          <target state="translated">对于向量(一维数组),它计算普通的内积。</target>
        </trans-unit>
        <trans-unit id="f31afbaa8abd3ce58c5bf83aec637268a269a63d" translate="yes" xml:space="preserve">
          <source>For vectors &lt;code&gt;x1&lt;/code&gt;, &lt;code&gt;x2&lt;/code&gt;,&amp;hellip;, &amp;lsquo;xn&amp;rsquo; with lengths &lt;code&gt;Ni=len(xi)&lt;/code&gt; , return &lt;code&gt;(N1, N2, N3,...Nn)&lt;/code&gt; shaped arrays if indexing=&amp;rsquo;ij&amp;rsquo; or &lt;code&gt;(N2, N1, N3,...Nn)&lt;/code&gt; shaped arrays if indexing=&amp;rsquo;xy&amp;rsquo; with the elements of &lt;code&gt;xi&lt;/code&gt; repeated to fill the matrix along the first dimension for &lt;code&gt;x1&lt;/code&gt;, the second for &lt;code&gt;x2&lt;/code&gt; and so on.</source>
          <target state="translated">对于长度为 &lt;code&gt;Ni=len(xi)&lt;/code&gt; 的向量 &lt;code&gt;x1&lt;/code&gt; ， &lt;code&gt;x2&lt;/code&gt; ，...，'xn'，如果indexing ='ij'或 &lt;code&gt;(N2, N1, N3,...Nn)&lt;/code&gt; ），则返回 &lt;code&gt;(N1, N2, N3,...Nn)&lt;/code&gt; 形状的数组。 ..Nn）形状的数组，如果index ='xy'，且 &lt;code&gt;xi&lt;/code&gt; 的元素重复出现，则沿 &lt;code&gt;x1&lt;/code&gt; 的第一个维度填充矩阵，沿 &lt;code&gt;x2&lt;/code&gt; 的第二个维度填充矩阵，依此类推。</target>
        </trans-unit>
        <trans-unit id="51b960f61f40e8cc6aeabaf2a1735fbc2b9ac25d" translate="yes" xml:space="preserve">
          <source>For view casting and new-from-template, the equivalent of &lt;code&gt;ndarray.__new__(MySubClass,...&lt;/code&gt; is called, at the C level.</source>
          <target state="translated">对于视图强制转换和新模板，在C级别调用 &lt;code&gt;ndarray.__new__(MySubClass,...&lt;/code&gt; 的等效项。</target>
        </trans-unit>
        <trans-unit id="1f6242c0a79a41aa81490f6fd1ec86280110a2af" translate="yes" xml:space="preserve">
          <source>Force a cast to the output type even if it cannot be done safely. Without this flag, a data cast will occur only if it can be done safely, otherwise an error is raised.</source>
          <target state="translated">即使不能安全地进行数据投射,也要强制投射到输出类型。如果没有这个标志,只有在可以安全地进行数据转换的情况下,才会发生数据转换,否则会引发错误。</target>
        </trans-unit>
        <trans-unit id="d3ec8aad2bec1b3220d7b727c3bf434f0d55bc18" translate="yes" xml:space="preserve">
          <source>Force the mask to hard.</source>
          <target state="translated">把面具逼得很紧。</target>
        </trans-unit>
        <trans-unit id="cd0355317a1ab931fccb7ea5788f7a01c8683490" translate="yes" xml:space="preserve">
          <source>Force the mask to soft.</source>
          <target state="translated">强行将面罩调至柔软。</target>
        </trans-unit>
        <trans-unit id="46e07bf1dcba4f22fb0998d98afd707eecb583d3" translate="yes" xml:space="preserve">
          <source>Format Version 1.0</source>
          <target state="translated">格式1.0版</target>
        </trans-unit>
        <trans-unit id="9c5ba690bca66f9b43bf7dce492a8ecc14116342" translate="yes" xml:space="preserve">
          <source>Format Version 2.0</source>
          <target state="translated">格式2.0版</target>
        </trans-unit>
        <trans-unit id="6d476621018ad05f5efc66b66f9628e71614d77b" translate="yes" xml:space="preserve">
          <source>Format Version 3.0</source>
          <target state="translated">格式3.0版</target>
        </trans-unit>
        <trans-unit id="082aa72e2e80659bc0dafa9d8a6a53207113bd45" translate="yes" xml:space="preserve">
          <source>Format a floating-point scalar as a decimal string in positional notation.</source>
          <target state="translated">将浮点标量以位置记数法格式化为十进制字符串。</target>
        </trans-unit>
        <trans-unit id="63ec1825c81674406abf9c065439398606f8e9c4" translate="yes" xml:space="preserve">
          <source>Format a floating-point scalar as a decimal string in scientific notation.</source>
          <target state="translated">将浮点标量用科学计数法格式化为十进制字符串。</target>
        </trans-unit>
        <trans-unit id="2ba865544cbf6ad122958e97b9cb7e6ee2fca0ce" translate="yes" xml:space="preserve">
          <source>Format string for text file output. Each entry in the array is formatted to text by first converting it to the closest Python type, and then using &amp;ldquo;format&amp;rdquo; % item.</source>
          <target state="translated">文本文件输出的格式字符串。首先将数组中的每个条目转换为最接近的Python类型，然后使用&amp;ldquo; format&amp;rdquo;％item将其格式化为文本。</target>
        </trans-unit>
        <trans-unit id="fa2f2df30c13aa4a41041d5692c011a5dcf268be" translate="yes" xml:space="preserve">
          <source>Formats for &lt;strong&gt;exchanging data&lt;/strong&gt; with other tools include HDF5, Zarr, and NetCDF (see &lt;a href=&quot;#how-to-io-large-arrays&quot;&gt;Write or read large arrays&lt;/a&gt;).</source>
          <target state="translated">与其他工具&lt;strong&gt;交换数据的&lt;/strong&gt;格式包括HDF5，Zarr和NetCDF（请参阅&lt;a href=&quot;#how-to-io-large-arrays&quot;&gt;写入或读取大数组&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a3b7bf2b2380c4418912a52f4b2af945c3ac0459" translate="yes" xml:space="preserve">
          <source>Formatting issues</source>
          <target state="translated">格式化问题</target>
        </trans-unit>
        <trans-unit id="0325ffe49050757f639a952be911aab3da5eaa12" translate="yes" xml:space="preserve">
          <source>Formula writing</source>
          <target state="translated">公式编写</target>
        </trans-unit>
        <trans-unit id="e5a92b78c74fdad3772b95c0bef006808c6f5062" translate="yes" xml:space="preserve">
          <source>Fornberg B. (1988) Generation of Finite Difference Formulas on Arbitrarily Spaced Grids, Mathematics of Computation 51, no. 184 : 699-706. &lt;a href=&quot;http://www.ams.org/journals/mcom/1988-51-184/S0025-5718-1988-0935077-0/S0025-5718-1988-0935077-0.pdf&quot;&gt;PDF&lt;/a&gt;.</source>
          <target state="translated">Fornberg B.（1988）在任意间隔的网格上生成有限差分公式，计算数学51，第1期。184：699-706。&lt;a href=&quot;http://www.ams.org/journals/mcom/1988-51-184/S0025-5718-1988-0935077-0/S0025-5718-1988-0935077-0.pdf&quot;&gt;PDF&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6874cc14b70854fb8cca90f27670bd2abb51cfb5" translate="yes" xml:space="preserve">
          <source>Fornberg B. (1988) Generation of Finite Difference Formulas on Arbitrarily Spaced Grids, Mathematics of Computation 51, no. 184 : 699-706. &lt;a href=&quot;https://www.ams.org/journals/mcom/1988-51-184/S0025-5718-1988-0935077-0/S0025-5718-1988-0935077-0.pdf&quot;&gt;PDF&lt;/a&gt;.</source>
          <target state="translated">Fornberg B.（1988）在任意间隔的网格上生成有限差分公式，计算数学51，第1期。184：699-706。&lt;a href=&quot;https://www.ams.org/journals/mcom/1988-51-184/S0025-5718-1988-0935077-0/S0025-5718-1988-0935077-0.pdf&quot;&gt;PDF&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d1cc558102f286f771795f2da7cbcbf5ba1b6328" translate="yes" xml:space="preserve">
          <source>Fortran 90 module data</source>
          <target state="translated">Fortran 90模块数据</target>
        </trans-unit>
        <trans-unit id="b62f0c388a951d6d6803e4d2dc48f368bb1a5685" translate="yes" xml:space="preserve">
          <source>Fortran assumed shape array and size function support in &lt;code&gt;numpy.f2py&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;numpy.f2py&lt;/code&gt; 中的Fortran假定形状数组和大小函数支持</target>
        </trans-unit>
        <trans-unit id="b756e1ed184faeae9981dd9378f750e8c6c0e04f" translate="yes" xml:space="preserve">
          <source>Fortran files</source>
          <target state="translated">Fortran文件</target>
        </trans-unit>
        <trans-unit id="443b7dd908046f637f8adbdcefe50ee302b6f087" translate="yes" xml:space="preserve">
          <source>Fortran order if all the inputs are Fortran, C otherwise.</source>
          <target state="translated">如果所有输入都是Fortran,则为Fortran顺序,否则为C。</target>
        </trans-unit>
        <trans-unit id="0dbb13a4208640c43e953aa1ecfe0492f9b453d1" translate="yes" xml:space="preserve">
          <source>Fortran order.</source>
          <target state="translated">Fortran命令。</target>
        </trans-unit>
        <trans-unit id="458144d44956123a91798b5242d7c298d549eb1b" translate="yes" xml:space="preserve">
          <source>Fortran source of module / subroutine to compile</source>
          <target state="translated">编译模块/子程序的Fortran源码。</target>
        </trans-unit>
        <trans-unit id="e6b7af163ec1d9df45d457b3365dd7a8bb154117" translate="yes" xml:space="preserve">
          <source>Fortran to Python Interface Generator.</source>
          <target state="translated">Fortran to Python Interface Generator。</target>
        </trans-unit>
        <trans-unit id="c97ded998a0ca595e9b4695a113a861855f88705" translate="yes" xml:space="preserve">
          <source>Fortran-contiguous arrays when data is stored column-wise, i.e. indexing of data as stored in memory starts from the lowest dimension;</source>
          <target state="translated">Fortran连续数组,当数据按列存储时,即存储在内存中的数据的索引从最低维度开始。</target>
        </trans-unit>
        <trans-unit id="3c103a2ce4fa5c4bdfbfca73532b43fd7c1242b6" translate="yes" xml:space="preserve">
          <source>Fortran-order</source>
          <target state="translated">Fortran-order</target>
        </trans-unit>
        <trans-unit id="01f074f9b2b7da2704c7bf16c64348fbe5aff689" translate="yes" xml:space="preserve">
          <source>Fortran/C routine signatures</source>
          <target state="translated">Fortran/C例程签名</target>
        </trans-unit>
        <trans-unit id="fa529d42774f0768730f12bc0880f9965a988000" translate="yes" xml:space="preserve">
          <source>Forward bytes from a subprocess call to the console, without attempting to decode them.</source>
          <target state="translated">将子进程调用的字节转发到控制台,而不试图对它们进行解码。</target>
        </trans-unit>
        <trans-unit id="ececb946a3ffd8fb7cf57101d577f7acf1341e58" translate="yes" xml:space="preserve">
          <source>Forward port changes in the release branch to release notes and release scripts, if any, to master branch.</source>
          <target state="translated">将发布分支中的 port 变更转发给发布说明和发布脚本,如果有的话,转发给主分支。</target>
        </trans-unit>
        <trans-unit id="2982346b57dba0536f8cd38d08e71e22e03b5068" translate="yes" xml:space="preserve">
          <source>Four values of the output are invalid: the first one comes from taking the square root of a negative number, the second from the division by zero, and the last two where the inputs were masked.</source>
          <target state="translated">有四个输出值是无效的:第一个来自于负数的平方根,第二个来自于零的除法,最后两个是输入被掩盖的地方。</target>
        </trans-unit>
        <trans-unit id="f163a620e6be53409bc7d6c8a56980a06cc8552e" translate="yes" xml:space="preserve">
          <source>Fourier analysis is fundamentally a method for expressing a function as a sum of periodic components, and for recovering the function from those components. When both the function and its Fourier transform are replaced with discretized counterparts, it is called the discrete Fourier transform (DFT). The DFT has become a mainstay of numerical computing in part because of a very fast algorithm for computing it, called the Fast Fourier Transform (FFT), which was known to Gauss (1805) and was brought to light in its current form by Cooley and Tukey &lt;a href=&quot;#rfb1dc64dd6a5-ct&quot; id=&quot;id1&quot;&gt;[CT]&lt;/a&gt;. Press et al. &lt;a href=&quot;#rfb1dc64dd6a5-nr&quot; id=&quot;id2&quot;&gt;[NR]&lt;/a&gt; provide an accessible introduction to Fourier analysis and its applications.</source>
          <target state="translated">傅里叶分析从根本上说是一种将函数表示为周期成分之和，并从这些成分中恢复功能的方法。当将函数及其傅立叶变换都替换为离散的对应项时，称为离散傅立叶变换（DFT）。DFT之所以成为数值计算的支柱，部分原因在于它是一种非常快速的计算算法，称为快速傅里叶变换（FFT），它是高斯（1805）所熟知，并由Cooley和图基&lt;a href=&quot;#rfb1dc64dd6a5-ct&quot; id=&quot;id1&quot;&gt;[CT]&lt;/a&gt;。出版社等。&lt;a href=&quot;#rfb1dc64dd6a5-nr&quot; id=&quot;id2&quot;&gt;[NR]&lt;/a&gt;提供了有关Fourier分析及其应用的易于理解的介绍。</target>
        </trans-unit>
        <trans-unit id="69fe683adb41f9ba1a3873187fd6c76482148e01" translate="yes" xml:space="preserve">
          <source>Fourier transform of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">傅立叶变换的 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="55427a60a4bc7584f941291fc8f1c78e3b48892c" translate="yes" xml:space="preserve">
          <source>Fourteen C macros and fifteen C functions that can be used to write specialized typemaps, extensions, or inlined functions that handle cases not covered by the provided typemaps. Note that the macros and functions are coded specifically to work with the NumPy C/API regardless of NumPy version number, both before and after the deprecation of some aspects of the API after version 1.6.</source>
          <target state="translated">14个C语言宏和15个C语言函数,可用于编写专门的类型图、扩展或内联函数,以处理所提供的类型图未覆盖的情况。请注意,这些宏和函数是专门为NumPy C/API编写的,无论NumPy的版本号是什么,无论是在1.6版本之前还是之后API的某些方面被废弃之后。</target>
        </trans-unit>
        <trans-unit id="a55119325a9e50ab95a500e00074b97b1b9e36d5" translate="yes" xml:space="preserve">
          <source>Fractional part of &lt;code&gt;x&lt;/code&gt;. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 的小数部分。如果 &lt;code&gt;x&lt;/code&gt; 是标量，则这是标量。</target>
        </trans-unit>
        <trans-unit id="3ef0af518168c89e00d0d671000eff79ef6d0866" translate="yes" xml:space="preserve">
          <source>Francis Hunt and Paul Johnson, On the Pareto Distribution of Sourceforge projects.</source>
          <target state="translated">Francis Hunt和Paul Johnson,On the Pareto Distribution of Sourceforge projects.</target>
        </trans-unit>
        <trans-unit id="1702d7b8bdd07fbea0c5cab99e1759e69160609f" translate="yes" xml:space="preserve">
          <source>Frequency bins for given FFT parameters.</source>
          <target state="translated">给定FFT参数的频带。</target>
        </trans-unit>
        <trans-unit id="8c7beab7a6d84d3a1004bcc75ccd72648a4866a0" translate="yes" xml:space="preserve">
          <source>Frobenius norm</source>
          <target state="translated">夫罗奔尼乌斯规范</target>
        </trans-unit>
        <trans-unit id="6e155909e8a05199128c1964fad95f6222feb7b1" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://www.kaggle.com/atilamadai/covid19&quot;&gt;Kaggle&lt;/a&gt; it is possible to download a dataset with initial data about the COVID-19 outbreak in the beginning of 2020. We are going to look at a small subset of this data, contained in the file &lt;code&gt;who_covid_19_sit_rep_time_series.csv&lt;/code&gt;.</source>
          <target state="translated">从&lt;a href=&quot;https://www.kaggle.com/atilamadai/covid19&quot;&gt;Kaggle&lt;/a&gt;可以下载包含有关2020年初COVID-19爆发的初始数据的数据集。我们将研究一下其中的一小部分数据，包含在 &lt;code&gt;who_covid_19_sit_rep_time_series.csv&lt;/code&gt; 文件中。</target>
        </trans-unit>
        <trans-unit id="b496ebf456418bea6f72b4dd532369d14b955f9b" translate="yes" xml:space="preserve">
          <source>From Dalgaard page 83 &lt;a href=&quot;#r755c9bae090e-1&quot; id=&quot;id3&quot;&gt;[1]&lt;/a&gt;, suppose the daily energy intake for 11 women in kilojoules (kJ) is:</source>
          <target state="translated">在Dalgaard第83页&lt;a href=&quot;#r755c9bae090e-1&quot; id=&quot;id3&quot;&gt;[1]中&lt;/a&gt;，假设11位女性的每日能量摄入量以千焦耳（kJ）为单位：</target>
        </trans-unit>
        <trans-unit id="aeadfde385f544a91cc8eaeeffa0c5ba93e6dc7d" translate="yes" xml:space="preserve">
          <source>From Dalgaard page 83 &lt;a href=&quot;#r89f5270d198b-1&quot; id=&quot;id3&quot;&gt;[1]&lt;/a&gt;, suppose the daily energy intake for 11 women in kilojoules (kJ) is:</source>
          <target state="translated">在Dalgaard第83页&lt;a href=&quot;#r89f5270d198b-1&quot; id=&quot;id3&quot;&gt;[1]中&lt;/a&gt;，假设11位女性的每日能量摄入量以千焦耳（kJ）为单位：</target>
        </trans-unit>
        <trans-unit id="ddb8d23120bc74b1cfb060aa5332c0996e661cf6" translate="yes" xml:space="preserve">
          <source>From Dalgaard page 83 &lt;a href=&quot;#r9f872b3c913b-1&quot; id=&quot;id3&quot;&gt;[1]&lt;/a&gt;, suppose the daily energy intake for 11 women in kilojoules (kJ) is:</source>
          <target state="translated">在Dalgaard第83页&lt;a href=&quot;#r9f872b3c913b-1&quot; id=&quot;id3&quot;&gt;[1]中&lt;/a&gt;，假设11位女性的每日能量摄入量以千焦耳（kJ）为单位：</target>
        </trans-unit>
        <trans-unit id="449b24b6007276ad9bb465db2968bb8f2f82cb23" translate="yes" xml:space="preserve">
          <source>From Dalgaard page 83 &lt;a href=&quot;#rb7c952f3992e-1&quot; id=&quot;id3&quot;&gt;[1]&lt;/a&gt;, suppose the daily energy intake for 11 women in kilojoules (kJ) is:</source>
          <target state="translated">在Dalgaard第83页&lt;a href=&quot;#rb7c952f3992e-1&quot; id=&quot;id3&quot;&gt;[1]中&lt;/a&gt;，假设11位女性的每日能量摄入量以千焦耳（kJ）为单位：</target>
        </trans-unit>
        <trans-unit id="e91799328361ed7f1f3c997458139cffb3209540" translate="yes" xml:space="preserve">
          <source>From a 4x3 array the corner elements should be selected using advanced indexing. Thus all elements for which the column is one of &lt;code&gt;[0, 2]&lt;/code&gt; and the row is one of &lt;code&gt;[0, 3]&lt;/code&gt; need to be selected. To use advanced indexing one needs to select all elements &lt;em&gt;explicitly&lt;/em&gt;. Using the method explained previously one could write:</source>
          <target state="translated">从4x3数组中，应使用高级索引选择拐角元素。因此 &lt;code&gt;[0, 3]&lt;/code&gt; 需要选择列为[0，2]之一而行为[0，3 &lt;code&gt;[0, 2]&lt;/code&gt; 之一的所有元素。要使用高级索引，需要&lt;em&gt;明确&lt;/em&gt;选择所有元素。使用前面解释的方法，可以编写：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a91be0fd97aa12da8097d28986c00ba2a4f3a53c" translate="yes" xml:space="preserve">
          <source>From a Fortran routine signature F2PY generates a Python/C extension function that has the following signature:</source>
          <target state="translated">从Fortran例程签名F2PY生成一个Python/C扩展函数,它的签名如下。</target>
        </trans-unit>
        <trans-unit id="f43663857b3b074086e6a5458d7eeb8cc710716c" translate="yes" xml:space="preserve">
          <source>From a date and time:</source>
          <target state="translated">从一个日期和时间。</target>
        </trans-unit>
        <trans-unit id="b27ac815b804369e0e908095a8f60fb839b9ffbc" translate="yes" xml:space="preserve">
          <source>From an array, select all rows which sum up to less or equal two:</source>
          <target state="translated">从一个数组中,选择所有加起来小于或等于2的行。</target>
        </trans-unit>
        <trans-unit id="0b1e37af40ab4883a1e4a8a3dc83bcc94bb649dc" translate="yes" xml:space="preserve">
          <source>From each row, a specific element should be selected. The row index is just &lt;code&gt;[0, 1, 2]&lt;/code&gt; and the column index specifies the element to choose for the corresponding row, here &lt;code&gt;[0, 1, 0]&lt;/code&gt;. Using both together the task can be solved using advanced indexing:</source>
          <target state="translated">从每一行中，应选择一个特定元素。行索引仅为 &lt;code&gt;[0, 1, 2]&lt;/code&gt; ，列索引指定要为相应行选择的元素，此处为 &lt;code&gt;[0, 1, 0]&lt;/code&gt; 。两者结合使用可以使用高级索引解决任务：</target>
        </trans-unit>
        <trans-unit id="2bdc929241ee7611d7ce8654d5c0e7a97c5922e2" translate="yes" xml:space="preserve">
          <source>From existing data</source>
          <target state="translated">根据现有数据</target>
        </trans-unit>
        <trans-unit id="1978da17047230ecfb709900d093fe2bc00bb2a8" translate="yes" xml:space="preserve">
          <source>From now on &lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt; will know that &lt;code&gt;my-new-feature&lt;/code&gt; is related to the &lt;code&gt;my-new-feature&lt;/code&gt; branch in your own &lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;github&lt;/a&gt; repo. Subsequent push calls are then simplified to the following:</source>
          <target state="translated">从现在开始，&lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt;将知道 &lt;code&gt;my-new-feature&lt;/code&gt; 与您自己的&lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;github存储库中&lt;/a&gt;的 &lt;code&gt;my-new-feature&lt;/code&gt; 分支相关。随后的推式调用随后简化为以下内容：</target>
        </trans-unit>
        <trans-unit id="0d7dc9b3626b3cb541c458a7c7758c637090adb4" translate="yes" xml:space="preserve">
          <source>From other objects</source>
          <target state="translated">来自其他物体</target>
        </trans-unit>
        <trans-unit id="5dce71950093c2ccd6198a0075dc3e5ee84cb7ec" translate="yes" xml:space="preserve">
          <source>From scratch</source>
          <target state="translated">从零开始</target>
        </trans-unit>
        <trans-unit id="5cb06afc42e126aeee1dca21c5d08d384848538d" translate="yes" xml:space="preserve">
          <source>From the &lt;a href=&quot;../reference/maskedarray.generic#module-numpy.ma&quot;&gt;&lt;code&gt;Reference Guide&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">从&lt;a href=&quot;../reference/maskedarray.generic#module-numpy.ma&quot;&gt; &lt;code&gt;Reference Guide&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="374969a1bf6cf09ab316c531b85ee98729ec817d" translate="yes" xml:space="preserve">
          <source>From the command line:</source>
          <target state="translated">在命令行中:</target>
        </trans-unit>
        <trans-unit id="e8689c1f53f242e3e2ed351ba13d4443b972a335" translate="yes" xml:space="preserve">
          <source>From the output above, we can see that every value in &lt;code&gt;img[:,:,0]&lt;/code&gt; is an integer value between 0 and 255, representing the level of red in each corresponding image pixel (keep in mind that this might be different if you use your own image instead of &lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/generated/scipy.misc.face.html#scipy.misc.face&quot;&gt;&lt;code&gt;scipy.misc.face&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">从上面的输出中，我们可以看到 &lt;code&gt;img[:,:,0]&lt;/code&gt; 中的每个值都是0到255之间的整数值，代表每个对应图像像素中的红色水平（请注意，如果您选择使用您自己的图片而不是&lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/generated/scipy.misc.face.html#scipy.misc.face&quot;&gt; &lt;code&gt;scipy.misc.face&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="487083148a4854e5ec264b4e7603e6d383b8513e" translate="yes" xml:space="preserve">
          <source>From time to time you may want to pull down the latest code. Do this with:</source>
          <target state="translated">你可能会时不时地想拉下最新的代码。具体做法是:</target>
        </trans-unit>
        <trans-unit id="541d68d9d4a26a74b3b1aec38602641c99c42b4f" translate="yes" xml:space="preserve">
          <source>Full broadcasting support for &lt;code&gt;np.cross&lt;/code&gt;</source>
          <target state="translated">全面支持 &lt;code&gt;np.cross&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f6cd09bf0f40761ab28ccaa4cab2a4c6c336752" translate="yes" xml:space="preserve">
          <source>Full indirect sort</source>
          <target state="translated">完全间接排序</target>
        </trans-unit>
        <trans-unit id="b5dd204ac7b63984bfca215999235cdddc1cbe34" translate="yes" xml:space="preserve">
          <source>Full indirect sort.</source>
          <target state="translated">完全间接排序。</target>
        </trans-unit>
        <trans-unit id="c5e895c2415cf527427d487d13723da42a4ffc8d" translate="yes" xml:space="preserve">
          <source>Full path to the package to test.</source>
          <target state="translated">测试包的完整路径。</target>
        </trans-unit>
        <trans-unit id="7d106cfe968d6ee1cdc60bee01550735688b85f7" translate="yes" xml:space="preserve">
          <source>Full sort.</source>
          <target state="translated">完整的排序。</target>
        </trans-unit>
        <trans-unit id="733bce60654becd4d4e1700d743ab7573d5f2742" translate="yes" xml:space="preserve">
          <source>Full sorting</source>
          <target state="translated">全面分类</target>
        </trans-unit>
        <trans-unit id="b375e36a5e2c847719599e1c9bc607f532495b26" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;median&lt;/code&gt; used with &lt;code&gt;overwrite_input&lt;/code&gt; only partially sorts array</source>
          <target state="translated">与 &lt;code&gt;overwrite_input&lt;/code&gt; 一起使用的函数 &lt;code&gt;median&lt;/code&gt; 仅对数组进行部分排序</target>
        </trans-unit>
        <trans-unit id="b35686e8529228454146ad9f9eb6c40fa0abbf7c" translate="yes" xml:space="preserve">
          <source>Function and macro call style: &lt;code&gt;foo(a, b, c)&lt;/code&gt;, no space before the open paren, no spaces inside the parens, no spaces before commas, one space after each comma.</source>
          <target state="translated">函数和宏调用样式： &lt;code&gt;foo(a, b, c)&lt;/code&gt; ，打开括号前没有空格，括号内没有空格，逗号前没有空格，每个逗号后都有一个空格。</target>
        </trans-unit>
        <trans-unit id="f14045db7fd843c69383648cf94f75fb3d176a15" translate="yes" xml:space="preserve">
          <source>Function call</source>
          <target state="translated">函数调用</target>
        </trans-unit>
        <trans-unit id="5fafc2ca93d61a962accac1563a05d9b48e0a23a" translate="yes" xml:space="preserve">
          <source>Function decorator to apply certain suppressions to a whole function.</source>
          <target state="translated">函数装饰器,对整个函数进行一定的抑制。</target>
        </trans-unit>
        <trans-unit id="1ace8a404ff1b1cae179e78198d969ee763553f5" translate="yes" xml:space="preserve">
          <source>Function definition style: function name in column 1, outermost curly braces in column 1, blank line after local variable declarations:</source>
          <target state="translated">函数定义样式:第1栏为函数名,第1栏为最外侧的大括号,局部变量声明后空一行。</target>
        </trans-unit>
        <trans-unit id="eaf873f24ebe960e5f8ab96d1bf1dafec8236126" translate="yes" xml:space="preserve">
          <source>Function documentation</source>
          <target state="translated">功能文件</target>
        </trans-unit>
        <trans-unit id="6611eada8817f5f656a38dbcf1f891cb71be30b3" translate="yes" xml:space="preserve">
          <source>Function operating on ndarrays.</source>
          <target state="translated">对ndarrays进行操作的功能。</target>
        </trans-unit>
        <trans-unit id="7fb4f2de4dfb1639014358c3b7015d9c6a5f5d6b" translate="yes" xml:space="preserve">
          <source>Function pointer from &lt;a href=&quot;#c.NpyIter_GetIterNext&quot;&gt;&lt;code&gt;NpyIter_GetIterNext&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">来自&lt;a href=&quot;#c.NpyIter_GetIterNext&quot;&gt; &lt;code&gt;NpyIter_GetIterNext&lt;/code&gt; 的&lt;/a&gt;函数指针</target>
        </trans-unit>
        <trans-unit id="636b3b392dcabee45d972282bc714f124a2984ee" translate="yes" xml:space="preserve">
          <source>Function that converts a float array to float. Default is &lt;a href=&quot;https://docs.python.org/dev/library/functions.html#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;. Note that this does not seem to do anything useful in the current implementation.</source>
          <target state="translated">将float数组转换为float的函数。默认为&lt;a href=&quot;https://docs.python.org/dev/library/functions.html#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;。注意，这在当前实现中似乎没有任何用处。</target>
        </trans-unit>
        <trans-unit id="25f491198ced438a979dee0c06f7b99f4c27522c" translate="yes" xml:space="preserve">
          <source>Function that converts a float or float array to an integer or integer array. Default is &lt;a href=&quot;https://docs.python.org/dev/library/functions.html#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将float或float数组转换为整数或整数数组的函数。默认为&lt;a href=&quot;https://docs.python.org/dev/library/functions.html#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c1c65cb38bc5533518bfad836c738613691b12bd" translate="yes" xml:space="preserve">
          <source>Function that converts a single float to a string. Default is &lt;code&gt;lambda v:'%24.16e' %v&lt;/code&gt;.</source>
          <target state="translated">将单个float转换为字符串的函数。默认值为 &lt;code&gt;lambda v:'%24.16e' %v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="49e035248ad61f94c49b3411ced40a15d03e994b" translate="yes" xml:space="preserve">
          <source>Function that converts an integer or integer array to a float or float array. Default is &lt;a href=&quot;https://docs.python.org/dev/library/functions.html#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将整数或整数数组转换为float或float数组的函数。默认为&lt;a href=&quot;https://docs.python.org/dev/library/functions.html#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="81aebc7824dc558f5740b2294a8d328bfb265c12" translate="yes" xml:space="preserve">
          <source>Function to apply on the &amp;ldquo;field&amp;rdquo; dimension. This function must support an &lt;code&gt;axis&lt;/code&gt; argument, like np.mean, np.sum, etc.</source>
          <target state="translated">应用于&amp;ldquo;字段&amp;rdquo;维度的功能。此函数必须支持 &lt;code&gt;axis&lt;/code&gt; 参数，例如np.mean，np.sum等。</target>
        </trans-unit>
        <trans-unit id="7cdbff65d2dcd6dbb1f176839d343d5cd6740b77" translate="yes" xml:space="preserve">
          <source>Function to be used to pretty print arrays. The function should expect a single array argument and return a string of the representation of the array. If None, the function is reset to the default NumPy function to print arrays.</source>
          <target state="translated">用于打印数组的函数。该函数应该期望一个数组参数,并返回一个数组的表示形式的字符串,如果None,则该函数被重置为默认的NumPy函数来打印数组。如果为None,则函数被重置为默认的NumPy函数来打印数组。</target>
        </trans-unit>
        <trans-unit id="2e5428e59d421faf071ea47a590fb561ece5a39d" translate="yes" xml:space="preserve">
          <source>Function to calculate only the edges of the bins used by the &lt;a href=&quot;generated/numpy.histogram#numpy.histogram&quot;&gt;&lt;code&gt;histogram&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">仅计算&lt;a href=&quot;generated/numpy.histogram#numpy.histogram&quot;&gt; &lt;code&gt;histogram&lt;/code&gt; &lt;/a&gt;功能使用的仓的边缘的功能。</target>
        </trans-unit>
        <trans-unit id="ecfa9e590ef0d3ed65da85a7cdda1af66b824ea3" translate="yes" xml:space="preserve">
          <source>Function to calculate only the edges of the bins used by the &lt;a href=&quot;numpy.histogram#numpy.histogram&quot;&gt;&lt;code&gt;histogram&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">仅计算&lt;a href=&quot;numpy.histogram#numpy.histogram&quot;&gt; &lt;code&gt;histogram&lt;/code&gt; &lt;/a&gt;功能使用的仓的边缘的功能。</target>
        </trans-unit>
        <trans-unit id="3daae79264ded053c68caf5a77aad1db49558306" translate="yes" xml:space="preserve">
          <source>Function to call upon floating-point errors (&amp;lsquo;call&amp;rsquo;-mode) or object whose &amp;lsquo;write&amp;rsquo; method is used to log such message (&amp;lsquo;log&amp;rsquo;-mode).</source>
          <target state="translated">调用浮点错误的函数（&amp;ldquo;调用&amp;rdquo;模式）或使用&amp;ldquo;写&amp;rdquo;方法记录此类消息的对象（&amp;ldquo;日志&amp;rdquo;模式）。</target>
        </trans-unit>
        <trans-unit id="936e3c682ce34cc0f0f7b3b6776919fc933d5fe1" translate="yes" xml:space="preserve">
          <source>Function which returns a masked inner loop for the ufunc</source>
          <target state="translated">函数,返回ufunc的屏蔽内循环。</target>
        </trans-unit>
        <trans-unit id="deb4e042b9d6249db97e6680ab8276b237985bd9" translate="yes" xml:space="preserve">
          <source>Functional programming</source>
          <target state="translated">功能性方案编制</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="5a31942f8f4b1c24c2cf2f6e11f8f96977c918a6" translate="yes" xml:space="preserve">
          <source>Functions For Iteration</source>
          <target state="translated">迭代函数</target>
        </trans-unit>
        <trans-unit id="c9d64db1884b2fd4f353a105874e4c3957322b65" translate="yes" xml:space="preserve">
          <source>Functions and Methods Overview</source>
          <target state="translated">功能和方法概述</target>
        </trans-unit>
        <trans-unit id="cf6da2fb68f3db64f0a7a53228a8721f52f6134f" translate="yes" xml:space="preserve">
          <source>Functions available from numpy.ma.testutils have changed</source>
          <target state="translated">numpy.ma.testutils中可用的函数有了变化。</target>
        </trans-unit>
        <trans-unit id="b7916ccc48b7ce0f25ff69e01c25e39ce11de03b" translate="yes" xml:space="preserve">
          <source>Functions implementing internal features. Not all of these function pointers must be defined for a given type. The required members are &lt;code&gt;nonzero&lt;/code&gt;, &lt;code&gt;copyswap&lt;/code&gt;, &lt;code&gt;copyswapn&lt;/code&gt;, &lt;code&gt;setitem&lt;/code&gt;, &lt;code&gt;getitem&lt;/code&gt;, and &lt;code&gt;cast&lt;/code&gt;. These are assumed to be non- &lt;code&gt;NULL&lt;/code&gt; and &lt;code&gt;NULL&lt;/code&gt; entries will cause a program crash. The other functions may be &lt;code&gt;NULL&lt;/code&gt; which will just mean reduced functionality for that data-type. (Also, the nonzero function will be filled in with a default function if it is &lt;code&gt;NULL&lt;/code&gt; when you register a user-defined data-type).</source>
          <target state="translated">实现内部功能的功能。并非必须为给定类型定义所有这些函数指针。必需的成员为 &lt;code&gt;nonzero&lt;/code&gt; ， &lt;code&gt;copyswap&lt;/code&gt; ， &lt;code&gt;copyswapn&lt;/code&gt; ， &lt;code&gt;setitem&lt;/code&gt; ， &lt;code&gt;getitem&lt;/code&gt; 和 &lt;code&gt;cast&lt;/code&gt; 。假定它们为非 &lt;code&gt;NULL&lt;/code&gt; ,并且 &lt;code&gt;NULL&lt;/code&gt; 条目将导致程序崩溃。其他功能可能为 &lt;code&gt;NULL&lt;/code&gt; ，这仅意味着该数据类型的功能减少。 （此外，当注册用户定义的数据类型时，如果非零函数为 &lt;code&gt;NULL&lt;/code&gt; ，则将使用默认函数填充该函数）。</target>
        </trans-unit>
        <trans-unit id="f48c175b4673c0bc456bc9f1ba654da2d9542a5c" translate="yes" xml:space="preserve">
          <source>Functions in &lt;code&gt;numpy.random&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;numpy.random&lt;/code&gt; 中的函数</target>
        </trans-unit>
        <trans-unit id="516c584b732d36ebda7d25fae38b326dc6d202ae" translate="yes" xml:space="preserve">
          <source>Functions in numpy.random</source>
          <target state="translated">numpy.random中的函数</target>
        </trans-unit>
        <trans-unit id="c724fd9678ed45fd313d6c7db38a089943643ca5" translate="yes" xml:space="preserve">
          <source>Functions may be listed without descriptions, and this is preferable if the functionality is clear from the function name:</source>
          <target state="translated">函数可以不加说明,如果从函数名称中可以清楚地看出其功能,则最好如此。</target>
        </trans-unit>
        <trans-unit id="786d8b1defa125829799bc249caf1adda1184b6a" translate="yes" xml:space="preserve">
          <source>Functions returning an index along an axis, like &lt;a href=&quot;numpy.argsort#numpy.argsort&quot;&gt;&lt;code&gt;argsort&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;numpy.argpartition#numpy.argpartition&quot;&gt;&lt;code&gt;argpartition&lt;/code&gt;&lt;/a&gt;, produce suitable indices for this function.</source>
          <target state="translated">沿轴返回索引的函数（例如&lt;a href=&quot;numpy.argsort#numpy.argsort&quot;&gt; &lt;code&gt;argsort&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;numpy.argpartition#numpy.argpartition&quot;&gt; &lt;code&gt;argpartition&lt;/code&gt; &lt;/a&gt;）会为此函数生成合适的索引。</target>
        </trans-unit>
        <trans-unit id="7961218e053edec8b5fc62ef3005af10a3415803" translate="yes" xml:space="preserve">
          <source>Functions that are also in the numpy namespace and return matrices</source>
          <target state="translated">同样在numpy命名空间中并返回矩阵的函数。</target>
        </trans-unit>
        <trans-unit id="95335a3a51e2f80868a95521fb5668b275263818" translate="yes" xml:space="preserve">
          <source>Functions that don&amp;rsquo;t accept keyword arguments should be written as:</source>
          <target state="translated">不接受关键字参数的函数应写为：</target>
        </trans-unit>
        <trans-unit id="7d214954501f7e7519692e45acb1bf64805c41e6" translate="yes" xml:space="preserve">
          <source>Functions that operate element by element on whole arrays.</source>
          <target state="translated">对整个数组进行逐元素操作的函数。</target>
        </trans-unit>
        <trans-unit id="f7888c5dcdff069b34a3486459892edd2f262c97" translate="yes" xml:space="preserve">
          <source>Functions with keyword arguments</source>
          <target state="translated">带有关键字参数的函数</target>
        </trans-unit>
        <trans-unit id="6020fb8e5272b3356bebe72ae19a144383754b4e" translate="yes" xml:space="preserve">
          <source>Functions without keyword arguments</source>
          <target state="translated">没有关键字参数的函数</target>
        </trans-unit>
        <trans-unit id="6dad1764839322eb03eab6b07936a589482f90c1" translate="yes" xml:space="preserve">
          <source>Fundraising</source>
          <target state="translated">Fundraising</target>
        </trans-unit>
        <trans-unit id="4647f887db448ba6bb11f7136147a60fabe16fc4" translate="yes" xml:space="preserve">
          <source>Further Numeric Style types Deprecated</source>
          <target state="translated">更多的数字样式类型 弃用</target>
        </trans-unit>
        <trans-unit id="6da76886d65d87e4650f5c14ec791f8c2f676112" translate="yes" xml:space="preserve">
          <source>Further explanation of the &lt;code&gt;fmt&lt;/code&gt; parameter (&lt;code&gt;%[flag]width[.precision]specifier&lt;/code&gt;):</source>
          <target state="translated">关于 &lt;code&gt;fmt&lt;/code&gt; 参数（ &lt;code&gt;%[flag]width[.precision]specifier&lt;/code&gt; ）的进一步说明：</target>
        </trans-unit>
        <trans-unit id="3abcbfb793b7e40f09b0f5479b45936952f0ec59" translate="yes" xml:space="preserve">
          <source>Further improvements to &lt;code&gt;ctypes&lt;/code&gt; support in &lt;code&gt;np.ctypeslib&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;np.ctypeslib&lt;/code&gt; 中对 &lt;code&gt;ctypes&lt;/code&gt; 支持的进一步改进</target>
        </trans-unit>
        <trans-unit id="8b7e1185b0b79852815db7f42a86a47fec5e9990" translate="yes" xml:space="preserve">
          <source>Further improvements to &lt;code&gt;ctypes&lt;/code&gt; support in &lt;code&gt;numpy.ctypeslib&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;numpy.ctypeslib&lt;/code&gt; 中对 &lt;code&gt;ctypes&lt;/code&gt; 支持的进一步改进</target>
        </trans-unit>
        <trans-unit id="f8a0b7626837b22f011ce8c7c63d65ca89984821" translate="yes" xml:space="preserve">
          <source>Further members are considered private and version dependend. If the size of the struct is important for your code, special care must be taken. A possible use-case when this is relevant is subclassing in C. If your code relies on &lt;code&gt;sizeof(PyArrayObject)&lt;/code&gt; to be constant, you must add the following check at import time:</source>
          <target state="translated">进一步的成员被视为私有成员，并且版本依赖。如果结构的大小对您的代码很重要，则必须格外小心。一个与此相关的可能用例是C中的子类。如果您的代码依赖 &lt;code&gt;sizeof(PyArrayObject)&lt;/code&gt; 为常数，则必须在导入时添加以下检查：</target>
        </trans-unit>
        <trans-unit id="0e44c8b638baa470dbb5f127964c092cc77ea465" translate="yes" xml:space="preserve">
          <source>Further reading</source>
          <target state="translated">进一步阅读</target>
        </trans-unit>
        <trans-unit id="fad9659f7e2980db9b405ad20b3c5294ccc96416" translate="yes" xml:space="preserve">
          <source>Further, note how &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are combined:</source>
          <target state="translated">此外，请注意 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的组合方式：</target>
        </trans-unit>
        <trans-unit id="9af0aaaf4de03972531671e0eb9bb87000ba4e1d" translate="yes" xml:space="preserve">
          <source>Furthermore, arrays created with this function often contain self overlapping memory, so that two elements are identical. Vectorized write operations on such arrays will typically be unpredictable. They may even give different results for small, large, or transposed arrays. Since writing to these arrays has to be tested and done with great care, you may want to use &lt;code&gt;writeable=False&lt;/code&gt; to avoid accidental write operations.</source>
          <target state="translated">此外，使用此函数创建的数组通常包含自重叠内存，因此两个元素相同。这种阵列上的向量化写操作通常是不可预测的。对于小型，大型或转置阵列，它们甚至可能给出不同的结果。由于必须非常仔细地测试和完成对这些数组的写入操作，因此您可能希望使用 &lt;code&gt;writeable=False&lt;/code&gt; 以避免意外的写入操作。</target>
        </trans-unit>
        <trans-unit id="12143faa25aabfe7fe468016abec86297c6fcf15" translate="yes" xml:space="preserve">
          <source>Furthermore, numpy now provides a new function &lt;a href=&quot;#numpy.lib.recfunctions.structured_to_unstructured&quot;&gt;&lt;code&gt;numpy.lib.recfunctions.structured_to_unstructured&lt;/code&gt;&lt;/a&gt; which is a safer and more efficient alternative for users who wish to convert structured arrays to unstructured arrays, as the view above is often indeded to do. This function allows safe conversion to an unstructured type taking into account padding, often avoids a copy, and also casts the datatypes as needed, unlike the view. Code such as:</source>
          <target state="translated">此外，numpy现在提供了一个新函数&lt;a href=&quot;#numpy.lib.recfunctions.structured_to_unstructured&quot;&gt; &lt;code&gt;numpy.lib.recfunctions.structured_to_unstructured&lt;/code&gt; &lt;/a&gt;，对于希望将结构化数组转换为非结构化数组的用户而言，它是一种更安全，更有效的替代方法，正如上面的观点通常如此。此功能允许在考虑填充的情况下安全地转换为非结构化类型，通常避免复制，并且还根据需要强制转换数据类型，这与视图不同。代码如：</target>
        </trans-unit>
        <trans-unit id="4f84a7ca85b2fada9bdf949e608abf006366bb0e" translate="yes" xml:space="preserve">
          <source>Furthermore, the callback function is of the same type as before, &lt;code&gt;void (*foo)(char **args, intp *dimensions, intp *steps, void *func)&lt;/code&gt;. When invoked, &lt;code&gt;args&lt;/code&gt; is a list of length &lt;code&gt;nargs&lt;/code&gt; containing the data of all input/output arguments. For a scalar elementary function, &lt;code&gt;steps&lt;/code&gt; is also of length &lt;code&gt;nargs&lt;/code&gt;, denoting the strides used for the arguments. &lt;code&gt;dimensions&lt;/code&gt; is a pointer to a single integer defining the size of the axis to be looped over.</source>
          <target state="translated">此外，回调函数与以前的类型相同，即 &lt;code&gt;void (*foo)(char **args, intp *dimensions, intp *steps, void *func)&lt;/code&gt; 。调用时， &lt;code&gt;args&lt;/code&gt; 是长度为 &lt;code&gt;nargs&lt;/code&gt; 的列表，其中包含所有输入/输出参数的数据。对于标量基本函数， &lt;code&gt;steps&lt;/code&gt; 的长度也为 &lt;code&gt;nargs&lt;/code&gt; ，表示用于自变量的步幅。 &lt;code&gt;dimensions&lt;/code&gt; 是指向单个整数的指针，该整数定义了要循环的轴的大小。</target>
        </trans-unit>
        <trans-unit id="c462e5cfdac7c4df78636f70346d506c3e424749" translate="yes" xml:space="preserve">
          <source>Furthermore, using the &lt;code&gt;ndim&lt;/code&gt; property of this array, we can see that</source>
          <target state="translated">此外，使用此数组的 &lt;code&gt;ndim&lt;/code&gt; 属性，我们可以看到</target>
        </trans-unit>
        <trans-unit id="22552b8bf29fce0c52d5fcd39548010b9e76338c" translate="yes" xml:space="preserve">
          <source>Future Changes</source>
          <target state="translated">未来的变化</target>
        </trans-unit>
        <trans-unit id="acb0dc3b9f8b3f5bdca8fc1d87183e1bba912790" translate="yes" xml:space="preserve">
          <source>Future changes</source>
          <target state="translated">未来的变化</target>
        </trans-unit>
        <trans-unit id="b7285e0cef5e4daf805eb913ea140d9a03dc8d07" translate="yes" xml:space="preserve">
          <source>Future value</source>
          <target state="translated">未来价值</target>
        </trans-unit>
        <trans-unit id="0d44fa727f9b3f4d912a98a3e170b462f52557e6" translate="yes" xml:space="preserve">
          <source>Future value (default = 0)</source>
          <target state="translated">未来值(默认值=0</target>
        </trans-unit>
        <trans-unit id="ba4092807d491bea64803fff0c7e477eac372847" translate="yes" xml:space="preserve">
          <source>Future values. If all input is scalar, returns a scalar float. If any input is array_like, returns future values for each input element. If multiple inputs are array_like, they all must have the same shape.</source>
          <target state="translated">未来值。如果所有输入都是标量,返回一个标量浮点数。如果任何输入是array_like,返回每个输入元素的未来值。如果多个输入是array_like,它们必须具有相同的形状。</target>
        </trans-unit>
        <trans-unit id="722af3dc654f5b03462276f1ddc84a2ecf2baa12" translate="yes" xml:space="preserve">
          <source>Future very uncertain: it&amp;rsquo;s the only part of Scipy not ported to Python 3 and is effectively deprecated in favor of Cython.</source>
          <target state="translated">未来非常不确定：这是Scipy唯一未移植到Python 3的部分，实际上已弃用Cython。</target>
        </trans-unit>
        <trans-unit id="d739c24bbd3b77640efa7aa653675284eae750ca" translate="yes" xml:space="preserve">
          <source>FutureWarning to changed behavior</source>
          <target state="translated">未来预警到改变行为</target>
        </trans-unit>
        <trans-unit id="a6cee77152a751b028de81f7755bdc87bacc5925" translate="yes" xml:space="preserve">
          <source>FutureWarnings</source>
          <target state="translated">FutureWarnings</target>
        </trans-unit>
        <trans-unit id="a36a6718f54524d846894fb04b5b885b4e43e63b" translate="yes" xml:space="preserve">
          <source>G</source>
          <target state="translated">G</target>
        </trans-unit>
        <trans-unit id="2f44d78e0bf8d58385fdcde50f5d5e7baff3d944" translate="yes" xml:space="preserve">
          <source>G. H. Golub and C. F. Van Loan, &lt;em&gt;Matrix Computations&lt;/em&gt;, Baltimore, MD, Johns Hopkins University Press, 1985, pg. 15</source>
          <target state="translated">GH Golub和CF Van Loan，《&lt;em&gt;矩阵计算》&lt;/em&gt;，马里兰州巴尔的摩，约翰&amp;middot;霍普金斯大学出版社，1985年，第13页。15</target>
        </trans-unit>
        <trans-unit id="cbd53064adb7ff38d27c336291f9eaba7270aacd" translate="yes" xml:space="preserve">
          <source>G. Strang, &amp;ldquo;Linear Algebra and Its Applications, 2nd Edition,&amp;rdquo; Academic Press, pg. 182, 1980.</source>
          <target state="translated">G. Strang，&amp;ldquo;线性代数及其应用，第二版&amp;rdquo;，学术出版社，第3页。182，1980。</target>
        </trans-unit>
        <trans-unit id="0fee945837fcad5efdf449e24366c4e1f7b65d37" translate="yes" xml:space="preserve">
          <source>G. Strang, &lt;em&gt;Linear Algebra and Its Applications&lt;/em&gt;, 2nd Ed., Orlando, FL, Academic Press, Inc., 1980, Various pp.</source>
          <target state="translated">G.Strang，《&lt;em&gt;线性代数及其应用》&lt;/em&gt;，第二版，佛罗里达州奥兰多，Academic Press，Inc.，1980年，第pp。</target>
        </trans-unit>
        <trans-unit id="4d62050a6efa830b0646c86cf65d2a276c097206" translate="yes" xml:space="preserve">
          <source>G. Strang, &lt;em&gt;Linear Algebra and Its Applications&lt;/em&gt;, 2nd Ed., Orlando, FL, Academic Press, Inc., 1980, pg. 22.</source>
          <target state="translated">G.Strang，&amp;ldquo; &lt;em&gt;线性代数及其应用&amp;rdquo;&lt;/em&gt;，第二版，佛罗里达州奥兰多，Academic Press，Inc.，1980年，第5页。22</target>
        </trans-unit>
        <trans-unit id="8a5685424a4a906ee371dfacdea6a5b47dc7b3ff" translate="yes" xml:space="preserve">
          <source>G. Strang, &lt;em&gt;Linear Algebra and Its Applications&lt;/em&gt;, 2nd Ed., Orlando, FL, Academic Press, Inc., 1980, pg. 222.</source>
          <target state="translated">G.Strang，&amp;ldquo; &lt;em&gt;线性代数及其应用&amp;rdquo;&lt;/em&gt;，第二版，佛罗里达州奥兰多，Academic Press，Inc.，1980年，第5页。222。</target>
        </trans-unit>
        <trans-unit id="db937a0ed23b9cf712fadda8ce2d53e90fb3fb34" translate="yes" xml:space="preserve">
          <source>G. Strang, &lt;em&gt;Linear Algebra and Its Applications&lt;/em&gt;, 2nd Ed., Orlando, FL, Academic Press, Inc., 1980, pp. 139-142.</source>
          <target state="translated">G.Strang，《&lt;em&gt;线性代数及其应用》&lt;/em&gt;，第二版，佛罗里达州奥兰多，Academic Press，Inc.，1980，第139-142页。</target>
        </trans-unit>
        <trans-unit id="d923f5047de7db54bb0494345e02c3e60011f631" translate="yes" xml:space="preserve">
          <source>G. Strang, &lt;em&gt;Linear Algebra and Its Applications&lt;/em&gt;, Orlando, FL, Academic Press, Inc., 1980, pg. 285.</source>
          <target state="translated">G. Strang，《&lt;em&gt;线性代数及其应用》&lt;/em&gt;，佛罗里达州奥兰多市，Academic Press，Inc.，1980年，第1页。285。</target>
        </trans-unit>
        <trans-unit id="2fe46435d8800606efbbb4738ea49577e004f01c" translate="yes" xml:space="preserve">
          <source>GUfuncs on empty arrays and NpyIter axis removal</source>
          <target state="translated">空数组的GUfuncs和NpyIter轴删除</target>
        </trans-unit>
        <trans-unit id="e8a5e73fba8665db50a8e3577ecf8eb28b80e421" translate="yes" xml:space="preserve">
          <source>Gammas</source>
          <target state="translated">Gammas</target>
        </trans-unit>
        <trans-unit id="d85fb4eb9b5275137b92e9c14d3dd2b6f13641af" translate="yes" xml:space="preserve">
          <source>Gather</source>
          <target state="translated">Gather</target>
        </trans-unit>
        <trans-unit id="027498996e260dbd9c33778f3168019dfde3d4cc" translate="yes" xml:space="preserve">
          <source>Gauss-Chebyshev quadrature.</source>
          <target state="translated">高斯-切比雪夫方块。</target>
        </trans-unit>
        <trans-unit id="372d4c8be97b59c2965354454eaf80e844e74e50" translate="yes" xml:space="preserve">
          <source>Gauss-Hermite quadrature.</source>
          <target state="translated">高斯-赫米特方块。</target>
        </trans-unit>
        <trans-unit id="90aa100cf157ec594ce20f650ca9a1d9019f03be" translate="yes" xml:space="preserve">
          <source>Gauss-HermiteE quadrature.</source>
          <target state="translated">高斯-赫米特E方块。</target>
        </trans-unit>
        <trans-unit id="9d10f081127b50e1f17e0a5c3971976017840cbe" translate="yes" xml:space="preserve">
          <source>Gauss-Laguerre quadrature.</source>
          <target state="translated">高斯-拉盖尔正交。</target>
        </trans-unit>
        <trans-unit id="88f1f37c698b12eaffdc9bbccbc77d8b6246ccd8" translate="yes" xml:space="preserve">
          <source>Gauss-Legendre quadrature.</source>
          <target state="translated">高斯-列根德雷正交。</target>
        </trans-unit>
        <trans-unit id="9239ee2cda84eca4c3440e2a7b50148af67da3d4" translate="yes" xml:space="preserve">
          <source>General</source>
          <target state="translated">General</target>
        </trans-unit>
        <trans-unit id="0cffb2d4275e42dba57746961ea67052aaeef334" translate="yes" xml:space="preserve">
          <source>General Broadcasting Rules</source>
          <target state="translated">一般广播规则</target>
        </trans-unit>
        <trans-unit id="a2ff3c8e4686a4c021328dd784ede1cb72d7755f" translate="yes" xml:space="preserve">
          <source>General Purpose Equivalents</source>
          <target state="translated">一般用途等价物</target>
        </trans-unit>
        <trans-unit id="0d731fc16d10c539de3eb06ab7ca854e8f4dd60e" translate="yes" xml:space="preserve">
          <source>General check of Python Type</source>
          <target state="translated">Python类型的一般检查</target>
        </trans-unit>
        <trans-unit id="e9497e2601f7c982d6f4ec6cdfd6bc52f316c4cf" translate="yes" xml:space="preserve">
          <source>General purpose equivalents</source>
          <target state="translated">一般用途对应物</target>
        </trans-unit>
        <trans-unit id="1b31f308f2ce85a33700b95c3da21fcb018ed716" translate="yes" xml:space="preserve">
          <source>General purpose exception class, derived from Python&amp;rsquo;s exception.Exception class, programmatically raised in linalg functions when a Linear Algebra-related condition would prevent further correct execution of the function.</source>
          <target state="translated">从Python的exception.Exception类派生的通用异常类，在与线性代数相关的条件会阻止函数进一步正确执行时，在linalg函数中以编程方式引发。</target>
        </trans-unit>
        <trans-unit id="6a5d5977ff7dabeb26104f13133251775857ac24" translate="yes" xml:space="preserve">
          <source>Generalised matrix product, using second last dimension of &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">广义矩阵乘积，使用 &lt;code&gt;b&lt;/code&gt; 的倒数第二个维。</target>
        </trans-unit>
        <trans-unit id="172636dd07a5cf344fc718f14e5f8bac9163a8d1" translate="yes" xml:space="preserve">
          <source>Generalized &lt;code&gt;flip&lt;/code&gt;</source>
          <target state="translated">通用 &lt;code&gt;flip&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d7eab60b5c5966c3521dbaae99dc8efbf97f6cb" translate="yes" xml:space="preserve">
          <source>Generalized Ufuncs will now unlock the GIL</source>
          <target state="translated">一般化的Ufuncs现在将解锁GIL</target>
        </trans-unit>
        <trans-unit id="9332c2d546d63dda92dba61cafe3df82f0dd8b19" translate="yes" xml:space="preserve">
          <source>Generalized Universal Function API</source>
          <target state="translated">通用函数API</target>
        </trans-unit>
        <trans-unit id="e299d19ac7292c1bf7156bae2d6dd21bd9fba291" translate="yes" xml:space="preserve">
          <source>Generalized axis support for median and percentile</source>
          <target state="translated">中位数和百分位数的通用轴心支持率</target>
        </trans-unit>
        <trans-unit id="04b50941190dd87fa655dc29ac5df20dd7d7c66f" translate="yes" xml:space="preserve">
          <source>Generalized function class.</source>
          <target state="translated">通用函数类。</target>
        </trans-unit>
        <trans-unit id="1a1bc0e8d9d246a721e301167a79c68d6cdef5b2" translate="yes" xml:space="preserve">
          <source>Generalized ufunc signatures now allow fixed-size dimensions</source>
          <target state="translated">通用的ufunc签名现在允许固定尺寸的签名。</target>
        </trans-unit>
        <trans-unit id="d2d28b03b171fb860aee83a82f532e58c4e9fba3" translate="yes" xml:space="preserve">
          <source>Generalized ufunc signatures now allow flexible dimensions</source>
          <target state="translated">通用ufunc签名现在允许灵活的尺寸</target>
        </trans-unit>
        <trans-unit id="0046ab62e86cdc207bdc51ed66f39ae439778565" translate="yes" xml:space="preserve">
          <source>Generalized ufuncs</source>
          <target state="translated">一般化的ufuncs</target>
        </trans-unit>
        <trans-unit id="66a042cdeb42f3ae672017ab4c672646772ccf00" translate="yes" xml:space="preserve">
          <source>Generalized ufuncs are used internally in many linalg functions, and in the testing suite; the examples below are taken from these. For ufuncs that operate on scalars, the signature is &lt;code&gt;None&lt;/code&gt;, which is equivalent to &amp;lsquo;()&amp;rsquo; for every argument.</source>
          <target state="translated">通用ufunc在内部的许多Linalg函数和测试套件中使用。以下示例摘自这些。对于按标量操作的ufunc，其签名为 &lt;code&gt;None&lt;/code&gt; ，每个参数等效于'（）'。</target>
        </trans-unit>
        <trans-unit id="b0078c3e5a20e2fad81f2acb827abe758030ac9d" translate="yes" xml:space="preserve">
          <source>Generalized ufuncs are used internally in many linalg functions, and in the testing suite; the examples below are taken from these. For ufuncs that operate on scalars, the signature is None, which is equivalent to &amp;lsquo;()&amp;rsquo; for every argument.</source>
          <target state="translated">通用ufunc在内部的许多Linalg函数和测试套件中使用。以下示例摘自这些。对于按标量操作的ufunc，签名为None（无），每个参数都等效于'（）'。</target>
        </trans-unit>
        <trans-unit id="bf9c0fe98002f4322da923b10684f6d5d099ff33" translate="yes" xml:space="preserve">
          <source>Generalized ufuncs now accept &lt;code&gt;axes&lt;/code&gt;, &lt;code&gt;axis&lt;/code&gt; and &lt;code&gt;keepdims&lt;/code&gt; arguments</source>
          <target state="translated">广义ufuncs现在接受 &lt;code&gt;axes&lt;/code&gt; ， &lt;code&gt;axis&lt;/code&gt; 和 &lt;code&gt;keepdims&lt;/code&gt; 参数</target>
        </trans-unit>
        <trans-unit id="d96ae300222cf76379f354819a4df06d3fbfa490" translate="yes" xml:space="preserve">
          <source>Generalized universal function signature, e.g., &lt;code&gt;(m,n),(n)-&amp;gt;(m)&lt;/code&gt; for vectorized matrix-vector multiplication. If provided, &lt;code&gt;pyfunc&lt;/code&gt; will be called with (and expected to return) arrays with shapes given by the size of corresponding core dimensions. By default, &lt;code&gt;pyfunc&lt;/code&gt; is assumed to take scalars as input and output.</source>
          <target state="translated">通用通用函数签名，例如 &lt;code&gt;(m,n),(n)-&amp;gt;(m)&lt;/code&gt; ,用于向量化矩阵-矢量乘法。如果提供 &lt;code&gt;pyfunc&lt;/code&gt; ,将使用具有（由预期的返回）形状由相应核心尺寸的大小给定的数组调用。默认情况下，假定 &lt;code&gt;pyfunc&lt;/code&gt; 将标量用作输入和输出。</target>
        </trans-unit>
        <trans-unit id="4bdfd56723e2a4630d0aa40f0eab7e7e821379e3" translate="yes" xml:space="preserve">
          <source>Generally speaking, what is returned when index arrays are used is an array with the same shape as the index array, but with the type and values of the array being indexed. As an example, we can use a multidimensional index array instead:</source>
          <target state="translated">一般来说,当使用索引数组时,返回的是一个与索引数组形状相同的数组,但被索引数组的类型和值。举个例子,我们可以用一个多维索引数组来代替。</target>
        </trans-unit>
        <trans-unit id="2257faa28ea2af0838b36329ac81b4299b5a11a1" translate="yes" xml:space="preserve">
          <source>Generally, the file needs to be generated during the build, since it needs some information known at build time only (e.g. prefix). This is mostly automatic if one uses the &lt;a href=&quot;#numpy.distutils.misc_util.Configuration&quot;&gt;&lt;code&gt;Configuration&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;add_npy_pkg_config&lt;/code&gt;. Assuming we have a template file foo.ini.in as follows:</source>
          <target state="translated">通常，文件需要在构建期间生成，因为它只需要一些在构建时就知道的信息（例如前缀）。如果使用&lt;a href=&quot;#numpy.distutils.misc_util.Configuration&quot;&gt; &lt;code&gt;Configuration&lt;/code&gt; &lt;/a&gt;方法 &lt;code&gt;add_npy_pkg_config&lt;/code&gt; ,这几乎是自动的。假设我们有一个模板文件foo.ini.in，如下所示：</target>
        </trans-unit>
        <trans-unit id="57b3bfe4a96aaf1f0210aadbf43dc393e3a362c6" translate="yes" xml:space="preserve">
          <source>Generally, the file needs to be generated during the build, since it needs some information known at build time only (e.g. prefix). This is mostly automatic if one uses the &lt;code&gt;Configuration&lt;/code&gt; method &lt;code&gt;add_npy_pkg_config&lt;/code&gt;. Assuming we have a template file foo.ini.in as follows:</source>
          <target state="translated">通常，文件需要在构建期间生成，因为它只需要一些在构建时就已知的信息（例如前缀）。如果使用 &lt;code&gt;Configuration&lt;/code&gt; 方法 &lt;code&gt;add_npy_pkg_config&lt;/code&gt; ,这通常是自动的。假设我们有一个模板文件foo.ini.in，如下所示：</target>
        </trans-unit>
        <trans-unit id="ba56532a4a3fb8146e876e1d3659dfdac724a189" translate="yes" xml:space="preserve">
          <source>Generate a 1 by 3 array with 3 different lower bounds</source>
          <target state="translated">生成一个具有3个不同下限的1乘3数组。</target>
        </trans-unit>
        <trans-unit id="3724c74e69c85b7924eab36b9e17078ea85e817c" translate="yes" xml:space="preserve">
          <source>Generate a 1 x 3 array with 3 different upper bounds</source>
          <target state="translated">生成一个具有3个不同上界的1×3数组。</target>
        </trans-unit>
        <trans-unit id="c78b4920f6305013e33283131f3991e4d5dda157" translate="yes" xml:space="preserve">
          <source>Generate a 2 by 4 array using broadcasting with dtype of uint8</source>
          <target state="translated">用dtype为uint8的广播生成一个2乘4的数组。</target>
        </trans-unit>
        <trans-unit id="52ec8bca285ae5da030ea4680d276692f61c3804" translate="yes" xml:space="preserve">
          <source>Generate a 2 x 4 array of ints between 0 and 4, inclusive:</source>
          <target state="translated">生成一个介于0和4之间的2×4的ints数组。</target>
        </trans-unit>
        <trans-unit id="9e541c44f7aa5d7ed7acb09f3c0fe019e268af5e" translate="yes" xml:space="preserve">
          <source>Generate a Chebyshev series with given roots.</source>
          <target state="translated">用给定的根生成一个切比雪夫数列。</target>
        </trans-unit>
        <trans-unit id="0c791c1439e16e2fd0efb50c6644249b5b3eebb5" translate="yes" xml:space="preserve">
          <source>Generate a Hermite series with given roots.</source>
          <target state="translated">用给定的根生成一个赫米特数列。</target>
        </trans-unit>
        <trans-unit id="8bd121a27d585c3734742539ee143a52ac9b73de" translate="yes" xml:space="preserve">
          <source>Generate a HermiteE series with given roots.</source>
          <target state="translated">用给定的根生成一个HermiteE系列。</target>
        </trans-unit>
        <trans-unit id="a9d697582320e7c884bbfd6a03995e4b278f2c74" translate="yes" xml:space="preserve">
          <source>Generate a Laguerre series with given roots.</source>
          <target state="translated">用给定的根生成一个Laguerre数列。</target>
        </trans-unit>
        <trans-unit id="9fd152ea5ebdb08e6cd481a5737f68bdf9d18ad6" translate="yes" xml:space="preserve">
          <source>Generate a Legendre series with given roots.</source>
          <target state="translated">用给定的根生成一个Legendre系列。</target>
        </trans-unit>
        <trans-unit id="67cead80b0965ee4736c5f23fba251df4f3ebe37" translate="yes" xml:space="preserve">
          <source>Generate a Vandermonde matrix.</source>
          <target state="translated">在Vandermonde矩阵生成。</target>
        </trans-unit>
        <trans-unit id="f4b901c2336926f254f07d1ab7b60e0386e5b58c" translate="yes" xml:space="preserve">
          <source>Generate a monic polynomial with given roots.</source>
          <target state="translated">用给定的根生成一个一元多项式。</target>
        </trans-unit>
        <trans-unit id="2e173a5f3c2204af8ef7b9a77d34afee8c360a27" translate="yes" xml:space="preserve">
          <source>Generate a non-uniform random sample from np.arange(5) of size 3 without replacement:</source>
          <target state="translated">从np.arrange(5)中生成一个大小为3的非均匀随机样本,不需要替换。</target>
        </trans-unit>
        <trans-unit id="3b032abdb8bc3ee596986f951aad13aeb29eff03" translate="yes" xml:space="preserve">
          <source>Generate a non-uniform random sample from np.arange(5) of size 3:</source>
          <target state="translated">从np.arrange(5)中生成一个大小为3的非均匀随机样本。</target>
        </trans-unit>
        <trans-unit id="15beef8541c11b005861875826a071b16faf6c61" translate="yes" xml:space="preserve">
          <source>Generate a single integer</source>
          <target state="translated">生成一个整数</target>
        </trans-unit>
        <trans-unit id="22ecb4243c3f96a98ea55b6a9b74781792dce996" translate="yes" xml:space="preserve">
          <source>Generate a uniform random sample from np.arange(5) of size 3 without replacement:</source>
          <target state="translated">从np.arrange(5)中生成一个大小为3的均匀随机样本,不需要替换。</target>
        </trans-unit>
        <trans-unit id="7e7e8cdcfbc5d1d81d3a8108edeaf14a80335951" translate="yes" xml:space="preserve">
          <source>Generate a uniform random sample from np.arange(5) of size 3:</source>
          <target state="translated">从np.arrange(5)中生成一个大小为3的均匀随机样本。</target>
        </trans-unit>
        <trans-unit id="382b425e693319395299c741c143ce2398939efe" translate="yes" xml:space="preserve">
          <source>Generate and install a npy-pkg config file from a template.</source>
          <target state="translated">从模板中生成并安装一个 npy-pkg 配置文件。</target>
        </trans-unit>
        <trans-unit id="19a90f1dba170779ac0befe5afd3d6d9c884c6d1" translate="yes" xml:space="preserve">
          <source>Generate config.py file containing system_info information used during building the package.</source>
          <target state="translated">生成config.py文件,其中包含了构建包时使用的system_info信息。</target>
        </trans-unit>
        <trans-unit id="34c49c62f8886e09ca6e64b9c96074bf60926d62" translate="yes" xml:space="preserve">
          <source>Generate package __config__.py file containing system_info information used during building the package.</source>
          <target state="translated">生成软件包 __config__.py 文件,其中包含构建软件包时使用的系统信息。</target>
        </trans-unit>
        <trans-unit id="14952923eed9a754d36fbf7d9df88e59880c6dad" translate="yes" xml:space="preserve">
          <source>Generate package __svn_version__.py file from SVN revision number, it will be removed after python exits but will be available when sdist, etc commands are executed.</source>
          <target state="translated">根据SVN版本号生成包__svn_version__.py文件,它将在python退出后被删除,但在执行sdist等命令时可以使用。</target>
        </trans-unit>
        <trans-unit id="60ff5f05cec532a7f8f7d819baeeb92b41c5296d" translate="yes" xml:space="preserve">
          <source>Generate random uint64 numbers in closed interval [off, off + rng].</source>
          <target state="translated">在封闭的区间[off,off+rng]中随机生成uint64数。</target>
        </trans-unit>
        <trans-unit id="c8045f4bbe378a7866506cc0ecb5d877bf5eaf96" translate="yes" xml:space="preserve">
          <source>Generate the README files</source>
          <target state="translated">生成README文件</target>
        </trans-unit>
        <trans-unit id="7412730131bc368e3c0dcb289c20fbf2554245c4" translate="yes" xml:space="preserve">
          <source>Generate variates from a multivariate hypergeometric distribution.</source>
          <target state="translated">从多变量超几何分布中生成变量。</target>
        </trans-unit>
        <trans-unit id="3cd9212c9f1d53d55d853a3b264e1b6b858f35fd" translate="yes" xml:space="preserve">
          <source>Generates a random sample from a given 1-D array</source>
          <target state="translated">从给定的一维数组中产生一个随机样本。</target>
        </trans-unit>
        <trans-unit id="d332ac6845c5273c1195174ec786fa2289b9b752" translate="yes" xml:space="preserve">
          <source>Generating author/pr lists</source>
          <target state="translated">生成作者/pr名单</target>
        </trans-unit>
        <trans-unit id="150ce9aa76a74d0a43ead917a8c785193ed877b1" translate="yes" xml:space="preserve">
          <source>Generating index arrays</source>
          <target state="translated">生成索引数组</target>
        </trans-unit>
        <trans-unit id="4bc72cf76a431fc1b67a969426c355ba5d2b3044" translate="yes" xml:space="preserve">
          <source>Generating random numbers</source>
          <target state="translated">生成随机数</target>
        </trans-unit>
        <trans-unit id="1d20de03126b297e05c13a7d280f33e24c72c537" translate="yes" xml:space="preserve">
          <source>Generator</source>
          <target state="translated">Generator</target>
        </trans-unit>
        <trans-unit id="1a0d1bad0186174ecfcdc9782f2116277b7b05e0" translate="yes" xml:space="preserve">
          <source>Generator (class in numpy.random)</source>
          <target state="translated">生成器(numpy.random中的类)</target>
        </trans-unit>
        <trans-unit id="2bb174c2f425e0d1a36b6da19833f5708052f5b2" translate="yes" xml:space="preserve">
          <source>Generator.beta()</source>
          <target state="translated">Generator.beta()</target>
        </trans-unit>
        <trans-unit id="5c54211367d38fc1c657f1a2b11682aa7073f8a0" translate="yes" xml:space="preserve">
          <source>Generator.binomial()</source>
          <target state="translated">Generator.binomial()</target>
        </trans-unit>
        <trans-unit id="d222082a3e85bc085f3813830709c1091b870201" translate="yes" xml:space="preserve">
          <source>Generator.bit_generator</source>
          <target state="translated">Generator.bit_generator</target>
        </trans-unit>
        <trans-unit id="ccf1aa45703830ef34744bdb91c5ee84eb339af2" translate="yes" xml:space="preserve">
          <source>Generator.bytes()</source>
          <target state="translated">Generator.bytes()</target>
        </trans-unit>
        <trans-unit id="a1e223f39e59656efb6dcd2b450fd1f3d11e0f5b" translate="yes" xml:space="preserve">
          <source>Generator.chisquare()</source>
          <target state="translated">Generator.chisquare()</target>
        </trans-unit>
        <trans-unit id="a2cf011c29fcb364a340b0b0739ed3940f0415ce" translate="yes" xml:space="preserve">
          <source>Generator.choice()</source>
          <target state="translated">Generator.choice()</target>
        </trans-unit>
        <trans-unit id="acb19d66e8b5e00bd8ab9eaa938d00f3718515fe" translate="yes" xml:space="preserve">
          <source>Generator.dirichlet()</source>
          <target state="translated">Generator.dirichlet()</target>
        </trans-unit>
        <trans-unit id="81c841ae15f138b1059c14b8ebc34f2ceb6506da" translate="yes" xml:space="preserve">
          <source>Generator.exponential()</source>
          <target state="translated">Generator.exponential()</target>
        </trans-unit>
        <trans-unit id="ceb6ee1b51ecd1875248d0ca388e0fb1daabb181" translate="yes" xml:space="preserve">
          <source>Generator.f()</source>
          <target state="translated">Generator.f()</target>
        </trans-unit>
        <trans-unit id="9a5544f1f1d846a0215be8277752788b52f5d5ae" translate="yes" xml:space="preserve">
          <source>Generator.gamma()</source>
          <target state="translated">Generator.gamma()</target>
        </trans-unit>
        <trans-unit id="cb698152656074b26c2b514594b6841ba98646e0" translate="yes" xml:space="preserve">
          <source>Generator.geometric()</source>
          <target state="translated">Generator.geometric()</target>
        </trans-unit>
        <trans-unit id="fbe271ee0cdf14a0b127e97b8a754332b21122bf" translate="yes" xml:space="preserve">
          <source>Generator.gumbel()</source>
          <target state="translated">Generator.gumbel()</target>
        </trans-unit>
        <trans-unit id="1bb4c4773f6c2e362f6bdc12b4738edbd30f23d2" translate="yes" xml:space="preserve">
          <source>Generator.hypergeometric()</source>
          <target state="translated">Generator.hypergeometric()</target>
        </trans-unit>
        <trans-unit id="c50dbdf77399f33f0754452bd827d7d9972e1f6e" translate="yes" xml:space="preserve">
          <source>Generator.integers()</source>
          <target state="translated">Generator.integers()</target>
        </trans-unit>
        <trans-unit id="2ac6ee43d1992ed473a404e92103ad981ee56dd8" translate="yes" xml:space="preserve">
          <source>Generator.laplace()</source>
          <target state="translated">Generator.laplace()</target>
        </trans-unit>
        <trans-unit id="9a01e0244542efabb99865e59014bd47d50fe182" translate="yes" xml:space="preserve">
          <source>Generator.logistic()</source>
          <target state="translated">Generator.logistic()</target>
        </trans-unit>
        <trans-unit id="c320801600fb9c31cc3d790a76584f303a266f0d" translate="yes" xml:space="preserve">
          <source>Generator.lognormal()</source>
          <target state="translated">Generator.lognormal()</target>
        </trans-unit>
        <trans-unit id="2133a52d0f531222ffd5b10595265bd407d65eae" translate="yes" xml:space="preserve">
          <source>Generator.logseries()</source>
          <target state="translated">Generator.logseries()</target>
        </trans-unit>
        <trans-unit id="3fb5b968b7c3c6e4334e366ce81b7d1c72dd0587" translate="yes" xml:space="preserve">
          <source>Generator.multinomial()</source>
          <target state="translated">Generator.multinomial()</target>
        </trans-unit>
        <trans-unit id="ee77530caf29c96157f8b247c28bc2729509bc1f" translate="yes" xml:space="preserve">
          <source>Generator.multivariate_normal()</source>
          <target state="translated">Generator.multivariate_normal()</target>
        </trans-unit>
        <trans-unit id="e4accfbbf5411ba4e6ed6190c6c4a4f347889476" translate="yes" xml:space="preserve">
          <source>Generator.negative_binomial()</source>
          <target state="translated">Generator.negative_binomial()</target>
        </trans-unit>
        <trans-unit id="f5c86d9e1ec54b1f6ceef69c6b35acbc51980bb9" translate="yes" xml:space="preserve">
          <source>Generator.noncentral_chisquare()</source>
          <target state="translated">Generator.noncentral_chisquare()</target>
        </trans-unit>
        <trans-unit id="4ffb9eb22957bfe4ccb8d5eb67072da9ed2c8fe8" translate="yes" xml:space="preserve">
          <source>Generator.noncentral_f()</source>
          <target state="translated">Generator.noncentral_f()</target>
        </trans-unit>
        <trans-unit id="155766b36ed963438beae39d25dc848285e67bec" translate="yes" xml:space="preserve">
          <source>Generator.normal()</source>
          <target state="translated">Generator.normal()</target>
        </trans-unit>
        <trans-unit id="b6ff7a92707e2ef9f9f69eb28c0f2a89afd2fb30" translate="yes" xml:space="preserve">
          <source>Generator.pareto()</source>
          <target state="translated">Generator.pareto()</target>
        </trans-unit>
        <trans-unit id="76efb5ddfe9997620fd07ade2a0e0cee44bb8c62" translate="yes" xml:space="preserve">
          <source>Generator.permutation()</source>
          <target state="translated">Generator.permutation()</target>
        </trans-unit>
        <trans-unit id="7a00012743deaf56311a785e2b3c42ad040930cb" translate="yes" xml:space="preserve">
          <source>Generator.poisson()</source>
          <target state="translated">Generator.poisson()</target>
        </trans-unit>
        <trans-unit id="9ebe8ebc29357762dc172bd7a50a6d2bbec0bbc0" translate="yes" xml:space="preserve">
          <source>Generator.power()</source>
          <target state="translated">Generator.power()</target>
        </trans-unit>
        <trans-unit id="760d539be436a9fd5786ef5406b94bdadd320519" translate="yes" xml:space="preserve">
          <source>Generator.random()</source>
          <target state="translated">Generator.random()</target>
        </trans-unit>
        <trans-unit id="4fe55f2eb5b58a57536abac4e6392ebd311bfe6e" translate="yes" xml:space="preserve">
          <source>Generator.rayleigh()</source>
          <target state="translated">Generator.rayleigh()</target>
        </trans-unit>
        <trans-unit id="3fff1d63fa4122d609dcfb229ec0499ef08a14a7" translate="yes" xml:space="preserve">
          <source>Generator.shuffle()</source>
          <target state="translated">Generator.shuffle()</target>
        </trans-unit>
        <trans-unit id="9b1634a618bfbc7c72035711945372ce07c3fe19" translate="yes" xml:space="preserve">
          <source>Generator.standard_cauchy()</source>
          <target state="translated">Generator.standard_cauchy()</target>
        </trans-unit>
        <trans-unit id="34db4ce80b61d7d21ff61b89aa2d2d63aa910f5c" translate="yes" xml:space="preserve">
          <source>Generator.standard_exponential()</source>
          <target state="translated">Generator.standard_exponential()</target>
        </trans-unit>
        <trans-unit id="34031ad3432250f012a4d89407bba35b84a16c3c" translate="yes" xml:space="preserve">
          <source>Generator.standard_gamma()</source>
          <target state="translated">Generator.standard_gamma()</target>
        </trans-unit>
        <trans-unit id="87dab3cf1af1d204bcf4e1ac664f4ea0ea2557c9" translate="yes" xml:space="preserve">
          <source>Generator.standard_normal()</source>
          <target state="translated">Generator.standard_normal()</target>
        </trans-unit>
        <trans-unit id="f906f6a0afddbf8cdbe07f5b8f0720c2656e3a0d" translate="yes" xml:space="preserve">
          <source>Generator.standard_t()</source>
          <target state="translated">Generator.standard_t()</target>
        </trans-unit>
        <trans-unit id="b0b2b3ce2c0360b1a89e482830d2d3c0cbab9581" translate="yes" xml:space="preserve">
          <source>Generator.triangular()</source>
          <target state="translated">Generator.triangular()</target>
        </trans-unit>
        <trans-unit id="ab3025f762e986dfbed9abf7722d638afcbcac65" translate="yes" xml:space="preserve">
          <source>Generator.uniform()</source>
          <target state="translated">Generator.uniform()</target>
        </trans-unit>
        <trans-unit id="41234839ae9e6c31f86b35be70f95dd2edfdb45f" translate="yes" xml:space="preserve">
          <source>Generator.vonmises()</source>
          <target state="translated">Generator.vonmises()</target>
        </trans-unit>
        <trans-unit id="524f7ff03bcd2538def6c2fcd08d18e053cd0a0d" translate="yes" xml:space="preserve">
          <source>Generator.wald()</source>
          <target state="translated">Generator.wald()</target>
        </trans-unit>
        <trans-unit id="e7d43ca17b95d21950576674e14eac05300d6600" translate="yes" xml:space="preserve">
          <source>Generator.weibull()</source>
          <target state="translated">Generator.weibull()</target>
        </trans-unit>
        <trans-unit id="425fdb323ea262485eeead85528e77951596ac23" translate="yes" xml:space="preserve">
          <source>Generator.zipf()</source>
          <target state="translated">Generator.zipf()</target>
        </trans-unit>
        <trans-unit id="b9790b2a609e0a0a9945eb7f9ff37cc7c5acb58d" translate="yes" xml:space="preserve">
          <source>Generators should be documented just as functions are documented. The only difference is that one should use the &lt;strong&gt;Yields&lt;/strong&gt; section instead of the &lt;strong&gt;Returns&lt;/strong&gt; section. Support for the &lt;strong&gt;Yields&lt;/strong&gt; section was added in &lt;a href=&quot;https://github.com/numpy/numpydoc&quot;&gt;numpydoc&lt;/a&gt; version 0.6.</source>
          <target state="translated">生成器应与功能记录一样记录在案。唯一的区别是，应使用&lt;strong&gt;Yields&lt;/strong&gt;部分而不是&lt;strong&gt;Returns&lt;/strong&gt;部分。在&lt;a href=&quot;https://github.com/numpy/numpydoc&quot;&gt;numpydoc&lt;/a&gt;版本0.6中添加了对&lt;strong&gt;Yields&lt;/strong&gt;部分的支持。</target>
        </trans-unit>
        <trans-unit id="df5e162e441d1aa68e920c4da50498c7a00cc1ca" translate="yes" xml:space="preserve">
          <source>Generators: Objects that transform sequences of random bits from a BitGenerator into sequences of numbers that follow a specific probability distribution (such as uniform, Normal or Binomial) within a specified interval.</source>
          <target state="translated">生成器。将来自比特生成器的随机比特序列转化为在特定区间内遵循特定概率分布(如均匀、正态或二项式)的数字序列的对象。</target>
        </trans-unit>
        <trans-unit id="fcca6d928c0647f440353ba62ca89c9a77b6389a" translate="yes" xml:space="preserve">
          <source>Generic Python-exception-derived object raised by linalg functions.</source>
          <target state="translated">由linalg函数引发的通用Python-exception派生对象。</target>
        </trans-unit>
        <trans-unit id="37f5365cdbef14515226dcd384583192170cc525" translate="yes" xml:space="preserve">
          <source>Generic functions</source>
          <target state="translated">通用功能</target>
        </trans-unit>
        <trans-unit id="36687e3d4c6e89be61413141c9001bd1269ea61f" translate="yes" xml:space="preserve">
          <source>Generic types</source>
          <target state="translated">通用类型</target>
        </trans-unit>
        <trans-unit id="4725fc543850e19ff2039cda197dd7e9e18cc3b7" translate="yes" xml:space="preserve">
          <source>Get a Python object of a builtin type from the ndarray, &lt;em&gt;arr&lt;/em&gt;, at the location pointed to by itemptr. Return &lt;code&gt;NULL&lt;/code&gt; on failure.</source>
          <target state="translated">从ndarray &lt;em&gt;arr中&lt;/em&gt;获取一个内置类型的Python对象，该对象由itemptr指向。失败时返回 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="89bba80c206cb8084a11e65d5dc5c897b6a8a686" translate="yes" xml:space="preserve">
          <source>Get a copy of the iterator as a 1-D array.</source>
          <target state="translated">获取一个一维数组的迭代器副本。</target>
        </trans-unit>
        <trans-unit id="f7e3ab2dfabd54e64b9ac5580bc305e9c24165dc" translate="yes" xml:space="preserve">
          <source>Get a copy of the iterator in its current state.</source>
          <target state="translated">获取迭代器当前状态的副本。</target>
        </trans-unit>
        <trans-unit id="87007e132eebf348c07afe83a50790715b0d7b52" translate="yes" xml:space="preserve">
          <source>Get a serializable descriptor from the dtype.</source>
          <target state="translated">从dtype中获取一个可序列化的描述符。</target>
        </trans-unit>
        <trans-unit id="6ebe75c1446477b5a3f24473d32f0a3cde8a8998" translate="yes" xml:space="preserve">
          <source>Get array data-descriptor.</source>
          <target state="translated">获取数组数据描述符。</target>
        </trans-unit>
        <trans-unit id="87b8e4a6c47eabed3fcd4c264f91d248484dbd8e" translate="yes" xml:space="preserve">
          <source>Get floating point status. A pointer to a local variable is passed in to prevent aggressive compiler optimizations from reodering this function call relative to the code setting the status, which could lead to incorrect results.</source>
          <target state="translated">获取浮点状态。传递一个指向本地变量的指针,以防止编译器的激进优化,防止该函数调用相对于设置状态的代码重新编码,从而导致错误的结果。</target>
        </trans-unit>
        <trans-unit id="c919c3aaf29bde2f7fadef95afc3436e547fc4bb" translate="yes" xml:space="preserve">
          <source>Get floating point status. A pointer to a local variable is passed in to prevent aggressive compiler optimizations from reordering this function call relative to the code setting the status, which could lead to incorrect results.</source>
          <target state="translated">获取浮点状态。传入一个指向本地变量的指针,以防止积极的编译器优化,使这个函数调用相对于设置状态的代码重新排序,从而导致错误的结果。</target>
        </trans-unit>
        <trans-unit id="b27b9509ff4121a0e1b9f0986d9920de57d819f0" translate="yes" xml:space="preserve">
          <source>Get floating point status. Returns a bitmask with following possible flags:</source>
          <target state="translated">获取浮点状态。返回一个带有以下标志的位掩码。</target>
        </trans-unit>
        <trans-unit id="ddfceaf39034459b039832aa5e0f88a5294c648e" translate="yes" xml:space="preserve">
          <source>Get help information for a function, class, or module.</source>
          <target state="translated">获取函数、类或模块的帮助信息。</target>
        </trans-unit>
        <trans-unit id="ec25cf47cdd55b9b521bbdadbef69d3ea1d8e5a4" translate="yes" xml:space="preserve">
          <source>Get information about the step size of a date or time type.</source>
          <target state="translated">获取日期或时间类型的步长信息。</target>
        </trans-unit>
        <trans-unit id="d0d9c57e1b16aa99fa5d9ab014f87b4ec73ded17" translate="yes" xml:space="preserve">
          <source>Get number of parallel build jobs set by the &amp;ndash;parallel command line argument of setup.py If the command did not receive a setting the environment variable NPY_NUM_BUILD_JOBS is checked. If that is unset, return the number of processors on the system, with a maximum of 8 (to prevent overloading the system if there a lot of CPUs).</source>
          <target state="translated">获取由setup.py的&amp;ndash;parallel命令行参数设置的并行构建作业的数量。如果命令未收到设置，则检查环境变量NPY_NUM_BUILD_JOBS。如果未设置，则返回系统上的处理器数量，最多为8（如果有很多CPU，以防止系统过载）。</target>
        </trans-unit>
        <trans-unit id="693a41351204b667429ed1f8f87172706e8b4a91" translate="yes" xml:space="preserve">
          <source>Get or set the PRNG state</source>
          <target state="translated">获取或设置PRNG状态</target>
        </trans-unit>
        <trans-unit id="09c0240016b842d9be6c9625e5a572e040565a6a" translate="yes" xml:space="preserve">
          <source>Get or set the mask of the array if it has no named fields.</source>
          <target state="translated">如果数组没有命名字段,则获取或设置数组的掩码。</target>
        </trans-unit>
        <trans-unit id="0a74bcddcc3142595e265c6f91c54ba0941f6e3f" translate="yes" xml:space="preserve">
          <source>Get or set the mask of the array if it has no named fields. For structured arrays, returns a ndarray of booleans where entries are &lt;code&gt;True&lt;/code&gt; if &lt;strong&gt;all&lt;/strong&gt; the fields are masked, &lt;code&gt;False&lt;/code&gt; otherwise:</source>
          <target state="translated">如果没有命名字段，则获取或设置数组的掩码。对于结构化数组，返回布尔值的ndarray，如果&lt;strong&gt;所有&lt;/strong&gt;字段都被屏蔽，则条目为 &lt;code&gt;True&lt;/code&gt; ，否则为 &lt;code&gt;False&lt;/code&gt; ：&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c0ab6b2bea51cfebc1977ab8830dcd90e5d8f56d" translate="yes" xml:space="preserve">
          <source>Get resources information.</source>
          <target state="translated">获取资源信息。</target>
        </trans-unit>
        <trans-unit id="7d41ad59188f890aeb1ed8209e30d553a33f1536" translate="yes" xml:space="preserve">
          <source>Get the Python values used for ufunc processing from the thread-local storage area unless the defaults have been set in which case the name lookup is bypassed. The name is placed as a string in the first element of &lt;em&gt;*errobj&lt;/em&gt;. The second element is the looked-up function to call on error callback. The value of the looked-up buffer-size to use is passed into &lt;em&gt;bufsize&lt;/em&gt;, and the value of the error mask is placed into &lt;em&gt;errmask&lt;/em&gt;.</source>
          <target state="translated">从线程本地存储区获取用于ufunc处理的Python值，除非已设置默认值，在这种情况下将绕过名称查找。该名称作为字符串放置在&lt;em&gt;* errobj&lt;/em&gt;的第一个元素中。第二个元素是在错误回调上调用的查找函数。要使用的查找缓冲区大小的值传递到&lt;em&gt;bufsize中&lt;/em&gt;，错误掩码的值放入&lt;em&gt;errmask中&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b42cef4d77cbf66bab7c534b082e6107163dee92" translate="yes" xml:space="preserve">
          <source>Get the current way of handling floating-point errors.</source>
          <target state="translated">获取当前浮点错误的处理方式。</target>
        </trans-unit>
        <trans-unit id="a3515ff2e2849783558090ab689766335d448845" translate="yes" xml:space="preserve">
          <source>Get the dictionary of header metadata from a numpy.ndarray.</source>
          <target state="translated">从numpy.ndarray中获取头元数据字典。</target>
        </trans-unit>
        <trans-unit id="1ad2852f86c694e329d03e73d07b76a105a8cebc" translate="yes" xml:space="preserve">
          <source>Get the local copy of the code</source>
          <target state="translated">获取代码的本地副本</target>
        </trans-unit>
        <trans-unit id="2a1b740f8025f19530f67b712588ba731f33b4b5" translate="yes" xml:space="preserve">
          <source>Get the mailing list&amp;rsquo;s opinion</source>
          <target state="translated">获取邮件列表的意见</target>
        </trans-unit>
        <trans-unit id="695f3e243afdf261b45538304791ad040f8d34f0" translate="yes" xml:space="preserve">
          <source>Get the number of dimensions of an array</source>
          <target state="translated">获取一个数组的维数。</target>
        </trans-unit>
        <trans-unit id="38abfcd88f93b84356fd5ce9430a9a3bce6aa97e" translate="yes" xml:space="preserve">
          <source>Get the shape of the array and a pointer to its actual data.</source>
          <target state="translated">获取数组的形状和指向实际数据的指针。</target>
        </trans-unit>
        <trans-unit id="47b4332f0fd288d9a8660cb9b90eb2d70399cb30" translate="yes" xml:space="preserve">
          <source>Getitem/setitem/copyswap function: Similar to ufuncs, these functions generally have two code paths. If &lt;code&gt;ALIGNED&lt;/code&gt; is False they will use a code path that buffers the arguments so they are true-aligned.</source>
          <target state="translated">Getitem / setitem / copyswap函数：与ufuncs相似，这些函数通常具有两个代码路径。如果 &lt;code&gt;ALIGNED&lt;/code&gt; 为False，则它们将使用一个缓冲参数的代码路径，使它们为真对齐。</target>
        </trans-unit>
        <trans-unit id="be9042cc4b8d1c2a38a88090c5bbf827e249e726" translate="yes" xml:space="preserve">
          <source>Gets an array of strides which are fixed, or will not change during the entire iteration. For strides that may change, the value NPY_MAX_INTP is placed in the stride.</source>
          <target state="translated">获取一个固定的或在整个迭代过程中不会改变的步长数组,对于可能会改变的步长,NPY_MAX_INTP会放在步长中。对于可能改变的步长,NPY_MAX_INTP会被放置在步长中。</target>
        </trans-unit>
        <trans-unit id="30fc1fed71b9648bc39ebe85c632c9c96d68765c" translate="yes" xml:space="preserve">
          <source>Gets the &lt;code&gt;iterindex&lt;/code&gt; of the iterator, which is an index matching the iteration order of the iterator.</source>
          <target state="translated">获取迭代器的 &lt;code&gt;iterindex&lt;/code&gt; ，它是与迭代器的迭代顺序匹配的索引。</target>
        </trans-unit>
        <trans-unit id="c9217aeddd13f7d6ea905e46252fcb27732c6211" translate="yes" xml:space="preserve">
          <source>Gets the &lt;code&gt;iterindex&lt;/code&gt; sub-range that is being iterated. If &lt;a href=&quot;#c.NPY_ITER_RANGED&quot;&gt;&lt;code&gt;NPY_ITER_RANGED&lt;/code&gt;&lt;/a&gt; was not specified, this always returns the range &lt;code&gt;[0, NpyIter_IterSize(iter))&lt;/code&gt;.</source>
          <target state="translated">获取要迭代的 &lt;code&gt;iterindex&lt;/code&gt; 子范围。如果未指定&lt;a href=&quot;#c.NPY_ITER_RANGED&quot;&gt; &lt;code&gt;NPY_ITER_RANGED&lt;/code&gt; &lt;/a&gt;，则始终返回范围 &lt;code&gt;[0, NpyIter_IterSize(iter))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b29099a868ef51a061ab01f34d141a4b26e68b87" translate="yes" xml:space="preserve">
          <source>Gets the array of data pointers directly into the arrays (never into the buffers), corresponding to iteration index 0.</source>
          <target state="translated">直接获取数组中的数据指针(绝不是进入缓冲区),对应迭代索引0。</target>
        </trans-unit>
        <trans-unit id="ad1880ff271cb91c83bb908e9bec8d5e682e13f9" translate="yes" xml:space="preserve">
          <source>Gets the array of strides for the specified axis. Requires that the iterator be tracking a multi-index, and that buffering not be enabled.</source>
          <target state="translated">获取指定轴的步长数组。要求迭代器跟踪一个多索引,并且不启用缓冲。</target>
        </trans-unit>
        <trans-unit id="cbcc80db035da4f014fe2b35abfcfb7fdf954c8c" translate="yes" xml:space="preserve">
          <source>Gets the bit generator instance used by the generator</source>
          <target state="translated">获取生成器使用的位生成器实例。</target>
        </trans-unit>
        <trans-unit id="d159fd31101fbca3940d95031521a0aa1cca2dba" translate="yes" xml:space="preserve">
          <source>Getting at ndarray memory and accessing elements of the ndarray</source>
          <target state="translated">获取ndarray内存和访问ndarray的元素。</target>
        </trans-unit>
        <trans-unit id="1a46b1f79c63a304cb32357fb767b2f9f13f63b7" translate="yes" xml:space="preserve">
          <source>Getting extra Fortran 77 compiler options from source</source>
          <target state="translated">从源代码中获取额外的Fortran 77编译器选项</target>
        </trans-unit>
        <trans-unit id="40231bcdbc4a93a29a6d8b82096fcd17f9064444" translate="yes" xml:space="preserve">
          <source>Getting started with Git development</source>
          <target state="translated">开始使用Git开发</target>
        </trans-unit>
        <trans-unit id="44a67759e2faf7084b39d19d3457bdd8b15ee0fc" translate="yes" xml:space="preserve">
          <source>Getting your PR reviewed</source>
          <target state="translated">让您的PR得到审核</target>
        </trans-unit>
        <trans-unit id="16e47f4c54647389b910573011e6826ea1e0a912" translate="yes" xml:space="preserve">
          <source>Git Basics</source>
          <target state="translated">Git基础知识</target>
        </trans-unit>
        <trans-unit id="dfff37d55b9830b2f87d05fbf99d4f09fbfa666c" translate="yes" xml:space="preserve">
          <source>Git configuration</source>
          <target state="translated">Git配置</target>
        </trans-unit>
        <trans-unit id="1c5717316487921ed9c21d808282281daa39b5a4" translate="yes" xml:space="preserve">
          <source>Git for development</source>
          <target state="translated">开发用Git</target>
        </trans-unit>
        <trans-unit id="62cbb73206931d6c5b9ae31c184bc49486ee1eb6" translate="yes" xml:space="preserve">
          <source>Git will then immediately bring up an editor for editing the commit message. After revising it, we get the output:</source>
          <target state="translated">然后,Git会立即弹出一个编辑器,用于编辑提交消息。修改后,我们得到输出。</target>
        </trans-unit>
        <trans-unit id="b921f982571c01ce7cb6f536b3e77eda32e15376" translate="yes" xml:space="preserve">
          <source>GitHub Workflow</source>
          <target state="translated">GitHub工作流</target>
        </trans-unit>
        <trans-unit id="1adcbfda881a779a35ee45bce592fd5b70ba61b5" translate="yes" xml:space="preserve">
          <source>Give a brief but explicit answer</source>
          <target state="translated">简短而明确的回答</target>
        </trans-unit>
        <trans-unit id="fed2b47c2eb6fcb9566d8e5b338ef20c663258ac" translate="yes" xml:space="preserve">
          <source>Give a new shape to an array without changing its data.</source>
          <target state="translated">给一个数组赋予新的形状而不改变其数据。</target>
        </trans-unit>
        <trans-unit id="a577ea656c2f3aa2b8af6ec81a5f57008704a3bb" translate="yes" xml:space="preserve">
          <source>Give a new shape to the array without changing its data.</source>
          <target state="translated">给数组一个新的形状,而不改变其数据。</target>
        </trans-unit>
        <trans-unit id="41715e18a150ce4ffd8181520dab988c818a96bb" translate="yes" xml:space="preserve">
          <source>Give the name &lt;code&gt;upstream&lt;/code&gt; to the main NumPy repo:</source>
          <target state="translated">在 &lt;code&gt;upstream&lt;/code&gt; 的主要NumPy存储库中命名：</target>
        </trans-unit>
        <trans-unit id="5633a94c306e1317df951f106e430c35db17233f" translate="yes" xml:space="preserve">
          <source>Given a sequence of a polynomial&amp;rsquo;s zeros:</source>
          <target state="translated">给定一个多项式零的序列：</target>
        </trans-unit>
        <trans-unit id="4cc543f62ec648afbd60f8c46e36515054ff8b40" translate="yes" xml:space="preserve">
          <source>Given a sequence of arrays (&lt;em&gt;sort_keys&lt;/em&gt;) of the same shape, return an array of indices (similar to &lt;a href=&quot;#c.PyArray_ArgSort&quot;&gt;&lt;code&gt;PyArray_ArgSort&lt;/code&gt;&lt;/a&gt; (&amp;hellip;)) that would sort the arrays lexicographically. A lexicographic sort specifies that when two keys are found to be equal, the order is based on comparison of subsequent keys. A merge sort (which leaves equal entries unmoved) is required to be defined for the types. The sort is accomplished by sorting the indices first using the first &lt;em&gt;sort_key&lt;/em&gt; and then using the second &lt;em&gt;sort_key&lt;/em&gt; and so forth. This is equivalent to the lexsort(&lt;em&gt;sort_keys&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;) Python command. Because of the way the merge-sort works, be sure to understand the order the &lt;em&gt;sort_keys&lt;/em&gt; must be in (reversed from the order you would use when comparing two elements).</source>
          <target state="translated">给定一系列形状相同的数组（&lt;em&gt;sort_keys&lt;/em&gt;），返回一个索引数组（类似于&lt;a href=&quot;#c.PyArray_ArgSort&quot;&gt; &lt;code&gt;PyArray_ArgSort&lt;/code&gt; &lt;/a&gt;（&amp;hellip;）），该索引将按字典顺序对数组进行排序。词典排序指定当发现两个键相等时，顺序基于后续键的比较。需要为这些类型定义合并排序（保留相等的条目不变）。通过首先使用第一个&lt;em&gt;sort_key&lt;/em&gt;对索引进行排序，然后使用第二个&lt;em&gt;sort_key&lt;/em&gt;等对索引进行排序，即可完成排序。这等效于lexsort（&lt;em&gt;sort_keys&lt;/em&gt;，&lt;em&gt;axis&lt;/em&gt;）Python命令。由于合并排序的工作方式，请务必了解&lt;em&gt;sort_keys&lt;/em&gt;的顺序&lt;em&gt;&lt;/em&gt; 必须存在（与比较两个元素时使用的顺序相反）。</target>
        </trans-unit>
        <trans-unit id="675ac4930884c9f7a3554ad9fd66c39834a06013" translate="yes" xml:space="preserve">
          <source>Given a set of conditions and corresponding functions, evaluate each function on the input data wherever its condition is true.</source>
          <target state="translated">给定一组条件和相应的函数,在输入数据上对每个函数进行评估,只要其条件为真。</target>
        </trans-unit>
        <trans-unit id="9104557d433ccbecbd40d5b471167b269afd4924" translate="yes" xml:space="preserve">
          <source>Given a shape of, for example, &lt;code&gt;(m,n,k)&lt;/code&gt;, &lt;code&gt;m*n*k&lt;/code&gt; samples are generated, and packed in an &lt;code&gt;m&lt;/code&gt;-by-&lt;code&gt;n&lt;/code&gt;-by-&lt;code&gt;k&lt;/code&gt; arrangement. Because each sample is &lt;code&gt;N&lt;/code&gt;-dimensional, the output shape is &lt;code&gt;(m,n,k,N)&lt;/code&gt;. If no shape is specified, a single (&lt;code&gt;N&lt;/code&gt;-D) sample is returned.</source>
          <target state="translated">给定的形状，例如， &lt;code&gt;(m,n,k)&lt;/code&gt; ， &lt;code&gt;m*n*k&lt;/code&gt; 中产生的样品，并包装在一 &lt;code&gt;m&lt;/code&gt; -by- &lt;code&gt;n&lt;/code&gt; -by- &lt;code&gt;k&lt;/code&gt; 布置。因为每个样本都是 &lt;code&gt;N&lt;/code&gt; 维的，所以输出形状为 &lt;code&gt;(m,n,k,N)&lt;/code&gt; 。如果未指定形状，则返回单个（ &lt;code&gt;N&lt;/code&gt; -D）样本。</target>
        </trans-unit>
        <trans-unit id="cd43bd0b568c4a20eb55e09b56aec26e4bcf57e8" translate="yes" xml:space="preserve">
          <source>Given a square array object:</source>
          <target state="translated">给定一个正方形数组对象。</target>
        </trans-unit>
        <trans-unit id="c727e55b5284efd4b0f949a20f79f07a731a7def" translate="yes" xml:space="preserve">
          <source>Given a square matrix &lt;code&gt;a&lt;/code&gt;, return the matrix &lt;code&gt;ainv&lt;/code&gt; satisfying &lt;code&gt;dot(a, ainv) = dot(ainv, a) = eye(a.shape[0])&lt;/code&gt;.</source>
          <target state="translated">给定一个正方形矩阵 &lt;code&gt;a&lt;/code&gt; ，返回满足 &lt;code&gt;dot(a, ainv) = dot(ainv, a) = eye(a.shape[0])&lt;/code&gt; 的矩阵 &lt;code&gt;ainv&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc3ba91f03af5d3e0b135a4d459d0b8c153beab2" translate="yes" xml:space="preserve">
          <source>Given a vector &lt;code&gt;V&lt;/code&gt; of length &lt;code&gt;N&lt;/code&gt;, the &lt;code&gt;q&lt;/code&gt;-th percentile of &lt;code&gt;V&lt;/code&gt; is the value &lt;code&gt;q/100&lt;/code&gt; of the way from the minimum to the maximum in a sorted copy of &lt;code&gt;V&lt;/code&gt;. The values and distances of the two nearest neighbors as well as the &lt;code&gt;interpolation&lt;/code&gt; parameter will determine the percentile if the normalized ranking does not match the location of &lt;code&gt;q&lt;/code&gt; exactly. This function is the same as the median if &lt;code&gt;q=50&lt;/code&gt;, the same as the minimum if &lt;code&gt;q=0&lt;/code&gt; and the same as the maximum if &lt;code&gt;q=100&lt;/code&gt;.</source>
          <target state="translated">给定的矢量 &lt;code&gt;V&lt;/code&gt; 的长度 &lt;code&gt;N&lt;/code&gt; ，所述 &lt;code&gt;q&lt;/code&gt; 个的百分 &lt;code&gt;V&lt;/code&gt; 是值 &lt;code&gt;q/100&lt;/code&gt; 的从最小到最大的的排序拷贝的方式 &lt;code&gt;V&lt;/code&gt; 。如果归一化排名与 &lt;code&gt;q&lt;/code&gt; 的位置不完全匹配，则两个最近邻居的值和距离以及 &lt;code&gt;interpolation&lt;/code&gt; 参数将确定百分位数。如果 &lt;code&gt;q=50&lt;/code&gt; ，此函数与中位数相同；如果 &lt;code&gt;q=0&lt;/code&gt; ，则与最小值相同；如果 &lt;code&gt;q=100&lt;/code&gt; ，则与最大值相同。</target>
        </trans-unit>
        <trans-unit id="1966cedf9ce61fd3a211e32f4abbb9573112f3e8" translate="yes" xml:space="preserve">
          <source>Given a vector &lt;code&gt;V&lt;/code&gt; of length &lt;code&gt;N&lt;/code&gt;, the median of &lt;code&gt;V&lt;/code&gt; is the middle value of a sorted copy of &lt;code&gt;V&lt;/code&gt;, &lt;code&gt;V_sorted&lt;/code&gt; - i e., &lt;code&gt;V_sorted[(N-1)/2]&lt;/code&gt;, when &lt;code&gt;N&lt;/code&gt; is odd, and the average of the two middle values of &lt;code&gt;V_sorted&lt;/code&gt; when &lt;code&gt;N&lt;/code&gt; is even.</source>
          <target state="translated">给定的矢量 &lt;code&gt;V&lt;/code&gt; 的长度 &lt;code&gt;N&lt;/code&gt; ，中位 &lt;code&gt;V&lt;/code&gt; 是的排序副本的中间值 &lt;code&gt;V&lt;/code&gt; ， &lt;code&gt;V_sorted&lt;/code&gt; -即， &lt;code&gt;V_sorted[(N-1)/2]&lt;/code&gt; ，当 &lt;code&gt;N&lt;/code&gt; 是奇数，并且平均的当 &lt;code&gt;N&lt;/code&gt; 为偶数时， &lt;code&gt;V_sorted&lt;/code&gt; 的两个中间值。</target>
        </trans-unit>
        <trans-unit id="a11a60c1be0b2a1a4251da19f3ebb410f0917d80" translate="yes" xml:space="preserve">
          <source>Given a vector &lt;code&gt;V&lt;/code&gt; of length &lt;code&gt;N&lt;/code&gt;, the median of &lt;code&gt;V&lt;/code&gt; is the middle value of a sorted copy of &lt;code&gt;V&lt;/code&gt;, &lt;code&gt;V_sorted&lt;/code&gt; - i.e., &lt;code&gt;V_sorted[(N-1)/2]&lt;/code&gt;, when &lt;code&gt;N&lt;/code&gt; is odd and the average of the two middle values of &lt;code&gt;V_sorted&lt;/code&gt; when &lt;code&gt;N&lt;/code&gt; is even.</source>
          <target state="translated">给定的矢量 &lt;code&gt;V&lt;/code&gt; 的长度 &lt;code&gt;N&lt;/code&gt; ，中位 &lt;code&gt;V&lt;/code&gt; 是的排序副本的中间值 &lt;code&gt;V&lt;/code&gt; ， &lt;code&gt;V_sorted&lt;/code&gt; -即 &lt;code&gt;V_sorted[(N-1)/2]&lt;/code&gt; ，当 &lt;code&gt;N&lt;/code&gt; 是奇数，并且平均两个中间值的 &lt;code&gt;N&lt;/code&gt; 为偶数时， &lt;code&gt;V_sorted&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="d76c2715df60bdab25092c54104462a6d39f23bb" translate="yes" xml:space="preserve">
          <source>Given a vector &lt;code&gt;V&lt;/code&gt; of length &lt;code&gt;N&lt;/code&gt;, the q-th percentile of &lt;code&gt;V&lt;/code&gt; is the value &lt;code&gt;q/100&lt;/code&gt; of the way from the minimum to the maximum in a sorted copy of &lt;code&gt;V&lt;/code&gt;. The values and distances of the two nearest neighbors as well as the &lt;code&gt;interpolation&lt;/code&gt; parameter will determine the percentile if the normalized ranking does not match the location of &lt;code&gt;q&lt;/code&gt; exactly. This function is the same as the median if &lt;code&gt;q=50&lt;/code&gt;, the same as the minimum if &lt;code&gt;q=0&lt;/code&gt; and the same as the maximum if &lt;code&gt;q=100&lt;/code&gt;.</source>
          <target state="translated">给定的矢量 &lt;code&gt;V&lt;/code&gt; 的长度 &lt;code&gt;N&lt;/code&gt; ，的第q个百分位 &lt;code&gt;V&lt;/code&gt; 是值 &lt;code&gt;q/100&lt;/code&gt; 的从最小到最大的的排序拷贝的方式 &lt;code&gt;V&lt;/code&gt; 。如果归一化排名与 &lt;code&gt;q&lt;/code&gt; 的位置不完全匹配，则两个最近邻居的值和距离以及 &lt;code&gt;interpolation&lt;/code&gt; 参数将确定百分位数。如果 &lt;code&gt;q=50&lt;/code&gt; ，此函数与中位数相同；如果 &lt;code&gt;q=0&lt;/code&gt; ，则与最小值相同；如果 &lt;code&gt;q=100&lt;/code&gt; ，则与最大值相同。</target>
        </trans-unit>
        <trans-unit id="dfd59ffc41fbed91404c5101ddfa184c5392006b" translate="yes" xml:space="preserve">
          <source>Given a vector &lt;code&gt;V&lt;/code&gt; of length &lt;code&gt;N&lt;/code&gt;, the q-th quantile of &lt;code&gt;V&lt;/code&gt; is the value &lt;code&gt;q&lt;/code&gt; of the way from the minimum to the maximum in a sorted copy of &lt;code&gt;V&lt;/code&gt;. The values and distances of the two nearest neighbors as well as the &lt;code&gt;interpolation&lt;/code&gt; parameter will determine the quantile if the normalized ranking does not match the location of &lt;code&gt;q&lt;/code&gt; exactly. This function is the same as the median if &lt;code&gt;q=0.5&lt;/code&gt;, the same as the minimum if &lt;code&gt;q=0.0&lt;/code&gt; and the same as the maximum if &lt;code&gt;q=1.0&lt;/code&gt;.</source>
          <target state="translated">给定的矢量 &lt;code&gt;V&lt;/code&gt; 的长度 &lt;code&gt;N&lt;/code&gt; ，的第q个位数 &lt;code&gt;V&lt;/code&gt; 是值 &lt;code&gt;q&lt;/code&gt; 的从最小值到最大值在的排序拷贝的方式 &lt;code&gt;V&lt;/code&gt; 。如果归一化排名与 &lt;code&gt;q&lt;/code&gt; 的位置不完全匹配，则两个最近邻居的值和距离以及 &lt;code&gt;interpolation&lt;/code&gt; 参数将确定分位数。如果 &lt;code&gt;q=0.5&lt;/code&gt; ，此函数与中位数相同；如果 &lt;code&gt;q=0.0&lt;/code&gt; ，则与最小值相同；如果 &lt;code&gt;q=1.0&lt;/code&gt; ，则与最大值相同。</target>
        </trans-unit>
        <trans-unit id="97afe1ab394be8a96329790e96c805504acf970b" translate="yes" xml:space="preserve">
          <source>Given a vector &lt;code&gt;V&lt;/code&gt; with &lt;code&gt;N&lt;/code&gt; non masked values, the median of &lt;code&gt;V&lt;/code&gt; is the middle value of a sorted copy of &lt;code&gt;V&lt;/code&gt; (&lt;code&gt;Vs&lt;/code&gt;) - i.e. &lt;code&gt;Vs[(N-1)/2]&lt;/code&gt;, when &lt;code&gt;N&lt;/code&gt; is odd, or &lt;code&gt;{Vs[N/2 - 1] + Vs[N/2]}/2&lt;/code&gt; when &lt;code&gt;N&lt;/code&gt; is even.</source>
          <target state="translated">给定具有 &lt;code&gt;N&lt;/code&gt; 个非掩码值的向量 &lt;code&gt;V&lt;/code&gt; ， &lt;code&gt;V&lt;/code&gt; 的中位数是 &lt;code&gt;V&lt;/code&gt; （ &lt;code&gt;Vs&lt;/code&gt; ）的排序副本的中间值-即 &lt;code&gt;Vs[(N-1)/2]&lt;/code&gt; ，当 &lt;code&gt;N&lt;/code&gt; 为奇数时，即 &lt;code&gt;{Vs[N/2 - 1] + Vs[N/2]}/2&lt;/code&gt; 当 &lt;code&gt;N&lt;/code&gt; 为偶数时）。</target>
        </trans-unit>
        <trans-unit id="2f958084a15b1cea997fb4f3882497b30e2d92da" translate="yes" xml:space="preserve">
          <source>Given a window length &lt;code&gt;n&lt;/code&gt; and a sample spacing &lt;code&gt;d&lt;/code&gt;:</source>
          <target state="translated">给定窗口长度 &lt;code&gt;n&lt;/code&gt; 和样本间距 &lt;code&gt;d&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3cf50be3014d334ce381b3182c6e22be99505ba7" translate="yes" xml:space="preserve">
          <source>Given an &amp;ldquo;index&amp;rdquo; array (&lt;code&gt;a&lt;/code&gt;) of integers and a sequence of &lt;code&gt;n&lt;/code&gt; arrays (&lt;code&gt;choices&lt;/code&gt;), &lt;code&gt;a&lt;/code&gt; and each choice array are first broadcast, as necessary, to arrays of a common shape; calling these &lt;em&gt;Ba&lt;/em&gt; and &lt;em&gt;Bchoices[i], i = 0,&amp;hellip;,n-1&lt;/em&gt; we have that, necessarily, &lt;code&gt;Ba.shape == Bchoices[i].shape&lt;/code&gt; for each &lt;code&gt;i&lt;/code&gt;. Then, a new array with shape &lt;code&gt;Ba.shape&lt;/code&gt; is created as follows:</source>
          <target state="translated">给定一个由整数组成的&amp;ldquo;索引&amp;rdquo;数组（ &lt;code&gt;a&lt;/code&gt; ）和一个 &lt;code&gt;n&lt;/code&gt; 个数组（ &lt;code&gt;choices&lt;/code&gt; ）的序列，根据需要，首先将 &lt;code&gt;a&lt;/code&gt; 和每个choice数组广播到具有相同形状的数组；称这些&lt;em&gt;Ba&lt;/em&gt;和&lt;em&gt;Bchoices [i]，i = 0，&amp;hellip;，n-1，&lt;/em&gt;我们必然有 &lt;code&gt;Ba.shape == Bchoices[i].shape&lt;/code&gt; 每个 &lt;code&gt;i&lt;/code&gt; 的Bchoices [i] .shape。然后，创建一个形状为 &lt;code&gt;Ba.shape&lt;/code&gt; 的新数组，如下所示：</target>
        </trans-unit>
        <trans-unit id="182d11d96136738a2da66eeca81246c173e18b8d" translate="yes" xml:space="preserve">
          <source>Given an array of integers and a set of n choice arrays, this method will create a new array that merges each of the choice arrays. Where a value in &lt;code&gt;a&lt;/code&gt; is i, the new array will have the value that choices[i] contains in the same place.</source>
          <target state="translated">给定一个整数数组和一组n个选择数组，此方法将创建一个合并每个选择数组的新数组。如果a中 &lt;code&gt;a&lt;/code&gt; 值为i，则新数组将具有options [i]包含在同一位置的值。</target>
        </trans-unit>
        <trans-unit id="e37e450d620d60b14cee7269755ab57ba8f06da4" translate="yes" xml:space="preserve">
          <source>Given an interval, values outside the interval are clipped to the interval edges. For example, if an interval of &lt;code&gt;[0, 1]&lt;/code&gt; is specified, values smaller than 0 become 0, and values larger than 1 become 1.</source>
          <target state="translated">给定一个间隔，该间隔之外的值将被裁剪到间隔边缘。例如，如果指定间隔 &lt;code&gt;[0, 1]&lt;/code&gt; 则小于0的值将变为0，而大于1的值将变为1。</target>
        </trans-unit>
        <trans-unit id="38e44e10395d6cbc3f11e11b2660a79eed5fd62a" translate="yes" xml:space="preserve">
          <source>Given multiple sorting keys, which can be interpreted as columns in a spreadsheet, lexsort returns an array of integer indices that describes the sort order by multiple columns. The last key in the sequence is used for the primary sort order, the second-to-last key for the secondary sort order, and so on. The keys argument must be a sequence of objects that can be converted to arrays of the same shape. If a 2D array is provided for the keys argument, it&amp;rsquo;s rows are interpreted as the sorting keys and sorting is according to the last row, second last row etc.</source>
          <target state="translated">给定多个排序键（可以将其解释为电子表格中的列），lexsort返回一个整数索引数组，该数组描述了按多列排序的顺序。序列中的最后一个键用于主排序顺序，倒数第二个键用于辅助排序顺序，依此类推。keys参数必须是可以转换为相同形状的数组的对象序列。如果为keys参数提供了2D数组，则将其行解释为排序键，并根据最后一行，倒数第二行等进行排序。</target>
        </trans-unit>
        <trans-unit id="bcbd60ed302ecb4de642c2dac63a654ff76626bc" translate="yes" xml:space="preserve">
          <source>Given multiple sorting keys, which can be interpreted as columns in a spreadsheet, lexsort returns an array of integer indices that describes the sort order by multiple columns. The last key in the sequence is used for the primary sort order, the second-to-last key for the secondary sort order, and so on. The keys argument must be a sequence of objects that can be converted to arrays of the same shape. If a 2D array is provided for the keys argument, its rows are interpreted as the sorting keys and sorting is according to the last row, second last row etc.</source>
          <target state="translated">给定多个排序键,可以解释为电子表格中的列,lexsort返回一个整数索引数组,通过多列描述排序顺序。序列中的最后一个键用于主要排序顺序,第二个到最后一个键用于次要排序顺序,以此类推。keys参数必须是一个可以转换为相同形状的数组的对象序列。如果为keys参数提供了一个二维数组,那么它的行被解释为排序键,并按照最后一行、倒数第二行等进行排序。</target>
        </trans-unit>
        <trans-unit id="67d67e5173e989786e884148ab1ee5c292352200" translate="yes" xml:space="preserve">
          <source>Given the &amp;ldquo;legs&amp;rdquo; of a right triangle, return its hypotenuse.</source>
          <target state="translated">给定直角三角形的&amp;ldquo;腿&amp;rdquo;，返回其斜边。</target>
        </trans-unit>
        <trans-unit id="65f0e0f7ab08e6e7d473538fe0c4ef0f86fa2404" translate="yes" xml:space="preserve">
          <source>Given the above, we intend to deprecate &lt;code&gt;matrix&lt;/code&gt; eventually.</source>
          <target state="translated">鉴于上述情况，我们打算最终弃用 &lt;code&gt;matrix&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd7a5a167593ffa963306f804bdee09ec39e8fd9" translate="yes" xml:space="preserve">
          <source>Given the shape of an array, an &lt;a href=&quot;#numpy.ndindex&quot;&gt;&lt;code&gt;ndindex&lt;/code&gt;&lt;/a&gt; instance iterates over the N-dimensional index of the array. At each iteration a tuple of indices is returned, the last dimension is iterated over first.</source>
          <target state="translated">给定数组的形状，&lt;a href=&quot;#numpy.ndindex&quot;&gt; &lt;code&gt;ndindex&lt;/code&gt; &lt;/a&gt;实例将在数组的N维索引上进行迭代。在每次迭代中，将返回一个索引元组，最后一个维将首先迭代。</target>
        </trans-unit>
        <trans-unit id="6d84cece4ac6198159f79505d6fa6346cdc3c584" translate="yes" xml:space="preserve">
          <source>Given two &lt;em&gt;n&lt;/em&gt; -length arrays of integers, &lt;em&gt;l1&lt;/em&gt;, and &lt;em&gt;l2&lt;/em&gt;, return 1 if the lists are identical; otherwise, return 0.</source>
          <target state="translated">给定两个&lt;em&gt;n&lt;/em&gt;长度的整数数组&lt;em&gt;l1&lt;/em&gt;和&lt;em&gt;l2&lt;/em&gt;，如果列表相同，则返回1；否则，返回1。否则，返回0。</target>
        </trans-unit>
        <trans-unit id="b4d93ad7919330e367279622118fac9cd99eb66a" translate="yes" xml:space="preserve">
          <source>Given two array_like objects, check that the shape is equal and all elements of the first object are strictly smaller than those of the second object. An exception is raised at shape mismatch or incorrectly ordered values. Shape mismatch does not raise if an object has zero dimension. In contrast to the standard usage in numpy, NaNs are compared, no assertion is raised if both objects have NaNs in the same positions.</source>
          <target state="translated">给定两个array_like对象,检查形状是否相等,第一个对象的所有元素是否严格小于第二个对象的元素。形状不匹配或排序不正确会引发异常。如果一个对象的维度为零,形状不匹配不会引发异常。与numpy中的标准用法不同,NaNs是比较的,如果两个对象的NaNs位置相同,则不会引发断言。</target>
        </trans-unit>
        <trans-unit id="33ed5b3e4d203313d72bfb61344b0ef20252735e" translate="yes" xml:space="preserve">
          <source>Given two array_like objects, check that the shape is equal and all elements of these objects are equal (but see the Notes for the special handling of a scalar). An exception is raised at shape mismatch or conflicting values. In contrast to the standard usage in numpy, NaNs are compared like numbers, no assertion is raised if both objects have NaNs in the same positions.</source>
          <target state="translated">给定两个array_like对象,检查形状是否相等,这些对象的所有元素是否相等(但参见注释中关于标量的特殊处理)。当形状不匹配或值冲突时,会引发一个异常。与numpy中的标准用法不同,NaNs是像数字一样进行比较的,如果两个对象的NaNs都在相同的位置,则不会引发断言。</target>
        </trans-unit>
        <trans-unit id="90fdf131a8e234662a4baf7342d5cbfdd8815673" translate="yes" xml:space="preserve">
          <source>Given two array_like objects, check that the shape is equal and all elements of these objects are equal. An exception is raised at shape mismatch or conflicting values. In contrast to the standard usage in numpy, NaNs are compared like numbers, no assertion is raised if both objects have NaNs in the same positions.</source>
          <target state="translated">给定两个array_like对象,检查形状是否相等,这些对象的所有元素是否相等。当形状不匹配或值冲突时,会引发一个异常。与numpy中的标准用法不同,NaNs是像数字一样进行比较的,如果两个对象的NaNs在相同的位置,则不会引发断言。</target>
        </trans-unit>
        <trans-unit id="03c045ae56fa8df86b5ce72f657667f3cc594e54" translate="yes" xml:space="preserve">
          <source>Given two numbers, check that they are approximately equal. Approximately equal is defined as the number of significant digits that agree.</source>
          <target state="translated">给定两个数字,检查它们是否近似相等。大致相等的定义是相同的有意义的数字的个数。</target>
        </trans-unit>
        <trans-unit id="d9d002c83204235df23caf3ec14f4354842036c7" translate="yes" xml:space="preserve">
          <source>Given two objects (scalars, lists, tuples, dictionaries or numpy arrays), check that all elements of these objects are equal. An exception is raised at the first conflicting values.</source>
          <target state="translated">给定两个对象(标量、列表、元组、字典或numpy数组),检查这些对象的所有元素是否相等。在第一个冲突的值时,就会引发一个异常。</target>
        </trans-unit>
        <trans-unit id="9d61f0f6669477d0eddf6043188e0f420dad8728" translate="yes" xml:space="preserve">
          <source>Given two polynomials &lt;code&gt;a1&lt;/code&gt; and &lt;code&gt;a2&lt;/code&gt;, returns &lt;code&gt;a1 - a2&lt;/code&gt;. &lt;code&gt;a1&lt;/code&gt; and &lt;code&gt;a2&lt;/code&gt; can be either array_like sequences of the polynomials&amp;rsquo; coefficients (including coefficients equal to zero), or &lt;a href=&quot;numpy.poly1d#numpy.poly1d&quot;&gt;&lt;code&gt;poly1d&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">给定两个多项式 &lt;code&gt;a1&lt;/code&gt; 和 &lt;code&gt;a2&lt;/code&gt; ，返回 &lt;code&gt;a1 - a2&lt;/code&gt; 。 &lt;code&gt;a1&lt;/code&gt; 和 &lt;code&gt;a2&lt;/code&gt; 可以是多项式系数（包括等于零的系数）的类数组序列，也可以是&lt;a href=&quot;numpy.poly1d#numpy.poly1d&quot;&gt; &lt;code&gt;poly1d&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="8737cb46ba6778426f460962013153a76a798f04" translate="yes" xml:space="preserve">
          <source>Given two tensors, &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, and an array_like object containing two array_like objects, &lt;code&gt;(a_axes, b_axes)&lt;/code&gt;, sum the products of &lt;code&gt;a&lt;/code&gt;&amp;rsquo;s and &lt;code&gt;b&lt;/code&gt;&amp;rsquo;s elements (components) over the axes specified by &lt;code&gt;a_axes&lt;/code&gt; and &lt;code&gt;b_axes&lt;/code&gt;. The third argument can be a single non-negative integer_like scalar, &lt;code&gt;N&lt;/code&gt;; if it is such, then the last &lt;code&gt;N&lt;/code&gt; dimensions of &lt;code&gt;a&lt;/code&gt; and the first &lt;code&gt;N&lt;/code&gt; dimensions of &lt;code&gt;b&lt;/code&gt; are summed over.</source>
          <target state="translated">给定两个张量 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; ，以及一个包含两个array_like对象的array_like对象 &lt;code&gt;(a_axes, b_axes)&lt;/code&gt; ，将 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 的元素（分量）的 &lt;code&gt;a_axes&lt;/code&gt; 和 &lt;code&gt;b_axes&lt;/code&gt; 指定的轴上求和。第三个参数可以是单个非负整数类标量 &lt;code&gt;N&lt;/code&gt; ；如果是这样，则最后 &lt;code&gt;N&lt;/code&gt; 的尺寸 &lt;code&gt;a&lt;/code&gt; 和第一 &lt;code&gt;N&lt;/code&gt; 的尺寸 &lt;code&gt;b&lt;/code&gt; 相加结束。</target>
        </trans-unit>
        <trans-unit id="1bcbaa6d418fa3c95df027de6ff9d3bb5387a091" translate="yes" xml:space="preserve">
          <source>Given two vectors, &lt;code&gt;a = [a0, a1, ..., aM]&lt;/code&gt; and &lt;code&gt;b = [b0, b1, ..., bN]&lt;/code&gt;, the outer product &lt;a href=&quot;#r14e6c54b746b-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; is:</source>
          <target state="translated">给定两个向量， &lt;code&gt;a = [a0, a1, ..., aM]&lt;/code&gt; 和 &lt;code&gt;b = [b0, b1, ..., bN]&lt;/code&gt; ，外积&lt;a href=&quot;#r14e6c54b746b-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;为：</target>
        </trans-unit>
        <trans-unit id="3854728349ae7af32452ae7e4400a155448f9794" translate="yes" xml:space="preserve">
          <source>Given two vectors, &lt;code&gt;a = [a0, a1, ..., aM]&lt;/code&gt; and &lt;code&gt;b = [b0, b1, ..., bN]&lt;/code&gt;, the outer product &lt;a href=&quot;#r863504129d6e-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; is:</source>
          <target state="translated">给定两个向量， &lt;code&gt;a = [a0, a1, ..., aM]&lt;/code&gt; 和 &lt;code&gt;b = [b0, b1, ..., bN]&lt;/code&gt; ，外积&lt;a href=&quot;#r863504129d6e-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;为：</target>
        </trans-unit>
        <trans-unit id="80ea28027215a4aa397564db3b7818bf4ec592b8" translate="yes" xml:space="preserve">
          <source>Given two vectors, &lt;code&gt;a = [a0, a1, ..., aM]&lt;/code&gt; and &lt;code&gt;b = [b0, b1, ..., bN]&lt;/code&gt;, the outer product &lt;a href=&quot;#rf0d57dd5badd-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; is:</source>
          <target state="translated">给定两个向量， &lt;code&gt;a = [a0, a1, ..., aM]&lt;/code&gt; 和 &lt;code&gt;b = [b0, b1, ..., bN]&lt;/code&gt; ，外积&lt;a href=&quot;#rf0d57dd5badd-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;为：</target>
        </trans-unit>
        <trans-unit id="4975cd64a92e88880758085eef7772db2bdb4f4d" translate="yes" xml:space="preserve">
          <source>Given:</source>
          <target state="translated">Given:</target>
        </trans-unit>
        <trans-unit id="882e099811dae6ac151e6bf8446fa672be3c6225" translate="yes" xml:space="preserve">
          <source>Gives a list of the names to exclude, such as &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;file&lt;/code&gt;, &lt;code&gt;print&lt;/code&gt;&amp;hellip; If one of the input name is part of this list, an underscore character (&lt;code&gt;'_'&lt;/code&gt;) will be appended to it.</source>
          <target state="translated">给出要排除的名称的列表，例如 &lt;code&gt;return&lt;/code&gt; ， &lt;code&gt;file&lt;/code&gt; ， &lt;code&gt;print&lt;/code&gt; &amp;hellip;如果输入名称之一是该列表的一部分，则会在其后添加下划线字符（ &lt;code&gt;'_'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8020f30b057521f3745170a52c99adab4537c734" translate="yes" xml:space="preserve">
          <source>Gives a new shape to an array without changing its data.</source>
          <target state="translated">给予一个数组新的形状而不改变其数据。</target>
        </trans-unit>
        <trans-unit id="1175f81a358d9e3f38210901aaa9e95baea2d5bc" translate="yes" xml:space="preserve">
          <source>Gives a string combining all the characters that must be deleted from the name. By default, invalid characters are &lt;code&gt;~!@#$%^&amp;amp;*()-=+~\|]}[{';:
/?.&amp;gt;,&amp;lt;&lt;/code&gt;.</source>
          <target state="translated">给出一个字符串，其中包含必须从名称中删除的所有字符。默认情况下，无效字符为 &lt;code&gt;~!@#$%^&amp;amp;*()-=+~\|]}[{';: /?.&amp;gt;,&amp;lt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f6df81d1943f224253f7e8824d4f6d90b5a6fd6" translate="yes" xml:space="preserve">
          <source>Glantz, Stanton A. &amp;ldquo;Primer of Biostatistics.&amp;rdquo;, McGraw-Hill, Fifth Edition, 2002.</source>
          <target state="translated">Stanton A. Glantz，&amp;ldquo;生物统计学的基础知识&amp;rdquo;，McGraw-Hill，第五版，2002年。</target>
        </trans-unit>
        <trans-unit id="98ce8e321806dbb3b91df4ce336400b327d82b05" translate="yes" xml:space="preserve">
          <source>Global State</source>
          <target state="translated">全球国家</target>
        </trans-unit>
        <trans-unit id="7427cf697be16a4ec1d916910128a59d920125e7" translate="yes" xml:space="preserve">
          <source>Glossary</source>
          <target state="translated">Glossary</target>
        </trans-unit>
        <trans-unit id="b5455baaf8bb77490bac48f282fc705e080b078c" translate="yes" xml:space="preserve">
          <source>Go to &lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;https://github.com/numpy/numpy&lt;/a&gt; and click the &amp;ldquo;fork&amp;rdquo; button to create your own copy of the project.</source>
          <target state="translated">转到&lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;https://github.com/numpy/numpy&lt;/a&gt;并单击&amp;ldquo; fork&amp;rdquo;按钮以创建您自己的项目副本。</target>
        </trans-unit>
        <trans-unit id="e307ec71f941bf50bb0ca58211aaf38b07c21cec" translate="yes" xml:space="preserve">
          <source>Go to &lt;a href=&quot;https://github.com/numpy/numpy/releases&quot;&gt;https://github.com/numpy/numpy/releases&lt;/a&gt;, there should be a &lt;code&gt;v1.14.5
tag&lt;/code&gt;, click on it and hit the edit button for that tag. There are two ways to add files, using an editable text window and as binary uploads.</source>
          <target state="translated">转到&lt;a href=&quot;https://github.com/numpy/numpy/releases&quot;&gt;https://github.com/numpy/numpy/releases&lt;/a&gt;，应该有一个 &lt;code&gt;v1.14.5 tag&lt;/code&gt; ，单击它并点击该标签的编辑按钮。有两种添加文件的方法，一种是使用可编辑的文本窗口，另一种是二进制上传。</target>
        </trans-unit>
        <trans-unit id="ed8a62e7348cf073697e66839cff7484d1d38105" translate="yes" xml:space="preserve">
          <source>Go to &lt;a href=&quot;https://github.com/numpy/numpy/releases&quot;&gt;https://github.com/numpy/numpy/releases&lt;/a&gt;, there should be a &lt;code&gt;v1.19.0
tag&lt;/code&gt;, click on it and hit the edit button for that tag. There are two ways to add files, using an editable text window and as binary uploads. Cut and paste the &lt;code&gt;release/README.md&lt;/code&gt; file contents into the text window. You will probably need to make some edits to get it to look right. Then</source>
          <target state="translated">转到&lt;a href=&quot;https://github.com/numpy/numpy/releases&quot;&gt;https://github.com/numpy/numpy/releases&lt;/a&gt;，应该有一个 &lt;code&gt;v1.19.0 tag&lt;/code&gt; ，单击它并点击该标签的编辑按钮。有两种添加文件的方法，一种是使用可编辑的文本窗口，另一种是二进制上传。将 &lt;code&gt;release/README.md&lt;/code&gt; 文件内容剪切并粘贴到文本窗口中。您可能需要进行一些编辑才能使其看起来正确。然后</target>
        </trans-unit>
        <trans-unit id="5a55f17953adb4e53b1ccccc7c663a01a1165b91" translate="yes" xml:space="preserve">
          <source>Go to GitHub. The new branch will show up with a green Pull Request button. Make sure the title and message are clear, concise, and self- explanatory. Then click the button to submit it.</source>
          <target state="translated">前往GitHub。新的分支会出现一个绿色的 Pull Request 按钮。确保标题和信息清晰、简洁、自圆其说。然后点击按钮提交。</target>
        </trans-unit>
        <trans-unit id="69980c4426505922b99957185231ede61f777564" translate="yes" xml:space="preserve">
          <source>Go to github and make a PR.</source>
          <target state="translated">去github做一个PR。</target>
        </trans-unit>
        <trans-unit id="bb0c75662080ceb97dedb20703369eded0631af1" translate="yes" xml:space="preserve">
          <source>Go to the &lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;NumPy GitHub home&lt;/a&gt;.</source>
          <target state="translated">转到&lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;NumPy GitHub主页&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a46869e8de50d59c9c1645cda5ce89ba58d2c65a" translate="yes" xml:space="preserve">
          <source>Go to the &lt;a href=&quot;https://www.numpy.org&quot;&gt;NumPy&lt;/a&gt; github home at &lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;NumPy github&lt;/a&gt;.</source>
          <target state="translated">转至&lt;a href=&quot;https://www.numpy.org&quot;&gt;NumPy的&lt;/a&gt;GitHub的家在&lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;NumPy的github上&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb3f0c82f9a531318bc29fd46c7f891f5c55b9a1" translate="yes" xml:space="preserve">
          <source>Good for wrapping large (many functions) existing C libraries</source>
          <target state="translated">适用于包装现有的大型(许多函数)C库。</target>
        </trans-unit>
        <trans-unit id="7575b45e9c9e8a73a854ae2b8b5199197bc11d2e" translate="yes" xml:space="preserve">
          <source>Google has no guidance, or</source>
          <target state="translated">谷歌没有指导,或</target>
        </trans-unit>
        <trans-unit id="69bb06bd200ddbdceda42084b415b9a92259f61a" translate="yes" xml:space="preserve">
          <source>Google offers two free &lt;a href=&quot;https://developers.google.com/tech-writing&quot;&gt;Technical Writing Courses&lt;/a&gt;</source>
          <target state="translated">Google提供了两门免费的&lt;a href=&quot;https://developers.google.com/tech-writing&quot;&gt;技术写作课程&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="823619e079c311b099f1d0e427a584eafcd6ed06" translate="yes" xml:space="preserve">
          <source>Governance</source>
          <target state="translated">Governance</target>
        </trans-unit>
        <trans-unit id="99a7f06ad80d74e23ee701e64001d24ce844ca07" translate="yes" xml:space="preserve">
          <source>Gradient is calculated only along the given axis or axes The default (axis = None) is to calculate the gradient for all the axes of the input array. axis may be negative, in which case it counts from the last to the first axis.</source>
          <target state="translated">梯度只沿着给定的一个或多个轴计算。默认(轴=无)是计算输入数组所有轴的梯度。</target>
        </trans-unit>
        <trans-unit id="61aa58c2b09a3034acae73f52494d42574c0ca1c" translate="yes" xml:space="preserve">
          <source>Gradient is calculated using N-th order accurate differences at the boundaries. Default: 1.</source>
          <target state="translated">梯度是用N-阶精确的边界差计算的。默认值:1。</target>
        </trans-unit>
        <trans-unit id="f8982c84d1a3d63e1d8553471af2f5475b02499f" translate="yes" xml:space="preserve">
          <source>Grammatical issues inadequately addressed by the NumPy or Google rules are decided by the section on &amp;ldquo;Grammar and Usage&amp;rdquo; in the most recent edition of the &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Chicago_Manual_of_Style&quot;&gt;Chicago Manual of Style&lt;/a&gt;.</source>
          <target state="translated">NumPy或Google规则未充分解决的语法问题由最新版《&lt;a href=&quot;https://en.wikipedia.org/wiki/The_Chicago_Manual_of_Style&quot;&gt;芝加哥手册手册&lt;/a&gt;》中的&amp;ldquo;语法和用法&amp;rdquo;部分决定。</target>
        </trans-unit>
        <trans-unit id="ea0fcf87d2287941521d49f814fee6c705ce244c" translate="yes" xml:space="preserve">
          <source>Graphical illustration of &lt;code&gt;endpoint&lt;/code&gt; parameter:</source>
          <target state="translated">&lt;code&gt;endpoint&lt;/code&gt; 参数的图形化图示：</target>
        </trans-unit>
        <trans-unit id="bb4d80637c2066c9e7bffa72841d8f27a47b292b" translate="yes" xml:space="preserve">
          <source>Graphical illustration:</source>
          <target state="translated">图解。</target>
        </trans-unit>
        <trans-unit id="4a52fe6ab66ec52ee6bfd51d48518f7de2e194f9" translate="yes" xml:space="preserve">
          <source>Greater consistency in &lt;code&gt;assert_almost_equal&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;assert_almost_equal&lt;/code&gt; 的一致性更高</target>
        </trans-unit>
        <trans-unit id="55d14a2a20cf23aef24c6cf5ba97cf49567e1739" translate="yes" xml:space="preserve">
          <source>Greedy &lt;a href=&quot;#numpy.einsum&quot;&gt;&lt;code&gt;einsum&lt;/code&gt;&lt;/a&gt; (faster optimal path approximation): ~160ms</source>
          <target state="translated">贪婪的&lt;a href=&quot;#numpy.einsum&quot;&gt; &lt;code&gt;einsum&lt;/code&gt; &lt;/a&gt;（更快的最佳路径近似值）：〜160ms</target>
        </trans-unit>
        <trans-unit id="f6534be852374768c36e7beef74b1f4199fef68a" translate="yes" xml:space="preserve">
          <source>Grid-shaped arrays of evenly spaced numbers in N-dimensions.</source>
          <target state="translated">N个维度的均匀间隔数字的网格状阵列。</target>
        </trans-unit>
        <trans-unit id="d291656cb315e59b3437432c3e771768a130826d" translate="yes" xml:space="preserve">
          <source>Group 1</source>
          <target state="translated">第1组</target>
        </trans-unit>
        <trans-unit id="374327355d21f90b289f6f435aa2da5d797f0ae6" translate="yes" xml:space="preserve">
          <source>Group 2</source>
          <target state="translated">第二组</target>
        </trans-unit>
        <trans-unit id="843698a0f4f972fb83c7b6d5ba379d852811fab9" translate="yes" xml:space="preserve">
          <source>Groups and Policies</source>
          <target state="translated">组和政策</target>
        </trans-unit>
        <trans-unit id="f5ac35811e25f377d3ea665e7f41177582e5b116" translate="yes" xml:space="preserve">
          <source>Guaranteeing safe aligned access for ufuncs/setitem/casting code</source>
          <target state="translated">保证ufuncs/setitem/casting代码的安全对齐访问。</target>
        </trans-unit>
        <trans-unit id="f454c80c182290ac641c3ab02a9edcdbe149e617" translate="yes" xml:space="preserve">
          <source>Guide to writing Tutorials (TODO)</source>
          <target state="translated">教程编写指南(TODO)</target>
        </trans-unit>
        <trans-unit id="7d49ac2fe6a93b218baff7cae5e0e60393e7661a" translate="yes" xml:space="preserve">
          <source>Guide to writing reference (API) documentation: the numpydoc docstring guide</source>
          <target state="translated">参考文献(API)编写指南:numpydoc docstring指南。</target>
        </trans-unit>
        <trans-unit id="141d1d74d8a6b3e7a7f1418ef539a53ce746ef34" translate="yes" xml:space="preserve">
          <source>Guidelines</source>
          <target state="translated">Guidelines</target>
        </trans-unit>
        <trans-unit id="fefaa04c360e4a9e3930a2840029cc9f56039f5f" translate="yes" xml:space="preserve">
          <source>Gumbel, E. J., &amp;ldquo;Statistics of Extremes,&amp;rdquo; New York: Columbia University Press, 1958.</source>
          <target state="translated">EJ Gumbel，&amp;ldquo;极端情况的统计&amp;rdquo;，纽约：哥伦比亚大学出版社，1958年。</target>
        </trans-unit>
        <trans-unit id="7cf184f4c67ad58283ecb19349720b0cae756829" translate="yes" xml:space="preserve">
          <source>H</source>
          <target state="translated">H</target>
        </trans-unit>
        <trans-unit id="a23a715b33c5262fe3d1b937504a94f4b675a4b6" translate="yes" xml:space="preserve">
          <source>H() (numpy.matrix property)</source>
          <target state="translated">H()(numpy.matrix 属性)</target>
        </trans-unit>
        <trans-unit id="b40b37f0341f572e1998e910b25532a92af5b558" translate="yes" xml:space="preserve">
          <source>Hack away! See &lt;a href=&quot;#editing-workflow&quot;&gt;below&lt;/a&gt;</source>
          <target state="translated">乱走！见&lt;a href=&quot;#editing-workflow&quot;&gt;下文&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ecd57d6fb3350fcd694b91496d526594622dbb6" translate="yes" xml:space="preserve">
          <source>Half precision float: sign bit, 5 bits exponent, 10 bits mantissa</source>
          <target state="translated">半精度浮点数:符号位,5位指数,10位万字符。</target>
        </trans-unit>
        <trans-unit id="297ad7f2c6ead81564e94efe3061b8f926b4dea8" translate="yes" xml:space="preserve">
          <source>Half-precision floating-point number type.</source>
          <target state="translated">半精度浮点数类型。</target>
        </trans-unit>
        <trans-unit id="c895f403bde1ed69e17f92c19862768cc5f5de8d" translate="yes" xml:space="preserve">
          <source>Half-precision functions</source>
          <target state="translated">半精度功能</target>
        </trans-unit>
        <trans-unit id="188b61888bd344a019188c5ddd9af8e491599b6a" translate="yes" xml:space="preserve">
          <source>Hand-generated wrappers</source>
          <target state="translated">手工制作的包装纸</target>
        </trans-unit>
        <trans-unit id="636dbc8830ea645ecf6015e1f4a6dd1accda26f4" translate="yes" xml:space="preserve">
          <source>Handled by &lt;a href=&quot;#c.NpyIter_MultiNew&quot;&gt;&lt;code&gt;NpyIter_MultiNew&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">由&lt;a href=&quot;#c.NpyIter_MultiNew&quot;&gt; &lt;code&gt;NpyIter_MultiNew&lt;/code&gt; &lt;/a&gt;处理</target>
        </trans-unit>
        <trans-unit id="7178628eaa2183565412d3981a3508d31193d4b5" translate="yes" xml:space="preserve">
          <source>Handling complex numbers</source>
          <target state="translated">处理复杂的数字</target>
        </trans-unit>
        <trans-unit id="0294f5e8c997832af6154aa5a34d3bc487dacc89" translate="yes" xml:space="preserve">
          <source>Handling of higher-dimensional arrays (ndim &amp;gt; 2)</source>
          <target state="translated">处理高维数组（ndim&amp;gt; 2）</target>
        </trans-unit>
        <trans-unit id="29536b0ea00b813744dd07cc20d7e2d652df9775" translate="yes" xml:space="preserve">
          <source>Handling of vectors (one-dimensional arrays)</source>
          <target state="translated">处理向量(一维数组)</target>
        </trans-unit>
        <trans-unit id="e090b4f7922057771e37447008f952ba8b43192c" translate="yes" xml:space="preserve">
          <source>Handling the &lt;code&gt;axis&lt;/code&gt; parameter</source>
          <target state="translated">处理 &lt;code&gt;axis&lt;/code&gt; 参数</target>
        </trans-unit>
        <trans-unit id="210d84fcc7fb5c4b75800916312424c57f881c7b" translate="yes" xml:space="preserve">
          <source>Handling the &lt;code&gt;fill_value&lt;/code&gt;</source>
          <target state="translated">处理 &lt;code&gt;fill_value&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e59976d95e4c0283fbcfa38c1a2f893c3bfd15d" translate="yes" xml:space="preserve">
          <source>Handling the mask</source>
          <target state="translated">处理面具</target>
        </trans-unit>
        <trans-unit id="78dcc8157bbf5d134fc488651952052da7016437" translate="yes" xml:space="preserve">
          <source>Hard-coded dimensions, data-buffer-then-dimensions specification, and dimensions-then-data-buffer specification.</source>
          <target state="translated">硬编码尺寸、数据缓冲区再尺寸规范、尺寸再数据缓冲区规范。</target>
        </trans-unit>
        <trans-unit id="edfcf418a2bb124e6b8ce652d8bb7600c0be7269" translate="yes" xml:space="preserve">
          <source>Hardness of the mask</source>
          <target state="translated">面罩的硬度</target>
        </trans-unit>
        <trans-unit id="a06e8ccba0be0394ad2df2eedd04a51d1a1039c5" translate="yes" xml:space="preserve">
          <source>Has no effect, do not use.</source>
          <target state="translated">没有效果,请勿使用。</target>
        </trans-unit>
        <trans-unit id="4669500ffada7a9acbed3d1bf7fceec5a930f074" translate="yes" xml:space="preserve">
          <source>Has the same shape as &lt;code&gt;element&lt;/code&gt;. The values &lt;code&gt;element[isin]&lt;/code&gt; are in &lt;code&gt;test_elements&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;element&lt;/code&gt; 具有相同的形状。值 &lt;code&gt;element[isin]&lt;/code&gt; &lt;code&gt;test_elements&lt;/code&gt; ]在test_elements中。</target>
        </trans-unit>
        <trans-unit id="2d794659e95706af6481a92a9285f876ae1c7d63" translate="yes" xml:space="preserve">
          <source>Have a look at the &lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;github&lt;/a&gt; install help pages available from &lt;a href=&quot;https://help.github.com&quot;&gt;github help&lt;/a&gt;</source>
          <target state="translated">看一看在&lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;github上&lt;/a&gt;安装从帮助页面&lt;a href=&quot;https://help.github.com&quot;&gt;github上的帮助&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ab4d88ad951423d45baeab75192e5801e748751" translate="yes" xml:space="preserve">
          <source>Have a shared library.</source>
          <target state="translated">拥有一个共享图书馆。</target>
        </trans-unit>
        <trans-unit id="d944005e31393bd466d7655b38df2b420878ca75" translate="yes" xml:space="preserve">
          <source>Having a shared library</source>
          <target state="translated">拥有一个共享图书馆</target>
        </trans-unit>
        <trans-unit id="f62bdff9b904bdda1a1ed9ed602657769f3345fd" translate="yes" xml:space="preserve">
          <source>Having compiled code also means that importing NumPy from the development sources needs some additional steps, which are explained below. For the rest of this chapter we assume that you have set up your git repo as described in &lt;a href=&quot;gitwash/index#using-git&quot;&gt;Git for development&lt;/a&gt;.</source>
          <target state="translated">编译代码还意味着从开发源导入NumPy需要一些额外的步骤，下面将对此进行说明。在本章的其余部分中，我们假定您已按照&lt;a href=&quot;gitwash/index#using-git&quot;&gt;Git开发中的说明&lt;/a&gt;设置了git repo 。</target>
        </trans-unit>
        <trans-unit id="ce7b6e9a18227e2359efe8c98f693affe997e690" translate="yes" xml:space="preserve">
          <source>Heckert, N. A. and Filliben, James J. &amp;ldquo;NIST Handbook 148: Dataplot Reference Manual, Volume 2: Let Subcommands and Library Functions&amp;rdquo;, National Institute of Standards and Technology Handbook Series, June 2003. &lt;a href=&quot;https://www.itl.nist.gov/div898/software/dataplot/refman2/auxillar/powpdf.pdf&quot;&gt;https://www.itl.nist.gov/div898/software/dataplot/refman2/auxillar/powpdf.pdf&lt;/a&gt;</source>
          <target state="translated">Neck的Heckert和James J的Filliben。&amp;ldquo; NIST手册148：Dataplot参考手册，第2卷：让子命令和库功能&amp;rdquo;，美国国家标准技术研究所手册系列，2003年6月&lt;a href=&quot;https://www.itl.nist.gov/div898/software/dataplot/refman2/auxillar/powpdf.pdf&quot;&gt;。https：//www.itl.nist。 gov / div898 / software / dataplot / refman2 / auxillar / powpdf.pdf&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f25b2d1977ec1a7cc15a3fe3ee364cef6feeebb6" translate="yes" xml:space="preserve">
          <source>Help increase engagement in good discussion practice: try to identify where discussion may have broken down and provide actionable information, pointers and resources that can lead to positive change on these points.</source>
          <target state="translated">帮助提高对良好讨论做法的参与度:努力确定讨论可能在哪些方面出现了问题,并提供可操作的信息、指针和资源,从而在这些方面产生积极变化。</target>
        </trans-unit>
        <trans-unit id="334c16fc9ac63595f080f7bbcdf324a43ffd5267" translate="yes" xml:space="preserve">
          <source>Helper Functions</source>
          <target state="translated">辅助功能</target>
        </trans-unit>
        <trans-unit id="3cffecba0fc696fb0b452757e50e8d2d6aa15660" translate="yes" xml:space="preserve">
          <source>Helper for pickle.</source>
          <target state="translated">泡菜的帮手。</target>
        </trans-unit>
        <trans-unit id="8e0ce1fc0fa49364a15481aa8d6e74b5ad646a8c" translate="yes" xml:space="preserve">
          <source>Helper routines</source>
          <target state="translated">辅助程序</target>
        </trans-unit>
        <trans-unit id="591b0ee67a75bdd05c2441f5d821e72ac5abd9ff" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;&amp;lt;fortran files&amp;gt;&lt;/code&gt; may also contain signature files. Among other options (see below), the following options can be used in this mode:</source>
          <target state="translated">在此， &lt;code&gt;&amp;lt;fortran files&amp;gt;&lt;/code&gt; 也可能包含签名文件。在其他选项（请参阅下文）中，以下选项可以在此模式下使用：</target>
        </trans-unit>
        <trans-unit id="4ad119f3969c50ae36c69dfd7a8f2258a296a9e4" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;x&lt;/code&gt; is a one-dimensional array of length two whose datatype is a structure with three fields: 1. A string of length 10 or less named &amp;lsquo;name&amp;rsquo;, 2. a 32-bit integer named &amp;lsquo;age&amp;rsquo;, and 3. a 32-bit float named &amp;lsquo;weight&amp;rsquo;.</source>
          <target state="translated">这里 &lt;code&gt;x&lt;/code&gt; 是长度为2的一维数组，其数据类型是具有三个字段的结构：1.长度为10或更短的字符串，名称为&amp;ldquo; name&amp;rdquo;； 2。长度为32位的整数，名称为&amp;ldquo; age&amp;rdquo;； 3。a 32位浮点数，名为&amp;ldquo; weight&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="05d939cfc36f7e101c6969543d3aa4fc112af1c5" translate="yes" xml:space="preserve">
          <source>Here appropriately means at least two tabs. It isn&amp;rsquo;t necessary to line everything up with the opening parenthesis of the function call.</source>
          <target state="translated">这里适当地表示至少两个标签。不必将所有内容与函数调用的左括号对齐。</target>
        </trans-unit>
        <trans-unit id="41762c3a1457e94bd62a7f7522c1df055434f548" translate="yes" xml:space="preserve">
          <source>Here are examples of shapes that do not broadcast:</source>
          <target state="translated">下面是不广播的形状的例子。</target>
        </trans-unit>
        <trans-unit id="1f2d508ec85c3c97b5a1229502e255e40023669a" translate="yes" xml:space="preserve">
          <source>Here are several examples of custom weekmask values. These examples specify the &amp;ldquo;busday&amp;rdquo; default of Monday through Friday being valid days.</source>
          <target state="translated">这是自定义周掩码值的几个示例。这些示例将星期一至星期五的&amp;ldquo; busday&amp;rdquo;默认值指定为有效日期。</target>
        </trans-unit>
        <trans-unit id="4cc8d83645ead10353d3c11cd3d81d28f5fe4bc7" translate="yes" xml:space="preserve">
          <source>Here are some examples of signatures:</source>
          <target state="translated">下面是一些签名的例子。</target>
        </trans-unit>
        <trans-unit id="c7c80754b6ccbe7d6353c18ee79360b34170e3a5" translate="yes" xml:space="preserve">
          <source>Here are some more examples:</source>
          <target state="translated">这里还有一些例子。</target>
        </trans-unit>
        <trans-unit id="edcf4d32cc0d6364c8d8b907e9c3e1d6fd286f96" translate="yes" xml:space="preserve">
          <source>Here are the date units:</source>
          <target state="translated">这里是日期单位。</target>
        </trans-unit>
        <trans-unit id="fcedd65241f400ab6b9cead2ae708d4ee0595afe" translate="yes" xml:space="preserve">
          <source>Here brackets &lt;code&gt;[]&lt;/code&gt; indicate an optional part, dots &lt;code&gt;...&lt;/code&gt; indicate one or more of a previous part. So, &lt;code&gt;[]...&lt;/code&gt; reads zero or more of a previous part.</source>
          <target state="translated">括号 &lt;code&gt;[]&lt;/code&gt; 表示可选部分，点 &lt;code&gt;...&lt;/code&gt; 表示上一个部分中的一个或多个。因此， &lt;code&gt;[]...&lt;/code&gt; 读取零个或多个先前的部分。</target>
        </trans-unit>
        <trans-unit id="9a598f6524593a5ce80868abd4ad9058d26e6370" translate="yes" xml:space="preserve">
          <source>Here is a class that takes a standard ndarray that already exists, casts as our type, and adds an extra attribute.</source>
          <target state="translated">这里是一个类,它采用一个已经存在的标准ndarray,作为我们的类型,并添加一个额外的属性。</target>
        </trans-unit>
        <trans-unit id="6e64dc50ed3c98bebd079533bedfe8d3d04f0a87" translate="yes" xml:space="preserve">
          <source>Here is a conversion table for which functions to use with the new iterator:</source>
          <target state="translated">下面是新迭代器使用哪些函数的转换表。</target>
        </trans-unit>
        <trans-unit id="ae703a87217d209b99ae68f8790ce06f1f882b70" translate="yes" xml:space="preserve">
          <source>Here is a list of some useful NumPy functions and methods names ordered in categories. See &lt;a href=&quot;../reference/routines#routines&quot;&gt;Routines&lt;/a&gt; for the full list.</source>
          <target state="translated">这是一些有用的NumPy函数和方法名称的列表，这些函数和方法的名称按类别排序。有关完整列表，请参见&lt;a href=&quot;../reference/routines#routines&quot;&gt;例程&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c2fbbb0f1468c183a40201806e4aca9dcb3c7060" translate="yes" xml:space="preserve">
          <source>Here is a simple copy function using the iterator. The &lt;code&gt;order&lt;/code&gt; parameter is used to control the memory layout of the allocated result, typically &lt;a href=&quot;array#c.NPY_KEEPORDER&quot;&gt;&lt;code&gt;NPY_KEEPORDER&lt;/code&gt;&lt;/a&gt; is desired.</source>
          <target state="translated">这是使用迭代器的简单复制功能。的 &lt;code&gt;order&lt;/code&gt; 参数被用于控制所分配的结果的存储器布局，通常&lt;a href=&quot;array#c.NPY_KEEPORDER&quot;&gt; &lt;code&gt;NPY_KEEPORDER&lt;/code&gt; &lt;/a&gt;是期望的。</target>
        </trans-unit>
        <trans-unit id="4f499cb9c92d0a44a206fb77f5f29cb1c19da659" translate="yes" xml:space="preserve">
          <source>Here is a simple copy function using the iterator. The &lt;code&gt;order&lt;/code&gt; parameter is used to control the memory layout of the allocated result, typically &lt;a href=&quot;c-api.array#c.NPY_KEEPORDER&quot;&gt;&lt;code&gt;NPY_KEEPORDER&lt;/code&gt;&lt;/a&gt; is desired.</source>
          <target state="translated">这是使用迭代器的简单复制功能。的 &lt;code&gt;order&lt;/code&gt; 参数被用于控制所分配的结果的存储器布局，通常&lt;a href=&quot;c-api.array#c.NPY_KEEPORDER&quot;&gt; &lt;code&gt;NPY_KEEPORDER&lt;/code&gt; &lt;/a&gt;是期望的。</target>
        </trans-unit>
        <trans-unit id="955a08b4bff95343601789d2bf6e0369ccf3f1b3" translate="yes" xml:space="preserve">
          <source>Here is a useful idiom for getting contiguous copies instead of non-contiguous views.</source>
          <target state="translated">这里有一个很有用的成语,用来获取毗连的副本而不是不毗连的视图。</target>
        </trans-unit>
        <trans-unit id="9908262441b7f09837e1f501a21d5cc69908d615" translate="yes" xml:space="preserve">
          <source>Here is an example function which operates like a &amp;ldquo;lambda&amp;rdquo; ufunc:</source>
          <target state="translated">这是一个示例函数，其功能类似于&amp;ldquo; lambda&amp;rdquo; ufunc：</target>
        </trans-unit>
        <trans-unit id="1e3d31fc803b806643f783a13be59435e8ec2879" translate="yes" xml:space="preserve">
          <source>Here is an example outer product function:</source>
          <target state="translated">下面是一个外积函数的例子。</target>
        </trans-unit>
        <trans-unit id="3e01528c46f09f5f5d5be27407d90af619b21250" translate="yes" xml:space="preserve">
          <source>Here is how the variables above are used:</source>
          <target state="translated">下面是上述变量的使用方法。</target>
        </trans-unit>
        <trans-unit id="1637a3171b3e141604dedb2e68519a7e5432d5d7" translate="yes" xml:space="preserve">
          <source>Here is how they can be used with a sample array:</source>
          <target state="translated">下面是如何使用它们的样本数组。</target>
        </trans-unit>
        <trans-unit id="b9c4a8ea1157853e06ffc2f25fe3f9b079de55b6" translate="yes" xml:space="preserve">
          <source>Here is how we might write an &lt;code&gt;iter_add&lt;/code&gt; function, using the Python iterator protocol:</source>
          <target state="translated">这是我们使用Python迭代器协议编写 &lt;code&gt;iter_add&lt;/code&gt; 函数的方式：</target>
        </trans-unit>
        <trans-unit id="82ebceae19f8e179d652196db8007bed9b016e84" translate="yes" xml:space="preserve">
          <source>Here is part of a Cython module named &lt;code&gt;add.pyx&lt;/code&gt; which implements the complex addition functions we previously implemented using f2py:</source>
          <target state="translated">这是一个名为 &lt;code&gt;add.pyx&lt;/code&gt; 的Cython模块的一部分，该模块实现了我们之前使用f2py实现的复杂加法功能：</target>
        </trans-unit>
        <trans-unit id="f27fb417254a59c4a73469e0d501f40b87bdc16a" translate="yes" xml:space="preserve">
          <source>Here is shown a modified version of the previous Fortran code, save it as &lt;code&gt;fib3.f&lt;/code&gt;:</source>
          <target state="translated">这里显示了以前的Fortran代码的修改版本，将其另存为 &lt;code&gt;fib3.f&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="26ce084ba97f0fb601f4ee822ae6a8abc564ba7d" translate="yes" xml:space="preserve">
          <source>Here is the same function, but following the C-style pattern:</source>
          <target state="translated">这里是同样的函数,但遵循C式模式。</target>
        </trans-unit>
        <trans-unit id="d4daff3ad7f47434c82a5051360f6f8f9147bcdd" translate="yes" xml:space="preserve">
          <source>Here the 4th and 5th rows are selected from the indexed array and combined to make a 2-D array.</source>
          <target state="translated">这里从索引数组中选取第4行和第5行,组合成一个二维数组。</target>
        </trans-unit>
        <trans-unit id="879104127602f2f170c22fa52acd13e1c1a2bd91" translate="yes" xml:space="preserve">
          <source>Here the &lt;code&gt;newaxis&lt;/code&gt; index operator inserts a new axis into &lt;code&gt;a&lt;/code&gt;, making it a two-dimensional &lt;code&gt;4x1&lt;/code&gt; array. Combining the &lt;code&gt;4x1&lt;/code&gt; array with &lt;code&gt;b&lt;/code&gt;, which has shape &lt;code&gt;(3,)&lt;/code&gt;, yields a &lt;code&gt;4x3&lt;/code&gt; array.</source>
          <target state="translated">这里， &lt;code&gt;newaxis&lt;/code&gt; 索引操作者插入新的轴成 &lt;code&gt;a&lt;/code&gt; ，使其成为一个二维 &lt;code&gt;4x1&lt;/code&gt; 阵列。将 &lt;code&gt;4x1&lt;/code&gt; 数组与形状为 &lt;code&gt;(3,)&lt;/code&gt; 的 &lt;code&gt;b&lt;/code&gt; 组合，将生成 &lt;code&gt;4x3&lt;/code&gt; 数组。</target>
        </trans-unit>
        <trans-unit id="386e95414daee162c67ba2f23612c05957e9c9fa" translate="yes" xml:space="preserve">
          <source>Here the newaxis index operator inserts a new axis into &lt;code&gt;a&lt;/code&gt;, making it a two-dimensional 4x1 array. &lt;a href=&quot;#figure-4&quot;&gt;Figure 4&lt;/a&gt; illustrates the stretching of both arrays to produce the desired 4x3 output array.</source>
          <target state="translated">这里，newaxis索引操作者插入新的轴成 &lt;code&gt;a&lt;/code&gt; ，使其成为一个二维阵列4X1。&lt;a href=&quot;#figure-4&quot;&gt;图4&lt;/a&gt;说明了两个阵列的拉伸，以产生所需的4x3输出阵列。</target>
        </trans-unit>
        <trans-unit id="948564e37f936b7d719e03a725d3b08432712a65" translate="yes" xml:space="preserve">
          <source>Here we give a list of short and useful tips.</source>
          <target state="translated">在这里,我们给出了一份简短而有用的提示清单。</target>
        </trans-unit>
        <trans-unit id="e461e985122b46693ef966cb6f20d16d3ced03f1" translate="yes" xml:space="preserve">
          <source>Here we specify a seed so that we have reproducible results:</source>
          <target state="translated">在这里我们指定了一个种子,这样我们就有了可重复的结果。</target>
        </trans-unit>
        <trans-unit id="cb190a2b97f5232f09df36f69c4083c62f9d6c52" translate="yes" xml:space="preserve">
          <source>Here we use &lt;a href=&quot;generator#numpy.random.default_rng&quot;&gt;&lt;code&gt;default_rng&lt;/code&gt;&lt;/a&gt; to create an instance of &lt;a href=&quot;generator#numpy.random.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; to generate 3 random integers between 0 (inclusive) and 10 (exclusive):</source>
          <target state="translated">在这里，我们使用&lt;a href=&quot;generator#numpy.random.default_rng&quot;&gt; &lt;code&gt;default_rng&lt;/code&gt; &lt;/a&gt;创建一个&lt;a href=&quot;generator#numpy.random.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;实例，以生成3个介于0（含）和10（不含）之间的随机整数：</target>
        </trans-unit>
        <trans-unit id="a08cc7d7c18f3c3475f96b8b3d6b43f3958b42f1" translate="yes" xml:space="preserve">
          <source>Here we use &lt;a href=&quot;generator#numpy.random.default_rng&quot;&gt;&lt;code&gt;default_rng&lt;/code&gt;&lt;/a&gt; to create an instance of &lt;a href=&quot;generator#numpy.random.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; to generate a random float:</source>
          <target state="translated">在这里，我们使用&lt;a href=&quot;generator#numpy.random.default_rng&quot;&gt; &lt;code&gt;default_rng&lt;/code&gt; &lt;/a&gt;创建一个&lt;a href=&quot;generator#numpy.random.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;实例来生成一个随机浮点数：</target>
        </trans-unit>
        <trans-unit id="a3c11b66e685970faed2b0dab8dcc9874e6f710a" translate="yes" xml:space="preserve">
          <source>Here we use &lt;code&gt;default_rng&lt;/code&gt; to generate 3 random integers between 0 (inclusive) and 10 (exclusive):</source>
          <target state="translated">在这里，我们使用 &lt;code&gt;default_rng&lt;/code&gt; 生成3个随机整数，介于0（含）和10（不含）之间：</target>
        </trans-unit>
        <trans-unit id="8d3f8866347f301a5bb87019f0f0d018be7f046c" translate="yes" xml:space="preserve">
          <source>Here we use &lt;code&gt;default_rng&lt;/code&gt; to generate a random float:</source>
          <target state="translated">在这里，我们使用 &lt;code&gt;default_rng&lt;/code&gt; 生成一个随机浮点数：</target>
        </trans-unit>
        <trans-unit id="a43ab7c4c94ff9df3968be0c3da83726730e60b3" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the listing of sum_squares.pyx:</source>
          <target state="translated">这是sum_squares.pyx的清单：</target>
        </trans-unit>
        <trans-unit id="4f05498cc571c5e0811d261874316f4fcd69c560" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the short summary, complete TOC links are below:</source>
          <target state="translated">这是简短的摘要，完整的TOC链接如下：</target>
        </trans-unit>
        <trans-unit id="30babd25e27e87a901a32627496afe119a238cc9" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;x&lt;/code&gt; is a dictionary mapping keys to values, in this case the integer 1 to the string &amp;ldquo;one&amp;rdquo;, and the string &amp;ldquo;two&amp;rdquo; to the list &lt;code&gt;[1, 2]&lt;/code&gt;. The values may be accessed using their corresponding keys:</source>
          <target state="translated">在此， &lt;code&gt;x&lt;/code&gt; 是将键映射到值的字典，在这种情况下，整数1映射到字符串&amp;ldquo; one&amp;rdquo;，而字符串&amp;ldquo; two&amp;rdquo;则映射到列表 &lt;code&gt;[1, 2]&lt;/code&gt; 。可以使用它们的相应键来访问这些值：</target>
        </trans-unit>
        <trans-unit id="1bb0a1675e1ab72957846b002b2ccbd5daaee32d" translate="yes" xml:space="preserve">
          <source>Here, I&amp;rsquo;ve used the built-in enumerate iterator to return the iterator index as well as the value.</source>
          <target state="translated">在这里，我使用了内置的枚举迭代器来返回迭代器索引和值。</target>
        </trans-unit>
        <trans-unit id="423ebc2c2e7601fe55f4484a7fb3dc69ce69a81b" translate="yes" xml:space="preserve">
          <source>Here, U is drawn from the uniform distribution over (0,1].</source>
          <target state="translated">这里,U来自于(0,1]上的均匀分布。</target>
        </trans-unit>
        <trans-unit id="b81e3c833ac1c20cf33999c717a7683fc509fd53" translate="yes" xml:space="preserve">
          <source>Here, you grabbed a section of your array from index position 3 through index position 8.</source>
          <target state="translated">这里,你从索引位置3到索引位置8抓取了数组的一部分。</target>
        </trans-unit>
        <trans-unit id="9958f2320c4c020dbe0ba918682ede328e6342d6" translate="yes" xml:space="preserve">
          <source>Hermite</source>
          <target state="translated">Hermite</target>
        </trans-unit>
        <trans-unit id="3e97b960fb6669c7ce3d868bc1ee39fbd840fc5f" translate="yes" xml:space="preserve">
          <source>Hermite (class in numpy.polynomial.hermite)</source>
          <target state="translated">赫米特(numpy.polynomial.hermite中的类)</target>
        </trans-unit>
        <trans-unit id="666fe7ebc09d7395dcf2297ae16799bfb275707b" translate="yes" xml:space="preserve">
          <source>Hermite Class</source>
          <target state="translated">赫米特级</target>
        </trans-unit>
        <trans-unit id="78bcd4fcaaa0c27a38e217337ec719b8d794b08b" translate="yes" xml:space="preserve">
          <source>Hermite Module, &amp;ldquo;Physicists&amp;rsquo;&amp;rdquo; (&lt;code&gt;numpy.polynomial.hermite&lt;/code&gt;)</source>
          <target state="translated">Hermite模块，&amp;ldquo;物理学家&amp;rdquo;（ &lt;code&gt;numpy.polynomial.hermite&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="20e36a23caee8661ea5087eb6b2833159c8b55f9" translate="yes" xml:space="preserve">
          <source>Hermite Module, &amp;ldquo;Physicists&amp;rsquo;&amp;rdquo; (numpy.polynomial.hermite)</source>
          <target state="translated">Hermite模块，&amp;ldquo;物理学家&amp;rdquo;（numpy.polynomial.hermite）</target>
        </trans-unit>
        <trans-unit id="4e51cfc7050a81e8b6b2247a7d2dcbdd5d5665a8" translate="yes" xml:space="preserve">
          <source>Hermite Module, “Physicists’” (numpy.polynomial.hermite)</source>
          <target state="translated">Hermite模块,&quot;物理学家&quot;(numpy.polynomial.hermite)</target>
        </trans-unit>
        <trans-unit id="7e732e7a329c7f9da3eef2d091dd68d62fa1ae1a" translate="yes" xml:space="preserve">
          <source>Hermite Series, &amp;ldquo;Physicists&amp;rdquo; (&lt;code&gt;numpy.polynomial.hermite&lt;/code&gt;)</source>
          <target state="translated">Hermite系列，&amp;ldquo;物理学家&amp;rdquo;（ &lt;code&gt;numpy.polynomial.hermite&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="d4d4eab91a42ee672e761807e2ccfac51f95da47" translate="yes" xml:space="preserve">
          <source>Hermite Series, &amp;ldquo;Physicists&amp;rdquo; (numpy.polynomial.hermite)</source>
          <target state="translated">Hermite系列，&amp;ldquo;物理学家&amp;rdquo;（numpy.polynomial.hermite）</target>
        </trans-unit>
        <trans-unit id="321f1ab84f3ad6f4602b6463648250d7c017db66" translate="yes" xml:space="preserve">
          <source>Hermite coefficients in order of increasing degree, i.e, &lt;code&gt;(1, 2, 3)&lt;/code&gt; gives &lt;code&gt;1*H_0(x) + 2*H_1(X) + 3*H_2(x)&lt;/code&gt;.</source>
          <target state="translated">厄米系数按递增的顺序排列，即 &lt;code&gt;(1, 2, 3)&lt;/code&gt; 给出 &lt;code&gt;1*H_0(x) + 2*H_1(X) + 3*H_2(x)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="030c6d9cd5a3996624a5dedd47cce0a8b255a2e1" translate="yes" xml:space="preserve">
          <source>Hermite coefficients ordered from low to high. If &lt;code&gt;y&lt;/code&gt; was 2-D, the coefficients for the data in column k of &lt;code&gt;y&lt;/code&gt; are in column &lt;code&gt;k&lt;/code&gt;.</source>
          <target state="translated">厄米系数从低到高排序。如果 &lt;code&gt;y&lt;/code&gt; 为2-d，在的k列中的数据的系数 &lt;code&gt;y&lt;/code&gt; 在柱 &lt;code&gt;k&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fdaeee3c1bfcab3d833e2cd601bbef119c7ca375" translate="yes" xml:space="preserve">
          <source>Hermite series</source>
          <target state="translated">Hermite系列</target>
        </trans-unit>
        <trans-unit id="5d7c6da49173b96e3654eaebdb82df4267a07cd8" translate="yes" xml:space="preserve">
          <source>Hermite series coefficients of the integral.</source>
          <target state="translated">赫米特系列系数的积分。</target>
        </trans-unit>
        <trans-unit id="f178c08ed0e44e86c3dcdcdd94165f4d2159704d" translate="yes" xml:space="preserve">
          <source>Hermite series of power.</source>
          <target state="translated">赫米特系列的动力。</target>
        </trans-unit>
        <trans-unit id="4b1ee605707018d73fef71e944f33b064cb30198" translate="yes" xml:space="preserve">
          <source>Hermite series of the derivative.</source>
          <target state="translated">赫米特系列的衍生物。</target>
        </trans-unit>
        <trans-unit id="f3b525d4a933addff05d89e23fb102c4771100af" translate="yes" xml:space="preserve">
          <source>Hermite series whose graph is a straight line.</source>
          <target state="translated">赫米特数列的图形是一条直线。</target>
        </trans-unit>
        <trans-unit id="f15ba129dfce798b05af2ecf87c4c56e141a51c6" translate="yes" xml:space="preserve">
          <source>Hermite weight function</source>
          <target state="translated">赫米特重量函数</target>
        </trans-unit>
        <trans-unit id="e91ac76ec50377772a4d0a0fad317ac36bda67d9" translate="yes" xml:space="preserve">
          <source>Hermite.__call__()</source>
          <target state="translated">Hermite.__call__()</target>
        </trans-unit>
        <trans-unit id="e00caea2e8b760013383648bd7a0c8356ad2d21a" translate="yes" xml:space="preserve">
          <source>Hermite.basis()</source>
          <target state="translated">Hermite.basis()</target>
        </trans-unit>
        <trans-unit id="510f491be62b2a7e3419873aabcc929cba4aad0a" translate="yes" xml:space="preserve">
          <source>Hermite.cast()</source>
          <target state="translated">Hermite.cast()</target>
        </trans-unit>
        <trans-unit id="0bbb26adb9485391c59073a0150f1aeb28250175" translate="yes" xml:space="preserve">
          <source>Hermite.convert()</source>
          <target state="translated">Hermite.convert()</target>
        </trans-unit>
        <trans-unit id="46e59fa3efb39aa8de99b77595a66c5aca6f95af" translate="yes" xml:space="preserve">
          <source>Hermite.copy()</source>
          <target state="translated">Hermite.copy()</target>
        </trans-unit>
        <trans-unit id="150883af29979fdad32a1485afaa265ae485116d" translate="yes" xml:space="preserve">
          <source>Hermite.cutdeg()</source>
          <target state="translated">Hermite.cutdeg()</target>
        </trans-unit>
        <trans-unit id="6e3addaaf8a990d63bd9644e879a45bfaaa3d048" translate="yes" xml:space="preserve">
          <source>Hermite.degree()</source>
          <target state="translated">Hermite.degree()</target>
        </trans-unit>
        <trans-unit id="1898e27484be79666c2d0d0671ff99bb73c61fb0" translate="yes" xml:space="preserve">
          <source>Hermite.deriv()</source>
          <target state="translated">Hermite.deriv()</target>
        </trans-unit>
        <trans-unit id="74d98daf1082d857dc8043ef7d611943987bcbf6" translate="yes" xml:space="preserve">
          <source>Hermite.domain</source>
          <target state="translated">Hermite.domain</target>
        </trans-unit>
        <trans-unit id="69a9477b050cf5e84517bc3ba4b2540b289809dd" translate="yes" xml:space="preserve">
          <source>Hermite.fit()</source>
          <target state="translated">Hermite.fit()</target>
        </trans-unit>
        <trans-unit id="ee377bb8277d3cc87539518382039049d3434ab2" translate="yes" xml:space="preserve">
          <source>Hermite.fromroots()</source>
          <target state="translated">Hermite.fromroots()</target>
        </trans-unit>
        <trans-unit id="f3d364e431135afb3032332cc59ddec1d0087c65" translate="yes" xml:space="preserve">
          <source>Hermite.has_samecoef()</source>
          <target state="translated">Hermite.has_samecoef()</target>
        </trans-unit>
        <trans-unit id="4f5a15af827e1a34e56c335924bc117f06d9550b" translate="yes" xml:space="preserve">
          <source>Hermite.has_samedomain()</source>
          <target state="translated">Hermite.has_samedomain()</target>
        </trans-unit>
        <trans-unit id="5c6b35ea3f6249366ad14a64bf61b1e2f4ef3fa2" translate="yes" xml:space="preserve">
          <source>Hermite.has_sametype()</source>
          <target state="translated">Hermite.has_sametype()</target>
        </trans-unit>
        <trans-unit id="51595f8a76f511b51c25db7ca6799c30af573ff1" translate="yes" xml:space="preserve">
          <source>Hermite.has_samewindow()</source>
          <target state="translated">Hermite.has_samewindow()</target>
        </trans-unit>
        <trans-unit id="fae0683eb07169c7856c805873bd384998f4ce23" translate="yes" xml:space="preserve">
          <source>Hermite.identity()</source>
          <target state="translated">Hermite.identity()</target>
        </trans-unit>
        <trans-unit id="6d7f1a135c9fd7bdb20e45551f21a01a1b98749d" translate="yes" xml:space="preserve">
          <source>Hermite.integ()</source>
          <target state="translated">Hermite.integ()</target>
        </trans-unit>
        <trans-unit id="87c4ac5818fcc034b0a86594470677888839404b" translate="yes" xml:space="preserve">
          <source>Hermite.linspace()</source>
          <target state="translated">Hermite.linspace()</target>
        </trans-unit>
        <trans-unit id="e4e8e042f2bff68022c1506a796ae1f2b1a45e62" translate="yes" xml:space="preserve">
          <source>Hermite.mapparms()</source>
          <target state="translated">Hermite.mapparms()</target>
        </trans-unit>
        <trans-unit id="dd2d324dc15bd07b8d8eba7c1b9a303c6e61cbe9" translate="yes" xml:space="preserve">
          <source>Hermite.roots()</source>
          <target state="translated">Hermite.roots()</target>
        </trans-unit>
        <trans-unit id="357de88ac6a59383fa4db68dc02a30a97aa55b31" translate="yes" xml:space="preserve">
          <source>Hermite.trim()</source>
          <target state="translated">Hermite.trim()</target>
        </trans-unit>
        <trans-unit id="ded6de456aef1c9f3f0dbb030eecbec360a2a3d9" translate="yes" xml:space="preserve">
          <source>Hermite.truncate()</source>
          <target state="translated">Hermite.truncate()</target>
        </trans-unit>
        <trans-unit id="bfa82105a95ddf719538cbbbc2136f5bdc652b85" translate="yes" xml:space="preserve">
          <source>HermiteE</source>
          <target state="translated">HermiteE</target>
        </trans-unit>
        <trans-unit id="213b3add1699deb17fd0362b28ee9eaa1e08297e" translate="yes" xml:space="preserve">
          <source>HermiteE (class in numpy.polynomial.hermite_e)</source>
          <target state="translated">HermiteE (numpy.polynomial.hermite_e中的类)</target>
        </trans-unit>
        <trans-unit id="6628b3304670336395ae6732f06085678ac90c72" translate="yes" xml:space="preserve">
          <source>HermiteE Class</source>
          <target state="translated">HermiteE级</target>
        </trans-unit>
        <trans-unit id="da640bfdcf0affcdb1cb3e699294b822aff50f4d" translate="yes" xml:space="preserve">
          <source>HermiteE Module, &amp;ldquo;Probabilists&amp;rsquo;&amp;rdquo; (&lt;code&gt;numpy.polynomial.hermite_e&lt;/code&gt;)</source>
          <target state="translated">HermiteE模块，&amp;ldquo;概率专家&amp;rdquo;（ &lt;code&gt;numpy.polynomial.hermite_e&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="93c34719e313928a50611a43ea25a148a84b264b" translate="yes" xml:space="preserve">
          <source>HermiteE Module, &amp;ldquo;Probabilists&amp;rsquo;&amp;rdquo; (numpy.polynomial.hermite_e)</source>
          <target state="translated">HermiteE模块，&amp;ldquo;概率主义者&amp;rdquo;（numpy.polynomial.hermite_e）</target>
        </trans-unit>
        <trans-unit id="56f6680ec7b317dd6ae3f4dbb7e9720ab2e6af02" translate="yes" xml:space="preserve">
          <source>HermiteE Module, “Probabilists’” (numpy.polynomial.hermite_e)</source>
          <target state="translated">HermiteE模块,&quot;概率论者&quot;(numpy.polynomial.hermite_e)</target>
        </trans-unit>
        <trans-unit id="a7da5893b105551d489e12a654065cc1aa5b0de0" translate="yes" xml:space="preserve">
          <source>HermiteE Series, &amp;ldquo;Probabilists&amp;rdquo; (&lt;code&gt;numpy.polynomial.hermite_e&lt;/code&gt;)</source>
          <target state="translated">HermiteE系列，&amp;ldquo;概率论者&amp;rdquo;（ &lt;code&gt;numpy.polynomial.hermite_e&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="01652b3974c2bf789bf8511d4ddd036a45eab615" translate="yes" xml:space="preserve">
          <source>HermiteE Series, &amp;ldquo;Probabilists&amp;rdquo; (numpy.polynomial.hermite_e)</source>
          <target state="translated">HermiteE系列，&amp;ldquo;概率论者&amp;rdquo;（numpy.polynomial.hermite_e）</target>
        </trans-unit>
        <trans-unit id="7090e745bd4427b0619b5249b32836cf9e710c91" translate="yes" xml:space="preserve">
          <source>HermiteE coefficients in order of increasing degree, i.e, &lt;code&gt;(1, 2, 3)&lt;/code&gt; gives &lt;code&gt;1*He_0(x) + 2*He_1(X) + 3*He_2(x)&lt;/code&gt;.</source>
          <target state="translated">HermiteE系数按递增顺序递增，即 &lt;code&gt;(1, 2, 3)&lt;/code&gt; 给出 &lt;code&gt;1*He_0(x) + 2*He_1(X) + 3*He_2(x)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8fdce93a022f8c8da6190fdc0f7e0fa2783e7c6d" translate="yes" xml:space="preserve">
          <source>HermiteE series</source>
          <target state="translated">HermiteE系列</target>
        </trans-unit>
        <trans-unit id="f8a256fa19026169a866b5809900fc5fb915e807" translate="yes" xml:space="preserve">
          <source>HermiteE weight function.</source>
          <target state="translated">HermiteE重量函数。</target>
        </trans-unit>
        <trans-unit id="f2a1b68f303ab3a67abc7b2e4c4c8451183b7095" translate="yes" xml:space="preserve">
          <source>HermiteE.__call__()</source>
          <target state="translated">HermiteE.__call__()</target>
        </trans-unit>
        <trans-unit id="45c27d16e911c80a7d363f3c39ba54997fd020cd" translate="yes" xml:space="preserve">
          <source>HermiteE.basis()</source>
          <target state="translated">HermiteE.basis()</target>
        </trans-unit>
        <trans-unit id="b45b6525bda44ccf736a4ef59137ed1b81c51100" translate="yes" xml:space="preserve">
          <source>HermiteE.cast()</source>
          <target state="translated">HermiteE.cast()</target>
        </trans-unit>
        <trans-unit id="4ddefc1ce033e171e5d4661134688bd82e8bc5af" translate="yes" xml:space="preserve">
          <source>HermiteE.convert()</source>
          <target state="translated">HermiteE.convert()</target>
        </trans-unit>
        <trans-unit id="002903a3a64a57beced04a1c5706dd609af411f5" translate="yes" xml:space="preserve">
          <source>HermiteE.copy()</source>
          <target state="translated">HermiteE.copy()</target>
        </trans-unit>
        <trans-unit id="b24cf643ce7571c11b38beb07f1dba60d0898965" translate="yes" xml:space="preserve">
          <source>HermiteE.cutdeg()</source>
          <target state="translated">HermiteE.cutdeg()</target>
        </trans-unit>
        <trans-unit id="564634c0d69d527c3b8fbcf352579c91cc6babc0" translate="yes" xml:space="preserve">
          <source>HermiteE.degree()</source>
          <target state="translated">HermiteE.degree()</target>
        </trans-unit>
        <trans-unit id="b0998c48dfd3e6da9f8d9a094fe9026de37d9068" translate="yes" xml:space="preserve">
          <source>HermiteE.deriv()</source>
          <target state="translated">HermiteE.deriv()</target>
        </trans-unit>
        <trans-unit id="e3b7e4ce40140bfad9d15417ff37a5918c3d9ee7" translate="yes" xml:space="preserve">
          <source>HermiteE.domain</source>
          <target state="translated">HermiteE.domain</target>
        </trans-unit>
        <trans-unit id="b9a9cf1e6530dd58c8fe754b4c5e909f051929ea" translate="yes" xml:space="preserve">
          <source>HermiteE.fit()</source>
          <target state="translated">HermiteE.fit()</target>
        </trans-unit>
        <trans-unit id="4a10eb67a6e8118b67d08f9c1672e5c1ef31f7e7" translate="yes" xml:space="preserve">
          <source>HermiteE.fromroots()</source>
          <target state="translated">HermiteE.fromroots()</target>
        </trans-unit>
        <trans-unit id="f215586092039a3f249d19a38ef5f2e5c8b9fe46" translate="yes" xml:space="preserve">
          <source>HermiteE.has_samecoef()</source>
          <target state="translated">HermiteE.has_samecoef()</target>
        </trans-unit>
        <trans-unit id="e303961ece2b00de2ea59d3add859f3b9afba3be" translate="yes" xml:space="preserve">
          <source>HermiteE.has_samedomain()</source>
          <target state="translated">HermiteE.has_samedomain()</target>
        </trans-unit>
        <trans-unit id="56c531828abb17c1fa8561b9e8274772104c7875" translate="yes" xml:space="preserve">
          <source>HermiteE.has_sametype()</source>
          <target state="translated">HermiteE.has_sametype()</target>
        </trans-unit>
        <trans-unit id="f597206a0348307571c5766a04f0329e0e5977a6" translate="yes" xml:space="preserve">
          <source>HermiteE.has_samewindow()</source>
          <target state="translated">HermiteE.has_samewindow()</target>
        </trans-unit>
        <trans-unit id="edecbdf0322d9c36d15b82f596749f9baa998818" translate="yes" xml:space="preserve">
          <source>HermiteE.identity()</source>
          <target state="translated">HermiteE.identity()</target>
        </trans-unit>
        <trans-unit id="50879495edc6ec638987e4aab2fb5c3ff2693ffc" translate="yes" xml:space="preserve">
          <source>HermiteE.integ()</source>
          <target state="translated">HermiteE.integ()</target>
        </trans-unit>
        <trans-unit id="7644c7d4879b67345881eccc21f74f5ac1d76221" translate="yes" xml:space="preserve">
          <source>HermiteE.linspace()</source>
          <target state="translated">HermiteE.linspace()</target>
        </trans-unit>
        <trans-unit id="71240e92395878a17c98ad6cabf8e728e1e375a7" translate="yes" xml:space="preserve">
          <source>HermiteE.mapparms()</source>
          <target state="translated">HermiteE.mapparms()</target>
        </trans-unit>
        <trans-unit id="918dc10943107e5fa1f93651ccb4cc1d4ca399a0" translate="yes" xml:space="preserve">
          <source>HermiteE.roots()</source>
          <target state="translated">HermiteE.roots()</target>
        </trans-unit>
        <trans-unit id="6c5620ec0bf2dc54449e61b049184a2294791751" translate="yes" xml:space="preserve">
          <source>HermiteE.trim()</source>
          <target state="translated">HermiteE.trim()</target>
        </trans-unit>
        <trans-unit id="8b9f703c9558cb71c68ad02c3049b60b8b59198b" translate="yes" xml:space="preserve">
          <source>HermiteE.truncate()</source>
          <target state="translated">HermiteE.truncate()</target>
        </trans-unit>
        <trans-unit id="a2691f3b6c74bc9be228ebe1bfd4aaa8b167edac" translate="yes" xml:space="preserve">
          <source>Hermite_e series coefficients of the integral.</source>
          <target state="translated">Hermite_e系列系数的积分。</target>
        </trans-unit>
        <trans-unit id="cb6305ebb37efa97b74f55f04adb878c2cfd6823" translate="yes" xml:space="preserve">
          <source>Hermitian (symmetric if all elements are real), positive-definite input matrix.</source>
          <target state="translated">隐函数(如果所有元素都是实数,则是对称的),正定义输入矩阵。</target>
        </trans-unit>
        <trans-unit id="559550c9b0251579dbef6add2f3cc35db020af9a" translate="yes" xml:space="preserve">
          <source>Hermitian FFTs</source>
          <target state="translated">隐性FFTs</target>
        </trans-unit>
        <trans-unit id="d6600c2342a8053253425f9846737e2bf29ea82c" translate="yes" xml:space="preserve">
          <source>Hermitian or real symmetric matrices whose eigenvalues and eigenvectors are to be computed.</source>
          <target state="translated">隐性或实对称矩阵,其特征值和特征向量要计算。</target>
        </trans-unit>
        <trans-unit id="2e330e11eac48710d52dc39e422ecae197585b4d" translate="yes" xml:space="preserve">
          <source>High-order polynomials may oscillate wildly:</source>
          <target state="translated">高阶多项式可能会疯狂振荡。</target>
        </trans-unit>
        <trans-unit id="4be99f1c1557117aa5c64902eb10d5b0886a0d69" translate="yes" xml:space="preserve">
          <source>Higher dimensions</source>
          <target state="translated">更高的层面</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
