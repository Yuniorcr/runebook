<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="numpy">
    <body>
      <group id="numpy">
        <trans-unit id="89f82c7a5bbe0891c1df2aa46cbdf990d1794aa1" translate="yes" xml:space="preserve">
          <source>Whenever &lt;a href=&quot;#c.NPY_VERSION&quot;&gt;&lt;code&gt;NPY_VERSION&lt;/code&gt;&lt;/a&gt; != PyArray_GetNDArrayCVersion, the extension has to be recompiled (ABI incompatibility).</source>
          <target state="translated">每当&lt;a href=&quot;#c.NPY_VERSION&quot;&gt; &lt;code&gt;NPY_VERSION&lt;/code&gt; &lt;/a&gt;！= PyArray_GetNDArrayCVersion时，都必须重新编译扩展名（ABI不兼容）。</target>
        </trans-unit>
        <trans-unit id="3e2b99bc93c54f0bc24f4acf841fece1023b07a0" translate="yes" xml:space="preserve">
          <source>Whenever &lt;a href=&quot;#c.PY_ARRAY_UNIQUE_SYMBOL&quot;&gt;&lt;code&gt;PY_ARRAY_UNIQUE_SYMBOL&lt;/code&gt;&lt;/a&gt; is #defined, it also changes the name of the variable holding the C-API, which defaults to &lt;code&gt;PyArray_API&lt;/code&gt;, to whatever the macro is #defined to.</source>
          <target state="translated">每当&lt;a href=&quot;#c.PY_ARRAY_UNIQUE_SYMBOL&quot;&gt; &lt;code&gt;PY_ARRAY_UNIQUE_SYMBOL&lt;/code&gt; &lt;/a&gt;被定义时，它也会将保存C-API的变量名（默认为 &lt;code&gt;PyArray_API&lt;/code&gt; ）更改为#defined定义的宏。</target>
        </trans-unit>
        <trans-unit id="934b37ef17a0c4c0c83c595fef5a62578238ee15" translate="yes" xml:space="preserve">
          <source>Whenever a data-type is required in a NumPy function or method, either a &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; object or something that can be converted to one can be supplied. Such conversions are done by the &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; constructor:</source>
          <target state="translated">每当NumPy函数或方法中需要数据类型时，都可以提供&lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;对象或可以转换为一个的对象。此类转换由&lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;构造函数完成：</target>
        </trans-unit>
        <trans-unit id="80254bc9efba4102e15f18db7d8295d8697a0360" translate="yes" xml:space="preserve">
          <source>Whenever a writeable operand has fewer elements than the full iteration space, that operand is undergoing a reduction. The &lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt;&lt;code&gt;nditer&lt;/code&gt;&lt;/a&gt; object requires that any reduction operand be flagged as read-write, and only allows reductions when &amp;lsquo;reduce_ok&amp;rsquo; is provided as an iterator flag.</source>
          <target state="translated">只要可写操作数的元素数少于完整的迭代空间，该操作数就会减少。所述&lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt; &lt;code&gt;nditer&lt;/code&gt; &lt;/a&gt;对象要求的任何减少操作数仅标记为可读写的，并且允许减少当&amp;ldquo;reduce_ok&amp;rdquo;作为一个迭代标志被提供。</target>
        </trans-unit>
        <trans-unit id="090346f0957607fc5beeda4f38e177d1918c4444" translate="yes" xml:space="preserve">
          <source>Where True, yield &lt;code&gt;x&lt;/code&gt;, otherwise yield &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">如果为True，则产生 &lt;code&gt;x&lt;/code&gt; ，否则产生 &lt;code&gt;y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a5eb067bd3fe81e1af9c383f00cfc0ba136e903" translate="yes" xml:space="preserve">
          <source>Where people expect that the 1st location will be incremented by 3. In fact, it will only be incremented by 1. The reason is because a new array is extracted from the original (as a temporary) containing the values at 1, 1, 3, 1, then the value 1 is added to the temporary, and then the temporary is assigned back to the original array. Thus the value of the array at x[1]+1 is assigned to x[1] three times, rather than being incremented 3 times.</source>
          <target state="translated">在这里,人们期望第1个位置会被递增3,事实上,它只会被递增1,原因在于从原数组(作为临时数组)中提取一个新的数组,其中包含1,1,3,1处的值,然后将值1加到临时数组中,再将临时数组分配回原数组。因此,x[1]+1处的数组的值被分配给x[1]三次,而不是递增3次。</target>
        </trans-unit>
        <trans-unit id="34d448bd986c4660db094fa15ea808d4305175ff" translate="yes" xml:space="preserve">
          <source>Where references like [1] appear in a tables within a numpydoc docstring, the table markup will be broken by numpydoc processing. See &lt;a href=&quot;https://github.com/numpy/numpydoc/issues/130&quot;&gt;numpydoc issue #130&lt;/a&gt;</source>
          <target state="translated">如果像[1]这样的引用出现在numpydoc文档字符串内的表中，则表标记将被numpydoc处理破坏。请参阅&lt;a href=&quot;https://github.com/numpy/numpydoc/issues/130&quot;&gt;numpydoc问题＃130&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b58703967453c474e94cf57585adb3b2a50448ed" translate="yes" xml:space="preserve">
          <source>Where the library can be found.</source>
          <target state="translated">在哪里可以找到图书馆。</target>
        </trans-unit>
        <trans-unit id="54df46f7307aa74c464486f1ea35cde9a77febe6" translate="yes" xml:space="preserve">
          <source>Where to install the npy-pkg config file, relatively to the current package path.</source>
          <target state="translated">安装npy-pkg配置文件的位置,相对于当前软件包的路径。</target>
        </trans-unit>
        <trans-unit id="93d30f1df70c77ec829a136f4d8b2ef0c3b96d94" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;arg1&lt;/code&gt; is a subclass of &lt;code&gt;arg2&lt;/code&gt; or not.</source>
          <target state="translated">无论 &lt;code&gt;arg1&lt;/code&gt; 是的子类 &lt;code&gt;arg2&lt;/code&gt; 与否。</target>
        </trans-unit>
        <trans-unit id="4cf13fb8eefba779715af0f3f14fe972d84fd59d" translate="yes" xml:space="preserve">
          <source>Whether automatically cast the type of the field to the maximum.</source>
          <target state="translated">是否自动将字段的类型投到最大。</target>
        </trans-unit>
        <trans-unit id="7ded38313492e3b9340e10eb5e7bd8c5c0bea96c" translate="yes" xml:space="preserve">
          <source>Whether iteration requires access to the Python API, for example if one of the operands is an object array.</source>
          <target state="translated">迭代是否需要访问Python API,例如如果操作数之一是一个对象数组。</target>
        </trans-unit>
        <trans-unit id="08ba3ba6d86470ddcf5c7c987a831ffff108d8b4" translate="yes" xml:space="preserve">
          <source>Whether masked data are propagated (True) or set to 0 (False) for the computation. Default is False. Propagating the mask means that if a masked value appears in a row or column, the whole row or column is considered masked.</source>
          <target state="translated">掩码数据是否被传播(True)或设置为0(False)进行计算。默认为False。传播掩码意味着如果掩码值出现在某行或某列中,则整行或整列都被视为掩码。</target>
        </trans-unit>
        <trans-unit id="942b421e5894c463ded7c95650a67b6fe3cd084e" translate="yes" xml:space="preserve">
          <source>Whether masked data should be discarded or considered as duplicates.</source>
          <target state="translated">屏蔽的数据是否应该被丢弃或视为重复数据。</target>
        </trans-unit>
        <trans-unit id="8637ce438fa1d406f7ec1653600c39aad46d9db8" translate="yes" xml:space="preserve">
          <source>Whether masked values in &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are considered equal (True) or not (False). They are considered equal by default.</source>
          <target state="translated">是否将 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 中的掩码值视为相等（真）或不相等（假）。默认情况下，它们被视为相等。</target>
        </trans-unit>
        <trans-unit id="6867499c63cb6abaeab85ff30463c9432618d2ee" translate="yes" xml:space="preserve">
          <source>Whether masked values in a or b are considered equal (True) or not (False).</source>
          <target state="translated">a或b中的掩码值是否被视为相等(True)或不相等(False)。</target>
        </trans-unit>
        <trans-unit id="288daa4940dd3020af5ede621755e8ef6fcd2c3a" translate="yes" xml:space="preserve">
          <source>Whether missing values (if any) should be treated as the largest values (True) or the smallest values (False) When the array contains unmasked values at the same extremes of the datatype, the ordering of these values and the masked values is undefined.</source>
          <target state="translated">当数组在数据类型的同一极端包含未屏蔽的值时,这些值和被屏蔽的值的顺序是未定义的。</target>
        </trans-unit>
        <trans-unit id="7da3b2e79fc5148bb637715841cccf76fc788e07" translate="yes" xml:space="preserve">
          <source>Whether missing values (if any) should be treated as the largest values (True) or the smallest values (False) When the array contains unmasked values sorting at the same extremes of the datatype, the ordering of these values and the masked values is undefined.</source>
          <target state="translated">缺失的值(如果有的话)是否应该作为最大的值(True)或最小的值(False)来处理。 当数组包含未屏蔽的值,在数据类型的同一极端进行排序时,这些值和屏蔽的值的排序是未定义的。</target>
        </trans-unit>
        <trans-unit id="a6481db2a658331329f9aef51a26603d0843b05c" translate="yes" xml:space="preserve">
          <source>Whether or not an array is byte-swapped is determined by the data-type of the array. Native byte-order arrays are always requested by &lt;a href=&quot;../reference/c-api/array#c.PyArray_FROM_OTF&quot;&gt;&lt;code&gt;PyArray_FROM_OTF&lt;/code&gt;&lt;/a&gt; and so there is no need for a &lt;a href=&quot;../reference/c-api/array#c.NPY_ARRAY_NOTSWAPPED&quot;&gt;&lt;code&gt;NPY_ARRAY_NOTSWAPPED&lt;/code&gt;&lt;/a&gt; flag in the requirements argument. There is also no way to get a byte-swapped array from this routine.</source>
          <target state="translated">数组是否被字节交换取决于数组的数据类型。&lt;a href=&quot;../reference/c-api/array#c.PyArray_FROM_OTF&quot;&gt; &lt;code&gt;PyArray_FROM_OTF&lt;/code&gt; &lt;/a&gt;始终请求本机字节顺序数组，因此在需求参数中不需要&lt;a href=&quot;../reference/c-api/array#c.NPY_ARRAY_NOTSWAPPED&quot;&gt; &lt;code&gt;NPY_ARRAY_NOTSWAPPED&lt;/code&gt; &lt;/a&gt;标志。也没有办法从该例程中获取字节交换数组。</target>
        </trans-unit>
        <trans-unit id="ec0eb17948661387af03eedbd16c0982b256d2ca" translate="yes" xml:space="preserve">
          <source>Whether or not there are iterations left.</source>
          <target state="translated">是否还有迭代。</target>
        </trans-unit>
        <trans-unit id="6c6ce4cbc91d3e04017743bd327936e59b4be559" translate="yes" xml:space="preserve">
          <source>Whether or not to compute &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;vh&lt;/code&gt; in addition to &lt;code&gt;s&lt;/code&gt;. True by default.</source>
          <target state="translated">除 &lt;code&gt;s&lt;/code&gt; 外是否计算 &lt;code&gt;u&lt;/code&gt; 和 &lt;code&gt;vh&lt;/code&gt; 。默认为True。</target>
        </trans-unit>
        <trans-unit id="34608785e0c8e6698e050294c20a41fc581a7a43" translate="yes" xml:space="preserve">
          <source>Whether the array data is Fortran-contiguous or not. Since Fortran-contiguous arrays are a common form of non-C-contiguity, we allow them to be written directly to disk for efficiency.</source>
          <target state="translated">数组数据是否为Fortran-contiguous。由于Fortran-contiguous数组是一种常见的非C-contiguity形式,为了提高效率,我们允许其直接写入磁盘。</target>
        </trans-unit>
        <trans-unit id="a7b87db28e0b29fd77663f2df3cc4a859b46d1b1" translate="yes" xml:space="preserve">
          <source>Whether the array is to interpreted as C-order or Fortran-order.</source>
          <target state="translated">数组的解释是C-order还是Fortran-order。</target>
        </trans-unit>
        <trans-unit id="67ccb9f79d95e3495f165b5e459e15b371aacf54" translate="yes" xml:space="preserve">
          <source>Whether the array should be Fortran-contiguous (True) or C-contiguous (False, the default) if we are creating a new file in &amp;ldquo;write&amp;rdquo; mode.</source>
          <target state="translated">如果要在&amp;ldquo;写入&amp;rdquo;模式下创建新文件，则数组应为Fortran连续（True）还是C连续（默认为False）。</target>
        </trans-unit>
        <trans-unit id="944c20a06f71d4591f2972a6198b951c5988e169" translate="yes" xml:space="preserve">
          <source>Whether the buffer is read-only</source>
          <target state="translated">缓冲区是否为只读</target>
        </trans-unit>
        <trans-unit id="4f5043b4a62f84c7d0a89c1a7427fe7e0a42c45d" translate="yes" xml:space="preserve">
          <source>Whether the iteration over the operands is finished or not.</source>
          <target state="translated">操作数的迭代是否结束。</target>
        </trans-unit>
        <trans-unit id="13a09493df9f77aae557913a37ecafb9bbcd240e" translate="yes" xml:space="preserve">
          <source>Whether the mask is shared between masked arrays can be seen from the &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.sharedmask&quot;&gt;&lt;code&gt;sharedmask&lt;/code&gt;&lt;/a&gt; property. &lt;a href=&quot;#numpy.ma.MaskedArray.unshare_mask&quot;&gt;&lt;code&gt;unshare_mask&lt;/code&gt;&lt;/a&gt; ensures the mask is not shared. A copy of the mask is only made if it was shared.</source>
          <target state="translated">从&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.sharedmask&quot;&gt; &lt;code&gt;sharedmask&lt;/code&gt; &lt;/a&gt;属性可以看到掩码是否在掩码数组之间共享。&lt;a href=&quot;#numpy.ma.MaskedArray.unshare_mask&quot;&gt; &lt;code&gt;unshare_mask&lt;/code&gt; &lt;/a&gt;确保不共享掩码。仅当共享蒙版时才复制它。</target>
        </trans-unit>
        <trans-unit id="340b1de921c9745845d275ad69b116e9e6d7cce7" translate="yes" xml:space="preserve">
          <source>Whether the mask is shared between masked arrays can be seen from the &lt;a href=&quot;numpy.ma.masked_array.sharedmask#numpy.ma.masked_array.sharedmask&quot;&gt;&lt;code&gt;sharedmask&lt;/code&gt;&lt;/a&gt; property. &lt;a href=&quot;#numpy.ma.masked_array.unshare_mask&quot;&gt;&lt;code&gt;unshare_mask&lt;/code&gt;&lt;/a&gt; ensures the mask is not shared. A copy of the mask is only made if it was shared.</source>
          <target state="translated">从&lt;a href=&quot;numpy.ma.masked_array.sharedmask#numpy.ma.masked_array.sharedmask&quot;&gt; &lt;code&gt;sharedmask&lt;/code&gt; &lt;/a&gt;属性可以看到掩码是否在掩码数组之间共享。&lt;a href=&quot;#numpy.ma.masked_array.unshare_mask&quot;&gt; &lt;code&gt;unshare_mask&lt;/code&gt; &lt;/a&gt;确保不共享掩码。仅当共享蒙版时才制作一个蒙版副本。</target>
        </trans-unit>
        <trans-unit id="994ac351aadc05fa3125cba15ef08bb4f3bda1d5" translate="yes" xml:space="preserve">
          <source>Whether the mask of a masked array is hard or soft is determined by its &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; property. &lt;a href=&quot;#numpy.ma.MaskedArray.harden_mask&quot;&gt;&lt;code&gt;harden_mask&lt;/code&gt;&lt;/a&gt; sets &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">被遮罩阵列的遮罩是硬还是软取决于其&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;遮罩属性。&lt;a href=&quot;#numpy.ma.MaskedArray.harden_mask&quot;&gt; &lt;code&gt;harden_mask&lt;/code&gt; &lt;/a&gt;套&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;到 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17923c181a717abe968e5b7f117b783413ab1bae" translate="yes" xml:space="preserve">
          <source>Whether the mask of a masked array is hard or soft is determined by its &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; property. &lt;a href=&quot;#numpy.ma.MaskedArray.soften_mask&quot;&gt;&lt;code&gt;soften_mask&lt;/code&gt;&lt;/a&gt; sets &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">被遮罩阵列的遮罩是硬还是软取决于其&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;遮罩属性。&lt;a href=&quot;#numpy.ma.MaskedArray.soften_mask&quot;&gt; &lt;code&gt;soften_mask&lt;/code&gt; &lt;/a&gt;将&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;掩码设置为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9575084d0a24056cb051287ecbd62a3fddcf21f" translate="yes" xml:space="preserve">
          <source>Whether the mask of a masked array is hard or soft is determined by its &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; property. &lt;a href=&quot;#numpy.ma.harden_mask&quot;&gt;&lt;code&gt;harden_mask&lt;/code&gt;&lt;/a&gt; sets &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">被遮罩阵列的遮罩是硬还是软取决于其&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;遮罩属性。&lt;a href=&quot;#numpy.ma.harden_mask&quot;&gt; &lt;code&gt;harden_mask&lt;/code&gt; &lt;/a&gt;套&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;到 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1f8f80d41146708f34337ad2f64bfd1313d33b0f" translate="yes" xml:space="preserve">
          <source>Whether the mask of a masked array is hard or soft is determined by its &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; property. &lt;a href=&quot;#numpy.ma.soften_mask&quot;&gt;&lt;code&gt;soften_mask&lt;/code&gt;&lt;/a&gt; sets &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">被遮罩阵列的遮罩是硬还是软取决于其&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;遮罩属性。&lt;a href=&quot;#numpy.ma.soften_mask&quot;&gt; &lt;code&gt;soften_mask&lt;/code&gt; &lt;/a&gt;将&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;掩码设置为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db7611d744e4dcdca549d1fbd74911098f577c62" translate="yes" xml:space="preserve">
          <source>Whether the mask of a masked array is hard or soft is determined by its &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; property. &lt;a href=&quot;numpy.ma.harden_mask#numpy.ma.harden_mask&quot;&gt;&lt;code&gt;harden_mask&lt;/code&gt;&lt;/a&gt; sets &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; to True.</source>
          <target state="translated">被遮罩阵列的遮罩是硬还是软取决于其&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;遮罩属性。&lt;a href=&quot;numpy.ma.harden_mask#numpy.ma.harden_mask&quot;&gt; &lt;code&gt;harden_mask&lt;/code&gt; &lt;/a&gt;将&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;掩码设置为True。</target>
        </trans-unit>
        <trans-unit id="b8f17f77435a0793df30f7927fd68842a3c16557" translate="yes" xml:space="preserve">
          <source>Whether the mask of a masked array is hard or soft is determined by its &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; property. &lt;a href=&quot;numpy.ma.soften_mask#numpy.ma.soften_mask&quot;&gt;&lt;code&gt;soften_mask&lt;/code&gt;&lt;/a&gt; sets &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; to False.</source>
          <target state="translated">被遮罩阵列的遮罩是硬还是软取决于其&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;遮罩属性。&lt;a href=&quot;numpy.ma.soften_mask#numpy.ma.soften_mask&quot;&gt; &lt;code&gt;soften_mask&lt;/code&gt; &lt;/a&gt;将&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;掩码设置为False。</target>
        </trans-unit>
        <trans-unit id="a13aa0b6af557159a253f9e361f23d8056f7cd7c" translate="yes" xml:space="preserve">
          <source>Whether the mask of a masked array is hard or soft is determined by its &lt;a href=&quot;numpy.ma.masked_array.hardmask#numpy.ma.masked_array.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; property. &lt;a href=&quot;numpy.ma.harden_mask#numpy.ma.harden_mask&quot;&gt;&lt;code&gt;harden_mask&lt;/code&gt;&lt;/a&gt; sets &lt;a href=&quot;numpy.ma.masked_array.hardmask#numpy.ma.masked_array.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; to True.</source>
          <target state="translated">被遮罩阵列的遮罩是硬还是软取决于其&lt;a href=&quot;numpy.ma.masked_array.hardmask#numpy.ma.masked_array.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;遮罩属性。&lt;a href=&quot;numpy.ma.harden_mask#numpy.ma.harden_mask&quot;&gt; &lt;code&gt;harden_mask&lt;/code&gt; &lt;/a&gt;将&lt;a href=&quot;numpy.ma.masked_array.hardmask#numpy.ma.masked_array.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;掩码设置为True。</target>
        </trans-unit>
        <trans-unit id="58bb97d73903bba4379881dfe21651d2944e9e4f" translate="yes" xml:space="preserve">
          <source>Whether the mask of a masked array is hard or soft is determined by its &lt;a href=&quot;numpy.ma.masked_array.hardmask#numpy.ma.masked_array.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; property. &lt;a href=&quot;numpy.ma.soften_mask#numpy.ma.soften_mask&quot;&gt;&lt;code&gt;soften_mask&lt;/code&gt;&lt;/a&gt; sets &lt;a href=&quot;numpy.ma.masked_array.hardmask#numpy.ma.masked_array.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; to False.</source>
          <target state="translated">被遮罩阵列的遮罩是硬还是软取决于其&lt;a href=&quot;numpy.ma.masked_array.hardmask#numpy.ma.masked_array.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;遮罩属性。&lt;a href=&quot;numpy.ma.soften_mask#numpy.ma.soften_mask&quot;&gt; &lt;code&gt;soften_mask&lt;/code&gt; &lt;/a&gt;将&lt;a href=&quot;numpy.ma.masked_array.hardmask#numpy.ma.masked_array.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;掩码设置为False。</target>
        </trans-unit>
        <trans-unit id="7f3e122a9b529992b197b46b09923f9ca3bd360b" translate="yes" xml:space="preserve">
          <source>Whether the mask of a masked array is hard or soft is determined by its &lt;code&gt;hardmask&lt;/code&gt; property. &lt;a href=&quot;#numpy.ma.harden_mask&quot;&gt;&lt;code&gt;harden_mask&lt;/code&gt;&lt;/a&gt; sets &lt;code&gt;hardmask&lt;/code&gt; to True.</source>
          <target state="translated">被遮罩阵列的遮罩是硬还是软取决于其 &lt;code&gt;hardmask&lt;/code&gt; 遮罩属性。&lt;a href=&quot;#numpy.ma.harden_mask&quot;&gt; &lt;code&gt;harden_mask&lt;/code&gt; &lt;/a&gt;将 &lt;code&gt;hardmask&lt;/code&gt; 掩码设置为True。</target>
        </trans-unit>
        <trans-unit id="01426ffe48ebece03a2678d8f2d6adc220725bf0" translate="yes" xml:space="preserve">
          <source>Whether the mask of a masked array is hard or soft is determined by its &lt;code&gt;hardmask&lt;/code&gt; property. &lt;a href=&quot;#numpy.ma.soften_mask&quot;&gt;&lt;code&gt;soften_mask&lt;/code&gt;&lt;/a&gt; sets &lt;code&gt;hardmask&lt;/code&gt; to False.</source>
          <target state="translated">被遮罩阵列的遮罩是硬还是软取决于其 &lt;code&gt;hardmask&lt;/code&gt; 遮罩属性。&lt;a href=&quot;#numpy.ma.soften_mask&quot;&gt; &lt;code&gt;soften_mask&lt;/code&gt; &lt;/a&gt;将 &lt;code&gt;hardmask&lt;/code&gt; 掩码设置为False。</target>
        </trans-unit>
        <trans-unit id="138446419a6b818b440bdbf047003a998807c2e8" translate="yes" xml:space="preserve">
          <source>Whether the names should be case-sensitive (&lt;code&gt;case_sensitive=True&lt;/code&gt;), converted to upper case (&lt;code&gt;case_sensitive=False&lt;/code&gt; or &lt;code&gt;case_sensitive='upper'&lt;/code&gt;) or to lower case (&lt;code&gt;case_sensitive='lower'&lt;/code&gt;).</source>
          <target state="translated">名称是否区分大小写（ &lt;code&gt;case_sensitive=True&lt;/code&gt; ），转换为大写形式（ &lt;code&gt;case_sensitive=False&lt;/code&gt; 或 &lt;code&gt;case_sensitive='upper'&lt;/code&gt; ）或转换为小写形式（ &lt;code&gt;case_sensitive='lower'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ee9da79319e6c0e3169d3748cede2f00813142ab" translate="yes" xml:space="preserve">
          <source>Whether the output should be stored in row-major (C-style) or column-major (Fortran-style) order in memory.</source>
          <target state="translated">在内存中是按行大写(C-style)还是列大写(Fortran-style)的顺序存储输出。</target>
        </trans-unit>
        <trans-unit id="92d233bcb4830096541e589ec9f4a1ebacbac55b" translate="yes" xml:space="preserve">
          <source>Whether the sample is shuffled when sampling without replacement. Default is True, False provides a speedup.</source>
          <target state="translated">取样时,是否对样本进行洗牌,而不进行替换。默认为True,False提供了一个加速。</target>
        </trans-unit>
        <trans-unit id="da175c30578215af592bdb3c0536af196e7c720a" translate="yes" xml:space="preserve">
          <source>Whether the sample is with or without replacement</source>
          <target state="translated">无论样品有无更换</target>
        </trans-unit>
        <trans-unit id="56d0390af16d5fd75c7929234de623abb71d3a3f" translate="yes" xml:space="preserve">
          <source>Whether this event constitutes a Code of Conduct violation.</source>
          <target state="translated">这一事件是否构成违反《行为准则》。</target>
        </trans-unit>
        <trans-unit id="8abcd0ba2e0e0b4eb15c921a63cd2223ac9df3e8" translate="yes" xml:space="preserve">
          <source>Whether this is an ongoing situation, and there is a threat to anyone&amp;rsquo;s physical safety.</source>
          <target state="translated">无论这是持续的情况，还是对任何人的人身安全都构成威胁。</target>
        </trans-unit>
        <trans-unit id="f7a933f70353e3ad1ecdef0da587770caa9c5376" translate="yes" xml:space="preserve">
          <source>Whether to automatically strip white spaces from the variables.</source>
          <target state="translated">是否从变量中自动去掉空白。</target>
        </trans-unit>
        <trans-unit id="442a6c8414200886a8391269e4fbd9de7abf0966" translate="yes" xml:space="preserve">
          <source>Whether to collapse a mask full of False to &lt;code&gt;nomask&lt;/code&gt;.</source>
          <target state="translated">是否将充满False的蒙版折叠为 &lt;code&gt;nomask&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4050a74967f8f69856c2fbd0e3e619300a40e0f0" translate="yes" xml:space="preserve">
          <source>Whether to collapse a mask full of False to nomask</source>
          <target state="translated">是否要把满是False的面具折叠到nomask上?</target>
        </trans-unit>
        <trans-unit id="62176ff771859dd4204e465857618db43d4b9e20" translate="yes" xml:space="preserve">
          <source>Whether to collapse nested fields.</source>
          <target state="translated">是否折叠嵌套字段。</target>
        </trans-unit>
        <trans-unit id="c052f30967f49a9b943b88084eb17b8a3c940aea" translate="yes" xml:space="preserve">
          <source>Whether to combine &lt;code&gt;mask&lt;/code&gt; with the mask of the input data, if any (True), or to use only &lt;code&gt;mask&lt;/code&gt; for the output (False). Default is True.</source>
          <target state="translated">是否将 &lt;code&gt;mask&lt;/code&gt; 与输入数据的掩码（如果有的话）组合（真），或仅将 &lt;code&gt;mask&lt;/code&gt; 用于输出（假）。默认值为True。</target>
        </trans-unit>
        <trans-unit id="eddff56e50fafc8cb9b530fe24b021eae68e3c92" translate="yes" xml:space="preserve">
          <source>Whether to compare NaN&amp;rsquo;s as equal. If True, NaN&amp;rsquo;s in &lt;code&gt;a&lt;/code&gt; will be considered equal to NaN&amp;rsquo;s in &lt;code&gt;b&lt;/code&gt; in the output array.</source>
          <target state="translated">是否将NaN比较相等。如果为True，NaN的在 &lt;code&gt;a&lt;/code&gt; 将被视为在等于NaN的 &lt;code&gt;b&lt;/code&gt; 输出数组英寸</target>
        </trans-unit>
        <trans-unit id="02ebb4bc09961e4bbbe5be1fe036d0ee044eabeb" translate="yes" xml:space="preserve">
          <source>Whether to compare NaN&amp;rsquo;s as equal. If the dtype of a1 and a2 is complex, values will be considered equal if either the real or the imaginary component of a given value is &lt;code&gt;nan&lt;/code&gt;.</source>
          <target state="translated">是否将NaN比较相等。如果a1和a2的dtype是复数，则如果给定值的实部或虚部为 &lt;code&gt;nan&lt;/code&gt; ，则值将被视为相等。</target>
        </trans-unit>
        <trans-unit id="10fe679c9d66f1cf6761f7d27d834a6040161f28" translate="yes" xml:space="preserve">
          <source>Whether to copy the input data (True), or to use a reference instead. Default is False.</source>
          <target state="translated">是复制输入数据(True),还是使用引用。默认为False。</target>
        </trans-unit>
        <trans-unit id="da7f0d2e2677c304098d81c442c3e22af80bc054" translate="yes" xml:space="preserve">
          <source>Whether to copy the input object (True), or to use a reference instead. This option only applies when the input is an ndarray or recarray. Defaults to True.</source>
          <target state="translated">是复制输入对象(True),还是使用引用。这个选项只适用于输入是ndarray或recarray时。默认为True。</target>
        </trans-unit>
        <trans-unit id="5fe509663979cfcace796559b2e65ed21543a41a" translate="yes" xml:space="preserve">
          <source>Whether to create a copy of &lt;code&gt;x&lt;/code&gt; (True) or to replace values in-place (False). The in-place operation only occurs if casting to an array does not require a copy. Default is True.</source>
          <target state="translated">是创建 &lt;code&gt;x&lt;/code&gt; 的副本（True）还是就地替换值（False）。仅当强制转换为数组不需要副本时才执行就地操作。默认值为True。</target>
        </trans-unit>
        <trans-unit id="7cae43f7fc0aea2ec3356f28a33a3a863498b88e" translate="yes" xml:space="preserve">
          <source>Whether to create an aligned memory layout.</source>
          <target state="translated">是否创建一个对齐的内存布局。</target>
        </trans-unit>
        <trans-unit id="cb3a38e23cd94158d3fb92938c528fabce71a1cc" translate="yes" xml:space="preserve">
          <source>Whether to force compression of an empty mask. Default is True.</source>
          <target state="translated">是否强制压缩空掩模。默认为True。</target>
        </trans-unit>
        <trans-unit id="954b794bdd577e9151cce4c13b30b4547a80cce1" translate="yes" xml:space="preserve">
          <source>Whether to force the output to be a &lt;code&gt;pure&lt;/code&gt; ndarray (False) or to return a subclass of ndarray if appropriate (True, default).</source>
          <target state="translated">是否将输出强制为 &lt;code&gt;pure&lt;/code&gt; ndarray（False）还是在适当时返回ndarray的子​​类（True，默认）。</target>
        </trans-unit>
        <trans-unit id="e3b6a28cf1ae69fa2745e3bf0096fffb2681b0f4" translate="yes" xml:space="preserve">
          <source>Whether to import sub-modules in packages. Default is True.</source>
          <target state="translated">是否导入包中的子模块。默认为True。</target>
        </trans-unit>
        <trans-unit id="560758d583a48f61c5f8c924a74ada989d313f2e" translate="yes" xml:space="preserve">
          <source>Whether to raise an AssertionError when a doctest fails. Default is True.</source>
          <target state="translated">是否在doctest失败时引发断言错误。默认为True。</target>
        </trans-unit>
        <trans-unit id="9da66ee12a4e35260c8d865d944cf7e0c6ffd0fb" translate="yes" xml:space="preserve">
          <source>Whether to re-generate the docstring cache. Default is False.</source>
          <target state="translated">是否重新生成docstring缓存。默认为False。</target>
        </trans-unit>
        <trans-unit id="f98f2fb6c72df675129c76f9bce42592bdfab4fb" translate="yes" xml:space="preserve">
          <source>Whether to return a MaskedArray (or MaskedRecords is &lt;code&gt;asrecarray==True&lt;/code&gt;) or a ndarray.</source>
          <target state="translated">是否返回MaskedArray（或MaskedRecords为 &lt;code&gt;asrecarray==True&lt;/code&gt; ）或ndarray。</target>
        </trans-unit>
        <trans-unit id="fe2c4419241a17141e2305c4b8dcba97409a61c9" translate="yes" xml:space="preserve">
          <source>Whether to return a copy of &lt;code&gt;m&lt;/code&gt; (True) or &lt;code&gt;m&lt;/code&gt; itself (False).</source>
          <target state="translated">是返回 &lt;code&gt;m&lt;/code&gt; （True）还是 &lt;code&gt;m&lt;/code&gt; 本身（False）的副本。</target>
        </trans-unit>
        <trans-unit id="d8e552974363003f8c300f894365cd71e993d9cb" translate="yes" xml:space="preserve">
          <source>Whether to return a copy of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">是否返回 &lt;code&gt;x&lt;/code&gt; 的副本。</target>
        </trans-unit>
        <trans-unit id="17b6d3614fb6aec6828495e1dc6c9f3e3cb25114" translate="yes" xml:space="preserve">
          <source>Whether to return a masked array or not.</source>
          <target state="translated">是否返回掩码数组。</target>
        </trans-unit>
        <trans-unit id="8d4e9ec2ff1473fe325d2ab7b74109d36f9b95a7" translate="yes" xml:space="preserve">
          <source>Whether to return a recarray (MaskedRecords) or not.</source>
          <target state="translated">是否返回一个recarray(MaskedRecords)。</target>
        </trans-unit>
        <trans-unit id="537dd9c43929ac61e1b91f77cf8f252cc29ca2c7" translate="yes" xml:space="preserve">
          <source>Whether to return a recarray (or MaskedRecords if &lt;code&gt;usemask==True&lt;/code&gt;) or just a flexible-type ndarray.</source>
          <target state="translated">是返回一个Recarray（如果 &lt;code&gt;usemask==True&lt;/code&gt; ，则返回MaskedRecords ）还是返回一个灵活类型的ndarray。</target>
        </trans-unit>
        <trans-unit id="a99566bf50e4cbe34436592687ae3a066ec1520e" translate="yes" xml:space="preserve">
          <source>Whether to return a recarray or a mrecarray (&lt;code&gt;asrecarray=True&lt;/code&gt;) or a plain ndarray or masked array with flexible dtype. The default is False.</source>
          <target state="translated">是否返回带有灵活dtype的recarray或mrecarray（ &lt;code&gt;asrecarray=True&lt;/code&gt; ）或纯ndarray或masked数组。默认值为False。</target>
        </trans-unit>
        <trans-unit id="037c91325bbf0eb3057c152573c6cd848efe298f" translate="yes" xml:space="preserve">
          <source>Whether to return a subclass of &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt; if possible (True) or a plain &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt;. Default is True.</source>
          <target state="translated">是否尽可能返回&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; &lt;/a&gt;的子类（True）还是简单的&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; &lt;/a&gt;。默认值为True。</target>
        </trans-unit>
        <trans-unit id="bdbbe0cbc16b25af4b5214a715ea3e1431bb785c" translate="yes" xml:space="preserve">
          <source>Whether to return the indices of the duplicated values.</source>
          <target state="translated">是否返回重复值的索引。</target>
        </trans-unit>
        <trans-unit id="0ae760f9c4f41fa0fbb26a77403a1c22ab55b573" translate="yes" xml:space="preserve">
          <source>Whether to show the sign for positive values.</source>
          <target state="translated">是否显示正值的符号。</target>
        </trans-unit>
        <trans-unit id="1b8be26bfc8b0e89327240212310466b2cf75c4c" translate="yes" xml:space="preserve">
          <source>Whether to shrink &lt;code&gt;m&lt;/code&gt; to &lt;code&gt;nomask&lt;/code&gt; if all its values are False.</source>
          <target state="translated">如果其所有值均为False，是否将 &lt;code&gt;m&lt;/code&gt; 缩小为 &lt;code&gt;nomask&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3178cfeee0adef6924aedc74760260f82717be37" translate="yes" xml:space="preserve">
          <source>Whether to shrink the output to &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt; if all its values are False. Defaults to True.</source>
          <target state="translated">如果其所有值均为False，是否将输出缩小为&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; &lt;/a&gt;。默认为True。</target>
        </trans-unit>
        <trans-unit id="d9db91db6f9220d3637c22a670ce2fece1ba8892" translate="yes" xml:space="preserve">
          <source>Whether to store matrix in C- or Fortran-contiguous order, default is &amp;lsquo;C&amp;rsquo;.</source>
          <target state="translated">是否以C或Fortran连续顺序存储矩阵，默认值为'C'。</target>
        </trans-unit>
        <trans-unit id="f47e8ef32095f56286465eeec2aded155a972a62" translate="yes" xml:space="preserve">
          <source>Whether to store multi-dimensional data in row-major (C-style) or column-major (Fortran-style) order in memory.</source>
          <target state="translated">在内存中是按行大写(C式)还是列大写(Fortran式)的顺序存储多维数据。</target>
        </trans-unit>
        <trans-unit id="91845ffd71912999afe1ae31aecba568b6c77126" translate="yes" xml:space="preserve">
          <source>Whether to store multidimensional data in C- or Fortran-contiguous (row- or column-wise) order in memory.</source>
          <target state="translated">在内存中是按C语言还是Fortran语言连续(按行或列)的顺序存储多维数据。</target>
        </trans-unit>
        <trans-unit id="dab7c3794a646540de7acd62a59e0fb24a52ca93" translate="yes" xml:space="preserve">
          <source>Whether to store the result in C- or Fortran-contiguous order, default is &amp;lsquo;C&amp;rsquo;.</source>
          <target state="translated">是否以C或Fortran连续顺序存储结果，默认值为'C'。</target>
        </trans-unit>
        <trans-unit id="bfc4130ee9478e47e13d28dd5c7bbedd301de36f" translate="yes" xml:space="preserve">
          <source>Whether to use a copy of &lt;code&gt;a&lt;/code&gt; (True) or to fix &lt;code&gt;a&lt;/code&gt; in place (False). Default is True.</source>
          <target state="translated">是否使用副本 &lt;code&gt;a&lt;/code&gt; （True）还是固定 &lt;code&gt;a&lt;/code&gt; 到位（假）。默认值为True。</target>
        </trans-unit>
        <trans-unit id="aebefd02adf3850b379921c027ca5f73a9e89812" translate="yes" xml:space="preserve">
          <source>Whether to use a hard mask or not. With a hard mask, masked values cannot be unmasked. Default is False.</source>
          <target state="translated">是否使用硬掩码。使用硬掩码时,掩码的值不能被取消掩码。默认为False。</target>
        </trans-unit>
        <trans-unit id="5e961f550eaad97e3dafff75ba96d8df26719652" translate="yes" xml:space="preserve">
          <source>Whether to use row-major (&amp;lsquo;C&amp;rsquo;) or column-major (&amp;lsquo;FORTRAN&amp;rsquo;) memory representation. Default is &amp;lsquo;C&amp;rsquo;.</source>
          <target state="translated">是使用行优先（'C'）还是列优先（'FORTRAN'）内存表示形式。默认值为&amp;ldquo; C&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="cc497678cbe7ddcd1c3ae01eed475a06c838ec4e" translate="yes" xml:space="preserve">
          <source>Whether to use row-major (C-style) or column-major (Fortran-style) memory representation. Defaults to &amp;lsquo;C&amp;rsquo;.</source>
          <target state="translated">是使用行优先（C风格）还是列优先（Fortran风格）内存表示形式。默认为&amp;ldquo; C&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="25195d8226c7af7ee557736e882797435cd7c507" translate="yes" xml:space="preserve">
          <source>Which columns to read, with 0 being the first. For example, &lt;code&gt;usecols = (1, 4, 5)&lt;/code&gt; will extract the 2nd, 5th and 6th columns.</source>
          <target state="translated">要读取的列，第一列为0。例如， &lt;code&gt;usecols = (1, 4, 5)&lt;/code&gt; 将提取第二，第五和第六列。</target>
        </trans-unit>
        <trans-unit id="ef9e92c2b540fbcf01177bb037dde03eb96de271" translate="yes" xml:space="preserve">
          <source>Which columns to read, with 0 being the first. For example, &lt;code&gt;usecols = (1,4,5)&lt;/code&gt; will extract the 2nd, 5th and 6th columns. The default, None, results in all columns being read.</source>
          <target state="translated">要读取的列，第一列为0。例如， &lt;code&gt;usecols = (1,4,5)&lt;/code&gt; 将提取第二，第五和第六列。默认值为&amp;ldquo;无&amp;rdquo;，将导致读取所有列。</target>
        </trans-unit>
        <trans-unit id="fbd4eaea9ffb1459ac3fe81052e7c99556134589" translate="yes" xml:space="preserve">
          <source>Which creates a shared_library named code.so in the current directory. On Windows don&amp;rsquo;t forget to either add &lt;code&gt;__declspec(dllexport)&lt;/code&gt; in front of void on the line preceding each function definition, or write a &lt;code&gt;code.def&lt;/code&gt; file that lists the names of the functions to be exported.</source>
          <target state="translated">它将在当前目录中创建一个名为code.so的shared_library。在Windows上，不要忘记在每个函数定义之前的行的void之前添加 &lt;code&gt;__declspec(dllexport)&lt;/code&gt; ，或编写列出要导出函数名称的 &lt;code&gt;code.def&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="13f9686c4e3a41f3f30b2ea464209b867b694965" translate="yes" xml:space="preserve">
          <source>Which gives more easily comparable results than using separate bins for each histogram:</source>
          <target state="translated">这比对每个直方图使用单独的分仓更容易得到可比的结果。</target>
        </trans-unit>
        <trans-unit id="a1a80f0fc41db0ca1b3afb508f48229204eeb48b" translate="yes" xml:space="preserve">
          <source>Which gives the polynomial &lt;code&gt;p&lt;/code&gt; in Chebyshev form. This works because</source>
          <target state="translated">这给出了切比雪夫形式的多项式 &lt;code&gt;p&lt;/code&gt; 。这行得通，因为</target>
        </trans-unit>
        <trans-unit id="4677fdc512f0b2c82debb07e465be34f22e7fdd0" translate="yes" xml:space="preserve">
          <source>While Python is a great language and a pleasure to code in, its dynamic nature results in overhead that can cause some code ( &lt;em&gt;i.e.&lt;/em&gt; raw computations inside of for loops) to be up 10-100 times slower than equivalent code written in a static compiled language. In addition, it can cause memory usage to be larger than necessary as temporary arrays are created and destroyed during computation. For many types of computing needs, the extra slow-down and memory consumption can often not be spared (at least for time- or memory- critical portions of your code). Therefore one of the most common needs is to call out from Python code to a fast, machine-code routine (e.g. compiled using C/C++ or Fortran). The fact that this is relatively easy to do is a big reason why Python is such an excellent high-level language for scientific and engineering programming.</source>
          <target state="translated">虽然Python是一种伟大的语言和高兴的，它的动态性结果代码的开销，可能会导致一些代码（&lt;em&gt;即&lt;/em&gt;for循环内的原始计算）要比用静态编译语言编写的等效代码慢10-100倍。此外，由于在计算过程中创建和销毁了临时数组，这可能导致内存使用量超出必要数量。对于许多类型的计算需求，通常无法避免额外的速度降低和内存消耗（至少对于代码中时间或内存至关重要的部分）。因此，最常见的需求之一是从Python代码调出快速的机器代码例程（例如，使用C / C ++或Fortran进行编译）。这相对容易做到这一事实，是Python成为科学和工程编程如此出色的高级语言的重要原因。</target>
        </trans-unit>
        <trans-unit id="559b97a21645e20b96438fa99ddc59b3a9a0af7c" translate="yes" xml:space="preserve">
          <source>While a C-style and Fortran-style contiguous array, which has the corresponding flags set, can be addressed with the above strides, the actual strides may be different. This can happen in two cases:</source>
          <target state="translated">虽然一个C风格和Fortran风格的连续数组,设置了相应的标志,可以用上述跨步来寻址,但实际的跨步可能不同。这可能发生在两种情况下。</target>
        </trans-unit>
        <trans-unit id="5cb4809a60165e1a08a79223b33453d015d29cf8" translate="yes" xml:space="preserve">
          <source>While the above tables are based on the GCC Compiler, the following tables showing the differences in the other compilers:</source>
          <target state="translated">虽然上面的表格是基于GCC编译器的,但下面的表格显示了其他编译器的差异。</target>
        </trans-unit>
        <trans-unit id="31b1b02b8719fc4aef9008c2ae820a7865ef1587" translate="yes" xml:space="preserve">
          <source>While the default data type is floating point (&lt;code&gt;np.float64&lt;/code&gt;), you can explicitly specify which data type you want using the &lt;code&gt;dtype&lt;/code&gt; keyword.</source>
          <target state="translated">当默认数据类型为浮点（ &lt;code&gt;np.float64&lt;/code&gt; ）时，您可以使用 &lt;code&gt;dtype&lt;/code&gt; 关键字显式指定所需的数据类型。</target>
        </trans-unit>
        <trans-unit id="90e66f4e6fa5110e8476c65e7c15355fd96a8c2f" translate="yes" xml:space="preserve">
          <source>While the ndarray object is designed to allow rapid computation in Python, it is also designed to be general-purpose and satisfy a wide- variety of computational needs. As a result, if absolute speed is essential, there is no replacement for a well-crafted, compiled loop specific to your application and hardware. This is one of the reasons that numpy includes f2py so that an easy-to-use mechanisms for linking (simple) C/C++ and (arbitrary) Fortran code directly into Python are available. You are encouraged to use and improve this mechanism. The purpose of this section is not to document this tool but to document the more basic steps to writing an extension module that this tool depends on.</source>
          <target state="translated">虽然ndarray对象被设计成允许在Python中进行快速计算,但它也被设计成通用的,并满足各种计算需求。因此,如果绝对的速度是必不可少的,那么一个精心设计的、针对应用程序和硬件的编译循环是无可替代的。这也是 numpy 包含 f2py 的原因之一,这样就有了一个简单易用的机制,可以将 (简单)C/C++和 (任意)Fortran 代码直接链接到 Python 中。我们鼓励您使用并改进这个机制。本节的目的不是为了记录这个工具,而是记录编写这个工具所依赖的扩展模块的更基本的步骤。</target>
        </trans-unit>
        <trans-unit id="d1df1b5a0658c69d8a413e038e320119a5eacba2" translate="yes" xml:space="preserve">
          <source>While the nonzero values can be obtained with &lt;code&gt;a[nonzero(a)]&lt;/code&gt;, it is recommended to use &lt;code&gt;x[x.astype(bool)]&lt;/code&gt; or &lt;code&gt;x[x != 0]&lt;/code&gt; instead, which will correctly handle 0-d arrays.</source>
          <target state="translated">虽然可以使用 &lt;code&gt;x[x.astype(bool)]&lt;/code&gt; &lt;code&gt;a[nonzero(a)]&lt;/code&gt; 获得非零值，但建议改用x [x.astype（bool）]或 &lt;code&gt;x[x != 0]&lt;/code&gt; ，它们将正确处理0-d数组。</target>
        </trans-unit>
        <trans-unit id="95abe15b68efd387eb8c7edc6a4c57dd87ccf623" translate="yes" xml:space="preserve">
          <source>While we&amp;rsquo;re at it, let&amp;rsquo;s also introduce the &amp;lsquo;no_broadcast&amp;rsquo; flag, which will prevent the output from being broadcast. This is important, because we only want one input value for each output. Aggregating more than one input value is a reduction operation which requires special handling. It would already raise an error because reductions must be explicitly enabled in an iterator flag, but the error message that results from disabling broadcasting is much more understandable for end-users. To see how to generalize the square function to a reduction, look at the sum of squares function in the section about Cython.</source>
          <target state="translated">在讨论的同时，我们还引入了'no_broadcast'标志，该标志将防止广播输出。这很重要，因为我们只希望每个输出一个输入值。汇总多个输入值是一种减少操作，需要特殊处理。因为已经必须在迭代器标志中显式启用减少功能，所以它已经引发了错误，但是对于最终用户而言，禁用广播所导致的错误消息更加容易理解。若要查看如何将平方函数归纳为约简，请参阅关于Cython的部分中的平方和函数。</target>
        </trans-unit>
        <trans-unit id="fdf453fd16b5200319b11da91be27d0c70481271" translate="yes" xml:space="preserve">
          <source>White spaces are ignored.</source>
          <target state="translated">白色空间被忽略。</target>
        </trans-unit>
        <trans-unit id="6808f00a32eb6f68f1d5623c7eadb1ed4cd2cd87" translate="yes" xml:space="preserve">
          <source>Whitespace-delimited</source>
          <target state="translated">Whitespace-delimited</target>
        </trans-unit>
        <trans-unit id="22dce6bca851893db69d37c56a8bc235318a963f" translate="yes" xml:space="preserve">
          <source>Who Else Uses NumPy?</source>
          <target state="translated">谁在使用NumPy?</target>
        </trans-unit>
        <trans-unit id="695c34413853a0a8946e80017d6dc886095f0264" translate="yes" xml:space="preserve">
          <source>Who are the responsible party(ies).</source>
          <target state="translated">谁是责任方;</target>
        </trans-unit>
        <trans-unit id="1d8a03b1c5c60406d812a05202f327bcbfb0accf" translate="yes" xml:space="preserve">
          <source>Who can be a reviewer?</source>
          <target state="translated">哪些人可以成为评审员?</target>
        </trans-unit>
        <trans-unit id="cb524d99c7b1efcddcb5f2e830e21713dbf3413b" translate="yes" xml:space="preserve">
          <source>Who uses it and why</source>
          <target state="translated">谁使用它,为什么?</target>
        </trans-unit>
        <trans-unit id="31b504f4db86b2c606040985beea7e292d8749f2" translate="yes" xml:space="preserve">
          <source>Why is NumPy Fast?</source>
          <target state="translated">为什么NumPy是快速的?</target>
        </trans-unit>
        <trans-unit id="7da3ad366450168b425d91b2ecc5364e5b9f6133" translate="yes" xml:space="preserve">
          <source>Why is There a Second File?</source>
          <target state="translated">为什么会有第二档案?</target>
        </trans-unit>
        <trans-unit id="617b3271b5b69fcf3df8ec039eca36a1dd4b4fb8" translate="yes" xml:space="preserve">
          <source>Why use &lt;code&gt;__new__&lt;/code&gt; rather than just the usual &lt;code&gt;__init__&lt;/code&gt;? Because in some cases, as for ndarray, we want to be able to return an object of some other class. Consider the following:</source>
          <target state="translated">为什么要使用 &lt;code&gt;__new__&lt;/code&gt; 而不是通常的 &lt;code&gt;__init__&lt;/code&gt; ？因为在某些情况下，对于ndarray，我们希望能够返回某个其他类的对象。考虑以下：</target>
        </trans-unit>
        <trans-unit id="e421f414949e6d293afe584288892ff9d9505d8c" translate="yes" xml:space="preserve">
          <source>Why write how-tos when there&amp;rsquo;s Stack Overflow, Reddit, Gitter&amp;hellip;?</source>
          <target state="translated">当出现堆栈溢出，Reddit，Gitter等情况时，为什么还要编写how-tos？</target>
        </trans-unit>
        <trans-unit id="a5faa59dd442eb9f9b067a10198b95685727452a" translate="yes" xml:space="preserve">
          <source>Width of string to left-fill elements in &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">字符串的左填充元素的宽度 &lt;code&gt;a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a87a9df3bc292d00475af99a19cfb5bace676377" translate="yes" xml:space="preserve">
          <source>Wikipedia page: &lt;a href=&quot;https://en.wikipedia.org/wiki/Trapezoidal_rule&quot;&gt;https://en.wikipedia.org/wiki/Trapezoidal_rule&lt;/a&gt;</source>
          <target state="translated">维基百科页面：&lt;a href=&quot;https://en.wikipedia.org/wiki/Trapezoidal_rule&quot;&gt;https&lt;/a&gt;：//en.wikipedia.org/wiki/Trapezoidal_rule</target>
        </trans-unit>
        <trans-unit id="f57f881086e09b1ae09664bdf831c36a611c6436" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Binomial distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Binomial_distribution&quot;&gt;https://en.wikipedia.org/wiki/Binomial_distribution&lt;/a&gt;</source>
          <target state="translated">维基百科，&amp;ldquo;二项式分布&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Binomial_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Binomial_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06cf28156832f9d8c24f1184dfe95f4c17b24eb4" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Cauchy distribution&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Cauchy_distribution&quot;&gt;https://en.wikipedia.org/wiki/Cauchy_distribution&lt;/a&gt;</source>
          <target state="translated">Wikipedia，&amp;ldquo; Cauchy发行版&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Cauchy_distribution&quot;&gt;https://en.wikipedia.org/wiki/Cauchy_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f4dafaf375cb5ca788c45f1e6be90dcf059029c" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Convolution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Convolution&quot;&gt;https://en.wikipedia.org/wiki/Convolution&lt;/a&gt;</source>
          <target state="translated">Wikipedia，&amp;ldquo;卷积&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Convolution&quot;&gt;https：//en.wikipedia.org/wiki/Convolution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aefec7a4eb1a5aecabb180014fe85015da54a986" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Curve fitting&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Curve_fitting&quot;&gt;https://en.wikipedia.org/wiki/Curve_fitting&lt;/a&gt;</source>
          <target state="translated">维基百科，&amp;ldquo;曲线拟合&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Curve_fitting&quot;&gt;https：//en.wikipedia.org/wiki/Curve_fitting&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25955273f801e8724b42176bc0f8f1afa2f0d223" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Denormal Numbers&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Denormal_number&quot;&gt;https://en.wikipedia.org/wiki/Denormal_number&lt;/a&gt;</source>
          <target state="translated">Wikipedia，&amp;ldquo;反常数&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Denormal_number&quot;&gt;https：&lt;/a&gt; //en.wikipedia.org/wiki/Denormal_number</target>
        </trans-unit>
        <trans-unit id="ceebe5e149c9b6f7b481dab32a8b80c5a5e67177" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Dirichlet distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Dirichlet_distribution&quot;&gt;https://en.wikipedia.org/wiki/Dirichlet_distribution&lt;/a&gt;</source>
          <target state="translated">Wikipedia，&amp;ldquo; Dirichlet分发&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Dirichlet_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Dirichlet_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c274fb3e94d194d553ba10a5c9ba49ab92ab9ab3" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Exponential distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Exponential_distribution&quot;&gt;https://en.wikipedia.org/wiki/Exponential_distribution&lt;/a&gt;</source>
          <target state="translated">维基百科，&amp;ldquo;指数分布&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Exponential_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Exponential_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0748ca7a20f6367685397b634c58b22d1101a55" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Exponential function&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Exponential_function&quot;&gt;https://en.wikipedia.org/wiki/Exponential_function&lt;/a&gt;</source>
          <target state="translated">Wikipedia，&amp;ldquo;指数函数&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Exponential_function&quot;&gt;https：//en.wikipedia.org/wiki/Exponential_function&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="450a7618a7ae64b3deba48000f4698be90e329a4" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;F-distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/F-distribution&quot;&gt;https://en.wikipedia.org/wiki/F-distribution&lt;/a&gt;</source>
          <target state="translated">Wikipedia，&amp;ldquo; F-发行&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/F-distribution&quot;&gt;https：//en.wikipedia.org/wiki/F-发行&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17b148f03642613eb714110e8ca6f8c433f95ee5" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Gamma distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Gamma_distribution&quot;&gt;https://en.wikipedia.org/wiki/Gamma_distribution&lt;/a&gt;</source>
          <target state="translated">维基百科，&amp;ldquo;伽玛分布&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Gamma_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Gamma_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="607958a0e56c238af4c16a4ba8a36ed9dd6aae60" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Hyperbolic function&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Hyperbolic_function&quot;&gt;https://en.wikipedia.org/wiki/Hyperbolic_function&lt;/a&gt;</source>
          <target state="translated">维基百科，&amp;ldquo;双曲线函数&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Hyperbolic_function&quot;&gt;https：//en.wikipedia.org/wiki/Hyperbolic_function&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2ed497979708d30048971b5f912f3a976a07c07" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Hypergeometric distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Hypergeometric_distribution&quot;&gt;https://en.wikipedia.org/wiki/Hypergeometric_distribution&lt;/a&gt;</source>
          <target state="translated">维基百科，&amp;ldquo;超几何分布&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Hypergeometric_distribution&quot;&gt;https：&lt;/a&gt; //en.wikipedia.org/wiki/Hypergeometric_distribution</target>
        </trans-unit>
        <trans-unit id="f6c41ede2dc056083c46b6379a06aec4ce640792" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Inverse Gaussian distribution&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Inverse_Gaussian_distribution&quot;&gt;https://en.wikipedia.org/wiki/Inverse_Gaussian_distribution&lt;/a&gt;</source>
          <target state="translated">Wikipedia，&amp;ldquo;高斯逆​​分布&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Inverse_Gaussian_distribution&quot;&gt;https://en.wikipedia.org/wiki/Inverse_Gaussian_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c81f68efd7be19a13fb16b9d3ede8e0916b2b3ba" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Inverse hyperbolic function&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Arccosh&quot;&gt;https://en.wikipedia.org/wiki/Arccosh&lt;/a&gt;</source>
          <target state="translated">维基百科，&amp;ldquo;反双曲函数&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Arccosh&quot;&gt;https：//en.wikipedia.org/wiki/Arccosh&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="788ea2b2b4739c5aba7340cb8614d021cf776477" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Inverse hyperbolic function&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Arcsinh&quot;&gt;https://en.wikipedia.org/wiki/Arcsinh&lt;/a&gt;</source>
          <target state="translated">维基百科，&amp;ldquo;反双曲函数&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Arcsinh&quot;&gt;https：//en.wikipedia.org/wiki/Arcsinh&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7afed20bd82634dc688b205c679d736b6a3ca9fd" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Inverse hyperbolic function&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Arctanh&quot;&gt;https://en.wikipedia.org/wiki/Arctanh&lt;/a&gt;</source>
          <target state="translated">维基百科，&amp;ldquo;反双曲函数&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Arctanh&quot;&gt;https：//en.wikipedia.org/wiki/Arctanh&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8cbf65d4c8a1edb6485c9090716aa502b1cad498" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Laplace distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Laplace_distribution&quot;&gt;https://en.wikipedia.org/wiki/Laplace_distribution&lt;/a&gt;</source>
          <target state="translated">Wikipedia，&amp;ldquo;拉普拉斯分布&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Laplace_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Laplace_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a5dafa467113c3ca3efc06f2332310e05c7a2741" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Logarithm&amp;rdquo;. &lt;a href=&quot;https://en.wikipedia.org/wiki/Logarithm&quot;&gt;https://en.wikipedia.org/wiki/Logarithm&lt;/a&gt;</source>
          <target state="translated">维基百科，&amp;ldquo;对数&amp;rdquo;。&lt;a href=&quot;https://en.wikipedia.org/wiki/Logarithm&quot;&gt;https://zh.wikipedia.org/wiki/对数&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c49c2d4eec5ab9e21b7777f19f27c237fceb82c5" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Logarithmic distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Logarithmic_distribution&quot;&gt;https://en.wikipedia.org/wiki/Logarithmic_distribution&lt;/a&gt;</source>
          <target state="translated">Wikipedia，&amp;ldquo;对数分布&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Logarithmic_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Logarithmic_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78ccdc5f379af6bc4c7ea04cc13613370465bc4d" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Logistic-distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Logistic_distribution&quot;&gt;https://en.wikipedia.org/wiki/Logistic_distribution&lt;/a&gt;</source>
          <target state="translated">Wikipedia，&amp;ldquo;物流分布&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Logistic_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Logistic_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c3fd20f148f2b77555334569014216015267361" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Negative binomial distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Negative_binomial_distribution&quot;&gt;https://en.wikipedia.org/wiki/Negative_binomial_distribution&lt;/a&gt;</source>
          <target state="translated">维基百科，&amp;ldquo;负二项式分布&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Negative_binomial_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Negative_binomial_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="785913c64c1118d2e5699ad155c8010ddb5608e2" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Noncentral F-distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Noncentral_F-distribution&quot;&gt;https://en.wikipedia.org/wiki/Noncentral_F-distribution&lt;/a&gt;</source>
          <target state="translated">Wikipedia，&amp;ldquo;非中央F分布&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Noncentral_F-distribution&quot;&gt;https：&lt;/a&gt; //en.wikipedia.org/wiki/Noncentral_F-distribution</target>
        </trans-unit>
        <trans-unit id="290d1f296088408d1c3d2c95c7a7428e7d2c6df3" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Noncentral chi-squared distribution&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Noncentral_chi-squared_distribution&quot;&gt;https://en.wikipedia.org/wiki/Noncentral_chi-squared_distribution&lt;/a&gt;</source>
          <target state="translated">维基百科，&amp;ldquo;非中心卡方分布&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Noncentral_chi-squared_distribution&quot;&gt;https://en.wikipedia.org/wiki/Noncentral_chi-squared_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f54672c52ce6e2a5669a3fc7c140d35832003af5" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Normal distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Normal_distribution&quot;&gt;https://en.wikipedia.org/wiki/Normal_distribution&lt;/a&gt;</source>
          <target state="translated">维基百科，&amp;ldquo;正态分布&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Normal_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Normal_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47b80170417ddd59eaf50cda77d4edfc322816d8" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Pareto distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Pareto_distribution&quot;&gt;https://en.wikipedia.org/wiki/Pareto_distribution&lt;/a&gt;</source>
          <target state="translated">Wikipedia，&amp;ldquo;帕累托分布&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Pareto_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Pareto_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d689426c6cd7a9b7cf6ef5d58b51175bf540f33b" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Poisson distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Poisson_distribution&quot;&gt;https://en.wikipedia.org/wiki/Poisson_distribution&lt;/a&gt;</source>
          <target state="translated">Wikipedia，&amp;ldquo;泊松分布&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Poisson_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Poisson_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8adc5c562751b6b393b3aa2c35d2e2c7be11d14b" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Poisson process&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Poisson_process&quot;&gt;https://en.wikipedia.org/wiki/Poisson_process&lt;/a&gt;</source>
          <target state="translated">Wikipedia，&amp;ldquo;泊松过程&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Poisson_process&quot;&gt;https：//en.wikipedia.org/wiki/Poisson_process&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ca57768f5ed62a15abd4e259a3842bfc684623e" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Polynomial interpolation&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Polynomial_interpolation&quot;&gt;https://en.wikipedia.org/wiki/Polynomial_interpolation&lt;/a&gt;</source>
          <target state="translated">Wikipedia，&amp;ldquo;多项式插值&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Polynomial_interpolation&quot;&gt;https：//en.wikipedia.org/wiki/Polynomial_interpolation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ca489fd77451dbec195b0cb37e2326fd572ee535" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Rayleigh distribution&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Rayleigh_distribution&quot;&gt;https://en.wikipedia.org/wiki/Rayleigh_distribution&lt;/a&gt;</source>
          <target state="translated">Wikipedia，&amp;ldquo; Rayleigh发行版&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Rayleigh_distribution&quot;&gt;https://en.wikipedia.org/wiki/Rayleigh_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56ead22f9041996687e49f69c8aa068b4de6264b" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Sinc function&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Sinc_function&quot;&gt;https://en.wikipedia.org/wiki/Sinc_function&lt;/a&gt;</source>
          <target state="translated">Wikipedia，&amp;ldquo; Sinc函数&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Sinc_function&quot;&gt;https：&lt;/a&gt; //en.wikipedia.org/wiki/Sinc_function</target>
        </trans-unit>
        <trans-unit id="bdeeaa545061fb4a54e4c2ef8adfce392d92d540" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Student&amp;rsquo;s t-distribution&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Student's_t-distribution&quot;&gt;https://en.wikipedia.org/wiki/Student&amp;rsquo;s_t-distribution&lt;/a&gt;</source>
          <target state="translated">Wikipedia，&amp;ldquo;学生的t-分布&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Student's_t-distribution&quot;&gt;https://en.wikipedia.org/wiki/&lt;/a&gt;学生的_t-分布</target>
        </trans-unit>
        <trans-unit id="890688a22e8725c7cf1acbafe1abacdd0f27f3f0" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Triangular distribution&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Triangular_distribution&quot;&gt;https://en.wikipedia.org/wiki/Triangular_distribution&lt;/a&gt;</source>
          <target state="translated">Wikipedia，&amp;ldquo;三角分布&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Triangular_distribution&quot;&gt;https://en.wikipedia.org/wiki/Triangular_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d2b813725fc8f5761f54e225edc22f4a2afa8f7" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Two&amp;rsquo;s complement&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Two's_complement&quot;&gt;https://en.wikipedia.org/wiki/Two&amp;rsquo;s_complement&lt;/a&gt;</source>
          <target state="translated">Wikipedia，&amp;ldquo;互为补充&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Two's_complement&quot;&gt;https：//en.wikipedia.org/wiki/Two's_complement&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ecbb6d74623f82d0937cf4a5246298d1b6f5e329" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Weibull distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Weibull_distribution&quot;&gt;https://en.wikipedia.org/wiki/Weibull_distribution&lt;/a&gt;</source>
          <target state="translated">Wikipedia，&amp;ldquo; Weibull分发&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Weibull_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Weibull_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98885a7cf6a7f9d6ba5424eda905db3584405b75" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Window function&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Window_function&quot;&gt;https://en.wikipedia.org/wiki/Window_function&lt;/a&gt;</source>
          <target state="translated">Wikipedia，&amp;ldquo;窗口函数&amp;rdquo;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Window_function&quot;&gt;https：//en.wikipedia.org/wiki/Window_function&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49c2c96ddc19c930b5486ff7f81f0ce35e375ba2" translate="yes" xml:space="preserve">
          <source>Will install data-files to the locations:</source>
          <target state="translated">将安装数据文件到这些位置。</target>
        </trans-unit>
        <trans-unit id="0c6212fef9bffd0b18c4eb2da8c005e9e5030130" translate="yes" xml:space="preserve">
          <source>Will need to add this in Python exposure</source>
          <target state="translated">需要在Python暴露中添加这个</target>
        </trans-unit>
        <trans-unit id="77b99d58f8024a3322642cff8a7f3229ae7fe238" translate="yes" xml:space="preserve">
          <source>Window for the returned series. If None the class window is used. The default is None.</source>
          <target state="translated">返回系列的窗口。如果无,则使用类窗口。默认为None。</target>
        </trans-unit>
        <trans-unit id="cec65d78532248828b5443e4752a3df7fc4931aa" translate="yes" xml:space="preserve">
          <source>Window functions</source>
          <target state="translated">窗口功能</target>
        </trans-unit>
        <trans-unit id="e640f561d38642c76bd680b6e8d0ccf0fad3f32d" translate="yes" xml:space="preserve">
          <source>Window length.</source>
          <target state="translated">窗口长度。</target>
        </trans-unit>
        <trans-unit id="42e8204afc5c4121e8aabab0c8c2df383aac93dd" translate="yes" xml:space="preserve">
          <source>Window shape</source>
          <target state="translated">窗口形状</target>
        </trans-unit>
        <trans-unit id="ef32d19ad6db1a011986e848a81515a21a4878bf" translate="yes" xml:space="preserve">
          <source>Window to use for the returned series. The default value is the default class domain</source>
          <target state="translated">用于返回系列的窗口。默认值是默认的类域</target>
        </trans-unit>
        <trans-unit id="092e83dcd0b17c063ad8bac69729a61bcd90390f" translate="yes" xml:space="preserve">
          <source>Window, see &lt;a href=&quot;numpy.polynomial.chebyshev.chebyshev.domain#numpy.polynomial.chebyshev.Chebyshev.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; for its use. The default value is [-1, 1].</source>
          <target state="translated">窗口，请参见其使用&lt;a href=&quot;numpy.polynomial.chebyshev.chebyshev.domain#numpy.polynomial.chebyshev.Chebyshev.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;。默认值为[-1，1]。</target>
        </trans-unit>
        <trans-unit id="26cbe48bc40af2be9b95617385514366c179f8c5" translate="yes" xml:space="preserve">
          <source>Window, see &lt;a href=&quot;numpy.polynomial.hermite.hermite.domain#numpy.polynomial.hermite.Hermite.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; for its use. The default value is [-1, 1].</source>
          <target state="translated">窗口，请参见其使用&lt;a href=&quot;numpy.polynomial.hermite.hermite.domain#numpy.polynomial.hermite.Hermite.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;。默认值为[-1，1]。</target>
        </trans-unit>
        <trans-unit id="e22365565e3904f47ab3840e3c565f4c9730ed9d" translate="yes" xml:space="preserve">
          <source>Window, see &lt;a href=&quot;numpy.polynomial.hermite_e.hermitee.domain#numpy.polynomial.hermite_e.HermiteE.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; for its use. The default value is [-1, 1].</source>
          <target state="translated">窗口，请参见其使用&lt;a href=&quot;numpy.polynomial.hermite_e.hermitee.domain#numpy.polynomial.hermite_e.HermiteE.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;。默认值为[-1，1]。</target>
        </trans-unit>
        <trans-unit id="9ae30d11df20bd6d7701709f6c7a07d9a4c0c35b" translate="yes" xml:space="preserve">
          <source>Window, see &lt;a href=&quot;numpy.polynomial.laguerre.laguerre.domain#numpy.polynomial.laguerre.Laguerre.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; for its use. The default value is [0, 1].</source>
          <target state="translated">窗口，请参见其使用&lt;a href=&quot;numpy.polynomial.laguerre.laguerre.domain#numpy.polynomial.laguerre.Laguerre.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;。默认值为[0，1]。</target>
        </trans-unit>
        <trans-unit id="f003de753cd9362865426af3e4947b5f99fe6dc8" translate="yes" xml:space="preserve">
          <source>Window, see &lt;a href=&quot;numpy.polynomial.legendre.legendre.domain#numpy.polynomial.legendre.Legendre.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; for its use. The default value is [-1, 1].</source>
          <target state="translated">窗口，请参见其使用&lt;a href=&quot;numpy.polynomial.legendre.legendre.domain#numpy.polynomial.legendre.Legendre.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;。默认值为[-1，1]。</target>
        </trans-unit>
        <trans-unit id="88febbc72ccac8a306fb0efe81d8a0b92e99d8f9" translate="yes" xml:space="preserve">
          <source>Window, see &lt;a href=&quot;numpy.polynomial.polynomial.polynomial.domain#numpy.polynomial.polynomial.Polynomial.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; for its use. The default value is [-1, 1].</source>
          <target state="translated">窗口，请参见其使用&lt;a href=&quot;numpy.polynomial.polynomial.polynomial.domain#numpy.polynomial.polynomial.Polynomial.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;。默认值为[-1，1]。</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="3a11c9632c71bf466541bc0b135a1a92817671b6" translate="yes" xml:space="preserve">
          <source>Windows 98, Python 2.1.1. Idle 0.8</source>
          <target state="translated">Windows 98,Python 2.1.1,Idle 0.8。</target>
        </trans-unit>
        <trans-unit id="838d226af82740a98f0145b002fc6c84c21c7131" translate="yes" xml:space="preserve">
          <source>Windows Me Python 2.3(EE), Idle 1.0, PyCrust 0.7.2 Python 2.1.1 Idle 0.8</source>
          <target state="translated">Windows Me Python 2.3(EE),Idle 1.0,PyCrust 0.7.2 Python 2.1.1 Idle 0.8</target>
        </trans-unit>
        <trans-unit id="2d2f4a4fca6daeabadddf9bee05651305943de5c" translate="yes" xml:space="preserve">
          <source>Windows XP, Python 2.3.3</source>
          <target state="translated">Windows XP,Python 2.3.3</target>
        </trans-unit>
        <trans-unit id="5a8d5a3a8e3ea63c9e1686fc793d226b8e269fca" translate="yes" xml:space="preserve">
          <source>Windows builds use the &lt;a href=&quot;https://mingwpy.github.io&quot;&gt;mingw-w64 toolchain&lt;/a&gt;;</source>
          <target state="translated">Windows版本使用&lt;a href=&quot;https://mingwpy.github.io&quot;&gt;mingw-w64工具链&lt;/a&gt;；</target>
        </trans-unit>
        <trans-unit id="1d0c85b48bfec29caf52b4700eb4512e9e2980af" translate="yes" xml:space="preserve">
          <source>Windows: 32-bit and 64-bit wheels built using Appveyor;</source>
          <target state="translated">Windows。32位和64位轮子使用Appveyor构建。</target>
        </trans-unit>
        <trans-unit id="da15a9c19d58f2c4da712f0cc0618069c85b20a3" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;../reference/generated/numpy.savetxt#numpy.savetxt&quot;&gt;&lt;code&gt;savetxt&lt;/code&gt;&lt;/a&gt;, you can specify headers, footers, comments, and more.</source>
          <target state="translated">使用&lt;a href=&quot;../reference/generated/numpy.savetxt#numpy.savetxt&quot;&gt; &lt;code&gt;savetxt&lt;/code&gt; &lt;/a&gt;，您可以指定页眉，页脚，注释等。</target>
        </trans-unit>
        <trans-unit id="dd8127e25ea95e0575d8982f425efe9325056bce" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;Generator.integers&lt;/code&gt;, you can generate random integers from low (remember that this is inclusive with NumPy) to high (exclusive). You can set &lt;code&gt;endpoint=True&lt;/code&gt; to make the high number inclusive.</source>
          <target state="translated">使用 &lt;code&gt;Generator.integers&lt;/code&gt; ，您可以生成从低（请记住，这对于NumPy而言）到高（不包括）之间的随机整数。您可以将 &lt;code&gt;endpoint=True&lt;/code&gt; 设置为高数值。</target>
        </trans-unit>
        <trans-unit id="90f4eb492be6190ac8266dfa1122d297c822b3bf" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;intent(hide)&lt;/code&gt; or &lt;code&gt;optional&lt;/code&gt; attributes specified and using a wrapper function without specifying the callback argument in argument list then call-back function is looked in the namespace of F2PY generated extension module where it can be set as a module attribute by a user.</source>
          <target state="translated">在指定了 &lt;code&gt;intent(hide)&lt;/code&gt; 或 &lt;code&gt;optional&lt;/code&gt; 属性的情况下，并且使用包装函数而不在参数列表中指定回调参数的情况下，将在F2PY生成的扩展模块的命名空间中查找回调函数，用户可以在该命名空间中将其设置为模块属性。</target>
        </trans-unit>
        <trans-unit id="c915e5fc79ca95b662b950c7a602693802648922" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;np.reshape&lt;/code&gt;, you can specify a few optional parameters:</source>
          <target state="translated">使用 &lt;code&gt;np.reshape&lt;/code&gt; ，您可以指定一些可选参数：</target>
        </trans-unit>
        <trans-unit id="aad51d8d6c50eba333fa3e657d7d2ea1d24b4116" translate="yes" xml:space="preserve">
          <source>With Matplotlib, you have access to an enormous number of visualization options.</source>
          <target state="translated">使用Matplotlib,你可以获得大量的可视化选项。</target>
        </trans-unit>
        <trans-unit id="32efd2d58393af190f568a67689ea6a3e549d28a" translate="yes" xml:space="preserve">
          <source>With a context manager:</source>
          <target state="translated">有了上下文管理器。</target>
        </trans-unit>
        <trans-unit id="f3558ac1d15b5a57abf53ea4474761a5d8cd7257" translate="yes" xml:space="preserve">
          <source>With a higher dimensional array the split is still along the first axis.</source>
          <target state="translated">对于较高维数组,分割仍沿第一轴。</target>
        </trans-unit>
        <trans-unit id="ee544b31e6fafc07fbb87de84c67e07d54295002" translate="yes" xml:space="preserve">
          <source>With a higher dimensional array the split is still along the second axis.</source>
          <target state="translated">对于高维数组来说,分割仍然是沿第二轴。</target>
        </trans-unit>
        <trans-unit id="ab0ad2552c2290da0b4beaf3ab8b39ed880b7892" translate="yes" xml:space="preserve">
          <source>With a list of depth 1, &lt;a href=&quot;#numpy.block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; can be used as &lt;a href=&quot;numpy.hstack#numpy.hstack&quot;&gt;&lt;code&gt;hstack&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">具有深度1的列表，&lt;a href=&quot;#numpy.block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt;可用作&lt;a href=&quot;numpy.hstack#numpy.hstack&quot;&gt; &lt;code&gt;hstack&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a6ca14b02d06fe44564f452a8db5dc0b8887f51" translate="yes" xml:space="preserve">
          <source>With a list of depth 2, &lt;a href=&quot;#numpy.block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; can be used in place of &lt;a href=&quot;numpy.vstack#numpy.vstack&quot;&gt;&lt;code&gt;vstack&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">具有深度2的列表，可以使用&lt;a href=&quot;#numpy.block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt;代替&lt;a href=&quot;numpy.vstack#numpy.vstack&quot;&gt; &lt;code&gt;vstack&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="5f9ff7e20abf4e4beec43f72205b5efc96b3cabc" translate="yes" xml:space="preserve">
          <source>With a similar procedure the forward/backward approximations used for boundaries can be derived.</source>
          <target state="translated">通过类似的程序,可以得出用于边界的前/后近似值。</target>
        </trans-unit>
        <trans-unit id="07af3a8001dd5a2cff9dc94ccf6ded3daafa9ec6" translate="yes" xml:space="preserve">
          <source>With instances:</source>
          <target state="translated">与实例。</target>
        </trans-unit>
        <trans-unit id="553042f4bcab2c9b5e50e4e5f5f189e5c16a356d" translate="yes" xml:space="preserve">
          <source>With missing values</source>
          <target state="translated">有缺失值</target>
        </trans-unit>
        <trans-unit id="2f11dcf88262b4d9457a0101e0c0dbf8577979be" translate="yes" xml:space="preserve">
          <source>With no missing values</source>
          <target state="translated">无缺失值</target>
        </trans-unit>
        <trans-unit id="7296170ff07279f5a15413874fdc49dda126cba6" translate="yes" xml:space="preserve">
          <source>With non-whitespace delimiters</source>
          <target state="translated">使用非空格定界符</target>
        </trans-unit>
        <trans-unit id="98601db3737fbbb6544e879545b48b394db52bb5" translate="yes" xml:space="preserve">
          <source>With optional &lt;code&gt;start&lt;/code&gt;, test beginning at that position. With optional &lt;code&gt;end&lt;/code&gt;, stop comparing at that position.</source>
          <target state="translated">使用可选的 &lt;code&gt;start&lt;/code&gt; ，从该位置开始测试。使用可选的 &lt;code&gt;end&lt;/code&gt; ，停止在该位置进行比较。</target>
        </trans-unit>
        <trans-unit id="432a947727f183556cdf77d6e3797bb503e0a762" translate="yes" xml:space="preserve">
          <source>With these definitions, an Institutional Partner is any recognized legal entity in the United States or elsewhere that employs at least 1 Institutional Contributor of Institutional Council Member. Institutional Partners can be for-profit or non-profit entities.</source>
          <target state="translated">根据这些定义,机构伙伴是指在美国或其他地方雇用至少1名机构理事会成员的机构捐助方的任何公认的法律实体。机构伙伴可以是营利或非营利实体。</target>
        </trans-unit>
        <trans-unit id="c2d93c630b90cc0cf1d738f44caa66baf4d85928" translate="yes" xml:space="preserve">
          <source>With types:</source>
          <target state="translated">有类型:</target>
        </trans-unit>
        <trans-unit id="b65929ae6ee34533baeb19b1f785874955822ea8" translate="yes" xml:space="preserve">
          <source>Within NumPy 1.20 it is possible to enable the new experimental casting implementation for testing purposes. To do this set:</source>
          <target state="translated">在NumPy 1.20中,可以启用新的实验性铸造实现来进行测试。要做到这一点,请设置:</target>
        </trans-unit>
        <trans-unit id="5297c5a4978350f9e16a1aab9a51984e592036fa" translate="yes" xml:space="preserve">
          <source>Within a compiled Python module, &lt;code&gt;import_array()&lt;/code&gt; should only get called once. This could be in a C/C++ file that you have written and is linked to the module. If this is the case, then none of your interface files should &lt;code&gt;#define SWIG_FILE_WITH_INIT&lt;/code&gt; or call &lt;code&gt;import_array()&lt;/code&gt;. Or, this initialization call could be in a wrapper file generated by &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; from an interface file that has the &lt;code&gt;%init&lt;/code&gt; block as above. If this is the case, and you have more than one &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; interface file, then only one interface file should &lt;code&gt;#define SWIG_FILE_WITH_INIT&lt;/code&gt; and call &lt;code&gt;import_array()&lt;/code&gt;.</source>
          <target state="translated">在已编译的Python模块中， &lt;code&gt;import_array()&lt;/code&gt; 应该仅被调用一次。这可能在您编写并链接到模块的C / C ++文件中。如果是这种情况，那么您的接口文件都不应 &lt;code&gt;#define SWIG_FILE_WITH_INIT&lt;/code&gt; 或调用 &lt;code&gt;import_array()&lt;/code&gt; 。或者，此初始化调用可能位于&lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt;从具有上述 &lt;code&gt;%init&lt;/code&gt; 块的接口文件生成的包装文件中。如果是这种情况，并且您有多个&lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt;接口文件，则仅一个接口文件应 &lt;code&gt;#define SWIG_FILE_WITH_INIT&lt;/code&gt; 并调用 &lt;code&gt;import_array()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="42a24f4738db07788648f7de55bbb8493bc76610" translate="yes" xml:space="preserve">
          <source>Within these test methods, &lt;code&gt;assert_()&lt;/code&gt; and related functions are used to test whether a certain assumption is valid. If the assertion fails, the test fails. Note that the Python builtin &lt;code&gt;assert&lt;/code&gt; should not be used, because it is stripped during compilation with &lt;code&gt;-O&lt;/code&gt;.</source>
          <target state="translated">在这些测试方法中， &lt;code&gt;assert_()&lt;/code&gt; 和相关函数用于测试某个假设是否有效。如果断言失败，则测试失败。请注意，不应使用Python内置的 &lt;code&gt;assert&lt;/code&gt; ，因为在使用 &lt;code&gt;-O&lt;/code&gt; 进行编译时会将其删除。</target>
        </trans-unit>
        <trans-unit id="0bf68fec54dbd7c575b675c0f5ecb37ef3c52771" translate="yes" xml:space="preserve">
          <source>Without a mask, the missing value will be filled with something, depending on what its corresponding type:</source>
          <target state="translated">如果没有掩码,缺失的值就会被一些东西填充,这取决于它对应的类型是什么。</target>
        </trans-unit>
        <trans-unit id="2729aa84fd8dbce5d8f5065881c86da559d3b68c" translate="yes" xml:space="preserve">
          <source>Without the &lt;code&gt;np.ix_&lt;/code&gt; call or only the diagonal elements would be selected.</source>
          <target state="translated">如果不调用 &lt;code&gt;np.ix_&lt;/code&gt; 或仅选择对角线元素。</target>
        </trans-unit>
        <trans-unit id="9250e45b4fa23b6f2885b10a55849baecbc70cda" translate="yes" xml:space="preserve">
          <source>Without the &lt;code&gt;np.ix_&lt;/code&gt; call, only the diagonal elements would be selected.</source>
          <target state="translated">如果没有 &lt;code&gt;np.ix_&lt;/code&gt; 调用，将仅选择对角线元素。</target>
        </trans-unit>
        <trans-unit id="7f7bc609a9a85daff74366da453c1a12ee3ff0bd" translate="yes" xml:space="preserve">
          <source>Without touching underlying data, NumPy can make one array appear to change its datatype and shape.</source>
          <target state="translated">在不接触底层数据的情况下,NumPy可以让一个数组出现改变其数据类型和形状。</target>
        </trans-unit>
        <trans-unit id="c9d58767cd4150ffea0b74d98e5d21e09369f5e3" translate="yes" xml:space="preserve">
          <source>Work in progress. Basic linear algebra to be included here.</source>
          <target state="translated">工作正在进行中。这里将包括基本的线性代数。</target>
        </trans-unit>
        <trans-unit id="eb6d460982da286faa01241fe0e8688fe713d131" translate="yes" xml:space="preserve">
          <source>Working on the flattened array does not return slices along an axis but selects elements.</source>
          <target state="translated">在扁平化数组上工作不会沿轴返回切片,而是选择元素。</target>
        </trans-unit>
        <trans-unit id="18f9309c3cd6c825d39b8b49605118cbab7b4c08" translate="yes" xml:space="preserve">
          <source>Working with mathematical formulas</source>
          <target state="translated">使用数学公式</target>
        </trans-unit>
        <trans-unit id="20669d5d64b568db66a362c01f09d0be2912bdf7" translate="yes" xml:space="preserve">
          <source>Works only with 2-D arrays at the moment.</source>
          <target state="translated">目前只适用于二维阵列。</target>
        </trans-unit>
        <trans-unit id="10b18b3520a07a5cef88cf768f74798c3a76c969" translate="yes" xml:space="preserve">
          <source>Wrapper around &lt;code&gt;cPickle.load&lt;/code&gt; which accepts either a file-like object or a filename.</source>
          <target state="translated">&lt;code&gt;cPickle.load&lt;/code&gt; 周围的包装器，它可以接受类似文件的对象或文件名。</target>
        </trans-unit>
        <trans-unit id="9462c7fa9fecb835eb7e04e6564736baefd4da76" translate="yes" xml:space="preserve">
          <source>Wrapper functions to more user-friendly calling of certain math functions whose output data-type is different than the input data-type in certain domains of the input.</source>
          <target state="translated">封装函数,以更方便地调用某些数学函数,这些函数的输出数据类型与输入数据类型在某些领域的输入不同。</target>
        </trans-unit>
        <trans-unit id="9ef9ae984284213ba399a55caa175126af51b14e" translate="yes" xml:space="preserve">
          <source>Wrapping Fortran or C functions to Python using F2PY consists of the following steps:</source>
          <target state="translated">使用F2PY将Fortran或C函数封装到Python中包括以下步骤。</target>
        </trans-unit>
        <trans-unit id="4a3455d09d842fa89e3426820a565b99b12203bd" translate="yes" xml:space="preserve">
          <source>Wraps an index to the valid range if it is out of bounds.</source>
          <target state="translated">如果索引出界,则将其包裹到有效范围。</target>
        </trans-unit>
        <trans-unit id="7a347606df979a4d48c841a72544818a00c72b80" translate="yes" xml:space="preserve">
          <source>Wraps the numpy array and sets the mask according to context.</source>
          <target state="translated">包裹numpy数组并根据上下文设置掩码。</target>
        </trans-unit>
        <trans-unit id="f77f314af42462cd35340b9bd5b4aceeb7806403" translate="yes" xml:space="preserve">
          <source>Write an array to an NPY file, including a header.</source>
          <target state="translated">向NPY文件写入一个数组,包括一个头。</target>
        </trans-unit>
        <trans-unit id="e18273e50d37416e99772f5cab31d35dc76b18b6" translate="yes" xml:space="preserve">
          <source>Write any changes in the array to the file on disk.</source>
          <target state="translated">将阵列中的任何变化写入磁盘上的文件。</target>
        </trans-unit>
        <trans-unit id="17ca7c9b94fb6b9ea51995accba9353b9d7605ae" translate="yes" xml:space="preserve">
          <source>Write array to a file as text or binary (default).</source>
          <target state="translated">将数组以文本或二进制形式写入文件(默认)。</target>
        </trans-unit>
        <trans-unit id="b0ef5a1f165fa86b8ee546df97daa724c33481fa" translate="yes" xml:space="preserve">
          <source>Write data to memmap array:</source>
          <target state="translated">向memmap数组写入数据。</target>
        </trans-unit>
        <trans-unit id="e009d67d78f7b6138fd87dc4c6c34be51a035bd1" translate="yes" xml:space="preserve">
          <source>Write files for reading by other (non-NumPy) tools</source>
          <target state="translated">写文件供其他(非NumPy)工具读取。</target>
        </trans-unit>
        <trans-unit id="c24ca5c58ff8216bb8c52732e31cfbd70c76c029" translate="yes" xml:space="preserve">
          <source>Write or read a JSON file</source>
          <target state="translated">写或读JSON文件</target>
        </trans-unit>
        <trans-unit id="4b989ed0836cfa8aa2f7fbccdfd808433de6a7c5" translate="yes" xml:space="preserve">
          <source>Write or read large arrays</source>
          <target state="translated">写入或读取大型数组</target>
        </trans-unit>
        <trans-unit id="39de007639c1cf0174274b49579ea3af01d9afca" translate="yes" xml:space="preserve">
          <source>Write the contents of &lt;em&gt;self&lt;/em&gt; to the file pointer &lt;em&gt;fp&lt;/em&gt; in C-style contiguous fashion. Write the data as binary bytes if &lt;em&gt;sep&lt;/em&gt; is the string &amp;ldquo;&amp;rdquo;or &lt;code&gt;NULL&lt;/code&gt;. Otherwise, write the contents of &lt;em&gt;self&lt;/em&gt; as text using the &lt;em&gt;sep&lt;/em&gt; string as the item separator. Each item will be printed to the file. If the &lt;em&gt;format&lt;/em&gt; string is not &lt;code&gt;NULL&lt;/code&gt; or &amp;ldquo;&amp;rdquo;, then it is a Python print statement format string showing how the items are to be written.</source>
          <target state="translated">以C样式连续的方式将&lt;em&gt;self&lt;/em&gt;的内容写入文件指针&lt;em&gt;fp&lt;/em&gt;。如果&lt;em&gt;sep&lt;/em&gt;是字符串&amp;ldquo;&amp;rdquo;或 &lt;code&gt;NULL&lt;/code&gt; ,则将数据写为二进制字节。否则，使用&lt;em&gt;sep&lt;/em&gt;字符串作为项目分隔符，将&lt;em&gt;self&lt;/em&gt;的内容写为文本。每个项目将被打印到文件中。如果&lt;em&gt;格式&lt;/em&gt;字符串不是 &lt;code&gt;NULL&lt;/code&gt; 或&amp;ldquo;&amp;rdquo;，则它是Python打印语句格式字符串，显示如何写入项目。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3e888b4ed42c7f5786d30e89be4f259397dbe387" translate="yes" xml:space="preserve">
          <source>Write the header for an array using the 1.0 format.</source>
          <target state="translated">使用1.0格式编写数组的头。</target>
        </trans-unit>
        <trans-unit id="19b8c1e657a03ff6084f69212e90b67aefb03eb4" translate="yes" xml:space="preserve">
          <source>Write the header for an array using the 2.0 format.</source>
          <target state="translated">使用2.0格式编写数组的头。</target>
        </trans-unit>
        <trans-unit id="27234d281fbc7c5bbc94f6ce7b5d06c797593eca" translate="yes" xml:space="preserve">
          <source>Write to a file to be read back by NumPy</source>
          <target state="translated">写入一个文件,由NumPy读取。</target>
        </trans-unit>
        <trans-unit id="6c365fce32144380f0457057b029153143df4f1f" translate="yes" xml:space="preserve">
          <source>Writeable flag of C-API wrapped arrays</source>
          <target state="translated">C-API封装数组的可写标志。</target>
        </trans-unit>
        <trans-unit id="427fe64590307fe90e0ed3c7002e9d59f551f75b" translate="yes" xml:space="preserve">
          <source>Writeable keyword argument for &lt;code&gt;as_strided&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;as_strided&lt;/code&gt; 的可写关键字参数</target>
        </trans-unit>
        <trans-unit id="7d00c80b2825b910b28f217d40888491f74cea96" translate="yes" xml:space="preserve">
          <source>Writeable returned arrays (since version 1.10.0):</source>
          <target state="translated">可写的返回数组(从1.10.0版本开始)。</target>
        </trans-unit>
        <trans-unit id="197f0e3d3c3e05cccf3208160a3555c70f66258d" translate="yes" xml:space="preserve">
          <source>Writing NumPy arrays to files</source>
          <target state="translated">将NumPy数组写入文件。</target>
        </trans-unit>
        <trans-unit id="282b9177a1f4610d4e348b555b88bf30f53e0383" translate="yes" xml:space="preserve">
          <source>Writing an extension module</source>
          <target state="translated">编写扩展模块</target>
        </trans-unit>
        <trans-unit id="0c3bf8fb2ea06db30fe5350590bb97d5b64d0bc1" translate="yes" xml:space="preserve">
          <source>Writing benchmarks</source>
          <target state="translated">编写基准</target>
        </trans-unit>
        <trans-unit id="c65f92e1986e8f85d7778ff39887ed018803befa" translate="yes" xml:space="preserve">
          <source>Writing custom array containers</source>
          <target state="translated">编写自定义数组容器</target>
        </trans-unit>
        <trans-unit id="8df331347211aebb4040fc654e8d39cec0f7787f" translate="yes" xml:space="preserve">
          <source>Writing technical documentation</source>
          <target state="translated">编写技术文件</target>
        </trans-unit>
        <trans-unit id="6ebe08ad44f2f2a207e761b2763be6cc2be06253" translate="yes" xml:space="preserve">
          <source>Writing tests for the &lt;code&gt;numpy.i&lt;/code&gt;&lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; interface file is a combinatorial headache. At present, 12 different data types are supported, each with 74 different argument signatures, for a total of 888 typemaps supported &amp;ldquo;out of the box&amp;rdquo;. Each of these typemaps, in turn, might require several unit tests in order to verify expected behavior for both proper and improper inputs. Currently, this results in more than 1,000 individual unit tests executed when &lt;code&gt;make test&lt;/code&gt; is run in the &lt;code&gt;numpy/tools/swig&lt;/code&gt; subdirectory.</source>
          <target state="translated">为 &lt;code&gt;numpy.i&lt;/code&gt; &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt;接口文件编写测试是一个组合难题。目前，支持12种不同的数据类型，每种数据类型具有74个不同的参数签名，总共支持888个&amp;ldquo;即开即用&amp;rdquo;的类型映射。这些类型映射中的每一个可能反过来可能都需要进行多个单元测试，以验证正确和不正确输入的预期行为。当前，当在 &lt;code&gt;numpy/tools/swig&lt;/code&gt; 子目录中运行 &lt;code&gt;make test&lt;/code&gt; 时，将执行1,000多个单独的单元测试。</target>
        </trans-unit>
        <trans-unit id="2816eea6d2ca27dc13489d1d22deb06f1c29fb32" translate="yes" xml:space="preserve">
          <source>Writing the commit message</source>
          <target state="translated">撰写提交信息</target>
        </trans-unit>
        <trans-unit id="9feb7208ef9fecc1014cac19f94fbc206b641fa9" translate="yes" xml:space="preserve">
          <source>Writing to the result of &lt;code&gt;numpy.broadcast_arrays&lt;/code&gt; will export readonly buffers</source>
          <target state="translated">写入 &lt;code&gt;numpy.broadcast_arrays&lt;/code&gt; 的结果将导出只读缓冲区</target>
        </trans-unit>
        <trans-unit id="ebee068a6bbb2b626411eaf7fd90b5ceb9e67c66" translate="yes" xml:space="preserve">
          <source>Writing to the result of &lt;code&gt;numpy.broadcast_arrays&lt;/code&gt; will warn</source>
          <target state="translated">写入 &lt;code&gt;numpy.broadcast_arrays&lt;/code&gt; 的结果将发出警告</target>
        </trans-unit>
        <trans-unit id="aecfd6c8b6bdc8850ec5e6c24472a391088658d3" translate="yes" xml:space="preserve">
          <source>Writing typemaps can be a bit nonintuitive. If you have specific questions about writing &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; typemaps for NumPy, the developers of &lt;code&gt;numpy.i&lt;/code&gt; do monitor the &lt;a href=&quot;mailto:Numpy-discussion%40python.org&quot;&gt;Numpy-discussion&lt;/a&gt; and &lt;a href=&quot;mailto:Swig-user%40lists.sourceforge.net&quot;&gt;Swig-user&lt;/a&gt; mail lists.</source>
          <target state="translated">编写类型图可能有点不直观。如果您有关于写作的具体问题&lt;a href=&quot;http://www.swig.org&quot;&gt;呷&lt;/a&gt; typemaps为NumPy的，开发商 &lt;code&gt;numpy.i&lt;/code&gt; 做监测&lt;a href=&quot;mailto:Numpy-discussion%40python.org&quot;&gt;与NumPy的讨论&lt;/a&gt;和&lt;a href=&quot;mailto:Swig-user%40lists.sourceforge.net&quot;&gt;痛饮用户&lt;/a&gt;邮件列表。</target>
        </trans-unit>
        <trans-unit id="67b3075df8e687d02e42240f00e9c97b2d568182" translate="yes" xml:space="preserve">
          <source>Writing your own tests</source>
          <target state="translated">编写自己的测试</target>
        </trans-unit>
        <trans-unit id="d413bc13e5a3684c16168d045c65e08c472bd899" translate="yes" xml:space="preserve">
          <source>Writing your own ufunc</source>
          <target state="translated">编写自己的ufunc</target>
        </trans-unit>
        <trans-unit id="906b1e2537b7a59648d2378a60c2b5ab4b446170" translate="yes" xml:space="preserve">
          <source>XXX: I just obtained these values empirically</source>
          <target state="translated">XXX:我只是根据经验获得这些数值。</target>
        </trans-unit>
        <trans-unit id="23eb4d3f4155395a74e9d534f97ff4c1908f5aac" translate="yes" xml:space="preserve">
          <source>Y</source>
          <target state="translated">Y</target>
        </trans-unit>
        <trans-unit id="8b8fe137d4fbf05cd83e4e8b3026e38a50226d06" translate="yes" xml:space="preserve">
          <source>Yes &amp;ndash; until the sections with question-mark headings; they explain rather than giving directions. In a how-to, those would be links.</source>
          <target state="translated">是的&amp;ndash;直到带有问号标题的部分；他们解释而不是指示。在how-to中，这些将是链接。</target>
        </trans-unit>
        <trans-unit id="3e44498549b3ccfc159cdee6bdb9318868914b00" translate="yes" xml:space="preserve">
          <source>Yet another possibility is to use any of the following functions:</source>
          <target state="translated">然而,另一种可能性是使用以下任何一种功能:</target>
        </trans-unit>
        <trans-unit id="881f60e93d520cc9c2597264d824b1a04946803a" translate="yes" xml:space="preserve">
          <source>Yet, we have to &lt;em&gt;build&lt;/em&gt; a house before it exists:</source>
          <target state="translated">但是，我们必须在存在之前&lt;em&gt;盖&lt;/em&gt;一栋房子：</target>
        </trans-unit>
        <trans-unit id="d89990f66b139dda8aaeaaecdddeb065125ce407" translate="yes" xml:space="preserve">
          <source>You already have your own forked copy of the &lt;a href=&quot;https://www.numpy.org&quot;&gt;NumPy&lt;/a&gt; repository, by following &lt;a href=&quot;gitwash/development_setup#forking&quot;&gt;Create a NumPy fork&lt;/a&gt;, &lt;a href=&quot;gitwash/development_setup#set-up-fork&quot;&gt;Make the local copy&lt;/a&gt;, you have configured &lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt; by following &lt;a href=&quot;gitwash/configure_git#configure-git&quot;&gt;Git configuration&lt;/a&gt;, and have linked the upstream repository as explained in &lt;a href=&quot;https://scikit-image.org/docs/stable/gitwash/set_up_fork.html#linking-to-upstream&quot;&gt;Linking your repository to the upstream repo&lt;/a&gt;.</source>
          <target state="translated">你已经拥有你自己的叉状副本&lt;a href=&quot;https://www.numpy.org&quot;&gt;NumPy的&lt;/a&gt;仓库，按照&lt;a href=&quot;gitwash/development_setup#forking&quot;&gt;创建NumPy的叉子&lt;/a&gt;，&lt;a href=&quot;gitwash/development_setup#set-up-fork&quot;&gt;使本地副本&lt;/a&gt;，您已经配置&lt;a href=&quot;https://git-scm.com/&quot;&gt;的git&lt;/a&gt;通过以下&lt;a href=&quot;gitwash/configure_git#configure-git&quot;&gt;Git的配置&lt;/a&gt;，并已链接作为解释的上游资源库&lt;a href=&quot;https://scikit-image.org/docs/stable/gitwash/set_up_fork.html#linking-to-upstream&quot;&gt;将您的资料库上游回购&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="59fbe76f39839efb6c5b691e1b2b5256f482c50b" translate="yes" xml:space="preserve">
          <source>You already have your own forked copy of the &lt;a href=&quot;https://www.numpy.org&quot;&gt;NumPy&lt;/a&gt; repository, by following &lt;a href=&quot;gitwash/development_setup#forking&quot;&gt;Making your own copy (fork) of NumPy&lt;/a&gt;, &lt;a href=&quot;gitwash/development_setup#set-up-fork&quot;&gt;Set up your fork&lt;/a&gt;, you have configured &lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt; by following &lt;a href=&quot;gitwash/configure_git#configure-git&quot;&gt;Git configuration&lt;/a&gt;, and have linked the upstream repository as explained in &lt;a href=&quot;gitwash/development_setup#linking-to-upstream&quot;&gt;Linking your repository to the upstream repo&lt;/a&gt;.</source>
          <target state="translated">通过遵循&lt;a href=&quot;gitwash/development_setup#forking&quot;&gt;制作自己的NumPy副本（叉）&lt;/a&gt;，&lt;a href=&quot;gitwash/development_setup#set-up-fork&quot;&gt;设置叉子&lt;/a&gt;，按照&lt;a href=&quot;gitwash/configure_git#configure-git&quot;&gt;Git配置&lt;/a&gt;配置&lt;a href=&quot;https://git-scm.com/&quot;&gt;git的&lt;/a&gt;方式，并已经链接了上游存储库（如&lt;a href=&quot;gitwash/development_setup#linking-to-upstream&quot;&gt;链接存储&lt;/a&gt;库中所述），您已经拥有了自己的&lt;a href=&quot;https://www.numpy.org&quot;&gt;NumPy&lt;/a&gt;存储库分叉副本。到上游回购。</target>
        </trans-unit>
        <trans-unit id="20a27bb82adebb36b7222541417aba8bfc23f7cf" translate="yes" xml:space="preserve">
          <source>You are the face of the project, and NumPy some time ago decided &lt;a href=&quot;https://numpy.org/code-of-conduct/&quot;&gt;the kind of project it will be&lt;/a&gt;: open, empathetic, welcoming, friendly and patient. Be &lt;a href=&quot;https://youtu.be/tzFWz5fiVKU?t=49m30s&quot;&gt;kind&lt;/a&gt; to contributors.</source>
          <target state="translated">您就是该项目的代表，NumPy不久前决定&lt;a href=&quot;https://numpy.org/code-of-conduct/&quot;&gt;了该项目的类型&lt;/a&gt;：开放，富有同情心，热情，友好和耐心。是&lt;a href=&quot;https://youtu.be/tzFWz5fiVKU?t=49m30s&quot;&gt;一种&lt;/a&gt;以贡献者。</target>
        </trans-unit>
        <trans-unit id="00eb290eb607af17a427008cd0df7020db925634" translate="yes" xml:space="preserve">
          <source>You can &amp;ldquo;test run&amp;rdquo; the new documentation in a browser to make sure the links work:</source>
          <target state="translated">您可以在浏览器中&amp;ldquo;测试运行&amp;rdquo;新文档，以确保链接有效：</target>
        </trans-unit>
        <trans-unit id="77839705742503276b6ae229dcc3f770d8625b34" translate="yes" xml:space="preserve">
          <source>You can access and modify individual fields of a structured array by indexing with the field name:</source>
          <target state="translated">您可以通过字段名的索引来访问和修改结构化数组的各个字段。</target>
        </trans-unit>
        <trans-unit id="7e4cda34004c0b0283cc5d19ef4967039dda6a9e" translate="yes" xml:space="preserve">
          <source>You can add an axis at index position 0 with:</source>
          <target state="translated">您可以通过以下方式在索引位置0添加一个轴。</target>
        </trans-unit>
        <trans-unit id="1ebcf08c273e379725ba3c03f7dbf5125d70db1c" translate="yes" xml:space="preserve">
          <source>You can add the arrays together with the plus sign.</source>
          <target state="translated">你可以用加号将数组加在一起。</target>
        </trans-unit>
        <trans-unit id="3c8b2d15539f2fe59ff95576c13822e6dc13c97b" translate="yes" xml:space="preserve">
          <source>You can aggregate all the values in a matrix and you can aggregate them across columns or rows using the &lt;code&gt;axis&lt;/code&gt; parameter:</source>
          <target state="translated">您可以汇总矩阵中的所有值，也可以使用 &lt;code&gt;axis&lt;/code&gt; 参数跨列或行汇总它们：</target>
        </trans-unit>
        <trans-unit id="48a3c1bcf70f6a7368f40947c84aaebd7c765c17" translate="yes" xml:space="preserve">
          <source>You can aggregate matrices the same way you aggregated vectors:</source>
          <target state="translated">你可以用聚合向量的方式聚合矩阵。</target>
        </trans-unit>
        <trans-unit id="237f9fca73b96863dad607a904e1d0df2385cdad" translate="yes" xml:space="preserve">
          <source>You can also expand an array by inserting a new axis at a specified position with &lt;code&gt;np.expand_dims&lt;/code&gt;.</source>
          <target state="translated">您还可以通过使用 &lt;code&gt;np.expand_dims&lt;/code&gt; 在指定位置插入新轴来扩展数组。</target>
        </trans-unit>
        <trans-unit id="2dd1c35daf50a20134f87a7ce8e57e5c3ceac4f3" translate="yes" xml:space="preserve">
          <source>You can also get f2py to compile add.f and also compile its produced extension module leaving only a shared-library extension file that can be imported from Python:</source>
          <target state="translated">你也可以让f2py编译add.f,同时编译它产生的扩展模块,只留下一个可以从Python导入的共享库扩展文件。</target>
        </trans-unit>
        <trans-unit id="065886a83d78b6fa367fbc1ff280c2970ead10db" translate="yes" xml:space="preserve">
          <source>You can also look at the &lt;a href=&quot;https://github.blog/2008-04-10-say-hello-to-the-network-graph-visualizer/&quot;&gt;network graph visualizer&lt;/a&gt; for your &lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;github&lt;/a&gt; repo.</source>
          <target state="translated">您还可以查看&lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;github存储库&lt;/a&gt;的&lt;a href=&quot;https://github.blog/2008-04-10-say-hello-to-the-network-graph-visualizer/&quot;&gt;网络图可视化&lt;/a&gt;工具。</target>
        </trans-unit>
        <trans-unit id="96352e42690860acf17aa1a27a4a270b4c0831fe" translate="yes" xml:space="preserve">
          <source>You can also look at the &lt;a href=&quot;https://github.com/blog/39-say-hello-to-the-network-graph-visualizer&quot;&gt;network graph visualizer&lt;/a&gt; for your &lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;github&lt;/a&gt; repo.</source>
          <target state="translated">您还可以查看&lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;github存储库&lt;/a&gt;的&lt;a href=&quot;https://github.com/blog/39-say-hello-to-the-network-graph-visualizer&quot;&gt;网络图可视化&lt;/a&gt;工具。</target>
        </trans-unit>
        <trans-unit id="282c4f97ad9fcd8ed55a4a8ee354250a844bfb56" translate="yes" xml:space="preserve">
          <source>You can also make use of the logical operators &lt;strong&gt;&amp;amp;&lt;/strong&gt; and &lt;strong&gt;|&lt;/strong&gt; in order to return boolean values that specify whether or not the values in an array fulfill a certain condition. This can be useful with arrays that contain names or other categorical values.</source>
          <target state="translated">您还可以使用逻辑运算符&lt;strong&gt;＆&lt;/strong&gt;和&lt;strong&gt;| |。&lt;/strong&gt;为了返回布尔值，这些布尔值指定数组中的值是否满足特定条件。这对于包含名称或其他类别值的数组很有用。</target>
        </trans-unit>
        <trans-unit id="d4a5fe8b97704af411fc68344f43f8175b5a17c2" translate="yes" xml:space="preserve">
          <source>You can also put the common two last lines into an extension-local header file as long as you make sure that NO_IMPORT_ARRAY is #defined before #including that file.</source>
          <target state="translated">你也可以把常用的最后两行放到扩展本地头文件中,只要你在#包含该文件之前确保NO_IMPORT_ARRAY是#定义的。</target>
        </trans-unit>
        <trans-unit id="e2c7a514bb765af4c0f18932e407e9116ccc75a9" translate="yes" xml:space="preserve">
          <source>You can also reverse the column at index position 1 (the second column):</source>
          <target state="translated">你也可以将索引位置1(第二列)的列反过来。</target>
        </trans-unit>
        <trans-unit id="c47550288816bfc7042c2dcdbf49371a30912fc7" translate="yes" xml:space="preserve">
          <source>You can also reverse the contents of only one column or row. For example, you can reverse the contents of the row at index position 1 (the second row):</source>
          <target state="translated">您也可以只反转一列或一行的内容。例如,您可以反转索引位置1(第二行)的行的内容。</target>
        </trans-unit>
        <trans-unit id="c89799be221d2c9e96c99b9f246abd7f544a3e35" translate="yes" xml:space="preserve">
          <source>You can also save your array with the NumPy &lt;code&gt;savetxt&lt;/code&gt; method.</source>
          <target state="translated">您还可以使用NumPy &lt;code&gt;savetxt&lt;/code&gt; 方法保存数组。</target>
        </trans-unit>
        <trans-unit id="e4ba4cc9227f10a44933bdf77a3096f97d9f5f23" translate="yes" xml:space="preserve">
          <source>You can also select, for example, numbers that are equal to or greater than 5, and use that condition to index an array.</source>
          <target state="translated">你也可以选择,例如,等于或大于5的数字,并使用该条件来索引一个数组。</target>
        </trans-unit>
        <trans-unit id="752bbae56b5fc445187410f0f6a25c6c5e8c7b48" translate="yes" xml:space="preserve">
          <source>You can also stack two existing arrays, both vertically and horizontally. Let&amp;rsquo;s say you have two arrays, &lt;code&gt;a1&lt;/code&gt; and &lt;code&gt;a2&lt;/code&gt;:</source>
          <target state="translated">您还可以堆叠两个现有的垂直和水平阵列。假设您有两个数组 &lt;code&gt;a1&lt;/code&gt; 和 &lt;code&gt;a2&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="bd5bdd1d6f2605746dfa5444603a80a8e39ed12e" translate="yes" xml:space="preserve">
          <source>You can also start the product with a value other than one:</source>
          <target state="translated">你也可以用一个以外的值来启动产品。</target>
        </trans-unit>
        <trans-unit id="9238d7ca5ba3e22758c44fc16cfa76bade93b524" translate="yes" xml:space="preserve">
          <source>You can also start the sum with a value other than zero:</source>
          <target state="translated">你也可以用一个零以外的值开始计算。</target>
        </trans-unit>
        <trans-unit id="43992aec09e45c50ca9653d65e659c7e092c2a3a" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;../reference/c-api/array#c.PyArrayIter_Check&quot;&gt;&lt;code&gt;PyArrayIter_Check&lt;/code&gt;&lt;/a&gt; ( &lt;code&gt;obj&lt;/code&gt; ) to ensure you have an iterator object and &lt;a href=&quot;../reference/c-api/array#c.PyArray_ITER_RESET&quot;&gt;&lt;code&gt;PyArray_ITER_RESET&lt;/code&gt;&lt;/a&gt; ( &lt;code&gt;iter&lt;/code&gt; ) to reset an iterator object back to the beginning of the array.</source>
          <target state="translated">您还可以使用&lt;a href=&quot;../reference/c-api/array#c.PyArrayIter_Check&quot;&gt; &lt;code&gt;PyArrayIter_Check&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;obj&lt;/code&gt; ）确保具有迭代器对象，并使用&lt;a href=&quot;../reference/c-api/array#c.PyArray_ITER_RESET&quot;&gt; &lt;code&gt;PyArray_ITER_RESET&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;iter&lt;/code&gt; ）将迭代器对象重置回数组的开头。</target>
        </trans-unit>
        <trans-unit id="7c95e7c4f14ee05bef4102c618cc9824d7b02322" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;.transpose()&lt;/code&gt; to reverse or change the axes of an array according to the values you specify.</source>
          <target state="translated">您还可以根据指定的值使用 &lt;code&gt;.transpose()&lt;/code&gt; 反转或更改数组的轴。</target>
        </trans-unit>
        <trans-unit id="4ccb624e067361a21a322987057a6b2251b60e37" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;.transpose&lt;/code&gt; to reverse or change the axes of an array according to the values you specify.</source>
          <target state="translated">您还可以根据指定的值使用 &lt;code&gt;.transpose&lt;/code&gt; 反转或更改数组的轴。</target>
        </trans-unit>
        <trans-unit id="62c15e53bbe9a7759356c7542b6d1a86b547c61b" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;arr.T&lt;/code&gt;:</source>
          <target state="translated">您也可以使用 &lt;code&gt;arr.T&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ac3d777648f5ec3ef1ae8e36503188b848922325" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;np.linspace()&lt;/code&gt; to create an array with values that are spaced linearly in a specified interval:</source>
          <target state="translated">您还可以使用 &lt;code&gt;np.linspace()&lt;/code&gt; 创建一个数组，该数组的值以指定的间隔线性间隔：</target>
        </trans-unit>
        <trans-unit id="e3aa6540779ad8ab4d81b4e53e5a83928241b43a" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;np.nonzero()&lt;/code&gt; to print the elements in an array that are less than 5 with:</source>
          <target state="translated">您还可以使用 &lt;code&gt;np.nonzero()&lt;/code&gt; 来打印数组中小于5的元素，方法是：</target>
        </trans-unit>
        <trans-unit id="22ef7353d852cd371f57e27ca42cd7bb34a1f070" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;np.nonzero()&lt;/code&gt; to select elements or indices from an array.</source>
          <target state="translated">您还可以使用 &lt;code&gt;np.nonzero()&lt;/code&gt; 从数组中选择元素或索引。</target>
        </trans-unit>
        <trans-unit id="f4d8b024f7fd32afc4d6ac9b62bcc081732f5262" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;ones()&lt;/code&gt;, &lt;code&gt;zeros()&lt;/code&gt;, and &lt;code&gt;random()&lt;/code&gt; to create a 2D array if you give them a tuple describing the dimensions of the matrix:</source>
          <target state="translated">如果为它们提供一个描述矩阵尺寸的元组，则还可以使用 &lt;code&gt;ones()&lt;/code&gt; ， &lt;code&gt;zeros()&lt;/code&gt; 和 &lt;code&gt;random()&lt;/code&gt; 来创建2D数组：</target>
        </trans-unit>
        <trans-unit id="0508f13fcfc5d4d4f4197384c0c76abecb7ede11" translate="yes" xml:space="preserve">
          <source>You can also use indexing with arrays as a target to assign to:</source>
          <target state="translated">你也可以使用数组的索引作为目标来分配。</target>
        </trans-unit>
        <trans-unit id="a6a6ee70ba30827e52ff4b44c9680907b623c5f1" translate="yes" xml:space="preserve">
          <source>You can check that the above works by doing some tests; for example, inquiring about maximum and minimum values for this array:</source>
          <target state="translated">你可以通过做一些测试来检查上面的工作;例如,查询这个数组的最大值和最小值。</target>
        </trans-unit>
        <trans-unit id="dbae01da7fe0ab4f2d4dfea82533b37281dc1510" translate="yes" xml:space="preserve">
          <source>You can check whether this option was enabled when your NumPy was built by looking at the value of &lt;code&gt;np.ones((10,1),
order='C').flags.f_contiguous&lt;/code&gt;. If this is &lt;code&gt;True&lt;/code&gt;, then your NumPy has relaxed strides checking enabled.</source>
          <target state="translated">您可以通过查看 &lt;code&gt;np.ones((10,1), order='C').flags.f_contiguous&lt;/code&gt; 的值来检查在构建NumPy时是否启用了此选项。如果这是 &lt;code&gt;True&lt;/code&gt; ，则您的NumPy已启用宽松的步幅检查。</target>
        </trans-unit>
        <trans-unit id="fe0afd9f0ce26d4a6f9c3a70ea220cbcab2e663a" translate="yes" xml:space="preserve">
          <source>You can concatenate them with &lt;code&gt;np.concatenate()&lt;/code&gt;.</source>
          <target state="translated">您可以使用 &lt;code&gt;np.concatenate()&lt;/code&gt; 将它们连接起来。</target>
        </trans-unit>
        <trans-unit id="b01806fc3711f6e062a40c836a2e4ff4c619a03c" translate="yes" xml:space="preserve">
          <source>You can concatenate them with:</source>
          <target state="translated">你可以用以下方法将它们连接起来:</target>
        </trans-unit>
        <trans-unit id="dd4eede6548034f569b1dbaaa5d82af6fae75d2c" translate="yes" xml:space="preserve">
          <source>You can copy out the numpy/core/lib/npy-pkg-config directory, add a pkgdir value to the .ini files and set NPY_PKG_CONFIG_PATH environment variable to point to the directory with the modified npy-pkg-config files.</source>
          <target state="translated">可以将 numpy/core/lib/npy-pkg-config 目录复制出来,在 .ini 文件中添加 pkgdir 值,并设置 NPY_PKG_CONFIG_PATH 环境变量指向修改后的 npy-pkg-config 文件的目录。</target>
        </trans-unit>
        <trans-unit id="bf631609d9ad3a3be35567a5fc91badfdcb1e34f" translate="yes" xml:space="preserve">
          <source>You can create a new array from a section of your array any time by specifying where you want to slice your array.</source>
          <target state="translated">你可以在任何时候通过指定你想切分数组的位置,从数组的一部分创建一个新的数组。</target>
        </trans-unit>
        <trans-unit id="f31cea59b1e43f33f7c2fbd9d2de6a5a9de225c9" translate="yes" xml:space="preserve">
          <source>You can create an array with a range of elements:</source>
          <target state="translated">你可以创建一个包含一系列元素的数组。</target>
        </trans-unit>
        <trans-unit id="9f727d609d02021feb25c56ec5c7d4115e505da2" translate="yes" xml:space="preserve">
          <source>You can do all this with &lt;code&gt;slice()&lt;/code&gt; plus a few special objects, but there&amp;rsquo;s a lot to remember and this version is simpler because it uses the standard array indexing syntax.</source>
          <target state="translated">您可以使用 &lt;code&gt;slice()&lt;/code&gt; 加上一些特殊对象来完成所有这些操作，但是要记住很多事情，并且此版本更简单，因为它使用了标准的数组索引语法。</target>
        </trans-unit>
        <trans-unit id="5baf46913d5b2195b4f107095bd793625fa95842" translate="yes" xml:space="preserve">
          <source>You can do these arithmetic operations on matrices of different sizes, but only if one matrix has only one column or one row. In this case, NumPy will use its broadcast rules for the operation.</source>
          <target state="translated">您可以在不同大小的矩阵上进行这些算术运算,但只有在一个矩阵只有一列或一行的情况下才可以。在这种情况下,NumPy将使用它的广播规则进行操作。</target>
        </trans-unit>
        <trans-unit id="3d172f1e6eacc137cdecc574b47f944d3853d107" translate="yes" xml:space="preserve">
          <source>You can do this automatically using the &lt;code&gt;wheel-uploader&lt;/code&gt; script from &lt;a href=&quot;https://github.com/MacPython/terryfy&quot;&gt;https://github.com/MacPython/terryfy&lt;/a&gt;. Here is the recommended incantation for downloading all the Windows, Manylinux, OSX wheels and uploading to PyPI.</source>
          <target state="translated">您可以使用&lt;a href=&quot;https://github.com/MacPython/terryfy&quot;&gt;https://github.com/MacPython/terryfy中&lt;/a&gt;的 &lt;code&gt;wheel-uploader&lt;/code&gt; 脚本自动执行此操作。对于下载所有Windows，Manylinux，OSX轮并上传到PyPI的建议，这是推荐的方法。</target>
        </trans-unit>
        <trans-unit id="97c3d2c0245b4b7321ec5c2ca8eeee38ba0ad8e7" translate="yes" xml:space="preserve">
          <source>You can easily print all of the values in the array that are less than 5.</source>
          <target state="translated">你可以轻松地打印数组中所有小于5的值。</target>
        </trans-unit>
        <trans-unit id="6c63f33a9113ffa6279f9b313654b4abb853aa2e" translate="yes" xml:space="preserve">
          <source>You can easily reverse only the &lt;em&gt;rows&lt;/em&gt; with:</source>
          <target state="translated">您可以使用以下方法轻松地仅反转&lt;em&gt;行&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="ee6ef35316335a7f1cb11120168c98209d725a17" translate="yes" xml:space="preserve">
          <source>You can easily save it as a .csv file with the name &amp;ldquo;new_file.csv&amp;rdquo; like this:</source>
          <target state="translated">您可以轻松地将其另存为.csv文件，其名称为&amp;ldquo; new_file.csv&amp;rdquo;，如下所示：</target>
        </trans-unit>
        <trans-unit id="82504198a2e983dc31c81d0f6dc83440d487c0e7" translate="yes" xml:space="preserve">
          <source>You can easily save your dataframe with:</source>
          <target state="translated">你可以轻松地保存你的数据框架。</target>
        </trans-unit>
        <trans-unit id="39be9a99e649b46efd47c1047b3ed1ee3dd34d76" translate="yes" xml:space="preserve">
          <source>You can easily use create a new array from a section of an existing array.</source>
          <target state="translated">你可以很容易地使用从现有数组的一部分创建一个新的数组。</target>
        </trans-unit>
        <trans-unit id="51adde44a6a18def3f2148c58a74d0ae15f40b43" translate="yes" xml:space="preserve">
          <source>You can edit this file directly or you can use the &lt;code&gt;git config --global&lt;/code&gt; command:</source>
          <target state="translated">您可以直接编辑此文件，也可以使用 &lt;code&gt;git config --global&lt;/code&gt; 命令：</target>
        </trans-unit>
        <trans-unit id="535e7d83a0f12ecc49312cf2783284d9e2baf7c7" translate="yes" xml:space="preserve">
          <source>You can even use this notation for object methods and objects themselves.</source>
          <target state="translated">你甚至可以对对象方法和对象本身使用这种符号。</target>
        </trans-unit>
        <trans-unit id="857a3e3d8c565a0a807995e6a2a380421127866a" translate="yes" xml:space="preserve">
          <source>You can explicitly convert a 1D array with either a row vector or a column vector using &lt;code&gt;np.newaxis&lt;/code&gt;. For example, you can convert a 1D array to a row vector by inserting an axis along the first dimension:</source>
          <target state="translated">您可以使用 &lt;code&gt;np.newaxis&lt;/code&gt; 使用行向量或列向量显式转换一维数组。例如，您可以通过沿第一个维度插入轴来将一维数组转换为行向量：</target>
        </trans-unit>
        <trans-unit id="cd190ae92f562a96f20ce99a02b9ac7ab128e4c8" translate="yes" xml:space="preserve">
          <source>You can find all of the installation details in the &lt;a href=&quot;https://www.scipy.org/install.html&quot;&gt;Installation&lt;/a&gt; section at &lt;a href=&quot;https://www.scipy.org&quot;&gt;SciPy&lt;/a&gt;.</source>
          <target state="translated">您可以在&lt;a href=&quot;https://www.scipy.org&quot;&gt;SciPy&lt;/a&gt;的&amp;ldquo;&lt;a href=&quot;https://www.scipy.org/install.html&quot;&gt;安装&amp;rdquo;&lt;/a&gt;部分中找到所有安装详细信息。</target>
        </trans-unit>
        <trans-unit id="bdb9e7ae57ffac28af422f704a853be72766092f" translate="yes" xml:space="preserve">
          <source>You can find larger planned and in-progress documentation improvement ideas &lt;a href=&quot;https://github.com/orgs/numpy/projects/2&quot;&gt;at our GitHub project&lt;/a&gt;.</source>
          <target state="translated">您可以&lt;a href=&quot;https://github.com/orgs/numpy/projects/2&quot;&gt;在我们的GitHub项目中&lt;/a&gt;找到更大的计划内和正在进行中的文档改进建议。</target>
        </trans-unit>
        <trans-unit id="3b55e45277060c5f2833659181f594a51313fd7d" translate="yes" xml:space="preserve">
          <source>You can find larger planned and in-progress ideas &lt;a href=&quot;https://github.com/orgs/numpy/projects/2&quot;&gt;at our GitHub project&lt;/a&gt;.</source>
          <target state="translated">您可以&lt;a href=&quot;https://github.com/orgs/numpy/projects/2&quot;&gt;在我们的GitHub项目中&lt;/a&gt;找到更大的计划中和正在进行中的想法。</target>
        </trans-unit>
        <trans-unit id="d25b50e70c597602f22d56000431ce6c81fbbbbd" translate="yes" xml:space="preserve">
          <source>You can find the unique elements in an array easily with &lt;code&gt;np.unique&lt;/code&gt;.</source>
          <target state="translated">您可以使用 &lt;code&gt;np.unique&lt;/code&gt; 轻松找到数组中的唯一元素。</target>
        </trans-unit>
        <trans-unit id="64a20c17cabe71b9adc6b2c4871ae4565e9a4af0" translate="yes" xml:space="preserve">
          <source>You can find unique values with:</source>
          <target state="translated">你可以找到独特的价值与。</target>
        </trans-unit>
        <trans-unit id="79ef56c8153fa2d24dc577d3e3a0d47ca828d769" translate="yes" xml:space="preserve">
          <source>You can generate a 2 x 4 array of random integers between 0 and 4 with:</source>
          <target state="translated">你可以用以下方法生成一个2 x 4的0和4之间的随机整数阵列。</target>
        </trans-unit>
        <trans-unit id="74c28c5a8bb3004bf7dc11f9275ff87a6627fca1" translate="yes" xml:space="preserve">
          <source>You can get these on your own machine with (e.g) &lt;code&gt;git help push&lt;/code&gt; or (same thing) &lt;code&gt;git push --help&lt;/code&gt;, but, for convenience, here are the online manual pages for some common commands:</source>
          <target state="translated">您可以使用（例如） &lt;code&gt;git help push&lt;/code&gt; 或（相同的东西） &lt;code&gt;git push --help&lt;/code&gt; 在自己的机器上获得这些文件，但是为了方便起见，以下是一些常用命令的在线手册页：</target>
        </trans-unit>
        <trans-unit id="11c41f32976f77408fe3afa43f6236aa2549ca0d" translate="yes" xml:space="preserve">
          <source>You can have standard vectors or row/column vectors if you like.</source>
          <target state="translated">如果你喜欢,你可以使用标准向量或行/列向量。</target>
        </trans-unit>
        <trans-unit id="f3e24545eb2cdf1492fbe6a370874d4d2e482730" translate="yes" xml:space="preserve">
          <source>You can index and slice NumPy arrays in the same ways you can slice Python lists.</source>
          <target state="translated">你可以用划分Python列表的方式来索引和划分NumPy数组。</target>
        </trans-unit>
        <trans-unit id="3c985751eeed6dac2e78c9a7702d8c0bef18d7e8" translate="yes" xml:space="preserve">
          <source>You can look at the following example to see how to use boolean indexing to generate an image of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Mandelbrot_set&quot;&gt;Mandelbrot set&lt;/a&gt;:</source>
          <target state="translated">您可以看下面的示例，看看如何使用布尔索引来生成&lt;a href=&quot;https://en.wikipedia.org/wiki/Mandelbrot_set&quot;&gt;Mandelbrot集&lt;/a&gt;的图像：</target>
        </trans-unit>
        <trans-unit id="8a9537b5cf6ada6aee9b0e48c656db4298fbb1ca" translate="yes" xml:space="preserve">
          <source>You can obtain information about the function:</source>
          <target state="translated">您可以获得有关该功能的信息。</target>
        </trans-unit>
        <trans-unit id="a9ed554e08c6a0f3f56e82961f904108ee6fc5a8" translate="yes" xml:space="preserve">
          <source>You can pass Python lists of lists to create a 2-D array (or &amp;ldquo;matrix&amp;rdquo;) to represent them in NumPy.</source>
          <target state="translated">您可以传递列表的Python列表以创建一个二维数组（或&amp;ldquo;矩阵&amp;rdquo;）以在NumPy中表示它们。</target>
        </trans-unit>
        <trans-unit id="c33e63092f2c81ef7ef464c8978156a4abec7928" translate="yes" xml:space="preserve">
          <source>You can pass the &lt;code&gt;return_counts&lt;/code&gt; argument in &lt;code&gt;np.unique()&lt;/code&gt; along with your array to get the frequency count of unique values in a NumPy array.</source>
          <target state="translated">您可以将 &lt;code&gt;np.unique()&lt;/code&gt; 中的 &lt;code&gt;return_counts&lt;/code&gt; 参数与数组一起传递，以获取NumPy数组中唯一值的频率计数。</target>
        </trans-unit>
        <trans-unit id="0dc811f9e51cddee6cdcd6b73d03c1376a565596" translate="yes" xml:space="preserve">
          <source>You can quickly and easily load your saved text file using &lt;code&gt;loadtxt()&lt;/code&gt;:</source>
          <target state="translated">您可以使用 &lt;code&gt;loadtxt()&lt;/code&gt; 快速轻松地加载保存的文本文件：</target>
        </trans-unit>
        <trans-unit id="bd99805037851e24542e0c190c949f7441fdb05e" translate="yes" xml:space="preserve">
          <source>You can quickly sort the numbers in ascending order with:</source>
          <target state="translated">你可以快速地将数字按升序排列。</target>
        </trans-unit>
        <trans-unit id="fbabee0d2a8ad11c2e5d1a9374dba3d5de22c5c5" translate="yes" xml:space="preserve">
          <source>You can reach another level of information by reading the source code of the object you&amp;rsquo;re interested in. Using a double question mark (&lt;code&gt;??&lt;/code&gt;) allows you to access the source code.</source>
          <target state="translated">您可以通过阅读感兴趣的对象的源代码来获得更高级别的信息。使用双问号（ &lt;code&gt;??&lt;/code&gt; ）可以访问源代码。</target>
        </trans-unit>
        <trans-unit id="525e57a42eaa3f05d626e2a1e78e1405cd0f56c6" translate="yes" xml:space="preserve">
          <source>You can report issues to the NumPy Code of Conduct committee, at &lt;a href=&quot;mailto:numpy-conduct%40googlegroups.com&quot;&gt;numpy-conduct@googlegroups.com&lt;/a&gt;. Currently, the committee consists of:</source>
          <target state="translated">您可以通过&lt;a href=&quot;mailto:numpy-conduct%40googlegroups.com&quot;&gt;numpy-conduct@googlegroups.com&lt;/a&gt;向NumPy行为准则委员会报告问题。目前，该委员会包括：</target>
        </trans-unit>
        <trans-unit id="411581b4a2c33f96f2e50370cca530bb14494a68" translate="yes" xml:space="preserve">
          <source>You can reverse it with:</source>
          <target state="translated">你可以反过来用。</target>
        </trans-unit>
        <trans-unit id="91c836df02cbd1f82e91ec4724342db42d32dc07" translate="yes" xml:space="preserve">
          <source>You can reverse the content in all of the rows and all of the columns with:</source>
          <target state="translated">你可以用以下方法反转所有行和所有列的内容。</target>
        </trans-unit>
        <trans-unit id="b58f703b8270c8a067823a77d7af5bf7887ff76f" translate="yes" xml:space="preserve">
          <source>You can run examples as doctests using:</source>
          <target state="translated">您可以使用以下方法将示例作为doctests运行。</target>
        </trans-unit>
        <trans-unit id="ca40d20f8092fec5dfdca584f23e5b003136ab53" translate="yes" xml:space="preserve">
          <source>You can save a NumPy array as a plain text file like a &lt;strong&gt;.csv&lt;/strong&gt; or &lt;strong&gt;.txt&lt;/strong&gt; file with &lt;code&gt;np.savetxt&lt;/code&gt;.</source>
          <target state="translated">您可以使用 &lt;code&gt;np.savetxt&lt;/code&gt; 将NumPy数组另存为纯文本文件（如&lt;strong&gt;.csv&lt;/strong&gt;或&lt;strong&gt;.txt&lt;/strong&gt;文件）。</target>
        </trans-unit>
        <trans-unit id="638da3aef28233421c8588fb61e4dfac171499ee" translate="yes" xml:space="preserve">
          <source>You can save it as &amp;ldquo;filename.npy&amp;rdquo; with:</source>
          <target state="translated">您可以使用以下命令将其另存为&amp;ldquo; filename.npy&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="13c816c29bd6c6d8cea0adad71c911999f0f8043" translate="yes" xml:space="preserve">
          <source>You can see that we have selected only the first &lt;code&gt;k&lt;/code&gt; components of the last axis for &lt;code&gt;Sigma&lt;/code&gt; (this means that we have used only the first &lt;code&gt;k&lt;/code&gt; columns of each of the three matrices in the stack), and that we have selected only the first &lt;code&gt;k&lt;/code&gt; components in the second-to-last axis of &lt;code&gt;Vt&lt;/code&gt; (this means we have selected only the first &lt;code&gt;k&lt;/code&gt; rows from every matrix in the stack &lt;code&gt;Vt&lt;/code&gt; and all columns). If you are unfamiliar with the ellipsis syntax, it is a placeholder for other axes. For more details, see the documentation on &lt;a href=&quot;basics.indexing#basics-indexing&quot;&gt;Indexing&lt;/a&gt;.</source>
          <target state="translated">您可以看到我们仅选择了 &lt;code&gt;Sigma&lt;/code&gt; 的最后一个轴的前 &lt;code&gt;k&lt;/code&gt; 个分量（这意味着我们仅使用了堆栈中三个矩阵中每个矩阵的前 &lt;code&gt;k&lt;/code&gt; 列），并且我们仅选择了前 &lt;code&gt;k&lt;/code&gt; 个 &lt;code&gt;Vt&lt;/code&gt; 倒数第二个轴上的分量（这意味着我们仅从堆栈 &lt;code&gt;Vt&lt;/code&gt; 的每个矩阵和所有列中选择了前 &lt;code&gt;k&lt;/code&gt; 行）。如果您不熟悉省略号语法，则它是其他轴的占位符。有关更多详细信息，请参见&lt;a href=&quot;basics.indexing#basics-indexing&quot;&gt;Indexing&lt;/a&gt;上的文档。</target>
        </trans-unit>
        <trans-unit id="aa597ab231ed849826c68828e374dfe531ab8bfd" translate="yes" xml:space="preserve">
          <source>You can select elements that are divisible by 2:</source>
          <target state="translated">你可以选择被2整除的元素。</target>
        </trans-unit>
        <trans-unit id="09b64cb650b0721919b112892ec7540fa3bec8f6" translate="yes" xml:space="preserve">
          <source>You can specify on which axis you want the aggregation function to be computed. For example, you can find the minimum value within each column by specifying &lt;code&gt;axis=0&lt;/code&gt;.</source>
          <target state="translated">您可以指定要在哪个轴上计算聚合函数。例如，您可以通过指定 &lt;code&gt;axis=0&lt;/code&gt; 在每一列中找到最小值。</target>
        </trans-unit>
        <trans-unit id="09f8d7cd5b1c8277145559102abee3f2cfb118c0" translate="yes" xml:space="preserve">
          <source>You can split an array into several smaller arrays using &lt;code&gt;hsplit&lt;/code&gt;. You can specify either the number of equally shaped arrays to return or the columns &lt;em&gt;after&lt;/em&gt; which the division should occur.</source>
          <target state="translated">您可以使用 &lt;code&gt;hsplit&lt;/code&gt; 将数组拆分为几个较小的数组。您可以指定要返回的均等形状的数组数，也可以指定应&lt;em&gt;在&lt;/em&gt;其后进行划分的列。</target>
        </trans-unit>
        <trans-unit id="1737c7d22dd82b8a49628f21daf3b7f42db2f600" translate="yes" xml:space="preserve">
          <source>You can stack them vertically with &lt;code&gt;vstack&lt;/code&gt;:</source>
          <target state="translated">您可以使用 &lt;code&gt;vstack&lt;/code&gt; 垂直堆叠它们：</target>
        </trans-unit>
        <trans-unit id="359027a8fcd07ccbd6d51b7568b15e7088674160" translate="yes" xml:space="preserve">
          <source>You can sum the columns with:</source>
          <target state="translated">你可以用以下方法对各列进行加总。</target>
        </trans-unit>
        <trans-unit id="0e198e975b5d6fbfd387d7792f57d05cf99229ac" translate="yes" xml:space="preserve">
          <source>You can sum the rows with:</source>
          <target state="translated">你可以用以下方法求和行。</target>
        </trans-unit>
        <trans-unit id="0f8dcdc8f58eab438163b027ae1026e44d575bec" translate="yes" xml:space="preserve">
          <source>You can tell Numpy to use 64-bit BLAS/LAPACK libraries by setting the environment variable:</source>
          <target state="translated">你可以通过设置环境变量来告诉Numpy使用64位BLAS/LAPACK库。</target>
        </trans-unit>
        <trans-unit id="280726588ef5d2e646e74488ff178d73e061c790" translate="yes" xml:space="preserve">
          <source>You can test an installed NumPy by &lt;a href=&quot;#numpy.test&quot;&gt;&lt;code&gt;numpy.test&lt;/code&gt;&lt;/a&gt;, for example, To run NumPy&amp;rsquo;s full test suite, use the following:</source>
          <target state="translated">您可以通过&lt;a href=&quot;#numpy.test&quot;&gt; &lt;code&gt;numpy.test&lt;/code&gt; &lt;/a&gt;来测试已安装的NumPy ，例如，要运行NumPy的完整测试套件，请使用以下命令：</target>
        </trans-unit>
        <trans-unit id="8032e81ac40a6f0f1a73b54a1b7839b994061479" translate="yes" xml:space="preserve">
          <source>You can think of reshaping as first raveling the array (using the given index order), then inserting the elements from the raveled array into the new array using the same kind of index ordering as was used for the raveling.</source>
          <target state="translated">你可以认为重塑是首先对数组进行veling(使用给定的索引顺序),然后使用与veling相同的索引顺序从veling数组中插入元素到新数组中。</target>
        </trans-unit>
        <trans-unit id="e107150be46c6b7a2ed7f15bfecabb650a4f4c5d" translate="yes" xml:space="preserve">
          <source>You can transpose your array with &lt;code&gt;arr.transpose()&lt;/code&gt;.</source>
          <target state="translated">您可以使用 &lt;code&gt;arr.transpose()&lt;/code&gt; 来转置数组。</target>
        </trans-unit>
        <trans-unit id="39ce4271e318082bcec3fc33c2529d0ffba9e99a" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;flatten&lt;/code&gt; to flatten your array into a 1D array.</source>
          <target state="translated">您可以使用 &lt;code&gt;flatten&lt;/code&gt; 将数组展平为一维数组。</target>
        </trans-unit>
        <trans-unit id="2665766d0c0d10f2c049bfca0a5d2ba9b8e78f7c" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;np.expand_dims&lt;/code&gt; to add an axis at index position 1 with:</source>
          <target state="translated">您可以使用 &lt;code&gt;np.expand_dims&lt;/code&gt; 在索引位置1添加轴，方法是：</target>
        </trans-unit>
        <trans-unit id="3357dc9f6b41aea3aa6691cc31b9c4dd502c9267" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;np.load()&lt;/code&gt; to reconstruct your array.</source>
          <target state="translated">您可以使用 &lt;code&gt;np.load()&lt;/code&gt; 重建数组。</target>
        </trans-unit>
        <trans-unit id="918c24145c112510b6d979f3bb91283ee6145456" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;np.newaxis&lt;/code&gt; and &lt;code&gt;np.expand_dims&lt;/code&gt; to increase the dimensions of your existing array.</source>
          <target state="translated">您可以使用 &lt;code&gt;np.newaxis&lt;/code&gt; 和 &lt;code&gt;np.expand_dims&lt;/code&gt; 来增加现有数组的尺寸。</target>
        </trans-unit>
        <trans-unit id="582146c1d768f4228d4d49948b0b6a07949fe966" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;np.newaxis&lt;/code&gt; to add a new axis:</source>
          <target state="translated">您可以使用 &lt;code&gt;np.newaxis&lt;/code&gt; 添加新轴：</target>
        </trans-unit>
        <trans-unit id="ec69deeefd01eed5f7356a6b5d80438d8d1eb727" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;np.nonzero()&lt;/code&gt; to print the indices of elements that are, for example, less than 5:</source>
          <target state="translated">您可以使用 &lt;code&gt;np.nonzero()&lt;/code&gt; 打印小于5的元素的索引：</target>
        </trans-unit>
        <trans-unit id="1b3156b813541089f8aa43cd9e531951bf582e15" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;reshape()&lt;/code&gt; to reshape your array. For example, you can reshape this array to an array with three rows and two columns:</source>
          <target state="translated">您可以使用 &lt;code&gt;reshape()&lt;/code&gt; 重塑数组。例如，您可以将此数组重塑为具有三行两列的数组：</target>
        </trans-unit>
        <trans-unit id="6a1a526e2dfcefc7502bbfe7d5198a1cfd393800" translate="yes" xml:space="preserve">
          <source>You can use an initial value to compute the maximum of an empty slice, or to initialize it to a different value:</source>
          <target state="translated">您可以使用初始值来计算空片的最大值,或者将其初始化为不同的值。</target>
        </trans-unit>
        <trans-unit id="d3a7f9c80832526780727f107f820703eff6333a" translate="yes" xml:space="preserve">
          <source>You can use arbitrary &lt;code&gt;&amp;lt;routine name&amp;gt;&lt;/code&gt; for a given Fortran/C function. Then you have to specify &lt;code&gt;&amp;lt;actual Fortran/C routine name&amp;gt;&lt;/code&gt; with this statement.</source>
          <target state="translated">您可以为给定的Fortran / C函数使用任意的 &lt;code&gt;&amp;lt;routine name&amp;gt;&lt;/code&gt; 。然后，您必须使用此语句指定 &lt;code&gt;&amp;lt;actual Fortran/C routine name&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d0bef869069e40769f21f1de600d0fc6d747dfa" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;initial&lt;/code&gt; keyword argument to initialize the reduction with a different value, and &lt;code&gt;where&lt;/code&gt; to select specific elements to include:</source>
          <target state="translated">您可以使用 &lt;code&gt;initial&lt;/code&gt; 关键字参数以不同的值初始化归约，以及 &lt;code&gt;where&lt;/code&gt; 选择要包括的特定元素：</target>
        </trans-unit>
        <trans-unit id="23efac0b995d6e93a4035bff800bd00ab008b4c3" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;view&lt;/code&gt; method to create a new array object that looks at the same data as the original array (a &lt;em&gt;shallow copy&lt;/em&gt;).</source>
          <target state="translated">您可以使用 &lt;code&gt;view&lt;/code&gt; 方法创建一个新的数组对象，该对象查看与原始数组相同的数据（&lt;em&gt;浅表副本&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="91fa0d476f571316eb9194c7c7392edcc2d88959" translate="yes" xml:space="preserve">
          <source>You can use the code in &lt;code&gt;numpy.i&lt;/code&gt; to write your own typemaps. For example, if you had a five-dimensional array as a function argument, you could cut-and-paste the appropriate four-dimensional typemaps into your interface file. The modifications for the fourth dimension would be trivial.</source>
          <target state="translated">您可以使用 &lt;code&gt;numpy.i&lt;/code&gt; 中的代码编写自己的类型映射。例如，如果有一个五维数组作为函数参数，则可以将适当的四维类型映射剪切并粘贴到接口文件中。第四维的修改将是微不足道的。</target>
        </trans-unit>
        <trans-unit id="ee6cd9ad018d09a66b4b552d8d32fda830dc2b2b" translate="yes" xml:space="preserve">
          <source>You can visualize it this way:</source>
          <target state="translated">你可以这样想象。</target>
        </trans-unit>
        <trans-unit id="a25a3e7f332f999168a07a6595359aa81fadc1bd" translate="yes" xml:space="preserve">
          <source>You can visualize your array this way:</source>
          <target state="translated">你可以这样可视化你的数组。</target>
        </trans-unit>
        <trans-unit id="1ad9ee5f8f5d203d9af008ef1a29a03c8cf55b38" translate="yes" xml:space="preserve">
          <source>You can, of course, do more than just addition!</source>
          <target state="translated">当然,你可以做的不仅仅是加法!</target>
        </trans-unit>
        <trans-unit id="d315d7e61c47b4d65f430fab5f0eebfd96cdc410" translate="yes" xml:space="preserve">
          <source>You cannot build extension modules with this function, that is, using &lt;code&gt;-c&lt;/code&gt; is not allowed. Use &lt;code&gt;compile&lt;/code&gt; command instead</source>
          <target state="translated">您不能使用此功能构建扩展模块，即，不允许使用 &lt;code&gt;-c&lt;/code&gt; 。改用 &lt;code&gt;compile&lt;/code&gt; 命令</target>
        </trans-unit>
        <trans-unit id="bc82621089986951aa67f2243064c2c3dc5658df" translate="yes" xml:space="preserve">
          <source>You could also implement the reduce as follows:</source>
          <target state="translated">你也可以按以下方式实现reduce。</target>
        </trans-unit>
        <trans-unit id="ce58363fd85bb854ab09669ee6f5c2f4477e67d0" translate="yes" xml:space="preserve">
          <source>You could create a Pandas dataframe</source>
          <target state="translated">你可以创建一个Pandas数据框架</target>
        </trans-unit>
        <trans-unit id="f00a483a519c8313bd04c13a18b30d3839daafa4" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t have to contribute here to contribute to NumPy. You&amp;rsquo;ve contributed if you write a tutorial on your blog, create a YouTube video, or answer questions on Stack Overflow and other sites.</source>
          <target state="translated">您无需在这里做出贡献就可以为NumPy做出贡献。如果您在博客上写教程，创建YouTube视频或在Stack Overflow和其他网站上回答问题，则对您有所帮助。</target>
        </trans-unit>
        <trans-unit id="bc55f5f061c21889fbee03345308fce9d6cd1563" translate="yes" xml:space="preserve">
          <source>You have to use &lt;code&gt;--set-upstream&lt;/code&gt; for each new branch that you create.</source>
          <target state="translated">您必须为创建的每个新分支使用 &lt;code&gt;--set-upstream&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15d3a1e7db3b618eb32f6973e3b47069288f817e" translate="yes" xml:space="preserve">
          <source>You may already have git; check by typing &lt;code&gt;git --version&lt;/code&gt;. If it&amp;rsquo;s installed you&amp;rsquo;ll see some variation of &lt;code&gt;git version 2.11.0&lt;/code&gt;. If instead you see &lt;code&gt;command is not recognized&lt;/code&gt;, &lt;code&gt;command not
found&lt;/code&gt;, etc., &lt;a href=&quot;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&quot;&gt;install git&lt;/a&gt;.</source>
          <target state="translated">您可能已经有了git；通过输入 &lt;code&gt;git --version&lt;/code&gt; 进行检查。如果已安装，您将看到 &lt;code&gt;git version 2.11.0&lt;/code&gt; 一些变体。如果您看到 &lt;code&gt;command is not recognized&lt;/code&gt; ， &lt;code&gt;command not found&lt;/code&gt; ，等&lt;a href=&quot;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&quot;&gt;安装的git&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="751135e5dcfd64fe181d4032a7968478893af08b" translate="yes" xml:space="preserve">
          <source>You may also need to switch the dimensions of a matrix. This can happen when, for example, you have a model that expects a certain input shape that is different from your dataset. This is where the &lt;code&gt;reshape&lt;/code&gt; method can be useful. You simply need to pass in the new dimensions that you want for the matrix.</source>
          <target state="translated">您可能还需要切换矩阵的尺寸。例如，当您有一个模型期望某个输入形状与数据集不同时，就可能发生这种情况。这是 &lt;code&gt;reshape&lt;/code&gt; 方法可能有用的地方。您只需要传入矩阵所需的新尺寸即可。</target>
        </trans-unit>
        <trans-unit id="0c888e18d08dec9ae3d9fa98ee787e808245f065" translate="yes" xml:space="preserve">
          <source>You may also want to have easy access to all pull requests sent to the NumPy repository:</source>
          <target state="translated">你可能还想方便地访问所有发送到NumPy仓库的拉取请求。</target>
        </trans-unit>
        <trans-unit id="aa28650cb9c8a94633060dcb80be22a67fdaf333" translate="yes" xml:space="preserve">
          <source>You may also want to make sure that your editor of choice is used</source>
          <target state="translated">你可能还想确保你所选择的编辑器是用的是</target>
        </trans-unit>
        <trans-unit id="ed0cb574f3d373b89a7c21d2c97860f79643815e" translate="yes" xml:space="preserve">
          <source>You may also want to register low-level ufunc loops for your data-type so that an ndarray of your data-type can have math applied to it seamlessly. Registering a new loop with exactly the same arg_types signature, silently replaces any previously registered loops for that data-type.</source>
          <target state="translated">您可能还想为您的数据类型注册低级的ufunc循环,这样您的数据类型的ndarray可以无缝地应用数学。注册一个具有完全相同的 arg_types 签名的新循环,就会默默地替换之前为该数据类型注册的任何循环。</target>
        </trans-unit>
        <trans-unit id="7050d9d1fdb3bbac0ba025f332165a7313a2c595" translate="yes" xml:space="preserve">
          <source>You may have a correctly specified array dtype, but you need the array to have the opposite byte order in memory, and you want the dtype to match so the array values make sense. In this case you just do both of the previous operations:</source>
          <target state="translated">你可能有一个正确指定的数组dtype,但是你需要数组在内存中具有相反的字节顺序,你希望dtype匹配,这样数组的值才有意义。在这种情况下,你只需要做前面的两个操作。</target>
        </trans-unit>
        <trans-unit id="dc93d11c84f3cf0c80dc19552fbebbaec3165a7a" translate="yes" xml:space="preserve">
          <source>You may include some math:</source>
          <target state="translated">你可以包括一些数学。</target>
        </trans-unit>
        <trans-unit id="98e9f88bd4a89aebe54d98a979717885fd9d0412" translate="yes" xml:space="preserve">
          <source>You may use slicing to set values in the array, but (unlike lists) you can never grow the array. The size of the value to be set in &lt;code&gt;x[obj] = value&lt;/code&gt; must be (broadcastable) to the same shape as &lt;code&gt;x[obj]&lt;/code&gt;.</source>
          <target state="translated">您可以使用切片来设置数组中的值，但是（与列表不同）您永远无法增长数组。要在 &lt;code&gt;x[obj] = value&lt;/code&gt; 设置的值的大小必须（可广播）为与 &lt;code&gt;x[obj]&lt;/code&gt; 相同的形状。</target>
        </trans-unit>
        <trans-unit id="953ce32a13466f3c18c7daad4b9f88ea1d2c5786" translate="yes" xml:space="preserve">
          <source>You may want to allow builtin (and other user-defined) data-types to be cast automatically to your data-type. In order to make this possible, you must register a casting function with the data-type you want to be able to cast from. This requires writing low-level casting functions for each conversion you want to support and then registering these functions with the data-type descriptor. A low-level casting function has the signature.</source>
          <target state="translated">您可能希望允许内置的(和其他用户定义的)数据类型自动地投射到您的数据类型中。为了实现这一点,您必须在您希望能够投射的数据类型中注册一个投射函数。这就需要为您想支持的每个转换编写低级铸造函数,然后将这些函数注册到数据类型描述符中。一个低级铸造函数具有以下签名。</target>
        </trans-unit>
        <trans-unit id="c3e38d04c287113098b3a4cbd709911d025d4509" translate="yes" xml:space="preserve">
          <source>You may want to take a section of your array or specific array elements to use in further analysis or additional operations. To do that, you&amp;rsquo;ll need to subset, slice, and/or index your arrays.</source>
          <target state="translated">您可能需要将阵列或特定阵列元素的一部分用于进一步的分析或其他操作。为此，您需要对数组进行子集化，切片化和/或索引化。</target>
        </trans-unit>
        <trans-unit id="c09ca0043df118c7d46ae9f54f1af08b9fd4e55b" translate="yes" xml:space="preserve">
          <source>You might occasionally hear an array referred to as a &amp;ldquo;ndarray,&amp;rdquo; which is shorthand for &amp;ldquo;N-dimensional array.&amp;rdquo; An N-dimensional array is simply an array with any number of dimensions. You might also hear &lt;strong&gt;1-D&lt;/strong&gt;, or one-dimensional array, &lt;strong&gt;2-D&lt;/strong&gt;, or two-dimensional array, and so on. The NumPy &lt;code&gt;ndarray&lt;/code&gt; class is used to represent both matrices and vectors. A &lt;strong&gt;vector&lt;/strong&gt; is an array with a single dimension (there&amp;rsquo;s no difference between row and column vectors), while a &lt;strong&gt;matrix&lt;/strong&gt; refers to an array with two dimensions. For &lt;strong&gt;3-D&lt;/strong&gt; or higher dimensional arrays, the term &lt;strong&gt;tensor&lt;/strong&gt; is also commonly used.</source>
          <target state="translated">您可能偶尔会听到一个称为&amp;ldquo; ndarray&amp;rdquo;的数组，它是&amp;ldquo; N维数组&amp;rdquo;的简写。 N维数组只是具有任意数量维的数组。你也可以听到&lt;strong&gt;1-d &lt;/strong&gt;，或一维数组，&lt;strong&gt;2-d &lt;/strong&gt;，或二维数组，等等。 NumPy &lt;code&gt;ndarray&lt;/code&gt; 类用于表示矩阵和向量。甲&lt;strong&gt;矢量&lt;/strong&gt;是一维（有行和列矢量之间没有区别）的阵列，而&lt;strong&gt;矩阵&lt;/strong&gt;是指具有两个维度的阵列。对于&lt;strong&gt;3-D&lt;/strong&gt;或更高维的数组，也通常使用&lt;strong&gt;张量&lt;/strong&gt;这一术语。</target>
        </trans-unit>
        <trans-unit id="50b94c625d2f8ec709ed8784bad70dc63767a95c" translate="yes" xml:space="preserve">
          <source>You might run into some conflicts cherry picking here. These are resolved the same way as merge/rebase conflicts. Except here you can use &lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-blame.html&quot;&gt;git blame&lt;/a&gt; to see the difference between master and the backported branch to make sure nothing gets screwed up.</source>
          <target state="translated">您可能会在这里遇到一些冲突。这些问题的解决方法与合并/重新设置冲突相同。除了这里，您可以使用&lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-blame.html&quot;&gt;git blame&lt;/a&gt;来查看master和backported分支之间的区别，以确保没有搞砸。</target>
        </trans-unit>
        <trans-unit id="2b9946ceacebb206bc39fdb0ab02e7ae2fd4130a" translate="yes" xml:space="preserve">
          <source>You might want to do this if you need the data in memory to be a certain ordering. For example you might be writing the memory out to a file that needs a certain byte ordering.</source>
          <target state="translated">如果您需要内存中的数据有一定的顺序,您可能需要这样做。例如,您可能会将内存写到一个需要特定字节顺序的文件中。</target>
        </trans-unit>
        <trans-unit id="135c8b6e87a57f29b421c9f6622548e64c5c181b" translate="yes" xml:space="preserve">
          <source>You might well benefit from some aliases to common commands.</source>
          <target state="translated">你可能会从一些常用命令的别名中受益。</target>
        </trans-unit>
        <trans-unit id="cf6cadaf59551ba845503a005299c5c807cc4a0a" translate="yes" xml:space="preserve">
          <source>You must have shared-libraries of your code (no static libraries).</source>
          <target state="translated">你的代码必须有共享库(没有静态库)。</target>
        </trans-unit>
        <trans-unit id="77f72c989cc6f569ebbcaf3dc420d3b1a100bb4f" translate="yes" xml:space="preserve">
          <source>You need to do this only once. The instructions here are very similar to the instructions at &lt;a href=&quot;http://help.github.com/forking/&quot;&gt;http://help.github.com/forking/&lt;/a&gt; - please see that page for more detail. We&amp;rsquo;re repeating some of it here just to give the specifics for the &lt;a href=&quot;https://www.numpy.org&quot;&gt;NumPy&lt;/a&gt; project, and to suggest some default names.</source>
          <target state="translated">您只需要这样做一次。此处的说明与&lt;a href=&quot;http://help.github.com/forking/&quot;&gt;http://help.github.com/forking/&lt;/a&gt;上的说明非常相似-请参阅该页面以获取更多详细信息。我们在这里重复其中的一些只是为了提供&lt;a href=&quot;https://www.numpy.org&quot;&gt;NumPy&lt;/a&gt;项目的细节，并建议一些默认名称。</target>
        </trans-unit>
        <trans-unit id="59e40ad02adcd2c691240b758a6d5e9b9fe95316" translate="yes" xml:space="preserve">
          <source>You now have a copy of the code tree in the new &lt;code&gt;numpy&lt;/code&gt; directory. If this doesn&amp;rsquo;t work you can try the alternative read-only url:</source>
          <target state="translated">现在，您在新的 &lt;code&gt;numpy&lt;/code&gt; 目录中有了代码树的副本。如果这样不起作用，您可以尝试使用替代的只读url：</target>
        </trans-unit>
        <trans-unit id="7d82a2ce6cf2dc0d704ac1ff16739b75bf2b960c" translate="yes" xml:space="preserve">
          <source>You should be able to run this command assuming your search-path is set-up properly. This command will produce an extension module named addmodule.c in the current directory. This extension module can now be compiled and used from Python just like any other extension module.</source>
          <target state="translated">如果你的搜索路径设置正确,你应该可以运行这个命令。这个命令将在当前目录下产生一个名为 addmodule.c 的扩展模块。这个扩展模块现在可以像其他扩展模块一样在 Python 中编译和使用。</target>
        </trans-unit>
        <trans-unit id="f3568ae4f766e37d7c5effd4c8f672ee7bd5f8ce" translate="yes" xml:space="preserve">
          <source>You should note that, while included in the table for completeness, the &amp;lsquo;S&amp;rsquo;, &amp;lsquo;U&amp;rsquo;, and &amp;lsquo;V&amp;rsquo; types cannot be operated on by ufuncs. Also, note that on a 32-bit system the integer types may have different sizes, resulting in a slightly altered table.</source>
          <target state="translated">您应该注意，尽管出于完整性考虑，该表中包括了&amp;ldquo; S&amp;rdquo;，&amp;ldquo; U&amp;rdquo;和&amp;ldquo; V&amp;rdquo;类型，但它们不能由ufunc操作。另外，请注意，在32位系统上，整数类型可能具有不同的大小，从而导致表稍有变化。</target>
        </trans-unit>
        <trans-unit id="48e2566d73e02efbbc4b632bf5542ec3c76e7927" translate="yes" xml:space="preserve">
          <source>You should upload the wheels first, and the source formats last, to make sure that pip users don&amp;rsquo;t accidentally get a source install when they were expecting a binary wheel.</source>
          <target state="translated">您应该首先上传车轮，最后上传源格式，以确保pip用户在期望使用二进制车轮时不会意外获得源安装。</target>
        </trans-unit>
        <trans-unit id="3f94ae48a7f12ec74a463a4d1b3c1e155565e461" translate="yes" xml:space="preserve">
          <source>You should upload your public gpg key to github, so that the tag will appear &amp;ldquo;verified&amp;rdquo; there.</source>
          <target state="translated">您应该将您的公共gpg密钥上传到github，以便标记在此处显示为&amp;ldquo;已验证&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="ee5dfeab052b2a1f77650e75e63cd47d30c89d3e" translate="yes" xml:space="preserve">
          <source>You then need to configure your account to allow write access - see the &lt;code&gt;Generating SSH keys&lt;/code&gt; help on &lt;a href=&quot;https://help.github.com&quot;&gt;github help&lt;/a&gt;.</source>
          <target state="translated">然后，您需要配置您的帐户以允许写访问-请参阅&lt;a href=&quot;https://help.github.com&quot;&gt;github帮助&lt;/a&gt;上的&amp;ldquo; &lt;code&gt;Generating SSH keys&lt;/code&gt; 帮助。</target>
        </trans-unit>
        <trans-unit id="f357b2fe6ddb759961311e43e7970103d0b441f0" translate="yes" xml:space="preserve">
          <source>You will also need to add the tests directory in the configuration section of your setup.py:</source>
          <target state="translated">你还需要在setup.py的配置部分添加测试目录。</target>
        </trans-unit>
        <trans-unit id="e6a2d166af691548288af8a6c8b8422e8888e7ff" translate="yes" xml:space="preserve">
          <source>You will need Cython for building the binaries. Cython compiles the &lt;code&gt;.pyx&lt;/code&gt; files in the NumPy distribution to &lt;code&gt;.c&lt;/code&gt; files.</source>
          <target state="translated">您将需要Cython来构建二进制文件。Cython将NumPy发行版中的 &lt;code&gt;.pyx&lt;/code&gt; 文件编译为 &lt;code&gt;.c&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="60c5c8338d5ce273cc0c97b17a9b0c03f3cdfef9" translate="yes" xml:space="preserve">
          <source>You will need a personal access token &lt;a href=&quot;https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/&quot;&gt;https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/&lt;/a&gt; so that scripts can access the github NumPy repository.</source>
          <target state="translated">您将需要一个个人访问令牌&lt;a href=&quot;https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/&quot;&gt;https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/，&lt;/a&gt;以便脚本可以访问github NumPy存储库。</target>
        </trans-unit>
        <trans-unit id="5f2ad787d36eeaf353182285e56b32b7dd3f0a6d" translate="yes" xml:space="preserve">
          <source>You will need to have Latex installed for this, inclusive of support for Greek letters. For example, on Ubuntu xenial &lt;code&gt;texlive-lang-greek&lt;/code&gt; and &lt;code&gt;cm-super&lt;/code&gt; are needed. Also &lt;code&gt;latexmk&lt;/code&gt; is needed on non-Windows systems.</source>
          <target state="translated">为此，您将需要安装Latex，包括对希腊字母的支持。例如，在Ubuntu xenial上，需要 &lt;code&gt;texlive-lang-greek&lt;/code&gt; 和 &lt;code&gt;cm-super&lt;/code&gt; 。在非Windows系统上也需要 &lt;code&gt;latexmk&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="415b6aea89a48afb144b14ce0c80902b0ffbaf9f" translate="yes" xml:space="preserve">
          <source>You will need write permission for numpy-wheels in order to trigger wheel builds.</source>
          <target state="translated">你需要为numpy-wheels写权限才能触发轮子的构建。</target>
        </trans-unit>
        <trans-unit id="216a02cebcf00a1b32e4ce807da6752227f99dbc" translate="yes" xml:space="preserve">
          <source>You will, at some point, want to save your arrays to disk and load them back without having to re-run the code. Fortunately, there are several ways to save and load objects with NumPy. The ndarray objects can be saved to and loaded from the disk files with &lt;code&gt;loadtxt&lt;/code&gt; and &lt;code&gt;savetxt&lt;/code&gt; functions that handle normal text files, &lt;code&gt;load&lt;/code&gt; and &lt;code&gt;save&lt;/code&gt; functions that handle NumPy binary files with a &lt;strong&gt;.npy&lt;/strong&gt; file extension, and a &lt;code&gt;savez&lt;/code&gt; function that handles NumPy files with a &lt;strong&gt;.npz&lt;/strong&gt; file extension.</source>
          <target state="translated">在某些时候，您将需要将阵列保存到磁盘并重新加载它们，而不必重新运行代码。幸运的是，有几种方法可以使用NumPy保存和加载对象。可以使用处理普通文本文件的 &lt;code&gt;loadtxt&lt;/code&gt; 和 &lt;code&gt;savetxt&lt;/code&gt; 函数，使用&lt;strong&gt;.npy&lt;/strong&gt;文件扩展名处理NumPy二进制文件的 &lt;code&gt;load&lt;/code&gt; 和 &lt;code&gt;save&lt;/code&gt; 函数以及使用&lt;strong&gt;.txt&lt;/strong&gt;处理文件的NumPy文件的 &lt;code&gt;savez&lt;/code&gt; 函数将ndarray对象保存到磁盘文件和从磁盘文件加载。&lt;strong&gt;.npz&lt;/strong&gt;文件扩展。</target>
        </trans-unit>
        <trans-unit id="6a6d9092d1f48614c6d68d844ced8c5497144034" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll need to know a bit of Python. For a refresher, see the &lt;a href=&quot;https://docs.python.org/tutorial/&quot;&gt;Python tutorial&lt;/a&gt;.</source>
          <target state="translated">您需要了解一些Python。有关复习，请参阅&lt;a href=&quot;https://docs.python.org/tutorial/&quot;&gt;Python教程&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="323b6e9b82b85a9340155e757b5a4d952e6a9fef" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll see</source>
          <target state="translated">你会看到的</target>
        </trans-unit>
        <trans-unit id="a8b800928800241ee158e1f01bc54f54d2100ae2" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll see something like:</source>
          <target state="translated">您会看到类似以下内容的内容：</target>
        </trans-unit>
        <trans-unit id="3b7b74c10de119d207f3d55f6aca0d065a7b12c2" translate="yes" xml:space="preserve">
          <source>Your NumPy version</source>
          <target state="translated">您的NumPy版本</target>
        </trans-unit>
        <trans-unit id="2af06179f1b8740f992cc77cae66af896533cdbc" translate="yes" xml:space="preserve">
          <source>Your Python version</source>
          <target state="translated">您的Python版本</target>
        </trans-unit>
        <trans-unit id="940843b0141e7785b2af30902bf00aeaed17ff7c" translate="yes" xml:space="preserve">
          <source>Your array has 2 axes. The first axis has a length of 2 and the second axis has a length of 3.</source>
          <target state="translated">你的数组有2个轴,第一个轴的长度是2,第二个轴的长度是3。第一个轴的长度为2,第二个轴的长度为3。</target>
        </trans-unit>
        <trans-unit id="65606e148ee4a2cdae9cd01bdb2428ea4938c95f" translate="yes" xml:space="preserve">
          <source>Your collaborators can then commit directly into that repo with the usual:</source>
          <target state="translated">然后,你的合作者可以直接提交到该repo中,用通常。</target>
        </trans-unit>
        <trans-unit id="79b0006a3de24b4b7dc6ff2cd7d352f84f3e4b76" translate="yes" xml:space="preserve">
          <source>Your config file should now look something like (from &lt;code&gt;$ cat .git/config&lt;/code&gt;):</source>
          <target state="translated">您的配置文件现在应该看起来像（从 &lt;code&gt;$ cat .git/config&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="521de696e9a3419886283bc12ee7028ed6d2ec64" translate="yes" xml:space="preserve">
          <source>Your data and dtype endianness don&amp;rsquo;t match, and you want to change the dtype so that it matches the data.</source>
          <target state="translated">您的数据和dtype的字节序不匹配，并且您想更改dtype使其与数据匹配。</target>
        </trans-unit>
        <trans-unit id="5c8e64747c17b40a4b5d00783d37da934474788f" translate="yes" xml:space="preserve">
          <source>Your data and dtype endianness don&amp;rsquo;t match, and you want to swap the data so that they match the dtype</source>
          <target state="translated">您的数据和dtype的字节序不匹配，并且您想交换数据以使其与dtype匹配</target>
        </trans-unit>
        <trans-unit id="5ed0a2c588bf7e44fda3064d79e5f46f92a82610" translate="yes" xml:space="preserve">
          <source>Your data and dtype endianness match, but you want the data swapped and the dtype to reflect this</source>
          <target state="translated">您的数据和dtype的endianness匹配,但您希望数据交换和dtype反映这一点</target>
        </trans-unit>
        <trans-unit id="0d862425eb9ba0518cd3dfc31acb1f1ed84424a8" translate="yes" xml:space="preserve">
          <source>Your frustrations using our documents are our best guide to what needs fixing.</source>
          <target state="translated">您在使用我们的文件时遇到的挫折是我们最好的指南,可以帮助您了解需要解决的问题。</target>
        </trans-unit>
        <trans-unit id="2a7febce3ef062310b05f44f84bd0843f7e336a1" translate="yes" xml:space="preserve">
          <source>Your personal &lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt; configurations are saved in the &lt;code&gt;.gitconfig&lt;/code&gt; file in your home directory. Here is an example &lt;code&gt;.gitconfig&lt;/code&gt; file:</source>
          <target state="translated">您的个人&lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt;配置将保存在主目录的 &lt;code&gt;.gitconfig&lt;/code&gt; 文件中。这是一个示例 &lt;code&gt;.gitconfig&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="909f99a779adb66a76fc53ab56c7dd1caf35d0fd" translate="yes" xml:space="preserve">
          <source>Z</source>
          <target state="translated">Z</target>
        </trans-unit>
        <trans-unit id="1e16810e3242991af56a001ed6a884d632c200f8" translate="yes" xml:space="preserve">
          <source>Zero matrix of given shape, dtype, and order.</source>
          <target state="translated">给定形状、dtype和顺序的零矩阵。</target>
        </trans-unit>
        <trans-unit id="e45e696eb3d4f02d39791369c3d3958a76ab90d1" translate="yes" xml:space="preserve">
          <source>Zero matrix.</source>
          <target state="translated">零矩阵。</target>
        </trans-unit>
        <trans-unit id="d5dc63474aa23584e657281af8b854e50d810b87" translate="yes" xml:space="preserve">
          <source>Zero padding. Outside bounds values will be 0.</source>
          <target state="translated">零填充。外界值将为0。</target>
        </trans-unit>
        <trans-unit id="dc9379a72db3a8937472e62bd1e9326e04e14e35" translate="yes" xml:space="preserve">
          <source>Zero-padding, analogously with &lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt;&lt;code&gt;ifft&lt;/code&gt;&lt;/a&gt;, is performed by appending zeros to the input along the specified dimension. Although this is the common approach, it might lead to surprising results. If another form of zero padding is desired, it must be performed before &lt;a href=&quot;#numpy.fft.ifft2&quot;&gt;&lt;code&gt;ifft2&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">类似于&lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt; &lt;code&gt;ifft&lt;/code&gt; &lt;/a&gt;，零填充是通过沿指定维度在输入上附加零来执行的。尽管这是常见的方法，但可能会导致令人惊讶的结果。如果需要另一种形式的零填充，则必须在&lt;a href=&quot;#numpy.fft.ifft2&quot;&gt; &lt;code&gt;ifft2&lt;/code&gt; &lt;/a&gt;之前执行。</target>
        </trans-unit>
        <trans-unit id="64a64c98f6885c75110c036526d556b9a4c44be0" translate="yes" xml:space="preserve">
          <source>Zero-padding, analogously with &lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt;&lt;code&gt;ifft&lt;/code&gt;&lt;/a&gt;, is performed by appending zeros to the input along the specified dimension. Although this is the common approach, it might lead to surprising results. If another form of zero padding is desired, it must be performed before &lt;a href=&quot;#numpy.fft.ifftn&quot;&gt;&lt;code&gt;ifftn&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">类似于&lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt; &lt;code&gt;ifft&lt;/code&gt; &lt;/a&gt;，零填充是通过沿指定维度在输入上附加零来执行的。尽管这是常见的方法，但可能会导致令人惊讶的结果。如果需要另一种形式的零填充，则必须在&lt;a href=&quot;#numpy.fft.ifftn&quot;&gt; &lt;code&gt;ifftn&lt;/code&gt; &lt;/a&gt;之前执行。</target>
        </trans-unit>
        <trans-unit id="3bf3f71c4d3d91d72b09100088bc05f6648939f4" translate="yes" xml:space="preserve">
          <source>ZeroDivisionError</source>
          <target state="translated">ZeroDivisionError</target>
        </trans-unit>
        <trans-unit id="517f56a81e423e64373bd116eb0759a041c8ad2f" translate="yes" xml:space="preserve">
          <source>Zeros are returned for slices that are all-NaN or empty.</source>
          <target state="translated">对于全NaN或空的片子,会返回0。</target>
        </trans-unit>
        <trans-unit id="acacd887197bd2babb7be61e73a56d1f99561e0f" translate="yes" xml:space="preserve">
          <source>Zipf, G. K., &amp;ldquo;Selected Studies of the Principle of Relative Frequency in Language,&amp;rdquo; Cambridge, MA: Harvard Univ. Press, 1932.</source>
          <target state="translated">Zipf，GK，&amp;ldquo;语言中相对频率原理的精选研究&amp;rdquo;，马萨诸塞州剑桥：哈佛大学。出版社，1932年。</target>
        </trans-unit>
        <trans-unit id="ed86773f64d57f9b3c7ee4020ed0f191241f3769" translate="yes" xml:space="preserve">
          <source>[ 1678 AD, 2262 AD]</source>
          <target state="translated">[公元1678年，公元2262年]</target>
        </trans-unit>
        <trans-unit id="402b4dc5670a23bc318ab3cb00cdc7fa9f64de7f" translate="yes" xml:space="preserve">
          <source>[ 1969 AD, 1970 AD]</source>
          <target state="translated">[1969年，1970年]</target>
        </trans-unit>
        <trans-unit id="bd183430653087be5ae12502c45fc000d3da0d92" translate="yes" xml:space="preserve">
          <source>[ 2.9e8 BC, 2.9e8 AD]</source>
          <target state="translated">[公元前2.9e8，公元2.9e8]</target>
        </trans-unit>
        <trans-unit id="dc7f3e791b46510c11bbde8e0bb893651cf79bee" translate="yes" xml:space="preserve">
          <source>[1.0e15 BC, 1.0e15 AD]</source>
          <target state="translated">[公元前1.0e15，公元1.0e15]</target>
        </trans-unit>
        <trans-unit id="06a7557ae8ce0cfbe48cae36c42a5043941673e5" translate="yes" xml:space="preserve">
          <source>[1.7e13 BC, 1.7e13 AD]</source>
          <target state="translated">[公元前1.7e13，公元1.7e13]</target>
        </trans-unit>
        <trans-unit id="d122eae6bae0b58d08b1fd88854423fb5b4631e6" translate="yes" xml:space="preserve">
          <source>[1.7e17 BC, 1.7e17 AD]</source>
          <target state="translated">[公元前1.7e17，公元1.7e17]</target>
        </trans-unit>
        <trans-unit id="af9678a88e0692bf413856f430540a50579b7921" translate="yes" xml:space="preserve">
          <source>[2.5e16 BC, 2.5e16 AD]</source>
          <target state="translated">[2.5e16 BC，2.5e16 AD]</target>
        </trans-unit>
        <trans-unit id="fb54cef9abe0ffb09a025ee28bfe888680b86ee0" translate="yes" xml:space="preserve">
          <source>[2.9e11 BC, 2.9e11 AD]</source>
          <target state="translated">[公元前2.9e11，公元2.9e11]</target>
        </trans-unit>
        <trans-unit id="9b1e4a9e31badd5faa858bd32af6c4bab33690b0" translate="yes" xml:space="preserve">
          <source>[290301 BC, 294241 AD]</source>
          <target state="translated">[公元前290301年，公元294241年]</target>
        </trans-unit>
        <trans-unit id="2212219fa92d0d55a2e83f844d81d7dc4a36dd7d" translate="yes" xml:space="preserve">
          <source>[7.6e17 BC, 7.6e17 AD]</source>
          <target state="translated">[公元前7.6e17，公元7.6e17]</target>
        </trans-unit>
        <trans-unit id="7855213bc11a8db7fc6daa3f131f06c9977a3960" translate="yes" xml:space="preserve">
          <source>[9.2e18 BC, 9.2e18 AD]</source>
          <target state="translated">[公元前9.2e18年，公元9.2e18]</target>
        </trans-unit>
        <trans-unit id="faf24ac10ab74f225b601311df4355d76763fa97" translate="yes" xml:space="preserve">
          <source>[CT]</source>
          <target state="translated">[CT]</target>
        </trans-unit>
        <trans-unit id="7d2f4bdb1926f2cbbdd65bcf6b74603f5acdf8c8" translate="yes" xml:space="preserve">
          <source>[G]</source>
          <target state="translated">[G]</target>
        </trans-unit>
        <trans-unit id="3d6c6c6111149819e43b6089c9a7b9c8a2431938" translate="yes" xml:space="preserve">
          <source>[NR]</source>
          <target state="translated">[NR]</target>
        </trans-unit>
        <trans-unit id="1b8941d3b1d081473898f4b2e4a8ff850cc6de82" translate="yes" xml:space="preserve">
          <source>[R5cc1f1f25381-1]</source>
          <target state="translated">[R5cc1f1f25381-1]</target>
        </trans-unit>
        <trans-unit id="0c4d5826769047e816879e0f7216ecf388ea499b" translate="yes" xml:space="preserve">
          <source>[Re860718f5533-1]</source>
          <target state="translated">[Re860718f5533-1]</target>
        </trans-unit>
        <trans-unit id="6b6f9491cb308db36a45d25a8dcf1db55932e083" translate="yes" xml:space="preserve">
          <source>[WRW]</source>
          <target state="translated">[WRW]</target>
        </trans-unit>
        <trans-unit id="ff244a354c248341a7c0c68812d2513231ccfc0a" translate="yes" xml:space="preserve">
          <source>__abs__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__abs __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="4c4b5bf4744a7442f73005c1fe439a869d4912cf" translate="yes" xml:space="preserve">
          <source>__add__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__add __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="6678ac2d33e0e869b460789a44fcc1898b470174" translate="yes" xml:space="preserve">
          <source>__and__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__and __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="0d11e11f5da3e629ed021ca7c69b3e1560e48dc7" translate="yes" xml:space="preserve">
          <source>__array__() (numpy.class method)</source>
          <target state="translated">__array __（）（numpy.class方法）</target>
        </trans-unit>
        <trans-unit id="3897c72013a6887de9a1de9869c3e948fd9696d2" translate="yes" xml:space="preserve">
          <source>__array_data__</source>
          <target state="translated">__array_data__</target>
        </trans-unit>
        <trans-unit id="81f5d0f249cae6e54a5453d7972fcd0943accd0e" translate="yes" xml:space="preserve">
          <source>__array_descr__</source>
          <target state="translated">__array_descr__</target>
        </trans-unit>
        <trans-unit id="71c1674de3ef7b1b98cc9d6fe1997049bf59be3a" translate="yes" xml:space="preserve">
          <source>__array_finalize__ (ndarray attribute)</source>
          <target state="translated">__array_finalize __（ndarray属性）</target>
        </trans-unit>
        <trans-unit id="8f36773cdfd15c6cb88da726f7af67270582d5e8" translate="yes" xml:space="preserve">
          <source>__array_finalize__() (numpy.class method)</source>
          <target state="translated">__array_finalize __（）（numpy.class方法）</target>
        </trans-unit>
        <trans-unit id="7ea410ff45968c207a24de940975e7ab4957e592" translate="yes" xml:space="preserve">
          <source>__array_function__() (numpy.class method)</source>
          <target state="translated">__array_function __（）（numpy.class方法）</target>
        </trans-unit>
        <trans-unit id="c0a201183273449f8bd82be2d062468aa25df323" translate="yes" xml:space="preserve">
          <source>__array_interface__</source>
          <target state="translated">__array_interface__</target>
        </trans-unit>
        <trans-unit id="5e8cd5fbc938886a9b24f4ad582e1858af233bd3" translate="yes" xml:space="preserve">
          <source>__array_interface__ (built-in variable)</source>
          <target state="translated">__array_interface __（内置变量）</target>
        </trans-unit>
        <trans-unit id="0a9ff3eb9a1e79e8a4cdf02304244a5327adcb47" translate="yes" xml:space="preserve">
          <source>__array_mask__</source>
          <target state="translated">__array_mask__</target>
        </trans-unit>
        <trans-unit id="ac7e7fcdcffb075d0e09e72d92d910d4b9351cdb" translate="yes" xml:space="preserve">
          <source>__array_offset__</source>
          <target state="translated">__array_offset__</target>
        </trans-unit>
        <trans-unit id="9c741cad077927490ce59ac67b73a774e6f89174" translate="yes" xml:space="preserve">
          <source>__array_prepare__() (numpy.class method)</source>
          <target state="translated">__array_prepare __（）（numpy.class方法）</target>
        </trans-unit>
        <trans-unit id="706e28500d6f6f91b4ccffa7a37375935df27ebf" translate="yes" xml:space="preserve">
          <source>__array_priority__ (ndarray attribute)</source>
          <target state="translated">__array_priority __（ndarray属性）</target>
        </trans-unit>
        <trans-unit id="238f299c155456fe6a848580f0ef9d3e6bb2a8de" translate="yes" xml:space="preserve">
          <source>__array_shape__</source>
          <target state="translated">__array_shape__</target>
        </trans-unit>
        <trans-unit id="2f3678a5595fd628d8dfae6d631c1ae1fb6ef8da" translate="yes" xml:space="preserve">
          <source>__array_strides__</source>
          <target state="translated">__array_strides__</target>
        </trans-unit>
        <trans-unit id="a6b58a1617079ec0d71beb11f7ad2a32fbc5e31b" translate="yes" xml:space="preserve">
          <source>__array_struct__ (C variable)</source>
          <target state="translated">__array_struct__（C变量）</target>
        </trans-unit>
        <trans-unit id="aa0ad955aed8601e1764fbffe3d43f4a00fe14f0" translate="yes" xml:space="preserve">
          <source>__array_typestr__</source>
          <target state="translated">__array_typestr__</target>
        </trans-unit>
        <trans-unit id="fe002ec6f40f1ef39f555bc8098b8ae17664e460" translate="yes" xml:space="preserve">
          <source>__array_ufunc__() (numpy.class method)</source>
          <target state="translated">__array_ufunc __（）（numpy.class方法）</target>
        </trans-unit>
        <trans-unit id="9314342a46890bf2effc2cd0ca7ae9d86fbab2ab" translate="yes" xml:space="preserve">
          <source>__array_wrap__ (ndarray attribute)</source>
          <target state="translated">__array_wrap__（ndarray属性）</target>
        </trans-unit>
        <trans-unit id="7119e49dd617e61e14c792d40e73cfaea33b58e9" translate="yes" xml:space="preserve">
          <source>__array_wrap__() (numpy.class method)</source>
          <target state="translated">__array_wrap __（）（numpy.class方法）</target>
        </trans-unit>
        <trans-unit id="7db20120a72ce06d646b6c6dcd5425b26c3e5960" translate="yes" xml:space="preserve">
          <source>__bool__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__bool __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="742d6d7ad7e950adf0baeb3840475b9697d5247f" translate="yes" xml:space="preserve">
          <source>__call__() (numpy.errstate method)</source>
          <target state="translated">__call __（）（numpy.errstate方法）</target>
        </trans-unit>
        <trans-unit id="42f6ad5a08ff5c43656e00a478c5d881e4d9bde2" translate="yes" xml:space="preserve">
          <source>__complex__() (numpy.ndarray method)</source>
          <target state="translated">__complex __（）（numpy.ndarray方法）</target>
        </trans-unit>
        <trans-unit id="61d9f3d63c64e0c9246b6b0759acaa297a1b63f8" translate="yes" xml:space="preserve">
          <source>__contains__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__contains __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="21b97c4598a5c0f08b4e43cb110d60055e0a0d83" translate="yes" xml:space="preserve">
          <source>__copy__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__copy __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="76a34abc5b8589cb006e5abec3e19f45834f3e0e" translate="yes" xml:space="preserve">
          <source>__deepcopy__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__deepcopy __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="a4a0a2759a904d07b0a7f6382ee4cb135c42fa55" translate="yes" xml:space="preserve">
          <source>__delitem__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__delitem __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="e5f06b8d2741eb0c9a9ecfd96f7b29f8d327af99" translate="yes" xml:space="preserve">
          <source>__div__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__div __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="6b169bb83bc3ef64127b9f9631edac78b95e2d9c" translate="yes" xml:space="preserve">
          <source>__divmod__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__divmod __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="1071dfb4883bb317f4e15ad7285cdfb11590aa50" translate="yes" xml:space="preserve">
          <source>__eq__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__eq __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="4c6cd4c9dd6a2fae960042d008df97b84cc1a6b1" translate="yes" xml:space="preserve">
          <source>__float__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__float __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="ca2adcf577bd06d86d393f4b6f82348f709b3f8e" translate="yes" xml:space="preserve">
          <source>__floordiv__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__floordiv __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="2e6e6576e79eed92b062f178480f9c2e44357d26" translate="yes" xml:space="preserve">
          <source>__ge__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__ge __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="80c999b96cc2bf42febefc3267bbe623bb9a52fc" translate="yes" xml:space="preserve">
          <source>__getitem__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__getitem __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="0e67304b2966a9b24180761c372d7eb62eeca03d" translate="yes" xml:space="preserve">
          <source>__getstate__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__getstate __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="ee5a3430f0fc150d7881667230bccd9504f8ee6a" translate="yes" xml:space="preserve">
          <source>__gt__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__gt __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="204154f473ba4a7a760c5ad53c9c1bfd3f780935" translate="yes" xml:space="preserve">
          <source>__iadd__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__iadd __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="44c25ee9237277db9c3dc3837dd82885f32e9fc8" translate="yes" xml:space="preserve">
          <source>__iand__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__iand __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="f4b055ab67a5399205f992368c23e87a148e6bbc" translate="yes" xml:space="preserve">
          <source>__idiv__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__idiv __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="12b013739c6f2ab8fb38abdf48c556c9bdf72b74" translate="yes" xml:space="preserve">
          <source>__ifloordiv__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__ifloordiv __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="2d0a20aaef82c1babb5e3f281fe1652445774c47" translate="yes" xml:space="preserve">
          <source>__ilshift__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__ilshift __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="3ca6ec10e7e5c3ac6eed2fb2cd7983e511913fe0" translate="yes" xml:space="preserve">
          <source>__imod__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__imod __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="8dcfdd1ea7808e804d0d2de3b684e5a40b37c73f" translate="yes" xml:space="preserve">
          <source>__imul__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__imul __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="f3179c7957be9626d543af54227ef33447db811f" translate="yes" xml:space="preserve">
          <source>__int__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__int __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="0dcc5bfffa92fe686ee5601d0a55f2cbe2e7e00b" translate="yes" xml:space="preserve">
          <source>__invert__() (numpy.ndarray method)</source>
          <target state="translated">__invert __（）（numpy.ndarray方法）</target>
        </trans-unit>
        <trans-unit id="f323a0176a30dc3806b3599ffb801b61f49118fc" translate="yes" xml:space="preserve">
          <source>__ior__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__ior __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="a8a6fd1b32704d7df8f2c671be50224b0ddfd417" translate="yes" xml:space="preserve">
          <source>__ipow__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__ipow __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="ac284929d6d2841bfb35a4fc881ba98436475838" translate="yes" xml:space="preserve">
          <source>__irshift__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__irshift __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="bb8d45f2d79b80bca777b8b65a1856160e35d3a7" translate="yes" xml:space="preserve">
          <source>__isub__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__isub __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="6b97aded6fce6da14ed1886d654538a1d7346166" translate="yes" xml:space="preserve">
          <source>__itruediv__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__itruediv __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="f20873859cc72218063eb2e99f7b3c635fc1ccd7" translate="yes" xml:space="preserve">
          <source>__ixor__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__ixor __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="3ab3b0671db0345ffc637119c88027677042a2e0" translate="yes" xml:space="preserve">
          <source>__le__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__le __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="a9db981374fe27550138235e60768f22b6087d62" translate="yes" xml:space="preserve">
          <source>__len__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__len __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="c8f86a204e8f36c3b1605f234d01078ebd148b7d" translate="yes" xml:space="preserve">
          <source>__lshift__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__lshift __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="8e27c1e077f869be7cdb6f17caf4c2c4a42f50ef" translate="yes" xml:space="preserve">
          <source>__lt__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__lt __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="8c72867d9219621c6d7aebcdaf258be66c2e7606" translate="yes" xml:space="preserve">
          <source>__matmul__() (numpy.ndarray method)</source>
          <target state="translated">__matmul __（）（numpy.ndarray方法）</target>
        </trans-unit>
        <trans-unit id="46bca0791556e71757947e4ae551298c9d9d302b" translate="yes" xml:space="preserve">
          <source>__mod__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__mod __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="44df3a889306e1d1dad4c705432c35ffa9dc253c" translate="yes" xml:space="preserve">
          <source>__mul__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__mul __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="0edd530853ee5c7448a61802ef2a7bb2f316160d" translate="yes" xml:space="preserve">
          <source>__ne__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__ne __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="f5d965082672e1ab3fccd5a35532509bcb204b3d" translate="yes" xml:space="preserve">
          <source>__neg__() (numpy.ndarray method)</source>
          <target state="translated">__neg __（）（numpy.ndarray方法）</target>
        </trans-unit>
        <trans-unit id="874bc1e2d2304a0c375c91f465e9606decc5489c" translate="yes" xml:space="preserve">
          <source>__new__() (numpy.ma.MaskedArray static method)</source>
          <target state="translated">__new __（）（numpy.ma.MaskedArray静态方法）</target>
        </trans-unit>
        <trans-unit id="c2bc0efd8d9d9a7c9de047094bcea8ea3b6016f4" translate="yes" xml:space="preserve">
          <source>__or__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__or __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="b2c492f3eb1f3fb77459cd594dbb68e47052569d" translate="yes" xml:space="preserve">
          <source>__pos__() (numpy.ndarray method)</source>
          <target state="translated">__pos __（）（numpy.ndarray方法）</target>
        </trans-unit>
        <trans-unit id="56ed35d1abe325c67368c19e29ec90342247a382" translate="yes" xml:space="preserve">
          <source>__pow__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__pow __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="7d5fff8a498554189fe8f227b7b8fdd3ac26b033" translate="yes" xml:space="preserve">
          <source>__radd__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__radd __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="d47b34763f0ab824f7faa9c38739259d9776ba95" translate="yes" xml:space="preserve">
          <source>__rand__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rand __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="45e87f9e2f2c5840cec279964e71d7abfcf560d0" translate="yes" xml:space="preserve">
          <source>__rdivmod__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rdivmod __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="e8f51120e253e84c609118bd38acc582cef0a098" translate="yes" xml:space="preserve">
          <source>__reduce__() (numpy.dtype method)</source>
          <target state="translated">__reduce __（）（numpy.dtype方法）</target>
        </trans-unit>
        <trans-unit id="4e0aa284749252147e3e1f6388777dc57b0de5d9" translate="yes" xml:space="preserve">
          <source>__repr__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__repr __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="28754dd8ed99e36f8650c5c8c3991d308f1c4f57" translate="yes" xml:space="preserve">
          <source>__rfloordiv__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rfloordiv __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="0f7b8ba6a95412da6684ff730f2a3413dbf233cc" translate="yes" xml:space="preserve">
          <source>__rlshift__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rlshift __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="6f4d58b4bb7931bfa7e3af8c43dfc1b22589f7d8" translate="yes" xml:space="preserve">
          <source>__rmod__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rmod __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="5e22a0ceb1f0d9fc1df49d219bf644ece8f8cba1" translate="yes" xml:space="preserve">
          <source>__rmul__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rmul __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="b38ea4e037bea2f469a4a53c5b3edfaaeafd86bb" translate="yes" xml:space="preserve">
          <source>__ror__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__ror __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="e32731356df615e055546fab7e9b727d861d2bfe" translate="yes" xml:space="preserve">
          <source>__rpow__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rpow __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="64f00839bb558300f64207e3b84e7e892be7e23e" translate="yes" xml:space="preserve">
          <source>__rrshift__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rrshift __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="3d012262378a0000ebe51f98742e1a14c7546a2c" translate="yes" xml:space="preserve">
          <source>__rshift__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rshift __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="ee7f010f4d4bd19b27dc403b07e4628d9460acd3" translate="yes" xml:space="preserve">
          <source>__rsub__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rsub __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="fc7e68badecf4937067508042a8240feaafc178f" translate="yes" xml:space="preserve">
          <source>__rtruediv__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rtruediv __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="d7160c7d2860a0049df61a7a8ae4cfa33f241764" translate="yes" xml:space="preserve">
          <source>__rxor__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rxor __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="f4912ee41d6cd83bd9e53dccd3c74fb2aa6c5cfd" translate="yes" xml:space="preserve">
          <source>__setitem__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__setitem __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="cb35b9d3e836a4e0fedf974ad62a85aab0abb72c" translate="yes" xml:space="preserve">
          <source>__setmask__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__setmask __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="91fcd479e5d18721e18563cb76b63c6dc180b643" translate="yes" xml:space="preserve">
          <source>__setstate__() (numpy.dtype method)</source>
          <target state="translated">__setstate __（）（numpy.dtype方法）</target>
        </trans-unit>
        <trans-unit id="9d3cb50b03eb52dbbae73b53cf1916f25adaaad8" translate="yes" xml:space="preserve">
          <source>__str__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__str __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="2b414bde8ee1935d20f07da3bcb2184daa7ebeef" translate="yes" xml:space="preserve">
          <source>__sub__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__sub __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="140c3cde666eea556cdfd3011d31cb407d2266af" translate="yes" xml:space="preserve">
          <source>__truediv__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__truediv __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="07b1823cae9ddb58ae30758105a74c411063c5f0" translate="yes" xml:space="preserve">
          <source>__xor__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__xor __（）（numpy.ma.MaskedArray方法）</target>
        </trans-unit>
        <trans-unit id="0edc0e5b0babe606fdece95d661f1a734b04a296" translate="yes" xml:space="preserve">
          <source>a (C variable)</source>
          <target state="translated">甲</target>
        </trans-unit>
        <trans-unit id="96401488135b817c2f1747197a83525ae296049e" translate="yes" xml:space="preserve">
          <source>a (fixed) payment, &lt;a href=&quot;numpy.pmt#numpy.pmt&quot;&gt;&lt;code&gt;pmt&lt;/code&gt;&lt;/a&gt;, paid either</source>
          <target state="translated">（固定）付款&lt;a href=&quot;numpy.pmt#numpy.pmt&quot;&gt; &lt;code&gt;pmt&lt;/code&gt; &lt;/a&gt;支付</target>
        </trans-unit>
        <trans-unit id="d5166cddbf23a08b5074c2edc9aec3c68a5f3663" translate="yes" xml:space="preserve">
          <source>a 1-D array of 624 unsigned integer keys.</source>
          <target state="translated">624个无符号整数键的一维数组。</target>
        </trans-unit>
        <trans-unit id="e95c05fdf3a7626457c027e91f7b377539d00b22" translate="yes" xml:space="preserve">
          <source>a 1-D array of 624 unsigned integers &lt;code&gt;keys&lt;/code&gt;.</source>
          <target state="translated">由624个无符号整数 &lt;code&gt;keys&lt;/code&gt; 的一维数组。</target>
        </trans-unit>
        <trans-unit id="72fdfe6550961319f36cdd5e343cde12faf15445" translate="yes" xml:space="preserve">
          <source>a 1-d view of scalar</source>
          <target state="translated">标量的一维视图</target>
        </trans-unit>
        <trans-unit id="74f70982e8ed106bd95f08838212248bb41b2355" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;numpy.char.chararray#numpy.char.chararray&quot;&gt;&lt;code&gt;chararray&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">一个&lt;a href=&quot;numpy.char.chararray#numpy.char.chararray&quot;&gt; &lt;code&gt;chararray&lt;/code&gt; &lt;/a&gt;，</target>
        </trans-unit>
        <trans-unit id="b4f1e806df8cd0cd7af0f77e9147beec2d0aae5a" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;numpy.chararray#numpy.chararray&quot;&gt;&lt;code&gt;chararray&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">一个&lt;a href=&quot;numpy.chararray#numpy.chararray&quot;&gt; &lt;code&gt;chararray&lt;/code&gt; &lt;/a&gt;，</target>
        </trans-unit>
        <trans-unit id="8f21ea65027d34d0f525219a53334dc35cb5bbea" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;chararray&lt;/code&gt;,</source>
          <target state="translated">一个 &lt;code&gt;chararray&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="0674ccd73b7c7ce7f84e47ec99b0b3e9cad20716" translate="yes" xml:space="preserve">
          <source>a GitHub account</source>
          <target state="translated">GitHub账户</target>
        </trans-unit>
        <trans-unit id="cb4065b0f0de4de8cc6afb691ce3365727df08a4" translate="yes" xml:space="preserve">
          <source>a Python str or unicode object,</source>
          <target state="translated">一个Python str或unicode对象。</target>
        </trans-unit>
        <trans-unit id="753cc1b7cdb86a0a582f834f17fe8e4f8e20365f" translate="yes" xml:space="preserve">
          <source>a binary string for the data</source>
          <target state="translated">数据的二进制字符串</target>
        </trans-unit>
        <trans-unit id="7be660f83fa27f597e95280a8283a2c0611d9749" translate="yes" xml:space="preserve">
          <source>a binary string for the mask.</source>
          <target state="translated">掩码的二进制字符串。</target>
        </trans-unit>
        <trans-unit id="da3d248ac1b46ab9b40ccba358d7b76cb5f95a1a" translate="yes" xml:space="preserve">
          <source>a binary string with the data (or a list if &amp;lsquo;a&amp;rsquo; is an object array)</source>
          <target state="translated">带有数据的二进制字符串（如果&amp;ldquo; a&amp;rdquo;是对象数组，则为列表）</target>
        </trans-unit>
        <trans-unit id="23ba6abbcb5fde1985a0ccafa389ab00c97b60c5" translate="yes" xml:space="preserve">
          <source>a comma-separated string, such as &lt;code&gt;dtype=&quot;i4,f8,|U3&quot;&lt;/code&gt;.</source>
          <target state="translated">逗号分隔的字符串，例如 &lt;code&gt;dtype=&quot;i4,f8,|U3&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f30c34fa91e5fe02fcaaa600112ca2401559232" translate="yes" xml:space="preserve">
          <source>a description of what conditions (if any) would convince the vetoer to withdraw their veto.</source>
          <target state="translated">说明在什么条件下(如果有的话)可以说服否决者撤回其否决权;</target>
        </trans-unit>
        <trans-unit id="75a0b11cb8353626ce9f617e11df2761570b96e8" translate="yes" xml:space="preserve">
          <source>a dictionary</source>
          <target state="translated">字典</target>
        </trans-unit>
        <trans-unit id="704f270fcdda892dcd7da2499a02cbe197238d4e" translate="yes" xml:space="preserve">
          <source>a dictionary with two keys &lt;code&gt;'names'&lt;/code&gt; and &lt;code&gt;'formats'&lt;/code&gt;.</source>
          <target state="translated">具有两个键 &lt;code&gt;'names'&lt;/code&gt; 和 &lt;code&gt;'formats'&lt;/code&gt; 的字典。</target>
        </trans-unit>
        <trans-unit id="165258a094d59f96169a00b9e5b85c293cfac672" translate="yes" xml:space="preserve">
          <source>a flat iterator on the array.</source>
          <target state="translated">数组上的一个平面迭代器。</target>
        </trans-unit>
        <trans-unit id="38fa2b975a8b6b4a3d3bf21a07ac779da6179bf8" translate="yes" xml:space="preserve">
          <source>a float &lt;code&gt;cached_gaussian&lt;/code&gt;.</source>
          <target state="translated">浮点数 &lt;code&gt;cached_gaussian&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="36e61322c895c6aba4450f63288197d75e11215d" translate="yes" xml:space="preserve">
          <source>a fork of NumPy</source>
          <target state="translated">叉叉</target>
        </trans-unit>
        <trans-unit id="2c6b35fc604217468fc6d89abf074eb38712618f" translate="yes" xml:space="preserve">
          <source>a full string specifying every real and imaginary part, e.g. &lt;code&gt;&amp;lsquo; %.4e %+.4ej %.4e %+.4ej %.4e %+.4ej&amp;rsquo;&lt;/code&gt; for 3 columns</source>
          <target state="translated">一个完整的字符串，指定每个实部和虚部，例如 &lt;code&gt;&amp;lsquo; %.4e %+.4ej %.4e %+.4ej %.4e %+.4ej&amp;rsquo;&lt;/code&gt; （三列）</target>
        </trans-unit>
        <trans-unit id="2a967621935781dbcc252b4a8b7d96f97a3cfb15" translate="yes" xml:space="preserve">
          <source>a future value, &lt;a href=&quot;numpy.fv#numpy.fv&quot;&gt;&lt;code&gt;fv&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;numpy.fv#numpy.fv&quot;&gt; &lt;code&gt;fv&lt;/code&gt; &lt;/a&gt;值fv</target>
        </trans-unit>
        <trans-unit id="62e19c74a71f45e1129086651da5d9eac4640584" translate="yes" xml:space="preserve">
          <source>a future value, &lt;a href=&quot;numpy.fv#numpy.fv&quot;&gt;&lt;code&gt;fv&lt;/code&gt;&lt;/a&gt; (e.g., 0)</source>
          <target state="translated">未来值&lt;a href=&quot;numpy.fv#numpy.fv&quot;&gt; &lt;code&gt;fv&lt;/code&gt; &lt;/a&gt;（例如0）</target>
        </trans-unit>
        <trans-unit id="1753c0d76b344c4afe3b81d53fc356b2c9ebe4fe" translate="yes" xml:space="preserve">
          <source>a list of length 1, 2, or 3 specifying the ufunc buffer-size, the error mode integer, and the error call-back function. Normally, these values are looked up in a thread-specific dictionary. Passing them here circumvents that look up and uses the low-level specification provided for the error mode. This may be useful, for example, as an optimization for calculations requiring many ufunc calls on small arrays in a loop.</source>
          <target state="translated">一个长度为1、2或3的列表,指定ufunc缓冲区大小、错误模式整数和错误回调函数。通常,这些值会在线程专用字典中查找。在这里传递它们可以避开这种查询,而使用为错误模式提供的低级规范。例如,对于需要在循环中对小数组进行多次ufunc调用的计算来说,这可能很有用。</target>
        </trans-unit>
        <trans-unit id="fdf1b7e7c1011d591cfbd0af0815aff32260a794" translate="yes" xml:space="preserve">
          <source>a list of length 3 specifying the ufunc buffer-size, the error mode integer, and the error call-back function. Normally, these values are looked up in a thread-specific dictionary. Passing them here circumvents that look up and uses the low-level specification provided for the error mode. This may be useful, for example, as an optimization for calculations requiring many ufunc calls on small arrays in a loop.</source>
          <target state="translated">一个长度为3的列表,指定ufunc缓冲区大小、错误模式整数和错误回调函数。通常,这些值会在线程专用的字典中查找。在这里传递它们可以避开这种查找,而使用为错误模式提供的低级规范。例如,对于需要在循环中对小数组进行多次ufunc调用的计算来说,这可能很有用。</target>
        </trans-unit>
        <trans-unit id="8a016fa87293ad87bf7d20c139907d4294ea1c51" translate="yes" xml:space="preserve">
          <source>a list of specifiers, one per column - in this case, the real and imaginary part must have separate specifiers, e.g. &lt;code&gt;[&amp;lsquo;%.3e + %.3ej&amp;rsquo;, &amp;lsquo;(%.15e%+.15ej)&amp;rsquo;]&lt;/code&gt; for 2 columns</source>
          <target state="translated">说明符列表，每列一个-在这种情况下，实部和虚部必须具有单独的说明符，例如2列的 &lt;code&gt;[&amp;lsquo;%.3e + %.3ej&amp;rsquo;, &amp;lsquo;(%.15e%+.15ej)&amp;rsquo;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="754b3f88fe33809498963069c46fb70a1dd37618" translate="yes" xml:space="preserve">
          <source>a local file.</source>
          <target state="translated">一个本地文件。</target>
        </trans-unit>
        <trans-unit id="22e45aa7e27532a97050bec76c57f40005681c13" translate="yes" xml:space="preserve">
          <source>a powerful N-dimensional &lt;a href=&quot;reference/arrays#arrays&quot;&gt;array object&lt;/a&gt;</source>
          <target state="translated">强大的N维&lt;a href=&quot;reference/arrays#arrays&quot;&gt;数组对象&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ca4cb12a95fc655dfb15fbc902c4327211a0f3f" translate="yes" xml:space="preserve">
          <source>a present value, &lt;a href=&quot;numpy.pv#numpy.pv&quot;&gt;&lt;code&gt;pv&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">现值&lt;a href=&quot;numpy.pv#numpy.pv&quot;&gt; &lt;code&gt;pv&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1b5254931af84f023d149f4ef57b6e3483f413e" translate="yes" xml:space="preserve">
          <source>a present value, &lt;a href=&quot;numpy.pv#numpy.pv&quot;&gt;&lt;code&gt;pv&lt;/code&gt;&lt;/a&gt; (e.g., an amount borrowed)</source>
          <target state="translated">现值&lt;a href=&quot;numpy.pv#numpy.pv&quot;&gt; &lt;code&gt;pv&lt;/code&gt; &lt;/a&gt;（例如借入的金额）</target>
        </trans-unit>
        <trans-unit id="3f700e7c94c2cf78162bf09d2c7b35da27688852" translate="yes" xml:space="preserve">
          <source>a remote URL that has been downloaded and stored locally in the &lt;a href=&quot;numpy.datasource#numpy.DataSource&quot;&gt;&lt;code&gt;DataSource&lt;/code&gt;&lt;/a&gt; directory.</source>
          <target state="translated">一个远程URL，该URL已下载并本地存储在&lt;a href=&quot;numpy.datasource#numpy.DataSource&quot;&gt; &lt;code&gt;DataSource&lt;/code&gt; &lt;/a&gt;目录中。</target>
        </trans-unit>
        <trans-unit id="8177c15205bb62fb37d25bf262fbb7d33cc77467" translate="yes" xml:space="preserve">
          <source>a remote URL that has not been downloaded, but is valid and accessible.</source>
          <target state="translated">一个尚未下载,但有效且可访问的远程URL。</target>
        </trans-unit>
        <trans-unit id="fc18023e5beeb34cfd63a03735997fa403d6779a" translate="yes" xml:space="preserve">
          <source>a sequence of strings</source>
          <target state="translated">字符串</target>
        </trans-unit>
        <trans-unit id="581fbb7fd07105b5fb313725adb67250478b41d1" translate="yes" xml:space="preserve">
          <source>a sequence of tuples &lt;code&gt;(name, type)&lt;/code&gt;, such as &lt;code&gt;dtype=[('A', int), ('B', float)]&lt;/code&gt;.</source>
          <target state="translated">元组 &lt;code&gt;(name, type)&lt;/code&gt; 的序列，例如 &lt;code&gt;dtype=[('A', int), ('B', float)]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb7fb34c341acd589894b7cb9e258fc160dbe4fc" translate="yes" xml:space="preserve">
          <source>a sequence of types, such as &lt;code&gt;dtype=(int, float, float)&lt;/code&gt;.</source>
          <target state="translated">类型序列，例如 &lt;code&gt;dtype=(int, float, float)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="665aa4dfa862dbce7e767c7639de941c068720d2" translate="yes" xml:space="preserve">
          <source>a sequence of values</source>
          <target state="translated">数值序列</target>
        </trans-unit>
        <trans-unit id="4e4908db613729ad16f59838856c8fc6378cb91a" translate="yes" xml:space="preserve">
          <source>a single specifier, &lt;code&gt;fmt=&amp;rsquo;%.4e&amp;rsquo;&lt;/code&gt;, resulting in numbers formatted like &lt;code&gt;&amp;lsquo; (%s+%sj)&amp;rsquo; % (fmt, fmt)&lt;/code&gt;</source>
          <target state="translated">单个说明符 &lt;code&gt;fmt=&amp;rsquo;%.4e&amp;rsquo;&lt;/code&gt; ，导致数字格式为 &lt;code&gt;&amp;lsquo; (%s+%sj)&amp;rsquo; % (fmt, fmt)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e920b8da955e5127e310279497efec15b98dd973" translate="yes" xml:space="preserve">
          <source>a single type, such as &lt;code&gt;dtype=float&lt;/code&gt;. The output will be 2D with the given dtype, unless a name has been associated with each column with the use of the &lt;code&gt;names&lt;/code&gt; argument (see below). Note that &lt;code&gt;dtype=float&lt;/code&gt; is the default for &lt;a href=&quot;../reference/generated/numpy.genfromtxt#numpy.genfromtxt&quot;&gt;&lt;code&gt;genfromtxt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">单一类型，例如 &lt;code&gt;dtype=float&lt;/code&gt; 。输出将是具有给定dtype的2D，除非使用 &lt;code&gt;names&lt;/code&gt; 参数将名称与每个列相关联（请参见下文）。注意， &lt;code&gt;dtype=float&lt;/code&gt; 是&lt;a href=&quot;../reference/generated/numpy.genfromtxt#numpy.genfromtxt&quot;&gt; &lt;code&gt;genfromtxt&lt;/code&gt; &lt;/a&gt;的默认值。</target>
        </trans-unit>
        <trans-unit id="db9b14f123723ffb6a1c7625cfec338c91b7eb35" translate="yes" xml:space="preserve">
          <source>a single value</source>
          <target state="translated">单值</target>
        </trans-unit>
        <trans-unit id="d621d0c0165fe844bdafa02ee3f44142e8347621" translate="yes" xml:space="preserve">
          <source>a string or a comma-separated string</source>
          <target state="translated">逗号串</target>
        </trans-unit>
        <trans-unit id="02f0357554cfbce37a16e4d5a7d774ab825a16e0" translate="yes" xml:space="preserve">
          <source>a tuple giving the shape of the data</source>
          <target state="translated">提供数据形状的元组</target>
        </trans-unit>
        <trans-unit id="5a7e14c9afd05529942ab7c758fc5563081473ff" translate="yes" xml:space="preserve">
          <source>a typecode for the data</source>
          <target state="translated">数据的类型码</target>
        </trans-unit>
        <trans-unit id="d300d7e337286a9c2b8f9049816258896c2afc80" translate="yes" xml:space="preserve">
          <source>a vector of unique values in array &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">数组 &lt;code&gt;a&lt;/code&gt; 中唯一值的向量</target>
        </trans-unit>
        <trans-unit id="2df379fb536f11677668023fe688e8a742e548d0" translate="yes" xml:space="preserve">
          <source>absolute (in module numpy)</source>
          <target state="translated">绝对值</target>
        </trans-unit>
        <trans-unit id="4909bcee736f21faba4c4b4db99ca3259c9745b0" translate="yes" xml:space="preserve">
          <source>absolute(&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;b&lt;/code&gt;) &amp;lt;= (&lt;code&gt;atol&lt;/code&gt; + &lt;code&gt;rtol&lt;/code&gt; * absolute(&lt;code&gt;b&lt;/code&gt;))</source>
          <target state="translated">绝对（ &lt;code&gt;a&lt;/code&gt; - &lt;code&gt;b&lt;/code&gt; ）&amp;lt;=（ &lt;code&gt;atol&lt;/code&gt; + &lt;code&gt;rtol&lt;/code&gt; *绝对（ &lt;code&gt;b&lt;/code&gt; ））</target>
        </trans-unit>
        <trans-unit id="5e5215351c5a9435d5468e209f4ae4f89865d695" translate="yes" xml:space="preserve">
          <source>abspath() (numpy.DataSource method)</source>
          <target state="translated">abspath()(numpy.DataSource方法)</target>
        </trans-unit>
        <trans-unit id="95c5768a77fb7c528c79cc85ec1625cb0c08d6c4" translate="yes" xml:space="preserve">
          <source>access element in second row, fifth column</source>
          <target state="translated">第五列</target>
        </trans-unit>
        <trans-unit id="b48d85152149a0f4251ce66345955226a3b27d77" translate="yes" xml:space="preserve">
          <source>access element in second row, fifth column in 2D array &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">在第二行存取元件，在2D阵列第五列 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2193714958e5a1928b796daffd6bed6d8d54a6f0" translate="yes" xml:space="preserve">
          <source>access last element in MATLAB vector (1xn or nx1) or 1D NumPy array &lt;code&gt;a&lt;/code&gt; (length n)</source>
          <target state="translated">访问MATLAB向量中的最后一个元素（1xn或nx1）或一维NumPy数组 &lt;code&gt;a&lt;/code&gt; （长度n）</target>
        </trans-unit>
        <trans-unit id="1c3d3c4a6fc9f317a1315e03d8ba62adba671f6f" translate="yes" xml:space="preserve">
          <source>access last element in the 1xn matrix &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">访问1xn矩阵 &lt;code&gt;a&lt;/code&gt; 中的最后一个元素</target>
        </trans-unit>
        <trans-unit id="da612b00046cfa57f5be01bb44f03c97ee5fcb20" translate="yes" xml:space="preserve">
          <source>accumulate</source>
          <target state="translated">accumulate</target>
        </trans-unit>
        <trans-unit id="34bf564c6974fe414e320272397007672183b5ad" translate="yes" xml:space="preserve">
          <source>accumulate() (numpy.ufunc method)</source>
          <target state="translated">累积()(numpy.ufunc方法)</target>
        </trans-unit>
        <trans-unit id="f0243b68a17b26311e55f3b2d09ecde950910d82" translate="yes" xml:space="preserve">
          <source>accumulate, ufunc</source>
          <target state="translated">积累,ufunc</target>
        </trans-unit>
        <trans-unit id="cf4af5674a567955ee1b6d6ccdd05687486f3828" translate="yes" xml:space="preserve">
          <source>acknowledge report is received</source>
          <target state="translated">报到</target>
        </trans-unit>
        <trans-unit id="58d1bbce297de3c304a9fefc3b483181872a5c6b" translate="yes" xml:space="preserve">
          <source>add</source>
          <target state="translated">add</target>
        </trans-unit>
        <trans-unit id="6ace1c5836b39cd04d5f5385b3207b598d700c15" translate="yes" xml:space="preserve">
          <source>add (in module numpy)</source>
          <target state="translated">添加(模块numpy)</target>
        </trans-unit>
        <trans-unit id="86dd47ccbe562e2b1411af1bea7a7949de431be1" translate="yes" xml:space="preserve">
          <source>add a release note to the &lt;code&gt;doc/release/upcoming_changes/&lt;/code&gt; directory, following the instructions and format in the &lt;code&gt;doc/release/upcoming_changes/README.rst&lt;/code&gt; file.</source>
          <target state="translated">按照 &lt;code&gt;doc/release/upcoming_changes/README.rst&lt;/code&gt; 文件中的说明和格式，将发行说明添加到 &lt;code&gt;doc/release/upcoming_changes/&lt;/code&gt; 目录。</target>
        </trans-unit>
        <trans-unit id="96719c763dccc81364d3257cacab29af4b7d83a4" translate="yes" xml:space="preserve">
          <source>add() (in module numpy.char)</source>
          <target state="translated">add()(在模块numpy.char中)</target>
        </trans-unit>
        <trans-unit id="f3b59bfab0854033aead66d1b6faf7f43e0ee041" translate="yes" xml:space="preserve">
          <source>add_data_dir()</source>
          <target state="translated">add_data_dir()</target>
        </trans-unit>
        <trans-unit id="a31b71499e9386602eb7e0e5f273c05c0ac5ed45" translate="yes" xml:space="preserve">
          <source>add_data_dir() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">add_data_dir()(numpy.distutils.misc_util.Configuration方法)</target>
        </trans-unit>
        <trans-unit id="9200d797d00907bd4a67510f47960da2cec4c889" translate="yes" xml:space="preserve">
          <source>add_data_files()</source>
          <target state="translated">add_data_files()</target>
        </trans-unit>
        <trans-unit id="54983c2355606799f94a75d132c8bd7837b4a39f" translate="yes" xml:space="preserve">
          <source>add_data_files() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">add_data_files()(numpy.distutils.misc_util.Configuration方法)</target>
        </trans-unit>
        <trans-unit id="d39e075ad580ed9430d688b578bea0106ca860d7" translate="yes" xml:space="preserve">
          <source>add_extension()</source>
          <target state="translated">add_extension()</target>
        </trans-unit>
        <trans-unit id="dde38d723d84e8e3008d215ec723d11491dccbe9" translate="yes" xml:space="preserve">
          <source>add_extension() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">add_extension()(numpy.distutils.misc_util.Configuration方法)</target>
        </trans-unit>
        <trans-unit id="5d009ac9f079e7fdced9a90ef1200c3fb1c35715" translate="yes" xml:space="preserve">
          <source>add_headers()</source>
          <target state="translated">add_headers()</target>
        </trans-unit>
        <trans-unit id="b10e3b759af510577d52946d19cc4092f37e972a" translate="yes" xml:space="preserve">
          <source>add_headers() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">add_headers()(numpy.distutils.misc_util.Configuration方法)</target>
        </trans-unit>
        <trans-unit id="a628a8da50197850cf2b27e98a076e5dfaec48a9" translate="yes" xml:space="preserve">
          <source>add_include_dirs()</source>
          <target state="translated">add_include_dirs()</target>
        </trans-unit>
        <trans-unit id="e1fea60228e7efb4aa9e7071f56a99192cf45d32" translate="yes" xml:space="preserve">
          <source>add_include_dirs() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">add_include_dirs()(numpy.distutils.misc_util.Configuration方法)</target>
        </trans-unit>
        <trans-unit id="679396cba67a48464bf811972c38f924aa64b48e" translate="yes" xml:space="preserve">
          <source>add_installed_library()</source>
          <target state="translated">add_installed_library()</target>
        </trans-unit>
        <trans-unit id="cf8b1440cbdf71111d93d1b381bae22cec11a668" translate="yes" xml:space="preserve">
          <source>add_installed_library() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">add_installed_library()(numpy.distutils.misc_util.Configuration方法)</target>
        </trans-unit>
        <trans-unit id="71d86799367064b55c54776185a9fa95324d5115" translate="yes" xml:space="preserve">
          <source>add_library()</source>
          <target state="translated">add_library()</target>
        </trans-unit>
        <trans-unit id="1dd094c9bc1ad3803b6eebf78f350bb9b430d9a3" translate="yes" xml:space="preserve">
          <source>add_library() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">add_library()(numpy.distutils.misc_util.Configuration方法)</target>
        </trans-unit>
        <trans-unit id="57577ee9b0c4153aed9b6032a828bc2bd94141bd" translate="yes" xml:space="preserve">
          <source>add_npy_pkg_config()</source>
          <target state="translated">add_npy_pkg_config()</target>
        </trans-unit>
        <trans-unit id="9e52abd2aa496b5f8ede990383d900949f91ad1b" translate="yes" xml:space="preserve">
          <source>add_npy_pkg_config() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">add_npy_pkg_config()(numpy.distutils.misc_util.Config方法)</target>
        </trans-unit>
        <trans-unit id="2afe23be8ed398ab8857f6343100631a790dc6cd" translate="yes" xml:space="preserve">
          <source>add_scripts()</source>
          <target state="translated">add_scripts()</target>
        </trans-unit>
        <trans-unit id="8de38016dc5eff53a8df791bdb2b47b172fbd747" translate="yes" xml:space="preserve">
          <source>add_scripts() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">add_scripts()(numpy.distutils.misc_util.Configuration方法)</target>
        </trans-unit>
        <trans-unit id="383afd61f3ac7b75fb75aad69f134fad0b8ca518" translate="yes" xml:space="preserve">
          <source>add_subpackage()</source>
          <target state="translated">add_subpackage()</target>
        </trans-unit>
        <trans-unit id="bddf4fd6b6da42a0cea8cd2ed9653ceadb48f804" translate="yes" xml:space="preserve">
          <source>add_subpackage() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">add_subpackage()(numpy.distutils.misc_util.Configuration方法)</target>
        </trans-unit>
        <trans-unit id="7454b77fff3e8b4898819b19a46726101e6e746d" translate="yes" xml:space="preserve">
          <source>adding new</source>
          <target state="translated">新增</target>
        </trans-unit>
        <trans-unit id="8b76301eeafa074e9b1580b8e1e94a2f768508db" translate="yes" xml:space="preserve">
          <source>advance() (numpy.random.PCG64 method)</source>
          <target state="translated">advance()(numpy.random.PCG64方法)</target>
        </trans-unit>
        <trans-unit id="bbe8d341332442be367ae7496195539f9a25ca06" translate="yes" xml:space="preserve">
          <source>after which you may use it:</source>
          <target state="translated">之后,你可以使用它。</target>
        </trans-unit>
        <trans-unit id="e1458fb28fa10e44ee5bffe8263acff5e3392e88" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;#numpy.bool_&quot;&gt;&lt;code&gt;numpy.bool_&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#numpy.bool_&quot;&gt; &lt;code&gt;numpy.bool_&lt;/code&gt; 的&lt;/a&gt;别名</target>
        </trans-unit>
        <trans-unit id="7639346be4bdc2bf85a74b99b43b701dfe92d9bd" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;#numpy.bytes_&quot;&gt;&lt;code&gt;numpy.bytes_&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#numpy.bytes_&quot;&gt; &lt;code&gt;numpy.bytes_&lt;/code&gt; 的&lt;/a&gt;别名</target>
        </trans-unit>
        <trans-unit id="12f487c8ffb810163ad05e50179121557f158ee2" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;#numpy.cdouble&quot;&gt;&lt;code&gt;numpy.cdouble&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#numpy.cdouble&quot;&gt; &lt;code&gt;numpy.cdouble&lt;/code&gt; 的&lt;/a&gt;别名</target>
        </trans-unit>
        <trans-unit id="19c0eed49712816ad07f5e7cd2e8baa56ef86d33" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;#numpy.clongdouble&quot;&gt;&lt;code&gt;numpy.clongdouble&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#numpy.clongdouble&quot;&gt; &lt;code&gt;numpy.clongdouble&lt;/code&gt; 的&lt;/a&gt;别名</target>
        </trans-unit>
        <trans-unit id="27900497a85a70ec400ba83d3b592bdfa2e0f231" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;#numpy.csingle&quot;&gt;&lt;code&gt;numpy.csingle&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#numpy.csingle&quot;&gt; &lt;code&gt;numpy.csingle&lt;/code&gt; 的&lt;/a&gt;别名</target>
        </trans-unit>
        <trans-unit id="1b046953f0be349cf726b813ca2ecfdfb8f32a52" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;#numpy.double&quot;&gt;&lt;code&gt;numpy.double&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#numpy.double&quot;&gt; &lt;code&gt;numpy.double&lt;/code&gt; 的&lt;/a&gt;别名</target>
        </trans-unit>
        <trans-unit id="0a889ab3c3c1f4f0d5367281af26eb3966e83551" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;#numpy.half&quot;&gt;&lt;code&gt;numpy.half&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#numpy.half&quot;&gt; &lt;code&gt;numpy.half&lt;/code&gt; 的&lt;/a&gt;别名</target>
        </trans-unit>
        <trans-unit id="6c14ebcf526d48d9ab02a156cf3799721dd39061" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;#numpy.longdouble&quot;&gt;&lt;code&gt;numpy.longdouble&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#numpy.longdouble&quot;&gt; &lt;code&gt;numpy.longdouble&lt;/code&gt; 的&lt;/a&gt;别名</target>
        </trans-unit>
        <trans-unit id="70da4bc8d8fddc03d6d8653e98bac4f2ce65c288" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;#numpy.single&quot;&gt;&lt;code&gt;numpy.single&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#numpy.single&quot;&gt; &lt;code&gt;numpy.single&lt;/code&gt; 的&lt;/a&gt;别名</target>
        </trans-unit>
        <trans-unit id="321d937fdbc406ad9d8fb8883ef6106e504207c9" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;#numpy.str_&quot;&gt;&lt;code&gt;numpy.str_&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#numpy.str_&quot;&gt; &lt;code&gt;numpy.str_&lt;/code&gt; 的&lt;/a&gt;别名</target>
        </trans-unit>
        <trans-unit id="4ccceb391fd4d838aff13292082ae57a63432ec5" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;../arrays.scalars#numpy.bool_&quot;&gt;&lt;code&gt;numpy.bool_&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../arrays.scalars#numpy.bool_&quot;&gt; &lt;code&gt;numpy.bool_&lt;/code&gt; 的&lt;/a&gt;别名</target>
        </trans-unit>
        <trans-unit id="3639444e9bb7c0efeab142a062504d9d332e48c5" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;arrays.scalars#numpy.bool_&quot;&gt;&lt;code&gt;numpy.bool_&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;arrays.scalars#numpy.bool_&quot;&gt; &lt;code&gt;numpy.bool_&lt;/code&gt; 的&lt;/a&gt;别名</target>
        </trans-unit>
        <trans-unit id="8751d9764b9e420b466b6d3a1af017a0677f6373" translate="yes" xml:space="preserve">
          <source>alias of &lt;code&gt;numpy.bool_&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;numpy.bool_&lt;/code&gt; 的别名</target>
        </trans-unit>
        <trans-unit id="99307e4954f163e794234187dca9613b68cf3950" translate="yes" xml:space="preserve">
          <source>alias of &lt;code&gt;numpy.ma.core.MaskedArray&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;numpy.ma.core.MaskedArray&lt;/code&gt; 的别名</target>
        </trans-unit>
        <trans-unit id="827cd73e1f786ecc41180e5c9b752f33e09cfa0d" translate="yes" xml:space="preserve">
          <source>alias of &lt;code&gt;numpy.testing._private.nosetester.NoseTester&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;numpy.testing._private.nosetester.NoseTester&lt;/code&gt; 的别名</target>
        </trans-unit>
        <trans-unit id="3bea4606b8381d936b8f862d721bc4422652b565" translate="yes" xml:space="preserve">
          <source>aligned</source>
          <target state="translated">aligned</target>
        </trans-unit>
        <trans-unit id="3862a1e1a444131dc1d5dd4fac19fb7dd924b914" translate="yes" xml:space="preserve">
          <source>alignment (numpy.dtype attribute)</source>
          <target state="translated">对齐(numpy.dtype属性)</target>
        </trans-unit>
        <trans-unit id="b5ed48a7e558cd86b3060b17f07ecd93ad208a0f" translate="yes" xml:space="preserve">
          <source>all (in module numpy.ma)</source>
          <target state="translated">全部(在numpy.ma模块中)</target>
        </trans-unit>
        <trans-unit id="c9b67f192627e781bd65254e3f01d7c7d1f7593a" translate="yes" xml:space="preserve">
          <source>all : apply to all numeric exceptions</source>
          <target state="translated">all:适用于所有数字异常</target>
        </trans-unit>
        <trans-unit id="02b51f76b609588ff1bb008fcb09d85646814f4d" translate="yes" xml:space="preserve">
          <source>all values are clipped to the region [0, len(&lt;em&gt;op&lt;/em&gt;) ).</source>
          <target state="translated">所有值都裁剪到区域[0，len（&lt;em&gt;op&lt;/em&gt;））。</target>
        </trans-unit>
        <trans-unit id="9bf6441dd2f3e3a2f7a6a3cf364373a79e83ef34" translate="yes" xml:space="preserve">
          <source>all() (in module numpy)</source>
          <target state="translated">all()(在numpy模块中)</target>
        </trans-unit>
        <trans-unit id="78ae7e89726d260069e17c5543b7ab56ab82dda8" translate="yes" xml:space="preserve">
          <source>all_strings() (in module numpy.distutils.misc_util)</source>
          <target state="translated">all_strings()(in module numpy.distutils.misc_util)</target>
        </trans-unit>
        <trans-unit id="b1adf53e63e2551b2fe1d5c3bd56fac7b8c8730b" translate="yes" xml:space="preserve">
          <source>allclose() (in module numpy)</source>
          <target state="translated">allclose()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="84066c3f504c34c817692265860f350cd03a1d8b" translate="yes" xml:space="preserve">
          <source>allequal() (in module numpy.ma)</source>
          <target state="translated">allequal()(在模块numpy.ma中)</target>
        </trans-unit>
        <trans-unit id="5f68636b4d8e2360cff9361a21f9fe7b974479dc" translate="yes" xml:space="preserve">
          <source>allows re-use of C code</source>
          <target state="translated">允许重复使用C代码</target>
        </trans-unit>
        <trans-unit id="938b4736ea611c1db1be66c9936c1fef25cd367a" translate="yes" xml:space="preserve">
          <source>allpath() (in module numpy.distutils.misc_util)</source>
          <target state="translated">allpath()(in module numpy.distutils.misc_util)</target>
        </trans-unit>
        <trans-unit id="e081f07cc9e5db663fff9d5cac2d3850671bcc16" translate="yes" xml:space="preserve">
          <source>along the selected axis. This basic operations is repeated for arrays with greater than 1 dimension so that the reduction takes place for every 1-D sub-array along the selected axis. An iterator with the selected dimension removed handles this looping.</source>
          <target state="translated">沿着选定的轴线进行还原。对于大于1维的数组,这个基本操作会重复进行,因此沿着选定的轴对每个1-D子数组进行缩减。一个去掉所选维数的迭代器来处理这个循环。</target>
        </trans-unit>
        <trans-unit id="b4d47e529aae629550b0ce38a7631c8820773d8e" translate="yes" xml:space="preserve">
          <source>alterdot, restoredot</source>
          <target state="translated">变更点,恢复点</target>
        </trans-unit>
        <trans-unit id="e181e2672f11aab90682d40ae1f74cb4a59a352d" translate="yes" xml:space="preserve">
          <source>alternative matrix product with different broadcasting rules.</source>
          <target state="translated">具有不同广播规则的替代矩阵产品。</target>
        </trans-unit>
        <trans-unit id="659b3d51475f52846b34250fc2f3104f88ea05ef" translate="yes" xml:space="preserve">
          <source>amax() (in module numpy)</source>
          <target state="translated">amax()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="f5ed48d60059206c34f373bde7a33e400bca7cfa" translate="yes" xml:space="preserve">
          <source>amin() (in module numpy)</source>
          <target state="translated">阿明()</target>
        </trans-unit>
        <trans-unit id="d5c33156b55ff5d884c15ca93f63965475efbc0f" translate="yes" xml:space="preserve">
          <source>an element can be uniquely represented with fewer digits only print it with that many.</source>
          <target state="translated">一个元素可以用较少的数字来唯一表示,但只能用这个数字来打印。</target>
        </trans-unit>
        <trans-unit id="d97116fb611676c553cafd7e91d3cb6d9d944f76" translate="yes" xml:space="preserve">
          <source>an existing &lt;a href=&quot;../reference/generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;numpy.dtype&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">现有的&lt;a href=&quot;../reference/generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;numpy.dtype&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="df029fe8a63af7d14ac608ed97dde63b030d2caf" translate="yes" xml:space="preserve">
          <source>an explanation of why it is being invoked, and</source>
          <target state="translated">解释为什么要援用它;和</target>
        </trans-unit>
        <trans-unit id="823a758cbccc512d56ec862367d06a05b288cc90" translate="yes" xml:space="preserve">
          <source>an integer &lt;code&gt;has_gauss&lt;/code&gt;.</source>
          <target state="translated">整数 &lt;code&gt;has_gauss&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a1a89b6dbc62e2ecbe0ebcd0a5d73de4e21d1c4f" translate="yes" xml:space="preserve">
          <source>an integer &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="translated">整数 &lt;code&gt;pos&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15910dec81f9c9a98e1ebad416875d0df4e025aa" translate="yes" xml:space="preserve">
          <source>an interest &lt;a href=&quot;numpy.rate#numpy.rate&quot;&gt;&lt;code&gt;rate&lt;/code&gt;&lt;/a&gt; compounded once per period, of which there are</source>
          <target state="translated">&lt;a href=&quot;numpy.rate#numpy.rate&quot;&gt; &lt;code&gt;rate&lt;/code&gt; &lt;/a&gt;复利一次的利率，其中有</target>
        </trans-unit>
        <trans-unit id="a54152aeb33dcd50bd4f20db9a5e28ae2cfe8cc8" translate="yes" xml:space="preserve">
          <source>an ndarray of type &lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or &amp;lsquo;unicode`</source>
          <target state="translated">类型为&lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;或'unicode'的ndarray</target>
        </trans-unit>
        <trans-unit id="7137fe2422370309ba3be971c23013f70bd76566" translate="yes" xml:space="preserve">
          <source>an ndarray of type &lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;unicode&lt;/code&gt;</source>
          <target state="translated">类型为&lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;unicode&lt;/code&gt; 的ndarray</target>
        </trans-unit>
        <trans-unit id="2289bbf94306c82e816811105ebeeca253ecaa1e" translate="yes" xml:space="preserve">
          <source>an ndarray of type &lt;code&gt;str&lt;/code&gt; or &amp;lsquo;unicode`</source>
          <target state="translated">类型为 &lt;code&gt;str&lt;/code&gt; 或&amp;ldquo; unicode&amp;rdquo;的ndarray</target>
        </trans-unit>
        <trans-unit id="826247ffac909fe163f4e2b88062934b2cab458d" translate="yes" xml:space="preserve">
          <source>an ndarray of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;unicode&lt;/code&gt;</source>
          <target state="translated">类型为 &lt;code&gt;str&lt;/code&gt; 或 &lt;code&gt;unicode&lt;/code&gt; 的ndarray</target>
        </trans-unit>
        <trans-unit id="2d3dc9fdbbadc069727c60e0c3aa3672342be1bd" translate="yes" xml:space="preserve">
          <source>an object describing the type of the elements in the array. One can create or specify dtype&amp;rsquo;s using standard Python types. Additionally NumPy provides types of its own. numpy.int32, numpy.int16, and numpy.float64 are some examples.</source>
          <target state="translated">描述数组中元素类型的对象。可以使用标准Python类型创建或指定dtype。另外，NumPy提供了自己的类型。numpy.int32，numpy.int16和numpy.float64是一些示例。</target>
        </trans-unit>
        <trans-unit id="9b7561f4ff2158dc85941da44931edc4ad2c3036" translate="yes" xml:space="preserve">
          <source>an unambiguous statement that a veto is being invoked,</source>
          <target state="translated">毫不含糊地表示正在行使否决权。</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="b4f65b085945d03c1edb6b232a29375d1161de81" translate="yes" xml:space="preserve">
          <source>and (optional) specification of whether payment is made at the beginning (&lt;code&gt;when&lt;/code&gt; = {&amp;lsquo;begin&amp;rsquo;, 1}) or the end (&lt;code&gt;when&lt;/code&gt; = {&amp;lsquo;end&amp;rsquo;, 0}) of each period</source>
          <target state="translated">和（可选）说明是否在每个期间的开始（ &lt;code&gt;when&lt;/code&gt; = {''开始'，1}）或结束（ &lt;code&gt;when&lt;/code&gt; = {''结束'，0}）付款</target>
        </trans-unit>
        <trans-unit id="5833b1f15104570d293482956b4e5fd815e1db0d" translate="yes" xml:space="preserve">
          <source>and :</source>
          <target state="translated">和 。</target>
        </trans-unit>
        <trans-unit id="3355548b53e5236290084dc7edd162d02b6ca923" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;6ad92e5&lt;/code&gt; is the last commit in the &lt;code&gt;master&lt;/code&gt; branch. Suppose we want to make the following changes:</source>
          <target state="translated">和 &lt;code&gt;6ad92e5&lt;/code&gt; 是在最后提交的 &lt;code&gt;master&lt;/code&gt; 分支。假设我们要进行以下更改：</target>
        </trans-unit>
        <trans-unit id="797c67830de97564fba53da317ed1e492268c79b" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;chebval2d(x, y, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 2-D Chebyshev series of the same degrees and sample points.</source>
          <target state="translated">和 &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; 和 &lt;code&gt;chebval2d(x, y, c)&lt;/code&gt; 在取整之前都是相同的。这种等效性对于最小二乘拟合以及对相同度数和采样点的大量二维Chebyshev级数的评估都是有用的。</target>
        </trans-unit>
        <trans-unit id="da14b6b88d2fad669bca837faa7ed9c787dac966" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;chebval3d(x, y, z, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 3-D Chebyshev series of the same degrees and sample points.</source>
          <target state="translated">和 &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; 和 &lt;code&gt;chebval3d(x, y, z, c)&lt;/code&gt; 将是相同的向上舍入。这种等效性对于最小二乘拟合以及对相同度数和采样点的大量3-D Chebyshev级数的评估都是有用的。</target>
        </trans-unit>
        <trans-unit id="b716423ee6b9dd4aa2dd31986d3fc4926ba22b66" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;hermeval2d(x, y, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 2-D HermiteE series of the same degrees and sample points.</source>
          <target state="translated">和 &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; 和 &lt;code&gt;hermeval2d(x, y, c)&lt;/code&gt; 在取整之前是相同的。这种等效性对于最小二乘拟合和评估相同度数和采样点的大量二维HermiteE系列都是有用的。</target>
        </trans-unit>
        <trans-unit id="0bb7be95d49eb169e5fef85fb85e12dd1e27bfcb" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;hermeval3d(x, y, z, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 3-D HermiteE series of the same degrees and sample points.</source>
          <target state="translated">和 &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; 和 &lt;code&gt;hermeval3d(x, y, z, c)&lt;/code&gt; 在取整之前都是相同的。这种等效性对于最小二乘拟合以及对相同度数和采样点的大量3-D HermiteE系列的评估都是有用的。</target>
        </trans-unit>
        <trans-unit id="fad303d6d70cbfff9a7cadca76594a240d4779ba" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;hermval2d(x, y, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 2-D Hermite series of the same degrees and sample points.</source>
          <target state="translated">和 &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; 和 &lt;code&gt;hermval2d(x, y, c)&lt;/code&gt; 在取整之前是相同的。这种等效性对于最小二乘拟合以及对相同度数和采样点的大量二维Hermite级数的评估都是有用的。</target>
        </trans-unit>
        <trans-unit id="69130e5b9bd31179248eb5d2f9a0cc5ecfe9349f" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;hermval3d(x, y, z, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 3-D Hermite series of the same degrees and sample points.</source>
          <target state="translated">直到舍入为止， &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; 和 &lt;code&gt;hermval3d(x, y, z, c)&lt;/code&gt; 相同。这种等效性对于最小二乘拟合以及对相同度数和采样点的大量3-D Hermite级数的评估都是有用的。</target>
        </trans-unit>
        <trans-unit id="9b94de589bf13a5bc17957bebab8021561c8051b" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;lagval2d(x, y, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 2-D Laguerre series of the same degrees and sample points.</source>
          <target state="translated">和 &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; 和 &lt;code&gt;lagval2d(x, y, c)&lt;/code&gt; 在取整之前都是相同的。这种等效性对于最小二乘拟合以及对相同度数和采样点的大量二维Laguerre级数的评估都是有用的。</target>
        </trans-unit>
        <trans-unit id="887de847ecb98d0a4ffe26b974e5d6faac855e03" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;lagval3d(x, y, z, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 3-D Laguerre series of the same degrees and sample points.</source>
          <target state="translated">和 &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; 和 &lt;code&gt;lagval3d(x, y, z, c)&lt;/code&gt; 在取整之前都是相同的。这种等效性对于最小二乘拟合以及对相同度数和采样点的大量3-D Laguerre级数的评估都是有用的。</target>
        </trans-unit>
        <trans-unit id="77be8fffad26eba68998db6b5b7dc00aa86c4875" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;legval2d(x, y, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 2-D Legendre series of the same degrees and sample points.</source>
          <target state="translated">和 &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; 和 &lt;code&gt;legval2d(x, y, c)&lt;/code&gt; 在取整之前都是相同的。这种等效性对于最小二乘拟合以及对相同度数和采样点的大量二维Legendre级数的评估都是有用的。</target>
        </trans-unit>
        <trans-unit id="1fe9099e7bf711386734009f432d373ed86b575a" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;legval3d(x, y, z, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 3-D Legendre series of the same degrees and sample points.</source>
          <target state="translated">和 &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; 和 &lt;code&gt;legval3d(x, y, z, c)&lt;/code&gt; 将是相同的向上舍入。这种等效性对于最小二乘拟合以及对相同度数和采样点的大量3-D Legendre级数的评估都是有用的。</target>
        </trans-unit>
        <trans-unit id="8b1fd063b78f7302ac115ff2db5fed9d22cf0052" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;polyval2d(x, y, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 2-D polynomials of the same degrees and sample points.</source>
          <target state="translated">和 &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; 和 &lt;code&gt;polyval2d(x, y, c)&lt;/code&gt; 在取整之前都是相同的。这种等效性对于最小二乘拟合以及对相同度数和采样点的大量二维多项式的评估都是有用的。</target>
        </trans-unit>
        <trans-unit id="c5af8d835e165267cf6cfd34fea99066b079ba1c" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;polyval3d(x, y, z, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 3-D polynomials of the same degrees and sample points.</source>
          <target state="translated">和 &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; 和 &lt;code&gt;polyval3d(x, y, z, c)&lt;/code&gt; 在取整之前都是相同的。这种等效性对于最小二乘拟合以及对相同度数和采样点的大量3-D多项式的评估都是有用的。</target>
        </trans-unit>
        <trans-unit id="382d318bf063c46cf188d091802ccd3ceed61a68" translate="yes" xml:space="preserve">
          <source>and &lt;em&gt;q&lt;/em&gt; and &lt;em&gt;r&lt;/em&gt; are the quotient and remainder obtained by dividing &lt;em&gt;j - i&lt;/em&gt; by &lt;em&gt;k&lt;/em&gt;: &lt;em&gt;j - i = q k + r&lt;/em&gt;, so that &lt;em&gt;i + (m - 1) k &amp;lt; j&lt;/em&gt;.</source>
          <target state="translated">和&lt;em&gt;q&lt;/em&gt;和&lt;em&gt;r&lt;/em&gt;是通过将&lt;em&gt;j-i&lt;/em&gt;除以&lt;em&gt;k&lt;/em&gt;得到的商和余数：&lt;em&gt;j-i = qk + r&lt;/em&gt;，因此&lt;em&gt;i +（m -1）k &amp;lt;j&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="069f04b72eac94b2bd204e4194a270895c7bad4f" translate="yes" xml:space="preserve">
          <source>and C-contiguous if the order is as follows:</source>
          <target state="translated">和C相邻,如果顺序如下。</target>
        </trans-unit>
        <trans-unit id="22dee2ded64b247edd9bb6cbefb4906380e62c94" translate="yes" xml:space="preserve">
          <source>and Weibull distributions are generalizations of the Rayleigh.</source>
          <target state="translated">和Weibull分布是Rayleigh分布的泛化。</target>
        </trans-unit>
        <trans-unit id="b7b7fa8b50a0f68e7ae7fb7f5f808bd52fd91e87" translate="yes" xml:space="preserve">
          <source>and a variance of</source>
          <target state="translated">差异为</target>
        </trans-unit>
        <trans-unit id="9530d5599dbc0288dc61c31e3923f2f568c88c91" translate="yes" xml:space="preserve">
          <source>and build a wrapper using &lt;code&gt;f2py -c ftype.f -m ftype&lt;/code&gt;.</source>
          <target state="translated">并使用 &lt;code&gt;f2py -c ftype.f -m ftype&lt;/code&gt; 构建包装器。</target>
        </trans-unit>
        <trans-unit id="30c4d7c37eb54f68610eb28ab5d7925dee1e0276" translate="yes" xml:space="preserve">
          <source>and eigenvectors</source>
          <target state="translated">和特征向量</target>
        </trans-unit>
        <trans-unit id="eba91851b59fbd345fa178868b5887e29f7f53ae" translate="yes" xml:space="preserve">
          <source>and has coefficients</source>
          <target state="translated">并有系数</target>
        </trans-unit>
        <trans-unit id="577e8661c5aa19e79572adadb7150f63b6eb96a6" translate="yes" xml:space="preserve">
          <source>and instead of showing an &lt;code&gt;https&lt;/code&gt; URL, &lt;code&gt;git remote -v&lt;/code&gt; will show</source>
          <target state="translated">并且代替表示 &lt;code&gt;https&lt;/code&gt; URL， &lt;code&gt;git remote -v&lt;/code&gt; 将显示</target>
        </trans-unit>
        <trans-unit id="fbc9b2575f7bdeb4f2787fbcb14ff87e5fbb029e" translate="yes" xml:space="preserve">
          <source>and is defined up to &lt;code&gt;m - 1&lt;/code&gt; integration constants &lt;code&gt;k&lt;/code&gt;. The constants determine the low-order polynomial part</source>
          <target state="translated">定义为 &lt;code&gt;m - 1&lt;/code&gt; 积分常数 &lt;code&gt;k&lt;/code&gt; 。常数确定低阶多项式部分</target>
        </trans-unit>
        <trans-unit id="b4683fb165059225c66d63bb15b9988a1ac779b7" translate="yes" xml:space="preserve">
          <source>and more generally</source>
          <target state="translated">以及更普遍</target>
        </trans-unit>
        <trans-unit id="c9de3a2d16580ffabe130528b2dc32d830e4b557" translate="yes" xml:space="preserve">
          <source>and on Windows:</source>
          <target state="translated">和Windows上。</target>
        </trans-unit>
        <trans-unit id="664546cd37a839e1b840acdc8c4f50e6856fb9a0" translate="yes" xml:space="preserve">
          <source>and substituting</source>
          <target state="translated">并代之以</target>
        </trans-unit>
        <trans-unit id="ac6e187cb772692898db3e1fc4d23ad7cc69833d" translate="yes" xml:space="preserve">
          <source>and supports advancing an arbitrary number of steps as well as</source>
          <target state="translated">并支持任意步数的前进以及</target>
        </trans-unit>
        <trans-unit id="ced0174f90d515de4d6888cde32613f58e4b7761" translate="yes" xml:space="preserve">
          <source>and supports arbitrary advancing and jumping the sequence in increments of</source>
          <target state="translated">并支持任意前进和跳转序列,增量为</target>
        </trans-unit>
        <trans-unit id="e04253ffbb0d8d03e5791d061b4cb87bb54996d2" translate="yes" xml:space="preserve">
          <source>and that distinct seeds will not run into each other for at least</source>
          <target state="translated">而且,不同的种子至少要在以下时间内不会相互碰撞</target>
        </trans-unit>
        <trans-unit id="a6874ad5db55244006ef6ac097dd2fe8ac21f02c" translate="yes" xml:space="preserve">
          <source>and the Standard Cauchy distribution just sets</source>
          <target state="translated">而标准Cauchy分布只是设置了</target>
        </trans-unit>
        <trans-unit id="f4cae9d3c50690186c19a112f66b187f09b75655" translate="yes" xml:space="preserve">
          <source>and the argument you are passing is an integer extracted from a NumPy array, then you have stumbled upon this problem. The solution is to modify the &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; type conversion system to accept NumPy array scalars in addition to the standard integer types. Fortunately, this capability has been provided for you. Simply copy the file:</source>
          <target state="translated">并且您传递的参数是从NumPy数组中提取的整数，那么您偶然发现了这个问题。解决方案是修改&lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt;类型转换系统，以接受标准整数类型之外的NumPy数组标量。幸运的是，已经为您提供了此功能。只需复制文件：</target>
        </trans-unit>
        <trans-unit id="33581168ac25635a1502a03f9acdea3d138f136f" translate="yes" xml:space="preserve">
          <source>and the columns of &lt;code&gt;u&lt;/code&gt; are the eigenvectors of</source>
          <target state="translated">&lt;code&gt;u&lt;/code&gt; 的列是...的特征向量</target>
        </trans-unit>
        <trans-unit id="826febfce772db61c3d04fd7bce80d4dc77a9db2" translate="yes" xml:space="preserve">
          <source>and the corresponding &amp;lt;C type&amp;gt;. &amp;lt;C type&amp;gt; can be one of the following:</source>
          <target state="translated">以及相应的&amp;lt;C type&amp;gt;。&amp;lt;C类型&amp;gt;可以是以下之一：</target>
        </trans-unit>
        <trans-unit id="7b93a06443dca8775a4bd856d451ba43367d3470" translate="yes" xml:space="preserve">
          <source>and the following code in setup.py:</source>
          <target state="translated">以及setup.py中的以下代码。</target>
        </trans-unit>
        <trans-unit id="1f64f494e4179c271afa9e034175c67d6773596b" translate="yes" xml:space="preserve">
          <source>and the history looks now like this:</source>
          <target state="translated">而现在的历史是这样的。</target>
        </trans-unit>
        <trans-unit id="74b8f2299cbba682a4b579a73f467a4ec1857066" translate="yes" xml:space="preserve">
          <source>and the interval of integration is</source>
          <target state="translated">而积分的区间为</target>
        </trans-unit>
        <trans-unit id="8e27900beaaebea88079f1696ba2bfe9853ea793" translate="yes" xml:space="preserve">
          <source>and the inverse transforms unscaled (i.e. exactly opposite to the default &lt;code&gt;&quot;backward&quot;&lt;/code&gt;). &lt;code&gt;None&lt;/code&gt; is an alias of the default option &lt;code&gt;&quot;backward&quot;&lt;/code&gt; for backward compatibility.</source>
          <target state="translated">而逆变换是无比例的（即与默认的 &lt;code&gt;&quot;backward&quot;&lt;/code&gt; 正好相反）。 &lt;code&gt;None&lt;/code&gt; 是默认选项 &lt;code&gt;&quot;backward&quot;&lt;/code&gt; 的别名，以实现向后兼容性。</target>
        </trans-unit>
        <trans-unit id="f8cf75753e15ab2cac895fa94e8c76d0ecbc29ac" translate="yes" xml:space="preserve">
          <source>and the result of &lt;code&gt;np.flip(a,axis=0)&lt;/code&gt; is to reverse the slices:</source>
          <target state="translated">并且 &lt;code&gt;np.flip(a,axis=0)&lt;/code&gt; 的结果是反转切片：</target>
        </trans-unit>
        <trans-unit id="92fe9067409398d8dd3631850b053951d71f69ef" translate="yes" xml:space="preserve">
          <source>and the value of</source>
          <target state="translated">和价值</target>
        </trans-unit>
        <trans-unit id="ed0e732aab882afaf6a1228703532b501012189b" translate="yes" xml:space="preserve">
          <source>and then for</source>
          <target state="translated">而后</target>
        </trans-unit>
        <trans-unit id="4058d81c951f3b990aaed88021725e23952b71b0" translate="yes" xml:space="preserve">
          <source>and then use it as:</source>
          <target state="translated">然后将其作为。</target>
        </trans-unit>
        <trans-unit id="3a00b9fd294ab34926ac48be20565faabfd32ca9" translate="yes" xml:space="preserve">
          <source>and then you&amp;rsquo;ll be taken to the home page of your forked copy:</source>
          <target state="translated">然后您将进入分叉副本的主页：</target>
        </trans-unit>
        <trans-unit id="9de646dbe30b2a821dd61bfba6b33f6ad48047eb" translate="yes" xml:space="preserve">
          <source>and these might in turn link to still narrower how-tos &amp;ndash; so the town center page might link to</source>
          <target state="translated">并且这些链接可能还会链接到更窄的操作方法-因此，镇中心页面可能会链接到</target>
        </trans-unit>
        <trans-unit id="2b5b8e8768392651dd13b01808c68fe276b01006" translate="yes" xml:space="preserve">
          <source>and thus</source>
          <target state="translated">于是</target>
        </trans-unit>
        <trans-unit id="12c4523bbdf66e159a75d6197c389881a96a68bb" translate="yes" xml:space="preserve">
          <source>and will be installed as foo.ini in the &amp;lsquo;lib&amp;rsquo; subpath.</source>
          <target state="translated">并将其作为foo.ini安装在&amp;ldquo; lib&amp;rdquo;子路径中。</target>
        </trans-unit>
        <trans-unit id="add68b20cac45386824d8e6ae72ca7d86f8dc328" translate="yes" xml:space="preserve">
          <source>and wrap it using &lt;code&gt;f2py -c -m allocarr allocarr.f90&lt;/code&gt;.</source>
          <target state="translated">并使用 &lt;code&gt;f2py -c -m allocarr allocarr.f90&lt;/code&gt; 对其进行包装。</target>
        </trans-unit>
        <trans-unit id="d613819ef6701fd8472d12f723beca1637fbdab3" translate="yes" xml:space="preserve">
          <source>and wrap it using &lt;code&gt;f2py -c -m arr array.f -DF2PY_REPORT_ON_ARRAY_COPY=1&lt;/code&gt;.</source>
          <target state="translated">并使用 &lt;code&gt;f2py -c -m arr array.f -DF2PY_REPORT_ON_ARRAY_COPY=1&lt;/code&gt; 对其进行包装。</target>
        </trans-unit>
        <trans-unit id="8b31b74a575d011e885d6c6f5649864b27cd3411" translate="yes" xml:space="preserve">
          <source>and wrap it using &lt;code&gt;f2py -c -m callback callback.f&lt;/code&gt;.</source>
          <target state="translated">并使用 &lt;code&gt;f2py -c -m callback callback.f&lt;/code&gt; 包装它。</target>
        </trans-unit>
        <trans-unit id="8175ea198b4950d05adf3518df479055f274bf1e" translate="yes" xml:space="preserve">
          <source>and wrap it using &lt;code&gt;f2py -c -m common common.f&lt;/code&gt;.</source>
          <target state="translated">并使用 &lt;code&gt;f2py -c -m common common.f&lt;/code&gt; 包装它。</target>
        </trans-unit>
        <trans-unit id="056e539dfee2ba52a90898acd17522879537de25" translate="yes" xml:space="preserve">
          <source>and wrap it using &lt;code&gt;f2py -c -m moddata moddata.f90&lt;/code&gt;.</source>
          <target state="translated">并使用 &lt;code&gt;f2py -c -m moddata moddata.f90&lt;/code&gt; 对其进行包装。</target>
        </trans-unit>
        <trans-unit id="3b4db0560dc46f2d4e13ea3950db7709d0979924" translate="yes" xml:space="preserve">
          <source>and wrap it using &lt;code&gt;f2py -c -m mystring string.f&lt;/code&gt;.</source>
          <target state="translated">并使用 &lt;code&gt;f2py -c -m mystring string.f&lt;/code&gt; 进行包装。</target>
        </trans-unit>
        <trans-unit id="d711ecaa7b4b21a198ff2452b13bd23403090a3e" translate="yes" xml:space="preserve">
          <source>and wrap it using &lt;code&gt;f2py -c -m pfromf extcallback.f&lt;/code&gt;.</source>
          <target state="translated">并使用 &lt;code&gt;f2py -c -m pfromf extcallback.f&lt;/code&gt; 包装它。</target>
        </trans-unit>
        <trans-unit id="87fb3f7a8c15af228c2038ec8d15e16b4d160aca" translate="yes" xml:space="preserve">
          <source>and wrap it using &lt;code&gt;f2py -c -m scalar scalar.f&lt;/code&gt;.</source>
          <target state="translated">并使用 &lt;code&gt;f2py -c -m scalar scalar.f&lt;/code&gt; 包装它。</target>
        </trans-unit>
        <trans-unit id="a5230bf3ac1fc697c044aa12dc9e2fb2c6ea3dcf" translate="yes" xml:space="preserve">
          <source>and:</source>
          <target state="translated">and:</target>
        </trans-unit>
        <trans-unit id="0d6d4ce9bc2f72691f31cbdb3ce274f9ba1a9150" translate="yes" xml:space="preserve">
          <source>angle() (in module numpy)</source>
          <target state="translated">角度()(在numpy模块中)</target>
        </trans-unit>
        <trans-unit id="ca7d48e766fde308dee941d4825e21d2d3c29c38" translate="yes" xml:space="preserve">
          <source>anom (in module numpy.ma)</source>
          <target state="translated">蚁族(numpy.ma)</target>
        </trans-unit>
        <trans-unit id="5e9d521a1c9ef6cef065869ca14d24a3af467a2f" translate="yes" xml:space="preserve">
          <source>anom() (numpy.ma.masked_array method)</source>
          <target state="translated">anom()(numpy.ma.masked_array方法)</target>
        </trans-unit>
        <trans-unit id="689fd17fb0834021d27b7647afa47b83d92cf3fa" translate="yes" xml:space="preserve">
          <source>anomalies (in module numpy.ma)</source>
          <target state="translated">异常值</target>
        </trans-unit>
        <trans-unit id="0964ccb38caffd3e4a043eddc7e0e36e19341175" translate="yes" xml:space="preserve">
          <source>answer a focused question, or</source>
          <target state="translated">答非所问</target>
        </trans-unit>
        <trans-unit id="96d042e9d2f79f5c362205887d2fd10e774d8553" translate="yes" xml:space="preserve">
          <source>any (in module numpy.ma)</source>
          <target state="translated">任一</target>
        </trans-unit>
        <trans-unit id="c81302cd0823545f8a863a80235cc693225c079a" translate="yes" xml:space="preserve">
          <source>any Python object</source>
          <target state="translated">任何Python对象</target>
        </trans-unit>
        <trans-unit id="26afd6718c385ce176984aeb1fc97c7714924710" translate="yes" xml:space="preserve">
          <source>any() (in module numpy)</source>
          <target state="translated">any()(在numpy模块中)</target>
        </trans-unit>
        <trans-unit id="ec28c258907898600c82ebfbed34c70f2e49b318" translate="yes" xml:space="preserve">
          <source>anywhere within the interval &lt;code&gt;[a, b)&lt;/code&gt;, and zero elsewhere.</source>
          <target state="translated">区间 &lt;code&gt;[a, b)&lt;/code&gt; 内的任何地方，其他地方为零。</target>
        </trans-unit>
        <trans-unit id="b057a07d6f9cb2c976e820af61ab073b58eb78b5" translate="yes" xml:space="preserve">
          <source>append() (in module numpy)</source>
          <target state="translated">append()(在numpy模块中)</target>
        </trans-unit>
        <trans-unit id="ad4d679cdc46e39df57fde68edb8cb8ce07b670f" translate="yes" xml:space="preserve">
          <source>append_fields() (in module numpy.lib.recfunctions)</source>
          <target state="translated">append_fields()(在模块 numpy.lib.recfunctions 中)</target>
        </trans-unit>
        <trans-unit id="0e1ce1c2f5a814275c9aa5e7af9c1be96050144d" translate="yes" xml:space="preserve">
          <source>appendpath() (in module numpy.distutils.misc_util)</source>
          <target state="translated">appendpath()(在模块numpy.distutils.misc_util中)</target>
        </trans-unit>
        <trans-unit id="b7fb694a67af1bbae7f4e4abd3db29295f6e4799" translate="yes" xml:space="preserve">
          <source>apply_along_axis() (in module numpy)</source>
          <target state="translated">apply_along_axis()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="90a420b32c76315e8d1c13735a93f3137d75ccd5" translate="yes" xml:space="preserve">
          <source>apply_along_fields() (in module numpy.lib.recfunctions)</source>
          <target state="translated">apply_along_fields()(in module numpy.lib.recfunctions)</target>
        </trans-unit>
        <trans-unit id="013c94f27096b659ce2c4df05185ad4386b3f1f6" translate="yes" xml:space="preserve">
          <source>apply_over_axes() (in module numpy)</source>
          <target state="translated">apply_over_axes()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="996ea1c904eacebe1ba18322b8e828e66b6f7252" translate="yes" xml:space="preserve">
          <source>arange (in module numpy.ma)</source>
          <target state="translated">arange(在numpy.ma模块中)</target>
        </trans-unit>
        <trans-unit id="b56e8caeef40ca1f548aef4b21b77b75e6c6fa11" translate="yes" xml:space="preserve">
          <source>arange() (in module numpy)</source>
          <target state="translated">arange()(在numpy模块中)</target>
        </trans-unit>
        <trans-unit id="707f2892001cf39b5f36ca9e23524ceff3128831" translate="yes" xml:space="preserve">
          <source>arange() will create arrays with regularly incrementing values. Check the docstring for complete information on the various ways it can be used. A few examples will be given here:</source>
          <target state="translated">arange()将创建有规律递增的数组。查看docstring以获得关于它的各种使用方法的完整信息。这里将给出几个例子。</target>
        </trans-unit>
        <trans-unit id="2cd7164e7f9989f74b41706261521709e04d093a" translate="yes" xml:space="preserve">
          <source>arccos (in module numpy)</source>
          <target state="translated">阿卡索斯</target>
        </trans-unit>
        <trans-unit id="c8af548c39777ec8ce893029c1668167ed049fe4" translate="yes" xml:space="preserve">
          <source>arccosh (in module numpy)</source>
          <target state="translated">阿科什</target>
        </trans-unit>
        <trans-unit id="a87fcaba4776688561773c2988046382ce315f29" translate="yes" xml:space="preserve">
          <source>arch type true-aln uint-aln &amp;mdash;- &amp;mdash;- &amp;mdash;&amp;mdash;&amp;ndash; &amp;mdash;&amp;mdash;&amp;ndash; x86_64 complex64 4 8 x86_64 float128 16 8 x86 float96 4 -</source>
          <target state="translated">拱型true-aln uint-aln &amp;mdash; &amp;mdash; &amp;mdash; &amp;mdash;&amp;mdash;&amp;ndash; &amp;mdash;&amp;mdash;&amp;ndash; x86_64 complex64 4 8 x86_64 float128 16 8 x86 float96 4-</target>
        </trans-unit>
        <trans-unit id="71022aab6e9286094303b92f205fe172e74edc8b" translate="yes" xml:space="preserve">
          <source>arcsin (in module numpy)</source>
          <target state="translated">弧弦</target>
        </trans-unit>
        <trans-unit id="68231d1de5a739f81f3e7b0004057e5e69f6b1b9" translate="yes" xml:space="preserve">
          <source>arcsinh (in module numpy)</source>
          <target state="translated">弧线图</target>
        </trans-unit>
        <trans-unit id="a07ac714f84bd3714487862b9cf3f152ffad2866" translate="yes" xml:space="preserve">
          <source>arctan (in module numpy)</source>
          <target state="translated">阿克坦</target>
        </trans-unit>
        <trans-unit id="21d1adfdd08c986fedce05650822c80484a61107" translate="yes" xml:space="preserve">
          <source>arctan2 (in module numpy)</source>
          <target state="translated">亚克坦2</target>
        </trans-unit>
        <trans-unit id="27a90cb24fd2520aa83565ec94301eb886b72ccf" translate="yes" xml:space="preserve">
          <source>arctanh (in module numpy)</source>
          <target state="translated">阿克丹赫(arctanh)</target>
        </trans-unit>
        <trans-unit id="c92198fa1543dbbf7d31d9921b2124ab33cf337a" translate="yes" xml:space="preserve">
          <source>are integers which specify the &lt;a href=&quot;generated/numpy.ndarray.strides#numpy.ndarray.strides&quot;&gt;&lt;code&gt;strides&lt;/code&gt;&lt;/a&gt; of the array. The &lt;a href=&quot;../glossary#term-column-major&quot;&gt;column-major&lt;/a&gt; order (used, for example, in the Fortran language and in &lt;em&gt;Matlab&lt;/em&gt;) and &lt;a href=&quot;../glossary#term-row-major&quot;&gt;row-major&lt;/a&gt; order (used in C) schemes are just specific kinds of strided scheme, and correspond to memory that can be &lt;em&gt;addressed&lt;/em&gt; by the strides:</source>
          <target state="translated">是指定数组&lt;a href=&quot;generated/numpy.ndarray.strides#numpy.ndarray.strides&quot;&gt; &lt;code&gt;strides&lt;/code&gt; &lt;/a&gt;的整数。的&lt;a href=&quot;../glossary#term-column-major&quot;&gt;列优先&lt;/a&gt;顺序（使用，例如，在Fortran语言和&lt;em&gt;Matlab的&lt;/em&gt;）和&lt;a href=&quot;../glossary#term-row-major&quot;&gt;行主&lt;/a&gt;顺序方案（在C中使用）都只是特定种跨距方案，并且对应于存储器可以的&lt;em&gt;寻址&lt;/em&gt;由步幅：</target>
        </trans-unit>
        <trans-unit id="3adb0d1ab1039cafb57396c156866d8e70606717" translate="yes" xml:space="preserve">
          <source>are integers which specify the &lt;a href=&quot;generated/numpy.ndarray.strides#numpy.ndarray.strides&quot;&gt;&lt;code&gt;strides&lt;/code&gt;&lt;/a&gt; of the array. The &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-column-major&quot;&gt;column-major&lt;/a&gt; order (used, for example, in the Fortran language and in &lt;em&gt;Matlab&lt;/em&gt;) and &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-row-major&quot;&gt;row-major&lt;/a&gt; order (used in C) schemes are just specific kinds of strided scheme, and correspond to memory that can be &lt;em&gt;addressed&lt;/em&gt; by the strides:</source>
          <target state="translated">是指定数组&lt;a href=&quot;generated/numpy.ndarray.strides#numpy.ndarray.strides&quot;&gt; &lt;code&gt;strides&lt;/code&gt; &lt;/a&gt;的整数。的&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-column-major&quot;&gt;列优先&lt;/a&gt;顺序（使用，例如，在Fortran语言和&lt;em&gt;Matlab的&lt;/em&gt;）和&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-row-major&quot;&gt;行主&lt;/a&gt;顺序方案（在C中使用）都只是特定种跨距方案，并且对应于存储器可以的&lt;em&gt;寻址&lt;/em&gt;由步幅：</target>
        </trans-unit>
        <trans-unit id="1d263c54f38b65b019759a7add5f9ed7acd93456" translate="yes" xml:space="preserve">
          <source>are negative. The numerous properties of the sine and related functions are included in any standard trigonometry text.</source>
          <target state="translated">是负数。正弦和相关函数的众多性质在任何标准三角学教科书中都有。</target>
        </trans-unit>
        <trans-unit id="92381ae5f44b48309b90fa949376d9d4d941a336" translate="yes" xml:space="preserve">
          <source>are orthogonal matrices,</source>
          <target state="translated">是正交矩阵。</target>
        </trans-unit>
        <trans-unit id="0ac5b00203e7ae1222da14608fc5c4c7216e77c9" translate="yes" xml:space="preserve">
          <source>are square and</source>
          <target state="translated">为正方形</target>
        </trans-unit>
        <trans-unit id="669792700179361c9d8fe73151e2b79db8b5caec" translate="yes" xml:space="preserve">
          <source>are the Chebyshev functions of degree</source>
          <target state="translated">度的Chebyshev函数</target>
        </trans-unit>
        <trans-unit id="129e19c3744be92c900ed8885f8191610c8c8ce9" translate="yes" xml:space="preserve">
          <source>are the red, green and blue channel arrays we had originally. Notice we can use the &lt;code&gt;@&lt;/code&gt; operator (the matrix multiplication operator for NumPy arrays, see &lt;a href=&quot;../reference/generated/numpy.matmul#numpy.matmul&quot;&gt;&lt;code&gt;numpy.matmul&lt;/code&gt;&lt;/a&gt;) for this:</source>
          <target state="translated">是我们最初拥有的红色，绿色和蓝色通道阵列。注意，我们可以使用 &lt;code&gt;@&lt;/code&gt; 运算符（用于NumPy数组的矩阵乘法运算符，请参见&lt;a href=&quot;../reference/generated/numpy.matmul#numpy.matmul&quot;&gt; &lt;code&gt;numpy.matmul&lt;/code&gt; &lt;/a&gt;）来实现：</target>
        </trans-unit>
        <trans-unit id="1afadeb92ac28d92d6b69092e6d32440796d181a" translate="yes" xml:space="preserve">
          <source>are the weights. This problem is solved by setting up as the (typically) overdetermined matrix equation</source>
          <target state="translated">是权重。这个问题通过设置为(典型的)超前矩阵方程来解决。</target>
        </trans-unit>
        <trans-unit id="a5d56af6aa2f265c010d81963817477c3d92c441" translate="yes" xml:space="preserve">
          <source>are the weights. This problem is solved by setting up the (typically) over-determined matrix equation:</source>
          <target state="translated">为权重。这个问题通过设置(典型的)过定矩阵方程来解决。</target>
        </trans-unit>
        <trans-unit id="fdb04f4d11c6a65b9a5894e03caa30b736a99d26" translate="yes" xml:space="preserve">
          <source>are the weights. This problem is solved by setting up the (typically) overdetermined matrix equation</source>
          <target state="translated">是权重。这个问题可以通过设置(典型的)超前矩阵方程来解决。</target>
        </trans-unit>
        <trans-unit id="f36b3b4d2dece244c51056a6d60476a5c85502a9" translate="yes" xml:space="preserve">
          <source>argmax (in module numpy.ma)</source>
          <target state="translated">argmax(在numpy.ma模块中)</target>
        </trans-unit>
        <trans-unit id="7d46636cf4afdc2dacf36f1f6721764924cafd51" translate="yes" xml:space="preserve">
          <source>argmax()</source>
          <target state="translated">argmax()</target>
        </trans-unit>
        <trans-unit id="fb2999d30d14ac977c75cf101f3979de47914d7c" translate="yes" xml:space="preserve">
          <source>argmax() (in module numpy)</source>
          <target state="translated">argmax()(在numpy模块中)</target>
        </trans-unit>
        <trans-unit id="80d9a9d74202db1e861bcc34de70b303cc250b4f" translate="yes" xml:space="preserve">
          <source>argmin (in module numpy.ma)</source>
          <target state="translated">argmin(在numpy.ma模块中)</target>
        </trans-unit>
        <trans-unit id="9763909b010e579a85ed5b5990e3baf43612e411" translate="yes" xml:space="preserve">
          <source>argmin()</source>
          <target state="translated">argmin()</target>
        </trans-unit>
        <trans-unit id="1a144df443434e0f2bf3013a3ab1022b57a582b1" translate="yes" xml:space="preserve">
          <source>argmin() (in module numpy)</source>
          <target state="translated">argmin()(在numpy模块中)</target>
        </trans-unit>
        <trans-unit id="84b72c16cca4c67ebf78ebe9c2cbf921cc97505a" translate="yes" xml:space="preserve">
          <source>argpartition() (in module numpy)</source>
          <target state="translated">argpartition()(在numpy模块中)</target>
        </trans-unit>
        <trans-unit id="c562cf9f77bcad33a5839a227c798328253eb298" translate="yes" xml:space="preserve">
          <source>argsort()</source>
          <target state="translated">argsort()</target>
        </trans-unit>
        <trans-unit id="a12244c920367ae1ed226ccac89fd7177abc7d76" translate="yes" xml:space="preserve">
          <source>argsort() (in module numpy)</source>
          <target state="translated">argsort()(在numpy模块中)</target>
        </trans-unit>
        <trans-unit id="61bb48ed51e263b861ec08bd9fb734f9f3e55efd" translate="yes" xml:space="preserve">
          <source>argwhere() (in module numpy)</source>
          <target state="translated">argwhere()(在numpy模块中</target>
        </trans-unit>
        <trans-unit id="8443c67e67614d068b1d25667465caf9999802da" translate="yes" xml:space="preserve">
          <source>around (in module numpy.ma)</source>
          <target state="translated">绕过</target>
        </trans-unit>
        <trans-unit id="5916b37aa6e73d9e54ce91b8aaa1a263325c8dff" translate="yes" xml:space="preserve">
          <source>around a long time</source>
          <target state="translated">由来已久</target>
        </trans-unit>
        <trans-unit id="a1ce0e8bf4631bc3a2f22b57007bb6531037f494" translate="yes" xml:space="preserve">
          <source>around() (in module numpy)</source>
          <target state="translated">左右()</target>
        </trans-unit>
        <trans-unit id="19edc1210777ba4d45049c29280d9cc5e1064c25" translate="yes" xml:space="preserve">
          <source>array</source>
          <target state="translated">array</target>
        </trans-unit>
        <trans-unit id="6e0d844833034105ca9d0a0031301081b281f21c" translate="yes" xml:space="preserve">
          <source>array concatenator</source>
          <target state="translated">数组连接器</target>
        </trans-unit>
        <trans-unit id="51fbb625de95b351e2ad865524e47e1fc791b13f" translate="yes" xml:space="preserve">
          <source>array elements with higher indexes occupy higher addresses (that is, no &lt;a href=&quot;#term-stride&quot;&gt;stride&lt;/a&gt; is negative).</source>
          <target state="translated">具有较高索引的数组元素占用较高的地址（即，没有&lt;a href=&quot;#term-stride&quot;&gt;跨度&lt;/a&gt;为负）。</target>
        </trans-unit>
        <trans-unit id="e5352918bd8a3978373297fe1b00bbc9373ae30f" translate="yes" xml:space="preserve">
          <source>array or dtype for which to repack the fields.</source>
          <target state="translated">用于重新打包字段的数组或dtype。</target>
        </trans-unit>
        <trans-unit id="ba1a495bcaaee82b2fac1b638653aa07bf09dae2" translate="yes" xml:space="preserve">
          <source>array scalars</source>
          <target state="translated">数组标量</target>
        </trans-unit>
        <trans-unit id="3cea35e50887e9e70837814225ba800fca276baf" translate="yes" xml:space="preserve">
          <source>array to cast</source>
          <target state="translated">数组投</target>
        </trans-unit>
        <trans-unit id="d1eb95117410892e44a296cab726cc1a5f72f061" translate="yes" xml:space="preserve">
          <source>array with the new dtype, with field values copied from the fields in the input array with the same name</source>
          <target state="translated">新的dtype数组,字段值从输入数组中的同名字段复制过来。</target>
        </trans-unit>
        <trans-unit id="77cac1115e139f70b3eec55c371fae847e017e93" translate="yes" xml:space="preserve">
          <source>array() (in module numpy)</source>
          <target state="translated">数组()(在numpy模块中)</target>
        </trans-unit>
        <trans-unit id="f8c8a3b49a7f801825a963bddbadefd27ff840cd" translate="yes" xml:space="preserve">
          <source>array2string() (in module numpy)</source>
          <target state="translated">array2string()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="41aaf9e386813f7733bc1f12e0edd0c5dff4eb0c" translate="yes" xml:space="preserve">
          <source>array_equal() (in module numpy)</source>
          <target state="translated">array_equal()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="fdf4ec20e97ebfa9a1e9f119d09218ea3a122913" translate="yes" xml:space="preserve">
          <source>array_equiv() (in module numpy)</source>
          <target state="translated">array_equiv()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="9eb2c94e7f8e9452859d7ea00172b7da45c76710" translate="yes" xml:space="preserve">
          <source>array_like : For functions that take arguments which can have not only a type &lt;code&gt;ndarray&lt;/code&gt;, but also types that can be converted to an ndarray (i.e. scalar types, sequence types), those arguments can be documented with type &lt;code&gt;array_like&lt;/code&gt;.</source>
          <target state="translated">array_like：对于带有参数的函数，这些参数不仅可以具有 &lt;code&gt;ndarray&lt;/code&gt; 类型，还可以具有可转换为ndarray的类型（即标量类型，序列类型），这些参数可以用 &lt;code&gt;array_like&lt;/code&gt; 类型进行记录。</target>
        </trans-unit>
        <trans-unit id="6e2b5af90d565ba3626041a3ed69df6763b7d5e6" translate="yes" xml:space="preserve">
          <source>array_repr() (in module numpy)</source>
          <target state="translated">array_repr()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="baae9a79844dd686cd1dad5f96539314c3ddeff8" translate="yes" xml:space="preserve">
          <source>array_split() (in module numpy)</source>
          <target state="translated">array_split()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="b7041d3b9d767042c4b5a61dbdca6a6f8979e448" translate="yes" xml:space="preserve">
          <source>array_str() (in module numpy)</source>
          <target state="translated">array_str()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="487871c2a85a9991407ead3c9b46c49245b35691" translate="yes" xml:space="preserve">
          <source>arrays to be broadcast together so that the loop progresses in C-style contiguous fashion over the broadcasted array. The corresponding C-structure is the &lt;a href=&quot;#c.PyArrayMultiIterObject&quot;&gt;&lt;code&gt;PyArrayMultiIterObject&lt;/code&gt;&lt;/a&gt; whose memory layout must begin any object, &lt;em&gt;obj&lt;/em&gt;, passed in to the &lt;a href=&quot;array#c.PyArray_Broadcast&quot;&gt;&lt;code&gt;PyArray_Broadcast&lt;/code&gt;&lt;/a&gt; (obj) function. Broadcasting is performed by adjusting array iterators so that each iterator represents the broadcasted shape and size, but has its strides adjusted so that the correct element from the array is used at each iteration.</source>
          <target state="translated">数组一起广播，以便循环以C样式的连续方式在广播数组上进行。相应的C结构是&lt;a href=&quot;#c.PyArrayMultiIterObject&quot;&gt; &lt;code&gt;PyArrayMultiIterObject&lt;/code&gt; ,&lt;/a&gt;其内存布局必须以任何传入到&lt;a href=&quot;array#c.PyArray_Broadcast&quot;&gt; &lt;code&gt;PyArray_Broadcast&lt;/code&gt; &lt;/a&gt;（obj）函数的对象&lt;em&gt;obj&lt;/em&gt;开始。通过调整数组迭代器执行广播，以便每个迭代器都代表广播的形状和大小，但调整其步幅，以便在每次迭代中使用数组中的正确元素。</target>
        </trans-unit>
        <trans-unit id="d2a594f8e6ee27f50955a3a17ae9a3c3dbd440f6" translate="yes" xml:space="preserve">
          <source>arrays to be broadcast together so that the loop progresses in C-style contiguous fashion over the broadcasted array. The corresponding C-structure is the &lt;a href=&quot;#c.PyArrayMultiIterObject&quot;&gt;&lt;code&gt;PyArrayMultiIterObject&lt;/code&gt;&lt;/a&gt; whose memory layout must begin any object, &lt;em&gt;obj&lt;/em&gt;, passed in to the &lt;a href=&quot;c-api.array#c.PyArray_Broadcast&quot;&gt;&lt;code&gt;PyArray_Broadcast&lt;/code&gt;&lt;/a&gt; (obj) function. Broadcasting is performed by adjusting array iterators so that each iterator represents the broadcasted shape and size, but has its strides adjusted so that the correct element from the array is used at each iteration.</source>
          <target state="translated">数组一起广播，以便循环以C样式的连续方式在广播数组上进行。对应的C结构是&lt;a href=&quot;#c.PyArrayMultiIterObject&quot;&gt; &lt;code&gt;PyArrayMultiIterObject&lt;/code&gt; ,&lt;/a&gt;其内存布局必须以任何传入到&lt;a href=&quot;c-api.array#c.PyArray_Broadcast&quot;&gt; &lt;code&gt;PyArray_Broadcast&lt;/code&gt; &lt;/a&gt;（obj）函数的对象&lt;em&gt;obj&lt;/em&gt;开始。通过调整数组迭代器执行广播，以便每个迭代器都代表广播的形状和大小，但调整其步幅，以便在每次迭代时使用数组中的正确元素。</target>
        </trans-unit>
        <trans-unit id="f2de9943568aa25a2f59576f5bf4c9cf947bfe4c" translate="yes" xml:space="preserve">
          <source>ary[2:3]</source>
          <target state="translated">ary[2:3]</target>
        </trans-unit>
        <trans-unit id="713b3beefc88807b0a6f0684e0af35113c39a1cc" translate="yes" xml:space="preserve">
          <source>ary[3:]</source>
          <target state="translated">ary[3:]</target>
        </trans-unit>
        <trans-unit id="3e96c1cfc8d64c7da732c5c9ff3e4beca0ed7e69" translate="yes" xml:space="preserve">
          <source>ary[:2]</source>
          <target state="translated">ary[:2]</target>
        </trans-unit>
        <trans-unit id="df211ccdd94a63e0bcb9e6ae427a249484a49d60" translate="yes" xml:space="preserve">
          <source>as</source>
          <target state="translated">as</target>
        </trans-unit>
        <trans-unit id="a0e5661019f2ea4f99ec63ab6db62fbd4412fb05" translate="yes" xml:space="preserve">
          <source>as a C code block of the &lt;code&gt;usercode&lt;/code&gt; statement;</source>
          <target state="translated">作为 &lt;code&gt;usercode&lt;/code&gt; 语句的C代码块；</target>
        </trans-unit>
        <trans-unit id="c7508335332244c4d5a639449928bf107842d290" translate="yes" xml:space="preserve">
          <source>as a C expression of the &lt;code&gt;callstatement&lt;/code&gt; statement;</source>
          <target state="translated">作为 &lt;code&gt;callstatement&lt;/code&gt; 语句的C表达式；</target>
        </trans-unit>
        <trans-unit id="b7f7018104749a0f98a3c4b0214516ac493c7ecb" translate="yes" xml:space="preserve">
          <source>as a C type specification of the &lt;code&gt;callprotoargument&lt;/code&gt; statement;</source>
          <target state="translated">作为 &lt;code&gt;callprotoargument&lt;/code&gt; 语句的C类型规范；</target>
        </trans-unit>
        <trans-unit id="9e869f6b28e69902a281789e652ee39928bbbaed" translate="yes" xml:space="preserve">
          <source>as a list of C arrays of the &lt;code&gt;pymethoddef&lt;/code&gt; statement;</source>
          <target state="translated">作为 &lt;code&gt;pymethoddef&lt;/code&gt; 语句的C数组的列表；</target>
        </trans-unit>
        <trans-unit id="0a960f0a485739de9ec7e0394dd5e46da6afde09" translate="yes" xml:space="preserve">
          <source>as below</source>
          <target state="translated">如下</target>
        </trans-unit>
        <trans-unit id="39f73cc7abe0e62c980ea2dcd75266833a05fa1f" translate="yes" xml:space="preserve">
          <source>as documentation string.</source>
          <target state="translated">作为文档字符串。</target>
        </trans-unit>
        <trans-unit id="3914d7f2f1c4b36d1d3d854f224493433a5c26b0" translate="yes" xml:space="preserve">
          <source>as if 1d</source>
          <target state="translated">犹如1d</target>
        </trans-unit>
        <trans-unit id="41c08deffdfcbff8dce597ed244b8163bb59c6b8" translate="yes" xml:space="preserve">
          <source>as well as &lt;code&gt;build_ext&lt;/code&gt; and &lt;code&gt;build_clib&lt;/code&gt; commands are enhanced to support Fortran sources.</source>
          <target state="translated">以及 &lt;code&gt;build_ext&lt;/code&gt; 和 &lt;code&gt;build_clib&lt;/code&gt; 命令都得到了增强，以支持Fortran源。</target>
        </trans-unit>
        <trans-unit id="9703981bf526b57d8b2a91b4faf0312184094a24" translate="yes" xml:space="preserve">
          <source>as_array() (in module numpy.ctypeslib)</source>
          <target state="translated">as_array()(在模块numpy.ctypeslib中)</target>
        </trans-unit>
        <trans-unit id="519e18146c5f487cb817ef5031c8ac424c76613c" translate="yes" xml:space="preserve">
          <source>as_ctypes() (in module numpy.ctypeslib)</source>
          <target state="translated">as_ctypes()(在模块numpy.ctypeslib中)</target>
        </trans-unit>
        <trans-unit id="1c1d8d19ab4aa7fe87542451776256312aec530b" translate="yes" xml:space="preserve">
          <source>as_ctypes_type() (in module numpy.ctypeslib)</source>
          <target state="translated">as_ctypes_type()(in module numpy.ctypeslib)</target>
        </trans-unit>
        <trans-unit id="d2a3db50a543cf83b610d850969a82cf692df2c4" translate="yes" xml:space="preserve">
          <source>as_list() (in module numpy.distutils.misc_util)</source>
          <target state="translated">as_list()(在模块numpy.distutils.misc_util中)</target>
        </trans-unit>
        <trans-unit id="075230cd6466b590ee0c722dc432efcfe3c119f5" translate="yes" xml:space="preserve">
          <source>as_series() (in module numpy.polynomial.polyutils)</source>
          <target state="translated">as_series()(in module numpy.polynomial.polyutils)</target>
        </trans-unit>
        <trans-unit id="28fee9b82f5ae65e42527fa39402302fdcaa1c24" translate="yes" xml:space="preserve">
          <source>as_strided() (in module numpy.lib.stride_tricks)</source>
          <target state="translated">as_strided()(在模块numpy.lib.stride_tricks中)</target>
        </trans-unit>
        <trans-unit id="867e9f61afecd3a9e37ccd6ae0ff7c38b6332187" translate="yes" xml:space="preserve">
          <source>asanyarray() (in module numpy)</source>
          <target state="translated">asanyarray()(在numpy模块中)</target>
        </trans-unit>
        <trans-unit id="57fed5a9848ddacba867eec9379491978922730b" translate="yes" xml:space="preserve">
          <source>asarray() (in module numpy)</source>
          <target state="translated">asarray()(在numpy模块中)</target>
        </trans-unit>
        <trans-unit id="7bf8d23acaad30d6cbfa69e2e59470632cd4efde" translate="yes" xml:space="preserve">
          <source>asarray_chkfinite() (in module numpy)</source>
          <target state="translated">asarray_chkfinite()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="e4d9e9ee11b93d4d2a4b05fe5ea24cffbf05630b" translate="yes" xml:space="preserve">
          <source>ascontiguousarray() (in module numpy)</source>
          <target state="translated">ascontiguousarray()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="845ed282e67b1546fe7da06252297b07571f5e87" translate="yes" xml:space="preserve">
          <source>asfarray() (in module numpy)</source>
          <target state="translated">asfarray()(在numpy模块中)</target>
        </trans-unit>
        <trans-unit id="de1f90be7e18c6c1957c721eea19c1a87997c35a" translate="yes" xml:space="preserve">
          <source>asfortranarray() (in module numpy)</source>
          <target state="translated">asfortranarray()(在numpy模块中</target>
        </trans-unit>
        <trans-unit id="4550aeaed1ed9aca459142ab390bc1594c305f32" translate="yes" xml:space="preserve">
          <source>asmatrix() (in module numpy)</source>
          <target state="translated">asmatrix()</target>
        </trans-unit>
        <trans-unit id="2daf3b9e77860d510df5145906aae59cad82cda8" translate="yes" xml:space="preserve">
          <source>asscalar() (in module numpy)</source>
          <target state="translated">asscalar()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="9c5a47c06e905788a569b217928e31492a21ad95" translate="yes" xml:space="preserve">
          <source>assert_allclose() (in module numpy.testing)</source>
          <target state="translated">assert_allclose()(in module numpy.testing)</target>
        </trans-unit>
        <trans-unit id="7d258a6ac26e5a61b289e60f0098b8b7172356cc" translate="yes" xml:space="preserve">
          <source>assert_almost_equal() (in module numpy.testing)</source>
          <target state="translated">assert_almost_equal()(in module numpy.testing)</target>
        </trans-unit>
        <trans-unit id="e23e43d3c19bab48f96df3f85175fea1df8a8a6f" translate="yes" xml:space="preserve">
          <source>assert_approx_equal() (in module numpy.testing)</source>
          <target state="translated">assert_approx_equal()(in module numpy.testing)</target>
        </trans-unit>
        <trans-unit id="50506a489108545f8bafceb4f9d2a83946517b5e" translate="yes" xml:space="preserve">
          <source>assert_array_almost_equal() (in module numpy.testing)</source>
          <target state="translated">assert_array_almost_equal()(in module numpy.testing)</target>
        </trans-unit>
        <trans-unit id="13c2bcc1ad4c47c657b77f257b532cba292d2c1a" translate="yes" xml:space="preserve">
          <source>assert_array_almost_equal_nulp() (in module numpy.testing)</source>
          <target state="translated">assert_array_almost_equal_nulp()(in module numpy.testing)</target>
        </trans-unit>
        <trans-unit id="07e8a17609a256436859a0b1476fe203c877dfd2" translate="yes" xml:space="preserve">
          <source>assert_array_equal() (in module numpy.testing)</source>
          <target state="translated">assert_array_equal()(in module numpy.testing)</target>
        </trans-unit>
        <trans-unit id="80f277ea86033566d980ed020623e39e932dd69c" translate="yes" xml:space="preserve">
          <source>assert_array_less() (in module numpy.testing)</source>
          <target state="translated">assert_array_less()(in module numpy.testing)</target>
        </trans-unit>
        <trans-unit id="2ea8d89e03c995cf3804d556b67197c64bad0c46" translate="yes" xml:space="preserve">
          <source>assert_array_max_ulp() (in module numpy.testing)</source>
          <target state="translated">assert_array_max_ulp()(in module numpy.testing)</target>
        </trans-unit>
        <trans-unit id="c9aab4de6eb692438bb0e404193bb704be829fd8" translate="yes" xml:space="preserve">
          <source>assert_equal() (in module numpy.testing)</source>
          <target state="translated">assert_equal()(在模块numpy.testing中)</target>
        </trans-unit>
        <trans-unit id="c44de8cf34ae3f784d868acb6cbbc40d06f99d86" translate="yes" xml:space="preserve">
          <source>assert_raises() (in module numpy.testing)</source>
          <target state="translated">assert_raises()(in module numpy.testing)</target>
        </trans-unit>
        <trans-unit id="1ff877c978fdd2fde44d148843b01883d709b186" translate="yes" xml:space="preserve">
          <source>assert_raises_regex() (in module numpy.testing)</source>
          <target state="translated">assert_raises_regex()(in module numpy.testing)</target>
        </trans-unit>
        <trans-unit id="a55cd964b5a4b6f70c034d4f7cb41896c2e788d8" translate="yes" xml:space="preserve">
          <source>assert_string_equal() (in module numpy.testing)</source>
          <target state="translated">assert_string_equal()(in module numpy.testing)</target>
        </trans-unit>
        <trans-unit id="09e7146e5259390d1b00df299dbe52351940832d" translate="yes" xml:space="preserve">
          <source>assert_warns() (in module numpy.testing)</source>
          <target state="translated">assert_warns()(in module numpy.testing)</target>
        </trans-unit>
        <trans-unit id="b1b7fcc6b7e7f2edcfddfd6f4f9953679d484a5d" translate="yes" xml:space="preserve">
          <source>assign_fields_by_name() (in module numpy.lib.recfunctions)</source>
          <target state="translated">assign_fields_by_name()(in module numpy.lib.recfunctions)</target>
        </trans-unit>
        <trans-unit id="f54f9517e08fcf16cacc4763d94c152b250ef88e" translate="yes" xml:space="preserve">
          <source>assuming you have the proper permissions to write to the main site- packages directory for the version of Python you are using. For the resulting package to work, you need to create a file named &lt;code&gt;__init__.py&lt;/code&gt; (in the same directory as &lt;code&gt;add.pyf&lt;/code&gt;). Notice the extension module is defined entirely in terms of the &lt;code&gt;add.pyf&lt;/code&gt; and &lt;code&gt;add.f&lt;/code&gt; files. The conversion of the .pyf file to a .c file is handled by &lt;code&gt;numpy.disutils&lt;/code&gt;.</source>
          <target state="translated">假设您具有使用您所使用的Python版本写入主站点包目录的适当权限。为了使生成的包正常工作，您需要创建一个名为 &lt;code&gt;__init__.py&lt;/code&gt; 的文件（与 &lt;code&gt;add.pyf&lt;/code&gt; 在同一目录中）。请注意，扩展模块是完全根据 &lt;code&gt;add.pyf&lt;/code&gt; 和 &lt;code&gt;add.f&lt;/code&gt; 文件定义的。.pyf文件到.c文件的转换由 &lt;code&gt;numpy.disutils&lt;/code&gt; 处理。</target>
        </trans-unit>
        <trans-unit id="1702ae47af6499909e522270271e2781fca16e18" translate="yes" xml:space="preserve">
          <source>astype and string dtype</source>
          <target state="translated">星型和字符串dtype</target>
        </trans-unit>
        <trans-unit id="e455bcaec7dd3d48a53f1e781987111ddea24905" translate="yes" xml:space="preserve">
          <source>astype() (numpy.char.chararray method)</source>
          <target state="translated">astype()(numpy.char.chararray方法)</target>
        </trans-unit>
        <trans-unit id="4ee457007e2d9666b30d79d9cb8e25f231845260" translate="yes" xml:space="preserve">
          <source>at the beginning (&lt;code&gt;when&lt;/code&gt; = {&amp;lsquo;begin&amp;rsquo;, 1}) or the end (&lt;code&gt;when&lt;/code&gt; = {&amp;lsquo;end&amp;rsquo;, 0}) of each period</source>
          <target state="translated">在每个期间的开始（ &lt;code&gt;when&lt;/code&gt; = {''开始'，1}）或结束（ &lt;code&gt;when&lt;/code&gt; = {'结束'，0}）</target>
        </trans-unit>
        <trans-unit id="98018726794f8b04a48022ae18afacaad6b59d5e" translate="yes" xml:space="preserve">
          <source>at the end of a test module will run the tests when that module is called in the python interpreter.</source>
          <target state="translated">在测试模块的结尾,当该模块在python解释器中被调用时,将运行这些测试。</target>
        </trans-unit>
        <trans-unit id="669cc3033f8f95000a31a6adfce2ed59ae5db3d4" translate="yes" xml:space="preserve">
          <source>at() (numpy.ufunc method)</source>
          <target state="translated">at()(numpy.ufunc方法)</target>
        </trans-unit>
        <trans-unit id="2e92211aba53af332937f936bfb7ab0f3c9656bc" translate="yes" xml:space="preserve">
          <source>atleast_1d (in module numpy.ma)</source>
          <target state="translated">atleast_1d (在 numpy.ma 模块中)</target>
        </trans-unit>
        <trans-unit id="2e66dc9e8bfbe64b6c4c546eb3c3d7158e869471" translate="yes" xml:space="preserve">
          <source>atleast_1d() (in module numpy)</source>
          <target state="translated">atleast_1d()(在numpy模块中)</target>
        </trans-unit>
        <trans-unit id="cd3bd8be1ccba564df747fc74d243033a9292186" translate="yes" xml:space="preserve">
          <source>atleast_2d (in module numpy.ma)</source>
          <target state="translated">atleast_2d (in module numpy.ma)</target>
        </trans-unit>
        <trans-unit id="1c3cd375151bed0cbd09bcbebf94702a14bfe83a" translate="yes" xml:space="preserve">
          <source>atleast_2d() (in module numpy)</source>
          <target state="translated">atleast_2d()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="71cfe47d9e6f9d82abd5c019a690cd4b49ca1d32" translate="yes" xml:space="preserve">
          <source>atleast_3d (in module numpy.ma)</source>
          <target state="translated">atleast_3d (in module numpy.ma)</target>
        </trans-unit>
        <trans-unit id="e38eaf801357aa8a43e4de60fcaaaf6ad8635bff" translate="yes" xml:space="preserve">
          <source>atleast_3d() (in module numpy)</source>
          <target state="translated">atleast_3d()(在numpy模块中)</target>
        </trans-unit>
        <trans-unit id="e086ba9c9e10e78de6d782cc24fedd67fde0aa0f" translate="yes" xml:space="preserve">
          <source>attosecond</source>
          <target state="translated">attosecond</target>
        </trans-unit>
        <trans-unit id="2c317cd0735d9046d7675c475fa1c6dce647953f" translate="yes" xml:space="preserve">
          <source>attribute</source>
          <target state="translated">attribute</target>
        </trans-unit>
        <trans-unit id="dcec2bd719fe49afef6e4f31a461d7c2249835bc" translate="yes" xml:space="preserve">
          <source>attribute_identifier - string passed directly to nosetests as &amp;lsquo;-A&amp;rsquo;.</source>
          <target state="translated">attribute_identifier-作为&amp;ldquo; -A&amp;rdquo;直接传递给鼻子测试的字符串。</target>
        </trans-unit>
        <trans-unit id="d7f67a250d8254339cc572b200990d99fe1baf29" translate="yes" xml:space="preserve">
          <source>attributes</source>
          <target state="translated">attributes</target>
        </trans-unit>
        <trans-unit id="20bc9d4304f08f1fabe83150f7982d9b144c8267" translate="yes" xml:space="preserve">
          <source>auditwheel (pip)</source>
          <target state="translated">审计轮</target>
        </trans-unit>
        <trans-unit id="8b2aa87fd715e8fc33515a88f2c942d4d1417b9b" translate="yes" xml:space="preserve">
          <source>automatic type-conversions with minimal memory usage</source>
          <target state="translated">以最小的内存使用量进行自动类型转换</target>
        </trans-unit>
        <trans-unit id="083bcca22f7d139f5a50d8fb6729483051f02a96" translate="yes" xml:space="preserve">
          <source>average for masked arrays &amp;ndash; useful if your data contains &amp;ldquo;missing&amp;rdquo; values</source>
          <target state="translated">掩码数组的平均值&amp;ndash;如果数据包含&amp;ldquo;缺失&amp;rdquo;值，则很有用</target>
        </trans-unit>
        <trans-unit id="3519af104e75d823d0fa1ea84c426de1985bbc61" translate="yes" xml:space="preserve">
          <source>average() (in module numpy)</source>
          <target state="translated">平均()</target>
        </trans-unit>
        <trans-unit id="1e5e77454535016c3c2d70224c9ce7fe93b77743" translate="yes" xml:space="preserve">
          <source>avoid learning C API&amp;rsquo;s</source>
          <target state="translated">避免学习C API</target>
        </trans-unit>
        <trans-unit id="df22c6cc1102e69e22a84c6cbdde07f758c348aa" translate="yes" xml:space="preserve">
          <source>avoids API/reference counting issues</source>
          <target state="translated">避免了API/引用计数问题</target>
        </trans-unit>
        <trans-unit id="3cfe8dce67bb17593948077dcd580eec2efa4053" translate="yes" xml:space="preserve">
          <source>axis</source>
          <target state="translated">axis</target>
        </trans-unit>
        <trans-unit id="b83ef54e8124ee3d778a8e25503d72170ff28af1" translate="yes" xml:space="preserve">
          <source>axis handling</source>
          <target state="translated">轴处理</target>
        </trans-unit>
        <trans-unit id="f954e7263e5df923998fb7db7b641b920f51c0b5" translate="yes" xml:space="preserve">
          <source>axis independent</source>
          <target state="translated">轴独立</target>
        </trans-unit>
        <trans-unit id="1369bfbbe10bd2ebc62f0589fce7ed99832bc438" translate="yes" xml:space="preserve">
          <source>axis, makes an angle at the origin (measured counter-clockwise from that axis), and departs from the origin. The</source>
          <target state="translated">轴,在原点成角(从该轴逆时针方向测量),然后离开原点。该</target>
        </trans-unit>
        <trans-unit id="e9d71f5ee7c92d6dc9e92ffdad17b8bd49418f98" translate="yes" xml:space="preserve">
          <source>b</source>
          <target state="translated">b</target>
        </trans-unit>
        <trans-unit id="e7fa555d28e54760cca9ab22fa3970792f8725e3" translate="yes" xml:space="preserve">
          <source>b (C variable)</source>
          <target state="translated">b(C变量)</target>
        </trans-unit>
        <trans-unit id="f51aa02285bc7bc8412c301ae2c8840fdf599823" translate="yes" xml:space="preserve">
          <source>bartlett() (in module numpy)</source>
          <target state="translated">bartlett()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="1405df66cbe219b0bf6355bc3d60361a8376b6b4" translate="yes" xml:space="preserve">
          <source>base</source>
          <target state="translated">base</target>
        </trans-unit>
        <trans-unit id="a75f3a39cafb8c7f65dea6d083ffeea8039d373b" translate="yes" xml:space="preserve">
          <source>base object</source>
          <target state="translated">基本对象</target>
        </trans-unit>
        <trans-unit id="8f1617b71dc5ca00652e31b46898a3c68d49aa46" translate="yes" xml:space="preserve">
          <source>base_repr() (in module numpy)</source>
          <target state="translated">base_repr()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="870a0ec272f2449210299395f03f3a0fa2ee451d" translate="yes" xml:space="preserve">
          <source>baseclass (numpy.ma.MaskedArray attribute)</source>
          <target state="translated">基类(numpy.ma.MaskedArray属性)</target>
        </trans-unit>
        <trans-unit id="2b0ede751868ba1edd43f74dd5c3372b06d23b4f" translate="yes" xml:space="preserve">
          <source>baseclass() (numpy.ma.masked_array property)</source>
          <target state="translated">baseclass()(numpy.ma.masked_array 属性)</target>
        </trans-unit>
        <trans-unit id="cda1c9d5b218719d60f82af6e4c29ab15397f2a0" translate="yes" xml:space="preserve">
          <source>basic &lt;a href=&quot;reference/routines.fft#routines-fft&quot;&gt;Fourier transforms&lt;/a&gt;</source>
          <target state="translated">基本&lt;a href=&quot;reference/routines.fft#routines-fft&quot;&gt;傅立叶变换&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab1f924527566281758056fb59b8f789a2233485" translate="yes" xml:space="preserve">
          <source>basic &lt;a href=&quot;reference/routines.linalg#routines-linalg&quot;&gt;linear algebra functions&lt;/a&gt;</source>
          <target state="translated">基本&lt;a href=&quot;reference/routines.linalg#routines-linalg&quot;&gt;线性代数函数&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ccc4eb23861f6307170155e1682887c76e1a2e88" translate="yes" xml:space="preserve">
          <source>basis() (numpy.polynomial.chebyshev.Chebyshev class method)</source>
          <target state="translated">basis()(numpy.polynomial.chebyshev.Chebyshev类方法)</target>
        </trans-unit>
        <trans-unit id="ed181e11a7eb0c3173cf4b55f151e061b13c3ba0" translate="yes" xml:space="preserve">
          <source>basis_name (numpy.polynomial.chebyshev.Chebyshev attribute)</source>
          <target state="translated">basis_name (numpy.polynomial.chebyshev.Chebyshev属性)</target>
        </trans-unit>
        <trans-unit id="2e1c8a86a313a7779b1bfcf7cabd8019190084ce" translate="yes" xml:space="preserve">
          <source>be a non-homogeneous stepsize, we minimize the &amp;ldquo;consistency error&amp;rdquo;</source>
          <target state="translated">作为非均匀的步长，我们将&amp;ldquo;一致性误差&amp;rdquo;最小化</target>
        </trans-unit>
        <trans-unit id="0e22fe1595747cabbf0c6dbd3d0193fcaf00847f" translate="yes" xml:space="preserve">
          <source>be a random vector which has components that follow a standard gamma distribution, then</source>
          <target state="translated">是一个随机向量,其分量遵循标准伽马分布,则</target>
        </trans-unit>
        <trans-unit id="68af3b90fc09e7be7c135d5a85ef2cc386d2ccfa" translate="yes" xml:space="preserve">
          <source>beautifulsoup4 (pip)</source>
          <target state="translated">靓汤4(pip)</target>
        </trans-unit>
        <trans-unit id="8a17d8f1826cc2a242f906122028c65263d1c55f" translate="yes" xml:space="preserve">
          <source>before running the examples.</source>
          <target state="translated">在运行例子之前,先要进行测试。</target>
        </trans-unit>
        <trans-unit id="c634276287c8803430a093393b850e2ca2f9f05e" translate="yes" xml:space="preserve">
          <source>bench() (numpy.testing.Tester method)</source>
          <target state="translated">bench()(numpy.testing.Tester方法)</target>
        </trans-unit>
        <trans-unit id="6dc0089ca6ddb35902876f3d59340d14fa3c480f" translate="yes" xml:space="preserve">
          <source>benchmarking NumPy</source>
          <target state="translated">基准测试 NumPy</target>
        </trans-unit>
        <trans-unit id="a295e0bdde1938d1fbfd343e5a3e569e868e1465" translate="yes" xml:space="preserve">
          <source>beta</source>
          <target state="translated">beta</target>
        </trans-unit>
        <trans-unit id="4547f0b1e39eb6afba69c5a54d83e325fbba754c" translate="yes" xml:space="preserve">
          <source>beta() (in module numpy.random)</source>
          <target state="translated">beta()(在numpy.random模块中</target>
        </trans-unit>
        <trans-unit id="370e9b2e420241288c5f58e112540e67765eedf2" translate="yes" xml:space="preserve">
          <source>between the true gradient and its estimate from a linear combination of the neighboring grid-points:</source>
          <target state="translated">真实梯度与相邻网格点线性组合的估计值之间的差距。</target>
        </trans-unit>
        <trans-unit id="3cc146f0b911a8dcd7cb48efd1a6b89b5d9e9dd0" translate="yes" xml:space="preserve">
          <source>bias, ddof arguments to corrcoef</source>
          <target state="translated">偏差、日积月累的争论,使之成为现实。</target>
        </trans-unit>
        <trans-unit id="38e4f23119f7668c81c56c877acdc10f397299d2" translate="yes" xml:space="preserve">
          <source>big-endian</source>
          <target state="translated">big-endian</target>
        </trans-unit>
        <trans-unit id="2c5f3eb11a8562c01ee623d2b5bbe0b69287b0b4" translate="yes" xml:space="preserve">
          <source>binary ufunc</source>
          <target state="translated">二进制UFUNC</target>
        </trans-unit>
        <trans-unit id="2807fac1c9c00a1c46db40fbee0d63dd182e8528" translate="yes" xml:space="preserve">
          <source>binary_repr() (in module numpy)</source>
          <target state="translated">binary_repr()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="98eb14753cfe6bec8773aebbbb98f988613a9af4" translate="yes" xml:space="preserve">
          <source>bincount() (in module numpy)</source>
          <target state="translated">bincount()(在numpy模块中)</target>
        </trans-unit>
        <trans-unit id="192238cb0585f7468729e73aacedb3b60d02ba11" translate="yes" xml:space="preserve">
          <source>binomial() (in module numpy.random)</source>
          <target state="translated">二项式()(在模块numpy.random中</target>
        </trans-unit>
        <trans-unit id="47778dc2debdaa1fe50c3abde2844e068638329e" translate="yes" xml:space="preserve">
          <source>binomial_t (C type)</source>
          <target state="translated">二项式_t (C型)</target>
        </trans-unit>
        <trans-unit id="0255a952f3f47efe67706319101b72f5fc0d536e" translate="yes" xml:space="preserve">
          <source>bit_generator (numpy.random.Generator attribute)</source>
          <target state="translated">bit_generator (numpy.random.Generator属性)</target>
        </trans-unit>
        <trans-unit id="2c596313963d944ee7c9dae1238e7716785af61b" translate="yes" xml:space="preserve">
          <source>bitgen - pointer to the bit generator struct</source>
          <target state="translated">bitgen-指向比特发生器结构的指针。</target>
        </trans-unit>
        <trans-unit id="78ae62068c56331e7460f87a7eaff9291bd90e6f" translate="yes" xml:space="preserve">
          <source>bitgen_t (C type)</source>
          <target state="translated">bitgen_t (C型)</target>
        </trans-unit>
        <trans-unit id="3c27540860076349ae5dffd7d1c6ce8b0639200c" translate="yes" xml:space="preserve">
          <source>bitwise AND operator (Python native and NumPy ufunc)</source>
          <target state="translated">位智 AND 运算符 (Python native and NumPy ufunc)</target>
        </trans-unit>
        <trans-unit id="456c0441d0dc36d493e457bcc2c2427b9c77be54" translate="yes" xml:space="preserve">
          <source>bitwise OR operator (Python native and NumPy ufunc)</source>
          <target state="translated">位智OR运算符 (Python本地和NumPy ufunc)</target>
        </trans-unit>
        <trans-unit id="44682f63c1cea33ef4b51125b720945ba8e1ecba" translate="yes" xml:space="preserve">
          <source>bitwise_and (in module numpy)</source>
          <target state="translated">bitwise_and (在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="e5b8d812c0241efe3ec19fccab0075e28b86ed2a" translate="yes" xml:space="preserve">
          <source>bitwise_or (in module numpy)</source>
          <target state="translated">bitwise_or (在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="e943d9e50c58d11877cd0ed8e40f1e887e0301f3" translate="yes" xml:space="preserve">
          <source>bitwise_xor (in module numpy)</source>
          <target state="translated">bitwise_xor (在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="bd2f1fc9014781d4aac3d755b4c1e915c8569f44" translate="yes" xml:space="preserve">
          <source>blackman() (in module numpy)</source>
          <target state="translated">黑人()</target>
        </trans-unit>
        <trans-unit id="40d81328ca7a1b47c12d1f090a76b27da6e9d73a" translate="yes" xml:space="preserve">
          <source>block() (in module numpy)</source>
          <target state="translated">块()(在numpy模块中)</target>
        </trans-unit>
        <trans-unit id="4762f4c083c54acbd43fdbe16bcb14242aa57d1b" translate="yes" xml:space="preserve">
          <source>blue_text() (in module numpy.distutils.misc_util)</source>
          <target state="translated">blue_text()(在模块numpy.distutils.misc_util中)</target>
        </trans-unit>
        <trans-unit id="d56e968e114e573cfd190c4d3bf6aed6322aa13c" translate="yes" xml:space="preserve">
          <source>bmat() (in module numpy)</source>
          <target state="translated">bmat()(在numpy模块中)</target>
        </trans-unit>
        <trans-unit id="5039d155a71c0a5f7a2b2654ad49cb7ee47a8980" translate="yes" xml:space="preserve">
          <source>bool</source>
          <target state="translated">bool</target>
        </trans-unit>
        <trans-unit id="48647474b89fa8f56ed6bda0f8148a17b51b97bd" translate="yes" xml:space="preserve">
          <source>boolean</source>
          <target state="translated">boolean</target>
        </trans-unit>
        <trans-unit id="d72a486442cabd3f8fe75d717b106695d47f6c72" translate="yes" xml:space="preserve">
          <source>boolean (single boolean array); if there is more than one boolean array as index or the shape does not match exactly, the boolean array will be converted to an integer array instead.</source>
          <target state="translated">boolean(单个布尔数组);如果有多个布尔数组作为索引或形状不完全匹配,布尔数组将被转换为整数组。</target>
        </trans-unit>
        <trans-unit id="55fe08ce363e1662570c4fe7b96c7e56a55568f5" translate="yes" xml:space="preserve">
          <source>breaking up the inner 1-D loop into bufsize chunks (with a possible remainder).</source>
          <target state="translated">将内部的1-D循环分解成bufsize块(可能还有剩余)。</target>
        </trans-unit>
        <trans-unit id="723e98a2d81120cdb2cafeea0da074deed788ae4" translate="yes" xml:space="preserve">
          <source>broadcast an array to a given shape.</source>
          <target state="translated">将一个数组广播到一个给定的形状。</target>
        </trans-unit>
        <trans-unit id="4546e9e027d603e9c2e2dca4965d842153f7f06e" translate="yes" xml:space="preserve">
          <source>broadcast.index</source>
          <target state="translated">broadcast.index</target>
        </trans-unit>
        <trans-unit id="001b43ff0c9a255aabcaf017c15d7f06c9327de8" translate="yes" xml:space="preserve">
          <source>broadcast.iters</source>
          <target state="translated">broadcast.iters</target>
        </trans-unit>
        <trans-unit id="ae463d3c99a46c06a1a04c8ebf434cdf7bea2ab4" translate="yes" xml:space="preserve">
          <source>broadcast.nd</source>
          <target state="translated">broadcast.nd</target>
        </trans-unit>
        <trans-unit id="d9f59b3723747ef995372e2df514a875f0b77266" translate="yes" xml:space="preserve">
          <source>broadcast.ndim</source>
          <target state="translated">broadcast.ndim</target>
        </trans-unit>
        <trans-unit id="58795340849dd72449d2807c5f578701f9a5187a" translate="yes" xml:space="preserve">
          <source>broadcast.numiter</source>
          <target state="translated">broadcast.numiter</target>
        </trans-unit>
        <trans-unit id="56edfa480a13ddef44b9b091ea2882b26a4d728d" translate="yes" xml:space="preserve">
          <source>broadcast.reset()</source>
          <target state="translated">broadcast.reset()</target>
        </trans-unit>
        <trans-unit id="4302be9815d6142b26e931693ba676d717243ff5" translate="yes" xml:space="preserve">
          <source>broadcast.shape</source>
          <target state="translated">broadcast.shape</target>
        </trans-unit>
        <trans-unit id="5bb73758ac5f83a30015a7a88885b5b708cc414e" translate="yes" xml:space="preserve">
          <source>broadcast.size</source>
          <target state="translated">broadcast.size</target>
        </trans-unit>
        <trans-unit id="f9c8a746c2c634ba7fc05eead4fdf32d81d727e6" translate="yes" xml:space="preserve">
          <source>broadcast_arrays() (in module numpy)</source>
          <target state="translated">broadcast_arrays()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="9d40979da018aecb8cdf9396d10f3668ce01d188" translate="yes" xml:space="preserve">
          <source>broadcast_to() (in module numpy)</source>
          <target state="translated">broadcast_to()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="12eea3ddc58ce0010288276b780f9c1c36dc4324" translate="yes" xml:space="preserve">
          <source>broadcastable</source>
          <target state="translated">broadcastable</target>
        </trans-unit>
        <trans-unit id="c0534bdb55aa1d3ed50d4ac96fd147ad08b297d5" translate="yes" xml:space="preserve">
          <source>broadcasting</source>
          <target state="translated">broadcasting</target>
        </trans-unit>
        <trans-unit id="990742f8b49d8a82ae9e774983af03393c251cd2" translate="yes" xml:space="preserve">
          <source>buffers</source>
          <target state="translated">buffers</target>
        </trans-unit>
        <trans-unit id="343029df606fb81c3dcc1ca4beb284c059610b41" translate="yes" xml:space="preserve">
          <source>buffers of the specified size created to handle the data from all the inputs and outputs of a ufunc. The default size of a buffer is 10,000 elements. Whenever buffer-based calculation would be needed, but all input arrays are smaller than the buffer size, those misbehaved or incorrectly-typed arrays will be copied before the calculation proceeds. Adjusting the size of the buffer may therefore alter the speed at which ufunc calculations of various sorts are completed. A simple interface for setting this variable is accessible using the function</source>
          <target state="translated">创建指定大小的缓冲区,用于处理来自ufunc所有输入和输出的数据。缓冲区的默认大小是10,000个元素。每当需要基于缓冲区的计算,但所有的输入数组都小于缓冲区的大小时,那些行为不当或类型错误的数组将在计算进行之前被复制。因此,调整缓冲区的大小可能会改变各种ufunc计算的完成速度。一个简单的界面,可以通过使用函数</target>
        </trans-unit>
        <trans-unit id="9d678511e5d9d9700e0c61588ace1f2f932eb38c" translate="yes" xml:space="preserve">
          <source>build shell independence</source>
          <target state="translated">构建壳独立</target>
        </trans-unit>
        <trans-unit id="984b5b8886ad46f0fdc91e64ad75197f42c78692" translate="yes" xml:space="preserve">
          <source>builtin string and buffer objects</source>
          <target state="translated">内置的字符串和缓冲区对象</target>
        </trans-unit>
        <trans-unit id="968b7707068373728f0f8845a922a8845f8d45a8" translate="yes" xml:space="preserve">
          <source>busday_count() (in module numpy)</source>
          <target state="translated">busday_count()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="3a8e4238aef0503b67a7b98aadcc9c36f624f928" translate="yes" xml:space="preserve">
          <source>busday_offset() (in module numpy)</source>
          <target state="translated">busday_offset()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="9c51c4de75fb39edc344c67ac7e54305add75bf4" translate="yes" xml:space="preserve">
          <source>busdaycalendar (class in numpy)</source>
          <target state="translated">公交日历</target>
        </trans-unit>
        <trans-unit id="04321f572e0fabbee0a1a93777cd88d54e09dd4d" translate="yes" xml:space="preserve">
          <source>busdaycalendar.holidays</source>
          <target state="translated">busdaycalendar.holidays</target>
        </trans-unit>
        <trans-unit id="0bae0b2b6fcf64fd9b8a4f9e45f94bb607c5b5f8" translate="yes" xml:space="preserve">
          <source>busdaycalendar.weekmask</source>
          <target state="translated">busdaycalendar.weekmask</target>
        </trans-unit>
        <trans-unit id="58ad59c7d160d27786d9c7595d41e1b4f63d1bda" translate="yes" xml:space="preserve">
          <source>but an exception is raised when it is incompatible with the input array &lt;code&gt;a&lt;/code&gt;:</source>
          <target state="translated">但是，当它与输入数组 &lt;code&gt;a&lt;/code&gt; 不兼容时，将引发异常：</target>
        </trans-unit>
        <trans-unit id="531c6956528813d7003d99864756505423176fe3" translate="yes" xml:space="preserve">
          <source>but both are subtypes of &lt;a href=&quot;../arrays.scalars#numpy.floating&quot;&gt;&lt;code&gt;floating&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">但两者的亚型&lt;a href=&quot;../arrays.scalars#numpy.floating&quot;&gt; &lt;code&gt;floating&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="93d497268ec26a8d0ca25ea3d3674706f8d76050" translate="yes" xml:space="preserve">
          <source>but different representation in memory</source>
          <target state="translated">异曲同工</target>
        </trans-unit>
        <trans-unit id="de6166af23fd580ad4ad571cccf47df6413c2dd4" translate="yes" xml:space="preserve">
          <source>but if &lt;code&gt;rate = 0&lt;/code&gt; then:</source>
          <target state="translated">但是如果 &lt;code&gt;rate = 0&lt;/code&gt; 则：</target>
        </trans-unit>
        <trans-unit id="27e7449493d258f7bb8348e8f7cd4455f0ad3d56" translate="yes" xml:space="preserve">
          <source>but if every element in the array can be uniquely represented with an equal number of fewer digits, use that many digits for all elements.</source>
          <target state="translated">但如果数组中的每个元素都可以用相同数量的较少的数字来唯一表示,那么就对所有元素使用这么多数字。</target>
        </trans-unit>
        <trans-unit id="fa223914c4449551a292206a3fa939d42c8a4130" translate="yes" xml:space="preserve">
          <source>but the following Python function</source>
          <target state="translated">但下面的Python函数</target>
        </trans-unit>
        <trans-unit id="c633e2eacc0b593ab472c852512249bd4ce0787b" translate="yes" xml:space="preserve">
          <source>by computing a vector &lt;code&gt;x&lt;/code&gt; that minimizes the squared Euclidean 2-norm</source>
          <target state="translated">通过计算向量 &lt;code&gt;x&lt;/code&gt; 来最小化平方的欧几里德2范数</target>
        </trans-unit>
        <trans-unit id="40479b6eef6dbf9dda3d35355ab344bc2bfabcd9" translate="yes" xml:space="preserve">
          <source>by directly taking a view of the masked array as a &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;numpy.ndarray&lt;/code&gt;&lt;/a&gt; or one of its subclass (which is actually what using the &lt;a href=&quot;maskedarray.baseclass#numpy.ma.MaskedArray.data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; attribute does).</source>
          <target state="translated">通过直接将蒙版数组的视图视为&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;numpy.ndarray&lt;/code&gt; &lt;/a&gt;或其子类之一（实际上就是使用&lt;a href=&quot;maskedarray.baseclass#numpy.ma.MaskedArray.data&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt;属性所做的事情）。</target>
        </trans-unit>
        <trans-unit id="d8283daaf9438ff9c1dd10cc76adcff6d06a04ce" translate="yes" xml:space="preserve">
          <source>by using the &lt;a href=&quot;generated/numpy.ma.getdata#numpy.ma.getdata&quot;&gt;&lt;code&gt;getdata&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">通过使用&lt;a href=&quot;generated/numpy.ma.getdata#numpy.ma.getdata&quot;&gt; &lt;code&gt;getdata&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="891bb830afcfe6ae4400a7ba2555850af073edab" translate="yes" xml:space="preserve">
          <source>byte-array indices now raises an IndexError</source>
          <target state="translated">字节数组索引现在会引发IndexError。</target>
        </trans-unit>
        <trans-unit id="2f3195d84af65fc8e872abda66a3c22b84207e67" translate="yes" xml:space="preserve">
          <source>byte_bounds() (in module numpy)</source>
          <target state="translated">byte_bounds()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="05bff6641f8f88fd248a88fc2ffe316232755974" translate="yes" xml:space="preserve">
          <source>byteorder (numpy.dtype attribute)</source>
          <target state="translated">字节序(numpy.dtype属性)</target>
        </trans-unit>
        <trans-unit id="a7cfaee70ac85e8ac9464a87c3ea62f1b38a4c08" translate="yes" xml:space="preserve">
          <source>bytes() (in module numpy.random)</source>
          <target state="translated">bytes()(在模块numpy.random中)</target>
        </trans-unit>
        <trans-unit id="2fb0d59df1803049bc028c930a7b7b70aa773ae3" translate="yes" xml:space="preserve">
          <source>byteswap() (numpy.char.chararray method)</source>
          <target state="translated">byteswap()(numpy.char.chararray方法)</target>
        </trans-unit>
        <trans-unit id="84a516841ba77a5b4648de2cd0dfcb30ea46dbb4" translate="yes" xml:space="preserve">
          <source>c</source>
          <target state="translated">c</target>
        </trans-unit>
        <trans-unit id="7241b8d6ac40d7108736b27bb1013a7038ff0aab" translate="yes" xml:space="preserve">
          <source>c() (numpy.poly1d property)</source>
          <target state="translated">c()(numpy.poly1d属性)</target>
        </trans-unit>
        <trans-unit id="3625d392a7e5fce41f29d1e8016b62260e625c63" translate="yes" xml:space="preserve">
          <source>c_ (in module numpy)</source>
          <target state="translated">c_(在numpy模块中)</target>
        </trans-unit>
        <trans-unit id="1073936e61f1b10ce87f9dbff9b82ef782adee2b" translate="yes" xml:space="preserve">
          <source>call the iterator&amp;rsquo;s &lt;code&gt;close&lt;/code&gt; method once finished iterating, which will trigger the write-back.</source>
          <target state="translated">完成迭代后，调用迭代器的 &lt;code&gt;close&lt;/code&gt; 方法，这将触发回写。</target>
        </trans-unit>
        <trans-unit id="63aa3c962332c23c697960da2a61a9def61426e1" translate="yes" xml:space="preserve">
          <source>call: Call a function specified using the &lt;a href=&quot;numpy.seterrcall#numpy.seterrcall&quot;&gt;&lt;code&gt;seterrcall&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">call：调用使用&lt;a href=&quot;numpy.seterrcall#numpy.seterrcall&quot;&gt; &lt;code&gt;seterrcall&lt;/code&gt; &lt;/a&gt;函数指定的函数。</target>
        </trans-unit>
        <trans-unit id="51708db3ecef0cfd27706b2aa23721be5883b75a" translate="yes" xml:space="preserve">
          <source>calls &lt;code&gt;val = myiter.next()&lt;/code&gt; repeatedly until &lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#StopIteration&quot;&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/a&gt; is raised by the iterator. There are several ways to iterate over an array that may be useful: default iteration, flat iteration, and</source>
          <target state="translated">重复调用 &lt;code&gt;val = myiter.next()&lt;/code&gt; ，直到迭代器引发&lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#StopIteration&quot;&gt; &lt;code&gt;StopIteration&lt;/code&gt; &lt;/a&gt;为止。有几种遍历数组的方法可能有用：默认迭代，平面迭代和</target>
        </trans-unit>
        <trans-unit id="58a9aa0c99c08f84a5d8f86ef3ad9ad7c8f592db" translate="yes" xml:space="preserve">
          <source>calls &lt;code&gt;val = next(myiter)&lt;/code&gt; repeatedly until &lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#StopIteration&quot;&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/a&gt; is raised by the iterator. There are several ways to iterate over an array that may be useful: default iteration, flat iteration, and</source>
          <target state="translated">重复调用 &lt;code&gt;val = next(myiter)&lt;/code&gt; ，直到迭代器提高&lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#StopIteration&quot;&gt; &lt;code&gt;StopIteration&lt;/code&gt; &lt;/a&gt;为止。有几种遍历数组的方法可能有用：默认迭代，平面迭代和</target>
        </trans-unit>
        <trans-unit id="6ccb45502776bafe9e95a8e70c928dd1accf9c18" translate="yes" xml:space="preserve">
          <source>can also interface to existing C code</source>
          <target state="translated">也可以与现有的C代码接口</target>
        </trans-unit>
        <trans-unit id="1f6b5007ed0f906d0aabf1f3faa976bdeb00ac24" translate="yes" xml:space="preserve">
          <source>can be made safer by replacing with:</source>
          <target state="translated">可以用以下方式代替,使其更加安全:</target>
        </trans-unit>
        <trans-unit id="04a6443b6b00d5feec06092c3ea4c9407c745bf1" translate="yes" xml:space="preserve">
          <source>can cause performance problems that are nearly impossible to optimize out</source>
          <target state="translated">会导致几乎无法优化的性能问题。</target>
        </trans-unit>
        <trans-unit id="9c960ee5bb6c4b0a8f37cfe5f81174508cf2cf01" translate="yes" xml:space="preserve">
          <source>can code in pseudo python and generate C code</source>
          <target state="translated">能用伪Python编码,并能生成C代码。</target>
        </trans-unit>
        <trans-unit id="247fa9a6acb5f36703e35b6e1cd9e3d20b4304ba" translate="yes" xml:space="preserve">
          <source>can embed pure C code in Python module and have weave extract, generate interfaces and compile, etc.</source>
          <target state="translated">可以在Python模块中嵌入纯C代码,并有编织提取、生成接口和编译等功能。</target>
        </trans-unit>
        <trans-unit id="83198d2750007ba12dcc873d1cb5e77ea69a1864" translate="yes" xml:space="preserve">
          <source>can turn many numpy expressions into C code</source>
          <target state="translated">可以将许多numpy表达式转化为C代码。</target>
        </trans-unit>
        <trans-unit id="181cb0703490224c94eaf1abf75448f995070072" translate="yes" xml:space="preserve">
          <source>can&amp;rsquo;t use for writing code to be turned into C extensions, only a wrapper tool.</source>
          <target state="translated">不能用于编写要转换为C扩展的代码，只能使用包装器工具。</target>
        </trans-unit>
        <trans-unit id="2e15bc1099f7ca29e948714a9950828090d32a9f" translate="yes" xml:space="preserve">
          <source>can_cast() (in module numpy)</source>
          <target state="translated">can_cast()(在模块numpy中)</target>
        </trans-unit>
        <trans-unit id="01ea5970d70ac5f73a36e071b5c4433bc114cd92" translate="yes" xml:space="preserve">
          <source>cancastscalarkindto</source>
          <target state="translated">cancastscalarkindto</target>
        </trans-unit>
        <trans-unit id="5502d07d8688e83594cf91157dbb3e6ad5aa71b4" translate="yes" xml:space="preserve">
          <source>cancastto</source>
          <target state="translated">cancastto</target>
        </trans-unit>
        <trans-unit id="0daf2be4891f2e673ff31b7e826146f9bf603a07" translate="yes" xml:space="preserve">
          <source>capitalize() (in module numpy.char)</source>
          <target state="translated">资本化()(在模块numpy.char中)</target>
        </trans-unit>
        <trans-unit id="b7685cdd4930f79033d05da8aac4af9c9c9ab92b" translate="yes" xml:space="preserve">
          <source>capsule (numpy.random.BitGenerator attribute)</source>
          <target state="translated">蒴(numpy.random.BitGenerator属性</target>
        </trans-unit>
        <trans-unit id="f8f874fd7d657cad9485fea57c14c4628eab7d58" translate="yes" xml:space="preserve">
          <source>cast() (numpy.polynomial.chebyshev.Chebyshev class method)</source>
          <target state="translated">cast()(numpy.polynomial.chebyshev.Chebyshev类方法)</target>
        </trans-unit>
        <trans-unit id="a7e9b3430d204f0df99d98d8c03dfcf376a8c649" translate="yes" xml:space="preserve">
          <source>castdict</source>
          <target state="translated">castdict</target>
        </trans-unit>
        <trans-unit id="affff8eb8a68041f4ab3a5a5bf0192628a847dc9" translate="yes" xml:space="preserve">
          <source>castfunc (C function)</source>
          <target state="translated">函数库</target>
        </trans-unit>
        <trans-unit id="2c2efb534915503faffffe3fa6b42bf0fe2cc020" translate="yes" xml:space="preserve">
          <source>casting rules</source>
          <target state="translated">铸造规则</target>
        </trans-unit>
        <trans-unit id="10684720a57a4948965feea00dac3532703b4bba" translate="yes" xml:space="preserve">
          <source>cbrt (in module numpy)</source>
          <target state="translated">冷轧机</target>
        </trans-unit>
        <trans-unit id="8f0e4cafc540784e5c7143458d0bb0f257e5dbc9" translate="yes" xml:space="preserve">
          <source>ceil (in module numpy)</source>
          <target state="translated">天花板</target>
        </trans-unit>
        <trans-unit id="a70b53611c7b221dadeffa493d5a52fd82a9dbc0" translate="yes" xml:space="preserve">
          <source>center() (in module numpy.char)</source>
          <target state="translated">中心()</target>
        </trans-unit>
        <trans-unit id="856d967d6d0fe50b9132732fe903223b5d1854c7" translate="yes" xml:space="preserve">
          <source>cffi (numpy.random.BitGenerator attribute)</source>
          <target state="translated">cffi (numpy.random.BitGenerator属性)</target>
        </trans-unit>
        <trans-unit id="b491db843ce6ae6481567884ceb0e319eff3c631" translate="yes" xml:space="preserve">
          <source>char (numpy.dtype attribute)</source>
          <target state="translated">char (numpy.dtype attribute)</target>
        </trans-unit>
        <trans-unit id="34e3e632ca42fd404683a5e2d24a06327726c052" translate="yes" xml:space="preserve">
          <source>character arrays</source>
          <target state="translated">字符数组</target>
        </trans-unit>
        <trans-unit id="3c86c2f390efb57ee3dacae11c8b0b41789a7b72" translate="yes" xml:space="preserve">
          <source>chararray (class in numpy)</source>
          <target state="translated">恰拉图</target>
        </trans-unit>
        <trans-unit id="ebef4e6bdecc3f0df29f7de5c3e87a0b7d64410d" translate="yes" xml:space="preserve">
          <source>chararray.T</source>
          <target state="translated">chararray.T</target>
        </trans-unit>
        <trans-unit id="a0886dd26712f2fe3f62874d7a7635cbe157ff05" translate="yes" xml:space="preserve">
          <source>chararray.argsort()</source>
          <target state="translated">chararray.argsort()</target>
        </trans-unit>
        <trans-unit id="e34e755af986f23fd5041b8b7cc617e6754456b3" translate="yes" xml:space="preserve">
          <source>chararray.astype()</source>
          <target state="translated">chararray.astype()</target>
        </trans-unit>
        <trans-unit id="8c228d15af6ce72f8781676ab954dac9c06550da" translate="yes" xml:space="preserve">
          <source>chararray.base</source>
          <target state="translated">chararray.base</target>
        </trans-unit>
        <trans-unit id="96f2e7f4869844d623e92591aab70f5f6e24214b" translate="yes" xml:space="preserve">
          <source>chararray.copy()</source>
          <target state="translated">chararray.copy()</target>
        </trans-unit>
        <trans-unit id="b315fbac0e29f3fc03c73b36e10351d32da376ee" translate="yes" xml:space="preserve">
          <source>chararray.count()</source>
          <target state="translated">chararray.count()</target>
        </trans-unit>
        <trans-unit id="3af38aab24ccb67d2c9449b1addc4f3dde89b66e" translate="yes" xml:space="preserve">
          <source>chararray.ctypes</source>
          <target state="translated">chararray.ctypes</target>
        </trans-unit>
        <trans-unit id="6421e04608afd1aa482a92517e5d34846a27c85c" translate="yes" xml:space="preserve">
          <source>chararray.data</source>
          <target state="translated">chararray.data</target>
        </trans-unit>
        <trans-unit id="4a0232137ab8b8ab246e3e2e1fc2820c98db9e86" translate="yes" xml:space="preserve">
          <source>chararray.decode()</source>
          <target state="translated">chararray.decode()</target>
        </trans-unit>
        <trans-unit id="889579d431306f233f264aaa2f522cd8002799ba" translate="yes" xml:space="preserve">
          <source>chararray.dtype</source>
          <target state="translated">chararray.dtype</target>
        </trans-unit>
        <trans-unit id="8a35d98272bae2bee59431afb0d19f25eb7ade8d" translate="yes" xml:space="preserve">
          <source>chararray.dump()</source>
          <target state="translated">chararray.dump()</target>
        </trans-unit>
        <trans-unit id="8a1b2985e51ca160b7ec10c06b5046f671382d74" translate="yes" xml:space="preserve">
          <source>chararray.dumps()</source>
          <target state="translated">chararray.dumps()</target>
        </trans-unit>
        <trans-unit id="03b0811474628f6be4083acb70378eab2aa8a130" translate="yes" xml:space="preserve">
          <source>chararray.encode()</source>
          <target state="translated">chararray.encode()</target>
        </trans-unit>
        <trans-unit id="d045ecd37690ed3dafe37dd487f97399fad88ad6" translate="yes" xml:space="preserve">
          <source>chararray.endswith()</source>
          <target state="translated">chararray.endswith()</target>
        </trans-unit>
        <trans-unit id="0ffcdb5d9c2c0ab6a11f7560e2778b662c6ead5d" translate="yes" xml:space="preserve">
          <source>chararray.expandtabs()</source>
          <target state="translated">chararray.expandtabs()</target>
        </trans-unit>
        <trans-unit id="03720bacb068488037411665dd5084d8dbce517c" translate="yes" xml:space="preserve">
          <source>chararray.fill()</source>
          <target state="translated">chararray.fill()</target>
        </trans-unit>
        <trans-unit id="dd727bc24ae8c548b7423414ac6783801eefda47" translate="yes" xml:space="preserve">
          <source>chararray.find()</source>
          <target state="translated">chararray.find()</target>
        </trans-unit>
        <trans-unit id="63f3e3ccd095b73426fac852f3ee7bf59e936f64" translate="yes" xml:space="preserve">
          <source>chararray.flags</source>
          <target state="translated">chararray.flags</target>
        </trans-unit>
        <trans-unit id="21002856b53a6441f0d5e344c5d48be638767e39" translate="yes" xml:space="preserve">
          <source>chararray.flat</source>
          <target state="translated">chararray.flat</target>
        </trans-unit>
        <trans-unit id="095da7c453a206efaff703877886586fd5685d01" translate="yes" xml:space="preserve">
          <source>chararray.flatten()</source>
          <target state="translated">chararray.flatten()</target>
        </trans-unit>
        <trans-unit id="8c8606ecd97087d8212bcffc68979bf5329d8c7b" translate="yes" xml:space="preserve">
          <source>chararray.getfield()</source>
          <target state="translated">chararray.getfield()</target>
        </trans-unit>
        <trans-unit id="5d0dfc685f3a58431ab287e68de034eb55961f99" translate="yes" xml:space="preserve">
          <source>chararray.imag</source>
          <target state="translated">chararray.imag</target>
        </trans-unit>
        <trans-unit id="d0b8500695c7409aeea012b6b809d4fe43bcb3d7" translate="yes" xml:space="preserve">
          <source>chararray.index()</source>
          <target state="translated">chararray.index()</target>
        </trans-unit>
        <trans-unit id="acb20c4bd8ebe0be3bc2cfd18b3e59c42c447154" translate="yes" xml:space="preserve">
          <source>chararray.isalnum()</source>
          <target state="translated">chararray.isalnum()</target>
        </trans-unit>
        <trans-unit id="a66ecb9b2c5e5b5fcb6b047cb4c9e31417d5c13b" translate="yes" xml:space="preserve">
          <source>chararray.isalpha()</source>
          <target state="translated">chararray.isalpha()</target>
        </trans-unit>
        <trans-unit id="143613a65da7c189daeb4faf53c4810096e83b3d" translate="yes" xml:space="preserve">
          <source>chararray.isdecimal()</source>
          <target state="translated">chararray.isdecimal()</target>
        </trans-unit>
        <trans-unit id="c4e0213c0d37ff358d18d2ca9e3241f9abbb113c" translate="yes" xml:space="preserve">
          <source>chararray.isdigit()</source>
          <target state="translated">chararray.isdigit()</target>
        </trans-unit>
        <trans-unit id="d768e3fa5ec445042ffe66547e027375aba3e72c" translate="yes" xml:space="preserve">
          <source>chararray.islower()</source>
          <target state="translated">chararray.islower()</target>
        </trans-unit>
        <trans-unit id="5ce33bad5fcbe9bb8578ba7979a9d3d712661922" translate="yes" xml:space="preserve">
          <source>chararray.isnumeric()</source>
          <target state="translated">chararray.isnumeric()</target>
        </trans-unit>
        <trans-unit id="7563dfe1944e68a7fe7b7a770ec1e9af568f7f71" translate="yes" xml:space="preserve">
          <source>chararray.isspace()</source>
          <target state="translated">chararray.isspace()</target>
        </trans-unit>
        <trans-unit id="94a0e9047845c243e494978ec22ee72f09f8722a" translate="yes" xml:space="preserve">
          <source>chararray.istitle()</source>
          <target state="translated">chararray.istitle()</target>
        </trans-unit>
        <trans-unit id="ff973ce849e182d387ea033478c5ecd4f26666ca" translate="yes" xml:space="preserve">
          <source>chararray.isupper()</source>
          <target state="translated">chararray.isupper()</target>
        </trans-unit>
        <trans-unit id="07b3bb5dfab61ae981a8f0a3dcb84be6091ed056" translate="yes" xml:space="preserve">
          <source>chararray.item()</source>
          <target state="translated">chararray.item()</target>
        </trans-unit>
        <trans-unit id="de8c59892875c62ffc1a1ce48b04578445571240" translate="yes" xml:space="preserve">
          <source>chararray.itemsize</source>
          <target state="translated">chararray.itemsize</target>
        </trans-unit>
        <trans-unit id="f65fa52d4dbbea12feeaca91ccf8c76544703126" translate="yes" xml:space="preserve">
          <source>chararray.join()</source>
          <target state="translated">chararray.join()</target>
        </trans-unit>
        <trans-unit id="020a18b7b7ef5f3e1d15f46c736aae923e0320a4" translate="yes" xml:space="preserve">
          <source>chararray.ljust()</source>
          <target state="translated">chararray.ljust()</target>
        </trans-unit>
        <trans-unit id="85549df2e98225b226578b8b2cf28279d40f2677" translate="yes" xml:space="preserve">
          <source>chararray.lower()</source>
          <target state="translated">chararray.lower()</target>
        </trans-unit>
        <trans-unit id="9cc5e792d68757d5452a0a7392e5a5593359bdaa" translate="yes" xml:space="preserve">
          <source>chararray.lstrip()</source>
          <target state="translated">chararray.lstrip()</target>
        </trans-unit>
        <trans-unit id="712efe2d872fefe323b3cb4f74a095c6089f631e" translate="yes" xml:space="preserve">
          <source>chararray.nbytes</source>
          <target state="translated">chararray.nbytes</target>
        </trans-unit>
        <trans-unit id="a5da84ca381b2bcb88df35a6fa61a64e7dfe0ec5" translate="yes" xml:space="preserve">
          <source>chararray.ndim</source>
          <target state="translated">chararray.ndim</target>
        </trans-unit>
        <trans-unit id="53bcee73d053a28b4c7062ec965a0625b9ce5f32" translate="yes" xml:space="preserve">
          <source>chararray.nonzero()</source>
          <target state="translated">chararray.nonzero()</target>
        </trans-unit>
        <trans-unit id="2b1d59cbb6e6290532ba07416863d4ccff19bb5d" translate="yes" xml:space="preserve">
          <source>chararray.put()</source>
          <target state="translated">chararray.put()</target>
        </trans-unit>
        <trans-unit id="4c145fdafdb1b4f697e008772eb81d24c87f31c4" translate="yes" xml:space="preserve">
          <source>chararray.ravel()</source>
          <target state="translated">chararray.ravel()</target>
        </trans-unit>
        <trans-unit id="82a4a1658890715852e4b3f7954cb7dce6bdc407" translate="yes" xml:space="preserve">
          <source>chararray.real</source>
          <target state="translated">chararray.real</target>
        </trans-unit>
        <trans-unit id="bc49c60fae14a029c270fa2ce5636735f33304da" translate="yes" xml:space="preserve">
          <source>chararray.repeat()</source>
          <target state="translated">chararray.repeat()</target>
        </trans-unit>
        <trans-unit id="e4057ac55ebaae8eb4ccf3adcb9346cac1e18558" translate="yes" xml:space="preserve">
          <source>chararray.replace()</source>
          <target state="translated">chararray.replace()</target>
        </trans-unit>
        <trans-unit id="d27ed5ad9cc1f037913419d39f635cb70b5a3e3c" translate="yes" xml:space="preserve">
          <source>chararray.reshape()</source>
          <target state="translated">chararray.reshape()</target>
        </trans-unit>
        <trans-unit id="7c55368d49823a88748b77a3c014c418e7eafbf4" translate="yes" xml:space="preserve">
          <source>chararray.resize()</source>
          <target state="translated">chararray.resize()</target>
        </trans-unit>
        <trans-unit id="e17143f324af78cb4a5753b231c1e3f7aa611c83" translate="yes" xml:space="preserve">
          <source>chararray.rfind()</source>
          <target state="translated">chararray.rfind()</target>
        </trans-unit>
        <trans-unit id="4239c5ca5f8656ae9592f0e373ca0a9215cd52f9" translate="yes" xml:space="preserve">
          <source>chararray.rindex()</source>
          <target state="translated">chararray.rindex()</target>
        </trans-unit>
        <trans-unit id="f0a9c1fe3e4518d3ee683abedd9fee18d38f3bc8" translate="yes" xml:space="preserve">
          <source>chararray.rjust()</source>
          <target state="translated">chararray.rjust()</target>
        </trans-unit>
        <trans-unit id="306a53b506623059a6b9028c93ce8fa2c428a624" translate="yes" xml:space="preserve">
          <source>chararray.rsplit()</source>
          <target state="translated">chararray.rsplit()</target>
        </trans-unit>
        <trans-unit id="1d5eb548163962da5b9d96b40b7f9fc01b7359ad" translate="yes" xml:space="preserve">
          <source>chararray.rstrip()</source>
          <target state="translated">chararray.rstrip()</target>
        </trans-unit>
        <trans-unit id="50b0ad482eabd1fc95445d8eb938a47d547b824e" translate="yes" xml:space="preserve">
          <source>chararray.searchsorted()</source>
          <target state="translated">chararray.searchsorted()</target>
        </trans-unit>
        <trans-unit id="c8a1269d773a72a94193552a016300bc1a7bc267" translate="yes" xml:space="preserve">
          <source>chararray.setfield()</source>
          <target state="translated">chararray.setfield()</target>
        </trans-unit>
        <trans-unit id="fa7150b3d4a7868b081e2994071dacf7abe8e627" translate="yes" xml:space="preserve">
          <source>chararray.setflags()</source>
          <target state="translated">chararray.setflags()</target>
        </trans-unit>
        <trans-unit id="30076fe7af2da7e4387648aa6c1dba67a4399c0f" translate="yes" xml:space="preserve">
          <source>chararray.shape</source>
          <target state="translated">chararray.shape</target>
        </trans-unit>
        <trans-unit id="d6e9ddd56ac3e624e2bdf0a0082f90804d58815b" translate="yes" xml:space="preserve">
          <source>chararray.size</source>
          <target state="translated">chararray.size</target>
        </trans-unit>
        <trans-unit id="bc7a8f4797b23871a9cd118dee9e7135be60f447" translate="yes" xml:space="preserve">
          <source>chararray.sort()</source>
          <target state="translated">chararray.sort()</target>
        </trans-unit>
        <trans-unit id="8f770eef8be4cc73ef56d96593ba3b62decb2a9c" translate="yes" xml:space="preserve">
          <source>chararray.split()</source>
          <target state="translated">chararray.split()</target>
        </trans-unit>
        <trans-unit id="2dc07b811ca25bd05973befbd2b31ab3c7596fda" translate="yes" xml:space="preserve">
          <source>chararray.splitlines()</source>
          <target state="translated">chararray.splitlines()</target>
        </trans-unit>
        <trans-unit id="04935a142bacf27094c9711e3676609f938bf684" translate="yes" xml:space="preserve">
          <source>chararray.squeeze()</source>
          <target state="translated">chararray.squeeze()</target>
        </trans-unit>
        <trans-unit id="92b089013501291ca2d9ad9990b60bc62e6f5ad3" translate="yes" xml:space="preserve">
          <source>chararray.startswith()</source>
          <target state="translated">chararray.startswith()</target>
        </trans-unit>
        <trans-unit id="c6ff09354c723678c95a1d20b56ca7ae9157623e" translate="yes" xml:space="preserve">
          <source>chararray.strides</source>
          <target state="translated">chararray.strides</target>
        </trans-unit>
        <trans-unit id="594a551054b5eeb02ba5ac82daf5264a7c130b73" translate="yes" xml:space="preserve">
          <source>chararray.strip()</source>
          <target state="translated">chararray.strip()</target>
        </trans-unit>
        <trans-unit id="3d89d85706c10d79c9c1a94b4d71f2caea0731c1" translate="yes" xml:space="preserve">
          <source>chararray.swapaxes()</source>
          <target state="translated">chararray.swapaxes()</target>
        </trans-unit>
        <trans-unit id="ed54ca8f1e84b329dd5dfe5f4bcecc51b7949574" translate="yes" xml:space="preserve">
          <source>chararray.swapcase()</source>
          <target state="translated">chararray.swapcase()</target>
        </trans-unit>
        <trans-unit id="606dd5443068499af38925689683c491d45d23a0" translate="yes" xml:space="preserve">
          <source>chararray.take()</source>
          <target state="translated">chararray.take()</target>
        </trans-unit>
        <trans-unit id="6b892ea46a6a519b8e38bfeb07f8043b913eead2" translate="yes" xml:space="preserve">
          <source>chararray.title()</source>
          <target state="translated">chararray.title()</target>
        </trans-unit>
        <trans-unit id="33b76d2d94f872f842d04fb34ec6a743974f7604" translate="yes" xml:space="preserve">
          <source>chararray.tofile()</source>
          <target state="translated">chararray.tofile()</target>
        </trans-unit>
        <trans-unit id="bbfc507797dad886c94f8f1337de372cd00cd704" translate="yes" xml:space="preserve">
          <source>chararray.tolist()</source>
          <target state="translated">chararray.tolist()</target>
        </trans-unit>
        <trans-unit id="c6cc16936930410ff18660ad5d73749bcc2b6a63" translate="yes" xml:space="preserve">
          <source>chararray.tostring()</source>
          <target state="translated">chararray.tostring()</target>
        </trans-unit>
        <trans-unit id="01d2b1250e07e89f6bbba7fab6c22db228489f41" translate="yes" xml:space="preserve">
          <source>chararray.translate()</source>
          <target state="translated">chararray.translate()</target>
        </trans-unit>
        <trans-unit id="0e6343e9c9a7e24f84b6a29a7abbc9f407502b9c" translate="yes" xml:space="preserve">
          <source>chararray.transpose()</source>
          <target state="translated">chararray.transpose()</target>
        </trans-unit>
        <trans-unit id="90bfa55cfb3d0b77bb03ab483ac428e065685fe3" translate="yes" xml:space="preserve">
          <source>chararray.upper()</source>
          <target state="translated">chararray.upper()</target>
        </trans-unit>
        <trans-unit id="00c5462c720bb4df0cee44c74b658ccf3eb3ea6a" translate="yes" xml:space="preserve">
          <source>chararray.view()</source>
          <target state="translated">chararray.view()</target>
        </trans-unit>
        <trans-unit id="64dcdfb99c030871657300e47131f41ed74ed92e" translate="yes" xml:space="preserve">
          <source>chararray.zfill()</source>
          <target state="translated">chararray.zfill()</target>
        </trans-unit>
        <trans-unit id="7135cf4d6d472ba308e86628bd5e53b6a8669ca0" translate="yes" xml:space="preserve">
          <source>chararrays should be created using &lt;a href=&quot;numpy.char.array#numpy.char.array&quot;&gt;&lt;code&gt;numpy.char.array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;numpy.char.asarray#numpy.char.asarray&quot;&gt;&lt;code&gt;numpy.char.asarray&lt;/code&gt;&lt;/a&gt;, rather than this constructor directly.</source>
          <target state="translated">chararrays应该使用&lt;a href=&quot;numpy.char.array#numpy.char.array&quot;&gt; &lt;code&gt;numpy.char.array&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;numpy.char.asarray#numpy.char.asarray&quot;&gt; &lt;code&gt;numpy.char.asarray&lt;/code&gt; &lt;/a&gt;创建，而不是直接使用此构造函数。</target>
        </trans-unit>
        <trans-unit id="fc4e5ec9d57b70e0c39f7e813893f89c9a80fe3e" translate="yes" xml:space="preserve">
          <source>cheb2poly() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">cheb2poly()(在模块numpy.polynomial.chebyshev中)</target>
        </trans-unit>
        <trans-unit id="3440ab75f6b82c2a036c511b9ccc46d2cef63f94" translate="yes" xml:space="preserve">
          <source>chebadd() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebadd()(在模块numpy.polynomial.chebyshev中)</target>
        </trans-unit>
        <trans-unit id="1520dc687ff17f4efde2433cb958a7572b6c9a51" translate="yes" xml:space="preserve">
          <source>chebcompanion() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebcompanion()(在模块numpy.polynomial.chebyshev中)</target>
        </trans-unit>
        <trans-unit id="283bf829ae11b76f46c254e5397f48a4d6a2c1ea" translate="yes" xml:space="preserve">
          <source>chebder() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebder()(in module numpy.polynomial.chebyshev)</target>
        </trans-unit>
        <trans-unit id="8af5e208c369e3cc5c795056a1979916cd2e8062" translate="yes" xml:space="preserve">
          <source>chebdiv() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebdiv()(在模块numpy.polynomial.chebyshev中)</target>
        </trans-unit>
        <trans-unit id="c2e516f041054a163f30e2394e97525d80ca69ef" translate="yes" xml:space="preserve">
          <source>chebdomain (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebdomain (in module numpy.polynomial.chebyshev)</target>
        </trans-unit>
        <trans-unit id="440906f563093ff46cdc3ff33a6ac7b49554e35a" translate="yes" xml:space="preserve">
          <source>chebfit() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebfit()(in module numpy.polynomial.chebyshev)</target>
        </trans-unit>
        <trans-unit id="98253cbfd6a53701a6ceb155b973cf842bd16b6c" translate="yes" xml:space="preserve">
          <source>chebfromroots() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebfromroots()(在模块numpy.polynomial.chebyshev中)</target>
        </trans-unit>
        <trans-unit id="f12f34c002790fc3341b76a90412731c56ace9ec" translate="yes" xml:space="preserve">
          <source>chebgauss() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebgauss()(在模块numpy.polynomial.chebyshev中)</target>
        </trans-unit>
        <trans-unit id="2a151bb776d8947d62ee88c17dc1e47886d65aec" translate="yes" xml:space="preserve">
          <source>chebgrid2d() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebgrid2d()(在模块numpy.polynomial.chebyshev中)</target>
        </trans-unit>
        <trans-unit id="818d41a91a1275420f36ba4156075f70252ff936" translate="yes" xml:space="preserve">
          <source>chebgrid3d() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebgrid3d()(在模块numpy.polynomial.chebyshev中)</target>
        </trans-unit>
        <trans-unit id="6dc43b12197028b0b12a95a6918dda98bb21d47b" translate="yes" xml:space="preserve">
          <source>chebint() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebint()(在模块numpy.polynomial.chebyshev中)</target>
        </trans-unit>
        <trans-unit id="5f6db99d180bb90b16cec4ef24c682d9b6d8b909" translate="yes" xml:space="preserve">
          <source>chebinterpolate() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebinterpolate()(在模块numpy.polynomial.chebyshev中)</target>
        </trans-unit>
        <trans-unit id="e7b9701d093a4a697890e79d2900bda007298b89" translate="yes" xml:space="preserve">
          <source>chebline() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebline()(in module numpy.polynomial.chebyshev)</target>
        </trans-unit>
        <trans-unit id="faf615bfb6bae6a9922f816b167f3cf8aa489622" translate="yes" xml:space="preserve">
          <source>chebmul() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebmul()(在模块numpy.polynomial.chebyshev中)</target>
        </trans-unit>
        <trans-unit id="9db00ee7c3aab8f4af155d027140dc55a7749be1" translate="yes" xml:space="preserve">
          <source>chebmulx() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebmulx()(在模块numpy.polynomial.chebyshev中)</target>
        </trans-unit>
        <trans-unit id="326160578192c9fcae4a678a4b79db6d7551e8b2" translate="yes" xml:space="preserve">
          <source>chebone (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebone (in module numpy.polynomial.chebyshev)</target>
        </trans-unit>
        <trans-unit id="3e28fcc0ca62a55a1c4f7080caace1d0d187ab43" translate="yes" xml:space="preserve">
          <source>chebpow() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebpow()(在模块numpy.polynomial.chebyshev中)</target>
        </trans-unit>
        <trans-unit id="3ff86a635eb49ebb923e7b59d3d226702fe8ed35" translate="yes" xml:space="preserve">
          <source>chebpts1() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebpts1()(在模块numpy.polynomial.chebyshev中)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
