<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="6417e3103dab828eecfd9128bca7300711977bd9" translate="yes" xml:space="preserve">
          <source>QMutableSetIterator Class</source>
          <target state="translated">QMutableSetIterator类</target>
        </trans-unit>
        <trans-unit id="8ee403979941b84f720f587c86f04aa93c356d9d" translate="yes" xml:space="preserve">
          <source>QMutableSetIterator&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">QMutableSetIterator &amp;lt;T&amp;gt;和</target>
        </trans-unit>
        <trans-unit id="3a3a9f49e1f4d4f0bb0886fcc771b8043642afe2" translate="yes" xml:space="preserve">
          <source>QMutableSetIterator&amp;lt;T&amp;gt; allows you to iterate over a &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; and remove items from the set as you iterate. If you don't want to modify the set (or have a const &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;), use the slightly faster &lt;a href=&quot;qsetiterator&quot;&gt;QSetIterator&lt;/a&gt;&amp;lt;T&amp;gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f1b0f4914e8c9bbec88bce6e3d181fa541ab045" translate="yes" xml:space="preserve">
          <source>QMutableSetIterator::QMutableSetIterator()</source>
          <target state="translated">QMutableSetIterator::QMutableSetIterator()</target>
        </trans-unit>
        <trans-unit id="9d752e08f799519e902127535aa39f064fa12933" translate="yes" xml:space="preserve">
          <source>QMutableSetIterator::QMutableSetIterator(&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">QMutableSetIterator :: QMutableSetIterator（&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="82b1951e5c86eb7b6d6ed7d840104e4e0e377c15" translate="yes" xml:space="preserve">
          <source>QMutableSetIterator::findNext()</source>
          <target state="translated">QMutableSetIterator::findNext()</target>
        </trans-unit>
        <trans-unit id="ed465f02c8aa6b66fe7a0124c47f8894f4126d05" translate="yes" xml:space="preserve">
          <source>QMutableSetIterator::findPrevious()</source>
          <target state="translated">QMutableSetIterator::findPrevious()</target>
        </trans-unit>
        <trans-unit id="78448c4f44edb0dfd8dd03284b716f6a987a3f71" translate="yes" xml:space="preserve">
          <source>QMutableSetIterator::hasNext()</source>
          <target state="translated">QMutableSetIterator::hasNext()</target>
        </trans-unit>
        <trans-unit id="fa520a1ed6137fe2afb9dbb8dd58aa5e13ccc15b" translate="yes" xml:space="preserve">
          <source>QMutableSetIterator::hasPrevious()</source>
          <target state="translated">QMutableSetIterator::hasPrevious()</target>
        </trans-unit>
        <trans-unit id="2e847bfe7b17f72fdb97f4e110a77198c7f8ad29" translate="yes" xml:space="preserve">
          <source>QMutableSetIterator::next()</source>
          <target state="translated">QMutableSetIterator::next()</target>
        </trans-unit>
        <trans-unit id="23cf31459dd6918071245e795627a6b46b439632" translate="yes" xml:space="preserve">
          <source>QMutableSetIterator::peekNext()</source>
          <target state="translated">QMutableSetIterator::peekNext()</target>
        </trans-unit>
        <trans-unit id="77362dd9d4284cccd12e4401dfe87fb0368560fc" translate="yes" xml:space="preserve">
          <source>QMutableSetIterator::peekPrevious()</source>
          <target state="translated">QMutableSetIterator::peekPrevious()</target>
        </trans-unit>
        <trans-unit id="fbfdf8a5635082d72104942a8ba84c56fd76816d" translate="yes" xml:space="preserve">
          <source>QMutableSetIterator::previous()</source>
          <target state="translated">QMutableSetIterator::previous()</target>
        </trans-unit>
        <trans-unit id="f737af6ca6dc1314dd3d310478d243dba2ff40e4" translate="yes" xml:space="preserve">
          <source>QMutableSetIterator::remove()</source>
          <target state="translated">QMutableSetIterator::remove()</target>
        </trans-unit>
        <trans-unit id="bb812ebbcde42e6bbcb0c2c937826eb7f369f8b8" translate="yes" xml:space="preserve">
          <source>QMutableSetIterator::toBack()</source>
          <target state="translated">QMutableSetIterator::toBack()</target>
        </trans-unit>
        <trans-unit id="060dedd73da695f6811f45f7f6baadb995c69496" translate="yes" xml:space="preserve">
          <source>QMutableSetIterator::toFront()</source>
          <target state="translated">QMutableSetIterator::toFront()</target>
        </trans-unit>
        <trans-unit id="742f9540f6cb821c479f747252a1d47e73f02513" translate="yes" xml:space="preserve">
          <source>QMutableSetIterator::value()</source>
          <target state="translated">QMutableSetIterator::value()</target>
        </trans-unit>
        <trans-unit id="d7d7212ce0a12859b46d3f6991e98b47045c8ff1" translate="yes" xml:space="preserve">
          <source>QMutableStringListIterator (typedef)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8828912649e3f4a1a11555f50c2d0574a80841ad" translate="yes" xml:space="preserve">
          <source>QMutableVectorIterator (class)</source>
          <target state="translated">QMutableVectorIterator(类)</target>
        </trans-unit>
        <trans-unit id="319da66542cbba8865206b7015828ef00f4ddbed" translate="yes" xml:space="preserve">
          <source>QMutableVectorIterator Class</source>
          <target state="translated">QMutableVectorIterator类</target>
        </trans-unit>
        <trans-unit id="02e16978d6a3125b24b89b1d42981a85c5980cca" translate="yes" xml:space="preserve">
          <source>QMutableVectorIterator&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">QMutableVectorIterator &amp;lt;T&amp;gt;和</target>
        </trans-unit>
        <trans-unit id="5b21c898b8c431951dbd97bde026e8850506e029" translate="yes" xml:space="preserve">
          <source>QMutableVectorIterator&amp;lt;T&amp;gt; allows you to iterate over a &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; and modify the vector. If you don't want to modify the vector (or have a const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;), use the slightly faster &lt;a href=&quot;qvectoriterator&quot;&gt;QVectorIterator&lt;/a&gt;&amp;lt;T&amp;gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a8d54d059d5398433588c9b335d627842749ff" translate="yes" xml:space="preserve">
          <source>QMutableVectorIterator::QMutableVectorIterator()</source>
          <target state="translated">QMutableVectorIterator::QMutableVectorIterator()</target>
        </trans-unit>
        <trans-unit id="2bf7bcebb6f728a21b994c7997e060b8e7b7aaf0" translate="yes" xml:space="preserve">
          <source>QMutableVectorIterator::QMutableVectorIterator(&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">QMutableVectorIterator :: QMutableVectorIterator（&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt;T&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="31a0b309081abaca8b117f9134c52fc963e463fa" translate="yes" xml:space="preserve">
          <source>QMutableVectorIterator::findNext()</source>
          <target state="translated">QMutableVectorIterator::findNext()</target>
        </trans-unit>
        <trans-unit id="fd930b2649da4ad0130d0daab09f1ef5f1f4db9d" translate="yes" xml:space="preserve">
          <source>QMutableVectorIterator::findPrevious()</source>
          <target state="translated">QMutableVectorIterator::findPrevious()</target>
        </trans-unit>
        <trans-unit id="45dffedbd33252c27de23909a4e08effc6743118" translate="yes" xml:space="preserve">
          <source>QMutableVectorIterator::hasNext()</source>
          <target state="translated">QMutableVectorIterator::hasNext()</target>
        </trans-unit>
        <trans-unit id="7bc440085de319e6824609b7dcaa5d662af69886" translate="yes" xml:space="preserve">
          <source>QMutableVectorIterator::hasPrevious()</source>
          <target state="translated">QMutableVectorIterator::hasPrevious()</target>
        </trans-unit>
        <trans-unit id="9227989ec516967021a5177eac108f1c2adf21d1" translate="yes" xml:space="preserve">
          <source>QMutableVectorIterator::insert()</source>
          <target state="translated">QMutableVectorIterator::insert()</target>
        </trans-unit>
        <trans-unit id="fa82eab14bfd53343f0c79230fe7c8877a8217ea" translate="yes" xml:space="preserve">
          <source>QMutableVectorIterator::next()</source>
          <target state="translated">QMutableVectorIterator::next()</target>
        </trans-unit>
        <trans-unit id="753c788348a33b4fd672dfef1161442b2e1079e6" translate="yes" xml:space="preserve">
          <source>QMutableVectorIterator::peekNext()</source>
          <target state="translated">QMutableVectorIterator::peekNext()</target>
        </trans-unit>
        <trans-unit id="b403239c5f8089e082958e549ae10483a19829f6" translate="yes" xml:space="preserve">
          <source>QMutableVectorIterator::peekPrevious()</source>
          <target state="translated">QMutableVectorIterator::peekPrevious()</target>
        </trans-unit>
        <trans-unit id="1d1d1d43a935639bcf7302e09dad99b9f129112c" translate="yes" xml:space="preserve">
          <source>QMutableVectorIterator::previous()</source>
          <target state="translated">QMutableVectorIterator::previous()</target>
        </trans-unit>
        <trans-unit id="e9f408516a18c0fcb28b59299e9b345f444a7b20" translate="yes" xml:space="preserve">
          <source>QMutableVectorIterator::remove()</source>
          <target state="translated">QMutableVectorIterator::remove()</target>
        </trans-unit>
        <trans-unit id="e265f367da22fbae289941e726ae604c9977629a" translate="yes" xml:space="preserve">
          <source>QMutableVectorIterator::setValue()</source>
          <target state="translated">QMutableVectorIterator::setValue()</target>
        </trans-unit>
        <trans-unit id="86a87096ba79082007beb3b9b3a3e58fc0c4eb73" translate="yes" xml:space="preserve">
          <source>QMutableVectorIterator::toBack()</source>
          <target state="translated">QMutableVectorIterator::toBack()</target>
        </trans-unit>
        <trans-unit id="c6a1df467360eed19a23f9d65c79fcd9bcc1bc00" translate="yes" xml:space="preserve">
          <source>QMutableVectorIterator::toFront()</source>
          <target state="translated">QMutableVectorIterator::toFront()</target>
        </trans-unit>
        <trans-unit id="bcfd78b8fd38b1a59d71cbaee72a7ec26a70ad0b" translate="yes" xml:space="preserve">
          <source>QMutableVectorIterator::value()</source>
          <target state="translated">QMutableVectorIterator::value()</target>
        </trans-unit>
        <trans-unit id="0c86f264dc4e7e1a748b5aef0ed8501a88cd6200" translate="yes" xml:space="preserve">
          <source>QMutex</source>
          <target state="translated">QMutex</target>
        </trans-unit>
        <trans-unit id="b0840a08e348314486013a17f300bd89b48f0a74" translate="yes" xml:space="preserve">
          <source>QMutex (class)</source>
          <target state="translated">缪特克斯</target>
        </trans-unit>
        <trans-unit id="1bf7c444bb4a4bf1890ef1b31d66c830dd2b3bf4" translate="yes" xml:space="preserve">
          <source>QMutex *</source>
          <target state="translated">QMutex *</target>
        </trans-unit>
        <trans-unit id="ee0675128c00b970494c31242a3d4ad6f86a7f36" translate="yes" xml:space="preserve">
          <source>QMutex Class</source>
          <target state="translated">QMutex类</target>
        </trans-unit>
        <trans-unit id="e20e1d924b3365494fee04ba4612ed961a2064b0" translate="yes" xml:space="preserve">
          <source>QMutex is optimized to be fast in the non-contended case. A non-recursive QMutex will not allocate memory if there is no contention on that mutex. It is constructed and destroyed with almost no overhead, which means it is fine to have many mutexes as part of other classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099dcb503b391a9c5775ecf13d6e9dda02a98ee8" translate="yes" xml:space="preserve">
          <source>QMutex is optimized to be fast in the non-contended case. It will not allocate memory if there is no contention on that mutex. It is constructed and destroyed with almost no overhead, which means it is fine to have many mutexes as part of other classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a43f6ea8bc1374d9e18ef91acf7081d7df35d97" translate="yes" xml:space="preserve">
          <source>QMutex::QMutex()</source>
          <target state="translated">QMutex::QMutex()</target>
        </trans-unit>
        <trans-unit id="f8aeeffae0b1030aa36cd6ac5f9cba42d0972faa" translate="yes" xml:space="preserve">
          <source>QMutex::QMutex(&lt;a href=&quot;qmutex#RecursionMode-enum&quot;&gt;QMutex::RecursionMode&lt;/a&gt;</source>
          <target state="translated">QMutex::QMutex(&lt;a href=&quot;qmutex#RecursionMode-enum&quot;&gt;QMutex::RecursionMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="29a6b1366a704b6eca2502a3d0930a7a20c42a48" translate="yes" xml:space="preserve">
          <source>QMutex::RecursionMode (enum)</source>
          <target state="translated">QMutex::RecursionMode (enum)</target>
        </trans-unit>
        <trans-unit id="95f02e85fd5d6635151e287dd6d51be2780e36e8" translate="yes" xml:space="preserve">
          <source>QMutex::isRecursive()</source>
          <target state="translated">QMutex::isRecursive()</target>
        </trans-unit>
        <trans-unit id="33b0365cf79053267487107471cf6f42e54d4eda" translate="yes" xml:space="preserve">
          <source>QMutex::lock()</source>
          <target state="translated">QMutex::lock()</target>
        </trans-unit>
        <trans-unit id="4dd292aac94fd784d4a3520069b70fd4b4c8bebe" translate="yes" xml:space="preserve">
          <source>QMutex::tryLock()</source>
          <target state="translated">QMutex::tryLock()</target>
        </trans-unit>
        <trans-unit id="1c62e19acd8d6886a683015609b113e0a960f897" translate="yes" xml:space="preserve">
          <source>QMutex::try_lock()</source>
          <target state="translated">QMutex::try_lock()</target>
        </trans-unit>
        <trans-unit id="1fd7fb578398720d2d28911ec80bfffbd27990a5" translate="yes" xml:space="preserve">
          <source>QMutex::try_lock_for()</source>
          <target state="translated">QMutex::try_lock_for()</target>
        </trans-unit>
        <trans-unit id="94ecc4d1ace811e380606fc82859e3f1be795037" translate="yes" xml:space="preserve">
          <source>QMutex::try_lock_until()</source>
          <target state="translated">QMutex::try_lock_until()</target>
        </trans-unit>
        <trans-unit id="eebceac2e8ba1d742c66ae74a75ee0cf95154c93" translate="yes" xml:space="preserve">
          <source>QMutex::unlock()</source>
          <target state="translated">QMutex::unlock()</target>
        </trans-unit>
        <trans-unit id="9eda7a81dc451c6aeb0b93fb126bb3c6dbdbefca" translate="yes" xml:space="preserve">
          <source>QMutex::~QMutex()</source>
          <target state="translated">QMutex::~QMutex()</target>
        </trans-unit>
        <trans-unit id="89db720ce78150451512f62087b34018ea089bd2" translate="yes" xml:space="preserve">
          <source>QMutexLocker</source>
          <target state="translated">QMutexLocker</target>
        </trans-unit>
        <trans-unit id="910d227952eff600b3db3738f94e44439a697ef9" translate="yes" xml:space="preserve">
          <source>QMutexLocker (class)</source>
          <target state="translated">QMutexLocker(类)</target>
        </trans-unit>
        <trans-unit id="45cf9b8e6c2cc6cd65b1184224f3c2a3ae977dfa" translate="yes" xml:space="preserve">
          <source>QMutexLocker Class</source>
          <target state="translated">QMutexLocker类</target>
        </trans-unit>
        <trans-unit id="ed473deb9a5303e971947a18940475c29fad9eaf" translate="yes" xml:space="preserve">
          <source>QMutexLocker also provides a &lt;code&gt;mutex()&lt;/code&gt; member function that returns the mutex on which the QMutexLocker is operating. This is useful for code that needs access to the mutex, such as &lt;a href=&quot;qwaitcondition#wait&quot;&gt;QWaitCondition::wait&lt;/a&gt;(). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b50405af892855825bc3c1cd32b8e41ffbfbe3" translate="yes" xml:space="preserve">
          <source>QMutexLocker should be created within a function where a &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt; needs to be locked. The mutex is locked when QMutexLocker is created. You can unlock and relock the mutex with &lt;code&gt;unlock()&lt;/code&gt; and &lt;code&gt;relock()&lt;/code&gt;. If locked, the mutex will be unlocked when the QMutexLocker is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7960b2b4b249836bed3c816393343c78e6898870" translate="yes" xml:space="preserve">
          <source>QMutexLocker::QMutexLocker()</source>
          <target state="translated">QMutexLocker::QMutexLocker()</target>
        </trans-unit>
        <trans-unit id="fa7cf5d280b579be5d05b63633ba73db0b32eda8" translate="yes" xml:space="preserve">
          <source>QMutexLocker::QMutexLocker(&lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt; *</source>
          <target state="translated">QMutexLocker :: QMutexLocker（&lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b1fdb9732f8d6e80d95edd898a6eec404ac610b2" translate="yes" xml:space="preserve">
          <source>QMutexLocker::QMutexLocker(&lt;a href=&quot;qrecursivemutex&quot;&gt;QRecursiveMutex&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c3c91fe832f92793a7c68bf582e00596ab69ef" translate="yes" xml:space="preserve">
          <source>QMutexLocker::QMutexLocker(Mutex *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a9e398531c25c2e3a277ff9a5316f56d273d9c8" translate="yes" xml:space="preserve">
          <source>QMutexLocker::mutex()</source>
          <target state="translated">QMutexLocker::mutex()</target>
        </trans-unit>
        <trans-unit id="c098f9ee60254302bef8e2f9ce07f276f0274598" translate="yes" xml:space="preserve">
          <source>QMutexLocker::relock()</source>
          <target state="translated">QMutexLocker::relock()</target>
        </trans-unit>
        <trans-unit id="11c3ee6066112934b66c8da7b5569a4a4e763201" translate="yes" xml:space="preserve">
          <source>QMutexLocker::unlock()</source>
          <target state="translated">QMutexLocker::unlock()</target>
        </trans-unit>
        <trans-unit id="b8f3188395ee5bca00eef8e1f893524feeff4f5d" translate="yes" xml:space="preserve">
          <source>QMutexLocker::~QMutexLocker()</source>
          <target state="translated">QMutexLocker::~QMutexLocker()</target>
        </trans-unit>
        <trans-unit id="d4a1e2a56fb3981601295ea0f5f2b261534fe6ad" translate="yes" xml:space="preserve">
          <source>QNX Screen Graphics Subsystem</source>
          <target state="translated">QNX 屏幕图形子系统</target>
        </trans-unit>
        <trans-unit id="43b8e667034020794c04149f12a4c0bb5adb91d5" translate="yes" xml:space="preserve">
          <source>QNX Software Systems delivers software solutions for making embedded devices. This includes creation of QNX Neutrino RTOS boot images in a very flexible way. Even though QNX provides several reference scripts for the OS image creation, sooner or later you will need to make changes or you might decide to create an OS image from scratch. Qt relies on the existence of several third-party components and selected OS services. Due to this, QNX Neutrino RTOS boot images for a target device running Qt must meet a couple of requirements to ensure that Qt works as expected. The sections below list the crucial parts for Qt.</source>
          <target state="translated">QNX 软件系统公司提供用于制造嵌入式设备的软件解决方案,包括以非常灵活的方式创建 QNX Neutrino 实时操作系统启动镜像。其中包括以非常灵活的方式创建 QNX Neutrino 实时操作系统启动镜像。尽管 QNX 提供了多个创建操作系统镜像的参考脚本,但您迟早会需要进行修改,或者决定从头开始创建操作系统镜像。Qt 依赖于一些第三方组件和选定的操作系统服务的存在。因此,用于运行 Qt 的目标设备的 QNX Neutrino 实时操作系统启动映像必须满足一些要求,以确保 Qt 正常运行。以下部分列出了 Qt 的关键部分。</target>
        </trans-unit>
        <trans-unit id="a53a67081f1f0e3773fbd88782e80aea3055b3cc" translate="yes" xml:space="preserve">
          <source>QNX Tools for Remote Debugging</source>
          <target state="translated">用于远程调试的 QNX 工具</target>
        </trans-unit>
        <trans-unit id="62f5f2e29811ffe16907d9039572024ef963bfff" translate="yes" xml:space="preserve">
          <source>QNX provides board support packages (BSPs) for many common platforms and their individual variants. However, if you need a BSP for a board that QNX does not provide, you can modify an existing one or develop your own.</source>
          <target state="translated">QNX 为许多常见平台及其变种提供电路板支持包(BSP)。不过,如果您需要的电路板支持包不是 QNX 提供的,您可以修改现有的支持包或开发自己的支持包。</target>
        </trans-unit>
        <trans-unit id="ab7e923f81a8b57f97ca8add143f832f1bc0e5d4" translate="yes" xml:space="preserve">
          <source>QNX provides the &lt;a href=&quot;http://www.qnx.com/developers/docs/7.0.0/#com.qnx.doc.neutrino.utilities/topic/s/slogger2.html&quot;&gt;slog2&lt;/a&gt; logging framework tailored to specifics of embedded systems. The major advantage of it is a much better performance than a text output to files. Qt uses this framework by default for any logging output going through &lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; on QNX Neutrino RTOS. The &lt;code&gt;slog2&lt;/code&gt; service should be started during the system startup. The &lt;code&gt;slog2&lt;/code&gt; also relies on the existence of the &lt;code&gt;/tmp&lt;/code&gt; folder which has to be configured as well, for example:</source>
          <target state="translated">QNX提供了针对特定嵌入式系统的&lt;a href=&quot;http://www.qnx.com/developers/docs/7.0.0/#com.qnx.doc.neutrino.utilities/topic/s/slogger2.html&quot;&gt;slog2日志记录框架&lt;/a&gt;。它的主要优点是性能比文本输出到文件好得多。默认情况下，Qt使用此框架进行QNX Neutrino RTOS上通过&lt;a href=&quot;qdebug&quot;&gt;QDebug的&lt;/a&gt;任何日志输出。该 &lt;code&gt;slog2&lt;/code&gt; 服务应该在系统启动过程中启动。所述 &lt;code&gt;slog2&lt;/code&gt; 还依赖于存在的 &lt;code&gt;/tmp&lt;/code&gt; ，其必须被配置为好，例如文件夹：</target>
        </trans-unit>
        <trans-unit id="7f99d9b262852a06fdbdbaa3ea64ce52c683e920" translate="yes" xml:space="preserve">
          <source>QNX support</source>
          <target state="translated">支持QNX</target>
        </trans-unit>
        <trans-unit id="a423d7592a108fc80393291ea98a7ccfa5b8e2db" translate="yes" xml:space="preserve">
          <source>QNativeGestureEvent</source>
          <target state="translated">QNativeGestureEvent</target>
        </trans-unit>
        <trans-unit id="0be26734082f63895a8c54417a382871f4b04d19" translate="yes" xml:space="preserve">
          <source>QNativeGestureEvent (class)</source>
          <target state="translated">QNativeGestureEvent(类)</target>
        </trans-unit>
        <trans-unit id="d7818018208d3886bb3735ceff29430cd5c95219" translate="yes" xml:space="preserve">
          <source>QNativeGestureEvent Class</source>
          <target state="translated">QNativeGestureEvent类</target>
        </trans-unit>
        <trans-unit id="6f1c5c2f5621368b320d389d6ac7de55b92c0c3f" translate="yes" xml:space="preserve">
          <source>QNativeGestureEvent::QNativeGestureEvent()</source>
          <target state="translated">QNativeGestureEvent::QNativeGestureEvent()</target>
        </trans-unit>
        <trans-unit id="5c1747017a5ca452f1dc493c87e284edc6b9c020" translate="yes" xml:space="preserve">
          <source>QNativeGestureEvent::QNativeGestureEvent(&lt;a href=&quot;qt#NativeGestureType-enum&quot;&gt;Qt::NativeGestureType&lt;/a&gt;</source>
          <target state="translated">QNativeGestureEvent::QNativeGestureEvent(&lt;a href=&quot;qt#NativeGestureType-enum&quot;&gt;Qt::NativeGestureType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ffc21beef284b5a6cc7a7c5e3adead10b1f16c6" translate="yes" xml:space="preserve">
          <source>QNativeGestureEvent::device()</source>
          <target state="translated">QNativeGestureEvent::device()</target>
        </trans-unit>
        <trans-unit id="2546c3aeef0cd17832653fa5ec52bc1c4434b4d1" translate="yes" xml:space="preserve">
          <source>QNativeGestureEvent::gestureType()</source>
          <target state="translated">QNativeGestureEvent::gestureType()</target>
        </trans-unit>
        <trans-unit id="1026ecd593b4f3a650b3a14678509bd031a6b7b6" translate="yes" xml:space="preserve">
          <source>QNativeGestureEvent::globalPos()</source>
          <target state="translated">QNativeGestureEvent::globalPos()</target>
        </trans-unit>
        <trans-unit id="892c65aca953de69ae4a967835af2286225b03f5" translate="yes" xml:space="preserve">
          <source>QNativeGestureEvent::localPos()</source>
          <target state="translated">QNativeGestureEvent::localPos()</target>
        </trans-unit>
        <trans-unit id="441fc7b4b21b04720c26cd64a3f9cfd07e713b08" translate="yes" xml:space="preserve">
          <source>QNativeGestureEvent::pos()</source>
          <target state="translated">QNativeGestureEvent::pos()</target>
        </trans-unit>
        <trans-unit id="bc0269bc801e6b687cac881d36b2aa4d6b21a23c" translate="yes" xml:space="preserve">
          <source>QNativeGestureEvent::screenPos()</source>
          <target state="translated">QNativeGestureEvent::screenPos()</target>
        </trans-unit>
        <trans-unit id="9d33f40d4b7c854fef5bb50f73d91729ebae8923" translate="yes" xml:space="preserve">
          <source>QNativeGestureEvent::value()</source>
          <target state="translated">QNativeGestureEvent::value()</target>
        </trans-unit>
        <trans-unit id="a5808286b94cd9efe9a4dcbebf6d4022c483d7fe" translate="yes" xml:space="preserve">
          <source>QNativeGestureEvent::windowPos()</source>
          <target state="translated">QNativeGestureEvent::windowPos()</target>
        </trans-unit>
        <trans-unit id="a9a0740af2ac60884f56f10f942a662021566974" translate="yes" xml:space="preserve">
          <source>QNativeInterface *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd10dbf98f6b20677810cdb0c8459387147863fe" translate="yes" xml:space="preserve">
          <source>QNativeInterface Namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17280b6984c28c5d42f85f48ad29e9aef07d6a07" translate="yes" xml:space="preserve">
          <source>QNativeInterface::QAndroidOffscreenSurface</source>
          <target state="translated">QNativeInterface::QAndroidOffscreenSurface</target>
        </trans-unit>
        <trans-unit id="2ef6505542813eb27876deb6a5c32c3d760e8cd8" translate="yes" xml:space="preserve">
          <source>QNativeInterface::QCocoaGLContext</source>
          <target state="translated">QNativeInterface::QCocoaGLContext</target>
        </trans-unit>
        <trans-unit id="a34bd9a7405202dc33837c9e46765a6fc0d162fe" translate="yes" xml:space="preserve">
          <source>QNativeInterface::QEGLContext</source>
          <target state="translated">QNativeInterface::QEGLContext</target>
        </trans-unit>
        <trans-unit id="932d6d7e2b4893f64628d2f74bb8c474f3d08e5a" translate="yes" xml:space="preserve">
          <source>QNativeInterface::QGLXContext</source>
          <target state="translated">QNativeInterface::QGLXContext</target>
        </trans-unit>
        <trans-unit id="1f33bf5d480bb24695c859cbe658309d3524e07e" translate="yes" xml:space="preserve">
          <source>QNativeInterface::QSGD3D11Texture</source>
          <target state="translated">QNativeInterface::QSGD3D11Texture</target>
        </trans-unit>
        <trans-unit id="afa9cfcc227680a805eef1a80d78f8895aac1038" translate="yes" xml:space="preserve">
          <source>QNativeInterface::QSGMetalTexture</source>
          <target state="translated">QNativeInterface::QSGMetalTexture</target>
        </trans-unit>
        <trans-unit id="24cf03ec309f2e0fceb299f4189e001176f6518b" translate="yes" xml:space="preserve">
          <source>QNativeInterface::QSGOpenGLTexture</source>
          <target state="translated">QNativeInterface::QSGOpenGLTexture</target>
        </trans-unit>
        <trans-unit id="f5fce4a09a78aafe2b6821b8b0e40ac358006264" translate="yes" xml:space="preserve">
          <source>QNativeInterface::QSGVulkanTexture</source>
          <target state="translated">QNativeInterface::QSGVulkanTexture</target>
        </trans-unit>
        <trans-unit id="44775662a9a63864fda61fa4cbfae0a86320dbe9" translate="yes" xml:space="preserve">
          <source>QNativeInterface::QWGLContext</source>
          <target state="translated">QNativeInterface::QWGLContext</target>
        </trans-unit>
        <trans-unit id="0f0b5c475978e2af58c2494200c69203aa8c04da" translate="yes" xml:space="preserve">
          <source>QNavigationManager *</source>
          <target state="translated">QNavigationManager *</target>
        </trans-unit>
        <trans-unit id="cfa19746312103614f96e1d6bbc7b01fa0068aba" translate="yes" xml:space="preserve">
          <source>QNavigationManager *QGeoServiceProvider::navigationManager() const</source>
          <target state="translated">QNavigationManager *QGeoServiceProvider::navigationManager()const</target>
        </trans-unit>
        <trans-unit id="38757be07e7dc7a3c6fba402ff4ce4c760570a30" translate="yes" xml:space="preserve">
          <source>QNdefFilter &amp;amp;</source>
          <target state="translated">QNdefFilter和</target>
        </trans-unit>
        <trans-unit id="c7bc821b39f0acaa761179474aae31134b0e825b" translate="yes" xml:space="preserve">
          <source>QNdefFilter (class)</source>
          <target state="translated">QNdefFilter(类)</target>
        </trans-unit>
        <trans-unit id="a20a439d57b981475f8f6e6c98e469ee248dc343" translate="yes" xml:space="preserve">
          <source>QNdefFilter Class</source>
          <target state="translated">QNdefFilter类</target>
        </trans-unit>
        <trans-unit id="b307f4e573d1fd01d36b7716d1351d2d0a8139e6" translate="yes" xml:space="preserve">
          <source>QNdefFilter::QNdefFilter()</source>
          <target state="translated">QNdefFilter::QNdefFilter()</target>
        </trans-unit>
        <trans-unit id="5ede1eb8dec19dd8ecb9871237f705b1ccc69383" translate="yes" xml:space="preserve">
          <source>QNdefFilter::QNdefFilter(const &lt;a href=&quot;qndeffilter#QNdefFilter&quot;&gt;QNdefFilter&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNdefFilter :: QNdefFilter（const &lt;a href=&quot;qndeffilter#QNdefFilter&quot;&gt;QNdefFilter&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="db159daff7205628234bf4f4721202d86dd35c09" translate="yes" xml:space="preserve">
          <source>QNdefFilter::Record</source>
          <target state="translated">QNdefFilter::Record</target>
        </trans-unit>
        <trans-unit id="0853b4d46629b6326fb209c94d4dd7235d2ad7bc" translate="yes" xml:space="preserve">
          <source>QNdefFilter::Record QNdefFilter::recordAt(int</source>
          <target state="translated">QNdefFilter::Record QNdefFilter::recordAt(int)</target>
        </trans-unit>
        <trans-unit id="bc3e1c06c2e2bb43e8ab9da88e16600303cb94cc" translate="yes" xml:space="preserve">
          <source>QNdefFilter::appendRecord()</source>
          <target state="translated">QNdefFilter::appendRecord()</target>
        </trans-unit>
        <trans-unit id="ae30c376a7f21c7055923d0891e8728828ae8a40" translate="yes" xml:space="preserve">
          <source>QNdefFilter::clear()</source>
          <target state="translated">QNdefFilter::clear()</target>
        </trans-unit>
        <trans-unit id="37260b344c9cb3a6fcf9f6c67f9a4c5ddf12621d" translate="yes" xml:space="preserve">
          <source>QNdefFilter::operator=()</source>
          <target state="translated">QNdefFilter::operator=()</target>
        </trans-unit>
        <trans-unit id="50cc5ceff167c1d1e9e2bc9be4d796ad80326824" translate="yes" xml:space="preserve">
          <source>QNdefFilter::orderMatch()</source>
          <target state="translated">QNdefFilter::orderMatch()</target>
        </trans-unit>
        <trans-unit id="ae8b6613473c343cb76dc7f5af12208d5bde1557" translate="yes" xml:space="preserve">
          <source>QNdefFilter::recordAt()</source>
          <target state="translated">QNdefFilter::recordAt()</target>
        </trans-unit>
        <trans-unit id="17cee5cf0caa5755db5cd3aed3cc2a0e3766586e" translate="yes" xml:space="preserve">
          <source>QNdefFilter::recordCount()</source>
          <target state="translated">QNdefFilter::recordCount()</target>
        </trans-unit>
        <trans-unit id="19f15f011296bd80f550a19dd1fb75d093a4c235" translate="yes" xml:space="preserve">
          <source>QNdefFilter::setOrderMatch()</source>
          <target state="translated">QNdefFilter::setOrderMatch()</target>
        </trans-unit>
        <trans-unit id="f6f1975fbbbe667ee4eec0682dc5d4d94fd87b0c" translate="yes" xml:space="preserve">
          <source>QNdefFilter::~QNdefFilter()</source>
          <target state="translated">QNdefFilter::~QNdefFilter()</target>
        </trans-unit>
        <trans-unit id="f7e31948050d62b6d278791fc117d5fcf7b55196" translate="yes" xml:space="preserve">
          <source>QNdefMessage</source>
          <target state="translated">QNdefMessage</target>
        </trans-unit>
        <trans-unit id="3aed8f0614ac6b60e6c20defe380754dcffd3fb6" translate="yes" xml:space="preserve">
          <source>QNdefMessage (class)</source>
          <target state="translated">QNdefMessage(类)</target>
        </trans-unit>
        <trans-unit id="a7ae1cd011a2f1d85fb824ec87f20ec60aeaf379" translate="yes" xml:space="preserve">
          <source>QNdefMessage Class</source>
          <target state="translated">QNdefMessage类</target>
        </trans-unit>
        <trans-unit id="3e614afc495cf473122c3b394720224d409e1db7" translate="yes" xml:space="preserve">
          <source>QNdefMessage::QNdefMessage()</source>
          <target state="translated">QNdefMessage::QNdefMessage()</target>
        </trans-unit>
        <trans-unit id="23572e48256dc7fb417cfe470b67a3d4681a7d56" translate="yes" xml:space="preserve">
          <source>QNdefMessage::QNdefMessage(const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qndefrecord&quot;&gt;QNdefRecord&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">QNdefMessage :: QNdefMessage（const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qndefrecord&quot;&gt;QNdefRecord&lt;/a&gt; &amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="77f3811c2700d3f99f73a1ef4012354953860ca6" translate="yes" xml:space="preserve">
          <source>QNdefMessage::QNdefMessage(const &lt;a href=&quot;qndefmessage#QNdefMessage&quot;&gt;QNdefMessage&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNdefMessage :: QNdefMessage（const &lt;a href=&quot;qndefmessage#QNdefMessage&quot;&gt;QNdefMessage&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ef6307a937604879c53ec74496ae649e3d19df52" translate="yes" xml:space="preserve">
          <source>QNdefMessage::QNdefMessage(const &lt;a href=&quot;qndefrecord&quot;&gt;QNdefRecord&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNdefMessage :: QNdefMessage（const &lt;a href=&quot;qndefrecord&quot;&gt;QNdefRecord&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a9a3e425f0e753fd6487dcf67a528c34fd9753b8" translate="yes" xml:space="preserve">
          <source>QNdefMessage::fromByteArray()</source>
          <target state="translated">QNdefMessage::fromByteArray()</target>
        </trans-unit>
        <trans-unit id="a01776257cad94600d0542a9268d07fad46f0c95" translate="yes" xml:space="preserve">
          <source>QNdefMessage::operator==()</source>
          <target state="translated">QNdefMessage::operator==()</target>
        </trans-unit>
        <trans-unit id="70430b85d2d97fc76ff18756e69b7996682e89e9" translate="yes" xml:space="preserve">
          <source>QNdefMessage::toByteArray()</source>
          <target state="translated">QNdefMessage::toByteArray()</target>
        </trans-unit>
        <trans-unit id="b8e4e4a406d10e25a97c61878d423d0d65cc2bb8" translate="yes" xml:space="preserve">
          <source>QNdefNfcIconRecord</source>
          <target state="translated">QNdefNfcIconRecord</target>
        </trans-unit>
        <trans-unit id="0a79e2e0baaa4c71e8afc7a417d23c80d6b06572" translate="yes" xml:space="preserve">
          <source>QNdefNfcIconRecord QNdefNfcSmartPosterRecord::iconRecord(const int</source>
          <target state="translated">QNdefNfcIconRecord QNdefNfcSmartPosterRecord::iconRecord(const int)。</target>
        </trans-unit>
        <trans-unit id="f3d20003df8fccd285fa8ab9c41f0aa68491dad4" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord &amp;amp;</source>
          <target state="translated">QNdefNfcSmartPosterRecord＆</target>
        </trans-unit>
        <trans-unit id="4a23bea87cb0fe6bbe0c6df342851ac0c749049a" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord (class)</source>
          <target state="translated">QNdefNfcSmartPosterRecord (class)</target>
        </trans-unit>
        <trans-unit id="73471be2bd500676c66f4e011a59569f4327f08f" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord Class</source>
          <target state="translated">QNdefNfcSmartPosterRecord类。</target>
        </trans-unit>
        <trans-unit id="86a832d1c1707bc32fd1a90a7513c8194f0155e2" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::Action</source>
          <target state="translated">QNdefNfcSmartPosterRecord::Action</target>
        </trans-unit>
        <trans-unit id="8e697df5f553d67ec334223d291565f8f8aafec5" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::Action (enum)</source>
          <target state="translated">QNdefNfcSmartPosterRecord::Action (enum)</target>
        </trans-unit>
        <trans-unit id="5dd72e668413b38df1c22b6fc6bc975f1f8a166c" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::QNdefNfcSmartPosterRecord()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::QNdefNfcSmartPosterRecord()</target>
        </trans-unit>
        <trans-unit id="65032760ebe1d668f36d96b4224950085301f0c1" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::QNdefNfcSmartPosterRecord(const &lt;a href=&quot;qndefnfcsmartposterrecord#QNdefNfcSmartPosterRecord&quot;&gt;QNdefNfcSmartPosterRecord&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNdefNfcSmartPosterRecord :: QNdefNfcSmartPosterRecord（const &lt;a href=&quot;qndefnfcsmartposterrecord#QNdefNfcSmartPosterRecord&quot;&gt;QNdefNfcSmartPosterRecord&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="131ca6ddaf47eac4cc5f6b84c436b15384f724b0" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::QNdefNfcSmartPosterRecord(const &lt;a href=&quot;qndefrecord#QNdefRecord&quot;&gt;QNdefRecord&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNdefNfcSmartPosterRecord :: QNdefNfcSmartPosterRecord（const &lt;a href=&quot;qndefrecord#QNdefRecord&quot;&gt;QNdefRecord&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="8693fa77fc5166fe500d089890221d3d57fc7d4f" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::action()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::action()</target>
        </trans-unit>
        <trans-unit id="ecf864821b8563e61779cc1583a7450ecdef4e2a" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::addIcon()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::addIcon()</target>
        </trans-unit>
        <trans-unit id="0993340b83787abe86ef8fb84d9402da562ab668" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::addTitle()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::addTitle()</target>
        </trans-unit>
        <trans-unit id="1f050cfdbe5eed0b6ac244cc4c9e8716302f87ee" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::hasAction()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::hasAction()</target>
        </trans-unit>
        <trans-unit id="39e5bc624ff8f6850648bb042e34065ca9f14a80" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::hasIcon()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::hasIcon()</target>
        </trans-unit>
        <trans-unit id="2b0ae38098a25ee68a8a6f0df37f3dcccac638ba" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::hasSize()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::hasSize()</target>
        </trans-unit>
        <trans-unit id="89b2f8f7738210383174d484f79d097521909638" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::hasTitle()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::hasTitle()</target>
        </trans-unit>
        <trans-unit id="d36f395d635b36d5ed14947343137523f86525d4" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::hasTypeInfo()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::hasTypeInfo()</target>
        </trans-unit>
        <trans-unit id="dc3006e337300244b2de52e29f19ef793025fdab" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::icon()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::icon()</target>
        </trans-unit>
        <trans-unit id="c4fb85788c7f3b758ce5df78360b0090ea6277a9" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::iconCount()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::iconCount()</target>
        </trans-unit>
        <trans-unit id="834b57f6bd788e3e76e6a4edfd6825408511f1f0" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::iconRecord()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::iconRecord()</target>
        </trans-unit>
        <trans-unit id="a62a65000f9725b645215a2c278f60cd2430c421" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::iconRecords()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::iconRecords()</target>
        </trans-unit>
        <trans-unit id="5bffe576a26a71a624c61331edf8f5b869d65c5d" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::operator=()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::operator=()</target>
        </trans-unit>
        <trans-unit id="3d2d377f1f7b65b90066ad67a7bad6e92adcbce9" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::removeIcon()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::removeIcon()</target>
        </trans-unit>
        <trans-unit id="a97902d0cd9b34bf0ffd7d6d03785cc14b2c92f5" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::removeTitle()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::removeTitle()</target>
        </trans-unit>
        <trans-unit id="de15de5dd9037ad3b19417dbe17a1428d8700edc" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::setAction()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::setAction()</target>
        </trans-unit>
        <trans-unit id="06badc19c5974addf9f429aaf624899c94e63f23" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::setIcons()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::setIcons()</target>
        </trans-unit>
        <trans-unit id="5003b88103d7594b9e1dcebe4a4611e3b84647d2" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::setSize()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::setSize()</target>
        </trans-unit>
        <trans-unit id="3ca101258c51610d5e41bedbfda1ff79942cb79c" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::setTitles()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::setTitles()</target>
        </trans-unit>
        <trans-unit id="54281ecd2745bb9d385feae333d30f4e9f3da1a9" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::setTypeInfo()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::setTypeInfo()</target>
        </trans-unit>
        <trans-unit id="4f96e6d428d70c8d43f0df09123c206a1f54ffe5" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::setUri()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::setUri()</target>
        </trans-unit>
        <trans-unit id="7511d17ee1c607bbebba79c76228d7206ad15717" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::size()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::size()</target>
        </trans-unit>
        <trans-unit id="8eb2a9cd11eaa5fa27f0be31acdee0719518327e" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::title()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::title()</target>
        </trans-unit>
        <trans-unit id="7f033077f9e208dedc3474ef31c019870cff5b8f" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::titleCount()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::titleCount()</target>
        </trans-unit>
        <trans-unit id="c56233894b9ccb59ff02962133b445ad04197566" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::titleRecord()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::titleRecord()</target>
        </trans-unit>
        <trans-unit id="87a4bba1c308ee7856a1e26411c33758386316ba" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::titleRecords()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::titleRecords()</target>
        </trans-unit>
        <trans-unit id="f2b9baa8fe9856d0f71dacdd50d538e387941f54" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::typeInfo()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::typeInfo()</target>
        </trans-unit>
        <trans-unit id="cfd8f729ff8e4335cf4a7611ac0e8f0b841b0bb2" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::uri()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::uri()</target>
        </trans-unit>
        <trans-unit id="ccde3a9d9919ff6736a66685689c64e86e016c7a" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::uriRecord()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::uriRecord()</target>
        </trans-unit>
        <trans-unit id="4a32412b571fbccffaf98325721bb3cc4ec1e965" translate="yes" xml:space="preserve">
          <source>QNdefNfcSmartPosterRecord::~QNdefNfcSmartPosterRecord()</source>
          <target state="translated">QNdefNfcSmartPosterRecord::~QNdefNfcSmartPosterRecord()</target>
        </trans-unit>
        <trans-unit id="1ebaee830997f77de3d72ee77ff17f985eb6e4f8" translate="yes" xml:space="preserve">
          <source>QNdefNfcTextRecord</source>
          <target state="translated">QNdefNfcTextRecord</target>
        </trans-unit>
        <trans-unit id="ac0f7a2b4b745ed13dcebf7d1d251fd6a8cb404c" translate="yes" xml:space="preserve">
          <source>QNdefNfcTextRecord (class)</source>
          <target state="translated">QNdefNfcTextRecord (class)</target>
        </trans-unit>
        <trans-unit id="9dccbe8f42d65558bf6f356059944ef749c1e2a5" translate="yes" xml:space="preserve">
          <source>QNdefNfcTextRecord Class</source>
          <target state="translated">QNdefNfcTextRecord类</target>
        </trans-unit>
        <trans-unit id="02e4eced62c440d52164ddfd282a6b85a1a97ffa" translate="yes" xml:space="preserve">
          <source>QNdefNfcTextRecord::Encoding</source>
          <target state="translated">QNdefNfcTextRecord::Encoding</target>
        </trans-unit>
        <trans-unit id="27164209eacde4ea08477ed1709c68ce8ed62485" translate="yes" xml:space="preserve">
          <source>QNdefNfcTextRecord::Encoding (enum)</source>
          <target state="translated">QNdefNfcTextRecord::Encoding (enum)</target>
        </trans-unit>
        <trans-unit id="f7d0180864e7c8220aec420230ff067d1a379080" translate="yes" xml:space="preserve">
          <source>QNdefNfcTextRecord::QNdefNfcTextRecord()</source>
          <target state="translated">QNdefNfcTextRecord::QNdefNfcTextRecord()</target>
        </trans-unit>
        <trans-unit id="ae2b82aa1eb376c545596254c54bb146677b1ee9" translate="yes" xml:space="preserve">
          <source>QNdefNfcTextRecord::QNdefNfcTextRecord(const &lt;a href=&quot;qndefrecord#QNdefRecord&quot;&gt;QNdefRecord&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNdefNfcTextRecord :: QNdefNfcTextRecord（const &lt;a href=&quot;qndefrecord#QNdefRecord&quot;&gt;QNdefRecord&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="dcd7e9593b06dc699335ca172b2ae869e6553d05" translate="yes" xml:space="preserve">
          <source>QNdefNfcTextRecord::encoding()</source>
          <target state="translated">QNdefNfcTextRecord::encoding()</target>
        </trans-unit>
        <trans-unit id="54cd7f60958d1fe82189d79ed44db43caa5d95c5" translate="yes" xml:space="preserve">
          <source>QNdefNfcTextRecord::locale()</source>
          <target state="translated">QNdefNfcTextRecord::locale()</target>
        </trans-unit>
        <trans-unit id="9f7dc449d6323a85a3449bbdb64dfd051045e9c3" translate="yes" xml:space="preserve">
          <source>QNdefNfcTextRecord::setEncoding()</source>
          <target state="translated">QNdefNfcTextRecord::setEncoding()</target>
        </trans-unit>
        <trans-unit id="583e7754b3f33d1b06c85198bdd5400fc10e4e72" translate="yes" xml:space="preserve">
          <source>QNdefNfcTextRecord::setLocale()</source>
          <target state="translated">QNdefNfcTextRecord::setLocale()</target>
        </trans-unit>
        <trans-unit id="31e62a0eb79c22ca3c93f4410618c319451ce0df" translate="yes" xml:space="preserve">
          <source>QNdefNfcTextRecord::setText()</source>
          <target state="translated">QNdefNfcTextRecord::setText()</target>
        </trans-unit>
        <trans-unit id="2cb3f367d6cba528fb8ce78f292ba613c04f70ef" translate="yes" xml:space="preserve">
          <source>QNdefNfcTextRecord::text()</source>
          <target state="translated">QNdefNfcTextRecord::text()</target>
        </trans-unit>
        <trans-unit id="b9e36e8a738de75236047f36ea9d0c818e78f871" translate="yes" xml:space="preserve">
          <source>QNdefNfcUriRecord</source>
          <target state="translated">QNdefNfcUriRecord</target>
        </trans-unit>
        <trans-unit id="455bf19e6e82508d43ad521dba922c60c96ac315" translate="yes" xml:space="preserve">
          <source>QNdefNfcUriRecord (class)</source>
          <target state="translated">QNdefNfcUriRecord(类)</target>
        </trans-unit>
        <trans-unit id="3d5dc7e0d7540941674b1ed4bbdfb6bb2bf5d41d" translate="yes" xml:space="preserve">
          <source>QNdefNfcUriRecord Class</source>
          <target state="translated">QNdefNfcUriRecord类</target>
        </trans-unit>
        <trans-unit id="05cacbd88dbd9dcc2684a95afb53d6489e6d3eee" translate="yes" xml:space="preserve">
          <source>QNdefNfcUriRecord::QNdefNfcUriRecord()</source>
          <target state="translated">QNdefNfcUriRecord::QNdefNfcUriRecord()</target>
        </trans-unit>
        <trans-unit id="7bcc5a60ec7d0c20c85822216036e6ff081536e2" translate="yes" xml:space="preserve">
          <source>QNdefNfcUriRecord::QNdefNfcUriRecord(const &lt;a href=&quot;qndefrecord#QNdefRecord&quot;&gt;QNdefRecord&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNdefNfcUriRecord :: QNdefNfcUriRecord（const &lt;a href=&quot;qndefrecord#QNdefRecord&quot;&gt;QNdefRecord&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ce8ae1b423781c19d7b2effd3b7ec3d47eefa807" translate="yes" xml:space="preserve">
          <source>QNdefNfcUriRecord::setUri()</source>
          <target state="translated">QNdefNfcUriRecord::setUri()</target>
        </trans-unit>
        <trans-unit id="74834094bd4c621e4af3b34104ce5ec5446adcce" translate="yes" xml:space="preserve">
          <source>QNdefNfcUriRecord::uri()</source>
          <target state="translated">QNdefNfcUriRecord::uri()</target>
        </trans-unit>
        <trans-unit id="615a6004dc4593fe5078caa25f602349f788e7ea" translate="yes" xml:space="preserve">
          <source>QNdefRecord</source>
          <target state="translated">QNdefRecord</target>
        </trans-unit>
        <trans-unit id="4769477abd4863034f756d1c82557b4c709d83d6" translate="yes" xml:space="preserve">
          <source>QNdefRecord &amp;amp;</source>
          <target state="translated">QNdefRecord＆</target>
        </trans-unit>
        <trans-unit id="b343df3033a8e594d0f8fad0483223ef20f6b910" translate="yes" xml:space="preserve">
          <source>QNdefRecord (class)</source>
          <target state="translated">QNdefRecord(类)</target>
        </trans-unit>
        <trans-unit id="398d6b2d444f76079a63ed791a8d526bea340a2f" translate="yes" xml:space="preserve">
          <source>QNdefRecord Class</source>
          <target state="translated">QNdefRecord类</target>
        </trans-unit>
        <trans-unit id="3c9b7d37d85e55e8b9f240d31f8f94b0f32bfaf7" translate="yes" xml:space="preserve">
          <source>QNdefRecord and derived classes are used to parse the contents of &lt;a href=&quot;qndefmessage&quot;&gt;NDEF messages&lt;/a&gt; and create new NDEF messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1f5442afe67ef817cace8711ade9ca502c0918" translate="yes" xml:space="preserve">
          <source>QNdefRecord is an implicitly shared class. This means you can efficiently convert between QNdefRecord and specialized record classes. The &lt;a href=&quot;qndefrecord#isRecordType&quot;&gt;isRecordType&lt;/a&gt;() template function can be used to test if a conversion is possible. The following example shows how to test if a QNdefRecord is an NFC RTD Text record and extract the text information from it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e5ef4c074747dd4422ea5d0d294b12bf2571c9" translate="yes" xml:space="preserve">
          <source>QNdefRecord::QNdefRecord()</source>
          <target state="translated">QNdefRecord::QNdefRecord()</target>
        </trans-unit>
        <trans-unit id="4c790dff932bd1b38a2e5d2734b043efb4234a90" translate="yes" xml:space="preserve">
          <source>QNdefRecord::QNdefRecord(const &lt;a href=&quot;qndefrecord#QNdefRecord&quot;&gt;QNdefRecord&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNdefRecord :: QNdefRecord（const &lt;a href=&quot;qndefrecord#QNdefRecord&quot;&gt;QNdefRecord&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="126a6dabaeb03cad88cb4dec12ee66d4800ebe2e" translate="yes" xml:space="preserve">
          <source>QNdefRecord::Q_DECLARE_ISRECORDTYPE_FOR_NDEF_RECORD(</source>
          <target state="translated">QNdefRecord::Q_DECLARE_ISRECORDTYPE_FOR_NDEF_RECORD(</target>
        </trans-unit>
        <trans-unit id="58cf75e1392fdfa0e3609bdd3e241225277953ad" translate="yes" xml:space="preserve">
          <source>QNdefRecord::Q_DECLARE_ISRECORDTYPE_FOR_NDEF_RECORD()</source>
          <target state="translated">QNdefRecord::Q_DECLARE_ISRECORDTYPE_FOR_NDEF_RECORD()</target>
        </trans-unit>
        <trans-unit id="92d3a063f57a316da17be8b8e0393a20f7c2533a" translate="yes" xml:space="preserve">
          <source>QNdefRecord::Q_DECLARE_NDEF_RECORD(</source>
          <target state="translated">QNdefRecord::Q_DECLARE_NDEF_RECORD(</target>
        </trans-unit>
        <trans-unit id="030d79a8fa6fbd52b9d00ba20cc8c9c98f9585a3" translate="yes" xml:space="preserve">
          <source>QNdefRecord::Q_DECLARE_NDEF_RECORD()</source>
          <target state="translated">QNdefRecord::Q_DECLARE_NDEF_RECORD()</target>
        </trans-unit>
        <trans-unit id="c13d1dea8f25811ff90129b35a76c8ab91f81e6f" translate="yes" xml:space="preserve">
          <source>QNdefRecord::TypeNameFormat</source>
          <target state="translated">QNdefRecord::TypeNameFormat</target>
        </trans-unit>
        <trans-unit id="6e5cd00a056dcc11a4ddde0169e3b107ac68bccb" translate="yes" xml:space="preserve">
          <source>QNdefRecord::TypeNameFormat (enum)</source>
          <target state="translated">QNdefRecord::TypeNameFormat (enum)</target>
        </trans-unit>
        <trans-unit id="82fa5fe62f1c7dac3b7852e731c5acb4eedf6260" translate="yes" xml:space="preserve">
          <source>QNdefRecord::id()</source>
          <target state="translated">QNdefRecord::id()</target>
        </trans-unit>
        <trans-unit id="b7a6b1cd86083bd2c4aa973ce924923da10f95ca" translate="yes" xml:space="preserve">
          <source>QNdefRecord::isEmpty()</source>
          <target state="translated">QNdefRecord::isEmpty()</target>
        </trans-unit>
        <trans-unit id="ca1b584fa1f021bafb9d8ea8335ea5b46fe9a3db" translate="yes" xml:space="preserve">
          <source>QNdefRecord::isRecordType()</source>
          <target state="translated">QNdefRecord::isRecordType()</target>
        </trans-unit>
        <trans-unit id="7a2f2e329399aa5ab187551438d1aed763df8c6a" translate="yes" xml:space="preserve">
          <source>QNdefRecord::operator!=()</source>
          <target state="translated">QNdefRecord::operator!=()</target>
        </trans-unit>
        <trans-unit id="71d116b8a09716b99730575a8cd8d6ab74e16b89" translate="yes" xml:space="preserve">
          <source>QNdefRecord::operator=()</source>
          <target state="translated">QNdefRecord::operator=()</target>
        </trans-unit>
        <trans-unit id="ae72b87075171ce1c73f6d2d66887e2523fef341" translate="yes" xml:space="preserve">
          <source>QNdefRecord::operator==()</source>
          <target state="translated">QNdefRecord::operator==()</target>
        </trans-unit>
        <trans-unit id="d2e3bc8064b7c17603534960d5e1eb3ce09daf5a" translate="yes" xml:space="preserve">
          <source>QNdefRecord::payload()</source>
          <target state="translated">QNdefRecord::payload()</target>
        </trans-unit>
        <trans-unit id="48a36c2286dd3f3fef404bce698dc733b0843f4a" translate="yes" xml:space="preserve">
          <source>QNdefRecord::setId()</source>
          <target state="translated">QNdefRecord::setId()</target>
        </trans-unit>
        <trans-unit id="4cbb9a6088b0d91d16514f137515ce142da63f59" translate="yes" xml:space="preserve">
          <source>QNdefRecord::setPayload()</source>
          <target state="translated">QNdefRecord::setPayload()</target>
        </trans-unit>
        <trans-unit id="778074db2650c8f6daf6ea0d79cd5a807d0b90c1" translate="yes" xml:space="preserve">
          <source>QNdefRecord::setType()</source>
          <target state="translated">QNdefRecord::setType()</target>
        </trans-unit>
        <trans-unit id="032ef1002771bea81b31a5c2dccc30f12abdb3f7" translate="yes" xml:space="preserve">
          <source>QNdefRecord::setTypeNameFormat()</source>
          <target state="translated">QNdefRecord::setTypeNameFormat()</target>
        </trans-unit>
        <trans-unit id="ca8baff94e0768ed912829d424d5b86496c74bcb" translate="yes" xml:space="preserve">
          <source>QNdefRecord::type()</source>
          <target state="translated">QNdefRecord::type()</target>
        </trans-unit>
        <trans-unit id="b6001bc7e2bd27ec8ed09f733596b2888061e715" translate="yes" xml:space="preserve">
          <source>QNdefRecord::typeNameFormat()</source>
          <target state="translated">QNdefRecord::typeNameFormat()</target>
        </trans-unit>
        <trans-unit id="3a373eb7c3cc0ef95c6e85a688a9a07ae2485f4f" translate="yes" xml:space="preserve">
          <source>QNdefRecord::~QNdefRecord()</source>
          <target state="translated">QNdefRecord::~QNdefRecord()</target>
        </trans-unit>
        <trans-unit id="5a6ed13c9db9b76dfb741042ea82d4b3e545a3ad" translate="yes" xml:space="preserve">
          <source>QNearFieldManager (class)</source>
          <target state="translated">QNearFieldManager(类)</target>
        </trans-unit>
        <trans-unit id="9bae75fa803e51f037cc7f34b0804c5c47269cab" translate="yes" xml:space="preserve">
          <source>QNearFieldManager Class</source>
          <target state="translated">QNearFieldManager类</target>
        </trans-unit>
        <trans-unit id="064828fe990e5c984b7d9d54a8c5590a56014a49" translate="yes" xml:space="preserve">
          <source>QNearFieldManager::AdapterState (enum)</source>
          <target state="translated">QNearFieldManager::AdapterState (enum)</target>
        </trans-unit>
        <trans-unit id="5e1c4656567a5cc56dfe84133d4ff19579ec3bba" translate="yes" xml:space="preserve">
          <source>QNearFieldManager::QNearFieldManager()</source>
          <target state="translated">QNearFieldManager::QNearFieldManager()</target>
        </trans-unit>
        <trans-unit id="b491bee36fa7f61c7618db11a5571a61821a8e8a" translate="yes" xml:space="preserve">
          <source>QNearFieldManager::QNearFieldManager(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">QNearFieldManager :: QNearFieldManager（&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="68ba11ac71d483004b6d198c002584b898e3312f" translate="yes" xml:space="preserve">
          <source>QNearFieldManager::TargetAccessModes</source>
          <target state="translated">QNearFieldManager::TargetAccessModes</target>
        </trans-unit>
        <trans-unit id="6d922e7bbbc1e71e909be82603c82111931373e3" translate="yes" xml:space="preserve">
          <source>QNearFieldManager::adapterStateChanged()</source>
          <target state="translated">QNearFieldManager::adapterStateChanged()</target>
        </trans-unit>
        <trans-unit id="be8cda3c6dd47aab5b97bf0ba91b48bcb3bab32c" translate="yes" xml:space="preserve">
          <source>QNearFieldManager::isAvailable()</source>
          <target state="translated">QNearFieldManager::isAvailable()</target>
        </trans-unit>
        <trans-unit id="7fbaa278c7949fa44820e3597bb46b0095cf606a" translate="yes" xml:space="preserve">
          <source>QNearFieldManager::isSupported()</source>
          <target state="translated">QNearFieldManager::isSupported()</target>
        </trans-unit>
        <trans-unit id="5479db712a0bbfe5ac37792982c3f8e9d71c37ba" translate="yes" xml:space="preserve">
          <source>QNearFieldManager::registerNdefMessageHandler()</source>
          <target state="translated">QNearFieldManager::registerNdefMessageHandler()</target>
        </trans-unit>
        <trans-unit id="5b9a9571f0eff45bd26e6a7f0f03bc297f776228" translate="yes" xml:space="preserve">
          <source>QNearFieldManager::setTargetAccessModes()</source>
          <target state="translated">QNearFieldManager::setTargetAccessModes()</target>
        </trans-unit>
        <trans-unit id="a243c91abb8204dac84cdae6db184944a5327d57" translate="yes" xml:space="preserve">
          <source>QNearFieldManager::startTargetDetection()</source>
          <target state="translated">QNearFieldManager::startTargetDetection()</target>
        </trans-unit>
        <trans-unit id="7f487ea6129c7982c8f85074a39e9e756e14baec" translate="yes" xml:space="preserve">
          <source>QNearFieldManager::stopTargetDetection()</source>
          <target state="translated">QNearFieldManager::stopTargetDetection()</target>
        </trans-unit>
        <trans-unit id="633d6d8e8dd47479c6fb771b8753d7ebd743b948" translate="yes" xml:space="preserve">
          <source>QNearFieldManager::targetAccessModes()</source>
          <target state="translated">QNearFieldManager::targetAccessModes()</target>
        </trans-unit>
        <trans-unit id="30034f0ccac3cb37e54437192a4f1b7919f2d3bc" translate="yes" xml:space="preserve">
          <source>QNearFieldManager::targetDetected()</source>
          <target state="translated">QNearFieldManager::targetDetected()</target>
        </trans-unit>
        <trans-unit id="a5cf703b3f58c5d19f032b72add45f60e514ee30" translate="yes" xml:space="preserve">
          <source>QNearFieldManager::targetLost()</source>
          <target state="translated">QNearFieldManager::targetLost()</target>
        </trans-unit>
        <trans-unit id="32c3dac343f81db2ff6e8ccf1563a82d5af94436" translate="yes" xml:space="preserve">
          <source>QNearFieldManager::unregisterNdefMessageHandler()</source>
          <target state="translated">QNearFieldManager::unregisterNdefMessageHandler()</target>
        </trans-unit>
        <trans-unit id="ad89ab85d9d98aec7293723e94b524ced848757a" translate="yes" xml:space="preserve">
          <source>QNearFieldManager::~QNearFieldManager()</source>
          <target state="translated">QNearFieldManager::~QNearFieldManager()</target>
        </trans-unit>
        <trans-unit id="da6e67d150df00196971d4b98dd1b62e5c62f6f1" translate="yes" xml:space="preserve">
          <source>QNearFieldShareManager (class)</source>
          <target state="translated">QNearFieldShareManager(类)</target>
        </trans-unit>
        <trans-unit id="4870df3bee3e03b18e4261ffb076f96ba949f8e7" translate="yes" xml:space="preserve">
          <source>QNearFieldShareManager Class</source>
          <target state="translated">QNearFieldShareManager类</target>
        </trans-unit>
        <trans-unit id="a1ae13f0e60e7db0c91273c45544ceb7e17ae118" translate="yes" xml:space="preserve">
          <source>QNearFieldShareManager::QNearFieldShareManager()</source>
          <target state="translated">QNearFieldShareManager::QNearFieldShareManager()</target>
        </trans-unit>
        <trans-unit id="13c019984a75e1be0a84e033d5dcdea9ee07e427" translate="yes" xml:space="preserve">
          <source>QNearFieldShareManager::QNearFieldShareManager(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">QNearFieldShareManager :: QNearFieldShareManager（&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e1efdef7845cba0b2475ead0dde25d69ae368be1" translate="yes" xml:space="preserve">
          <source>QNearFieldShareManager::ShareError</source>
          <target state="translated">QNearFieldShareManager::ShareError</target>
        </trans-unit>
        <trans-unit id="5a73eb97b711d8edf75cd3a84a41eb86ef3ae6a4" translate="yes" xml:space="preserve">
          <source>QNearFieldShareManager::ShareError (enum)</source>
          <target state="translated">QNearFieldShareManager::ShareError (enum)</target>
        </trans-unit>
        <trans-unit id="ac2ba66efbfd7d6db7be9279e15f2d44e2d2d490" translate="yes" xml:space="preserve">
          <source>QNearFieldShareManager::ShareModes</source>
          <target state="translated">QNearFieldShareManager::ShareModes</target>
        </trans-unit>
        <trans-unit id="0ed3c4599ed0974430ac59b7a14bbd78915d13f5" translate="yes" xml:space="preserve">
          <source>QNearFieldShareManager::error()</source>
          <target state="translated">QNearFieldShareManager::error()</target>
        </trans-unit>
        <trans-unit id="ddf54bce68f931d2f43ea36655794e77b9632f95" translate="yes" xml:space="preserve">
          <source>QNearFieldShareManager::setShareModes()</source>
          <target state="translated">QNearFieldShareManager::setShareModes()</target>
        </trans-unit>
        <trans-unit id="5d1190de25102f686cfa5e90a5b2245197c9abd9" translate="yes" xml:space="preserve">
          <source>QNearFieldShareManager::shareError()</source>
          <target state="translated">QNearFieldShareManager::shareError()</target>
        </trans-unit>
        <trans-unit id="62a856bc9f645609fc5668c13add92ae8253c43d" translate="yes" xml:space="preserve">
          <source>QNearFieldShareManager::shareModes()</source>
          <target state="translated">QNearFieldShareManager::shareModes()</target>
        </trans-unit>
        <trans-unit id="dd8a058d91453e8386e2c792111eae67fd40b3bf" translate="yes" xml:space="preserve">
          <source>QNearFieldShareManager::shareModesChanged()</source>
          <target state="translated">QNearFieldShareManager::shareModesChanged()</target>
        </trans-unit>
        <trans-unit id="5ec8901eaa0e8899045a4ad3565b7d78daf9facc" translate="yes" xml:space="preserve">
          <source>QNearFieldShareManager::supportedShareModes()</source>
          <target state="translated">QNearFieldShareManager::supportedShareModes()</target>
        </trans-unit>
        <trans-unit id="c100f5b737bc0e26d1cf9cf39bf29a66f52374dd" translate="yes" xml:space="preserve">
          <source>QNearFieldShareManager::targetDetected()</source>
          <target state="translated">QNearFieldShareManager::targetDetected()</target>
        </trans-unit>
        <trans-unit id="787f0bc1c51cb607c4b1263ac6730d3b8bf23e3c" translate="yes" xml:space="preserve">
          <source>QNearFieldShareManager::~QNearFieldShareManager()</source>
          <target state="translated">QNearFieldShareManager::~QNearFieldShareManager()</target>
        </trans-unit>
        <trans-unit id="3894249d8834e6e4d95268f42eeea126ab1f821c" translate="yes" xml:space="preserve">
          <source>QNearFieldShareTarget (class)</source>
          <target state="translated">QNearFieldShareTarget(类)</target>
        </trans-unit>
        <trans-unit id="05d9228d842ea75d6c28cf2d4e7979e0c8eb6f1c" translate="yes" xml:space="preserve">
          <source>QNearFieldShareTarget Class</source>
          <target state="translated">QNearFieldShareTarget类</target>
        </trans-unit>
        <trans-unit id="8bd951ed3e46469a19eefc1318f69aa57caa14ee" translate="yes" xml:space="preserve">
          <source>QNearFieldShareTarget::cancel()</source>
          <target state="translated">QNearFieldShareTarget::cancel()</target>
        </trans-unit>
        <trans-unit id="32d44ce6b1c59242f66d8d8ded94d57ba2e7ac7b" translate="yes" xml:space="preserve">
          <source>QNearFieldShareTarget::error()</source>
          <target state="translated">QNearFieldShareTarget::error()</target>
        </trans-unit>
        <trans-unit id="f7131cf9c859388187f824d613117acff990467d" translate="yes" xml:space="preserve">
          <source>QNearFieldShareTarget::isShareInProgress()</source>
          <target state="translated">QNearFieldShareTarget::isShareInProgress()</target>
        </trans-unit>
        <trans-unit id="cb2020f68cab2962be92362a374c634fde271d33" translate="yes" xml:space="preserve">
          <source>QNearFieldShareTarget::share()</source>
          <target state="translated">QNearFieldShareTarget::share()</target>
        </trans-unit>
        <trans-unit id="1e728429816e9638d03e3e76145dfbd8e7a7299f" translate="yes" xml:space="preserve">
          <source>QNearFieldShareTarget::shareError()</source>
          <target state="translated">QNearFieldShareTarget::shareError()</target>
        </trans-unit>
        <trans-unit id="0d8241a10d4ecc9c9b19db7e3c3ed88c4acda8bd" translate="yes" xml:space="preserve">
          <source>QNearFieldShareTarget::shareFinished()</source>
          <target state="translated">QNearFieldShareTarget::shareFinished()</target>
        </trans-unit>
        <trans-unit id="3fb08756a7cfe90a0f9cf251f2d3f770aa2b5e05" translate="yes" xml:space="preserve">
          <source>QNearFieldShareTarget::shareModes()</source>
          <target state="translated">QNearFieldShareTarget::shareModes()</target>
        </trans-unit>
        <trans-unit id="a2ba07011a6b21df5f01d325ba2723a089465234" translate="yes" xml:space="preserve">
          <source>QNearFieldShareTarget::~QNearFieldShareTarget()</source>
          <target state="translated">QNearFieldShareTarget::~QNearFieldShareTarget()</target>
        </trans-unit>
        <trans-unit id="ccdcfe6cdb581bf36010f40257e39f3b76ff165e" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget (class)</source>
          <target state="translated">QNearFieldTarget(类)</target>
        </trans-unit>
        <trans-unit id="94bd8c46606fb779e556f21486922d1bcd8c3bcd" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget Class</source>
          <target state="translated">QNearFieldTarget类</target>
        </trans-unit>
        <trans-unit id="87ce4e60d1dbcb6ddce88d732c0406d08e1cc414" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget provides a generic interface for communicating with an NFC target device. Both NFC Forum devices and NFC Forum Tag targets are supported by this class. All target specific classes subclass this class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46cf9c20a106059487d8fe7b9db7a758b3dcab8c" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::Error (enum)</source>
          <target state="translated">QNearFieldTarget::Error (enum)</target>
        </trans-unit>
        <trans-unit id="c48c5ffc23a2cb1f423b85fd2bb6400019f2ad0d" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::QNearFieldTarget()</source>
          <target state="translated">QNearFieldTarget::QNearFieldTarget()</target>
        </trans-unit>
        <trans-unit id="597421ce9fcb8f1f2b2ac9d5e9107021d0c70345" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::QNearFieldTarget(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">QNearFieldTarget :: QNearFieldTarget（&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f136c76474961e6ba46e65e2c6de585109f7d524" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::RequestId()</source>
          <target state="translated">QNearFieldTarget::RequestId()</target>
        </trans-unit>
        <trans-unit id="5ce867049e9970d14e79826cc70a2468630eb866" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::Type (enum)</source>
          <target state="translated">QNearFieldTarget::Type (enum)</target>
        </trans-unit>
        <trans-unit id="cd2f1fb95ee7fd34bd11edb1b47959a98c09d420" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::accessMethods()</source>
          <target state="translated">QNearFieldTarget::accessMethods()</target>
        </trans-unit>
        <trans-unit id="9c90ac7763d4cc4e3e6e9356503e969ebad856e1" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::disconnect()</source>
          <target state="translated">QNearFieldTarget::disconnect()</target>
        </trans-unit>
        <trans-unit id="b7876b972b48f8bcd885b54765fa3e5119f04c42" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::disconnected()</source>
          <target state="translated">QNearFieldTarget::disconnected()</target>
        </trans-unit>
        <trans-unit id="b2d12f0bb6e20363457d1e7545fb0d01e8b8a4ba" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::error()</source>
          <target state="translated">QNearFieldTarget::error()</target>
        </trans-unit>
        <trans-unit id="6efe7fb44dfad6534ca1e62422f8c181577452a3" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::handleResponse()</source>
          <target state="translated">QNearFieldTarget::handleResponse()</target>
        </trans-unit>
        <trans-unit id="558e5a468b912a3ea34bf87d42081991754727c2" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::hasNdefMessage()</source>
          <target state="translated">QNearFieldTarget::hasNdefMessage()</target>
        </trans-unit>
        <trans-unit id="e3175bde5f9b92b7e5f7335aac4b5fb4b1d6cb98" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::isProcessingCommand()</source>
          <target state="translated">QNearFieldTarget::isProcessingCommand()</target>
        </trans-unit>
        <trans-unit id="b5a08b0cb6d8dcc304f9c046c28687e31e9237d5" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::isValid()</source>
          <target state="translated">QNearFieldTarget::isValid()</target>
        </trans-unit>
        <trans-unit id="57e1fcf8a0114b931abccd63a8029862b2709a4e" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::keepConnection()</source>
          <target state="translated">QNearFieldTarget::keepConnection()</target>
        </trans-unit>
        <trans-unit id="908ec8053fc91c7ec82f2c1193649da6a3f245ab" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::maxCommandLength()</source>
          <target state="translated">QNearFieldTarget::maxCommandLength()</target>
        </trans-unit>
        <trans-unit id="215a839b18253fd8a44b764767cf4f95b4be896d" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::ndefMessageRead()</source>
          <target state="translated">QNearFieldTarget::ndefMessageRead()</target>
        </trans-unit>
        <trans-unit id="045e2dcf1a0c5e46545f416acf78a62ac727da6b" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::ndefMessagesWritten()</source>
          <target state="translated">QNearFieldTarget::ndefMessagesWritten()</target>
        </trans-unit>
        <trans-unit id="b27d6e8f144333cbc7bdc103f8b3c63b493814f2" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::operator=()</source>
          <target state="translated">QNearFieldTarget::operator=()</target>
        </trans-unit>
        <trans-unit id="824a6295e9702921a200e5f01eb72bd71acbe758" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::qNfcChecksum()</source>
          <target state="translated">QNearFieldTarget::qNfcChecksum()</target>
        </trans-unit>
        <trans-unit id="0201c2e9b3584d935546cef4bf230bc73beea198" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::readNdefMessages()</source>
          <target state="translated">QNearFieldTarget::readNdefMessages()</target>
        </trans-unit>
        <trans-unit id="baad1926f0885bdb67bc89309b7ee4cdc6a01a27" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::refCount()</source>
          <target state="translated">QNearFieldTarget::refCount()</target>
        </trans-unit>
        <trans-unit id="a7a2e892e5261fd6ea775f7716a66f9097b88411" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::reportError()</source>
          <target state="translated">QNearFieldTarget::reportError()</target>
        </trans-unit>
        <trans-unit id="dea138a8f5cf96b2a5c5c625f00b9704e76b4188" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::requestCompleted()</source>
          <target state="translated">QNearFieldTarget::requestCompleted()</target>
        </trans-unit>
        <trans-unit id="37fb375155aa3baba8a0c0a67238dc4e447cea66" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::requestResponse()</source>
          <target state="translated">QNearFieldTarget::requestResponse()</target>
        </trans-unit>
        <trans-unit id="c9a3e6279c4ef9b5d0953e7e5d726aadb6450f79" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::sendCommand()</source>
          <target state="translated">QNearFieldTarget::sendCommand()</target>
        </trans-unit>
        <trans-unit id="31a9fa933672dfbffa7d2178a1062befd3d0ea92" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::sendCommands()</source>
          <target state="translated">QNearFieldTarget::sendCommands()</target>
        </trans-unit>
        <trans-unit id="b8fc442bb0a38e4785d4c2222cc792762514b038" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::setKeepConnection()</source>
          <target state="translated">QNearFieldTarget::setKeepConnection()</target>
        </trans-unit>
        <trans-unit id="8d1b8db598f6abb77fbec74c459eecdc23f5c7b8" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::setResponseForRequest()</source>
          <target state="translated">QNearFieldTarget::setResponseForRequest()</target>
        </trans-unit>
        <trans-unit id="986246661c4bd2ceaad0c740bbae5afc16baa2e5" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::type()</source>
          <target state="translated">QNearFieldTarget::type()</target>
        </trans-unit>
        <trans-unit id="31aa1670d3b82037670a63e4b51c131f9d91e5aa" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::uid()</source>
          <target state="translated">QNearFieldTarget::uid()</target>
        </trans-unit>
        <trans-unit id="3b22024f756dff0160b1589aea8c69aba09e1284" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::url()</source>
          <target state="translated">QNearFieldTarget::url()</target>
        </trans-unit>
        <trans-unit id="47500e17f3cdc408db9c7c4d84cb33dde2011b5b" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::waitForRequestCompleted()</source>
          <target state="translated">QNearFieldTarget::waitForRequestCompleted()</target>
        </trans-unit>
        <trans-unit id="a81796953e6b9d66a7ce984ed72015fafa87a769" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::writeNdefMessages()</source>
          <target state="translated">QNearFieldTarget::writeNdefMessages()</target>
        </trans-unit>
        <trans-unit id="31087cc804a93d3b7f69600247424752854ccdae" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::~QNearFieldTarget()</source>
          <target state="translated">QNearFieldTarget::~QNearFieldTarget()</target>
        </trans-unit>
        <trans-unit id="d2ceef9104143e860c286459de163f3a1a321263" translate="yes" xml:space="preserve">
          <source>QNearFieldTarget::~RequestId()</source>
          <target state="translated">QNearFieldTarget::~RequestId()</target>
        </trans-unit>
        <trans-unit id="1d9773f2aa1d880b80e45131e1d07fad8e366ac1" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager (class)</source>
          <target state="translated">QNetworkAccessManager(类)</target>
        </trans-unit>
        <trans-unit id="3c453fcbb8f27786b80a15acb1a2ea62b9d27d0e" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager *</source>
          <target state="translated">QNetworkAccessManager *</target>
        </trans-unit>
        <trans-unit id="67f1b66be5dd93b202df8749a0c1c2819f34a4d0" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager *QQmlEngine::networkAccessManager() const</source>
          <target state="translated">QNetworkAccessManager *QQmlEngine::networkAccessManager()const</target>
        </trans-unit>
        <trans-unit id="8caf6fea912723334398b3730cd857d6e24bc30f" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager *QXmlQuery::networkAccessManager() const</source>
          <target state="translated">QNetworkAccessManager *QXmlQuery::networkAccessManager()const</target>
        </trans-unit>
        <trans-unit id="2d7f57e7a8fb2dd944aa6fbd17a07210a07094ef" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager *QXmlSchema::networkAccessManager() const</source>
          <target state="translated">QNetworkAccessManager *QXmlSchema::networkAccessManager()const</target>
        </trans-unit>
        <trans-unit id="389b614f3737a5f17758cf924d61077fde8d796b" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager *QXmlSchemaValidator::networkAccessManager() const</source>
          <target state="translated">QNetworkAccessManager *QXmlSchemaValidator::networkAccessManager()const</target>
        </trans-unit>
        <trans-unit id="a316d81a2f663a427db0ccfcae6a2927381c9b26" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager Class</source>
          <target state="translated">QNetworkAccessManager类</target>
        </trans-unit>
        <trans-unit id="bb6e1720a83426e057c0744c850d649897078edc" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager has an asynchronous API. When the &lt;code&gt;replyFinished&lt;/code&gt; slot above is called, the parameter it takes is the &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; object containing the downloaded data as well as meta-data (headers, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b939f3a652f9cc7eb4e7223ac88a7c6905fbaa2" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager is used for all network access by QML. By implementing a factory it is possible to create custom QNetworkAccessManager with specialized caching, proxy and cookie support.</source>
          <target state="translated">QNetworkAccessManager用于QML的所有网络访问。通过实现一个工厂,可以创建自定义的QNetworkAccessManager,并提供专门的缓存、代理和cookie支持。</target>
        </trans-unit>
        <trans-unit id="2fe29c60345b8c2b2d5f1684c1a4b7e514ae346b" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::Accessible</source>
          <target state="translated">QNetworkAccessManager::Accessible</target>
        </trans-unit>
        <trans-unit id="d3c37593031544515d1996f7865f97e69e677186" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::NetworkAccessibility</source>
          <target state="translated">QNetworkAccessManager::NetworkAccessibility</target>
        </trans-unit>
        <trans-unit id="27264f68ebcf0d9622b83b2d0750e517de260310" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::NetworkAccessibility (enum)</source>
          <target state="translated">QNetworkAccessManager::NetworkAccessibility (enum)</target>
        </trans-unit>
        <trans-unit id="b4f69805385943bbd84cff96da894c9acdb3c03c" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::NotAccessible;</source>
          <target state="translated">QNetworkAccessManager::NotAccessible;</target>
        </trans-unit>
        <trans-unit id="fe86090b5ab2ba9bb03c1bc88a0b44c156ba9cd0" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::Operation</source>
          <target state="translated">QNetworkAccessManager::Operation</target>
        </trans-unit>
        <trans-unit id="502a217bb7b9470c90fe668da5c5bb8057456e7f" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::Operation (enum)</source>
          <target state="translated">QNetworkAccessManager::Operation (enum)</target>
        </trans-unit>
        <trans-unit id="3605a154fffe3f5e94159ea6745795e7f839c5f2" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::QNetworkAccessManager()</source>
          <target state="translated">QNetworkAccessManager::QNetworkAccessManager()</target>
        </trans-unit>
        <trans-unit id="18648f592d5bcaf399cbf769317712de75957a82" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::QNetworkAccessManager(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">QNetworkAccessManager :: QNetworkAccessManager（&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="cf2c9f0103dfd75fa7ac1fe168f39f806c4dad1e" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::UnknownAccessibility;</source>
          <target state="translated">QNetworkAccessManager::UnknownAccessibility;</target>
        </trans-unit>
        <trans-unit id="ce97a61597c32bba24735ab2212af85b1508d970" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::activeConfiguration()</source>
          <target state="translated">QNetworkAccessManager::activeConfiguration()</target>
        </trans-unit>
        <trans-unit id="899220f37a1978f6cc3d3ebf47c6475c87fa23e7" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::addStrictTransportSecurityHosts()</source>
          <target state="translated">QNetworkAccessManager::addStrictTransportSecurityHosts()</target>
        </trans-unit>
        <trans-unit id="a898b8d3a98f919247dbd45d32f6244d94dcc8c7" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::authenticationRequired()</source>
          <target state="translated">QNetworkAccessManager::authenticationRequired()</target>
        </trans-unit>
        <trans-unit id="f7cc6fac7f5385e15a846b8ba36bf254bab016ef" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::autoDeleteReplies()</source>
          <target state="translated">QNetworkAccessManager::autoDeleteReplies()</target>
        </trans-unit>
        <trans-unit id="48cfca36fdbfece7a40e058bdb09e79a0306d5ae" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::cache()</source>
          <target state="translated">QNetworkAccessManager::cache()</target>
        </trans-unit>
        <trans-unit id="4d1ba219f87ad4fc70fc589ffca6b36d04cd0639" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::clearAccessCache()</source>
          <target state="translated">QNetworkAccessManager::clearAccessCache()</target>
        </trans-unit>
        <trans-unit id="96dfb5fdfe399a730fdfded574d3ec296f7a079f" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::clearConnectionCache()</source>
          <target state="translated">QNetworkAccessManager::clearConnectionCache()</target>
        </trans-unit>
        <trans-unit id="386573c2850af90854e6c871e3e0ecae3af966f2" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::configuration()</source>
          <target state="translated">QNetworkAccessManager::configuration()</target>
        </trans-unit>
        <trans-unit id="a1e5879d67980d4d5d939d3369b269b6e37c34d0" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::connectToHost()</source>
          <target state="translated">QNetworkAccessManager::connectToHost()</target>
        </trans-unit>
        <trans-unit id="a6ded02a28a84221c73b905642ca217008d16f7f" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::connectToHostEncrypted()</source>
          <target state="translated">QNetworkAccessManager::connectToHostEncrypted()</target>
        </trans-unit>
        <trans-unit id="5b33b770e6efb9afe61f5570ed4e2fe05fb0ad46" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::cookieJar()</source>
          <target state="translated">QNetworkAccessManager::cookieJar()</target>
        </trans-unit>
        <trans-unit id="b4f3e897d3596b8f00a6273debe1a8d1cf8a8661" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::createRequest()</source>
          <target state="translated">QNetworkAccessManager::createRequest()</target>
        </trans-unit>
        <trans-unit id="73160d6c1e4e37f7e1e1f5807e13dba204c4c166" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::deleteResource()</source>
          <target state="translated">QNetworkAccessManager::deleteResource()</target>
        </trans-unit>
        <trans-unit id="ec4b338241eb476761408ada2e8257144957f550" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::enableStrictTransportSecurityStore()</source>
          <target state="translated">QNetworkAccessManager::enableStrictTransportSecurityStore()</target>
        </trans-unit>
        <trans-unit id="81cc734fe2bd7a99adfb2b56779833ec404d3bb0" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::encrypted()</source>
          <target state="translated">QNetworkAccessManager::encrypted()</target>
        </trans-unit>
        <trans-unit id="e4b6e6915cd675997da91090f4a8af5bd9381952" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::finished()</source>
          <target state="translated">QNetworkAccessManager::finished()</target>
        </trans-unit>
        <trans-unit id="4e31df9ad319a6615896cdcc26b114af713b9f3e" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::get()</source>
          <target state="translated">QNetworkAccessManager::get()</target>
        </trans-unit>
        <trans-unit id="f9cea40b10eff14125603cd1319576889da384cd" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::head()</source>
          <target state="translated">QNetworkAccessManager::head()</target>
        </trans-unit>
        <trans-unit id="8ea62a73aed41e25b4a05fd846329376c10d02f2" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::isStrictTransportSecurityEnabled()</source>
          <target state="translated">QNetworkAccessManager::isStrictTransportSecurityEnabled()</target>
        </trans-unit>
        <trans-unit id="e89394c6829b337d96acc457ff6bd203e4509946" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::isStrictTransportSecurityStoreEnabled()</source>
          <target state="translated">QNetworkAccessManager::isStrictTransportSecurityStoreEnabled()</target>
        </trans-unit>
        <trans-unit id="f847fe3407502707771504c5acc405ed32231444" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::networkAccessible</source>
          <target state="translated">QNetworkAccessManager::networkAccessible</target>
        </trans-unit>
        <trans-unit id="716a8f8f1dfaeda4c2116725470abaf8a33f2710" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::networkAccessible()</source>
          <target state="translated">QNetworkAccessManager::networkAccessible()</target>
        </trans-unit>
        <trans-unit id="e7dc7a68fa1e911b39297d635816e23d23d87ea7" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::networkAccessibleChanged()</source>
          <target state="translated">QNetworkAccessManager::networkAccessibleChanged()</target>
        </trans-unit>
        <trans-unit id="3eb0eb89aa09f3d7fb3886b3dc5236e52c40ac73" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::post()</source>
          <target state="translated">QNetworkAccessManager::post()</target>
        </trans-unit>
        <trans-unit id="84256549095a8ec8c05f056c13ef1a8b24385578" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::preSharedKeyAuthenticationRequired()</source>
          <target state="translated">QNetworkAccessManager::preSharedKeyAuthenticationRequired()</target>
        </trans-unit>
        <trans-unit id="a6d403bdeba860b3003321f60054298c584035bf" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::proxy()</source>
          <target state="translated">QNetworkAccessManager::proxy()</target>
        </trans-unit>
        <trans-unit id="ab89e8af88146204c0a7e6937cd5410b59d40d7e" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::proxyAuthenticationRequired()</source>
          <target state="translated">QNetworkAccessManager::proxyAuthenticationRequired()</target>
        </trans-unit>
        <trans-unit id="c4698ebc93260d36e9f9702d08c311370a836065" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::proxyFactory()</source>
          <target state="translated">QNetworkAccessManager::proxyFactory()</target>
        </trans-unit>
        <trans-unit id="2ddf6789f5785b2171567571c21e15a822a6feb4" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::put()</source>
          <target state="translated">QNetworkAccessManager::put()</target>
        </trans-unit>
        <trans-unit id="f4a7c7cb3496233866450f4c096dfa841a16830c" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::redirectPolicy()</source>
          <target state="translated">QNetworkAccessManager::redirectPolicy()</target>
        </trans-unit>
        <trans-unit id="8a335d1376575d7dc1bdd36faab3b56dc4c0cfdf" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::sendCustomRequest()</source>
          <target state="translated">QNetworkAccessManager::sendCustomRequest()</target>
        </trans-unit>
        <trans-unit id="7986f6b7087e059d1602bfbe7a92a3156a8b017f" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::setAutoDeleteReplies()</source>
          <target state="translated">QNetworkAccessManager::setAutoDeleteReplies()</target>
        </trans-unit>
        <trans-unit id="25731a70f4d92a596c60477b07a01cc19682a161" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::setCache()</source>
          <target state="translated">QNetworkAccessManager::setCache()</target>
        </trans-unit>
        <trans-unit id="ba2fa33f00b952e2aca39704a11a6e04a8d3eee9" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::setConfiguration()</source>
          <target state="translated">QNetworkAccessManager::setConfiguration()</target>
        </trans-unit>
        <trans-unit id="d1627f1c3db69a45e4f6a0fda44cdb8a1427c79b" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::setCookieJar()</source>
          <target state="translated">QNetworkAccessManager::setCookieJar()</target>
        </trans-unit>
        <trans-unit id="f177676a567168044f9f6f39bded3f98942a37b1" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::setNetworkAccessible()</source>
          <target state="translated">QNetworkAccessManager::setNetworkAccessible()</target>
        </trans-unit>
        <trans-unit id="1a34fa391eb3d91fb3b4f897317f996024dfda8b" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::setProxy()</source>
          <target state="translated">QNetworkAccessManager::setProxy()</target>
        </trans-unit>
        <trans-unit id="d50f049b00854ea38777371c0dc13b0f94c60959" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::setProxyFactory()</source>
          <target state="translated">QNetworkAccessManager::setProxyFactory()</target>
        </trans-unit>
        <trans-unit id="ad835cef56fa99e7061d1cdf4760923002ab017a" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::setRedirectPolicy()</source>
          <target state="translated">QNetworkAccessManager::setRedirectPolicy()</target>
        </trans-unit>
        <trans-unit id="34e575cc889086446550fe3ee0f2e8d1ed6f46aa" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::setStrictTransportSecurityEnabled()</source>
          <target state="translated">QNetworkAccessManager::setStrictTransportSecurityEnabled()</target>
        </trans-unit>
        <trans-unit id="a98fd9d5f98f18d0d4a4e3b071f1a4616ac641de" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::setTransferTimeout()</source>
          <target state="translated">QNetworkAccessManager::setTransferTimeout()</target>
        </trans-unit>
        <trans-unit id="3a6301cf108327a3daef6a9b363343b528b06528" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::sslErrors()</source>
          <target state="translated">QNetworkAccessManager::sslErrors()</target>
        </trans-unit>
        <trans-unit id="8e4aee80204ed338be18313d7129c3a3a9998fa3" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::strictTransportSecurityHosts()</source>
          <target state="translated">QNetworkAccessManager::strictTransportSecurityHosts()</target>
        </trans-unit>
        <trans-unit id="1e477e19af516780ce2bb6d9254bbb6aecab0652" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::supportedSchemes()</source>
          <target state="translated">QNetworkAccessManager::supportedSchemes()</target>
        </trans-unit>
        <trans-unit id="babd8691a7c3b23f4bc7240974119eb35c360a6e" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::supportedSchemesImplementation()</source>
          <target state="translated">QNetworkAccessManager::supportedSchemesImplementation()</target>
        </trans-unit>
        <trans-unit id="d927db389773cbd3f0847f285652e7cda7321f27" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::transferTimeout()</source>
          <target state="translated">QNetworkAccessManager::transferTimeout()</target>
        </trans-unit>
        <trans-unit id="5de45e1c7c8899665ccba9c333567586e3b6236e" translate="yes" xml:space="preserve">
          <source>QNetworkAccessManager::~QNetworkAccessManager()</source>
          <target state="translated">QNetworkAccessManager::~QNetworkAccessManager()</target>
        </trans-unit>
        <trans-unit id="51687fafca5fd57b466bdd6ecfa21a9f8ad48b3e" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry</source>
          <target state="translated">QNetworkAddressEntry</target>
        </trans-unit>
        <trans-unit id="b9c8005bc21a2e1e125d4039dd053aa23d8b972f" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry &amp;amp;</source>
          <target state="translated">QNetworkAddressEntry和</target>
        </trans-unit>
        <trans-unit id="2dc56fdaf54af40bde1a234a59de5bf0d8851ba7" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry (class)</source>
          <target state="translated">QNetworkAddressEntry(类)</target>
        </trans-unit>
        <trans-unit id="744aa680e6445bfd462327b549b260881a9233c2" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry Class</source>
          <target state="translated">QNetworkAddressEntry类</target>
        </trans-unit>
        <trans-unit id="667a574d58b311ed36355b3bf5d37bf5a321ac51" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::DnsEligibilityStatus</source>
          <target state="translated">QNetworkAddressEntry::DnsEligibilityStatus</target>
        </trans-unit>
        <trans-unit id="feacd5a6b0d0cc7b200e356d015d9749ccc2a0fa" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::DnsEligibilityStatus (enum)</source>
          <target state="translated">QNetworkAddressEntry::DnsEligibilityStatus (enum)</target>
        </trans-unit>
        <trans-unit id="fda359c0da59b051daf63260cc51c127e8dd13fc" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::QNetworkAddressEntry()</source>
          <target state="translated">QNetworkAddressEntry::QNetworkAddressEntry()</target>
        </trans-unit>
        <trans-unit id="c3814bc693b91183559ae00684799d2f22b9d1d7" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::QNetworkAddressEntry(const &lt;a href=&quot;qnetworkaddressentry#QNetworkAddressEntry&quot;&gt;QNetworkAddressEntry&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNetworkAddressEntry :: QNetworkAddressEntry（const &lt;a href=&quot;qnetworkaddressentry#QNetworkAddressEntry&quot;&gt;QNetworkAddressEntry&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="fd9d6ef8a65ffb3271c5d6f0fc4d61e978dc92a2" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::broadcast()</source>
          <target state="translated">QNetworkAddressEntry::broadcast()</target>
        </trans-unit>
        <trans-unit id="0ea47c92759561cfee21770ccb9b79d26c8a456c" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::clearAddressLifetime()</source>
          <target state="translated">QNetworkAddressEntry::clearAddressLifetime()</target>
        </trans-unit>
        <trans-unit id="c4569d90bc8d6d46cdc0246c8d24fe4ce0371dc9" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::dnsEligibility()</source>
          <target state="translated">QNetworkAddressEntry::dnsEligibility()</target>
        </trans-unit>
        <trans-unit id="823f644b052aaf7e676cc5cc3f46195a6221ba88" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::ip()</source>
          <target state="translated">QNetworkAddressEntry::ip()</target>
        </trans-unit>
        <trans-unit id="f98923da32738ceb4c7a0e01464a6620935c8e79" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::isLifetimeKnown()</source>
          <target state="translated">QNetworkAddressEntry::isLifetimeKnown()</target>
        </trans-unit>
        <trans-unit id="2c66377b85527aacdc9f1b75e88da1571cf2983c" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::isPermanent()</source>
          <target state="translated">QNetworkAddressEntry::isPermanent()</target>
        </trans-unit>
        <trans-unit id="7b094d2bd94462e5300d41be6191c044accf30a7" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::isTemporary()</source>
          <target state="translated">QNetworkAddressEntry::isTemporary()</target>
        </trans-unit>
        <trans-unit id="66c8182d1df061cc18085d96da429b25d88b3bf8" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::netmask()</source>
          <target state="translated">QNetworkAddressEntry::netmask()</target>
        </trans-unit>
        <trans-unit id="57356ee850e515a7f78b7ed2e0bc0ee3cf0fcccd" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::operator!=()</source>
          <target state="translated">QNetworkAddressEntry::operator!=()</target>
        </trans-unit>
        <trans-unit id="f36105eb95130e2a26823c5054ed019477ce0a8e" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::operator=()</source>
          <target state="translated">QNetworkAddressEntry::operator=()</target>
        </trans-unit>
        <trans-unit id="ee15ad765d0c1b08f7c9529d6c7e42daa530364b" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::operator==()</source>
          <target state="translated">QNetworkAddressEntry::operator==()</target>
        </trans-unit>
        <trans-unit id="24a759d27d8f88c975cf17e9ba06dbf73180fc17" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::preferredLifetime()</source>
          <target state="translated">QNetworkAddressEntry::preferredLifetime()</target>
        </trans-unit>
        <trans-unit id="d308616300a32b1ae44964ac795187b17dbdafc4" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::prefixLength()</source>
          <target state="translated">QNetworkAddressEntry::prefixLength()</target>
        </trans-unit>
        <trans-unit id="4524930dbf7ceb28c6e329f83edcedd24d40b341" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::setAddressLifetime()</source>
          <target state="translated">QNetworkAddressEntry::setAddressLifetime()</target>
        </trans-unit>
        <trans-unit id="eec2bbea5bfd2aeaec42aa7e618b13924d8f9f43" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::setBroadcast()</source>
          <target state="translated">QNetworkAddressEntry::setBroadcast()</target>
        </trans-unit>
        <trans-unit id="47fb585940a6d2f61e08ad3ca65caf5ece264aba" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::setDnsEligibility()</source>
          <target state="translated">QNetworkAddressEntry::setDnsEligibility()</target>
        </trans-unit>
        <trans-unit id="b9ad26a63d6d52955ebcb1ccee569565416a4994" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::setIp()</source>
          <target state="translated">QNetworkAddressEntry::setIp()</target>
        </trans-unit>
        <trans-unit id="f9cd5068c627dbab4025a7625ac07bfe07b49cb3" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::setNetmask()</source>
          <target state="translated">QNetworkAddressEntry::setNetmask()</target>
        </trans-unit>
        <trans-unit id="04e170addb3f14a273af6f9c1cf5d3575577fc1c" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::setPrefixLength()</source>
          <target state="translated">QNetworkAddressEntry::setPrefixLength()</target>
        </trans-unit>
        <trans-unit id="90e68941da918f59d8433747b698b3113f9d6b80" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::swap()</source>
          <target state="translated">QNetworkAddressEntry::swap()</target>
        </trans-unit>
        <trans-unit id="06ee04264328045312675966df9972e6c2822575" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::validityLifetime()</source>
          <target state="translated">QNetworkAddressEntry::validityLifetime()</target>
        </trans-unit>
        <trans-unit id="c1ce2299c99cafaa6df33d546a55c90afbdf2915" translate="yes" xml:space="preserve">
          <source>QNetworkAddressEntry::~QNetworkAddressEntry()</source>
          <target state="translated">QNetworkAddressEntry::~QNetworkAddressEntry()</target>
        </trans-unit>
        <trans-unit id="a23d4974e7f7732e2e18fc909685a8783348974d" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData</source>
          <target state="translated">QNetworkCacheMetaData</target>
        </trans-unit>
        <trans-unit id="cd907fa864085551c4812f2db90870f13c9c9963" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData &amp;amp;</source>
          <target state="translated">QNetworkCacheMetaData和</target>
        </trans-unit>
        <trans-unit id="8aac714e16555a6eea193b6b95fe9ccf88d233de" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData (class)</source>
          <target state="translated">QNetworkCacheMetaData(类)</target>
        </trans-unit>
        <trans-unit id="0571433d3028b2371604649488f2cbd515210fc5" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData Class</source>
          <target state="translated">QNetworkCacheMetaData类</target>
        </trans-unit>
        <trans-unit id="75714db3db3aa39719071415baf9a8747920272b" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData provides information about a cache file including the url, when it was last modified, when the cache file was created, headers for file and if the file should be saved onto a disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8cdbf2936164b765c8bf856f010f004f3cbe08e" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData.</source>
          <target state="translated">QNetworkCacheMetaData.</target>
        </trans-unit>
        <trans-unit id="f9c023890c7241127a83d10093483c1014673158" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::AttributesMap</source>
          <target state="translated">QNetworkCacheMetaData::AttributesMap</target>
        </trans-unit>
        <trans-unit id="04307498a475d1e0ef3e2ff82dfabd33a74b11df" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::AttributesMap (typedef)</source>
          <target state="translated">QNetworkCacheMetaData::AttributesMap (typedef)</target>
        </trans-unit>
        <trans-unit id="d8a42abecaa23cb8dc28e2af61f38cbe6ce2581c" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::QNetworkCacheMetaData()</source>
          <target state="translated">QNetworkCacheMetaData::QNetworkCacheMetaData()</target>
        </trans-unit>
        <trans-unit id="f1611d9fe18ab27b808d8a57115a12bc6616b520" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::QNetworkCacheMetaData(const &lt;a href=&quot;qnetworkcachemetadata#QNetworkCacheMetaData&quot;&gt;QNetworkCacheMetaData&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNetworkCacheMetaData :: QNetworkCacheMetaData（const &lt;a href=&quot;qnetworkcachemetadata#QNetworkCacheMetaData&quot;&gt;QNetworkCacheMetaData&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="93d9eba8c03048c27e198a8c0eb6c5892e97a7c3" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::RawHeader</source>
          <target state="translated">QNetworkCacheMetaData::RawHeader</target>
        </trans-unit>
        <trans-unit id="cbc8323f019aa4cccfe8a505673ee3109a1e0fac" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::RawHeader (typedef)</source>
          <target state="translated">QNetworkCacheMetaData::RawHeader (typedef)</target>
        </trans-unit>
        <trans-unit id="5bfa08064dce16d691d9aa18a05128f8f7e68342" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::RawHeaderList</source>
          <target state="translated">QNetworkCacheMetaData::RawHeaderList</target>
        </trans-unit>
        <trans-unit id="bb863dc862f7d6b603ff07d40f82950a055ba810" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::RawHeaderList (typedef)</source>
          <target state="translated">QNetworkCacheMetaData::RawHeaderList (typedef)</target>
        </trans-unit>
        <trans-unit id="498e9849318f30a7dcbe1a9471393f993a456a54" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::attributes()</source>
          <target state="translated">QNetworkCacheMetaData::attributes()</target>
        </trans-unit>
        <trans-unit id="106d9d14116f4697770189b2f709c5bf4fffc541" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::expirationDate()</source>
          <target state="translated">QNetworkCacheMetaData::expirationDate()</target>
        </trans-unit>
        <trans-unit id="1aea8a9bb7f1ba2dcdd4d7f75f8082217ddea147" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::isValid()</source>
          <target state="translated">QNetworkCacheMetaData::isValid()</target>
        </trans-unit>
        <trans-unit id="51ea0746fbb12c55b4a8d4f6fd070bf296265cc8" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::lastModified()</source>
          <target state="translated">QNetworkCacheMetaData::lastModified()</target>
        </trans-unit>
        <trans-unit id="0bdd8ac5ff5e6d5fcb851cc28567c5d7b5781939" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::operator!=()</source>
          <target state="translated">QNetworkCacheMetaData::operator!=()</target>
        </trans-unit>
        <trans-unit id="6965c555a046ababfd6269becc99985a1c4b7b6f" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::operator&amp;gt;&amp;gt;()</source>
          <target state="translated">QNetworkCacheMetaData::operator&amp;gt;&amp;gt;()</target>
        </trans-unit>
        <trans-unit id="26bc783868fa1c9123424406f21457541490c02f" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::operator&amp;lt;&amp;lt;()</source>
          <target state="translated">QNetworkCacheMetaData::operator&amp;lt;&amp;lt;()</target>
        </trans-unit>
        <trans-unit id="7d6eae5f22a8afe18e390c79d7f50ddeaaed7720" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::operator=()</source>
          <target state="translated">QNetworkCacheMetaData::operator=()</target>
        </trans-unit>
        <trans-unit id="055cae5ef14f594d5647faac45b9cd83f4e2af9c" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::operator==()</source>
          <target state="translated">QNetworkCacheMetaData::operator==()</target>
        </trans-unit>
        <trans-unit id="bcf2153699ed0bb43d6acf699028d7fda85a92a7" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::rawHeaders()</source>
          <target state="translated">QNetworkCacheMetaData::rawHeaders()</target>
        </trans-unit>
        <trans-unit id="e332e90d5c943d367dd6553616faf5aad7e4ce8d" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::saveToDisk()</source>
          <target state="translated">QNetworkCacheMetaData::saveToDisk()</target>
        </trans-unit>
        <trans-unit id="5f0eaf51176e18837da5c5439767f853a7c882cd" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::setAttributes()</source>
          <target state="translated">QNetworkCacheMetaData::setAttributes()</target>
        </trans-unit>
        <trans-unit id="37b48ef93c2519daaa4e5fdb828b10d392070a0a" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::setExpirationDate()</source>
          <target state="translated">QNetworkCacheMetaData::setExpirationDate()</target>
        </trans-unit>
        <trans-unit id="60503180b2fd6913186dfcc1b307939b3c629e0e" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::setLastModified()</source>
          <target state="translated">QNetworkCacheMetaData::setLastModified()</target>
        </trans-unit>
        <trans-unit id="2da3a3c09b997955a29229d548623a21a4a79b7d" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::setRawHeaders()</source>
          <target state="translated">QNetworkCacheMetaData::setRawHeaders()</target>
        </trans-unit>
        <trans-unit id="007ecac632859a46b82b1f500f4511c8718ddbf3" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::setSaveToDisk()</source>
          <target state="translated">QNetworkCacheMetaData::setSaveToDisk()</target>
        </trans-unit>
        <trans-unit id="dff56f101e57549f3369c37885b9d6b9c5fa42b2" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::setUrl()</source>
          <target state="translated">QNetworkCacheMetaData::setUrl()</target>
        </trans-unit>
        <trans-unit id="aa1615e608054e25cf1732cf86e210b6506ebd30" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::swap()</source>
          <target state="translated">QNetworkCacheMetaData::swap()</target>
        </trans-unit>
        <trans-unit id="d9699b4950d49dba4fbb6745271fa1766102d724" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::url()</source>
          <target state="translated">QNetworkCacheMetaData::url()</target>
        </trans-unit>
        <trans-unit id="a1fa6396ee70544e721825634e333a3eee92031d" translate="yes" xml:space="preserve">
          <source>QNetworkCacheMetaData::~QNetworkCacheMetaData()</source>
          <target state="translated">QNetworkCacheMetaData::~QNetworkCacheMetaData()</target>
        </trans-unit>
        <trans-unit id="8d98d7fee18381ade087dc814bf7a48c65ed96e7" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration</source>
          <target state="translated">QNetworkConfiguration</target>
        </trans-unit>
        <trans-unit id="3498c45cdf110d1c6204ea340576aafac93cb0ae" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration &amp;amp;</source>
          <target state="translated">QNetworkConfiguration和</target>
        </trans-unit>
        <trans-unit id="e7f0ddc250849ec961bf88d2e28c9a83fabcd724" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration (class)</source>
          <target state="translated">QNetworkConfiguration</target>
        </trans-unit>
        <trans-unit id="dc60e4dfba651acc8fa31564215f6a38324c5375" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration Class</source>
          <target state="translated">QNetworkConfiguration类</target>
        </trans-unit>
        <trans-unit id="d493cf7b7d6162d25791de259f8d79764ae10583" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration encapsulates a single access point or service network. In most cases a single access point configuration can be mapped to one network interface. However a single network interface may not always map to only one access point configuration. Multiple configurations for the same network device may enable multiple access points. An example device that could exhibit such a configuration might be a Smartphone which allows the user to manage multiple WLAN configurations while the device itself has only one WLAN network device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e21d542ac3983edf2c31a98f8ddd7722a4b441" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::BearerType</source>
          <target state="translated">QNetworkConfiguration::BearerType</target>
        </trans-unit>
        <trans-unit id="cc567ff1b7970d5d926a2c1dfe14d523811cfa48" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::BearerType (enum)</source>
          <target state="translated">QNetworkConfiguration::BearerType (enum)</target>
        </trans-unit>
        <trans-unit id="7f0d5d57c3a4bd0bcfe7b37b5be6872b56bafc50" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::Purpose</source>
          <target state="translated">QNetworkConfiguration::Purpose</target>
        </trans-unit>
        <trans-unit id="34df69184ecd1da6bc3491c3ea4bf49df7b2e1f0" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::Purpose (enum)</source>
          <target state="translated">QNetworkConfiguration::Purpose (enum)</target>
        </trans-unit>
        <trans-unit id="fad3939690e44d4f3104bc4c0e531b54382f0f97" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::QNetworkConfiguration()</source>
          <target state="translated">QNetworkConfiguration::QNetworkConfiguration()</target>
        </trans-unit>
        <trans-unit id="626d2db83a4ba1c54b480457bbdc8dc9332632fd" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::QNetworkConfiguration(const &lt;a href=&quot;qnetworkconfiguration#QNetworkConfiguration&quot;&gt;QNetworkConfiguration&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNetworkConfiguration :: QNetworkConfiguration（const &lt;a href=&quot;qnetworkconfiguration#QNetworkConfiguration&quot;&gt;QNetworkConfiguration&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="bafc0527b223ae02dcaf9e4583c0527313a7eb67" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::StateFlags</source>
          <target state="translated">QNetworkConfiguration::StateFlags</target>
        </trans-unit>
        <trans-unit id="189d5d7b552a66e21399ed993dc577cdbbd77f4b" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::Type</source>
          <target state="translated">QNetworkConfiguration::Type</target>
        </trans-unit>
        <trans-unit id="e1e7e49269a36a86bc7552af00b369f1cf3bfc72" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::Type (enum)</source>
          <target state="translated">QNetworkConfiguration::Type (enum)</target>
        </trans-unit>
        <trans-unit id="ec0b4ec15a15bcc908fb5171503931c9bdc87003" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::bearerType()</source>
          <target state="translated">QNetworkConfiguration::bearerType()</target>
        </trans-unit>
        <trans-unit id="c1f5527989d70a46516d0df61ff5f1b1de2d5e70" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::bearerTypeFamily()</source>
          <target state="translated">QNetworkConfiguration::bearerTypeFamily()</target>
        </trans-unit>
        <trans-unit id="bf739dc2ba895f697d35bda3caf25b147de07547" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::bearerTypeName()</source>
          <target state="translated">QNetworkConfiguration::bearerTypeName()</target>
        </trans-unit>
        <trans-unit id="822c468f65ca3df346f7ea9a5b27dfdd4ac027b3" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::children()</source>
          <target state="translated">QNetworkConfiguration::children()</target>
        </trans-unit>
        <trans-unit id="6532e8a47b632e7fa16d5845d9db06c3fcd88c7a" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::connectTimeout()</source>
          <target state="translated">QNetworkConfiguration::connectTimeout()</target>
        </trans-unit>
        <trans-unit id="e46fc6065666d4b4fad3a0f1d0dbdc39edd0a7ca" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::identifier()</source>
          <target state="translated">QNetworkConfiguration::identifier()</target>
        </trans-unit>
        <trans-unit id="2c5e99bf843ddd0b4de7f360ed37a0576fef1ec9" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::isRoamingAvailable()</source>
          <target state="translated">QNetworkConfiguration::isRoamingAvailable()</target>
        </trans-unit>
        <trans-unit id="54a40a5d7e198620ae4489107bf98e833ee8cbd7" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::isValid()</source>
          <target state="translated">QNetworkConfiguration::isValid()</target>
        </trans-unit>
        <trans-unit id="4372e5f29d8a47cd8c92d163cb4e254cbcd22d7d" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::name()</source>
          <target state="translated">QNetworkConfiguration::name()</target>
        </trans-unit>
        <trans-unit id="6b448a2494fbec004287bbad67c7cfda550e3258" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::operator!=()</source>
          <target state="translated">QNetworkConfiguration::operator!=()</target>
        </trans-unit>
        <trans-unit id="36b856789ae3578766cddc2f6f5248fa8911057d" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::operator=()</source>
          <target state="translated">QNetworkConfiguration::operator=()</target>
        </trans-unit>
        <trans-unit id="3b5c914e6a35290064b78eb0f82b97960b132845" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::operator==()</source>
          <target state="translated">QNetworkConfiguration::operator==()</target>
        </trans-unit>
        <trans-unit id="feb5e1de3900486ef8c8ece7b7e7eee141518ae3" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::purpose()</source>
          <target state="translated">QNetworkConfiguration::purpose()</target>
        </trans-unit>
        <trans-unit id="007dc71936c9ad53ef20814933305845ca4b4869" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::setConnectTimeout()</source>
          <target state="translated">QNetworkConfiguration::setConnectTimeout()</target>
        </trans-unit>
        <trans-unit id="5a7d09ee7e42fa79ee402543c1bc1604a96119b7" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::state()</source>
          <target state="translated">QNetworkConfiguration::state()</target>
        </trans-unit>
        <trans-unit id="c645c74fd8d774e6b567b18e100a62f3fb55f857" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::swap()</source>
          <target state="translated">QNetworkConfiguration::swap()</target>
        </trans-unit>
        <trans-unit id="bef9457a8c6c9b5874c5736fd1932c0e056f001d" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::type()</source>
          <target state="translated">QNetworkConfiguration::type()</target>
        </trans-unit>
        <trans-unit id="59fd80922cc5cc75d5bd19d939b9f6943ef75379" translate="yes" xml:space="preserve">
          <source>QNetworkConfiguration::~QNetworkConfiguration()</source>
          <target state="translated">QNetworkConfiguration::~QNetworkConfiguration()</target>
        </trans-unit>
        <trans-unit id="ca90dfa1063bfe79e9455ca82fd8500266e2123e" translate="yes" xml:space="preserve">
          <source>QNetworkConfigurationManager (class)</source>
          <target state="translated">QNetworkConfigurationManager(类)</target>
        </trans-unit>
        <trans-unit id="c3ad40036a88ea36ca0e5b78c4144e7ebb3f28f7" translate="yes" xml:space="preserve">
          <source>QNetworkConfigurationManager Class</source>
          <target state="translated">QNetworkConfigurationManager类</target>
        </trans-unit>
        <trans-unit id="b44a9e9f10433d4c130c9647de773898743bee14" translate="yes" xml:space="preserve">
          <source>QNetworkConfigurationManager provides access to the network configurations known to the system and enables applications to detect the system capabilities (with regards to network sessions) at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731f4a7dfbffcea34a29da3731530bfa5ba559fd" translate="yes" xml:space="preserve">
          <source>QNetworkConfigurationManager::Capabilities</source>
          <target state="translated">QNetworkConfigurationManager::Capabilities</target>
        </trans-unit>
        <trans-unit id="86a9caad9312ec17a85b1b19a9043f90ab62d24a" translate="yes" xml:space="preserve">
          <source>QNetworkConfigurationManager::QNetworkConfigurationManager()</source>
          <target state="translated">QNetworkConfigurationManager::QNetworkConfigurationManager()</target>
        </trans-unit>
        <trans-unit id="4ddbac287b6b078aaedddebfdddcea683c3155b6" translate="yes" xml:space="preserve">
          <source>QNetworkConfigurationManager::QNetworkConfigurationManager(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">QNetworkConfigurationManager :: QNetworkConfigurationManager（&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="a5e7de01ba9fb67e700330d17938e4f368f21f0b" translate="yes" xml:space="preserve">
          <source>QNetworkConfigurationManager::allConfigurations()</source>
          <target state="translated">QNetworkConfigurationManager::allConfigurations()</target>
        </trans-unit>
        <trans-unit id="879bf1004b65400abce1f86e652ce5a255f3cb17" translate="yes" xml:space="preserve">
          <source>QNetworkConfigurationManager::capabilities()</source>
          <target state="translated">QNetworkConfigurationManager::capabilities()</target>
        </trans-unit>
        <trans-unit id="07a48028121bdb4fb3812c315f7438009a118bd1" translate="yes" xml:space="preserve">
          <source>QNetworkConfigurationManager::configurationAdded()</source>
          <target state="translated">QNetworkConfigurationManager::configurationAdded()</target>
        </trans-unit>
        <trans-unit id="5dd37fc2886718a0bd27160041b5c0a504ed5a17" translate="yes" xml:space="preserve">
          <source>QNetworkConfigurationManager::configurationChanged()</source>
          <target state="translated">QNetworkConfigurationManager::configurationChanged()</target>
        </trans-unit>
        <trans-unit id="82267ddb084b694d05899718f61bde5b3dd5fe71" translate="yes" xml:space="preserve">
          <source>QNetworkConfigurationManager::configurationFromIdentifier()</source>
          <target state="translated">QNetworkConfigurationManager::configurationFromIdentifier()</target>
        </trans-unit>
        <trans-unit id="8577e806a515c979e6490d70cfb15bc52cf7072b" translate="yes" xml:space="preserve">
          <source>QNetworkConfigurationManager::configurationRemoved()</source>
          <target state="translated">QNetworkConfigurationManager::configurationRemoved()</target>
        </trans-unit>
        <trans-unit id="ea87f5adbf4d13835c7a74bc5f700f48549f84a1" translate="yes" xml:space="preserve">
          <source>QNetworkConfigurationManager::defaultConfiguration()</source>
          <target state="translated">QNetworkConfigurationManager::defaultConfiguration()</target>
        </trans-unit>
        <trans-unit id="3b65a1d578229bd206ae3b4f6917357ac8c4453b" translate="yes" xml:space="preserve">
          <source>QNetworkConfigurationManager::isOnline()</source>
          <target state="translated">QNetworkConfigurationManager::isOnline()</target>
        </trans-unit>
        <trans-unit id="2c2ba89349ec2060dcb53ab64f30cf5a0a4c9bd8" translate="yes" xml:space="preserve">
          <source>QNetworkConfigurationManager::onlineStateChanged()</source>
          <target state="translated">QNetworkConfigurationManager::onlineStateChanged()</target>
        </trans-unit>
        <trans-unit id="9f135d02edd8dd1f881de2cc4704e40ef2a158f0" translate="yes" xml:space="preserve">
          <source>QNetworkConfigurationManager::updateCompleted()</source>
          <target state="translated">QNetworkConfigurationManager::updateCompleted()</target>
        </trans-unit>
        <trans-unit id="721a4113e7145bfd1ef5fe45126b3c217db5673c" translate="yes" xml:space="preserve">
          <source>QNetworkConfigurationManager::updateConfigurations()</source>
          <target state="translated">QNetworkConfigurationManager::updateConfigurations()</target>
        </trans-unit>
        <trans-unit id="21b45136b54d316bd326b30613b423eb08fd9398" translate="yes" xml:space="preserve">
          <source>QNetworkConfigurationManager::~QNetworkConfigurationManager()</source>
          <target state="translated">QNetworkConfigurationManager::~QNetworkConfigurationManager()</target>
        </trans-unit>
        <trans-unit id="4e0ef0ed1fe52562fabf1d38f512ac6fc80a83de" translate="yes" xml:space="preserve">
          <source>QNetworkCookie</source>
          <target state="translated">QNetworkCookie</target>
        </trans-unit>
        <trans-unit id="3ebf0049434788cecbdff3ce7aa946da3f998990" translate="yes" xml:space="preserve">
          <source>QNetworkCookie &amp;amp;</source>
          <target state="translated">QNetworkCookie和</target>
        </trans-unit>
        <trans-unit id="5335b18e20fb223f387bc4518204b5b17eb113cf" translate="yes" xml:space="preserve">
          <source>QNetworkCookie (class)</source>
          <target state="translated">QNetworkCookie(类)</target>
        </trans-unit>
        <trans-unit id="dbff0eb38c2fa50d044c70551e95aea8e353a2ac" translate="yes" xml:space="preserve">
          <source>QNetworkCookie Class</source>
          <target state="translated">QNetworkCookie类</target>
        </trans-unit>
        <trans-unit id="51c8bc02e14538ebd38e96ab35828ed421bc0081" translate="yes" xml:space="preserve">
          <source>QNetworkCookie holds one such cookie as received from the network. A cookie has a name and a value, but those are opaque to the application (that is, the information stored in them has no meaning to the application). A cookie has an associated path name and domain, which indicate when the cookie should be sent again to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1988812d979c300af85be9d2123a60591457848" translate="yes" xml:space="preserve">
          <source>QNetworkCookie provides a way of parsing a cookie from the HTTP header format using the &lt;a href=&quot;qnetworkcookie#parseCookies&quot;&gt;QNetworkCookie::parseCookies&lt;/a&gt;() function. However, when received in a &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt;, the cookie is already parsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7944424b7ed1ef7293885d8032418ae8a9bf00a9" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::QNetworkCookie()</source>
          <target state="translated">QNetworkCookie::QNetworkCookie()</target>
        </trans-unit>
        <trans-unit id="d8920ada7f4580be45fd5ab7a7734ebb410b266e" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::QNetworkCookie(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNetworkCookie :: QNetworkCookie（const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="b04cd2ca39d84771610c62b8b159afe4af0360c4" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::QNetworkCookie(const &lt;a href=&quot;qnetworkcookie#QNetworkCookie&quot;&gt;QNetworkCookie&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNetworkCookie :: QNetworkCookie（const &lt;a href=&quot;qnetworkcookie#QNetworkCookie&quot;&gt;QNetworkCookie&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="451212776158ef84ea89221bfa1acd3c1bd8b590" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::RawForm (enum)</source>
          <target state="translated">QNetworkCookie::RawForm (enum)</target>
        </trans-unit>
        <trans-unit id="fde4d984109c8abee39cfb57853e671dc3c1c5a2" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::domain()</source>
          <target state="translated">QNetworkCookie::domain()</target>
        </trans-unit>
        <trans-unit id="b5fa47efd822a568adcdbcfcb32cd1a8c74a6d7f" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::expirationDate()</source>
          <target state="translated">QNetworkCookie::expirationDate()</target>
        </trans-unit>
        <trans-unit id="23adacaea4a728708e2b329d4611fb7a98b94096" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::hasSameIdentifier()</source>
          <target state="translated">QNetworkCookie::hasSameIdentifier()</target>
        </trans-unit>
        <trans-unit id="320360dd87a9d1ba72191251947a3fb09527c5e3" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::isHttpOnly()</source>
          <target state="translated">QNetworkCookie::isHttpOnly()</target>
        </trans-unit>
        <trans-unit id="9b1d3f3e4daddd3195eefccfe4e6d1104e3c24be" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::isSecure()</source>
          <target state="translated">QNetworkCookie::isSecure()</target>
        </trans-unit>
        <trans-unit id="cffabc0fd7644919baa57bd8a01bfa7bd4c6bd57" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::isSessionCookie()</source>
          <target state="translated">QNetworkCookie::isSessionCookie()</target>
        </trans-unit>
        <trans-unit id="5dfc7af4ffa3379e601d64f0a2e3a1241e11d074" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::name()</source>
          <target state="translated">QNetworkCookie::name()</target>
        </trans-unit>
        <trans-unit id="c8f4a88e02e20f6781cc6a18e50e1a7ed63e4202" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::normalize()</source>
          <target state="translated">QNetworkCookie::normalize()</target>
        </trans-unit>
        <trans-unit id="c237ebdb4ed1c2e649f47ea047eb3a35e8f93bae" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::operator!=()</source>
          <target state="translated">QNetworkCookie::operator!=()</target>
        </trans-unit>
        <trans-unit id="b4f512a4b5eb4ab94eac218556d5417270a9f7dd" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::operator=()</source>
          <target state="translated">QNetworkCookie::operator=()</target>
        </trans-unit>
        <trans-unit id="36cebd45624903475bc19cc01612471cb0538e22" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::operator==()</source>
          <target state="translated">QNetworkCookie::operator==()</target>
        </trans-unit>
        <trans-unit id="d4b98da20b1855e1de3c01c808e4a8b998b150eb" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::parseCookies()</source>
          <target state="translated">QNetworkCookie::parseCookies()</target>
        </trans-unit>
        <trans-unit id="e3936045aae753b2694f788034066f87c29f1d07" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::path()</source>
          <target state="translated">QNetworkCookie::path()</target>
        </trans-unit>
        <trans-unit id="31177f0fad45e8ca34d963587a616a1f099d5e4a" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::setDomain()</source>
          <target state="translated">QNetworkCookie::setDomain()</target>
        </trans-unit>
        <trans-unit id="c4eeabe27e327cf1a73b090e10303aca6deff6bc" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::setExpirationDate()</source>
          <target state="translated">QNetworkCookie::setExpirationDate()</target>
        </trans-unit>
        <trans-unit id="04a85eee827e24a539c2ae47389f5ae4e768f6c3" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::setHttpOnly()</source>
          <target state="translated">QNetworkCookie::setHttpOnly()</target>
        </trans-unit>
        <trans-unit id="26ab4848b5fbc909f07204e4ef340a1c168fe6ce" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::setName()</source>
          <target state="translated">QNetworkCookie::setName()</target>
        </trans-unit>
        <trans-unit id="4e5e4ef62efd9cbe6c3594d4699f2310edd877bb" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::setPath()</source>
          <target state="translated">QNetworkCookie::setPath()</target>
        </trans-unit>
        <trans-unit id="b4df51a804e7525f3c679aa7a14225f0350b130d" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::setSecure()</source>
          <target state="translated">QNetworkCookie::setSecure()</target>
        </trans-unit>
        <trans-unit id="10c291b55bbda98c7feca2a399bfd5f6ae4abc2b" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::setValue()</source>
          <target state="translated">QNetworkCookie::setValue()</target>
        </trans-unit>
        <trans-unit id="e0072299921dd01de0a0624666661516b7ba156d" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::swap()</source>
          <target state="translated">QNetworkCookie::swap()</target>
        </trans-unit>
        <trans-unit id="4ad325ec860c6347c0a9f98bb1cbb5cd5e39cae3" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::toRawForm()</source>
          <target state="translated">QNetworkCookie::toRawForm()</target>
        </trans-unit>
        <trans-unit id="9bb2379840ce920dc3e8e8174f9fc880dfc225cb" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::value()</source>
          <target state="translated">QNetworkCookie::value()</target>
        </trans-unit>
        <trans-unit id="03777f549c43e642000b021438ba82a55fce2022" translate="yes" xml:space="preserve">
          <source>QNetworkCookie::~QNetworkCookie()</source>
          <target state="translated">QNetworkCookie::~QNetworkCookie()</target>
        </trans-unit>
        <trans-unit id="06437b65f12e733441de6f6b7d8e9902ab0090db" translate="yes" xml:space="preserve">
          <source>QNetworkCookieJar (class)</source>
          <target state="translated">QNetworkCookieJar (class)</target>
        </trans-unit>
        <trans-unit id="7b78182de2d327cd5d48c9470820e7bd8ad20076" translate="yes" xml:space="preserve">
          <source>QNetworkCookieJar *</source>
          <target state="translated">QNetworkCookieJar *</target>
        </trans-unit>
        <trans-unit id="8f8b24c8920543b9f91c1c695cd6f83028409fa0" translate="yes" xml:space="preserve">
          <source>QNetworkCookieJar Class</source>
          <target state="translated">QNetworkCookieJar类</target>
        </trans-unit>
        <trans-unit id="6648718fd6cad83e787a187467dea022e831c7e0" translate="yes" xml:space="preserve">
          <source>QNetworkCookieJar does not implement permanent storage: it only keeps the cookies in memory. Once the QNetworkCookieJar object is deleted, all cookies it held will be discarded as well. If you want to save the cookies, you should derive from this class and implement the saving to disk to your own storage format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5dbd81761eb0c69d79bef9cb5c2d78ce5c92f1" translate="yes" xml:space="preserve">
          <source>QNetworkCookieJar::QNetworkCookieJar()</source>
          <target state="translated">QNetworkCookieJar::QNetworkCookieJar()</target>
        </trans-unit>
        <trans-unit id="b9e3104212a53b8310327af02c81eb0d330185cd" translate="yes" xml:space="preserve">
          <source>QNetworkCookieJar::QNetworkCookieJar(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">QNetworkCookieJar :: QNetworkCookieJar（&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="2ed9b9123e6988fea7e9ee0ff8e67f8600060861" translate="yes" xml:space="preserve">
          <source>QNetworkCookieJar::allCookies()</source>
          <target state="translated">QNetworkCookieJar::allCookies()</target>
        </trans-unit>
        <trans-unit id="fb8249ee426b47bad1f62ee39800402f1353e830" translate="yes" xml:space="preserve">
          <source>QNetworkCookieJar::cookiesForUrl()</source>
          <target state="translated">QNetworkCookieJar::cookiesForUrl()</target>
        </trans-unit>
        <trans-unit id="7b90d927048bd4409aff005a6d6b8a6b986fc46f" translate="yes" xml:space="preserve">
          <source>QNetworkCookieJar::deleteCookie()</source>
          <target state="translated">QNetworkCookieJar::deleteCookie()</target>
        </trans-unit>
        <trans-unit id="729fa2c0eba091a2f0e348e4a46c1a15a24d32b8" translate="yes" xml:space="preserve">
          <source>QNetworkCookieJar::insertCookie()</source>
          <target state="translated">QNetworkCookieJar::insertCookie()</target>
        </trans-unit>
        <trans-unit id="01520993393f0db0353f1da5a448f2fde07d0a08" translate="yes" xml:space="preserve">
          <source>QNetworkCookieJar::setAllCookies()</source>
          <target state="translated">QNetworkCookieJar::setAllCookies()</target>
        </trans-unit>
        <trans-unit id="76965ea9262a5b4c6b0fa77224d56818c8dddf83" translate="yes" xml:space="preserve">
          <source>QNetworkCookieJar::setCookiesFromUrl()</source>
          <target state="translated">QNetworkCookieJar::setCookiesFromUrl()</target>
        </trans-unit>
        <trans-unit id="a3ebee168197d6a3102e54fb42460694d897ea86" translate="yes" xml:space="preserve">
          <source>QNetworkCookieJar::updateCookie()</source>
          <target state="translated">QNetworkCookieJar::updateCookie()</target>
        </trans-unit>
        <trans-unit id="ac53c03004ede6167ccaaa0c08cc1cb650fa6a4d" translate="yes" xml:space="preserve">
          <source>QNetworkCookieJar::validateCookie()</source>
          <target state="translated">QNetworkCookieJar::validateCookie()</target>
        </trans-unit>
        <trans-unit id="60a41a41a9341de953106131eef7f49fdd91a225" translate="yes" xml:space="preserve">
          <source>QNetworkCookieJar::~QNetworkCookieJar()</source>
          <target state="translated">QNetworkCookieJar::~QNetworkCookieJar()</target>
        </trans-unit>
        <trans-unit id="657b86654ce13327fe880e0abad9584e7f49dd30" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram</source>
          <target state="translated">QNetworkDatagram</target>
        </trans-unit>
        <trans-unit id="14032b3c35bc2b556d15846721b6e31370f25d1d" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram &amp;amp;</source>
          <target state="translated">QNetworkDatagram和</target>
        </trans-unit>
        <trans-unit id="b7bb84173d5698289b2f74738da0911d8b832e18" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram (class)</source>
          <target state="translated">QNetworkDatagram(类)</target>
        </trans-unit>
        <trans-unit id="39e10e2a37e29e85cb569c4e89e4ff62275c34c2" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram Class</source>
          <target state="translated">QNetworkDatagram类</target>
        </trans-unit>
        <trans-unit id="5281785cfa5d533859c7ff9a9dfa586f49faffce" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram can be used with the &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; class to represent the full information contained in a UDP (User Datagram Protocol) datagram. QNetworkDatagram encapsulates the following information of a datagram:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c771014be56cdb2bf399a505af5407ec7aec2b7" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram::QNetworkDatagram()</source>
          <target state="translated">QNetworkDatagram::QNetworkDatagram()</target>
        </trans-unit>
        <trans-unit id="69b9ae158df2ef1943ecd04840c6d261e8cd9534" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram::QNetworkDatagram(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNetworkDatagram :: QNetworkDatagram（const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="28311ad07184e819966a2d4ce016e25d582dffea" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram::QNetworkDatagram(const &lt;a href=&quot;qnetworkdatagram#QNetworkDatagram&quot;&gt;QNetworkDatagram&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNetworkDatagram :: QNetworkDatagram（const &lt;a href=&quot;qnetworkdatagram#QNetworkDatagram&quot;&gt;QNetworkDatagram&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="2bf58944f2be57a5238f45cd365d69717cc7e929" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram::clear()</source>
          <target state="translated">QNetworkDatagram::clear()</target>
        </trans-unit>
        <trans-unit id="a86ed2676e387c74dcbcf02c716a8cec04ea9020" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram::data()</source>
          <target state="translated">QNetworkDatagram::data()</target>
        </trans-unit>
        <trans-unit id="d324642a26a1a05452d17e718b81197c048dbcad" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram::destinationAddress()</source>
          <target state="translated">QNetworkDatagram::destinationAddress()</target>
        </trans-unit>
        <trans-unit id="20a180d34770c2a7762b950425969c61924041ba" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram::destinationPort()</source>
          <target state="translated">QNetworkDatagram::destinationPort()</target>
        </trans-unit>
        <trans-unit id="5fce7b5445f65a2b1b14df76e9dacd8c034f4d97" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram::hopLimit()</source>
          <target state="translated">QNetworkDatagram::hopLimit()</target>
        </trans-unit>
        <trans-unit id="e631f406492bb76c4a5ce10b0a6ebc4915f792d4" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram::interfaceIndex()</source>
          <target state="translated">QNetworkDatagram::interfaceIndex()</target>
        </trans-unit>
        <trans-unit id="b9c11fc4cc3725769a57292a469409448fff31e7" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram::isNull()</source>
          <target state="translated">QNetworkDatagram::isNull()</target>
        </trans-unit>
        <trans-unit id="bed862fdee699aa150c1cc3b373b82c0574fb6b2" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram::isValid()</source>
          <target state="translated">QNetworkDatagram::isValid()</target>
        </trans-unit>
        <trans-unit id="b25497bfc90484624b5af3ac2e2737c80b12474e" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram::makeReply() &amp;amp;&amp;amp;</source>
          <target state="translated">QNetworkDatagram :: makeReply（）&amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="50db50c297568302cd32bbcb9984740ea8b09ce2" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram::makeReply() const &amp;amp;</source>
          <target state="translated">QNetworkDatagram :: makeReply（）const＆</target>
        </trans-unit>
        <trans-unit id="11506feb283ec06a2aec02f4c0759ee2047a07c6" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram::operator=()</source>
          <target state="translated">QNetworkDatagram::operator=()</target>
        </trans-unit>
        <trans-unit id="8cbfba6549a52401987695cf028965405ea37246" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram::senderAddress()</source>
          <target state="translated">QNetworkDatagram::senderAddress()</target>
        </trans-unit>
        <trans-unit id="ba5e39c75d7f9f1b6874ca5b5aad9908815cfcd2" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram::senderPort()</source>
          <target state="translated">QNetworkDatagram::senderPort()</target>
        </trans-unit>
        <trans-unit id="5cede64ff1cf0bbd138efb8e63de89f44da6d88e" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram::setData()</source>
          <target state="translated">QNetworkDatagram::setData()</target>
        </trans-unit>
        <trans-unit id="dad9311df65661a671df57cd0551e1a72178f1a4" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram::setDestination()</source>
          <target state="translated">QNetworkDatagram::setDestination()</target>
        </trans-unit>
        <trans-unit id="2291ca69b438b5619977ec0b7e120192080b714e" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram::setHopLimit()</source>
          <target state="translated">QNetworkDatagram::setHopLimit()</target>
        </trans-unit>
        <trans-unit id="d7dda1069a90acc0f62037d4e08e9acabaf66cc6" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram::setInterfaceIndex()</source>
          <target state="translated">QNetworkDatagram::setInterfaceIndex()</target>
        </trans-unit>
        <trans-unit id="922447976db0b483cf7306bd6a7a53ab992e135d" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram::setSender()</source>
          <target state="translated">QNetworkDatagram::setSender()</target>
        </trans-unit>
        <trans-unit id="b61175d172f9aa59ef080cd220785ce45ec92a27" translate="yes" xml:space="preserve">
          <source>QNetworkDatagram::swap()</source>
          <target state="translated">QNetworkDatagram::swap()</target>
        </trans-unit>
        <trans-unit id="c497a275dc82860cf8646544b8111feda6c4c4ba" translate="yes" xml:space="preserve">
          <source>QNetworkDiskCache</source>
          <target state="translated">QNetworkDiskCache</target>
        </trans-unit>
        <trans-unit id="cd4e332c199b17e5a3f694c572a5e9bfee742cb8" translate="yes" xml:space="preserve">
          <source>QNetworkDiskCache (class)</source>
          <target state="translated">网络硬盘缓存(类)</target>
        </trans-unit>
        <trans-unit id="58f5856d42100e889a3aeedfbfb082d8cc3b0f3d" translate="yes" xml:space="preserve">
          <source>QNetworkDiskCache Class</source>
          <target state="translated">QNetworkDiskCache类</target>
        </trans-unit>
        <trans-unit id="734707dc4d3dcac499531b1284a0dce2f77bf81c" translate="yes" xml:space="preserve">
          <source>QNetworkDiskCache by default limits the amount of space that the cache will use on the system to 50MB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353b0f46912d304a69758b6c22a6979b8c53185f" translate="yes" xml:space="preserve">
          <source>QNetworkDiskCache stores each url in its own file inside of the &lt;a href=&quot;qnetworkdiskcache#cacheDirectory&quot;&gt;cacheDirectory&lt;/a&gt; using &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;. Files with a text MimeType are compressed using &lt;a href=&quot;qbytearray#qCompress&quot;&gt;qCompress&lt;/a&gt;. Data is written to disk only in &lt;a href=&quot;qnetworkdiskcache#insert&quot;&gt;insert&lt;/a&gt;() and &lt;a href=&quot;qnetworkdiskcache#updateMetaData&quot;&gt;updateMetaData&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060b77b78f9c3e5f6707388c945f3eda43d21eb9" translate="yes" xml:space="preserve">
          <source>QNetworkDiskCache::QNetworkDiskCache()</source>
          <target state="translated">QNetworkDiskCache::QNetworkDiskCache()</target>
        </trans-unit>
        <trans-unit id="ca33d663d200ebad7bb4333ed36ed4225340cc22" translate="yes" xml:space="preserve">
          <source>QNetworkDiskCache::QNetworkDiskCache(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">QNetworkDiskCache :: QNetworkDiskCache（&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="0a5f83c0bd7f07c59d936d014d0db68d797e9a17" translate="yes" xml:space="preserve">
          <source>QNetworkDiskCache::cacheDirectory()</source>
          <target state="translated">QNetworkDiskCache::cacheDirectory()</target>
        </trans-unit>
        <trans-unit id="67f61d87814d614217dd5e203d230b817d8fc215" translate="yes" xml:space="preserve">
          <source>QNetworkDiskCache::cacheSize()</source>
          <target state="translated">QNetworkDiskCache::cacheSize()</target>
        </trans-unit>
        <trans-unit id="da702ba5d662c3256971beecff1f209f6d981c28" translate="yes" xml:space="preserve">
          <source>QNetworkDiskCache::clear()</source>
          <target state="translated">QNetworkDiskCache::clear()</target>
        </trans-unit>
        <trans-unit id="368e19a56f16091eeeb585a80a82cb17e4e0db46" translate="yes" xml:space="preserve">
          <source>QNetworkDiskCache::data()</source>
          <target state="translated">QNetworkDiskCache::data()</target>
        </trans-unit>
        <trans-unit id="5de683202fd27e322ea24194d5c637db38402db7" translate="yes" xml:space="preserve">
          <source>QNetworkDiskCache::expire()</source>
          <target state="translated">QNetworkDiskCache::expire()</target>
        </trans-unit>
        <trans-unit id="4b44aee1327c76afc9c410aabd4fc7dbf8c58b69" translate="yes" xml:space="preserve">
          <source>QNetworkDiskCache::fileMetaData()</source>
          <target state="translated">QNetworkDiskCache::fileMetaData()</target>
        </trans-unit>
        <trans-unit id="2eef1bc4368afdd5b10d2a991c6ebf59a5919b4e" translate="yes" xml:space="preserve">
          <source>QNetworkDiskCache::insert()</source>
          <target state="translated">QNetworkDiskCache::insert()</target>
        </trans-unit>
        <trans-unit id="47c8616a9beb1843bb5ea53e6244be76b8c78a7e" translate="yes" xml:space="preserve">
          <source>QNetworkDiskCache::maximumCacheSize()</source>
          <target state="translated">QNetworkDiskCache::maximumCacheSize()</target>
        </trans-unit>
        <trans-unit id="179223c4d5bb3b0e405032e7e38f83a841d8594f" translate="yes" xml:space="preserve">
          <source>QNetworkDiskCache::metaData()</source>
          <target state="translated">QNetworkDiskCache::metaData()</target>
        </trans-unit>
        <trans-unit id="13450e67e1eee7a8c671bb088ae08a3bc526585f" translate="yes" xml:space="preserve">
          <source>QNetworkDiskCache::prepare()</source>
          <target state="translated">QNetworkDiskCache::prepare()</target>
        </trans-unit>
        <trans-unit id="91e1fe3d854f4e39e9c4898097bb66a7413b20d6" translate="yes" xml:space="preserve">
          <source>QNetworkDiskCache::remove()</source>
          <target state="translated">QNetworkDiskCache::remove()</target>
        </trans-unit>
        <trans-unit id="f46b92b0cc2f5b67d45d6e5b70fbc3c55620aeb1" translate="yes" xml:space="preserve">
          <source>QNetworkDiskCache::setCacheDirectory()</source>
          <target state="translated">QNetworkDiskCache::setCacheDirectory()</target>
        </trans-unit>
        <trans-unit id="436745b52133215195bb0fcab83f6d2c8ea3c448" translate="yes" xml:space="preserve">
          <source>QNetworkDiskCache::setMaximumCacheSize()</source>
          <target state="translated">QNetworkDiskCache::setMaximumCacheSize()</target>
        </trans-unit>
        <trans-unit id="921cc6c443d6894f2eb1a7c7d7c6775a85d09532" translate="yes" xml:space="preserve">
          <source>QNetworkDiskCache::updateMetaData()</source>
          <target state="translated">QNetworkDiskCache::updateMetaData()</target>
        </trans-unit>
        <trans-unit id="98208a4549f5a1ea87820cc5c92661fe5addb5e6" translate="yes" xml:space="preserve">
          <source>QNetworkDiskCache::~QNetworkDiskCache()</source>
          <target state="translated">QNetworkDiskCache::~QNetworkDiskCache()</target>
        </trans-unit>
        <trans-unit id="fd533e66a485d2864748e6ccc1a852f8787d363a" translate="yes" xml:space="preserve">
          <source>QNetworkInterface</source>
          <target state="translated">QNetworkInterface</target>
        </trans-unit>
        <trans-unit id="076b0145bf2384c8a218edc86cc6d10a2234a196" translate="yes" xml:space="preserve">
          <source>QNetworkInterface &amp;amp;</source>
          <target state="translated">QNetwork接口和</target>
        </trans-unit>
        <trans-unit id="e2b528f0e8633b5bd18fafe70649f571d0caec6d" translate="yes" xml:space="preserve">
          <source>QNetworkInterface (class)</source>
          <target state="translated">QNetworkInterface</target>
        </trans-unit>
        <trans-unit id="927a7de8cf71b31f6b8e0e5adf7d619082476af7" translate="yes" xml:space="preserve">
          <source>QNetworkInterface Class</source>
          <target state="translated">QNetworkInterface类</target>
        </trans-unit>
        <trans-unit id="59b75c516a29bf7c04b42a0d7ffdb3897180dd0f" translate="yes" xml:space="preserve">
          <source>QNetworkInterface also reports the interface's hardware address with &lt;a href=&quot;qnetworkinterface#hardwareAddress&quot;&gt;hardwareAddress&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d54dbfe7fd062c19a4239edbd674ea9152b2e96" translate="yes" xml:space="preserve">
          <source>QNetworkInterface represents one network interface attached to the host where the program is being run. Each network interface may contain zero or more IP addresses, each of which is optionally associated with a netmask and/or a broadcast address. The list of such trios can be obtained with &lt;a href=&quot;qnetworkinterface#addressEntries&quot;&gt;addressEntries&lt;/a&gt;(). Alternatively, when the netmask or the broadcast addresses or other information aren't necessary, use the &lt;a href=&quot;qnetworkinterface#allAddresses&quot;&gt;allAddresses&lt;/a&gt;() convenience function to obtain just the IP addresses of the active interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88f38b36e2addce0a0879234c9dfb5e4f489f85a" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::InterfaceFlags</source>
          <target state="translated">QNetworkInterface::InterfaceFlags</target>
        </trans-unit>
        <trans-unit id="e3e1b54393ce4b1d78405bcac9e99d4ba1e803c7" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::InterfaceType</source>
          <target state="translated">QNetworkInterface::InterfaceType</target>
        </trans-unit>
        <trans-unit id="f1dc1a12c78c72b1a0d6293b67612b263b8e312b" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::InterfaceType (enum)</source>
          <target state="translated">QNetworkInterface::InterfaceType (enum)</target>
        </trans-unit>
        <trans-unit id="583fa498af062d27be215b600502cca516327709" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::QNetworkInterface()</source>
          <target state="translated">QNetworkInterface::QNetworkInterface()</target>
        </trans-unit>
        <trans-unit id="7816e2a67642c57f9265ccbfe66ff5174d0ca8b8" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::QNetworkInterface(const &lt;a href=&quot;qnetworkinterface#QNetworkInterface&quot;&gt;QNetworkInterface&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNetworkInterface :: QNetworkInterface（const &lt;a href=&quot;qnetworkinterface#QNetworkInterface&quot;&gt;QNetworkInterface&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="968a4336871a1ae145780ecb20ffe4ae71916a07" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::addressEntries()</source>
          <target state="translated">QNetworkInterface::addressEntries()</target>
        </trans-unit>
        <trans-unit id="55011c2a3b86199548095b0d366a61d781c99603" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::allAddresses()</source>
          <target state="translated">QNetworkInterface::allAddresses()</target>
        </trans-unit>
        <trans-unit id="b463f1fadbe8a71d443f9470ad303f89d83d1d0d" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::allInterfaces()</source>
          <target state="translated">QNetworkInterface::allInterfaces()</target>
        </trans-unit>
        <trans-unit id="6edcb268f796faa4d3ce36a9b2703f57a756ea42" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::flags()</source>
          <target state="translated">QNetworkInterface::flags()</target>
        </trans-unit>
        <trans-unit id="5a640b2998f75bd331bb86362ec2eded2978a8ef" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::hardwareAddress()</source>
          <target state="translated">QNetworkInterface::hardwareAddress()</target>
        </trans-unit>
        <trans-unit id="aec16cff5cfe7d3261cedd49e3a2f3ea243cf511" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::humanReadableName()</source>
          <target state="translated">QNetworkInterface::humanReadableName()</target>
        </trans-unit>
        <trans-unit id="81dc8b326e78f9726991c0b2cfc9b992f6e13536" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::index()</source>
          <target state="translated">QNetworkInterface::index()</target>
        </trans-unit>
        <trans-unit id="d675d0f56b9f85f5f41753d663f55b9695a2bd0e" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::interfaceFromIndex()</source>
          <target state="translated">QNetworkInterface::interfaceFromIndex()</target>
        </trans-unit>
        <trans-unit id="5e7c6d44135f7f3bbd084ce6523584a65f4f8d95" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::interfaceFromName()</source>
          <target state="translated">QNetworkInterface::interfaceFromName()</target>
        </trans-unit>
        <trans-unit id="fd899b948aa2bad7c05cfa99894f8cf337fc2505" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::interfaceIndexFromName()</source>
          <target state="translated">QNetworkInterface::interfaceIndexFromName()</target>
        </trans-unit>
        <trans-unit id="87259b7fe504b6d682b8338c4306fc3dc00fc710" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::interfaceNameFromIndex()</source>
          <target state="translated">QNetworkInterface::interfaceNameFromIndex()</target>
        </trans-unit>
        <trans-unit id="1016f18db8df07b58c0139e68eae12554232e971" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::isValid()</source>
          <target state="translated">QNetworkInterface::isValid()</target>
        </trans-unit>
        <trans-unit id="2c9ce692d5c3b61c4a98ac71fd13a79c825cf88d" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::maximumTransmissionUnit()</source>
          <target state="translated">QNetworkInterface::maximumTransmissionUnit()</target>
        </trans-unit>
        <trans-unit id="7a9b79e5beeb1d2ef039b8bcea39049ddc6ceaee" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::name()</source>
          <target state="translated">QNetworkInterface::name()</target>
        </trans-unit>
        <trans-unit id="b1e02e8447726e32f0c9fc17cc1f7fe6f69b4a37" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::operator=()</source>
          <target state="translated">QNetworkInterface::operator=()</target>
        </trans-unit>
        <trans-unit id="1cd21e497daa7b949455639bfe70888930fa43bc" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::swap()</source>
          <target state="translated">QNetworkInterface::swap()</target>
        </trans-unit>
        <trans-unit id="00ee70ed6e025ece16c65bbe96a65bec3b71096b" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::type()</source>
          <target state="translated">QNetworkInterface::type()</target>
        </trans-unit>
        <trans-unit id="af7fefe8d0f0ed450fb9b238aa4119e19e2eb87e" translate="yes" xml:space="preserve">
          <source>QNetworkInterface::~QNetworkInterface()</source>
          <target state="translated">QNetworkInterface::~QNetworkInterface()</target>
        </trans-unit>
        <trans-unit id="9d3f27fcd410e42416e818122d02165d31f2b44c" translate="yes" xml:space="preserve">
          <source>QNetworkProxy</source>
          <target state="translated">QNetworkProxy</target>
        </trans-unit>
        <trans-unit id="a22bcad431a7863ee1c3e14f1017ff11d8fb1929" translate="yes" xml:space="preserve">
          <source>QNetworkProxy &amp;amp;</source>
          <target state="translated">QNetworkProxy和</target>
        </trans-unit>
        <trans-unit id="bfd92ba580a8512539d1f65f49c3621458e5afbf" translate="yes" xml:space="preserve">
          <source>QNetworkProxy (class)</source>
          <target state="translated">QNetworkProxy(类)</target>
        </trans-unit>
        <trans-unit id="ab38c82bd7bfa0a5464defa2b8be7edbeb209338" translate="yes" xml:space="preserve">
          <source>QNetworkProxy Class</source>
          <target state="translated">QNetworkProxy类</target>
        </trans-unit>
        <trans-unit id="72de5d230d859abce21b53add557de1e4c4d3a37" translate="yes" xml:space="preserve">
          <source>QNetworkProxy provides the method for configuring network layer proxy support to the Qt network classes. The currently supported classes are &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt;, &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;, &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt;, &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt; and &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt;. The proxy support is designed to be as transparent as possible. This means that existing network-enabled applications that you have written should automatically support network proxy using the following code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5cf5671dbfa142053fcf2c10bc6b87a1d290628" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::Capabilities</source>
          <target state="translated">QNetworkProxy::Capabilities</target>
        </trans-unit>
        <trans-unit id="6b6901315863ce683f06dacb584772bc1cadb4f9" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::ProxyType</source>
          <target state="translated">QNetworkProxy::ProxyType</target>
        </trans-unit>
        <trans-unit id="3d4c798bd36771462e26f3242212f5bed7d1f0ea" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::ProxyType (enum)</source>
          <target state="translated">QNetworkProxy::ProxyType (enum)</target>
        </trans-unit>
        <trans-unit id="3124df05994e9c2d35e4daa99f82d32400a82a41" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::QNetworkProxy()</source>
          <target state="translated">QNetworkProxy::QNetworkProxy()</target>
        </trans-unit>
        <trans-unit id="2f262120cad3f396c2b1c56cb86b18f545b18c6d" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::QNetworkProxy(&lt;a href=&quot;qnetworkproxy#ProxyType-enum&quot;&gt;QNetworkProxy::ProxyType&lt;/a&gt;</source>
          <target state="translated">QNetworkProxy::QNetworkProxy(&lt;a href=&quot;qnetworkproxy#ProxyType-enum&quot;&gt;QNetworkProxy::ProxyType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf1ea9307530d183c7e2d2b8b96a50fcd5c1bac2" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::QNetworkProxy(const &lt;a href=&quot;qnetworkproxy#QNetworkProxy&quot;&gt;QNetworkProxy&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNetworkProxy :: QNetworkProxy（const &lt;a href=&quot;qnetworkproxy#QNetworkProxy&quot;&gt;QNetworkProxy&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="1762a2ff26d0e7a33d09882d1b31138a37a735f2" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::applicationProxy()</source>
          <target state="translated">QNetworkProxy::applicationProxy()</target>
        </trans-unit>
        <trans-unit id="8a521b2be6e06082f828b0bc4a5badd1c1a49a54" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::capabilities()</source>
          <target state="translated">QNetworkProxy::capabilities()</target>
        </trans-unit>
        <trans-unit id="665275ef34564c3a322198f99725083a5580846e" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::hasRawHeader()</source>
          <target state="translated">QNetworkProxy::hasRawHeader()</target>
        </trans-unit>
        <trans-unit id="431d1c9f9734cdbef64698d54a881d130a6a102d" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::header()</source>
          <target state="translated">QNetworkProxy::header()</target>
        </trans-unit>
        <trans-unit id="1f8d34ef74841e94acf7e7a37246844de5ade29b" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::hostName()</source>
          <target state="translated">QNetworkProxy::hostName()</target>
        </trans-unit>
        <trans-unit id="9bbb583ad1cf32cb5252d0f9197eb7d062908343" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::isCachingProxy()</source>
          <target state="translated">QNetworkProxy::isCachingProxy()</target>
        </trans-unit>
        <trans-unit id="e65b1f9c4cd9e6d9e82805ffef337de1e7779516" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::isTransparentProxy()</source>
          <target state="translated">QNetworkProxy::isTransparentProxy()</target>
        </trans-unit>
        <trans-unit id="635aa2059036f4d6cde5cc7e6180642902919df6" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::operator!=()</source>
          <target state="translated">QNetworkProxy::operator!=()</target>
        </trans-unit>
        <trans-unit id="c54a02cac42417f972f1779c639eb3cccb82a701" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::operator=()</source>
          <target state="translated">QNetworkProxy::operator=()</target>
        </trans-unit>
        <trans-unit id="3d72ff484d541c0cbe52233aa23b5317e66c249d" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::operator==()</source>
          <target state="translated">QNetworkProxy::operator==()</target>
        </trans-unit>
        <trans-unit id="3ca7193274b0161430b071838447ee5105b4deb8" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::password()</source>
          <target state="translated">QNetworkProxy::password()</target>
        </trans-unit>
        <trans-unit id="b313df94c24901a113dfaf65458af27831ec1ffd" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::port()</source>
          <target state="translated">QNetworkProxy::port()</target>
        </trans-unit>
        <trans-unit id="ed70a4ef486b3e41b3de262014d9ff99d1bfadea" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::rawHeader()</source>
          <target state="translated">QNetworkProxy::rawHeader()</target>
        </trans-unit>
        <trans-unit id="0bdb4cff6738ed02f8389a338eae1cb7f0959a16" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::rawHeaderList()</source>
          <target state="translated">QNetworkProxy::rawHeaderList()</target>
        </trans-unit>
        <trans-unit id="9b1c43ca82086361d863222aa89aef4b6354cf5a" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::setApplicationProxy()</source>
          <target state="translated">QNetworkProxy::setApplicationProxy()</target>
        </trans-unit>
        <trans-unit id="2ee407ffafcf9656461f2054c3279a665ef3e8c7" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::setCapabilities()</source>
          <target state="translated">QNetworkProxy::setCapabilities()</target>
        </trans-unit>
        <trans-unit id="490e1833c8ddfd4a05b9c54dcdf9a34b0ff682d8" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::setHeader()</source>
          <target state="translated">QNetworkProxy::setHeader()</target>
        </trans-unit>
        <trans-unit id="e8d3bccc11bda0fe6040960792663d9671732324" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::setHostName()</source>
          <target state="translated">QNetworkProxy::setHostName()</target>
        </trans-unit>
        <trans-unit id="2d35e6013defe4ec480c48c1a4dc9eeea48fe20d" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::setPassword()</source>
          <target state="translated">QNetworkProxy::setPassword()</target>
        </trans-unit>
        <trans-unit id="b34471b60e02f622d481bb9a023cd650f1650a69" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::setPort()</source>
          <target state="translated">QNetworkProxy::setPort()</target>
        </trans-unit>
        <trans-unit id="30bfebaa99b10069da7f4ef3c937d2b0f8332ae0" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::setRawHeader()</source>
          <target state="translated">QNetworkProxy::setRawHeader()</target>
        </trans-unit>
        <trans-unit id="d764cdff6ff4fa077666cbabf215e901e2a8cc45" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::setType()</source>
          <target state="translated">QNetworkProxy::setType()</target>
        </trans-unit>
        <trans-unit id="948c8f18ecca968dec3df48eeadd98e7178c5cad" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::setUser()</source>
          <target state="translated">QNetworkProxy::setUser()</target>
        </trans-unit>
        <trans-unit id="71050f2d74c757ece592463a294667952f705150" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::swap()</source>
          <target state="translated">QNetworkProxy::swap()</target>
        </trans-unit>
        <trans-unit id="54a2f9535f573b45f6701ac08a2e143982a79695" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::type()</source>
          <target state="translated">QNetworkProxy::type()</target>
        </trans-unit>
        <trans-unit id="b62eb6885f948643fdab7476e2f0052669d2c23e" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::user()</source>
          <target state="translated">QNetworkProxy::user()</target>
        </trans-unit>
        <trans-unit id="0928f5d2144189889ba97549ad8f2920f5927283" translate="yes" xml:space="preserve">
          <source>QNetworkProxy::~QNetworkProxy()</source>
          <target state="translated">QNetworkProxy::~QNetworkProxy()</target>
        </trans-unit>
        <trans-unit id="a5b250be33735bc801c9430c71793eee4a240e85" translate="yes" xml:space="preserve">
          <source>QNetworkProxyFactory (class)</source>
          <target state="translated">QNetworkProxyFactory(类)</target>
        </trans-unit>
        <trans-unit id="549f6c4b0e9c8c25135f267a1be8c5dbc2b9ba9c" translate="yes" xml:space="preserve">
          <source>QNetworkProxyFactory *</source>
          <target state="translated">QNetworkProxyFactory *</target>
        </trans-unit>
        <trans-unit id="7fdcb4f9d96105961da8635e8e34285935c2793f" translate="yes" xml:space="preserve">
          <source>QNetworkProxyFactory Class</source>
          <target state="translated">QNetworkProxyFactory类</target>
        </trans-unit>
        <trans-unit id="2c573feee0fb0b126e892d68f396bfe5c3597eed" translate="yes" xml:space="preserve">
          <source>QNetworkProxyFactory can be set globally for an application, in which case it will override any global proxies set with &lt;a href=&quot;qnetworkproxy#setApplicationProxy&quot;&gt;QNetworkProxy::setApplicationProxy&lt;/a&gt;(). If set globally, any sockets created with Qt will query the factory to determine the proxy to be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7e2d06186ae791043c5207614aa7dd1fa6d6eb" translate="yes" xml:space="preserve">
          <source>QNetworkProxyFactory is an extension to &lt;a href=&quot;qnetworkproxy&quot;&gt;QNetworkProxy&lt;/a&gt;, allowing applications to have a more fine-grained control over which proxy servers are used, depending on the socket requesting the proxy. This allows an application to apply different settings, according to the protocol or destination hostname, for instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6853017c2a1b4a16c8232b9ce38383f4db211f3c" translate="yes" xml:space="preserve">
          <source>QNetworkProxyFactory::QNetworkProxyFactory()</source>
          <target state="translated">QNetworkProxyFactory::QNetworkProxyFactory()</target>
        </trans-unit>
        <trans-unit id="6e6fc198580897859ab4c44b1dac0fb8626273f4" translate="yes" xml:space="preserve">
          <source>QNetworkProxyFactory::proxyForQuery()</source>
          <target state="translated">QNetworkProxyFactory::proxyForQuery()</target>
        </trans-unit>
        <trans-unit id="b8f65aaec25dfc6f867ea221231e14727b07bb97" translate="yes" xml:space="preserve">
          <source>QNetworkProxyFactory::queryProxy()</source>
          <target state="translated">QNetworkProxyFactory::queryProxy()</target>
        </trans-unit>
        <trans-unit id="7e22f5b5919a838630f3cbadf5e1e90b2b60b7ae" translate="yes" xml:space="preserve">
          <source>QNetworkProxyFactory::setApplicationProxyFactory()</source>
          <target state="translated">QNetworkProxyFactory::setApplicationProxyFactory()</target>
        </trans-unit>
        <trans-unit id="48c8e191b8073aecc7f1f94f826235ca8435d2b0" translate="yes" xml:space="preserve">
          <source>QNetworkProxyFactory::setUseSystemConfiguration()</source>
          <target state="translated">QNetworkProxyFactory::setUseSystemConfiguration()</target>
        </trans-unit>
        <trans-unit id="90ebe9606e7fd7e085c6c1a83bcfc6d8176f5b52" translate="yes" xml:space="preserve">
          <source>QNetworkProxyFactory::systemProxyForQuery()</source>
          <target state="translated">QNetworkProxyFactory::systemProxyForQuery()</target>
        </trans-unit>
        <trans-unit id="2729e98d8d1a6c8253372f69192904abcd20fcbf" translate="yes" xml:space="preserve">
          <source>QNetworkProxyFactory::usesSystemConfiguration()</source>
          <target state="translated">QNetworkProxyFactory::usesSystemConfiguration()</target>
        </trans-unit>
        <trans-unit id="42e141b0b9ad05d3cd43f14738fe15ac4cdcd12a" translate="yes" xml:space="preserve">
          <source>QNetworkProxyFactory::~QNetworkProxyFactory()</source>
          <target state="translated">QNetworkProxyFactory::~QNetworkProxyFactory()</target>
        </trans-unit>
        <trans-unit id="d7bbdaf30ace08897e9304fb9ffa507b8c3b1b57" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery</source>
          <target state="translated">QNetworkProxyQuery</target>
        </trans-unit>
        <trans-unit id="0c3e4afd4e45f61cef9d689edf1e1c4ba3c627e2" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery &amp;amp;</source>
          <target state="translated">QNetworkProxyQuery和</target>
        </trans-unit>
        <trans-unit id="9969e8e573a134ef26afb220fc23741862f2d7dc" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery (class)</source>
          <target state="translated">QNetworkProxyQuery(类)</target>
        </trans-unit>
        <trans-unit id="ccb8fb6c577904641b0a800a5c71fb216e338b11" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery Class</source>
          <target state="translated">QNetworkProxyQuery类</target>
        </trans-unit>
        <trans-unit id="689a968b97a1c946dfa60fbecdd6b8a9b10e78bc" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery holds the details of a socket being created or request being made. It is used by &lt;a href=&quot;qnetworkproxy&quot;&gt;QNetworkProxy&lt;/a&gt; and &lt;a href=&quot;qnetworkproxyfactory&quot;&gt;QNetworkProxyFactory&lt;/a&gt; to allow applications to have a more fine-grained control over which proxy servers are used, depending on the details of the query. This allows an application to apply different settings, according to the protocol or destination hostname, for instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d23b85a11ac64c63229d561f36cdebe497d40e8" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery supports the following criteria for selecting the proxy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e03310486c0eb956f3b2e16e91aeafee273bcfe" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::QNetworkProxyQuery()</source>
          <target state="translated">QNetworkProxyQuery::QNetworkProxyQuery()</target>
        </trans-unit>
        <trans-unit id="5a28d2fe90532ada74ad5e6559a706f422735846" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::QNetworkProxyQuery(&lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</source>
          <target state="translated">QNetworkProxyQuery::QNetworkProxyQuery(&lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6cb2e350876fc65a44ca3ebbefa4bd309c2e9a4" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::QNetworkProxyQuery(&lt;a href=&quot;qtglobal#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</source>
          <target state="translated">QNetworkProxyQuery::QNetworkProxyQuery(&lt;a href=&quot;qtglobal#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3c566c902dd90bd12b7efe5b51125e97eb2f5f7" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::QNetworkProxyQuery(const &lt;a href=&quot;qnetworkproxyquery#QNetworkProxyQuery&quot;&gt;QNetworkProxyQuery&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNetworkProxyQuery :: QNetworkProxyQuery（const &lt;a href=&quot;qnetworkproxyquery#QNetworkProxyQuery&quot;&gt;QNetworkProxyQuery&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d7c4548fb46351b52814fd1ec10e26dfaf3a0fc0" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::QNetworkProxyQuery(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNetworkProxyQuery :: QNetworkProxyQuery（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="b6ab6e2d72d7efde7bf321d0629ec1779c13b391" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::QNetworkProxyQuery(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNetworkProxyQuery :: QNetworkProxyQuery（const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="3ce25aeb97ec4ed311da4b0a2cde2cb7dd5556e1" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::QueryType</source>
          <target state="translated">QNetworkProxyQuery::QueryType</target>
        </trans-unit>
        <trans-unit id="e2a972884d0f95b81bba2cea9b7471ed7e65092a" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::QueryType (enum)</source>
          <target state="translated">QNetworkProxyQuery::QueryType (enum)</target>
        </trans-unit>
        <trans-unit id="c70748f4075d099de375f04ac8b45c572a9d70ad" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::localPort()</source>
          <target state="translated">QNetworkProxyQuery::localPort()</target>
        </trans-unit>
        <trans-unit id="ee9ac7fbe7c37162f26b796f033a2c13dceb482a" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::operator!=()</source>
          <target state="translated">QNetworkProxyQuery::operator!=()</target>
        </trans-unit>
        <trans-unit id="497034e4056e9a07b3449e677ff8285d72b7e26f" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::operator=()</source>
          <target state="translated">QNetworkProxyQuery::operator=()</target>
        </trans-unit>
        <trans-unit id="f1d54fea4109d259c5e51a995090142a1c4e8ed7" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::operator==()</source>
          <target state="translated">QNetworkProxyQuery::operator==()</target>
        </trans-unit>
        <trans-unit id="effaf8bb5b6694fdab4bc2f76563a10c2f489370" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::peerHostName()</source>
          <target state="translated">QNetworkProxyQuery::peerHostName()</target>
        </trans-unit>
        <trans-unit id="3c61248e23ccf96a9f1c1cf34b978c83577718d9" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::peerPort()</source>
          <target state="translated">QNetworkProxyQuery::peerPort()</target>
        </trans-unit>
        <trans-unit id="87ea35cc99e5772c0aca7c750084dcaed240644c" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::protocolTag()</source>
          <target state="translated">QNetworkProxyQuery::protocolTag()</target>
        </trans-unit>
        <trans-unit id="fe7d26f41aa1650c31c3b39fbceb0b0cd09f954a" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::queryType()</source>
          <target state="translated">QNetworkProxyQuery::queryType()</target>
        </trans-unit>
        <trans-unit id="f422c87c4e4df7c17f583355741f59c60fa9f673" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::setLocalPort()</source>
          <target state="translated">QNetworkProxyQuery::setLocalPort()</target>
        </trans-unit>
        <trans-unit id="0bc4bfd29e646ebab8d1e208bdf9b1bac86ed518" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::setPeerHostName()</source>
          <target state="translated">QNetworkProxyQuery::setPeerHostName()</target>
        </trans-unit>
        <trans-unit id="c3f13912d6eb271aebdfd7bc64a575f5f87f4b4b" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::setPeerPort()</source>
          <target state="translated">QNetworkProxyQuery::setPeerPort()</target>
        </trans-unit>
        <trans-unit id="d27d4e1e8afbd2d6f5c9a9e74a732c061bea5f66" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::setProtocolTag()</source>
          <target state="translated">QNetworkProxyQuery::setProtocolTag()</target>
        </trans-unit>
        <trans-unit id="766de4ff188f398ed41912d92d32f6c5d0a5e1da" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::setQueryType()</source>
          <target state="translated">QNetworkProxyQuery::setQueryType()</target>
        </trans-unit>
        <trans-unit id="44f11265bb7f54f0870e033817b32f31aa2d5605" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::setUrl()</source>
          <target state="translated">QNetworkProxyQuery::setUrl()</target>
        </trans-unit>
        <trans-unit id="f297654f2814c6d4bc121602688d03496d02857d" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::swap()</source>
          <target state="translated">QNetworkProxyQuery::swap()</target>
        </trans-unit>
        <trans-unit id="2687e6ad97f361b0a6672545281bce47e9bd55a5" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::url()</source>
          <target state="translated">QNetworkProxyQuery::url()</target>
        </trans-unit>
        <trans-unit id="94585f08bed0c73435b8fb6608b2408accf37267" translate="yes" xml:space="preserve">
          <source>QNetworkProxyQuery::~QNetworkProxyQuery()</source>
          <target state="translated">QNetworkProxyQuery::~QNetworkProxyQuery()</target>
        </trans-unit>
        <trans-unit id="8f3f025d39b6ada2ec01ac21bf39d78af4a9bb1a" translate="yes" xml:space="preserve">
          <source>QNetworkReply (class)</source>
          <target state="translated">网络回复</target>
        </trans-unit>
        <trans-unit id="edaabbb0e570c9a1a96be113998deaabe5ecc198" translate="yes" xml:space="preserve">
          <source>QNetworkReply *</source>
          <target state="translated">QNetworkReply *</target>
        </trans-unit>
        <trans-unit id="95106f6f46ac3fec80aac45a7ea8ae148d32ca53" translate="yes" xml:space="preserve">
          <source>QNetworkReply Class</source>
          <target state="translated">QNetworkReply类</target>
        </trans-unit>
        <trans-unit id="07f31e1705015ce11879e70b465423f77ab9e605" translate="yes" xml:space="preserve">
          <source>QNetworkReply is a sequential-access &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;, which means that once data is read from the object, it no longer kept by the device. It is therefore the application's responsibility to keep this data if it needs to. Whenever more data is received from the network and processed, the &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead&lt;/a&gt;() signal is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a868075cbce34ef640940d8ae710fa125600f9c4" translate="yes" xml:space="preserve">
          <source>QNetworkReply::NetworkError</source>
          <target state="translated">QNetworkReply::NetworkError</target>
        </trans-unit>
        <trans-unit id="57d94264d2db5cf7e758758a1e927d1b3d0af978" translate="yes" xml:space="preserve">
          <source>QNetworkReply::NetworkError (enum)</source>
          <target state="translated">QNetworkReply::NetworkError (enum)</target>
        </trans-unit>
        <trans-unit id="b87dbb5e52da3b4c56802f5e385d2a5ba24ee09a" translate="yes" xml:space="preserve">
          <source>QNetworkReply::QNetworkReply()</source>
          <target state="translated">QNetworkReply::QNetworkReply()</target>
        </trans-unit>
        <trans-unit id="32a353942df46fb6c4f4c7a3b9795c36c36a3828" translate="yes" xml:space="preserve">
          <source>QNetworkReply::RawHeaderPair</source>
          <target state="translated">QNetworkReply::RawHeaderPair</target>
        </trans-unit>
        <trans-unit id="cc86d2c077231404a26a309a1acc265b7c5f190f" translate="yes" xml:space="preserve">
          <source>QNetworkReply::RawHeaderPair (typedef)</source>
          <target state="translated">QNetworkReply::RawHeaderPair (typedef)</target>
        </trans-unit>
        <trans-unit id="8c1b0e55560f1707710e90a35d0e627abcfb1950" translate="yes" xml:space="preserve">
          <source>QNetworkReply::abort()</source>
          <target state="translated">QNetworkReply::abort()</target>
        </trans-unit>
        <trans-unit id="a8a5b71cbffd9538f5fbeed39ee2f7b9254ab51b" translate="yes" xml:space="preserve">
          <source>QNetworkReply::attribute()</source>
          <target state="translated">QNetworkReply::attribute()</target>
        </trans-unit>
        <trans-unit id="2a53543c761cdff0c8c9040c3b0b5ccc8cc2ea5a" translate="yes" xml:space="preserve">
          <source>QNetworkReply::close()</source>
          <target state="translated">QNetworkReply::close()</target>
        </trans-unit>
        <trans-unit id="95a13f2c4cf0440847ff891ac247bb81e0460461" translate="yes" xml:space="preserve">
          <source>QNetworkReply::downloadProgress()</source>
          <target state="translated">QNetworkReply::downloadProgress()</target>
        </trans-unit>
        <trans-unit id="51ca8d34d8280e3619da087585ccddf554833c00" translate="yes" xml:space="preserve">
          <source>QNetworkReply::encrypted()</source>
          <target state="translated">QNetworkReply::encrypted()</target>
        </trans-unit>
        <trans-unit id="c6b5eb2d174639ac264d2a6cf2eb1ac37ceef13e" translate="yes" xml:space="preserve">
          <source>QNetworkReply::error()</source>
          <target state="translated">QNetworkReply::error()</target>
        </trans-unit>
        <trans-unit id="690cf390a0e0cd0f2bdc1790623de0148ebc824d" translate="yes" xml:space="preserve">
          <source>QNetworkReply::errorOccurred()</source>
          <target state="translated">QNetworkReply::errorOccurred()</target>
        </trans-unit>
        <trans-unit id="fd9854e2dfe49b745e8495354832ed119555b505" translate="yes" xml:space="preserve">
          <source>QNetworkReply::finished()</source>
          <target state="translated">QNetworkReply::finished()</target>
        </trans-unit>
        <trans-unit id="96bbd853de326fe9fbfe92888874f7372ef34db3" translate="yes" xml:space="preserve">
          <source>QNetworkReply::hasRawHeader()</source>
          <target state="translated">QNetworkReply::hasRawHeader()</target>
        </trans-unit>
        <trans-unit id="e00e43b31bc524a4ec0430b4b2d488e58fb323aa" translate="yes" xml:space="preserve">
          <source>QNetworkReply::header()</source>
          <target state="translated">QNetworkReply::header()</target>
        </trans-unit>
        <trans-unit id="6170b648ff708eeb0e27a50c4d616acc3dc27a5d" translate="yes" xml:space="preserve">
          <source>QNetworkReply::ignoreSslErrors()</source>
          <target state="translated">QNetworkReply::ignoreSslErrors()</target>
        </trans-unit>
        <trans-unit id="225d5b67fa223100107d8ffcb57ddfd32b7f1aac" translate="yes" xml:space="preserve">
          <source>QNetworkReply::ignoreSslErrorsImplementation()</source>
          <target state="translated">QNetworkReply::ignoreSslErrorsImplementation()</target>
        </trans-unit>
        <trans-unit id="9ed733640cc98cc179bdadcdf6d23423429009a0" translate="yes" xml:space="preserve">
          <source>QNetworkReply::isFinished()</source>
          <target state="translated">QNetworkReply::isFinished()</target>
        </trans-unit>
        <trans-unit id="a1f391a6f29b26773bcef4bae95825943903cafb" translate="yes" xml:space="preserve">
          <source>QNetworkReply::isRunning()</source>
          <target state="translated">QNetworkReply::isRunning()</target>
        </trans-unit>
        <trans-unit id="c148591521c518ad1ced722c93790ac2200e39db" translate="yes" xml:space="preserve">
          <source>QNetworkReply::manager()</source>
          <target state="translated">QNetworkReply::manager()</target>
        </trans-unit>
        <trans-unit id="2f71cca1995392bb0d690ad3d7fbbdff94530cf6" translate="yes" xml:space="preserve">
          <source>QNetworkReply::metaDataChanged()</source>
          <target state="translated">QNetworkReply::metaDataChanged()</target>
        </trans-unit>
        <trans-unit id="098f6b817ece60b3866e2968c1e4d625ab2ae59c" translate="yes" xml:space="preserve">
          <source>QNetworkReply::operation()</source>
          <target state="translated">QNetworkReply::operation()</target>
        </trans-unit>
        <trans-unit id="26488924345a10a48ed949858547175c3d270745" translate="yes" xml:space="preserve">
          <source>QNetworkReply::preSharedKeyAuthenticationRequired()</source>
          <target state="translated">QNetworkReply::preSharedKeyAuthenticationRequired()</target>
        </trans-unit>
        <trans-unit id="fbb5ba03b30c25df693155afa226171e4ecaeb5c" translate="yes" xml:space="preserve">
          <source>QNetworkReply::rawHeader()</source>
          <target state="translated">QNetworkReply::rawHeader()</target>
        </trans-unit>
        <trans-unit id="1b7bf9b9ad78f37b83cef1de2a088093977e1192" translate="yes" xml:space="preserve">
          <source>QNetworkReply::rawHeaderList()</source>
          <target state="translated">QNetworkReply::rawHeaderList()</target>
        </trans-unit>
        <trans-unit id="09df154be122e0c4dc6e3377f2733aeae70947c2" translate="yes" xml:space="preserve">
          <source>QNetworkReply::readBufferSize()</source>
          <target state="translated">QNetworkReply::readBufferSize()</target>
        </trans-unit>
        <trans-unit id="e480627619c01c6922c729e4bcee2a8861e43387" translate="yes" xml:space="preserve">
          <source>QNetworkReply::redirectAllowed()</source>
          <target state="translated">QNetworkReply::redirectAllowed()</target>
        </trans-unit>
        <trans-unit id="db0e8a6a8d8fedbb270784490a1e1ecf379bb766" translate="yes" xml:space="preserve">
          <source>QNetworkReply::redirected()</source>
          <target state="translated">QNetworkReply::redirected()</target>
        </trans-unit>
        <trans-unit id="f868f43d840151461987fe5d408846c0ae9c4841" translate="yes" xml:space="preserve">
          <source>QNetworkReply::request()</source>
          <target state="translated">QNetworkReply::request()</target>
        </trans-unit>
        <trans-unit id="c01039a993a7fba56dc19f06a351a44f8ac9a674" translate="yes" xml:space="preserve">
          <source>QNetworkReply::setAttribute()</source>
          <target state="translated">QNetworkReply::setAttribute()</target>
        </trans-unit>
        <trans-unit id="008e8a8f2e5e004c04d9fc803c59a71935c2540a" translate="yes" xml:space="preserve">
          <source>QNetworkReply::setError()</source>
          <target state="translated">QNetworkReply::setError()</target>
        </trans-unit>
        <trans-unit id="3dd3fcb366218b46a38dfb673a9e3191452166db" translate="yes" xml:space="preserve">
          <source>QNetworkReply::setFinished()</source>
          <target state="translated">QNetworkReply::setFinished()</target>
        </trans-unit>
        <trans-unit id="9169fa24da0414cca1fa5705772a3f71f7bd7792" translate="yes" xml:space="preserve">
          <source>QNetworkReply::setHeader()</source>
          <target state="translated">QNetworkReply::setHeader()</target>
        </trans-unit>
        <trans-unit id="19d8bb0792440eb204e999c138bb32f7d4ce7925" translate="yes" xml:space="preserve">
          <source>QNetworkReply::setOperation()</source>
          <target state="translated">QNetworkReply::setOperation()</target>
        </trans-unit>
        <trans-unit id="0462ecb2eb60c1f6a6a1e1e64b701d08e29f0b51" translate="yes" xml:space="preserve">
          <source>QNetworkReply::setRawHeader()</source>
          <target state="translated">QNetworkReply::setRawHeader()</target>
        </trans-unit>
        <trans-unit id="233d159474f9203cb747656fa54d2525050729db" translate="yes" xml:space="preserve">
          <source>QNetworkReply::setReadBufferSize()</source>
          <target state="translated">QNetworkReply::setReadBufferSize()</target>
        </trans-unit>
        <trans-unit id="48c8ab3afcecd508a0422cd3ca123ae3aefa744a" translate="yes" xml:space="preserve">
          <source>QNetworkReply::setRequest()</source>
          <target state="translated">QNetworkReply::setRequest()</target>
        </trans-unit>
        <trans-unit id="e5ab63b1a558231f52b22af2be21eaf83101079e" translate="yes" xml:space="preserve">
          <source>QNetworkReply::setSslConfiguration()</source>
          <target state="translated">QNetworkReply::setSslConfiguration()</target>
        </trans-unit>
        <trans-unit id="7a9a5e5b71aa28ec18888d7c9d0f7ab9ed2e058a" translate="yes" xml:space="preserve">
          <source>QNetworkReply::setSslConfigurationImplementation()</source>
          <target state="translated">QNetworkReply::setSslConfigurationImplementation()</target>
        </trans-unit>
        <trans-unit id="6bda268a7f209e96f9097ea67bdfbf2dad701893" translate="yes" xml:space="preserve">
          <source>QNetworkReply::setUrl()</source>
          <target state="translated">QNetworkReply::setUrl()</target>
        </trans-unit>
        <trans-unit id="99f0850c083b8cfef96e812d2681b99cc594194a" translate="yes" xml:space="preserve">
          <source>QNetworkReply::sslConfiguration()</source>
          <target state="translated">QNetworkReply::sslConfiguration()</target>
        </trans-unit>
        <trans-unit id="9fafa956797423e02b5f6030455da7c31495d05a" translate="yes" xml:space="preserve">
          <source>QNetworkReply::sslConfigurationImplementation()</source>
          <target state="translated">QNetworkReply::sslConfigurationImplementation()</target>
        </trans-unit>
        <trans-unit id="cd1cb15b0a15aaaac9c757818ccb023cc69e5554" translate="yes" xml:space="preserve">
          <source>QNetworkReply::sslErrors()</source>
          <target state="translated">QNetworkReply::sslErrors()</target>
        </trans-unit>
        <trans-unit id="b2b51bd07cdd6580d9602f0f8508cc22f8e7b319" translate="yes" xml:space="preserve">
          <source>QNetworkReply::uploadProgress()</source>
          <target state="translated">QNetworkReply::uploadProgress()</target>
        </trans-unit>
        <trans-unit id="8ef9d6232b09726cab6825ad886d08bbcb11401f" translate="yes" xml:space="preserve">
          <source>QNetworkReply::url()</source>
          <target state="translated">QNetworkReply::url()</target>
        </trans-unit>
        <trans-unit id="18008f88eb2ea9540cd8457641649d2339cd7c93" translate="yes" xml:space="preserve">
          <source>QNetworkReply::~QNetworkReply()</source>
          <target state="translated">QNetworkReply::~QNetworkReply()</target>
        </trans-unit>
        <trans-unit id="7c5762561ccc4c48e3e2235d360f1985e3ff9f7c" translate="yes" xml:space="preserve">
          <source>QNetworkRequest</source>
          <target state="translated">QNetworkRequest</target>
        </trans-unit>
        <trans-unit id="d3858f2bf7cd842c7e7c5d7a7753e412bd79baa7" translate="yes" xml:space="preserve">
          <source>QNetworkRequest &amp;amp;</source>
          <target state="translated">QNetworkRequest和</target>
        </trans-unit>
        <trans-unit id="75f1bc6d7cefa445d1c2d91ea4378d81a6154df0" translate="yes" xml:space="preserve">
          <source>QNetworkRequest (class)</source>
          <target state="translated">QNetworkRequest(类)</target>
        </trans-unit>
        <trans-unit id="68396ca738bb1dd7b61b731441f779a57ac53cb1" translate="yes" xml:space="preserve">
          <source>QNetworkRequest Class</source>
          <target state="translated">QNetworkRequest类</target>
        </trans-unit>
        <trans-unit id="e1c12e873ff99805f84c2e2f88420f9c066e5c97" translate="yes" xml:space="preserve">
          <source>QNetworkRequest is part of the Network Access API and is the class holding the information necessary to send a request over the network. It contains a URL and some ancillary information that can be used to modify the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d68d6250cac696b0aa2bda586b2ad229e0cf83" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::Attribute (enum)</source>
          <target state="translated">QNetworkRequest::Attribute (enum)</target>
        </trans-unit>
        <trans-unit id="ba612719c5ebdf9efc122d4f0fa4af80b38abda1" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::CacheLoadControl (enum)</source>
          <target state="translated">QNetworkRequest::CacheLoadControl (enum)</target>
        </trans-unit>
        <trans-unit id="44b3f7336a9997c1fb0365be1bd0d6a79873fffa" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::FollowRedirectsAttribute is removed in Qt 6, see the section about redirects handling below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b91d4d3fdc2fa81851237ac95186086037cd0b" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::HTTP2AllowedAttribute (use &lt;a href=&quot;qnetworkrequest#Attribute-enum&quot;&gt;QNetworkRequest::Http2AllowedAttribute&lt;/a&gt;);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96f5349f103f174ffb34b84f22fafbbcbf7194d" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::HTTP2WasUsedAttribute (use &lt;a href=&quot;qnetworkrequest#Attribute-enum&quot;&gt;QNetworkRequest::Http2WasUsedAttribute&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4999308c13b4befadcc031d8132f62a94224cc8" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::KnownHeaders (enum)</source>
          <target state="translated">QNetworkRequest::KnownHeaders (enum)</target>
        </trans-unit>
        <trans-unit id="9f7db1567a60ed12f02018e7b406a19712d59e4d" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::LoadControl (enum)</source>
          <target state="translated">QNetworkRequest::LoadControl (enum)</target>
        </trans-unit>
        <trans-unit id="9bb5d82401f8ba6fc90ae844eb7dd9ccc9b802a3" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::Priority</source>
          <target state="translated">QNetworkRequest::Priority</target>
        </trans-unit>
        <trans-unit id="bb55764a51633dd9d3c0b988e7822da1c2b5312e" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::Priority (enum)</source>
          <target state="translated">QNetworkRequest::Priority (enum)</target>
        </trans-unit>
        <trans-unit id="65c1e7ca75fc0f8a0ded2e7a8423746087612f7e" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::QNetworkRequest()</source>
          <target state="translated">QNetworkRequest::QNetworkRequest()</target>
        </trans-unit>
        <trans-unit id="d70fd1c6a9ffea07a1804356bf77efd4289f9b17" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::QNetworkRequest(const &lt;a href=&quot;qnetworkrequest#QNetworkRequest&quot;&gt;QNetworkRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNetworkRequest :: QNetworkRequest（const &lt;a href=&quot;qnetworkrequest#QNetworkRequest&quot;&gt;QNetworkRequest&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d6f93798bc5bc25f9453af29520660c5bc1421c1" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::QNetworkRequest(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNetworkRequest :: QNetworkRequest（const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="b698e93cfcdc0fa82e2bc4cd73d5f29a1f3868b4" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::RedirectPolicy</source>
          <target state="translated">QNetworkRequest::RedirectPolicy</target>
        </trans-unit>
        <trans-unit id="963168f462745440a989412abe07d6ec9c114e25" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::RedirectPolicy (enum)</source>
          <target state="translated">QNetworkRequest::RedirectPolicy (enum)</target>
        </trans-unit>
        <trans-unit id="ca5cd56e366f0b5dcd8c66e0deb0d3ace3991493" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::SpdyAllowedAttribute;</source>
          <target state="translated">QNetworkRequest::SpdyAllowedAttribute;</target>
        </trans-unit>
        <trans-unit id="e865a03012e76ada5e048be9b19ab6909526c700" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::SpdyWasUsedAttribute;</source>
          <target state="translated">QNetworkRequest::SpdyWasUsedAttribute;</target>
        </trans-unit>
        <trans-unit id="c05a8044dfcd614e6e00e3b03b66c359ca1df5c0" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::TransferTimeoutConstant (enum)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b29860d12a8bd4477d0a313a91e06bbeeef6794" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::attribute()</source>
          <target state="translated">QNetworkRequest::attribute()</target>
        </trans-unit>
        <trans-unit id="f2859c6ef6cca82dc68d23fbfabff86d808beda8" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::hasRawHeader()</source>
          <target state="translated">QNetworkRequest::hasRawHeader()</target>
        </trans-unit>
        <trans-unit id="a5702ef2f63869d2fe29ef75bce28c9b9a62988d" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::header()</source>
          <target state="translated">QNetworkRequest::header()</target>
        </trans-unit>
        <trans-unit id="f00b9c3b0e881d4645d35c5e705925ee7c2fbd2f" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::http2Configuration()</source>
          <target state="translated">QNetworkRequest::http2Configuration()</target>
        </trans-unit>
        <trans-unit id="5bee02cffb7ed143fafa70a9309bca470559c0ba" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::maximumRedirectsAllowed()</source>
          <target state="translated">QNetworkRequest::maximumRedirectsAllowed()</target>
        </trans-unit>
        <trans-unit id="1de6a12ec67d68c59e4c1cac26c0a58241fa33cb" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::operator!=()</source>
          <target state="translated">QNetworkRequest::operator!=()</target>
        </trans-unit>
        <trans-unit id="9f16ca80133aaff34d1fec3f5ed9d813716e0f4c" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::operator=()</source>
          <target state="translated">QNetworkRequest::operator=()</target>
        </trans-unit>
        <trans-unit id="d7e7ccdcb85e6892d8a10e280187e70e47a8a035" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::operator==()</source>
          <target state="translated">QNetworkRequest::operator==()</target>
        </trans-unit>
        <trans-unit id="62c59e7e63efa5dd50a6418565cfe8116805ae47" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::originatingObject()</source>
          <target state="translated">QNetworkRequest::originatingObject()</target>
        </trans-unit>
        <trans-unit id="431aa40924a469c1c2bd53e541d76d5a636f0655" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::peerVerifyName()</source>
          <target state="translated">QNetworkRequest::peerVerifyName()</target>
        </trans-unit>
        <trans-unit id="7a6e4ffec00a91e36d185e668d2d7a2fcc8813b7" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::priority()</source>
          <target state="translated">QNetworkRequest::priority()</target>
        </trans-unit>
        <trans-unit id="a100b633f648e118ac7a43febf7823cc13377124" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::rawHeader()</source>
          <target state="translated">QNetworkRequest::rawHeader()</target>
        </trans-unit>
        <trans-unit id="ad35a7eefa40cc4652338adc38f00144a0217ad1" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::rawHeaderList()</source>
          <target state="translated">QNetworkRequest::rawHeaderList()</target>
        </trans-unit>
        <trans-unit id="663216737d94ecd215ea45487b946545b878a8b0" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::setAttribute()</source>
          <target state="translated">QNetworkRequest::setAttribute()</target>
        </trans-unit>
        <trans-unit id="f7250b36d1887afa1f6ac20b19352471420e096e" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::setHeader()</source>
          <target state="translated">QNetworkRequest::setHeader()</target>
        </trans-unit>
        <trans-unit id="e80d17abdea01e0c670b95f34adc0ee48bd44927" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::setHttp2Configuration()</source>
          <target state="translated">QNetworkRequest::setHttp2Configuration()</target>
        </trans-unit>
        <trans-unit id="c4f3f25dc061f280e781349971dfa3b5e5fa365c" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::setMaximumRedirectsAllowed()</source>
          <target state="translated">QNetworkRequest::setMaximumRedirectsAllowed()</target>
        </trans-unit>
        <trans-unit id="fd4819c5e130a0d20e1807a2e7e21b972e03f3e1" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::setOriginatingObject()</source>
          <target state="translated">QNetworkRequest::setOriginatingObject()</target>
        </trans-unit>
        <trans-unit id="57326d69991beb56d3b3ddb2ea06e466d84004f8" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::setPeerVerifyName()</source>
          <target state="translated">QNetworkRequest::setPeerVerifyName()</target>
        </trans-unit>
        <trans-unit id="064fa6f9cf17b4359d69ed7ded4d1c5a78faee9d" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::setPriority()</source>
          <target state="translated">QNetworkRequest::setPriority()</target>
        </trans-unit>
        <trans-unit id="1bcf02a67fb86da35cca4ff8d283189468d03139" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::setRawHeader()</source>
          <target state="translated">QNetworkRequest::setRawHeader()</target>
        </trans-unit>
        <trans-unit id="731a96f7ea17da9fb7a156651b025759fa5d4d6e" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::setSslConfiguration()</source>
          <target state="translated">QNetworkRequest::setSslConfiguration()</target>
        </trans-unit>
        <trans-unit id="a743e5a17ab436c2f074e85ee16377564856d62b" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::setTransferTimeout()</source>
          <target state="translated">QNetworkRequest::setTransferTimeout()</target>
        </trans-unit>
        <trans-unit id="9e1738cdb74e3743e1fc0a6955d550596edae531" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::setUrl()</source>
          <target state="translated">QNetworkRequest::setUrl()</target>
        </trans-unit>
        <trans-unit id="33c21b3ab999b3c0e0dfeac4649888380cf34d6a" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::sslConfiguration()</source>
          <target state="translated">QNetworkRequest::sslConfiguration()</target>
        </trans-unit>
        <trans-unit id="95f6da096efe11943e05671b366783dad29bca59" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::swap()</source>
          <target state="translated">QNetworkRequest::swap()</target>
        </trans-unit>
        <trans-unit id="282dd69739edbc4022ebb016b42f113d6c2c5ebc" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::transferTimeout()</source>
          <target state="translated">QNetworkRequest::transferTimeout()</target>
        </trans-unit>
        <trans-unit id="f0335df484c83d69530044e63fc37ae8dc900563" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::url()</source>
          <target state="translated">QNetworkRequest::url()</target>
        </trans-unit>
        <trans-unit id="f110bfad672c3861a074ae5161927fd77e0827a7" translate="yes" xml:space="preserve">
          <source>QNetworkRequest::~QNetworkRequest()</source>
          <target state="translated">QNetworkRequest::~QNetworkRequest()</target>
        </trans-unit>
        <trans-unit id="c9bf66b1240ef723d4c92c3bc8cfef9ce2bcb118" translate="yes" xml:space="preserve">
          <source>QNetworkSession (class)</source>
          <target state="translated">QNetworkSession(类)</target>
        </trans-unit>
        <trans-unit id="b5bc130b851e4b515fcd39f0b9ce67f64929a0fd" translate="yes" xml:space="preserve">
          <source>QNetworkSession Class</source>
          <target state="translated">QNetworkSession类</target>
        </trans-unit>
        <trans-unit id="790ab1a04467c6c93fecf5fab15977b05d9ad47d" translate="yes" xml:space="preserve">
          <source>QNetworkSession supports session management within the same process and depending on the platform's capabilities may support out-of-process sessions. If the same network configuration is used by multiple open sessions the underlying network interface is only terminated once the last session has been closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053866143ccacb486e50fb57fc6f4c616b1b74c5" translate="yes" xml:space="preserve">
          <source>QNetworkSession::QNetworkSession()</source>
          <target state="translated">QNetworkSession::QNetworkSession()</target>
        </trans-unit>
        <trans-unit id="503864e90c01130692499134dc83ea2c7745e7b7" translate="yes" xml:space="preserve">
          <source>QNetworkSession::QNetworkSession(const &lt;a href=&quot;qnetworkconfiguration&quot;&gt;QNetworkConfiguration&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QNetworkSession :: QNetworkSession（const &lt;a href=&quot;qnetworkconfiguration&quot;&gt;QNetworkConfiguration&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="f6cd182fc1bc934f497e60855ff2379ea6b9d8b2" translate="yes" xml:space="preserve">
          <source>QNetworkSession::SessionError</source>
          <target state="translated">QNetworkSession::SessionError</target>
        </trans-unit>
        <trans-unit id="ab5a4248f36dfc62a62a8a28a5bb459b5ec849cf" translate="yes" xml:space="preserve">
          <source>QNetworkSession::SessionError (enum)</source>
          <target state="translated">QNetworkSession::SessionError (enum)</target>
        </trans-unit>
        <trans-unit id="cf1aab15d9e53bec02e2de320a44a6bd7e2c99c1" translate="yes" xml:space="preserve">
          <source>QNetworkSession::State</source>
          <target state="translated">QNetworkSession::State</target>
        </trans-unit>
        <trans-unit id="40cfbdaada55741cc5d074b8ca301c0aba6f6b3d" translate="yes" xml:space="preserve">
          <source>QNetworkSession::State (enum)</source>
          <target state="translated">QNetworkSession::State (enum)</target>
        </trans-unit>
        <trans-unit id="9edbbd4e872c7f62910b3174efcfb4686f85c5ee" translate="yes" xml:space="preserve">
          <source>QNetworkSession::UsagePolicies</source>
          <target state="translated">QNetworkSession::UsagePolicies</target>
        </trans-unit>
        <trans-unit id="5aed115b3e37e3cbabcc907012a067ee2e5cae64" translate="yes" xml:space="preserve">
          <source>QNetworkSession::accept()</source>
          <target state="translated">QNetworkSession::accept()</target>
        </trans-unit>
        <trans-unit id="3957d60d4cb6762e26c7f4673072a6ba0e309630" translate="yes" xml:space="preserve">
          <source>QNetworkSession::activeTime()</source>
          <target state="translated">QNetworkSession::activeTime()</target>
        </trans-unit>
        <trans-unit id="b3f77de04a35e5337d5b4163bc981f93398c8cdb" translate="yes" xml:space="preserve">
          <source>QNetworkSession::bytesReceived()</source>
          <target state="translated">QNetworkSession::bytesReceived()</target>
        </trans-unit>
        <trans-unit id="78f2f7f8fd49e04bd1eb04afad0a48e81216ec36" translate="yes" xml:space="preserve">
          <source>QNetworkSession::bytesWritten()</source>
          <target state="translated">QNetworkSession::bytesWritten()</target>
        </trans-unit>
        <trans-unit id="03b64530197666bf9b39745b370317f910464c3a" translate="yes" xml:space="preserve">
          <source>QNetworkSession::close()</source>
          <target state="translated">QNetworkSession::close()</target>
        </trans-unit>
        <trans-unit id="16cda4f444c4484a3ce81754888d41a4482690d3" translate="yes" xml:space="preserve">
          <source>QNetworkSession::closed()</source>
          <target state="translated">QNetworkSession::closed()</target>
        </trans-unit>
        <trans-unit id="ac30e55d9fd9b0e9dfaca1e98dd87c61b54920df" translate="yes" xml:space="preserve">
          <source>QNetworkSession::configuration()</source>
          <target state="translated">QNetworkSession::configuration()</target>
        </trans-unit>
        <trans-unit id="3821fd4384ad2c870ab6afee97b0392516d77286" translate="yes" xml:space="preserve">
          <source>QNetworkSession::error()</source>
          <target state="translated">QNetworkSession::error()</target>
        </trans-unit>
        <trans-unit id="02686f44ccf5c5e7f73b9d77fa44f932a4a6f365" translate="yes" xml:space="preserve">
          <source>QNetworkSession::errorString()</source>
          <target state="translated">QNetworkSession::errorString()</target>
        </trans-unit>
        <trans-unit id="1790e9abad38cf9f1a2f152f8825cf2615e5ef50" translate="yes" xml:space="preserve">
          <source>QNetworkSession::ignore()</source>
          <target state="translated">QNetworkSession::ignore()</target>
        </trans-unit>
        <trans-unit id="ee6066097641a8caed7c5bf4959bbc7b7799492a" translate="yes" xml:space="preserve">
          <source>QNetworkSession::interface()</source>
          <target state="translated">QNetworkSession::interface()</target>
        </trans-unit>
        <trans-unit id="4c559b1dd4682223e38fb1122ee1cec9ca6cdf19" translate="yes" xml:space="preserve">
          <source>QNetworkSession::isOpen()</source>
          <target state="translated">QNetworkSession::isOpen()</target>
        </trans-unit>
        <trans-unit id="0c2c21964ede0b9361768c42dd17b2d778f26efa" translate="yes" xml:space="preserve">
          <source>QNetworkSession::migrate()</source>
          <target state="translated">QNetworkSession::migrate()</target>
        </trans-unit>
        <trans-unit id="225c002011b9c4e15193a3aa8414a0c632803955" translate="yes" xml:space="preserve">
          <source>QNetworkSession::newConfigurationActivated()</source>
          <target state="translated">QNetworkSession::newConfigurationActivated()</target>
        </trans-unit>
        <trans-unit id="1aea9b73f938a2698885f3886dab77135b2c3d47" translate="yes" xml:space="preserve">
          <source>QNetworkSession::open()</source>
          <target state="translated">QNetworkSession::open()</target>
        </trans-unit>
        <trans-unit id="93ff76c872adf42b444dbe60395b4b28bd8408b2" translate="yes" xml:space="preserve">
          <source>QNetworkSession::opened()</source>
          <target state="translated">QNetworkSession::opened()</target>
        </trans-unit>
        <trans-unit id="24a53905d54037ebfb57178a5e8af249ac97aa5b" translate="yes" xml:space="preserve">
          <source>QNetworkSession::preferredConfigurationChanged()</source>
          <target state="translated">QNetworkSession::preferredConfigurationChanged()</target>
        </trans-unit>
        <trans-unit id="dc37f9c8fa9dd6e49141afb1b78346980e2f4032" translate="yes" xml:space="preserve">
          <source>QNetworkSession::reject()</source>
          <target state="translated">QNetworkSession::reject()</target>
        </trans-unit>
        <trans-unit id="6845e8ce25637383a71504e2f6f93c22810f5802" translate="yes" xml:space="preserve">
          <source>QNetworkSession::sessionProperty()</source>
          <target state="translated">QNetworkSession::sessionProperty()</target>
        </trans-unit>
        <trans-unit id="cde834872d22f90990478cf02d1cccb7aeb62d72" translate="yes" xml:space="preserve">
          <source>QNetworkSession::setSessionProperty()</source>
          <target state="translated">QNetworkSession::setSessionProperty()</target>
        </trans-unit>
        <trans-unit id="ac0d28f81801af7840047002476998389ef10654" translate="yes" xml:space="preserve">
          <source>QNetworkSession::state()</source>
          <target state="translated">QNetworkSession::state()</target>
        </trans-unit>
        <trans-unit id="93cddcf2b5628eb2ccfe5a4a61875a460ecce555" translate="yes" xml:space="preserve">
          <source>QNetworkSession::stateChanged()</source>
          <target state="translated">QNetworkSession::stateChanged()</target>
        </trans-unit>
        <trans-unit id="63c71f0d19dca7d9254ff22c8dde2ab8956f3d29" translate="yes" xml:space="preserve">
          <source>QNetworkSession::stop()</source>
          <target state="translated">QNetworkSession::stop()</target>
        </trans-unit>
        <trans-unit id="a7ea15c6d89d70b67436d28e5f79d6397c650161" translate="yes" xml:space="preserve">
          <source>QNetworkSession::usagePolicies()</source>
          <target state="translated">QNetworkSession::usagePolicies()</target>
        </trans-unit>
        <trans-unit id="152fb7d048df3b32bd57eb04d77f4935e42effc2" translate="yes" xml:space="preserve">
          <source>QNetworkSession::usagePoliciesChanged()</source>
          <target state="translated">QNetworkSession::usagePoliciesChanged()</target>
        </trans-unit>
        <trans-unit id="a0571d3b0385446cc9bf0837374439186b214f73" translate="yes" xml:space="preserve">
          <source>QNetworkSession::waitForOpened()</source>
          <target state="translated">QNetworkSession::waitForOpened()</target>
        </trans-unit>
        <trans-unit id="d2f6849beb5a89aaca80aa0763f3aca60a5d3e45" translate="yes" xml:space="preserve">
          <source>QNetworkSession::~QNetworkSession()</source>
          <target state="translated">QNetworkSession::~QNetworkSession()</target>
        </trans-unit>
        <trans-unit id="d7a79107295dc1bddfacb7f87aed176b44531a35" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource</source>
          <target state="translated">QNmeaPositionInfoSource</target>
        </trans-unit>
        <trans-unit id="2f3b594e7d38d269189917a8400beadb034f3b7d" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource (class)</source>
          <target state="translated">QNmeaPositionInfoSource(类)</target>
        </trans-unit>
        <trans-unit id="dde6b8f29d0df1868c270bedc0d16dc95afad7ad" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource Class</source>
          <target state="translated">QNmeaPositionInfoSource类</target>
        </trans-unit>
        <trans-unit id="cef4aa949623be02a479645006862b99d747faad" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource supports reporting the accuracy of the horizontal and vertical position. To enable position accuracy reporting an estimate of the User Equivalent Range Error associated with the NMEA source must be set with &lt;a href=&quot;qnmeapositioninfosource#setUserEquivalentRangeError&quot;&gt;setUserEquivalentRangeError&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd2aa995ef3c2b69b81d1d2ddee5b351fb88e10" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource::QNmeaPositionInfoSource()</source>
          <target state="translated">QNmeaPositionInfoSource::QNmeaPositionInfoSource()</target>
        </trans-unit>
        <trans-unit id="e30117c35dd13f157521533ff36d5702076a5fca" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource::QNmeaPositionInfoSource(&lt;a href=&quot;qnmeapositioninfosource#UpdateMode-enum&quot;&gt;QNmeaPositionInfoSource::UpdateMode&lt;/a&gt;</source>
          <target state="translated">QNmeaPositionInfoSource::QNmeaPositionInfoSource(&lt;a href=&quot;qnmeapositioninfosource#UpdateMode-enum&quot;&gt;QNmeaPositionInfoSource::UpdateMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd17045f673adaf4b7c4e9fc53c6c604ab643d65" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource::UpdateMode</source>
          <target state="translated">QNmeaPositionInfoSource::UpdateMode</target>
        </trans-unit>
        <trans-unit id="124792eb36023c325c22abc68518a24e4b4b8a35" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource::UpdateMode (enum)</source>
          <target state="translated">QNmeaPositionInfoSource::UpdateMode (enum)</target>
        </trans-unit>
        <trans-unit id="abd576dd463ba50948b6f63410f49c7fa3a77842" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource::device()</source>
          <target state="translated">QNmeaPositionInfoSource::device()</target>
        </trans-unit>
        <trans-unit id="8aa20067d49faa271509169fc8acdc75a6010ee9" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource::error()</source>
          <target state="translated">QNmeaPositionInfoSource::error()</target>
        </trans-unit>
        <trans-unit id="0a166675b950e1954d7f146e3f616d8922088461" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource::lastKnownPosition()</source>
          <target state="translated">QNmeaPositionInfoSource::lastKnownPosition()</target>
        </trans-unit>
        <trans-unit id="98c8918df896cb432078d040180604468e7ffff5" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource::minimumUpdateInterval()</source>
          <target state="translated">QNmeaPositionInfoSource::minimumUpdateInterval()</target>
        </trans-unit>
        <trans-unit id="a659b6127792717d10276809257b6c74f53edebc" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource::parsePosInfoFromNmeaData()</source>
          <target state="translated">QNmeaPositionInfoSource::parsePosInfoFromNmeaData()</target>
        </trans-unit>
        <trans-unit id="36221244c939d216c0eb0178bc7ea7db603e2b9f" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource::requestUpdate()</source>
          <target state="translated">QNmeaPositionInfoSource::requestUpdate()</target>
        </trans-unit>
        <trans-unit id="8f3867a562ef928a15f9094e0ba0973675fa5907" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource::setDevice()</source>
          <target state="translated">QNmeaPositionInfoSource::setDevice()</target>
        </trans-unit>
        <trans-unit id="5e53a5162d70f21654c424b32d2cc90e95c55b45" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource::setUpdateInterval()</source>
          <target state="translated">QNmeaPositionInfoSource::setUpdateInterval()</target>
        </trans-unit>
        <trans-unit id="45d5f1220243581a015a465d7de3b0d3d2e7a91b" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource::setUserEquivalentRangeError()</source>
          <target state="translated">QNmeaPositionInfoSource::setUserEquivalentRangeError()</target>
        </trans-unit>
        <trans-unit id="67616851434e9de6e61dc4f17cc2a96e74514f8e" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource::startUpdates()</source>
          <target state="translated">QNmeaPositionInfoSource::startUpdates()</target>
        </trans-unit>
        <trans-unit id="0ea330c480db8da0bf55c5a142441d98dc6df895" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource::stopUpdates()</source>
          <target state="translated">QNmeaPositionInfoSource::stopUpdates()</target>
        </trans-unit>
        <trans-unit id="0edbf0fa6fd0928231fbf0617fb14a627fed6e18" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource::supportedPositioningMethods()</source>
          <target state="translated">QNmeaPositionInfoSource::supportedPositioningMethods()</target>
        </trans-unit>
        <trans-unit id="4b30ba601556f0c240ab125e8574dfb81ebde2b4" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource::updateMode()</source>
          <target state="translated">QNmeaPositionInfoSource::updateMode()</target>
        </trans-unit>
        <trans-unit id="b9ea36073fdac00608d6b4fb210da1ddea3f0f99" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource::userEquivalentRangeError()</source>
          <target state="translated">QNmeaPositionInfoSource::userEquivalentRangeError()</target>
        </trans-unit>
        <trans-unit id="1d46a9f9276910f4569cde43fde009daeca2c3bd" translate="yes" xml:space="preserve">
          <source>QNmeaPositionInfoSource::~QNmeaPositionInfoSource()</source>
          <target state="translated">QNmeaPositionInfoSource::~QNmeaPositionInfoSource()</target>
        </trans-unit>
        <trans-unit id="0426b4fbf279b0850ab7a66e90c0a6faa0e0156d" translate="yes" xml:space="preserve">
          <source>QNoDepthMask</source>
          <target state="translated">QNoDepthMask</target>
        </trans-unit>
        <trans-unit id="d965075e6be6047ad5a05c868971ef6604101f27" translate="yes" xml:space="preserve">
          <source>QNoDepthMask Class</source>
          <target state="translated">QNoDepthMask类</target>
        </trans-unit>
        <trans-unit id="9b5030b0d800790ac63aaedbaf974e8dd3a206e0" translate="yes" xml:space="preserve">
          <source>QNoDepthMask::QNoDepthMask(&lt;a href=&quot;qt3dcore-qnode&quot;&gt;Qt3DCore::QNode&lt;/a&gt; *</source>
          <target state="translated">QNoDepthMask :: QNoDepthMask（&lt;a href=&quot;qt3dcore-qnode&quot;&gt;Qt3DCore :: QNode&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="93b9bc5111d1f62cfaabf880f3362b2e522a05c5" translate="yes" xml:space="preserve">
          <source>QNoDraw</source>
          <target state="translated">QNoDraw</target>
        </trans-unit>
        <trans-unit id="ac6969d708f19a10b883ff510e6b37b50980e52d" translate="yes" xml:space="preserve">
          <source>QNoDraw Class</source>
          <target state="translated">QNoDraw类</target>
        </trans-unit>
        <trans-unit id="38ba62c35005d501fa9536895aded4de4737c7d2" translate="yes" xml:space="preserve">
          <source>QNoDraw::QNoDraw(&lt;a href=&quot;qt3dcore-qnode&quot;&gt;Qt3DCore::QNode&lt;/a&gt; *</source>
          <target state="translated">QNoDraw :: QNoDraw（&lt;a href=&quot;qt3dcore-qnode&quot;&gt;Qt3DCore :: QNode&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="8f09b956ce7bf1c57a58e32f69dd2aefd1102a1e" translate="yes" xml:space="preserve">
          <source>QNoPicking</source>
          <target state="translated">QNoPicking</target>
        </trans-unit>
        <trans-unit id="aef40d7c1e90b8cfa7029a9f35190a17fb492a87" translate="yes" xml:space="preserve">
          <source>QNoPicking Class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7c07c77e856c8fc3b1064a714a117d54feb48d" translate="yes" xml:space="preserve">
          <source>QNode Class</source>
          <target state="translated">QNode类</target>
        </trans-unit>
        <trans-unit id="6362010009f39fa1c91330f80eb2d32d36b0c16b" translate="yes" xml:space="preserve">
          <source>QNode is the base class of all Qt3D node classes used to build a Qt3D scene. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1819c7e92b15fe8b757f79601e84a7d74607f303" translate="yes" xml:space="preserve">
          <source>QNode is the base class of all Qt3D node classes used to build a Qt3D scene. &lt;a href=&quot;qt3dcore-qnode#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762cf06d614360f55d2434dcb058ca41f858b078" translate="yes" xml:space="preserve">
          <source>QNode::QNode(&lt;a href=&quot;qt3dcore-qnode&quot;&gt;Qt3DCore::QNode&lt;/a&gt; *</source>
          <target state="translated">QNode :: QNode（&lt;a href=&quot;qt3dcore-qnode&quot;&gt;Qt3DCore :: QNode&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="4af2b19037a672497140ab00127acaacfd021df2" translate="yes" xml:space="preserve">
          <source>QNode::QNodePtr (typedef)</source>
          <target state="translated">QNode::QNodePtr (typedef)</target>
        </trans-unit>
        <trans-unit id="235e59a4949aabe662c1e4d750607ff11ef7a101" translate="yes" xml:space="preserve">
          <source>QNode::QNodeVector (typedef)</source>
          <target state="translated">QNode::QNodeVector (typedef)</target>
        </trans-unit>
        <trans-unit id="239e8699e3439058b1c485b299df539ae050b757" translate="yes" xml:space="preserve">
          <source>QNode::qIdForNode()</source>
          <target state="translated">QNode::qIdForNode()</target>
        </trans-unit>
        <trans-unit id="9d4cbf55fee98198dfa2cb9c23cf5577814d121c" translate="yes" xml:space="preserve">
          <source>QNode::qIdsForNodes()</source>
          <target state="translated">QNode::qIdsForNodes()</target>
        </trans-unit>
        <trans-unit id="8a84bf45ce4c1e478d97f8387c3f494ba340a95c" translate="yes" xml:space="preserve">
          <source>QNodeCommand Class</source>
          <target state="translated">QNodeCommand类</target>
        </trans-unit>
        <trans-unit id="d1a6c664f0bb63d6756ea1cf33a4e69afeef9441" translate="yes" xml:space="preserve">
          <source>QNodeCommand::CommandId</source>
          <target state="translated">QNodeCommand::CommandId</target>
        </trans-unit>
        <trans-unit id="9d70041de16c3917c512977bf3ee3d6e89e25be8" translate="yes" xml:space="preserve">
          <source>QNodeCommand::QNodeCommand(&lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore::QNodeId&lt;/a&gt;</source>
          <target state="translated">QNodeCommand::QNodeCommand(&lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore::QNodeId&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c1f6f20f3be814dee706bd80e11468bd1d31058" translate="yes" xml:space="preserve">
          <source>QNodeCommand::QNodeCommandPtr (typedef)</source>
          <target state="translated">QNodeCommand::QNodeCommandPtr (typedef)</target>
        </trans-unit>
        <trans-unit id="15946fa4957d71270dc651fbba96d3562edda92c" translate="yes" xml:space="preserve">
          <source>QNodeCommandPtr (typedef)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15fd74e85d376513e82be1e353a1425a789782de" translate="yes" xml:space="preserve">
          <source>QNodeCreatedChange Class</source>
          <target state="translated">QNodeCreatedChange类</target>
        </trans-unit>
        <trans-unit id="926c78a9c20c08c1d0e963d323c659a8aac0c00b" translate="yes" xml:space="preserve">
          <source>QNodeCreatedChangeBase Class</source>
          <target state="translated">QNodeCreatedChangeBase类</target>
        </trans-unit>
        <trans-unit id="ba725ba501cd200847b7981bb8a91752eb5a72e7" translate="yes" xml:space="preserve">
          <source>QNodeCreatedChangeBase::QNodeCreatedChangeBase(const &lt;a href=&quot;qt3dcore-qnode&quot;&gt;Qt3DCore::QNode&lt;/a&gt; *</source>
          <target state="translated">QNodeCreatedChangeBase :: QNodeCreatedChangeBase（const &lt;a href=&quot;qt3dcore-qnode&quot;&gt;Qt3DCore :: QNode&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="0928eb0c08687c6e09349efb545acb061b028164" translate="yes" xml:space="preserve">
          <source>QNodeCreatedChangeBase::QNodeCreatedChangeBasePtr (typedef)</source>
          <target state="translated">QNodeCreatedChangeBase::QNodeCreatedChangeBasePtr (typedef)</target>
        </trans-unit>
        <trans-unit id="7a9cb8cddef6614927863f5404cc666e921ead20" translate="yes" xml:space="preserve">
          <source>QNodeCreatedChangeBasePtr (typedef)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa76fba78f1a586895909b8d5a49d9d56da8caf" translate="yes" xml:space="preserve">
          <source>QNodeDestroyedChange Class</source>
          <target state="translated">QNodeDestroyedChange类</target>
        </trans-unit>
        <trans-unit id="30f39b1ea4420f0d6f47ee4420db80786c880d92" translate="yes" xml:space="preserve">
          <source>QNodeDestroyedChange::QNodeDestroyedChange(const &lt;a href=&quot;qt3dcore-qnode&quot;&gt;Qt3DCore::QNode&lt;/a&gt; *</source>
          <target state="translated">QNodeDestroyedChange :: QNodeDestroyedChange（const &lt;a href=&quot;qt3dcore-qnode&quot;&gt;Qt3DCore :: QNode&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="20058e353f1e01419e8b2ca62007afe9777364cb" translate="yes" xml:space="preserve">
          <source>QNodeDestroyedChange::QNodeDestroyedChangePtr (typedef)</source>
          <target state="translated">QNodeDestroyedChange::QNodeDestroyedChangePtr (typedef)</target>
        </trans-unit>
        <trans-unit id="3ce86590d93a5d8dd1d9774e3df670807cd0052d" translate="yes" xml:space="preserve">
          <source>QNodeDestroyedChangePtr (typedef)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c1946abac382bab14885e92fc54f8324464eecd" translate="yes" xml:space="preserve">
          <source>QNodeId Class</source>
          <target state="translated">QNodeId类</target>
        </trans-unit>
        <trans-unit id="2f3d0e7f8507d8781448a63343c93ba895cff20e" translate="yes" xml:space="preserve">
          <source>QNodeId::QNodeIdVector (typedef)</source>
          <target state="translated">QNodeId::QNodeIdVector (typedef)</target>
        </trans-unit>
        <trans-unit id="d5d36966775d129d29ca44464ec2bb70927a63cf" translate="yes" xml:space="preserve">
          <source>QNodeId::qHash()</source>
          <target state="translated">QNodeId::qHash()</target>
        </trans-unit>
        <trans-unit id="03af4a3943bca2128f167520369f5069ae537ac4" translate="yes" xml:space="preserve">
          <source>QNodeIdVector (typedef)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ffefe6f0a95209830220688ad652cd4b7d0349" translate="yes" xml:space="preserve">
          <source>QNodePtr (typedef)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65fc10c2cb63e8426a9fe8c1e7828a57a6308360" translate="yes" xml:space="preserve">
          <source>QNodeVector (typedef)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb74b5e79e39149e2c6678153cc074c7effe36c6" translate="yes" xml:space="preserve">
          <source>QNormalDiffuseMapAlphaMaterial Class</source>
          <target state="translated">QNormalDiffuseMapAlphaMaterial类。</target>
        </trans-unit>
        <trans-unit id="8c0d3917b97e788dba3e5a33b15f94e7e898c9fb" translate="yes" xml:space="preserve">
          <source>QNormalDiffuseMapAlphaMaterial::QNormalDiffuseMapAlphaMaterial(&lt;a href=&quot;qt3dcore-qnode&quot;&gt;Qt3DCore::QNode&lt;/a&gt; *</source>
          <target state="translated">QNormalDiffuseMapAlphaMaterial :: QNormalDiffuseMapAlphaMaterial（&lt;a href=&quot;qt3dcore-qnode&quot;&gt;Qt3DCore :: QNode&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b12421e9e5fc63df6eed55cb24bd603988c6f0f1" translate="yes" xml:space="preserve">
          <source>QNormalDiffuseMapMaterial Class</source>
          <target state="translated">QNormalDiffuseMapMaterial类。</target>
        </trans-unit>
        <trans-unit id="dd7d79b7ffd8c21e37c95fbf7e3f5bbead10824a" translate="yes" xml:space="preserve">
          <source>QNormalDiffuseMapMaterial::QNormalDiffuseMapMaterial(&lt;a href=&quot;qt3dcore-qnode&quot;&gt;Qt3DCore::QNode&lt;/a&gt; *</source>
          <target state="translated">QNormalDiffuseMapMaterial :: QNormalDiffuseMapMaterial（&lt;a href=&quot;qt3dcore-qnode&quot;&gt;Qt3DCore :: QNode&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1faa32f3aa33ca46d999d88e252da78140136764" translate="yes" xml:space="preserve">
          <source>QNormalDiffuseSpecularMapMaterial Class</source>
          <target state="translated">QNormalDiffuseSpecularMapMaterial类。</target>
        </trans-unit>
        <trans-unit id="d1d2ec1d26b44bb84557073c17e9dd1c6187a22e" translate="yes" xml:space="preserve">
          <source>QNormalDiffuseSpecularMapMaterial::QNormalDiffuseSpecularMapMaterial(&lt;a href=&quot;qt3dcore-qnode&quot;&gt;Qt3DCore::QNode&lt;/a&gt; *</source>
          <target state="translated">QNormalDiffuseSpecularMapMaterial :: QNormalDiffuseSpecularMapMaterial（&lt;a href=&quot;qt3dcore-qnode&quot;&gt;Qt3DCore :: QNode&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="82ef339baec3e968b42dff87933f5dcf8a17b539" translate="yes" xml:space="preserve">
          <source>QOAuth1 (class)</source>
          <target state="translated">QOAuth1(类)</target>
        </trans-unit>
        <trans-unit id="4cb74a27db2afbce881be0197e0b44deff7d9fe7" translate="yes" xml:space="preserve">
          <source>QOAuth1 Class</source>
          <target state="translated">QOAuth1类</target>
        </trans-unit>
        <trans-unit id="19eaf144de1fb8dbea4e6f7d8fb21944597c0816" translate="yes" xml:space="preserve">
          <source>QOAuth1 provides a method for clients to access server resources on behalf of a resource owner (such as a different client or an end-user). It also provides a process for end-users to authorize third-party access to their server resources without sharing their credentials (typically, a username and password pair), using user-agent redirections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0697e898e6dd3f9f098008cd88da9dabaff24b96" translate="yes" xml:space="preserve">
          <source>QOAuth1 uses tokens to represent the authorization granted to the client by the resource owner. Typically, token credentials are issued by the server at the resource owner's request, after authenticating the resource owner's identity (usually using a username and password).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4755971ef23630ce8cec5f7898a66a007766c44" translate="yes" xml:space="preserve">
          <source>QOAuth1::QOAuth1()</source>
          <target state="translated">QOAuth1::QOAuth1()</target>
        </trans-unit>
        <trans-unit id="cf5ee5fa65ec7ebfafb1692b77b6b10669c4f82e" translate="yes" xml:space="preserve">
          <source>QOAuth1::QOAuth1(&lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt; *</source>
          <target state="translated">QOAuth1 :: QOAuth1（&lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="88fdd1fb1ec48769c532dddc99ae314614b230a2" translate="yes" xml:space="preserve">
          <source>QOAuth1::QOAuth1(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">QOAuth1 :: QOAuth1（&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="46cbb90339a43f1c5e2dd2a26dfea5bcbc35dd45" translate="yes" xml:space="preserve">
          <source>QOAuth1::QOAuth1(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QOAuth1 :: QOAuth1（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="9c62a79c21dfc2fc6788b74a2d9862b83f4e8d05" translate="yes" xml:space="preserve">
          <source>QOAuth1::SignatureMethod</source>
          <target state="translated">QOAuth1::SignatureMethod</target>
        </trans-unit>
        <trans-unit id="2161fce53739f6db50bfe1f9a0558b4f301b5777" translate="yes" xml:space="preserve">
          <source>QOAuth1::SignatureMethod (enum)</source>
          <target state="translated">QOAuth1::SignatureMethod (enum)</target>
        </trans-unit>
        <trans-unit id="bd5ea8ba65a66604599c8706bdbca7b94528c40f" translate="yes" xml:space="preserve">
          <source>QOAuth1::clientCredentials()</source>
          <target state="translated">QOAuth1::clientCredentials()</target>
        </trans-unit>
        <trans-unit id="8b6ad3b1d88d6ab5ec478f8d1a3c0ade5c30eaf6" translate="yes" xml:space="preserve">
          <source>QOAuth1::clientSharedSecret()</source>
          <target state="translated">QOAuth1::clientSharedSecret()</target>
        </trans-unit>
        <trans-unit id="0f30c5c0b3227dbae51736b1b49a03a9915f5db5" translate="yes" xml:space="preserve">
          <source>QOAuth1::continueGrantWithVerifier()</source>
          <target state="translated">QOAuth1::continueGrantWithVerifier()</target>
        </trans-unit>
        <trans-unit id="b853cd256cf7d47ea4e04db108524ebd80f1ee1a" translate="yes" xml:space="preserve">
          <source>QOAuth1::deleteResource()</source>
          <target state="translated">QOAuth1::deleteResource()</target>
        </trans-unit>
        <trans-unit id="c6f736dbec16cb8f19d8c63b3a86eeb50b225145" translate="yes" xml:space="preserve">
          <source>QOAuth1::generateAuthorizationHeader()</source>
          <target state="translated">QOAuth1::generateAuthorizationHeader()</target>
        </trans-unit>
        <trans-unit id="95252b8397b2f9a8c0e7626ef7daf73664d9d771" translate="yes" xml:space="preserve">
          <source>QOAuth1::get()</source>
          <target state="translated">QOAuth1::get()</target>
        </trans-unit>
        <trans-unit id="03f3cf6e65b846e3661c66d2a90bd1d00b28ca1e" translate="yes" xml:space="preserve">
          <source>QOAuth1::grant()</source>
          <target state="translated">QOAuth1::grant()</target>
        </trans-unit>
        <trans-unit id="f92585d358db44b770a24400322d876508f78b49" translate="yes" xml:space="preserve">
          <source>QOAuth1::head()</source>
          <target state="translated">QOAuth1::head()</target>
        </trans-unit>
        <trans-unit id="df937c151f00243f515ccf184c5eff25a8761c5c" translate="yes" xml:space="preserve">
          <source>QOAuth1::nonce()</source>
          <target state="translated">QOAuth1::nonce()</target>
        </trans-unit>
        <trans-unit id="58eecf5a10c80d73ace52acf08c14d3dec2cc2e9" translate="yes" xml:space="preserve">
          <source>QOAuth1::post()</source>
          <target state="translated">QOAuth1::post()</target>
        </trans-unit>
        <trans-unit id="67f688b2223027b66d41d968b2bb731471b02050" translate="yes" xml:space="preserve">
          <source>QOAuth1::put()</source>
          <target state="translated">QOAuth1::put()</target>
        </trans-unit>
        <trans-unit id="d636aae69ae6f64b65aa44dec57730b4840256d3" translate="yes" xml:space="preserve">
          <source>QOAuth1::requestTemporaryCredentials()</source>
          <target state="translated">QOAuth1::requestTemporaryCredentials()</target>
        </trans-unit>
        <trans-unit id="f4bd20bda9ef41e11f584b9595a9e512278468c5" translate="yes" xml:space="preserve">
          <source>QOAuth1::requestTokenCredentials()</source>
          <target state="translated">QOAuth1::requestTokenCredentials()</target>
        </trans-unit>
        <trans-unit id="6ab3c6ca3181c674489c39be408a413651abe5f4" translate="yes" xml:space="preserve">
          <source>QOAuth1::setClientCredentials()</source>
          <target state="translated">QOAuth1::setClientCredentials()</target>
        </trans-unit>
        <trans-unit id="66f98aa5f0e6eefb08875476be674a5b4b1419c6" translate="yes" xml:space="preserve">
          <source>QOAuth1::setClientSharedSecret()</source>
          <target state="translated">QOAuth1::setClientSharedSecret()</target>
        </trans-unit>
        <trans-unit id="f200aa03ce1da99dac556f6036cf32ac55ff12f3" translate="yes" xml:space="preserve">
          <source>QOAuth1::setSignatureMethod()</source>
          <target state="translated">QOAuth1::setSignatureMethod()</target>
        </trans-unit>
        <trans-unit id="6d6ca8811855f981c89962ddd62b688a490b91e8" translate="yes" xml:space="preserve">
          <source>QOAuth1::setTemporaryCredentialsUrl()</source>
          <target state="translated">QOAuth1::setTemporaryCredentialsUrl()</target>
        </trans-unit>
        <trans-unit id="c81c93d550edc24466ad3a014f9328c18836de7a" translate="yes" xml:space="preserve">
          <source>QOAuth1::setTokenCredentials()</source>
          <target state="translated">QOAuth1::setTokenCredentials()</target>
        </trans-unit>
        <trans-unit id="273f487f04335023cf755b5df77281ba0a6277f1" translate="yes" xml:space="preserve">
          <source>QOAuth1::setTokenCredentialsUrl()</source>
          <target state="translated">QOAuth1::setTokenCredentialsUrl()</target>
        </trans-unit>
        <trans-unit id="bbdf6d0c21bb6b58b2d6c337b4ce9e561fd0986a" translate="yes" xml:space="preserve">
          <source>QOAuth1::setTokenSecret()</source>
          <target state="translated">QOAuth1::setTokenSecret()</target>
        </trans-unit>
        <trans-unit id="56ddb19210d8283a6d3f5ecb481b53a61e914ffc" translate="yes" xml:space="preserve">
          <source>QOAuth1::setup()</source>
          <target state="translated">QOAuth1::setup()</target>
        </trans-unit>
        <trans-unit id="22d3a6656b12581b300f8bee74d926a0d8dac2ec" translate="yes" xml:space="preserve">
          <source>QOAuth1::signatureMethod()</source>
          <target state="translated">QOAuth1::signatureMethod()</target>
        </trans-unit>
        <trans-unit id="108def7b374d60fa41aa6099ab6d39b0fdfd28f4" translate="yes" xml:space="preserve">
          <source>QOAuth1::temporaryCredentialsUrl()</source>
          <target state="translated">QOAuth1::temporaryCredentialsUrl()</target>
        </trans-unit>
        <trans-unit id="3a50349cddc2e19e4b8bd3d0049d68bf57faa773" translate="yes" xml:space="preserve">
          <source>QOAuth1::tokenCredentials()</source>
          <target state="translated">QOAuth1::tokenCredentials()</target>
        </trans-unit>
        <trans-unit id="804b71190f5444c2d8552cba9483dc2b7a13961e" translate="yes" xml:space="preserve">
          <source>QOAuth1::tokenCredentialsUrl()</source>
          <target state="translated">QOAuth1::tokenCredentialsUrl()</target>
        </trans-unit>
        <trans-unit id="2d9cb4d5fd02bcd9210c6c96529ecd8365062cc6" translate="yes" xml:space="preserve">
          <source>QOAuth1::tokenSecret()</source>
          <target state="translated">QOAuth1::tokenSecret()</target>
        </trans-unit>
        <trans-unit id="a84fba0736fa5a3dd5be8422f4c1bd53630bba0a" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature &amp;amp;</source>
          <target state="translated">QOAuth1签名和</target>
        </trans-unit>
        <trans-unit id="5b29a48cf90c9f0facacca3777ec90142d4b051b" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature (class)</source>
          <target state="translated">QOAuth1Signature (class)</target>
        </trans-unit>
        <trans-unit id="c8f970e892616129be110a41e63be6f125c048aa" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature Class</source>
          <target state="translated">QOAuth1Signature类</target>
        </trans-unit>
        <trans-unit id="5d5d3441ce667dbf696e477a81a5c4911a56c302" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::HttpRequestMethod</source>
          <target state="translated">QOAuth1Signature::HttpRequestMethod</target>
        </trans-unit>
        <trans-unit id="f21f49408ac35df984ac927e990917227fb3f2e8" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::HttpRequestMethod (enum)</source>
          <target state="translated">QOAuth1Signature::HttpRequestMethod (enum)</target>
        </trans-unit>
        <trans-unit id="20d64fdbaef0296e5972d53c223da8c8f41de08a" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::QOAuth1Signature()</source>
          <target state="translated">QOAuth1Signature::QOAuth1Signature()</target>
        </trans-unit>
        <trans-unit id="c9881e4aa9dd3beb555fae95b4c215e832057a42" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::QOAuth1Signature(&lt;a href=&quot;qoauth1signature#QOAuth1Signature&quot;&gt;QOAuth1Signature&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">QOAuth1Signature :: QOAuth1Signature（&lt;a href=&quot;qoauth1signature#QOAuth1Signature&quot;&gt;QOAuth1Signature&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="77131fb5c968f35302a497103a855f5e70dd15d2" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::QOAuth1Signature(const &lt;a href=&quot;qoauth1signature#QOAuth1Signature&quot;&gt;QOAuth1Signature&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QOAuth1Signature :: QOAuth1Signature（const &lt;a href=&quot;qoauth1signature#QOAuth1Signature&quot;&gt;QOAuth1Signature&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="7ca89a7643c2fe8c642d369715030efe768e78ba" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::QOAuth1Signature(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QOAuth1Signature :: QOAuth1Signature（const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="e4f74ff97388584d9cf21997686064e7819a545a" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::addRequestBody()</source>
          <target state="translated">QOAuth1Signature::addRequestBody()</target>
        </trans-unit>
        <trans-unit id="7cdddffef7a19c8951ec5ba31c683a911a8aca27" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::clientSharedKey()</source>
          <target state="translated">QOAuth1Signature::clientSharedKey()</target>
        </trans-unit>
        <trans-unit id="10c2ad2536c096e56e6e24cf85cd844969e8068d" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::customMethodString()</source>
          <target state="translated">QOAuth1Signature::customMethodString()</target>
        </trans-unit>
        <trans-unit id="fb9de26a6ea4abe67a681eff59b37ea438781395" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::hmacSha1()</source>
          <target state="translated">QOAuth1Signature::hmacSha1()</target>
        </trans-unit>
        <trans-unit id="0b7802281bf19504045765cd95a321cd8c03f111" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::httpRequestMethod()</source>
          <target state="translated">QOAuth1Signature::httpRequestMethod()</target>
        </trans-unit>
        <trans-unit id="f4cc9d39690a2e0f29464cef4708103070d7ae4e" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::insert()</source>
          <target state="translated">QOAuth1Signature::insert()</target>
        </trans-unit>
        <trans-unit id="1858c08415a2a8dfc76a105dc447069e8b0a7248" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::keys()</source>
          <target state="translated">QOAuth1Signature::keys()</target>
        </trans-unit>
        <trans-unit id="42f6a1752c7929b2bc353d486d01b71f75451e64" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::operator=()</source>
          <target state="translated">QOAuth1Signature::operator=()</target>
        </trans-unit>
        <trans-unit id="5e75f5e2193f814a086f64bedd104bff8ecd15b1" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::parameters()</source>
          <target state="translated">QOAuth1Signature::parameters()</target>
        </trans-unit>
        <trans-unit id="b55622e0dab128193f8938c985a28230e4963193" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::plainText()</source>
          <target state="translated">QOAuth1Signature::plainText()</target>
        </trans-unit>
        <trans-unit id="60b6165752bda6c165562251f125098ca459ced8" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::rsaSha1()</source>
          <target state="translated">QOAuth1Signature::rsaSha1()</target>
        </trans-unit>
        <trans-unit id="8fd53ec414abbf534e580512305558ac5bde3161" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::setClientSharedKey()</source>
          <target state="translated">QOAuth1Signature::setClientSharedKey()</target>
        </trans-unit>
        <trans-unit id="e6bd3e24060c7db41de1187556581938c87463e8" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::setCustomMethodString()</source>
          <target state="translated">QOAuth1Signature::setCustomMethodString()</target>
        </trans-unit>
        <trans-unit id="ebec28665ac876d74b1a61251c3487b27fe9a555" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::setHttpRequestMethod()</source>
          <target state="translated">QOAuth1Signature::setHttpRequestMethod()</target>
        </trans-unit>
        <trans-unit id="399118d1db32e311a235508777d7fd65f704fa02" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::setParameters()</source>
          <target state="translated">QOAuth1Signature::setParameters()</target>
        </trans-unit>
        <trans-unit id="17505b972c3f668a8ef6dd2a998e929a2e40b3dc" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::setTokenSecret()</source>
          <target state="translated">QOAuth1Signature::setTokenSecret()</target>
        </trans-unit>
        <trans-unit id="61a14f142bcba868e74e3323acb33c467e522bfb" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::setUrl()</source>
          <target state="translated">QOAuth1Signature::setUrl()</target>
        </trans-unit>
        <trans-unit id="ac4eaf7c37a401290d1000ae3521ecb70672c60d" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::swap()</source>
          <target state="translated">QOAuth1Signature::swap()</target>
        </trans-unit>
        <trans-unit id="0c2f82d11971d682e7bce66e30089ac618321f1f" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::take()</source>
          <target state="translated">QOAuth1Signature::take()</target>
        </trans-unit>
        <trans-unit id="765da65a7cc3f111b2f91ae70c555001c67d1bef" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::tokenSecret()</source>
          <target state="translated">QOAuth1Signature::tokenSecret()</target>
        </trans-unit>
        <trans-unit id="f447eb0bbd05d3c7de41ed75a6dce53a4ea29301" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::url()</source>
          <target state="translated">QOAuth1Signature::url()</target>
        </trans-unit>
        <trans-unit id="8e04854aaefcc28d9de69b4febf63b341f95b74e" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::value()</source>
          <target state="translated">QOAuth1Signature::value()</target>
        </trans-unit>
        <trans-unit id="b0c84455af7c7fd62e5c6d3ffb1fb4f1de217126" translate="yes" xml:space="preserve">
          <source>QOAuth1Signature::~QOAuth1Signature()</source>
          <target state="translated">QOAuth1Signature::~QOAuth1Signature()</target>
        </trans-unit>
        <trans-unit id="ccb11e71f6bc58289f389521312e3a2a1301d1c0" translate="yes" xml:space="preserve">
          <source>QOAuth2AuthorizationCodeFlow</source>
          <target state="translated">QOAuth2AuthorizationCodeFlow</target>
        </trans-unit>
        <trans-unit id="536b09965b3ae26d3a909f46f367e09a64c58a33" translate="yes" xml:space="preserve">
          <source>QOAuth2AuthorizationCodeFlow (class)</source>
          <target state="translated">QOAuth2AuthorizationCodeFlow (class)</target>
        </trans-unit>
        <trans-unit id="c4f9079969d0605c5c3e73b11a03eb90dc9e8fda" translate="yes" xml:space="preserve">
          <source>QOAuth2AuthorizationCodeFlow Class</source>
          <target state="translated">QOAuth2AutizationCodeFlow类。</target>
        </trans-unit>
        <trans-unit id="0b2b74df3939cd0db61ce941101b4732bff65edb" translate="yes" xml:space="preserve">
          <source>QOAuth2AuthorizationCodeFlow::QOAuth2AuthorizationCodeFlow()</source>
          <target state="translated">QOAuth2AuthorizationCodeFlow::QOAuth2AuthorizationCodeFlow()</target>
        </trans-unit>
        <trans-unit id="794093878ab85b2238a66c899481831f150bf5cb" translate="yes" xml:space="preserve">
          <source>QOAuth2AuthorizationCodeFlow::QOAuth2AuthorizationCodeFlow(&lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt; *</source>
          <target state="translated">QOAuth2AuthorizationCodeFlow :: QOAuth2AuthorizationCodeFlow（&lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="8143e6522bc0cb07fddeae0a308ee7c9839cee34" translate="yes" xml:space="preserve">
          <source>QOAuth2AuthorizationCodeFlow::QOAuth2AuthorizationCodeFlow(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">QOAuth2AuthorizationCodeFlow :: QOAuth2AuthorizationCodeFlow（&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f2c7e5e2ae9d7e1b504ceb31ff0e6adf235fb393" translate="yes" xml:space="preserve">
          <source>QOAuth2AuthorizationCodeFlow::QOAuth2AuthorizationCodeFlow(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QOAuth2AuthorizationCodeFlow :: QOAuth2AuthorizationCodeFlow（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ed3e69db894502a6f5760a3767e02d97f2a783dc" translate="yes" xml:space="preserve">
          <source>QOAuth2AuthorizationCodeFlow::QOAuth2AuthorizationCodeFlow(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QOAuth2AuthorizationCodeFlow :: QOAuth2AuthorizationCodeFlow（const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="11f1c691087539d51dc759cda455cbbe67657a59" translate="yes" xml:space="preserve">
          <source>QOAuth2AuthorizationCodeFlow::accessTokenUrl</source>
          <target state="translated">QOAuth2AuthorizationCodeFlow::accessTokenUrl</target>
        </trans-unit>
        <trans-unit id="357efb4231d68996890dd43dacb3660ab9f53eea" translate="yes" xml:space="preserve">
          <source>QOAuth2AuthorizationCodeFlow::accessTokenUrl()</source>
          <target state="translated">QOAuth2AuthorizationCodeFlow::accessTokenUrl()</target>
        </trans-unit>
        <trans-unit id="ffc76fdc4fdd416d5fd510b067ff980fb2682508" translate="yes" xml:space="preserve">
          <source>QOAuth2AuthorizationCodeFlow::buildAuthenticateUrl()</source>
          <target state="translated">QOAuth2AuthorizationCodeFlow::buildAuthenticateUrl()</target>
        </trans-unit>
        <trans-unit id="88af2ad92450bb75cef40beb941e2486b0b0c75c" translate="yes" xml:space="preserve">
          <source>QOAuth2AuthorizationCodeFlow::grant()</source>
          <target state="translated">QOAuth2AuthorizationCodeFlow::grant()</target>
        </trans-unit>
        <trans-unit id="ac11bda83fbe4dd0561f2fdc0325a482bf6e5aec" translate="yes" xml:space="preserve">
          <source>QOAuth2AuthorizationCodeFlow::refreshAccessToken()</source>
          <target state="translated">QOAuth2AuthorizationCodeFlow::refreshAccessToken()</target>
        </trans-unit>
        <trans-unit id="5ca873abff5285635129ada6c4aa9260b46df235" translate="yes" xml:space="preserve">
          <source>QOAuth2AuthorizationCodeFlow::requestAccessToken()</source>
          <target state="translated">QOAuth2AuthorizationCodeFlow::requestAccessToken()</target>
        </trans-unit>
        <trans-unit id="1970a18e7cc398e981009929afe154d2d627308f" translate="yes" xml:space="preserve">
          <source>QOAuth2AuthorizationCodeFlow::resourceOwnerAuthorization()</source>
          <target state="translated">QOAuth2AuthorizationCodeFlow::resourceOwnerAuthorization()</target>
        </trans-unit>
        <trans-unit id="dc79904598f998fefe15555c96986a5bf3a22b22" translate="yes" xml:space="preserve">
          <source>QOAuth2AuthorizationCodeFlow::setAccessTokenUrl()</source>
          <target state="translated">QOAuth2AuthorizationCodeFlow::setAccessTokenUrl()</target>
        </trans-unit>
        <trans-unit id="278af6b910df86e9a7e724ff4b13e50e0dd1461b" translate="yes" xml:space="preserve">
          <source>QOAuth2AuthorizationCodeFlow::~QOAuth2AuthorizationCodeFlow()</source>
          <target state="translated">QOAuth2AuthorizationCodeFlow::~QOAuth2AuthorizationCodeFlow()</target>
        </trans-unit>
        <trans-unit id="1445519f46f65ddd3ba5714d257536de38297636" translate="yes" xml:space="preserve">
          <source>QOBJECT_REP</source>
          <target state="translated">QOBJECT_REP</target>
        </trans-unit>
        <trans-unit id="1e897cd45818a0e4909cecd7ce5342b8b36d6fa5" translate="yes" xml:space="preserve">
          <source>QOCI</source>
          <target state="translated">QOCI</target>
        </trans-unit>
        <trans-unit id="7ef4247ecd8117f409b777dd70937ce8a1d49e06" translate="yes" xml:space="preserve">
          <source>QOCI for the Oracle Call Interface (OCI)</source>
          <target state="translated">用于Oracle呼叫接口(OCI)的QOCI。</target>
        </trans-unit>
        <trans-unit id="d7cede155c517d7520a376472600cf571dd3302b" translate="yes" xml:space="preserve">
          <source>QOCIDriver</source>
          <target state="translated">QOCIDriver</target>
        </trans-unit>
        <trans-unit id="7050041a909848d6f2a48dc1222638cddd82f437" translate="yes" xml:space="preserve">
          <source>QODBC</source>
          <target state="translated">QODBC</target>
        </trans-unit>
        <trans-unit id="957eb53117883db8aeaa671d3221a984da9ae32d" translate="yes" xml:space="preserve">
          <source>QODBC for Open Database Connectivity (ODBC)</source>
          <target state="translated">开放式数据库连接的QODBC(ODBC)</target>
        </trans-unit>
        <trans-unit id="ed8c190621cbda4491fe93b27c15c7c9dac1751b" translate="yes" xml:space="preserve">
          <source>QODBCDriver</source>
          <target state="translated">QODBCDriver</target>
        </trans-unit>
        <trans-unit id="c64cee6f440ebb19cfd7bd36e4a4a0be6992e0d9" translate="yes" xml:space="preserve">
          <source>QObject</source>
          <target state="translated">QObject</target>
        </trans-unit>
        <trans-unit id="4a285e02f7adf56511ce0e3102402deb1805f1c6" translate="yes" xml:space="preserve">
          <source>QObject (class)</source>
          <target state="translated">QObject</target>
        </trans-unit>
        <trans-unit id="67e37176d2156797261a5226a616ba236a3f0dca" translate="yes" xml:space="preserve">
          <source>QObject *</source>
          <target state="translated">QObject *</target>
        </trans-unit>
        <trans-unit id="0838fca72d7defd5a12021f82378a53fcdb02151" translate="yes" xml:space="preserve">
          <source>QObject Class</source>
          <target state="translated">QObject类</target>
        </trans-unit>
        <trans-unit id="ea85bd36b2fc90c8861bd773af32cd508ba760f3" translate="yes" xml:space="preserve">
          <source>QObject Integration</source>
          <target state="translated">QObject集成</target>
        </trans-unit>
        <trans-unit id="184789cacae4aaaee1e779f900fe0f2a27b9facd" translate="yes" xml:space="preserve">
          <source>QObject Reentrancy</source>
          <target state="translated">QObject重入度</target>
        </trans-unit>
        <trans-unit id="a83387913d9c8061bc5a3180cb24c6a87200797f" translate="yes" xml:space="preserve">
          <source>QObject has neither a copy constructor nor an assignment operator. This is by design. Actually, they are declared, but in a &lt;code&gt;private&lt;/code&gt; section with the macro &lt;a href=&quot;qobject#Q_DISABLE_COPY&quot;&gt;Q_DISABLE_COPY&lt;/a&gt;(). In fact, all Qt classes derived from QObject (direct or indirect) use this macro to declare their copy constructor and assignment operator to be private. The reasoning is found in the discussion on &lt;a href=&quot;object#identity-vs-value&quot;&gt;Identity vs Value&lt;/a&gt; on the Qt &lt;a href=&quot;object&quot;&gt;Object Model&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0594736e9836d298d09d3f89c55cf7ff2ea3a8c2" translate="yes" xml:space="preserve">
          <source>QObject is the heart of the Qt &lt;a href=&quot;object&quot;&gt;Object Model&lt;/a&gt;. The central feature in this model is a very powerful mechanism for seamless object communication called &lt;a href=&quot;signalsandslots&quot;&gt;signals and slots&lt;/a&gt;. You can connect a signal to a slot with &lt;a href=&quot;qobject#connect&quot;&gt;connect&lt;/a&gt;() and destroy the connection with &lt;a href=&quot;qobject#disconnect&quot;&gt;disconnect&lt;/a&gt;(). To avoid never ending notification loops you can temporarily block signals with &lt;a href=&quot;qobject#blockSignals&quot;&gt;blockSignals&lt;/a&gt;(). The protected functions &lt;a href=&quot;qobject#connectNotify&quot;&gt;connectNotify&lt;/a&gt;() and &lt;a href=&quot;qobject#disconnectNotify&quot;&gt;disconnectNotify&lt;/a&gt;() make it possible to track connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b07c93fa14d4cf7bce9b22eea3050c68ead8b4" translate="yes" xml:space="preserve">
          <source>QObject-derived Types</source>
          <target state="translated">QObject-派生类型</target>
        </trans-unit>
        <trans-unit id="753fd08dc8ac52d9d3a2cebbbb021dad8d792f65" translate="yes" xml:space="preserve">
          <source>QObject-specific transition for Qt events</source>
          <target state="translated">Qt事件的QObject特定过渡</target>
        </trans-unit>
        <trans-unit id="d34236e5c91edc8f1c57f0cc53ee5edd8fea47ab" translate="yes" xml:space="preserve">
          <source>QObject::QObject()</source>
          <target state="translated">QObject::QObject()</target>
        </trans-unit>
        <trans-unit id="10c21708baf1bdd6075a503cced651fae335273f" translate="yes" xml:space="preserve">
          <source>QObject::QObject(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">QObject :: QObject（&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f2664a3f2bda8358be0943e0d024a59abc1f867a" translate="yes" xml:space="preserve">
          <source>QObject::QObjectList (typedef)</source>
          <target state="translated">QObject::QObjectList (typedef)</target>
        </trans-unit>
        <trans-unit id="f6a8ac99fde91d9267301b6451b77310396ee1c3" translate="yes" xml:space="preserve">
          <source>QObject::QT_NO_NARROWING_CONVERSIONS_IN_CONNECT</source>
          <target state="translated">QObject::QT_NO_NARROWING_CONVERSIONS_IN_CONNECT</target>
        </trans-unit>
        <trans-unit id="503e9d19faf1f2a0a6618c0169b6c286ad8257c6" translate="yes" xml:space="preserve">
          <source>QObject::Q_CLASSINFO(</source>
          <target state="translated">QObject::Q_CLASSINFO(</target>
        </trans-unit>
        <trans-unit id="f47a68c993dd05ab240525e911944b131207b4eb" translate="yes" xml:space="preserve">
          <source>QObject::Q_CLASSINFO()</source>
          <target state="translated">QObject::Q_CLASSINFO()</target>
        </trans-unit>
        <trans-unit id="3f43c68cff22041fff91d22b5e141a67297f45b2" translate="yes" xml:space="preserve">
          <source>QObject::Q_DISABLE_COPY(</source>
          <target state="translated">QObject::Q_DISABLE_COPY(</target>
        </trans-unit>
        <trans-unit id="3f446b0bda125c4f746183cbe882825f1aa03e81" translate="yes" xml:space="preserve">
          <source>QObject::Q_DISABLE_COPY()</source>
          <target state="translated">QObject::Q_DISABLE_COPY()</target>
        </trans-unit>
        <trans-unit id="e44ee9f32769bd1db735ed4f08d90adde26aa3ab" translate="yes" xml:space="preserve">
          <source>QObject::Q_DISABLE_COPY_MOVE(</source>
          <target state="translated">QObject::Q_DISABLE_COPY_MOVE(</target>
        </trans-unit>
        <trans-unit id="3afbab3f3f687186f37b217be5db6ba210c942c1" translate="yes" xml:space="preserve">
          <source>QObject::Q_DISABLE_COPY_MOVE()</source>
          <target state="translated">QObject::Q_DISABLE_COPY_MOVE()</target>
        </trans-unit>
        <trans-unit id="ec2ed1d8f3b185b0d8da2181df105b449d9d299b" translate="yes" xml:space="preserve">
          <source>QObject::Q_DISABLE_MOVE(</source>
          <target state="translated">QObject::Q_DISABLE_MOVE(</target>
        </trans-unit>
        <trans-unit id="7670f6e0d706ba29b888acdd607042a14433d59f" translate="yes" xml:space="preserve">
          <source>QObject::Q_DISABLE_MOVE()</source>
          <target state="translated">QObject::Q_DISABLE_MOVE()</target>
        </trans-unit>
        <trans-unit id="904cf7ee0948485c808bd00e2e27c1d780719dce" translate="yes" xml:space="preserve">
          <source>QObject::Q_EMIT</source>
          <target state="translated">QObject::Q_EMIT</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
