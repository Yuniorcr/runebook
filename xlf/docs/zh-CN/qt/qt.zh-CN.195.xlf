<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="75a44a5e4cdd0f72a0334b5df5b53297319455d0" translate="yes" xml:space="preserve">
          <source>The following example plays a WAV file on mouse click.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557e57b7bb4ac250f8c4178d80ca578777bfbd8d" translate="yes" xml:space="preserve">
          <source>The following example pre-allocates a &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; given the array's size for more efficient decoding:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af0ab72f7032b4ad36c48527b0a1d2fd9d854f0" translate="yes" xml:space="preserve">
          <source>The following example pre-allocates a &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; given the map's size for more efficient decoding:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2089a4179fec95c239c0fd321e6f3f78e4fdc9" translate="yes" xml:space="preserve">
          <source>The following example presents how to show a notification message using &lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#showMessage-method&quot;&gt;showMessage()&lt;/a&gt;, and how to make use of the &lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#messageClicked-signal&quot;&gt;messageClicked()&lt;/a&gt; signal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4350a2e8e7ff8ea6cf23ef5c497764c249f3fce0" translate="yes" xml:space="preserve">
          <source>The following example provides a module that can add numbers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7429581e102dfb191ef654ae09ac2ab917a51c3" translate="yes" xml:space="preserve">
          <source>The following example provides key navigation for a 2x2 grid of items:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8953d76100e0ebfa41204e302eb67adc0ebb4de9" translate="yes" xml:space="preserve">
          <source>The following example queries an unlockable product named &quot;myUnlockableProduct&quot; from the external market place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26616f6353920f8959c6621807f02e6eae71c83a" translate="yes" xml:space="preserve">
          <source>The following example reacts to a failed purchase attempt by calling a custom function to display a message to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae005e6ca85a3901fbe2ce93a49742de9aef1aab" translate="yes" xml:space="preserve">
          <source>The following example reads a text file line by line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74bb4ba52c1627192c71b409c394fd691c4b1f14" translate="yes" xml:space="preserve">
          <source>The following example records all signal emissions for the &lt;code&gt;clicked()&lt;/code&gt; signal of a &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca61b8bb5c409621b5c9f6a8ba91d4c740f0da48" translate="yes" xml:space="preserve">
          <source>The following example registers a store with three products, two consumable products and one unlockable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae624641f1701f62cdd5da464e7815b2f584503" translate="yes" xml:space="preserve">
          <source>The following example removes all (capital, country) pairs where the capital's name ends with &quot;City&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4339d457d4854018d0db03920337e2b2b80ba932" translate="yes" xml:space="preserve">
          <source>The following example retrieves the most common information about the root volume of the system, and prints information about it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23de676a2cd224d8cb5359853c054281d779a552" translate="yes" xml:space="preserve">
          <source>The following example rotates a Rectangle 45 degress (PI/4):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65333a7cadf6bc62d1d4c4ab90fa342719942d45" translate="yes" xml:space="preserve">
          <source>The following example rotates a Rectangle around its interior point (25, 25):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71699ef293fec3faa7d2790bcc71f67d088a8177" translate="yes" xml:space="preserve">
          <source>The following example runs &lt;code&gt;gzip&lt;/code&gt; to compress the string &quot;Qt rocks!&quot;, without an event loop:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5dab2919a061964bc0198aedf576f2c74a4b030" translate="yes" xml:space="preserve">
          <source>The following example runs two number animations in a sequence. The &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; animates to a &lt;code&gt;x&lt;/code&gt; position of 50, then to a &lt;code&gt;y&lt;/code&gt; position of 50.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b29151d13a941955c42ede9b81b3015f9b1ad23" translate="yes" xml:space="preserve">
          <source>The following example scales the X axis of the Rectangle, relative to its interior point (25, 25):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac78949462a2b81a2f63c17daa9554174b55774" translate="yes" xml:space="preserve">
          <source>The following example sets a dark Holo theme, and the result can be seen in the screenshot above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2449b58c1a1ed6989f26c09f1a970ba1e971829c" translate="yes" xml:space="preserve">
          <source>The following example sets an Australian locale:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0cddd187310ec0bc7df4109b3cda105ff8c31cd" translate="yes" xml:space="preserve">
          <source>The following example shows a &lt;a href=&quot;qml-qt-labs-folderlistmodel-folderlistmodel&quot;&gt;FolderListModel&lt;/a&gt; being used to provide a list of QML files in a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f1c749b4a3dac2e8c564c65b83d1ffe025af38" translate="yes" xml:space="preserve">
          <source>The following example shows a &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; containing three elements, with the roles &quot;name&quot; and &quot;cost&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b735c5f3c12a80dee8eab5f21df3e87ebe43489" translate="yes" xml:space="preserve">
          <source>The following example shows a Flipable item that flips whenever it is clicked, rotating about the y-axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fdec566f2c2804382d66f46214f50172b1d2637" translate="yes" xml:space="preserve">
          <source>The following example shows a Flow item containing a number of &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; child items. These are arranged in a similar way to those shown in the screenshots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c6f6b88c8eb63ab62f818c0c0e0aa7d4e4f70c" translate="yes" xml:space="preserve">
          <source>The following example shows a URL where the scheme is &quot;ftp&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b891fc64d366955a188d498567a1d26d2315bc" translate="yes" xml:space="preserve">
          <source>The following example shows a chord that will be triggered by pressing the A and S keys together with a tolerance of 10 miliseconds between presses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d6a86b66009ed3f00b52bcf4006d9a598bc33c7" translate="yes" xml:space="preserve">
          <source>The following example shows a datetime being parsed from a datetime string in a certain format using the default locale:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04821c7da1a7b444db6dab2915f87836eaca6046" translate="yes" xml:space="preserve">
          <source>The following example shows a delegate that animates a spinning rectangle. When it is pooled, the animation is temporarily paused:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309db721a234dfdcc2e1834805c969dcecd4a034" translate="yes" xml:space="preserve">
          <source>The following example shows a number formatted for the German locale:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd59d1748028f68695a01a229f4ca317f27ef52" translate="yes" xml:space="preserve">
          <source>The following example shows a repeater used with a Grid item to arrange a set of Rectangle items. The Repeater item creates a series of 24 rectangles for the Grid item to position in a 5 by 5 arrangement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5da7652fa9d6b03fcb7a7bf452645d018e0270a" translate="yes" xml:space="preserve">
          <source>The following example shows a simple &lt;a href=&quot;qml-qtpositioning-positionsource&quot;&gt;PositionSource&lt;/a&gt; used to receive updates every second and print the longitude and latitude out to the console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43949d4305f186fd39d8b548154566aeeee5ab90" translate="yes" xml:space="preserve">
          <source>The following example shows a simple Location object being declared:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff7f146857fb04cfd88daa9517c3c48e9fbfd9f" translate="yes" xml:space="preserve">
          <source>The following example shows a simple usage of the &lt;a href=&quot;qml-qt-labs-lottieqt-lottieanimation&quot;&gt;LottieAnimation&lt;/a&gt; type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ec72f691cedce3f675dd46cf9e9937e861e5c0" translate="yes" xml:space="preserve">
          <source>The following example shows a small view onto a large image in which the user can drag or flick the image in order to view different parts of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f2a4e71f1ccd8626eaf5fc5b14150d5c438326b" translate="yes" xml:space="preserve">
          <source>The following example shows a valid authority string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b798f1249e131b3ed48ec80f9c488a0458aef6" translate="yes" xml:space="preserve">
          <source>The following example shows an instantiation of the &lt;a href=&quot;location-plugin-here#&quot;&gt;HERE&lt;/a&gt; plugin with a mapping API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4621627939ad17a4d97d9a89959aa825e0142b" translate="yes" xml:space="preserve">
          <source>The following example shows an sequence that will be triggered by pressing the G, D, and J keys in that order with a maximum time between key presses of 1 second and overall maximum input time of 3 seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f80249134ce7c7586cdfb578ccc9192ce07be8" translate="yes" xml:space="preserve">
          <source>The following example shows how a translation is obtained for the class shown in the previous section:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635a003629be3753abd2a9f44f4221e7c4586718" translate="yes" xml:space="preserve">
          <source>The following example shows how the general onPressed handler can be used to test for a certain key; in this case, the left cursor key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5247005db1331dfb91ee0bc6e4fcd906b8a93bd0" translate="yes" xml:space="preserve">
          <source>The following example shows how the volume value from a UI volume control can be converted so that the perceived increase in loudness is the same when increasing the volume control from 0.2 to 0.3 as it is from 0.5 to 0.6:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a09f328ced922ccf3392016879abf01933b29a" translate="yes" xml:space="preserve">
          <source>The following example shows how to access all &lt;a href=&quot;qml-qtlocation-contactdetail&quot;&gt;ContactDetails&lt;/a&gt; and print them to the console:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc227a757e94eb8762456b1d27f63af49693be1b" translate="yes" xml:space="preserve">
          <source>The following example shows how to access all &lt;a href=&quot;qml-qtlocation-placeattribute&quot;&gt;PlaceAttributes&lt;/a&gt; and print them to the console:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5413e88bcea080cf4e298a541c62b1a2064d5245" translate="yes" xml:space="preserve">
          <source>The following example shows how to apply the effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae840d84d69477cf08478ae7efb8502bd6e6200c" translate="yes" xml:space="preserve">
          <source>The following example shows how to assign and modify an attribute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28eaca1949f768a0601947b34299c6cb84d7d6f4" translate="yes" xml:space="preserve">
          <source>The following example shows how to convert the volume value from a slider control before passing it to a &lt;a href=&quot;qmediaplayer&quot;&gt;QMediaPlayer&lt;/a&gt;. As a result, the perceived increase in volume is the same when increasing the volume slider from 20 to 30 as it is from 50 to 60:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c516f3c8f4a099a97af91fc2aacc905748858c84" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a model from C++ with multiple columns:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3056b17baa68700189f119c2636a05704e1af4eb" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a system tray icon, and how to make use of the &lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#activated-signal&quot;&gt;activated()&lt;/a&gt; signal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6bf8c2f4e2e37ae0996d21e7258185d6cc0ff8d" translate="yes" xml:space="preserve">
          <source>The following example shows how to create an OSM plugin instance with parameters supplied for an useragent, and if necessary, a custom server url plus the corresponding copyright information for the tile provider. Additionally, it is possible to choose another routing server than the public osrm one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b62dc5ac03aedab89d662b46b331b3630f88864" translate="yes" xml:space="preserve">
          <source>The following example shows how to create and display a supplier in QML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc7495739a5a95d5cf16a0ee5b221f23f530a9c" translate="yes" xml:space="preserve">
          <source>The following example shows how to display a list of available cameras. The user can change the active camera by selecting one of the items in the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b34320057472b0dde8b3849d29b59e747a8488" translate="yes" xml:space="preserve">
          <source>The following example shows how to display all attributes in a list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5fbe76f534d0e808fe40a4ed2c5a32761df25d4" translate="yes" xml:space="preserve">
          <source>The following example shows how to display editorials for a place:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05fbaf0b8a86c660a68f2e0b43b08ac75af52676" translate="yes" xml:space="preserve">
          <source>The following example shows how to display images for a place:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a642063a5cab284a1cd2f2e083c0d0076d92331b" translate="yes" xml:space="preserve">
          <source>The following example shows how to display information about the user who submitted an editorial:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e44540662fff7cc82086313814519a43aa5a86d" translate="yes" xml:space="preserve">
          <source>The following example shows how to find a list of child &lt;code&gt;QWidget&lt;/code&gt;s of the specified &lt;code&gt;parentWidget&lt;/code&gt; named &lt;code&gt;widgetname&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bcccc6565c8fbfa3abbb910d5f043a0a604673c" translate="yes" xml:space="preserve">
          <source>The following example shows how to get the volume on which the application is located. It is recommended to always check that the volume is ready and valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44a659e37217ad9e85507221d339e6551ae1663" translate="yes" xml:space="preserve">
          <source>The following example shows how to load a QML file from a network resource. After creating the &lt;a href=&quot;qqmlcomponent&quot;&gt;QQmlComponent&lt;/a&gt;, it tests whether the component is loading. If it is, it connects to the &lt;a href=&quot;qqmlcomponent#statusChanged&quot;&gt;QQmlComponent::statusChanged&lt;/a&gt;() signal and otherwise calls the &lt;code&gt;continueLoading()&lt;/code&gt; method directly. Note that &lt;a href=&quot;qqmlcomponent#isLoading&quot;&gt;QQmlComponent::isLoading&lt;/a&gt;() may be false for a network component if the component has been cached and is ready immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a36bfcd7a4914761e42ed9ee809b00c63e2f6d2" translate="yes" xml:space="preserve">
          <source>The following example shows how to load a XML Schema file from the network and test whether it is a valid schema document:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073d2ff96ccfe9b01a399d4575a630092408ec64" translate="yes" xml:space="preserve">
          <source>The following example shows how to load a XML Schema from a local file, check whether it is a valid schema document and use it for validation of an XML instance document:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5f311ecc00834b657e4e01f2eb021589723b0b" translate="yes" xml:space="preserve">
          <source>The following example shows how to override the shortcut underline behavior on any platform:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846cedadc24d199bdd626e60799d16ba56c8b0ea" translate="yes" xml:space="preserve">
          <source>The following example shows how to set a simple &lt;code&gt;columnWidthProvider&lt;/code&gt; together with a timer that modifies the values the function returns. When the array is modified, &lt;a href=&quot;qml-qtquick-tableview#forceLayout-method&quot;&gt;forceLayout&lt;/a&gt; is called to let the changes take effect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc792c7de6358a0c1af7b1247bf6bd30b2de6e84" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;a href=&quot;qml-qtlocation-placesearchmodel&quot;&gt;PlaceSearchModel&lt;/a&gt; to search for Pizza restaurants in close proximity of a given position. A &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchTerm-prop&quot;&gt;searchTerm&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchArea-prop&quot;&gt;searchArea&lt;/a&gt; are provided to the model and &lt;a href=&quot;qml-qtlocation-placesearchmodel#update-method&quot;&gt;update()&lt;/a&gt; is used to perform a lookup query. Note that the model does not incrementally fetch search results, but rather performs a single fetch when &lt;a href=&quot;qml-qtlocation-placesearchmodel#update-method&quot;&gt;update()&lt;/a&gt; is run. The &lt;a href=&quot;qml-qtlocation-placesearchmodel#count-prop&quot;&gt;count&lt;/a&gt; is set to the number of search results returned during the fetch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef6ea04ebb5130c4f1a824f9395a8fe545052b6" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel&quot;&gt;PlaceSearchSuggestionModel&lt;/a&gt; to get suggested search terms from a partial search term. The &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#searchArea-prop&quot;&gt;searchArea&lt;/a&gt; is set to match what would be used to perform the actual place search with &lt;a href=&quot;qml-qtlocation-placesearchmodel&quot;&gt;PlaceSearchModel&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a931dbb6bb1f07deb53f729e1a47f1ee757a30" translate="yes" xml:space="preserve">
          <source>The following example shows how we use a &lt;a href=&quot;qml-qtquick-controls-groupbox&quot;&gt;GroupBox&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a52dc554953c81dba84abb93c3955bb91cbaea" translate="yes" xml:space="preserve">
          <source>The following example shows how you can decide which animation to use at runtime:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7597d384814347a73af63baa5e9d663e3c42cb" translate="yes" xml:space="preserve">
          <source>The following example shows mirroring in action. The &lt;a href=&quot;qml-qtquick-row&quot;&gt;Row&lt;/a&gt; below is specified as being anchored to the left of its parent. However, since mirroring has been enabled, the anchor is horizontally reversed and it is now anchored to the right. Also, since items in a &lt;a href=&quot;qml-qtquick-row&quot;&gt;Row&lt;/a&gt; are positioned from left to right by default, they are now positioned from right to left instead, as demonstrated by the numbering and opacity of the items:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d402059d8c36dbe819b5315607e7dedef23f1486" translate="yes" xml:space="preserve">
          <source>The following example shows rectangles with colors specified using hexadecimal and named color notation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db5dc64a890badf646778767b76ad7a05941665" translate="yes" xml:space="preserve">
          <source>The following example shows the current date and time formatted for the German locale:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91973759e9020a30186684dc3cfb208e67a791cf" translate="yes" xml:space="preserve">
          <source>The following example shows the current date first being formatted as a date string using the default locale and format, then parsed back again in the same manner:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2034e11544cdd6176227a3df875148e55d8b37e" translate="yes" xml:space="preserve">
          <source>The following example shows the current date formatted for the German locale:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e1192360977d06c3e3b821ec38bc0893139cf7" translate="yes" xml:space="preserve">
          <source>The following example shows the current time first being formatted as a time string using the default locale and a short format, then parsed back again in the same manner:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a42a1fa521820679a6a12d2f49c105b5e50386" translate="yes" xml:space="preserve">
          <source>The following example shows the current time formatted for the German locale:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="699c1bfd3991f79158875ed35e9879ade07659af" translate="yes" xml:space="preserve">
          <source>The following example shows the definition of a simple list model defined in a file called &lt;code&gt;ContactModel.qml&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4399ac1c1dfdda6f023798e16e40576fb70a035" translate="yes" xml:space="preserve">
          <source>The following example shows the effects of some of the common properties on a Rectangle item, which in this case is used to create a square:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab771fc92edf70f704ba18229f2af0b112f72fc" translate="yes" xml:space="preserve">
          <source>The following example shows the minimum functionality that is required from an input method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657e082947a75eb85cbfdaf98920e1b73e69de74" translate="yes" xml:space="preserve">
          <source>The following example shows the simplest usage of the Image type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a7da189b3000f41bde0f4913207873a9718d60" translate="yes" xml:space="preserve">
          <source>The following example shows the various effects of stacking order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae92e9d1523a16c5af60bcecb8a61911b8f6cf3" translate="yes" xml:space="preserve">
          <source>The following example snippet illustrates how to use a page-specific toolbar header and an application-wide tabbar footer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9a98dc3e96afa2d989765279ae26f84f0b1874e" translate="yes" xml:space="preserve">
          <source>The following example specifies a left margin:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee51518ff0c9843299f1c6d89ee47fbdd0feb39" translate="yes" xml:space="preserve">
          <source>The following example triggers the copy action and therefore copies any selected text to the clipboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aacab094605a7af2dd1ead22c94d8c8889b02bc" translate="yes" xml:space="preserve">
          <source>The following example uses a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; in a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; that changes the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; color to red when clicked:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b089035669ef5f00d4245d925a803302d7123a" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;application&lt;/code&gt; object to indicate whether the application is currently active:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40190e2cf0e8e9af68d9fe47a61583c30e1b4a86" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;styleHints&lt;/code&gt; object to determine whether an item should gain focus on mouse press or touch release:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6007660c0fc54a99e01a2667ceda805504e61629" translate="yes" xml:space="preserve">
          <source>The following example uses the attached &lt;a href=&quot;qml-qtquick-controls2-overlay#overlay-attached-prop&quot;&gt;Overlay.overlay&lt;/a&gt; property to position a popup in the center of the window, despite the position of the button that opens the popup:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef295c974253d3e55c06abdea02bb3183b763c4d" translate="yes" xml:space="preserve">
          <source>The following example uses the three qdoc ditamap commands described above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ac202097907723afb4e68e938ec64238942f6b" translate="yes" xml:space="preserve">
          <source>The following example waits up to one second for a connection to be closed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c20d1663d02daeba2c1eb8c2a836f59d601afa" translate="yes" xml:space="preserve">
          <source>The following example waits up to one second for a connection to be established:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87cf9a7f6f1a1e01b768f9e4a5fdd2736d6bba14" translate="yes" xml:space="preserve">
          <source>The following example waits up to one second for the session to be opened:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1763625c312b139f41a7fe67fde88b799b2ec9bd" translate="yes" xml:space="preserve">
          <source>The following example waits up to one second for the socket to be encrypted:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42e650b927fe91957f007cca3fc9de3d0f5b0a9" translate="yes" xml:space="preserve">
          <source>The following example will load and append the contents of a file to the stream:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b89af013c9f6ec9af6073da52fc58fc00fe1d6" translate="yes" xml:space="preserve">
          <source>The following example will run all tests in &lt;code&gt;MyTestObject&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d544ebc78170d4bda8affc998d490d592d025d2d" translate="yes" xml:space="preserve">
          <source>The following example will show a &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt;, &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;, and &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; side by side, with two splitter handles:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52257cae710a3a49027ee4352ba328227688e382" translate="yes" xml:space="preserve">
          <source>The following example writes a number to a byte array then returns it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298684f1412c687c1d892df6f0dca627b5bdf746" translate="yes" xml:space="preserve">
          <source>The following example writes an arbitrary &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; to the stream:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcfc03cff79fe71d0b58c8b3c7a55b1cb8641019" translate="yes" xml:space="preserve">
          <source>The following example writes an empty map to a file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb00fcc4df747f672853aab6b9a17fed718e236" translate="yes" xml:space="preserve">
          <source>The following example writes to elements of a reference sequence in a tight loop, resulting in bad performance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a50561b624bd5173117c5069e84288761c00db2" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate the default values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87ec247c66a8b8cd1ba87d33083718a60e53062" translate="yes" xml:space="preserve">
          <source>The following examples show the effects of the different modes on an image. Guide lines are overlaid onto the image to show the different regions of the image as described above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9673c1ad43a6fcaedfb90e354b2b78a7441a1631" translate="yes" xml:space="preserve">
          <source>The following features can also be customized:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c444980202e92b511a9e53c65235dffad6d3f1b" translate="yes" xml:space="preserve">
          <source>The following features directories are searched for features files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc50dc839c68e9abee72e753e9e33d980a3e28a" translate="yes" xml:space="preserve">
          <source>The following filter matches NDEF messages that contain a URI, a localized piece of text and an optional JPEG image. The order of the records must be in the order specified:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d26f2e79ac6f28d3b635124e43c8e71430b0bc" translate="yes" xml:space="preserve">
          <source>The following filter matches NDEF messages that contain a single smart poster record:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="859db664d742fc7577002368751b17e8ed88e7f0" translate="yes" xml:space="preserve">
          <source>The following flags are helpful when you want to define macOS specific code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b825ee5f0bede6a1d6581f7b8075a6649ea07a9" translate="yes" xml:space="preserve">
          <source>The following functions are also on the Qt object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d7c505b691b8a3f24cbee49cd00b13710c2718" translate="yes" xml:space="preserve">
          <source>The following functions on the global object allow you to dynamically create QML items from files or strings. See &lt;a href=&quot;qtqml-javascript-dynamicobjectcreation#&quot;&gt;Dynamic QML Object Creation from JavaScript&lt;/a&gt; for an overview of their use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="037ebb813eed44020b21ed050ecd8f390c75801c" translate="yes" xml:space="preserve">
          <source>The following generic sensors are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="096c999cc953248f6d87f10ffdb8cd0d80641108" translate="yes" xml:space="preserve">
          <source>The following hints are most useful when models are used that cache data, such as those that manipulate data locally in order to increase performance or conserve network bandwidth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd753f4fcaecd6e6abde57e85e2bd06b4e818c4" translate="yes" xml:space="preserve">
          <source>The following image displays the mydialog.ui file in Qt Creator Design mode. You can view the code in the Edit mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da437ca94971afb12000f335d410aa04272138f" translate="yes" xml:space="preserve">
          <source>The following image formats are available in Qt. See the notes after the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6fe5615b9c38b5de6416f38def2647e1d7029f" translate="yes" xml:space="preserve">
          <source>The following image formats are supported, and will be mapped to a corresponding native image type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d581876f28313f10f9f742c40e1db08dea8378" translate="yes" xml:space="preserve">
          <source>The following image illustrates the directions in which the various input modes track movement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c1c41f161088ba52ff6d9b66d1fe0a6bb593ee" translate="yes" xml:space="preserve">
          <source>The following images demonstrate a flickable being flicked in various directions and the resulting &lt;a href=&quot;qml-qtquick-flickable#contentX-prop&quot;&gt;contentX&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-flickable#contentY-prop&quot;&gt;contentY&lt;/a&gt; values. The blue square represents the flickable's content, and the black border represents the bounds of the flickable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3e5261788d312626aa26d59ec57255338d12c3" translate="yes" xml:space="preserve">
          <source>The following images illustrate the differences between some of the controls when using the normal and dense variants:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="200c82929c8da4c81bb6fb74f81a63fdfade0064" translate="yes" xml:space="preserve">
          <source>The following implementation of a &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; subclass prints the path to the file that was, for example, dropped on the Dock icon of the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab4663a91babc02e7341d3f3e8d548593ede480" translate="yes" xml:space="preserve">
          <source>The following instructions guide you to build and add the OpenSSL libraries to the APK:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad80cc34b9f0820839dafa8697179d8ae4416e8" translate="yes" xml:space="preserve">
          <source>The following is a code snippet illustrating how to create a red line using a &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe01102b476ba26c47d1a02183848070a1a33a5" translate="yes" xml:space="preserve">
          <source>The following is a list of example applications that use UIs created by the Qt Quick Designer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d49a2f9adcfb43baebaf73ec9b22cbbb07268c70" translate="yes" xml:space="preserve">
          <source>The following is a list of important QML types and C++ classes provided by this module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b272cba7c0a906c07623a94e05e33b918a303b8" translate="yes" xml:space="preserve">
          <source>The following is a simple outline of how a frame gets composed with the threaded render loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc63f291bf8798d2e5990fc0fb5b173f5c511f48" translate="yes" xml:space="preserve">
          <source>The following is a simplified illustration of the frame rendering sequence in the non-threaded renderer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="037e3ef7c44dbf0212f9c6b7b16c32a9831f320b" translate="yes" xml:space="preserve">
          <source>The following is a snippet showing how to subclass &lt;a href=&quot;qmaccocoaviewcontainer&quot;&gt;QMacCocoaViewContainer&lt;/a&gt; to wrap an NSSearchField.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4293d374a993a1ef7d716943a674eaa39b8067d4" translate="yes" xml:space="preserve">
          <source>The following is a statechart that uses the custom event and transition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e97c86d04722e15ac7d1056dc1b2eecddc5ede" translate="yes" xml:space="preserve">
          <source>The following is an example configuration for the Raspberry Pi 2. For most Embedded Linux boards, the configure command looks similar:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a666951052515b5bda6b8270a6f24e8c88f9c9" translate="yes" xml:space="preserve">
          <source>The following is an example of the header of a simple widget class without member functions. The purpose is to show how you can utilize signals and slots in your own applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe24de91c868b9f745653f906d51b82e941ca742" translate="yes" xml:space="preserve">
          <source>The following is given for each widget:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbaa9dc8cacd483abf3da41db917f4a880a9196f" translate="yes" xml:space="preserve">
          <source>The following is largly based on our own experiements with ActiveX controls and client applications, and is by no means complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0825aa898f7f6b1e8b7f165231a9c14546fc29f" translate="yes" xml:space="preserve">
          <source>The following is the basic outline of creating a Vulkan-capable &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77a31dda49f63e97156a2aa31816ea9a49aaf7b" translate="yes" xml:space="preserve">
          <source>The following items are not supported by this module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3cfd143c9bd65382e3dad9d1997d56ea72d085a" translate="yes" xml:space="preserve">
          <source>The following keys are defined in the API. &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt; implementations are free to define additional keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1b904af6b64aefbf1bb1acd717ac6f30f1f758" translate="yes" xml:space="preserve">
          <source>The following keys are handled specifically:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef43cfd41225f7cdfb12984d737f4ab2c0ff895" translate="yes" xml:space="preserve">
          <source>The following list explains the required steps of inserting a custom text object into a document:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad53b33d5d180949b93c544ad215490290c46123" translate="yes" xml:space="preserve">
          <source>The following list is a good summary of things to keep in mind when designing a delegate:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="456db32cacfdb72f60fecccf7e05b1f3f0db033c" translate="yes" xml:space="preserve">
          <source>The following list presents the functional division of types that are part of Qt Graphical Effects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38051d59210aac76499969246f7f96364c06621a" translate="yes" xml:space="preserve">
          <source>The following list shows further details that may be retrieved via QPlaceManager::getDetails()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3541edf0b714103e38aec5beecdfcd723dd75473" translate="yes" xml:space="preserve">
          <source>The following list shows what core place data is returned during a place search:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e089ebc633a2771a543305e933fdbd42c1ad511" translate="yes" xml:space="preserve">
          <source>The following list summarizes the &lt;code&gt;built-in&lt;/code&gt; properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e8130010797c0765271dd72a748a0a5556d8fa" translate="yes" xml:space="preserve">
          <source>The following list summarizes the available Shape rendering approaches:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5bdfccf27d0371ccdef272c6a0351d8ca98de2" translate="yes" xml:space="preserve">
          <source>The following list summarizes what you can do with Qt for Android:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c88740190849337880672448ffbca67ce11fd0" translate="yes" xml:space="preserve">
          <source>The following lists a set of useful attributes that can be used to tweak applications on macOS:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07aa2e54440e9f3134cb9805130e1fd76598de25" translate="yes" xml:space="preserve">
          <source>The following metadata example is from the Lipi-Toolkit extension plugin (lipi.json):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f72ca334abb8b84262125c6b2948f164b64361" translate="yes" xml:space="preserve">
          <source>The following methods return &lt;a href=&quot;qjsonvalue#qjsonvalueref&quot;&gt;QJsonValueRef&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59931ef3d3a60b0d7365e225c2ecabe26ccdaaee" translate="yes" xml:space="preserve">
          <source>The following model defines a series of list elements, each of which contain &quot;name&quot; and &quot;cost&quot; roles and their associated values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0420a76de72e25515d7c8224d8abf7bb6118a347" translate="yes" xml:space="preserve">
          <source>The following model has three roles,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f684d3e156ea685b52dc810852f5251d66d769bc" translate="yes" xml:space="preserve">
          <source>The following operating systems guarantee that the results from their random-generation API will be of at least cryptographically-safe quality, even if the entropy pool is exhausted: Apple OSes (Darwin), BSDs, Linux, Windows. Barring a system installation problem (such as &lt;code&gt;/dev/urandom&lt;/code&gt; not being readable by the current process), &lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator::system&lt;/a&gt;() will therefore have the same guarantees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7283886649230184530ef9293240d6bbe63254" translate="yes" xml:space="preserve">
          <source>The following option can also be defined to provide additional information about the library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2fb637a55b6d1c7cfc381880e53014fbe62871" translate="yes" xml:space="preserve">
          <source>The following options define the application or library type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6714bddc1a24373012d331661fd7300217d304" translate="yes" xml:space="preserve">
          <source>The following options define the type of project to be built.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e96782d5732ddc4f94ca5a2e38971c51674dc0" translate="yes" xml:space="preserve">
          <source>The following options take an effect only on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f9e1a0fb9af7736ef00aa7d57585f20ef65af7e" translate="yes" xml:space="preserve">
          <source>The following options take an effect only on Linux/Unix platforms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab0f36260c2d501385f1ed3509885c107f0ee3b5" translate="yes" xml:space="preserve">
          <source>The following pages contain information about setting up Qt Creator and how to get started with the mobile platforms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb668a26fed996ee065c637306d790bd03f63eb5" translate="yes" xml:space="preserve">
          <source>The following pages contain more information about QML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc03969e83dddfd41e37a9813827ee00b82f431" translate="yes" xml:space="preserve">
          <source>The following pages provide guidelines on how to configure Qt for specific platform development:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae61d400f3036984f0adbb4379465973ba4286c" translate="yes" xml:space="preserve">
          <source>The following pages provide more information about Qt's core features:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79ca8636f19f6cbebe8b12de8b9a444f6c73ce2" translate="yes" xml:space="preserve">
          <source>The following pages show how to develop Qt applications using &lt;a href=&quot;http://doc.qt.io/qtcreator/index.html&quot;&gt;Qt Creator&lt;/a&gt; and Qt Quick. The pages demonstrate various steps such as use cases and introductory material. For more information about Qt Quick Applications and related modules, visit the &lt;a href=&quot;qmlapplications&quot;&gt;QML Applications&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6dd879832d51d5371080493c2cc732a3038b14" translate="yes" xml:space="preserve">
          <source>The following parameter is available for &lt;code&gt;-platform cocoa&lt;/code&gt; (on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aba8f2f652450b6b70c2180a9f0f86cbcb38a56" translate="yes" xml:space="preserve">
          <source>The following parameters are available for &lt;code&gt;-platform windows&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c0ca6b005d6c63318aaf9ca226d0ac29838ac1" translate="yes" xml:space="preserve">
          <source>The following parameters are for creating a QHP file (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dedfe801606812dd1813cd156cd9ab8c343d4fe" translate="yes" xml:space="preserve">
          <source>The following platforms are supported in Qt 5.13. For support information for prior Qt releases, please consult the relevant version in the &lt;a href=&quot;http://doc.qt.io/archives/&quot;&gt;Qt Documentation Archives&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023412a21ebc2efa75dba7b5a4900f759e2b93b4" translate="yes" xml:space="preserve">
          <source>The following properties are also available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7593412ed195effa3c1c69d10b33bcd500faae65" translate="yes" xml:space="preserve">
          <source>The following properties are available in the context of each delegate:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ee4dfcb65d69091f93e6ae50d7fc373037c229" translate="yes" xml:space="preserve">
          <source>The following properties are available on Google Play:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056df19a16af6f342ef1225b1b3c2fd9426f8c69" translate="yes" xml:space="preserve">
          <source>The following properties are available to the item:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40a67009e386dae82032c1d73eb19b760927127" translate="yes" xml:space="preserve">
          <source>The following properties can be overridden by using &lt;a href=&quot;qabstract3dseries&quot;&gt;QAbstract3DSeries&lt;/a&gt; properties to set them explicitly in the series: &lt;a href=&quot;q3dtheme#baseColors-prop&quot;&gt;baseColors&lt;/a&gt;, &lt;a href=&quot;q3dtheme#baseGradients-prop&quot;&gt;baseGradients&lt;/a&gt;, and &lt;a href=&quot;q3dtheme#colorStyle-prop&quot;&gt;colorStyle&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f911dfa2198eaa58ab62ff05c2c2a33865e8a7" translate="yes" xml:space="preserve">
          <source>The following properties can be overridden by using &lt;a href=&quot;qml-qtdatavisualization-abstract3dseries&quot;&gt;Abstract3DSeries&lt;/a&gt; properties to set them explicitly in the series: &lt;a href=&quot;qml-qtdatavisualization-theme3d#baseColors-prop&quot;&gt;baseColors&lt;/a&gt;, &lt;a href=&quot;qml-qtdatavisualization-theme3d#baseGradients-prop&quot;&gt;baseGradients&lt;/a&gt;, and &lt;a href=&quot;qml-qtdatavisualization-theme3d#colorStyle-prop&quot;&gt;colorStyle&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fff18855976e253315b6076f712b9129fcb3fc3" translate="yes" xml:space="preserve">
          <source>The following properties of the item are used in the mapping: &lt;a href=&quot;qml-qtquick-item#x-prop&quot;&gt;x&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#y-prop&quot;&gt;y&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#scale-prop&quot;&gt;scale&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#rotation-prop&quot;&gt;rotation&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#transformOrigin-prop&quot;&gt;transformOrigin&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-item#transform-prop&quot;&gt;transform&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5420ecbaba8e2c01df4bd5f7ad675edb2e487ce3" translate="yes" xml:space="preserve">
          <source>The following properties of the item are used in the mapping: &lt;a href=&quot;qquickitem#x-prop&quot;&gt;x&lt;/a&gt;, &lt;a href=&quot;qquickitem#y-prop&quot;&gt;y&lt;/a&gt;, &lt;a href=&quot;qquickitem#scale-prop&quot;&gt;scale&lt;/a&gt;, &lt;a href=&quot;qquickitem#rotation-prop&quot;&gt;rotation&lt;/a&gt;, &lt;a href=&quot;qquickitem#transformOrigin-prop&quot;&gt;transformOrigin&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-item#transform-prop&quot;&gt;transform&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7edc66af4c0d5a1b8b9f90d6d7a31bc371e18f" translate="yes" xml:space="preserve">
          <source>The following property keys are guaranteed to be specified on all platforms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8526c31f4091eb4818a1c1ee5e5d3b1257e8484c" translate="yes" xml:space="preserve">
          <source>The following pseudo-states are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ba7d11cb6cdc503c7db080f25620ebc41e357a" translate="yes" xml:space="preserve">
          <source>The following read-only properties are available within the scope of the menu button delegate:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68429ef49c89432bbd4c04f3fb9da4be31bd0b00" translate="yes" xml:space="preserve">
          <source>The following read-only property is available within the scope of the background delegate:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de855448328b5e9f80cc8ce9168a701f985757d7" translate="yes" xml:space="preserve">
          <source>The following rules apply:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4798dff023274ac5c6cbef61c28b3d57736dafec" translate="yes" xml:space="preserve">
          <source>The following sample QML application loads a web page using the &lt;code&gt;url&lt;/code&gt; property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e287b03ea22661ea74f378588351216194acc0" translate="yes" xml:space="preserve">
          <source>The following sections describe how to resolve this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea21ced414504146ec7747ff86ead99587d939b3" translate="yes" xml:space="preserve">
          <source>The following sections describe the different types of elements used in project files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c51898f64e447bbdb32249bfddc67ae9240d0071" translate="yes" xml:space="preserve">
          <source>The following sections describe various aspects of internationalizing your QML source code. If you follow these guides for all the user interface components in your application, it becomes possible to localize every aspect of your application for different languages and local cultural conventions such as the way dates and numbers are formatted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bbff801e6f7038c401e678badbe43f46a593af4" translate="yes" xml:space="preserve">
          <source>The following sections explain how to use the model/view pattern in Qt. Each section includes an example and is followed by a section showing how to create new components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e4a8ca9aa31feed5e566fd633480c02c2277b8" translate="yes" xml:space="preserve">
          <source>The following sections explain these differences in detail and demonstrate how to use the features unique to each connection syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf032c8514c346c1a3565e2cf02b6b7a23ad4b7" translate="yes" xml:space="preserve">
          <source>The following sections list the widget classes. See the &lt;a href=&quot;gallery#&quot;&gt;Qt Widget Gallery&lt;/a&gt; for some examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5411e846ad5b35a48b7ce66058ce1fa3b1cdb1f" translate="yes" xml:space="preserve">
          <source>The following sections offer guidelines for choosing the appropriate type of navigation model, depending on the use case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b149a13b277d1478e56780c9f716344c8721dd49" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qgeoaddress&quot;&gt;QGeoAddress&lt;/a&gt; object from C++:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a27d5cd6b77e5d7267315bcd5eb92178f195946" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt; object from C++:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f32217409092a951b111b9dfa0283f8bb1ede3" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt; object from C++:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860207d3665a82ac1cf75ab6a90b24e65fa7f758" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplaceattribute&quot;&gt;QPlaceAttribute&lt;/a&gt; object from C++:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73443179f2b5c9d8b2dbf7565ddc9e1fc172c1a2" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplacecategory&quot;&gt;QPlaceCategory&lt;/a&gt; object from C++:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e2d0d71923b1991fd67e6e5a506e566182b68d8" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplacecontactdetail&quot;&gt;QPlaceContactDetail&lt;/a&gt; object from C++:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57266419c3d3af81c0348405f6a2d39f1e03aefe" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplaceicon&quot;&gt;QPlaceIcon&lt;/a&gt; object from C++:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb91bbac43aa890050c9d6643b2547055d01063" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplaceratings&quot;&gt;QPlaceRatings&lt;/a&gt; object from C++:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9b409d1a4f0e83987db463f64d4e75ea56f726" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplacesupplier&quot;&gt;QPlaceSupplier&lt;/a&gt; object from C++:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0c843d7259f10ffaecf4ddf3e83be44b5e89db" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplaceuser&quot;&gt;QPlaceUser&lt;/a&gt; object from C++:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0aba57151c1e1af046232b1181eee17abe83e6" translate="yes" xml:space="preserve">
          <source>The following shell command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aca8ddf2900e7c2667d617a2f2c53d12d280810" translate="yes" xml:space="preserve">
          <source>The following shortcuts can be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a0fc582833a6e6f7de1b6a81cee559545dd8cc" translate="yes" xml:space="preserve">
          <source>The following shows how to save a category</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57a11345ca7babf5268543524755c1bf982c1fe" translate="yes" xml:space="preserve">
          <source>The following snipped shows an incomplete example of creating a &lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt; object and setting it as the value of a &lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel&lt;/a&gt;'s &lt;a href=&quot;qml-qtlocation-routemodel#query-prop&quot;&gt;query&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a916330a94cc6c6e7a2c25a693a3f223ca1907ce" translate="yes" xml:space="preserve">
          <source>The following snippet defines a simple fade transition for push and pop operations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18aeb64847b50144c4541bee35fba74c4ba2285" translate="yes" xml:space="preserve">
          <source>The following snippet demonstrates a simple use case, where the &lt;code&gt;mainView&lt;/code&gt; is pushed onto and popped out of the stack on relevant button click:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc7a0d4aee8502dc24abbf4b840641d689b2daf" translate="yes" xml:space="preserve">
          <source>The following snippet demonstrates examples of models written in QML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5931c5930e18c2882738e1deea1850c25d8a036b" translate="yes" xml:space="preserve">
          <source>The following snippet demonstrates the use of this macro:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a076206a61a8fc14356492da299fd0d27d5b3791" translate="yes" xml:space="preserve">
          <source>The following snippet gets the current date and time with Date(), then converts that to a string for the current locale. Then it inserts the date string into the %1 parameter for the appropriate translation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cde8954c9f793924bc4360672532c6c9039bdb1" translate="yes" xml:space="preserve">
          <source>The following snippet illustrates how lists of values are assigned to variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4be141a377308f6f84d25617cc6426895dadd13" translate="yes" xml:space="preserve">
          <source>The following snippet is two-part, showing firstly the declaration of objects, and secondly a short piece of procedural code using it. We set the geocodeModel's &lt;a href=&quot;qml-qtlocation-geocodemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; property to false, and call &lt;a href=&quot;qml-qtlocation-geocodemodel#update-method&quot;&gt;update&lt;/a&gt; once the query is set up. In this case, as we use a string value in &lt;a href=&quot;qml-qtlocation-geocodemodel#query-prop&quot;&gt;query&lt;/a&gt;, only one update would occur, even with &lt;a href=&quot;qml-qtlocation-geocodemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; enabled. However, if we provided an &lt;a href=&quot;qml-qtpositioning-address&quot;&gt;Address&lt;/a&gt; object we may inadvertently trigger multiple requests whilst setting its properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44660fed07f37ab0fb12cc83c1f94aa2d3ba5dce" translate="yes" xml:space="preserve">
          <source>The following snippet is two-part, showing firstly the declaration of objects, and secondly a short piece of procedural code using it. We set the routeModel's &lt;a href=&quot;qml-qtlocation-routemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; property to false, and call &lt;a href=&quot;qml-qtlocation-routemodel#update-method&quot;&gt;update&lt;/a&gt; once the query is set up, to avoid useless extra requests halfway through the set up of the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025f4bf8487b92f3116453d64664448fd6fdb081" translate="yes" xml:space="preserve">
          <source>The following snippet presents the default implementation of the item delegate. It can be used as a starting point for implementing custom delegates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e61df55086824eba8e08457659f60ae8d21eaf" translate="yes" xml:space="preserve">
          <source>The following snippet provides an example of saving a place to a different plugin using the &lt;a href=&quot;qml-qtlocation-place#copyFrom-method&quot;&gt;copyFrom&lt;/a&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9041bd7a16a3ad2867825371f7c701f96b401143" translate="yes" xml:space="preserve">
          <source>The following snippet shows a &lt;a href=&quot;qml-qtlocation-mappolygon&quot;&gt;MapPolygon&lt;/a&gt; being used to display a triangle, with three vertices near Brisbane, Australia. The triangle is filled in green, with a 1 pixel black border.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad9f1826f082116687b3a7a8cac15a23c6bd711" translate="yes" xml:space="preserve">
          <source>The following snippet shows a &lt;a href=&quot;qml-qtlocation-mappolyline&quot;&gt;MapPolyline&lt;/a&gt; with 4 points, making a shape like the top part of a &quot;question mark&quot; (?), near Brisbane, Australia. The line drawn is 3 pixels in width and green in color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93eecf6fd6680ffcbbeda83a378c9bcfefcd9552" translate="yes" xml:space="preserve">
          <source>The following snippet shows a &lt;a href=&quot;qml-qtlocation-mapquickitem&quot;&gt;MapQuickItem&lt;/a&gt; containing an Image object, to display a Marker on the Map. This strategy is used to show the map markers in the MapViewer example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9354e1008e6140ad6e99fac68f913f5ce3c5f2" translate="yes" xml:space="preserve">
          <source>The following snippet shows a Plugin object being created with the &lt;a href=&quot;qml-qtlocation-plugin#required-prop&quot;&gt;required&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-plugin#preferred-prop&quot;&gt;preferred&lt;/a&gt; properties set. This Plugin will attach to the first found plugin that supports both mapping and geocoding, and will prefer plugins named &quot;here&quot; or &quot;osm&quot; to any others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f54e73fe44abab39f4fca6299a2a30525275919" translate="yes" xml:space="preserve">
          <source>The following snippet shows a map containing a &lt;a href=&quot;qml-qtlocation-mapcircle&quot;&gt;MapCircle&lt;/a&gt;, centered at the coordinate (-27, 153) with a radius of 5km. The circle is filled in green, with a 3 pixel black border.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccccf95bab1d2b9eb9e35fde1c127783ac76d52c" translate="yes" xml:space="preserve">
          <source>The following snippet shows a map containing a &lt;a href=&quot;qml-qtlocation-maprectangle&quot;&gt;MapRectangle&lt;/a&gt;, spanning from (-27, 153) to (-28, 153.5), near Brisbane, Australia. The rectangle is filled in green, with a 2 pixel black border.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd054b64debeb6b8b39fb42c0e3b242d85ac1b29" translate="yes" xml:space="preserve">
          <source>The following snippet shows a simple Map and the necessary Plugin type to use it. The map is centered over Oslo, Norway, with zoom level 14.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b293771eecb4dc88d31a2937e98eb6dd002151" translate="yes" xml:space="preserve">
          <source>The following snippet shows a state machine that will finish when a button is clicked:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854f0d3d7f4fbf1f010ca33c712d0486475de3bf" translate="yes" xml:space="preserve">
          <source>The following snippet shows how a Map using this plugin can be added as an overlay to display anti-aliased map items. Note that for such an overlay Map to be transparent, it is also necessary to set its color to a transparent one, such as &lt;b&gt;transparent&lt;/b&gt;, like in the example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b425fbeff2ffcde3322c05c3146a68aaa5215971" translate="yes" xml:space="preserve">
          <source>The following snippet shows how a server application may check for errors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d869523b75264f126ced28de460fee4992b94525" translate="yes" xml:space="preserve">
          <source>The following snippet shows how an item can be dragged with a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt;. However, dragging is not limited to mouse drags; anything that can move an item can generate drag events, including touch events, animations and bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="417f40d6c4995a199855cef1bcaae2e8c7bcefba" translate="yes" xml:space="preserve">
          <source>The following snippet shows how these properties are used to display an image that is larger than the Flickable item itself:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cc16f6a4dc093d09b7671b1668cc383281c0c4" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to grab an item and store the results to a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6687b2cd6b79c802464f98cf071b1ea28f904650" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to grab an item and use the results in another image element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a025f3b01137a984da3ddb06c8101f95002fb7" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a &lt;a href=&quot;qml-qtlocation-mapitemgroup&quot;&gt;MapItemGroup&lt;/a&gt; to create a &lt;a href=&quot;qml-qtlocation-mapcircle&quot;&gt;MapCircle&lt;/a&gt;, centered at the coordinate (63, -18) with a radius of 100km, filled in red, surrounded by an ondulated green border, both contained in a semitransparent blue circle with a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; that moves the whole group. This group is defined in a separate file named PolygonGroup.qml:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712064e484b40bf353f13bfdbd187a01d38b54ec" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a &lt;a href=&quot;qml-qtquick-opacityanimator&quot;&gt;OpacityAnimator&lt;/a&gt; together with a Rectangle item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63016c0f83dd6a80f767adf3dd1f83f86c3222b" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a &lt;a href=&quot;qml-qtquick-rotationanimator&quot;&gt;RotationAnimator&lt;/a&gt; together with a Rectangle item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c5e22e0f647686f1ee2fcb3b7c2975abf99537" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a &lt;a href=&quot;qml-qtquick-scaleanimator&quot;&gt;ScaleAnimator&lt;/a&gt; together with a Rectangle item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36a9d6738e750f21047dcf447ffa54c9243f8d1" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a &lt;a href=&quot;qml-qtquick-uniformanimator&quot;&gt;UniformAnimator&lt;/a&gt; together with a &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec1b765a4616a15ff772ca5db3521774bd7099b" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a &lt;a href=&quot;qml-qtquick-xanimator&quot;&gt;XAnimator&lt;/a&gt; together with a Rectangle item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="291f9b98999a43d5ba68cd8e6688a6bb24ea5628" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a &lt;a href=&quot;qml-qtquick-yanimator&quot;&gt;YAnimator&lt;/a&gt; together with a Rectangle item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237678c2415e59c68a7f105f2220e645f6ce8cbd" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use the &lt;a href=&quot;qml-qtquick-controls-busyindicator&quot;&gt;BusyIndicator&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc21df83bdd0e5465a5eec3b1bda7518e667d1a" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use the &lt;a href=&quot;qml-qtquick-controls2-busyindicator&quot;&gt;BusyIndicator&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ca60418911884a52454d93829caaf3df7146b2" translate="yes" xml:space="preserve">
          <source>The following snippet shows the code needed to create such a state machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c368a3a285bfd83ec62f4f68aaf44a205ca2d6b2" translate="yes" xml:space="preserve">
          <source>The following snippet shows the code needed to create such a state machine. First, we create the state machine and states:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637489a5b59118fc5e4c20e6a79e2d04d364181c" translate="yes" xml:space="preserve">
          <source>The following snippet uses the &lt;code&gt;icon&lt;/code&gt; property to build an &lt;code&gt;Image&lt;/code&gt; component:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ece4dfe211dcce2e091158459a22b7facd86691" translate="yes" xml:space="preserve">
          <source>The following snippets present examples where the default style's controls have been customized using the same approach as the &lt;a href=&quot;#customizing-a-control&quot;&gt;Customizing a Control&lt;/a&gt; section. The code can be used as a starting point to implement a custom look and feel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d756c1386ff5f7f8fb8e7bf197a6e9c59a0ac51" translate="yes" xml:space="preserve">
          <source>The following standard command line options are available for X11:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23e350fc1a2df19479b259ced3c5e2e8d588b0a" translate="yes" xml:space="preserve">
          <source>The following statements instantiate the &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; object and pass it to the host to enable &quot;remoting&quot;, that is, making the object visible to the QtRO network:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc560fac41804f818b01f0688c02f54fa0bcb15" translate="yes" xml:space="preserve">
          <source>The following status values are possible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73be85388fa38b446830d119242ce2226598da39" translate="yes" xml:space="preserve">
          <source>The following strategies are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda8d5ba303fe4745d9707b7def03e544d49f9bf" translate="yes" xml:space="preserve">
          <source>The following subclasses are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057a20ccdfbfc72915814382f1bb10af83bebbe4" translate="yes" xml:space="preserve">
          <source>The following subcontrols are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a96fd586f854eb2ab13be7aff194e4624cf96c5" translate="yes" xml:space="preserve">
          <source>The following table describes how to choose between &lt;a href=&quot;qtglobal#qgetenv&quot;&gt;qgetenv&lt;/a&gt;() and &lt;a href=&quot;qtglobal#qEnvironmentVariable&quot;&gt;qEnvironmentVariable&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f90ba20ae6f53886ebf8f408106e3b048e909c" translate="yes" xml:space="preserve">
          <source>The following table explains how each handle will be resized depending on the orientation of the split view:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e542c42bb2038dd0a9dafd9f5a0126d8053c505" translate="yes" xml:space="preserve">
          <source>The following table explains what the default attribute codes are, the &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; types associated, the default value if said attribute is missing and whether it's used in requests or replies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4979bb341572bd08f16075ffbfd7964122236d" translate="yes" xml:space="preserve">
          <source>The following table gives an overview of the functionality provided by the &lt;a href=&quot;qplacemanager&quot;&gt;QPlaceManager&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb677b7da81b1a5856d300222c4a8d95a9c4193" translate="yes" xml:space="preserve">
          <source>The following table gives examples of paths on different operating systems. The first path is the writable path (unless noted). Other, additional paths, if any, represent non-writable locations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b170fa7c9802b991b9960baba26906a4a09952" translate="yes" xml:space="preserve">
          <source>The following table lists examples of assets (taken from the default Imagine style assets) for all controls. The list is not exhaustive, as not all elements need assets, but it can be used as a guide when creating your own assets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1578ec4d96e4a08ca7cf2ac4533dcdc274495dd9" translate="yes" xml:space="preserve">
          <source>The following table lists mandatory parameters that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c627caa6b97612dacc60351586ea54e554b89ee" translate="yes" xml:space="preserve">
          <source>The following table lists optional parameters that can be passed to the HERE plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296e450288f841cce8ebf769c338f7652df2200d" translate="yes" xml:space="preserve">
          <source>The following table lists optional parameters that can be passed to the Mapbox plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b0d73aa76f6f9902967395af555554e0ff4f5d" translate="yes" xml:space="preserve">
          <source>The following table lists optional parameters that can be passed to the Open Street Map plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788423691076b7c0b3103e5ee3c1de2f7b396b45" translate="yes" xml:space="preserve">
          <source>The following table lists some frequently used variables and describes their contents. For a full list of variables and their descriptions, see &lt;a href=&quot;qmake-variable-reference#&quot;&gt;Variables&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637f93170f3a9482803eef8e3379986a8b326751" translate="yes" xml:space="preserve">
          <source>The following table lists the CBOR features that &lt;a href=&quot;qcborstreamreader&quot;&gt;QCborStreamReader&lt;/a&gt; supports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0232e9fffe997cb4280ca68b0b13fd4ff4d1c28d" translate="yes" xml:space="preserve">
          <source>The following table lists the CBOR features that &lt;a href=&quot;qcborstreamwriter&quot;&gt;QCborStreamWriter&lt;/a&gt; supports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308338146abb9454864e4dde8fe6ad75a67eebd5" translate="yes" xml:space="preserve">
          <source>The following table lists the CBOR features that &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; supports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0fe0103e0418c895309529c0f30bdde950e2b49" translate="yes" xml:space="preserve">
          <source>The following table lists the CSS properties supported by Qt's &lt;a href=&quot;richtext#&quot;&gt;rich text&lt;/a&gt; engine:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f4ce3ffac9b4663b61f33fe4a15a8222316f9b" translate="yes" xml:space="preserve">
          <source>The following table lists the HTML tags supported by Qt's &lt;a href=&quot;richtext#&quot;&gt;rich text&lt;/a&gt; engine:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7c84fa5f826ad4fec8e59af4c7259675c78691" translate="yes" xml:space="preserve">
          <source>The following table lists the Qt widgets that can be customized using style sheets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7c5c4f1343821f8692f187e33865e1f0619e97" translate="yes" xml:space="preserve">
          <source>The following table lists the available &lt;a href=&quot;http://www.w3.org/TR/SVG/types.html#ColorKeywords&quot;&gt;SVG colors&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567c949df61caa81f10b5bc0b08162626a8b38c6" translate="yes" xml:space="preserve">
          <source>The following table lists the command-line options recognized by &lt;code&gt;uic&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca2baecfd51112166c32210cce014eaad08f9990" translate="yes" xml:space="preserve">
          <source>The following table lists the conversion this function will apply:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da257bb3e1f2dce2ee14c75b42407882ce930fa" translate="yes" xml:space="preserve">
          <source>The following table lists the mapping of JSON types to CBOR types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c0084c7e7e143ef61a6afd80cab5ed42e1cc45" translate="yes" xml:space="preserve">
          <source>The following table lists the mapping performed between &lt;a href=&quot;qcborvalue#Type-enum&quot;&gt;QCborValue types&lt;/a&gt; and &lt;a href=&quot;qmetatype#Type-enum&quot;&gt;Qt meta types&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e4a3fdecad311a1cfac6720a9b6eccfd0c8365b" translate="yes" xml:space="preserve">
          <source>The following table lists the properties controlled by themes and the default values for &lt;a href=&quot;q3dtheme#Theme-enum&quot;&gt;Theme3D.ThemeUserDefined&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b4c64c4085845acf52ecfdb9140fe7407e0333" translate="yes" xml:space="preserve">
          <source>The following table lists the properties controlled by themes and the default values for &lt;a href=&quot;q3dtheme#Theme-enum&quot;&gt;ThemeUserDefined&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ce62c3dab32b047b48a9e3c2a681db8e77c3b9" translate="yes" xml:space="preserve">
          <source>The following table lists values that can be used to configure the &lt;a href=&quot;qtquickcontrols2-imagine#&quot;&gt;Imagine style&lt;/a&gt; in an &lt;code&gt;Imagine&lt;/code&gt; section of the configuration file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="410edc91172074e291a8120c56f45b1e4aaf902c" translate="yes" xml:space="preserve">
          <source>The following table lists values that can be used to configure the &lt;a href=&quot;qtquickcontrols2-material#&quot;&gt;Material style&lt;/a&gt; in a &lt;code&gt;Material&lt;/code&gt; section of the configuration file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a0ec35d37c15ab8940e0ae4a809d581531fb45" translate="yes" xml:space="preserve">
          <source>The following table lists values that can be used to configure the &lt;a href=&quot;qtquickcontrols2-universal#&quot;&gt;Universal style&lt;/a&gt; in a &lt;code&gt;Universal&lt;/code&gt; section of the configuration file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c572c44c98d67fec56b617df3b7699e60f8701c4" translate="yes" xml:space="preserve">
          <source>The following table lists which elements are supported for each control, along with the possible states for that element, and the file extension that it expects. An element is an image that represents a certain visual part of the control. For example, &lt;code&gt;Button&lt;/code&gt;'s &lt;code&gt;&quot;background&quot;&lt;/code&gt; element represents its &lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;background&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22baee913eabf5fb3c81c02ff2a442feb273d5a1" translate="yes" xml:space="preserve">
          <source>The following table provides links to more detailed information on sections of the Qt Location C++ API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5d386f6b62b05da5c220df70d0a345634b2eed" translate="yes" xml:space="preserve">
          <source>The following table shows which class and function are responsible for printing from a selection of different widgets. For widgets that do not expose printing functionality directly, the content handling classes containing this functionality can be obtained via a function in the corresponding widget's API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cfd1e298fa6acb8f23478ac189c00bf5c25aac3" translate="yes" xml:space="preserve">
          <source>The following table summarizes the &lt;a href=&quot;qlistiterator&quot;&gt;QListIterator&lt;/a&gt; API:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281c9ab04eb6f1f40aa7f48341b24ae13e7f4678" translate="yes" xml:space="preserve">
          <source>The following table summarizes the STL-style iterators' API:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d29f64a9ad6ce8cf47b1315849008df5bf9fc911" translate="yes" xml:space="preserve">
          <source>The following table summarizes the algorithmic complexity of Qt's associative containers and sets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd49aec97ed38f2041e59e13e5a27ccb302b781a" translate="yes" xml:space="preserve">
          <source>The following table summarizes the algorithmic complexity of Qt's sequential container classes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36eed4145ee5a2b0d2bc0300a09f8b664db55fa0" translate="yes" xml:space="preserve">
          <source>The following table summarizes the platform plugins available for QPA:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519558fa67924f470afa0b1daf547246d9cf5e50" translate="yes" xml:space="preserve">
          <source>The following table summarizes the plugin base classes. Some of the classes are private, and are therefore not documented. You can use them, but there is no compatibility promise with later Qt versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13fa5fd99f165f3246925ba8ab1ab69811b3d58" translate="yes" xml:space="preserve">
          <source>The following table summarizes the syntax and meaning of the different property types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c79773c06aee7b0ae1108e4578659031fdd559f" translate="yes" xml:space="preserve">
          <source>The following table summarizes the types of projects available and describes the files that qmake will generate for each of them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e9679e8f13195ca97bc1052cdee8a6e6e0ff74" translate="yes" xml:space="preserve">
          <source>The following tables list known incoming options as well as accepted outgoing options. The list of incoming options is not exhaustive, since servers may include additional information at any time. The list of outgoing options is exhaustive, however, and no unknown options will be treated or sent back to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c2291bbddd9030c243f4b2fc980d16ca2b41cf9" translate="yes" xml:space="preserve">
          <source>The following tags are interpreted by &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; during decoding and will produce objects with extended Qt types, and it will use those tags when encoding the same extended types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07a6f876bf38eb3a8fe285fa86c6c754f5b538c" translate="yes" xml:space="preserve">
          <source>The following terms are used to distinguish the parts of names within the context of namespaces:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7ebce45ecb6c0a88cc595105ded86622cb04da" translate="yes" xml:space="preserve">
          <source>The following third-party libraries may be used when running Qt 5 applications on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd39c0d106b700ec332870ad98c419cb7ba8a92" translate="yes" xml:space="preserve">
          <source>The following tools enable Qt integration with the ActiveX components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c8d0467f5093c0bdf5fd5c9d04bfb37acff237" translate="yes" xml:space="preserve">
          <source>The following topics provide more details about Qt for iOS:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6c61efe7a7060e2d07b2db3439cee6e071139c" translate="yes" xml:space="preserve">
          <source>The following topics provide more details about how to use Qt for Android:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae77b74814654642862b64ee0a23e57aa1d45eb" translate="yes" xml:space="preserve">
          <source>The following tutorials show how a QML-based application can be combined with C++ code using the &lt;a href=&quot;qtqml-index&quot;&gt;Qt QML&lt;/a&gt; module. For information about extending QML, visit the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-cppintegration-topic.html&quot;&gt;Integrating QML and C++&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39c46003c16ad92860c4159ea033312158a480b" translate="yes" xml:space="preserve">
          <source>The following two examples show how to create a HERE plugin instance with parameters supplied for an application id and token, which is required for authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7e5d228c3fe53ef1004f6850718e4e2f21da9e" translate="yes" xml:space="preserve">
          <source>The following types are simple types and this function will return the listed values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92316d6703008fd2194fe0f7cefb7ee0167b1afe" translate="yes" xml:space="preserve">
          <source>The following value is only useful when calling &lt;a href=&quot;qwizard#setButtonLayout&quot;&gt;setButtonLayout&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3d657da06d446672eef2e43ba81e5861d08dc7" translate="yes" xml:space="preserve">
          <source>The following values are currently known:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c5b83cfae8b9e925d7e942652765de18df0d4d" translate="yes" xml:space="preserve">
          <source>The following values are deprecated or obsolete:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90117118a4d745bd607fea0d80360aff9b3506ae" translate="yes" xml:space="preserve">
          <source>The following values are obsolete:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2936d5adb9e240b503a66e2c87b97599cd38ff58" translate="yes" xml:space="preserve">
          <source>The following values are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36c1e2f853731708e7f9d631bb68af1a0125fbf" translate="yes" xml:space="preserve">
          <source>The following values are used for custom controls:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beb5ff224417421e0b6dc3e4fdb5dbb1705575b8" translate="yes" xml:space="preserve">
          <source>The following values can be specified in a &lt;code&gt;Controls&lt;/code&gt; section of the configuration file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69b636a3426e1d9c588f4ff211b1bba02c5cc3e" translate="yes" xml:space="preserve">
          <source>The following variables can be used to redefine common file extensions recognized by qmake:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b19cb3abeae1ddee9d1c3a0e72c732dfa39427" translate="yes" xml:space="preserve">
          <source>The following virtual functions may need to be reimplemented in order to tailor the look and feel or store extra data with each tab:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a6f49bd5a2954787e7162e958ca315fc9ef9ab" translate="yes" xml:space="preserve">
          <source>The following visualization type specific inherited classes are used instead of the base class: &lt;a href=&quot;qbardataproxy&quot;&gt;QBarDataProxy&lt;/a&gt;, &lt;a href=&quot;qscatterdataproxy&quot;&gt;QScatterDataProxy&lt;/a&gt;, and &lt;a href=&quot;qsurfacedataproxy&quot;&gt;QSurfaceDataProxy&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27adb412bc5dbc9e3b3d930d97e3db5fc56596c6" translate="yes" xml:space="preserve">
          <source>The font family.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd3e8e2115873636013e265df86a0b320959cc4" translate="yes" xml:space="preserve">
          <source>The font info object holds the information for the font that is passed in the constructor at the time it is created, and is not updated if the font's attributes are changed later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40057f3557a21ff5bad6c521f227c0d59e50d0f" translate="yes" xml:space="preserve">
          <source>The font is dirty and needs to be updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d85e52c3610543c3a22a9cc4bf8b42f5c9b154" translate="yes" xml:space="preserve">
          <source>The font matching algorithm works as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c7e897b5467cf391e575b2119486c5f3c1c596" translate="yes" xml:space="preserve">
          <source>The font metrics object holds the information for the font that is passed in the constructor at the time it is created, and is not updated if the font's attributes are changed later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc43aad823a3ea0b8db4a63a4797c233eb130a26" translate="yes" xml:space="preserve">
          <source>The font metrics will be compatible with the paintdevice passed. If the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15a1cf89284c3c02f6baf205fe36c03be800c61" translate="yes" xml:space="preserve">
          <source>The font metrics will be compatible with the paintdevice used to create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52597303c029f6704decc5a8c9b44962b6e5f589" translate="yes" xml:space="preserve">
          <source>The font must be screen-compatible, i.e. a font you use when drawing text in &lt;a href=&quot;qwidget&quot;&gt;widgets&lt;/a&gt; or &lt;a href=&quot;qpixmap&quot;&gt;pixmaps&lt;/a&gt;, not &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt; or QPrinter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9834c5f5091001c27f24fb863c66dd1f10b66fb1" translate="yes" xml:space="preserve">
          <source>The font of the &lt;a href=&quot;qml-qtquick-controls-textarea&quot;&gt;TextArea&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af2f410d11cdd45bcdc98d5d6afb7d486351b4d" translate="yes" xml:space="preserve">
          <source>The font of the axis labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd99fd5db005e316efe58f3ef8adabab36027ce" translate="yes" xml:space="preserve">
          <source>The font of the control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9fed71c31d718e7fc05fe6fd1b088035bf806a" translate="yes" xml:space="preserve">
          <source>The font of the markers used by the legend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422fb5379fc73747b9d3f85c4732bee736c28db9" translate="yes" xml:space="preserve">
          <source>The font of the title of the axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8816fd7612759b55be52ebda2f784a88b689ebce" translate="yes" xml:space="preserve">
          <source>The font property is used to render the text set on the &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt;. The font will can be considered a hint as it will not be consulted in all cases based upon application and style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28feec6315458605d533205ac46f97e4f84694c3" translate="yes" xml:space="preserve">
          <source>The font size of fitted text has a minimum bound specified by the &lt;a href=&quot;qml-qtquick-text#minimumPointSize-prop&quot;&gt;minimumPointSize&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-text#minimumPixelSize-prop&quot;&gt;minimumPixelSize&lt;/a&gt; property and maximum bound specified by either the &lt;a href=&quot;qml-qtquick-text#font.pointSize-prop&quot;&gt;font.pointSize&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-text#font.pixelSize-prop&quot;&gt;font.pixelSize&lt;/a&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4081ea27b19d427c376ac51369aa16b4d184e31" translate="yes" xml:space="preserve">
          <source>The font size. In this version of Qt, only pt and px metrics are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0586f0ce2fbd5a870e42d965adef30cf8a65cca" translate="yes" xml:space="preserve">
          <source>The font style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdab6510f71136564862d1ce762015d732c11de8" translate="yes" xml:space="preserve">
          <source>The font to be used for the label. Defaults to &lt;code&gt;Font {family: &quot;Arial&quot;; pointSize: 20}&lt;/code&gt;. Special formatting (for example, outlined) is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ce3be0a8a86adc3f1d5ca73edf85ebdfde830f" translate="yes" xml:space="preserve">
          <source>The font to use for the tickmark text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f15fea3c8f912c0ae6d057aa4bc342ff287d93" translate="yes" xml:space="preserve">
          <source>The font used can be set by supplying a font to the &lt;a href=&quot;qtextcharformat#setFont&quot;&gt;setFont&lt;/a&gt;() function, and each aspect of its appearance can be adjusted to give the desired effect. &lt;a href=&quot;qtextcharformat#setFontFamily&quot;&gt;setFontFamily&lt;/a&gt;() and &lt;a href=&quot;qtextcharformat#setFontPointSize&quot;&gt;setFontPointSize&lt;/a&gt;() define the font's family (e.g. Times) and printed size; &lt;a href=&quot;qtextcharformat#setFontWeight&quot;&gt;setFontWeight&lt;/a&gt;() and &lt;a href=&quot;qtextcharformat#setFontItalic&quot;&gt;setFontItalic&lt;/a&gt;() provide control over the style of the font. &lt;a href=&quot;qtextcharformat#setFontUnderline&quot;&gt;setFontUnderline&lt;/a&gt;(), &lt;a href=&quot;qtextcharformat#setFontOverline&quot;&gt;setFontOverline&lt;/a&gt;(), &lt;a href=&quot;qtextcharformat#setFontStrikeOut&quot;&gt;setFontStrikeOut&lt;/a&gt;(), and &lt;a href=&quot;qtextcharformat#setFontFixedPitch&quot;&gt;setFontFixedPitch&lt;/a&gt;() provide additional effects for text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ee2cfbda788addba287c68dbc11f4ce4d1930e" translate="yes" xml:space="preserve">
          <source>The font used for data point labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4875c23eb26fda940a4d500a8b0efb00187a02b1" translate="yes" xml:space="preserve">
          <source>The font used for items rendered with the default delegate. (&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab8746046062a9f91817d5ea66e05bf642b5430" translate="yes" xml:space="preserve">
          <source>The font used for the slice label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a23ca5a9166af77aaccc137537b92d9ee4825ac" translate="yes" xml:space="preserve">
          <source>The font used to draw the bar set's label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2083a6bf2a27fa87b22294cfc05310ffb8ffa8" translate="yes" xml:space="preserve">
          <source>The font which the user selected and accepted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf8dfb6c2ec33ba44b367567c45bbcfc78a9f0a" translate="yes" xml:space="preserve">
          <source>The font which the user selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62af8d9a24dc96bdca488f4487df6988e74ce521" translate="yes" xml:space="preserve">
          <source>The footer is rendered at the bottom of the generated documentation page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67673e1ca4f2d3d4c7f31d671c8ad72beabfeb4c" translate="yes" xml:space="preserve">
          <source>The footnote is rendered at the bottom of the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad95d9c05e022a49e6e5d317267127422570052" translate="yes" xml:space="preserve">
          <source>The foreach Keyword</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd93b290e938e3eaecb86deeeecac7718e8e600e" translate="yes" xml:space="preserve">
          <source>The foreground brush (text color, typically) used for items rendered with the default delegate. (&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b3a3fd166c583826d5666e1f93ee60af12b03b4" translate="yes" xml:space="preserve">
          <source>The foreground color used with &lt;code&gt;Base&lt;/code&gt;. This is usually the same as the &lt;code&gt;WindowText&lt;/code&gt;, in which case it must provide good contrast with &lt;code&gt;Window&lt;/code&gt; and &lt;code&gt;Base&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b680c33422df7f918fa8a1db4cc574ff628a8f82" translate="yes" xml:space="preserve">
          <source>The foreground color used with &lt;code&gt;palette.base&lt;/code&gt;. This is usually the same as the &lt;code&gt;palette.windowText&lt;/code&gt;, in which case it must provide good contrast with &lt;code&gt;palette.window&lt;/code&gt; and &lt;code&gt;palette.base&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75711fb046f0dab941cb4389cbced8e4c694ac30" translate="yes" xml:space="preserve">
          <source>The foreground is drawn after (on top of) the items. The default foreground brush is &lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt::NoBrush&lt;/a&gt; ( i.e. the foreground is not drawn).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adecbdec218ba3485cdc5d829ca5eb2ffb5e9b07" translate="yes" xml:space="preserve">
          <source>The foreground layer. &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; renders the scene's foreground in this layer by calling the virtual function &lt;a href=&quot;qgraphicsscene#drawForeground&quot;&gt;drawForeground&lt;/a&gt;(). The foreground layer is drawn last of all layers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cebdda431e631d48bdeec7fdcccb03d02565c67c" translate="yes" xml:space="preserve">
          <source>The foreground of each column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d0efb9a9d1321a5f38bb93b347d39578e9eb8f" translate="yes" xml:space="preserve">
          <source>The foreground of selected text or items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ee75268645d9aeeab68b73ea058da7120fb0c5" translate="yes" xml:space="preserve">
          <source>The foreground of the button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e3906333f202ba7ef284e3e50234dc49ee5541" translate="yes" xml:space="preserve">
          <source>The foreground of the gauge. This component is drawn above all others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c52350c1392cff935e6b606aa5de0db5ea5a28" translate="yes" xml:space="preserve">
          <source>The foreground of the tumbler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e488f4d03d1e4e20b845dfb2b646b1dce476125" translate="yes" xml:space="preserve">
          <source>The foreground of this column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c95089653c530d004516c50191aa668b4f8e1eb" translate="yes" xml:space="preserve">
          <source>The foreground role defines the color from the widget's &lt;a href=&quot;qwidget#palette-prop&quot;&gt;palette&lt;/a&gt; that is used to draw the foreground.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d9d84528013c3ba0dfbb3b659cc56a253eaded" translate="yes" xml:space="preserve">
          <source>The form of this template function is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39c41db910f76430270ce5e01e6b69e4b83ebdd" translate="yes" xml:space="preserve">
          <source>The form styles can be also be overridden individually by calling &lt;a href=&quot;qformlayout#labelAlignment-prop&quot;&gt;setLabelAlignment&lt;/a&gt;(), &lt;a href=&quot;qformlayout#formAlignment-prop&quot;&gt;setFormAlignment&lt;/a&gt;(), &lt;a href=&quot;qformlayout#fieldGrowthPolicy-prop&quot;&gt;setFieldGrowthPolicy&lt;/a&gt;(), and &lt;a href=&quot;qformlayout#rowWrapPolicy-prop&quot;&gt;setRowWrapPolicy&lt;/a&gt;(). For example, to simulate the form layout appearance of QMacStyle on all platforms, but with left-aligned labels, you could write:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="415e5226103a41de0aea37a864338e2e1ef60ab2" translate="yes" xml:space="preserve">
          <source>The form validation message should be hidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="048575acb531740d12b67209192b992d47ec4fd7" translate="yes" xml:space="preserve">
          <source>The form validation message should be moved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8f4795778ebb1c922c49b69b2a367ae9807a3d" translate="yes" xml:space="preserve">
          <source>The form validation message should be shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ab20befd5772f3e67bd4848a6a31f483648a37" translate="yes" xml:space="preserve">
          <source>The form window manager interface provides the &lt;a href=&quot;qdesignerformwindowmanagerinterface#createFormWindow&quot;&gt;createFormWindow&lt;/a&gt;() function that enables you to create a new form window which you can add to the collection of form windows that the manager maintains, using the &lt;a href=&quot;qdesignerformwindowmanagerinterface#addFormWindow&quot;&gt;addFormWindow&lt;/a&gt;() slot. It also provides the &lt;a href=&quot;qdesignerformwindowmanagerinterface#formWindowCount&quot;&gt;formWindowCount&lt;/a&gt;() function returning the number of form windows currently under the manager's control, the &lt;a href=&quot;qdesignerformwindowmanagerinterface#formWindow&quot;&gt;formWindow&lt;/a&gt;() function returning the form window associated with a given index, and the &lt;a href=&quot;qdesignerformwindowmanagerinterface#activeFormWindow&quot;&gt;activeFormWindow&lt;/a&gt;() function returning the currently selected form window. The &lt;a href=&quot;qdesignerformwindowmanagerinterface#removeFormWindow&quot;&gt;removeFormWindow&lt;/a&gt;() slot allows you to reduce the number of form windows the manager must maintain, and the &lt;a href=&quot;qdesignerformwindowmanagerinterface#setActiveFormWindow&quot;&gt;setActiveFormWindow&lt;/a&gt;() slot allows you to change the form window focus in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5183929e533ad8e07f235efbc97b9962e7de92c8" translate="yes" xml:space="preserve">
          <source>The form's top level layout can be set by clearing the selection (click the left mouse button on the form itself) and applying a layout. A top level layout is necessary to ensure that your widgets will resize correctly when its window is resized. To check if you have set a top level layout, preview your widget and attempt to resize the window by dragging the size grip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e4016028ce03ad3ba3ca263e457986e473df4a" translate="yes" xml:space="preserve">
          <source>The formal parameter name may be enclosed between curly brackets, but that isn't required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165e234f49d5bccec2441e39cf5d8cb017d08434" translate="yes" xml:space="preserve">
          <source>The format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf148b1183aa497ae768bcf141a532913a49173" translate="yes" xml:space="preserve">
          <source>The format can be either a semicolon-separated list of scale factors in the same order as &lt;a href=&quot;qguiapplication#screens&quot;&gt;QGuiApplication::screens&lt;/a&gt;(), or a semicolon-separated list of &lt;code&gt;name=value&lt;/code&gt; pairs, where &lt;code&gt;name&lt;/code&gt; is the same as &lt;a href=&quot;qscreen#name-prop&quot;&gt;QScreen::name&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f4727adffdaa0aa2fe90a81ab0cc6a4858ad70" translate="yes" xml:space="preserve">
          <source>The format determines properties such as color depth, alpha, depth and stencil buffer size, etc. For example, to give a window a transparent background (provided that the window system supports compositing, and provided that other content in the window does not make it opaque again):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b2be01b8af7c747884af434b85d3e9eab19d80" translate="yes" xml:space="preserve">
          <source>The format for the displacement map is similar to the tangent space normal maps, which can be created with most 3D-modeling tools. Many image processing tools include the support for generating normal maps. Alternatively, the displacement map for this effect can also be a QML element which is colored appropriately. Like any QML element, it can be animated. It is recommended that the size of the diplacement map matches the size of the &lt;a href=&quot;qml-qtgraphicaleffects-displace#source-prop&quot;&gt;source&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4802123978c91e24724000ba2404721f7347affa" translate="yes" xml:space="preserve">
          <source>The format in which the days of the week (in the header) are displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302b06b6905d60bfc8bce5f48193940e1d599b00" translate="yes" xml:space="preserve">
          <source>The format includes the size of the color buffers, red, green, and blue; the size of the alpha buffer; the size of the depth and stencil buffers; and number of samples per pixel for multisampling. In addition, the format contains surface configuration parameters such as &lt;a href=&quot;qsurfaceformat#RenderableType-enum&quot;&gt;OpenGL&lt;/a&gt; profile and version for rendering, whether or not to enable stereo buffers, and swap behaviour.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cabdaab0724024176051246a31b1e5b46b678eaa" translate="yes" xml:space="preserve">
          <source>The format is documented in &lt;a href=&quot;#qSetMessagePattern&quot;&gt;qSetMessagePattern&lt;/a&gt;(). You can also install your own message handler using &lt;a href=&quot;#qInstallMessageHandler&quot;&gt;qInstallMessageHandler&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8acd5fa25e2d2639b59daf8f63c53f732d8cd6e6" translate="yes" xml:space="preserve">
          <source>The format is of type &lt;a href=&quot;qvideoframe#PixelFormat-enum&quot;&gt;QVideoFrame::PixelFormat&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03467839c13297a57a5711ec311c465bc940bca" translate="yes" xml:space="preserve">
          <source>The format of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800fe785ad4cac296feaae562b08740455665bb6" translate="yes" xml:space="preserve">
          <source>The format of a D-Bus service name is in fact very similar to a host name: it is a dot-separated sequence of letters and digits. The common practice is even to name one's service name according to the domain name of the organization that defined that service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e0f96a6bad8ea596fa423b32dbbd88ff9773d4" translate="yes" xml:space="preserve">
          <source>The format of a media resource isn't (fully) supported. Playback may still be possible, but without an audio or video component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73155041bea822c024dd85f8c4df4188114a4b0" translate="yes" xml:space="preserve">
          <source>The format of a media resource isn't supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94657cde395d5da83edc6067e22a759dc81f2671" translate="yes" xml:space="preserve">
          <source>The format of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c73469c760e2eeeb738fa2263c947eb66fc0b828" translate="yes" xml:space="preserve">
          <source>The format of the URL is unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce6c27568d572fbdc4012edbbf84a5c365560c6" translate="yes" xml:space="preserve">
          <source>The format specification is described at &lt;a href=&quot;qml-qtqml-qt#formatDateTime-method&quot;&gt;Qt.formatDateTime&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e43448ad1f2459623b389bceea3866c8ecf7a7b" translate="yes" xml:space="preserve">
          <source>The format string supports the conversion specifiers, length modifiers, and flags provided by printf() in the standard C++ library. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c5d2077d70e2d19a8b041278149da34bb89642" translate="yes" xml:space="preserve">
          <source>The format string supports the following conversion specifiers, length modifiers, and flags provided by &lt;code&gt;printf()&lt;/code&gt; in the standard C++ library: d, i, o, x, X, f, F, e, E, g, G, c.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb7da9dc822d363db17c5940f8c96352b8491cd7" translate="yes" xml:space="preserve">
          <source>The format string that is used when creating the label for the axis out of a &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; object. See &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; documentation for information on how the string should be defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c007bc2ee79a57b0f445b2e5c26a02697d4c108e" translate="yes" xml:space="preserve">
          <source>The format type is given by &lt;a href=&quot;qtextformat#type&quot;&gt;type&lt;/a&gt;(), and the format can be tested with &lt;a href=&quot;qtextformat#isCharFormat&quot;&gt;isCharFormat&lt;/a&gt;(), &lt;a href=&quot;qtextformat#isBlockFormat&quot;&gt;isBlockFormat&lt;/a&gt;(), &lt;a href=&quot;qtextformat#isListFormat&quot;&gt;isListFormat&lt;/a&gt;(), &lt;a href=&quot;qtextformat#isTableFormat&quot;&gt;isTableFormat&lt;/a&gt;(), &lt;a href=&quot;qtextformat#isFrameFormat&quot;&gt;isFrameFormat&lt;/a&gt;(), and &lt;a href=&quot;qtextformat#isImageFormat&quot;&gt;isImageFormat&lt;/a&gt;(). If the type is determined, it can be retrieved with &lt;a href=&quot;qtextformat#toCharFormat&quot;&gt;toCharFormat&lt;/a&gt;(), &lt;a href=&quot;qtextformat#toBlockFormat&quot;&gt;toBlockFormat&lt;/a&gt;(), &lt;a href=&quot;qtextformat#toListFormat&quot;&gt;toListFormat&lt;/a&gt;(), &lt;a href=&quot;qtextformat#toTableFormat&quot;&gt;toTableFormat&lt;/a&gt;(), &lt;a href=&quot;qtextformat#toFrameFormat&quot;&gt;toFrameFormat&lt;/a&gt;(), and &lt;a href=&quot;qtextformat#toImageFormat&quot;&gt;toImageFormat&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24474565d4d17a8d58ba620b9918416cf8a79454" translate="yes" xml:space="preserve">
          <source>The format used for showing labels in a bar series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baae0991a25fe6dca7171f0b0a43fdff3bcfeef2" translate="yes" xml:space="preserve">
          <source>The format used for showing labels with data points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8debe8c0ad9ce823c0a439e537a668d8ba8f4e5e" translate="yes" xml:space="preserve">
          <source>The format used for showing labels with series points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="466f06f7f9019bd04a6a338e8cff80cd2ebc6c18" translate="yes" xml:space="preserve">
          <source>The format-specific configuration variables define the generated documentation's style, or define the contents of the documentation's footer or postheader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56490a88a65143b619c4e2dea348490533d1914" translate="yes" xml:space="preserve">
          <source>The formatted item label. If there is no selected item or the selected item is not visible, returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2fe90ef82c6c0822da9584c31705f0c980339b4" translate="yes" xml:space="preserve">
          <source>The formatted string will appear as the name of this test data in the test output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec0bad7da60bc2d30f0a2b21b300fee241bd105" translate="yes" xml:space="preserve">
          <source>The formatted text can be drawn onto a paint device; in the above code, the text is drawn directly onto a widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cadd0ff427f5d08677f8c33b96da3f135dc9511b" translate="yes" xml:space="preserve">
          <source>The formatting always uses &lt;a href=&quot;qlocale#Language-enum&quot;&gt;QLocale::C&lt;/a&gt;, i.e., English/UnitedStates. To get a localized string representation of a number, use &lt;a href=&quot;qlocale#toString&quot;&gt;QLocale::toString&lt;/a&gt;() with the appropriate locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="836c3c3988ae6708b9901f8270026fb114770b69" translate="yes" xml:space="preserve">
          <source>The formatting options define how the URL is formatted when written out as text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25eff82c6dda33e9b770983f8f62e4183e511877" translate="yes" xml:space="preserve">
          <source>The former is the standard form which registers the type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ad161821594f9128ca604054e4c53cf0bee8eb" translate="yes" xml:space="preserve">
          <source>The four concentric rectangles appear conceptually as below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29059380c9e9c0064be97d84e2d0c7d5e5b39af4" translate="yes" xml:space="preserve">
          <source>The fragment is sometimes also referred to as the URL &quot;reference&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10717af969cd4aca9ade17943d063a4fa34788f2" translate="yes" xml:space="preserve">
          <source>The fragment that represents the image can be found by iterating over the fragments in the text block that contains the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd447833fcd39a4e6c42491031b7a11afdd41681" translate="yes" xml:space="preserve">
          <source>The fragments within a given block can be examined by using a &lt;a href=&quot;qtextblock-iterator&quot;&gt;QTextBlock::iterator&lt;/a&gt; to traverse the block's internal structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176d80370fc5742e0bc069e33a32483847e82c1d" translate="yes" xml:space="preserve">
          <source>The frame around the combobox can be styled using the &lt;a href=&quot;stylesheet-customizing#box-model&quot;&gt;box model&lt;/a&gt;. The drop-down button can be styled using the &lt;a href=&quot;#drop-down-sub&quot;&gt;::drop-down&lt;/a&gt; subcontrol. By default, the drop-down button is placed in the top right corner of the padding rectangle of the widget. The arrow mark inside the drop-down button can be styled using the &lt;a href=&quot;#down-arrow-sub&quot;&gt;::down-arrow&lt;/a&gt; subcontrol. By default, the arrow is placed in the center of the contents rectangle of the drop-down subcontrol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613216ab47f8f4f39f395a80e5db74c0500c6229" translate="yes" xml:space="preserve">
          <source>The frame around the tumbler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9716fa1be4b2d451e652f75cb201a67f6bbb1cbe" translate="yes" xml:space="preserve">
          <source>The frame contains a bottom field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c7c1c082511d58bc286cf83f82777af2480612" translate="yes" xml:space="preserve">
          <source>The frame contains a merged top and bottom field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c07e3f9556df475923afa983be4ea2fd568d72f" translate="yes" xml:space="preserve">
          <source>The frame contains a top field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a844033e407a45f0020aaeda36cb9c16229ec021" translate="yes" xml:space="preserve">
          <source>The frame could not be sent due to lost arbitration on the bus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="642e1e33a390aea152a3aaacb9654eaaf85c7518" translate="yes" xml:space="preserve">
          <source>The frame for tab widgets use &lt;a href=&quot;qstyleoptiontabwidgetframe&quot;&gt;QStyleOptionTabWidgetFrame&lt;/a&gt; as style option. We list its members here. It does not have states set besides the common flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9c03d235c849d965a072f243de6b26113760e7" translate="yes" xml:space="preserve">
          <source>The frame format defines the &lt;a href=&quot;qtextframeformat#width&quot;&gt;width&lt;/a&gt;() and &lt;a href=&quot;qtextframeformat#height&quot;&gt;height&lt;/a&gt;() of the frame on the screen. Each frame can have a &lt;a href=&quot;qtextframeformat#border&quot;&gt;border&lt;/a&gt;() that surrounds its contents with a rectangular box. The border is surrounded by a &lt;a href=&quot;qtextframeformat#margin&quot;&gt;margin&lt;/a&gt;() around the frame, and the contents of the frame are kept separate from the border by the frame's &lt;a href=&quot;qtextframeformat#padding&quot;&gt;padding&lt;/a&gt;(). This scheme is similar to the box model used by Cascading Style Sheets for HTML pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab66ba3abb05cb1366e2b77ebfee7e3bdb16e7a" translate="yes" xml:space="preserve">
          <source>The frame format will give the frame an external margin of 32 pixels, internal padding of 8 pixels, and a border that is 4 pixels wide. See the &lt;a href=&quot;qtextframeformat&quot;&gt;QTextFrameFormat&lt;/a&gt; documentation for more information about frame formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4c351a45187b7a9fa06443424e7032b3c14d3d" translate="yes" xml:space="preserve">
          <source>The frame interface is useful for standard widgets, but &lt;a href=&quot;qtimeline&quot;&gt;QTimeLine&lt;/a&gt; can be used to control any type of animation. The heart of &lt;a href=&quot;qtimeline&quot;&gt;QTimeLine&lt;/a&gt; lies in the &lt;a href=&quot;qtimeline#valueForTime&quot;&gt;valueForTime&lt;/a&gt;() function, which generates a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42171047631cbd6bd5dc10da58288b7ed5432546" translate="yes" xml:space="preserve">
          <source>The frame is flat by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d419c25974c89ce22ad36eb54c955fa895752938" translate="yes" xml:space="preserve">
          <source>The frame is inserted into the document after the preceding text:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9052457702c7e17e706f4a6330f637976448bd2d" translate="yes" xml:space="preserve">
          <source>The frame is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a39637219d8dd7fd5a95c4e89115b01d9f629ce" translate="yes" xml:space="preserve">
          <source>The frame is not interlaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0b42ad27d2073430b9747ce65548a775cdf37b" translate="yes" xml:space="preserve">
          <source>The frame is stored in compressed Jpeg format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce7202b94f86d9eac0f20a6eeadc0759d3c1158" translate="yes" xml:space="preserve">
          <source>The frame is stored using a 16-bit BGR format (5-5-5).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d54836baf90d344c7b0c3ea785c6cde9dbba26" translate="yes" xml:space="preserve">
          <source>The frame is stored using a 16-bit BGR format (5-6-5).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e8cbffdbca1f78d2a8ed1ea169620c7440887c" translate="yes" xml:space="preserve">
          <source>The frame is stored using a 16-bit RGB format (5-5-5). This is equivalent to &lt;a href=&quot;qimage#Format-enum&quot;&gt;QImage::Format_RGB555&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25cdc08f8a2642c7939c6414343aba045a7da624" translate="yes" xml:space="preserve">
          <source>The frame is stored using a 16-bit RGB format (5-6-5). This is equivalent to &lt;a href=&quot;qimage#Format-enum&quot;&gt;QImage::Format_RGB16&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5356d5061dc637ebce4bd79beb2d404656e0bce" translate="yes" xml:space="preserve">
          <source>The frame is stored using a 16-bit linear greyscale format. Little endian.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3c7d61f6aee2e1e49a1a026fba3940bce0b0b4" translate="yes" xml:space="preserve">
          <source>The frame is stored using a 24-bit BGR format (0xBBGGRR).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="889f06ef444d0a613bfbe8d8952832ca769a0097" translate="yes" xml:space="preserve">
          <source>The frame is stored using a 24-bit RGB format (8-8-8). This is equivalent to &lt;a href=&quot;qimage#Format-enum&quot;&gt;QImage::Format_RGB888&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577a58092bc9f865cf05117f79d11d2a0d29e171" translate="yes" xml:space="preserve">
          <source>The frame is stored using a 24-bit packed YUV format (8-8-8).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99fe35f459080b13e945183b389b8446bfb896a1" translate="yes" xml:space="preserve">
          <source>The frame is stored using a 24-bit premultiplied ARGB format (8-5-6-5).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780c5818506c6fdfa1644953ee5e644ec8cd8369" translate="yes" xml:space="preserve">
          <source>The frame is stored using a 24-bit premultiplied BGRA format (5-6-5-8).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74089029d0cbee4df329fb11c5bae44203b4a52" translate="yes" xml:space="preserve">
          <source>The frame is stored using a 32-bit ABGR format (0xAABBGGRR).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47736f2d007bf751b31d079f0cabdb7a5e82d2d3" translate="yes" xml:space="preserve">
          <source>The frame is stored using a 32-bit ARGB format (0xAARRGGBB). This is equivalent to &lt;a href=&quot;qimage#Format-enum&quot;&gt;QImage::Format_ARGB32&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076cbfd2f9f726de9159e680e698a19be099bd21" translate="yes" xml:space="preserve">
          <source>The frame is stored using a 32-bit BGR format (0xBBGGRRff).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48cbf79ec2dc32655201e58a3d2696df3f351ba3" translate="yes" xml:space="preserve">
          <source>The frame is stored using a 32-bit BGRA format (0xBBGGRRAA).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef7e42861dda2927eecb3632b7714bfa8ab9ab3" translate="yes" xml:space="preserve">
          <source>The frame is stored using a device specific camera raw format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e509b4207373dff363ed05feac046756ab4aea" translate="yes" xml:space="preserve">
          <source>The frame is stored using a packed 32-bit AYUV format (0xAAYYUUVV).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b10ad5cebf12053930d6a3112e7b4c0f74fb06b9" translate="yes" xml:space="preserve">
          <source>The frame is stored using a packed premultiplied 32-bit AYUV format (0xAAYYUUVV).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37508a5ad4e68cb6d389e651e8a1a69b04f67a57" translate="yes" xml:space="preserve">
          <source>The frame is stored using a premultiplied 32bit BGRA format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099f3a7a2ae7522572a3305b1f9ebb1d40a34c25" translate="yes" xml:space="preserve">
          <source>The frame is stored using an 8-bit greyscale format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299c26040a16aba73b651a092cc4e0f3db407d0e" translate="yes" xml:space="preserve">
          <source>The frame is stored using an 8-bit per component packed YUV format with the U and V planes horizontally sub-sampled (U-Y-V-Y), i.e. two horizontally adjacent pixels are stored as a 32-bit macropixel which has a Y value for each pixel and common U and V values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3a6b71632a211c0884c90b5b264ac9d081e854" translate="yes" xml:space="preserve">
          <source>The frame is stored using an 8-bit per component packed YUV format with the U and V planes horizontally sub-sampled (Y-U-Y-V), i.e. two horizontally adjacent pixels are stored as a 32-bit macropixel which has a Y value for each pixel and common U and V values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e44f4de1ec15a128da9b13b7f9ca0121497692b" translate="yes" xml:space="preserve">
          <source>The frame is stored using an 8-bit per component planar YUV format with the U and V planes horizontally and vertically sub-sampled, i.e. the height and width of the U and V planes are half that of the Y plane.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da576d3d59a592e150eb8d5c29e0f73d3b05db2" translate="yes" xml:space="preserve">
          <source>The frame is stored using an 8-bit per component planar YUV format with the U and V planes horizontally and vertically sub-sampled. This is similar to the Format_YUV420P type, except that the bytes per line of the U and V planes are padded out to the same stride as the Y plane.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf61507d1c02d262558bf11966ae859df83f32fd" translate="yes" xml:space="preserve">
          <source>The frame is stored using an 8-bit per component planar YUV format with the U and V planes horizontally and vertically sub-sampled. This is similar to the Format_YUV420P type, except that the lines of the U and V planes are interleaved, i.e. each line of U data is followed by a line of V data creating a single line of the same stride as the Y data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f3b47f98ad73da545b35fc0fc7e7cda4a224ff" translate="yes" xml:space="preserve">
          <source>The frame is stored using an 8-bit per component planar YVU format with the V and U planes horizontally and vertically sub-sampled, i.e. the height and width of the V and U planes are half that of the Y plane.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1403c9cf381a1677d0945afe202ad8976f8c1353" translate="yes" xml:space="preserve">
          <source>The frame is stored using an 8-bit per component planar YVU format with the V and U planes horizontally and vertically sub-sampled. This is similar to the Format_YV12 type, except that the bytes per line of the V and U planes are padded out to the same stride as the Y plane.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af286c682a92d495b9e27efbff2886fd331b68e1" translate="yes" xml:space="preserve">
          <source>The frame is stored using an 8-bit per component planar YVU format with the V and U planes horizontally and vertically sub-sampled. This is similar to the Format_YV12 type, except that the lines of the V and U planes are interleaved, i.e. each line of V data is followed by a line of U data creating a single line of the same stride as the Y data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1571cc09afeae6d1a5e578816b9f5b149a5a56" translate="yes" xml:space="preserve">
          <source>The frame is stored using an 8-bit per component semi-planar YUV format with a Y plane (Y) followed by a horizontally and vertically sub-sampled, packed UV plane (U-V).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b060df5e38b012b9db15701d22f7011f59765576" translate="yes" xml:space="preserve">
          <source>The frame is stored using an 8-bit per component semi-planar YUV format with a Y plane (Y) followed by a horizontally and vertically sub-sampled, packed VU plane (V-U).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e62d6a3dac5634ac3422e1edfe245660eb90053" translate="yes" xml:space="preserve">
          <source>The frame is stored using raw Adobe Digital Negative (DNG) format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52f683a7c94c7be8ce7ef68e6e2489ecbeaedc2" translate="yes" xml:space="preserve">
          <source>The frame latency in range 1 - 16. The default value is 0 (disabled). Changes the limit for Present() and triggers a wait for an available swap chain buffer when beginning each frame. For a detailed discussion, see the article linked above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992096b75b46b6fbde9c7160c563ea9e808c9a98" translate="yes" xml:space="preserve">
          <source>The frame of a group box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7041fc5e173e3b0e762a11c051ee006f14884fb8" translate="yes" xml:space="preserve">
          <source>The frame of the spin box can be styled using the &lt;a href=&quot;stylesheet-customizing#box-model&quot;&gt;box model&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf255bb3ecd535632738b6936b82d4a8d86d53a" translate="yes" xml:space="preserve">
          <source>The frame of the tab widget is styled using the &lt;a href=&quot;#pane-sub&quot;&gt;::pane&lt;/a&gt; subcontrol. The left and right corners are styled using the &lt;a href=&quot;#left-corner-sub&quot;&gt;::left-corner&lt;/a&gt; and &lt;a href=&quot;#right-corner-sub&quot;&gt;::right-corner&lt;/a&gt; respectively. The position of the tab bar is controlled using the &lt;a href=&quot;#tab-bar-sub&quot;&gt;::tab-bar&lt;/a&gt; subcontrol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa9e7aa8351a485a4ceb30c1f08349411111a29" translate="yes" xml:space="preserve">
          <source>The frame rate between animations can vary by up to this amount. Variation will never decrease the length of the animation to less than 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7f544b4322f5adb7e978509e691dcd299b94cb" translate="yes" xml:space="preserve">
          <source>The frame rate of the media's video stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d557329c1c1e7da20285c150048f98728f6f71" translate="yes" xml:space="preserve">
          <source>The frame shapes are &lt;a href=&quot;qframe#Shape-enum&quot;&gt;NoFrame&lt;/a&gt;, &lt;a href=&quot;qframe#Shape-enum&quot;&gt;Box&lt;/a&gt;, &lt;a href=&quot;qframe#Shape-enum&quot;&gt;Panel&lt;/a&gt;, &lt;a href=&quot;qframe#Shape-enum&quot;&gt;StyledPanel&lt;/a&gt;, &lt;a href=&quot;qframe#Shape-enum&quot;&gt;HLine&lt;/a&gt; and &lt;a href=&quot;qframe#Shape-enum&quot;&gt;VLine&lt;/a&gt;; the shadow styles are &lt;a href=&quot;qframe#Shadow-enum&quot;&gt;Plain&lt;/a&gt;, &lt;a href=&quot;qframe#Shadow-enum&quot;&gt;Raised&lt;/a&gt; and &lt;a href=&quot;qframe#Shadow-enum&quot;&gt;Sunken&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb1e30cfc97e8d4256a00445cdffa67cbf1d028" translate="yes" xml:space="preserve">
          <source>The frame shapes are given in &lt;a href=&quot;qframe#Shape-enum&quot;&gt;QFrame::Shape&lt;/a&gt; and the shadow styles in &lt;a href=&quot;qframe#Shadow-enum&quot;&gt;QFrame::Shadow&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb576cbb1532163f39e6928273d74bd75ce38c9e" translate="yes" xml:space="preserve">
          <source>The frame stored using a 32-bit RGB format (0xffRRGGBB). This is equivalent to &lt;a href=&quot;qimage#Format-enum&quot;&gt;QImage::Format_RGB32&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49372d28fd78d90b19d197da7d90a4f96e79e1d4" translate="yes" xml:space="preserve">
          <source>The frame stored using a premultiplied 32-bit ARGB format (0xAARRGGBB). This is equivalent to &lt;a href=&quot;qimage#Format-enum&quot;&gt;QImage::Format_ARGB32_Premultiplied&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30d9a13f29e2c9dce9e077352256688eea37dfb" translate="yes" xml:space="preserve">
          <source>The frame style is specified by a &lt;a href=&quot;qframe#Shape-enum&quot;&gt;frame shape&lt;/a&gt; and a &lt;a href=&quot;qframe#Shadow-enum&quot;&gt;shadow style&lt;/a&gt; that is used to visually separate the frame from surrounding widgets. These properties can be set together using the &lt;a href=&quot;qframe#setFrameStyle&quot;&gt;setFrameStyle&lt;/a&gt;() function and read with &lt;a href=&quot;qframe#frameStyle&quot;&gt;frameStyle&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c883b098477df81fc3484872bc2b5baf8ba1a5" translate="yes" xml:space="preserve">
          <source>The frame style used when drawing a combobox popup menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="badfc41cd08564dcf71235fd43ae863863beae5e" translate="yes" xml:space="preserve">
          <source>The frame that is drawn for a tab bar, ususally drawn for a tab bar that isn't part of a tab widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91876957ec9d4d2cbfc0462e256cf49987be0997" translate="yes" xml:space="preserve">
          <source>The frame type is unknown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bced41815baee2ea1b329dba58f8d91d8d80bfc" translate="yes" xml:space="preserve">
          <source>The frame width for a tool tip label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac8135a9597d00a8817f2f2ecb971b694376fae" translate="yes" xml:space="preserve">
          <source>The frame width for the menu on the desktop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0679b6396c299c8cefaec3fd5ebca8909f080eb6" translate="yes" xml:space="preserve">
          <source>The frame width is determined by the frame style, and the &lt;a href=&quot;qframe#frameWidth-prop&quot;&gt;frameWidth&lt;/a&gt;() function is used to obtain the value defined for the style used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef23a77ec04fcddabb92a1e4a41f5e1d764b8a9" translate="yes" xml:space="preserve">
          <source>The frame with the shape specified in the &lt;a href=&quot;qstyleoptionframe&quot;&gt;QStyleOptionFrame&lt;/a&gt;; see &lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31751cbfdf0f3567dedd43595b93ab8f3f095bf1" translate="yes" xml:space="preserve">
          <source>The frame's rectangle is the rectangle the frame is drawn in. By default, this is the entire widget. Setting the rectangle does does</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c571d6bd580a48af224876e51c4375b41e7b714" translate="yes" xml:space="preserve">
          <source>The frameId is used in conjunction with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a621705fac7029f94984fbad6a7b0f9e3191fb" translate="yes" xml:space="preserve">
          <source>The framebuffer can also become invalid if the &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; that the framebuffer was created within is destroyed and there are no other shared contexts that can take over ownership of the framebuffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4af2562cd0b73309290c377127a7f130a9a455" translate="yes" xml:space="preserve">
          <source>The framebuffer can become invalid if the initialization process fails, the user attaches an invalid buffer to the framebuffer object, or a non-power of two width/height is specified as the texture size if the texture target is &lt;code&gt;GL_TEXTURE_2D&lt;/code&gt;. The non-power of two limitation does not apply if the OpenGL version is 2.0 or higher, or if the GL_ARB_texture_non_power_of_two extension is present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ce6ae9f9aef23b6989886286a4777ea975cd0a" translate="yes" xml:space="preserve">
          <source>The framebuffer has two attachments (color, depth-stencil) when multisampling is not in use, and three (color resolve, depth-stencil, multisample color) when &lt;a href=&quot;qvulkanwindow#sampleCountFlagBits&quot;&gt;sampleCountFlagBits&lt;/a&gt;() is greater than &lt;code&gt;VK_SAMPLE_COUNT_1_BIT&lt;/code&gt;. Renderers must take this into account, for example when providing clear values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c334b0d58e1a2672ca6181b3e4d0bd4b200ab643" translate="yes" xml:space="preserve">
          <source>The framebuffer object handle used by this window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62002e7938e9cbf522efffdca8ee918086d121e1" translate="yes" xml:space="preserve">
          <source>The framebuffer objects color buffer and ancillary buffers are not invalidated between frames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be37cf12c0a20b9d503552da2541f348e4bd8d2d" translate="yes" xml:space="preserve">
          <source>The framebuffer specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6154645ee9e113a430792b9fe7b9f9926d720da9" translate="yes" xml:space="preserve">
          <source>The framework consists of four classes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd55542a76dff4bd5dfeddb169a12c680afc72a" translate="yes" xml:space="preserve">
          <source>The framework includes an event propagation architecture that allows precise double-precision interaction capabilities for the items on the scene. Items can handle key events, mouse press, move, release and double click events, and they can also track mouse movement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5485b22d502fc81c7f85f9f02961dd4608e932" translate="yes" xml:space="preserve">
          <source>The framework itself is linked in by appending the &lt;code&gt;-framework&lt;/code&gt; options and the name of the framework to the &lt;a href=&quot;qmake-variable-reference#libs&quot;&gt;LIBS&lt;/a&gt; variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d73db829f0f057723083f68c231d209a4ae346f" translate="yes" xml:space="preserve">
          <source>The frequent items category.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f27ab1f7214fae60446b5f53a5fbae80bc53b8" translate="yes" xml:space="preserve">
          <source>The from and to ranges must exist; for example, to move the first 3 items to the end of the list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b5c74464265be983e561e7e5433577bd2899da" translate="yes" xml:space="preserve">
          <source>The from and to ranges must exist; for example, to move the first 3 items to the end of the model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10981aa0a37eeee14dc6fa1d9d36a597b887ca1f" translate="yes" xml:space="preserve">
          <source>The front and back sides of the flipable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4350d0e1ac318cddaee8d95a51edfcc7070fa7" translate="yes" xml:space="preserve">
          <source>The full list of supported formats can be determined with &lt;a href=&quot;qmovie#supportedFormats&quot;&gt;QMovie::supportedFormats()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e038b34ad1be483ea47541079901aabc1109562d" translate="yes" xml:space="preserve">
          <source>The full path to the first file or directory (depending on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca65ecda5e57b36f88f930325268a9a33215249" translate="yes" xml:space="preserve">
          <source>The full range Y'CbCr color space used in JPEG files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50e25a9a4e9803df107860c2bbdc4a367251f1a" translate="yes" xml:space="preserve">
          <source>The full source code is available in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-qmlextensionplugins-example.html#&quot;&gt;plugins example&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa236d312afaa8c4a16e53052a063106603102ad" translate="yes" xml:space="preserve">
          <source>The function &lt;a href=&quot;qgeopositioninfo#hasAttribute&quot;&gt;hasAttribute&lt;/a&gt;() should be used to determine whether or not a value has been set for an attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9e87f62dd626636eb358518d6db0488afe0559" translate="yes" xml:space="preserve">
          <source>The function &lt;a href=&quot;qhoverevent#pos&quot;&gt;pos&lt;/a&gt;() gives the current cursor position, while &lt;a href=&quot;qhoverevent#oldPos&quot;&gt;oldPos&lt;/a&gt;() gives the old mouse position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d87f6e7cb9453ea1ef4fd8ff7e155520040051" translate="yes" xml:space="preserve">
          <source>The function assumes the geometry object contains a single triangle strip of &lt;a href=&quot;qsggeometry-coloredpoint2d&quot;&gt;QSGGeometry::ColoredPoint2D&lt;/a&gt; vertices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="488691c9570aaf071fedaa1884ee918c1b9f5b04" translate="yes" xml:space="preserve">
          <source>The function assumes the geometry object contains a single triangle strip of &lt;a href=&quot;qsggeometry-point2d&quot;&gt;QSGGeometry::Point2D&lt;/a&gt; vertices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a24f9373a39a9bc6110bdbf9cb744f73a5b72c" translate="yes" xml:space="preserve">
          <source>The function calls all installed factory functions (from most recently installed to least recently installed) until one is found that provides an interface for the class of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4530418e911d0ee4a3c3809a561a8d5ed280418c" translate="yes" xml:space="preserve">
          <source>The function can also take a property list as argument - &lt;code&gt;Item StackView::pop(jsobject dict)&lt;/code&gt;, which can contain one or more of the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b2985a291d90e0624cf5ed13e2e77c1da7cc6c5" translate="yes" xml:space="preserve">
          <source>The function can also take a property list as argument - &lt;code&gt;Item StackView::push(jsobject dict)&lt;/code&gt;, which should contain one or more of the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd35bbe830419713f1fba2a344bf918c312ca03b" translate="yes" xml:space="preserve">
          <source>The function can change both</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a674e5dfaf01b905f1a5050b904660f405f5cd" translate="yes" xml:space="preserve">
          <source>The function concatenates &lt;a href=&quot;qxmlstreamreader#text&quot;&gt;text&lt;/a&gt;() when it reads either &lt;a href=&quot;qxmlstreamreader#TokenType-enum&quot;&gt;Characters&lt;/a&gt; or &lt;a href=&quot;qxmlstreamreader#TokenType-enum&quot;&gt;EntityReference&lt;/a&gt; tokens, but skips &lt;a href=&quot;qxmlstreamreader#TokenType-enum&quot;&gt;ProcessingInstruction&lt;/a&gt; and &lt;a href=&quot;qxmlstreamreader#TokenType-enum&quot;&gt;Comment&lt;/a&gt;. If the current token is not &lt;a href=&quot;qxmlstreamreader#TokenType-enum&quot;&gt;StartElement&lt;/a&gt;, an empty string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c0c8efa18ce31fc191998bfe7c75d6e657545f" translate="yes" xml:space="preserve">
          <source>The function converts the current RGB color to HSV, divides the value (V) component by factor and converts the color back to RGB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2975e5569fdf44cb11367e20462e1f95c836e77" translate="yes" xml:space="preserve">
          <source>The function converts the current RGB color to HSV, multiplies the value (V) component by factor and converts the color back to RGB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b274abb766f7fbf1452d138e70448d1efeeef5a1" translate="yes" xml:space="preserve">
          <source>The function converts the current color to HSV, divides the value (V) component by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043c0ecb9e12804aa5c78c6a395b069bd87ca01d" translate="yes" xml:space="preserve">
          <source>The function converts the current color to HSV, multiplies the value (V) component by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf351c423ec7dc6aa718e4bbc3a2a871301aa245" translate="yes" xml:space="preserve">
          <source>The function creates a modal file dialog with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1114a3e50fe8140f21fab41b1f2c5cea58e5df41" translate="yes" xml:space="preserve">
          <source>The function differs from the &lt;a href=&quot;qpainterpath#toFillPolygon&quot;&gt;toFillPolygon&lt;/a&gt;() function in that it creates several polygons. It is provided because it is usually faster to draw several small polygons than to draw one large polygon, even though the total number of points drawn is the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbaa1e8584918071a7af6e424d4927faea82689d" translate="yes" xml:space="preserve">
          <source>The function documentation must document:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca0ffa8aa6b1b0b473724f19fdd941d7acb5868" translate="yes" xml:space="preserve">
          <source>The function documentation starts with a verb, indicating the operation the function performs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64d4ae3e40abf3302b54214814a33e7455d1179" translate="yes" xml:space="preserve">
          <source>The function documentation starts with a verb, indicating the operation the function performs. This also applies to constructors and destructors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f1cb44d19efeb01b0504cacdf65212cdb6bbb0" translate="yes" xml:space="preserve">
          <source>The function does not give meaningful results if any of the arguments are &lt;code&gt;Infinite&lt;/code&gt; or &lt;code&gt;NaN&lt;/code&gt;. You can check for this by calling &lt;a href=&quot;qtglobal#qIsFinite&quot;&gt;qIsFinite&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47348bba0bc8c33b18ab8c8147830acd50550cae" translate="yes" xml:space="preserve">
          <source>The function has no effect when the blitter is not in created state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c22661655dff7b4f69545cb01f24ffb67d6bc48" translate="yes" xml:space="preserve">
          <source>The function is a constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f77df6b4fbcf932d68fa31f64c26eb67e058e6" translate="yes" xml:space="preserve">
          <source>The function is a plain member function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767949cd8aa7f9f619baee2938331bb690c992ee" translate="yes" xml:space="preserve">
          <source>The function is a signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899a168e8a16dcbdf9fb80bd85d8bbaabe0c920a" translate="yes" xml:space="preserve">
          <source>The function is a slot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82275c4ca8bd509fc6435f6490a16ea77e906841" translate="yes" xml:space="preserve">
          <source>The function is also used internally by the &lt;a href=&quot;quiloader&quot;&gt;QUiLoader&lt;/a&gt; class whenever it creates a widget. Hence, you can subclass &lt;a href=&quot;quiloader&quot;&gt;QUiLoader&lt;/a&gt; and reimplement this function to intervene process of constructing a user interface or widget. However, in your implementation, ensure that you call &lt;a href=&quot;quiloader&quot;&gt;QUiLoader&lt;/a&gt;'s version first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5861ecc881d99a809ee4a598101c2f37f9af6e" translate="yes" xml:space="preserve">
          <source>The function is asynchronous and returns immediately. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4998e84a5bf2e5bf129e1fd4c9200a8fbba85e1c" translate="yes" xml:space="preserve">
          <source>The function is called after the item has been filled with the &lt;a href=&quot;qquickpainteditem#fillColor-prop&quot;&gt;fillColor&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7bba79b60eef4a044c4a5457ea364a0f1eefb6c" translate="yes" xml:space="preserve">
          <source>The function is called as a result of &lt;a href=&quot;qquickitem#update&quot;&gt;QQuickItem::update&lt;/a&gt;(), if the user has set the &lt;a href=&quot;qquickitem#Flag-enum&quot;&gt;QQuickItem::ItemHasContents&lt;/a&gt; flag on the item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a5298322df4e21fe5b4dd770cb38d532e7fb3d6" translate="yes" xml:space="preserve">
          <source>The function is called by the renderer so it can reset the states after rendering this node. This makes the implementation of &lt;a href=&quot;qsgrendernode#render&quot;&gt;render&lt;/a&gt;() simpler since it does not have to query and restore these states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6363ca7bd84849037e6cabf412a262fd5469ffcf" translate="yes" xml:space="preserve">
          <source>The function is called on the GUI thread and the state of the rendering thread, when it is used, is unknown. Objects should not be deleted directly, but instead scheduled for cleanup using &lt;a href=&quot;qquickwindow#scheduleRenderJob&quot;&gt;QQuickWindow::scheduleRenderJob&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc1cb2731b703dfd08cbe3f6bbbb2be49f0d945" translate="yes" xml:space="preserve">
          <source>The function is called when the window has requested becoming visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46469b06481f47a2e19749d23e12de91ebde23d0" translate="yes" xml:space="preserve">
          <source>The function is called when the window has requested being hidden in the windowing system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39aea3f44c747d1647124a08912212dda35981b2" translate="yes" xml:space="preserve">
          <source>The function is named after the HTTP request associated (HEAD).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4df1ff9082ee156c30418039520d5803692d0f2" translate="yes" xml:space="preserve">
          <source>The function is thread-safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca6e853839a76db996789752089bbd0696ccb3e" translate="yes" xml:space="preserve">
          <source>The function is used similarly to &lt;a href=&quot;qfiledialog#getExistingDirectory&quot;&gt;QFileDialog::getExistingDirectory&lt;/a&gt;(). In particular</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e955abcb321632c553bce6a7042f2c77df6c6c" translate="yes" xml:space="preserve">
          <source>The function is used similarly to &lt;a href=&quot;qfiledialog#getOpenFileName&quot;&gt;QFileDialog::getOpenFileName&lt;/a&gt;(). In particular</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0390d29dbde73d8444242197396315662f4545ad" translate="yes" xml:space="preserve">
          <source>The function is used similarly to &lt;a href=&quot;qfiledialog#getOpenFileNames&quot;&gt;QFileDialog::getOpenFileNames&lt;/a&gt;(). In particular</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e880d984584b2946af00aabaf22cef406556bf8" translate="yes" xml:space="preserve">
          <source>The function is used similarly to &lt;a href=&quot;qfiledialog#getSaveFileName&quot;&gt;QFileDialog::getSaveFileName&lt;/a&gt;(). In particular</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d279bc704460f6e5fee02fe43572de06378a96" translate="yes" xml:space="preserve">
          <source>The function must be reimplemented to add actions to the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="becedaa2f6cacb867e1d423cc99437e647029112" translate="yes" xml:space="preserve">
          <source>The function must return true on success and false on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17e27da28777c6253c62320f1ecefe6afc0cf90" translate="yes" xml:space="preserve">
          <source>The function passed as the first argument to Qt.&lt;a href=&quot;qml-qtqml-qt#callLater-method&quot;&gt;callLater()&lt;/a&gt; will be called later, once the QML engine returns to the event loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4b4744873b6af69a96f1644866d1d7b5cf11a6" translate="yes" xml:space="preserve">
          <source>The function receives a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; and a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; pointer, where the &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; is the key identifying the interface. The &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; is used to pass on to the &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; so that it can hold a reference to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edffacbbcbe21b1dc84aecf32c6e5f24f713e8b1" translate="yes" xml:space="preserve">
          <source>The function returned data; there was no error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550913fe82862821055d866169a8c8cc7235881f" translate="yes" xml:space="preserve">
          <source>The function returns -1 if the font could not be loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef857ba658e53903b734bc06309e18651c26dd5d" translate="yes" xml:space="preserve">
          <source>The function returns 0 if not even a default &lt;a href=&quot;qgeopositioninfosource&quot;&gt;QGeoPositionInfoSource&lt;/a&gt; exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19b8d0b951f24daf71169b6b2046c6386ee68cf" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;nullptr&lt;/code&gt; if the symbol could not be resolved or if the library could not be loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164ac64dd815cc3ccdf87c5a5d72beb5b71b790f" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;true&lt;/code&gt; if QDom implements the requested</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f816f44f702cf6ab83934673187408eb7ce77383" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;true&lt;/code&gt; if data is available for reading; otherwise it returns &lt;code&gt;false&lt;/code&gt; (if an error occurred or the operation timed out).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e9d7342515527363d9502b05897b5b8d4e7c9d" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;true&lt;/code&gt; if the &lt;a href=&quot;qiodevice#bytesWritten&quot;&gt;bytesWritten&lt;/a&gt;() signal is emitted; otherwise it returns &lt;code&gt;false&lt;/code&gt; (if an error occurred or the operation timed out).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59b5a539ab2d09431bbadfde9ab6c14fadffb45" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;true&lt;/code&gt; if the &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead&lt;/a&gt;() signal is emitted and there is new data available for reading; otherwise it returns &lt;code&gt;false&lt;/code&gt; (if an error occurred or the operation timed out).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc5e80b8d6bd690ff890fd0ad985640cb461112d" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;true&lt;/code&gt; if the coils register contains the 8 bits required for storing and retrieving the status coils, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17394cb86de6dc0c7f5b6b3582681ce32368492b" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;true&lt;/code&gt; if the lock was obtained; otherwise it returns &lt;code&gt;false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e85c246c21c02c7ddd81e526d165d60647cf050" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;true&lt;/code&gt; if the object was inserted into the cache; otherwise it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51254cb313d612d281d3eaa8d5a9bcb8c236a4d1" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;true&lt;/code&gt; if the word was successfully reselected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe78ee1c2efc7a55f1480204bc2417f5c1a5569" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;true&lt;/code&gt; on success and false on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564b420e3834d8dd9a8040def44120306abad0d4" translate="yes" xml:space="preserve">
          <source>The function returns a &lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject::Connection&lt;/a&gt; that represents a handle to a connection if it successfully connects the signal to the slot. The connection handle will be invalid if it cannot create the connection, for example, if &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; is unable to verify the existence of either</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8da9cfac0db405c35d3b07cbfe64499ff65e4fa" translate="yes" xml:space="preserve">
          <source>The function returns a pointer to the script engine for the code in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c581bf06b0dd7953d325bb8691f3a8beade8df37" translate="yes" xml:space="preserve">
          <source>The function returns a pointer to the script for the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b1dba79e3ac5a795d9b4426ed417d5f9a8a9f8" translate="yes" xml:space="preserve">
          <source>The function returns an handle to a connection if it successfully connects the signal to the slot. The Connection handle will be invalid if it cannot create the connection, for example, if &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; is unable to verify the existence of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7dd70af06c0c9bbcc2b18955af596206d6ea72" translate="yes" xml:space="preserve">
          <source>The function returns immediately. Depending on the platform audio facilities, other sounds may stop or be mixed with the new sound. The sound can be played again at any time, possibly mixing or replacing previous plays of the sound.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830c7791eb311fc5e4eaecbdf4298dea0657a988" translate="yes" xml:space="preserve">
          <source>The function returns the newly created object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a755bd5e1bb4599f6bfa8ff1531087d8495f2b78" translate="yes" xml:space="preserve">
          <source>The function returns the number of bytes sent if it succeeded or -1 if it encountered an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa023ae2c458341ab78ee5fa6821a7e68857b78e" translate="yes" xml:space="preserve">
          <source>The function returns the removed node or a &lt;a href=&quot;qdomnode#isNull&quot;&gt;null node&lt;/a&gt; if the map did not contain a node called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134c5b88ca21d894e6ffdb6e1ff78a456bb73d9b" translate="yes" xml:space="preserve">
          <source>The function returns the removed node or a &lt;a href=&quot;qdomnode#isNull&quot;&gt;null node&lt;/a&gt; if the map did not contain a node with the local name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad3cb7944f8037a9da4a143bb75a1a6a4f9c6a2" translate="yes" xml:space="preserve">
          <source>The function returns the triggered &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; in either the popup menu or one of its submenus, or &lt;code&gt;nullptr&lt;/code&gt; if no item was triggered (normally because the user pressed Esc).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03cb50e99323aa2004fd3cf76dc18919dec5c0aa" translate="yes" xml:space="preserve">
          <source>The function returns true if the object could perform the action, otherwise returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e885a7a058e8d52bf225bdca2b0d0481ca555b4" translate="yes" xml:space="preserve">
          <source>The function returns true if the texture was changed as a resul of the update; otherwise returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b929cbfdce0dca71942e6bfbca8df96286aa7a6f" translate="yes" xml:space="preserve">
          <source>The function returns true if the trace interaction was accepted (i.e. the touch events should not be used for anything else).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503d8ade829f6955c7ce7613b8d4263d54a71d49" translate="yes" xml:space="preserve">
          <source>The function setSupportsRouteUpdates() is one of several functions which configure the reported capabilities of the engine. If the capabilities of an engine differ from the default values these functions should be used so that the reported capabilities are accurate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6637d4baf42ffea6967ef462e84d6d87eaa2c1" translate="yes" xml:space="preserve">
          <source>The function sets up a call to the &lt;a href=&quot;qdbusxml2cpp#&quot;&gt;Qt D-Bus XML compiler (qdbusxml2cpp)&lt;/a&gt; in adaptor mode. The default file and class name are generated from the last segment in the &lt;code&gt;dbus_spec&lt;/code&gt; base name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a48af6d7901fedb1351c3a8b400ae1dea89d33b" translate="yes" xml:space="preserve">
          <source>The function sets up a call to the &lt;a href=&quot;qdbusxml2cpp#&quot;&gt;Qt D-Bus XML compiler (qdbusxml2cpp)&lt;/a&gt; in interface (proxy) mode. By default, &lt;code&gt;qdbusxml2cpp&lt;/code&gt; generates a C++ class named after the interface name, with a namespaced alias:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae57e5aea569f2e4efc0a03435e2d2f1a7e8e4ac" translate="yes" xml:space="preserve">
          <source>The function sets up a call to the &lt;code&gt;qdbuscpp2xml&lt;/code&gt; command line tool. Further arguments to the tool can be set after &lt;code&gt;OPTIONS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3644c8ad6b9e6aba513b1c78be9dc5d3f067e58" translate="yes" xml:space="preserve">
          <source>The function should at all times return the correct texture id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72652fb57f6a8d4729e58ad71991c6bd4507f3e3" translate="yes" xml:space="preserve">
          <source>The function should return &lt;code&gt;true&lt;/code&gt; if it handles the event. Otherwise the input falls back to &lt;a href=&quot;qml-qtquick-virtualkeyboard-inputmethod#reselect-method&quot;&gt;reselect()&lt;/a&gt; for further processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9966d607ba2748f77fc67af04e0525a4344540" translate="yes" xml:space="preserve">
          <source>The function should return &lt;code&gt;true&lt;/code&gt; if it handles the event. Otherwise the input falls back to &lt;a href=&quot;qvirtualkeyboardabstractinputmethod#reselect&quot;&gt;reselect&lt;/a&gt;() for further processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cbf21f6d4481cfd8f4d7145dae3f3d8e3f37831" translate="yes" xml:space="preserve">
          <source>The function should return &lt;code&gt;true&lt;/code&gt; if the connection is to be accepted. Otherwise, the socket is closed/rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2474c2234028fa9db615f28e7cf40471be3d4d1" translate="yes" xml:space="preserve">
          <source>The function should return the root of the scene graph subtree for this item. Most implementations will return a single &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt; containing the visual representation of this item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c054041989dd35af31863855920280f8653c290f" translate="yes" xml:space="preserve">
          <source>The function specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f05bb963259814db5820584e56ff88edf3bb992" translate="yes" xml:space="preserve">
          <source>The function text() of the &lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; for the &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag, will return the following text:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43a02322182b85e506469aef0049ab611ada1d3" translate="yes" xml:space="preserve">
          <source>The function to remove rows from the model is also simple to write. The rows to be removed from the model are specified by the position and the number of rows given. We ignore the parent index to simplify our implementation, and just remove the corresponding items from the string list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0dd9863a52004e46fc4bf374b85af41e4bd8484" translate="yes" xml:space="preserve">
          <source>The function will be called only once for each material type that exists in the scene graph and will be cached internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f920979f985f8c8baf52b4f4a1b2da57297f91" translate="yes" xml:space="preserve">
          <source>The function will create all parent directories necessary to create the directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160833455c73cefdbdb06b15928fdb756d21819c" translate="yes" xml:space="preserve">
          <source>The function will remove all parent directories in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c745e056b8befb24cf3e2dbb827e74c4c24754f9" translate="yes" xml:space="preserve">
          <source>The function works by selecting a color from one of the corners and then chipping away pixels of that color, starting at all the edges. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d16203ab7bd8488ebbd208c3bc0fa6faf9a2d39" translate="yes" xml:space="preserve">
          <source>The function works by selecting a color from one of the corners, then chipping away pixels of that color starting at all the edges. The four corners vote for which color is to be masked away. In case of a draw (this generally means that this function is not applicable to the image), the result is arbitrary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20967e620a01b50262662e397babb665090e6130" translate="yes" xml:space="preserve">
          <source>The functionality in Qt 3D is divided into the following C++ modules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce6f331fc8be29ed7810f9c6be4e0b0be865ea6a" translate="yes" xml:space="preserve">
          <source>The functionality in Qt WebEngine is divided into the following modules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b0dce780b652bb7deca16c8cdbbbcf58307291" translate="yes" xml:space="preserve">
          <source>The functionality of this is only available if it is supported by the backend and if the sensor is orientable, which can be checked by calling &lt;a href=&quot;qsensor#isFeatureSupported&quot;&gt;QSensor::isFeatureSupported&lt;/a&gt;() with the &lt;a href=&quot;qsensor#Feature-enum&quot;&gt;QSensor::AxesOrientation&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a82c491491566772c4b13f94228ca14d2194835" translate="yes" xml:space="preserve">
          <source>The functionality of this module is divided into the following submodules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90953a9b3736082e280a7b80219f1e35af913bb" translate="yes" xml:space="preserve">
          <source>The functionality provided by this control allows the setting of a Network Access Point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d129166a1db62c40a81805d92311108a8ead88b" translate="yes" xml:space="preserve">
          <source>The functionality provided by this control is exposed to application code by the meta-data members of &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt;, and so meta-data access is potentially available in any of the media object classes. Any media service may implement &lt;a href=&quot;qmetadatareadercontrol&quot;&gt;QMetaDataReaderControl&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c18a3d8f1136de14db8f604db49bd3311a7dca8" translate="yes" xml:space="preserve">
          <source>The functionality provided by this control is exposed to application code by the meta-data members of &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt;, and so meta-data access is potentially available in any of the media object classes. Any media service may implement QMetaDataControl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c71294d4582cd8c8dc0640aeac0d7baffa5e7fc" translate="yes" xml:space="preserve">
          <source>The functionality provided by this control is exposed to application code through the &lt;a href=&quot;qaudiodecoder&quot;&gt;QAudioDecoder&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073d69916bfa1c94448909258763f290e9aa1580" translate="yes" xml:space="preserve">
          <source>The functionality provided by this control is exposed to application code through the &lt;a href=&quot;qcamera&quot;&gt;QCamera&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7bdb36f3970ccc509394b65f2f7869e01d5bf50" translate="yes" xml:space="preserve">
          <source>The functionality provided by this control is exposed to application code through the &lt;a href=&quot;qmediaplayer&quot;&gt;QMediaPlayer&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39cbfe078ebf90696771110a46c40650cdae1baf" translate="yes" xml:space="preserve">
          <source>The functionality provided by this control is exposed to application code through the &lt;a href=&quot;qmediarecorder&quot;&gt;QMediaRecorder&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8893dbd0fcd02ee6c2626ef4adcee4390c81a5b1" translate="yes" xml:space="preserve">
          <source>The functionality provided by this control is exposed to application code through the &lt;a href=&quot;qradiodata&quot;&gt;QRadioData&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179b0aba92a56b198b550022bb4f5eacb16d7ca6" translate="yes" xml:space="preserve">
          <source>The functionality provided by this control is exposed to application code through the &lt;a href=&quot;qradiotuner&quot;&gt;QRadioTuner&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053e791ba89adbd932335232cfcc813caaa17188" translate="yes" xml:space="preserve">
          <source>The functions &lt;a href=&quot;qaccessibleinterface#childCount&quot;&gt;childCount&lt;/a&gt;() and &lt;a href=&quot;qaccessibleinterface#indexOfChild&quot;&gt;indexOfChild&lt;/a&gt;() return the number of children of an accessible object and the index a child object has in its parent. The &lt;a href=&quot;qaccessibleinterface#childAt&quot;&gt;childAt&lt;/a&gt;() function returns a child &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; that is found at a position. The child does not have to be a direct child. This allows bypassing intermediate layers when the parent already knows the top-most child. &lt;a href=&quot;qaccessibleinterface#childAt&quot;&gt;childAt&lt;/a&gt;() is used for hit testing (finding the object under the mouse).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14f5511fb8ca5152835461c850e3d9af8b392b8" translate="yes" xml:space="preserve">
          <source>The functions &lt;a href=&quot;qbitarray#testBit&quot;&gt;testBit&lt;/a&gt;(), &lt;a href=&quot;qbitarray#setBit&quot;&gt;setBit&lt;/a&gt;(), and &lt;a href=&quot;qbitarray#clearBit&quot;&gt;clearBit&lt;/a&gt;() are slightly faster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810bb1fa452fa2ddced6f7aca6d337f36f03602b" translate="yes" xml:space="preserve">
          <source>The functions &lt;a href=&quot;qmouseevent#pos&quot;&gt;pos&lt;/a&gt;(), &lt;a href=&quot;qmouseevent#x&quot;&gt;x&lt;/a&gt;(), and &lt;a href=&quot;qmouseevent#y&quot;&gt;y&lt;/a&gt;() give the cursor position relative to the widget that receives the mouse event. If you move the widget as a result of the mouse event, use the global position returned by &lt;a href=&quot;qmouseevent#globalPos&quot;&gt;globalPos&lt;/a&gt;() to avoid a shaking motion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6e24d629b972fa546ba0945ce73754b2df6b02" translate="yes" xml:space="preserve">
          <source>The functions &lt;a href=&quot;qwheelevent#pos&quot;&gt;pos&lt;/a&gt;() and &lt;a href=&quot;qwheelevent#globalPos&quot;&gt;globalPos&lt;/a&gt;() return the mouse cursor's location at the time of the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d56b4caf185b0972b331c01d724da0c3cd934f6e" translate="yes" xml:space="preserve">
          <source>The functions &lt;a href=&quot;qxmlinputsource#data&quot;&gt;data&lt;/a&gt;() and &lt;a href=&quot;qxmlinputsource#fetchData&quot;&gt;fetchData&lt;/a&gt;() are useful if you want to do something with the data other than parsing, e.g. displaying the raw XML file. The benefit of using the QXmlInputClass in such cases is that it tries to use the correct encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524a24e42a067635bfaea415088014dce8e9ba1f" translate="yes" xml:space="preserve">
          <source>The functions accessing the property editor are the &lt;a href=&quot;qdesignerpropertyeditorinterface#core&quot;&gt;core&lt;/a&gt;() function that you can use to retrieve an interface to the form editor, the &lt;a href=&quot;qdesignerpropertyeditorinterface#currentPropertyName&quot;&gt;currentPropertyName&lt;/a&gt;() function that returns the name of the currently selected property in the property editor, the &lt;a href=&quot;qdesignerpropertyeditorinterface#object&quot;&gt;object&lt;/a&gt;() function that returns the currently selected object in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb5e31fbed10a5116cdb008a7514498ba9a1ed4" translate="yes" xml:space="preserve">
          <source>The functions and operators available with a &lt;a href=&quot;qpointer&quot;&gt;QPointer&lt;/a&gt; are the same as those available with a normal unguarded pointer, except the pointer arithmetic operators (&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;++&lt;/code&gt;, and &lt;code&gt;--&lt;/code&gt;), which are normally used only with arrays of objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ed49c284e805a53110515d7d90341d7e1a1ad8" translate="yes" xml:space="preserve">
          <source>The functions are divided into categories according to their type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3c936e1bb7225f5b884bdd3ec70c3f3e3cd432" translate="yes" xml:space="preserve">
          <source>The functions defined in an imported JavaScript file are available to objects defined in the importing QML document, via the &lt;code&gt;&quot;Qualifier.functionName(params)&quot;&lt;/code&gt; syntax. Functions in JavaScript resources may take parameters whose type can be any of the supported QML basic types or object types, as well as normal JavaScript types. The normal &lt;a href=&quot;qtqml-cppintegration-data#&quot;&gt;data type conversion rules&lt;/a&gt; will apply to parameters and return values when calling such functions from QML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7acde652b7ddfa6d0a5b7e48b4818dd04078caa" translate="yes" xml:space="preserve">
          <source>The functions in this class are used for communication between accessible applications (also called AT Servers) and accessibility tools (AT Clients), such as screen readers and braille displays. Clients and servers communicate in the following way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75d81fafc0c205c6eb1b2da2d3b733247c0c931" translate="yes" xml:space="preserve">
          <source>The functions provided by this class allow an ActiveX control to communicate property changes to a client application. Inherit your control class from both &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; (directly or indirectly) and this class to get access to this class's functions. The &lt;a href=&quot;moc&quot;&gt;meta-object compiler&lt;/a&gt; requires you to inherit from &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd0b961902f409e02cf8daa692258ab7d82f484" translate="yes" xml:space="preserve">
          <source>The functions that need to be implemented in a model subclass can be divided into three groups:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a707dfad3fd8f798f21698713709681c728cf9" translate="yes" xml:space="preserve">
          <source>The functions used to manipulate an image's pixels depend on the image format. The reason is that monochrome and 8-bit images are index-based and use a color lookup table, while 32-bit images store ARGB values directly. For more information on image formats, see the &lt;a href=&quot;qimage#image-formats&quot;&gt;Image Formats&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ace8911f115e082d7327265000d73ae3b01478" translate="yes" xml:space="preserve">
          <source>The functions you are most likely to find useful are these:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371868672643811c095617a022bc27f6e4120234" translate="yes" xml:space="preserve">
          <source>The functor-based connection syntax can connect signals to C++11 lambda expressions, which are effectively inline slots. This feature is not available with the string-based syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa789641f96925637207fcf433e61c9e49da775" translate="yes" xml:space="preserve">
          <source>The fundamental behavior of qmake is influenced by variable declarations that define the build process of each project. Some of these declare resources, such as headers and source files, that are common to each platform. Others are used to customize the behavior of compilers and linkers on specific platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffad6395005d42f0f1c162b7d5d5df14dfb72d53" translate="yes" xml:space="preserve">
          <source>The gamma level of the image. A handler that supports this option is expected to set the image gamma level depending on the value of this option (a float) when writing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f10c69982d940fc3609613e8ed66421e382b5e0" translate="yes" xml:space="preserve">
          <source>The gap can be different on different dimensions. The values are fractions of the volume thickness in the same dimension. The values cannot be negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770a8dd229fe62d17af03053defb468e93bdb382" translate="yes" xml:space="preserve">
          <source>The garbage collector may be invoked manually by calling &lt;code&gt;gc()&lt;/code&gt; within JavaScript. This will cause a comprehensive collection cycle to be performed, which may take from between a few hundred to more than a thousand milliseconds to complete, and so should be avoided if at all possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56df07dea0717d9239293b21163182a7951154bc" translate="yes" xml:space="preserve">
          <source>The garbage collector will attempt to reclaim memory by locating and disposing of objects that are no longer reachable in the script environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c5d18d8fbfb59aa269b98dc6ec0f688d079fced" translate="yes" xml:space="preserve">
          <source>The gauge displaying values at various points during the animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60147ec05f158fa15d660e37a8a385691bd3ed38" translate="yes" xml:space="preserve">
          <source>The gender of a voice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49be487efd164bd60c630c28fb8df81a74b2521" translate="yes" xml:space="preserve">
          <source>The general approach to using XQuery to perform queries on non-XML data has been a three step process. In the first step, the data is loaded into a non-XML data model. In the second step, the non-XML data model is serialized as XML and output to XML (text) files. In the final step, an XML tool loads the XML files into a second, XML data model, where the XQueries can be performed. The development cost of implementing this process is often high, and the three step system that results is inefficient because the two data models must be built and maintained separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac0475dab6a4ffe89cfd7bc7291cac7972623ab" translate="yes" xml:space="preserve">
          <source>The general button background color. This background can be different from &lt;code&gt;Window&lt;/code&gt; as some styles require a different background color for buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe4da05bdd2fddc3132d1853bdfde442b429a5bd" translate="yes" xml:space="preserve">
          <source>The general button background color. This background can be different from &lt;code&gt;palette.window&lt;/code&gt; as some styles require a different background color for buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5eb95c9468860851009061f18f29418d2a30c1" translate="yes" xml:space="preserve">
          <source>The general purpose options (and the associated types) are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f876c646745ca74a724ecd04c8a9fbb693567c" translate="yes" xml:space="preserve">
          <source>The general purpose roles (and the associated types) are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2b76eb60d9deae14e3dac0352b38ad3e33f940" translate="yes" xml:space="preserve">
          <source>The general purpose value (and the associated types) are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07042d4dc4c472f92029f05a887b9089bdfdb02" translate="yes" xml:space="preserve">
          <source>The general syntax is &lt;code&gt;alias.&lt;i&gt;original-command-name&lt;/i&gt; = &lt;i&gt;temporary-command-name&lt;/i&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863d712d705af45001e6841a91038d21ccc4c77f" translate="yes" xml:space="preserve">
          <source>The general syntax is &lt;code&gt;extraimages.&lt;i&gt;format&lt;/i&gt; = &lt;i&gt;image&lt;/i&gt;&lt;/code&gt;. The file extension is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e898eb287fe2699809596a231e449462ebcc0f" translate="yes" xml:space="preserve">
          <source>The generated C++ source files are named after the XML file: For the file &lt;code&gt;org.example.chat.xml&lt;/code&gt; the generated header will be named &lt;code&gt;orgexamplechatinterface.h&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce806c47a73feca4587dd6c721c5907a8d81666" translate="yes" xml:space="preserve">
          <source>The generated code can be included in your application and used directly from it. Alternatively, you can use it to extend subclasses of standard widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c2851cbd436891e0d9589e3653cb036b1ab27e" translate="yes" xml:space="preserve">
          <source>The generated file will be an HTML file using Qt documentation style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265c450972b403ed94a277e745c2781820397392" translate="yes" xml:space="preserve">
          <source>The generated file(s) will be of the form &lt;code&gt;rep_&amp;lt;replica file base&amp;gt;_replica.h&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52991daf216ff415d5a2838cca7023b05097683b" translate="yes" xml:space="preserve">
          <source>The generated file(s) will be of the form &lt;code&gt;rep_&amp;lt;replica file base&amp;gt;_source.h&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0b026ed6d96c103189deeec223aed1cfff15b8" translate="yes" xml:space="preserve">
          <source>The generated flag in each field of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43bb01b271640e7f06ab24e49b3dd9eb3d694d41" translate="yes" xml:space="preserve">
          <source>The generated keys will have the form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19bf04e4788cc748784e14059647379eb65a954e" translate="yes" xml:space="preserve">
          <source>The generated namespace will declare all enumerations, as well as one &lt;a href=&quot;qaxobject&quot;&gt;QAxObject&lt;/a&gt; subclass for each &lt;code&gt;coclass&lt;/code&gt; and &lt;code&gt;interface&lt;/code&gt; declared in the type library. coclasses marked with the &lt;code&gt;control&lt;/code&gt; attribute will be wrapped by a &lt;a href=&quot;qaxwidget&quot;&gt;QAxWidget&lt;/a&gt; subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f409bdeaf2e501f5468e4a9d0dea03eb25f63a25" translate="yes" xml:space="preserve">
          <source>The generated outlines will extend approximately 50% of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84b5ab2308ddd12f3b2ee60c4ca19fa1364a21a" translate="yes" xml:space="preserve">
          <source>The generated path should only be used for outlining the given painter path. Otherwise it may cause unexpected behavior. Generated outlines also require the &lt;a href=&quot;qt#FillRule-enum&quot;&gt;Qt::WindingFill&lt;/a&gt; rule which is set by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88945bed7ca86f709cfc89d91b5dacf22e9c8e9b" translate="yes" xml:space="preserve">
          <source>The generation of mipmaps to above</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d5f3e89a898530d72ccb667f94313c0051fda2" translate="yes" xml:space="preserve">
          <source>The generic algorithms can be used on other container classes than those provided by Qt and STL. The syntax of STL-style iterators is modeled after C++ pointers, so it's possible to use plain arrays as containers and plain pointers as iterators. A common idiom is to use qBinaryFind() together with two static arrays: one that contains a list of keys, and another that contains a list of associated values. For example, the following code will look up an HTML entity (e.g., &lt;code&gt;&amp;amp;amp&lt;/code&gt;;) in the &lt;code&gt;name_table&lt;/code&gt; array and return the corresponding Unicode value from the &lt;code&gt;value_table&lt;/code&gt; if the entity is recognized:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13d7d4fd7478bfaf08ea84cc4eaa8239667d40b" translate="yes" xml:space="preserve">
          <source>The generic form of a JavaScript resource import is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b614d8f4f55588afbe9db5a31e8485e08ff8e58" translate="yes" xml:space="preserve">
          <source>The generic form of a directory import is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc317f8d2137826746e39665d5ae70642ffc0b9" translate="yes" xml:space="preserve">
          <source>The generic form of a module import is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ca6f29c8a5c95eac89d2de30a5985f58057db7" translate="yes" xml:space="preserve">
          <source>The generic form of the various imports are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731ef9246ea04be556e2242081e0ccb81b4470ab" translate="yes" xml:space="preserve">
          <source>The generic sensor backend provides emulation of some of the sensors that are not supported on the platform. For example, on a platform without a rotation sensor but with an accelerometer, the accelerometer is used to calculate the rotation, thus providing an emulated rotation sensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8faaab0677ddbdc2b097d102e4beaae11fd65221" translate="yes" xml:space="preserve">
          <source>The generic, driver independent solution for OpenGL. Uses the same CPU-based triangulation approach as &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;'s OpenGL 2 paint engine. This is the default on non-NVIDIA hardware when the default, OpenGL Qt Quick scenegraph backend is in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd24cc2020dd9c6da0017e8c2d6a2cebdc29aedb" translate="yes" xml:space="preserve">
          <source>The genre of the media.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38f03aefe2e599d8bf8e0d2f4d708c2679d609a" translate="yes" xml:space="preserve">
          <source>The geo coordinate is valid if the &lt;a href=&quot;qgeocoordinate#longitude&quot;&gt;longitude&lt;/a&gt; and &lt;a href=&quot;qgeocoordinate#latitude&quot;&gt;latitude&lt;/a&gt; properties have been set to valid values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521e74d1f9c3bd24a5e69507a347abfbb63b1e73" translate="yes" xml:space="preserve">
          <source>The geocoding features are called from a higher level piece of code. In this snippet we see an &lt;a href=&quot;qml-qtpositioning-address&quot;&gt;Address&lt;/a&gt; object filled with the desired parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac650ab7a8656f20157a21811e2676f7990b5ba0" translate="yes" xml:space="preserve">
          <source>The geocoding manager that was used did not have a &lt;a href=&quot;qgeocodingmanagerengine&quot;&gt;QGeoCodingManagerEngine&lt;/a&gt; instance associated with it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abde68ea3bc75c9cc86e500f833e5182d24a8e7d" translate="yes" xml:space="preserve">
          <source>The geographic region displayed in the Map item is referred to as its viewport, and this is defined by the properties &lt;a href=&quot;qml-qtlocation-map#center-prop&quot;&gt;center&lt;/a&gt;, and &lt;a href=&quot;qml-qtlocation-map#zoomLevel-prop&quot;&gt;zoomLevel&lt;/a&gt;. The &lt;a href=&quot;qml-qtlocation-map#center-prop&quot;&gt;center&lt;/a&gt; property contains a &lt;a href=&quot;qml-coordinate&quot;&gt;coordinate&lt;/a&gt; specifying the center of the viewport, while &lt;a href=&quot;qml-qtlocation-map#zoomLevel-prop&quot;&gt;zoomLevel&lt;/a&gt; controls the scale of the map. See each of these properties for further details about their values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6abc4a16728a73021b636806076fcfa904dd01d" translate="yes" xml:space="preserve">
          <source>The geometry is in relation to the virtualGeometry() of its screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a53b20add9f0b323c4e3e8e9074286a2e3f6cd" translate="yes" xml:space="preserve">
          <source>The geometry is null by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85b833299b4ed05a4f52b0e40369abdd019ca1a" translate="yes" xml:space="preserve">
          <source>The geometry node supports two types of materials, the &lt;a href=&quot;qsggeometrynode#opaqueMaterial&quot;&gt;opaqueMaterial&lt;/a&gt; and the normal material. The &lt;a href=&quot;qsggeometrynode#opaqueMaterial&quot;&gt;opaqueMaterial&lt;/a&gt; is used when the accumulated scene graph opacity at the time of rendering is 1. The primary use case is to special case opaque rendering to avoid an extra operation in the fragment shader can have significant performance impact on embedded graphics chips. The opaque material is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34883a45e654738fad36b8b49152a24edfbcc0a9" translate="yes" xml:space="preserve">
          <source>The geometry of a &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt; has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae72c5661a5a4d9a26cffbe82f8f241875beada" translate="yes" xml:space="preserve">
          <source>The geometry of the &lt;a href=&quot;qml-qtquick-controls2-control#contentItem-prop&quot;&gt;contentItem&lt;/a&gt; is determined by the padding. The following example reserves 10px padding between the boundaries of the control and its content:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b37f8d148bb1bc427755e64b6f86e669b4374a" translate="yes" xml:space="preserve">
          <source>The geometry of the &lt;a href=&quot;qml-qtquick-controls2-popup#contentItem-prop&quot;&gt;contentItem&lt;/a&gt; is determined by the padding. The following example reserves 10px padding between the boundaries of the popup and its content:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a0ae52cdaf6cff29cfdc7ceda557199bf6db60" translate="yes" xml:space="preserve">
          <source>The geometry of the newly inserted widget will be the same as the widget it replaces. Its visible and collapsed states are also inherited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aedfbb06a96b74638f997ad8735746c7ea2afccf" translate="yes" xml:space="preserve">
          <source>The geometry to be rendered with a flat color material requires vertices in attribute location 0 in the &lt;a href=&quot;qsggeometry&quot;&gt;QSGGeometry&lt;/a&gt; object to render correctly. The &lt;a href=&quot;qsggeometry#defaultAttributes_Point2D&quot;&gt;QSGGeometry::defaultAttributes_Point2D&lt;/a&gt;() returns an attribute set compatible with this material.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92112628508ad9444e8ce854ec94f960b1f5b681" translate="yes" xml:space="preserve">
          <source>The geometry to be rendered with a texture material requires vertices in attribute location 0 and texture coordinates in attribute location 1. The texture coordinate is a 2-dimensional floating-point tuple. The &lt;a href=&quot;qsggeometry#defaultAttributes_TexturedPoint2D&quot;&gt;QSGGeometry::defaultAttributes_TexturedPoint2D&lt;/a&gt; returns an attribute set compatible with this material.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2e70cb0f466ecc796f189137490fb2bdd45577" translate="yes" xml:space="preserve">
          <source>The geometry to be rendered with an opaque texture material requires vertices in attribute location 0 and texture coordinates in attribute location 1. The texture coordinate is a 2-dimensional floating-point tuple. The &lt;a href=&quot;qsggeometry#defaultAttributes_TexturedPoint2D&quot;&gt;QSGGeometry::defaultAttributes_TexturedPoint2D&lt;/a&gt; returns an attribute set compatible with this material.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f713db99d3380a340d008a1f4d8e0ec25c3be2" translate="yes" xml:space="preserve">
          <source>The geometry to be rendered with vertex color must have the following layout. Attribute position 0 must contain vertices. Attribute position 1 must contain colors, a tuple of 4 values with RGBA layout. Both floats in the range of 0 to 1 and unsigned bytes in the range 0 to 255 are valid for the color values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9bffdaa90bd0eae1b8b2005b465c320deb14a17" translate="yes" xml:space="preserve">
          <source>The geometry, size hint, and size policy affect the item's size and position. Calling &lt;a href=&quot;qgraphicslayoutitem#setGeometry&quot;&gt;setGeometry&lt;/a&gt;() will always resize and reposition the item immediately. Normally, this function is called by &lt;a href=&quot;graphicsview#qgraphicslayout&quot;&gt;QGraphicsLayout&lt;/a&gt; after the layout has been activated, but it can also be called by the item's user at any time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6cd9029d4de8c46796cfd954de029510c8ac550" translate="yes" xml:space="preserve">
          <source>The geoservice provider library could not be loaded. Setting &lt;a href=&quot;plugins-howto&quot;&gt;QT_DEBUG_PLUGINS&lt;/a&gt; environment variable may help diagnosing the problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4bdc51d526ee68f5d859dbabfa7546d1fbc305d" translate="yes" xml:space="preserve">
          <source>The gesture had no motion associated with it on a particular axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9b82502fc5330bcffa6609a455336dfc9dc5e1" translate="yes" xml:space="preserve">
          <source>The gesture has been finished successfully and the appropriate &lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; object will be delivered to the target as a part of a &lt;a href=&quot;qgestureevent&quot;&gt;QGestureEvent&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3b6d879f738e80b8e3f430ea3e11117478ad1b" translate="yes" xml:space="preserve">
          <source>The gesture has been triggered and the appropriate &lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; object will be delivered to the target as a part of a &lt;a href=&quot;qgestureevent&quot;&gt;QGestureEvent&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718465547921e7d2562bbaaf17d158b0bc3549df" translate="yes" xml:space="preserve">
          <source>The gesture involved a downward vertical motion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44437247a6ecf59ace2d6119286c882f3b9f297b" translate="yes" xml:space="preserve">
          <source>The gesture involved a horizontal motion to the left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a934b8f6910f65d0c3cf761cf9d5119a86a3cf3" translate="yes" xml:space="preserve">
          <source>The gesture involved a horizontal motion to the right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f4268d8bcf7393a6fd80479fc4eaf93f8f059a" translate="yes" xml:space="preserve">
          <source>The gesture involved an upward vertical motion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f956401628719f5cf62d4c534a9fee0a176d4e44" translate="yes" xml:space="preserve">
          <source>The gesture object also includes information on the current set of &lt;code&gt;touchPoints&lt;/code&gt; and the &lt;code&gt;dragThreshold&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d42f142d23e8f4fac054b7e54de1878137d59b7" translate="yes" xml:space="preserve">
          <source>The gesture object may be delivered to the target object in a &lt;a href=&quot;qgestureevent&quot;&gt;QGestureEvent&lt;/a&gt; if the corresponding gesture is active or has just been canceled. Each event that is delivered contains a list of gesture objects, since support for more than one gesture may be enabled for the target object. Due to the way events are handled in Qt, gesture events may be filtered by other objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7d52c525e563ea4e8f309aa11f10944356b4525" translate="yes" xml:space="preserve">
          <source>The gesture recognizer will only trigger on left mouse button events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de19ccf024c557b59f24cdf32d8883c58b2f06bb" translate="yes" xml:space="preserve">
          <source>The gesture recognizer will only trigger on middle mouse button events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c969105e1687bf96c5d4eeab930f8aebdf02244c" translate="yes" xml:space="preserve">
          <source>The gesture recognizer will only trigger on right mouse button events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490146936443c80a0ec377272cde3a5ff404e0ba" translate="yes" xml:space="preserve">
          <source>The gesture recognizer will only trigger on touch events. Specifically it will react on single touch points when using a touch screen and dual touch points when using a touchpad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10177835ae5454db07d664da5f0eb0d83240223" translate="yes" xml:space="preserve">
          <source>The gestures are either active or canceled. A list of those that are currently being executed can be obtained using the &lt;a href=&quot;qgestureevent#activeGestures&quot;&gt;activeGestures&lt;/a&gt;() function. A list of those which were previously active and have been canceled can be accessed using the &lt;a href=&quot;qgestureevent#canceledGestures&quot;&gt;canceledGestures&lt;/a&gt;() function. A gesture might be canceled if the current window loses focus, for example, or because of a timeout, or for other reasons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0842de2ad754c637198f0055756cc8e5d1a9f046" translate="yes" xml:space="preserve">
          <source>The given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f522b7abf42132284c8a57731b648460016eae" translate="yes" xml:space="preserve">
          <source>The given &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; does not have &lt;a href=&quot;qobject#objectName-prop&quot;&gt;objectName&lt;/a&gt;() set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c07ad0dddb0056d948f092f04c1c5a1deec17038" translate="yes" xml:space="preserve">
          <source>The given &lt;a href=&quot;qremoteobjectnode&quot;&gt;QRemoteObjectNode&lt;/a&gt; is not a host node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6bd16805738b0a7ec4e88b7d2eb38ae31b22abc" translate="yes" xml:space="preserve">
          <source>The given QRemoteObjectSource is not registered on this node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10b0eadab407095319888109d3d71cd0d2ed78a" translate="yes" xml:space="preserve">
          <source>The given input data could not be used to construct a &lt;a href=&quot;qssldiffiehellmanparameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f4c89f2e0e949da236f91fc64066d8df6755a5" translate="yes" xml:space="preserve">
          <source>The given invert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db20d31436ea4055119b617edef38fd66b6bb6e" translate="yes" xml:space="preserve">
          <source>The given url has an invalid or unrecognized scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563e72e52bda9996536fff859f4f922a1933f144" translate="yes" xml:space="preserve">
          <source>The given window</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75381847bd366b731aeecca5438e2f0b967716d9" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;qApp&lt;/code&gt; pointer refers to this application object. Only one application object should be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98486003ade2d880c8983a0cb919aa713a433fc3" translate="yes" xml:space="preserve">
          <source>The global declarations include &lt;a href=&quot;qtglobal#types&quot;&gt;types&lt;/a&gt;, &lt;a href=&quot;qtglobal#functions&quot;&gt;functions&lt;/a&gt; and &lt;a href=&quot;qtglobal#macros&quot;&gt;macros&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7e33f2d465dc9ea415a523f453e6f1b68d072d" translate="yes" xml:space="preserve">
          <source>The global position of the layout. This is independent of the bounding rectangle and of the layout process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b331fcf6a3a2940fee3a90c7ef2a7cc1c3b6aa64" translate="yes" xml:space="preserve">
          <source>The glow is created by blurring the image live using a gaussian blur. Performing blur live is a costly operation. Fullscreen gaussian blur with even a moderate number of samples will only run at 60 fps on highend graphics hardware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00718d2768b75232708baf4f0d628143b167b83" translate="yes" xml:space="preserve">
          <source>The goal of this module is to provide a way to handle different authentication methods present on the Internet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f588cceeb1582ba4a09d77f704ee502a25fe039" translate="yes" xml:space="preserve">
          <source>The grab happens asynchronously and the JavaScript function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3ec38fb2e7f0a6d60e459c79b965af0bc2af2c" translate="yes" xml:space="preserve">
          <source>The grab happens asynchronously and the signal &lt;a href=&quot;qquickitemgrabresult#ready&quot;&gt;QQuickItemGrabResult::ready&lt;/a&gt;() is emitted when the grab has been completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96804a79dab6eae0067e67eba5b2573d09177c55" translate="yes" xml:space="preserve">
          <source>The grabWindow() function grabs pixels from the screen, not from the window, i.e. if there is another window partially or entirely over the one you grab, you get pixels from the overlying window, too. The mouse cursor is generally not grabbed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c7e867a112dd5227e43fdabbbe02dd361931e7" translate="yes" xml:space="preserve">
          <source>The grabbed position within the scene</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb8332871f881c410421f933a3c0301ee32e1afa" translate="yes" xml:space="preserve">
          <source>The gradient coordinates can be specified in logical coordinates, relative to device coordinates, or relative to object bounding box coordinates. The &lt;a href=&quot;qgradient#CoordinateMode-enum&quot;&gt;coordinate mode&lt;/a&gt; can be set using the &lt;a href=&quot;qgradient#setCoordinateMode&quot;&gt;setCoordinateMode&lt;/a&gt;() function. The default is &lt;a href=&quot;qgradient#CoordinateMode-enum&quot;&gt;LogicalMode&lt;/a&gt;, where the gradient coordinates are specified in the same way as the object coordinates. To retrieve the currently set &lt;a href=&quot;qgradient#CoordinateMode-enum&quot;&gt;coordinate mode&lt;/a&gt; use &lt;a href=&quot;qgradient#coordinateMode&quot;&gt;coordinateMode&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110a03717fc27b950a5eddb42db6f526fd080e32" translate="yes" xml:space="preserve">
          <source>The gradient is reflected outside the gradient area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50a894de0fb7093b5140abf4c44905a588d69374" translate="yes" xml:space="preserve">
          <source>The gradient is repeated outside the gradient area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3781fc8686e48c86f3663a14ece9da6d58ca4348" translate="yes" xml:space="preserve">
          <source>The gradient of the progress bar around the button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25bd5675762b447cfeb94861b8b988e093dea852" translate="yes" xml:space="preserve">
          <source>The gradient that is displayed on the checked state indicator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4a346bb6a6f54c79832f26a1baad8372551751" translate="yes" xml:space="preserve">
          <source>The gradient that is displayed on the inactive state indicator. The inactive state indicator will be the checked gradient when the button is unchecked, and the unchecked gradient when the button is checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a2db9ad00a26241c98f588799d03496e37d742" translate="yes" xml:space="preserve">
          <source>The gradient that is displayed on the unchecked state indicator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625f876bcd7d9043c8cfbaf7be9889c1bca481a2" translate="yes" xml:space="preserve">
          <source>The gradient to use to fill the rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bbf387d6186f96d3f2e748fe5859c5cb22d47bd" translate="yes" xml:space="preserve">
          <source>The granularity is used by &lt;a href=&quot;qgraphicsitem#boundingRegion&quot;&gt;boundingRegion&lt;/a&gt;() to calculate how fine the bounding region of the item should be. The highest achievable granularity is 1, where &lt;a href=&quot;qgraphicsitem#boundingRegion&quot;&gt;boundingRegion&lt;/a&gt;() will return the finest outline possible for the respective device (e.g., for a &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; viewport, this gives you a pixel-perfect bounding region). The lowest possible granularity is 0. The value of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c30a8852767ce18f08813ecfd760abcb9f242f" translate="yes" xml:space="preserve">
          <source>The graphic commands makes it possible to include images in the documentation. The images can be rendered as separate paragraphs, or within running text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e552a1553256af691d11774037b1253b121be5" translate="yes" xml:space="preserve">
          <source>The graphics anchor provides an API that enables you to query and manipulate the properties an anchor has. When an anchor is added to the layout with &lt;a href=&quot;qgraphicsanchorlayout#addAnchor&quot;&gt;QGraphicsAnchorLayout::addAnchor&lt;/a&gt;(), a &lt;a href=&quot;qgraphicsanchor&quot;&gt;QGraphicsAnchor&lt;/a&gt; instance is returned where the properties are initialized to their default values. The properties can then be further changed, and they will be picked up the next time the layout is activated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7960a03584d1a63c74beff68541d05113b62d129" translate="yes" xml:space="preserve">
          <source>The graphics command queue used by the scenegraph, when applicable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf52124f2937d467aba7dc2a9d246125947b1eaf" translate="yes" xml:space="preserve">
          <source>The graphics context used for rendering the scene graph will be bound at this point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61fba740b3fdc526325000c312da308a11562de9" translate="yes" xml:space="preserve">
          <source>The graphics device, when applicable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e0cd3c38929f0bfb416bf98882a4217bcf4458" translate="yes" xml:space="preserve">
          <source>The graphicsEffect function returns a pointer to the widget's graphics effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821f23f84e20ec8971ca9b3a38a116cd448cbede" translate="yes" xml:space="preserve">
          <source>The gray value is calculated using the formula (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2587b92bc1abbcc0d8fe66063766379c4e5ed79c" translate="yes" xml:space="preserve">
          <source>The gray value is calculated using the formula (R * 11 + G * 16 + B * 5)/32; the alpha-channel is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5874bfbf44048b7c58b47e41bac315f47117fc" translate="yes" xml:space="preserve">
          <source>The greediness of the quantifiers is inverted: &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;{m,n}&lt;/code&gt;, etc. become lazy, while their lazy versions (&lt;code&gt;*?&lt;/code&gt;, &lt;code&gt;+?&lt;/code&gt;, &lt;code&gt;??&lt;/code&gt;, &lt;code&gt;{m,n}?&lt;/code&gt;, etc.) become greedy. There is no equivalent for this option in Perl regular expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e7916e8ad9348d1c19de0e0c087296eb58fc91" translate="yes" xml:space="preserve">
          <source>The green component. Equivalent to GL_TEXTURE_SWIZZLE_G</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af09da258a5eb2d3e119878e6b093c4f79b3ee7" translate="yes" xml:space="preserve">
          <source>The green rectangle has no x,y specified, so its position defaults to (0,0). Because it is at (0,0) in the coordinates of its parent, the blue rectangle, it is positioned at the top left corner of that rectangle. This is the same point as the white dot at (100,100) in the coordinates of the red rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d5485c522b6e55d38832b70917c6dfc9601395" translate="yes" xml:space="preserve">
          <source>The grip can be styled be using the &lt;a href=&quot;#image-prop&quot;&gt;image&lt;/a&gt; property. The arrow indicators can by styled using the &lt;a href=&quot;#left-arrow-sub&quot;&gt;::left-arrow&lt;/a&gt; subcontrol and the &lt;a href=&quot;#right-arrow-sub&quot;&gt;::right-arrow&lt;/a&gt; subcontrol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dddd465a668b84ce059b835ddf398a1526876892" translate="yes" xml:space="preserve">
          <source>The groove for the dial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a52e963d8b2706ec8ab83802f31c0bdafa81f7" translate="yes" xml:space="preserve">
          <source>The groove of a &lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0a11da6e2b8a40d3779641a5237e53417dc486" translate="yes" xml:space="preserve">
          <source>The groove of the slider is styled using the &lt;a href=&quot;#groove-sub&quot;&gt;::groove&lt;/a&gt;. The groove is positioned by default in the Contents rectangle of the widget. The thumb of the slider is styled using &lt;a href=&quot;#handle-sub&quot;&gt;::handle&lt;/a&gt; subcontrol. The subcontrol moves in the Contents rectangle of the groove subcontrol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad9b5928666e99a1a11649086e0b67ac6e6d733" translate="yes" xml:space="preserve">
          <source>The groove where the progress indicator is drawn in a &lt;a href=&quot;qprogressbar&quot;&gt;QProgressBar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abe808670e745da552c0d2d39c0478df47a64b7" translate="yes" xml:space="preserve">
          <source>The ground speed, in meters/sec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb8f47d03de5a7daab9c01416eff322fbcc1c06" translate="yes" xml:space="preserve">
          <source>The group box contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc3584f33f46427b87b8d4baa7205b2ea2c0c7b" translate="yes" xml:space="preserve">
          <source>The group box title text will have a keyboard shortcut if the title contains an ampersand ('&amp;amp;') followed by a letter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b935236032fa684027716e143e4a844123a69a" translate="yes" xml:space="preserve">
          <source>The group in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6936a051fb631cbf87dc7f47ad82ceabbc579dd1" translate="yes" xml:space="preserve">
          <source>The grouping commands relate classes to defined groups and modules. The groups are used when generating lists of related classes in the documentation, while the modules are elements of Qt's structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04bf6dd4d5fe99abc711013c6b1714b5107aad60" translate="yes" xml:space="preserve">
          <source>The handle (slider) of a &lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt;, a &lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt;, or a &lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd60b952b0b3e78070d10076646117b89b78bd1f" translate="yes" xml:space="preserve">
          <source>The handle (to move the toolbar) is styled using the &lt;a href=&quot;#handle-sub&quot;&gt;::handle&lt;/a&gt; subcontrol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9c9d10b385f6c69ee74cc9a89f6a6ce883c9f5" translate="yes" xml:space="preserve">
          <source>The handle acts as a visual indicator of the position of the dial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5144c6a512c58293712f828acb10df737eeca3c1" translate="yes" xml:space="preserve">
          <source>The handle contains pointer to &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; CIImage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb87ce288e3d7c1f8179591c25269f20a86e42e" translate="yes" xml:space="preserve">
          <source>The handle contains pointer to shared memory XVideo image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ebc8065a10d21bc09d37174601fea2298c07bff" translate="yes" xml:space="preserve">
          <source>The handle is automatically positioned within the dial, based on the &lt;a href=&quot;qml-qtquick-controls-styles-dialstyle#handleInset-prop&quot;&gt;handleInset&lt;/a&gt; and the implicit width and height of the handle itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cdfba6e839a50201fe6d728a4aafe309410cd0f" translate="yes" xml:space="preserve">
          <source>The handle is being dragged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcdb5e289d7dd1e94d4c7a6bcb271053fbce36a5" translate="yes" xml:space="preserve">
          <source>The handle is being hovered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b1052c474401606b4714214437319f38229d8c" translate="yes" xml:space="preserve">
          <source>The handle is being pressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8983a23c28fb8ce1de81b0259cfece282a0cfba2" translate="yes" xml:space="preserve">
          <source>The handle of a toolbar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b9a7ead8e552a613ab30bb5bcc4f96d97e0f8c" translate="yes" xml:space="preserve">
          <source>The handle of the buffer is a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb4a2475b7a37adf2ef2f9b6f4c1ccf4197a6c0" translate="yes" xml:space="preserve">
          <source>The handle of the buffer is an EGLImageKHR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="419a281b77cf5e9a1b221b087201d887acecc416" translate="yes" xml:space="preserve">
          <source>The handle of the buffer is an OpenGL texture ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d58743949996e1fc4ef14341eea873d5b03e92" translate="yes" xml:space="preserve">
          <source>The handle of the dial (i.e. what you use to control the dial).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1549251d5c7bc12a773f9585d8c728403c663e0" translate="yes" xml:space="preserve">
          <source>The handle of the dial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c48321f495bd08a9c1fb0c67c154596e707f5bd" translate="yes" xml:space="preserve">
          <source>The handle returned here is database-dependent, you should query the type name of the variant before accessing it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c19e5b1f1d38906a205d779f777c350ee977e7" translate="yes" xml:space="preserve">
          <source>The handler for these events is &lt;a href=&quot;qobject#childEvent&quot;&gt;QObject::childEvent&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e84d5531638ab3c6250a90eefd652702be0d1c" translate="yes" xml:space="preserve">
          <source>The handler is called when the widget's &lt;a href=&quot;qwidget#contextMenuPolicy-prop&quot;&gt;contextMenuPolicy&lt;/a&gt; is &lt;a href=&quot;qt#ContextMenuPolicy-enum&quot;&gt;Qt::DefaultContextMenu&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade7e6dc5bbfc259b8853e759938d8492900000b" translate="yes" xml:space="preserve">
          <source>The handler is created with the parent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f86c2d972d2a7780fb8f4037b9994ef56384d4" translate="yes" xml:space="preserve">
          <source>The handler should support being called multiple times for the same purchase. For example, the application execution might by accident be interrupted after saving the purchase information, but before finalizing the transaction. In this case, the handler should verify that the information is already stored in the persistent storage and then finalize the transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64bbee2d6b1a9c17abc1af00c4a6605eb522397d" translate="yes" xml:space="preserve">
          <source>The handwriting layout may also include &lt;a href=&quot;qml-qtquick-virtualkeyboard-changelanguagekey&quot;&gt;ChangeLanguageKey&lt;/a&gt;. For this purpose, it is important to use the &lt;a href=&quot;qml-qtquick-virtualkeyboard-changelanguagekey#customLayoutsOnly-prop&quot;&gt;customLayoutsOnly&lt;/a&gt; attribute, which will filter out languages that do not use handwriting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c29ce99e7b53563bc81552b6b4f51be6b22eb6f" translate="yes" xml:space="preserve">
          <source>The handwriting mode can be activated by pressing the handwriting key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a25c98cd5df6cbaf15fd95734ab4c68c42a225c6" translate="yes" xml:space="preserve">
          <source>The hard minimum font size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c13b7b9a740231a4b13bdb3e9b2b546ae56dc4" translate="yes" xml:space="preserve">
          <source>The harddrive icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2da3876986018e533656cec13a06df8b10f057" translate="yes" xml:space="preserve">
          <source>The hardware or platform is old and only supports X11; in which case you have no choice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917a2436da3f29b504c1005546726069fe47137f" translate="yes" xml:space="preserve">
          <source>The hash value is independent of the order of elements in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6c22a642edc1ad63815d46dd404d6b859b1115" translate="yes" xml:space="preserve">
          <source>The header displays ISO week numbers as described by &lt;a href=&quot;qdate#weekNumber&quot;&gt;QDate::weekNumber&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d685bb6f33e24542f194a11a6fe08dea4f840f0" translate="yes" xml:space="preserve">
          <source>The header displays a short abbreviation for day names (e.g. Mon for Monday).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966775cda2b251eeb1026160f450a1910e70c6ba" translate="yes" xml:space="preserve">
          <source>The header displays a single letter abbreviation for day names (e.g. M for Monday).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1604785d3a78e2b2f5b73cc94e0a31f673d977a" translate="yes" xml:space="preserve">
          <source>The header displays complete day names (e.g. Monday).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36dba119c1ffbdf67d0ac0db959f00388c90e42" translate="yes" xml:space="preserve">
          <source>The header file &lt;code&gt;&amp;lt;QtGlobal&amp;gt;&lt;/code&gt; contains some debugging macros and &lt;code&gt;#define&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab5ec75d0c2883b104b8e4fa85468f11792c2a9" translate="yes" xml:space="preserve">
          <source>The header file associated with the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3a02d8311c0941ee3eacf121f058dd10862737" translate="yes" xml:space="preserve">
          <source>The header file declares several type definitions that guarantee a specified bit-size on all platforms supported by Qt for various basic types, for example &lt;a href=&quot;qtglobal#qint8-typedef&quot;&gt;qint8&lt;/a&gt; which is a signed char guaranteed to be 8-bit on all platforms supported by Qt. The header file also declares the &lt;a href=&quot;qtglobal#qlonglong-typedef&quot;&gt;qlonglong&lt;/a&gt; type definition for &lt;code&gt;long long int&lt;/code&gt; (&lt;code&gt;__int64&lt;/code&gt; on Windows).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6617750b2eb07db0651bc4fabf64619609e47dc4" translate="yes" xml:space="preserve">
          <source>The header file that must be included in applications that use this widget. This information is stored in UI files and will be used by &lt;code&gt;uic&lt;/code&gt; to create a suitable &lt;code&gt;#includes&lt;/code&gt; statement in the code it generates for the form containing the custom widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c499288542e52338c5d03219dba706dcabb0ab73" translate="yes" xml:space="preserve">
          <source>The header gets the data for each section from the model using the &lt;a href=&quot;qabstractitemmodel#headerData&quot;&gt;QAbstractItemModel::headerData&lt;/a&gt;() function. You can set the data by using &lt;a href=&quot;qabstractitemmodel#setHeaderData&quot;&gt;QAbstractItemModel::setHeaderData&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea314ff332f4e360acc5e6eb5658b9d8d7b0afc" translate="yes" xml:space="preserve">
          <source>The header is hidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b62d86e5d0263c9839d8d66fc2c9d6fce759ba" translate="yes" xml:space="preserve">
          <source>The header is rendered at the top of the generated documentation page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cacbd744ad394f2cb2ebcf1d914dc3aa2406b9a3" translate="yes" xml:space="preserve">
          <source>The header sections are attached to values in the &lt;a href=&quot;qml-qtquick-controls-tableview#model-prop&quot;&gt;model&lt;/a&gt; by defining the model role they attach to. Each property in the model will then be shown in their corresponding column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd769fee6af9469de6403e241e05c25956697f58" translate="yes" xml:space="preserve">
          <source>The header sections are attached to values in the &lt;a href=&quot;qml-qtquick-controls-treeview#model-prop&quot;&gt;model&lt;/a&gt; by defining the model role they attach to. Each property in the model will then be shown in their corresponding column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75e4e130ffd089376ab8e7cbf68eadc5d13a41c" translate="yes" xml:space="preserve">
          <source>The header's label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d929b86b8be6c9adfd62ba62b7d340668c8f5418" translate="yes" xml:space="preserve">
          <source>The headers for the QVulkan classes may include &lt;code&gt;vulkan.h&lt;/code&gt; with &lt;code&gt;VK_NO_PROTOTYPES&lt;/code&gt; enabled. This can cause issues in C++ wrapper headers that rely on the prototypes. Hence in application code it may be necessary to include &lt;code&gt;vulkan.hpp&lt;/code&gt; or similar before any of the QVulkan headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af759ad059e709296e4e2fc8931b9c2e40ae0394" translate="yes" xml:space="preserve">
          <source>The heartbeat (only helpful for socket connections) will periodically send a message to connected nodes to detect whether the connection was disrupted. Qt Remote Objects will try to reconnect automatically if it detects a dropped connection. This function can help with that detection since the client will only detect that the server is unavailable when it tries to send data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7fbdd72d90c12fa0ee1e89743e6ea134175f656" translate="yes" xml:space="preserve">
          <source>The height in pixels the &lt;a href=&quot;qml-qtquick-particles-trailemitter#emitShape-prop&quot;&gt;emitShape&lt;/a&gt; is scaled to. If set to &lt;a href=&quot;qml-qtquick-particles-trailemitter&quot;&gt;TrailEmitter&lt;/a&gt;.ParticleSize, the height will be the current size of the particle being followed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b6a3d64efb146c7b9cc0eaae573379527394d2" translate="yes" xml:space="preserve">
          <source>The height is obtained from the first item in the view. It is updated when the data changes on that item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7bea780348b6841b263895342e5daf98c5d38a" translate="yes" xml:space="preserve">
          <source>The height map is resolved asynchronously. &lt;a href=&quot;qsurfacedataproxy#arrayReset&quot;&gt;QSurfaceDataProxy::arrayReset&lt;/a&gt;() is emitted when the data has been resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d183d6bf996fbe06f9ed6503ec595ed6d5309a3" translate="yes" xml:space="preserve">
          <source>The height of a split item with &lt;code&gt;fillHeight&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; is still restricted within its &lt;a href=&quot;qml-qtquick-controls2-splitview#minimumHeight-attached-prop&quot;&gt;minimumHeight&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-splitview#maximumHeight-attached-prop&quot;&gt;maximumHeight&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39abfa59286bcc8517911adc6ca1263c10b560c" translate="yes" xml:space="preserve">
          <source>The height of a subcontrol (or in some case, a widget).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac702dc261481dbe6a67f2dceec19cfa02febe73" translate="yes" xml:space="preserve">
          <source>The height of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf29444666b2b1799193c06df4fb702a1c88623" translate="yes" xml:space="preserve">
          <source>The height of the 3D texture defining the volume content in pixels. Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4402ac92ed1e85e72b6ae0ea60ff9f5a859986c7" translate="yes" xml:space="preserve">
          <source>The height of the &lt;a href=&quot;qml-qtquick-controls2-splitview&quot;&gt;SplitView&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ce0ee7e45c777d5bec4c41aa23d97cc967bb3d" translate="yes" xml:space="preserve">
          <source>The height of the bounding rectangle is at least as large as the value returned &lt;a href=&quot;qfontmetricsf#height&quot;&gt;height&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f0f4063edb487c3068a4001f6262ebe56fcaf4" translate="yes" xml:space="preserve">
          <source>The height of the bounding rectangle is at least as large as the value returned by &lt;a href=&quot;qfontmetrics#height&quot;&gt;height&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d019f22e96c50a3b2f1b0a18cdfe36bcbaccb5a4" translate="yes" xml:space="preserve">
          <source>The height of the image is read from the red component of the pixels if the image is in grayscale, otherwise it is an average calculated from red, green and blue components of the pixels. Using grayscale images may improve data conversion speed for large images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c230044a1694f0543924672c559024ffd04fb8" translate="yes" xml:space="preserve">
          <source>The height of the optional spin box slider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f716716778abe345105464bda15c33d6f0000866" translate="yes" xml:space="preserve">
          <source>The height of the paint device in default coordinate system units (e.g. pixels for &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; and &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;). See also &lt;a href=&quot;qpaintdevice#height&quot;&gt;height&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6efd203d5e6a8ef2eb021e0c84fb87aed897cd2d" translate="yes" xml:space="preserve">
          <source>The height of the paint device in millimeters. See also &lt;a href=&quot;qpaintdevice#heightMM&quot;&gt;heightMM&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1ddce1caaaff60a85fdd0b3705ac94926792d9" translate="yes" xml:space="preserve">
          <source>The height of the text content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062cf6c0dfe9a35381aee5301ed0ba5f20e90566" translate="yes" xml:space="preserve">
          <source>The height of the weekday row is calculated based on the maximum implicit height of the delegates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251b1ebadb5b3172d46798a21d66b974b8c3c3ab" translate="yes" xml:space="preserve">
          <source>The height of the widget will be set to match the height of the scroll bar. To control the width of the widget, use &lt;a href=&quot;qwidget#minimumWidth-prop&quot;&gt;QWidget::setMinimumWidth&lt;/a&gt; and &lt;a href=&quot;qwidget#maximumWidth-prop&quot;&gt;QWidget::setMaximumWidth&lt;/a&gt;, or implement &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;QWidget::sizeHint&lt;/a&gt;() and set a horizontal size policy. If you want a square widget, call &lt;a href=&quot;qstyle#pixelMetric&quot;&gt;QStyle::pixelMetric&lt;/a&gt;(&lt;a href=&quot;qstyle#PixelMetric-enum&quot;&gt;QStyle::PM_ScrollBarExtent&lt;/a&gt;) and set the width to this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e059c42548baf7dc726a6440d57f4d208e764d08" translate="yes" xml:space="preserve">
          <source>The help collection file that &lt;a href=&quot;qhelpengine&quot;&gt;QHelpEngine&lt;/a&gt; operates on. It can contain references to any number of compressed help files as well as additional information, such as custom filters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3545deb1cba769f8f1145713b0607a65e9c42fcb" translate="yes" xml:space="preserve">
          <source>The help engine also offers the possibility to set and read values in a persistant way comparable to ini files or Windows registry entries. For more information see setValue() or value().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2537c486521f372d2898f63d82bf8deed6a6456a" translate="yes" xml:space="preserve">
          <source>The help engine can contain any number of custom filters. The management of the filters, including adding new filters, changing filter definitions, or removing existing filters, is done through the &lt;a href=&quot;qhelpfilterengine&quot;&gt;QHelpFilterEngine&lt;/a&gt; class, which can be accessed by the &lt;a href=&quot;qhelpenginecore#filterEngine&quot;&gt;filterEngine&lt;/a&gt;() method. This replaces older filter API that is deprecated since Qt 5.13. Please call &lt;a href=&quot;qhelpenginecore#setUsesFilterEngine&quot;&gt;setUsesFilterEngine&lt;/a&gt;() with &lt;code&gt;true&lt;/code&gt; to enable the new functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533439c78ab74b1e8f52f080de2b4da974ecc50d" translate="yes" xml:space="preserve">
          <source>The hex encoding uses the numbers 0-9 and the uppercase letters A-F.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a69ff45e8c28a5ca2caf4d7b73ef9c4cb6efba3" translate="yes" xml:space="preserve">
          <source>The hierarchy (or graph) that links a set of HTML documents from a web crawler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d2fea45abdd7baa6d6d64ea3adf0c4b55e2da6" translate="yes" xml:space="preserve">
          <source>The high contrast theme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e73d31ce0addea07848bfc0f7e57e883904cd2" translate="yes" xml:space="preserve">
          <source>The high definition shader guarantees that every visible texel of the volume texture is sampled when the volume is rendered. The low definition shader renders only a rough approximation of the volume contents, but at a much higher frame rate. The low definition shader does not guarantee every texel of the volume texture is sampled, so there may be flickering if the volume contains distinct thin features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00942bb06804e2148eb422f4992f80f83e30280" translate="yes" xml:space="preserve">
          <source>The high definition shader guarantees that every visible texel of the volume texture is sampled when the volume is rendered. The low definition shader renders only a rough approximation of the volume contents, but at a much higher frame rate. The low definition shader does not guarantee that every texel of the volume texture is sampled, so there may be flickering if the volume contains distinct thin features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83fe980f6909d6a4baa4216d0069bd5656edd3d5" translate="yes" xml:space="preserve">
          <source>The high end of the category.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb48fab01fa6b9b5fafdf5325541678bfb99db6" translate="yes" xml:space="preserve">
          <source>The high level design and motivation for Qt 3D is described in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qt3d-overview.html#&quot;&gt;Qt 3D Overview&lt;/a&gt;. The Qt 3D Render aspect offers support for data-driven configuration as described in &lt;a href=&quot;qt3drender-framegraph#&quot;&gt;Qt 3D Render Framegraph&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d8297bc60ee2017d69030644d62f19287988755" translate="yes" xml:space="preserve">
          <source>The high precision coordinates delivered from the tablet expressed. Sub pixeling information is in the fractional part of the &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae76edba1a98a68d1d0a1da9d3656ea07437fca7" translate="yes" xml:space="preserve">
          <source>The high precision x position of the tablet device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75de107382f4f7ed74f0bfeb39c0219676c55d90" translate="yes" xml:space="preserve">
          <source>The high precision y position of the tablet device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02107a729ee552e0fdc237720c2626e3d6b62646" translate="yes" xml:space="preserve">
          <source>The high resolution version is marked by the suffix &lt;code&gt;@2x&lt;/code&gt; on the base name. The image read will have its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4caff36e42515d768760319eda72628b628b6df0" translate="yes" xml:space="preserve">
          <source>The high value of the candlestick item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a0c8e60331e26a11580bf2d54e908c116b8bac" translate="yes" xml:space="preserve">
          <source>The high-resolution performance counter provided by Windows. This clock is monotonic and does not overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5f6e8fd6deb399f9adc22b67681c6b640504b5" translate="yes" xml:space="preserve">
          <source>The higher level &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; derived classes provide the actual multimedia functionality, by internally using a &lt;a href=&quot;qmediaservice&quot;&gt;QMediaService&lt;/a&gt;. Each media object hosts a &lt;a href=&quot;qmediaservice&quot;&gt;QMediaService&lt;/a&gt; and uses the &lt;a href=&quot;qmediacontrol&quot;&gt;QMediaControl&lt;/a&gt; interfaces implemented by the service to implement its API. These controls can be accessed from the media object if necessary, but in general the useful functionality can be accessed from the higher level classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9900ffb6f205311ab976a7070bda93f96021ee89" translate="yes" xml:space="preserve">
          <source>The higher luminance pixel rgb-value from source and &lt;a href=&quot;qml-qtgraphicaleffects-blend#foregroundSource-prop&quot;&gt;foregroundSource&lt;/a&gt; is written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925fe5672af0170025c61a99465ee77576aa8d51" translate="yes" xml:space="preserve">
          <source>The highest valid PaperSource value, currently CustomSource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4221e6df603705f9c4ea0d581f35be88c018a98" translate="yes" xml:space="preserve">
          <source>The highlight color for a selected object. Used if &lt;a href=&quot;qml-qtdatavisualization-abstractgraph3d#selectionMode-prop&quot;&gt;selectionMode&lt;/a&gt; has the &lt;code&gt;AbstractGraph3D.SelectionItem&lt;/code&gt; flag set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="450f2e681a89fa6bc0b58ad31e4c49c4644655d7" translate="yes" xml:space="preserve">
          <source>The highlight color for selected objects. Used if &lt;a href=&quot;qml-qtdatavisualization-abstractgraph3d#selectionMode-prop&quot;&gt;selectionMode&lt;/a&gt; has the &lt;code&gt;AbstractGraph3D.SelectionRow&lt;/code&gt; or &lt;code&gt;AbstractGraph3D.SelectionColumn&lt;/code&gt; flag set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a78459efcceb2ea3b439348c9fdb00ffc0465c" translate="yes" xml:space="preserve">
          <source>The highlight color of the current color group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4e33dc92d3d2f65575b4779aef647af6128b48" translate="yes" xml:space="preserve">
          <source>The highlight delegate for this column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078e765893d7e8b7566327f0b732573896d48aed" translate="yes" xml:space="preserve">
          <source>The highlight gradient for a selected object. Used if &lt;a href=&quot;qml-qtdatavisualization-abstractgraph3d#selectionMode-prop&quot;&gt;selectionMode&lt;/a&gt; has the &lt;code&gt;AbstractGraph3D.SelectionItem&lt;/code&gt; flag set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f192991929780380682216e25c43c6cf036b41d2" translate="yes" xml:space="preserve">
          <source>The highlight gradient for selected objects. Used if &lt;a href=&quot;qml-qtdatavisualization-abstractgraph3d#selectionMode-prop&quot;&gt;selectionMode&lt;/a&gt; has the &lt;code&gt;AbstractGraph3D.SelectionRow&lt;/code&gt; or &lt;code&gt;AbstractGraph3D.SelectionColumn&lt;/code&gt; flag set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ffa79ae33556d9e63995651f5e69a0a97af5e04" translate="yes" xml:space="preserve">
          <source>The highlightItem is managed by the view unless &lt;a href=&quot;qml-qtquick-gridview#highlightFollowsCurrentItem-prop&quot;&gt;highlightFollowsCurrentItem&lt;/a&gt; is set to false. The default &lt;a href=&quot;qquickitem#z-prop&quot;&gt;stacking order&lt;/a&gt; of the highlight item is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c2b580f524c9fb2d896c685a9ac2a7c2dd995e2" translate="yes" xml:space="preserve">
          <source>The highlighted signal is only emitted when the popup is open and an item is highlighted, but not necessarily &lt;a href=&quot;qml-qtquick-controls2-combobox#activated-signal&quot;&gt;activated&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185cb178fe71a67d255d76d691106f95ba97c3a2" translate="yes" xml:space="preserve">
          <source>The highlighted text color of the current color group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7210de17f116cd27d14936ff1f8e37951604c0bb" translate="yes" xml:space="preserve">
          <source>The highlighted text color, used in selections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a2a8e3d3adac2f314fcabecfefb9fd800599d4" translate="yes" xml:space="preserve">
          <source>The hints can be used to integrate tighter with the underlying platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b19d295396b91f05586d430e30352847e78eda67" translate="yes" xml:space="preserve">
          <source>The hints for input method on expected input. (See &lt;a href=&quot;qt#InputMethodHint-enum&quot;&gt;Qt::InputMethodHints&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eafe262b845c2e8f29f89b024d2e85efcdbf7950" translate="yes" xml:space="preserve">
          <source>The history is represented by a &lt;a href=&quot;qml-qtwebengine-webenginehistory&quot;&gt;WebEngineHistory&lt;/a&gt; data model that is held by the &lt;a href=&quot;qml-qtwebengine-webengineview#navigationHistory-prop&quot;&gt;navigationHistory&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b88957af13120ed8c5e7329f9c087eb744b6a07" translate="yes" xml:space="preserve">
          <source>The history uses the concept of a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a04d57398ea062cde00288438fd96614f7795f" translate="yes" xml:space="preserve">
          <source>The holster sensor can detect if a device is holstered or not. A holster is a pocket, similar to a gun holster, specifically made for the device. If the device is inside of this pocket, it is holstered. The holster supports the device in detecting whether the device is holstered or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef898594da71941c8f558dfe7bc20a95183158f6" translate="yes" xml:space="preserve">
          <source>The home directory icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f6ec29584d939c7619b2e2456b2d926894f800" translate="yes" xml:space="preserve">
          <source>The home page for the standard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221b556dca6eccb0e7ca9f4f9a8162b1c630623c" translate="yes" xml:space="preserve">
          <source>The hopCount() function contains, for a received datagram, the remaining hop count limit for the packet. When sending, it contains the hop count limit to be set. Most protocols will leave this value set to the default and let the operating system decide on the best value to be used. Multicasting over IPv4 often uses this field to indicate the scope of the multicast group (link-local, local to an organization or global).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb71886fdf87085570a20f4e482d5dd2bdc53851" translate="yes" xml:space="preserve">
          <source>The horizontal and vertical policies can be set in the constructor, and altered using the &lt;a href=&quot;qsizepolicy#setHorizontalPolicy&quot;&gt;setHorizontalPolicy&lt;/a&gt;() and &lt;a href=&quot;qsizepolicy#setVerticalPolicy&quot;&gt;setVerticalPolicy&lt;/a&gt;() functions. The stretch factors can be set using the &lt;a href=&quot;qsizepolicy#setHorizontalStretch&quot;&gt;setHorizontalStretch&lt;/a&gt;() and &lt;a href=&quot;qsizepolicy#setVerticalStretch&quot;&gt;setVerticalStretch&lt;/a&gt;() functions. The flag indicating whether the widget's &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;sizeHint()&lt;/a&gt; is width-dependent (such as a menu bar or a word-wrapping label) can be set using the &lt;a href=&quot;qsizepolicy#setHeightForWidth&quot;&gt;setHeightForWidth&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f37615d808a7e90b4fb58ddd45344e663b2458" translate="yes" xml:space="preserve">
          <source>The horizontal and vertical scroll bars can be accessed and customized using the &lt;a href=&quot;qml-qtquick-controls2-scrollbar#horizontal-attached-prop&quot;&gt;ScrollBar.horizontal&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-scrollbar#vertical-attached-prop&quot;&gt;ScrollBar.vertical&lt;/a&gt; attached properties. The following example adjusts the scroll bar policies so that the horizontal scroll bar is always off, and the vertical scroll bar is always on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54959d0f9d1e1575e8723cf4b18ef9b28a622972" translate="yes" xml:space="preserve">
          <source>The horizontal direction. Equivalent to GL_TEXTURE_WRAP_S</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4775c07935b1b30a47d4aba5781c4ee9dbae0a8e" translate="yes" xml:space="preserve">
          <source>The horizontal extra space on the left/right of a menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500b79f71ac7f2e393e3f4aaaafd71ab4c79b366" translate="yes" xml:space="preserve">
          <source>The horizontal flags are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543d6c2440db5db9a4f14495b7fb06f397fe01e0" translate="yes" xml:space="preserve">
          <source>The horizontal layout direction can also be reversed through the &lt;a href=&quot;qml-qtquick-layoutmirroring&quot;&gt;LayoutMirroring&lt;/a&gt; attached property. This causes the effective &lt;code&gt;layoutDirection&lt;/code&gt; of positioners and views to be mirrored. Note the actual value of the &lt;code&gt;layoutDirection&lt;/code&gt; property will remain unchanged; the effective layout direction of positioners and views that takes the mirroring into account can be read from the &lt;code&gt;effectiveLayoutDirection&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e714ecccec169716610b48bfe94d19b7cbdb71d4" translate="yes" xml:space="preserve">
          <source>The horizontal overlap between a submenu and its parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26cac3cf7b33edee0a4840deba50c907c69a14c4" translate="yes" xml:space="preserve">
          <source>The horizontal position of the pie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5d8fafa9d06256610a9bff8b8a8a15c33398312" translate="yes" xml:space="preserve">
          <source>The horizontal resolution of the device in dots per inch. See also &lt;a href=&quot;qpaintdevice#logicalDpiX&quot;&gt;logicalDpiX&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a2e00b7479493fbbc6317c40d12434f5832657" translate="yes" xml:space="preserve">
          <source>The horizontal resolution of the device in dots per inch. See also &lt;a href=&quot;qpaintdevice#physicalDpiX&quot;&gt;physicalDpiX&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b44a8d52093bfc19469ea1c6c50b756f623d3f2" translate="yes" xml:space="preserve">
          <source>The horizontal text alignment of the column. Allowed values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45967c858d811b1b9cc251e9d6a26ef2e70c495" translate="yes" xml:space="preserve">
          <source>The horizontal wrap mode is set on the texture instance just before the texture is bound for rendering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ce06aef17160c1b7238f110449447b3f01f991" translate="yes" xml:space="preserve">
          <source>The horizontalOffset and &lt;a href=&quot;qml-qtgraphicaleffects-conicalgradient#verticalOffset-prop&quot;&gt;verticalOffset&lt;/a&gt; properties define the offset in pixels for the center point of the gradient compared to the item center.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8031bf8a5eb2ae5224986e8223b2fb9d8d77d951" translate="yes" xml:space="preserve">
          <source>The horizontalOffset and &lt;a href=&quot;qml-qtgraphicaleffects-radialgradient#verticalOffset-prop&quot;&gt;verticalOffset&lt;/a&gt; properties define the offset in pixels for the center point of the gradient compared to the item center.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc5dbb8c18052273a6c82a3bcf823a0cb57187cd" translate="yes" xml:space="preserve">
          <source>The horizontalRadius and &lt;a href=&quot;qml-qtgraphicaleffects-radialgradient#verticalRadius-prop&quot;&gt;verticalRadius&lt;/a&gt; properties define the shape and size of the radial gradient. If the radiuses are equal, the shape of the gradient is a circle. If the horizontal and vertical radiuses differ, the shape is elliptical. The radiuses are given in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486da78a64c1ea0ffa5437644fdc349e29299591" translate="yes" xml:space="preserve">
          <source>The host address of the server. By default, localhost is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016829957022c280976985faa5527d5b4cab1177" translate="yes" xml:space="preserve">
          <source>The host address was not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518879bcd1d79ba7e7711ed8d268d6c7d0a03634" translate="yes" xml:space="preserve">
          <source>The host and port of the server requesting the client certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="addfc2f3128b7e0a35c8d9b8e212161c834e5db8" translate="yes" xml:space="preserve">
          <source>The host name (or service name) is needed when constructing the QTDSDriver for creating new connections for internal queries. This is to prevent blocking when several &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; objects are used simultaneously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150acd1fa8e19d629c82910789a91ea7838b0e04" translate="yes" xml:space="preserve">
          <source>The host name specified in the certificate is not unique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d07e522fbd24a3dae2ec2b36a6ee7d2775fbc7b1" translate="yes" xml:space="preserve">
          <source>The host node has already been initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d263885c91782569e5da8674d5404e184ec84e" translate="yes" xml:space="preserve">
          <source>The host node is created as shown below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2500fae5f3d0907310d1e638d3ea5c5f185bad60" translate="yes" xml:space="preserve">
          <source>The hostname of the authentication proxy. Empty if &lt;a href=&quot;qml-qtwebengine-authenticationdialogrequest#type-prop&quot;&gt;type&lt;/a&gt; is AuthenticationTypeHTTP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e865f403bdb56a26126e5a2458e8aab4289a01" translate="yes" xml:space="preserve">
          <source>The hot-spot is a point in the global coordinate system, use &lt;a href=&quot;qwidget#mapFromGlobal&quot;&gt;QWidget::mapFromGlobal&lt;/a&gt;() or &lt;a href=&quot;qgestureevent#mapToGraphicsScene&quot;&gt;QGestureEvent::mapToGraphicsScene&lt;/a&gt;() to get a local hot-spot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2729d0feceda6eb47a200a8e7d7a4bcad0067547" translate="yes" xml:space="preserve">
          <source>The hot-spot should be set by the gesture recognizer to allow gesture event delivery to a &lt;a href=&quot;qgraphicsobject&quot;&gt;QGraphicsObject&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71201df39a119f63af40e95e71a3e443aac393fb" translate="yes" xml:space="preserve">
          <source>The hue value from &lt;a href=&quot;qml-qtgraphicaleffects-blend#foregroundSource-prop&quot;&gt;foregroundSource&lt;/a&gt; is combined with saturation and lightness from source and written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d307f31b4a40bbeedd8de221759bb60142d9e784" translate="yes" xml:space="preserve">
          <source>The hue value is defined to be the same in HSL and HSV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a1464eb0fe6a0378d668d966cb51ea329c96ff" translate="yes" xml:space="preserve">
          <source>The human readable name of the extension, eg. 'basicConstraints'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e39e68c3c62972b6f16c4a2f87387359b92f5fc" translate="yes" xml:space="preserve">
          <source>The human readable representation of the URL is fetched with &lt;a href=&quot;qurl#toString&quot;&gt;toString&lt;/a&gt;(). This representation is appropriate for displaying a URL to a user in unencoded form. The encoded form however, as returned by &lt;a href=&quot;qurl#toEncoded&quot;&gt;toEncoded&lt;/a&gt;(), is for internal use, passing to web servers, mail clients and so on. Both forms are technically correct and represent the same URL unambiguously -- in fact, passing either form to &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;'s constructor or to &lt;a href=&quot;qurl#setUrl&quot;&gt;setUrl&lt;/a&gt;() will yield the same &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851d3d8eec8d31a7c253c2bd0a2bc35a26213885" translate="yes" xml:space="preserve">
          <source>The human-readable system time. This clock is not monotonic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b93c43fd12c123e51c9da47b1c13f4b5dc03c7c" translate="yes" xml:space="preserve">
          <source>The humidity sensor returns the relative humidity as a percentage, and absolute humidity in grams per cubic meter (g/m3). Note that some sensors may not support absolute humidity, 0 will be returned in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82522a838764a6faca08b216a0fcef1e54fa4207" translate="yes" xml:space="preserve">
          <source>The icon (if any) to be drawn in the view item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b634f2b52a67165c792033374c88002da92df33" translate="yes" xml:space="preserve">
          <source>The icon class also has a key-value set of parameters. The precise key one needs to use depends on the &lt;a href=&quot;qtlocation-index#plugin-references-and-parameters&quot;&gt;plugin&lt;/a&gt; being used. These parameters influence which icon URL is returned by the manager and may also be used to specify icon URL locations when saving icons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea25a6c943f25e25002d6bf43e5f0cedb2cb186e" translate="yes" xml:space="preserve">
          <source>The icon color is specified by default so that it matches the text color in different states. In order to use an icon with the original colors, set the color to &lt;code&gt;&quot;transparent&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba4fe60e6f2c4e205383176928eddbeb7ca45716" translate="yes" xml:space="preserve">
          <source>The icon color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991f5806d464eb9ef50630bf0144be53c3142474" translate="yes" xml:space="preserve">
          <source>The icon currently used by the message box. Note that it's often hard to draw one pixmap that looks appropriate in all GUI styles; you may want to supply a different pixmap for each platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5453975b65ac6a4cdf4665cd6a0537ce912b734e" translate="yes" xml:space="preserve">
          <source>The icon engine plugin is a simple plugin interface that makes it easy to create custom icon engines that can be loaded dynamically into applications through &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt;. &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; uses the file or resource name's suffix to determine what icon engine to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cec783687f1ea64ece38558cf7c958faa1e2205" translate="yes" xml:space="preserve">
          <source>The icon is initially invisible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c6a051b3252fa97d65b781ca91a2ac17a6602d" translate="yes" xml:space="preserve">
          <source>The icon is rendered by the &lt;a href=&quot;qiconengine#paint&quot;&gt;paint&lt;/a&gt;() function, and the icon can additionally be obtained as a pixmap with the &lt;a href=&quot;qiconengine#pixmap&quot;&gt;pixmap&lt;/a&gt;() function (the default implementation simply uses &lt;a href=&quot;qiconengine#paint&quot;&gt;paint&lt;/a&gt;() to achieve this). The &lt;a href=&quot;qiconengine#addPixmap&quot;&gt;addPixmap&lt;/a&gt;() function can be used to add new pixmaps to the icon engine, and is used by &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; to add specialized custom pixmaps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b52b2148b27639a62da3fa664448aba85f17a0d" translate="yes" xml:space="preserve">
          <source>The icon is tinted with the specified color, unless the color is set to &lt;code&gt;&quot;transparent&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94a522831ec293708665ab236ac7503c3172747" translate="yes" xml:space="preserve">
          <source>The icon name can be given to &lt;a href=&quot;qicon#fromTheme&quot;&gt;QIcon::fromTheme&lt;/a&gt;() in order to load the icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="159ced877b144578b884b33f089f5d73ccf9fbc1" translate="yes" xml:space="preserve">
          <source>The icon of a &lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt; or a &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7c5ce2d5e2662ad837dd90ff77487e38bb59ce" translate="yes" xml:space="preserve">
          <source>The icon of a dock widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6bfb12cb5307ee39ddb1988748888382a4f0809" translate="yes" xml:space="preserve">
          <source>The icon of the current (selected) item of the combo box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5893fb8d8cc36a5beba23c865c7d918a1875e0f7" translate="yes" xml:space="preserve">
          <source>The icon of the header (for section that is being drawn).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b834afe6b58219002d0ca2354d9caae0d17e6de6" translate="yes" xml:space="preserve">
          <source>The icon of the menu item (it is not common that styles draw this icon).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f97ac8608b5187e4c9d7515b27959b50d49d29" translate="yes" xml:space="preserve">
          <source>The icon of the message box can be specified with one of the values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774634e2eda427a5a9b9069a5263a3e947b793da" translate="yes" xml:space="preserve">
          <source>The icon of the message box can be specified with one of these values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc861caba0da2221c673961e27becf334f06e07" translate="yes" xml:space="preserve">
          <source>The icon on the toolbox tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0388cb12a31974020e9b943c7dd3feb739a49612" translate="yes" xml:space="preserve">
          <source>The icon size of the button's icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55eb33fd0bd0d19bd186229af89f374ae86f4ce" translate="yes" xml:space="preserve">
          <source>The icon size of the following widgets can be set using this property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dcc4fd92ebabcf56a9ee0a74f1ed5fd9d66dbc3" translate="yes" xml:space="preserve">
          <source>The icon to display is set with the &lt;a href=&quot;qml-qtquick-extras-picture#source-prop&quot;&gt;source&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da224894f523f345e8d5284c01c74f4a313eb8ce" translate="yes" xml:space="preserve">
          <source>The icon will be loaded as a regular image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67057978471d647825489ab4643e44c6efbbf47c" translate="yes" xml:space="preserve">
          <source>The icon will be loaded from the platform theme. If the icon is found in the theme, it will always be used; even if &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#icon.source-prop&quot;&gt;icon.source&lt;/a&gt; is also set. If the icon is not found, &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#icon.source-prop&quot;&gt;icon.source&lt;/a&gt; will be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bac99d9a600e91453301fdd7e9cea6d8a5fef5" translate="yes" xml:space="preserve">
          <source>The icon will be loaded from the platform theme. If the icon is found in the theme, it will always be used; even if &lt;a href=&quot;qml-qtquick-controls2-action#icon.source-prop&quot;&gt;icon.source&lt;/a&gt; is also set. If the icon is not found, &lt;a href=&quot;qml-qtquick-controls2-action#icon.source-prop&quot;&gt;icon.source&lt;/a&gt; will be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cdc143325c03eb0fbb0d35943fe879bbf651c31" translate="yes" xml:space="preserve">
          <source>The icon's default size is defined by the GUI style, but can be adjusted by setting the &lt;a href=&quot;qabstractbutton#iconSize-prop&quot;&gt;iconSize&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c574e8c79994b00618fae1884b533f4cd8c783" translate="yes" xml:space="preserve">
          <source>The icon's height will never exceed this value, though it will shrink when necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e0bb0cafc50006ae04c2f1a2e49d25915b2c3a" translate="yes" xml:space="preserve">
          <source>The icon's width will never exceed this value, though it will shrink when necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329401e2211c58d1293f05795d037a6c0b041809" translate="yes" xml:space="preserve">
          <source>The icons are typically backend dependent, if a manager backend does not support a given size, the URL of the icon that most closely matches those parameters is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc23075f8ab4fbaaccdd1cb561278e6ceab77df0" translate="yes" xml:space="preserve">
          <source>The icy blue theme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aadcb58aa510eff1fcec2eb86675c538454c117e" translate="yes" xml:space="preserve">
          <source>The idea is to enable different image format for different output format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b4336fd53ae54afc09841d53cd0f878f8444e3" translate="yes" xml:space="preserve">
          <source>The ideal blur is achieved by selecting &lt;code&gt;samples&lt;/code&gt; and &lt;code&gt;radius&lt;/code&gt; such that &lt;code&gt;samples = 1 + radius * 2&lt;/code&gt;, such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="384abf6172d7982942277a4a07649d4582b73085" translate="yes" xml:space="preserve">
          <source>The identifier of a development team to use for signing certificates and provisioning profiles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0519c99dc8c98dc802dcb483e74e4daf8ea4f438" translate="yes" xml:space="preserve">
          <source>The identifier of the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38bf70fbee6fec489249517dbe19fa8f7866a0ae" translate="yes" xml:space="preserve">
          <source>The identifier of the review.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df654076d0c032a148f4dac0c0137cc5fda8de6c" translate="yes" xml:space="preserve">
          <source>The identifier of the server, &lt;b&gt;not&lt;/b&gt; the server address. &lt;code&gt;quint8&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9387606e906423692393cb328eb25d148e03cce" translate="yes" xml:space="preserve">
          <source>The identifier under which an object, registered to a WebChannel, is known to remote clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f779856c7325488a5aedec6af821770e285b2e" translate="yes" xml:space="preserve">
          <source>The identifiers prefixed by &lt;code&gt;FOLDERID_&lt;/code&gt; are special item ID lists to be passed to the Win32 API function &lt;code&gt;SHGetKnownFolderPath()&lt;/code&gt; to obtain the corresponding path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577461ba976c7779234669e24be929bf5d96a0bc" translate="yes" xml:space="preserve">
          <source>The identity hint is used in &lt;a href=&quot;qsslsocket#SslMode-enum&quot;&gt;QSslSocket::SslServerMode&lt;/a&gt; only!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8450c19c91c4d645fca5b9e2a267d25c025a10d4" translate="yes" xml:space="preserve">
          <source>The identity hint, the identity and the key will be initialized to empty byte arrays; the maximum length for both the identity and the key will be initialized to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84161a766aa380287c1dc42771098cfcfd4b87ba" translate="yes" xml:space="preserve">
          <source>The identity of the peer can't be established.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9851c420c8b6f24508a619ab4c1bbf57e4873f4f" translate="yes" xml:space="preserve">
          <source>The image above shows a ARGB pixel in memory read as an unsigned integer. However, if this pixel was read byte for byte on a little endian system the first byte would be the byte containing the B-channel. The next byte would be the G-channel, then the R-channel and finally the A-channel. This shows that on little endian systems, how each pixel is interpreted is significant for integer formats. This is not the case on big endian systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d479512667421b7de480cc72a42b0b01de413490" translate="yes" xml:space="preserve">
          <source>The image above shows the Gaussian function with two different deviation values, yellow (1) and cyan (2.7). The y-axis shows the weights, the x-axis shows the pixel distance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83353174906d41b53588588c7405f2bafb8fd88e" translate="yes" xml:space="preserve">
          <source>The image below further illustrates the differences between exclusive and non-exclusive checkboxes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ead47d3a97db11f3e03858e3cbead855ce78659" translate="yes" xml:space="preserve">
          <source>The image below is the output obtained with its contents margin and contents rect labeled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185dbd9825fe7fceb732768701a152a852803913" translate="yes" xml:space="preserve">
          <source>The image below shows the difference between geomagnetic (on the left) and raw (on the right) readings for a phone that is being subjected to magnetic interference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e80698188aa682ccb69353be24c94cbfc611cd" translate="yes" xml:space="preserve">
          <source>The image can be inserted into the document using the &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt; API:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236435db3c4c4f35265fb868c92940f5b38c55ee" translate="yes" xml:space="preserve">
          <source>The image can be uploaded into a texture atlas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35727aaf6cf3b524b140732ea43b01f5b226714d" translate="yes" xml:space="preserve">
          <source>The image data was invalid, and &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; was unable to read an image from it. The can happen if the image file is damaged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c634195e740ea54442073a3c6ba0dcb7d5286250" translate="yes" xml:space="preserve">
          <source>The image depth is the number of bits used to store a single pixel, also called bits per pixel (bpp).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba08967be13b9325387fe53eafc54788a926001" translate="yes" xml:space="preserve">
          <source>The image description. Some image formats, such as GIF and PNG, allow embedding of text or comments into the image data (e.g., for storing copyright information). It's common that the text is stored in key-value pairs, but some formats store all text in one continuous block. &lt;a href=&quot;qimageiohandler&quot;&gt;QImageIOHandler&lt;/a&gt; returns the text as one &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, where keys and values are separated by a ':', and keys-value pairs are separated by two newlines (\n\n). For example, &quot;Title: Sunset\n\nAuthor: Jim Smith\nSarah Jones\n\n&quot;. Formats that store text in a single block can use &quot;Description&quot; as the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="397ba2ca81fb9eeb5fe9cc116523614c1d5a6322" translate="yes" xml:space="preserve">
          <source>The image files are named using the following convention:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b25b187d64272814e18c8098cbf5a5b5fa883fa" translate="yes" xml:space="preserve">
          <source>The image files can be found in the underlying directory &lt;code&gt;images&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2487ed5fc32f81c5dcfdf4180f2fb90286b51814" translate="yes" xml:space="preserve">
          <source>The image is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c61f5e0ea63c4e740300897bbde83eb25b12ed9" translate="yes" xml:space="preserve">
          <source>The image is stored using 1-bit per pixel. Bytes are packed with the less significant bit (LSB) first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8684c2bc2452e244c1e9bebdab7fd240cf39a13b" translate="yes" xml:space="preserve">
          <source>The image is stored using 1-bit per pixel. Bytes are packed with the most significant bit (MSB) first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf01f97cefc622dea94c98119cc55677fb40ae3" translate="yes" xml:space="preserve">
          <source>The image is stored using 8-bit indexes into a colormap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125177b3843e58794fce9f4f21801b2e94d8d9d4" translate="yes" xml:space="preserve">
          <source>The image is stored using a 16-bit RGB format (4-4-4). The unused bits are always zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00041104be39572ef387821d73dc523437391474" translate="yes" xml:space="preserve">
          <source>The image is stored using a 16-bit RGB format (5-5-5). The unused most significant bit is always zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41344d5a9db6848922cdeb472276aaabd871507e" translate="yes" xml:space="preserve">
          <source>The image is stored using a 16-bit RGB format (5-6-5).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1771ccd31a25cc136372496377bbbd18d33d495" translate="yes" xml:space="preserve">
          <source>The image is stored using a 24-bit RGB format (6-6-6). The unused most significant bits is always zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cfd1a789555a7056e16b422e948605baffa26bd" translate="yes" xml:space="preserve">
          <source>The image is stored using a 24-bit RGB format (8-8-8).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354afea1a3914ef737517a05e160420b06a86ae2" translate="yes" xml:space="preserve">
          <source>The image is stored using a 32-bit ARGB format (0xAARRGGBB).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b3d796650274e446cee555ae0481487d52c3a4" translate="yes" xml:space="preserve">
          <source>The image is stored using a 32-bit BGR format (x-10-10-10). (added in Qt 5.4)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15291d07b446da67dbd30ada0ce167e164b8b4a" translate="yes" xml:space="preserve">
          <source>The image is stored using a 32-bit RGB format (0xffRRGGBB).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b598e61fcc5c3bfcaa05e45b29676f89954bf4b0" translate="yes" xml:space="preserve">
          <source>The image is stored using a 32-bit RGB format (x-10-10-10). (added in Qt 5.4)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc29cbccb500d3a3fb7e38afaaafb2f89ffe2ab" translate="yes" xml:space="preserve">
          <source>The image is stored using a 32-bit byte-ordered RGB(x) format (8-8-8-8). This is the same as the Format_RGBA8888 except alpha must always be 255. (added in Qt 5.2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c798c85d9395aea0ac72a08ba4da9d07777ce091" translate="yes" xml:space="preserve">
          <source>The image is stored using a 32-bit byte-ordered RGBA format (8-8-8-8). Unlike ARGB32 this is a byte-ordered format, which means the 32bit encoding differs between big endian and little endian architectures, being respectively (0xRRGGBBAA) and (0xAABBGGRR). The order of the colors is the same on any architecture if read as bytes 0xRR,0xGG,0xBB,0xAA. (added in Qt 5.2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be7d0aa0554b79d1adbf4d14b86d8f7b77924a9" translate="yes" xml:space="preserve">
          <source>The image is stored using a 32-bit premultiplied ABGR format (2-10-10-10). (added in Qt 5.4)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361a2c5b7436b66725488b06c80364a94507bb6d" translate="yes" xml:space="preserve">
          <source>The image is stored using a 32-bit premultiplied ARGB format (2-10-10-10). (added in Qt 5.4)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b2984c5edc75dd31659bc318211adff388093f" translate="yes" xml:space="preserve">
          <source>The image is stored using a 64-bit halfword-ordered RGB(x) format (16-16-16-16). This is the same as the Format_RGBX64 except alpha must always be 65535. (added in Qt 5.12)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca03347fd45a3db0c5528ffe3b0a2e99a19f0dd" translate="yes" xml:space="preserve">
          <source>The image is stored using a 64-bit halfword-ordered RGBA format (16-16-16-16). (added in Qt 5.12)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d59a6c8f2eeb2f6ef0dc86de7f444242df12f26d" translate="yes" xml:space="preserve">
          <source>The image is stored using a premultiplied 16-bit ARGB format (4-4-4-4).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49b89c9d4a07e6a787545fa5b041ba3da4037ec" translate="yes" xml:space="preserve">
          <source>The image is stored using a premultiplied 24-bit ARGB format (6-6-6-6).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5000a37c7eaae3ad3f16c7989abe2a9af494f16f" translate="yes" xml:space="preserve">
          <source>The image is stored using a premultiplied 24-bit ARGB format (8-5-5-5).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cadb430d890d4558863776bc4cad47ed01c56918" translate="yes" xml:space="preserve">
          <source>The image is stored using a premultiplied 24-bit ARGB format (8-5-6-5).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3436ccaaf6c73f7176aa2c493267588dad095c10" translate="yes" xml:space="preserve">
          <source>The image is stored using a premultiplied 32-bit ARGB format (0xAARRGGBB), i.e. the red, green, and blue channels are multiplied by the alpha component divided by 255. (If RR, GG, or BB has a higher value than the alpha channel, the results are undefined.) Certain operations (such as image composition using alpha blending) are faster using premultiplied ARGB32 than with plain ARGB32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae680400d433c002058d604690d84659b7c4db6" translate="yes" xml:space="preserve">
          <source>The image is stored using a premultiplied 32-bit byte-ordered RGBA format (8-8-8-8). (added in Qt 5.2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca44d5a972415c108450ca8d74ef49334111a1c" translate="yes" xml:space="preserve">
          <source>The image is stored using a premultiplied 64-bit halfword-ordered RGBA format (16-16-16-16). (added in Qt 5.12)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657f64dec19e60c3657a687ecc40ccf7755dea1f" translate="yes" xml:space="preserve">
          <source>The image is stored using an 16-bit grayscale format. (added in Qt 5.13)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16585830f608a37d439b9b2f4ef805ebc398596d" translate="yes" xml:space="preserve">
          <source>The image is stored using an 8-bit alpha only format. (added in Qt 5.5)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2518ad2f7a186c98b6954876d5026179dcf6321b" translate="yes" xml:space="preserve">
          <source>The image is stored using an 8-bit grayscale format. (added in Qt 5.5)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00899d46b60b3ead594ea4031c71af14dd9b982e" translate="yes" xml:space="preserve">
          <source>The image name refers to an entry in the application's resource file. The method used to derive this name is described in &lt;a href=&quot;resources&quot;&gt;The Qt Resource System&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed31930d270985d39df02b7418e62466d13b61fd" translate="yes" xml:space="preserve">
          <source>The image property accepts a list of &lt;a href=&quot;#url&quot;&gt;Url&lt;/a&gt;s or an &lt;code&gt;svg&lt;/code&gt;. The actual image that is drawn is determined using the same algorithm as &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; (i.e) the image is never scaled up but always scaled down if necessary. If a &lt;code&gt;svg&lt;/code&gt; is specified, the image is scaled to the size of the contents rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7bf33a7a0fa0f83dabce12735258a55e89ff2bf" translate="yes" xml:space="preserve">
          <source>The image source for the animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da1c2a84bd5d3e7b2cb7403982498b0523b17bc" translate="yes" xml:space="preserve">
          <source>The image text is embedded into the image data when you call &lt;a href=&quot;qimage#save&quot;&gt;save&lt;/a&gt;() or &lt;a href=&quot;qimagewriter#write&quot;&gt;QImageWriter::write&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b369cfb8824d8d0bad29cf5e58df451e191ed5" translate="yes" xml:space="preserve">
          <source>The image that is drawn in the contents rectangle of a subcontrol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c566431ecfaa78b8c6e3d93370ae248ded250d" translate="yes" xml:space="preserve">
          <source>The image that is loaded by an icon whose &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; are not set depends on the type of icon in use. For theme icons, the closest available size will be chosen. For regular icons, the behavior is the same as the &lt;a href=&quot;qml-qtquick-image#sourceSize-prop&quot;&gt;sourceSize&lt;/a&gt; property of &lt;a href=&quot;qml-qtquick-image&quot;&gt;Image&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59bf55f38121b6d6d5418fc865af585570756ee" translate="yes" xml:space="preserve">
          <source>The image to use as the mask. Areas with non-zero opacity will be considered inside the shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df75488f73e5adb68699d0401de416da9770039" translate="yes" xml:space="preserve">
          <source>The image used to fill the border. The image is cut into nine parts and stretched appropriately if necessary. See &lt;a href=&quot;#border-image&quot;&gt;Border Image&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5733e4d3bb29905160c42fc57781e57f3429d2" translate="yes" xml:space="preserve">
          <source>The image will be captured to the default system location, typically &lt;a href=&quot;qstandardpaths#writableLocation&quot;&gt;QStandardPaths::writableLocation&lt;/a&gt;(&lt;a href=&quot;qstandardpaths#StandardLocation-enum&quot;&gt;QStandardPaths::PicturesLocation&lt;/a&gt;) for still imaged or &lt;a href=&quot;qstandardpaths#writableLocation&quot;&gt;QStandardPaths::writableLocation&lt;/a&gt;(&lt;a href=&quot;qstandardpaths#StandardLocation-enum&quot;&gt;QStandardPaths::MoviesLocation&lt;/a&gt;) for video.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da1e52926d21c0b3ed85294b73ca1d9c75db3f1" translate="yes" xml:space="preserve">
          <source>The image's data format returned by the handler. This can be any of the formats listed in &lt;a href=&quot;qimage#Format-enum&quot;&gt;QImage::Format&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d4ce979843e26f822f55986fa416e15fa78852" translate="yes" xml:space="preserve">
          <source>The images and meta-data in an image collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3310566f8d744b6c4c52ffba77442783049a039d" translate="yes" xml:space="preserve">
          <source>The images can be added to the Info.plist as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d7506bb442c3d4fbc9eae767b04f1092499ca1" translate="yes" xml:space="preserve">
          <source>The images.fileextensions variable filters the files within an image directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e9fc5abdf403f2a25a28e2ee6177b4801372b9" translate="yes" xml:space="preserve">
          <source>The immediate evaluation scope can be summarized by saying that it contains:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55dafc116cf8a5231ca4563b9980755233d1d39" translate="yes" xml:space="preserve">
          <source>The impatient reader, who right away wants to see a &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; and a custom Qt widget (&lt;a href=&quot;https://doc.qt.io/qt-5.13/activeqt-activeqt-multiple-example.html#&quot;&gt;QAxWidget2&lt;/a&gt;) run in a .NET GUI application is referred to the example directory of &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt;. It contains the result of this walkthrough using both C# and VB.NET, created with Visual Studio .NET (not 2003). Load &lt;code&gt;examples/dotnet/walkthrough/csharp.csproj&lt;/code&gt;, &lt;code&gt;examples/dotnet/walkthrough/vb.vbproj&lt;/code&gt; or &lt;code&gt;examples/dotnet/wrapper/wrapper.sln&lt;/code&gt; into the IDE and run the solution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d93cf64b7db4d4bf0d426a787b20406d9ef9cf7" translate="yes" xml:space="preserve">
          <source>The implementation currently passes 42% of W3C's XSLT test suite, which focus on features introduced in XSLT 2.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615a2a24d917d2baac4de6712a61c98ac3bf16b4" translate="yes" xml:space="preserve">
          <source>The implementation for the &lt;code&gt;Message&lt;/code&gt; type in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-tools-customtype-example.html#&quot;&gt;Custom Type Example&lt;/a&gt; goes to some effort to make the printable representation as readable as possible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e746d45215a497a1306946a89ee1736fab198b7" translate="yes" xml:space="preserve">
          <source>The implementation guarantees to return a valid &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;, or a default constructed &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;. If a node has no base URI, as in the case where a comment has no parent, a default constructed &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84fee9b487ff911e732edf9b78f7b349a9f4a073" translate="yes" xml:space="preserve">
          <source>The implementation is handled in such a way that object slicing is not an issue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2bbf359b2b56abcf76136db564e83285986e14" translate="yes" xml:space="preserve">
          <source>The implementation is handled in such a way that object slicing is not an issue. It is not expected that client applications or backend plugins instantiate a &lt;a href=&quot;qplacesearchresult&quot;&gt;QPlaceSearchResult&lt;/a&gt; directly, but rather client applications simply convert to search result subclasses and backend plugins only instantiate subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d54c4633e15d1c87b8ccf393ca10bb1c8d955d0" translate="yes" xml:space="preserve">
          <source>The implementation must be prepared that a call to this function may be followed by a new call to &lt;a href=&quot;qvulkanwindowrenderer#initSwapChainResources&quot;&gt;initSwapChainResources&lt;/a&gt;() at a later point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d1f47962631610e72f0bf909ce849d7acf4c76" translate="yes" xml:space="preserve">
          <source>The implementation must be prepared that a call to this function may be followed by an &lt;a href=&quot;qvulkanwindowrenderer#initResources&quot;&gt;initResources&lt;/a&gt;() at a later point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4947079153612791e5c53404ac91ec8524abbee9" translate="yes" xml:space="preserve">
          <source>The implementation must ensure that the &lt;a href=&quot;qgraphicslayoutitem#parentLayoutItem&quot;&gt;parentLayoutItem&lt;/a&gt;() of the removed item does not point to this layout, since the item is considered to be removed from the layout hierarchy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70630cb9e2cf6c59354fe1793f810cc7a1d1163" translate="yes" xml:space="preserve">
          <source>The implementation must ensure that the instance's &lt;a href=&quot;qmodbusdevice#state&quot;&gt;state&lt;/a&gt;() is set to &lt;a href=&quot;qmodbusdevice#State-enum&quot;&gt;QModbusDevice::ConnectingState&lt;/a&gt; or &lt;a href=&quot;qmodbusdevice#State-enum&quot;&gt;QModbusDevice::ConnectedState&lt;/a&gt; upon success; otherwise &lt;a href=&quot;qmodbusdevice#State-enum&quot;&gt;QModbusDevice::UnconnectedState&lt;/a&gt;. Typically, &lt;a href=&quot;qmodbusdevice#State-enum&quot;&gt;QModbusDevice::ConnectingState&lt;/a&gt; is used when the connection process reports back asynchronously and &lt;a href=&quot;qmodbusdevice#State-enum&quot;&gt;QModbusDevice::ConnectedState&lt;/a&gt; in case of synchronous connect behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3bd636c70c21dfd018bdc6be9a4cf39b9e54e3" translate="yes" xml:space="preserve">
          <source>The implementation must ensure that upon success the instance's &lt;a href=&quot;qcanbusdevice#state&quot;&gt;state&lt;/a&gt;() is set to &lt;a href=&quot;qcanbusdevice#CanBusDeviceState-enum&quot;&gt;QCanBusDevice::ConnectedState&lt;/a&gt;; otherwise &lt;a href=&quot;qcanbusdevice#CanBusDeviceState-enum&quot;&gt;QCanBusDevice::UnconnectedState&lt;/a&gt;. &lt;a href=&quot;qcanbusdevice#setState&quot;&gt;setState&lt;/a&gt;() must be used to set the new device state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e323c83dd7f24c7303684409e38479f528878f78" translate="yes" xml:space="preserve">
          <source>The implementation of &lt;a href=&quot;qml-qtquick-dialogs-colordialog&quot;&gt;ColorDialog&lt;/a&gt; will be a platform color dialog if possible. If that isn't possible, then it will try to instantiate a &lt;a href=&quot;qcolordialog&quot;&gt;QColorDialog&lt;/a&gt;. If that also isn't possible, then it will fall back to a QML implementation, DefaultColorDialog.qml. In that case you can customize the appearance by editing this file. DefaultColorDialog.qml contains a Rectangle to hold the dialog's contents, because certain embedded systems do not support multiple top-level windows. When the dialog becomes visible, it will automatically be wrapped in a Window if possible, or simply reparented on top of the main window if there can only be one window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f1d6bd2034c3e7eff2f38523cef45e176f2481" translate="yes" xml:space="preserve">
          <source>The implementation of &lt;a href=&quot;qml-qtquick-dialogs-filedialog&quot;&gt;FileDialog&lt;/a&gt; will be a platform file dialog if possible. If that isn't possible, then it will try to instantiate a &lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;. If that also isn't possible, then it will fall back to a QML implementation, DefaultFileDialog.qml. In that case you can customize the appearance by editing this file. DefaultFileDialog.qml contains a Rectangle to hold the dialog's contents, because certain embedded systems do not support multiple top-level windows. When the dialog becomes visible, it will automatically be wrapped in a Window if possible, or simply reparented on top of the main window if there can only be one window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1bdf50eb7752bb3390a51cae44e1ac6cb1c1c71" translate="yes" xml:space="preserve">
          <source>The implementation of &lt;a href=&quot;qml-qtquick-dialogs-fontdialog&quot;&gt;FontDialog&lt;/a&gt; will be a platform font dialog if possible. If that isn't possible, then it will try to instantiate a &lt;a href=&quot;qfontdialog&quot;&gt;QFontDialog&lt;/a&gt;. If that also isn't possible, then it will fall back to a QML implementation, DefaultFontDialog.qml. In that case you can customize the appearance by editing this file. DefaultFontDialog.qml contains a Rectangle to hold the dialog's contents, because certain embedded systems do not support multiple top-level windows. When the dialog becomes visible, it will automatically be wrapped in a Window if possible, or simply reparented on top of the main window if there can only be one window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf32a282e06a10e0a4ea03591dc1cb825154010e" translate="yes" xml:space="preserve">
          <source>The implementation of &lt;a href=&quot;qml-qtquick-dialogs-messagedialog&quot;&gt;MessageDialog&lt;/a&gt; will be a platform message dialog if possible. If that isn't possible, then it will try to instantiate a &lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt;. If that also isn't possible, then it will fall back to a QML implementation, &lt;code&gt;DefaultMessageDialog.qml&lt;/code&gt;. In that case you can customize the appearance by editing this file. &lt;code&gt;DefaultMessageDialog.qml&lt;/code&gt; contains a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; to hold the dialog's contents, because certain embedded systems do not support multiple top-level windows. When the dialog becomes visible, it will automatically be wrapped in a &lt;a href=&quot;qml-qtquick-window-window&quot;&gt;Window&lt;/a&gt; if possible, or simply reparented on top of the main window if there can only be one window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="274369fb1e6ddb90ab66b13eee958dd8f44e6cd2" translate="yes" xml:space="preserve">
          <source>The implementation of a &lt;a href=&quot;qplacemanagerengine&quot;&gt;QPlaceManagerEngine&lt;/a&gt; must ensure that any signals emitted by the reply objects are delayed until the request functions have returned and the application code has a chance to connect those signals to slots. The typical approach is to use &lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject::invokeMethod&lt;/a&gt;() with a &lt;a href=&quot;qt#ConnectionType-enum&quot;&gt;Qt::QueuedConnection&lt;/a&gt; to emit the signals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748e2ca0999b955301c1b33cbf9e6cadadbaae35" translate="yes" xml:space="preserve">
          <source>The implementation of input methods starts by deciding which interface is used; QML or C++. In this example the QML interface is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1a800908d0c1caacdd8f5869b9281805921b25" translate="yes" xml:space="preserve">
          <source>The implementation of the &lt;a href=&quot;qaccessibleinterface#role&quot;&gt;role()&lt;/a&gt; function is straightforward:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db27d8e51e95424f34dcdb84f858ffb5e4215228" translate="yes" xml:space="preserve">
          <source>The implementation of the slot prints basic information about the addresses returned by the lookup, or reports an error if it failed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b8602611b8b7d1c0f40d0c9566631183dc6c92" translate="yes" xml:space="preserve">
          <source>The implementor guarantees that the nodes identified by the returned indexes are elements or attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12de27510a1c8cf334ae3c7cf3599fd9a3db6595" translate="yes" xml:space="preserve">
          <source>The implicit height of the content item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7223ec38a03c71e10d48cff6db75009e17f41c8" translate="yes" xml:space="preserve">
          <source>The implicit size of the &lt;a href=&quot;qml-qtquick-controls-groupbox&quot;&gt;GroupBox&lt;/a&gt; is calculated based on the size of its content. If you want to anchor items inside the group box, you must specify an explicit width and height on the &lt;a href=&quot;qml-qtquick-controls-groupbox&quot;&gt;GroupBox&lt;/a&gt; itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0001f14aed93d96945463f211cfc298419647c" translate="yes" xml:space="preserve">
          <source>The implicit size of the calendar is calculated based on the implicit size of the background delegate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9cd8a852090f8d50b58198960854b12a3dacb5d" translate="yes" xml:space="preserve">
          <source>The implicit size of the dial is taken from this component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1423f9c904005753e9682c4cb89a4ae8d8b77eb7" translate="yes" xml:space="preserve">
          <source>The implicit size of the slider is calculated based on the maximum implicit size of the &lt;code&gt;background&lt;/code&gt; and &lt;code&gt;handle&lt;/code&gt; delegates combined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c056a53114b41e23b2f2188b59c5cd555cb6465" translate="yes" xml:space="preserve">
          <source>The implicit width of the content item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919a5890a86fe1dd229db5844218a84dda9d0912" translate="yes" xml:space="preserve">
          <source>The important feature of the class is the private &lt;code&gt;ui&lt;/code&gt; object which provides the code for setting up and managing the user interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ed2962650e35a5e2065ada5102f1ab96adff50" translate="yes" xml:space="preserve">
          <source>The in-app products must be registered in the target stores, before they can be queried or purchased in an application. We recommend using the same identifiers for the products in each store, as it simplifies the code to query and purchase the products.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bbec7806477655afe84b840ee290c6094f79882" translate="yes" xml:space="preserve">
          <source>The included file, &lt;code&gt;dataloader.mjs&lt;/code&gt;, looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0caf658d3e996f9ebd69102e7608a3a8622f9e6f" translate="yes" xml:space="preserve">
          <source>The incubator will remain in the Loading state until either the creation is complete or an error occurs. The &lt;a href=&quot;qqmlincubator#statusChanged&quot;&gt;statusChanged&lt;/a&gt;() callback can be used to be notified of status changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c545623433c7fdd1b35d9fcf1aed3e7817e88567" translate="yes" xml:space="preserve">
          <source>The indent properties of &lt;a href=&quot;qtextlistformat&quot;&gt;QTextListFormat&lt;/a&gt; and &lt;a href=&quot;qtextblockformat&quot;&gt;QTextBlockFormat&lt;/a&gt; specify multiples of this value. The default indent width is 40 .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc03f143eaa054eb6c1561ed1bd3cd66eca2e47" translate="yes" xml:space="preserve">
          <source>The indent properties of &lt;a href=&quot;qtextlistformat&quot;&gt;QTextListFormat&lt;/a&gt; and &lt;a href=&quot;qtextblockformat&quot;&gt;QTextBlockFormat&lt;/a&gt; specify multiples of this value. The default indent width is 40.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97315a716bc556c1bebbac212f816876e0c21939" translate="yes" xml:space="preserve">
          <source>The indentation of items in a tree view. This enum value has been introduced in Qt 5.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3aa907c497f0bc4181977acf9e62771608c108e" translate="yes" xml:space="preserve">
          <source>The indentation of the items is an integer value that causes each item to be offset from the left margin by a certain amount. This value is read with &lt;a href=&quot;qtextlistformat#indent&quot;&gt;indent&lt;/a&gt;() and set with &lt;a href=&quot;qtextlistformat#setIndent&quot;&gt;setIndent&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35483984f625ceabe7d27564657fe5557d502f24" translate="yes" xml:space="preserve">
          <source>The indeterminate mode is similar to a &lt;a href=&quot;qml-qtquick-controls2-busyindicator&quot;&gt;BusyIndicator&lt;/a&gt;. Both can be used to indicate background activity. The main difference is visual, and that &lt;a href=&quot;qml-qtquick-controls2-progressbar&quot;&gt;ProgressBar&lt;/a&gt; can also present a concrete amount of progress (when it can be determined). Due to the visual difference, indeterminate progress bars and busy indicators fit different places in user interfaces. Typical places for an indeterminate progress bar:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d52730cf4d9ec863dcef9977398ff2165c19fd" translate="yes" xml:space="preserve">
          <source>The index (0-5) of the delegate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ed32b373d5f6458a94dccb8c61f7841f810b75" translate="yes" xml:space="preserve">
          <source>The index (0-6) of the delegate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc28af89df4f81195cff01a075e6aa5ade7aeac1" translate="yes" xml:space="preserve">
          <source>The index functions &lt;a href=&quot;qmetaobject#indexOfConstructor&quot;&gt;indexOfConstructor&lt;/a&gt;(), &lt;a href=&quot;qmetaobject#indexOfMethod&quot;&gt;indexOfMethod&lt;/a&gt;(), &lt;a href=&quot;qmetaobject#indexOfEnumerator&quot;&gt;indexOfEnumerator&lt;/a&gt;(), and &lt;a href=&quot;qmetaobject#indexOfProperty&quot;&gt;indexOfProperty&lt;/a&gt;() map names of constructors, member functions, enumerators, or properties to indexes in the meta-object. For example, Qt uses &lt;a href=&quot;qmetaobject#indexOfMethod&quot;&gt;indexOfMethod&lt;/a&gt;() internally when you connect a signal to a slot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc6e6bd99cf2e92dd7b16335095b3c92615bf75" translate="yes" xml:space="preserve">
          <source>The index in the range array which matches the current distance to the camera or screen size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e4b85294b9c86f479c1df9f81a5f4c8792b0d48" translate="yes" xml:space="preserve">
          <source>The index is calculated from the index of the key &lt;code&gt;text&lt;/code&gt; in the &lt;code&gt;alternativeKeys&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2b47437bae1959208c1aee4e6504819072458d" translate="yes" xml:space="preserve">
          <source>The index is the current array size if the rows were removed from the end of the array. If rows are removed from the array without calling &lt;a href=&quot;qbardataproxy#removeRows&quot;&gt;removeRows&lt;/a&gt;(), this signal needs to be emitted to update the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce605cd3a794206daf93ff6251f40510b86cf8a2" translate="yes" xml:space="preserve">
          <source>The index is the current array size if the rows were removed from the end of the array. If rows are removed from the array without calling &lt;a href=&quot;qsurfacedataproxy#removeRows&quot;&gt;removeRows&lt;/a&gt;(), this signal needs to be emitted to update the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960275527b1abc60f75b779124ee104e8163ed20" translate="yes" xml:space="preserve">
          <source>The index of &quot;Item 0&quot; within the model following the add operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f26d96529853bd0d2393c14715810dfde03e3fd2" translate="yes" xml:space="preserve">
          <source>The index of &quot;Item 4&quot;, the new item added to the view</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f381a3c920c276b11a69d9a8ee3040dcb7aa0182" translate="yes" xml:space="preserve">
          <source>The index of the column that contains this highlight.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b62722ef9d1fc6a3b8e7236481aa04ff5c67398" translate="yes" xml:space="preserve">
          <source>The index of the column that contains this item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9b253f8aa87f1f4480bd871ebe053deeaadd65" translate="yes" xml:space="preserve">
          <source>The index of the current item widget is returned by &lt;a href=&quot;qtoolbox#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt;(), and set with &lt;a href=&quot;qtoolbox#currentIndex-prop&quot;&gt;setCurrentIndex&lt;/a&gt;(). The index of a particular item can be found using &lt;a href=&quot;qtoolbox#indexOf&quot;&gt;indexOf&lt;/a&gt;(), and the item at a given index is returned by item().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7143807e8c7147f26e697450e2cb1b36370259" translate="yes" xml:space="preserve">
          <source>The index of the currently selected item in the &lt;a href=&quot;qml-qtquick-controls-combobox&quot;&gt;ComboBox&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c89026e65a6ecf666127fa37f41f8c2e64452f" translate="yes" xml:space="preserve">
          <source>The index of the formatted object. See &lt;a href=&quot;qtextformat#objectIndex&quot;&gt;objectIndex&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebfbaa5eccd892c261e29a56d90c29eaea0fa1fe" translate="yes" xml:space="preserve">
          <source>The index of the item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f7f6ead09a947c0ec94e8e6816f4d4213b36a5" translate="yes" xml:space="preserve">
          <source>The index of the menu item in its menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b4e8aa507d1ccdba197aece96022c5de575f491" translate="yes" xml:space="preserve">
          <source>The index of the presently selected child entity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3349671d087d91f5046272e264177494423ac74" translate="yes" xml:space="preserve">
          <source>The index of the the menu item that is currently under the mouse, or &lt;code&gt;-1&lt;/code&gt; if there is no such item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71d2b0a0208f1ae1caa1b4bd68b68ac664c5f5a" translate="yes" xml:space="preserve">
          <source>The index of this column in the tumbler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee89f39c03bf698368e77aed49c93cd8a99cadc" translate="yes" xml:space="preserve">
          <source>The index of this delegate in the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ceb8f33e3ec925ef2692ffa5a29189e7037dc6b" translate="yes" xml:space="preserve">
          <source>The index of this delegate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d5e67d5a80ae5557e2318034f4281883a7543af" translate="yes" xml:space="preserve">
          <source>The index of this label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4868b7d6f0ec8d2c45c64d46b9b95cfd19d2b922" translate="yes" xml:space="preserve">
          <source>The index of this menu item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ebaac1a2757d02b9c121e04a4621afcdacbfa6d" translate="yes" xml:space="preserve">
          <source>The index of this minor tickmark.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6077dc2af33680a0e56a92ae5480258cffe55844" translate="yes" xml:space="preserve">
          <source>The index of this tickmark.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e19570612c14dc90d2484de0a2c2874db269ed" translate="yes" xml:space="preserve">
          <source>The index property can be useful if you have another model that contains images to display for each index, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04586e122a42128a74a99bf4076ff564f4c8ec8f" translate="yes" xml:space="preserve">
          <source>The indexes in the cache refer to the number of positions the item is from the first item appended into the cache. That is to say a cache with a capacity of 100, that has had 150 items appended will have a valid index range of 50 to 149. This allows inserting and retrieving items into the cache based on a theoretical infinite list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e47ab36f7a7b5dfec4d25e32626ba5bbdf55a4" translate="yes" xml:space="preserve">
          <source>The indicator of a &lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt;, a &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;, a &lt;a href=&quot;qradiobutton&quot;&gt;QRadioButton&lt;/a&gt;, a checkable &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; item or a checkable &lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b4faac203adce63aa353b4841a7f171f09e092f" translate="yes" xml:space="preserve">
          <source>The indicator of checkable menu items is styled using the &lt;a href=&quot;#indicator-sub&quot;&gt;::indicator&lt;/a&gt; subcontrol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275ab480e7cddc4b9261f4c6e9380c5479ee2666" translate="yes" xml:space="preserve">
          <source>The individual components of a route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef9ac32630f1cfe301619dc750b3e7466b96b893" translate="yes" xml:space="preserve">
          <source>The individual tabs can by styled using the &lt;a href=&quot;#tab-sub&quot;&gt;::tab&lt;/a&gt; subcontrol. The tabs support the &lt;a href=&quot;#only-one-ps&quot;&gt;:only-one&lt;/a&gt;, &lt;a href=&quot;#first-ps&quot;&gt;:first&lt;/a&gt;, &lt;a href=&quot;#last-ps&quot;&gt;:last&lt;/a&gt;, &lt;a href=&quot;#middle-ps&quot;&gt;:middle&lt;/a&gt;, &lt;a href=&quot;#previous-selected-ps&quot;&gt;:previous-selected&lt;/a&gt;, &lt;a href=&quot;#next-selected-ps&quot;&gt;:next-selected&lt;/a&gt;, &lt;a href=&quot;#selected-ps&quot;&gt;:selected&lt;/a&gt; pseudo states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02cf5069a688c2b6ae46714aae5def872d53cced" translate="yes" xml:space="preserve">
          <source>The information is stored in the system registry on Windows, and in XML preferences files on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;. On other Unix systems, in the absence of a standard, INI text files are used. See &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; documentation for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b940381f7e031c20b30f9a865a2379cfeba54aa3" translate="yes" xml:space="preserve">
          <source>The information on which clocks types may overflow and how to remedy that issue is documented along with the clock types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527d7a5d657e52f3d8611912548b9497109607a2" translate="yes" xml:space="preserve">
          <source>The information within a document can be accessed via two complementary interfaces: A cursor-based interface is used for editing, and a read-only hierarchical interface provides a high level overview of the document structure. The main advantage of the cursor-based interface is that the text can be edited using operations that mimic a user's interaction with an editor, without losing the underlying structure of the document. The read-only hierarchical interface is most useful when performing operations such as searching and document export.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3435f4a04ccab9192bd0afa2de8f02680435993" translate="yes" xml:space="preserve">
          <source>The informative text that provides a fuller description for the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7332c47e748c943058b7e15ed98f04b0d312af72" translate="yes" xml:space="preserve">
          <source>The initial I/O device is usually set in the constructor, but can be changed with &lt;a href=&quot;qdatastream#setDevice&quot;&gt;setDevice&lt;/a&gt;(). If you've reached the end of the data (or if there is no I/O device set) &lt;a href=&quot;qdatastream#atEnd&quot;&gt;atEnd&lt;/a&gt;() will return true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbff8415d28196d14aa8816ee5fe2111b11dbc0d" translate="yes" xml:space="preserve">
          <source>The initial camera state, with camera not loaded, the camera capabilities except of supported capture modes are unknown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12982f28b5117c7ec01ff31f4217f3c549b5dcdf" translate="yes" xml:space="preserve">
          <source>The initial camera state, with the camera not loaded. The camera capabilities (with the exception of supported capture modes) are unknown. This state saves the most power, but takes the longest time to be ready for capture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd09948e40ad3cc0a808da25331e438a8d30b6d" translate="yes" xml:space="preserve">
          <source>The initial camera status, with camera not loaded. The camera capabilities including supported capture settings may be unknown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b458e27a5919e8b03c34533d8cbe0055ca726689" translate="yes" xml:space="preserve">
          <source>The initial delay and the repetition interval are defined in milliseconds by &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#autoRepeatDelay-prop&quot;&gt;autoRepeatDelay&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#autoRepeatInterval-prop&quot;&gt;autoRepeatInterval&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89bf08539914e9a6de13245a0b4a1e7d740637b" translate="yes" xml:space="preserve">
          <source>The initial distribution of size between the widgets is determined by multiplying the initial size with the stretch factor. You can also use &lt;a href=&quot;qsplitter#setSizes&quot;&gt;setSizes&lt;/a&gt;() to set the sizes of all the widgets. The function &lt;a href=&quot;qsplitter#sizes&quot;&gt;sizes&lt;/a&gt;() returns the sizes set by the user. Alternatively, you can save and restore the sizes of the widgets from a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; using &lt;a href=&quot;qsplitter#saveState&quot;&gt;saveState&lt;/a&gt;() and &lt;a href=&quot;qsplitter#restoreState&quot;&gt;restoreState&lt;/a&gt;() respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce314e73345d9e93d482a95c6baa9aafbdaf384" translate="yes" xml:space="preserve">
          <source>The initial drag position is defined by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514d3443121065eb0b44ffd4504385958ed78a36" translate="yes" xml:space="preserve">
          <source>The initial linking of the server includes a temporary type library resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c80e1a7dd5a70767db49bcf0f62e79e1cb6cc5" translate="yes" xml:space="preserve">
          <source>The initial set of instantiable delegate items in a &lt;a href=&quot;qml-qtqml-models-delegatemodel&quot;&gt;DelegateModel&lt;/a&gt; is represented by its &lt;a href=&quot;qml-qtqml-models-delegatemodel#items-prop&quot;&gt;items&lt;/a&gt; group, which normally directly reflects the contents of the model assigned to &lt;a href=&quot;qml-qtqml-models-delegatemodel#model-attached-prop&quot;&gt;DelegateModel::model&lt;/a&gt;. This set can be changed to the contents of any other member of &lt;a href=&quot;qml-qtqml-models-delegatemodel#groups-attached-prop&quot;&gt;DelegateModel::groups&lt;/a&gt; by assigning the &lt;a href=&quot;qml-qtqml-models-delegatemodelgroup#name-prop&quot;&gt;name&lt;/a&gt; of that &lt;a href=&quot;qml-qtqml-models-delegatemodelgroup&quot;&gt;DelegateModelGroup&lt;/a&gt; to the &lt;a href=&quot;qml-qtqml-models-delegatemodel#filterOnGroup-prop&quot;&gt;DelegateModel::filterOnGroup&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238deb3f1efe99167ae9606b2beb247754212bd2" translate="yes" xml:space="preserve">
          <source>The initial state of this state (one of its child states).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8255b60f992ec130408acf6566ec22ad1889a1" translate="yes" xml:space="preserve">
          <source>The initial values to be used for setting up the data model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2437a8592b92c2b9c4ff8c30b6290221ae79e8a" translate="yes" xml:space="preserve">
          <source>The ink levels and printer status would be monitored by &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; properties. Updates to these properties would emit property changed signals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f205d9160bb531041657e0c951a4773e3d6c348" translate="yes" xml:space="preserve">
          <source>The inline object has various attributes that can be set, for example using, &lt;a href=&quot;qtextinlineobject#setWidth&quot;&gt;setWidth&lt;/a&gt;(), &lt;a href=&quot;qtextinlineobject#setAscent&quot;&gt;setAscent&lt;/a&gt;(), and &lt;a href=&quot;qtextinlineobject#setDescent&quot;&gt;setDescent&lt;/a&gt;(). The rectangle it occupies is given by &lt;a href=&quot;qtextinlineobject#rect&quot;&gt;rect&lt;/a&gt;(), and its direction by &lt;a href=&quot;qtextinlineobject#textDirection&quot;&gt;textDirection&lt;/a&gt;(). Its position in the text layout is given by &lt;a href=&quot;qtextinlineobject#textPosition&quot;&gt;textPosition&lt;/a&gt;(), and its format is given by &lt;a href=&quot;qtextinlineobject#format&quot;&gt;format&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad4fa09391444f02f32e29b6c1849d6961d11f1" translate="yes" xml:space="preserve">
          <source>The input context is used by the keyboard as well as concrete input methods. &lt;a href=&quot;qml-qtquick-virtualkeyboard-inputcontext&quot;&gt;InputContext&lt;/a&gt; is a singleton instance hosted by QML. An application should not directly interact with the input context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a139dafffb40fb9b0e147ac36c1f271bd423c1" translate="yes" xml:space="preserve">
          <source>The input context provides access to contextual information that originates from the application. This information includes, but is not limited to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3296be6a6dbf420c3997f9195782c7180dd4e8f" translate="yes" xml:space="preserve">
          <source>The input context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f306be8488b7817bb58f54dd5bebf3d39a63928d" translate="yes" xml:space="preserve">
          <source>The input data for the QXmlReader subclasses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaecfee86901cc0f1cc93b263f49cc624c388a00" translate="yes" xml:space="preserve">
          <source>The input data should not be processed from the Traces whose &lt;code&gt;canceled&lt;/code&gt; property set to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34c4a015d42bcc6a0fa9185c442979b83542604" translate="yes" xml:space="preserve">
          <source>The input device doesn't support scroll phase. This value was introduced in Qt 5.7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740658ab6bd08f7ea238ebdc5a12f2ccdcb20c08" translate="yes" xml:space="preserve">
          <source>The input engine also includes the default input method, which takes care of default processing if the active input method does not handle the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8356fbfffc7e37e3826b18c68547a693955d04f6" translate="yes" xml:space="preserve">
          <source>The input engine is responsible for routing input events to input methods. The actual input logic is implemented by the input methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b313d501166870a2b6d841be4e82ae9dfed7dfc" translate="yes" xml:space="preserve">
          <source>The input engine object is owned by &lt;a href=&quot;qml-qtquick-virtualkeyboard-inputcontext&quot;&gt;InputContext&lt;/a&gt;. Like the &lt;a href=&quot;qml-qtquick-virtualkeyboard-inputcontext&quot;&gt;InputContext&lt;/a&gt;, there is only one instance of the &lt;a href=&quot;qvirtualkeyboardinputengine&quot;&gt;QVirtualKeyboardInputEngine&lt;/a&gt;. The input engine contains API functions which the keyboard uses to map user interactions, such as key press and release events, to the input method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3761b36504cc3096b9a2f4cc41f82284ed3f29" translate="yes" xml:space="preserve">
          <source>The input engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc88d39a7469da945658aedce043dee59737c27" translate="yes" xml:space="preserve">
          <source>The input framework makes it easy to write custom input methods or to integrate 3rd party input engines. The input methods can be implemented in C++ or QML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34668dab04e4b94e535251a39f74af4c60f04fc7" translate="yes" xml:space="preserve">
          <source>The input framework provides the following main interfaces:</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
